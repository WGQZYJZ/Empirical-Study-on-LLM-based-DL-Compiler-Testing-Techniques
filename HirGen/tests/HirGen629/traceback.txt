==========mod==========
#[version = "0.0.5"]
def @main(%var_16860: Tensor[(9, 1, 4), float32]) -> Tensor[(9, 1, 4), float32] {
  %0 = cast(%var_16860, dtype="float32") /* ty=Tensor[(9, 1, 4), float32] */;
  log2(%0) /* ty=Tensor[(9, 1, 4), float32] */
}

def @func_3875() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %2 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %3 = %1.1;
  %4 = %2.0;
  (%3, %4)
}

def @func_4237() -> (Tensor[(6, 10, 16), int64],) {
  %5 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %6 = %5.0;
  (%6,)
}

def @func_1071() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %7 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %8 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %9 = %7.1;
  %10 = %8.0;
  (%9, %10)
}

def @func_11765() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) {
  %11 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
  %12 = @func_6881() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %13 = %12.0;
  %14 = cast(%13, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %15 = reshape(%14, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %16 = @func_1523(%15) /* ty=(Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %17 = %11.2;
  %18 = %16.3;
  (%17, %13, %18)
}

def @func_6554() -> Tensor[(6, 10, 16), int64] {
  @func_2791() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_10521() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %19 = @func_9879() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %20 = @func_7470() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %21 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
  %22 = %19.1;
  %23 = %20.1;
  %24 = %21.1;
  (%22, %23, %24)
}

def @func_2361(%var_2313: Tensor[(15, 11, 13), int64], %var_2314: Tensor[(15, 11, 13), int64]) -> (Tensor[(15, 11, 13), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32]) {
  %25 = cast(%var_2314, dtype="int64") /* ty=Tensor[(15, 11, 13), int64] */;
  %26 = shape_of(%var_2313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%var_2313, dtype="int64") /* ty=Tensor[(15, 11, 13), int64] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %29 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %30 = cast(%var_2313, dtype="float32") /* ty=Tensor[(15, 11, 13), float32] */;
  %31 = bitwise_or(%27, %28) /* ty=Tensor[(15, 11, 13), int64] */;
  %32 = %29.0;
  %33 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
  %34 = sqrt(%30) /* ty=Tensor[(15, 11, 13), float32] */;
  (%31, %32, %33, %34)
}

def @func_2689() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %35 = @func_1839() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %36 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %37 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %38 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %39 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %40 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %41 = %35.0;
  %42 = %36.0;
  %43 = %37.3;
  %44 = %38.1;
  %45 = %39.3;
  %46 = %40.0;
  (%41, %42, %43, %44, %45, %46)
}

def @func_9433() -> (Tensor[(6, 10, 16), int64],) {
  %47 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %48 = %47.3;
  (%48,)
}

def @func_5778() -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(22, 4), float32]) {
  %49 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %50 = cast(meta[relay.Constant][0] /* ty=Tensor[(22, 4), float64] */, dtype="float64") /* ty=Tensor[(22, 4), float64] */;
  %51 = reshape(%50, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %52 = @func_3813(%51) /* ty=(Tensor[(1, 11, 8), float64],) */;
  %53 = cast(meta[relay.Constant][0] /* ty=Tensor[(22, 4), float64] */, dtype="float32") /* ty=Tensor[(22, 4), float32] */;
  %54 = %49.0;
  %55 = %52.0;
  %56 = erf(%53) /* ty=Tensor[(22, 4), float32] */;
  (%54, %55, %56)
}

def @func_1863(%var_1856: Tensor[(9, 5, 6), uint16], %var_1857: Tensor[(9, 5, 6), uint16]) -> Tensor[(9, 5, 6), bool] {
  %57 = cast(%var_1857, dtype="bool") /* ty=Tensor[(9, 5, 6), bool] */;
  %58 = shape_of(%var_1856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%var_1856, dtype="bool") /* ty=Tensor[(9, 5, 6), bool] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%59, %60) /* ty=Tensor[(9, 5, 6), bool] */
}

def @func_10893() -> Tensor[(6, 10, 16), int64] {
  %61 = @func_8753() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %61.0
}

def @func_2373() -> (Tensor[(6, 10, 16), int64],) {
  %62 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  (%62,)
}

def @func_15921() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %63 = @func_9291() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %64 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %65 = %63.0;
  %66 = %64.1;
  (%65, %66)
}

def @func_15835(%var_15832: Tensor[(6, 15, 3), float64]) -> (Tensor[(6, 15, 3), float64],) {
  %67 = cast(%var_15832, dtype="float64") /* ty=Tensor[(6, 15, 3), float64] */;
  %68 = exp(%67) /* ty=Tensor[(6, 15, 3), float64] */;
  (%68,)
}

def @func_7618(%var_7615: Tensor[(13, 10, 4), float64]) -> Tensor[(13, 10, 4), float64] {
  %69 = cast(%var_7615, dtype="float64") /* ty=Tensor[(13, 10, 4), float64] */;
  cos(%69) /* ty=Tensor[(13, 10, 4), float64] */
}

def @func_2791() -> Tensor[(6, 10, 16), int64] {
  %70 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %70.1
}

def @func_16263(%var_16191: float64, %var_16192: Tensor[(65), float64]) -> (Tensor[(6, 10, 16), int64], float64, Tensor[(65), uint32], Tensor[(6, 10, 16), int64], Tensor[(?, 13, 5), bool], Tensor[(6, 10, 16), float64], Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) {
  %71 = @func_4078() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %72 = cast(meta[relay.Constant][1] /* ty=Tensor[(65), float64] */, dtype="uint32") /* ty=Tensor[(65), uint32] */;
  %73 = shape_of(%var_16192, dtype="int32") /* ty=Tensor[(1), int32] */;
  %74 = cast(%var_16192, dtype="uint32") /* ty=Tensor[(65), uint32] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %76 = @func_5568() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %77 = cast(%var_16191, dtype="float64") /* ty=float64 */;
  %78 = cast(%var_16192, dtype="float64") /* ty=Tensor[(65), float64] */;
  %79 = reshape(%77, newshape=[]) /* ty=float64 */;
  %80 = reshape(%78, newshape=[1, 13, 5]) /* ty=Tensor[(1, 13, 5), float64] */;
  %81 = @func_9185(%79, %80) /* ty=(Tensor[(?, 13, 5), bool],) */;
  %82 = %81.0;
  %83 = cast(meta[relay.Constant][1] /* ty=Tensor[(65), float64] */, dtype="bool") /* ty=Tensor[(65), bool] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="bool") /* ty=Tensor[(?, 13, 5), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %87 = cast(meta[relay.Constant][2] /* ty=Tensor[(264), uint32] */, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %88 = reshape(%87, newshape=[264]) /* ty=Tensor[(264), uint32] */;
  %89 = @func_4528(%88) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) */;
  %90 = @func_13290() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %91 = %71.0;
  %92 = maximum(%74, %75) /* ty=Tensor[(65), uint32] */;
  %93 = %76.0;
  %94 = equal(%85, %86) /* ty=Tensor[(?, 13, 5), bool] */;
  %95 = %89.1;
  %96 = %90.0;
  (%91, %var_16191, %92, %93, %94, %95, meta[relay.Constant][2] /* ty=Tensor[(264), uint32] */, %96)
}

def @func_15973() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %97 = @func_11400() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %98 = @func_9010() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %99 = %97.1;
  %100 = %98.0;
  (%99, %100)
}

def @func_5166(%var_5132: Tensor[(13, 15, 9), float64], %var_5145: Tensor[(13, 15, 9), float64]) -> (Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) {
  %101 = cast(%var_5132, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
  %102 = asin(%101) /* ty=Tensor[(13, 15, 9), float64] */;
  %103 = cast(%var_5145, dtype="bool") /* ty=Tensor[(13, 15, 9), bool] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%102, dtype="bool") /* ty=Tensor[(13, 15, 9), bool] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %107 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
  %108 = logical_and(%105, %106) /* ty=Tensor[(13, 15, 9), bool] */;
  %109 = %107.1;
  (%108, %109)
}

def @func_6516() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %110 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %111 = @func_5051() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %112 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %113 = %110.0;
  %114 = %111.0;
  %115 = %112.5;
  (%113, %114, %115)
}

def @func_11158() -> (Tensor[(6, 10, 16), int64],) {
  %116 = @func_8096() /* ty=Tensor[(6, 10, 16), int64] */;
  (%116,)
}

def @func_9510() -> Tensor[(6, 10, 16), bool] {
  %117 = @func_4060() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %117.0
}

def @func_13980() -> (Tensor[(6, 10, 16), int64],) {
  %118 = @func_13609() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %119 = %118.0;
  (%119,)
}

def @func_6184(%var_6180: Tensor[(1, 6, 5), float32]) -> Tensor[(1, 6, 5), float32] {
  %120 = cast(%var_6180, dtype="float32") /* ty=Tensor[(1, 6, 5), float32] */;
  acosh(%120) /* ty=Tensor[(1, 6, 5), float32] */
}

def @func_985() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %121 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %122 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %123 = %121.0;
  %124 = %122.3;
  (%123, %124)
}

def @func_7477() -> Tensor[(6, 10, 16), int64] {
  %125 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %125.1
}

def @func_6665() -> Tensor[(6, 10, 16), int64] {
  @func_5842() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_11113() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %126 = @func_4972() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %127 = @func_10310() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %128 = %126.1;
  %129 = %127.1;
  (%128, %129)
}

def @func_3509() -> (Tensor[(6, 10, 16), int64],) {
  %130 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %131 = %130.0;
  (%131,)
}

def @func_6848(%var_6838: bool) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(15, 12, 13), float32]) {
  %132 = @func_6713() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %133 = @func_2932() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %134 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %135 = @func_6713() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %136 = cast(%var_6838, dtype="bool") /* ty=bool */;
  %137 = reshape(%136, newshape=[]) /* ty=bool */;
  %138 = @func_5739(%137) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) */;
  %139 = @func_5876() /* ty=Tensor[(6, 10, 16), int64] */;
  %140 = %132.0;
  %141 = %133.1;
  %142 = %134.1;
  %143 = %135.0;
  %144 = %138.1;
  %145 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
  (%139, %140, %141, %142, %143, %144, %var_6838, %145)
}

def @func_5072() -> (Tensor[(3, 14, 1), float64],) {
  %146 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 14, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 1), float64] */;
  %147 = sigmoid(%146) /* ty=Tensor[(3, 14, 1), float64] */;
  (%147,)
}

def @func_9332() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %148 = @func_7109() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %149 = @func_5568() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %150 = %148.0;
  %151 = %149.0;
  (%150, %151)
}

def @func_11435() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %152 = @func_7974() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %153 = @func_3318() /* ty=Tensor[(6, 10, 16), int64] */;
  %154 = %152.1;
  (%153, %154)
}

def @func_9750(%var_9733: Tensor[(3, 15, 11), float32], %var_9734: Tensor[(3, 15, 11), float32]) -> (Tensor[(3, 15, 11), bool], Tensor[(6, 10, 16), int64]) {
  %155 = cast(%var_9734, dtype="bool") /* ty=Tensor[(3, 15, 11), bool] */;
  %156 = shape_of(%var_9733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%var_9733, dtype="bool") /* ty=Tensor[(3, 15, 11), bool] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %159 = @func_7245() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %160 = greater_equal(%157, %158) /* ty=Tensor[(3, 15, 11), bool] */;
  %161 = %159.0;
  (%160, %161)
}

def @func_771() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %162 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %163 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %164 = %163.0;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(6, 10, 16), float32] */;
  %166 = tan(%165) /* ty=Tensor[(6, 10, 16), float32] */;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
  %168 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %169 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %170 = %162.1;
  %171 = erf(%167) /* ty=Tensor[(6, 10, 16), float64] */;
  %172 = %168.0;
  %173 = %169.3;
  (%170, %171, %172, %173)
}

def @func_9879() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %174 = @func_7838() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %175 = @func_7016() /* ty=Tensor[(6, 10, 16), int64] */;
  %176 = %174.0;
  (%175, %176)
}

def @func_6262() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %177 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %178 = %177.0;
  %179 = cast(%178, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %180 = reshape(%179, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %181 = @func_1523(%180) /* ty=(Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %182 = %181.4;
  %183 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
  %184 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  (%178, %182, %183, %184)
}

def @func_5842() -> Tensor[(6, 10, 16), int64] {
  %185 = @func_3509() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %185.0
}

def @func_9185(%var_9156: float64, %var_9157: Tensor[(1, 13, 5), float64]) -> (Tensor[(?, 13, 5), bool],) {
  %186 = cast(%var_9156, dtype="float64") /* ty=float64 */;
  %187 = cast(%var_9157, dtype="float64") /* ty=Tensor[(1, 13, 5), float64] */;
  %188 = maximum(%186, %187) /* ty=Tensor[(1, 13, 5), float64] */;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(1, 13, 5), float64] */;
  %190 = shape_of(%var_9157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%var_9157, dtype="float64") /* ty=Tensor[(1, 13, 5), float64] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %193 = floor_mod(%191, %192) /* ty=Tensor[(?, 13, 5), float64] */;
  %194 = cast(%188, dtype="bool") /* ty=Tensor[(1, 13, 5), bool] */;
  %195 = shape_of(%193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %196 = cast(%193, dtype="bool") /* ty=Tensor[(?, 13, 5), bool] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %198 = not_equal(%196, %197) /* ty=Tensor[(?, 13, 5), bool] */;
  (%198,)
}

def @func_1523(%var_1460: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %199 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %200 = %199.1;
  %201 = cast(%var_1460, dtype="int16") /* ty=Tensor[(6, 10, 16), int16] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%200, dtype="int16") /* ty=Tensor[(6, 10, 16), int16] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %205 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %206 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %207 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %208 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %209 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %210 = bitwise_xor(%203, %204) /* ty=Tensor[(6, 10, 16), int16] */;
  %211 = %205.4;
  %212 = %206.1;
  %213 = %207.1;
  %214 = %208.2;
  %215 = %209.1;
  (%210, %211, %212, %213, %214, %215)
}

def @func_12233() -> Tensor[(6, 10, 16), int64] {
  %216 = @func_10751() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64]) */;
  %216.1
}

def @func_9813(%var_9803: Tensor[(4, 12, 13), float32]) -> (Tensor[(4, 12, 13), float32], Tensor[(6, 10, 16), int16]) {
  %217 = cast(%var_9803, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
  %218 = @func_9577() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int16]) */;
  %219 = log10(%217) /* ty=Tensor[(4, 12, 13), float32] */;
  %220 = %218.1;
  (%219, %220)
}

def @func_10238() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) {
  %221 = @func_1574() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %222 = %221.1;
  %223 = cast(%222, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
  %224 = reshape(%223, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), float64] */;
  %225 = @func_4429(%224) /* ty=(Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) */;
  %226 = @func_8206() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %227 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
  %228 = %225.0;
  %229 = %226.0;
  (%222, %227, %228, %229)
}

def @func_14009() -> Tensor[(22, 4), float32] {
  %230 = @func_5778() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(22, 4), float32]) */;
  %230.2
}

def @func_7288() -> (Tensor[(15, 12, 13), float32],) {
  %231 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
  (%231,)
}

def @func_8541() -> (Tensor[(6, 10, 16), float64],) {
  %232 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %233 = %232.0;
  (%233,)
}

def @func_13609() -> (Tensor[(6, 10, 16), int64],) {
  %234 = @func_8913() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %235 = %234.2;
  (%235,)
}

def @func_14989() -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64]) {
  %236 = @func_7186() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 117), uint64]) */;
  %237 = @func_5778() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(22, 4), float32]) */;
  %238 = %236.2;
  %239 = %237.1;
  (%238, %239)
}

def @func_4972() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %240 = @func_4762() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %241 = @func_4247() /* ty=Tensor[(6, 10, 16), int64] */;
  %242 = %240.1;
  (%241, %242)
}

def @func_9952() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %243 = @func_9468() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %244 = @func_7109() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %245 = %243.0;
  %246 = %244.0;
  (%245, %246)
}

def @func_15604() -> (Tensor[(15, 12, 13), float32],) {
  %247 = @func_7288() /* ty=(Tensor[(15, 12, 13), float32],) */;
  %248 = %247.0;
  %249 = cast(%248, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %250 = sinh(%249) /* ty=Tensor[(15, 12, 13), float32] */;
  (%250,)
}

def @func_15799() -> (Tensor[(6, 10, 16), int64], Tensor[(624), float32], Tensor[(4, 12, 13), float32], Tensor[(3, 14, 1), float64]) {
  %251 = @func_11158() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %252 = cast(meta[relay.Constant][4] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %253 = reshape(%252, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %254 = @func_9813(%253) /* ty=(Tensor[(4, 12, 13), float32], Tensor[(6, 10, 16), int16]) */;
  %255 = %254.0;
  %256 = cast(%255, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
  %257 = @func_7428() /* ty=(Tensor[(3, 14, 1), float64],) */;
  %258 = %251.0;
  %259 = atanh(%256) /* ty=Tensor[(4, 12, 13), float32] */;
  %260 = %257.0;
  (%258, meta[relay.Constant][4] /* ty=Tensor[(624), float32] */, %259, %260)
}

def @func_506() -> (Tensor[(6, 10, 16), int64],) {
  %261 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %262 = %261.1;
  (%262,)
}

def @func_5051() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %263 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %264 = @func_3711() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %265 = %263.0;
  %266 = %264.1;
  (%265, %266)
}

def @func_8913() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %267 = @func_2608() /* ty=(Tensor[(6, 10, 16), float64],) */;
  %268 = @func_7470() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %269 = @func_2932() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %270 = %267.0;
  %271 = %268.1;
  %272 = %269.0;
  (%270, %271, %272)
}

def @func_7530() -> (Tensor[(6, 10, 16), int64],) {
  %273 = @func_4622() /* ty=(Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) */;
  %274 = %273.1;
  (%274,)
}

def @func_6624() -> (Tensor[(6, 10, 16), int64],) {
  %275 = @func_4078() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %276 = %275.0;
  (%276,)
}

def @func_4798(%var_4780: bool, %var_4788: Tensor[(8, 15, 6), bool]) -> (Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) {
  %277 = cast(%var_4780, dtype="bool") /* ty=bool */;
  %278 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 15, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 15, 6), bool] */;
  %279 = cast(%var_4788, dtype="int16") /* ty=Tensor[(8, 15, 6), int16] */;
  %280 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(8, 15, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 15, 6), bool] */, dtype="int16") /* ty=Tensor[(8, 15, 6), int16] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %283 = logical_or(%277, %278) /* ty=Tensor[(8, 15, 6), bool] */;
  %284 = bitwise_xor(%281, %282) /* ty=Tensor[(8, 15, 6), int16] */;
  (%283, %284)
}

def @func_7838() -> (Tensor[(6, 10, 16), int64],) {
  %285 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %286 = %285.0;
  (%286,)
}

def @func_7261(%var_7257: Tensor[(9, 16, 5), float64]) -> Tensor[(9, 16, 5), float64] {
  %287 = cast(%var_7257, dtype="float64") /* ty=Tensor[(9, 16, 5), float64] */;
  log2(%287) /* ty=Tensor[(9, 16, 5), float64] */
}

def @func_8318() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %288 = @func_4006() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %289 = @func_7029() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %290 = @func_5128() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %291 = @func_7530() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %292 = %288.1;
  %293 = @func_7542() /* ty=Tensor[(6, 10, 16), int64] */;
  %294 = %289.0;
  %295 = %290.0;
  %296 = %291.0;
  (%292, %293, %294, %295, %296)
}

def @func_4622() -> (Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) {
  %297 = @func_3956() /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) */;
  %298 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %299 = %297.2;
  %300 = %298.0;
  (%299, %300)
}

def @func_8349() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %301 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %302 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
  %303 = %301.1;
  (%302, %303)
}

def @func_9067() -> (Tensor[(6, 10, 16), int64],) {
  %304 = @func_6665() /* ty=Tensor[(6, 10, 16), int64] */;
  (%304,)
}

def @func_15724() -> (Tensor[(6, 10, 16), int64],) {
  %305 = @func_6624() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %306 = %305.0;
  (%306,)
}

def @func_6154(%var_6146: Tensor[(88), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) {
  %307 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %308 = cast(%var_6146, dtype="float64") /* ty=Tensor[(88), float64] */;
  %309 = reshape(%308, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %310 = @func_3813(%309) /* ty=(Tensor[(1, 11, 8), float64],) */;
  %311 = %307.1;
  %312 = %310.0;
  (%311, %312, %var_6146)
}

def @func_14109(%var_14088: Tensor[(9, 12, 7), float64], %var_14089: Tensor[(9, 12, 7), float64]) -> (Tensor[(9, 12, 7), float64], Tensor[(6, 10, 16), int64]) {
  %313 = cast(%var_14089, dtype="float64") /* ty=Tensor[(9, 12, 7), float64] */;
  %314 = shape_of(%var_14088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%var_14088, dtype="float64") /* ty=Tensor[(9, 12, 7), float64] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %317 = floor_mod(%315, %316) /* ty=Tensor[(9, 12, 7), float64] */;
  %318 = @func_6665() /* ty=Tensor[(6, 10, 16), int64] */;
  (%317, %318)
}

def @func_12155() -> (Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %319 = @func_6031() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %320 = @func_7375() /* ty=(Tensor[(3, 14, 1), float64],) */;
  %321 = @func_11435() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %322 = %319.0;
  %323 = %320.0;
  %324 = @func_8447() /* ty=Tensor[(6, 10, 16), int64] */;
  %325 = %321.0;
  (%322, %323, %324, %325)
}

def @func_12187() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %326 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
  %327 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %328 = %326.2;
  %329 = %327.1;
  (%328, %329)
}

def @func_1839() -> (Tensor[(6, 10, 16), int64],) {
  %330 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %331 = %330.0;
  (%331,)
}

def @func_5972(%var_5936: Tensor[(3, 12, 9), int8], %var_5937: Tensor[(3, 12, 9), int8]) -> (Tensor[(3, 12, 9), bool], Tensor[(6, 10, 16), int64]) {
  %332 = cast(%var_5937, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
  %333 = shape_of(%var_5936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_5936, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %336 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %337 = less_equal(%334, %335) /* ty=Tensor[(3, 12, 9), bool] */;
  %338 = %336.0;
  (%337, %338)
}

def @func_13012() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %339 = @func_5663() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %340 = @func_6713() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %341 = %339.0;
  %342 = %340.0;
  %343 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
  (%341, %342, %343)
}

def @func_14634() -> Tensor[(6, 10, 16), int64] {
  %344 = @func_3137() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %344.0
}

def @func_3449() -> (Tensor[(6, 10, 16), int64],) {
  %345 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %346 = %345.4;
  (%346,)
}

def @func_10446() -> Tensor[(6, 10, 16), int64] {
  %347 = @func_5599() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %347.0
}

def @func_10142() -> Tensor[(6, 10, 16), int64] {
  %348 = @func_8318() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %348.3
}

def @func_4303(%var_4285: Tensor[(8, 7, 11), float32]) -> (Tensor[(8, 7, 11), float32],) {
  %349 = cast(%var_4285, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
  %350 = log10(%349) /* ty=Tensor[(8, 7, 11), float32] */;
  (%350,)
}

def @func_8611() -> (Tensor[(6, 10, 16), int64],) {
  %351 = @func_4006() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %352 = %351.1;
  (%352,)
}

def @func_15945(%var_15940: Tensor[(9, 8, 16), int64]) -> Tensor[(9, 8, 16), bool] {
  %353 = cast(-5 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %354 = cast(%var_15940, dtype="bool") /* ty=Tensor[(9, 8, 16), bool] */;
  less(%353, %354) /* ty=Tensor[(9, 8, 16), bool] */
}

def @func_2896() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %355 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %356 = @func_2072() /* ty=Tensor[(6, 10, 16), int64] */;
  %357 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
  %358 = %355.1;
  (%356, %357, %358)
}

def @func_9681() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64]) {
  %359 = @func_4681() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %360 = @func_7029() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %361 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 25), float64] */, dtype="float64") /* ty=Tensor[(1, 25), float64] */;
  %362 = reshape(%361, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float64] */;
  %363 = @func_2178(%362) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) */;
  %364 = %359.0;
  %365 = %360.0;
  %366 = %363.0;
  (%364, %365, %366, meta[relay.Constant][6] /* ty=Tensor[(1, 25), float64] */)
}

def @func_6363() -> (Tensor[(6, 10, 16), int64], bool, bool, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) {
  %367 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %368 = reshape(%367, newshape=[]) /* ty=bool */;
  %369 = @func_5739(%368) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) */;
  %370 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %371 = @func_2608() /* ty=(Tensor[(6, 10, 16), float64],) */;
  %372 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  %373 = %369.2;
  %374 = %370.0;
  %375 = %371.0;
  (%372, %373, False /* ty=bool */, %374, %375)
}

def @func_7866() -> (Tensor[(6, 10, 16), bool],) {
  %376 = @func_4060() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %377 = %376.0;
  (%377,)
}

def @func_8483() -> (Tensor[(6, 10, 16), int64],) {
  %378 = @func_6785() /* ty=Tensor[(6, 10, 16), int64] */;
  (%378,)
}

def @func_15184() -> Tensor[(6, 10, 16), int64] {
  %379 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %379.1
}

def @func_10996() -> (Tensor[(6, 10, 16), int64],) {
  %380 = @func_2072() /* ty=Tensor[(6, 10, 16), int64] */;
  (%380,)
}

def @func_15453() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %381 = @func_6758() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %382 = @func_6785() /* ty=Tensor[(6, 10, 16), int64] */;
  %383 = %381.0;
  %384 = @func_8096() /* ty=Tensor[(6, 10, 16), int64] */;
  (%382, %383, %384)
}

def @func_5410() -> Tensor[(6, 10, 16), int64] {
  %385 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %385.1
}

def @func_2516(%var_2510: uint32, %var_2511: Tensor[(11, 6, 4), uint32]) -> Tensor[(11, 6, 4), bool] {
  %386 = cast(%var_2510, dtype="bool") /* ty=bool */;
  %387 = cast(%var_2511, dtype="bool") /* ty=Tensor[(11, 6, 4), bool] */;
  equal(%386, %387) /* ty=Tensor[(11, 6, 4), bool] */
}

def @func_14511() -> Tensor[(6, 10, 16), int64] {
  %388 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %388.4
}

def @func_5739(%var_5736: bool) -> (Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) {
  %389 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %390 = cast(%var_5736, dtype="bool") /* ty=bool */;
  %391 = cast(meta[relay.Constant][7] /* ty=Tensor[(720), bool] */, dtype="bool") /* ty=Tensor[(720), bool] */;
  %392 = reshape(%390, newshape=[]) /* ty=bool */;
  %393 = reshape(%391, newshape=[8, 15, 6]) /* ty=Tensor[(8, 15, 6), bool] */;
  %394 = @func_4798(%392, %393) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) */;
  %395 = %389.1;
  %396 = %394.1;
  (%395, %396, %var_5736, meta[relay.Constant][7] /* ty=Tensor[(720), bool] */)
}

def @func_16153() -> (Tensor[(6, 10, 16), int64],) {
  %397 = @func_9791() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %398 = %397.0;
  (%398,)
}

def @func_12035() -> Tensor[(5, 4, 8), uint64] {
  %399 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 4, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 4, 8), uint64] */;
  %400 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(5, 4, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 4, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 4, 8), uint64] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%401, %402) /* ty=Tensor[(5, 4, 8), uint64] */
}

def @func_1731() -> Tensor[(6, 10, 16), int64] {
  @func_922() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_5474() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32]) {
  %403 = @func_3956() /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) */;
  %404 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %405 = %404.0;
  %406 = cast(%405, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %407 = reshape(%406, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %408 = @func_1313(%407) /* ty=(Tensor[(6, 10, 16), int32],) */;
  %409 = %403.0;
  %410 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
  %411 = %408.0;
  (%409, %410, %405, %411)
}

def @func_9791() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %412 = @func_8868() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %413 = %412.0;
  %414 = @func_6785() /* ty=Tensor[(6, 10, 16), int64] */;
  (%413, %414)
}

def @func_6954() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %415 = @func_4060() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %416 = @func_6881() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %417 = %415.0;
  %418 = %416.0;
  (%417, %418)
}

def @func_12279() -> (Tensor[(6, 10, 16), float64],) {
  %419 = @func_11765() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) */;
  %420 = %419.2;
  (%420,)
}

def @func_11285() -> Tensor[(6, 10, 16), int64] {
  %421 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %421.4
}

def @func_1313(%var_1301: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), int32],) {
  %422 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %423 = %422.0;
  %424 = cast(%var_1301, dtype="int32") /* ty=Tensor[(6, 10, 16), int32] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%423, dtype="int32") /* ty=Tensor[(6, 10, 16), int32] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %428 = minimum(%426, %427) /* ty=Tensor[(6, 10, 16), int32] */;
  (%428,)
}

def @func_4168() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) {
  %429 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %430 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %431 = cast(meta[relay.Constant][10] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
  %432 = reshape(%431, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float64] */;
  %433 = @func_2178(%432) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) */;
  %434 = %429.0;
  %435 = %430.1;
  %436 = %433.0;
  (%434, %435, %436, meta[relay.Constant][10] /* ty=Tensor[(25), float64] */)
}

def @func_4247() -> Tensor[(6, 10, 16), int64] {
  %437 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %437.0
}

def @func_16122() -> Tensor[(6, 10, 16), int64] {
  %438 = @func_11645() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %438.0
}

def @func_3605(%var_3575: uint32, %var_3576: Tensor[(264), uint32]) -> (Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32], Tensor[(11, 6, 4), int32]) {
  %439 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %440 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %441 = %440.1;
  %442 = cast(%441, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %443 = reshape(%442, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %444 = @func_1313(%443) /* ty=(Tensor[(6, 10, 16), int32],) */;
  %445 = cast(%var_3575, dtype="uint32") /* ty=uint32 */;
  %446 = cast(%var_3576, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %447 = reshape(%445, newshape=[]) /* ty=uint32 */;
  %448 = reshape(%446, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint32] */;
  %449 = @func_2516(%447, %448) /* ty=Tensor[(11, 6, 4), bool] */;
  %450 = cast(%var_3576, dtype="int32") /* ty=Tensor[(264), int32] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="int32") /* ty=Tensor[(11, 6, 4), int32] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %454 = %439.0;
  %455 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
  %456 = %444.0;
  %457 = right_shift(%452, %453) /* ty=Tensor[(11, 6, 4), int32] */;
  (%454, %var_3575, %455, %441, %456, %457)
}

def @func_5876() -> Tensor[(6, 10, 16), int64] {
  %458 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %458.1
}

def @func_14696() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %459 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  %460 = @func_5842() /* ty=Tensor[(6, 10, 16), int64] */;
  (%459, %460)
}

def @func_16672(%var_16666: Tensor[(495), float32]) -> (Tensor[(1, 11, 8), float64], Tensor[(3, 15, 11), bool], Tensor[(495), float32]) {
  %461 = @func_15878() /* ty=(Tensor[(1, 11, 8), float64],) */;
  %462 = %461.0;
  %463 = cast(%462, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
  %464 = cast(%var_16666, dtype="float32") /* ty=Tensor[(495), float32] */;
  %465 = cast(%var_16666, dtype="float32") /* ty=Tensor[(495), float32] */;
  %466 = reshape(%464, newshape=[3, 15, 11]) /* ty=Tensor[(3, 15, 11), float32] */;
  %467 = reshape(%465, newshape=[3, 15, 11]) /* ty=Tensor[(3, 15, 11), float32] */;
  %468 = @func_9750(%466, %467) /* ty=(Tensor[(3, 15, 11), bool], Tensor[(6, 10, 16), int64]) */;
  %469 = atanh(%463) /* ty=Tensor[(1, 11, 8), float64] */;
  %470 = %468.0;
  (%469, %470, %var_16666)
}

def @func_3266(%var_3237: Tensor[(2145), int64]) -> (Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32], Tensor[(2145), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %471 = cast(%var_3237, dtype="int64") /* ty=Tensor[(2145), int64] */;
  %472 = cast(%var_3237, dtype="int64") /* ty=Tensor[(2145), int64] */;
  %473 = reshape(%471, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int64] */;
  %474 = reshape(%472, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int64] */;
  %475 = @func_2361(%473, %474) /* ty=(Tensor[(15, 11, 13), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32]) */;
  %476 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %477 = @func_2896() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %478 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
  %479 = %475.3;
  %480 = %476.0;
  %481 = %477.2;
  (%478, %479, %var_3237, %480, %481)
}

def @func_13731() -> (Tensor[(6, 10, 16), int64],) {
  %482 = @func_7838() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %483 = %482.0;
  (%483,)
}

def @func_10310() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %484 = @func_5663() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %485 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %486 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %487 = %484.0;
  %488 = %485.0;
  (%486, %487, %488)
}

def @func_4006() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %489 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %490 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %491 = %489.1;
  %492 = %490.4;
  (%491, %492)
}

def @func_9797() -> (Tensor[(6, 10, 16), int64],) {
  %493 = @func_4886() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %494 = %493.3;
  (%494,)
}

def @func_15536() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %495 = @func_8541() /* ty=(Tensor[(6, 10, 16), float64],) */;
  %496 = %495.0;
  %497 = @func_5876() /* ty=Tensor[(6, 10, 16), int64] */;
  (%496, %497)
}

def @func_10039() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %498 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %499 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %500 = %498.0;
  %501 = %499.1;
  (%500, %501)
}

def @func_2072() -> Tensor[(6, 10, 16), int64] {
  %502 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %502.0
}

def @func_8206() -> (Tensor[(6, 10, 16), int64],) {
  %503 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %504 = %503.0;
  (%504,)
}

def @func_2608() -> (Tensor[(6, 10, 16), float64],) {
  %505 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %506 = %505.1;
  %507 = cast(%506, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
  %508 = asinh(%507) /* ty=Tensor[(6, 10, 16), float64] */;
  (%508,)
}

def @func_13902() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %509 = @func_3875() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %510 = @func_10521() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %511 = %509.0;
  %512 = @func_11330() /* ty=Tensor[(6, 10, 16), int64] */;
  %513 = %510.2;
  (%511, %512, %513)
}

def @func_9979() -> (Tensor[(6, 10, 16), int64],) {
  %514 = @func_6624() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %515 = %514.0;
  (%515,)
}

def @func_8801(%var_8780: Tensor[(13, 13, 2), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(13, 13, 2), float64]) {
  %516 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %517 = cast(%var_8780, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
  %518 = cos(%517) /* ty=Tensor[(13, 13, 2), float32] */;
  %519 = cast(%518, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
  %520 = %516.0;
  %521 = asinh(%519) /* ty=Tensor[(13, 13, 2), float64] */;
  (%520, %521)
}

def @func_4060() -> (Tensor[(6, 10, 16), bool],) {
  %522 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %523 = %522.0;
  (%523,)
}

def @func_10113() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %524 = @func_6306() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %525 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %526 = %524.1;
  %527 = %525.0;
  (%526, %527)
}

def @func_3180(%var_3152: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %528 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %529 = %528.1;
  %530 = cast(%var_3152, dtype="uint32") /* ty=Tensor[(6, 10, 16), uint32] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%529, dtype="uint32") /* ty=Tensor[(6, 10, 16), uint32] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %534 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %535 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %536 = logical_xor(%532, %533) /* ty=Tensor[(6, 10, 16), uint32] */;
  %537 = %534.0;
  %538 = %535.0;
  (%536, %537, %538)
}

def @func_12756() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(?, 25), bool]) {
  %539 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %540 = @func_6163() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %541 = @func_8206() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %542 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 25), float64] */, dtype="float64") /* ty=Tensor[(1, 25), float64] */;
  %543 = reshape(%542, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float64] */;
  %544 = @func_2178(%543) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) */;
  %545 = %544.1;
  %546 = cast(%545, dtype="bool") /* ty=Tensor[(5, 5, 1), bool] */;
  %547 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(1, 25), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %548 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 25), float64] */, dtype="bool") /* ty=Tensor[(1, 25), bool] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %550 = %539.0;
  %551 = %540.0;
  %552 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
  %553 = %541.0;
  %554 = greater(%548, %549) /* ty=Tensor[(?, 25), bool] */;
  (%550, %551, %552, %553, %554)
}

def @func_8753() -> (Tensor[(6, 10, 16), int64],) {
  %555 = @func_8069() /* ty=Tensor[(6, 10, 16), int64] */;
  (%555,)
}

def @func_5128() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) {
  %556 = @func_4972() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %557 = cast(meta[relay.Constant][12] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
  %558 = reshape(%557, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float64] */;
  %559 = @func_2178(%558) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) */;
  %560 = @func_1685() /* ty=Tensor[(6, 10, 16), int64] */;
  %561 = %556.1;
  %562 = %559.0;
  (%560, %561, %562, meta[relay.Constant][12] /* ty=Tensor[(25), float64] */)
}

def @func_14851() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %563 = @func_6758() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %564 = @func_7109() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %565 = @func_5599() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %566 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %567 = %563.0;
  %568 = %564.0;
  %569 = %565.0;
  %570 = %566.3;
  (%567, %568, %569, %570)
}

def @func_16514() -> (Tensor[(2, 4, 4), float64], Tensor[(6, 10, 16), int64], Tensor[(2, 4, 4), float64], Tensor[(6, 10, 16), int64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32]) {
  %571 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
  %572 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(2, 4, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %575 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
  %576 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %577 = cast(meta[relay.Constant][15] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %578 = reshape(%577, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %579 = mod(%573, %574) /* ty=Tensor[(2, 4, 4), float64] */;
  %580 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
  %581 = cosh(%575) /* ty=Tensor[(2, 4, 4), float64] */;
  %582 = %576.2;
  %583 = @func_12319(%578) /* ty=Tensor[(12, 14, 14), float32] */;
  (%579, %580, %581, %582, %583, meta[relay.Constant][15] /* ty=Tensor[(2352), float32] */)
}

def @func_16681() -> Tensor[(6, 10, 16), int64] {
  @func_10088() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_2995(%var_2983: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), float32],) {
  %584 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %585 = %584.0;
  %586 = cast(%var_2983, dtype="float32") /* ty=Tensor[(6, 10, 16), float32] */;
  %587 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%585, dtype="float32") /* ty=Tensor[(6, 10, 16), float32] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %590 = floor_divide(%588, %589) /* ty=Tensor[(6, 10, 16), float32] */;
  (%590,)
}

def @func_2178(%var_2157: Tensor[(5, 5, 1), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) {
  %591 = cast(%var_2157, dtype="float64") /* ty=Tensor[(5, 5, 1), float64] */;
  %592 = sqrt(%591) /* ty=Tensor[(5, 5, 1), float64] */;
  %593 = cast(%592, dtype="float32") /* ty=Tensor[(5, 5, 1), float32] */;
  %594 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
  %595 = sin(%593) /* ty=Tensor[(5, 5, 1), float32] */;
  (%594, %595)
}

def @func_13525() -> (Tensor[(6, 10, 16), int64],) {
  %596 = @func_9291() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %597 = %596.0;
  (%597,)
}

def @func_1685() -> Tensor[(6, 10, 16), int64] {
  %598 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %598.0
}

def @func_6031() -> (Tensor[(6, 10, 16), int64],) {
  %599 = @func_5876() /* ty=Tensor[(6, 10, 16), int64] */;
  (%599,)
}

def @func_522() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %600 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %601 = %600.0;
  %602 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  (%601, %602)
}

def @func_4681() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %603 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %604 = @func_1685() /* ty=Tensor[(6, 10, 16), int64] */;
  %605 = %603.1;
  (%604, %605)
}

def @func_6758() -> (Tensor[(6, 10, 16), int64],) {
  %606 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
  (%606,)
}

def @func_9137(%var_9126: Tensor[(5, 6, 1), float32], %var_9135: Tensor[(264), uint32]) -> (Tensor[(5, 6, 1), float32], Tensor[(6, 10, 16), float64], Tensor[(264), uint32]) {
  %607 = cast(%var_9126, dtype="float32") /* ty=Tensor[(5, 6, 1), float32] */;
  %608 = cast(%var_9135, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %609 = reshape(%608, newshape=[264]) /* ty=Tensor[(264), uint32] */;
  %610 = @func_4528(%609) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) */;
  %611 = cosh(%607) /* ty=Tensor[(5, 6, 1), float32] */;
  %612 = %610.1;
  (%611, %612, %var_9135)
}

def @func_7671() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %613 = @func_7470() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %614 = %613.0;
  %615 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  (%614, %615)
}

def @func_9468() -> (Tensor[(6, 10, 16), int64],) {
  %616 = @func_6554() /* ty=Tensor[(6, 10, 16), int64] */;
  (%616,)
}

def @func_1641() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %617 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %618 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %619 = %617.1;
  %620 = %618.2;
  (%619, %620)
}

def @func_6271() -> Tensor[(6, 10, 16), int64] {
  %621 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %621.1
}

def @func_7428() -> (Tensor[(3, 14, 1), float64],) {
  %622 = @func_5072() /* ty=(Tensor[(3, 14, 1), float64],) */;
  %623 = %622.0;
  (%623,)
}

def @func_3956() -> (Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) {
  %624 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %625 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %626 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %627 = cast(meta[relay.Constant][16] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %628 = cast(meta[relay.Constant][17] /* ty=Tensor[(264), uint32] */, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %629 = reshape(%627, newshape=[]) /* ty=uint32 */;
  %630 = reshape(%628, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint32] */;
  %631 = @func_2516(%629, %630) /* ty=Tensor[(11, 6, 4), bool] */;
  %632 = cast(%631, dtype="float64") /* ty=Tensor[(11, 6, 4), float64] */;
  %633 = %624.1;
  %634 = %625.4;
  %635 = %626.0;
  %636 = rsqrt(%632) /* ty=Tensor[(11, 6, 4), float64] */;
  (%633, meta[relay.Constant][16] /* ty=uint32 */, meta[relay.Constant][17] /* ty=Tensor[(264), uint32] */, %634, %635, %636)
}

def @func_4945() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %637 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %638 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %639 = %637.2;
  %640 = @func_2791() /* ty=Tensor[(6, 10, 16), int64] */;
  %641 = %638.0;
  (%639, %640, %641)
}

def @func_7470() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %642 = @func_3956() /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) */;
  %643 = @func_2896() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %644 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %645 = %642.3;
  %646 = %643.1;
  %647 = %644.1;
  (%645, %646, %647)
}

def @func_10822(%var_10787: Tensor[(30), float32], %var_10788: Tensor[(264, 1), uint32], %var_10797: Tensor[(720), bool]) -> (Tensor[(6, 10, 16), int64], Tensor[(5, 6, 1), float32], Tensor[(30), float32], Tensor[(264, 1), uint32], Tensor[(8, 15, 6), bool], bool, Tensor[(720), bool]) {
  %648 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %649 = cast(%var_10787, dtype="float32") /* ty=Tensor[(30), float32] */;
  %650 = cast(%var_10788, dtype="uint32") /* ty=Tensor[(264, 1), uint32] */;
  %651 = reshape(%649, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), float32] */;
  %652 = reshape(%650, newshape=[264]) /* ty=Tensor[(264), uint32] */;
  %653 = @func_9137(%651, %652) /* ty=(Tensor[(5, 6, 1), float32], Tensor[(6, 10, 16), float64], Tensor[(264), uint32]) */;
  %654 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %655 = cast(%var_10797, dtype="bool") /* ty=Tensor[(720), bool] */;
  %656 = reshape(%654, newshape=[]) /* ty=bool */;
  %657 = reshape(%655, newshape=[8, 15, 6]) /* ty=Tensor[(8, 15, 6), bool] */;
  %658 = @func_4798(%656, %657) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) */;
  %659 = %648.0;
  %660 = %653.0;
  %661 = %658.0;
  (%659, %660, %var_10787, %var_10788, %661, True /* ty=bool */, %var_10797)
}

def @func_8096() -> Tensor[(6, 10, 16), int64] {
  %662 = @func_7671() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %662.1
}

def @func_11400() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %663 = @func_9010() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %664 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  %665 = %663.0;
  (%664, %665)
}

def @func_341() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %666 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  %667 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  %668 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  %669 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  (%666, %667, %668, %669)
}

def @func_5599() -> (Tensor[(6, 10, 16), int64],) {
  %670 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %671 = %670.1;
  (%671,)
}

def @func_16733(%var_16693: Tensor[(4, 6, 12), int8], %var_16694: Tensor[(4, 6, 12), int8], %var_16707: Tensor[(4, 6, 12), int8]) -> (Tensor[(4, 6, 12), int8], Tensor[(6, 10, 16), int64], Tensor[(4, 6, 12), float64]) {
  %672 = cast(%var_16694, dtype="int8") /* ty=Tensor[(4, 6, 12), int8] */;
  %673 = shape_of(%var_16693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%var_16693, dtype="int8") /* ty=Tensor[(4, 6, 12), int8] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %676 = @func_3711() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %677 = cast(%var_16707, dtype="bool") /* ty=Tensor[(4, 6, 12), bool] */;
  %678 = shape_of(%var_16693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%var_16693, dtype="bool") /* ty=Tensor[(4, 6, 12), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %681 = equal(%679, %680) /* ty=Tensor[(4, 6, 12), bool] */;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(4, 6, 12), float64] */;
  %683 = right_shift(%674, %675) /* ty=Tensor[(4, 6, 12), int8] */;
  %684 = %676.2;
  %685 = sin(%682) /* ty=Tensor[(4, 6, 12), float64] */;
  (%683, %684, %685)
}

def @func_3711() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %686 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %687 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %688 = @func_3509() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %689 = %686.1;
  %690 = %687.0;
  %691 = %688.0;
  (%689, %690, %691)
}

def @func_6306() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %692 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %693 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  (%692, %693)
}

def @func_16627() -> (Tensor[(6, 10, 16), int64],) {
  %694 = @func_8447() /* ty=Tensor[(6, 10, 16), int64] */;
  (%694,)
}

def @func_11783() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %695 = @func_7974() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %696 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %697 = %695.1;
  %698 = %696.1;
  (%697, %698)
}

def @func_13949() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %699 = @func_8562() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755, 1), float64]) */;
  %700 = @func_7630() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %701 = %699.0;
  %702 = %700.0;
  %703 = @func_2072() /* ty=Tensor[(6, 10, 16), int64] */;
  (%701, %702, %703)
}

def @func_4078() -> (Tensor[(6, 10, 16), int64],) {
  %704 = @func_3875() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %705 = %704.1;
  (%705,)
}

def @func_1013() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %706 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %707 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %708 = %706.1;
  %709 = %707.0;
  (%708, %709)
}

def @func_8250(%var_8214: float32, %var_8215: Tensor[(12, 1, 5), float32]) -> (Tensor[(12, 1, 5), float32], Tensor[(12, 1, 5), bool]) {
  %710 = cast(%var_8214, dtype="float32") /* ty=float32 */;
  %711 = cast(%var_8215, dtype="float32") /* ty=Tensor[(12, 1, 5), float32] */;
  %712 = cast(%var_8214, dtype="bool") /* ty=bool */;
  %713 = cast(%var_8215, dtype="bool") /* ty=Tensor[(12, 1, 5), bool] */;
  %714 = power(%710, %711) /* ty=Tensor[(12, 1, 5), float32] */;
  %715 = less(%712, %713) /* ty=Tensor[(12, 1, 5), bool] */;
  (%714, %715)
}

def @func_16570() -> Tensor[(6, 10, 16), int64] {
  %716 = @func_1705() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %716.0
}

def @func_680() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %717 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %718 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %719 = %717.0;
  %720 = %718.0;
  (%719, %720)
}

def @func_8993() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(6, 10, 16), float64]) {
  %721 = @func_1574() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %722 = @func_5599() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %723 = cast(meta[relay.Constant][18] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %724 = reshape(%723, newshape=[]) /* ty=uint32 */;
  %725 = @func_6478(%724) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) */;
  %726 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %727 = %721.0;
  %728 = @func_6554() /* ty=Tensor[(6, 10, 16), int64] */;
  %729 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
  %730 = %722.0;
  %731 = %725.1;
  %732 = %726.1;
  (%727, %728, %729, %730, %731, meta[relay.Constant][18] /* ty=uint32 */, %732)
}

def @func_5257() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %733 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
  %735 = reshape(%734, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), float64] */;
  %736 = @func_4429(%735) /* ty=(Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) */;
  %737 = %736.1;
  (%733, %737)
}

def @func_443() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %738 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %739 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %740 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %741 = %740.3;
  %742 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %743 = %742.0;
  %744 = cast(%743, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %745 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%741, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %748 = %738.2;
  %749 = %739.0;
  %750 = equal(%746, %747) /* ty=Tensor[(6, 10, 16), bool] */;
  (%748, %749, %750)
}

def @func_7706() -> (Tensor[(6, 10, 16), int64], Tensor[(11, ?), uint32], Tensor[(1, 11), uint32]) {
  %751 = @func_6516() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %752 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 11), uint32] */, dtype="uint32") /* ty=Tensor[(1, 11), uint32] */;
  %753 = reshape(%752, newshape=[11, 1]) /* ty=Tensor[(11, 1), uint32] */;
  %754 = @func_5699(%753) /* ty=(Tensor[(11, ?), uint32],) */;
  %755 = %751.0;
  %756 = %754.0;
  (%755, %756, meta[relay.Constant][19] /* ty=Tensor[(1, 11), uint32] */)
}

def @func_6713() -> (Tensor[(6, 10, 16), int64],) {
  %757 = @func_5599() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %758 = %757.0;
  (%758,)
}

def @func_6920() -> Tensor[(6, 10, 16), int64] {
  @func_6554() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_5699(%var_5692: Tensor[(11, 1), uint32]) -> (Tensor[(11, ?), uint32],) {
  %759 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 1), uint32] */, dtype="uint32") /* ty=Tensor[(11, 1), uint32] */;
  %760 = shape_of(%var_5692, dtype="int32") /* ty=Tensor[(2), int32] */;
  %761 = cast(%var_5692, dtype="uint32") /* ty=Tensor[(11, 1), uint32] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %763 = left_shift(%761, %762) /* ty=Tensor[(11, ?), uint32] */;
  (%763,)
}

def @func_295() -> Tensor[(6, 10, 16), int64] {
  %764 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
  %765 = log10(%764) /* ty=Tensor[(6, 10, 16), float64] */;
  %766 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 10, 16), float64] */, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%765, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%768, %769) /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_4762() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %770 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %771 = @func_3875() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %772 = %770.0;
  %773 = %771.1;
  (%772, %773)
}

def @func_14948() -> Tensor[(6, 10, 16), int64] {
  %774 = @func_5568() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %774.0
}

def @func_12319(%var_12313: Tensor[(12, 14, 14), float32]) -> Tensor[(12, 14, 14), float32] {
  %775 = cast(%var_12313, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
  sin(%775) /* ty=Tensor[(12, 14, 14), float32] */
}

def @func_11132() -> (Tensor[(6, 10, 16), float64],) {
  %776 = @func_8541() /* ty=(Tensor[(6, 10, 16), float64],) */;
  %777 = %776.0;
  (%777,)
}

def @func_1400() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %778 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %779 = %778.0;
  %780 = cast(%779, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
  %781 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %782 = cosh(%780) /* ty=Tensor[(6, 10, 16), float64] */;
  %783 = %781.2;
  (%782, %783)
}

def @func_13659() -> Tensor[(6, 10, 16), int64] {
  @func_11285() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_12303() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32]) {
  %784 = @func_12155() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %785 = @func_9291() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %786 = %784.3;
  %787 = cast(%786, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %788 = reshape(%787, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %789 = @func_2995(%788) /* ty=(Tensor[(6, 10, 16), float32],) */;
  %790 = %785.0;
  %791 = %789.0;
  (%786, %790, %791)
}

def @func_3389(%var_3386: Tensor[(14, 7, 16), float32]) -> Tensor[(14, 7, 16), float32] {
  %792 = cast(%var_3386, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  atanh(%792) /* ty=Tensor[(14, 7, 16), float32] */
}

def @func_10986() -> (Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64]) {
  %793 = @func_10310() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %794 = @func_7428() /* ty=(Tensor[(3, 14, 1), float64],) */;
  %795 = %793.1;
  %796 = cast(%795, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %797 = reshape(%796, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %798 = @func_1523(%797) /* ty=(Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %799 = %794.0;
  %800 = %798.4;
  (%795, %799, %800)
}

def @func_15298(%var_15219: Tensor[(66, 4), uint32], %var_15234: Tensor[(1755), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), float64], Tensor[(1755), float64], Tensor[(1755), float64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(66, 4), bool], Tensor[(6, 10, 16), float64], Tensor[(66, 4), int64]) {
  %801 = @func_13568() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %802 = @func_11765() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) */;
  %803 = cast(%var_15219, dtype="uint32") /* ty=Tensor[(66, 4), uint32] */;
  %804 = reshape(%803, newshape=[264]) /* ty=Tensor[(264), uint32] */;
  %805 = @func_4528(%804) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) */;
  %806 = cast(%var_15234, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %807 = reshape(%806, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %808 = @func_11196(%807) /* ty=(Tensor[(15, 5, 5), float32], Tensor[(720), bool], bool, Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(6, 10, 16), int64]) */;
  %809 = @func_13902() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %810 = @func_13980() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %811 = @func_10624() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64]) */;
  %812 = cast(%var_15219, dtype="float32") /* ty=Tensor[(66, 4), float32] */;
  %813 = exp(%812) /* ty=Tensor[(66, 4), float32] */;
  %814 = cast(%813, dtype="float64") /* ty=Tensor[(66, 4), float64] */;
  %815 = acos(%814) /* ty=Tensor[(66, 4), float64] */;
  %816 = cast(%813, dtype="bool") /* ty=Tensor[(66, 4), bool] */;
  %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(2), int32] */;
  %818 = cast(%815, dtype="bool") /* ty=Tensor[(66, 4), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %820 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %821 = cast(%815, dtype="float32") /* ty=Tensor[(66, 4), float32] */;
  %822 = asin(%821) /* ty=Tensor[(66, 4), float32] */;
  %823 = cast(%815, dtype="int64") /* ty=Tensor[(66, 4), int64] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(2), int32] */;
  %825 = cast(%822, dtype="int64") /* ty=Tensor[(66, 4), int64] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %827 = %801.0;
  %828 = %802.2;
  %829 = %805.1;
  %830 = %808.4;
  %831 = %809.2;
  %832 = %810.0;
  %833 = %811.2;
  %834 = logical_and(%818, %819) /* ty=Tensor[(66, 4), bool] */;
  %835 = %820.0;
  %836 = logical_xor(%825, %826) /* ty=Tensor[(66, 4), int64] */;
  (%827, %828, %829, %830, %var_15234, %831, %832, %833, %834, %835, %836)
}

def @func_11330() -> Tensor[(6, 10, 16), int64] {
  %837 = @func_10996() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %837.0
}

def @func_9053() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %838 = @func_7109() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %839 = @func_5876() /* ty=Tensor[(6, 10, 16), int64] */;
  %840 = %838.0;
  (%839, %840)
}

def @func_381() -> (Tensor[(6, 10, 16), int64],) {
  %841 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  (%841,)
}

def @func_4725() -> (Tensor[(15, 4, 2), float32], Tensor[(6, 10, 16), int64]) {
  %842 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 4, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 4, 2), float32] */;
  %843 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %844 = acos(%842) /* ty=Tensor[(15, 4, 2), float32] */;
  %845 = %843.4;
  (%844, %845)
}

def @func_8714() -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) {
  %846 = @func_5568() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %847 = cast(meta[relay.Constant][23] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %848 = reshape(%847, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %849 = @func_3813(%848) /* ty=(Tensor[(1, 11, 8), float64],) */;
  %850 = %846.0;
  %851 = %849.0;
  (%850, %851, meta[relay.Constant][23] /* ty=Tensor[(88), float64] */)
}

def @func_4825() -> (uint32,) {
  %852 = @func_3956() /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) */;
  %853 = %852.1;
  (%853,)
}

def @func_14468() -> (Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(15, 10, 8), int32], Tensor[(1200), float32], Tensor[(6, 10, 16), int64], Tensor[(324), int8], Tensor[(6, 10, 16), int64]) {
  %854 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %855 = cast(meta[relay.Constant][24] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %856 = reshape(%855, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
  %857 = @func_11196(%856) /* ty=(Tensor[(15, 5, 5), float32], Tensor[(720), bool], bool, Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(6, 10, 16), int64]) */;
  %858 = cast(meta[relay.Constant][25] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %859 = cast(meta[relay.Constant][25] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %860 = reshape(%858, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %861 = reshape(%859, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
  %862 = @func_14341(%860, %861) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 10, 8), int32], Tensor[(15, 10, 8), uint64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32], Tensor[(6, 10, 16), bool]) */;
  %863 = cast(meta[relay.Constant][26] /* ty=Tensor[(324), int8] */, dtype="int8") /* ty=Tensor[(324), int8] */;
  %864 = cast(meta[relay.Constant][26] /* ty=Tensor[(324), int8] */, dtype="int8") /* ty=Tensor[(324), int8] */;
  %865 = reshape(%863, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), int8] */;
  %866 = reshape(%864, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), int8] */;
  %867 = @func_5972(%865, %866) /* ty=(Tensor[(3, 12, 9), bool], Tensor[(6, 10, 16), int64]) */;
  %868 = @func_11712() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %869 = %854.1;
  %870 = %857.3;
  %871 = %862.2;
  %872 = %867.1;
  %873 = %868.0;
  (%869, %870, meta[relay.Constant][24] /* ty=Tensor[(1755), float64] */, %871, meta[relay.Constant][25] /* ty=Tensor[(1200), float32] */, %872, meta[relay.Constant][26] /* ty=Tensor[(324), int8] */, %873)
}

def @func_7398() -> (Tensor[(6, 10, 16), int64],) {
  %874 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %875 = %874.1;
  (%875,)
}

def @func_11854() -> (Tensor[(6, 10, 16), int64],) {
  %876 = @func_4006() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %877 = %876.0;
  (%877,)
}

def @func_13290() -> (Tensor[(6, 10, 16), int64],) {
  %878 = @func_10142() /* ty=Tensor[(6, 10, 16), int64] */;
  (%878,)
}

def @func_8126() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) {
  %879 = @func_6262() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %880 = @func_7866() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %881 = %879.0;
  %882 = %880.0;
  (%881, %882)
}

def @func_7542() -> Tensor[(6, 10, 16), int64] {
  %883 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %883.4
}

def @func_14770() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64], Tensor[(6, 10, 16), int64]) {
  %884 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %885 = @func_12205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %886 = @func_9681() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64]) */;
  %887 = @func_5257() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %888 = %884.2;
  %889 = %885.0;
  %890 = %886.3;
  %891 = %887.1;
  (%888, %889, %890, %891)
}

def @func_12849() -> Tensor[(6, 10, 16), int64] {
  %892 = @func_6624() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %892.0
}

def @func_5757() -> (Tensor[(6, 10, 16), int64],) {
  %893 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %894 = %893.1;
  (%894,)
}

def @func_6572() -> Tensor[(15, 12, 13), float32] {
  %895 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  acos(%895) /* ty=Tensor[(15, 12, 13), float32] */
}

def @func_16455(%var_16380: Tensor[(88), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(15, 12, 13), float32], Tensor[(?, 11, 8), bool], Tensor[(6, 10, 16), int64]) {
  %896 = @func_5663() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %897 = @func_11400() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %898 = @func_8993() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(6, 10, 16), float64]) */;
  %899 = @func_15799() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(624), float32], Tensor[(4, 12, 13), float32], Tensor[(3, 14, 1), float64]) */;
  %900 = cast(%var_16380, dtype="float64") /* ty=Tensor[(88), float64] */;
  %901 = reshape(%900, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %902 = @func_3813(%901) /* ty=(Tensor[(1, 11, 8), float64],) */;
  %903 = %902.0;
  %904 = cast(%903, dtype="float32") /* ty=Tensor[(1, 11, 8), float32] */;
  %905 = atan(%904) /* ty=Tensor[(1, 11, 8), float32] */;
  %906 = cast(%var_16380, dtype="bool") /* ty=Tensor[(88), bool] */;
  %907 = shape_of(%905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%905, dtype="bool") /* ty=Tensor[(1, 11, 8), bool] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %910 = %896.0;
  %911 = %897.0;
  %912 = @func_5410() /* ty=Tensor[(6, 10, 16), int64] */;
  %913 = %898.6;
  %914 = %899.2;
  %915 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
  %916 = not_equal(%908, %909) /* ty=Tensor[(?, 11, 8), bool] */;
  %917 = @func_10142() /* ty=Tensor[(6, 10, 16), int64] */;
  (%910, %911, %912, %913, %914, %915, %916, %917)
}

def @func_3137() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %918 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %919 = @func_1574() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %920 = %918.1;
  %921 = %919.0;
  (%920, %921)
}

def @func_834() -> Tensor[(6, 10, 16), int64] {
  %922 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %922.0
}

def @func_7109() -> (Tensor[(6, 10, 16), bool],) {
  %923 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %924 = %923.2;
  (%924,)
}

def @func_16028() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %925 = @func_13209() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %926 = %925.0;
  %927 = @func_4840() /* ty=Tensor[(6, 10, 16), int64] */;
  (%926, %927)
}

def @func_15413() -> Tensor[(6, 10, 16), int64] {
  %928 = @func_7398() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %928.0
}

def @func_8593(%var_8585: Tensor[(720), bool]) -> (Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) {
  %929 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %930 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %931 = cast(%var_8585, dtype="bool") /* ty=Tensor[(720), bool] */;
  %932 = reshape(%930, newshape=[]) /* ty=bool */;
  %933 = reshape(%931, newshape=[8, 15, 6]) /* ty=Tensor[(8, 15, 6), bool] */;
  %934 = @func_4798(%932, %933) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) */;
  %935 = %929.1;
  %936 = %934.1;
  (%935, %936, True /* ty=bool */, %var_8585)
}

def @func_2018() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %937 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %938 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %939 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
  %940 = cast(%939, dtype="float32") /* ty=Tensor[(6, 10, 16), float32] */;
  %941 = atanh(%940) /* ty=Tensor[(6, 10, 16), float32] */;
  %942 = cast(%941, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
  %943 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %944 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %945 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %946 = %937.0;
  %947 = %938.0;
  %948 = cos(%942) /* ty=Tensor[(6, 10, 16), float64] */;
  %949 = %943.0;
  %950 = %944.2;
  %951 = %945.0;
  (%946, %947, %948, %949, %950, %951)
}

def @func_6163() -> (Tensor[(6, 10, 16), int64],) {
  %952 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %953 = %952.0;
  (%953,)
}

def @func_12571(%var_12539: Tensor[(3, 20), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(12, 1, 5), bool], float32, Tensor[(3, 20), float32], Tensor[(6, 10, 16), int64]) {
  %954 = @func_8349() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %955 = cast(-8.59382f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %956 = cast(%var_12539, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %957 = reshape(%955, newshape=[]) /* ty=float32 */;
  %958 = reshape(%956, newshape=[12, 1, 5]) /* ty=Tensor[(12, 1, 5), float32] */;
  %959 = @func_8250(%957, %958) /* ty=(Tensor[(12, 1, 5), float32], Tensor[(12, 1, 5), bool]) */;
  %960 = @func_12303() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32]) */;
  %961 = %954.1;
  %962 = %959.1;
  %963 = %960.0;
  (%961, %962, -8.59382f /* ty=float32 */, %var_12539, %963)
}

def @func_4205() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) {
  %964 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %965 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %966 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %967 = %964.0;
  %968 = %965.4;
  %969 = %966.0;
  (%967, %968, %969)
}

def @func_8069() -> Tensor[(6, 10, 16), int64] {
  %970 = @func_2896() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %970.0
}

def @func_11645() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %971 = @func_11435() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %972 = @func_6554() /* ty=Tensor[(6, 10, 16), int64] */;
  %973 = %971.1;
  (%972, %973)
}

def @func_5374(%var_5354: Tensor[(2145, 1), int64]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(2145, 1), float64]) {
  %974 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %975 = cast(%var_5354, dtype="int64") /* ty=Tensor[(2145, 1), int64] */;
  %976 = reshape(%975, newshape=[2145]) /* ty=Tensor[(2145), int64] */;
  %977 = @func_3266(%976) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32], Tensor[(2145), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %978 = @func_4762() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %979 = cast(%var_5354, dtype="float64") /* ty=Tensor[(2145, 1), float64] */;
  %980 = %974.1;
  %981 = %977.3;
  %982 = %978.0;
  %983 = sin(%979) /* ty=Tensor[(2145, 1), float64] */;
  (%980, %981, %982, %983)
}

def @func_2932() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %984 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %985 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %986 = %984.0;
  (%985, %986)
}

def @func_5435() -> Tensor[(6, 10, 16), int64] {
  %987 = @func_3711() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %987.2
}

def @func_14713(%var_14703: Tensor[(7, 12, 15), float32]) -> (Tensor[(7, 12, 15), float32],) {
  %988 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %989 = cast(%var_14703, dtype="float32") /* ty=Tensor[(7, 12, 15), float32] */;
  %990 = floor_mod(%988, %989) /* ty=Tensor[(7, 12, 15), float32] */;
  (%990,)
}

def @func_8562() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755, 1), float64]) {
  %991 = @func_7671() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %992 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %993 = @func_8318() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %994 = cast(meta[relay.Constant][29] /* ty=Tensor[(1755, 1), float64] */, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
  %995 = cast(meta[relay.Constant][29] /* ty=Tensor[(1755, 1), float64] */, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
  %996 = reshape(%994, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %997 = reshape(%995, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %998 = @func_5166(%996, %997) /* ty=(Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) */;
  %999 = %991.0;
  %1000 = %992.4;
  %1001 = %993.4;
  %1002 = %998.0;
  (%999, %1000, %1001, %1002, meta[relay.Constant][29] /* ty=Tensor[(1755, 1), float64] */)
}

def @func_2403() -> Tensor[(6, 10, 16), int64] {
  @func_1274() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_7016() -> Tensor[(6, 10, 16), int64] {
  @func_3318() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_9010() -> (Tensor[(6, 10, 16), int64],) {
  %1003 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %1004 = %1003.1;
  (%1004,)
}

def @func_5568() -> (Tensor[(6, 10, 16), int64],) {
  %1005 = @func_5257() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1006 = %1005.1;
  (%1006,)
}

def @func_7029() -> (Tensor[(6, 10, 16), int64],) {
  %1007 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1008 = %1007.0;
  (%1008,)
}

def @func_12205() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1009 = @func_11783() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1010 = %1009.1;
  %1011 = @func_1685() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1010, %1011)
}

def @func_12414(%var_12395: Tensor[(16, 16, 2), float64]) -> (Tensor[(16, 16, 2), float64], Tensor[(6, 10, 16), int64]) {
  %1012 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 2), float64] */;
  %1013 = shape_of(%var_12395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(%var_12395, dtype="float64") /* ty=Tensor[(16, 16, 2), float64] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1016 = floor_mod(%1014, %1015) /* ty=Tensor[(16, 16, 2), float64] */;
  %1017 = @func_2791() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1016, %1017)
}

def @func_3340(%var_3321: Tensor[(2, 13, 3), int32]) -> (Tensor[(2, 13, 3), int32], Tensor[(6, 10, 16), int64], Tensor[(2145), int64]) {
  %1018 = cast(10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1019 = cast(%var_3321, dtype="int32") /* ty=Tensor[(2, 13, 3), int32] */;
  %1020 = cast(meta[relay.Constant][31] /* ty=Tensor[(2145), int64] */, dtype="int64") /* ty=Tensor[(2145), int64] */;
  %1021 = reshape(%1020, newshape=[2145]) /* ty=Tensor[(2145), int64] */;
  %1022 = @func_3266(%1021) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32], Tensor[(2145), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1023 = subtract(%1018, %1019) /* ty=Tensor[(2, 13, 3), int32] */;
  %1024 = %1022.0;
  (%1023, %1024, meta[relay.Constant][31] /* ty=Tensor[(2145), int64] */)
}

def @func_16594(%var_16578: Tensor[(11, 6, 2), float32]) -> Tensor[(11, 6, 2), float64] {
  %1025 = cast(%var_16578, dtype="float32") /* ty=Tensor[(11, 6, 2), float32] */;
  %1026 = exp(%1025) /* ty=Tensor[(11, 6, 2), float32] */;
  %1027 = cast(%1026, dtype="float64") /* ty=Tensor[(11, 6, 2), float64] */;
  asin(%1027) /* ty=Tensor[(11, 6, 2), float64] */
}

def @func_13568() -> (Tensor[(6, 10, 16), int64],) {
  %1028 = @func_9615() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1028,)
}

def @func_3813(%var_3809: Tensor[(1, 11, 8), float64]) -> (Tensor[(1, 11, 8), float64],) {
  %1029 = cast(%var_3809, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
  %1030 = sinh(%1029) /* ty=Tensor[(1, 11, 8), float64] */;
  (%1030,)
}

def @func_11976(%var_11971: Tensor[(8, 15, 6), float64]) -> (Tensor[(8, 15, 6), float64],) {
  %1031 = cast(%var_11971, dtype="float64") /* ty=Tensor[(8, 15, 6), float64] */;
  %1032 = cosh(%1031) /* ty=Tensor[(8, 15, 6), float64] */;
  (%1032,)
}

def @func_13461() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1033 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %1034 = @func_10310() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1035 = %1033.2;
  %1036 = %1034.0;
  (%1035, %1036)
}

def @func_6099() -> (Tensor[(6, 10, 16), int64],) {
  %1037 = @func_5757() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1038 = %1037.0;
  (%1038,)
}

def @func_15038(%var_14991: Tensor[(16, 9, 12), uint64], %var_14992: Tensor[(16, 9, 12), uint64]) -> (Tensor[(16, 9, 12), float64], Tensor[(6, 10, 16), int64]) {
  %1039 = cast(%var_14992, dtype="uint64") /* ty=Tensor[(16, 9, 12), uint64] */;
  %1040 = shape_of(%var_14991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1041 = cast(%var_14991, dtype="uint64") /* ty=Tensor[(16, 9, 12), uint64] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1043 = bitwise_xor(%1041, %1042) /* ty=Tensor[(16, 9, 12), uint64] */;
  %1044 = cast(%1043, dtype="float64") /* ty=Tensor[(16, 9, 12), float64] */;
  %1045 = sin(%1044) /* ty=Tensor[(16, 9, 12), float64] */;
  %1046 = @func_10893() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1045, %1046)
}

def @func_16847(%var_16837: Tensor[(12, 11, 8), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(12, 11, 8), float64], Tensor[(1, 11, 8), float32]) {
  %1047 = @func_15878() /* ty=(Tensor[(1, 11, 8), float64],) */;
  %1048 = %1047.0;
  %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
  %1050 = cast(%var_16837, dtype="float64") /* ty=Tensor[(12, 11, 8), float64] */;
  %1051 = cast(%1048, dtype="float32") /* ty=Tensor[(1, 11, 8), float32] */;
  %1052 = @func_10446() /* ty=Tensor[(6, 10, 16), int64] */;
  %1053 = floor_mod(%1049, %1050) /* ty=Tensor[(12, 11, 8), float64] */;
  %1054 = acos(%1051) /* ty=Tensor[(1, 11, 8), float32] */;
  (%1052, %1053, %1054)
}

def @func_7974() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1055 = @func_4681() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1056 = %1055.1;
  %1057 = @func_2072() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1056, %1057)
}

def @func_12477() -> uint32 {
  %1058 = @func_4825() /* ty=(uint32,) */;
  %1058.0
}

def @func_13772() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1059 = @func_5128() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %1060 = @func_6624() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1061 = %1059.0;
  %1062 = %1060.0;
  (%1061, %1062)
}

def @func_1140() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1063 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1064 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1065 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1066 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1067 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %1068 = %1063.0;
  %1069 = %1064.3;
  %1070 = %1065.0;
  %1071 = %1066.0;
  %1072 = %1067.1;
  (%1068, %1069, %1070, %1071, %1072)
}

def @func_6478(%var_6458: uint32) -> (Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) {
  %1073 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1074 = %1073.2;
  %1075 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  %1076 = cast(%1075, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %1077 = shape_of(%1074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1078 = cast(%1074, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1080 = cast(%var_6458, dtype="uint32") /* ty=uint32 */;
  %1081 = cast(meta[relay.Constant][32] /* ty=Tensor[(264), uint32] */, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %1082 = reshape(%1080, newshape=[]) /* ty=uint32 */;
  %1083 = reshape(%1081, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint32] */;
  %1084 = right_shift(%1078, %1079) /* ty=Tensor[(6, 10, 16), int64] */;
  %1085 = @func_2516(%1082, %1083) /* ty=Tensor[(11, 6, 4), bool] */;
  %1086 = @func_4840() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1084, %1085, %var_6458, meta[relay.Constant][32] /* ty=Tensor[(264), uint32] */, %1086)
}

def @func_1705() -> (Tensor[(6, 10, 16), int64],) {
  %1087 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1088 = %1087.1;
  (%1088,)
}

def @func_11967(%var_11889: Tensor[(4, 8, 15), float64]) -> (Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32], Tensor[(6, 10, 16), bool], Tensor[(4, 8, 15), float64], Tensor[(6, 10, 16), int64]) {
  %1089 = @func_7530() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1090 = %1089.0;
  %1091 = cast(%1090, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %1092 = reshape(%1091, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %1093 = @func_2995(%1092) /* ty=(Tensor[(6, 10, 16), float32],) */;
  %1094 = @func_9332() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %1095 = cast(%var_11889, dtype="float64") /* ty=Tensor[(4, 8, 15), float64] */;
  %1096 = sinh(%1095) /* ty=Tensor[(4, 8, 15), float64] */;
  %1097 = cast(%1096, dtype="float64") /* ty=Tensor[(4, 8, 15), float64] */;
  %1098 = @func_10039() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1099 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
  %1100 = %1093.0;
  %1101 = %1094.0;
  %1102 = log2(%1097) /* ty=Tensor[(4, 8, 15), float64] */;
  %1103 = %1098.0;
  (%1099, %1090, %1100, %1101, %1102, %1103)
}

def @func_15656() -> (Tensor[(6, 10, 16), bool],) {
  %1104 = @func_15555() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
  %1105 = %1104.1;
  (%1105,)
}

def @func_14902() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1106 = @func_6306() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1107 = @func_6920() /* ty=Tensor[(6, 10, 16), int64] */;
  %1108 = %1106.1;
  (%1107, %1108)
}

def @func_6881() -> (Tensor[(6, 10, 16), int64],) {
  %1109 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1110 = %1109.1;
  (%1110,)
}

def @func_11565() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) {
  %1111 = @func_6099() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1112 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %1113 = %1111.0;
  %1114 = %1112.0;
  (%1113, %1114)
}

def @func_1592() -> (Tensor[(6, 10, 16), int64],) {
  %1115 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1116 = %1115.0;
  (%1116,)
}

def @func_922() -> Tensor[(6, 10, 16), int64] {
  @func_834() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_5113() -> Tensor[(6, 10, 16), int64] {
  %1117 = @func_1839() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1117.0
}

def @func_3484() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1118 = @func_1705() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1119 = %1118.0;
  %1120 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1119, %1120)
}

def @func_11196(%var_11176: Tensor[(1755), float64]) -> (Tensor[(15, 5, 5), float32], Tensor[(720), bool], bool, Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(6, 10, 16), int64]) {
  %1121 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 5), float32] */;
  %1122 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1123 = reshape(%1122, newshape=[]) /* ty=bool */;
  %1124 = @func_5739(%1123) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) */;
  %1125 = cast(%var_11176, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %1126 = cast(%var_11176, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %1127 = reshape(%1125, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %1128 = reshape(%1126, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %1129 = @func_5166(%1127, %1128) /* ty=(Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) */;
  %1130 = log(%1121) /* ty=Tensor[(15, 5, 5), float32] */;
  %1131 = %1124.3;
  %1132 = %1129.0;
  %1133 = @func_1685() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1130, %1131, True /* ty=bool */, %1132, %var_11176, %1133)
}

def @func_6785() -> Tensor[(6, 10, 16), int64] {
  %1134 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1134.1
}

def @func_9291() -> (Tensor[(6, 10, 16), int64],) {
  %1135 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1136 = %1135.0;
  (%1136,)
}

def @func_4528(%var_4501: Tensor[(264), uint32]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) {
  %1137 = @func_3509() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1138 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %1139 = cast(meta[relay.Constant][34] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1140 = cast(%var_4501, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %1141 = reshape(%1139, newshape=[]) /* ty=uint32 */;
  %1142 = reshape(%1140, newshape=[264]) /* ty=Tensor[(264), uint32] */;
  %1143 = @func_3605(%1141, %1142) /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32], Tensor[(11, 6, 4), int32]) */;
  %1144 = %1137.0;
  %1145 = %1138.2;
  %1146 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %1147 = %1143.1;
  (%1144, %1145, %1146, %1147, meta[relay.Constant][34] /* ty=uint32 */, %var_4501)
}

def @func_9615() -> Tensor[(6, 10, 16), int64] {
  %1148 = @func_2932() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %1148.0
}

def @func_1574() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1149 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1150 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1151 = %1149.0;
  %1152 = %1150.1;
  (%1151, %1152)
}

def @func_4429(%var_4396: Tensor[(6, 10, 16), float64]) -> (Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) {
  %1153 = @func_2608() /* ty=(Tensor[(6, 10, 16), float64],) */;
  %1154 = %1153.0;
  %1155 = cast(%var_4396, dtype="uint8") /* ty=Tensor[(6, 10, 16), uint8] */;
  %1156 = shape_of(%1154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1157 = cast(%1154, dtype="uint8") /* ty=Tensor[(6, 10, 16), uint8] */;
  %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1159 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1160 = multiply(%1157, %1158) /* ty=Tensor[(6, 10, 16), uint8] */;
  %1161 = %1159.1;
  (%1160, %1161)
}

def @func_15555() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) {
  %1162 = @func_6954() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %1163 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
  %1164 = %1162.0;
  %1165 = %1163.2;
  (%1164, %1165)
}

def @func_15878() -> (Tensor[(1, 11, 8), float64],) {
  %1166 = @func_8714() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) */;
  %1167 = %1166.1;
  (%1167,)
}

def @func_9758() -> Tensor[(6, 10, 16), int64] {
  %1168 = @func_7671() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1168.1
}

def @func_7186() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 117), uint64]) {
  %1169 = @func_6516() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1170 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %1171 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 117), float64] */, dtype="float64") /* ty=Tensor[(15, 117), float64] */;
  %1172 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 117), float64] */, dtype="float64") /* ty=Tensor[(15, 117), float64] */;
  %1173 = reshape(%1171, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %1174 = reshape(%1172, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %1175 = @func_5166(%1173, %1174) /* ty=(Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) */;
  %1176 = %1175.0;
  %1177 = cast(%1176, dtype="uint64") /* ty=Tensor[(13, 15, 9), uint64] */;
  %1178 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(15, 117), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1179 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 117), float64] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
  %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1181 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
  %1182 = %1169.2;
  %1183 = %1170.1;
  %1184 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %1185 = bitwise_and(%1179, %1180) /* ty=Tensor[(15, 117), uint64] */;
  (%1181, %1182, %1183, %1184, %1185)
}

def @func_10751() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64]) {
  %1186 = @func_9433() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1187 = @func_6099() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1188 = cast(meta[relay.Constant][36] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1189 = reshape(%1188, newshape=[]) /* ty=uint32 */;
  %1190 = @func_3674(%1189) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264, 1), uint32]) */;
  %1191 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %1192 = %1186.0;
  %1193 = %1187.0;
  %1194 = %1190.0;
  %1195 = %1191.5;
  (%1192, %1193, %1194, meta[relay.Constant][36] /* ty=uint32 */, %1195)
}

def @func_7375() -> (Tensor[(3, 14, 1), float64],) {
  %1196 = @func_5072() /* ty=(Tensor[(3, 14, 1), float64],) */;
  %1197 = %1196.0;
  (%1197,)
}

def @func_7922() -> (Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1198 = @func_7288() /* ty=(Tensor[(15, 12, 13), float32],) */;
  %1199 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1200 = %1198.0;
  %1201 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %1202 = %1199.1;
  (%1200, %1201, %1202)
}

def @func_11712() -> (Tensor[(6, 10, 16), int64],) {
  %1203 = @func_7542() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1203,)
}

def @func_14341(%var_14232: Tensor[(15, 10, 8), float32], %var_14294: Tensor[(15, 10, 8), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 10, 8), int32], Tensor[(15, 10, 8), uint64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32], Tensor[(6, 10, 16), bool]) {
  %1204 = @func_9067() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1205 = @func_9791() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1206 = cast(%var_14232, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %1207 = sin(%1206) /* ty=Tensor[(15, 10, 8), float32] */;
  %1208 = cast(%1207, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %1209 = atan(%1208) /* ty=Tensor[(15, 10, 8), float32] */;
  %1210 = cast(%1209, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %1211 = erf(%1210) /* ty=Tensor[(15, 10, 8), float32] */;
  %1212 = cast(%1211, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %1213 = cosh(%1212) /* ty=Tensor[(15, 10, 8), float32] */;
  %1214 = cast(%var_14294, dtype="int32") /* ty=Tensor[(15, 10, 8), int32] */;
  %1215 = shape_of(%1213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1216 = cast(%1213, dtype="int32") /* ty=Tensor[(15, 10, 8), int32] */;
  %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1218 = cast(%1207, dtype="uint64") /* ty=Tensor[(15, 10, 8), uint64] */;
  %1219 = shape_of(%1209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1220 = cast(%1209, dtype="uint64") /* ty=Tensor[(15, 10, 8), uint64] */;
  %1221 = dyn.reshape(%1218, %1219, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1222 = cast(meta[relay.Constant][37] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %1223 = reshape(%1222, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %1224 = @func_11268() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %1225 = %1204.0;
  %1226 = %1205.0;
  %1227 = bitwise_xor(%1216, %1217) /* ty=Tensor[(15, 10, 8), int32] */;
  %1228 = left_shift(%1220, %1221) /* ty=Tensor[(15, 10, 8), uint64] */;
  %1229 = @func_12319(%1223) /* ty=Tensor[(12, 14, 14), float32] */;
  %1230 = %1224.0;
  (%1225, %1226, %1227, %1228, %1229, meta[relay.Constant][37] /* ty=Tensor[(2352), float32] */, %1230)
}

def @func_1165() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %1231 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1232 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1233 = %1231.1;
  %1234 = %1232.0;
  (%1233, %1234)
}

def @func_9577() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int16]) {
  %1235 = @func_8611() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1236 = %1235.0;
  %1237 = cast(%1236, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %1238 = reshape(%1237, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %1239 = @func_1523(%1238) /* ty=(Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1240 = %1239.0;
  (%1236, %1240)
}

def @func_7630() -> (Tensor[(6, 10, 16), int64],) {
  %1241 = @func_6031() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1242 = %1241.0;
  (%1242,)
}

def @func_14202() -> Tensor[(6, 10, 16), int64] {
  @func_295() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_10624() -> (Tensor[(6, 10, 16), int64], Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64]) {
  %1243 = @func_9791() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1244 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1245 = %1243.0;
  %1246 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
  %1247 = %1244.1;
  (%1245, %1246, %1247)
}

def @func_16779() -> (Tensor[(6, 10, 16), int64],) {
  %1248 = @func_13772() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1249 = %1248.1;
  (%1249,)
}

def @func_5663() -> (Tensor[(6, 10, 16), int64],) {
  %1250 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %1251 = %1250.1;
  (%1251,)
}

def @func_3674(%var_3653: uint32) -> (Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264, 1), uint32]) {
  %1252 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %1253 = cast(%var_3653, dtype="uint32") /* ty=uint32 */;
  %1254 = cast(meta[relay.Constant][38] /* ty=Tensor[(264, 1), uint32] */, dtype="uint32") /* ty=Tensor[(264, 1), uint32] */;
  %1255 = reshape(%1253, newshape=[]) /* ty=uint32 */;
  %1256 = reshape(%1254, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint32] */;
  %1257 = %1252.1;
  %1258 = @func_2516(%1255, %1256) /* ty=Tensor[(11, 6, 4), bool] */;
  (%1257, %1258, %var_3653, meta[relay.Constant][38] /* ty=Tensor[(264, 1), uint32] */)
}

def @func_10864() -> (Tensor[(6, 10, 16), int64],) {
  %1259 = @func_2896() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1260 = %1259.2;
  (%1260,)
}

def @func_4840() -> Tensor[(6, 10, 16), int64] {
  %1261 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1261.0
}

def @func_8868() -> (Tensor[(6, 10, 16), int64],) {
  %1262 = @func_4247() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1262,)
}

def @func_10088() -> Tensor[(6, 10, 16), int64] {
  %1263 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1263.0
}

def @func_13209() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %1264 = @func_12303() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32]) */;
  %1265 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %1266 = %1264.0;
  %1267 = @func_4247() /* ty=Tensor[(6, 10, 16), int64] */;
  %1268 = %1265.2;
  %1269 = @func_9615() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1266, %1267, %1268, %1269)
}

def @func_7550() -> uint32 {
  %1270 = @func_4825() /* ty=(uint32,) */;
  %1270.0
}

def @func_7245() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1271 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1272 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
  %1273 = %1271.1;
  (%1272, %1273)
}

def @func_3318() -> Tensor[(6, 10, 16), int64] {
  %1274 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1274.0
}

def @func_1274() -> Tensor[(6, 10, 16), int64] {
  %1275 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1275.0
}

def @func_9260(%var_9210: Tensor[(7, 9, 12), int8], %var_9211: Tensor[(7, 9, 12), int8], %var_9232: Tensor[(7, 9, 12), int8]) -> (Tensor[(7, 9, 12), int8], Tensor[(7, 9, 12), bool], Tensor[(6, 10, 16), float64]) {
  %1276 = cast(%var_9211, dtype="int8") /* ty=Tensor[(7, 9, 12), int8] */;
  %1277 = shape_of(%var_9210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1278 = cast(%var_9210, dtype="int8") /* ty=Tensor[(7, 9, 12), int8] */;
  %1279 = dyn.reshape(%1276, %1277, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1280 = cast(%var_9232, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %1281 = shape_of(%var_9211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1282 = cast(%var_9211, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %1283 = dyn.reshape(%1280, %1281, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1284 = @func_4762() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %1285 = subtract(%1278, %1279) /* ty=Tensor[(7, 9, 12), int8] */;
  %1286 = less(%1282, %1283) /* ty=Tensor[(7, 9, 12), bool] */;
  %1287 = %1284.0;
  (%1285, %1286, %1287)
}

def @func_2255() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %1288 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
  %1289 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 10, 16), int64] */, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %1290 = shape_of(%1288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1291 = cast(%1288, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %1292 = dyn.reshape(%1289, %1290, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1293 = not_equal(%1291, %1292) /* ty=Tensor[(6, 10, 16), bool] */;
  %1294 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1293, %1294)
}

def @func_11268() -> (Tensor[(6, 10, 16), bool],) {
  %1295 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
  %1296 = %1295.2;
  (%1296,)
}

def @func_14870() -> Tensor[(6, 10, 16), int64] {
  %1297 = @func_13461() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1297.0
}

def @func_13022() -> Tensor[(6, 10, 16), int64] {
  %1298 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1298.0
}

def @func_8447() -> Tensor[(6, 10, 16), int64] {
  %1299 = @func_6163() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1299.0
}

def @func_4886() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1300 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1301 = @func_3137() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1302 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %1303 = @func_1839() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1304 = %1300.1;
  %1305 = %1301.0;
  %1306 = %1302.5;
  %1307 = %1303.0;
  (%1304, %1305, %1306, %1307)
}

def @func_8429(%var_8382: Tensor[(12, 2, 10), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(12, 2, 10), float64]) {
  %1308 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1309 = cast(%var_8382, dtype="float32") /* ty=Tensor[(12, 2, 10), float32] */;
  %1310 = asinh(%1309) /* ty=Tensor[(12, 2, 10), float32] */;
  %1311 = cast(%1310, dtype="float32") /* ty=Tensor[(12, 2, 10), float32] */;
  %1312 = rsqrt(%1311) /* ty=Tensor[(12, 2, 10), float32] */;
  %1313 = cast(%1312, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
  %1314 = %1308.0;
  %1315 = tan(%1313) /* ty=Tensor[(12, 2, 10), float64] */;
  (%1314, %1315)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4886() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %0 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1 = @func_3137() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %2 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %3 = @func_1839() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %4 = %0.1;
  %5 = %1.0;
  %6 = %2.5;
  %7 = %3.0;
  (%4, %5, %6, %7)
}

def @func_6786() -> Tensor[(6, 10, 16), int64] {
  %9 = fn () -> Tensor[(6, 10, 16), int64] {
    %8 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %8.1
  };
  %9() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_10090() -> Tensor[(6, 10, 16), int64] {
  @func_10088() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_11979(%var_11977: Tensor[(8, 15, 6), float64]) -> (Tensor[(8, 15, 6), float64],) {
  @func_11976(%var_11977) /* ty=(Tensor[(8, 15, 6), float64],) */
}

def @func_7975() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %13 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %10 = @func_4681() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %11 = %10.1;
    %12 = @func_2072() /* ty=Tensor[(6, 10, 16), int64] */;
    (%11, %12)
  };
  %13() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_5665() -> (Tensor[(6, 10, 16), int64],) {
  @func_5663() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_13463() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_13461() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_3713() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_3711() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_10522() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %20 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
    %14 = @func_9879() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %15 = @func_7470() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %16 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
    %17 = %14.1;
    %18 = %15.1;
    %19 = %16.1;
    (%17, %18, %19)
  };
  %20() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */
}

def @func_680() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %21 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %22 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %23 = %21.0;
  %24 = %22.0;
  (%23, %24)
}

def @func_4840() -> Tensor[(6, 10, 16), int64] {
  %25 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %25.0
}

def @func_5601() -> (Tensor[(6, 10, 16), int64],) {
  @func_5599() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_10239() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) {
  %35 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) {
    %26 = @func_1574() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %27 = %26.1;
    %28 = cast(%27, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
    %29 = reshape(%28, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), float64] */;
    %30 = @func_4429(%29) /* ty=(Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) */;
    %31 = @func_8206() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %32 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
    %33 = %30.0;
    %34 = %31.0;
    (%27, %32, %33, %34)
  };
  %35() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) */
}

def @func_8126() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) {
  %36 = @func_6262() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %37 = @func_7866() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %38 = %36.0;
  %39 = %37.0;
  (%38, %39)
}

def @func_10895() -> Tensor[(6, 10, 16), int64] {
  @func_10893() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_10142() -> Tensor[(6, 10, 16), int64] {
  %40 = @func_8318() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %40.3
}

def @func_14112(%var_14110: Tensor[(9, 12, 7), float64], %var_14111: Tensor[(9, 12, 7), float64]) -> (Tensor[(9, 12, 7), float64], Tensor[(6, 10, 16), int64]) {
  %47 = fn (%var_14088: Tensor[(9, 12, 7), float64], %var_14089: Tensor[(9, 12, 7), float64]) -> (Tensor[(9, 12, 7), float64], Tensor[(6, 10, 16), int64]) {
    %41 = cast(%var_14089, dtype="float64") /* ty=Tensor[(9, 12, 7), float64] */;
    %42 = shape_of(%var_14088, dtype="int32") /* ty=Tensor[(3), int32] */;
    %43 = cast(%var_14088, dtype="float64") /* ty=Tensor[(9, 12, 7), float64] */;
    %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %45 = floor_mod(%43, %44) /* ty=Tensor[(9, 12, 7), float64] */;
    %46 = @func_6665() /* ty=Tensor[(6, 10, 16), int64] */;
    (%45, %46)
  };
  %47(%var_14110, %var_14111) /* ty=(Tensor[(9, 12, 7), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_5843() -> Tensor[(6, 10, 16), int64] {
  %49 = fn () -> Tensor[(6, 10, 16), int64] {
    %48 = @func_3509() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %48.0
  };
  %49() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_16029() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %53 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %50 = @func_13209() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %51 = %50.0;
    %52 = @func_4840() /* ty=Tensor[(6, 10, 16), int64] */;
    (%51, %52)
  };
  %53() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_2933() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %57 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
    %54 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
    %55 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
    %56 = %54.0;
    (%55, %56)
  };
  %57() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */
}

def @func_4826() -> (uint32,) {
  %60 = fn () -> (uint32,) {
    %58 = @func_3956() /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) */;
    %59 = %58.1;
    (%59,)
  };
  %60() /* ty=(uint32,) */
}

def @func_3711() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %61 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %62 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %63 = @func_3509() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %64 = %61.1;
  %65 = %62.0;
  %66 = %63.0;
  (%64, %65, %66)
}

def @func_16733(%var_16693: Tensor[(4, 6, 12), int8], %var_16694: Tensor[(4, 6, 12), int8], %var_16707: Tensor[(4, 6, 12), int8]) -> (Tensor[(4, 6, 12), int8], Tensor[(6, 10, 16), int64], Tensor[(4, 6, 12), float64]) {
  %67 = cast(%var_16694, dtype="int8") /* ty=Tensor[(4, 6, 12), int8] */;
  %68 = shape_of(%var_16693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%var_16693, dtype="int8") /* ty=Tensor[(4, 6, 12), int8] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %71 = @func_3711() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %72 = cast(%var_16707, dtype="bool") /* ty=Tensor[(4, 6, 12), bool] */;
  %73 = shape_of(%var_16693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%var_16693, dtype="bool") /* ty=Tensor[(4, 6, 12), bool] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %76 = equal(%74, %75) /* ty=Tensor[(4, 6, 12), bool] */;
  %77 = cast(%76, dtype="float64") /* ty=Tensor[(4, 6, 12), float64] */;
  %78 = right_shift(%69, %70) /* ty=Tensor[(4, 6, 12), int8] */;
  %79 = %71.2;
  %80 = sin(%77) /* ty=Tensor[(4, 6, 12), float64] */;
  (%78, %79, %80)
}

def @func_13661() -> Tensor[(6, 10, 16), int64] {
  @func_13659() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_13569() -> (Tensor[(6, 10, 16), int64],) {
  %82 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %81 = @func_9615() /* ty=Tensor[(6, 10, 16), int64] */;
    (%81,)
  };
  %82() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_11437() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_11435() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_14949() -> Tensor[(6, 10, 16), int64] {
  %84 = fn () -> Tensor[(6, 10, 16), int64] {
    %83 = @func_5568() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %83.0
  };
  %84() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_5741(%var_5740: bool) -> (Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) {
  %93 = fn (%var_5736: bool) -> (Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) {
    %85 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %86 = cast(%var_5736, dtype="bool") /* ty=bool */;
    %87 = cast(meta[relay.Constant][0] /* ty=Tensor[(720), bool] */, dtype="bool") /* ty=Tensor[(720), bool] */;
    %88 = reshape(%86, newshape=[]) /* ty=bool */;
    %89 = reshape(%87, newshape=[8, 15, 6]) /* ty=Tensor[(8, 15, 6), bool] */;
    %90 = @func_4798(%88, %89) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) */;
    %91 = %85.1;
    %92 = %90.1;
    (%91, %92, %var_5736, meta[relay.Constant][0] /* ty=Tensor[(720), bool] */)
  };
  %93(%var_5740) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) */
}

def @func_4429(%var_4396: Tensor[(6, 10, 16), float64]) -> (Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) {
  %94 = @func_2608() /* ty=(Tensor[(6, 10, 16), float64],) */;
  %95 = %94.0;
  %96 = cast(%var_4396, dtype="uint8") /* ty=Tensor[(6, 10, 16), uint8] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="uint8") /* ty=Tensor[(6, 10, 16), uint8] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %100 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %101 = multiply(%98, %99) /* ty=Tensor[(6, 10, 16), uint8] */;
  %102 = %100.1;
  (%101, %102)
}

def @func_11854() -> (Tensor[(6, 10, 16), int64],) {
  %103 = @func_4006() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %104 = %103.0;
  (%104,)
}

def @func_5759() -> (Tensor[(6, 10, 16), int64],) {
  @func_5757() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_7632() -> (Tensor[(6, 10, 16), int64],) {
  @func_7630() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_14469() -> (Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(15, 10, 8), int32], Tensor[(1200), float32], Tensor[(6, 10, 16), int64], Tensor[(324), int8], Tensor[(6, 10, 16), int64]) {
  %125 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(15, 10, 8), int32], Tensor[(1200), float32], Tensor[(6, 10, 16), int64], Tensor[(324), int8], Tensor[(6, 10, 16), int64]) {
    %105 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %106 = cast(meta[relay.Constant][1] /* ty=Tensor[(1755), float64] */, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %107 = reshape(%106, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
    %108 = @func_11196(%107) /* ty=(Tensor[(15, 5, 5), float32], Tensor[(720), bool], bool, Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(6, 10, 16), int64]) */;
    %109 = cast(meta[relay.Constant][2] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %110 = cast(meta[relay.Constant][2] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
    %111 = reshape(%109, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
    %112 = reshape(%110, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float32] */;
    %113 = @func_14341(%111, %112) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 10, 8), int32], Tensor[(15, 10, 8), uint64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32], Tensor[(6, 10, 16), bool]) */;
    %114 = cast(meta[relay.Constant][3] /* ty=Tensor[(324), int8] */, dtype="int8") /* ty=Tensor[(324), int8] */;
    %115 = cast(meta[relay.Constant][3] /* ty=Tensor[(324), int8] */, dtype="int8") /* ty=Tensor[(324), int8] */;
    %116 = reshape(%114, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), int8] */;
    %117 = reshape(%115, newshape=[3, 12, 9]) /* ty=Tensor[(3, 12, 9), int8] */;
    %118 = @func_5972(%116, %117) /* ty=(Tensor[(3, 12, 9), bool], Tensor[(6, 10, 16), int64]) */;
    %119 = @func_11712() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %120 = %105.1;
    %121 = %108.3;
    %122 = %113.2;
    %123 = %118.1;
    %124 = %119.0;
    (%120, %121, meta[relay.Constant][1] /* ty=Tensor[(1755), float64] */, %122, meta[relay.Constant][2] /* ty=Tensor[(1200), float32] */, %123, meta[relay.Constant][3] /* ty=Tensor[(324), int8] */, %124)
  };
  %125() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(15, 10, 8), int32], Tensor[(1200), float32], Tensor[(6, 10, 16), int64], Tensor[(324), int8], Tensor[(6, 10, 16), int64]) */
}

def @func_1839() -> (Tensor[(6, 10, 16), int64],) {
  %126 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %127 = %126.0;
  (%127,)
}

def @func_6517() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %134 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %128 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
    %129 = @func_5051() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %130 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %131 = %128.0;
    %132 = %129.0;
    %133 = %130.5;
    (%131, %132, %133)
  };
  %134() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_7376() -> (Tensor[(3, 14, 1), float64],) {
  %137 = fn () -> (Tensor[(3, 14, 1), float64],) {
    %135 = @func_5072() /* ty=(Tensor[(3, 14, 1), float64],) */;
    %136 = %135.0;
    (%136,)
  };
  %137() /* ty=(Tensor[(3, 14, 1), float64],) */
}

def @func_9681() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64]) {
  %138 = @func_4681() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %139 = @func_7029() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %140 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 25), float64] */, dtype="float64") /* ty=Tensor[(1, 25), float64] */;
  %141 = reshape(%140, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float64] */;
  %142 = @func_2178(%141) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) */;
  %143 = %138.0;
  %144 = %139.0;
  %145 = %142.0;
  (%143, %144, %145, meta[relay.Constant][4] /* ty=Tensor[(1, 25), float64] */)
}

def @func_7289() -> (Tensor[(15, 12, 13), float32],) {
  %147 = fn () -> (Tensor[(15, 12, 13), float32],) {
    %146 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
    (%146,)
  };
  %147() /* ty=(Tensor[(15, 12, 13), float32],) */
}

def @func_7399() -> (Tensor[(6, 10, 16), int64],) {
  %150 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %148 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %149 = %148.1;
    (%149,)
  };
  %150() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_4888() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_4886() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_7470() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %151 = @func_3956() /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) */;
  %152 = @func_2896() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %153 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %154 = %151.3;
  %155 = %152.1;
  %156 = %153.1;
  (%154, %155, %156)
}

def @func_12321(%var_12320: Tensor[(12, 14, 14), float32]) -> Tensor[(12, 14, 14), float32] {
  %158 = fn (%var_12313: Tensor[(12, 14, 14), float32]) -> Tensor[(12, 14, 14), float32] {
    %157 = cast(%var_12313, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
    sin(%157) /* ty=Tensor[(12, 14, 14), float32] */
  };
  %158(%var_12320) /* ty=Tensor[(12, 14, 14), float32] */
}

def @func_4238() -> (Tensor[(6, 10, 16), int64],) {
  %161 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %159 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %160 = %159.0;
    (%160,)
  };
  %161() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_11435() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %162 = @func_7974() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %163 = @func_3318() /* ty=Tensor[(6, 10, 16), int64] */;
  %164 = %162.1;
  (%163, %164)
}

def @func_15878() -> (Tensor[(1, 11, 8), float64],) {
  %165 = @func_8714() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) */;
  %166 = %165.1;
  (%166,)
}

def @func_772() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %179 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %167 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %168 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %169 = %168.0;
    %170 = cast(%169, dtype="float32") /* ty=Tensor[(6, 10, 16), float32] */;
    %171 = tan(%170) /* ty=Tensor[(6, 10, 16), float32] */;
    %172 = cast(%171, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
    %173 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
    %174 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %175 = %167.1;
    %176 = erf(%172) /* ty=Tensor[(6, 10, 16), float64] */;
    %177 = %173.0;
    %178 = %174.3;
    (%175, %176, %177, %178)
  };
  %179() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_4079() -> (Tensor[(6, 10, 16), int64],) {
  %182 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %180 = @func_3875() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %181 = %180.1;
    (%181,)
  };
  %182() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_15973() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %183 = @func_11400() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %184 = @func_9010() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %185 = %183.1;
  %186 = %184.0;
  (%185, %186)
}

def @func_15945(%var_15940: Tensor[(9, 8, 16), int64]) -> Tensor[(9, 8, 16), bool] {
  %187 = cast(-5 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %188 = cast(%var_15940, dtype="bool") /* ty=Tensor[(9, 8, 16), bool] */;
  less(%187, %188) /* ty=Tensor[(9, 8, 16), bool] */
}

def @func_2180(%var_2179: Tensor[(5, 5, 1), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) {
  %194 = fn (%var_2157: Tensor[(5, 5, 1), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) {
    %189 = cast(%var_2157, dtype="float64") /* ty=Tensor[(5, 5, 1), float64] */;
    %190 = sqrt(%189) /* ty=Tensor[(5, 5, 1), float64] */;
    %191 = cast(%190, dtype="float32") /* ty=Tensor[(5, 5, 1), float32] */;
    %192 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
    %193 = sin(%191) /* ty=Tensor[(5, 5, 1), float32] */;
    (%192, %193)
  };
  %194(%var_2179) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) */
}

def @func_6478(%var_6458: uint32) -> (Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) {
  %195 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %196 = %195.2;
  %197 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
  %198 = cast(%197, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %199 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%196, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %202 = cast(%var_6458, dtype="uint32") /* ty=uint32 */;
  %203 = cast(meta[relay.Constant][5] /* ty=Tensor[(264), uint32] */, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %204 = reshape(%202, newshape=[]) /* ty=uint32 */;
  %205 = reshape(%203, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint32] */;
  %206 = right_shift(%200, %201) /* ty=Tensor[(6, 10, 16), int64] */;
  %207 = @func_2516(%204, %205) /* ty=Tensor[(11, 6, 4), bool] */;
  %208 = @func_4840() /* ty=Tensor[(6, 10, 16), int64] */;
  (%206, %207, %var_6458, meta[relay.Constant][5] /* ty=Tensor[(264), uint32] */, %208)
}

def @func_10826(%var_10823: Tensor[(30), float32], %var_10824: Tensor[(264, 1), uint32], %var_10825: Tensor[(720), bool]) -> (Tensor[(6, 10, 16), int64], Tensor[(5, 6, 1), float32], Tensor[(30), float32], Tensor[(264, 1), uint32], Tensor[(8, 15, 6), bool], bool, Tensor[(720), bool]) {
  %223 = fn (%var_10787: Tensor[(30), float32], %var_10788: Tensor[(264, 1), uint32], %var_10797: Tensor[(720), bool]) -> (Tensor[(6, 10, 16), int64], Tensor[(5, 6, 1), float32], Tensor[(30), float32], Tensor[(264, 1), uint32], Tensor[(8, 15, 6), bool], bool, Tensor[(720), bool]) {
    %209 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %210 = cast(%var_10787, dtype="float32") /* ty=Tensor[(30), float32] */;
    %211 = cast(%var_10788, dtype="uint32") /* ty=Tensor[(264, 1), uint32] */;
    %212 = reshape(%210, newshape=[5, 6, 1]) /* ty=Tensor[(5, 6, 1), float32] */;
    %213 = reshape(%211, newshape=[264]) /* ty=Tensor[(264), uint32] */;
    %214 = @func_9137(%212, %213) /* ty=(Tensor[(5, 6, 1), float32], Tensor[(6, 10, 16), float64], Tensor[(264), uint32]) */;
    %215 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %216 = cast(%var_10797, dtype="bool") /* ty=Tensor[(720), bool] */;
    %217 = reshape(%215, newshape=[]) /* ty=bool */;
    %218 = reshape(%216, newshape=[8, 15, 6]) /* ty=Tensor[(8, 15, 6), bool] */;
    %219 = @func_4798(%217, %218) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) */;
    %220 = %209.0;
    %221 = %214.0;
    %222 = %219.0;
    (%220, %221, %var_10787, %var_10788, %222, True /* ty=bool */, %var_10797)
  };
  %223(%var_10823, %var_10824, %var_10825) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 6, 1), float32], Tensor[(30), float32], Tensor[(264, 1), uint32], Tensor[(8, 15, 6), bool], bool, Tensor[(720), bool]) */
}

def @func_14513() -> Tensor[(6, 10, 16), int64] {
  @func_14511() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_3509() -> (Tensor[(6, 10, 16), int64],) {
  %224 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %225 = %224.0;
  (%225,)
}

def @func_4622() -> (Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) {
  %226 = @func_3956() /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) */;
  %227 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %228 = %226.2;
  %229 = %227.0;
  (%228, %229)
}

def @func_7264(%var_7262: Tensor[(9, 16, 5), float64]) -> Tensor[(9, 16, 5), float64] {
  @func_7261(%var_7262) /* ty=Tensor[(9, 16, 5), float64] */
}

def @func_1013() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %230 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %231 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %232 = %230.1;
  %233 = %231.0;
  (%232, %233)
}

def @func_5570() -> (Tensor[(6, 10, 16), int64],) {
  @func_5568() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_6481(%var_6479: uint32) -> (Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) {
  @func_6478(%var_6479) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) */
}

def @func_8128() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) {
  @func_8126() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */
}

def @func_12280() -> (Tensor[(6, 10, 16), float64],) {
  %236 = fn () -> (Tensor[(6, 10, 16), float64],) {
    %234 = @func_11765() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) */;
    %235 = %234.2;
    (%235,)
  };
  %236() /* ty=(Tensor[(6, 10, 16), float64],) */
}

def @func_15657() -> (Tensor[(6, 10, 16), bool],) {
  %239 = fn () -> (Tensor[(6, 10, 16), bool],) {
    %237 = @func_15555() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
    %238 = %237.1;
    (%238,)
  };
  %239() /* ty=(Tensor[(6, 10, 16), bool],) */
}

def @func_7630() -> (Tensor[(6, 10, 16), int64],) {
  %240 = @func_6031() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %241 = %240.0;
  (%241,)
}

def @func_10987() -> (Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64]) {
  %250 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64]) {
    %242 = @func_10310() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %243 = @func_7428() /* ty=(Tensor[(3, 14, 1), float64],) */;
    %244 = %242.1;
    %245 = cast(%244, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
    %246 = reshape(%245, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
    %247 = @func_1523(%246) /* ty=(Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %248 = %243.0;
    %249 = %247.4;
    (%244, %248, %249)
  };
  %250() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_8070() -> Tensor[(6, 10, 16), int64] {
  %252 = fn () -> Tensor[(6, 10, 16), int64] {
    %251 = @func_2896() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %251.0
  };
  %252() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_9332() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %253 = @func_7109() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %254 = @func_5568() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %255 = %253.0;
  %256 = %254.0;
  (%255, %256)
}

def @func_13951() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_13949() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_4305(%var_4304: Tensor[(8, 7, 11), float32]) -> (Tensor[(8, 7, 11), float32],) {
  %259 = fn (%var_4285: Tensor[(8, 7, 11), float32]) -> (Tensor[(8, 7, 11), float32],) {
    %257 = cast(%var_4285, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
    %258 = log10(%257) /* ty=Tensor[(8, 7, 11), float32] */;
    (%258,)
  };
  %259(%var_4304) /* ty=(Tensor[(8, 7, 11), float32],) */
}

def @func_4170() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) {
  @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */
}

def @func_11783() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %260 = @func_7974() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %261 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %262 = %260.1;
  %263 = %261.1;
  (%262, %263)
}

def @func_8449() -> Tensor[(6, 10, 16), int64] {
  @func_8447() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_3608(%var_3606: uint32, %var_3607: Tensor[(264), uint32]) -> (Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32], Tensor[(11, 6, 4), int32]) {
  %283 = fn (%var_3575: uint32, %var_3576: Tensor[(264), uint32]) -> (Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32], Tensor[(11, 6, 4), int32]) {
    %264 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %265 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %266 = %265.1;
    %267 = cast(%266, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
    %268 = reshape(%267, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
    %269 = @func_1313(%268) /* ty=(Tensor[(6, 10, 16), int32],) */;
    %270 = cast(%var_3575, dtype="uint32") /* ty=uint32 */;
    %271 = cast(%var_3576, dtype="uint32") /* ty=Tensor[(264), uint32] */;
    %272 = reshape(%270, newshape=[]) /* ty=uint32 */;
    %273 = reshape(%271, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint32] */;
    %274 = @func_2516(%272, %273) /* ty=Tensor[(11, 6, 4), bool] */;
    %275 = cast(%var_3576, dtype="int32") /* ty=Tensor[(264), int32] */;
    %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
    %277 = cast(%274, dtype="int32") /* ty=Tensor[(11, 6, 4), int32] */;
    %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %279 = %264.0;
    %280 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
    %281 = %269.0;
    %282 = right_shift(%277, %278) /* ty=Tensor[(11, 6, 4), int32] */;
    (%279, %var_3575, %280, %266, %281, %282)
  };
  %283(%var_3606, %var_3607) /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32], Tensor[(11, 6, 4), int32]) */
}

def @func_3958() -> (Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) {
  @func_3956() /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) */
}

def @func_6666() -> Tensor[(6, 10, 16), int64] {
  %284 = fn () -> Tensor[(6, 10, 16), int64] {
    @func_5842() /* ty=Tensor[(6, 10, 16), int64] */
  };
  %284() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_12235() -> Tensor[(6, 10, 16), int64] {
  @func_12233() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_16738(%var_16735: Tensor[(4, 6, 12), int8], %var_16736: Tensor[(4, 6, 12), int8], %var_16737: Tensor[(4, 6, 12), int8]) -> (Tensor[(4, 6, 12), int8], Tensor[(6, 10, 16), int64], Tensor[(4, 6, 12), float64]) {
  @func_16733(%var_16735, %var_16736, %var_16737) /* ty=(Tensor[(4, 6, 12), int8], Tensor[(6, 10, 16), int64], Tensor[(4, 6, 12), float64]) */
}

def @func_9185(%var_9156: float64, %var_9157: Tensor[(1, 13, 5), float64]) -> (Tensor[(?, 13, 5), bool],) {
  %285 = cast(%var_9156, dtype="float64") /* ty=float64 */;
  %286 = cast(%var_9157, dtype="float64") /* ty=Tensor[(1, 13, 5), float64] */;
  %287 = maximum(%285, %286) /* ty=Tensor[(1, 13, 5), float64] */;
  %288 = cast(%287, dtype="float64") /* ty=Tensor[(1, 13, 5), float64] */;
  %289 = shape_of(%var_9157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%var_9157, dtype="float64") /* ty=Tensor[(1, 13, 5), float64] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %292 = floor_mod(%290, %291) /* ty=Tensor[(?, 13, 5), float64] */;
  %293 = cast(%287, dtype="bool") /* ty=Tensor[(1, 13, 5), bool] */;
  %294 = shape_of(%292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%292, dtype="bool") /* ty=Tensor[(?, 13, 5), bool] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %297 = not_equal(%295, %296) /* ty=Tensor[(?, 13, 5), bool] */;
  (%297,)
}

def @func_8612() -> (Tensor[(6, 10, 16), int64],) {
  %300 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %298 = @func_4006() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %299 = %298.1;
    (%299,)
  };
  %300() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_1733() -> Tensor[(6, 10, 16), int64] {
  @func_1731() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_7261(%var_7257: Tensor[(9, 16, 5), float64]) -> Tensor[(9, 16, 5), float64] {
  %301 = cast(%var_7257, dtype="float64") /* ty=Tensor[(9, 16, 5), float64] */;
  log2(%301) /* ty=Tensor[(9, 16, 5), float64] */
}

def @func_9068() -> (Tensor[(6, 10, 16), int64],) {
  %303 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %302 = @func_6665() /* ty=Tensor[(6, 10, 16), int64] */;
    (%302,)
  };
  %303() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_2257() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */
}

def @func_5113() -> Tensor[(6, 10, 16), int64] {
  %304 = @func_1839() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %304.0
}

def @func_3391(%var_3390: Tensor[(14, 7, 16), float32]) -> Tensor[(14, 7, 16), float32] {
  %306 = fn (%var_3386: Tensor[(14, 7, 16), float32]) -> Tensor[(14, 7, 16), float32] {
    %305 = cast(%var_3386, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
    atanh(%305) /* ty=Tensor[(14, 7, 16), float32] */
  };
  %306(%var_3390) /* ty=Tensor[(14, 7, 16), float32] */
}

def @func_3450() -> (Tensor[(6, 10, 16), int64],) {
  %309 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %307 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %308 = %307.4;
    (%308,)
  };
  %309() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_3876() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %314 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %310 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
    %311 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %312 = %310.1;
    %313 = %311.0;
    (%312, %313)
  };
  %314() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_5976(%var_5974: Tensor[(3, 12, 9), int8], %var_5975: Tensor[(3, 12, 9), int8]) -> (Tensor[(3, 12, 9), bool], Tensor[(6, 10, 16), int64]) {
  @func_5972(%var_5974, %var_5975) /* ty=(Tensor[(3, 12, 9), bool], Tensor[(6, 10, 16), int64]) */
}

def @func_16850(%var_16848: Tensor[(12, 11, 8), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(12, 11, 8), float64], Tensor[(1, 11, 8), float32]) {
  @func_16847(%var_16848) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(12, 11, 8), float64], Tensor[(1, 11, 8), float32]) */
}

def @func_11287() -> Tensor[(6, 10, 16), int64] {
  @func_11285() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_7550() -> uint32 {
  %315 = @func_4825() /* ty=(uint32,) */;
  %315.0
}

def @func_9797() -> (Tensor[(6, 10, 16), int64],) {
  %316 = @func_4886() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %317 = %316.3;
  (%317,)
}

def @func_985() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %318 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %319 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %320 = %318.0;
  %321 = %319.3;
  (%320, %321)
}

def @func_13773() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %326 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %322 = @func_5128() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
    %323 = @func_6624() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %324 = %322.0;
    %325 = %323.0;
    (%324, %325)
  };
  %326() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_987() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_924() -> Tensor[(6, 10, 16), int64] {
  @func_922() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_9260(%var_9210: Tensor[(7, 9, 12), int8], %var_9211: Tensor[(7, 9, 12), int8], %var_9232: Tensor[(7, 9, 12), int8]) -> (Tensor[(7, 9, 12), int8], Tensor[(7, 9, 12), bool], Tensor[(6, 10, 16), float64]) {
  %327 = cast(%var_9211, dtype="int8") /* ty=Tensor[(7, 9, 12), int8] */;
  %328 = shape_of(%var_9210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_9210, dtype="int8") /* ty=Tensor[(7, 9, 12), int8] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %331 = cast(%var_9232, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %332 = shape_of(%var_9211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_9211, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = @func_4762() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %336 = subtract(%329, %330) /* ty=Tensor[(7, 9, 12), int8] */;
  %337 = less(%333, %334) /* ty=Tensor[(7, 9, 12), bool] */;
  %338 = %335.0;
  (%336, %337, %338)
}

def @func_13209() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %339 = @func_12303() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32]) */;
  %340 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %341 = %339.0;
  %342 = @func_4247() /* ty=Tensor[(6, 10, 16), int64] */;
  %343 = %340.2;
  %344 = @func_9615() /* ty=Tensor[(6, 10, 16), int64] */;
  (%341, %342, %343, %344)
}

def @func_3511() -> (Tensor[(6, 10, 16), int64],) {
  @func_3509() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_11113() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %345 = @func_4972() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %346 = @func_10310() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %347 = %345.1;
  %348 = %346.1;
  (%347, %348)
}

def @func_6164() -> (Tensor[(6, 10, 16), int64],) {
  %351 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %349 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %350 = %349.0;
    (%350,)
  };
  %351() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_15413() -> Tensor[(6, 10, 16), int64] {
  %352 = @func_7398() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %352.0
}

def @func_16847(%var_16837: Tensor[(12, 11, 8), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(12, 11, 8), float64], Tensor[(1, 11, 8), float32]) {
  %353 = @func_15878() /* ty=(Tensor[(1, 11, 8), float64],) */;
  %354 = %353.0;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
  %356 = cast(%var_16837, dtype="float64") /* ty=Tensor[(12, 11, 8), float64] */;
  %357 = cast(%354, dtype="float32") /* ty=Tensor[(1, 11, 8), float32] */;
  %358 = @func_10446() /* ty=Tensor[(6, 10, 16), int64] */;
  %359 = floor_mod(%355, %356) /* ty=Tensor[(12, 11, 8), float64] */;
  %360 = acos(%357) /* ty=Tensor[(1, 11, 8), float32] */;
  (%358, %359, %360)
}

def @func_4801(%var_4799: bool, %var_4800: Tensor[(8, 15, 6), bool]) -> (Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) {
  %369 = fn (%var_4780: bool, %var_4788: Tensor[(8, 15, 6), bool]) -> (Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) {
    %361 = cast(%var_4780, dtype="bool") /* ty=bool */;
    %362 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 15, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 15, 6), bool] */;
    %363 = cast(%var_4788, dtype="int16") /* ty=Tensor[(8, 15, 6), int16] */;
    %364 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(8, 15, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %365 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 15, 6), bool] */, dtype="int16") /* ty=Tensor[(8, 15, 6), int16] */;
    %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %367 = logical_or(%361, %362) /* ty=Tensor[(8, 15, 6), bool] */;
    %368 = bitwise_xor(%365, %366) /* ty=Tensor[(8, 15, 6), int16] */;
    (%367, %368)
  };
  %369(%var_4799, %var_4800) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) */
}

def @func_11332() -> Tensor[(6, 10, 16), int64] {
  @func_11330() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_12305() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32]) {
  @func_12303() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32]) */
}

def @func_16675(%var_16673: Tensor[(495), float32]) -> (Tensor[(1, 11, 8), float64], Tensor[(3, 15, 11), bool], Tensor[(495), float32]) {
  @func_16672(%var_16673) /* ty=(Tensor[(1, 11, 8), float64], Tensor[(3, 15, 11), bool], Tensor[(495), float32]) */
}

def @func_13980() -> (Tensor[(6, 10, 16), int64],) {
  %370 = @func_13609() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %371 = %370.0;
  (%371,)
}

def @func_7018() -> Tensor[(6, 10, 16), int64] {
  @func_7016() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_5259() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_5257() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_9683() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64]) {
  @func_9681() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64]) */
}

def @func_9816(%var_9814: Tensor[(4, 12, 13), float32]) -> (Tensor[(4, 12, 13), float32], Tensor[(6, 10, 16), int16]) {
  @func_9813(%var_9814) /* ty=(Tensor[(4, 12, 13), float32], Tensor[(6, 10, 16), int16]) */
}

def @func_12303() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32]) {
  %372 = @func_12155() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %373 = @func_9291() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %374 = %372.3;
  %375 = cast(%374, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %376 = reshape(%375, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %377 = @func_2995(%376) /* ty=(Tensor[(6, 10, 16), float32],) */;
  %378 = %373.0;
  %379 = %377.0;
  (%374, %378, %379)
}

def @func_4168() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) {
  %380 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %381 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %382 = cast(meta[relay.Constant][7] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
  %383 = reshape(%382, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float64] */;
  %384 = @func_2178(%383) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) */;
  %385 = %380.0;
  %386 = %381.1;
  %387 = %384.0;
  (%385, %386, %387, meta[relay.Constant][7] /* ty=Tensor[(25), float64] */)
}

def @func_5435() -> Tensor[(6, 10, 16), int64] {
  %388 = @func_3711() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %388.2
}

def @func_6626() -> (Tensor[(6, 10, 16), int64],) {
  @func_6624() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_7620(%var_7619: Tensor[(13, 10, 4), float64]) -> Tensor[(13, 10, 4), float64] {
  %390 = fn (%var_7615: Tensor[(13, 10, 4), float64]) -> Tensor[(13, 10, 4), float64] {
    %389 = cast(%var_7615, dtype="float64") /* ty=Tensor[(13, 10, 4), float64] */;
    cos(%389) /* ty=Tensor[(13, 10, 4), float64] */
  };
  %390(%var_7619) /* ty=Tensor[(13, 10, 4), float64] */
}

def @func_1165() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %391 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %392 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %393 = %391.1;
  %394 = %392.0;
  (%393, %394)
}

def @func_6101() -> (Tensor[(6, 10, 16), int64],) {
  @func_6099() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_13022() -> Tensor[(6, 10, 16), int64] {
  %395 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %395.0
}

def @func_16267(%var_16265: float64, %var_16266: Tensor[(65), float64]) -> (Tensor[(6, 10, 16), int64], float64, Tensor[(65), uint32], Tensor[(6, 10, 16), int64], Tensor[(?, 13, 5), bool], Tensor[(6, 10, 16), float64], Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) {
  @func_16263(%var_16265, %var_16266) /* ty=(Tensor[(6, 10, 16), int64], float64, Tensor[(65), uint32], Tensor[(6, 10, 16), int64], Tensor[(?, 13, 5), bool], Tensor[(6, 10, 16), float64], Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) */
}

def @func_5169(%var_5167: Tensor[(13, 15, 9), float64], %var_5168: Tensor[(13, 15, 9), float64]) -> (Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) {
  %405 = fn (%var_5132: Tensor[(13, 15, 9), float64], %var_5145: Tensor[(13, 15, 9), float64]) -> (Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) {
    %396 = cast(%var_5132, dtype="float64") /* ty=Tensor[(13, 15, 9), float64] */;
    %397 = asin(%396) /* ty=Tensor[(13, 15, 9), float64] */;
    %398 = cast(%var_5145, dtype="bool") /* ty=Tensor[(13, 15, 9), bool] */;
    %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
    %400 = cast(%397, dtype="bool") /* ty=Tensor[(13, 15, 9), bool] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %402 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
    %403 = logical_and(%400, %401) /* ty=Tensor[(13, 15, 9), bool] */;
    %404 = %402.1;
    (%403, %404)
  };
  %405(%var_5167, %var_5168) /* ty=(Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) */
}

def @func_2997(%var_2996: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), float32],) {
  %413 = fn (%var_2983: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), float32],) {
    %406 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %407 = %406.0;
    %408 = cast(%var_2983, dtype="float32") /* ty=Tensor[(6, 10, 16), float32] */;
    %409 = shape_of(%407, dtype="int32") /* ty=Tensor[(3), int32] */;
    %410 = cast(%407, dtype="float32") /* ty=Tensor[(6, 10, 16), float32] */;
    %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %412 = floor_divide(%410, %411) /* ty=Tensor[(6, 10, 16), float32] */;
    (%412,)
  };
  %413(%var_2996) /* ty=(Tensor[(6, 10, 16), float32],) */
}

def @func_8993() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(6, 10, 16), float64]) {
  %414 = @func_1574() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %415 = @func_5599() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %416 = cast(meta[relay.Constant][8] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %417 = reshape(%416, newshape=[]) /* ty=uint32 */;
  %418 = @func_6478(%417) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) */;
  %419 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %420 = %414.0;
  %421 = @func_6554() /* ty=Tensor[(6, 10, 16), int64] */;
  %422 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
  %423 = %415.0;
  %424 = %418.1;
  %425 = %419.1;
  (%420, %421, %422, %423, %424, meta[relay.Constant][8] /* ty=uint32 */, %425)
}

def @func_3816(%var_3814: Tensor[(1, 11, 8), float64]) -> (Tensor[(1, 11, 8), float64],) {
  @func_3813(%var_3814) /* ty=(Tensor[(1, 11, 8), float64],) */
}

def @func_1073() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_6714() -> (Tensor[(6, 10, 16), int64],) {
  %428 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %426 = @func_5599() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %427 = %426.0;
    (%427,)
  };
  %428() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_10625() -> (Tensor[(6, 10, 16), int64], Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64]) {
  %434 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64]) {
    %429 = @func_9791() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %430 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %431 = %429.0;
    %432 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
    %433 = %430.1;
    (%431, %432, %433)
  };
  %434() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64]) */
}

def @func_2609() -> (Tensor[(6, 10, 16), float64],) {
  %439 = fn () -> (Tensor[(6, 10, 16), float64],) {
    %435 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %436 = %435.1;
    %437 = cast(%436, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
    %438 = asinh(%437) /* ty=Tensor[(6, 10, 16), float64] */;
    (%438,)
  };
  %439() /* ty=(Tensor[(6, 10, 16), float64],) */
}

def @func_8803(%var_8802: Tensor[(13, 13, 2), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(13, 13, 2), float64]) {
  %446 = fn (%var_8780: Tensor[(13, 13, 2), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(13, 13, 2), float64]) {
    %440 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %441 = cast(%var_8780, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
    %442 = cos(%441) /* ty=Tensor[(13, 13, 2), float32] */;
    %443 = cast(%442, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
    %444 = %440.0;
    %445 = asinh(%443) /* ty=Tensor[(13, 13, 2), float64] */;
    (%444, %445)
  };
  %446(%var_8802) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(13, 13, 2), float64]) */
}

def @func_9510() -> Tensor[(6, 10, 16), bool] {
  %447 = @func_4060() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %447.0
}

def @func_5699(%var_5692: Tensor[(11, 1), uint32]) -> (Tensor[(11, ?), uint32],) {
  %448 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 1), uint32] */, dtype="uint32") /* ty=Tensor[(11, 1), uint32] */;
  %449 = shape_of(%var_5692, dtype="int32") /* ty=Tensor[(2), int32] */;
  %450 = cast(%var_5692, dtype="uint32") /* ty=Tensor[(11, 1), uint32] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %452 = left_shift(%450, %451) /* ty=Tensor[(11, ?), uint32] */;
  (%452,)
}

def @func_6306() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %453 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %454 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  (%453, %454)
}

def @func_1575() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %459 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %455 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %456 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %457 = %455.0;
    %458 = %456.1;
    (%457, %458)
  };
  %459() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_16123() -> Tensor[(6, 10, 16), int64] {
  %461 = fn () -> Tensor[(6, 10, 16), int64] {
    %460 = @func_11645() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %460.0
  };
  %461() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_15948(%var_15946: Tensor[(9, 8, 16), int64]) -> Tensor[(9, 8, 16), bool] {
  @func_15945(%var_15946) /* ty=Tensor[(9, 8, 16), bool] */
}

def @func_2255() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %462 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
  %463 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 10, 16), int64] */, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%462, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %467 = not_equal(%465, %466) /* ty=Tensor[(6, 10, 16), bool] */;
  %468 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
  (%467, %468)
}

def @func_2375() -> (Tensor[(6, 10, 16), int64],) {
  @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_1401() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %475 = fn () -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
    %469 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %470 = %469.0;
    %471 = cast(%470, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
    %472 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %473 = cosh(%471) /* ty=Tensor[(6, 10, 16), float64] */;
    %474 = %472.2;
    (%473, %474)
  };
  %475() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_4062() -> (Tensor[(6, 10, 16), bool],) {
  @func_4060() /* ty=(Tensor[(6, 10, 16), bool],) */
}

def @func_14341(%var_14232: Tensor[(15, 10, 8), float32], %var_14294: Tensor[(15, 10, 8), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 10, 8), int32], Tensor[(15, 10, 8), uint64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32], Tensor[(6, 10, 16), bool]) {
  %476 = @func_9067() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %477 = @func_9791() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %478 = cast(%var_14232, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %479 = sin(%478) /* ty=Tensor[(15, 10, 8), float32] */;
  %480 = cast(%479, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %481 = atan(%480) /* ty=Tensor[(15, 10, 8), float32] */;
  %482 = cast(%481, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %483 = erf(%482) /* ty=Tensor[(15, 10, 8), float32] */;
  %484 = cast(%483, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %485 = cosh(%484) /* ty=Tensor[(15, 10, 8), float32] */;
  %486 = cast(%var_14294, dtype="int32") /* ty=Tensor[(15, 10, 8), int32] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%485, dtype="int32") /* ty=Tensor[(15, 10, 8), int32] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %490 = cast(%479, dtype="uint64") /* ty=Tensor[(15, 10, 8), uint64] */;
  %491 = shape_of(%481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%481, dtype="uint64") /* ty=Tensor[(15, 10, 8), uint64] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %494 = cast(meta[relay.Constant][11] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
  %495 = reshape(%494, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %496 = @func_11268() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %497 = %476.0;
  %498 = %477.0;
  %499 = bitwise_xor(%488, %489) /* ty=Tensor[(15, 10, 8), int32] */;
  %500 = left_shift(%492, %493) /* ty=Tensor[(15, 10, 8), uint64] */;
  %501 = @func_12319(%495) /* ty=Tensor[(12, 14, 14), float32] */;
  %502 = %496.0;
  (%497, %498, %499, %500, %501, meta[relay.Constant][11] /* ty=Tensor[(2352), float32] */, %502)
}

def @func_8542() -> (Tensor[(6, 10, 16), float64],) {
  %505 = fn () -> (Tensor[(6, 10, 16), float64],) {
    %503 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %504 = %503.0;
    (%504,)
  };
  %505() /* ty=(Tensor[(6, 10, 16), float64],) */
}

def @func_4432(%var_4430: Tensor[(6, 10, 16), float64]) -> (Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) {
  @func_4429(%var_4430) /* ty=(Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) */
}

def @func_9759() -> Tensor[(6, 10, 16), int64] {
  %507 = fn () -> Tensor[(6, 10, 16), int64] {
    %506 = @func_7671() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %506.1
  };
  %507() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_15975() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_15973() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_5115() -> Tensor[(6, 10, 16), int64] {
  @func_5113() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_9750(%var_9733: Tensor[(3, 15, 11), float32], %var_9734: Tensor[(3, 15, 11), float32]) -> (Tensor[(3, 15, 11), bool], Tensor[(6, 10, 16), int64]) {
  %508 = cast(%var_9734, dtype="bool") /* ty=Tensor[(3, 15, 11), bool] */;
  %509 = shape_of(%var_9733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%var_9733, dtype="bool") /* ty=Tensor[(3, 15, 11), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = @func_7245() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %513 = greater_equal(%510, %511) /* ty=Tensor[(3, 15, 11), bool] */;
  %514 = %512.0;
  (%513, %514)
}

def @func_7867() -> (Tensor[(6, 10, 16), bool],) {
  %517 = fn () -> (Tensor[(6, 10, 16), bool],) {
    %515 = @func_4060() /* ty=(Tensor[(6, 10, 16), bool],) */;
    %516 = %515.0;
    (%516,)
  };
  %517() /* ty=(Tensor[(6, 10, 16), bool],) */
}

def @func_5778() -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(22, 4), float32]) {
  %518 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %519 = cast(meta[relay.Constant][12] /* ty=Tensor[(22, 4), float64] */, dtype="float64") /* ty=Tensor[(22, 4), float64] */;
  %520 = reshape(%519, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %521 = @func_3813(%520) /* ty=(Tensor[(1, 11, 8), float64],) */;
  %522 = cast(meta[relay.Constant][12] /* ty=Tensor[(22, 4), float64] */, dtype="float32") /* ty=Tensor[(22, 4), float32] */;
  %523 = %518.0;
  %524 = %521.0;
  %525 = erf(%522) /* ty=Tensor[(22, 4), float32] */;
  (%523, %524, %525)
}

def @func_296() -> Tensor[(6, 10, 16), int64] {
  %532 = fn () -> Tensor[(6, 10, 16), int64] {
    %526 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
    %527 = log10(%526) /* ty=Tensor[(6, 10, 16), float64] */;
    %528 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 10, 16), float64] */, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
    %529 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
    %530 = cast(%527, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    add(%530, %531) /* ty=Tensor[(6, 10, 16), int64] */
  };
  %532() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_4207() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) {
  @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */
}

def @func_8716() -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) {
  @func_8714() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) */
}

def @func_12573(%var_12572: Tensor[(3, 20), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(12, 1, 5), bool], float32, Tensor[(3, 20), float32], Tensor[(6, 10, 16), int64]) {
  %543 = fn (%var_12539: Tensor[(3, 20), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(12, 1, 5), bool], float32, Tensor[(3, 20), float32], Tensor[(6, 10, 16), int64]) {
    %533 = @func_8349() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %534 = cast(-8.59382f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %535 = cast(%var_12539, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
    %536 = reshape(%534, newshape=[]) /* ty=float32 */;
    %537 = reshape(%535, newshape=[12, 1, 5]) /* ty=Tensor[(12, 1, 5), float32] */;
    %538 = @func_8250(%536, %537) /* ty=(Tensor[(12, 1, 5), float32], Tensor[(12, 1, 5), bool]) */;
    %539 = @func_12303() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32]) */;
    %540 = %533.1;
    %541 = %538.1;
    %542 = %539.0;
    (%540, %541, -8.59382f /* ty=float32 */, %var_12539, %542)
  };
  %543(%var_12572) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(12, 1, 5), bool], float32, Tensor[(3, 20), float32], Tensor[(6, 10, 16), int64]) */
}

def @func_16572() -> Tensor[(6, 10, 16), int64] {
  @func_16570() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_6272() -> Tensor[(6, 10, 16), int64] {
  %545 = fn () -> Tensor[(6, 10, 16), int64] {
    %544 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %544.1
  };
  %545() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_1275() -> Tensor[(6, 10, 16), int64] {
  %547 = fn () -> Tensor[(6, 10, 16), int64] {
    %546 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %546.0
  };
  %547() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_5476() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32]) {
  @func_5474() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32]) */
}

def @func_7030() -> (Tensor[(6, 10, 16), int64],) {
  %550 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %548 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %549 = %548.0;
    (%549,)
  };
  %550() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_13902() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %551 = @func_3875() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %552 = @func_10521() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %553 = %551.0;
  %554 = @func_11330() /* ty=Tensor[(6, 10, 16), int64] */;
  %555 = %552.2;
  (%553, %554, %555)
}

def @func_15922() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %560 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %556 = @func_9291() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %557 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %558 = %556.0;
    %559 = %557.1;
    (%558, %559)
  };
  %560() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_12206() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %564 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %561 = @func_11783() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %562 = %561.1;
    %563 = @func_1685() /* ty=Tensor[(6, 10, 16), int64] */;
    (%562, %563)
  };
  %564() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_5877() -> Tensor[(6, 10, 16), int64] {
  %566 = fn () -> Tensor[(6, 10, 16), int64] {
    %565 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
    %565.1
  };
  %566() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_11714() -> (Tensor[(6, 10, 16), int64],) {
  @func_11712() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_6263() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %575 = fn () -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %567 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
    %568 = %567.0;
    %569 = cast(%568, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
    %570 = reshape(%569, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
    %571 = @func_1523(%570) /* ty=(Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %572 = %571.4;
    %573 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
    %574 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
    (%568, %572, %573, %574)
  };
  %575() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_11402() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_11400() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_6882() -> (Tensor[(6, 10, 16), int64],) {
  %578 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %576 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %577 = %576.1;
    (%577,)
  };
  %578() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_4531(%var_4529: Tensor[(264), uint32]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) {
  @func_4528(%var_4529) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) */
}

def @func_13211() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  @func_13209() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_12036() -> Tensor[(5, 4, 8), uint64] {
  %583 = fn () -> Tensor[(5, 4, 8), uint64] {
    %579 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 4, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 4, 8), uint64] */;
    %580 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(5, 4, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %581 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 4, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 4, 8), uint64] */;
    %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    add(%581, %582) /* ty=Tensor[(5, 4, 8), uint64] */
  };
  %583() /* ty=Tensor[(5, 4, 8), uint64] */
}

def @func_9813(%var_9803: Tensor[(4, 12, 13), float32]) -> (Tensor[(4, 12, 13), float32], Tensor[(6, 10, 16), int16]) {
  %584 = cast(%var_9803, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
  %585 = @func_9577() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int16]) */;
  %586 = log10(%584) /* ty=Tensor[(4, 12, 13), float32] */;
  %587 = %585.1;
  (%586, %587)
}

def @func_6848(%var_6838: bool) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(15, 12, 13), float32]) {
  %588 = @func_6713() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %589 = @func_2932() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %590 = @func_3484() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %591 = @func_6713() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %592 = cast(%var_6838, dtype="bool") /* ty=bool */;
  %593 = reshape(%592, newshape=[]) /* ty=bool */;
  %594 = @func_5739(%593) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) */;
  %595 = @func_5876() /* ty=Tensor[(6, 10, 16), int64] */;
  %596 = %588.0;
  %597 = %589.1;
  %598 = %590.1;
  %599 = %591.0;
  %600 = %594.1;
  %601 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
  (%595, %596, %597, %598, %599, %600, %var_6838, %601)
}

def @func_1641() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %602 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %603 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %604 = %602.1;
  %605 = %603.2;
  (%604, %605)
}

def @func_7924() -> (Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_7922() /* ty=(Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_13904() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  @func_13902() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */
}

def @func_14204() -> Tensor[(6, 10, 16), int64] {
  @func_14202() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_5129() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) {
  %613 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) {
    %606 = @func_4972() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %607 = cast(meta[relay.Constant][16] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
    %608 = reshape(%607, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float64] */;
    %609 = @func_2178(%608) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) */;
    %610 = @func_1685() /* ty=Tensor[(6, 10, 16), int64] */;
    %611 = %606.1;
    %612 = %609.0;
    (%610, %611, %612, meta[relay.Constant][16] /* ty=Tensor[(25), float64] */)
  };
  %613() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */
}

def @func_15301(%var_15299: Tensor[(66, 4), uint32], %var_15300: Tensor[(1755), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), float64], Tensor[(1755), float64], Tensor[(1755), float64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(66, 4), bool], Tensor[(6, 10, 16), float64], Tensor[(66, 4), int64]) {
  %650 = fn (%var_15219: Tensor[(66, 4), uint32], %var_15234: Tensor[(1755), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), float64], Tensor[(1755), float64], Tensor[(1755), float64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(66, 4), bool], Tensor[(6, 10, 16), float64], Tensor[(66, 4), int64]) {
    %614 = @func_13568() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %615 = @func_11765() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) */;
    %616 = cast(%var_15219, dtype="uint32") /* ty=Tensor[(66, 4), uint32] */;
    %617 = reshape(%616, newshape=[264]) /* ty=Tensor[(264), uint32] */;
    %618 = @func_4528(%617) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) */;
    %619 = cast(%var_15234, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %620 = reshape(%619, newshape=[1755]) /* ty=Tensor[(1755), float64] */;
    %621 = @func_11196(%620) /* ty=(Tensor[(15, 5, 5), float32], Tensor[(720), bool], bool, Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(6, 10, 16), int64]) */;
    %622 = @func_13902() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
    %623 = @func_13980() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %624 = @func_10624() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64]) */;
    %625 = cast(%var_15219, dtype="float32") /* ty=Tensor[(66, 4), float32] */;
    %626 = exp(%625) /* ty=Tensor[(66, 4), float32] */;
    %627 = cast(%626, dtype="float64") /* ty=Tensor[(66, 4), float64] */;
    %628 = acos(%627) /* ty=Tensor[(66, 4), float64] */;
    %629 = cast(%626, dtype="bool") /* ty=Tensor[(66, 4), bool] */;
    %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(2), int32] */;
    %631 = cast(%628, dtype="bool") /* ty=Tensor[(66, 4), bool] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %633 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %634 = cast(%628, dtype="float32") /* ty=Tensor[(66, 4), float32] */;
    %635 = asin(%634) /* ty=Tensor[(66, 4), float32] */;
    %636 = cast(%628, dtype="int64") /* ty=Tensor[(66, 4), int64] */;
    %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(2), int32] */;
    %638 = cast(%635, dtype="int64") /* ty=Tensor[(66, 4), int64] */;
    %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %640 = %614.0;
    %641 = %615.2;
    %642 = %618.1;
    %643 = %621.4;
    %644 = %622.2;
    %645 = %623.0;
    %646 = %624.2;
    %647 = logical_and(%631, %632) /* ty=Tensor[(66, 4), bool] */;
    %648 = %633.0;
    %649 = logical_xor(%638, %639) /* ty=Tensor[(66, 4), int64] */;
    (%640, %641, %642, %643, %var_15234, %644, %645, %646, %647, %648, %649)
  };
  %650(%var_15299, %var_15300) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), float64], Tensor[(1755), float64], Tensor[(1755), float64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(66, 4), bool], Tensor[(6, 10, 16), float64], Tensor[(66, 4), int64]) */
}

def @func_15837(%var_15836: Tensor[(6, 15, 3), float64]) -> (Tensor[(6, 15, 3), float64],) {
  %653 = fn (%var_15832: Tensor[(6, 15, 3), float64]) -> (Tensor[(6, 15, 3), float64],) {
    %651 = cast(%var_15832, dtype="float64") /* ty=Tensor[(6, 15, 3), float64] */;
    %652 = exp(%651) /* ty=Tensor[(6, 15, 3), float64] */;
    (%652,)
  };
  %653(%var_15836) /* ty=(Tensor[(6, 15, 3), float64],) */
}

def @func_11269() -> (Tensor[(6, 10, 16), bool],) {
  %656 = fn () -> (Tensor[(6, 10, 16), bool],) {
    %654 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
    %655 = %654.2;
    (%655,)
  };
  %656() /* ty=(Tensor[(6, 10, 16), bool],) */
}

def @func_9189(%var_9187: float64, %var_9188: Tensor[(1, 13, 5), float64]) -> (Tensor[(?, 13, 5), bool],) {
  @func_9185(%var_9187, %var_9188) /* ty=(Tensor[(?, 13, 5), bool],) */
}

def @func_7188() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 117), uint64]) {
  @func_7186() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 117), uint64]) */
}

def @func_11766() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) {
  %665 = fn () -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) {
    %657 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
    %658 = @func_6881() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %659 = %658.0;
    %660 = cast(%659, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
    %661 = reshape(%660, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
    %662 = @func_1523(%661) /* ty=(Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %663 = %657.2;
    %664 = %662.3;
    (%663, %659, %664)
  };
  %665() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) */
}

def @func_8484() -> (Tensor[(6, 10, 16), int64],) {
  %667 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %666 = @func_6785() /* ty=Tensor[(6, 10, 16), int64] */;
    (%666,)
  };
  %667() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_835() -> Tensor[(6, 10, 16), int64] {
  %669 = fn () -> Tensor[(6, 10, 16), int64] {
    %668 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %668.0
  };
  %669() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_6099() -> (Tensor[(6, 10, 16), int64],) {
  %670 = @func_5757() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %671 = %670.0;
  (%671,)
}

def @func_6187(%var_6185: Tensor[(1, 6, 5), float32]) -> Tensor[(1, 6, 5), float32] {
  @func_6184(%var_6185) /* ty=Tensor[(1, 6, 5), float32] */
}

def @func_9469() -> (Tensor[(6, 10, 16), int64],) {
  %673 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %672 = @func_6554() /* ty=Tensor[(6, 10, 16), int64] */;
    (%672,)
  };
  %673() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_4248() -> Tensor[(6, 10, 16), int64] {
  %675 = fn () -> Tensor[(6, 10, 16), int64] {
    %674 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %674.0
  };
  %675() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_5757() -> (Tensor[(6, 10, 16), int64],) {
  %676 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %677 = %676.1;
  (%677,)
}

def @func_342() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %682 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %678 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
    %679 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
    %680 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
    %681 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
    (%678, %679, %680, %681)
  };
  %682() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_4763() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %687 = fn () -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
    %683 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %684 = @func_3875() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %685 = %683.0;
    %686 = %684.1;
    (%685, %686)
  };
  %687() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_6954() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %688 = @func_4060() /* ty=(Tensor[(6, 10, 16), bool],) */;
  %689 = @func_6881() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %690 = %688.0;
  %691 = %689.0;
  (%690, %691)
}

def @func_2404() -> Tensor[(6, 10, 16), int64] {
  %692 = fn () -> Tensor[(6, 10, 16), int64] {
    @func_1274() /* ty=Tensor[(6, 10, 16), int64] */
  };
  %692() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_8349() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %693 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %694 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
  %695 = %693.1;
  (%694, %695)
}

def @func_8868() -> (Tensor[(6, 10, 16), int64],) {
  %696 = @func_4247() /* ty=Tensor[(6, 10, 16), int64] */;
  (%696,)
}

def @func_5780() -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(22, 4), float32]) {
  @func_5778() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(22, 4), float32]) */
}

def @func_4205() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) {
  %697 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %698 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %699 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %700 = %697.0;
  %701 = %698.4;
  %702 = %699.0;
  (%700, %701, %702)
}

def @func_1315(%var_1314: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), int32],) {
  %710 = fn (%var_1301: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), int32],) {
    %703 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %704 = %703.0;
    %705 = cast(%var_1301, dtype="int32") /* ty=Tensor[(6, 10, 16), int32] */;
    %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
    %707 = cast(%704, dtype="int32") /* ty=Tensor[(6, 10, 16), int32] */;
    %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %709 = minimum(%707, %708) /* ty=Tensor[(6, 10, 16), int32] */;
    (%709,)
  };
  %710(%var_1314) /* ty=(Tensor[(6, 10, 16), int32],) */
}

def @func_4683() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_4681() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_8915() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_8913() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_10893() -> Tensor[(6, 10, 16), int64] {
  %711 = @func_8753() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %711.0
}

def @func_16780() -> (Tensor[(6, 10, 16), int64],) {
  %714 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %712 = @func_13772() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %713 = %712.1;
    (%713,)
  };
  %714() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_9981() -> (Tensor[(6, 10, 16), int64],) {
  @func_9979() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_9011() -> (Tensor[(6, 10, 16), int64],) {
  %717 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %715 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %716 = %715.1;
    (%716,)
  };
  %717() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_5376(%var_5375: Tensor[(2145, 1), int64]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(2145, 1), float64]) {
  %728 = fn (%var_5354: Tensor[(2145, 1), int64]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(2145, 1), float64]) {
    %718 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %719 = cast(%var_5354, dtype="int64") /* ty=Tensor[(2145, 1), int64] */;
    %720 = reshape(%719, newshape=[2145]) /* ty=Tensor[(2145), int64] */;
    %721 = @func_3266(%720) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32], Tensor[(2145), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %722 = @func_4762() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %723 = cast(%var_5354, dtype="float64") /* ty=Tensor[(2145, 1), float64] */;
    %724 = %718.1;
    %725 = %721.3;
    %726 = %722.0;
    %727 = sin(%723) /* ty=Tensor[(2145, 1), float64] */;
    (%724, %725, %726, %727)
  };
  %728(%var_5375) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(2145, 1), float64]) */
}

def @func_8995() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(6, 10, 16), float64]) {
  @func_8993() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(6, 10, 16), float64]) */
}

def @func_11712() -> (Tensor[(6, 10, 16), int64],) {
  %729 = @func_7542() /* ty=Tensor[(6, 10, 16), int64] */;
  (%729,)
}

def @func_10446() -> Tensor[(6, 10, 16), int64] {
  %730 = @func_5599() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %730.0
}

def @func_15453() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %731 = @func_6758() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %732 = @func_6785() /* ty=Tensor[(6, 10, 16), int64] */;
  %733 = %731.0;
  %734 = @func_8096() /* ty=Tensor[(6, 10, 16), int64] */;
  (%732, %733, %734)
}

def @func_15724() -> (Tensor[(6, 10, 16), int64],) {
  %735 = @func_6624() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %736 = %735.0;
  (%736,)
}

def @func_16681() -> Tensor[(6, 10, 16), int64] {
  @func_10088() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_9141(%var_9139: Tensor[(5, 6, 1), float32], %var_9140: Tensor[(264), uint32]) -> (Tensor[(5, 6, 1), float32], Tensor[(6, 10, 16), float64], Tensor[(264), uint32]) {
  @func_9137(%var_9139, %var_9140) /* ty=(Tensor[(5, 6, 1), float32], Tensor[(6, 10, 16), float64], Tensor[(264), uint32]) */
}

def @func_10752() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64]) {
  %747 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64]) {
    %737 = @func_9433() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %738 = @func_6099() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %739 = cast(meta[relay.Constant][17] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %740 = reshape(%739, newshape=[]) /* ty=uint32 */;
    %741 = @func_3674(%740) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264, 1), uint32]) */;
    %742 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
    %743 = %737.0;
    %744 = %738.0;
    %745 = %741.0;
    %746 = %742.5;
    (%743, %744, %745, meta[relay.Constant][17] /* ty=uint32 */, %746)
  };
  %747() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64]) */
}

def @func_1841() -> (Tensor[(6, 10, 16), int64],) {
  @func_1839() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_11969(%var_11968: Tensor[(4, 8, 15), float64]) -> (Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32], Tensor[(6, 10, 16), bool], Tensor[(4, 8, 15), float64], Tensor[(6, 10, 16), int64]) {
  %763 = fn (%var_11889: Tensor[(4, 8, 15), float64]) -> (Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32], Tensor[(6, 10, 16), bool], Tensor[(4, 8, 15), float64], Tensor[(6, 10, 16), int64]) {
    %748 = @func_7530() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %749 = %748.0;
    %750 = cast(%749, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
    %751 = reshape(%750, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
    %752 = @func_2995(%751) /* ty=(Tensor[(6, 10, 16), float32],) */;
    %753 = @func_9332() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
    %754 = cast(%var_11889, dtype="float64") /* ty=Tensor[(4, 8, 15), float64] */;
    %755 = sinh(%754) /* ty=Tensor[(4, 8, 15), float64] */;
    %756 = cast(%755, dtype="float64") /* ty=Tensor[(4, 8, 15), float64] */;
    %757 = @func_10039() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %758 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
    %759 = %752.0;
    %760 = %753.0;
    %761 = log2(%756) /* ty=Tensor[(4, 8, 15), float64] */;
    %762 = %757.0;
    (%758, %749, %759, %760, %761, %762)
  };
  %763(%var_11968) /* ty=(Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float32], Tensor[(6, 10, 16), bool], Tensor[(4, 8, 15), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_3319() -> Tensor[(6, 10, 16), int64] {
  %765 = fn () -> Tensor[(6, 10, 16), int64] {
    %764 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %764.0
  };
  %765() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_2791() -> Tensor[(6, 10, 16), int64] {
  %766 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %766.1
}

def @func_2691() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_4006() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %767 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %768 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %769 = %767.1;
  %770 = %768.4;
  (%769, %770)
}

def @func_11330() -> Tensor[(6, 10, 16), int64] {
  %771 = @func_10996() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %771.0
}

def @func_8254(%var_8252: float32, %var_8253: Tensor[(12, 1, 5), float32]) -> (Tensor[(12, 1, 5), float32], Tensor[(12, 1, 5), bool]) {
  @func_8250(%var_8252, %var_8253) /* ty=(Tensor[(12, 1, 5), float32], Tensor[(12, 1, 5), bool]) */
}

def @func_6851(%var_6849: bool) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(15, 12, 13), float32]) {
  @func_6848(%var_6849) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(15, 12, 13), float32]) */
}

def @func_8351() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_8349() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_7552() -> uint32 {
  @func_7550() /* ty=uint32 */
}

def @func_922() -> Tensor[(6, 10, 16), int64] {
  @func_834() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_15555() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) {
  %772 = @func_6954() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %773 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
  %774 = %772.0;
  %775 = %773.2;
  (%774, %775)
}

def @func_2520(%var_2518: uint32, %var_2519: Tensor[(11, 6, 4), uint32]) -> Tensor[(11, 6, 4), bool] {
  @func_2516(%var_2518, %var_2519) /* ty=Tensor[(11, 6, 4), bool] */
}

def @func_15801() -> (Tensor[(6, 10, 16), int64], Tensor[(624), float32], Tensor[(4, 12, 13), float32], Tensor[(3, 14, 1), float64]) {
  @func_15799() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(624), float32], Tensor[(4, 12, 13), float32], Tensor[(3, 14, 1), float64]) */
}

def @func_3139() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_3137() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_9334() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  @func_9332() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */
}

def @func_16515() -> (Tensor[(2, 4, 4), float64], Tensor[(6, 10, 16), int64], Tensor[(2, 4, 4), float64], Tensor[(6, 10, 16), int64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32]) {
  %789 = fn () -> (Tensor[(2, 4, 4), float64], Tensor[(6, 10, 16), int64], Tensor[(2, 4, 4), float64], Tensor[(6, 10, 16), int64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32]) {
    %776 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
    %777 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(2, 4, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %778 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
    %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %780 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
    %781 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
    %782 = cast(meta[relay.Constant][20] /* ty=Tensor[(2352), float32] */, dtype="float32") /* ty=Tensor[(2352), float32] */;
    %783 = reshape(%782, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
    %784 = mod(%778, %779) /* ty=Tensor[(2, 4, 4), float64] */;
    %785 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
    %786 = cosh(%780) /* ty=Tensor[(2, 4, 4), float64] */;
    %787 = %781.2;
    %788 = @func_12319(%783) /* ty=Tensor[(12, 14, 14), float32] */;
    (%784, %785, %786, %787, %788, meta[relay.Constant][20] /* ty=Tensor[(2352), float32] */)
  };
  %789() /* ty=(Tensor[(2, 4, 4), float64], Tensor[(6, 10, 16), int64], Tensor[(2, 4, 4), float64], Tensor[(6, 10, 16), int64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32]) */
}

def @func_15605() -> (Tensor[(15, 12, 13), float32],) {
  %794 = fn () -> (Tensor[(15, 12, 13), float32],) {
    %790 = @func_7288() /* ty=(Tensor[(15, 12, 13), float32],) */;
    %791 = %790.0;
    %792 = cast(%791, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
    %793 = sinh(%792) /* ty=Tensor[(15, 12, 13), float32] */;
    (%793,)
  };
  %794() /* ty=(Tensor[(15, 12, 13), float32],) */
}

def @func_14903() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %798 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %795 = @func_6306() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %796 = @func_6920() /* ty=Tensor[(6, 10, 16), int64] */;
    %797 = %795.1;
    (%796, %797)
  };
  %798() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_3343(%var_3341: Tensor[(2, 13, 3), int32]) -> (Tensor[(2, 13, 3), int32], Tensor[(6, 10, 16), int64], Tensor[(2145), int64]) {
  @func_3340(%var_3341) /* ty=(Tensor[(2, 13, 3), int32], Tensor[(6, 10, 16), int64], Tensor[(2145), int64]) */
}

def @func_16596(%var_16595: Tensor[(11, 6, 2), float32]) -> Tensor[(11, 6, 2), float64] {
  %802 = fn (%var_16578: Tensor[(11, 6, 2), float32]) -> Tensor[(11, 6, 2), float64] {
    %799 = cast(%var_16578, dtype="float32") /* ty=Tensor[(11, 6, 2), float32] */;
    %800 = exp(%799) /* ty=Tensor[(11, 6, 2), float32] */;
    %801 = cast(%800, dtype="float64") /* ty=Tensor[(11, 6, 2), float64] */;
    asin(%801) /* ty=Tensor[(11, 6, 2), float64] */
  };
  %802(%var_16595) /* ty=Tensor[(11, 6, 2), float64] */
}

def @func_15557() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) {
  @func_15555() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */
}

def @func_7246() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %806 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %803 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %804 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
    %805 = %803.1;
    (%804, %805)
  };
  %806() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_12850() -> Tensor[(6, 10, 16), int64] {
  %808 = fn () -> Tensor[(6, 10, 16), int64] {
    %807 = @func_6624() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %807.0
  };
  %808() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_13610() -> (Tensor[(6, 10, 16), int64],) {
  %811 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %809 = @func_8913() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %810 = %809.2;
    (%810,)
  };
  %811() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_16672(%var_16666: Tensor[(495), float32]) -> (Tensor[(1, 11, 8), float64], Tensor[(3, 15, 11), bool], Tensor[(495), float32]) {
  %812 = @func_15878() /* ty=(Tensor[(1, 11, 8), float64],) */;
  %813 = %812.0;
  %814 = cast(%813, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
  %815 = cast(%var_16666, dtype="float32") /* ty=Tensor[(495), float32] */;
  %816 = cast(%var_16666, dtype="float32") /* ty=Tensor[(495), float32] */;
  %817 = reshape(%815, newshape=[3, 15, 11]) /* ty=Tensor[(3, 15, 11), float32] */;
  %818 = reshape(%816, newshape=[3, 15, 11]) /* ty=Tensor[(3, 15, 11), float32] */;
  %819 = @func_9750(%817, %818) /* ty=(Tensor[(3, 15, 11), bool], Tensor[(6, 10, 16), int64]) */;
  %820 = atanh(%814) /* ty=Tensor[(1, 11, 8), float64] */;
  %821 = %819.0;
  (%820, %821, %var_16666)
}

def @func_12233() -> Tensor[(6, 10, 16), int64] {
  %822 = @func_10751() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64]) */;
  %822.1
}

def @func_6759() -> (Tensor[(6, 10, 16), int64],) {
  %824 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %823 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
    (%823,)
  };
  %824() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_2373() -> (Tensor[(6, 10, 16), int64],) {
  %825 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  (%825,)
}

def @func_6573() -> Tensor[(15, 12, 13), float32] {
  %827 = fn () -> Tensor[(15, 12, 13), float32] {
    %826 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
    acos(%826) /* ty=Tensor[(15, 12, 13), float32] */
  };
  %827() /* ty=Tensor[(15, 12, 13), float32] */
}

def @func_382() -> (Tensor[(6, 10, 16), int64],) {
  %829 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %828 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
    (%828,)
  };
  %829() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_16154() -> (Tensor[(6, 10, 16), int64],) {
  %832 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %830 = @func_9791() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %831 = %830.0;
    (%831,)
  };
  %832() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_2018() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %833 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %834 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %835 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
  %836 = cast(%835, dtype="float32") /* ty=Tensor[(6, 10, 16), float32] */;
  %837 = atanh(%836) /* ty=Tensor[(6, 10, 16), float32] */;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
  %839 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %840 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %841 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %842 = %833.0;
  %843 = %834.0;
  %844 = cos(%838) /* ty=Tensor[(6, 10, 16), float64] */;
  %845 = %839.0;
  %846 = %840.2;
  %847 = %841.0;
  (%842, %843, %844, %845, %846, %847)
}

def @func_16629() -> (Tensor[(6, 10, 16), int64],) {
  @func_16627() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_7672() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %851 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %848 = @func_7470() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %849 = %848.0;
    %850 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
    (%849, %850)
  };
  %851() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_9616() -> Tensor[(6, 10, 16), int64] {
  %853 = fn () -> Tensor[(6, 10, 16), int64] {
    %852 = @func_2932() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
    %852.0
  };
  %853() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_12188() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  %858 = fn () -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
    %854 = @func_4205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), bool]) */;
    %855 = @func_4945() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %856 = %854.2;
    %857 = %855.1;
    (%856, %857)
  };
  %858() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */
}

def @func_445() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */
}

def @func_8753() -> (Tensor[(6, 10, 16), int64],) {
  %859 = @func_8069() /* ty=Tensor[(6, 10, 16), int64] */;
  (%859,)
}

def @func_7472() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_7470() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_4681() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %860 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %861 = @func_1685() /* ty=Tensor[(6, 10, 16), int64] */;
  %862 = %860.1;
  (%861, %862)
}

def @func_2897() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %867 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %863 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %864 = @func_2072() /* ty=Tensor[(6, 10, 16), int64] */;
    %865 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
    %866 = %863.1;
    (%864, %865, %866)
  };
  %867() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_13949() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %868 = @func_8562() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755, 1), float64]) */;
  %869 = @func_7630() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %870 = %868.0;
  %871 = %869.0;
  %872 = @func_2072() /* ty=Tensor[(6, 10, 16), int64] */;
  (%870, %871, %872)
}

def @func_5073() -> (Tensor[(3, 14, 1), float64],) {
  %875 = fn () -> (Tensor[(3, 14, 1), float64],) {
    %873 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 14, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 1), float64] */;
    %874 = sigmoid(%873) /* ty=Tensor[(3, 14, 1), float64] */;
    (%874,)
  };
  %875() /* ty=(Tensor[(3, 14, 1), float64],) */
}

def @func_6624() -> (Tensor[(6, 10, 16), int64],) {
  %876 = @func_4078() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %877 = %876.0;
  (%877,)
}

def @func_9792() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %881 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %878 = @func_8868() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %879 = %878.0;
    %880 = @func_6785() /* ty=Tensor[(6, 10, 16), int64] */;
    (%879, %880)
  };
  %881() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_9137(%var_9126: Tensor[(5, 6, 1), float32], %var_9135: Tensor[(264), uint32]) -> (Tensor[(5, 6, 1), float32], Tensor[(6, 10, 16), float64], Tensor[(264), uint32]) {
  %882 = cast(%var_9126, dtype="float32") /* ty=Tensor[(5, 6, 1), float32] */;
  %883 = cast(%var_9135, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %884 = reshape(%883, newshape=[264]) /* ty=Tensor[(264), uint32] */;
  %885 = @func_4528(%884) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) */;
  %886 = cosh(%882) /* ty=Tensor[(5, 6, 1), float32] */;
  %887 = %885.1;
  (%886, %887, %var_9135)
}

def @func_10312() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_10310() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_12757() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(?, 25), bool]) {
  %904 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(?, 25), bool]) {
    %888 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %889 = @func_6163() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %890 = @func_8206() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %891 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 25), float64] */, dtype="float64") /* ty=Tensor[(1, 25), float64] */;
    %892 = reshape(%891, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float64] */;
    %893 = @func_2178(%892) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(5, 5, 1), float32]) */;
    %894 = %893.1;
    %895 = cast(%894, dtype="bool") /* ty=Tensor[(5, 5, 1), bool] */;
    %896 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(1, 25), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %897 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 25), float64] */, dtype="bool") /* ty=Tensor[(1, 25), bool] */;
    %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %899 = %888.0;
    %900 = %889.0;
    %901 = @func_5113() /* ty=Tensor[(6, 10, 16), int64] */;
    %902 = %890.0;
    %903 = greater(%897, %898) /* ty=Tensor[(?, 25), bool] */;
    (%899, %900, %901, %902, %903)
  };
  %904() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(?, 25), bool]) */
}

def @func_11400() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %905 = @func_9010() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %906 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  %907 = %905.0;
  (%906, %907)
}

def @func_11647() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_11645() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_9799() -> (Tensor[(6, 10, 16), int64],) {
  @func_9797() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_9292() -> (Tensor[(6, 10, 16), int64],) {
  %910 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %908 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %909 = %908.0;
    (%909,)
  };
  %910() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_4946() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %916 = fn () -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %911 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
    %912 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %913 = %911.2;
    %914 = @func_2791() /* ty=Tensor[(6, 10, 16), int64] */;
    %915 = %912.0;
    (%913, %914, %915)
  };
  %916() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_2364(%var_2362: Tensor[(15, 11, 13), int64], %var_2363: Tensor[(15, 11, 13), int64]) -> (Tensor[(15, 11, 13), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32]) {
  %927 = fn (%var_2313: Tensor[(15, 11, 13), int64], %var_2314: Tensor[(15, 11, 13), int64]) -> (Tensor[(15, 11, 13), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32]) {
    %917 = cast(%var_2314, dtype="int64") /* ty=Tensor[(15, 11, 13), int64] */;
    %918 = shape_of(%var_2313, dtype="int32") /* ty=Tensor[(3), int32] */;
    %919 = cast(%var_2313, dtype="int64") /* ty=Tensor[(15, 11, 13), int64] */;
    %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %921 = @func_985() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %922 = cast(%var_2313, dtype="float32") /* ty=Tensor[(15, 11, 13), float32] */;
    %923 = bitwise_or(%919, %920) /* ty=Tensor[(15, 11, 13), int64] */;
    %924 = %921.0;
    %925 = @func_1731() /* ty=Tensor[(6, 10, 16), int64] */;
    %926 = sqrt(%922) /* ty=Tensor[(15, 11, 13), float32] */;
    (%923, %924, %925, %926)
  };
  %927(%var_2362, %var_2363) /* ty=(Tensor[(15, 11, 13), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32]) */
}

def @func_5702(%var_5700: Tensor[(11, 1), uint32]) -> (Tensor[(11, ?), uint32],) {
  @func_5699(%var_5700) /* ty=(Tensor[(11, ?), uint32],) */
}

def @func_14511() -> Tensor[(6, 10, 16), int64] {
  %928 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %928.4
}

def @func_14697() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %931 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %929 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
    %930 = @func_5842() /* ty=Tensor[(6, 10, 16), int64] */;
    (%929, %930)
  };
  %931() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_1686() -> Tensor[(6, 10, 16), int64] {
  %933 = fn () -> Tensor[(6, 10, 16), int64] {
    %932 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %932.0
  };
  %933() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_12156() -> (Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %941 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %934 = @func_6031() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %935 = @func_7375() /* ty=(Tensor[(3, 14, 1), float64],) */;
    %936 = @func_11435() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %937 = %934.0;
    %938 = %935.0;
    %939 = @func_8447() /* ty=Tensor[(6, 10, 16), int64] */;
    %940 = %936.0;
    (%937, %938, %939, %940)
  };
  %941() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(3, 14, 1), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_11856() -> (Tensor[(6, 10, 16), int64],) {
  @func_11854() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_14771() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64], Tensor[(6, 10, 16), int64]) {
  %950 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64], Tensor[(6, 10, 16), int64]) {
    %942 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %943 = @func_12205() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %944 = @func_9681() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64]) */;
    %945 = @func_5257() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %946 = %942.2;
    %947 = %943.0;
    %948 = %944.3;
    %949 = %945.1;
    (%946, %947, %948, %949)
  };
  %950() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(1, 25), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_15726() -> (Tensor[(6, 10, 16), int64],) {
  @func_15724() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_16457(%var_16456: Tensor[(88), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(15, 12, 13), float32], Tensor[(?, 11, 8), bool], Tensor[(6, 10, 16), int64]) {
  %973 = fn (%var_16380: Tensor[(88), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(15, 12, 13), float32], Tensor[(?, 11, 8), bool], Tensor[(6, 10, 16), int64]) {
    %951 = @func_5663() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %952 = @func_11400() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %953 = @func_8993() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(6, 10, 16), float64]) */;
    %954 = @func_15799() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(624), float32], Tensor[(4, 12, 13), float32], Tensor[(3, 14, 1), float64]) */;
    %955 = cast(%var_16380, dtype="float64") /* ty=Tensor[(88), float64] */;
    %956 = reshape(%955, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
    %957 = @func_3813(%956) /* ty=(Tensor[(1, 11, 8), float64],) */;
    %958 = %957.0;
    %959 = cast(%958, dtype="float32") /* ty=Tensor[(1, 11, 8), float32] */;
    %960 = atan(%959) /* ty=Tensor[(1, 11, 8), float32] */;
    %961 = cast(%var_16380, dtype="bool") /* ty=Tensor[(88), bool] */;
    %962 = shape_of(%960, dtype="int32") /* ty=Tensor[(3), int32] */;
    %963 = cast(%960, dtype="bool") /* ty=Tensor[(1, 11, 8), bool] */;
    %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %965 = %951.0;
    %966 = %952.0;
    %967 = @func_5410() /* ty=Tensor[(6, 10, 16), int64] */;
    %968 = %953.6;
    %969 = %954.2;
    %970 = @func_6572() /* ty=Tensor[(15, 12, 13), float32] */;
    %971 = not_equal(%963, %964) /* ty=Tensor[(?, 11, 8), bool] */;
    %972 = @func_10142() /* ty=Tensor[(6, 10, 16), int64] */;
    (%965, %966, %967, %968, %969, %970, %971, %972)
  };
  %973(%var_16456) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(4, 12, 13), float32], Tensor[(15, 12, 13), float32], Tensor[(?, 11, 8), bool], Tensor[(6, 10, 16), int64]) */
}

def @func_7839() -> (Tensor[(6, 10, 16), int64],) {
  %976 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %974 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %975 = %974.0;
    (%975,)
  };
  %976() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_2072() -> Tensor[(6, 10, 16), int64] {
  %977 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %977.0
}

def @func_7186() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 117), uint64]) {
  %978 = @func_6516() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %979 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %980 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 117), float64] */, dtype="float64") /* ty=Tensor[(15, 117), float64] */;
  %981 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 117), float64] */, dtype="float64") /* ty=Tensor[(15, 117), float64] */;
  %982 = reshape(%980, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %983 = reshape(%981, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
  %984 = @func_5166(%982, %983) /* ty=(Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) */;
  %985 = %984.0;
  %986 = cast(%985, dtype="uint64") /* ty=Tensor[(13, 15, 9), uint64] */;
  %987 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(15, 117), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %988 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 117), float64] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %990 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
  %991 = %978.2;
  %992 = %979.1;
  %993 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %994 = bitwise_and(%988, %989) /* ty=Tensor[(15, 117), uint64] */;
  (%990, %991, %992, %993, %994)
}

def @func_507() -> (Tensor[(6, 10, 16), int64],) {
  %997 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %995 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
    %996 = %995.1;
    (%996,)
  };
  %997() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_10040() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1002 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %998 = @func_3449() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %999 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1000 = %998.0;
    %1001 = %999.1;
    (%1000, %1001)
  };
  %1002() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_5568() -> (Tensor[(6, 10, 16), int64],) {
  %1003 = @func_5257() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1004 = %1003.1;
  (%1004,)
}

def @func_16263(%var_16191: float64, %var_16192: Tensor[(65), float64]) -> (Tensor[(6, 10, 16), int64], float64, Tensor[(65), uint32], Tensor[(6, 10, 16), int64], Tensor[(?, 13, 5), bool], Tensor[(6, 10, 16), float64], Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) {
  %1005 = @func_4078() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1006 = cast(meta[relay.Constant][25] /* ty=Tensor[(65), float64] */, dtype="uint32") /* ty=Tensor[(65), uint32] */;
  %1007 = shape_of(%var_16192, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1008 = cast(%var_16192, dtype="uint32") /* ty=Tensor[(65), uint32] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %1010 = @func_5568() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1011 = cast(%var_16191, dtype="float64") /* ty=float64 */;
  %1012 = cast(%var_16192, dtype="float64") /* ty=Tensor[(65), float64] */;
  %1013 = reshape(%1011, newshape=[]) /* ty=float64 */;
  %1014 = reshape(%1012, newshape=[1, 13, 5]) /* ty=Tensor[(1, 13, 5), float64] */;
  %1015 = @func_9185(%1013, %1014) /* ty=(Tensor[(?, 13, 5), bool],) */;
  %1016 = %1015.0;
  %1017 = cast(meta[relay.Constant][25] /* ty=Tensor[(65), float64] */, dtype="bool") /* ty=Tensor[(65), bool] */;
  %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%1016, dtype="bool") /* ty=Tensor[(?, 13, 5), bool] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1021 = cast(meta[relay.Constant][26] /* ty=Tensor[(264), uint32] */, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %1022 = reshape(%1021, newshape=[264]) /* ty=Tensor[(264), uint32] */;
  %1023 = @func_4528(%1022) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) */;
  %1024 = @func_13290() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1025 = %1005.0;
  %1026 = maximum(%1008, %1009) /* ty=Tensor[(65), uint32] */;
  %1027 = %1010.0;
  %1028 = equal(%1019, %1020) /* ty=Tensor[(?, 13, 5), bool] */;
  %1029 = %1023.1;
  %1030 = %1024.0;
  (%1025, %var_16191, %1026, %1027, %1028, %1029, meta[relay.Constant][26] /* ty=Tensor[(264), uint32] */, %1030)
}

def @func_5663() -> (Tensor[(6, 10, 16), int64],) {
  %1031 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %1032 = %1031.1;
  (%1032,)
}

def @func_1731() -> Tensor[(6, 10, 16), int64] {
  @func_922() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_6184(%var_6180: Tensor[(1, 6, 5), float32]) -> Tensor[(1, 6, 5), float32] {
  %1033 = cast(%var_6180, dtype="float32") /* ty=Tensor[(1, 6, 5), float32] */;
  acosh(%1033) /* ty=Tensor[(1, 6, 5), float32] */
}

def @func_7429() -> (Tensor[(3, 14, 1), float64],) {
  %1036 = fn () -> (Tensor[(3, 14, 1), float64],) {
    %1034 = @func_5072() /* ty=(Tensor[(3, 14, 1), float64],) */;
    %1035 = %1034.0;
    (%1035,)
  };
  %1036() /* ty=(Tensor[(3, 14, 1), float64],) */
}

def @func_11133() -> (Tensor[(6, 10, 16), float64],) {
  %1039 = fn () -> (Tensor[(6, 10, 16), float64],) {
    %1037 = @func_8541() /* ty=(Tensor[(6, 10, 16), float64],) */;
    %1038 = %1037.0;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(6, 10, 16), float64],) */
}

def @func_13014() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_13012() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_13292() -> (Tensor[(6, 10, 16), int64],) {
  @func_13290() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_5474() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32]) {
  %1040 = @func_3956() /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) */;
  %1041 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1042 = %1041.0;
  %1043 = cast(%1042, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
  %1044 = reshape(%1043, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
  %1045 = @func_1313(%1044) /* ty=(Tensor[(6, 10, 16), int32],) */;
  %1046 = %1040.0;
  %1047 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
  %1048 = %1045.0;
  (%1046, %1047, %1042, %1048)
}

def @func_7477() -> Tensor[(6, 10, 16), int64] {
  %1049 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %1049.1
}

def @func_10865() -> (Tensor[(6, 10, 16), int64],) {
  %1052 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1050 = @func_2896() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1051 = %1050.2;
    (%1051,)
  };
  %1052() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_12479() -> uint32 {
  @func_12477() /* ty=uint32 */
}

def @func_1140() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1053 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1054 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1055 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1056 = @func_506() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1057 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %1058 = %1053.0;
  %1059 = %1054.3;
  %1060 = %1055.0;
  %1061 = %1056.0;
  %1062 = %1057.1;
  (%1058, %1059, %1060, %1061, %1062)
}

def @func_8755() -> (Tensor[(6, 10, 16), int64],) {
  @func_8753() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_13732() -> (Tensor[(6, 10, 16), int64],) {
  %1065 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1063 = @func_7838() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1064 = %1063.0;
    (%1064,)
  };
  %1065() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_16627() -> (Tensor[(6, 10, 16), int64],) {
  %1066 = @func_8447() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1066,)
}

def @func_11115() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_11113() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_6032() -> (Tensor[(6, 10, 16), int64],) {
  %1068 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1067 = @func_5876() /* ty=Tensor[(6, 10, 16), int64] */;
    (%1067,)
  };
  %1068() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_2689() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1069 = @func_1839() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1070 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1071 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1072 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %1073 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1074 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1075 = %1069.0;
  %1076 = %1070.0;
  %1077 = %1071.3;
  %1078 = %1072.1;
  %1079 = %1073.3;
  %1080 = %1074.0;
  (%1075, %1076, %1077, %1078, %1079, %1080)
}

def @func_11198(%var_11197: Tensor[(1755), float64]) -> (Tensor[(15, 5, 5), float32], Tensor[(720), bool], bool, Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(6, 10, 16), int64]) {
  %1094 = fn (%var_11176: Tensor[(1755), float64]) -> (Tensor[(15, 5, 5), float32], Tensor[(720), bool], bool, Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(6, 10, 16), int64]) {
    %1081 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 5), float32] */;
    %1082 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %1083 = reshape(%1082, newshape=[]) /* ty=bool */;
    %1084 = @func_5739(%1083) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) */;
    %1085 = cast(%var_11176, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %1086 = cast(%var_11176, dtype="float64") /* ty=Tensor[(1755), float64] */;
    %1087 = reshape(%1085, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
    %1088 = reshape(%1086, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
    %1089 = @func_5166(%1087, %1088) /* ty=(Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) */;
    %1090 = log(%1081) /* ty=Tensor[(15, 5, 5), float32] */;
    %1091 = %1084.3;
    %1092 = %1089.0;
    %1093 = @func_1685() /* ty=Tensor[(6, 10, 16), int64] */;
    (%1090, %1091, True /* ty=bool */, %1092, %var_11176, %1093)
  };
  %1094(%var_11197) /* ty=(Tensor[(15, 5, 5), float32], Tensor[(720), bool], bool, Tensor[(13, 15, 9), bool], Tensor[(1755), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_1015() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_15537() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  %1098 = fn () -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
    %1095 = @func_8541() /* ty=(Tensor[(6, 10, 16), float64],) */;
    %1096 = %1095.0;
    %1097 = @func_5876() /* ty=Tensor[(6, 10, 16), int64] */;
    (%1096, %1097)
  };
  %1098() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_3676(%var_3675: uint32) -> (Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264, 1), uint32]) {
  %1106 = fn (%var_3653: uint32) -> (Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264, 1), uint32]) {
    %1099 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
    %1100 = cast(%var_3653, dtype="uint32") /* ty=uint32 */;
    %1101 = cast(meta[relay.Constant][28] /* ty=Tensor[(264, 1), uint32] */, dtype="uint32") /* ty=Tensor[(264, 1), uint32] */;
    %1102 = reshape(%1100, newshape=[]) /* ty=uint32 */;
    %1103 = reshape(%1101, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint32] */;
    %1104 = %1099.1;
    %1105 = @func_2516(%1102, %1103) /* ty=Tensor[(11, 6, 4), bool] */;
    (%1104, %1105, %var_3653, meta[relay.Constant][28] /* ty=Tensor[(264, 1), uint32] */)
  };
  %1106(%var_3675) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), bool], uint32, Tensor[(264, 1), uint32]) */
}

def @func_5052() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1111 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1107 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1108 = @func_3711() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1109 = %1107.0;
    %1110 = %1108.1;
    (%1109, %1110)
  };
  %1111() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @main(%var_16860: Tensor[(9, 1, 4), float32]) -> Tensor[(9, 1, 4), float32] {
  %1112 = cast(%var_16860, dtype="float32") /* ty=Tensor[(9, 1, 4), float32] */;
  log2(%1112) /* ty=Tensor[(9, 1, 4), float32] */
}

def @func_11976(%var_11971: Tensor[(8, 15, 6), float64]) -> (Tensor[(8, 15, 6), float64],) {
  %1113 = cast(%var_11971, dtype="float64") /* ty=Tensor[(8, 15, 6), float64] */;
  %1114 = cosh(%1113) /* ty=Tensor[(8, 15, 6), float64] */;
  (%1114,)
}

def @func_8563() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755, 1), float64]) {
  %1127 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755, 1), float64]) {
    %1115 = @func_7671() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1116 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1117 = @func_8318() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1118 = cast(meta[relay.Constant][29] /* ty=Tensor[(1755, 1), float64] */, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
    %1119 = cast(meta[relay.Constant][29] /* ty=Tensor[(1755, 1), float64] */, dtype="float64") /* ty=Tensor[(1755, 1), float64] */;
    %1120 = reshape(%1118, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
    %1121 = reshape(%1119, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float64] */;
    %1122 = @func_5166(%1120, %1121) /* ty=(Tensor[(13, 15, 9), bool], Tensor[(6, 10, 16), bool]) */;
    %1123 = %1115.0;
    %1124 = %1116.4;
    %1125 = %1117.4;
    %1126 = %1122.0;
    (%1123, %1124, %1125, %1126, meta[relay.Constant][29] /* ty=Tensor[(1755, 1), float64] */)
  };
  %1127() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(13, 15, 9), bool], Tensor[(1755, 1), float64]) */
}

def @func_14990() -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64]) {
  %1132 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64]) {
    %1128 = @func_7186() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 117), uint64]) */;
    %1129 = @func_5778() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(22, 4), float32]) */;
    %1130 = %1128.2;
    %1131 = %1129.1;
    (%1130, %1131)
  };
  %1132() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64]) */
}

def @func_8250(%var_8214: float32, %var_8215: Tensor[(12, 1, 5), float32]) -> (Tensor[(12, 1, 5), float32], Tensor[(12, 1, 5), bool]) {
  %1133 = cast(%var_8214, dtype="float32") /* ty=float32 */;
  %1134 = cast(%var_8215, dtype="float32") /* ty=Tensor[(12, 1, 5), float32] */;
  %1135 = cast(%var_8214, dtype="bool") /* ty=bool */;
  %1136 = cast(%var_8215, dtype="bool") /* ty=Tensor[(12, 1, 5), bool] */;
  %1137 = power(%1133, %1134) /* ty=Tensor[(12, 1, 5), float32] */;
  %1138 = less(%1135, %1136) /* ty=Tensor[(12, 1, 5), bool] */;
  (%1137, %1138)
}

def @func_6554() -> Tensor[(6, 10, 16), int64] {
  @func_2791() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_7479() -> Tensor[(6, 10, 16), int64] {
  @func_7477() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_7110() -> (Tensor[(6, 10, 16), bool],) {
  %1141 = fn () -> (Tensor[(6, 10, 16), bool],) {
    %1139 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
    %1140 = %1139.2;
    (%1140,)
  };
  %1141() /* ty=(Tensor[(6, 10, 16), bool],) */
}

def @func_9578() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int16]) {
  %1148 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int16]) {
    %1142 = @func_8611() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1143 = %1142.0;
    %1144 = cast(%1143, dtype="int64") /* ty=Tensor[(6, 10, 16), int64] */;
    %1145 = reshape(%1144, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), int64] */;
    %1146 = @func_1523(%1145) /* ty=(Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1147 = %1146.0;
    (%1143, %1147)
  };
  %1148() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int16]) */
}

def @func_13024() -> Tensor[(6, 10, 16), int64] {
  @func_13022() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_443() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %1149 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1150 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1151 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1152 = %1151.3;
  %1153 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1154 = %1153.0;
  %1155 = cast(%1154, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %1156 = shape_of(%1152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1157 = cast(%1152, dtype="bool") /* ty=Tensor[(6, 10, 16), bool] */;
  %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1159 = %1149.2;
  %1160 = %1150.0;
  %1161 = equal(%1157, %1158) /* ty=Tensor[(6, 10, 16), bool] */;
  (%1159, %1160, %1161)
}

def @func_6154(%var_6146: Tensor[(88), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) {
  %1162 = @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
  %1163 = cast(%var_6146, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1164 = reshape(%1163, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %1165 = @func_3813(%1164) /* ty=(Tensor[(1, 11, 8), float64],) */;
  %1166 = %1162.1;
  %1167 = %1165.0;
  (%1166, %1167, %var_6146)
}

def @func_12416(%var_12415: Tensor[(16, 16, 2), float64]) -> (Tensor[(16, 16, 2), float64], Tensor[(6, 10, 16), int64]) {
  %1174 = fn (%var_12395: Tensor[(16, 16, 2), float64]) -> (Tensor[(16, 16, 2), float64], Tensor[(6, 10, 16), int64]) {
    %1168 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 2), float64] */;
    %1169 = shape_of(%var_12395, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1170 = cast(%var_12395, dtype="float64") /* ty=Tensor[(16, 16, 2), float64] */;
    %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1172 = floor_mod(%1170, %1171) /* ty=Tensor[(16, 16, 2), float64] */;
    %1173 = @func_2791() /* ty=Tensor[(6, 10, 16), int64] */;
    (%1172, %1173)
  };
  %1174(%var_12415) /* ty=(Tensor[(16, 16, 2), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_4624() -> (Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) {
  @func_4622() /* ty=(Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) */
}

def @func_8098() -> Tensor[(6, 10, 16), int64] {
  @func_8096() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_1071() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1175 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %1176 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1177 = %1175.1;
  %1178 = %1176.0;
  (%1177, %1178)
}

def @func_3182(%var_3181: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1190 = fn (%var_3152: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1179 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
    %1180 = %1179.1;
    %1181 = cast(%var_3152, dtype="uint32") /* ty=Tensor[(6, 10, 16), uint32] */;
    %1182 = shape_of(%1180, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1183 = cast(%1180, dtype="uint32") /* ty=Tensor[(6, 10, 16), uint32] */;
    %1184 = dyn.reshape(%1181, %1182, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1185 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1186 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1187 = logical_xor(%1183, %1184) /* ty=Tensor[(6, 10, 16), uint32] */;
    %1188 = %1185.0;
    %1189 = %1186.0;
    (%1187, %1188, %1189)
  };
  %1190(%var_3181) /* ty=(Tensor[(6, 10, 16), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_1706() -> (Tensor[(6, 10, 16), int64],) {
  %1193 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1191 = @func_1071() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1192 = %1191.1;
    (%1192,)
  };
  %1193() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_15186() -> Tensor[(6, 10, 16), int64] {
  @func_15184() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_15184() -> Tensor[(6, 10, 16), int64] {
  %1194 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1194.1
}

def @func_4528(%var_4501: Tensor[(264), uint32]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], uint32, uint32, Tensor[(264), uint32]) {
  %1195 = @func_3509() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1196 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %1197 = cast(meta[relay.Constant][31] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1198 = cast(%var_4501, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %1199 = reshape(%1197, newshape=[]) /* ty=uint32 */;
  %1200 = reshape(%1198, newshape=[264]) /* ty=Tensor[(264), uint32] */;
  %1201 = @func_3605(%1199, %1200) /* ty=(Tensor[(6, 10, 16), int64], uint32, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int32], Tensor[(11, 6, 4), int32]) */;
  %1202 = %1195.0;
  %1203 = %1196.2;
  %1204 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %1205 = %1201.1;
  (%1202, %1203, %1204, %1205, meta[relay.Constant][31] /* ty=uint32 */, %var_4501)
}

def @func_6956() -> (Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  @func_6954() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */
}

def @func_9265(%var_9262: Tensor[(7, 9, 12), int8], %var_9263: Tensor[(7, 9, 12), int8], %var_9264: Tensor[(7, 9, 12), int8]) -> (Tensor[(7, 9, 12), int8], Tensor[(7, 9, 12), bool], Tensor[(6, 10, 16), float64]) {
  @func_9260(%var_9262, %var_9263, %var_9264) /* ty=(Tensor[(7, 9, 12), int8], Tensor[(7, 9, 12), bool], Tensor[(6, 10, 16), float64]) */
}

def @func_14871() -> Tensor[(6, 10, 16), int64] {
  %1207 = fn () -> Tensor[(6, 10, 16), int64] {
    %1206 = @func_13461() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1206.0
  };
  %1207() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_13012() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1208 = @func_5663() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1209 = @func_6713() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1210 = %1208.0;
  %1211 = %1209.0;
  %1212 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1210, %1211, %1212)
}

def @func_6308() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_6306() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_7708() -> (Tensor[(6, 10, 16), int64], Tensor[(11, ?), uint32], Tensor[(1, 11), uint32]) {
  @func_7706() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(11, ?), uint32], Tensor[(1, 11), uint32]) */
}

def @func_13659() -> Tensor[(6, 10, 16), int64] {
  @func_11285() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_9054() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %1216 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
    %1213 = @func_7109() /* ty=(Tensor[(6, 10, 16), bool],) */;
    %1214 = @func_5876() /* ty=Tensor[(6, 10, 16), int64] */;
    %1215 = %1213.0;
    (%1214, %1215)
  };
  %1216() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */
}

def @func_3485() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1220 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1217 = @func_1705() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1218 = %1217.0;
    %1219 = @func_922() /* ty=Tensor[(6, 10, 16), int64] */;
    (%1218, %1219)
  };
  %1220() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_9434() -> (Tensor[(6, 10, 16), int64],) {
  %1223 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1221 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1222 = %1221.3;
    (%1222,)
  };
  %1223() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_7543() -> Tensor[(6, 10, 16), int64] {
  %1225 = fn () -> Tensor[(6, 10, 16), int64] {
    %1224 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1224.4
  };
  %1225() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_13290() -> (Tensor[(6, 10, 16), int64],) {
  %1226 = @func_10142() /* ty=Tensor[(6, 10, 16), int64] */;
  (%1226,)
}

def @func_14852() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1235 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1227 = @func_6758() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1228 = @func_7109() /* ty=(Tensor[(6, 10, 16), bool],) */;
    %1229 = @func_5599() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1230 = @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
    %1231 = %1227.0;
    %1232 = %1228.0;
    %1233 = %1229.0;
    %1234 = %1230.3;
    (%1231, %1232, %1233, %1234)
  };
  %1235() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_4973() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1239 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1236 = @func_4762() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %1237 = @func_4247() /* ty=Tensor[(6, 10, 16), int64] */;
    %1238 = %1236.1;
    (%1237, %1238)
  };
  %1239() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_3137() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1240 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %1241 = @func_1574() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1242 = %1240.1;
  %1243 = %1241.0;
  (%1242, %1243)
}

def @func_10144() -> Tensor[(6, 10, 16), int64] {
  @func_10142() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_9953() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
  %1248 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) {
    %1244 = @func_9468() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1245 = @func_7109() /* ty=(Tensor[(6, 10, 16), bool],) */;
    %1246 = %1244.0;
    %1247 = %1245.0;
    (%1246, %1247)
  };
  %1248() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */
}

def @func_4008() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_4006() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_10997() -> (Tensor[(6, 10, 16), int64],) {
  %1250 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1249 = @func_2072() /* ty=Tensor[(6, 10, 16), int64] */;
    (%1249,)
  };
  %1250() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_9880() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1254 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1251 = @func_7838() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1252 = @func_7016() /* ty=Tensor[(6, 10, 16), int64] */;
    %1253 = %1251.0;
    (%1252, %1253)
  };
  %1254() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_8431(%var_8430: Tensor[(12, 2, 10), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(12, 2, 10), float64]) {
  %1263 = fn (%var_8382: Tensor[(12, 2, 10), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(12, 2, 10), float64]) {
    %1255 = @func_1592() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1256 = cast(%var_8382, dtype="float32") /* ty=Tensor[(12, 2, 10), float32] */;
    %1257 = asinh(%1256) /* ty=Tensor[(12, 2, 10), float32] */;
    %1258 = cast(%1257, dtype="float32") /* ty=Tensor[(12, 2, 10), float32] */;
    %1259 = rsqrt(%1258) /* ty=Tensor[(12, 2, 10), float32] */;
    %1260 = cast(%1259, dtype="float64") /* ty=Tensor[(12, 2, 10), float64] */;
    %1261 = %1255.0;
    %1262 = tan(%1260) /* ty=Tensor[(12, 2, 10), float64] */;
    (%1261, %1262)
  };
  %1263(%var_8430) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(12, 2, 10), float64]) */
}

def @func_14345(%var_14343: Tensor[(15, 10, 8), float32], %var_14344: Tensor[(15, 10, 8), float32]) -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 10, 8), int32], Tensor[(15, 10, 8), uint64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32], Tensor[(6, 10, 16), bool]) {
  @func_14341(%var_14343, %var_14344) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 10, 8), int32], Tensor[(15, 10, 8), uint64], Tensor[(12, 14, 14), float32], Tensor[(2352), float32], Tensor[(6, 10, 16), bool]) */
}

def @func_1593() -> (Tensor[(6, 10, 16), int64],) {
  %1266 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1264 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1265 = %1264.0;
    (%1265,)
  };
  %1266() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_6364() -> (Tensor[(6, 10, 16), int64], bool, bool, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) {
  %1276 = fn () -> (Tensor[(6, 10, 16), int64], bool, bool, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) {
    %1267 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %1268 = reshape(%1267, newshape=[]) /* ty=bool */;
    %1269 = @func_5739(%1268) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) */;
    %1270 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1271 = @func_2608() /* ty=(Tensor[(6, 10, 16), float64],) */;
    %1272 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
    %1273 = %1269.2;
    %1274 = %1270.0;
    %1275 = %1271.0;
    (%1272, %1273, False /* ty=bool */, %1274, %1275)
  };
  %1276() /* ty=(Tensor[(6, 10, 16), int64], bool, bool, Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) */
}

def @func_15041(%var_15039: Tensor[(16, 9, 12), uint64], %var_15040: Tensor[(16, 9, 12), uint64]) -> (Tensor[(16, 9, 12), float64], Tensor[(6, 10, 16), int64]) {
  %1285 = fn (%var_14991: Tensor[(16, 9, 12), uint64], %var_14992: Tensor[(16, 9, 12), uint64]) -> (Tensor[(16, 9, 12), float64], Tensor[(6, 10, 16), int64]) {
    %1277 = cast(%var_14992, dtype="uint64") /* ty=Tensor[(16, 9, 12), uint64] */;
    %1278 = shape_of(%var_14991, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1279 = cast(%var_14991, dtype="uint64") /* ty=Tensor[(16, 9, 12), uint64] */;
    %1280 = dyn.reshape(%1277, %1278, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1281 = bitwise_xor(%1279, %1280) /* ty=Tensor[(16, 9, 12), uint64] */;
    %1282 = cast(%1281, dtype="float64") /* ty=Tensor[(16, 9, 12), float64] */;
    %1283 = sin(%1282) /* ty=Tensor[(16, 9, 12), float64] */;
    %1284 = @func_10893() /* ty=Tensor[(6, 10, 16), int64] */;
    (%1283, %1284)
  };
  %1285(%var_15039, %var_15040) /* ty=(Tensor[(16, 9, 12), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_8447() -> Tensor[(6, 10, 16), int64] {
  %1286 = @func_6163() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1286.0
}

def @func_4726() -> (Tensor[(15, 4, 2), float32], Tensor[(6, 10, 16), int64]) {
  %1291 = fn () -> (Tensor[(15, 4, 2), float32], Tensor[(6, 10, 16), int64]) {
    %1287 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 4, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 4, 2), float32] */;
    %1288 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1289 = acos(%1287) /* ty=Tensor[(15, 4, 2), float32] */;
    %1290 = %1288.4;
    (%1289, %1290)
  };
  %1291() /* ty=(Tensor[(15, 4, 2), float32], Tensor[(6, 10, 16), int64]) */
}

def @func_7016() -> Tensor[(6, 10, 16), int64] {
  @func_3318() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_3340(%var_3321: Tensor[(2, 13, 3), int32]) -> (Tensor[(2, 13, 3), int32], Tensor[(6, 10, 16), int64], Tensor[(2145), int64]) {
  %1292 = cast(10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1293 = cast(%var_3321, dtype="int32") /* ty=Tensor[(2, 13, 3), int32] */;
  %1294 = cast(meta[relay.Constant][33] /* ty=Tensor[(2145), int64] */, dtype="int64") /* ty=Tensor[(2145), int64] */;
  %1295 = reshape(%1294, newshape=[2145]) /* ty=Tensor[(2145), int64] */;
  %1296 = @func_3266(%1295) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32], Tensor[(2145), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1297 = subtract(%1292, %1293) /* ty=Tensor[(2, 13, 3), int32] */;
  %1298 = %1296.0;
  (%1297, %1298, meta[relay.Constant][33] /* ty=Tensor[(2145), int64] */)
}

def @func_14202() -> Tensor[(6, 10, 16), int64] {
  @func_295() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_2516(%var_2510: uint32, %var_2511: Tensor[(11, 6, 4), uint32]) -> Tensor[(11, 6, 4), bool] {
  %1299 = cast(%var_2510, dtype="bool") /* ty=bool */;
  %1300 = cast(%var_2511, dtype="bool") /* ty=Tensor[(11, 6, 4), bool] */;
  equal(%1299, %1300) /* ty=Tensor[(11, 6, 4), bool] */
}

def @func_1866(%var_1864: Tensor[(9, 5, 6), uint16], %var_1865: Tensor[(9, 5, 6), uint16]) -> Tensor[(9, 5, 6), bool] {
  %1305 = fn (%var_1856: Tensor[(9, 5, 6), uint16], %var_1857: Tensor[(9, 5, 6), uint16]) -> Tensor[(9, 5, 6), bool] {
    %1301 = cast(%var_1857, dtype="bool") /* ty=Tensor[(9, 5, 6), bool] */;
    %1302 = shape_of(%var_1856, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1303 = cast(%var_1856, dtype="bool") /* ty=Tensor[(9, 5, 6), bool] */;
    %1304 = dyn.reshape(%1301, %1302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%1303, %1304) /* ty=Tensor[(9, 5, 6), bool] */
  };
  %1305(%var_1864, %var_1865) /* ty=Tensor[(9, 5, 6), bool] */
}

def @func_8595(%var_8594: Tensor[(720), bool]) -> (Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) {
  %1314 = fn (%var_8585: Tensor[(720), bool]) -> (Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) {
    %1306 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1307 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %1308 = cast(%var_8585, dtype="bool") /* ty=Tensor[(720), bool] */;
    %1309 = reshape(%1307, newshape=[]) /* ty=bool */;
    %1310 = reshape(%1308, newshape=[8, 15, 6]) /* ty=Tensor[(8, 15, 6), bool] */;
    %1311 = @func_4798(%1309, %1310) /* ty=(Tensor[(8, 15, 6), bool], Tensor[(8, 15, 6), int16]) */;
    %1312 = %1306.1;
    %1313 = %1311.1;
    (%1312, %1313, True /* ty=bool */, %var_8585)
  };
  %1314(%var_8594) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(8, 15, 6), int16], bool, Tensor[(720), bool]) */
}

def @func_9512() -> Tensor[(6, 10, 16), bool] {
  @func_9510() /* ty=Tensor[(6, 10, 16), bool] */
}

def @func_2793() -> Tensor[(6, 10, 16), int64] {
  @func_2791() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_8319() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1324 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1315 = @func_4006() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1316 = @func_7029() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1317 = @func_5128() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
    %1318 = @func_7530() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1319 = %1315.1;
    %1320 = @func_7542() /* ty=Tensor[(6, 10, 16), int64] */;
    %1321 = %1316.0;
    %1322 = %1317.0;
    %1323 = %1318.0;
    (%1319, %1320, %1321, %1322, %1323)
  };
  %1324() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_14635() -> Tensor[(6, 10, 16), int64] {
  %1326 = fn () -> Tensor[(6, 10, 16), int64] {
    %1325 = @func_3137() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1325.0
  };
  %1326() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_8714() -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) {
  %1327 = @func_5568() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1328 = cast(meta[relay.Constant][34] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1329 = reshape(%1328, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %1330 = @func_3813(%1329) /* ty=(Tensor[(1, 11, 8), float64],) */;
  %1331 = %1327.0;
  %1332 = %1330.0;
  (%1331, %1332, meta[relay.Constant][34] /* ty=Tensor[(88), float64] */)
}

def @func_6921() -> Tensor[(6, 10, 16), int64] {
  %1333 = fn () -> Tensor[(6, 10, 16), int64] {
    @func_6554() /* ty=Tensor[(6, 10, 16), int64] */
  };
  %1333() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_15455() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_15453() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_11645() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1334 = @func_11435() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1335 = @func_6554() /* ty=Tensor[(6, 10, 16), int64] */;
  %1336 = %1334.1;
  (%1335, %1336)
}

def @func_15415() -> Tensor[(6, 10, 16), int64] {
  @func_15413() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_11566() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) {
  %1341 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) {
    %1337 = @func_6099() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1338 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %1339 = %1337.0;
    %1340 = %1338.0;
    (%1339, %1340)
  };
  %1341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64]) */
}

def @func_7706() -> (Tensor[(6, 10, 16), int64], Tensor[(11, ?), uint32], Tensor[(1, 11), uint32]) {
  %1342 = @func_6516() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1343 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 11), uint32] */, dtype="uint32") /* ty=Tensor[(1, 11), uint32] */;
  %1344 = reshape(%1343, newshape=[11, 1]) /* ty=Tensor[(11, 1), uint32] */;
  %1345 = @func_5699(%1344) /* ty=(Tensor[(11, ?), uint32],) */;
  %1346 = %1342.0;
  %1347 = %1345.0;
  (%1346, %1347, meta[relay.Constant][35] /* ty=Tensor[(1, 11), uint32] */)
}

def @func_8096() -> Tensor[(6, 10, 16), int64] {
  %1348 = @func_7671() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1348.1
}

def @func_8207() -> (Tensor[(6, 10, 16), int64],) {
  %1351 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1349 = @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1350 = %1349.0;
    (%1350,)
  };
  %1351() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_523() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1355 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1352 = @func_381() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1353 = %1352.0;
    %1354 = @func_295() /* ty=Tensor[(6, 10, 16), int64] */;
    (%1353, %1354)
  };
  %1355() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_5599() -> (Tensor[(6, 10, 16), int64],) {
  %1356 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %1357 = %1356.1;
  (%1357,)
}

def @func_6157(%var_6155: Tensor[(88), float64]) -> (Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) {
  @func_6154(%var_6155) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(88), float64]) */
}

def @func_9979() -> (Tensor[(6, 10, 16), int64],) {
  %1358 = @func_6624() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1359 = %1358.0;
  (%1359,)
}

def @func_682() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_3956() -> (Tensor[(6, 10, 16), int64], uint32, Tensor[(264), uint32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(11, 6, 4), float64]) {
  %1360 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %1361 = @func_2689() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1362 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1363 = cast(meta[relay.Constant][36] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1364 = cast(meta[relay.Constant][37] /* ty=Tensor[(264), uint32] */, dtype="uint32") /* ty=Tensor[(264), uint32] */;
  %1365 = reshape(%1363, newshape=[]) /* ty=uint32 */;
  %1366 = reshape(%1364, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint32] */;
  %1367 = @func_2516(%1365, %1366) /* ty=Tensor[(11, 6, 4), bool] */;
  %1368 = cast(%1367, dtype="float64") /* ty=Tensor[(11, 6, 4), float64] */;
  %1369 = %1360.1;
  %1370 = %1361.4;
  %1371 = %1362.0;
  %1372 = rsqrt(%1368) /* ty=Tensor[(11, 6, 4), float64] */;
  (%1369, meta[relay.Constant][36] /* ty=uint32 */, meta[relay.Constant][37] /* ty=Tensor[(264), uint32] */, %1370, %1371, %1372)
}

def @func_14715(%var_14714: Tensor[(7, 12, 15), float32]) -> (Tensor[(7, 12, 15), float32],) {
  %1376 = fn (%var_14703: Tensor[(7, 12, 15), float32]) -> (Tensor[(7, 12, 15), float32],) {
    %1373 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
    %1374 = cast(%var_14703, dtype="float32") /* ty=Tensor[(7, 12, 15), float32] */;
    %1375 = floor_mod(%1373, %1374) /* ty=Tensor[(7, 12, 15), float32] */;
    (%1375,)
  };
  %1376(%var_14714) /* ty=(Tensor[(7, 12, 15), float32],) */
}

def @func_3268(%var_3267: Tensor[(2145), int64]) -> (Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32], Tensor[(2145), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1388 = fn (%var_3237: Tensor[(2145), int64]) -> (Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32], Tensor[(2145), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1377 = cast(%var_3237, dtype="int64") /* ty=Tensor[(2145), int64] */;
    %1378 = cast(%var_3237, dtype="int64") /* ty=Tensor[(2145), int64] */;
    %1379 = reshape(%1377, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int64] */;
    %1380 = reshape(%1378, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int64] */;
    %1381 = @func_2361(%1379, %1380) /* ty=(Tensor[(15, 11, 13), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32]) */;
    %1382 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1383 = @func_2896() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1384 = @func_834() /* ty=Tensor[(6, 10, 16), int64] */;
    %1385 = %1381.3;
    %1386 = %1382.0;
    %1387 = %1383.2;
    (%1384, %1385, %var_3237, %1386, %1387)
  };
  %1388(%var_3267) /* ty=(Tensor[(6, 10, 16), int64], Tensor[(15, 11, 13), float32], Tensor[(2145), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_10088() -> Tensor[(6, 10, 16), int64] {
  %1389 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1389.0
}

def @func_16683() -> Tensor[(6, 10, 16), int64] {
  @func_16681() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_5437() -> Tensor[(6, 10, 16), int64] {
  @func_5435() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_8913() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1390 = @func_2608() /* ty=(Tensor[(6, 10, 16), float64],) */;
  %1391 = @func_7470() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1392 = @func_2932() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
  %1393 = %1390.0;
  %1394 = %1391.1;
  %1395 = %1392.0;
  (%1393, %1394, %1395)
}

def @func_5972(%var_5936: Tensor[(3, 12, 9), int8], %var_5937: Tensor[(3, 12, 9), int8]) -> (Tensor[(3, 12, 9), bool], Tensor[(6, 10, 16), int64]) {
  %1396 = cast(%var_5937, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
  %1397 = shape_of(%var_5936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1398 = cast(%var_5936, dtype="bool") /* ty=Tensor[(3, 12, 9), bool] */;
  %1399 = dyn.reshape(%1396, %1397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1400 = @func_2373() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1401 = less_equal(%1398, %1399) /* ty=Tensor[(3, 12, 9), bool] */;
  %1402 = %1400.0;
  (%1401, %1402)
}

def @func_1643() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_1641() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_13461() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1403 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %1404 = @func_10310() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1405 = %1403.2;
  %1406 = %1404.0;
  (%1405, %1406)
}

def @func_5411() -> Tensor[(6, 10, 16), int64] {
  %1408 = fn () -> Tensor[(6, 10, 16), int64] {
    %1407 = @func_680() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1407.1
  };
  %1408() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_1142() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_12477() -> uint32 {
  %1409 = @func_4825() /* ty=(uint32,) */;
  %1409.0
}

def @func_2074() -> Tensor[(6, 10, 16), int64] {
  @func_2072() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_1525(%var_1524: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1427 = fn (%var_1460: Tensor[(6, 10, 16), int64]) -> (Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1410 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1411 = %1410.1;
    %1412 = cast(%var_1460, dtype="int16") /* ty=Tensor[(6, 10, 16), int16] */;
    %1413 = shape_of(%1411, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1414 = cast(%1411, dtype="int16") /* ty=Tensor[(6, 10, 16), int16] */;
    %1415 = dyn.reshape(%1412, %1413, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1416 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1417 = @func_1400() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */;
    %1418 = @func_771() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1419 = @func_341() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1420 = @func_522() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1421 = bitwise_xor(%1414, %1415) /* ty=Tensor[(6, 10, 16), int16] */;
    %1422 = %1416.4;
    %1423 = %1417.1;
    %1424 = %1418.1;
    %1425 = %1419.2;
    %1426 = %1420.1;
    (%1421, %1422, %1423, %1424, %1425, %1426)
  };
  %1427(%var_1524) /* ty=(Tensor[(6, 10, 16), int16], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_7531() -> (Tensor[(6, 10, 16), int64],) {
  %1430 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1428 = @func_4622() /* ty=(Tensor[(264), uint32], Tensor[(6, 10, 16), int64]) */;
    %1429 = %1428.1;
    (%1429,)
  };
  %1430() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_15880() -> (Tensor[(1, 11, 8), float64],) {
  @func_15878() /* ty=(Tensor[(1, 11, 8), float64],) */
}

def @func_11159() -> (Tensor[(6, 10, 16), int64],) {
  %1432 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1431 = @func_8096() /* ty=Tensor[(6, 10, 16), int64] */;
    (%1431,)
  };
  %1432() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_11785() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  @func_11783() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_8870() -> (Tensor[(6, 10, 16), int64],) {
  @func_8868() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_10310() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1433 = @func_5663() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1434 = @func_4168() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(25), float64]) */;
  %1435 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %1436 = %1433.0;
  %1437 = %1434.0;
  (%1435, %1436, %1437)
}

def @func_2020() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) {
  @func_2018() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */
}

def @func_4842() -> Tensor[(6, 10, 16), int64] {
  @func_4840() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_3813(%var_3809: Tensor[(1, 11, 8), float64]) -> (Tensor[(1, 11, 8), float64],) {
  %1438 = cast(%var_3809, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
  %1439 = sinh(%1438) /* ty=Tensor[(1, 11, 8), float64] */;
  (%1439,)
}

def @func_13982() -> (Tensor[(6, 10, 16), int64],) {
  @func_13980() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_1167() -> (Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) {
  @func_1165() /* ty=(Tensor[(6, 10, 16), float64], Tensor[(6, 10, 16), int64]) */
}

def @func_14010() -> Tensor[(22, 4), float32] {
  %1441 = fn () -> Tensor[(22, 4), float32] {
    %1440 = @func_5778() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(1, 11, 8), float64], Tensor[(22, 4), float32]) */;
    %1440.2
  };
  %1441() /* ty=Tensor[(22, 4), float32] */
}

def @func_16570() -> Tensor[(6, 10, 16), int64] {
  %1442 = @func_1705() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1442.0
}

def @func_10114() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1447 = fn () -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
    %1443 = @func_6306() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
    %1444 = @func_443() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), bool]) */;
    %1445 = %1443.1;
    %1446 = %1444.0;
    (%1445, %1446)
  };
  %1447() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */
}

def @func_6556() -> Tensor[(6, 10, 16), int64] {
  @func_6554() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_4060() -> (Tensor[(6, 10, 16), bool],) {
  %1448 = @func_2255() /* ty=(Tensor[(6, 10, 16), bool], Tensor[(6, 10, 16), int64]) */;
  %1449 = %1448.0;
  (%1449,)
}

def @func_7922() -> (Tensor[(15, 12, 13), float32], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1450 = @func_7288() /* ty=(Tensor[(15, 12, 13), float32],) */;
  %1451 = @func_1013() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1452 = %1450.0;
  %1453 = @func_2403() /* ty=Tensor[(6, 10, 16), int64] */;
  %1454 = %1451.1;
  (%1452, %1453, %1454)
}

def @func_9754(%var_9752: Tensor[(3, 15, 11), float32], %var_9753: Tensor[(3, 15, 11), float32]) -> (Tensor[(3, 15, 11), bool], Tensor[(6, 10, 16), int64]) {
  @func_9750(%var_9752, %var_9753) /* ty=(Tensor[(3, 15, 11), bool], Tensor[(6, 10, 16), int64]) */
}

def @func_13526() -> (Tensor[(6, 10, 16), int64],) {
  %1457 = fn () -> (Tensor[(6, 10, 16), int64],) {
    %1455 = @func_9291() /* ty=(Tensor[(6, 10, 16), int64],) */;
    %1456 = %1455.0;
    (%1456,)
  };
  %1457() /* ty=(Tensor[(6, 10, 16), int64],) */
}

def @func_10448() -> Tensor[(6, 10, 16), int64] {
  @func_10446() /* ty=Tensor[(6, 10, 16), int64] */
}

def @func_11285() -> Tensor[(6, 10, 16), int64] {
  %1458 = @func_1140() /* ty=(Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) */;
  %1458.4
}

def @func_5257() -> (Tensor[(6, 10, 16), int64], Tensor[(6, 10, 16), int64]) {
  %1459 = @func_1274() /* ty=Tensor[(6, 10, 16), int64] */;
  %1460 = cast(%1459, dtype="float64") /* ty=Tensor[(6, 10, 16), float64] */;
  %1461 = reshape(%1460, newshape=[6, 10, 16]) /* ty=Tensor[(6, 10, 16), float64] */;
  %1462 = @func_4429(%1461) /* ty=(Tensor[(6, 10, 16), uint8], Tensor[(6, 10, 16), int64]) */;
  %1463 = %1462.1;
  (%1459, %1463)
}

def @func_15799() -> (Tensor[(6, 10, 16), int64], Tensor[(624), float32], Tensor[(4, 12, 13), float32], Tensor[(3, 14, 1), float64]) {
  %1464 = @func_11158() /* ty=(Tensor[(6, 10, 16), int64],) */;
  %1465 = cast(meta[relay.Constant][39] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1466 = reshape(%1465, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), float32] */;
  %1467 = @func_9813(%1466) /* ty=(Tensor[(4, 12, 13), float32], Tensor[(6, 10, 16), int16]) */;
  %1468 = %1467.0;
  %1469 = cast(%1468, dtype="float32") /* ty=Tensor[(4, 12, 13), float32] */;
  %1470 = @func_7428() /* ty=(Tensor[(3, 14, 1), float64],) */;
  %1471 = %1464.0;
  %1472 = atanh(%1469) /* ty=Tensor[(4, 12, 13), float32] */;
  %1473 = %1470.0;
  (%1471, meta[relay.Constant][39] /* ty=Tensor[(624), float32] */, %1472, %1473)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen629/build/output.py:5515: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen629/build/output.py", line 5520, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(36) tvmgen_default_fused_log2_kernel0(float* __restrict__ T_log2, float* __restrict__ placeholder) {
  T_log2[(((int)threadIdx.x))] = __log2f(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


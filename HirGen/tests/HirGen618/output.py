import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_22 = relay.const([[[1.150780,9.865214,-2.316664,-2.338834,7.195293,-4.157966,-0.771966,0.526626,1.430507,5.702668,-3.264711,-3.403497,2.311961],[-8.538894,8.473718,4.011000,8.454619,4.956215,5.309440,-2.316702,6.752240,4.137444,-7.867384,7.094147,3.296599,-8.333736],[-4.543797,7.045842,5.842729,-1.072422,4.833358,-4.458501,-5.992311,1.789346,7.262093,-8.903841,-5.135768,-6.710374,-6.961782],[-2.878835,-7.894929,-1.734772,8.772673,-7.852971,4.773638,-2.430488,-7.512779,3.818983,-2.965234,-3.654405,-9.127593,-5.624811]]], dtype = "float64")#candidate|22|(1, 4, 13)|const|float64
var_23 = relay.var("var_23", dtype = "float64", shape = (9, 4, 13))#candidate|23|(9, 4, 13)|var|float64
bop_24 = relay.divide(const_22.astype('float64'), var_23.astype('float64')) # shape=(9, 4, 13)
output = bop_24
output2 = bop_24
func_29 = relay.Function([var_23,], output)
mod['func_29'] = func_29
mod = relay.transform.InferType()(mod)
mutated_mod['func_29'] = func_29
mutated_mod = relay.transform.InferType()(mutated_mod)
var_30 = relay.var("var_30", dtype = "float64", shape = (9, 4, 13))#candidate|30|(9, 4, 13)|var|float64
func_29_call = mutated_mod.get_global_var('func_29')
call_31 = func_29_call(var_30)
output = call_31
func_32 = relay.Function([var_30], output)
mutated_mod['func_32'] = func_32
mutated_mod = relay.transform.InferType()(mutated_mod)
const_57 = relay.const([[[9.830702],[6.718671],[3.571112],[-3.161930],[8.188620],[6.042295],[-9.568430],[5.292512],[7.001579],[3.464440],[9.390610]],[[-7.186555],[7.178061],[0.735320],[6.114961],[4.795077],[0.374135],[-8.167565],[5.253789],[7.728018],[9.855801],[-8.198654]],[[1.016000],[8.237236],[-2.607039],[-1.149618],[1.034204],[9.926366],[-6.781429],[4.036894],[-3.509340],[-9.121906],[0.398791]],[[-5.366932],[6.952945],[6.806047],[6.487552],[6.941995],[-0.647426],[5.196625],[4.348799],[-7.356087],[-2.105237],[-4.154777]]], dtype = "float32")#candidate|57|(4, 11, 1)|const|float32
uop_58 = relay.tan(const_57.astype('float32')) # shape=(4, 11, 1)
bop_80 = relay.mod(const_57.astype('float32'), relay.reshape(uop_58.astype('float32'), relay.shape_of(const_57))) # shape=(4, 11, 1)
bop_96 = relay.not_equal(bop_80.astype('bool'), relay.reshape(uop_58.astype('bool'), relay.shape_of(bop_80))) # shape=(4, 11, 1)
func_29_call = mod.get_global_var('func_29')
func_32_call = mutated_mod.get_global_var('func_32')
var_100 = relay.var("var_100", dtype = "float64", shape = (468,))#candidate|100|(468,)|var|float64
call_99 = func_29_call(relay.reshape(var_100.astype('float64'), [9, 4, 13]))
call_101 = func_29_call(relay.reshape(var_100.astype('float64'), [9, 4, 13]))
bop_105 = relay.subtract(var_100.astype('int8'), const_57.astype('int8')) # shape=(4, 11, 468)
bop_113 = relay.right_shift(bop_105.astype('uint64'), bop_80.astype('uint64')) # shape=(4, 11, 468)
uop_125 = relay.atan(var_100.astype('float32')) # shape=(468,)
output = relay.Tuple([bop_96,call_99,bop_113,uop_125,])
output2 = relay.Tuple([bop_96,call_101,bop_113,uop_125,])
func_127 = relay.Function([var_100,], output)
mod['func_127'] = func_127
mod = relay.transform.InferType()(mod)
var_128 = relay.var("var_128", dtype = "float64", shape = (468,))#candidate|128|(468,)|var|float64
output = func_127(var_128)
func_129 = relay.Function([var_128], output)
mutated_mod['func_129'] = func_129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_454 = relay.var("var_454", dtype = "float64", shape = (3, 10, 6))#candidate|454|(3, 10, 6)|var|float64
uop_455 = relay.cos(var_454.astype('float64')) # shape=(3, 10, 6)
var_459 = relay.var("var_459", dtype = "float64", shape = (3, 10, 6))#candidate|459|(3, 10, 6)|var|float64
bop_460 = relay.less(uop_455.astype('bool'), relay.reshape(var_459.astype('bool'), relay.shape_of(uop_455))) # shape=(3, 10, 6)
output = relay.Tuple([bop_460,])
output2 = relay.Tuple([bop_460,])
func_468 = relay.Function([var_454,var_459,], output)
mod['func_468'] = func_468
mod = relay.transform.InferType()(mod)
var_469 = relay.var("var_469", dtype = "float64", shape = (3, 10, 6))#candidate|469|(3, 10, 6)|var|float64
var_470 = relay.var("var_470", dtype = "float64", shape = (3, 10, 6))#candidate|470|(3, 10, 6)|var|float64
output = func_468(var_469,var_470,)
func_471 = relay.Function([var_469,var_470,], output)
mutated_mod['func_471'] = func_471
mutated_mod = relay.transform.InferType()(mutated_mod)
var_992 = relay.var("var_992", dtype = "bool", shape = (6, 13, 13))#candidate|992|(6, 13, 13)|var|bool
var_993 = relay.var("var_993", dtype = "bool", shape = (6, 13, 13))#candidate|993|(6, 13, 13)|var|bool
bop_994 = relay.logical_and(var_992.astype('bool'), relay.reshape(var_993.astype('bool'), relay.shape_of(var_992))) # shape=(6, 13, 13)
output = bop_994
output2 = bop_994
func_1002 = relay.Function([var_992,var_993,], output)
mod['func_1002'] = func_1002
mod = relay.transform.InferType()(mod)
mutated_mod['func_1002'] = func_1002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1002_call = mutated_mod.get_global_var('func_1002')
var_1004 = relay.var("var_1004", dtype = "bool", shape = (6, 13, 13))#candidate|1004|(6, 13, 13)|var|bool
var_1005 = relay.var("var_1005", dtype = "bool", shape = (6, 13, 13))#candidate|1005|(6, 13, 13)|var|bool
call_1003 = func_1002_call(var_1004,var_1005,)
output = call_1003
func_1006 = relay.Function([var_1004,var_1005,], output)
mutated_mod['func_1006'] = func_1006
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1069 = relay.var("var_1069", dtype = "float32", shape = (10, 7, 1))#candidate|1069|(10, 7, 1)|var|float32
uop_1070 = relay.asin(var_1069.astype('float32')) # shape=(10, 7, 1)
output = relay.Tuple([uop_1070,])
output2 = relay.Tuple([uop_1070,])
func_1094 = relay.Function([var_1069,], output)
mod['func_1094'] = func_1094
mod = relay.transform.InferType()(mod)
mutated_mod['func_1094'] = func_1094
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1095 = relay.var("var_1095", dtype = "float32", shape = (10, 7, 1))#candidate|1095|(10, 7, 1)|var|float32
func_1094_call = mutated_mod.get_global_var('func_1094')
call_1096 = func_1094_call(var_1095)
output = call_1096
func_1097 = relay.Function([var_1095], output)
mutated_mod['func_1097'] = func_1097
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1135 = relay.var("var_1135", dtype = "float32", shape = (1, 14, 16))#candidate|1135|(1, 14, 16)|var|float32
uop_1136 = relay.sin(var_1135.astype('float32')) # shape=(1, 14, 16)
bop_1139 = relay.not_equal(var_1135.astype('bool'), relay.reshape(uop_1136.astype('bool'), relay.shape_of(var_1135))) # shape=(1, 14, 16)
bop_1142 = relay.logical_or(var_1135.astype('bool'), relay.reshape(bop_1139.astype('bool'), relay.shape_of(var_1135))) # shape=(1, 14, 16)
output = bop_1142
output2 = bop_1142
func_1147 = relay.Function([var_1135,], output)
mod['func_1147'] = func_1147
mod = relay.transform.InferType()(mod)
var_1148 = relay.var("var_1148", dtype = "float32", shape = (1, 14, 16))#candidate|1148|(1, 14, 16)|var|float32
output = func_1147(var_1148)
func_1149 = relay.Function([var_1148], output)
mutated_mod['func_1149'] = func_1149
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1265 = relay.const([[[5.840382,4.029030,-8.463399,9.146020,0.844792,-1.454798,3.161583],[4.525642,3.277537,3.563494,-8.803933,0.319912,9.251732,4.110033],[-8.700932,-8.317773,0.954153,3.215289,5.463709,-2.236348,-2.309667],[1.136034,9.866825,4.814272,-1.106598,-3.794983,-3.789019,7.244901],[-3.695009,-6.437958,7.571984,-1.248098,6.132900,-8.044440,-5.187122],[3.268935,-8.918936,-4.511824,7.183151,-9.575816,0.320425,-3.038061],[-4.628980,7.744977,-7.107586,5.690628,-6.906435,7.340382,-6.448481],[-0.607220,-6.819087,6.181316,7.850876,-0.477345,9.846094,-0.027408],[5.702415,-0.074613,-3.407432,-0.009227,-9.476822,-2.147866,5.755141],[-2.243502,-0.584167,4.643695,-8.379046,4.952754,-3.572681,4.698494],[-9.982224,-3.503733,-5.305044,5.394048,-7.467465,-0.071994,2.320812],[-2.271956,-2.738072,-0.988776,2.120158,3.780111,-6.630355,2.862138],[8.953656,-5.056104,-5.984709,5.502149,-5.224638,7.314800,0.286805]],[[3.953472,6.767979,4.856025,-9.855747,-3.414488,1.789601,7.662554],[-1.083811,9.235478,2.094211,6.804792,-6.050836,8.619486,3.435253],[-2.724448,-1.554228,6.565444,1.319779,2.505723,3.495749,8.455580],[7.362796,-1.619515,-4.675219,3.806600,-1.670751,5.792150,-4.526648],[5.001993,-5.938193,-1.130304,5.557014,-5.620397,-2.553400,-6.109126],[6.670709,3.333202,-7.319773,-4.521257,3.016822,5.384729,-1.922561],[-6.623622,4.025844,-3.761527,7.434746,-5.775822,-2.153411,5.226043],[-8.574192,-9.298978,-5.684054,-2.994844,-4.295015,7.381664,8.863232],[8.241213,6.366383,-9.989520,5.504293,-4.216646,3.892709,1.324735],[4.576538,-9.335100,-4.246667,5.911575,-2.956693,1.153677,-9.913834],[-0.251838,8.912464,2.984886,-7.491493,0.238229,-5.256679,-0.678678],[-0.725437,-2.201013,6.894849,5.356671,0.246760,-9.276986,6.821921],[-5.350598,-4.003310,7.667545,-4.056414,-0.793009,-8.136700,-2.244589]],[[-6.015000,-1.818825,-7.342882,-0.424267,9.880137,2.041725,0.176959],[9.952733,-8.203692,-2.369384,-4.595167,-6.702049,5.944216,9.351863],[4.368621,-7.991126,2.587753,-0.491479,7.247810,1.245787,0.937718],[-9.229510,-4.271976,1.792267,1.751621,4.530074,9.942523,4.185318],[-9.248044,-9.479245,-8.219906,2.484954,0.688071,-8.866023,4.134228],[2.231562,-0.264479,7.176529,8.735824,6.658575,-7.484012,8.633273],[5.920935,-7.138979,7.026646,3.488942,-8.438280,9.865781,-0.697338],[-4.240355,6.260765,-2.422332,5.605367,-1.154282,-4.933068,-8.891887],[-7.527643,-1.328874,-5.324219,-1.719393,3.474017,7.162283,-0.504133],[0.846370,-7.583398,-5.712801,-5.045687,-1.832872,-4.784437,-5.487136],[-7.356345,-2.330860,-3.534544,-0.270259,0.749870,1.234025,-2.895560],[-6.232893,5.155129,-0.544275,-0.326277,-0.390011,5.326693,-8.650749],[5.231498,3.318837,3.040420,3.112447,-5.836607,-4.569415,-8.543591]],[[9.875845,4.426224,0.421482,9.291371,-6.296750,9.200007,-2.860178],[5.205441,-9.904721,-3.934353,4.249504,7.954965,5.161683,-1.254828],[-7.629257,0.006626,-6.042163,5.764553,-7.051417,4.400385,-3.534775],[4.829705,5.538438,-1.579605,5.317893,8.745211,-8.647268,7.450643],[3.838693,-1.462428,-9.731569,6.818687,-3.215865,6.626043,3.243497],[7.306586,8.538960,0.393442,-9.998932,-1.712837,-6.860063,-1.474132],[3.934297,-5.906302,8.359527,-6.849717,4.124482,-8.178721,-1.604321],[-1.758101,-8.464374,-6.332433,-9.885160,0.918441,0.753534,-1.152509],[8.809021,-6.889653,9.849949,9.266502,3.074320,-5.912097,7.316050],[-4.118145,-1.186199,-5.240532,8.377828,-0.528223,-6.322710,-2.083360],[-1.675029,9.197788,0.245633,-2.176053,-5.519532,8.410360,1.270580],[-8.891083,4.714632,-5.230749,9.462195,-6.957409,3.359439,-0.347418],[-1.660192,3.718509,-3.146952,0.587915,6.849577,-6.318859,3.560050]]], dtype = "float32")#candidate|1265|(4, 13, 7)|const|float32
const_1266 = relay.const([[[2.378205,-7.820667,1.163451,7.701800,5.804238,3.814009,-3.031308],[-7.490657,-9.045745,6.329540,-4.284083,-1.926737,-6.115954,6.085352],[-4.576912,-7.232158,0.499179,-5.020510,-7.116418,6.954576,-5.854724],[-8.569555,8.983225,3.787358,0.671324,-2.794208,7.932719,6.528543],[2.563923,-0.645333,4.947802,3.218632,9.691325,0.766965,7.251848],[7.310923,6.926031,7.955239,-5.567612,-7.128128,9.385657,5.015662],[5.793912,4.832779,3.760851,6.881263,-0.604237,7.504766,-6.193079],[0.735327,-9.168995,6.302786,7.371180,-9.539475,-3.221677,1.197709],[0.708943,-6.500702,5.334275,1.144195,7.910657,3.467497,2.808667],[6.696223,-5.501876,-4.277401,5.806867,-4.485865,-2.360164,-6.298903],[-1.789880,-5.887941,-1.498108,-7.689481,-0.316700,7.711208,-9.909704],[-8.998653,3.784292,-6.857313,-1.212977,-1.736354,-3.241826,-7.503774],[7.682660,4.587917,-6.198730,0.409925,9.495306,-5.007409,0.517798]],[[3.850636,2.101186,-9.050687,-7.444209,-7.384023,4.966656,-1.070454],[5.489887,-1.085530,-2.931669,-8.559882,0.623424,2.860549,-4.726632],[1.388357,7.468066,7.017427,-1.267450,-0.472188,-8.812134,6.158841],[8.345334,-6.358853,0.546478,-0.413915,-0.142273,-6.135874,-3.640674],[-3.257761,-6.500976,6.669235,1.194872,-1.797877,-3.302464,-0.813313],[1.134420,-9.948616,0.424220,7.314084,1.097020,-1.556913,3.222531],[0.018151,9.427657,-0.551680,4.203040,0.442151,-1.861271,-8.209015],[-8.956139,-3.495004,0.841326,3.322053,6.811703,9.329803,-1.597935],[-8.140607,-9.996659,6.205313,-5.109622,9.962509,6.517411,-1.023609],[-9.908008,-4.606219,3.029293,-5.765348,4.053183,8.326610,1.952200],[2.994600,3.753777,9.406521,-0.426222,4.543096,-1.144930,-7.117097],[5.293319,0.174644,-0.611349,0.890363,-3.505757,-6.212056,3.090786],[-9.680554,-2.350379,-8.153705,-3.876799,4.543367,-7.452805,3.935246]],[[-6.215690,6.560268,-0.213687,2.055958,-9.610481,-8.474744,1.040094],[7.994943,-5.694988,7.102946,9.848039,-3.356116,0.921543,-9.126875],[-0.900145,-9.563042,-0.578282,4.650180,-0.961396,9.286132,0.722845],[-6.619690,-8.909409,8.895370,3.974966,2.330409,-7.113427,-0.278316],[5.246542,7.490747,-5.661770,-1.032712,1.692181,5.828681,5.485729],[0.796465,-2.708043,8.357599,1.818797,-9.657240,5.479290,1.240785],[2.944810,8.234706,1.308365,7.519151,-8.667292,-0.390290,6.363085],[4.301361,-0.840135,3.411893,-1.113715,6.340966,9.865807,3.841625],[5.846784,-6.706754,-1.229095,6.576551,-6.154698,-9.998298,7.493110],[5.540900,-2.403664,4.386183,7.519471,-9.168912,1.627202,6.605986],[7.389202,4.464943,8.093455,9.837119,7.259122,6.912916,7.167038],[-0.313662,-8.583183,4.861693,-3.578982,0.640961,3.777741,-3.965501],[8.925071,1.356404,-8.109158,3.079784,-4.594874,4.914046,-1.910103]],[[-5.117711,-6.940449,-1.409444,-7.417883,-7.931141,-8.954933,-0.397078],[3.559235,-1.875179,-9.218493,5.109912,-8.677411,-8.026782,9.794926],[-4.445887,5.664648,-6.491440,6.656733,-8.539327,-4.835840,-4.659013],[9.733253,7.717606,6.619302,6.417824,9.256551,-1.860687,-3.448845],[5.260356,8.846623,9.673721,-5.960874,-6.504659,-9.153532,6.716402],[9.144580,5.709805,-9.966955,1.955446,-3.352052,3.873747,4.695789],[1.151448,-0.803264,-7.918136,-8.892540,-0.751266,1.894447,-5.678915],[-1.464700,-6.773834,9.370704,-3.081454,-6.236419,-1.817389,-2.141143],[6.117598,7.056622,3.590868,7.171998,0.317070,5.059061,-3.857513],[6.886700,-4.234053,-2.148700,6.742105,-5.003052,0.555374,-7.358041],[3.905921,2.222664,-8.877519,3.929261,-2.385128,6.438737,-1.615793],[-1.337584,9.018903,8.128879,9.302202,3.040635,-2.449059,-6.151379],[-6.202837,4.420377,1.078173,-8.131038,3.579837,-9.459502,-2.470848]]], dtype = "float32")#candidate|1266|(4, 13, 7)|const|float32
bop_1267 = relay.mod(const_1265.astype('float32'), relay.reshape(const_1266.astype('float32'), relay.shape_of(const_1265))) # shape=(4, 13, 7)
bop_1270 = relay.subtract(const_1265.astype('int8'), relay.reshape(bop_1267.astype('int8'), relay.shape_of(const_1265))) # shape=(4, 13, 7)
func_1094_call = mod.get_global_var('func_1094')
func_1097_call = mutated_mod.get_global_var('func_1097')
const_1285 = relay.const([4.796240,7.844762,-2.000045,6.650018,5.251273,-6.289054,-6.824394,-8.167145,-0.787556,4.028599,-8.017535,9.245215,-7.785865,-8.776156,8.331315,6.402913,-4.525648,5.705268,-3.917220,6.532589,-0.438670,5.530525,-7.029323,-0.353099,-0.020908,5.037621,-4.444497,-1.274858,-9.959196,-9.833063,-4.841210,6.934839,7.999358,-6.156338,3.574908,5.119200,3.721309,3.561456,6.299785,-3.295822,2.891684,-3.530941,-7.353805,-0.539118,7.052705,1.812463,-2.526583,7.857322,7.001247,8.809740,9.261645,-0.504211,9.619163,-1.231629,5.198049,3.631117,-7.724825,3.069204,-2.857099,-9.167819,-4.470066,-1.567303,-7.050795,-7.871619,8.508512,-7.882114,3.477399,4.792501,-1.682653,9.675675], dtype = "float32")#candidate|1285|(70,)|const|float32
call_1284 = relay.TupleGetItem(func_1094_call(relay.reshape(const_1285.astype('float32'), [10, 7, 1])), 0)
call_1286 = relay.TupleGetItem(func_1097_call(relay.reshape(const_1285.astype('float32'), [10, 7, 1])), 0)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
const_1291 = relay.const([-5.330915,8.536694,-3.251389,-6.792108,8.893632,6.938528,-0.686618,-3.080753,-1.325833,5.106403,-5.499595,5.916628,8.104009,-7.697733,5.664323,6.194405,-4.982939,-8.403093,-7.681843,-9.402384,4.333609,-5.438361,3.301553,-3.354130,0.304112,4.987668,-3.211844,7.921252,-3.325835,3.000412,5.582061,3.512328,2.212707,-7.619333,6.027660,0.601157,-4.925719,-3.199719,-4.072467,1.579560,-7.876403,5.986205,7.080918,4.670876,3.169105,2.037917,4.466806,-0.175525,3.091116,7.252521,3.883583,0.787578,-8.669689,-4.309289,-3.418803,-6.608711,-6.830631,-0.346582,7.292086,8.039603,-9.486333,9.915335,7.710752,-6.337440,-8.392384,3.375139,2.043965,1.617578,-3.940767,-4.255672,1.127997,-5.483780,7.133775,3.504091,-2.208608,1.068663,-9.625828,-8.468088,-0.537892,-0.692498,-0.565288,3.161743,-1.935366,8.637309,-4.934612,9.039211,2.339081,0.828902,-2.039399,8.399097,0.819756,7.107913,7.056950,0.548864,9.855987,-0.125299,-0.469722,5.232322,-2.918721,8.698179,-9.137852,-4.669423,-7.900181,-2.500158,-1.295335,4.341013,-1.249107,2.514268,9.176963,-5.538717,-4.283183,-9.909478,-5.302374,2.743885,7.080810,2.951353,-1.517007,1.836075,1.987942,1.596004,2.552760,2.034691,-8.501431,0.299188,2.679591,-5.661442,-6.410658,-1.394075,-4.618549,6.080786,7.573336,4.542938,-4.811545,-9.394839,0.385643,4.576400,1.644018,-3.351293,-9.849525,4.829484,1.667070,4.947685,-8.179888,-4.902868,-7.518069,-6.926504,-7.024263,5.962309,-3.095139,-4.178217,0.420681,-4.952044,-8.157584,-4.407183,-8.937789,1.549714,0.829437,8.910733,-7.176915,-5.533264,1.103748,-9.999559,2.123187,-3.897197,-4.963179,1.540299,1.238596,-2.316540,-3.437560,-9.980129,-5.963670,3.780533,-5.622699,6.638937,-7.616060,1.487447,2.898084,-4.271839,6.932293,-1.094954,5.563393,-4.311624,-2.126026,6.600082,8.435820,9.405346,1.045803,-2.784409,-1.080271,-2.206679,4.376101,-2.746104,-5.331137,3.558879,-6.240296,6.231268,3.660465,-2.437517,-5.647167,4.710779,8.235711,8.026901,1.293628,-9.275104,9.103139,-3.425034,0.889909,8.390497,6.356867,7.189462,8.317291,-5.703045,-7.290045,-4.928077,-1.760438,8.833570,-6.837854,-3.422501,-9.337054,6.195358,8.615240,-2.617670,1.579965,-9.820979], dtype = "float32")#candidate|1291|(224,)|const|float32
call_1290 = func_1147_call(relay.reshape(const_1291.astype('float32'), [1, 14, 16]))
call_1292 = func_1147_call(relay.reshape(const_1291.astype('float32'), [1, 14, 16]))
bop_1296 = relay.divide(const_1285.astype('float32'), relay.reshape(call_1284.astype('float32'), relay.shape_of(const_1285))) # shape=(70,)
bop_1299 = relay.divide(const_1285.astype('float32'), relay.reshape(call_1286.astype('float32'), relay.shape_of(const_1285))) # shape=(70,)
func_1002_call = mod.get_global_var('func_1002')
func_1006_call = mutated_mod.get_global_var('func_1006')
var_1321 = relay.var("var_1321", dtype = "bool", shape = (1014,))#candidate|1321|(1014,)|var|bool
call_1320 = func_1002_call(relay.reshape(var_1321.astype('bool'), [6, 13, 13]), relay.reshape(var_1321.astype('bool'), [6, 13, 13]), )
call_1322 = func_1002_call(relay.reshape(var_1321.astype('bool'), [6, 13, 13]), relay.reshape(var_1321.astype('bool'), [6, 13, 13]), )
uop_1332 = relay.asinh(call_1320.astype('float32')) # shape=(6, 13, 13)
uop_1334 = relay.asinh(call_1322.astype('float32')) # shape=(6, 13, 13)
var_1336 = relay.var("var_1336", dtype = "float32", shape = (6, 13, 13))#candidate|1336|(6, 13, 13)|var|float32
bop_1337 = relay.mod(uop_1332.astype('float32'), relay.reshape(var_1336.astype('float32'), relay.shape_of(uop_1332))) # shape=(6, 13, 13)
bop_1340 = relay.mod(uop_1334.astype('float32'), relay.reshape(var_1336.astype('float32'), relay.shape_of(uop_1334))) # shape=(6, 13, 13)
output = relay.Tuple([bop_1270,call_1290,const_1291,bop_1296,var_1321,bop_1337,])
output2 = relay.Tuple([bop_1270,call_1292,const_1291,bop_1299,var_1321,bop_1340,])
func_1345 = relay.Function([var_1321,var_1336,], output)
mod['func_1345'] = func_1345
mod = relay.transform.InferType()(mod)
var_1346 = relay.var("var_1346", dtype = "bool", shape = (1014,))#candidate|1346|(1014,)|var|bool
var_1347 = relay.var("var_1347", dtype = "float32", shape = (6, 13, 13))#candidate|1347|(6, 13, 13)|var|float32
output = func_1345(var_1346,var_1347,)
func_1348 = relay.Function([var_1346,var_1347,], output)
mutated_mod['func_1348'] = func_1348
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1530 = relay.var("var_1530", dtype = "float32", shape = ())#candidate|1530|()|var|float32
var_1531 = relay.var("var_1531", dtype = "float32", shape = (6, 16, 9))#candidate|1531|(6, 16, 9)|var|float32
bop_1532 = relay.subtract(var_1530.astype('float32'), var_1531.astype('float32')) # shape=(6, 16, 9)
var_1539 = relay.var("var_1539", dtype = "float32", shape = (6, 16, 9))#candidate|1539|(6, 16, 9)|var|float32
bop_1540 = relay.bitwise_xor(var_1531.astype('int64'), relay.reshape(var_1539.astype('int64'), relay.shape_of(var_1531))) # shape=(6, 16, 9)
var_1543 = relay.var("var_1543", dtype = "float32", shape = (6, 16, 9))#candidate|1543|(6, 16, 9)|var|float32
bop_1544 = relay.less(var_1539.astype('bool'), relay.reshape(var_1543.astype('bool'), relay.shape_of(var_1539))) # shape=(6, 16, 9)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
var_1559 = relay.var("var_1559", dtype = "float32", shape = (112, 2))#candidate|1559|(112, 2)|var|float32
call_1558 = func_1147_call(relay.reshape(var_1559.astype('float32'), [1, 14, 16]))
call_1560 = func_1147_call(relay.reshape(var_1559.astype('float32'), [1, 14, 16]))
output = relay.Tuple([bop_1532,bop_1540,bop_1544,call_1558,var_1559,])
output2 = relay.Tuple([bop_1532,bop_1540,bop_1544,call_1560,var_1559,])
func_1562 = relay.Function([var_1530,var_1531,var_1539,var_1543,var_1559,], output)
mod['func_1562'] = func_1562
mod = relay.transform.InferType()(mod)
var_1563 = relay.var("var_1563", dtype = "float32", shape = ())#candidate|1563|()|var|float32
var_1564 = relay.var("var_1564", dtype = "float32", shape = (6, 16, 9))#candidate|1564|(6, 16, 9)|var|float32
var_1565 = relay.var("var_1565", dtype = "float32", shape = (6, 16, 9))#candidate|1565|(6, 16, 9)|var|float32
var_1566 = relay.var("var_1566", dtype = "float32", shape = (6, 16, 9))#candidate|1566|(6, 16, 9)|var|float32
var_1567 = relay.var("var_1567", dtype = "float32", shape = (112, 2))#candidate|1567|(112, 2)|var|float32
output = func_1562(var_1563,var_1564,var_1565,var_1566,var_1567,)
func_1568 = relay.Function([var_1563,var_1564,var_1565,var_1566,var_1567,], output)
mutated_mod['func_1568'] = func_1568
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1641 = relay.var("var_1641", dtype = "bool", shape = ())#candidate|1641|()|var|bool
var_1642 = relay.var("var_1642", dtype = "bool", shape = (16, 9, 16))#candidate|1642|(16, 9, 16)|var|bool
bop_1643 = relay.logical_and(var_1641.astype('bool'), var_1642.astype('bool')) # shape=(16, 9, 16)
output = bop_1643
output2 = bop_1643
func_1653 = relay.Function([var_1641,var_1642,], output)
mod['func_1653'] = func_1653
mod = relay.transform.InferType()(mod)
mutated_mod['func_1653'] = func_1653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1653_call = mutated_mod.get_global_var('func_1653')
var_1655 = relay.var("var_1655", dtype = "bool", shape = ())#candidate|1655|()|var|bool
var_1656 = relay.var("var_1656", dtype = "bool", shape = (16, 9, 16))#candidate|1656|(16, 9, 16)|var|bool
call_1654 = func_1653_call(var_1655,var_1656,)
output = call_1654
func_1657 = relay.Function([var_1655,var_1656,], output)
mutated_mod['func_1657'] = func_1657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1943 = relay.var("var_1943", dtype = "float64", shape = (14, 6, 14))#candidate|1943|(14, 6, 14)|var|float64
uop_1944 = relay.atan(var_1943.astype('float64')) # shape=(14, 6, 14)
output = relay.Tuple([uop_1944,])
output2 = relay.Tuple([uop_1944,])
func_1947 = relay.Function([var_1943,], output)
mod['func_1947'] = func_1947
mod = relay.transform.InferType()(mod)
var_1948 = relay.var("var_1948", dtype = "float64", shape = (14, 6, 14))#candidate|1948|(14, 6, 14)|var|float64
output = func_1947(var_1948)
func_1949 = relay.Function([var_1948], output)
mutated_mod['func_1949'] = func_1949
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2248 = relay.var("var_2248", dtype = "uint8", shape = (16, 11, 9))#candidate|2248|(16, 11, 9)|var|uint8
const_2249 = relay.const([[[1,7,-1,2,3,-9,-9,-1,2],[2,9,10,4,-4,-5,8,-6,-4],[9,10,-1,-9,6,9,-1,7,6],[-10,7,-1,2,10,4,2,7,-5],[3,-1,3,-8,2,-4,5,9,8],[6,-9,8,8,7,6,-4,-8,-9],[-4,5,4,-4,-5,-1,-5,5,-1],[5,6,5,-6,10,-5,-2,10,4],[-9,3,3,1,2,10,-10,5,9],[-8,10,-6,9,-3,-9,2,-7,-4],[-10,-6,2,8,-3,9,-2,8,7]],[[6,-5,-4,7,-4,5,-3,-4,9],[-7,9,-7,-5,-5,2,6,-7,-10],[5,9,10,-7,8,3,9,-4,1],[5,2,-8,4,-6,-7,4,-2,1],[-6,6,-2,-3,1,9,9,-10,6],[7,4,-10,10,4,6,5,-6,8],[-3,10,8,-8,3,-10,-7,-8,-10],[3,10,-1,3,-10,8,8,1,-5],[-5,-6,2,7,4,-4,4,4,3],[2,-3,6,10,-5,9,-10,5,-5],[3,-8,-9,-1,10,-7,-3,10,1]],[[9,9,2,4,-4,-9,5,3,9],[8,5,7,4,2,6,-1,5,-7],[-9,1,9,4,-2,-9,-9,2,6],[5,-9,-3,10,-10,-3,-4,-9,6],[6,1,-9,10,-9,3,2,-5,-6],[-6,4,3,-2,-10,3,8,-7,9],[9,-5,2,6,-7,4,1,10,-5],[-1,-10,-7,-8,-4,2,-5,1,-1],[-10,-8,8,-2,2,-4,-5,-4,-7],[-9,4,4,-7,10,8,2,10,7],[-1,-9,-9,10,8,-10,-4,2,4]],[[-7,4,10,1,-10,-1,-9,3,7],[-10,7,-2,-5,-8,6,2,5,-1],[7,-7,2,-1,-4,8,-8,10,-6],[-4,9,-7,-6,-8,-4,5,2,-8],[4,5,4,9,4,7,2,-1,5],[-7,9,-1,-6,-4,-8,3,2,10],[-3,-7,-8,7,8,-2,7,4,-5],[-9,-3,1,5,-5,-4,-4,4,4],[-8,2,10,-2,3,3,3,9,4],[7,-6,8,-5,-4,4,3,-2,1],[-8,9,9,9,3,-7,-2,8,-7]],[[5,-7,-3,9,-4,-10,3,5,1],[-7,5,-10,8,-7,9,1,5,3],[10,1,-4,-6,-1,2,-5,4,-8],[-2,-8,1,10,9,3,-3,-5,6],[7,8,-4,-2,9,1,-10,-2,-2],[4,-8,-9,-7,5,-9,3,4,6],[4,-9,3,8,4,10,4,2,-8],[-4,-3,7,9,-10,3,-1,3,10],[1,-9,-10,3,-4,-8,3,-7,3],[10,6,-5,7,8,9,8,-7,-4],[-6,3,-9,-2,4,-1,-3,-9,5]],[[10,1,4,9,9,-8,3,8,-4],[6,1,3,-7,7,7,-9,3,-6],[-9,8,-1,10,2,9,-7,2,-6],[-4,-3,-6,-4,-9,6,-6,10,-4],[-2,-6,-4,-10,1,3,-9,8,-9],[-2,3,9,-7,-6,-9,-10,7,-3],[1,4,-5,9,3,4,6,-4,-9],[8,-8,-5,-7,5,-2,-4,2,-5],[6,-9,-3,-2,2,6,9,-9,10],[-3,10,-8,-8,5,2,-9,6,-7],[2,6,5,5,-7,2,-10,-2,-5]],[[-5,7,-7,2,7,-3,-4,6,-8],[3,-7,-10,8,6,-2,-4,-7,7],[-10,-7,6,3,-4,-4,-2,-10,7],[-1,-1,9,-9,-2,-4,10,9,-2],[9,9,-6,8,9,-10,9,5,8],[5,5,-6,6,4,5,-2,-3,8],[1,-9,5,9,1,-5,-6,-6,8],[1,-10,-9,10,1,-10,5,6,-4],[-5,6,6,3,-4,6,-5,-3,-1],[1,-2,7,1,5,-7,-10,-1,8],[-10,1,2,-3,4,3,10,9,6]],[[6,-1,5,-10,-10,-3,-8,9,-6],[-9,-1,7,-10,-8,9,-8,-3,5],[-5,-3,4,3,-9,-5,5,-6,-7],[-10,9,8,4,-2,3,5,10,4],[5,8,-10,-1,-7,3,9,2,1],[-8,6,-2,-7,8,4,-3,-7,-3],[6,-6,-10,-8,2,8,2,10,8],[-8,8,2,5,-1,8,3,-7,-8],[8,7,-10,5,3,-1,-7,5,4],[-7,7,-5,-1,1,-9,-4,-9,-9],[8,-2,-1,-3,1,-8,-9,7,-3]],[[1,3,4,2,-1,1,-9,-5,-3],[1,9,-5,-10,1,10,-10,-10,2],[-4,-1,5,-6,2,-3,-10,-10,10],[-5,2,8,2,3,-2,5,1,-3],[-8,1,10,5,-10,-10,-10,1,-3],[-4,-8,6,-5,-5,8,3,9,-8],[-7,1,-7,8,-6,-1,-7,-3,-5],[-4,-1,-7,9,5,-3,6,-7,9],[-8,3,-5,2,-3,-8,5,7,1],[2,-3,9,-1,7,-2,2,-3,-5],[-1,-2,-1,3,10,-1,-5,2,-2]],[[-3,6,1,-6,9,9,-10,10,-5],[2,-8,-7,5,1,-9,8,6,-3],[3,1,9,-7,-10,-10,-9,-2,-5],[5,-2,-7,7,-2,1,-1,5,8],[2,2,2,9,-4,-8,2,9,10],[-5,-3,-2,-4,-1,-5,-2,6,-10],[-8,2,2,1,5,-1,7,-2,5],[-7,6,-8,8,-9,6,3,-10,5],[6,9,-7,-4,8,-7,9,2,1],[-6,1,-3,7,-8,2,-3,1,-10],[2,-3,10,-3,-5,2,-6,4,6]],[[-2,-5,9,6,-6,4,7,9,-8],[1,8,8,-1,10,10,5,6,6],[9,-7,-1,10,7,-8,-8,8,-5],[6,1,-3,10,4,-10,-3,-2,-2],[1,3,-1,5,-1,5,-1,4,-7],[-2,-5,-6,9,-3,-10,-6,-7,3],[9,9,-2,6,5,3,6,-10,-4],[-7,-6,3,-5,8,-7,2,-8,-8],[7,-4,-3,-6,-4,4,-5,-10,1],[-8,4,8,7,-9,-3,7,-8,-4],[-8,4,9,10,8,4,1,6,9]],[[7,8,-3,1,-2,-1,-4,7,2],[5,-9,-10,-4,6,-8,-6,3,1],[4,5,4,2,-8,-7,4,-10,7],[-7,-1,-3,-8,-4,-2,6,-10,1],[1,-2,-2,-9,3,1,-9,2,-1],[-1,-3,-9,-1,-10,6,-4,5,-5],[-7,5,-4,-9,-5,5,4,-7,10],[-2,1,-3,-3,5,5,9,4,1],[2,-1,8,5,1,-9,-5,3,4],[4,-6,-7,9,-2,-10,1,2,-9],[9,2,-5,10,-3,8,2,3,1]],[[7,-6,10,-4,9,4,-4,-3,2],[9,-10,8,8,-1,6,-2,9,3],[-5,-2,-3,-2,1,5,-5,-9,7],[-6,5,-5,-9,-3,-7,10,7,8],[-2,9,8,-9,10,-10,5,-1,1],[-1,-3,1,-5,5,4,-2,-6,10],[-6,-6,6,3,-2,-2,-10,-5,9],[6,6,-6,5,-7,-8,4,5,-2],[8,4,2,4,1,9,-5,6,6],[-4,-9,-1,-9,4,-7,-6,-4,4],[6,-1,7,-7,-5,-6,4,-4,-2]],[[-3,-10,-6,3,-1,-10,-6,4,3],[7,4,2,5,-9,-10,-3,-5,-10],[-1,10,-2,10,-9,7,-4,2,8],[-5,2,3,-8,-7,-1,-3,-9,-6],[-3,3,9,-4,4,-10,-1,-9,-2],[5,9,4,-8,-4,-7,-10,-7,4],[2,-10,5,-3,8,9,4,-1,-5],[-5,-9,10,1,10,-4,5,-4,6],[-8,8,-1,-5,1,10,-10,-7,-3],[-7,-8,2,1,7,6,-7,-2,-10],[9,8,3,6,-2,-4,-1,-1,10]],[[-8,-3,-6,-10,-3,5,-7,-9,6],[4,7,4,-1,4,1,-7,5,-6],[9,4,-2,7,5,4,-10,-3,4],[-8,-2,7,6,-4,4,-2,10,6],[8,9,1,-7,4,8,7,3,10],[-5,-5,-7,-9,-3,6,-8,7,8],[-5,-9,-4,4,-4,-3,8,1,6],[-4,9,-3,1,1,-3,3,3,4],[8,-1,7,-9,1,-10,-9,2,-4],[-7,10,-10,-7,10,7,-9,6,-9],[3,9,9,-3,-6,8,-1,2,1]],[[4,-8,-9,-10,10,-8,8,7,7],[9,-4,-4,4,7,7,-9,-7,-5],[2,5,-1,2,-4,9,5,-3,2],[3,-5,3,2,2,10,6,-5,3],[1,9,4,-1,7,-2,-3,6,-7],[7,2,-1,-9,2,5,1,-3,-5],[8,8,2,-4,-4,1,1,3,9],[4,10,-1,-3,2,3,-3,-5,-6],[-10,2,-5,7,4,7,-3,-1,-9],[7,9,10,-1,2,-3,-3,-3,6],[1,-3,-3,-8,3,1,-6,-4,10]]], dtype = "uint8")#candidate|2249|(16, 11, 9)|const|uint8
bop_2250 = relay.maximum(var_2248.astype('uint8'), relay.reshape(const_2249.astype('uint8'), relay.shape_of(var_2248))) # shape=(16, 11, 9)
uop_2255 = relay.sqrt(bop_2250.astype('float64')) # shape=(16, 11, 9)
func_468_call = mod.get_global_var('func_468')
func_471_call = mutated_mod.get_global_var('func_471')
var_2270 = relay.var("var_2270", dtype = "float64", shape = (180,))#candidate|2270|(180,)|var|float64
call_2269 = relay.TupleGetItem(func_468_call(relay.reshape(var_2270.astype('float64'), [3, 10, 6]), relay.reshape(var_2270.astype('float64'), [3, 10, 6]), ), 0)
call_2271 = relay.TupleGetItem(func_471_call(relay.reshape(var_2270.astype('float64'), [3, 10, 6]), relay.reshape(var_2270.astype('float64'), [3, 10, 6]), ), 0)
func_29_call = mod.get_global_var('func_29')
func_32_call = mutated_mod.get_global_var('func_32')
const_2282 = relay.const([9.261897,3.707264,3.881607,3.812352,8.002770,-6.816314,-2.258861,7.194851,-2.245940,-4.271108,3.318192,9.092221,5.928817,-6.210338,8.152789,-0.288892,6.336172,-4.803312,3.836550,9.180428,-2.859163,0.173597,0.013364,-8.187656,4.407780,0.484603,1.477076,5.899786,6.754466,-5.651637,2.402323,3.813565,-4.792320,-0.632228,-1.005385,-0.555388,1.337087,9.937281,-8.765117,2.055118,-7.951338,-1.688509,9.983450,-2.046633,-2.847374,7.536278,0.576862,-1.692852,7.029720,4.447661,8.301873,-9.134285,-5.787266,0.440361,-6.716991,-9.946129,1.137074,-8.474069,6.880163,-3.968394,1.253741,3.669082,-5.651912,-5.046287,-4.849001,6.614490,5.965098,0.473910,6.242381,-4.203891,0.744005,-1.077034,-9.362582,3.614301,-6.999053,5.151827,-2.457501,-7.953008,-0.436560,-8.133843,5.822277,-7.447390,8.226768,-0.445339,7.241231,-0.850656,7.998995,3.301911,-7.712813,8.758817,-1.361654,-7.647398,-6.892669,-6.058310,-6.286193,7.595437,-1.661649,-2.115049,3.910442,7.949700,-5.557002,3.400048,-1.304899,1.614401,-1.881068,9.933665,2.292388,6.693752,9.327016,-8.560809,-3.712451,6.259837,-0.995181,-9.736694,-7.253137,-1.316762,-2.623979,-8.329191,-4.107939,6.558942,6.297510,-2.439230,-0.129172,-9.972112,2.439394,1.436706,-2.509482,-5.375618,3.651879,3.046428,-2.304007,-0.679825,0.066146,-5.754883,-6.755244,-2.658450,-8.179515,-3.460781,-9.102010,-6.930067,1.817578,0.694396,-1.658941,-6.457002,1.054503,4.884757,8.674723,-1.709399,1.941523,9.464413,-7.583690,5.597262,-1.231258,7.841000,-8.703736,-8.790519,-2.874271,9.170641,4.800115,-1.959135,7.382171,2.404438,7.183292,-9.545940,-7.606864,-8.015771,2.040521,0.786300,3.271380,5.020122,9.193411,8.329074,5.380074,-6.936575,5.827382,0.460785,2.051079,8.681316,-4.765658,6.246549,4.293486,4.368276,8.736658,-7.148282,-2.892108,-8.614864,0.694465,9.179325,-6.199462,-8.818429,-6.025540,9.995023,-7.994340,-5.081206,-4.496445,1.816415,8.505361,-9.472097,1.120505,7.901159,-6.802227,3.446038,8.189069,5.333756,9.541876,4.873641,5.965397,6.315499,-5.307026,8.476592,6.668143,-8.430682,5.384647,4.014726,-6.974645,-6.944303,-9.746357,-1.491545,-0.602131,0.016168,3.066766,3.026324,4.638452,-8.327694,-6.716415,-1.526133,-9.045301,-6.434343,-0.027500,1.496945,-8.058372,3.513114,0.142833,7.585015,1.852873,1.618383,3.597842,-0.529495,2.372306,-8.291556,-8.770437,7.496877,-1.390725,-9.261824,2.393147,6.908369,-4.681742,-1.550612,-2.392759,8.617764,8.451754,7.417272,-6.152614,8.075046,-4.945216,6.716857,0.797892,-2.736807,1.267541,-4.148820,-9.045929,-2.622462,-7.194339,-6.206245,-4.303661,7.730081,5.732784,3.017394,-6.440381,7.505842,-1.993166,4.624821,-2.125473,5.720966,-5.120659,-4.126407,6.005720,8.148949,-8.711851,4.494764,-4.901067,-3.028150,7.608622,7.036439,-2.441702,-3.927877,2.162981,-6.462169,3.699798,1.502229,0.034111,-1.928210,9.654473,0.158967,-2.645787,-9.501632,3.944045,-1.757757,-1.793683,-4.499102,-2.160659,-7.291530,-9.694933,5.632448,-3.246301,2.513298,1.264097,2.138111,-0.483708,-4.394587,5.634692,8.159167,5.870695,6.328002,8.234502,-1.584042,-0.358940,1.956261,-9.355201,4.077281,-6.936172,-5.078020,-2.078204,-0.366327,-4.414081,0.484165,9.826112,-4.984894,-4.554984,9.961752,4.777566,-3.584372,-6.831276,-4.713266,-8.898426,2.703220,8.204507,-0.169443,5.845185,-2.145884,9.533515,7.948033,-2.687455,1.979817,8.357435,-6.482765,5.859890,9.405963,-4.897894,-1.867966,9.377466,4.715057,5.557312,-2.263735,-5.479034,5.582535,0.412988,4.801364,-2.095465,-5.144584,3.002501,0.070426,5.256321,-5.367126,-7.331471,6.429325,-7.045724,-9.260598,-5.861769,2.869864,0.745045,9.899319,1.244624,-6.203487,0.897360,-4.234100,3.137403,8.944419,-1.741261,8.178963,-2.243758,-3.259098,4.906198,1.747473,2.266675,3.747743,8.608116,8.012277,1.156359,-9.490028,2.557246,9.200454,-4.153587,9.779462,-1.276122,-1.358170,9.722718,0.029223,6.179471,7.329749,6.881814,-4.183650,1.353775,-6.578060,7.552281,2.638988,0.132690,-6.018169,-6.181744,-7.668511,-8.639073,6.597352,6.483905,-9.234869,6.966332,2.724255,-2.041842,2.289294,-5.795194,-2.004636,3.623688,-7.093487,-4.011729,-6.275361,-5.308739,0.776414,0.324293,2.092576,-4.694910,-2.984258,6.900893,-8.955351,6.977814,4.387356,6.887474,1.390851,4.232764,2.648727,-4.213987,-7.290255,-1.444759,8.905080,5.137004,-8.233109,5.470837,8.709810,1.813183,-9.238173,-8.110879,-6.112990,-8.707116,-6.660273,0.401610,8.771463,0.846526,-0.337839,-8.845010,-3.201609,-3.649990,0.495536,2.043711,-5.140511,-4.386721,8.354403,-5.067383,5.077765,5.576808,5.774625], dtype = "float64")#candidate|2282|(468,)|const|float64
call_2281 = func_29_call(relay.reshape(const_2282.astype('float64'), [9, 4, 13]))
call_2283 = func_29_call(relay.reshape(const_2282.astype('float64'), [9, 4, 13]))
func_1345_call = mod.get_global_var('func_1345')
func_1348_call = mutated_mod.get_global_var('func_1348')
var_2301 = relay.var("var_2301", dtype = "bool", shape = (1014,))#candidate|2301|(1014,)|var|bool
call_2300 = relay.TupleGetItem(func_1345_call(relay.reshape(var_2301.astype('bool'), [1014,]), relay.reshape(var_2301.astype('float32'), [6, 13, 13]), ), 4)
call_2302 = relay.TupleGetItem(func_1348_call(relay.reshape(var_2301.astype('bool'), [1014,]), relay.reshape(var_2301.astype('float32'), [6, 13, 13]), ), 4)
output = relay.Tuple([uop_2255,call_2269,var_2270,call_2281,const_2282,call_2300,var_2301,])
output2 = relay.Tuple([uop_2255,call_2271,var_2270,call_2283,const_2282,call_2302,var_2301,])
func_2307 = relay.Function([var_2248,var_2270,var_2301,], output)
mod['func_2307'] = func_2307
mod = relay.transform.InferType()(mod)
mutated_mod['func_2307'] = func_2307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2307_call = mutated_mod.get_global_var('func_2307')
var_2309 = relay.var("var_2309", dtype = "uint8", shape = (16, 11, 9))#candidate|2309|(16, 11, 9)|var|uint8
var_2310 = relay.var("var_2310", dtype = "float64", shape = (180,))#candidate|2310|(180,)|var|float64
var_2311 = relay.var("var_2311", dtype = "bool", shape = (1014,))#candidate|2311|(1014,)|var|bool
call_2308 = func_2307_call(var_2309,var_2310,var_2311,)
output = call_2308
func_2312 = relay.Function([var_2309,var_2310,var_2311,], output)
mutated_mod['func_2312'] = func_2312
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2874 = relay.const([[[6.155463,-2.383753,-3.275608,0.135419,5.213972,0.688816,-4.418598,6.545752,0.737282,-2.093181,1.559549,-4.319508,-5.095718],[1.204635,7.219767,9.632867,-3.708271,-8.919631,6.039086,7.197624,-8.245439,-3.240930,6.934706,6.644415,-0.406552,9.595448],[-2.168680,7.010268,6.075834,-0.965140,6.744456,7.178882,-2.473136,-4.713955,4.024807,-6.151643,-2.587949,-8.494153,-3.231840],[-9.812568,-4.368636,-9.913743,0.802361,5.454038,-1.378850,8.275271,4.125727,-0.479514,-4.788743,1.253704,-7.732547,3.661645],[-8.593707,-9.781724,-1.494426,1.024847,-3.392461,4.420776,4.974309,9.068092,9.783393,8.907303,9.600572,-6.311573,2.183887]],[[-6.019641,3.392466,-7.363523,7.938430,-3.138746,-8.894077,-4.264053,-5.981632,-1.653012,-6.371223,0.288921,8.388019,-0.899645],[-1.578692,-7.862250,7.377494,-2.268802,6.187022,-1.120323,9.139672,-9.276902,9.047880,3.941059,-4.718538,9.686073,7.010348],[-4.880208,-3.090773,5.091690,2.968143,-2.891258,-9.766074,8.335707,0.159989,7.245397,2.416645,-0.290253,-2.741394,-5.370737],[-8.103695,-3.114521,-7.775880,-0.947877,2.762614,-5.307393,9.580719,5.710232,2.117691,9.693472,0.895014,2.126189,-4.935149],[4.664828,8.349948,-8.748046,4.329788,2.189449,9.465936,-6.272571,-4.567720,-0.024913,0.125122,2.237247,-2.280804,-5.031718]],[[2.307569,-6.461505,7.903332,2.934479,6.572558,-7.994484,-5.224036,8.677950,1.864366,-9.861121,-6.938930,-5.452862,0.260623],[-6.340380,-6.135884,9.850048,-9.038766,-3.917233,1.736419,7.586916,4.909660,3.473220,3.774155,9.856441,5.562040,-3.469954],[-2.807229,3.963683,5.245982,-9.039821,-8.567079,8.714155,7.321958,1.212693,5.566914,-2.825767,-1.107217,-4.669568,-4.604080],[0.325263,-3.918051,2.322563,-3.980552,-4.669202,-6.433448,7.532300,-1.714555,6.410256,-2.930225,-5.230905,0.141145,-8.572460],[-3.263038,-1.403681,5.127453,-8.527982,8.635217,-8.969346,5.876479,2.647165,9.921924,-2.706008,-7.605611,-3.584124,-9.480954]],[[-3.012509,2.256907,-6.795325,-7.233945,-6.340365,-7.018204,9.787151,-5.565149,0.578434,-0.250407,8.331831,7.493276,7.681351],[8.730595,4.772759,-2.726185,-9.400617,-9.777389,0.623832,8.562829,-3.367141,1.935728,5.893493,-9.900556,7.250831,-9.117848],[-1.241000,-8.234045,9.231997,8.511415,-3.151412,-7.488575,4.040675,3.747697,7.688482,-4.002869,-3.412617,4.671126,3.633359],[-9.987640,-7.680019,2.420141,-6.644410,-0.625122,-9.039365,-1.465555,0.037460,7.050081,-8.086079,-4.742383,0.531290,2.456481],[-8.106617,0.734069,-5.014952,-1.264020,-8.330541,-4.537182,2.697661,-5.202067,-3.755004,-4.176638,-2.964021,1.895531,-3.599618]],[[-6.053782,-8.069907,8.657617,3.542827,9.075152,-4.542668,-8.347601,6.279344,-5.492896,-3.071845,-0.538172,9.982457,-0.847023],[-7.610273,-1.477672,6.168544,-1.017259,1.319956,-2.711781,4.873986,-5.303984,4.515601,-7.905547,9.393065,-6.425081,-5.983613],[9.345888,7.515286,3.905661,9.471954,3.420264,-5.920494,-6.347029,2.907149,-9.922193,-0.412846,7.874025,-1.217318,3.791657],[-1.488482,0.306155,-4.877966,-0.774253,-0.421535,-1.067329,-5.007612,1.187198,2.165334,-1.511534,-7.472475,1.737677,2.689639],[9.762972,9.065565,-0.077974,-6.422332,-1.715574,-7.661197,-6.775146,-0.774677,-7.752741,-8.520083,9.510576,5.900038,4.059169]],[[0.343307,4.296502,5.329762,-6.926120,0.873425,-9.940741,-1.385692,-9.478505,4.192336,6.661237,0.758709,-1.927784,4.131503],[-9.137674,1.554315,2.216755,-0.737787,-3.695162,8.329342,-4.985218,1.870824,-3.350014,0.174909,-6.848158,6.617200,-9.203589],[3.042185,2.090445,7.738667,7.940594,7.116121,2.741247,1.546307,2.407109,-4.123619,3.230856,-9.088681,9.294594,9.114260],[-7.507906,7.234844,5.921117,-8.197941,-8.813137,-2.524489,-1.441069,-5.605448,-2.015901,5.839002,-5.907083,5.975748,0.038894],[3.648374,-3.210020,-3.472796,0.788936,5.706509,-7.700735,7.630015,3.614988,7.129424,1.730150,2.391784,0.685281,5.396925]],[[-2.345080,-6.370304,-7.837453,-9.803088,-3.583935,-7.287690,4.454896,-9.034459,6.778818,-6.572970,-6.304742,-6.057485,2.553981],[5.627301,2.489102,-7.894568,7.744335,9.819261,-4.156055,-3.124154,0.182113,-7.829898,5.403826,-4.547473,5.410138,9.210100],[-5.984869,7.431846,-6.422211,9.161746,-2.628144,9.597899,-4.844553,7.209097,9.982416,3.735365,-3.650377,5.252737,-2.515452],[-5.211554,-7.416179,7.137641,-0.721733,-9.549654,4.125005,-5.222379,1.630270,-7.406515,-2.395550,-2.605804,4.896942,-4.988593],[6.430502,6.518025,-7.462438,8.344248,-6.351729,1.304218,-3.267197,0.994557,1.177896,2.365225,5.866806,-2.313758,4.619422]],[[7.351454,-6.851786,9.246586,3.347685,-3.474980,-2.406633,-1.909794,-5.551862,9.096756,1.465844,4.549982,-6.078876,9.183851],[-4.774197,-7.773140,-9.319796,-7.453313,0.759446,4.339183,9.225163,-0.264216,6.139831,-9.212683,7.264155,-3.646887,-2.205099],[7.574215,-0.155124,-7.236609,4.891515,1.669387,1.263272,-6.456696,3.054886,6.614127,1.909521,-5.475861,8.556310,9.107879],[3.022962,6.230218,9.915775,-9.886072,-0.970800,-0.635481,8.320910,6.555970,7.537211,-5.817979,7.552610,2.721170,1.541191],[-8.044988,-5.919820,9.003524,3.498284,1.654932,-9.320810,5.001102,9.805241,-5.816396,4.056271,8.996229,7.886051,3.136393]]], dtype = "float64")#candidate|2874|(8, 5, 13)|const|float64
const_2875 = relay.const([[[-3.361158,-9.389816,6.000252,-3.882622,-3.941845,-9.430867,-3.053103,-1.867747,9.337670,7.990282,-7.795970,7.515660,3.052922],[0.749382,-7.196133,-8.920880,-7.301305,5.822756,0.371399,-8.396189,0.792867,-2.841500,8.937276,3.656417,-7.505875,-5.785781],[4.676821,-7.462269,1.027546,1.763415,-2.479387,-4.870237,6.560176,6.980679,6.598293,-9.820632,-6.267657,-3.905029,6.299684],[-9.259997,-8.556708,7.755686,-4.009011,-0.093014,3.081852,8.821432,1.053037,-0.644616,0.340467,-0.849600,-7.095109,-8.861350],[5.543602,-8.856325,-6.775455,-9.286062,-5.117453,9.300065,1.014989,-7.523912,1.484893,-1.203200,8.033621,7.042244,-4.551088]],[[7.481813,6.039269,7.562644,-3.636164,6.622377,-5.080583,0.998517,8.346903,-1.325150,-8.632857,-9.487130,-8.341045,5.412535],[1.648880,4.433662,-5.310793,-0.744717,-7.344094,-7.941077,-1.554198,9.233783,3.712082,1.813363,1.995316,6.660312,-0.457627],[-1.848532,-8.019891,-7.468291,-7.452032,-1.937623,-4.764893,-3.552393,-3.291996,7.371936,0.241732,-7.076206,3.475803,1.305633],[3.913414,-7.445243,-1.910095,-3.054441,-3.348574,4.076197,-6.393172,8.444854,-7.671134,3.337328,-4.344348,3.208155,-7.170046],[-8.261905,4.591659,-0.212642,-9.694912,-3.361404,5.888281,-4.850645,2.618941,1.298993,7.795418,-9.973831,-6.087383,-4.259742]],[[-0.896325,-4.430803,3.318406,-2.591030,7.570901,0.769441,-2.217845,-5.337350,2.363465,5.552168,-2.138332,-1.908429,-4.101091],[-9.034464,0.769704,4.732462,-9.256512,-8.487978,1.256060,4.686403,9.679579,-8.750217,-3.686035,-6.494217,1.438342,0.768766],[-6.349370,7.921048,-5.235727,7.198142,9.857471,-2.075663,2.463826,1.852440,4.437670,2.764447,-2.119298,-5.466033,-2.500918],[-5.104744,3.628654,-8.803108,1.809156,-2.506662,9.385821,6.818152,-7.680740,-2.652572,-1.507605,-7.355736,-0.956625,3.760141],[-9.986427,-3.151230,-7.670533,-7.244662,-6.140117,5.800016,9.185790,5.752650,9.198618,2.429018,-1.447113,4.762240,2.309403]],[[3.941018,0.417165,-8.150336,-2.424128,0.864840,0.432020,-1.877142,-9.757614,-9.053196,2.693371,-2.328816,-4.896907,2.280755],[5.783662,-7.902564,-3.884074,1.858369,-5.713957,7.927307,-8.220529,6.545715,6.771621,4.929542,1.756642,8.141064,2.892500],[9.868625,1.383870,3.591394,-8.167132,0.442440,9.758121,-3.395720,2.851852,-4.199978,-5.146411,9.673029,-7.842534,4.539818],[-3.964346,-2.544990,-0.586637,-2.301156,-5.177270,1.614445,8.408933,-7.874716,2.113313,-1.375654,-9.711230,-2.605927,-3.836974],[-2.181911,-2.163173,-6.834978,-4.852958,-6.148406,-7.551068,-3.136546,-0.198779,0.142643,4.340390,-4.595575,6.674680,3.807881]],[[-1.861561,-7.041522,6.952323,7.330465,5.399130,1.693380,-5.809444,-5.737307,-1.169659,-5.585192,-1.623042,-3.708135,9.649256],[-8.205095,1.247836,-8.701989,6.206085,-7.635390,-4.498696,-2.258919,7.648678,1.944106,-8.240366,-2.035697,0.937022,0.096937],[9.670350,0.078691,4.884496,8.730386,6.702680,-6.695669,-0.257589,4.283302,-7.377474,-0.428187,0.728899,9.772142,-2.260669],[-6.217068,-3.687347,4.537168,5.532441,-5.215583,6.481728,5.424118,-1.315548,4.725889,-0.754590,4.609945,5.590252,-1.617459],[8.910964,-6.403424,-5.826223,0.710029,-5.062161,-0.998864,9.993062,-6.982404,-8.464153,1.920970,8.606607,9.567696,-9.740033]],[[-6.906081,9.502228,-3.290395,2.588303,-0.282381,-9.454271,-3.146389,-1.628068,-9.847735,-8.602820,-0.317933,1.038880,5.679218],[6.577617,-0.782436,8.627323,2.497559,-8.232797,8.604116,-7.936947,9.683281,-8.049455,1.899604,-1.192098,-8.435537,6.677882],[1.626238,6.373632,5.693111,1.482524,-3.390858,2.213784,9.398298,8.831954,6.997727,-4.329749,-8.910709,-4.394304,-2.577408],[-3.522530,9.085804,1.059843,-7.117283,9.172097,5.577421,4.949056,8.478104,6.534775,-4.140546,-6.181307,-4.667101,-0.254604],[0.235688,3.021890,7.857210,-1.818055,3.256089,2.341327,-7.057861,6.431990,-6.336722,5.509913,3.573508,-4.869065,-9.860709]],[[6.832396,-4.380258,6.185556,1.306116,1.499151,-8.305146,1.618592,7.261083,8.121571,-8.880528,-3.260598,-8.295393,-4.108959],[-1.751741,9.491329,5.346192,-3.878065,9.459744,7.410748,-7.454999,3.231828,2.788075,-1.627919,-0.314369,-4.136638,-1.852022],[8.239262,8.117594,8.929902,-3.103024,-8.724334,6.386063,0.003456,-1.658380,8.676691,2.539011,-0.865462,-9.255264,-6.580088],[-0.656636,9.151488,4.160593,5.117939,-2.115346,-4.872625,-7.760577,7.270490,8.674739,-8.036648,8.288758,-9.702665,-4.937622],[5.768283,7.016484,5.917619,0.680144,2.375938,2.695522,4.727032,6.512962,3.985998,-5.337014,2.010290,6.557221,0.222713]],[[-1.107055,-5.200751,-1.681124,7.456518,5.441485,-5.937861,3.240402,2.222743,-4.704756,-7.245181,-5.867578,4.476528,-5.104039],[9.137712,-0.320492,3.019481,-9.445213,-8.727899,0.374056,2.051115,-3.544788,2.211965,0.453583,6.910252,4.474234,6.276973],[4.158454,-5.756649,7.901684,2.544957,7.398797,-7.768851,-3.052669,-6.553145,-9.925188,-7.218251,6.932765,-7.593060,-2.618134],[8.054259,-0.079919,-0.767295,7.229539,2.848805,-4.556945,6.589245,3.585888,8.398445,-2.311904,-2.254770,2.976909,7.565184],[-0.505303,3.394931,0.081905,2.545577,3.892815,3.125947,-0.426551,-0.732075,-3.393498,-1.146026,9.521963,8.216199,-4.545934]]], dtype = "float64")#candidate|2875|(8, 5, 13)|const|float64
bop_2876 = relay.floor_mod(const_2874.astype('float64'), relay.reshape(const_2875.astype('float64'), relay.shape_of(const_2874))) # shape=(8, 5, 13)
uop_2890 = relay.atan(const_2874.astype('float64')) # shape=(8, 5, 13)
func_127_call = mod.get_global_var('func_127')
func_129_call = mutated_mod.get_global_var('func_129')
var_2894 = relay.var("var_2894", dtype = "float64", shape = (468,))#candidate|2894|(468,)|var|float64
call_2893 = relay.TupleGetItem(func_127_call(relay.reshape(var_2894.astype('float64'), [468,])), 1)
call_2895 = relay.TupleGetItem(func_129_call(relay.reshape(var_2894.astype('float64'), [468,])), 1)
output = relay.Tuple([bop_2876,uop_2890,call_2893,var_2894,])
output2 = relay.Tuple([bop_2876,uop_2890,call_2895,var_2894,])
func_2924 = relay.Function([var_2894,], output)
mod['func_2924'] = func_2924
mod = relay.transform.InferType()(mod)
mutated_mod['func_2924'] = func_2924
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2925 = relay.var("var_2925", dtype = "float64", shape = (468,))#candidate|2925|(468,)|var|float64
func_2924_call = mutated_mod.get_global_var('func_2924')
call_2926 = func_2924_call(var_2925)
output = call_2926
func_2927 = relay.Function([var_2925], output)
mutated_mod['func_2927'] = func_2927
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3238 = relay.const([[[-0.193268,0.035497],[5.358038,-5.555132],[-5.782516,9.003248],[-0.681957,8.935225],[6.342709,-0.442405],[-7.322709,-0.723742],[-5.095499,-5.399680],[-0.502316,-7.633595],[5.339773,4.425114]],[[8.448245,-0.345327],[-4.794418,-2.395940],[4.818834,5.816745],[-7.704019,-1.447524],[9.089037,-2.663990],[-5.765826,-7.574605],[-0.751753,-5.083703],[-0.988499,7.003712],[9.431203,-1.586001]],[[9.403033,-3.501245],[-1.752340,2.549353],[-5.472621,8.683856],[1.235031,3.028976],[1.231503,-2.373374],[-0.574803,4.178658],[-1.968313,-0.436118],[-9.648059,9.538901],[-2.700798,3.441193]],[[-1.876008,3.708852],[-0.606957,-6.914582],[-0.333058,-7.320373],[2.925398,-6.251619],[4.399469,-9.509771],[-5.251040,2.290971],[1.506904,-3.023113],[-2.823142,-3.889005],[1.695854,5.219138]],[[2.907147,7.838646],[1.707084,0.358571],[-2.049072,-0.858852],[7.332698,8.325217],[-5.048138,0.398445],[-2.550298,8.355373],[2.815146,6.237613],[0.589441,-4.176029],[-6.737264,1.329433]],[[2.996121,-6.414827],[-3.713003,2.025246],[7.695158,4.108437],[4.758549,-1.714925],[-3.539865,1.368410],[4.498627,-6.783367],[1.769226,1.451586],[-8.801276,-5.032484],[4.443024,7.407645]],[[6.952803,-6.816037],[-3.726743,-1.672213],[-2.429466,3.962735],[-4.458583,-4.223764],[0.622485,6.811301],[1.659986,-4.442360],[7.933481,-3.093623],[3.119631,-3.657686],[-5.977640,2.925500]],[[-5.049314,4.109083],[-2.941833,6.535170],[4.360574,5.501753],[6.434922,5.412975],[0.737717,-2.819144],[-7.726790,-4.469146],[9.627961,5.589190],[0.357280,-4.962372],[-9.563402,-6.782759]],[[-0.577655,-2.386063],[9.901756,-6.128148],[-5.854063,4.248218],[1.067177,-5.847894],[-5.222004,1.518408],[6.575239,-3.441161],[4.733590,-8.204099],[-1.658093,9.805590],[-6.753973,-5.254481]],[[3.206987,-3.827177],[-8.943693,6.920055],[-9.390743,-6.803846],[-8.795913,-4.366884],[-8.711890,-9.907186],[6.770021,9.196937],[1.460714,-2.133458],[-2.462673,1.238046],[4.069612,4.065994]],[[-7.988560,5.004724],[-3.654722,5.204291],[2.151329,-8.692162],[-7.901197,6.265637],[4.102512,1.101722],[6.925084,5.141661],[-7.437552,5.827414],[-8.548683,-5.720891],[-3.144394,1.176686]],[[3.533250,8.855944],[-7.535231,-3.421233],[8.831132,-5.399524],[-1.066356,2.705602],[3.746713,-5.338299],[-6.965421,6.750102],[-5.831086,6.178925],[3.237416,-3.135709],[9.566807,3.197455]],[[8.057547,2.384123],[-2.500786,-4.101038],[5.828315,-7.986881],[-4.605533,5.422120],[7.914354,0.080430],[-9.447256,-5.800647],[-2.229674,-1.058311],[-0.127412,3.234106],[8.800897,-0.603138]],[[1.408039,-6.265868],[7.003612,4.002608],[4.829634,-9.999909],[-7.475083,4.573760],[-6.309381,-0.092969],[-1.965042,-5.892161],[6.786865,-4.914826],[-8.944814,-4.686800],[0.359948,6.087943]]], dtype = "float32")#candidate|3238|(14, 9, 2)|const|float32
const_3239 = relay.const([[[-5.347910,8.025449],[2.491625,1.927716],[-5.796565,-8.962288],[-5.369875,0.459824],[-3.847397,-1.704232],[2.538009,9.291349],[-6.426445,-1.471542],[9.955438,9.120701],[5.205009,-3.281997]],[[-3.062331,9.766324],[1.352486,4.189932],[-0.788647,8.186107],[0.035384,0.468675],[-9.558422,-0.422877],[-7.544744,-3.508795],[1.409524,7.817035],[-9.216561,5.321282],[5.691145,0.921376]],[[1.857830,-6.748205],[2.524905,-5.567145],[-7.446730,6.843576],[-6.195869,0.069811],[7.287107,3.998713],[7.573032,2.530259],[-6.628288,-7.433681],[4.757093,6.037799],[6.254940,-9.221333]],[[9.228367,3.390487],[-9.105893,-5.754523],[0.197569,6.382079],[-3.206420,7.080866],[-3.891705,2.557676],[4.031175,-3.864578],[-1.170591,9.420475],[-8.712381,-5.524789],[-0.657086,6.522251]],[[8.970927,-6.463180],[4.171169,8.379391],[-6.626587,-7.412559],[2.978254,1.572803],[7.241381,9.840962],[5.439106,2.256803],[-5.094972,3.041161],[-8.992052,3.502682],[7.276317,-1.487003]],[[-4.344992,-2.888991],[-7.203438,6.529140],[-2.226178,-4.638032],[-6.367398,4.641240],[5.121682,0.156454],[9.100899,-6.068164],[0.681786,3.464694],[7.426442,-4.325584],[3.737577,-5.849429]],[[1.850584,7.815745],[1.274456,9.310469],[1.683808,0.918731],[-6.219990,-8.200792],[-2.760170,0.741319],[-2.890038,-4.131136],[-5.861038,9.834043],[4.933420,4.434448],[3.908577,-1.551449]],[[-8.453370,1.041549],[7.716972,-6.173271],[1.266598,0.525885],[-9.033060,-4.842693],[0.603057,-1.419357],[5.030738,7.347476],[-6.707617,7.268900],[2.639211,-1.361585],[5.532525,4.019568]],[[-7.147388,-4.988268],[-9.915923,6.366278],[-4.925414,8.365754],[-4.129752,6.216642],[-9.012319,-2.229079],[6.793112,-9.830763],[-0.646046,5.049962],[-5.670249,-2.132990],[-8.838425,5.677017]],[[-6.222887,5.890595],[-9.225716,-6.682066],[3.265309,-2.983436],[-8.360895,-1.248781],[-3.935816,-2.599747],[3.524811,-4.195883],[-1.092513,-7.120777],[-9.705487,6.092826],[8.115144,0.916016]],[[7.382486,-2.125739],[-0.715302,-8.083404],[-0.659757,-8.896874],[-2.088807,3.293261],[-5.900152,8.027840],[-0.242961,-1.704606],[4.198392,0.022305],[-5.818331,-1.735307],[-4.204338,-7.231927]],[[3.287136,0.864857],[3.365147,-9.423644],[-5.984442,9.128058],[-3.768483,4.132752],[9.970087,0.013823],[1.087502,1.507300],[3.683287,1.299336],[-4.857634,-6.264830],[8.432648,0.527730]],[[-8.787261,-1.763872],[9.605042,0.777408],[-7.011413,-4.483740],[-4.685218,0.595681],[-8.621476,-3.314698],[-5.342401,8.095580],[1.723219,3.999831],[4.617318,-6.821087],[-5.366842,-4.233141]],[[-0.879398,9.065888],[-3.348502,-4.440835],[7.783996,-0.201149],[-7.342610,-2.287015],[6.548343,-2.629947],[8.039104,9.764724],[-0.700437,-4.413065],[-6.909180,0.544552],[5.796840,7.668054]]], dtype = "float32")#candidate|3239|(14, 9, 2)|const|float32
bop_3240 = relay.less(const_3238.astype('bool'), relay.reshape(const_3239.astype('bool'), relay.shape_of(const_3238))) # shape=(14, 9, 2)
bop_3244 = relay.divide(const_3239.astype('float32'), relay.reshape(const_3238.astype('float32'), relay.shape_of(const_3239))) # shape=(14, 9, 2)
bop_3247 = relay.logical_xor(bop_3244.astype('uint16'), relay.reshape(bop_3240.astype('uint16'), relay.shape_of(bop_3244))) # shape=(14, 9, 2)
func_1947_call = mod.get_global_var('func_1947')
func_1949_call = mutated_mod.get_global_var('func_1949')
var_3254 = relay.var("var_3254", dtype = "float64", shape = (1176,))#candidate|3254|(1176,)|var|float64
call_3253 = relay.TupleGetItem(func_1947_call(relay.reshape(var_3254.astype('float64'), [14, 6, 14])), 0)
call_3255 = relay.TupleGetItem(func_1949_call(relay.reshape(var_3254.astype('float64'), [14, 6, 14])), 0)
output = relay.Tuple([bop_3247,call_3253,var_3254,])
output2 = relay.Tuple([bop_3247,call_3255,var_3254,])
func_3270 = relay.Function([var_3254,], output)
mod['func_3270'] = func_3270
mod = relay.transform.InferType()(mod)
var_3271 = relay.var("var_3271", dtype = "float64", shape = (1176,))#candidate|3271|(1176,)|var|float64
output = func_3270(var_3271)
func_3272 = relay.Function([var_3271], output)
mutated_mod['func_3272'] = func_3272
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3289 = relay.var("var_3289", dtype = "float32", shape = (2, 9, 12))#candidate|3289|(2, 9, 12)|var|float32
uop_3290 = relay.exp(var_3289.astype('float32')) # shape=(2, 9, 12)
bop_3295 = relay.left_shift(uop_3290.astype('uint8'), relay.reshape(var_3289.astype('uint8'), relay.shape_of(uop_3290))) # shape=(2, 9, 12)
output = bop_3295
output2 = bop_3295
func_3299 = relay.Function([var_3289,], output)
mod['func_3299'] = func_3299
mod = relay.transform.InferType()(mod)
var_3300 = relay.var("var_3300", dtype = "float32", shape = (2, 9, 12))#candidate|3300|(2, 9, 12)|var|float32
output = func_3299(var_3300)
func_3301 = relay.Function([var_3300], output)
mutated_mod['func_3301'] = func_3301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3413 = relay.var("var_3413", dtype = "float32", shape = (7, 15, 3))#candidate|3413|(7, 15, 3)|var|float32
uop_3414 = relay.acosh(var_3413.astype('float32')) # shape=(7, 15, 3)
output = relay.Tuple([uop_3414,])
output2 = relay.Tuple([uop_3414,])
func_3433 = relay.Function([var_3413,], output)
mod['func_3433'] = func_3433
mod = relay.transform.InferType()(mod)
var_3434 = relay.var("var_3434", dtype = "float32", shape = (7, 15, 3))#candidate|3434|(7, 15, 3)|var|float32
output = func_3433(var_3434)
func_3435 = relay.Function([var_3434], output)
mutated_mod['func_3435'] = func_3435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3497 = relay.var("var_3497", dtype = "float64", shape = ())#candidate|3497|()|var|float64
var_3498 = relay.var("var_3498", dtype = "float64", shape = (15, 7, 8))#candidate|3498|(15, 7, 8)|var|float64
bop_3499 = relay.divide(var_3497.astype('float64'), var_3498.astype('float64')) # shape=(15, 7, 8)
output = bop_3499
output2 = bop_3499
func_3503 = relay.Function([var_3497,var_3498,], output)
mod['func_3503'] = func_3503
mod = relay.transform.InferType()(mod)
var_3504 = relay.var("var_3504", dtype = "float64", shape = ())#candidate|3504|()|var|float64
var_3505 = relay.var("var_3505", dtype = "float64", shape = (15, 7, 8))#candidate|3505|(15, 7, 8)|var|float64
output = func_3503(var_3504,var_3505,)
func_3506 = relay.Function([var_3504,var_3505,], output)
mutated_mod['func_3506'] = func_3506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3709 = relay.var("var_3709", dtype = "float64", shape = (5, 16, 7))#candidate|3709|(5, 16, 7)|var|float64
uop_3710 = relay.log(var_3709.astype('float64')) # shape=(5, 16, 7)
uop_3712 = relay.tan(uop_3710.astype('float64')) # shape=(5, 16, 7)
bop_3736 = relay.logical_xor(uop_3712.astype('int64'), relay.reshape(var_3709.astype('int64'), relay.shape_of(uop_3712))) # shape=(5, 16, 7)
func_468_call = mod.get_global_var('func_468')
func_471_call = mutated_mod.get_global_var('func_471')
var_3740 = relay.var("var_3740", dtype = "float64", shape = (180,))#candidate|3740|(180,)|var|float64
call_3739 = relay.TupleGetItem(func_468_call(relay.reshape(var_3740.astype('float64'), [3, 10, 6]), relay.reshape(var_3740.astype('float64'), [3, 10, 6]), ), 0)
call_3741 = relay.TupleGetItem(func_471_call(relay.reshape(var_3740.astype('float64'), [3, 10, 6]), relay.reshape(var_3740.astype('float64'), [3, 10, 6]), ), 0)
func_2924_call = mod.get_global_var('func_2924')
func_2927_call = mutated_mod.get_global_var('func_2927')
var_3752 = relay.var("var_3752", dtype = "float64", shape = (468,))#candidate|3752|(468,)|var|float64
call_3751 = relay.TupleGetItem(func_2924_call(relay.reshape(var_3752.astype('float64'), [468,])), 2)
call_3753 = relay.TupleGetItem(func_2927_call(relay.reshape(var_3752.astype('float64'), [468,])), 2)
func_3270_call = mod.get_global_var('func_3270')
func_3272_call = mutated_mod.get_global_var('func_3272')
var_3763 = relay.var("var_3763", dtype = "float64", shape = (1176,))#candidate|3763|(1176,)|var|float64
call_3762 = relay.TupleGetItem(func_3270_call(relay.reshape(var_3763.astype('float64'), [1176,])), 0)
call_3764 = relay.TupleGetItem(func_3272_call(relay.reshape(var_3763.astype('float64'), [1176,])), 0)
func_29_call = mod.get_global_var('func_29')
func_32_call = mutated_mod.get_global_var('func_32')
call_3775 = func_29_call(relay.reshape(var_3752.astype('float64'), [9, 4, 13]))
call_3776 = func_29_call(relay.reshape(var_3752.astype('float64'), [9, 4, 13]))
output = relay.Tuple([bop_3736,call_3739,var_3740,call_3751,var_3752,call_3762,var_3763,call_3775,])
output2 = relay.Tuple([bop_3736,call_3741,var_3740,call_3753,var_3752,call_3764,var_3763,call_3776,])
func_3808 = relay.Function([var_3709,var_3740,var_3752,var_3763,], output)
mod['func_3808'] = func_3808
mod = relay.transform.InferType()(mod)
mutated_mod['func_3808'] = func_3808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3808_call = mutated_mod.get_global_var('func_3808')
var_3810 = relay.var("var_3810", dtype = "float64", shape = (5, 16, 7))#candidate|3810|(5, 16, 7)|var|float64
var_3811 = relay.var("var_3811", dtype = "float64", shape = (180,))#candidate|3811|(180,)|var|float64
var_3812 = relay.var("var_3812", dtype = "float64", shape = (468,))#candidate|3812|(468,)|var|float64
var_3813 = relay.var("var_3813", dtype = "float64", shape = (1176,))#candidate|3813|(1176,)|var|float64
call_3809 = func_3808_call(var_3810,var_3811,var_3812,var_3813,)
output = call_3809
func_3814 = relay.Function([var_3810,var_3811,var_3812,var_3813,], output)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3879 = relay.var("var_3879", dtype = "float32", shape = (9, 1, 3))#candidate|3879|(9, 1, 3)|var|float32
uop_3880 = relay.asinh(var_3879.astype('float32')) # shape=(9, 1, 3)
bop_3882 = relay.add(uop_3880.astype('float64'), relay.reshape(var_3879.astype('float64'), relay.shape_of(uop_3880))) # shape=(9, 1, 3)
func_3808_call = mod.get_global_var('func_3808')
func_3814_call = mutated_mod.get_global_var('func_3814')
const_3891 = relay.const([7.489205,8.907014,3.873640,0.012840,-6.051828,-2.888831,-1.070711,-4.229449,-7.369528,8.155494,-3.961423,1.637214,2.796312,-4.873378,-7.660140,-4.328052,-9.707271,-2.548437,2.033195,-1.995084,-0.872834,2.605334,-6.014445,7.826369,-7.064603,-7.462973,6.540134,-4.480194,-4.841479,-2.397115,1.011214,-9.775166,-9.846897,1.947331,-6.591307,-8.446413,-2.688988,3.020187,0.299488,-8.570372,6.431835,2.167534,-4.978115,1.335051,-5.948739,2.648154,-8.141162,7.307231,1.698381,3.953041,-1.422761,-0.251929,3.117234,1.412038,-5.692514,-5.251074,-1.155304,4.015234,1.299969,-8.638153,-0.834331,6.427173,6.756698,0.002091,0.792546,0.350066,-8.744355,4.661504,1.862635,9.920542,-8.594701,-1.496164,4.113234,5.282629,-8.050026,-8.401931,-0.105223,-1.071009,3.166990,-8.808034,-5.352022,-1.176601,7.891790,-4.318904,4.553353,2.648220,8.401873,-9.742310,4.269247,-3.866185,0.932406,-2.814941,-1.087190,-8.181297,-7.150949,7.070176,-0.104073,-4.725460,0.065877,-5.118743,-4.047341,-0.216093,6.657328,-0.789688,-1.462961,8.151431,5.956977,0.083984,-0.343983,5.131710,-0.360954,9.862834,2.705346,7.179713,-0.766485,6.500257,3.477422,-6.036607,-5.829900,6.723837,4.439502,6.829165,-5.593435,4.189213,-5.393477,3.422063,0.273854,9.783147,-2.977591,6.525722,-9.507535,8.761339,-3.908815,7.213074,-7.424069,8.797700,8.068211,4.262018,-7.656112,-3.872778,8.253015,3.177887,-1.299812,0.785642,8.780682,9.832780,4.588179,4.376701,-8.280929,4.401267,3.017728,0.587670,9.808552,-9.567613,1.788667,-6.661977,1.201413,5.338299,-7.025129,-9.392545,1.093396,5.071100,0.837367,-3.635537,8.036516,-3.668790,-4.394430,9.079728,-1.670857,8.450072,-3.908835,7.161092,-9.035656,7.823939,2.898315,-9.564196,4.744750,-5.407465,2.262678,3.784392,-7.170247,7.974206,3.772631,-2.099396,9.546760,3.363435,9.048687,9.435881,4.536264,-2.655456,-2.397728,6.904760,-7.538654,-5.733876,-7.077403,9.561654,-6.746911,6.038188,1.780917,2.922168,-1.175500,4.549833,4.893581,0.508357,5.166937,-5.421428,-6.408571,-9.823109,7.475000,-2.574919,-8.720824,-7.251557,3.502375,-4.418957,1.133249,9.146998,-7.727163,2.803481,5.932256,-7.618063,-9.615637,-9.318630,-9.232769,3.286863,-7.242303,9.804923,6.324859,2.155596,6.342751,-8.081692,3.329185,-0.614747,-3.546798,-2.727126,-2.492093,-6.802379,1.610160,-7.362045,0.398608,2.837114,1.562359,-5.077907,-5.880268,7.517003,1.431435,-7.742827,0.217666,-6.629230,-4.743934,6.976379,3.741441,8.910718,2.640577,-6.260957,6.063584,-3.825848,-8.435288,-1.670156,-8.350948,9.669298,1.680204,-5.436257,-6.104886,-4.736989,4.279361,-7.139059,6.708454,1.812871,9.060049,-6.104854,5.783545,1.359269,8.411122,-9.700556,-4.901844,-0.393304,8.738653,-1.896063,5.392528,-3.630807,7.375482,-7.185110,-7.710922,5.805672,7.944786,8.175482,-8.675705,5.716395,-4.601129,7.971453,0.526466,-0.023318,-4.269302,-3.791369,8.737875,4.546686,9.226998,0.269220,5.754954,5.829065,-6.415301,-8.045910,-8.737890,9.562748,2.334690,9.548528,-6.141037,-7.710827,-9.264573,-8.384817,6.658468,-3.773246,9.173944,1.861668,-7.826319,-2.983228,3.825620,5.586925,-8.679937,-4.848855,0.216108,-2.447017,6.404464,8.326790,4.144403,2.153685,9.865677,-3.089169,8.117133,2.415328,-9.227420,6.617504,-8.571514,1.255658,1.091860,4.442425,9.217133,-9.135659,-3.116011,3.864752,9.966476,-2.704503,-4.799867,-7.169703,-7.421542,-9.737224,7.965358,-2.358836,-9.315925,-0.452360,3.113260,6.467015,4.010959,9.642010,2.484104,3.410882,4.450990,2.159438,-4.492040,-4.809661,2.829250,-5.653166,-7.154492,7.042143,-2.303136,-7.711074,5.550988,4.478508,7.011593,-3.772006,6.411961,5.769086,6.047180,-2.229365,-8.295064,5.039332,7.032427,-9.369593,-2.573743,5.173513,4.996793,5.317042,1.345764,7.510325,3.861213,0.086228,-7.136963,-7.109683,5.498986,3.384817,9.689987,6.387775,-7.756011,-5.930354,0.561919,-1.819865,4.192824,9.476369,-1.156959,1.868677,-6.497036,-5.860507,2.051225,7.599944,6.178944,8.145372,8.587777,-7.349907,-1.554458,-3.702461,-8.875592,4.443374,-4.154695,-3.848019,0.877243,2.474177,-3.771859,-5.925014,-2.125851,-7.677045,9.547295,-9.260595,-9.544344,-7.672224,4.970393,2.735288,0.800650,3.354453,3.717565,-6.790066,1.381491,7.615014,9.858815,3.349772,6.916020,-8.091326,2.069637,4.254991,6.749640,2.539085,-9.800088,-5.065371,0.423732,-6.443203,6.589088,5.975955,-3.512904,-7.277772,0.163321,8.289487,0.721160,4.659276,-1.733640,-0.842797,-9.152329,-6.044476,-6.451845,4.341444,-9.693032,0.814967,-3.328988,-3.807979,5.689981,5.832701,-0.461048,3.438425,-0.718027,9.958952,5.691545,-1.937477,2.228394,-7.259863,3.791185,1.908189,8.285123,4.226360,5.415102,-9.725899,-5.370477,2.993631,-4.388204,-5.864856,2.847044,1.561653,2.535239,4.629755,-5.088763,0.556247,5.119201,7.565568,8.010883,-9.074000,-4.402419,7.156063,-6.487258,-0.611796,8.045788,7.935594,-3.128170,9.095597,-9.831861,-1.128916,-9.315296,-6.100722,-5.459207,6.904598,-8.851762,-1.851442,-1.373621,3.308270,2.543910,-7.593087,-4.156005,8.240351,-6.905980,0.813899,5.494828,-9.350790,6.817222,9.113997,-5.900644,7.913172,8.768998,-0.026642,0.452729,-6.290061,0.871883,6.372714,3.853584,-8.653581,7.786317,-7.448774,0.936361,-3.162035,-9.350542,-5.662754,-5.484968,6.126028,7.479167,-2.321873,-1.405696,2.200181,3.753308,1.078288,-8.160410,-5.081538,1.564278,-4.929618,6.364700,9.365092,6.493363,5.498184,6.553141,5.291693,-8.435912,9.567063,-7.743950,-3.988567,7.281427,-5.741124], dtype = "float64")#candidate|3891|(560,)|const|float64
const_3892 = relay.const([-3.809579,4.253364,6.095111,7.580303,-4.618192,-2.306130,5.505266,-6.002490,0.815611,-4.199927,0.479067,0.969329,7.124298,-7.244733,2.649965,7.656787,2.363609,0.449825,-3.243011,7.446433,9.211955,-5.961307,9.837376,-6.670174,6.724602,2.090512,5.814813,4.465554,-8.721554,4.993780,-5.329559,5.676102,0.541130,-8.005033,1.392401,-3.382634,2.947562,-7.048660,-7.870693,-3.530009,1.844169,-6.421784,-8.199275,4.640167,7.284723,-2.370986,-8.632027,6.601154,9.673957,8.832139,-1.437898,8.368360,-9.046761,-9.445062,9.368029,-6.133885,-7.107779,6.259915,5.886885,-7.972318,-5.718975,-0.880081,-7.631317,-6.438399,8.443436,0.659683,-5.553931,1.828290,-8.388929,8.127785,-2.764061,-8.093612,-6.582131,-0.813650,9.747413,-8.317693,5.198528,-9.476280,-2.378573,8.817598,-2.275947,5.032988,-2.996439,6.518399,1.481780,-6.541450,3.220373,-5.846546,-9.508150,1.023888,2.497281,1.085400,-3.393485,9.525692,6.732999,-7.784507,3.059905,-5.172051,-8.999124,-5.471473,-0.265118,-5.130323,8.982073,4.713436,5.581314,3.298685,-6.054418,3.465423,-2.397945,4.235988,-7.267880,1.377388,-4.760839,4.863942,-4.536475,-2.358353,-6.456088,-1.905237,9.095696,3.315323,-8.224488,-0.558839,-6.000299,6.278819,-5.661608,-1.026231,-2.077005,-7.555898,5.986023,7.554473,8.105908,-7.127782,-4.246416,3.150281,-5.992056,-4.838129,-9.835395,4.809199,9.670512,3.468490,9.210143,-2.073765,-5.211014,-3.093719,-7.957140,4.909630,3.418738,6.223916,-0.163869,-9.082388,2.596419,4.605205,2.957447,-2.883145,7.934240,-2.581843,6.482633,-0.930303,7.133405,0.234156,-7.352364,9.381275,-5.313233,-9.069381,5.004978,9.025305,5.063655,-1.484273,9.060393,2.364285,0.590108,-5.033905,-7.458783,-2.234502,4.992960,5.115410,-1.420168,-1.439561,7.080586,5.729561], dtype = "float64")#candidate|3892|(180,)|const|float64
const_3893 = relay.const([[0.200094,4.371904,3.133665,-5.826220,-5.689389,-9.548534,-7.891564,-7.574900,1.088983,-2.147376,-1.538561,-5.815841,-5.064720,-6.761284,2.689874,-1.055925,1.880800,1.287104,-7.295683,-0.360921,4.090605,7.092055,-8.825771,9.472282,-4.632860,7.380989,-0.869935,-7.251450,2.577810,7.750000,-7.312946,7.569412,7.432650,-1.439319,-8.666723,-3.722199,9.713241,1.366065,-5.135822,8.778257,-7.723007,7.654780,5.032018,-8.478260,-0.215567,4.147252,9.396932,-9.654690,5.468196,-1.311736,6.257010,5.751315,-9.288929,0.546380,-1.763391,1.095919,9.244856,4.422400,-5.360864,-2.527192,5.989927,0.674078,-9.885333,5.420726,-6.465603,-3.271619,7.857888,-5.617556,-4.542068,-2.250085,-7.529972,-3.127933,-2.277078,-9.486851,7.111300,2.309211,-0.441746,8.092239],[8.256646,1.367219,-7.833239,7.193191,1.427734,6.142157,9.827926,-7.805327,9.281021,-5.188919,-8.205469,-1.613252,8.357616,-0.541066,-3.506478,-1.247449,5.413530,4.862380,5.614053,2.091493,-1.684921,1.713165,-9.265402,1.682917,-0.690224,7.453327,8.125428,-7.156918,1.233841,-6.108722,-9.855748,0.214939,-8.493266,1.394880,-6.765681,6.241891,0.835805,-2.300631,-6.796522,9.961382,8.835533,-0.114757,-5.413868,0.361254,1.913760,4.305864,5.612598,8.521602,8.725397,6.040508,7.485225,-0.790138,7.517668,-6.189557,-6.408860,-1.359623,-9.713737,-3.996134,1.294710,4.961371,-9.192806,-9.644299,8.653636,6.061583,-0.050070,-3.832553,9.501428,-5.265381,-8.422432,1.541949,-0.521111,-4.161784,-3.946895,2.145401,0.748627,-7.548074,9.008077,4.460689],[7.474240,5.387338,6.021986,9.555823,-5.521368,-9.026447,7.055680,-8.471018,1.126296,-7.087526,9.609935,-6.194599,-5.767943,-3.315235,3.975597,4.754301,0.909781,5.230007,-6.521937,5.560453,-7.022522,5.669357,9.405333,-9.961937,0.244300,-4.991407,-3.885126,2.473055,-7.521299,9.738141,4.076680,-9.862446,9.148491,3.963383,-4.540404,1.394648,-2.606619,-0.186346,-1.924663,1.665117,-6.981208,-3.367183,-1.337165,8.611866,-7.254136,-7.419019,5.606462,-0.432638,-2.499420,7.080181,-9.272356,-9.983242,9.335150,6.164937,0.496113,1.986487,-9.900476,-9.995402,1.402664,6.087929,-9.583641,1.624854,-1.402048,0.654121,-4.378026,-5.577728,7.198023,4.447113,9.984782,-7.323652,2.073960,-4.198652,9.750881,-8.782005,1.244127,-5.899600,-5.050393,5.354279],[1.804579,8.747440,8.888690,9.655627,-8.907759,-6.497281,4.213578,-2.988907,-8.610378,-6.183371,-5.370549,9.087402,1.305935,4.513608,7.879836,-0.860935,4.375274,-2.668033,5.402346,4.426943,0.835858,-5.231130,-9.346819,2.286117,0.364585,4.428833,7.235612,4.593545,-8.058429,-7.208085,-1.210589,2.809506,-8.276609,-4.863399,3.672650,-6.725242,7.250817,1.468909,7.450514,1.020912,-0.344878,-0.696343,1.569906,-0.927584,2.668749,7.568887,-6.580079,3.283896,6.222829,-2.966983,-0.024272,5.107943,6.329646,4.502564,8.846263,-1.245962,7.137646,7.581635,-0.584863,1.597487,-5.589039,5.446692,5.327463,-1.485973,7.063832,3.660112,8.864669,5.544380,8.906592,7.707167,3.364560,-6.192451,0.558044,4.152398,-1.796094,2.217198,-3.558414,7.809701],[8.575276,-8.941069,-8.479290,-4.030777,-1.431358,6.892530,2.812259,-7.100154,-4.182293,6.394141,5.876508,9.358911,9.010094,-2.713894,-0.515160,8.188740,7.948694,-1.896062,4.735316,5.475442,-3.556926,9.209094,-6.057240,7.787931,7.712731,-2.966241,6.575939,-1.873256,-8.762810,-3.552077,-1.274999,-0.078451,5.687060,1.257571,-4.178254,-6.456370,5.527620,-5.425200,-1.342064,-2.331069,-2.989626,-1.353078,1.160872,8.186201,8.288308,-3.752666,1.958506,-4.142168,4.365022,-1.821812,-1.635513,-6.201557,-9.816209,4.474036,-6.893812,-1.179555,-0.773091,8.613757,9.744402,9.376380,-7.356539,-8.055531,5.454272,8.355167,0.665783,-5.039529,-4.817383,6.541358,4.159786,2.592068,0.391053,-0.236934,-5.281886,8.631910,-1.611320,0.622971,-6.501394,7.916534],[-9.400887,-7.042990,-4.825348,7.459572,8.913859,1.938127,-6.943131,9.775954,0.420833,8.210008,0.328698,4.437361,-1.499806,-8.056545,1.304498,-8.587726,-0.431974,4.467022,8.240275,-0.211047,3.071443,1.020945,-1.463267,8.345218,-6.794376,-7.225078,0.982367,-5.002482,-5.174684,-2.606487,-8.191293,7.735867,5.610185,9.930369,6.955038,-0.964196,1.221680,-5.988695,-4.791118,5.928778,4.680629,-7.386179,-6.726650,-7.938893,5.505839,-5.790304,0.846298,3.601536,-5.417624,6.798998,-7.769504,-2.846077,8.191421,9.364253,9.429698,-3.067517,-3.045457,7.512495,8.344764,6.120671,5.043366,-7.801843,3.690181,9.224541,-2.479775,-9.331459,-5.992280,5.831665,0.550266,4.598655,5.100472,8.530676,-6.858959,-8.652638,-1.862323,2.356032,4.717420,-3.865389]], dtype = "float64")#candidate|3893|(6, 78)|const|float64
const_3894 = relay.const([-4.201200,-5.670711,-0.617368,-1.566709,-9.647846,-8.598803,-4.799841,-1.597513,-3.784537,-3.577921,-5.368299,-0.052531,-3.021485,8.240681,8.463701,1.397285,-8.987128,-3.250928,4.079925,-4.313866,9.320481,-6.883390,5.457651,-7.501594,8.640527,-9.859624,-1.079001,-8.474771,-3.340888,-3.473057,0.496507,3.222925,1.694078,-8.395926,0.067689,2.513430,3.829875,-8.843680,-6.752728,8.753582,4.313310,3.988225,-6.201554,-4.769524,1.857493,-7.305558,3.234013,-6.413333,-9.157746,2.054498,-2.770025,-1.594640,-1.681803,-7.077562,5.073718,9.071813,1.422584,2.256373,-4.713307,-9.067668,-2.798566,-4.481190,1.239888,1.159830,-1.971410,5.100569,1.014014,-7.314447,-8.106652,-0.177036,-8.630839,-4.843477,-5.216419,-8.730922,-5.166077,1.587206,2.483786,-0.307912,-8.629394,-0.350479,-1.580628,7.080261,5.602153,-6.419374,-9.769022,-1.346866,-2.072013,1.209045,-9.964198,8.600787,-3.230744,0.332920,-2.851450,-2.586840,2.635366,2.289860,-2.966126,5.170073,4.676959,5.756398,-4.845625,-8.381243,7.891485,-0.948205,2.679059,-0.195619,-1.472179,-4.089887,2.046290,3.444411,6.541455,-7.881370,-6.446527,-2.108459,4.817904,3.030982,8.163505,-2.029161,7.861751,-3.110785,-8.535704,3.074554,-5.115177,-5.580850,-7.768239,0.153797,-0.366198,-9.372135,1.978859,-8.781200,-0.821329,6.278986,-8.262684,-0.143374,-5.935717,-7.889483,3.944700,0.817476,6.749658,6.885366,4.836154,-8.856232,9.099140,-0.177927,7.074769,9.028750,5.131562,8.612003,9.637067,4.902023,-0.622656,-8.968366,2.424435,0.171220,3.328827,6.333925,5.206028,6.103811,-0.622715,-8.365869,-5.357394,1.579253,-1.363403,2.151527,8.652774,5.735132,9.046134,0.910822,5.689951,9.280679,-8.364150,6.558537,-9.260798,-9.332627,0.347798,-5.057044,-5.894399,0.170009,-3.351650,-8.776167,9.510037,3.902915,-3.861807,-9.629768,-1.738621,-0.364635,-6.031235,-4.707096,-2.578037,3.892782,7.946805,-5.234821,6.289245,-7.315803,-3.733658,1.337509,-8.555757,-8.494737,-8.082641,-4.857859,6.377246,7.148206,2.936569,-4.969658,-3.399501,6.201144,-9.152582,6.344625,5.141597,7.128378,9.073857,7.670525,-0.444254,-6.069884,-0.911062,5.395811,4.970583,9.583760,-4.493587,3.317333,5.458543,9.211031,-5.128330,-9.814758,-8.816598,2.951934,-3.827381,-9.574649,3.644904,6.243951,9.949879,0.663150,6.512883,3.476580,-7.715564,-8.633739,4.873380,3.880185,2.798552,2.587055,-3.872447,6.396945,-2.645368,0.077797,-2.746602,0.632121,0.694999,-8.268630,-3.330828,-9.480916,-1.944172,-9.706193,-6.478879,3.983059,1.235916,-6.301299,-8.176052,7.980301,5.575399,-9.284526,5.570369,9.826817,-1.479912,-9.001654,-8.068622,1.239040,2.177209,-0.097704,-4.436439,2.176771,1.970238,2.771004,5.039849,-9.931662,5.877426,-1.721280,-9.407673,5.492778,-8.936304,7.265011,-4.737652,2.893061,4.869123,-8.173746,-5.890966,6.023569,8.690443,5.337329,7.643553,5.711619,-2.288702,-2.113585,3.924282,5.336540,4.386985,-3.224272,8.767570,1.893479,-1.356840,-4.761702,-8.765584,-6.964487,-6.079100,-1.978129,9.720345,-1.311019,-2.916011,-6.248503,-8.872804,7.330506,0.045255,-1.892220,7.774511,6.239365,1.950353,-5.655894,5.599849,7.133632,-2.727043,-4.810423,9.462888,1.431480,9.288324,4.015953,6.132815,9.182437,9.945499,-3.211751,1.627164,-5.929229,0.081980,-9.390617,9.345451,2.642066,-6.290608,8.623365,-1.754111,5.695033,-3.198560,-2.207094,8.205752,-1.689783,0.999252,7.644335,-8.347220,0.285160,9.578733,1.081308,4.421353,-6.673411,-3.308686,4.159315,5.588255,-4.119711,6.699105,1.010265,-8.289211,8.374853,-3.679499,-9.989589,-4.384258,0.310979,-4.014793,-5.628490,0.809570,8.161046,-2.398852,-7.291071,9.115640,-3.733814,5.516266,9.679249,2.960159,0.273050,0.298700,1.606536,2.961199,9.404504,1.676781,3.311616,2.458403,-0.355074,4.701612,8.671825,5.984973,-3.581506,7.346863,-3.793143,-3.791361,9.342437,1.739235,-5.606779,0.485573,-7.108402,5.530783,6.076926,-5.208137,8.989067,-2.142891,-9.052602,-5.820402,6.957778,-4.678309,-2.421303,2.746859,9.302621,-0.466571,-1.613950,1.660945,-2.829586,-7.513479,0.080118,1.705236,3.231573,0.563246,9.980673,-8.181360,-8.847402,-8.952773,7.288619,-9.837476,3.717394,-2.607646,-8.540079,-3.344595,7.197747,-8.036918,-1.397121,3.145579,7.885817,9.184518,-2.560162,7.022402,6.277196,0.763453,-7.311332,4.656423,4.182392,2.079236,7.383638,-0.613377,-2.620700,-1.864044,6.233033,-6.126604,-1.848119,4.997699,8.713562,4.165876,3.658918,-7.888448,-4.739331,1.691571,1.048155,0.081909,-4.731186,2.635569,-2.515690,7.528798,6.193693,9.740534,-7.486661,-5.751453,4.460260,-5.971709,5.348133,-1.782218,-4.117810,6.248435,-8.578987,-2.574468,-7.950688,-1.933004,6.278273,-9.391335,2.704580,1.253267,2.301746,-0.680757,1.854345,6.435579,5.137816,9.122764,6.028062,2.688729,3.034118,-7.677529,-4.978566,6.885516,8.541133,-4.766760,3.791146,-1.754809,-9.002464,6.973338,2.241092,-8.327556,1.181075,-7.345303,-2.878324,-2.870840,8.390321,4.651812,0.582392,-0.009050,8.161764,-6.981118,-0.751963,1.227257,0.112279,-1.821576,4.985923,0.016546,-8.329256,0.952313,5.099812,3.250444,-9.610538,-7.112735,8.705345,-2.246538,-2.056507,8.030998,1.218050,9.761673,6.540037,3.958724,-5.523202,9.310296,-2.868399,8.687211,4.868936,5.124901,6.442924,3.525308,-7.592095,0.422316,-3.484162,5.580885,1.777285,-8.926008,-4.474191,2.679858,-1.658954,-8.566069,1.731411,5.547461,-5.249446,4.271441,-5.276602,-7.424204,-7.605548,9.044777,-9.413728,8.650279,1.902770,-3.756651,3.898839,-7.521641,0.906948,3.112185,-6.932289,2.543389,3.492736,7.846406,2.975403,-5.134520,8.876583,9.040268,-6.126882,-8.065071,-5.909710,1.546360,-6.967518,-2.062098,-0.653773,8.614109,-0.149079,8.510246,6.420634,8.078685,-4.140164,-6.071148,-5.496789,9.988018,-8.165748,-0.800819,2.208307,4.909833,-2.298217,6.507263,2.990803,4.353621,6.767611,2.765899,3.362174,8.918155,-2.978894,-8.727726,3.189278,6.937502,8.127646,9.306675,2.236225,-6.207072,-8.335749,5.274887,-7.133189,6.375991,8.270672,-6.387305,5.139883,9.746733,-8.455032,-9.531663,0.568521,0.268047,-4.652265,7.327113,7.180545,2.720128,0.853669,3.852406,6.761883,2.841403,2.419755,-8.758448,-7.212704,-4.963469,0.909953,-9.945974,-9.751529,4.915638,-5.656650,4.474438,-7.368861,6.127664,4.756209,-2.174488,1.229097,4.168146,3.457152,-7.791769,3.056830,-1.738853,5.266712,-4.677165,6.592929,-7.366621,-6.982556,3.556473,-3.299072,6.404393,-7.288122,0.943833,8.223777,-7.580689,-0.126184,-9.737812,-3.982850,-9.673234,-9.847074,2.285915,-7.701878,4.173315,1.935483,6.110016,-8.699797,2.171630,-3.293735,-5.059045,-2.084784,0.094403,8.850012,-1.657702,-7.599254,-8.305058,2.071571,-4.890674,3.214350,7.754656,9.385724,4.846273,5.571124,-3.652482,2.132786,0.034691,8.468920,-7.243624,0.047687,-4.562125,0.144242,-6.692600,6.734227,-6.081283,-6.766201,9.230304,-2.892107,6.740706,-7.780889,-1.527604,4.701618,1.605485,-2.021933,4.490191,-9.244284,3.362955,-8.002011,5.962029,9.228798,7.409653,9.019110,5.996919,8.083011,0.094009,-4.859585,6.077268,3.948987,-4.318974,-7.037070,6.175271,-8.594859,-9.008740,-2.084733,-3.874970,8.721325,-1.874720,-9.217471,-2.972355,-4.314409,9.036668,3.478090,-7.482460,6.401736,-9.394098,8.458929,1.089448,1.236574,-5.584429,7.731337,8.777329,-5.956310,6.781498,4.609813,-6.110237,8.743448,-4.926628,-6.185553,2.798545,9.297143,0.690353,-1.840188,-7.903215,-8.975790,6.222002,9.949318,-6.349583,-3.385419,0.225004,-5.849368,-4.359999,6.101839,-4.618181,3.952333,-3.786625,-7.318070,7.248422,-4.609585,-9.139938,2.184816,-2.587323,-5.769191,-9.734057,-4.349214,-5.114088,-5.637669,-0.959529,4.165249,5.585349,-8.261623,4.696483,-9.668075,7.747544,7.595879,0.312788,-1.967808,1.887350,4.431726,4.443292,3.114040,-9.350885,-7.159567,-3.141999,3.854197,8.812409,4.201465,-6.689111,7.564629,-0.907326,7.253802,5.072048,2.776415,-8.801946,4.565454,-7.088733,2.832227,-8.981244,5.173015,1.287585,-0.290620,-4.839577,-7.097165,1.190604,3.539612,-7.267367,-4.586302,-1.713770,-3.588793,-6.293080,-0.055471,7.069999,2.117159,-6.948926,-3.223517,8.853840,-4.191569,-6.342163,3.782581,-7.884910,3.607447,8.939853,0.961349,6.858008,8.487860,2.514465,-1.149583,4.557197,-0.304206,-3.909730,-3.417140,9.662824,6.527082,3.999535,-1.691491,7.684247,-5.005095,9.616757,-9.422458,2.177108,-4.521321,-3.726690,1.492406,-8.809412,4.628353,-9.489520,-9.466827,-7.497616,7.561575,-0.568447,7.453151,3.126666,8.746327,8.798462,0.870439,9.383595,8.973563,-4.548847,1.938480,-3.463647,3.157411,-0.058004,1.646896,-1.921499,-3.112179,-7.727998,-4.636604,1.588476,-9.230789,-5.094994,-2.951465,9.202028,6.613190,-8.721676,-9.903235,0.622214,-2.108021,3.611005,-5.585767,-3.643954,1.938091,-9.575454,2.087575,2.526087,7.945592,5.096344,5.641685,2.826784,7.244430,0.812325,5.745543,7.514444,6.217747,9.103929,-8.240716,-5.209841,-9.170310,-7.902964,9.899982,2.286977,1.914296,-6.639713,5.579445,6.112629,2.975085,-5.667760,7.487190,-1.427884,-2.570688,-1.383979,-0.302489,-7.079104,5.988474,-9.588963,-7.817133,6.093799,-2.851600,-8.387564,-8.272942,-3.395362,2.136557,-5.390016,1.918437,4.852609,-1.235395,-2.172830,-1.245522,7.405871,7.249253,-7.438340,3.094936,0.460547,4.368624,4.969170,0.256213,-0.075130,-3.140896,0.764790,8.142745,6.191058,-6.160427,-9.566334,4.705505,1.236929,9.265091,-7.107991,5.627894,3.859864,-0.457476,-4.760650,-8.698473,-7.899117,9.606953,-4.871027,-8.515649,-4.170896,-8.913724,1.452806,-7.468690,-2.119734,1.330609,-6.264369,0.397528,5.382454,-9.208871,3.689539,-5.327001,6.129473,-3.914116,1.570472,-3.844790,1.735885,-0.920725,-8.975980,1.936824,6.460448,0.345465,-0.166196,1.245803,-4.694985,3.699236,-1.986640,8.289150,-1.280320,-4.697535,-8.924464,3.037974,8.476563,3.254630,9.490320,-9.235191,8.462535,-6.324622,-3.512475,4.338082,-2.471591,4.633642,5.830354,-9.657915,-7.622782,3.201427,5.733779,-9.307514,-8.539830,-7.716814,3.779331,-4.194631,6.591476,-0.802997,-8.102007,-1.183437,-4.698159,-5.127899,8.448999,1.764972,8.427456,-0.672885,-6.964139,0.613839,-7.036455,-9.982454,-6.027463,-8.575234,7.979682,-3.228037,4.411148,-2.740687,-4.495963,5.864825,-4.934502,9.145334,6.032289,-4.855477,-2.404802,-9.712752,-6.788200,-3.589960,-9.702711,-0.560210,7.627584,2.062194,4.361009,1.594620,-9.879896,3.781671,3.071914,-0.400050,6.705521,-7.040111,-1.603867,-4.517274,0.241798,-9.800054,-7.570146,-7.902235,8.251284,-4.719173,8.197534,-4.811956,-7.290956,-1.991480,-9.410740,-6.165873,-6.448515,5.613627,1.184517,1.892940,7.742568,-0.682407,-7.999549,4.494037,3.257246,-0.672598,1.017304,-3.287662,9.631469,-3.246383,-9.704808,1.105808,0.080834,4.720353,-9.770385,-2.056601,-3.251067,6.666347,1.551688,-7.343985,-2.982003,6.500808,8.726805,5.360770,9.321325,-1.373984,-6.797387,-6.840987,2.897755,5.654077,-9.403411,6.342739,-6.099943,0.686835,4.326604,-0.616146,-3.806333,-0.480606,-3.460829,-6.436486,9.656908,0.246598,-0.875547,4.995840,4.957848,-5.252593,-0.082340,6.966293,-1.214974,-1.679589,-4.010081,-5.604422,9.616609,0.404242,-5.741760,7.119055,-9.155083,-0.156098,-7.498309,-0.553777,-3.740660,6.923880,-1.447722,5.274320,2.565586,4.151568,6.712496,-8.547863,-7.431513,-3.397554,-6.616228,-1.024400,-1.890937,9.105134,-0.254890,-0.689599,-1.057276,-4.957330,-1.577324,-4.664784,7.081054,-7.387087,2.227401,7.320518,-4.748029,-3.695298,3.667078,8.086059,6.698034,-9.773164,1.071910,-6.324304,-1.410330,-4.312480,7.899272,-4.869913,-5.468660,6.687945,-8.707774,3.900986], dtype = "float64")#candidate|3894|(1176,)|const|float64
call_3890 = relay.TupleGetItem(func_3808_call(relay.reshape(const_3891.astype('float64'), [5, 16, 7]), relay.reshape(const_3892.astype('float64'), [180,]), relay.reshape(const_3893.astype('float64'), [468,]), relay.reshape(const_3894.astype('float64'), [1176,]), ), 0)
call_3895 = relay.TupleGetItem(func_3814_call(relay.reshape(const_3891.astype('float64'), [5, 16, 7]), relay.reshape(const_3892.astype('float64'), [180,]), relay.reshape(const_3893.astype('float64'), [468,]), relay.reshape(const_3894.astype('float64'), [1176,]), ), 0)
func_468_call = mod.get_global_var('func_468')
func_471_call = mutated_mod.get_global_var('func_471')
call_3903 = relay.TupleGetItem(func_468_call(relay.reshape(const_3892.astype('float64'), [3, 10, 6]), relay.reshape(const_3892.astype('float64'), [3, 10, 6]), ), 0)
call_3904 = relay.TupleGetItem(func_471_call(relay.reshape(const_3892.astype('float64'), [3, 10, 6]), relay.reshape(const_3892.astype('float64'), [3, 10, 6]), ), 0)
func_1094_call = mod.get_global_var('func_1094')
func_1097_call = mutated_mod.get_global_var('func_1097')
const_3918 = relay.const([4.254937,3.478981,7.219738,6.313677,3.709650,-1.004734,-1.928824,-6.085823,3.045879,7.212266,-5.033604,4.542626,1.177508,0.667132,5.979334,-6.303070,-7.128844,-0.109449,-5.420254,3.167891,1.332913,-8.844277,4.918362,-4.869679,-5.079175,8.162526,-5.170610,7.493211,-3.079843,-1.606491,7.967356,5.485438,5.182698,-7.962300,3.748013,0.576847,2.530247,-6.147640,3.701957,3.669644,-5.000190,-2.968814,-1.725518,-1.097020,-4.311357,-1.755819,0.292735,5.840271,-5.121604,-4.724166,0.301007,-7.637148,6.150409,7.451233,3.051291,-5.278455,7.535979,-0.958705,3.620310,-0.097009,9.385116,9.326763,-4.445046,3.782772,-2.221006,-1.086589,-1.966655,-4.253981,7.212514,-7.240808], dtype = "float32")#candidate|3918|(70,)|const|float32
call_3917 = relay.TupleGetItem(func_1094_call(relay.reshape(const_3918.astype('float32'), [10, 7, 1])), 0)
call_3919 = relay.TupleGetItem(func_1097_call(relay.reshape(const_3918.astype('float32'), [10, 7, 1])), 0)
func_3299_call = mod.get_global_var('func_3299')
func_3301_call = mutated_mod.get_global_var('func_3301')
const_3921 = relay.const([2.253802,-4.958504,6.733053,-1.226964,-3.093304,-2.926579,1.334653,-3.732169,1.037335,-5.909018,-8.886864,3.129248,1.760654,-2.036438,-0.914686,3.245026,1.862836,2.506469,-6.465757,5.522784,7.370833,0.727186,-9.919260,-4.043904,0.776093,3.434088,0.432637,1.377514,-3.978042,2.698345,-3.077226,7.823644,-7.654953,-7.184960,-2.379834,6.915269,-9.420685,-9.050544,-4.638825,-8.738007,5.633440,3.878796,8.022974,-0.276536,-8.701535,-7.824428,-9.583181,2.079923,-2.892456,4.916498,8.964575,3.719582,-6.128260,-1.297032,-7.443091,-9.258312,-6.021644,2.238570,-0.424252,-6.306639,1.267703,3.429170,-4.761357,9.118389,-0.511381,7.200425,8.715172,0.730166,-1.109057,5.996293,7.255845,7.208191,8.099925,7.995641,-0.357714,1.739410,-1.401941,9.060672,9.709144,-9.717785,-5.080771,7.912237,-0.768618,6.314994,-5.167183,5.701794,-0.937154,-1.213925,3.006797,1.403498,8.862605,-2.195234,2.467663,-9.120066,-5.341897,-6.553712,-0.400224,-9.740067,7.323733,5.972972,-9.321511,1.941192,5.745696,6.037209,9.270816,-6.978311,9.441718,-0.446073,2.610384,9.451141,6.867009,-6.051505,4.450124,-2.150679,-6.303557,-8.024024,5.045650,6.814456,6.348079,2.373615,4.377155,8.563501,-2.085261,8.110448,-9.079513,5.280069,-5.999067,8.589442,5.655777,-4.437687,-9.708432,-2.525610,-3.471313,-4.657547,-6.464257,-2.732963,-6.856514,-2.223675,-7.136779,-3.607095,-6.273012,-8.190699,2.803337,-2.476495,-3.164989,-5.024777,-4.803452,-1.249474,-6.249072,-5.906588,-0.143298,-8.450604,6.528750,-6.699028,-9.384620,-4.669264,-0.495665,3.628857,5.922753,-8.978200,2.830003,-3.295049,-8.250465,-4.640340,3.077250,5.168363,-4.692311,-1.378283,5.912517,8.716446,9.865734,-5.668433,-4.040558,2.483652,-9.563610,4.712494,-1.832881,0.307791,-5.119588,4.889544,-7.831976,-4.905133,-3.221469,-8.918300,0.662034,4.028002,-0.485312,-0.839813,-6.066744,-8.176440,-3.712242,-1.051523,9.155195,5.516126,7.518876,8.830264,8.424537,-4.136964,7.920058,0.375932,-8.145245,1.645063,8.346837,-2.018684,-9.598102,-3.822579,-0.507632,1.021415,-0.790248,-6.997551,-2.833449,4.211630,8.102078,3.358266,4.442952,4.800862], dtype = "float32")#candidate|3921|(216,)|const|float32
call_3920 = func_3299_call(relay.reshape(const_3921.astype('float32'), [2, 9, 12]))
call_3922 = func_3299_call(relay.reshape(const_3921.astype('float32'), [2, 9, 12]))
output = relay.Tuple([bop_3882,call_3890,const_3891,const_3892,const_3893,const_3894,call_3903,call_3917,const_3918,call_3920,const_3921,])
output2 = relay.Tuple([bop_3882,call_3895,const_3891,const_3892,const_3893,const_3894,call_3904,call_3919,const_3918,call_3922,const_3921,])
func_3934 = relay.Function([var_3879,], output)
mod['func_3934'] = func_3934
mod = relay.transform.InferType()(mod)
var_3935 = relay.var("var_3935", dtype = "float32", shape = (9, 1, 3))#candidate|3935|(9, 1, 3)|var|float32
output = func_3934(var_3935)
func_3936 = relay.Function([var_3935], output)
mutated_mod['func_3936'] = func_3936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4008 = relay.var("var_4008", dtype = "int64", shape = (1, 1, 14))#candidate|4008|(1, 1, 14)|var|int64
const_4009 = relay.const([[[-2,-7,-3,-6,-3,3,-4,3,8,1,10,5,7,-8],[8,8,-2,-10,1,-9,1,-10,5,-4,-1,-8,-2,-6],[5,-3,1,-7,-8,5,3,4,8,-6,1,5,-6,2],[3,6,-3,5,4,-6,-6,-2,9,-2,9,-9,9,-4],[-6,-2,6,1,9,-7,7,-5,-6,-4,2,3,4,-4],[5,-10,4,-2,-10,-4,-8,-3,-4,-9,-5,7,-7,-9],[-2,5,-10,-10,7,-7,-6,7,1,10,10,6,-10,-3],[3,9,-6,3,-1,4,-5,-4,-3,-7,-5,-8,4,-10],[-6,3,-6,5,9,2,8,-8,7,6,-7,4,9,4],[-5,10,-7,3,5,7,-5,-4,5,8,7,1,6,-3],[7,-10,4,-8,-1,4,10,-10,10,-7,-7,6,10,6],[-5,3,-10,4,1,5,-4,7,-4,-6,10,-9,10,-1],[-5,6,-9,1,2,-3,9,4,-9,-5,8,7,-7,-7],[4,-9,6,-10,-6,4,6,10,5,9,5,-7,9,2],[-2,5,8,6,1,9,-5,-5,8,10,-9,7,5,8],[-8,2,-1,6,10,5,6,-9,9,-5,9,-2,6,-4]],[[-3,-7,-5,3,-3,-7,-2,6,-6,-10,9,4,5,-6],[-5,-2,-5,3,5,3,-6,-2,-3,-6,-3,6,6,-8],[5,-1,-6,-1,1,10,2,5,6,-6,-6,-9,-3,-1],[-4,9,4,-2,-3,3,6,10,-9,-6,2,3,8,-9],[7,-9,8,2,10,-6,6,-6,5,2,1,-10,-2,1],[4,-1,9,-2,2,10,-8,6,8,-8,-8,-8,10,9],[10,4,-1,5,-8,6,-2,1,-5,-6,1,-7,-6,-7],[4,10,8,-7,8,-9,-8,-6,3,2,6,-10,-4,5],[3,-6,-10,2,10,-8,-1,5,-4,-2,10,-3,-2,5],[-4,-5,4,6,8,3,7,-6,-8,8,4,7,3,-2],[6,2,8,7,-9,-8,-10,4,-10,-8,3,-10,-7,1],[-8,-7,-2,4,-6,-4,5,1,10,-5,-8,-9,-8,-8],[-6,6,-3,8,-2,5,-3,-5,10,-6,-3,-1,3,-2],[8,7,-10,-8,6,8,10,7,2,-2,8,-3,8,-2],[3,-1,3,-5,-10,5,10,-5,-7,-6,6,3,5,-5],[-9,5,10,-3,3,-5,2,9,5,4,8,-3,7,8]],[[-4,-6,-9,-5,6,-3,5,-4,-10,-10,-6,-7,4,9],[-9,-5,2,-4,-2,-2,-6,-1,-7,-7,-5,3,3,10],[-1,-9,7,-1,-5,10,7,-10,-10,-3,4,-3,-9,4],[6,9,4,8,-2,-10,8,-8,5,8,-9,-10,5,3],[8,7,-3,1,-4,9,-8,7,-9,10,3,9,1,6],[-1,-9,8,2,2,-9,2,4,-4,-7,8,-9,7,4],[7,3,10,-6,-10,10,-10,10,-6,4,-7,-5,8,5],[-3,-3,-8,-6,-2,7,-1,-4,7,-4,10,4,-9,-4],[4,2,8,-8,6,5,8,-8,10,-1,9,9,-3,9],[-4,9,-10,-5,-8,7,7,-2,3,-6,-3,1,4,1],[4,1,3,-6,-1,-3,4,-3,-1,7,-6,-10,-10,10],[10,-1,-3,2,2,-9,9,-2,-2,-3,1,-9,-3,-5],[-10,4,8,6,-8,7,8,-3,-8,7,3,2,-2,-2],[-10,9,-3,1,10,5,6,8,-8,1,7,5,-10,3],[-10,10,-1,9,1,7,7,-9,-4,9,9,7,7,-3],[8,2,10,-7,8,5,8,-1,4,10,-9,9,6,-4]],[[-7,-2,5,-3,6,8,-8,5,6,2,8,-9,10,6],[5,3,-9,7,10,2,3,-10,-6,-8,-3,-6,4,-1],[-5,-4,-9,2,-1,5,-2,7,-9,-6,-4,-9,7,-9],[1,7,8,-6,-8,6,-9,3,10,-7,-9,-3,-7,9],[10,-5,9,-6,-5,4,3,5,3,-3,9,9,1,8],[-8,2,-6,-8,-8,4,9,9,9,3,-3,4,-8,-10],[7,-9,-7,-3,-7,-2,9,10,-3,9,-4,-6,3,-9],[-3,2,-8,-6,-1,10,2,-4,-7,9,3,3,-4,-4],[-7,8,3,9,-10,-8,6,8,9,10,-8,5,-1,-1],[-7,2,10,-1,1,-6,-7,-3,-2,2,4,-7,-3,6],[-1,8,1,-2,-1,6,5,4,-6,-6,7,8,-1,6],[9,9,8,-10,9,-10,4,-4,-7,2,5,-10,7,-8],[4,4,5,-5,-5,9,-4,-6,-4,7,1,5,-7,-10],[6,3,-1,5,-4,-8,3,5,-8,-8,-1,6,-6,8],[7,-8,-8,-2,1,5,-8,-6,-2,-10,2,-5,-5,-5],[-3,4,4,4,6,1,5,-7,-10,-4,4,3,2,-10]],[[-8,-7,1,2,5,5,1,-1,1,9,-10,4,-7,-1],[4,7,6,4,7,-3,9,4,-4,-6,2,8,8,-6],[-8,7,8,-3,-8,-4,-2,-7,-2,1,-9,-3,-4,-3],[-3,-1,-7,3,2,2,5,-7,10,6,-7,2,-7,7],[5,6,-2,-9,5,8,9,7,5,-9,-8,-1,-3,2],[-7,3,-10,10,-8,-3,-10,-2,1,3,3,-5,8,-7],[6,-2,10,-4,6,4,-2,9,-10,-3,10,10,-9,-8],[10,9,-7,-8,-8,-9,6,-10,-2,2,-2,4,-2,-7],[9,7,3,5,7,-6,8,9,9,-4,-10,5,-3,4],[-3,-8,8,-2,-1,10,-2,3,4,-4,3,3,8,5],[-7,9,-2,4,2,1,-5,-1,9,-5,-8,-5,-10,-4],[8,-10,-8,7,-5,2,-9,9,3,-8,-4,5,-5,2],[-1,-2,6,6,-10,-8,5,2,-2,-7,3,-9,-10,8],[7,9,-8,8,4,2,6,6,-7,-3,-1,5,-6,10],[1,3,10,7,-4,2,9,-9,1,4,6,-10,-10,9],[-1,3,-7,-1,8,-4,3,10,9,4,-9,-1,-8,1]],[[6,-5,1,9,4,-6,6,-5,-6,-10,6,-7,4,9],[-7,-1,4,-7,4,4,4,2,-10,10,4,10,-5,7],[5,3,-8,-4,-2,7,7,-6,9,-4,5,-4,-5,2],[-3,1,-5,-7,-9,-5,-2,-7,-2,-3,-2,-2,10,-7],[2,6,6,-1,-10,-4,-1,-1,1,-5,2,-6,2,1],[-5,8,-10,1,10,9,-2,2,-3,-10,3,-9,-1,9],[-6,9,3,-9,2,10,-3,3,-3,-1,-7,3,6,5],[1,-3,8,-8,-9,-3,6,4,-2,7,1,-4,-10,-8],[-10,-4,-9,-8,10,8,-3,-4,-6,-8,-5,-6,2,-7],[-8,9,-10,-1,-3,-7,-4,-6,-8,6,7,4,9,-10],[-1,-5,4,9,8,-4,-8,6,8,1,-10,-3,10,-1],[-9,-2,-8,9,3,-7,-7,-4,5,-7,1,10,4,2],[-1,5,-4,10,5,5,9,-1,-6,-1,4,-4,7,-10],[-9,7,5,-10,10,-2,-3,-5,10,1,10,5,-2,-10],[-4,10,-5,3,-10,9,-7,8,-10,2,-8,6,-5,-3],[9,-5,-6,-6,3,-10,-4,-4,-4,9,-5,3,-4,-3]],[[-7,5,10,1,-7,8,6,-5,-9,-9,3,-6,-1,-4],[-6,-5,3,-1,1,10,8,-8,-6,-5,1,-9,-4,-5],[-3,-9,7,-4,-5,7,8,2,5,-2,-2,-9,1,-9],[2,9,4,6,3,6,-6,1,-10,2,2,10,1,9],[5,6,-4,5,-2,-1,-3,-10,-10,5,-6,9,2,-4],[-7,4,2,3,4,6,-1,10,6,2,-5,-9,-5,8],[6,-10,-4,-6,4,-2,7,6,-5,-1,8,-8,-4,3],[3,-7,-3,3,9,2,9,4,2,-6,-6,-9,-2,-9],[-1,-6,-4,-5,-7,-4,8,-4,2,2,5,10,-5,-8],[-5,5,-1,-4,1,-2,10,9,-2,4,8,-7,-6,-6],[7,9,-1,9,3,-7,-5,-5,4,2,4,1,3,-6],[-6,-1,-6,-6,5,1,1,4,-8,10,4,10,-9,1],[9,-5,10,10,6,-3,1,1,-1,-9,-6,2,2,-10],[-3,7,8,8,5,4,-4,-4,-2,-1,2,1,-1,-9],[-5,8,-10,1,-4,-6,9,-2,-8,1,3,-2,-4,-4],[5,9,-10,9,9,-8,1,6,5,-4,-6,2,9,-6]],[[-6,-5,2,3,1,4,2,-7,-7,4,10,-4,6,-8],[9,-5,4,9,8,-10,4,10,-5,2,9,3,-5,-8],[4,-6,-9,1,5,-1,-10,1,-4,-3,-8,-10,-10,-6],[1,-7,-9,-9,6,-6,-8,3,10,5,4,5,-10,1],[-10,-6,-3,8,-8,2,7,-6,-7,-4,-4,2,-6,10],[-4,5,-9,6,5,-4,3,6,6,-4,2,1,-8,4],[10,9,6,-9,-6,-5,-3,4,6,3,-4,6,-6,2],[10,5,1,-5,9,-1,2,-5,-8,-8,-9,-8,-9,-8],[1,-6,-9,10,-6,-8,10,-1,-9,7,5,2,6,6],[-2,10,-8,4,-9,9,1,2,9,6,-10,-3,-8,-9],[-5,-2,1,2,-10,7,5,7,-3,9,-4,8,-8,1],[8,-2,4,1,6,5,4,-5,7,-4,3,-2,10,5],[5,-4,5,-7,8,6,-3,-9,-4,3,8,-4,3,-2],[-8,-9,-2,-5,8,7,9,-9,-6,-7,-5,-4,10,-6],[3,-5,2,1,6,-10,-7,-10,10,-7,10,-9,-6,9],[-10,-8,10,4,-5,7,-3,8,6,6,-9,-6,-7,-5]]], dtype = "int64")#candidate|4009|(8, 16, 14)|const|int64
bop_4010 = relay.right_shift(var_4008.astype('int64'), const_4009.astype('int64')) # shape=(8, 16, 14)
bop_4020 = relay.bitwise_and(var_4008.astype('int64'), const_4009.astype('int64')) # shape=(8, 16, 14)
output = relay.Tuple([bop_4010,bop_4020,])
output2 = relay.Tuple([bop_4010,bop_4020,])
func_4023 = relay.Function([var_4008,], output)
mod['func_4023'] = func_4023
mod = relay.transform.InferType()(mod)
var_4024 = relay.var("var_4024", dtype = "int64", shape = (1, 1, 14))#candidate|4024|(1, 1, 14)|var|int64
output = func_4023(var_4024)
func_4025 = relay.Function([var_4024], output)
mutated_mod['func_4025'] = func_4025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4120 = relay.var("var_4120", dtype = "bool", shape = ())#candidate|4120|()|var|bool
var_4121 = relay.var("var_4121", dtype = "bool", shape = (11, 15, 6))#candidate|4121|(11, 15, 6)|var|bool
bop_4122 = relay.logical_and(var_4120.astype('bool'), var_4121.astype('bool')) # shape=(11, 15, 6)
output = relay.Tuple([bop_4122,])
output2 = relay.Tuple([bop_4122,])
func_4125 = relay.Function([var_4120,var_4121,], output)
mod['func_4125'] = func_4125
mod = relay.transform.InferType()(mod)
mutated_mod['func_4125'] = func_4125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mutated_mod.get_global_var('func_4125')
var_4127 = relay.var("var_4127", dtype = "bool", shape = ())#candidate|4127|()|var|bool
var_4128 = relay.var("var_4128", dtype = "bool", shape = (11, 15, 6))#candidate|4128|(11, 15, 6)|var|bool
call_4126 = func_4125_call(var_4127,var_4128,)
output = call_4126
func_4129 = relay.Function([var_4127,var_4128,], output)
mutated_mod['func_4129'] = func_4129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4367 = relay.var("var_4367", dtype = "float32", shape = (13, 15, 5))#candidate|4367|(13, 15, 5)|var|float32
uop_4368 = relay.log2(var_4367.astype('float32')) # shape=(13, 15, 5)
func_2307_call = mod.get_global_var('func_2307')
func_2312_call = mutated_mod.get_global_var('func_2312')
const_4371 = relay.const([-3,10,-9,-9,-2,8,3,4,-2,4,-10,-5,3,3,-4,-7,-3,-4,-2,7,-8,-2,6,10,9,-9,10,-1,-6,9,1,6,6,6,-4,4,9,-6,1,4,-9,6,7,-6,-6,-4,2,-10,-9,-6,1,-7,-5,-7,9,6,-2,-7,2,3,-8,-6,4,-1,-4,8,-9,8,-7,10,-6,-4,-1,-9,-6,-2,7,7,3,6,4,-5,-8,7,-5,1,-5,10,-8,10,1,-8,-1,-10,10,-4,-10,9,9,5,-5,7,-3,-8,6,-3,-10,-5,-6,5,-1,-2,7,8,5,10,-10,-10,4,4,-5,-8,7,-8,-6,-9,-4,-7,10,5,-9,-7,-3,-1,-6,8,-3,-8,10,5,1,-3,5,-3,5,4,6,4,10,-8,-2,10,5,-6,-4,-10,-7,9,7,8,-2,8,6,7,7,2,2,-3,-10,1,-1,10,-8,-1,2,8,4,2,-6,-5,4,10,-9,-4,-5,-4,10,6,2,-4,7,-8,6,10,-1,-4,-2,3,-1,-2,-6,5,-10,-5,-6,-9,-10,3,-9,9,8,6,-2,-3,8,9,10,9,3,-4,-4,4,-2,-2,-4,2,6,1,-9,-1,8,10,-2,-1,4,7,-8,1,-2,2,6,7,2,-2,-2,7,-2,1,-7,-10,8,8,-10,8,4,5,2,3,-10,6,-7,6,-9,3,9,-8,3,-3,-8,5,8,1,-4,5,-1,-9,-3,8,-2,-9,-6,-6,-4,-4,-7,-4,2,7,2,-1,-5,1,-3,-2,-10,6,8,9,-10,-2,-3,-3,2,1,6,-6,2,10,6,2,3,-4,-9,-2,-5,7,-3,-4,-4,10,9,-2,-5,8,-4,-9,-10,9,5,10,8,-9,10,7,-8,-4,4,8,8,-5,6,-1,-9,8,4,6,-7,-4,-10,-3,-7,-5,-2,-4,-9,-5,3,3,-8,7,-9,3,-2,3,7,10,2,7,-10,-6,-10,-8,-7,-8,-2,-7,10,6,-7,3,6,8,-1,-4,7,-2,1,3,-2,2,-6,6,-1,7,3,3,-3,9,-9,-9,-3,5,-2,1,-9,-8,4,-10,-6,6,-7,1,2,-6,-3,7,-5,-9,3,10,2,7,-10,2,2,-7,7,-10,10,-1,-10,-8,-3,1,6,7,9,-4,9,-7,4,-1,-2,1,7,-6,2,-4,-2,2,8,5,-3,6,-7,-6,-7,-3,8,-2,7,3,-3,-8,-2,2,-2,-7,6,-9,-8,-3,2,3,-9,6,-4,-7,6,1,-6,9,-10,2,-4,8,-4,5,6,-5,-7,-10,9,-10,-3,-6,4,4,4,1,-5,-9,1,-4,-4,-1,-7,1,-10,-3,-4,9,-6,3,1,9,-4,-6,2,1,6,-8,4,-10,-2,7,-4,3,3,10,-9,-9,-7,5,4,7,7,4,-5,-8,-9,-3,3,-5,-10,-10,3,-2,-6,-2,-5,2,-2,-5,-3,6,-8,-7,2,9,6,-3,-1,-1,-5,9,2,4,-8,-3,-2,4,-5,-2,2,1,3,9,2,-2,5,-7,-3,-2,-1,-3,-3,4,-8,9,10,-10,-5,-8,2,-3,1,3,2,4,-2,6,-4,5,9,-1,-3,3,-1,4,8,10,9,3,9,-7,-4,6,5,9,-7,-4,-1,-8,-7,6,2,-5,9,2,-7,9,-2,-9,-8,3,-9,6,4,-4,8,8,-8,-1,-1,5,2,1,-2,-4,-1,8,4,1,7,10,-7,-5,9,4,-9,-2,-4,8,3,8,7,-3,-9,-10,2,-4,-6,6,7,9,-8,8,2,-9,7,7,1,-6,4,7,-6,7,-1,7,-2,3,-5,-1,6,2,-7,-1,10,-1,5,-10,-8,-3,9,-7,6,10,-1,-10,1,2,2,-8,-1,7,-6,7,4,-7,9,4,1,9,-5,9,-5,-7,4,-9,6,-3,3,-10,-7,1,-8,1,1,3,1,5,5,-2,9,8,-5,10,8,-6,5,-8,4,-6,9,2,-1,5,1,9,-7,5,-7,-2,5,9,-7,4,-8,8,-10,-9,-9,1,4,-10,-8,-4,10,-9,6,-6,8,-4,-10,8,-5,3,3,-2,3,-9,8,5,1,-4,3,-10,10,9,-8,-2,-6,-7,-8,-8,-2,9,10,10,7,8,4,2,4,7,-10,7,5,-5,-4,3,7,5,-7,7,-7,-5,5,-6,-1,-2,-4,-7,4,10,-4,-3,-7,10,-1,8,-4,-10,2,-7,-1,-8,-2,1,-8,4,-6,-4,-3,-6,3,-4,-9,-3,2,-6,1,-7,-8,8,1,-9,-9,1,9,-6,-3,7,-7,-5,-4,-2,-6,7,9,-1,7,9,-4,8,10,-6,-8,-9,5,4,6,4,6,7,9,8,-9,-4,1,-8,7,6,-7,10,8,3,1,5,3,5,-3,7,-1,-6,-4,3,-8,-7,-5,-9,1,6,-1,1,6,-5,-8,8,-5,2,-9,-1,6,-2,-6,-4,2,1,3,-9,-6,6,7,5,-2,-1,4,8,1,2,2,6,-8,-9,-7,-1,-3,8,5,-1,-2,8,6,7,7,-7,-5,-2,10,-5,-2,-1,-5,4,-4,-5,-1,2,8,-7,9,3,-4,9,8,10,-2,6,4,5,7,6,-2,7,8,-4,-5,2,-4,5,7,-2,10,4,10,-2,9,4,6,9,5,-2,-2,2,-7,6,2,-1,-7,-6,4,3,4,3,1,6,7,6,4,3,-3,-5,10,9,1,-6,3,-8,-9,9,-5,7,4,-1,-9,10,-7,1,1,7,-7,-8,-2,-9,9,2,2,-10,-1,5,-7,-6,-9,2,-8,3,9,8,-10,-4,-5,-7,-6,-5,7,-8,4,9,-10,-5,-7,6,10,9,10,-10,-10,4,-1,-4,9,-3,8,8,2,-8,4,8,7,5,-1,-4,10,-8,9,1,3,-2,-5,-1,-6,7,3,3,3,7,2,6,1,5,7,7,8,-3,10,2,-10,-5,6,-3,7,-4,3,-1,5,4,1,-2,-1,-4,8,6,-6,-1,2,-1,5,-7,5,-5,-5,-4,10,-5,-10,1,-6,-6,-1,-5,2,-1,-1,-7,8,9,-3,-10,-9,-6,-6,9,-6,-6,-3,-8,-9,3,-9,8,-2,-1,-2,-8,7,-1,10,7,-6,-3,-4,-3,-1,-2,-7,-8,-7,-4,9,9,-5,-9,10,-3,6,5,-6,-2,-7,9,-5,2,5,3,7,10,-4,-9,4,1,5,-2,6,-1,-10,-6,-5,-9,2,4,5,1,4,4,-1,10,4,-10,7,3,2,-2,-6,7,4,9,-7,9,-10,1,-9,-9,4,5,-1,-1,-8,1,-6,3,-2,-9,3,-2,2,-6,4,-6,-7,10,-7,-2,-3,-10,1,-9,4,-6,8,1,1,1,-5,4,5,-1,-4,-9,5,-6,-3,-3,-4,5,7,2,-3,3,-7,9,8,6,2,1,-5,8,-3,-6,-10,-1,-6,4,3,9,-4,-1,8,-6,-3,2,3,7,-10,5,3,-6,-8,-2,10,10,-10,8,-10,-10,3,-4,-1,4,-3,3,6,9,-2,4,2,9,7,-10,4,-4,4,-5,9,8,10,-10,-3,-10,-9,10,-10,-1,-6,8,3,-1,9,3,7,2,7,6,10,-6,2,-10,4,-1,-4,-4,-10,5,-1,7,-4,-7,-10,10,9,-1,-3,-5,-2,-9,5,5,-6,-3,3,-5,1,-7,-5,3,6,-6,4,-5,-8,-5,10,8,-4,-3,3,3,1,4,-10,9,10,-4,7,-3,6,9,1,1,8,-10,3,-2,-5,8,3,1,3,2,-7,-6,-4,-10,-10,-10,-5,9,6,-4,-10,-8,2,-8,7,6,4,8,8,-5,-6,-9,5,-3,-9,-4,9,-4,3,7,-4,3,-6,-8,-6,-5,5,-7,9,-3,-5,9,-9,7,5,-2,-7,-6,8,9,6,8,5,-4,-5,7,6,-6,-7,8,6,-2,7,-8,-2,8,-1,1,-4,-2,-4,1,-5,6,9,-5,-4,-10,6,5,-4,-6,-3,-3,-4,8,-4,-7,-7,10,-4,2,3,-10,-9,7,-10,-10,-1,-10,8,10,-8,-10,9,2,8,-3,6,-9,8,8,-8,1,-1,-4,-10,10,3,-4,1,-8,-9,-9,-6,-10,4,-4,-6,4,9,-6,-4,8,6,4,9,-8,4,-5,-6,7,-5,-4], dtype = "uint8")#candidate|4371|(1584,)|const|uint8
var_4372 = relay.var("var_4372", dtype = "float64", shape = (180,))#candidate|4372|(180,)|var|float64
var_4373 = relay.var("var_4373", dtype = "bool", shape = (169, 6))#candidate|4373|(169, 6)|var|bool
call_4370 = relay.TupleGetItem(func_2307_call(relay.reshape(const_4371.astype('uint8'), [16, 11, 9]), relay.reshape(var_4372.astype('float64'), [180,]), relay.reshape(var_4373.astype('bool'), [1014,]), ), 5)
call_4374 = relay.TupleGetItem(func_2312_call(relay.reshape(const_4371.astype('uint8'), [16, 11, 9]), relay.reshape(var_4372.astype('float64'), [180,]), relay.reshape(var_4373.astype('bool'), [1014,]), ), 5)
output = relay.Tuple([uop_4368,call_4370,const_4371,var_4372,var_4373,])
output2 = relay.Tuple([uop_4368,call_4374,const_4371,var_4372,var_4373,])
func_4375 = relay.Function([var_4367,var_4372,var_4373,], output)
mod['func_4375'] = func_4375
mod = relay.transform.InferType()(mod)
var_4376 = relay.var("var_4376", dtype = "float32", shape = (13, 15, 5))#candidate|4376|(13, 15, 5)|var|float32
var_4377 = relay.var("var_4377", dtype = "float64", shape = (180,))#candidate|4377|(180,)|var|float64
var_4378 = relay.var("var_4378", dtype = "bool", shape = (169, 6))#candidate|4378|(169, 6)|var|bool
output = func_4375(var_4376,var_4377,var_4378,)
func_4379 = relay.Function([var_4376,var_4377,var_4378,], output)
mutated_mod['func_4379'] = func_4379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4587 = relay.var("var_4587", dtype = "float64", shape = (14, 7, 7))#candidate|4587|(14, 7, 7)|var|float64
uop_4588 = relay.acos(var_4587.astype('float64')) # shape=(14, 7, 7)
func_29_call = mod.get_global_var('func_29')
func_32_call = mutated_mod.get_global_var('func_32')
const_4597 = relay.const([-0.256010,-4.878513,1.461722,-4.601970,4.803131,-3.195493,-7.443922,1.088382,-6.967252,4.978325,-6.968233,-8.633421,-9.954255,5.537967,8.310955,-8.397783,-7.873895,-9.756532,-9.419995,6.982867,4.131820,9.872680,0.860511,0.409115,7.671602,9.694082,1.610316,-7.953703,-4.948147,0.470766,-0.134076,5.013925,-7.846833,6.208826,-1.056249,-3.651894,-7.936175,2.630958,-7.860835,4.119013,-4.244279,8.229175,-9.013076,5.864708,0.371447,0.445589,3.574795,-3.723291,-0.946576,-8.782942,4.574932,-0.446638,-8.924796,5.056336,2.553549,-4.299610,9.359602,3.523043,-0.006016,-2.546008,9.213404,8.260501,-3.349367,-8.331338,2.599743,8.960005,9.671384,-2.273245,-3.342548,-5.610160,-8.332574,5.218744,1.730806,-6.451827,9.527985,9.122166,-3.749484,5.510621,1.594722,4.527012,-2.108674,8.779880,3.580546,0.132372,7.133806,2.001346,5.384750,1.117020,0.838620,-7.006098,-9.025886,8.304107,-0.655586,0.646121,-7.819184,2.062909,7.675814,-5.049132,-3.652828,-7.083487,5.109505,-4.342897,-6.700992,8.997673,3.092315,8.730591,-1.064461,-6.036911,6.571777,-1.449916,-0.577523,5.897297,-8.016301,-8.253529,0.840777,-3.711500,-5.766996,6.241827,-0.829401,-0.760201,-0.896821,3.805046,-4.402413,-0.921424,1.996780,7.484105,-8.009791,0.803207,-9.362179,6.564612,9.749197,1.318155,-0.192961,-3.953484,8.923868,-1.890037,-1.318144,-4.617987,2.467476,8.609598,0.416607,8.734610,0.784778,-8.101311,-3.450916,4.173853,3.371955,-6.897927,-5.726679,-6.309002,1.808283,5.675779,-6.921210,3.410191,-5.264561,-9.499780,3.710837,7.789823,1.234181,3.688819,-3.377622,4.448955,7.821054,7.260452,-0.894585,5.451590,2.017049,-1.451079,6.613747,3.849625,-5.083799,7.309489,6.027971,-7.245962,4.289654,8.341531,-4.414910,5.409001,-0.672259,5.057884,4.331656,-9.806732,-3.557940,-9.371479,-5.033930,8.486367,-3.063770,9.221936,-0.844347,-9.115106,0.209555,7.010127,-6.990495,7.786420,7.690136,9.408356,5.770662,2.480419,-5.252496,7.372932,-1.565359,1.059486,-3.215211,-6.477394,-5.477388,-4.087255,-4.921772,-8.457985,-7.639669,7.831022,-1.658917,-6.117534,6.896502,7.620240,-4.637434,-8.859541,-8.231104,4.456055,-2.717520,2.082140,-1.680535,-7.165766,9.906520,2.079874,-6.972927,1.788198,5.303385,7.007077,-6.711115,6.072841,0.223961,1.385376,8.002086,-0.961252,-5.054252,2.036066,3.648717,-8.780293,-4.779009,7.244432,-8.402923,4.766792,-2.702012,-9.636132,-9.539637,2.330248,-3.378896,3.895969,8.487294,6.579548,6.621903,-4.178322,0.181667,2.772492,-2.946019,-2.046275,6.673102,3.675146,-4.747557,-1.655147,3.931388,1.508554,-2.117274,6.171076,-6.699703,-3.439511,3.147000,4.398055,5.050156,-1.592034,9.821382,-9.502091,7.649504,-8.105784,-2.470966,-3.607714,9.712435,4.478869,-9.923378,5.513111,5.872471,-1.658333,2.255613,4.850488,-6.722740,-9.349190,3.257617,-6.676624,-6.172838,-0.630156,-9.097244,-3.310476,-9.712424,8.632847,6.406911,-6.408875,-2.692675,6.991426,-9.546900,-9.028336,4.324664,-9.523027,-2.335090,0.787518,4.882754,4.742450,-6.168384,6.107185,8.673882,2.109634,-3.575770,8.021548,-8.607840,-8.587860,-9.184871,8.944214,1.122071,-1.583117,-7.165492,0.203328,6.029032,8.109679,-5.481129,7.518616,-6.352977,-2.105294,-4.703254,8.042146,3.100359,2.517551,5.717209,4.046191,-9.875596,-0.441678,9.380903,-6.178504,-6.170415,-6.774188,8.096066,-9.807051,-9.938682,-2.051447,-8.857653,7.448455,7.385455,7.674649,2.436005,1.289592,-6.900942,-0.086286,9.333636,2.256751,7.511499,1.126359,1.952483,-8.246453,-2.519243,-8.971840,-2.403618,-5.659289,-8.168313,-7.747807,-0.201083,5.920016,3.381646,-6.826601,-3.556524,-6.385862,3.966071,-1.961042,9.770501,-0.712693,1.264783,2.577884,-1.187757,4.792490,6.744512,-7.019648,-4.901931,0.957601,-3.329767,-8.083172,4.816410,-6.751863,-5.865285,3.560218,2.591034,-5.725292,-9.906179,-4.563549,4.193628,7.464736,-2.201427,2.897779,9.926524,-8.172683,-6.554087,-2.328058,-3.300988,1.332221,-6.263612,-4.114038,-9.730456,-8.220016,-2.486820,-0.424498,6.294061,3.237830,0.462255,-6.375191,2.980723,-8.302844,4.192019,7.358958,2.739729,6.912065,7.340296,5.503715,-2.272516,-2.763265,4.957992,-0.324702,-9.756255,-0.841100,-4.853172,-9.423972,2.219595,-5.481648,0.756311,-9.240424,-3.051886,-0.507173,-2.543381,3.113226,-1.965643,5.529758,-3.216005,-0.085112,0.583187,6.634480,6.944235,6.454024,-7.999182,9.032664,5.153255,7.426869,3.375269,6.130888,4.076023,-5.030310,-7.608771,6.963170,-3.466265,9.440910,-4.623016,4.112632,-6.205375,6.741202,-0.896708,9.443735,-4.318540,9.112882,-5.773425,5.169067,-1.667203,7.725135,-4.301368,2.995528], dtype = "float64")#candidate|4597|(468,)|const|float64
call_4596 = func_29_call(relay.reshape(const_4597.astype('float64'), [9, 4, 13]))
call_4598 = func_29_call(relay.reshape(const_4597.astype('float64'), [9, 4, 13]))
bop_4600 = relay.power(uop_4588.astype('float64'), relay.reshape(var_4587.astype('float64'), relay.shape_of(uop_4588))) # shape=(14, 7, 7)
func_3934_call = mod.get_global_var('func_3934')
func_3936_call = mutated_mod.get_global_var('func_3936')
const_4606 = relay.const([-7.448853,-9.021541,4.734904,-5.507287,-1.946115,-5.416423,-2.212408,-3.312785,-4.071694,-0.573364,-7.303088,8.429638,7.822569,4.480577,6.599416,-2.450945,-7.071108,-6.215315,7.703879,-6.709005,6.925567,5.493886,0.161814,-3.565831,-9.576091,2.022636,-3.505380], dtype = "float32")#candidate|4606|(27,)|const|float32
call_4605 = relay.TupleGetItem(func_3934_call(relay.reshape(const_4606.astype('float32'), [9, 1, 3])), 9)
call_4607 = relay.TupleGetItem(func_3936_call(relay.reshape(const_4606.astype('float32'), [9, 1, 3])), 9)
output = relay.Tuple([call_4596,const_4597,bop_4600,call_4605,const_4606,])
output2 = relay.Tuple([call_4598,const_4597,bop_4600,call_4607,const_4606,])
func_4613 = relay.Function([var_4587,], output)
mod['func_4613'] = func_4613
mod = relay.transform.InferType()(mod)
var_4614 = relay.var("var_4614", dtype = "float64", shape = (14, 7, 7))#candidate|4614|(14, 7, 7)|var|float64
output = func_4613(var_4614)
func_4615 = relay.Function([var_4614], output)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4732 = relay.var("var_4732", dtype = "float64", shape = (12, 3, 5))#candidate|4732|(12, 3, 5)|var|float64
uop_4733 = relay.acosh(var_4732.astype('float64')) # shape=(12, 3, 5)
func_1653_call = mod.get_global_var('func_1653')
func_1657_call = mutated_mod.get_global_var('func_1657')
const_4750 = relay.const(True, dtype = "bool")#candidate|4750|()|const|bool
const_4751 = relay.const([True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False], dtype = "bool")#candidate|4751|(2304,)|const|bool
call_4749 = func_1653_call(relay.reshape(const_4750.astype('bool'), []), relay.reshape(const_4751.astype('bool'), [16, 9, 16]), )
call_4752 = func_1653_call(relay.reshape(const_4750.astype('bool'), []), relay.reshape(const_4751.astype('bool'), [16, 9, 16]), )
func_1653_call = mod.get_global_var('func_1653')
func_1657_call = mutated_mod.get_global_var('func_1657')
call_4758 = func_1653_call(relay.reshape(const_4750.astype('bool'), []), relay.reshape(const_4751.astype('bool'), [16, 9, 16]), )
call_4759 = func_1653_call(relay.reshape(const_4750.astype('bool'), []), relay.reshape(const_4751.astype('bool'), [16, 9, 16]), )
const_4763 = relay.const([[[9.671958,3.735346,1.934598,1.362929,5.474568],[-5.881244,8.152631,3.578984,-8.860833,0.321692],[-3.459677,-4.715443,-2.760700,-3.266313,-0.944776]],[[-4.417719,-8.508602,-0.864427,6.657674,-5.924790],[3.964775,-8.448275,-9.804905,8.542022,1.018126],[6.133104,-6.925396,0.358652,-2.076679,-1.309657]],[[2.271990,-1.290590,6.219268,8.467678,-9.058748],[4.923977,-1.473580,-3.316260,-8.817583,-1.046425],[1.543484,3.701333,2.431207,-9.462594,-7.182761]],[[-0.832660,2.235961,0.045943,3.844653,4.605090],[0.147648,4.085464,0.682835,-5.461503,-9.179943],[7.057692,6.626638,4.226962,9.404339,-9.510584]],[[-8.240123,-7.221052,6.208165,-9.097206,-1.424405],[-8.708893,3.585080,-0.514579,-5.387744,-6.745692],[3.993484,-3.866468,-1.908279,6.341886,1.813409]],[[8.675175,-2.988898,7.485768,1.986086,-3.170639],[3.626366,2.300030,-5.577248,1.311482,5.309137],[5.507782,2.087814,8.875790,9.065609,-6.163591]],[[-2.815594,5.280923,5.526373,-1.024206,-3.725569],[-0.604685,7.745739,-1.597234,0.086866,-0.149043],[3.299111,3.636324,5.985333,-2.162423,2.716374]],[[3.188650,-2.461019,-8.300230,3.519721,8.595840],[8.649257,-8.070411,0.507502,6.497115,-7.817878],[8.301926,0.010928,7.866976,8.194417,-2.407893]],[[-4.862747,-6.890764,-7.118315,-7.286950,3.975806],[7.126845,8.841383,-3.594830,3.356758,-9.401074],[9.753162,6.154959,-6.662212,-2.349584,3.491845]],[[3.419245,-0.927119,-5.486282,-4.527095,9.018719],[-6.309750,6.304844,-7.737100,7.161753,8.324336],[7.619356,3.641799,0.778590,2.237630,-0.928933]],[[-0.432280,-4.044783,7.442099,9.117669,5.584964],[-4.224128,-0.441721,-1.471822,5.264930,-1.536852],[0.037293,5.163958,-7.397056,-2.206160,-1.456638]],[[-8.983267,-6.452616,-8.160414,-2.892091,-9.376616],[-6.217449,9.228433,-0.095305,8.141773,0.271544],[-7.169273,4.496951,-8.681210,-6.086451,-5.176721]]], dtype = "float64")#candidate|4763|(12, 3, 5)|const|float64
bop_4764 = relay.power(uop_4733.astype('float64'), relay.reshape(const_4763.astype('float64'), relay.shape_of(uop_4733))) # shape=(12, 3, 5)
func_3433_call = mod.get_global_var('func_3433')
func_3435_call = mutated_mod.get_global_var('func_3435')
var_4768 = relay.var("var_4768", dtype = "float32", shape = (105, 3))#candidate|4768|(105, 3)|var|float32
call_4767 = relay.TupleGetItem(func_3433_call(relay.reshape(var_4768.astype('float32'), [7, 15, 3])), 0)
call_4769 = relay.TupleGetItem(func_3435_call(relay.reshape(var_4768.astype('float32'), [7, 15, 3])), 0)
output = relay.Tuple([call_4749,const_4750,const_4751,call_4758,bop_4764,call_4767,var_4768,])
output2 = relay.Tuple([call_4752,const_4750,const_4751,call_4759,bop_4764,call_4769,var_4768,])
func_4771 = relay.Function([var_4732,var_4768,], output)
mod['func_4771'] = func_4771
mod = relay.transform.InferType()(mod)
var_4772 = relay.var("var_4772", dtype = "float64", shape = (12, 3, 5))#candidate|4772|(12, 3, 5)|var|float64
var_4773 = relay.var("var_4773", dtype = "float32", shape = (105, 3))#candidate|4773|(105, 3)|var|float32
output = func_4771(var_4772,var_4773,)
func_4774 = relay.Function([var_4772,var_4773,], output)
mutated_mod['func_4774'] = func_4774
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5448 = relay.const(True, dtype = "bool")#candidate|5448|()|const|bool
const_5449 = relay.const([[[False,False,False,False,False,True,False,False,True,False,False,False,False,True],[False,False,True,False,True,True,False,False,False,True,True,False,False,True],[True,True,True,True,False,False,False,False,True,False,False,False,False,False],[False,True,False,False,True,True,False,True,True,True,True,True,False,False],[True,False,True,False,True,True,False,True,True,False,False,False,False,False],[False,True,True,True,False,True,True,True,False,False,False,True,True,False],[True,True,False,False,True,False,True,False,True,True,False,False,True,False],[False,True,False,False,False,True,True,False,False,True,False,True,True,False],[False,False,False,True,True,True,False,False,True,True,False,False,False,False],[False,True,False,False,False,True,False,True,False,False,True,True,True,True]]], dtype = "bool")#candidate|5449|(1, 10, 14)|const|bool
bop_5450 = relay.logical_or(const_5448.astype('bool'), const_5449.astype('bool')) # shape=(1, 10, 14)
uop_5458 = relay.cos(const_5449.astype('float64')) # shape=(1, 10, 14)
output = relay.Tuple([bop_5450,uop_5458,])
output2 = relay.Tuple([bop_5450,uop_5458,])
func_5463 = relay.Function([], output)
mod['func_5463'] = func_5463
mod = relay.transform.InferType()(mod)
output = func_5463()
func_5464 = relay.Function([], output)
mutated_mod['func_5464'] = func_5464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_5508 = relay.TupleGetItem(func_5463_call(), 0)
call_5509 = relay.TupleGetItem(func_5464_call(), 0)
func_1094_call = mod.get_global_var('func_1094')
func_1097_call = mutated_mod.get_global_var('func_1097')
var_5538 = relay.var("var_5538", dtype = "float32", shape = (70,))#candidate|5538|(70,)|var|float32
call_5537 = relay.TupleGetItem(func_1094_call(relay.reshape(var_5538.astype('float32'), [10, 7, 1])), 0)
call_5539 = relay.TupleGetItem(func_1097_call(relay.reshape(var_5538.astype('float32'), [10, 7, 1])), 0)
func_1947_call = mod.get_global_var('func_1947')
func_1949_call = mutated_mod.get_global_var('func_1949')
var_5546 = relay.var("var_5546", dtype = "float64", shape = (1176,))#candidate|5546|(1176,)|var|float64
call_5545 = relay.TupleGetItem(func_1947_call(relay.reshape(var_5546.astype('float64'), [14, 6, 14])), 0)
call_5547 = relay.TupleGetItem(func_1949_call(relay.reshape(var_5546.astype('float64'), [14, 6, 14])), 0)
uop_5560 = relay.exp(call_5537.astype('float32')) # shape=(10, 7, 1)
uop_5562 = relay.exp(call_5539.astype('float32')) # shape=(10, 7, 1)
output = relay.Tuple([call_5508,var_5538,call_5545,var_5546,uop_5560,])
output2 = relay.Tuple([call_5509,var_5538,call_5547,var_5546,uop_5562,])
func_5563 = relay.Function([var_5538,var_5546,], output)
mod['func_5563'] = func_5563
mod = relay.transform.InferType()(mod)
var_5564 = relay.var("var_5564", dtype = "float32", shape = (70,))#candidate|5564|(70,)|var|float32
var_5565 = relay.var("var_5565", dtype = "float64", shape = (1176,))#candidate|5565|(1176,)|var|float64
output = func_5563(var_5564,var_5565,)
func_5566 = relay.Function([var_5564,var_5565,], output)
mutated_mod['func_5566'] = func_5566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_5638 = relay.TupleGetItem(func_5463_call(), 1)
call_5639 = relay.TupleGetItem(func_5464_call(), 1)
output = call_5638
output2 = call_5639
func_5642 = relay.Function([], output)
mod['func_5642'] = func_5642
mod = relay.transform.InferType()(mod)
mutated_mod['func_5642'] = func_5642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mutated_mod.get_global_var('func_5642')
call_5643 = func_5642_call()
output = call_5643
func_5644 = relay.Function([], output)
mutated_mod['func_5644'] = func_5644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5648 = relay.var("var_5648", dtype = "uint64", shape = ())#candidate|5648|()|var|uint64
var_5649 = relay.var("var_5649", dtype = "uint64", shape = (8, 3, 1))#candidate|5649|(8, 3, 1)|var|uint64
bop_5650 = relay.greater(var_5648.astype('bool'), var_5649.astype('bool')) # shape=(8, 3, 1)
output = relay.Tuple([bop_5650,])
output2 = relay.Tuple([bop_5650,])
func_5654 = relay.Function([var_5648,var_5649,], output)
mod['func_5654'] = func_5654
mod = relay.transform.InferType()(mod)
var_5655 = relay.var("var_5655", dtype = "uint64", shape = ())#candidate|5655|()|var|uint64
var_5656 = relay.var("var_5656", dtype = "uint64", shape = (8, 3, 1))#candidate|5656|(8, 3, 1)|var|uint64
output = func_5654(var_5655,var_5656,)
func_5657 = relay.Function([var_5655,var_5656,], output)
mutated_mod['func_5657'] = func_5657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_5675 = relay.TupleGetItem(func_5463_call(), 0)
call_5676 = relay.TupleGetItem(func_5464_call(), 0)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
const_5678 = relay.const([2.236676,3.641258,-5.228585,-2.381647,9.280379,-3.428105,0.303292,-6.083668,-4.972398,6.759995,-3.661947,4.326829,1.527679,1.883821,6.035803,-6.567111,-6.893429,-8.799096,-4.516749,7.417584,0.809570,-9.837264,4.064860,0.004627,9.744067,0.126201,3.026282,0.518655,-7.297062,-1.681740,0.261604,6.890213,-7.628762,5.509251,-1.872537,-5.188260,-4.883501,-9.629292,1.758743,-6.935819,-5.049191,-6.457239,-1.193894,-0.108159,-0.631512,5.168027,-2.336311,-2.205520,-4.903364,4.818427,-9.564725,8.040887,4.210644,-0.136327,3.979587,7.974465,-7.204401,-8.629789,-4.063819,-1.438530,8.375716,-5.211438,-5.512831,-5.357182,-0.522586,5.437389,-9.467854,-2.744825,0.038839,-9.924575,7.472664,-5.246864,-8.162290,-2.778074,-7.200997,5.855305,-0.838124,1.191389,-7.806804,-8.038506,2.058309,2.439129,-1.908452,9.209731,-0.812353,-4.089661,-9.105099,-1.571167,6.218922,4.942911,8.378546,6.597972,-3.786383,-5.578493,3.593395,-2.980860,-0.938110,-3.585822,1.096748,-4.267622,8.835878,8.279973,-8.106369,-9.697700,-6.142653,1.417873,1.019659,-9.991649,5.910950,-4.081801,8.444120,3.925977,2.518366,-4.120300,-7.309091,-9.189567,8.993353,6.953839,4.874127,-8.337981,6.019862,0.510492,-7.205458,-9.396302,-5.007292,-3.594890,0.471753,-2.474780,2.252106,2.779921,6.133513,-7.421946,2.160477,-0.794373,1.142822,4.746406,-9.550749,3.448786,-3.679770,-3.266297,5.061072,-2.420752,9.632858,7.212287,3.353721,-2.403373,-9.252997,5.767572,-5.374334,7.567657,-0.455385,-3.781646,6.231337,-3.208629,3.807146,1.391507,7.948404,-0.003239,-2.019938,-7.167531,-4.926212,-1.746514,1.964922,4.798333,-5.483696,1.981926,4.665293,5.458501,-4.826848,-5.343207,8.422186,-9.559496,4.253455,8.059532,-1.858230,2.371637,-8.828498,6.825287,1.822844,4.068206,3.557923,7.849565,-0.301584,-8.449164,-1.290367,-3.321260,-2.923919,-5.337398,1.611779,1.267125,2.535081,1.055210,-8.002451,4.153466,9.119130,8.065905,-5.002051,8.701152,-3.482878,3.743819,-6.351480,-0.239768,-4.769092,-5.122369,-0.486800,5.230971,-5.816647,1.714266,4.511532,-0.727086,3.940194,-3.189046,-4.806224,-1.871477,3.551014,8.853339,6.906024,-1.032664,5.655289,-9.549660,-2.927234,0.482463,-3.057558,0.432962], dtype = "float32")#candidate|5678|(224,)|const|float32
call_5677 = func_1147_call(relay.reshape(const_5678.astype('float32'), [1, 14, 16]))
call_5679 = func_1147_call(relay.reshape(const_5678.astype('float32'), [1, 14, 16]))
output = relay.Tuple([call_5675,call_5677,const_5678,])
output2 = relay.Tuple([call_5676,call_5679,const_5678,])
func_5686 = relay.Function([], output)
mod['func_5686'] = func_5686
mod = relay.transform.InferType()(mod)
output = func_5686()
func_5687 = relay.Function([], output)
mutated_mod['func_5687'] = func_5687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_5710 = relay.TupleGetItem(func_5463_call(), 1)
call_5711 = relay.TupleGetItem(func_5464_call(), 1)
uop_5720 = relay.exp(call_5710.astype('float64')) # shape=(1, 10, 14)
uop_5722 = relay.exp(call_5711.astype('float64')) # shape=(1, 10, 14)
func_4023_call = mod.get_global_var('func_4023')
func_4025_call = mutated_mod.get_global_var('func_4025')
var_5725 = relay.var("var_5725", dtype = "int64", shape = (7, 2))#candidate|5725|(7, 2)|var|int64
call_5724 = relay.TupleGetItem(func_4023_call(relay.reshape(var_5725.astype('int64'), [1, 1, 14])), 1)
call_5726 = relay.TupleGetItem(func_4025_call(relay.reshape(var_5725.astype('int64'), [1, 1, 14])), 1)
bop_5737 = relay.minimum(uop_5720.astype('uint32'), relay.reshape(call_5710.astype('uint32'), relay.shape_of(uop_5720))) # shape=(1, 10, 14)
bop_5740 = relay.minimum(uop_5722.astype('uint32'), relay.reshape(call_5711.astype('uint32'), relay.shape_of(uop_5722))) # shape=(1, 10, 14)
bop_5748 = relay.power(uop_5720.astype('float32'), relay.reshape(bop_5737.astype('float32'), relay.shape_of(uop_5720))) # shape=(1, 10, 14)
bop_5751 = relay.power(uop_5722.astype('float32'), relay.reshape(bop_5740.astype('float32'), relay.shape_of(uop_5722))) # shape=(1, 10, 14)
uop_5755 = relay.sigmoid(bop_5748.astype('float32')) # shape=(1, 10, 14)
uop_5757 = relay.sigmoid(bop_5751.astype('float32')) # shape=(1, 10, 14)
output = relay.Tuple([call_5724,var_5725,uop_5755,])
output2 = relay.Tuple([call_5726,var_5725,uop_5757,])
func_5759 = relay.Function([var_5725,], output)
mod['func_5759'] = func_5759
mod = relay.transform.InferType()(mod)
var_5760 = relay.var("var_5760", dtype = "int64", shape = (7, 2))#candidate|5760|(7, 2)|var|int64
output = func_5759(var_5760)
func_5761 = relay.Function([var_5760], output)
mutated_mod['func_5761'] = func_5761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_5809 = relay.TupleGetItem(func_5463_call(), 1)
call_5810 = relay.TupleGetItem(func_5464_call(), 1)
func_3270_call = mod.get_global_var('func_3270')
func_3272_call = mutated_mod.get_global_var('func_3272')
var_5814 = relay.var("var_5814", dtype = "float64", shape = (1176,))#candidate|5814|(1176,)|var|float64
call_5813 = relay.TupleGetItem(func_3270_call(relay.reshape(var_5814.astype('float64'), [1176,])), 1)
call_5815 = relay.TupleGetItem(func_3272_call(relay.reshape(var_5814.astype('float64'), [1176,])), 1)
output = relay.Tuple([call_5809,call_5813,var_5814,])
output2 = relay.Tuple([call_5810,call_5815,var_5814,])
func_5861 = relay.Function([var_5814,], output)
mod['func_5861'] = func_5861
mod = relay.transform.InferType()(mod)
var_5862 = relay.var("var_5862", dtype = "float64", shape = (1176,))#candidate|5862|(1176,)|var|float64
output = func_5861(var_5862)
func_5863 = relay.Function([var_5862], output)
mutated_mod['func_5863'] = func_5863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_5865 = func_5642_call()
call_5866 = func_5642_call()
func_1562_call = mod.get_global_var('func_1562')
func_1568_call = mutated_mod.get_global_var('func_1568')
const_5868 = relay.const(-5.807483, dtype = "float32")#candidate|5868|()|const|float32
const_5869 = relay.const([1.443763,-5.384949,-1.165400,5.856166,-0.903764,-1.139354,7.753568,6.856572,-2.955100,-0.121003,1.553248,5.057962,-1.282396,5.559810,6.535108,9.976690,-9.683692,4.374483,1.927664,-4.346935,-0.469429,-7.641807,3.504406,3.851672,-7.237805,-7.368368,-3.674321,-4.329456,7.778406,-6.899539,-5.118625,-2.430402,-5.346642,2.082349,-3.666379,8.046168,0.113879,-1.085604,3.871729,-2.946834,-0.643641,-9.474907,-9.587987,1.040502,-0.446056,-7.254323,-5.102692,-8.789970,8.796828,-4.354224,9.210280,-6.573922,4.664367,-4.633928,-5.531119,1.315326,5.109429,5.720511,-1.445925,-9.176828,9.937439,-4.398132,4.526497,-8.399881,-5.602644,-8.058370,-0.486428,-4.583242,0.867080,-4.122520,-5.183155,-5.349034,6.200593,3.077944,4.128419,4.625207,2.486708,-6.807419,-4.687354,0.676273,3.949993,-4.716437,-0.984125,4.626091,3.084285,-7.637620,6.473939,-9.197073,-2.046915,4.206476,9.711353,-1.410320,-4.978692,2.318465,2.973085,0.659241,-2.298695,-2.063621,3.809935,-2.021216,-5.048122,-6.036562,-3.968092,-3.169098,-6.522573,-4.572038,-0.545685,-6.060594,8.435886,8.996229,-6.476745,8.596886,4.175631,-5.775992,9.636005,8.592902,9.495787,-6.389473,-5.687380,-2.965547,-3.859344,-0.301684,-6.022357,7.353189,-3.382334,-8.470939,6.778170,7.959027,-7.899905,7.035471,0.947759,3.800851,-8.112060,-8.027867,-2.870216,-3.343041,2.122582,-1.207566,5.529116,5.726944,-6.697289,9.063030,9.426070,-9.696291,-5.862937,9.916244,3.635884,-2.516287,-9.554875,-9.653021,3.469985,6.097406,-8.567925,-9.760452,9.721781,2.921961,-7.849043,-7.166331,-1.499763,8.203646,-0.731351,-2.215588,5.491598,-1.553837,3.289777,-1.371203,4.172938,3.190372,1.502837,2.204759,8.127091,0.050182,8.858362,6.577554,-7.605355,-7.026662,9.197509,-1.096178,0.747247,4.522696,-1.604222,-3.773812,9.753651,0.145957,4.659754,-0.524772,9.895972,-4.965926,8.162023,-4.557792,-6.768907,-9.817581,5.750667,-8.020440,9.812589,3.972648,-1.959918,5.513130,6.246292,-1.135399,-0.947310,9.176995,-6.735777,-4.536064,2.525233,-1.399347,-6.095245,-5.651097,3.266896,-2.153643,-1.528522,-1.177689,5.170422,-9.938100,-1.671570,-7.000949,0.349924,8.971478,0.502664,3.412054,-0.742767,1.604053,8.297659,5.668019,-3.638518,8.165725,9.706562,4.169426,-2.353980,-0.428979,1.250323,1.213543,-1.685217,-0.603383,-8.355704,0.104764,6.889133,5.641786,-3.254026,-0.225920,5.937033,7.771707,5.041524,2.663999,-9.684651,1.276983,-9.049241,4.226147,4.056836,7.612655,6.094647,-7.206729,4.564277,5.429854,-6.999061,-9.841873,-1.743729,4.230607,9.624531,8.230631,-1.303885,2.041361,2.593338,9.963767,-2.041563,-9.756233,2.733502,3.602513,5.942943,-0.232191,-9.465799,9.573338,-1.915937,-1.163744,2.130125,-3.473441,-4.044756,9.064235,-9.936867,-0.909947,6.704805,-6.928688,-5.413459,9.559167,9.450405,6.869223,-0.186921,-0.968585,3.497944,-2.331107,-7.492052,-3.975572,-8.169450,-9.131064,4.869644,-2.545981,3.696369,6.826724,-6.059746,0.963027,7.333972,1.266738,0.272005,-1.921270,-8.571846,-1.701173,8.787970,-6.437671,-4.037039,-7.945108,5.797321,-3.057017,-0.305685,-5.758633,-6.782298,-9.584835,3.008781,8.368429,1.153527,4.877848,8.186312,-9.537722,2.519203,-0.752284,8.669644,0.671862,0.026536,8.423276,4.535356,-6.577477,-2.374908,7.209733,-3.945325,-9.978547,0.408552,-4.340626,9.353743,6.301824,0.364708,-5.105783,2.903445,1.430443,2.179369,-3.428337,7.146218,-0.366338,5.804145,6.268564,6.806842,0.700406,8.874660,2.076311,-2.368970,0.947881,-4.149113,-7.063707,3.551691,6.052750,-0.618938,-8.444775,-0.945804,8.914104,-7.767356,-3.271057,2.808381,-3.735078,4.276362,5.898199,7.021711,2.709616,0.731414,5.986023,5.447978,9.073505,-8.720008,8.423818,5.986999,-1.255223,4.290085,4.313161,-1.389769,-1.651864,1.793909,7.961786,-5.715588,-8.738221,-1.393190,2.939783,-2.689401,9.517477,-4.745621,-9.782350,-9.609114,6.387598,3.402176,-0.358126,4.180732,9.411393,-9.565749,7.668193,3.561026,-9.346989,4.928582,2.807904,3.106238,-7.110822,-8.386327,8.810151,9.060794,-4.624902,4.623010,-2.900238,0.220726,0.798531,-2.985592,3.672343,-4.961461,9.490162,6.641084,-3.855314,1.694467,-5.298690,9.963282,-0.828949,-4.440915,3.509562,5.981586,-2.103256,8.721546,7.716882,-0.033254,4.430014,-7.525465,-0.157152,4.615865,-7.516369,0.795186,-4.257519,-7.277941,8.462864,-6.313590,-8.911575,-8.421757,-0.930124,-6.776195,0.285797,-3.591559,-1.972035,3.319518,-7.061317,0.214887,-0.366887,9.035232,5.533274,2.182978,8.939858,5.110138,-7.718629,-2.222583,6.476687,-6.584736,-8.720172,6.441430,7.132193,4.666592,3.533291,3.022612,-2.406659,4.140681,-8.115448,-5.047593,-0.336890,-1.334050,-5.929008,2.651318,0.596828,-3.033579,4.225959,-9.841323,7.667383,-7.142948,-0.533232,-0.417311,7.272223,-5.971839,-2.030999,7.509300,-8.497093,1.003790,-7.801578,-8.112150,-9.102333,8.548144,-9.715780,8.713596,-9.470683,0.265252,4.946527,1.483869,9.930264,-0.637812,-5.101812,-6.430602,6.984901,0.055778,-0.095300,-5.877273,3.490471,-5.341726,3.175280,9.495639,-2.013753,4.468494,-5.876909,-7.425126,-7.849038,3.265354,-5.106808,-0.518205,-9.074021,6.222990,3.812612,0.778680,-4.738022,9.724948,1.987930,1.002282,4.692489,2.028123,0.029012,2.211807,5.705510,-3.095000,-7.431710,3.272578,7.034380,0.422762,-3.539091,5.973879,5.558594,3.774062,6.834765,-2.051294,1.044620,-7.744930,2.574083,-6.115558,-0.386833,-8.636248,3.796340,9.399632,-3.316094,-9.373345,-8.943558,9.727898,-4.772437,-9.422337,7.965312,-9.391407,6.672632,4.426727,-4.391233,5.848646,3.632548,1.264241,0.988722,4.005034,3.745259,3.955448,5.811887,0.767107,5.240171,3.856460,-9.374229,1.503545,-1.679303,-6.662204,-6.011456,2.060490,6.609368,6.335055,-0.888634,2.330681,-5.774805,0.669752,4.605917,9.072585,-5.491188,-0.431521,-9.876410,-5.315642,-0.231031,7.094797,-6.170253,-3.482554,5.260420,5.053177,-0.557925,6.537031,9.983301,-6.199583,-9.743814,8.836460,-9.892919,2.873412,8.153230,7.256440,4.405887,-9.442219,-1.848049,4.414750,-9.126536,2.399371,7.442063,4.914264,5.523966,-8.449047,9.402674,-4.221439,4.560310,-6.188093,-7.949659,-0.549511,-3.976663,8.854990,-4.574365,-0.541303,6.047344,2.462279,3.872619,5.352300,7.171597,-9.758137,9.795468,-2.764292,-5.576197,1.479758,5.757356,-6.052552,4.280424,-8.855163,3.473595,-6.433174,-0.073152,6.929156,7.869111,-1.814246,-1.347300,5.885315,3.446079,-7.930805,5.956205,-8.900644,-6.821575,-0.748350,6.785122,6.118708,-7.089712,2.431987,7.152711,-5.649785,-4.097076,8.660569,7.164699,-0.511487,0.267308,-5.411505,1.571669,3.539514,-8.629223,4.556248,-9.926951,-6.766136,-7.018997,0.411628,-1.619042,-3.244133,-8.234573,-2.809196,6.588240,-6.748783,6.219194,7.291694,-5.849953,-6.623002,-7.632846,-6.347614,-3.786096,6.636800,-9.992330,0.569830,-3.272040,8.386892,7.263443,-7.326880,5.039049,8.677163,-0.167514,3.655162,1.496100,0.535653,7.611244,-9.356715,-7.706781,-2.336496,-7.042764,4.009081,-2.916759,9.109207,-2.004228,-1.227993,3.816956,6.897989,-1.065896,-7.552486,-6.978183,8.538635,0.751028,-6.399959,-3.684219,-1.815335,-3.156943,1.822030,4.510853,-3.343059,4.129422,0.570936,2.955283,-9.009770,7.367184,5.188592,-8.601609,2.318489,5.340543,6.865222,-9.925913,-4.368715,8.714249,3.954203,1.857634,4.008776,-0.776573,9.229502,9.085336,2.271215,-7.815661,-5.627488,-4.329624,-6.398455,5.194614,5.527841,6.285345,-3.101571,6.199648,4.016673,-6.170149,8.020515,7.335485,-5.151894,-5.702914,7.865293,-4.406632,3.178284,4.965636,-6.876213,3.829609,1.318965,-9.262610,-9.039542,3.865886,-6.407945,-9.501861,5.890161,-3.189188,-4.361606,7.383008,9.273275,2.754640,-6.447925,-8.030819,-0.527871,-9.816562,-0.440677,0.608053,5.678157,8.210706,-7.365635,2.264369,2.491647,3.594824,7.531991,-6.074197,1.983851,5.979002,-9.755732,-5.246086,-4.776636,-6.763384,8.183090,7.297974,4.049756,-5.301280,-1.546715,1.129792,0.197502,4.445418,1.333624,3.089747,8.620510,7.414749,-0.668030,-9.133901,-6.376152,-6.622757,4.590683,-6.939145,-4.601614,-2.112890,9.437238,-3.110638,0.711124,7.476305,0.109675,0.117569,8.001662,6.402692,-6.446455,-4.372806,-4.297325,5.300105,-1.613646,-5.615250,-8.227171,5.687257,-0.206592,7.535990,1.186127,7.147390,5.208186,-1.537083,8.597901,8.341447,6.065544,-0.249627,-0.968072,5.364125,-2.969206,2.763831,6.291501,-7.954847,-9.170206,4.734967,-3.598902,6.635051,2.008429,-9.700839,3.690624,-8.823702,-2.669628,-3.124775,-9.330893,4.560113,-4.743322,-2.960768], dtype = "float32")#candidate|5869|(864,)|const|float32
var_5870 = relay.var("var_5870", dtype = "float32", shape = (8, 28))#candidate|5870|(8, 28)|var|float32
call_5867 = relay.TupleGetItem(func_1562_call(relay.reshape(const_5868.astype('float32'), []), relay.reshape(const_5869.astype('float32'), [6, 16, 9]), relay.reshape(const_5869.astype('float32'), [6, 16, 9]), relay.reshape(const_5869.astype('float32'), [6, 16, 9]), relay.reshape(var_5870.astype('float32'), [112, 2]), ), 3)
call_5871 = relay.TupleGetItem(func_1568_call(relay.reshape(const_5868.astype('float32'), []), relay.reshape(const_5869.astype('float32'), [6, 16, 9]), relay.reshape(const_5869.astype('float32'), [6, 16, 9]), relay.reshape(const_5869.astype('float32'), [6, 16, 9]), relay.reshape(var_5870.astype('float32'), [112, 2]), ), 3)
output = relay.Tuple([call_5865,call_5867,const_5868,const_5869,var_5870,])
output2 = relay.Tuple([call_5866,call_5871,const_5868,const_5869,var_5870,])
func_5888 = relay.Function([var_5870,], output)
mod['func_5888'] = func_5888
mod = relay.transform.InferType()(mod)
mutated_mod['func_5888'] = func_5888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5889 = relay.var("var_5889", dtype = "float32", shape = (8, 28))#candidate|5889|(8, 28)|var|float32
func_5888_call = mutated_mod.get_global_var('func_5888')
call_5890 = func_5888_call(var_5889)
output = call_5890
func_5891 = relay.Function([var_5889], output)
mutated_mod['func_5891'] = func_5891
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5896 = relay.var("var_5896", dtype = "int8", shape = (5, 12, 5))#candidate|5896|(5, 12, 5)|var|int8
const_5897 = relay.const([[[-6,-9,-10,1,2],[-10,-4,-3,6,2],[1,-4,-3,-6,4],[3,8,-2,-3,-6],[-8,-4,-9,-7,-3],[8,-4,-8,5,-5],[2,9,-2,-8,-6],[1,-3,8,-4,-9],[-5,-10,1,5,-3],[-5,8,5,-6,6],[9,6,4,6,-1],[2,3,-5,3,-10]],[[-10,-1,10,-10,-1],[10,6,4,10,-6],[2,-6,-4,-9,1],[-1,-4,-9,8,-3],[-8,1,-9,-3,-2],[1,-9,-10,8,-7],[-9,-9,-3,-7,10],[2,-3,1,5,-10],[-5,2,7,-6,-1],[3,-5,3,3,-1],[-2,-2,-5,4,8],[-10,4,-6,3,-4]],[[-7,6,-1,10,-1],[-8,3,5,-2,-1],[-2,3,2,-4,1],[1,9,8,6,-4],[8,-7,2,10,-2],[4,9,-1,9,5],[-5,8,4,4,5],[-5,9,-3,-6,5],[-1,4,-8,-2,-10],[7,-5,-1,-2,-9],[2,7,9,-10,-2],[-3,-6,6,9,1]],[[6,7,6,2,-1],[-4,-8,4,-2,2],[-1,-8,1,-1,1],[-2,-1,-2,-6,-4],[9,2,8,5,-10],[3,-10,-6,-4,-3],[-10,-5,3,7,-4],[-6,8,10,-4,7],[2,3,2,4,8],[-2,10,9,-7,-3],[-9,5,9,-5,-2],[6,4,-7,1,-4]],[[-7,-7,-6,-2,-3],[5,6,-1,-9,7],[-1,-7,-4,-3,6],[-4,-6,1,7,4],[-6,4,-2,6,-3],[3,8,1,4,7],[-3,-2,3,-8,5],[-2,4,-5,-1,8],[-4,8,-2,-1,2],[4,-10,2,-10,-4],[6,-7,10,-7,-3],[-4,7,-8,-8,-5]]], dtype = "int8")#candidate|5897|(5, 12, 5)|const|int8
bop_5898 = relay.greater(var_5896.astype('bool'), relay.reshape(const_5897.astype('bool'), relay.shape_of(var_5896))) # shape=(5, 12, 5)
uop_5912 = relay.cosh(var_5896.astype('float32')) # shape=(5, 12, 5)
output = relay.Tuple([bop_5898,uop_5912,])
output2 = relay.Tuple([bop_5898,uop_5912,])
func_5922 = relay.Function([var_5896,], output)
mod['func_5922'] = func_5922
mod = relay.transform.InferType()(mod)
var_5923 = relay.var("var_5923", dtype = "int8", shape = (5, 12, 5))#candidate|5923|(5, 12, 5)|var|int8
output = func_5922(var_5923)
func_5924 = relay.Function([var_5923], output)
mutated_mod['func_5924'] = func_5924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_5928 = func_5642_call()
call_5929 = func_5642_call()
const_5932 = relay.const([[[-4.048124,9.644183,-4.043974,-7.943731,-3.410868,9.800668,7.572468,4.313753,-1.440058,9.762560,-5.024109,2.824501,-1.575133,2.225789],[7.831836,2.884154,-9.870503,-4.736912,-5.168904,-0.199247,1.865921,-8.194362,3.570215,6.197999,2.774618,-0.224141,-3.867147,9.056230],[6.640697,-5.226903,-4.744616,-5.315920,5.128255,0.615846,8.690904,-8.383444,6.577311,8.758945,5.691025,-9.103534,-7.291178,-4.490067],[0.930627,6.138632,-2.088044,1.551729,2.621849,-9.375134,-3.273857,-1.323353,8.200865,-7.530969,2.099826,-1.941285,-0.882239,-6.560603],[0.502053,7.440075,-0.597441,-8.822108,4.233470,9.325391,9.439127,7.387347,7.487829,-8.673632,-5.398083,-7.732265,-5.028537,-8.147956],[8.916736,2.732537,8.950594,4.489040,6.848922,0.306367,9.308136,6.206645,-0.490345,-9.931269,-9.702743,-3.015183,4.802936,8.388688],[1.450211,-6.399672,-3.000787,-4.102054,3.208963,4.869104,0.567518,3.679842,-8.595697,5.739435,0.736208,-5.905884,-5.673812,-9.738026],[1.961254,-6.698576,-1.527416,-8.238334,-1.450906,-8.903852,-4.465122,5.923099,-2.357968,6.544259,8.498225,5.713237,-0.525164,8.261696],[7.741039,2.393958,4.951503,4.683916,-2.185847,-8.189319,-9.268244,-2.966021,-7.827732,-5.737867,-1.864998,2.138354,7.608743,-8.367011],[0.204725,-7.053644,-5.097588,5.054852,0.705086,8.171415,-3.530853,8.619656,-4.087896,-6.988360,4.727753,-4.909276,-9.518345,4.160697]],[[-7.183501,6.703910,0.761458,-4.466643,4.669268,5.805043,6.392160,5.170667,-5.696366,-9.873609,-1.464901,-2.788869,-1.121515,-6.100053],[-4.948458,-6.419921,9.876346,-9.633881,7.049167,-1.441936,2.944608,-4.402648,-1.663034,-5.703316,-2.410251,-8.092675,5.165534,-2.066403],[0.665660,-1.027467,-8.381333,-3.010334,4.627723,1.527661,-8.216923,2.676443,9.885602,-0.943573,4.512614,8.204018,6.197563,1.537676],[-1.126325,-9.193119,-8.544150,2.126149,0.161714,-4.768958,7.827673,-2.647764,-2.424466,6.475381,9.759553,5.823878,-9.281014,-5.398715],[-6.063405,4.766772,7.255659,-0.133610,-3.417831,-7.603305,-6.521960,-2.197058,-8.479958,1.268308,3.993481,2.898825,-7.182348,9.291610],[3.261729,-6.863832,0.843970,-7.161125,-2.670867,-6.365420,-3.519275,-6.716845,-7.845991,-4.617465,3.501886,0.105735,-7.931273,8.341545],[8.216842,-1.413949,-5.580347,4.441596,-4.267345,-0.030676,-1.885990,3.550953,-0.308219,3.175551,5.152518,1.149462,2.803521,1.942441],[5.150719,-0.275881,7.112756,4.938513,-9.616748,-6.044009,-1.027015,2.329118,3.141592,-3.301784,-3.074752,-4.910257,1.135667,0.711797],[-9.113362,5.141343,8.131954,8.244745,-8.782628,1.089000,2.705853,0.892340,-4.120754,-0.009226,9.279147,5.085120,6.850814,9.954716],[-4.518750,9.124816,1.987065,-3.017956,3.004501,-5.517764,1.754221,-9.103558,3.390089,-7.320679,-9.525047,0.882564,8.515771,8.441539]],[[7.580322,-7.943693,3.642209,-5.335368,-2.476136,-9.550506,-5.453317,2.439485,-0.961537,-7.303997,2.712532,2.578534,-8.849605,5.098626],[-2.444140,-3.904850,-2.381716,8.775167,-0.643389,-4.103198,-1.769832,-1.420997,9.647547,-8.060871,6.225891,4.331516,-9.597741,-4.460931],[-4.791429,-5.268910,6.403481,-2.140951,6.706946,3.108268,2.644665,-9.945285,-2.559179,6.931287,-3.843617,7.437589,-5.054766,-0.409810],[-7.632723,7.673488,1.395980,7.297053,-7.754691,-2.433324,8.292002,-3.349420,6.655033,-3.049726,9.910382,-0.335055,-0.162151,-8.904841],[-6.215654,4.399080,8.058932,8.231853,-1.213188,5.144358,-0.936564,4.797625,-7.164416,2.709699,-5.912971,5.818758,3.429300,-4.018685],[-8.178636,-0.930699,2.646120,9.973091,3.988825,5.721858,8.794343,-7.459322,-2.590612,2.719163,0.159522,7.496609,-7.780038,-6.132390],[-9.859107,1.630021,7.500773,9.621843,8.682465,0.482223,-7.946594,1.232595,-1.405254,9.542840,2.053671,5.213033,3.968692,-0.896428],[6.397082,8.443862,1.559311,-7.220223,5.702039,-5.489992,-4.018673,4.656443,-9.337169,-4.530087,-4.782050,-2.105289,-5.176402,7.258791],[-3.455950,-9.053462,-7.555354,6.872110,-8.893728,-2.370836,8.657354,5.293759,-8.406491,-9.662187,0.888603,7.069141,7.780025,7.833763],[3.426185,6.090800,-3.283635,-4.709803,-4.828444,5.441461,6.407169,-0.575825,-9.693702,2.528952,-2.354393,4.903515,-9.269146,5.091287]],[[-2.824851,-1.144275,4.431922,7.157413,5.386418,-9.507421,9.239980,-4.550321,4.311759,-5.055884,-5.922931,2.974645,7.239477,-0.822374],[9.593456,6.585621,-2.940022,-9.684481,-7.083357,-9.099631,2.473771,8.246015,-9.576860,7.134635,-4.549014,2.832074,4.695821,5.435725],[6.228089,2.035377,0.143911,6.316990,-0.463392,-8.013291,1.588257,-5.776145,3.149069,-4.191813,6.988285,-7.981390,6.176308,8.071282],[-6.530822,0.032349,-5.569739,-9.044459,-6.591397,-9.946119,3.221815,7.438632,1.982456,8.365249,5.565065,-6.470539,-3.848391,-7.771043],[-1.919314,-5.764952,-6.412480,-2.543207,-0.202375,-2.034727,-2.495909,1.623496,7.763453,1.674612,-2.788437,-0.573991,-5.619563,7.358448],[2.339334,-7.771718,4.671107,-6.378226,-2.162679,-5.984840,3.703041,5.614260,7.532345,-3.128620,5.884716,1.116526,-0.434519,7.261223],[-4.567034,0.478283,-9.321916,0.673794,7.177079,6.700179,6.001014,-0.531306,3.417976,-0.735634,2.977242,0.973244,-8.338678,-5.704801],[-0.624287,7.659279,-7.739402,-7.330478,-5.389410,-9.826313,5.135311,-0.948254,-0.875179,-5.403088,-5.895510,-5.572291,1.984312,3.032250],[9.822404,-9.041280,0.122424,-5.382233,3.811436,0.711118,3.532673,8.922058,5.686086,6.577343,-2.541824,7.789626,-7.554847,-9.374016],[-9.310806,-3.137753,-7.568398,6.100529,-7.736702,5.161436,5.006312,-2.195876,4.159642,0.136477,4.905220,-2.190268,-5.897704,-3.749590]],[[6.837877,-1.870362,-8.228046,3.587352,-6.457412,5.633495,2.409505,-4.270291,3.599226,4.920638,-6.848824,9.903363,7.806769,1.490801],[-4.716052,-0.340409,1.608573,1.998908,4.317704,-3.904050,6.069524,3.015084,-0.741342,7.108170,-4.153736,-6.520373,-2.767854,-0.110379],[7.337241,1.042404,2.377003,-1.639619,7.895517,1.288932,-0.362669,-4.801174,7.956152,-8.365127,0.378735,1.562862,-3.981384,-9.148739],[7.512576,-8.794692,-8.089528,-6.394837,-5.966218,-9.797445,-9.687616,-7.362037,9.893434,3.332140,-5.902783,0.201463,4.920218,4.032732],[-3.600107,-2.642798,-8.036868,1.213838,7.482630,8.245431,-0.497616,0.388679,7.439905,5.243213,-5.937781,5.228062,9.724163,-4.652414],[8.889261,-9.997248,8.344542,1.916789,-2.953118,-0.259465,8.590685,2.750910,-4.054118,-4.297948,-5.847124,-4.670937,-5.194500,-7.653086],[-6.259665,7.413329,-3.828764,-4.663587,-6.666399,-2.438600,-1.513707,-8.509060,-0.694714,7.658197,-0.216951,-0.308326,1.097101,8.105155],[-4.296029,8.592158,-9.901243,-0.350467,5.204245,-1.036622,-6.214358,-8.910803,-7.987571,-7.156134,-3.410607,6.055777,-0.305761,3.824470],[-0.765954,3.995777,-6.396083,-4.233542,2.349177,-9.271171,3.164990,4.651511,9.689323,-2.783075,-8.802576,-0.714186,-3.325340,-0.396309],[2.534043,-5.883787,-4.555245,-7.523854,2.810502,-8.460213,1.237221,0.939424,3.543424,-5.234281,-7.915617,-3.657528,-1.965591,5.799688]],[[-6.698680,1.815081,4.582635,-6.128241,8.938021,3.250462,7.714944,-0.380397,-2.356807,9.582944,-9.789035,-1.567156,-7.543385,5.250060],[3.120674,5.853657,-0.915427,4.814167,-3.205065,-8.836088,-4.995263,-6.779656,7.911166,-9.520182,-9.907940,8.414706,5.640839,1.115102],[7.657957,-0.406336,2.581475,-4.809436,-7.331609,-2.449870,4.044780,5.718344,-4.634402,8.445762,-2.007552,4.217398,4.496652,2.643500],[-7.459168,-5.242318,1.910447,-0.254538,-3.081005,9.745427,-3.637368,-0.135573,-9.004921,6.870076,6.952864,-8.565454,-8.504274,6.822507],[-9.307826,-7.055906,0.989870,-2.387663,-4.624883,-0.473046,-1.922343,1.875280,5.715145,-7.244536,4.631358,-8.431189,1.575523,-5.318982],[-6.642128,1.012641,-3.614706,8.021090,8.586934,5.065967,-7.586625,-9.562501,3.708668,4.091342,8.051814,-8.221275,4.390786,-1.206330],[9.603775,-1.187695,-8.404136,-6.683479,2.703592,-3.155785,-8.192558,-6.739427,5.142445,2.129690,1.052702,6.547522,-5.267954,4.071999],[-1.542232,-3.232637,5.744844,2.935201,9.055815,-8.072975,9.307257,5.643434,-4.309808,-0.177365,-4.803504,-1.103743,-9.454804,5.258844],[3.839497,-4.914453,-6.529444,5.739190,1.681624,3.603332,7.591324,-4.461355,-2.827117,-4.938615,3.644374,9.450905,-9.504355,3.004014],[1.053127,3.442241,-9.794131,1.799864,1.786269,-1.921794,1.914657,4.939354,6.865605,-9.087884,3.595680,1.200688,2.923199,-3.189665]],[[-5.535439,1.453131,-7.643196,2.498837,-1.463891,7.008417,3.565611,8.605812,5.140042,2.907320,-7.493835,6.564005,-5.018059,-4.732137],[8.594730,2.226403,8.232922,7.075815,-7.740295,-4.283012,4.409530,-8.907202,7.853848,-8.312974,-8.914085,1.768776,4.672866,-5.029944],[0.152119,2.281669,9.817516,2.315915,5.916539,6.244535,0.376955,7.355577,2.194326,7.076705,0.023082,-8.768907,-4.163596,-1.508957],[-4.052825,1.791177,7.868901,-0.891010,-3.699543,3.966967,-7.212226,1.562600,-8.029833,0.088445,-7.578734,-3.785791,-8.076720,6.011062],[5.298854,-3.765716,-8.606915,5.809256,-4.475086,-8.526665,0.094304,0.994694,-2.648665,3.089122,2.095721,2.603436,-1.928076,8.089516],[-4.525872,6.237822,-0.575369,6.273396,8.961499,-6.280319,-8.601905,-0.220954,0.234382,7.819876,-2.404320,-9.877498,8.467102,2.093492],[-4.589225,-9.703340,2.566383,-4.186468,9.642539,-9.034503,-6.511489,5.395775,-2.424744,9.420234,8.750798,5.289864,0.339918,3.644140],[5.882839,-2.763422,2.172102,-5.033381,-9.407996,-4.860657,-6.745933,4.012432,8.608607,8.752775,-2.041426,6.179057,-7.529172,-7.666990],[3.139845,-5.978267,-4.268090,-3.688305,-8.781295,5.548945,9.853234,-6.117529,-1.659632,-1.128725,-1.674272,5.096530,-6.297181,-1.548868],[-9.906319,9.210126,-0.285667,-9.402849,-2.876915,-0.378301,-1.039512,-5.127433,9.205710,5.355807,-1.426144,-7.834074,-4.933379,4.822098]],[[-7.734263,4.951835,-7.404777,-8.928289,-4.855389,-9.161947,1.169430,3.605030,-0.139277,2.760989,0.978821,8.061962,8.409911,-5.022007],[-2.865066,-4.655130,-6.888198,7.384312,-7.607006,8.916583,-9.179992,-6.855113,9.229043,9.453791,2.898602,5.436296,-3.403115,-3.077287],[-2.268240,9.125006,-1.836088,-2.790962,7.903758,-4.147773,0.815738,-2.125197,1.228607,-7.817970,4.433386,-7.985081,-2.917414,7.736942],[-7.991316,-2.691747,-0.181371,5.372520,-1.351270,9.938393,4.853619,4.577338,-7.046016,8.554273,-0.904472,-5.456025,9.403828,-0.759802],[-8.640073,-1.789910,6.969477,-3.924009,-7.254478,6.377557,5.584361,-8.083959,-3.925752,8.360629,-4.195866,-5.235817,-4.580515,-9.823256],[7.438133,-9.925971,-0.037304,-0.084834,9.458318,2.412760,8.544212,-6.534482,-0.919559,4.455818,1.977815,8.951855,1.083240,-9.064891],[-9.579325,-7.039050,-6.194287,8.768682,3.921964,-1.763172,-5.922980,8.595107,-3.569980,-2.039168,-5.574007,3.758418,9.364958,4.921091],[-5.163743,-3.159486,-4.368071,-7.599736,6.330304,5.103057,-0.300757,-7.564800,-5.762783,-2.818851,5.130459,0.348615,-7.934874,4.952017],[5.067706,5.082796,5.060412,-2.722689,-2.553589,-1.872635,-2.160786,-1.364926,8.543108,-9.396091,-4.366037,7.211694,1.383593,-9.085659],[3.148310,2.958656,-4.282653,7.183334,7.415633,-0.146636,-3.652756,7.442303,-0.794223,3.140143,-7.420371,3.641037,-0.254032,6.435533]],[[5.435322,-0.631867,1.109193,2.956109,-3.458151,0.420520,-9.246722,4.783244,-5.723729,-0.587020,-3.701274,6.847474,7.696852,-5.107748],[0.492358,1.994944,3.252016,7.372664,-5.302251,-4.380758,7.061288,-8.118281,8.278925,9.415159,-3.041929,1.154913,7.862776,-4.902408],[5.161480,9.052921,-3.813274,-8.119281,-5.185793,-6.777103,-1.803770,6.560930,5.301059,-0.909605,8.471528,-5.849051,6.753315,-0.774709],[-9.199153,0.485476,5.747324,-9.937988,0.103552,9.127530,4.324520,-7.780806,8.350460,8.124347,2.284168,2.106989,5.186713,8.293618],[3.178006,-1.306960,-7.875319,-3.238783,-6.828963,1.573283,1.760649,7.948897,-4.285266,-4.191563,0.827766,-1.588125,7.815914,8.564133],[-5.596299,5.208107,-2.167289,3.281779,5.675556,6.250585,5.136405,-9.196899,9.443544,9.611246,7.312563,0.356441,4.183886,-4.601986],[-8.331073,-6.618564,-4.516228,-6.693406,2.581052,3.789617,9.103863,-0.412226,7.593593,0.648134,-5.336036,-6.491493,3.913610,-0.787343],[-5.776312,2.015340,-9.631015,4.794286,-3.544475,6.384071,5.789962,-5.094847,6.083915,0.706678,7.635730,-3.955226,3.152048,-3.571438],[-2.887052,-9.866183,9.042907,8.648535,0.184218,-9.593987,5.050542,4.725926,-4.159610,1.875841,-1.949688,-8.245665,-2.580342,3.968229],[9.648425,-9.609264,-8.337330,-1.730991,-9.892440,8.061382,-5.733589,6.448447,4.628558,8.478767,8.542821,-4.932207,9.374775,1.537207]],[[8.802571,-9.996345,-5.822501,-1.451481,6.173611,-8.061263,8.399839,2.592144,8.745686,4.058145,2.101902,-0.465446,1.340415,-2.618765],[5.798524,-0.702789,-8.380184,-2.599225,4.835171,6.611658,8.314081,5.580350,0.301885,9.758789,0.265342,6.833822,2.750183,2.952537],[-3.933236,8.453142,-4.094201,-7.657489,-1.250847,0.124390,-4.119806,-5.457684,5.966357,-4.196595,-2.748197,6.767360,-6.432029,-8.143546],[9.858388,-9.524186,2.644461,2.453305,-5.275698,-7.597091,-2.958077,-4.220932,-2.037891,4.246574,-7.918170,-7.209155,5.687010,5.510648],[0.387882,6.717486,5.744960,-1.897198,2.289040,-6.484164,-3.154822,0.880145,5.156037,0.251973,-2.323541,5.863968,-7.582680,-6.343728],[1.938990,9.618373,2.238237,3.688505,-6.274117,-8.392480,-4.101325,1.482273,0.038644,9.890427,7.781348,0.433339,9.817686,-4.702549],[-7.832750,5.321576,-9.680083,-2.511226,1.890556,0.441888,-7.349156,-4.135296,-9.190375,8.072515,-3.004456,-1.327617,8.339958,4.879769],[-1.112163,-3.695106,-8.618725,4.559560,-2.488504,0.104213,2.612275,7.166260,-9.856221,-6.278208,-2.794241,-3.484969,8.667239,-3.824609],[-2.527484,6.808988,9.063726,-7.369886,-6.454957,7.711444,8.911179,-0.064841,1.412600,-4.988477,5.400492,-3.871929,-3.975166,-4.477058],[-5.937515,-0.617233,5.940327,4.021563,4.890823,-5.543677,3.893822,-2.244232,-4.080931,-6.466610,4.641654,5.098306,3.808543,-5.173463]],[[3.845195,3.581049,3.822250,-4.714493,-6.554410,4.548535,7.751069,4.161327,1.726243,-5.526884,-3.340492,3.870113,9.325367,9.298744],[6.457824,2.560331,-1.210952,-1.295207,-4.709535,-0.964606,-6.136148,9.511119,-7.208696,9.736894,-9.797573,5.437692,-2.826377,-1.871385],[-9.974055,-5.696534,7.868249,-9.147542,1.151540,0.152286,4.336844,-1.410450,-6.483154,-6.710606,-4.912160,-7.016611,4.103830,5.141725],[2.402657,7.000456,4.509637,5.388336,0.915152,0.669486,-1.933429,5.123513,-0.805697,8.874550,0.773095,0.760686,6.628928,-2.066010],[-4.048286,-1.134466,-9.974704,0.591734,-1.968693,-8.622633,-8.110622,-5.719019,4.140292,-0.045430,0.453505,-5.647935,5.510394,-3.226930],[4.731019,5.545071,-4.448527,8.467248,-0.087255,6.125012,2.794719,-8.114046,4.071085,-9.698905,-4.433103,-0.316571,7.792452,-6.398424],[8.616702,1.733056,-5.004050,-1.057327,5.989700,2.991933,-8.165065,-7.525551,-0.570290,1.602136,0.605986,-9.846619,-4.365572,4.425538],[6.001526,1.815219,-3.871336,-2.278281,4.193357,8.414812,-7.653123,-4.060978,4.860808,4.678896,-4.691533,1.524301,-9.679084,0.681484],[7.650781,-9.762128,5.992038,9.341950,8.370852,-3.017964,-0.889230,5.705951,-3.119710,8.361495,-2.790562,3.992859,2.999561,-5.671841],[9.979675,-5.038876,-2.074465,2.534969,-1.027343,5.665762,-5.473274,9.153263,0.267180,-9.849482,-5.451162,-2.048468,-1.631587,2.858697]],[[-8.014119,6.636054,-7.340426,-3.290652,0.558382,-9.553392,-9.192777,6.463692,9.741968,1.308250,9.671057,-4.428233,9.344072,-3.497916],[-2.839595,7.239074,3.164257,-6.535818,7.544491,-4.685590,4.770726,-7.039950,-8.105203,-0.408810,-5.259794,-0.136957,3.172387,-9.033657],[5.612439,-8.666383,-5.085109,1.542280,4.133647,6.589749,-3.193849,1.076327,-6.412684,-5.026820,8.038456,-6.889511,-2.585377,7.152078],[3.753235,3.906735,-8.789162,4.613337,3.408736,-0.270748,-9.567782,7.776504,4.983907,-4.985679,5.339677,-1.524015,-2.859299,-1.726848],[7.832083,-0.486961,2.925515,-4.657083,-4.790490,8.353552,-6.738203,-7.073509,2.964465,5.565579,-0.357044,7.179946,-7.819461,-1.136832],[-1.643443,-5.679495,-1.431874,2.861693,-1.095341,4.444465,7.567177,-6.873068,-7.242410,-6.014884,1.327683,-4.775359,-3.194602,8.477917],[3.718878,2.688596,-9.252678,5.445554,-9.955905,7.032776,-9.022044,9.092834,6.123432,5.802513,-3.024132,9.795285,-5.089320,1.265085],[9.245638,7.415387,-9.699265,2.633647,-7.910456,1.176056,5.957464,0.263537,5.266276,3.853579,5.102563,-0.148118,-0.684006,2.830235],[1.901274,8.358543,6.982633,8.172212,0.221248,-4.548116,-2.579512,0.142245,-1.615069,6.345935,1.519298,-6.003622,-4.014616,2.821426],[0.500028,0.572764,6.768500,9.420661,8.513366,6.461948,3.922330,9.802334,2.506841,2.805940,0.132284,-8.269386,7.486043,2.198808]],[[4.094289,9.021285,1.491616,-0.081098,0.637185,6.204919,-9.327772,-9.880979,4.782031,9.525520,-0.929967,-0.631344,-4.610196,-1.189679],[-0.119008,3.763003,-6.527124,-1.612368,5.683428,6.836079,-1.987470,1.862327,4.522130,9.634992,8.771971,1.755913,2.724982,-1.310866],[-8.716116,-0.022367,-0.470502,5.154677,-8.231982,7.293816,-6.801859,-2.275015,5.399253,7.961307,6.695865,1.310093,-8.666879,-9.323145],[3.629817,7.447037,-9.453192,-2.722750,4.344910,9.992639,6.700359,2.934069,6.468320,-3.519618,4.829102,8.779082,-1.394536,-7.566994],[-9.353190,0.750370,3.313993,2.624965,-5.010666,-2.597558,6.754681,5.217259,-2.102972,-2.273616,-8.327577,5.789785,1.782579,7.234225],[0.966484,-4.120287,-5.127251,8.681346,-8.472162,3.976293,-6.458540,-6.338679,-4.034528,-7.702357,-7.756983,-1.743238,-7.572656,-1.011684],[6.238202,8.640233,8.575477,-0.707016,3.647761,8.903957,-7.650684,-7.707293,1.117829,6.526701,-0.399526,-4.762690,-1.880981,-8.414610],[-8.676265,-3.576676,-5.437899,2.519094,8.754162,2.214955,2.864813,-2.457159,-3.631432,5.871412,8.895823,1.280444,-3.315408,-7.577279],[-1.371619,6.628202,-7.691392,-0.997027,-6.169198,-1.882280,4.247035,-7.571242,0.447864,9.648576,-4.687983,2.477717,9.618186,4.546283],[-5.250374,-6.798916,-6.475541,-2.751487,-5.218196,7.112284,-3.807326,-6.039166,-1.524060,-8.895291,-9.353621,0.047506,-3.303494,-6.905494]]], dtype = "float64")#candidate|5932|(13, 10, 14)|const|float64
bop_5933 = relay.add(call_5928.astype('uint16'), const_5932.astype('uint16')) # shape=(13, 10, 14)
bop_5936 = relay.add(call_5929.astype('uint16'), const_5932.astype('uint16')) # shape=(13, 10, 14)
func_1562_call = mod.get_global_var('func_1562')
func_1568_call = mutated_mod.get_global_var('func_1568')
var_5938 = relay.var("var_5938", dtype = "float32", shape = ())#candidate|5938|()|var|float32
const_5939 = relay.const([5.313291,-6.882167,-8.596074,9.011020,-9.093928,-3.849966,-5.155341,-7.793468,-1.462895,-6.235791,-1.100254,-9.967391,-9.909355,4.322446,7.068580,-4.595717,-4.720998,-2.441406,6.741221,3.193191,8.437524,4.230878,6.051202,2.014586,4.351268,-2.510165,-7.354820,6.650840,6.428004,-7.063732,-0.917144,-5.220451,4.887393,3.200569,-0.295468,7.507870,8.530771,6.909860,-2.789349,-4.046487,-8.131984,4.968534,8.987435,9.150315,3.191702,4.966842,5.200974,-3.720532,8.789921,6.417820,4.958552,8.147852,-5.264912,0.749933,4.220995,-8.252801,-4.171787,-3.914105,-0.332614,-5.731039,4.475174,9.440010,9.569797,-7.657348,-7.081289,-0.128944,-4.473792,-5.883989,-6.648082,7.153498,1.038685,-0.114855,-5.221232,-1.182632,-2.772109,-5.142964,-6.493771,-4.155243,-5.761205,-1.985460,6.273928,-1.352662,4.977899,-5.024985,-3.102058,0.854426,9.349237,9.016373,2.161054,7.135901,-3.901302,2.187679,1.316150,2.089756,-6.054039,-3.336238,-3.226962,3.643867,1.138681,-7.739282,-2.729767,-8.185273,3.742630,0.591435,8.565922,-9.911415,-2.385606,-8.055136,-3.316329,8.249783,-6.864034,-5.663028,-6.548748,-5.138209,4.603825,4.277837,-0.022835,8.255766,8.274881,-1.868616,3.436676,0.315315,0.474615,-1.387508,6.588007,-4.395170,9.910102,-8.445885,0.765283,-3.087224,6.662749,-5.581570,9.925411,0.879034,-7.415057,4.530565,9.530846,5.297172,-4.930986,-4.393357,-2.099270,2.598134,0.370376,0.375379,-3.877824,7.259309,-2.258132,-4.907688,5.765173,-9.357609,8.227344,-2.073833,-5.649580,4.160410,0.110057,-1.852286,7.244475,2.510119,-3.919786,4.237382,-8.985898,-9.740809,-6.283441,-7.719444,6.200212,7.095290,-3.074806,9.741645,0.323453,-4.953136,-6.016882,-7.294917,-7.996085,-7.813233,1.759227,-9.288940,-0.639013,-4.211480,9.425201,-7.822149,8.660021,3.650571,7.474837,3.484150,-8.964665,6.825719,-7.542573,-9.070209,-2.833119,0.864979,-3.688431,2.590048,7.413437,3.627611,5.371346,5.663630,5.124577,-2.155008,8.446990,3.951065,9.755808,-6.396100,5.656539,2.022897,4.797511,2.715033,-5.031950,-6.654199,-6.187064,-6.610649,0.072956,-9.184999,-1.653116,-2.483296,-1.088686,9.698022,-6.090368,-8.274598,-1.366538,2.081093,-9.528123,3.480565,-4.803263,-7.045028,7.438042,-6.779458,-4.701084,7.005301,8.541654,-0.112953,-5.390641,-6.640622,0.558088,-5.112885,-3.037244,7.478187,-4.847613,6.334465,-3.916440,1.927507,-0.835820,6.829829,-3.637927,1.495169,-7.024067,-7.280876,-8.866846,8.517319,7.744027,7.101858,-2.773305,-0.582249,-1.610613,0.525326,-0.511179,-0.071093,-4.406340,4.226112,6.625514,-7.452759,6.960685,-5.336724,1.271980,4.735941,5.564759,-6.356422,-8.068476,-6.741341,-8.058462,6.580915,-7.388665,8.888704,6.118737,0.211053,-6.598861,-2.099027,-5.565105,5.191659,1.607239,-7.065897,2.546189,-2.723697,-2.627037,-0.653455,-0.314079,7.946425,-0.676620,9.323132,1.084971,-2.861818,-7.011583,6.418519,9.096376,5.380864,-6.315817,4.509935,-2.278982,8.361866,-4.948819,-9.530586,8.529457,0.854141,-7.628489,-7.171434,2.468652,6.293306,8.667993,3.290893,6.564105,1.928319,-5.864605,-8.075130,-5.511802,0.853684,9.431932,9.276911,4.177309,-1.053427,9.795336,-3.004530,1.846362,7.542570,-8.088646,8.101741,7.577186,6.006509,4.583248,-0.780304,3.214870,-0.979672,3.841182,-8.664902,-6.616764,5.954817,5.918423,6.143049,7.947950,6.236580,5.277298,-1.924851,-6.484677,-2.670588,9.633804,2.058851,3.596618,4.344169,-8.510717,4.499000,7.474401,-3.291531,-3.816812,6.968575,-8.695202,-5.846794,-5.142806,-5.443309,-5.221101,-8.876926,-9.750479,0.289152,-2.704787,-2.636740,-3.453385,9.595631,-4.355700,-0.161430,7.480783,8.305953,-9.681990,0.845788,-7.074327,4.710357,0.729005,-8.666885,-8.069411,6.508637,-7.948223,0.088231,5.194519,-4.064864,-4.144399,4.665654,3.206159,-1.961723,-2.867542,-1.890676,0.027366,6.628063,0.614979,-8.410476,8.813610,-7.177108,-8.453202,-8.381474,7.067798,2.170636,8.562121,0.063706,7.247417,1.985750,-5.158434,-9.646146,6.300447,-9.564045,9.367992,-0.273930,-3.504212,1.978379,-4.321224,-2.796728,-7.293065,-4.802100,-5.442845,-2.896554,7.799122,3.433141,4.614794,5.794651,-5.701869,-2.938654,3.303429,-7.721563,3.628967,-7.570540,-5.198485,4.130225,-1.562086,-5.882456,-7.195569,3.006128,-6.523534,6.590001,-8.068238,0.002813,-7.294633,9.005025,-6.745543,0.586644,4.248224,-5.843540,-3.006291,-4.839585,7.537838,-3.408472,-4.928437,1.962061,-0.618079,-2.276627,7.073905,2.773585,8.382134,7.625693,2.523242,-1.060306,-1.991047,-7.380277,-1.196447,-3.289547,5.571325,7.927779,-3.305018,0.824786,2.209666,3.412127,1.988410,-7.449034,6.958935,-5.709405,-2.536328,9.421556,9.146435,-7.180573,0.962343,5.294983,2.060188,-3.419694,2.033569,-7.891184,1.959093,-5.961113,1.048741,-6.293909,-8.994271,9.322198,6.396665,-1.514762,-5.077887,-5.660805,1.084761,-1.749821,7.228364,-3.215559,-7.736875,6.353433,-4.353058,-8.708734,5.181551,2.193793,-1.942765,-6.469905,1.247390,-1.459419,9.641845,4.127123,1.702544,1.964204,-5.404285,9.439975,0.273285,0.736755,-5.569503,9.761188,-6.376714,-6.995576,5.101411,-6.076596,9.462944,-7.401408,3.702326,4.338674,2.815178,2.527840,-7.788609,6.477637,-9.558717,0.470866,-5.087793,-9.571034,3.377480,7.892925,0.993165,-4.054159,4.355335,-3.975590,-5.637601,3.603268,-5.892863,-2.371940,7.830145,-6.514710,-8.924897,4.223237,-1.309044,1.809144,-8.283523,-4.453181,-8.518670,-0.229319,7.891579,-0.705695,-6.277533,-4.845878,5.532878,0.748056,-0.400952,-8.520043,6.320570,7.266023,3.457795,-9.255169,-0.659798,2.718219,0.508528,-7.577175,-2.095718,-1.828445,-0.800302,-5.944485,1.709178,-2.403310,2.522018,-9.824154,-6.884646,2.048577,-7.219922,4.510651,-5.643527,1.483519,-0.325066,3.888876,2.062521,1.648675,-6.698001,6.006153,8.607342,3.595593,-6.349490,-3.351016,2.167377,-5.895925,9.795621,-2.532507,-2.684442,6.427402,7.324838,-0.667714,-0.628062,-9.360853,1.008141,1.311064,-7.774907,7.144690,-5.940343,7.619109,4.245122,-3.156485,-0.983405,1.614686,-9.589295,6.459994,4.018093,-9.447829,-2.413826,-6.137537,-9.333505,-5.538611,-1.600517,8.582869,2.252681,-3.738395,-2.756377,6.961742,-9.859231,-1.563301,7.604247,-3.931705,8.622064,3.918275,-1.038540,8.402180,8.338941,1.989378,2.817841,-1.436004,3.104931,-6.449860,9.094368,-8.152559,-3.752297,8.391856,4.191195,-7.149977,-6.430988,-5.082796,6.709891,-6.858569,4.529257,-6.137322,-7.635237,-8.824561,5.530419,-4.042270,-1.325575,-3.138569,9.048267,0.635654,-4.067641,7.150569,0.347406,9.227812,1.838798,6.588233,9.101635,6.101882,-9.862120,8.532011,-7.859920,0.116021,2.693652,5.318652,7.651756,4.062867,-5.977348,-8.683955,-3.249691,-9.431773,2.488567,-6.963133,6.840930,2.072550,9.783422,-5.628647,-8.881097,6.576249,0.491087,-9.264669,3.621388,-6.650174,-1.145830,8.572450,-3.400956,-9.302766,4.863045,-6.327677,-9.279118,-4.244267,7.059889,-2.162001,-2.319782,4.231340,-7.739934,-8.706337,2.748221,-5.169819,-9.905773,-4.118560,3.231066,-4.228667,7.700288,-1.961947,-9.735089,-8.833593,7.488234,2.014596,-2.405803,3.370754,-7.189987,-7.785616,0.575332,6.442898,-3.162174,-7.328328,-3.102300,-1.148007,-4.345212,-7.472610,7.931691,-2.204039,0.746339,6.743149,-3.364493,-4.526429,-1.098732,-9.151979,9.973327,3.637808,8.103475,-8.170296,5.448264,9.286827,5.765688,-5.794071,-6.758657,7.759448,2.164120,4.268223,4.356363,-5.143033,-6.230242,2.897524,9.583629,5.838595,7.972774,-6.227214,-7.853988,-3.338656,1.477789,9.698745,4.610405,9.699619,4.877129,-0.498581,7.596684,-8.721168,6.418302,6.786225,5.204920,1.532074,-6.859506,5.480466,3.566497,-2.345930,-6.086870,5.820167,-8.105678,-7.089087,8.575879,4.501005,-8.699799,3.462727,9.593749,-7.468811,9.727040,0.963011,4.100117,1.592144,-7.492895,-9.354932,9.074670,-7.257365,-3.946279,2.597200,4.993384,-7.755693,-4.969033,5.047881,5.633554,-7.988371,1.623452,-0.565951,-0.882163,-1.567865,-6.529481,-6.851459,-1.199730,5.920748,5.929666,-6.751667,9.543396,-6.324883,-4.129301,-8.550310,6.000993,8.662617,-2.993370,-5.194424,4.048489,-8.200284,1.130887,6.912703,1.030688,-8.809099,0.833430,-7.090245,-4.030814,-5.735559,-5.215469,-5.298309,-4.220316,0.743022,3.317138,6.824466,-1.194833,-9.231247,-7.185296,0.318410,2.820026,0.345702,-1.428078,0.593055,-7.790746,-3.059729,-7.019156,8.634707,-5.262998,-2.688816,-1.033307,-9.709221,3.711862,-8.757058,-3.141081,3.808088,7.488937,-2.818661,-9.275024,-4.026946,8.838039,-9.894909,3.423603,-9.056680,-9.979857,-4.618130,3.496897,3.974960], dtype = "float32")#candidate|5939|(864,)|const|float32
const_5940 = relay.const([-3.257967,-0.450294,-3.277346,-0.312017,5.589827,1.719462,-7.119985,-6.600725,-2.057877,9.092689,1.613088,-5.858403,-3.123674,-0.690544,2.220481,-0.539394,6.759237,-2.931844,-7.934553,-3.917488,7.754508,-3.822230,1.037578,-5.634626,8.937435,4.369805,-8.520501,-4.186071,6.608266,-8.116790,-1.906533,-7.111678,-5.350072,0.841051,8.293997,-4.416814,-7.247134,-7.212151,-4.209988,8.696533,-8.209920,-5.878427,1.714179,3.987324,-5.106730,0.002513,3.117910,-2.502695,-5.911269,-9.293432,3.240908,0.077468,3.846828,-4.861939,-7.629905,-9.443655,-0.639357,-6.502380,8.756392,-4.806072,9.687969,-0.516884,-1.626254,-4.057260,4.197177,-6.849101,-7.245771,-6.846494,-6.734478,3.061281,-9.121190,9.726112,-8.853085,-1.940550,-3.615236,0.704913,-0.743918,-3.611715,6.577076,-4.659333,8.274123,4.890509,-3.051751,6.559387,-6.733907,9.186110,-9.283653,-0.397428,-9.093951,-8.016009,1.515969,9.525448,-3.787317,-4.318915,-8.342996,-0.706940,-3.007517,7.261008,8.229733,0.634475,8.111127,-7.493968,5.878969,1.493003,-6.333402,-9.550893,1.958534,3.083768,2.628741,4.597542,-2.035460,9.889668,-9.203585,0.144483,-1.836395,2.969930,-8.520042,6.508356,-2.283124,6.887431,5.633469,5.464069,8.594933,-8.443813,-0.642890,3.496100,8.880990,7.068054,8.986360,6.803021,1.664619,-2.146712,-5.652759,-3.259976,-7.009080,6.017595,4.338920,-4.890091,-3.159512,-6.055792,1.059487,2.515910,-6.284268,-9.092567,-8.756543,1.070420,-8.051204,6.079691,-0.018522,-8.397183,3.842763,-4.085025,-4.856297,-3.905468,6.047002,7.956837,-0.381443,4.928875,-7.810648,-3.353789,7.138820,-9.193280,8.552551,-7.750943,2.207698,-9.929272,1.806042,-0.290290,-8.555481,-8.065281,8.960867,-2.366790,-2.844846,-9.795682,2.022692,3.799986,0.748639,-5.027934,5.131078,-8.652926,0.053243,-6.718020,7.151149,-1.017394,8.711617,8.437415,1.957148,-9.797968,7.070348,-4.641403,9.119530,3.061684,9.783945,-7.669711,-0.386352,-8.626342,6.785394,-7.768778,5.767700,-7.259510,3.397454,8.947518,1.715794,1.319464,-8.898998,6.580645,8.131939,-9.323577,7.835001,-4.572980,3.954103,4.808374,4.665532,8.572535,4.812832,4.877516,0.837395,6.899050,-5.053471,9.927699,-4.269806,-7.149763,5.993206,-6.038442], dtype = "float32")#candidate|5940|(224,)|const|float32
call_5937 = relay.TupleGetItem(func_1562_call(relay.reshape(var_5938.astype('float32'), []), relay.reshape(const_5939.astype('float32'), [6, 16, 9]), relay.reshape(const_5939.astype('float32'), [6, 16, 9]), relay.reshape(const_5939.astype('float32'), [6, 16, 9]), relay.reshape(const_5940.astype('float32'), [112, 2]), ), 3)
call_5941 = relay.TupleGetItem(func_1568_call(relay.reshape(var_5938.astype('float32'), []), relay.reshape(const_5939.astype('float32'), [6, 16, 9]), relay.reshape(const_5939.astype('float32'), [6, 16, 9]), relay.reshape(const_5939.astype('float32'), [6, 16, 9]), relay.reshape(const_5940.astype('float32'), [112, 2]), ), 3)
func_5888_call = mod.get_global_var('func_5888')
func_5891_call = mutated_mod.get_global_var('func_5891')
call_5945 = relay.TupleGetItem(func_5888_call(relay.reshape(call_5937.astype('float32'), [8, 28])), 3)
call_5946 = relay.TupleGetItem(func_5891_call(relay.reshape(call_5937.astype('float32'), [8, 28])), 3)
func_2307_call = mod.get_global_var('func_2307')
func_2312_call = mutated_mod.get_global_var('func_2312')
var_5951 = relay.var("var_5951", dtype = "uint8", shape = (1584,))#candidate|5951|(1584,)|var|uint8
const_5952 = relay.const([5.949334,6.478549,-9.111441,-2.026977,4.439224,5.605242,-8.112882,2.713041,-3.571935,-4.674147,7.546141,9.999526,3.542122,3.081352,-0.848388,7.900974,-1.864853,5.701745,-0.331203,-4.306419,-7.301694,-3.116588,-4.293176,5.271009,-3.114146,-4.323359,-8.087218,-5.236100,-9.940803,-3.427755,3.948837,-9.921905,1.392313,-5.639057,-3.887760,3.133495,-3.441791,7.625787,-6.987497,-1.433686,-5.427710,-6.727059,-2.467157,-9.729807,4.861098,0.379238,-7.841175,-2.968317,9.422225,1.465525,0.284820,-9.580337,3.844244,9.471975,2.993576,-0.903124,-7.595886,-7.077582,9.742645,-9.073146,-0.836551,7.502947,1.388577,-0.469003,-9.822225,-8.867587,-6.811688,-5.403933,-2.143603,8.617642,3.476363,4.332086,2.422428,-5.272122,-6.603626,9.192982,-1.327728,-0.508576,-7.000879,-0.804237,-7.830330,0.644924,3.188455,-9.813271,6.795179,4.076728,-5.585507,-5.277565,5.481607,-1.194247,7.716393,-0.349912,0.448001,-0.903051,4.857141,-3.255847,9.584866,-2.222155,9.281466,9.872191,0.786301,4.534887,1.957872,5.673823,-7.692018,7.892963,2.932532,4.601604,-8.976945,-3.285870,-8.341886,0.007769,-4.628755,1.472691,7.336914,-9.704939,3.081760,-1.496110,-2.862794,1.201107,4.165677,-8.882601,-1.009719,0.954064,5.344617,-5.384381,2.904973,-6.345642,-9.071589,8.156074,-5.739559,-7.495364,-8.085895,-7.635896,-7.192212,5.762274,-6.498295,-2.451797,-3.191186,3.709152,7.841831,5.885331,-0.884255,1.110531,8.771748,-5.379651,-7.315715,-2.311309,5.587463,5.530009,-1.172226,8.964487,3.321474,-4.558297,-1.295527,0.886762,5.938072,-6.763085,-4.311915,-5.906579,-7.939233,7.952901,0.557319,4.495835,1.873027,-0.633068,-6.775937,-5.957987,7.028249,9.871700,6.031553,-9.133491,3.792863,-3.616825,-9.472419,-9.648687,3.291795,6.972907,8.724624,0.576670], dtype = "float64")#candidate|5952|(180,)|const|float64
var_5953 = relay.var("var_5953", dtype = "bool", shape = (1014, 1))#candidate|5953|(1014, 1)|var|bool
call_5950 = relay.TupleGetItem(func_2307_call(relay.reshape(var_5951.astype('uint8'), [16, 11, 9]), relay.reshape(const_5952.astype('float64'), [180,]), relay.reshape(var_5953.astype('bool'), [1014,]), ), 2)
call_5954 = relay.TupleGetItem(func_2312_call(relay.reshape(var_5951.astype('uint8'), [16, 11, 9]), relay.reshape(const_5952.astype('float64'), [180,]), relay.reshape(var_5953.astype('bool'), [1014,]), ), 2)
bop_5979 = relay.add(var_5953.astype('uint64'), const_5952.astype('uint64')) # shape=(1014, 180)
func_3808_call = mod.get_global_var('func_3808')
func_3814_call = mutated_mod.get_global_var('func_3814')
var_5992 = relay.var("var_5992", dtype = "float64", shape = (1, 560))#candidate|5992|(1, 560)|var|float64
var_5993 = relay.var("var_5993", dtype = "float64", shape = (468, 1))#candidate|5993|(468, 1)|var|float64
const_5994 = relay.const([-7.633688,-7.330616,3.251599,9.961749,7.605465,4.657570,1.221374,2.178435,9.085561,0.300761,-2.356310,6.877875,6.406616,8.603864,-4.744953,5.175843,-5.225374,-5.830793,5.827029,-7.655713,-9.629105,6.598662,-4.087169,7.273367,4.108744,1.863643,-8.308491,8.756906,-7.609188,-5.895270,-0.262765,-7.232147,-8.629703,-3.442276,-0.340122,-7.939215,-9.673442,-4.612499,-7.336747,-0.601457,4.355531,6.185157,6.484973,4.029978,2.102182,-6.695046,7.189139,8.582337,2.934568,-3.920294,-7.618818,-8.073691,-1.142059,5.891722,9.178061,7.742772,9.645278,-5.236200,3.835539,2.517896,-6.513886,-0.456668,-2.737333,8.894995,4.299678,8.715034,-6.287628,0.679748,-0.254236,2.241217,-8.602081,-8.339806,4.243386,-8.232520,5.301009,-5.822434,-7.774952,3.882906,-5.040911,-4.497901,-0.071195,6.241311,-1.885942,-6.988491,-8.782353,-4.840175,-6.745530,-9.398332,3.780965,-2.992971,-6.253560,-4.029684,8.773139,6.149596,-1.482371,3.612233,5.082395,7.686498,1.703718,5.818918,7.709741,9.912028,-6.607197,-3.610105,-6.218719,-2.370289,0.847765,0.484801,3.213927,-9.210474,5.743005,-8.211219,-9.915437,-5.254801,7.435040,4.147422,9.058612,-3.872230,0.361386,0.037392,5.941000,-8.611784,8.134230,1.864678,6.813501,-0.213061,-8.216814,8.822947,2.689391,-5.381046,7.561413,9.708664,-4.724289,5.499073,-8.811384,-1.585805,-4.666939,-4.438069,-7.468774,-1.014992,4.610988,-6.760593,-2.888739,6.430828,0.085069,-9.066321,0.746989,3.292341,-0.702197,2.554323,-3.135761,-6.303056,3.977198,-5.903476,1.374237,8.722011,3.170940,-3.710098,1.559276,4.148236,6.290327,-1.621080,-4.098647,9.682231,-7.272248,5.399781,-8.063815,1.394051,9.299037,9.527485,6.111669,1.573967,0.775945,-9.671153,9.343030,4.846614,2.167383,-9.626743,-9.366458,-7.248773,-8.736032,4.548957,-4.736317,-7.384932,-5.571184,-5.834965,-4.720713,-1.343837,9.076210,2.431145,9.797450,3.209018,-8.835027,-1.900043,4.406194,4.855907,-0.100165,-7.791890,9.008048,-6.714892,0.545864,6.165473,5.736438,7.657275,-5.438706,0.044017,4.508875,7.542109,-8.340160,-8.100425,-3.884310,-2.808773,-8.096569,4.260495,7.094533,8.263519,-5.862721,3.552469,8.960179,-0.897177,7.290936,9.173928,4.494922,-4.690691,-9.514036,0.297771,-5.422616,9.772919,6.541092,-0.075534,3.180192,8.829056,3.621640,1.575334,3.394826,-2.791291,1.168748,9.530014,-2.072657,9.835254,0.740368,-8.748177,-2.467965,-1.152657,-1.984743,-7.517703,7.911215,-2.815216,-1.396679,4.933258,7.878900,-2.613315,8.822624,2.721739,8.710299,-0.193330,-7.099856,-3.504037,-4.518573,-9.337920,-9.652613,-4.969954,-0.327665,-7.380207,-1.116526,-2.671850,9.977839,0.708501,-1.302468,4.980845,9.613182,-3.966025,-8.035290,-3.862405,-3.984451,9.660118,3.004393,-5.621947,-1.792525,5.767758,-5.773966,8.353510,-3.922116,-1.234180,6.637745,8.742994,9.176927,-9.534457,-9.550572,-5.761510,6.840469,5.518707,-8.605197,-0.980035,-7.836420,7.023350,9.667867,7.663157,7.983578,8.630100,9.182796,3.023126,-0.252597,-1.704298,-5.145244,6.799214,-7.685208,1.402737,-6.648710,-7.846987,0.193785,2.383179,-5.119152,-6.154892,-9.629289,-8.852365,-4.773605,-9.335158,-5.820088,-4.755917,-0.531697,-6.757448,-2.178589,9.384971,-0.454648,-5.949123,9.922021,-0.765252,-6.776014,-5.279534,-6.807137,-0.149461,-5.118985,-6.408264,7.929975,-8.948704,-7.912114,-2.065648,-4.023253,-5.069600,7.078066,-0.442706,-2.741811,-4.230621,5.009032,-7.882511,-4.293307,0.481685,9.712186,8.085125,-2.831620,-6.056572,-8.549010,9.337212,-5.795854,9.773107,-8.475568,7.000487,5.797510,0.517339,-1.876759,-4.555503,-7.861662,5.795625,4.458977,-7.845298,-4.948374,6.521859,-0.214114,9.975983,-5.813125,-3.865237,-8.637409,4.005534,-5.344145,9.618371,-3.486917,8.000077,8.868953,8.913585,0.231076,-6.247797,-3.669204,-7.608623,-6.211646,-7.191935,9.192297,-5.879447,-0.006779,0.788402,-0.878478,7.392888,-5.782777,-7.985412,3.959314,5.486407,3.096796,8.538737,9.706098,-5.493896,5.434766,-3.683880,-3.174277,9.093149,-8.381121,0.037886,1.119109,-5.795939,8.073732,6.355437,-4.565659,9.406186,-2.225346,9.260798,-8.045324,2.536671,-3.276005,-5.586541,-2.519775,9.812539,-4.540079,-2.078189,3.557867,-5.628227,8.679937,-8.661613,-1.792572,9.149254,-8.659938,-7.498103,0.007178,-8.784890,5.519621,-6.670223,-9.682730,-7.591908,-5.877455,-1.855311,2.204119,-5.104636,-6.286304,-9.886023,-9.166235,0.118922,1.131908,7.267268,-9.433175,-2.923012,2.509843,7.477692,9.861763,-8.205826,-1.444372,5.458213,0.439465,-8.373424,-8.690134,-7.090382,0.265869,3.922757,0.661845,9.445381,3.415149,0.466300,-0.097677,-5.390711,5.346592,6.420717,-6.039450,6.517970,-1.950685,5.764834,1.914430,1.951822,-9.970981,2.112134,6.692303,0.158649,-4.758301,4.069952,4.012472,-0.957282,1.672341,6.791439,8.477858,2.825646,-7.171501,-7.979751,5.165962,-8.767082,3.486269,6.906771,-2.383910,2.963031,-4.667390,7.231645,-3.364441,-4.688551,7.847931,6.137290,-0.494635,-7.156439,-8.945592,-0.304743,-5.570939,0.077800,-2.338848,4.584958,2.786655,-1.350592,5.501815,1.778511,3.343423,2.737377,8.031437,5.261015,-0.369051,6.089023,9.366142,-8.210465,-6.915272,6.949207,-5.909733,-6.215722,8.269214,6.707461,-9.387781,-5.547654,-9.139040,5.367772,3.129051,-8.239383,-1.005169,-8.884364,1.540019,-2.837720,-0.358356,4.449082,-2.869330,-3.545145,-0.383667,-3.213152,-2.958487,-9.027553,1.702679,6.041715,8.160486,-4.304699,5.908981,8.890052,1.752001,-1.331608,2.825877,-4.864992,1.993489,9.994041,3.287467,6.424457,-9.392868,-4.695762,4.769743,-6.960588,0.863259,-8.499375,6.056410,-0.651954,2.663473,-6.403540,-2.275889,-0.114008,3.122258,9.692857,-7.659051,2.643110,-1.721478,-9.054771,5.971308,-8.273097,5.416230,7.098497,-8.203605,3.967379,-1.854719,-1.418126,-6.753000,0.074961,-8.664140,-9.869685,2.334151,-8.249059,-0.318837,6.525711,0.178753,-8.170939,-0.758953,-8.251003,6.073827,7.659712,9.373408,-0.904668,-0.256137,-5.692009,-8.924719,2.760372,-0.970318,-1.628870,-9.790605,-2.423216,5.441078,-1.120693,-3.503173,5.823395,-4.864962,5.310319,-4.484396,-9.504722,0.247404,-2.595757,1.624886,5.613700,5.757027,-5.961941,2.862670,6.469151,-6.249883,4.230908,-0.286821,-1.675269,7.516483,2.645232,-2.778283,-5.881306,-6.918456,5.311890,8.176169,8.102859,-2.293760,-0.555385,-4.996503,9.614179,-2.281212,3.806318,0.779018,8.011857,4.586827,-6.148404,-5.827844,-6.072623,8.456744,5.068659,-7.168286,7.282613,-5.303790,1.486098,-9.269761,4.930963,6.950110,6.791739,6.252345,9.527846,9.919034,-7.434794,-7.747459,-8.314707,-8.681491,-1.430075,-0.819320,-8.171560,-6.020017,6.274969,-9.108084,5.892149,2.226651,-8.187412,2.854401,-2.188392,8.100464,2.383255,6.984399,-9.566690,6.478255,-6.848962,-7.751321,-1.880077,-7.334965,8.462243,1.630150,-1.286843,-8.135863,8.215938,-4.092008,-1.347439,-6.819741,-5.586981,-7.947648,4.259237,8.237124,6.714359,-8.073860,-6.596567,-8.038505,3.105123,-1.538139,-5.384924,-4.259541,3.853337,7.816916,9.972043,9.821365,6.699731,-3.527085,9.288997,9.121416,3.324327,-0.123911,-7.082790,-4.639559,-3.967642,-0.065169,8.736418,-3.768821,6.107271,-0.114925,2.717462,-4.444110,5.109279,-9.177924,2.267204,-7.669707,3.138515,-1.391281,3.832667,-3.914757,-9.596840,-3.409304,3.986667,-4.285485,3.796316,9.657520,-1.273618,9.183681,-6.648637,-1.042736,5.555897,8.324067,2.012289,7.631731,-8.593260,8.332222,-3.684849,-7.728733,-1.922299,-2.315298,7.201407,9.978106,-4.044955,-1.037180,-6.244389,-3.484707,1.049509,-8.875535,9.765554,4.006932,9.699296,-4.907384,-1.486005,-2.068690,9.774948,-3.680429,-1.819834,-7.265098,2.816619,-4.384443,1.255792,2.955322,-5.203777,-9.895912,0.358141,4.636935,-4.801541,-7.462910,-8.076965,3.929737,-0.441905,-3.095736,0.537027,6.132647,2.073060,-5.997506,-6.361848,3.422383,-9.223649,-9.324462,4.514633,-4.907818,-7.391077,8.292720,7.807088,-3.049962,-6.158953,7.953559,-8.855613,-3.187890,-7.000537,-5.068355,1.963270,0.901685,7.386517,7.678714,9.840082,-8.744448,9.395430,-8.107407,8.689717,-1.487189,2.880640,8.778855,-7.343445,-9.854268,0.620072,6.702856,-0.467521,-1.776541,-9.121581,8.039087,5.655193,7.408664,1.116319,-8.053805,4.413590,-2.769273,-6.916504,-0.621036,-6.419826,9.365330,7.265208,-5.805410,4.734868,-9.201641,-3.830539,0.789753,4.574338,-6.826486,-7.958603,3.450119,4.813905,-7.535190,-1.992855,-6.653595,6.100151,-9.937727,-1.014597,5.496168,2.612150,-6.474926,2.438611,4.930120,-3.939108,2.989397,-1.434685,-1.199380,-6.389577,0.528391,2.578641,9.978549,0.961073,-5.999911,-0.897679,1.515218,4.153660,-9.893070,3.791074,9.659981,1.572924,-1.354981,-6.995018,-0.705421,-1.715585,3.376327,5.859146,-5.877392,-7.735765,7.278801,-3.898334,-9.761859,-6.593090,-5.412878,-5.128404,6.855947,-3.272200,-7.785901,3.232129,-6.790806,-0.757091,2.177940,-0.978121,2.175579,-6.011126,-2.078897,7.759498,-3.634297,2.639306,-8.117603,2.032366,7.298610,3.727174,-8.145460,-3.609489,-1.789665,-7.406414,1.421337,-1.918788,4.859763,1.238815,5.025130,-1.281997,-1.894729,3.876769,1.453659,-9.209854,-4.742530,-7.510438,-0.951196,6.598192,-0.889155,3.403377,0.735774,-2.985992,-8.332774,-7.604620,-3.137099,-9.590933,-8.933650,4.079632,-8.621283,-4.080257,-6.644509,5.953897,-8.370526,4.185786,-0.511967,-0.915270,-2.300585,-6.295153,-9.324042,4.795828,9.449593,8.965181,5.322199,9.196956,-0.732247,-0.924260,2.903679,-3.620362,8.748624,-8.565056,-2.893911,8.167753,2.320140,9.595426,-4.298245,-9.480127,-5.160884,8.807324,0.073824,8.301559,-7.306009,-9.957581,9.223094,7.550208,-0.671324,-6.629842,-2.633382,-1.506580,7.862038,1.975210,-5.518070,4.119819,9.750744,-8.158523,-3.570150,1.324775,1.140398,-0.170958,-4.733910,5.567494,2.423278,9.292813,4.714437,4.300842,6.928545,-2.213424,-1.523108,0.636878,-8.083095,-2.207951,5.745414,-8.824957,2.427249,-9.575809,-0.094663,7.070578,5.078256,-4.371081,-1.037890,-0.992375,-6.029292,7.281685,-7.310709,6.204554,-6.302505,1.555778,1.796906,-6.897409,-1.132751,-1.599627,3.480174,-9.675605,-5.869873,2.626613,-7.364825,-2.937384,0.607334,-7.263591,-3.600101,-4.025130,1.100528,0.557550,6.834616,-0.188326,-8.739958,4.797773,-3.533645,-1.474867,-2.898814,9.912536,0.316732,9.359667,1.547912,2.028508,9.232414,-4.719913,1.059959,6.819810,9.671951,2.333123,-8.482308,3.226219,-5.329023,4.108888,-8.060452,-8.438329,0.329869,-1.421228,2.548281,-7.093720,9.410889,7.529691,-5.572420,-6.491298,-3.153876,3.769816,-6.952048,2.626849,3.638276,7.252896,4.117779,3.734993,5.774006,2.919174,1.491276,-3.569411,-4.211969,-2.656081,-0.802186,2.918484,-8.992831,-7.932093,6.729973,0.900581,-4.810678,-4.473782,-2.873587,-8.763896,4.607986,-2.394200,-6.087059,-9.034193,4.572978,6.015019,0.184244,-2.947154,-0.875707,-3.422735,9.335243,-7.492719,-1.717963,1.378711,-6.308810,-7.261246,-4.696967,4.512459,9.002799,6.421056,-7.751075,4.410767,6.021065,1.878084,-4.782459,-9.914954,1.718590,5.540926,1.781288,8.168998,0.671869,-1.976300,-5.519968,-3.936796,6.006763,-7.277628,-0.275186,4.427553,-8.444959,1.663563,-9.909753,-5.212499,-0.905800,8.386383,-3.772320,-2.562723,-5.262853,0.302443,-6.120144,5.424283,-3.342743,5.696210,4.902318,-9.843326,7.234391,-5.338965,5.298276,3.876562,-4.284615,-5.754920,7.424097,-8.129809,1.154517,4.144407,8.237875,4.017793,-7.962497,2.411749,4.881707,3.340326,5.468221,-1.427124,-1.904379,5.035237,-9.316436,-6.137196,-6.872893,8.978257,-5.570827,2.274701,3.638129,1.953152,0.203864,8.439759,4.495514,0.303467,-4.503510,5.230580,8.959160,-6.326903,-1.894306,-1.146820], dtype = "float64")#candidate|5994|(1176,)|const|float64
call_5991 = relay.TupleGetItem(func_3808_call(relay.reshape(var_5992.astype('float64'), [5, 16, 7]), relay.reshape(call_5950.astype('float64'), [180,]), relay.reshape(var_5993.astype('float64'), [468,]), relay.reshape(const_5994.astype('float64'), [1176,]), ), 4)
call_5995 = relay.TupleGetItem(func_3814_call(relay.reshape(var_5992.astype('float64'), [5, 16, 7]), relay.reshape(call_5950.astype('float64'), [180,]), relay.reshape(var_5993.astype('float64'), [468,]), relay.reshape(const_5994.astype('float64'), [1176,]), ), 4)
output = relay.Tuple([bop_5933,call_5937,var_5938,const_5939,const_5940,call_5945,call_5950,var_5951,bop_5979,call_5991,var_5992,var_5993,const_5994,])
output2 = relay.Tuple([bop_5936,call_5941,var_5938,const_5939,const_5940,call_5946,call_5954,var_5951,bop_5979,call_5995,var_5992,var_5993,const_5994,])
func_6011 = relay.Function([var_5938,var_5951,var_5953,var_5992,var_5993,], output)
mod['func_6011'] = func_6011
mod = relay.transform.InferType()(mod)
var_6012 = relay.var("var_6012", dtype = "float32", shape = ())#candidate|6012|()|var|float32
var_6013 = relay.var("var_6013", dtype = "uint8", shape = (1584,))#candidate|6013|(1584,)|var|uint8
var_6014 = relay.var("var_6014", dtype = "bool", shape = (1014, 1))#candidate|6014|(1014, 1)|var|bool
var_6015 = relay.var("var_6015", dtype = "float64", shape = (1, 560))#candidate|6015|(1, 560)|var|float64
var_6016 = relay.var("var_6016", dtype = "float64", shape = (468, 1))#candidate|6016|(468, 1)|var|float64
output = func_6011(var_6012,var_6013,var_6014,var_6015,var_6016,)
func_6017 = relay.Function([var_6012,var_6013,var_6014,var_6015,var_6016,], output)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_6075 = func_5642_call()
call_6076 = func_5642_call()
var_6091 = relay.var("var_6091", dtype = "float64", shape = (16, 10, 14))#candidate|6091|(16, 10, 14)|var|float64
bop_6092 = relay.greater(call_6075.astype('bool'), var_6091.astype('bool')) # shape=(16, 10, 14)
bop_6095 = relay.greater(call_6076.astype('bool'), var_6091.astype('bool')) # shape=(16, 10, 14)
func_5861_call = mod.get_global_var('func_5861')
func_5863_call = mutated_mod.get_global_var('func_5863')
var_6114 = relay.var("var_6114", dtype = "float64", shape = (1176,))#candidate|6114|(1176,)|var|float64
call_6113 = relay.TupleGetItem(func_5861_call(relay.reshape(var_6114.astype('float64'), [1176,])), 2)
call_6115 = relay.TupleGetItem(func_5863_call(relay.reshape(var_6114.astype('float64'), [1176,])), 2)
func_3270_call = mod.get_global_var('func_3270')
func_3272_call = mutated_mod.get_global_var('func_3272')
call_6116 = relay.TupleGetItem(func_3270_call(relay.reshape(call_6113.astype('float64'), [1176,])), 2)
call_6117 = relay.TupleGetItem(func_3272_call(relay.reshape(call_6113.astype('float64'), [1176,])), 2)
output = relay.Tuple([bop_6092,call_6113,var_6114,call_6116,])
output2 = relay.Tuple([bop_6095,call_6115,var_6114,call_6117,])
func_6121 = relay.Function([var_6091,var_6114,], output)
mod['func_6121'] = func_6121
mod = relay.transform.InferType()(mod)
mutated_mod['func_6121'] = func_6121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6121_call = mutated_mod.get_global_var('func_6121')
var_6123 = relay.var("var_6123", dtype = "float64", shape = (16, 10, 14))#candidate|6123|(16, 10, 14)|var|float64
var_6124 = relay.var("var_6124", dtype = "float64", shape = (1176,))#candidate|6124|(1176,)|var|float64
call_6122 = func_6121_call(var_6123,var_6124,)
output = call_6122
func_6125 = relay.Function([var_6123,var_6124,], output)
mutated_mod['func_6125'] = func_6125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_6171 = relay.TupleGetItem(func_5463_call(), 0)
call_6172 = relay.TupleGetItem(func_5464_call(), 0)
uop_6173 = relay.sqrt(call_6171.astype('float32')) # shape=(1, 10, 14)
uop_6175 = relay.sqrt(call_6172.astype('float32')) # shape=(1, 10, 14)
output = uop_6173
output2 = uop_6175
func_6177 = relay.Function([], output)
mod['func_6177'] = func_6177
mod = relay.transform.InferType()(mod)
mutated_mod['func_6177'] = func_6177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mutated_mod.get_global_var('func_6177')
call_6178 = func_6177_call()
output = call_6178
func_6179 = relay.Function([], output)
mutated_mod['func_6179'] = func_6179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_6235 = func_5642_call()
call_6236 = func_5642_call()
output = call_6235
output2 = call_6236
func_6243 = relay.Function([], output)
mod['func_6243'] = func_6243
mod = relay.transform.InferType()(mod)
output = func_6243()
func_6244 = relay.Function([], output)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6179_call = mutated_mod.get_global_var('func_6179')
call_6276 = func_6177_call()
call_6277 = func_6177_call()
func_5888_call = mod.get_global_var('func_5888')
func_5891_call = mutated_mod.get_global_var('func_5891')
const_6282 = relay.const([-8.774894,6.700749,2.275789,6.473230,5.484406,-7.310321,4.105063,7.480634,-3.176388,-6.922571,2.824541,-0.487509,3.291225,7.873818,-1.936961,0.517576,-7.783655,-5.521153,2.675833,6.870301,0.925698,4.474140,-2.777801,-0.684161,7.322232,-9.519090,2.210777,-7.099847,-8.157381,1.127904,8.609558,-6.120435,-0.245745,-2.635619,-6.537864,-0.463082,1.167146,-6.438293,-1.325468,-8.727097,3.195182,-5.993260,0.843407,7.532672,-7.351792,-0.111300,4.832533,-0.323206,1.534859,9.758527,-1.708077,5.287158,-4.421741,4.322304,1.508090,-8.348589,-2.964604,8.198889,3.747033,-6.208670,8.874607,-4.612402,2.728092,-8.030786,7.430507,-7.342103,3.792192,4.272987,7.730516,-8.929436,-3.651541,0.628211,6.699660,-4.410246,0.388750,7.104834,5.552932,-4.597977,-7.019439,3.879221,-7.083111,4.994586,1.091105,2.267411,2.631727,6.880809,8.400403,-2.153272,4.960614,3.771776,1.298928,-5.493330,-8.945490,0.812157,5.338842,-9.542878,-0.732261,-1.362460,-1.961923,-2.968448,8.736535,8.936976,-5.608922,-0.236817,-0.430690,0.488739,-0.252869,-2.620940,-2.885994,4.059671,-4.789935,8.330281,1.826475,4.531662,-9.701172,9.024912,2.021607,-7.235467,-0.912509,-0.538680,-2.592193,3.395160,6.552008,-8.869979,1.445542,5.924061,5.855932,4.445980,-3.478392,5.515156,-2.292753,6.711972,9.789250,-0.782034,-8.026612,6.512130,-5.276855,5.173543,-2.792371,2.184530,8.849944,-0.813696,7.471660,5.224029,-4.068044,-9.093374,2.945036,-6.136811,2.208391,-9.806296,8.157845,8.657500,-6.397520,0.589493,-5.018313,2.149399,-8.846510,-1.281271,6.271969,7.901664,-9.685587,-8.398347,7.779492,0.105794,4.142536,-2.863080,8.195877,-4.463261,-1.060586,-3.640716,-1.537705,-5.718038,6.144659,3.885147,-8.941973,-5.636787,-8.159717,-5.910134,-9.028351,9.669067,-1.971004,-7.628069,0.582125,9.690289,0.345289,-0.608542,5.466558,-3.708464,5.389994,2.823372,-3.199935,2.020388,6.410483,9.664135,9.410320,2.486561,-6.355302,3.940301,1.638925,-1.999077,-6.145822,-6.107973,9.402689,5.728593,-1.710536,4.946911,-4.509254,-0.768179,-4.035213,9.008944,-3.115130,6.864489,2.015752,-5.450697,-4.511165,6.035158,2.396137,-4.413155,-4.574215,7.295267,4.970697,5.517573,1.890060,3.769496], dtype = "float32")#candidate|6282|(224,)|const|float32
call_6281 = relay.TupleGetItem(func_5888_call(relay.reshape(const_6282.astype('float32'), [8, 28])), 0)
call_6283 = relay.TupleGetItem(func_5891_call(relay.reshape(const_6282.astype('float32'), [8, 28])), 0)
output = relay.Tuple([call_6276,call_6281,const_6282,])
output2 = relay.Tuple([call_6277,call_6283,const_6282,])
func_6292 = relay.Function([], output)
mod['func_6292'] = func_6292
mod = relay.transform.InferType()(mod)
mutated_mod['func_6292'] = func_6292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6292_call = mutated_mod.get_global_var('func_6292')
call_6293 = func_6292_call()
output = call_6293
func_6294 = relay.Function([], output)
mutated_mod['func_6294'] = func_6294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_6399 = func_5642_call()
call_6400 = func_5642_call()
uop_6421 = relay.acosh(call_6399.astype('float32')) # shape=(1, 10, 14)
uop_6423 = relay.acosh(call_6400.astype('float32')) # shape=(1, 10, 14)
bop_6430 = relay.logical_and(uop_6421.astype('bool'), relay.reshape(call_6399.astype('bool'), relay.shape_of(uop_6421))) # shape=(1, 10, 14)
bop_6433 = relay.logical_and(uop_6423.astype('bool'), relay.reshape(call_6400.astype('bool'), relay.shape_of(uop_6423))) # shape=(1, 10, 14)
func_5686_call = mod.get_global_var('func_5686')
func_5687_call = mutated_mod.get_global_var('func_5687')
call_6438 = relay.TupleGetItem(func_5686_call(), 1)
call_6439 = relay.TupleGetItem(func_5687_call(), 1)
func_1947_call = mod.get_global_var('func_1947')
func_1949_call = mutated_mod.get_global_var('func_1949')
const_6444 = relay.const([-9.172944,-9.171412,1.812251,4.540719,2.597084,-3.392128,-4.756521,-4.931124,-6.346266,-7.474577,-5.181195,-0.764431,-4.892879,-7.082998,-5.923558,-0.208610,1.544966,-7.949229,-3.249689,6.356154,7.698640,-7.702212,-9.990175,-4.538195,-1.331316,6.635121,-7.090218,-3.526355,-7.774063,-2.451030,-7.232746,7.110630,-6.839613,-2.650539,4.624255,-5.870562,-6.224214,5.613099,3.776686,2.297549,-4.233531,0.491737,9.887266,9.535415,-8.755768,-1.886441,-0.189037,-1.147616,7.253420,7.558223,-6.968447,-8.476180,1.033193,-2.988151,0.198007,-2.368921,-8.452890,-7.527178,5.186884,1.482478,8.420686,-5.135334,9.153243,-4.580392,6.545168,-8.101958,-1.154078,-9.709179,-7.167748,-9.174218,7.302829,4.212209,-1.165269,6.314704,7.021400,-0.067466,-8.326494,4.028605,4.911282,-5.428639,0.973828,3.138454,4.014498,3.692775,-6.404744,0.009489,-8.908425,2.925920,-5.569693,-5.120974,-9.706216,9.556132,7.065296,-0.373688,-1.896601,-4.780757,9.216699,3.509075,0.947455,-2.274294,0.828550,2.575604,-5.455164,-4.451977,9.899711,7.713453,5.753269,-1.533231,6.557232,-0.340787,-8.027239,3.462987,-9.989979,-9.899953,-4.507625,9.757045,3.287718,1.675286,4.611412,-7.591166,0.663455,-5.760705,-0.531567,5.088263,-0.970880,-7.469687,-3.005914,-4.124320,-2.268150,8.227391,-0.441412,-1.450951,5.355378,6.746186,-5.241392,-2.612768,1.307571,-9.643776,7.214862,5.221185,6.170205,-0.186604,-4.167825,-0.732399,-3.327526,6.464618,-4.203390,-6.568583,3.161792,5.613433,6.004996,7.128425,-8.577690,1.831577,-5.812842,9.783035,-4.723173,7.308814,5.595040,6.355405,1.256237,-8.753569,4.856642,-2.227651,-5.192122,-7.256771,7.263986,4.605218,0.264390,6.278643,4.412215,-8.176011,1.899922,-4.896073,1.999952,-9.602269,-1.129043,5.914492,7.198195,9.737693,8.238935,3.160475,5.864624,-7.712985,0.697698,-1.805635,0.405443,-8.442363,7.891268,4.464439,6.771333,8.905481,-8.977127,8.913647,-6.367844,2.634189,-2.653507,-7.779485,4.251383,-4.240000,1.230663,-1.112110,7.866539,5.108578,8.788944,-3.111538,-9.457659,1.757604,-6.086270,-6.975280,6.316555,-2.043698,-3.827491,5.365380,2.276119,7.474013,5.791434,2.884860,-9.263543,3.903200,1.166334,-8.231589,6.615860,-6.873108,-0.324005,8.444784,9.307760,9.458893,-8.511678,2.673570,7.159247,-5.882544,-4.588132,3.964245,-5.052870,2.337312,-3.802127,1.861986,5.821195,3.311111,-2.349376,6.901407,-3.279440,-8.873123,8.297942,8.879388,-3.373113,7.962869,0.529112,1.648416,4.975076,-1.242049,5.019564,-5.001299,3.214646,-3.477362,-8.007161,5.397320,0.420359,8.704336,-1.018282,7.870832,0.461176,1.557246,3.826096,-0.117343,7.831258,3.210084,0.936588,6.703948,0.103566,-4.951021,4.369496,4.098776,1.790546,-9.977576,0.577879,-3.822484,-2.041870,8.283785,6.898994,9.192180,-0.195985,7.154804,-4.346407,4.613264,-0.839771,3.904339,8.282981,-9.068455,4.383383,-2.685943,-7.345372,3.655114,7.990450,7.043800,2.062147,6.171764,6.732999,7.987455,-0.815539,4.523395,-7.116774,-1.325282,3.962275,0.021089,0.214341,1.412229,-3.943108,4.184373,-0.063999,-0.057502,0.132859,8.596185,-1.903133,-6.087037,7.310930,-1.395124,-4.459543,-0.846069,1.681077,-2.274691,2.552730,0.529808,9.799197,8.783234,2.692802,0.042849,-3.435037,9.026043,0.403967,4.977773,1.911483,-6.461132,-5.503345,-3.579807,-9.558921,8.269876,-0.044964,-6.084412,2.486094,6.712301,2.357848,3.054441,-6.350563,0.678333,-8.145755,-9.617712,-8.693603,0.840551,2.365104,-8.485615,-1.916544,-4.225329,-8.481253,-2.264185,-1.135373,-4.329498,-6.594176,3.948194,-0.063631,-2.064284,1.622554,7.091380,-4.635367,4.992948,-0.789059,5.047892,4.299563,9.842202,-7.253231,9.235450,-5.655444,1.702763,2.270756,0.785040,8.149943,-7.184778,-1.389808,-2.904166,-6.970739,2.202040,0.554944,7.119045,-2.124674,4.062312,3.576904,4.565099,-7.550435,-8.332854,-3.587296,-2.681973,-9.183765,-2.092239,-2.019683,9.143835,-0.655501,2.228231,1.107891,-8.563216,0.479090,8.092788,-3.725804,-8.461409,5.526443,-5.268023,-6.777062,0.911987,8.032076,-9.288689,-6.945228,-7.742834,-7.592083,-5.693807,1.888743,2.031670,-8.204766,3.310875,9.333379,-6.873540,-6.782952,-8.704665,7.928528,9.053926,-4.125019,-2.929473,7.788306,8.012898,-7.862734,-9.082510,3.464443,-4.127278,-6.731370,-8.452508,-2.330535,-0.927613,-4.996732,5.876940,-3.209753,-6.710521,-0.765358,0.824649,-8.208270,5.737538,-5.579882,-2.418817,8.558620,-9.941195,-3.392503,-8.286772,8.242376,9.528851,2.219770,9.456639,-0.319703,-0.958329,-1.994665,-5.021844,6.378089,9.223115,7.568769,9.751049,-2.977782,-4.696878,-0.632646,7.844065,4.809976,6.856585,-8.086203,-3.033073,9.422240,2.991926,-1.823694,-2.082042,-0.502633,-6.592926,7.696245,-7.117775,7.241046,-9.981801,2.225581,8.035631,-0.316420,-5.098690,7.146566,6.322461,4.804809,-3.244018,5.009692,4.496147,-1.416299,3.358490,1.675447,5.542463,9.525481,8.991089,-2.424028,2.319645,7.882155,2.477042,4.169655,4.523072,1.930965,-1.944282,-0.588346,-9.958131,3.934234,-5.822784,-9.831437,9.932684,0.400627,-3.595270,7.020702,4.201723,0.410239,2.718346,6.699826,-6.624872,-1.331934,1.415447,-1.495890,1.364998,-1.108356,5.031089,-9.067972,-0.694982,0.441831,6.307104,-4.402524,5.457437,0.779969,-5.885297,-1.889221,1.573726,-6.448153,0.109026,0.896919,-2.063654,4.946187,-3.918474,1.282253,4.963224,5.590930,3.624459,9.838132,-7.680502,-3.959877,-7.804464,9.077307,8.411158,-5.854972,-9.481584,-4.274388,4.894255,-3.022423,6.616999,-9.874791,-6.013400,6.395002,-9.710487,0.166333,8.520276,6.382925,-5.087501,6.480170,-4.960429,-1.971510,5.835657,-3.306828,-3.421878,-9.381379,-3.759167,8.696377,2.027379,-7.667824,1.700216,-9.583736,6.594701,-9.886420,-9.671155,-0.162856,-9.024592,8.134059,9.845406,-7.385975,3.241609,8.712944,-0.542835,-2.290111,5.632203,7.828111,-7.078427,6.281858,9.415889,4.520948,0.980139,7.321756,0.077078,-4.404588,-2.025866,-0.866997,7.092812,4.138589,-3.435231,6.487735,-5.277146,1.242653,-6.138875,1.559505,-6.729916,7.691724,-3.671669,9.066218,-4.454894,-9.380638,6.694539,-1.751123,-4.375106,-3.363052,2.736265,-2.003214,-7.984192,0.631284,-7.879085,-0.426330,2.151912,-5.343296,-4.620096,2.675113,3.949871,3.138553,4.030006,-8.650121,4.083241,-5.690486,-2.352769,0.308085,-5.715748,-7.568268,5.196776,-0.052530,-0.225841,-6.682617,-7.321261,8.532170,9.813770,-6.294066,-0.966271,-3.353757,2.915182,3.682109,7.036255,-0.338805,8.098036,-0.315735,-9.409262,5.829236,8.521546,1.837239,-2.247088,-7.685459,-2.414481,-4.848610,6.943256,-5.658302,4.839384,-5.756871,-0.068474,9.054134,3.444588,-2.128412,-3.212702,8.181734,5.729988,5.938245,6.488583,1.048056,2.044424,9.318107,-9.092391,0.694552,2.395047,-1.285559,9.693313,7.947897,6.499966,-1.657255,9.084494,-3.211204,-8.128672,-1.458513,9.881592,1.943010,8.703005,8.045903,1.511736,-9.932517,-1.281588,-4.521089,-4.765321,1.268914,-2.450135,8.932812,0.328316,-1.546037,3.331959,9.170227,6.043617,9.044768,9.242961,-6.875274,-8.504507,5.236788,-6.716670,-9.498646,9.763448,-1.720657,6.770820,-1.434070,3.650298,-8.197309,4.524868,1.709948,9.188792,-7.429915,9.468387,3.048989,5.080635,3.115770,-0.278720,-2.225512,6.478486,2.097989,-4.917816,7.224642,2.540032,-1.175459,7.659287,2.357913,7.559457,-7.303294,-0.454810,-4.960107,-7.022103,8.160621,0.577264,3.508974,4.998836,6.359297,-2.814578,3.384103,-7.171971,-7.662976,-1.279022,-2.284734,5.098046,-7.660040,-0.822544,9.708658,-2.157353,-1.372899,-5.419820,-7.727926,-0.873275,4.197875,-1.809078,-8.934184,4.400916,2.402622,-3.398081,4.599892,-8.051484,-6.575851,-0.544165,6.245675,-2.609720,-5.416547,1.579001,-8.853639,-0.547883,-7.518295,7.042913,1.618901,-7.485799,-3.981362,2.188138,-5.942043,1.927549,-4.010886,1.036570,0.753900,0.149870,-9.932804,-9.536130,0.062808,9.903882,-2.548572,-1.401003,7.389098,-5.628860,-4.788426,1.934783,9.232210,7.700885,-5.002338,1.816463,-9.963292,4.607449,-9.558531,-4.150801,-7.062141,8.782045,-8.835613,-0.113675,-0.703254,0.627236,-7.815370,-9.213113,7.135602,-5.280560,-2.552026,1.398101,-0.724176,0.784745,7.103746,-2.730053,4.475922,-5.976162,-1.086422,8.679325,7.320857,2.298840,0.726342,3.036143,9.936043,-2.408398,8.945175,-8.073570,-3.530905,-4.093062,2.013787,8.893116,0.098368,-4.519362,4.441646,-8.089632,-1.001864,-7.404710,5.072391,9.024101,2.965715,-5.509355,0.537014,0.547208,5.709618,9.962630,-8.948953,2.350198,-6.944650,2.520952,-9.634252,-7.777365,3.486861,-2.822297,-1.533666,4.317960,-9.940706,1.342710,2.430740,7.482788,-7.773908,7.645842,-0.271706,-0.805206,8.610597,-9.247114,-7.779873,-9.198638,2.682144,-5.976884,-3.170245,-8.630558,-7.273564,6.847205,-3.241924,-3.157062,3.995083,5.814763,-5.013548,4.849883,-9.965718,1.399036,-1.304536,-6.747739,0.594529,-6.831421,7.037024,-4.660848,-6.300810,7.413440,-8.779698,4.668438,0.670084,0.903304,7.283569,0.340489,-2.811878,-8.213844,9.142181,2.286114,3.434688,-8.425962,-3.975877,-6.034622,-5.393210,7.362312,7.505849,2.906529,1.328207,8.314349,5.667081,-0.895609,0.523528,-7.411326,-8.762871,8.987362,7.402432,-8.949992,-2.724941,-0.343101,-3.101649,-1.334114,7.132535,-3.598220,-9.029565,9.274788,2.451109,-1.373233,-5.500660,6.931074,-7.639536,-4.057153,-5.885177,5.921140,-5.268685,-7.989453,2.991503,-7.959028,-5.552605,8.845027,-4.017216,-1.307221,5.634542,3.871565,7.031392,-3.363022,5.969175,-2.365007,6.024673,9.241777,5.113454,-0.892364,-7.449815,2.474241,8.963636,4.634551,9.454299,4.611651,-0.523128,-9.093347,5.316516,6.231031,-3.830719,6.683165,2.353104,2.268326,-2.225832,6.065887,-4.098233,1.951567,-0.655812,-2.192319,-3.569986,-1.628427,-9.441899,-2.050134,6.908916,-5.927616,1.576488,2.797529,-7.780779,-8.017478,-8.611061,8.205719,-1.128419,-6.041051,-7.185319,2.461383,1.921006,9.927286,-4.525725,6.822040,-4.587804,0.142374,1.385290,-0.434278,2.946960,-0.246115,3.710039,9.809124,-0.864723,-1.084605,-7.602367,3.687257,7.812241,6.093101,8.109221,6.837462,-1.620554,7.017418,8.884606,-6.669039,-7.467517,-2.010420,-1.413662,-6.511545,7.142648,2.575666,-5.467348,4.857258,-5.293518,2.799426,-9.288376,4.874631,-2.335653,-2.477189,-1.789962,-7.762508,-9.484296,-5.428394,-4.575318,0.831292,4.821103,4.632877,-1.101384,5.870935,7.086097,-7.066556,7.293026,3.251182,-4.071941,9.973782,-5.281772,-7.522517,-8.844965,5.435408,1.348958,6.957934,-5.553473,-3.880428,3.018481,7.138768,-2.264198,-8.328800,1.980885,8.453436,-7.740431,-7.095756,1.798673,1.932276,-8.737828,-7.418477,1.386817,-7.971617,3.648971,-1.677928,9.731159,6.776380,0.467134,1.289916,6.536122,3.825728,-0.262048,-5.667732,-9.431063,6.916566,5.352094,-0.781885,2.734726,-6.564007,4.470394,-7.358775,-1.063915,-0.356305,6.199551,-2.493543,8.721856,-0.389710,7.135539,4.231276,-0.188145,-1.798896,-4.665272,2.196641,-6.426128,-9.788276,-3.585153,-9.736406,8.473523,9.010177,-9.799904,0.238602,8.192264,4.465519,4.905833,-5.309240,-3.572411,4.768714,7.807755,-9.669777,-1.225164,7.721391,0.392786,6.111599,-3.126217,-8.769577,-3.628447,-7.740615,9.672510,-6.731341,-5.884790,3.234062,-4.391945,-5.886116,5.727025,1.918657,8.444504,-2.976138,-9.939190,4.604698,-1.277166,9.251717,-9.131005,-8.145742,-4.317677,-2.512083,6.388901,2.145397,-1.572248,4.947682,-6.410926,6.172999,8.085013,2.960093,7.707139,2.816937,-9.827028,-3.215452,-4.484237,-9.282623,6.613313,-4.710590,-9.981564,-6.116286,5.449572,-4.773651,-1.639319,6.763180,-8.695379,6.620121,-5.530628,0.743975,-8.368688,9.262061,9.759576,9.863193], dtype = "float64")#candidate|6444|(1176,)|const|float64
call_6443 = relay.TupleGetItem(func_1947_call(relay.reshape(const_6444.astype('float64'), [14, 6, 14])), 0)
call_6445 = relay.TupleGetItem(func_1949_call(relay.reshape(const_6444.astype('float64'), [14, 6, 14])), 0)
bop_6446 = relay.bitwise_or(uop_6421.astype('int16'), relay.reshape(bop_6430.astype('int16'), relay.shape_of(uop_6421))) # shape=(1, 10, 14)
bop_6449 = relay.bitwise_or(uop_6423.astype('int16'), relay.reshape(bop_6433.astype('int16'), relay.shape_of(uop_6423))) # shape=(1, 10, 14)
uop_6451 = relay.erf(call_6443.astype('float64')) # shape=(14, 6, 14)
uop_6453 = relay.erf(call_6445.astype('float64')) # shape=(14, 6, 14)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_6469 = func_5642_call()
call_6470 = func_5642_call()
output = relay.Tuple([call_6438,const_6444,bop_6446,uop_6451,call_6469,])
output2 = relay.Tuple([call_6439,const_6444,bop_6449,uop_6453,call_6470,])
func_6475 = relay.Function([], output)
mod['func_6475'] = func_6475
mod = relay.transform.InferType()(mod)
output = func_6475()
func_6476 = relay.Function([], output)
mutated_mod['func_6476'] = func_6476
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6599 = relay.var("var_6599", dtype = "float32", shape = (15, 10, 4))#candidate|6599|(15, 10, 4)|var|float32
uop_6600 = relay.asin(var_6599.astype('float32')) # shape=(15, 10, 4)
func_3934_call = mod.get_global_var('func_3934')
func_3936_call = mutated_mod.get_global_var('func_3936')
const_6627 = relay.const([-3.243106,5.197515,9.811411,-9.811838,0.861309,6.242826,-4.609778,-5.147516,-6.392432,7.510168,-0.983059,3.427959,-6.807653,4.567066,4.168764,5.320258,-2.020588,3.286951,-7.531709,2.424986,3.456618,-6.901473,8.640006,1.806799,-6.867052,6.920268,-1.673379], dtype = "float32")#candidate|6627|(27,)|const|float32
call_6626 = relay.TupleGetItem(func_3934_call(relay.reshape(const_6627.astype('float32'), [9, 1, 3])), 7)
call_6628 = relay.TupleGetItem(func_3936_call(relay.reshape(const_6627.astype('float32'), [9, 1, 3])), 7)
func_1094_call = mod.get_global_var('func_1094')
func_1097_call = mutated_mod.get_global_var('func_1097')
call_6639 = relay.TupleGetItem(func_1094_call(relay.reshape(call_6626.astype('float32'), [10, 7, 1])), 0)
call_6640 = relay.TupleGetItem(func_1097_call(relay.reshape(call_6626.astype('float32'), [10, 7, 1])), 0)
func_4613_call = mod.get_global_var('func_4613')
func_4615_call = mutated_mod.get_global_var('func_4615')
var_6642 = relay.var("var_6642", dtype = "float64", shape = (686,))#candidate|6642|(686,)|var|float64
call_6641 = relay.TupleGetItem(func_4613_call(relay.reshape(var_6642.astype('float64'), [14, 7, 7])), 2)
call_6643 = relay.TupleGetItem(func_4615_call(relay.reshape(var_6642.astype('float64'), [14, 7, 7])), 2)
output = relay.Tuple([uop_6600,call_6626,const_6627,call_6639,call_6641,var_6642,])
output2 = relay.Tuple([uop_6600,call_6628,const_6627,call_6640,call_6643,var_6642,])
func_6649 = relay.Function([var_6599,var_6642,], output)
mod['func_6649'] = func_6649
mod = relay.transform.InferType()(mod)
var_6650 = relay.var("var_6650", dtype = "float32", shape = (15, 10, 4))#candidate|6650|(15, 10, 4)|var|float32
var_6651 = relay.var("var_6651", dtype = "float64", shape = (686,))#candidate|6651|(686,)|var|float64
output = func_6649(var_6650,var_6651,)
func_6652 = relay.Function([var_6650,var_6651,], output)
mutated_mod['func_6652'] = func_6652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6475_call = mod.get_global_var('func_6475')
func_6476_call = mutated_mod.get_global_var('func_6476')
call_6674 = relay.TupleGetItem(func_6475_call(), 4)
call_6675 = relay.TupleGetItem(func_6476_call(), 4)
uop_6676 = relay.rsqrt(call_6674.astype('float32')) # shape=(1, 10, 14)
uop_6678 = relay.rsqrt(call_6675.astype('float32')) # shape=(1, 10, 14)
bop_6690 = relay.greater(uop_6676.astype('bool'), relay.reshape(call_6674.astype('bool'), relay.shape_of(uop_6676))) # shape=(1, 10, 14)
bop_6693 = relay.greater(uop_6678.astype('bool'), relay.reshape(call_6675.astype('bool'), relay.shape_of(uop_6678))) # shape=(1, 10, 14)
output = bop_6690
output2 = bop_6693
func_6695 = relay.Function([], output)
mod['func_6695'] = func_6695
mod = relay.transform.InferType()(mod)
output = func_6695()
func_6696 = relay.Function([], output)
mutated_mod['func_6696'] = func_6696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6475_call = mod.get_global_var('func_6475')
func_6476_call = mutated_mod.get_global_var('func_6476')
call_6732 = relay.TupleGetItem(func_6475_call(), 2)
call_6733 = relay.TupleGetItem(func_6476_call(), 2)
var_6750 = relay.var("var_6750", dtype = "int16", shape = (3, 10, 14))#candidate|6750|(3, 10, 14)|var|int16
bop_6751 = relay.not_equal(call_6732.astype('bool'), var_6750.astype('bool')) # shape=(3, 10, 14)
bop_6754 = relay.not_equal(call_6733.astype('bool'), var_6750.astype('bool')) # shape=(3, 10, 14)
output = bop_6751
output2 = bop_6754
func_6755 = relay.Function([var_6750,], output)
mod['func_6755'] = func_6755
mod = relay.transform.InferType()(mod)
var_6756 = relay.var("var_6756", dtype = "int16", shape = (3, 10, 14))#candidate|6756|(3, 10, 14)|var|int16
output = func_6755(var_6756)
func_6757 = relay.Function([var_6756], output)
mutated_mod['func_6757'] = func_6757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_6805 = func_5642_call()
call_6806 = func_5642_call()
output = call_6805
output2 = call_6806
func_6831 = relay.Function([], output)
mod['func_6831'] = func_6831
mod = relay.transform.InferType()(mod)
output = func_6831()
func_6832 = relay.Function([], output)
mutated_mod['func_6832'] = func_6832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_6833 = func_5642_call()
call_6834 = func_5642_call()
func_4125_call = mod.get_global_var('func_4125')
func_4129_call = mutated_mod.get_global_var('func_4129')
var_6845 = relay.var("var_6845", dtype = "bool", shape = ())#candidate|6845|()|var|bool
const_6846 = relay.const([True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,False], dtype = "bool")#candidate|6846|(990,)|const|bool
call_6844 = relay.TupleGetItem(func_4125_call(relay.reshape(var_6845.astype('bool'), []), relay.reshape(const_6846.astype('bool'), [11, 15, 6]), ), 0)
call_6847 = relay.TupleGetItem(func_4129_call(relay.reshape(var_6845.astype('bool'), []), relay.reshape(const_6846.astype('bool'), [11, 15, 6]), ), 0)
func_5861_call = mod.get_global_var('func_5861')
func_5863_call = mutated_mod.get_global_var('func_5863')
var_6882 = relay.var("var_6882", dtype = "float64", shape = (1176,))#candidate|6882|(1176,)|var|float64
call_6881 = relay.TupleGetItem(func_5861_call(relay.reshape(var_6882.astype('float64'), [1176,])), 2)
call_6883 = relay.TupleGetItem(func_5863_call(relay.reshape(var_6882.astype('float64'), [1176,])), 2)
output = relay.Tuple([call_6833,call_6844,var_6845,const_6846,call_6881,var_6882,])
output2 = relay.Tuple([call_6834,call_6847,var_6845,const_6846,call_6883,var_6882,])
func_6891 = relay.Function([var_6845,var_6882,], output)
mod['func_6891'] = func_6891
mod = relay.transform.InferType()(mod)
var_6892 = relay.var("var_6892", dtype = "bool", shape = ())#candidate|6892|()|var|bool
var_6893 = relay.var("var_6893", dtype = "float64", shape = (1176,))#candidate|6893|(1176,)|var|float64
output = func_6891(var_6892,var_6893,)
func_6894 = relay.Function([var_6892,var_6893,], output)
mutated_mod['func_6894'] = func_6894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6922 = relay.var("var_6922", dtype = "float32", shape = (5, 4, 13))#candidate|6922|(5, 4, 13)|var|float32
uop_6923 = relay.cos(var_6922.astype('float32')) # shape=(5, 4, 13)
func_6292_call = mod.get_global_var('func_6292')
func_6294_call = mutated_mod.get_global_var('func_6294')
call_6934 = relay.TupleGetItem(func_6292_call(), 0)
call_6935 = relay.TupleGetItem(func_6294_call(), 0)
func_6475_call = mod.get_global_var('func_6475')
func_6476_call = mutated_mod.get_global_var('func_6476')
call_6942 = relay.TupleGetItem(func_6475_call(), 4)
call_6943 = relay.TupleGetItem(func_6476_call(), 4)
uop_6961 = relay.acos(var_6922.astype('float64')) # shape=(5, 4, 13)
output = relay.Tuple([uop_6923,call_6934,call_6942,uop_6961,])
output2 = relay.Tuple([uop_6923,call_6935,call_6943,uop_6961,])
func_6985 = relay.Function([var_6922,], output)
mod['func_6985'] = func_6985
mod = relay.transform.InferType()(mod)
var_6986 = relay.var("var_6986", dtype = "float32", shape = (5, 4, 13))#candidate|6986|(5, 4, 13)|var|float32
output = func_6985(var_6986)
func_6987 = relay.Function([var_6986], output)
mutated_mod['func_6987'] = func_6987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_7023 = func_5642_call()
call_7024 = func_5642_call()
const_7029 = relay.constdtype = "float64")#candidate|7029|(12, 10, 14)|const|float64
bop_7030 = relay.divide(call_7023.astype('float32'), const_7029.astype('float32')) # shape=(12, 10, 14)
bop_7033 = relay.divide(call_7024.astype('float32'), const_7029.astype('float32')) # shape=(12, 10, 14)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
const_7035 = relay.const([1.866457,9.173510,2.239379,1.775339,-4.556759,-7.853988,-6.014955,5.392202,6.610709,8.414859,-0.263685,0.412649,-0.042020,7.186759,2.442597,-0.499294,-6.624305,4.137757,-7.322808,-1.173531,6.971109,-4.935811,1.578434,3.279599,-2.110410,-3.022130,-0.692459,4.350584,1.038274,-7.813586,0.521308,3.798290,-5.722267,-7.974199,4.641546,6.895788,3.569228,-3.320249,1.567950,-9.554694,-0.102479,0.511200,-0.408008,-6.551527,8.274854,-7.461276,6.489226,-0.083419,-2.485363,-7.124540,4.551761,9.944459,6.020811,-4.635936,5.940094,-9.665899,8.267849,-5.087072,7.702097,5.243455,-9.998568,3.437167,8.967572,8.005804,-6.914256,7.624256,-8.573033,1.678972,5.713470,-5.838492,-9.354122,-1.707611,-6.809746,5.112330,4.635909,-4.049771,-4.273022,2.689739,0.012470,7.794269,3.255360,-1.464259,5.422499,1.303584,9.088017,-5.084269,1.847533,8.908588,3.722803,8.782985,6.809671,-1.675561,7.917842,5.833886,9.126899,2.103465,3.391002,-0.440473,3.713770,5.950657,7.467229,-0.048814,6.945581,5.503267,-9.596361,3.527762,-5.926840,7.172529,-8.607902,8.868415,4.156068,-7.839233,-2.579544,-0.198207,-7.038129,-6.792861,4.051332,-9.192273,-8.893143,3.173135,-0.753962,-3.204599,6.922847,7.584800,-2.350406,4.649192,5.691070,-4.692416,-9.308321,2.605903,5.674351,-6.286528,-3.338443,3.501253,-3.032271,5.188166,8.098808,-2.033150,8.511158,-8.576926,-3.446095,6.055558,5.646921,9.117209,-6.522635,4.582672,-9.890190,-1.568463,-8.720275,5.997902,1.979664,-9.847217,-5.407953,3.065083,-7.965252,2.437600,7.998517,-6.231105,-7.118990,-7.039497,-6.898049,-2.096150,9.682792,6.047735,-3.864522,9.006708,4.752013,0.676452,-8.498851,4.380015,-2.943693,2.251456,1.309410,4.566678,8.205107,1.749530,7.026652,-1.160603,-6.726733,-4.263328,-6.872378,-4.042617,0.911650,9.157718,-0.414904,-2.066458,3.264805,-8.131034,7.296338,-2.656848,4.181629,-5.397879,-4.693386,-9.337819,-7.639117,6.694464,-2.924074,-2.455444,3.201253,2.985342,-4.190408,4.381314,9.898311,5.243873,9.466768,0.106448,1.345481,5.296379,-4.126303,-4.776477,-0.731571,5.583062,-7.980023,0.498096,6.271901,7.149385,-2.321716,6.234762,1.724203,4.570314,-7.430091,2.478670,-7.977402,7.565868], dtype = "float32")#candidate|7035|(224,)|const|float32
call_7034 = func_1147_call(relay.reshape(const_7035.astype('float32'), [1, 14, 16]))
call_7036 = func_1147_call(relay.reshape(const_7035.astype('float32'), [1, 14, 16]))
var_7039 = relay.var("var_7039", dtype = "float64", shape = (12, 10, 14))#candidate|7039|(12, 10, 14)|var|float64
bop_7040 = relay.logical_xor(const_7029.astype('uint64'), relay.reshape(var_7039.astype('uint64'), relay.shape_of(const_7029))) # shape=(12, 10, 14)
func_6243_call = mod.get_global_var('func_6243')
func_6244_call = mutated_mod.get_global_var('func_6244')
call_7046 = func_6243_call()
call_7047 = func_6243_call()
func_1947_call = mod.get_global_var('func_1947')
func_1949_call = mutated_mod.get_global_var('func_1949')
var_7050 = relay.var("var_7050", dtype = "float64", shape = (1176,))#candidate|7050|(1176,)|var|float64
call_7049 = relay.TupleGetItem(func_1947_call(relay.reshape(var_7050.astype('float64'), [14, 6, 14])), 0)
call_7051 = relay.TupleGetItem(func_1949_call(relay.reshape(var_7050.astype('float64'), [14, 6, 14])), 0)
func_6755_call = mod.get_global_var('func_6755')
func_6757_call = mutated_mod.get_global_var('func_6757')
var_7053 = relay.var("var_7053", dtype = "int16", shape = (1, 420))#candidate|7053|(1, 420)|var|int16
call_7052 = func_6755_call(relay.reshape(var_7053.astype('int16'), [3, 10, 14]))
call_7054 = func_6755_call(relay.reshape(var_7053.astype('int16'), [3, 10, 14]))
const_7060 = relay.const([-0.513997,-0.485132,-8.558311,7.097050,-5.753763,-9.881831,-9.626815,-5.559002,-8.351880,0.044052,5.511423,-1.716747,-7.898055,5.121219,5.461601,-4.223523,-4.004236,1.250256,-8.483022,-2.291512,-7.293651,-0.703580,-9.149285,-0.318169,-9.673176,-2.089070,-3.041191,9.996553,-5.023351,6.172733,0.764962,5.460268,-5.386074,6.558386,-7.509712,-1.977330,-3.777816,8.951716,8.526314,3.739157,3.550741,2.659120,-8.856871,-6.762163,7.535700,-6.831131,0.170169,-0.104281,-2.370190,0.231140,-6.719768,-6.698510,-6.073786,4.306186,0.816482,0.455371,-5.579843,-8.185627,8.882942,-0.948918,-7.018559,-5.060927,-9.229644,9.579179,-7.744993,4.522212,-4.531446,1.538758,0.072370,-1.483415,4.619625,0.143699,-5.629810,4.676305,4.325735,-5.041904,-1.944105,2.302384,-7.161737,-1.315569,2.862830,9.085700,6.429280,3.348375,7.513074,3.675335,4.215580,4.638999,-3.526893,-2.102448,-3.135744,3.247072,9.091968,2.859246,9.901525,-7.878208,-7.349810,5.404274,-6.033869,-4.815670,-8.299818,-5.047662,9.387302,-7.505468,-0.811532,2.204561,1.027276,-0.080050,3.729012,-5.468758,9.974087,-4.984374,-7.983002,5.882042,-5.981251,5.951574,4.833525,-9.668252,9.289703,-1.170619,3.026121,-7.778178,-3.180737,3.869222,-3.271967,-0.284627,-7.123444,0.381857,-6.610146,9.234889,3.530698,-3.365937,8.103609,8.092760,2.778129,-8.723658,1.321669,0.960073,7.142396,7.258934,7.611624,6.723222,-7.344194,-3.189471,3.868157,9.445866,-8.090574,9.531427,3.200587,-3.883837,-3.651528,2.698868,6.825106,6.772926,-5.326971,6.302361,7.200191,8.647648,0.253282,-2.587058,-6.147906,3.986816,5.823968,-7.426075,7.229502,2.774170,7.210010,5.177016,-6.981118,-7.731995,-6.006177,-0.731191,-6.229220,6.881228,2.132170,4.618442,-7.835460,1.839439,3.272096,-7.620527,-3.745792,3.761071,-9.501341,6.773739,1.504767,9.126074,5.343083,0.509664,-9.742144,3.655774,0.308774,5.196904,-7.893365,9.611246,-3.966213,-8.289103,-6.752204,-1.056705,2.236569,3.968914,3.451663,-6.645687,-6.509762,3.882276,-4.995026,-8.761598,6.935355,8.251586,-1.087292,2.131801,-0.697217,-9.090615,5.778522,-6.699889,-3.094456,-7.174026,-9.155694,-7.210089,-7.317209,0.034833,-9.424356,-7.875049,9.937201,7.620445,5.938451,-6.929111,1.772219,-2.352944,-2.281273,0.644646,-5.736559,-7.359937,-3.121673,4.981241,-9.268910,1.517769,-9.950780,-0.709591,-7.943987,-4.844328,1.107348,8.033844,3.114327,1.941483,-3.452233,-8.672868,-4.141366,-3.178427,0.696799,-7.743838,-7.121866,-6.980597,5.282285,5.500299,7.807453,5.785732,-3.754245,4.344205,-0.154337,3.706274,0.775492,7.042892,4.900741,-2.659388,0.755349,-5.681925,-4.119102,9.050237,-3.564341,9.365128,-8.228251,-9.128311,-8.505852,-8.205667,-6.433589,4.024175,4.980706,-6.717906,-7.273866,6.798111,1.743816,-1.782133,-7.913745,8.708238,-1.852625,-6.434170,-1.444937,7.697097,-8.833509,5.762521,-3.258108,-4.848821,-5.908320,-0.561331,4.159925,-2.892061,3.080020,0.169995,-7.195413,-7.992102,0.961324,7.448496,9.250012,-9.714089,-2.787174,9.540706,9.814564,-1.632436,-5.504828,-5.252551,-1.736659,-1.629801,5.709498,-8.865352,-8.869238,-2.832944,9.701942,9.910369,5.349253,7.245212,-1.182151,-4.555528,-7.978372,5.452370,6.000243,0.755179,-5.827030,5.208661,9.421315,-7.295594,4.681776,5.142252,-2.486174,9.400304,2.311413,-5.676577,5.488447,9.581138,6.196792,-3.626543,-7.891948,9.319575,7.308679,5.483473,-3.805161,3.677238,-9.288360,-4.992427,9.278903,-2.756343,-6.199031,-4.539256,4.145322,-2.314836,-0.163443,2.745931,-3.968023,-5.183207,-1.900097,-6.635905,8.466228,-4.437919,-2.977167,-6.779012,-7.012015,-1.091506,0.001417,5.854922,-4.125748,-6.042564,-6.091765,-3.905080,-3.822354,6.035612,-1.526362,0.991027,5.940678,0.014085,-4.886238,0.367599,1.467171,-3.604028,2.178469,5.285792,1.829475,-9.197543,-3.546284,-4.589646,0.704645,0.543830,1.031730,5.762693,-5.431906,-2.107433,2.678247,5.084956,-7.613453,4.288640,7.054323,2.178595,-1.366868,3.410664,-0.775541,2.080169,2.570228,5.765203,2.745902,3.120125,-3.786319,6.220085,7.104845,-1.989150,-7.693215,6.530983,-2.662254,-6.943109,6.089201,2.369987,3.282967,5.350046,2.198958,3.082856,-5.068555,-3.299486,-7.063642,-8.106406,0.265995,0.782201,-8.252125,1.234937,-9.874703,-2.703950,5.919692,5.405299,-8.079351,7.701741,-5.387818,1.633063,0.991447,0.401441,7.087691,-6.844642,-5.869136,-9.838115,-9.383607,4.143532,1.125080,-7.333610,-1.158894,0.426032,3.992402,-7.692002,3.696009,-8.305392,-1.026844,-1.024013,8.189811,-7.992947,0.390011,-0.423352,-4.973863,-1.602287,8.892195,2.907593,-9.739129,5.012332,7.515035,1.708789,9.157656,-6.739798,2.572608,1.240122,7.177631,-8.325087,-4.285412,-4.209490,5.503560,-6.445490,-5.102833,-5.317348,-2.462943,-4.932151,6.681176,-1.569940,9.434866,-0.980921,1.283601,0.312783,2.841679,6.345203,-4.434567,8.014675,-5.788874,7.040602,4.955321,-7.330190,1.515447,0.363384,-2.138758,0.757385,-5.854164,3.468313,4.079479,-7.721231,-8.063462,-0.269397,-5.242417,-4.946610,8.308352,7.129179,9.810995,-9.935853,-5.379002,-2.879161,9.181534,-0.147405,2.758030,8.409246,-4.391381,-4.584908,-1.218602,9.824471,-7.247997,1.507429,8.665220,-9.226311,-0.898649,2.346849,-9.378432,-0.811706,3.667881,-1.174776,-4.783193,0.788335,9.068976,2.468735,-7.181037,-4.329147,8.180594,-3.814874,-0.848389,3.561157,8.228916,9.766897,-6.948018,2.250004,-7.404790,8.959501,-8.437494,0.421790,-4.350716,3.531398,-3.900666,3.289905,2.417261,-3.871796,-8.238414,4.229611,9.785846,0.602288,-2.359701,8.170219,-0.227465,3.124753,-9.271122,0.095167,6.123150,8.866597,-9.460243,9.276315,5.691032,-6.863302,-0.069791,7.623368,-4.151125,3.127934,-3.303938,-2.268583,9.394609,7.262794,-2.171654,-3.843349,1.940860,2.176457,-0.704343,8.237046,0.918004,2.179400,8.065993,3.043198,-6.707455,-4.094389,1.645487,6.988222,-3.417387,-4.245399,9.094904,4.127983,2.203683,0.284546,1.245761,3.853479,-4.522531,-3.943677,8.567125,1.868432,3.780209,-8.046514,-0.029758,5.362811,-2.869621,-5.552961,8.459142,-9.512983,-8.266585,-8.494021,6.803907,-9.793705,3.037112,9.427603,-4.418609,-0.458289,8.581669,2.623899,-1.052673,-1.908316,-2.103390,6.234051,-1.850036,-7.688343,7.644779,9.379123,-5.932350,-9.489833,-8.016715,6.079320,-1.818206,-7.402987,-1.771636,-3.850238,4.087330,-2.045131,7.669027,9.351978,9.219940,-9.176684,-6.312699,6.003801,-8.780964,-1.901231,-5.525664,6.666515,6.280096,-1.171341,4.873324,3.632962,5.915371,4.839713,3.864801,5.541464,-8.492130,1.914903,9.695447,-3.426428,-3.747055,-6.227062,-0.823251,8.409233,-9.936248,8.601638,-9.194824,-0.201953,-2.445178,-6.739712,-2.808406,7.872371,-6.656824,3.199868,1.811969,0.215422,6.112241,-9.861457,0.440166,6.974145,9.698636,-3.631340,3.539368,-3.870471,-9.915689,5.414369,-7.425936,0.565642,0.680217,-8.193437,-5.060959,-9.814933,4.542324,5.810179,1.278687,-9.348898,-7.248351,-6.612184,1.920751,7.746130,-7.169941,-2.072589,3.106101,5.845059,0.010255,-8.678996,1.166388,3.793235,4.374695,4.411724,3.199435,-1.234232,-6.595506,-8.777732,1.930914,7.618559,-0.588953,-6.663061,-1.701354,8.691767,4.686756,4.168138,-7.908296,9.671253,-7.170200,-7.953157,3.782348,6.998762,-1.954463,9.440604,7.756688,5.256199,3.515166,-7.476653,5.574668,9.506253,1.882275,6.050148,5.035398,6.855644,8.507419,4.237232,-8.635793,4.675750,-4.396225,-2.450563,1.452615,-6.717508,6.642535,-4.085343,-0.872620,3.184530,3.085662,0.586685,-4.614801,-9.035794,7.528069,-8.200956,-8.862219,-9.486327,-7.699038,-0.186773,-9.104772,-6.314088,4.764163,-9.853115,-5.269739,3.319501,-2.773457,-3.109717,-1.207085,-5.324329,7.290683,7.060444,-4.166080,-7.100015,8.490198,5.163738,3.605705,0.092664,-8.080692,-8.856675,-9.600293,-9.329531,7.349505,6.056701,8.153370,9.754842,-2.407307,-3.077664,-3.411796,4.227897,-0.866585,7.474701,4.583786,-2.196836,-2.226985,-2.211506,3.675429,1.699534,-0.664764,-9.977328,-1.947555,-5.209151,-0.482886,-8.708070,0.960897,-7.036813,-6.326965,-2.648022,8.060477,0.237894,8.534724,-3.588802,1.478404,7.376769,-4.393144,8.856563,1.424472,3.499239,3.448365,-2.574126,5.969667,-0.152615,-2.529697,5.788437,9.829078,9.041941,5.127241,8.543234,0.996712,-4.987353,-1.108010,7.692580,9.537572,-7.131072,-4.930400,2.973454,3.407743,4.074922,-9.145608,8.302217,3.387843,1.519116,-0.391455,2.610696,9.382071,5.266571,-4.310451,-8.454892,0.919581,-0.614796,5.722020,-8.471914,4.019095,0.363705,-4.047816,9.005416,8.775385,-3.005559,-5.444964,-7.744222,3.509159,6.024059,-6.703961,3.548873,-5.238503,2.831974,-9.903435,1.006204,5.194920,5.045724,7.240676,4.204351,2.981213,4.401191,-6.998194,-2.783170,4.420165,4.863249,6.227933,-5.251389,-8.158847,1.013904,9.642289,-4.406764,4.596521,-3.586958,-8.930616,-8.125377,-8.236577,4.913168,0.375591,-4.794842,-8.637686,-6.571326,3.309414,5.842919,-7.719791,-2.150233,0.641438,-4.727986,-5.527520,-4.088607,-0.230678,5.570312,-0.770973,8.513170,-5.271742,-3.567449,7.807189,-8.051181,0.852086,-1.138321,-1.893845,8.388126,1.061847,3.853758,8.255556,1.544514,-4.741460,-9.499371,8.990538,-1.021916,8.641464,-1.983469,9.158022,1.689673,4.191529,-9.274588,-9.681054,8.863538,6.512748,-2.512530,-9.266348,-2.955176,-5.764845,2.870584,6.787810,9.405495,4.300716,5.306931,-3.820648,3.448656,2.249119,8.076861,-0.135505,9.080633,2.757401,-1.716136,0.714986,-7.405440,6.462002,-6.873520,9.348675,5.593354,4.078095,6.424802,-0.468735,6.776822,-2.615094,0.225787,-8.030255,-2.326500,-9.230973,8.303136,-4.774492,6.309952,-5.926638,-4.462060,6.742240,-8.251865,-6.199483,-2.496105,-7.003812,-9.944033,3.078982,1.867570,4.862710,2.257039,-1.232036,6.759578,4.413568,-9.866923,-2.259624,2.498835,1.034556,0.377077,-1.977642,-9.039015,7.370489,1.684887,-4.753686,-3.283679,9.097909,-3.637522,9.144445,-3.176747,-5.544959,-0.620557,1.572554,8.794120,6.488815,-4.060094,-9.200554,-6.417160,-7.233530,-4.545544,5.055455,-4.627271,3.554787,-6.135182,-7.245430,6.445330,-5.844985,-7.671849,8.504415,-6.138486,-1.370212,-4.854211,7.873483,-1.802150,1.922031,-9.520027,-3.290720,8.372608,5.789514,-0.845033,-6.946888,0.084151,5.052417,-4.949317,6.848400,3.261008,0.140841,-3.738045,-2.914354,-5.555194,-0.566277,-6.323959,2.322031,-5.833838,-1.159816,0.142499,-6.742420,7.734633,-2.378901,-4.442621,-1.397605,8.430861,-5.330210,-3.995704,-0.605148,-0.296784,9.282682,8.512735,-2.853152,-8.973974,-7.812984,3.513290,-6.476591,-5.780929,-8.664933,-0.288592,-5.353367,-7.211258,3.077374,-5.566888,-0.510222,-3.091540,2.718185,-0.839011,7.982455,-3.505252,-1.912061,-5.192146,-0.666478,9.172618,-4.581429,9.006941,9.951863,9.164821,-3.541559,9.427444,-0.175642,6.346871,8.164219,8.400172,-5.987636,6.202852,5.192092,0.792264,-0.041314,-7.204219,-1.887334,-1.935267,5.194780,-5.417097,7.436561,-4.086679,-6.895868,9.987431,-7.056812,-8.504920,9.450377,0.491007,-4.629606,-3.472456,-1.406070,7.930803,1.035440,-0.215510,6.979014,-9.852024,-2.357184,-2.403128,-4.188561,4.157024,-7.089246,7.315731,9.120351,-4.586822,0.501200,-4.911159,2.260455,-2.406512,2.306124,4.568892,-9.652927,6.932698,6.779728,9.684949,-2.860280,-3.047422,-7.669237,-9.072667,-2.460458,3.688969,9.025692,8.495549,5.030875,5.583947,7.893629,9.764423,2.919879,-6.114368,-5.116309,-0.023833,-4.309176,3.225815,9.837185,-5.046777,-6.791363,7.426306,-7.381468,-4.544570,5.968404,-4.406910,8.051715,-7.663205,9.341276,0.437273,-6.526644,-0.077590,-4.361953,3.376245,9.323089,0.740440,-7.559381,0.407086,-8.776597,-0.485699], dtype = "float64")#candidate|7060|(1176,)|const|float64
bop_7061 = relay.less(var_7050.astype('bool'), relay.reshape(const_7060.astype('bool'), relay.shape_of(var_7050))) # shape=(1176,)
uop_7064 = relay.cos(call_7034.astype('float64')) # shape=(1, 14, 16)
uop_7066 = relay.cos(call_7036.astype('float64')) # shape=(1, 14, 16)
output = relay.Tuple([bop_7030,const_7035,bop_7040,call_7046,call_7049,call_7052,var_7053,bop_7061,uop_7064,])
output2 = relay.Tuple([bop_7033,const_7035,bop_7040,call_7047,call_7051,call_7054,var_7053,bop_7061,uop_7066,])
func_7078 = relay.Function([var_7039,var_7050,var_7053,], output)
mod['func_7078'] = func_7078
mod = relay.transform.InferType()(mod)
var_7079 = relay.var("var_7079", dtype = "float64", shape = (12, 10, 14))#candidate|7079|(12, 10, 14)|var|float64
var_7080 = relay.var("var_7080", dtype = "float64", shape = (1176,))#candidate|7080|(1176,)|var|float64
var_7081 = relay.var("var_7081", dtype = "int16", shape = (1, 420))#candidate|7081|(1, 420)|var|int16
output = func_7078(var_7079,var_7080,var_7081,)
func_7082 = relay.Function([var_7079,var_7080,var_7081,], output)
mutated_mod['func_7082'] = func_7082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6243_call = mod.get_global_var('func_6243')
func_6244_call = mutated_mod.get_global_var('func_6244')
call_7132 = func_6243_call()
call_7133 = func_6243_call()
func_1653_call = mod.get_global_var('func_1653')
func_1657_call = mutated_mod.get_global_var('func_1657')
const_7139 = relay.const(False, dtype = "bool")#candidate|7139|()|const|bool
const_7140 = relay.const([True,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,False,False], dtype = "bool")#candidate|7140|(2304,)|const|bool
call_7138 = func_1653_call(relay.reshape(const_7139.astype('bool'), []), relay.reshape(const_7140.astype('bool'), [16, 9, 16]), )
call_7141 = func_1653_call(relay.reshape(const_7139.astype('bool'), []), relay.reshape(const_7140.astype('bool'), [16, 9, 16]), )
func_1345_call = mod.get_global_var('func_1345')
func_1348_call = mutated_mod.get_global_var('func_1348')
const_7144 = relay.const([False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,False], dtype = "bool")#candidate|7144|(1014,)|const|bool
call_7143 = relay.TupleGetItem(func_1345_call(relay.reshape(const_7144.astype('bool'), [1014,]), relay.reshape(const_7144.astype('float32'), [6, 13, 13]), ), 0)
call_7145 = relay.TupleGetItem(func_1348_call(relay.reshape(const_7144.astype('bool'), [1014,]), relay.reshape(const_7144.astype('float32'), [6, 13, 13]), ), 0)
output = relay.Tuple([call_7132,call_7138,const_7139,const_7140,call_7143,const_7144,])
output2 = relay.Tuple([call_7133,call_7141,const_7139,const_7140,call_7145,const_7144,])
func_7158 = relay.Function([], output)
mod['func_7158'] = func_7158
mod = relay.transform.InferType()(mod)
output = func_7158()
func_7159 = relay.Function([], output)
mutated_mod['func_7159'] = func_7159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7158_call = mod.get_global_var('func_7158')
func_7159_call = mutated_mod.get_global_var('func_7159')
call_7160 = relay.TupleGetItem(func_7158_call(), 0)
call_7161 = relay.TupleGetItem(func_7159_call(), 0)
output = relay.Tuple([call_7160,])
output2 = relay.Tuple([call_7161,])
func_7162 = relay.Function([], output)
mod['func_7162'] = func_7162
mod = relay.transform.InferType()(mod)
output = func_7162()
func_7163 = relay.Function([], output)
mutated_mod['func_7163'] = func_7163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_7170 = func_5642_call()
call_7171 = func_5642_call()
func_3299_call = mod.get_global_var('func_3299')
func_3301_call = mutated_mod.get_global_var('func_3301')
var_7175 = relay.var("var_7175", dtype = "float32", shape = (216,))#candidate|7175|(216,)|var|float32
call_7174 = func_3299_call(relay.reshape(var_7175.astype('float32'), [2, 9, 12]))
call_7176 = func_3299_call(relay.reshape(var_7175.astype('float32'), [2, 9, 12]))
output = relay.Tuple([call_7170,call_7174,var_7175,])
output2 = relay.Tuple([call_7171,call_7176,var_7175,])
func_7183 = relay.Function([var_7175,], output)
mod['func_7183'] = func_7183
mod = relay.transform.InferType()(mod)
mutated_mod['func_7183'] = func_7183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7184 = relay.var("var_7184", dtype = "float32", shape = (216,))#candidate|7184|(216,)|var|float32
func_7183_call = mutated_mod.get_global_var('func_7183')
call_7185 = func_7183_call(var_7184)
output = call_7185
func_7186 = relay.Function([var_7184], output)
mutated_mod['func_7186'] = func_7186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6292_call = mod.get_global_var('func_6292')
func_6294_call = mutated_mod.get_global_var('func_6294')
call_7198 = relay.TupleGetItem(func_6292_call(), 1)
call_7199 = relay.TupleGetItem(func_6294_call(), 1)
uop_7200 = relay.sinh(call_7198.astype('float64')) # shape=(1, 10, 14)
uop_7202 = relay.sinh(call_7199.astype('float64')) # shape=(1, 10, 14)
bop_7220 = relay.not_equal(uop_7200.astype('bool'), relay.reshape(call_7198.astype('bool'), relay.shape_of(uop_7200))) # shape=(1, 10, 14)
bop_7223 = relay.not_equal(uop_7202.astype('bool'), relay.reshape(call_7199.astype('bool'), relay.shape_of(uop_7202))) # shape=(1, 10, 14)
output = relay.Tuple([bop_7220,])
output2 = relay.Tuple([bop_7223,])
func_7225 = relay.Function([], output)
mod['func_7225'] = func_7225
mod = relay.transform.InferType()(mod)
mutated_mod['func_7225'] = func_7225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7225_call = mutated_mod.get_global_var('func_7225')
call_7226 = func_7225_call()
output = call_7226
func_7227 = relay.Function([], output)
mutated_mod['func_7227'] = func_7227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7250 = relay.var("var_7250", dtype = "uint16", shape = (2, 13, 15))#candidate|7250|(2, 13, 15)|var|uint16
var_7251 = relay.var("var_7251", dtype = "uint16", shape = (2, 13, 15))#candidate|7251|(2, 13, 15)|var|uint16
bop_7252 = relay.add(var_7250.astype('uint16'), relay.reshape(var_7251.astype('uint16'), relay.shape_of(var_7250))) # shape=(2, 13, 15)
output = relay.Tuple([bop_7252,])
output2 = relay.Tuple([bop_7252,])
func_7256 = relay.Function([var_7250,var_7251,], output)
mod['func_7256'] = func_7256
mod = relay.transform.InferType()(mod)
var_7257 = relay.var("var_7257", dtype = "uint16", shape = (2, 13, 15))#candidate|7257|(2, 13, 15)|var|uint16
var_7258 = relay.var("var_7258", dtype = "uint16", shape = (2, 13, 15))#candidate|7258|(2, 13, 15)|var|uint16
output = func_7256(var_7257,var_7258,)
func_7259 = relay.Function([var_7257,var_7258,], output)
mutated_mod['func_7259'] = func_7259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6475_call = mod.get_global_var('func_6475')
func_6476_call = mutated_mod.get_global_var('func_6476')
call_7292 = relay.TupleGetItem(func_6475_call(), 3)
call_7293 = relay.TupleGetItem(func_6476_call(), 3)
func_6121_call = mod.get_global_var('func_6121')
func_6125_call = mutated_mod.get_global_var('func_6125')
const_7320 = relay.const([2.226803,0.346959,-9.669674,-7.221855,-2.051406,3.418708,-0.981414,-1.969373,5.078571,-3.711618,-9.159741,-5.338441,-6.059915,9.299996,5.643362,4.628964,-5.518602,2.079481,3.326486,-5.621563,-7.547371,2.287269,0.472653,5.515869,9.895119,4.801896,8.814115,-5.389411,-1.821262,8.638918,8.204399,8.601628,-5.539421,-4.113493,-4.455581,7.309397,-0.573496,0.419523,-2.806949,-6.561340,9.735056,4.479100,-8.197232,-1.933900,-3.015132,-7.019844,-5.038581,0.791768,8.182493,-8.946761,-7.396762,-4.885419,-7.674863,-9.709550,-4.776895,-0.297599,-0.212085,-1.865406,4.212726,1.438626,-9.007707,2.123544,9.944414,0.406659,-8.127506,-3.997205,8.846160,7.005817,9.313825,7.693249,5.262314,2.120439,5.912749,-9.983196,-4.877326,-5.481341,4.627264,4.222585,-0.358356,8.004912,-9.888311,7.416575,-8.629237,-3.501487,-1.684520,9.095650,8.549283,4.072925,-1.339376,-1.741944,-4.061168,-4.317251,-7.393689,-0.550902,-6.940527,-6.088017,-2.965141,5.769838,-4.106251,-0.329781,7.138596,-7.512819,-5.049021,6.864008,1.357640,0.878858,3.895109,-3.858792,4.572493,-2.098877,-1.896375,-4.226169,5.808491,-9.730087,0.268192,-6.404044,-3.601356,-4.859928,7.057434,-3.004323,2.197120,-5.443161,7.921705,-8.977585,6.724734,-0.517125,9.732160,-2.468757,-8.290970,3.773443,2.531614,-6.085453,-4.548664,-4.338620,0.348744,0.283676,-3.401932,9.588809,-1.326687,-4.956954,-8.150085,5.520970,-6.220068,-2.264712,-7.117989,-1.632387,-3.637473,-6.708637,4.142629,-0.202851,3.358851,6.274714,7.776397,6.453422,0.939916,3.159885,-5.060543,7.785746,7.522283,-9.195821,2.015486,7.645122,5.046973,9.808774,8.979577,8.997453,3.784494,-4.368773,6.103890,-0.369818,-4.510205,0.235970,-0.261680,6.159426,-4.947936,-0.039445,-7.926225,5.660657,4.453342,0.856643,-3.197519,8.999899,3.001186,-1.219770,6.504449,7.298173,0.406229,-8.750767,-7.847286,5.899440,4.987040,-6.741414,8.273202,-0.985255,-8.072066,7.875175,-4.653601,-3.630229,6.098415,1.087022,8.254450,-8.101441,7.105547,2.069629,-4.737678,-6.231836,-2.918985,2.763262,3.084141,-1.368110,8.619178,-0.424085,-7.507898,-3.809063,-8.380435,-9.496651,-0.590508,-7.278694,7.600208,5.824836,-5.354667,-6.756018,6.322472,-0.724016,2.313501,-5.325248,2.041919,-9.819204,-2.744744,1.747011,-1.271873,-3.879146,-5.860109,-3.463465,-8.524731,3.897090,-0.080556,9.116271,5.449025,-2.875783,-8.018480,-1.738302,5.820196,8.659841,5.167692,-0.311126,-6.791201,-1.432983,4.830430,9.356844,9.230266,-5.424880,-6.445718,4.408716,-2.799556,-6.775466,-6.778308,-0.992627,7.721962,3.675497,-1.481897,7.542488,2.440883,3.989319,-2.034693,-1.803013,8.728216,0.062687,0.716765,8.424796,-0.594447,-7.653592,-3.752834,8.456574,1.758080,-9.162992,-4.218374,-4.127085,-3.370249,4.053579,-2.566863,-0.795041,-1.919471,5.047774,-5.447743,5.690584,-0.607695,5.174153,-4.287032,7.633981,-8.812724,7.100084,2.798079,-1.774600,1.961863,-1.605691,6.709613,1.365124,9.920362,5.560803,-9.287216,-8.076785,3.744499,1.099651,-1.842773,3.442718,6.780898,-8.902812,-7.094679,-7.326060,-4.077675,-4.365645,0.071114,1.436910,-2.834010,-2.958979,-1.953365,-6.253254,-8.350726,4.132316,-3.721360,7.006234,-8.344228,-4.637893,-9.984069,-0.136933,6.768132,3.627960,3.573747,0.648682,5.524651,-6.417827,8.702975,7.215332,-9.331164,-9.257033,5.208129,-5.213402,8.280970,9.251217,2.492207,-4.402727,-3.004257,8.815728,3.970321,0.449760,-4.482455,-7.837097,-1.633275,-2.300193,-6.546198,3.181278,-9.143779,4.916224,-3.029148,-3.430652,6.807995,7.330074,-9.814597,2.715741,0.296413,-9.260341,-4.127341,0.319932,5.631197,4.256310,2.481851,6.600204,9.866106,0.631590,4.756659,7.370155,1.672853,-3.977552,-1.316178,9.126174,5.691181,5.232939,-9.134445,-7.494992,-7.545624,1.694031,5.870820,-4.924994,-9.914295,-8.676388,5.488319,-1.764456,-8.532847,-9.710300,-0.669067,4.199018,8.023625,3.664301,4.654884,6.384355,0.321120,7.339836,-6.930579,3.625798,-4.823080,-1.484411,-2.387741,-0.785572,-3.785517,5.803848,-2.757850,-4.942567,8.194340,0.674602,2.800432,4.909768,1.485308,5.824277,-8.369866,-1.610108,8.712517,-3.076693,1.911635,-9.651292,8.117454,-3.291249,-1.530198,9.236994,-9.720351,7.590480,-2.653223,3.444557,5.112972,1.000436,5.842650,-8.534303,-3.130142,-8.090743,4.133253,2.186072,-6.249803,-4.757497,-6.348311,2.510104,-3.890066,4.058346,4.089061,0.706021,0.258672,-6.048382,-7.771035,8.085057,2.367200,5.244247,9.982359,8.801877,-3.074422,-7.266271,6.940037,-5.361187,-5.125960,-3.470259,-6.768533,7.767074,-4.307835,-0.245450,-2.707885,-9.603965,-9.461468,0.656671,-1.783337,5.071722,-7.137137,-6.452380,3.039592,-2.903999,-3.851417,0.414986,-6.678527,-1.712909,-5.211382,3.586373,6.995939,-1.210007,6.937632,9.737597,-4.488819,3.141955,-0.581775,6.518387,-5.786368,-9.325093,-7.603412,1.694242,-0.185175,-4.265759,-9.940281,9.712881,3.326860,5.199472,9.525134,-0.925125,-3.743424,3.828846,1.052168,-1.035333,-7.076307,-9.802221,3.246878,0.429779,-3.809677,-6.269122,4.837507,-8.245329,-9.089660,-0.970401,-7.704207,0.150550,-1.425988,0.359255,0.284011,0.857947,-6.907069,6.188595,1.163378,7.882233,-1.961211,-3.372201,-5.517905,-6.673352,2.726010,-9.187030,4.671576,-5.313847,-9.616798,-6.715889,8.181122,9.122599,7.357843,4.677118,8.515795,-7.549956,2.249156,-7.555797,7.686065,-3.057236,4.501320,-4.929094,-0.164402,-1.527366,8.593516,1.658027,-1.141260,-5.827031,0.142652,-9.732075,5.926913,-7.035094,4.575939,-5.978534,0.710142,1.539040,0.790922,5.575702,-2.451719,3.153868,-5.313367,5.722975,1.776652,2.909337,4.113864,-1.223831,-9.253444,1.371187,6.356537,6.330590,-7.564973,0.815113,-7.210230,-6.599317,-1.440819,-2.874944,-1.767259,5.587604,-5.992455,-0.631995,-7.646781,-5.523512,8.833489,-7.621309,9.940173,3.358526,8.180277,3.148720,9.233751,-2.596521,5.772621,5.459681,-5.631927,-4.774444,2.635922,9.246710,2.875175,-4.262548,9.537527,7.967533,-0.215402,3.556024,3.847125,-3.988811,-6.644165,-1.933356,0.875936,1.644325,-3.517884,-4.097942,-7.153753,5.543265,5.311236,-0.718734,-4.423407,4.963278,-4.326762,-7.398868,-0.386569,-2.117588,-5.273896,-9.653552,-9.588901,1.898802,9.461169,-0.222815,7.463341,6.003257,-5.746196,-8.866683,4.086330,6.119903,-6.772557,3.693864,-8.829760,9.257013,-7.215231,7.070045,0.116521,7.833810,-4.237820,-3.972457,1.209674,6.351437,9.222097,0.910411,8.745682,-6.166788,-0.350148,-0.932393,4.223347,2.112612,-0.209221,6.883692,-7.481494,-9.355859,-0.697093,-9.762742,9.918210,5.620902,7.848002,3.428946,-5.611511,-4.304287,-2.413451,1.609087,-0.537975,4.885833,2.642891,-9.942615,-6.221231,2.420793,2.102926,-7.588249,4.653090,6.491385,-1.681325,2.026236,-8.640919,-6.086566,9.303208,0.970579,-0.081046,-1.575838,8.067997,3.910126,0.449729,-5.331936,2.900547,0.971075,2.187104,8.063200,-2.053705,-1.333741,0.266739,1.141297,-1.447177,-5.487941,0.231174,8.630381,-5.353642,-4.697179,4.454006,-8.321866,-5.043762,1.140936,5.914835,7.789671,2.170668,-5.245457,-5.098205,1.670704,-4.328586,-8.929433,-3.622479,-5.802870,-3.407330,3.315224,-9.821126,-8.133548,8.623774,-1.979093,7.015217,-6.112312,5.137170,1.400274,-1.155280,-2.470782,-5.840315,8.995546,-8.359222,9.106907,-8.796670,-2.049256,9.379940,9.306791,-7.411017,5.825358,-5.093515,4.618396,-1.569430,7.655737,0.421914,-7.877649,-9.056588,6.646483,1.669078,-9.091730,4.864237,-4.221724,0.777881,8.122752,5.118835,4.238916,6.564403,6.862014,7.172780,-3.550338,9.677777,2.181248,-8.476819,-8.922309,8.368330,-9.844915,-5.291828,3.899844,-4.545527,0.551935,2.262267,2.987756,6.698706,9.395288,-4.673713,-3.056442,-2.274802,4.416980,-7.760407,-7.567531,-4.118879,-6.487590,-7.198840,0.575104,-4.479687,-7.721187,4.257869,-5.613449,1.864575,-4.587697,-0.554248,2.911709,-4.988706,3.467353,-1.705992,-1.253384,-1.038529,4.479019,9.802856,-4.884913,-6.992858,5.480497,-7.447584,-2.940199,1.544849,4.785484,1.600412,-9.066634,-9.208862,-7.279518,-4.907391,1.831010,8.560391,8.163795,6.852645,1.070217,-1.789638,-8.065598,-7.759752,-1.704456,2.303637,2.669275,-5.945349,-7.060800,-5.764475,-4.208257,5.793086,4.234072,-6.582129,3.323744,-1.017434,2.799337,-6.786202,-0.433200,8.925764,-7.747357,-9.015649,6.628970,-8.274645,9.827915,7.695760,6.514144,-5.282407,5.530873,7.682596,-4.798207,9.325707,-7.443316,4.575308,9.954703,-5.554362,7.350920,5.377517,3.656227,-2.102970,-4.239733,-0.153599,7.141713,2.398431,-2.129951,8.001295,-5.974716,-1.750155,-7.559710,4.858907,-8.406921,-3.173740,3.887700,2.144764,5.597632,3.074811,4.420709,9.089850,-5.146928,2.387322,4.668129,-1.310230,-4.461937,-1.927973,-0.981154,-2.792028,2.237736,9.740918,-0.367909,-1.506290,-5.245715,-0.248833,9.321490,-3.677607,-8.684842,-4.970078,9.557370,6.956903,-6.839164,-1.355583,-4.896151,7.094842,1.526407,-2.202463,0.012569,3.071165,-7.719955,4.751050,6.563385,-6.540523,-3.081394,4.775541,8.101608,7.905996,1.512546,-0.578572,-9.086250,0.933334,-8.272114,6.019071,-8.567670,-5.118415,-7.234484,3.616442,5.966574,8.378686,-5.622822,6.445479,-8.631359,9.045354,7.980719,8.383711,-9.574413,0.556839,-8.415625,-8.973420,-0.893528,0.182393,6.831513,-2.707205,-9.813867,-8.802601,4.136002,-2.875955,-9.532189,7.316629,-0.596963,9.683762,0.542536,4.074150,9.131441,8.412406,-8.640249,4.298353,4.152226,3.105056,1.160583,-5.324352,4.132066,-6.813502,8.060887,0.946328,-8.769498,-0.917217,-1.716803,5.368745,3.989902,3.704638,-5.381736,3.723773,-7.653384,9.596254,-0.811785,-4.565826,7.261454,4.378909,-7.674732,-7.844686,1.192461,6.381735,-5.813245,-6.164615,7.689596,-1.591576,-4.701386,8.866747,-4.495350,-6.926011,-5.321964,-0.195287,-9.015216,-5.225483,5.580830,7.609759,9.266040,-4.485044,-9.364877,-6.785557,-9.169770,5.064932,-8.999860,4.978268,4.567540,-9.258148,2.535237,3.910367,-2.048272,-0.960646,-7.736017,7.904370,-6.644405,-8.889822,-3.786016,-2.698097,5.185577,6.571066,-4.078553,-9.023882,-2.718980,-9.417888,3.572091,5.696541,7.722274,8.281821,-3.651821,-6.088730,-7.892688,8.981642,3.910543,2.644679,1.113304,-7.878548,-2.670848,7.364535,8.635218,-8.907328,-5.302184,7.885360,4.880366,2.354422,6.618310,0.313773,-5.937601,-0.315588,-1.705707,-1.263724,-0.424807,-5.993864,4.293827,9.841240,6.900776,-1.415544,-9.697976,3.487941,-2.712096,1.099495,-3.231412,-2.681423,3.129689,-4.224195,-3.114731,1.257286,-8.063123,0.249773,6.379971,-7.717712,-9.633957,-9.676422,-4.255018,6.201993,6.046736,-6.131896,9.330191,-7.127881,9.529470,-0.033313,-7.200592,-4.990387,4.016045,-4.057532,3.875041,6.389899,9.353860,-2.952480,-6.841042,6.965245,-1.126519,5.081343,-0.298577,-5.614477,7.666213,2.243692,-9.857810,-1.369885,-9.907225,-7.956105,9.287348,8.514393,-6.935862,4.758362,4.834633,-5.216270,-8.881121,6.414055,2.524421,6.498254,2.271867,-2.974376,-7.831008,9.262066,-9.427217,-4.513962,-2.225588,-8.439500,5.947404,3.125318,-5.680898,-1.954163,2.918203,9.895864,9.913674,5.789477,-3.562695,-2.584170,-5.398730,7.449256,-3.401099,5.775649,5.867812,1.633683,8.952485,-2.134604,-2.943762,-1.813898,-8.847193,-0.428692,-2.928644,-6.028464,-0.808989,-8.855342,7.539765,6.032620,3.437893,-8.760045,-7.696573,-7.048916,-1.417000,-6.707386,2.101037,-9.284250,-6.278238,-0.683975,0.283403,7.389369,9.177693,-0.400160,1.717235,-8.848564,-4.768099,-8.207269,-1.556148,-0.035241,3.314378,9.533638,-1.602230,-3.779585,9.644543,5.511333,-8.770233,-6.411998,-3.079666,-6.283244,-4.398911,0.249503,8.537645,3.751384,-7.727883,-5.999200,-4.511575,-6.996014,1.388970,-0.336123,0.765686,0.786380,-0.167959,-7.173000,6.899409,0.347585,0.759702,-7.049553,-3.092935,4.755248,-6.364941,-2.057460,8.388855,8.209821,5.620110,6.700586,2.622641,-6.098780,-1.538425,1.368088,8.933303,7.332229,0.549863,4.973614,-9.085383,-7.424497,-7.232058,2.968043,4.841115,3.837433,-9.079060,-2.768903,1.644857,-7.700455,9.089383,7.142026,-5.988656,0.153371,5.039150,7.312628,5.070675,-0.450940,-2.225591,-1.570245,-8.395520,-1.836715,-5.945428,-0.996116,-1.934174,-8.342452,-1.764515,-1.935041,-6.389052,-8.895707,3.426428,0.373305,8.935660,-9.723670,-8.675329,-5.684260,-4.251261,0.922024,4.509443,5.657789,-0.669384,8.705148,5.501339,8.106978,6.472581,4.426628,0.191346,-5.812514,-2.851965,-8.759090,5.394844,6.463601,-6.656689,-9.747211,9.500588,8.316662,9.480157,-0.387647,-3.662575,0.731052,-5.235058,-9.238545,2.574491,-0.856440,-8.446625,-4.066150,9.004143,8.219953,2.935521,1.317086,6.148150,-3.111391,5.433896,-9.470472,5.106057,-0.669742,-1.800889,7.194585,3.651437,-1.853903,5.087614,1.223695,-5.480382,-1.789903,-7.312687,-2.159318,-7.654833,4.985361,-5.587048,4.131174,1.428496,5.066267,2.645108,7.373004,-2.522657,-5.906696,4.268848,8.572356,-7.498507,5.101837,6.861993,4.836465,-1.421576,-9.141572,-1.249034,-0.290730,9.194495,3.673775,2.465417,1.644894,-8.552929,3.110837,6.117948,-3.551122,-0.420163,-7.631124,7.524025,0.617667,-2.185437,-0.826814,2.477900,-2.806408,-1.896609,6.862712,1.107584,-9.859933,-6.180602,4.927659,-3.324831,-3.990763,9.916806,-6.111874,-8.633869,-3.598697,4.253173,8.493244,-0.514814,1.850717,7.991945,-5.205033,8.768351,2.147346,-9.148312,5.949315,-0.473582,0.437344,4.155779,-7.731923,5.854991,-9.794908,-7.569241,5.887319,-3.798931,0.578705,-0.086558,-5.633617,-1.430258,3.246010,-4.748410,4.217273,-9.700061,-6.081046,1.725637,5.686908,0.046869,7.627415,1.700497,-7.052148,-5.667449,-7.672954,7.471782,-8.628658,-0.479868,-7.224781,5.357107,2.514530,-8.056846,4.473432,-1.186556,-5.669467,-0.520935,2.643917,3.312302,7.706638,-6.225950,-0.876950,-6.659749,5.365673,-1.352997,3.789417,-7.282866,-0.591304,-6.954813,-0.870694,-7.569602,1.086611,-0.379511,6.491813,-7.572873,5.372373,-1.810493,4.920818,5.942063,4.721606,-2.214373,5.732460,9.619399,-6.592939,6.061305,-2.543400,8.632241,-4.510757,7.221282,8.010702,6.410814,-6.054027,-9.583069,-5.167462,-5.020659,-7.427357,5.670448,4.562840,5.112075,-3.187882,-8.234370,-8.955411,-1.803582,-2.421445,-8.371416,-9.771578,-4.327694,1.199199,-3.680956,-9.364003,5.053882,5.640477,-9.257494,4.193600,-7.258173,-6.901459,3.418230,6.795291,-1.076681,6.456322,5.386718,-5.076402,-0.615968,6.661596,1.086668,8.762612,-4.113622,4.575571,-5.602009,-2.187355,5.878473,5.717005,2.788616,-9.667231,-9.332751,2.691317,6.083628,-0.591377,0.995449,-9.164709,4.092942,-9.214660,8.374027,1.234084,-9.142024,-8.854638,-2.586364,-5.152890,-9.141677,8.209461,-5.844159,4.147425,-7.592949,8.659167,5.045771,1.728889,-6.080443,-2.049632,0.294316,5.636735,4.313491,3.950367,9.416142,8.387401,7.031421,2.416806,1.667375,6.626647,-2.107548,-2.037220,2.433793,-1.566916,9.393568,4.803789,-1.537292,-1.877788,-3.397667,-3.346182,-9.088770,-3.674591,-8.107474,1.034932,-4.495181,-6.564571,-7.842183,-3.639912,-8.453976,2.740097,6.637423,-8.454265,2.687415,4.312656,8.012846,6.067953,1.151206,7.977075,1.617099,-9.883267,0.820737,-9.519342,2.655797,2.262914,-8.845664,4.985978,9.813201,9.519052,-1.393535,8.123567,-6.914437,5.906721,-1.693548,-9.328070,-0.260099,3.087733,6.255552,3.124831,-6.703676,-5.228153,9.446525,-4.171167,3.708790,4.753062,-0.822709,0.031385,6.039430,-5.707061,5.274214,-9.672157,0.754867,-2.725156,2.692402,8.049815,-8.057681,-5.304013,5.544233,4.300284,0.641193,8.616855,7.409149,-0.166432,1.754450,-7.180051,4.991045,-0.631166,-5.269975,7.439056,-3.843837,6.466793,-4.485010,-4.769157,-9.857963,5.026192,-4.233168,0.016185,9.180125,7.233652,-1.589156,-2.047265,-4.124672,0.626152,6.227442,-2.813689,2.835331,-6.903058,-7.333015,-7.955256,-3.596551,-8.425304,-1.458712,-0.711297,5.798346,-5.898058,2.743677,-6.065714,-0.867687,-9.909824,-6.313052,0.730340,-2.920754,-6.514504,4.351393,0.822451,-3.871139,-5.616936,0.342974,-2.016887,-6.164044,0.049338,2.907823,5.612174,7.930189,3.227185,1.908164,6.079075,5.713458,-5.491425,-3.094623,-3.599119,1.303406,3.056081,-9.470098,8.944845,9.720117,-9.965035,-6.516311,-0.487363,-7.079837,-9.168050,-3.049177,9.974267,9.654031,-2.353142,-8.295970,-8.946786,-0.848258,-1.598193,7.559293,4.504857,-2.246371,-5.049781,-8.213598,-5.492506,-6.471365,-0.155455,4.692785,-8.726223,4.952584,-3.079682,-3.846043,7.156391,2.635429,7.033139,1.902373,2.078145,-6.505991,2.399859,-8.684047,9.204759,-0.932543,0.666238,-0.345359,-0.542279,5.560950,2.411286,6.991378,-4.119182,-6.950613,7.636581,-0.506492,-3.134927,-9.842392,6.318099,7.175746,-1.698207,-1.279529,3.133444,9.608310,-1.378268,8.696594,-0.409852,-5.995112,2.357306,-8.987689,6.151849,7.684209,-5.298740,3.513139,-3.747510,-0.801712,-9.740353,-1.241541,7.916680,3.183457,-7.095737,8.164939,9.588941,5.539615,8.976918,0.330121,6.199213,-7.085972,4.571336,3.202894,-1.202549,-6.206566,2.877720,6.147230,-4.009522,-3.067640,7.699704,-7.963152,-4.038895,7.697332,0.932394,-8.236428,3.188293,-7.974105,-8.504338,-7.669821,-0.330549,3.820954,6.011250,-6.857506,3.875135,5.221037,7.642760,6.693854,0.353916,2.596495,0.431424,3.741737,-1.782517,1.477833,-4.449077,8.468489,-2.631221,-3.330203,5.020960,-1.039070,4.181334,4.301251,8.971070,-4.816736,3.859663,0.263537,5.757984,7.779358,0.602098,-8.049467,-6.708365,-2.639021,-2.874896,8.602387,1.818509,-9.369012,8.505594,3.705341,-8.193427,9.573568,7.808484,9.271805,-4.362239,-0.004212,5.438923,1.045923,7.159272,2.238165,-5.745331,9.943389,-4.243977,-5.545983,-3.885536,-4.825772,-5.495892,-8.867316,-9.961215,-0.945435,5.371660,-9.864673,-3.594630,-7.424871,0.205515,7.512625,-3.747594,-1.155964,9.080935,-1.011889,-5.050945,-4.776445,7.699353,5.148233,-0.284812,-5.740479,-6.089395,6.483811,-8.259387,-7.239588,1.242604,0.273575,7.985643,-5.986714,-3.729760,-3.504844,9.970577,5.463124,9.216203,-5.502557,0.820604,6.318223,-7.323653,-6.440271,4.821445,-7.290259,-1.494781,-5.045636,1.469942,-4.613749,-9.318543,8.303861,-0.263060,-4.430154,1.068904,9.556382,4.604503,-0.187203,0.411183,-7.401723,-4.835894,0.660721,-5.765505,-1.691265,-6.359469,7.683045,8.792779,-2.991804,-9.476610,9.294035,-8.700280,-2.173632,-5.196447,0.357505,4.732924,-3.813329,-5.143928,-9.156447,4.352199,7.257575,-4.624368,-9.755932,6.335119,5.389884,7.811048,9.353189,8.106014,5.847593,-8.711661,-3.305707,-0.992971,0.792439,-8.794679,5.323983,-2.064135,-4.953624,-3.896878,-7.450768,6.178442,8.336702,6.953122,-0.045582,-7.081065,-7.159150,-2.612124,-4.231984,8.783813,-1.963130,9.380907,7.685402,-1.406928,-6.676681,7.071869,-2.832831,-7.206764,9.513496,-9.853512,9.139727,-1.620760,8.952980,-3.647123,4.509709,-6.585219,6.581601,-0.437867,9.980295,-4.241180,8.505113,1.052987,2.952563,0.123060,5.500697,-2.156520,-8.618021,-2.643864,-5.973513,8.918350,-2.748200,6.084037,7.754589,-1.579371,-9.821686,5.561359,-9.924539,4.051802,-0.023432,2.915595,-7.301533,-5.983751,-1.057385,-6.608227,8.581513,-5.118216,6.028516,-2.982203,0.205301,-3.881821,3.264722,0.123530,-4.831057,2.011880,7.287982,-8.925004,5.269031,-6.655305,7.660178,-9.719619,-1.819010,-3.201986,-4.968718,8.534660,7.712769,8.099108,5.575489,2.769343,6.954984,-5.367998,7.000591,-7.107695,-2.014845,-2.764403,5.328132,-8.425519,7.724279,-8.891105,5.673442,-5.674225,7.691141,-4.218242,-0.018524,-6.198822,-6.448742,0.284453,9.004553,-8.399112,-0.625128,0.026872,3.196255,-0.007243,-1.046213,-9.253592,-1.170248,-8.784575,-6.780820,-0.280562,-1.220654,-1.867814,5.422334,-3.709245,8.635790,-0.830626,0.272468,-0.180792,-0.749632,-7.545507,1.283252,-2.496313,6.199531,7.509069,2.193857,-0.555435,-9.361471,6.553325,-2.862919,-0.874504,-3.522881,-5.140284,-4.848755,0.407039,7.955817,7.287611,-7.393310,-8.109467,-5.915334,-9.742319,3.030834,-4.911481,9.313663,2.755326,4.781330,-6.820117,1.558575,-5.267347,4.792168,-6.003515,5.311591,9.447197,7.434274,9.485889,0.419244,-9.600514,-9.658368,-5.941735,-1.544689,-3.721209,7.690522,3.718156,2.988619,-2.541855,2.376700,1.558686,-4.221452,4.478047,-8.179281,8.510776,-9.101681,-0.594340,-2.443684,-5.735786,-8.898084,7.510407,8.212790,-6.511690,-4.658664,0.412724,6.762384,-5.634512,6.457840,-7.585797,-8.170603,1.352868,7.888097,3.430432,-3.973191,-6.655805,-4.200017,-7.463837,-4.366911,-7.696604,9.979360,1.116835,-1.908633,-8.456449,8.242095,1.675845,6.185118,-1.629261,-4.481085,-4.885217,6.189821,-6.888206,-8.870735,-5.227188,4.058093,8.522018,-0.951234,-1.309936,-6.967680,3.220914,4.499826,8.141164,0.326214,3.379473,-7.175017,5.893142,-1.477278,4.553642,-0.823512,9.641415,7.981798,4.426533,0.026317,-6.843353,-1.934609,5.125305,1.686402,-5.945206,-1.002843,-6.487862,-2.975827,7.265835,5.578055,8.345971,-3.536102,-8.177825,-9.287539,0.213572,2.676495,5.239282,7.691525,7.441010,-8.619370,-0.877740,2.272372,9.543263,-5.442725,-0.147619,7.149077,0.570850,-0.209076,4.664974,5.712949,0.541043,0.893186,1.659535,2.801628,8.222527,-6.851772,0.262859,-3.994448,1.496585,6.579247,3.978084,-3.255231,-0.356213,-0.779996,0.890208,-4.795864,-4.999435,0.108464,1.359800,-3.069990,-7.827471,-2.028432,-8.359675,-4.601390,6.940650,2.373055,7.553055,1.581196,-1.793161,9.004856,-2.471218,-5.252839,4.761585,-1.896114,2.984346,2.761324,9.092279,5.175146,5.718853,-4.966312,3.317447,1.405982,3.440669,-1.163444,-2.549604,4.725582,5.058071,6.608384,3.619715,8.094079,-4.555857,5.431342,-8.643009,5.602477,-0.760269,-6.039531,4.997302,-7.598449,0.789646,-1.939802,0.958169,-3.543378,-8.518282,6.687602,8.883134,-5.485821,-7.067344,1.404585,-0.475571,-1.577625,-7.120150,-4.571084,-0.628780,-4.843423,8.356200,9.998081,-9.999178,4.568212,1.872527,4.063719,-3.668681,-5.777193,5.276630,9.882505,-5.615982,-9.218827,4.082471,-0.144521,-1.841600,9.714719,8.237727,-5.823927,-7.973919,-9.420058,-1.547844,-4.966512,0.504324,8.087635,-7.906052,-2.175485,-5.734577,-5.984806,9.442745,9.370148,6.614404,5.702625,5.016999,3.602422,-4.975914,6.373665,8.134771,4.418373,-8.864080,4.989981,7.356949,8.844835], dtype = "float64")#candidate|7320|(2240,)|const|float64
call_7319 = relay.TupleGetItem(func_6121_call(relay.reshape(const_7320.astype('float64'), [16, 10, 14]), relay.reshape(call_7292.astype('float64'), [1176,]), ), 3)
call_7321 = relay.TupleGetItem(func_6125_call(relay.reshape(const_7320.astype('float64'), [16, 10, 14]), relay.reshape(call_7292.astype('float64'), [1176,]), ), 3)
uop_7326 = relay.log2(call_7292.astype('float32')) # shape=(14, 6, 14)
uop_7328 = relay.log2(call_7293.astype('float32')) # shape=(14, 6, 14)
output = relay.Tuple([call_7319,const_7320,uop_7326,])
output2 = relay.Tuple([call_7321,const_7320,uop_7328,])
func_7356 = relay.Function([], output)
mod['func_7356'] = func_7356
mod = relay.transform.InferType()(mod)
mutated_mod['func_7356'] = func_7356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7356_call = mutated_mod.get_global_var('func_7356')
call_7357 = func_7356_call()
output = call_7357
func_7358 = relay.Function([], output)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6831_call = mod.get_global_var('func_6831')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_7373 = func_6831_call()
call_7374 = func_6831_call()
func_3808_call = mod.get_global_var('func_3808')
func_3814_call = mutated_mod.get_global_var('func_3814')
const_7383 = relay.const([-4.101351,-3.117859,-7.567793,1.347671,-0.709696,-8.409925,-7.128640,7.852790,-9.899663,8.572853,-5.932115,4.705809,-9.923569,0.297637,6.930509,7.490072,-5.800334,0.991124,-4.917233,-9.209363,1.036553,7.519027,3.314320,2.434504,6.945462,-4.454655,-7.349004,5.190719,8.248575,-6.772619,9.438611,-6.136978,4.794764,-8.026009,-1.018771,-9.870175,2.596554,-0.565220,-6.562330,9.208848,-0.652503,6.045675,2.966618,-0.698930,4.247836,7.465413,-8.804082,1.786952,7.289790,-8.566188,-6.888064,6.292978,-8.557425,-4.512547,2.871563,-0.246741,3.258724,-5.004492,-0.491295,0.646928,-9.448086,-5.523883,-1.713482,-9.877172,7.557655,5.838323,-7.197115,-9.648021,-4.380762,9.830159,-7.833306,-4.357507,-0.697999,-1.544577,5.387282,-4.329287,-9.364863,-6.413542,-7.329082,-0.725751,1.161878,5.393468,-2.305520,8.686405,-9.377523,-5.400765,-3.463750,-7.227239,1.994258,-7.876492,-0.656098,-3.476243,5.242373,4.789028,-4.670777,-3.874548,-7.072661,5.350865,5.090582,6.029174,4.911486,-9.375463,-1.331908,-2.767871,6.545526,-1.642655,-8.049988,-4.643779,-0.402772,1.831479,9.185953,-1.183479,-7.912196,-7.786070,-4.017545,9.200768,7.647418,-3.602388,9.467921,5.469795,3.833403,-3.159271,1.046760,7.706153,5.860644,-2.165683,-5.446289,-3.997178,-7.233342,-0.881124,-3.539357,-1.750256,7.116870,-9.382785,-7.611287,6.415041,0.942600,9.083451,-1.300034,-8.598435,8.748245,-9.816428,-2.484170,-0.087422,0.289781,4.509860,8.409022,2.461434,-3.500797,8.852039,-0.101250,-2.815930,-3.213616,-0.194049,1.271038,-7.440030,1.303200,-1.667354,8.357692,-8.295911,-9.913553,8.697059,7.126012,-8.524432,-9.572637,-6.667514,2.919712,-0.087286,-5.274225,-4.012190,-3.254086,8.639216,-1.609960,1.339956,-7.261190,-1.266393,0.989440,-1.324647,3.331678,0.866387,-4.527001,-7.459250,-4.227283,-5.111641,9.385637,-0.931901,1.286914,0.283296,-4.755294,-6.325159,-7.379348,1.237201,-4.330659,-4.575143,-5.820363,9.377340,-5.685287,-0.951591,-0.403025,2.229866,-2.253628,8.815484,2.764536,1.955532,6.404605,4.565185,-2.972515,-7.599913,-6.051999,-6.848196,-4.890998,-6.032170,0.011474,7.971221,3.174676,2.610539,7.905569,1.803422,9.210789,-7.763419,-8.854211,-5.333109,-3.232825,7.586371,-4.490961,5.776212,8.730518,0.040514,5.548814,7.767223,5.931141,-1.181887,2.737234,-7.985272,-7.518250,-8.382400,-4.962789,5.067268,3.845477,2.853995,6.756309,-7.338992,-0.838486,5.193444,-4.675316,-6.664843,-4.348808,-3.720031,8.991999,-3.926837,9.989667,-3.887937,-7.620132,-7.952596,9.894045,0.343754,8.538660,0.491358,3.034521,8.431096,3.642277,8.703976,-8.132717,-3.274784,-8.400613,8.275153,5.377358,7.330516,1.175806,2.009307,-0.032953,2.701650,-5.077055,0.877386,-0.426680,6.258574,6.625669,0.423722,2.377954,4.795759,-3.168902,2.700774,-1.293638,0.894480,0.874948,-8.005265,1.113714,9.082552,5.090992,1.286052,5.705406,6.830810,-2.385305,-9.681019,-1.613705,4.661717,-5.872142,-0.524687,-0.539827,-1.167501,-2.850945,1.285356,9.475664,6.060214,1.033737,-6.620304,-2.970660,7.806525,-5.899405,-8.253096,4.338315,6.946238,-8.975611,3.540277,-0.022907,-6.807701,-1.567173,-2.269658,-1.190462,-6.342103,1.418635,-5.197301,8.573047,-1.648126,1.960234,-4.294541,-5.449181,-1.911803,-5.329669,7.252036,-2.630464,9.611328,0.313796,-8.216921,-4.564229,-3.200283,2.419356,1.132687,-9.393022,-7.130915,-6.222544,5.672906,-1.095937,2.220157,7.268224,3.495261,3.788149,-7.842004,4.939528,-4.532884,-0.455595,5.438266,-1.786251,-6.783826,-8.387074,-6.553611,4.769068,1.465297,-6.030788,-1.734579,-0.374054,6.408713,0.951827,-1.021713,-0.712042,-6.740624,4.495240,-4.807242,-2.263600,4.084936,7.599417,5.366952,1.893234,-9.354167,7.963057,3.978542,1.910231,6.138636,-9.288059,4.691370,5.473509,6.400244,3.579182,-5.287345,-6.400028,-0.055716,7.750565,3.666953,-9.954601,-2.928321,-5.336256,5.814856,-1.466782,-8.405249,8.756538,2.706345,2.946311,6.908928,-5.870456,-0.485743,4.841688,-3.712438,-0.033743,1.394164,-7.446642,3.186732,3.485021,-7.023840,1.619684,5.070282,-2.892316,6.533078,6.972122,-6.043323,-2.465952,8.112971,7.841598,9.796119,6.562393,-3.776352,-7.752552,-0.867558,7.013114,-9.439046,-2.727099,1.690933,-8.234590,-1.766426,9.741143,-2.837020,-4.576808,-5.554730,4.844755,6.039681,-9.807016,-9.748246,7.483172,2.814551,6.130038,-6.574340,3.186921,-7.724092,-4.280818,3.006606,4.201529,-1.642585,2.828190,0.737015,-8.180076,0.884169,8.516534,0.054930,5.929251,6.627024,-2.214141,-0.495997,9.240664,-2.496803,4.357789,6.150453,4.318173,-8.969728,-8.670913,9.843806,3.629385,-7.035632,6.024032,3.506885,-3.857307,0.255187,-9.556621,-3.071596,4.776295,-6.367130,-2.605061,6.234701,9.910481,5.082702,-5.199201,-0.915024,3.904972,-9.937903,-5.420162,0.461200,-0.804711,-1.020250,-2.620235,-0.930404,8.046281,0.391271,-6.282550,9.276838,-4.340975,-8.655269,2.456179,-5.417928,1.853976,1.590409,7.439066,-9.248641,-9.386620,-6.297709,6.016535,-7.875393,5.337347,-9.080310,-1.747771,6.711921,-3.074392,0.485763,-7.326936,9.995113,-3.810520,-0.143118,1.023970,4.329657,8.066024,6.708767,-5.434653,1.773571,2.751648,-9.974799,8.746356,-6.295388,1.886306,1.539306,-5.202015,2.222075,-9.668068,-9.120515,-5.647784,5.824001,6.333720,-8.779239,-0.033424,-4.528279,8.265960,1.081938,-7.514585,0.988493,-0.164691,-5.960430,4.114953,5.900388,2.009695,5.254148,-6.452804,0.534735,2.620806,2.077814,2.058258,4.707389,-2.614111,0.018198,9.568587,-2.931082,7.161854,-2.570624,-3.680989,-3.339845], dtype = "float64")#candidate|7383|(560,)|const|float64
const_7384 = relay.const([-1.762915,9.319059,-9.144464,8.700552,-7.763061,6.352095,-1.713143,-6.760216,4.273556,9.469446,5.730138,3.910382,4.936656,9.174575,4.271357,-7.903483,0.661305,-7.059315,5.148420,1.594334,-2.359316,-2.973007,2.601085,-2.781382,-0.544044,9.310134,6.810592,1.389294,9.472524,7.961604,-7.171194,-9.738336,-1.540547,7.841700,7.153270,4.073115,9.946271,-6.551028,-1.434727,6.364012,-7.846394,-1.029466,0.362583,-9.526695,-9.319798,-9.531240,-0.842972,-3.422070,5.150104,-6.462506,-4.266474,-2.563716,2.920863,-9.068316,-1.104796,-1.263328,9.143074,-6.510503,4.490141,1.863132,1.131160,-6.285377,-8.931461,-4.707147,-9.401833,-5.901152,-4.950173,5.158693,4.611512,-9.205972,3.396420,-0.478888,9.448028,-8.195923,-3.675220,6.234160,7.475602,8.390158,-0.106971,1.581626,-6.397522,-8.236524,-3.258794,-0.031212,3.065715,1.940789,-2.443390,9.890140,2.640945,-6.023717,4.032387,8.420622,5.410050,9.255355,-4.217316,-2.579404,-0.130519,8.153468,-9.708653,3.553599,-1.843395,9.528519,-4.159820,6.745121,-1.018244,4.471050,5.058890,-6.897948,7.437110,-6.648585,-1.721440,-2.566687,6.563986,3.521205,-7.302617,-6.985084,-3.189997,5.288142,-2.850307,-8.712942,-3.253662,8.451344,-3.859930,-5.759022,4.423539,5.412939,8.407909,-9.470016,9.026385,4.894052,-5.349224,2.470255,4.591732,-9.431114,0.448467,-9.925213,-0.488133,4.807710,6.874408,5.246022,-6.039332,-3.674859,-8.310331,1.936779,-3.745035,8.637018,-9.356446,5.384926,6.815188,8.384197,-0.789990,-5.460351,1.728994,7.682477,2.986764,8.655818,5.003859,-9.279660,4.275028,-8.415282,-9.146772,-0.545885,-7.565560,-0.254428,9.015479,-8.085819,3.359922,0.911834,-2.445656,5.937487,5.211039,1.348843,-6.742691,-0.708700,0.986009,1.682979,1.478937,-6.324381,-3.215710,4.798058], dtype = "float64")#candidate|7384|(180,)|const|float64
const_7385 = relay.const([7.813968,2.477340,-2.037509,6.808178,-3.667597,-7.685346,-0.512026,-0.322851,2.384780,5.100215,8.262627,-9.900844,-3.717330,-0.118058,1.904965,-2.983283,-5.391792,-8.210687,-5.040721,-6.905018,7.762077,7.464844,9.092477,6.147345,-4.089961,5.125443,6.345385,8.920364,-0.345189,8.736275,3.531896,-1.149021,2.765367,-3.515441,-2.963548,-2.067065,-2.453587,-1.640299,6.575199,-1.690159,-8.832460,-3.929062,-6.073434,-0.227910,0.913961,-4.733423,5.507432,-5.070332,-3.118916,2.232916,8.948242,-6.547905,0.992398,1.306399,-6.846650,-0.660247,-4.819579,-2.472573,-6.191495,9.553180,-7.574318,8.633831,-2.907200,7.413128,-9.647824,5.223153,-7.520475,8.187181,-8.990230,8.214139,7.477715,-7.251787,-7.881273,-7.379311,0.945376,-2.791014,4.705677,3.808962,7.227002,-4.454415,8.868750,3.636200,2.364521,-4.282087,0.819439,8.996487,0.217135,-2.489631,-8.372824,3.167274,-8.818546,-4.795395,1.362841,2.215860,-8.789789,-5.392684,-7.245131,2.757376,8.882838,2.698887,8.292880,0.079679,-5.349571,-9.013251,-4.613185,-1.659824,6.073456,-9.608027,6.232957,4.325451,-3.719849,9.408312,0.355136,-7.555666,-1.980324,-3.472057,-8.877893,7.274299,8.718711,-1.738434,4.797144,6.282694,8.856139,2.340733,8.182014,-7.466333,-9.338639,-2.211785,-3.388721,-4.878105,5.108135,3.706482,-3.600111,-4.202597,-6.531368,8.226326,-1.631143,6.875146,8.501435,-0.997036,3.969726,-7.086038,-2.208749,-5.458960,9.137862,-7.327553,5.784607,6.125440,-9.736501,4.837941,-4.768945,-3.878145,9.911826,-7.330818,-3.605569,-4.885479,1.653654,0.087109,1.036662,-0.712441,1.825570,8.706245,-7.251639,-5.935387,0.704264,-3.065948,6.297266,-0.692225,-3.083834,7.711422,1.504594,-9.031067,-7.799664,-0.370666,7.671623,-3.986623,5.862227,4.536773,-8.562193,-9.190480,-1.992060,2.003461,9.322346,-9.755133,-3.932292,-0.812274,2.708826,-8.505754,0.838177,-8.750718,-9.550168,2.309893,-9.920970,3.696260,-3.255546,-3.705146,-5.045878,-2.244828,6.172505,8.279221,-3.054231,7.376361,8.836555,7.304014,3.695512,9.719183,9.392489,5.757918,-0.636209,-1.295051,9.476621,8.420488,4.652318,2.957422,-8.152800,-5.417558,2.390200,1.727764,-3.326963,6.209135,-4.238236,9.618930,6.386969,0.413029,0.379778,-6.560260,2.035640,2.181846,-2.453173,5.537870,7.233036,5.476031,-6.206481,1.019763,-7.667019,-4.227687,-0.286177,-2.404744,-0.320694,6.512822,3.159498,-8.825990,5.236855,7.104775,3.483918,-6.451436,6.543473,0.750360,-1.651902,-2.272387,0.482906,3.637758,-2.120015,0.112540,-7.670242,-8.562392,-3.366973,-6.582402,-5.138434,1.314938,-2.263728,2.524349,-6.750655,9.410393,0.866042,7.021699,-3.725489,-2.882619,-8.984967,-7.148058,-8.798704,-6.556160,7.027560,-2.172011,7.242075,8.119483,-1.795563,0.089564,0.183077,0.119090,-9.103011,8.270027,-5.056512,5.082035,6.971738,3.528471,-3.825232,9.466080,-5.372873,-8.873818,9.515563,2.343739,-7.237246,-1.972204,-6.191586,-4.499923,-5.821506,1.533964,-5.402578,5.197466,-0.563178,3.633244,0.677187,0.991063,8.196647,0.065809,5.535718,-3.570861,0.828871,-2.438635,-6.029258,-5.241288,-4.821082,0.647819,-4.614239,0.516180,2.438581,7.460367,6.851212,-3.721841,-9.280565,1.282043,6.572451,8.420079,8.700717,-9.549500,8.593801,-8.207868,-6.100835,-4.423674,7.464859,-2.805142,-5.347855,6.211916,-9.325752,-7.324378,0.591316,-2.776710,1.179179,0.925314,7.597965,6.044340,-7.786605,6.875847,0.145054,3.318478,6.790563,-7.656128,6.786139,3.006462,4.591120,6.495991,0.369665,8.786771,1.682150,3.154426,-0.527168,7.958160,4.997323,-7.746625,-4.010893,1.360571,4.250179,-6.875273,9.555248,-9.909725,8.823352,4.024549,2.533563,-9.009900,4.412187,-8.503649,-9.222279,-5.722283,-5.309758,-5.861169,-3.636921,-4.304307,4.905677,-2.725008,-6.960653,-4.816217,-4.739932,-7.841534,-8.579180,3.485328,3.154534,-2.139754,3.097612,0.564537,1.539450,8.076947,9.840411,3.970634,-9.424825,4.410720,-3.779306,-7.989742,4.143530,-0.330632,0.231835,1.912394,5.127694,-7.796895,-8.207210,-9.378542,-8.413869,5.676826,8.135295,-1.362114,-1.169247,-5.629003,7.511471,-9.678208,-2.588392,5.373691,-3.408685,-6.570171,-8.219900,-3.176481,-7.994871,-7.037545,-2.243328,-5.292487,-5.744396,9.199814,-5.073498,0.122823,5.197410,-0.157148,-6.452635,5.096542,-4.576388,8.223806,7.324590,7.622015,-2.096424,-9.262921,1.110644,9.868854,6.167017,-5.699104,-4.910839,-3.593430,1.717686,9.245701,-8.820437,-3.921780,-8.894316,9.081631,-2.102363,4.982055,-2.775452,7.744479,-9.213495,2.542672,-9.099484,4.252444,2.982730,-8.112284,-1.794106,-6.994410,-2.196036,4.181031,-4.264228,-1.737288,4.131341,-4.682533], dtype = "float64")#candidate|7385|(468,)|const|float64
const_7386 = relay.const([-5.614837,-4.227554,3.296462,2.343772,8.469016,8.929974,-4.408672,-4.114674,7.780529,4.297669,-2.910728,-0.977442,-6.166688,0.087144,-6.125648,6.852743,1.156951,8.184275,-9.074922,5.150179,-9.934898,0.547059,-3.003992,-1.367482,-6.090760,-5.238762,4.766861,-8.663563,4.338030,-5.217530,7.468790,-2.812328,7.090098,7.631561,-1.068067,4.271471,6.874526,8.429087,-5.037021,8.053575,-0.743024,6.223053,-2.270606,5.931836,1.801460,-9.908579,3.486008,2.850773,-8.203858,-1.137950,6.152414,-2.231837,3.472513,-3.106878,7.516116,-4.834708,3.389903,2.520662,2.714434,9.996658,-7.341761,7.093109,-8.512383,-6.546340,5.631871,-6.089325,-2.053161,-0.795960,-2.497405,8.459659,-0.634973,7.562152,8.230864,-0.025485,9.248715,2.301593,8.187949,-4.709958,4.548567,-9.047844,7.168430,7.532176,4.374050,5.010139,5.895517,0.273835,-1.564703,7.041836,-3.480453,8.951431,-2.120453,0.657467,0.730375,8.949852,9.287425,-2.300253,-8.843867,-7.731988,5.952759,-1.744462,5.728740,-8.679981,-2.708959,7.137880,7.112785,5.995859,-6.738233,2.876370,-6.340364,-0.156292,1.377848,-9.393532,8.046322,4.744148,8.936816,4.487593,-7.799811,-8.322970,8.075135,7.413689,-9.202801,-7.495120,4.905216,1.901534,0.598314,2.679084,-9.581354,-1.059401,7.041736,-9.961014,7.951683,2.615136,4.737758,9.902803,3.634523,-6.633029,2.006153,-1.147994,-7.162985,-1.212266,-4.319937,-2.397192,7.761130,-6.155456,4.801660,8.000326,-1.476485,-1.034418,8.494690,-7.734248,-1.050604,-1.376838,-5.908216,-9.945217,-6.563201,-2.831172,0.138394,8.640684,5.494736,4.740734,-9.109454,-1.359845,6.288257,0.048462,-4.762359,3.025514,-6.536278,-7.349471,3.301764,5.370680,5.328725,-2.003981,7.521143,2.358008,6.690020,3.328385,-6.267592,-6.450227,-7.547353,-2.966633,0.181481,8.155464,4.099227,-5.047817,-3.140772,3.425726,2.305606,-5.524258,0.733102,-4.319636,-5.598185,0.206074,7.986733,-9.918956,6.105368,-9.676313,9.070748,-5.259774,2.951980,8.393083,-1.701230,9.824490,-7.514599,-3.111473,2.710030,-0.924067,-8.480888,-3.176747,8.763694,8.375703,9.040225,9.849490,5.510915,-8.543103,8.931246,4.593732,-7.525422,4.040068,-0.937495,-0.521588,-0.908273,-6.047010,-8.931278,-0.068335,6.279374,-1.241982,5.790700,7.972595,8.835365,3.326349,1.800402,2.079936,9.057115,-1.972985,-0.444785,-6.106152,1.823578,-5.852812,9.304539,9.331009,-2.235658,-9.937245,-3.340216,1.325980,8.012534,-9.589984,0.948002,-7.614823,-5.670140,-8.780982,3.735994,-4.219226,7.080249,3.393941,8.670513,-4.672363,-6.614008,-9.137455,-6.275749,3.183048,-9.459580,1.286660,8.993546,7.569033,-6.550583,-3.032352,-3.633484,2.846551,3.789154,-8.985082,7.034326,8.936111,7.940661,-2.835631,7.016532,3.256313,9.759373,2.680850,-1.497328,8.070029,-7.517674,4.039491,-1.571782,4.763432,6.935492,-3.035619,-6.292678,-0.245025,7.921939,5.429029,-9.636955,1.038934,3.398893,-8.384174,3.096340,5.885050,-0.364831,-6.468315,1.421986,-1.302538,5.222761,4.767439,-1.530859,-8.043066,3.815975,-1.350513,-8.824571,7.226530,-0.163085,-2.156545,6.416730,-0.445699,-4.867824,-7.834624,-7.263593,-0.435456,-3.030026,5.331708,2.148975,-4.704127,3.662442,8.331258,-0.566085,-1.925776,-9.148173,-4.821874,-5.377126,5.061444,0.379426,-5.946341,0.464350,-6.088981,-4.204868,-4.467507,0.616757,-5.830544,-6.000398,-2.633466,6.816721,4.833430,7.864030,3.408028,-6.207308,-8.012626,3.490923,5.740607,0.805409,-0.588202,1.128619,-7.110537,6.574715,-4.328482,-7.669243,2.311843,5.370361,5.732551,-0.708364,-6.810252,-6.416158,0.153720,3.767833,-9.386514,-7.436764,-2.185347,5.160137,-7.504979,-0.664017,-8.737205,3.583937,-9.276216,5.875257,-8.812567,-0.289761,-5.197857,7.956569,-9.726420,2.902309,-4.565719,6.982267,1.617021,9.418625,-4.365314,-8.156997,-5.444309,-9.662309,-9.935642,-1.180055,4.781534,2.790854,3.839022,6.307188,3.892171,-9.529472,-6.259897,0.585267,0.207918,8.836820,-1.437007,-7.136488,-6.331552,5.316093,-2.828051,9.511112,-4.792980,-5.513581,5.827983,-2.542382,-7.535708,-3.049762,-7.637139,-5.355221,-0.278973,1.903272,-4.794338,4.263605,-6.595551,2.007841,5.820590,1.172930,-5.764189,1.186061,6.261935,-3.037697,9.885672,9.484721,-6.775365,7.967313,7.835417,9.246290,-3.277974,-5.967383,9.590756,-5.366938,-4.762800,0.710643,7.443098,8.294126,-6.047336,-5.631719,-0.338972,4.967691,9.687126,-5.333369,-7.586026,-8.974755,-2.817630,4.953316,3.996619,-5.450962,6.247106,-0.389221,8.035678,-7.906375,1.027787,1.435894,-4.191179,0.230855,0.882753,-0.186234,8.859895,-6.728728,-0.999157,-9.741315,5.127366,6.746776,-8.999828,6.198953,4.915936,7.926679,-1.443989,0.929858,6.210495,4.459495,-5.934335,-8.884331,-1.542230,0.442470,1.545924,-7.037917,3.538086,3.511802,7.015140,9.175593,-9.891025,-1.323466,3.866454,2.564898,-6.443146,1.830761,4.462983,-3.426842,-2.013165,-8.892378,8.845271,4.341640,-1.208912,-0.140094,4.501112,3.186264,-3.581423,0.596989,7.120017,7.762134,7.455652,-4.295486,-3.297242,-7.396246,-4.103303,-0.457803,-2.369324,-2.234911,9.622131,-5.901818,-3.758477,-8.022311,9.740446,-7.066745,7.581858,-9.218886,-8.850936,4.964221,-4.455666,-0.595845,-0.044125,-9.584781,-4.842197,8.426876,-5.381253,-7.586031,8.039697,2.610537,-9.389063,1.317850,9.452649,-2.779049,-0.831123,2.217733,-4.207187,-7.888868,-2.295875,6.846333,1.774907,-1.149664,-8.859440,6.394876,-4.034668,6.823199,-7.203656,-7.283366,-1.458532,-5.923942,-8.282434,9.686214,5.962599,5.082270,1.646486,-9.908026,7.653214,-8.732235,4.397382,-7.626822,-2.846819,6.494775,-8.495632,5.979247,-3.470084,-3.267154,1.584446,4.576746,3.986626,-6.838082,3.104710,3.897690,-4.049818,5.640978,6.543361,1.151235,0.898835,4.551121,-1.035088,-9.480511,-2.889794,2.043087,1.806215,-1.885018,6.612437,2.251772,3.945130,3.308913,-8.579484,6.098229,-9.642260,4.164427,9.806975,-1.648528,5.804820,2.457697,9.420444,0.136309,3.272883,7.144433,3.807588,-9.706463,0.653933,-7.864590,-7.783985,-7.935609,-2.327566,-0.622415,-6.040986,3.437036,5.357836,0.136998,3.735374,5.842150,-8.605425,6.210991,5.508645,-5.420956,9.264761,-2.329650,-0.940604,7.127953,4.465663,5.574820,-3.814034,9.859133,4.323711,-3.075592,-6.255027,8.004948,-4.572180,-2.787058,-9.457689,-5.942632,3.199809,9.973514,9.068574,-3.926531,-2.813809,-4.692630,-4.764428,2.030523,-5.353121,-5.878989,6.216210,6.648231,-4.651489,-6.674095,-6.433004,-3.770137,2.055360,-0.495311,-8.334559,9.102281,-9.638216,4.706023,-4.935442,-1.489990,-8.953290,0.846343,-4.427210,5.518427,-8.718388,-5.758983,4.803219,-2.172680,-3.631559,3.548510,1.662433,-6.412241,1.108316,-3.518640,-1.186299,-5.597785,7.256629,-0.840328,5.614997,-4.151259,6.931365,-3.459361,5.839767,-7.824178,3.690032,0.085096,-9.821017,-1.008043,1.221413,8.583754,5.908491,5.759862,9.340811,5.667269,1.656671,-2.169484,-1.977251,7.862388,2.834448,8.510801,-3.454901,3.739004,-2.112596,-5.085624,-9.985617,2.429464,2.451393,-2.643514,1.310695,1.799139,9.390618,0.699169,4.325772,-2.530344,-9.281427,8.111064,-1.833297,-9.360093,1.742318,-6.503484,-9.065544,1.858121,-7.876997,5.491185,2.913596,9.711211,-5.406472,-7.516335,6.984923,7.559117,1.992612,-3.482491,8.554658,-9.504225,6.364806,1.018132,3.603453,-4.817165,-8.061512,0.361573,-5.395135,7.113922,2.914517,-5.309132,-4.590701,4.800981,4.220757,9.993698,-4.777199,6.054925,-6.574286,0.131150,5.486893,-5.534219,2.152924,-2.746157,-4.025783,8.552338,0.739123,-8.095085,2.483408,6.599539,-2.043743,9.446574,2.367814,-5.318423,4.295035,0.020552,3.148807,6.047630,5.450238,8.294742,4.501990,6.391787,-8.132489,-7.973451,4.652563,-4.523720,-7.374436,-8.827075,-2.546387,2.572653,3.320288,2.618757,-7.611084,7.251587,-4.650236,1.211857,6.830641,-0.844671,0.875226,8.594941,4.103454,-0.686361,-9.498510,7.975388,8.754043,-9.575548,9.434394,-3.557309,-8.020459,4.669960,-6.842442,-0.368409,4.744940,4.573349,5.402898,-1.772271,9.998046,-9.012313,9.870870,-1.125263,7.224734,4.949997,-7.858342,-3.308576,-1.870307,8.575352,9.183743,-2.659939,4.672392,6.743599,1.129275,0.512269,-6.167397,-5.750753,2.726790,-7.307988,3.797002,4.833274,1.542894,6.410133,0.343484,-5.035357,-2.703950,5.944356,8.387536,1.506780,-5.809576,9.704375,-9.232932,6.321118,-4.344651,-3.796532,3.294252,-2.598646,-7.598865,-5.629006,-4.362225,-5.621057,-2.016497,-5.457115,-3.672937,-6.076364,-7.335344,4.930607,3.561498,-3.223550,-2.303961,7.371180,-7.568723,5.387772,7.146346,-9.310691,-9.402927,8.152862,7.717047,-8.749342,3.549890,-1.415658,-6.758672,-8.827155,-4.457749,-6.185961,-3.162608,9.311472,6.178486,5.970183,-2.331764,-1.257556,-0.655586,3.544540,-8.712078,9.328518,-1.271860,0.172323,9.403366,-8.695524,4.835872,-9.750162,6.025095,-7.016776,-3.275959,2.009787,-9.985210,-0.640037,1.579265,-6.896451,1.728799,6.755610,2.709554,9.898950,0.940555,1.297848,-5.073145,-5.346799,7.567262,-4.843489,-3.689351,-2.380799,3.684133,6.347656,6.121497,-3.803280,2.241617,-2.975555,8.201633,2.400731,-7.935843,7.540611,-7.972070,-9.031656,-0.186859,-4.507944,-7.268577,7.173086,5.994169,1.163882,-7.043001,5.849243,3.544816,8.562819,8.695107,9.472790,8.952614,-1.218690,-6.526045,5.872320,1.052720,8.135310,-4.133886,-5.516845,5.364004,-8.781063,8.506558,8.677616,-8.978993,7.574413,8.898266,6.477290,7.339960,3.496555,-6.299771,3.033724,-9.078459,6.028246,9.594640,-7.010888,7.117500,5.634461,-2.792744,-1.533848,0.395275,8.133090,-7.350577,4.734652,-4.705486,-2.821727,9.169387,2.471813,-8.067130,-7.345662,-8.631623,3.532554,-3.586465,-5.114536,3.699738,5.061847,1.751331,-4.434543,8.258669,7.242001,-7.292177,-5.856740,2.791743,6.298604,-6.861712,-8.555456,-1.734611,9.849263,-6.554403,6.555064,-5.911468,-3.769286,5.099232,8.074592,-2.325888,4.449575,-3.236671,-5.555935,1.815494,-1.795304,4.752889,-9.127477,-5.864615,-9.650162,9.683863,-1.744405,-9.012634,7.461737,6.500728,-4.448452,-4.652930,-0.690026,0.084638,-9.456510,-4.769581,0.267734,0.849852,0.503803,9.752336,-6.365845,-1.489191,-3.684663,0.022460,-6.637758,-5.666359,-5.368924,-4.789235,-5.582742,6.488827,-6.953692,1.621608,-6.927171,8.250935,-5.001427,4.998452,-3.569464,5.167279,2.204724,-4.217353,-1.168410,-3.125921,6.781538,7.010574,8.210606,5.369021,7.838615,9.610709,7.017533,7.307061,7.569411,0.185459,-3.178832,-3.514898,0.609538,-1.116428,4.231290,6.180734,6.769790,-8.451317,8.261382,6.449002,-5.504632,-6.881723,3.522934,3.110811,0.953969,-6.530166,-5.510570,2.732626,-4.810966,2.779666,-4.181708,-9.529224,2.981481,-2.783355,-8.554882,2.026413,-6.534319,1.274473,-3.884055,-8.105563,3.488432,4.993333,1.074890,4.499224,-2.311793,-9.824341,6.927838,6.840600,3.687077,-1.517350,7.286256,3.149785,3.958356,6.730125,5.869681,9.269059,1.289799,-5.218690,6.287298,-4.759756,-7.575953,7.796244,7.519289,0.306980,-6.451626,0.072518,1.398556,-1.533596,3.625482,-5.213643,1.123318,3.434519,3.164666,-4.865513,4.628171,-7.809105,6.259731,-6.067193,-5.186672,8.288552,4.570539,-4.538675,5.469066,8.994900,2.434620,-0.504446,-6.135673,9.489374,4.315942,-0.961188,-2.528207,2.889410,-3.465365,-4.329680,1.626161,-0.849335,-2.642977,8.240659,7.481541,-5.833143,5.095461,0.947012,-9.903698,1.887141,-9.414820,8.060158,-6.448179,-3.173427,-0.242316,-5.326569,0.857022,-8.581098,5.550330,5.988832,-1.423566,5.619760,-3.732953,3.991999,7.431589,0.131891,8.469893,-9.164056,7.695423,-9.011096,-6.439827,0.449229,6.832216,5.871871,3.935166,8.313389,3.926812,0.013483,-9.991811,-9.368582], dtype = "float64")#candidate|7386|(1176,)|const|float64
call_7382 = relay.TupleGetItem(func_3808_call(relay.reshape(const_7383.astype('float64'), [5, 16, 7]), relay.reshape(const_7384.astype('float64'), [180,]), relay.reshape(const_7385.astype('float64'), [468,]), relay.reshape(const_7386.astype('float64'), [1176,]), ), 1)
call_7387 = relay.TupleGetItem(func_3814_call(relay.reshape(const_7383.astype('float64'), [5, 16, 7]), relay.reshape(const_7384.astype('float64'), [180,]), relay.reshape(const_7385.astype('float64'), [468,]), relay.reshape(const_7386.astype('float64'), [1176,]), ), 1)
output = relay.Tuple([call_7373,call_7382,const_7383,const_7384,const_7385,const_7386,])
output2 = relay.Tuple([call_7374,call_7387,const_7383,const_7384,const_7385,const_7386,])
func_7395 = relay.Function([], output)
mod['func_7395'] = func_7395
mod = relay.transform.InferType()(mod)
output = func_7395()
func_7396 = relay.Function([], output)
mutated_mod['func_7396'] = func_7396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6475_call = mod.get_global_var('func_6475')
func_6476_call = mutated_mod.get_global_var('func_6476')
call_7420 = relay.TupleGetItem(func_6475_call(), 2)
call_7421 = relay.TupleGetItem(func_6476_call(), 2)
func_5654_call = mod.get_global_var('func_5654')
func_5657_call = mutated_mod.get_global_var('func_5657')
var_7435 = relay.var("var_7435", dtype = "uint64", shape = ())#candidate|7435|()|var|uint64
var_7436 = relay.var("var_7436", dtype = "uint64", shape = (24,))#candidate|7436|(24,)|var|uint64
call_7434 = relay.TupleGetItem(func_5654_call(relay.reshape(var_7435.astype('uint64'), []), relay.reshape(var_7436.astype('uint64'), [8, 3, 1]), ), 0)
call_7437 = relay.TupleGetItem(func_5657_call(relay.reshape(var_7435.astype('uint64'), []), relay.reshape(var_7436.astype('uint64'), [8, 3, 1]), ), 0)
output = relay.Tuple([call_7420,call_7434,var_7435,var_7436,])
output2 = relay.Tuple([call_7421,call_7437,var_7435,var_7436,])
func_7441 = relay.Function([var_7435,var_7436,], output)
mod['func_7441'] = func_7441
mod = relay.transform.InferType()(mod)
mutated_mod['func_7441'] = func_7441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7441_call = mutated_mod.get_global_var('func_7441')
var_7443 = relay.var("var_7443", dtype = "uint64", shape = ())#candidate|7443|()|var|uint64
var_7444 = relay.var("var_7444", dtype = "uint64", shape = (24,))#candidate|7444|(24,)|var|uint64
call_7442 = func_7441_call(var_7443,var_7444,)
output = call_7442
func_7445 = relay.Function([var_7443,var_7444,], output)
mutated_mod['func_7445'] = func_7445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7162_call = mod.get_global_var('func_7162')
func_7163_call = mutated_mod.get_global_var('func_7163')
call_7502 = relay.TupleGetItem(func_7162_call(), 0)
call_7503 = relay.TupleGetItem(func_7163_call(), 0)
uop_7508 = relay.tan(call_7502.astype('float32')) # shape=(1, 10, 14)
uop_7510 = relay.tan(call_7503.astype('float32')) # shape=(1, 10, 14)
func_6831_call = mod.get_global_var('func_6831')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_7511 = func_6831_call()
call_7512 = func_6831_call()
var_7522 = relay.var("var_7522", dtype = "float64", shape = (3, 10, 14))#candidate|7522|(3, 10, 14)|var|float64
bop_7523 = relay.minimum(call_7511.astype('int8'), var_7522.astype('int8')) # shape=(3, 10, 14)
bop_7526 = relay.minimum(call_7512.astype('int8'), var_7522.astype('int8')) # shape=(3, 10, 14)
output = relay.Tuple([uop_7508,bop_7523,])
output2 = relay.Tuple([uop_7510,bop_7526,])
func_7544 = relay.Function([var_7522,], output)
mod['func_7544'] = func_7544
mod = relay.transform.InferType()(mod)
mutated_mod['func_7544'] = func_7544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7545 = relay.var("var_7545", dtype = "float64", shape = (3, 10, 14))#candidate|7545|(3, 10, 14)|var|float64
func_7544_call = mutated_mod.get_global_var('func_7544')
call_7546 = func_7544_call(var_7545)
output = call_7546
func_7547 = relay.Function([var_7545], output)
mutated_mod['func_7547'] = func_7547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7225_call = mod.get_global_var('func_7225')
func_7227_call = mutated_mod.get_global_var('func_7227')
call_7577 = relay.TupleGetItem(func_7225_call(), 0)
call_7578 = relay.TupleGetItem(func_7227_call(), 0)
func_6755_call = mod.get_global_var('func_6755')
func_6757_call = mutated_mod.get_global_var('func_6757')
var_7595 = relay.var("var_7595", dtype = "int16", shape = (420,))#candidate|7595|(420,)|var|int16
call_7594 = func_6755_call(relay.reshape(var_7595.astype('int16'), [3, 10, 14]))
call_7596 = func_6755_call(relay.reshape(var_7595.astype('int16'), [3, 10, 14]))
func_6755_call = mod.get_global_var('func_6755')
func_6757_call = mutated_mod.get_global_var('func_6757')
call_7598 = func_6755_call(relay.reshape(var_7595.astype('int16'), [3, 10, 14]))
call_7599 = func_6755_call(relay.reshape(var_7595.astype('int16'), [3, 10, 14]))
output = relay.Tuple([call_7577,call_7594,var_7595,call_7598,])
output2 = relay.Tuple([call_7578,call_7596,var_7595,call_7599,])
func_7600 = relay.Function([var_7595,], output)
mod['func_7600'] = func_7600
mod = relay.transform.InferType()(mod)
mutated_mod['func_7600'] = func_7600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7601 = relay.var("var_7601", dtype = "int16", shape = (420,))#candidate|7601|(420,)|var|int16
func_7600_call = mutated_mod.get_global_var('func_7600')
call_7602 = func_7600_call(var_7601)
output = call_7602
func_7603 = relay.Function([var_7601], output)
mutated_mod['func_7603'] = func_7603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6243_call = mod.get_global_var('func_6243')
func_6244_call = mutated_mod.get_global_var('func_6244')
call_7644 = func_6243_call()
call_7645 = func_6243_call()
func_7225_call = mod.get_global_var('func_7225')
func_7227_call = mutated_mod.get_global_var('func_7227')
call_7657 = relay.TupleGetItem(func_7225_call(), 0)
call_7658 = relay.TupleGetItem(func_7227_call(), 0)
func_1653_call = mod.get_global_var('func_1653')
func_1657_call = mutated_mod.get_global_var('func_1657')
var_7665 = relay.var("var_7665", dtype = "bool", shape = ())#candidate|7665|()|var|bool
const_7666 = relay.const([True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,False,True,True], dtype = "bool")#candidate|7666|(2304,)|const|bool
call_7664 = func_1653_call(relay.reshape(var_7665.astype('bool'), []), relay.reshape(const_7666.astype('bool'), [16, 9, 16]), )
call_7667 = func_1653_call(relay.reshape(var_7665.astype('bool'), []), relay.reshape(const_7666.astype('bool'), [16, 9, 16]), )
output = relay.Tuple([call_7644,call_7657,call_7664,var_7665,const_7666,])
output2 = relay.Tuple([call_7645,call_7658,call_7667,var_7665,const_7666,])
func_7686 = relay.Function([var_7665,], output)
mod['func_7686'] = func_7686
mod = relay.transform.InferType()(mod)
var_7687 = relay.var("var_7687", dtype = "bool", shape = ())#candidate|7687|()|var|bool
output = func_7686(var_7687)
func_7688 = relay.Function([var_7687], output)
mutated_mod['func_7688'] = func_7688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6179_call = mutated_mod.get_global_var('func_6179')
call_7690 = func_6177_call()
call_7691 = func_6177_call()
output = relay.Tuple([call_7690,])
output2 = relay.Tuple([call_7691,])
func_7704 = relay.Function([], output)
mod['func_7704'] = func_7704
mod = relay.transform.InferType()(mod)
output = func_7704()
func_7705 = relay.Function([], output)
mutated_mod['func_7705'] = func_7705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6292_call = mod.get_global_var('func_6292')
func_6294_call = mutated_mod.get_global_var('func_6294')
call_7806 = relay.TupleGetItem(func_6292_call(), 2)
call_7807 = relay.TupleGetItem(func_6294_call(), 2)
output = relay.Tuple([call_7806,])
output2 = relay.Tuple([call_7807,])
func_7830 = relay.Function([], output)
mod['func_7830'] = func_7830
mod = relay.transform.InferType()(mod)
output = func_7830()
func_7831 = relay.Function([], output)
mutated_mod['func_7831'] = func_7831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7838 = relay.var("var_7838", dtype = "uint8", shape = ())#candidate|7838|()|var|uint8
var_7839 = relay.var("var_7839", dtype = "uint8", shape = (11, 13, 7))#candidate|7839|(11, 13, 7)|var|uint8
bop_7840 = relay.add(var_7838.astype('uint8'), var_7839.astype('uint8')) # shape=(11, 13, 7)
output = bop_7840
output2 = bop_7840
func_7843 = relay.Function([var_7838,var_7839,], output)
mod['func_7843'] = func_7843
mod = relay.transform.InferType()(mod)
var_7844 = relay.var("var_7844", dtype = "uint8", shape = ())#candidate|7844|()|var|uint8
var_7845 = relay.var("var_7845", dtype = "uint8", shape = (11, 13, 7))#candidate|7845|(11, 13, 7)|var|uint8
output = func_7843(var_7844,var_7845,)
func_7846 = relay.Function([var_7844,var_7845,], output)
mutated_mod['func_7846'] = func_7846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6243_call = mod.get_global_var('func_6243')
func_6244_call = mutated_mod.get_global_var('func_6244')
call_7935 = func_6243_call()
call_7936 = func_6243_call()
output = call_7935
output2 = call_7936
func_7948 = relay.Function([], output)
mod['func_7948'] = func_7948
mod = relay.transform.InferType()(mod)
mutated_mod['func_7948'] = func_7948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mutated_mod.get_global_var('func_7948')
call_7949 = func_7948_call()
output = call_7949
func_7950 = relay.Function([], output)
mutated_mod['func_7950'] = func_7950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6179_call = mutated_mod.get_global_var('func_6179')
call_8004 = func_6177_call()
call_8005 = func_6177_call()
func_7183_call = mod.get_global_var('func_7183')
func_7186_call = mutated_mod.get_global_var('func_7186')
const_8015 = relay.const([-4.418924,5.952116,-6.894690,-1.846223,-2.309506,-4.850111,-4.989609,-5.572723,1.262883,4.923767,2.812878,0.291068,0.346104,-7.873946,7.714485,1.925526,7.485864,7.517498,-7.913366,9.388550,3.873149,-2.920642,-2.794493,-3.677957,5.672914,2.584463,1.291063,1.978293,4.851092,8.960596,0.838300,-6.909237,-6.789431,-8.106564,8.121882,9.196405,-9.052099,8.730437,-0.524910,-2.194282,3.760952,4.106183,-4.978145,6.644009,-3.966582,8.916763,9.263677,-4.466548,0.131053,3.406890,0.565154,7.744638,-5.781912,-8.540382,-5.770324,-6.876932,-0.636885,-3.834678,-6.549242,-4.585613,-6.304000,-9.311242,1.432179,7.381218,-3.250408,0.736614,-1.427199,5.079153,1.654181,0.546610,-9.537392,0.545495,6.212431,9.904669,-5.036180,-8.435519,9.126565,-6.659435,-9.299696,7.732514,-5.521795,-7.338709,2.651420,3.538748,0.524225,-5.527861,3.714262,-3.231017,5.073345,-3.468806,9.817372,0.184732,-5.066438,9.726259,9.536914,7.844697,8.736060,-0.909027,5.277550,-0.526720,7.088402,-1.111889,-0.760808,2.014272,-6.675377,4.729372,9.990132,0.732136,6.247259,-8.884822,4.988703,-6.053233,0.138728,-6.860459,1.993679,3.583056,3.051264,8.517638,-5.853120,-1.304143,-9.820565,-9.060147,-7.374936,1.327413,-8.242616,-1.618984,7.079697,-1.021880,-4.160920,2.423580,9.850947,-8.963217,-8.241376,0.831338,-7.468369,-6.924986,5.172701,-3.941767,-2.393782,3.701473,8.200855,-1.552014,1.940180,8.555986,7.967886,5.938707,9.458636,-7.855950,5.106922,-6.720950,8.200534,-7.264371,0.984943,-5.113263,5.951139,-8.514255,1.351489,4.043487,-0.666330,-3.621265,-4.744615,-8.867124,4.738373,6.772609,-4.334346,7.185599,-2.469479,8.204873,-1.754630,6.185684,1.985192,2.902203,9.574111,7.118985,8.780857,0.307298,5.361015,-4.170653,-0.167998,0.237569,2.878638,-0.041222,5.585422,-9.158387,9.076792,2.039905,5.415543,-4.905910,6.562419,-1.769050,3.582721,-8.520416,-4.918325,-2.565345,9.248443,5.466017,-2.265738,-0.441301,1.387307,4.680358,0.044170,-6.796398,1.479128,4.385027,-8.197554,-2.521765,7.207227,6.115030,5.324984,1.321866,4.725313,9.733122,-6.130428,9.370757,-4.265261,0.240499], dtype = "float32")#candidate|8015|(216,)|const|float32
call_8014 = relay.TupleGetItem(func_7183_call(relay.reshape(const_8015.astype('float32'), [216,])), 0)
call_8016 = relay.TupleGetItem(func_7186_call(relay.reshape(const_8015.astype('float32'), [216,])), 0)
bop_8018 = relay.right_shift(call_8004.astype('uint64'), relay.reshape(call_8014.astype('uint64'), relay.shape_of(call_8004))) # shape=(1, 10, 14)
bop_8021 = relay.right_shift(call_8005.astype('uint64'), relay.reshape(call_8016.astype('uint64'), relay.shape_of(call_8005))) # shape=(1, 10, 14)
output = relay.Tuple([const_8015,bop_8018,])
output2 = relay.Tuple([const_8015,bop_8021,])
func_8031 = relay.Function([], output)
mod['func_8031'] = func_8031
mod = relay.transform.InferType()(mod)
mutated_mod['func_8031'] = func_8031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8031_call = mutated_mod.get_global_var('func_8031')
call_8032 = func_8031_call()
output = call_8032
func_8033 = relay.Function([], output)
mutated_mod['func_8033'] = func_8033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_8034 = relay.TupleGetItem(func_5463_call(), 0)
call_8035 = relay.TupleGetItem(func_5464_call(), 0)
output = call_8034
output2 = call_8035
func_8036 = relay.Function([], output)
mod['func_8036'] = func_8036
mod = relay.transform.InferType()(mod)
mutated_mod['func_8036'] = func_8036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8036_call = mutated_mod.get_global_var('func_8036')
call_8037 = func_8036_call()
output = call_8037
func_8038 = relay.Function([], output)
mutated_mod['func_8038'] = func_8038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8031_call = mod.get_global_var('func_8031')
func_8033_call = mutated_mod.get_global_var('func_8033')
call_8065 = relay.TupleGetItem(func_8031_call(), 0)
call_8066 = relay.TupleGetItem(func_8033_call(), 0)
func_5759_call = mod.get_global_var('func_5759')
func_5761_call = mutated_mod.get_global_var('func_5761')
var_8086 = relay.var("var_8086", dtype = "int64", shape = (14, 1))#candidate|8086|(14, 1)|var|int64
call_8085 = relay.TupleGetItem(func_5759_call(relay.reshape(var_8086.astype('int64'), [7, 2])), 0)
call_8087 = relay.TupleGetItem(func_5761_call(relay.reshape(var_8086.astype('int64'), [7, 2])), 0)
func_6243_call = mod.get_global_var('func_6243')
func_6244_call = mutated_mod.get_global_var('func_6244')
call_8090 = func_6243_call()
call_8091 = func_6243_call()
func_6121_call = mod.get_global_var('func_6121')
func_6125_call = mutated_mod.get_global_var('func_6125')
const_8110 = relay.const([-4.661522,-5.445800,-0.779853,-5.194097,-3.773182,-6.423784,-5.197648,1.541933,1.697690,-4.923259,-1.779833,7.761014,-4.406724,8.075785,6.335443,-0.266157,-6.347395,9.011262,-5.699654,-5.087522,1.688762,-1.499045,2.706703,9.421091,5.696225,-3.512616,-7.934861,-6.461776,4.533823,-4.277172,3.460653,-8.849475,4.978064,-4.718577,8.858229,-6.535409,-9.533671,-2.815206,-0.892309,-8.580252,4.926115,-2.726131,-2.258315,-8.946100,-6.576393,-8.250965,9.940365,9.100073,-6.238437,9.996828,-1.475354,5.866028,-0.099850,1.829846,9.686869,4.945251,-1.239925,-3.173721,-9.715248,-7.705503,5.693932,-1.454656,4.383420,4.460663,-7.483055,3.620474,9.824737,2.423653,5.183058,-0.732027,-7.418751,0.889903,1.717336,3.247642,9.205073,-1.895659,6.622286,6.727644,7.242273,-9.988263,0.937147,-6.568912,-7.787333,0.523414,-1.146012,2.702612,8.476848,2.456058,-6.523764,-9.329070,-8.947454,9.693692,-9.535253,-5.240585,6.872862,9.275307,5.560875,1.843398,8.495983,8.814690,6.859026,-0.108478,5.318874,5.899949,-3.465550,0.289766,0.337750,-5.213632,-8.883802,1.084805,-4.303570,-2.522297,-2.304539,9.681059,-7.783837,-1.661598,9.710243,-8.968763,-4.475870,8.795021,-2.991587,-4.873885,7.424078,8.216576,2.551648,7.648662,1.633394,9.790975,-0.394231,5.616249,0.924391,-4.543364,-8.157884,-6.961620,-2.805437,0.915218,-8.024213,-4.395414,8.840589,6.952536,-0.258940,-0.189894,5.640124,-4.354833,-5.792321,-0.314855,1.311878,3.038444,-1.964511,-7.673173,7.519576,7.448803,0.209833,0.174477,6.834833,-3.288417,1.384260,8.420118,-4.207556,-8.878539,6.767941,8.658732,6.229138,-8.542464,-7.854774,7.466516,-9.796241,6.432028,-1.393604,-2.903740,-3.222863,-0.004726,0.858396,-7.739621,1.707845,9.842486,2.672792,6.424833,3.062223,-8.441691,-8.193141,8.300610,-7.106414,5.633704,4.072993,-4.221062,-1.221982,1.108818,-4.869312,9.564356,2.805184,-3.397660,1.542746,1.881249,8.939703,-4.535987,9.135483,2.095371,5.760713,6.545635,-2.550352,-5.460212,-1.660552,2.469098,4.638046,-7.326180,6.523849,2.880110,-7.526992,8.270106,1.223387,9.267365,9.752501,-7.771597,3.735472,8.944758,-9.128946,-7.480911,3.776969,6.879883,8.636303,7.540162,6.558425,7.528052,-6.805100,7.717497,3.866985,-8.791180,3.245913,4.990527,-5.291413,6.563672,-9.933640,0.174082,1.613752,-9.879146,-4.488668,9.662629,-9.543606,4.356264,2.509027,-3.345222,-2.427378,2.194489,-1.219922,-9.516846,0.612440,0.722314,-7.009662,0.854116,8.919297,-2.143616,-1.563207,7.793234,-1.921958,2.980405,-9.177259,-5.075574,-2.490577,-5.163526,-4.478965,-4.039398,-3.366419,1.851410,-6.842286,-5.382063,-0.894533,-2.901956,-3.158701,-3.018608,-8.165922,-3.086597,0.827006,8.166180,-0.979697,-1.617712,9.350336,-9.141003,-7.568126,-0.094758,1.590394,7.501007,5.918569,-2.034925,0.987195,-8.129555,-8.998095,-5.548224,-3.349646,6.901258,-0.744523,3.165208,-2.371731,9.071283,-2.256287,-6.192540,5.965270,5.584449,4.209063,-7.106393,-1.395946,-6.702051,-8.182487,0.509094,1.018635,0.147436,-0.028688,9.775894,6.379802,-5.563354,-5.662506,4.433816,-8.240885,-8.859282,-0.155635,-4.645514,8.829859,2.317976,-3.357470,-0.210810,2.133339,1.769542,3.425809,7.743412,5.603457,-8.654960,-2.990962,1.035453,-2.851361,-0.259545,4.430366,-1.182916,2.128893,-6.066190,-6.246053,1.996681,-4.622768,7.338762,4.933428,-5.331485,-7.837476,-2.578016,-5.251616,3.125780,6.842583,1.017333,5.696177,-5.736788,2.259457,-0.829560,4.975158,-3.254280,-6.011857,9.989599,-8.366922,-4.407719,-7.335661,3.385031,9.137435,-4.498438,-7.294592,2.772877,1.328753,-9.301977,-0.899398,-3.120313,5.280313,7.061117,-0.753273,5.425683,6.781970,-4.011173,8.880774,-8.275765,-6.166103,3.992676,4.384101,-2.321559,-0.947302,4.548563,7.852626,9.768675,-2.113372,-6.706746,8.176147,0.996697,-9.234982,6.998134,6.249977,-1.184954,-4.713801,-6.609983,-7.008635,-5.264329,-4.267891,6.177524,3.647568,-2.520125,2.536052,-2.443652,-8.125910,9.105103,5.163004,-0.688947,6.390027,4.922821,9.683613,6.165139,-9.680355,-5.314321,1.140602,6.518587,-2.770065,9.267880,-0.213470,5.072347,4.077524,0.884382,3.590844,-4.789648,-1.794517,-6.333312,6.121280,4.848867,4.036317,-5.763099,0.243625,8.971628,9.563272,-9.777235,-8.904866,1.023568,-3.290288,5.715937,-9.113976,-3.527846,7.776744,-5.560488,-5.023733,-6.151919,-6.170112,6.813678,-0.423095,1.924368,3.926476,-3.424380,6.236934,9.356022,-7.320072,2.931097,-5.550495,-5.894486,-3.946875,0.296466,-0.529859,-1.850498,-4.064944,6.435906,-4.292334,3.477371,-8.716879,-7.439617,0.307032,4.239698,-8.274172,-2.330600,9.728522,-8.673260,-5.105154,-1.676896,2.308708,9.154269,-3.477877,4.982361,5.010276,-8.157869,-8.393760,-4.116062,4.252828,7.421045,-0.983221,-3.107740,-7.355594,-5.687731,-7.897886,-2.400018,3.526764,-8.946846,-0.751587,3.590367,-4.542553,8.988726,-9.274494,-8.633358,3.525711,3.491210,6.304990,8.170984,-9.943791,-7.255582,2.035262,-3.369408,-2.555466,-3.183696,-2.295622,4.796273,-5.906971,3.777632,-6.773600,-5.734842,-0.047547,3.922457,1.488509,2.800180,-2.321987,0.673340,-0.840850,7.343293,-1.578836,3.389472,1.370810,7.871364,9.872133,-0.381388,-6.856312,-6.713946,-8.381505,-2.387212,-6.635887,1.171212,-2.215882,-4.160337,-2.376015,7.890371,-6.413299,-4.260523,2.317312,5.619397,-8.825570,-0.383592,-0.607958,4.841377,1.232934,-9.442884,-2.009148,-3.374539,-3.286744,2.361202,-8.806977,4.023981,-7.131751,-8.368303,1.134569,-0.029419,0.223155,-6.914863,1.436366,-3.782469,-6.246656,5.018011,-4.975993,4.519541,-9.862176,-0.777906,5.619744,9.796182,0.482841,-2.202035,6.813824,-7.311665,2.359434,-2.957042,0.686922,4.099358,-4.947320,-2.996401,0.250649,9.155436,-3.451036,-2.373008,-7.345738,2.763817,-2.977244,-8.541470,9.777329,-8.744345,-6.126527,8.371317,-2.830888,3.932045,9.109617,2.874081,4.806911,5.944333,-6.465153,4.921638,4.102349,-7.419551,-5.094114,-5.288263,-9.267865,6.716129,4.236716,-5.719453,2.638583,-5.272707,7.117957,3.968059,0.098256,-8.150217,9.861402,-3.171677,9.859239,-8.982895,2.190761,4.170181,9.337865,-8.935702,4.841588,-9.297785,-8.642343,-6.720306,9.482942,-0.056633,-0.634742,-3.985365,1.304702,-5.000708,-1.854834,-0.555056,6.029137,5.786136,-8.305999,-1.102353,-8.510423,9.228424,7.779943,-6.251534,5.932030,9.264472,3.951387,8.840015,-3.507209,2.164486,-9.027540,5.341346,8.611416,8.510065,-3.988084,-3.631633,-3.824780,-6.958017,6.459232,-6.676232,9.875812,-4.854865,-2.841513,3.206134,6.614076,1.063605,1.505165,-7.468129,5.281200,-3.184818,3.414121,-3.678202,-6.273023,6.233118,9.360173,9.248677,-1.020856,5.531230,3.906106,5.483221,-4.733570,6.172540,7.420565,-4.277212,0.509432,0.734846,6.281176,-5.453143,-0.620534,2.404653,-9.955080,-9.178044,-3.230168,4.149254,4.928910,3.034523,3.262118,8.873487,-0.252360,6.448506,-2.481257,-3.750777,-5.023195,-4.325161,-3.276731,-0.331282,-0.964514,9.370198,-0.266941,-4.949885,-6.892975,5.467055,-0.141127,-4.738994,8.738024,-0.860645,-3.092272,1.746607,-9.676832,7.695643,-9.298839,8.159922,4.491642,9.886995,0.531031,1.458840,2.547623,4.026025,3.545810,-6.900485,2.559096,-5.436921,6.851039,-7.214617,0.384275,1.832171,8.058462,-1.259011,4.317401,-5.157146,-2.831831,-7.866377,8.106222,4.439426,-1.207479,5.151995,5.783860,4.172021,5.372813,-0.834588,-6.589024,-4.610408,-7.497820,-4.088051,9.377414,-0.574711,-7.717346,9.401542,-1.448457,-5.430889,7.866840,-0.099676,8.888016,6.206384,3.558189,-9.053368,8.939845,0.831508,3.765757,-7.971940,-8.637828,-8.361917,5.013224,-0.581884,8.221562,-7.501542,-8.150105,5.882771,2.273067,6.165199,-0.987247,-6.416379,-7.742122,2.133568,0.253624,-4.801721,-7.753684,-4.098852,6.789653,2.274913,1.685870,4.710242,-6.531624,5.778230,7.245913,-2.824095,-0.184145,-9.874906,-9.013960,9.350700,5.641443,0.500176,-8.803989,4.265109,9.821049,-0.495579,0.420282,-5.555120,-0.571941,2.362832,-0.119228,9.696084,-1.563425,-2.367913,9.503443,-0.077434,6.636462,-9.556819,5.580680,8.136812,-7.050602,3.459721,3.951555,7.104936,5.062797,-5.348546,-6.893640,0.242432,9.583338,5.318492,4.732835,3.810456,-7.615843,-9.787331,4.536214,-8.553152,-1.999703,8.918442,9.810490,1.291285,2.423296,9.664754,-3.480221,-3.998121,-4.881656,-8.185560,9.968570,-0.971764,-1.028905,8.752594,9.341726,7.824874,9.240810,5.656465,-7.681926,-2.589692,-5.292954,2.164150,-5.758144,-3.161982,-6.513002,-7.807478,-5.522916,1.121671,8.744257,8.425274,-7.513666,-5.132401,6.896215,-6.372240,4.259152,-5.273364,-8.776574,-4.168627,8.213164,2.837562,4.537146,-6.600933,1.954575,-9.571163,-4.851102,0.996370,8.085954,5.124311,6.350291,-3.422479,-3.426777,8.418824,-4.096302,9.217230,-1.859280,9.548309,-9.500598,-3.586403,0.212340,-3.528588,-6.511757,-9.864252,-8.508310,-1.673966,-1.834781,-0.101232,6.575007,8.580773,6.576730,-3.417714,-5.303451,5.689454,5.116036,-9.607147,9.957995,-2.002767,-8.179659,8.610478,-2.751251,-7.900973,-8.165124,6.236223,-8.235363,8.540650,7.211078,-3.147653,-7.850533,-4.797646,8.007235,-9.905076,-8.086435,-8.660457,-1.066182,8.875031,8.185739,0.238197,-2.011563,-5.345557,1.438417,-9.982118,1.375589,-5.750424,-8.857461,9.426563,6.132615,-4.879752,-9.818681,-4.400182,-2.378918,-9.106746,-8.654937,9.998704,-0.899582,9.305564,-3.312056,1.753543,-5.343367,7.218501,-5.919521,-0.325813,-3.668091,5.050051,6.341254,3.031348,6.918531,-8.525995,5.863100,-8.031016,7.487343,-3.649324,0.195214,0.890033,5.590763,5.892736,0.810958,-3.810484,-5.586904,-0.973206,1.728727,-5.198132,4.422242,-2.765626,-3.377234,5.734141,7.208629,5.022121,9.258937,-0.474410,3.335157,-8.964666,-4.318847,9.062465,5.056841,-5.537524,0.399307,7.541023,3.687185,-6.000741,5.306174,7.832484,3.518560,6.887359,5.495527,2.441192,1.864048,5.102112,-4.824665,4.702601,5.595236,6.041780,-9.040529,4.322763,-5.893898,6.508879,1.456219,-6.090166,-7.050103,7.778782,-8.645230,-4.495683,1.187416,9.174377,-8.767991,9.056589,-6.987734,4.577994,3.956821,5.962447,-4.489111,8.389660,1.723781,-4.986789,-8.906514,-6.708876,-8.250134,-4.522288,-6.651054,-7.484916,-5.083956,-0.044085,-8.288055,8.872549,1.855187,5.774338,-0.380089,9.242591,8.109972,1.618907,-7.122678,-2.989546,-0.340404,-2.821108,-3.420298,-4.857116,-0.618620,0.106870,-3.115130,-0.775693,2.895145,7.873379,2.833174,-3.909810,-6.903191,-4.323351,0.739455,0.529374,0.647212,-4.037642,-8.460048,0.497048,-9.284241,9.976944,9.618420,-4.234038,-4.183567,-9.364314,-1.646144,-5.875125,-5.092862,2.858588,7.402621,-6.964492,-1.779619,-4.180602,2.194295,4.346384,-2.662809,-2.811377,1.123968,8.926707,-5.884352,5.026869,-6.611573,8.584026,-9.077219,-5.981948,9.634868,-2.738801,1.314573,8.849607,-8.045619,-3.498287,9.444410,8.649745,8.187005,-3.199087,-1.676028,0.988710,8.037519,-5.420129,4.320805,1.936807,6.719568,3.446760,-4.260167,9.180243,8.739466,-0.919722,-6.192154,7.266029,-8.853047,1.137013,7.876231,8.610880,6.969210,-9.521234,-7.211250,5.920328,-2.947064,-5.273851,3.653509,5.273897,-5.908315,-3.339118,4.081383,-8.888031,3.139862,4.598886,-7.375514,-7.767668,-8.672476,4.993845,-6.695583,-6.761641,7.796317,-6.519675,-8.214198,2.749955,0.236287,8.735862,-9.475429,-0.151610,9.775243,-6.477258,-3.869800,2.310026,-7.004844,3.982327,0.509420,8.335724,-5.181566,-9.784024,5.410994,5.571694,7.654769,-5.026578,8.042710,1.478267,-7.136909,-2.445940,-4.915153,7.366632,-0.935723,-6.947502,-4.047536,-9.151835,2.977534,6.968214,0.673524,0.607840,6.031492,-6.314724,-0.345725,2.663617,6.614769,2.792456,5.150326,-6.745962,7.676761,3.297133,-8.790568,-5.565081,-4.853740,3.140258,5.258716,-0.145782,-2.887100,9.153427,0.727057,0.867627,-3.769167,-4.292906,1.690888,-6.075902,4.339855,-4.885096,3.697587,0.438339,-8.711656,3.431846,9.115098,-2.551082,-3.863509,-4.637205,-3.076694,5.239045,-3.847426,-1.811712,-7.793276,-8.151936,-5.703066,-0.432481,-0.519230,-0.955497,-2.369120,-4.929511,6.207948,1.375417,-2.614400,4.217261,3.347613,9.121186,0.837911,7.370827,-8.162191,2.557570,-1.778446,4.280381,-4.150172,1.227179,8.886833,-6.826010,-4.566070,2.998969,-8.385287,5.774534,9.699764,8.311570,-6.632239,-0.728664,5.725437,6.913309,4.396607,-6.531371,-8.456103,-9.450249,2.626600,7.589218,-7.691215,-5.587902,6.305487,-3.308245,-7.783205,4.428375,-9.619639,-7.610424,-9.233819,3.494429,-1.191299,3.907795,8.150370,-3.886120,-9.041246,-3.325688,-3.687751,6.927561,-8.962166,-5.256985,-5.308048,6.566441,-3.158837,-6.231821,-1.583559,-8.175005,4.778564,7.227764,-2.041192,1.452090,3.791612,9.027454,-0.798280,-9.898876,9.044027,7.379333,-5.958304,-8.057177,-8.902785,0.364956,8.706184,1.544982,9.726111,1.960367,3.082667,0.216500,1.713831,-3.703808,1.961351,-8.556040,-2.515309,-2.341334,9.166903,1.567950,4.335928,-2.320627,-5.392239,6.941282,-1.557885,5.735263,4.461619,2.427099,-7.510824,-3.265052,-2.161857,-2.515533,4.079354,5.826692,4.561791,-0.346474,-3.095949,3.832032,8.862578,-4.961423,-2.271807,4.403680,-1.076990,-7.236227,-8.215200,9.042332,2.694627,1.949384,-2.461722,9.407239,9.662666,3.598957,-4.207449,1.990247,8.046137,-5.843619,5.131458,-4.087653,-6.015901,-7.688965,2.711851,0.443231,3.710666,7.594822,8.422126,-9.541154,0.961004,-6.584851,-2.174052,4.460657,-8.210257,1.603099,8.880922,2.080729,-8.267551,-8.468239,1.377094,6.307094,2.099603,0.325722,2.311051,3.088260,1.797572,9.409666,4.106000,9.324649,-8.345711,-9.306085,-5.335691,7.578433,5.080217,4.188118,2.379956,-1.953886,8.881838,9.681453,7.601522,6.419928,0.930140,-6.712141,2.443316,-2.632766,8.641762,0.163729,-3.913678,-0.293773,3.880039,3.424949,-5.623608,8.306093,2.470577,1.526879,3.887747,4.944901,4.858047,-4.900566,9.766097,-9.733754,1.733449,8.171253,-5.381583,6.360088,8.678377,-1.002067,-8.171372,3.273449,-9.242930,-3.754029,-8.982804,-7.549528,-0.138929,-3.362488,9.888674,-4.793173,3.521445,9.450448,0.719995,1.825149,5.173148,5.448751,8.278872,9.043984,5.382408,9.364042,6.448218,6.335084,-9.239646,9.835890,-3.124336,-7.041201,4.886009,5.412759,4.539125,0.429608,-5.414837,-9.818289,-4.326254,3.428103,-3.152081,7.408895,2.431143,9.418371,-4.157679,6.685267,-8.654094,-5.370983,8.848320,-0.352075,-5.326142,7.032384,-1.846400,-4.741274,8.495152,-4.287675,3.318248,7.722811,-2.488965,-7.759516,-8.476066,4.576991,-1.588473,-7.972483,3.823685,-8.397743,7.376241,-3.724662,4.973473,-4.342534,9.233621,-5.952139,-4.437338,7.374346,-5.891776,5.326254,6.572219,6.875599,5.286031,-6.484023,1.358906,-6.413139,-7.866662,-5.539301,-2.233021,5.472044,-7.544890,-4.577573,5.498152,8.993247,0.437614,-2.656773,-7.977893,-4.084190,-5.631720,-0.871344,6.432878,-9.509310,-5.785085,-4.876433,7.166954,-3.706872,7.344894,-4.446564,-5.227671,7.010746,-7.205054,-8.239704,3.144093,-7.495564,0.777640,9.398971,-6.092003,9.818745,1.530569,2.932308,2.381331,-4.891677,-1.068504,6.519905,-8.139629,-4.156802,5.813655,3.956137,-9.382777,-7.660546,0.902138,-9.367346,3.187785,-2.134025,1.193291,8.023417,4.270236,-3.124706,-4.246241,-7.585754,-2.916017,0.687894,9.376420,-0.688760,7.510372,-7.675745,2.914091,-7.193246,-5.724316,6.081823,-1.244552,-4.769238,-2.107070,0.817366,-5.423915,5.869791,-8.049930,-4.829854,-4.330384,8.853844,0.781365,-5.424162,1.207150,5.437957,8.765310,5.343469,7.776913,9.523117,-8.050231,-1.359419,-2.930108,4.950894,0.689724,-6.876323,1.149577,6.237723,6.701985,1.209941,-3.113279,-4.235865,4.055353,0.400488,3.351722,-0.945141,1.747501,7.395556,-3.606502,-2.407925,-4.999307,4.479363,7.867542,9.466463,-1.443258,2.395288,5.309996,-6.776531,4.364752,-4.751534,-5.838247,7.115125,2.290639,8.903660,7.033889,0.846709,3.422728,3.126721,0.889489,2.133032,2.344841,-8.789941,6.933872,7.629834,-9.123933,1.193343,-6.633094,-4.112974,8.838738,-3.139719,-3.683257,9.018125,-8.120778,-0.398344,4.503028,-8.107938,-5.000011,7.544247,4.826653,-1.666341,-9.301495,8.742178,-6.336158,5.352875,5.494326,3.474231,9.872744,3.328531,9.979699,-0.431797,-3.191405,-0.773533,6.603692,-7.944757,-7.197135,8.463516,-0.478794,-5.810665,-2.986707,9.038833,6.911165,0.786068,6.863620,-9.255746,-5.678945,2.267273,5.408842,2.306237,7.384179,-2.953089,6.506619,0.186969,-1.684423,-4.327898,3.976498,-9.690928,-1.088805,3.071364,8.897947,0.010915,-4.218457,-3.199225,-7.357371,6.732718,2.748880,5.802999,4.401806,-5.349780,-5.721755,-9.899345,-0.807679,-7.109504,8.029952,-5.341926,-9.958915,-1.600711,-8.659771,-4.550429,3.772433,6.641492,0.721478,6.174155,4.182446,-8.792611,-4.382567,3.976238,-0.579592,-1.952311,8.769691,-6.408291,-1.153748,1.831329,5.593854,8.576754,6.481602,1.247383,3.627285,2.470707,-9.945487,1.787105,-1.595937,-7.255568,-6.809563,-8.544544,3.763550,1.389865,-5.993770,4.567193,2.009153,-1.549771,5.862824,4.647017,-3.898816,8.451042,1.327164,4.330127,6.853238,-2.842988,-9.486290,1.727378,0.942853,8.254487,8.964691,8.549102,4.433424,3.631241,9.257015,-7.742675,9.664294,-6.377385,-0.919596,2.915192,3.501383,4.409429,-2.090007,-2.164924,-1.450635,0.907619,-0.991949,-1.954617,-0.937646,-0.828581,-4.932982,0.327094,-7.326856,-9.093884,-4.411558,-8.985534,6.970678,9.923381,-8.167813,3.888767,-1.354037,3.289047,0.907873,-1.127648,8.054346,6.328089,2.228033,-5.127893,7.978749,-7.929110,-6.960153,7.708350,6.630901,9.367415,-7.569080,-7.268872,-7.989284,8.713696,7.327081,7.664370,-6.084448,-8.062696,-2.836462,3.487593,-1.066279,4.617161,-2.287209,-7.685603,1.194306,-0.701519,5.155582,-4.315233,-5.949773,9.313870,-0.159293,-8.848026,-1.340958,-8.965304,6.288668,-5.845549,-8.902402,-8.212831,-9.811495,-5.221233,2.504877,-0.653870,6.254718,-7.326714,-3.784683,1.096529,-1.209470,-5.693844,-4.160813,1.037349,-7.371576,1.153569,7.856503,-2.847411,5.187561,-6.851712,0.370705,2.736199,4.317432,-2.507734,2.722953,-1.578937,1.743547,-4.843352,-4.270466,-2.241260,3.301468,6.383100,2.162488,8.391354,-2.710627,5.976129,-1.281240,-7.692840,-9.870166,8.245380,-1.999169,-5.269651,-5.922730,1.466893,-4.711405,-8.890851,-0.481348,9.471097,0.356183,-9.372715,-9.563599,9.190447,-6.371463,-4.371107,-3.934184,-4.355121,-7.328758,-8.588065,-2.060200,2.829355,5.329924,-6.356221,4.190743,-1.299994,-3.224890,-4.725595,-7.793437,8.953994,0.815867,-2.725494,-2.952667,-4.855513,4.012545,1.332299,-2.046886,-9.155339,-9.343609,6.371364,-3.701219,-8.648056,-5.480881,7.748883,-0.696073,0.201133,0.312476,1.422582,3.109801,-4.039573,0.995854,-3.657117,-9.684512,7.689789,6.007720,-5.497701,-4.410563,5.727905,9.442093,-0.559652,1.483073,7.022012,9.917799,-9.569740,-6.578500,2.716606,2.961100,2.404077,-2.264688,-3.476415,-2.712075,-2.277133,-6.184496,7.715011,-9.434500,9.840480,-5.037308,-7.420932,-1.041767,-0.989523,5.577197,-7.433442,2.447253,-6.696115,-7.495394,3.331401,4.448895,-8.928012,6.606498,6.984097,4.600374,-4.954729,4.645740,0.334005,7.028152,-6.826976,6.309913,3.526430,8.355646,-5.237881,9.591769,-3.644137,2.191700,-9.634657,-0.462928,6.249996,-9.044357,1.222695,-1.327366,1.338068,-3.715310,9.981099,-9.106112,-1.602592,-4.347216,-8.431108,3.843327,8.213104,1.119733,2.946225,5.524088,9.013563,-5.207746,-8.441148,1.261680,9.623479,2.541709,9.224059,5.369222,3.622223,-3.820568,8.083444,-3.564635,6.876799,-6.145168,-6.387405,9.240360,-4.158562,-8.644774,-4.466391,-9.918702,-7.803617,-7.514796,-5.738248,6.830166,-5.742394,8.958904,2.509713,-5.150072,9.661717,-0.466615,-5.998975,0.028317,1.406502,8.373063,1.196882,4.411239,-4.856908,1.491472,-2.776487,-7.832526,-2.673554,-8.256338,-9.022175,-9.553845,-6.207107,6.696394,-9.408861,4.440935,-9.241917,-8.451860,-2.065136,1.769694,2.498111,6.898997,-2.548922,-1.981572,9.420010,-2.847006,6.506999,5.926867,4.519588,9.706003,6.983496,-4.493196,1.424653,9.429173,-5.493894,-8.112092,0.731753,0.805278,-9.278856,4.974632,2.267850,7.067522,-0.078243,-5.452530,5.240757,-6.974477,-1.588175,-8.091654,0.660610,5.670395,3.160670,4.388632,-5.031681,-6.270346,6.077231,-8.292961,9.993685,5.180810,0.870796,-6.534094,2.378826,8.800409,8.400743,-5.718840,-3.809025,-5.155042,5.819603,-1.248511,4.495837,-3.142360,-1.045292,5.317339,-9.245616,-2.543941,-2.477457,-2.055401,8.836992,1.172156,-1.308273,4.153079,6.674320,-6.649244,0.485582,-3.494855,1.893765,0.343512,-1.283609,6.927378,-2.793110,-1.127575,-4.384335,-2.179846,-9.768752,-9.894560,1.159638,6.910613,-0.147335,-2.062933,7.594527,-1.803283,4.590835,-1.039690,-4.837391,5.571192,0.442577,9.461014,-5.374111,7.324677,6.482040,7.992801,2.633581,7.658536,-5.527156,-4.100580,2.657854,-8.163867,-1.460748,-1.599474,6.219481,3.782325,0.225032,-6.654251,7.092322,-3.184532,-1.828936,8.300597,5.513255,8.742200,-1.952941,5.278130,-4.020386,4.298548,-4.853375,5.547208,2.832451,8.952367,4.293233,-3.733127,1.579658,1.035531,4.938734,-6.778948,1.500817,-4.813792,7.898159,3.155149,-7.750001,-7.607243,-9.220706,-5.586420,8.426168,-7.319206,9.650336,4.522053,-8.747636,-2.977976,3.085132,-3.371789,-4.016166,8.011353,-1.460112,5.956986,5.988980,8.652321,3.100605,7.891345,4.712751,8.780325,-7.998969,-8.442486,2.050390,-4.080831,6.631880,-8.523203,-4.480127,8.389206,-9.880124,6.228752,-2.675341,-5.277892,-6.844096,-5.208993,1.338405,-1.004906,-4.188342,-9.388059,-5.293375,3.015882,8.493984,0.845947,4.706493,-8.278801,-9.668742,7.388980,8.203161,-6.048520,2.873855,2.690648,3.942894,-6.794810,-3.105669,4.234548,-8.306955,-0.548478,-3.394592,0.410491,-7.223368,-0.675429,4.168776,-2.519893,1.589310,-9.510916,3.635634,6.343988,8.148045,7.911260,2.757356,-9.665266,6.133675,2.293559,9.057798,4.997172,1.462148,-9.043146,8.566979,8.690965,4.529736,0.889215,3.654835,0.643353,-1.250250,5.930446,-6.706286,1.040706,-5.340849,3.208203,6.292799,-2.706484,-5.246481,6.515410,0.809693,-8.462971,-3.767460,6.255531,0.714117,0.873899,9.378388,3.506529,-1.678316,8.972840,7.081913,-8.801196,4.575782], dtype = "float64")#candidate|8110|(2240,)|const|float64
const_8111 = relay.const([2.082349,0.686347,-8.733676,3.448155,-3.131730,-4.427519,6.657038,-9.929712,9.596989,1.142842,6.847121,-8.522131,-2.533529,-0.637089,1.440006,-1.738394,-7.970387,2.953520,-2.877346,3.892450,0.986375,-1.903063,0.972549,9.058303,8.306442,-9.216470,8.449050,0.779878,-0.317992,-7.026586,6.531946,7.586747,-5.487489,-2.250053,2.389469,6.700378,-0.225397,0.897763,-1.029254,-8.331857,-1.248885,8.354662,9.136328,7.365234,-9.760401,-5.764949,-7.778791,-0.583359,-2.107191,0.359863,-3.559715,-9.859030,-2.968669,-8.820207,-5.275602,3.136827,8.134460,-8.338491,3.049544,6.726004,7.457283,2.686736,1.548289,6.519288,3.131494,3.631836,4.820232,-1.464542,-4.167385,9.633399,2.337015,4.764146,4.736151,-1.644108,8.711853,-4.123382,7.766112,-9.309149,3.323214,-8.091739,7.243886,-2.810027,7.422644,-2.248551,-4.947836,-7.610510,-9.941876,-3.914838,6.074363,-4.815137,-7.143173,-6.456337,2.540675,-2.992661,-9.393178,8.328861,2.216814,-0.515005,-8.429941,-7.697159,-0.290005,-8.574405,-9.171517,-3.368973,7.254725,-3.257810,-5.652388,9.241571,6.739051,-2.539210,-6.089684,9.775186,-7.420054,-7.603752,0.900852,8.249699,5.128452,-9.266225,-6.438152,-4.048743,-4.455029,-7.232605,9.413125,-4.821198,1.337472,-1.515052,-0.467113,6.025776,6.337449,8.814838,-9.704812,8.469941,-5.552637,0.788786,-1.139892,5.721432,-1.053858,1.556627,9.228413,9.614490,9.574076,1.460340,2.546424,-9.782185,-8.322745,4.306171,-2.622565,1.736956,2.784425,3.161389,-5.217412,-5.399592,-7.489482,-4.891588,1.972977,1.403368,3.378189,-7.737848,0.843852,8.954539,-5.663124,9.470681,6.851088,8.011852,1.835803,9.348248,4.970080,9.535283,9.359729,-3.973378,8.176907,6.184676,-0.177163,6.540869,-4.953825,1.436050,-2.204790,0.128018,5.153399,-6.990914,-5.534234,-2.735963,4.886313,9.472690,5.902829,0.902664,0.047204,2.756815,-7.787773,-0.683540,-3.307460,0.758358,-0.809060,-1.336910,4.565962,-4.552794,-7.521632,-7.115646,-0.336134,5.550576,7.187279,-1.982096,9.566008,-0.523691,3.337803,4.542549,-8.184747,-1.444319,7.939374,8.803301,1.826693,-6.614634,-7.409550,0.334804,1.111239,4.494723,0.622716,8.498641,0.140860,-6.604650,-9.149139,-0.233169,-7.416521,7.007057,-7.536077,-4.523098,3.776998,8.849007,0.265665,-1.790924,0.006631,2.794667,-0.277047,-3.464979,-7.886854,-8.367494,-9.065612,-9.926883,5.319755,-5.942630,-7.738158,3.336954,-3.551641,9.630053,0.821876,-9.915719,5.769952,8.495210,-8.634605,-5.497693,-4.143367,-5.331833,7.409661,8.598933,-7.130649,-9.546629,-4.165628,-1.426337,4.587874,2.959121,-3.575995,8.317892,9.031164,2.291669,-2.377008,0.001179,-8.945812,4.195351,-9.700702,-9.201485,2.054937,6.417961,-3.934514,-1.579764,9.200920,-0.744844,1.382240,-8.846292,-4.341099,-9.279305,8.813424,8.064784,4.855543,7.914348,2.609570,2.420804,3.460068,-6.640950,-6.773538,0.529282,-4.769110,1.547831,0.264507,6.052694,8.430632,7.779984,9.101371,-9.417430,8.098698,-1.932031,7.806015,8.186935,-5.696025,-1.251281,-1.601548,-4.194084,5.045935,-2.090804,7.083735,-0.904646,-9.224177,1.321685,-8.435029,-1.611567,-7.126383,-3.696973,-3.000602,-0.450883,-8.310996,-6.456960,-5.356925,7.632588,-4.630825,-3.919168,3.847937,4.235782,-5.772060,9.267306,-0.098663,9.303824,-4.000791,8.416098,3.425000,6.497785,-9.482175,8.772212,4.501834,1.453787,-4.956357,3.189363,-7.311682,0.815454,-7.368786,-2.169986,3.137762,5.844104,4.393131,-0.088685,-8.898021,-6.856247,7.735629,7.330887,7.926441,2.045638,-5.522585,6.218298,2.644930,-3.220490,-0.065927,-4.463557,-7.184324,7.632394,-6.559467,-2.476090,-1.147874,-1.850388,-6.940426,-2.202803,-4.635139,-2.041189,-7.303589,3.826050,-0.732579,6.200710,-5.676402,-1.753495,6.560693,6.089812,-1.398903,-4.649495,-8.218252,-9.472744,-6.749755,-5.902226,-5.270527,-9.859600,5.834358,-2.031864,5.846416,-5.953368,-3.264973,-2.909058,-9.760659,5.789349,3.235976,8.701985,-2.452850,8.553040,-0.640156,3.857357,-0.267488,-1.083505,-1.589606,4.145084,-7.707206,1.892769,9.431027,0.243520,4.044359,-0.667419,-8.869676,3.549056,2.527433,-8.641607,-7.659797,7.984833,4.102549,-5.771046,-3.010941,1.852169,1.808876,4.592370,-5.536793,8.314975,-7.732245,-3.252510,6.247788,2.170571,-2.154973,9.479695,-3.436071,7.431549,-9.217065,7.750988,-2.317857,4.367779,7.875222,-1.646144,3.079309,-9.297233,4.470416,0.342596,-9.341116,0.009903,-5.647471,7.102668,3.570410,-1.338525,9.850149,3.683801,-7.565155,0.524962,0.352540,2.025557,2.168099,-3.071885,-3.973897,-0.918408,6.569448,-6.046119,-4.660220,-8.806908,-6.626395,9.680641,-5.900118,6.282560,8.557749,-3.514394,-4.345081,-4.047050,1.423017,-4.637548,-8.800724,-0.370616,9.853250,6.485829,5.295773,5.736919,-9.622407,0.589286,6.443443,8.207000,4.839791,-8.854608,8.020475,-0.952046,0.437405,-8.173576,5.616865,5.613851,7.800582,-3.075818,-2.026061,9.804877,-2.302099,7.269790,8.575704,-4.610392,1.051291,9.934878,7.803216,8.261719,-5.649301,-6.251527,0.729331,-2.056301,-0.765521,4.291619,7.793479,4.138508,7.459110,3.805788,5.263152,0.316140,-0.613241,9.601591,-6.958863,8.080833,0.849968,-2.355026,4.123797,7.252293,5.431786,2.995522,2.458077,-6.134986,7.486152,-3.439753,-8.590790,7.373639,-4.036115,-2.050881,-1.809350,7.477442,-6.746847,-8.086972,7.125059,3.211835,-0.914812,3.833044,-2.890301,-4.192553,1.198902,-7.087864,-3.346332,1.519460,9.734953,-8.865368,8.674592,5.975783,8.767774,6.689115,4.259941,-3.241390,0.464166,-2.934421,7.710255,-2.342444,6.003125,-1.918329,-9.312309,-5.517379,-0.283196,3.156299,-7.955657,9.816994,-2.269562,-4.716212,8.921187,0.956824,-0.787552,-6.981363,-6.405271,8.506279,-3.982775,-8.271703,2.513341,-8.925413,7.817162,9.649136,-8.359319,4.122307,6.272642,-4.726255,-5.578104,-2.717837,3.085644,1.192544,0.397646,6.492726,-5.739694,-8.688325,-9.952523,7.869500,6.813264,-2.547642,4.921024,-0.648450,0.822749,-5.237819,1.251284,7.277299,9.896119,-1.302035,0.165473,-3.981009,7.582576,6.916929,0.082689,4.154748,7.110382,-8.502497,-8.602640,1.448812,-2.843475,5.343915,-3.742531,-5.804130,1.938576,-9.594115,3.775454,5.048953,-3.014767,-0.555384,0.310856,-8.294713,0.498223,-6.240779,7.555838,-3.598446,4.703252,6.983272,-2.024897,5.500762,4.022469,-3.844138,2.759260,8.777951,-5.442373,4.199057,-8.524736,-0.283705,2.993382,0.209265,-0.831136,-2.694457,5.979554,-6.030801,3.766545,-0.908333,7.723302,2.598800,-5.632965,-7.179878,9.160898,-7.900664,7.420684,9.339350,1.581229,-8.534085,-0.771001,5.732887,-3.007950,8.138252,-0.032651,-2.361579,-2.960302,-2.593776,3.744108,2.860727,-0.966863,-8.029489,-1.592382,-2.493505,-9.729446,-8.579577,5.792631,-9.505103,1.618453,-1.937794,5.031672,7.059520,-0.764948,-2.106991,5.025954,-7.009918,-8.009176,2.209807,0.892705,-2.403332,-2.304150,-2.732515,2.021865,-6.662188,8.892743,-0.674854,2.528817,-9.029908,4.734386,2.121531,8.872300,-8.403938,-5.162540,-8.743357,-1.629215,4.147258,3.964814,-4.299200,3.593070,7.641136,0.221577,2.352592,-4.310335,1.812101,7.262191,-5.843655,-8.334356,-5.735116,-3.664419,-4.039432,2.087095,-6.762215,-0.506607,0.276846,8.705800,-8.860717,-0.773403,1.606354,3.519643,-7.276230,-7.761312,6.261400,-8.332681,1.059403,7.215570,3.350534,-8.383308,8.898030,-0.804711,-8.122038,-7.478739,2.614479,-1.446685,3.472157,2.782031,-5.309833,-9.586902,-0.205187,3.352509,8.992451,-0.609216,-8.358477,-9.178907,5.866413,-8.874049,-9.141543,-3.832196,-9.185746,4.004642,-8.531818,2.924836,-6.099518,2.915531,-4.791946,-6.586850,6.471222,-1.981623,9.611274,0.601019,-3.356440,-5.550383,-4.865496,-0.054940,-7.884586,-8.767129,-8.425494,4.800495,0.366650,1.014941,-5.143177,-7.507897,-0.133471,1.452989,3.096688,-7.360480,-3.444231,4.362224,0.360569,4.398601,3.298892,5.376965,-8.563451,-0.114969,3.621993,4.853453,1.861773,1.587837,4.024261,-1.588011,6.707609,-3.775820,5.577323,0.873503,1.636384,-6.570600,-1.160700,-0.438194,7.818100,6.891122,-1.458814,-6.849466,-1.310393,-8.188436,-8.018301,-7.166247,6.424312,7.022642,-9.160654,-1.154319,-5.109700,-2.293322,-7.406861,2.799077,6.543470,-7.280033,3.068792,-7.961827,-3.783794,0.465143,0.172926,-7.778817,-3.647093,4.113124,-1.654468,-7.943250,0.884673,-7.095817,8.681811,0.846295,-8.509095,9.390963,-8.702274,0.499790,-7.683929,7.698016,-7.191768,-4.181566,2.200127,-2.310075,2.785252,-5.061077,8.891037,-1.030931,-7.329465,-4.433859,0.639977,3.676620,7.446813,-8.009175,0.071327,7.881062,-3.260167,4.160334,3.662256,0.098137,-2.200439,6.542021,-4.997155,3.503743,3.392874,4.123630,4.453964,-9.918248,9.745342,-7.348412,-3.916209,6.157835,9.691110,2.975849,-7.031294,-9.363849,-1.437559,-7.317605,0.645272,-0.375111,1.805084,-6.072095,-4.317538,5.557441,2.934298,-7.810694,2.298030,-6.263513,-1.506216,-8.002113,9.511916,-4.558642,-6.396189,-6.220983,-3.338550,4.545733,9.972557,-2.297536,-2.690860,5.401359,0.985626,-6.990185,9.628798,0.527486,-7.775539,-8.062976,-1.832886,3.929096,-3.974036,5.363871,-7.365324,-8.375026,-6.660266,1.435848,5.694073,-3.276629,6.735833,5.977488,-9.859583,-5.494328,-1.024706,-2.589927,7.232086,-3.388717,1.353537,-7.231765,-8.135610,3.637167,1.331346,7.129450,-8.448317,9.239982,-8.872459,-5.905777,-8.989861,5.625294,-7.398998,7.360532,-7.839649,2.699202,8.250824,5.057313,-3.837748,-2.734849,-8.077268,-8.294096,-3.963950,-9.328265,5.725995,5.776223,9.381099,-2.043226,-0.467101,-2.568497,2.319408,-8.491538,8.238200,-0.193518,2.404129,-6.794492,5.155947,-1.073135,-9.979680,-9.889744,4.057608,2.748203,8.768216,-9.418736,-3.277204,-9.912696,-6.978631,-8.201824,-7.967803,-7.399648,-1.284109,9.123162,5.553513,6.492724,-4.934422,1.607956,4.201879,9.704276,8.448978,-0.724352,-2.008733,5.618174,1.210694,-3.159355,7.420146,3.496030,7.011526,1.199172,-8.150699,8.331951,-4.805739,2.256536,9.472258,-5.175984,-1.795610,-9.894340,1.850079,-9.183144,-1.491974,8.004022,5.086779,5.356841,3.368342,7.434724,9.676495,8.081599,-7.618642,1.816906,0.645765,-5.212771,-4.144275,-5.705882,-2.737675,-7.019779,8.235468,-2.406716,2.414337,-1.689101,-1.800381,-9.543237,-5.416512,-4.181269,-4.534081,-2.610374,9.786003,-9.949988,-7.737558,-0.977322,4.791048,7.207346,-4.404751,8.272520,6.293453,-2.610933,3.794270,0.018867,-4.596670,-9.876488,5.937987,-0.585248,3.742566,-1.851361,8.579779,2.742059,2.088025,-8.533487,-0.722080,3.444546,6.440591,-2.730587,5.202002,-7.693801,4.448083,-5.767901,2.801484,5.560293,3.399723,-5.077588,-0.358699,8.499358,-1.578403,8.363450,8.146901,-8.775071,2.571762,-3.974422,-7.577085,-2.985852,6.441160,-0.969868,-9.252084,-1.024360,7.303090,-5.018314,-4.947570,-2.772585,2.836413,0.180101,-8.529446,5.626725,-4.130059,-4.741151,-6.347412,-5.580459,-9.432192,0.283348,7.766165,-7.970645,-4.854491,-2.225092,9.026398,-5.223213,0.297016,5.261416,7.145622,6.220750,-1.978756,4.445439,-3.448538,1.329583,-8.325211,7.362534,-3.165497,0.010602,7.011467,5.611963,-9.865185,9.064599,6.256788,9.948097,-0.016760,9.165945,3.465728,4.090577,-8.944840,-9.919048,6.305454,-8.862912,8.691030,0.475424,-8.332509,6.264632,-6.530176,-1.156745,-1.463429,-6.747867,-4.840622,6.098719,-2.488472,1.376087,8.541272,-0.835303,-8.807370,-4.216650,-9.502908,-4.940179,-7.975644,3.985963,-0.225418,5.842607,6.438626,8.575180,8.657858,2.616310,-4.366917,-8.849168,-3.917552,-3.259322,-8.822926,1.382303,-1.396603,8.156692,0.907331,0.130932,-3.414367,-2.893026,8.591034,9.672212,4.693240,-9.197738,4.331939,8.636686,7.644124,-9.471249,8.608362,-2.797494,0.878523], dtype = "float64")#candidate|8111|(1176,)|const|float64
call_8109 = relay.TupleGetItem(func_6121_call(relay.reshape(const_8110.astype('float64'), [16, 10, 14]), relay.reshape(const_8111.astype('float64'), [1176,]), ), 3)
call_8112 = relay.TupleGetItem(func_6125_call(relay.reshape(const_8110.astype('float64'), [16, 10, 14]), relay.reshape(const_8111.astype('float64'), [1176,]), ), 3)
bop_8141 = relay.mod(const_8111.astype('float32'), var_8086.astype('float32')) # shape=(14, 1176)
output = relay.Tuple([call_8065,call_8085,call_8090,call_8109,const_8110,bop_8141,])
output2 = relay.Tuple([call_8066,call_8087,call_8091,call_8112,const_8110,bop_8141,])
func_8156 = relay.Function([var_8086,], output)
mod['func_8156'] = func_8156
mod = relay.transform.InferType()(mod)
mutated_mod['func_8156'] = func_8156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8157 = relay.var("var_8157", dtype = "int64", shape = (14, 1))#candidate|8157|(14, 1)|var|int64
func_8156_call = mutated_mod.get_global_var('func_8156')
call_8158 = func_8156_call(var_8157)
output = call_8158
func_8159 = relay.Function([var_8157], output)
mutated_mod['func_8159'] = func_8159
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8222 = relay.var("var_8222", dtype = "int8", shape = (9, 7, 13))#candidate|8222|(9, 7, 13)|var|int8
const_8223 = relay.const([[[-2,-8,3,7,7,9,-5,-8,-2,-6,-6,-10,4],[-6,-9,-6,5,7,7,-9,-3,-8,-1,9,-3,8],[3,-10,-3,-7,-1,5,-4,5,8,8,4,2,-2],[9,-8,-9,-5,8,-5,2,6,5,2,3,-6,1],[-7,-3,4,6,-1,10,4,-5,1,-7,7,-8,2],[10,2,-7,-6,8,4,-1,9,-2,9,5,7,8],[-4,4,10,5,5,3,-4,-1,-6,-3,4,-1,-3]],[[5,-8,3,-1,-1,8,7,8,7,2,10,10,7],[9,7,4,-1,6,6,8,10,-3,-3,8,5,-8],[10,-8,-10,-6,-8,-10,5,-2,3,10,8,-2,-6],[-1,-10,6,6,6,-1,-4,5,8,10,-10,-10,10],[-4,10,-3,-1,-1,3,-8,-3,3,8,3,-5,5],[-8,8,4,-10,-1,7,-6,-8,-8,-7,-7,-10,6],[2,8,9,-2,-4,8,-3,7,-5,-10,9,1,-9]],[[-6,-7,2,-6,-7,-6,3,-7,4,-3,2,1,3],[8,-7,4,5,8,1,8,2,-8,2,9,9,-4],[-2,-1,-6,-6,-5,8,4,-7,-1,-2,7,-9,9],[-6,2,7,6,6,8,-4,-6,5,8,2,7,6],[6,-6,5,-3,-1,-10,10,-10,2,3,8,-6,10],[-8,4,2,9,-6,7,3,2,6,9,-4,1,9],[-5,-6,4,1,-7,-9,10,-3,7,-6,9,-4,-9]],[[-1,4,-8,6,-4,-7,8,8,2,-5,7,-1,2],[9,8,2,8,9,7,-1,6,5,-4,1,3,1],[7,-2,-3,3,-9,-1,5,5,7,-2,-4,7,2],[-3,4,-2,9,-10,-7,2,-1,2,-6,5,-5,-4],[-4,8,-1,-10,7,7,-7,6,3,-7,4,-8,8],[-2,2,1,-1,3,-10,-6,-4,2,-2,-5,-10,-7],[4,5,-1,-5,6,-3,5,-6,9,-3,-5,-6,5]],[[1,-4,10,-6,-9,3,-1,2,-4,10,-5,2,-3],[4,5,3,-7,-6,4,-3,2,1,-4,9,-3,10],[9,-5,-10,-4,-10,-4,-3,-5,6,-1,7,2,-6],[-1,-10,-6,-4,3,-2,10,-3,1,7,-4,6,-9],[-9,6,2,6,-8,-2,3,-6,-2,9,3,3,5],[-2,5,4,4,9,7,1,8,-10,1,-8,-6,-10],[4,-10,-1,2,6,9,-7,-10,-6,2,4,-6,9]],[[8,8,4,-1,3,-9,-9,-10,-6,9,-1,-7,-8],[4,6,8,9,-1,-10,-7,6,9,-10,-4,-5,-2],[-7,-1,8,8,1,7,4,2,10,-8,-5,4,5],[2,2,-10,1,-3,-9,4,-9,-9,-8,-6,10,7],[-2,-1,-10,8,-4,-8,-10,-5,-3,8,-9,4,7],[6,-7,-3,5,-5,6,4,4,9,4,-4,5,1],[-10,-1,-7,4,-3,3,2,2,3,-2,-9,-10,4]],[[-2,-7,-3,9,4,5,2,-7,-6,10,9,-6,-10],[-1,-10,6,4,-6,-8,4,-3,-10,-7,-7,-7,2],[2,-8,-3,-3,-4,4,2,-6,6,-2,9,1,10],[10,7,-7,10,-1,4,3,-5,-7,-8,7,3,3],[3,9,-2,-3,10,7,-5,10,-4,-1,-3,-6,-3],[5,2,9,1,-1,8,-3,-5,-8,-9,-4,-3,-2],[3,-7,10,-4,1,-2,-3,5,-8,-10,9,3,-8]],[[2,2,-10,-3,5,1,8,5,4,2,1,-10,-2],[1,-8,4,10,8,-3,7,4,7,1,1,-10,-7],[-2,-2,-5,-10,9,4,10,-1,3,-10,5,-9,9],[-4,-3,-8,7,9,-2,-6,1,-4,4,-3,-1,-3],[10,7,-4,-6,9,1,-7,-7,-9,4,4,10,-1],[-4,6,1,9,-5,8,-1,-9,-2,-3,5,-3,-4],[7,5,-7,-10,-6,10,10,10,9,4,4,-4,6]],[[-10,8,-6,-6,-3,-9,7,-6,1,-2,-4,10,9],[-6,2,-2,-3,-4,7,9,6,-3,-3,10,6,7],[-5,8,3,-4,-7,7,9,8,-3,8,-7,2,1],[-6,-6,-7,-1,4,10,-7,6,-7,-5,-5,-4,-10],[3,4,6,10,-4,2,1,-7,5,10,-10,-8,-3],[-5,-5,9,7,-3,5,4,10,5,3,4,8,9],[2,4,2,2,4,-7,-9,3,-4,3,2,-7,2]]], dtype = "int8")#candidate|8223|(9, 7, 13)|const|int8
bop_8224 = relay.add(var_8222.astype('int8'), relay.reshape(const_8223.astype('int8'), relay.shape_of(var_8222))) # shape=(9, 7, 13)
output = bop_8224
output2 = bop_8224
func_8229 = relay.Function([var_8222,], output)
mod['func_8229'] = func_8229
mod = relay.transform.InferType()(mod)
var_8230 = relay.var("var_8230", dtype = "int8", shape = (9, 7, 13))#candidate|8230|(9, 7, 13)|var|int8
output = func_8229(var_8230)
func_8231 = relay.Function([var_8230], output)
mutated_mod['func_8231'] = func_8231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6292_call = mod.get_global_var('func_6292')
func_6294_call = mutated_mod.get_global_var('func_6294')
call_8256 = relay.TupleGetItem(func_6292_call(), 0)
call_8257 = relay.TupleGetItem(func_6294_call(), 0)
output = relay.Tuple([call_8256,])
output2 = relay.Tuple([call_8257,])
func_8264 = relay.Function([], output)
mod['func_8264'] = func_8264
mod = relay.transform.InferType()(mod)
output = func_8264()
func_8265 = relay.Function([], output)
mutated_mod['func_8265'] = func_8265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7356_call = mod.get_global_var('func_7356')
func_7358_call = mutated_mod.get_global_var('func_7358')
call_8275 = relay.TupleGetItem(func_7356_call(), 0)
call_8276 = relay.TupleGetItem(func_7358_call(), 0)
output = relay.Tuple([call_8275,])
output2 = relay.Tuple([call_8276,])
func_8279 = relay.Function([], output)
mod['func_8279'] = func_8279
mod = relay.transform.InferType()(mod)
mutated_mod['func_8279'] = func_8279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8279_call = mutated_mod.get_global_var('func_8279')
call_8280 = func_8279_call()
output = call_8280
func_8281 = relay.Function([], output)
mutated_mod['func_8281'] = func_8281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_8360 = relay.TupleGetItem(func_5463_call(), 0)
call_8361 = relay.TupleGetItem(func_5464_call(), 0)
output = relay.Tuple([call_8360,])
output2 = relay.Tuple([call_8361,])
func_8386 = relay.Function([], output)
mod['func_8386'] = func_8386
mod = relay.transform.InferType()(mod)
mutated_mod['func_8386'] = func_8386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8386_call = mutated_mod.get_global_var('func_8386')
call_8387 = func_8386_call()
output = call_8387
func_8388 = relay.Function([], output)
mutated_mod['func_8388'] = func_8388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mod.get_global_var('func_7948')
func_7950_call = mutated_mod.get_global_var('func_7950')
call_8410 = func_7948_call()
call_8411 = func_7948_call()
func_6649_call = mod.get_global_var('func_6649')
func_6652_call = mutated_mod.get_global_var('func_6652')
var_8424 = relay.var("var_8424", dtype = "float32", shape = (600,))#candidate|8424|(600,)|var|float32
var_8425 = relay.var("var_8425", dtype = "float64", shape = (686,))#candidate|8425|(686,)|var|float64
call_8423 = relay.TupleGetItem(func_6649_call(relay.reshape(var_8424.astype('float32'), [15, 10, 4]), relay.reshape(var_8425.astype('float64'), [686,]), ), 0)
call_8426 = relay.TupleGetItem(func_6652_call(relay.reshape(var_8424.astype('float32'), [15, 10, 4]), relay.reshape(var_8425.astype('float64'), [686,]), ), 0)
output = relay.Tuple([call_8410,call_8423,var_8424,var_8425,])
output2 = relay.Tuple([call_8411,call_8426,var_8424,var_8425,])
func_8449 = relay.Function([var_8424,var_8425,], output)
mod['func_8449'] = func_8449
mod = relay.transform.InferType()(mod)
mutated_mod['func_8449'] = func_8449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8449_call = mutated_mod.get_global_var('func_8449')
var_8451 = relay.var("var_8451", dtype = "float32", shape = (600,))#candidate|8451|(600,)|var|float32
var_8452 = relay.var("var_8452", dtype = "float64", shape = (686,))#candidate|8452|(686,)|var|float64
call_8450 = func_8449_call(var_8451,var_8452,)
output = call_8450
func_8453 = relay.Function([var_8451,var_8452,], output)
mutated_mod['func_8453'] = func_8453
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8479 = relay.const([[[2.206754,-2.261873,-2.324496,-2.886000,1.582365,0.851935,-2.834314,-0.999331,2.122854,8.529496],[-7.334521,-3.070635,4.287329,-4.346612,-8.447143,2.871174,4.625952,0.767614,-9.534492,-6.879602],[9.432886,9.845767,-6.534968,-0.409812,-8.142912,5.382307,9.702993,2.940333,1.082538,-0.776710],[3.058581,2.633212,-9.441235,-7.131296,1.227913,-1.827604,0.032186,-0.047555,3.680497,8.806302],[-6.987252,5.285189,1.740832,-0.362741,-8.424880,-2.944580,4.402909,-0.305011,0.979318,-4.619367],[2.123844,2.183517,8.973768,6.702989,-7.107252,-3.693540,5.178939,-5.513103,-4.514688,2.756120],[-8.243118,9.600870,-1.662448,7.404376,-0.091117,-7.754830,-2.627959,-6.886839,8.983180,0.569577]],[[1.103119,-0.250712,3.186000,6.646610,2.408333,-6.108036,-8.627903,8.899425,8.122676,-8.973374],[3.141676,5.627341,-0.372847,0.064979,5.713934,1.521001,-6.068862,9.292330,1.880224,-7.578504],[-3.450641,-8.764125,-2.480538,5.701583,-6.798793,1.475909,-2.144705,7.487298,0.231493,-9.968362],[3.688603,5.765528,9.231032,3.043357,7.588906,1.560812,-5.803673,-6.148701,-9.480398,-8.645341],[-2.530358,-0.118208,7.347803,1.004568,-4.275211,6.417644,-5.930788,0.898696,-0.817918,-6.061449],[-0.093380,2.499662,3.829837,7.915598,2.679602,-8.560057,-8.474158,-8.934730,-1.698907,-8.405279],[1.219613,4.505005,-4.305332,1.424072,3.736256,-1.301224,0.112859,2.950261,9.018727,-3.696563]],[[-9.345997,-1.528243,3.476336,-0.063489,9.942954,-6.609957,9.933205,-3.962291,4.741565,-2.300825],[1.751252,-6.688304,-9.551649,9.318210,5.698746,-2.006622,-9.295561,-2.039246,6.091954,1.646488],[3.958243,2.760920,0.828419,-8.207791,5.958804,-3.023389,9.469354,4.847685,-2.257197,2.909062],[7.654739,4.605718,4.310291,6.725111,5.412566,4.867447,7.496035,3.898896,-7.436801,7.058564],[-5.378113,-3.767856,-8.431988,8.527766,-9.622468,-7.262350,-0.067394,1.967480,9.968765,-7.394621],[3.890144,5.589978,-4.590770,-1.979185,-7.774780,-7.873480,4.396219,-8.791250,-0.745586,-1.561748],[2.858243,-0.997599,-5.617672,3.002523,7.165719,-2.887407,3.963532,6.073622,-8.302447,-0.639260]],[[9.273972,9.849077,6.442876,-2.598108,7.417305,-3.065569,-4.928250,-3.098754,-7.255848,-4.195206],[6.295681,-7.747381,7.638109,-8.263409,6.860796,-4.078469,7.259591,8.839445,-7.848940,2.614333],[-8.867503,-4.162451,-9.898356,-7.956413,-6.892289,-8.207546,9.658268,-6.372383,-7.663977,6.515498],[4.529563,-6.278476,8.960834,7.177980,-9.827859,-8.482157,-9.957359,7.517524,5.953962,1.069937],[-8.465231,-8.581022,-4.174579,-9.691983,7.057552,4.137129,-1.796204,-8.274113,9.208488,6.840234],[-8.169398,7.413432,-7.201505,3.583603,-1.785258,1.483319,1.937032,-7.852614,-9.880085,-4.655120],[-9.247867,-6.495162,-1.970736,6.408627,-7.257454,1.135138,-2.173298,2.799173,3.125049,-5.136740]],[[7.003174,-9.739964,4.503796,-4.896086,-0.213254,-4.802654,-1.844154,6.722411,3.780834,5.186562],[7.170525,-0.485666,3.009999,-4.562995,-7.156860,-5.564989,-9.819373,-0.790085,2.321494,4.949107],[-8.689069,8.869013,-6.831871,9.166875,7.352061,9.659301,8.917807,-8.072749,4.383872,3.522325],[2.219021,9.328250,-5.448346,-6.607852,-5.203695,6.982505,1.048887,-4.805949,7.141113,8.795513],[-7.726799,8.823224,-8.987592,-4.635395,-1.544787,3.244523,3.215056,2.299073,1.814114,3.025030],[2.254961,-4.671130,1.499610,-0.574714,-6.240500,7.646043,-0.801913,-9.532780,-0.421565,-7.360604],[-9.997367,8.210537,-0.672302,4.316539,-8.943774,-2.561078,-2.505406,-8.501070,2.879889,-6.374702]],[[-9.226190,-8.931556,9.641043,4.570712,8.767370,-2.622083,0.891952,9.462558,6.883766,5.511015],[2.878287,8.941094,-1.620002,-2.203379,0.105150,4.244276,-2.310480,-0.972696,-1.056808,-5.519399],[-3.219626,7.355123,-4.698699,5.100632,-9.681851,1.283037,-6.774066,3.589886,-2.180083,-7.927665],[-3.858107,7.723427,5.934963,-6.264340,9.353526,2.193546,-9.301459,9.805294,9.506354,-9.438402],[-5.444151,-2.500706,-8.272770,7.974968,9.712819,-3.731965,-3.530284,-0.903294,-3.542307,2.051170],[7.558507,7.651513,-0.224747,-2.513585,1.212283,5.881590,-3.617964,5.281432,3.937625,1.380836],[-5.389858,-3.721733,0.662587,1.008639,-7.478540,9.793423,9.354528,2.900253,-7.881604,-3.185184]],[[-8.930621,0.212127,2.701429,8.088785,6.297675,7.230296,6.646738,-3.010234,-7.623496,-9.709900],[0.111666,6.495090,-1.179462,-2.915609,-9.167878,-0.197894,-7.278798,-4.375158,-6.936292,-2.172512],[-1.771727,-6.560505,7.423448,9.557033,-6.415214,-6.623270,9.937886,-6.609278,-2.292402,-6.772604],[1.807358,4.066460,-6.686379,5.083518,-5.151743,7.609044,0.763167,-0.668321,-1.548847,0.661691],[2.908319,-0.194183,7.334664,-2.410750,5.193458,-5.419004,5.207069,-4.597707,3.918096,2.871385],[9.465714,3.016795,-7.913120,-0.914175,0.931178,2.093560,6.587213,4.955053,-4.554593,3.127351],[8.825725,2.391300,5.580211,-8.004775,6.294555,-6.139951,-1.833332,-1.476519,8.413315,-6.435069]],[[-3.260391,8.894470,7.459218,-1.558276,-2.520872,-3.201988,6.703860,3.115758,0.605054,-1.141824],[4.575523,-7.114345,-7.329863,-3.706684,2.027980,-8.647357,-7.280386,2.386433,-7.331880,1.218715],[8.440925,-0.433731,0.546962,-1.175804,-3.038633,-4.684139,9.679308,9.396074,4.885408,-8.739318],[-2.558790,-3.801611,-0.897262,5.445633,7.417690,-4.603248,-5.795337,6.002147,-1.655005,-0.374605],[-3.786672,-2.885585,5.769316,2.517528,0.497906,3.423700,-5.817430,-5.520051,-6.815846,-4.560270],[-7.073539,-9.999265,5.002185,6.242866,3.656567,-0.493398,-9.322512,-4.232645,4.682832,-0.335351],[8.838573,-4.479257,0.288118,-3.846523,-3.481655,1.345396,4.074237,7.204504,3.989981,-0.432772]],[[2.554934,7.522766,6.692879,7.057858,7.085818,3.145980,-0.826581,6.608327,-6.158482,9.627801],[-5.179168,-1.930561,-0.312700,-6.096447,-4.266945,7.869178,-6.585700,6.475970,-3.354371,-8.955166],[-4.322328,-5.301123,5.411521,-8.829873,4.460409,7.312778,-7.179634,-4.917280,4.913519,-0.484306],[1.992271,5.775528,-0.356812,-3.933466,-8.322644,5.786420,-5.420625,4.949135,6.581822,-1.583424],[5.053697,-1.138478,0.612279,-7.049761,2.612433,-4.225263,-2.554621,-9.550578,-1.890998,2.663863],[1.979961,9.010698,-8.430232,-1.440174,-0.481024,8.775585,-5.038569,5.587033,-1.694151,-3.668128],[-7.750324,-1.928270,4.888913,-3.700175,4.630446,-3.496406,-2.733152,2.025872,-8.311526,-2.927393]]], dtype = "float64")#candidate|8479|(9, 7, 10)|const|float64
uop_8480 = relay.cosh(const_8479.astype('float64')) # shape=(9, 7, 10)
uop_8491 = relay.sinh(const_8479.astype('float32')) # shape=(9, 7, 10)
output = relay.Tuple([uop_8480,uop_8491,])
output2 = relay.Tuple([uop_8480,uop_8491,])
func_8502 = relay.Function([], output)
mod['func_8502'] = func_8502
mod = relay.transform.InferType()(mod)
mutated_mod['func_8502'] = func_8502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8502_call = mutated_mod.get_global_var('func_8502')
call_8503 = func_8502_call()
output = call_8503
func_8504 = relay.Function([], output)
mutated_mod['func_8504'] = func_8504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8036_call = mod.get_global_var('func_8036')
func_8038_call = mutated_mod.get_global_var('func_8038')
call_8603 = func_8036_call()
call_8604 = func_8036_call()
output = call_8603
output2 = call_8604
func_8606 = relay.Function([], output)
mod['func_8606'] = func_8606
mod = relay.transform.InferType()(mod)
mutated_mod['func_8606'] = func_8606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8606_call = mutated_mod.get_global_var('func_8606')
call_8607 = func_8606_call()
output = call_8607
func_8608 = relay.Function([], output)
mutated_mod['func_8608'] = func_8608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8620 = relay.var("var_8620", dtype = "float32", shape = ())#candidate|8620|()|var|float32
var_8621 = relay.var("var_8621", dtype = "float32", shape = (12, 15, 12))#candidate|8621|(12, 15, 12)|var|float32
bop_8622 = relay.power(var_8620.astype('float32'), var_8621.astype('float32')) # shape=(12, 15, 12)
bop_8640 = relay.maximum(var_8620.astype('uint32'), var_8621.astype('uint32')) # shape=(12, 15, 12)
output = relay.Tuple([bop_8622,bop_8640,])
output2 = relay.Tuple([bop_8622,bop_8640,])
func_8643 = relay.Function([var_8620,var_8621,], output)
mod['func_8643'] = func_8643
mod = relay.transform.InferType()(mod)
var_8644 = relay.var("var_8644", dtype = "float32", shape = ())#candidate|8644|()|var|float32
var_8645 = relay.var("var_8645", dtype = "float32", shape = (12, 15, 12))#candidate|8645|(12, 15, 12)|var|float32
output = func_8643(var_8644,var_8645,)
func_8646 = relay.Function([var_8644,var_8645,], output)
mutated_mod['func_8646'] = func_8646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6831_call = mod.get_global_var('func_6831')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_8681 = func_6831_call()
call_8682 = func_6831_call()
output = relay.Tuple([call_8681,])
output2 = relay.Tuple([call_8682,])
func_8683 = relay.Function([], output)
mod['func_8683'] = func_8683
mod = relay.transform.InferType()(mod)
output = func_8683()
func_8684 = relay.Function([], output)
mutated_mod['func_8684'] = func_8684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8031_call = mod.get_global_var('func_8031')
func_8033_call = mutated_mod.get_global_var('func_8033')
call_8701 = relay.TupleGetItem(func_8031_call(), 1)
call_8702 = relay.TupleGetItem(func_8033_call(), 1)
output = call_8701
output2 = call_8702
func_8708 = relay.Function([], output)
mod['func_8708'] = func_8708
mod = relay.transform.InferType()(mod)
mutated_mod['func_8708'] = func_8708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mutated_mod.get_global_var('func_8708')
call_8709 = func_8708_call()
output = call_8709
func_8710 = relay.Function([], output)
mutated_mod['func_8710'] = func_8710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6831_call = mod.get_global_var('func_6831')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_8732 = func_6831_call()
call_8733 = func_6831_call()
output = relay.Tuple([call_8732,])
output2 = relay.Tuple([call_8733,])
func_8741 = relay.Function([], output)
mod['func_8741'] = func_8741
mod = relay.transform.InferType()(mod)
mutated_mod['func_8741'] = func_8741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8741_call = mutated_mod.get_global_var('func_8741')
call_8742 = func_8741_call()
output = call_8742
func_8743 = relay.Function([], output)
mutated_mod['func_8743'] = func_8743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mod.get_global_var('func_7948')
func_7950_call = mutated_mod.get_global_var('func_7950')
call_8748 = func_7948_call()
call_8749 = func_7948_call()
func_7544_call = mod.get_global_var('func_7544')
func_7547_call = mutated_mod.get_global_var('func_7547')
var_8760 = relay.var("var_8760", dtype = "float64", shape = (420,))#candidate|8760|(420,)|var|float64
call_8759 = relay.TupleGetItem(func_7544_call(relay.reshape(var_8760.astype('float64'), [3, 10, 14])), 1)
call_8761 = relay.TupleGetItem(func_7547_call(relay.reshape(var_8760.astype('float64'), [3, 10, 14])), 1)
func_7830_call = mod.get_global_var('func_7830')
func_7831_call = mutated_mod.get_global_var('func_7831')
call_8776 = relay.TupleGetItem(func_7830_call(), 0)
call_8777 = relay.TupleGetItem(func_7831_call(), 0)
output = relay.Tuple([call_8748,call_8759,var_8760,call_8776,])
output2 = relay.Tuple([call_8749,call_8761,var_8760,call_8777,])
func_8779 = relay.Function([var_8760,], output)
mod['func_8779'] = func_8779
mod = relay.transform.InferType()(mod)
mutated_mod['func_8779'] = func_8779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8780 = relay.var("var_8780", dtype = "float64", shape = (420,))#candidate|8780|(420,)|var|float64
func_8779_call = mutated_mod.get_global_var('func_8779')
call_8781 = func_8779_call(var_8780)
output = call_8781
func_8782 = relay.Function([var_8780], output)
mutated_mod['func_8782'] = func_8782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7158_call = mod.get_global_var('func_7158')
func_7159_call = mutated_mod.get_global_var('func_7159')
call_8819 = relay.TupleGetItem(func_7158_call(), 2)
call_8820 = relay.TupleGetItem(func_7159_call(), 2)
output = relay.Tuple([call_8819,])
output2 = relay.Tuple([call_8820,])
func_8827 = relay.Function([], output)
mod['func_8827'] = func_8827
mod = relay.transform.InferType()(mod)
output = func_8827()
func_8828 = relay.Function([], output)
mutated_mod['func_8828'] = func_8828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8741_call = mod.get_global_var('func_8741')
func_8743_call = mutated_mod.get_global_var('func_8743')
call_8845 = relay.TupleGetItem(func_8741_call(), 0)
call_8846 = relay.TupleGetItem(func_8743_call(), 0)
func_6177_call = mod.get_global_var('func_6177')
func_6179_call = mutated_mod.get_global_var('func_6179')
call_8851 = func_6177_call()
call_8852 = func_6177_call()
output = relay.Tuple([call_8845,call_8851,])
output2 = relay.Tuple([call_8846,call_8852,])
func_8876 = relay.Function([], output)
mod['func_8876'] = func_8876
mod = relay.transform.InferType()(mod)
mutated_mod['func_8876'] = func_8876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8876_call = mutated_mod.get_global_var('func_8876')
call_8877 = func_8876_call()
output = call_8877
func_8878 = relay.Function([], output)
mutated_mod['func_8878'] = func_8878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5642_call = mod.get_global_var('func_5642')
func_5644_call = mutated_mod.get_global_var('func_5644')
call_8907 = func_5642_call()
call_8908 = func_5642_call()
func_3503_call = mod.get_global_var('func_3503')
func_3506_call = mutated_mod.get_global_var('func_3506')
var_8911 = relay.var("var_8911", dtype = "float64", shape = ())#candidate|8911|()|var|float64
const_8912 = relay.const([-8.308872,3.133220,9.965314,2.994860,3.657117,-7.772237,-7.134751,-3.015442,2.051463,9.040951,-6.158167,4.201888,-9.245993,1.646396,-3.111637,-1.097219,-2.359594,-8.432399,-1.077022,6.373245,-7.949961,3.113298,-7.070049,8.557328,-6.302401,1.791270,8.946327,-2.466509,-1.063356,1.433057,0.988556,8.423256,6.672765,9.057471,-7.285001,3.600142,-3.124630,6.087030,-7.637041,-0.529330,8.341098,-0.021733,3.475931,-1.557824,-7.359065,-7.541855,-3.651279,-0.034275,3.141296,7.007344,-6.722656,-9.119003,6.780976,9.541780,-1.813489,-9.903152,3.185104,-5.530972,-7.859853,2.222383,7.905930,-7.425472,1.890504,0.928537,-6.603082,-0.650796,-9.657587,-2.709712,6.989313,8.340937,8.863303,0.303399,-7.185845,4.212756,3.298029,-0.311745,-1.730029,-0.989755,0.714316,-4.192047,-3.208784,-2.613466,7.708818,1.663530,-3.992364,4.025672,-1.507372,-1.827775,-6.448291,3.144225,-4.870697,-8.592241,-3.235137,1.927455,3.640673,-0.207884,-8.712191,-0.596462,2.685214,-3.457142,-5.509493,9.432138,4.038352,-6.344801,-5.152876,7.828446,5.795001,3.947556,-6.364289,4.964959,0.433016,2.730173,-1.327098,4.295325,7.871500,0.061736,9.336398,3.318754,-1.722156,7.715577,6.385208,-3.545335,-9.768568,9.702150,-6.406062,-8.462488,-2.403267,5.405756,7.523191,-6.538470,7.205963,6.954223,-8.259335,6.553433,-4.261465,2.087853,7.893237,-2.505039,-0.356707,-1.865272,-6.559100,-6.639330,-0.970825,6.037191,-4.788996,9.533181,1.621266,8.383825,4.501546,-2.616476,0.723943,6.440017,1.941652,-3.118410,5.356275,-0.801475,-0.907231,-1.248343,2.740960,-5.534970,9.240419,3.793395,-8.270707,7.461776,1.379897,9.423581,4.709274,8.776218,-4.716679,-7.758375,-7.513117,4.643054,9.673395,5.051177,6.049469,0.838867,9.360552,7.831190,5.041223,4.197881,2.873692,6.265904,-1.749476,7.693125,-4.126679,-2.520309,6.421788,1.750598,-3.417578,5.481304,0.083529,-8.050097,7.857063,-8.701865,-0.873390,7.835495,3.894295,0.609870,4.959817,-6.805089,-1.357941,-9.680945,3.289775,9.862137,-9.409058,6.175243,6.287257,1.584720,-1.779164,7.192188,7.308170,-4.252343,8.962569,-0.159434,-3.404071,-4.965546,-0.845693,-6.389202,5.007587,0.007365,-8.993086,5.816474,-3.333484,-0.585713,-2.357416,-9.099658,-9.062568,-9.089157,-6.987435,-5.178328,-4.286936,6.582953,1.690492,-6.147944,5.259961,8.390071,-9.232336,0.943504,8.941488,6.117576,0.623896,3.474143,-4.540467,3.477774,1.717889,-9.708952,2.008911,-8.941773,6.496638,7.119927,-9.406380,2.310000,1.048003,9.221597,-2.681072,-2.857258,-7.565961,-9.556262,-0.046654,6.301379,4.100944,7.434851,-7.212723,-3.079996,-9.349885,-6.083263,-3.112093,0.723341,9.308558,-6.885897,-0.122142,0.574519,-5.930947,3.090715,-9.513969,-7.312973,-1.810128,-6.200732,1.007124,4.361347,-7.361763,-3.625451,7.160508,-8.739560,7.642969,-9.439343,9.387732,-8.259783,7.498197,-5.534493,6.628521,-0.208877,-9.836693,-1.440269,2.312055,7.996862,3.601140,-8.518909,-8.613336,3.413567,6.469126,0.346574,-0.282050,-2.840912,4.977725,6.072026,-2.178187,4.954667,-8.779337,-0.535311,3.469916,1.339022,-7.004868,8.283758,-3.002890,-9.273759,-1.443991,-7.117887,1.783550,7.391600,-5.489092,0.145776,-0.220513,4.629570,-1.716392,-6.662577,-4.411447,1.958577,3.547598,2.910199,5.943981,7.602956,0.957642,-8.333708,-8.497530,7.999002,-1.473943,5.469386,4.194684,1.360852,3.374029,4.799503,1.612194,-4.013929,6.391914,-8.471515,5.206950,9.184086,-3.042097,0.243400,7.606663,9.686752,-2.640480,-3.351950,4.526714,5.600201,4.053919,-7.011622,1.374951,7.026431,-2.555992,-5.229371,2.471552,-6.534285,2.467739,-7.922529,5.772820,1.375297,8.990178,5.566738,1.361459,8.089807,-1.014952,-3.741459,-5.876335,-0.244936,2.953163,-5.957794,-3.969159,-5.185194,-4.345254,-3.994529,-0.499559,6.931223,4.471940,0.471837,-9.336936,9.818556,-0.446842,-0.730446,4.114563,-6.382236,8.200368,5.805435,5.921995,-8.387648,4.518370,6.213379,-7.200707,5.641645,-6.434639,-5.779533,3.874574,0.975915,8.070570,-4.118430,-3.721484,-5.946512,9.734597,-4.486556,0.559936,-1.270887,5.977456,2.249025,5.321822,-4.833569,8.030181,-9.362957,-1.608459,-0.667398,0.736230,4.683554,1.660425,-9.241084,7.310865,-1.704727,9.744689,8.143345,-0.584209,-0.553589,2.878074,5.872711,8.162792,1.091576,9.176073,-1.181811,-9.330440,2.490029,1.646634,-0.921175,-2.368496,8.966113,-7.302601,-2.375087,0.346667,-1.662176,3.449878,0.279673,9.848915,4.802398,2.468082,8.885857,0.809294,7.415686,-4.223797,6.142871,-2.462498,-1.493269,-0.558603,-9.761768,1.129777,-4.124922,-5.330314,-4.217176,8.043067,5.438373,9.677416,-8.698603,8.423814,4.380217,-4.096578,-0.107843,9.401175,8.200146,6.551038,-2.604070,-5.365539,-7.247193,-6.172198,-1.877899,-8.445962,-6.132707,-7.385048,-4.787408,5.519257,-4.127070,-7.624882,-5.849426,3.486269,7.519498,4.339965,-2.145116,0.511209,2.623360,2.508695,8.948113,8.735851,6.473803,-4.944605,2.328293,4.980079,6.700882,-9.522167,4.658381,8.439050,-9.288567,-9.784235,-3.972007,5.546406,-6.849286,4.435409,-6.621412,6.663575,1.931594,8.781100,7.923435,-6.624738,9.154704,0.860132,-3.540705,5.652634,2.925078,0.639533,9.791942,7.656001,3.709663,4.953101,2.635597,2.019692,1.154095,4.151508,7.147571,0.563140,-4.351159,-1.982785,-1.078747,-5.728379,5.736489,4.319091,-7.596446,-1.203476,-1.691531,-1.313590,7.838032,-1.949640,-3.469521,6.441004,7.146539,-0.498075,0.577394,-9.243359,2.760621,-5.753326,3.370092,9.313806,-9.102146,5.891542,-0.581451,6.232693,-8.475368,-6.580706,6.467655,-2.875355,-9.048458,9.122651,9.649194,7.543738,-7.135276,-4.290468,-5.904869,5.737802,3.235242,5.754340,-2.186599,1.213375,-6.011222,-3.217823,-2.156564,-5.621888,3.224294,-7.430086,6.092580,6.620985,6.926701,5.570077,-6.866327,9.285448,-2.198220,4.912599,0.595946,1.486836,-1.418687,0.746946,-9.390248,3.894683,4.716630,9.451858,-1.308586,-2.801229,-5.081478,5.360745,3.633923,-6.518954,6.479420,-5.583330,6.387823,-4.328832,7.415600,-9.357399,9.967419,-8.385592,3.015646,4.242688,-4.457173,-0.899938,-8.274079,4.542896,-1.538391,5.566808,5.296646,-6.520183,5.625625,-2.760092,-0.625613,-6.749727,7.601939,1.558019,-7.190020,-0.185427,-3.495848,5.046298,-9.610750,-1.279978,2.161525,-1.529308,-7.989654,0.811699,9.676482,-5.717211,-9.375717,4.167357,4.523755,-3.897427,4.058708,5.159824,2.854506,-8.285417,0.052120,-2.586014,-4.397329,-3.098776,2.884124,-8.733118,5.329132,8.736137,-9.499950,9.990829,7.972521,0.598013,-7.112947,-8.014962,-7.062298,0.917252,-9.269477,-7.245425,-2.870881,7.856027,-1.117978,-2.813860,-0.726742,4.928896,-6.232940,9.115712,-3.117286,1.077468,2.365829,3.227438,-7.838522,0.788157,-2.065539,-2.584914,-9.359184,7.053809,1.200050,9.090278,1.126895,-6.860432,0.009410,1.764942,8.012337,7.895767,-7.291955,-2.653746,1.153945,6.730071,4.023641,5.199599,8.756505,-6.747193,-3.045947,6.727316,-3.682264,-7.531797,9.997747,6.051830,-1.167197,3.131111,7.049653,7.417779,6.373433,2.011521,-2.497514,5.906763,6.038434,0.992278,9.257635,0.451073,-5.323522,5.179819,4.573404,-9.263314,4.642519,-1.107816,7.180374,-4.332385,5.314381,5.283773,-0.061839,2.788234,-4.759313,2.295714,9.763159,6.306025,-0.310670,2.238820,-1.515810,7.207066,0.706035,-0.211088,-1.488104,-9.097207,-8.861755,6.257708,-9.518067,-8.358943,0.165500,-0.937425,-6.209878,6.771439,-8.774885,-1.853161,-7.620479,0.037373,-5.349582,2.725196,-0.652919,-1.698493,3.671707,8.241028,-4.233888,2.583136,1.119808,0.289724,5.026017,1.357276,1.459687,-6.337869,9.068599,-5.104229,-3.184024,-3.335828,9.545909,2.170235,4.364893,-8.513564,3.213933,0.491101,6.873046,-4.007906,6.275419,-9.415366,-4.636818,2.910307,-9.932174,8.138167,3.833297,1.270040,-3.466371,3.119847,6.694105,8.388869,0.866688,-8.034607,6.945496,-3.093120,-6.808425,-2.338073,5.113283,-9.612368,6.626727,-3.028949,-1.516685,9.085763,8.744705,-0.095694,-8.727207,0.852627,-5.224529,-4.943862,-4.836645,6.184093,9.743568,4.797038,4.964637,1.172624,8.966871,0.594739,7.072320,-3.547303,3.743082,-3.356251,2.960979,-7.454911,6.612276,9.032591,8.587733,-7.681181,-0.482222,7.758389,7.947275,-7.314849,7.110399,-0.044641,-0.828963,5.028022,1.287315,6.416163,7.306087,7.629693,-2.251678], dtype = "float64")#candidate|8912|(840,)|const|float64
call_8910 = func_3503_call(relay.reshape(var_8911.astype('float64'), []), relay.reshape(const_8912.astype('float64'), [15, 7, 8]), )
call_8913 = func_3503_call(relay.reshape(var_8911.astype('float64'), []), relay.reshape(const_8912.astype('float64'), [15, 7, 8]), )
output = relay.Tuple([call_8907,call_8910,var_8911,const_8912,])
output2 = relay.Tuple([call_8908,call_8913,var_8911,const_8912,])
func_8925 = relay.Function([var_8911,], output)
mod['func_8925'] = func_8925
mod = relay.transform.InferType()(mod)
mutated_mod['func_8925'] = func_8925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8926 = relay.var("var_8926", dtype = "float64", shape = ())#candidate|8926|()|var|float64
func_8925_call = mutated_mod.get_global_var('func_8925')
call_8927 = func_8925_call(var_8926)
output = call_8927
func_8928 = relay.Function([var_8926], output)
mutated_mod['func_8928'] = func_8928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8279_call = mod.get_global_var('func_8279')
func_8281_call = mutated_mod.get_global_var('func_8281')
call_8937 = relay.TupleGetItem(func_8279_call(), 0)
call_8938 = relay.TupleGetItem(func_8281_call(), 0)
output = call_8937
output2 = call_8938
func_8943 = relay.Function([], output)
mod['func_8943'] = func_8943
mod = relay.transform.InferType()(mod)
output = func_8943()
func_8944 = relay.Function([], output)
mutated_mod['func_8944'] = func_8944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8827_call = mod.get_global_var('func_8827')
func_8828_call = mutated_mod.get_global_var('func_8828')
call_8976 = relay.TupleGetItem(func_8827_call(), 0)
call_8977 = relay.TupleGetItem(func_8828_call(), 0)
output = call_8976
output2 = call_8977
func_8998 = relay.Function([], output)
mod['func_8998'] = func_8998
mod = relay.transform.InferType()(mod)
output = func_8998()
func_8999 = relay.Function([], output)
mutated_mod['func_8999'] = func_8999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8036_call = mod.get_global_var('func_8036')
func_8038_call = mutated_mod.get_global_var('func_8038')
call_9021 = func_8036_call()
call_9022 = func_8036_call()
uop_9031 = relay.log(call_9021.astype('float64')) # shape=(1, 10, 14)
uop_9033 = relay.log(call_9022.astype('float64')) # shape=(1, 10, 14)
uop_9035 = relay.erf(call_9021.astype('float32')) # shape=(1, 10, 14)
uop_9037 = relay.erf(call_9022.astype('float32')) # shape=(1, 10, 14)
bop_9038 = relay.add(uop_9035.astype('float32'), relay.reshape(call_9021.astype('float32'), relay.shape_of(uop_9035))) # shape=(1, 10, 14)
bop_9041 = relay.add(uop_9037.astype('float32'), relay.reshape(call_9022.astype('float32'), relay.shape_of(uop_9037))) # shape=(1, 10, 14)
func_29_call = mod.get_global_var('func_29')
func_32_call = mutated_mod.get_global_var('func_32')
const_9048 = relay.const([1.653516,5.443547,-5.904491,-7.240887,-4.267417,-6.945526,-7.391710,-3.483448,-3.871389,8.094093,9.048491,8.657300,3.957123,-2.354736,4.648291,-2.077769,5.054511,-2.542930,7.999510,4.805342,-1.799696,-6.531487,3.051796,9.886970,3.108150,2.964749,-5.056337,-9.535855,4.981311,-7.463422,-2.772648,4.290509,-5.673253,2.081207,6.850987,-9.885617,7.715317,-4.388090,0.968976,-7.220774,-6.797648,0.882251,-4.619961,-7.121523,-7.286785,1.301329,6.238265,-0.864640,-9.901986,8.319578,-2.477898,-7.502863,-7.237678,-6.764458,-1.893421,7.049783,9.224616,2.004743,-3.147345,0.007292,-6.267744,-0.396357,-0.183745,0.630670,-8.489323,-5.495885,-2.598314,-2.419121,7.805902,4.040738,-9.446992,7.349748,8.661384,5.846332,-8.220984,4.247102,0.688604,5.793412,-3.326408,2.586862,7.650042,-9.218504,-7.554933,2.201369,5.256698,2.336126,1.033683,4.515929,2.136899,-8.356564,-3.020833,-7.860459,1.415254,0.923208,-2.744377,7.213062,-3.221578,-1.449221,-2.185135,-5.959501,-0.859874,8.185538,-4.874159,-6.749031,-0.945309,-5.765192,-1.961824,-5.673908,-9.714301,-1.313354,-0.803839,-2.155744,0.126557,7.199621,-1.349155,4.982258,8.358433,-0.257169,-0.361744,7.225031,-9.634631,9.069331,-0.543552,-4.430664,2.258357,-2.731073,-3.726218,-2.260879,5.184762,-5.436255,2.716489,-2.864697,-6.234970,4.702544,2.678053,0.972169,-2.015970,1.755890,2.225553,0.187563,-6.029852,-8.547582,-7.272397,-7.381929,7.381929,-7.871704,-9.356605,6.733100,1.401937,5.543765,-4.139008,-9.073863,7.471908,8.214706,-8.104115,4.893316,-4.853848,1.586538,-7.740105,-0.789889,-9.188937,2.946146,6.715441,-2.871575,6.515970,-6.566063,-0.568928,-5.453791,-7.134192,-4.943908,-2.914760,8.268865,-0.321096,9.920410,-9.017771,-9.927778,-5.133210,1.125091,-4.447556,1.124466,-3.494028,2.138524,-3.868627,-1.010269,-0.693135,0.103258,9.926716,4.841724,-8.603620,-8.936690,6.387786,0.320013,-0.903998,0.860010,-4.813571,-7.685624,-0.578586,-9.571376,7.301413,2.778987,4.114009,-8.823114,3.169284,-4.219392,9.723318,-4.215825,5.797775,-0.244453,5.880559,2.677578,-3.931947,-3.646276,9.987644,-2.202561,2.003015,-6.828835,-4.348285,9.355152,8.295635,4.688744,4.412021,5.270915,-1.780476,-0.972077,2.863510,2.836349,-8.901641,7.029930,-6.991542,-6.073233,0.495031,1.957810,-4.838127,-3.456143,-8.075949,-6.138081,1.693945,8.715556,1.822795,1.272781,0.069615,2.192649,-1.697505,4.217047,-0.056403,8.297760,7.746226,1.100622,6.281824,2.462235,-5.465518,9.189272,2.413197,3.621164,7.409455,9.851188,0.711511,-3.171956,0.108206,6.094621,1.967344,-2.526002,8.940574,-4.136467,6.552502,-9.223512,3.125099,8.186141,-8.963420,-5.606819,-8.633729,-0.930753,-0.426366,1.511367,3.124648,0.208692,9.445146,7.313837,3.530403,-4.574029,2.228282,-6.538793,-0.777223,3.498807,-8.747207,-0.322259,6.422219,6.088061,3.280939,-4.844179,6.214664,-7.880433,6.780059,5.626051,3.259303,7.781855,-1.644512,-1.646229,3.554111,-9.320186,5.000854,-5.441454,1.961034,-0.146722,8.022098,3.296874,-7.745092,2.047705,1.006030,-0.350471,-2.106384,9.647738,-8.074448,-0.729771,8.930608,8.182299,0.983385,-1.833758,5.758319,-6.535356,7.668983,8.263663,2.084118,8.806981,7.768143,9.814830,1.383573,3.941007,-1.063911,5.060079,-7.606106,-5.559538,4.464839,-5.194771,0.765059,1.657350,9.433572,-8.288408,7.849160,0.904026,-1.953169,5.507868,-9.996649,6.985481,-4.393380,-0.755243,4.860209,-6.557771,3.426373,-6.180466,1.544254,6.252775,-8.389296,2.275021,2.663158,5.935503,-6.453646,4.326208,2.066477,2.639381,-3.172412,-3.357393,3.704191,-9.721505,7.290431,4.299607,-7.344769,3.651732,5.353789,-4.110537,-2.920370,-6.066696,-7.115073,1.151454,-1.325211,9.601030,-8.953203,-0.658532,7.489224,3.056828,4.214093,2.645457,3.994398,4.437661,-3.792188,-5.917693,9.229122,2.264957,-6.831696,8.794536,3.281175,7.536422,-2.091318,2.170358,-6.136235,-5.105971,-6.431679,9.677651,1.557107,-1.151390,9.766522,-6.934879,3.624865,-4.507416,-5.765883,-3.279317,2.171815,8.287588,1.267647,5.514000,4.238662,-7.024272,5.930933,-5.123056,-5.425815,-4.639625,9.893984,-8.598395,-9.653139,-9.791839,-2.001722,7.713880,6.078388,0.205682,7.057118,-7.341140,-1.920505,-5.918008,4.981619,-1.135991,6.046979,7.329504,1.898582,0.524972,-0.651768,-9.137839,-3.553455,-2.690256,2.980654,9.628468,-3.710853,9.100325,-3.510666,6.547949,-5.969757,7.860906,-4.158295,-5.360292,-9.057623,-9.056003,-1.429739,6.625823,-3.830429,-6.362184,1.153673,-9.660746,0.091526,-0.397191,-5.940891,8.951860,-0.892416,-1.005777,1.978611,-3.389983,6.518781,6.062056,-6.398565,-9.960974], dtype = "float64")#candidate|9048|(468,)|const|float64
call_9047 = func_29_call(relay.reshape(const_9048.astype('float64'), [9, 4, 13]))
call_9049 = func_29_call(relay.reshape(const_9048.astype('float64'), [9, 4, 13]))
output = relay.Tuple([uop_9031,bop_9038,call_9047,const_9048,])
output2 = relay.Tuple([uop_9033,bop_9041,call_9049,const_9048,])
func_9065 = relay.Function([], output)
mod['func_9065'] = func_9065
mod = relay.transform.InferType()(mod)
mutated_mod['func_9065'] = func_9065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9065_call = mutated_mod.get_global_var('func_9065')
call_9066 = func_9065_call()
output = call_9066
func_9067 = relay.Function([], output)
mutated_mod['func_9067'] = func_9067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8876_call = mod.get_global_var('func_8876')
func_8878_call = mutated_mod.get_global_var('func_8878')
call_9111 = relay.TupleGetItem(func_8876_call(), 1)
call_9112 = relay.TupleGetItem(func_8878_call(), 1)
func_6292_call = mod.get_global_var('func_6292')
func_6294_call = mutated_mod.get_global_var('func_6294')
call_9113 = relay.TupleGetItem(func_6292_call(), 2)
call_9114 = relay.TupleGetItem(func_6294_call(), 2)
var_9115 = relay.var("var_9115", dtype = "float32", shape = (4, 10, 14))#candidate|9115|(4, 10, 14)|var|float32
bop_9116 = relay.left_shift(call_9111.astype('int16'), var_9115.astype('int16')) # shape=(4, 10, 14)
bop_9119 = relay.left_shift(call_9112.astype('int16'), var_9115.astype('int16')) # shape=(4, 10, 14)
bop_9125 = relay.logical_xor(var_9115.astype('uint32'), relay.reshape(bop_9116.astype('uint32'), relay.shape_of(var_9115))) # shape=(4, 10, 14)
bop_9128 = relay.logical_xor(var_9115.astype('uint32'), relay.reshape(bop_9119.astype('uint32'), relay.shape_of(var_9115))) # shape=(4, 10, 14)
uop_9139 = relay.log10(bop_9125.astype('float32')) # shape=(4, 10, 14)
uop_9141 = relay.log10(bop_9128.astype('float32')) # shape=(4, 10, 14)
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_9150 = func_8708_call()
call_9151 = func_8708_call()
output = relay.Tuple([call_9113,uop_9139,call_9150,])
output2 = relay.Tuple([call_9114,uop_9141,call_9151,])
func_9154 = relay.Function([var_9115,], output)
mod['func_9154'] = func_9154
mod = relay.transform.InferType()(mod)
var_9155 = relay.var("var_9155", dtype = "float32", shape = (4, 10, 14))#candidate|9155|(4, 10, 14)|var|float32
output = func_9154(var_9155)
func_9156 = relay.Function([var_9155], output)
mutated_mod['func_9156'] = func_9156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9194 = relay.var("var_9194", dtype = "int16", shape = (7, 3, 5))#candidate|9194|(7, 3, 5)|var|int16
const_9195 = relay.const([[[-4,2,4,-10,-8],[-6,5,6,-4,10],[1,-5,4,-2,-1]],[[4,1,-7,-1,-6],[1,6,6,10,2],[-5,-6,5,4,-8]],[[6,-10,-8,-2,6],[-2,3,-3,-1,8],[4,6,4,1,-9]],[[-2,-1,-3,-1,-9],[-4,2,-8,8,-1],[-5,-8,7,4,-9]],[[-9,7,-3,-8,-5],[1,-8,1,-9,7],[3,-5,3,-2,-1]],[[2,-2,-9,-9,-1],[-4,8,-5,-7,-5],[-6,-6,-1,4,10]],[[4,9,-10,5,7],[-6,6,2,10,-8],[6,5,-7,-5,-10]]], dtype = "int16")#candidate|9195|(7, 3, 5)|const|int16
bop_9196 = relay.subtract(var_9194.astype('int16'), relay.reshape(const_9195.astype('int16'), relay.shape_of(var_9194))) # shape=(7, 3, 5)
func_5888_call = mod.get_global_var('func_5888')
func_5891_call = mutated_mod.get_global_var('func_5891')
const_9207 = relay.const([[-0.892465,-9.832551],[-6.905744,4.669126],[3.072340,-3.544092],[6.920885,7.841664],[7.796479,7.051284],[2.041144,5.382386],[-2.339955,-3.797496],[-3.868889,0.864603],[4.545330,5.986846],[6.049954,0.455295],[-6.300069,-9.161833],[-2.014312,0.449044],[-0.273851,5.511738],[4.220786,9.230243],[9.280957,9.013959],[-8.457460,9.296698],[-9.623844,4.573759],[1.485683,-0.939142],[-3.963553,-7.506616],[1.164780,-0.278357],[-7.720773,9.923175],[7.450919,0.979800],[-5.470976,-5.115310],[4.543777,-8.491405],[-7.360542,-2.467619],[-4.567386,5.731991],[7.741608,1.153840],[-6.250478,-1.015972],[-7.728478,-5.092846],[-3.659184,-8.206320],[-4.239907,0.441672],[-3.175460,-1.451427],[8.023549,3.061089],[5.805395,-3.376910],[-7.389558,2.125452],[-5.153073,9.678975],[5.312710,-0.247443],[5.862968,-7.197418],[4.083247,-5.633568],[8.667030,-2.145642],[8.195629,7.681541],[3.896814,8.705103],[0.081527,-6.293797],[-2.658924,-5.004845],[4.204093,-8.177818],[-5.310914,1.361302],[-1.389002,8.500297],[-7.573568,6.457227],[7.997507,-8.084650],[-4.342136,-8.834702],[1.819211,6.679137],[-4.173930,7.190682],[-2.349125,6.108212],[4.200939,-7.992475],[-2.372950,3.886517],[-3.868627,-3.086517],[9.877585,-4.391164],[-7.174729,-8.288481],[4.557543,3.687171],[9.354721,9.430713],[-8.602005,-0.649136],[6.157118,-1.536733],[5.908742,-7.375496],[-8.386297,3.778783],[-4.544725,6.728659],[5.902009,-3.753911],[-9.152251,-8.911551],[-2.095460,7.816231],[-9.277017,-6.514230],[1.284834,8.582401],[6.649038,-3.115918],[-1.024134,8.610836],[9.549382,5.251648],[-4.565547,8.326765],[-2.258678,4.322341],[3.429906,2.974831],[-7.064096,-4.911412],[-6.597023,-4.456591],[4.380871,6.161684],[7.226053,-9.816888],[-1.554075,3.146979],[6.882018,5.424450],[-2.243573,1.875674],[7.417657,-6.181698],[-6.735754,3.657789],[-2.120587,-7.375002],[-4.549100,-2.528915],[1.360394,-5.468687],[-8.963956,-9.528135],[-3.556326,2.846315],[-9.153294,0.040375],[-8.132553,-6.318697],[-6.957168,3.190912],[6.691093,-1.935393],[-4.534553,6.168274],[-3.516681,9.045951],[2.018180,-7.008384],[3.605459,4.870801],[-8.782302,3.002645],[-2.834978,-0.704784],[-1.164521,4.705128],[6.828869,8.197417],[-2.757089,3.888967],[1.672273,-5.994360],[6.645234,-8.918087],[-1.563380,-2.979008],[-6.222569,6.609183],[6.244520,5.302216],[-5.030428,-9.600529],[1.554199,3.541715],[-2.374215,-2.667878],[4.035772,4.246284]], dtype = "float32")#candidate|9207|(112, 2)|const|float32
call_9206 = relay.TupleGetItem(func_5888_call(relay.reshape(const_9207.astype('float32'), [8, 28])), 0)
call_9208 = relay.TupleGetItem(func_5891_call(relay.reshape(const_9207.astype('float32'), [8, 28])), 0)
output = relay.Tuple([bop_9196,call_9206,const_9207,])
output2 = relay.Tuple([bop_9196,call_9208,const_9207,])
func_9209 = relay.Function([var_9194,], output)
mod['func_9209'] = func_9209
mod = relay.transform.InferType()(mod)
mutated_mod['func_9209'] = func_9209
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9210 = relay.var("var_9210", dtype = "int16", shape = (7, 3, 5))#candidate|9210|(7, 3, 5)|var|int16
func_9209_call = mutated_mod.get_global_var('func_9209')
call_9211 = func_9209_call(var_9210)
output = call_9211
func_9212 = relay.Function([var_9210], output)
mutated_mod['func_9212'] = func_9212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8943_call = mod.get_global_var('func_8943')
func_8944_call = mutated_mod.get_global_var('func_8944')
call_9263 = func_8943_call()
call_9264 = func_8943_call()
output = relay.Tuple([call_9263,])
output2 = relay.Tuple([call_9264,])
func_9271 = relay.Function([], output)
mod['func_9271'] = func_9271
mod = relay.transform.InferType()(mod)
output = func_9271()
func_9272 = relay.Function([], output)
mutated_mod['func_9272'] = func_9272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6292_call = mod.get_global_var('func_6292')
func_6294_call = mutated_mod.get_global_var('func_6294')
call_9330 = relay.TupleGetItem(func_6292_call(), 0)
call_9331 = relay.TupleGetItem(func_6294_call(), 0)
output = relay.Tuple([call_9330,])
output2 = relay.Tuple([call_9331,])
func_9351 = relay.Function([], output)
mod['func_9351'] = func_9351
mod = relay.transform.InferType()(mod)
mutated_mod['func_9351'] = func_9351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9351_call = mutated_mod.get_global_var('func_9351')
call_9352 = func_9351_call()
output = call_9352
func_9353 = relay.Function([], output)
mutated_mod['func_9353'] = func_9353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8386_call = mod.get_global_var('func_8386')
func_8388_call = mutated_mod.get_global_var('func_8388')
call_9374 = relay.TupleGetItem(func_8386_call(), 0)
call_9375 = relay.TupleGetItem(func_8388_call(), 0)
output = relay.Tuple([call_9374,])
output2 = relay.Tuple([call_9375,])
func_9377 = relay.Function([], output)
mod['func_9377'] = func_9377
mod = relay.transform.InferType()(mod)
mutated_mod['func_9377'] = func_9377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9377_call = mutated_mod.get_global_var('func_9377')
call_9378 = func_9377_call()
output = call_9378
func_9379 = relay.Function([], output)
mutated_mod['func_9379'] = func_9379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7704_call = mod.get_global_var('func_7704')
func_7705_call = mutated_mod.get_global_var('func_7705')
call_9422 = relay.TupleGetItem(func_7704_call(), 0)
call_9423 = relay.TupleGetItem(func_7705_call(), 0)
func_1002_call = mod.get_global_var('func_1002')
func_1006_call = mutated_mod.get_global_var('func_1006')
const_9434 = relay.const([False,True,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True], dtype = "bool")#candidate|9434|(1014,)|const|bool
call_9433 = func_1002_call(relay.reshape(const_9434.astype('bool'), [6, 13, 13]), relay.reshape(const_9434.astype('bool'), [6, 13, 13]), )
call_9435 = func_1002_call(relay.reshape(const_9434.astype('bool'), [6, 13, 13]), relay.reshape(const_9434.astype('bool'), [6, 13, 13]), )
func_8876_call = mod.get_global_var('func_8876')
func_8878_call = mutated_mod.get_global_var('func_8878')
call_9436 = relay.TupleGetItem(func_8876_call(), 0)
call_9437 = relay.TupleGetItem(func_8878_call(), 0)
func_8827_call = mod.get_global_var('func_8827')
func_8828_call = mutated_mod.get_global_var('func_8828')
call_9439 = relay.TupleGetItem(func_8827_call(), 0)
call_9440 = relay.TupleGetItem(func_8828_call(), 0)
output = relay.Tuple([call_9422,call_9433,const_9434,call_9436,call_9439,])
output2 = relay.Tuple([call_9423,call_9435,const_9434,call_9437,call_9440,])
func_9450 = relay.Function([], output)
mod['func_9450'] = func_9450
mod = relay.transform.InferType()(mod)
output = func_9450()
func_9451 = relay.Function([], output)
mutated_mod['func_9451'] = func_9451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9377_call = mod.get_global_var('func_9377')
func_9379_call = mutated_mod.get_global_var('func_9379')
call_9454 = relay.TupleGetItem(func_9377_call(), 0)
call_9455 = relay.TupleGetItem(func_9379_call(), 0)
output = call_9454
output2 = call_9455
func_9462 = relay.Function([], output)
mod['func_9462'] = func_9462
mod = relay.transform.InferType()(mod)
mutated_mod['func_9462'] = func_9462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9462_call = mutated_mod.get_global_var('func_9462')
call_9463 = func_9462_call()
output = call_9463
func_9464 = relay.Function([], output)
mutated_mod['func_9464'] = func_9464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mod.get_global_var('func_7948')
func_7950_call = mutated_mod.get_global_var('func_7950')
call_9469 = func_7948_call()
call_9470 = func_7948_call()
func_127_call = mod.get_global_var('func_127')
func_129_call = mutated_mod.get_global_var('func_129')
const_9482 = relay.const([6.873522,-0.813731,-9.625970,-6.533552,-7.754780,-2.043696,-6.579655,8.195295,-0.829327,-7.488044,1.780500,-9.467395,9.651795,1.708242,-3.961454,-2.261008,4.285200,-1.511959,4.673277,-5.347589,1.037894,-7.699794,-0.732753,-5.274645,-2.717928,5.368543,8.406045,-6.724636,-7.433119,7.348971,-3.915630,-3.507748,7.559835,4.915610,3.649637,-4.807967,-7.327630,-9.431279,-8.789085,3.506805,0.371289,-2.258950,5.839347,6.234464,3.678030,-4.931813,-7.939196,5.249935,3.285176,-1.459566,3.624539,-0.019246,-2.007338,-8.191270,5.271847,7.802474,-5.402830,0.062552,-9.895661,5.746205,-7.829768,0.665631,-4.949561,-3.390212,8.851208,-9.618428,4.240356,5.557004,9.915181,-2.795413,5.312027,4.153525,-9.687416,4.809992,3.767012,-3.561046,8.811228,6.300283,-0.064041,3.431428,-8.972536,-9.650368,-6.499631,4.337066,3.719774,-4.381380,-0.217028,-8.092964,5.184383,8.803096,-1.673455,-7.436807,-4.897617,8.480362,3.247499,-5.949088,-2.180913,5.914218,-4.994706,-2.155332,-8.382197,9.004253,-0.615787,0.954839,2.616918,1.631900,-3.672614,2.900977,7.368033,-9.434876,-8.720683,-4.409998,4.892276,2.423967,6.283797,-3.238314,7.611670,-7.667723,6.847334,3.380641,-5.314294,0.532584,-3.774079,7.009109,0.542127,-0.113343,5.065364,5.664244,-3.461173,-2.169838,-2.832497,4.239246,-3.695429,-7.982084,-3.483530,6.879477,-2.951085,6.104432,1.051506,-3.916592,-1.477241,-9.358916,3.059178,9.006195,3.087406,1.593503,-1.993296,4.554027,-6.111636,-3.631801,5.918530,-4.274294,-7.682300,-3.236433,-1.389666,0.763503,7.916345,-7.191599,0.244190,-6.356726,-8.833873,-8.555765,-8.479939,0.969217,0.598703,8.988497,7.448213,-6.540438,-7.806808,-3.804265,6.120373,7.013854,9.290117,-2.449520,1.435179,2.311034,-6.640450,-5.431545,6.591203,-8.543233,-4.527910,6.574793,4.473709,7.294004,-8.824518,-9.873896,7.916331,-7.825891,-9.231721,2.782622,2.877332,1.790173,3.864809,8.303802,5.890069,5.115997,0.553426,-6.824733,6.064283,-6.344165,4.016803,4.021835,0.499520,2.177392,-0.615534,9.731498,-2.935578,-2.083184,9.409947,-7.571266,5.366842,-1.316833,4.263523,0.085976,-1.274198,-4.042874,-8.867182,0.771211,-8.696027,1.790760,2.811123,-4.219237,2.468188,9.077811,-1.672287,-7.669093,-3.662827,0.194706,3.593422,-7.591448,-9.264700,3.088060,-9.794662,-8.465751,2.394398,-3.610572,2.140791,-5.570560,1.395659,7.896889,-0.471039,3.608740,-2.302298,-6.908926,2.340252,3.835557,0.179488,-2.536571,9.939535,-8.151469,8.718706,-4.982025,-4.512140,0.779601,-8.315763,4.561948,-8.758962,4.206390,6.647918,-9.845623,-1.590209,9.056257,-1.299871,-3.619350,-8.454627,7.429398,7.093995,-3.538222,-6.847385,6.440530,-1.370846,4.942401,8.337703,0.902465,-7.701725,7.998548,-0.388354,6.987019,-8.249319,-5.675548,-8.736854,-2.739028,5.415691,9.692014,2.696653,8.053246,-4.803514,-3.645181,1.719288,-9.039546,-0.284845,3.564181,-3.637089,3.176301,-5.316644,-5.760667,1.819751,-4.005664,1.162294,4.512788,-5.083683,2.462758,8.985009,-6.280145,2.657125,0.448669,-8.084311,-7.732275,3.847595,5.676670,-9.066971,-4.253932,9.333482,-6.381604,7.268701,9.735488,-7.567579,-1.107252,-3.665977,2.051158,8.711477,0.863312,5.690111,5.087908,-0.160207,-5.136050,-2.994918,-1.622729,8.345077,-1.183408,-5.927100,-5.629568,-6.975690,3.401884,8.655321,6.583814,8.024405,-4.001858,-0.360666,8.344680,-9.519196,9.222719,-9.544476,-1.552906,5.596449,-2.695913,-0.757549,-0.229666,1.604906,-2.733501,-2.033227,-1.698234,-9.909221,-1.813488,-5.747309,7.192142,9.204504,5.716521,9.107365,5.842319,-2.019160,-6.922698,-3.720872,-6.509045,-5.722856,-2.599208,-4.971377,-0.662554,3.991876,0.084474,-8.638319,2.745895,-9.948198,-1.939288,-7.295017,-8.701165,3.428069,-0.989775,8.800725,-5.522895,3.247275,6.756067,7.513800,-6.411399,-7.070708,-7.874124,0.766748,7.713820,-6.493517,4.791042,3.584267,6.145686,-6.381866,5.840517,-0.889909,-9.527512,-6.795100,6.458817,5.858834,8.979960,-5.404958,0.548625,8.932668,3.382194,-8.734031,-4.054500,-2.025991,-8.376698,1.345790,-6.575556,8.377966,2.171224,-9.063773,4.093460,7.797980,-5.973509,-6.133145,1.232738,-9.929994,8.110033,2.013527,-2.652134,-6.695592,-6.438408,-5.552826,5.483355,5.619096,-0.099977,-6.550330,-3.177000,-2.261333,4.391871,-2.707111,-7.530291,1.328458,1.041244,8.354728,-5.304285,-2.058363,-9.612093,4.307177,5.165307,-1.070678,8.646693,6.544482,-7.650434,-6.877630,1.714165,-4.278667,3.035629,1.612265,-5.317325,-9.877742,-9.969606,-5.517195,-7.729929,3.719283,-6.098410,2.647355,-2.353273,2.720603,-9.010287,-8.054443,-3.280588,3.412195,-5.969723,-3.281989,5.703510], dtype = "float64")#candidate|9482|(468,)|const|float64
call_9481 = relay.TupleGetItem(func_127_call(relay.reshape(const_9482.astype('float64'), [468,])), 3)
call_9483 = relay.TupleGetItem(func_129_call(relay.reshape(const_9482.astype('float64'), [468,])), 3)
var_9485 = relay.var("var_9485", dtype = "float64", shape = (16, 10, 14))#candidate|9485|(16, 10, 14)|var|float64
bop_9486 = relay.logical_or(call_9469.astype('bool'), var_9485.astype('bool')) # shape=(16, 10, 14)
bop_9489 = relay.logical_or(call_9470.astype('bool'), var_9485.astype('bool')) # shape=(16, 10, 14)
func_4771_call = mod.get_global_var('func_4771')
func_4774_call = mutated_mod.get_global_var('func_4774')
var_9493 = relay.var("var_9493", dtype = "float64", shape = (180,))#candidate|9493|(180,)|var|float64
var_9494 = relay.var("var_9494", dtype = "float32", shape = (5, 63))#candidate|9494|(5, 63)|var|float32
call_9492 = relay.TupleGetItem(func_4771_call(relay.reshape(var_9493.astype('float64'), [12, 3, 5]), relay.reshape(var_9494.astype('float32'), [105, 3]), ), 0)
call_9495 = relay.TupleGetItem(func_4774_call(relay.reshape(var_9493.astype('float64'), [12, 3, 5]), relay.reshape(var_9494.astype('float32'), [105, 3]), ), 0)
output = relay.Tuple([call_9481,const_9482,bop_9486,call_9492,var_9493,var_9494,])
output2 = relay.Tuple([call_9483,const_9482,bop_9489,call_9495,var_9493,var_9494,])
func_9499 = relay.Function([var_9485,var_9493,var_9494,], output)
mod['func_9499'] = func_9499
mod = relay.transform.InferType()(mod)
var_9500 = relay.var("var_9500", dtype = "float64", shape = (16, 10, 14))#candidate|9500|(16, 10, 14)|var|float64
var_9501 = relay.var("var_9501", dtype = "float64", shape = (180,))#candidate|9501|(180,)|var|float64
var_9502 = relay.var("var_9502", dtype = "float32", shape = (5, 63))#candidate|9502|(5, 63)|var|float32
output = func_9499(var_9500,var_9501,var_9502,)
func_9503 = relay.Function([var_9500,var_9501,var_9502,], output)
mutated_mod['func_9503'] = func_9503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7948_call = mod.get_global_var('func_7948')
func_7950_call = mutated_mod.get_global_var('func_7950')
call_9534 = func_7948_call()
call_9535 = func_7948_call()
output = call_9534
output2 = call_9535
func_9542 = relay.Function([], output)
mod['func_9542'] = func_9542
mod = relay.transform.InferType()(mod)
output = func_9542()
func_9543 = relay.Function([], output)
mutated_mod['func_9543'] = func_9543
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9597 = relay.var("var_9597", dtype = "float32", shape = (1, 6, 3))#candidate|9597|(1, 6, 3)|var|float32
uop_9598 = relay.log(var_9597.astype('float32')) # shape=(1, 6, 3)
func_6011_call = mod.get_global_var('func_6011')
func_6017_call = mutated_mod.get_global_var('func_6017')
const_9614 = relay.const(-7.140008, dtype = "float32")#candidate|9614|()|const|float32
const_9615 = relay.const([2,-8,-2,3,-9,-8,-6,8,2,10,-6,-3,7,8,8,-2,5,-1,10,-8,-4,3,5,-7,1,6,6,6,-5,7,-10,-4,-10,3,6,10,10,-9,5,1,3,5,9,5,8,7,-5,-4,-5,-7,-8,2,-10,-2,7,3,3,3,9,-5,-4,-6,5,-3,9,-5,7,-7,-8,-2,-4,-9,2,8,10,10,-8,-2,-10,-5,-5,8,-8,10,3,3,8,-4,-3,-2,6,6,2,-8,3,1,-6,1,-3,-9,3,-4,5,-1,-10,1,9,-1,7,1,-3,-9,1,-2,-3,1,-7,8,2,-10,4,-8,1,2,-9,8,-5,-2,9,1,6,-7,-6,5,-4,-10,-10,-9,-8,-9,-6,-10,7,9,7,-7,3,-6,-9,-9,-9,1,-7,-10,-3,-5,-9,-2,-8,-10,1,8,1,5,6,-5,2,6,-8,8,7,-2,8,-3,-5,9,-10,1,10,5,9,5,-6,3,-5,-9,2,-9,5,7,4,-7,-3,-10,-4,3,5,-5,6,6,8,-6,-7,3,8,4,-5,10,1,3,5,1,3,-10,3,-10,1,3,4,10,3,-6,6,6,-6,-5,4,-2,1,6,9,-6,4,10,5,-2,3,9,-3,-9,6,1,-9,9,-6,5,-10,10,2,6,10,-8,-3,4,-5,-7,8,-3,3,-6,-6,6,2,4,6,1,-7,8,-9,-7,7,7,2,-2,-3,-3,1,-9,-5,-9,2,-6,-1,8,-7,6,9,-9,3,-3,10,-7,7,-4,-8,5,2,-8,6,-5,-1,6,2,10,-7,-4,-2,5,-5,-2,-1,3,-10,6,-7,8,-2,9,-2,-1,-5,-5,6,-4,1,5,7,-5,1,3,-2,7,7,-10,-8,-7,8,9,4,-8,-1,6,3,5,3,-1,8,3,-7,-6,5,-7,7,-8,1,-5,9,2,-3,5,4,-2,-5,8,7,-8,-7,-7,2,5,-1,8,4,-3,7,-2,3,3,-9,1,-5,10,7,8,3,5,-6,4,-2,-6,5,2,-3,8,-6,-10,2,-4,-7,8,-8,2,5,3,-4,-10,6,-9,-7,-1,-7,-5,-10,8,3,-7,-1,4,-6,-5,3,-1,5,8,-8,4,-9,-6,10,-8,2,-2,6,-8,3,5,9,5,-8,6,3,5,1,-4,-7,-3,-8,3,3,6,-5,1,9,-7,-10,-6,5,4,-3,6,-1,-1,6,-4,-5,4,-3,3,-1,-10,-3,6,10,-5,-10,-4,-2,1,9,6,6,-4,-4,-3,-7,-8,1,-2,3,5,10,4,4,-1,-1,-9,-6,-9,1,-5,-7,3,-6,1,2,-3,-5,6,4,-4,-4,-3,-9,-3,2,-3,3,-9,10,-10,-5,-7,-2,10,10,-9,9,7,4,-10,-9,5,8,-1,-3,-3,4,9,-2,-9,2,-9,2,1,-7,2,6,6,-3,-4,-5,-5,6,-4,2,3,3,-7,9,9,-10,1,-8,2,3,-8,-5,-9,6,1,7,1,7,3,5,1,-2,-3,-9,-4,3,3,6,8,5,1,5,-10,-10,-6,6,4,10,-2,2,-3,7,-4,-8,-6,-4,-5,-1,-1,1,-9,7,-6,-9,-9,-2,10,8,4,-6,9,9,1,10,-2,9,7,-5,6,1,6,6,5,-10,2,-1,-8,-6,2,-10,8,-8,-7,9,-6,9,-2,-2,10,5,-9,-2,9,-5,5,-5,-7,9,-5,-9,7,-7,-2,-7,10,-2,-10,-6,-4,8,-10,-4,8,-3,2,-6,-8,7,1,-2,-7,9,-3,-6,8,8,-1,-5,6,1,-7,-4,-1,9,-8,-4,7,4,-8,7,-8,-4,-7,-7,-6,-10,7,-2,-8,2,-1,-1,-10,10,-7,6,4,-4,10,6,10,-2,2,9,4,6,-8,8,3,-7,-7,-6,2,3,-1,-7,7,-2,-3,6,2,5,-8,1,-10,-2,9,7,-9,-1,-1,5,-8,-4,-8,10,-2,-4,-9,4,1,-6,5,10,-4,-8,1,-1,-10,2,5,10,7,2,8,5,3,2,3,-3,4,1,5,-4,9,5,-8,-3,-10,10,10,-1,-7,10,4,-8,-7,6,3,10,-6,5,-9,-10,3,9,7,8,-3,-3,-4,-7,-10,-6,3,-2,-9,4,5,-9,3,-4,9,2,2,9,8,8,9,10,10,-2,1,10,-9,6,8,2,-2,9,2,2,6,-8,4,10,2,-6,7,8,-5,-7,4,2,4,2,1,-5,-3,-3,-1,-2,4,-5,-6,-8,5,5,7,-7,-9,8,-2,7,8,-2,-3,-1,4,2,6,10,7,3,3,8,9,-1,1,-6,-8,-7,5,-9,-3,-9,-1,2,-6,-4,7,2,8,-8,-1,-7,5,9,-3,10,-7,6,-10,6,5,9,-1,-9,4,9,4,-2,1,8,8,-1,9,-1,-6,-8,-6,-3,6,6,-9,-5,1,1,-9,-8,-9,1,4,6,10,1,1,-3,-5,-6,1,7,-9,6,9,4,-10,-5,-7,-6,-5,3,2,2,4,-2,-1,9,-9,-5,-8,8,4,-4,-4,-9,7,6,7,-7,-8,-8,-1,-9,5,-1,-5,-2,-2,-1,7,7,2,-5,3,-2,2,10,-10,-4,-4,-7,-3,7,5,4,-8,8,-6,10,5,-10,5,-8,10,-9,8,3,-5,9,-8,2,5,5,2,-1,-7,-4,3,-7,-6,7,-4,-7,1,-1,-8,5,4,5,3,-3,-10,-3,8,8,-8,-10,-7,1,1,-7,4,4,-1,-4,-8,-7,3,-1,-1,5,-6,-10,-1,1,3,-3,-1,5,-8,8,-3,4,6,6,-4,7,-7,-1,9,10,-1,9,10,3,2,-5,4,-2,3,-8,-3,9,3,8,-3,4,-3,-3,10,2,5,8,5,2,9,6,-6,-2,4,-10,10,10,-10,6,-9,1,-6,-7,-10,10,2,1,-3,-6,-3,-4,4,-4,-9,6,1,-3,-8,-7,-1,8,-4,-1,4,-4,6,9,3,6,-6,-9,-10,3,7,6,6,3,-5,-7,-4,5,8,-1,7,-3,10,1,8,-7,3,-5,9,1,2,4,-8,5,-5,6,-4,7,5,-3,10,-10,-3,-4,-4,-10,-10,2,5,3,-6,2,-2,-5,6,1,-9,-1,-9,7,-7,-10,3,-4,-1,-8,7,-10,-8,-5,-4,2,-1,-6,-9,4,1,-4,7,-3,-6,7,9,-2,2,-3,6,-8,10,7,-6,-5,6,1,7,2,-5,7,-4,-2,6,1,-3,-9,2,2,9,-6,7,6,3,9,7,-3,3,-7,3,1,10,8,-5,1,8,-9,-7,10,5,10,-5,4,2,-7,1,10,-5,3,-1,-4,-4,-5,-9,2,4,7,7,-7,3,6,9,5,-6,-6,5,-5,4,-7,-5,-9,3,6,7,10,7,-2,-2,2,7,7,1,-10,-2,-10,-8,-5,6,10,7,1,-4,2,-4,-5,6,5,-4,2,4,4,-4,-2,4,-4,-1,-9,-10,4,7,6,-1,-9,-8,2,5,-5,-7,-9,-10,-4,-10,10,3,-5,-3,-4,-6,9,7,7,9,3,10,9,-7,-4,7,6,-8,-2,5,-7,-10,4,-8,-9,2,5,6,-3,6,-7,-3,-2,-7,4,-10,-3,-7,-8,-10,4,-1,-6,-10,7,8,8,10,-2,6,-10,-7,7,-2,9,-5,3,-9,-2,-10,6,6,1,5,2,-9,8,-7,-10,-3,10,3,4,4,2,7,-4,-1,7,-8,9,-5,-5,-5,9,5,6,3,-1,-5,1,-10,-3,1,9,2,9,5,10,-1,8,8,-6,-3,10,-10,10,-7,1,6,7,7,7,-2,-4,6,8,5,7,-3,-7,-7,10,-3,-1,-10,9,6,9,-3,-8,-4,-4,-4,-10,7,9,6,7,-2,-10,-9,-10,-7,1,-2,10,9,7,-5,10,4,-6,-1,-2,1,5,-3,5,4,9,-8,1,2,-3,-5,-1,-4,-3,-9,-6,-9,2,-6,3,6,-5,2,2,-4,-3,7,1,-10,-6,9,3,5,-3,4,-10,-7,-3,-10,5,1,4,3,-1,8,-3,-1,9,2,6,6,-6,-10,-4,-5,2,-8,-4,-10,5,2,8,-6,9,7,-4,1,9,-9,10,3,-10,8,1,10,-9,4,8,-4,-8,2,5,-3,3,-9], dtype = "uint8")#candidate|9615|(1584,)|const|uint8
var_9616 = relay.var("var_9616", dtype = "bool", shape = (507, 2))#candidate|9616|(507, 2)|var|bool
const_9617 = relay.const([-1.721535,2.004492,-8.932821,-6.117094,-3.205064,-0.695477,3.847379,4.998123,6.025616,4.727381,-3.865920,-1.404815,-1.460074,-6.817069,1.215515,-2.121273,5.094812,6.159119,-1.657008,9.660461,3.087451,9.440900,6.683086,-6.434100,-9.113254,-5.298826,5.305930,4.491810,-9.428380,4.338173,4.147854,5.221588,5.479981,-4.522353,-5.121692,-2.250136,-8.987783,-4.766486,5.981960,-3.901047,-7.802354,-1.770353,5.681635,-7.175276,9.259832,7.513490,5.495694,-4.358570,7.621185,-2.131986,-4.302677,-8.079731,9.485641,1.387855,8.744129,-2.118245,-2.029300,7.572789,-0.806709,2.993752,6.110145,-5.892790,9.588376,2.419329,-8.344955,1.260868,-8.175980,7.600208,-3.604664,-2.159020,-4.640931,-4.581390,-5.968441,3.065300,0.806294,-9.218505,0.181630,0.005269,5.849756,-2.952594,-6.495796,5.067202,0.084682,-0.209964,6.219710,9.824346,0.149218,-2.101409,3.496652,-1.781075,8.345099,4.545185,-3.069210,9.378177,2.137750,6.105003,3.395713,-9.416356,9.853398,9.893641,-4.780221,-9.555561,-7.729716,9.551422,-0.401319,-0.543921,-5.771545,7.602492,-6.115767,5.241163,-5.158374,3.450121,2.450351,-6.904076,3.825505,7.100923,-9.167671,8.412492,-8.286467,-0.001750,0.606097,-3.025246,-5.495172,-9.944996,2.415612,-1.604236,-8.117447,2.463401,9.370360,-8.047407,0.993580,-3.786986,0.579498,-4.439977,-4.343347,9.314515,1.716492,-4.808493,6.359820,-3.939580,-9.652060,-6.857277,5.621868,-8.233205,0.316577,7.631858,-0.222144,-2.075066,4.736080,9.272479,2.388637,7.596305,3.605743,-8.476343,-3.641681,5.599562,0.708142,5.300821,2.817621,3.504154,-6.098852,-4.013786,4.887827,6.922974,0.533645,-8.537397,6.380106,-3.194778,5.009134,0.431837,7.797724,-6.204801,-1.480984,5.372544,4.130568,-1.688947,7.227171,-4.698580,2.522811,-7.208635,3.615979,8.413132,-5.944909,7.976257,-7.259839,-3.549331,3.495133,-6.838159,-5.911275,5.981620,-8.506613,-9.386809,-1.498290,-9.378028,-6.247859,3.024585,-0.779651,-8.662342,-0.519686,-9.580918,-5.597735,-9.306278,-2.296873,2.374790,4.917392,-2.677794,-2.312630,0.484951,-1.651505,-3.424467,-0.421823,-0.017157,-4.357449,-8.631951,-8.609653,1.893105,4.890574,-0.002387,-0.839337,-5.826032,-7.876858,1.836634,9.724695,-8.341719,2.263072,-1.583834,-7.824919,-6.994285,3.999455,5.749600,8.854231,-4.667174,-7.856459,-7.145187,-8.385955,-8.563899,-4.718226,9.055395,1.417769,9.435497,-9.315989,-9.929620,-9.063953,4.793829,1.539776,4.474193,3.112870,4.888724,-3.413734,-7.830863,5.818093,1.053629,4.663892,6.232107,-7.529939,8.554483,5.116746,8.536479,-6.409205,0.484532,8.749190,-1.649098,8.855495,9.641130,-2.647356,-7.764127,-8.277595,4.821356,4.539745,-6.450677,2.190155,-9.023944,-0.868049,-8.717678,6.981017,-0.823607,-9.467130,3.437437,6.016269,9.629578,8.135039,0.320137,0.132808,9.134796,4.264436,2.608764,4.081737,3.507558,3.093615,-5.656180,-5.499810,-7.258736,3.309706,-0.231853,-0.201273,-6.328149,2.368787,6.919042,-1.625385,6.051619,5.965985,-9.244802,6.498527,-5.343349,0.928754,1.810331,8.385916,-4.603618,1.441811,1.160287,-1.481501,3.953256,3.029726,9.388111,0.688700,-8.153818,7.496410,8.676553,-3.916394,1.393327,-6.473381,3.414007,-7.058428,4.598594,-6.236882,6.057797,-9.078533,0.765729,-9.897953,-0.403769,5.317992,-3.871159,7.015042,3.536513,5.866965,-9.455881,0.832460,8.950185,5.326826,-3.122691,-9.237256,2.500946,-7.345782,-8.155241,0.638602,6.888570,4.936614,9.622019,8.207061,8.425984,5.420231,6.694958,4.179935,0.588303,6.899615,0.440989,4.042646,-3.730371,2.384738,-2.627174,3.159445,0.223527,6.703903,-7.370015,-3.364471,1.028741,4.002571,-9.746399,-9.622096,0.508101,1.567543,6.294157,7.258410,0.373830,-4.909981,3.788963,5.333043,9.642878,9.384920,0.035647,6.437062,-2.761248,0.682446,3.071908,-7.159349,7.683124,1.876555,-8.741803,8.228542,7.454889,-3.800978,3.458263,-7.033810,-4.792422,-7.992027,3.629814,2.996665,-9.266322,-8.505417,-9.344380,7.494272,2.895154,-7.006772,5.984365,5.179395,1.839165,-2.914665,2.748124,5.582165,-2.265090,7.844573,8.824967,1.432359,-7.259884,-5.379271,-8.032190,-2.275294,-7.628554,-6.273184,-4.808957,6.836104,6.400168,2.200492,-4.301968,-2.124532,-7.732388,-9.275736,-7.760839,-8.932532,5.353616,2.391477,-1.840098,1.279133,-6.314168,-2.920048,7.373201,2.319284,1.243951,4.793105,7.968785,5.567591,-5.706308,-9.564597,9.807114,7.731489,0.239932,6.130482,-2.880794,-4.105055,-6.274312,-5.702609,-0.654357,-2.288128,-1.692029,9.466548,5.983285,7.824788,-6.903321,2.641533,-1.656076,0.030914,9.711573,4.591089,5.117844,5.757803,3.744007,-4.924726,4.282114,6.171367,-1.345367,1.724546,8.129259,2.312308,-4.803399,-7.763631,2.892585,-4.337253,-4.312884,7.030428,-5.545465,1.143858,-2.343583,6.618401,-7.345482,7.938184,-9.838586,-3.160778,1.071887,2.458926,-3.618711,7.610979,5.025929,4.822440,4.770584,-5.941672,8.026032,7.082261,3.169590,8.110186,-1.301199,-2.188866,6.651214,-8.720515,2.154525,3.884525,3.763228,2.925733,-9.094307,-0.917022,0.144050,3.168394,-8.502932,-1.371782,-6.314031,1.525409,-4.668226,8.590971,9.987529,4.162257,3.382696,-3.607587,5.733308,-9.156116,-1.180796,4.630152,7.717542,-7.948477,-4.221497,2.993347,-7.763828,2.210557,-0.442335,9.203331,-2.121460,-0.555397,8.617088,3.273172,4.296889,-9.156124,-3.469893,9.721840,8.997230,-4.891173,9.391353,-2.106148,-7.863480,-2.841780,-8.483279,-5.946835,-1.167863,-4.800164,-8.411314,-0.485567,5.605589,3.334595,8.171247,6.886579,0.631002,-6.071954,7.309482], dtype = "float64")#candidate|9617|(560,)|const|float64
var_9618 = relay.var("var_9618", dtype = "float64", shape = (234, 2))#candidate|9618|(234, 2)|var|float64
call_9613 = relay.TupleGetItem(func_6011_call(relay.reshape(const_9614.astype('float32'), []), relay.reshape(const_9615.astype('uint8'), [1584,]), relay.reshape(var_9616.astype('bool'), [1014, 1]), relay.reshape(const_9617.astype('float64'), [1, 560]), relay.reshape(var_9618.astype('float64'), [468, 1]), ), 12)
call_9619 = relay.TupleGetItem(func_6017_call(relay.reshape(const_9614.astype('float32'), []), relay.reshape(const_9615.astype('uint8'), [1584,]), relay.reshape(var_9616.astype('bool'), [1014, 1]), relay.reshape(const_9617.astype('float64'), [1, 560]), relay.reshape(var_9618.astype('float64'), [468, 1]), ), 12)
func_8264_call = mod.get_global_var('func_8264')
func_8265_call = mutated_mod.get_global_var('func_8265')
call_9626 = relay.TupleGetItem(func_8264_call(), 0)
call_9627 = relay.TupleGetItem(func_8265_call(), 0)
func_3270_call = mod.get_global_var('func_3270')
func_3272_call = mutated_mod.get_global_var('func_3272')
call_9634 = relay.TupleGetItem(func_3270_call(relay.reshape(call_9613.astype('float64'), [1176,])), 2)
call_9635 = relay.TupleGetItem(func_3272_call(relay.reshape(call_9613.astype('float64'), [1176,])), 2)
func_4613_call = mod.get_global_var('func_4613')
func_4615_call = mutated_mod.get_global_var('func_4615')
const_9637 = relay.const([-3.698359,-8.483681,1.400437,5.881737,-1.536822,2.416341,3.110113,1.992734,1.422740,-6.808484,0.559059,-6.118551,-9.487373,-1.244510,1.291556,9.686775,-9.456741,4.242868,6.780759,-5.461272,4.182910,-9.806683,-2.304122,0.650466,-6.930895,6.408932,1.711006,1.574832,-7.419588,2.344245,-3.596503,7.948356,-7.622320,-1.395254,8.416438,6.441827,-3.824387,9.737327,8.347160,2.949044,-5.300465,-4.784081,-9.897767,4.057050,8.701169,-5.028550,1.471032,-8.215497,-4.695657,3.961047,7.455463,-0.919845,1.213483,-2.427505,3.238455,-8.956207,-5.559352,1.456894,-8.089400,3.287190,9.612752,-8.103931,2.789650,-5.212940,5.076248,8.764466,4.538539,2.661094,0.874122,9.637186,6.721265,-2.290296,-6.865089,-3.344599,-7.404535,-9.862763,0.095075,-9.388986,0.117579,-5.496056,3.352062,-0.455450,6.382085,1.006077,4.396560,9.248093,-4.614901,5.226870,3.292292,4.975812,4.690029,3.299676,-9.967374,-1.955568,4.035148,1.056716,-3.606186,0.477835,9.516815,2.910919,0.156544,3.333519,-4.723464,5.013393,-0.434177,-4.462148,-3.740769,-4.324242,9.553661,1.494238,8.939308,6.362912,-1.946645,4.214666,8.660684,-2.228551,-4.810931,-4.844149,-7.684671,-6.585231,3.922518,2.522760,2.240037,-4.411283,-6.225744,2.572529,-0.210855,5.712053,1.219861,-5.485238,1.500621,3.514717,-2.296466,8.327134,9.977034,5.526666,-9.220854,1.951066,-5.205274,-1.281720,2.876790,-9.064963,0.364430,-3.484148,9.403426,0.681059,7.693020,-0.761726,5.785653,3.877557,0.808801,3.396084,9.637660,9.882051,-2.843206,-3.959673,3.074663,-5.512247,-7.502741,0.179937,3.591111,9.119626,-9.811578,4.218175,9.191862,-4.677791,4.156523,-8.266647,-3.945375,4.294077,3.207735,-2.186524,-5.179443,6.450738,0.797505,-3.543564,-4.049837,-0.152039,5.598374,-4.504432,-7.158355,-0.350281,-6.256009,-3.262221,-9.830950,4.789155,5.760687,6.347359,-8.799733,-4.974094,5.482597,7.353820,-3.087045,-0.778610,4.905456,-9.448939,-0.572325,7.519786,2.235302,5.912790,2.871614,-9.929067,3.051874,4.991854,-5.250786,0.929691,-2.404900,7.799658,-7.577200,5.794038,-9.809157,0.395448,-8.266214,1.929596,-1.133196,0.508995,-7.227032,-2.969755,6.043329,9.002819,-4.017010,-7.997119,4.449904,6.946984,5.048823,4.359989,8.346307,-6.040950,-0.139800,4.017416,6.388914,-8.687263,-4.064634,4.691922,-3.123933,-2.626047,0.647656,-2.744248,-3.739315,5.770018,-6.841280,-0.774628,0.039814,9.278720,-7.254433,1.957688,2.721255,6.680825,-9.115165,-1.627641,-3.943077,4.278868,8.834795,-2.437469,-9.372076,5.934106,1.938896,-4.729268,1.719675,-0.357398,-5.757560,9.296714,5.420710,-6.538333,5.001380,0.141502,3.523314,0.462710,-5.673559,-1.498794,6.789000,3.397661,7.070740,-0.879591,4.261295,7.360131,-2.969336,6.474423,0.518326,2.081809,-2.253760,-5.036485,-0.663476,-3.736380,-1.456529,5.752369,1.049951,-2.885190,-7.622604,4.966120,0.087213,9.174087,5.104590,2.265658,-3.216833,7.550067,3.416798,-0.305669,1.779398,-8.323216,-3.275029,-3.568603,-1.422372,-8.903950,8.560675,-6.894230,-5.927307,-4.480947,1.213447,1.464195,-7.326593,-6.196967,-4.857555,8.586179,-9.195814,4.710690,8.546310,-2.611160,-7.287532,-6.473631,-6.221421,-8.231160,1.537386,-2.570091,4.436706,-4.990341,-6.014523,1.324587,-7.778176,-7.135741,3.061989,7.784276,7.651797,-4.962374,-3.179342,2.864143,-0.494537,-1.129636,-9.154190,-3.080710,-3.533098,-3.588631,6.240877,3.832945,-1.127014,-4.925826,-2.332578,7.909490,8.428797,3.478088,-8.235794,-6.899643,1.477902,-5.212941,5.818100,6.884001,-8.498759,-3.897469,5.002694,9.687583,-7.927420,4.348034,5.950982,-4.624157,5.724216,-6.608148,4.189795,-2.733792,0.293571,-7.557561,1.388349,-0.232959,8.070287,5.420562,2.678924,4.570458,6.025576,-9.221015,7.932812,6.558943,-7.445981,-1.800888,5.122107,-6.317954,-4.554021,7.643782,-1.177650,7.563723,8.726128,9.934002,2.925813,-2.796898,1.901974,4.970882,1.576978,3.194623,-0.171273,3.093681,-7.719720,1.527086,0.153851,-0.333261,-7.041331,0.615679,9.812017,-3.852268,0.115439,3.145132,1.231784,9.955109,7.031020,8.397125,6.667424,3.945077,-1.798117,-7.467424,-9.256567,-1.175873,-7.177570,-2.720636,-9.330780,-9.738279,7.713026,-7.657765,-4.030702,5.315079,0.860632,2.008961,-9.685177,-5.798586,1.457066,-0.528386,-6.413543,0.586807,-2.678622,-6.536213,-0.058846,3.970110,-1.754330,2.409518,3.636215,-6.278512,8.956411,1.484354,8.986833,-5.077537,-8.260941,-3.576878,1.846924,2.921381,2.802042,-8.604736,-1.530755,5.150786,-0.687014,6.643468,7.068825,-1.953720,-8.592855,-6.802522,1.186232,-6.624364,4.875919,-2.808116,-6.026379,6.526563,9.649402,-4.067596,0.984619,-7.852857,-8.985383,8.074055,-4.126454,-2.770108,-9.954568,-5.403582,4.744338,8.173199,2.160912,-2.524458,-8.858090,7.131870,8.568959,7.776270,7.243051,-9.093802,-0.204707,6.779529,2.000723,8.132562,6.429229,-9.135442,-6.082830,7.734325,5.256786,-3.246873,5.134290,-2.129205,8.556011,2.123264,2.004990,-9.391910,-5.054473,-6.740876,5.908994,1.424144,2.612638,3.592835,3.546656,2.391984,-0.873816,-3.759124,4.375654,1.659411,7.702441,7.631806,-3.051116,-5.477763,-1.102539,3.677420,-1.915158,-5.268688,-4.093499,7.947909,-6.765780,-4.280331,-7.289644,2.671034,5.604320,-0.117032,8.791810,-3.981634,0.864768,-9.616731,9.291190,4.158097,-0.589671,-8.579393,-6.553389,4.969719,-1.058159,1.780292,-2.607876,9.284832,1.205409,-9.071967,4.855326,2.476253,3.106618,-8.982224,7.474373,-5.066842,4.947140,-6.519455,7.915742,9.965770,7.787011,-0.949736,6.780560,-4.773924,-4.158652,5.411386,8.712165,-5.508291,6.449049,8.433773,5.796177,-3.519781,-6.862468,-6.728396,-5.907802,-9.503969,-6.483170,-8.452995,-8.055276,2.100171,0.305058,-2.964618,5.736570,-6.351987,-8.600693,5.875621,9.959907,-3.172659,-0.428646,7.643433,-1.945541,-9.512242,6.361089,-8.116783,5.960916,-9.106311,9.793781,9.086423,2.929882,2.266614,-1.577130,5.891333,-0.534266,4.613318,-6.045782,-2.140708,-6.342887,-9.900851,1.200188,5.753372,-4.733601,3.246863,8.007928,-4.912218,-9.721198,-6.034405,-0.980319,9.852756,2.434949,2.248881,2.117534,5.091468,-4.869952,4.903427,-9.401412,6.998567,-8.233784,-8.509045,0.668948,5.011809,-6.460371,-9.065495,2.053278,-3.187345,3.067642,7.864756,8.752793,-9.437083,-2.667073,4.543728,7.480587,9.912924,4.197750,4.463172,-6.733042,7.932409,-6.177704,0.268193,2.543762,-6.593476,6.171163,3.051616,-3.179891,-9.805409,-2.606271,-6.965250,-7.411799,6.916708,3.270570,6.358090,4.419750,9.399164,-4.707670,-6.006527,-9.219749,-7.303564,-0.242146,-6.544808,-3.396859,0.418011,-8.649346,-3.480289,3.874566,-9.954872,-5.394028,-7.364384,-2.019146,9.525697,-1.894633,-6.732657,-9.260461,-2.134639,4.892104,-4.164560,7.863272,-4.772256,5.611510,3.296053,-0.867210,7.329158], dtype = "float64")#candidate|9637|(686,)|const|float64
call_9636 = relay.TupleGetItem(func_4613_call(relay.reshape(const_9637.astype('float64'), [14, 7, 7])), 4)
call_9638 = relay.TupleGetItem(func_4615_call(relay.reshape(const_9637.astype('float64'), [14, 7, 7])), 4)
output = relay.Tuple([uop_9598,call_9613,const_9614,const_9615,var_9616,const_9617,var_9618,call_9626,call_9634,call_9636,const_9637,])
output2 = relay.Tuple([uop_9598,call_9619,const_9614,const_9615,var_9616,const_9617,var_9618,call_9627,call_9635,call_9638,const_9637,])
func_9661 = relay.Function([var_9597,var_9616,var_9618,], output)
mod['func_9661'] = func_9661
mod = relay.transform.InferType()(mod)
mutated_mod['func_9661'] = func_9661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9661_call = mutated_mod.get_global_var('func_9661')
var_9663 = relay.var("var_9663", dtype = "float32", shape = (1, 6, 3))#candidate|9663|(1, 6, 3)|var|float32
var_9664 = relay.var("var_9664", dtype = "bool", shape = (507, 2))#candidate|9664|(507, 2)|var|bool
var_9665 = relay.var("var_9665", dtype = "float64", shape = (234, 2))#candidate|9665|(234, 2)|var|float64
call_9662 = func_9661_call(var_9663,var_9664,var_9665,)
output = call_9662
func_9666 = relay.Function([var_9663,var_9664,var_9665,], output)
mutated_mod['func_9666'] = func_9666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9462_call = mod.get_global_var('func_9462')
func_9464_call = mutated_mod.get_global_var('func_9464')
call_9723 = func_9462_call()
call_9724 = func_9462_call()
func_5861_call = mod.get_global_var('func_5861')
func_5863_call = mutated_mod.get_global_var('func_5863')
const_9731 = relay.const([5.984603,8.746983,-1.058560,-0.561608,0.346909,4.004239,-2.478377,-5.515160,-5.028462,-1.213266,-3.920228,-8.528897,4.740151,-7.277053,-7.806576,0.768134,9.165616,-9.576926,-5.796170,0.788354,-4.507798,9.650051,-7.477995,7.482994,-6.464367,-3.528060,9.190958,6.225085,0.828489,6.175509,-5.681321,1.107452,8.219844,1.944049,8.927581,6.030858,4.974128,-2.654636,6.262354,5.896157,4.366524,-8.916873,-7.774625,2.636723,9.216683,6.815186,8.547162,6.019104,1.324345,-3.105817,-6.819363,-2.558792,-2.890856,2.131232,-0.369640,-5.566422,-6.234602,2.505176,-8.391723,-2.634235,5.826619,8.467958,8.023878,-9.450982,5.663568,7.574369,-9.123826,-7.767284,-3.245352,-5.493267,-1.151173,-5.059555,7.148918,5.836059,4.555575,-3.258771,2.249622,7.678873,-7.841806,6.239334,4.829531,0.910740,9.325398,-7.702421,1.477529,-1.196370,7.767981,-1.471659,-5.530325,-0.717778,-9.370122,2.620168,-6.671840,-0.622575,-7.044709,5.382656,-1.641441,0.268687,-9.553713,5.136081,2.966964,1.328444,-7.769710,1.978924,2.413627,-8.615505,-1.347965,3.041493,7.774304,-6.525797,-0.095910,4.765074,-0.640990,-6.362706,-7.696073,8.436058,2.856890,2.922550,-6.337094,7.782177,-0.247276,1.308545,1.634841,-0.085106,-0.142446,-0.165893,-9.032503,3.792878,-8.349055,3.315361,9.462998,-8.504207,5.356483,5.766441,4.885190,1.969896,-6.261540,-4.943819,8.331561,-7.233588,2.319661,-7.850138,-9.480940,9.200858,7.372818,-5.276458,9.322498,-5.050481,-1.724261,-4.100313,-7.078742,9.234747,2.955538,-4.773474,-8.922332,-0.615269,3.658857,9.791327,6.159048,-4.126661,8.469039,1.455992,-9.272772,7.828735,0.231755,-3.378161,9.465082,3.843697,3.854902,-1.326386,-3.489971,-9.113943,7.757680,-8.623940,-4.083127,-1.668246,0.225587,-3.245109,2.706894,-4.167957,5.417152,-8.608384,-4.723873,7.175121,8.659653,-1.343325,8.231205,8.771045,-7.159870,1.874521,-2.878645,6.754687,6.583743,2.781004,3.429974,-3.046702,-3.131692,-3.370180,-1.322661,7.176768,6.039542,7.704466,-2.675370,7.042491,-4.126802,1.310926,-1.575366,-0.947644,-0.410050,-9.737707,0.293223,-7.089016,0.520123,9.648851,2.455203,2.320834,-6.254429,8.272922,2.745457,9.597974,7.606055,7.730665,2.421672,6.709643,1.838350,-9.360063,-2.913160,2.142040,0.387744,8.176703,2.853540,8.192250,-2.887181,-2.706663,9.008751,3.777019,-1.986465,1.421178,2.745831,1.174606,-0.748676,5.832982,-6.580247,8.059620,0.861839,-3.729026,0.609160,-1.343748,-2.647277,-9.157312,8.348520,-0.201432,-8.009394,5.836415,0.653946,-5.410063,-4.193607,-3.073035,-8.484277,-0.724350,4.004174,-1.172178,-3.206776,-5.310846,6.625848,5.449870,-2.674681,-7.465560,4.641183,-5.015369,-5.999416,-4.193449,8.100249,-6.561622,-4.928637,5.009102,1.464498,2.415941,8.977005,0.172246,-2.382617,5.515096,-5.470422,9.869724,7.750081,-2.070865,-5.378373,0.885158,-4.882084,-7.944047,-4.111731,-9.623352,8.992239,-3.240288,0.047856,-9.356217,-6.708946,-1.310495,0.812832,-8.398236,-9.519727,6.294971,1.446162,-6.074390,-8.450337,8.274845,-1.891388,-0.613848,2.621540,-0.738035,-6.391813,-3.109466,-3.736279,-1.934315,-2.641438,8.877344,4.496036,4.729080,5.477899,-3.750621,-1.633102,-9.322087,7.498885,3.854614,5.278945,5.740844,-0.445324,-6.649414,1.318270,-6.223240,8.674996,-3.986305,-4.075673,-3.273570,1.767630,1.857782,-7.479173,-0.818120,8.452374,-7.400261,-4.682818,-6.119168,6.531261,3.613405,1.331111,-8.966054,8.382732,-1.280016,-7.891394,7.999474,1.781988,-5.886405,4.852047,-0.863364,-3.259042,7.116810,-1.344273,0.452991,5.416882,-3.260195,-0.302652,2.532022,0.842873,-6.834574,-7.020647,8.326449,-2.974863,1.620419,9.068403,-7.840802,-9.707294,-4.059736,-5.901457,-6.739549,-7.147517,-3.203034,5.139488,9.494275,8.407960,3.980263,3.435026,-9.960518,-0.993281,7.671807,2.704202,2.782883,-5.199282,-7.712153,2.570933,-4.828903,-8.936271,-9.099109,-7.825205,-6.652779,5.965967,-3.658256,2.477072,4.541137,-0.620723,7.046877,-9.289577,-1.695549,-6.572892,4.432594,5.536076,1.792292,1.810149,-9.737721,5.835284,1.453318,-6.770716,-0.083104,-4.011743,5.144945,-9.799549,-0.343027,0.338744,1.648794,-0.913001,2.784511,-9.259024,4.121283,-0.502068,-1.732443,-1.036628,0.561812,1.903077,-1.068179,0.788417,-5.540798,-2.647392,-6.174875,6.756136,6.894670,4.297579,-0.221867,-5.319843,9.538872,9.681133,-2.185841,2.539831,-2.770475,8.332142,4.608644,-6.931143,2.435862,-4.780453,-2.896513,0.504061,2.335260,-1.074405,5.937219,5.380828,9.394477,-4.353788,1.798472,8.405405,-6.437738,-3.327035,2.895141,6.846189,-5.124114,8.026340,-8.104830,-1.850535,9.697998,4.001612,5.644867,0.264151,3.272495,3.544810,7.642862,-6.026753,3.813658,8.223332,2.990693,2.910787,8.094205,-3.395389,-4.853229,5.251695,4.939851,-0.304704,-5.509275,7.702277,0.496160,-7.961305,-7.658777,-7.176936,2.792800,-9.068426,-3.732251,-7.242380,-4.551795,3.268218,-6.729967,-0.061382,0.005157,-0.628543,-2.136934,1.658864,-9.859056,8.679892,-3.130306,1.004287,2.770237,-7.286658,5.330436,2.521756,8.481504,-1.113836,-1.225603,7.399532,7.996771,7.025377,-6.766730,3.783447,-8.120265,3.266060,-4.382402,-9.583708,-2.899879,-2.448591,-8.557398,-2.195464,-7.665115,1.532802,6.658560,6.439733,-8.936754,9.948695,4.165808,-6.290654,8.926324,4.520901,-8.208007,1.324222,-0.710773,-2.191490,-8.743801,5.186433,-6.173080,8.705247,8.995639,-6.019021,4.271007,-9.731200,2.833991,-5.696641,-8.504448,-6.340963,4.380399,-2.817566,0.666890,-0.955844,0.824804,3.302365,-9.941870,5.008363,0.447562,-0.883828,8.765229,3.524306,2.045144,1.147625,6.131640,-1.331761,-7.482115,9.894064,4.210994,5.942765,5.875484,-6.788056,6.819356,1.567803,-5.397041,5.665100,2.644202,-6.490831,-6.937660,-4.567645,1.521725,-3.076819,7.095910,-3.638455,-1.215555,0.183044,-3.888926,1.705222,-6.559726,-9.826266,-5.899292,-2.194029,-1.273705,-4.692934,2.501436,4.887759,0.389075,-5.330465,4.941654,-9.394490,-4.740441,3.215046,4.616505,-5.267852,0.063431,-8.389955,-4.235805,6.794867,4.477370,6.819096,5.518869,-2.734127,-6.050696,0.500426,7.725045,2.324442,-8.018070,-4.202737,-3.750570,5.585468,4.406345,9.606709,-8.989564,-0.539452,8.799370,-4.927527,-5.812776,6.279567,0.278001,-6.422426,-8.091800,-9.408952,-2.280837,8.321584,7.999066,7.556465,-2.379796,-5.409309,0.850139,2.049387,-2.740479,1.979469,-8.317892,-4.288141,-6.065262,-0.213795,-2.996315,9.903023,7.199769,9.131206,5.892059,3.092647,-6.050932,-9.054410,-5.526469,-4.947079,-9.184838,-0.792284,-2.561980,-8.250518,5.962004,-1.467590,-4.954003,1.032598,-5.452514,-0.299035,5.127230,0.697802,-5.140549,7.061972,8.998599,0.395166,-4.512030,-5.413251,-8.477759,8.219139,2.566529,-3.160182,6.850808,8.269642,-3.269757,4.745094,4.479648,5.263568,-8.172563,7.608623,-2.448222,1.930569,-4.862873,-1.654810,0.632618,-6.275045,5.931869,-4.436446,-0.892596,-8.626124,6.435904,-4.432790,-5.396971,-5.283966,8.301868,7.516271,1.484273,-5.808570,-4.636402,-2.314723,-9.358487,9.565855,8.404027,-4.133302,7.707419,8.222068,-9.934976,-0.584300,5.852997,7.771197,-2.303332,4.366946,-4.982641,6.976118,-9.616480,-0.917917,-9.099803,-5.869018,0.272629,-6.327110,9.098116,0.808841,4.953758,-6.659830,8.249973,5.118484,-7.001775,4.357874,-7.058525,-8.055428,-3.557652,0.115715,-9.275279,5.177902,-9.052889,-3.190477,7.264174,7.926666,3.046472,0.616760,-7.166863,-5.614225,4.282918,3.228392,-1.630670,-0.409818,-2.298444,-3.400601,7.126875,-2.777788,1.384858,9.701053,-0.576986,5.841495,3.552080,-2.466341,-8.161778,-5.410472,-5.092486,1.300317,4.248198,-7.078109,-8.086466,-8.341463,-1.645200,7.817314,-5.087095,-8.123284,-6.805166,-0.079493,-9.641420,7.663231,-3.466423,5.888120,7.170875,9.355395,-8.487441,-5.159263,-1.363732,5.383232,1.042006,-0.544382,2.409622,-8.514167,4.203587,0.263591,-7.255669,-3.611738,0.150783,0.380819,-9.590011,6.779154,-7.874091,3.192497,4.360382,7.978829,-1.158944,-0.495016,-0.828290,0.543025,1.883241,-9.291662,3.414220,-9.121206,-3.807743,6.049608,8.340605,3.343878,-3.922601,-4.242989,4.837920,-9.779871,-1.880996,-4.469757,3.764679,-7.802714,-7.503560,-5.312732,9.444749,-8.563178,5.521121,-2.606855,4.891888,-0.321494,3.407410,5.249273,2.088034,-2.733288,-2.598102,-2.433055,-0.673215,-9.310546,0.557202,-6.816577,-2.045098,-8.163498,-7.442980,-5.503274,8.984209,6.442105,1.999321,2.718354,-1.633588,-0.130528,-7.476120,-1.390045,2.068110,-9.405762,-8.849590,7.249205,7.691303,-1.606277,1.235114,4.955397,5.274273,5.414153,6.252031,8.795016,-3.219910,-4.357734,5.920468,4.324534,-9.296743,5.602441,-9.295493,3.345561,4.907889,0.650228,-6.312689,5.802302,9.652927,-6.515275,1.557008,-1.793470,-8.425312,7.125352,0.842359,-0.742425,-3.702160,-6.802208,7.928397,-2.962577,2.948049,2.891811,1.219594,-4.246028,2.145779,1.877872,-2.341226,-1.728369,8.025732,-9.763764,-1.049099,-5.790410,9.532527,2.126342,-1.460215,0.259924,6.588547,8.164758,7.281548,5.672878,-6.500263,0.721700,-8.565569,9.939368,3.142577,-4.920936,6.558041,-5.764281,-5.582424,5.969875,-7.140306,-7.449722,1.765061,-3.798845,6.867441,1.087969,-2.491734,5.341366,-1.854944,-2.839704,-1.611099,5.919836,2.184924,-1.370775,4.259431,-9.892436,-4.595305,9.566697,-5.569206,-7.437304,3.311395,-0.363293,6.220972,-2.871389,-8.630493,2.733293,5.243553,-9.129377,7.789289,-3.548013,-1.526437,-6.265347,-4.144318,-1.963090,1.474056,-8.583039,-9.023697,-8.725724,-4.342821,4.229769,-7.955322,-9.659625,5.368578,-5.415076,5.987925,0.905562,-7.427269,0.573554,2.830524,5.516617,-7.403839,2.782812,-1.984411,-7.869425,-7.602705,-0.157131,7.636419,2.833552,4.746795,0.725649,-1.821927,2.436291,-3.451204,7.100991,-1.110833,-7.500699,8.274217,-1.238742,9.107147,-7.240358,-3.873902,-1.330172,2.457331,0.230255,-1.524533,-6.312357,5.853221,2.158555,-5.042091,-7.716273,0.646042,3.202372,-1.140445,5.806652,9.365165,-1.573979,-2.492977,9.905712,-9.577161,-4.328622,3.814386,7.427826,-6.088854,-7.658689,-1.660038,-5.178487,3.038070,-6.160408,2.736170,7.235176,0.211961,-5.004187,6.779203,-6.108586,-7.982545,-2.854850,1.152662,2.026727,-6.545181,-6.463633,-5.699176,-4.966864,-4.139203,4.394562,-1.450013,-6.641820,-6.450057,0.115654,-2.398902,3.872146,1.554522,-7.246691,-8.995925,-9.325481,5.355239,2.652892,7.792571,4.474083,-9.402514,4.188049,-6.521226,-7.650229,5.320897,-2.138179,6.080849,-6.641906,7.761261,7.284846,-0.814010,-0.104281,-8.672596,9.618044,0.860053,-5.368215,-9.275583,4.265020,9.102219,7.847223,8.961007,4.157088,-4.228025,1.791010,-0.307873,6.898582,9.744472,0.901063,2.219188,4.625792,5.619390,-8.921720,-0.147292,-7.550463,9.402287,-9.366502,9.302509,-8.149766,3.492925,4.948172,-1.140283,1.206262,-8.285998,-1.811690,6.413309,5.144631,0.694007,-5.934176,7.882127,9.121215,9.408418,7.468136,1.429333,-2.284315,-7.108280,6.143125,-9.182965,-6.007854,6.152773,-5.791503,-0.520261,1.981804,4.548907,6.108657,3.199936,5.754237,-8.673887,4.492718,-1.642341,0.842388,-3.944859,-2.986834,6.154948,7.757312,4.086798,6.032361,5.059216,6.407087,6.040333,9.827998,4.151629,4.914049,-0.426695,-5.637541,-6.610977,4.036365,-1.737866,9.748571,-3.475232,-4.228054,-5.490475,9.598952,-3.479999,-0.314443,-4.898140,-4.794285,-6.079537,3.289807,7.261879,-1.843765,0.662430,-6.152035,5.306730,0.007793,-8.591876,2.263379,-5.877089,2.079198,8.024356,-5.137268,6.176015,1.515242,-7.896629,-0.244429,-5.680186,0.900687,-6.640389,1.665887,3.436339,4.915984,-3.450675,-9.949033,-9.966342,-7.856128,2.502837,2.583203,5.941532,-8.101394,8.982869], dtype = "float64")#candidate|9731|(1176,)|const|float64
call_9730 = relay.TupleGetItem(func_5861_call(relay.reshape(const_9731.astype('float64'), [1176,])), 1)
call_9732 = relay.TupleGetItem(func_5863_call(relay.reshape(const_9731.astype('float64'), [1176,])), 1)
func_6695_call = mod.get_global_var('func_6695')
func_6696_call = mutated_mod.get_global_var('func_6696')
call_9742 = func_6695_call()
call_9743 = func_6695_call()
output = relay.Tuple([call_9723,call_9730,const_9731,call_9742,])
output2 = relay.Tuple([call_9724,call_9732,const_9731,call_9743,])
func_9745 = relay.Function([], output)
mod['func_9745'] = func_9745
mod = relay.transform.InferType()(mod)
mutated_mod['func_9745'] = func_9745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9745_call = mutated_mod.get_global_var('func_9745')
call_9746 = func_9745_call()
output = call_9746
func_9747 = relay.Function([], output)
mutated_mod['func_9747'] = func_9747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6292_call = mod.get_global_var('func_6292')
func_6294_call = mutated_mod.get_global_var('func_6294')
call_9794 = relay.TupleGetItem(func_6292_call(), 0)
call_9795 = relay.TupleGetItem(func_6294_call(), 0)
output = relay.Tuple([call_9794,])
output2 = relay.Tuple([call_9795,])
func_9798 = relay.Function([], output)
mod['func_9798'] = func_9798
mod = relay.transform.InferType()(mod)
mutated_mod['func_9798'] = func_9798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9798_call = mutated_mod.get_global_var('func_9798')
call_9799 = func_9798_call()
output = call_9799
func_9800 = relay.Function([], output)
mutated_mod['func_9800'] = func_9800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6292_call = mod.get_global_var('func_6292')
func_6294_call = mutated_mod.get_global_var('func_6294')
call_9843 = relay.TupleGetItem(func_6292_call(), 1)
call_9844 = relay.TupleGetItem(func_6294_call(), 1)
output = call_9843
output2 = call_9844
func_9849 = relay.Function([], output)
mod['func_9849'] = func_9849
mod = relay.transform.InferType()(mod)
mutated_mod['func_9849'] = func_9849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9849_call = mutated_mod.get_global_var('func_9849')
call_9850 = func_9849_call()
output = call_9850
func_9851 = relay.Function([], output)
mutated_mod['func_9851'] = func_9851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8741_call = mod.get_global_var('func_8741')
func_8743_call = mutated_mod.get_global_var('func_8743')
call_9903 = relay.TupleGetItem(func_8741_call(), 0)
call_9904 = relay.TupleGetItem(func_8743_call(), 0)
uop_9941 = relay.atan(call_9903.astype('float64')) # shape=(1, 10, 14)
uop_9943 = relay.atan(call_9904.astype('float64')) # shape=(1, 10, 14)
output = uop_9941
output2 = uop_9943
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

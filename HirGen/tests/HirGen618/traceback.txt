==========mod==========
#[version = "0.0.5"]
def @func_5686() -> (Tensor[(1, 10, 14), bool], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) {
  %0 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %2 = reshape(%1, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
  %3 = %0.0;
  %4 = @func_1147(%2) /* ty=Tensor[(?, 14, 16), bool] */;
  (%3, %4, meta[relay.Constant][0] /* ty=Tensor[(224), float32] */)
}

def @func_5888(%var_5870: Tensor[(8, 28), float32]) -> (Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) {
  %5 = cast(-5.80748f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %7 = cast(meta[relay.Constant][1] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %9 = cast(%var_5870, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %10 = reshape(%5, newshape=[]) /* ty=float32 */;
  %11 = reshape(%6, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
  %12 = reshape(%7, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
  %13 = reshape(%8, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
  %14 = reshape(%9, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
  %15 = @func_1562(%10, %11, %12, %13, %14) /* ty=(Tensor[(6, 16, 9), float32], Tensor[(6, 16, 9), int64], Tensor[(6, 16, 9), bool], Tensor[(?, 14, 16), bool], Tensor[(112, 2), float32]) */;
  %16 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %17 = %15.3;
  (%16, %17, -5.80748f /* ty=float32 */, meta[relay.Constant][1] /* ty=Tensor[(864), float32] */, %var_5870)
}

def @func_8449(%var_8424: Tensor[(600), float32], %var_8425: Tensor[(686), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(15, 10, 4), float32], Tensor[(600), float32], Tensor[(686), float64]) {
  %18 = cast(%var_8424, dtype="float32") /* ty=Tensor[(600), float32] */;
  %19 = cast(%var_8425, dtype="float64") /* ty=Tensor[(686), float64] */;
  %20 = reshape(%18, newshape=[15, 10, 4]) /* ty=Tensor[(15, 10, 4), float32] */;
  %21 = reshape(%19, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %22 = @func_6649(%20, %21) /* ty=(Tensor[(15, 10, 4), float32], Tensor[(10, 7, 1), float32], Tensor[(27), float32], Tensor[(10, 7, 1), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %23 = @func_7948() /* ty=Tensor[(1, 10, 14), float64] */;
  %24 = %22.0;
  (%23, %24, %var_8424, %var_8425)
}

def @func_5463() -> (Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) {
  %25 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %26 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 10, 14), bool] */, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 10, 14), bool] */, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  %28 = logical_or(%25, %26) /* ty=Tensor[(1, 10, 14), bool] */;
  %29 = cos(%27) /* ty=Tensor[(1, 10, 14), float64] */;
  (%28, %29)
}

def @func_7256(%var_7250: Tensor[(2, 13, 15), uint16], %var_7251: Tensor[(2, 13, 15), uint16]) -> (Tensor[(2, 13, 15), uint16],) {
  %30 = cast(%var_7251, dtype="uint16") /* ty=Tensor[(2, 13, 15), uint16] */;
  %31 = shape_of(%var_7250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%var_7250, dtype="uint16") /* ty=Tensor[(2, 13, 15), uint16] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %34 = add(%32, %33) /* ty=Tensor[(2, 13, 15), uint16] */;
  (%34,)
}

def @func_3503(%var_3497: float64, %var_3498: Tensor[(15, 7, 8), float64]) -> Tensor[(15, 7, 8), float64] {
  %35 = cast(%var_3497, dtype="float64") /* ty=float64 */;
  %36 = cast(%var_3498, dtype="float64") /* ty=Tensor[(15, 7, 8), float64] */;
  divide(%35, %36) /* ty=Tensor[(15, 7, 8), float64] */
}

def @func_6292() -> (Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) {
  %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %38 = reshape(%37, newshape=[8, 28]) /* ty=Tensor[(8, 28), float32] */;
  %39 = @func_5888(%38) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) */;
  %40 = @func_6177() /* ty=Tensor[(1, 10, 14), float32] */;
  %41 = %39.0;
  (%40, %41, meta[relay.Constant][3] /* ty=Tensor[(224), float32] */)
}

def @func_7183(%var_7175: Tensor[(216), float32]) -> (Tensor[(1, 10, 14), float64], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) {
  %42 = cast(%var_7175, dtype="float32") /* ty=Tensor[(216), float32] */;
  %43 = reshape(%42, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float32] */;
  %44 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %45 = @func_3299(%43) /* ty=Tensor[(2, 9, 12), uint8] */;
  (%44, %45, %var_7175)
}

def @func_8606() -> Tensor[(1, 10, 14), bool] {
  @func_8036() /* ty=Tensor[(1, 10, 14), bool] */
}

def @func_6177() -> Tensor[(1, 10, 14), float32] {
  %46 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %47 = %46.0;
  %48 = cast(%47, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  sqrt(%48) /* ty=Tensor[(1, 10, 14), float32] */
}

def @func_9351() -> (Tensor[(1, 10, 14), float32],) {
  %49 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %50 = %49.0;
  (%50,)
}

def @func_1947(%var_1943: Tensor[(14, 6, 14), float64]) -> (Tensor[(14, 6, 14), float64],) {
  %51 = cast(%var_1943, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
  %52 = atan(%51) /* ty=Tensor[(14, 6, 14), float64] */;
  (%52,)
}

def @func_4771(%var_4732: Tensor[(12, 3, 5), float64], %var_4768: Tensor[(105, 3), float32]) -> (Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(16, 9, 16), bool], Tensor[(12, 3, 5), float64], Tensor[(7, 15, 3), float32], Tensor[(105, 3), float32]) {
  %53 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %54 = cast(meta[relay.Constant][4] /* ty=Tensor[(2304), bool] */, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %55 = reshape(%53, newshape=[]) /* ty=bool */;
  %56 = reshape(%54, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), bool] */;
  %57 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %58 = cast(meta[relay.Constant][4] /* ty=Tensor[(2304), bool] */, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %59 = reshape(%57, newshape=[]) /* ty=bool */;
  %60 = reshape(%58, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), bool] */;
  %61 = cast(%var_4732, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %62 = acosh(%61) /* ty=Tensor[(12, 3, 5), float64] */;
  %63 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%62, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %67 = cast(%var_4768, dtype="float32") /* ty=Tensor[(105, 3), float32] */;
  %68 = reshape(%67, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
  %69 = @func_3433(%68) /* ty=(Tensor[(7, 15, 3), float32],) */;
  %70 = @func_1653(%55, %56) /* ty=Tensor[(16, 9, 16), bool] */;
  %71 = @func_1653(%59, %60) /* ty=Tensor[(16, 9, 16), bool] */;
  %72 = power(%65, %66) /* ty=Tensor[(12, 3, 5), float64] */;
  %73 = %69.0;
  (%70, True /* ty=bool */, meta[relay.Constant][4] /* ty=Tensor[(2304), bool] */, %71, %72, %73, %var_4768)
}

def @func_8943() -> Tensor[(1176), float64] {
  %74 = @func_8279() /* ty=(Tensor[(1176), float64],) */;
  %74.0
}

def @func_4375(%var_4367: Tensor[(13, 15, 5), float32], %var_4372: Tensor[(180), float64], %var_4373: Tensor[(169, 6), bool]) -> (Tensor[(13, 15, 5), float32], Tensor[(1014), bool], Tensor[(1584), uint8], Tensor[(180), float64], Tensor[(169, 6), bool]) {
  %75 = cast(%var_4367, dtype="float32") /* ty=Tensor[(13, 15, 5), float32] */;
  %76 = cast(meta[relay.Constant][6] /* ty=Tensor[(1584), uint8] */, dtype="uint8") /* ty=Tensor[(1584), uint8] */;
  %77 = cast(%var_4372, dtype="float64") /* ty=Tensor[(180), float64] */;
  %78 = cast(%var_4373, dtype="bool") /* ty=Tensor[(169, 6), bool] */;
  %79 = reshape(%76, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), uint8] */;
  %80 = reshape(%77, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %81 = reshape(%78, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
  %82 = @func_2307(%79, %80, %81) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(1014), bool], Tensor[(1014), bool]) */;
  %83 = log2(%75) /* ty=Tensor[(13, 15, 5), float32] */;
  %84 = %82.5;
  (%83, %84, meta[relay.Constant][6] /* ty=Tensor[(1584), uint8] */, %var_4372, %var_4373)
}

def @func_9661(%var_9597: Tensor[(1, 6, 3), float32], %var_9616: Tensor[(507, 2), bool], %var_9618: Tensor[(234, 2), float64]) -> (Tensor[(1, 6, 3), float32], Tensor[(1176), float64], float32, Tensor[(1584), uint8], Tensor[(507, 2), bool], Tensor[(560), float64], Tensor[(234, 2), float64], Tensor[(1, 10, 14), float32], Tensor[(1176), float64], Tensor[(27), float32], Tensor[(686), float64]) {
  %85 = cast(%var_9597, dtype="float32") /* ty=Tensor[(1, 6, 3), float32] */;
  %86 = cast(-7.14001f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %87 = cast(meta[relay.Constant][7] /* ty=Tensor[(1584), uint8] */, dtype="uint8") /* ty=Tensor[(1584), uint8] */;
  %88 = cast(%var_9616, dtype="bool") /* ty=Tensor[(507, 2), bool] */;
  %89 = cast(meta[relay.Constant][8] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %90 = cast(%var_9618, dtype="float64") /* ty=Tensor[(234, 2), float64] */;
  %91 = reshape(%86, newshape=[]) /* ty=float32 */;
  %92 = reshape(%87, newshape=[1584]) /* ty=Tensor[(1584), uint8] */;
  %93 = reshape(%88, newshape=[1014, 1]) /* ty=Tensor[(1014, 1), bool] */;
  %94 = reshape(%89, newshape=[1, 560]) /* ty=Tensor[(1, 560), float64] */;
  %95 = reshape(%90, newshape=[468, 1]) /* ty=Tensor[(468, 1), float64] */;
  %96 = @func_6011(%91, %92, %93, %94, %95) /* ty=(Tensor[(13, 10, 14), uint16], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(224), float32], Tensor[(864), float32], Tensor[(180), float64], Tensor[(1584), uint8], Tensor[(1014, 180), uint64], Tensor[(468), float64], Tensor[(1, 560), float64], Tensor[(468, 1), float64], Tensor[(1176), float64]) */;
  %97 = @func_8264() /* ty=(Tensor[(1, 10, 14), float32],) */;
  %98 = %96.12;
  %99 = cast(%98, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %100 = reshape(%99, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %101 = @func_3270(%100) /* ty=(Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %102 = cast(meta[relay.Constant][9] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %103 = reshape(%102, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %104 = @func_4613(%103) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 7, 7), float64], Tensor[(2, 9, 12), uint8], Tensor[(27), float32]) */;
  %105 = log(%85) /* ty=Tensor[(1, 6, 3), float32] */;
  %106 = %97.0;
  %107 = %101.2;
  %108 = %104.4;
  (%105, %98, -7.14001f /* ty=float32 */, meta[relay.Constant][7] /* ty=Tensor[(1584), uint8] */, %var_9616, meta[relay.Constant][8] /* ty=Tensor[(560), float64] */, %var_9618, %106, %107, %108, meta[relay.Constant][9] /* ty=Tensor[(686), float64] */)
}

def @func_8264() -> (Tensor[(1, 10, 14), float32],) {
  %109 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %110 = %109.0;
  (%110,)
}

def @func_6649(%var_6599: Tensor[(15, 10, 4), float32], %var_6642: Tensor[(686), float64]) -> (Tensor[(15, 10, 4), float32], Tensor[(10, 7, 1), float32], Tensor[(27), float32], Tensor[(10, 7, 1), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  %111 = cast(%var_6599, dtype="float32") /* ty=Tensor[(15, 10, 4), float32] */;
  %112 = cast(meta[relay.Constant][10] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %113 = reshape(%112, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %114 = @func_3934(%113) /* ty=(Tensor[(9, ?, 3), float64], Tensor[(5, 16, 7), int64], Tensor[(560), float64], Tensor[(180), float64], Tensor[(6, 78), float64], Tensor[(1176), float64], Tensor[(3, 10, 6), bool], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) */;
  %115 = %114.7;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
  %117 = reshape(%116, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
  %118 = @func_1094(%117) /* ty=(Tensor[(10, 7, 1), float32],) */;
  %119 = cast(%var_6642, dtype="float64") /* ty=Tensor[(686), float64] */;
  %120 = reshape(%119, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %121 = @func_4613(%120) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 7, 7), float64], Tensor[(2, 9, 12), uint8], Tensor[(27), float32]) */;
  %122 = asin(%111) /* ty=Tensor[(15, 10, 4), float32] */;
  %123 = %118.0;
  %124 = %121.2;
  (%122, %115, meta[relay.Constant][10] /* ty=Tensor[(27), float32] */, %123, %124, %var_6642)
}

def @func_3433(%var_3413: Tensor[(7, 15, 3), float32]) -> (Tensor[(7, 15, 3), float32],) {
  %125 = cast(%var_3413, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
  %126 = acosh(%125) /* ty=Tensor[(7, 15, 3), float32] */;
  (%126,)
}

def @func_9798() -> (Tensor[(1, 10, 14), float32],) {
  %127 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %128 = %127.0;
  (%128,)
}

def @func_7686(%var_7665: bool) -> (Tensor[(1, 10, 14), float64], Tensor[(?, 10, 14), bool], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool]) {
  %129 = @func_7225() /* ty=(Tensor[(?, 10, 14), bool],) */;
  %130 = cast(%var_7665, dtype="bool") /* ty=bool */;
  %131 = cast(meta[relay.Constant][11] /* ty=Tensor[(2304), bool] */, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %132 = reshape(%130, newshape=[]) /* ty=bool */;
  %133 = reshape(%131, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), bool] */;
  %134 = @func_6243() /* ty=Tensor[(1, 10, 14), float64] */;
  %135 = %129.0;
  %136 = @func_1653(%132, %133) /* ty=Tensor[(16, 9, 16), bool] */;
  (%134, %135, %136, %var_7665, meta[relay.Constant][11] /* ty=Tensor[(2304), bool] */)
}

def @func_5759(%var_5725: Tensor[(7, 2), int64]) -> (Tensor[(8, 16, 14), int64], Tensor[(7, 2), int64], Tensor[(?, 10, 14), float32]) {
  %137 = cast(%var_5725, dtype="int64") /* ty=Tensor[(7, 2), int64] */;
  %138 = reshape(%137, newshape=[1, 1, 14]) /* ty=Tensor[(1, 1, 14), int64] */;
  %139 = @func_4023(%138) /* ty=(Tensor[(8, 16, 14), int64], Tensor[(8, 16, 14), int64]) */;
  %140 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %141 = %140.1;
  %142 = cast(%141, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  %143 = exp(%142) /* ty=Tensor[(1, 10, 14), float64] */;
  %144 = cast(%141, dtype="uint32") /* ty=Tensor[(1, 10, 14), uint32] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="uint32") /* ty=Tensor[(1, 10, 14), uint32] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %148 = minimum(%146, %147) /* ty=Tensor[(?, 10, 14), uint32] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(?, 10, 14), float32] */;
  %150 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%143, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %153 = power(%151, %152) /* ty=Tensor[(?, 10, 14), float32] */;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(?, 10, 14), float32] */;
  %155 = %139.1;
  %156 = sigmoid(%154) /* ty=Tensor[(?, 10, 14), float32] */;
  (%155, %var_5725, %156)
}

def @func_127(%var_100: Tensor[(468), float64]) -> (Tensor[(4, 11, ?), bool], Tensor[(9, 4, 13), float64], Tensor[(4, 11, 468), uint64], Tensor[(468), float32]) {
  %157 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
  %158 = tan(%157) /* ty=Tensor[(4, 11, 1), float32] */;
  %159 = cast(%158, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
  %160 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(4, 11, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %163 = mod(%161, %162) /* ty=Tensor[(4, 11, ?), float32] */;
  %164 = cast(%158, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
  %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%163, dtype="bool") /* ty=Tensor[(4, 11, ?), bool] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %168 = cast(%var_100, dtype="float64") /* ty=Tensor[(468), float64] */;
  %169 = reshape(%168, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %170 = cast(%var_100, dtype="int8") /* ty=Tensor[(468), int8] */;
  %171 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 11, 1), float32] */, dtype="int8") /* ty=Tensor[(4, 11, 1), int8] */;
  %172 = subtract(%170, %171) /* ty=Tensor[(4, 11, 468), int8] */;
  %173 = cast(%172, dtype="uint64") /* ty=Tensor[(4, 11, 468), uint64] */;
  %174 = cast(%163, dtype="uint64") /* ty=Tensor[(4, 11, ?), uint64] */;
  %175 = cast(%var_100, dtype="float32") /* ty=Tensor[(468), float32] */;
  %176 = not_equal(%166, %167) /* ty=Tensor[(4, 11, ?), bool] */;
  %177 = @func_29(%169) /* ty=Tensor[(9, 4, 13), float64] */;
  %178 = right_shift(%173, %174) /* ty=Tensor[(4, 11, 468), uint64] */;
  %179 = atan(%175) /* ty=Tensor[(468), float32] */;
  (%176, %177, %178, %179)
}

def @func_2307(%var_2248: Tensor[(16, 11, 9), uint8], %var_2270: Tensor[(180), float64], %var_2301: Tensor[(1014), bool]) -> (Tensor[(16, 11, 9), float64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(1014), bool], Tensor[(1014), bool]) {
  %180 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 11, 9), uint8] */, dtype="uint8") /* ty=Tensor[(16, 11, 9), uint8] */;
  %181 = shape_of(%var_2248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%var_2248, dtype="uint8") /* ty=Tensor[(16, 11, 9), uint8] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %184 = maximum(%182, %183) /* ty=Tensor[(16, 11, 9), uint8] */;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(16, 11, 9), float64] */;
  %186 = cast(%var_2270, dtype="float64") /* ty=Tensor[(180), float64] */;
  %187 = cast(%var_2270, dtype="float64") /* ty=Tensor[(180), float64] */;
  %188 = reshape(%186, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %189 = reshape(%187, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %190 = @func_468(%188, %189) /* ty=(Tensor[(3, 10, 6), bool],) */;
  %191 = cast(meta[relay.Constant][14] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %192 = reshape(%191, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %193 = cast(%var_2301, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %194 = cast(%var_2301, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %195 = reshape(%193, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
  %196 = reshape(%194, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), float32] */;
  %197 = @func_1345(%195, %196) /* ty=(Tensor[(4, 13, 7), int8], Tensor[(?, 14, 16), bool], Tensor[(224), float32], Tensor[(70), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), float32]) */;
  %198 = sqrt(%185) /* ty=Tensor[(16, 11, 9), float64] */;
  %199 = %190.0;
  %200 = @func_29(%192) /* ty=Tensor[(9, 4, 13), float64] */;
  %201 = %197.4;
  (%198, %199, %var_2270, %200, meta[relay.Constant][14] /* ty=Tensor[(468), float64] */, %201, %var_2301)
}

def @func_2924(%var_2894: Tensor[(468), float64]) -> (Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) {
  %202 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %203 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(8, 5, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %206 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %207 = cast(%var_2894, dtype="float64") /* ty=Tensor[(468), float64] */;
  %208 = reshape(%207, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %209 = @func_127(%208) /* ty=(Tensor[(4, 11, ?), bool], Tensor[(9, 4, 13), float64], Tensor[(4, 11, 468), uint64], Tensor[(468), float32]) */;
  %210 = floor_mod(%204, %205) /* ty=Tensor[(8, 5, 13), float64] */;
  %211 = atan(%206) /* ty=Tensor[(8, 5, 13), float64] */;
  %212 = %209.1;
  (%210, %211, %212, %var_2894)
}

def @func_3299(%var_3289: Tensor[(2, 9, 12), float32]) -> Tensor[(2, 9, 12), uint8] {
  %213 = cast(%var_3289, dtype="float32") /* ty=Tensor[(2, 9, 12), float32] */;
  %214 = exp(%213) /* ty=Tensor[(2, 9, 12), float32] */;
  %215 = cast(%var_3289, dtype="uint8") /* ty=Tensor[(2, 9, 12), uint8] */;
  %216 = shape_of(%214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%214, dtype="uint8") /* ty=Tensor[(2, 9, 12), uint8] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  left_shift(%217, %218) /* ty=Tensor[(2, 9, 12), uint8] */
}

def @func_4023(%var_4008: Tensor[(1, 1, 14), int64]) -> (Tensor[(8, 16, 14), int64], Tensor[(8, 16, 14), int64]) {
  %219 = cast(%var_4008, dtype="int64") /* ty=Tensor[(1, 1, 14), int64] */;
  %220 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 16, 14), int64] */, dtype="int64") /* ty=Tensor[(8, 16, 14), int64] */;
  %221 = cast(%var_4008, dtype="int64") /* ty=Tensor[(1, 1, 14), int64] */;
  %222 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 16, 14), int64] */, dtype="int64") /* ty=Tensor[(8, 16, 14), int64] */;
  %223 = right_shift(%219, %220) /* ty=Tensor[(8, 16, 14), int64] */;
  %224 = bitwise_and(%221, %222) /* ty=Tensor[(8, 16, 14), int64] */;
  (%223, %224)
}

def @func_6243() -> Tensor[(1, 10, 14), float64] {
  @func_5642() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_5654(%var_5648: uint64, %var_5649: Tensor[(8, 3, 1), uint64]) -> (Tensor[(8, 3, 1), bool],) {
  %225 = cast(%var_5648, dtype="bool") /* ty=bool */;
  %226 = cast(%var_5649, dtype="bool") /* ty=Tensor[(8, 3, 1), bool] */;
  %227 = greater(%225, %226) /* ty=Tensor[(8, 3, 1), bool] */;
  (%227,)
}

def @func_5642() -> Tensor[(1, 10, 14), float64] {
  %228 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %228.1
}

def @func_8827() -> (bool,) {
  %229 = @func_7158() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(4, 13, 7), int8], Tensor[(1014), bool]) */;
  %230 = %229.2;
  (%230,)
}

def @func_8643(%var_8620: float32, %var_8621: Tensor[(12, 15, 12), float32]) -> (Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), uint32]) {
  %231 = cast(%var_8620, dtype="float32") /* ty=float32 */;
  %232 = cast(%var_8621, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
  %233 = cast(%var_8620, dtype="uint32") /* ty=uint32 */;
  %234 = cast(%var_8621, dtype="uint32") /* ty=Tensor[(12, 15, 12), uint32] */;
  %235 = power(%231, %232) /* ty=Tensor[(12, 15, 12), float32] */;
  %236 = maximum(%233, %234) /* ty=Tensor[(12, 15, 12), uint32] */;
  (%235, %236)
}

def @func_8741() -> (Tensor[(1, 10, 14), float64],) {
  %237 = @func_6831() /* ty=Tensor[(1, 10, 14), float64] */;
  (%237,)
}

def @func_7078(%var_7039: Tensor[(12, 10, 14), float64], %var_7050: Tensor[(1176), float64], %var_7053: Tensor[(1, 420), int16]) -> (Tensor[(12, 10, 14), float32], Tensor[(224), float32], Tensor[(12, 10, 14), uint64], Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(3, 10, 14), bool], Tensor[(1, 420), int16], Tensor[(1176), bool], Tensor[(?, 14, 16), float64]) {
  %238 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %240 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 10, 14), float64] */, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %241 = cast(%var_7039, dtype="uint64") /* ty=Tensor[(12, 10, 14), uint64] */;
  %242 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(12, 10, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 10, 14), float64] */, dtype="uint64") /* ty=Tensor[(12, 10, 14), uint64] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %245 = cast(%var_7050, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %246 = reshape(%245, newshape=[14, 6, 14]) /* ty=Tensor[(14, 6, 14), float64] */;
  %247 = @func_1947(%246) /* ty=(Tensor[(14, 6, 14), float64],) */;
  %248 = cast(%var_7053, dtype="int16") /* ty=Tensor[(1, 420), int16] */;
  %249 = reshape(%248, newshape=[3, 10, 14]) /* ty=Tensor[(3, 10, 14), int16] */;
  %250 = cast(meta[relay.Constant][20] /* ty=Tensor[(1176), float64] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %251 = shape_of(%var_7050, dtype="int32") /* ty=Tensor[(1), int32] */;
  %252 = cast(%var_7050, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?), bool] */;
  %254 = cast(meta[relay.Constant][19] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %255 = reshape(%254, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
  %256 = @func_1147(%255) /* ty=Tensor[(?, 14, 16), bool] */;
  %257 = cast(%256, dtype="float64") /* ty=Tensor[(?, 14, 16), float64] */;
  %258 = divide(%239, %240) /* ty=Tensor[(12, 10, 14), float32] */;
  %259 = logical_xor(%243, %244) /* ty=Tensor[(12, 10, 14), uint64] */;
  %260 = @func_6243() /* ty=Tensor[(1, 10, 14), float64] */;
  %261 = %247.0;
  %262 = @func_6755(%249) /* ty=Tensor[(3, 10, 14), bool] */;
  %263 = less(%252, %253) /* ty=Tensor[(1176), bool] */;
  %264 = cos(%257) /* ty=Tensor[(?, 14, 16), float64] */;
  (%258, meta[relay.Constant][19] /* ty=Tensor[(224), float32] */, %259, %260, %261, %262, %var_7053, %263, %264)
}

def @func_9542() -> Tensor[(1, 10, 14), float64] {
  @func_7948() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_1562(%var_1530: float32, %var_1531: Tensor[(6, 16, 9), float32], %var_1539: Tensor[(6, 16, 9), float32], %var_1543: Tensor[(6, 16, 9), float32], %var_1559: Tensor[(112, 2), float32]) -> (Tensor[(6, 16, 9), float32], Tensor[(6, 16, 9), int64], Tensor[(6, 16, 9), bool], Tensor[(?, 14, 16), bool], Tensor[(112, 2), float32]) {
  %265 = cast(%var_1530, dtype="float32") /* ty=float32 */;
  %266 = cast(%var_1531, dtype="float32") /* ty=Tensor[(6, 16, 9), float32] */;
  %267 = cast(%var_1539, dtype="int64") /* ty=Tensor[(6, 16, 9), int64] */;
  %268 = shape_of(%var_1531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%var_1531, dtype="int64") /* ty=Tensor[(6, 16, 9), int64] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %271 = cast(%var_1543, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
  %272 = shape_of(%var_1539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%var_1539, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %275 = cast(%var_1559, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %276 = reshape(%275, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
  %277 = subtract(%265, %266) /* ty=Tensor[(6, 16, 9), float32] */;
  %278 = bitwise_xor(%269, %270) /* ty=Tensor[(6, 16, 9), int64] */;
  %279 = less(%273, %274) /* ty=Tensor[(6, 16, 9), bool] */;
  %280 = @func_1147(%276) /* ty=Tensor[(?, 14, 16), bool] */;
  (%277, %278, %279, %280, %var_1559)
}

def @func_8036() -> Tensor[(1, 10, 14), bool] {
  %281 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %281.0
}

def @func_9450() -> (Tensor[(1, 10, 14), float32], Tensor[(6, 13, 13), bool], Tensor[(1014), bool], Tensor[(1, 10, 14), float64], bool) {
  %282 = @func_7704() /* ty=(Tensor[(1, 10, 14), float32],) */;
  %283 = cast(meta[relay.Constant][21] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %284 = cast(meta[relay.Constant][21] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %285 = reshape(%283, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
  %286 = reshape(%284, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
  %287 = @func_8876() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(1, 10, 14), float32]) */;
  %288 = @func_8827() /* ty=(bool,) */;
  %289 = %282.0;
  %290 = @func_1002(%285, %286) /* ty=Tensor[(6, 13, 13), bool] */;
  %291 = %287.0;
  %292 = %288.0;
  (%289, %290, meta[relay.Constant][21] /* ty=Tensor[(1014), bool] */, %291, %292)
}

def @main() -> Tensor[(1, 10, 14), float64] {
  %293 = @func_8741() /* ty=(Tensor[(1, 10, 14), float64],) */;
  %294 = %293.0;
  %295 = cast(%294, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  atan(%295) /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_4125(%var_4120: bool, %var_4121: Tensor[(11, 15, 6), bool]) -> (Tensor[(11, 15, 6), bool],) {
  %296 = cast(%var_4120, dtype="bool") /* ty=bool */;
  %297 = cast(%var_4121, dtype="bool") /* ty=Tensor[(11, 15, 6), bool] */;
  %298 = logical_and(%296, %297) /* ty=Tensor[(11, 15, 6), bool] */;
  (%298,)
}

def @func_1002(%var_992: Tensor[(6, 13, 13), bool], %var_993: Tensor[(6, 13, 13), bool]) -> Tensor[(6, 13, 13), bool] {
  %299 = cast(%var_993, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %300 = shape_of(%var_992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%var_992, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%301, %302) /* ty=Tensor[(6, 13, 13), bool] */
}

def @func_9209(%var_9194: Tensor[(7, 3, 5), int16]) -> (Tensor[(7, 3, 5), int16], Tensor[(1, 10, 14), float64], Tensor[(112, 2), float32]) {
  %303 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 3, 5), int16] */, dtype="int16") /* ty=Tensor[(7, 3, 5), int16] */;
  %304 = shape_of(%var_9194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%var_9194, dtype="int16") /* ty=Tensor[(7, 3, 5), int16] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %307 = cast(meta[relay.Constant][23] /* ty=Tensor[(112, 2), float32] */, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %308 = reshape(%307, newshape=[8, 28]) /* ty=Tensor[(8, 28), float32] */;
  %309 = @func_5888(%308) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) */;
  %310 = subtract(%305, %306) /* ty=Tensor[(7, 3, 5), int16] */;
  %311 = %309.0;
  (%310, %311, meta[relay.Constant][23] /* ty=Tensor[(112, 2), float32] */)
}

def @func_6891(%var_6845: bool, %var_6882: Tensor[(1176), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(11, 15, 6), bool], bool, Tensor[(990), bool], Tensor[(1176), float64], Tensor[(1176), float64]) {
  %312 = cast(%var_6845, dtype="bool") /* ty=bool */;
  %313 = cast(meta[relay.Constant][24] /* ty=Tensor[(990), bool] */, dtype="bool") /* ty=Tensor[(990), bool] */;
  %314 = reshape(%312, newshape=[]) /* ty=bool */;
  %315 = reshape(%313, newshape=[11, 15, 6]) /* ty=Tensor[(11, 15, 6), bool] */;
  %316 = @func_4125(%314, %315) /* ty=(Tensor[(11, 15, 6), bool],) */;
  %317 = cast(%var_6882, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %318 = reshape(%317, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %319 = @func_5861(%318) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %320 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %321 = %316.0;
  %322 = %319.2;
  (%320, %321, %var_6845, meta[relay.Constant][24] /* ty=Tensor[(990), bool] */, %322, %var_6882)
}

def @func_6985(%var_6922: Tensor[(5, 4, 13), float32]) -> (Tensor[(5, 4, 13), float32], Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(5, 4, 13), float64]) {
  %323 = cast(%var_6922, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
  %324 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %325 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
  %326 = cast(%var_6922, dtype="float64") /* ty=Tensor[(5, 4, 13), float64] */;
  %327 = cos(%323) /* ty=Tensor[(5, 4, 13), float32] */;
  %328 = %324.0;
  %329 = %325.4;
  %330 = acos(%326) /* ty=Tensor[(5, 4, 13), float64] */;
  (%327, %328, %329, %330)
}

def @func_8683() -> (Tensor[(1, 10, 14), float64],) {
  %331 = @func_6831() /* ty=Tensor[(1, 10, 14), float64] */;
  (%331,)
}

def @func_7600(%var_7595: Tensor[(420), int16]) -> (Tensor[(?, 10, 14), bool], Tensor[(3, 10, 14), bool], Tensor[(420), int16], Tensor[(3, 10, 14), bool]) {
  %332 = @func_7225() /* ty=(Tensor[(?, 10, 14), bool],) */;
  %333 = cast(%var_7595, dtype="int16") /* ty=Tensor[(420), int16] */;
  %334 = reshape(%333, newshape=[3, 10, 14]) /* ty=Tensor[(3, 10, 14), int16] */;
  %335 = cast(%var_7595, dtype="int16") /* ty=Tensor[(420), int16] */;
  %336 = reshape(%335, newshape=[3, 10, 14]) /* ty=Tensor[(3, 10, 14), int16] */;
  %337 = %332.0;
  %338 = @func_6755(%334) /* ty=Tensor[(3, 10, 14), bool] */;
  %339 = @func_6755(%336) /* ty=Tensor[(3, 10, 14), bool] */;
  (%337, %338, %var_7595, %339)
}

def @func_9849() -> Tensor[(1, 10, 14), float64] {
  %340 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %340.1
}

def @func_1147(%var_1135: Tensor[(1, 14, 16), float32]) -> Tensor[(?, 14, 16), bool] {
  %341 = cast(%var_1135, dtype="float32") /* ty=Tensor[(1, 14, 16), float32] */;
  %342 = sin(%341) /* ty=Tensor[(1, 14, 16), float32] */;
  %343 = cast(%342, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
  %344 = shape_of(%var_1135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(%var_1135, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %347 = not_equal(%345, %346) /* ty=Tensor[(?, 14, 16), bool] */;
  %348 = cast(%347, dtype="bool") /* ty=Tensor[(?, 14, 16), bool] */;
  %349 = shape_of(%var_1135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%var_1135, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%350, %351) /* ty=Tensor[(?, 14, 16), bool] */
}

def @func_5563(%var_5538: Tensor[(70), float32], %var_5546: Tensor[(1176), float64]) -> (Tensor[(1, 10, 14), bool], Tensor[(70), float32], Tensor[(14, 6, 14), float64], Tensor[(1176), float64], Tensor[(10, 7, 1), float32]) {
  %352 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %353 = cast(%var_5546, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %354 = reshape(%353, newshape=[14, 6, 14]) /* ty=Tensor[(14, 6, 14), float64] */;
  %355 = @func_1947(%354) /* ty=(Tensor[(14, 6, 14), float64],) */;
  %356 = cast(%var_5538, dtype="float32") /* ty=Tensor[(70), float32] */;
  %357 = reshape(%356, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
  %358 = @func_1094(%357) /* ty=(Tensor[(10, 7, 1), float32],) */;
  %359 = %358.0;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
  %361 = %352.0;
  %362 = %355.0;
  %363 = exp(%360) /* ty=Tensor[(10, 7, 1), float32] */;
  (%361, %var_5538, %362, %var_5546, %363)
}

def @func_6011(%var_5938: float32, %var_5951: Tensor[(1584), uint8], %var_5953: Tensor[(1014, 1), bool], %var_5992: Tensor[(1, 560), float64], %var_5993: Tensor[(468, 1), float64]) -> (Tensor[(13, 10, 14), uint16], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(224), float32], Tensor[(864), float32], Tensor[(180), float64], Tensor[(1584), uint8], Tensor[(1014, 180), uint64], Tensor[(468), float64], Tensor[(1, 560), float64], Tensor[(468, 1), float64], Tensor[(1176), float64]) {
  %364 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %365 = cast(%364, dtype="uint16") /* ty=Tensor[(1, 10, 14), uint16] */;
  %366 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 10, 14), float64] */, dtype="uint16") /* ty=Tensor[(13, 10, 14), uint16] */;
  %367 = cast(%var_5938, dtype="float32") /* ty=float32 */;
  %368 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %369 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %370 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %371 = cast(meta[relay.Constant][27] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %372 = reshape(%367, newshape=[]) /* ty=float32 */;
  %373 = reshape(%368, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
  %374 = reshape(%369, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
  %375 = reshape(%370, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
  %376 = reshape(%371, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
  %377 = @func_1562(%372, %373, %374, %375, %376) /* ty=(Tensor[(6, 16, 9), float32], Tensor[(6, 16, 9), int64], Tensor[(6, 16, 9), bool], Tensor[(?, 14, 16), bool], Tensor[(112, 2), float32]) */;
  %378 = %377.3;
  %379 = cast(%378, dtype="float32") /* ty=Tensor[(?, 14, 16), float32] */;
  %380 = reshape(%379, newshape=[8, 28]) /* ty=Tensor[(8, 28), float32] */;
  %381 = @func_5888(%380) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) */;
  %382 = cast(%var_5951, dtype="uint8") /* ty=Tensor[(1584), uint8] */;
  %383 = cast(meta[relay.Constant][28] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %384 = cast(%var_5953, dtype="bool") /* ty=Tensor[(1014, 1), bool] */;
  %385 = reshape(%382, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), uint8] */;
  %386 = reshape(%383, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %387 = reshape(%384, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
  %388 = @func_2307(%385, %386, %387) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(1014), bool], Tensor[(1014), bool]) */;
  %389 = cast(%var_5953, dtype="uint64") /* ty=Tensor[(1014, 1), uint64] */;
  %390 = cast(meta[relay.Constant][28] /* ty=Tensor[(180), float64] */, dtype="uint64") /* ty=Tensor[(180), uint64] */;
  %391 = cast(%var_5992, dtype="float64") /* ty=Tensor[(1, 560), float64] */;
  %392 = %388.2;
  %393 = cast(%392, dtype="float64") /* ty=Tensor[(180), float64] */;
  %394 = cast(%var_5993, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
  %395 = cast(meta[relay.Constant][29] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %396 = reshape(%391, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), float64] */;
  %397 = reshape(%393, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %398 = reshape(%394, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %399 = reshape(%395, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %400 = @func_3808(%396, %397, %398, %399) /* ty=(Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) */;
  %401 = add(%365, %366) /* ty=Tensor[(13, 10, 14), uint16] */;
  %402 = %381.3;
  %403 = add(%389, %390) /* ty=Tensor[(1014, 180), uint64] */;
  %404 = %400.4;
  (%401, %378, %var_5938, meta[relay.Constant][26] /* ty=Tensor[(864), float32] */, meta[relay.Constant][27] /* ty=Tensor[(224), float32] */, %402, %392, %var_5951, %403, %404, %var_5992, %var_5993, meta[relay.Constant][29] /* ty=Tensor[(1176), float64] */)
}

def @func_8031() -> (Tensor[(216), float32], Tensor[(?, 10, 14), uint64]) {
  %405 = @func_6177() /* ty=Tensor[(1, 10, 14), float32] */;
  %406 = cast(meta[relay.Constant][30] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %407 = reshape(%406, newshape=[216]) /* ty=Tensor[(216), float32] */;
  %408 = @func_7183(%407) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) */;
  %409 = %408.0;
  %410 = cast(%409, dtype="uint64") /* ty=Tensor[(1, 10, 14), uint64] */;
  %411 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%405, dtype="uint64") /* ty=Tensor[(1, 10, 14), uint64] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %414 = right_shift(%412, %413) /* ty=Tensor[(?, 10, 14), uint64] */;
  (meta[relay.Constant][30] /* ty=Tensor[(216), float32] */, %414)
}

def @func_8502() -> (Tensor[(9, 7, 10), float64], Tensor[(9, 7, 10), float32]) {
  %415 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 10), float64] */;
  %416 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 7, 10), float64] */, dtype="float32") /* ty=Tensor[(9, 7, 10), float32] */;
  %417 = cosh(%415) /* ty=Tensor[(9, 7, 10), float64] */;
  %418 = sinh(%416) /* ty=Tensor[(9, 7, 10), float32] */;
  (%417, %418)
}

def @func_9462() -> Tensor[(1, 10, 14), bool] {
  %419 = @func_9377() /* ty=(Tensor[(1, 10, 14), bool],) */;
  %419.0
}

def @func_1345(%var_1321: Tensor[(1014), bool], %var_1336: Tensor[(6, 13, 13), float32]) -> (Tensor[(4, 13, 7), int8], Tensor[(?, 14, 16), bool], Tensor[(224), float32], Tensor[(70), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), float32]) {
  %420 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 13, 7), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 7), float32] */;
  %421 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(4, 13, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 13, 7), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 7), float32] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %424 = mod(%422, %423) /* ty=Tensor[(4, 13, 7), float32] */;
  %425 = cast(%424, dtype="int8") /* ty=Tensor[(4, 13, 7), int8] */;
  %426 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(4, 13, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 13, 7), float32] */, dtype="int8") /* ty=Tensor[(4, 13, 7), int8] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %429 = cast(meta[relay.Constant][34] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %430 = reshape(%429, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
  %431 = cast(meta[relay.Constant][35] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %432 = reshape(%431, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
  %433 = @func_1094(%432) /* ty=(Tensor[(10, 7, 1), float32],) */;
  %434 = %433.0;
  %435 = cast(%434, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
  %436 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(70), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %437 = cast(meta[relay.Constant][35] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?), float32] */;
  %439 = cast(%var_1321, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %440 = cast(%var_1321, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %441 = reshape(%439, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
  %442 = reshape(%440, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
  %443 = @func_1002(%441, %442) /* ty=Tensor[(6, 13, 13), bool] */;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
  %445 = asinh(%444) /* ty=Tensor[(6, 13, 13), float32] */;
  %446 = cast(%var_1336, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %450 = subtract(%427, %428) /* ty=Tensor[(4, 13, 7), int8] */;
  %451 = @func_1147(%430) /* ty=Tensor[(?, 14, 16), bool] */;
  %452 = divide(%437, %438) /* ty=Tensor[(70), float32] */;
  %453 = mod(%448, %449) /* ty=Tensor[(6, 13, 13), float32] */;
  (%450, %451, meta[relay.Constant][34] /* ty=Tensor[(224), float32] */, %452, %var_1321, %453)
}

def @func_6755(%var_6750: Tensor[(3, 10, 14), int16]) -> Tensor[(3, 10, 14), bool] {
  %454 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
  %455 = %454.2;
  %456 = cast(%455, dtype="bool") /* ty=Tensor[(?, 10, 14), bool] */;
  %457 = cast(%var_6750, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
  not_equal(%456, %457) /* ty=Tensor[(3, 10, 14), bool] */
}

def @func_6831() -> Tensor[(1, 10, 14), float64] {
  @func_5642() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_7225() -> (Tensor[(?, 10, 14), bool],) {
  %458 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %459 = %458.1;
  %460 = cast(%459, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  %461 = sinh(%460) /* ty=Tensor[(1, 10, 14), float64] */;
  %462 = cast(%459, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%461, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = not_equal(%464, %465) /* ty=Tensor[(?, 10, 14), bool] */;
  (%466,)
}

def @func_7441(%var_7435: uint64, %var_7436: Tensor[(24), uint64]) -> (Tensor[(?, 10, 14), int16], Tensor[(8, 3, 1), bool], uint64, Tensor[(24), uint64]) {
  %467 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
  %468 = cast(%var_7435, dtype="uint64") /* ty=uint64 */;
  %469 = cast(%var_7436, dtype="uint64") /* ty=Tensor[(24), uint64] */;
  %470 = reshape(%468, newshape=[]) /* ty=uint64 */;
  %471 = reshape(%469, newshape=[8, 3, 1]) /* ty=Tensor[(8, 3, 1), uint64] */;
  %472 = @func_5654(%470, %471) /* ty=(Tensor[(8, 3, 1), bool],) */;
  %473 = %467.2;
  %474 = %472.0;
  (%473, %474, %var_7435, %var_7436)
}

def @func_8708() -> Tensor[(?, 10, 14), uint64] {
  %475 = @func_8031() /* ty=(Tensor[(216), float32], Tensor[(?, 10, 14), uint64]) */;
  %475.1
}

def @func_6695() -> Tensor[(?, 10, 14), bool] {
  %476 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
  %477 = %476.4;
  %478 = cast(%477, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %479 = rsqrt(%478) /* ty=Tensor[(1, 10, 14), float32] */;
  %480 = cast(%477, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %481 = shape_of(%479, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%479, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%482, %483) /* ty=Tensor[(?, 10, 14), bool] */
}

def @func_7158() -> (Tensor[(1, 10, 14), float64], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(4, 13, 7), int8], Tensor[(1014), bool]) {
  %484 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %485 = cast(meta[relay.Constant][36] /* ty=Tensor[(2304), bool] */, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %486 = reshape(%484, newshape=[]) /* ty=bool */;
  %487 = reshape(%485, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), bool] */;
  %488 = cast(meta[relay.Constant][37] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %489 = cast(meta[relay.Constant][37] /* ty=Tensor[(1014), bool] */, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %490 = reshape(%488, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
  %491 = reshape(%489, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), float32] */;
  %492 = @func_1345(%490, %491) /* ty=(Tensor[(4, 13, 7), int8], Tensor[(?, 14, 16), bool], Tensor[(224), float32], Tensor[(70), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), float32]) */;
  %493 = @func_6243() /* ty=Tensor[(1, 10, 14), float64] */;
  %494 = @func_1653(%486, %487) /* ty=Tensor[(16, 9, 16), bool] */;
  %495 = %492.0;
  (%493, %494, False /* ty=bool */, meta[relay.Constant][36] /* ty=Tensor[(2304), bool] */, %495, meta[relay.Constant][37] /* ty=Tensor[(1014), bool] */)
}

def @func_6121(%var_6091: Tensor[(16, 10, 14), float64], %var_6114: Tensor[(1176), float64]) -> (Tensor[(16, 10, 14), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(1176), float64]) {
  %496 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %497 = cast(%496, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %498 = cast(%var_6091, dtype="bool") /* ty=Tensor[(16, 10, 14), bool] */;
  %499 = cast(%var_6114, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %500 = reshape(%499, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %501 = @func_5861(%500) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %502 = %501.2;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %504 = reshape(%503, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %505 = @func_3270(%504) /* ty=(Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %506 = greater(%497, %498) /* ty=Tensor[(16, 10, 14), bool] */;
  %507 = %505.2;
  (%506, %502, %var_6114, %507)
}

def @func_8876() -> (Tensor[(1, 10, 14), float64], Tensor[(1, 10, 14), float32]) {
  %508 = @func_8741() /* ty=(Tensor[(1, 10, 14), float64],) */;
  %509 = %508.0;
  %510 = @func_6177() /* ty=Tensor[(1, 10, 14), float32] */;
  (%509, %510)
}

def @func_8779(%var_8760: Tensor[(420), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(3, 10, 14), int8], Tensor[(420), float64], Tensor[(224), float32]) {
  %511 = cast(%var_8760, dtype="float64") /* ty=Tensor[(420), float64] */;
  %512 = reshape(%511, newshape=[3, 10, 14]) /* ty=Tensor[(3, 10, 14), float64] */;
  %513 = @func_7544(%512) /* ty=(Tensor[(1, 10, 14), float32], Tensor[(3, 10, 14), int8]) */;
  %514 = @func_7830() /* ty=(Tensor[(224), float32],) */;
  %515 = @func_7948() /* ty=Tensor[(1, 10, 14), float64] */;
  %516 = %513.1;
  %517 = %514.0;
  (%515, %516, %var_8760, %517)
}

def @func_7544(%var_7522: Tensor[(3, 10, 14), float64]) -> (Tensor[(1, 10, 14), float32], Tensor[(3, 10, 14), int8]) {
  %518 = @func_7162() /* ty=(Tensor[(1, 10, 14), float64],) */;
  %519 = %518.0;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %521 = @func_6831() /* ty=Tensor[(1, 10, 14), float64] */;
  %522 = cast(%521, dtype="int8") /* ty=Tensor[(1, 10, 14), int8] */;
  %523 = cast(%var_7522, dtype="int8") /* ty=Tensor[(3, 10, 14), int8] */;
  %524 = tan(%520) /* ty=Tensor[(1, 10, 14), float32] */;
  %525 = minimum(%522, %523) /* ty=Tensor[(3, 10, 14), int8] */;
  (%524, %525)
}

def @func_9499(%var_9485: Tensor[(16, 10, 14), float64], %var_9493: Tensor[(180), float64], %var_9494: Tensor[(5, 63), float32]) -> (Tensor[(468), float32], Tensor[(468), float64], Tensor[(16, 10, 14), bool], Tensor[(16, 9, 16), bool], Tensor[(180), float64], Tensor[(5, 63), float32]) {
  %526 = cast(meta[relay.Constant][38] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %527 = reshape(%526, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %528 = @func_127(%527) /* ty=(Tensor[(4, 11, ?), bool], Tensor[(9, 4, 13), float64], Tensor[(4, 11, 468), uint64], Tensor[(468), float32]) */;
  %529 = @func_7948() /* ty=Tensor[(1, 10, 14), float64] */;
  %530 = cast(%529, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %531 = cast(%var_9485, dtype="bool") /* ty=Tensor[(16, 10, 14), bool] */;
  %532 = cast(%var_9493, dtype="float64") /* ty=Tensor[(180), float64] */;
  %533 = cast(%var_9494, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
  %534 = reshape(%532, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float64] */;
  %535 = reshape(%533, newshape=[105, 3]) /* ty=Tensor[(105, 3), float32] */;
  %536 = @func_4771(%534, %535) /* ty=(Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(16, 9, 16), bool], Tensor[(12, 3, 5), float64], Tensor[(7, 15, 3), float32], Tensor[(105, 3), float32]) */;
  %537 = %528.3;
  %538 = logical_or(%530, %531) /* ty=Tensor[(16, 10, 14), bool] */;
  %539 = %536.0;
  (%537, meta[relay.Constant][38] /* ty=Tensor[(468), float64] */, %538, %539, %var_9493, %var_9494)
}

def @func_9271() -> (Tensor[(1176), float64],) {
  %540 = @func_8943() /* ty=Tensor[(1176), float64] */;
  (%540,)
}

def @func_9377() -> (Tensor[(1, 10, 14), bool],) {
  %541 = @func_8386() /* ty=(Tensor[(1, 10, 14), bool],) */;
  %542 = %541.0;
  (%542,)
}

def @func_8229(%var_8222: Tensor[(9, 7, 13), int8]) -> Tensor[(9, 7, 13), int8] {
  %543 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 7, 13), int8] */, dtype="int8") /* ty=Tensor[(9, 7, 13), int8] */;
  %544 = shape_of(%var_8222, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%var_8222, dtype="int8") /* ty=Tensor[(9, 7, 13), int8] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%545, %546) /* ty=Tensor[(9, 7, 13), int8] */
}

def @func_8156(%var_8086: Tensor[(14, 1), int64]) -> (Tensor[(216), float32], Tensor[(8, 16, 14), int64], Tensor[(1, 10, 14), float64], Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 1176), float32]) {
  %547 = @func_8031() /* ty=(Tensor[(216), float32], Tensor[(?, 10, 14), uint64]) */;
  %548 = cast(%var_8086, dtype="int64") /* ty=Tensor[(14, 1), int64] */;
  %549 = reshape(%548, newshape=[7, 2]) /* ty=Tensor[(7, 2), int64] */;
  %550 = @func_5759(%549) /* ty=(Tensor[(8, 16, 14), int64], Tensor[(7, 2), int64], Tensor[(?, 10, 14), float32]) */;
  %551 = cast(meta[relay.Constant][40] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %552 = cast(meta[relay.Constant][41] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %553 = reshape(%551, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
  %554 = reshape(%552, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %555 = @func_6121(%553, %554) /* ty=(Tensor[(16, 10, 14), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(1176), float64]) */;
  %556 = cast(meta[relay.Constant][41] /* ty=Tensor[(1176), float64] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %557 = cast(%var_8086, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %558 = %547.0;
  %559 = %550.0;
  %560 = @func_6243() /* ty=Tensor[(1, 10, 14), float64] */;
  %561 = %555.3;
  %562 = mod(%556, %557) /* ty=Tensor[(14, 1176), float32] */;
  (%558, %559, %560, %561, meta[relay.Constant][40] /* ty=Tensor[(2240), float64] */, %562)
}

def @func_8998() -> bool {
  %563 = @func_8827() /* ty=(bool,) */;
  %563.0
}

def @func_3270(%var_3254: Tensor[(1176), float64]) -> (Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) {
  %564 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 9, 2), float32] */, dtype="float32") /* ty=Tensor[(14, 9, 2), float32] */;
  %565 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(14, 9, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 9, 2), float32] */, dtype="float32") /* ty=Tensor[(14, 9, 2), float32] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %568 = divide(%566, %567) /* ty=Tensor[(14, 9, 2), float32] */;
  %569 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 9, 2), float32] */, dtype="bool") /* ty=Tensor[(14, 9, 2), bool] */;
  %570 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(14, 9, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 9, 2), float32] */, dtype="bool") /* ty=Tensor[(14, 9, 2), bool] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %573 = less(%571, %572) /* ty=Tensor[(14, 9, 2), bool] */;
  %574 = cast(%573, dtype="uint16") /* ty=Tensor[(14, 9, 2), uint16] */;
  %575 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%568, dtype="uint16") /* ty=Tensor[(14, 9, 2), uint16] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %578 = cast(%var_3254, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %579 = reshape(%578, newshape=[14, 6, 14]) /* ty=Tensor[(14, 6, 14), float64] */;
  %580 = @func_1947(%579) /* ty=(Tensor[(14, 6, 14), float64],) */;
  %581 = logical_xor(%576, %577) /* ty=Tensor[(14, 9, 2), uint16] */;
  %582 = %580.0;
  (%581, %582, %var_3254)
}

def @func_7843(%var_7838: uint8, %var_7839: Tensor[(11, 13, 7), uint8]) -> Tensor[(11, 13, 7), uint8] {
  %583 = cast(%var_7838, dtype="uint8") /* ty=uint8 */;
  %584 = cast(%var_7839, dtype="uint8") /* ty=Tensor[(11, 13, 7), uint8] */;
  add(%583, %584) /* ty=Tensor[(11, 13, 7), uint8] */
}

def @func_7356() -> (Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 6, 14), float32]) {
  %585 = cast(meta[relay.Constant][44] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %586 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
  %587 = %586.3;
  %588 = cast(%587, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
  %589 = reshape(%585, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
  %590 = reshape(%588, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %591 = @func_6121(%589, %590) /* ty=(Tensor[(16, 10, 14), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(1176), float64]) */;
  %592 = cast(%587, dtype="float32") /* ty=Tensor[(14, 6, 14), float32] */;
  %593 = %591.3;
  %594 = log2(%592) /* ty=Tensor[(14, 6, 14), float32] */;
  (%593, meta[relay.Constant][44] /* ty=Tensor[(2240), float64] */, %594)
}

def @func_29(%var_23: Tensor[(9, 4, 13), float64]) -> Tensor[(9, 4, 13), float64] {
  %595 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 4, 13), float64] */;
  %596 = cast(%var_23, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  divide(%595, %596) /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_7830() -> (Tensor[(224), float32],) {
  %597 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %598 = %597.2;
  (%598,)
}

def @func_8279() -> (Tensor[(1176), float64],) {
  %599 = @func_7356() /* ty=(Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 6, 14), float32]) */;
  %600 = %599.0;
  (%600,)
}

def @func_1653(%var_1641: bool, %var_1642: Tensor[(16, 9, 16), bool]) -> Tensor[(16, 9, 16), bool] {
  %601 = cast(%var_1641, dtype="bool") /* ty=bool */;
  %602 = cast(%var_1642, dtype="bool") /* ty=Tensor[(16, 9, 16), bool] */;
  logical_and(%601, %602) /* ty=Tensor[(16, 9, 16), bool] */
}

def @func_4613(%var_4587: Tensor[(14, 7, 7), float64]) -> (Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 7, 7), float64], Tensor[(2, 9, 12), uint8], Tensor[(27), float32]) {
  %603 = cast(meta[relay.Constant][46] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %604 = reshape(%603, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %605 = cast(%var_4587, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
  %606 = acos(%605) /* ty=Tensor[(14, 7, 7), float64] */;
  %607 = cast(%var_4587, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
  %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%606, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %611 = cast(meta[relay.Constant][47] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %612 = reshape(%611, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %613 = @func_3934(%612) /* ty=(Tensor[(9, ?, 3), float64], Tensor[(5, 16, 7), int64], Tensor[(560), float64], Tensor[(180), float64], Tensor[(6, 78), float64], Tensor[(1176), float64], Tensor[(3, 10, 6), bool], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) */;
  %614 = @func_29(%604) /* ty=Tensor[(9, 4, 13), float64] */;
  %615 = power(%609, %610) /* ty=Tensor[(14, 7, 7), float64] */;
  %616 = %613.9;
  (%614, meta[relay.Constant][46] /* ty=Tensor[(468), float64] */, %615, %616, meta[relay.Constant][47] /* ty=Tensor[(27), float32] */)
}

def @func_1094(%var_1069: Tensor[(10, 7, 1), float32]) -> (Tensor[(10, 7, 1), float32],) {
  %617 = cast(%var_1069, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
  %618 = asin(%617) /* ty=Tensor[(10, 7, 1), float32] */;
  (%618,)
}

def @func_9745() -> (Tensor[(1, 10, 14), bool], Tensor[(14, 6, 14), float64], Tensor[(1176), float64], Tensor[(?, 10, 14), bool]) {
  %619 = cast(meta[relay.Constant][48] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %620 = reshape(%619, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %621 = @func_5861(%620) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %622 = @func_9462() /* ty=Tensor[(1, 10, 14), bool] */;
  %623 = %621.1;
  %624 = @func_6695() /* ty=Tensor[(?, 10, 14), bool] */;
  (%622, %623, meta[relay.Constant][48] /* ty=Tensor[(1176), float64] */, %624)
}

def @func_3934(%var_3879: Tensor[(9, 1, 3), float32]) -> (Tensor[(9, ?, 3), float64], Tensor[(5, 16, 7), int64], Tensor[(560), float64], Tensor[(180), float64], Tensor[(6, 78), float64], Tensor[(1176), float64], Tensor[(3, 10, 6), bool], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) {
  %625 = cast(%var_3879, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
  %626 = asinh(%625) /* ty=Tensor[(9, 1, 3), float32] */;
  %627 = cast(%var_3879, dtype="float64") /* ty=Tensor[(9, 1, 3), float64] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%626, dtype="float64") /* ty=Tensor[(9, 1, 3), float64] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %631 = cast(meta[relay.Constant][49] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %632 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %633 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 78), float64] */, dtype="float64") /* ty=Tensor[(6, 78), float64] */;
  %634 = cast(meta[relay.Constant][52] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %635 = reshape(%631, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), float64] */;
  %636 = reshape(%632, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %637 = reshape(%633, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %638 = reshape(%634, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %639 = @func_3808(%635, %636, %637, %638) /* ty=(Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) */;
  %640 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %641 = cast(meta[relay.Constant][50] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %642 = reshape(%640, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %643 = reshape(%641, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %644 = @func_468(%642, %643) /* ty=(Tensor[(3, 10, 6), bool],) */;
  %645 = cast(meta[relay.Constant][53] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %646 = reshape(%645, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
  %647 = @func_1094(%646) /* ty=(Tensor[(10, 7, 1), float32],) */;
  %648 = cast(meta[relay.Constant][54] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %649 = reshape(%648, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float32] */;
  %650 = add(%629, %630) /* ty=Tensor[(9, ?, 3), float64] */;
  %651 = %639.0;
  %652 = %644.0;
  %653 = %647.0;
  %654 = @func_3299(%649) /* ty=Tensor[(2, 9, 12), uint8] */;
  (%650, %651, meta[relay.Constant][49] /* ty=Tensor[(560), float64] */, meta[relay.Constant][50] /* ty=Tensor[(180), float64] */, meta[relay.Constant][51] /* ty=Tensor[(6, 78), float64] */, meta[relay.Constant][52] /* ty=Tensor[(1176), float64] */, %652, %653, meta[relay.Constant][53] /* ty=Tensor[(70), float32] */, %654, meta[relay.Constant][54] /* ty=Tensor[(216), float32] */)
}

def @func_5861(%var_5814: Tensor[(1176), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) {
  %655 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %656 = cast(%var_5814, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %657 = reshape(%656, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %658 = @func_3270(%657) /* ty=(Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %659 = %655.1;
  %660 = %658.1;
  (%659, %660, %var_5814)
}

def @func_7162() -> (Tensor[(1, 10, 14), float64],) {
  %661 = @func_7158() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(4, 13, 7), int8], Tensor[(1014), bool]) */;
  %662 = %661.0;
  (%662,)
}

def @func_8386() -> (Tensor[(1, 10, 14), bool],) {
  %663 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %664 = %663.0;
  (%664,)
}

def @func_9065() -> (Tensor[(1, 10, 14), float64], Tensor[(?, 10, 14), float32], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) {
  %665 = @func_8036() /* ty=Tensor[(1, 10, 14), bool] */;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  %667 = cast(%665, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %668 = erf(%667) /* ty=Tensor[(1, 10, 14), float32] */;
  %669 = cast(%665, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %670 = shape_of(%668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%668, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %673 = cast(meta[relay.Constant][55] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %674 = reshape(%673, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %675 = log(%666) /* ty=Tensor[(1, 10, 14), float64] */;
  %676 = add(%671, %672) /* ty=Tensor[(?, 10, 14), float32] */;
  %677 = @func_29(%674) /* ty=Tensor[(9, 4, 13), float64] */;
  (%675, %676, %677, meta[relay.Constant][55] /* ty=Tensor[(468), float64] */)
}

def @func_7704() -> (Tensor[(1, 10, 14), float32],) {
  %678 = @func_6177() /* ty=Tensor[(1, 10, 14), float32] */;
  (%678,)
}

def @func_6475() -> (Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) {
  %679 = @func_5686() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) */;
  %680 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %681 = cast(%680, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %682 = acosh(%681) /* ty=Tensor[(1, 10, 14), float32] */;
  %683 = cast(%680, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %687 = logical_and(%685, %686) /* ty=Tensor[(?, 10, 14), bool] */;
  %688 = cast(%687, dtype="int16") /* ty=Tensor[(?, 10, 14), int16] */;
  %689 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%682, dtype="int16") /* ty=Tensor[(1, 10, 14), int16] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %692 = cast(meta[relay.Constant][56] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %693 = reshape(%692, newshape=[14, 6, 14]) /* ty=Tensor[(14, 6, 14), float64] */;
  %694 = @func_1947(%693) /* ty=(Tensor[(14, 6, 14), float64],) */;
  %695 = %694.0;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
  %697 = %679.1;
  %698 = bitwise_or(%690, %691) /* ty=Tensor[(?, 10, 14), int16] */;
  %699 = erf(%696) /* ty=Tensor[(14, 6, 14), float64] */;
  %700 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  (%697, meta[relay.Constant][56] /* ty=Tensor[(1176), float64] */, %698, %699, %700)
}

def @func_7395() -> (Tensor[(1, 10, 14), float64], Tensor[(3, 10, 6), bool], Tensor[(560), float64], Tensor[(180), float64], Tensor[(468), float64], Tensor[(1176), float64]) {
  %701 = cast(meta[relay.Constant][57] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %702 = cast(meta[relay.Constant][58] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %703 = cast(meta[relay.Constant][59] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %704 = cast(meta[relay.Constant][60] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %705 = reshape(%701, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), float64] */;
  %706 = reshape(%702, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %707 = reshape(%703, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %708 = reshape(%704, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %709 = @func_3808(%705, %706, %707, %708) /* ty=(Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) */;
  %710 = @func_6831() /* ty=Tensor[(1, 10, 14), float64] */;
  %711 = %709.1;
  (%710, %711, meta[relay.Constant][57] /* ty=Tensor[(560), float64] */, meta[relay.Constant][58] /* ty=Tensor[(180), float64] */, meta[relay.Constant][59] /* ty=Tensor[(468), float64] */, meta[relay.Constant][60] /* ty=Tensor[(1176), float64] */)
}

def @func_3808(%var_3709: Tensor[(5, 16, 7), float64], %var_3740: Tensor[(180), float64], %var_3752: Tensor[(468), float64], %var_3763: Tensor[(1176), float64]) -> (Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) {
  %712 = cast(%var_3709, dtype="float64") /* ty=Tensor[(5, 16, 7), float64] */;
  %713 = log(%712) /* ty=Tensor[(5, 16, 7), float64] */;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(5, 16, 7), float64] */;
  %715 = tan(%714) /* ty=Tensor[(5, 16, 7), float64] */;
  %716 = cast(%var_3709, dtype="int64") /* ty=Tensor[(5, 16, 7), int64] */;
  %717 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%715, dtype="int64") /* ty=Tensor[(5, 16, 7), int64] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %720 = cast(%var_3740, dtype="float64") /* ty=Tensor[(180), float64] */;
  %721 = cast(%var_3740, dtype="float64") /* ty=Tensor[(180), float64] */;
  %722 = reshape(%720, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %723 = reshape(%721, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %724 = @func_468(%722, %723) /* ty=(Tensor[(3, 10, 6), bool],) */;
  %725 = cast(%var_3752, dtype="float64") /* ty=Tensor[(468), float64] */;
  %726 = reshape(%725, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %727 = @func_2924(%726) /* ty=(Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) */;
  %728 = cast(%var_3763, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %729 = reshape(%728, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %730 = @func_3270(%729) /* ty=(Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %731 = cast(%var_3752, dtype="float64") /* ty=Tensor[(468), float64] */;
  %732 = reshape(%731, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %733 = logical_xor(%718, %719) /* ty=Tensor[(5, 16, 7), int64] */;
  %734 = %724.0;
  %735 = %727.2;
  %736 = %730.0;
  %737 = @func_29(%732) /* ty=Tensor[(9, 4, 13), float64] */;
  (%733, %734, %var_3740, %735, %var_3752, %736, %var_3763, %737)
}

def @func_7948() -> Tensor[(1, 10, 14), float64] {
  @func_6243() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_468(%var_454: Tensor[(3, 10, 6), float64], %var_459: Tensor[(3, 10, 6), float64]) -> (Tensor[(3, 10, 6), bool],) {
  %738 = cast(%var_454, dtype="float64") /* ty=Tensor[(3, 10, 6), float64] */;
  %739 = cos(%738) /* ty=Tensor[(3, 10, 6), float64] */;
  %740 = cast(%var_459, dtype="bool") /* ty=Tensor[(3, 10, 6), bool] */;
  %741 = shape_of(%739, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%739, dtype="bool") /* ty=Tensor[(3, 10, 6), bool] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %744 = less(%742, %743) /* ty=Tensor[(3, 10, 6), bool] */;
  (%744,)
}

def @func_8925(%var_8911: float64) -> (Tensor[(1, 10, 14), float64], Tensor[(15, 7, 8), float64], float64, Tensor[(840), float64]) {
  %745 = cast(%var_8911, dtype="float64") /* ty=float64 */;
  %746 = cast(meta[relay.Constant][61] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %747 = reshape(%745, newshape=[]) /* ty=float64 */;
  %748 = reshape(%746, newshape=[15, 7, 8]) /* ty=Tensor[(15, 7, 8), float64] */;
  %749 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %750 = @func_3503(%747, %748) /* ty=Tensor[(15, 7, 8), float64] */;
  (%749, %750, %var_8911, meta[relay.Constant][61] /* ty=Tensor[(840), float64] */)
}

def @func_9154(%var_9115: Tensor[(4, 10, 14), float32]) -> (Tensor[(224), float32], Tensor[(4, 10, 14), float32], Tensor[(?, 10, 14), uint64]) {
  %751 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %752 = @func_8876() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(1, 10, 14), float32]) */;
  %753 = %752.1;
  %754 = cast(%753, dtype="int16") /* ty=Tensor[(1, 10, 14), int16] */;
  %755 = cast(%var_9115, dtype="int16") /* ty=Tensor[(4, 10, 14), int16] */;
  %756 = left_shift(%754, %755) /* ty=Tensor[(4, 10, 14), int16] */;
  %757 = cast(%756, dtype="uint32") /* ty=Tensor[(4, 10, 14), uint32] */;
  %758 = shape_of(%var_9115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%var_9115, dtype="uint32") /* ty=Tensor[(4, 10, 14), uint32] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %761 = logical_xor(%759, %760) /* ty=Tensor[(4, 10, 14), uint32] */;
  %762 = cast(%761, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
  %763 = %751.2;
  %764 = log10(%762) /* ty=Tensor[(4, 10, 14), float32] */;
  %765 = @func_8708() /* ty=Tensor[(?, 10, 14), uint64] */;
  (%763, %764, %765)
}

def @func_5922(%var_5896: Tensor[(5, 12, 5), int8]) -> (Tensor[(5, 12, 5), bool], Tensor[(5, 12, 5), float32]) {
  %766 = cast(meta[relay.Constant][62] /* ty=Tensor[(5, 12, 5), int8] */, dtype="bool") /* ty=Tensor[(5, 12, 5), bool] */;
  %767 = shape_of(%var_5896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%var_5896, dtype="bool") /* ty=Tensor[(5, 12, 5), bool] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %770 = cast(%var_5896, dtype="float32") /* ty=Tensor[(5, 12, 5), float32] */;
  %771 = greater(%768, %769) /* ty=Tensor[(5, 12, 5), bool] */;
  %772 = cosh(%770) /* ty=Tensor[(5, 12, 5), float32] */;
  (%771, %772)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8646(%var_8644: float32, %var_8645: Tensor[(12, 15, 12), float32]) -> (Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), uint32]) {
  %6 = fn (%var_8620: float32, %var_8621: Tensor[(12, 15, 12), float32]) -> (Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), uint32]) {
    %0 = cast(%var_8620, dtype="float32") /* ty=float32 */;
    %1 = cast(%var_8621, dtype="float32") /* ty=Tensor[(12, 15, 12), float32] */;
    %2 = cast(%var_8620, dtype="uint32") /* ty=uint32 */;
    %3 = cast(%var_8621, dtype="uint32") /* ty=Tensor[(12, 15, 12), uint32] */;
    %4 = power(%0, %1) /* ty=Tensor[(12, 15, 12), float32] */;
    %5 = maximum(%2, %3) /* ty=Tensor[(12, 15, 12), uint32] */;
    (%4, %5)
  };
  %6(%var_8644, %var_8645) /* ty=(Tensor[(12, 15, 12), float32], Tensor[(12, 15, 12), uint32]) */
}

def @func_6696() -> Tensor[(?, 10, 14), bool] {
  %15 = fn () -> Tensor[(?, 10, 14), bool] {
    %7 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
    %8 = %7.4;
    %9 = cast(%8, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
    %10 = rsqrt(%9) /* ty=Tensor[(1, 10, 14), float32] */;
    %11 = cast(%8, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
    %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
    %13 = cast(%10, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
    %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%13, %14) /* ty=Tensor[(?, 10, 14), bool] */
  };
  %15() /* ty=Tensor[(?, 10, 14), bool] */
}

def @func_7163() -> (Tensor[(1, 10, 14), float64],) {
  %18 = fn () -> (Tensor[(1, 10, 14), float64],) {
    %16 = @func_7158() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(4, 13, 7), int8], Tensor[(1014), bool]) */;
    %17 = %16.0;
    (%17,)
  };
  %18() /* ty=(Tensor[(1, 10, 14), float64],) */
}

def @func_7183(%var_7175: Tensor[(216), float32]) -> (Tensor[(1, 10, 14), float64], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) {
  %19 = cast(%var_7175, dtype="float32") /* ty=Tensor[(216), float32] */;
  %20 = reshape(%19, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float32] */;
  %21 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %22 = @func_3299(%20) /* ty=Tensor[(2, 9, 12), uint8] */;
  (%21, %22, %var_7175)
}

def @func_1653(%var_1641: bool, %var_1642: Tensor[(16, 9, 16), bool]) -> Tensor[(16, 9, 16), bool] {
  %23 = cast(%var_1641, dtype="bool") /* ty=bool */;
  %24 = cast(%var_1642, dtype="bool") /* ty=Tensor[(16, 9, 16), bool] */;
  logical_and(%23, %24) /* ty=Tensor[(16, 9, 16), bool] */
}

def @func_8876() -> (Tensor[(1, 10, 14), float64], Tensor[(1, 10, 14), float32]) {
  %25 = @func_8741() /* ty=(Tensor[(1, 10, 14), float64],) */;
  %26 = %25.0;
  %27 = @func_6177() /* ty=Tensor[(1, 10, 14), float32] */;
  (%26, %27)
}

def @func_9451() -> (Tensor[(1, 10, 14), float32], Tensor[(6, 13, 13), bool], Tensor[(1014), bool], Tensor[(1, 10, 14), float64], bool) {
  %39 = fn () -> (Tensor[(1, 10, 14), float32], Tensor[(6, 13, 13), bool], Tensor[(1014), bool], Tensor[(1, 10, 14), float64], bool) {
    %28 = @func_7704() /* ty=(Tensor[(1, 10, 14), float32],) */;
    %29 = cast(meta[relay.Constant][0] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
    %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
    %31 = reshape(%29, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
    %32 = reshape(%30, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
    %33 = @func_8876() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(1, 10, 14), float32]) */;
    %34 = @func_8827() /* ty=(bool,) */;
    %35 = %28.0;
    %36 = @func_1002(%31, %32) /* ty=Tensor[(6, 13, 13), bool] */;
    %37 = %33.0;
    %38 = %34.0;
    (%35, %36, meta[relay.Constant][0] /* ty=Tensor[(1014), bool] */, %37, %38)
  };
  %39() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(6, 13, 13), bool], Tensor[(1014), bool], Tensor[(1, 10, 14), float64], bool) */
}

def @func_8033() -> (Tensor[(216), float32], Tensor[(?, 10, 14), uint64]) {
  @func_8031() /* ty=(Tensor[(216), float32], Tensor[(?, 10, 14), uint64]) */
}

def @func_3435(%var_3434: Tensor[(7, 15, 3), float32]) -> (Tensor[(7, 15, 3), float32],) {
  %42 = fn (%var_3413: Tensor[(7, 15, 3), float32]) -> (Tensor[(7, 15, 3), float32],) {
    %40 = cast(%var_3413, dtype="float32") /* ty=Tensor[(7, 15, 3), float32] */;
    %41 = acosh(%40) /* ty=Tensor[(7, 15, 3), float32] */;
    (%41,)
  };
  %42(%var_3434) /* ty=(Tensor[(7, 15, 3), float32],) */
}

def @func_6177() -> Tensor[(1, 10, 14), float32] {
  %43 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %44 = %43.0;
  %45 = cast(%44, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  sqrt(%45) /* ty=Tensor[(1, 10, 14), float32] */
}

def @func_7547(%var_7545: Tensor[(3, 10, 14), float64]) -> (Tensor[(1, 10, 14), float32], Tensor[(3, 10, 14), int8]) {
  @func_7544(%var_7545) /* ty=(Tensor[(1, 10, 14), float32], Tensor[(3, 10, 14), int8]) */
}

def @func_7948() -> Tensor[(1, 10, 14), float64] {
  @func_6243() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_4774(%var_4772: Tensor[(12, 3, 5), float64], %var_4773: Tensor[(105, 3), float32]) -> (Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(16, 9, 16), bool], Tensor[(12, 3, 5), float64], Tensor[(7, 15, 3), float32], Tensor[(105, 3), float32]) {
  %67 = fn (%var_4732: Tensor[(12, 3, 5), float64], %var_4768: Tensor[(105, 3), float32]) -> (Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(16, 9, 16), bool], Tensor[(12, 3, 5), float64], Tensor[(7, 15, 3), float32], Tensor[(105, 3), float32]) {
    %46 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(2304), bool] */, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %48 = reshape(%46, newshape=[]) /* ty=bool */;
    %49 = reshape(%47, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), bool] */;
    %50 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %51 = cast(meta[relay.Constant][1] /* ty=Tensor[(2304), bool] */, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %52 = reshape(%50, newshape=[]) /* ty=bool */;
    %53 = reshape(%51, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), bool] */;
    %54 = cast(%var_4732, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
    %55 = acosh(%54) /* ty=Tensor[(12, 3, 5), float64] */;
    %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
    %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
    %58 = cast(%55, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %60 = cast(%var_4768, dtype="float32") /* ty=Tensor[(105, 3), float32] */;
    %61 = reshape(%60, newshape=[7, 15, 3]) /* ty=Tensor[(7, 15, 3), float32] */;
    %62 = @func_3433(%61) /* ty=(Tensor[(7, 15, 3), float32],) */;
    %63 = @func_1653(%48, %49) /* ty=Tensor[(16, 9, 16), bool] */;
    %64 = @func_1653(%52, %53) /* ty=Tensor[(16, 9, 16), bool] */;
    %65 = power(%58, %59) /* ty=Tensor[(12, 3, 5), float64] */;
    %66 = %62.0;
    (%63, True /* ty=bool */, meta[relay.Constant][1] /* ty=Tensor[(2304), bool] */, %64, %65, %66, %var_4768)
  };
  %67(%var_4772, %var_4773) /* ty=(Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(16, 9, 16), bool], Tensor[(12, 3, 5), float64], Tensor[(7, 15, 3), float32], Tensor[(105, 3), float32]) */
}

def @func_8743() -> (Tensor[(1, 10, 14), float64],) {
  @func_8741() /* ty=(Tensor[(1, 10, 14), float64],) */
}

def @func_8608() -> Tensor[(1, 10, 14), bool] {
  @func_8606() /* ty=Tensor[(1, 10, 14), bool] */
}

def @func_5924(%var_5923: Tensor[(5, 12, 5), int8]) -> (Tensor[(5, 12, 5), bool], Tensor[(5, 12, 5), float32]) {
  %75 = fn (%var_5896: Tensor[(5, 12, 5), int8]) -> (Tensor[(5, 12, 5), bool], Tensor[(5, 12, 5), float32]) {
    %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 12, 5), int8] */, dtype="bool") /* ty=Tensor[(5, 12, 5), bool] */;
    %69 = shape_of(%var_5896, dtype="int32") /* ty=Tensor[(3), int32] */;
    %70 = cast(%var_5896, dtype="bool") /* ty=Tensor[(5, 12, 5), bool] */;
    %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %72 = cast(%var_5896, dtype="float32") /* ty=Tensor[(5, 12, 5), float32] */;
    %73 = greater(%70, %71) /* ty=Tensor[(5, 12, 5), bool] */;
    %74 = cosh(%72) /* ty=Tensor[(5, 12, 5), float32] */;
    (%73, %74)
  };
  %75(%var_5923) /* ty=(Tensor[(5, 12, 5), bool], Tensor[(5, 12, 5), float32]) */
}

def @func_9464() -> Tensor[(1, 10, 14), bool] {
  @func_9462() /* ty=Tensor[(1, 10, 14), bool] */
}

def @func_9661(%var_9597: Tensor[(1, 6, 3), float32], %var_9616: Tensor[(507, 2), bool], %var_9618: Tensor[(234, 2), float64]) -> (Tensor[(1, 6, 3), float32], Tensor[(1176), float64], float32, Tensor[(1584), uint8], Tensor[(507, 2), bool], Tensor[(560), float64], Tensor[(234, 2), float64], Tensor[(1, 10, 14), float32], Tensor[(1176), float64], Tensor[(27), float32], Tensor[(686), float64]) {
  %76 = cast(%var_9597, dtype="float32") /* ty=Tensor[(1, 6, 3), float32] */;
  %77 = cast(-7.14001f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(1584), uint8] */, dtype="uint8") /* ty=Tensor[(1584), uint8] */;
  %79 = cast(%var_9616, dtype="bool") /* ty=Tensor[(507, 2), bool] */;
  %80 = cast(meta[relay.Constant][5] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %81 = cast(%var_9618, dtype="float64") /* ty=Tensor[(234, 2), float64] */;
  %82 = reshape(%77, newshape=[]) /* ty=float32 */;
  %83 = reshape(%78, newshape=[1584]) /* ty=Tensor[(1584), uint8] */;
  %84 = reshape(%79, newshape=[1014, 1]) /* ty=Tensor[(1014, 1), bool] */;
  %85 = reshape(%80, newshape=[1, 560]) /* ty=Tensor[(1, 560), float64] */;
  %86 = reshape(%81, newshape=[468, 1]) /* ty=Tensor[(468, 1), float64] */;
  %87 = @func_6011(%82, %83, %84, %85, %86) /* ty=(Tensor[(13, 10, 14), uint16], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(224), float32], Tensor[(864), float32], Tensor[(180), float64], Tensor[(1584), uint8], Tensor[(1014, 180), uint64], Tensor[(468), float64], Tensor[(1, 560), float64], Tensor[(468, 1), float64], Tensor[(1176), float64]) */;
  %88 = @func_8264() /* ty=(Tensor[(1, 10, 14), float32],) */;
  %89 = %87.12;
  %90 = cast(%89, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %91 = reshape(%90, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %92 = @func_3270(%91) /* ty=(Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %94 = reshape(%93, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %95 = @func_4613(%94) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 7, 7), float64], Tensor[(2, 9, 12), uint8], Tensor[(27), float32]) */;
  %96 = log(%76) /* ty=Tensor[(1, 6, 3), float32] */;
  %97 = %88.0;
  %98 = %92.2;
  %99 = %95.4;
  (%96, %89, -7.14001f /* ty=float32 */, meta[relay.Constant][4] /* ty=Tensor[(1584), uint8] */, %var_9616, meta[relay.Constant][5] /* ty=Tensor[(560), float64] */, %var_9618, %97, %98, %99, meta[relay.Constant][6] /* ty=Tensor[(686), float64] */)
}

def @func_5464() -> (Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) {
  %105 = fn () -> (Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) {
    %100 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 10, 14), bool] */, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
    %102 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 10, 14), bool] */, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
    %103 = logical_or(%100, %101) /* ty=Tensor[(1, 10, 14), bool] */;
    %104 = cos(%102) /* ty=Tensor[(1, 10, 14), float64] */;
    (%103, %104)
  };
  %105() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */
}

def @func_8386() -> (Tensor[(1, 10, 14), bool],) {
  %106 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %107 = %106.0;
  (%107,)
}

def @func_8038() -> Tensor[(1, 10, 14), bool] {
  @func_8036() /* ty=Tensor[(1, 10, 14), bool] */
}

def @func_9351() -> (Tensor[(1, 10, 14), float32],) {
  %108 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %109 = %108.0;
  (%109,)
}

def @func_9377() -> (Tensor[(1, 10, 14), bool],) {
  %110 = @func_8386() /* ty=(Tensor[(1, 10, 14), bool],) */;
  %111 = %110.0;
  (%111,)
}

def @func_9798() -> (Tensor[(1, 10, 14), float32],) {
  %112 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %113 = %112.0;
  (%113,)
}

def @func_1006(%var_1004: Tensor[(6, 13, 13), bool], %var_1005: Tensor[(6, 13, 13), bool]) -> Tensor[(6, 13, 13), bool] {
  @func_1002(%var_1004, %var_1005) /* ty=Tensor[(6, 13, 13), bool] */
}

def @func_1097(%var_1095: Tensor[(10, 7, 1), float32]) -> (Tensor[(10, 7, 1), float32],) {
  @func_1094(%var_1095) /* ty=(Tensor[(10, 7, 1), float32],) */
}

def @func_8449(%var_8424: Tensor[(600), float32], %var_8425: Tensor[(686), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(15, 10, 4), float32], Tensor[(600), float32], Tensor[(686), float64]) {
  %114 = cast(%var_8424, dtype="float32") /* ty=Tensor[(600), float32] */;
  %115 = cast(%var_8425, dtype="float64") /* ty=Tensor[(686), float64] */;
  %116 = reshape(%114, newshape=[15, 10, 4]) /* ty=Tensor[(15, 10, 4), float32] */;
  %117 = reshape(%115, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %118 = @func_6649(%116, %117) /* ty=(Tensor[(15, 10, 4), float32], Tensor[(10, 7, 1), float32], Tensor[(27), float32], Tensor[(10, 7, 1), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %119 = @func_7948() /* ty=Tensor[(1, 10, 14), float64] */;
  %120 = %118.0;
  (%119, %120, %var_8424, %var_8425)
}

def @func_2312(%var_2309: Tensor[(16, 11, 9), uint8], %var_2310: Tensor[(180), float64], %var_2311: Tensor[(1014), bool]) -> (Tensor[(16, 11, 9), float64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(1014), bool], Tensor[(1014), bool]) {
  @func_2307(%var_2309, %var_2310, %var_2311) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(1014), bool], Tensor[(1014), bool]) */
}

def @func_8779(%var_8760: Tensor[(420), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(3, 10, 14), int8], Tensor[(420), float64], Tensor[(224), float32]) {
  %121 = cast(%var_8760, dtype="float64") /* ty=Tensor[(420), float64] */;
  %122 = reshape(%121, newshape=[3, 10, 14]) /* ty=Tensor[(3, 10, 14), float64] */;
  %123 = @func_7544(%122) /* ty=(Tensor[(1, 10, 14), float32], Tensor[(3, 10, 14), int8]) */;
  %124 = @func_7830() /* ty=(Tensor[(224), float32],) */;
  %125 = @func_7948() /* ty=Tensor[(1, 10, 14), float64] */;
  %126 = %123.1;
  %127 = %124.0;
  (%125, %126, %var_8760, %127)
}

def @func_8281() -> (Tensor[(1176), float64],) {
  @func_8279() /* ty=(Tensor[(1176), float64],) */
}

def @func_8031() -> (Tensor[(216), float32], Tensor[(?, 10, 14), uint64]) {
  %128 = @func_6177() /* ty=Tensor[(1, 10, 14), float32] */;
  %129 = cast(meta[relay.Constant][8] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %130 = reshape(%129, newshape=[216]) /* ty=Tensor[(216), float32] */;
  %131 = @func_7183(%130) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) */;
  %132 = %131.0;
  %133 = cast(%132, dtype="uint64") /* ty=Tensor[(1, 10, 14), uint64] */;
  %134 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%128, dtype="uint64") /* ty=Tensor[(1, 10, 14), uint64] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %137 = right_shift(%135, %136) /* ty=Tensor[(?, 10, 14), uint64] */;
  (meta[relay.Constant][8] /* ty=Tensor[(216), float32] */, %137)
}

def @func_9353() -> (Tensor[(1, 10, 14), float32],) {
  @func_9351() /* ty=(Tensor[(1, 10, 14), float32],) */
}

def @func_9462() -> Tensor[(1, 10, 14), bool] {
  %138 = @func_9377() /* ty=(Tensor[(1, 10, 14), bool],) */;
  %138.0
}

def @func_2927(%var_2925: Tensor[(468), float64]) -> (Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) {
  @func_2924(%var_2925) /* ty=(Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) */
}

def @func_2307(%var_2248: Tensor[(16, 11, 9), uint8], %var_2270: Tensor[(180), float64], %var_2301: Tensor[(1014), bool]) -> (Tensor[(16, 11, 9), float64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(1014), bool], Tensor[(1014), bool]) {
  %139 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 11, 9), uint8] */, dtype="uint8") /* ty=Tensor[(16, 11, 9), uint8] */;
  %140 = shape_of(%var_2248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%var_2248, dtype="uint8") /* ty=Tensor[(16, 11, 9), uint8] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %143 = maximum(%141, %142) /* ty=Tensor[(16, 11, 9), uint8] */;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(16, 11, 9), float64] */;
  %145 = cast(%var_2270, dtype="float64") /* ty=Tensor[(180), float64] */;
  %146 = cast(%var_2270, dtype="float64") /* ty=Tensor[(180), float64] */;
  %147 = reshape(%145, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %148 = reshape(%146, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %149 = @func_468(%147, %148) /* ty=(Tensor[(3, 10, 6), bool],) */;
  %150 = cast(meta[relay.Constant][10] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %151 = reshape(%150, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %152 = cast(%var_2301, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %153 = cast(%var_2301, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %154 = reshape(%152, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
  %155 = reshape(%153, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), float32] */;
  %156 = @func_1345(%154, %155) /* ty=(Tensor[(4, 13, 7), int8], Tensor[(?, 14, 16), bool], Tensor[(224), float32], Tensor[(70), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), float32]) */;
  %157 = sqrt(%144) /* ty=Tensor[(16, 11, 9), float64] */;
  %158 = %149.0;
  %159 = @func_29(%151) /* ty=Tensor[(9, 4, 13), float64] */;
  %160 = %156.4;
  (%157, %158, %var_2270, %159, meta[relay.Constant][10] /* ty=Tensor[(468), float64] */, %160, %var_2301)
}

def @func_4025(%var_4024: Tensor[(1, 1, 14), int64]) -> (Tensor[(8, 16, 14), int64], Tensor[(8, 16, 14), int64]) {
  %167 = fn (%var_4008: Tensor[(1, 1, 14), int64]) -> (Tensor[(8, 16, 14), int64], Tensor[(8, 16, 14), int64]) {
    %161 = cast(%var_4008, dtype="int64") /* ty=Tensor[(1, 1, 14), int64] */;
    %162 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 16, 14), int64] */, dtype="int64") /* ty=Tensor[(8, 16, 14), int64] */;
    %163 = cast(%var_4008, dtype="int64") /* ty=Tensor[(1, 1, 14), int64] */;
    %164 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 16, 14), int64] */, dtype="int64") /* ty=Tensor[(8, 16, 14), int64] */;
    %165 = right_shift(%161, %162) /* ty=Tensor[(8, 16, 14), int64] */;
    %166 = bitwise_and(%163, %164) /* ty=Tensor[(8, 16, 14), int64] */;
    (%165, %166)
  };
  %167(%var_4024) /* ty=(Tensor[(8, 16, 14), int64], Tensor[(8, 16, 14), int64]) */
}

def @func_7159() -> (Tensor[(1, 10, 14), float64], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(4, 13, 7), int8], Tensor[(1014), bool]) {
  %180 = fn () -> (Tensor[(1, 10, 14), float64], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(4, 13, 7), int8], Tensor[(1014), bool]) {
    %168 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %169 = cast(meta[relay.Constant][12] /* ty=Tensor[(2304), bool] */, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %170 = reshape(%168, newshape=[]) /* ty=bool */;
    %171 = reshape(%169, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), bool] */;
    %172 = cast(meta[relay.Constant][13] /* ty=Tensor[(1014), bool] */, dtype="bool") /* ty=Tensor[(1014), bool] */;
    %173 = cast(meta[relay.Constant][13] /* ty=Tensor[(1014), bool] */, dtype="float32") /* ty=Tensor[(1014), float32] */;
    %174 = reshape(%172, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
    %175 = reshape(%173, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), float32] */;
    %176 = @func_1345(%174, %175) /* ty=(Tensor[(4, 13, 7), int8], Tensor[(?, 14, 16), bool], Tensor[(224), float32], Tensor[(70), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), float32]) */;
    %177 = @func_6243() /* ty=Tensor[(1, 10, 14), float64] */;
    %178 = @func_1653(%170, %171) /* ty=Tensor[(16, 9, 16), bool] */;
    %179 = %176.0;
    (%177, %178, False /* ty=bool */, meta[relay.Constant][12] /* ty=Tensor[(2304), bool] */, %179, meta[relay.Constant][13] /* ty=Tensor[(1014), bool] */)
  };
  %180() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(4, 13, 7), int8], Tensor[(1014), bool]) */
}

def @func_7358() -> (Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 6, 14), float32]) {
  @func_7356() /* ty=(Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 6, 14), float32]) */
}

def @func_6125(%var_6123: Tensor[(16, 10, 14), float64], %var_6124: Tensor[(1176), float64]) -> (Tensor[(16, 10, 14), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(1176), float64]) {
  @func_6121(%var_6123, %var_6124) /* ty=(Tensor[(16, 10, 14), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(1176), float64]) */
}

def @func_6894(%var_6892: bool, %var_6893: Tensor[(1176), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(11, 15, 6), bool], bool, Tensor[(990), bool], Tensor[(1176), float64], Tensor[(1176), float64]) {
  %192 = fn (%var_6845: bool, %var_6882: Tensor[(1176), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(11, 15, 6), bool], bool, Tensor[(990), bool], Tensor[(1176), float64], Tensor[(1176), float64]) {
    %181 = cast(%var_6845, dtype="bool") /* ty=bool */;
    %182 = cast(meta[relay.Constant][14] /* ty=Tensor[(990), bool] */, dtype="bool") /* ty=Tensor[(990), bool] */;
    %183 = reshape(%181, newshape=[]) /* ty=bool */;
    %184 = reshape(%182, newshape=[11, 15, 6]) /* ty=Tensor[(11, 15, 6), bool] */;
    %185 = @func_4125(%183, %184) /* ty=(Tensor[(11, 15, 6), bool],) */;
    %186 = cast(%var_6882, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %187 = reshape(%186, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %188 = @func_5861(%187) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
    %189 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
    %190 = %185.0;
    %191 = %188.2;
    (%189, %190, %var_6845, meta[relay.Constant][14] /* ty=Tensor[(990), bool] */, %191, %var_6882)
  };
  %192(%var_6892, %var_6893) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(11, 15, 6), bool], bool, Tensor[(990), bool], Tensor[(1176), float64], Tensor[(1176), float64]) */
}

def @func_3301(%var_3300: Tensor[(2, 9, 12), float32]) -> Tensor[(2, 9, 12), uint8] {
  %199 = fn (%var_3289: Tensor[(2, 9, 12), float32]) -> Tensor[(2, 9, 12), uint8] {
    %193 = cast(%var_3289, dtype="float32") /* ty=Tensor[(2, 9, 12), float32] */;
    %194 = exp(%193) /* ty=Tensor[(2, 9, 12), float32] */;
    %195 = cast(%var_3289, dtype="uint8") /* ty=Tensor[(2, 9, 12), uint8] */;
    %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
    %197 = cast(%194, dtype="uint8") /* ty=Tensor[(2, 9, 12), uint8] */;
    %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    left_shift(%197, %198) /* ty=Tensor[(2, 9, 12), uint8] */
  };
  %199(%var_3300) /* ty=Tensor[(2, 9, 12), uint8] */
}

def @func_1949(%var_1948: Tensor[(14, 6, 14), float64]) -> (Tensor[(14, 6, 14), float64],) {
  %202 = fn (%var_1943: Tensor[(14, 6, 14), float64]) -> (Tensor[(14, 6, 14), float64],) {
    %200 = cast(%var_1943, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
    %201 = atan(%200) /* ty=Tensor[(14, 6, 14), float64] */;
    (%201,)
  };
  %202(%var_1948) /* ty=(Tensor[(14, 6, 14), float64],) */
}

def @func_7186(%var_7184: Tensor[(216), float32]) -> (Tensor[(1, 10, 14), float64], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) {
  @func_7183(%var_7184) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) */
}

def @func_8708() -> Tensor[(?, 10, 14), uint64] {
  %203 = @func_8031() /* ty=(Tensor[(216), float32], Tensor[(?, 10, 14), uint64]) */;
  %203.1
}

def @func_6476() -> (Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) {
  %226 = fn () -> (Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) {
    %204 = @func_5686() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) */;
    %205 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
    %206 = cast(%205, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
    %207 = acosh(%206) /* ty=Tensor[(1, 10, 14), float32] */;
    %208 = cast(%205, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
    %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
    %210 = cast(%207, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
    %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %212 = logical_and(%210, %211) /* ty=Tensor[(?, 10, 14), bool] */;
    %213 = cast(%212, dtype="int16") /* ty=Tensor[(?, 10, 14), int16] */;
    %214 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
    %215 = cast(%207, dtype="int16") /* ty=Tensor[(1, 10, 14), int16] */;
    %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %217 = cast(meta[relay.Constant][15] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %218 = reshape(%217, newshape=[14, 6, 14]) /* ty=Tensor[(14, 6, 14), float64] */;
    %219 = @func_1947(%218) /* ty=(Tensor[(14, 6, 14), float64],) */;
    %220 = %219.0;
    %221 = cast(%220, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
    %222 = %204.1;
    %223 = bitwise_or(%215, %216) /* ty=Tensor[(?, 10, 14), int16] */;
    %224 = erf(%221) /* ty=Tensor[(14, 6, 14), float64] */;
    %225 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
    (%222, meta[relay.Constant][15] /* ty=Tensor[(1176), float64] */, %223, %224, %225)
  };
  %226() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */
}

def @func_9800() -> (Tensor[(1, 10, 14), float32],) {
  @func_9798() /* ty=(Tensor[(1, 10, 14), float32],) */
}

def @func_3936(%var_3935: Tensor[(9, 1, 3), float32]) -> (Tensor[(9, ?, 3), float64], Tensor[(5, 16, 7), int64], Tensor[(560), float64], Tensor[(180), float64], Tensor[(6, 78), float64], Tensor[(1176), float64], Tensor[(3, 10, 6), bool], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) {
  %257 = fn (%var_3879: Tensor[(9, 1, 3), float32]) -> (Tensor[(9, ?, 3), float64], Tensor[(5, 16, 7), int64], Tensor[(560), float64], Tensor[(180), float64], Tensor[(6, 78), float64], Tensor[(1176), float64], Tensor[(3, 10, 6), bool], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) {
    %227 = cast(%var_3879, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
    %228 = asinh(%227) /* ty=Tensor[(9, 1, 3), float32] */;
    %229 = cast(%var_3879, dtype="float64") /* ty=Tensor[(9, 1, 3), float64] */;
    %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
    %231 = cast(%228, dtype="float64") /* ty=Tensor[(9, 1, 3), float64] */;
    %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %233 = cast(meta[relay.Constant][16] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
    %234 = cast(meta[relay.Constant][17] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %235 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 78), float64] */, dtype="float64") /* ty=Tensor[(6, 78), float64] */;
    %236 = cast(meta[relay.Constant][19] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %237 = reshape(%233, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), float64] */;
    %238 = reshape(%234, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %239 = reshape(%235, newshape=[468]) /* ty=Tensor[(468), float64] */;
    %240 = reshape(%236, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %241 = @func_3808(%237, %238, %239, %240) /* ty=(Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) */;
    %242 = cast(meta[relay.Constant][17] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %243 = cast(meta[relay.Constant][17] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %244 = reshape(%242, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
    %245 = reshape(%243, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
    %246 = @func_468(%244, %245) /* ty=(Tensor[(3, 10, 6), bool],) */;
    %247 = cast(meta[relay.Constant][20] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %248 = reshape(%247, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
    %249 = @func_1094(%248) /* ty=(Tensor[(10, 7, 1), float32],) */;
    %250 = cast(meta[relay.Constant][21] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
    %251 = reshape(%250, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float32] */;
    %252 = add(%231, %232) /* ty=Tensor[(9, ?, 3), float64] */;
    %253 = %241.0;
    %254 = %246.0;
    %255 = %249.0;
    %256 = @func_3299(%251) /* ty=Tensor[(2, 9, 12), uint8] */;
    (%252, %253, meta[relay.Constant][16] /* ty=Tensor[(560), float64] */, meta[relay.Constant][17] /* ty=Tensor[(180), float64] */, meta[relay.Constant][18] /* ty=Tensor[(6, 78), float64] */, meta[relay.Constant][19] /* ty=Tensor[(1176), float64] */, %254, %255, meta[relay.Constant][20] /* ty=Tensor[(70), float32] */, %256, meta[relay.Constant][21] /* ty=Tensor[(216), float32] */)
  };
  %257(%var_3935) /* ty=(Tensor[(9, ?, 3), float64], Tensor[(5, 16, 7), int64], Tensor[(560), float64], Tensor[(180), float64], Tensor[(6, 78), float64], Tensor[(1176), float64], Tensor[(3, 10, 6), bool], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) */
}

def @func_7445(%var_7443: uint64, %var_7444: Tensor[(24), uint64]) -> (Tensor[(?, 10, 14), int16], Tensor[(8, 3, 1), bool], uint64, Tensor[(24), uint64]) {
  @func_7441(%var_7443, %var_7444) /* ty=(Tensor[(?, 10, 14), int16], Tensor[(8, 3, 1), bool], uint64, Tensor[(24), uint64]) */
}

def @func_8453(%var_8451: Tensor[(600), float32], %var_8452: Tensor[(686), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(15, 10, 4), float32], Tensor[(600), float32], Tensor[(686), float64]) {
  @func_8449(%var_8451, %var_8452) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(15, 10, 4), float32], Tensor[(600), float32], Tensor[(686), float64]) */
}

def @func_8741() -> (Tensor[(1, 10, 14), float64],) {
  %258 = @func_6831() /* ty=Tensor[(1, 10, 14), float64] */;
  (%258,)
}

def @func_9666(%var_9663: Tensor[(1, 6, 3), float32], %var_9664: Tensor[(507, 2), bool], %var_9665: Tensor[(234, 2), float64]) -> (Tensor[(1, 6, 3), float32], Tensor[(1176), float64], float32, Tensor[(1584), uint8], Tensor[(507, 2), bool], Tensor[(560), float64], Tensor[(234, 2), float64], Tensor[(1, 10, 14), float32], Tensor[(1176), float64], Tensor[(27), float32], Tensor[(686), float64]) {
  @func_9661(%var_9663, %var_9664, %var_9665) /* ty=(Tensor[(1, 6, 3), float32], Tensor[(1176), float64], float32, Tensor[(1584), uint8], Tensor[(507, 2), bool], Tensor[(560), float64], Tensor[(234, 2), float64], Tensor[(1, 10, 14), float32], Tensor[(1176), float64], Tensor[(27), float32], Tensor[(686), float64]) */
}

def @func_3272(%var_3271: Tensor[(1176), float64]) -> (Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) {
  %278 = fn (%var_3254: Tensor[(1176), float64]) -> (Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) {
    %259 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 9, 2), float32] */, dtype="float32") /* ty=Tensor[(14, 9, 2), float32] */;
    %260 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(14, 9, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %261 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 9, 2), float32] */, dtype="float32") /* ty=Tensor[(14, 9, 2), float32] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %263 = divide(%261, %262) /* ty=Tensor[(14, 9, 2), float32] */;
    %264 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 9, 2), float32] */, dtype="bool") /* ty=Tensor[(14, 9, 2), bool] */;
    %265 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(14, 9, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %266 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 9, 2), float32] */, dtype="bool") /* ty=Tensor[(14, 9, 2), bool] */;
    %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %268 = less(%266, %267) /* ty=Tensor[(14, 9, 2), bool] */;
    %269 = cast(%268, dtype="uint16") /* ty=Tensor[(14, 9, 2), uint16] */;
    %270 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
    %271 = cast(%263, dtype="uint16") /* ty=Tensor[(14, 9, 2), uint16] */;
    %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %273 = cast(%var_3254, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %274 = reshape(%273, newshape=[14, 6, 14]) /* ty=Tensor[(14, 6, 14), float64] */;
    %275 = @func_1947(%274) /* ty=(Tensor[(14, 6, 14), float64],) */;
    %276 = logical_xor(%271, %272) /* ty=Tensor[(14, 9, 2), uint16] */;
    %277 = %275.0;
    (%276, %277, %var_3254)
  };
  %278(%var_3271) /* ty=(Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */
}

def @func_7688(%var_7687: bool) -> (Tensor[(1, 10, 14), float64], Tensor[(?, 10, 14), bool], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool]) {
  %287 = fn (%var_7665: bool) -> (Tensor[(1, 10, 14), float64], Tensor[(?, 10, 14), bool], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool]) {
    %279 = @func_7225() /* ty=(Tensor[(?, 10, 14), bool],) */;
    %280 = cast(%var_7665, dtype="bool") /* ty=bool */;
    %281 = cast(meta[relay.Constant][24] /* ty=Tensor[(2304), bool] */, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %282 = reshape(%280, newshape=[]) /* ty=bool */;
    %283 = reshape(%281, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), bool] */;
    %284 = @func_6243() /* ty=Tensor[(1, 10, 14), float64] */;
    %285 = %279.0;
    %286 = @func_1653(%282, %283) /* ty=Tensor[(16, 9, 16), bool] */;
    (%284, %285, %286, %var_7665, meta[relay.Constant][24] /* ty=Tensor[(2304), bool] */)
  };
  %287(%var_7687) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(?, 10, 14), bool], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool]) */
}

def @func_8999() -> bool {
  %289 = fn () -> bool {
    %288 = @func_8827() /* ty=(bool,) */;
    %288.0
  };
  %289() /* ty=bool */
}

def @func_7227() -> (Tensor[(?, 10, 14), bool],) {
  @func_7225() /* ty=(Tensor[(?, 10, 14), bool],) */
}

def @func_7603(%var_7601: Tensor[(420), int16]) -> (Tensor[(?, 10, 14), bool], Tensor[(3, 10, 14), bool], Tensor[(420), int16], Tensor[(3, 10, 14), bool]) {
  @func_7600(%var_7601) /* ty=(Tensor[(?, 10, 14), bool], Tensor[(3, 10, 14), bool], Tensor[(420), int16], Tensor[(3, 10, 14), bool]) */
}

def @func_3506(%var_3504: float64, %var_3505: Tensor[(15, 7, 8), float64]) -> Tensor[(15, 7, 8), float64] {
  %292 = fn (%var_3497: float64, %var_3498: Tensor[(15, 7, 8), float64]) -> Tensor[(15, 7, 8), float64] {
    %290 = cast(%var_3497, dtype="float64") /* ty=float64 */;
    %291 = cast(%var_3498, dtype="float64") /* ty=Tensor[(15, 7, 8), float64] */;
    divide(%290, %291) /* ty=Tensor[(15, 7, 8), float64] */
  };
  %292(%var_3504, %var_3505) /* ty=Tensor[(15, 7, 8), float64] */
}

def @func_7356() -> (Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 6, 14), float32]) {
  %293 = cast(meta[relay.Constant][25] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %294 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
  %295 = %294.3;
  %296 = cast(%295, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
  %297 = reshape(%293, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
  %298 = reshape(%296, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %299 = @func_6121(%297, %298) /* ty=(Tensor[(16, 10, 14), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(1176), float64]) */;
  %300 = cast(%295, dtype="float32") /* ty=Tensor[(14, 6, 14), float32] */;
  %301 = %299.3;
  %302 = log2(%300) /* ty=Tensor[(14, 6, 14), float32] */;
  (%301, meta[relay.Constant][25] /* ty=Tensor[(2240), float64] */, %302)
}

def @func_1568(%var_1563: float32, %var_1564: Tensor[(6, 16, 9), float32], %var_1565: Tensor[(6, 16, 9), float32], %var_1566: Tensor[(6, 16, 9), float32], %var_1567: Tensor[(112, 2), float32]) -> (Tensor[(6, 16, 9), float32], Tensor[(6, 16, 9), int64], Tensor[(6, 16, 9), bool], Tensor[(?, 14, 16), bool], Tensor[(112, 2), float32]) {
  %319 = fn (%var_1530: float32, %var_1531: Tensor[(6, 16, 9), float32], %var_1539: Tensor[(6, 16, 9), float32], %var_1543: Tensor[(6, 16, 9), float32], %var_1559: Tensor[(112, 2), float32]) -> (Tensor[(6, 16, 9), float32], Tensor[(6, 16, 9), int64], Tensor[(6, 16, 9), bool], Tensor[(?, 14, 16), bool], Tensor[(112, 2), float32]) {
    %303 = cast(%var_1530, dtype="float32") /* ty=float32 */;
    %304 = cast(%var_1531, dtype="float32") /* ty=Tensor[(6, 16, 9), float32] */;
    %305 = cast(%var_1539, dtype="int64") /* ty=Tensor[(6, 16, 9), int64] */;
    %306 = shape_of(%var_1531, dtype="int32") /* ty=Tensor[(3), int32] */;
    %307 = cast(%var_1531, dtype="int64") /* ty=Tensor[(6, 16, 9), int64] */;
    %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %309 = cast(%var_1543, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
    %310 = shape_of(%var_1539, dtype="int32") /* ty=Tensor[(3), int32] */;
    %311 = cast(%var_1539, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
    %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %313 = cast(%var_1559, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
    %314 = reshape(%313, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
    %315 = subtract(%303, %304) /* ty=Tensor[(6, 16, 9), float32] */;
    %316 = bitwise_xor(%307, %308) /* ty=Tensor[(6, 16, 9), int64] */;
    %317 = less(%311, %312) /* ty=Tensor[(6, 16, 9), bool] */;
    %318 = @func_1147(%314) /* ty=Tensor[(?, 14, 16), bool] */;
    (%315, %316, %317, %318, %var_1559)
  };
  %319(%var_1563, %var_1564, %var_1565, %var_1566, %var_1567) /* ty=(Tensor[(6, 16, 9), float32], Tensor[(6, 16, 9), int64], Tensor[(6, 16, 9), bool], Tensor[(?, 14, 16), bool], Tensor[(112, 2), float32]) */
}

def @func_8231(%var_8230: Tensor[(9, 7, 13), int8]) -> Tensor[(9, 7, 13), int8] {
  %324 = fn (%var_8222: Tensor[(9, 7, 13), int8]) -> Tensor[(9, 7, 13), int8] {
    %320 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 7, 13), int8] */, dtype="int8") /* ty=Tensor[(9, 7, 13), int8] */;
    %321 = shape_of(%var_8222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %322 = cast(%var_8222, dtype="int8") /* ty=Tensor[(9, 7, 13), int8] */;
    %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    add(%322, %323) /* ty=Tensor[(9, 7, 13), int8] */
  };
  %324(%var_8230) /* ty=Tensor[(9, 7, 13), int8] */
}

def @func_5761(%var_5760: Tensor[(7, 2), int64]) -> (Tensor[(8, 16, 14), int64], Tensor[(7, 2), int64], Tensor[(?, 10, 14), float32]) {
  %345 = fn (%var_5725: Tensor[(7, 2), int64]) -> (Tensor[(8, 16, 14), int64], Tensor[(7, 2), int64], Tensor[(?, 10, 14), float32]) {
    %325 = cast(%var_5725, dtype="int64") /* ty=Tensor[(7, 2), int64] */;
    %326 = reshape(%325, newshape=[1, 1, 14]) /* ty=Tensor[(1, 1, 14), int64] */;
    %327 = @func_4023(%326) /* ty=(Tensor[(8, 16, 14), int64], Tensor[(8, 16, 14), int64]) */;
    %328 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
    %329 = %328.1;
    %330 = cast(%329, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
    %331 = exp(%330) /* ty=Tensor[(1, 10, 14), float64] */;
    %332 = cast(%329, dtype="uint32") /* ty=Tensor[(1, 10, 14), uint32] */;
    %333 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
    %334 = cast(%331, dtype="uint32") /* ty=Tensor[(1, 10, 14), uint32] */;
    %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %336 = minimum(%334, %335) /* ty=Tensor[(?, 10, 14), uint32] */;
    %337 = cast(%336, dtype="float32") /* ty=Tensor[(?, 10, 14), float32] */;
    %338 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
    %339 = cast(%331, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
    %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %341 = power(%339, %340) /* ty=Tensor[(?, 10, 14), float32] */;
    %342 = cast(%341, dtype="float32") /* ty=Tensor[(?, 10, 14), float32] */;
    %343 = %327.1;
    %344 = sigmoid(%342) /* ty=Tensor[(?, 10, 14), float32] */;
    (%343, %var_5725, %344)
  };
  %345(%var_5760) /* ty=(Tensor[(8, 16, 14), int64], Tensor[(7, 2), int64], Tensor[(?, 10, 14), float32]) */
}

def @func_9747() -> (Tensor[(1, 10, 14), bool], Tensor[(14, 6, 14), float64], Tensor[(1176), float64], Tensor[(?, 10, 14), bool]) {
  @func_9745() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(14, 6, 14), float64], Tensor[(1176), float64], Tensor[(?, 10, 14), bool]) */
}

def @func_8944() -> Tensor[(1176), float64] {
  %347 = fn () -> Tensor[(1176), float64] {
    %346 = @func_8279() /* ty=(Tensor[(1176), float64],) */;
    %346.0
  };
  %347() /* ty=Tensor[(1176), float64] */
}

def @func_5566(%var_5564: Tensor[(70), float32], %var_5565: Tensor[(1176), float64]) -> (Tensor[(1, 10, 14), bool], Tensor[(70), float32], Tensor[(14, 6, 14), float64], Tensor[(1176), float64], Tensor[(10, 7, 1), float32]) {
  %360 = fn (%var_5538: Tensor[(70), float32], %var_5546: Tensor[(1176), float64]) -> (Tensor[(1, 10, 14), bool], Tensor[(70), float32], Tensor[(14, 6, 14), float64], Tensor[(1176), float64], Tensor[(10, 7, 1), float32]) {
    %348 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
    %349 = cast(%var_5546, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %350 = reshape(%349, newshape=[14, 6, 14]) /* ty=Tensor[(14, 6, 14), float64] */;
    %351 = @func_1947(%350) /* ty=(Tensor[(14, 6, 14), float64],) */;
    %352 = cast(%var_5538, dtype="float32") /* ty=Tensor[(70), float32] */;
    %353 = reshape(%352, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
    %354 = @func_1094(%353) /* ty=(Tensor[(10, 7, 1), float32],) */;
    %355 = %354.0;
    %356 = cast(%355, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
    %357 = %348.0;
    %358 = %351.0;
    %359 = exp(%356) /* ty=Tensor[(10, 7, 1), float32] */;
    (%357, %var_5538, %358, %var_5546, %359)
  };
  %360(%var_5564, %var_5565) /* ty=(Tensor[(1, 10, 14), bool], Tensor[(70), float32], Tensor[(14, 6, 14), float64], Tensor[(1176), float64], Tensor[(10, 7, 1), float32]) */
}

def @func_6121(%var_6091: Tensor[(16, 10, 14), float64], %var_6114: Tensor[(1176), float64]) -> (Tensor[(16, 10, 14), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(1176), float64]) {
  %361 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %362 = cast(%361, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %363 = cast(%var_6091, dtype="bool") /* ty=Tensor[(16, 10, 14), bool] */;
  %364 = cast(%var_6114, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %365 = reshape(%364, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %366 = @func_5861(%365) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %367 = %366.2;
  %368 = cast(%367, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %369 = reshape(%368, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %370 = @func_3270(%369) /* ty=(Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %371 = greater(%362, %363) /* ty=Tensor[(16, 10, 14), bool] */;
  %372 = %370.2;
  (%371, %367, %var_6114, %372)
}

def @func_7950() -> Tensor[(1, 10, 14), float64] {
  @func_7948() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_7846(%var_7844: uint8, %var_7845: Tensor[(11, 13, 7), uint8]) -> Tensor[(11, 13, 7), uint8] {
  %375 = fn (%var_7838: uint8, %var_7839: Tensor[(11, 13, 7), uint8]) -> Tensor[(11, 13, 7), uint8] {
    %373 = cast(%var_7838, dtype="uint8") /* ty=uint8 */;
    %374 = cast(%var_7839, dtype="uint8") /* ty=Tensor[(11, 13, 7), uint8] */;
    add(%373, %374) /* ty=Tensor[(11, 13, 7), uint8] */
  };
  %375(%var_7844, %var_7845) /* ty=Tensor[(11, 13, 7), uint8] */
}

def @func_5888(%var_5870: Tensor[(8, 28), float32]) -> (Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) {
  %376 = cast(-5.80748f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %377 = cast(meta[relay.Constant][27] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %378 = cast(meta[relay.Constant][27] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %379 = cast(meta[relay.Constant][27] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %380 = cast(%var_5870, dtype="float32") /* ty=Tensor[(8, 28), float32] */;
  %381 = reshape(%376, newshape=[]) /* ty=float32 */;
  %382 = reshape(%377, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
  %383 = reshape(%378, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
  %384 = reshape(%379, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
  %385 = reshape(%380, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
  %386 = @func_1562(%381, %382, %383, %384, %385) /* ty=(Tensor[(6, 16, 9), float32], Tensor[(6, 16, 9), int64], Tensor[(6, 16, 9), bool], Tensor[(?, 14, 16), bool], Tensor[(112, 2), float32]) */;
  %387 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %388 = %386.3;
  (%387, %388, -5.80748f /* ty=float32 */, meta[relay.Constant][27] /* ty=Tensor[(864), float32] */, %var_5870)
}

def @func_32(%var_30: Tensor[(9, 4, 13), float64]) -> Tensor[(9, 4, 13), float64] {
  @func_29(%var_30) /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_8606() -> Tensor[(1, 10, 14), bool] {
  @func_8036() /* ty=Tensor[(1, 10, 14), bool] */
}

def @func_9849() -> Tensor[(1, 10, 14), float64] {
  %389 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %389.1
}

def @func_5687() -> (Tensor[(1, 10, 14), bool], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) {
  %395 = fn () -> (Tensor[(1, 10, 14), bool], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) {
    %390 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
    %391 = cast(meta[relay.Constant][28] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %392 = reshape(%391, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
    %393 = %390.0;
    %394 = @func_1147(%392) /* ty=Tensor[(?, 14, 16), bool] */;
    (%393, %394, meta[relay.Constant][28] /* ty=Tensor[(224), float32] */)
  };
  %395() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(?, 14, 16), bool], Tensor[(224), float32]) */
}

def @func_1149(%var_1148: Tensor[(1, 14, 16), float32]) -> Tensor[(?, 14, 16), bool] {
  %407 = fn (%var_1135: Tensor[(1, 14, 16), float32]) -> Tensor[(?, 14, 16), bool] {
    %396 = cast(%var_1135, dtype="float32") /* ty=Tensor[(1, 14, 16), float32] */;
    %397 = sin(%396) /* ty=Tensor[(1, 14, 16), float32] */;
    %398 = cast(%397, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
    %399 = shape_of(%var_1135, dtype="int32") /* ty=Tensor[(3), int32] */;
    %400 = cast(%var_1135, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %402 = not_equal(%400, %401) /* ty=Tensor[(?, 14, 16), bool] */;
    %403 = cast(%402, dtype="bool") /* ty=Tensor[(?, 14, 16), bool] */;
    %404 = shape_of(%var_1135, dtype="int32") /* ty=Tensor[(3), int32] */;
    %405 = cast(%var_1135, dtype="bool") /* ty=Tensor[(1, 14, 16), bool] */;
    %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%405, %406) /* ty=Tensor[(?, 14, 16), bool] */
  };
  %407(%var_1148) /* ty=Tensor[(?, 14, 16), bool] */
}

def @func_7600(%var_7595: Tensor[(420), int16]) -> (Tensor[(?, 10, 14), bool], Tensor[(3, 10, 14), bool], Tensor[(420), int16], Tensor[(3, 10, 14), bool]) {
  %408 = @func_7225() /* ty=(Tensor[(?, 10, 14), bool],) */;
  %409 = cast(%var_7595, dtype="int16") /* ty=Tensor[(420), int16] */;
  %410 = reshape(%409, newshape=[3, 10, 14]) /* ty=Tensor[(3, 10, 14), int16] */;
  %411 = cast(%var_7595, dtype="int16") /* ty=Tensor[(420), int16] */;
  %412 = reshape(%411, newshape=[3, 10, 14]) /* ty=Tensor[(3, 10, 14), int16] */;
  %413 = %408.0;
  %414 = @func_6755(%410) /* ty=Tensor[(3, 10, 14), bool] */;
  %415 = @func_6755(%412) /* ty=Tensor[(3, 10, 14), bool] */;
  (%413, %414, %var_7595, %415)
}

def @func_8710() -> Tensor[(?, 10, 14), uint64] {
  @func_8708() /* ty=Tensor[(?, 10, 14), uint64] */
}

def @func_8828() -> (bool,) {
  %418 = fn () -> (bool,) {
    %416 = @func_7158() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(4, 13, 7), int8], Tensor[(1014), bool]) */;
    %417 = %416.2;
    (%417,)
  };
  %418() /* ty=(bool,) */
}

def @func_8156(%var_8086: Tensor[(14, 1), int64]) -> (Tensor[(216), float32], Tensor[(8, 16, 14), int64], Tensor[(1, 10, 14), float64], Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 1176), float32]) {
  %419 = @func_8031() /* ty=(Tensor[(216), float32], Tensor[(?, 10, 14), uint64]) */;
  %420 = cast(%var_8086, dtype="int64") /* ty=Tensor[(14, 1), int64] */;
  %421 = reshape(%420, newshape=[7, 2]) /* ty=Tensor[(7, 2), int64] */;
  %422 = @func_5759(%421) /* ty=(Tensor[(8, 16, 14), int64], Tensor[(7, 2), int64], Tensor[(?, 10, 14), float32]) */;
  %423 = cast(meta[relay.Constant][29] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %424 = cast(meta[relay.Constant][30] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %425 = reshape(%423, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), float64] */;
  %426 = reshape(%424, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %427 = @func_6121(%425, %426) /* ty=(Tensor[(16, 10, 14), bool], Tensor[(1176), float64], Tensor[(1176), float64], Tensor[(1176), float64]) */;
  %428 = cast(meta[relay.Constant][30] /* ty=Tensor[(1176), float64] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %429 = cast(%var_8086, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %430 = %419.0;
  %431 = %422.0;
  %432 = @func_6243() /* ty=Tensor[(1, 10, 14), float64] */;
  %433 = %427.3;
  %434 = mod(%428, %429) /* ty=Tensor[(14, 1176), float32] */;
  (%430, %431, %432, %433, meta[relay.Constant][29] /* ty=Tensor[(2240), float64] */, %434)
}

def @func_8388() -> (Tensor[(1, 10, 14), bool],) {
  @func_8386() /* ty=(Tensor[(1, 10, 14), bool],) */
}

def @func_6652(%var_6650: Tensor[(15, 10, 4), float32], %var_6651: Tensor[(686), float64]) -> (Tensor[(15, 10, 4), float32], Tensor[(10, 7, 1), float32], Tensor[(27), float32], Tensor[(10, 7, 1), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  %449 = fn (%var_6599: Tensor[(15, 10, 4), float32], %var_6642: Tensor[(686), float64]) -> (Tensor[(15, 10, 4), float32], Tensor[(10, 7, 1), float32], Tensor[(27), float32], Tensor[(10, 7, 1), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
    %435 = cast(%var_6599, dtype="float32") /* ty=Tensor[(15, 10, 4), float32] */;
    %436 = cast(meta[relay.Constant][31] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
    %437 = reshape(%436, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
    %438 = @func_3934(%437) /* ty=(Tensor[(9, ?, 3), float64], Tensor[(5, 16, 7), int64], Tensor[(560), float64], Tensor[(180), float64], Tensor[(6, 78), float64], Tensor[(1176), float64], Tensor[(3, 10, 6), bool], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) */;
    %439 = %438.7;
    %440 = cast(%439, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
    %441 = reshape(%440, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
    %442 = @func_1094(%441) /* ty=(Tensor[(10, 7, 1), float32],) */;
    %443 = cast(%var_6642, dtype="float64") /* ty=Tensor[(686), float64] */;
    %444 = reshape(%443, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
    %445 = @func_4613(%444) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 7, 7), float64], Tensor[(2, 9, 12), uint8], Tensor[(27), float32]) */;
    %446 = asin(%435) /* ty=Tensor[(15, 10, 4), float32] */;
    %447 = %442.0;
    %448 = %445.2;
    (%446, %439, meta[relay.Constant][31] /* ty=Tensor[(27), float32] */, %447, %448, %var_6642)
  };
  %449(%var_6650, %var_6651) /* ty=(Tensor[(15, 10, 4), float32], Tensor[(10, 7, 1), float32], Tensor[(27), float32], Tensor[(10, 7, 1), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */
}

def @func_8502() -> (Tensor[(9, 7, 10), float64], Tensor[(9, 7, 10), float32]) {
  %450 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 10), float64] */;
  %451 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 7, 10), float64] */, dtype="float32") /* ty=Tensor[(9, 7, 10), float32] */;
  %452 = cosh(%450) /* ty=Tensor[(9, 7, 10), float64] */;
  %453 = sinh(%451) /* ty=Tensor[(9, 7, 10), float32] */;
  (%452, %453)
}

def @func_7259(%var_7257: Tensor[(2, 13, 15), uint16], %var_7258: Tensor[(2, 13, 15), uint16]) -> (Tensor[(2, 13, 15), uint16],) {
  %459 = fn (%var_7250: Tensor[(2, 13, 15), uint16], %var_7251: Tensor[(2, 13, 15), uint16]) -> (Tensor[(2, 13, 15), uint16],) {
    %454 = cast(%var_7251, dtype="uint16") /* ty=Tensor[(2, 13, 15), uint16] */;
    %455 = shape_of(%var_7250, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(%var_7250, dtype="uint16") /* ty=Tensor[(2, 13, 15), uint16] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %458 = add(%456, %457) /* ty=Tensor[(2, 13, 15), uint16] */;
    (%458,)
  };
  %459(%var_7257, %var_7258) /* ty=(Tensor[(2, 13, 15), uint16],) */
}

def @func_9209(%var_9194: Tensor[(7, 3, 5), int16]) -> (Tensor[(7, 3, 5), int16], Tensor[(1, 10, 14), float64], Tensor[(112, 2), float32]) {
  %460 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 3, 5), int16] */, dtype="int16") /* ty=Tensor[(7, 3, 5), int16] */;
  %461 = shape_of(%var_9194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%var_9194, dtype="int16") /* ty=Tensor[(7, 3, 5), int16] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %464 = cast(meta[relay.Constant][34] /* ty=Tensor[(112, 2), float32] */, dtype="float32") /* ty=Tensor[(112, 2), float32] */;
  %465 = reshape(%464, newshape=[8, 28]) /* ty=Tensor[(8, 28), float32] */;
  %466 = @func_5888(%465) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) */;
  %467 = subtract(%462, %463) /* ty=Tensor[(7, 3, 5), int16] */;
  %468 = %466.0;
  (%467, %468, meta[relay.Constant][34] /* ty=Tensor[(112, 2), float32] */)
}

def @func_9379() -> (Tensor[(1, 10, 14), bool],) {
  @func_9377() /* ty=(Tensor[(1, 10, 14), bool],) */
}

def @func_6757(%var_6756: Tensor[(3, 10, 14), int16]) -> Tensor[(3, 10, 14), bool] {
  %473 = fn (%var_6750: Tensor[(3, 10, 14), int16]) -> Tensor[(3, 10, 14), bool] {
    %469 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
    %470 = %469.2;
    %471 = cast(%470, dtype="bool") /* ty=Tensor[(?, 10, 14), bool] */;
    %472 = cast(%var_6750, dtype="bool") /* ty=Tensor[(3, 10, 14), bool] */;
    not_equal(%471, %472) /* ty=Tensor[(3, 10, 14), bool] */
  };
  %473(%var_6756) /* ty=Tensor[(3, 10, 14), bool] */
}

def @func_9272() -> (Tensor[(1176), float64],) {
  %475 = fn () -> (Tensor[(1176), float64],) {
    %474 = @func_8943() /* ty=Tensor[(1176), float64] */;
    (%474,)
  };
  %475() /* ty=(Tensor[(1176), float64],) */
}

def @func_8878() -> (Tensor[(1, 10, 14), float64], Tensor[(1, 10, 14), float32]) {
  @func_8876() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(1, 10, 14), float32]) */
}

def @func_1657(%var_1655: bool, %var_1656: Tensor[(16, 9, 16), bool]) -> Tensor[(16, 9, 16), bool] {
  @func_1653(%var_1655, %var_1656) /* ty=Tensor[(16, 9, 16), bool] */
}

def @func_9156(%var_9155: Tensor[(4, 10, 14), float32]) -> (Tensor[(224), float32], Tensor[(4, 10, 14), float32], Tensor[(?, 10, 14), uint64]) {
  %491 = fn (%var_9115: Tensor[(4, 10, 14), float32]) -> (Tensor[(224), float32], Tensor[(4, 10, 14), float32], Tensor[(?, 10, 14), uint64]) {
    %476 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
    %477 = @func_8876() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(1, 10, 14), float32]) */;
    %478 = %477.1;
    %479 = cast(%478, dtype="int16") /* ty=Tensor[(1, 10, 14), int16] */;
    %480 = cast(%var_9115, dtype="int16") /* ty=Tensor[(4, 10, 14), int16] */;
    %481 = left_shift(%479, %480) /* ty=Tensor[(4, 10, 14), int16] */;
    %482 = cast(%481, dtype="uint32") /* ty=Tensor[(4, 10, 14), uint32] */;
    %483 = shape_of(%var_9115, dtype="int32") /* ty=Tensor[(3), int32] */;
    %484 = cast(%var_9115, dtype="uint32") /* ty=Tensor[(4, 10, 14), uint32] */;
    %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %486 = logical_xor(%484, %485) /* ty=Tensor[(4, 10, 14), uint32] */;
    %487 = cast(%486, dtype="float32") /* ty=Tensor[(4, 10, 14), float32] */;
    %488 = %476.2;
    %489 = log10(%487) /* ty=Tensor[(4, 10, 14), float32] */;
    %490 = @func_8708() /* ty=Tensor[(?, 10, 14), uint64] */;
    (%488, %489, %490)
  };
  %491(%var_9155) /* ty=(Tensor[(224), float32], Tensor[(4, 10, 14), float32], Tensor[(?, 10, 14), uint64]) */
}

def @func_7225() -> (Tensor[(?, 10, 14), bool],) {
  %492 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
  %493 = %492.1;
  %494 = cast(%493, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  %495 = sinh(%494) /* ty=Tensor[(1, 10, 14), float64] */;
  %496 = cast(%493, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%495, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %500 = not_equal(%498, %499) /* ty=Tensor[(?, 10, 14), bool] */;
  (%500,)
}

def @func_4125(%var_4120: bool, %var_4121: Tensor[(11, 15, 6), bool]) -> (Tensor[(11, 15, 6), bool],) {
  %501 = cast(%var_4120, dtype="bool") /* ty=bool */;
  %502 = cast(%var_4121, dtype="bool") /* ty=Tensor[(11, 15, 6), bool] */;
  %503 = logical_and(%501, %502) /* ty=Tensor[(11, 15, 6), bool] */;
  (%503,)
}

def @func_6294() -> (Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) {
  @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */
}

def @func_4379(%var_4376: Tensor[(13, 15, 5), float32], %var_4377: Tensor[(180), float64], %var_4378: Tensor[(169, 6), bool]) -> (Tensor[(13, 15, 5), float32], Tensor[(1014), bool], Tensor[(1584), uint8], Tensor[(180), float64], Tensor[(169, 6), bool]) {
  %514 = fn (%var_4367: Tensor[(13, 15, 5), float32], %var_4372: Tensor[(180), float64], %var_4373: Tensor[(169, 6), bool]) -> (Tensor[(13, 15, 5), float32], Tensor[(1014), bool], Tensor[(1584), uint8], Tensor[(180), float64], Tensor[(169, 6), bool]) {
    %504 = cast(%var_4367, dtype="float32") /* ty=Tensor[(13, 15, 5), float32] */;
    %505 = cast(meta[relay.Constant][35] /* ty=Tensor[(1584), uint8] */, dtype="uint8") /* ty=Tensor[(1584), uint8] */;
    %506 = cast(%var_4372, dtype="float64") /* ty=Tensor[(180), float64] */;
    %507 = cast(%var_4373, dtype="bool") /* ty=Tensor[(169, 6), bool] */;
    %508 = reshape(%505, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), uint8] */;
    %509 = reshape(%506, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %510 = reshape(%507, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
    %511 = @func_2307(%508, %509, %510) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(1014), bool], Tensor[(1014), bool]) */;
    %512 = log2(%504) /* ty=Tensor[(13, 15, 5), float32] */;
    %513 = %511.5;
    (%512, %513, meta[relay.Constant][35] /* ty=Tensor[(1584), uint8] */, %var_4372, %var_4373)
  };
  %514(%var_4376, %var_4377, %var_4378) /* ty=(Tensor[(13, 15, 5), float32], Tensor[(1014), bool], Tensor[(1584), uint8], Tensor[(180), float64], Tensor[(169, 6), bool]) */
}

def @func_2924(%var_2894: Tensor[(468), float64]) -> (Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) {
  %515 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %516 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(8, 5, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %519 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 13), float64] */;
  %520 = cast(%var_2894, dtype="float64") /* ty=Tensor[(468), float64] */;
  %521 = reshape(%520, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %522 = @func_127(%521) /* ty=(Tensor[(4, 11, ?), bool], Tensor[(9, 4, 13), float64], Tensor[(4, 11, 468), uint64], Tensor[(468), float32]) */;
  %523 = floor_mod(%517, %518) /* ty=Tensor[(8, 5, 13), float64] */;
  %524 = atan(%519) /* ty=Tensor[(8, 5, 13), float64] */;
  %525 = %522.1;
  (%523, %524, %525, %var_2894)
}

def @func_6017(%var_6012: float32, %var_6013: Tensor[(1584), uint8], %var_6014: Tensor[(1014, 1), bool], %var_6015: Tensor[(1, 560), float64], %var_6016: Tensor[(468, 1), float64]) -> (Tensor[(13, 10, 14), uint16], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(224), float32], Tensor[(864), float32], Tensor[(180), float64], Tensor[(1584), uint8], Tensor[(1014, 180), uint64], Tensor[(468), float64], Tensor[(1, 560), float64], Tensor[(468, 1), float64], Tensor[(1176), float64]) {
  %567 = fn (%var_5938: float32, %var_5951: Tensor[(1584), uint8], %var_5953: Tensor[(1014, 1), bool], %var_5992: Tensor[(1, 560), float64], %var_5993: Tensor[(468, 1), float64]) -> (Tensor[(13, 10, 14), uint16], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(224), float32], Tensor[(864), float32], Tensor[(180), float64], Tensor[(1584), uint8], Tensor[(1014, 180), uint64], Tensor[(468), float64], Tensor[(1, 560), float64], Tensor[(468, 1), float64], Tensor[(1176), float64]) {
    %526 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
    %527 = cast(%526, dtype="uint16") /* ty=Tensor[(1, 10, 14), uint16] */;
    %528 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 10, 14), float64] */, dtype="uint16") /* ty=Tensor[(13, 10, 14), uint16] */;
    %529 = cast(%var_5938, dtype="float32") /* ty=float32 */;
    %530 = cast(meta[relay.Constant][39] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %531 = cast(meta[relay.Constant][39] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %532 = cast(meta[relay.Constant][39] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %533 = cast(meta[relay.Constant][40] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %534 = reshape(%529, newshape=[]) /* ty=float32 */;
    %535 = reshape(%530, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
    %536 = reshape(%531, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
    %537 = reshape(%532, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float32] */;
    %538 = reshape(%533, newshape=[112, 2]) /* ty=Tensor[(112, 2), float32] */;
    %539 = @func_1562(%534, %535, %536, %537, %538) /* ty=(Tensor[(6, 16, 9), float32], Tensor[(6, 16, 9), int64], Tensor[(6, 16, 9), bool], Tensor[(?, 14, 16), bool], Tensor[(112, 2), float32]) */;
    %540 = %539.3;
    %541 = cast(%540, dtype="float32") /* ty=Tensor[(?, 14, 16), float32] */;
    %542 = reshape(%541, newshape=[8, 28]) /* ty=Tensor[(8, 28), float32] */;
    %543 = @func_5888(%542) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) */;
    %544 = cast(%var_5951, dtype="uint8") /* ty=Tensor[(1584), uint8] */;
    %545 = cast(meta[relay.Constant][41] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %546 = cast(%var_5953, dtype="bool") /* ty=Tensor[(1014, 1), bool] */;
    %547 = reshape(%544, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), uint8] */;
    %548 = reshape(%545, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %549 = reshape(%546, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
    %550 = @func_2307(%547, %548, %549) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(1014), bool], Tensor[(1014), bool]) */;
    %551 = cast(%var_5953, dtype="uint64") /* ty=Tensor[(1014, 1), uint64] */;
    %552 = cast(meta[relay.Constant][41] /* ty=Tensor[(180), float64] */, dtype="uint64") /* ty=Tensor[(180), uint64] */;
    %553 = cast(%var_5992, dtype="float64") /* ty=Tensor[(1, 560), float64] */;
    %554 = %550.2;
    %555 = cast(%554, dtype="float64") /* ty=Tensor[(180), float64] */;
    %556 = cast(%var_5993, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
    %557 = cast(meta[relay.Constant][42] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %558 = reshape(%553, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), float64] */;
    %559 = reshape(%555, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %560 = reshape(%556, newshape=[468]) /* ty=Tensor[(468), float64] */;
    %561 = reshape(%557, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %562 = @func_3808(%558, %559, %560, %561) /* ty=(Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) */;
    %563 = add(%527, %528) /* ty=Tensor[(13, 10, 14), uint16] */;
    %564 = %543.3;
    %565 = add(%551, %552) /* ty=Tensor[(1014, 180), uint64] */;
    %566 = %562.4;
    (%563, %540, %var_5938, meta[relay.Constant][39] /* ty=Tensor[(864), float32] */, meta[relay.Constant][40] /* ty=Tensor[(224), float32] */, %564, %554, %var_5951, %565, %566, %var_5992, %var_5993, meta[relay.Constant][42] /* ty=Tensor[(1176), float64] */)
  };
  %567(%var_6012, %var_6013, %var_6014, %var_6015, %var_6016) /* ty=(Tensor[(13, 10, 14), uint16], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(224), float32], Tensor[(864), float32], Tensor[(180), float64], Tensor[(1584), uint8], Tensor[(1014, 180), uint64], Tensor[(468), float64], Tensor[(1, 560), float64], Tensor[(468, 1), float64], Tensor[(1176), float64]) */
}

def @func_9067() -> (Tensor[(1, 10, 14), float64], Tensor[(?, 10, 14), float32], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) {
  @func_9065() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(?, 10, 14), float32], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) */
}

def @func_6244() -> Tensor[(1, 10, 14), float64] {
  %568 = fn () -> Tensor[(1, 10, 14), float64] {
    @func_5642() /* ty=Tensor[(1, 10, 14), float64] */
  };
  %568() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_6292() -> (Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) {
  %569 = cast(meta[relay.Constant][43] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %570 = reshape(%569, newshape=[8, 28]) /* ty=Tensor[(8, 28), float32] */;
  %571 = @func_5888(%570) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) */;
  %572 = @func_6177() /* ty=Tensor[(1, 10, 14), float32] */;
  %573 = %571.0;
  (%572, %573, meta[relay.Constant][43] /* ty=Tensor[(224), float32] */)
}

def @func_3814(%var_3810: Tensor[(5, 16, 7), float64], %var_3811: Tensor[(180), float64], %var_3812: Tensor[(468), float64], %var_3813: Tensor[(1176), float64]) -> (Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) {
  @func_3808(%var_3810, %var_3811, %var_3812, %var_3813) /* ty=(Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) */
}

def @func_5657(%var_5655: uint64, %var_5656: Tensor[(8, 3, 1), uint64]) -> (Tensor[(8, 3, 1), bool],) {
  %577 = fn (%var_5648: uint64, %var_5649: Tensor[(8, 3, 1), uint64]) -> (Tensor[(8, 3, 1), bool],) {
    %574 = cast(%var_5648, dtype="bool") /* ty=bool */;
    %575 = cast(%var_5649, dtype="bool") /* ty=Tensor[(8, 3, 1), bool] */;
    %576 = greater(%574, %575) /* ty=Tensor[(8, 3, 1), bool] */;
    (%576,)
  };
  %577(%var_5655, %var_5656) /* ty=(Tensor[(8, 3, 1), bool],) */
}

def @func_7705() -> (Tensor[(1, 10, 14), float32],) {
  %579 = fn () -> (Tensor[(1, 10, 14), float32],) {
    %578 = @func_6177() /* ty=Tensor[(1, 10, 14), float32] */;
    (%578,)
  };
  %579() /* ty=(Tensor[(1, 10, 14), float32],) */
}

def @func_5863(%var_5862: Tensor[(1176), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) {
  %586 = fn (%var_5814: Tensor[(1176), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) {
    %580 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
    %581 = cast(%var_5814, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %582 = reshape(%581, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %583 = @func_3270(%582) /* ty=(Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
    %584 = %580.1;
    %585 = %583.1;
    (%584, %585, %var_5814)
  };
  %586(%var_5862) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */
}

def @func_7544(%var_7522: Tensor[(3, 10, 14), float64]) -> (Tensor[(1, 10, 14), float32], Tensor[(3, 10, 14), int8]) {
  %587 = @func_7162() /* ty=(Tensor[(1, 10, 14), float64],) */;
  %588 = %587.0;
  %589 = cast(%588, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %590 = @func_6831() /* ty=Tensor[(1, 10, 14), float64] */;
  %591 = cast(%590, dtype="int8") /* ty=Tensor[(1, 10, 14), int8] */;
  %592 = cast(%var_7522, dtype="int8") /* ty=Tensor[(3, 10, 14), int8] */;
  %593 = tan(%589) /* ty=Tensor[(1, 10, 14), float32] */;
  %594 = minimum(%591, %592) /* ty=Tensor[(3, 10, 14), int8] */;
  (%593, %594)
}

def @func_8279() -> (Tensor[(1176), float64],) {
  %595 = @func_7356() /* ty=(Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 6, 14), float32]) */;
  %596 = %595.0;
  (%596,)
}

def @func_8036() -> Tensor[(1, 10, 14), bool] {
  %597 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %597.0
}

def @func_9212(%var_9210: Tensor[(7, 3, 5), int16]) -> (Tensor[(7, 3, 5), int16], Tensor[(1, 10, 14), float64], Tensor[(112, 2), float32]) {
  @func_9209(%var_9210) /* ty=(Tensor[(7, 3, 5), int16], Tensor[(1, 10, 14), float64], Tensor[(112, 2), float32]) */
}

def @func_4129(%var_4127: bool, %var_4128: Tensor[(11, 15, 6), bool]) -> (Tensor[(11, 15, 6), bool],) {
  @func_4125(%var_4127, %var_4128) /* ty=(Tensor[(11, 15, 6), bool],) */
}

def @func_29(%var_23: Tensor[(9, 4, 13), float64]) -> Tensor[(9, 4, 13), float64] {
  %598 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 4, 13), float64] */;
  %599 = cast(%var_23, dtype="float64") /* ty=Tensor[(9, 4, 13), float64] */;
  divide(%598, %599) /* ty=Tensor[(9, 4, 13), float64] */
}

def @func_6832() -> Tensor[(1, 10, 14), float64] {
  %600 = fn () -> Tensor[(1, 10, 14), float64] {
    @func_5642() /* ty=Tensor[(1, 10, 14), float64] */
  };
  %600() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_8265() -> (Tensor[(1, 10, 14), float32],) {
  %603 = fn () -> (Tensor[(1, 10, 14), float32],) {
    %601 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
    %602 = %601.0;
    (%602,)
  };
  %603() /* ty=(Tensor[(1, 10, 14), float32],) */
}

def @main() -> Tensor[(1, 10, 14), float64] {
  %604 = @func_8743() /* ty=(Tensor[(1, 10, 14), float64],) */;
  %605 = %604.0;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  atan(%606) /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_8684() -> (Tensor[(1, 10, 14), float64],) {
  %608 = fn () -> (Tensor[(1, 10, 14), float64],) {
    %607 = @func_6831() /* ty=Tensor[(1, 10, 14), float64] */;
    (%607,)
  };
  %608() /* ty=(Tensor[(1, 10, 14), float64],) */
}

def @func_5642() -> Tensor[(1, 10, 14), float64] {
  %609 = @func_5463() /* ty=(Tensor[(1, 10, 14), bool], Tensor[(1, 10, 14), float64]) */;
  %609.1
}

def @func_6179() -> Tensor[(1, 10, 14), float32] {
  @func_6177() /* ty=Tensor[(1, 10, 14), float32] */
}

def @func_8504() -> (Tensor[(9, 7, 10), float64], Tensor[(9, 7, 10), float32]) {
  @func_8502() /* ty=(Tensor[(9, 7, 10), float64], Tensor[(9, 7, 10), float32]) */
}

def @func_7082(%var_7079: Tensor[(12, 10, 14), float64], %var_7080: Tensor[(1176), float64], %var_7081: Tensor[(1, 420), int16]) -> (Tensor[(12, 10, 14), float32], Tensor[(224), float32], Tensor[(12, 10, 14), uint64], Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(3, 10, 14), bool], Tensor[(1, 420), int16], Tensor[(1176), bool], Tensor[(?, 14, 16), float64]) {
  %637 = fn (%var_7039: Tensor[(12, 10, 14), float64], %var_7050: Tensor[(1176), float64], %var_7053: Tensor[(1, 420), int16]) -> (Tensor[(12, 10, 14), float32], Tensor[(224), float32], Tensor[(12, 10, 14), uint64], Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(3, 10, 14), bool], Tensor[(1, 420), int16], Tensor[(1176), bool], Tensor[(?, 14, 16), float64]) {
    %610 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
    %611 = cast(%610, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
    %612 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 10, 14), float64] */, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
    %613 = cast(%var_7039, dtype="uint64") /* ty=Tensor[(12, 10, 14), uint64] */;
    %614 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(12, 10, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %615 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 10, 14), float64] */, dtype="uint64") /* ty=Tensor[(12, 10, 14), uint64] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %617 = cast(%var_7050, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %618 = reshape(%617, newshape=[14, 6, 14]) /* ty=Tensor[(14, 6, 14), float64] */;
    %619 = @func_1947(%618) /* ty=(Tensor[(14, 6, 14), float64],) */;
    %620 = cast(%var_7053, dtype="int16") /* ty=Tensor[(1, 420), int16] */;
    %621 = reshape(%620, newshape=[3, 10, 14]) /* ty=Tensor[(3, 10, 14), int16] */;
    %622 = cast(meta[relay.Constant][47] /* ty=Tensor[(1176), float64] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %623 = shape_of(%var_7050, dtype="int32") /* ty=Tensor[(1), int32] */;
    %624 = cast(%var_7050, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?), bool] */;
    %626 = cast(meta[relay.Constant][46] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %627 = reshape(%626, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
    %628 = @func_1147(%627) /* ty=Tensor[(?, 14, 16), bool] */;
    %629 = cast(%628, dtype="float64") /* ty=Tensor[(?, 14, 16), float64] */;
    %630 = divide(%611, %612) /* ty=Tensor[(12, 10, 14), float32] */;
    %631 = logical_xor(%615, %616) /* ty=Tensor[(12, 10, 14), uint64] */;
    %632 = @func_6243() /* ty=Tensor[(1, 10, 14), float64] */;
    %633 = %619.0;
    %634 = @func_6755(%621) /* ty=Tensor[(3, 10, 14), bool] */;
    %635 = less(%624, %625) /* ty=Tensor[(1176), bool] */;
    %636 = cos(%629) /* ty=Tensor[(?, 14, 16), float64] */;
    (%630, meta[relay.Constant][46] /* ty=Tensor[(224), float32] */, %631, %632, %633, %634, %var_7053, %635, %636)
  };
  %637(%var_7079, %var_7080, %var_7081) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(224), float32], Tensor[(12, 10, 14), uint64], Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(3, 10, 14), bool], Tensor[(1, 420), int16], Tensor[(1176), bool], Tensor[(?, 14, 16), float64]) */
}

def @func_8925(%var_8911: float64) -> (Tensor[(1, 10, 14), float64], Tensor[(15, 7, 8), float64], float64, Tensor[(840), float64]) {
  %638 = cast(%var_8911, dtype="float64") /* ty=float64 */;
  %639 = cast(meta[relay.Constant][48] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %640 = reshape(%638, newshape=[]) /* ty=float64 */;
  %641 = reshape(%639, newshape=[15, 7, 8]) /* ty=Tensor[(15, 7, 8), float64] */;
  %642 = @func_5642() /* ty=Tensor[(1, 10, 14), float64] */;
  %643 = @func_3503(%640, %641) /* ty=Tensor[(15, 7, 8), float64] */;
  (%642, %643, %var_8911, meta[relay.Constant][48] /* ty=Tensor[(840), float64] */)
}

def @func_129(%var_128: Tensor[(468), float64]) -> (Tensor[(4, 11, ?), bool], Tensor[(9, 4, 13), float64], Tensor[(4, 11, 468), uint64], Tensor[(468), float32]) {
  %667 = fn (%var_100: Tensor[(468), float64]) -> (Tensor[(4, 11, ?), bool], Tensor[(9, 4, 13), float64], Tensor[(4, 11, 468), uint64], Tensor[(468), float32]) {
    %644 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
    %645 = tan(%644) /* ty=Tensor[(4, 11, 1), float32] */;
    %646 = cast(%645, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
    %647 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(4, 11, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %648 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
    %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %650 = mod(%648, %649) /* ty=Tensor[(4, 11, ?), float32] */;
    %651 = cast(%645, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
    %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(3), int32] */;
    %653 = cast(%650, dtype="bool") /* ty=Tensor[(4, 11, ?), bool] */;
    %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %655 = cast(%var_100, dtype="float64") /* ty=Tensor[(468), float64] */;
    %656 = reshape(%655, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
    %657 = cast(%var_100, dtype="int8") /* ty=Tensor[(468), int8] */;
    %658 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 11, 1), float32] */, dtype="int8") /* ty=Tensor[(4, 11, 1), int8] */;
    %659 = subtract(%657, %658) /* ty=Tensor[(4, 11, 468), int8] */;
    %660 = cast(%659, dtype="uint64") /* ty=Tensor[(4, 11, 468), uint64] */;
    %661 = cast(%650, dtype="uint64") /* ty=Tensor[(4, 11, ?), uint64] */;
    %662 = cast(%var_100, dtype="float32") /* ty=Tensor[(468), float32] */;
    %663 = not_equal(%653, %654) /* ty=Tensor[(4, 11, ?), bool] */;
    %664 = @func_29(%656) /* ty=Tensor[(9, 4, 13), float64] */;
    %665 = right_shift(%660, %661) /* ty=Tensor[(4, 11, 468), uint64] */;
    %666 = atan(%662) /* ty=Tensor[(468), float32] */;
    (%663, %664, %665, %666)
  };
  %667(%var_128) /* ty=(Tensor[(4, 11, ?), bool], Tensor[(9, 4, 13), float64], Tensor[(4, 11, 468), uint64], Tensor[(468), float32]) */
}

def @func_1348(%var_1346: Tensor[(1014), bool], %var_1347: Tensor[(6, 13, 13), float32]) -> (Tensor[(4, 13, 7), int8], Tensor[(?, 14, 16), bool], Tensor[(224), float32], Tensor[(70), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), float32]) {
  %702 = fn (%var_1321: Tensor[(1014), bool], %var_1336: Tensor[(6, 13, 13), float32]) -> (Tensor[(4, 13, 7), int8], Tensor[(?, 14, 16), bool], Tensor[(224), float32], Tensor[(70), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), float32]) {
    %668 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 13, 7), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 7), float32] */;
    %669 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(4, 13, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %670 = cast(meta[relay.Constant][50] /* ty=Tensor[(4, 13, 7), float32] */, dtype="float32") /* ty=Tensor[(4, 13, 7), float32] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %672 = mod(%670, %671) /* ty=Tensor[(4, 13, 7), float32] */;
    %673 = cast(%672, dtype="int8") /* ty=Tensor[(4, 13, 7), int8] */;
    %674 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(4, 13, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %675 = cast(meta[relay.Constant][50] /* ty=Tensor[(4, 13, 7), float32] */, dtype="int8") /* ty=Tensor[(4, 13, 7), int8] */;
    %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %677 = cast(meta[relay.Constant][52] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %678 = reshape(%677, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), float32] */;
    %679 = cast(meta[relay.Constant][53] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %680 = reshape(%679, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), float32] */;
    %681 = @func_1094(%680) /* ty=(Tensor[(10, 7, 1), float32],) */;
    %682 = %681.0;
    %683 = cast(%682, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
    %684 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(70), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %685 = cast(meta[relay.Constant][53] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
    %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?), float32] */;
    %687 = cast(%var_1321, dtype="bool") /* ty=Tensor[(1014), bool] */;
    %688 = cast(%var_1321, dtype="bool") /* ty=Tensor[(1014), bool] */;
    %689 = reshape(%687, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
    %690 = reshape(%688, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), bool] */;
    %691 = @func_1002(%689, %690) /* ty=Tensor[(6, 13, 13), bool] */;
    %692 = cast(%691, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
    %693 = asinh(%692) /* ty=Tensor[(6, 13, 13), float32] */;
    %694 = cast(%var_1336, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
    %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
    %696 = cast(%693, dtype="float32") /* ty=Tensor[(6, 13, 13), float32] */;
    %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %698 = subtract(%675, %676) /* ty=Tensor[(4, 13, 7), int8] */;
    %699 = @func_1147(%678) /* ty=Tensor[(?, 14, 16), bool] */;
    %700 = divide(%685, %686) /* ty=Tensor[(70), float32] */;
    %701 = mod(%696, %697) /* ty=Tensor[(6, 13, 13), float32] */;
    (%698, %699, meta[relay.Constant][52] /* ty=Tensor[(224), float32] */, %700, %var_1321, %701)
  };
  %702(%var_1346, %var_1347) /* ty=(Tensor[(4, 13, 7), int8], Tensor[(?, 14, 16), bool], Tensor[(224), float32], Tensor[(70), float32], Tensor[(1014), bool], Tensor[(6, 13, 13), float32]) */
}

def @func_7831() -> (Tensor[(224), float32],) {
  %705 = fn () -> (Tensor[(224), float32],) {
    %703 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
    %704 = %703.2;
    (%704,)
  };
  %705() /* ty=(Tensor[(224), float32],) */
}

def @func_1002(%var_992: Tensor[(6, 13, 13), bool], %var_993: Tensor[(6, 13, 13), bool]) -> Tensor[(6, 13, 13), bool] {
  %706 = cast(%var_993, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %707 = shape_of(%var_992, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%var_992, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%708, %709) /* ty=Tensor[(6, 13, 13), bool] */
}

def @func_471(%var_469: Tensor[(3, 10, 6), float64], %var_470: Tensor[(3, 10, 6), float64]) -> (Tensor[(3, 10, 6), bool],) {
  %717 = fn (%var_454: Tensor[(3, 10, 6), float64], %var_459: Tensor[(3, 10, 6), float64]) -> (Tensor[(3, 10, 6), bool],) {
    %710 = cast(%var_454, dtype="float64") /* ty=Tensor[(3, 10, 6), float64] */;
    %711 = cos(%710) /* ty=Tensor[(3, 10, 6), float64] */;
    %712 = cast(%var_459, dtype="bool") /* ty=Tensor[(3, 10, 6), bool] */;
    %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(3), int32] */;
    %714 = cast(%711, dtype="bool") /* ty=Tensor[(3, 10, 6), bool] */;
    %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %716 = less(%714, %715) /* ty=Tensor[(3, 10, 6), bool] */;
    (%716,)
  };
  %717(%var_469, %var_470) /* ty=(Tensor[(3, 10, 6), bool],) */
}

def @func_9065() -> (Tensor[(1, 10, 14), float64], Tensor[(?, 10, 14), float32], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) {
  %718 = @func_8036() /* ty=Tensor[(1, 10, 14), bool] */;
  %719 = cast(%718, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  %720 = cast(%718, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %721 = erf(%720) /* ty=Tensor[(1, 10, 14), float32] */;
  %722 = cast(%718, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %723 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%721, dtype="float32") /* ty=Tensor[(1, 10, 14), float32] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %726 = cast(meta[relay.Constant][54] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %727 = reshape(%726, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %728 = log(%719) /* ty=Tensor[(1, 10, 14), float64] */;
  %729 = add(%724, %725) /* ty=Tensor[(?, 10, 14), float32] */;
  %730 = @func_29(%727) /* ty=Tensor[(9, 4, 13), float64] */;
  (%728, %729, %730, meta[relay.Constant][54] /* ty=Tensor[(468), float64] */)
}

def @func_5891(%var_5889: Tensor[(8, 28), float32]) -> (Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) {
  @func_5888(%var_5889) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(?, 14, 16), bool], float32, Tensor[(864), float32], Tensor[(8, 28), float32]) */
}

def @func_8159(%var_8157: Tensor[(14, 1), int64]) -> (Tensor[(216), float32], Tensor[(8, 16, 14), int64], Tensor[(1, 10, 14), float64], Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 1176), float32]) {
  @func_8156(%var_8157) /* ty=(Tensor[(216), float32], Tensor[(8, 16, 14), int64], Tensor[(1, 10, 14), float64], Tensor[(1176), float64], Tensor[(2240), float64], Tensor[(14, 1176), float32]) */
}

def @func_8928(%var_8926: float64) -> (Tensor[(1, 10, 14), float64], Tensor[(15, 7, 8), float64], float64, Tensor[(840), float64]) {
  @func_8925(%var_8926) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(15, 7, 8), float64], float64, Tensor[(840), float64]) */
}

def @func_9851() -> Tensor[(1, 10, 14), float64] {
  @func_9849() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_7441(%var_7435: uint64, %var_7436: Tensor[(24), uint64]) -> (Tensor[(?, 10, 14), int16], Tensor[(8, 3, 1), bool], uint64, Tensor[(24), uint64]) {
  %731 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
  %732 = cast(%var_7435, dtype="uint64") /* ty=uint64 */;
  %733 = cast(%var_7436, dtype="uint64") /* ty=Tensor[(24), uint64] */;
  %734 = reshape(%732, newshape=[]) /* ty=uint64 */;
  %735 = reshape(%733, newshape=[8, 3, 1]) /* ty=Tensor[(8, 3, 1), uint64] */;
  %736 = @func_5654(%734, %735) /* ty=(Tensor[(8, 3, 1), bool],) */;
  %737 = %731.2;
  %738 = %736.0;
  (%737, %738, %var_7435, %var_7436)
}

def @func_3808(%var_3709: Tensor[(5, 16, 7), float64], %var_3740: Tensor[(180), float64], %var_3752: Tensor[(468), float64], %var_3763: Tensor[(1176), float64]) -> (Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) {
  %739 = cast(%var_3709, dtype="float64") /* ty=Tensor[(5, 16, 7), float64] */;
  %740 = log(%739) /* ty=Tensor[(5, 16, 7), float64] */;
  %741 = cast(%740, dtype="float64") /* ty=Tensor[(5, 16, 7), float64] */;
  %742 = tan(%741) /* ty=Tensor[(5, 16, 7), float64] */;
  %743 = cast(%var_3709, dtype="int64") /* ty=Tensor[(5, 16, 7), int64] */;
  %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%742, dtype="int64") /* ty=Tensor[(5, 16, 7), int64] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %747 = cast(%var_3740, dtype="float64") /* ty=Tensor[(180), float64] */;
  %748 = cast(%var_3740, dtype="float64") /* ty=Tensor[(180), float64] */;
  %749 = reshape(%747, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %750 = reshape(%748, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), float64] */;
  %751 = @func_468(%749, %750) /* ty=(Tensor[(3, 10, 6), bool],) */;
  %752 = cast(%var_3752, dtype="float64") /* ty=Tensor[(468), float64] */;
  %753 = reshape(%752, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %754 = @func_2924(%753) /* ty=(Tensor[(8, 5, 13), float64], Tensor[(8, 5, 13), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64]) */;
  %755 = cast(%var_3763, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %756 = reshape(%755, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %757 = @func_3270(%756) /* ty=(Tensor[(14, 9, 2), uint16], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %758 = cast(%var_3752, dtype="float64") /* ty=Tensor[(468), float64] */;
  %759 = reshape(%758, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
  %760 = logical_xor(%745, %746) /* ty=Tensor[(5, 16, 7), int64] */;
  %761 = %751.0;
  %762 = %754.2;
  %763 = %757.0;
  %764 = @func_29(%759) /* ty=Tensor[(9, 4, 13), float64] */;
  (%760, %761, %var_3740, %762, %var_3752, %763, %var_3763, %764)
}

def @func_7396() -> (Tensor[(1, 10, 14), float64], Tensor[(3, 10, 6), bool], Tensor[(560), float64], Tensor[(180), float64], Tensor[(468), float64], Tensor[(1176), float64]) {
  %776 = fn () -> (Tensor[(1, 10, 14), float64], Tensor[(3, 10, 6), bool], Tensor[(560), float64], Tensor[(180), float64], Tensor[(468), float64], Tensor[(1176), float64]) {
    %765 = cast(meta[relay.Constant][55] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
    %766 = cast(meta[relay.Constant][56] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %767 = cast(meta[relay.Constant][57] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
    %768 = cast(meta[relay.Constant][58] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %769 = reshape(%765, newshape=[5, 16, 7]) /* ty=Tensor[(5, 16, 7), float64] */;
    %770 = reshape(%766, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %771 = reshape(%767, newshape=[468]) /* ty=Tensor[(468), float64] */;
    %772 = reshape(%768, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %773 = @func_3808(%769, %770, %771, %772) /* ty=(Tensor[(5, 16, 7), int64], Tensor[(3, 10, 6), bool], Tensor[(180), float64], Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 9, 2), uint16], Tensor[(1176), float64], Tensor[(9, 4, 13), float64]) */;
    %774 = @func_6831() /* ty=Tensor[(1, 10, 14), float64] */;
    %775 = %773.1;
    (%774, %775, meta[relay.Constant][55] /* ty=Tensor[(560), float64] */, meta[relay.Constant][56] /* ty=Tensor[(180), float64] */, meta[relay.Constant][57] /* ty=Tensor[(468), float64] */, meta[relay.Constant][58] /* ty=Tensor[(1176), float64] */)
  };
  %776() /* ty=(Tensor[(1, 10, 14), float64], Tensor[(3, 10, 6), bool], Tensor[(560), float64], Tensor[(180), float64], Tensor[(468), float64], Tensor[(1176), float64]) */
}

def @func_9543() -> Tensor[(1, 10, 14), float64] {
  %777 = fn () -> Tensor[(1, 10, 14), float64] {
    @func_7948() /* ty=Tensor[(1, 10, 14), float64] */
  };
  %777() /* ty=Tensor[(1, 10, 14), float64] */
}

def @func_9745() -> (Tensor[(1, 10, 14), bool], Tensor[(14, 6, 14), float64], Tensor[(1176), float64], Tensor[(?, 10, 14), bool]) {
  %778 = cast(meta[relay.Constant][59] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %779 = reshape(%778, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %780 = @func_5861(%779) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(14, 6, 14), float64], Tensor[(1176), float64]) */;
  %781 = @func_9462() /* ty=Tensor[(1, 10, 14), bool] */;
  %782 = %780.1;
  %783 = @func_6695() /* ty=Tensor[(?, 10, 14), bool] */;
  (%781, %782, meta[relay.Constant][59] /* ty=Tensor[(1176), float64] */, %783)
}

def @func_1094(%var_1069: Tensor[(10, 7, 1), float32]) -> (Tensor[(10, 7, 1), float32],) {
  %784 = cast(%var_1069, dtype="float32") /* ty=Tensor[(10, 7, 1), float32] */;
  %785 = asin(%784) /* ty=Tensor[(10, 7, 1), float32] */;
  (%785,)
}

def @func_9503(%var_9500: Tensor[(16, 10, 14), float64], %var_9501: Tensor[(180), float64], %var_9502: Tensor[(5, 63), float32]) -> (Tensor[(468), float32], Tensor[(468), float64], Tensor[(16, 10, 14), bool], Tensor[(16, 9, 16), bool], Tensor[(180), float64], Tensor[(5, 63), float32]) {
  %800 = fn (%var_9485: Tensor[(16, 10, 14), float64], %var_9493: Tensor[(180), float64], %var_9494: Tensor[(5, 63), float32]) -> (Tensor[(468), float32], Tensor[(468), float64], Tensor[(16, 10, 14), bool], Tensor[(16, 9, 16), bool], Tensor[(180), float64], Tensor[(5, 63), float32]) {
    %786 = cast(meta[relay.Constant][60] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
    %787 = reshape(%786, newshape=[468]) /* ty=Tensor[(468), float64] */;
    %788 = @func_127(%787) /* ty=(Tensor[(4, 11, ?), bool], Tensor[(9, 4, 13), float64], Tensor[(4, 11, 468), uint64], Tensor[(468), float32]) */;
    %789 = @func_7948() /* ty=Tensor[(1, 10, 14), float64] */;
    %790 = cast(%789, dtype="bool") /* ty=Tensor[(1, 10, 14), bool] */;
    %791 = cast(%var_9485, dtype="bool") /* ty=Tensor[(16, 10, 14), bool] */;
    %792 = cast(%var_9493, dtype="float64") /* ty=Tensor[(180), float64] */;
    %793 = cast(%var_9494, dtype="float32") /* ty=Tensor[(5, 63), float32] */;
    %794 = reshape(%792, newshape=[12, 3, 5]) /* ty=Tensor[(12, 3, 5), float64] */;
    %795 = reshape(%793, newshape=[105, 3]) /* ty=Tensor[(105, 3), float32] */;
    %796 = @func_4771(%794, %795) /* ty=(Tensor[(16, 9, 16), bool], bool, Tensor[(2304), bool], Tensor[(16, 9, 16), bool], Tensor[(12, 3, 5), float64], Tensor[(7, 15, 3), float32], Tensor[(105, 3), float32]) */;
    %797 = %788.3;
    %798 = logical_or(%790, %791) /* ty=Tensor[(16, 10, 14), bool] */;
    %799 = %796.0;
    (%797, meta[relay.Constant][60] /* ty=Tensor[(468), float64] */, %798, %799, %var_9493, %var_9494)
  };
  %800(%var_9500, %var_9501, %var_9502) /* ty=(Tensor[(468), float32], Tensor[(468), float64], Tensor[(16, 10, 14), bool], Tensor[(16, 9, 16), bool], Tensor[(180), float64], Tensor[(5, 63), float32]) */
}

def @func_6987(%var_6986: Tensor[(5, 4, 13), float32]) -> (Tensor[(5, 4, 13), float32], Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(5, 4, 13), float64]) {
  %809 = fn (%var_6922: Tensor[(5, 4, 13), float32]) -> (Tensor[(5, 4, 13), float32], Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(5, 4, 13), float64]) {
    %801 = cast(%var_6922, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
    %802 = @func_6292() /* ty=(Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(224), float32]) */;
    %803 = @func_6475() /* ty=(Tensor[(?, 14, 16), bool], Tensor[(1176), float64], Tensor[(?, 10, 14), int16], Tensor[(14, 6, 14), float64], Tensor[(1, 10, 14), float64]) */;
    %804 = cast(%var_6922, dtype="float64") /* ty=Tensor[(5, 4, 13), float64] */;
    %805 = cos(%801) /* ty=Tensor[(5, 4, 13), float32] */;
    %806 = %802.0;
    %807 = %803.4;
    %808 = acos(%804) /* ty=Tensor[(5, 4, 13), float64] */;
    (%805, %806, %807, %808)
  };
  %809(%var_6986) /* ty=(Tensor[(5, 4, 13), float32], Tensor[(1, 10, 14), float32], Tensor[(1, 10, 14), float64], Tensor[(5, 4, 13), float64]) */
}

def @func_4615(%var_4614: Tensor[(14, 7, 7), float64]) -> (Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 7, 7), float64], Tensor[(2, 9, 12), uint8], Tensor[(27), float32]) {
  %824 = fn (%var_4587: Tensor[(14, 7, 7), float64]) -> (Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 7, 7), float64], Tensor[(2, 9, 12), uint8], Tensor[(27), float32]) {
    %810 = cast(meta[relay.Constant][61] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
    %811 = reshape(%810, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float64] */;
    %812 = cast(%var_4587, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
    %813 = acos(%812) /* ty=Tensor[(14, 7, 7), float64] */;
    %814 = cast(%var_4587, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
    %815 = shape_of(%813, dtype="int32") /* ty=Tensor[(3), int32] */;
    %816 = cast(%813, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
    %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %818 = cast(meta[relay.Constant][62] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
    %819 = reshape(%818, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
    %820 = @func_3934(%819) /* ty=(Tensor[(9, ?, 3), float64], Tensor[(5, 16, 7), int64], Tensor[(560), float64], Tensor[(180), float64], Tensor[(6, 78), float64], Tensor[(1176), float64], Tensor[(3, 10, 6), bool], Tensor[(10, 7, 1), float32], Tensor[(70), float32], Tensor[(2, 9, 12), uint8], Tensor[(216), float32]) */;
    %821 = @func_29(%811) /* ty=Tensor[(9, 4, 13), float64] */;
    %822 = power(%816, %817) /* ty=Tensor[(14, 7, 7), float64] */;
    %823 = %820.9;
    (%821, meta[relay.Constant][61] /* ty=Tensor[(468), float64] */, %822, %823, meta[relay.Constant][62] /* ty=Tensor[(27), float32] */)
  };
  %824(%var_4614) /* ty=(Tensor[(9, 4, 13), float64], Tensor[(468), float64], Tensor[(14, 7, 7), float64], Tensor[(2, 9, 12), uint8], Tensor[(27), float32]) */
}

def @func_8782(%var_8780: Tensor[(420), float64]) -> (Tensor[(1, 10, 14), float64], Tensor[(3, 10, 14), int8], Tensor[(420), float64], Tensor[(224), float32]) {
  @func_8779(%var_8780) /* ty=(Tensor[(1, 10, 14), float64], Tensor[(3, 10, 14), int8], Tensor[(420), float64], Tensor[(224), float32]) */
}

def @func_5644() -> Tensor[(1, 10, 14), float64] {
  @func_5642() /* ty=Tensor[(1, 10, 14), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_191 = relay.var("var_191", dtype = "int16", shape = (11, 15, 1))#candidate|191|(11, 15, 1)|var|int16
var_192 = relay.var("var_192", dtype = "int16", shape = (11, 15, 1))#candidate|192|(11, 15, 1)|var|int16
bop_193 = relay.greater_equal(var_191.astype('bool'), relay.reshape(var_192.astype('bool'), relay.shape_of(var_191))) # shape=(11, 15, 1)
output = relay.Tuple([bop_193,])
output2 = relay.Tuple([bop_193,])
func_196 = relay.Function([var_191,var_192,], output)
mod['func_196'] = func_196
mod = relay.transform.InferType()(mod)
mutated_mod['func_196'] = func_196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_196_call = mutated_mod.get_global_var('func_196')
var_198 = relay.var("var_198", dtype = "int16", shape = (11, 15, 1))#candidate|198|(11, 15, 1)|var|int16
var_199 = relay.var("var_199", dtype = "int16", shape = (11, 15, 1))#candidate|199|(11, 15, 1)|var|int16
call_197 = func_196_call(var_198,var_199,)
output = call_197
func_200 = relay.Function([var_198,var_199,], output)
mutated_mod['func_200'] = func_200
mutated_mod = relay.transform.InferType()(mutated_mod)
const_460 = relay.const([[[-4.241994,-3.949856,-7.464724,-6.410141,9.895477],[1.424012,6.613207,7.511314,-5.643220,9.093397],[5.322463,-7.298242,9.268041,1.962249,-9.939082],[-5.705797,-1.181199,-6.969814,8.011670,-6.484907],[-5.814178,-9.896500,-6.744420,-3.942648,6.755831]],[[-6.485867,9.924123,-5.007324,-0.886107,3.603468],[-1.770975,5.140881,0.248796,-0.642340,1.901983],[3.118148,-3.823212,0.759037,0.210075,8.772329],[-9.128799,7.630424,-7.443557,-3.096510,9.652075],[-7.212044,6.122321,3.408955,6.856175,6.162066]]], dtype = "float32")#candidate|460|(2, 5, 5)|const|float32
uop_461 = relay.sin(const_460.astype('float32')) # shape=(2, 5, 5)
uop_463 = relay.asin(uop_461.astype('float32')) # shape=(2, 5, 5)
uop_465 = relay.cosh(uop_461.astype('float32')) # shape=(2, 5, 5)
bop_497 = relay.logical_and(uop_463.astype('bool'), relay.reshape(uop_461.astype('bool'), relay.shape_of(uop_463))) # shape=(2, 5, 5)
bop_503 = relay.less(uop_463.astype('bool'), relay.reshape(uop_461.astype('bool'), relay.shape_of(uop_463))) # shape=(2, 5, 5)
bop_514 = relay.add(uop_463.astype('float64'), relay.reshape(bop_503.astype('float64'), relay.shape_of(uop_463))) # shape=(2, 5, 5)
bop_522 = relay.divide(bop_503.astype('float64'), relay.reshape(bop_514.astype('float64'), relay.shape_of(bop_503))) # shape=(2, 5, 5)
func_196_call = mod.get_global_var('func_196')
func_200_call = mutated_mod.get_global_var('func_200')
const_537 = relay.const([-5,4,-4,3,-7,-1,2,-6,-6,2,-6,-7,7,4,-1,2,5,10,-7,1,-7,-8,10,1,5,-7,2,-9,-3,7,-4,-10,2,-10,4,5,-6,2,9,5,1,-6,-5,-3,7,-4,6,-4,5,9,7,-3,-7,10,-10,-3,-6,5,-5,10,8,-5,-8,-5,2,2,-8,-2,-2,4,-7,5,5,3,-8,-1,6,3,4,-9,-1,-4,8,7,-10,1,7,9,6,1,-6,10,-10,-10,-10,9,-9,-4,2,-4,4,8,-1,-3,-2,1,-7,-1,-4,1,9,-9,4,-5,7,-9,-5,10,5,-5,8,-4,-6,1,-8,-8,-2,-5,-10,-3,10,-6,8,-2,-9,-9,-4,-1,-9,-2,3,-6,-7,-1,1,-4,7,-7,7,-7,10,-5,-10,5,-9,8,9,8,5,2,7,-1,7,-9,-9], dtype = "int16")#candidate|537|(165,)|const|int16
call_536 = relay.TupleGetItem(func_196_call(relay.reshape(const_537.astype('int16'), [11, 15, 1]), relay.reshape(const_537.astype('int16'), [11, 15, 1]), ), 0)
call_538 = relay.TupleGetItem(func_200_call(relay.reshape(const_537.astype('int16'), [11, 15, 1]), relay.reshape(const_537.astype('int16'), [11, 15, 1]), ), 0)
output = relay.Tuple([uop_465,bop_497,bop_522,call_536,const_537,])
output2 = relay.Tuple([uop_465,bop_497,bop_522,call_538,const_537,])
func_541 = relay.Function([], output)
mod['func_541'] = func_541
mod = relay.transform.InferType()(mod)
output = func_541()
func_542 = relay.Function([], output)
mutated_mod['func_542'] = func_542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_615 = relay.TupleGetItem(func_541_call(), 2)
call_616 = relay.TupleGetItem(func_542_call(), 2)
output = call_615
output2 = call_616
func_619 = relay.Function([], output)
mod['func_619'] = func_619
mod = relay.transform.InferType()(mod)
mutated_mod['func_619'] = func_619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mutated_mod.get_global_var('func_619')
call_620 = func_619_call()
output = call_620
func_621 = relay.Function([], output)
mutated_mod['func_621'] = func_621
mutated_mod = relay.transform.InferType()(mutated_mod)
var_650 = relay.var("var_650", dtype = "float32", shape = (10, 12, 16))#candidate|650|(10, 12, 16)|var|float32
uop_651 = relay.atan(var_650.astype('float32')) # shape=(10, 12, 16)
func_196_call = mod.get_global_var('func_196')
func_200_call = mutated_mod.get_global_var('func_200')
var_660 = relay.var("var_660", dtype = "int16", shape = (165,))#candidate|660|(165,)|var|int16
call_659 = relay.TupleGetItem(func_196_call(relay.reshape(var_660.astype('int16'), [11, 15, 1]), relay.reshape(var_660.astype('int16'), [11, 15, 1]), ), 0)
call_661 = relay.TupleGetItem(func_200_call(relay.reshape(var_660.astype('int16'), [11, 15, 1]), relay.reshape(var_660.astype('int16'), [11, 15, 1]), ), 0)
bop_662 = relay.bitwise_and(uop_651.astype('int8'), relay.reshape(var_650.astype('int8'), relay.shape_of(uop_651))) # shape=(10, 12, 16)
output = relay.Tuple([call_659,var_660,bop_662,])
output2 = relay.Tuple([call_661,var_660,bop_662,])
func_666 = relay.Function([var_650,var_660,], output)
mod['func_666'] = func_666
mod = relay.transform.InferType()(mod)
mutated_mod['func_666'] = func_666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mutated_mod.get_global_var('func_666')
var_668 = relay.var("var_668", dtype = "float32", shape = (10, 12, 16))#candidate|668|(10, 12, 16)|var|float32
var_669 = relay.var("var_669", dtype = "int16", shape = (165,))#candidate|669|(165,)|var|int16
call_667 = func_666_call(var_668,var_669,)
output = call_667
func_670 = relay.Function([var_668,var_669,], output)
mutated_mod['func_670'] = func_670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_675 = relay.var("var_675", dtype = "uint8", shape = (15, 15, 1))#candidate|675|(15, 15, 1)|var|uint8
const_676 = relay.const([[[7,3,-7,5,5,-8,4,-3],[-1,-4,-6,-6,-3,2,5,-9],[-1,10,-3,2,8,4,-1,3],[-6,8,1,6,2,10,-4,-10],[1,-5,-5,-4,-8,-7,3,-2],[-6,-9,-4,-2,5,-6,1,3],[5,6,-6,5,7,4,-3,-9],[7,-9,-4,-9,-3,7,-10,7],[2,-7,4,-4,-7,2,-7,10],[-2,-8,8,-7,-2,-8,-7,-2],[-6,7,3,4,-2,-10,1,4],[9,-10,-9,9,-1,8,9,5],[8,-9,3,-3,-2,-3,-4,-4],[9,9,1,1,-6,10,-8,-5],[8,1,7,-6,8,-2,8,-5]],[[-10,-7,6,-4,9,-8,-10,-7],[-6,2,2,-4,9,5,2,6],[-6,-4,1,5,-4,10,7,-4],[4,8,-4,-8,-8,10,-3,-1],[-9,3,7,-3,10,-6,-9,-10],[4,10,-10,-3,-1,8,1,-5],[6,-2,4,3,9,3,-8,2],[10,-2,-2,1,-9,-7,8,-3],[-10,7,-10,-9,10,6,2,-3],[-2,5,1,-7,-4,-3,6,9],[10,-9,-8,7,10,-7,-1,-7],[7,-7,9,-1,10,-5,1,-4],[10,1,-2,8,-4,-4,-5,-10],[-4,-1,2,-8,-7,9,-7,-6],[6,6,8,2,9,8,9,-6]],[[-4,-8,10,-9,8,-2,-10,-5],[8,6,5,7,-6,-10,5,-9],[-5,-7,2,-10,5,7,-10,4],[4,-3,10,7,-9,10,-2,-10],[6,2,5,-10,3,6,2,1],[-1,-6,-8,-6,9,8,-5,-8],[8,-10,-1,-1,-8,8,-8,7],[-5,10,-6,-8,-4,-8,-5,-9],[6,5,-10,2,5,9,8,3],[-8,5,-1,1,-1,2,5,10],[3,-1,-4,-2,-2,10,-6,3],[8,-8,-3,4,-7,-10,10,-4],[-7,-5,-7,-8,7,-10,3,-6],[1,9,2,8,10,2,9,-4],[-2,-7,-7,9,-5,6,2,10]],[[-6,7,-2,5,-6,3,-2,4],[-5,4,-6,-5,-2,10,3,-5],[-8,-6,9,2,10,-1,-2,8],[-5,-7,-5,-5,-3,1,6,-4],[-10,7,-2,7,6,-4,-4,-4],[-5,2,-3,-7,2,2,-3,4],[-7,-7,10,10,-3,-4,9,7],[-1,5,6,2,-1,-7,1,10],[-2,6,10,-8,2,-9,2,-6],[7,-8,-3,-2,-3,9,-10,-1],[-5,-6,10,-9,8,3,5,4],[1,4,10,-8,-7,-6,-7,1],[1,10,-1,-6,-6,8,10,-1],[2,5,-3,5,-4,-7,8,-7],[-3,-4,4,3,1,-1,-3,-2]],[[-10,-1,1,-3,8,6,-5,-7],[-9,-3,1,3,7,-2,10,9],[2,5,5,8,5,9,8,10],[-9,10,-7,3,-1,-6,1,-1],[5,-8,-1,4,-2,-7,1,10],[10,-1,5,3,-10,-6,-4,6],[2,-10,10,-2,6,-5,-7,-8],[-4,-4,-2,-4,-5,5,-7,1],[-5,-4,-6,9,6,-1,-8,-1],[-8,1,3,-4,8,-10,-10,-6],[-3,-2,-7,-10,-5,-7,2,5],[-5,1,4,6,5,-6,-6,-10],[5,9,2,-6,-2,10,-2,-5],[-3,-5,-2,-8,-7,-3,-9,6],[-6,-5,-4,-5,-5,-4,4,-6]],[[-8,6,1,8,-2,-5,-4,4],[-5,8,1,8,2,5,-3,-3],[-3,10,4,-6,-7,-7,1,10],[-2,5,-2,1,7,10,-8,-9],[-3,-7,-7,3,-1,6,2,7],[-4,7,-5,10,4,-2,-2,-3],[9,1,-2,-1,-5,-6,3,-8],[4,-3,-4,1,-4,2,3,2],[-7,10,-7,4,-8,-8,-4,5],[4,8,-10,5,3,9,-3,10],[4,-1,10,3,-6,8,7,-9],[-1,8,10,-7,-3,1,-7,-7],[-2,4,-4,2,5,-1,5,-5],[10,10,-7,3,3,-5,6,3],[-10,1,-1,-3,5,1,3,6]],[[9,3,3,7,3,-6,6,8],[4,10,-4,-4,-7,1,-2,5],[-3,7,-6,9,6,10,-3,-8],[8,4,2,-3,2,-1,10,-6],[-4,-6,9,2,3,9,-10,4],[-8,-2,-6,-7,8,5,-4,1],[-7,-2,6,-4,-6,4,-4,4],[9,-10,10,3,5,-7,10,9],[-9,-2,5,-2,2,6,8,-6],[5,-10,-5,-4,1,-1,1,6],[1,5,-7,8,4,-3,-4,-7],[-7,4,2,-4,1,-5,5,2],[-1,-3,-5,8,-3,-2,-4,-5],[-8,4,-9,4,-4,-2,-10,7],[3,-2,1,8,2,2,-10,6]],[[-6,-9,-9,-4,-2,3,3,7],[-10,-4,8,-6,3,8,-6,3],[-7,8,-7,-10,-1,3,3,-9],[9,-5,-7,-1,10,4,-4,-10],[9,-6,2,-5,6,-6,8,-1],[1,7,-8,8,6,6,9,2],[3,4,3,-8,-9,-10,-10,-5],[-9,-10,-1,-5,-2,-8,6,-1],[-7,4,-4,10,7,-10,1,7],[-10,-6,-7,7,-3,-10,-6,-8],[6,4,6,-3,6,-9,1,-8],[5,1,7,1,6,9,-4,6],[10,-2,-5,-1,-2,-7,-8,-3],[9,5,3,-5,9,10,10,-5],[-7,-9,6,5,-2,-9,7,3]],[[8,-3,-8,-8,2,-2,4,-5],[6,5,-5,10,-3,10,-2,8],[-3,-1,-9,9,8,4,-9,-7],[4,-9,-2,-10,9,-7,-3,1],[5,-8,-4,8,8,-8,-2,6],[-4,-6,-3,3,6,-2,-4,6],[8,8,1,-6,5,-8,6,4],[10,-8,8,-4,1,3,3,-7],[-5,3,-8,-7,-2,1,-10,7],[6,-2,7,7,5,5,1,-7],[6,2,-10,10,-3,-9,7,2],[3,6,-1,-10,-6,4,-7,-4],[2,1,-5,3,2,-3,-8,-2],[3,3,-2,-10,-9,6,7,1],[5,1,-2,10,-6,3,-9,7]],[[3,-6,4,-1,-2,9,6,7],[1,-1,-2,-7,3,-2,-4,-4],[8,2,-8,5,2,9,3,9],[-6,8,-9,-8,-6,-5,-9,9],[-1,-9,8,8,7,9,-5,-7],[1,1,-10,-2,-9,-9,8,-8],[-1,-7,-3,10,-4,2,-9,10],[-4,-8,10,-3,1,-7,-1,7],[4,-10,10,-6,9,6,7,-6],[9,-5,7,7,-9,-6,-1,-2],[-8,-1,2,-7,-7,1,-10,-5],[4,-7,-8,-1,-9,7,2,7],[2,10,-9,-7,1,10,-6,8],[7,-2,-10,-3,-10,10,-10,1],[7,5,10,2,-1,-3,-1,8]],[[-8,2,3,-8,-6,4,7,5],[1,-10,6,-4,-8,6,8,7],[6,4,5,-4,-2,6,-8,-3],[-4,9,9,-7,-2,6,10,-6],[3,8,5,10,2,5,10,8],[5,4,-3,-8,-5,-5,-8,-1],[-4,-8,3,-4,-5,-5,-1,8],[2,-7,-2,-2,-1,-2,-9,-9],[-4,-1,8,-3,8,-7,3,-2],[-7,2,8,-6,10,-10,-5,-1],[10,7,9,1,8,-6,-5,-7],[-9,-4,10,8,10,-8,-8,5],[3,6,-1,-9,8,9,-4,-8],[5,2,1,-7,7,-7,6,-5],[-1,-1,1,-1,-5,-2,9,4]],[[1,-9,-5,3,-4,10,-2,9],[7,6,-9,-7,-9,7,-1,2],[-6,-4,7,-6,-10,1,1,-7],[-9,6,-10,-6,4,-7,-4,-8],[-9,-3,2,9,6,-5,-9,5],[5,-6,4,6,-5,4,-1,2],[-5,-6,6,2,-5,-9,1,-2],[5,3,-2,-9,1,6,6,-2],[5,-9,-5,-1,9,-7,-1,-7],[9,-6,-9,9,8,2,5,4],[-1,-9,3,-7,1,3,4,-8],[9,5,-1,-6,4,-3,-1,9],[10,-6,-1,7,8,-3,9,-5],[-7,4,7,-7,9,9,6,10],[9,3,3,-9,-8,-3,-4,-5]],[[9,1,1,-8,-9,-8,7,3],[6,-6,-5,-9,-9,-2,-3,6],[-6,9,-6,-8,3,9,4,6],[9,-10,-8,7,-3,10,6,7],[4,1,-2,2,5,-7,-5,-10],[6,-9,10,2,9,-7,-10,8],[2,-2,8,-2,-9,-1,-4,1],[10,-4,7,2,-10,10,-7,3],[-10,6,3,1,6,4,-3,-10],[4,3,-2,9,8,-1,2,4],[1,9,7,3,4,-3,-4,-1],[-1,-4,-1,-4,-6,6,10,-9],[-10,-4,10,10,9,-10,10,-5],[-6,-3,-4,10,3,6,-5,-4],[-3,2,10,-7,7,5,-9,-8]],[[9,-5,-8,3,-8,5,-5,-6],[1,-4,-10,-1,-8,-4,-5,3],[-6,9,3,5,4,-5,-1,7],[-1,-3,2,9,10,-9,8,3],[2,7,-5,-9,2,-7,-6,-7],[5,-9,-5,9,4,10,-1,5],[6,-1,6,-9,-5,-3,1,8],[-1,-5,5,-10,3,10,-5,-9],[9,-2,-3,3,-7,9,-8,4],[-3,-6,2,-7,7,10,6,-5],[-3,-10,-7,-2,-3,2,7,-1],[-4,1,2,-2,-9,3,4,-10],[6,-1,5,9,6,9,7,4],[-8,9,4,1,4,7,-5,-4],[7,5,-3,-1,-8,-2,2,-8]],[[2,-2,-9,-10,-8,-2,5,3],[-5,5,-5,-7,-7,-7,7,-1],[3,5,-6,-6,5,-7,-7,-6],[1,2,-10,-6,-8,-7,-10,-3],[-10,6,7,-2,3,-5,-2,-5],[-2,8,4,8,10,-6,-4,3],[9,-1,3,-7,5,-9,2,-1],[-8,8,-4,7,-2,4,2,-9],[7,7,5,8,-7,6,-10,-6],[5,-2,10,3,-4,9,4,-9],[10,-3,-10,-5,-8,6,8,-6],[-6,4,-10,2,-3,10,-1,-8],[-4,7,2,1,-3,-7,9,-5],[-2,2,5,-7,-5,6,7,8],[-5,-7,5,8,-5,10,-8,2]]], dtype = "uint8")#candidate|676|(15, 15, 8)|const|uint8
bop_677 = relay.less(var_675.astype('bool'), const_676.astype('bool')) # shape=(15, 15, 8)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_685 = relay.TupleGetItem(func_541_call(), 2)
call_686 = relay.TupleGetItem(func_542_call(), 2)
output = relay.Tuple([bop_677,call_685,])
output2 = relay.Tuple([bop_677,call_686,])
func_687 = relay.Function([var_675,], output)
mod['func_687'] = func_687
mod = relay.transform.InferType()(mod)
var_688 = relay.var("var_688", dtype = "uint8", shape = (15, 15, 1))#candidate|688|(15, 15, 1)|var|uint8
output = func_687(var_688)
func_689 = relay.Function([var_688], output)
mutated_mod['func_689'] = func_689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_749 = relay.TupleGetItem(func_541_call(), 2)
call_750 = relay.TupleGetItem(func_542_call(), 2)
func_196_call = mod.get_global_var('func_196')
func_200_call = mutated_mod.get_global_var('func_200')
const_770 = relay.const([4,5,-4,6,9,-1,8,-8,-9,6,-6,-4,-8,-5,1,5,-7,-5,-7,6,10,-1,-3,9,9,-9,6,5,2,-4,7,10,10,-8,-8,-7,4,-7,4,-10,-1,9,2,3,2,-9,-7,-7,-4,-7,1,-1,9,-3,-5,-7,2,6,-10,10,-8,-2,-9,3,-8,-6,-4,4,-6,-8,10,7,-3,-7,-4,4,-7,-9,9,-2,4,-4,6,4,6,2,9,-7,-4,5,3,-2,-8,-9,-2,-2,8,7,-5,-5,-2,7,6,-4,-8,8,8,4,-10,-1,-3,-1,8,-2,-8,3,3,1,-4,2,2,5,-2,6,-1,8,-9,-4,8,9,4,4,-4,9,-10,1,-10,3,-7,-6,3,2,-3,-8,-4,-5,-1,-6,-5,-2,-5,-10,7,-7,-10,3,-4,-7,5,8,-4,-8,5,9,-8], dtype = "int16")#candidate|770|(165,)|const|int16
call_769 = relay.TupleGetItem(func_196_call(relay.reshape(const_770.astype('int16'), [11, 15, 1]), relay.reshape(const_770.astype('int16'), [11, 15, 1]), ), 0)
call_771 = relay.TupleGetItem(func_200_call(relay.reshape(const_770.astype('int16'), [11, 15, 1]), relay.reshape(const_770.astype('int16'), [11, 15, 1]), ), 0)
func_196_call = mod.get_global_var('func_196')
func_200_call = mutated_mod.get_global_var('func_200')
call_775 = relay.TupleGetItem(func_196_call(relay.reshape(call_769.astype('int16'), [11, 15, 1]), relay.reshape(const_770.astype('int16'), [11, 15, 1]), ), 0)
call_776 = relay.TupleGetItem(func_200_call(relay.reshape(call_769.astype('int16'), [11, 15, 1]), relay.reshape(const_770.astype('int16'), [11, 15, 1]), ), 0)
output = relay.Tuple([call_749,call_769,const_770,call_775,])
output2 = relay.Tuple([call_750,call_771,const_770,call_776,])
func_800 = relay.Function([], output)
mod['func_800'] = func_800
mod = relay.transform.InferType()(mod)
output = func_800()
func_801 = relay.Function([], output)
mutated_mod['func_801'] = func_801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_839 = relay.var("var_839", dtype = "float64", shape = ())#candidate|839|()|var|float64
var_840 = relay.var("var_840", dtype = "float64", shape = (4, 5, 11))#candidate|840|(4, 5, 11)|var|float64
bop_841 = relay.multiply(var_839.astype('float64'), var_840.astype('float64')) # shape=(4, 5, 11)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_854 = relay.TupleGetItem(func_541_call(), 4)
call_855 = relay.TupleGetItem(func_542_call(), 4)
bop_887 = relay.maximum(var_839.astype('int16'), call_854.astype('int16')) # shape=(165,)
bop_890 = relay.maximum(var_839.astype('int16'), call_855.astype('int16')) # shape=(165,)
func_619_call = mod.get_global_var('func_619')
func_621_call = mutated_mod.get_global_var('func_621')
call_902 = func_619_call()
call_903 = func_619_call()
output = relay.Tuple([bop_841,bop_887,call_902,])
output2 = relay.Tuple([bop_841,bop_890,call_903,])
func_914 = relay.Function([var_839,var_840,], output)
mod['func_914'] = func_914
mod = relay.transform.InferType()(mod)
mutated_mod['func_914'] = func_914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_914_call = mutated_mod.get_global_var('func_914')
var_916 = relay.var("var_916", dtype = "float64", shape = ())#candidate|916|()|var|float64
var_917 = relay.var("var_917", dtype = "float64", shape = (4, 5, 11))#candidate|917|(4, 5, 11)|var|float64
call_915 = func_914_call(var_916,var_917,)
output = call_915
func_918 = relay.Function([var_916,var_917,], output)
mutated_mod['func_918'] = func_918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_621_call = mutated_mod.get_global_var('func_621')
call_931 = func_619_call()
call_932 = func_619_call()
func_666_call = mod.get_global_var('func_666')
func_670_call = mutated_mod.get_global_var('func_670')
var_934 = relay.var("var_934", dtype = "float32", shape = (1920,))#candidate|934|(1920,)|var|float32
const_935 = relay.const([-5,5,2,-10,-9,8,-3,5,-3,-10,6,-5,-9,-2,-2,9,5,5,-7,6,-2,-1,-7,6,3,-1,1,-1,6,3,10,7,7,-7,-7,-2,7,3,-2,-4,-8,6,-10,2,-10,-5,-9,8,-4,-2,-5,-9,8,8,2,-8,6,10,1,-1,-8,-3,-9,-5,-5,-4,-1,-5,-9,-10,-5,-1,-2,-7,4,-4,-2,-1,8,-4,1,5,4,-1,-3,4,-1,8,-6,4,3,-4,7,-8,3,7,-1,-8,-4,-8,1,-4,-6,6,9,4,10,-7,-7,-1,6,-4,2,-3,-2,3,2,-8,2,-2,3,-1,8,-7,2,5,8,4,-3,8,8,1,-1,-10,-2,-3,10,8,-3,-3,5,-2,7,-4,-3,-6,-4,-4,-5,-7,9,-9,-6,-7,2,-6,5,-9,-4,-3,-5,-1,-7,5,9], dtype = "int16")#candidate|935|(165,)|const|int16
call_933 = relay.TupleGetItem(func_666_call(relay.reshape(var_934.astype('float32'), [10, 12, 16]), relay.reshape(const_935.astype('int16'), [165,]), ), 0)
call_936 = relay.TupleGetItem(func_670_call(relay.reshape(var_934.astype('float32'), [10, 12, 16]), relay.reshape(const_935.astype('int16'), [165,]), ), 0)
output = relay.Tuple([call_931,call_933,var_934,const_935,])
output2 = relay.Tuple([call_932,call_936,var_934,const_935,])
func_938 = relay.Function([var_934,], output)
mod['func_938'] = func_938
mod = relay.transform.InferType()(mod)
var_939 = relay.var("var_939", dtype = "float32", shape = (1920,))#candidate|939|(1920,)|var|float32
output = func_938(var_939)
func_940 = relay.Function([var_939], output)
mutated_mod['func_940'] = func_940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_986 = relay.TupleGetItem(func_541_call(), 2)
call_987 = relay.TupleGetItem(func_542_call(), 2)
output = call_986
output2 = call_987
func_1012 = relay.Function([], output)
mod['func_1012'] = func_1012
mod = relay.transform.InferType()(mod)
mutated_mod['func_1012'] = func_1012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mutated_mod.get_global_var('func_1012')
call_1013 = func_1012_call()
output = call_1013
func_1014 = relay.Function([], output)
mutated_mod['func_1014'] = func_1014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1015 = relay.var("var_1015", dtype = "float32", shape = (6, 13, 14))#candidate|1015|(6, 13, 14)|var|float32
uop_1016 = relay.log2(var_1015.astype('float32')) # shape=(6, 13, 14)
output = uop_1016
output2 = uop_1016
func_1021 = relay.Function([var_1015,], output)
mod['func_1021'] = func_1021
mod = relay.transform.InferType()(mod)
mutated_mod['func_1021'] = func_1021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1022 = relay.var("var_1022", dtype = "float32", shape = (6, 13, 14))#candidate|1022|(6, 13, 14)|var|float32
func_1021_call = mutated_mod.get_global_var('func_1021')
call_1023 = func_1021_call(var_1022)
output = call_1023
func_1024 = relay.Function([var_1022], output)
mutated_mod['func_1024'] = func_1024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1030 = relay.var("var_1030", dtype = "float64", shape = (1, 15, 12))#candidate|1030|(1, 15, 12)|var|float64
const_1031 = relay.const([[[-8.081718,5.660575,-2.025281,-8.410513,-2.495130,-2.575015,0.671218,-5.013292,1.103861,7.902885,-2.398686,-5.316596],[-1.888140,3.531950,-1.394598,-5.665528,7.542338,2.045295,-2.791631,-5.864881,-2.358296,-5.670651,-4.689598,-3.721364],[-2.221013,4.436905,-0.497776,5.528515,-0.577710,7.423831,3.850292,4.832056,8.924984,8.370271,9.128898,9.713560],[-3.793006,1.541667,-8.377706,4.733636,8.291234,-4.019954,-8.335567,1.951802,-6.138679,8.072832,-1.205788,-3.156689],[8.348746,-2.900767,7.248367,7.074945,5.207477,3.715784,-9.879477,-7.239238,9.996259,-5.435139,4.693505,-8.068750],[-7.129335,6.534991,8.335806,3.438997,3.259782,3.082606,9.936904,8.105176,8.868010,-2.314173,0.505543,-7.844821],[5.181570,-9.905851,-9.918476,-2.541344,4.096946,4.392433,-5.328238,7.105895,-5.988279,-0.877361,9.596858,2.649053],[-8.552383,2.291154,-9.344110,-5.816785,-3.720635,-1.409637,-3.316281,3.657500,7.941368,-2.791600,4.734041,3.213636],[-0.493854,2.756914,6.682271,-9.777128,6.478331,5.486781,6.867698,1.280743,2.497735,-5.527400,4.635352,5.772419],[9.891762,-7.090247,8.067266,-5.333469,9.786861,-7.305512,-5.968184,0.276325,-6.272433,-2.068999,-9.927014,9.976881],[0.684911,7.335624,8.283782,7.902894,-0.907174,-0.531165,-9.234993,0.218611,-5.602715,-6.961110,2.326705,-7.911559],[3.386200,5.449400,2.192295,4.950240,2.025931,7.399668,5.036263,4.685142,-9.143571,7.520210,-9.258093,-1.052923],[-8.600031,-6.886629,-8.409272,8.447195,9.366179,-2.320715,2.386014,0.724076,-4.967686,-2.713330,-5.328006,-2.332354],[2.708073,1.887493,-6.057587,-3.941939,-3.156297,-1.521720,-7.215327,-1.584335,5.971056,-9.912202,-3.513347,3.267218],[-2.522989,-4.725056,8.652351,6.771960,9.807839,-6.133902,-3.817887,-8.456433,3.391126,-2.376325,9.043113,5.088667]],[[4.968211,6.040214,-0.222118,-9.115516,-1.245595,9.027377,1.825450,-2.527371,3.771980,5.197087,-2.706026,-3.215572],[-2.600244,3.118361,-4.500137,-8.142254,-2.517994,0.013089,-0.845802,4.109132,4.733706,-6.544898,7.293719,0.778702],[-0.802122,-1.891827,-1.636889,-8.913869,1.838216,-8.940109,6.273585,6.817845,1.933477,-4.591908,9.567836,-5.789591],[-2.623707,0.279760,-2.619221,-8.843916,4.263525,6.664368,8.751467,2.344487,1.548011,-4.778754,-7.458341,-8.858690],[9.024757,-9.228161,-4.866415,8.197166,3.361019,-4.782267,3.308310,-0.889904,6.529323,-8.218954,-9.238485,-6.833401],[-2.549065,-1.508322,-4.002572,-8.526698,6.834590,-4.846669,6.530970,-9.912456,7.002808,-4.793143,5.795267,6.018759],[-1.692206,9.443887,9.044362,-0.801575,6.847028,3.695185,0.093004,2.506946,-0.303062,-5.411317,8.256339,-0.657355],[6.322159,5.049966,-0.293861,-2.678108,-9.742410,6.099642,2.759263,4.539626,-8.009936,-5.157133,-9.533342,-2.621906],[-1.950306,4.601970,7.825965,-5.596656,-3.759720,8.927608,-2.724798,-4.988542,3.827890,9.838170,7.147886,6.120285],[9.742963,-3.486143,0.162067,-4.418667,4.338170,0.325973,2.118798,-1.206636,7.762638,-6.870885,7.915585,7.289347],[-7.297427,5.386103,1.320545,4.343769,-6.106773,8.977059,-9.502272,9.075751,6.681324,-7.875422,-3.204405,-4.901957],[-9.729548,-5.584907,5.546713,5.088962,-5.220158,-1.882011,2.852671,-5.708628,6.543971,-8.096183,6.784439,7.952507],[-2.632963,7.460129,-9.294069,6.050553,5.602070,-0.960450,2.574875,-7.376389,-1.240397,8.772681,0.391309,-2.955912],[1.210806,-4.582676,-3.714262,4.678962,-5.743694,-0.528041,3.165854,5.566403,3.725086,3.953584,9.189764,-5.826359],[-0.551466,-4.779848,4.298502,-8.766129,4.669790,7.669936,4.133654,-7.075126,2.221105,-7.201381,-9.496371,5.594406]],[[-7.910821,-8.827085,8.177964,9.595035,5.002428,0.915999,-9.932986,1.159855,-6.245606,-5.321337,-8.843746,4.784064],[0.091530,-4.095699,-8.962939,7.015872,-3.818863,-7.052808,-0.523419,-2.163196,5.674010,-4.532928,7.411788,6.849794],[-7.466134,7.048748,2.407195,-9.966160,5.861046,-4.393851,3.856407,-0.791713,-8.346641,5.541058,-9.064983,-4.873469],[6.714034,-5.530615,-8.333423,-7.537339,3.212625,3.326835,9.966097,7.954395,-9.059537,-4.275761,4.103207,-2.078570],[9.685225,-6.533241,4.168773,-5.527685,9.600872,4.690720,-1.476273,-1.920009,-3.144675,-0.290311,2.223586,-5.873158],[-8.678533,4.035961,0.823651,1.854524,0.246745,-9.447561,-3.734768,7.779940,1.750287,2.527748,2.741594,8.210818],[-9.741726,8.969497,4.685892,8.526735,-4.408999,1.202606,-1.039875,-4.386043,-0.842440,-6.216395,4.411159,-7.425076],[2.512080,4.709845,3.362991,-4.978971,-8.541856,-3.841293,9.821714,2.167143,-8.784165,1.214316,4.594430,2.849075],[-4.630518,-8.095540,7.746517,2.605279,7.428532,1.552994,7.964912,-3.363271,8.194786,-2.976324,-9.036302,-4.828111],[-3.238505,-2.108294,-5.147263,-8.663067,5.477711,-3.717845,4.203985,2.966699,-1.611871,-8.310439,-3.061499,-5.221089],[5.011005,-7.325897,-2.385189,-7.080993,-9.979910,6.965889,-4.065432,-3.174741,-5.134751,3.380258,-2.267310,-5.756543],[3.012484,-1.110426,7.806896,-5.965926,4.201809,8.558106,0.155661,1.837160,-4.339086,-6.142672,-4.092729,-0.038058],[-9.890925,-7.682272,4.760708,2.243843,5.641065,-4.699739,-5.146361,8.905969,-1.986241,-3.052875,2.370552,4.810824],[-0.209895,-8.458672,-2.483708,7.387093,-7.330043,3.857056,9.628432,2.459368,2.244105,9.424468,-6.499352,1.996940],[4.942476,-8.781461,3.550998,-9.630911,-0.719379,-4.826707,-4.668858,7.734620,-7.655596,-3.839180,5.884323,-5.763102]],[[8.957128,5.800727,0.629007,-3.112943,-4.518093,8.909703,0.491591,5.202570,-2.388929,-6.258477,4.371456,-3.029256],[0.157143,9.240466,-0.717976,7.994699,-3.678600,6.981209,7.323844,-4.755770,-1.048097,-8.867107,-7.229112,1.544994],[4.731490,8.362559,2.061919,-4.864823,-8.015949,-1.148107,-2.270611,-6.143787,-7.359163,-9.584336,-1.159118,6.618736],[-8.668139,-1.532977,7.836627,2.612561,7.795171,4.570205,-5.144536,1.581203,-8.868292,9.791604,4.785976,2.991673],[0.814334,-8.957294,-8.607643,5.351669,9.015815,9.971855,0.419105,8.781252,6.577111,-6.031517,5.699870,-8.743300],[2.591517,-1.550746,-1.750291,-0.723793,7.385880,3.596584,-6.464599,-0.133901,-9.455050,-2.385367,-2.322071,-0.481754],[-1.741793,-5.098220,6.211404,6.601634,-3.019853,9.840949,1.154622,8.752278,-8.548496,4.238494,3.209217,-1.877506],[6.793565,8.976366,1.100273,-6.522399,-8.350176,2.492972,0.395016,-4.781275,-2.252993,-8.495328,7.937225,-4.337735],[-5.786745,-9.683550,4.686492,7.941475,3.346816,-8.457610,6.758790,2.340515,4.720443,2.559594,5.298167,3.081432],[6.776205,-7.735930,0.372548,2.353852,-2.658808,6.207658,-2.094052,-0.561576,9.371231,-8.937510,4.331623,7.109477],[-7.660532,-3.942049,-7.550096,8.716036,0.764534,2.005622,-5.423262,6.166909,-7.821727,-1.701489,8.083587,1.415427],[-6.908553,1.827792,2.203264,-0.339872,5.949156,0.382260,-1.045055,-3.977400,-6.221889,-6.092975,-0.415554,7.643230],[-2.753244,3.751091,5.297541,6.791062,0.228839,3.239146,4.255586,-4.242024,-8.475944,-8.135388,2.072757,7.870913],[-4.702278,-1.990935,9.046215,-6.349931,-3.202532,6.488400,-9.829833,2.337516,-3.555009,-8.856556,-6.705593,-2.330196],[-2.880978,-8.810464,7.840717,-4.517038,9.441999,-0.890070,-1.338926,2.213920,2.488743,-8.669836,3.407441,2.139161]]], dtype = "float64")#candidate|1031|(4, 15, 12)|const|float64
bop_1032 = relay.floor_divide(var_1030.astype('float64'), const_1031.astype('float64')) # shape=(4, 15, 12)
func_800_call = mod.get_global_var('func_800')
func_801_call = mutated_mod.get_global_var('func_801')
call_1036 = relay.TupleGetItem(func_800_call(), 1)
call_1037 = relay.TupleGetItem(func_801_call(), 1)
func_619_call = mod.get_global_var('func_619')
func_621_call = mutated_mod.get_global_var('func_621')
call_1058 = func_619_call()
call_1059 = func_619_call()
func_938_call = mod.get_global_var('func_938')
func_940_call = mutated_mod.get_global_var('func_940')
var_1066 = relay.var("var_1066", dtype = "float32", shape = (1920,))#candidate|1066|(1920,)|var|float32
call_1065 = relay.TupleGetItem(func_938_call(relay.reshape(var_1066.astype('float32'), [1920,])), 0)
call_1067 = relay.TupleGetItem(func_940_call(relay.reshape(var_1066.astype('float32'), [1920,])), 0)
func_619_call = mod.get_global_var('func_619')
func_621_call = mutated_mod.get_global_var('func_621')
call_1074 = func_619_call()
call_1075 = func_619_call()
func_938_call = mod.get_global_var('func_938')
func_940_call = mutated_mod.get_global_var('func_940')
call_1076 = relay.TupleGetItem(func_938_call(relay.reshape(var_1066.astype('float32'), [1920,])), 1)
call_1077 = relay.TupleGetItem(func_940_call(relay.reshape(var_1066.astype('float32'), [1920,])), 1)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_1079 = relay.TupleGetItem(func_541_call(), 3)
call_1080 = relay.TupleGetItem(func_542_call(), 3)
const_1088 = relay.const([[[False,True],[False,True],[True,True],[True,True],[True,True],[False,False],[True,False],[False,True],[False,True],[True,True],[False,False],[True,False],[True,True],[True,False],[True,True]],[[False,True],[False,False],[False,True],[False,False],[False,True],[True,False],[True,False],[True,True],[True,True],[False,False],[False,False],[True,True],[False,False],[False,False],[False,True]],[[True,True],[False,True],[True,True],[True,True],[True,True],[False,False],[False,True],[False,True],[False,False],[False,False],[False,False],[True,True],[True,True],[False,True],[True,False]],[[True,False],[True,True],[False,True],[False,True],[False,True],[False,True],[True,False],[False,False],[True,True],[False,True],[True,False],[True,False],[False,False],[False,False],[False,True]],[[False,True],[False,False],[False,False],[True,True],[True,True],[False,True],[False,False],[False,True],[False,True],[False,False],[True,True],[False,False],[False,False],[True,False],[False,True]],[[True,True],[False,True],[True,False],[True,False],[True,False],[True,False],[False,False],[False,False],[True,False],[True,True],[False,False],[False,False],[True,False],[True,False],[False,True]],[[True,False],[False,True],[True,True],[True,True],[True,True],[True,True],[True,True],[True,True],[True,False],[True,True],[True,True],[True,True],[True,False],[False,False],[False,False]],[[False,True],[False,False],[False,False],[False,False],[True,True],[True,False],[False,False],[False,True],[True,True],[True,False],[False,False],[True,False],[False,False],[False,False],[True,True]],[[False,True],[False,True],[True,True],[True,True],[True,False],[True,False],[False,True],[False,False],[True,True],[False,False],[True,False],[True,False],[False,True],[False,True],[True,True]],[[False,True],[False,False],[False,False],[True,True],[True,False],[True,False],[False,False],[False,False],[False,True],[True,False],[True,False],[True,False],[False,True],[True,True],[False,False]],[[False,False],[False,True],[True,False],[True,False],[False,False],[True,True],[True,True],[True,True],[False,False],[False,True],[False,True],[False,True],[False,False],[True,True],[True,True]]], dtype = "bool")#candidate|1088|(11, 15, 2)|const|bool
bop_1089 = relay.left_shift(call_1076.astype('int8'), const_1088.astype('int8')) # shape=(11, 15, 2)
bop_1092 = relay.left_shift(call_1077.astype('int8'), const_1088.astype('int8')) # shape=(11, 15, 2)
output = relay.Tuple([bop_1032,call_1036,call_1058,call_1065,var_1066,call_1074,call_1079,bop_1089,])
output2 = relay.Tuple([bop_1032,call_1037,call_1059,call_1067,var_1066,call_1075,call_1080,bop_1092,])
func_1099 = relay.Function([var_1030,var_1066,], output)
mod['func_1099'] = func_1099
mod = relay.transform.InferType()(mod)
var_1100 = relay.var("var_1100", dtype = "float64", shape = (1, 15, 12))#candidate|1100|(1, 15, 12)|var|float64
var_1101 = relay.var("var_1101", dtype = "float32", shape = (1920,))#candidate|1101|(1920,)|var|float32
output = func_1099(var_1100,var_1101,)
func_1102 = relay.Function([var_1100,var_1101,], output)
mutated_mod['func_1102'] = func_1102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_621_call = mutated_mod.get_global_var('func_621')
call_1167 = func_619_call()
call_1168 = func_619_call()
output = relay.Tuple([call_1167,])
output2 = relay.Tuple([call_1168,])
func_1172 = relay.Function([], output)
mod['func_1172'] = func_1172
mod = relay.transform.InferType()(mod)
mutated_mod['func_1172'] = func_1172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mutated_mod.get_global_var('func_1172')
call_1173 = func_1172_call()
output = call_1173
func_1174 = relay.Function([], output)
mutated_mod['func_1174'] = func_1174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1194 = relay.var("var_1194", dtype = "float64", shape = (5, 4, 11))#candidate|1194|(5, 4, 11)|var|float64
uop_1195 = relay.atan(var_1194.astype('float64')) # shape=(5, 4, 11)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_1206 = relay.TupleGetItem(func_1172_call(), 0)
call_1207 = relay.TupleGetItem(func_1174_call(), 0)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_1213 = relay.TupleGetItem(func_541_call(), 0)
call_1214 = relay.TupleGetItem(func_542_call(), 0)
output = relay.Tuple([uop_1195,call_1206,call_1213,])
output2 = relay.Tuple([uop_1195,call_1207,call_1214,])
func_1215 = relay.Function([var_1194,], output)
mod['func_1215'] = func_1215
mod = relay.transform.InferType()(mod)
var_1216 = relay.var("var_1216", dtype = "float64", shape = (5, 4, 11))#candidate|1216|(5, 4, 11)|var|float64
output = func_1215(var_1216)
func_1217 = relay.Function([var_1216], output)
mutated_mod['func_1217'] = func_1217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_1230 = func_1012_call()
call_1231 = func_1012_call()
func_666_call = mod.get_global_var('func_666')
func_670_call = mutated_mod.get_global_var('func_670')
const_1233 = relay.const([8.147766,-7.952471,9.713374,9.561248,1.423118,-3.071963,9.662635,9.764896,5.350987,9.999340,-7.483683,5.641675,-4.434072,8.119403,5.291884,6.702591,3.135359,9.175864,-7.191287,-3.202432,1.201634,5.211442,3.887742,-1.584280,-7.111945,7.901531,-6.378690,-6.626132,7.883335,-8.947912,0.722444,-9.660070,9.529574,-5.794208,-2.857336,-0.082379,8.334721,6.937425,-3.124147,7.649583,1.886953,0.699277,-8.852656,-1.997005,1.486438,-2.569501,-3.310716,-7.886870,-7.172981,-1.793764,8.733973,-5.617907,-1.591612,7.675314,7.226597,2.043992,9.783415,-4.481323,-7.831844,9.100031,8.065409,6.581966,-6.713098,-8.877835,-3.980264,-3.224513,9.363711,-9.790805,-7.193748,-5.692335,-5.550880,-4.453760,-0.013479,4.979403,9.672669,1.488249,-9.019791,-1.525912,-1.035356,-2.444092,5.730707,-6.446658,1.584520,6.419766,-3.153881,-5.189156,4.074670,-0.242992,1.050904,1.510577,-1.617143,-2.163988,8.535672,-3.587093,3.677584,-8.118670,9.783284,1.176613,6.178254,-9.033224,-4.381544,-7.763339,7.360982,8.987513,0.043378,0.130111,3.733806,-2.645445,-6.234225,-3.906665,1.051383,2.797238,9.126816,-1.746610,0.275197,-4.794313,8.094553,4.194960,5.581907,0.784843,8.306259,6.516588,-5.932272,7.221506,-9.301344,-7.544797,-4.008938,-1.478329,-4.699675,-5.032258,2.472324,0.070726,-9.053478,9.120459,-1.393358,-9.282899,0.751660,-7.816271,6.027670,-8.178882,-7.429057,-0.820545,-2.029389,-0.740977,9.620092,-7.354181,-8.779913,5.540093,1.489317,-5.534269,1.903855,2.334172,-3.796010,9.978370,-3.889204,1.219566,-2.364289,2.291023,-9.898622,-2.183581,1.064225,-1.219986,-4.680420,-5.852326,-4.518620,4.531430,8.353251,-8.213411,0.198528,6.876870,-6.919750,-6.182649,-9.719753,6.951702,6.253455,-3.423454,0.229498,-8.451079,-5.687773,6.510172,-3.792779,9.414049,7.155948,7.930805,0.665353,-9.062742,-6.241202,-4.793977,2.475038,2.865439,7.280181,9.172431,5.701874,2.243483,-2.131458,-7.027649,9.125726,-5.686282,-8.194646,4.864084,-7.925612,7.414606,-0.593889,-0.435763,4.352809,7.165381,2.575700,7.953473,-8.393189,2.858995,3.053947,0.180111,3.689238,-3.803143,-2.227059,9.532864,8.775350,7.929427,-2.401391,8.070098,7.228642,9.018221,9.570721,9.156648,8.169436,-0.112708,6.792909,5.597551,0.902986,-1.308959,-5.738187,1.413330,-0.789288,1.553444,-2.688951,-1.266692,7.370451,-2.312595,0.395920,5.234842,-7.791875,6.950888,1.162524,-3.749165,-2.360059,-6.387653,-9.071353,2.885835,-2.672058,-7.616909,5.959934,1.402346,-2.855419,-9.730650,9.481490,-6.919217,9.441276,8.504560,-8.561447,-0.263873,-5.058908,1.158751,-3.738529,2.633729,-3.802185,6.138608,5.609335,-1.959037,-3.483556,0.049662,-0.948750,-6.450291,0.326133,8.250452,9.597385,8.880159,-2.140937,3.526925,1.478955,-5.598876,-0.234452,4.872982,-3.947632,5.838594,-1.877265,-5.827284,-8.390003,3.002730,2.869048,8.516663,-9.678221,-6.684121,-0.704031,5.746959,1.291197,1.187980,8.556847,0.028657,-5.067439,-7.788277,8.220764,-1.170368,5.061525,9.810512,-3.226902,-3.988298,1.960963,1.093915,-3.140076,9.499589,-0.900990,4.770203,-2.040350,0.939785,8.184321,0.785209,4.110412,-2.068638,0.565318,4.912651,-3.887830,-6.583021,-5.541330,7.357053,-8.309567,-1.397074,5.289998,-4.392523,-6.981323,4.970715,-9.185883,-6.658368,-6.517650,-9.365123,3.911737,4.690360,7.692718,1.197977,9.176948,-0.055168,-0.325526,4.592366,-0.651104,2.024549,6.413280,-3.606629,9.079271,6.535663,1.223222,-4.054254,6.679257,2.354727,8.165065,3.198890,6.119443,4.364202,-6.811970,-3.242106,-8.010430,-3.444569,-0.799420,2.490904,9.925847,7.043269,1.939542,6.392207,8.911271,8.426086,-0.098008,8.344060,4.575994,5.559637,4.369304,-1.084370,5.732750,-8.362450,-4.458982,0.771819,-3.998349,-3.014866,-7.904801,6.051980,-3.650817,4.473252,5.844465,8.543273,2.145144,-6.349101,-1.094726,-5.292232,2.659441,0.755767,3.682446,-9.349557,1.021600,0.219959,-4.687068,0.439947,5.374424,0.140566,5.776673,8.293537,2.689375,-1.186090,0.595867,4.817950,8.636975,-8.800203,-7.280241,-0.498142,8.581747,7.151504,-6.690358,2.521190,4.586192,-7.897611,4.200429,2.501543,-5.442845,-3.426226,8.928349,-3.576368,-1.041752,5.850220,3.421406,-4.347812,6.481951,2.745524,-7.707946,7.174756,1.636936,-4.033696,-3.083505,-4.358767,5.594109,-7.780916,-4.971164,4.452587,4.027859,7.916282,3.563743,7.585477,-2.390519,-1.798752,3.319508,-6.354423,-7.479384,5.202639,2.917201,3.714283,-6.260992,2.045034,-1.547542,9.480522,6.890516,7.458611,-0.466718,7.625079,2.564913,9.436607,8.228111,6.956019,0.276437,-1.693425,-2.542910,3.867934,4.492375,-1.671097,-7.655235,7.515716,-6.122624,-5.542114,-0.681632,1.991920,4.479697,-5.905044,2.839870,-2.477692,2.915269,0.707945,-7.122799,-9.530413,4.050952,-7.911842,4.739272,9.956343,-9.654943,-0.537148,4.098821,-8.882238,4.025810,7.029681,-3.219660,5.615547,0.805097,-4.651405,1.957055,8.465458,1.732630,-4.535173,-0.460214,-4.506002,0.516584,4.191318,7.419846,-1.321080,-4.395857,4.737383,5.180872,-2.304049,6.459230,8.667433,-4.179187,5.902340,-6.468985,-6.509747,4.181136,6.905950,4.358456,4.036212,-4.211180,3.372614,2.176390,3.033666,4.918374,4.510081,-9.233086,-0.452680,-9.657054,-5.568921,6.544157,7.286067,-5.686376,-8.073135,3.431353,-2.275268,1.361288,-9.995549,-3.102506,4.005001,-6.534910,-9.584246,8.540434,6.799702,-0.222113,-2.582624,-0.140769,-4.654071,-4.987314,-8.541830,-3.214827,9.693749,9.632828,-0.184939,-6.749057,4.842395,1.259134,8.302437,-4.771280,-4.984800,5.405823,9.025950,-8.158848,-4.199712,-5.445327,-6.547393,1.580124,-7.800856,2.364198,-7.000943,-6.788619,-0.132135,8.087425,0.836819,-6.615869,-6.139172,-5.731227,6.370295,1.988570,-5.556463,2.232201,-4.784581,-3.940114,4.323308,5.073369,7.230323,4.846195,1.145421,-4.095486,4.348419,-4.221161,-7.538729,0.977070,3.596621,5.555560,-4.981320,-4.695520,9.340805,1.911266,2.517014,-2.466940,-5.828352,-1.256932,-1.072994,-1.871040,-8.619421,4.640904,-0.153827,-6.782365,9.131192,1.569003,-3.619372,-2.443866,-2.658058,-2.198763,-7.361063,4.139833,6.938571,0.987370,-4.737778,2.260650,-5.350797,5.860097,0.907501,8.983345,9.193627,-3.729909,-0.218350,7.315693,-6.515200,-5.253052,-4.696071,5.308144,-5.034771,6.916525,2.985941,1.543560,5.575743,-9.894583,-0.068398,4.736488,-5.886291,-3.015435,-1.796942,1.854480,3.912639,6.483651,4.651602,5.087542,0.444296,-4.206872,5.391370,7.201841,-3.458839,3.064125,9.753755,-6.591350,-0.937785,-4.497121,-3.386987,2.370423,-2.336968,3.409318,-9.984207,2.236171,1.750571,-9.243506,2.294352,3.243168,1.166798,-7.650768,9.839170,-2.593042,4.684149,-8.448710,-1.468732,-8.935567,0.029781,2.185091,-5.950775,2.231559,-8.678242,8.161321,0.012455,-3.681534,4.521968,0.212223,2.102494,4.326080,3.033313,7.663266,5.872260,-7.011198,0.189819,-4.868284,-5.859375,-6.876782,0.601101,-8.201184,-3.825342,9.465275,3.915550,6.170640,-0.482122,-3.957640,-2.515547,-5.455482,8.795565,-5.315841,-5.836491,-3.863054,5.446591,8.814254,-4.038174,3.001275,-8.357991,7.140231,-4.761348,7.073891,0.327919,-1.941943,2.746684,3.247307,4.497053,1.902317,9.259738,-5.940121,-2.824345,6.195153,8.955107,-8.945742,-3.799503,3.051147,-6.775639,2.433846,-6.751976,4.083249,-8.915394,-4.667888,3.605966,9.346962,-6.723114,1.075591,-8.886501,9.470869,1.350588,4.645949,4.991030,-6.617038,2.096847,0.928904,4.842336,0.917951,-2.907717,9.371528,-1.750051,-5.385078,-3.562644,4.234074,-9.600090,-8.163528,-1.992153,6.194684,5.182743,6.455204,-3.131855,-9.669402,-3.920039,5.448328,-6.043309,-2.097127,-3.845172,8.490631,-7.482584,9.869842,9.072895,-7.129966,9.400853,-0.958553,-8.186536,-3.216084,-3.848569,-5.953340,-7.507931,3.945005,4.266317,2.470989,-9.669364,-6.181813,-1.728698,-2.643442,-5.786725,9.070787,-1.082540,-8.078422,-9.117969,5.449660,3.720008,9.709641,-6.035699,-5.437696,-5.649670,4.937014,-5.793827,1.340380,6.384882,5.308881,-0.864872,3.899657,-8.347877,9.946036,-9.020942,4.871278,4.191402,-8.360034,-6.611465,0.885904,-5.415848,5.651708,-1.025978,6.180314,-3.214701,0.403781,-4.047775,-3.465222,-9.014267,6.224373,-3.117439,8.008368,9.872085,9.079227,-6.377882,-6.385226,7.462524,-6.315252,-0.015804,7.158256,-7.533689,1.422941,-2.358943,7.890003,-8.529709,2.370443,8.893629,-7.075545,-2.423265,-8.153985,-3.717965,-9.180406,1.734029,2.090537,-0.600138,-6.363897,-2.098653,8.538610,9.884396,9.411329,9.822271,0.263340,7.201625,5.602408,3.597496,8.789363,-2.260412,-2.185632,-6.738731,9.183185,-3.242525,1.564516,-9.179962,8.293731,1.974051,7.851949,-7.258717,8.603147,-6.746849,4.550527,2.710453,0.613366,-2.599732,5.303274,1.164858,-5.591444,-3.566069,-2.737625,-5.162347,5.555201,0.935269,2.035385,0.895537,2.260160,0.613990,7.451174,3.535176,5.661665,-0.899376,-1.875134,3.895848,-5.784069,-1.763816,-4.505291,-2.312863,-8.126918,-4.149923,8.607438,4.534523,7.002747,-7.417306,7.607278,9.744439,4.091992,1.538895,-1.338926,-0.445730,-5.726505,6.521036,-8.805771,-4.861803,9.839825,-3.172153,-4.734033,-9.133724,-3.872522,5.113274,-1.482607,-2.428466,-5.190848,-4.387945,1.753256,7.789043,1.345779,-7.655063,5.280608,9.447086,-6.802333,5.537959,9.754781,-8.663917,-3.028100,5.408615,8.539139,5.001239,9.731361,-9.895247,-6.337900,-8.557801,-7.602569,5.375112,-3.057187,1.459305,-8.992918,8.009388,-6.910453,-0.648693,6.441114,1.113263,0.564279,6.876777,-5.180568,4.721599,7.639208,1.175908,3.309012,4.138882,6.568568,-5.208809,-0.892025,3.604255,2.079219,6.202518,7.812093,4.898496,5.366364,5.182096,-8.341545,7.931867,-8.260226,-6.906747,8.121917,2.614242,-7.190300,3.813597,-4.318819,4.149699,-2.514940,-0.774957,8.799663,-6.292785,-2.305748,8.335800,3.882719,9.543406,4.482028,7.405317,6.746658,9.316520,-9.171088,-7.552017,1.545919,-1.753308,0.602664,3.372993,9.089063,9.587273,9.125283,-7.156223,0.613923,-9.394304,3.963824,-2.954252,0.196332,-6.685567,-1.744006,-0.282777,-3.373697,5.766975,4.861413,8.339433,-8.136085,5.504578,0.829269,-6.553634,6.227942,2.474496,-8.174482,2.696189,2.410463,5.988659,5.625648,7.625114,7.649212,5.734019,3.698831,6.510375,1.390831,6.339439,-2.503180,-3.649152,-8.507974,3.038282,7.017155,-4.159014,-0.504884,-1.781318,9.431541,-5.902802,-2.336341,-8.418357,-9.583002,5.536379,-9.038090,-5.487290,5.558996,-0.203871,-6.357877,-6.099790,-0.136308,-1.701138,9.135758,-2.730760,-9.033838,8.266265,-7.129392,-2.533763,2.181019,5.703342,-0.882183,-7.570195,-4.694265,3.194564,-3.509137,-7.410710,6.184226,-1.746421,2.205421,9.903782,7.045309,-6.061419,-8.420699,-8.154733,-8.790638,8.830611,2.437893,-4.178272,-8.141277,-0.131782,-4.935473,-9.564439,5.511566,-1.828373,4.611110,-1.787763,-7.028779,6.923540,8.675499,-9.994374,4.853541,-2.328739,6.437087,-7.017118,-0.391527,3.579856,4.591137,-3.812301,-8.135741,6.092658,5.970179,-8.100350,-0.734340,-0.517229,6.489093,0.266312,7.922247,8.614961,0.274086,-4.059459,-0.614662,-2.778495,1.426592,-1.165896,2.191939,-6.873274,8.290051,-7.832951,-6.125189,8.051611,6.657028,-2.018831,-8.267364,4.827669,9.032015,8.432193,2.385681,1.147040,5.576090,-1.994281,3.835402,6.330313,9.390091,-0.560953,-0.186462,4.030908,-2.539701,-9.249992,8.411470,-9.203593,-9.115941,-9.650917,3.929998,-3.074227,6.101676,6.530736,9.939548,7.400916,-8.891645,-7.831978,8.954292,-2.228004,4.419500,-4.334885,7.370185,2.414946,1.091225,6.309748,2.975712,1.983001,2.837661,9.590800,9.386705,2.633034,-4.813222,-7.374734,-0.777590,-4.461444,-0.612073,-9.631827,8.535517,2.647893,-4.230604,-6.332065,-0.171035,-8.920803,-3.606778,1.428762,9.590415,-0.796151,-3.285074,4.044572,3.738178,2.503091,2.734348,4.965458,3.566332,1.700490,-1.245763,-0.577743,0.251172,-9.318689,-8.348231,2.614014,-8.123988,-8.099322,-3.301420,0.560131,9.503871,7.596742,9.219039,8.483035,9.462586,-0.299695,-6.899801,6.121675,4.525099,-0.375080,7.535556,4.884503,3.032739,-8.885425,-9.031956,3.660479,-5.485549,-7.903156,-6.449071,2.060173,-2.363118,6.139586,-5.649189,-6.337500,-3.032169,7.140462,-8.714575,8.614276,-9.780760,6.720924,-3.649147,-7.636068,-1.737433,-0.928309,4.113841,-3.505399,4.178749,-3.575118,-2.421037,7.534678,2.126130,-2.264574,-8.683660,0.562639,-5.270487,9.466828,-0.678514,4.339804,-9.212043,9.656562,3.270582,0.633346,8.319391,-3.109062,-9.822602,-7.631869,3.956401,5.383560,-7.699354,-8.446187,7.471839,1.644745,-8.776352,-3.364082,-5.625033,-2.688576,-0.710946,-2.953838,4.917165,0.471217,1.034688,-8.935858,5.085841,-6.263995,-1.731278,-8.002677,-4.431060,0.595916,-5.552470,7.207244,4.055450,0.052235,6.837218,4.472415,-6.374935,-9.857550,-1.021645,-8.087353,-0.583413,-6.162435,-4.328611,-9.122799,-8.387549,9.099028,-7.163359,-2.191005,-1.010518,0.173157,1.360042,-6.689026,6.128336,3.577810,2.500532,3.233184,-1.157556,1.641136,-8.781126,4.005739,0.032593,-5.121219,1.522463,-9.468882,-5.970367,6.580244,-0.310043,3.641408,-9.098408,-5.709040,3.828772,2.783003,9.015425,-5.312015,0.086153,-1.610343,-5.883705,-5.430833,5.014781,6.235005,-5.674145,-2.313401,-3.250634,-5.742296,-8.153348,2.722578,9.874839,-8.901046,6.962514,-4.847924,-4.308716,2.709099,4.419951,1.041400,-8.651623,-3.822719,7.997263,-3.789250,0.971252,6.427474,1.884513,1.491345,1.456390,8.094881,-6.994474,1.703168,-4.064920,6.866685,-7.281139,4.809153,6.244818,5.900094,-0.381998,-4.822171,4.252820,3.842800,-6.488690,8.063951,-1.863802,-2.593634,-6.755896,-2.647496,9.186786,4.404872,-8.360233,-8.353555,-1.905355,-2.183813,1.351827,-0.107620,-1.118346,3.479295,-6.450248,5.124352,4.205790,3.405198,4.822746,6.266774,1.681041,7.074257,8.388295,3.786749,0.356653,-0.196002,7.193044,3.929465,-1.062113,-2.104812,0.288118,-4.053403,-5.556196,5.843984,9.527501,-8.895311,4.742050,-6.735963,4.211268,-0.992596,5.769912,-2.153238,-2.725425,4.344610,-2.806186,2.538378,1.136903,8.070158,-7.415956,5.484190,7.792136,-9.434667,3.461000,1.588118,4.567085,-5.080683,-9.211123,9.092285,-0.230616,1.680190,-6.208353,9.167964,-8.860230,7.824856,6.350868,-0.782272,-9.983938,3.286644,3.796471,1.350306,-0.284287,-3.319581,-8.679896,4.554234,-0.074232,3.890958,-1.666622,-5.650545,6.858241,7.067654,-5.614518,2.984949,-4.173066,1.512922,5.918014,-8.864807,-7.360283,-7.303979,-2.644237,0.608185,4.710014,-5.628466,6.432261,-6.691269,-8.296004,1.567298,-0.469945,-5.098130,6.712604,-3.537753,-4.056961,8.383493,0.151121,7.504520,1.060011,-2.606297,9.082987,-4.114350,7.868623,-5.252578,-1.473752,6.023128,-0.958108,-7.263977,7.074069,2.891478,4.562853,-8.329266,-9.840260,7.772114,-2.065518,-9.227990,-9.056996,6.499285,-2.802223,5.936923,5.655061,4.587925,-6.465789,-1.067839,-1.471792,5.156036,-8.438386,1.547100,0.520602,-4.445018,-7.735993,-6.881774,-7.277416,7.540442,9.308307,5.630322,9.955276,-0.480039,-2.216453,8.667985,-2.775363,7.169117,-0.189642,-5.263793,3.145377,2.755461,3.315990,-9.091146,0.550291,-6.796239,-4.660169,-5.644104,-2.350666,-3.696311,6.810167,-6.781000,-1.486167,-5.071919,-9.468180,4.161079,1.939246,0.990449,-9.149389,-2.003677,6.343982,-9.940900,2.160876,0.965407,1.836660,-2.354546,4.678018,1.378308,-2.825447,-7.456759,-4.383441,-2.774094,7.781874,-8.144364,3.048163,4.194166,-2.314145,8.231167,-2.301620,5.862064,-2.402774,-1.976376,-8.194394,5.197558,6.821058,6.729222,2.255921,-8.989569,-4.115588,-1.067416,2.748057,-1.363742,4.528683,6.483786,8.070461,-9.040884,0.630073,3.362682,-4.599922,-8.439178,8.687797,7.962633,-9.432051,7.116097,-2.199754,-2.707561,5.026987,8.745770,-6.854497,8.247644,-6.502646,3.112330,-8.060494,8.832894,-6.408645,8.177399,-3.507367,-7.208150,-3.863038,9.294949,-5.797091,-4.271014,-1.982285,-6.887652,4.138067,-5.528524,6.350828,0.307008,2.668460,-5.401730,-2.650856,2.379983,-1.754087,6.641885,8.541703,-4.960613,4.213221,3.785690,-1.229491,-1.391225,1.632943,2.291734,2.844135,2.274466,-4.792440,-6.541862,8.674884,6.675243,7.149127,-9.320756,9.863437,-5.788679,0.898877,-6.314440,-6.891989,1.577994,-3.667744,-8.057529,3.371767,-9.819468,-4.428079,0.823891,-4.430048,4.547958,2.706041,-1.693069,-6.965702,2.705525,-3.522977,-4.276149,8.367425,7.062427,-6.506515,7.112499,7.358543,3.843573,-9.297066,3.573999,0.991965,-6.787506,-6.190109,6.562000,-3.180829,-7.778813,6.184404,0.218171,1.653373,-8.410293,-0.410632,4.967752,5.494045,0.707922,3.313753,-7.139220,-0.047467,-3.878450,4.550181,0.516680,-1.433054,-2.597101,-9.288961,-1.214229,-5.270438,-7.827227,-3.042546,-1.605907,-1.773869,3.960456,-5.038357,1.737046,5.877071,9.436314,1.191052,-6.266863,9.205405,6.447817,-7.298294,5.663365,-8.265500,1.493246,8.612264,-4.611034,-5.261478,-8.873951,3.481516,9.236969,3.424706,2.602640,0.872807,-5.979549,7.274600,4.147311,-8.807570,-1.274369,-6.445653,3.029835,-0.547680,6.290968,-4.854033,9.282272,2.409957,-4.287520,-7.436116,-5.837677,2.108390,-0.349560,-0.788971,-4.349483,-9.679731,-9.125200,-4.295111,-8.137078,4.850776,5.206561,6.843233,-7.641257,8.116193,4.363547,-0.198821,-9.075597,3.063852,-7.442444,-4.626620,-4.945980,-7.785052,1.507443,-5.578844,9.783700,0.518664,7.940812,2.611907,-1.206195,-3.102078,-4.009537,0.970554,-8.411669,0.864194,-5.603428,5.051897,-0.236038,3.527464,7.430556,-5.706760,-9.427332,7.231580,-0.413056,3.102906,-0.104477,4.629487,-3.465922,5.121427,6.464173,-3.034004,-2.386061,-4.866076,0.392615,-2.734116,8.672172,5.778559,-6.787970,-8.701077,2.601874,3.252040,2.367255,2.709643,6.903377,1.744227,3.953801,7.687201,9.238924,3.976992,9.238916,9.342849,-5.609908,-9.065452,-2.401826,0.335017,-9.884401,5.162824,4.764255,-1.797691,1.946472,5.061042,5.387035,-5.018794,-6.769666,4.858376,4.113073,4.339073,1.486954,-3.066888,-9.217445,8.981260,6.238176,-3.728447,3.568608,4.777328,-3.584302,-5.554800,9.776109,9.966786,-7.911900,-2.374036,5.738715,3.130956,3.373971,-7.860108,0.642957,1.946569,-0.952263,-0.684305,-0.656581,-4.756173,-9.132653,-5.797978,1.771982,-1.302223,-5.515323,0.366330,-5.531927,-3.872248,0.626727,7.447794,-7.026931,8.088721,-0.065984,3.687659,5.826162,-0.076125,-9.166913,-1.378927,-5.827585,4.099732,9.316477,-8.955701,2.433326,1.436989,-4.721172,0.664320,6.190996,2.950147,-4.827242,-1.473336,2.488342,-5.062663,5.935684,2.500806,8.346928,-8.684222,-2.981590,-5.984338,8.744940,-5.236756,-7.557132,6.344593,-2.085446,7.058862,4.930745,-6.987353,-5.899867,-2.066004,7.115097,0.326567,-2.833536,1.252704,9.926372,-0.582146,-0.525303,-1.168794,-5.488345,-4.082841,-5.143250,-4.766530,-6.547135,-7.879567,4.830692,-0.426629,5.842686,7.728900,-6.770209,-0.407673,-1.994710,-7.664713,9.426344,8.893464,-9.827908,-8.592143,2.364247,-8.947004,7.785081,2.996452,0.423533,-1.200047,0.735067,-1.114538,-8.488479,2.009396,0.026463,5.459100,-6.211473], dtype = "float32")#candidate|1233|(1920,)|const|float32
const_1234 = relay.const([-6,4,8,-3,-8,-7,8,7,5,8,1,10,-10,9,4,1,-8,1,-8,-10,-5,7,6,7,-7,-7,-6,-8,-10,2,-7,-5,9,-3,-4,3,10,3,6,-9,-5,-3,-3,-7,-10,-8,-1,1,1,-9,7,-2,-2,4,5,2,10,-2,8,8,6,2,1,9,7,8,-10,10,-5,1,-8,1,8,-2,3,-4,-8,-8,10,-4,5,-9,-2,6,-3,-9,-2,8,-6,-8,-10,9,1,-10,7,7,4,7,-5,3,-4,9,-5,-5,7,1,6,-7,9,7,1,-10,-10,-9,3,-6,-6,-10,2,-3,1,-8,4,-3,5,9,-5,-1,5,3,3,5,-4,2,10,-7,-9,-7,2,-6,-1,-3,3,3,-3,7,4,7,7,-4,-5,8,-5,7,-7,6,-7,6,2,-9,6,5,8,-7,-1], dtype = "int16")#candidate|1234|(165,)|const|int16
call_1232 = relay.TupleGetItem(func_666_call(relay.reshape(const_1233.astype('float32'), [10, 12, 16]), relay.reshape(const_1234.astype('int16'), [165,]), ), 1)
call_1235 = relay.TupleGetItem(func_670_call(relay.reshape(const_1233.astype('float32'), [10, 12, 16]), relay.reshape(const_1234.astype('int16'), [165,]), ), 1)
func_687_call = mod.get_global_var('func_687')
func_689_call = mutated_mod.get_global_var('func_689')
const_1242 = relay.const([1,6,7,-10,2,1,-7,9,-6,9,9,2,4,1,5,6,1,-3,7,5,-1,-5,1,-2,4,-8,-3,-10,-6,-9,-7,8,6,-8,5,2,10,-4,-3,9,-8,-2,-7,8,-3,6,-3,-10,8,-3,9,-10,-3,1,3,-3,9,1,-8,-9,9,5,-10,2,2,10,1,2,6,-9,-5,9,-10,10,-3,-10,-4,6,-9,1,-4,-3,-3,-8,-8,8,-9,-9,-1,-8,-6,7,-3,-4,-3,-6,-10,-1,-3,3,-8,-7,10,-8,3,-5,4,8,5,2,9,-5,6,-1,9,-10,-5,-3,-3,5,-7,-6,2,-8,8,-7,7,-5,9,2,9,4,1,10,10,-1,-8,8,10,9,8,-4,-7,10,2,4,5,7,5,9,3,-2,8,-10,-10,6,-4,-4,7,5,-7,-3,6,8,7,7,-9,10,-3,-6,1,10,2,4,-10,-3,9,9,7,-9,7,4,-6,-3,-9,9,-3,-3,5,-6,-8,1,-4,5,10,-6,9,-4,6,-4,-8,-5,4,-4,9,3,9,-7,6,4,5,2,-2,2,4,5,1,-1,-9,-3,6,-6,-9,10,6], dtype = "uint8")#candidate|1242|(225,)|const|uint8
call_1241 = relay.TupleGetItem(func_687_call(relay.reshape(const_1242.astype('uint8'), [15, 15, 1])), 1)
call_1243 = relay.TupleGetItem(func_689_call(relay.reshape(const_1242.astype('uint8'), [15, 15, 1])), 1)
output = relay.Tuple([call_1230,call_1232,const_1233,const_1234,call_1241,const_1242,])
output2 = relay.Tuple([call_1231,call_1235,const_1233,const_1234,call_1243,const_1242,])
func_1266 = relay.Function([], output)
mod['func_1266'] = func_1266
mod = relay.transform.InferType()(mod)
mutated_mod['func_1266'] = func_1266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1266_call = mutated_mod.get_global_var('func_1266')
call_1267 = func_1266_call()
output = call_1267
func_1268 = relay.Function([], output)
mutated_mod['func_1268'] = func_1268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_1326 = relay.TupleGetItem(func_541_call(), 1)
call_1327 = relay.TupleGetItem(func_542_call(), 1)
output = relay.Tuple([call_1326,])
output2 = relay.Tuple([call_1327,])
func_1328 = relay.Function([], output)
mod['func_1328'] = func_1328
mod = relay.transform.InferType()(mod)
mutated_mod['func_1328'] = func_1328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1328_call = mutated_mod.get_global_var('func_1328')
call_1329 = func_1328_call()
output = call_1329
func_1330 = relay.Function([], output)
mutated_mod['func_1330'] = func_1330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_1336 = relay.TupleGetItem(func_541_call(), 2)
call_1337 = relay.TupleGetItem(func_542_call(), 2)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_1347 = relay.TupleGetItem(func_1172_call(), 0)
call_1348 = relay.TupleGetItem(func_1174_call(), 0)
output = relay.Tuple([call_1336,call_1347,])
output2 = relay.Tuple([call_1337,call_1348,])
func_1370 = relay.Function([], output)
mod['func_1370'] = func_1370
mod = relay.transform.InferType()(mod)
mutated_mod['func_1370'] = func_1370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mutated_mod.get_global_var('func_1370')
call_1371 = func_1370_call()
output = call_1371
func_1372 = relay.Function([], output)
mutated_mod['func_1372'] = func_1372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1376 = relay.var("var_1376", dtype = "float32", shape = (9, 16, 3))#candidate|1376|(9, 16, 3)|var|float32
uop_1377 = relay.log(var_1376.astype('float32')) # shape=(9, 16, 3)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_1392 = relay.TupleGetItem(func_1370_call(), 0)
call_1393 = relay.TupleGetItem(func_1372_call(), 0)
output = relay.Tuple([uop_1377,call_1392,])
output2 = relay.Tuple([uop_1377,call_1393,])
func_1412 = relay.Function([var_1376,], output)
mod['func_1412'] = func_1412
mod = relay.transform.InferType()(mod)
mutated_mod['func_1412'] = func_1412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1413 = relay.var("var_1413", dtype = "float32", shape = (9, 16, 3))#candidate|1413|(9, 16, 3)|var|float32
func_1412_call = mutated_mod.get_global_var('func_1412')
call_1414 = func_1412_call(var_1413)
output = call_1414
func_1415 = relay.Function([var_1413], output)
mutated_mod['func_1415'] = func_1415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_1468 = relay.TupleGetItem(func_1370_call(), 0)
call_1469 = relay.TupleGetItem(func_1372_call(), 0)
output = call_1468
output2 = call_1469
func_1499 = relay.Function([], output)
mod['func_1499'] = func_1499
mod = relay.transform.InferType()(mod)
output = func_1499()
func_1500 = relay.Function([], output)
mutated_mod['func_1500'] = func_1500
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1558 = relay.var("var_1558", dtype = "int8", shape = (1, 1, 4))#candidate|1558|(1, 1, 4)|var|int8
var_1559 = relay.var("var_1559", dtype = "int8", shape = (7, 14, 4))#candidate|1559|(7, 14, 4)|var|int8
bop_1560 = relay.maximum(var_1558.astype('int8'), var_1559.astype('int8')) # shape=(7, 14, 4)
output = relay.Tuple([bop_1560,])
output2 = relay.Tuple([bop_1560,])
func_1566 = relay.Function([var_1558,var_1559,], output)
mod['func_1566'] = func_1566
mod = relay.transform.InferType()(mod)
var_1567 = relay.var("var_1567", dtype = "int8", shape = (1, 1, 4))#candidate|1567|(1, 1, 4)|var|int8
var_1568 = relay.var("var_1568", dtype = "int8", shape = (7, 14, 4))#candidate|1568|(7, 14, 4)|var|int8
output = func_1566(var_1567,var_1568,)
func_1569 = relay.Function([var_1567,var_1568,], output)
mutated_mod['func_1569'] = func_1569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_1576 = relay.TupleGetItem(func_541_call(), 3)
call_1577 = relay.TupleGetItem(func_542_call(), 3)
func_1412_call = mod.get_global_var('func_1412')
func_1415_call = mutated_mod.get_global_var('func_1415')
var_1579 = relay.var("var_1579", dtype = "float32", shape = (432,))#candidate|1579|(432,)|var|float32
call_1578 = relay.TupleGetItem(func_1412_call(relay.reshape(var_1579.astype('float32'), [9, 16, 3])), 0)
call_1580 = relay.TupleGetItem(func_1415_call(relay.reshape(var_1579.astype('float32'), [9, 16, 3])), 0)
bop_1590 = relay.logical_and(call_1578.astype('bool'), relay.reshape(var_1579.astype('bool'), relay.shape_of(call_1578))) # shape=(9, 16, 3)
bop_1593 = relay.logical_and(call_1580.astype('bool'), relay.reshape(var_1579.astype('bool'), relay.shape_of(call_1580))) # shape=(9, 16, 3)
func_1328_call = mod.get_global_var('func_1328')
func_1330_call = mutated_mod.get_global_var('func_1330')
call_1594 = relay.TupleGetItem(func_1328_call(), 0)
call_1595 = relay.TupleGetItem(func_1330_call(), 0)
func_800_call = mod.get_global_var('func_800')
func_801_call = mutated_mod.get_global_var('func_801')
call_1608 = relay.TupleGetItem(func_800_call(), 0)
call_1609 = relay.TupleGetItem(func_801_call(), 0)
bop_1614 = relay.bitwise_and(call_1578.astype('uint64'), relay.reshape(bop_1590.astype('uint64'), relay.shape_of(call_1578))) # shape=(9, 16, 3)
bop_1617 = relay.bitwise_and(call_1580.astype('uint64'), relay.reshape(bop_1593.astype('uint64'), relay.shape_of(call_1580))) # shape=(9, 16, 3)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_1624 = func_1499_call()
call_1625 = func_1499_call()
func_1328_call = mod.get_global_var('func_1328')
func_1330_call = mutated_mod.get_global_var('func_1330')
call_1629 = relay.TupleGetItem(func_1328_call(), 0)
call_1630 = relay.TupleGetItem(func_1330_call(), 0)
output = relay.Tuple([call_1576,call_1594,call_1608,bop_1614,call_1624,call_1629,])
output2 = relay.Tuple([call_1577,call_1595,call_1609,bop_1617,call_1625,call_1630,])
func_1639 = relay.Function([var_1579,], output)
mod['func_1639'] = func_1639
mod = relay.transform.InferType()(mod)
mutated_mod['func_1639'] = func_1639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1640 = relay.var("var_1640", dtype = "float32", shape = (432,))#candidate|1640|(432,)|var|float32
func_1639_call = mutated_mod.get_global_var('func_1639')
call_1641 = func_1639_call(var_1640)
output = call_1641
func_1642 = relay.Function([var_1640], output)
mutated_mod['func_1642'] = func_1642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_1656 = relay.TupleGetItem(func_1370_call(), 1)
call_1657 = relay.TupleGetItem(func_1372_call(), 1)
output = call_1656
output2 = call_1657
func_1674 = relay.Function([], output)
mod['func_1674'] = func_1674
mod = relay.transform.InferType()(mod)
mutated_mod['func_1674'] = func_1674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1674_call = mutated_mod.get_global_var('func_1674')
call_1675 = func_1674_call()
output = call_1675
func_1676 = relay.Function([], output)
mutated_mod['func_1676'] = func_1676
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1679 = relay.const([[[-5,-2,-7,-10,4,-7,-8]],[[3,-6,2,-3,7,-3,8]],[[4,1,-8,-4,-1,-7,-6]],[[-1,-3,8,1,7,3,4]],[[10,-5,1,-4,8,-4,-2]],[[-4,-7,-5,-9,-4,-3,4]],[[6,5,10,-10,3,-2,2]],[[9,-8,4,-10,-8,10,-9]],[[4,10,-9,-5,4,-2,1]],[[-9,1,-9,-3,-6,2,1]],[[-5,-6,2,-8,2,4,1]],[[2,-1,5,8,-10,-6,3]],[[-10,9,-5,-4,-10,9,-10]]], dtype = "uint16")#candidate|1679|(13, 1, 7)|const|uint16
var_1680 = relay.var("var_1680", dtype = "uint16", shape = (13, 15, 7))#candidate|1680|(13, 15, 7)|var|uint16
bop_1681 = relay.greater(const_1679.astype('bool'), var_1680.astype('bool')) # shape=(13, 15, 7)
output = bop_1681
output2 = bop_1681
func_1688 = relay.Function([var_1680,], output)
mod['func_1688'] = func_1688
mod = relay.transform.InferType()(mod)
mutated_mod['func_1688'] = func_1688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1689 = relay.var("var_1689", dtype = "uint16", shape = (13, 15, 7))#candidate|1689|(13, 15, 7)|var|uint16
func_1688_call = mutated_mod.get_global_var('func_1688')
call_1690 = func_1688_call(var_1689)
output = call_1690
func_1691 = relay.Function([var_1689], output)
mutated_mod['func_1691'] = func_1691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_1719 = relay.TupleGetItem(func_1370_call(), 1)
call_1720 = relay.TupleGetItem(func_1372_call(), 1)
output = call_1719
output2 = call_1720
func_1732 = relay.Function([], output)
mod['func_1732'] = func_1732
mod = relay.transform.InferType()(mod)
output = func_1732()
func_1733 = relay.Function([], output)
mutated_mod['func_1733'] = func_1733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_1734 = func_1012_call()
call_1735 = func_1012_call()
output = relay.Tuple([call_1734,])
output2 = relay.Tuple([call_1735,])
func_1742 = relay.Function([], output)
mod['func_1742'] = func_1742
mod = relay.transform.InferType()(mod)
output = func_1742()
func_1743 = relay.Function([], output)
mutated_mod['func_1743'] = func_1743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_621_call = mutated_mod.get_global_var('func_621')
call_1744 = func_619_call()
call_1745 = func_619_call()
output = call_1744
output2 = call_1745
func_1748 = relay.Function([], output)
mod['func_1748'] = func_1748
mod = relay.transform.InferType()(mod)
output = func_1748()
func_1749 = relay.Function([], output)
mutated_mod['func_1749'] = func_1749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1732_call = mod.get_global_var('func_1732')
func_1733_call = mutated_mod.get_global_var('func_1733')
call_1779 = func_1732_call()
call_1780 = func_1732_call()
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_1796 = func_1499_call()
call_1797 = func_1499_call()
func_1639_call = mod.get_global_var('func_1639')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_1804 = relay.const([-0.757215,-7.418365,-2.742418,6.930209,0.775238,-8.265450,4.939375,7.913741,-7.762751,-0.402364,-4.618388,4.231719,-0.178354,3.770983,2.989879,3.017062,-7.016971,-7.470118,-1.334032,5.659906,6.648297,-2.641572,0.298787,-0.474824,4.899334,5.426870,-8.619745,7.221933,-6.998770,-2.616377,4.270055,8.249043,7.841006,4.407448,-8.043171,9.576815,-6.821837,-6.891343,5.335637,9.942418,8.117484,-8.582357,7.696163,-2.675853,-8.623039,6.458103,-0.125434,-3.810564,-3.587247,-6.685307,-0.303229,2.900683,2.236976,-3.370155,-0.893875,-9.164200,-6.817645,5.375174,-4.782620,-3.880608,-9.941697,-2.509604,-2.017249,-6.186088,-4.648131,0.740674,-7.327265,9.270027,-1.450729,-7.642249,-4.887007,-2.756377,-5.659573,-7.797056,9.318606,9.681897,7.499795,9.341374,-2.214694,-1.444035,-6.810884,0.453219,-5.087557,-7.491673,-3.686594,2.187385,2.246645,-8.971153,1.021309,-8.800871,4.383750,-3.272226,-2.902260,-3.659407,9.989380,2.014895,1.096065,-4.883922,-2.282221,-8.257575,-6.482833,8.294578,-6.460156,8.919336,-0.372968,-3.088255,8.513415,-2.222493,-5.452001,8.819105,-6.663072,3.097037,7.491624,0.892411,1.913497,7.179416,-0.595796,4.920730,-6.380247,-7.390911,3.431248,-3.592399,-4.379859,-4.171131,3.362612,-8.257293,-1.546031,3.100606,-7.752136,4.997213,0.770180,9.788309,9.195097,-0.819266,7.001281,4.350908,2.422335,1.121785,-1.117252,8.581658,4.896395,6.237852,2.236704,-6.715933,-6.255035,2.395031,-4.285301,5.694911,-6.686326,4.501534,-8.707367,-0.483153,-6.311063,6.247439,5.881632,-3.193007,9.048585,-5.849526,6.961557,-1.164830,8.694047,4.711864,-8.943162,5.274706,-3.224753,-4.815546,3.303241,-1.796050,-5.009051,9.529592,-9.312067,8.644465,4.106762,0.816667,-0.979671,-3.975517,6.397391,2.720556,-5.066305,-0.879104,8.693347,-0.708383,9.216322,-7.544951,-3.372514,8.187035,5.368230,-3.773842,9.973423,0.985753,4.769917,7.086949,0.258051,-3.011439,5.750684,-8.610033,4.467013,-8.811026,-5.690179,9.594473,-8.965023,6.183999,9.461146,-9.601141,8.477977,-4.175080,-7.581220,-5.006277,-1.949293,1.825578,3.618198,-6.550177,-1.750778,-3.201332,1.787409,-1.291253,-1.715565,8.012831,0.364768,-0.786843,-5.001581,-9.267469,-5.521224,-1.022261,8.228408,3.471998,-7.951257,-7.742794,-2.929888,3.131255,-9.588292,9.390663,0.782567,-6.735818,-7.046591,-4.513707,7.218399,5.284427,4.048589,-9.737880,-5.702360,1.867361,6.307475,2.317097,-0.847853,0.028653,-4.743154,-8.944344,6.452128,7.163256,3.186897,-0.316777,-5.552503,3.128993,-0.204077,-9.215911,7.994161,0.504674,1.516529,-3.653512,6.737555,-0.846874,-2.479936,2.963945,5.605081,0.017506,-2.128763,6.748394,-0.860744,-4.302100,-5.196530,7.070269,2.051913,-6.491015,4.692385,-0.291689,-8.936671,1.303918,7.732083,8.299198,2.449293,-7.876861,-8.328182,-1.930522,-8.012269,5.273642,8.641253,-3.033614,1.784566,-6.635511,9.982122,4.946572,5.795785,-6.138331,-2.166011,-9.438957,-3.673163,3.533903,-0.180467,9.552180,1.790978,-6.373763,6.200526,5.488447,2.794764,-8.332275,-7.905709,7.212023,-5.726268,6.672319,0.463606,-7.277250,-2.838682,-3.587171,9.870459,2.732291,7.043136,8.178761,-2.089103,6.436135,-9.884614,-9.461596,-8.411555,7.718075,1.764307,6.530791,-9.706658,-3.351700,3.547637,3.302285,7.816186,1.161380,-9.404140,5.305160,7.459993,8.293430,-3.731211,6.468907,0.263646,2.327904,1.184299,0.473604,-6.233007,-1.237453,-7.185436,-4.802896,-0.700417,-4.351405,2.686901,0.789446,9.968623,-9.116760,-9.604859,-5.293562,-0.654794,-7.237435,-6.899659,6.402931,4.684289,-9.019027,-9.324611,8.308614,4.296053,8.241988,-5.838135,3.752337,9.770144,0.066424,5.578268,5.115711,-8.448695,6.716093,6.409277,7.132442,-8.823004,2.769206,8.787294,4.289099,-5.188049,7.454367,1.360255,-6.737607,-6.589838,-9.225754,4.592421,-0.865667,3.626809,-1.897347,-0.150267,-0.720661,-0.877481,9.206908,-2.129868,-7.446972,-9.019712,2.210406,-8.661916,-6.904493,-3.714523,5.404592,6.197106,5.677908,3.960466,9.061810,7.212952,5.570924,0.373635,7.970003,6.281390,6.118631,0.125585,-4.541504,-9.504811,1.734373,0.973084,2.021156,-7.742826,-2.868900,-2.869209,7.446360,9.209426,5.948058,-7.886427,-0.570695,-5.264452,2.153774,7.062872,-6.940488,-1.832816,-8.039577,-8.387184,-0.616064], dtype = "float32")#candidate|1804|(432,)|const|float32
call_1803 = relay.TupleGetItem(func_1639_call(relay.reshape(const_1804.astype('float32'), [432,])), 3)
call_1805 = relay.TupleGetItem(func_1642_call(relay.reshape(const_1804.astype('float32'), [432,])), 3)
output = relay.Tuple([call_1779,call_1796,call_1803,const_1804,])
output2 = relay.Tuple([call_1780,call_1797,call_1805,const_1804,])
func_1814 = relay.Function([], output)
mod['func_1814'] = func_1814
mod = relay.transform.InferType()(mod)
mutated_mod['func_1814'] = func_1814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1814_call = mutated_mod.get_global_var('func_1814')
call_1815 = func_1814_call()
output = call_1815
func_1816 = relay.Function([], output)
mutated_mod['func_1816'] = func_1816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_619_call = mod.get_global_var('func_619')
func_621_call = mutated_mod.get_global_var('func_621')
call_1840 = func_619_call()
call_1841 = func_619_call()
output = call_1840
output2 = call_1841
func_1854 = relay.Function([], output)
mod['func_1854'] = func_1854
mod = relay.transform.InferType()(mod)
output = func_1854()
func_1855 = relay.Function([], output)
mutated_mod['func_1855'] = func_1855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_1856 = relay.TupleGetItem(func_1370_call(), 1)
call_1857 = relay.TupleGetItem(func_1372_call(), 1)
output = relay.Tuple([call_1856,])
output2 = relay.Tuple([call_1857,])
func_1882 = relay.Function([], output)
mod['func_1882'] = func_1882
mod = relay.transform.InferType()(mod)
mutated_mod['func_1882'] = func_1882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1882_call = mutated_mod.get_global_var('func_1882')
call_1883 = func_1882_call()
output = call_1883
func_1884 = relay.Function([], output)
mutated_mod['func_1884'] = func_1884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_1926 = relay.TupleGetItem(func_1370_call(), 1)
call_1927 = relay.TupleGetItem(func_1372_call(), 1)
output = call_1926
output2 = call_1927
func_1930 = relay.Function([], output)
mod['func_1930'] = func_1930
mod = relay.transform.InferType()(mod)
mutated_mod['func_1930'] = func_1930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1930_call = mutated_mod.get_global_var('func_1930')
call_1931 = func_1930_call()
output = call_1931
func_1932 = relay.Function([], output)
mutated_mod['func_1932'] = func_1932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1854_call = mod.get_global_var('func_1854')
func_1855_call = mutated_mod.get_global_var('func_1855')
call_2109 = func_1854_call()
call_2110 = func_1854_call()
var_2111 = relay.var("var_2111", dtype = "float64", shape = (2, 5, 5))#candidate|2111|(2, 5, 5)|var|float64
bop_2112 = relay.bitwise_or(call_2109.astype('uint8'), relay.reshape(var_2111.astype('uint8'), relay.shape_of(call_2109))) # shape=(2, 5, 5)
bop_2115 = relay.bitwise_or(call_2110.astype('uint8'), relay.reshape(var_2111.astype('uint8'), relay.shape_of(call_2110))) # shape=(2, 5, 5)
uop_2121 = relay.tan(var_2111.astype('float32')) # shape=(2, 5, 5)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_2134 = func_1499_call()
call_2135 = func_1499_call()
func_1639_call = mod.get_global_var('func_1639')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_2147 = relay.const([-3.182793,-2.969678,5.191984,7.121837,8.562501,-6.038503,-3.329838,-1.901432,6.801245,3.741388,-6.494817,-2.150856,8.138579,-1.677965,5.820585,-3.828012,6.940337,-3.205497,-7.207411,-7.506838,9.927318,5.083720,4.278188,9.059249,8.666905,8.713942,7.939934,2.951491,-1.986702,6.685827,-2.976829,4.495759,4.580979,-3.069833,1.624984,6.680670,-2.605275,-9.455783,-7.467366,-2.589616,-1.856782,-1.528381,5.974460,5.408313,0.036683,4.346089,-2.909122,-6.764371,-9.936074,8.301953,1.700887,-6.842562,9.804155,-7.833280,3.451170,0.161456,-4.263522,0.991609,-3.628347,7.042999,4.369583,6.703120,-4.594518,0.349851,-6.370178,-0.633188,-1.554331,7.118178,-3.382588,9.340154,6.961072,0.548654,-2.387833,0.381516,5.988329,9.167453,-1.118350,-0.285872,-4.624935,9.243475,-3.895136,-8.674582,4.056872,3.757121,0.427244,6.124428,4.068348,-4.229979,2.668318,-5.934971,4.753578,3.147426,-9.172722,-9.528913,-5.654152,-5.026107,7.718455,8.516108,-0.610923,-6.135110,8.419473,-5.300686,4.409303,5.144082,7.703486,0.284438,8.413602,-0.498360,7.846842,-7.017439,-1.514398,-8.102110,6.230574,-3.652954,-4.153676,-3.119952,-1.882499,9.340803,4.636581,-3.495125,-8.968730,4.964588,4.366568,-1.282968,-2.483922,-2.626208,6.215830,9.065916,-9.100872,-0.055891,-7.989698,-9.457255,-7.433883,-9.316232,-1.732787,-0.941895,7.736266,-9.426954,2.892403,6.600498,6.167808,-4.496165,-6.676378,-0.909588,-5.187849,-8.395287,8.447208,2.086110,-4.899386,5.231269,5.262830,5.587640,-7.873483,7.931230,-6.181381,0.111660,-0.227861,-9.688138,6.439168,5.220980,-8.246745,4.135547,-7.487543,4.967729,-3.855659,-7.443558,-9.884414,-5.486919,2.246643,-7.896429,-7.381613,-4.050685,0.358313,-0.116580,3.619532,-0.199505,4.500459,0.171932,0.297906,-9.904679,0.287306,2.251907,-9.889689,-8.304237,1.271782,-4.961402,2.725408,-9.447643,5.719437,8.553857,-8.075002,-5.277967,1.497844,3.975377,-5.174746,6.437870,-5.164053,0.482199,-9.383811,1.100033,-3.630098,-5.297924,-7.042429,7.450882,3.356026,-0.911807,-9.329001,3.768746,-5.924303,-4.682639,-1.130738,-7.485635,-7.128334,9.358770,-5.533337,-2.942362,-7.842540,-6.228617,1.357763,3.261678,-3.204796,-9.901888,-6.804516,6.259595,4.243983,-0.562053,8.067315,-0.068889,-5.089434,-3.650712,-3.644655,-2.634737,6.436649,6.940675,-5.246167,4.837930,-2.753668,0.025668,0.089871,7.170100,0.588509,-1.260379,7.811434,-8.803071,1.884403,-5.428782,-9.195017,-3.099638,8.662586,-7.862779,-1.852621,-4.114638,-2.065032,-8.907367,-0.709374,-2.952622,7.279546,-1.745024,4.169501,-4.839031,-6.843618,2.596926,9.289097,-1.361167,3.559815,-8.157715,5.886378,9.471445,2.717943,9.918137,7.669327,0.200003,4.683074,8.958978,-7.672590,1.372810,-6.011235,9.557324,-3.282085,-4.669739,8.989813,-4.629835,-2.170339,-7.950163,2.700408,4.962634,3.340049,6.865268,3.810906,3.020995,-4.655325,-7.914273,2.100193,8.544745,8.806219,-2.524758,-5.842426,8.612693,-5.731725,-1.146670,-2.642767,-7.776597,-6.489459,-1.635789,7.659719,-1.626522,-3.821064,-8.542647,-0.517554,5.664124,-1.200840,-1.448867,-3.509669,0.674683,4.418731,-8.429635,3.135460,1.156457,-6.017870,2.899831,-9.587080,-6.836032,-8.840905,-7.570623,-8.519258,3.383725,7.321304,1.913041,6.392048,-3.927623,6.916200,-7.045847,-7.562408,-0.674943,8.000088,-7.637350,3.691440,-9.155741,2.058525,3.050086,6.995330,-0.485496,-3.999917,-0.940567,-6.038422,1.981183,-6.164635,9.328596,8.796539,5.113461,8.466188,-0.317840,-8.185362,2.578397,-9.144622,9.350090,5.669685,-9.708732,-7.642151,3.327292,-5.188283,-7.599741,7.368687,2.620763,5.917988,7.102915,-6.642079,-7.280460,7.781474,-7.225697,-5.302539,6.654794,-5.909695,1.042592,-6.355453,4.538770,5.952901,9.145274,7.702201,-3.461620,-4.336751,-9.338406,7.176261,7.619364,-7.210978,-2.134414,-1.516913,-5.714817,-0.952713,6.557963,-1.265256,6.584518,-5.426542,-4.238826,3.948827,-4.155155,2.925185,-0.514295,7.477123,1.216806,7.597425,-7.477595,5.736507,-4.813072,7.189179,-1.872460,9.385324,6.665851,3.964252,8.321940,-1.809469,-9.553749,-9.099463,6.302147,-2.418635,1.323933,-0.018361,3.637367,-3.663280,6.482081,0.414569,-7.140816,6.830045,-6.085788,8.704021,9.980351,-4.292160,1.309793,-2.450607,-0.871933,4.091137,2.813909], dtype = "float32")#candidate|2147|(432,)|const|float32
call_2146 = relay.TupleGetItem(func_1639_call(relay.reshape(const_2147.astype('float32'), [432,])), 3)
call_2148 = relay.TupleGetItem(func_1642_call(relay.reshape(const_2147.astype('float32'), [432,])), 3)
output = relay.Tuple([bop_2112,uop_2121,call_2134,call_2146,const_2147,])
output2 = relay.Tuple([bop_2115,uop_2121,call_2135,call_2148,const_2147,])
func_2156 = relay.Function([var_2111,], output)
mod['func_2156'] = func_2156
mod = relay.transform.InferType()(mod)
mutated_mod['func_2156'] = func_2156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2157 = relay.var("var_2157", dtype = "float64", shape = (2, 5, 5))#candidate|2157|(2, 5, 5)|var|float64
func_2156_call = mutated_mod.get_global_var('func_2156')
call_2158 = func_2156_call(var_2157)
output = call_2158
func_2159 = relay.Function([var_2157], output)
mutated_mod['func_2159'] = func_2159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_2164 = relay.TupleGetItem(func_1370_call(), 1)
call_2165 = relay.TupleGetItem(func_1372_call(), 1)
func_938_call = mod.get_global_var('func_938')
func_940_call = mutated_mod.get_global_var('func_940')
const_2167 = relay.const([-2.751399,-7.751540,-3.946721,4.854926,2.769101,1.095057,7.483301,-7.458305,-4.108288,2.896457,-4.808761,0.729957,-2.677890,0.913573,-7.811146,7.029509,-3.951806,1.089880,4.843924,-1.622125,3.449626,-5.359907,8.592321,2.232579,-4.600689,-9.178123,-0.909059,-6.464539,3.304048,-8.105038,8.428405,-6.621125,7.028848,8.672289,4.650254,9.739188,3.876723,2.537453,-6.911341,-9.397742,9.140820,-9.706320,-6.072576,9.009734,-0.587600,6.655086,8.836660,4.890118,8.210437,6.245463,3.625442,-5.761626,-3.226319,8.195654,-8.748690,7.935776,-1.147877,8.942526,-0.279593,7.602078,1.836877,4.821534,-5.677994,3.608531,4.825273,-9.062354,-8.316731,1.098573,-0.381346,9.078512,7.301854,2.506954,-0.044231,-3.862295,5.389150,1.214407,5.247398,0.407766,-9.872255,3.590074,6.303708,-9.339157,-0.679486,-7.515853,-6.781594,1.169747,-9.618784,3.242865,-8.676443,-7.029905,1.047091,-6.868923,-9.104739,8.947250,-1.052154,-0.421183,-5.353995,9.776146,-7.752305,-9.343060,-5.664624,-7.446238,-9.432485,7.461696,-5.691544,-2.194437,-5.566322,-3.566677,-8.922664,6.414505,-7.114649,-7.787567,-8.048735,-8.327657,0.712193,2.896124,-3.361191,-6.889755,8.486637,0.483303,0.370023,-6.720997,-2.922089,-6.699497,-2.606897,-8.721699,3.665246,5.427058,-4.965464,2.997319,-4.293770,0.971934,-7.131994,5.869208,-1.156416,0.584429,-7.773963,2.129330,-7.218217,6.043829,7.860877,-6.835528,-3.860670,-6.915044,2.523584,-3.735184,-3.837594,-7.654922,-8.528342,-3.598908,1.633020,-4.056121,0.449251,-6.358968,-1.997401,-9.740247,8.107998,-3.861091,0.556237,3.549050,-0.589873,-1.822612,4.841079,-2.841087,4.967110,-6.266906,-4.480208,-7.529066,-0.403682,-2.581578,2.406810,-0.745642,4.692250,-9.691386,8.184213,7.912394,-4.894049,-7.852207,-8.217135,8.058157,-6.729445,-9.703757,-5.802476,-7.791267,-7.000331,6.685333,-1.601276,-0.469144,7.802034,-8.417175,-5.391612,-0.460579,8.322631,5.389971,1.203731,6.431892,-5.041011,2.528492,6.880622,-8.592659,-7.983973,2.251089,9.489831,-1.144825,-9.850658,-1.771389,-5.532281,7.599732,0.809038,3.279563,1.775131,-1.047297,0.533051,3.856705,-2.689060,-2.839760,3.623189,3.025337,5.580445,5.753434,-2.683200,4.929877,4.947432,-7.009932,1.059993,6.009355,5.316702,-5.218894,5.383222,4.450441,3.338246,-6.151230,1.736427,-9.868519,6.847777,-4.254198,4.375320,-4.374801,1.321032,9.883746,6.012530,0.838490,6.407234,5.459028,8.621884,-6.314949,-3.955640,-5.861806,-7.518935,-9.153205,-1.316219,1.185310,-2.491952,-9.957029,-4.697025,-5.786654,4.431340,-6.999856,-3.114491,2.002834,-1.890156,-0.316442,5.165981,-6.773844,1.940595,7.480333,-5.558144,4.942452,7.620872,-8.930732,-3.032472,6.895897,-4.215350,-7.825503,6.841470,4.263557,3.211237,-3.303917,-3.041395,-5.522799,8.274515,0.102818,-3.143965,1.368411,7.700578,0.430081,-4.259958,5.065233,5.465836,3.178044,7.000878,-1.796208,3.959703,3.251569,-1.197655,4.711260,-4.898328,7.919316,-5.500761,-9.632245,-6.712387,4.277656,-2.358253,8.450206,-0.159296,-9.769436,2.402068,-9.194899,8.081903,-6.909657,8.061790,9.956362,2.283604,-1.541458,1.691719,1.605972,-6.862229,9.967253,0.479989,-1.322264,1.142116,6.324374,-7.580771,2.570027,-8.389982,7.476000,-6.917216,1.282984,5.559273,9.772851,-2.408606,-9.894143,8.769765,0.516611,-3.203886,-3.462999,-2.294994,9.882489,3.918331,-3.613972,-1.251308,5.981979,-0.359857,-5.286880,-1.481582,7.812479,-2.615605,1.139912,6.077273,-0.589971,5.709984,8.907465,6.487018,-7.247943,-8.341692,-4.230945,-6.000397,1.873580,-7.908994,-7.647685,5.943179,4.001754,7.995801,6.166383,0.628165,-0.277396,-4.395180,-8.828841,-0.950121,-4.268360,3.949800,-9.928929,-5.438850,-1.851410,3.068872,8.410558,-1.251714,5.387748,4.716644,-1.690269,-1.202082,6.203883,2.911292,-9.578653,-0.925844,-1.154079,9.281200,2.377889,-2.898220,-9.626809,-9.586396,-5.517944,-4.142278,-3.855367,-9.248252,-7.573203,-8.359023,0.270861,4.644353,8.901867,-1.819661,6.612652,-9.431161,1.399090,1.208726,9.042997,9.630136,-1.122687,2.061380,0.448948,-2.417673,-8.237954,-5.905830,-2.190192,-2.252066,4.146098,2.378661,-7.314019,-3.072177,-8.633823,-4.130287,1.684389,0.149099,9.102050,8.399435,-1.457395,2.172056,-2.390121,-2.200291,6.406711,-4.940129,4.261268,-1.432275,-4.464337,7.228701,-2.668570,-4.220537,9.932749,9.875961,-3.077422,4.870501,-1.450404,0.549172,-4.798174,2.646924,-9.698079,8.138287,1.992527,-7.613680,-8.632694,-9.713842,8.172455,-0.237320,-6.348904,7.069917,-2.185943,8.664355,1.448261,2.481069,-7.487509,-2.066843,6.569760,-7.628757,5.962190,-1.841739,-2.624782,-5.379498,0.379878,-0.020450,-9.518768,-3.759855,8.523132,-7.597846,-0.090084,-5.521785,-2.951844,-7.185790,-9.486174,8.925926,4.709089,5.826993,-1.189155,0.564230,4.334718,-6.766935,2.402422,-9.158665,-4.086199,-5.038986,8.902851,-9.546550,2.906055,9.782524,7.208379,0.840370,-6.203896,3.029964,-4.802683,-9.851391,-3.157079,8.407502,4.951267,-4.353206,-1.963561,-9.612950,-8.412894,-5.822448,4.587424,9.983796,-1.133497,5.476850,-3.140288,8.885589,0.588498,-8.712135,-2.390634,-6.957510,2.319727,-6.722513,7.811960,7.269809,4.954665,8.252042,1.044428,5.726439,9.911398,-8.311346,9.789627,-2.922235,6.243082,9.044447,-9.002270,4.974942,-0.694566,-9.176372,0.283165,4.580455,6.162685,7.369648,-6.319070,-7.390551,-5.929339,9.429137,-8.808576,-9.058360,-1.320038,-6.780405,0.328922,-7.181708,4.047519,8.777667,7.770332,7.884253,9.856123,2.009958,4.446280,6.944090,9.607571,-2.329703,-8.652199,9.219881,-8.614707,-3.993979,-2.117837,8.829688,6.673888,-2.516585,-4.361672,0.167815,-4.632118,8.041734,-5.672921,8.023569,9.355494,5.911879,9.765035,-6.390136,-2.900961,3.903199,7.770168,-4.852404,-6.053161,8.709758,-1.777471,-6.740874,-2.218213,8.946324,3.300211,-9.908829,-3.585864,-8.473669,-9.995871,6.343805,8.062653,0.778016,7.732945,1.898085,-2.477379,-1.866705,4.740858,-7.766394,-7.262368,-7.053113,-0.017879,-2.671040,9.351582,-3.466224,6.194966,-2.801469,0.005486,-3.917796,-8.044538,-3.845923,-1.147304,7.394961,6.997665,1.102694,7.635078,9.540125,-6.083723,-9.349921,9.378125,-7.047702,-9.507249,2.830783,-0.450089,3.412744,-8.452241,-7.468948,-8.021976,-0.322467,8.721788,-7.352563,-5.669567,-4.161693,4.007902,-3.839028,-6.168210,-7.980744,8.511446,-5.441001,5.860147,-6.521452,8.721021,-4.578681,4.086939,6.630818,9.746807,9.853954,-1.198921,-6.054871,8.352143,-5.960242,5.945737,-5.701925,-5.599982,5.261795,-8.762642,1.909299,-6.671518,-4.528153,0.998705,-1.733515,1.931427,-5.808467,0.421001,4.824713,1.346368,-6.014545,-1.610829,6.971272,6.815647,-3.272900,2.726966,4.830085,-2.145770,5.527292,-4.775323,-3.069127,9.437048,0.388158,8.197751,3.974635,-9.533163,-4.647062,0.386033,3.710750,-4.237377,-0.088574,-1.944183,1.988943,9.029670,-2.116553,-4.187207,5.342447,6.073083,-7.717676,-1.785574,0.004573,-9.645383,7.666255,8.322406,-2.572188,3.141450,6.707722,7.511930,-5.249407,0.319915,-5.533889,9.890408,-8.237015,-0.413762,6.043232,-0.213388,2.323148,-5.398444,-5.363201,1.848085,7.126121,-6.787389,-7.269064,4.715602,-8.968559,0.544812,-4.785828,6.942074,7.035904,-3.920010,-3.901474,2.954859,4.625553,-5.966017,-1.842449,-1.264772,-4.562593,-3.110782,-0.733913,6.015431,6.154558,9.389216,8.436716,-3.494579,-5.912385,-3.365225,8.856512,-1.269499,6.966914,3.203676,0.637250,-8.946437,-2.299676,-0.036066,-0.879207,3.123884,2.296792,-7.481195,2.025950,2.813952,7.834991,-7.692822,-5.019840,3.358957,-6.385200,6.928997,-8.870962,4.104295,-8.513114,-3.688799,-5.641814,-3.545687,-6.481420,-0.536564,4.456476,-8.231191,6.591734,-0.147246,2.925963,-5.732278,-8.525684,1.692273,7.799184,5.522852,3.332595,-8.590447,7.347853,4.866136,6.397162,-2.480530,4.750749,2.985547,6.152117,-6.195441,7.312922,-9.551436,-9.035157,3.143289,4.845616,-7.908010,-2.623344,-0.587612,6.016122,2.314086,4.410618,-5.262340,-4.047974,-5.179046,6.683231,2.315486,1.645108,-2.625426,5.383808,3.805746,-1.853194,2.418894,-0.677449,-9.040754,0.755308,4.671446,7.745165,-7.328882,7.517400,-5.556249,4.019214,-2.034572,0.222872,8.509016,-4.280305,6.730891,-9.547354,9.878852,-0.859705,-8.223506,6.910579,4.612382,4.587511,6.709060,-1.123463,3.921965,4.506251,-7.683717,-2.785877,6.435666,-1.820460,9.320137,-1.191064,5.575840,6.372655,-7.317547,3.231076,0.249143,6.329663,-4.733672,-3.076393,-9.566170,8.280715,7.766161,-8.225558,-9.191036,3.937661,0.998783,-9.441836,4.464619,-0.541699,-5.370593,8.882059,7.901340,-4.748208,-8.873410,2.115277,-3.925455,9.932762,1.972510,0.171361,-2.032689,6.798358,-0.877440,-9.863056,8.236104,8.135792,4.479961,-1.337293,-4.508420,-0.105723,6.775676,9.625983,-6.942241,2.021498,-1.520338,7.611399,-5.765327,-2.410914,-6.780117,-3.004798,9.199906,3.669781,-7.611920,0.509468,6.069201,7.772278,-7.304825,-3.035121,2.396724,-9.796641,-9.231081,-5.669909,-9.917734,9.415553,9.454409,4.956648,-6.866271,0.370619,-8.312801,3.939347,-1.223371,-5.998379,3.414688,4.004068,3.371632,-8.914739,3.057651,-0.390236,1.866934,-7.661360,0.550409,0.552016,5.054298,-6.682932,-1.145459,8.151810,-0.178600,5.861734,-8.178929,-7.234179,-6.331318,-5.082598,4.652395,1.693042,-3.058116,7.092040,4.460452,6.021022,-2.740972,-8.445885,9.058526,4.121701,-6.880152,3.715592,-4.562667,-2.800668,-1.083709,-9.696023,2.730343,-3.622128,-6.404685,7.439763,2.241243,-1.441636,-0.530910,-3.294301,-7.936522,7.563608,-7.363752,8.285508,-0.021648,7.667769,-5.215175,-2.457172,9.311225,-5.018764,-5.538901,-0.494420,-4.172535,0.427559,6.556448,8.281240,-7.937938,-0.751303,7.792429,6.340441,2.017155,0.261373,-8.064362,4.693657,-9.858330,2.526378,7.221179,-0.997867,-5.853838,-0.212392,9.895006,3.779048,-2.637782,-0.789628,-0.378323,7.232186,-0.122470,7.842766,-0.066247,7.618604,-6.913107,-2.264206,-5.677632,-5.947114,-7.469310,-6.154760,-4.520010,0.770288,-2.467888,-5.482224,3.735694,-1.969141,-9.072543,8.264363,0.522041,-0.942695,1.475316,1.740688,0.636518,5.215688,9.982799,-4.076253,2.512811,-4.712750,2.034401,-1.381666,4.486208,8.655345,1.142329,-9.209143,8.891261,-3.264990,9.111921,-9.523973,1.351747,3.497569,4.715304,-5.480432,3.010420,-0.073689,-9.621853,-0.133231,-5.482566,0.640763,-7.236595,-2.840254,-4.295289,-2.930120,-2.839589,2.557184,-4.966383,-3.705955,-9.822869,2.723148,-9.667280,-2.945094,-8.413560,-9.513312,-6.452623,-1.183866,9.339567,-6.618091,-6.098435,-0.925915,2.960322,-0.579884,-1.615708,-9.522625,-5.946968,-4.324003,9.972573,8.416398,5.620926,-6.566303,9.441317,-7.528361,6.696738,1.083446,-7.206220,4.770427,6.282225,7.730920,-6.845371,-9.973525,2.688613,8.553540,9.199053,4.947564,-7.811441,4.182458,-0.272161,3.667149,-4.227038,3.068000,-4.529096,1.466982,6.383676,2.701508,-5.335553,-8.409706,-5.427427,-8.305202,-5.833552,6.439344,-4.895614,-6.973767,-7.005334,-0.653379,-6.149869,0.393365,-6.450624,-0.532940,-7.201380,-5.582668,0.314212,-0.672814,-7.860157,-9.632028,-5.508322,-3.754390,-6.851849,-3.335062,-2.011811,2.906222,-1.462619,8.042379,4.696212,-9.618930,5.557708,-3.860715,6.018023,-7.474711,-7.773072,-8.680090,-5.295044,2.005391,-4.146725,-8.860931,-7.241546,1.745592,-7.455049,-3.061418,4.030814,2.271681,5.353958,6.050854,3.196676,-0.445703,-0.120552,-0.202246,6.114193,6.994090,0.343032,-4.860914,-1.450136,7.056495,-5.104253,-2.388730,-6.676403,-9.376730,-0.254256,0.518308,-3.402958,0.636925,-8.716163,3.068303,9.872224,7.052094,-6.851497,-5.157633,-7.325013,-6.620421,4.995111,-5.516136,-9.643914,2.823515,-1.769569,-7.215365,0.412251,-6.331673,-1.168732,7.081496,-6.634773,-3.113675,9.732340,3.487302,-8.171851,-2.389368,5.500585,-3.404433,-4.343251,-8.694615,-5.337717,9.066572,-8.785285,0.869854,1.730710,-8.018143,-9.135702,8.534188,8.417036,0.301599,-2.083117,-0.660481,-6.871006,0.304201,-2.371583,8.589970,4.342865,-2.147993,-3.031348,-8.615848,9.170635,-9.061066,9.708508,4.309915,-1.305144,5.591830,-5.127176,-1.164765,-5.943856,1.394730,0.505576,1.139981,2.580773,-3.913745,6.450370,-2.304065,5.602495,-2.131698,-4.022688,-1.597728,-6.069313,2.468093,6.835233,6.131887,7.937076,-7.968034,-2.992361,2.399556,-5.663881,5.354269,-1.400232,-7.710460,-2.281843,2.958689,-9.458059,-3.389407,1.394675,1.505223,8.160375,-4.448352,-3.505132,-2.766206,-4.947616,-6.172642,8.647205,-5.777524,6.433976,-0.293077,-9.091779,-8.226951,6.280908,1.154510,-5.158533,1.538670,-7.501885,3.243739,-1.489717,0.728774,7.660264,9.241401,0.555803,3.940079,-8.458612,0.467684,9.538241,9.591020,-7.355969,9.570497,-2.248675,-7.219387,-1.143710,4.718469,1.094450,9.970520,-1.772801,-7.152686,-4.620717,3.903549,5.578282,2.968568,-2.834840,8.516879,-3.650234,-0.829727,5.320001,1.809121,-4.128976,-3.038760,1.899542,-9.493987,9.652030,6.443268,-2.856802,-0.195386,8.994917,-0.373370,7.061257,-6.996129,-1.259719,-0.604884,-3.974000,1.278442,-0.044813,-8.174789,4.461225,7.944984,5.084990,3.107778,9.235486,5.815860,0.602346,5.373865,2.728631,-0.231535,-2.425076,7.394128,-5.648081,5.541367,0.005848,-4.045636,-3.787234,3.341889,6.286270,-5.958584,-4.792851,8.193537,1.575186,-9.867585,9.843743,6.251162,5.588162,-3.458871,4.699490,-3.481071,2.089965,-4.920111,8.796824,-3.083045,-0.771802,5.310522,-3.819646,-7.535220,9.302817,3.208389,-2.644137,-7.544058,4.396705,8.315721,-3.823202,5.124178,4.346639,-5.971302,0.211573,1.468278,9.453801,0.823384,6.553294,4.701666,-5.799655,9.740745,2.845813,3.571878,-0.762819,-5.609979,-2.073700,8.834415,3.768684,-5.868863,-4.559110,-6.393644,0.447985,8.134209,1.784091,2.104125,5.719782,-9.863178,2.296834,-4.876445,2.469509,-4.485631,-1.712822,1.894406,8.129994,1.383692,3.234894,2.696161,9.980196,5.551871,-2.569986,-4.722290,-3.799604,-5.243048,-4.186696,6.489347,6.518569,-5.715122,1.554993,2.038699,0.286039,-1.102559,-8.593466,0.758352,7.044483,2.690394,-7.283397,4.488749,-6.201172,-0.047453,-9.500007,-1.639137,5.731339,-0.686801,-3.721378,-9.344446,-1.012770,-6.171478,-5.344530,-3.526030,8.450196,9.883105,6.161848,-7.308870,8.445973,8.362525,-6.363797,4.808435,-1.564071,5.392117,-4.040281,-1.648236,-6.038879,0.072112,0.742198,-3.403827,6.984898,-9.087060,7.566792,3.524548,0.979167,-8.203311,-9.518127,8.440834,7.495401,-0.973093,-3.470684,-4.528027,4.997439,-3.751607,1.129071,5.578218,-8.738345,-4.389512,-7.725158,-1.919431,-5.304072,-3.505439,6.139557,5.897473,-6.850602,-4.438651,-7.070914,0.002362,-9.995868,-4.624435,4.204865,5.662590,0.716554,4.939542,2.547815,4.446927,-5.839167,-0.466171,-6.889232,0.894389,0.820080,3.755405,-0.009199,-0.826837,-4.599315,3.320492,-6.465460,-9.217448,-6.212552,-5.653539,3.367694,9.830602,1.162974,5.273560,7.358245,-6.894927,-0.532663,-1.397456,-7.550063,-0.686386,-6.176912,-5.318795,-8.823664,-8.217178,-1.574067,-2.171570,4.095170,-0.623095,4.884383,-3.473668,-9.719603,-4.971775,-3.708014,9.290689,3.973460,-9.574222,1.643684,-4.471185,8.382340,-7.819219,4.685720,7.068128,-4.442482,0.316235,-5.965706,-6.858212,-9.612152,1.744775,-6.733314,-4.390965,-5.366638,1.240357,6.883272,8.418996,-5.354890,8.058845,-2.836980,-5.487300,-4.686474,7.927555,9.464429,6.987745,-9.820242,9.596187,9.987048,-1.959423,-4.385655,-3.391573,4.430296,-0.155922,4.827356,-0.094450,-4.964351,4.746157,-1.225831,7.440421,-1.216391,-8.912819,-2.169469,3.295834,1.665682,3.773303,3.424732,0.095409,-2.813261,4.246986,0.330260,1.551798,-3.935350,-1.259839,1.281015,4.858969,-1.458281,-7.682406,1.545071,1.620375,6.303780,-7.407055,-4.455894,-4.848648,7.235658,-7.312617,2.950561,-6.072162,-2.554122,-1.275047,6.989913,-4.395926,4.589147,-3.219204,-8.788266,3.075927,-5.237068,1.333919,-2.680397,9.644840,2.644317,-3.215648,-3.374017,-8.175246,-9.066081,-6.387007,-8.982934,3.870265,-5.309954,-2.084943,0.851942,-8.175911,7.512410,-6.434335,0.927935,6.783224,-2.637777,7.529296,5.481661,8.500908,2.821445,4.611635,-9.022581,5.185979,-0.670121,-2.855843,-0.173546,9.582320,-0.352026,0.321124,-8.095440,-0.426571,-2.789792,2.360256,2.612338,9.522676,-0.042158,5.241714,-9.001671,0.722487,-3.071057,-1.096010,6.934669,0.673489,-6.673646,3.430156,9.210547,5.979431,-2.474732,9.567558,8.153363,-1.536420,1.600122,2.749722,-6.679963,-0.419191,-6.444859,4.840358,1.633936,7.399202,6.606341,-3.193308,-1.409008,5.333822,-9.804099,-7.996661,8.607427,7.511069,-2.468609,-0.735810,-7.328614,-9.923590,-2.331623,-4.073329,-2.576618,9.533429,-5.023449,-4.862141,9.683941,5.913534,1.402468,0.140947,-9.722627,2.068506,1.144905,-9.372293,4.594450,-9.164625,-0.224458,1.418469,-6.872280,2.486323,-8.143618,4.267417,4.744491,8.185867,4.756671,4.833084,8.456347,-8.057653,1.668685,-4.923780,4.271620,-5.694298,8.122662,-9.914129,-4.096788,7.089158,-1.233048,-3.276096,0.666767,-0.330831,-8.560233,1.892555,-1.931088,1.401067,-1.207370,-7.431468,-0.151283,7.560185,-8.741770,-7.079320,4.531599,4.119190,-9.176154,0.809358,4.171316,-8.188649,-3.316945,-9.833072,-4.743167,-4.413464,3.510224,-0.883586,0.807139,-1.393034,-8.999919,-7.853345,-0.021231,3.061183,1.531157,-1.224287,-9.362738,-7.783566,-1.367025,1.529564,-3.328763,0.185137,2.202492,-4.211949,-0.076495,-4.268383,8.405551,-3.180408,2.587114,-3.176411,9.213737,1.523820,-2.009997,-2.471844,-5.005283,1.229021,2.609563,5.048058,-8.168986,3.868616,-5.149752,0.154695,-4.129702,7.514919,0.501178,-5.902204,-7.529201,-6.377235,2.200352,-7.295784,9.975871,4.907669,-3.206268,7.807847,-9.748012,6.829607,-7.832587,-5.264852,8.808253,-5.494926,6.641985,3.003470,3.639485,-1.822072,-6.017165,-5.851167,-8.389597,-2.775300,-0.390437,-4.410146,-2.622629,8.796932,-5.187788,5.955685,6.353003,6.070548,-9.387427,2.736728,-2.029719,-0.246094,-1.120262,-0.880073,-3.720396,1.897135,-5.007480,3.816474,-6.334910,-4.495640,-0.478812,-7.398553,9.092682,6.609619,-9.453027,6.094963,-2.062734,0.071018,2.119219,-3.366738,-6.359810,-4.769617,2.076400,5.716378,6.348666,-7.636732,5.595288,7.677021,-4.570210,-8.920885,8.670179,-2.712739,3.388631,-5.036109,9.849740,5.718408,6.159435,4.903767,2.212840,-9.004365,-5.344528,6.339874,0.514777,-4.051432,6.835570,-6.507250,6.923244,-2.936905,-8.028351,7.249404,9.794365,8.942460,-8.906343,2.912429,0.051925,-2.694096,6.454660,6.138404,8.724154,-0.433145,-2.528637,8.332251,4.183910,-9.759225,0.583091,-3.706621,-0.653193,7.481725,-6.761980,1.600854,-2.348681,3.427172,9.804608,-6.686472,-3.579598,2.383745,9.580470,-1.318660,-6.275446,-8.405035,-1.538731,9.634619,-8.556167,-5.093471,4.743911,-1.766820,0.335195,4.754670,-1.958106,1.251722,7.645053,7.026055,-9.771826,1.409703,-7.306883,-4.629269,-4.442105,-8.873352,-9.227193,3.788312,-2.845237,8.136400,5.174924,-0.823330,-3.691973,5.145980,-7.209997,-7.489952,-6.629242,2.067624,3.561332,-1.825267,2.423602,-0.784371,6.614834], dtype = "float32")#candidate|2167|(1920,)|const|float32
call_2166 = relay.TupleGetItem(func_938_call(relay.reshape(const_2167.astype('float32'), [1920,])), 3)
call_2168 = relay.TupleGetItem(func_940_call(relay.reshape(const_2167.astype('float32'), [1920,])), 3)
func_1742_call = mod.get_global_var('func_1742')
func_1743_call = mutated_mod.get_global_var('func_1743')
call_2170 = relay.TupleGetItem(func_1742_call(), 0)
call_2171 = relay.TupleGetItem(func_1743_call(), 0)
func_1732_call = mod.get_global_var('func_1732')
func_1733_call = mutated_mod.get_global_var('func_1733')
call_2172 = func_1732_call()
call_2173 = func_1732_call()
output = relay.Tuple([call_2164,call_2166,const_2167,call_2170,call_2172,])
output2 = relay.Tuple([call_2165,call_2168,const_2167,call_2171,call_2173,])
func_2182 = relay.Function([], output)
mod['func_2182'] = func_2182
mod = relay.transform.InferType()(mod)
output = func_2182()
func_2183 = relay.Function([], output)
mutated_mod['func_2183'] = func_2183
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2206 = relay.const([[[2.206434,9.449187,9.989802,-7.720350,6.551121,-8.301161,8.124162,3.132951,2.749754,-2.301424,-0.108644,2.199513,1.785093,3.692950,-3.594094],[-2.261845,-2.438058,5.309756,-3.427962,-6.279619,3.433087,2.992740,0.122139,-1.133487,6.346434,-3.442743,1.937258,-4.551370,7.163861,-1.160092],[3.830011,-7.736107,-2.555867,0.740172,3.682993,-0.996816,5.310134,7.011026,4.181196,9.206759,4.027976,-8.122836,0.766185,3.554915,-7.301120],[7.920288,-5.243710,-5.674946,5.075696,-7.085018,0.281817,3.540132,-2.842786,9.518348,0.510799,5.562714,-4.847031,8.078069,-8.516679,5.284955],[-0.574604,-4.454787,-9.121627,-4.189382,4.207914,-0.552411,9.260562,3.877946,7.965409,0.188968,4.394870,4.486087,9.706108,-1.049714,6.559121],[-1.520096,-4.263088,-9.535394,1.251112,-4.907689,2.324792,3.886553,7.138942,2.769388,-5.197152,3.010637,0.851250,8.604810,4.231292,-1.513336],[7.260175,2.155131,-2.109737,-0.301824,-8.931129,-8.137952,-3.985077,-2.741921,-0.357194,-7.277090,1.123363,-8.100202,-3.738397,9.783834,1.692888],[-0.045666,-2.711558,-3.912836,4.917749,6.157513,-7.869530,-4.474056,3.653737,-2.424107,-5.468463,-5.247424,-7.090096,-2.297332,4.496683,-2.671998],[5.403021,7.621150,-3.531347,-7.669242,7.344621,7.066600,4.782837,-5.034844,3.625074,-5.948443,7.466812,5.927596,-5.442008,-9.502846,0.837067],[-1.005146,5.018391,-3.246661,-4.677555,8.227754,-5.005017,7.229239,-1.781627,8.571479,-4.554701,9.186355,-9.611539,9.194713,-5.325347,-8.343878],[-1.341206,3.122177,7.603706,-8.269367,-2.174579,5.368106,-3.555591,0.435102,-1.675720,-8.397157,-2.956470,-9.357836,-9.503286,6.398730,3.993382],[-7.067322,3.144779,2.028561,-0.621983,-5.087851,5.088450,9.334624,-2.168863,3.560283,9.187263,8.739824,7.102412,6.956388,1.649666,0.188958]],[[-7.954683,-9.088565,1.166234,-5.698730,1.471688,-4.861142,-7.265423,3.329580,-5.642582,6.019648,-0.884030,-4.013651,-9.974404,-4.044173,-4.454524],[-6.040615,3.961587,-7.468704,-1.410978,-6.215055,4.977057,3.813568,9.250567,-8.804428,3.853771,4.087956,-6.534133,0.776894,1.743331,-9.219373],[0.546084,3.373944,-0.004542,1.999285,-4.561850,-4.114802,9.621449,-2.386752,-0.411328,-4.341848,-7.450823,-5.013690,4.196631,-4.000379,7.703003],[3.591323,3.133934,0.601080,-1.002701,5.066091,8.099496,0.409153,0.460293,6.714475,-4.468723,8.144069,9.782267,-0.650597,8.157926,-7.748063],[9.380742,-5.340167,-4.507441,-7.048992,-6.664436,9.603524,-3.686722,-7.793507,-3.771605,2.716276,-9.153808,-6.644230,-7.653564,-8.070845,1.501814],[-6.548156,-8.991138,3.315285,3.718077,-1.472139,9.608366,5.913483,-1.519406,1.914272,6.603303,3.922488,6.465420,8.249695,-4.253584,-5.372547],[-7.613145,9.109765,5.411657,3.324288,-6.234150,-1.363658,-7.737515,7.281369,-0.179356,5.733779,-0.554403,0.442932,-1.270794,4.675780,-5.910733],[-1.093842,8.315406,-7.000193,8.690724,8.400269,1.838084,6.958566,4.829445,-6.885219,-7.793532,3.014752,-7.322622,-4.679578,8.390041,-4.165067],[8.500011,5.163721,-7.686458,8.663579,1.597383,2.505131,1.353519,-4.799249,-5.897817,-7.744054,4.039643,5.528450,-2.834341,-7.146350,7.594706],[0.579918,-9.758765,5.136796,-3.889596,-8.706141,7.441871,-4.026673,-7.705897,4.916019,7.116381,4.767937,9.629921,4.488388,7.610182,-1.444317],[-0.114120,2.954095,-7.095861,7.288497,-2.938334,-3.246261,8.654847,-6.865469,-8.938618,-0.667914,1.836136,-0.537121,-0.741832,-6.214009,9.082480],[6.064596,-3.316492,-1.263623,9.835778,-8.221787,1.675997,-9.897821,5.781024,8.886750,-4.859034,-1.298738,1.150805,2.229253,-8.003521,9.366500]],[[-7.869581,9.741866,-7.657097,2.702456,7.614309,2.870760,-3.985428,1.710008,-1.717800,2.800056,7.212393,-3.690812,-0.600829,-7.077423,9.838142],[6.209083,-8.883614,-6.373914,-3.684524,7.508642,7.536480,3.826744,-7.176528,-1.427749,6.088347,1.038569,9.682037,7.206009,5.803555,-6.005976],[-4.361772,-9.956063,-6.670909,6.630239,-9.196920,-6.181170,5.315261,-9.714426,-6.642627,-5.833793,-9.821758,-6.710102,9.923374,-9.785818,-4.433766],[1.140408,-5.629152,1.247449,-7.852284,8.535322,5.251708,4.881740,0.266598,-8.962714,-0.183538,2.911947,4.008624,-3.498244,-3.985452,6.509266],[9.966748,5.288055,8.778736,-1.637327,5.791432,-0.043388,8.995086,2.139007,0.909088,-5.329305,-6.869160,8.025772,-8.093399,-2.381337,-8.160540],[8.196362,-8.617065,0.386231,8.145828,7.626391,3.281087,-5.644364,9.761446,-9.853290,9.326358,-1.111237,-3.172837,9.189587,2.384705,2.939729],[-9.792237,4.290577,1.570666,-2.538163,-9.093104,4.744329,2.454389,-6.476058,1.456673,-4.579971,-6.016127,-1.704181,-6.203679,8.773348,5.565205],[2.243965,5.930454,-2.933667,4.666375,2.524314,0.302807,8.222997,-1.206157,0.121471,-6.866238,9.907764,9.370291,-4.510417,6.293664,6.181094],[-9.522123,-5.676667,-6.794872,6.010590,1.603254,3.864385,5.736548,-5.623967,1.358254,-6.126803,4.695379,-0.259860,5.283477,-2.759149,-7.449672],[-7.674139,-5.208945,-1.164662,8.803215,-8.815794,-5.134154,6.432545,-6.694043,-3.405240,-8.099657,-8.162477,-1.621671,-5.712121,0.969472,-5.138102],[-2.231716,-7.330645,-3.103284,1.412323,-9.725132,-9.505417,-7.587020,8.662958,0.440253,-2.026062,-6.505836,9.553265,5.543097,-3.051915,-3.520042],[-6.447405,6.445426,1.610772,9.436867,-5.740415,-2.040006,-7.582339,-0.836981,-5.117555,9.302907,7.275994,4.188227,-0.975227,-8.447145,5.332267]],[[-1.903784,-5.042512,-5.548400,6.313619,-9.602357,-1.539256,-9.108710,4.520946,-6.865443,5.724599,-1.176611,8.992299,4.397283,-4.347840,-0.317977],[3.111589,0.834025,9.408869,8.666531,4.519710,-7.516118,7.931056,0.738205,3.579714,-1.812038,4.542484,-5.784456,-6.368115,6.679862,3.871675],[-8.368561,-2.751612,-2.578665,2.687976,-0.238724,-9.839238,-1.769016,6.811794,-4.448702,0.759924,6.380514,-0.620753,7.676613,-3.068999,8.543158],[7.168058,-7.102915,-6.893431,5.694612,-3.900489,-4.424358,-6.016513,-6.218391,-5.214517,-9.868510,7.517543,8.072440,9.896091,-6.424599,1.233189],[-4.097847,0.270286,-2.659145,4.275158,-2.088246,4.653889,-0.598582,0.382343,6.691464,-1.303307,-1.753882,-1.143757,4.586633,-0.686986,7.982359],[7.163449,-5.189206,-2.614737,-9.236196,-8.143243,4.388925,-8.913607,8.142517,9.693573,5.163724,1.456007,0.369046,0.181313,2.203042,3.492394],[7.105830,-5.160653,4.138238,-4.425383,8.557859,-4.085670,-0.655703,-7.642159,6.979880,0.793658,4.531941,-0.036360,-5.934497,9.837417,1.561626],[-5.322512,-6.481534,4.855499,7.010287,7.923511,-5.207918,9.579315,-6.356309,7.013452,0.071482,9.199767,2.799205,-5.124328,9.927581,6.106098],[-2.019635,-5.759878,9.834904,-3.374301,3.679098,9.422844,-2.988890,7.750522,-8.530913,-9.119806,8.085214,6.589931,9.384681,-0.943224,3.674331],[7.044145,5.241551,-3.181075,5.416474,1.178567,0.025565,7.862574,5.492362,-9.292949,7.313636,-7.376364,-0.495663,9.034043,1.686542,0.116293],[2.107402,-3.065586,-3.421759,4.084643,0.342931,-1.145361,1.227878,-6.708722,-1.550509,3.217795,5.219704,-7.186007,4.699227,1.703778,6.385036],[6.872235,-2.624739,2.763554,7.578872,-5.252614,0.508626,5.623161,-4.684571,-4.829089,-0.758148,-0.131281,4.383908,-0.582467,-0.179505,5.931860]],[[-2.984852,3.915490,-7.635398,9.795152,2.735139,-4.249066,-0.960981,-5.766270,-7.050546,-9.864491,-8.457929,-3.939835,0.939849,-0.192685,8.923809],[-9.047427,-3.622425,-6.651050,-0.752528,-2.354621,3.575965,0.814111,-4.770750,5.252732,-8.279032,-1.353923,-8.126440,-3.982716,2.076591,-0.261054],[-2.929811,-2.916540,-9.685634,0.840643,-9.939331,-0.160638,-9.497449,5.171374,5.299904,5.620149,-0.214530,-9.989161,4.969963,9.682402,3.954119],[2.009079,-1.466060,9.801840,-9.534884,1.076965,-9.189507,-7.958875,9.151476,-1.227636,-2.219505,-7.466085,7.345450,-1.891982,2.761555,2.862080],[0.601385,-8.463596,-1.167607,-5.629485,-8.087689,1.256261,6.338361,-9.371506,2.763377,-2.859581,-0.617522,7.461166,7.520438,-1.552192,2.412936],[-2.685700,-7.638890,-5.355745,-5.058764,1.372495,-8.057393,4.734804,7.314556,2.286870,-8.658119,-8.667862,-6.577086,-5.350082,3.324460,8.703377],[-3.822167,1.551006,-9.780228,8.208508,-0.732950,-6.435300,9.132017,1.780369,2.152176,-9.965654,-7.278354,-8.601466,-3.836031,-2.605231,-4.612764],[-8.946969,7.464936,3.904662,4.156562,-9.551935,-9.686475,-5.587884,6.499338,-3.892865,-9.453329,-0.382650,0.489485,-5.121610,-0.611572,-9.440066],[-1.745210,0.904785,-0.286834,4.329487,-6.833956,-0.023902,-9.865994,-2.807112,-5.763924,-2.335394,7.191798,7.274682,-6.704581,-1.735111,-2.587242],[7.814798,6.538749,4.553773,9.947172,3.921018,-4.658728,-8.922035,7.542058,-4.117456,1.779150,-8.662790,-7.436846,-2.639642,5.784953,5.263944],[3.456426,-8.179963,8.145841,-9.312702,4.071037,-5.184306,3.977687,-6.212622,-2.918711,-4.608377,-3.320883,-7.966703,-8.292113,9.465384,-4.830973],[-4.189982,8.518903,-5.125067,-9.032778,9.017980,2.904861,5.290626,8.810315,3.515443,8.429362,7.532618,-2.681993,-4.068472,-3.148161,8.523545]],[[-3.379796,-7.966548,-9.250175,-2.879279,-3.499631,-2.422120,-2.703670,-8.207334,-6.515154,9.070908,-2.564783,8.849175,-1.518730,5.546220,3.734720],[8.286962,-3.042555,0.362885,0.781565,0.892878,3.050014,3.749430,-3.918152,8.937364,4.533396,-0.904284,-5.365457,-6.483814,9.622819,9.057515],[-5.726671,-3.417290,0.824626,-9.156658,6.666731,-9.316329,8.801869,-1.226536,4.405084,-5.477652,-6.819401,-5.181050,-5.190609,-0.430354,6.057155],[-0.757813,-4.005476,-2.109317,-0.372482,-7.382522,0.277402,2.180197,-4.814027,-9.513263,7.464249,-4.287929,1.091424,-5.455455,-5.183755,6.775354],[3.808712,0.917718,-6.126080,5.827502,-3.417470,-3.971743,-5.360277,7.120178,-1.506830,-2.875192,-1.789299,3.641128,-4.564009,-8.023328,-1.814218],[-7.802259,3.757708,-6.337843,6.525589,5.308343,9.110089,7.372489,9.948777,2.991272,-0.034672,5.717278,-9.622627,-1.777015,6.344931,5.495829],[-4.161539,7.676368,-2.704451,1.387844,3.236420,8.348360,8.012976,-5.364531,7.604182,-0.663045,9.075658,5.439252,-1.804349,-5.133000,-8.982718],[-3.831368,7.560720,-8.063204,5.091519,-7.933770,-4.291813,8.405915,-8.580564,-2.597299,7.291327,-0.197725,2.995834,7.562183,3.492102,3.170975],[1.703543,9.234577,1.618194,-6.925341,2.233934,5.346276,0.105773,3.925865,-4.349618,8.496720,-1.654845,-9.967774,9.948437,-7.204866,-9.618787],[-8.209276,8.204662,-1.014897,-8.753890,8.065182,7.197161,2.707211,5.612406,7.597273,4.796300,-5.416449,-0.712450,4.753911,-0.936447,-1.752830],[4.713888,-4.510562,-1.209725,1.953676,-9.420301,2.100191,7.819172,-2.204909,1.363378,-5.048681,-6.649599,1.069316,6.140620,2.234095,-3.394591],[-8.680273,-0.833999,-6.477981,-1.274125,9.858058,-0.510392,-6.540540,-8.862375,-8.169358,-9.842160,-7.101950,4.956725,7.385223,-6.183245,-7.921686]],[[2.648548,-4.685716,-6.350274,-6.133331,-1.274471,6.438164,-7.801961,-1.781500,-8.697247,9.060651,9.167380,1.592006,5.998868,2.647652,5.298768],[-0.576985,7.046365,4.591972,2.049203,-0.033494,5.704873,-9.305101,6.580018,-9.093878,6.884679,0.440444,9.435340,-7.665387,7.027262,-8.278141],[7.815612,3.346725,3.224046,-6.322829,7.895514,-6.642838,-4.150847,-4.988669,1.571044,1.640912,-1.678318,8.660951,-3.963560,-9.599406,-8.347776],[-2.839366,9.066817,-3.101202,-5.039905,2.649884,3.228599,7.537358,-1.284948,8.740049,-8.572915,6.449299,8.917669,3.363072,-4.382817,-9.727278],[-4.899508,-1.397243,-0.552137,5.654819,-5.554650,-4.288945,-4.438331,0.461851,-5.179605,4.019600,-1.740367,7.341303,0.957134,4.792611,9.030419],[-5.367189,-4.604030,0.105720,9.599401,-8.865346,-1.393641,1.641074,-9.763925,3.351394,-2.206840,5.853796,6.251983,-3.966514,8.197305,-8.161847],[2.193583,5.456869,-3.074226,7.997711,9.533365,8.324009,-6.510349,-1.769510,0.338027,2.968101,-8.669923,-3.858219,-9.166525,3.051370,-5.322226],[-1.280111,-1.016102,-9.713868,-1.008300,5.629205,0.105006,9.848034,8.299730,-4.928240,-0.646351,-1.092202,-3.185230,-9.127610,-1.305026,1.805287],[-5.323396,-8.666137,4.199999,1.850306,-3.433139,8.198067,3.716301,-2.329254,-6.964436,9.496130,-4.682951,-9.726440,1.568369,1.700727,-7.629627],[-8.448330,-9.784014,8.247262,3.194652,-0.137299,9.979878,8.396575,-0.590338,-5.973798,-7.761322,7.313621,7.879722,-7.745903,6.549050,-8.269578],[-4.611817,-6.599967,-3.662897,-5.633864,-8.256970,1.090938,-5.997091,-4.850997,-4.292140,3.521760,-1.508258,-1.674306,-8.008392,-2.409313,-3.292278],[5.611147,-5.758914,-2.933832,-0.695333,-4.666100,9.305164,-7.503401,4.951291,-3.078593,4.243251,-6.705194,2.872230,-0.124628,7.441219,8.501819]],[[8.816537,-1.294437,-4.400530,-5.242216,3.763524,0.715660,3.464861,-1.374205,-5.619726,-5.431860,0.282981,2.581575,6.216045,-8.111366,1.446182],[3.493723,6.749458,-4.378365,-0.787748,-9.579543,9.647014,-2.364353,6.283304,2.210840,7.880527,-4.218569,8.087316,5.189058,6.261495,2.408976],[4.688589,1.156489,7.863775,-5.936562,0.328176,4.367395,-2.723793,2.047916,6.713447,0.689345,-5.858955,9.936936,-4.352535,1.868605,-0.804094],[-2.461997,0.248656,-3.322972,4.809106,-1.640354,6.259199,5.631496,9.700526,-7.258087,-7.878173,6.010336,5.708843,-7.482365,-1.358675,3.717879],[-6.163235,-4.735318,3.939852,-0.126771,-0.980396,2.359936,5.363426,1.012650,1.345923,4.854175,-3.049072,2.749480,3.174018,4.975769,4.000210],[-2.463464,-8.180910,2.009624,-4.003012,-4.079169,-1.762538,-3.245113,-0.872484,-5.340062,1.736665,5.515717,-0.820018,5.904336,-2.726081,7.960728],[3.630021,-2.457750,4.199681,-7.219349,8.839236,-9.028252,-4.147899,8.710072,-9.094439,1.648409,2.977644,9.347624,5.033399,7.816712,5.461644],[8.169153,2.257231,-0.137050,1.034704,-5.607314,6.986543,-6.511599,7.544167,0.283309,7.668850,-6.155515,1.647011,-0.561325,-7.855897,7.292273],[4.886713,2.072423,-2.333053,2.575532,-4.919682,-0.643439,-4.012580,2.470162,4.544276,3.628181,0.878629,8.543628,-2.639489,8.217876,-6.504460],[-7.783015,4.062064,-2.108788,-7.906534,9.914628,9.776455,-1.321748,-8.507734,9.514657,-9.552017,-3.096106,-3.465024,6.783181,-1.407044,-0.966498],[5.942780,-2.367678,-0.208558,-3.461846,-9.462800,9.970298,1.584731,8.439452,8.668613,4.662538,4.062525,-0.968362,-3.254941,-8.416884,-7.532396],[8.032021,-7.317098,8.760483,-8.753479,7.115019,2.992871,-5.473926,-8.558925,9.791426,-8.952905,-9.137117,-3.450135,-1.764885,-2.857930,8.210272]],[[6.382763,-8.016826,-6.173618,-6.975314,0.925057,8.591449,-5.269234,5.331758,3.901749,-5.643118,-5.581420,-2.111013,7.700013,7.944554,1.450507],[4.890871,4.439561,-2.290460,0.699879,-1.404866,-7.393197,8.705439,3.101210,-9.955221,5.457185,-2.659480,5.792798,1.213707,6.250431,-7.969092],[6.473396,6.810707,4.336952,0.143162,-6.454075,7.347834,0.041923,9.530009,6.149938,-0.892732,8.052870,-7.203319,6.395940,7.657637,-9.197681],[0.137071,8.692508,-0.256587,2.334268,8.997845,9.639307,-4.952320,-5.754135,0.098339,9.581647,-1.185083,5.755623,2.792262,-6.424547,7.658788],[-1.383335,0.673453,-7.218577,-7.806746,2.960990,6.411471,-2.111670,7.887566,-7.214126,0.279882,-3.547590,-8.160081,-6.446782,-0.072304,-6.428902],[-7.269664,1.472820,6.959460,3.897822,8.323824,3.890846,-6.858380,-8.358542,-2.548767,-6.947461,1.679914,-1.030062,-7.560868,6.224246,0.786976],[0.670157,7.755696,1.033661,-6.078020,-8.828920,9.004228,-0.106132,-5.471815,-8.768775,5.974817,-1.587257,3.633012,-2.602744,2.759630,7.280819],[-1.589145,-5.181222,1.511362,-2.153428,2.774289,7.827637,-2.990324,-6.485210,-4.099191,-9.318158,9.082935,-5.134019,2.361334,3.869906,7.931140],[3.825911,0.473544,4.021079,-9.496614,-0.275179,-6.563200,-8.647247,6.603538,3.715972,7.044725,-4.316821,-3.064499,-8.299445,3.992377,1.382506],[-4.459773,-0.488734,-5.921502,-1.843250,6.433999,-6.520010,-7.567047,8.578315,0.139658,5.915486,-5.723428,-0.822949,4.776108,-8.125152,-0.387922],[6.581837,-3.488701,-3.731195,2.428460,9.652315,0.687734,-5.841950,8.409821,1.463176,8.380423,6.080618,-2.719975,-4.452371,-6.326131,0.190960],[-2.018785,0.355329,-5.548394,-5.744708,-2.536151,7.281511,6.077015,4.664680,0.644894,-5.001414,-7.690586,-0.527529,4.064931,-8.100105,7.769400]],[[-5.921255,-1.047202,-2.925650,7.762976,-3.009509,9.907805,1.641299,5.912323,5.716037,1.743500,2.068019,3.551988,5.207032,8.445941,4.944141],[6.193659,-7.806874,2.997252,-0.427019,2.000977,4.106771,-5.205030,-5.174620,6.710011,-9.621812,1.143282,-0.891249,6.428142,0.252123,3.426982],[6.368006,-6.294926,-6.304799,0.930899,-9.518756,3.963029,9.083839,-3.162696,-4.854620,2.826278,-8.405348,-6.234955,3.455466,-0.229288,-5.566948],[6.144560,-3.692873,-0.115785,-3.933660,-7.155961,-5.290545,-0.155065,4.998419,3.208640,-1.311753,2.804441,8.137772,-1.901937,2.025989,4.290390],[-2.340661,-3.972554,-6.602238,-8.794905,-0.780765,7.547185,-3.414740,-9.820167,-9.902864,1.967980,-4.172425,-9.340226,8.173592,-0.522703,0.297254],[-8.495232,8.394304,0.983013,1.863245,-0.566423,-6.837164,7.678731,8.929881,-4.266293,2.836915,-2.642724,-6.206322,-6.255989,0.002711,4.398270],[-0.808244,0.482540,-2.582333,-8.839295,-2.586623,0.493250,-4.273213,9.932710,-6.990237,-9.716326,-1.310899,0.079676,2.502309,-8.157099,-6.098307],[9.044419,9.811558,-8.912279,6.751491,-9.038409,7.604958,-0.521676,-3.666870,4.508958,-6.647611,-0.121759,7.307243,6.996758,3.607658,1.276715],[9.453464,8.503826,3.290212,-6.384941,-3.558907,-9.814679,-4.276549,5.199507,4.858410,4.441804,-6.143145,-6.666642,3.075660,-0.535896,0.303603],[8.256863,3.602353,4.395899,-8.615034,9.891855,-8.410555,4.391820,3.217464,2.576849,3.240325,-7.087467,6.049438,4.165097,-5.752166,8.104986],[-2.993221,8.114796,8.505500,-6.489979,-8.558810,-7.882360,-7.684622,-5.755300,3.861682,-4.905316,-8.510216,-9.206008,7.376999,0.760492,-8.725724],[1.016527,7.826935,-4.970472,7.405563,-0.629021,-7.907855,4.078739,-9.704646,-6.271343,6.128433,6.158037,1.792424,2.418071,7.526287,4.877168]],[[-5.680632,-4.905453,8.276637,-8.143042,-8.266833,-7.944732,-5.038481,5.059716,9.711280,-1.049849,-2.919953,1.041713,1.007518,-1.831075,8.647085],[-4.628603,-6.929512,4.404450,1.994278,-8.945316,-4.686200,0.376077,-6.091552,-9.906505,-8.247131,0.486674,-0.594693,5.463987,4.321345,-3.262676],[3.479285,-8.384717,-8.360206,7.695680,-5.667070,5.978831,-3.778231,3.653874,0.348505,9.794762,-9.814602,-8.409073,6.638713,-6.844878,6.095579],[3.202112,-5.674947,-8.953338,7.460542,-3.990433,1.556065,-5.662415,-2.240250,9.970972,4.637337,-6.475842,4.398006,-8.290467,-3.301980,2.975380],[-4.153341,-9.608098,8.421460,2.945053,-2.306668,-3.730367,0.039106,8.729473,-2.783984,6.115463,1.624734,8.678871,-9.927048,7.343485,-8.411067],[-1.641601,6.881716,1.564150,6.649388,6.186961,4.890002,7.184001,3.052187,-0.346342,7.852665,5.997545,8.210164,3.587881,3.530334,-3.531948],[-0.660823,-5.458554,6.054616,-9.906685,-1.792750,-7.021274,1.588917,-2.838660,4.683993,-4.205090,-3.562341,5.139783,-5.631295,3.582681,-0.171489],[7.678550,-6.753821,-5.314018,-3.170524,-7.747689,0.410768,-3.860466,-7.456169,8.009109,0.548350,2.542581,9.106291,-4.052284,2.331840,8.730103],[1.055586,-0.089146,-9.697189,-8.638629,3.196000,0.771807,7.479527,5.320145,-1.453650,8.165685,-3.541063,8.614010,-3.539018,4.170497,4.723456],[6.050927,-7.043080,-6.540229,-2.745166,8.147507,7.886292,-2.546950,-1.537857,0.764197,-7.903078,-6.497255,4.029923,9.350469,4.751009,1.780243],[8.608241,-4.261255,2.526275,9.694797,1.613770,4.291763,8.351301,4.173411,-3.232090,5.157321,-5.231585,6.456586,3.346143,9.352519,-4.259554],[-1.241216,2.370890,0.871178,6.826789,-8.525419,7.465899,-1.905689,-5.169543,-6.197701,-8.131419,1.805790,3.257348,-1.583754,7.895552,-2.019587]],[[-3.132075,-2.947554,6.532476,-8.185729,-2.698960,3.916343,9.541682,-1.655152,9.832093,-2.802232,-9.687192,-4.757356,-8.543842,1.488590,-1.023487],[1.541298,-5.692667,-5.647230,7.649414,-3.231987,-6.281462,3.634218,8.097860,1.094973,-1.236918,-1.712036,6.634285,8.567903,3.345293,-1.343672],[-9.073470,2.209925,5.973256,-6.948593,-7.523332,-0.518401,-0.282027,-4.029797,3.326546,-5.061636,1.539827,2.526585,-7.363642,4.816302,2.881705],[6.144103,5.637866,-4.576621,8.960629,-6.444830,7.750561,-8.969338,-8.735124,-1.123464,-3.758073,-5.894386,3.413469,-5.451994,-8.319068,-1.535605],[0.734155,1.946318,-2.287499,1.182021,-1.434762,6.068392,-9.086131,2.510826,5.225481,3.879105,-6.528175,0.991250,4.680847,6.087004,4.571187],[7.767552,-6.187746,-0.069358,-6.296863,-7.840556,0.816316,-4.256023,4.515969,-1.705892,0.743362,-4.003877,2.285265,-8.835722,2.233632,-5.459797],[1.798076,-7.815791,-1.088013,-4.504802,-4.679391,9.079566,-4.760556,-8.462309,8.077729,-2.371955,-5.787699,8.136717,4.798045,-2.629158,4.971912],[8.282498,-6.809963,-1.586679,-3.586107,4.768647,7.139576,-7.824415,-5.203946,0.122766,-3.793590,0.128905,-5.060178,-4.094561,-7.555321,8.792844],[-2.985775,-7.302920,-2.613816,8.776168,6.054089,7.577517,-8.012681,-5.144629,-5.678134,-5.859041,-6.144759,4.943127,-4.630317,-1.569572,-9.533989],[9.472429,-6.770113,0.398135,-8.109954,-5.142241,6.289228,9.177745,7.493323,7.243787,4.174073,-4.452786,3.533758,2.885951,-6.976776,-5.944587],[3.896466,4.188974,4.649323,-7.712213,9.523205,7.678324,-8.750281,-2.177518,-3.716848,-0.921263,-8.110325,9.943237,-7.940507,5.121646,-5.901055],[-3.739253,7.211743,-5.938495,-9.525975,6.629632,4.317527,6.472661,5.139089,0.917220,9.236441,2.837414,5.338633,1.242098,4.298229,-4.765276]],[[-8.226945,7.108509,-3.011859,-5.222388,-9.288889,-6.488154,-4.414735,-5.434950,-4.797974,4.900481,7.082676,1.871854,-6.640286,-4.423285,9.603057],[9.831816,3.828211,-5.830859,-5.122830,9.124103,-0.727089,-8.219770,3.304316,-1.963636,5.874987,5.454237,-0.639480,5.075839,3.230320,4.085200],[-5.577330,-2.508073,9.290079,0.574496,5.250921,1.015157,-2.860457,-7.348587,-5.417377,0.416540,-2.482995,-7.642104,8.996817,3.354510,2.292776],[-1.833346,-7.577250,-1.168146,9.392702,0.299035,-5.135574,-8.327040,5.022813,-7.220550,3.966459,2.507180,-9.103546,-8.329825,7.532716,-8.984586],[-5.623962,-6.931883,2.233172,6.503526,-2.184264,2.931240,4.147335,4.527293,-5.942532,-6.523993,-6.867293,8.777203,5.026409,-0.427576,-0.988265],[1.789526,3.523221,1.379604,-4.117309,5.621745,6.989972,6.722994,-7.205116,3.841437,-8.115900,-4.674353,3.174681,9.182973,-6.299335,4.182763],[-6.614256,2.391680,-7.650698,-2.435819,6.387210,2.639930,-8.231689,9.263590,-6.924675,6.906022,-1.256681,8.045636,-8.716909,-4.151774,-3.445330],[0.455156,7.251316,8.073606,6.059720,-7.969993,9.079203,0.830306,3.797173,6.266506,-4.246150,-8.836585,-0.836232,-6.167981,1.257788,1.834068],[9.296878,-6.462701,-8.046664,-9.759002,-9.817198,-9.561844,2.937631,7.307107,8.105018,-8.903840,-4.772436,-3.158010,-8.120259,7.040902,-2.131090],[1.464368,4.094048,-7.505025,1.005270,6.408303,8.518974,-0.295314,9.460730,4.941300,-2.025293,-4.552838,7.562538,9.928664,-9.054258,1.352809],[-6.668712,-6.719776,-2.992121,7.132209,8.968379,8.098243,-8.520510,3.362714,-2.828491,-8.208254,-7.039145,8.235076,-9.609751,6.737543,8.660243],[8.299749,-2.356086,8.434036,-2.024432,-3.428938,4.856698,-4.279700,6.206411,3.788115,7.010963,-3.475947,6.729447,9.228538,1.085602,-1.448538]],[[8.917703,-6.414409,9.573109,-9.749194,-0.873757,8.459899,9.687273,4.642308,-8.028270,-1.725069,2.466363,4.257584,-2.083006,-5.621727,-4.523798],[-5.330589,-9.094581,6.703996,-8.263093,9.835654,-0.500971,-8.439364,-1.621324,6.945941,-6.762204,-6.451690,-7.043833,-5.526849,-1.945767,-0.705901],[0.651099,-9.759917,8.559070,8.188664,-3.379183,-9.874424,-1.792256,-8.003233,7.922720,5.678191,4.519614,2.309317,4.124670,-5.997620,-5.810323],[-0.196148,9.613118,5.585426,-7.178815,-0.921532,3.886544,-1.011302,5.497040,-5.796439,-6.070091,-2.006517,-9.498416,6.754399,-0.313830,5.206117],[6.996076,-0.094924,6.207213,1.926791,9.151767,-4.080439,2.682860,-2.889341,1.021531,3.838901,-4.645840,4.058564,0.773296,-1.350726,-2.667970],[-4.749300,-3.615869,-4.797202,-6.537586,7.713808,8.828116,-0.206380,-2.284075,9.880855,9.354779,9.628528,-4.227276,-9.917583,-4.333293,9.780952],[3.383004,-9.023623,4.471557,2.783367,-9.743391,5.679457,-1.208712,-1.634373,-9.755574,-6.778848,-3.222261,1.682936,-2.666758,-5.726161,-3.280743],[2.944773,5.378642,6.995967,-8.751960,-1.470617,-0.305994,-9.071829,9.332059,0.335138,-6.954036,-7.488710,-5.241488,6.039716,0.449502,9.091216],[-2.242726,0.775075,-8.016998,-4.147171,6.453690,5.878221,-8.276087,-4.987784,7.312859,1.263432,5.060322,-6.086138,4.647096,-7.384376,-4.431636],[-0.806677,-4.496231,-9.485544,4.602086,7.222537,-2.967621,-3.086540,-7.437752,-5.761669,-5.016211,5.934180,2.158097,2.122380,-7.586175,-2.070867],[5.010948,1.087720,-9.984093,-7.580965,-9.101274,0.002564,1.879175,7.886260,-3.067742,9.220468,9.207134,2.116648,-0.563568,9.700477,-9.894884],[5.093999,-3.104490,-9.241336,1.826333,-7.570456,-6.677648,-9.194066,1.638719,-4.050558,7.935166,8.524881,-8.554685,-3.866884,8.124575,7.991460]],[[8.367553,-7.671733,1.233692,-7.913308,3.576403,-3.444363,-7.878885,6.291429,-3.536598,-5.033971,1.359658,-8.471586,-8.236591,2.565296,-3.386939],[0.604274,1.007913,-4.618161,-4.389193,2.292685,0.510264,-5.010795,-9.135743,-7.314303,7.313486,9.918423,-0.107288,-0.492796,-8.256312,-2.212119],[1.673522,-4.201788,0.654682,0.060310,7.784686,-2.272910,8.913092,7.051304,-6.820266,-3.281281,-6.057001,1.006944,-3.902980,1.913324,3.076088],[9.653885,7.746400,6.313615,-4.255979,1.477019,-4.494645,0.524501,-0.236248,0.857002,-9.648542,-3.541911,5.636976,9.247864,0.921064,-5.174603],[-0.669700,9.651612,3.420592,2.462061,-7.495526,-9.101461,-5.592486,-3.475678,-4.489389,9.124311,2.638252,0.538103,3.677697,-3.849117,9.554159],[8.182416,1.360217,7.685594,-2.955274,-3.077305,9.678596,9.746306,-5.104979,-5.745633,3.396207,4.015755,3.654278,-1.676404,5.167909,-9.092241],[6.698640,7.059759,-9.050342,-9.329570,8.426517,7.153890,6.323546,-8.693346,-5.249749,-7.716936,-2.934049,8.441507,-7.107394,2.687837,-7.104149],[-5.195089,6.718899,-6.633136,-0.080391,-1.699489,-0.847551,2.932098,-2.947669,2.873026,-4.463645,4.347086,-4.177163,5.061530,-5.695602,-7.443251],[-4.821115,-3.256060,-0.636607,9.512955,4.341011,-7.028930,-1.848818,5.076175,3.353264,5.144291,-5.338552,4.339504,3.364966,0.942583,9.402944],[8.800256,-4.295979,2.161349,-0.560632,-3.646672,5.658332,8.396772,-9.528100,-1.394355,-4.597330,8.579813,-5.181908,7.076266,2.471893,6.833933],[-5.531541,-4.393501,1.970948,-6.805110,1.055135,8.537164,8.550529,-1.104281,-9.844602,-8.777273,-3.321735,2.319985,-9.448729,8.346116,-0.024859],[-3.443126,9.840546,0.088342,-8.343735,-9.976067,-1.796849,-5.829614,2.189433,4.789694,-9.635971,-5.963488,-5.695109,9.588656,-2.703572,-7.816012]],[[-4.822136,4.765776,-7.630413,-4.283788,-8.234695,-4.991982,-2.559607,9.530441,0.441405,4.026625,-1.887502,-3.217778,-6.785322,7.450738,-7.659436],[8.997455,-0.387817,-0.585970,8.659713,5.107447,-6.929292,4.412189,6.782021,-3.147901,7.098555,-9.065904,4.625954,-1.879488,-7.346318,-0.747200],[-3.065211,2.103252,-5.084712,5.955695,-3.496082,-5.733339,-5.010964,-1.724471,-3.747602,-0.002796,-1.947260,9.677422,1.370560,1.555890,0.746722],[8.020551,5.871653,-3.920257,-2.245683,-0.795152,-0.095342,4.147527,-2.193787,-5.375578,-3.708707,-7.243265,7.183772,-3.745258,-4.189085,9.746780],[5.574841,7.164724,7.629922,4.786385,4.860399,5.218251,-5.904113,-8.501716,-7.397653,4.698234,4.357426,9.726770,6.683003,8.230278,-2.235448],[6.040973,3.880367,-2.282163,-1.677196,3.686328,6.583890,0.500343,9.953940,-5.522816,2.020814,4.112599,-8.062630,6.003321,-8.948988,7.039700],[2.980915,4.409487,4.852513,-7.977093,4.338487,6.702073,-9.805290,-6.277539,-0.241779,6.638025,-5.589035,-1.736887,2.371617,-2.543283,-9.982916],[-9.302253,-1.678324,1.586337,-7.309230,6.358453,1.302599,-3.734988,5.975500,0.370592,-4.383954,8.052884,1.676068,0.461567,-0.256452,1.198139],[8.104163,-3.916476,8.070393,2.489082,2.180057,6.561160,3.349681,-7.122854,-3.466074,-5.226802,-7.236024,0.779672,9.021109,3.180500,-2.948911],[-1.080313,-1.854595,2.611629,-7.025540,2.312462,8.978267,-2.000781,4.551599,3.669743,3.763667,-1.480169,-6.416193,6.834189,-9.461494,4.646250],[6.452499,-5.005038,-1.067308,6.498331,-8.704656,1.588048,0.717582,-7.076298,-0.839112,-3.322771,8.154114,-7.902006,-0.387560,2.281257,-1.478164],[0.688186,-6.022458,2.078184,2.139760,-3.671875,-7.698419,5.307514,9.854835,-3.816866,-7.845103,1.868096,8.417444,1.766930,-8.050661,-3.209237]]], dtype = "float64")#candidate|2206|(16, 12, 15)|const|float64
var_2207 = relay.var("var_2207", dtype = "float64", shape = (16, 12, 15))#candidate|2207|(16, 12, 15)|var|float64
bop_2208 = relay.power(const_2206.astype('float64'), relay.reshape(var_2207.astype('float64'), relay.shape_of(const_2206))) # shape=(16, 12, 15)
bop_2212 = relay.bitwise_and(const_2206.astype('int8'), relay.reshape(var_2207.astype('int8'), relay.shape_of(const_2206))) # shape=(16, 12, 15)
output = relay.Tuple([bop_2208,bop_2212,])
output2 = relay.Tuple([bop_2208,bop_2212,])
func_2223 = relay.Function([var_2207,], output)
mod['func_2223'] = func_2223
mod = relay.transform.InferType()(mod)
var_2224 = relay.var("var_2224", dtype = "float64", shape = (16, 12, 15))#candidate|2224|(16, 12, 15)|var|float64
output = func_2223(var_2224)
func_2225 = relay.Function([var_2224], output)
mutated_mod['func_2225'] = func_2225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_2261 = func_1748_call()
call_2262 = func_1748_call()
var_2263 = relay.var("var_2263", dtype = "float64", shape = (2, 5, 5))#candidate|2263|(2, 5, 5)|var|float64
bop_2264 = relay.floor_mod(call_2261.astype('float64'), relay.reshape(var_2263.astype('float64'), relay.shape_of(call_2261))) # shape=(2, 5, 5)
bop_2267 = relay.floor_mod(call_2262.astype('float64'), relay.reshape(var_2263.astype('float64'), relay.shape_of(call_2262))) # shape=(2, 5, 5)
var_2268 = relay.var("var_2268", dtype = "float64", shape = (2, 5, 5))#candidate|2268|(2, 5, 5)|var|float64
bop_2269 = relay.mod(call_2261.astype('float32'), relay.reshape(var_2268.astype('float32'), relay.shape_of(call_2261))) # shape=(2, 5, 5)
bop_2272 = relay.mod(call_2262.astype('float32'), relay.reshape(var_2268.astype('float32'), relay.shape_of(call_2262))) # shape=(2, 5, 5)
func_1742_call = mod.get_global_var('func_1742')
func_1743_call = mutated_mod.get_global_var('func_1743')
call_2273 = relay.TupleGetItem(func_1742_call(), 0)
call_2274 = relay.TupleGetItem(func_1743_call(), 0)
func_1688_call = mod.get_global_var('func_1688')
func_1691_call = mutated_mod.get_global_var('func_1691')
const_2285 = relay.const([3,-5,8,5,-1,-9,3,-10,-7,9,-5,3,-3,-9,-1,1,2,8,8,-1,-6,-10,4,-7,-2,7,5,3,3,6,-8,10,7,-1,-1,3,-1,-6,3,-7,10,-4,-2,-5,-1,-10,10,-3,8,-1,4,-8,-7,1,-6,6,-10,2,-1,10,-10,5,10,8,-9,7,-2,-10,9,-10,-10,2,-9,6,1,-4,-6,-2,4,-4,-8,-8,-8,-9,10,2,8,-1,-10,6,3,-4,-8,7,6,-9,-6,3,5,-1,-1,-6,8,-5,6,-2,3,10,-10,-7,2,-9,1,2,-5,-3,-7,7,-6,-6,6,-3,-1,2,4,10,-5,2,-2,-2,-7,-5,-3,2,7,-4,-5,1,4,9,-5,3,9,-6,10,-10,-4,-3,-9,8,2,-8,3,-5,5,4,-3,9,-2,3,-4,9,9,-7,-7,-4,-1,8,-2,-10,6,-8,-10,-1,4,2,-6,-8,-5,3,3,2,10,7,-4,-10,2,-9,4,5,-3,-6,10,-4,-10,-8,6,7,2,9,-3,-8,6,-7,9,-10,9,-1,-1,-5,-4,4,-4,6,-4,-4,4,2,-3,-2,-1,5,8,10,-3,-10,9,-6,2,-9,-9,-3,-8,4,-4,-2,-9,-6,2,-6,-4,-1,8,-3,1,9,8,-2,-9,-6,5,9,-4,2,-4,3,5,-8,-1,-5,7,-2,-10,-9,-3,3,2,1,-8,6,-1,9,-2,1,9,8,2,9,6,-10,-5,-6,-6,7,-2,-7,1,-9,2,-8,7,-5,6,10,5,1,-4,7,6,3,4,-10,-5,-9,10,8,-3,-6,-8,-1,6,-3,10,10,1,-3,3,-1,4,-5,-7,-4,7,-1,4,-8,-5,3,-10,-1,-6,7,10,10,-9,-2,10,-9,4,2,2,-10,-2,2,6,4,-8,1,-10,-5,8,5,1,-6,4,5,-1,-10,-10,6,6,7,-10,3,1,-9,5,-10,-10,3,6,7,-5,-10,-9,-10,-8,-8,-7,-8,-1,1,3,-6,8,4,-9,1,9,-10,10,3,1,6,-6,-8,5,7,-1,-10,2,4,8,7,7,-6,-1,6,-2,-2,7,7,9,2,7,-10,-8,10,8,-3,-9,5,-8,4,1,10,5,-2,3,4,-5,-9,-9,-1,8,-3,3,-9,-8,2,-8,-9,-2,-7,6,5,6,-6,-4,-3,1,9,5,-4,2,2,10,3,6,-9,1,-4,9,-3,9,3,-1,5,-4,-9,-6,-6,-6,-8,-7,3,-10,-5,8,-10,-4,-6,-9,3,1,10,4,-4,3,1,9,-9,10,10,4,5,-4,4,-4,-9,-8,-2,4,-3,10,-8,9,-9,-1,-8,-8,-2,-6,10,-3,4,-7,-6,-4,8,4,-4,3,-3,-2,-9,6,7,-8,-9,-5,2,1,2,6,9,8,-4,-7,-7,-10,1,2,5,6,-2,-8,4,-2,-5,8,2,-9,1,3,-7,6,6,-10,7,6,-7,-4,4,-7,8,-4,5,5,1,4,1,-8,8,-10,3,4,10,1,6,2,-7,-2,-8,-8,7,9,-2,6,4,-4,-2,9,6,8,1,-4,4,1,-5,3,3,-7,-8,4,9,-10,-4,-6,10,2,2,10,-4,-2,-3,8,-6,8,7,9,-8,10,-10,4,-8,1,-2,10,5,-4,8,2,-6,9,2,1,6,6,8,6,-8,-10,2,-8,-1,-5,2,-4,-10,2,-10,4,4,4,1,8,8,10,7,7,10,-8,9,-9,-4,3,-3,1,-8,-9,-2,-10,4,-10,-10,10,9,2,-7,-1,1,-6,10,2,-10,-10,-8,5,-2,5,-4,-2,1,4,-3,1,-6,10,2,-7,5,-9,8,6,-10,2,4,-6,-5,4,-5,6,4,9,-10,-10,-6,1,-2,-5,-8,4,-2,8,3,7,-1,-9,-1,-10,-9,-9,9,10,-6,2,4,5,-10,-3,-7,1,7,2,2,-10,-2,5,-8,-3,-2,6,4,-1,-6,-7,9,2,2,4,4,7,3,-7,9,-3,6,-8,-3,-5,7,2,2,2,8,9,9,9,-10,-5,8,-1,-9,7,1,-1,-5,-4,8,2,1,-9,-7,-6,-7,-7,1,1,8,2,-1,-8,9,-3,8,-5,7,1,4,-1,10,-6,-8,1,-7,7,-7,4,9,-4,-3,5,-5,-1,8,8,4,7,2,-9,-10,-9,-3,4,10,-8,9,2,4,10,7,-7,3,2,1,-4,-10,-1,-6,5,-3,1,-8,5,-6,1,-5,4,-4,3,10,8,2,2,-4,-6,-2,2,-7,2,-2,-9,-3,4,1,-5,-7,-10,-4,-9,-1,-9,1,3,-8,3,9,-8,-5,2,-10,-5,-1,5,7,-6,-8,-1,6,-9,8,4,-4,-2,5,-2,-8,-3,4,-6,4,9,-7,-3,4,-9,3,-2,8,-5,5,-9,6,3,9,-1,3,5,2,-5,1,1,-7,-1,6,-7,5,7,7,-1,1,-1,6,4,-5,4,-3,10,-9,-5,8,9,10,-5,8,-5,-10,5,4,3,8,-5,-4,1,7,2,9,-1,9,-8,-3,-8,-1,8,2,-7,1,-1,9,10,-7,-3,6,-9,-9,-4,2,-7,4,-10,-9,7,9,4,-8,-7,-1,-5,-4,3,-1,-10,-10,-6,2,-1,3,10,-3,-3,3,10,-10,-10,-7,-2,2,1,-6,-6,-3,1,4,1,8,-10,3,4,5,8,8,2,1,-2,10,-5,-5,-2,-8,6,-6,6,8,-1,-5,-7,-10,-7,-4,-7,-6,-9,1,-10,4,-6,4,-8,-3,5,1,-2,-5,-3,7,3,-4,-6,4,5,-4,8,2,-10,8,-4,-1,1,5,-5,6,8,10,7,4,2,5,-5,8,4,3,5,4,10,-10,4,2,-5,9,-8,8,-8,2,1,-9,5,5,-5,-6,10,7,1,7,-4,2,7,2,2,-1,3,10,-3,8,5,3,1,1,-1,-9,-5,7,-2,1,4,-9,-5,4,5,8,-7,5,-2,9,-5,10,-1,5,-7,-9,10,5,10,-3,-5,-5,9,8,8,-7,-8,-4,4,-6,6,10,-5,1,-8,8,-3,-4,5,-8,-3,-6,1,-2,1,-8,3,-5,6,-2,10,8,5,10,7,-2,10,-9,-10,-8,9,10,-5,-8,2,-5,-4,-8,6,10,3,-2,-2,5,-4,-6,10,-4,-2,-8,-4,9,-8,8,4,-7,-2,1,2,9,-3,-8,1,-10,6,-9,2,10,-8,6,-6,10,-2,3,1,1,-7,6,2,-2,7,9,-1,9,-5,3,8,1,-6,-5,6,-2,-6,8,-6,4,-4,-3,10,-6,9,-8,3,-10,-4,10,2,1,-10,-3,1,-2,-10,10,8,-7,-5,5,-6,1,-9,-8,-10,-8,9,-9,-9,-5,-3,-1,3,10,-4,-8,-2,-8,9,-4,4,9,1,4,-6,-9,6,-4,7,-8,10,1,6,-5,-7,4,-8,5,-3,-1,9,-2,9,3,9,-9,7,3,1,-8,6,8,-5,5,-3,8,6,7,3,1,1,-3,10,-2,1,-9,-2,-10,1,6,2,6,-2,-1,-4,9,4,6,5,7,9,-4,3], dtype = "uint16")#candidate|2285|(1365,)|const|uint16
call_2284 = func_1688_call(relay.reshape(const_2285.astype('uint16'), [13, 15, 7]))
call_2286 = func_1688_call(relay.reshape(const_2285.astype('uint16'), [13, 15, 7]))
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_2290 = func_1748_call()
call_2291 = func_1748_call()
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_2295 = func_1499_call()
call_2296 = func_1499_call()
func_1688_call = mod.get_global_var('func_1688')
func_1691_call = mutated_mod.get_global_var('func_1691')
call_2299 = func_1688_call(relay.reshape(const_2285.astype('uint16'), [13, 15, 7]))
call_2300 = func_1688_call(relay.reshape(const_2285.astype('uint16'), [13, 15, 7]))
func_666_call = mod.get_global_var('func_666')
func_670_call = mutated_mod.get_global_var('func_670')
var_2325 = relay.var("var_2325", dtype = "float32", shape = (1920,))#candidate|2325|(1920,)|var|float32
var_2326 = relay.var("var_2326", dtype = "int16", shape = (11, 15))#candidate|2326|(11, 15)|var|int16
call_2324 = relay.TupleGetItem(func_666_call(relay.reshape(var_2325.astype('float32'), [10, 12, 16]), relay.reshape(var_2326.astype('int16'), [165,]), ), 1)
call_2327 = relay.TupleGetItem(func_670_call(relay.reshape(var_2325.astype('float32'), [10, 12, 16]), relay.reshape(var_2326.astype('int16'), [165,]), ), 1)
func_1674_call = mod.get_global_var('func_1674')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_2328 = func_1674_call()
call_2329 = func_1674_call()
func_1566_call = mod.get_global_var('func_1566')
func_1569_call = mutated_mod.get_global_var('func_1569')
var_2332 = relay.var("var_2332", dtype = "int8", shape = (4,))#candidate|2332|(4,)|var|int8
const_2333 = relay.const([-10,10,4,-7,5,-2,-2,4,-1,9,5,-4,8,7,7,-10,-5,-7,2,-7,9,-4,6,-7,10,-8,4,4,-9,-8,6,-3,6,2,-3,-5,-8,3,8,-8,6,5,-8,-1,-9,5,-7,-4,10,3,5,-6,-8,5,-9,-6,1,-4,-8,7,-6,-3,-3,-7,5,6,7,-2,-1,5,-2,-4,2,-1,4,10,-10,-2,9,6,9,-3,4,-5,4,2,1,-8,-3,-3,-9,-9,-5,-4,10,10,9,-8,-1,-7,-1,1,-4,-4,10,-6,-10,9,-7,2,2,9,-5,6,9,1,2,-3,2,5,-5,-2,7,-10,6,-2,-4,-2,7,7,9,6,-1,-10,-6,-5,-8,-6,10,-1,-10,5,-5,4,-2,8,10,-5,-2,-4,-9,-9,-9,6,-1,-6,-2,-6,7,-9,-3,-4,-10,6,3,-10,10,-3,-4,-8,6,9,-4,-6,-7,2,9,-4,5,1,-1,-2,2,-10,4,3,-4,9,7,1,-8,5,8,-8,-1,-1,-2,5,-8,-10,3,-2,6,-4,-7,-9,7,4,-5,-8,-1,-1,4,5,-1,4,-8,2,10,-9,1,3,1,-5,10,-5,2,4,-3,8,5,7,-8,9,7,4,5,-7,-5,-5,4,7,-7,4,1,-4,-1,2,-2,-7,9,6,-9,2,-5,-10,-6,-7,-10,-5,-2,-7,-1,-2,10,-1,-3,4,-2,-7,-3,8,-5,-4,-5,-6,-7,-9,2,1,-5,10,3,-9,10,2,10,-3,-4,-10,8,-7,10,5,-1,3,-3,1,7,-9,-5,-2,-2,2,4,6,-9,-8,10,9,2,-7,-5,8,-10,2,-9,-10,9,-6,3,4,-4,-9,6,6,-1,2,3,9,9,9,-6,-9,-1,8,7,-6,-6,5,-6,-1,-4,-3,5,2,-3,-1,2,-4,5,6,3,10,10,3,-6,1,7,9,-5,-5,-4,7,-6,-8,2,2,-10,7,10,6,-4,6,-10,-5,-9,-5,-9,-10,5,8,4,5,4,5,-1,10,7,-7,4,-4], dtype = "int8")#candidate|2333|(392,)|const|int8
call_2331 = relay.TupleGetItem(func_1566_call(relay.reshape(var_2332.astype('int8'), [1, 1, 4]), relay.reshape(const_2333.astype('int8'), [7, 14, 4]), ), 0)
call_2334 = relay.TupleGetItem(func_1569_call(relay.reshape(var_2332.astype('int8'), [1, 1, 4]), relay.reshape(const_2333.astype('int8'), [7, 14, 4]), ), 0)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_2335 = relay.TupleGetItem(func_541_call(), 0)
call_2336 = relay.TupleGetItem(func_542_call(), 0)
output = relay.Tuple([bop_2264,bop_2269,call_2273,call_2284,const_2285,call_2290,call_2295,call_2299,call_2324,var_2325,var_2326,call_2328,call_2331,var_2332,const_2333,call_2335,])
output2 = relay.Tuple([bop_2267,bop_2272,call_2274,call_2286,const_2285,call_2291,call_2296,call_2300,call_2327,var_2325,var_2326,call_2329,call_2334,var_2332,const_2333,call_2336,])
func_2338 = relay.Function([var_2263,var_2268,var_2325,var_2326,var_2332,], output)
mod['func_2338'] = func_2338
mod = relay.transform.InferType()(mod)
var_2339 = relay.var("var_2339", dtype = "float64", shape = (2, 5, 5))#candidate|2339|(2, 5, 5)|var|float64
var_2340 = relay.var("var_2340", dtype = "float64", shape = (2, 5, 5))#candidate|2340|(2, 5, 5)|var|float64
var_2341 = relay.var("var_2341", dtype = "float32", shape = (1920,))#candidate|2341|(1920,)|var|float32
var_2342 = relay.var("var_2342", dtype = "int16", shape = (11, 15))#candidate|2342|(11, 15)|var|int16
var_2343 = relay.var("var_2343", dtype = "int8", shape = (4,))#candidate|2343|(4,)|var|int8
output = func_2338(var_2339,var_2340,var_2341,var_2342,var_2343,)
func_2344 = relay.Function([var_2339,var_2340,var_2341,var_2342,var_2343,], output)
mutated_mod['func_2344'] = func_2344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_800_call = mod.get_global_var('func_800')
func_801_call = mutated_mod.get_global_var('func_801')
call_2435 = relay.TupleGetItem(func_800_call(), 0)
call_2436 = relay.TupleGetItem(func_801_call(), 0)
output = call_2435
output2 = call_2436
func_2443 = relay.Function([], output)
mod['func_2443'] = func_2443
mod = relay.transform.InferType()(mod)
mutated_mod['func_2443'] = func_2443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2443_call = mutated_mod.get_global_var('func_2443')
call_2444 = func_2443_call()
output = call_2444
func_2445 = relay.Function([], output)
mutated_mod['func_2445'] = func_2445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1930_call = mod.get_global_var('func_1930')
func_1932_call = mutated_mod.get_global_var('func_1932')
call_2460 = func_1930_call()
call_2461 = func_1930_call()
var_2472 = relay.var("var_2472", dtype = "float64", shape = (2, 5, 5))#candidate|2472|(2, 5, 5)|var|float64
bop_2473 = relay.floor_divide(call_2460.astype('float32'), relay.reshape(var_2472.astype('float32'), relay.shape_of(call_2460))) # shape=(2, 5, 5)
bop_2476 = relay.floor_divide(call_2461.astype('float32'), relay.reshape(var_2472.astype('float32'), relay.shape_of(call_2461))) # shape=(2, 5, 5)
output = bop_2473
output2 = bop_2476
func_2513 = relay.Function([var_2472,], output)
mod['func_2513'] = func_2513
mod = relay.transform.InferType()(mod)
var_2514 = relay.var("var_2514", dtype = "float64", shape = (2, 5, 5))#candidate|2514|(2, 5, 5)|var|float64
output = func_2513(var_2514)
func_2515 = relay.Function([var_2514], output)
mutated_mod['func_2515'] = func_2515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_2550 = relay.TupleGetItem(func_541_call(), 4)
call_2551 = relay.TupleGetItem(func_542_call(), 4)
output = relay.Tuple([call_2550,])
output2 = relay.Tuple([call_2551,])
func_2554 = relay.Function([], output)
mod['func_2554'] = func_2554
mod = relay.transform.InferType()(mod)
output = func_2554()
func_2555 = relay.Function([], output)
mutated_mod['func_2555'] = func_2555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_2624 = func_1748_call()
call_2625 = func_1748_call()
output = relay.Tuple([call_2624,])
output2 = relay.Tuple([call_2625,])
func_2633 = relay.Function([], output)
mod['func_2633'] = func_2633
mod = relay.transform.InferType()(mod)
mutated_mod['func_2633'] = func_2633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mutated_mod.get_global_var('func_2633')
call_2634 = func_2633_call()
output = call_2634
func_2635 = relay.Function([], output)
mutated_mod['func_2635'] = func_2635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_2636 = relay.TupleGetItem(func_2633_call(), 0)
call_2637 = relay.TupleGetItem(func_2635_call(), 0)
func_1930_call = mod.get_global_var('func_1930')
func_1932_call = mutated_mod.get_global_var('func_1932')
call_2638 = func_1930_call()
call_2639 = func_1930_call()
func_2156_call = mod.get_global_var('func_2156')
func_2159_call = mutated_mod.get_global_var('func_2159')
call_2654 = relay.TupleGetItem(func_2156_call(relay.reshape(call_2636.astype('float64'), [2, 5, 5])), 4)
call_2655 = relay.TupleGetItem(func_2159_call(relay.reshape(call_2636.astype('float64'), [2, 5, 5])), 4)
output = relay.Tuple([call_2636,call_2638,call_2654,])
output2 = relay.Tuple([call_2637,call_2639,call_2655,])
func_2662 = relay.Function([], output)
mod['func_2662'] = func_2662
mod = relay.transform.InferType()(mod)
mutated_mod['func_2662'] = func_2662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2662_call = mutated_mod.get_global_var('func_2662')
call_2663 = func_2662_call()
output = call_2663
func_2664 = relay.Function([], output)
mutated_mod['func_2664'] = func_2664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_2751 = func_1012_call()
call_2752 = func_1012_call()
uop_2768 = relay.log2(call_2751.astype('float64')) # shape=(2, 5, 5)
uop_2770 = relay.log2(call_2752.astype('float64')) # shape=(2, 5, 5)
output = uop_2768
output2 = uop_2770
func_2805 = relay.Function([], output)
mod['func_2805'] = func_2805
mod = relay.transform.InferType()(mod)
mutated_mod['func_2805'] = func_2805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2805_call = mutated_mod.get_global_var('func_2805')
call_2806 = func_2805_call()
output = call_2806
func_2807 = relay.Function([], output)
mutated_mod['func_2807'] = func_2807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mod.get_global_var('func_1012')
func_1014_call = mutated_mod.get_global_var('func_1014')
call_2888 = func_1012_call()
call_2889 = func_1012_call()
func_1688_call = mod.get_global_var('func_1688')
func_1691_call = mutated_mod.get_global_var('func_1691')
const_2891 = relay.const([[3,6,8,6,1,4,-10,1,3,-8,-3,10,10,-9,1,10,7,9,8,-3,-1,-6,-6,-6,-7,3,5,-3,-9,9,6,-5,5,-8,1,1,-6,3,-6,-2,5,6,9,6,10,9,5,6,-9,-5,6,2,-5,-8,6,-5,-3,3,-10,1,4,-5,5,-1,8,5,-1,9,-6,6,-5,4,-2,4,-6,2,-7,1,8,6,-7,1,-2,4,7,9,-1,-2,10,4,10,-5,3,-9,-9,9,10,4,2,9,5,1,-2,10,-6,-7,-10,-3,10,8,-9,-5,-8,-10,-6,10,-8,9,4,2,-4,8,5,1,-3,7,7,-10,3,-7,-10,4,8,8,5,-1,2,4,-1,3,5,8,3,9,10,7,-3,-8,4,-10,-7,-7,10,-6,-8,5,-8,5,10,5,10,-2,3,-3,-5,6,-5,2,-4,-6,-5,6,-3,5,5,-5,-4,-5,6,-1,-10,-4,-10,10,-5,8,7,-7,5,6,-2,4,-8,10,-8],[7,-10,4,-9,5,1,8,-5,2,5,-1,-1,-4,3,-2,-6,10,-2,-7,-7,7,-4,-9,9,1,9,2,7,8,-1,3,-1,-5,-5,6,-3,-3,-7,7,4,-2,2,-5,-2,-8,-5,-10,4,-1,-6,-3,9,7,6,4,4,5,1,-2,4,6,3,-8,-1,-5,8,-5,4,7,-8,2,-8,-7,-8,4,10,-3,-7,-1,-4,5,-6,10,-6,10,7,-5,10,8,2,-1,-3,9,-7,-10,9,-2,-8,7,-9,-8,-10,3,-5,-7,2,-1,-2,7,-1,10,-2,8,-7,4,3,-2,4,-4,-8,-8,-1,-7,9,2,-3,-1,7,7,-6,7,4,4,-9,-7,-9,9,-3,-3,-2,-4,9,4,-7,-7,-3,-2,-6,-4,-5,1,-5,-6,-7,-5,-5,-6,6,-10,10,-8,4,9,-6,-6,-4,-7,-9,9,5,7,-3,-6,-2,4,8,6,-1,3,-7,-10,-7,-10,-1,2,-3,8,1,-8,2,6,3,-1,6,4],[2,2,1,8,1,10,1,3,-3,7,-3,5,-5,-2,10,-2,-10,-4,8,-6,3,4,-5,-6,-8,-4,-5,6,-3,9,-6,8,7,8,-5,4,-10,2,7,-4,10,-5,4,5,2,3,-6,4,4,-7,-6,-4,1,-2,3,-1,-1,-8,-10,4,-8,9,-9,-5,7,-9,5,1,-1,-2,8,-7,-10,6,9,-1,9,1,7,1,8,-8,5,-6,-4,-1,4,3,-7,5,1,5,7,9,9,-9,10,-9,7,-3,4,3,-6,-1,5,10,-1,5,-10,4,-4,6,10,-3,1,-10,-4,4,-1,-2,2,-2,7,-2,4,6,-9,-6,-10,-6,6,7,-10,7,-9,-6,3,5,-9,-6,-5,3,-7,-2,7,-7,5,1,8,-5,-9,7,2,1,-8,-4,-3,8,-5,8,-10,5,10,1,5,2,-10,5,10,-1,7,3,4,2,4,3,5,-1,5,-3,-9,-6,6,1,1,6,9,10,3,-5,9,4,6,-9,9],[-3,8,7,3,10,10,-2,7,4,-1,8,-5,-4,-8,-3,-6,7,-6,-8,4,2,7,-5,-3,6,-6,-4,9,-3,2,5,-4,3,-7,-10,-10,5,4,4,8,1,-4,-6,-2,9,-7,-3,-7,3,-7,4,-3,7,-10,-7,10,-4,-1,-5,-1,1,1,1,10,1,-6,7,8,9,6,8,-1,8,3,9,10,-4,-3,10,-8,3,7,-3,5,-3,-7,-6,-3,2,-10,2,2,2,10,1,4,-1,-3,6,-6,10,9,-2,10,8,7,-1,-5,-6,-8,4,2,-1,-10,4,7,7,-10,6,-3,2,-4,8,-10,4,-3,10,-4,10,-9,7,-10,9,3,2,10,7,10,3,2,-10,8,10,-10,-5,7,-4,-10,7,-10,1,-6,4,-4,8,6,2,-7,-5,3,7,-6,8,-3,9,-5,-3,-7,-7,-6,8,4,-6,-10,-9,5,-6,-6,-6,1,-2,6,-9,4,5,-2,10,2,-6,-8,-9,10,1,10,-5],[-5,-7,-4,-5,2,-8,4,10,-5,10,3,4,5,-7,7,5,-1,-2,-1,-3,8,9,1,-9,8,-8,9,4,9,8,-5,7,-7,1,5,-1,7,-6,1,-3,-5,10,4,7,-5,-1,-9,-6,-7,-6,-3,7,1,8,-9,1,-3,7,4,3,10,-2,2,9,7,2,-4,-1,2,-7,2,4,-10,7,4,5,-5,5,7,5,-9,3,7,10,-5,10,-4,5,5,8,-3,5,2,-5,2,-2,-8,6,-10,3,-3,5,7,-3,-3,2,-6,3,-7,-8,8,-9,6,2,-4,-3,9,-6,7,9,-10,5,-9,5,-7,-4,2,3,-1,-4,-3,-1,5,9,9,-2,-2,-7,7,5,-3,-3,4,-3,-3,9,-5,8,-10,-2,8,7,4,9,4,-9,4,-5,8,-3,-6,8,-3,-3,-5,1,2,-1,2,10,-5,6,-9,-8,-9,-9,-5,10,3,-2,-10,-10,-3,-9,-3,2,7,7,-8,-6,-8,-4,2,-3,-7],[5,-10,-10,-8,-7,-9,8,6,6,2,3,-7,-5,10,7,-10,7,-7,-2,-9,5,7,-7,-9,-7,5,1,8,2,-1,-7,1,-3,-4,-3,-4,-2,2,-6,-2,-9,4,8,5,9,-1,1,2,-10,8,9,4,5,-3,-6,-5,-2,7,8,-2,-10,-5,2,-4,4,-8,6,-6,-7,-3,4,9,4,5,-10,10,7,2,1,-4,7,-9,3,5,6,4,-3,-7,-1,-10,-9,-2,4,-10,9,1,3,1,7,7,-4,-5,-3,4,5,8,4,4,3,4,-5,10,-5,5,4,7,-2,5,-5,3,4,-5,1,-6,-3,-8,3,8,6,-4,-5,10,-5,5,5,9,-7,-6,6,-3,-10,5,9,-3,-9,7,10,-1,2,3,2,-5,-8,7,4,-3,3,10,-3,6,2,4,-1,-4,-1,-10,-1,-1,-9,5,10,-8,5,-6,-10,8,6,-1,9,1,2,-2,-10,2,-5,3,-4,-10,-6,5,9,-8,-7,5,4],[-7,-9,9,-4,-9,9,-4,-10,10,-1,1,-2,6,-8,7,-6,8,3,-5,2,6,3,-4,4,-10,-3,-6,10,4,2,-9,6,-4,-9,-8,10,-2,-3,9,-4,-4,-9,-2,2,-6,9,-1,-7,6,1,-8,-7,7,9,-9,4,-10,4,10,7,-10,-5,1,-5,9,8,-10,-8,-7,2,9,-9,-7,-8,9,-6,2,-10,-5,-10,3,-2,5,10,6,-7,-10,-4,1,7,-9,-1,-6,4,5,8,1,3,-1,-7,-8,1,-3,4,-9,4,-6,9,-3,3,-8,-10,-10,-7,7,-7,-10,-3,-5,7,-10,4,-3,5,-7,-7,-9,3,1,2,8,3,10,-1,2,3,-8,-7,-9,8,-1,10,-2,-3,5,-9,7,-10,-9,-5,10,5,2,-6,4,-4,9,-7,9,1,7,6,5,10,7,-5,1,5,-1,4,-7,10,-4,-6,-9,6,9,10,8,-8,-7,-3,2,-4,9,8,-6,-1,-9,3,5,6,1,-8,7]], dtype = "uint16")#candidate|2891|(7, 195)|const|uint16
call_2890 = func_1688_call(relay.reshape(const_2891.astype('uint16'), [13, 15, 7]))
call_2892 = func_1688_call(relay.reshape(const_2891.astype('uint16'), [13, 15, 7]))
output = relay.Tuple([call_2888,call_2890,const_2891,])
output2 = relay.Tuple([call_2889,call_2892,const_2891,])
func_2901 = relay.Function([], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
mutated_mod['func_2901'] = func_2901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2901_call = mutated_mod.get_global_var('func_2901')
call_2902 = func_2901_call()
output = call_2902
func_2903 = relay.Function([], output)
mutated_mod['func_2903'] = func_2903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1882_call = mod.get_global_var('func_1882')
func_1884_call = mutated_mod.get_global_var('func_1884')
call_2939 = relay.TupleGetItem(func_1882_call(), 0)
call_2940 = relay.TupleGetItem(func_1884_call(), 0)
output = call_2939
output2 = call_2940
func_2969 = relay.Function([], output)
mod['func_2969'] = func_2969
mod = relay.transform.InferType()(mod)
output = func_2969()
func_2970 = relay.Function([], output)
mutated_mod['func_2970'] = func_2970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1328_call = mod.get_global_var('func_1328')
func_1330_call = mutated_mod.get_global_var('func_1330')
call_2986 = relay.TupleGetItem(func_1328_call(), 0)
call_2987 = relay.TupleGetItem(func_1330_call(), 0)
output = call_2986
output2 = call_2987
func_2989 = relay.Function([], output)
mod['func_2989'] = func_2989
mod = relay.transform.InferType()(mod)
output = func_2989()
func_2990 = relay.Function([], output)
mutated_mod['func_2990'] = func_2990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_3016 = relay.TupleGetItem(func_541_call(), 0)
call_3017 = relay.TupleGetItem(func_542_call(), 0)
func_1412_call = mod.get_global_var('func_1412')
func_1415_call = mutated_mod.get_global_var('func_1415')
var_3028 = relay.var("var_3028", dtype = "float32", shape = (216, 2))#candidate|3028|(216, 2)|var|float32
call_3027 = relay.TupleGetItem(func_1412_call(relay.reshape(var_3028.astype('float32'), [9, 16, 3])), 0)
call_3029 = relay.TupleGetItem(func_1415_call(relay.reshape(var_3028.astype('float32'), [9, 16, 3])), 0)
func_1566_call = mod.get_global_var('func_1566')
func_1569_call = mutated_mod.get_global_var('func_1569')
var_3035 = relay.var("var_3035", dtype = "int8", shape = (4,))#candidate|3035|(4,)|var|int8
var_3036 = relay.var("var_3036", dtype = "int8", shape = (392,))#candidate|3036|(392,)|var|int8
call_3034 = relay.TupleGetItem(func_1566_call(relay.reshape(var_3035.astype('int8'), [1, 1, 4]), relay.reshape(var_3036.astype('int8'), [7, 14, 4]), ), 0)
call_3037 = relay.TupleGetItem(func_1569_call(relay.reshape(var_3035.astype('int8'), [1, 1, 4]), relay.reshape(var_3036.astype('int8'), [7, 14, 4]), ), 0)
uop_3054 = relay.sinh(var_3028.astype('float64')) # shape=(216, 2)
uop_3056 = relay.cosh(call_3034.astype('float64')) # shape=(7, 14, 4)
uop_3058 = relay.cosh(call_3037.astype('float64')) # shape=(7, 14, 4)
output = relay.Tuple([call_3016,call_3027,var_3035,var_3036,uop_3054,uop_3056,])
output2 = relay.Tuple([call_3017,call_3029,var_3035,var_3036,uop_3054,uop_3058,])
func_3068 = relay.Function([var_3028,var_3035,var_3036,], output)
mod['func_3068'] = func_3068
mod = relay.transform.InferType()(mod)
var_3069 = relay.var("var_3069", dtype = "float32", shape = (216, 2))#candidate|3069|(216, 2)|var|float32
var_3070 = relay.var("var_3070", dtype = "int8", shape = (4,))#candidate|3070|(4,)|var|int8
var_3071 = relay.var("var_3071", dtype = "int8", shape = (392,))#candidate|3071|(392,)|var|int8
output = func_3068(var_3069,var_3070,var_3071,)
func_3072 = relay.Function([var_3069,var_3070,var_3071,], output)
mutated_mod['func_3072'] = func_3072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_3085 = func_1499_call()
call_3086 = func_1499_call()
func_2989_call = mod.get_global_var('func_2989')
func_2990_call = mutated_mod.get_global_var('func_2990')
call_3110 = func_2989_call()
call_3111 = func_2989_call()
func_1639_call = mod.get_global_var('func_1639')
func_1642_call = mutated_mod.get_global_var('func_1642')
var_3122 = relay.var("var_3122", dtype = "float32", shape = (432,))#candidate|3122|(432,)|var|float32
call_3121 = relay.TupleGetItem(func_1639_call(relay.reshape(var_3122.astype('float32'), [432,])), 0)
call_3123 = relay.TupleGetItem(func_1642_call(relay.reshape(var_3122.astype('float32'), [432,])), 0)
bop_3124 = relay.add(var_3122.astype('int32'), call_3121.astype('int32')) # shape=(11, 15, 432)
bop_3127 = relay.add(var_3122.astype('int32'), call_3123.astype('int32')) # shape=(11, 15, 432)
func_2662_call = mod.get_global_var('func_2662')
func_2664_call = mutated_mod.get_global_var('func_2664')
call_3132 = relay.TupleGetItem(func_2662_call(), 2)
call_3133 = relay.TupleGetItem(func_2664_call(), 2)
func_2901_call = mod.get_global_var('func_2901')
func_2903_call = mutated_mod.get_global_var('func_2903')
call_3137 = relay.TupleGetItem(func_2901_call(), 0)
call_3138 = relay.TupleGetItem(func_2903_call(), 0)
uop_3139 = relay.atanh(call_3121.astype('float32')) # shape=(11, 15, 1)
uop_3141 = relay.atanh(call_3123.astype('float32')) # shape=(11, 15, 1)
output = relay.Tuple([call_3085,call_3110,bop_3124,call_3132,call_3137,uop_3139,])
output2 = relay.Tuple([call_3086,call_3111,bop_3127,call_3133,call_3138,uop_3141,])
func_3143 = relay.Function([var_3122,], output)
mod['func_3143'] = func_3143
mod = relay.transform.InferType()(mod)
var_3144 = relay.var("var_3144", dtype = "float32", shape = (432,))#candidate|3144|(432,)|var|float32
output = func_3143(var_3144)
func_3145 = relay.Function([var_3144], output)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1328_call = mod.get_global_var('func_1328')
func_1330_call = mutated_mod.get_global_var('func_1330')
call_3192 = relay.TupleGetItem(func_1328_call(), 0)
call_3193 = relay.TupleGetItem(func_1330_call(), 0)
func_1674_call = mod.get_global_var('func_1674')
func_1676_call = mutated_mod.get_global_var('func_1676')
call_3197 = func_1674_call()
call_3198 = func_1674_call()
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_3201 = relay.TupleGetItem(func_541_call(), 4)
call_3202 = relay.TupleGetItem(func_542_call(), 4)
var_3206 = relay.var("var_3206", dtype = "int16", shape = (165,))#candidate|3206|(165,)|var|int16
bop_3207 = relay.left_shift(call_3201.astype('uint8'), relay.reshape(var_3206.astype('uint8'), relay.shape_of(call_3201))) # shape=(165,)
bop_3210 = relay.left_shift(call_3202.astype('uint8'), relay.reshape(var_3206.astype('uint8'), relay.shape_of(call_3202))) # shape=(165,)
uop_3214 = relay.sin(bop_3207.astype('float64')) # shape=(165,)
uop_3216 = relay.sin(bop_3210.astype('float64')) # shape=(165,)
uop_3221 = relay.acos(uop_3214.astype('float32')) # shape=(165,)
uop_3223 = relay.acos(uop_3216.astype('float32')) # shape=(165,)
output = relay.Tuple([call_3192,call_3197,uop_3221,])
output2 = relay.Tuple([call_3193,call_3198,uop_3223,])
func_3224 = relay.Function([var_3206,], output)
mod['func_3224'] = func_3224
mod = relay.transform.InferType()(mod)
var_3225 = relay.var("var_3225", dtype = "int16", shape = (165,))#candidate|3225|(165,)|var|int16
output = func_3224(var_3225)
func_3226 = relay.Function([var_3225], output)
mutated_mod['func_3226'] = func_3226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2182_call = mod.get_global_var('func_2182')
func_2183_call = mutated_mod.get_global_var('func_2183')
call_3238 = relay.TupleGetItem(func_2182_call(), 2)
call_3239 = relay.TupleGetItem(func_2183_call(), 2)
var_3240 = relay.var("var_3240", dtype = "float32", shape = (1920,))#candidate|3240|(1920,)|var|float32
bop_3241 = relay.floor_mod(call_3238.astype('float64'), relay.reshape(var_3240.astype('float64'), relay.shape_of(call_3238))) # shape=(1920,)
bop_3244 = relay.floor_mod(call_3239.astype('float64'), relay.reshape(var_3240.astype('float64'), relay.shape_of(call_3239))) # shape=(1920,)
bop_3245 = relay.add(var_3240.astype('int16'), relay.reshape(call_3238.astype('int16'), relay.shape_of(var_3240))) # shape=(1920,)
bop_3248 = relay.add(var_3240.astype('int16'), relay.reshape(call_3239.astype('int16'), relay.shape_of(var_3240))) # shape=(1920,)
func_1215_call = mod.get_global_var('func_1215')
func_1217_call = mutated_mod.get_global_var('func_1217')
const_3257 = relay.const([-2.921663,-6.002643,-8.772083,9.413900,5.251760,9.876848,-2.050578,3.640438,-8.477916,-2.311868,4.761490,4.686879,6.783855,-3.829895,4.606972,-9.887032,-7.501398,5.536385,-8.933489,2.400052,2.366495,-2.208839,-3.014661,4.289603,6.856949,0.322440,-7.249830,-2.788323,-7.932495,-2.849970,7.186817,4.710572,8.960901,-7.658310,-4.083856,-8.466974,-2.584063,5.952707,-0.119713,9.079771,-7.562791,-8.777852,6.377190,-7.641395,5.627063,3.490244,1.690994,-2.643559,-0.944049,-1.550579,-6.181708,-4.434578,2.855202,-6.921696,-0.913069,-7.288020,-2.267450,2.896943,7.910198,2.675852,-1.143770,-5.978435,-3.397294,1.992130,0.769407,3.578965,-7.587052,7.954490,0.174327,3.174630,5.227958,0.539516,-3.348383,-8.955614,-0.913040,-6.228984,-8.891234,6.693235,-8.670125,7.100642,-8.401709,3.737392,-7.440332,2.313854,-1.075925,0.700268,-7.580070,2.282466,9.510296,-2.850702,-8.428976,2.921530,1.341215,2.631442,6.464379,-7.020732,6.005877,-6.675122,-6.364884,5.019052,-7.744849,-0.327167,2.468548,0.128795,0.975131,3.451256,-0.001054,9.467657,3.694016,4.052454,0.549188,-6.608134,-9.015303,9.850171,-0.484144,8.352165,9.806594,0.901830,-2.010091,-2.377707,4.920812,7.988280,-3.581270,0.351582,5.060669,-9.686725,-8.721076,0.592494,6.230689,9.423454,3.539509,-9.075146,6.896892,-3.813872,-0.006338,2.686558,-6.388496,8.903874,2.465591,-2.516671,-6.054416,-2.661380,5.797894,0.329379,-1.346673,1.054098,5.403510,-0.696312,5.996908,-1.999782,4.610471,8.171370,-1.532747,-5.989191,-4.230875,-0.979799,0.822716,2.906053,-8.770111,4.955782,-6.679908,1.141904,-4.789952,-6.455582,-1.334655,3.432704,-1.545427,9.985715,-4.878185,8.655467,-6.952704,4.325041,-7.204290,-3.083168,5.575062,2.727645,-9.420246,8.538189,-8.879745,1.876420,7.683842,3.372002,4.101814,-8.221439,-2.221384,-4.127956,-1.978030,8.809847,9.731595,3.912153,8.480747,-8.453956,4.398926,7.816006,7.785378,-7.967868,8.134193,-3.930910,-1.229293,-8.540549,-1.476686,8.661812,-2.666412,7.409687,1.445051,-1.191402,9.794102,-4.479141,5.202787,1.511925,-7.178112,6.390593,3.659742,8.015585,-9.885559,-6.177194,-5.892866,4.827779,-5.541135,-1.971152], dtype = "float64")#candidate|3257|(220,)|const|float64
call_3256 = relay.TupleGetItem(func_1215_call(relay.reshape(const_3257.astype('float64'), [5, 4, 11])), 2)
call_3258 = relay.TupleGetItem(func_1217_call(relay.reshape(const_3257.astype('float64'), [5, 4, 11])), 2)
uop_3264 = relay.asin(const_3257.astype('float64')) # shape=(220,)
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_3270 = relay.TupleGetItem(func_1814_call(), 1)
call_3271 = relay.TupleGetItem(func_1816_call(), 1)
bop_3275 = relay.equal(uop_3264.astype('bool'), relay.reshape(const_3257.astype('bool'), relay.shape_of(uop_3264))) # shape=(220,)
output = relay.Tuple([bop_3241,bop_3245,call_3256,call_3270,bop_3275,])
output2 = relay.Tuple([bop_3244,bop_3248,call_3258,call_3271,bop_3275,])
func_3284 = relay.Function([var_3240,], output)
mod['func_3284'] = func_3284
mod = relay.transform.InferType()(mod)
var_3285 = relay.var("var_3285", dtype = "float32", shape = (1920,))#candidate|3285|(1920,)|var|float32
output = func_3284(var_3285)
func_3286 = relay.Function([var_3285], output)
mutated_mod['func_3286'] = func_3286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1732_call = mod.get_global_var('func_1732')
func_1733_call = mutated_mod.get_global_var('func_1733')
call_3295 = func_1732_call()
call_3296 = func_1732_call()
output = relay.Tuple([call_3295,])
output2 = relay.Tuple([call_3296,])
func_3365 = relay.Function([], output)
mod['func_3365'] = func_3365
mod = relay.transform.InferType()(mod)
mutated_mod['func_3365'] = func_3365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3365_call = mutated_mod.get_global_var('func_3365')
call_3366 = func_3365_call()
output = call_3366
func_3367 = relay.Function([], output)
mutated_mod['func_3367'] = func_3367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_3416 = relay.TupleGetItem(func_1172_call(), 0)
call_3417 = relay.TupleGetItem(func_1174_call(), 0)
output = relay.Tuple([call_3416,])
output2 = relay.Tuple([call_3417,])
func_3449 = relay.Function([], output)
mod['func_3449'] = func_3449
mod = relay.transform.InferType()(mod)
output = func_3449()
func_3450 = relay.Function([], output)
mutated_mod['func_3450'] = func_3450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_800_call = mod.get_global_var('func_800')
func_801_call = mutated_mod.get_global_var('func_801')
call_3486 = relay.TupleGetItem(func_800_call(), 0)
call_3487 = relay.TupleGetItem(func_801_call(), 0)
func_3449_call = mod.get_global_var('func_3449')
func_3450_call = mutated_mod.get_global_var('func_3450')
call_3492 = relay.TupleGetItem(func_3449_call(), 0)
call_3493 = relay.TupleGetItem(func_3450_call(), 0)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_3513 = relay.TupleGetItem(func_1172_call(), 0)
call_3514 = relay.TupleGetItem(func_1174_call(), 0)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_3531 = relay.TupleGetItem(func_1370_call(), 0)
call_3532 = relay.TupleGetItem(func_1372_call(), 0)
output = relay.Tuple([call_3486,call_3492,call_3513,call_3531,])
output2 = relay.Tuple([call_3487,call_3493,call_3514,call_3532,])
func_3534 = relay.Function([], output)
mod['func_3534'] = func_3534
mod = relay.transform.InferType()(mod)
output = func_3534()
func_3535 = relay.Function([], output)
mutated_mod['func_3535'] = func_3535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1266_call = mod.get_global_var('func_1266')
func_1268_call = mutated_mod.get_global_var('func_1268')
call_3636 = relay.TupleGetItem(func_1266_call(), 2)
call_3637 = relay.TupleGetItem(func_1268_call(), 2)
var_3646 = relay.var("var_3646", dtype = "float32", shape = (1920,))#candidate|3646|(1920,)|var|float32
bop_3647 = relay.less_equal(call_3636.astype('bool'), relay.reshape(var_3646.astype('bool'), relay.shape_of(call_3636))) # shape=(1920,)
bop_3650 = relay.less_equal(call_3637.astype('bool'), relay.reshape(var_3646.astype('bool'), relay.shape_of(call_3637))) # shape=(1920,)
output = bop_3647
output2 = bop_3650
func_3659 = relay.Function([var_3646,], output)
mod['func_3659'] = func_3659
mod = relay.transform.InferType()(mod)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3660 = relay.var("var_3660", dtype = "float32", shape = (1920,))#candidate|3660|(1920,)|var|float32
func_3659_call = mutated_mod.get_global_var('func_3659')
call_3661 = func_3659_call(var_3660)
output = call_3661
func_3662 = relay.Function([var_3660], output)
mutated_mod['func_3662'] = func_3662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3664 = relay.var("var_3664", dtype = "float32", shape = (2, 8, 1))#candidate|3664|(2, 8, 1)|var|float32
uop_3665 = relay.exp(var_3664.astype('float32')) # shape=(2, 8, 1)
bop_3667 = relay.mod(uop_3665.astype('float32'), relay.reshape(var_3664.astype('float32'), relay.shape_of(uop_3665))) # shape=(2, 8, 1)
func_1688_call = mod.get_global_var('func_1688')
func_1691_call = mutated_mod.get_global_var('func_1691')
var_3679 = relay.var("var_3679", dtype = "uint16", shape = (1365,))#candidate|3679|(1365,)|var|uint16
call_3678 = func_1688_call(relay.reshape(var_3679.astype('uint16'), [13, 15, 7]))
call_3680 = func_1688_call(relay.reshape(var_3679.astype('uint16'), [13, 15, 7]))
bop_3686 = relay.not_equal(bop_3667.astype('bool'), relay.reshape(uop_3665.astype('bool'), relay.shape_of(bop_3667))) # shape=(2, 8, 1)
output = relay.Tuple([call_3678,var_3679,bop_3686,])
output2 = relay.Tuple([call_3680,var_3679,bop_3686,])
func_3699 = relay.Function([var_3664,var_3679,], output)
mod['func_3699'] = func_3699
mod = relay.transform.InferType()(mod)
var_3700 = relay.var("var_3700", dtype = "float32", shape = (2, 8, 1))#candidate|3700|(2, 8, 1)|var|float32
var_3701 = relay.var("var_3701", dtype = "uint16", shape = (1365,))#candidate|3701|(1365,)|var|uint16
output = func_3699(var_3700,var_3701,)
func_3702 = relay.Function([var_3700,var_3701,], output)
mutated_mod['func_3702'] = func_3702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1328_call = mod.get_global_var('func_1328')
func_1330_call = mutated_mod.get_global_var('func_1330')
call_3712 = relay.TupleGetItem(func_1328_call(), 0)
call_3713 = relay.TupleGetItem(func_1330_call(), 0)
var_3721 = relay.var("var_3721", dtype = "bool", shape = (2, 5, 5))#candidate|3721|(2, 5, 5)|var|bool
bop_3722 = relay.bitwise_xor(call_3712.astype('uint16'), relay.reshape(var_3721.astype('uint16'), relay.shape_of(call_3712))) # shape=(2, 5, 5)
bop_3725 = relay.bitwise_xor(call_3713.astype('uint16'), relay.reshape(var_3721.astype('uint16'), relay.shape_of(call_3713))) # shape=(2, 5, 5)
output = bop_3722
output2 = bop_3725
func_3726 = relay.Function([var_3721,], output)
mod['func_3726'] = func_3726
mod = relay.transform.InferType()(mod)
mutated_mod['func_3726'] = func_3726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3727 = relay.var("var_3727", dtype = "bool", shape = (2, 5, 5))#candidate|3727|(2, 5, 5)|var|bool
func_3726_call = mutated_mod.get_global_var('func_3726')
call_3728 = func_3726_call(var_3727)
output = call_3728
func_3729 = relay.Function([var_3727], output)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3534_call = mod.get_global_var('func_3534')
func_3535_call = mutated_mod.get_global_var('func_3535')
call_3782 = relay.TupleGetItem(func_3534_call(), 3)
call_3783 = relay.TupleGetItem(func_3535_call(), 3)
output = call_3782
output2 = call_3783
func_3819 = relay.Function([], output)
mod['func_3819'] = func_3819
mod = relay.transform.InferType()(mod)
mutated_mod['func_3819'] = func_3819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mutated_mod.get_global_var('func_3819')
call_3820 = func_3819_call()
output = call_3820
func_3821 = relay.Function([], output)
mutated_mod['func_3821'] = func_3821
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3880 = relay.const(-4, dtype = "int16")#candidate|3880|()|const|int16
var_3881 = relay.var("var_3881", dtype = "int16", shape = (1, 3, 3))#candidate|3881|(1, 3, 3)|var|int16
bop_3882 = relay.bitwise_xor(const_3880.astype('int16'), var_3881.astype('int16')) # shape=(1, 3, 3)
var_3885 = relay.var("var_3885", dtype = "int16", shape = (15, 6, 15))#candidate|3885|(15, 6, 15)|var|int16
bop_3886 = relay.bitwise_xor(const_3880.astype('int8'), var_3885.astype('int8')) # shape=(15, 6, 15)
func_2513_call = mod.get_global_var('func_2513')
func_2515_call = mutated_mod.get_global_var('func_2515')
var_3904 = relay.var("var_3904", dtype = "float64", shape = (10, 5))#candidate|3904|(10, 5)|var|float64
call_3903 = func_2513_call(relay.reshape(var_3904.astype('float64'), [2, 5, 5]))
call_3905 = func_2513_call(relay.reshape(var_3904.astype('float64'), [2, 5, 5]))
uop_3906 = relay.cosh(var_3885.astype('float64')) # shape=(15, 6, 15)
output = relay.Tuple([bop_3882,bop_3886,call_3903,var_3904,uop_3906,])
output2 = relay.Tuple([bop_3882,bop_3886,call_3905,var_3904,uop_3906,])
func_3910 = relay.Function([var_3881,var_3885,var_3904,], output)
mod['func_3910'] = func_3910
mod = relay.transform.InferType()(mod)
var_3911 = relay.var("var_3911", dtype = "int16", shape = (1, 3, 3))#candidate|3911|(1, 3, 3)|var|int16
var_3912 = relay.var("var_3912", dtype = "int16", shape = (15, 6, 15))#candidate|3912|(15, 6, 15)|var|int16
var_3913 = relay.var("var_3913", dtype = "float64", shape = (10, 5))#candidate|3913|(10, 5)|var|float64
output = func_3910(var_3911,var_3912,var_3913,)
func_3914 = relay.Function([var_3911,var_3912,var_3913,], output)
mutated_mod['func_3914'] = func_3914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_3924 = relay.TupleGetItem(func_541_call(), 4)
call_3925 = relay.TupleGetItem(func_542_call(), 4)
var_3944 = relay.var("var_3944", dtype = "int16", shape = (165,))#candidate|3944|(165,)|var|int16
bop_3945 = relay.mod(call_3924.astype('float64'), relay.reshape(var_3944.astype('float64'), relay.shape_of(call_3924))) # shape=(165,)
bop_3948 = relay.mod(call_3925.astype('float64'), relay.reshape(var_3944.astype('float64'), relay.shape_of(call_3925))) # shape=(165,)
func_938_call = mod.get_global_var('func_938')
func_940_call = mutated_mod.get_global_var('func_940')
const_3951 = relay.const([2.912510,-3.866076,2.940391,-8.653670,-3.827871,-2.736042,9.475886,-0.524246,-2.924995,-4.974444,3.073907,4.621009,-9.297951,-1.418400,4.583227,-7.545943,-3.930017,1.666727,0.818455,8.790081,-3.839090,-6.928593,-7.694226,5.879310,5.924330,5.859577,-3.263650,1.793907,-2.720927,-9.260460,2.542726,-6.227254,2.269188,4.711535,-6.444095,-5.441839,-1.746648,-5.554311,-9.802998,1.789895,5.329644,-4.500499,5.992001,-4.158632,9.215418,3.683487,-7.016898,-5.810754,2.913847,-1.472818,-1.680257,0.655053,9.999908,4.607827,9.666827,9.250592,4.228952,-9.038021,7.349604,3.227818,3.462025,9.942575,-3.454370,4.567585,1.668826,0.035217,0.698671,-9.991301,-2.428512,-0.923045,4.689672,-6.046763,8.520256,1.075843,-2.317186,7.801366,-5.068174,3.004194,-8.732027,-8.056821,-1.174701,-6.681041,-7.211322,-8.703725,-3.152284,-7.626936,-5.786905,3.277123,8.440761,9.713592,1.314494,4.818772,1.148552,-6.851409,-3.438971,-4.929910,0.449429,-4.482052,0.517474,-0.354020,0.456161,2.072256,-3.758640,1.926896,-5.562191,1.402587,5.494989,8.483266,4.823922,-0.160213,-5.427716,-9.030809,1.363345,-0.630983,1.678182,1.351692,8.768759,-0.439264,4.189442,-9.526185,-8.482411,7.161051,-9.338249,6.127369,-7.007584,2.075739,-5.811952,-3.876563,-8.258336,-1.444211,-1.499738,-3.872462,8.205376,7.009589,-8.810198,-9.250181,9.819020,-6.405999,-3.255908,8.290264,-3.553840,5.988673,-6.737167,-9.646341,-3.022040,-5.950442,-2.313402,8.114096,1.549181,-7.085733,-0.951572,9.524263,-6.542996,5.731062,0.676952,-9.352717,-2.021372,-2.307074,4.907292,3.476776,4.140382,-0.226234,6.428706,8.265168,-6.795502,-2.804313,-5.972556,-8.556644,-9.379356,2.785738,-4.041310,3.397211,-1.440071,1.896399,-3.305779,4.232113,-1.938995,-1.548899,7.320226,2.237413,4.062547,-9.957320,2.087458,3.421345,2.711504,5.345342,-9.673805,-9.242926,-0.332213,-1.972643,-6.584727,-3.843703,-1.259572,-8.881428,9.613470,6.096370,-2.733915,-9.085340,1.793506,1.263295,3.570811,-2.191866,9.461255,-3.838656,9.703479,-3.139100,-5.626559,-0.956247,1.157977,7.071039,-6.410215,-1.939337,-0.081947,-4.514907,-4.128143,-9.993692,-5.719491,8.601761,8.914253,0.453382,-3.507226,7.878831,6.358927,8.083980,-6.124308,9.213868,-7.002167,8.952060,-4.361281,-5.251261,4.158858,-7.545709,3.030186,8.051784,7.305173,8.550768,2.179015,0.888770,4.569817,3.624154,7.021663,-9.646508,-4.512611,-3.837643,-2.743156,9.595306,-8.102449,0.723972,3.196093,-5.602053,-7.538810,2.750370,-5.730640,-7.042570,7.083735,-2.184275,-4.548360,-8.241537,-5.175348,7.547340,8.891331,9.163053,0.659723,-9.573097,1.458082,6.296484,-8.988870,2.502683,0.598538,-5.160342,-5.600632,4.749783,-9.374789,8.900649,1.056670,4.709970,-7.923465,-0.194670,7.140024,-3.680689,9.099103,-7.764749,-6.531786,1.923258,2.618251,3.580301,-6.928002,-6.706329,-7.364521,6.042699,4.283399,3.086580,8.255949,4.189625,-1.517541,-1.764881,4.743948,0.469659,-5.044858,-8.932938,2.552999,4.986052,-7.823672,-6.470527,-8.199603,-9.816861,-3.114820,3.958890,0.134068,-1.015467,-4.421305,-1.874555,-6.474562,-4.217873,-5.233298,-8.000992,-7.131040,9.513999,-6.459810,0.739521,8.199313,-9.493878,2.384376,-8.817351,-5.656861,-4.575116,6.984077,-9.082120,6.662589,-8.853442,6.304096,4.858459,1.123844,8.466143,-4.987079,-5.875233,-1.411059,0.187605,-3.601099,8.134289,-5.952062,6.029106,-6.563144,1.327169,-1.142945,1.586689,3.361043,9.058541,9.927500,-7.290367,-4.993698,6.054380,0.290568,-1.564958,-9.939238,-2.590096,-0.744076,-7.834451,8.003281,-9.690768,-0.801596,-7.112399,-8.913208,-6.320266,-0.100591,3.535652,7.665524,1.271879,3.178512,-6.097099,4.077318,-2.776282,-5.495144,-8.521677,0.878004,-9.935545,-8.114501,6.170296,-4.667851,-6.915630,-9.522121,9.639925,9.605600,-2.758345,7.524292,-8.203614,7.163397,-5.100536,-6.569809,8.373141,5.964362,4.648240,-9.391470,-3.404376,-1.846363,9.663612,-2.939089,-3.704469,-6.217573,-6.990645,1.301329,-1.488221,7.995169,-7.123912,-8.192823,2.915934,6.158974,9.905467,9.558278,1.630051,6.292121,-5.824016,8.020270,5.043469,6.264601,2.190552,-7.039767,8.335500,-4.171212,5.396249,-3.444753,-1.982843,3.359314,4.055517,3.566391,-1.972934,-4.881930,-4.483974,6.204115,1.394256,3.014369,4.649634,-5.401292,-0.659738,4.144567,9.591460,-2.254634,6.105380,-6.625799,7.801207,3.331334,-8.384309,-6.330419,-8.755482,-6.768614,3.538685,-1.765553,6.520602,2.605379,-4.899145,-9.659507,-0.937258,0.718245,-1.012446,0.527563,-2.582943,-7.221027,-5.486269,6.928058,-9.631360,-0.488313,-8.793764,0.091014,9.098743,3.384383,4.489099,-7.033460,-8.801413,8.524337,3.728649,-8.376686,-4.320612,-6.717403,-4.585152,4.013742,0.909511,-9.849930,-5.668504,7.368826,-9.311766,3.928480,-1.791467,-1.323185,-8.718500,-5.730055,-8.485455,3.470752,6.863141,4.395536,6.193952,-4.957653,-6.712648,-3.081766,-5.844980,-4.802821,-4.867688,-8.534421,8.322861,-5.660233,0.923721,7.448730,6.420461,-3.907086,-4.423730,-4.444853,-5.547920,-2.699020,5.798167,1.626211,6.729370,9.161878,-7.346677,-4.183699,-5.852393,7.887128,0.877717,0.278320,0.850132,7.187880,4.179586,3.775604,4.180945,-9.991807,0.936691,-9.388967,8.343318,-6.369132,-0.141908,-2.427924,3.778720,-6.207215,-7.391760,-6.589741,9.112087,-9.566323,7.361995,-6.666619,1.485097,-7.624708,-8.442754,6.616992,-1.530677,9.912291,6.268494,8.410771,8.581269,1.258376,9.920043,8.450170,-3.123034,7.840274,-4.032393,-0.447828,-2.817472,-2.707029,9.170192,-1.930021,1.653681,-4.947090,5.426637,-5.879834,7.696931,1.353511,8.760924,8.327842,-6.197642,1.084660,-2.328625,-4.910728,-8.086255,-8.705021,1.758081,2.600490,-9.153897,1.116395,2.053244,4.307567,8.186296,8.826822,6.325847,-9.554998,7.180749,-0.056886,0.213500,-3.120157,8.353400,-4.286445,-6.856912,-7.346115,7.866200,-8.810210,4.878389,-5.996617,-5.061346,5.200319,-3.707578,4.919353,1.586165,-7.532390,4.620315,6.094383,4.613315,2.287736,2.769587,-2.523420,8.719416,-1.047683,-0.819878,2.203783,-6.605876,6.114981,6.470410,5.335990,-0.741585,5.509208,-7.975958,6.430526,-5.773982,5.288680,-1.312422,1.944488,2.331749,-0.254678,-3.921173,-8.049988,-1.841044,3.162442,0.630101,-6.605523,-6.533801,9.097610,-4.975017,-2.893290,5.865927,5.502272,-1.659858,9.681894,-5.879899,0.247304,9.429810,4.353281,8.835921,2.543941,3.277479,2.016601,-0.891248,7.562780,7.073472,5.903091,9.727033,-0.103812,1.711660,1.049052,3.155407,-6.980814,8.195471,-9.553631,7.696705,4.974111,1.173564,-8.886117,1.694327,9.108342,-6.185058,2.024389,9.484966,1.086783,3.381375,-9.158478,1.316245,7.521525,-0.272675,-9.219289,-3.744349,2.654069,-2.429238,7.947101,3.689567,-9.189881,3.894294,6.062343,9.049569,-9.348642,-7.559299,2.463596,4.543043,-1.450645,-0.792050,9.981870,-5.562129,-3.531344,1.115806,-3.988271,-1.801589,-8.875017,-6.221254,-6.504044,-1.837028,-2.770438,2.713776,-0.969466,-3.798405,4.615981,8.063039,8.684547,7.675895,-9.335371,5.858414,2.691614,3.830872,-7.081231,2.059652,8.982824,0.086985,-6.299556,5.725380,2.250205,3.999416,-6.773250,-8.910824,-7.118632,-4.042059,-9.626160,1.834142,7.761180,1.663641,-4.409037,2.410941,-7.562621,4.162797,9.476807,7.994803,5.971761,1.207679,-8.183872,9.332617,5.274639,5.051253,-0.711534,8.018171,-4.227788,8.815480,-0.826572,-2.444558,9.575644,7.835543,5.369136,5.093716,-6.064739,-8.563030,-3.493702,6.985368,7.376913,9.149061,-0.324773,-1.500952,3.773433,1.603923,-4.953849,-9.394291,-4.623161,-3.817542,4.522992,-1.761315,3.067300,-6.098606,-9.719019,3.741318,-0.807628,4.571582,-6.326974,5.307239,7.077809,0.081759,1.284649,5.564201,6.821151,2.640985,-9.247369,-8.035304,-9.054023,7.765585,3.571170,3.226248,-4.915361,-8.372912,-5.860980,-3.727495,-3.649755,0.515675,-5.365305,5.835480,-9.166825,-8.492035,-0.706871,-4.439419,2.406563,-1.371127,6.408152,-3.653012,-0.909242,-5.925286,2.128627,9.671391,-5.773633,0.374836,7.967409,-3.385222,4.223821,-7.216733,-3.146778,-8.724817,4.747117,-0.324145,-2.983062,-4.920786,2.083825,3.526400,1.085236,-7.459073,2.624995,-7.253789,0.562639,2.477386,3.162963,-3.706146,-9.358074,3.057323,3.848348,-4.044705,8.885794,9.468032,4.277644,4.450245,4.680097,-8.420661,9.155069,4.989392,-9.366140,1.463734,6.182375,5.422695,-7.808850,5.374885,-7.957951,-0.817157,-9.241924,-3.572159,-8.615554,-4.070391,3.073781,4.974197,-0.118699,3.125648,5.082092,-1.189116,9.428798,-3.587687,4.713046,3.258691,-9.273794,0.803301,2.583488,-6.525313,1.975246,9.876194,-9.799370,6.509947,-8.297027,9.231149,2.027791,-3.522770,5.548551,-1.877980,-4.601556,-1.518323,7.252176,2.094718,2.436334,5.414924,-7.956325,0.135221,4.479474,7.077206,-0.559155,4.401367,8.905509,-1.107438,-4.983026,5.520053,-1.543883,0.759947,9.380678,9.836388,6.415680,8.304894,1.787195,-4.191513,2.940502,-7.613828,-2.916791,1.936190,3.962958,-2.340895,-1.585840,-4.781908,3.380484,4.860424,-7.028642,2.763736,0.424119,-8.803798,6.178381,8.207005,-8.493208,-9.381716,1.384376,-8.648261,8.411381,-0.161167,-9.172340,2.827852,0.620448,-7.983055,2.905409,5.832137,-5.108799,8.443987,-3.338844,-4.886628,8.463900,1.900592,-6.719674,7.632874,-4.224090,-0.112562,5.025513,-8.085999,-9.615125,-6.442482,-3.694375,-6.854676,7.493962,-6.561964,-3.728618,2.253001,-2.467119,-7.832516,-6.676281,-1.750422,8.191974,-5.449141,-4.283947,7.783201,6.572895,-5.854747,1.490493,6.688727,2.552596,-6.208184,-9.786442,4.187879,-9.306452,-5.471117,2.360420,1.124683,1.186796,7.985456,-2.543317,-9.943833,4.181822,9.923110,7.889018,3.344765,2.329246,-2.780634,2.872294,-8.727413,0.003990,7.067054,1.826920,4.387848,-1.696056,6.715561,-7.929829,-2.057501,-3.528908,-7.574994,-2.692553,-0.114917,-9.834445,-1.819033,-9.253271,6.559313,2.013682,0.607795,-1.537762,6.392006,0.060209,6.398392,-8.642652,2.895518,-9.145212,-8.907399,-7.508041,-6.248855,6.695800,-1.581459,9.761396,5.775487,-6.325610,9.117036,5.608886,8.951461,1.977688,-3.110312,7.508510,5.612548,-0.738868,-7.797838,-0.069853,4.129810,5.966859,-2.704220,9.245007,7.018903,-6.471316,-3.117053,3.365263,-8.950536,5.584034,-7.874673,5.680473,-1.543618,3.309981,-3.391116,3.648565,8.592649,7.559292,9.304614,4.284416,0.177165,3.539976,-7.228869,7.135983,-9.750280,3.671069,3.045835,-9.704901,-8.738670,2.498310,4.547410,-4.702737,4.330320,-7.739767,4.425730,-4.445438,3.563752,-6.583594,-7.536643,6.231151,-1.222148,-9.834613,0.085362,1.230958,-3.866487,-7.277288,1.710109,5.229178,-3.309305,4.593060,6.911687,-9.042516,-1.479738,-4.829013,8.541350,3.407976,6.273400,7.299568,-0.240434,-8.875265,4.302442,-4.813839,-5.438788,-5.525022,-9.747617,-7.086458,4.057907,-1.999489,8.964674,-2.985062,-1.057182,6.169468,9.854556,-5.980439,4.864932,1.023077,7.862020,-1.372753,4.505726,5.238611,-6.701657,8.282959,-2.017987,1.354801,5.972160,-7.462125,3.700122,1.437366,3.497464,-6.049683,-0.585851,7.428417,-7.004214,6.379109,-8.300003,5.740794,-2.086481,-7.763463,-4.336162,1.780623,-8.605030,-9.862576,6.012162,-6.157018,8.300265,1.578456,-8.900008,-2.263430,-9.866878,-1.537619,-2.473599,-5.285948,3.825832,9.109586,-9.884759,0.612491,1.491968,2.625722,5.491507,7.844344,-1.848276,-4.495853,0.535221,4.041912,7.309187,7.713816,5.428525,-0.009119,-4.854283,5.142878,-7.997350,2.870787,-6.103003,-4.121341,2.397559,-9.794821,8.445027,-2.472365,2.731485,-3.579024,-1.121686,-2.347426,2.577830,-8.577254,0.817856,0.245494,-2.378691,3.256280,3.473943,-0.608654,0.977394,-9.782570,2.331200,2.562392,4.211135,0.672115,3.620391,3.050545,0.037033,6.311654,9.742989,-7.563992,2.827800,-3.645812,-6.541102,0.466051,-8.933253,-0.178016,7.896255,-2.112071,6.790353,-0.420761,-4.425866,-6.720537,5.503651,-7.874077,-2.604926,-1.016934,-8.165628,-6.313600,7.319605,-0.814591,4.149148,5.074186,-9.373871,6.646023,-0.060505,6.542310,-8.325776,-1.452311,2.414812,-2.603273,4.692240,0.176422,-1.471597,-1.964787,-1.651216,7.411398,5.670246,-2.968598,-2.638838,-7.359670,5.470360,7.786615,0.897339,8.127667,-9.164964,-0.725810,-7.802526,8.120277,2.508932,-6.820327,-2.568822,3.245356,-2.121114,-4.102513,-9.243008,8.622024,-0.493958,4.406514,-8.137095,-6.474782,-5.740494,3.423927,-4.478326,8.659316,-5.036365,5.095253,7.721139,7.999643,-1.774200,4.258070,-4.421362,-5.086958,8.478869,-1.859043,-2.802786,9.211254,7.006583,4.982717,7.112926,2.390234,-3.550182,8.818913,1.363617,-0.393991,-6.247423,-2.240048,-2.716265,5.594252,-5.478086,-8.613642,-2.692510,-8.324514,-3.951570,1.033225,-2.261559,6.670808,-9.891724,1.154247,9.721140,0.272079,2.666569,-2.499902,5.638201,1.581625,0.819614,-8.125031,9.918092,8.361758,2.956883,-5.880928,4.218153,-7.261320,-1.880557,-9.636512,4.682605,4.706983,7.797784,9.500495,4.831591,2.857257,-5.334896,-2.420814,-0.879411,8.236646,-4.429329,6.147980,9.129242,7.133430,1.307439,-9.985156,-4.407560,6.092343,1.312909,-4.998948,-8.277917,-5.486610,5.802479,-9.926526,-0.500638,5.339826,1.498081,7.603318,5.344830,-1.992877,-6.799077,1.688529,-8.643516,-2.602707,9.089190,-5.789428,-6.843711,-2.501997,4.150675,9.523632,-5.965024,9.212788,-6.421251,1.348336,8.942583,-0.668722,-2.647991,-5.023109,7.706391,-1.969406,8.245864,-9.705563,9.902404,-6.944309,9.131435,6.254752,-5.064926,-0.524763,2.375651,-1.003131,0.001556,-3.933968,4.932573,4.259549,4.035071,2.594543,-5.433649,6.203040,5.323487,2.729035,7.061056,-6.759840,9.957542,-5.562416,-5.795676,1.357792,-8.677075,3.082180,6.619855,-2.580949,6.295065,3.916297,2.083573,6.085165,-6.323483,4.011365,0.655593,-8.225017,-7.525542,3.162463,0.491568,1.434034,-0.753252,0.582892,0.445405,9.955360,-8.006792,-6.382314,4.442185,-5.683122,-3.085512,8.160080,1.074141,-4.600486,1.873137,2.225045,3.403410,-0.813143,3.955472,8.780266,7.954408,4.596449,8.062398,6.675835,-5.658559,0.076849,7.360436,-9.587714,-3.059943,8.163551,7.736430,-0.018100,2.099959,-2.244912,8.766204,4.267833,-5.614872,-8.614721,-2.335100,-3.447861,4.242224,-3.849181,2.455475,4.338107,7.408289,9.577285,6.659230,4.575789,-8.705052,-6.759493,7.151942,-1.165523,-4.879492,-5.589030,-5.057588,0.507184,-7.767735,-4.083614,7.650371,2.605509,-8.244426,9.309323,-8.998154,-1.530451,-1.638327,-1.282644,-4.566535,-5.465769,9.246113,-8.245584,0.638512,5.704080,1.266739,9.688355,-1.235238,6.619604,8.962588,-5.939996,-0.734578,-6.236351,1.583188,-3.740523,1.966409,5.823454,2.774759,-3.188418,9.772294,-1.371632,-3.352087,1.771482,-8.037270,4.851708,7.619089,-2.617285,4.994416,0.555408,7.176998,-0.170115,-3.240592,-1.305899,2.297383,-7.342837,-2.944170,1.749197,2.627932,0.987900,-6.668212,4.889391,2.705115,8.592573,3.645788,1.358640,-2.764839,8.352893,1.431463,7.446514,0.794281,-6.949334,-3.210949,-0.562958,-8.314660,-6.430767,-3.419441,3.226553,2.458353,-1.660123,0.531557,8.426394,-6.749446,-7.008028,-0.603417,-1.858682,7.912062,-9.042881,7.289424,3.260009,-3.758820,-7.487016,-0.587562,-6.317576,-7.850048,-3.125665,1.849271,8.715333,-8.857188,8.194059,3.075601,-6.068421,-5.144110,2.304369,1.337516,-4.515612,-2.716922,6.340048,-3.275160,-1.704679,-8.748514,-1.889585,-7.963515,0.586973,6.488615,-9.266992,3.040042,9.867224,3.902570,0.201038,-0.225135,-9.491753,-2.218827,3.159465,-4.104556,3.685071,-0.908174,-3.028733,0.945525,1.906700,-3.069033,-1.351579,9.366531,-6.226043,-9.886164,5.269766,8.212818,3.329147,1.471841,-4.929902,-0.215521,1.784189,3.454462,9.430683,8.162978,0.264883,-6.106371,9.243939,6.687480,-4.771840,2.746620,-0.829034,-0.268008,-7.673786,-0.454780,2.127607,-2.837911,2.626268,-1.596585,7.333696,-9.193656,7.437929,-2.743891,-6.084561,-5.553373,1.943734,-5.238238,-8.732270,0.454088,3.064885,2.189235,-9.449661,1.581552,1.966125,-1.860971,5.855706,3.963497,-5.339054,-4.724748,-9.385363,5.567125,-2.820413,4.342551,-8.928557,-6.061192,6.157582,-6.293667,9.616009,3.405107,0.006308,4.415738,-6.343264,-2.929279,-1.399822,4.165900,2.529349,-2.380106,8.473165,3.950403,-0.623772,6.517185,5.141627,2.710071,0.738684,-9.552341,6.379213,1.239754,-5.085490,-0.583279,-6.713752,4.653083,-0.306915,-1.036728,-0.499124,-8.186659,4.255575,-0.994830,8.426617,4.355134,-9.653936,-7.454008,-6.417673,-9.092106,7.449116,0.575053,-1.868074,7.983585,6.071498,-5.145721,2.640518,-4.841480,-1.812701,-5.836256,6.620579,-0.748759,9.591454,9.201872,0.778034,-7.597709,-2.140588,-4.863612,3.255258,6.704781,2.617970,-2.929673,-5.112073,3.069111,5.023068,1.551190,-6.731801,-9.913899,-6.499779,4.512768,3.184252,-1.475487,5.089094,4.631479,-6.152067,7.236443,-7.454383,2.583121,5.121688,-9.181790,-7.671139,4.836693,6.383148,-8.385566,9.273397,8.346842,9.310511,-0.188738,8.373075,8.221551,-6.175751,6.930816,-9.214591,-9.370587,-5.815141,-9.850280,-2.004367,9.502717,-7.391452,8.507021,7.095732,-4.892647,-9.772197,1.199852,-9.551481,1.677503,-9.442425,-2.212662,9.200165,-8.724647,7.003426,-3.954504,-5.569835,4.363702,6.370498,-0.096497,-1.896521,-8.089042,3.099992,-4.709011,-7.451886,-3.883957,-1.484351,-2.969438,3.680768,9.782913,4.027988,-4.134406,1.790513,-5.950708,-8.162736,2.316452,-0.354451,8.116938,-8.220829,6.797228,-7.183311,4.224076,-3.663806,-3.179393,-0.148059,-0.023898,-6.524982,6.479908,6.071694,-9.269829,-9.075565,-8.318223,7.262576,-0.588202,5.188191,6.218022,3.418074,-7.819902,-7.634530,-9.807967,2.898458,-5.664929,7.895822,5.206717,-3.607791,1.900573,-7.110175,5.787814,1.703832,4.876343,3.860269,-2.809722,7.229691,2.058652,-4.087207,-3.789058,-6.452986,9.397828,-0.015723,-6.493308,-1.625465,9.970897,2.717270,7.839775,-7.931388,5.045571,9.113030,-5.888899,7.341388,-4.048270,5.080109,4.933576,9.188325,-5.699451,0.542137,-9.234408,-8.078697,-2.623157,-1.694850,-4.079921,-8.276548,9.665608,-4.726788,-6.667702,1.834062,9.605213,6.775300,-3.091962,1.260414,-9.150406,-9.561676,-6.827108,-6.329005,-7.433933,-9.230103,0.347251,2.066830,-5.646504,0.449839,2.267522,8.429706,0.510421,4.238369,-0.505881,-4.672399,9.188920,7.714045,9.075809,9.439892,6.631868,8.693271,-5.955994,8.920510,-7.860494,-3.458324,5.363642,-6.959528,-7.514727,-0.207605,-7.109077,-3.117366,0.219228,4.593683,2.293554,0.195719,6.911578,-7.118683,3.449007,-2.054292,-2.573127,1.834421,3.511130,-2.541518,9.419600,-5.022251,-0.850889,3.149980,-8.375211,-6.319407,5.786441,-5.721810,-2.234809,6.424901,-0.539971,6.388077,-9.810991,-0.044927,-1.578773,2.826237,-4.682975,5.748618,-3.167279,-4.115537,-4.673098,8.875867,-2.084769,-0.989640,-6.148621,-5.678701,1.470453,3.156097,-5.379424,4.195640,-3.297972,-0.415027,-9.084767,6.619055,6.776638,-9.129922,4.512916,2.251391,2.227845,-0.941879,7.310289,7.352590,9.232302,-4.149819,-9.053701,-4.646508,6.324242,5.065905,4.322326,-1.911214,1.760188,-0.068138,-3.436232,-8.206219,8.031676], dtype = "float32")#candidate|3951|(1920,)|const|float32
call_3950 = relay.TupleGetItem(func_938_call(relay.reshape(const_3951.astype('float32'), [1920,])), 3)
call_3952 = relay.TupleGetItem(func_940_call(relay.reshape(const_3951.astype('float32'), [1920,])), 3)
func_2805_call = mod.get_global_var('func_2805')
func_2807_call = mutated_mod.get_global_var('func_2807')
call_3958 = func_2805_call()
call_3959 = func_2805_call()
bop_3964 = relay.not_equal(call_3924.astype('bool'), relay.reshape(bop_3945.astype('bool'), relay.shape_of(call_3924))) # shape=(165,)
bop_3967 = relay.not_equal(call_3925.astype('bool'), relay.reshape(bop_3948.astype('bool'), relay.shape_of(call_3925))) # shape=(165,)
var_3968 = relay.var("var_3968", dtype = "bool", shape = (165,))#candidate|3968|(165,)|var|bool
bop_3969 = relay.greater(bop_3964.astype('bool'), relay.reshape(var_3968.astype('bool'), relay.shape_of(bop_3964))) # shape=(165,)
bop_3972 = relay.greater(bop_3967.astype('bool'), relay.reshape(var_3968.astype('bool'), relay.shape_of(bop_3967))) # shape=(165,)
uop_3975 = relay.sigmoid(var_3944.astype('float64')) # shape=(165,)
func_2554_call = mod.get_global_var('func_2554')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_3984 = relay.TupleGetItem(func_2554_call(), 0)
call_3985 = relay.TupleGetItem(func_2555_call(), 0)
func_3726_call = mod.get_global_var('func_3726')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_3986 = func_3726_call(relay.reshape(call_3958.astype('bool'), [2, 5, 5]))
call_3987 = func_3726_call(relay.reshape(call_3958.astype('bool'), [2, 5, 5]))
func_914_call = mod.get_global_var('func_914')
func_918_call = mutated_mod.get_global_var('func_918')
var_4001 = relay.var("var_4001", dtype = "float64", shape = ())#candidate|4001|()|var|float64
var_4002 = relay.var("var_4002", dtype = "float64", shape = (220,))#candidate|4002|(220,)|var|float64
call_4000 = relay.TupleGetItem(func_914_call(relay.reshape(var_4001.astype('float64'), []), relay.reshape(var_4002.astype('float64'), [4, 5, 11]), ), 1)
call_4003 = relay.TupleGetItem(func_918_call(relay.reshape(var_4001.astype('float64'), []), relay.reshape(var_4002.astype('float64'), [4, 5, 11]), ), 1)
output = relay.Tuple([call_3950,const_3951,call_3958,bop_3969,uop_3975,call_3984,call_3986,call_4000,var_4001,var_4002,])
output2 = relay.Tuple([call_3952,const_3951,call_3959,bop_3972,uop_3975,call_3985,call_3987,call_4003,var_4001,var_4002,])
func_4006 = relay.Function([var_3944,var_3968,var_4001,var_4002,], output)
mod['func_4006'] = func_4006
mod = relay.transform.InferType()(mod)
mutated_mod['func_4006'] = func_4006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4006_call = mutated_mod.get_global_var('func_4006')
var_4008 = relay.var("var_4008", dtype = "int16", shape = (165,))#candidate|4008|(165,)|var|int16
var_4009 = relay.var("var_4009", dtype = "bool", shape = (165,))#candidate|4009|(165,)|var|bool
var_4010 = relay.var("var_4010", dtype = "float64", shape = ())#candidate|4010|()|var|float64
var_4011 = relay.var("var_4011", dtype = "float64", shape = (220,))#candidate|4011|(220,)|var|float64
call_4007 = func_4006_call(var_4008,var_4009,var_4010,var_4011,)
output = call_4007
func_4012 = relay.Function([var_4008,var_4009,var_4010,var_4011,], output)
mutated_mod['func_4012'] = func_4012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_4016 = relay.TupleGetItem(func_1370_call(), 1)
call_4017 = relay.TupleGetItem(func_1372_call(), 1)
func_2156_call = mod.get_global_var('func_2156')
func_2159_call = mutated_mod.get_global_var('func_2159')
call_4026 = relay.TupleGetItem(func_2156_call(relay.reshape(call_4016.astype('float64'), [2, 5, 5])), 3)
call_4027 = relay.TupleGetItem(func_2159_call(relay.reshape(call_4016.astype('float64'), [2, 5, 5])), 3)
output = relay.Tuple([call_4016,call_4026,])
output2 = relay.Tuple([call_4017,call_4027,])
func_4029 = relay.Function([], output)
mod['func_4029'] = func_4029
mod = relay.transform.InferType()(mod)
output = func_4029()
func_4030 = relay.Function([], output)
mutated_mod['func_4030'] = func_4030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_4105 = func_2969_call()
call_4106 = func_2969_call()
func_3068_call = mod.get_global_var('func_3068')
func_3072_call = mutated_mod.get_global_var('func_3072')
const_4114 = relay.const([1.742124,2.922602,6.064967,5.664191,-7.414265,-3.044290,-2.630758,-6.421527,-4.869401,8.946666,-9.326771,-0.871597,4.854640,9.255552,-6.595832,8.991195,-6.973609,-3.812120,-9.476149,8.555273,-6.756360,-3.304400,-1.739085,3.854488,9.619662,0.453967,4.867901,3.758489,7.030974,7.395550,-5.916282,8.061848,4.431607,5.210425,2.457742,5.939145,-5.425701,-4.508018,-1.029077,-4.336415,9.318003,6.552721,9.104761,4.776052,9.218061,-2.213377,9.352231,-3.748346,6.109969,6.919616,6.227423,-8.154545,-3.096188,-8.556875,-3.443736,8.024172,5.815768,-8.237023,7.253055,6.770494,4.055594,2.616550,8.151018,9.280684,4.354927,-5.670520,3.189785,-2.604973,1.815081,-6.460222,2.597027,2.984850,-9.968564,9.626142,2.419273,8.123854,-8.006255,-3.320819,-2.226625,-9.097990,-5.892313,-5.969292,-6.300886,5.582680,-2.813792,3.700505,1.519534,-9.888117,7.665804,-6.298833,-9.088789,4.911098,-1.134028,-5.742894,4.019085,-1.475213,3.239995,-1.207593,4.373934,-6.140679,6.535887,-1.296410,-2.585186,8.992346,-3.237772,1.139173,2.865409,-0.700129,-8.715000,-8.680917,6.215087,8.822993,-2.379798,-4.551238,8.489175,9.217196,1.987888,-8.905509,-6.729971,0.047732,6.179910,0.158078,3.538618,-6.669072,-0.358763,0.035168,2.696354,7.928642,-9.157644,4.697844,-2.972740,3.110127,-2.741614,4.136142,9.832456,-4.097671,4.521462,8.367035,7.747410,-8.068408,-6.067767,1.288710,-8.574004,7.096020,1.386931,3.627032,5.324891,4.985387,-1.677431,-1.934291,9.025564,-5.900014,-6.792041,6.225326,4.075334,-0.068526,4.290399,7.002591,-6.717990,0.383061,0.865003,3.090157,5.430467,7.065841,7.463632,9.086927,-0.090895,-7.184428,3.224296,-8.863898,1.476631,-1.815256,-2.236837,6.453223,3.954850,-6.327698,4.221197,6.118646,-7.499161,-6.503647,3.974403,-9.655044,4.147417,-5.885486,-8.134434,7.302147,9.506862,0.277429,4.764993,-4.850035,6.390095,2.234172,-8.394289,9.832432,2.609720,9.607166,5.185028,-4.798457,-2.882668,5.419269,5.433028,-0.301004,-1.684305,3.877578,-9.595150,-9.304530,-0.034913,-9.369384,8.799207,-6.080039,2.136108,3.643000,8.113781,3.962692,-3.577866,0.881004,6.673112,5.031075,0.467115,2.123177,-3.889253,2.099250,-0.158383,-5.435278,7.374690,-4.411279,-7.453374,1.695129,-0.010725,7.288421,7.052951,-1.027050,-7.930621,-9.877634,-8.948602,-0.670420,-8.246420,-3.333486,5.751045,-1.387695,0.806614,-7.138229,-0.402491,0.102712,-3.487689,0.225888,1.129456,3.732376,3.303645,0.732965,9.038556,9.903127,2.539130,-0.167795,-3.232497,9.162557,-3.502759,9.819806,8.800112,1.967168,6.347466,0.209834,-5.402723,-7.991084,1.586808,-6.560440,0.204323,-6.408001,8.558497,-0.012745,3.960906,1.442828,4.857971,-8.977435,0.969076,-8.053663,-8.677441,-4.077948,-7.396146,5.791815,-7.604317,4.321106,3.689944,9.007057,-2.273689,-7.452181,6.730521,9.985640,-1.769703,-7.994152,1.746048,-0.797452,-9.273235,4.732664,0.653793,-1.837133,-0.296487,-1.218345,7.972298,-0.427597,2.288466,0.011041,-5.158842,3.150868,-4.946117,-3.749940,-4.518029,-9.084719,4.137388,-5.003099,-3.542130,5.418777,-9.009084,-2.294183,4.728479,7.769167,3.289582,7.326693,-4.291668,-2.158941,-4.131554,-8.963424,0.133218,-0.081696,-0.283798,7.003758,6.130625,1.052115,-3.279750,-9.692528,-8.121813,-4.873105,-6.276936,0.661606,-6.464078,-6.734712,4.716253,-6.269693,6.639871,8.923971,2.161282,-7.896878,7.492185,-8.259155,6.162793,0.522024,-9.297559,1.943812,-9.953842,8.156891,-2.457425,1.167861,0.159630,-9.614130,-0.660767,-6.574548,-7.760714,1.268812,8.670264,-7.392066,-8.330493,-0.503677,5.590275,3.061112,1.020176,9.686109,-4.246983,8.889052,-1.246856,-4.867166,1.766165,-7.922419,5.314426,-4.869381,0.117205,8.215322,-3.109705,-6.808584,2.268942,5.056962,8.908767,-4.074747,-5.327623,6.999957,2.694187,4.295327,-5.274690,5.934723,0.942579,-0.663038,-3.474482,-1.272216,-5.126644,-4.283165,8.974234,-6.595169,-2.269561,-1.061470,-2.316055,5.950161,-4.374015,-9.448713,-4.906849,-9.989169,6.494130,-1.094043,0.348099,1.289502,-9.556388,3.144473,1.705954,-2.554086,7.642792,-7.680963,-0.721084,4.321088,8.521748,4.499664,9.987870,1.955135,5.019318,-1.457331,6.537557,-0.660477,-4.279937,9.263770,1.967749,5.533909,-2.420184,-2.178386,-3.436141,8.037404], dtype = "float32")#candidate|4114|(432,)|const|float32
const_4115 = relay.const([-5,1,-6,-1], dtype = "int8")#candidate|4115|(4,)|const|int8
const_4116 = relay.const([-8,-6,-8,-6,-10,7,10,-3,-8,4,-1,10,6,4,-2,7,-9,-2,-2,6,-5,3,1,-8,3,6,1,-5,-1,4,9,3,6,4,6,-3,3,6,10,-4,-6,-8,-8,3,1,1,9,-9,-1,-5,3,8,4,9,-8,8,5,10,-6,-3,2,-8,-9,-10,-7,7,-4,5,1,-3,-9,2,4,1,8,-8,7,-3,-2,5,7,1,-1,1,-2,-10,5,9,7,-1,2,-5,-7,3,1,-1,2,-2,-10,-6,7,-5,9,2,-4,10,4,6,4,-3,9,-5,-7,5,-2,-2,-6,-1,-3,-2,-8,4,6,3,1,-6,1,-3,-8,8,1,9,8,-4,-5,-7,-9,-2,3,6,3,-4,3,3,-8,-1,10,6,-2,-9,7,7,-9,10,6,7,9,-4,-1,-2,-5,-7,5,-2,-4,-1,7,6,8,-1,3,4,1,2,2,-2,1,3,-3,-10,-8,-7,-8,2,-8,-10,10,2,-1,-3,2,-3,5,6,3,-4,-8,3,-3,-4,7,-3,-10,-8,1,4,-9,6,-3,1,-2,-6,-7,8,5,10,-6,10,-7,-6,2,-4,9,6,-6,-9,-1,7,-3,7,-7,-9,-1,10,7,-8,8,-1,-6,8,-3,10,-1,3,2,-9,8,-3,-6,9,-8,6,3,-2,4,10,-8,-3,-7,-2,-8,-9,10,-7,6,-2,5,10,-5,6,4,-7,6,3,8,-4,6,-3,7,3,-8,-10,2,10,4,-9,1,3,5,3,-1,10,-10,4,-4,1,-5,-4,2,-6,-9,-7,10,10,-7,-9,-9,6,1,-5,10,-7,-8,1,5,8,-2,-6,6,8,-8,4,7,7,3,-4,-9,-7,2,-8,-5,8,-3,8,10,-5,-4,-8,-10,-8,6,-3,3,-3,-7,-9,-1,-10,3,4,-5,-4,9,-7,-6,1,6,-6,-3,3,1,-2,1,7,-1,9,-3,4,-6,10,-7,3,-4,-4,9,-8,-9,5,2,4,-4,-9,6,6,4,4,-6,7,-6,-6,8,5], dtype = "int8")#candidate|4116|(392,)|const|int8
call_4113 = relay.TupleGetItem(func_3068_call(relay.reshape(const_4114.astype('float32'), [216, 2]), relay.reshape(const_4115.astype('int8'), [4,]), relay.reshape(const_4116.astype('int8'), [392,]), ), 1)
call_4117 = relay.TupleGetItem(func_3072_call(relay.reshape(const_4114.astype('float32'), [216, 2]), relay.reshape(const_4115.astype('int8'), [4,]), relay.reshape(const_4116.astype('int8'), [392,]), ), 1)
output = relay.Tuple([call_4105,call_4113,const_4114,const_4115,const_4116,])
output2 = relay.Tuple([call_4106,call_4117,const_4114,const_4115,const_4116,])
func_4125 = relay.Function([], output)
mod['func_4125'] = func_4125
mod = relay.transform.InferType()(mod)
mutated_mod['func_4125'] = func_4125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4125_call = mutated_mod.get_global_var('func_4125')
call_4126 = func_4125_call()
output = call_4126
func_4127 = relay.Function([], output)
mutated_mod['func_4127'] = func_4127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_541_call = mod.get_global_var('func_541')
func_542_call = mutated_mod.get_global_var('func_542')
call_4152 = relay.TupleGetItem(func_541_call(), 1)
call_4153 = relay.TupleGetItem(func_542_call(), 1)
func_666_call = mod.get_global_var('func_666')
func_670_call = mutated_mod.get_global_var('func_670')
var_4160 = relay.var("var_4160", dtype = "float32", shape = (1920,))#candidate|4160|(1920,)|var|float32
var_4161 = relay.var("var_4161", dtype = "int16", shape = (165,))#candidate|4161|(165,)|var|int16
call_4159 = relay.TupleGetItem(func_666_call(relay.reshape(var_4160.astype('float32'), [10, 12, 16]), relay.reshape(var_4161.astype('int16'), [165,]), ), 2)
call_4162 = relay.TupleGetItem(func_670_call(relay.reshape(var_4160.astype('float32'), [10, 12, 16]), relay.reshape(var_4161.astype('int16'), [165,]), ), 2)
output = relay.Tuple([call_4152,call_4159,var_4160,var_4161,])
output2 = relay.Tuple([call_4153,call_4162,var_4160,var_4161,])
func_4163 = relay.Function([var_4160,var_4161,], output)
mod['func_4163'] = func_4163
mod = relay.transform.InferType()(mod)
mutated_mod['func_4163'] = func_4163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4163_call = mutated_mod.get_global_var('func_4163')
var_4165 = relay.var("var_4165", dtype = "float32", shape = (1920,))#candidate|4165|(1920,)|var|float32
var_4166 = relay.var("var_4166", dtype = "int16", shape = (165,))#candidate|4166|(165,)|var|int16
call_4164 = func_4163_call(var_4165,var_4166,)
output = call_4164
func_4167 = relay.Function([var_4165,var_4166,], output)
mutated_mod['func_4167'] = func_4167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2989_call = mod.get_global_var('func_2989')
func_2990_call = mutated_mod.get_global_var('func_2990')
call_4174 = func_2989_call()
call_4175 = func_2989_call()
output = relay.Tuple([call_4174,])
output2 = relay.Tuple([call_4175,])
func_4182 = relay.Function([], output)
mod['func_4182'] = func_4182
mod = relay.transform.InferType()(mod)
output = func_4182()
func_4183 = relay.Function([], output)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_4207 = func_1748_call()
call_4208 = func_1748_call()
func_938_call = mod.get_global_var('func_938')
func_940_call = mutated_mod.get_global_var('func_940')
const_4232 = relay.const([-8.935428,6.501170,-2.308757,-5.291342,-9.264820,-6.914631,3.798718,9.718978,-4.813144,-4.122570,-0.136215,8.396451,-2.319641,-7.038252,-2.265482,-0.109653,-8.201551,-2.651790,0.916381,-7.055536,-7.051531,-9.826268,-4.610554,7.619266,-8.485727,4.233513,-0.939473,4.274061,-3.138218,-4.665643,8.029147,-2.705126,6.034977,5.232035,0.097347,-0.180679,-6.264926,2.784640,-5.177697,5.232814,-3.705886,0.530282,4.349020,-3.114026,-7.444041,-3.104520,2.175697,-7.758305,9.239765,-4.038088,6.148896,-4.443505,2.341450,-4.109951,-9.938129,-1.528692,-5.213409,3.666842,-6.386524,-6.017890,3.979836,9.716477,5.848568,9.116150,6.212839,8.294851,-9.888237,-0.359197,3.766827,-9.733702,-8.408615,6.778628,-5.948527,-4.240145,-5.030121,-5.157830,0.373012,-8.878170,3.705348,2.529045,2.857651,0.787378,-2.428761,8.192303,9.048729,0.611667,-1.317015,-2.787434,-0.056440,-4.317444,3.819116,-4.781977,-0.986286,6.130451,-7.668924,-7.608261,4.489935,0.966485,4.317669,-4.387325,-1.953781,-4.011932,-2.428437,-8.665452,2.040065,9.292182,8.098802,6.573502,-1.938257,5.225474,0.422190,1.021094,7.409328,-9.952329,7.675617,8.240699,-4.652405,1.647392,1.941490,2.972796,-2.353407,0.879955,-7.509036,0.169139,-8.381046,7.702471,-5.828927,-2.652362,-5.001813,-1.388740,9.344433,9.450395,9.738311,-0.417339,-5.958180,1.341221,-7.303376,-4.800858,2.207298,-5.062412,-3.127342,5.871899,-5.384884,5.716652,-1.279858,-4.039958,1.930913,9.668270,-6.977610,4.022577,-8.758248,7.589953,-9.075014,9.817550,0.557938,3.244360,-8.463885,-0.662770,-8.031534,5.635951,8.610689,8.434253,9.004775,7.531838,-8.358970,1.791762,0.251838,-0.611536,-2.998666,3.271266,4.499735,-1.110455,0.943218,-1.883335,-2.323886,-7.920221,6.940594,-3.856555,2.786408,6.818844,9.345756,-6.117703,7.785913,-6.828419,-0.015507,-5.971300,-1.419427,5.715311,0.235589,0.917829,6.273334,-0.275097,6.343395,-3.783218,-8.219712,1.315470,-4.071566,8.878382,-6.402428,0.394325,2.567877,-8.087790,-2.073595,-4.712470,2.861206,4.045011,9.609166,7.056457,3.514878,2.121533,3.190891,3.130947,-7.506113,-5.744956,-7.636304,-5.554852,4.872920,9.632631,-6.957210,3.825677,3.671842,1.320612,-1.892278,-9.628617,-9.000257,-1.616182,-7.638527,9.477516,-8.877787,7.957914,3.759586,-0.129132,-8.348102,8.920380,6.817455,-8.684876,6.881914,-8.537738,-2.019697,3.158444,-7.622536,6.282372,8.033187,-4.853534,-2.504833,-1.391758,1.848005,-5.913192,-0.559623,-2.689711,-5.225915,9.339001,-3.110657,-5.053694,-7.867623,3.996697,8.192978,4.012537,1.388238,-1.812596,8.666956,-7.630924,3.197419,-1.869129,-1.286641,-9.521657,0.082435,-0.910557,9.362280,-4.745226,1.673335,-8.326644,-7.502106,9.294905,0.927776,5.394549,2.726815,9.472374,-3.316713,-6.167043,3.849627,-3.384929,-2.124869,-6.905359,9.706028,5.643605,5.949128,0.379082,6.975514,7.967000,-0.424756,6.942952,-7.790456,-7.889385,-3.513735,4.289580,6.103783,-1.213779,3.730108,1.001159,-3.654383,4.898728,4.566865,4.844493,4.548034,6.546174,-0.890895,5.430530,-8.482487,3.902793,4.893690,-7.029919,-6.149044,-0.812846,3.253530,-1.453372,2.399330,7.348113,-7.703633,6.959101,-0.163192,7.535084,-3.370808,7.189527,5.508887,1.430323,-3.295093,2.540520,7.321378,-0.906567,-7.813831,-5.547657,-4.574179,-9.837696,-6.664999,-5.524324,-2.813332,5.307089,8.365085,6.915181,-2.087017,4.503494,-1.076681,0.063480,-7.332481,3.453193,7.835091,-9.634203,2.171772,-6.509102,2.791202,-0.300630,4.738526,-1.922137,6.193518,8.835285,-7.578149,-2.113063,9.668849,-3.116242,9.943219,-7.835378,7.266062,-3.685799,2.310540,2.818779,5.931384,8.949742,7.901468,8.319720,1.472381,-1.585110,1.277510,6.607080,9.910738,9.932294,0.207723,3.821968,-3.555115,3.396198,-8.981716,-6.624676,2.628188,-7.422957,2.427810,5.861816,-6.216028,7.569880,-0.112816,5.021891,-8.903184,-9.894262,-2.131409,7.877119,0.810169,3.159882,6.248740,5.271235,4.964528,5.844059,-4.160881,6.408087,9.001688,-6.869787,2.756128,6.053069,-5.600470,8.340116,6.322146,-0.928384,-1.668252,-4.563955,4.080340,-6.953421,-4.679491,-8.989863,-0.191335,4.964820,-0.695396,5.221326,6.995865,4.008947,-9.336207,0.009189,4.741974,-1.689916,2.357307,7.133786,-4.434142,3.702506,-8.687744,0.328181,5.382900,-3.052729,5.441986,-5.043238,-2.323147,-6.458160,-0.295173,-8.583409,6.814438,1.880940,7.771408,-7.370689,-8.102305,-8.452174,1.156679,2.782746,2.177207,-7.964652,7.489583,1.360114,-1.653402,-0.370595,6.675916,8.877697,9.045465,9.453945,1.696133,7.250856,3.714116,-5.469475,1.145016,-4.685641,3.700723,6.103455,6.161643,-1.151845,4.218419,-8.370074,1.322308,8.991923,3.722498,-7.790254,-3.293267,-3.040083,4.818326,-6.831504,0.310540,5.680339,8.430817,4.000806,-3.607615,7.240779,3.726891,-2.944264,9.955467,7.754561,5.153321,0.890765,4.037827,7.198999,8.746721,-0.497994,-3.912845,8.454359,-0.706317,-1.598755,3.581766,-4.581037,-3.629073,8.223804,5.568048,-5.436474,-5.478724,-5.212195,5.167606,9.306523,-1.911792,5.354680,3.672970,-0.923817,-6.890136,-1.044566,-3.140668,-6.943462,-8.941054,-1.067950,-9.963807,-3.356516,7.552281,2.331234,-4.550209,7.954886,-1.267183,-9.156768,4.464961,9.017893,8.081061,1.416063,2.728329,-6.166887,-4.452882,9.623854,7.355551,6.705485,-3.625287,-7.558926,1.435562,5.555184,-4.674604,-1.943053,0.968321,6.401659,2.278719,-6.767442,-6.011854,-2.657237,-2.398948,-7.721415,0.690569,-1.149291,-3.117367,8.818731,-2.218114,6.450877,-0.045229,-7.331007,0.389866,-6.132167,9.746097,8.337071,-5.399034,-8.615474,4.799434,-6.901782,-0.949572,5.519255,6.841940,0.420569,7.031056,4.153772,-5.262696,3.452958,9.335166,-8.325980,6.464132,3.015134,-9.299977,-0.869391,-9.864067,-3.426178,7.307204,3.926929,-4.315194,-3.508185,4.357588,6.766883,2.232663,8.457207,4.570809,5.069853,-7.004271,-1.793576,-2.397988,-2.189334,9.398800,-9.547732,-2.256217,-7.454404,-5.968050,1.486800,-3.250805,6.610306,3.957193,-9.834542,-2.193273,9.983610,-6.435265,9.860322,-1.688784,9.375027,2.968935,-4.716766,6.359283,-4.534285,6.450472,2.510987,5.068445,-4.890597,-5.028636,3.514393,-3.397253,5.828516,-6.566572,-7.275333,-8.148641,-9.940357,9.400695,-3.916012,7.528868,-2.509719,-9.260444,-4.454345,-9.881797,-2.514013,-0.068622,5.310199,8.507344,4.954768,-8.388278,-5.548816,-2.046959,-4.804596,-8.373819,-2.254047,3.009232,-3.247006,8.839217,2.257208,6.995894,-5.179565,9.721916,3.297732,-0.881865,-5.885399,-4.665093,2.249871,-0.570030,-3.911415,-9.422931,-2.409520,0.679786,9.241320,-4.847086,-2.569788,6.260023,6.389451,-6.484611,6.006233,7.674703,6.490027,-1.912758,-9.304959,-4.486395,6.581000,-5.555618,6.044849,7.187763,-1.509175,1.224661,3.555976,5.775078,-2.631772,9.613216,-8.472526,5.937685,-6.110108,-3.925056,-3.459276,9.812801,-3.373883,-2.757174,5.047739,-3.468244,7.561996,-3.969151,-6.615878,1.090550,-6.046961,-7.717975,1.998725,-9.014087,-6.351540,3.812496,-5.919427,-2.396314,-7.769211,-8.881435,-7.287294,1.893237,-2.952943,2.302634,1.995099,6.645969,5.232010,-2.022753,-6.343383,8.443897,8.848553,1.608208,2.866193,-1.066237,-5.869935,-3.961712,-8.855651,-8.157135,0.443746,7.174043,-7.102920,-2.588950,8.309388,6.007072,-4.429315,-7.552619,3.363630,1.193463,6.688765,-4.641741,-1.319421,7.345449,-1.997831,9.104006,7.884533,-2.138152,-1.612701,2.700315,2.769638,0.517286,0.973947,0.744987,7.575102,-3.518078,3.871948,1.771886,5.781900,-9.152143,-5.277794,4.699381,-8.113299,-4.008765,9.508615,-0.183976,-9.461845,-6.787961,8.865237,-1.125784,-2.545277,-8.585158,6.587003,5.952863,-1.908510,-3.017992,8.356407,-6.697661,4.469102,-7.091910,-2.497639,5.596393,-9.826316,4.134172,6.492236,2.803018,-9.028003,4.742393,2.389873,-8.604638,-2.806339,-5.726048,-1.606067,-1.085386,7.368072,-0.174606,7.053690,-2.581731,9.912535,-0.030753,8.935240,-0.031293,5.072270,3.924144,-1.001653,-7.316677,-4.273576,5.857584,5.924253,-8.480953,-6.099363,-4.860381,-4.404933,-1.504570,-6.944385,8.986680,-0.740291,0.399909,0.564618,-6.521697,-3.612795,0.779370,5.862673,-0.859704,-2.172193,-7.728206,4.510900,-5.491305,1.189248,-9.926110,9.000647,-3.304818,7.162405,1.460650,-2.965234,7.936974,-7.793299,-0.976607,5.803840,-1.671073,8.906757,-8.391825,-4.768126,0.921073,9.758012,9.237490,6.988093,-2.404636,-5.161314,5.680241,4.347396,6.786463,0.720315,-3.530476,-1.155364,-6.966771,8.127381,0.849279,-2.329709,2.206061,-9.015633,-2.139767,-8.521004,-3.413353,9.392812,-7.162957,-8.436474,-8.493662,2.620150,-9.842039,-8.418796,5.885024,-4.030303,2.615500,3.619049,-3.956239,5.315279,4.107730,-2.865407,-9.154506,-2.246012,-1.629895,6.194570,-8.517298,0.047462,-2.672854,-2.180507,0.535920,-5.140036,0.115064,-5.742148,0.964859,-3.515783,4.451219,8.517060,-0.891254,-5.399698,-3.416860,-1.620290,-3.332749,-4.448466,2.485522,2.930929,7.263649,5.669380,4.582920,-0.328005,3.791744,-4.026035,0.599870,8.635774,7.043605,6.875399,8.316979,-5.962379,7.428409,-4.404181,3.475703,-3.149842,-0.284514,0.851526,2.795133,-7.967038,3.016069,4.193959,-9.911875,-8.887152,3.553141,-2.994527,2.377584,-2.978275,1.465347,4.254352,-7.388452,0.313873,6.776228,1.705593,-2.166706,-2.060533,-4.667345,7.487507,-7.018089,-7.244196,6.666325,-0.737315,0.589026,5.518819,9.168657,-9.508788,-8.761720,-2.647648,-9.166992,-9.286424,-6.916020,-9.985948,9.097572,3.471683,-6.174109,6.032186,-6.304333,-6.446944,-0.006677,-6.033381,4.695820,-3.018708,-1.122114,7.177451,-2.609733,-5.731282,-7.980985,0.836740,-3.943672,1.615308,-8.818376,-0.292782,-8.489054,-2.956036,-7.192099,8.353760,8.559516,-5.641305,-2.110499,1.277065,1.900496,3.905132,-8.780933,0.747683,-5.508111,3.399159,4.083812,3.552953,5.616759,9.100777,3.451425,7.994668,-4.680960,-6.114213,0.608156,9.223601,9.085462,7.982421,0.481635,-4.918902,8.474976,-7.872624,1.917751,9.141665,2.980868,2.064605,0.271881,-3.716012,-5.621634,-4.952544,-2.001836,-2.189739,2.467519,1.662849,7.959560,-9.622244,-1.359625,3.268775,-1.420785,-0.505271,5.750202,-3.603669,-3.399232,-8.843719,-6.105495,-8.682379,-0.001437,-8.418772,-0.932635,-6.655153,-2.089791,5.633786,2.715697,-0.443736,9.062926,-8.673785,-1.985798,2.529653,4.690693,3.570346,-3.285130,-8.900436,0.850176,-9.734075,-3.441591,3.943239,5.840187,0.913714,4.847932,2.774661,-0.939085,-3.330913,-9.788113,8.681190,4.935939,7.969005,3.533808,9.784191,8.431870,-8.588954,-5.488520,-0.995321,-2.540418,6.412289,5.998438,-4.986097,-4.555493,5.731804,-9.653614,-6.699115,3.282125,-6.075659,8.141105,2.000446,9.901934,-4.057699,3.655472,-7.344991,2.920726,-7.925230,-5.812386,-7.573017,5.004764,5.845680,7.052163,8.214088,-2.352618,3.091489,5.668333,-0.971670,-5.074994,5.777959,4.992648,-9.032886,8.616645,1.482364,5.737862,-9.327740,1.229528,9.750863,1.004476,-4.802715,-3.496247,0.509751,-5.112915,-2.745251,-6.413163,0.640149,7.927460,-0.305396,-0.725727,-6.518976,-2.353364,-6.671372,6.608141,-3.502861,-7.150839,-1.295095,-8.421746,0.951044,6.489596,7.215191,0.179484,9.748492,-1.099798,8.910118,3.180279,2.611981,-4.833880,-9.425005,3.234789,-1.018177,4.439147,-6.085467,-5.105018,-0.061280,4.965427,3.044019,-8.034526,-0.987145,4.648475,4.850159,3.785325,-0.210710,-4.212281,5.483105,7.703038,-0.247412,-0.309407,-7.257366,-5.385038,-8.568311,-4.919917,-2.408412,-3.050006,-5.492326,-4.965188,2.162085,-8.688793,5.198535,-9.952585,-9.288373,-3.420990,-9.522018,6.341725,0.847912,3.190076,7.569624,0.999659,9.711140,-9.205087,5.220082,8.988752,0.711483,-3.234672,2.383537,6.233700,-5.671953,-5.808004,2.141125,5.585013,3.927030,-9.490334,2.768160,-7.224563,-6.268577,-4.005156,5.013173,-7.927593,7.698704,8.525402,5.583394,-1.963912,-3.349870,-6.698253,-3.362184,-5.756444,-7.841500,-0.872471,-7.621023,-5.748376,-8.156361,4.384059,5.933147,-9.005201,-3.712780,7.936806,-1.020265,-0.451653,-4.546936,-2.142665,-8.484021,-1.544738,-5.882881,-7.252452,2.600519,7.487273,2.918838,3.903863,-7.274405,8.109011,4.517675,-9.891142,-5.575095,-8.264575,2.358562,7.896482,6.061356,-5.555191,0.327279,-5.047848,-9.031167,-4.046179,-3.212023,-4.479545,8.670846,-3.547157,-2.081971,-9.866863,3.020602,6.422743,-3.294491,-1.970762,-1.777076,7.732147,-3.333731,-2.927015,0.163097,-5.032206,-1.577105,-1.385048,7.318138,-0.118439,3.222577,-9.831512,5.506968,1.127072,7.623816,0.654461,-3.850025,0.250768,-8.138028,7.981055,-3.867785,-1.341645,-7.842511,-0.617152,5.429250,2.945823,3.218756,8.687869,3.997473,-0.075648,-5.867215,-6.465016,-7.423026,2.250564,2.073058,-6.700449,1.919946,-2.317024,0.322209,5.513995,4.395899,6.311842,-5.013702,6.680436,1.158222,-1.289081,4.091398,5.228673,-0.308868,7.066981,9.164163,5.942001,-9.532140,5.357958,-2.889839,-1.372767,2.196042,7.609146,-2.174722,-1.634010,-7.394807,2.428297,2.890371,-4.021111,-0.700599,-0.758124,1.834551,-5.663501,2.973405,-4.558021,-7.740610,-2.811859,-0.676108,2.996105,-4.273597,5.211116,4.221896,1.575601,3.838550,-1.349083,0.695005,9.543200,0.730434,-8.477692,8.463787,-4.062104,4.164915,-0.635212,-0.569446,-5.588733,0.155377,-6.469521,-2.710815,1.867139,5.144357,5.250566,-3.106721,7.449757,-4.622504,7.137917,-8.715875,6.268509,-1.252739,-9.069152,-7.572324,5.988185,-6.040595,-2.813543,3.904865,-4.073000,3.562245,8.821926,-6.157186,2.291951,-6.677034,9.003241,2.761095,-1.982677,-8.732847,-5.648799,6.180149,-6.134751,8.430518,6.816056,-0.953695,0.560553,0.615389,-0.864223,-0.509979,7.742274,-7.259706,5.143207,2.340246,7.998338,-1.511716,-4.887962,9.323987,0.973748,9.005648,-4.815832,-3.078829,-9.256624,-9.166707,-1.638381,-7.176927,-9.714592,-6.650359,-1.751052,5.079909,6.350516,-1.307916,-2.655902,-0.204646,-6.236806,-8.624061,9.122974,3.360544,-4.122846,-6.151584,-3.370532,-7.253397,1.632412,-0.953804,5.245661,3.101930,-4.738705,-4.524436,-2.493263,-8.057770,8.669459,3.796473,-9.641845,-1.731243,-6.349528,9.057679,9.280835,5.490351,-8.463972,6.048258,-0.161522,-3.605909,-1.239291,2.499211,2.287650,9.462520,-5.656571,8.179767,1.101812,7.495127,9.548685,-8.520934,0.628778,4.230470,-2.893390,7.416324,-2.515202,5.388806,-6.916293,1.855223,-9.616789,-0.807739,5.531345,0.763882,9.330864,-6.005454,0.924851,-9.489414,4.836417,-6.097107,-8.653237,-0.064433,2.299248,2.567082,-4.000761,1.552083,4.595874,7.641656,-7.439698,-4.823807,7.132174,-3.579169,5.343844,0.804950,-0.548263,-8.389456,4.387903,4.647074,-7.295353,2.959488,5.326263,-8.073906,-4.011939,9.028400,-5.235365,4.441862,5.587414,0.608300,-8.909338,8.795514,-4.139764,6.683429,-1.002454,4.066089,3.762785,5.830272,3.167314,7.958366,0.008789,-4.702487,-6.864465,5.469277,7.861266,7.372438,-3.956892,0.990213,-8.448453,-5.959532,4.651773,-4.311673,-5.203675,-1.459634,0.098094,-5.823642,-5.490764,-1.269966,-2.520580,-5.653779,-6.686337,3.140532,-4.180241,-8.515521,2.769032,6.508953,-4.393375,7.632413,1.419433,-9.412126,4.189698,6.872759,-0.866800,5.902264,-4.176509,-6.474574,2.196104,8.545911,-3.694235,-3.884056,-7.998999,1.097960,0.375171,-9.145522,-5.632369,7.677768,9.357193,6.730794,1.169293,-4.672301,8.460907,-0.523182,-5.094755,-4.341070,9.253944,-8.217772,6.845704,-9.809563,-4.439369,9.148030,-0.752576,-8.081661,-9.094901,4.769734,-0.301914,0.876150,-3.624151,-8.384937,8.486832,-9.656799,-8.001038,-1.684967,-0.746985,-5.569348,7.299272,9.942108,4.118125,5.479215,8.959824,7.956247,-2.121543,0.224326,-1.391798,8.449245,8.836739,4.786257,-2.092334,1.036591,-7.809042,7.679186,5.180773,7.055073,5.726908,-0.625160,5.181425,-3.238255,-2.555362,3.549837,-9.138980,-2.612199,-6.425976,5.817104,-0.429111,6.160961,-6.188819,-0.321980,8.875267,-0.103790,7.650224,7.511273,-7.440190,-2.003437,-9.773653,-0.828448,2.808747,-1.647309,-3.819209,-3.620570,-9.698685,0.932430,8.645879,-2.832431,-6.746253,0.126100,-2.602927,-3.001630,-5.744831,1.655063,-7.989985,5.549146,1.311120,2.876864,8.761879,-7.520540,1.599352,8.686379,1.911448,9.984887,-6.915356,3.207528,-4.646329,-1.615683,6.904782,4.058357,0.062558,4.869082,-2.022423,-6.628625,-9.972909,7.333642,-9.051840,-4.195321,-6.674786,3.209585,-5.928253,2.368838,8.113497,-2.482141,-9.576814,-4.890098,-2.959395,-6.236849,3.309484,6.550412,9.045862,3.833919,3.765431,9.087446,-8.202923,-8.963717,-8.227748,6.370074,2.713433,-7.833187,8.576504,7.936241,-7.465951,-7.449649,-6.679493,7.063168,-4.955239,-9.707554,8.002496,9.913049,-5.192270,-1.091610,-8.650679,-9.330588,7.990391,1.647180,-3.553816,3.823994,-3.976875,-7.758814,1.129522,-9.247252,-5.574888,4.519873,-2.719182,6.076663,-5.460614,2.976435,4.328909,3.224346,-3.402598,3.486152,5.286806,1.452830,-7.018397,4.291815,-8.021727,0.503689,-3.494350,-7.776242,-4.308389,5.964599,9.823627,6.761151,1.339356,-0.825047,3.686111,-9.477822,-9.667040,-1.659021,7.088012,-1.879554,6.831785,-4.880407,-8.372341,-5.335286,9.016040,4.685714,1.056908,2.589541,6.467414,-8.154961,-7.474335,-9.421678,6.424870,3.359633,-9.577545,-8.892040,-3.971837,3.728399,3.368043,1.926195,5.473551,5.058944,6.555536,9.757188,-2.300823,3.457138,-2.613775,4.728634,-7.848041,-8.154832,-5.097414,-9.207808,-2.802476,1.839244,1.378595,-9.584570,-0.229411,2.144588,-3.314354,-7.697476,1.086255,3.268391,7.352439,8.391312,-2.226166,-5.765987,-5.393073,2.648022,-6.033254,-6.729509,1.439373,9.450802,-8.102836,2.223378,0.125622,-2.148944,8.362579,3.265206,-1.318229,-7.182153,-8.903206,-2.488846,4.090596,3.867218,-0.997540,8.892969,-2.616853,0.262284,-4.436016,-6.393108,9.748431,-0.946576,-6.827013,6.589281,-9.514959,6.994798,0.371441,2.668379,9.905960,-1.121776,-2.896174,0.194781,-0.705492,8.750317,8.382372,4.681779,-8.869534,4.953935,8.269119,-5.791455,-0.557877,-2.565080,6.068650,-6.313927,4.816611,-2.167607,0.322573,-0.133360,5.136078,-9.530730,8.277835,3.276439,4.467005,6.975510,3.435815,-4.905877,2.072255,7.664831,-1.242507,-7.640629,3.795776,5.260316,-7.596117,-7.027205,1.304476,7.769009,-4.728834,6.146551,2.793539,-2.621906,-8.765146,5.364535,-5.570317,-9.280067,-8.907296,-2.422000,9.887340,-0.652576,7.668602,9.073072,4.667275,-6.180765,3.865724,6.687555,-3.970905,-0.548707,-4.728675,-1.944355,-3.875913,3.950626,1.616412,-9.868950,9.924225,6.309285,-7.218103,-1.804238,9.714965,7.602444,-7.385466,4.779769,4.559118,8.490546,9.989652,-0.631822,-2.126651,3.009331,0.989549,-2.896713,-0.302573,8.483889,0.414698,8.610991,-6.520191,3.418539,9.122987,7.441979,-6.997625,6.296512,4.017876,-4.249430,5.356298,5.253323,7.173746,-2.783899,5.773489,-4.062576,9.020752,1.709429,6.292133,-0.194398,-0.970169,8.576823,-2.090211,-7.887387,-8.264365,1.808516,-6.286342,-1.103372,-5.045315,-6.972913,-1.618739,-8.674040,-8.045612,-2.665144,8.330959,-3.161359,-6.755723,-4.686901,-6.855697,-2.337619,1.296595,9.307818,1.835456,-9.265250], dtype = "float32")#candidate|4232|(1920,)|const|float32
call_4231 = relay.TupleGetItem(func_938_call(relay.reshape(const_4232.astype('float32'), [1920,])), 1)
call_4233 = relay.TupleGetItem(func_940_call(relay.reshape(const_4232.astype('float32'), [1920,])), 1)
output = relay.Tuple([call_4207,call_4231,const_4232,])
output2 = relay.Tuple([call_4208,call_4233,const_4232,])
func_4246 = relay.Function([], output)
mod['func_4246'] = func_4246
mod = relay.transform.InferType()(mod)
output = func_4246()
func_4247 = relay.Function([], output)
mutated_mod['func_4247'] = func_4247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_4278 = func_1748_call()
call_4279 = func_1748_call()
var_4296 = relay.var("var_4296", dtype = "float64", shape = (2, 5, 5))#candidate|4296|(2, 5, 5)|var|float64
bop_4297 = relay.equal(call_4278.astype('bool'), relay.reshape(var_4296.astype('bool'), relay.shape_of(call_4278))) # shape=(2, 5, 5)
bop_4300 = relay.equal(call_4279.astype('bool'), relay.reshape(var_4296.astype('bool'), relay.shape_of(call_4279))) # shape=(2, 5, 5)
output = bop_4297
output2 = bop_4300
func_4310 = relay.Function([var_4296,], output)
mod['func_4310'] = func_4310
mod = relay.transform.InferType()(mod)
mutated_mod['func_4310'] = func_4310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4311 = relay.var("var_4311", dtype = "float64", shape = (2, 5, 5))#candidate|4311|(2, 5, 5)|var|float64
func_4310_call = mutated_mod.get_global_var('func_4310')
call_4312 = func_4310_call(var_4311)
output = call_4312
func_4313 = relay.Function([var_4311], output)
mutated_mod['func_4313'] = func_4313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4343 = relay.var("var_4343", dtype = "float32", shape = (3, 7, 8))#candidate|4343|(3, 7, 8)|var|float32
uop_4344 = relay.atan(var_4343.astype('float32')) # shape=(3, 7, 8)
bop_4347 = relay.maximum(uop_4344.astype('int32'), relay.reshape(var_4343.astype('int32'), relay.shape_of(uop_4344))) # shape=(3, 7, 8)
output = relay.Tuple([bop_4347,])
output2 = relay.Tuple([bop_4347,])
func_4355 = relay.Function([var_4343,], output)
mod['func_4355'] = func_4355
mod = relay.transform.InferType()(mod)
var_4356 = relay.var("var_4356", dtype = "float32", shape = (3, 7, 8))#candidate|4356|(3, 7, 8)|var|float32
output = func_4355(var_4356)
func_4357 = relay.Function([var_4356], output)
mutated_mod['func_4357'] = func_4357
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4359 = relay.const(4, dtype = "int32")#candidate|4359|()|const|int32
var_4360 = relay.var("var_4360", dtype = "int32", shape = (4, 12, 7))#candidate|4360|(4, 12, 7)|var|int32
bop_4361 = relay.bitwise_and(const_4359.astype('int32'), var_4360.astype('int32')) # shape=(4, 12, 7)
bop_4378 = relay.less_equal(var_4360.astype('bool'), const_4359.astype('bool')) # shape=(4, 12, 7)
uop_4382 = relay.atan(var_4360.astype('float32')) # shape=(4, 12, 7)
bop_4392 = relay.bitwise_or(uop_4382.astype('uint64'), const_4359.astype('uint64')) # shape=(4, 12, 7)
uop_4414 = relay.exp(uop_4382.astype('float32')) # shape=(4, 12, 7)
uop_4416 = relay.acosh(uop_4414.astype('float32')) # shape=(4, 12, 7)
var_4419 = relay.var("var_4419", dtype = "float32", shape = (4, 12, 7))#candidate|4419|(4, 12, 7)|var|float32
bop_4420 = relay.equal(uop_4414.astype('bool'), relay.reshape(var_4419.astype('bool'), relay.shape_of(uop_4414))) # shape=(4, 12, 7)
uop_4432 = relay.cosh(uop_4416.astype('float32')) # shape=(4, 12, 7)
uop_4436 = relay.rsqrt(uop_4432.astype('float32')) # shape=(4, 12, 7)
func_2156_call = mod.get_global_var('func_2156')
func_2159_call = mutated_mod.get_global_var('func_2159')
var_4443 = relay.var("var_4443", dtype = "float64", shape = (50,))#candidate|4443|(50,)|var|float64
call_4442 = relay.TupleGetItem(func_2156_call(relay.reshape(var_4443.astype('float64'), [2, 5, 5])), 0)
call_4444 = relay.TupleGetItem(func_2159_call(relay.reshape(var_4443.astype('float64'), [2, 5, 5])), 0)
output = relay.Tuple([bop_4361,bop_4378,bop_4392,bop_4420,uop_4436,call_4442,var_4443,])
output2 = relay.Tuple([bop_4361,bop_4378,bop_4392,bop_4420,uop_4436,call_4444,var_4443,])
func_4452 = relay.Function([var_4360,var_4419,var_4443,], output)
mod['func_4452'] = func_4452
mod = relay.transform.InferType()(mod)
var_4453 = relay.var("var_4453", dtype = "int32", shape = (4, 12, 7))#candidate|4453|(4, 12, 7)|var|int32
var_4454 = relay.var("var_4454", dtype = "float32", shape = (4, 12, 7))#candidate|4454|(4, 12, 7)|var|float32
var_4455 = relay.var("var_4455", dtype = "float64", shape = (50,))#candidate|4455|(50,)|var|float64
output = func_4452(var_4453,var_4454,var_4455,)
func_4456 = relay.Function([var_4453,var_4454,var_4455,], output)
mutated_mod['func_4456'] = func_4456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3365_call = mod.get_global_var('func_3365')
func_3367_call = mutated_mod.get_global_var('func_3367')
call_4484 = relay.TupleGetItem(func_3365_call(), 0)
call_4485 = relay.TupleGetItem(func_3367_call(), 0)
func_4182_call = mod.get_global_var('func_4182')
func_4183_call = mutated_mod.get_global_var('func_4183')
call_4487 = relay.TupleGetItem(func_4182_call(), 0)
call_4488 = relay.TupleGetItem(func_4183_call(), 0)
output = relay.Tuple([call_4484,call_4487,])
output2 = relay.Tuple([call_4485,call_4488,])
func_4496 = relay.Function([], output)
mod['func_4496'] = func_4496
mod = relay.transform.InferType()(mod)
output = func_4496()
func_4497 = relay.Function([], output)
mutated_mod['func_4497'] = func_4497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2989_call = mod.get_global_var('func_2989')
func_2990_call = mutated_mod.get_global_var('func_2990')
call_4525 = func_2989_call()
call_4526 = func_2989_call()
output = relay.Tuple([call_4525,])
output2 = relay.Tuple([call_4526,])
func_4531 = relay.Function([], output)
mod['func_4531'] = func_4531
mod = relay.transform.InferType()(mod)
output = func_4531()
func_4532 = relay.Function([], output)
mutated_mod['func_4532'] = func_4532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1266_call = mod.get_global_var('func_1266')
func_1268_call = mutated_mod.get_global_var('func_1268')
call_4623 = relay.TupleGetItem(func_1266_call(), 2)
call_4624 = relay.TupleGetItem(func_1268_call(), 2)
output = call_4623
output2 = call_4624
func_4637 = relay.Function([], output)
mod['func_4637'] = func_4637
mod = relay.transform.InferType()(mod)
mutated_mod['func_4637'] = func_4637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4637_call = mutated_mod.get_global_var('func_4637')
call_4638 = func_4637_call()
output = call_4638
func_4639 = relay.Function([], output)
mutated_mod['func_4639'] = func_4639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4643 = relay.var("var_4643", dtype = "int32", shape = (2, 3, 11))#candidate|4643|(2, 3, 11)|var|int32
var_4644 = relay.var("var_4644", dtype = "int32", shape = (2, 3, 11))#candidate|4644|(2, 3, 11)|var|int32
bop_4645 = relay.multiply(var_4643.astype('int32'), relay.reshape(var_4644.astype('int32'), relay.shape_of(var_4643))) # shape=(2, 3, 11)
func_4006_call = mod.get_global_var('func_4006')
func_4012_call = mutated_mod.get_global_var('func_4012')
var_4650 = relay.var("var_4650", dtype = "int16", shape = (33, 5))#candidate|4650|(33, 5)|var|int16
const_4651 = relay.const(2.204164, dtype = "float64")#candidate|4651|()|const|float64
const_4652 = relay.const([[3.121697,-2.233456],[7.512033,9.966853],[-4.215595,-1.325699],[-9.084315,7.585980],[-7.469007,5.312978],[-4.131876,-9.478942],[2.232165,-8.740607],[5.717181,8.117908],[-6.199296,-0.816633],[5.504603,2.067735],[-6.334143,-6.934329],[-7.931949,-1.130399],[-5.126865,-8.601279],[-1.066339,4.834238],[-7.328669,8.318933],[1.180931,-8.988767],[4.382035,1.274873],[-0.293298,-6.189983],[2.235702,-8.702613],[3.647290,-6.951344],[-3.068282,-0.503808],[7.277429,-1.434146],[8.671739,6.713078],[-3.881529,-7.804847],[-5.748016,-1.695927],[0.612449,-4.471248],[-9.952912,-1.946105],[4.391810,9.141104],[-6.069541,-4.959842],[4.157777,7.248262],[-4.810036,4.800833],[1.432412,-0.651484],[-5.373388,-0.088361],[-5.699499,-7.779767],[0.008047,-0.014553],[8.376825,-9.652607],[9.002449,1.901182],[3.379175,5.545821],[1.794363,0.061066],[6.377599,2.127013],[-2.301475,8.392667],[-8.482047,7.642192],[-5.017819,-9.120324],[-9.790022,6.592879],[4.257668,-3.183811],[-0.156281,-1.776882],[9.753347,-0.783304],[-8.472179,-3.711874],[5.044994,5.511885],[9.077590,-6.308353],[-9.335168,5.678614],[3.251953,-4.470604],[5.969861,-5.806747],[-6.436092,1.805478],[-2.497733,-1.101646],[5.511356,0.059005],[-1.174378,-4.763247],[-6.396662,-5.723782],[5.719439,0.373962],[-4.201553,0.706686],[-0.049926,4.793209],[9.114050,-2.244963],[-7.856680,-7.272162],[4.034871,2.333014],[-2.415011,8.294307],[-6.508189,1.551353],[1.089736,-1.901704],[-4.550793,2.541089],[0.147132,3.123168],[-0.689377,-1.400899],[6.696375,-2.204000],[0.962013,-5.817710],[-9.425740,-5.389669],[3.524868,-8.990466],[-0.363000,6.210433],[3.769877,8.871299],[8.774699,4.867271],[1.455345,3.863661],[-9.768098,1.674141],[5.914158,4.293376],[-8.991279,-0.727002],[2.226861,-9.170262],[8.999574,-7.835162],[2.682461,-4.061238],[-8.147074,-7.526215],[3.988840,-7.031319],[6.362701,5.247717],[-3.114499,-4.325992],[-6.098512,-8.492697],[-0.664002,6.504659],[-1.480512,-2.633598],[-0.410224,0.427480],[-8.255580,-2.852244],[3.908885,6.684727],[-2.649898,0.096004],[4.350637,6.140524],[-7.616841,9.085313],[4.193120,-5.731975],[-4.346247,4.589272],[3.730463,9.823994],[-5.364848,-6.197935],[7.506311,-8.822631],[-7.245045,-8.425882],[-3.141250,-1.850273],[6.076299,2.950354],[-3.438727,7.382386],[-9.438054,5.047705],[3.937800,5.207311],[-9.112472,7.467512],[3.679375,-2.843573]], dtype = "float64")#candidate|4652|(110, 2)|const|float64
call_4649 = relay.TupleGetItem(func_4006_call(relay.reshape(var_4650.astype('int16'), [165,]), relay.reshape(var_4650.astype('bool'), [165,]), relay.reshape(const_4651.astype('float64'), []), relay.reshape(const_4652.astype('float64'), [220,]), ), 1)
call_4653 = relay.TupleGetItem(func_4012_call(relay.reshape(var_4650.astype('int16'), [165,]), relay.reshape(var_4650.astype('bool'), [165,]), relay.reshape(const_4651.astype('float64'), []), relay.reshape(const_4652.astype('float64'), [220,]), ), 1)
uop_4656 = relay.exp(const_4652.astype('float32')) # shape=(110, 2)
output = relay.Tuple([bop_4645,call_4649,var_4650,const_4651,uop_4656,])
output2 = relay.Tuple([bop_4645,call_4653,var_4650,const_4651,uop_4656,])
func_4686 = relay.Function([var_4643,var_4644,var_4650,], output)
mod['func_4686'] = func_4686
mod = relay.transform.InferType()(mod)
mutated_mod['func_4686'] = func_4686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mutated_mod.get_global_var('func_4686')
var_4688 = relay.var("var_4688", dtype = "int32", shape = (2, 3, 11))#candidate|4688|(2, 3, 11)|var|int32
var_4689 = relay.var("var_4689", dtype = "int32", shape = (2, 3, 11))#candidate|4689|(2, 3, 11)|var|int32
var_4690 = relay.var("var_4690", dtype = "int16", shape = (33, 5))#candidate|4690|(33, 5)|var|int16
call_4687 = func_4686_call(var_4688,var_4689,var_4690,)
output = call_4687
func_4691 = relay.Function([var_4688,var_4689,var_4690,], output)
mutated_mod['func_4691'] = func_4691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2989_call = mod.get_global_var('func_2989')
func_2990_call = mutated_mod.get_global_var('func_2990')
call_4736 = func_2989_call()
call_4737 = func_2989_call()
output = call_4736
output2 = call_4737
func_4752 = relay.Function([], output)
mod['func_4752'] = func_4752
mod = relay.transform.InferType()(mod)
output = func_4752()
func_4753 = relay.Function([], output)
mutated_mod['func_4753'] = func_4753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_4754 = relay.TupleGetItem(func_1370_call(), 0)
call_4755 = relay.TupleGetItem(func_1372_call(), 0)
output = relay.Tuple([call_4754,])
output2 = relay.Tuple([call_4755,])
func_4756 = relay.Function([], output)
mod['func_4756'] = func_4756
mod = relay.transform.InferType()(mod)
mutated_mod['func_4756'] = func_4756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4756_call = mutated_mod.get_global_var('func_4756')
call_4757 = func_4756_call()
output = call_4757
func_4758 = relay.Function([], output)
mutated_mod['func_4758'] = func_4758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2901_call = mod.get_global_var('func_2901')
func_2903_call = mutated_mod.get_global_var('func_2903')
call_4794 = relay.TupleGetItem(func_2901_call(), 0)
call_4795 = relay.TupleGetItem(func_2903_call(), 0)
output = relay.Tuple([call_4794,])
output2 = relay.Tuple([call_4795,])
func_4799 = relay.Function([], output)
mod['func_4799'] = func_4799
mod = relay.transform.InferType()(mod)
output = func_4799()
func_4800 = relay.Function([], output)
mutated_mod['func_4800'] = func_4800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4863 = relay.var("var_4863", dtype = "bool", shape = ())#candidate|4863|()|var|bool
var_4864 = relay.var("var_4864", dtype = "bool", shape = (12, 16, 1))#candidate|4864|(12, 16, 1)|var|bool
bop_4865 = relay.logical_or(var_4863.astype('bool'), var_4864.astype('bool')) # shape=(12, 16, 1)
uop_4868 = relay.log(bop_4865.astype('float64')) # shape=(12, 16, 1)
bop_4870 = relay.right_shift(uop_4868.astype('int32'), var_4863.astype('int32')) # shape=(12, 16, 1)
output = relay.Tuple([bop_4870,])
output2 = relay.Tuple([bop_4870,])
func_4873 = relay.Function([var_4863,var_4864,], output)
mod['func_4873'] = func_4873
mod = relay.transform.InferType()(mod)
var_4874 = relay.var("var_4874", dtype = "bool", shape = ())#candidate|4874|()|var|bool
var_4875 = relay.var("var_4875", dtype = "bool", shape = (12, 16, 1))#candidate|4875|(12, 16, 1)|var|bool
output = func_4873(var_4874,var_4875,)
func_4876 = relay.Function([var_4874,var_4875,], output)
mutated_mod['func_4876'] = func_4876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4990 = relay.var("var_4990", dtype = "float64", shape = (15, 2, 5))#candidate|4990|(15, 2, 5)|var|float64
var_4991 = relay.var("var_4991", dtype = "float64", shape = (15, 2, 5))#candidate|4991|(15, 2, 5)|var|float64
bop_4992 = relay.divide(var_4990.astype('float64'), relay.reshape(var_4991.astype('float64'), relay.shape_of(var_4990))) # shape=(15, 2, 5)
var_4996 = relay.var("var_4996", dtype = "float64", shape = (15, 2, 5))#candidate|4996|(15, 2, 5)|var|float64
bop_4997 = relay.multiply(bop_4992.astype('uint32'), relay.reshape(var_4996.astype('uint32'), relay.shape_of(bop_4992))) # shape=(15, 2, 5)
output = relay.Tuple([bop_4997,])
output2 = relay.Tuple([bop_4997,])
func_5000 = relay.Function([var_4990,var_4991,var_4996,], output)
mod['func_5000'] = func_5000
mod = relay.transform.InferType()(mod)
var_5001 = relay.var("var_5001", dtype = "float64", shape = (15, 2, 5))#candidate|5001|(15, 2, 5)|var|float64
var_5002 = relay.var("var_5002", dtype = "float64", shape = (15, 2, 5))#candidate|5002|(15, 2, 5)|var|float64
var_5003 = relay.var("var_5003", dtype = "float64", shape = (15, 2, 5))#candidate|5003|(15, 2, 5)|var|float64
output = func_5000(var_5001,var_5002,var_5003,)
func_5004 = relay.Function([var_5001,var_5002,var_5003,], output)
mutated_mod['func_5004'] = func_5004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1732_call = mod.get_global_var('func_1732')
func_1733_call = mutated_mod.get_global_var('func_1733')
call_5008 = func_1732_call()
call_5009 = func_1732_call()
output = relay.Tuple([call_5008,])
output2 = relay.Tuple([call_5009,])
func_5039 = relay.Function([], output)
mod['func_5039'] = func_5039
mod = relay.transform.InferType()(mod)
output = func_5039()
func_5040 = relay.Function([], output)
mutated_mod['func_5040'] = func_5040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_5078 = relay.TupleGetItem(func_1172_call(), 0)
call_5079 = relay.TupleGetItem(func_1174_call(), 0)
output = relay.Tuple([call_5078,])
output2 = relay.Tuple([call_5079,])
func_5085 = relay.Function([], output)
mod['func_5085'] = func_5085
mod = relay.transform.InferType()(mod)
output = func_5085()
func_5086 = relay.Function([], output)
mutated_mod['func_5086'] = func_5086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_5193 = relay.TupleGetItem(func_1172_call(), 0)
call_5194 = relay.TupleGetItem(func_1174_call(), 0)
func_1566_call = mod.get_global_var('func_1566')
func_1569_call = mutated_mod.get_global_var('func_1569')
var_5200 = relay.var("var_5200", dtype = "int8", shape = (4,))#candidate|5200|(4,)|var|int8
const_5201 = relay.const([[10,-9,7,6],[-5,-2,-10,4],[-9,4,6,4],[10,4,10,8],[7,10,9,-5],[-5,-3,5,-8],[-2,6,10,3],[-7,-10,4,-6],[-5,-4,6,-9],[10,6,3,-2],[8,-4,-7,8],[5,-3,-6,-1],[9,7,5,-4],[10,-10,4,10],[9,8,-1,2],[-4,7,3,-3],[3,8,6,5],[-2,8,9,7],[2,-6,4,8],[-2,-10,-5,9],[-2,10,-9,-1],[1,6,-9,-10],[10,3,3,-4],[8,-1,-6,5],[-5,6,-9,4],[8,2,5,-8],[7,9,-5,-4],[-8,8,-5,-3],[-7,4,-6,5],[-10,-1,8,-8],[-3,4,1,-10],[3,4,-2,-6],[-6,4,1,-5],[-8,-4,8,-9],[2,-8,1,3],[-10,10,3,-9],[-10,-10,4,-2],[2,7,1,-2],[1,-7,1,-6],[6,-3,6,10],[4,-7,-7,-1],[6,-10,5,-9],[5,-9,-5,-7],[5,-3,-1,6],[-5,6,-3,-3],[-2,-7,7,3],[1,8,9,8],[3,-4,6,-10],[3,5,2,7],[2,-10,10,-1],[-7,9,-4,9],[-10,-2,3,9],[9,-1,1,4],[2,2,-9,-2],[-4,2,2,7],[-4,-10,2,-2],[3,-1,-3,-10],[1,6,-7,-6],[-1,-10,10,5],[-8,-1,-4,3],[-6,4,1,4],[-7,4,9,8],[-10,3,8,6],[-10,-6,9,4],[4,-7,-3,9],[-3,4,4,-4],[-10,6,4,4],[10,10,7,-7],[1,8,-4,2],[9,-1,-9,9],[1,-9,-9,9],[-1,9,1,1],[-9,-6,5,2],[7,6,8,7],[-3,2,-7,3],[10,-10,-7,4],[9,9,-1,7],[-4,-6,-2,-10],[9,-7,5,-6],[2,-7,-6,-7],[5,10,-6,-4],[2,3,-10,9],[6,-6,7,-5],[10,2,-5,1],[-4,5,-8,2],[-8,-5,7,8],[3,-4,9,-1],[-3,3,9,-9],[-4,5,-3,3],[-10,-10,4,10],[-5,8,-4,-3],[2,-9,1,-6],[-2,7,5,-9],[-10,-2,10,-2],[6,8,-8,1],[8,-1,-7,2],[-7,7,10,-7],[-6,5,-4,-10]], dtype = "int8")#candidate|5201|(98, 4)|const|int8
call_5199 = relay.TupleGetItem(func_1566_call(relay.reshape(var_5200.astype('int8'), [1, 1, 4]), relay.reshape(const_5201.astype('int8'), [7, 14, 4]), ), 0)
call_5202 = relay.TupleGetItem(func_1569_call(relay.reshape(var_5200.astype('int8'), [1, 1, 4]), relay.reshape(const_5201.astype('int8'), [7, 14, 4]), ), 0)
output = relay.Tuple([call_5193,call_5199,var_5200,const_5201,])
output2 = relay.Tuple([call_5194,call_5202,var_5200,const_5201,])
func_5231 = relay.Function([var_5200,], output)
mod['func_5231'] = func_5231
mod = relay.transform.InferType()(mod)
mutated_mod['func_5231'] = func_5231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5232 = relay.var("var_5232", dtype = "int8", shape = (4,))#candidate|5232|(4,)|var|int8
func_5231_call = mutated_mod.get_global_var('func_5231')
call_5233 = func_5231_call(var_5232)
output = call_5233
func_5234 = relay.Function([var_5232], output)
mutated_mod['func_5234'] = func_5234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mod.get_global_var('func_4029')
func_4030_call = mutated_mod.get_global_var('func_4030')
call_5283 = relay.TupleGetItem(func_4029_call(), 1)
call_5284 = relay.TupleGetItem(func_4030_call(), 1)
var_5288 = relay.var("var_5288", dtype = "uint64", shape = (9, 16, 3))#candidate|5288|(9, 16, 3)|var|uint64
bop_5289 = relay.left_shift(call_5283.astype('int8'), relay.reshape(var_5288.astype('int8'), relay.shape_of(call_5283))) # shape=(9, 16, 3)
bop_5292 = relay.left_shift(call_5284.astype('int8'), relay.reshape(var_5288.astype('int8'), relay.shape_of(call_5284))) # shape=(9, 16, 3)
func_3910_call = mod.get_global_var('func_3910')
func_3914_call = mutated_mod.get_global_var('func_3914')
const_5302 = relay.const([-1,4,10,4,10,2,6,3,-6], dtype = "int16")#candidate|5302|(9,)|const|int16
var_5303 = relay.var("var_5303", dtype = "int16", shape = (1350,))#candidate|5303|(1350,)|var|int16
const_5304 = relay.const([-8.616986,-7.319283,1.617477,-4.172455,0.886761,0.200526,-1.793559,0.907179,1.579179,-6.214071,-5.694655,-4.212042,-2.494062,5.091651,-0.945111,7.201313,8.421828,-1.076616,8.330629,-9.593104,-5.546923,-3.740321,7.776665,-5.899339,-2.181906,-8.737974,-8.144913,-7.340415,6.716020,-3.513469,5.953720,-0.471603,9.785270,-1.898071,-8.031015,3.417199,-4.991557,4.829986,7.853680,-1.532723,-5.679730,-8.410144,-4.307854,3.060476,4.290388,9.227909,-9.352076,6.781910,-5.289071,-1.778198], dtype = "float64")#candidate|5304|(50,)|const|float64
call_5301 = relay.TupleGetItem(func_3910_call(relay.reshape(const_5302.astype('int16'), [1, 3, 3]), relay.reshape(var_5303.astype('int16'), [15, 6, 15]), relay.reshape(const_5304.astype('float64'), [10, 5]), ), 4)
call_5305 = relay.TupleGetItem(func_3914_call(relay.reshape(const_5302.astype('int16'), [1, 3, 3]), relay.reshape(var_5303.astype('int16'), [15, 6, 15]), relay.reshape(const_5304.astype('float64'), [10, 5]), ), 4)
output = relay.Tuple([bop_5289,call_5301,const_5302,var_5303,const_5304,])
output2 = relay.Tuple([bop_5292,call_5305,const_5302,var_5303,const_5304,])
func_5316 = relay.Function([var_5288,var_5303,], output)
mod['func_5316'] = func_5316
mod = relay.transform.InferType()(mod)
var_5317 = relay.var("var_5317", dtype = "uint64", shape = (9, 16, 3))#candidate|5317|(9, 16, 3)|var|uint64
var_5318 = relay.var("var_5318", dtype = "int16", shape = (1350,))#candidate|5318|(1350,)|var|int16
output = func_5316(var_5317,var_5318,)
func_5319 = relay.Function([var_5317,var_5318,], output)
mutated_mod['func_5319'] = func_5319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_5352 = func_1748_call()
call_5353 = func_1748_call()
output = relay.Tuple([call_5352,])
output2 = relay.Tuple([call_5353,])
func_5357 = relay.Function([], output)
mod['func_5357'] = func_5357
mod = relay.transform.InferType()(mod)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5357_call = mutated_mod.get_global_var('func_5357')
call_5358 = func_5357_call()
output = call_5358
func_5359 = relay.Function([], output)
mutated_mod['func_5359'] = func_5359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5424 = relay.var("var_5424", dtype = "int16", shape = ())#candidate|5424|()|var|int16
var_5425 = relay.var("var_5425", dtype = "int16", shape = (4, 8, 2))#candidate|5425|(4, 8, 2)|var|int16
bop_5426 = relay.multiply(var_5424.astype('int16'), var_5425.astype('int16')) # shape=(4, 8, 2)
output = relay.Tuple([bop_5426,])
output2 = relay.Tuple([bop_5426,])
func_5429 = relay.Function([var_5424,var_5425,], output)
mod['func_5429'] = func_5429
mod = relay.transform.InferType()(mod)
mutated_mod['func_5429'] = func_5429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5429_call = mutated_mod.get_global_var('func_5429')
var_5431 = relay.var("var_5431", dtype = "int16", shape = ())#candidate|5431|()|var|int16
var_5432 = relay.var("var_5432", dtype = "int16", shape = (4, 8, 2))#candidate|5432|(4, 8, 2)|var|int16
call_5430 = func_5429_call(var_5431,var_5432,)
output = call_5430
func_5433 = relay.Function([var_5431,var_5432,], output)
mutated_mod['func_5433'] = func_5433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_5454 = relay.TupleGetItem(func_2554_call(), 0)
call_5455 = relay.TupleGetItem(func_2555_call(), 0)
func_4686_call = mod.get_global_var('func_4686')
func_4691_call = mutated_mod.get_global_var('func_4691')
const_5463 = relay.const([-7,-6,-10,8,6,6,-1,7,-6,-2,-1,8,-2,-1,7,-1,-4,-7,-9,8,6,3,3,-9,-2,-2,9,-3,4,-7,9,-7,5,7,-1,-9,1,4,-2,2,5,-9,5,-5,-7,10,-10,-8,3,9,2,-4,-8,4,-3,-3,10,3,3,4,10,-7,3,5,1,-3], dtype = "int32")#candidate|5463|(66,)|const|int32
call_5462 = relay.TupleGetItem(func_4686_call(relay.reshape(const_5463.astype('int32'), [2, 3, 11]), relay.reshape(const_5463.astype('int32'), [2, 3, 11]), relay.reshape(call_5454.astype('int16'), [33, 5]), ), 0)
call_5464 = relay.TupleGetItem(func_4691_call(relay.reshape(const_5463.astype('int32'), [2, 3, 11]), relay.reshape(const_5463.astype('int32'), [2, 3, 11]), relay.reshape(call_5454.astype('int16'), [33, 5]), ), 0)
func_1748_call = mod.get_global_var('func_1748')
func_1749_call = mutated_mod.get_global_var('func_1749')
call_5465 = func_1748_call()
call_5466 = func_1748_call()
output = relay.Tuple([call_5454,call_5462,const_5463,call_5465,])
output2 = relay.Tuple([call_5455,call_5464,const_5463,call_5466,])
func_5469 = relay.Function([], output)
mod['func_5469'] = func_5469
mod = relay.transform.InferType()(mod)
output = func_5469()
func_5470 = relay.Function([], output)
mutated_mod['func_5470'] = func_5470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4531_call = mod.get_global_var('func_4531')
func_4532_call = mutated_mod.get_global_var('func_4532')
call_5476 = relay.TupleGetItem(func_4531_call(), 0)
call_5477 = relay.TupleGetItem(func_4532_call(), 0)
func_4637_call = mod.get_global_var('func_4637')
func_4639_call = mutated_mod.get_global_var('func_4639')
call_5486 = func_4637_call()
call_5487 = func_4637_call()
output = relay.Tuple([call_5476,call_5486,])
output2 = relay.Tuple([call_5477,call_5487,])
func_5495 = relay.Function([], output)
mod['func_5495'] = func_5495
mod = relay.transform.InferType()(mod)
output = func_5495()
func_5496 = relay.Function([], output)
mutated_mod['func_5496'] = func_5496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5469_call = mod.get_global_var('func_5469')
func_5470_call = mutated_mod.get_global_var('func_5470')
call_5506 = relay.TupleGetItem(func_5469_call(), 3)
call_5507 = relay.TupleGetItem(func_5470_call(), 3)
uop_5518 = relay.sinh(call_5506.astype('float32')) # shape=(2, 5, 5)
uop_5520 = relay.sinh(call_5507.astype('float32')) # shape=(2, 5, 5)
output = uop_5518
output2 = uop_5520
func_5534 = relay.Function([], output)
mod['func_5534'] = func_5534
mod = relay.transform.InferType()(mod)
mutated_mod['func_5534'] = func_5534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5534_call = mutated_mod.get_global_var('func_5534')
call_5535 = func_5534_call()
output = call_5535
func_5536 = relay.Function([], output)
mutated_mod['func_5536'] = func_5536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_5562 = relay.TupleGetItem(func_1172_call(), 0)
call_5563 = relay.TupleGetItem(func_1174_call(), 0)
func_619_call = mod.get_global_var('func_619')
func_621_call = mutated_mod.get_global_var('func_621')
call_5578 = func_619_call()
call_5579 = func_619_call()
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_5584 = relay.TupleGetItem(func_4125_call(), 0)
call_5585 = relay.TupleGetItem(func_4127_call(), 0)
output = relay.Tuple([call_5562,call_5578,call_5584,])
output2 = relay.Tuple([call_5563,call_5579,call_5585,])
func_5587 = relay.Function([], output)
mod['func_5587'] = func_5587
mod = relay.transform.InferType()(mod)
mutated_mod['func_5587'] = func_5587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5587_call = mutated_mod.get_global_var('func_5587')
call_5588 = func_5587_call()
output = call_5588
func_5589 = relay.Function([], output)
mutated_mod['func_5589'] = func_5589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5357_call = mod.get_global_var('func_5357')
func_5359_call = mutated_mod.get_global_var('func_5359')
call_5607 = relay.TupleGetItem(func_5357_call(), 0)
call_5608 = relay.TupleGetItem(func_5359_call(), 0)
func_4310_call = mod.get_global_var('func_4310')
func_4313_call = mutated_mod.get_global_var('func_4313')
call_5614 = func_4310_call(relay.reshape(call_5607.astype('float64'), [2, 5, 5]))
call_5615 = func_4310_call(relay.reshape(call_5607.astype('float64'), [2, 5, 5]))
func_1499_call = mod.get_global_var('func_1499')
func_1500_call = mutated_mod.get_global_var('func_1500')
call_5628 = func_1499_call()
call_5629 = func_1499_call()
func_1732_call = mod.get_global_var('func_1732')
func_1733_call = mutated_mod.get_global_var('func_1733')
call_5634 = func_1732_call()
call_5635 = func_1732_call()
func_5495_call = mod.get_global_var('func_5495')
func_5496_call = mutated_mod.get_global_var('func_5496')
call_5637 = relay.TupleGetItem(func_5495_call(), 1)
call_5638 = relay.TupleGetItem(func_5496_call(), 1)
output = relay.Tuple([call_5607,call_5614,call_5628,call_5634,call_5637,])
output2 = relay.Tuple([call_5608,call_5615,call_5629,call_5635,call_5638,])
func_5663 = relay.Function([], output)
mod['func_5663'] = func_5663
mod = relay.transform.InferType()(mod)
mutated_mod['func_5663'] = func_5663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mutated_mod.get_global_var('func_5663')
call_5664 = func_5663_call()
output = call_5664
func_5665 = relay.Function([], output)
mutated_mod['func_5665'] = func_5665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2182_call = mod.get_global_var('func_2182')
func_2183_call = mutated_mod.get_global_var('func_2183')
call_5672 = relay.TupleGetItem(func_2182_call(), 3)
call_5673 = relay.TupleGetItem(func_2183_call(), 3)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_5688 = relay.TupleGetItem(func_4125_call(), 4)
call_5689 = relay.TupleGetItem(func_4127_call(), 4)
var_5703 = relay.var("var_5703", dtype = "int8", shape = (392,))#candidate|5703|(392,)|var|int8
bop_5704 = relay.multiply(call_5688.astype('uint8'), relay.reshape(var_5703.astype('uint8'), relay.shape_of(call_5688))) # shape=(392,)
bop_5707 = relay.multiply(call_5689.astype('uint8'), relay.reshape(var_5703.astype('uint8'), relay.shape_of(call_5689))) # shape=(392,)
func_1814_call = mod.get_global_var('func_1814')
func_1816_call = mutated_mod.get_global_var('func_1816')
call_5712 = relay.TupleGetItem(func_1814_call(), 1)
call_5713 = relay.TupleGetItem(func_1816_call(), 1)
output = relay.Tuple([call_5672,bop_5704,call_5712,])
output2 = relay.Tuple([call_5673,bop_5707,call_5713,])
func_5718 = relay.Function([var_5703,], output)
mod['func_5718'] = func_5718
mod = relay.transform.InferType()(mod)
mutated_mod['func_5718'] = func_5718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5719 = relay.var("var_5719", dtype = "int8", shape = (392,))#candidate|5719|(392,)|var|int8
func_5718_call = mutated_mod.get_global_var('func_5718')
call_5720 = func_5718_call(var_5719)
output = call_5720
func_5721 = relay.Function([var_5719], output)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5734 = relay.const([[[-7.136259],[-0.120404],[-5.474707],[-8.321403]],[[-8.517999],[3.396914],[-4.433895],[2.614102]],[[8.178721],[8.385306],[1.223375],[0.334431]],[[5.696274],[4.948547],[-6.094352],[-9.248168]],[[-2.712111],[0.175326],[-2.357994],[4.156759]],[[5.733477],[0.476066],[-6.167276],[8.909199]],[[1.955649],[-4.578493],[5.019085],[4.827488]],[[3.337453],[0.565439],[-5.257869],[-7.515282]],[[9.588596],[2.326403],[-6.282106],[-1.890316]],[[6.675445],[3.641122],[0.690612],[4.993144]],[[-1.066038],[2.634210],[3.645383],[-7.325955]]], dtype = "float64")#candidate|5734|(11, 4, 1)|const|float64
uop_5735 = relay.sinh(const_5734.astype('float64')) # shape=(11, 4, 1)
func_3534_call = mod.get_global_var('func_3534')
func_3535_call = mutated_mod.get_global_var('func_3535')
call_5737 = relay.TupleGetItem(func_3534_call(), 2)
call_5738 = relay.TupleGetItem(func_3535_call(), 2)
func_1882_call = mod.get_global_var('func_1882')
func_1884_call = mutated_mod.get_global_var('func_1884')
call_5740 = relay.TupleGetItem(func_1882_call(), 0)
call_5741 = relay.TupleGetItem(func_1884_call(), 0)
bop_5743 = relay.floor_mod(uop_5735.astype('float64'), relay.reshape(const_5734.astype('float64'), relay.shape_of(uop_5735))) # shape=(11, 4, 1)
var_5759 = relay.var("var_5759", dtype = "float64", shape = (11, 4, 1))#candidate|5759|(11, 4, 1)|var|float64
bop_5760 = relay.mod(uop_5735.astype('float64'), relay.reshape(var_5759.astype('float64'), relay.shape_of(uop_5735))) # shape=(11, 4, 1)
bop_5773 = relay.less_equal(uop_5735.astype('bool'), relay.reshape(var_5759.astype('bool'), relay.shape_of(uop_5735))) # shape=(11, 4, 1)
func_5534_call = mod.get_global_var('func_5534')
func_5536_call = mutated_mod.get_global_var('func_5536')
call_5788 = func_5534_call()
call_5789 = func_5534_call()
output = relay.Tuple([call_5737,call_5740,bop_5743,bop_5760,bop_5773,call_5788,])
output2 = relay.Tuple([call_5738,call_5741,bop_5743,bop_5760,bop_5773,call_5789,])
func_5790 = relay.Function([var_5759,], output)
mod['func_5790'] = func_5790
mod = relay.transform.InferType()(mod)
mutated_mod['func_5790'] = func_5790
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5791 = relay.var("var_5791", dtype = "float64", shape = (11, 4, 1))#candidate|5791|(11, 4, 1)|var|float64
func_5790_call = mutated_mod.get_global_var('func_5790')
call_5792 = func_5790_call(var_5791)
output = call_5792
func_5793 = relay.Function([var_5791], output)
mutated_mod['func_5793'] = func_5793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3449_call = mod.get_global_var('func_3449')
func_3450_call = mutated_mod.get_global_var('func_3450')
call_5820 = relay.TupleGetItem(func_3449_call(), 0)
call_5821 = relay.TupleGetItem(func_3450_call(), 0)
output = relay.Tuple([call_5820,])
output2 = relay.Tuple([call_5821,])
func_5834 = relay.Function([], output)
mod['func_5834'] = func_5834
mod = relay.transform.InferType()(mod)
output = func_5834()
func_5835 = relay.Function([], output)
mutated_mod['func_5835'] = func_5835
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5844 = relay.var("var_5844", dtype = "uint16", shape = (6, 1, 16))#candidate|5844|(6, 1, 16)|var|uint16
var_5845 = relay.var("var_5845", dtype = "uint16", shape = (6, 9, 16))#candidate|5845|(6, 9, 16)|var|uint16
bop_5846 = relay.logical_xor(var_5844.astype('uint16'), var_5845.astype('uint16')) # shape=(6, 9, 16)
output = relay.Tuple([bop_5846,])
output2 = relay.Tuple([bop_5846,])
func_5851 = relay.Function([var_5844,var_5845,], output)
mod['func_5851'] = func_5851
mod = relay.transform.InferType()(mod)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5851_call = mutated_mod.get_global_var('func_5851')
var_5853 = relay.var("var_5853", dtype = "uint16", shape = (6, 1, 16))#candidate|5853|(6, 1, 16)|var|uint16
var_5854 = relay.var("var_5854", dtype = "uint16", shape = (6, 9, 16))#candidate|5854|(6, 9, 16)|var|uint16
call_5852 = func_5851_call(var_5853,var_5854,)
output = call_5852
func_5855 = relay.Function([var_5853,var_5854,], output)
mutated_mod['func_5855'] = func_5855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4637_call = mod.get_global_var('func_4637')
func_4639_call = mutated_mod.get_global_var('func_4639')
call_5972 = func_4637_call()
call_5973 = func_4637_call()
uop_5985 = relay.log2(call_5972.astype('float64')) # shape=(1920,)
uop_5987 = relay.log2(call_5973.astype('float64')) # shape=(1920,)
output = uop_5985
output2 = uop_5987
func_5993 = relay.Function([], output)
mod['func_5993'] = func_5993
mod = relay.transform.InferType()(mod)
mutated_mod['func_5993'] = func_5993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5993_call = mutated_mod.get_global_var('func_5993')
call_5994 = func_5993_call()
output = call_5994
func_5995 = relay.Function([], output)
mutated_mod['func_5995'] = func_5995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2901_call = mod.get_global_var('func_2901')
func_2903_call = mutated_mod.get_global_var('func_2903')
call_6006 = relay.TupleGetItem(func_2901_call(), 2)
call_6007 = relay.TupleGetItem(func_2903_call(), 2)
output = relay.Tuple([call_6006,])
output2 = relay.Tuple([call_6007,])
func_6019 = relay.Function([], output)
mod['func_6019'] = func_6019
mod = relay.transform.InferType()(mod)
output = func_6019()
func_6020 = relay.Function([], output)
mutated_mod['func_6020'] = func_6020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_6039 = relay.TupleGetItem(func_2633_call(), 0)
call_6040 = relay.TupleGetItem(func_2635_call(), 0)
output = relay.Tuple([call_6039,])
output2 = relay.Tuple([call_6040,])
func_6046 = relay.Function([], output)
mod['func_6046'] = func_6046
mod = relay.transform.InferType()(mod)
output = func_6046()
func_6047 = relay.Function([], output)
mutated_mod['func_6047'] = func_6047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2989_call = mod.get_global_var('func_2989')
func_2990_call = mutated_mod.get_global_var('func_2990')
call_6067 = func_2989_call()
call_6068 = func_2989_call()
output = relay.Tuple([call_6067,])
output2 = relay.Tuple([call_6068,])
func_6093 = relay.Function([], output)
mod['func_6093'] = func_6093
mod = relay.transform.InferType()(mod)
output = func_6093()
func_6094 = relay.Function([], output)
mutated_mod['func_6094'] = func_6094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_6101 = relay.TupleGetItem(func_2554_call(), 0)
call_6102 = relay.TupleGetItem(func_2555_call(), 0)
func_5469_call = mod.get_global_var('func_5469')
func_5470_call = mutated_mod.get_global_var('func_5470')
call_6104 = relay.TupleGetItem(func_5469_call(), 0)
call_6105 = relay.TupleGetItem(func_5470_call(), 0)
func_2554_call = mod.get_global_var('func_2554')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_6106 = relay.TupleGetItem(func_2554_call(), 0)
call_6107 = relay.TupleGetItem(func_2555_call(), 0)
func_5316_call = mod.get_global_var('func_5316')
func_5319_call = mutated_mod.get_global_var('func_5319')
var_6110 = relay.var("var_6110", dtype = "uint64", shape = (432,))#candidate|6110|(432,)|var|uint64
var_6111 = relay.var("var_6111", dtype = "int16", shape = (27, 50))#candidate|6111|(27, 50)|var|int16
call_6109 = relay.TupleGetItem(func_5316_call(relay.reshape(var_6110.astype('uint64'), [9, 16, 3]), relay.reshape(var_6111.astype('int16'), [1350,]), ), 1)
call_6112 = relay.TupleGetItem(func_5319_call(relay.reshape(var_6110.astype('uint64'), [9, 16, 3]), relay.reshape(var_6111.astype('int16'), [1350,]), ), 1)
output = relay.Tuple([call_6101,call_6104,call_6106,call_6109,var_6110,var_6111,])
output2 = relay.Tuple([call_6102,call_6105,call_6107,call_6112,var_6110,var_6111,])
func_6121 = relay.Function([var_6110,var_6111,], output)
mod['func_6121'] = func_6121
mod = relay.transform.InferType()(mod)
var_6122 = relay.var("var_6122", dtype = "uint64", shape = (432,))#candidate|6122|(432,)|var|uint64
var_6123 = relay.var("var_6123", dtype = "int16", shape = (27, 50))#candidate|6123|(27, 50)|var|int16
output = func_6121(var_6122,var_6123,)
func_6124 = relay.Function([var_6122,var_6123,], output)
mutated_mod['func_6124'] = func_6124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_6149 = func_2969_call()
call_6150 = func_2969_call()
uop_6166 = relay.acosh(call_6149.astype('float64')) # shape=(2, 5, 5)
uop_6168 = relay.acosh(call_6150.astype('float64')) # shape=(2, 5, 5)
func_196_call = mod.get_global_var('func_196')
func_200_call = mutated_mod.get_global_var('func_200')
const_6172 = relay.const([1,2,2,9,-3,-8,-8,6,-2,6,9,-5,-3,-8,4,-4,5,-1,7,-4,2,7,10,-9,4,-2,-9,1,3,-4,3,6,-1,-4,6,-3,3,-2,5,5,-9,4,3,9,7,7,-9,-5,-9,-1,8,-7,5,-1,-1,10,1,-5,9,2,-7,-5,1,7,8,7,3,4,3,8,2,-3,4,-9,2,-1,4,5,6,5,1,10,8,-2,1,-5,2,8,-6,10,-2,-8,7,-10,-7,-6,1,-4,2,-9,8,6,2,5,-10,-7,-8,-9,-10,7,-5,6,1,-4,6,3,-5,-5,2,-4,-8,7,6,10,-4,-3,-2,-7,-9,-5,2,10,-9,-6,-8,3,1,-10,5,-3,7,-10,-5,3,7,10,5,9,-6,5,5,-7,-8,-5,7,4,6,-6,-2,-6,6,-10,-7,-5,4], dtype = "int16")#candidate|6172|(165,)|const|int16
call_6171 = relay.TupleGetItem(func_196_call(relay.reshape(const_6172.astype('int16'), [11, 15, 1]), relay.reshape(const_6172.astype('int16'), [11, 15, 1]), ), 0)
call_6173 = relay.TupleGetItem(func_200_call(relay.reshape(const_6172.astype('int16'), [11, 15, 1]), relay.reshape(const_6172.astype('int16'), [11, 15, 1]), ), 0)
func_1266_call = mod.get_global_var('func_1266')
func_1268_call = mutated_mod.get_global_var('func_1268')
call_6176 = relay.TupleGetItem(func_1266_call(), 2)
call_6177 = relay.TupleGetItem(func_1268_call(), 2)
func_3699_call = mod.get_global_var('func_3699')
func_3702_call = mutated_mod.get_global_var('func_3702')
var_6204 = relay.var("var_6204", dtype = "float32", shape = (16,))#candidate|6204|(16,)|var|float32
const_6205 = relay.const([[-6,-5,2,5,-5,-6,-5,6,-2,2,-3,5,5,10,9,1,8,-6,-3,-2,9,-7,-3,-8,4,-9,4,-8,8,-2,-9,4,3,6,1,4,-8,-2,4,5,3,6,8,8,-5,4,-3,9,-10,-2,7,-1,-7,-7,7,10,8,9,1,1,-8,-7,-7,9,-5,8,-6,-6,-2,-5,-5,-8,10,-8,-5,-4,5,-5,10,-10,4,-7,-7,-5,-6,-9,-5,5,-6,-8,-3,5,-6,2,4,-2,-10,-3,2,7,8,10,-4,-3,-9,3,-5,-1,9,-8,-5,-5,9,-3,4,10,7,9,8,-6,-5,8,7,1,-3,3,9,-3,4,1,8,-1,-5,10,4,-10,-5,9,10,-10,-6,10,-8,6,-3,-9,-10,7,5,-7,-3,10,-7,-10,6,9,10,9,-4,-2,-4,9,-3,7,6,-7,-3,7,-3,-5,4,2,3,5,-8,6,8,-6,-2,9,9,6,-4,-9,7,-7,-8,-8,4,-2,-10,4,4,1,5,5,-7,-3,4,-7,6,6,4,-6,-9,1,-7,-9,7,8,-1,3,5,-6,-9,-2,8,-8,-3,-1,3,4,-6,-2,5,4,-6,-4,4,10,5,-10,-3,7,5,10,7,9,-9,6,-2,1,-9,8,7,1,-3,8,9,2,1,-1,6,-4,2,2,-2,3,10,-9,3,-2,8,4,3,-1,-8,5,-4,-10,8,-2,6,4,-1,6,10,4,-8,-3,-4,7,7,-5,-10,-9,8,-9,-1,2,-5,-9,8,10,10,9,10,-6,-10,9,-8,10,-4,-2,-1,6,-5,-10,-8,9,6,4,5,-4,-10,5,-3,-6,4,-1,-4,-3,-4,2,-3,-2,10,-4,5,-10,-3,3,-1,-5,6,-4,-3,-9,-9,-10,3,-3,5,8,9,5,4,-10,-8,2,10,-6,2,-1,8,5,-1,-4,10,-8,-9,-1,-2,6,7,-6,3,-10,-9,5,-4,7,-3,-4,3,1,5,-3,-4,-9,-8,-8,6,5,10,-3,2,-2,2,-9,-7,7,4,-1,10,1,-4,10,-8,-5,4,-5,-9,3,-4,-6,-3,-5,2,7,-7,-9,-9,10,3,8,-3,-4,-1,-4,7,5,1,-7,7,5,2,2,-5,9,-10,-5,-9,7,-6,-4,-1,5,1,4,-5,2,5,9,8,7,-4,-1,3,-4,9,4,-8,-3,-10,-7,-8,-4,-6,-4,-2,4,-5,-10,5,7,-3,3,9,-8,-4,6,7,6,5,-10,3,3,-1,6,9,9,4,1,9,-6,6,5,-2,-7,-1,1,10,-9,9,4,-1,-7,-6,-10,-8,8,-8,9,3,6,2,-7,-3,3,4,-9,-2,-9,5,-3,-8,8,5,-6,3,4,1,-6,-10,6,6,-8,-4,-7,8,1,-5,2,8,2,-1,-5,-8,7,-1,1,-10,8,-5,10,-6,-9,-4,3,-10,1,1,-4,-8,8,-5,7,-9,-7,9,-8,-2,8,-2,6,-7,-5,-3,-9,1,-10,-8,10,-3,2,8,-9,-8,6,9,4,-9,4,8,-4,-9,-3,-3,-4,4,10,-5,2,-5,5,-8,-10,8,2,-5,6,3,3,-4,4,-1,10,3,-3,-8,-6,7,-7,10,-2,-6,-3,8,8,-2,-2,9,3,5,2,-2,2,-6,8,-10,3,1,-6,-3,-2,7,10,-9,-7,6,-8,10,2,10,-2,-10,-6,-4,-1,7,1,-9,-9,5,3,-5,-2,10,1,-3,2,-1,-6,3,1,1,3,7,10,-5,-3,-1,-7,8,3,-2,-7,-3,9,8,-5,4,-1,-9,-2,4,-5,10,-8,-10,2,-7,-7,9,8,8,10,-1,-2,2,5,9,10,3,-10,8,7,8,-8,1,-8,-9,-8,9,-1,6,-8,-7,6,8,-3,7,-4,3,4,5,-1,-10,7,3,-2,-3,7,1,-7,9,-5,-9,1,-8,6,-5,-10,-9,4,-4,-2,9,6,-3,6,5,10,10,-6,6,-4,2,-8,2,5,-2,-4,8,-10,-2,-5,-10,1,-8,-10,10,7,-9,-4,-1,-8,8,4,1,7,2,2,-8,-2,1,-3,6,-4,-7,10,7,-2,2,-1,10,8,-1,-2,5,-5,5,-9,8,-10,10,-6,7,-4,-2,4,2,-1,-4,1,-8,8,-4,6,10,10,3,-9,-2,1,-9,-7,7,-5,3,-2,2,-4,-9,-10,-6,1,4,2,-4,-3,8,-5,8,-7,5,1,1,4,8,1,4,-5,-3,-6,2,1,9,-6,-7,9,-2,1,-8,5,9,-1,-7,3,7,-8,-1,10,6,-7,1,-5,6,8,1,1,-1,-4,1,10,-7,7,-7,7,5,6,-2,10,-9,4,-4,-1,-9,7,4,-8,-8,-8,5,8,-3,-7,7,3,-6,5,3,-8,3,-4,5,-8,8,7,3,-3,-2,-9,6,5,2,5,-8,-10,8,-7,-6,5,-1,5,-2,10,9,-2,-5,10,-9,-3,-7,7,6,10,7,6,-10,1,1,5,-3,6,6,-3,10,1,10,-5,-1,8,10,7,-5,1,2,-6,3,-10,10,5,3,7,5,10,7,-6,-4,-7,5,-6,6,-3,6,9,9,5,-1,5,-6,-3,-5,-10,-6,-9,-4,8,-9,-10,-4,-10,-2,-5,7,10,7,4,2,2,-10,-9,-9,6,-9,10,5,8,-5,2,-5,5,6,5,-5,6,-1,2,5,6,6,7,8,-1,-10,-4,5,-8,-9,9,-3,9,-1,4,3,-9,-9,-2,-6,7,8,-3,-9,2,-8,-1,-7,5,-5,5,10,-9,-4,6,-6,6,-4,-6,1,-2,10,-8,-8,-6,-5,-3,7,-3,-4,9,-2,3,3,3,-7,1,-2,6,-5,5,5,4,-9,-3,6,3,8,-7,3,-4,-5,-10,5,7,8,9,-7,5,10,8,-1,-7,5,7,2,-2,6,3,8,3,-1,9,-3,-5,2,10,-6,-10,1,-1,-1,-1,5,-10,6,-8,6,-9,4,4,9,9,3,8,-1,6,-4,-10,-2,3,-6,7,10,10,1,-10,-10,-8,8,-6,5,-10,-10,7,3,-2,-10,-10,6,-4,4,9,-3,-8,1,2,7,-4,-4,-10,10,5,-2,2,-5,-7,10,-6,3,8,7,9,-3,10,5,-6,4,6,-6,-6,-7,-1,-10,-2,10,-6,-9,10,9,1,2,8,-9,-3,-5,8,-3,8,6,6,-1,3,-7,-2,-5,-10,-10,-4,-5,6,6,-1,-2,4,-1,6,-5,2,3,8,-8,-6,9,9,-7,-5,8,-5,8,-10,2,-3,-4,10,-10,7,9,10,5,3,2,-6,7,-1,-1,-4,-7,-1,-3,-10,9,2,-3,7,2,8,9,4,-5,9,-6,-8,-1,3,2,-8,3,1,2,1,-10,-10,3,3,1,-4,8,-1,5,-2,9,7,9,5,-8,7,-7,4,-3,10,2,2,-7,8,6,8,1,-7,-3,-4,-1,6,-10,-8,1,6,3,3,10,4,3,-3,-5,-5,-5,9,1,-3,-8,-3,-8,-2,6,3,-9,2,-6,8,-7,2,-3,-7,-6,7,-1,3,-9,10,-2,-1,-9,5,-10]], dtype = "uint16")#candidate|6205|(1, 1365)|const|uint16
call_6203 = relay.TupleGetItem(func_3699_call(relay.reshape(var_6204.astype('float32'), [2, 8, 1]), relay.reshape(const_6205.astype('uint16'), [1365,]), ), 0)
call_6206 = relay.TupleGetItem(func_3702_call(relay.reshape(var_6204.astype('float32'), [2, 8, 1]), relay.reshape(const_6205.astype('uint16'), [1365,]), ), 0)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_6207 = relay.TupleGetItem(func_4496_call(), 1)
call_6208 = relay.TupleGetItem(func_4497_call(), 1)
func_2633_call = mod.get_global_var('func_2633')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_6211 = relay.TupleGetItem(func_2633_call(), 0)
call_6212 = relay.TupleGetItem(func_2635_call(), 0)
output = relay.Tuple([uop_6166,call_6171,const_6172,call_6176,call_6203,var_6204,const_6205,call_6207,call_6211,])
output2 = relay.Tuple([uop_6168,call_6173,const_6172,call_6177,call_6206,var_6204,const_6205,call_6208,call_6212,])
func_6239 = relay.Function([var_6204,], output)
mod['func_6239'] = func_6239
mod = relay.transform.InferType()(mod)
var_6240 = relay.var("var_6240", dtype = "float32", shape = (16,))#candidate|6240|(16,)|var|float32
output = func_6239(var_6240)
func_6241 = relay.Function([var_6240], output)
mutated_mod['func_6241'] = func_6241
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6271 = relay.var("var_6271", dtype = "float32", shape = (3, 12, 2))#candidate|6271|(3, 12, 2)|var|float32
uop_6272 = relay.rsqrt(var_6271.astype('float32')) # shape=(3, 12, 2)
uop_6283 = relay.exp(var_6271.astype('float32')) # shape=(3, 12, 2)
uop_6292 = relay.cos(uop_6283.astype('float64')) # shape=(3, 12, 2)
bop_6299 = relay.less(uop_6283.astype('bool'), relay.reshape(var_6271.astype('bool'), relay.shape_of(uop_6283))) # shape=(3, 12, 2)
output = relay.Tuple([uop_6272,uop_6292,bop_6299,])
output2 = relay.Tuple([uop_6272,uop_6292,bop_6299,])
func_6304 = relay.Function([var_6271,], output)
mod['func_6304'] = func_6304
mod = relay.transform.InferType()(mod)
mutated_mod['func_6304'] = func_6304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6305 = relay.var("var_6305", dtype = "float32", shape = (3, 12, 2))#candidate|6305|(3, 12, 2)|var|float32
func_6304_call = mutated_mod.get_global_var('func_6304')
call_6306 = func_6304_call(var_6305)
output = call_6306
func_6307 = relay.Function([var_6305], output)
mutated_mod['func_6307'] = func_6307
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6340 = relay.const([[[7.808984,-5.152737,9.319574,0.258958,2.592212,-6.614918,-6.672089]],[[7.795522,-0.523573,-5.534859,-3.477990,8.905434,9.513035,3.599683]],[[-7.921605,-5.574095,7.914412,5.654768,8.511684,0.858267,4.748106]],[[-9.917681,-6.041559,-5.999797,3.445727,9.018675,-6.990163,-1.132082]],[[-2.965447,-2.401361,-1.802627,-5.352333,5.767485,-8.407778,-6.865899]],[[6.112789,-8.740610,-6.592430,-9.253780,8.153630,7.257719,0.783105]],[[7.937547,-3.485680,3.292963,-1.846587,9.301203,6.379717,7.898535]]], dtype = "float32")#candidate|6340|(7, 1, 7)|const|float32
uop_6341 = relay.sigmoid(const_6340.astype('float32')) # shape=(7, 1, 7)
bop_6360 = relay.bitwise_or(uop_6341.astype('uint64'), relay.reshape(const_6340.astype('uint64'), relay.shape_of(uop_6341))) # shape=(7, 1, 7)
uop_6365 = relay.tan(uop_6341.astype('float64')) # shape=(7, 1, 7)
output = relay.Tuple([bop_6360,uop_6365,])
output2 = relay.Tuple([bop_6360,uop_6365,])
func_6375 = relay.Function([], output)
mod['func_6375'] = func_6375
mod = relay.transform.InferType()(mod)
output = func_6375()
func_6376 = relay.Function([], output)
mutated_mod['func_6376'] = func_6376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4531_call = mod.get_global_var('func_4531')
func_4532_call = mutated_mod.get_global_var('func_4532')
call_6401 = relay.TupleGetItem(func_4531_call(), 0)
call_6402 = relay.TupleGetItem(func_4532_call(), 0)
func_4452_call = mod.get_global_var('func_4452')
func_4456_call = mutated_mod.get_global_var('func_4456')
const_6406 = relay.const([3,7,-10,-8,-2,-10,-9,-7,9,-10,-7,-3,8,10,-6,-4,7,-5,-6,10,3,-1,10,-7,8,-5,4,9,-6,9,-6,-3,6,-9,-2,10,-8,10,-1,-9,2,5,4,9,4,5,3,-2,7,3,10,-7,-4,-8,-1,5,3,-9,-3,10,-8,-7,3,2,-3,-1,6,-3,2,7,-2,-7,10,3,-6,-3,10,-5,-1,2,2,7,1,10,3,7,8,10,9,3,8,10,-6,-2,-2,1,10,-1,7,-2,-9,-6,2,6,9,5,-5,-7,9,-10,-6,6,8,-6,-1,7,-7,8,9,1,3,-7,-2,-9,-6,4,9,-7,-7,4,-1,-7,-6,-10,-9,2,6,8,6,10,6,3,2,-2,4,7,9,-4,1,7,-4,9,2,7,-5,-9,1,-6,-5,3,4,-5,-8,-5,2,6,-5,-7,2,-5,2,-8,8,-7,-10,-2,-2,9,-5,-6,8,-4,-7,-10,-4,-6,8,9,-7,9,-7,-6,-8,-9,-9,2,7,10,7,-4,2,-9,-5,-6,-7,4,10,4,-2,2,8,-9,-10,-10,9,-9,-8,-3,1,7,-8,3,-10,-5,10,6,-1,-4,5,7,-9,-9,9,10,-5,7,10,1,-8,6,4,-9,-10,6,-8,1,1,6,4,-9,5,-2,7,8,-2,7,-8,-2,9,4,-3,7,-5,-4,-9,7,9,2,5,-3,-6,-4,7,3,-6,-5,3,2,7,6,9,1,-5,5,-4,-8,9,5,7,-5,-6,-1,4,-7,-1,6,-8,-7,-3,4,1,8,-3,-7,2,5,-4,-6,-2,-9,6,1,4,1,-2,-5,-9,4,-5,-4,5,-4,6,7,-3,-10,-2,6,-1,-3,4,-8,8,-6,-7,1], dtype = "int32")#candidate|6406|(336,)|const|int32
call_6405 = relay.TupleGetItem(func_4452_call(relay.reshape(const_6406.astype('int32'), [4, 12, 7]), relay.reshape(const_6406.astype('float32'), [4, 12, 7]), relay.reshape(call_6401.astype('float64'), [50,]), ), 5)
call_6407 = relay.TupleGetItem(func_4456_call(relay.reshape(const_6406.astype('int32'), [4, 12, 7]), relay.reshape(const_6406.astype('float32'), [4, 12, 7]), relay.reshape(call_6401.astype('float64'), [50,]), ), 5)
uop_6408 = relay.asinh(const_6406.astype('float64')) # shape=(336,)
output = relay.Tuple([call_6401,call_6405,uop_6408,])
output2 = relay.Tuple([call_6402,call_6407,uop_6408,])
func_6411 = relay.Function([], output)
mod['func_6411'] = func_6411
mod = relay.transform.InferType()(mod)
output = func_6411()
func_6412 = relay.Function([], output)
mutated_mod['func_6412'] = func_6412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6413 = relay.var("var_6413", dtype = "float64", shape = (11, 16, 13))#candidate|6413|(11, 16, 13)|var|float64
uop_6414 = relay.sqrt(var_6413.astype('float64')) # shape=(11, 16, 13)
bop_6443 = relay.floor_divide(uop_6414.astype('float32'), relay.reshape(var_6413.astype('float32'), relay.shape_of(uop_6414))) # shape=(11, 16, 13)
func_2633_call = mod.get_global_var('func_2633')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_6459 = relay.TupleGetItem(func_2633_call(), 0)
call_6460 = relay.TupleGetItem(func_2635_call(), 0)
output = relay.Tuple([bop_6443,call_6459,])
output2 = relay.Tuple([bop_6443,call_6460,])
func_6480 = relay.Function([var_6413,], output)
mod['func_6480'] = func_6480
mod = relay.transform.InferType()(mod)
mutated_mod['func_6480'] = func_6480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6481 = relay.var("var_6481", dtype = "float64", shape = (11, 16, 13))#candidate|6481|(11, 16, 13)|var|float64
func_6480_call = mutated_mod.get_global_var('func_6480')
call_6482 = func_6480_call(var_6481)
output = call_6482
func_6483 = relay.Function([var_6481], output)
mutated_mod['func_6483'] = func_6483
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6485 = relay.const([[[-7.554308,3.741205,3.690161,-6.037506,-0.243613,-8.479682,4.547122,3.732999,-2.867982,-0.010801,-5.338447,-3.375026,-1.397163,0.729742],[-5.671739,-6.445885,-6.420081,1.860770,9.965154,2.625504,1.816287,-8.934717,8.802806,3.511116,7.392257,2.342044,-4.830335,4.193753],[4.794642,-9.580181,-8.754732,6.858098,-2.181633,-3.199123,-9.079454,1.913331,3.504676,-7.072238,-5.291790,-8.894735,-5.322505,3.899544]],[[-9.998809,3.028165,-3.862488,7.923730,-6.483869,4.364252,0.430678,-7.817453,3.483584,-2.900226,1.199692,-1.241214,-8.067183,-9.696225],[-6.203774,-2.240527,-0.149208,-3.340099,4.188354,0.149356,-3.168529,-9.746034,-3.721828,-4.147662,-4.924368,-1.261896,3.642147,3.270122],[-5.497348,-5.908307,-6.773106,4.886362,1.289286,2.084231,1.893607,-4.801362,9.090479,1.608011,-7.829031,4.520794,-2.702824,-5.659432]],[[-8.421031,-9.448938,8.874689,8.656863,7.784683,2.766506,1.368947,0.661222,0.449132,-1.808585,-2.649938,8.636958,1.284079,5.565648],[-8.115839,-8.722718,-7.703773,7.006060,9.661942,3.141440,1.610160,7.305973,9.948048,9.250761,2.398031,2.891012,-4.094167,-0.567607],[1.824772,4.460700,4.562639,8.070386,-2.788759,-3.071776,4.044213,-8.239640,-8.962514,6.430755,-6.829092,-4.475475,0.032427,8.623223]],[[-6.883784,7.566403,-4.216686,-5.944989,-2.546085,8.987418,-2.445483,7.162630,7.999221,1.771693,1.795562,3.263954,6.739938,9.808128],[5.281419,-0.222865,-1.356793,9.638171,1.844380,6.676789,2.702690,-1.430628,-2.252678,-9.318618,-1.967377,7.236343,-6.311712,8.003353],[-9.028556,-9.948412,-7.915451,-4.862203,2.825440,9.276757,7.482605,-0.961570,9.781898,-8.273842,-5.034264,8.711254,-6.095000,2.333643]],[[8.946706,5.173672,5.261531,9.763009,-3.139862,2.652495,8.377918,-1.512201,6.671925,-4.424222,-0.588441,-1.019506,3.073172,0.270023],[-1.193291,-9.325293,1.004006,1.460597,-8.516830,-5.639587,-6.609309,-5.829103,-6.011866,-5.160317,4.837130,-4.023913,-1.083468,5.825554],[-8.161153,7.291408,1.468666,-1.299007,8.791662,5.893011,-4.647384,8.199756,0.260050,1.712963,-5.251071,5.758167,-8.874509,5.850680]]], dtype = "float32")#candidate|6485|(5, 3, 14)|const|float32
uop_6486 = relay.rsqrt(const_6485.astype('float32')) # shape=(5, 3, 14)
uop_6489 = relay.log(uop_6486.astype('float32')) # shape=(5, 3, 14)
uop_6494 = relay.sinh(const_6485.astype('float32')) # shape=(5, 3, 14)
output = relay.Tuple([uop_6489,uop_6494,])
output2 = relay.Tuple([uop_6489,uop_6494,])
func_6506 = relay.Function([], output)
mod['func_6506'] = func_6506
mod = relay.transform.InferType()(mod)
output = func_6506()
func_6507 = relay.Function([], output)
mutated_mod['func_6507'] = func_6507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1732_call = mod.get_global_var('func_1732')
func_1733_call = mutated_mod.get_global_var('func_1733')
call_6525 = func_1732_call()
call_6526 = func_1732_call()
func_3224_call = mod.get_global_var('func_3224')
func_3226_call = mutated_mod.get_global_var('func_3226')
const_6530 = relay.const([-4,-9,-10,7,-6,5,7,-9,5,-1,-8,3,3,10,-6,6,-9,-3,5,6,-3,9,-6,4,4,8,-4,3,-4,7,-9,10,-7,-6,-6,-6,-5,1,-5,-3,-10,-8,-9,-2,-5,2,2,-1,8,-5,-2,-5,6,-8,-3,-10,1,9,-3,2,-2,2,-10,-4,2,5,10,3,-8,-1,-2,-3,-10,-5,-3,-1,-3,8,-7,2,-4,5,6,4,-9,-2,5,-7,10,-10,-9,8,5,3,-2,1,-1,2,6,-9,10,-9,-9,-1,-6,-1,-1,7,9,-8,-7,9,-7,5,-6,10,8,-2,-6,5,2,-9,9,9,-7,8,-5,-2,-7,-6,1,-10,7,-5,3,-9,8,-7,3,4,2,4,9,10,4,9,-3,-6,1,7,3,-10,-3,7,-5,-8,3,4,9,-9,1,-8,-9,9,6], dtype = "int16")#candidate|6530|(165,)|const|int16
call_6529 = relay.TupleGetItem(func_3224_call(relay.reshape(const_6530.astype('int16'), [165,])), 0)
call_6531 = relay.TupleGetItem(func_3226_call(relay.reshape(const_6530.astype('int16'), [165,])), 0)
output = relay.Tuple([call_6525,call_6529,const_6530,])
output2 = relay.Tuple([call_6526,call_6531,const_6530,])
func_6534 = relay.Function([], output)
mod['func_6534'] = func_6534
mod = relay.transform.InferType()(mod)
output = func_6534()
func_6535 = relay.Function([], output)
mutated_mod['func_6535'] = func_6535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4531_call = mod.get_global_var('func_4531')
func_4532_call = mutated_mod.get_global_var('func_4532')
call_6569 = relay.TupleGetItem(func_4531_call(), 0)
call_6570 = relay.TupleGetItem(func_4532_call(), 0)
func_6304_call = mod.get_global_var('func_6304')
func_6307_call = mutated_mod.get_global_var('func_6307')
const_6581 = relay.const([[-1.677396,-1.968557,-9.620881,-6.451939,-0.110974,9.882897,-5.911286,-1.340889,-1.278556,-3.468039,8.835005,-7.023491],[8.715136,-4.943707,-6.437518,-2.898771,3.118348,7.413801,9.795801,-2.113761,9.541746,-4.658883,6.430292,-4.813657],[-0.200184,-0.090247,3.228583,4.427742,8.019974,-5.948997,9.221743,-6.469359,0.421660,-8.307526,7.829705,-7.553201],[-5.687697,-5.617779,1.906162,-1.147442,6.029646,-0.831151,2.570879,2.148167,3.074933,-8.787341,-5.480873,7.056313],[0.301627,-3.942987,5.987862,3.924845,1.391143,2.693413,-9.591235,-8.399380,0.348408,-8.445767,-1.718074,1.662203],[2.683169,-9.831631,-7.355502,-4.819030,-3.949914,-1.029696,9.990044,3.750548,3.376854,-3.087983,-1.635125,0.464626]], dtype = "float32")#candidate|6581|(6, 12)|const|float32
call_6580 = relay.TupleGetItem(func_6304_call(relay.reshape(const_6581.astype('float32'), [3, 12, 2])), 0)
call_6582 = relay.TupleGetItem(func_6307_call(relay.reshape(const_6581.astype('float32'), [3, 12, 2])), 0)
func_1639_call = mod.get_global_var('func_1639')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_6585 = relay.const([0.242586,-2.906725,3.211233,-1.544603,-5.449355,-5.668228,-1.157145,-8.958668,5.930831,7.009724,6.077368,-1.125226,-5.972844,-5.318877,-5.515169,1.232579,-7.782350,4.411021,-4.331619,-2.555340,0.597031,-1.625556,-1.797784,5.148133,-4.739751,-7.034751,-4.535331,2.672612,-9.441306,-6.388692,0.893154,-5.058249,4.239327,8.427269,7.897662,-3.894076,4.588970,-8.355248,0.961112,4.649365,4.683282,0.926027,-2.365211,-2.788203,-3.539546,0.741845,-0.684188,8.428410,-8.245594,-7.804670,-1.648461,-0.540265,3.358436,-7.013154,7.526800,-3.618704,7.404536,-0.082321,8.803666,-8.246691,5.097639,4.673848,6.678573,-5.401516,7.354202,-5.609030,8.273924,7.523475,3.676444,-4.893824,4.283371,3.712801,-7.108873,-3.286430,9.747657,-9.429915,6.330958,-4.164405,-6.928599,-6.435834,5.063307,-5.876165,6.237595,-5.442752,7.941927,1.840981,1.291260,3.493401,-7.226063,2.247950,9.781284,3.044763,0.558612,6.715062,-9.524877,-2.251583,-6.308452,-1.647572,-7.951079,2.252208,0.257741,2.120697,3.967433,0.897845,-4.833437,6.626860,-4.194478,-4.881833,9.227344,8.398169,2.341255,4.066655,-4.426355,-1.022404,-8.235817,-0.761385,-2.161486,1.648701,6.069103,-4.733952,1.361450,0.200195,-8.400218,-9.574646,0.329409,4.412524,4.580469,8.558732,-3.284229,-1.865771,4.295935,3.851994,-6.731715,7.303417,1.213262,-4.490362,-7.658925,-6.601001,8.214675,-9.093264,-4.807438,-1.995059,-7.210939,-9.667716,9.050409,-0.513206,7.378401,-1.372088,-2.342843,6.553252,4.473706,-9.876322,8.603229,-7.361577,3.020796,-6.053345,-3.127763,7.414724,-6.096847,-8.659111,4.290012,-9.517287,-8.865114,-5.213468,-9.126989,-8.136251,3.446770,1.941995,7.808263,-0.237629,-0.675091,-7.860143,2.538406,-1.778839,9.691441,2.259470,8.350043,-2.349982,-6.676208,-6.730134,-0.277450,9.640255,5.049029,3.214321,-2.807327,-8.405192,-6.119183,-0.576869,-6.482711,2.919341,3.646284,-6.335453,-7.954181,-2.296901,-8.295541,1.189584,8.621874,-2.760636,-0.225510,7.332683,7.208880,5.486102,-5.267906,6.277766,-0.333297,2.794901,4.329171,-3.824630,-1.379996,3.144218,2.442828,9.236550,3.427696,-5.636597,7.164585,-3.235926,9.417331,-8.615817,6.683202,-6.218363,-0.594558,6.673877,-7.792914,5.096365,-3.095308,7.410735,-5.695322,-2.037316,-1.976328,2.705072,-4.171831,4.821661,6.402531,-2.986846,0.860661,2.523638,-7.531346,-7.531420,-3.903687,6.858139,-5.465300,1.756240,9.573322,-4.777795,-9.169761,-2.078499,6.735639,-6.107155,2.616639,-6.631738,6.260154,7.112695,-2.528364,-5.609041,4.720634,-8.700178,-9.820306,-5.127767,7.149908,-6.601281,-1.810206,9.795119,-9.029174,7.930573,-4.482041,-4.614652,5.670989,2.435870,9.625415,-7.334181,6.827296,-2.549117,-7.447733,8.026068,8.609642,7.939008,-0.131189,-2.308718,-1.792225,2.353008,5.703615,8.052394,7.581405,-4.232560,-6.244349,4.865194,5.776656,-9.748499,3.279117,-6.689570,5.393814,-7.065447,-9.864522,-9.007155,-7.333293,9.084696,6.624760,-2.330679,9.720737,-5.665171,-5.494722,5.452872,9.153485,2.168095,2.180995,-3.333540,-9.581653,9.371107,2.945005,3.832067,0.441312,6.733823,1.235067,6.796718,-3.511101,4.186107,2.816363,2.481716,-0.696903,4.424955,-7.785860,-9.022552,0.110489,7.345250,4.362451,-9.498190,7.210679,7.748473,-8.191773,6.961638,-1.318938,7.537172,6.397598,2.646329,8.779946,8.233399,-2.739135,-8.142388,3.264061,-1.702984,0.321221,6.715829,-5.080263,3.351798,1.771788,4.675374,2.134723,-8.218047,6.942607,-8.302676,-0.268781,-9.696284,9.856297,-4.082710,-7.891126,6.079909,-0.504715,-9.023443,-4.251321,0.801315,-9.384628,7.819905,1.192808,-3.785669,1.287932,2.102273,5.228154,-4.743252,2.728301,7.808176,9.946343,6.209086,-0.584582,-0.907880,7.378332,-0.401431,9.816014,-5.373162,1.077055,5.795110,9.901615,0.727284,2.588549,-7.861793,-7.989422,-4.752388,-1.359051,3.240844,-7.046189,4.924534,8.038214,2.003378,-1.390169,9.806287,5.856698,-1.978030,-2.866069,3.719357,-3.294448,-2.484382,4.388399,-7.167307,-4.065989,-1.132225,-5.521515,-9.720471,-2.193280,-3.628537,6.760244,-0.541168,-0.654680,-7.628163,-8.098919,-0.041383,2.824786,-9.019067,-2.428172,-8.788411,-7.700713,9.406848,9.031626,9.357405,0.089398,-7.013807,2.810076,3.395351,5.860676,-8.585655,1.664036,-2.628718,4.309201,-3.892946], dtype = "float32")#candidate|6585|(432,)|const|float32
call_6584 = relay.TupleGetItem(func_1639_call(relay.reshape(const_6585.astype('float32'), [432,])), 1)
call_6586 = relay.TupleGetItem(func_1642_call(relay.reshape(const_6585.astype('float32'), [432,])), 1)
const_6590 = relay.const([[[True,True,False,True,True],[True,True,False,True,True],[False,True,True,True,False],[True,False,False,False,True],[True,True,False,True,False]],[[True,True,False,False,False],[False,True,True,False,False],[True,True,False,True,True],[True,True,False,False,True],[False,True,True,False,True]]], dtype = "bool")#candidate|6590|(2, 5, 5)|const|bool
bop_6591 = relay.logical_or(call_6584.astype('bool'), relay.reshape(const_6590.astype('bool'), relay.shape_of(call_6584))) # shape=(2, 5, 5)
bop_6594 = relay.logical_or(call_6586.astype('bool'), relay.reshape(const_6590.astype('bool'), relay.shape_of(call_6586))) # shape=(2, 5, 5)
output = relay.Tuple([call_6569,call_6580,const_6581,const_6585,bop_6591,])
output2 = relay.Tuple([call_6570,call_6582,const_6581,const_6585,bop_6594,])
func_6606 = relay.Function([], output)
mod['func_6606'] = func_6606
mod = relay.transform.InferType()(mod)
mutated_mod['func_6606'] = func_6606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6606_call = mutated_mod.get_global_var('func_6606')
call_6607 = func_6606_call()
output = call_6607
func_6608 = relay.Function([], output)
mutated_mod['func_6608'] = func_6608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3449_call = mod.get_global_var('func_3449')
func_3450_call = mutated_mod.get_global_var('func_3450')
call_6660 = relay.TupleGetItem(func_3449_call(), 0)
call_6661 = relay.TupleGetItem(func_3450_call(), 0)
func_4637_call = mod.get_global_var('func_4637')
func_4639_call = mutated_mod.get_global_var('func_4639')
call_6669 = func_4637_call()
call_6670 = func_4637_call()
output = relay.Tuple([call_6660,call_6669,])
output2 = relay.Tuple([call_6661,call_6670,])
func_6671 = relay.Function([], output)
mod['func_6671'] = func_6671
mod = relay.transform.InferType()(mod)
output = func_6671()
func_6672 = relay.Function([], output)
mutated_mod['func_6672'] = func_6672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5039_call = mod.get_global_var('func_5039')
func_5040_call = mutated_mod.get_global_var('func_5040')
call_6690 = relay.TupleGetItem(func_5039_call(), 0)
call_6691 = relay.TupleGetItem(func_5040_call(), 0)
output = call_6690
output2 = call_6691
func_6700 = relay.Function([], output)
mod['func_6700'] = func_6700
mod = relay.transform.InferType()(mod)
output = func_6700()
func_6701 = relay.Function([], output)
mutated_mod['func_6701'] = func_6701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4752_call = mod.get_global_var('func_4752')
func_4753_call = mutated_mod.get_global_var('func_4753')
call_6732 = func_4752_call()
call_6733 = func_4752_call()
func_5718_call = mod.get_global_var('func_5718')
func_5721_call = mutated_mod.get_global_var('func_5721')
var_6740 = relay.var("var_6740", dtype = "int8", shape = (392,))#candidate|6740|(392,)|var|int8
call_6739 = relay.TupleGetItem(func_5718_call(relay.reshape(var_6740.astype('int8'), [392,])), 1)
call_6741 = relay.TupleGetItem(func_5721_call(relay.reshape(var_6740.astype('int8'), [392,])), 1)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
const_6752 = relay.const([-3.624582,5.472329,2.512820,-2.397741,5.855989,-5.534536,-3.347718,0.423121,3.127130,-1.038866,3.605221,7.066115,1.441818,0.123843,4.914431,-9.472320,-4.570718,9.575161,0.158100,-1.472385,3.768733,-2.415556,-1.959498,-3.395656,0.368288,-6.976775,-7.314487,-5.114409,8.118144,-4.272280,6.504479,3.949686,-3.914423,4.774698,-0.484861,-3.329517,-4.638330,0.834983,-2.676143,-6.367257,-0.431614,-5.664464,5.531456,-4.327323,7.067981,3.156638,9.046778,-8.670160,-7.995810,5.372698,-6.162747,-8.962712,-9.023574,0.535010,8.315761,3.378730,-8.674972,-9.282462,-2.714172,-3.471205,8.323358,-7.777563,-4.469097,-1.469620,6.252901,0.653940,4.091291,-9.159351,9.424986,-9.104458,-2.622454,-7.191397,-0.089071,-3.454289,2.687350,-9.158499,-6.636749,6.550942,6.396152,3.657720,-0.828974,-0.108355,-8.748920,0.230135,-9.342471,1.658981,6.225822,4.547455,-0.643667,7.795332,6.956853,6.065434,-9.898691,-1.552247,-8.379317,-1.090139,8.936158,3.664333,-4.456151,1.877981,-6.220058,8.334925,1.502537,6.461975,-7.255646,5.971329,-2.502643,8.992676,-8.950292,8.664575,-2.675270,3.640620,-0.410948,5.081796,2.171845,-3.090609,7.966639,-6.680675,-4.720188,3.745273,-9.313855,-2.798174,8.463865,9.139205,-9.192298,-1.290265,0.735386,-4.084495,-8.744122,-9.532512,-6.837494,-4.269652,-2.840746,-1.707476,-2.596339,8.304661,8.832058,-5.509535,2.274027,-7.554251,-0.979252,-4.674501,-6.110761,6.186340,3.843193,-5.252991,-0.224541,0.286467,4.770899,-0.631927,1.054186,-6.675214,6.320565,1.836502,8.868846,-6.488445,7.440090,9.447344,2.700974,-2.712917,-2.940449,4.179865,3.102372,4.395562,-3.734947,7.979998,4.530560,-6.873295,-5.104990,3.506809,2.818159,4.548564,1.415234,-6.914393,1.194529,9.397768,-3.079046,5.981456,2.036222,-2.807483,-3.265673,-5.201148,-3.795311,-5.230192,-1.345659,-3.518810,-2.883197,-6.191184,-4.970899,-2.026569,-5.538256,7.092588,-9.759998,-0.057683,8.789480,-9.587355,-2.851508,1.307457,9.004389,2.416727,3.637606,-0.621093,7.536900,4.615208,1.277345,-2.056185,5.812585,-0.078656,-5.040635,-4.255101,-9.536772,2.959210,9.975114,1.818611,-3.879752,-3.286648,-9.359882,7.310619,-9.554498,8.767716,4.783059,8.887291,0.732785,-1.181097,-0.752373,2.225475,0.226026,-1.723580,4.108623,-1.220376,-2.217544,1.019898,6.364056,0.187157,-6.985419,2.074769,-5.700157,-1.435696,1.414391,0.281507,8.629425,-2.773198,9.226596,4.833460,-8.665999,-6.282287,8.943802,0.248943,6.256792,-3.821935,2.488702,9.614375,-6.254084,7.218908,-2.345004,8.242937,1.503115,6.249751,-6.302587,5.238669,-7.160022,-8.162238,2.457419,-2.060938,-9.893240,-6.286782,-7.713115,6.299733,-1.977846,-0.835537,6.109629,-5.426500,6.509595,5.502031,2.906118,-1.801501,-0.287070,5.463463,-0.218176,-2.281008,-4.598979,-0.119477,-3.904472,9.091886,-1.024545,-8.804353,5.599908,-2.602715,-6.446660,4.651948,-5.149489,6.277891,-6.538669,1.030225,-5.741880,3.237260,-1.951916,9.156017,6.728111,3.038722,3.191820,3.644143,6.382955,7.692284,7.080330,6.697916,2.510120,-5.165654,8.367601,-0.922102,-6.818569,-1.953234,-5.846888,5.693299,-7.676634,8.668300,-3.057969,-4.072833,4.151569,1.860956,-9.630865,-5.471020,2.684055,0.358093,-4.821729,-8.097191,5.710163,-8.451961,6.181772,3.715178,-8.966268,9.811360,0.220918,-1.078577,3.826507,1.562216,-8.068793,3.284643,2.685905,-0.769568,4.841754,-7.639990,3.492741,-2.695291,-6.046902,-9.430442,-5.814815,-1.361856,-3.286133,-0.435980,-0.512691,7.145262,-6.566015,3.820588,-9.112355,5.416704,-1.956346,-9.608198,-0.777047,-1.925214,4.470630,-5.359440,-1.072005,8.549049,9.385867,0.999262,-4.311612,8.915601,5.565049,-2.695545,-0.220905,2.212523,6.115821,3.257161,-1.628619,-3.108926,-6.230119,-2.014516,7.064422,6.491238,2.145354,9.143879,-8.789060,-6.990352,0.649252,8.504717,8.194473,-7.221338,-2.884354,-7.967545,-1.077382,-6.340276,6.891021,7.298553,6.229470,-5.470102,8.579892,-0.999663,-9.285806,-4.963924,9.653291,9.314929,-2.211161,7.134601,6.485350,-7.924453,-9.352778,9.704304,0.185574,5.338446,1.363395,7.936340,9.307284,-6.360329,4.240487,3.054861,-5.727751,8.371644,-9.220928,-8.820511,-1.547566,1.945656,1.407206,3.538897,-9.951157,5.435209,-6.656653,-2.965792,-8.832320,7.641679,5.538536,-0.970741,0.563645,8.579167,-3.368680,-6.776130,-7.909956,-2.204842,-3.005468,-0.298780,-9.961782,-6.355958,-5.886123,-9.751193,-2.017987,-0.243695,-1.176114,7.300513,-6.968967,2.160197,-5.018810,-0.008589,-6.851674,4.400034,-7.908245,8.998212,8.320843,5.462313,-9.675841,9.324111,3.542978,9.742763,-2.206768,3.911293,9.142713,-0.960664,-7.695330,-8.118537,7.407643,8.394314,9.473332,-0.564898,6.418935,-9.644764,9.676524,-7.615949,-6.814937,-6.300525,-5.098009,5.213920,-9.629426,-8.011335,-5.422768,3.320601,-3.726905,6.028601,3.162940,-4.876863,5.742809,2.420899,-0.086603,3.995838,8.454088,-4.138526,-3.650085,7.481795,1.681050,0.081220,-5.049367,8.696105,-4.345884,-2.016749,-0.215150,-0.570848,9.388631,-9.955198,0.838267,-4.309132,2.821714,-9.515087,2.038437,-4.845244,8.821888,-5.159171,5.446548,-7.682812,2.841579,6.785584,-0.264274,5.911813,7.198229,2.013888,-9.456896,7.899533,-0.962538,8.289413,4.516233,-9.963115,0.622541,-9.175766,-7.405850,-4.099848,4.919068,9.996853,3.928289,-4.418128,-1.975083,7.198320,2.689849,-2.126235,1.066657,8.635953,-5.894471,5.306696,7.968018,-2.980770,5.951699,4.674090,-7.409045,-4.238743,1.433239,9.287079,-5.512882,-3.062417,0.898115,-0.254621,-8.630471,-2.541965,3.598878,0.424735,2.209560,0.586199,-0.020917,-8.989401,7.478967,2.390574,7.704019,1.893605,5.624497,6.045301,-9.458776,3.130861,-6.730129,7.756846,-8.113027,-5.942625,-9.301468,-5.116089,-6.811320,-0.106019,8.208499,-5.911765,-9.779911,-3.754546,-1.208715,-7.619844,2.176805,5.344060,4.945115,-4.745250,2.468860,-1.241452,-4.338844,0.999528,4.989359,-4.305999,6.556943,1.463691,-6.589536,6.674672,9.430562,-4.480748,-6.494917,-8.311176,-3.164059,6.706908,0.005665,-5.115589,-7.694278,-5.877964,6.163280,-7.878062,-5.331225,-5.623971,9.848323,8.861729,7.822582,-1.277709,6.657793,-6.122592,4.191021,-8.809104,5.608511,-8.152781,-0.537743,3.232879,5.063337,-5.067816,2.163890,3.758110,-3.152634,4.910704,-3.543206,0.371306,5.239331,2.372529,9.008904,2.318793,-6.879001,-2.031735,5.540007,-2.369712,8.491594,-2.250844,0.924040,-4.350490,-8.391521,-6.655708,8.266628,-2.975608,4.905077,4.346503,4.365619,6.108889,-0.129864,-6.716306,4.193888,-7.095381,9.105637,9.419221,-6.936738,8.554818,8.348314,2.006831,3.319146,1.554805,-4.168067,-6.634612,-7.260610,2.607314,1.358610,-2.864191,0.909023,-4.026578,6.413333,2.874692,0.776161,-2.243806,-9.038519,4.771861,4.745238,-5.372966,7.448875,-6.373763,-7.715688,-2.647339,9.136852,-9.466357,1.703148,-0.882563,-1.396692,7.058486,-7.447673,2.130908,6.013804,-9.606528,4.569288,-0.397544,2.998172,-2.517995,8.192614,-0.730596,7.998037,0.133009,7.879725,2.310363,2.052630,3.440297,-2.567608,9.036980,6.961296,7.248218,-7.627715,0.866001,-7.069742,-7.774883,-1.754768,-7.539535,5.654830,-1.483615,8.570484,4.434991,-7.409153,-8.525534,2.554526,7.389251,-5.443366,2.132825,-0.438723,-0.844664,4.384741,-7.583836,6.618882,6.597579,-4.909161,3.792952,-8.420783,4.830715,4.108579,6.994729,3.376563,5.979284,9.334705,-2.923233,1.127216,-5.163691,8.357429,-0.617537,-2.525968,-7.311924,-6.071097,-2.175207,-0.544893,5.105993,-7.934899,-6.598053,5.518698,7.266894,-1.678916,4.901995,-3.497424,-6.197843,-1.964018,5.476936,4.004232,-1.853562,0.427901,-1.276277,-0.215826,-9.853714,-1.192916,-9.501492,-4.688308,3.580267,3.761761,3.419351,-2.047773,-7.329423,-9.892737,8.231329,5.132220,6.993778,3.131140,-9.372952,-8.522595,-8.950426,2.263689,-7.648240,-5.612027,-5.200439,-7.465906,4.848698,-8.522234,-9.163541,0.959519,-0.735711,9.676482,-8.114794,6.928110,-8.711200,3.508557,-9.341090,3.506168,-6.881163,-3.102666,4.428263,-1.565041,-2.826863,-4.522246,-2.075223,-2.514019,-0.574184,-2.727809,-8.874468,3.915922,3.781926,8.322549,0.084946,5.730299,-9.042093,1.127697,-2.217661,9.187253,-3.159202,0.689180,2.922834,0.301536,3.359221,-1.361041,3.216377,-2.436998,-1.100226,-4.119013,-5.725793,-8.944211,-7.969188,7.682955,4.877896,2.357197,-9.747641,-8.206460,-2.377364,-5.968968,-3.263061,-9.247724,-1.204306,-3.349587,-5.818169,1.280076,-6.022154,-8.790211,4.085162,-6.660909,-0.220150,-8.082599,-4.638914,-9.858939,-3.232434,2.079125,-4.938700,-8.363651,-3.054857,5.377758,5.563945,-8.219705,-3.122139,-7.278829,-0.836814,2.062227,-8.198899,9.006846,-8.183264,-2.151625,-2.508899,2.663212,8.446628,-2.004698,9.043076,-1.287835,-7.744093,-0.637101,5.474274,-0.828729,0.426147,-8.994618,0.811560,3.727418,-6.756345,-2.148508,6.095783,9.532337,8.914668,-2.309547,3.236952,7.519772,4.039577,2.781493,8.578985,-4.905917,1.252170,-7.354657,9.453951,-9.133375,3.623376,-5.123375,8.239201,4.455985,7.922702,7.837731,7.184556,-6.217777,-7.211012,3.922499,5.245063,5.627838,5.528652,6.517179,5.570204,-4.459252,-2.167419,7.294790,-2.947625,-1.402225,-3.262569,-2.559634,1.029801,9.876925,-1.113729,8.442325,-4.221696,-3.630801,-1.228146,-4.941667,-4.755749,8.412657,-2.426029,-4.969283,8.022944,-7.072231,-7.729774,7.133617,-4.729639,7.392082,-4.949197,-2.878120,6.134478,-7.931164,2.149941,3.765416,3.674633,-0.222583,4.412137,-0.603942,-7.692374,4.186905,6.743760,-1.577401,3.688346,5.236241,-3.967461,-6.616309,-8.102879,2.322708,-8.147269,7.981554,2.432668,5.322138,-3.896802,-3.315170,-5.040574,2.165171,-6.783696,3.970350,-7.012787,6.846241,0.324371,-1.730596,-2.447543,5.137260,6.262669,-2.945980,-2.884879,0.151646,6.053702,9.649632,4.660738,-0.667259,-3.925460,0.029293,-5.632844,2.722364,9.155090,1.445566,-6.735353,-6.876178,-5.494003,-4.235366,-0.119120,6.403546,3.525220,0.188404,-0.644026,1.969212,-2.908896,4.776379,3.903748,-4.779937,-3.099914,2.337034,-2.352324,-7.182049,-5.690453,2.518655,1.027125,2.845519,-5.581969,1.995449,-6.804101,0.873007,-3.071809,5.566468,-7.883280,-7.065646,1.230490,1.499547,3.063468,-4.792677,-9.575346,-4.789642,3.741987,1.441541,-2.486157,-9.102278,8.261318,9.388312,-2.077456,1.341389,-1.407370,1.059779,0.995660,9.951058,8.427951,9.332488,-8.266194,9.633193,0.740333,2.425618,3.129530,-9.899537,9.556567,-8.533493,-1.466161,-2.234477,4.063343,-6.606283,-5.679547,5.080126,-8.984430,-9.708051,-8.655071,-9.451070,-2.861017,-1.841362,3.718238,-4.424026,-0.702228,-2.866554,-5.769944,-1.663530,-0.418100,0.813924,-9.577880,-0.667732,3.612464,9.580835,-1.683686,5.230478,5.662015,2.790128,-1.898282,-6.970979,-3.694666,8.019795,6.529603,1.168228,-0.177122,9.866209,2.187896,5.766787,-8.069477,0.593132,-2.225666,2.088812,-7.918905,-3.887787,-7.603113,0.415233,0.873541,9.149299,-6.577577,5.066913,0.460333,-0.859854,-2.051614,6.762766,-3.306825,-3.240182,2.125235,1.871684,-5.763295,-9.394872,-7.356124,3.624095,-5.301589,-0.320913,3.120121,-5.478049,-0.072537,-1.178821,-3.546875,7.550120,-3.906459,-7.364121,8.099692,1.736553,0.857825,-9.834843,1.285428,-3.088620,3.838226,4.758090,-6.486343,4.276374,-0.126310,7.135138,-1.333940,4.643916,-5.165866,-9.768003,7.403297,4.583456,-9.958199,-5.266549,-9.010553,8.192557,-1.270263,-4.401781,-3.954717,9.431965,4.556432,-8.129676,-9.050964,-2.816156,2.913092,-2.197594,-5.555762,5.284287,-3.532553,0.745691,-5.248621,-0.039504,9.260332,3.331691,-9.254058,-8.636948,-7.197716,6.096215,-3.083835,8.611146,0.974735,8.930728,-8.025161,-7.716212,-2.790624,7.619563,-4.364581,4.130104,-6.105705,-9.788560,-6.757745,9.387013,0.271515,9.651281,-5.858841,3.902409,-2.441670,-0.913146,2.026265,7.555881,-9.017283,2.701518,-7.631440,-1.576506,2.246192,-7.007589,6.147808,-0.768089,-0.425674,-6.796176,7.164199,-7.440646,-7.100516,-4.020170,6.966314,-4.024915,-1.487892,7.950272,-5.083347,4.078978,-9.677953,9.505468,3.296150,-5.247399,9.281852,9.536717,-5.697214,1.598072,-3.758993,-1.021744,4.121115,0.894459,-4.277921,1.109864,-6.352711,2.386172,-8.004467,-2.354134,-9.090389,7.728090,0.681707,-0.827538,7.707575,8.398063,9.121240,8.132213,-8.103825,-1.668368,8.134238,8.297476,9.669107,-9.743403,-5.041318,7.703836,4.143073,-9.847630,7.494258,-1.559095,-0.164236,-2.520669,-4.750476,2.964234,-9.001292,1.511725,1.005653,2.828798,0.872263,-1.593287,-9.345047,2.909533,-2.582422,5.565174,-4.659858,-6.186336,9.380057,0.987194,4.995900,-1.751635,-6.482963,9.029362,-9.717105,-5.148185,0.946379,9.356769,3.327870,2.374513,6.633219,6.694186,4.667924,-5.648603,3.374999,-1.840290,-6.010002,-3.776735,-1.025233,-6.875271,3.533436,4.569128,0.602901,-5.745374,2.847046,2.014456,-3.088604,-7.497212,-4.667950,-8.103690,-9.716288,-5.584595,9.312639,-4.524931,1.573666,8.808502,9.089816,3.129778,2.678177,8.408496,7.051492,6.602017,-9.285528,5.220899,6.009664,-4.285412,-4.824873,-0.187270,4.397495,-3.921692,-3.639612,5.855383,-4.724337,-1.476836,7.582944,-2.576846,-1.863393,-8.204543,6.033005,-1.093406,-4.126430,5.567434,7.832442,-7.709117,-1.426328,9.792378,-3.139323,-5.565510,0.616451,1.061213,4.527512,-5.946237,5.613715,-5.543507,-4.192587,7.334600,3.612056,-8.252160,5.572479,4.505412,4.078248,-0.432125,-1.790117,-9.851966,2.650685,-9.130544,2.526036,9.086467,1.727801,8.556594,-8.320668,-1.094374,8.938418,-8.433338,-9.175592,-5.390232,0.807519,8.027939,-8.137432,0.617111,1.795114,-9.503080,-4.407806,-6.821062,1.444159,-2.751057,-2.714240,5.701374,1.026248,-0.272252,2.032933,2.611727,2.243614,-6.301827,-6.882915,-6.281074,0.803930,-7.280967,-9.413359,-3.685819,-0.165692,1.668398,4.848149,7.902383,-1.270897,-0.630203,-5.161187,-3.930782,8.638460,5.758085,9.646929,6.186351,-6.806298,-3.877729,-9.401870,-0.579494,7.892585,-5.922626,-5.515785,1.891417,6.759143,6.315664,4.568687,-7.109812,-0.384613,-4.254525,2.107578,1.068956,1.277521,-3.597004,-3.072963,9.713140,-0.384341,-5.360968,9.223625,4.296581,-0.016121,-3.184065,4.472463,-5.617666,9.652433,9.998456,-1.573867,-4.449695,-3.801454,-8.486889,-7.021150,5.490064,7.298476,6.075285,0.990035,0.802677,9.389158,-9.643778,-8.424987,6.623283,9.195828,-0.995555,8.582265,-2.912743,5.304403,-1.850430,-2.038359,-8.761599,5.801543,-6.677134,7.312959,-2.822998,9.397700,8.757073,2.234470,8.194877,4.294377,2.432817,7.490876,-4.489275,-2.553443,-5.886356,-5.973755,-3.625129,-6.496720,5.372637,-3.682083,4.613841,-3.908707,-0.391713,4.506212,-0.794998,1.704683,6.160727,1.560552,-2.749443,-8.310863,-6.396829,6.233734,-3.578092,5.221117,6.587545,-3.120492,-7.197985,9.872111,-7.668642,-8.880831,8.247200,-5.620632,-0.898880,8.630801,4.963009,5.684646,-3.400389,-0.056010,1.875837,-4.980245,-9.735392,5.015060,8.157298,5.463939,7.493401,1.356467,4.433415,5.394168,6.913948,-3.124881,-7.212599,0.498725,7.315964,1.117389,9.486173,6.682988,-1.012685,-7.111304,-0.686327,-3.853071,-4.848996,-7.080259,2.048903,1.131031,-3.665229,-6.110406,-1.930753,-3.306862,2.256764,-6.784310,0.709074,-9.021750,-7.328809,-4.278852,-8.674514,-5.210606,-7.878519,1.930612,-5.957664,-9.712333,-3.152403,3.760034,-4.722455,-6.616427,0.370527,7.570694,9.860186,4.544227,-3.874100,-4.822063,-5.154436,4.317973,0.107188,-6.740432,-5.902304,4.632452,8.820158,4.357083,-4.517758,-3.586409,-3.979904,-5.398477,8.093762,0.115595,8.842001,3.360753,-7.411192,-2.238877,7.164843,8.892299,-0.950022,-4.804795,7.135984,0.656677,-2.083286,4.483835,6.881095,-3.968292,8.103869,6.828155,8.538550,-1.342810,4.653019,4.232326,-8.852434,-5.419299,4.075742,-1.568246,-8.137593,-0.628120,4.205664,0.075797,-2.139694,-9.098592,0.411581,-4.393921,-1.654349,-8.375540,-9.861989,-6.414708,-8.799617,2.517449,7.279020,-2.165235,7.915737,-2.749656,4.827213,-1.204995,4.658014,7.162546,-4.035632,7.536525,8.581777,-0.761396,-0.343489,-6.298515,-2.621140,-1.732702,2.226862,7.996206,-9.188185,-4.120561,-6.329910,7.466313,7.437743,-7.315970,-7.716692,-6.141290,-0.068300,0.806099,0.853845,1.281916,3.782335,9.761995,2.975148,-4.529973,8.294540,3.638095,8.916729,7.238035,5.124013,-5.915436,-8.472986,2.426454,6.327180,1.365230,-7.342415,-4.264313,-1.592277,3.311131,8.633824,7.663744,-9.015888,-9.426590,2.339237,-1.145884,6.887055,1.331095,8.463537,-7.512148,0.111045,5.488355,3.756559,-2.956806,4.782747,8.300589,1.924002,4.577860,7.708973,1.166691,-3.830938,3.918144,-0.845234,9.372735,-0.318324,-6.120405,7.379594,9.611127,-6.121258,-3.427584,5.195750,-1.810611,5.905198,-6.197021,5.371025,3.008515,4.217825,7.552205,7.663322,1.654691,7.150707,-5.843780,4.628014,0.441574,8.775285,-7.935238,2.875762,9.207393,-7.256182,3.288774,9.275707,6.416824,2.626303,-7.480007,6.006653,-7.993858,5.546171,5.071813,7.455639,-3.866421,2.855216,3.300128,1.963612,7.227018,7.036225,5.641963,0.580055,7.763041,-9.976286,-3.574195,-5.797898,-4.402148,0.472610,-3.769399,-9.074175,0.093651,0.236509,-6.684291,6.571104,7.348052,-5.155257,7.583638,9.190463,-8.708297,-9.233574,-8.770657,-7.143447,-7.171127,-4.162943,-0.781283,-5.807692,-4.817010,-0.775347,-0.020498,-2.940862,-7.133178,7.644153,2.104189,9.697530,-5.178374,-3.014799,-8.785496,1.988176,-0.296189,8.503024,-8.684682,-4.419188,-4.065312,1.090729,-5.101847,-0.236222,-8.932065,-8.060261,-4.274750,2.641582,2.552905,0.936876,-7.907397,-5.625231,4.292851,8.056843,3.535792,-9.745840,8.368392,1.127205,-3.791669,-4.273380,5.115017,-0.910530,-3.067930,-4.401676,2.473111,1.016093,-3.230494,-8.071634,-3.430943,2.109613,6.495989,0.480519,5.206218,-7.796079,-8.089077,-9.438984,0.736954,2.556547,-7.546543,3.660871,-7.996416,-6.737625,-2.771325,-5.555379,-9.185810,5.064886,4.378514,-7.592960,1.636977,-0.808925,-0.633837,8.471344,0.291122,2.430107,-0.255428,3.574440,-7.818383,6.074242,-4.348769,3.995997,0.211526,-9.100235,9.570632,0.630347,2.930420,-6.288384,-2.290511,7.807977,-5.744312,2.510774,6.875006,2.774318,-1.344644,5.616952,-8.110714,-0.164861,8.088116,5.150956,3.088177,0.879294,-8.038709,-2.663627,1.531810,0.601073,9.885798,-6.161862,6.752644,-6.971096,-9.026438,2.255407,-5.132971,-4.603919,-4.141832,-3.761377,-8.548328,6.358862,5.896467,0.498060,2.653313,-7.357681,0.632865,-5.233310,4.546441,0.445615,-6.930576,-4.960009,-9.479346,-3.720000,-9.091343,-5.246287,-3.924617,-7.306601,-7.370334,-1.185993,-6.030183,-6.293178,3.154266,-7.051017,6.904675,-0.047615,-7.062408,-5.038381,9.295372,-5.555149,0.403969,-0.314353,-8.026602,8.426022,-3.205263,-8.341140,-9.868593,-7.220231,3.005244,-1.266472,-8.931736,-5.809694,-7.380390,5.836802,6.431831,6.256973,9.621177,-6.603644,-8.983693,-2.085756,2.606446,6.360851,9.963909,8.201748,7.181554,3.869221,-8.304363,-5.221222,-3.917906,-7.912981,7.043608,-0.130606,1.902847,-7.336335,-1.474503,-3.805139,-9.606024,4.770923,-4.495201,-7.427980,4.697285], dtype = "float32")#candidate|6752|(1920,)|const|float32
call_6751 = relay.TupleGetItem(func_3284_call(relay.reshape(const_6752.astype('float32'), [1920,])), 3)
call_6753 = relay.TupleGetItem(func_3286_call(relay.reshape(const_6752.astype('float32'), [1920,])), 3)
output = relay.Tuple([call_6732,call_6739,var_6740,call_6751,const_6752,])
output2 = relay.Tuple([call_6733,call_6741,var_6740,call_6753,const_6752,])
func_6765 = relay.Function([var_6740,], output)
mod['func_6765'] = func_6765
mod = relay.transform.InferType()(mod)
var_6766 = relay.var("var_6766", dtype = "int8", shape = (392,))#candidate|6766|(392,)|var|int8
output = func_6765(var_6766)
func_6767 = relay.Function([var_6766], output)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6411_call = mod.get_global_var('func_6411')
func_6412_call = mutated_mod.get_global_var('func_6412')
call_6787 = relay.TupleGetItem(func_6411_call(), 1)
call_6788 = relay.TupleGetItem(func_6412_call(), 1)
func_4246_call = mod.get_global_var('func_4246')
func_4247_call = mutated_mod.get_global_var('func_4247')
call_6803 = relay.TupleGetItem(func_4246_call(), 0)
call_6804 = relay.TupleGetItem(func_4247_call(), 0)
func_1566_call = mod.get_global_var('func_1566')
func_1569_call = mutated_mod.get_global_var('func_1569')
var_6811 = relay.var("var_6811", dtype = "int8", shape = (4, 1))#candidate|6811|(4, 1)|var|int8
var_6812 = relay.var("var_6812", dtype = "int8", shape = (392,))#candidate|6812|(392,)|var|int8
call_6810 = relay.TupleGetItem(func_1566_call(relay.reshape(var_6811.astype('int8'), [1, 1, 4]), relay.reshape(var_6812.astype('int8'), [7, 14, 4]), ), 0)
call_6813 = relay.TupleGetItem(func_1569_call(relay.reshape(var_6811.astype('int8'), [1, 1, 4]), relay.reshape(var_6812.astype('int8'), [7, 14, 4]), ), 0)
output = relay.Tuple([call_6787,call_6803,call_6810,var_6811,var_6812,])
output2 = relay.Tuple([call_6788,call_6804,call_6813,var_6811,var_6812,])
func_6878 = relay.Function([var_6811,var_6812,], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
var_6879 = relay.var("var_6879", dtype = "int8", shape = (4, 1))#candidate|6879|(4, 1)|var|int8
var_6880 = relay.var("var_6880", dtype = "int8", shape = (392,))#candidate|6880|(392,)|var|int8
output = func_6878(var_6879,var_6880,)
func_6881 = relay.Function([var_6879,var_6880,], output)
mutated_mod['func_6881'] = func_6881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4756_call = mod.get_global_var('func_4756')
func_4758_call = mutated_mod.get_global_var('func_4758')
call_6901 = relay.TupleGetItem(func_4756_call(), 0)
call_6902 = relay.TupleGetItem(func_4758_call(), 0)
output = call_6901
output2 = call_6902
func_6908 = relay.Function([], output)
mod['func_6908'] = func_6908
mod = relay.transform.InferType()(mod)
output = func_6908()
func_6909 = relay.Function([], output)
mutated_mod['func_6909'] = func_6909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2633_call = mod.get_global_var('func_2633')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_6954 = relay.TupleGetItem(func_2633_call(), 0)
call_6955 = relay.TupleGetItem(func_2635_call(), 0)
func_6534_call = mod.get_global_var('func_6534')
func_6535_call = mutated_mod.get_global_var('func_6535')
call_6968 = relay.TupleGetItem(func_6534_call(), 2)
call_6969 = relay.TupleGetItem(func_6535_call(), 2)
func_4182_call = mod.get_global_var('func_4182')
func_4183_call = mutated_mod.get_global_var('func_4183')
call_6970 = relay.TupleGetItem(func_4182_call(), 0)
call_6971 = relay.TupleGetItem(func_4183_call(), 0)
output = relay.Tuple([call_6954,call_6968,call_6970,])
output2 = relay.Tuple([call_6955,call_6969,call_6971,])
func_6976 = relay.Function([], output)
mod['func_6976'] = func_6976
mod = relay.transform.InferType()(mod)
mutated_mod['func_6976'] = func_6976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6976_call = mutated_mod.get_global_var('func_6976')
call_6977 = func_6976_call()
output = call_6977
func_6978 = relay.Function([], output)
mutated_mod['func_6978'] = func_6978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5495_call = mod.get_global_var('func_5495')
func_5496_call = mutated_mod.get_global_var('func_5496')
call_6981 = relay.TupleGetItem(func_5495_call(), 1)
call_6982 = relay.TupleGetItem(func_5496_call(), 1)
func_1412_call = mod.get_global_var('func_1412')
func_1415_call = mutated_mod.get_global_var('func_1415')
var_6984 = relay.var("var_6984", dtype = "float32", shape = (432,))#candidate|6984|(432,)|var|float32
call_6983 = relay.TupleGetItem(func_1412_call(relay.reshape(var_6984.astype('float32'), [9, 16, 3])), 1)
call_6985 = relay.TupleGetItem(func_1415_call(relay.reshape(var_6984.astype('float32'), [9, 16, 3])), 1)
func_5469_call = mod.get_global_var('func_5469')
func_5470_call = mutated_mod.get_global_var('func_5470')
call_7005 = relay.TupleGetItem(func_5469_call(), 1)
call_7006 = relay.TupleGetItem(func_5470_call(), 1)
const_7011 = relay.const([8.928271,-0.120110,-4.077513,1.171718,5.292628,5.959813,-0.904445,4.357894,-9.212148,2.742540,3.650226,0.951885,-5.997907,8.685519,-9.016090,-8.945566,-9.146285,6.297594,7.161944,6.565470,-1.504803,-6.300416,3.048772,-0.916105,-4.448648,8.844528,-8.793342,1.034205,8.103962,-6.959953,4.874440,-1.071349,7.900093,-5.194068,-5.379998,-0.921446,-9.483631,7.362166,-9.715671,4.799852,-7.777302,6.434216,6.183413,9.324823,1.097435,-3.968915,8.757451,-3.710756,8.451391,7.314753,-2.080521,-1.778915,-4.069615,-5.755453,-3.162415,2.502958,-7.482044,5.605174,9.499261,9.103741,-1.232699,5.466801,-3.759153,6.108231,1.138286,9.110984,-5.355220,-1.487442,-1.580782,0.564521,8.634700,6.718387,4.339790,9.255011,8.830614,8.349005,7.884858,5.494800,-0.991197,0.910733,-2.040241,-8.070611,-8.121654,8.911604,4.401447,3.617884,-0.327590,6.316145,9.226434,-0.736310,1.049841,7.435826,0.952711,-6.453542,3.223962,1.148698,-2.201282,-4.502636,-1.518298,0.704938,-6.894149,-0.185027,8.986367,6.845021,9.522464,-3.018201,8.566524,4.658218,-4.934468,6.333899,2.330366,6.257844,-7.029197,-4.444309,-8.657057,-3.022148,1.181218,1.729244,-7.996339,7.390190,-3.823382,-5.388244,3.749048,-7.636750,7.826256,4.103949,-4.622881,3.801874,-5.603084,-7.276272,2.341657,-1.651552,8.205543,-2.357156,-3.286344,8.003677,6.910962,-6.589086,4.312570,-0.208818,-8.747646,2.224386,6.771414,5.285334,0.803840,-2.191057,1.230599,1.035224,-9.697527,-8.355472,3.031877,5.777890,-4.108796,-4.527879,4.482751,-0.851887,-7.986763,-8.425105,-0.776595,-6.271260,9.408898,8.709188,4.158439,-5.116490,-0.041812,-2.495087,-9.645822,-4.888949,8.021348,5.469677,2.151582,6.734220,7.484683,9.813985,2.749224,1.309119,-7.810664,7.703488,5.823086,1.422492,0.231466,-7.724709,-2.454185,-1.872250,2.501760,-8.586632,7.275322,-4.277925,1.530937,8.581396,0.096896,-3.381781,6.994001,9.781630,5.398013,-0.726738,-9.683877,-8.119634,6.206368,2.448163,-1.503150,3.141011,8.747942,8.215193,-0.188559,6.639312,6.486076,0.264030,-6.142891,-7.017240,-1.182855,-9.687731,6.067045,9.560785,1.635947,7.780901,-7.506514,6.935038,-9.065113,-5.466159,0.143297,5.357047,7.534983,1.254847,0.667202,3.915655,-9.778443,7.389954,6.396605,-0.690816,4.433169,-3.252767,0.789564,3.717098,-9.784868,-5.326203,5.761059,8.556046,-6.975835,-2.972407,-8.163121,4.371239,0.049603,-2.534132,9.194403,6.534769,-8.474390,-7.323039,-0.826837,6.922852,-6.524619,-8.104451,9.182750,-6.903380,8.808562,-8.479893,8.387661,-6.493324,-8.694860,6.471444,-9.698221,-5.645950,-8.246478,-6.125149,-3.133515,-8.964726,2.577414,-9.418902,-7.534479,-1.130648,-1.786101,3.765163,5.073659,-2.919377,-4.992054,3.213273,0.615508,9.027012,3.663117,-3.340532,7.376969,-1.224290,7.801386,-9.097552,2.435353,1.806019,3.853052,5.283560,5.434627,-1.382018,1.012969,-6.865149,5.138381,9.523322,4.360109,-1.347666,-7.089427,0.249619,9.671733,8.344619,-3.654877,-7.425683,4.283986,-7.355821,-8.205347,-7.373024,9.033894,-5.490825,-1.421038,5.266343,5.370863,-6.377274,-1.635222,4.296289,3.042244,-2.142581,-7.723713,9.035350,6.031203,-9.333638,-8.265244,4.166993,5.629452,-3.973823,3.896430,3.897121,8.366760,-4.082086,5.599633,-8.235477,-5.089172,-2.201543,0.174359,-8.661082,-0.097496,-5.683794,5.435774,-3.475325,9.265300,-7.702889,-3.867250,3.584303,-2.031607,2.254482,-7.778066,-3.519904,-5.090729,5.022806,5.573666,-9.586562,-3.267571,-2.085334,6.593489,-8.939631,-6.154206,5.392153,-8.154300,-3.539354,3.783220,-5.470127,7.581435,-6.638196,7.348853,-2.450852,-5.846895,-4.650457,3.440758,-8.713294,5.194963,-4.325173,-1.892882,-2.897209,-4.629303,0.847790,-5.419382,2.539069,-7.129261,-6.095083,2.198724,-0.465203,8.466178,-0.944629,-5.616555,6.028749,8.180482,9.355584,-3.580023,-5.924822,-7.725300,-8.414155,4.534244,4.696657,3.437700,-2.808435,-5.685429,-7.669786,3.188287,-2.869615,-6.948850,-5.560443,1.726986,8.184063,4.250271,6.702513,4.421189,0.032960,7.611659,-0.536697,-9.223283,-7.648593,-5.208797,-3.002246,6.970771,0.977023,1.176940,-5.702095,3.582223,-1.714090,3.529522,-5.182200,7.625034,-5.778579,-4.068519,2.314941,9.779878,8.779338,5.156844,2.655426,0.168222,-0.886202,-1.082026,3.610538,-4.754404,3.621257,8.759350,-4.259882,4.898495,-1.658793,3.496193,-6.350892,5.107808,-1.991764,9.078488,4.511223,-0.680982,7.230487,-1.567502,-0.738165,-8.424151,2.412626,-9.388701,-5.767653,-6.699223,5.985948,1.853060,-5.970847,-6.500913,5.746569,-8.354814,-9.597156,-1.010256,-4.005980,-4.161923,0.771031,-4.350919,1.985957,-3.840304,-8.028970,-1.542207,-1.208649,4.533393,-2.502538,-1.744254,1.683157,-2.241071,5.598919,-3.926681,-2.605318,6.422178,7.521783,-1.529902,-5.230874,0.123744,8.848014,-8.792546,5.936933,-0.949761,6.532713,6.646333,7.889061,-7.228098,-5.363516,-8.137712,-1.633011,-1.427498,3.802049,-5.748355,9.857448,-2.276035,3.588636,-7.654115,-5.272346,-4.719681,5.186173,2.509148,6.913467,-6.577203,-2.554214,-4.987265,-1.923822,-3.910527,4.405934,8.455798,-2.879163,6.173914,-9.281483,-7.321079,-8.628040,1.271040,-0.576259,7.129926,-1.318912,6.200782,-1.788800,1.238176,-5.310701,1.520567,-8.824729,-8.331008,-3.248144,-5.446476,-8.172932,-5.322244,4.371543,-6.584939,-8.242986,-8.860202,7.925846,3.032941,3.443274,-5.564528,-5.206390,-1.256947,-3.948589,-3.091424,-0.668302,-3.465997,7.814320,-9.444054,-9.346067,1.063252,-5.552019,9.080514,0.669591,3.731045,-1.755670,7.569409,3.273066,5.104593,-3.890573,2.658129,8.435590,6.408628,-7.240560,2.824377,3.451793,2.401680,-1.069684,6.288695,7.224020,8.081828,8.910276,-0.824424,-4.806851,-6.320861,1.298008,3.419585,8.643736,-8.438118,-9.783926,-4.481121,-9.001919,1.575598,2.935749,-6.042665,-9.719528,-9.434258,-2.926148,-9.393862,-4.105059,-5.624653,-1.931871,-3.713104,-1.378802,5.711612,5.176527,-7.914476,4.236896,-2.628428,6.352888,9.218223,-3.212110,6.719892,5.922505,1.554591,-0.314359,1.958829,-2.081092,3.740615,-6.542424,0.307526,-9.907823,1.029794,-8.029750,-0.119289,0.360885,4.617457,7.666876,-8.369110,-1.687707,2.607731,5.501825,-6.567209,-0.156357,4.922795,-2.065305,-5.485701,-4.475185,9.662949,-5.322322,-4.976827,3.851830,7.976840,-3.837079,3.001993,-5.841786,-9.772497,-0.858418,8.388673,-2.568959,1.964765,2.793158,4.524588,-6.759488,-0.195742,1.244626,-9.311323,-4.933962,4.237279,9.755808,-8.416534,8.030313,-3.354413,9.573918,5.968955,-9.600624,-6.712432,-0.427448,6.915272,-0.083125,7.054233,3.173602,2.424037,-5.745716,-3.522452,7.551447,2.310762,0.215305,-3.287197,8.372890,-1.966022,8.830715,3.912297,9.823869,-2.069507,2.519760,2.844075,0.039195,-1.677053,0.923422,4.753136,5.325049,-8.267506,-6.823186,0.329138,-4.362631,2.763218,0.922741,7.698245,-6.461376,-6.013940,-0.798595,-9.913366,-0.066569,8.260750,2.070106,3.993926,1.774077,-0.828378,-1.634388,5.016068,3.495220,-1.194108,9.604767,9.737425,3.174129,2.096457,9.461306,3.993014,4.861472,-4.038906,-6.013457,5.176056,1.020165,8.970007,-5.054833,-9.647645,-8.604691,-2.652297,-7.552467,7.772365,3.623506,2.077907,-4.157745,4.962698,5.706631,-4.840113,5.202315,7.855435,7.736012,-9.063723,9.996991,-1.413169,-9.596551,-9.576313,-3.933719,-9.800265,-8.275531,4.577601,3.294613,-4.474553,-5.024791,-1.041084,3.318529,-8.298202,-2.237659,-1.150220,5.706266,9.874012,7.451545,-7.283018,6.332701,3.082064,8.053038,-2.946130,3.423154,8.083416,-0.519167,2.902279,-1.136532,-8.481493,2.662783,-2.453809,6.671651,-8.184648,7.026117,8.931119,1.747719,4.777799,9.659395,4.607081,-6.592486,-0.550632,-6.478027,-3.741878,1.383010,-8.222367,1.113629,6.270491,-7.940437,4.483683,-3.013182,0.310654,-8.496000,-1.239721,-3.323790,-8.902387,4.369829,5.633505,5.720851,-5.540883,8.676582,7.101243,2.685554,2.934764,-8.860148,-1.421821,4.542610,-3.180980,-9.134637,4.674853,0.716926,1.577176,-6.150609,-5.801214,6.147465,-2.259067,1.911733,0.340134,-6.797225,8.379689,-4.435889,-5.791992,2.306185,2.878170,6.553882,-8.281152,-4.054674,0.511075,9.189715,-8.391927,-1.459462,8.952175,-7.747933,0.563991,0.230260,4.826099,-7.929315,-7.824565,8.042019,3.005071,-5.903963,9.830853,6.177751,-7.950851,-2.717748,1.360543,9.707140,9.733031,-0.846183,3.262381,0.504519,9.057631,-2.994450,0.432525,1.999769,-6.970435,-9.347014,-9.972885,2.763806,-9.053713,-0.079734,-1.963146,-2.213543,1.775670,-2.408122,4.517848,-9.195303,8.811670,-8.563545,-0.263244,4.873517,1.543895,-5.610273,-4.961791,-4.806421,2.323924,-9.963937,2.567346,3.533275,5.082437,0.592236,8.494760,4.822654,-8.468720,7.913247,2.877838,9.202934,7.632067,0.758462,0.279281,-7.357140,-5.082698,4.255461,-3.138609,-9.895014,-7.408176,-4.736753,2.227845,6.326243,7.596814,-2.045688,9.284023,0.475153,4.158256,-5.001723,8.647902,-4.805937,-3.541151,0.427573,-4.769289,-1.999394,5.080623,1.987948,2.330203,-2.704340,2.754390,0.813623,-1.961871,9.532280,4.491013,1.467015,9.922753,-6.111096,5.454354,-2.677337,-2.414169,-0.078335,5.359289,-2.576587,-7.363082,9.082264,-4.251589,2.128841,5.063236,-0.686641,-4.606000,0.654164,4.128735,4.326829,6.424544,6.056226,7.446078,3.408356,8.584202,1.543219,-1.123460,6.244234,1.563532,-7.793629,-2.071361,-4.377023,-8.082437,-3.763006,7.295111,-6.253861,8.911509,-3.732190,7.318079,6.598413,-8.237942,5.077251,6.010080,2.764998,2.772310,5.158412,-2.171503,-3.586567,-6.306614,7.491428,7.945973,-0.176087,2.719893,6.122405,8.107122,3.197370,2.491099,-9.610475,2.856408,2.514378,1.240998,-9.551134,-0.467280,-0.667037,0.387297,5.555391,1.925666,7.751378,-5.049886,-2.917257,3.814485,3.234079,-3.290680,8.096306,4.507117,-4.905704,-9.965016,0.534484,9.897253,1.592009,7.416671,1.360348,-9.783875,9.334756,1.987164,-2.632594,2.025132,7.281935,-7.673377,2.547177,-9.175920,-2.550395,1.644389,5.283794,-0.805717,6.880933,2.120917,-3.147978,-1.948960,6.389432,2.117733,-5.581364,8.021219,-2.957992,7.025065,-9.366912,9.264558,-3.031447,-5.341846,-0.821596,-9.061652,-4.518074,-9.404995,8.490443,-1.417296,7.118146,4.963742,-6.360457,4.892020,-5.235191,-1.690438,-6.848649,6.044379,-4.827725,3.979113,-7.881466,8.854352,2.259159,-2.054198,-9.588032,2.968082,-8.754366,4.462839,-5.482121,-3.231558,2.414550,0.877629,-3.536520,-7.466685,-8.408176,2.428281,7.725047,0.420589,1.567173,-5.897368,-7.267646,8.231710,-6.004653,4.063590,1.213284,2.334963,-1.969766,1.337129,4.116959,-8.086335,3.661627,7.451796,-5.349260,7.607698,-2.951533,0.531868,-0.323510,9.275251,1.393943,9.557417,-6.470072,-7.979886,4.774514,-1.929488,3.207992,-6.405937,-5.355895,-8.865634,-1.409904,-4.638075,2.441444,3.229836,-7.168056,-0.645891,0.519013,5.076701,-7.184867,-8.213807,7.913221,-3.930583,1.727385,5.169432,-6.417218,-3.772355,7.616530,1.761902,-3.009899,-9.591527,-6.571134,7.189166,-4.508807,4.006233,-0.708645,-2.411332,-8.740121,-8.450914,2.958609,-5.971779,8.160162,-9.495963,8.773972,4.437603,-0.248674,3.184825,-5.779915,-7.865334,1.046252,6.028982,-4.594154,6.311039,6.504610,-6.908885,1.773786,-6.228057,-2.664320,1.400857,1.091477,8.912902,2.230671,-1.089963,3.389415,-0.137823,-6.457073,-4.058070,-0.731028,-4.802258,-4.367405,-4.188426,4.813059,-7.757347,-0.171841,4.510729,0.204448,7.748882,8.959955,-5.534339,2.447119,2.874839,0.360172,-0.675759,3.972175,8.195458,9.012507,6.539689,-1.635280,-7.371179,-5.458075,-3.127348,8.180352,-6.652471,9.328895,4.871207,9.646892,1.858388,0.645227,-8.970254,-6.295959,-1.392701,-1.923999,-0.726089,5.868817,4.131541,-7.032921,1.446281,8.482311,9.928350,1.561835,0.723609,0.058775,3.607205,-7.137335,-4.818394,3.499810,0.347828,-2.074751,-5.410442,-9.229591,8.219867,-2.661130,-2.462403,-2.489245,-8.947144,3.856971,8.836435,-2.056683,9.700260,-1.893822,1.801341,-5.961593,6.847892,-4.119557,-6.132456,5.402430,-9.551825,7.018104,-0.353998,-1.616802,3.453559,-2.766593,-3.156516,6.244485,-9.442377,8.380634,9.463293,-5.779116,8.531242,-6.658952,8.920885,3.180584,5.643412,3.268251,1.572538,2.584263,2.245501,6.687315,-5.044044,9.527488,-3.826609,0.062943,-9.276728,4.040346,-3.613972,2.135423,6.964771,2.993575,0.391466,-2.255281,-8.487388,2.306520,-9.928719,-9.425896,5.961980,0.333094,-2.209622,9.514215,-0.179397,-4.955874,6.201414,-0.702743,3.946656,7.407074,-6.000955,3.788518,5.249153,-4.133927,7.271064,4.926841,-1.452610,-2.686063,7.002067,8.652134,-5.789579,-1.262978,-6.384029,3.056308,6.737729,-8.480492,-6.688333,-1.122534,8.027976,6.920085,3.411814,6.616488,3.417409,0.957281,-9.600886,-4.428714,-4.356274,-0.155325,-4.567158,-9.054042,-7.387883,6.675511,-8.296038,6.144898,8.857812,-0.684159,9.313030,-0.941896,-2.831071,0.346196,8.037626,0.242856,-1.103086,-9.267568,9.223258,-3.694000,0.201327,1.446140,-4.404368,9.147467,2.697720,-8.715678,-9.656075,-4.596607,-2.549424,2.299686,0.529661,-2.368979,-2.154117,-6.322576,8.257637,7.931918,1.854460,0.304881,7.047139,0.783769,-2.205480,9.411262,-4.100484,2.867864,8.354440,-2.839442,-0.809943,6.026600,6.803058,-0.252304,-4.739917,-5.817115,-9.739869,0.490595,-3.844774,3.517297,3.312506,3.822772,-0.373415,-3.588463,8.403515,-8.909577,2.718795,-5.139926,-4.962897,-3.201052,4.443530,-6.637392,-4.761224,7.587380,-8.566915,8.660286,-5.468360,8.248567,-6.086254,-3.127083,5.330033,3.387895,-4.855047,0.565567,-0.822593,-1.270180,-9.335830,-2.632336,-3.812312,-1.125978,-1.991790,-2.042551,-6.581076,6.806783,-6.118402,8.403576,-7.407834,-6.675931,-2.936279,1.043025,6.775281,-5.576342,-0.187408,-0.852667,0.511112,3.550893,4.064651,-6.226857,-5.845520,-9.250109,4.389080,-0.217836,-7.696667,0.598721,-3.176428,2.625743,-6.264087,-0.679516,-5.394548,1.643175,0.764366,7.604277,6.323048,-7.214907,0.051651,-8.116575,-6.220809,7.450057,2.071991,-8.753509,0.072985,-5.151223,8.593878,3.795653,8.973560,6.712069,9.744957,3.877490,-8.532718,-6.886553,-6.373958,8.491745,9.977041,8.098600,8.942977,7.561327,-4.408249,-2.814290,-6.926379,6.603345,-6.899999,-5.952056,-4.047959,-9.201750,3.671006,-0.806884,8.691623,8.621232,-5.903878,-2.829970,-9.843953,8.979882,0.719027,-2.302666,1.485259,4.722890,1.594463,1.313009,-9.391299,-2.477002,7.369203,2.572616,-7.308161,5.476013,-8.985738,-0.638627,7.826427,3.756056,2.758082,-0.039620,8.071604,9.869605,0.316418,-0.838171,-5.759422,-2.271280,-6.425717,0.056867,-6.856260,5.616265,-8.026333,4.104189,8.519298,-0.376854,-1.993250,7.043150,-4.643863,-1.930936,-1.496483,4.500164,-9.546508,-3.669306,-8.226311,8.220837,-6.900061,9.233062,2.581060,5.479113,9.800868,9.602808,-8.003497,9.590159,7.330504,2.617180,5.707222,7.748208,-0.355238,-2.274652,2.296305,8.033567,-7.691510,-3.896089,7.307751,0.965795,3.236665,-5.234320,4.633953,-5.780327,-2.532910,-6.503041,5.001304,9.836668,3.208148,-6.679361,9.795388,7.136605,-4.655964,7.406438,9.593965,-3.134546,-3.762368,-1.383268,-5.337635,-5.909312,-6.867206,-2.195747,-2.214843,2.297251,3.225031,-9.720627,0.727991,3.774179,8.509421,8.633759,2.243164,5.257194,8.252368,8.522013,6.498970,-8.626390,8.204497,3.248965,-8.092615,8.237532,-7.173369,-6.448660,1.700666,5.843380,2.146777,3.029627,-8.820520,-3.764231,3.080171,8.152820,3.565875,-3.508482,3.140529,7.106061,3.326901,9.134286,-6.544546,6.713648,6.225352,8.265810,-5.723627,8.232188,0.242297,-8.100281,-0.988383,3.618264,6.405353,-7.320483,7.592463,-1.047013,-0.454346,-5.283486,6.500781,8.910468,-7.942041,5.510134,3.735810,3.920571,-7.855554,0.811475,-8.798320,5.383868,0.738920,-6.221016,9.258890,8.261233,-7.651240,-9.333359,7.209390,7.965063,-8.535979,-5.514665,4.214348,5.266798,4.160540,-4.805269,2.964320,2.551799,3.567247,-1.817960,-0.181988,6.447701,4.569150,7.981889,6.527853,8.038085,1.826826,8.365778,4.563019,5.066080,-2.317067,-5.317325,3.171259,-4.527980,2.854948,5.230303,-2.919457,3.552482,-0.343927,-3.185244,7.663552,-4.470210,-9.025400,2.207179,-9.490032,-4.460719,5.305015,-9.711313,9.885520,4.595109,1.564947,-9.386622,1.547846,-1.187908,-9.443230,8.165666,-9.094257,4.746038,-6.041004,-5.051657,5.556527,9.342150,-8.161538,0.021152,-9.125657,-5.044287,2.033264,8.316086,-8.236841,-9.367817,-3.108973,-9.244074,4.012877,7.535551,2.514093,-9.402388,5.506956,6.964526,-6.270861,5.007665,6.409633,-2.633247,-5.011409,-8.914543,2.133895,-2.411830,-6.095521,-2.227503,-6.038480,0.657500,-6.974467,-8.122419,7.795946,9.089221,-6.445600,-6.362676,-8.404111,-6.502609,-3.347008,-8.622869,2.121519,-5.864185,3.967240,-6.580287,-8.333779,8.658890,9.893105,-5.973558,9.130292,-5.403181,-8.969072,-7.676765,-2.020152,-8.231052,5.042541,-1.633780,3.896741,-8.351307,-6.784250,-7.153847,0.606425,7.727117,4.048562,9.487277,8.024509,-6.721353,2.170806,-3.177417,9.254707,-3.346388,7.388454,0.109290,3.883428,-4.339911,-4.077665,0.715532,-9.497610,1.412731,-9.223539,2.246897,-1.927474,-9.090906,-1.040043,3.809652,2.457348,-3.880899,8.023658,0.968951,0.539756,-6.099782,-0.646261,3.493977,-6.408396,-3.015184,-4.465595,-0.872975,2.720735,-7.958662,2.199663,2.123691,7.003942,-4.999594,6.963016,-4.924427,9.697541,6.964849,-7.912314,-4.243765,0.576931,8.118429,-4.747240,-6.297983,-0.188093,8.660838,2.237960,-4.807184,-4.328010,7.445043,-3.504225,0.585749,-8.679664,4.712855,4.363247,5.789802,-4.798061,-7.467763,-5.732780,-5.121007,6.252386,-5.355900,-7.543737,-4.230976,6.259994,1.242301,7.940390,3.366934,9.615313,-5.276562,8.104849,4.514824,-8.052540,-8.376311,-6.615312,-8.524746,1.095491,-5.449440,1.242568,-2.300506,-0.323760,5.081328,-4.268476,6.827187,9.243602,0.446635,7.806201,0.623197,-1.832122,-8.113951,-2.884882,8.054908,-1.514680,-6.246071,-2.354093,-7.223134,-2.888494,-9.748325,0.968004,-8.762214,8.385815,5.879272,-6.758822,-4.946181,-6.338850,1.623380,4.960772,-9.431941,7.649366,-4.464140,-5.144300,-3.001712,-3.099543,0.239864,6.482482,-8.981796,1.345897,0.276237,-1.324769,6.660383,0.402887,-5.935292,6.346182,-7.088091,1.459592,-7.911195,8.220516,-7.092257,7.902273,2.652943,0.941951,1.749918,2.428080,-0.406107,-5.386654,1.597692,-3.750283,9.993266,-8.384676,-4.359233,-2.308928,6.043357,-6.370552,2.610742,-1.788976,-7.244005,-5.820057,-6.781109,-2.858110,-0.911770,-8.556393,-2.701158,5.504769,-7.465846,9.702404,5.270166,9.956011,-1.268561,-2.737597,4.883294,-6.089829,-7.301138,1.800402,1.299081,7.626064,6.580146,3.099934,-4.917247,7.952519,-9.162503,-1.444386,-6.750080,2.766191,2.290008,-6.013535,-5.818601,-7.095510,3.819838,2.038568,7.193025,-5.439929,9.352327,3.674918,-7.833612,-7.318267,4.235451,-2.918910,1.358948,-9.866897,5.482707,5.569116,-1.184862,-5.817012,-2.353676,-4.931981,-7.077914,-5.420816,-6.544852,-0.565055,-5.264889,0.395244,3.230677,5.172943,1.182267,1.885337,-0.966524,-0.739332,-4.312037,-6.527177,9.319494], dtype = "float32")#candidate|7011|(1920,)|const|float32
bop_7012 = relay.greater_equal(call_6981.astype('bool'), relay.reshape(const_7011.astype('bool'), relay.shape_of(call_6981))) # shape=(1920,)
bop_7015 = relay.greater_equal(call_6982.astype('bool'), relay.reshape(const_7011.astype('bool'), relay.shape_of(call_6982))) # shape=(1920,)
func_5357_call = mod.get_global_var('func_5357')
func_5359_call = mutated_mod.get_global_var('func_5359')
call_7016 = relay.TupleGetItem(func_5357_call(), 0)
call_7017 = relay.TupleGetItem(func_5359_call(), 0)
output = relay.Tuple([call_6983,var_6984,call_7005,bop_7012,call_7016,])
output2 = relay.Tuple([call_6985,var_6984,call_7006,bop_7015,call_7017,])
func_7023 = relay.Function([var_6984,], output)
mod['func_7023'] = func_7023
mod = relay.transform.InferType()(mod)
var_7024 = relay.var("var_7024", dtype = "float32", shape = (432,))#candidate|7024|(432,)|var|float32
output = func_7023(var_7024)
func_7025 = relay.Function([var_7024], output)
mutated_mod['func_7025'] = func_7025
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7097 = relay.const([[[-5,-7,-10,9,-4],[6,-2,6,10,4],[10,7,-2,-6,3],[4,-10,1,1,6],[4,1,8,3,-3],[-6,-8,-9,-9,1],[-8,-4,-6,-10,4],[10,8,1,3,6],[3,-6,-6,-1,2],[9,-7,-10,-5,-7],[6,6,-3,10,2]],[[-9,-9,-6,-2,9],[7,5,10,-6,-6],[5,-4,-6,1,10],[-3,8,8,4,-1],[5,3,-3,-5,-8],[-5,3,-8,-6,-6],[-2,-7,-10,4,-6],[-8,-4,-1,4,7],[-7,6,10,8,3],[-4,2,5,6,-5],[-6,-3,4,7,-8]],[[-9,-5,-6,1,2],[-9,-6,8,2,-3],[-8,1,-7,-3,-2],[-9,7,-10,-2,8],[-4,10,7,-3,4],[5,-5,3,-1,8],[-1,-6,4,3,8],[10,8,4,-2,2],[5,9,-4,-1,1],[10,-10,-10,6,-10],[5,-6,2,6,-7]],[[9,8,1,2,-10],[-3,5,-9,-8,10],[-9,8,8,5,5],[6,3,3,7,6],[-8,-8,-2,8,3],[-8,5,-8,-7,8],[-7,5,8,4,3],[3,-10,-2,1,4],[10,-8,9,7,-9],[5,9,5,-8,-3],[2,-10,-10,-7,-6]],[[6,-7,2,-10,-10],[-4,-6,7,-10,-2],[-7,2,7,2,4],[-8,-6,5,-1,-7],[-6,7,5,3,10],[10,-8,-5,-8,-8],[6,5,1,10,-6],[2,-9,4,-5,-9],[2,2,-4,4,5],[6,-10,-5,-10,-2],[3,10,4,-4,-1]],[[-4,2,3,-3,10],[3,-9,-7,-5,-9],[-3,2,2,7,5],[-9,-1,2,-1,-4],[-3,6,-9,4,8],[-2,6,6,10,-6],[-1,3,-7,9,10],[-8,-10,4,-7,-5],[2,8,1,-5,-7],[-5,7,-2,5,-4],[-7,-7,-7,6,9]],[[-9,-1,6,2,3],[4,10,8,-6,5],[7,2,-9,-6,3],[8,-6,-10,1,6],[3,-1,-1,-7,9],[9,-4,-1,10,-1],[3,-6,8,-1,-7],[-2,9,3,2,7],[2,9,-6,2,-6],[-10,10,-7,-9,-9],[5,9,7,-4,-2]],[[2,8,1,-2,2],[3,8,-6,-6,-1],[-3,10,-2,6,8],[8,1,3,-10,6],[-2,1,-4,5,4],[-7,-4,-1,-4,2],[-4,-1,-6,10,7],[7,-4,-1,7,-10],[-4,10,-2,6,-7],[-7,9,-9,-2,9],[6,3,6,10,-2]],[[4,5,-5,2,-4],[-8,-3,1,-9,4],[6,-6,10,3,-5],[8,2,-1,4,-6],[6,1,2,3,7],[-1,-7,-2,-1,7],[-1,-3,-10,-9,10],[3,1,5,-8,-7],[8,-7,-7,4,-3],[1,-5,6,1,-10],[-3,6,6,9,4]],[[10,6,-8,6,8],[-2,5,5,5,-1],[8,-9,-9,-8,9],[-4,5,-6,-2,7],[-6,-1,8,-6,-6],[9,10,8,3,6],[1,2,-2,1,3],[-6,-6,-1,4,9],[-4,-4,6,-2,2],[-2,-9,-9,3,7],[-7,-6,-9,-9,-4]],[[-5,-9,-1,-2,4],[10,-9,10,-2,-9],[8,1,8,1,-2],[-8,-3,5,3,-8],[5,5,-9,-1,8],[9,5,2,-7,-3],[-9,-8,-9,10,-2],[3,6,-9,-2,3],[10,8,1,1,6],[-1,-6,-9,1,8],[-8,9,8,-7,10]],[[-2,6,-8,-1,-7],[2,2,-6,-4,2],[8,-3,-4,-9,-3],[4,3,-7,-9,9],[-5,-5,-10,2,5],[6,-6,4,-1,-4],[2,-2,-8,-6,-7],[-4,-10,9,-7,4],[5,-9,10,-2,6],[9,-3,-5,-8,-7],[-7,-7,-9,9,-9]]], dtype = "uint16")#candidate|7097|(12, 11, 5)|const|uint16
var_7098 = relay.var("var_7098", dtype = "uint16", shape = (12, 11, 5))#candidate|7098|(12, 11, 5)|var|uint16
bop_7099 = relay.bitwise_or(const_7097.astype('uint16'), relay.reshape(var_7098.astype('uint16'), relay.shape_of(const_7097))) # shape=(12, 11, 5)
func_6976_call = mod.get_global_var('func_6976')
func_6978_call = mutated_mod.get_global_var('func_6978')
call_7109 = relay.TupleGetItem(func_6976_call(), 2)
call_7110 = relay.TupleGetItem(func_6978_call(), 2)
func_4125_call = mod.get_global_var('func_4125')
func_4127_call = mutated_mod.get_global_var('func_4127')
call_7113 = relay.TupleGetItem(func_4125_call(), 4)
call_7114 = relay.TupleGetItem(func_4127_call(), 4)
output = relay.Tuple([bop_7099,call_7109,call_7113,])
output2 = relay.Tuple([bop_7099,call_7110,call_7114,])
func_7135 = relay.Function([var_7098,], output)
mod['func_7135'] = func_7135
mod = relay.transform.InferType()(mod)
var_7136 = relay.var("var_7136", dtype = "uint16", shape = (12, 11, 5))#candidate|7136|(12, 11, 5)|var|uint16
output = func_7135(var_7136)
func_7137 = relay.Function([var_7136], output)
mutated_mod['func_7137'] = func_7137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7159 = relay.var("var_7159", dtype = "int64", shape = (3, 11, 7))#candidate|7159|(3, 11, 7)|var|int64
var_7160 = relay.var("var_7160", dtype = "int64", shape = (3, 11, 7))#candidate|7160|(3, 11, 7)|var|int64
bop_7161 = relay.minimum(var_7159.astype('int64'), relay.reshape(var_7160.astype('int64'), relay.shape_of(var_7159))) # shape=(3, 11, 7)
output = bop_7161
output2 = bop_7161
F = relay.Function([var_7159,var_7160,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7159,var_7160,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

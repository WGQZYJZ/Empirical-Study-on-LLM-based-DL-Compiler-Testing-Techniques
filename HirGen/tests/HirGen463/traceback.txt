==========mod==========
#[version = "0.0.5"]
def @func_7461() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %0 = @func_4252() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1 = @func_7086() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
  %2 = %0.1;
  %3 = %1.0;
  (%2, %3)
}

def @func_5155() -> (Tensor[(2, 9, 4), float32],) {
  %4 = @func_1934() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %5 = %4.0;
  (%5,)
}

def @func_3721() -> Tensor[(2, 9, 4), float32] {
  %6 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %6.2
}

def @func_3320() -> (Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) {
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %8 = reshape(%7, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %9 = @func_2119(%8) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %10 = @func_2035() /* ty=Tensor[(2, 9, 4), float32] */;
  %11 = %9.3;
  (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(400), float64] */)
}

def @func_1309() -> (Tensor[(2, 9, 4), float32],) {
  %12 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %13 = %12.0;
  (%13,)
}

def @func_1595(%var_1583: Tensor[(24, 1), float64], %var_1584: Tensor[(28), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), float32], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(4, 112), int8], Tensor[(2, 9, 4), float32]) {
  %14 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %15 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %16 = @func_1449() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %17 = cast(%var_1583, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
  %18 = cast(%var_1584, dtype="int8") /* ty=Tensor[(28), int8] */;
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 112), int8] */, dtype="int8") /* ty=Tensor[(4, 112), int8] */;
  %20 = reshape(%17, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
  %21 = reshape(%18, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %22 = reshape(%19, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %23 = @func_159(%20, %21, %22) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %24 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %25 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  %26 = %14.0;
  %27 = %15.0;
  %28 = %16.0;
  %29 = %23.5;
  %30 = %24.0;
  (%25, %26, %27, %28, %29, %var_1583, %var_1584, meta[relay.Constant][1] /* ty=Tensor[(4, 112), int8] */, %30)
}

def @func_3441(%var_3417: Tensor[(28), int8], %var_3424: Tensor[(168), int32]) -> (Tensor[(2, 9, 4), float64], Tensor[(448), int8], Tensor[(28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float32], Tensor[(448), int8], Tensor[(168), int32]) {
  %31 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %32 = cast(%var_3417, dtype="int8") /* ty=Tensor[(28), int8] */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %34 = reshape(%32, newshape=[28, 1]) /* ty=Tensor[(28, 1), int8] */;
  %35 = reshape(%33, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %36 = @func_1245(%34, %35) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(28, 1), int8], Tensor[(448), int8], Tensor[(7, 4, 16), uint16]) */;
  %37 = cast(%var_3424, dtype="int32") /* ty=Tensor[(168), int32] */;
  %38 = cast(%var_3417, dtype="int8") /* ty=Tensor[(28), int8] */;
  %39 = reshape(%37, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), int32] */;
  %40 = reshape(%38, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %41 = @func_3064(%39, %40) /* ty=(Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) */;
  %42 = %31.0;
  %43 = %36.2;
  %44 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %45 = %41.2;
  (%42, %43, %var_3417, meta[relay.Constant][2] /* ty=Tensor[(448), int8] */, %44, %45, %var_3424)
}

def @func_4529() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %46 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
  %47 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  %48 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %49 = %46.0;
  (%47, %48, %49)
}

def @func_8288(%var_8271: int8, %var_8272: Tensor[(9, 16, 1), int8]) -> (Tensor[(9, 16, 1), int8], Tensor[(9, 16, 1), bool]) {
  %50 = cast(%var_8271, dtype="int8") /* ty=int8 */;
  %51 = cast(%var_8272, dtype="int8") /* ty=Tensor[(9, 16, 1), int8] */;
  %52 = cast(%var_8271, dtype="bool") /* ty=bool */;
  %53 = cast(%var_8272, dtype="bool") /* ty=Tensor[(9, 16, 1), bool] */;
  %54 = subtract(%50, %51) /* ty=Tensor[(9, 16, 1), int8] */;
  %55 = greater_equal(%52, %53) /* ty=Tensor[(9, 16, 1), bool] */;
  (%54, %55)
}

def @func_6372(%var_6369: Tensor[(7, 1, 6), float32]) -> (Tensor[(7, 1, 6), float32],) {
  %56 = cast(%var_6369, dtype="float32") /* ty=Tensor[(7, 1, 6), float32] */;
  %57 = erf(%56) /* ty=Tensor[(7, 1, 6), float32] */;
  (%57,)
}

def @func_12091() -> (Tensor[(2, 9, 4), float32],) {
  %58 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %59 = %58.1;
  (%59,)
}

def @func_5608(%var_5591: Tensor[(24), float64], %var_5592: Tensor[(840), int32], %var_5593: Tensor[(1, 2475), float32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(840), int32], Tensor[(24), float64], Tensor[(840), int32], Tensor[(1, 2475), float32]) {
  %60 = @func_4476() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %61 = @func_3262() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %62 = %60.1;
  %63 = cast(%62, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %64 = cast(%var_5591, dtype="float64") /* ty=Tensor[(24), float64] */;
  %65 = cast(%var_5592, dtype="int32") /* ty=Tensor[(840), int32] */;
  %66 = cast(%var_5593, dtype="float32") /* ty=Tensor[(1, 2475), float32] */;
  %67 = reshape(%63, newshape=[2, 9, 4]) /* ty=Tensor[(2, 9, 4), float32] */;
  %68 = reshape(%64, newshape=[6, 4]) /* ty=Tensor[(6, 4), float64] */;
  %69 = reshape(%65, newshape=[840]) /* ty=Tensor[(840), int32] */;
  %70 = reshape(%66, newshape=[825, 3]) /* ty=Tensor[(825, 3), float32] */;
  %71 = @func_3583(%67, %68, %69, %70) /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(6, 4), float64], Tensor[(840), int32], Tensor[(825, 3), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %72 = %61.0;
  %73 = %71.3;
  (%62, %72, %73, %var_5591, %var_5592, %var_5593)
}

def @func_5462() -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) {
  %74 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
  %75 = @func_4106() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %76 = %74.1;
  %77 = %75.0;
  (%76, %77)
}

def @func_1723(%var_1668: Tensor[(2, 12), float64], %var_1669: Tensor[(1, 28), int8], %var_1695: Tensor[(6, 140), int32], %var_1715: Tensor[(6, 140), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) {
  %78 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %79 = cast(%var_1668, dtype="float64") /* ty=Tensor[(2, 12), float64] */;
  %80 = cast(%var_1669, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %81 = reshape(%79, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %82 = reshape(%80, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %83 = @func_233(%81, %82) /* ty=(Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) */;
  %84 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 140), int32] */, dtype="int32") /* ty=Tensor[(6, 140), int32] */;
  %85 = cast(%var_1669, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %86 = %83.6;
  %87 = cast(%86, dtype="int8") /* ty=Tensor[(7, 4, 16), int8] */;
  %88 = reshape(%84, newshape=[14, 12, 5]) /* ty=Tensor[(14, 12, 5), int32] */;
  %89 = reshape(%85, newshape=[7, 4]) /* ty=Tensor[(7, 4), int8] */;
  %90 = reshape(%87, newshape=[56, 8]) /* ty=Tensor[(56, 8), int8] */;
  %91 = @func_1068(%88, %89, %90) /* ty=(Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) */;
  %92 = cast(%var_1668, dtype="float64") /* ty=Tensor[(2, 12), float64] */;
  %93 = cast(%var_1669, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %94 = reshape(%92, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %95 = reshape(%93, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %96 = @func_233(%94, %95) /* ty=(Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) */;
  %97 = cast(%var_1695, dtype="bool") /* ty=Tensor[(6, 140), bool] */;
  %98 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(6, 140), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %99 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 140), int32] */, dtype="bool") /* ty=Tensor[(6, 140), bool] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %101 = cast(%var_1715, dtype="int64") /* ty=Tensor[(6, 140), int64] */;
  %102 = shape_of(%var_1695, dtype="int32") /* ty=Tensor[(2), int32] */;
  %103 = cast(%var_1695, dtype="int64") /* ty=Tensor[(6, 140), int64] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %105 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %106 = %78.0;
  %107 = %91.6;
  %108 = %96.1;
  %109 = equal(%99, %100) /* ty=Tensor[(6, 140), bool] */;
  %110 = left_shift(%103, %104) /* ty=Tensor[(6, 140), int64] */;
  %111 = %105.0;
  (%106, %86, %var_1668, %var_1669, %107, %108, %109, %110, %111)
}

def @func_7633() -> Tensor[(2, 9, 4), float32] {
  %112 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %112.2
}

def @func_1068(%var_1022: Tensor[(14, 12, 5), int32], %var_1030: Tensor[(7, 4), int8], %var_1031: Tensor[(56, 8), int8]) -> (Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) {
  %113 = cast(-6 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %114 = cast(%var_1022, dtype="bool") /* ty=Tensor[(14, 12, 5), bool] */;
  %115 = cast(%var_1030, dtype="int8") /* ty=Tensor[(7, 4), int8] */;
  %116 = cast(%var_1030, dtype="int8") /* ty=Tensor[(7, 4), int8] */;
  %117 = cast(%var_1031, dtype="int8") /* ty=Tensor[(56, 8), int8] */;
  %118 = reshape(%116, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %119 = reshape(%117, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %120 = @func_19(%118, %119) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %121 = %120.1;
  %122 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 4, 16), float32] */, dtype="uint16") /* ty=Tensor[(7, 4, 16), uint16] */;
  %123 = shape_of(%121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%121, dtype="uint16") /* ty=Tensor[(7, 4, 16), uint16] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %126 = bitwise_or(%124, %125) /* ty=Tensor[(7, 4, 16), uint16] */;
  %127 = cast(%126, dtype="int8") /* ty=Tensor[(7, 4, 16), int8] */;
  %128 = reshape(%115, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %129 = reshape(%127, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %130 = @func_19(%128, %129) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %131 = cast(meta[relay.Constant][5] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %132 = cast(%var_1030, dtype="int8") /* ty=Tensor[(7, 4), int8] */;
  %133 = reshape(%131, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %134 = reshape(%132, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %135 = @func_233(%133, %134) /* ty=(Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) */;
  %136 = cast(%126, dtype="float64") /* ty=Tensor[(7, 4, 16), float64] */;
  %137 = greater_equal(%113, %114) /* ty=Tensor[(14, 12, 5), bool] */;
  %138 = %130.0;
  %139 = %135.0;
  %140 = acosh(%136) /* ty=Tensor[(7, 4, 16), float64] */;
  (%137, %var_1030, %var_1031, %138, %139, meta[relay.Constant][5] /* ty=Tensor[(24), float64] */, %140)
}

def @func_4301() -> Tensor[(2, 9, 4), float32] {
  %141 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %141.1
}

def @func_5873() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %142 = @func_5293() /* ty=Tensor[(2, 9, 4), float32] */;
  %143 = @func_2035() /* ty=Tensor[(2, 9, 4), float32] */;
  (%142, %143)
}

def @func_3787(%var_3746: Tensor[(8, 5, 7), uint32], %var_3747: Tensor[(8, 5, 7), uint32], %var_3768: Tensor[(28), int8], %var_3769: Tensor[(448), int8], %var_3775: Tensor[(8, 50), float64]) -> (Tensor[(8, 5, 7), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(10, 8, 5), float64], Tensor[(8, 50), float64], Tensor[(8, 5, 7), bool]) {
  %144 = cast(%var_3747, dtype="uint32") /* ty=Tensor[(8, 5, 7), uint32] */;
  %145 = shape_of(%var_3746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%var_3746, dtype="uint32") /* ty=Tensor[(8, 5, 7), uint32] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %148 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %149 = cast(meta[relay.Constant][6] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %150 = cast(%var_3768, dtype="int8") /* ty=Tensor[(28), int8] */;
  %151 = cast(%var_3769, dtype="int8") /* ty=Tensor[(448), int8] */;
  %152 = reshape(%149, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
  %153 = reshape(%150, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %154 = reshape(%151, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %155 = @func_159(%152, %153, %154) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %156 = cast(%var_3775, dtype="float64") /* ty=Tensor[(8, 50), float64] */;
  %157 = reshape(%156, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %158 = @func_2119(%157) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %159 = cast(%var_3746, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %160 = shape_of(%var_3747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%var_3747, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %163 = minimum(%146, %147) /* ty=Tensor[(8, 5, 7), uint32] */;
  %164 = %148.4;
  %165 = %155.4;
  %166 = %158.2;
  %167 = less(%161, %162) /* ty=Tensor[(8, 5, 7), bool] */;
  (%163, %164, %165, meta[relay.Constant][6] /* ty=Tensor[(24), float64] */, %var_3768, %var_3769, %166, %var_3775, %167)
}

def @func_6955() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %168 = @func_5344() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %169 = @func_5252() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %170 = @func_4064() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %171 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
  %172 = %168.0;
  %173 = %169.0;
  %174 = %170.0;
  (%171, %172, %173, %174)
}

def @func_1527(%var_1512: Tensor[(10, 8, 5), float64]) -> Tensor[(10, 8, 5), float64] {
  %175 = cast(%var_1512, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  acosh(%175) /* ty=Tensor[(10, 8, 5), float64] */
}

def @func_3064(%var_3025: Tensor[(6, 14, 2), int32], %var_3045: Tensor[(28), int8]) -> (Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) {
  %176 = cast(%var_3025, dtype="int32") /* ty=Tensor[(6, 14, 2), int32] */;
  %177 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(6, 14, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 14, 2), int32] */, dtype="int32") /* ty=Tensor[(6, 14, 2), int32] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %180 = cast(meta[relay.Constant][8] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %181 = cast(meta[relay.Constant][9] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %182 = reshape(%180, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %183 = reshape(%181, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %184 = @func_19(%182, %183) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %185 = cast(%var_3045, dtype="bool") /* ty=Tensor[(28), bool] */;
  %186 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(28), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %187 = cast(meta[relay.Constant][8] /* ty=Tensor[(28), int8] */, dtype="bool") /* ty=Tensor[(28), bool] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?), bool] */;
  %189 = add(%178, %179) /* ty=Tensor[(6, 14, 2), int32] */;
  %190 = %184.0;
  %191 = logical_or(%187, %188) /* ty=Tensor[(28), bool] */;
  (%189, %190, meta[relay.Constant][9] /* ty=Tensor[(448), int8] */, %191)
}

def @func_7257() -> (Tensor[(2, 9, 4), float32], Tensor[(4, 2, 3), uint32], Tensor[(24), float64], Tensor[(1, 28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float64]) {
  %192 = @func_3634() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %193 = cast(meta[relay.Constant][10] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 28), int8] */, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %195 = cast(meta[relay.Constant][12] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %196 = reshape(%193, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
  %197 = reshape(%194, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %198 = reshape(%195, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %199 = @func_159(%196, %197, %198) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %200 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %201 = %192.0;
  %202 = %199.3;
  %203 = %200.0;
  (%201, %202, meta[relay.Constant][10] /* ty=Tensor[(24), float64] */, meta[relay.Constant][11] /* ty=Tensor[(1, 28), int8] */, meta[relay.Constant][12] /* ty=Tensor[(448), int8] */, %203)
}

def @func_7795() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %204 = @func_6480() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %205 = @func_5293() /* ty=Tensor[(2, 9, 4), float32] */;
  %206 = %204.0;
  (%205, %206)
}

def @func_7754(%var_7748: Tensor[(13, 15, 12), float64], %var_7749: Tensor[(13, 15, 12), float64]) -> Tensor[(13, 15, 12), bool] {
  %207 = cast(%var_7749, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
  %208 = shape_of(%var_7748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_7748, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%209, %210) /* ty=Tensor[(13, 15, 12), bool] */
}

def @func_9195(%var_9174: Tensor[(3, 4, 11), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64]) {
  %211 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %212 = cast(%var_9174, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
  %213 = log(%212) /* ty=Tensor[(3, 4, 11), float64] */;
  %214 = cast(%213, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
  %215 = acos(%214) /* ty=Tensor[(3, 4, 11), float64] */;
  %216 = cast(%var_9174, dtype="bool") /* ty=Tensor[(3, 4, 11), bool] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="bool") /* ty=Tensor[(3, 4, 11), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %220 = greater_equal(%218, %219) /* ty=Tensor[(3, 4, 11), bool] */;
  %221 = cast(%220, dtype="int64") /* ty=Tensor[(3, 4, 11), int64] */;
  %222 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%213, dtype="int64") /* ty=Tensor[(3, 4, 11), int64] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %225 = %211.0;
  %226 = logical_xor(%223, %224) /* ty=Tensor[(3, 4, 11), int64] */;
  (%225, %226)
}

def @func_10666(%var_10546: Tensor[(8, 16, 1), float32]) -> (Tensor[(8, 16, ?), int64], Tensor[(2, 9, 4), float64], Tensor[(8, 16, ?), float64], Tensor[(8, 16, ?), bool], Tensor[(8, 16, ?), int16]) {
  %227 = cast(%var_10546, dtype="float32") /* ty=Tensor[(8, 16, 1), float32] */;
  %228 = log(%227) /* ty=Tensor[(8, 16, 1), float32] */;
  %229 = cast(%var_10546, dtype="int64") /* ty=Tensor[(8, 16, 1), int64] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%228, dtype="int64") /* ty=Tensor[(8, 16, 1), int64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %233 = @func_5268() /* ty=(Tensor[(2, 9, 4), float64],) */;
  %234 = cast(%var_10546, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
  %235 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%228, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %238 = cast(%228, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
  %239 = cosh(%238) /* ty=Tensor[(8, 16, 1), float64] */;
  %240 = cast(%228, dtype="float32") /* ty=Tensor[(8, 16, 1), float32] */;
  %241 = sqrt(%240) /* ty=Tensor[(8, 16, 1), float32] */;
  %242 = cast(%241, dtype="bool") /* ty=Tensor[(8, 16, 1), bool] */;
  %243 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%228, dtype="bool") /* ty=Tensor[(8, 16, 1), bool] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %246 = not_equal(%244, %245) /* ty=Tensor[(8, 16, ?), bool] */;
  %247 = cast(%246, dtype="bool") /* ty=Tensor[(8, 16, ?), bool] */;
  %248 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%239, dtype="bool") /* ty=Tensor[(8, 16, 1), bool] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %251 = cast(%228, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
  %252 = log10(%251) /* ty=Tensor[(8, 16, 1), float64] */;
  %253 = cast(%252, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
  %254 = log2(%253) /* ty=Tensor[(8, 16, 1), float64] */;
  %255 = cast(%246, dtype="int16") /* ty=Tensor[(8, 16, ?), int16] */;
  %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%254, dtype="int16") /* ty=Tensor[(8, 16, 1), int16] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %259 = logical_xor(%231, %232) /* ty=Tensor[(8, 16, ?), int64] */;
  %260 = %233.0;
  %261 = divide(%236, %237) /* ty=Tensor[(8, 16, ?), float64] */;
  %262 = less(%249, %250) /* ty=Tensor[(8, 16, ?), bool] */;
  %263 = minimum(%257, %258) /* ty=Tensor[(8, 16, ?), int16] */;
  (%259, %260, %261, %262, %263)
}

def @func_4476() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %264 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %265 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %266 = %264.0;
  %267 = %265.1;
  (%266, %267)
}

def @func_5035() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
  %268 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %269 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %270 = %268.1;
  %271 = %269.0;
  (%270, %271)
}

def @func_11038() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %272 = @func_5975() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %273 = @func_6875() /* ty=Tensor[(2, 9, 4), float32] */;
  %274 = @func_4002() /* ty=Tensor[(2, 9, 4), float32] */;
  %275 = %272.0;
  %276 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  (%273, %274, %275, %276)
}

def @func_1864() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %277 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %278 = %277.0;
  %279 = cast(%278, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
  %280 = acos(%279) /* ty=Tensor[(2, 9, 4), float64] */;
  %281 = cast(%280, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %282 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %283 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %284 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  %285 = rsqrt(%281) /* ty=Tensor[(2, 9, 4), float32] */;
  %286 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %287 = %282.0;
  %288 = %283.0;
  (%284, %285, %286, %287, %288)
}

def @func_11242() -> Tensor[(2, 9, 4), uint32] {
  %289 = @func_7843() /* ty=(Tensor[(2, 9, 4), uint32],) */;
  %289.0
}

def @func_4845() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
  %290 = @func_3129() /* ty=(Tensor[(2, 9, 4), float64],) */;
  %291 = %290.0;
  %292 = @func_4002() /* ty=Tensor[(2, 9, 4), float32] */;
  (%291, %292)
}

def @func_2874(%var_2834: Tensor[(24, 1), float64], %var_2836: Tensor[(1, 840), int32], %var_2844: Tensor[(11, 15, 15), float32]) -> (Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) {
  %293 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %294 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(11, 15, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %297 = cast(%var_2834, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
  %298 = cast(meta[relay.Constant][15] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %299 = cast(%var_2836, dtype="int32") /* ty=Tensor[(1, 840), int32] */;
  %300 = cast(%var_2836, dtype="int32") /* ty=Tensor[(1, 840), int32] */;
  %301 = reshape(%297, newshape=[2, 12]) /* ty=Tensor[(2, 12), float64] */;
  %302 = reshape(%298, newshape=[1, 28]) /* ty=Tensor[(1, 28), int8] */;
  %303 = reshape(%299, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %304 = reshape(%300, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %305 = @func_1723(%301, %302, %303, %304) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) */;
  %306 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %307 = acosh(%306) /* ty=Tensor[(11, 15, 15), float32] */;
  %308 = cast(%var_2844, dtype="int64") /* ty=Tensor[(11, 15, 15), int64] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="int64") /* ty=Tensor[(11, 15, 15), int64] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %312 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %313 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %314 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %315 = atan(%314) /* ty=Tensor[(11, 15, 15), float64] */;
  %316 = cast(%315, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %317 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(%307, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %320 = mod(%295, %296) /* ty=Tensor[(11, 15, 15), float64] */;
  %321 = %305.7;
  %322 = right_shift(%310, %311) /* ty=Tensor[(11, 15, 15), int64] */;
  %323 = %312.0;
  %324 = %313.0;
  %325 = less_equal(%318, %319) /* ty=Tensor[(11, 15, 15), bool] */;
  (%320, %321, %var_2834, meta[relay.Constant][15] /* ty=Tensor[(28), int8] */, %var_2836, %322, %323, %324, %325)
}

def @func_6681() -> (Tensor[(1, 2475), float32], Tensor[(2, 9, 4), uint32]) {
  %326 = @func_5661() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2475), float32], Tensor[(1, 2475), float32]) */;
  %327 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %328 = %326.3;
  %329 = %327.0;
  (%328, %329)
}

def @func_9126() -> (Tensor[(400), float32],) {
  %330 = @func_7086() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
  %331 = %330.4;
  %332 = cast(%331, dtype="float32") /* ty=Tensor[(400), float32] */;
  %333 = atan(%332) /* ty=Tensor[(400), float32] */;
  (%333,)
}

def @func_12000() -> (Tensor[(2, 9, 4), float32],) {
  %334 = @func_11206() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %335 = %334.0;
  (%335,)
}

def @func_1184() -> Tensor[(2, 9, 4), float32] {
  %336 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %336.0
}

def @func_233(%var_204: Tensor[(24), float64], %var_205: Tensor[(28), int8]) -> (Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) {
  %337 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 4, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 6), float32] */;
  %338 = acos(%337) /* ty=Tensor[(12, 4, 6), float32] */;
  %339 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 4, 6), float32] */, dtype="float64") /* ty=Tensor[(12, 4, 6), float64] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="float64") /* ty=Tensor[(12, 4, 6), float64] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %343 = cast(%var_204, dtype="float64") /* ty=Tensor[(24), float64] */;
  %344 = cast(%var_205, dtype="int8") /* ty=Tensor[(28), int8] */;
  %345 = cast(meta[relay.Constant][17] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %346 = reshape(%343, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
  %347 = reshape(%344, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %348 = reshape(%345, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %349 = @func_159(%346, %347, %348) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %350 = cast(%338, dtype="float64") /* ty=Tensor[(12, 4, 6), float64] */;
  %351 = cast(%var_204, dtype="float64") /* ty=Tensor[(24), float64] */;
  %352 = cast(%var_205, dtype="int8") /* ty=Tensor[(28), int8] */;
  %353 = cast(meta[relay.Constant][17] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %354 = reshape(%351, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
  %355 = reshape(%352, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %356 = reshape(%353, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %357 = @func_159(%354, %355, %356) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %358 = mod(%341, %342) /* ty=Tensor[(12, 4, 6), float64] */;
  %359 = %349.4;
  %360 = log2(%350) /* ty=Tensor[(12, 4, 6), float64] */;
  %361 = %357.4;
  (%358, %359, %var_204, %var_205, meta[relay.Constant][17] /* ty=Tensor[(448), int8] */, %360, %361)
}

def @func_1120() -> (Tensor[(2, 9, 4), float32],) {
  %362 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %363 = %362.0;
  (%363,)
}

def @func_4402() -> (Tensor[(2, 9, 4), float32],) {
  %364 = @func_4288() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %365 = %364.0;
  (%365,)
}

def @func_4956(%var_4941: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(15, 165), float32]) {
  %366 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %367 = %366.1;
  %368 = cast(%367, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %369 = cast(meta[relay.Constant][18] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %370 = cast(%var_4941, dtype="int32") /* ty=Tensor[(840), int32] */;
  %371 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 165), float32] */, dtype="float32") /* ty=Tensor[(15, 165), float32] */;
  %372 = reshape(%368, newshape=[2, 9, 4]) /* ty=Tensor[(2, 9, 4), float32] */;
  %373 = reshape(%369, newshape=[6, 4]) /* ty=Tensor[(6, 4), float64] */;
  %374 = reshape(%370, newshape=[840]) /* ty=Tensor[(840), int32] */;
  %375 = reshape(%371, newshape=[825, 3]) /* ty=Tensor[(825, 3), float32] */;
  %376 = @func_3583(%372, %373, %374, %375) /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(6, 4), float64], Tensor[(840), int32], Tensor[(825, 3), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %377 = %376.0;
  (%367, %377, meta[relay.Constant][18] /* ty=Tensor[(24), float64] */, %var_4941, meta[relay.Constant][19] /* ty=Tensor[(15, 165), float32] */)
}

def @func_975() -> (Tensor[(2, 9, 4), float32],) {
  %378 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 9, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %379 = cos(%378) /* ty=Tensor[(2, 9, 4), float32] */;
  (%379,)
}

def @func_2815() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
  %380 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %381 = %380.1;
  %382 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  (%381, %382)
}

def @func_7732(%var_7699: Tensor[(448), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(4, 2, 3), float64], Tensor[(1, 24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %383 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %384 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %385 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 24), float64] */, dtype="float64") /* ty=Tensor[(1, 24), float64] */;
  %386 = cast(meta[relay.Constant][22] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %387 = cast(%var_7699, dtype="int8") /* ty=Tensor[(448), int8] */;
  %388 = reshape(%385, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
  %389 = reshape(%386, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %390 = reshape(%387, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %391 = @func_159(%388, %389, %390) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %392 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %393 = @func_6480() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %394 = %383.0;
  %395 = %384.0;
  %396 = %391.0;
  %397 = %392.2;
  %398 = %393.0;
  (%394, %395, %396, meta[relay.Constant][21] /* ty=Tensor[(1, 24), float64] */, meta[relay.Constant][22] /* ty=Tensor[(28), int8] */, %var_7699, %397, %398)
}

def @func_2923() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %399 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %400 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %401 = cast(%400, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %402 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %403 = %402.1;
  %404 = cast(%403, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %405 = %399.1;
  %406 = asinh(%401) /* ty=Tensor[(2, 9, 4), float32] */;
  %407 = atanh(%404) /* ty=Tensor[(2, 9, 4), float32] */;
  (%405, %406, %407)
}

def @func_7622(%var_7591: Tensor[(11, 16, 10), float64], %var_7592: Tensor[(11, 16, 10), float64]) -> (Tensor[(11, 16, 10), float64], Tensor[(2, 9, 4), float32]) {
  %408 = cast(%var_7592, dtype="float64") /* ty=Tensor[(11, 16, 10), float64] */;
  %409 = shape_of(%var_7591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_7591, dtype="float64") /* ty=Tensor[(11, 16, 10), float64] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %412 = @func_7140() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %413 = divide(%410, %411) /* ty=Tensor[(11, 16, 10), float64] */;
  %414 = %412.3;
  (%413, %414)
}

def @func_3129() -> (Tensor[(2, 9, 4), float64],) {
  %415 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
  (%415,)
}

def @func_6779() -> (Tensor[(2, 9, 4), float32],) {
  %416 = @func_4252() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %417 = %416.1;
  (%417,)
}

def @func_3262() -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) {
  %418 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
  %419 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %420 = %418.1;
  %421 = %419.1;
  (%420, %421)
}

def @func_6261(%var_6246: Tensor[(24), float64], %var_6247: Tensor[(60, 14), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(24), float64], Tensor[(60, 14), int32]) {
  %422 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %423 = %422.0;
  %424 = cast(%423, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %425 = cast(%var_6246, dtype="float64") /* ty=Tensor[(24), float64] */;
  %426 = cast(%var_6247, dtype="int32") /* ty=Tensor[(60, 14), int32] */;
  %427 = reshape(%424, newshape=[2, 9, 4]) /* ty=Tensor[(2, 9, 4), float32] */;
  %428 = reshape(%425, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %429 = reshape(%426, newshape=[840]) /* ty=Tensor[(840), int32] */;
  %430 = @func_2204(%427, %428, %429) /* ty=(Tensor[(28), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(7, 4, 16), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(840), int32]) */;
  %431 = %430.2;
  (%423, %431, %var_6246, %var_6247)
}

def @func_7140() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %432 = @func_6517() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %433 = @func_6480() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %434 = @func_5035() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %435 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %436 = @func_6362() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %437 = %432.1;
  %438 = %433.1;
  %439 = %434.1;
  %440 = %435.0;
  %441 = %436.1;
  (%437, %438, %439, %440, %441)
}

def @func_10728(%var_10716: Tensor[(5, 1, 16), uint8], %var_10717: Tensor[(5, 14, 16), uint8]) -> Tensor[(5, 14, 16), uint8] {
  %442 = cast(%var_10716, dtype="uint8") /* ty=Tensor[(5, 1, 16), uint8] */;
  %443 = cast(%var_10717, dtype="uint8") /* ty=Tensor[(5, 14, 16), uint8] */;
  right_shift(%442, %443) /* ty=Tensor[(5, 14, 16), uint8] */
}

def @func_11057() -> (Tensor[(2, 9, 4), float32],) {
  %444 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %445 = %444.0;
  (%445,)
}

def @func_11770() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %446 = @func_7461() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %447 = %446.1;
  %448 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  (%447, %448)
}

def @func_7843() -> (Tensor[(2, 9, 4), uint32],) {
  %449 = @func_3262() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %450 = %449.0;
  (%450,)
}

def @func_5066() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %451 = @func_4106() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %452 = @func_4002() /* ty=Tensor[(2, 9, 4), float32] */;
  %453 = %451.0;
  (%452, %453)
}

def @func_10808() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(28), int8], Tensor[(448), int8]) {
  %454 = cast(meta[relay.Constant][23] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %455 = cast(meta[relay.Constant][24] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %456 = reshape(%454, newshape=[28, 1]) /* ty=Tensor[(28, 1), int8] */;
  %457 = reshape(%455, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %458 = @func_1245(%456, %457) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(28, 1), int8], Tensor[(448), int8], Tensor[(7, 4, 16), uint16]) */;
  %459 = @func_7633() /* ty=Tensor[(2, 9, 4), float32] */;
  %460 = %458.0;
  (%459, %460, meta[relay.Constant][23] /* ty=Tensor[(28), int8] */, meta[relay.Constant][24] /* ty=Tensor[(448), int8] */)
}

def @func_8517() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %461 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %462 = @func_6681() /* ty=(Tensor[(1, 2475), float32], Tensor[(2, 9, 4), uint32]) */;
  %463 = @func_6779() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %464 = %461.0;
  %465 = @func_8182() /* ty=Tensor[(2, 9, 4), float32] */;
  %466 = %462.1;
  %467 = @func_5293() /* ty=Tensor[(2, 9, 4), float32] */;
  %468 = %463.0;
  (%464, %465, %466, %467, %468)
}

def @func_6540(%var_6522: Tensor[(8, 6, 7), int32]) -> Tensor[(8, 6, 7), int32] {
  %469 = cast(%var_6522, dtype="int32") /* ty=Tensor[(8, 6, 7), int32] */;
  %470 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(8, 6, 7), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 6, 7), int32] */, dtype="int32") /* ty=Tensor[(8, 6, 7), int32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_and(%471, %472) /* ty=Tensor[(8, 6, 7), int32] */
}

def @func_6067() -> Tensor[(5, 6, 2), float32] {
  %473 = @func_2229() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) */;
  %474 = %473.1;
  %475 = cast(%474, dtype="float32") /* ty=Tensor[(5, 6, 2), float32] */;
  atan(%475) /* ty=Tensor[(5, 6, 2), float32] */
}

def @func_5754() -> Tensor[(2, 9, 4), float32] {
  %476 = @func_5462() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %476.1
}

def @func_2035() -> Tensor[(2, 9, 4), float32] {
  %477 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %477.0
}

def @func_19(%var_2: Tensor[(7, 4, 1), int8], %var_3: Tensor[(7, 4, 16), int8]) -> (Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) {
  %478 = cast(%var_2, dtype="int8") /* ty=Tensor[(7, 4, 1), int8] */;
  %479 = cast(%var_3, dtype="int8") /* ty=Tensor[(7, 4, 16), int8] */;
  %480 = cast(%var_3, dtype="float32") /* ty=Tensor[(7, 4, 16), float32] */;
  %481 = cast(%var_2, dtype="float32") /* ty=Tensor[(7, 4, 1), float32] */;
  %482 = add(%478, %479) /* ty=Tensor[(7, 4, 16), int8] */;
  %483 = floor_divide(%480, %481) /* ty=Tensor[(7, 4, 16), float32] */;
  (%482, %483)
}

def @func_4252() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %484 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %485 = @func_4002() /* ty=Tensor[(2, 9, 4), float32] */;
  %486 = cast(%485, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %487 = %484.0;
  %488 = atan(%486) /* ty=Tensor[(2, 9, 4), float32] */;
  (%487, %488)
}

def @func_11850() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %489 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %490 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %491 = %489.1;
  %492 = %490.1;
  (%491, %492)
}

def @func_5344() -> (Tensor[(2, 9, 4), float32],) {
  %493 = @func_4529() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %494 = %493.0;
  (%494,)
}

def @func_5195(%var_5172: Tensor[(24), float64], %var_5173: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32]) {
  %495 = @func_4476() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %496 = cast(%var_5172, dtype="float64") /* ty=Tensor[(24), float64] */;
  %497 = cast(%var_5173, dtype="int32") /* ty=Tensor[(840), int32] */;
  %498 = cast(meta[relay.Constant][26] /* ty=Tensor[(2475), float32] */, dtype="float32") /* ty=Tensor[(2475), float32] */;
  %499 = reshape(%496, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %500 = reshape(%497, newshape=[1, 840]) /* ty=Tensor[(1, 840), int32] */;
  %501 = reshape(%498, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %502 = @func_2874(%499, %500, %501) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) */;
  %503 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  %504 = %495.0;
  %505 = %502.8;
  (%503, %504, %505, %var_5172, %var_5173, meta[relay.Constant][26] /* ty=Tensor[(2475), float32] */)
}

def @func_12040() -> Tensor[(2, 9, 4), float64] {
  @func_10943() /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_10943() -> Tensor[(2, 9, 4), float64] {
  %506 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %506.2
}

def @func_5293() -> Tensor[(2, 9, 4), float32] {
  %507 = @func_5252() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %507.0
}

def @func_9998(%var_9961: Tensor[(28), int8], %var_9963: Tensor[(28), int8], %var_9985: Tensor[(24), float64], %var_9986: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(448), int8], Tensor[(168), int32], Tensor[(28), bool], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %508 = @func_2923() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %509 = @func_9395() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %510 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %511 = cast(meta[relay.Constant][27] /* ty=Tensor[(168), int32] */, dtype="int32") /* ty=Tensor[(168), int32] */;
  %512 = cast(%var_9961, dtype="int8") /* ty=Tensor[(28), int8] */;
  %513 = reshape(%511, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), int32] */;
  %514 = reshape(%512, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %515 = @func_3064(%513, %514) /* ty=(Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) */;
  %516 = cast(%var_9963, dtype="bool") /* ty=Tensor[(28), bool] */;
  %517 = shape_of(%var_9961, dtype="int32") /* ty=Tensor[(1), int32] */;
  %518 = cast(%var_9961, dtype="bool") /* ty=Tensor[(28), bool] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?), bool] */;
  %520 = cast(%var_9985, dtype="float64") /* ty=Tensor[(24), float64] */;
  %521 = cast(%var_9986, dtype="int32") /* ty=Tensor[(840), int32] */;
  %522 = reshape(%520, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %523 = reshape(%521, newshape=[840]) /* ty=Tensor[(840), int32] */;
  %524 = @func_5195(%522, %523) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32]) */;
  %525 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %526 = %508.1;
  %527 = %509.0;
  %528 = %510.4;
  %529 = %515.2;
  %530 = less_equal(%518, %519) /* ty=Tensor[(28), bool] */;
  %531 = %524.2;
  %532 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  %533 = %525.2;
  (%526, %527, %528, %529, meta[relay.Constant][27] /* ty=Tensor[(168), int32] */, %530, %531, %var_9985, %var_9986, %532, %533)
}

def @func_6187() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %534 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
  %535 = @func_1934() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %536 = @func_5344() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %537 = @func_5975() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %538 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %539 = %534.0;
  %540 = %535.1;
  %541 = @func_4027() /* ty=Tensor[(2, 9, 4), float32] */;
  %542 = %536.0;
  %543 = %537.0;
  %544 = %538.0;
  (%539, %540, %541, %542, %543, %544)
}

def @func_12381() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %545 = @func_8114() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %546 = @func_4047() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %547 = %545.2;
  %548 = %546.1;
  (%547, %548)
}

def @func_11386(%var_11372: Tensor[(9, 9, 7), float32], %var_11381: Tensor[(9, 9, 7), float32]) -> Tensor[(9, 9, 7), float64] {
  %549 = cast(%var_11372, dtype="float32") /* ty=Tensor[(9, 9, 7), float32] */;
  %550 = log10(%549) /* ty=Tensor[(9, 9, 7), float32] */;
  %551 = cast(%var_11381, dtype="float64") /* ty=Tensor[(9, 9, 7), float64] */;
  %552 = shape_of(%550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%550, dtype="float64") /* ty=Tensor[(9, 9, 7), float64] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%553, %554) /* ty=Tensor[(9, 9, 7), float64] */
}

def @func_12589() -> Tensor[(2, 9, 4), float32] {
  %555 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %555.1
}

def @func_9236() -> Tensor[(2, 9, 4), float32] {
  @func_5754() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_9920(%var_9879: Tensor[(240), bool]) -> (Tensor[(2, 9, 4), float32], Tensor[(16, 5, 3), bool], Tensor[(240), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %556 = cast(%var_9879, dtype="bool") /* ty=Tensor[(240), bool] */;
  %557 = cast(%var_9879, dtype="bool") /* ty=Tensor[(240), bool] */;
  %558 = reshape(%556, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), bool] */;
  %559 = reshape(%557, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), bool] */;
  %560 = @func_9023(%558, %559) /* ty=(Tensor[(16, 5, 3), bool], Tensor[(16, 5, 3), float64]) */;
  %561 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %562 = @func_3677() /* ty=Tensor[(2, 9, 4), float32] */;
  %563 = %560.0;
  %564 = %561.1;
  %565 = @func_8356() /* ty=Tensor[(2, 9, 4), float32] */;
  (%562, %563, %var_9879, %564, %565)
}

def @func_9675() -> Tensor[(2, 9, 4), float32] {
  %566 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %566.0
}

def @func_11974() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %567 = @func_7461() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %568 = @func_6398() /* ty=(Tensor[(5, 6, 2), float64], Tensor[(2, 9, 4), float32]) */;
  %569 = %567.0;
  %570 = @func_8356() /* ty=Tensor[(2, 9, 4), float32] */;
  %571 = %568.1;
  (%569, %570, %571)
}

def @func_10535() -> (Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32]) {
  %572 = @func_9370() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) */;
  %573 = @func_9293() /* ty=Tensor[(2, 9, 4), float32] */;
  %574 = %572.2;
  (%573, %574)
}

def @func_1934() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %575 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  %576 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  (%575, %576)
}

def @func_8356() -> Tensor[(2, 9, 4), float32] {
  %577 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %577.0
}

def @func_8985(%var_8915: Tensor[(6, 3, 6), float64], %var_8963: Tensor[(144), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(6), float64], Tensor[(2, 9, 4), float32], Tensor[(6, 3, 6), bool], Tensor[(7, 1, 6), float32], Tensor[(12, 3, 6), bool], Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), int8], int8, Tensor[(144), int8], Tensor[(2, 9, 4), float32], Tensor[(1, 1, 6), float64]) {
  %578 = @func_8630() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %579 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %580 = @func_8783() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %581 = cast(meta[relay.Constant][28] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %582 = reshape(%581, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float64] */;
  %583 = @func_8083(%582) /* ty=(Tensor[(1, 1, 6), float64], Tensor[(1, 1, 6), float64]) */;
  %584 = %583.1;
  %585 = cast(%584, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %586 = cast(%var_8915, dtype="bool") /* ty=Tensor[(6, 3, 6), bool] */;
  %587 = @func_8552() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(42), float32]) */;
  %588 = cast(%584, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %589 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 3, 6), float64] */, dtype="bool") /* ty=Tensor[(12, 3, 6), bool] */;
  %590 = cast(meta[relay.Constant][30] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %591 = cast(%var_8963, dtype="int8") /* ty=Tensor[(144), int8] */;
  %592 = reshape(%590, newshape=[]) /* ty=int8 */;
  %593 = reshape(%591, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int8] */;
  %594 = @func_8288(%592, %593) /* ty=(Tensor[(9, 16, 1), int8], Tensor[(9, 16, 1), bool]) */;
  %595 = @func_2229() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) */;
  %596 = cast(meta[relay.Constant][28] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %597 = reshape(%596, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float64] */;
  %598 = @func_8083(%597) /* ty=(Tensor[(1, 1, 6), float64], Tensor[(1, 1, 6), float64]) */;
  %599 = %578.1;
  %600 = %579.1;
  %601 = @func_8356() /* ty=Tensor[(2, 9, 4), float32] */;
  %602 = @func_8356() /* ty=Tensor[(2, 9, 4), float32] */;
  %603 = %580.2;
  %604 = greater_equal(%585, %586) /* ty=Tensor[(6, 3, 6), bool] */;
  %605 = %587.1;
  %606 = logical_or(%588, %589) /* ty=Tensor[(12, 3, 6), bool] */;
  %607 = @func_7633() /* ty=Tensor[(2, 9, 4), float32] */;
  %608 = %594.0;
  %609 = %595.0;
  %610 = %598.1;
  (%599, %600, %601, %602, meta[relay.Constant][28] /* ty=Tensor[(6), float64] */, %603, %604, %605, %606, %607, %608, meta[relay.Constant][30] /* ty=int8 */, %var_8963, %609, %610)
}

def @func_5661() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2475), float32], Tensor[(1, 2475), float32]) {
  %611 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %612 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 2475), float32] */, dtype="float32") /* ty=Tensor[(1, 2475), float32] */;
  %613 = reshape(%612, newshape=[2475]) /* ty=Tensor[(2475), float32] */;
  %614 = @func_3286(%613) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), int64], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32], Tensor[(2, 9, 4), float64]) */;
  %615 = %611.1;
  %616 = @func_2710() /* ty=Tensor[(2, 9, 4), float32] */;
  %617 = %614.4;
  (%615, %616, %617, meta[relay.Constant][31] /* ty=Tensor[(1, 2475), float32] */)
}

def @func_12197() -> Tensor[(2, 9, 4), float32] {
  @func_5293() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_7517(%var_7500: Tensor[(9, 10, 13), uint32]) -> (Tensor[(9, 10, 13), uint32], Tensor[(2, 9, 4), float32]) {
  %618 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 10, 1), uint32] */, dtype="uint32") /* ty=Tensor[(9, 10, 1), uint32] */;
  %619 = cast(%var_7500, dtype="uint32") /* ty=Tensor[(9, 10, 13), uint32] */;
  %620 = @func_6362() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %621 = maximum(%618, %619) /* ty=Tensor[(9, 10, 13), uint32] */;
  %622 = %620.0;
  (%621, %622)
}

def @func_3838() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %623 = @func_2923() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %624 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %625 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %626 = %625.0;
  %627 = cast(%626, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
  %628 = %623.1;
  %629 = %624.1;
  %630 = sinh(%627) /* ty=Tensor[(2, 9, 4), float64] */;
  (%628, %629, %630)
}

def @func_4064() -> (Tensor[(2, 9, 4), float32],) {
  %631 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  (%631,)
}

def @func_2204(%var_2180: Tensor[(2, 9, 4), float32], %var_2198: Tensor[(24), float64], %var_2199: Tensor[(840), int32]) -> (Tensor[(28), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(7, 4, 16), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(840), int32]) {
  %632 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %633 = @func_1934() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %634 = %633.0;
  %635 = cast(%var_2180, dtype="int32") /* ty=Tensor[(2, 9, 4), int32] */;
  %636 = shape_of(%634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %637 = cast(%634, dtype="int32") /* ty=Tensor[(2, 9, 4), int32] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %639 = cast(meta[relay.Constant][33] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %640 = cast(meta[relay.Constant][34] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %641 = reshape(%639, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %642 = reshape(%640, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %643 = @func_19(%641, %642) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %644 = %643.0;
  %645 = cast(meta[relay.Constant][34] /* ty=Tensor[(448), int8] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%644, dtype="float32") /* ty=Tensor[(7, 4, 16), float32] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %649 = cast(%var_2198, dtype="float64") /* ty=Tensor[(24), float64] */;
  %650 = cast(meta[relay.Constant][33] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %651 = cast(%var_2199, dtype="int32") /* ty=Tensor[(840), int32] */;
  %652 = cast(%var_2199, dtype="int32") /* ty=Tensor[(840), int32] */;
  %653 = reshape(%649, newshape=[2, 12]) /* ty=Tensor[(2, 12), float64] */;
  %654 = reshape(%650, newshape=[1, 28]) /* ty=Tensor[(1, 28), int8] */;
  %655 = reshape(%651, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %656 = reshape(%652, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %657 = @func_1723(%653, %654, %655, %656) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) */;
  %658 = %632.0;
  %659 = multiply(%637, %638) /* ty=Tensor[(2, 9, 4), int32] */;
  %660 = power(%647, %648) /* ty=Tensor[(7, 4, 16), float32] */;
  %661 = %657.0;
  (meta[relay.Constant][33] /* ty=Tensor[(28), int8] */, %658, %659, %660, %661, %var_2198, %var_2199)
}

def @func_12480() -> (Tensor[(6, 8, 7), float32], Tensor[(2, 9, 4), float32]) {
  %662 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 8, 7), uint8] */, dtype="uint8") /* ty=Tensor[(6, 8, 7), uint8] */;
  %663 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(6, 8, 7), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 8, 7), uint8] */, dtype="uint8") /* ty=Tensor[(6, 8, 7), uint8] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %666 = bitwise_xor(%664, %665) /* ty=Tensor[(6, 8, 7), uint8] */;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(6, 8, 7), float32] */;
  %668 = @func_11618() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %669 = acosh(%667) /* ty=Tensor[(6, 8, 7), float32] */;
  %670 = %668.0;
  (%669, %670)
}

def @func_8027() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %671 = @func_7542() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %672 = @func_3961() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %673 = @func_7542() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %674 = @func_5155() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %675 = %671.0;
  %676 = %672.0;
  %677 = %673.1;
  %678 = %674.0;
  (%675, %676, %677, %678)
}

def @func_3634() -> (Tensor[(2, 9, 4), float32],) {
  %679 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %680 = %679.3;
  (%680,)
}

def @func_10258(%var_10205: Tensor[(448), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(6, 14, 2), int32], Tensor[(168), int32], Tensor[(10, 28), int64]) {
  %681 = @func_1934() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %682 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 28), int8] */, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %683 = cast(%var_10205, dtype="int8") /* ty=Tensor[(448), int8] */;
  %684 = reshape(%682, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %685 = reshape(%683, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %686 = @func_19(%684, %685) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %687 = cast(meta[relay.Constant][38] /* ty=Tensor[(168), int32] */, dtype="int32") /* ty=Tensor[(168), int32] */;
  %688 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 28), int8] */, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %689 = reshape(%687, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), int32] */;
  %690 = reshape(%688, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %691 = @func_3064(%689, %690) /* ty=(Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) */;
  %692 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 28), int8] */, dtype="int64") /* ty=Tensor[(1, 28), int64] */;
  %693 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 28), int8] */, dtype="int64") /* ty=Tensor[(10, 28), int64] */;
  %694 = %681.0;
  %695 = %686.0;
  %696 = %691.0;
  %697 = bitwise_and(%692, %693) /* ty=Tensor[(10, 28), int64] */;
  (%694, %695, %var_10205, %696, meta[relay.Constant][38] /* ty=Tensor[(168), int32] */, %697)
}

def @func_11235() -> Tensor[(2, 9, 4), float32] {
  %698 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %698.0
}

def @func_6662() -> Tensor[(2, 9, 4), float32] {
  %699 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %699.0
}

def @func_3982(%var_3969: Tensor[(24), float64], %var_3971: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(6, 140), bool], Tensor[(24), float64], Tensor[(28), int8], Tensor[(840), int32]) {
  %700 = @func_3961() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %701 = cast(%var_3969, dtype="float64") /* ty=Tensor[(24), float64] */;
  %702 = cast(meta[relay.Constant][40] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %703 = cast(%var_3971, dtype="int32") /* ty=Tensor[(840), int32] */;
  %704 = cast(%var_3971, dtype="int32") /* ty=Tensor[(840), int32] */;
  %705 = reshape(%701, newshape=[2, 12]) /* ty=Tensor[(2, 12), float64] */;
  %706 = reshape(%702, newshape=[1, 28]) /* ty=Tensor[(1, 28), int8] */;
  %707 = reshape(%703, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %708 = reshape(%704, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %709 = @func_1723(%705, %706, %707, %708) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) */;
  %710 = %700.0;
  %711 = %709.6;
  (%710, %711, %var_3969, meta[relay.Constant][40] /* ty=Tensor[(28), int8] */, %var_3971)
}

def @func_4197() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(2, 9, 4), float32]) {
  %712 = @func_3129() /* ty=(Tensor[(2, 9, 4), float64],) */;
  %713 = cast(meta[relay.Constant][41] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %714 = reshape(%713, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %715 = @func_2119(%714) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %716 = %712.0;
  %717 = %715.1;
  %718 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  (%716, %717, meta[relay.Constant][41] /* ty=Tensor[(400), float64] */, %718)
}

def @func_7542() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %719 = @func_4402() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %720 = @func_7461() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %721 = %719.0;
  %722 = %720.0;
  (%721, %722)
}

def @func_12415(%var_12391: Tensor[(132), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64], Tensor[(132), float64], Tensor[(9, 9, 7), float64], Tensor[(567), float32], Tensor[(6), float64], Tensor[(1, 108), float64], Tensor[(4, 36), int8]) {
  %723 = @func_7001() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %724 = cast(%var_12391, dtype="float64") /* ty=Tensor[(132), float64] */;
  %725 = reshape(%724, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), float64] */;
  %726 = @func_9195(%725) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64]) */;
  %727 = cast(meta[relay.Constant][42] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %728 = cast(meta[relay.Constant][42] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %729 = reshape(%727, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), float32] */;
  %730 = reshape(%728, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), float32] */;
  %731 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 108), float64] */, dtype="float64") /* ty=Tensor[(1, 108), float64] */;
  %732 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 36), int8] */, dtype="int8") /* ty=Tensor[(4, 36), int8] */;
  %733 = reshape(%731, newshape=[6, 3, 6]) /* ty=Tensor[(6, 3, 6), float64] */;
  %734 = reshape(%732, newshape=[144]) /* ty=Tensor[(144), int8] */;
  %735 = @func_8985(%733, %734) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(6), float64], Tensor[(2, 9, 4), float32], Tensor[(6, 3, 6), bool], Tensor[(7, 1, 6), float32], Tensor[(12, 3, 6), bool], Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), int8], int8, Tensor[(144), int8], Tensor[(2, 9, 4), float32], Tensor[(1, 1, 6), float64]) */;
  %736 = %723.0;
  %737 = %726.1;
  %738 = @func_11386(%729, %730) /* ty=Tensor[(9, 9, 7), float64] */;
  %739 = %735.4;
  (%736, %737, %var_12391, %738, meta[relay.Constant][42] /* ty=Tensor[(567), float32] */, %739, meta[relay.Constant][43] /* ty=Tensor[(1, 108), float64] */, meta[relay.Constant][44] /* ty=Tensor[(4, 36), int8] */)
}

def @func_9631() -> (Tensor[(2, 9, 4), float32],) {
  %740 = @func_5975() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %741 = %740.1;
  (%741,)
}

def @func_8083(%var_8068: Tensor[(1, 1, 6), float64]) -> (Tensor[(1, 1, 6), float64], Tensor[(1, 1, 6), float64]) {
  %742 = cast(%var_8068, dtype="float64") /* ty=Tensor[(1, 1, 6), float64] */;
  %743 = cast(%var_8068, dtype="float64") /* ty=Tensor[(1, 1, 6), float64] */;
  %744 = cos(%743) /* ty=Tensor[(1, 1, 6), float64] */;
  %745 = cast(%744, dtype="float64") /* ty=Tensor[(1, 1, 6), float64] */;
  %746 = erf(%742) /* ty=Tensor[(1, 1, 6), float64] */;
  %747 = sin(%745) /* ty=Tensor[(1, 1, 6), float64] */;
  (%746, %747)
}

def @func_11370() -> (Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %748 = @func_6362() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %749 = @func_10535() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32]) */;
  %750 = @func_8114() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %751 = @func_7567() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %752 = %748.1;
  %753 = %749.1;
  %754 = %750.0;
  %755 = %751.0;
  (%752, %753, %754, %755)
}

def @func_4027() -> Tensor[(2, 9, 4), float32] {
  %756 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %756.1
}

def @func_2582() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %757 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %758 = cast(%757, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %759 = sigmoid(%758) /* ty=Tensor[(2, 9, 4), float32] */;
  %760 = cast(%759, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %761 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  %762 = asin(%760) /* ty=Tensor[(2, 9, 4), float32] */;
  (%761, %762)
}

def @func_2710() -> Tensor[(2, 9, 4), float32] {
  %763 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  %764 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 9, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  maximum(%766, %767) /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_10702() -> Tensor[(7, 1, 6), float32] {
  %768 = @func_9370() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) */;
  %769 = %768.2;
  %770 = cast(%769, dtype="float32") /* ty=Tensor[(7, 1, 6), float32] */;
  asinh(%770) /* ty=Tensor[(7, 1, 6), float32] */
}

def @func_11481(%var_11477: int8) -> (Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), bool], int8, Tensor[(144), int8]) {
  %771 = cast(%var_11477, dtype="int8") /* ty=int8 */;
  %772 = cast(meta[relay.Constant][46] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %773 = reshape(%771, newshape=[]) /* ty=int8 */;
  %774 = reshape(%772, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int8] */;
  %775 = @func_8288(%773, %774) /* ty=(Tensor[(9, 16, 1), int8], Tensor[(9, 16, 1), bool]) */;
  %776 = @func_9236() /* ty=Tensor[(2, 9, 4), float32] */;
  %777 = %775.1;
  (%776, %777, %var_11477, meta[relay.Constant][46] /* ty=Tensor[(144), int8] */)
}

def @func_8114() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %778 = @func_4402() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %779 = @func_6779() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %780 = @func_7795() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %781 = %778.0;
  %782 = %779.0;
  %783 = %780.0;
  (%781, %782, %783)
}

def @func_12515() -> Tensor[(2, 9, 4), float32] {
  %784 = @func_8783() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %784.2
}

def @func_6362() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %785 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %786 = @func_3634() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %787 = @func_5873() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %788 = %785.0;
  %789 = %786.0;
  %790 = %787.0;
  (%788, %789, %790)
}

def @func_2025() -> Tensor[(2, 9, 4), float32] {
  @func_1263() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_7312() -> (Tensor[(2, 9, 4), float32],) {
  %791 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %792 = %791.0;
  (%792,)
}

def @func_7001() -> (Tensor[(2, 9, 4), float32],) {
  %793 = @func_6187() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %794 = %793.5;
  (%794,)
}

def @func_8552() -> (Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(42), float32]) {
  %795 = @func_7567() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %796 = cast(meta[relay.Constant][47] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %797 = reshape(%796, newshape=[7, 1, 6]) /* ty=Tensor[(7, 1, 6), float32] */;
  %798 = @func_6372(%797) /* ty=(Tensor[(7, 1, 6), float32],) */;
  %799 = %795.0;
  %800 = %798.0;
  (%799, %800, meta[relay.Constant][47] /* ty=Tensor[(42), float32] */)
}

def @func_1340() -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) {
  %801 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  %802 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 9, 4), float32] */, dtype="uint32") /* ty=Tensor[(2, 9, 4), uint32] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%801, dtype="uint32") /* ty=Tensor[(2, 9, 4), uint32] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %806 = bitwise_and(%804, %805) /* ty=Tensor[(2, 9, 4), uint32] */;
  %807 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  (%806, %807)
}

def @func_7424() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %808 = @func_4436() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %809 = %808.0;
  %810 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
  (%809, %810)
}

def @func_2397() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
  %811 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %812 = @func_1449() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %813 = @func_2229() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) */;
  %814 = %811.1;
  %815 = %812.1;
  %816 = %813.0;
  (%814, %815, %816)
}

def @func_2229() -> (Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) {
  %817 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %818 = cast(meta[relay.Constant][49] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %819 = cast(meta[relay.Constant][49] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %820 = reshape(%818, newshape=[5, 6, 2]) /* ty=Tensor[(5, 6, 2), uint64] */;
  %821 = reshape(%819, newshape=[5, 6, 2]) /* ty=Tensor[(5, 6, 2), uint64] */;
  %822 = %817.0;
  %823 = @func_2078(%820, %821) /* ty=Tensor[(5, 6, 2), uint64] */;
  (%822, %823, meta[relay.Constant][49] /* ty=Tensor[(60), uint64] */)
}

def @func_1104() -> (Tensor[(2, 9, 4), float32],) {
  %824 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %825 = %824.0;
  (%825,)
}

def @func_11467() -> Tensor[(2, 9, 4), float32] {
  %826 = @func_7461() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %826.0
}

def @func_5252() -> (Tensor[(2, 9, 4), float32],) {
  %827 = @func_4436() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %828 = %827.1;
  (%828,)
}

def @func_7567() -> (Tensor[(2, 9, 4), float32],) {
  %829 = @func_7086() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
  %830 = %829.2;
  (%830,)
}

def @func_9293() -> Tensor[(2, 9, 4), float32] {
  %831 = @func_3961() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %831.0
}

def @func_12495() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %832 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %833 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %834 = %832.4;
  (%833, %834)
}

def @func_9535() -> Tensor[(2, 9, 4), float32] {
  %835 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %835.4
}

def @func_5088() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %836 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %837 = %836.0;
  %838 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
  (%837, %838)
}

def @func_8182() -> Tensor[(2, 9, 4), float32] {
  %839 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %839.0
}

def @func_9171() -> (Tensor[(2, 9, 4), float32],) {
  %840 = @func_7001() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %841 = %840.0;
  (%841,)
}

def @func_4907() -> (Tensor[(2, 9, 4), float32],) {
  %842 = @func_4436() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %843 = %842.1;
  (%843,)
}

def @func_12331() -> (Tensor[(2, 9, 4), float32],) {
  %844 = @func_7001() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %845 = %844.0;
  (%845,)
}

def @func_11698() -> (Tensor[(7, 1, 6), float32], Tensor[(2, 9, 4), float32], Tensor[(8, 16, ?), int64], Tensor[(8, 16), float32], Tensor[(2, 9, 4), float32]) {
  %846 = @func_9370() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) */;
  %847 = cast(meta[relay.Constant][50] /* ty=Tensor[(8, 16), float32] */, dtype="float32") /* ty=Tensor[(8, 16), float32] */;
  %848 = reshape(%847, newshape=[8, 16, 1]) /* ty=Tensor[(8, 16, 1), float32] */;
  %849 = @func_10666(%848) /* ty=(Tensor[(8, 16, ?), int64], Tensor[(2, 9, 4), float64], Tensor[(8, 16, ?), float64], Tensor[(8, 16, ?), bool], Tensor[(8, 16, ?), int16]) */;
  %850 = %846.2;
  %851 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  %852 = %849.0;
  %853 = @func_11235() /* ty=Tensor[(2, 9, 4), float32] */;
  (%850, %851, %852, meta[relay.Constant][50] /* ty=Tensor[(8, 16), float32] */, %853)
}

def @func_1245(%var_1207: Tensor[(28, 1), int8], %var_1208: Tensor[(448), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(28, 1), int8], Tensor[(448), int8], Tensor[(7, 4, 16), uint16]) {
  %854 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %855 = cast(%var_1207, dtype="int8") /* ty=Tensor[(28, 1), int8] */;
  %856 = cast(%var_1208, dtype="int8") /* ty=Tensor[(448), int8] */;
  %857 = reshape(%855, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %858 = reshape(%856, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %859 = @func_19(%857, %858) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %860 = %859.1;
  %861 = cast(meta[relay.Constant][51] /* ty=Tensor[(7, 4, 16), float32] */, dtype="uint16") /* ty=Tensor[(7, 4, 16), uint16] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%860, dtype="uint16") /* ty=Tensor[(7, 4, 16), uint16] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %865 = %854.0;
  %866 = bitwise_xor(%863, %864) /* ty=Tensor[(7, 4, 16), uint16] */;
  (%865, %var_1207, %var_1208, %866)
}

def @func_8429() -> (Tensor[(2, 9, 4), float32],) {
  %867 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %868 = %867.0;
  (%868,)
}

def @func_4288() -> (Tensor[(2, 9, 4), float32],) {
  %869 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %870 = %869.0;
  (%870,)
}

def @func_4047() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %871 = @func_2923() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %872 = @func_3262() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %873 = %871.2;
  %874 = %872.1;
  (%873, %874)
}

def @func_6860(%var_6823: bool, %var_6824: Tensor[(16, 2, 7), bool]) -> (Tensor[(16, 2, 7), bool],) {
  %875 = cast(%var_6823, dtype="bool") /* ty=bool */;
  %876 = cast(%var_6824, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
  %877 = logical_or(%875, %876) /* ty=Tensor[(16, 2, 7), bool] */;
  %878 = cast(%877, dtype="uint32") /* ty=Tensor[(16, 2, 7), uint32] */;
  %879 = cast(%var_6823, dtype="uint32") /* ty=uint32 */;
  %880 = logical_xor(%878, %879) /* ty=Tensor[(16, 2, 7), uint32] */;
  %881 = cast(%880, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
  %882 = shape_of(%var_6824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%var_6824, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %885 = less(%883, %884) /* ty=Tensor[(16, 2, 7), bool] */;
  (%885,)
}

def @func_8630() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %886 = @func_7312() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %887 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %888 = %886.0;
  %889 = %887.1;
  %890 = @func_6592() /* ty=Tensor[(2, 9, 4), float32] */;
  (%888, %889, %890)
}

def @func_2486() -> (Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %891 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  %892 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %893 = %892.4;
  %894 = cast(%893, dtype="bool") /* ty=Tensor[(2, 9, 4), bool] */;
  %895 = shape_of(%891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%891, dtype="bool") /* ty=Tensor[(2, 9, 4), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = cast(%891, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %899 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %900 = greater_equal(%896, %897) /* ty=Tensor[(2, 9, 4), bool] */;
  %901 = sqrt(%898) /* ty=Tensor[(2, 9, 4), float32] */;
  %902 = %899.0;
  (%900, %901, %902)
}

def @func_12649() -> (Tensor[(2, 9, 4), float64],) {
  %903 = @func_1449() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %904 = %903.1;
  (%904,)
}

def @func_10340(%var_10278: Tensor[(60, 14), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(12, 4, 6), float64], Tensor[(60, 14), int32], Tensor[(448), int8], Tensor[(28), float32]) {
  %905 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %906 = cast(%var_10278, dtype="int32") /* ty=Tensor[(60, 14), int32] */;
  %907 = cast(meta[relay.Constant][52] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %908 = cast(meta[relay.Constant][53] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %909 = reshape(%906, newshape=[14, 12, 5]) /* ty=Tensor[(14, 12, 5), int32] */;
  %910 = reshape(%907, newshape=[7, 4]) /* ty=Tensor[(7, 4), int8] */;
  %911 = reshape(%908, newshape=[56, 8]) /* ty=Tensor[(56, 8), int8] */;
  %912 = @func_1068(%909, %910, %911) /* ty=(Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) */;
  %913 = cast(meta[relay.Constant][52] /* ty=Tensor[(28), int8] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %914 = %905.0;
  %915 = %912.4;
  %916 = rsqrt(%913) /* ty=Tensor[(28), float32] */;
  (%914, %915, %var_10278, meta[relay.Constant][53] /* ty=Tensor[(448), int8] */, %916)
}

def @func_159(%var_77: Tensor[(4, 2, 3), float64], %var_94: Tensor[(28), int8], %var_95: Tensor[(448), int8]) -> (Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) {
  %917 = cast(%var_77, dtype="float64") /* ty=Tensor[(4, 2, 3), float64] */;
  %918 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 2, 3), float64] */, dtype="uint32") /* ty=Tensor[(4, 2, 3), uint32] */;
  %919 = shape_of(%var_77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%var_77, dtype="uint32") /* ty=Tensor[(4, 2, 3), uint32] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %922 = cast(%var_94, dtype="int8") /* ty=Tensor[(28), int8] */;
  %923 = cast(%var_95, dtype="int8") /* ty=Tensor[(448), int8] */;
  %924 = reshape(%922, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %925 = reshape(%923, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %926 = @func_19(%924, %925) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %927 = cast(%var_94, dtype="int8") /* ty=Tensor[(28), int8] */;
  %928 = cast(%var_95, dtype="int8") /* ty=Tensor[(448), int8] */;
  %929 = reshape(%927, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %930 = reshape(%928, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %931 = @func_19(%929, %930) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %932 = %931.0;
  %933 = cast(%932, dtype="float32") /* ty=Tensor[(7, 4, 16), float32] */;
  %934 = acos(%917) /* ty=Tensor[(4, 2, 3), float64] */;
  %935 = multiply(%920, %921) /* ty=Tensor[(4, 2, 3), uint32] */;
  %936 = %926.0;
  %937 = atanh(%933) /* ty=Tensor[(7, 4, 16), float32] */;
  (%934, %var_94, %var_95, %935, %936, %937)
}

def @func_3012() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %938 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %939 = %938.1;
  %940 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
  (%939, %940)
}

def @func_1449() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %941 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %942 = %941.0;
  %943 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
  (%942, %943)
}

def @func_4695(%var_4566: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(28), int8], Tensor[(840), int32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %944 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
  %945 = cast(meta[relay.Constant][55] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %946 = cast(meta[relay.Constant][56] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %947 = cast(%var_4566, dtype="int32") /* ty=Tensor[(840), int32] */;
  %948 = cast(%var_4566, dtype="int32") /* ty=Tensor[(840), int32] */;
  %949 = reshape(%945, newshape=[2, 12]) /* ty=Tensor[(2, 12), float64] */;
  %950 = reshape(%946, newshape=[1, 28]) /* ty=Tensor[(1, 28), int8] */;
  %951 = reshape(%947, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %952 = reshape(%948, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %953 = @func_1723(%949, %950, %951, %952) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) */;
  %954 = @func_4529() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %955 = @func_1449() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %956 = @func_4476() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %957 = @func_4106() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %958 = %944.0;
  %959 = %953.8;
  %960 = %954.1;
  %961 = %955.0;
  %962 = %956.0;
  %963 = %957.0;
  (%958, %959, meta[relay.Constant][55] /* ty=Tensor[(24), float64] */, meta[relay.Constant][56] /* ty=Tensor[(28), int8] */, %var_4566, %960, %961, %962, %963)
}

def @func_6480() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %964 = @func_4064() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %965 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %966 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %967 = %964.0;
  %968 = %965.1;
  %969 = %966.3;
  (%967, %968, %969)
}

def @func_10967(%var_10959: Tensor[(108), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(108), float64], Tensor[(144), int8]) {
  %970 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %971 = cast(%var_10959, dtype="float64") /* ty=Tensor[(108), float64] */;
  %972 = cast(meta[relay.Constant][57] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
  %973 = reshape(%971, newshape=[6, 3, 6]) /* ty=Tensor[(6, 3, 6), float64] */;
  %974 = reshape(%972, newshape=[144]) /* ty=Tensor[(144), int8] */;
  %975 = @func_8985(%973, %974) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(6), float64], Tensor[(2, 9, 4), float32], Tensor[(6, 3, 6), bool], Tensor[(7, 1, 6), float32], Tensor[(12, 3, 6), bool], Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), int8], int8, Tensor[(144), int8], Tensor[(2, 9, 4), float32], Tensor[(1, 1, 6), float64]) */;
  %976 = %970.0;
  %977 = %975.13;
  (%976, %977, %var_10959, meta[relay.Constant][57] /* ty=Tensor[(144), int8] */)
}

def @func_6429() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %978 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %979 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %980 = %978.1;
  %981 = %979.1;
  (%980, %981)
}

def @func_6398() -> (Tensor[(5, 6, 2), float64], Tensor[(2, 9, 4), float32]) {
  %982 = @func_2229() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) */;
  %983 = %982.1;
  %984 = cast(%983, dtype="float64") /* ty=Tensor[(5, 6, 2), float64] */;
  %985 = sin(%984) /* ty=Tensor[(5, 6, 2), float64] */;
  %986 = @func_3677() /* ty=Tensor[(2, 9, 4), float32] */;
  (%985, %986)
}

def @func_4436() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %987 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %988 = @func_4027() /* ty=Tensor[(2, 9, 4), float32] */;
  %989 = %987.1;
  (%988, %989)
}

def @func_3931() -> (Tensor[(2, 9, 4), float32],) {
  %990 = @func_3869() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %991 = %990.0;
  (%991,)
}

def @func_11206() -> (Tensor[(2, 9, 4), float32],) {
  %992 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %993 = %992.0;
  (%993,)
}

def @func_4106() -> (Tensor[(2, 9, 4), float32],) {
  %994 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  (%994,)
}

def @func_12311() -> Tensor[(2, 9, 4), float64] {
  @func_1157() /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_1263() -> Tensor[(2, 9, 4), float32] {
  @func_1184() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_3869() -> (Tensor[(2, 9, 4), float32],) {
  %995 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %996 = %995.0;
  (%996,)
}

def @func_1157() -> Tensor[(2, 9, 4), float64] {
  %997 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %998 = %997.0;
  %999 = cast(%998, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
  erf(%999) /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_3961() -> (Tensor[(2, 9, 4), float32],) {
  %1000 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1001 = %1000.0;
  (%1001,)
}

def @func_3286(%var_3279: Tensor[(2475), float32]) -> (Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), int64], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32], Tensor[(2, 9, 4), float64]) {
  %1002 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1003 = cast(meta[relay.Constant][58] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %1004 = cast(meta[relay.Constant][59] /* ty=Tensor[(840), int32] */, dtype="int32") /* ty=Tensor[(840), int32] */;
  %1005 = cast(%var_3279, dtype="float32") /* ty=Tensor[(2475), float32] */;
  %1006 = reshape(%1003, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %1007 = reshape(%1004, newshape=[1, 840]) /* ty=Tensor[(1, 840), int32] */;
  %1008 = reshape(%1005, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %1009 = @func_2874(%1006, %1007, %1008) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) */;
  %1010 = @func_3129() /* ty=(Tensor[(2, 9, 4), float64],) */;
  %1011 = %1002.2;
  %1012 = %1009.5;
  %1013 = %1010.0;
  (%1011, %1012, meta[relay.Constant][58] /* ty=Tensor[(24), float64] */, meta[relay.Constant][59] /* ty=Tensor[(840), int32] */, %var_3279, %1013)
}

def @func_8704() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1014 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1015 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  %1016 = %1014.1;
  (%1015, %1016)
}

def @func_9370() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) {
  %1017 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %1018 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1019 = @func_8552() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(42), float32]) */;
  %1020 = %1017.2;
  %1021 = %1018.0;
  %1022 = %1019.1;
  (%1020, %1021, %1022)
}

def @main() -> (Tensor[(15, ?, 15), uint32], Tensor[(15, 1, 15), float64]) {
  %1023 = cast(meta[relay.Constant][60] /* ty=Tensor[(15, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 15), float32] */;
  %1024 = tan(%1023) /* ty=Tensor[(15, 1, 15), float32] */;
  %1025 = cast(%1024, dtype="bool") /* ty=Tensor[(15, 1, 15), bool] */;
  %1026 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(15, 1, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(meta[relay.Constant][60] /* ty=Tensor[(15, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(15, 1, 15), bool] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1029 = greater(%1027, %1028) /* ty=Tensor[(15, ?, 15), bool] */;
  %1030 = cast(%1029, dtype="uint32") /* ty=Tensor[(15, ?, 15), uint32] */;
  %1031 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(15, 1, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1032 = cast(meta[relay.Constant][60] /* ty=Tensor[(15, 1, 15), float32] */, dtype="uint32") /* ty=Tensor[(15, 1, 15), uint32] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1034 = cast(%1024, dtype="float64") /* ty=Tensor[(15, 1, 15), float64] */;
  %1035 = bitwise_xor(%1032, %1033) /* ty=Tensor[(15, ?, 15), uint32] */;
  %1036 = cos(%1034) /* ty=Tensor[(15, 1, 15), float64] */;
  (%1035, %1036)
}

def @func_10168() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1037 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1038 = @func_6517() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1039 = %1037.0;
  %1040 = %1038.1;
  (%1039, %1040)
}

def @func_9395() -> (Tensor[(2, 9, 4), float32],) {
  %1041 = @func_3262() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %1042 = %1041.1;
  (%1042,)
}

def @func_3677() -> Tensor[(2, 9, 4), float32] {
  %1043 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1043.1
}

def @func_8783() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1044 = @func_6779() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1045 = @func_5344() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1046 = @func_6955() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1047 = %1044.0;
  %1048 = %1045.0;
  %1049 = %1046.0;
  (%1047, %1048, %1049)
}

def @func_9822() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %1050 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1051 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1052 = @func_7567() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1053 = %1050.0;
  %1054 = %1051.0;
  %1055 = %1052.0;
  %1056 = @func_8349() /* ty=Tensor[(2, 9, 4), float64] */;
  (%1053, %1054, %1055, %1056)
}

def @func_5823(%var_5789: Tensor[(448), int8], %var_5798: Tensor[(12, 70), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(12, 4, 6), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 70), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(12, 70), float32]) {
  %1057 = @func_5155() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1058 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1059 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 70), int32] */, dtype="int32") /* ty=Tensor[(12, 70), int32] */;
  %1060 = cast(meta[relay.Constant][62] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %1061 = cast(%var_5789, dtype="int8") /* ty=Tensor[(448), int8] */;
  %1062 = reshape(%1059, newshape=[14, 12, 5]) /* ty=Tensor[(14, 12, 5), int32] */;
  %1063 = reshape(%1060, newshape=[7, 4]) /* ty=Tensor[(7, 4), int8] */;
  %1064 = reshape(%1061, newshape=[56, 8]) /* ty=Tensor[(56, 8), int8] */;
  %1065 = @func_1068(%1062, %1063, %1064) /* ty=(Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) */;
  %1066 = cast(%var_5798, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %1067 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(12, 70), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1068 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 70), int32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1070 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %1071 = @func_2923() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1072 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 70), int32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %1073 = %1057.0;
  %1074 = %1058.0;
  %1075 = %1065.4;
  %1076 = power(%1068, %1069) /* ty=Tensor[(12, 70), float32] */;
  %1077 = %1070.0;
  %1078 = %1071.2;
  %1079 = rsqrt(%1072) /* ty=Tensor[(12, 70), float32] */;
  (%1073, %1074, %1075, meta[relay.Constant][62] /* ty=Tensor[(28), int8] */, %var_5789, %1076, %1077, %1078, %1079)
}

def @func_5895(%var_5885: Tensor[(2, 9, 4), float32]) -> Tensor[(2, 9, 4), uint32] {
  %1080 = @func_4252() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1081 = %1080.0;
  %1082 = cast(%var_5885, dtype="uint32") /* ty=Tensor[(2, 9, 4), uint32] */;
  %1083 = shape_of(%1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%1081, dtype="uint32") /* ty=Tensor[(2, 9, 4), uint32] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%1084, %1085) /* ty=Tensor[(2, 9, 4), uint32] */
}

def @func_9023(%var_9005: Tensor[(16, 5, 3), bool], %var_9006: Tensor[(16, 5, 3), bool]) -> (Tensor[(16, 5, 3), bool], Tensor[(16, 5, 3), float64]) {
  %1086 = cast(%var_9006, dtype="bool") /* ty=Tensor[(16, 5, 3), bool] */;
  %1087 = shape_of(%var_9005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1088 = cast(%var_9005, dtype="bool") /* ty=Tensor[(16, 5, 3), bool] */;
  %1089 = dyn.reshape(%1086, %1087, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1090 = cast(%var_9006, dtype="float64") /* ty=Tensor[(16, 5, 3), float64] */;
  %1091 = sinh(%1090) /* ty=Tensor[(16, 5, 3), float64] */;
  %1092 = cast(%var_9005, dtype="float64") /* ty=Tensor[(16, 5, 3), float64] */;
  %1093 = shape_of(%1091, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%1091, dtype="float64") /* ty=Tensor[(16, 5, 3), float64] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1096 = logical_and(%1088, %1089) /* ty=Tensor[(16, 5, 3), bool] */;
  %1097 = mod(%1094, %1095) /* ty=Tensor[(16, 5, 3), float64] */;
  (%1096, %1097)
}

def @func_11618() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1098 = @func_9535() /* ty=Tensor[(2, 9, 4), float32] */;
  %1099 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
  (%1098, %1099)
}

def @func_10093() -> (Tensor[(6, 11, 9), bool],) {
  %1100 = cast(meta[relay.Constant][63] /* ty=Tensor[(6, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
  %1101 = atan(%1100) /* ty=Tensor[(6, 11, 9), float32] */;
  %1102 = cast(meta[relay.Constant][63] /* ty=Tensor[(6, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %1103 = shape_of(%1101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(%1101, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1106 = equal(%1104, %1105) /* ty=Tensor[(6, 11, 9), bool] */;
  (%1106,)
}

def @func_6517() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1107 = @func_5088() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1108 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1109 = @func_3634() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1110 = %1107.1;
  %1111 = @func_5754() /* ty=Tensor[(2, 9, 4), float32] */;
  %1112 = %1108.0;
  %1113 = %1109.0;
  (%1110, %1111, %1112, %1113)
}

def @func_11302() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1114 = @func_3634() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1115 = @func_7001() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1116 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %1117 = %1114.0;
  %1118 = %1115.0;
  %1119 = @func_9293() /* ty=Tensor[(2, 9, 4), float32] */;
  (%1116, %1117, %1118, %1119)
}

def @func_5975() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1120 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1121 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1122 = %1120.0;
  %1123 = @func_3721() /* ty=Tensor[(2, 9, 4), float32] */;
  %1124 = %1121.4;
  (%1122, %1123, %1124)
}

def @func_3583(%var_3514: Tensor[(2, 9, 4), float32], %var_3523: Tensor[(6, 4), float64], %var_3524: Tensor[(840), int32], %var_3525: Tensor[(825, 3), float32]) -> (Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(6, 4), float64], Tensor[(840), int32], Tensor[(825, 3), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  %1125 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1126 = %1125.0;
  %1127 = cast(%var_3514, dtype="bool") /* ty=Tensor[(2, 9, 4), bool] */;
  %1128 = shape_of(%1126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1129 = cast(%1126, dtype="bool") /* ty=Tensor[(2, 9, 4), bool] */;
  %1130 = dyn.reshape(%1127, %1128, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1131 = cast(%var_3523, dtype="float64") /* ty=Tensor[(6, 4), float64] */;
  %1132 = cast(%var_3524, dtype="int32") /* ty=Tensor[(840), int32] */;
  %1133 = cast(%var_3525, dtype="float32") /* ty=Tensor[(825, 3), float32] */;
  %1134 = reshape(%1131, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %1135 = reshape(%1132, newshape=[1, 840]) /* ty=Tensor[(1, 840), int32] */;
  %1136 = reshape(%1133, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %1137 = @func_2874(%1134, %1135, %1136) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) */;
  %1138 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %1139 = cast(meta[relay.Constant][64] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1140 = reshape(%1139, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %1141 = greater(%1129, %1130) /* ty=Tensor[(2, 9, 4), bool] */;
  %1142 = %1137.7;
  %1143 = %1138.1;
  %1144 = @func_1527(%1140) /* ty=Tensor[(10, 8, 5), float64] */;
  (%1141, %1142, %var_3523, %var_3524, %var_3525, %1143, %1144, meta[relay.Constant][64] /* ty=Tensor[(400), float64] */)
}

def @func_5488(%var_5483: Tensor[(24), float64]) -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(28), int8], Tensor[(24), uint8]) {
  %1145 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
  %1146 = @func_4907() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1147 = cast(meta[relay.Constant][65] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %1148 = cast(meta[relay.Constant][66] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %1149 = reshape(%1147, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %1150 = reshape(%1148, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %1151 = @func_1595(%1149, %1150) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), float32], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(4, 112), int8], Tensor[(2, 9, 4), float32]) */;
  %1152 = cast(%var_5483, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %1153 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(24), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1154 = cast(meta[relay.Constant][65] /* ty=Tensor[(24), float64] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1156 = %1145.1;
  %1157 = %1146.0;
  %1158 = %1151.0;
  %1159 = left_shift(%1154, %1155) /* ty=Tensor[(24), uint8] */;
  (%1156, %1157, %1158, meta[relay.Constant][66] /* ty=Tensor[(28), int8] */, %1159)
}

def @func_3245() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1160 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
  %1161 = cast(%1160, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %1162 = acosh(%1161) /* ty=Tensor[(2, 9, 4), float32] */;
  %1163 = cast(%1162, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %1164 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
  %1165 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  %1166 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  %1167 = exp(%1163) /* ty=Tensor[(2, 9, 4), float32] */;
  (%1164, %1165, %1166, %1167)
}

def @func_7086() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) {
  %1168 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %1169 = @func_6517() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1170 = @func_3320() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
  %1171 = @func_3320() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
  %1172 = %1168.1;
  %1173 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %1174 = %1169.0;
  %1175 = %1170.2;
  %1176 = %1171.1;
  (%1172, %1173, %1174, %1175, %1176)
}

def @func_4002() -> Tensor[(2, 9, 4), float32] {
  %1177 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1177.0
}

def @func_1368() -> Tensor[(2, 9, 4), float32] {
  %1178 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1178.0
}

def @func_2078(%var_2052: Tensor[(5, 6, 2), uint64], %var_2053: Tensor[(5, 6, 2), uint64]) -> Tensor[(5, 6, 2), uint64] {
  %1179 = cast(%var_2053, dtype="uint64") /* ty=Tensor[(5, 6, 2), uint64] */;
  %1180 = shape_of(%var_2052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1181 = cast(%var_2052, dtype="uint64") /* ty=Tensor[(5, 6, 2), uint64] */;
  %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%1181, %1182) /* ty=Tensor[(5, 6, 2), uint64] */
}

def @func_1989() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) {
  %1183 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %1184 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  %1185 = %1183.0;
  (%1184, %1185)
}

def @func_9771() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %1186 = @func_6429() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %1187 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
  %1188 = %1186.1;
  (%1187, %1188)
}

def @func_2119(%var_2105: Tensor[(400), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  %1189 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1190 = cast(%var_2105, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1191 = reshape(%1190, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %1192 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %1193 = %1189.0;
  %1194 = @func_1527(%1191) /* ty=Tensor[(10, 8, 5), float64] */;
  (%1192, %1193, %1194, %var_2105)
}

def @func_4763() -> Tensor[(2, 9, 4), float32] {
  @func_2035() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_6592() -> Tensor[(2, 9, 4), float32] {
  %1195 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1195.0
}

def @func_11172(%var_11116: float64) -> (Tensor[(15, 9, 12), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(15, 9, 12), float64]) {
  %1196 = cast(%var_11116, dtype="float64") /* ty=float64 */;
  %1197 = cast(meta[relay.Constant][67] /* ty=Tensor[(15, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %1198 = @func_4476() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1199 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %1200 = cast(meta[relay.Constant][67] /* ty=Tensor[(15, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
  %1201 = divide(%1196, %1197) /* ty=Tensor[(15, 9, 12), float64] */;
  %1202 = %1198.1;
  %1203 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
  %1204 = %1199.0;
  %1205 = sin(%1200) /* ty=Tensor[(15, 9, 12), float64] */;
  (%1201, %1202, %1203, %1204, %1205)
}

def @func_5268() -> (Tensor[(2, 9, 4), float64],) {
  %1206 = @func_3129() /* ty=(Tensor[(2, 9, 4), float64],) */;
  %1207 = %1206.0;
  (%1207,)
}

def @func_9465() -> Tensor[(2, 9, 4), float32] {
  %1208 = @func_4047() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1208.0
}

def @func_10035() -> (Tensor[(2, 9, 4), float32],) {
  %1209 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1210 = %1209.4;
  (%1210,)
}

def @func_10015() -> (Tensor[(1, 2475), float32],) {
  %1211 = @func_5661() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2475), float32], Tensor[(1, 2475), float32]) */;
  %1212 = %1211.3;
  (%1212,)
}

def @func_6875() -> Tensor[(2, 9, 4), float32] {
  %1213 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1213.1
}

def @func_8349() -> Tensor[(2, 9, 4), float64] {
  @func_1157() /* ty=Tensor[(2, 9, 4), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11974() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %0 = @func_7461() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1 = @func_6398() /* ty=(Tensor[(5, 6, 2), float64], Tensor[(2, 9, 4), float32]) */;
  %2 = %0.0;
  %3 = @func_8356() /* ty=Tensor[(2, 9, 4), float32] */;
  %4 = %1.1;
  (%2, %3, %4)
}

def @func_1248(%var_1246: Tensor[(28, 1), int8], %var_1247: Tensor[(448), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(28, 1), int8], Tensor[(448), int8], Tensor[(7, 4, 16), uint16]) {
  %18 = fn (%var_1207: Tensor[(28, 1), int8], %var_1208: Tensor[(448), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(28, 1), int8], Tensor[(448), int8], Tensor[(7, 4, 16), uint16]) {
    %5 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %6 = cast(%var_1207, dtype="int8") /* ty=Tensor[(28, 1), int8] */;
    %7 = cast(%var_1208, dtype="int8") /* ty=Tensor[(448), int8] */;
    %8 = reshape(%6, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
    %9 = reshape(%7, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
    %10 = @func_19(%8, %9) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
    %11 = %10.1;
    %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 4, 16), float32] */, dtype="uint16") /* ty=Tensor[(7, 4, 16), uint16] */;
    %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
    %14 = cast(%11, dtype="uint16") /* ty=Tensor[(7, 4, 16), uint16] */;
    %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %16 = %5.0;
    %17 = bitwise_xor(%14, %15) /* ty=Tensor[(7, 4, 16), uint16] */;
    (%16, %var_1207, %var_1208, %17)
  };
  %18(%var_1246, %var_1247) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(28, 1), int8], Tensor[(448), int8], Tensor[(7, 4, 16), uint16]) */
}

def @func_7569() -> (Tensor[(2, 9, 4), float32],) {
  @func_7567() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_8552() -> (Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(42), float32]) {
  %19 = @func_7567() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %21 = reshape(%20, newshape=[7, 1, 6]) /* ty=Tensor[(7, 1, 6), float32] */;
  %22 = @func_6372(%21) /* ty=(Tensor[(7, 1, 6), float32],) */;
  %23 = %19.0;
  %24 = %22.0;
  (%23, %24, meta[relay.Constant][1] /* ty=Tensor[(42), float32] */)
}

def @func_5157() -> (Tensor[(2, 9, 4), float32],) {
  @func_5155() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_8785() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_8783() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_10168() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %25 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %26 = @func_6517() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %27 = %25.0;
  %28 = %26.1;
  (%27, %28)
}

def @func_10810() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(28), int8], Tensor[(448), int8]) {
  @func_10808() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(28), int8], Tensor[(448), int8]) */
}

def @func_8349() -> Tensor[(2, 9, 4), float64] {
  @func_1157() /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_7732(%var_7699: Tensor[(448), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(4, 2, 3), float64], Tensor[(1, 24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %29 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %30 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 24), float64] */, dtype="float64") /* ty=Tensor[(1, 24), float64] */;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %33 = cast(%var_7699, dtype="int8") /* ty=Tensor[(448), int8] */;
  %34 = reshape(%31, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
  %35 = reshape(%32, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %36 = reshape(%33, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %37 = @func_159(%34, %35, %36) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %38 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %39 = @func_6480() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %40 = %29.0;
  %41 = %30.0;
  %42 = %37.0;
  %43 = %38.2;
  %44 = %39.0;
  (%40, %41, %42, meta[relay.Constant][2] /* ty=Tensor[(1, 24), float64] */, meta[relay.Constant][3] /* ty=Tensor[(28), int8] */, %var_7699, %43, %44)
}

def @func_9295() -> Tensor[(2, 9, 4), float32] {
  @func_9293() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_6067() -> Tensor[(5, 6, 2), float32] {
  %45 = @func_2229() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) */;
  %46 = %45.1;
  %47 = cast(%46, dtype="float32") /* ty=Tensor[(5, 6, 2), float32] */;
  atan(%47) /* ty=Tensor[(5, 6, 2), float32] */
}

def @func_5488(%var_5483: Tensor[(24), float64]) -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(28), int8], Tensor[(24), uint8]) {
  %48 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
  %49 = @func_4907() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %50 = cast(meta[relay.Constant][4] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %51 = cast(meta[relay.Constant][5] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %52 = reshape(%50, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %53 = reshape(%51, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %54 = @func_1595(%52, %53) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), float32], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(4, 112), int8], Tensor[(2, 9, 4), float32]) */;
  %55 = cast(%var_5483, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %56 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(24), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(24), float64] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %59 = %48.1;
  %60 = %49.0;
  %61 = %54.0;
  %62 = left_shift(%57, %58) /* ty=Tensor[(24), uint8] */;
  (%59, %60, %61, meta[relay.Constant][5] /* ty=Tensor[(28), int8] */, %62)
}

def @func_10094() -> (Tensor[(6, 11, 9), bool],) {
  %70 = fn () -> (Tensor[(6, 11, 9), bool],) {
    %63 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 9), float32] */;
    %64 = atan(%63) /* ty=Tensor[(6, 11, 9), float32] */;
    %65 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
    %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%64, dtype="bool") /* ty=Tensor[(6, 11, 9), bool] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %69 = equal(%67, %68) /* ty=Tensor[(6, 11, 9), bool] */;
    (%69,)
  };
  %70() /* ty=(Tensor[(6, 11, 9), bool],) */
}

def @func_3870() -> (Tensor[(2, 9, 4), float32],) {
  %73 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %71 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %72 = %71.0;
    (%72,)
  };
  %73() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_4763() -> Tensor[(2, 9, 4), float32] {
  @func_2035() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_3129() -> (Tensor[(2, 9, 4), float64],) {
  %74 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
  (%74,)
}

def @func_10170() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_10168() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_12198() -> Tensor[(2, 9, 4), float32] {
  %75 = fn () -> Tensor[(2, 9, 4), float32] {
    @func_5293() /* ty=Tensor[(2, 9, 4), float32] */
  };
  %75() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_2078(%var_2052: Tensor[(5, 6, 2), uint64], %var_2053: Tensor[(5, 6, 2), uint64]) -> Tensor[(5, 6, 2), uint64] {
  %76 = cast(%var_2053, dtype="uint64") /* ty=Tensor[(5, 6, 2), uint64] */;
  %77 = shape_of(%var_2052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%var_2052, dtype="uint64") /* ty=Tensor[(5, 6, 2), uint64] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%78, %79) /* ty=Tensor[(5, 6, 2), uint64] */
}

def @func_6683() -> (Tensor[(1, 2475), float32], Tensor[(2, 9, 4), uint32]) {
  @func_6681() /* ty=(Tensor[(1, 2475), float32], Tensor[(2, 9, 4), uint32]) */
}

def @func_8358() -> Tensor[(2, 9, 4), float32] {
  @func_8356() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_8632() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_8630() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_9171() -> (Tensor[(2, 9, 4), float32],) {
  %80 = @func_7001() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %81 = %80.0;
  (%81,)
}

def @func_9823() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %89 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
    %82 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %83 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %84 = @func_7567() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %85 = %82.0;
    %86 = %83.0;
    %87 = %84.0;
    %88 = @func_8349() /* ty=Tensor[(2, 9, 4), float64] */;
    (%85, %86, %87, %88)
  };
  %89() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */
}

def @func_3679() -> Tensor[(2, 9, 4), float32] {
  @func_3677() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_4198() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(2, 9, 4), float32]) {
  %97 = fn () -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(2, 9, 4), float32]) {
    %90 = @func_3129() /* ty=(Tensor[(2, 9, 4), float64],) */;
    %91 = cast(meta[relay.Constant][7] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
    %92 = reshape(%91, newshape=[400]) /* ty=Tensor[(400), float64] */;
    %93 = @func_2119(%92) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
    %94 = %90.0;
    %95 = %93.1;
    %96 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
    (%94, %95, meta[relay.Constant][7] /* ty=Tensor[(400), float64] */, %96)
  };
  %97() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(2, 9, 4), float32]) */
}

def @func_11850() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %98 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %99 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %100 = %98.1;
  %101 = %99.1;
  (%100, %101)
}

def @func_1368() -> Tensor[(2, 9, 4), float32] {
  %102 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %102.0
}

def @func_10808() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(28), int8], Tensor[(448), int8]) {
  %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %104 = cast(meta[relay.Constant][9] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %105 = reshape(%103, newshape=[28, 1]) /* ty=Tensor[(28, 1), int8] */;
  %106 = reshape(%104, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %107 = @func_1245(%105, %106) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(28, 1), int8], Tensor[(448), int8], Tensor[(7, 4, 16), uint16]) */;
  %108 = @func_7633() /* ty=Tensor[(2, 9, 4), float32] */;
  %109 = %107.0;
  (%108, %109, meta[relay.Constant][8] /* ty=Tensor[(28), int8] */, meta[relay.Constant][9] /* ty=Tensor[(448), int8] */)
}

def @func_12002() -> (Tensor[(2, 9, 4), float32],) {
  @func_12000() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_4106() -> (Tensor[(2, 9, 4), float32],) {
  %110 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  (%110,)
}

def @func_9127() -> (Tensor[(400), float32],) {
  %115 = fn () -> (Tensor[(400), float32],) {
    %111 = @func_7086() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
    %112 = %111.4;
    %113 = cast(%112, dtype="float32") /* ty=Tensor[(400), float32] */;
    %114 = atan(%113) /* ty=Tensor[(400), float32] */;
    (%114,)
  };
  %115() /* ty=(Tensor[(400), float32],) */
}

def @func_8182() -> Tensor[(2, 9, 4), float32] {
  %116 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %116.0
}

def @func_6372(%var_6369: Tensor[(7, 1, 6), float32]) -> (Tensor[(7, 1, 6), float32],) {
  %117 = cast(%var_6369, dtype="float32") /* ty=Tensor[(7, 1, 6), float32] */;
  %118 = erf(%117) /* ty=Tensor[(7, 1, 6), float32] */;
  (%118,)
}

def @func_5898(%var_5896: Tensor[(2, 9, 4), float32]) -> Tensor[(2, 9, 4), uint32] {
  @func_5895(%var_5896) /* ty=Tensor[(2, 9, 4), uint32] */
}

def @func_7758(%var_7756: Tensor[(13, 15, 12), float64], %var_7757: Tensor[(13, 15, 12), float64]) -> Tensor[(13, 15, 12), bool] {
  @func_7754(%var_7756, %var_7757) /* ty=Tensor[(13, 15, 12), bool] */
}

def @func_3013() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %122 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
    %119 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %120 = %119.1;
    %121 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
    (%120, %121)
  };
  %122() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */
}

def @func_3961() -> (Tensor[(2, 9, 4), float32],) {
  %123 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %124 = %123.0;
  (%124,)
}

def @func_3264() -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) {
  @func_3262() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */
}

def @func_5199(%var_5197: Tensor[(24), float64], %var_5198: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32]) {
  @func_5195(%var_5197, %var_5198) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32]) */
}

def @func_3635() -> (Tensor[(2, 9, 4), float32],) {
  %127 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %125 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %126 = %125.3;
    (%126,)
  };
  %127() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_6540(%var_6522: Tensor[(8, 6, 7), int32]) -> Tensor[(8, 6, 7), int32] {
  %128 = cast(%var_6522, dtype="int32") /* ty=Tensor[(8, 6, 7), int32] */;
  %129 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(8, 6, 7), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %130 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 6, 7), int32] */, dtype="int32") /* ty=Tensor[(8, 6, 7), int32] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_and(%130, %131) /* ty=Tensor[(8, 6, 7), int32] */
}

def @func_2122(%var_2120: Tensor[(400), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  @func_2119(%var_2120) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */
}

def @func_11390(%var_11388: Tensor[(9, 9, 7), float32], %var_11389: Tensor[(9, 9, 7), float32]) -> Tensor[(9, 9, 7), float64] {
  @func_11386(%var_11388, %var_11389) /* ty=Tensor[(9, 9, 7), float64] */
}

def @func_2119(%var_2105: Tensor[(400), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  %132 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %133 = cast(%var_2105, dtype="float64") /* ty=Tensor[(400), float64] */;
  %134 = reshape(%133, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %135 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %136 = %132.0;
  %137 = @func_1527(%134) /* ty=Tensor[(10, 8, 5), float64] */;
  (%135, %136, %137, %var_2105)
}

def @func_10015() -> (Tensor[(1, 2475), float32],) {
  %138 = @func_5661() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2475), float32], Tensor[(1, 2475), float32]) */;
  %139 = %138.3;
  (%139,)
}

def @func_7313() -> (Tensor[(2, 9, 4), float32],) {
  %142 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %140 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %141 = %140.0;
    (%141,)
  };
  %142() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_6482() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_6480() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_4027() -> Tensor[(2, 9, 4), float32] {
  %143 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %143.1
}

def @func_7424() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %144 = @func_4436() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %145 = %144.0;
  %146 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
  (%145, %146)
}

def @func_4254() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_4252() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_1263() -> Tensor[(2, 9, 4), float32] {
  @func_1184() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_8517() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %147 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %148 = @func_6681() /* ty=(Tensor[(1, 2475), float32], Tensor[(2, 9, 4), uint32]) */;
  %149 = @func_6779() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %150 = %147.0;
  %151 = @func_8182() /* ty=Tensor[(2, 9, 4), float32] */;
  %152 = %148.1;
  %153 = @func_5293() /* ty=Tensor[(2, 9, 4), float32] */;
  %154 = %149.0;
  (%150, %151, %152, %153, %154)
}

def @func_5975() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %155 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %156 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %157 = %155.0;
  %158 = @func_3721() /* ty=Tensor[(2, 9, 4), float32] */;
  %159 = %156.4;
  (%157, %158, %159)
}

def @func_11208() -> (Tensor[(2, 9, 4), float32],) {
  @func_11206() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_9027(%var_9025: Tensor[(16, 5, 3), bool], %var_9026: Tensor[(16, 5, 3), bool]) -> (Tensor[(16, 5, 3), bool], Tensor[(16, 5, 3), float64]) {
  @func_9023(%var_9025, %var_9026) /* ty=(Tensor[(16, 5, 3), bool], Tensor[(16, 5, 3), float64]) */
}

def @func_2583() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %166 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %160 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
    %161 = cast(%160, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %162 = sigmoid(%161) /* ty=Tensor[(2, 9, 4), float32] */;
    %163 = cast(%162, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %164 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
    %165 = asin(%163) /* ty=Tensor[(2, 9, 4), float32] */;
    (%164, %165)
  };
  %166() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_1991() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) {
  @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */
}

def @func_9173() -> (Tensor[(2, 9, 4), float32],) {
  @func_9171() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_1311() -> (Tensor[(2, 9, 4), float32],) {
  @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_5344() -> (Tensor[(2, 9, 4), float32],) {
  %167 = @func_4529() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %168 = %167.0;
  (%168,)
}

def @func_6681() -> (Tensor[(1, 2475), float32], Tensor[(2, 9, 4), uint32]) {
  %169 = @func_5661() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2475), float32], Tensor[(1, 2475), float32]) */;
  %170 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %171 = %169.3;
  %172 = %170.0;
  (%171, %172)
}

def @func_11206() -> (Tensor[(2, 9, 4), float32],) {
  %173 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %174 = %173.0;
  (%174,)
}

def @func_11244() -> Tensor[(2, 9, 4), uint32] {
  @func_11242() /* ty=Tensor[(2, 9, 4), uint32] */
}

def @func_11237() -> Tensor[(2, 9, 4), float32] {
  @func_11235() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_3794(%var_3789: Tensor[(8, 5, 7), uint32], %var_3790: Tensor[(8, 5, 7), uint32], %var_3791: Tensor[(28), int8], %var_3792: Tensor[(448), int8], %var_3793: Tensor[(8, 50), float64]) -> (Tensor[(8, 5, 7), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(10, 8, 5), float64], Tensor[(8, 50), float64], Tensor[(8, 5, 7), bool]) {
  @func_3787(%var_3789, %var_3790, %var_3791, %var_3792, %var_3793) /* ty=(Tensor[(8, 5, 7), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(10, 8, 5), float64], Tensor[(8, 50), float64], Tensor[(8, 5, 7), bool]) */
}

def @func_7844() -> (Tensor[(2, 9, 4), uint32],) {
  %177 = fn () -> (Tensor[(2, 9, 4), uint32],) {
    %175 = @func_3262() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
    %176 = %175.0;
    (%176,)
  };
  %177() /* ty=(Tensor[(2, 9, 4), uint32],) */
}

def @func_1341() -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) {
  %185 = fn () -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) {
    %178 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
    %179 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 9, 4), float32] */, dtype="uint32") /* ty=Tensor[(2, 9, 4), uint32] */;
    %180 = shape_of(%178, dtype="int32") /* ty=Tensor[(3), int32] */;
    %181 = cast(%178, dtype="uint32") /* ty=Tensor[(2, 9, 4), uint32] */;
    %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %183 = bitwise_and(%181, %182) /* ty=Tensor[(2, 9, 4), uint32] */;
    %184 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
    (%183, %184)
  };
  %185() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */
}

def @func_4108() -> (Tensor[(2, 9, 4), float32],) {
  @func_4106() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_9677() -> Tensor[(2, 9, 4), float32] {
  @func_9675() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_9920(%var_9879: Tensor[(240), bool]) -> (Tensor[(2, 9, 4), float32], Tensor[(16, 5, 3), bool], Tensor[(240), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %186 = cast(%var_9879, dtype="bool") /* ty=Tensor[(240), bool] */;
  %187 = cast(%var_9879, dtype="bool") /* ty=Tensor[(240), bool] */;
  %188 = reshape(%186, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), bool] */;
  %189 = reshape(%187, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), bool] */;
  %190 = @func_9023(%188, %189) /* ty=(Tensor[(16, 5, 3), bool], Tensor[(16, 5, 3), float64]) */;
  %191 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %192 = @func_3677() /* ty=Tensor[(2, 9, 4), float32] */;
  %193 = %190.0;
  %194 = %191.1;
  %195 = @func_8356() /* ty=Tensor[(2, 9, 4), float32] */;
  (%192, %193, %var_9879, %194, %195)
}

def @func_10945() -> Tensor[(2, 9, 4), float64] {
  @func_10943() /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_8029() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_8027() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_11699() -> (Tensor[(7, 1, 6), float32], Tensor[(2, 9, 4), float32], Tensor[(8, 16, ?), int64], Tensor[(8, 16), float32], Tensor[(2, 9, 4), float32]) {
  %204 = fn () -> (Tensor[(7, 1, 6), float32], Tensor[(2, 9, 4), float32], Tensor[(8, 16, ?), int64], Tensor[(8, 16), float32], Tensor[(2, 9, 4), float32]) {
    %196 = @func_9370() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) */;
    %197 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 16), float32] */, dtype="float32") /* ty=Tensor[(8, 16), float32] */;
    %198 = reshape(%197, newshape=[8, 16, 1]) /* ty=Tensor[(8, 16, 1), float32] */;
    %199 = @func_10666(%198) /* ty=(Tensor[(8, 16, ?), int64], Tensor[(2, 9, 4), float64], Tensor[(8, 16, ?), float64], Tensor[(8, 16, ?), bool], Tensor[(8, 16, ?), int16]) */;
    %200 = %196.2;
    %201 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
    %202 = %199.0;
    %203 = @func_11235() /* ty=Tensor[(2, 9, 4), float32] */;
    (%200, %201, %202, meta[relay.Constant][12] /* ty=Tensor[(8, 16), float32] */, %203)
  };
  %204() /* ty=(Tensor[(7, 1, 6), float32], Tensor[(2, 9, 4), float32], Tensor[(8, 16, ?), int64], Tensor[(8, 16), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_5294() -> Tensor[(2, 9, 4), float32] {
  %206 = fn () -> Tensor[(2, 9, 4), float32] {
    %205 = @func_5252() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %205.0
  };
  %206() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_9197(%var_9196: Tensor[(3, 4, 11), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64]) {
  %223 = fn (%var_9174: Tensor[(3, 4, 11), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64]) {
    %207 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %208 = cast(%var_9174, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
    %209 = log(%208) /* ty=Tensor[(3, 4, 11), float64] */;
    %210 = cast(%209, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
    %211 = acos(%210) /* ty=Tensor[(3, 4, 11), float64] */;
    %212 = cast(%var_9174, dtype="bool") /* ty=Tensor[(3, 4, 11), bool] */;
    %213 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
    %214 = cast(%211, dtype="bool") /* ty=Tensor[(3, 4, 11), bool] */;
    %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %216 = greater_equal(%214, %215) /* ty=Tensor[(3, 4, 11), bool] */;
    %217 = cast(%216, dtype="int64") /* ty=Tensor[(3, 4, 11), int64] */;
    %218 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
    %219 = cast(%209, dtype="int64") /* ty=Tensor[(3, 4, 11), int64] */;
    %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %221 = %207.0;
    %222 = logical_xor(%219, %220) /* ty=Tensor[(3, 4, 11), int64] */;
    (%221, %222)
  };
  %223(%var_9196) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64]) */
}

def @func_11770() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %224 = @func_7461() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %225 = %224.1;
  %226 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  (%225, %226)
}

def @func_5088() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %227 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %228 = %227.0;
  %229 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
  (%228, %229)
}

def @func_10536() -> (Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32]) {
  %233 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32]) {
    %230 = @func_9370() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) */;
    %231 = @func_9293() /* ty=Tensor[(2, 9, 4), float32] */;
    %232 = %230.2;
    (%231, %232)
  };
  %233() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32]) */
}

def @func_10261(%var_10259: Tensor[(448), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(6, 14, 2), int32], Tensor[(168), int32], Tensor[(10, 28), int64]) {
  @func_10258(%var_10259) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(6, 14, 2), int32], Tensor[(168), int32], Tensor[(10, 28), int64]) */
}

def @func_12382() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %238 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %234 = @func_8114() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %235 = @func_4047() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %236 = %234.2;
    %237 = %235.1;
    (%236, %237)
  };
  %238() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_2487() -> (Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %251 = fn () -> (Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %239 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
    %240 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %241 = %240.4;
    %242 = cast(%241, dtype="bool") /* ty=Tensor[(2, 9, 4), bool] */;
    %243 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
    %244 = cast(%239, dtype="bool") /* ty=Tensor[(2, 9, 4), bool] */;
    %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %246 = cast(%239, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %247 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %248 = greater_equal(%244, %245) /* ty=Tensor[(2, 9, 4), bool] */;
    %249 = sqrt(%246) /* ty=Tensor[(2, 9, 4), float32] */;
    %250 = %247.0;
    (%248, %249, %250)
  };
  %251() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_8704() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %252 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %253 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  %254 = %252.1;
  (%253, %254)
}

def @func_2204(%var_2180: Tensor[(2, 9, 4), float32], %var_2198: Tensor[(24), float64], %var_2199: Tensor[(840), int32]) -> (Tensor[(28), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(7, 4, 16), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(840), int32]) {
  %255 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %256 = @func_1934() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %257 = %256.0;
  %258 = cast(%var_2180, dtype="int32") /* ty=Tensor[(2, 9, 4), int32] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="int32") /* ty=Tensor[(2, 9, 4), int32] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %262 = cast(meta[relay.Constant][13] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %263 = cast(meta[relay.Constant][14] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
  %264 = reshape(%262, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %265 = reshape(%263, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %266 = @func_19(%264, %265) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %267 = %266.0;
  %268 = cast(meta[relay.Constant][14] /* ty=Tensor[(448), int8] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%267, dtype="float32") /* ty=Tensor[(7, 4, 16), float32] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %272 = cast(%var_2198, dtype="float64") /* ty=Tensor[(24), float64] */;
  %273 = cast(meta[relay.Constant][13] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
  %274 = cast(%var_2199, dtype="int32") /* ty=Tensor[(840), int32] */;
  %275 = cast(%var_2199, dtype="int32") /* ty=Tensor[(840), int32] */;
  %276 = reshape(%272, newshape=[2, 12]) /* ty=Tensor[(2, 12), float64] */;
  %277 = reshape(%273, newshape=[1, 28]) /* ty=Tensor[(1, 28), int8] */;
  %278 = reshape(%274, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %279 = reshape(%275, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
  %280 = @func_1723(%276, %277, %278, %279) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) */;
  %281 = %255.0;
  %282 = multiply(%260, %261) /* ty=Tensor[(2, 9, 4), int32] */;
  %283 = power(%270, %271) /* ty=Tensor[(7, 4, 16), float32] */;
  %284 = %280.0;
  (meta[relay.Constant][13] /* ty=Tensor[(28), int8] */, %281, %282, %283, %284, %var_2198, %var_2199)
}

def @func_6955() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %285 = @func_5344() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %286 = @func_5252() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %287 = @func_4064() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %288 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
  %289 = %285.0;
  %290 = %286.0;
  %291 = %287.0;
  (%288, %289, %290, %291)
}

def @func_4029() -> Tensor[(2, 9, 4), float32] {
  @func_4027() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_4064() -> (Tensor[(2, 9, 4), float32],) {
  %292 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  (%292,)
}

def @func_5195(%var_5172: Tensor[(24), float64], %var_5173: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32]) {
  %293 = @func_4476() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %294 = cast(%var_5172, dtype="float64") /* ty=Tensor[(24), float64] */;
  %295 = cast(%var_5173, dtype="int32") /* ty=Tensor[(840), int32] */;
  %296 = cast(meta[relay.Constant][15] /* ty=Tensor[(2475), float32] */, dtype="float32") /* ty=Tensor[(2475), float32] */;
  %297 = reshape(%294, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %298 = reshape(%295, newshape=[1, 840]) /* ty=Tensor[(1, 840), int32] */;
  %299 = reshape(%296, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %300 = @func_2874(%297, %298, %299) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) */;
  %301 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
  %302 = %293.0;
  %303 = %300.8;
  (%301, %302, %303, %var_5172, %var_5173, meta[relay.Constant][15] /* ty=Tensor[(2475), float32] */)
}

def @func_164(%var_161: Tensor[(4, 2, 3), float64], %var_162: Tensor[(28), int8], %var_163: Tensor[(448), int8]) -> (Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) {
  @func_159(%var_161, %var_162, %var_163) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */
}

def @func_1723(%var_1668: Tensor[(2, 12), float64], %var_1669: Tensor[(1, 28), int8], %var_1695: Tensor[(6, 140), int32], %var_1715: Tensor[(6, 140), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) {
  %304 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %305 = cast(%var_1668, dtype="float64") /* ty=Tensor[(2, 12), float64] */;
  %306 = cast(%var_1669, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %307 = reshape(%305, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %308 = reshape(%306, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %309 = @func_233(%307, %308) /* ty=(Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) */;
  %310 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 140), int32] */, dtype="int32") /* ty=Tensor[(6, 140), int32] */;
  %311 = cast(%var_1669, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %312 = %309.6;
  %313 = cast(%312, dtype="int8") /* ty=Tensor[(7, 4, 16), int8] */;
  %314 = reshape(%310, newshape=[14, 12, 5]) /* ty=Tensor[(14, 12, 5), int32] */;
  %315 = reshape(%311, newshape=[7, 4]) /* ty=Tensor[(7, 4), int8] */;
  %316 = reshape(%313, newshape=[56, 8]) /* ty=Tensor[(56, 8), int8] */;
  %317 = @func_1068(%314, %315, %316) /* ty=(Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) */;
  %318 = cast(%var_1668, dtype="float64") /* ty=Tensor[(2, 12), float64] */;
  %319 = cast(%var_1669, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %320 = reshape(%318, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %321 = reshape(%319, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %322 = @func_233(%320, %321) /* ty=(Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) */;
  %323 = cast(%var_1695, dtype="bool") /* ty=Tensor[(6, 140), bool] */;
  %324 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(6, 140), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %325 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 140), int32] */, dtype="bool") /* ty=Tensor[(6, 140), bool] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %327 = cast(%var_1715, dtype="int64") /* ty=Tensor[(6, 140), int64] */;
  %328 = shape_of(%var_1695, dtype="int32") /* ty=Tensor[(2), int32] */;
  %329 = cast(%var_1695, dtype="int64") /* ty=Tensor[(6, 140), int64] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %331 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %332 = %304.0;
  %333 = %317.6;
  %334 = %322.1;
  %335 = equal(%325, %326) /* ty=Tensor[(6, 140), bool] */;
  %336 = left_shift(%329, %330) /* ty=Tensor[(6, 140), int64] */;
  %337 = %331.0;
  (%332, %312, %var_1668, %var_1669, %333, %334, %335, %336, %337)
}

def @func_2209(%var_2206: Tensor[(2, 9, 4), float32], %var_2207: Tensor[(24), float64], %var_2208: Tensor[(840), int32]) -> (Tensor[(28), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(7, 4, 16), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(840), int32]) {
  @func_2204(%var_2206, %var_2207, %var_2208) /* ty=(Tensor[(28), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(7, 4, 16), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(840), int32]) */
}

def @func_1865() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %350 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %338 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %339 = %338.0;
    %340 = cast(%339, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
    %341 = acos(%340) /* ty=Tensor[(2, 9, 4), float64] */;
    %342 = cast(%341, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %343 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %344 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %345 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
    %346 = rsqrt(%342) /* ty=Tensor[(2, 9, 4), float32] */;
    %347 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
    %348 = %343.0;
    %349 = %344.0;
    (%345, %346, %347, %348, %349)
  };
  %350() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_5756() -> Tensor[(2, 9, 4), float32] {
  @func_5754() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_12313() -> Tensor[(2, 9, 4), float64] {
  @func_12311() /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_10036() -> (Tensor[(2, 9, 4), float32],) {
  %353 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %351 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %352 = %351.4;
    (%352,)
  };
  %353() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_3840() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */
}

def @func_2025() -> Tensor[(2, 9, 4), float32] {
  @func_1263() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_4765() -> Tensor[(2, 9, 4), float32] {
  @func_4763() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_12589() -> Tensor[(2, 9, 4), float32] {
  %354 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %354.1
}

def @func_11040() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_11038() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_3838() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %355 = @func_2923() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %356 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %357 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %358 = %357.0;
  %359 = cast(%358, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
  %360 = %355.1;
  %361 = %356.1;
  %362 = sinh(%359) /* ty=Tensor[(2, 9, 4), float64] */;
  (%360, %361, %362)
}

def @func_3985(%var_3983: Tensor[(24), float64], %var_3984: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(6, 140), bool], Tensor[(24), float64], Tensor[(28), int8], Tensor[(840), int32]) {
  %375 = fn (%var_3969: Tensor[(24), float64], %var_3971: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(6, 140), bool], Tensor[(24), float64], Tensor[(28), int8], Tensor[(840), int32]) {
    %363 = @func_3961() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %364 = cast(%var_3969, dtype="float64") /* ty=Tensor[(24), float64] */;
    %365 = cast(meta[relay.Constant][17] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
    %366 = cast(%var_3971, dtype="int32") /* ty=Tensor[(840), int32] */;
    %367 = cast(%var_3971, dtype="int32") /* ty=Tensor[(840), int32] */;
    %368 = reshape(%364, newshape=[2, 12]) /* ty=Tensor[(2, 12), float64] */;
    %369 = reshape(%365, newshape=[1, 28]) /* ty=Tensor[(1, 28), int8] */;
    %370 = reshape(%366, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
    %371 = reshape(%367, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
    %372 = @func_1723(%368, %369, %370, %371) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) */;
    %373 = %363.0;
    %374 = %372.6;
    (%373, %374, %var_3969, meta[relay.Constant][17] /* ty=Tensor[(28), int8] */, %var_3971)
  };
  %375(%var_3983, %var_3984) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(6, 140), bool], Tensor[(24), float64], Tensor[(28), int8], Tensor[(840), int32]) */
}

def @func_2816() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
  %379 = fn () -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
    %376 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
    %377 = %376.1;
    %378 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
    (%377, %378)
  };
  %379() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */
}

def @func_4697(%var_4696: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(28), int8], Tensor[(840), int32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %400 = fn (%var_4566: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(28), int8], Tensor[(840), int32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %380 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
    %381 = cast(meta[relay.Constant][18] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %382 = cast(meta[relay.Constant][19] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
    %383 = cast(%var_4566, dtype="int32") /* ty=Tensor[(840), int32] */;
    %384 = cast(%var_4566, dtype="int32") /* ty=Tensor[(840), int32] */;
    %385 = reshape(%381, newshape=[2, 12]) /* ty=Tensor[(2, 12), float64] */;
    %386 = reshape(%382, newshape=[1, 28]) /* ty=Tensor[(1, 28), int8] */;
    %387 = reshape(%383, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
    %388 = reshape(%384, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
    %389 = @func_1723(%385, %386, %387, %388) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) */;
    %390 = @func_4529() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %391 = @func_1449() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
    %392 = @func_4476() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %393 = @func_4106() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %394 = %380.0;
    %395 = %389.8;
    %396 = %390.1;
    %397 = %391.0;
    %398 = %392.0;
    %399 = %393.0;
    (%394, %395, meta[relay.Constant][18] /* ty=Tensor[(24), float64] */, meta[relay.Constant][19] /* ty=Tensor[(28), int8] */, %var_4566, %396, %397, %398, %399)
  };
  %400(%var_4696) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(28), int8], Tensor[(840), int32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_3963() -> (Tensor[(2, 9, 4), float32],) {
  @func_3961() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_4847() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
  @func_4845() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */
}

def @func_1934() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %401 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  %402 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  (%401, %402)
}

def @func_5463() -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) {
  %407 = fn () -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) {
    %403 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
    %404 = @func_4106() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %405 = %403.1;
    %406 = %404.0;
    (%405, %406)
  };
  %407() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */
}

def @func_6069() -> Tensor[(5, 6, 2), float32] {
  @func_6067() /* ty=Tensor[(5, 6, 2), float32] */
}

def @func_9396() -> (Tensor[(2, 9, 4), float32],) {
  %410 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %408 = @func_3262() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
    %409 = %408.1;
    (%409,)
  };
  %410() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_10969(%var_10968: Tensor[(108), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(108), float64], Tensor[(144), int8]) {
  %419 = fn (%var_10959: Tensor[(108), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(108), float64], Tensor[(144), int8]) {
    %411 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %412 = cast(%var_10959, dtype="float64") /* ty=Tensor[(108), float64] */;
    %413 = cast(meta[relay.Constant][20] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
    %414 = reshape(%412, newshape=[6, 3, 6]) /* ty=Tensor[(6, 3, 6), float64] */;
    %415 = reshape(%413, newshape=[144]) /* ty=Tensor[(144), int8] */;
    %416 = @func_8985(%414, %415) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(6), float64], Tensor[(2, 9, 4), float32], Tensor[(6, 3, 6), bool], Tensor[(7, 1, 6), float32], Tensor[(12, 3, 6), bool], Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), int8], int8, Tensor[(144), int8], Tensor[(2, 9, 4), float32], Tensor[(1, 1, 6), float64]) */;
    %417 = %411.0;
    %418 = %416.13;
    (%417, %418, %var_10959, meta[relay.Constant][20] /* ty=Tensor[(144), int8] */)
  };
  %419(%var_10968) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(108), float64], Tensor[(144), int8]) */
}

def @func_8083(%var_8068: Tensor[(1, 1, 6), float64]) -> (Tensor[(1, 1, 6), float64], Tensor[(1, 1, 6), float64]) {
  %420 = cast(%var_8068, dtype="float64") /* ty=Tensor[(1, 1, 6), float64] */;
  %421 = cast(%var_8068, dtype="float64") /* ty=Tensor[(1, 1, 6), float64] */;
  %422 = cos(%421) /* ty=Tensor[(1, 1, 6), float64] */;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(1, 1, 6), float64] */;
  %424 = erf(%420) /* ty=Tensor[(1, 1, 6), float64] */;
  %425 = sin(%423) /* ty=Tensor[(1, 1, 6), float64] */;
  (%424, %425)
}

def @func_2027() -> Tensor[(2, 9, 4), float32] {
  @func_2025() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_4289() -> (Tensor[(2, 9, 4), float32],) {
  %428 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %426 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %427 = %426.0;
    (%427,)
  };
  %428() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_12332() -> (Tensor[(2, 9, 4), float32],) {
  %431 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %429 = @func_7001() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %430 = %429.0;
    (%430,)
  };
  %431() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_6398() -> (Tensor[(5, 6, 2), float64], Tensor[(2, 9, 4), float32]) {
  %432 = @func_2229() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) */;
  %433 = %432.1;
  %434 = cast(%433, dtype="float64") /* ty=Tensor[(5, 6, 2), float64] */;
  %435 = sin(%434) /* ty=Tensor[(5, 6, 2), float64] */;
  %436 = @func_3677() /* ty=Tensor[(2, 9, 4), float32] */;
  (%435, %436)
}

def @func_7797() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_7795() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_11242() -> Tensor[(2, 9, 4), uint32] {
  %437 = @func_7843() /* ty=(Tensor[(2, 9, 4), uint32],) */;
  %437.0
}

def @func_1072(%var_1069: Tensor[(14, 12, 5), int32], %var_1070: Tensor[(7, 4), int8], %var_1071: Tensor[(56, 8), int8]) -> (Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) {
  %466 = fn (%var_1022: Tensor[(14, 12, 5), int32], %var_1030: Tensor[(7, 4), int8], %var_1031: Tensor[(56, 8), int8]) -> (Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) {
    %438 = cast(-6 /* ty=int32 */, dtype="bool") /* ty=bool */;
    %439 = cast(%var_1022, dtype="bool") /* ty=Tensor[(14, 12, 5), bool] */;
    %440 = cast(%var_1030, dtype="int8") /* ty=Tensor[(7, 4), int8] */;
    %441 = cast(%var_1030, dtype="int8") /* ty=Tensor[(7, 4), int8] */;
    %442 = cast(%var_1031, dtype="int8") /* ty=Tensor[(56, 8), int8] */;
    %443 = reshape(%441, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
    %444 = reshape(%442, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
    %445 = @func_19(%443, %444) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
    %446 = %445.1;
    %447 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 4, 16), float32] */, dtype="uint16") /* ty=Tensor[(7, 4, 16), uint16] */;
    %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
    %449 = cast(%446, dtype="uint16") /* ty=Tensor[(7, 4, 16), uint16] */;
    %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %451 = bitwise_or(%449, %450) /* ty=Tensor[(7, 4, 16), uint16] */;
    %452 = cast(%451, dtype="int8") /* ty=Tensor[(7, 4, 16), int8] */;
    %453 = reshape(%440, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
    %454 = reshape(%452, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
    %455 = @func_19(%453, %454) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
    %456 = cast(meta[relay.Constant][22] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %457 = cast(%var_1030, dtype="int8") /* ty=Tensor[(7, 4), int8] */;
    %458 = reshape(%456, newshape=[24]) /* ty=Tensor[(24), float64] */;
    %459 = reshape(%457, newshape=[28]) /* ty=Tensor[(28), int8] */;
    %460 = @func_233(%458, %459) /* ty=(Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) */;
    %461 = cast(%451, dtype="float64") /* ty=Tensor[(7, 4, 16), float64] */;
    %462 = greater_equal(%438, %439) /* ty=Tensor[(14, 12, 5), bool] */;
    %463 = %455.0;
    %464 = %460.0;
    %465 = acosh(%461) /* ty=Tensor[(7, 4, 16), float64] */;
    (%462, %var_1030, %var_1031, %463, %464, meta[relay.Constant][22] /* ty=Tensor[(24), float64] */, %465)
  };
  %466(%var_1069, %var_1070, %var_1071) /* ty=(Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) */
}

def @func_3262() -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) {
  %467 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
  %468 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %469 = %467.1;
  %470 = %468.1;
  (%469, %470)
}

def @func_4403() -> (Tensor[(2, 9, 4), float32],) {
  %473 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %471 = @func_4288() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %472 = %471.0;
    (%472,)
  };
  %473() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_5612(%var_5609: Tensor[(24), float64], %var_5610: Tensor[(840), int32], %var_5611: Tensor[(1, 2475), float32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(840), int32], Tensor[(24), float64], Tensor[(840), int32], Tensor[(1, 2475), float32]) {
  %488 = fn (%var_5591: Tensor[(24), float64], %var_5592: Tensor[(840), int32], %var_5593: Tensor[(1, 2475), float32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(840), int32], Tensor[(24), float64], Tensor[(840), int32], Tensor[(1, 2475), float32]) {
    %474 = @func_4476() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %475 = @func_3262() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
    %476 = %474.1;
    %477 = cast(%476, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %478 = cast(%var_5591, dtype="float64") /* ty=Tensor[(24), float64] */;
    %479 = cast(%var_5592, dtype="int32") /* ty=Tensor[(840), int32] */;
    %480 = cast(%var_5593, dtype="float32") /* ty=Tensor[(1, 2475), float32] */;
    %481 = reshape(%477, newshape=[2, 9, 4]) /* ty=Tensor[(2, 9, 4), float32] */;
    %482 = reshape(%478, newshape=[6, 4]) /* ty=Tensor[(6, 4), float64] */;
    %483 = reshape(%479, newshape=[840]) /* ty=Tensor[(840), int32] */;
    %484 = reshape(%480, newshape=[825, 3]) /* ty=Tensor[(825, 3), float32] */;
    %485 = @func_3583(%481, %482, %483, %484) /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(6, 4), float64], Tensor[(840), int32], Tensor[(825, 3), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
    %486 = %475.0;
    %487 = %485.3;
    (%476, %486, %487, %var_5591, %var_5592, %var_5593)
  };
  %488(%var_5609, %var_5610, %var_5611) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(840), int32], Tensor[(24), float64], Tensor[(840), int32], Tensor[(1, 2475), float32]) */
}

def @func_9632() -> (Tensor[(2, 9, 4), float32],) {
  %491 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %489 = @func_5975() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %490 = %489.1;
    (%490,)
  };
  %491() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_5977() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_5975() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_10342(%var_10341: Tensor[(60, 14), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(12, 4, 6), float64], Tensor[(60, 14), int32], Tensor[(448), int8], Tensor[(28), float32]) {
  %504 = fn (%var_10278: Tensor[(60, 14), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(12, 4, 6), float64], Tensor[(60, 14), int32], Tensor[(448), int8], Tensor[(28), float32]) {
    %492 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %493 = cast(%var_10278, dtype="int32") /* ty=Tensor[(60, 14), int32] */;
    %494 = cast(meta[relay.Constant][23] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
    %495 = cast(meta[relay.Constant][24] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
    %496 = reshape(%493, newshape=[14, 12, 5]) /* ty=Tensor[(14, 12, 5), int32] */;
    %497 = reshape(%494, newshape=[7, 4]) /* ty=Tensor[(7, 4), int8] */;
    %498 = reshape(%495, newshape=[56, 8]) /* ty=Tensor[(56, 8), int8] */;
    %499 = @func_1068(%496, %497, %498) /* ty=(Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) */;
    %500 = cast(meta[relay.Constant][23] /* ty=Tensor[(28), int8] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %501 = %492.0;
    %502 = %499.4;
    %503 = rsqrt(%500) /* ty=Tensor[(28), float32] */;
    (%501, %502, %var_10278, meta[relay.Constant][24] /* ty=Tensor[(448), int8] */, %503)
  };
  %504(%var_10341) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(12, 4, 6), float64], Tensor[(60, 14), int32], Tensor[(448), int8], Tensor[(28), float32]) */
}

def @func_4066() -> (Tensor[(2, 9, 4), float32],) {
  @func_4064() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_6593() -> Tensor[(2, 9, 4), float32] {
  %506 = fn () -> Tensor[(2, 9, 4), float32] {
    %505 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %505.0
  };
  %506() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_1158() -> Tensor[(2, 9, 4), float64] {
  %510 = fn () -> Tensor[(2, 9, 4), float64] {
    %507 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %508 = %507.0;
    %509 = cast(%508, dtype="float64") /* ty=Tensor[(2, 9, 4), float64] */;
    erf(%509) /* ty=Tensor[(2, 9, 4), float64] */
  };
  %510() /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_4956(%var_4941: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(15, 165), float32]) {
  %511 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %512 = %511.1;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %514 = cast(meta[relay.Constant][25] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %515 = cast(%var_4941, dtype="int32") /* ty=Tensor[(840), int32] */;
  %516 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 165), float32] */, dtype="float32") /* ty=Tensor[(15, 165), float32] */;
  %517 = reshape(%513, newshape=[2, 9, 4]) /* ty=Tensor[(2, 9, 4), float32] */;
  %518 = reshape(%514, newshape=[6, 4]) /* ty=Tensor[(6, 4), float64] */;
  %519 = reshape(%515, newshape=[840]) /* ty=Tensor[(840), int32] */;
  %520 = reshape(%516, newshape=[825, 3]) /* ty=Tensor[(825, 3), float32] */;
  %521 = @func_3583(%517, %518, %519, %520) /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(6, 4), float64], Tensor[(840), int32], Tensor[(825, 3), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %522 = %521.0;
  (%512, %522, meta[relay.Constant][25] /* ty=Tensor[(24), float64] */, %var_4941, meta[relay.Constant][26] /* ty=Tensor[(15, 165), float32] */)
}

def @main() -> (Tensor[(15, ?, 15), uint32], Tensor[(15, 1, 15), float64]) {
  %523 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 15), float32] */;
  %524 = tan(%523) /* ty=Tensor[(15, 1, 15), float32] */;
  %525 = cast(%524, dtype="bool") /* ty=Tensor[(15, 1, 15), bool] */;
  %526 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(15, 1, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(15, 1, 15), bool] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %529 = greater(%527, %528) /* ty=Tensor[(15, ?, 15), bool] */;
  %530 = cast(%529, dtype="uint32") /* ty=Tensor[(15, ?, 15), uint32] */;
  %531 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(15, 1, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 1, 15), float32] */, dtype="uint32") /* ty=Tensor[(15, 1, 15), uint32] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %534 = cast(%524, dtype="float64") /* ty=Tensor[(15, 1, 15), float64] */;
  %535 = bitwise_xor(%532, %533) /* ty=Tensor[(15, ?, 15), uint32] */;
  %536 = cos(%534) /* ty=Tensor[(15, 1, 15), float64] */;
  (%535, %536)
}

def @func_7141() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %547 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %537 = @func_6517() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %538 = @func_6480() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %539 = @func_5035() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
    %540 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
    %541 = @func_6362() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %542 = %537.1;
    %543 = %538.1;
    %544 = %539.1;
    %545 = %540.0;
    %546 = %541.1;
    (%542, %543, %544, %545, %546)
  };
  %547() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_3288(%var_3287: Tensor[(2475), float32]) -> (Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), int64], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32], Tensor[(2, 9, 4), float64]) {
  %560 = fn (%var_3279: Tensor[(2475), float32]) -> (Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), int64], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32], Tensor[(2, 9, 4), float64]) {
    %548 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %549 = cast(meta[relay.Constant][28] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %550 = cast(meta[relay.Constant][29] /* ty=Tensor[(840), int32] */, dtype="int32") /* ty=Tensor[(840), int32] */;
    %551 = cast(%var_3279, dtype="float32") /* ty=Tensor[(2475), float32] */;
    %552 = reshape(%549, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
    %553 = reshape(%550, newshape=[1, 840]) /* ty=Tensor[(1, 840), int32] */;
    %554 = reshape(%551, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
    %555 = @func_2874(%552, %553, %554) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) */;
    %556 = @func_3129() /* ty=(Tensor[(2, 9, 4), float64],) */;
    %557 = %548.2;
    %558 = %555.5;
    %559 = %556.0;
    (%557, %558, meta[relay.Constant][28] /* ty=Tensor[(24), float64] */, meta[relay.Constant][29] /* ty=Tensor[(840), int32] */, %var_3279, %559)
  };
  %560(%var_3287) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), int64], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32], Tensor[(2, 9, 4), float64]) */
}

def @func_3246() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %569 = fn () -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %561 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
    %562 = cast(%561, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %563 = acosh(%562) /* ty=Tensor[(2, 9, 4), float32] */;
    %564 = cast(%563, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %565 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
    %566 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
    %567 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
    %568 = exp(%564) /* ty=Tensor[(2, 9, 4), float32] */;
    (%565, %566, %567, %568)
  };
  %569() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_12415(%var_12391: Tensor[(132), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64], Tensor[(132), float64], Tensor[(9, 9, 7), float64], Tensor[(567), float32], Tensor[(6), float64], Tensor[(1, 108), float64], Tensor[(4, 36), int8]) {
  %570 = @func_7001() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %571 = cast(%var_12391, dtype="float64") /* ty=Tensor[(132), float64] */;
  %572 = reshape(%571, newshape=[3, 4, 11]) /* ty=Tensor[(3, 4, 11), float64] */;
  %573 = @func_9195(%572) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64]) */;
  %574 = cast(meta[relay.Constant][30] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %575 = cast(meta[relay.Constant][30] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %576 = reshape(%574, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), float32] */;
  %577 = reshape(%575, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), float32] */;
  %578 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 108), float64] */, dtype="float64") /* ty=Tensor[(1, 108), float64] */;
  %579 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 36), int8] */, dtype="int8") /* ty=Tensor[(4, 36), int8] */;
  %580 = reshape(%578, newshape=[6, 3, 6]) /* ty=Tensor[(6, 3, 6), float64] */;
  %581 = reshape(%579, newshape=[144]) /* ty=Tensor[(144), int8] */;
  %582 = @func_8985(%580, %581) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(6), float64], Tensor[(2, 9, 4), float32], Tensor[(6, 3, 6), bool], Tensor[(7, 1, 6), float32], Tensor[(12, 3, 6), bool], Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), int8], int8, Tensor[(144), int8], Tensor[(2, 9, 4), float32], Tensor[(1, 1, 6), float64]) */;
  %583 = %570.0;
  %584 = %573.1;
  %585 = @func_11386(%576, %577) /* ty=Tensor[(9, 9, 7), float64] */;
  %586 = %582.4;
  (%583, %584, %var_12391, %585, meta[relay.Constant][30] /* ty=Tensor[(567), float32] */, %586, meta[relay.Constant][31] /* ty=Tensor[(1, 108), float64] */, meta[relay.Constant][32] /* ty=Tensor[(4, 36), int8] */)
}

def @func_12650() -> (Tensor[(2, 9, 4), float64],) {
  %589 = fn () -> (Tensor[(2, 9, 4), float64],) {
    %587 = @func_1449() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
    %588 = %587.1;
    (%588,)
  };
  %589() /* ty=(Tensor[(2, 9, 4), float64],) */
}

def @func_8184() -> Tensor[(2, 9, 4), float32] {
  @func_8182() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_7001() -> (Tensor[(2, 9, 4), float32],) {
  %590 = @func_6187() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %591 = %590.5;
  (%591,)
}

def @func_7426() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_7424() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_7544() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_7542() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_8356() -> Tensor[(2, 9, 4), float32] {
  %592 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %592.0
}

def @func_1309() -> (Tensor[(2, 9, 4), float32],) {
  %593 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %594 = %593.0;
  (%594,)
}

def @func_6264(%var_6262: Tensor[(24), float64], %var_6263: Tensor[(60, 14), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(24), float64], Tensor[(60, 14), int32]) {
  %605 = fn (%var_6246: Tensor[(24), float64], %var_6247: Tensor[(60, 14), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(24), float64], Tensor[(60, 14), int32]) {
    %595 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %596 = %595.0;
    %597 = cast(%596, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %598 = cast(%var_6246, dtype="float64") /* ty=Tensor[(24), float64] */;
    %599 = cast(%var_6247, dtype="int32") /* ty=Tensor[(60, 14), int32] */;
    %600 = reshape(%597, newshape=[2, 9, 4]) /* ty=Tensor[(2, 9, 4), float32] */;
    %601 = reshape(%598, newshape=[24]) /* ty=Tensor[(24), float64] */;
    %602 = reshape(%599, newshape=[840]) /* ty=Tensor[(840), int32] */;
    %603 = @func_2204(%600, %601, %602) /* ty=(Tensor[(28), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(7, 4, 16), float32], Tensor[(2, 9, 4), float32], Tensor[(24), float64], Tensor[(840), int32]) */;
    %604 = %603.2;
    (%596, %604, %var_6246, %var_6247)
  };
  %605(%var_6262, %var_6263) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), int32], Tensor[(24), float64], Tensor[(60, 14), int32]) */
}

def @func_6781() -> (Tensor[(2, 9, 4), float32],) {
  @func_6779() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_4438() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_4436() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_3932() -> (Tensor[(2, 9, 4), float32],) {
  %608 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %606 = @func_3869() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %607 = %606.0;
    (%607,)
  };
  %608() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_7754(%var_7748: Tensor[(13, 15, 12), float64], %var_7749: Tensor[(13, 15, 12), float64]) -> Tensor[(13, 15, 12), bool] {
  %609 = cast(%var_7749, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
  %610 = shape_of(%var_7748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%var_7748, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%611, %612) /* ty=Tensor[(13, 15, 12), bool] */
}

def @func_5895(%var_5885: Tensor[(2, 9, 4), float32]) -> Tensor[(2, 9, 4), uint32] {
  %613 = @func_4252() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %614 = %613.0;
  %615 = cast(%var_5885, dtype="uint32") /* ty=Tensor[(2, 9, 4), uint32] */;
  %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%614, dtype="uint32") /* ty=Tensor[(2, 9, 4), uint32] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%617, %618) /* ty=Tensor[(2, 9, 4), uint32] */
}

def @func_6188() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %630 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %619 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
    %620 = @func_1934() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %621 = @func_5344() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %622 = @func_5975() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %623 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %624 = %619.0;
    %625 = %620.1;
    %626 = @func_4027() /* ty=Tensor[(2, 9, 4), float32] */;
    %627 = %621.0;
    %628 = %622.0;
    %629 = %623.0;
    (%624, %625, %626, %627, %628, %629)
  };
  %630() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_4003() -> Tensor[(2, 9, 4), float32] {
  %632 = fn () -> Tensor[(2, 9, 4), float32] {
    %631 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %631.0
  };
  %632() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_5090() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_5088() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_8630() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %633 = @func_7312() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %634 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %635 = %633.0;
  %636 = %634.1;
  %637 = @func_6592() /* ty=Tensor[(2, 9, 4), float32] */;
  (%635, %636, %637)
}

def @func_6400() -> (Tensor[(5, 6, 2), float64], Tensor[(2, 9, 4), float32]) {
  @func_6398() /* ty=(Tensor[(5, 6, 2), float64], Tensor[(2, 9, 4), float32]) */
}

def @func_11852() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  @func_11850() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */
}

def @func_4909() -> (Tensor[(2, 9, 4), float32],) {
  @func_4907() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_11386(%var_11372: Tensor[(9, 9, 7), float32], %var_11381: Tensor[(9, 9, 7), float32]) -> Tensor[(9, 9, 7), float64] {
  %638 = cast(%var_11372, dtype="float32") /* ty=Tensor[(9, 9, 7), float32] */;
  %639 = log10(%638) /* ty=Tensor[(9, 9, 7), float32] */;
  %640 = cast(%var_11381, dtype="float64") /* ty=Tensor[(9, 9, 7), float64] */;
  %641 = shape_of(%639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %642 = cast(%639, dtype="float64") /* ty=Tensor[(9, 9, 7), float64] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%642, %643) /* ty=Tensor[(9, 9, 7), float64] */
}

def @func_6480() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %644 = @func_4064() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %645 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %646 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %647 = %644.0;
  %648 = %645.1;
  %649 = %646.3;
  (%647, %648, %649)
}

def @func_10703() -> Tensor[(7, 1, 6), float32] {
  %653 = fn () -> Tensor[(7, 1, 6), float32] {
    %650 = @func_9370() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) */;
    %651 = %650.2;
    %652 = cast(%651, dtype="float32") /* ty=Tensor[(7, 1, 6), float32] */;
    asinh(%652) /* ty=Tensor[(7, 1, 6), float32] */
  };
  %653() /* ty=Tensor[(7, 1, 6), float32] */
}

def @func_1121() -> (Tensor[(2, 9, 4), float32],) {
  %656 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %654 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %655 = %654.0;
    (%655,)
  };
  %656() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_12311() -> Tensor[(2, 9, 4), float64] {
  @func_1157() /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_10731(%var_10729: Tensor[(5, 1, 16), uint8], %var_10730: Tensor[(5, 14, 16), uint8]) -> Tensor[(5, 14, 16), uint8] {
  %659 = fn (%var_10716: Tensor[(5, 1, 16), uint8], %var_10717: Tensor[(5, 14, 16), uint8]) -> Tensor[(5, 14, 16), uint8] {
    %657 = cast(%var_10716, dtype="uint8") /* ty=Tensor[(5, 1, 16), uint8] */;
    %658 = cast(%var_10717, dtype="uint8") /* ty=Tensor[(5, 14, 16), uint8] */;
    right_shift(%657, %658) /* ty=Tensor[(5, 14, 16), uint8] */
  };
  %659(%var_10729, %var_10730) /* ty=Tensor[(5, 14, 16), uint8] */
}

def @func_12517() -> Tensor[(2, 9, 4), float32] {
  @func_12515() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_1105() -> (Tensor[(2, 9, 4), float32],) {
  %662 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %660 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %661 = %660.0;
    (%661,)
  };
  %662() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_8027() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %663 = @func_7542() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %664 = @func_3961() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %665 = @func_7542() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %666 = @func_5155() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %667 = %663.0;
  %668 = %664.0;
  %669 = %665.1;
  %670 = %666.0;
  (%667, %668, %669, %670)
}

def @func_9536() -> Tensor[(2, 9, 4), float32] {
  %672 = fn () -> Tensor[(2, 9, 4), float32] {
    %671 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %671.4
  };
  %672() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_11303() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %679 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %673 = @func_3634() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %674 = @func_7001() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %675 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
    %676 = %673.0;
    %677 = %674.0;
    %678 = @func_9293() /* ty=Tensor[(2, 9, 4), float32] */;
    (%675, %676, %677, %678)
  };
  %679() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_5068() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_5066() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_11618() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %680 = @func_9535() /* ty=Tensor[(2, 9, 4), float32] */;
  %681 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
  (%680, %681)
}

def @func_6518() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %689 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %682 = @func_5088() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %683 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %684 = @func_3634() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %685 = %682.1;
    %686 = @func_5754() /* ty=Tensor[(2, 9, 4), float32] */;
    %687 = %683.0;
    %688 = %684.0;
    (%685, %686, %687, %688)
  };
  %689() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_11468() -> Tensor[(2, 9, 4), float32] {
  %691 = fn () -> Tensor[(2, 9, 4), float32] {
    %690 = @func_7461() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %690.0
  };
  %691() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_5754() -> Tensor[(2, 9, 4), float32] {
  %692 = @func_5462() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %692.1
}

def @func_8431() -> (Tensor[(2, 9, 4), float32],) {
  @func_8429() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_2398() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
  %699 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
    %693 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
    %694 = @func_1449() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
    %695 = @func_2229() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) */;
    %696 = %693.1;
    %697 = %694.1;
    %698 = %695.0;
    (%696, %697, %698)
  };
  %699() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */
}

def @func_4048() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %704 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %700 = @func_2923() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %701 = @func_3262() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
    %702 = %700.2;
    %703 = %701.1;
    (%702, %703)
  };
  %704() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_11976() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_11974() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_5270() -> (Tensor[(2, 9, 4), float64],) {
  @func_5268() /* ty=(Tensor[(2, 9, 4), float64],) */
}

def @func_1989() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) {
  %705 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %706 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  %707 = %705.0;
  (%706, %707)
}

def @func_10943() -> Tensor[(2, 9, 4), float64] {
  %708 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %708.2
}

def @func_3131() -> (Tensor[(2, 9, 4), float64],) {
  @func_3129() /* ty=(Tensor[(2, 9, 4), float64],) */
}

def @func_4252() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %709 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %710 = @func_4002() /* ty=Tensor[(2, 9, 4), float32] */;
  %711 = cast(%710, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
  %712 = %709.0;
  %713 = atan(%711) /* ty=Tensor[(2, 9, 4), float32] */;
  (%712, %713)
}

def @func_236(%var_234: Tensor[(24), float64], %var_235: Tensor[(28), int8]) -> (Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) {
  %739 = fn (%var_204: Tensor[(24), float64], %var_205: Tensor[(28), int8]) -> (Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) {
    %714 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 4, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 6), float32] */;
    %715 = acos(%714) /* ty=Tensor[(12, 4, 6), float32] */;
    %716 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 4, 6), float32] */, dtype="float64") /* ty=Tensor[(12, 4, 6), float64] */;
    %717 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
    %718 = cast(%715, dtype="float64") /* ty=Tensor[(12, 4, 6), float64] */;
    %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %720 = cast(%var_204, dtype="float64") /* ty=Tensor[(24), float64] */;
    %721 = cast(%var_205, dtype="int8") /* ty=Tensor[(28), int8] */;
    %722 = cast(meta[relay.Constant][34] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
    %723 = reshape(%720, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
    %724 = reshape(%721, newshape=[28]) /* ty=Tensor[(28), int8] */;
    %725 = reshape(%722, newshape=[448]) /* ty=Tensor[(448), int8] */;
    %726 = @func_159(%723, %724, %725) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
    %727 = cast(%715, dtype="float64") /* ty=Tensor[(12, 4, 6), float64] */;
    %728 = cast(%var_204, dtype="float64") /* ty=Tensor[(24), float64] */;
    %729 = cast(%var_205, dtype="int8") /* ty=Tensor[(28), int8] */;
    %730 = cast(meta[relay.Constant][34] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
    %731 = reshape(%728, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
    %732 = reshape(%729, newshape=[28]) /* ty=Tensor[(28), int8] */;
    %733 = reshape(%730, newshape=[448]) /* ty=Tensor[(448), int8] */;
    %734 = @func_159(%731, %732, %733) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
    %735 = mod(%718, %719) /* ty=Tensor[(12, 4, 6), float64] */;
    %736 = %726.4;
    %737 = log2(%727) /* ty=Tensor[(12, 4, 6), float64] */;
    %738 = %734.4;
    (%735, %736, %var_204, %var_205, meta[relay.Constant][34] /* ty=Tensor[(448), int8] */, %737, %738)
  };
  %739(%var_234, %var_235) /* ty=(Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 4, 6), float64], Tensor[(7, 4, 16), int8]) */
}

def @func_12091() -> (Tensor[(2, 9, 4), float32],) {
  %740 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %741 = %740.1;
  (%741,)
}

def @func_10258(%var_10205: Tensor[(448), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(6, 14, 2), int32], Tensor[(168), int32], Tensor[(10, 28), int64]) {
  %742 = @func_1934() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %743 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 28), int8] */, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %744 = cast(%var_10205, dtype="int8") /* ty=Tensor[(448), int8] */;
  %745 = reshape(%743, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %746 = reshape(%744, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %747 = @func_19(%745, %746) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %748 = cast(meta[relay.Constant][36] /* ty=Tensor[(168), int32] */, dtype="int32") /* ty=Tensor[(168), int32] */;
  %749 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 28), int8] */, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
  %750 = reshape(%748, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), int32] */;
  %751 = reshape(%749, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %752 = @func_3064(%750, %751) /* ty=(Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) */;
  %753 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 28), int8] */, dtype="int64") /* ty=Tensor[(1, 28), int64] */;
  %754 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 28), int8] */, dtype="int64") /* ty=Tensor[(10, 28), int64] */;
  %755 = %742.0;
  %756 = %747.0;
  %757 = %752.0;
  %758 = bitwise_and(%753, %754) /* ty=Tensor[(10, 28), int64] */;
  (%755, %756, %var_10205, %757, meta[relay.Constant][36] /* ty=Tensor[(168), int32] */, %758)
}

def @func_3677() -> Tensor[(2, 9, 4), float32] {
  %759 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %759.1
}

def @func_9772() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %763 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
    %760 = @func_6429() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
    %761 = @func_4301() /* ty=Tensor[(2, 9, 4), float32] */;
    %762 = %760.1;
    (%761, %762)
  };
  %763() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */
}

def @func_12093() -> (Tensor[(2, 9, 4), float32],) {
  @func_12091() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_8351() -> Tensor[(2, 9, 4), float64] {
  @func_8349() /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_8706() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_8704() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_6431() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  @func_6429() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */
}

def @func_5066() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %764 = @func_4106() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %765 = @func_4002() /* ty=Tensor[(2, 9, 4), float32] */;
  %766 = %764.0;
  (%765, %766)
}

def @func_8519() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_8517() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_4301() -> Tensor[(2, 9, 4), float32] {
  %767 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %767.1
}

def @func_5662() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2475), float32], Tensor[(1, 2475), float32]) {
  %775 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2475), float32], Tensor[(1, 2475), float32]) {
    %768 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %769 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 2475), float32] */, dtype="float32") /* ty=Tensor[(1, 2475), float32] */;
    %770 = reshape(%769, newshape=[2475]) /* ty=Tensor[(2475), float32] */;
    %771 = @func_3286(%770) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), int64], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32], Tensor[(2, 9, 4), float64]) */;
    %772 = %768.1;
    %773 = @func_2710() /* ty=Tensor[(2, 9, 4), float32] */;
    %774 = %771.4;
    (%772, %773, %774, meta[relay.Constant][38] /* ty=Tensor[(1, 2475), float32] */)
  };
  %775() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2475), float32], Tensor[(1, 2475), float32]) */
}

def @func_4436() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %776 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %777 = @func_4027() /* ty=Tensor[(2, 9, 4), float32] */;
  %778 = %776.1;
  (%777, %778)
}

def @func_9998(%var_9961: Tensor[(28), int8], %var_9963: Tensor[(28), int8], %var_9985: Tensor[(24), float64], %var_9986: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(448), int8], Tensor[(168), int32], Tensor[(28), bool], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %779 = @func_2923() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %780 = @func_9395() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %781 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %782 = cast(meta[relay.Constant][39] /* ty=Tensor[(168), int32] */, dtype="int32") /* ty=Tensor[(168), int32] */;
  %783 = cast(%var_9961, dtype="int8") /* ty=Tensor[(28), int8] */;
  %784 = reshape(%782, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), int32] */;
  %785 = reshape(%783, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %786 = @func_3064(%784, %785) /* ty=(Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) */;
  %787 = cast(%var_9963, dtype="bool") /* ty=Tensor[(28), bool] */;
  %788 = shape_of(%var_9961, dtype="int32") /* ty=Tensor[(1), int32] */;
  %789 = cast(%var_9961, dtype="bool") /* ty=Tensor[(28), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?), bool] */;
  %791 = cast(%var_9985, dtype="float64") /* ty=Tensor[(24), float64] */;
  %792 = cast(%var_9986, dtype="int32") /* ty=Tensor[(840), int32] */;
  %793 = reshape(%791, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %794 = reshape(%792, newshape=[840]) /* ty=Tensor[(840), int32] */;
  %795 = @func_5195(%793, %794) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2475), float32]) */;
  %796 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %797 = %779.1;
  %798 = %780.0;
  %799 = %781.4;
  %800 = %786.2;
  %801 = less_equal(%789, %790) /* ty=Tensor[(28), bool] */;
  %802 = %795.2;
  %803 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
  %804 = %796.2;
  (%797, %798, %799, %800, meta[relay.Constant][39] /* ty=Tensor[(168), int32] */, %801, %802, %var_9985, %var_9986, %803, %804)
}

def @func_4959(%var_4957: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(15, 165), float32]) {
  @func_4956(%var_4957) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(15, 165), float32]) */
}

def @func_6543(%var_6541: Tensor[(8, 6, 7), int32]) -> Tensor[(8, 6, 7), int32] {
  @func_6540(%var_6541) /* ty=Tensor[(8, 6, 7), int32] */
}

def @func_3589(%var_3585: Tensor[(2, 9, 4), float32], %var_3586: Tensor[(6, 4), float64], %var_3587: Tensor[(840), int32], %var_3588: Tensor[(825, 3), float32]) -> (Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(6, 4), float64], Tensor[(840), int32], Tensor[(825, 3), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  @func_3583(%var_3585, %var_3586, %var_3587, %var_3588) /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(6, 4), float64], Tensor[(840), int32], Tensor[(825, 3), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */
}

def @func_9023(%var_9005: Tensor[(16, 5, 3), bool], %var_9006: Tensor[(16, 5, 3), bool]) -> (Tensor[(16, 5, 3), bool], Tensor[(16, 5, 3), float64]) {
  %805 = cast(%var_9006, dtype="bool") /* ty=Tensor[(16, 5, 3), bool] */;
  %806 = shape_of(%var_9005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%var_9005, dtype="bool") /* ty=Tensor[(16, 5, 3), bool] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %809 = cast(%var_9006, dtype="float64") /* ty=Tensor[(16, 5, 3), float64] */;
  %810 = sinh(%809) /* ty=Tensor[(16, 5, 3), float64] */;
  %811 = cast(%var_9005, dtype="float64") /* ty=Tensor[(16, 5, 3), float64] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="float64") /* ty=Tensor[(16, 5, 3), float64] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %815 = logical_and(%807, %808) /* ty=Tensor[(16, 5, 3), bool] */;
  %816 = mod(%813, %814) /* ty=Tensor[(16, 5, 3), float64] */;
  (%815, %816)
}

def @func_11772() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_11770() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_6779() -> (Tensor[(2, 9, 4), float32],) {
  %817 = @func_4252() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %818 = %817.1;
  (%818,)
}

def @func_3722() -> Tensor[(2, 9, 4), float32] {
  %820 = fn () -> Tensor[(2, 9, 4), float32] {
    %819 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
    %819.2
  };
  %820() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_4303() -> Tensor[(2, 9, 4), float32] {
  @func_4301() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_9371() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) {
  %827 = fn () -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) {
    %821 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
    %822 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %823 = @func_8552() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(42), float32]) */;
    %824 = %821.2;
    %825 = %822.0;
    %826 = %823.1;
    (%824, %825, %826)
  };
  %827() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float64], Tensor[(7, 1, 6), float32]) */
}

def @func_159(%var_77: Tensor[(4, 2, 3), float64], %var_94: Tensor[(28), int8], %var_95: Tensor[(448), int8]) -> (Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) {
  %828 = cast(%var_77, dtype="float64") /* ty=Tensor[(4, 2, 3), float64] */;
  %829 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 2, 3), float64] */, dtype="uint32") /* ty=Tensor[(4, 2, 3), uint32] */;
  %830 = shape_of(%var_77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%var_77, dtype="uint32") /* ty=Tensor[(4, 2, 3), uint32] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %833 = cast(%var_94, dtype="int8") /* ty=Tensor[(28), int8] */;
  %834 = cast(%var_95, dtype="int8") /* ty=Tensor[(448), int8] */;
  %835 = reshape(%833, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %836 = reshape(%834, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %837 = @func_19(%835, %836) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %838 = cast(%var_94, dtype="int8") /* ty=Tensor[(28), int8] */;
  %839 = cast(%var_95, dtype="int8") /* ty=Tensor[(448), int8] */;
  %840 = reshape(%838, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
  %841 = reshape(%839, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
  %842 = @func_19(%840, %841) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %843 = %842.0;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(7, 4, 16), float32] */;
  %845 = acos(%828) /* ty=Tensor[(4, 2, 3), float64] */;
  %846 = multiply(%831, %832) /* ty=Tensor[(4, 2, 3), uint32] */;
  %847 = %837.0;
  %848 = atanh(%844) /* ty=Tensor[(7, 4, 16), float32] */;
  (%845, %var_94, %var_95, %846, %847, %848)
}

def @func_7088() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) {
  @func_7086() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */
}

def @func_9675() -> Tensor[(2, 9, 4), float32] {
  %849 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %849.0
}

def @func_1185() -> Tensor[(2, 9, 4), float32] {
  %851 = fn () -> Tensor[(2, 9, 4), float32] {
    %850 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %850.0
  };
  %851() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_4530() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %856 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %852 = @func_1989() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32]) */;
    %853 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
    %854 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
    %855 = %852.0;
    (%853, %854, %855)
  };
  %856() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_7258() -> (Tensor[(2, 9, 4), float32], Tensor[(4, 2, 3), uint32], Tensor[(24), float64], Tensor[(1, 28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float64]) {
  %869 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(4, 2, 3), uint32], Tensor[(24), float64], Tensor[(1, 28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float64]) {
    %857 = @func_3634() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %858 = cast(meta[relay.Constant][41] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
    %859 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 28), int8] */, dtype="int8") /* ty=Tensor[(1, 28), int8] */;
    %860 = cast(meta[relay.Constant][43] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
    %861 = reshape(%858, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
    %862 = reshape(%859, newshape=[28]) /* ty=Tensor[(28), int8] */;
    %863 = reshape(%860, newshape=[448]) /* ty=Tensor[(448), int8] */;
    %864 = @func_159(%861, %862, %863) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
    %865 = @func_3245() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %866 = %857.0;
    %867 = %864.3;
    %868 = %865.0;
    (%866, %867, meta[relay.Constant][41] /* ty=Tensor[(24), float64] */, meta[relay.Constant][42] /* ty=Tensor[(1, 28), int8] */, meta[relay.Constant][43] /* ty=Tensor[(448), int8] */, %868)
  };
  %869() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(4, 2, 3), uint32], Tensor[(24), float64], Tensor[(1, 28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float64]) */
}

def @func_12481() -> (Tensor[(6, 8, 7), float32], Tensor[(2, 9, 4), float32]) {
  %879 = fn () -> (Tensor[(6, 8, 7), float32], Tensor[(2, 9, 4), float32]) {
    %870 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 8, 7), uint8] */, dtype="uint8") /* ty=Tensor[(6, 8, 7), uint8] */;
    %871 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(6, 8, 7), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %872 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 8, 7), uint8] */, dtype="uint8") /* ty=Tensor[(6, 8, 7), uint8] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %874 = bitwise_xor(%872, %873) /* ty=Tensor[(6, 8, 7), uint8] */;
    %875 = cast(%874, dtype="float32") /* ty=Tensor[(6, 8, 7), float32] */;
    %876 = @func_11618() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %877 = acosh(%875) /* ty=Tensor[(6, 8, 7), float32] */;
    %878 = %876.0;
    (%877, %878)
  };
  %879() /* ty=(Tensor[(6, 8, 7), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_7519(%var_7518: Tensor[(9, 10, 13), uint32]) -> (Tensor[(9, 10, 13), uint32], Tensor[(2, 9, 4), float32]) {
  %885 = fn (%var_7500: Tensor[(9, 10, 13), uint32]) -> (Tensor[(9, 10, 13), uint32], Tensor[(2, 9, 4), float32]) {
    %880 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 10, 1), uint32] */, dtype="uint32") /* ty=Tensor[(9, 10, 1), uint32] */;
    %881 = cast(%var_7500, dtype="uint32") /* ty=Tensor[(9, 10, 13), uint32] */;
    %882 = @func_6362() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %883 = maximum(%880, %881) /* ty=Tensor[(9, 10, 13), uint32] */;
    %884 = %882.0;
    (%883, %884)
  };
  %885(%var_7518) /* ty=(Tensor[(9, 10, 13), uint32], Tensor[(2, 9, 4), float32]) */
}

def @func_6429() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %886 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %887 = @func_3012() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
  %888 = %886.1;
  %889 = %887.1;
  (%888, %889)
}

def @func_12041() -> Tensor[(2, 9, 4), float64] {
  %890 = fn () -> Tensor[(2, 9, 4), float64] {
    @func_10943() /* ty=Tensor[(2, 9, 4), float64] */
  };
  %890() /* ty=Tensor[(2, 9, 4), float64] */
}

def @func_6863(%var_6861: bool, %var_6862: Tensor[(16, 2, 7), bool]) -> (Tensor[(16, 2, 7), bool],) {
  %902 = fn (%var_6823: bool, %var_6824: Tensor[(16, 2, 7), bool]) -> (Tensor[(16, 2, 7), bool],) {
    %891 = cast(%var_6823, dtype="bool") /* ty=bool */;
    %892 = cast(%var_6824, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
    %893 = logical_or(%891, %892) /* ty=Tensor[(16, 2, 7), bool] */;
    %894 = cast(%893, dtype="uint32") /* ty=Tensor[(16, 2, 7), uint32] */;
    %895 = cast(%var_6823, dtype="uint32") /* ty=uint32 */;
    %896 = logical_xor(%894, %895) /* ty=Tensor[(16, 2, 7), uint32] */;
    %897 = cast(%896, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
    %898 = shape_of(%var_6824, dtype="int32") /* ty=Tensor[(3), int32] */;
    %899 = cast(%var_6824, dtype="bool") /* ty=Tensor[(16, 2, 7), bool] */;
    %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %901 = less(%899, %900) /* ty=Tensor[(16, 2, 7), bool] */;
    (%901,)
  };
  %902(%var_6861, %var_6862) /* ty=(Tensor[(16, 2, 7), bool],) */
}

def @func_12591() -> Tensor[(2, 9, 4), float32] {
  @func_12589() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_7795() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %903 = @func_6480() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %904 = @func_5293() /* ty=Tensor[(2, 9, 4), float32] */;
  %905 = %903.0;
  (%904, %905)
}

def @func_2036() -> Tensor[(2, 9, 4), float32] {
  %907 = fn () -> Tensor[(2, 9, 4), float32] {
    %906 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %906.0
  };
  %907() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_9293() -> Tensor[(2, 9, 4), float32] {
  %908 = @func_3961() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %908.0
}

def @func_1265() -> Tensor[(2, 9, 4), float32] {
  @func_1263() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_8985(%var_8915: Tensor[(6, 3, 6), float64], %var_8963: Tensor[(144), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(6), float64], Tensor[(2, 9, 4), float32], Tensor[(6, 3, 6), bool], Tensor[(7, 1, 6), float32], Tensor[(12, 3, 6), bool], Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), int8], int8, Tensor[(144), int8], Tensor[(2, 9, 4), float32], Tensor[(1, 1, 6), float64]) {
  %909 = @func_8630() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %910 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %911 = @func_8783() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %912 = cast(meta[relay.Constant][47] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %913 = reshape(%912, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float64] */;
  %914 = @func_8083(%913) /* ty=(Tensor[(1, 1, 6), float64], Tensor[(1, 1, 6), float64]) */;
  %915 = %914.1;
  %916 = cast(%915, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %917 = cast(%var_8915, dtype="bool") /* ty=Tensor[(6, 3, 6), bool] */;
  %918 = @func_8552() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(42), float32]) */;
  %919 = cast(%915, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %920 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 3, 6), float64] */, dtype="bool") /* ty=Tensor[(12, 3, 6), bool] */;
  %921 = cast(meta[relay.Constant][49] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %922 = cast(%var_8963, dtype="int8") /* ty=Tensor[(144), int8] */;
  %923 = reshape(%921, newshape=[]) /* ty=int8 */;
  %924 = reshape(%922, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int8] */;
  %925 = @func_8288(%923, %924) /* ty=(Tensor[(9, 16, 1), int8], Tensor[(9, 16, 1), bool]) */;
  %926 = @func_2229() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) */;
  %927 = cast(meta[relay.Constant][47] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %928 = reshape(%927, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float64] */;
  %929 = @func_8083(%928) /* ty=(Tensor[(1, 1, 6), float64], Tensor[(1, 1, 6), float64]) */;
  %930 = %909.1;
  %931 = %910.1;
  %932 = @func_8356() /* ty=Tensor[(2, 9, 4), float32] */;
  %933 = @func_8356() /* ty=Tensor[(2, 9, 4), float32] */;
  %934 = %911.2;
  %935 = greater_equal(%916, %917) /* ty=Tensor[(6, 3, 6), bool] */;
  %936 = %918.1;
  %937 = logical_or(%919, %920) /* ty=Tensor[(12, 3, 6), bool] */;
  %938 = @func_7633() /* ty=Tensor[(2, 9, 4), float32] */;
  %939 = %925.0;
  %940 = %926.0;
  %941 = %929.1;
  (%930, %931, %932, %933, meta[relay.Constant][47] /* ty=Tensor[(6), float64] */, %934, %935, %936, %937, %938, %939, meta[relay.Constant][49] /* ty=int8 */, %var_8963, %940, %941)
}

def @func_8291(%var_8289: int8, %var_8290: Tensor[(9, 16, 1), int8]) -> (Tensor[(9, 16, 1), int8], Tensor[(9, 16, 1), bool]) {
  %948 = fn (%var_8271: int8, %var_8272: Tensor[(9, 16, 1), int8]) -> (Tensor[(9, 16, 1), int8], Tensor[(9, 16, 1), bool]) {
    %942 = cast(%var_8271, dtype="int8") /* ty=int8 */;
    %943 = cast(%var_8272, dtype="int8") /* ty=Tensor[(9, 16, 1), int8] */;
    %944 = cast(%var_8271, dtype="bool") /* ty=bool */;
    %945 = cast(%var_8272, dtype="bool") /* ty=Tensor[(9, 16, 1), bool] */;
    %946 = subtract(%942, %943) /* ty=Tensor[(9, 16, 1), int8] */;
    %947 = greater_equal(%944, %945) /* ty=Tensor[(9, 16, 1), bool] */;
    (%946, %947)
  };
  %948(%var_8289, %var_8290) /* ty=(Tensor[(9, 16, 1), int8], Tensor[(9, 16, 1), bool]) */
}

def @func_5155() -> (Tensor[(2, 9, 4), float32],) {
  %949 = @func_1934() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %950 = %949.0;
  (%950,)
}

def @func_8086(%var_8084: Tensor[(1, 1, 6), float64]) -> (Tensor[(1, 1, 6), float64], Tensor[(1, 1, 6), float64]) {
  @func_8083(%var_8084) /* ty=(Tensor[(1, 1, 6), float64], Tensor[(1, 1, 6), float64]) */
}

def @func_5253() -> (Tensor[(2, 9, 4), float32],) {
  %953 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %951 = @func_4436() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %952 = %951.1;
    (%952,)
  };
  %953() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_8429() -> (Tensor[(2, 9, 4), float32],) {
  %954 = @func_3931() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %955 = %954.0;
  (%955,)
}

def @func_3444(%var_3442: Tensor[(28), int8], %var_3443: Tensor[(168), int32]) -> (Tensor[(2, 9, 4), float64], Tensor[(448), int8], Tensor[(28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float32], Tensor[(448), int8], Tensor[(168), int32]) {
  %971 = fn (%var_3417: Tensor[(28), int8], %var_3424: Tensor[(168), int32]) -> (Tensor[(2, 9, 4), float64], Tensor[(448), int8], Tensor[(28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float32], Tensor[(448), int8], Tensor[(168), int32]) {
    %956 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
    %957 = cast(%var_3417, dtype="int8") /* ty=Tensor[(28), int8] */;
    %958 = cast(meta[relay.Constant][50] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
    %959 = reshape(%957, newshape=[28, 1]) /* ty=Tensor[(28, 1), int8] */;
    %960 = reshape(%958, newshape=[448]) /* ty=Tensor[(448), int8] */;
    %961 = @func_1245(%959, %960) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(28, 1), int8], Tensor[(448), int8], Tensor[(7, 4, 16), uint16]) */;
    %962 = cast(%var_3424, dtype="int32") /* ty=Tensor[(168), int32] */;
    %963 = cast(%var_3417, dtype="int8") /* ty=Tensor[(28), int8] */;
    %964 = reshape(%962, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), int32] */;
    %965 = reshape(%963, newshape=[28]) /* ty=Tensor[(28), int8] */;
    %966 = @func_3064(%964, %965) /* ty=(Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) */;
    %967 = %956.0;
    %968 = %961.2;
    %969 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
    %970 = %966.2;
    (%967, %968, %var_3417, meta[relay.Constant][50] /* ty=Tensor[(448), int8] */, %969, %970, %var_3424)
  };
  %971(%var_3442, %var_3443) /* ty=(Tensor[(2, 9, 4), float64], Tensor[(448), int8], Tensor[(28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float32], Tensor[(448), int8], Tensor[(168), int32]) */
}

def @func_1370() -> Tensor[(2, 9, 4), float32] {
  @func_1368() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_7735(%var_7733: Tensor[(448), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(4, 2, 3), float64], Tensor[(1, 24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_7732(%var_7733) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(4, 2, 3), float64], Tensor[(1, 24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_2082(%var_2080: Tensor[(5, 6, 2), uint64], %var_2081: Tensor[(5, 6, 2), uint64]) -> Tensor[(5, 6, 2), uint64] {
  @func_2078(%var_2080, %var_2081) /* ty=Tensor[(5, 6, 2), uint64] */
}

def @func_6664() -> Tensor[(2, 9, 4), float32] {
  @func_6662() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_1598(%var_1596: Tensor[(24, 1), float64], %var_1597: Tensor[(28), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), float32], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(4, 112), int8], Tensor[(2, 9, 4), float32]) {
  %989 = fn (%var_1583: Tensor[(24, 1), float64], %var_1584: Tensor[(28), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), float32], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(4, 112), int8], Tensor[(2, 9, 4), float32]) {
    %972 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %973 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
    %974 = @func_1449() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
    %975 = cast(%var_1583, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
    %976 = cast(%var_1584, dtype="int8") /* ty=Tensor[(28), int8] */;
    %977 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 112), int8] */, dtype="int8") /* ty=Tensor[(4, 112), int8] */;
    %978 = reshape(%975, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
    %979 = reshape(%976, newshape=[28]) /* ty=Tensor[(28), int8] */;
    %980 = reshape(%977, newshape=[448]) /* ty=Tensor[(448), int8] */;
    %981 = @func_159(%978, %979, %980) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
    %982 = @func_1309() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %983 = @func_1263() /* ty=Tensor[(2, 9, 4), float32] */;
    %984 = %972.0;
    %985 = %973.0;
    %986 = %974.0;
    %987 = %981.5;
    %988 = %982.0;
    (%983, %984, %985, %986, %987, %var_1583, %var_1584, meta[relay.Constant][51] /* ty=Tensor[(4, 112), int8] */, %988)
  };
  %989(%var_1596, %var_1597) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), float32], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(4, 112), int8], Tensor[(2, 9, 4), float32]) */
}

def @func_10017() -> (Tensor[(1, 2475), float32],) {
  @func_10015() /* ty=(Tensor[(1, 2475), float32],) */
}

def @func_8783() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %990 = @func_6779() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %991 = @func_5344() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %992 = @func_6955() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %993 = %990.0;
  %994 = %991.0;
  %995 = %992.0;
  (%993, %994, %995)
}

def @func_7462() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1000 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %996 = @func_4252() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %997 = @func_7086() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
    %998 = %996.1;
    %999 = %997.0;
    (%998, %999)
  };
  %1000() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_7625(%var_7623: Tensor[(11, 16, 10), float64], %var_7624: Tensor[(11, 16, 10), float64]) -> (Tensor[(11, 16, 10), float64], Tensor[(2, 9, 4), float32]) {
  %1008 = fn (%var_7591: Tensor[(11, 16, 10), float64], %var_7592: Tensor[(11, 16, 10), float64]) -> (Tensor[(11, 16, 10), float64], Tensor[(2, 9, 4), float32]) {
    %1001 = cast(%var_7592, dtype="float64") /* ty=Tensor[(11, 16, 10), float64] */;
    %1002 = shape_of(%var_7591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1003 = cast(%var_7591, dtype="float64") /* ty=Tensor[(11, 16, 10), float64] */;
    %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1005 = @func_7140() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1006 = divide(%1003, %1004) /* ty=Tensor[(11, 16, 10), float64] */;
    %1007 = %1005.3;
    (%1006, %1007)
  };
  %1008(%var_7623, %var_7624) /* ty=(Tensor[(11, 16, 10), float64], Tensor[(2, 9, 4), float32]) */
}

def @func_11058() -> (Tensor[(2, 9, 4), float32],) {
  %1011 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %1009 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1010 = %1009.0;
    (%1010,)
  };
  %1011() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_6876() -> Tensor[(2, 9, 4), float32] {
  %1013 = fn () -> Tensor[(2, 9, 4), float32] {
    %1012 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1012.1
  };
  %1013() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_11620() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_11618() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_2878(%var_2875: Tensor[(24, 1), float64], %var_2876: Tensor[(1, 840), int32], %var_2877: Tensor[(11, 15, 15), float32]) -> (Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) {
  %1047 = fn (%var_2834: Tensor[(24, 1), float64], %var_2836: Tensor[(1, 840), int32], %var_2844: Tensor[(11, 15, 15), float32]) -> (Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) {
    %1014 = cast(meta[relay.Constant][53] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
    %1015 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(11, 15, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1016 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
    %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1018 = cast(%var_2834, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
    %1019 = cast(meta[relay.Constant][54] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
    %1020 = cast(%var_2836, dtype="int32") /* ty=Tensor[(1, 840), int32] */;
    %1021 = cast(%var_2836, dtype="int32") /* ty=Tensor[(1, 840), int32] */;
    %1022 = reshape(%1018, newshape=[2, 12]) /* ty=Tensor[(2, 12), float64] */;
    %1023 = reshape(%1019, newshape=[1, 28]) /* ty=Tensor[(1, 28), int8] */;
    %1024 = reshape(%1020, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
    %1025 = reshape(%1021, newshape=[6, 140]) /* ty=Tensor[(6, 140), int32] */;
    %1026 = @func_1723(%1022, %1023, %1024, %1025) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) */;
    %1027 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
    %1028 = acosh(%1027) /* ty=Tensor[(11, 15, 15), float32] */;
    %1029 = cast(%var_2844, dtype="int64") /* ty=Tensor[(11, 15, 15), int64] */;
    %1030 = shape_of(%1028, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1031 = cast(%1028, dtype="int64") /* ty=Tensor[(11, 15, 15), int64] */;
    %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1033 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1034 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1035 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
    %1036 = atan(%1035) /* ty=Tensor[(11, 15, 15), float64] */;
    %1037 = cast(%1036, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
    %1038 = shape_of(%1028, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1039 = cast(%1028, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
    %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1041 = mod(%1016, %1017) /* ty=Tensor[(11, 15, 15), float64] */;
    %1042 = %1026.7;
    %1043 = right_shift(%1031, %1032) /* ty=Tensor[(11, 15, 15), int64] */;
    %1044 = %1033.0;
    %1045 = %1034.0;
    %1046 = less_equal(%1039, %1040) /* ty=Tensor[(11, 15, 15), bool] */;
    (%1041, %1042, %var_2834, meta[relay.Constant][54] /* ty=Tensor[(28), int8] */, %var_2836, %1043, %1044, %1045, %1046)
  };
  %1047(%var_2875, %var_2876, %var_2877) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) */
}

def @func_8115() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1054 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %1048 = @func_4402() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1049 = @func_6779() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1050 = @func_7795() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1051 = %1048.0;
    %1052 = %1049.0;
    %1053 = %1050.0;
    (%1051, %1052, %1053)
  };
  %1054() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_11483(%var_11482: int8) -> (Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), bool], int8, Tensor[(144), int8]) {
  %1062 = fn (%var_11477: int8) -> (Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), bool], int8, Tensor[(144), int8]) {
    %1055 = cast(%var_11477, dtype="int8") /* ty=int8 */;
    %1056 = cast(meta[relay.Constant][55] /* ty=Tensor[(144), int8] */, dtype="int8") /* ty=Tensor[(144), int8] */;
    %1057 = reshape(%1055, newshape=[]) /* ty=int8 */;
    %1058 = reshape(%1056, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int8] */;
    %1059 = @func_8288(%1057, %1058) /* ty=(Tensor[(9, 16, 1), int8], Tensor[(9, 16, 1), bool]) */;
    %1060 = @func_9236() /* ty=Tensor[(2, 9, 4), float32] */;
    %1061 = %1059.1;
    (%1060, %1061, %var_11477, meta[relay.Constant][55] /* ty=Tensor[(144), int8] */)
  };
  %1062(%var_11482) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), bool], int8, Tensor[(144), int8]) */
}

def @func_1936() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_1934() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_7634() -> Tensor[(2, 9, 4), float32] {
  %1064 = fn () -> Tensor[(2, 9, 4), float32] {
    %1063 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
    %1063.2
  };
  %1064() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_5491(%var_5489: Tensor[(24), float64]) -> (Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(28), int8], Tensor[(24), uint8]) {
  @func_5488(%var_5489) /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(28), int8], Tensor[(24), uint8]) */
}

def @func_12515() -> Tensor[(2, 9, 4), float32] {
  %1065 = @func_8783() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1065.2
}

def @func_7567() -> (Tensor[(2, 9, 4), float32],) {
  %1066 = @func_7086() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
  %1067 = %1066.2;
  (%1067,)
}

def @func_11371() -> (Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1076 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %1068 = @func_6362() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1069 = @func_10535() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32]) */;
    %1070 = @func_8114() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1071 = @func_7567() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1072 = %1068.1;
    %1073 = %1069.1;
    %1074 = %1070.0;
    %1075 = %1071.0;
    (%1072, %1073, %1074, %1075)
  };
  %1076() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_2924() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1086 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %1077 = @func_2486() /* ty=(Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1078 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
    %1079 = cast(%1078, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %1080 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1081 = %1080.1;
    %1082 = cast(%1081, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %1083 = %1077.1;
    %1084 = asinh(%1079) /* ty=Tensor[(2, 9, 4), float32] */;
    %1085 = atanh(%1082) /* ty=Tensor[(2, 9, 4), float32] */;
    (%1083, %1084, %1085)
  };
  %1086() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_1729(%var_1725: Tensor[(2, 12), float64], %var_1726: Tensor[(1, 28), int8], %var_1727: Tensor[(6, 140), int32], %var_1728: Tensor[(6, 140), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) {
  @func_1723(%var_1725, %var_1726, %var_1727, %var_1728) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(2, 12), float64], Tensor[(1, 28), int8], Tensor[(7, 4, 16), float64], Tensor[(7, 4, 16), int8], Tensor[(6, 140), bool], Tensor[(6, 140), int64], Tensor[(2, 9, 4), float32]) */
}

def @func_11235() -> Tensor[(2, 9, 4), float32] {
  %1087 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1087.0
}

def @func_22(%var_20: Tensor[(7, 4, 1), int8], %var_21: Tensor[(7, 4, 16), int8]) -> (Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) {
  %1094 = fn (%var_2: Tensor[(7, 4, 1), int8], %var_3: Tensor[(7, 4, 16), int8]) -> (Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) {
    %1088 = cast(%var_2, dtype="int8") /* ty=Tensor[(7, 4, 1), int8] */;
    %1089 = cast(%var_3, dtype="int8") /* ty=Tensor[(7, 4, 16), int8] */;
    %1090 = cast(%var_3, dtype="float32") /* ty=Tensor[(7, 4, 16), float32] */;
    %1091 = cast(%var_2, dtype="float32") /* ty=Tensor[(7, 4, 1), float32] */;
    %1092 = add(%1088, %1089) /* ty=Tensor[(7, 4, 16), int8] */;
    %1093 = floor_divide(%1090, %1091) /* ty=Tensor[(7, 4, 16), float32] */;
    (%1092, %1093)
  };
  %1094(%var_20, %var_21) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */
}

def @func_5036() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
  %1099 = fn () -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
    %1095 = @func_2397() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
    %1096 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1097 = %1095.1;
    %1098 = %1096.0;
    (%1097, %1098)
  };
  %1099() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */
}

def @func_10668(%var_10667: Tensor[(8, 16, 1), float32]) -> (Tensor[(8, 16, ?), int64], Tensor[(2, 9, 4), float64], Tensor[(8, 16, ?), float64], Tensor[(8, 16, ?), bool], Tensor[(8, 16, ?), int16]) {
  %1137 = fn (%var_10546: Tensor[(8, 16, 1), float32]) -> (Tensor[(8, 16, ?), int64], Tensor[(2, 9, 4), float64], Tensor[(8, 16, ?), float64], Tensor[(8, 16, ?), bool], Tensor[(8, 16, ?), int16]) {
    %1100 = cast(%var_10546, dtype="float32") /* ty=Tensor[(8, 16, 1), float32] */;
    %1101 = log(%1100) /* ty=Tensor[(8, 16, 1), float32] */;
    %1102 = cast(%var_10546, dtype="int64") /* ty=Tensor[(8, 16, 1), int64] */;
    %1103 = shape_of(%1101, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1104 = cast(%1101, dtype="int64") /* ty=Tensor[(8, 16, 1), int64] */;
    %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1106 = @func_5268() /* ty=(Tensor[(2, 9, 4), float64],) */;
    %1107 = cast(%var_10546, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
    %1108 = shape_of(%1101, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1109 = cast(%1101, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
    %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1111 = cast(%1101, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
    %1112 = cosh(%1111) /* ty=Tensor[(8, 16, 1), float64] */;
    %1113 = cast(%1101, dtype="float32") /* ty=Tensor[(8, 16, 1), float32] */;
    %1114 = sqrt(%1113) /* ty=Tensor[(8, 16, 1), float32] */;
    %1115 = cast(%1114, dtype="bool") /* ty=Tensor[(8, 16, 1), bool] */;
    %1116 = shape_of(%1101, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1117 = cast(%1101, dtype="bool") /* ty=Tensor[(8, 16, 1), bool] */;
    %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1119 = not_equal(%1117, %1118) /* ty=Tensor[(8, 16, ?), bool] */;
    %1120 = cast(%1119, dtype="bool") /* ty=Tensor[(8, 16, ?), bool] */;
    %1121 = shape_of(%1112, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1122 = cast(%1112, dtype="bool") /* ty=Tensor[(8, 16, 1), bool] */;
    %1123 = dyn.reshape(%1120, %1121, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1124 = cast(%1101, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
    %1125 = log10(%1124) /* ty=Tensor[(8, 16, 1), float64] */;
    %1126 = cast(%1125, dtype="float64") /* ty=Tensor[(8, 16, 1), float64] */;
    %1127 = log2(%1126) /* ty=Tensor[(8, 16, 1), float64] */;
    %1128 = cast(%1119, dtype="int16") /* ty=Tensor[(8, 16, ?), int16] */;
    %1129 = shape_of(%1127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1130 = cast(%1127, dtype="int16") /* ty=Tensor[(8, 16, 1), int16] */;
    %1131 = dyn.reshape(%1128, %1129, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1132 = logical_xor(%1104, %1105) /* ty=Tensor[(8, 16, ?), int64] */;
    %1133 = %1106.0;
    %1134 = divide(%1109, %1110) /* ty=Tensor[(8, 16, ?), float64] */;
    %1135 = less(%1122, %1123) /* ty=Tensor[(8, 16, ?), bool] */;
    %1136 = minimum(%1130, %1131) /* ty=Tensor[(8, 16, ?), int16] */;
    (%1132, %1133, %1134, %1135, %1136)
  };
  %1137(%var_10667) /* ty=(Tensor[(8, 16, ?), int64], Tensor[(2, 9, 4), float64], Tensor[(8, 16, ?), float64], Tensor[(8, 16, ?), bool], Tensor[(8, 16, ?), int16]) */
}

def @func_8989(%var_8987: Tensor[(6, 3, 6), float64], %var_8988: Tensor[(144), int8]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(6), float64], Tensor[(2, 9, 4), float32], Tensor[(6, 3, 6), bool], Tensor[(7, 1, 6), float32], Tensor[(12, 3, 6), bool], Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), int8], int8, Tensor[(144), int8], Tensor[(2, 9, 4), float32], Tensor[(1, 1, 6), float64]) {
  @func_8985(%var_8987, %var_8988) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(6), float64], Tensor[(2, 9, 4), float32], Tensor[(6, 3, 6), bool], Tensor[(7, 1, 6), float32], Tensor[(12, 3, 6), bool], Tensor[(2, 9, 4), float32], Tensor[(9, 16, 1), int8], int8, Tensor[(144), int8], Tensor[(2, 9, 4), float32], Tensor[(1, 1, 6), float64]) */
}

def @func_4845() -> (Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) {
  %1138 = @func_3129() /* ty=(Tensor[(2, 9, 4), float64],) */;
  %1139 = %1138.0;
  %1140 = @func_4002() /* ty=Tensor[(2, 9, 4), float32] */;
  (%1139, %1140)
}

def @func_1529(%var_1528: Tensor[(10, 8, 5), float64]) -> Tensor[(10, 8, 5), float64] {
  %1142 = fn (%var_1512: Tensor[(10, 8, 5), float64]) -> Tensor[(10, 8, 5), float64] {
    %1141 = cast(%var_1512, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
    acosh(%1141) /* ty=Tensor[(10, 8, 5), float64] */
  };
  %1142(%var_1528) /* ty=Tensor[(10, 8, 5), float64] */
}

def @func_1451() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  @func_1449() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */
}

def @func_4477() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1147 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %1143 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1144 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
    %1145 = %1143.0;
    %1146 = %1144.1;
    (%1145, %1146)
  };
  %1147() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_6662() -> Tensor[(2, 9, 4), float32] {
  %1148 = @func_1104() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1148.0
}

def @func_6363() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1155 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %1149 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
    %1150 = @func_3634() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1151 = @func_5873() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1152 = %1149.0;
    %1153 = %1150.0;
    %1154 = %1151.0;
    (%1152, %1153, %1154)
  };
  %1155() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_6375(%var_6373: Tensor[(7, 1, 6), float32]) -> (Tensor[(7, 1, 6), float32],) {
  @func_6372(%var_6373) /* ty=(Tensor[(7, 1, 6), float32],) */
}

def @func_9923(%var_9921: Tensor[(240), bool]) -> (Tensor[(2, 9, 4), float32], Tensor[(16, 5, 3), bool], Tensor[(240), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_9920(%var_9921) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(16, 5, 3), bool], Tensor[(240), bool], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_2711() -> Tensor[(2, 9, 4), float32] {
  %1161 = fn () -> Tensor[(2, 9, 4), float32] {
    %1156 = @func_2025() /* ty=Tensor[(2, 9, 4), float32] */;
    %1157 = cast(meta[relay.Constant][56] /* ty=Tensor[(2, 9, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %1158 = shape_of(%1156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1159 = cast(%1156, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %1160 = dyn.reshape(%1157, %1158, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    maximum(%1159, %1160) /* ty=Tensor[(2, 9, 4), float32] */
  };
  %1161() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_2229() -> (Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) {
  %1162 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1163 = cast(meta[relay.Constant][57] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %1164 = cast(meta[relay.Constant][57] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %1165 = reshape(%1163, newshape=[5, 6, 2]) /* ty=Tensor[(5, 6, 2), uint64] */;
  %1166 = reshape(%1164, newshape=[5, 6, 2]) /* ty=Tensor[(5, 6, 2), uint64] */;
  %1167 = %1162.0;
  %1168 = @func_2078(%1165, %1166) /* ty=Tensor[(5, 6, 2), uint64] */;
  (%1167, %1168, meta[relay.Constant][57] /* ty=Tensor[(60), uint64] */)
}

def @func_9466() -> Tensor[(2, 9, 4), float32] {
  %1170 = fn () -> Tensor[(2, 9, 4), float32] {
    %1169 = @func_4047() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1169.0
  };
  %1170() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_5346() -> (Tensor[(2, 9, 4), float32],) {
  @func_5344() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_6957() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_6955() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_11174(%var_11173: float64) -> (Tensor[(15, 9, 12), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(15, 9, 12), float64]) {
  %1181 = fn (%var_11116: float64) -> (Tensor[(15, 9, 12), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(15, 9, 12), float64]) {
    %1171 = cast(%var_11116, dtype="float64") /* ty=float64 */;
    %1172 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
    %1173 = @func_4476() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1174 = @func_3838() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) */;
    %1175 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 9, 12), float64] */;
    %1176 = divide(%1171, %1172) /* ty=Tensor[(15, 9, 12), float64] */;
    %1177 = %1173.1;
    %1178 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
    %1179 = %1174.0;
    %1180 = sin(%1175) /* ty=Tensor[(15, 9, 12), float64] */;
    (%1176, %1177, %1178, %1179, %1180)
  };
  %1181(%var_11173) /* ty=(Tensor[(15, 9, 12), float64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32], Tensor[(15, 9, 12), float64]) */
}

def @func_1449() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float64]) {
  %1182 = @func_1120() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1183 = %1182.0;
  %1184 = @func_1157() /* ty=Tensor[(2, 9, 4), float64] */;
  (%1183, %1184)
}

def @func_3322() -> (Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) {
  @func_3320() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */
}

def @func_3583(%var_3514: Tensor[(2, 9, 4), float32], %var_3523: Tensor[(6, 4), float64], %var_3524: Tensor[(840), int32], %var_3525: Tensor[(825, 3), float32]) -> (Tensor[(2, 9, 4), bool], Tensor[(2, 9, 4), float32], Tensor[(6, 4), float64], Tensor[(840), int32], Tensor[(825, 3), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  %1185 = @func_975() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1186 = %1185.0;
  %1187 = cast(%var_3514, dtype="bool") /* ty=Tensor[(2, 9, 4), bool] */;
  %1188 = shape_of(%1186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1189 = cast(%1186, dtype="bool") /* ty=Tensor[(2, 9, 4), bool] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1191 = cast(%var_3523, dtype="float64") /* ty=Tensor[(6, 4), float64] */;
  %1192 = cast(%var_3524, dtype="int32") /* ty=Tensor[(840), int32] */;
  %1193 = cast(%var_3525, dtype="float32") /* ty=Tensor[(825, 3), float32] */;
  %1194 = reshape(%1191, newshape=[24, 1]) /* ty=Tensor[(24, 1), float64] */;
  %1195 = reshape(%1192, newshape=[1, 840]) /* ty=Tensor[(1, 840), int32] */;
  %1196 = reshape(%1193, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %1197 = @func_2874(%1194, %1195, %1196) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(6, 140), int64], Tensor[(24, 1), float64], Tensor[(28), int8], Tensor[(1, 840), int32], Tensor[(11, 15, 15), int64], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(11, 15, 15), bool]) */;
  %1198 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
  %1199 = cast(meta[relay.Constant][59] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1200 = reshape(%1199, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %1201 = greater(%1189, %1190) /* ty=Tensor[(2, 9, 4), bool] */;
  %1202 = %1197.7;
  %1203 = %1198.1;
  %1204 = @func_1527(%1200) /* ty=Tensor[(10, 8, 5), float64] */;
  (%1201, %1202, %var_3523, %var_3524, %var_3525, %1203, %1204, meta[relay.Constant][59] /* ty=Tensor[(400), float64] */)
}

def @func_5826(%var_5824: Tensor[(448), int8], %var_5825: Tensor[(12, 70), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(12, 4, 6), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 70), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(12, 70), float32]) {
  %1228 = fn (%var_5789: Tensor[(448), int8], %var_5798: Tensor[(12, 70), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(12, 4, 6), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 70), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(12, 70), float32]) {
    %1205 = @func_5155() /* ty=(Tensor[(2, 9, 4), float32],) */;
    %1206 = @func_2582() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1207 = cast(meta[relay.Constant][60] /* ty=Tensor[(12, 70), int32] */, dtype="int32") /* ty=Tensor[(12, 70), int32] */;
    %1208 = cast(meta[relay.Constant][61] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
    %1209 = cast(%var_5789, dtype="int8") /* ty=Tensor[(448), int8] */;
    %1210 = reshape(%1207, newshape=[14, 12, 5]) /* ty=Tensor[(14, 12, 5), int32] */;
    %1211 = reshape(%1208, newshape=[7, 4]) /* ty=Tensor[(7, 4), int8] */;
    %1212 = reshape(%1209, newshape=[56, 8]) /* ty=Tensor[(56, 8), int8] */;
    %1213 = @func_1068(%1210, %1211, %1212) /* ty=(Tensor[(14, 12, 5), bool], Tensor[(7, 4), int8], Tensor[(56, 8), int8], Tensor[(7, 4, 16), int8], Tensor[(12, 4, 6), float64], Tensor[(24), float64], Tensor[(7, 4, 16), float64]) */;
    %1214 = cast(%var_5798, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
    %1215 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(12, 70), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1216 = cast(meta[relay.Constant][60] /* ty=Tensor[(12, 70), int32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
    %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1218 = @func_1340() /* ty=(Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32]) */;
    %1219 = @func_2923() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1220 = cast(meta[relay.Constant][60] /* ty=Tensor[(12, 70), int32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
    %1221 = %1205.0;
    %1222 = %1206.0;
    %1223 = %1213.4;
    %1224 = power(%1216, %1217) /* ty=Tensor[(12, 70), float32] */;
    %1225 = %1218.0;
    %1226 = %1219.2;
    %1227 = rsqrt(%1220) /* ty=Tensor[(12, 70), float32] */;
    (%1221, %1222, %1223, meta[relay.Constant][61] /* ty=Tensor[(28), int8] */, %var_5789, %1224, %1225, %1226, %1227)
  };
  %1228(%var_5824, %var_5825) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(12, 4, 6), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(12, 70), float32], Tensor[(2, 9, 4), uint32], Tensor[(2, 9, 4), float32], Tensor[(12, 70), float32]) */
}

def @func_7086() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) {
  %1229 = @func_2815() /* ty=(Tensor[(2, 9, 4), float64], Tensor[(2, 9, 4), float32]) */;
  %1230 = @func_6517() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1231 = @func_3320() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
  %1232 = @func_3320() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) */;
  %1233 = %1229.1;
  %1234 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
  %1235 = %1230.0;
  %1236 = %1231.2;
  %1237 = %1232.1;
  (%1233, %1234, %1235, %1236, %1237)
}

def @func_9237() -> Tensor[(2, 9, 4), float32] {
  %1238 = fn () -> Tensor[(2, 9, 4), float32] {
    @func_5754() /* ty=Tensor[(2, 9, 4), float32] */
  };
  %1238() /* ty=Tensor[(2, 9, 4), float32] */
}

def @func_3067(%var_3065: Tensor[(6, 14, 2), int32], %var_3066: Tensor[(28), int8]) -> (Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) {
  %1255 = fn (%var_3025: Tensor[(6, 14, 2), int32], %var_3045: Tensor[(28), int8]) -> (Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) {
    %1239 = cast(%var_3025, dtype="int32") /* ty=Tensor[(6, 14, 2), int32] */;
    %1240 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(6, 14, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1241 = cast(meta[relay.Constant][62] /* ty=Tensor[(6, 14, 2), int32] */, dtype="int32") /* ty=Tensor[(6, 14, 2), int32] */;
    %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1243 = cast(meta[relay.Constant][63] /* ty=Tensor[(28), int8] */, dtype="int8") /* ty=Tensor[(28), int8] */;
    %1244 = cast(meta[relay.Constant][64] /* ty=Tensor[(448), int8] */, dtype="int8") /* ty=Tensor[(448), int8] */;
    %1245 = reshape(%1243, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), int8] */;
    %1246 = reshape(%1244, newshape=[7, 4, 16]) /* ty=Tensor[(7, 4, 16), int8] */;
    %1247 = @func_19(%1245, %1246) /* ty=(Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
    %1248 = cast(%var_3045, dtype="bool") /* ty=Tensor[(28), bool] */;
    %1249 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(28), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1250 = cast(meta[relay.Constant][63] /* ty=Tensor[(28), int8] */, dtype="bool") /* ty=Tensor[(28), bool] */;
    %1251 = dyn.reshape(%1248, %1249, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1252 = add(%1241, %1242) /* ty=Tensor[(6, 14, 2), int32] */;
    %1253 = %1247.0;
    %1254 = logical_or(%1250, %1251) /* ty=Tensor[(28), bool] */;
    (%1252, %1253, meta[relay.Constant][64] /* ty=Tensor[(448), int8] */, %1254)
  };
  %1255(%var_3065, %var_3066) /* ty=(Tensor[(6, 14, 2), int32], Tensor[(7, 4, 16), int8], Tensor[(448), int8], Tensor[(28), bool]) */
}

def @func_5874() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1258 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %1256 = @func_5293() /* ty=Tensor[(2, 9, 4), float32] */;
    %1257 = @func_2035() /* ty=Tensor[(2, 9, 4), float32] */;
    (%1256, %1257)
  };
  %1258() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_976() -> (Tensor[(2, 9, 4), float32],) {
  %1261 = fn () -> (Tensor[(2, 9, 4), float32],) {
    %1259 = cast(meta[relay.Constant][65] /* ty=Tensor[(2, 9, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 9, 4), float32] */;
    %1260 = cos(%1259) /* ty=Tensor[(2, 9, 4), float32] */;
    (%1260,)
  };
  %1261() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_4907() -> (Tensor[(2, 9, 4), float32],) {
  %1262 = @func_4436() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1263 = %1262.1;
  (%1263,)
}

def @func_12418(%var_12416: Tensor[(132), float64]) -> (Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64], Tensor[(132), float64], Tensor[(9, 9, 7), float64], Tensor[(567), float32], Tensor[(6), float64], Tensor[(1, 108), float64], Tensor[(4, 36), int8]) {
  @func_12415(%var_12416) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(3, 4, 11), int64], Tensor[(132), float64], Tensor[(9, 9, 7), float64], Tensor[(567), float32], Tensor[(6), float64], Tensor[(1, 108), float64], Tensor[(4, 36), int8]) */
}

def @func_10004(%var_10000: Tensor[(28), int8], %var_10001: Tensor[(28), int8], %var_10002: Tensor[(24), float64], %var_10003: Tensor[(840), int32]) -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(448), int8], Tensor[(168), int32], Tensor[(28), bool], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  @func_9998(%var_10000, %var_10001, %var_10002, %var_10003) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(448), int8], Tensor[(168), int32], Tensor[(28), bool], Tensor[(11, 15, 15), bool], Tensor[(24), float64], Tensor[(840), int32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_12000() -> (Tensor[(2, 9, 4), float32],) {
  %1264 = @func_11206() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1265 = %1264.0;
  (%1265,)
}

def @func_2231() -> (Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) {
  @func_2229() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(5, 6, 2), uint64], Tensor[(60), uint64]) */
}

def @func_5268() -> (Tensor[(2, 9, 4), float64],) {
  %1266 = @func_3129() /* ty=(Tensor[(2, 9, 4), float64],) */;
  %1267 = %1266.0;
  (%1267,)
}

def @func_7542() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1268 = @func_4402() /* ty=(Tensor[(2, 9, 4), float32],) */;
  %1269 = @func_7461() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1270 = %1268.0;
  %1271 = %1269.0;
  (%1270, %1271)
}

def @func_7003() -> (Tensor[(2, 9, 4), float32],) {
  @func_7001() /* ty=(Tensor[(2, 9, 4), float32],) */
}

def @func_12496() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1275 = fn () -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
    %1272 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
    %1273 = @func_1368() /* ty=Tensor[(2, 9, 4), float32] */;
    %1274 = %1272.4;
    (%1273, %1274)
  };
  %1275() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */
}

def @func_3320() -> (Tensor[(2, 9, 4), float32], Tensor[(400), float64], Tensor[(400), float64]) {
  %1276 = cast(meta[relay.Constant][66] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1277 = reshape(%1276, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1278 = @func_2119(%1277) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %1279 = @func_2035() /* ty=Tensor[(2, 9, 4), float32] */;
  %1280 = %1278.3;
  (%1279, %1280, meta[relay.Constant][66] /* ty=Tensor[(400), float64] */)
}

def @func_11038() -> (Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) {
  %1281 = @func_5975() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1282 = @func_6875() /* ty=Tensor[(2, 9, 4), float32] */;
  %1283 = @func_4002() /* ty=Tensor[(2, 9, 4), float32] */;
  %1284 = %1281.0;
  %1285 = @func_1184() /* ty=Tensor[(2, 9, 4), float32] */;
  (%1282, %1283, %1284, %1285)
}

def @func_8554() -> (Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(42), float32]) {
  @func_8552() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(7, 1, 6), float32], Tensor[(42), float32]) */
}

def @func_3787(%var_3746: Tensor[(8, 5, 7), uint32], %var_3747: Tensor[(8, 5, 7), uint32], %var_3768: Tensor[(28), int8], %var_3769: Tensor[(448), int8], %var_3775: Tensor[(8, 50), float64]) -> (Tensor[(8, 5, 7), uint32], Tensor[(2, 9, 4), float32], Tensor[(7, 4, 16), int8], Tensor[(24), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(10, 8, 5), float64], Tensor[(8, 50), float64], Tensor[(8, 5, 7), bool]) {
  %1286 = cast(%var_3747, dtype="uint32") /* ty=Tensor[(8, 5, 7), uint32] */;
  %1287 = shape_of(%var_3746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1288 = cast(%var_3746, dtype="uint32") /* ty=Tensor[(8, 5, 7), uint32] */;
  %1289 = dyn.reshape(%1286, %1287, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1290 = @func_1864() /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32]) */;
  %1291 = cast(meta[relay.Constant][67] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %1292 = cast(%var_3768, dtype="int8") /* ty=Tensor[(28), int8] */;
  %1293 = cast(%var_3769, dtype="int8") /* ty=Tensor[(448), int8] */;
  %1294 = reshape(%1291, newshape=[4, 2, 3]) /* ty=Tensor[(4, 2, 3), float64] */;
  %1295 = reshape(%1292, newshape=[28]) /* ty=Tensor[(28), int8] */;
  %1296 = reshape(%1293, newshape=[448]) /* ty=Tensor[(448), int8] */;
  %1297 = @func_159(%1294, %1295, %1296) /* ty=(Tensor[(4, 2, 3), float64], Tensor[(28), int8], Tensor[(448), int8], Tensor[(4, 2, 3), uint32], Tensor[(7, 4, 16), int8], Tensor[(7, 4, 16), float32]) */;
  %1298 = cast(%var_3775, dtype="float64") /* ty=Tensor[(8, 50), float64] */;
  %1299 = reshape(%1298, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1300 = @func_2119(%1299) /* ty=(Tensor[(2, 9, 4), float32], Tensor[(2, 9, 4), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %1301 = cast(%var_3746, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %1302 = shape_of(%var_3747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1303 = cast(%var_3747, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %1304 = dyn.reshape(%1301, %1302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1305 = minimum(%1288, %1289) /* ty=Tensor[(8, 5, 7), uint32] */;
  %1306 = %1290.4;
  %1307 = %1297.4;
  %1308 = %1300.2;
  %1309 = less(%1303, %1304) /* ty=Tensor[(8, 5, 7), bool] */;
  (%1305, %1306, %1307, meta[relay.Constant][67] /* ty=Tensor[(24), float64] */, %var_3768, %var_3769, %1308, %var_3775, %1309)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen463/build/output.py:4043: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen463/build/output.py:4048: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen463/build/output.py", line 4073, in <module>
    mod = seq(mod)
  File "/home/yujunzhe/tvm/python/tvm/ir/transform.py", line 161, in __call__
    return _ffi_transform_api.RunPass(self, mod)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  10: TVMFuncCall
  9: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::transform::Pass, tvm::IRModule)>::AssignTypedLambda<tvm::transform::__mk_TVM8::{lambda(tvm::transform::Pass, tvm::IRModule)#1}>(tvm::transform::__mk_TVM8::{lambda(tvm::transform::Pass, tvm::IRModule)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  8: tvm::transform::Pass::operator()(tvm::IRModule) const
  7: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  6: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  5: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  4: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::LazyGradientInit()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::LazyGradientInit()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::relay::LazyGradientInit(tvm::RelayExpr const&, tvm::IRModule)
  1: tvm::relay::CheckFeature(tvm::RelayExpr const&, tvm::relay::FeatureSet const&)
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/src/relay/analysis/feature.cc", line 142
TVMError: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------
  Check failed: (dfs.is_subset_of(fs)) is false: #[version = "0.0.5"]
fn () -> ((Tensor[(15, 1, 15), uint32], Tensor[(15, 1, 15), float64]), ()) {
  let %x: Tensor[(15, 1, 15), uint32] = meta[relay.Constant][0] /* ty=Tensor[(15, 1, 15), uint32] */;
  let %x1: Tensor[(15, 1, 15), uint32] = zeros_like(%x) /* ty=Tensor[(15, 1, 15), uint32] */;
  let %x2: Tensor[(15, 1, 15), float64] = meta[relay.Constant][1] /* ty=Tensor[(15, 1, 15), float64] */;
  let %x3: Tensor[(15, 1, 15), float64] = zeros_like(%x2) /* ty=Tensor[(15, 1, 15), float64] */;
  let %x4: (Tensor[(15, 1, 15), uint32], Tensor[(15, 1, 15), float64]) = (%x, %x2);
  %0 = zeros(shape=[15, 1, 15], dtype="uint32") /* ty=Tensor[(15, 1, 15), uint32] */;
  %1 = zeros(shape=[15, 1, 15], dtype="float64") /* ty=Tensor[(15, 1, 15), float64] */;
  let %x5: (Tensor[(15, 1, 15), uint32], Tensor[(15, 1, 15), float64]) = (%0, %1);
  %2 = ones(shape=[15, 1, 15], dtype="uint32") /* ty=Tensor[(15, 1, 15), uint32] */;
  %3 = ones(shape=[15, 1, 15], dtype="float64") /* ty=Tensor[(15, 1, 15), float64] */;
  %4 = (%2, %3);
  %5 = %4.0;
  %7 = (
    let %x6: Tensor[(15, 1, 15), uint32] = add(%x1, %5) /* ty=Tensor[(15, 1, 15), uint32] */;
    %6 = %4.1;
    let %x7: Tensor[(15, 1, 15), float64] = add(%x3, %6) /* ty=Tensor[(15, 1, 15), float64] */;
    ()
  );
  (%x4, %7)
}
/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
has unsupported feature: [fGraph, ]

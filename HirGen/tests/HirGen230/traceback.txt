==========mod==========
#[version = "0.0.5"]
def @func_3739() -> Tensor[(3, 4, 13), float64] {
  %0 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %0.0
}

def @func_4251() -> (Tensor[(3, 4, 13), float64],) {
  %1 = @func_4016() /* ty=(Tensor[(60), float32], Tensor[(3, 4, 13), float64]) */;
  %2 = %1.1;
  (%2,)
}

def @func_4085(%var_4073: Tensor[(2112), float32]) -> (Tensor[(2, 12, 5), float32], Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) {
  %3 = cast(%var_4073, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %4 = reshape(%3, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
  %5 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  %6 = @func_3179() /* ty=Tensor[(14, 3, 6), float64] */;
  %7 = @func_149(%4) /* ty=Tensor[(12, 16, 11), float32] */;
  (%5, %6, %7, %var_4073)
}

def @func_4417() -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(12, 60), int64], Tensor[(12, 60), uint32]) {
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 60), float32] */, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
  %9 = reshape(%8, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
  %10 = @func_2827(%9) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 60), float32] */, dtype="int64") /* ty=Tensor[(1, 60), int64] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 60), float32] */, dtype="int64") /* ty=Tensor[(12, 60), int64] */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %14 = erf(%13) /* ty=Tensor[(12, 60), float32] */;
  %15 = cast(%14, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %16 = cosh(%15) /* ty=Tensor[(12, 60), float32] */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 60), float32] */, dtype="int8") /* ty=Tensor[(1, 60), int8] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 60), float32] */, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
  %19 = multiply(%17, %18) /* ty=Tensor[(12, 60), int8] */;
  %20 = cast(%19, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
  %21 = shape_of(%16, dtype="int32") /* ty=Tensor[(2), int32] */;
  %22 = cast(%16, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %24 = mod(%22, %23) /* ty=Tensor[(12, 60), float64] */;
  %25 = cast(%24, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %26 = log2(%25) /* ty=Tensor[(12, 60), float32] */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 60), float32] */, dtype="uint32") /* ty=Tensor[(12, 60), uint32] */;
  %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(2), int32] */;
  %29 = cast(%26, dtype="uint32") /* ty=Tensor[(12, 60), uint32] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %31 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
  %32 = %10.1;
  %33 = subtract(%11, %12) /* ty=Tensor[(12, 60), int64] */;
  %34 = bitwise_and(%29, %30) /* ty=Tensor[(12, 60), uint32] */;
  (%31, %32, %33, %34)
}

def @func_5131() -> (Tensor[(60), float32],) {
  %35 = @func_4016() /* ty=(Tensor[(60), float32], Tensor[(3, 4, 13), float64]) */;
  %36 = %35.0;
  (%36,)
}

def @func_5410() -> (Tensor[(3, 4, 13), float64],) {
  %37 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %38 = %37.1;
  (%38,)
}

def @func_7041() -> Tensor[(3, 4, 13), bool] {
  %39 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %39.0
}

def @func_7267() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(16, 6, 8), float64]) {
  %40 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %41 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %42 = %41.0;
  %43 = cast(%42, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
  %44 = reshape(%43, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %45 = @func_5576(%44) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(2, 12, 5), float32], Tensor[(60), float32], Tensor[(5, 11, 6), float32], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(16, 6, 8), float64]) */;
  %46 = %40.0;
  %47 = %45.6;
  (%46, %42, %47)
}

def @func_6118(%var_6064: Tensor[(15, 5, 11), float32], %var_6103: float64, %var_6104: Tensor[(165), float64], %var_6110: Tensor[(15, 5, 11), float32]) -> (Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(15, 5, 11), float32], Tensor[(330), float32], float64, Tensor[(165), float64], Tensor[(352, 2), uint16], Tensor[(330, 1), float32], Tensor[(1248), float32], Tensor[(15, 5, 11), uint64]) {
  %48 = cast(%var_6064, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %49 = log2(%48) /* ty=Tensor[(15, 5, 11), float32] */;
  %50 = cast(%49, dtype="float64") /* ty=Tensor[(15, 5, 11), float64] */;
  %51 = atan(%50) /* ty=Tensor[(15, 5, 11), float64] */;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %53 = cast(%var_6103, dtype="float64") /* ty=float64 */;
  %54 = cast(%var_6104, dtype="float64") /* ty=Tensor[(165), float64] */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(352, 2), uint16] */, dtype="uint16") /* ty=Tensor[(352, 2), uint16] */;
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(330, 1), float32] */, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
  %57 = cast(meta[relay.Constant][5] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %58 = reshape(%53, newshape=[]) /* ty=float64 */;
  %59 = reshape(%54, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %60 = reshape(%55, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
  %61 = reshape(%56, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %62 = reshape(%57, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %63 = @func_2624(%58, %59, %60, %61, %62) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
  %64 = cast(%var_6110, dtype="uint64") /* ty=Tensor[(15, 5, 11), uint64] */;
  %65 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%49, dtype="uint64") /* ty=Tensor[(15, 5, 11), uint64] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %68 = @func_5455() /* ty=Tensor[(3, 4, 13), float32] */;
  %69 = @func_3739() /* ty=Tensor[(3, 4, 13), float64] */;
  %70 = acosh(%52) /* ty=Tensor[(15, 5, 11), float32] */;
  %71 = %63.3;
  %72 = multiply(%66, %67) /* ty=Tensor[(15, 5, 11), uint64] */;
  (%68, %69, %70, %71, %var_6103, %var_6104, meta[relay.Constant][3] /* ty=Tensor[(352, 2), uint16] */, meta[relay.Constant][4] /* ty=Tensor[(330, 1), float32] */, meta[relay.Constant][5] /* ty=Tensor[(1248), float32] */, %72)
}

def @func_3590() -> (Tensor[(3, 4, 13), float64],) {
  %73 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  (%73,)
}

def @func_5455() -> Tensor[(3, 4, 13), float32] {
  %74 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %74.1
}

def @func_8274() -> (Tensor[(3, 4, 13), float64],) {
  %75 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %76 = %75.0;
  (%76,)
}

def @func_4444(%var_4436: Tensor[(1248, 1), float32], %var_4437: Tensor[(330), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(16, 6, 13), float64], Tensor[(1248, 1), float32], Tensor[(330), float32]) {
  %77 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %78 = cast(%var_4436, dtype="float32") /* ty=Tensor[(1248, 1), float32] */;
  %79 = cast(%var_4437, dtype="float32") /* ty=Tensor[(330), float32] */;
  %80 = reshape(%78, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float32] */;
  %81 = reshape(%79, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %82 = @func_790(%80, %81) /* ty=(Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) */;
  %83 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
  %84 = %77.1;
  %85 = %82.3;
  (%83, %84, %85, %var_4436, %var_4437)
}

def @func_7959(%var_7948: Tensor[(2, 12, 5), float32]) -> Tensor[(2, 12, 5), bool] {
  %86 = @func_6630() /* ty=(Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */;
  %87 = %86.0;
  %88 = cast(%var_7948, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%87, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%90, %91) /* ty=Tensor[(2, 12, 5), bool] */
}

def @func_7189(%var_7181: int8) -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(16, 13, 12), int8], int8, Tensor[(2496), int8]) {
  %92 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %93 = @func_3713() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %94 = @func_5933() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], Tensor[(2112), float32]) */;
  %95 = cast(%var_7181, dtype="int8") /* ty=int8 */;
  %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(2496), int8] */, dtype="int8") /* ty=Tensor[(2496), int8] */;
  %97 = reshape(%95, newshape=[]) /* ty=int8 */;
  %98 = reshape(%96, newshape=[16, 13, 12]) /* ty=Tensor[(16, 13, 12), int8] */;
  %99 = @func_4813(%97, %98) /* ty=(Tensor[(16, 13, 12), int8], Tensor[(3, 4, 13), float64]) */;
  %100 = %92.0;
  %101 = %93.0;
  %102 = %94.2;
  %103 = %99.0;
  (%100, %101, %102, %103, %var_7181, meta[relay.Constant][6] /* ty=Tensor[(2496), int8] */)
}

def @func_6176(%var_6148: Tensor[(720), float32], %var_6154: Tensor[(768), uint8]) -> (Tensor[(60), float32], float64, Tensor[(720), float32], Tensor[(5, 11, 6), float32], Tensor[(768), uint8], Tensor[(252, 1), float64], Tensor[(2, 1056), float32], Tensor[(3, 4, 13), float64]) {
  %104 = @func_4333() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(60), float32]) */;
  %105 = cast(%var_6148, dtype="float32") /* ty=Tensor[(720), float32] */;
  %106 = reshape(%105, newshape=[3, 16, 15]) /* ty=Tensor[(3, 16, 15), float32] */;
  %107 = @func_5656(%106) /* ty=(Tensor[(3, 16, 15), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(165), float64]) */;
  %108 = cast(%var_6154, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %109 = cast(meta[relay.Constant][7] /* ty=Tensor[(252, 1), float64] */, dtype="float64") /* ty=Tensor[(252, 1), float64] */;
  %110 = cast(%var_6154, dtype="float64") /* ty=Tensor[(768), float64] */;
  %111 = cast(%var_6154, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %112 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 1056), float32] */, dtype="float32") /* ty=Tensor[(2, 1056), float32] */;
  %113 = reshape(%108, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %114 = reshape(%109, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %115 = reshape(%110, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), float64] */;
  %116 = reshape(%111, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %117 = reshape(%112, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %118 = @func_1044(%113, %114, %115, %116, %117) /* ty=(Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) */;
  %119 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %120 = %104.3;
  %121 = %107.2;
  %122 = %118.13;
  %123 = %119.0;
  (%120, %121, %var_6148, %122, %var_6154, meta[relay.Constant][7] /* ty=Tensor[(252, 1), float64] */, meta[relay.Constant][8] /* ty=Tensor[(2, 1056), float32] */, %123)
}

def @func_1776() -> (Tensor[(14, 3, 6), float64],) {
  %124 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %125 = %124.0;
  (%125,)
}

def @func_5013(%var_4981: Tensor[(273, 7), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(273, 7), bool], Tensor[(273, 1), float64]) {
  %126 = @func_3811() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(273, 1), float64], Tensor[(16, 6, 8), bool], Tensor[(3, 4, 13), float64]) */;
  %127 = %126.1;
  %128 = cast(%127, dtype="bool") /* ty=Tensor[(273, 1), bool] */;
  %129 = cast(%var_4981, dtype="bool") /* ty=Tensor[(273, 7), bool] */;
  %130 = cast(%127, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
  %131 = @func_3830() /* ty=Tensor[(3, 4, 13), float64] */;
  %132 = less(%128, %129) /* ty=Tensor[(273, 7), bool] */;
  %133 = asin(%130) /* ty=Tensor[(273, 1), float64] */;
  (%131, %132, %133)
}

def @func_8893() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64]) {
  %134 = @func_5410() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %135 = %134.0;
  %136 = @func_8854() /* ty=Tensor[(14, 3, 6), float64] */;
  (%135, %136)
}

def @func_3315() -> (Tensor[(3, 4, 13), float64],) {
  %137 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  (%137,)
}

def @func_6440() -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) {
  %138 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %139 = %138.0;
  %140 = @func_5288() /* ty=Tensor[(3, 4, 13), float64] */;
  (%139, %140)
}

def @func_726(%var_694: Tensor[(5, 11, 6), float32], %var_705: Tensor[(252), float64]) -> (Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) {
  %141 = cast(%var_694, dtype="float32") /* ty=Tensor[(5, 11, 6), float32] */;
  %142 = cast(%var_705, dtype="float64") /* ty=Tensor[(252), float64] */;
  %143 = reshape(%142, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %144 = @func_640(%143) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %145 = cast(%var_705, dtype="float64") /* ty=Tensor[(252), float64] */;
  %146 = reshape(%145, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %147 = @func_640(%146) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %148 = log(%141) /* ty=Tensor[(5, 11, 6), float32] */;
  %149 = %144.0;
  %150 = %147.0;
  (%148, %149, %var_705, %150)
}

def @func_6607() -> (Tensor[(3, 4, 13), float64],) {
  %151 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %152 = %151.0;
  (%152,)
}

def @func_3713() -> (Tensor[(14, 3, 6), float64],) {
  %153 = @func_2706() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) */;
  %154 = %153.0;
  (%154,)
}

def @func_6291(%var_6272: bool, %var_6273: Tensor[(10, 7, 13), bool]) -> (Tensor[(10, 7, 13), bool],) {
  %155 = cast(%var_6272, dtype="bool") /* ty=bool */;
  %156 = cast(%var_6273, dtype="bool") /* ty=Tensor[(10, 7, 13), bool] */;
  %157 = logical_and(%155, %156) /* ty=Tensor[(10, 7, 13), bool] */;
  (%157,)
}

def @func_4813(%var_4794: int8, %var_4795: Tensor[(16, 13, 12), int8]) -> (Tensor[(16, 13, 12), int8], Tensor[(3, 4, 13), float64]) {
  %158 = cast(%var_4794, dtype="int8") /* ty=int8 */;
  %159 = cast(%var_4795, dtype="int8") /* ty=Tensor[(16, 13, 12), int8] */;
  %160 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %161 = bitwise_and(%158, %159) /* ty=Tensor[(16, 13, 12), int8] */;
  %162 = %160.0;
  (%161, %162)
}

def @func_6950() -> (Tensor[(3, 4, 13), float64],) {
  %163 = @func_3830() /* ty=Tensor[(3, 4, 13), float64] */;
  (%163,)
}

def @func_7667() -> Tensor[(14, 3, 6), float64] {
  %164 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %164.0
}

def @func_3830() -> Tensor[(3, 4, 13), float64] {
  %165 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %165.0
}

def @func_4664() -> (Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) {
  %166 = @func_4625() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %167 = @func_3713() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %168 = %166.0;
  %169 = %167.0;
  (%168, %169)
}

def @func_8097(%var_8068: Tensor[(165), float64], %var_8070: Tensor[(1, 330), float32], %var_8071: Tensor[(1248), float32], %var_8079: Tensor[(273), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], float64, Tensor[(165), float64], Tensor[(704), uint16], Tensor[(1, 330), float32], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(273), float64], Tensor[(22, 5), float64]) {
  %170 = @func_6950() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %171 = cast(1.22999f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %172 = cast(%var_8068, dtype="float64") /* ty=Tensor[(165), float64] */;
  %173 = cast(meta[relay.Constant][9] /* ty=Tensor[(704), uint16] */, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %174 = cast(%var_8070, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %175 = cast(%var_8071, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %176 = reshape(%171, newshape=[]) /* ty=float64 */;
  %177 = reshape(%172, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %178 = reshape(%173, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
  %179 = reshape(%174, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %180 = reshape(%175, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %181 = @func_2624(%176, %177, %178, %179, %180) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
  %182 = cast(%var_8079, dtype="float64") /* ty=Tensor[(273), float64] */;
  %183 = cast(meta[relay.Constant][9] /* ty=Tensor[(704), uint16] */, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %184 = cast(meta[relay.Constant][10] /* ty=Tensor[(22, 5), float64] */, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %185 = reshape(%182, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %186 = reshape(%183, newshape=[704]) /* ty=Tensor[(704), uint16] */;
  %187 = reshape(%184, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %188 = @func_3429(%185, %186, %187) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(7, 3, 13), float64], Tensor[(273), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32], float64, Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(110), float64], Tensor[(2, 12, 5), float32]) */;
  %189 = cast(meta[relay.Constant][10] /* ty=Tensor[(22, 5), float64] */, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %190 = %170.0;
  %191 = %181.0;
  %192 = %188.10;
  %193 = asin(%189) /* ty=Tensor[(22, 5), float64] */;
  (%190, %191, 1.22999f64 /* ty=float64 */, %var_8068, meta[relay.Constant][9] /* ty=Tensor[(704), uint16] */, %var_8070, %var_8071, %192, %var_8079, %193)
}

def @func_8512(%var_8481: float32, %var_8482: Tensor[(2, 10, 11), float32]) -> (Tensor[(2, 10, 11), float32], Tensor[(3, 4, 13), float64]) {
  %194 = cast(%var_8481, dtype="float32") /* ty=float32 */;
  %195 = cast(%var_8482, dtype="float32") /* ty=Tensor[(2, 10, 11), float32] */;
  %196 = power(%194, %195) /* ty=Tensor[(2, 10, 11), float32] */;
  %197 = @func_7868() /* ty=Tensor[(3, 4, 13), float64] */;
  (%196, %197)
}

def @func_7758() -> (Tensor[(2, 12, 5), float32],) {
  %198 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  (%198,)
}

def @func_5933() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], Tensor[(2112), float32]) {
  %199 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %200 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %201 = cast(meta[relay.Constant][11] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %202 = reshape(%201, newshape=[22, 96]) /* ty=Tensor[(22, 96), float32] */;
  %203 = @func_3276(%202) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32]) */;
  %204 = @func_3739() /* ty=Tensor[(3, 4, 13), float64] */;
  %205 = %199.0;
  %206 = %200.1;
  %207 = %203.2;
  (%204, %205, %206, %207, meta[relay.Constant][11] /* ty=Tensor[(2112), float32] */)
}

def @func_2924() -> (Tensor[(14, 3, 6), float64],) {
  %208 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %209 = %208.0;
  (%209,)
}

def @func_2352() -> (Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) {
  %210 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %211 = reshape(%210, newshape=[6, 10]) /* ty=Tensor[(6, 10), float32] */;
  %212 = @func_2271(%211) /* ty=(Tensor[(6, 10), float32], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(5, 11, 6), float32], Tensor[(5, 66), float32], Tensor[(16, 6, 8), bool], Tensor[(768), uint8], Tensor[(2112), float32]) */;
  %213 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  %214 = %212.5;
  (%213, %214, meta[relay.Constant][12] /* ty=Tensor[(60), float32] */)
}

def @func_5656(%var_5644: Tensor[(3, 16, 15), float32]) -> (Tensor[(3, 16, 15), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(165), float64]) {
  %215 = cast(%var_5644, dtype="float32") /* ty=Tensor[(3, 16, 15), float32] */;
  %216 = cast(3.00081f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %217 = cast(meta[relay.Constant][13] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %218 = reshape(%216, newshape=[]) /* ty=float64 */;
  %219 = reshape(%217, newshape=[1, 15, 11]) /* ty=Tensor[(1, 15, 11), float64] */;
  %220 = asin(%215) /* ty=Tensor[(3, 16, 15), float32] */;
  %221 = @func_1551(%218, %219) /* ty=Tensor[(1, 15, 11), float64] */;
  (%220, %221, 3.00081f64 /* ty=float64 */, meta[relay.Constant][13] /* ty=Tensor[(165), float64] */)
}

def @func_790(%var_743: Tensor[(16, 6, 13), float32], %var_763: Tensor[(330), float32]) -> (Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) {
  %222 = cast(%var_763, dtype="float32") /* ty=Tensor[(330), float32] */;
  %223 = cast(meta[relay.Constant][14] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %224 = reshape(%222, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %225 = reshape(%223, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %226 = @func_726(%224, %225) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %227 = %226.2;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(252), float32] */;
  %229 = cast(%var_743, dtype="float32") /* ty=Tensor[(16, 6, 13), float32] */;
  %230 = atan(%229) /* ty=Tensor[(16, 6, 13), float32] */;
  %231 = cast(%230, dtype="float64") /* ty=Tensor[(16, 6, 13), float64] */;
  %232 = exp(%228) /* ty=Tensor[(252), float32] */;
  %233 = atanh(%231) /* ty=Tensor[(16, 6, 13), float64] */;
  (%var_763, meta[relay.Constant][14] /* ty=Tensor[(252), float64] */, %232, %233)
}

def @func_1626() -> (Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) {
  %234 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(3, 4, 13), float64] */;
  %235 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 4, 13), float64] */, dtype="float32") /* ty=Tensor[(3, 4, 13), float32] */;
  %236 = cos(%234) /* ty=Tensor[(3, 4, 13), float64] */;
  %237 = exp(%235) /* ty=Tensor[(3, 4, 13), float32] */;
  (%236, %237)
}

def @func_5288() -> Tensor[(3, 4, 13), float64] {
  @func_2205() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_7535() -> Tensor[(3, 4, 13), float64] {
  %238 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %238.0
}

def @func_2827(%var_2822: Tensor[(15, 4), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) {
  %239 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %240 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %241 = cast(%var_2822, dtype="float32") /* ty=Tensor[(15, 4), float32] */;
  %242 = reshape(%241, newshape=[6, 10]) /* ty=Tensor[(6, 10), float32] */;
  %243 = @func_2271(%242) /* ty=(Tensor[(6, 10), float32], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(5, 11, 6), float32], Tensor[(5, 66), float32], Tensor[(16, 6, 8), bool], Tensor[(768), uint8], Tensor[(2112), float32]) */;
  %244 = %239.0;
  %245 = %240.0;
  %246 = %243.0;
  (%244, %245, %246, %var_2822)
}

def @func_3934(%var_3929: Tensor[(60), float32]) -> (Tensor[(2, 12, 5), float32], Tensor[(15, 4), float32], Tensor[(60), float32]) {
  %247 = cast(%var_3929, dtype="float32") /* ty=Tensor[(60), float32] */;
  %248 = reshape(%247, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
  %249 = @func_2827(%248) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) */;
  %250 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  %251 = %249.3;
  (%250, %251, %var_3929)
}

def @func_3276(%var_3267: Tensor[(22, 96), float32]) -> (Tensor[(3, 4, 13), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32]) {
  %252 = cast(%var_3267, dtype="float32") /* ty=Tensor[(22, 96), float32] */;
  %253 = reshape(%252, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
  %254 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  %255 = @func_149(%253) /* ty=Tensor[(12, 16, 11), float32] */;
  (%254, %255, %var_3267)
}

def @func_7910() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) {
  %256 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %257 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %258 = @func_7535() /* ty=Tensor[(3, 4, 13), float64] */;
  %259 = %256.0;
  %260 = %257.1;
  (%258, %259, %260)
}

def @func_8383() -> Tensor[(3, 4, 13), float64] {
  %261 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %261.0
}

def @func_8815(%var_8805: Tensor[(900), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(15, 12, 5), float32], Tensor[(900), float32]) {
  %262 = @func_4625() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %263 = cast(%var_8805, dtype="float32") /* ty=Tensor[(900), float32] */;
  %264 = reshape(%263, newshape=[15, 12, 5]) /* ty=Tensor[(15, 12, 5), float32] */;
  %265 = @func_5738(%264) /* ty=(Tensor[(15, 12, 5), float32], Tensor[(15, 12, 5), float32]) */;
  %266 = %262.0;
  %267 = %265.1;
  (%266, %267, %var_8805)
}

def @func_6791(%var_6775: Tensor[(2, 13, 14), float32]) -> (Tensor[(2, 13, 14), float32],) {
  %268 = cast(%var_6775, dtype="float32") /* ty=Tensor[(2, 13, 14), float32] */;
  %269 = atanh(%268) /* ty=Tensor[(2, 13, 14), float32] */;
  (%269,)
}

def @func_2205() -> Tensor[(3, 4, 13), float64] {
  %270 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %270.0
}

def @func_2271(%var_2222: Tensor[(6, 10), float32]) -> (Tensor[(6, 10), float32], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(5, 11, 6), float32], Tensor[(5, 66), float32], Tensor[(16, 6, 8), bool], Tensor[(768), uint8], Tensor[(2112), float32]) {
  %271 = cast(%var_2222, dtype="float32") /* ty=Tensor[(6, 10), float32] */;
  %272 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %273 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %274 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 66), float32] */, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %275 = %272.0;
  %276 = cast(%275, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
  %277 = reshape(%274, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %278 = reshape(%276, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %279 = @func_726(%277, %278) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %280 = cast(meta[relay.Constant][17] /* ty=Tensor[(768), uint8] */, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %281 = cast(%275, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
  %282 = cast(meta[relay.Constant][17] /* ty=Tensor[(768), uint8] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %283 = cast(meta[relay.Constant][17] /* ty=Tensor[(768), uint8] */, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %284 = cast(meta[relay.Constant][18] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %285 = reshape(%280, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %286 = reshape(%281, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %287 = reshape(%282, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), float64] */;
  %288 = reshape(%283, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %289 = reshape(%284, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %290 = @func_1044(%285, %286, %287, %288, %289) /* ty=(Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) */;
  %291 = log(%271) /* ty=Tensor[(6, 10), float32] */;
  %292 = %273.0;
  %293 = %279.0;
  %294 = %290.5;
  (%291, %275, %292, %293, meta[relay.Constant][16] /* ty=Tensor[(5, 66), float32] */, %294, meta[relay.Constant][17] /* ty=Tensor[(768), uint8] */, meta[relay.Constant][18] /* ty=Tensor[(2112), float32] */)
}

def @func_7121() -> (Tensor[(14, 3, 6), float64],) {
  %295 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
  (%295,)
}

def @func_8334() -> Tensor[(3, 4, 13), float32] {
  %296 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %296.1
}

def @func_1660() -> (Tensor[(14, 3, 6), float64],) {
  %297 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
  %298 = tan(%297) /* ty=Tensor[(14, 3, 6), float64] */;
  (%298,)
}

def @func_7647(%var_7621: Tensor[(1248), float32]) -> (Tensor[(3, 4, 13), float32], Tensor[(330), float32], Tensor[(704), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(3, 4, 13), float64]) {
  %299 = cast(meta[relay.Constant][20] /* ty=Tensor[(704), uint16] */, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %300 = cast(meta[relay.Constant][20] /* ty=Tensor[(704), uint16] */, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %301 = cast(meta[relay.Constant][21] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %302 = cast(%var_7621, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %303 = reshape(%299, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %304 = reshape(%300, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %305 = reshape(%301, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %306 = reshape(%302, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %307 = @func_1097(%303, %304, %305, %306) /* ty=(Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) */;
  %308 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %309 = @func_3597() /* ty=Tensor[(3, 4, 13), float32] */;
  %310 = %307.2;
  %311 = %308.1;
  (%309, %310, meta[relay.Constant][20] /* ty=Tensor[(704), uint16] */, meta[relay.Constant][21] /* ty=Tensor[(330), float32] */, %var_7621, %311)
}

def @func_6512(%var_6476: Tensor[(16, 7, 11), float32]) -> (Tensor[(16, 7, 11), bool], Tensor[(16, 7, 11), int64]) {
  %312 = cast(%var_6476, dtype="float32") /* ty=Tensor[(16, 7, 11), float32] */;
  %313 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(16, 7, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 7, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 11), float32] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %316 = mod(%314, %315) /* ty=Tensor[(16, 7, 11), float32] */;
  %317 = cast(%316, dtype="bool") /* ty=Tensor[(16, 7, 11), bool] */;
  %318 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(16, 7, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 7, 11), float32] */, dtype="bool") /* ty=Tensor[(16, 7, 11), bool] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %321 = cast(%var_6476, dtype="uint16") /* ty=Tensor[(16, 7, 11), uint16] */;
  %322 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%316, dtype="uint16") /* ty=Tensor[(16, 7, 11), uint16] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %325 = bitwise_xor(%323, %324) /* ty=Tensor[(16, 7, 11), uint16] */;
  %326 = cast(%325, dtype="int64") /* ty=Tensor[(16, 7, 11), int64] */;
  %327 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%316, dtype="int64") /* ty=Tensor[(16, 7, 11), int64] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %330 = less(%319, %320) /* ty=Tensor[(16, 7, 11), bool] */;
  %331 = multiply(%328, %329) /* ty=Tensor[(16, 7, 11), int64] */;
  (%330, %331)
}

def @func_7743() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(3, 4, 13), float32]) {
  %332 = @func_6630() /* ty=(Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */;
  %333 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
  %334 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %335 = %332.1;
  %336 = %333.2;
  %337 = %334.1;
  (%335, %336, %337)
}

def @func_8706(%var_8659: Tensor[(11, 15, 16), uint8], %var_8669: float64, %var_8670: Tensor[(165), float64], %var_8673: Tensor[(1248), float32]) -> (Tensor[(2, 352), uint16], float64, Tensor[(165), float64], Tensor[(1, 704), uint16], Tensor[(1248), float32], Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(60), float32], Tensor[(330), bool], Tensor[(11, 15, 16), uint32]) {
  %338 = cast(%var_8669, dtype="float64") /* ty=float64 */;
  %339 = cast(%var_8670, dtype="float64") /* ty=Tensor[(165), float64] */;
  %340 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 704), uint16] */, dtype="uint16") /* ty=Tensor[(1, 704), uint16] */;
  %341 = cast(meta[relay.Constant][24] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %342 = cast(%var_8673, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %343 = reshape(%338, newshape=[]) /* ty=float64 */;
  %344 = reshape(%339, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %345 = reshape(%340, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
  %346 = reshape(%341, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %347 = reshape(%342, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %348 = @func_2624(%343, %344, %345, %346, %347) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
  %349 = @func_4532() /* ty=(Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %350 = cast(meta[relay.Constant][25] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %351 = reshape(%350, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %352 = @func_640(%351) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %353 = %352.0;
  %354 = cast(%353, dtype="float64") /* ty=Tensor[(6, 3, 14), float64] */;
  %355 = reshape(%354, newshape=[126, 2]) /* ty=Tensor[(126, 2), float64] */;
  %356 = @func_2436(%355) /* ty=(Tensor[(60), float32], Tensor[(6, 3, 14), float64], Tensor[(126, 2), uint64], Tensor[(2, 12, 5), float32]) */;
  %357 = cast(meta[relay.Constant][26] /* ty=Tensor[(330), float32] */, dtype="bool") /* ty=Tensor[(330), bool] */;
  %358 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(330), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %359 = cast(meta[relay.Constant][24] /* ty=Tensor[(330), float32] */, dtype="bool") /* ty=Tensor[(330), bool] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?), bool] */;
  %361 = cast(%var_8659, dtype="uint8") /* ty=Tensor[(11, 15, 16), uint8] */;
  %362 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(11, 15, 16), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 15, 16), uint8] */, dtype="uint8") /* ty=Tensor[(11, 15, 16), uint8] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %365 = bitwise_xor(%363, %364) /* ty=Tensor[(11, 15, 16), uint8] */;
  %366 = cast(%365, dtype="float32") /* ty=Tensor[(11, 15, 16), float32] */;
  %367 = atan(%366) /* ty=Tensor[(11, 15, 16), float32] */;
  %368 = cast(%365, dtype="uint32") /* ty=Tensor[(11, 15, 16), uint32] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%367, dtype="uint32") /* ty=Tensor[(11, 15, 16), uint32] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %372 = %348.4;
  %373 = %349.2;
  %374 = %356.0;
  %375 = not_equal(%359, %360) /* ty=Tensor[(330), bool] */;
  %376 = add(%370, %371) /* ty=Tensor[(11, 15, 16), uint32] */;
  (%372, %var_8669, %var_8670, meta[relay.Constant][23] /* ty=Tensor[(1, 704), uint16] */, %var_8673, %373, %353, meta[relay.Constant][25] /* ty=Tensor[(252), float64] */, %374, %375, %376)
}

def @func_4158(%var_4140: Tensor[(252), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64]) {
  %377 = cast(%var_4140, dtype="float64") /* ty=Tensor[(252), float64] */;
  %378 = reshape(%377, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %379 = @func_640(%378) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %380 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  %381 = %379.0;
  (%380, %381, %var_4140)
}

def @func_2640() -> Tensor[(14, 3, 6), float64] {
  %382 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %382.0
}

def @func_3154(%var_3147: Tensor[(273), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(7, 3, 13), float64], Tensor[(273), float64]) {
  %383 = @func_2706() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) */;
  %384 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %385 = cast(%var_3147, dtype="float64") /* ty=Tensor[(273), float64] */;
  %386 = cast(%var_3147, dtype="float64") /* ty=Tensor[(273), float64] */;
  %387 = reshape(%385, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %388 = reshape(%386, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %389 = @func_1283(%387, %388) /* ty=(Tensor[(7, 3, 13), float64],) */;
  %390 = %383.0;
  %391 = %384.1;
  %392 = %389.0;
  (%390, %391, %392, %var_3147)
}

def @func_8854() -> Tensor[(14, 3, 6), float64] {
  @func_2386() /* ty=Tensor[(14, 3, 6), float64] */
}

def @func_1783() -> (Tensor[(14, 3, 6), float64],) {
  %393 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %394 = %393.0;
  (%394,)
}

def @func_5468() -> (Tensor[(3, 4, 13), bool],) {
  %395 = @func_4712() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %396 = %395.0;
  (%396,)
}

def @func_5872() -> (Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32]) {
  %397 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %398 = %397.0;
  %399 = @func_5619() /* ty=Tensor[(16, 6, 8), float32] */;
  (%398, %399)
}

def @func_5200() -> (Tensor[(16, 6, 8), bool],) {
  %400 = @func_3811() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(273, 1), float64], Tensor[(16, 6, 8), bool], Tensor[(3, 4, 13), float64]) */;
  %401 = %400.2;
  (%401,)
}

def @func_6652() -> (Tensor[(3, 4, 13), bool], Tensor[(14, 3, 6), float64]) {
  %402 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %403 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %404 = %402.0;
  %405 = %403.0;
  (%404, %405)
}

def @func_7868() -> Tensor[(3, 4, 13), float64] {
  %406 = @func_6607() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %406.0
}

def @func_3429(%var_3384: Tensor[(273), float64], %var_3410: Tensor[(704), uint16], %var_3411: Tensor[(110), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(7, 3, 13), float64], Tensor[(273), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32], float64, Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(110), float64], Tensor[(2, 12, 5), float32]) {
  %407 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
  %408 = cast(%var_3384, dtype="float64") /* ty=Tensor[(273), float64] */;
  %409 = reshape(%408, newshape=[273, 1]) /* ty=Tensor[(273, 1), float64] */;
  %410 = @func_2544(%409) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(273, 1), float64]) */;
  %411 = cast(meta[relay.Constant][28] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %412 = cast(-6.87558f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %413 = reshape(%411, newshape=[22, 96]) /* ty=Tensor[(22, 96), float32] */;
  %414 = reshape(%412, newshape=[]) /* ty=float64 */;
  %415 = @func_1734(%413, %414) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(1, 165), float64]) */;
  %416 = cast(%var_3384, dtype="float64") /* ty=Tensor[(273), float64] */;
  %417 = reshape(%416, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %418 = @func_3154(%417) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(7, 3, 13), float64], Tensor[(273), float64]) */;
  %419 = cast(%var_3410, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %420 = cast(%var_3411, dtype="float64") /* ty=Tensor[(110), float64] */;
  %421 = reshape(%419, newshape=[8, 88]) /* ty=Tensor[(8, 88), uint16] */;
  %422 = reshape(%420, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float64] */;
  %423 = @func_3113(%421, %422) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(165), uint64], Tensor[(165, 1), float64], Tensor[(8, 88), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(1, 10, 11), float32]) */;
  %424 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
  %425 = %407.0;
  %426 = %410.1;
  %427 = %415.1;
  %428 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
  %429 = %418.2;
  %430 = %423.5;
  %431 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  (%424, %425, %426, %var_3384, %427, meta[relay.Constant][28] /* ty=Tensor[(2112), float32] */, -6.87558f64 /* ty=float64 */, %428, %429, %430, %var_3410, %var_3411, %431)
}

def @main(%var_8896: Tensor[(6, 7, 14), uint8], %var_8902: Tensor[(6, 7, 14), uint8]) -> (Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), float64]) {
  %432 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 1, 14), uint8] */, dtype="uint8") /* ty=Tensor[(6, 1, 14), uint8] */;
  %433 = cast(%var_8896, dtype="uint8") /* ty=Tensor[(6, 7, 14), uint8] */;
  %434 = bitwise_xor(%432, %433) /* ty=Tensor[(6, 7, 14), uint8] */;
  %435 = cast(%var_8902, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%434, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %439 = cast(%434, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %440 = logical_and(%437, %438) /* ty=Tensor[(6, 7, 14), bool] */;
  %441 = log2(%439) /* ty=Tensor[(6, 7, 14), float64] */;
  (%440, %441)
}

def @func_3009(%var_2995: Tensor[(3, 4, 13), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), bool], Tensor[(3, 4, 13), uint16]) {
  %442 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %443 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %444 = %443.0;
  %445 = cast(%var_2995, dtype="bool") /* ty=Tensor[(3, 4, 13), bool] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%444, dtype="bool") /* ty=Tensor[(3, 4, 13), bool] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %449 = cast(%444, dtype="uint16") /* ty=Tensor[(3, 4, 13), uint16] */;
  %450 = shape_of(%var_2995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%var_2995, dtype="uint16") /* ty=Tensor[(3, 4, 13), uint16] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %453 = %442.0;
  %454 = logical_and(%447, %448) /* ty=Tensor[(3, 4, 13), bool] */;
  %455 = left_shift(%451, %452) /* ty=Tensor[(3, 4, 13), uint16] */;
  (%453, %454, %455)
}

def @func_640(%var_635: Tensor[(6, 3, 14), float64]) -> (Tensor[(6, 3, 14), float64],) {
  %456 = cast(%var_635, dtype="float64") /* ty=Tensor[(6, 3, 14), float64] */;
  %457 = exp(%456) /* ty=Tensor[(6, 3, 14), float64] */;
  (%457,)
}

def @func_1283(%var_1271: Tensor[(7, 3, 13), float64], %var_1272: Tensor[(7, 3, 13), float64]) -> (Tensor[(7, 3, 13), float64],) {
  %458 = cast(%var_1272, dtype="float64") /* ty=Tensor[(7, 3, 13), float64] */;
  %459 = shape_of(%var_1271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%var_1271, dtype="float64") /* ty=Tensor[(7, 3, 13), float64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %462 = mod(%460, %461) /* ty=Tensor[(7, 3, 13), float64] */;
  (%462,)
}

def @func_3811() -> (Tensor[(14, 3, 6), float64], Tensor[(273, 1), float64], Tensor[(16, 6, 8), bool], Tensor[(3, 4, 13), float64]) {
  %463 = @func_2924() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %464 = @func_3646() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) */;
  %465 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
  %466 = %463.0;
  %467 = %464.2;
  %468 = %465.1;
  %469 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  (%466, %467, %468, %469)
}

def @func_8128() -> (Tensor[(3, 4, 13), bool],) {
  %470 = @func_4712() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %471 = %470.0;
  (%471,)
}

def @func_6743(%var_6686: Tensor[(9, 2, 9), bool], %var_6687: Tensor[(9, 2, 9), bool]) -> (Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), float64]) {
  %472 = cast(%var_6687, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
  %473 = shape_of(%var_6686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_6686, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %476 = cast(%var_6686, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
  %477 = shape_of(%var_6687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%var_6687, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = cast(%var_6687, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
  %481 = shape_of(%var_6686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%var_6686, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %484 = cast(%var_6686, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
  %485 = shape_of(%var_6687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%var_6687, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %488 = logical_or(%474, %475) /* ty=Tensor[(9, 2, 9), bool] */;
  %489 = less(%478, %479) /* ty=Tensor[(9, 2, 9), bool] */;
  %490 = equal(%482, %483) /* ty=Tensor[(9, 2, 9), bool] */;
  %491 = divide(%486, %487) /* ty=Tensor[(9, 2, 9), float64] */;
  (%488, %489, %490, %491)
}

def @func_6360(%var_6352: Tensor[(15, 11, 9), float32]) -> (Tensor[(15, 11, 9), bool],) {
  %492 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(15, 11, 9), bool] */;
  %493 = shape_of(%var_6352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%var_6352, dtype="bool") /* ty=Tensor[(15, 11, 9), bool] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %496 = less_equal(%494, %495) /* ty=Tensor[(15, 11, 9), bool] */;
  (%496,)
}

def @func_7516() -> (Tensor[(2112), float32], Tensor[(2, 12, 5), float32], Tensor[(60), float32]) {
  %497 = @func_5933() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], Tensor[(2112), float32]) */;
  %498 = cast(meta[relay.Constant][31] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %499 = reshape(%498, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %500 = @func_3934(%499) /* ty=(Tensor[(2, 12, 5), float32], Tensor[(15, 4), float32], Tensor[(60), float32]) */;
  %501 = %497.4;
  %502 = %500.0;
  (%501, %502, meta[relay.Constant][31] /* ty=Tensor[(60), float32] */)
}

def @func_5145() -> (Tensor[(14, 3, 6), float64],) {
  %503 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %504 = %503.0;
  (%504,)
}

def @func_6668() -> (Tensor[(60), float32], Tensor[(252), float64], Tensor[(12, 60), float32]) {
  %505 = cast(meta[relay.Constant][32] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %506 = reshape(%505, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %507 = @func_5576(%506) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(2, 12, 5), float32], Tensor[(60), float32], Tensor[(5, 11, 6), float32], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(16, 6, 8), float64]) */;
  %508 = @func_4417() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(12, 60), int64], Tensor[(12, 60), uint32]) */;
  %509 = %508.3;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
  %511 = atan(%510) /* ty=Tensor[(12, 60), float64] */;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %513 = %507.2;
  %514 = cos(%512) /* ty=Tensor[(12, 60), float32] */;
  (%513, meta[relay.Constant][32] /* ty=Tensor[(252), float64] */, %514)
}

def @func_8302() -> (Tensor[(14, 3, 6), float64],) {
  %515 = @func_8194() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %516 = %515.0;
  (%516,)
}

def @func_1879() -> Tensor[(2, 12, 5), float32] {
  %517 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
  exp(%517) /* ty=Tensor[(2, 12, 5), float32] */
}

def @func_8171(%var_8151: Tensor[(5, 13, 6), int32], %var_8152: Tensor[(5, 13, 6), int32], %var_8169: Tensor[(252), float64]) -> (Tensor[(5, 13, 6), int32], Tensor[(3, 4, 13), float64], Tensor[(5, 13, 6), bool], Tensor[(126, 2), uint64], Tensor[(252), float64]) {
  %518 = cast(%var_8152, dtype="int32") /* ty=Tensor[(5, 13, 6), int32] */;
  %519 = shape_of(%var_8151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%var_8151, dtype="int32") /* ty=Tensor[(5, 13, 6), int32] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %522 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %523 = cast(%var_8151, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %524 = shape_of(%var_8152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%var_8152, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %527 = cast(%var_8169, dtype="float64") /* ty=Tensor[(252), float64] */;
  %528 = reshape(%527, newshape=[126, 2]) /* ty=Tensor[(126, 2), float64] */;
  %529 = @func_2436(%528) /* ty=(Tensor[(60), float32], Tensor[(6, 3, 14), float64], Tensor[(126, 2), uint64], Tensor[(2, 12, 5), float32]) */;
  %530 = left_shift(%520, %521) /* ty=Tensor[(5, 13, 6), int32] */;
  %531 = %522.0;
  %532 = logical_or(%525, %526) /* ty=Tensor[(5, 13, 6), bool] */;
  %533 = %529.2;
  (%530, %531, %532, %533, %var_8169)
}

def @func_8633() -> (Tensor[(14, 3, 6), float64],) {
  %534 = @func_2706() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) */;
  %535 = %534.1;
  (%535,)
}

def @func_3646() -> (Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) {
  %536 = @func_3563() /* ty=(Tensor[(2, 12, 5), float32],) */;
  %537 = %536.0;
  %538 = cast(%537, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %539 = cast(meta[relay.Constant][34] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %540 = reshape(%539, newshape=[273, 1]) /* ty=Tensor[(273, 1), float64] */;
  %541 = @func_2544(%540) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(273, 1), float64]) */;
  %542 = sigmoid(%538) /* ty=Tensor[(2, 12, 5), float64] */;
  %543 = @func_3597() /* ty=Tensor[(3, 4, 13), float32] */;
  %544 = %541.2;
  (%542, %543, %544, meta[relay.Constant][34] /* ty=Tensor[(273), float64] */)
}

def @func_5083() -> (Tensor[(14, 3, 6), float64],) {
  %545 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %546 = %545.0;
  (%546,)
}

def @func_2544(%var_2534: Tensor[(273, 1), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(273, 1), float64]) {
  %547 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %548 = cast(%var_2534, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
  %549 = cast(%var_2534, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
  %550 = reshape(%548, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %551 = reshape(%549, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %552 = @func_1283(%550, %551) /* ty=(Tensor[(7, 3, 13), float64],) */;
  %553 = %547.0;
  %554 = %552.0;
  (%553, %554, %var_2534)
}

def @func_3885(%var_3856: Tensor[(330), float32]) -> (Tensor[(273, 1), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(330), float32], Tensor[(252), float32], Tensor[(3, 4, 13), float64]) {
  %555 = @func_3646() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) */;
  %556 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %557 = cast(%var_3856, dtype="float32") /* ty=Tensor[(330), float32] */;
  %558 = %556.0;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
  %560 = reshape(%557, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %561 = reshape(%559, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %562 = @func_726(%560, %561) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %563 = %562.2;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(252), float32] */;
  %565 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %566 = %555.2;
  %567 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
  %568 = sqrt(%564) /* ty=Tensor[(252), float32] */;
  %569 = %565.0;
  (%566, %558, %567, %var_3856, %568, %569)
}

def @func_2624(%var_2581: float64, %var_2582: Tensor[(165), float64], %var_2599: Tensor[(2, 352), uint16], %var_2600: Tensor[(330), float32], %var_2601: Tensor[(1248), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) {
  %570 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %571 = cast(%var_2581, dtype="float64") /* ty=float64 */;
  %572 = cast(%var_2582, dtype="float64") /* ty=Tensor[(165), float64] */;
  %573 = reshape(%571, newshape=[]) /* ty=float64 */;
  %574 = reshape(%572, newshape=[1, 15, 11]) /* ty=Tensor[(1, 15, 11), float64] */;
  %575 = @func_1551(%573, %574) /* ty=Tensor[(1, 15, 11), float64] */;
  %576 = cast(%var_2582, dtype="uint32") /* ty=Tensor[(165), uint32] */;
  %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%575, dtype="uint32") /* ty=Tensor[(1, 15, 11), uint32] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %580 = cast(%var_2582, dtype="uint64") /* ty=Tensor[(165), uint64] */;
  %581 = cast(%var_2581, dtype="uint64") /* ty=uint64 */;
  %582 = cast(%var_2599, dtype="uint16") /* ty=Tensor[(2, 352), uint16] */;
  %583 = cast(%var_2599, dtype="uint16") /* ty=Tensor[(2, 352), uint16] */;
  %584 = cast(%var_2600, dtype="float32") /* ty=Tensor[(330), float32] */;
  %585 = cast(%var_2601, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %586 = reshape(%582, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %587 = reshape(%583, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %588 = reshape(%584, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %589 = reshape(%585, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %590 = @func_1097(%586, %587, %588, %589) /* ty=(Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) */;
  %591 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %592 = cast(%var_2599, dtype="uint16") /* ty=Tensor[(2, 352), uint16] */;
  %593 = cast(%var_2599, dtype="uint16") /* ty=Tensor[(2, 352), uint16] */;
  %594 = cast(%var_2600, dtype="float32") /* ty=Tensor[(330), float32] */;
  %595 = cast(%var_2601, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %596 = reshape(%592, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %597 = reshape(%593, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %598 = reshape(%594, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %599 = reshape(%595, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %600 = @func_1097(%596, %597, %598, %599) /* ty=(Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) */;
  %601 = cast(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %602 = reshape(%601, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
  %603 = %570.0;
  %604 = bitwise_and(%578, %579) /* ty=Tensor[(?, 15, 11), uint32] */;
  %605 = logical_xor(%580, %581) /* ty=Tensor[(165), uint64] */;
  %606 = %590.2;
  %607 = %591.0;
  %608 = %600.0;
  %609 = @func_149(%602) /* ty=Tensor[(12, 16, 11), float32] */;
  (%603, %604, %605, %606, %var_2599, %var_2600, %var_2601, %607, %608, %609, meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */)
}

def @func_3486() -> (Tensor[(3, 4, 13), float64],) {
  %610 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %611 = %610.0;
  (%611,)
}

def @func_4185() -> (Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) {
  %612 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %613 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %614 = %612.0;
  %615 = %613.0;
  (%614, %615)
}

def @func_2706() -> (Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) {
  %616 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %617 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
  %618 = %616.0;
  (%617, %618)
}

def @func_7834(%var_7788: Tensor[(10, 15, 11), float64], %var_7789: Tensor[(10, 15, 11), float64], %var_7827: Tensor[(10, 15, 11), float64]) -> (Tensor[(10, 15, 11), float64], Tensor[(2, 15, 4), int64], Tensor[(120), int64], Tensor[(10, 15, 11), uint16], Tensor[(3, 4, 13), float64]) {
  %619 = cast(%var_7789, dtype="float64") /* ty=Tensor[(10, 15, 11), float64] */;
  %620 = shape_of(%var_7788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%var_7788, dtype="float64") /* ty=Tensor[(10, 15, 11), float64] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %623 = cast(meta[relay.Constant][36] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %624 = cast(meta[relay.Constant][36] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %625 = reshape(%623, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), int64] */;
  %626 = reshape(%624, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), int64] */;
  %627 = @func_7345(%625, %626) /* ty=(Tensor[(2, 15, 4), int64], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float32]) */;
  %628 = cast(%var_7827, dtype="uint16") /* ty=Tensor[(10, 15, 11), uint16] */;
  %629 = shape_of(%var_7788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%var_7788, dtype="uint16") /* ty=Tensor[(10, 15, 11), uint16] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %632 = @func_4251() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %633 = floor_divide(%621, %622) /* ty=Tensor[(10, 15, 11), float64] */;
  %634 = %627.0;
  %635 = subtract(%630, %631) /* ty=Tensor[(10, 15, 11), uint16] */;
  %636 = %632.0;
  (%633, %634, meta[relay.Constant][36] /* ty=Tensor[(120), int64] */, %635, %636)
}

def @func_8007() -> (Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), float32]) {
  %637 = @func_6440() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) */;
  %638 = %637.1;
  %639 = @func_5619() /* ty=Tensor[(16, 6, 8), float32] */;
  (%638, %639)
}

def @func_1044(%var_886: Tensor[(16, 6, 8), uint8], %var_908: Tensor[(252), float64], %var_936: Tensor[(16, 6, 8), float64], %var_943: Tensor[(16, 6, 8), uint8], %var_968: Tensor[(2112), float32]) -> (Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) {
  %640 = cast(meta[relay.Constant][37] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %641 = cast(%var_908, dtype="float64") /* ty=Tensor[(252), float64] */;
  %642 = reshape(%640, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %643 = reshape(%641, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %644 = @func_726(%642, %643) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %645 = cast(meta[relay.Constant][37] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %646 = cast(%var_908, dtype="float64") /* ty=Tensor[(252), float64] */;
  %647 = reshape(%645, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %648 = reshape(%646, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %649 = @func_726(%647, %648) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %650 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 6, 8), uint8] */, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %651 = log2(%650) /* ty=Tensor[(16, 6, 8), float64] */;
  %652 = cast(%var_936, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%651, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %656 = cast(meta[relay.Constant][37] /* ty=Tensor[(330), float32] */, dtype="float64") /* ty=Tensor[(330), float64] */;
  %657 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 6, 8), uint8] */, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
  %658 = shape_of(%var_886, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%var_886, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %661 = bitwise_xor(%659, %660) /* ty=Tensor[(16, 6, 8), uint8] */;
  %662 = cast(%var_943, dtype="bool") /* ty=Tensor[(16, 6, 8), bool] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%661, dtype="bool") /* ty=Tensor[(16, 6, 8), bool] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %666 = %644.2;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(252), float64] */;
  %668 = reshape(%667, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %669 = @func_640(%668) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %670 = cast(%var_968, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %671 = reshape(%670, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
  %672 = cast(%var_968, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %673 = reshape(%672, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
  %674 = @func_149(%673) /* ty=Tensor[(12, 16, 11), float32] */;
  %675 = cast(%674, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
  %676 = shape_of(%var_968, dtype="int32") /* ty=Tensor[(1), int32] */;
  %677 = cast(%var_968, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?), bool] */;
  %679 = cast(meta[relay.Constant][39] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %680 = cast(meta[relay.Constant][37] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %681 = reshape(%679, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float32] */;
  %682 = reshape(%680, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %683 = @func_790(%681, %682) /* ty=(Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) */;
  %684 = cast(%var_943, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
  %685 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%651, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %688 = cast(meta[relay.Constant][39] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %689 = tan(%656) /* ty=Tensor[(330), float64] */;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(330), float32] */;
  %691 = reshape(%688, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float32] */;
  %692 = reshape(%690, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %693 = @func_790(%691, %692) /* ty=(Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) */;
  %694 = cast(meta[relay.Constant][37] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %695 = %683.2;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(252), float64] */;
  %697 = reshape(%694, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %698 = reshape(%696, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %699 = @func_726(%697, %698) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %700 = %649.2;
  %701 = add(%654, %655) /* ty=Tensor[(16, 6, 8), uint8] */;
  %702 = greater_equal(%664, %665) /* ty=Tensor[(16, 6, 8), bool] */;
  %703 = %669.0;
  %704 = @func_149(%671) /* ty=Tensor[(12, 16, 11), float32] */;
  %705 = less_equal(%677, %678) /* ty=Tensor[(2112), bool] */;
  %706 = power(%686, %687) /* ty=Tensor[(16, 6, 8), float32] */;
  %707 = %693.3;
  %708 = %699.0;
  (%666, %var_908, %700, %701, %689, %702, %703, %704, %705, %695, meta[relay.Constant][39] /* ty=Tensor[(1248), float32] */, %706, %707, %708)
}

def @func_7558() -> Tensor[(3, 4, 13), float64] {
  %709 = @func_7535() /* ty=Tensor[(3, 4, 13), float64] */;
  %710 = cast(%709, dtype="float64") /* ty=Tensor[(3, 4, 13), float64] */;
  sinh(%710) /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_5836(%var_5766: Tensor[(11, 16, 6), float32], %var_5767: Tensor[(11, 16, 6), float32], %var_5788: Tensor[(252), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(11, 16, 6), uint32], Tensor[(3, 4, 13), float32], Tensor[(16, 6, 8), float32], Tensor[(3, 4, 13), float64]) {
  %711 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %712 = cast(%var_5788, dtype="float64") /* ty=Tensor[(252), float64] */;
  %713 = reshape(%712, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %714 = @func_640(%713) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %715 = cast(%var_5767, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
  %716 = shape_of(%var_5766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%var_5766, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %719 = greater_equal(%717, %718) /* ty=Tensor[(11, 16, 6), bool] */;
  %720 = cast(%719, dtype="uint32") /* ty=Tensor[(11, 16, 6), uint32] */;
  %721 = shape_of(%var_5766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%var_5766, dtype="uint32") /* ty=Tensor[(11, 16, 6), uint32] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %724 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %725 = %724.1;
  %726 = cast(%725, dtype="float32") /* ty=Tensor[(3, 4, 13), float32] */;
  %727 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %728 = %711.0;
  %729 = %714.0;
  %730 = bitwise_xor(%722, %723) /* ty=Tensor[(11, 16, 6), uint32] */;
  %731 = log10(%726) /* ty=Tensor[(3, 4, 13), float32] */;
  %732 = @func_5619() /* ty=Tensor[(16, 6, 8), float32] */;
  %733 = %727.0;
  (%728, %729, %var_5788, %730, %731, %732, %733)
}

def @func_5738(%var_5726: Tensor[(15, 12, 5), float32]) -> (Tensor[(15, 12, 5), float32], Tensor[(15, 12, 5), float32]) {
  %734 = cast(%var_5726, dtype="float32") /* ty=Tensor[(15, 12, 5), float32] */;
  %735 = cast(%var_5726, dtype="float32") /* ty=Tensor[(15, 12, 5), float32] */;
  %736 = asinh(%735) /* ty=Tensor[(15, 12, 5), float32] */;
  %737 = cast(%736, dtype="float32") /* ty=Tensor[(15, 12, 5), float32] */;
  %738 = log2(%734) /* ty=Tensor[(15, 12, 5), float32] */;
  %739 = tan(%737) /* ty=Tensor[(15, 12, 5), float32] */;
  (%738, %739)
}

def @func_8194() -> (Tensor[(14, 3, 6), float64],) {
  %740 = @func_3713() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %741 = %740.0;
  (%741,)
}

def @func_2436(%var_2419: Tensor[(126, 2), float64]) -> (Tensor[(60), float32], Tensor[(6, 3, 14), float64], Tensor[(126, 2), uint64], Tensor[(2, 12, 5), float32]) {
  %742 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
  %743 = cast(meta[relay.Constant][40] /* ty=Tensor[(126, 2), float64] */, dtype="float64") /* ty=Tensor[(126, 2), float64] */;
  %744 = reshape(%743, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %745 = @func_640(%744) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %746 = cast(%var_2419, dtype="uint64") /* ty=Tensor[(126, 2), uint64] */;
  %747 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(126, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %748 = cast(meta[relay.Constant][40] /* ty=Tensor[(126, 2), float64] */, dtype="uint64") /* ty=Tensor[(126, 2), uint64] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %750 = %742.2;
  %751 = %745.0;
  %752 = add(%748, %749) /* ty=Tensor[(126, 2), uint64] */;
  %753 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  (%750, %751, %752, %753)
}

def @func_4925(%var_4908: Tensor[(110), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(1248), float32], Tensor[(704, 1), uint16], Tensor[(110), float64]) {
  %754 = @func_4532() /* ty=(Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %755 = cast(meta[relay.Constant][41] /* ty=Tensor[(704, 1), uint16] */, dtype="uint16") /* ty=Tensor[(704, 1), uint16] */;
  %756 = cast(%var_4908, dtype="float64") /* ty=Tensor[(110), float64] */;
  %757 = reshape(%755, newshape=[8, 88]) /* ty=Tensor[(8, 88), uint16] */;
  %758 = reshape(%756, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float64] */;
  %759 = @func_3113(%757, %758) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(165), uint64], Tensor[(165, 1), float64], Tensor[(8, 88), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(1, 10, 11), float32]) */;
  %760 = %754.2;
  %761 = %759.5;
  (%760, %761, meta[relay.Constant][41] /* ty=Tensor[(704, 1), uint16] */, %var_4908)
}

def @func_6255(%var_6248: Tensor[(2, 12, 5), float32]) -> Tensor[(2, 12, 5), bool] {
  %762 = @func_3563() /* ty=(Tensor[(2, 12, 5), float32],) */;
  %763 = %762.0;
  %764 = cast(%var_6248, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%766, %767) /* ty=Tensor[(2, 12, 5), bool] */
}

def @func_2099() -> (Tensor[(3, 4, 13), float64],) {
  %768 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %769 = %768.0;
  (%769,)
}

def @func_8353() -> Tensor[(60), float32] {
  %770 = @func_5131() /* ty=(Tensor[(60), float32],) */;
  %770.0
}

def @func_3113(%var_3094: Tensor[(8, 88), uint16], %var_3107: Tensor[(1, 10, 11), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(165), uint64], Tensor[(165, 1), float64], Tensor[(8, 88), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(1, 10, 11), float32]) {
  %771 = cast(-3.1609f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %772 = cast(meta[relay.Constant][42] /* ty=Tensor[(165, 1), float64] */, dtype="float64") /* ty=Tensor[(165, 1), float64] */;
  %773 = cast(%var_3094, dtype="uint16") /* ty=Tensor[(8, 88), uint16] */;
  %774 = cast(meta[relay.Constant][43] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %775 = cast(meta[relay.Constant][44] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %776 = reshape(%771, newshape=[]) /* ty=float64 */;
  %777 = reshape(%772, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %778 = reshape(%773, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
  %779 = reshape(%774, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %780 = reshape(%775, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %781 = @func_2624(%776, %777, %778, %779, %780) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
  %782 = cast(-3.1609f64 /* ty=float64 */, dtype="float32") /* ty=float32 */;
  %783 = cast(%var_3107, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
  %784 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
  %785 = %781.2;
  %786 = mod(%782, %783) /* ty=Tensor[(1, 10, 11), float32] */;
  (%784, %785, meta[relay.Constant][42] /* ty=Tensor[(165, 1), float64] */, %var_3094, meta[relay.Constant][43] /* ty=Tensor[(330), float32] */, meta[relay.Constant][44] /* ty=Tensor[(1248), float32] */, %786)
}

def @func_5576(%var_5559: Tensor[(252), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(2, 12, 5), float32], Tensor[(60), float32], Tensor[(5, 11, 6), float32], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(16, 6, 8), float64]) {
  %787 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %788 = cast(meta[relay.Constant][45] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %789 = reshape(%788, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %790 = @func_3934(%789) /* ty=(Tensor[(2, 12, 5), float32], Tensor[(15, 4), float32], Tensor[(60), float32]) */;
  %791 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
  %792 = %791.1;
  %793 = cast(%792, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
  %794 = cast(%var_5559, dtype="float64") /* ty=Tensor[(252), float64] */;
  %795 = cast(%792, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %796 = cast(%792, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
  %797 = cast(meta[relay.Constant][46] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %798 = reshape(%793, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %799 = reshape(%794, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %800 = reshape(%795, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), float64] */;
  %801 = reshape(%796, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %802 = reshape(%797, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %803 = @func_1044(%798, %799, %800, %801, %802) /* ty=(Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) */;
  %804 = @func_5200() /* ty=(Tensor[(16, 6, 8), bool],) */;
  %805 = %804.0;
  %806 = cast(%792, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%805, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %810 = %787.0;
  %811 = %790.0;
  %812 = %803.13;
  %813 = floor_mod(%808, %809) /* ty=Tensor[(16, 6, 8), float64] */;
  (%810, %811, meta[relay.Constant][45] /* ty=Tensor[(60), float32] */, %812, %var_5559, meta[relay.Constant][46] /* ty=Tensor[(2112), float32] */, %813)
}

def @func_6004(%var_5965: Tensor[(252), float64], %var_5966: Tensor[(2112), float32], %var_5969: Tensor[(900), float32], %var_5993: float64) -> (Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32], Tensor[(768), uint8], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(15, 12, 5), float32], Tensor[(900), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], float64) {
  %814 = @func_5872() /* ty=(Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32]) */;
  %815 = cast(meta[relay.Constant][47] /* ty=Tensor[(768), uint8] */, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %816 = cast(%var_5965, dtype="float64") /* ty=Tensor[(252), float64] */;
  %817 = cast(meta[relay.Constant][47] /* ty=Tensor[(768), uint8] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %818 = cast(meta[relay.Constant][47] /* ty=Tensor[(768), uint8] */, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %819 = cast(%var_5966, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %820 = reshape(%815, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %821 = reshape(%816, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %822 = reshape(%817, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), float64] */;
  %823 = reshape(%818, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %824 = reshape(%819, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %825 = @func_1044(%820, %821, %822, %823, %824) /* ty=(Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) */;
  %826 = cast(%var_5969, dtype="float32") /* ty=Tensor[(900), float32] */;
  %827 = reshape(%826, newshape=[15, 12, 5]) /* ty=Tensor[(15, 12, 5), float32] */;
  %828 = @func_5738(%827) /* ty=(Tensor[(15, 12, 5), float32], Tensor[(15, 12, 5), float32]) */;
  %829 = @func_5410() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %830 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %831 = cast(%var_5966, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %832 = cast(%var_5993, dtype="float64") /* ty=float64 */;
  %833 = reshape(%831, newshape=[22, 96]) /* ty=Tensor[(22, 96), float32] */;
  %834 = reshape(%832, newshape=[]) /* ty=float64 */;
  %835 = @func_1734(%833, %834) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(1, 165), float64]) */;
  %836 = %814.0;
  %837 = %825.11;
  %838 = %828.1;
  %839 = %829.0;
  %840 = %830.1;
  %841 = %835.2;
  (%836, %837, meta[relay.Constant][47] /* ty=Tensor[(768), uint8] */, %var_5965, %var_5966, %838, %var_5969, %839, %840, %841, %var_5993)
}

def @func_5619() -> Tensor[(16, 6, 8), float32] {
  %842 = @func_5200() /* ty=(Tensor[(16, 6, 8), bool],) */;
  %843 = %842.0;
  %844 = cast(%843, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %845 = asin(%844) /* ty=Tensor[(16, 6, 8), float64] */;
  %846 = cast(%845, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
  log10(%846) /* ty=Tensor[(16, 6, 8), float32] */
}

def @func_2386() -> Tensor[(14, 3, 6), float64] {
  %847 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %847.0
}

def @func_4333() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(60), float32]) {
  %848 = @func_4251() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %849 = cast(meta[relay.Constant][48] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %850 = reshape(%849, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
  %851 = @func_2827(%850) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) */;
  %852 = %848.0;
  %853 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
  %854 = %851.0;
  (%852, %853, %854, meta[relay.Constant][48] /* ty=Tensor[(60), float32] */)
}

def @func_4712() -> (Tensor[(3, 4, 13), bool],) {
  %855 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %856 = %855.0;
  %857 = cast(meta[relay.Constant][49] /* ty=Tensor[(3, 4, 13), float64] */, dtype="bool") /* ty=Tensor[(3, 4, 13), bool] */;
  %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %859 = cast(%856, dtype="bool") /* ty=Tensor[(3, 4, 13), bool] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %861 = less(%859, %860) /* ty=Tensor[(3, 4, 13), bool] */;
  (%861,)
}

def @func_6985() -> Tensor[(3, 4, 13), float64] {
  %862 = @func_4532() /* ty=(Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %862.1
}

def @func_7345(%var_7298: Tensor[(2, 15, 4), int64], %var_7299: Tensor[(2, 15, 4), int64]) -> (Tensor[(2, 15, 4), int64], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float32]) {
  %863 = cast(%var_7299, dtype="int64") /* ty=Tensor[(2, 15, 4), int64] */;
  %864 = shape_of(%var_7298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(%var_7298, dtype="int64") /* ty=Tensor[(2, 15, 4), int64] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %867 = @func_6630() /* ty=(Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */;
  %868 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %869 = bitwise_and(%865, %866) /* ty=Tensor[(2, 15, 4), int64] */;
  %870 = %867.0;
  %871 = %868.1;
  (%869, %870, %871)
}

def @func_2153() -> (Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) {
  %872 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %873 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %874 = %872.0;
  %875 = %873.1;
  (%874, %875)
}

def @func_5233(%var_5214: Tensor[(3, 12, 2), float64], %var_5227: Tensor[(3, 12, 2), float32]) -> Tensor[(3, 12, 2), bool] {
  %876 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 2), float64] */;
  %877 = shape_of(%var_5214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%var_5214, dtype="float64") /* ty=Tensor[(3, 12, 2), float64] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %880 = mod(%878, %879) /* ty=Tensor[(3, 12, 2), float64] */;
  %881 = cast(%880, dtype="float32") /* ty=Tensor[(3, 12, 2), float32] */;
  %882 = asin(%881) /* ty=Tensor[(3, 12, 2), float32] */;
  %883 = cast(%var_5227, dtype="bool") /* ty=Tensor[(3, 12, 2), bool] */;
  %884 = shape_of(%882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%882, dtype="bool") /* ty=Tensor[(3, 12, 2), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%885, %886) /* ty=Tensor[(3, 12, 2), bool] */
}

def @func_4016() -> (Tensor[(60), float32], Tensor[(3, 4, 13), float64]) {
  %887 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
  %888 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %889 = %887.2;
  %890 = %888.0;
  (%889, %890)
}

def @func_149(%var_144: Tensor[(12, 16, 11), float32]) -> Tensor[(12, 16, 11), float32] {
  %891 = cast(%var_144, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  cosh(%891) /* ty=Tensor[(12, 16, 11), float32] */
}

def @func_7701() -> Tensor[(3, 4, 13), bool] {
  %892 = @func_5468() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %892.0
}

def @func_6630() -> (Tensor[(2, 12, 5), float32], Tensor[(60), float32]) {
  %893 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  %894 = cast(%893, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
  %895 = @func_5131() /* ty=(Tensor[(60), float32],) */;
  %896 = acos(%894) /* ty=Tensor[(2, 12, 5), float32] */;
  %897 = %895.0;
  (%896, %897)
}

def @func_3563() -> (Tensor[(2, 12, 5), float32],) {
  %898 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  (%898,)
}

def @func_6899(%var_6808: Tensor[(8, 15, 13), float32]) -> (Tensor[(2, 12, 5), bool], Tensor[(120), float32], Tensor[(3, 4, 13), bool], Tensor[(273, 1), float64], Tensor[(8, 15, 13), uint16], Tensor[(2, 12, 5), float32], Tensor[(8, 15, 13), bool], Tensor[(7, 3, 13), float64]) {
  %899 = cast(meta[relay.Constant][51] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %900 = reshape(%899, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), float32] */;
  %901 = @func_5872() /* ty=(Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32]) */;
  %902 = @func_3646() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) */;
  %903 = cast(%var_6808, dtype="float32") /* ty=Tensor[(8, 15, 13), float32] */;
  %904 = tan(%903) /* ty=Tensor[(8, 15, 13), float32] */;
  %905 = cast(%904, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %906 = sin(%905) /* ty=Tensor[(8, 15, 13), float64] */;
  %907 = cast(%906, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %908 = log(%907) /* ty=Tensor[(8, 15, 13), float64] */;
  %909 = cast(%908, dtype="uint16") /* ty=Tensor[(8, 15, 13), uint16] */;
  %910 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%904, dtype="uint16") /* ty=Tensor[(8, 15, 13), uint16] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %913 = cast(%var_6808, dtype="int32") /* ty=Tensor[(8, 15, 13), int32] */;
  %914 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %915 = cast(%904, dtype="int32") /* ty=Tensor[(8, 15, 13), int32] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %917 = add(%915, %916) /* ty=Tensor[(8, 15, 13), int32] */;
  %918 = cast(%906, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %919 = erf(%918) /* ty=Tensor[(8, 15, 13), float64] */;
  %920 = cast(%919, dtype="uint64") /* ty=Tensor[(8, 15, 13), uint64] */;
  %921 = shape_of(%917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %922 = cast(%917, dtype="uint64") /* ty=Tensor[(8, 15, 13), uint64] */;
  %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %924 = logical_xor(%922, %923) /* ty=Tensor[(8, 15, 13), uint64] */;
  %925 = cast(%924, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
  %926 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(%908, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %929 = %902.2;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
  %931 = cast(%929, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
  %932 = reshape(%930, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %933 = reshape(%931, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %934 = @func_1283(%932, %933) /* ty=(Tensor[(7, 3, 13), float64],) */;
  %935 = @func_6255(%900) /* ty=Tensor[(2, 12, 5), bool] */;
  %936 = %901.0;
  %937 = bitwise_and(%911, %912) /* ty=Tensor[(8, 15, 13), uint16] */;
  %938 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  %939 = less_equal(%927, %928) /* ty=Tensor[(8, 15, 13), bool] */;
  %940 = %934.0;
  (%935, meta[relay.Constant][51] /* ty=Tensor[(120), float32] */, %936, %929, %937, %938, %939, %940)
}

def @func_1097(%var_1066: Tensor[(4, 11, 16), uint16], %var_1067: Tensor[(4, 11, 16), uint16], %var_1080: Tensor[(330), float32], %var_1089: Tensor[(1248), float32]) -> (Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) {
  %941 = cast(%var_1067, dtype="uint16") /* ty=Tensor[(4, 11, 16), uint16] */;
  %942 = shape_of(%var_1066, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%var_1066, dtype="uint16") /* ty=Tensor[(4, 11, 16), uint16] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %945 = cast(%var_1080, dtype="float32") /* ty=Tensor[(330), float32] */;
  %946 = cast(meta[relay.Constant][52] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %947 = reshape(%945, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %948 = reshape(%946, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %949 = @func_726(%947, %948) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %950 = cast(%var_1089, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %951 = cast(%var_1080, dtype="float32") /* ty=Tensor[(330), float32] */;
  %952 = reshape(%950, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float32] */;
  %953 = reshape(%951, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %954 = @func_790(%952, %953) /* ty=(Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) */;
  %955 = %949.3;
  %956 = cast(%955, dtype="float64") /* ty=Tensor[(6, 3, 14), float64] */;
  %957 = reshape(%956, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %958 = @func_640(%957) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %959 = bitwise_and(%943, %944) /* ty=Tensor[(4, 11, 16), uint16] */;
  %960 = %954.1;
  %961 = %958.0;
  (%959, %955, %var_1080, meta[relay.Constant][52] /* ty=Tensor[(252), float64] */, %960, %var_1089, %961)
}

def @func_8445() -> (Tensor[(3, 4, 13), float64],) {
  %962 = @func_8383() /* ty=Tensor[(3, 4, 13), float64] */;
  (%962,)
}

def @func_4532() -> (Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) {
  %963 = @func_3646() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) */;
  %964 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %965 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %966 = %965.1;
  %967 = cast(%966, dtype="float64") /* ty=Tensor[(3, 4, 13), float64] */;
  %968 = %963.1;
  %969 = %964.0;
  %970 = sqrt(%967) /* ty=Tensor[(3, 4, 13), float64] */;
  (%968, %969, %970)
}

def @func_1734(%var_1727: Tensor[(22, 96), float32], %var_1731: float64) -> (Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(1, 165), float64]) {
  %971 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %972 = cast(%var_1727, dtype="float32") /* ty=Tensor[(22, 96), float32] */;
  %973 = reshape(%972, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
  %974 = cast(%var_1731, dtype="float64") /* ty=float64 */;
  %975 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 165), float64] */, dtype="float64") /* ty=Tensor[(1, 165), float64] */;
  %976 = reshape(%974, newshape=[]) /* ty=float64 */;
  %977 = reshape(%975, newshape=[1, 15, 11]) /* ty=Tensor[(1, 15, 11), float64] */;
  %978 = %971.0;
  %979 = @func_149(%973) /* ty=Tensor[(12, 16, 11), float32] */;
  %980 = @func_1551(%976, %977) /* ty=Tensor[(1, 15, 11), float64] */;
  (%978, %979, %var_1727, %980, %var_1731, meta[relay.Constant][53] /* ty=Tensor[(1, 165), float64] */)
}

def @func_3179() -> Tensor[(14, 3, 6), float64] {
  %981 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %981.0
}

def @func_8536() -> (Tensor[(3, 4, 13), float64],) {
  %982 = @func_6607() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %983 = %982.0;
  (%983,)
}

def @func_4625() -> (Tensor[(14, 3, 6), float64],) {
  %984 = @func_2924() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %985 = %984.0;
  (%985,)
}

def @func_7445(%var_7434: int8) -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(330), float32], Tensor[(3, 4, 13), bool], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float64], Tensor[(2496), int8], Tensor[(60), uint8]) {
  %986 = @func_6607() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %987 = @func_5083() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %988 = cast(meta[relay.Constant][54] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %989 = reshape(%988, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %990 = @func_3885(%989) /* ty=(Tensor[(273, 1), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(330), float32], Tensor[(252), float32], Tensor[(3, 4, 13), float64]) */;
  %991 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %992 = cast(%var_7434, dtype="int8") /* ty=int8 */;
  %993 = cast(meta[relay.Constant][55] /* ty=Tensor[(2496), int8] */, dtype="int8") /* ty=Tensor[(2496), int8] */;
  %994 = reshape(%992, newshape=[]) /* ty=int8 */;
  %995 = reshape(%993, newshape=[16, 13, 12]) /* ty=Tensor[(16, 13, 12), int8] */;
  %996 = @func_4813(%994, %995) /* ty=(Tensor[(16, 13, 12), int8], Tensor[(3, 4, 13), float64]) */;
  %997 = @func_6630() /* ty=(Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */;
  %998 = %997.1;
  %999 = cast(%998, dtype="uint8") /* ty=Tensor[(60), uint8] */;
  %1000 = cast(%var_7434, dtype="uint8") /* ty=uint8 */;
  %1001 = %986.0;
  %1002 = %987.0;
  %1003 = %990.5;
  %1004 = %991.0;
  %1005 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  %1006 = %996.1;
  %1007 = maximum(%999, %1000) /* ty=Tensor[(60), uint8] */;
  (%1001, %1002, %1003, meta[relay.Constant][54] /* ty=Tensor[(330), float32] */, %1004, %1005, %1006, meta[relay.Constant][55] /* ty=Tensor[(2496), int8] */, %1007)
}

def @func_1551(%var_1546: float64, %var_1547: Tensor[(1, 15, 11), float64]) -> Tensor[(1, 15, 11), float64] {
  %1008 = cast(%var_1546, dtype="float64") /* ty=float64 */;
  %1009 = cast(%var_1547, dtype="float64") /* ty=Tensor[(1, 15, 11), float64] */;
  multiply(%1008, %1009) /* ty=Tensor[(1, 15, 11), float64] */
}

def @func_8585(%var_8577: Tensor[(120), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(2, 12, 5), bool], Tensor[(120), float32]) {
  %1010 = @func_3713() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %1011 = cast(%var_8577, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1012 = reshape(%1011, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), float32] */;
  %1013 = %1010.0;
  %1014 = @func_6255(%1012) /* ty=Tensor[(2, 12, 5), bool] */;
  (%1013, %1014, %var_8577)
}

def @func_4743() -> (Tensor[(3, 4, 13), bool],) {
  %1015 = @func_4712() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %1016 = %1015.0;
  (%1016,)
}

def @func_3597() -> Tensor[(3, 4, 13), float32] {
  %1017 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %1017.1
}

def @func_8321() -> (Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) {
  %1018 = @func_4333() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(60), float32]) */;
  %1019 = %1018.1;
  %1020 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
  (%1019, %1020)
}

def @func_6200() -> (Tensor[(3, 4, 13), float64],) {
  %1021 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %1022 = %1021.0;
  (%1022,)
}

def @func_2765(%var_2722: Tensor[(704), uint16], %var_2723: Tensor[(330), float32], %var_2724: Tensor[(8, 156), float32]) -> (Tensor[(3, 4, 13), float64], Tensor[(2112), float32], float64, Tensor[(165), float64], Tensor[(704), uint16], Tensor[(330), float32], Tensor[(8, 156), float32], Tensor[(7, 3, 13), float64], Tensor[(3, 4, 13), float64], Tensor[(13, 21), float32], Tensor[(3, 4, 13), float32]) {
  %1023 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
  %1024 = cast(8.99208f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1025 = cast(meta[relay.Constant][56] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %1026 = cast(%var_2722, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %1027 = cast(%var_2723, dtype="float32") /* ty=Tensor[(330), float32] */;
  %1028 = cast(%var_2724, dtype="float32") /* ty=Tensor[(8, 156), float32] */;
  %1029 = reshape(%1024, newshape=[]) /* ty=float64 */;
  %1030 = reshape(%1025, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %1031 = reshape(%1026, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
  %1032 = reshape(%1027, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %1033 = reshape(%1028, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %1034 = @func_2624(%1029, %1030, %1031, %1032, %1033) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
  %1035 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %1036 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %1037 = reshape(%1035, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %1038 = reshape(%1036, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %1039 = @func_1283(%1037, %1038) /* ty=(Tensor[(7, 3, 13), float64],) */;
  %1040 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 21), float64] */, dtype="float32") /* ty=Tensor[(13, 21), float32] */;
  %1041 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %1042 = %1023.0;
  %1043 = %1034.10;
  %1044 = %1039.0;
  %1045 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  %1046 = exp(%1040) /* ty=Tensor[(13, 21), float32] */;
  %1047 = %1041.1;
  (%1042, %1043, 8.99208f64 /* ty=float64 */, meta[relay.Constant][56] /* ty=Tensor[(165), float64] */, %var_2722, %var_2723, %var_2724, %1044, %1045, %1046, %1047)
}

def @func_8789() -> (Tensor[(3, 4, 13), bool], Tensor[(3, 4, 13), uint64]) {
  %1048 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %1049 = @func_5410() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %1050 = %1049.0;
  %1051 = @func_3597() /* ty=Tensor[(3, 4, 13), float32] */;
  %1052 = cast(%1051, dtype="uint64") /* ty=Tensor[(3, 4, 13), uint64] */;
  %1053 = shape_of(%1050, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1054 = cast(%1050, dtype="uint64") /* ty=Tensor[(3, 4, 13), uint64] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1056 = %1048.0;
  %1057 = minimum(%1054, %1055) /* ty=Tensor[(3, 4, 13), uint64] */;
  (%1056, %1057)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5233(%var_5214: Tensor[(3, 12, 2), float64], %var_5227: Tensor[(3, 12, 2), float32]) -> Tensor[(3, 12, 2), bool] {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 2), float64] */;
  %1 = shape_of(%var_5214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_5214, dtype="float64") /* ty=Tensor[(3, 12, 2), float64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %4 = mod(%2, %3) /* ty=Tensor[(3, 12, 2), float64] */;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(3, 12, 2), float32] */;
  %6 = asin(%5) /* ty=Tensor[(3, 12, 2), float32] */;
  %7 = cast(%var_5227, dtype="bool") /* ty=Tensor[(3, 12, 2), bool] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="bool") /* ty=Tensor[(3, 12, 2), bool] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%9, %10) /* ty=Tensor[(3, 12, 2), bool] */
}

def @func_6609() -> (Tensor[(3, 4, 13), float64],) {
  @func_6607() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_6201() -> (Tensor[(3, 4, 13), float64],) {
  %13 = fn () -> (Tensor[(3, 4, 13), float64],) {
    %11 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %12 = %11.0;
    (%12,)
  };
  %13() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_3565() -> (Tensor[(2, 12, 5), float32],) {
  @func_3563() /* ty=(Tensor[(2, 12, 5), float32],) */
}

def @func_6631() -> (Tensor[(2, 12, 5), float32], Tensor[(60), float32]) {
  %19 = fn () -> (Tensor[(2, 12, 5), float32], Tensor[(60), float32]) {
    %14 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
    %15 = cast(%14, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
    %16 = @func_5131() /* ty=(Tensor[(60), float32],) */;
    %17 = acos(%15) /* ty=Tensor[(2, 12, 5), float32] */;
    %18 = %16.0;
    (%17, %18)
  };
  %19() /* ty=(Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */
}

def @func_5934() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], Tensor[(2112), float32]) {
  %29 = fn () -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], Tensor[(2112), float32]) {
    %20 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %21 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %23 = reshape(%22, newshape=[22, 96]) /* ty=Tensor[(22, 96), float32] */;
    %24 = @func_3276(%23) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32]) */;
    %25 = @func_3739() /* ty=Tensor[(3, 4, 13), float64] */;
    %26 = %20.0;
    %27 = %21.1;
    %28 = %24.2;
    (%25, %26, %27, %28, meta[relay.Constant][1] /* ty=Tensor[(2112), float32] */)
  };
  %29() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], Tensor[(2112), float32]) */
}

def @func_6295(%var_6293: bool, %var_6294: Tensor[(10, 7, 13), bool]) -> (Tensor[(10, 7, 13), bool],) {
  @func_6291(%var_6293, %var_6294) /* ty=(Tensor[(10, 7, 13), bool],) */
}

def @func_3739() -> Tensor[(3, 4, 13), float64] {
  %30 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %30.0
}

def @func_4745() -> (Tensor[(3, 4, 13), bool],) {
  @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */
}

def @func_6794(%var_6792: Tensor[(2, 13, 14), float32]) -> (Tensor[(2, 13, 14), float32],) {
  @func_6791(%var_6792) /* ty=(Tensor[(2, 13, 14), float32],) */
}

def @func_7839(%var_7836: Tensor[(10, 15, 11), float64], %var_7837: Tensor[(10, 15, 11), float64], %var_7838: Tensor[(10, 15, 11), float64]) -> (Tensor[(10, 15, 11), float64], Tensor[(2, 15, 4), int64], Tensor[(120), int64], Tensor[(10, 15, 11), uint16], Tensor[(3, 4, 13), float64]) {
  @func_7834(%var_7836, %var_7837, %var_7838) /* ty=(Tensor[(10, 15, 11), float64], Tensor[(2, 15, 4), int64], Tensor[(120), int64], Tensor[(10, 15, 11), uint16], Tensor[(3, 4, 13), float64]) */
}

def @func_8789() -> (Tensor[(3, 4, 13), bool], Tensor[(3, 4, 13), uint64]) {
  %31 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %32 = @func_5410() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %33 = %32.0;
  %34 = @func_3597() /* ty=Tensor[(3, 4, 13), float32] */;
  %35 = cast(%34, dtype="uint64") /* ty=Tensor[(3, 4, 13), uint64] */;
  %36 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%33, dtype="uint64") /* ty=Tensor[(3, 4, 13), uint64] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %39 = %31.0;
  %40 = minimum(%37, %38) /* ty=Tensor[(3, 4, 13), uint64] */;
  (%39, %40)
}

def @func_6607() -> (Tensor[(3, 4, 13), float64],) {
  %41 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %42 = %41.0;
  (%42,)
}

def @func_6669() -> (Tensor[(60), float32], Tensor[(252), float64], Tensor[(12, 60), float32]) {
  %53 = fn () -> (Tensor[(60), float32], Tensor[(252), float64], Tensor[(12, 60), float32]) {
    %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %44 = reshape(%43, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %45 = @func_5576(%44) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(2, 12, 5), float32], Tensor[(60), float32], Tensor[(5, 11, 6), float32], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(16, 6, 8), float64]) */;
    %46 = @func_4417() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(12, 60), int64], Tensor[(12, 60), uint32]) */;
    %47 = %46.3;
    %48 = cast(%47, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
    %49 = atan(%48) /* ty=Tensor[(12, 60), float64] */;
    %50 = cast(%49, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
    %51 = %45.2;
    %52 = cos(%50) /* ty=Tensor[(12, 60), float32] */;
    (%51, meta[relay.Constant][2] /* ty=Tensor[(252), float64] */, %52)
  };
  %53() /* ty=(Tensor[(60), float32], Tensor[(252), float64], Tensor[(12, 60), float32]) */
}

def @func_7744() -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(3, 4, 13), float32]) {
  %60 = fn () -> (Tensor[(60), float32], Tensor[(60), float32], Tensor[(3, 4, 13), float32]) {
    %54 = @func_6630() /* ty=(Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */;
    %55 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
    %56 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %57 = %54.1;
    %58 = %55.2;
    %59 = %56.1;
    (%57, %58, %59)
  };
  %60() /* ty=(Tensor[(60), float32], Tensor[(60), float32], Tensor[(3, 4, 13), float32]) */
}

def @func_8353() -> Tensor[(60), float32] {
  %61 = @func_5131() /* ty=(Tensor[(60), float32],) */;
  %61.0
}

def @func_8130() -> (Tensor[(3, 4, 13), bool],) {
  @func_8128() /* ty=(Tensor[(3, 4, 13), bool],) */
}

def @func_5202() -> (Tensor[(16, 6, 8), bool],) {
  @func_5200() /* ty=(Tensor[(16, 6, 8), bool],) */
}

def @func_8587(%var_8586: Tensor[(120), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(2, 12, 5), bool], Tensor[(120), float32]) {
  %67 = fn (%var_8577: Tensor[(120), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(2, 12, 5), bool], Tensor[(120), float32]) {
    %62 = @func_3713() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %63 = cast(%var_8577, dtype="float32") /* ty=Tensor[(120), float32] */;
    %64 = reshape(%63, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), float32] */;
    %65 = %62.0;
    %66 = @func_6255(%64) /* ty=Tensor[(2, 12, 5), bool] */;
    (%65, %66, %var_8577)
  };
  %67(%var_8586) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(2, 12, 5), bool], Tensor[(120), float32]) */
}

def @func_7558() -> Tensor[(3, 4, 13), float64] {
  %68 = @func_7535() /* ty=Tensor[(3, 4, 13), float64] */;
  %69 = cast(%68, dtype="float64") /* ty=Tensor[(3, 4, 13), float64] */;
  sinh(%69) /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_3278(%var_3277: Tensor[(22, 96), float32]) -> (Tensor[(3, 4, 13), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32]) {
  %74 = fn (%var_3267: Tensor[(22, 96), float32]) -> (Tensor[(3, 4, 13), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32]) {
    %70 = cast(%var_3267, dtype="float32") /* ty=Tensor[(22, 96), float32] */;
    %71 = reshape(%70, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
    %72 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
    %73 = @func_149(%71) /* ty=Tensor[(12, 16, 11), float32] */;
    (%72, %73, %var_3267)
  };
  %74(%var_3277) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32]) */
}

def @func_8791() -> (Tensor[(3, 4, 13), bool], Tensor[(3, 4, 13), uint64]) {
  @func_8789() /* ty=(Tensor[(3, 4, 13), bool], Tensor[(3, 4, 13), uint64]) */
}

def @func_8097(%var_8068: Tensor[(165), float64], %var_8070: Tensor[(1, 330), float32], %var_8071: Tensor[(1248), float32], %var_8079: Tensor[(273), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], float64, Tensor[(165), float64], Tensor[(704), uint16], Tensor[(1, 330), float32], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(273), float64], Tensor[(22, 5), float64]) {
  %75 = @func_6950() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %76 = cast(1.22999f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %77 = cast(%var_8068, dtype="float64") /* ty=Tensor[(165), float64] */;
  %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(704), uint16] */, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %79 = cast(%var_8070, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %80 = cast(%var_8071, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %81 = reshape(%76, newshape=[]) /* ty=float64 */;
  %82 = reshape(%77, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %83 = reshape(%78, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
  %84 = reshape(%79, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %85 = reshape(%80, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %86 = @func_2624(%81, %82, %83, %84, %85) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
  %87 = cast(%var_8079, dtype="float64") /* ty=Tensor[(273), float64] */;
  %88 = cast(meta[relay.Constant][3] /* ty=Tensor[(704), uint16] */, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(22, 5), float64] */, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %90 = reshape(%87, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %91 = reshape(%88, newshape=[704]) /* ty=Tensor[(704), uint16] */;
  %92 = reshape(%89, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %93 = @func_3429(%90, %91, %92) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(7, 3, 13), float64], Tensor[(273), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32], float64, Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(110), float64], Tensor[(2, 12, 5), float32]) */;
  %94 = cast(meta[relay.Constant][4] /* ty=Tensor[(22, 5), float64] */, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %95 = %75.0;
  %96 = %86.0;
  %97 = %93.10;
  %98 = asin(%94) /* ty=Tensor[(22, 5), float64] */;
  (%95, %96, 1.22999f64 /* ty=float64 */, %var_8068, meta[relay.Constant][3] /* ty=Tensor[(704), uint16] */, %var_8070, %var_8071, %97, %var_8079, %98)
}

def @func_8176(%var_8173: Tensor[(5, 13, 6), int32], %var_8174: Tensor[(5, 13, 6), int32], %var_8175: Tensor[(252), float64]) -> (Tensor[(5, 13, 6), int32], Tensor[(3, 4, 13), float64], Tensor[(5, 13, 6), bool], Tensor[(126, 2), uint64], Tensor[(252), float64]) {
  @func_8171(%var_8173, %var_8174, %var_8175) /* ty=(Tensor[(5, 13, 6), int32], Tensor[(3, 4, 13), float64], Tensor[(5, 13, 6), bool], Tensor[(126, 2), uint64], Tensor[(252), float64]) */
}

def @func_7834(%var_7788: Tensor[(10, 15, 11), float64], %var_7789: Tensor[(10, 15, 11), float64], %var_7827: Tensor[(10, 15, 11), float64]) -> (Tensor[(10, 15, 11), float64], Tensor[(2, 15, 4), int64], Tensor[(120), int64], Tensor[(10, 15, 11), uint16], Tensor[(3, 4, 13), float64]) {
  %99 = cast(%var_7789, dtype="float64") /* ty=Tensor[(10, 15, 11), float64] */;
  %100 = shape_of(%var_7788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%var_7788, dtype="float64") /* ty=Tensor[(10, 15, 11), float64] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %103 = cast(meta[relay.Constant][5] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %104 = cast(meta[relay.Constant][5] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %105 = reshape(%103, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), int64] */;
  %106 = reshape(%104, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), int64] */;
  %107 = @func_7345(%105, %106) /* ty=(Tensor[(2, 15, 4), int64], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float32]) */;
  %108 = cast(%var_7827, dtype="uint16") /* ty=Tensor[(10, 15, 11), uint16] */;
  %109 = shape_of(%var_7788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%var_7788, dtype="uint16") /* ty=Tensor[(10, 15, 11), uint16] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %112 = @func_4251() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %113 = floor_divide(%101, %102) /* ty=Tensor[(10, 15, 11), float64] */;
  %114 = %107.0;
  %115 = subtract(%110, %111) /* ty=Tensor[(10, 15, 11), uint16] */;
  %116 = %112.0;
  (%113, %114, meta[relay.Constant][5] /* ty=Tensor[(120), int64] */, %115, %116)
}

def @func_2707() -> (Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) {
  %120 = fn () -> (Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) {
    %117 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %118 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
    %119 = %117.0;
    (%118, %119)
  };
  %120() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) */
}

def @func_730(%var_728: Tensor[(5, 11, 6), float32], %var_729: Tensor[(252), float64]) -> (Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) {
  @func_726(%var_728, %var_729) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */
}

def @func_4160(%var_4159: Tensor[(252), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64]) {
  %126 = fn (%var_4140: Tensor[(252), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64]) {
    %121 = cast(%var_4140, dtype="float64") /* ty=Tensor[(252), float64] */;
    %122 = reshape(%121, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
    %123 = @func_640(%122) /* ty=(Tensor[(6, 3, 14), float64],) */;
    %124 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
    %125 = %123.0;
    (%124, %125, %var_4140)
  };
  %126(%var_4159) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64]) */
}

def @func_6512(%var_6476: Tensor[(16, 7, 11), float32]) -> (Tensor[(16, 7, 11), bool], Tensor[(16, 7, 11), int64]) {
  %127 = cast(%var_6476, dtype="float32") /* ty=Tensor[(16, 7, 11), float32] */;
  %128 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(16, 7, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 7, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 11), float32] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %131 = mod(%129, %130) /* ty=Tensor[(16, 7, 11), float32] */;
  %132 = cast(%131, dtype="bool") /* ty=Tensor[(16, 7, 11), bool] */;
  %133 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(16, 7, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 7, 11), float32] */, dtype="bool") /* ty=Tensor[(16, 7, 11), bool] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %136 = cast(%var_6476, dtype="uint16") /* ty=Tensor[(16, 7, 11), uint16] */;
  %137 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%131, dtype="uint16") /* ty=Tensor[(16, 7, 11), uint16] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %140 = bitwise_xor(%138, %139) /* ty=Tensor[(16, 7, 11), uint16] */;
  %141 = cast(%140, dtype="int64") /* ty=Tensor[(16, 7, 11), int64] */;
  %142 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%131, dtype="int64") /* ty=Tensor[(16, 7, 11), int64] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %145 = less(%134, %135) /* ty=Tensor[(16, 7, 11), bool] */;
  %146 = multiply(%143, %144) /* ty=Tensor[(16, 7, 11), int64] */;
  (%145, %146)
}

def @func_790(%var_743: Tensor[(16, 6, 13), float32], %var_763: Tensor[(330), float32]) -> (Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) {
  %147 = cast(%var_763, dtype="float32") /* ty=Tensor[(330), float32] */;
  %148 = cast(meta[relay.Constant][7] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %149 = reshape(%147, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %150 = reshape(%148, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %151 = @func_726(%149, %150) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %152 = %151.2;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(252), float32] */;
  %154 = cast(%var_743, dtype="float32") /* ty=Tensor[(16, 6, 13), float32] */;
  %155 = atan(%154) /* ty=Tensor[(16, 6, 13), float32] */;
  %156 = cast(%155, dtype="float64") /* ty=Tensor[(16, 6, 13), float64] */;
  %157 = exp(%153) /* ty=Tensor[(252), float32] */;
  %158 = atanh(%156) /* ty=Tensor[(16, 6, 13), float64] */;
  (%var_763, meta[relay.Constant][7] /* ty=Tensor[(252), float64] */, %157, %158)
}

def @func_4185() -> (Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) {
  %159 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %160 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %161 = %159.0;
  %162 = %160.0;
  (%161, %162)
}

def @func_2926() -> (Tensor[(14, 3, 6), float64],) {
  @func_2924() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_8634() -> (Tensor[(14, 3, 6), float64],) {
  %165 = fn () -> (Tensor[(14, 3, 6), float64],) {
    %163 = @func_2706() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) */;
    %164 = %163.1;
    (%164,)
  };
  %165() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_7668() -> Tensor[(14, 3, 6), float64] {
  %167 = fn () -> Tensor[(14, 3, 6), float64] {
    %166 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %166.0
  };
  %167() /* ty=Tensor[(14, 3, 6), float64] */
}

def @func_7042() -> Tensor[(3, 4, 13), bool] {
  %169 = fn () -> Tensor[(3, 4, 13), bool] {
    %168 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
    %168.0
  };
  %169() /* ty=Tensor[(3, 4, 13), bool] */
}

def @func_6362(%var_6361: Tensor[(15, 11, 9), float32]) -> (Tensor[(15, 11, 9), bool],) {
  %175 = fn (%var_6352: Tensor[(15, 11, 9), float32]) -> (Tensor[(15, 11, 9), bool],) {
    %170 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 11, 9), float32] */, dtype="bool") /* ty=Tensor[(15, 11, 9), bool] */;
    %171 = shape_of(%var_6352, dtype="int32") /* ty=Tensor[(3), int32] */;
    %172 = cast(%var_6352, dtype="bool") /* ty=Tensor[(15, 11, 9), bool] */;
    %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %174 = less_equal(%172, %173) /* ty=Tensor[(15, 11, 9), bool] */;
    (%174,)
  };
  %175(%var_6361) /* ty=(Tensor[(15, 11, 9), bool],) */
}

def @func_8384() -> Tensor[(3, 4, 13), float64] {
  %177 = fn () -> Tensor[(3, 4, 13), float64] {
    %176 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %176.0
  };
  %177() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_4927(%var_4926: Tensor[(110), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(1248), float32], Tensor[(704, 1), uint16], Tensor[(110), float64]) {
  %186 = fn (%var_4908: Tensor[(110), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(1248), float32], Tensor[(704, 1), uint16], Tensor[(110), float64]) {
    %178 = @func_4532() /* ty=(Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
    %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(704, 1), uint16] */, dtype="uint16") /* ty=Tensor[(704, 1), uint16] */;
    %180 = cast(%var_4908, dtype="float64") /* ty=Tensor[(110), float64] */;
    %181 = reshape(%179, newshape=[8, 88]) /* ty=Tensor[(8, 88), uint16] */;
    %182 = reshape(%180, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float64] */;
    %183 = @func_3113(%181, %182) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(165), uint64], Tensor[(165, 1), float64], Tensor[(8, 88), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(1, 10, 11), float32]) */;
    %184 = %178.2;
    %185 = %183.5;
    (%184, %185, meta[relay.Constant][9] /* ty=Tensor[(704, 1), uint16] */, %var_4908)
  };
  %186(%var_4926) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(1248), float32], Tensor[(704, 1), uint16], Tensor[(110), float64]) */
}

def @func_2642() -> Tensor[(14, 3, 6), float64] {
  @func_2640() /* ty=Tensor[(14, 3, 6), float64] */
}

def @func_1879() -> Tensor[(2, 12, 5), float32] {
  %187 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
  exp(%187) /* ty=Tensor[(2, 12, 5), float32] */
}

def @func_3831() -> Tensor[(3, 4, 13), float64] {
  %189 = fn () -> Tensor[(3, 4, 13), float64] {
    %188 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %188.0
  };
  %189() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_8854() -> Tensor[(14, 3, 6), float64] {
  @func_2386() /* ty=Tensor[(14, 3, 6), float64] */
}

def @func_6255(%var_6248: Tensor[(2, 12, 5), float32]) -> Tensor[(2, 12, 5), bool] {
  %190 = @func_3563() /* ty=(Tensor[(2, 12, 5), float32],) */;
  %191 = %190.0;
  %192 = cast(%var_6248, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%191, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%194, %195) /* ty=Tensor[(2, 12, 5), bool] */
}

def @func_4448(%var_4446: Tensor[(1248, 1), float32], %var_4447: Tensor[(330), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(16, 6, 13), float64], Tensor[(1248, 1), float32], Tensor[(330), float32]) {
  @func_4444(%var_4446, %var_4447) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(16, 6, 13), float64], Tensor[(1248, 1), float32], Tensor[(330), float32]) */
}

def @func_8712(%var_8708: Tensor[(11, 15, 16), uint8], %var_8709: float64, %var_8710: Tensor[(165), float64], %var_8711: Tensor[(1248), float32]) -> (Tensor[(2, 352), uint16], float64, Tensor[(165), float64], Tensor[(1, 704), uint16], Tensor[(1248), float32], Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(60), float32], Tensor[(330), bool], Tensor[(11, 15, 16), uint32]) {
  @func_8706(%var_8708, %var_8709, %var_8710, %var_8711) /* ty=(Tensor[(2, 352), uint16], float64, Tensor[(165), float64], Tensor[(1, 704), uint16], Tensor[(1248), float32], Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(60), float32], Tensor[(330), bool], Tensor[(11, 15, 16), uint32]) */
}

def @func_6291(%var_6272: bool, %var_6273: Tensor[(10, 7, 13), bool]) -> (Tensor[(10, 7, 13), bool],) {
  %196 = cast(%var_6272, dtype="bool") /* ty=bool */;
  %197 = cast(%var_6273, dtype="bool") /* ty=Tensor[(10, 7, 13), bool] */;
  %198 = logical_and(%196, %197) /* ty=Tensor[(10, 7, 13), bool] */;
  (%198,)
}

def @func_1287(%var_1285: Tensor[(7, 3, 13), float64], %var_1286: Tensor[(7, 3, 13), float64]) -> (Tensor[(7, 3, 13), float64],) {
  @func_1283(%var_1285, %var_1286) /* ty=(Tensor[(7, 3, 13), float64],) */
}

def @func_3181() -> Tensor[(14, 3, 6), float64] {
  @func_3179() /* ty=Tensor[(14, 3, 6), float64] */
}

def @func_4444(%var_4436: Tensor[(1248, 1), float32], %var_4437: Tensor[(330), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(16, 6, 13), float64], Tensor[(1248, 1), float32], Tensor[(330), float32]) {
  %199 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %200 = cast(%var_4436, dtype="float32") /* ty=Tensor[(1248, 1), float32] */;
  %201 = cast(%var_4437, dtype="float32") /* ty=Tensor[(330), float32] */;
  %202 = reshape(%200, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float32] */;
  %203 = reshape(%201, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %204 = @func_790(%202, %203) /* ty=(Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) */;
  %205 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
  %206 = %199.1;
  %207 = %204.3;
  (%205, %206, %207, %var_4436, %var_4437)
}

def @func_6791(%var_6775: Tensor[(2, 13, 14), float32]) -> (Tensor[(2, 13, 14), float32],) {
  %208 = cast(%var_6775, dtype="float32") /* ty=Tensor[(2, 13, 14), float32] */;
  %209 = atanh(%208) /* ty=Tensor[(2, 13, 14), float32] */;
  (%209,)
}

def @func_8856() -> Tensor[(14, 3, 6), float64] {
  @func_8854() /* ty=Tensor[(14, 3, 6), float64] */
}

def @func_5290() -> Tensor[(3, 4, 13), float64] {
  @func_5288() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_2206() -> Tensor[(3, 4, 13), float64] {
  %211 = fn () -> Tensor[(3, 4, 13), float64] {
    %210 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %210.0
  };
  %211() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_2271(%var_2222: Tensor[(6, 10), float32]) -> (Tensor[(6, 10), float32], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(5, 11, 6), float32], Tensor[(5, 66), float32], Tensor[(16, 6, 8), bool], Tensor[(768), uint8], Tensor[(2112), float32]) {
  %212 = cast(%var_2222, dtype="float32") /* ty=Tensor[(6, 10), float32] */;
  %213 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %214 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %215 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 66), float32] */, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %216 = %213.0;
  %217 = cast(%216, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
  %218 = reshape(%215, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %219 = reshape(%217, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %220 = @func_726(%218, %219) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %221 = cast(meta[relay.Constant][12] /* ty=Tensor[(768), uint8] */, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %222 = cast(%216, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
  %223 = cast(meta[relay.Constant][12] /* ty=Tensor[(768), uint8] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %224 = cast(meta[relay.Constant][12] /* ty=Tensor[(768), uint8] */, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %225 = cast(meta[relay.Constant][13] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %226 = reshape(%221, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %227 = reshape(%222, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %228 = reshape(%223, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), float64] */;
  %229 = reshape(%224, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %230 = reshape(%225, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %231 = @func_1044(%226, %227, %228, %229, %230) /* ty=(Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) */;
  %232 = log(%212) /* ty=Tensor[(6, 10), float32] */;
  %233 = %214.0;
  %234 = %220.0;
  %235 = %231.5;
  (%232, %216, %233, %234, meta[relay.Constant][11] /* ty=Tensor[(5, 66), float32] */, %235, meta[relay.Constant][12] /* ty=Tensor[(768), uint8] */, meta[relay.Constant][13] /* ty=Tensor[(2112), float32] */)
}

def @func_4625() -> (Tensor[(14, 3, 6), float64],) {
  %236 = @func_2924() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %237 = %236.0;
  (%237,)
}

def @func_5145() -> (Tensor[(14, 3, 6), float64],) {
  %238 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %239 = %238.0;
  (%239,)
}

def @func_7447(%var_7446: int8) -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(330), float32], Tensor[(3, 4, 13), bool], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float64], Tensor[(2496), int8], Tensor[(60), uint8]) {
  %262 = fn (%var_7434: int8) -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(330), float32], Tensor[(3, 4, 13), bool], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float64], Tensor[(2496), int8], Tensor[(60), uint8]) {
    %240 = @func_6607() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %241 = @func_5083() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %242 = cast(meta[relay.Constant][14] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %243 = reshape(%242, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %244 = @func_3885(%243) /* ty=(Tensor[(273, 1), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(330), float32], Tensor[(252), float32], Tensor[(3, 4, 13), float64]) */;
    %245 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
    %246 = cast(%var_7434, dtype="int8") /* ty=int8 */;
    %247 = cast(meta[relay.Constant][15] /* ty=Tensor[(2496), int8] */, dtype="int8") /* ty=Tensor[(2496), int8] */;
    %248 = reshape(%246, newshape=[]) /* ty=int8 */;
    %249 = reshape(%247, newshape=[16, 13, 12]) /* ty=Tensor[(16, 13, 12), int8] */;
    %250 = @func_4813(%248, %249) /* ty=(Tensor[(16, 13, 12), int8], Tensor[(3, 4, 13), float64]) */;
    %251 = @func_6630() /* ty=(Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */;
    %252 = %251.1;
    %253 = cast(%252, dtype="uint8") /* ty=Tensor[(60), uint8] */;
    %254 = cast(%var_7434, dtype="uint8") /* ty=uint8 */;
    %255 = %240.0;
    %256 = %241.0;
    %257 = %244.5;
    %258 = %245.0;
    %259 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
    %260 = %250.1;
    %261 = maximum(%253, %254) /* ty=Tensor[(60), uint8] */;
    (%255, %256, %257, meta[relay.Constant][14] /* ty=Tensor[(330), float32] */, %258, %259, %260, meta[relay.Constant][15] /* ty=Tensor[(2496), int8] */, %261)
  };
  %262(%var_7446) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(330), float32], Tensor[(3, 4, 13), bool], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float64], Tensor[(2496), int8], Tensor[(60), uint8]) */
}

def @func_2386() -> Tensor[(14, 3, 6), float64] {
  %263 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %263.0
}

def @func_7869() -> Tensor[(3, 4, 13), float64] {
  %265 = fn () -> Tensor[(3, 4, 13), float64] {
    %264 = @func_6607() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %264.0
  };
  %265() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_4418() -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(12, 60), int64], Tensor[(12, 60), uint32]) {
  %293 = fn () -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(12, 60), int64], Tensor[(12, 60), uint32]) {
    %266 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 60), float32] */, dtype="float32") /* ty=Tensor[(1, 60), float32] */;
    %267 = reshape(%266, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
    %268 = @func_2827(%267) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) */;
    %269 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 60), float32] */, dtype="int64") /* ty=Tensor[(1, 60), int64] */;
    %270 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 60), float32] */, dtype="int64") /* ty=Tensor[(12, 60), int64] */;
    %271 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
    %272 = erf(%271) /* ty=Tensor[(12, 60), float32] */;
    %273 = cast(%272, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
    %274 = cosh(%273) /* ty=Tensor[(12, 60), float32] */;
    %275 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 60), float32] */, dtype="int8") /* ty=Tensor[(1, 60), int8] */;
    %276 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 60), float32] */, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
    %277 = multiply(%275, %276) /* ty=Tensor[(12, 60), int8] */;
    %278 = cast(%277, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
    %279 = shape_of(%274, dtype="int32") /* ty=Tensor[(2), int32] */;
    %280 = cast(%274, dtype="float64") /* ty=Tensor[(12, 60), float64] */;
    %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %282 = mod(%280, %281) /* ty=Tensor[(12, 60), float64] */;
    %283 = cast(%282, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
    %284 = log2(%283) /* ty=Tensor[(12, 60), float32] */;
    %285 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 60), float32] */, dtype="uint32") /* ty=Tensor[(12, 60), uint32] */;
    %286 = shape_of(%284, dtype="int32") /* ty=Tensor[(2), int32] */;
    %287 = cast(%284, dtype="uint32") /* ty=Tensor[(12, 60), uint32] */;
    %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %289 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
    %290 = %268.1;
    %291 = subtract(%269, %270) /* ty=Tensor[(12, 60), int64] */;
    %292 = bitwise_and(%287, %288) /* ty=Tensor[(12, 60), uint32] */;
    (%289, %290, %291, %292)
  };
  %293() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(12, 60), int64], Tensor[(12, 60), uint32]) */
}

def @func_4666() -> (Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) {
  @func_4664() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) */
}

def @func_3715() -> (Tensor[(14, 3, 6), float64],) {
  @func_3713() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_2352() -> (Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) {
  %294 = cast(meta[relay.Constant][19] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %295 = reshape(%294, newshape=[6, 10]) /* ty=Tensor[(6, 10), float32] */;
  %296 = @func_2271(%295) /* ty=(Tensor[(6, 10), float32], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(5, 11, 6), float32], Tensor[(5, 66), float32], Tensor[(16, 6, 8), bool], Tensor[(768), uint8], Tensor[(2112), float32]) */;
  %297 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  %298 = %296.5;
  (%297, %298, meta[relay.Constant][19] /* ty=Tensor[(60), float32] */)
}

def @func_151(%var_150: Tensor[(12, 16, 11), float32]) -> Tensor[(12, 16, 11), float32] {
  %300 = fn (%var_144: Tensor[(12, 16, 11), float32]) -> Tensor[(12, 16, 11), float32] {
    %299 = cast(%var_144, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
    cosh(%299) /* ty=Tensor[(12, 16, 11), float32] */
  };
  %300(%var_150) /* ty=Tensor[(12, 16, 11), float32] */
}

def @func_5840(%var_5837: Tensor[(11, 16, 6), float32], %var_5838: Tensor[(11, 16, 6), float32], %var_5839: Tensor[(252), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(11, 16, 6), uint32], Tensor[(3, 4, 13), float32], Tensor[(16, 6, 8), float32], Tensor[(3, 4, 13), float64]) {
  %324 = fn (%var_5766: Tensor[(11, 16, 6), float32], %var_5767: Tensor[(11, 16, 6), float32], %var_5788: Tensor[(252), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(11, 16, 6), uint32], Tensor[(3, 4, 13), float32], Tensor[(16, 6, 8), float32], Tensor[(3, 4, 13), float64]) {
    %301 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
    %302 = cast(%var_5788, dtype="float64") /* ty=Tensor[(252), float64] */;
    %303 = reshape(%302, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
    %304 = @func_640(%303) /* ty=(Tensor[(6, 3, 14), float64],) */;
    %305 = cast(%var_5767, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
    %306 = shape_of(%var_5766, dtype="int32") /* ty=Tensor[(3), int32] */;
    %307 = cast(%var_5766, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
    %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %309 = greater_equal(%307, %308) /* ty=Tensor[(11, 16, 6), bool] */;
    %310 = cast(%309, dtype="uint32") /* ty=Tensor[(11, 16, 6), uint32] */;
    %311 = shape_of(%var_5766, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(%var_5766, dtype="uint32") /* ty=Tensor[(11, 16, 6), uint32] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %314 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %315 = %314.1;
    %316 = cast(%315, dtype="float32") /* ty=Tensor[(3, 4, 13), float32] */;
    %317 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %318 = %301.0;
    %319 = %304.0;
    %320 = bitwise_xor(%312, %313) /* ty=Tensor[(11, 16, 6), uint32] */;
    %321 = log10(%316) /* ty=Tensor[(3, 4, 13), float32] */;
    %322 = @func_5619() /* ty=Tensor[(16, 6, 8), float32] */;
    %323 = %317.0;
    (%318, %319, %var_5788, %320, %321, %322, %323)
  };
  %324(%var_5837, %var_5838, %var_5839) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(11, 16, 6), uint32], Tensor[(3, 4, 13), float32], Tensor[(16, 6, 8), float32], Tensor[(3, 4, 13), float64]) */
}

def @func_4816(%var_4814: int8, %var_4815: Tensor[(16, 13, 12), int8]) -> (Tensor[(16, 13, 12), int8], Tensor[(3, 4, 13), float64]) {
  %330 = fn (%var_4794: int8, %var_4795: Tensor[(16, 13, 12), int8]) -> (Tensor[(16, 13, 12), int8], Tensor[(3, 4, 13), float64]) {
    %325 = cast(%var_4794, dtype="int8") /* ty=int8 */;
    %326 = cast(%var_4795, dtype="int8") /* ty=Tensor[(16, 13, 12), int8] */;
    %327 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %328 = bitwise_and(%325, %326) /* ty=Tensor[(16, 13, 12), int8] */;
    %329 = %327.0;
    (%328, %329)
  };
  %330(%var_4814, %var_4815) /* ty=(Tensor[(16, 13, 12), int8], Tensor[(3, 4, 13), float64]) */
}

def @func_2544(%var_2534: Tensor[(273, 1), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(273, 1), float64]) {
  %331 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %332 = cast(%var_2534, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
  %333 = cast(%var_2534, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
  %334 = reshape(%332, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %335 = reshape(%333, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %336 = @func_1283(%334, %335) /* ty=(Tensor[(7, 3, 13), float64],) */;
  %337 = %331.0;
  %338 = %336.0;
  (%337, %338, %var_2534)
}

def @func_2547(%var_2545: Tensor[(273, 1), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(273, 1), float64]) {
  @func_2544(%var_2545) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(273, 1), float64]) */
}

def @func_2640() -> Tensor[(14, 3, 6), float64] {
  %339 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %339.0
}

def @func_8321() -> (Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) {
  %340 = @func_4333() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(60), float32]) */;
  %341 = %340.1;
  %342 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
  (%341, %342)
}

def @func_3599() -> Tensor[(3, 4, 13), float32] {
  @func_3597() /* ty=Tensor[(3, 4, 13), float32] */
}

def @func_4743() -> (Tensor[(3, 4, 13), bool],) {
  %343 = @func_4712() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %344 = %343.0;
  (%344,)
}

def @func_1283(%var_1271: Tensor[(7, 3, 13), float64], %var_1272: Tensor[(7, 3, 13), float64]) -> (Tensor[(7, 3, 13), float64],) {
  %345 = cast(%var_1272, dtype="float64") /* ty=Tensor[(7, 3, 13), float64] */;
  %346 = shape_of(%var_1271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%var_1271, dtype="float64") /* ty=Tensor[(7, 3, 13), float64] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %349 = mod(%347, %348) /* ty=Tensor[(7, 3, 13), float64] */;
  (%349,)
}

def @func_2924() -> (Tensor[(14, 3, 6), float64],) {
  %350 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %351 = %350.0;
  (%351,)
}

def @func_7122() -> (Tensor[(14, 3, 6), float64],) {
  %353 = fn () -> (Tensor[(14, 3, 6), float64],) {
    %352 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
    (%352,)
  };
  %353() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_8196() -> (Tensor[(14, 3, 6), float64],) {
  @func_8194() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_1626() -> (Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) {
  %354 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(3, 4, 13), float64] */;
  %355 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 4, 13), float64] */, dtype="float32") /* ty=Tensor[(3, 4, 13), float32] */;
  %356 = cos(%354) /* ty=Tensor[(3, 4, 13), float64] */;
  %357 = exp(%355) /* ty=Tensor[(3, 4, 13), float32] */;
  (%356, %357)
}

def @func_4712() -> (Tensor[(3, 4, 13), bool],) {
  %358 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %359 = %358.0;
  %360 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 4, 13), float64] */, dtype="bool") /* ty=Tensor[(3, 4, 13), bool] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="bool") /* ty=Tensor[(3, 4, 13), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = less(%362, %363) /* ty=Tensor[(3, 4, 13), bool] */;
  (%364,)
}

def @func_7758() -> (Tensor[(2, 12, 5), float32],) {
  %365 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  (%365,)
}

def @func_8302() -> (Tensor[(14, 3, 6), float64],) {
  %366 = @func_8194() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %367 = %366.0;
  (%367,)
}

def @func_7702() -> Tensor[(3, 4, 13), bool] {
  %369 = fn () -> Tensor[(3, 4, 13), bool] {
    %368 = @func_5468() /* ty=(Tensor[(3, 4, 13), bool],) */;
    %368.0
  };
  %369() /* ty=Tensor[(3, 4, 13), bool] */
}

def @func_2354() -> (Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) {
  @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */
}

def @func_3012(%var_3010: Tensor[(3, 4, 13), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), bool], Tensor[(3, 4, 13), uint16]) {
  @func_3009(%var_3010) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), bool], Tensor[(3, 4, 13), uint16]) */
}

def @func_6986() -> Tensor[(3, 4, 13), float64] {
  %371 = fn () -> Tensor[(3, 4, 13), float64] {
    %370 = @func_4532() /* ty=(Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
    %370.1
  };
  %371() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_5656(%var_5644: Tensor[(3, 16, 15), float32]) -> (Tensor[(3, 16, 15), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(165), float64]) {
  %372 = cast(%var_5644, dtype="float32") /* ty=Tensor[(3, 16, 15), float32] */;
  %373 = cast(3.00081f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %374 = cast(meta[relay.Constant][22] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
  %375 = reshape(%373, newshape=[]) /* ty=float64 */;
  %376 = reshape(%374, newshape=[1, 15, 11]) /* ty=Tensor[(1, 15, 11), float64] */;
  %377 = asin(%372) /* ty=Tensor[(3, 16, 15), float32] */;
  %378 = @func_1551(%375, %376) /* ty=Tensor[(1, 15, 11), float64] */;
  (%377, %378, 3.00081f64 /* ty=float64 */, meta[relay.Constant][22] /* ty=Tensor[(165), float64] */)
}

def @func_8103(%var_8099: Tensor[(165), float64], %var_8100: Tensor[(1, 330), float32], %var_8101: Tensor[(1248), float32], %var_8102: Tensor[(273), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], float64, Tensor[(165), float64], Tensor[(704), uint16], Tensor[(1, 330), float32], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(273), float64], Tensor[(22, 5), float64]) {
  @func_8097(%var_8099, %var_8100, %var_8101, %var_8102) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], float64, Tensor[(165), float64], Tensor[(704), uint16], Tensor[(1, 330), float32], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(273), float64], Tensor[(22, 5), float64]) */
}

def @func_3597() -> Tensor[(3, 4, 13), float32] {
  %379 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %379.1
}

def @func_5200() -> (Tensor[(16, 6, 8), bool],) {
  %380 = @func_3811() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(273, 1), float64], Tensor[(16, 6, 8), bool], Tensor[(3, 4, 13), float64]) */;
  %381 = %380.2;
  (%381,)
}

def @func_5015(%var_5014: Tensor[(273, 7), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(273, 7), bool], Tensor[(273, 1), float64]) {
  %390 = fn (%var_4981: Tensor[(273, 7), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(273, 7), bool], Tensor[(273, 1), float64]) {
    %382 = @func_3811() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(273, 1), float64], Tensor[(16, 6, 8), bool], Tensor[(3, 4, 13), float64]) */;
    %383 = %382.1;
    %384 = cast(%383, dtype="bool") /* ty=Tensor[(273, 1), bool] */;
    %385 = cast(%var_4981, dtype="bool") /* ty=Tensor[(273, 7), bool] */;
    %386 = cast(%383, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
    %387 = @func_3830() /* ty=Tensor[(3, 4, 13), float64] */;
    %388 = less(%384, %385) /* ty=Tensor[(273, 7), bool] */;
    %389 = asin(%386) /* ty=Tensor[(273, 1), float64] */;
    (%387, %388, %389)
  };
  %390(%var_5014) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(273, 7), bool], Tensor[(273, 1), float64]) */
}

def @func_8276() -> (Tensor[(3, 4, 13), float64],) {
  @func_8274() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_3888(%var_3886: Tensor[(330), float32]) -> (Tensor[(273, 1), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(330), float32], Tensor[(252), float32], Tensor[(3, 4, 13), float64]) {
  @func_3885(%var_3886) /* ty=(Tensor[(273, 1), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(330), float32], Tensor[(252), float32], Tensor[(3, 4, 13), float64]) */
}

def @func_7647(%var_7621: Tensor[(1248), float32]) -> (Tensor[(3, 4, 13), float32], Tensor[(330), float32], Tensor[(704), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(3, 4, 13), float64]) {
  %391 = cast(meta[relay.Constant][23] /* ty=Tensor[(704), uint16] */, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %392 = cast(meta[relay.Constant][23] /* ty=Tensor[(704), uint16] */, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %393 = cast(meta[relay.Constant][24] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %394 = cast(%var_7621, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %395 = reshape(%391, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %396 = reshape(%392, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %397 = reshape(%393, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %398 = reshape(%394, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %399 = @func_1097(%395, %396, %397, %398) /* ty=(Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) */;
  %400 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %401 = @func_3597() /* ty=Tensor[(3, 4, 13), float32] */;
  %402 = %399.2;
  %403 = %400.1;
  (%401, %402, meta[relay.Constant][23] /* ty=Tensor[(704), uint16] */, meta[relay.Constant][24] /* ty=Tensor[(330), float32] */, %var_7621, %403)
}

def @func_8894() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64]) {
  %407 = fn () -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64]) {
    %404 = @func_5410() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %405 = %404.0;
    %406 = @func_8854() /* ty=Tensor[(14, 3, 6), float64] */;
    (%405, %406)
  };
  %407() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64]) */
}

def @func_7560() -> Tensor[(3, 4, 13), float64] {
  @func_7558() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_8128() -> (Tensor[(3, 4, 13), bool],) {
  %408 = @func_4712() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %409 = %408.0;
  (%409,)
}

def @func_8007() -> (Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), float32]) {
  %410 = @func_6440() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) */;
  %411 = %410.1;
  %412 = @func_5619() /* ty=Tensor[(16, 6, 8), float32] */;
  (%411, %412)
}

def @func_2624(%var_2581: float64, %var_2582: Tensor[(165), float64], %var_2599: Tensor[(2, 352), uint16], %var_2600: Tensor[(330), float32], %var_2601: Tensor[(1248), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) {
  %413 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %414 = cast(%var_2581, dtype="float64") /* ty=float64 */;
  %415 = cast(%var_2582, dtype="float64") /* ty=Tensor[(165), float64] */;
  %416 = reshape(%414, newshape=[]) /* ty=float64 */;
  %417 = reshape(%415, newshape=[1, 15, 11]) /* ty=Tensor[(1, 15, 11), float64] */;
  %418 = @func_1551(%416, %417) /* ty=Tensor[(1, 15, 11), float64] */;
  %419 = cast(%var_2582, dtype="uint32") /* ty=Tensor[(165), uint32] */;
  %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%418, dtype="uint32") /* ty=Tensor[(1, 15, 11), uint32] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %423 = cast(%var_2582, dtype="uint64") /* ty=Tensor[(165), uint64] */;
  %424 = cast(%var_2581, dtype="uint64") /* ty=uint64 */;
  %425 = cast(%var_2599, dtype="uint16") /* ty=Tensor[(2, 352), uint16] */;
  %426 = cast(%var_2599, dtype="uint16") /* ty=Tensor[(2, 352), uint16] */;
  %427 = cast(%var_2600, dtype="float32") /* ty=Tensor[(330), float32] */;
  %428 = cast(%var_2601, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %429 = reshape(%425, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %430 = reshape(%426, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %431 = reshape(%427, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %432 = reshape(%428, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %433 = @func_1097(%429, %430, %431, %432) /* ty=(Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) */;
  %434 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %435 = cast(%var_2599, dtype="uint16") /* ty=Tensor[(2, 352), uint16] */;
  %436 = cast(%var_2599, dtype="uint16") /* ty=Tensor[(2, 352), uint16] */;
  %437 = cast(%var_2600, dtype="float32") /* ty=Tensor[(330), float32] */;
  %438 = cast(%var_2601, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %439 = reshape(%435, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %440 = reshape(%436, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), uint16] */;
  %441 = reshape(%437, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %442 = reshape(%438, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %443 = @func_1097(%439, %440, %441, %442) /* ty=(Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) */;
  %444 = cast(meta[relay.Constant][25] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %445 = reshape(%444, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
  %446 = %413.0;
  %447 = bitwise_and(%421, %422) /* ty=Tensor[(?, 15, 11), uint32] */;
  %448 = logical_xor(%423, %424) /* ty=Tensor[(165), uint64] */;
  %449 = %433.2;
  %450 = %434.0;
  %451 = %443.0;
  %452 = @func_149(%445) /* ty=Tensor[(12, 16, 11), float32] */;
  (%446, %447, %448, %449, %var_2599, %var_2600, %var_2601, %450, %451, %452, meta[relay.Constant][25] /* ty=Tensor[(2112), float32] */)
}

def @func_1881() -> Tensor[(2, 12, 5), float32] {
  @func_1879() /* ty=Tensor[(2, 12, 5), float32] */
}

def @func_5578(%var_5577: Tensor[(252), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(2, 12, 5), float32], Tensor[(60), float32], Tensor[(5, 11, 6), float32], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(16, 6, 8), float64]) {
  %480 = fn (%var_5559: Tensor[(252), float64]) -> (Tensor[(3, 4, 13), float64], Tensor[(2, 12, 5), float32], Tensor[(60), float32], Tensor[(5, 11, 6), float32], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(16, 6, 8), float64]) {
    %453 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
    %454 = cast(meta[relay.Constant][26] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %455 = reshape(%454, newshape=[60]) /* ty=Tensor[(60), float32] */;
    %456 = @func_3934(%455) /* ty=(Tensor[(2, 12, 5), float32], Tensor[(15, 4), float32], Tensor[(60), float32]) */;
    %457 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
    %458 = %457.1;
    %459 = cast(%458, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
    %460 = cast(%var_5559, dtype="float64") /* ty=Tensor[(252), float64] */;
    %461 = cast(%458, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
    %462 = cast(%458, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
    %463 = cast(meta[relay.Constant][27] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %464 = reshape(%459, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
    %465 = reshape(%460, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %466 = reshape(%461, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), float64] */;
    %467 = reshape(%462, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
    %468 = reshape(%463, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %469 = @func_1044(%464, %465, %466, %467, %468) /* ty=(Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) */;
    %470 = @func_5200() /* ty=(Tensor[(16, 6, 8), bool],) */;
    %471 = %470.0;
    %472 = cast(%458, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
    %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
    %474 = cast(%471, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
    %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %476 = %453.0;
    %477 = %456.0;
    %478 = %469.13;
    %479 = floor_mod(%474, %475) /* ty=Tensor[(16, 6, 8), float64] */;
    (%476, %477, meta[relay.Constant][26] /* ty=Tensor[(60), float32] */, %478, %var_5559, meta[relay.Constant][27] /* ty=Tensor[(2112), float32] */, %479)
  };
  %480(%var_5577) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(2, 12, 5), float32], Tensor[(60), float32], Tensor[(5, 11, 6), float32], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(16, 6, 8), float64]) */
}

def @func_3179() -> Tensor[(14, 3, 6), float64] {
  %481 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %481.0
}

def @func_8355() -> Tensor[(60), float32] {
  @func_8353() /* ty=Tensor[(60), float32] */
}

def @func_5468() -> (Tensor[(3, 4, 13), bool],) {
  %482 = @func_4712() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %483 = %482.0;
  (%483,)
}

def @func_6746(%var_6744: Tensor[(9, 2, 9), bool], %var_6745: Tensor[(9, 2, 9), bool]) -> (Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), float64]) {
  %504 = fn (%var_6686: Tensor[(9, 2, 9), bool], %var_6687: Tensor[(9, 2, 9), bool]) -> (Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), float64]) {
    %484 = cast(%var_6687, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
    %485 = shape_of(%var_6686, dtype="int32") /* ty=Tensor[(3), int32] */;
    %486 = cast(%var_6686, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
    %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %488 = cast(%var_6686, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
    %489 = shape_of(%var_6687, dtype="int32") /* ty=Tensor[(3), int32] */;
    %490 = cast(%var_6687, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
    %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %492 = cast(%var_6687, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
    %493 = shape_of(%var_6686, dtype="int32") /* ty=Tensor[(3), int32] */;
    %494 = cast(%var_6686, dtype="bool") /* ty=Tensor[(9, 2, 9), bool] */;
    %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %496 = cast(%var_6686, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
    %497 = shape_of(%var_6687, dtype="int32") /* ty=Tensor[(3), int32] */;
    %498 = cast(%var_6687, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
    %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %500 = logical_or(%486, %487) /* ty=Tensor[(9, 2, 9), bool] */;
    %501 = less(%490, %491) /* ty=Tensor[(9, 2, 9), bool] */;
    %502 = equal(%494, %495) /* ty=Tensor[(9, 2, 9), bool] */;
    %503 = divide(%498, %499) /* ty=Tensor[(9, 2, 9), float64] */;
    (%500, %501, %502, %503)
  };
  %504(%var_6744, %var_6745) /* ty=(Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), bool], Tensor[(9, 2, 9), float64]) */
}

def @func_8537() -> (Tensor[(3, 4, 13), float64],) {
  %507 = fn () -> (Tensor[(3, 4, 13), float64],) {
    %505 = @func_6607() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %506 = %505.0;
    (%506,)
  };
  %507() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @main(%var_8896: Tensor[(6, 7, 14), uint8], %var_8902: Tensor[(6, 7, 14), uint8]) -> (Tensor[(6, 7, 14), bool], Tensor[(6, 7, 14), float64]) {
  %508 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 1, 14), uint8] */, dtype="uint8") /* ty=Tensor[(6, 1, 14), uint8] */;
  %509 = cast(%var_8896, dtype="uint8") /* ty=Tensor[(6, 7, 14), uint8] */;
  %510 = bitwise_xor(%508, %509) /* ty=Tensor[(6, 7, 14), uint8] */;
  %511 = cast(%var_8902, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%510, dtype="bool") /* ty=Tensor[(6, 7, 14), bool] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %515 = cast(%510, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %516 = logical_and(%513, %514) /* ty=Tensor[(6, 7, 14), bool] */;
  %517 = log2(%515) /* ty=Tensor[(6, 7, 14), float64] */;
  (%516, %517)
}

def @func_642(%var_641: Tensor[(6, 3, 14), float64]) -> (Tensor[(6, 3, 14), float64],) {
  %520 = fn (%var_635: Tensor[(6, 3, 14), float64]) -> (Tensor[(6, 3, 14), float64],) {
    %518 = cast(%var_635, dtype="float64") /* ty=Tensor[(6, 3, 14), float64] */;
    %519 = exp(%518) /* ty=Tensor[(6, 3, 14), float64] */;
    (%519,)
  };
  %520(%var_641) /* ty=(Tensor[(6, 3, 14), float64],) */
}

def @func_5237(%var_5235: Tensor[(3, 12, 2), float64], %var_5236: Tensor[(3, 12, 2), float32]) -> Tensor[(3, 12, 2), bool] {
  @func_5233(%var_5235, %var_5236) /* ty=Tensor[(3, 12, 2), bool] */
}

def @func_5619() -> Tensor[(16, 6, 8), float32] {
  %521 = @func_5200() /* ty=(Tensor[(16, 6, 8), bool],) */;
  %522 = %521.0;
  %523 = cast(%522, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
  %524 = asin(%523) /* ty=Tensor[(16, 6, 8), float64] */;
  %525 = cast(%524, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
  log10(%525) /* ty=Tensor[(16, 6, 8), float32] */
}

def @func_3647() -> (Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) {
  %535 = fn () -> (Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) {
    %526 = @func_3563() /* ty=(Tensor[(2, 12, 5), float32],) */;
    %527 = %526.0;
    %528 = cast(%527, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
    %529 = cast(meta[relay.Constant][29] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %530 = reshape(%529, newshape=[273, 1]) /* ty=Tensor[(273, 1), float64] */;
    %531 = @func_2544(%530) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(273, 1), float64]) */;
    %532 = sigmoid(%528) /* ty=Tensor[(2, 12, 5), float64] */;
    %533 = @func_3597() /* ty=Tensor[(3, 4, 13), float32] */;
    %534 = %531.2;
    (%532, %533, %534, meta[relay.Constant][29] /* ty=Tensor[(273), float64] */)
  };
  %535() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) */
}

def @func_5288() -> Tensor[(3, 4, 13), float64] {
  @func_2205() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_2154() -> (Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) {
  %540 = fn () -> (Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) {
    %536 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %537 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %538 = %536.0;
    %539 = %537.1;
    (%538, %539)
  };
  %540() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */
}

def @func_8171(%var_8151: Tensor[(5, 13, 6), int32], %var_8152: Tensor[(5, 13, 6), int32], %var_8169: Tensor[(252), float64]) -> (Tensor[(5, 13, 6), int32], Tensor[(3, 4, 13), float64], Tensor[(5, 13, 6), bool], Tensor[(126, 2), uint64], Tensor[(252), float64]) {
  %541 = cast(%var_8152, dtype="int32") /* ty=Tensor[(5, 13, 6), int32] */;
  %542 = shape_of(%var_8151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%var_8151, dtype="int32") /* ty=Tensor[(5, 13, 6), int32] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %545 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %546 = cast(%var_8151, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %547 = shape_of(%var_8152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%var_8152, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %550 = cast(%var_8169, dtype="float64") /* ty=Tensor[(252), float64] */;
  %551 = reshape(%550, newshape=[126, 2]) /* ty=Tensor[(126, 2), float64] */;
  %552 = @func_2436(%551) /* ty=(Tensor[(60), float32], Tensor[(6, 3, 14), float64], Tensor[(126, 2), uint64], Tensor[(2, 12, 5), float32]) */;
  %553 = left_shift(%543, %544) /* ty=Tensor[(5, 13, 6), int32] */;
  %554 = %545.0;
  %555 = logical_or(%548, %549) /* ty=Tensor[(5, 13, 6), bool] */;
  %556 = %552.2;
  (%553, %554, %555, %556, %var_8169)
}

def @func_3813() -> (Tensor[(14, 3, 6), float64], Tensor[(273, 1), float64], Tensor[(16, 6, 8), bool], Tensor[(3, 4, 13), float64]) {
  @func_3811() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(273, 1), float64], Tensor[(16, 6, 8), bool], Tensor[(3, 4, 13), float64]) */
}

def @func_1551(%var_1546: float64, %var_1547: Tensor[(1, 15, 11), float64]) -> Tensor[(1, 15, 11), float64] {
  %557 = cast(%var_1546, dtype="float64") /* ty=float64 */;
  %558 = cast(%var_1547, dtype="float64") /* ty=Tensor[(1, 15, 11), float64] */;
  multiply(%557, %558) /* ty=Tensor[(1, 15, 11), float64] */
}

def @func_6952() -> (Tensor[(3, 4, 13), float64],) {
  @func_6950() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_3741() -> Tensor[(3, 4, 13), float64] {
  @func_3739() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_4714() -> (Tensor[(3, 4, 13), bool],) {
  @func_4712() /* ty=(Tensor[(3, 4, 13), bool],) */
}

def @func_4087(%var_4086: Tensor[(2112), float32]) -> (Tensor[(2, 12, 5), float32], Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) {
  %564 = fn (%var_4073: Tensor[(2112), float32]) -> (Tensor[(2, 12, 5), float32], Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) {
    %559 = cast(%var_4073, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %560 = reshape(%559, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
    %561 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
    %562 = @func_3179() /* ty=Tensor[(14, 3, 6), float64] */;
    %563 = @func_149(%560) /* ty=Tensor[(12, 16, 11), float32] */;
    (%561, %562, %563, %var_4073)
  };
  %564(%var_4086) /* ty=(Tensor[(2, 12, 5), float32], Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */
}

def @func_3936(%var_3935: Tensor[(60), float32]) -> (Tensor[(2, 12, 5), float32], Tensor[(15, 4), float32], Tensor[(60), float32]) {
  %570 = fn (%var_3929: Tensor[(60), float32]) -> (Tensor[(2, 12, 5), float32], Tensor[(15, 4), float32], Tensor[(60), float32]) {
    %565 = cast(%var_3929, dtype="float32") /* ty=Tensor[(60), float32] */;
    %566 = reshape(%565, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
    %567 = @func_2827(%566) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) */;
    %568 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
    %569 = %567.3;
    (%568, %569, %var_3929)
  };
  %570(%var_3935) /* ty=(Tensor[(2, 12, 5), float32], Tensor[(15, 4), float32], Tensor[(60), float32]) */
}

def @func_1784() -> (Tensor[(14, 3, 6), float64],) {
  %573 = fn () -> (Tensor[(14, 3, 6), float64],) {
    %571 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %572 = %571.0;
    (%572,)
  };
  %573() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_3885(%var_3856: Tensor[(330), float32]) -> (Tensor[(273, 1), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(330), float32], Tensor[(252), float32], Tensor[(3, 4, 13), float64]) {
  %574 = @func_3646() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) */;
  %575 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %576 = cast(%var_3856, dtype="float32") /* ty=Tensor[(330), float32] */;
  %577 = %575.0;
  %578 = cast(%577, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
  %579 = reshape(%576, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
  %580 = reshape(%578, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %581 = @func_726(%579, %580) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
  %582 = %581.2;
  %583 = cast(%582, dtype="float32") /* ty=Tensor[(252), float32] */;
  %584 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %585 = %574.2;
  %586 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
  %587 = sqrt(%583) /* ty=Tensor[(252), float32] */;
  %588 = %584.0;
  (%585, %577, %586, %var_3856, %587, %588)
}

def @func_3592() -> (Tensor[(3, 4, 13), float64],) {
  @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_3009(%var_2995: Tensor[(3, 4, 13), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), bool], Tensor[(3, 4, 13), uint16]) {
  %589 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %590 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %591 = %590.0;
  %592 = cast(%var_2995, dtype="bool") /* ty=Tensor[(3, 4, 13), bool] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="bool") /* ty=Tensor[(3, 4, 13), bool] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %596 = cast(%591, dtype="uint16") /* ty=Tensor[(3, 4, 13), uint16] */;
  %597 = shape_of(%var_2995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%var_2995, dtype="uint16") /* ty=Tensor[(3, 4, 13), uint16] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %600 = %589.0;
  %601 = logical_and(%594, %595) /* ty=Tensor[(3, 4, 13), bool] */;
  %602 = left_shift(%598, %599) /* ty=Tensor[(3, 4, 13), uint16] */;
  (%600, %601, %602)
}

def @func_6123(%var_6119: Tensor[(15, 5, 11), float32], %var_6120: float64, %var_6121: Tensor[(165), float64], %var_6122: Tensor[(15, 5, 11), float32]) -> (Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(15, 5, 11), float32], Tensor[(330), float32], float64, Tensor[(165), float64], Tensor[(352, 2), uint16], Tensor[(330, 1), float32], Tensor[(1248), float32], Tensor[(15, 5, 11), uint64]) {
  %628 = fn (%var_6064: Tensor[(15, 5, 11), float32], %var_6103: float64, %var_6104: Tensor[(165), float64], %var_6110: Tensor[(15, 5, 11), float32]) -> (Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(15, 5, 11), float32], Tensor[(330), float32], float64, Tensor[(165), float64], Tensor[(352, 2), uint16], Tensor[(330, 1), float32], Tensor[(1248), float32], Tensor[(15, 5, 11), uint64]) {
    %603 = cast(%var_6064, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
    %604 = log2(%603) /* ty=Tensor[(15, 5, 11), float32] */;
    %605 = cast(%604, dtype="float64") /* ty=Tensor[(15, 5, 11), float64] */;
    %606 = atan(%605) /* ty=Tensor[(15, 5, 11), float64] */;
    %607 = cast(%606, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
    %608 = cast(%var_6103, dtype="float64") /* ty=float64 */;
    %609 = cast(%var_6104, dtype="float64") /* ty=Tensor[(165), float64] */;
    %610 = cast(meta[relay.Constant][30] /* ty=Tensor[(352, 2), uint16] */, dtype="uint16") /* ty=Tensor[(352, 2), uint16] */;
    %611 = cast(meta[relay.Constant][31] /* ty=Tensor[(330, 1), float32] */, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
    %612 = cast(meta[relay.Constant][32] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
    %613 = reshape(%608, newshape=[]) /* ty=float64 */;
    %614 = reshape(%609, newshape=[165]) /* ty=Tensor[(165), float64] */;
    %615 = reshape(%610, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
    %616 = reshape(%611, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %617 = reshape(%612, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
    %618 = @func_2624(%613, %614, %615, %616, %617) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
    %619 = cast(%var_6110, dtype="uint64") /* ty=Tensor[(15, 5, 11), uint64] */;
    %620 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
    %621 = cast(%604, dtype="uint64") /* ty=Tensor[(15, 5, 11), uint64] */;
    %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %623 = @func_5455() /* ty=Tensor[(3, 4, 13), float32] */;
    %624 = @func_3739() /* ty=Tensor[(3, 4, 13), float64] */;
    %625 = acosh(%607) /* ty=Tensor[(15, 5, 11), float32] */;
    %626 = %618.3;
    %627 = multiply(%621, %622) /* ty=Tensor[(15, 5, 11), uint64] */;
    (%623, %624, %625, %626, %var_6103, %var_6104, meta[relay.Constant][30] /* ty=Tensor[(352, 2), uint16] */, meta[relay.Constant][31] /* ty=Tensor[(330, 1), float32] */, meta[relay.Constant][32] /* ty=Tensor[(1248), float32] */, %627)
  };
  %628(%var_6119, %var_6120, %var_6121, %var_6122) /* ty=(Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(15, 5, 11), float32], Tensor[(330), float32], float64, Tensor[(165), float64], Tensor[(352, 2), uint16], Tensor[(330, 1), float32], Tensor[(1248), float32], Tensor[(15, 5, 11), uint64]) */
}

def @func_8009() -> (Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), float32]) {
  @func_8007() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), float32]) */
}

def @func_4251() -> (Tensor[(3, 4, 13), float64],) {
  %629 = @func_4016() /* ty=(Tensor[(60), float32], Tensor[(3, 4, 13), float64]) */;
  %630 = %629.1;
  (%630,)
}

def @func_7518() -> (Tensor[(2112), float32], Tensor[(2, 12, 5), float32], Tensor[(60), float32]) {
  @func_7516() /* ty=(Tensor[(2112), float32], Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */
}

def @func_3156(%var_3155: Tensor[(273), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(7, 3, 13), float64], Tensor[(273), float64]) {
  %641 = fn (%var_3147: Tensor[(273), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(7, 3, 13), float64], Tensor[(273), float64]) {
    %631 = @func_2706() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) */;
    %632 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %633 = cast(%var_3147, dtype="float64") /* ty=Tensor[(273), float64] */;
    %634 = cast(%var_3147, dtype="float64") /* ty=Tensor[(273), float64] */;
    %635 = reshape(%633, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
    %636 = reshape(%634, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
    %637 = @func_1283(%635, %636) /* ty=(Tensor[(7, 3, 13), float64],) */;
    %638 = %631.0;
    %639 = %632.1;
    %640 = %637.0;
    (%638, %639, %640, %var_3147)
  };
  %641(%var_3155) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(7, 3, 13), float64], Tensor[(273), float64]) */
}

def @func_4664() -> (Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) {
  %642 = @func_4625() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %643 = @func_3713() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %644 = %642.0;
  %645 = %643.0;
  (%644, %645)
}

def @func_3316() -> (Tensor[(3, 4, 13), float64],) {
  %647 = fn () -> (Tensor[(3, 4, 13), float64],) {
    %646 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
    (%646,)
  };
  %647() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_8818(%var_8816: Tensor[(900), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(15, 12, 5), float32], Tensor[(900), float32]) {
  @func_8815(%var_8816) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(15, 12, 5), float32], Tensor[(900), float32]) */
}

def @func_2829(%var_2828: Tensor[(15, 4), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) {
  %656 = fn (%var_2822: Tensor[(15, 4), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) {
    %648 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %649 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %650 = cast(%var_2822, dtype="float32") /* ty=Tensor[(15, 4), float32] */;
    %651 = reshape(%650, newshape=[6, 10]) /* ty=Tensor[(6, 10), float32] */;
    %652 = @func_2271(%651) /* ty=(Tensor[(6, 10), float32], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(5, 11, 6), float32], Tensor[(5, 66), float32], Tensor[(16, 6, 8), bool], Tensor[(768), uint8], Tensor[(2112), float32]) */;
    %653 = %648.0;
    %654 = %649.0;
    %655 = %652.0;
    (%653, %654, %655, %var_2822)
  };
  %656(%var_2828) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) */
}

def @func_5133() -> (Tensor[(60), float32],) {
  @func_5131() /* ty=(Tensor[(60), float32],) */
}

def @func_6441() -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) {
  %660 = fn () -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) {
    %657 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %658 = %657.0;
    %659 = @func_5288() /* ty=Tensor[(3, 4, 13), float64] */;
    (%658, %659)
  };
  %660() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) */
}

def @func_2100() -> (Tensor[(3, 4, 13), float64],) {
  %663 = fn () -> (Tensor[(3, 4, 13), float64],) {
    %661 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %662 = %661.0;
    (%662,)
  };
  %663() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_6176(%var_6148: Tensor[(720), float32], %var_6154: Tensor[(768), uint8]) -> (Tensor[(60), float32], float64, Tensor[(720), float32], Tensor[(5, 11, 6), float32], Tensor[(768), uint8], Tensor[(252, 1), float64], Tensor[(2, 1056), float32], Tensor[(3, 4, 13), float64]) {
  %664 = @func_4333() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(60), float32]) */;
  %665 = cast(%var_6148, dtype="float32") /* ty=Tensor[(720), float32] */;
  %666 = reshape(%665, newshape=[3, 16, 15]) /* ty=Tensor[(3, 16, 15), float32] */;
  %667 = @func_5656(%666) /* ty=(Tensor[(3, 16, 15), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(165), float64]) */;
  %668 = cast(%var_6154, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %669 = cast(meta[relay.Constant][33] /* ty=Tensor[(252, 1), float64] */, dtype="float64") /* ty=Tensor[(252, 1), float64] */;
  %670 = cast(%var_6154, dtype="float64") /* ty=Tensor[(768), float64] */;
  %671 = cast(%var_6154, dtype="uint8") /* ty=Tensor[(768), uint8] */;
  %672 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 1056), float32] */, dtype="float32") /* ty=Tensor[(2, 1056), float32] */;
  %673 = reshape(%668, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %674 = reshape(%669, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %675 = reshape(%670, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), float64] */;
  %676 = reshape(%671, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
  %677 = reshape(%672, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %678 = @func_1044(%673, %674, %675, %676, %677) /* ty=(Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) */;
  %679 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %680 = %664.3;
  %681 = %667.2;
  %682 = %678.13;
  %683 = %679.0;
  (%680, %681, %var_6148, %682, %var_6154, meta[relay.Constant][33] /* ty=Tensor[(252, 1), float64] */, meta[relay.Constant][34] /* ty=Tensor[(2, 1056), float32] */, %683)
}

def @func_5659(%var_5657: Tensor[(3, 16, 15), float32]) -> (Tensor[(3, 16, 15), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(165), float64]) {
  @func_5656(%var_5657) /* ty=(Tensor[(3, 16, 15), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(165), float64]) */
}

def @func_5470() -> (Tensor[(3, 4, 13), bool],) {
  @func_5468() /* ty=(Tensor[(3, 4, 13), bool],) */
}

def @func_7189(%var_7181: int8) -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(16, 13, 12), int8], int8, Tensor[(2496), int8]) {
  %684 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %685 = @func_3713() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %686 = @func_5933() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], Tensor[(2112), float32]) */;
  %687 = cast(%var_7181, dtype="int8") /* ty=int8 */;
  %688 = cast(meta[relay.Constant][35] /* ty=Tensor[(2496), int8] */, dtype="int8") /* ty=Tensor[(2496), int8] */;
  %689 = reshape(%687, newshape=[]) /* ty=int8 */;
  %690 = reshape(%688, newshape=[16, 13, 12]) /* ty=Tensor[(16, 13, 12), int8] */;
  %691 = @func_4813(%689, %690) /* ty=(Tensor[(16, 13, 12), int8], Tensor[(3, 4, 13), float64]) */;
  %692 = %684.0;
  %693 = %685.0;
  %694 = %686.2;
  %695 = %691.0;
  (%692, %693, %694, %695, %var_7181, meta[relay.Constant][35] /* ty=Tensor[(2496), int8] */)
}

def @func_1102(%var_1098: Tensor[(4, 11, 16), uint16], %var_1099: Tensor[(4, 11, 16), uint16], %var_1100: Tensor[(330), float32], %var_1101: Tensor[(1248), float32]) -> (Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) {
  %717 = fn (%var_1066: Tensor[(4, 11, 16), uint16], %var_1067: Tensor[(4, 11, 16), uint16], %var_1080: Tensor[(330), float32], %var_1089: Tensor[(1248), float32]) -> (Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) {
    %696 = cast(%var_1067, dtype="uint16") /* ty=Tensor[(4, 11, 16), uint16] */;
    %697 = shape_of(%var_1066, dtype="int32") /* ty=Tensor[(3), int32] */;
    %698 = cast(%var_1066, dtype="uint16") /* ty=Tensor[(4, 11, 16), uint16] */;
    %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %700 = cast(%var_1080, dtype="float32") /* ty=Tensor[(330), float32] */;
    %701 = cast(meta[relay.Constant][36] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %702 = reshape(%700, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
    %703 = reshape(%701, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %704 = @func_726(%702, %703) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
    %705 = cast(%var_1089, dtype="float32") /* ty=Tensor[(1248), float32] */;
    %706 = cast(%var_1080, dtype="float32") /* ty=Tensor[(330), float32] */;
    %707 = reshape(%705, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float32] */;
    %708 = reshape(%706, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %709 = @func_790(%707, %708) /* ty=(Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) */;
    %710 = %704.3;
    %711 = cast(%710, dtype="float64") /* ty=Tensor[(6, 3, 14), float64] */;
    %712 = reshape(%711, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
    %713 = @func_640(%712) /* ty=(Tensor[(6, 3, 14), float64],) */;
    %714 = bitwise_and(%698, %699) /* ty=Tensor[(4, 11, 16), uint16] */;
    %715 = %709.1;
    %716 = %713.0;
    (%714, %710, %var_1080, meta[relay.Constant][36] /* ty=Tensor[(252), float64] */, %715, %var_1089, %716)
  };
  %717(%var_1098, %var_1099, %var_1100, %var_1101) /* ty=(Tensor[(4, 11, 16), uint16], Tensor[(6, 3, 14), float64], Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float64], Tensor[(1248), float32], Tensor[(6, 3, 14), float64]) */
}

def @func_7192(%var_7190: int8) -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(16, 13, 12), int8], int8, Tensor[(2496), int8]) {
  @func_7189(%var_7190) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(16, 13, 12), int8], int8, Tensor[(2496), int8]) */
}

def @func_7961(%var_7960: Tensor[(2, 12, 5), float32]) -> Tensor[(2, 12, 5), bool] {
  %724 = fn (%var_7948: Tensor[(2, 12, 5), float32]) -> Tensor[(2, 12, 5), bool] {
    %718 = @func_6630() /* ty=(Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */;
    %719 = %718.0;
    %720 = cast(%var_7948, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
    %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
    %722 = cast(%719, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
    %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%722, %723) /* ty=Tensor[(2, 12, 5), bool] */
  };
  %724(%var_7960) /* ty=Tensor[(2, 12, 5), bool] */
}

def @func_4627() -> (Tensor[(14, 3, 6), float64],) {
  @func_4625() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_1738(%var_1736: Tensor[(22, 96), float32], %var_1737: float64) -> (Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(1, 165), float64]) {
  @func_1734(%var_1736, %var_1737) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(1, 165), float64]) */
}

def @func_2631(%var_2626: float64, %var_2627: Tensor[(165), float64], %var_2628: Tensor[(2, 352), uint16], %var_2629: Tensor[(330), float32], %var_2630: Tensor[(1248), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) {
  @func_2624(%var_2626, %var_2627, %var_2628, %var_2629, %var_2630) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */
}

def @func_3713() -> (Tensor[(14, 3, 6), float64],) {
  %725 = @func_2706() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) */;
  %726 = %725.0;
  (%726,)
}

def @func_8336() -> Tensor[(3, 4, 13), float32] {
  @func_8334() /* ty=Tensor[(3, 4, 13), float32] */
}

def @func_6180(%var_6178: Tensor[(720), float32], %var_6179: Tensor[(768), uint8]) -> (Tensor[(60), float32], float64, Tensor[(720), float32], Tensor[(5, 11, 6), float32], Tensor[(768), uint8], Tensor[(252, 1), float64], Tensor[(2, 1056), float32], Tensor[(3, 4, 13), float64]) {
  @func_6176(%var_6178, %var_6179) /* ty=(Tensor[(60), float32], float64, Tensor[(720), float32], Tensor[(5, 11, 6), float32], Tensor[(768), uint8], Tensor[(252, 1), float64], Tensor[(2, 1056), float32], Tensor[(3, 4, 13), float64]) */
}

def @func_5740(%var_5739: Tensor[(15, 12, 5), float32]) -> (Tensor[(15, 12, 5), float32], Tensor[(15, 12, 5), float32]) {
  %733 = fn (%var_5726: Tensor[(15, 12, 5), float32]) -> (Tensor[(15, 12, 5), float32], Tensor[(15, 12, 5), float32]) {
    %727 = cast(%var_5726, dtype="float32") /* ty=Tensor[(15, 12, 5), float32] */;
    %728 = cast(%var_5726, dtype="float32") /* ty=Tensor[(15, 12, 5), float32] */;
    %729 = asinh(%728) /* ty=Tensor[(15, 12, 5), float32] */;
    %730 = cast(%729, dtype="float32") /* ty=Tensor[(15, 12, 5), float32] */;
    %731 = log2(%727) /* ty=Tensor[(15, 12, 5), float32] */;
    %732 = tan(%730) /* ty=Tensor[(15, 12, 5), float32] */;
    (%731, %732)
  };
  %733(%var_5739) /* ty=(Tensor[(15, 12, 5), float32], Tensor[(15, 12, 5), float32]) */
}

def @func_7536() -> Tensor[(3, 4, 13), float64] {
  %735 = fn () -> Tensor[(3, 4, 13), float64] {
    %734 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %734.0
  };
  %735() /* ty=Tensor[(3, 4, 13), float64] */
}

def @func_8706(%var_8659: Tensor[(11, 15, 16), uint8], %var_8669: float64, %var_8670: Tensor[(165), float64], %var_8673: Tensor[(1248), float32]) -> (Tensor[(2, 352), uint16], float64, Tensor[(165), float64], Tensor[(1, 704), uint16], Tensor[(1248), float32], Tensor[(3, 4, 13), float64], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(60), float32], Tensor[(330), bool], Tensor[(11, 15, 16), uint32]) {
  %736 = cast(%var_8669, dtype="float64") /* ty=float64 */;
  %737 = cast(%var_8670, dtype="float64") /* ty=Tensor[(165), float64] */;
  %738 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 704), uint16] */, dtype="uint16") /* ty=Tensor[(1, 704), uint16] */;
  %739 = cast(meta[relay.Constant][38] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %740 = cast(%var_8673, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %741 = reshape(%736, newshape=[]) /* ty=float64 */;
  %742 = reshape(%737, newshape=[165]) /* ty=Tensor[(165), float64] */;
  %743 = reshape(%738, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
  %744 = reshape(%739, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %745 = reshape(%740, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
  %746 = @func_2624(%741, %742, %743, %744, %745) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
  %747 = @func_4532() /* ty=(Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
  %748 = cast(meta[relay.Constant][39] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %749 = reshape(%748, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %750 = @func_640(%749) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(6, 3, 14), float64] */;
  %753 = reshape(%752, newshape=[126, 2]) /* ty=Tensor[(126, 2), float64] */;
  %754 = @func_2436(%753) /* ty=(Tensor[(60), float32], Tensor[(6, 3, 14), float64], Tensor[(126, 2), uint64], Tensor[(2, 12, 5), float32]) */;
  %755 = cast(meta[relay.Constant][40] /* ty=Tensor[(330), float32] */, dtype="bool") /* ty=Tensor[(330), bool] */;
  %756 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(330), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %757 = cast(meta[relay.Constant][38] /* ty=Tensor[(330), float32] */, dtype="bool") /* ty=Tensor[(330), bool] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?), bool] */;
  %759 = cast(%var_8659, dtype="uint8") /* ty=Tensor[(11, 15, 16), uint8] */;
  %760 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(11, 15, 16), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 15, 16), uint8] */, dtype="uint8") /* ty=Tensor[(11, 15, 16), uint8] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %763 = bitwise_xor(%761, %762) /* ty=Tensor[(11, 15, 16), uint8] */;
  %764 = cast(%763, dtype="float32") /* ty=Tensor[(11, 15, 16), float32] */;
  %765 = atan(%764) /* ty=Tensor[(11, 15, 16), float32] */;
  %766 = cast(%763, dtype="uint32") /* ty=Tensor[(11, 15, 16), uint32] */;
  %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%765, dtype="uint32") /* ty=Tensor[(11, 15, 16), uint32] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %770 = %746.4;
  %771 = %747.2;
  %772 = %754.0;
  %773 = not_equal(%757, %758) /* ty=Tensor[(330), bool] */;
  %774 = add(%768, %769) /* ty=Tensor[(11, 15, 16), uint32] */;
  (%770, %var_8669, %var_8670, meta[relay.Constant][37] /* ty=Tensor[(1, 704), uint16] */, %var_8673, %771, %751, meta[relay.Constant][39] /* ty=Tensor[(252), float64] */, %772, %773, %774)
}

def @func_8815(%var_8805: Tensor[(900), float32]) -> (Tensor[(14, 3, 6), float64], Tensor[(15, 12, 5), float32], Tensor[(900), float32]) {
  %775 = @func_4625() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %776 = cast(%var_8805, dtype="float32") /* ty=Tensor[(900), float32] */;
  %777 = reshape(%776, newshape=[15, 12, 5]) /* ty=Tensor[(15, 12, 5), float32] */;
  %778 = @func_5738(%777) /* ty=(Tensor[(15, 12, 5), float32], Tensor[(15, 12, 5), float32]) */;
  %779 = %775.0;
  %780 = %778.1;
  (%779, %780, %var_8805)
}

def @func_5456() -> Tensor[(3, 4, 13), float32] {
  %782 = fn () -> Tensor[(3, 4, 13), float32] {
    %781 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %781.1
  };
  %782() /* ty=Tensor[(3, 4, 13), float32] */
}

def @func_1661() -> (Tensor[(14, 3, 6), float64],) {
  %785 = fn () -> (Tensor[(14, 3, 6), float64],) {
    %783 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
    %784 = tan(%783) /* ty=Tensor[(14, 3, 6), float64] */;
    (%784,)
  };
  %785() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_8515(%var_8513: float32, %var_8514: Tensor[(2, 10, 11), float32]) -> (Tensor[(2, 10, 11), float32], Tensor[(3, 4, 13), float64]) {
  %790 = fn (%var_8481: float32, %var_8482: Tensor[(2, 10, 11), float32]) -> (Tensor[(2, 10, 11), float32], Tensor[(3, 4, 13), float64]) {
    %786 = cast(%var_8481, dtype="float32") /* ty=float32 */;
    %787 = cast(%var_8482, dtype="float32") /* ty=Tensor[(2, 10, 11), float32] */;
    %788 = power(%786, %787) /* ty=Tensor[(2, 10, 11), float32] */;
    %789 = @func_7868() /* ty=Tensor[(3, 4, 13), float64] */;
    (%788, %789)
  };
  %790(%var_8513, %var_8514) /* ty=(Tensor[(2, 10, 11), float32], Tensor[(3, 4, 13), float64]) */
}

def @func_7650(%var_7648: Tensor[(1248), float32]) -> (Tensor[(3, 4, 13), float32], Tensor[(330), float32], Tensor[(704), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(3, 4, 13), float64]) {
  @func_7647(%var_7648) /* ty=(Tensor[(3, 4, 13), float32], Tensor[(330), float32], Tensor[(704), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(3, 4, 13), float64]) */
}

def @func_2274(%var_2272: Tensor[(6, 10), float32]) -> (Tensor[(6, 10), float32], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(5, 11, 6), float32], Tensor[(5, 66), float32], Tensor[(16, 6, 8), bool], Tensor[(768), uint8], Tensor[(2112), float32]) {
  @func_2271(%var_2272) /* ty=(Tensor[(6, 10), float32], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(5, 11, 6), float32], Tensor[(5, 66), float32], Tensor[(16, 6, 8), bool], Tensor[(768), uint8], Tensor[(2112), float32]) */
}

def @func_3590() -> (Tensor[(3, 4, 13), float64],) {
  %791 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  (%791,)
}

def @func_726(%var_694: Tensor[(5, 11, 6), float32], %var_705: Tensor[(252), float64]) -> (Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) {
  %792 = cast(%var_694, dtype="float32") /* ty=Tensor[(5, 11, 6), float32] */;
  %793 = cast(%var_705, dtype="float64") /* ty=Tensor[(252), float64] */;
  %794 = reshape(%793, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %795 = @func_640(%794) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %796 = cast(%var_705, dtype="float64") /* ty=Tensor[(252), float64] */;
  %797 = reshape(%796, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
  %798 = @func_640(%797) /* ty=(Tensor[(6, 3, 14), float64],) */;
  %799 = log(%792) /* ty=Tensor[(5, 11, 6), float32] */;
  %800 = %795.0;
  %801 = %798.0;
  (%799, %800, %var_705, %801)
}

def @func_6899(%var_6808: Tensor[(8, 15, 13), float32]) -> (Tensor[(2, 12, 5), bool], Tensor[(120), float32], Tensor[(3, 4, 13), bool], Tensor[(273, 1), float64], Tensor[(8, 15, 13), uint16], Tensor[(2, 12, 5), float32], Tensor[(8, 15, 13), bool], Tensor[(7, 3, 13), float64]) {
  %802 = cast(meta[relay.Constant][43] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %803 = reshape(%802, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), float32] */;
  %804 = @func_5872() /* ty=(Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32]) */;
  %805 = @func_3646() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) */;
  %806 = cast(%var_6808, dtype="float32") /* ty=Tensor[(8, 15, 13), float32] */;
  %807 = tan(%806) /* ty=Tensor[(8, 15, 13), float32] */;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %809 = sin(%808) /* ty=Tensor[(8, 15, 13), float64] */;
  %810 = cast(%809, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %811 = log(%810) /* ty=Tensor[(8, 15, 13), float64] */;
  %812 = cast(%811, dtype="uint16") /* ty=Tensor[(8, 15, 13), uint16] */;
  %813 = shape_of(%807, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%807, dtype="uint16") /* ty=Tensor[(8, 15, 13), uint16] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %816 = cast(%var_6808, dtype="int32") /* ty=Tensor[(8, 15, 13), int32] */;
  %817 = shape_of(%807, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%807, dtype="int32") /* ty=Tensor[(8, 15, 13), int32] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %820 = add(%818, %819) /* ty=Tensor[(8, 15, 13), int32] */;
  %821 = cast(%809, dtype="float64") /* ty=Tensor[(8, 15, 13), float64] */;
  %822 = erf(%821) /* ty=Tensor[(8, 15, 13), float64] */;
  %823 = cast(%822, dtype="uint64") /* ty=Tensor[(8, 15, 13), uint64] */;
  %824 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%820, dtype="uint64") /* ty=Tensor[(8, 15, 13), uint64] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %827 = logical_xor(%825, %826) /* ty=Tensor[(8, 15, 13), uint64] */;
  %828 = cast(%827, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
  %829 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%811, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %832 = %805.2;
  %833 = cast(%832, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
  %834 = cast(%832, dtype="float64") /* ty=Tensor[(273, 1), float64] */;
  %835 = reshape(%833, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %836 = reshape(%834, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %837 = @func_1283(%835, %836) /* ty=(Tensor[(7, 3, 13), float64],) */;
  %838 = @func_6255(%803) /* ty=Tensor[(2, 12, 5), bool] */;
  %839 = %804.0;
  %840 = bitwise_and(%814, %815) /* ty=Tensor[(8, 15, 13), uint16] */;
  %841 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  %842 = less_equal(%830, %831) /* ty=Tensor[(8, 15, 13), bool] */;
  %843 = %837.0;
  (%838, meta[relay.Constant][43] /* ty=Tensor[(120), float32] */, %839, %832, %840, %841, %842, %843)
}

def @func_5147() -> (Tensor[(14, 3, 6), float64],) {
  @func_5145() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_7349(%var_7347: Tensor[(2, 15, 4), int64], %var_7348: Tensor[(2, 15, 4), int64]) -> (Tensor[(2, 15, 4), int64], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float32]) {
  @func_7345(%var_7347, %var_7348) /* ty=(Tensor[(2, 15, 4), int64], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float32]) */
}

def @func_6950() -> (Tensor[(3, 4, 13), float64],) {
  %844 = @func_3830() /* ty=Tensor[(3, 4, 13), float64] */;
  (%844,)
}

def @func_5411() -> (Tensor[(3, 4, 13), float64],) {
  %847 = fn () -> (Tensor[(3, 4, 13), float64],) {
    %845 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
    %846 = %845.1;
    (%846,)
  };
  %847() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_8323() -> (Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) {
  @func_8321() /* ty=(Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64]) */
}

def @func_5131() -> (Tensor[(60), float32],) {
  %848 = @func_4016() /* ty=(Tensor[(60), float32], Tensor[(3, 4, 13), float64]) */;
  %849 = %848.0;
  (%849,)
}

def @func_3563() -> (Tensor[(2, 12, 5), float32],) {
  %850 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  (%850,)
}

def @func_2769(%var_2766: Tensor[(704), uint16], %var_2767: Tensor[(330), float32], %var_2768: Tensor[(8, 156), float32]) -> (Tensor[(3, 4, 13), float64], Tensor[(2112), float32], float64, Tensor[(165), float64], Tensor[(704), uint16], Tensor[(330), float32], Tensor[(8, 156), float32], Tensor[(7, 3, 13), float64], Tensor[(3, 4, 13), float64], Tensor[(13, 21), float32], Tensor[(3, 4, 13), float32]) {
  %876 = fn (%var_2722: Tensor[(704), uint16], %var_2723: Tensor[(330), float32], %var_2724: Tensor[(8, 156), float32]) -> (Tensor[(3, 4, 13), float64], Tensor[(2112), float32], float64, Tensor[(165), float64], Tensor[(704), uint16], Tensor[(330), float32], Tensor[(8, 156), float32], Tensor[(7, 3, 13), float64], Tensor[(3, 4, 13), float64], Tensor[(13, 21), float32], Tensor[(3, 4, 13), float32]) {
    %851 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
    %852 = cast(8.99208f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %853 = cast(meta[relay.Constant][44] /* ty=Tensor[(165), float64] */, dtype="float64") /* ty=Tensor[(165), float64] */;
    %854 = cast(%var_2722, dtype="uint16") /* ty=Tensor[(704), uint16] */;
    %855 = cast(%var_2723, dtype="float32") /* ty=Tensor[(330), float32] */;
    %856 = cast(%var_2724, dtype="float32") /* ty=Tensor[(8, 156), float32] */;
    %857 = reshape(%852, newshape=[]) /* ty=float64 */;
    %858 = reshape(%853, newshape=[165]) /* ty=Tensor[(165), float64] */;
    %859 = reshape(%854, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
    %860 = reshape(%855, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %861 = reshape(%856, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
    %862 = @func_2624(%857, %858, %859, %860, %861) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
    %863 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
    %864 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
    %865 = reshape(%863, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
    %866 = reshape(%864, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
    %867 = @func_1283(%865, %866) /* ty=(Tensor[(7, 3, 13), float64],) */;
    %868 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 21), float64] */, dtype="float32") /* ty=Tensor[(13, 21), float32] */;
    %869 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %870 = %851.0;
    %871 = %862.10;
    %872 = %867.0;
    %873 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
    %874 = exp(%868) /* ty=Tensor[(13, 21), float32] */;
    %875 = %869.1;
    (%870, %871, 8.99208f64 /* ty=float64 */, meta[relay.Constant][44] /* ty=Tensor[(165), float64] */, %var_2722, %var_2723, %var_2724, %872, %873, %874, %875)
  };
  %876(%var_2766, %var_2767, %var_2768) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(2112), float32], float64, Tensor[(165), float64], Tensor[(704), uint16], Tensor[(330), float32], Tensor[(8, 156), float32], Tensor[(7, 3, 13), float64], Tensor[(3, 4, 13), float64], Tensor[(13, 21), float32], Tensor[(3, 4, 13), float32]) */
}

def @func_4187() -> (Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) {
  @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */
}

def @func_3429(%var_3384: Tensor[(273), float64], %var_3410: Tensor[(704), uint16], %var_3411: Tensor[(110), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(7, 3, 13), float64], Tensor[(273), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32], float64, Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(110), float64], Tensor[(2, 12, 5), float32]) {
  %877 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
  %878 = cast(%var_3384, dtype="float64") /* ty=Tensor[(273), float64] */;
  %879 = reshape(%878, newshape=[273, 1]) /* ty=Tensor[(273, 1), float64] */;
  %880 = @func_2544(%879) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(273, 1), float64]) */;
  %881 = cast(meta[relay.Constant][46] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %882 = cast(-6.87558f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %883 = reshape(%881, newshape=[22, 96]) /* ty=Tensor[(22, 96), float32] */;
  %884 = reshape(%882, newshape=[]) /* ty=float64 */;
  %885 = @func_1734(%883, %884) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(1, 165), float64]) */;
  %886 = cast(%var_3384, dtype="float64") /* ty=Tensor[(273), float64] */;
  %887 = reshape(%886, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %888 = @func_3154(%887) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(7, 3, 13), float64], Tensor[(273), float64]) */;
  %889 = cast(%var_3410, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %890 = cast(%var_3411, dtype="float64") /* ty=Tensor[(110), float64] */;
  %891 = reshape(%889, newshape=[8, 88]) /* ty=Tensor[(8, 88), uint16] */;
  %892 = reshape(%890, newshape=[1, 10, 11]) /* ty=Tensor[(1, 10, 11), float64] */;
  %893 = @func_3113(%891, %892) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(165), uint64], Tensor[(165, 1), float64], Tensor[(8, 88), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(1, 10, 11), float32]) */;
  %894 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
  %895 = %877.0;
  %896 = %880.1;
  %897 = %885.1;
  %898 = @func_2640() /* ty=Tensor[(14, 3, 6), float64] */;
  %899 = %888.2;
  %900 = %893.5;
  %901 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
  (%894, %895, %896, %var_3384, %897, meta[relay.Constant][46] /* ty=Tensor[(2112), float32] */, -6.87558f64 /* ty=float64 */, %898, %899, %900, %var_3410, %var_3411, %901)
}

def @func_5083() -> (Tensor[(14, 3, 6), float64],) {
  %902 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %903 = %902.0;
  (%903,)
}

def @func_5085() -> (Tensor[(14, 3, 6), float64],) {
  @func_5083() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_1555(%var_1553: float64, %var_1554: Tensor[(1, 15, 11), float64]) -> Tensor[(1, 15, 11), float64] {
  @func_1551(%var_1553, %var_1554) /* ty=Tensor[(1, 15, 11), float64] */
}

def @func_8274() -> (Tensor[(3, 4, 13), float64],) {
  %904 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %905 = %904.0;
  (%905,)
}

def @func_794(%var_792: Tensor[(16, 6, 13), float32], %var_793: Tensor[(330), float32]) -> (Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) {
  @func_790(%var_792, %var_793) /* ty=(Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) */
}

def @func_5621() -> Tensor[(16, 6, 8), float32] {
  @func_5619() /* ty=Tensor[(16, 6, 8), float32] */
}

def @func_6652() -> (Tensor[(3, 4, 13), bool], Tensor[(14, 3, 6), float64]) {
  %906 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
  %907 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %908 = %906.0;
  %909 = %907.0;
  (%908, %909)
}

def @func_7345(%var_7298: Tensor[(2, 15, 4), int64], %var_7299: Tensor[(2, 15, 4), int64]) -> (Tensor[(2, 15, 4), int64], Tensor[(2, 12, 5), float32], Tensor[(3, 4, 13), float32]) {
  %910 = cast(%var_7299, dtype="int64") /* ty=Tensor[(2, 15, 4), int64] */;
  %911 = shape_of(%var_7298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%var_7298, dtype="int64") /* ty=Tensor[(2, 15, 4), int64] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %914 = @func_6630() /* ty=(Tensor[(2, 12, 5), float32], Tensor[(60), float32]) */;
  %915 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %916 = bitwise_and(%912, %913) /* ty=Tensor[(2, 15, 4), int64] */;
  %917 = %914.0;
  %918 = %915.1;
  (%916, %917, %918)
}

def @func_8334() -> Tensor[(3, 4, 13), float32] {
  %919 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
  %919.1
}

def @func_2388() -> Tensor[(14, 3, 6), float64] {
  @func_2386() /* ty=Tensor[(14, 3, 6), float64] */
}

def @func_6009(%var_6005: Tensor[(252), float64], %var_6006: Tensor[(2112), float32], %var_6007: Tensor[(900), float32], %var_6008: float64) -> (Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32], Tensor[(768), uint8], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(15, 12, 5), float32], Tensor[(900), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], float64) {
  %948 = fn (%var_5965: Tensor[(252), float64], %var_5966: Tensor[(2112), float32], %var_5969: Tensor[(900), float32], %var_5993: float64) -> (Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32], Tensor[(768), uint8], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(15, 12, 5), float32], Tensor[(900), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], float64) {
    %920 = @func_5872() /* ty=(Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32]) */;
    %921 = cast(meta[relay.Constant][47] /* ty=Tensor[(768), uint8] */, dtype="uint8") /* ty=Tensor[(768), uint8] */;
    %922 = cast(%var_5965, dtype="float64") /* ty=Tensor[(252), float64] */;
    %923 = cast(meta[relay.Constant][47] /* ty=Tensor[(768), uint8] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %924 = cast(meta[relay.Constant][47] /* ty=Tensor[(768), uint8] */, dtype="uint8") /* ty=Tensor[(768), uint8] */;
    %925 = cast(%var_5966, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %926 = reshape(%921, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
    %927 = reshape(%922, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %928 = reshape(%923, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), float64] */;
    %929 = reshape(%924, newshape=[16, 6, 8]) /* ty=Tensor[(16, 6, 8), uint8] */;
    %930 = reshape(%925, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %931 = @func_1044(%926, %927, %928, %929, %930) /* ty=(Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) */;
    %932 = cast(%var_5969, dtype="float32") /* ty=Tensor[(900), float32] */;
    %933 = reshape(%932, newshape=[15, 12, 5]) /* ty=Tensor[(15, 12, 5), float32] */;
    %934 = @func_5738(%933) /* ty=(Tensor[(15, 12, 5), float32], Tensor[(15, 12, 5), float32]) */;
    %935 = @func_5410() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %936 = @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %937 = cast(%var_5966, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %938 = cast(%var_5993, dtype="float64") /* ty=float64 */;
    %939 = reshape(%937, newshape=[22, 96]) /* ty=Tensor[(22, 96), float32] */;
    %940 = reshape(%938, newshape=[]) /* ty=float64 */;
    %941 = @func_1734(%939, %940) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(1, 165), float64]) */;
    %942 = %920.0;
    %943 = %931.11;
    %944 = %934.1;
    %945 = %935.0;
    %946 = %936.1;
    %947 = %941.2;
    (%942, %943, meta[relay.Constant][47] /* ty=Tensor[(768), uint8] */, %var_5965, %var_5966, %944, %var_5969, %945, %946, %947, %var_5993)
  };
  %948(%var_6005, %var_6006, %var_6007, %var_6008) /* ty=(Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32], Tensor[(768), uint8], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(15, 12, 5), float32], Tensor[(900), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], float64) */
}

def @func_4533() -> (Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) {
  %957 = fn () -> (Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) {
    %949 = @func_3646() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) */;
    %950 = @func_3486() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %951 = @func_2153() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */;
    %952 = %951.1;
    %953 = cast(%952, dtype="float64") /* ty=Tensor[(3, 4, 13), float64] */;
    %954 = %949.1;
    %955 = %950.0;
    %956 = sqrt(%953) /* ty=Tensor[(3, 4, 13), float64] */;
    (%954, %955, %956)
  };
  %957() /* ty=(Tensor[(3, 4, 13), float32], Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */
}

def @func_7268() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(16, 6, 8), float64]) {
  %966 = fn () -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(16, 6, 8), float64]) {
    %958 = @func_3590() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %959 = @func_1776() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %960 = %959.0;
    %961 = cast(%960, dtype="float64") /* ty=Tensor[(14, 3, 6), float64] */;
    %962 = reshape(%961, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %963 = @func_5576(%962) /* ty=(Tensor[(3, 4, 13), float64], Tensor[(2, 12, 5), float32], Tensor[(60), float32], Tensor[(5, 11, 6), float32], Tensor[(252), float64], Tensor[(2112), float32], Tensor[(16, 6, 8), float64]) */;
    %964 = %958.0;
    %965 = %963.6;
    (%964, %960, %965)
  };
  %966() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(16, 6, 8), float64]) */
}

def @func_6258(%var_6256: Tensor[(2, 12, 5), float32]) -> Tensor[(2, 12, 5), bool] {
  @func_6255(%var_6256) /* ty=Tensor[(2, 12, 5), bool] */
}

def @func_4333() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(60), float32]) {
  %967 = @func_4251() /* ty=(Tensor[(3, 4, 13), float64],) */;
  %968 = cast(meta[relay.Constant][48] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %969 = reshape(%968, newshape=[15, 4]) /* ty=Tensor[(15, 4), float32] */;
  %970 = @func_2827(%969) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(6, 10), float32], Tensor[(15, 4), float32]) */;
  %971 = %967.0;
  %972 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
  %973 = %970.0;
  (%971, %972, %973, meta[relay.Constant][48] /* ty=Tensor[(60), float32] */)
}

def @func_5873() -> (Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32]) {
  %977 = fn () -> (Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32]) {
    %974 = @func_4743() /* ty=(Tensor[(3, 4, 13), bool],) */;
    %975 = %974.0;
    %976 = @func_5619() /* ty=Tensor[(16, 6, 8), float32] */;
    (%975, %976)
  };
  %977() /* ty=(Tensor[(3, 4, 13), bool], Tensor[(16, 6, 8), float32]) */
}

def @func_6515(%var_6513: Tensor[(16, 7, 11), float32]) -> (Tensor[(16, 7, 11), bool], Tensor[(16, 7, 11), int64]) {
  @func_6512(%var_6513) /* ty=(Tensor[(16, 7, 11), bool], Tensor[(16, 7, 11), int64]) */
}

def @func_2438(%var_2437: Tensor[(126, 2), float64]) -> (Tensor[(60), float32], Tensor[(6, 3, 14), float64], Tensor[(126, 2), uint64], Tensor[(2, 12, 5), float32]) {
  %990 = fn (%var_2419: Tensor[(126, 2), float64]) -> (Tensor[(60), float32], Tensor[(6, 3, 14), float64], Tensor[(126, 2), uint64], Tensor[(2, 12, 5), float32]) {
    %978 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
    %979 = cast(meta[relay.Constant][49] /* ty=Tensor[(126, 2), float64] */, dtype="float64") /* ty=Tensor[(126, 2), float64] */;
    %980 = reshape(%979, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
    %981 = @func_640(%980) /* ty=(Tensor[(6, 3, 14), float64],) */;
    %982 = cast(%var_2419, dtype="uint64") /* ty=Tensor[(126, 2), uint64] */;
    %983 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(126, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %984 = cast(meta[relay.Constant][49] /* ty=Tensor[(126, 2), float64] */, dtype="uint64") /* ty=Tensor[(126, 2), uint64] */;
    %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %986 = %978.2;
    %987 = %981.0;
    %988 = add(%984, %985) /* ty=Tensor[(126, 2), uint64] */;
    %989 = @func_1879() /* ty=Tensor[(2, 12, 5), float32] */;
    (%986, %987, %988, %989)
  };
  %990(%var_2437) /* ty=(Tensor[(60), float32], Tensor[(6, 3, 14), float64], Tensor[(126, 2), uint64], Tensor[(2, 12, 5), float32]) */
}

def @func_4335() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(60), float32]) {
  @func_4333() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(14, 3, 6), float64], Tensor[(60), float32]) */
}

def @func_6902(%var_6900: Tensor[(8, 15, 13), float32]) -> (Tensor[(2, 12, 5), bool], Tensor[(120), float32], Tensor[(3, 4, 13), bool], Tensor[(273, 1), float64], Tensor[(8, 15, 13), uint16], Tensor[(2, 12, 5), float32], Tensor[(8, 15, 13), bool], Tensor[(7, 3, 13), float64]) {
  @func_6899(%var_6900) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), float32], Tensor[(3, 4, 13), bool], Tensor[(273, 1), float64], Tensor[(8, 15, 13), uint16], Tensor[(2, 12, 5), float32], Tensor[(8, 15, 13), bool], Tensor[(7, 3, 13), float64]) */
}

def @func_7516() -> (Tensor[(2112), float32], Tensor[(2, 12, 5), float32], Tensor[(60), float32]) {
  %991 = @func_5933() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float32], Tensor[(22, 96), float32], Tensor[(2112), float32]) */;
  %992 = cast(meta[relay.Constant][50] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %993 = reshape(%992, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %994 = @func_3934(%993) /* ty=(Tensor[(2, 12, 5), float32], Tensor[(15, 4), float32], Tensor[(60), float32]) */;
  %995 = %991.4;
  %996 = %994.0;
  (%995, %996, meta[relay.Constant][50] /* ty=Tensor[(60), float32] */)
}

def @func_1628() -> (Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) {
  @func_1626() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float32]) */
}

def @func_1050(%var_1045: Tensor[(16, 6, 8), uint8], %var_1046: Tensor[(252), float64], %var_1047: Tensor[(16, 6, 8), float64], %var_1048: Tensor[(16, 6, 8), uint8], %var_1049: Tensor[(2112), float32]) -> (Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) {
  %1066 = fn (%var_886: Tensor[(16, 6, 8), uint8], %var_908: Tensor[(252), float64], %var_936: Tensor[(16, 6, 8), float64], %var_943: Tensor[(16, 6, 8), uint8], %var_968: Tensor[(2112), float32]) -> (Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) {
    %997 = cast(meta[relay.Constant][51] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %998 = cast(%var_908, dtype="float64") /* ty=Tensor[(252), float64] */;
    %999 = reshape(%997, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
    %1000 = reshape(%998, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %1001 = @func_726(%999, %1000) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
    %1002 = cast(meta[relay.Constant][51] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %1003 = cast(%var_908, dtype="float64") /* ty=Tensor[(252), float64] */;
    %1004 = reshape(%1002, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
    %1005 = reshape(%1003, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %1006 = @func_726(%1004, %1005) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
    %1007 = cast(meta[relay.Constant][52] /* ty=Tensor[(16, 6, 8), uint8] */, dtype="float64") /* ty=Tensor[(16, 6, 8), float64] */;
    %1008 = log2(%1007) /* ty=Tensor[(16, 6, 8), float64] */;
    %1009 = cast(%var_936, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
    %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1011 = cast(%1008, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
    %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1013 = cast(meta[relay.Constant][51] /* ty=Tensor[(330), float32] */, dtype="float64") /* ty=Tensor[(330), float64] */;
    %1014 = cast(meta[relay.Constant][52] /* ty=Tensor[(16, 6, 8), uint8] */, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
    %1015 = shape_of(%var_886, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1016 = cast(%var_886, dtype="uint8") /* ty=Tensor[(16, 6, 8), uint8] */;
    %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1018 = bitwise_xor(%1016, %1017) /* ty=Tensor[(16, 6, 8), uint8] */;
    %1019 = cast(%var_943, dtype="bool") /* ty=Tensor[(16, 6, 8), bool] */;
    %1020 = shape_of(%1018, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1021 = cast(%1018, dtype="bool") /* ty=Tensor[(16, 6, 8), bool] */;
    %1022 = dyn.reshape(%1019, %1020, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1023 = %1001.2;
    %1024 = cast(%1023, dtype="float64") /* ty=Tensor[(252), float64] */;
    %1025 = reshape(%1024, newshape=[6, 3, 14]) /* ty=Tensor[(6, 3, 14), float64] */;
    %1026 = @func_640(%1025) /* ty=(Tensor[(6, 3, 14), float64],) */;
    %1027 = cast(%var_968, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %1028 = reshape(%1027, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
    %1029 = cast(%var_968, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %1030 = reshape(%1029, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
    %1031 = @func_149(%1030) /* ty=Tensor[(12, 16, 11), float32] */;
    %1032 = cast(%1031, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
    %1033 = shape_of(%var_968, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1034 = cast(%var_968, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1036 = cast(meta[relay.Constant][53] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
    %1037 = cast(meta[relay.Constant][51] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %1038 = reshape(%1036, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float32] */;
    %1039 = reshape(%1037, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %1040 = @func_790(%1038, %1039) /* ty=(Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) */;
    %1041 = cast(%var_943, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
    %1042 = shape_of(%1008, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1043 = cast(%1008, dtype="float32") /* ty=Tensor[(16, 6, 8), float32] */;
    %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1045 = cast(meta[relay.Constant][53] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
    %1046 = tan(%1013) /* ty=Tensor[(330), float64] */;
    %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(330), float32] */;
    %1048 = reshape(%1045, newshape=[16, 6, 13]) /* ty=Tensor[(16, 6, 13), float32] */;
    %1049 = reshape(%1047, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %1050 = @func_790(%1048, %1049) /* ty=(Tensor[(330), float32], Tensor[(252), float64], Tensor[(252), float32], Tensor[(16, 6, 13), float64]) */;
    %1051 = cast(meta[relay.Constant][51] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %1052 = %1040.2;
    %1053 = cast(%1052, dtype="float64") /* ty=Tensor[(252), float64] */;
    %1054 = reshape(%1051, newshape=[5, 11, 6]) /* ty=Tensor[(5, 11, 6), float32] */;
    %1055 = reshape(%1053, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %1056 = @func_726(%1054, %1055) /* ty=(Tensor[(5, 11, 6), float32], Tensor[(6, 3, 14), float64], Tensor[(252), float64], Tensor[(6, 3, 14), float64]) */;
    %1057 = %1006.2;
    %1058 = add(%1011, %1012) /* ty=Tensor[(16, 6, 8), uint8] */;
    %1059 = greater_equal(%1021, %1022) /* ty=Tensor[(16, 6, 8), bool] */;
    %1060 = %1026.0;
    %1061 = @func_149(%1028) /* ty=Tensor[(12, 16, 11), float32] */;
    %1062 = less_equal(%1034, %1035) /* ty=Tensor[(2112), bool] */;
    %1063 = power(%1043, %1044) /* ty=Tensor[(16, 6, 8), float32] */;
    %1064 = %1050.3;
    %1065 = %1056.0;
    (%1023, %var_908, %1057, %1058, %1046, %1059, %1060, %1061, %1062, %1052, meta[relay.Constant][53] /* ty=Tensor[(1248), float32] */, %1063, %1064, %1065)
  };
  %1066(%var_1045, %var_1046, %var_1047, %var_1048, %var_1049) /* ty=(Tensor[(252), float64], Tensor[(252), float64], Tensor[(252), float64], Tensor[(16, 6, 8), uint8], Tensor[(330), float64], Tensor[(16, 6, 8), bool], Tensor[(6, 3, 14), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), bool], Tensor[(252), float32], Tensor[(1248), float32], Tensor[(16, 6, 8), float32], Tensor[(16, 6, 13), float64], Tensor[(5, 11, 6), float32]) */
}

def @func_7760() -> (Tensor[(2, 12, 5), float32],) {
  @func_7758() /* ty=(Tensor[(2, 12, 5), float32],) */
}

def @func_3487() -> (Tensor[(3, 4, 13), float64],) {
  %1069 = fn () -> (Tensor[(3, 4, 13), float64],) {
    %1067 = @func_2099() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %1068 = %1067.0;
    (%1068,)
  };
  %1069() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_3811() -> (Tensor[(14, 3, 6), float64], Tensor[(273, 1), float64], Tensor[(16, 6, 8), bool], Tensor[(3, 4, 13), float64]) {
  %1070 = @func_2924() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %1071 = @func_3646() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(3, 4, 13), float32], Tensor[(273, 1), float64], Tensor[(273), float64]) */;
  %1072 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
  %1073 = %1070.0;
  %1074 = %1071.2;
  %1075 = %1072.1;
  %1076 = @func_2205() /* ty=Tensor[(3, 4, 13), float64] */;
  (%1073, %1074, %1075, %1076)
}

def @func_8446() -> (Tensor[(3, 4, 13), float64],) {
  %1078 = fn () -> (Tensor[(3, 4, 13), float64],) {
    %1077 = @func_8383() /* ty=Tensor[(3, 4, 13), float64] */;
    (%1077,)
  };
  %1078() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_6654() -> (Tensor[(3, 4, 13), bool], Tensor[(14, 3, 6), float64]) {
  @func_6652() /* ty=(Tensor[(3, 4, 13), bool], Tensor[(14, 3, 6), float64]) */
}

def @func_1734(%var_1727: Tensor[(22, 96), float32], %var_1731: float64) -> (Tensor[(14, 3, 6), float64], Tensor[(12, 16, 11), float32], Tensor[(22, 96), float32], Tensor[(1, 15, 11), float64], float64, Tensor[(1, 165), float64]) {
  %1079 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %1080 = cast(%var_1727, dtype="float32") /* ty=Tensor[(22, 96), float32] */;
  %1081 = reshape(%1080, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float32] */;
  %1082 = cast(%var_1731, dtype="float64") /* ty=float64 */;
  %1083 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 165), float64] */, dtype="float64") /* ty=Tensor[(1, 165), float64] */;
  %1084 = reshape(%1082, newshape=[]) /* ty=float64 */;
  %1085 = reshape(%1083, newshape=[1, 15, 11]) /* ty=Tensor[(1, 15, 11), float64] */;
  %1086 = %1079.0;
  %1087 = @func_149(%1081) /* ty=Tensor[(12, 16, 11), float32] */;
  %1088 = @func_1551(%1084, %1085) /* ty=Tensor[(1, 15, 11), float64] */;
  (%1086, %1087, %var_1727, %1088, %var_1731, meta[relay.Constant][54] /* ty=Tensor[(1, 165), float64] */)
}

def @func_7911() -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) {
  %1094 = fn () -> (Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) {
    %1089 = @func_1783() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %1090 = @func_4185() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(3, 4, 13), float64]) */;
    %1091 = @func_7535() /* ty=Tensor[(3, 4, 13), float64] */;
    %1092 = %1089.0;
    %1093 = %1090.1;
    (%1091, %1092, %1093)
  };
  %1094() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64]) */
}

def @func_4253() -> (Tensor[(3, 4, 13), float64],) {
  @func_4251() /* ty=(Tensor[(3, 4, 13), float64],) */
}

def @func_3116(%var_3114: Tensor[(8, 88), uint16], %var_3115: Tensor[(1, 10, 11), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(165), uint64], Tensor[(165, 1), float64], Tensor[(8, 88), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(1, 10, 11), float32]) {
  %1111 = fn (%var_3094: Tensor[(8, 88), uint16], %var_3107: Tensor[(1, 10, 11), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(165), uint64], Tensor[(165, 1), float64], Tensor[(8, 88), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(1, 10, 11), float32]) {
    %1095 = cast(-3.1609f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1096 = cast(meta[relay.Constant][55] /* ty=Tensor[(165, 1), float64] */, dtype="float64") /* ty=Tensor[(165, 1), float64] */;
    %1097 = cast(%var_3094, dtype="uint16") /* ty=Tensor[(8, 88), uint16] */;
    %1098 = cast(meta[relay.Constant][56] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %1099 = cast(meta[relay.Constant][57] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
    %1100 = reshape(%1095, newshape=[]) /* ty=float64 */;
    %1101 = reshape(%1096, newshape=[165]) /* ty=Tensor[(165), float64] */;
    %1102 = reshape(%1097, newshape=[2, 352]) /* ty=Tensor[(2, 352), uint16] */;
    %1103 = reshape(%1098, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %1104 = reshape(%1099, newshape=[1248]) /* ty=Tensor[(1248), float32] */;
    %1105 = @func_2624(%1100, %1101, %1102, %1103, %1104) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(?, 15, 11), uint32], Tensor[(165), uint64], Tensor[(330), float32], Tensor[(2, 352), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(14, 3, 6), float64], Tensor[(4, 11, 16), uint16], Tensor[(12, 16, 11), float32], Tensor[(2112), float32]) */;
    %1106 = cast(-3.1609f64 /* ty=float64 */, dtype="float32") /* ty=float32 */;
    %1107 = cast(%var_3107, dtype="float32") /* ty=Tensor[(1, 10, 11), float32] */;
    %1108 = @func_2386() /* ty=Tensor[(14, 3, 6), float64] */;
    %1109 = %1105.2;
    %1110 = mod(%1106, %1107) /* ty=Tensor[(1, 10, 11), float32] */;
    (%1108, %1109, meta[relay.Constant][55] /* ty=Tensor[(165, 1), float64] */, %var_3094, meta[relay.Constant][56] /* ty=Tensor[(330), float32] */, meta[relay.Constant][57] /* ty=Tensor[(1248), float32] */, %1110)
  };
  %1111(%var_3114, %var_3115) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(165), uint64], Tensor[(165, 1), float64], Tensor[(8, 88), uint16], Tensor[(330), float32], Tensor[(1248), float32], Tensor[(1, 10, 11), float32]) */
}

def @func_1777() -> (Tensor[(14, 3, 6), float64],) {
  %1114 = fn () -> (Tensor[(14, 3, 6), float64],) {
    %1112 = @func_1660() /* ty=(Tensor[(14, 3, 6), float64],) */;
    %1113 = %1112.0;
    (%1113,)
  };
  %1114() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_8194() -> (Tensor[(14, 3, 6), float64],) {
  %1115 = @func_3713() /* ty=(Tensor[(14, 3, 6), float64],) */;
  %1116 = %1115.0;
  (%1116,)
}

def @func_8304() -> (Tensor[(14, 3, 6), float64],) {
  @func_8302() /* ty=(Tensor[(14, 3, 6), float64],) */
}

def @func_4017() -> (Tensor[(60), float32], Tensor[(3, 4, 13), float64]) {
  %1121 = fn () -> (Tensor[(60), float32], Tensor[(3, 4, 13), float64]) {
    %1117 = @func_2352() /* ty=(Tensor[(3, 4, 13), float64], Tensor[(16, 6, 8), bool], Tensor[(60), float32]) */;
    %1118 = @func_3315() /* ty=(Tensor[(3, 4, 13), float64],) */;
    %1119 = %1117.2;
    %1120 = %1118.0;
    (%1119, %1120)
  };
  %1121() /* ty=(Tensor[(60), float32], Tensor[(3, 4, 13), float64]) */
}

def @func_3434(%var_3431: Tensor[(273), float64], %var_3432: Tensor[(704), uint16], %var_3433: Tensor[(110), float64]) -> (Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(7, 3, 13), float64], Tensor[(273), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32], float64, Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(110), float64], Tensor[(2, 12, 5), float32]) {
  @func_3429(%var_3431, %var_3432, %var_3433) /* ty=(Tensor[(14, 3, 6), float64], Tensor[(3, 4, 13), float64], Tensor[(7, 3, 13), float64], Tensor[(273), float64], Tensor[(12, 16, 11), float32], Tensor[(2112), float32], float64, Tensor[(14, 3, 6), float64], Tensor[(7, 3, 13), float64], Tensor[(1248), float32], Tensor[(704), uint16], Tensor[(110), float64], Tensor[(2, 12, 5), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen230/build/output.py:2925: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen230/build/output.py", line 2930, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(588) tvmgen_default_fused_cast_log2_kernel0(double* __restrict__ T_log2, uchar* __restrict__ placeholder) {
  T_log2[(((int)threadIdx.x))] = log2(((double)placeholder[(((int)threadIdx.x))]));
}

extern "C" __global__ void __launch_bounds__(588) tvmgen_default_fused_bitwise_xor_kernel0(uchar* __restrict__ T_bitwise_xor, uchar* __restrict__ placeholder, uchar* __restrict__ placeholder1) {
  T_bitwise_xor[(((int)threadIdx.x))] = (placeholder[((((((int)threadIdx.x) / 98) * 14) + (((int)threadIdx.x) % 14)))] ^ placeholder1[(((int)threadIdx.x))]);
}

extern "C" __global__ void __launch_bounds__(588) tvmgen_default_fused_cast_cast_reshape_logical_and_kernel0(signed char* __restrict__ T_logical_and, uchar* __restrict__ placeholder, uchar* __restrict__ placeholder1) {
  T_logical_and[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) && ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


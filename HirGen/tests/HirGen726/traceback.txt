==========mod==========
#[version = "0.0.5"]
def @func_4091(%var_4081: Tensor[(12, 5, 2), float64], %var_4087: Tensor[(168), float32]) -> (Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) {
  %0 = cast(%var_4081, dtype="float64") /* ty=Tensor[(12, 5, 2), float64] */;
  %1 = cast(%var_4087, dtype="float32") /* ty=Tensor[(168), float32] */;
  %2 = reshape(%1, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %3 = atanh(%0) /* ty=Tensor[(12, 5, 2), float64] */;
  %4 = @func_2043(%2) /* ty=Tensor[(14, 3, 4), float32] */;
  (%3, %4, %var_4087)
}

def @func_9779(%var_9768: Tensor[(14, 12, 9), float64]) -> Tensor[(14, 12, 9), int32] {
  %5 = cast(%var_9768, dtype="float64") /* ty=Tensor[(14, 12, 9), float64] */;
  %6 = sigmoid(%5) /* ty=Tensor[(14, 12, 9), float64] */;
  %7 = cast(%var_9768, dtype="int32") /* ty=Tensor[(14, 12, 9), int32] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="int32") /* ty=Tensor[(14, 12, 9), int32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%9, %10) /* ty=Tensor[(14, 12, 9), int32] */
}

def @func_9026(%var_8947: Tensor[(1536), float64]) -> (Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), bool], Tensor[(16, 10, 11), bool], Tensor[(3, 5, 2), float32], Tensor[(22), float32], Tensor[(16, 10, 11), uint8], Tensor[(120), float64], Tensor[(168), float32], Tensor[(9, 1, 2), bool], bool, Tensor[(18), bool]) {
  %11 = cast(%var_8947, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %12 = reshape(%11, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %13 = @func_7793() /* ty=Tensor[(16, 10, 11), float32] */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 10, 11), float32] */, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%13, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 10, 11), float32] */, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %19 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%13, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %23 = reshape(%22, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %24 = @func_1820(%23) /* ty=(Tensor[(3, 5, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
  %25 = less_equal(%20, %21) /* ty=Tensor[(16, 10, 11), bool] */;
  %26 = cast(%25, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %27 = reshape(%26, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %28 = @func_5086(%27) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %30 = reshape(%29, newshape=[1, 168]) /* ty=Tensor[(1, 168), float32] */;
  %31 = @func_4901(%30) /* ty=(Tensor[(11, 1, 2), float32], Tensor[(14, 3, 4), float32], Tensor[(120), float64], Tensor[(1, 168), float32]) */;
  %32 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(18), bool] */, dtype="bool") /* ty=Tensor[(18), bool] */;
  %34 = reshape(%32, newshape=[]) /* ty=bool */;
  %35 = reshape(%33, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), bool] */;
  %36 = @func_7092(%34, %35) /* ty=(Tensor[(9, 1, 2), bool],) */;
  %37 = @func_712(%12) /* ty=Tensor[(16, 12, 8), float64] */;
  %38 = less(%16, %17) /* ty=Tensor[(16, 10, 11), bool] */;
  %39 = %24.0;
  %40 = %28.0;
  %41 = %31.2;
  %42 = %36.0;
  (%37, %var_8947, %38, %25, %39, meta[relay.Constant][1] /* ty=Tensor[(22), float32] */, %40, %41, meta[relay.Constant][2] /* ty=Tensor[(168), float32] */, %42, True /* ty=bool */, meta[relay.Constant][3] /* ty=Tensor[(18), bool] */)
}

def @func_8857() -> (Tensor[(16, 10, 11), float32],) {
  %43 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
  (%43,)
}

def @func_7124() -> (Tensor[(16, 10, 11), float32], Tensor[(385), float32]) {
  %44 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
  %45 = %44.1;
  %46 = cast(%45, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %47 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
  %48 = acos(%46) /* ty=Tensor[(16, 10, 11), float32] */;
  %49 = %47.2;
  (%48, %49)
}

def @func_12645() -> (Tensor[(16, 10, 11), uint8], Tensor[(22), float32], Tensor[(22), float64], Tensor[(11, 12, 2), uint16]) {
  %50 = @func_6300() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %52 = reshape(%51, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %53 = @func_5180(%52) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 1, 2), float32], Tensor[(165, 1), uint8], Tensor[(22), float32]) */;
  %54 = cast(meta[relay.Constant][4] /* ty=Tensor[(22), float32] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %55 = @func_10916() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %56 = %50.1;
  %57 = %53.3;
  %58 = rsqrt(%54) /* ty=Tensor[(22), float64] */;
  %59 = %55.0;
  (%56, %57, %58, %59)
}

def @func_10027() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float64]) {
  %60 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
  %61 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %62 = %60.0;
  %63 = %61.0;
  (%62, %63)
}

def @func_12352() -> (Tensor[(11, 12, 2), float32],) {
  %64 = @func_8515() /* ty=(Tensor[(11, 12, 2), float32],) */;
  %65 = %64.0;
  (%65,)
}

def @func_7022() -> (Tensor[(11, 12, 2), bool],) {
  %66 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %67 = %66.1;
  %68 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 12, 2), float32] */, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %69 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%67, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %72 = equal(%70, %71) /* ty=Tensor[(11, 12, 2), bool] */;
  (%72,)
}

def @func_6343() -> Tensor[(16, 10, 11), float64] {
  %73 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
  %73.0
}

def @func_10545(%var_10530: Tensor[(672), float64]) -> (Tensor[(16, 10, 11), float64], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) {
  %74 = @func_9468() /* ty=(Tensor[(120), float64], Tensor[(16, 10, 11), float64]) */;
  %75 = cast(%var_10530, dtype="float64") /* ty=Tensor[(672), float64] */;
  %76 = reshape(%75, newshape=[4, 14, 12]) /* ty=Tensor[(4, 14, 12), float64] */;
  %77 = @func_4552(%76) /* ty=(Tensor[(4, 14, 12), float64],) */;
  %78 = %74.1;
  %79 = %77.0;
  (%78, %79, %var_10530)
}

def @func_12988() -> (Tensor[(11, 12, 2), float32], Tensor[(6, 140), float32], Tensor[(840), float64], Tensor[(11, 5, 7), float32]) {
  %80 = cast(meta[relay.Constant][6] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %81 = cast(meta[relay.Constant][6] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %82 = reshape(%80, newshape=[6, 140]) /* ty=Tensor[(6, 140), float64] */;
  %83 = reshape(%81, newshape=[6, 140]) /* ty=Tensor[(6, 140), float64] */;
  %84 = @func_12329(%82, %83) /* ty=(Tensor[(6, 140), float32],) */;
  %85 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %86 = %84.0;
  %87 = @func_8593() /* ty=Tensor[(11, 5, 7), float32] */;
  (%85, %86, meta[relay.Constant][6] /* ty=Tensor[(840), float64] */, %87)
}

def @func_6300() -> (Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) {
  %88 = @func_5218() /* ty=Tensor[(16, 10, 11), float32] */;
  %89 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
  (%88, %89)
}

def @func_3731(%var_3672: int8, %var_3673: Tensor[(12, 1, 2), int8], %var_3703: Tensor[(6, 28), float32], %var_3720: Tensor[(1536), float64], %var_3729: Tensor[(22), float32]) -> (Tensor[(12, 1, 2), int8], Tensor[(14, 3, 4), float32], Tensor[(6, 28), float32], Tensor[(12, 1, 2), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(165), uint8], Tensor[(12, 70), float64], Tensor[(22), float32]) {
  %90 = cast(%var_3672, dtype="int8") /* ty=int8 */;
  %91 = cast(%var_3673, dtype="int8") /* ty=Tensor[(12, 1, 2), int8] */;
  %92 = cast(%var_3703, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %93 = reshape(%92, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %94 = cast(%var_3673, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %95 = log10(%94) /* ty=Tensor[(12, 1, 2), float32] */;
  %96 = cast(%95, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %97 = cast(%var_3720, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %98 = reshape(%97, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %99 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 70), float64] */, dtype="float64") /* ty=Tensor[(12, 70), float64] */;
  %100 = cast(%var_3729, dtype="float32") /* ty=Tensor[(22), float32] */;
  %101 = reshape(%99, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
  %102 = reshape(%100, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %103 = @func_3644(%101, %102) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
  %104 = subtract(%90, %91) /* ty=Tensor[(12, 1, 2), int8] */;
  %105 = @func_2043(%93) /* ty=Tensor[(14, 3, 4), float32] */;
  %106 = erf(%96) /* ty=Tensor[(12, 1, 2), float32] */;
  %107 = @func_712(%98) /* ty=Tensor[(16, 12, 8), float64] */;
  %108 = %103.1;
  (%104, %105, %var_3703, %106, %107, %var_3720, %108, meta[relay.Constant][7] /* ty=Tensor[(12, 70), float64] */, %var_3729)
}

def @func_4845(%var_4838: Tensor[(22), float32]) -> (Tensor[(13, 6, 8), uint16], Tensor[(624), uint16], Tensor[(22), int64]) {
  %109 = cast(meta[relay.Constant][8] /* ty=Tensor[(624), uint16] */, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(624), uint16] */, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %111 = reshape(%109, newshape=[13, 6, 8]) /* ty=Tensor[(13, 6, 8), uint16] */;
  %112 = reshape(%110, newshape=[13, 6, 8]) /* ty=Tensor[(13, 6, 8), uint16] */;
  %113 = @func_4170(%111, %112) /* ty=(Tensor[(13, 6, 8), uint16],) */;
  %114 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %115 = %114.3;
  %116 = cast(%var_4838, dtype="int64") /* ty=Tensor[(22), int64] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(1), int32] */;
  %118 = cast(%115, dtype="int64") /* ty=Tensor[(22), int64] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?), int64] */;
  %120 = %113.0;
  %121 = left_shift(%118, %119) /* ty=Tensor[(22), int64] */;
  (%120, meta[relay.Constant][8] /* ty=Tensor[(624), uint16] */, %121)
}

def @func_11397() -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32]) {
  %122 = @func_8350() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %123 = %122.0;
  %124 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
  (%123, %124)
}

def @func_5253() -> Tensor[(11, 12, 2), float32] {
  @func_4996() /* ty=Tensor[(11, 12, 2), float32] */
}

def @func_11795(%var_11782: Tensor[(12, 7, 4), int16], %var_11783: Tensor[(12, 7, 4), int16]) -> Tensor[(12, 7, 4), bool] {
  %125 = cast(%var_11783, dtype="bool") /* ty=Tensor[(12, 7, 4), bool] */;
  %126 = shape_of(%var_11782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%var_11782, dtype="bool") /* ty=Tensor[(12, 7, 4), bool] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%127, %128) /* ty=Tensor[(12, 7, 4), bool] */
}

def @func_11572(%var_11483: Tensor[(96), float64], %var_11489: Tensor[(11, 12, 2), uint16]) -> (Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64], Tensor[(11, 12, 2), uint32], Tensor[(11, 12, 2), bool], Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), uint8]) {
  %129 = cast(%var_11483, dtype="float64") /* ty=Tensor[(96), float64] */;
  %130 = reshape(%129, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %131 = @func_9846(%130) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
  %132 = @func_7954() /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) */;
  %133 = %132.1;
  %134 = cast(%var_11489, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
  %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%133, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %138 = @func_7954() /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) */;
  %139 = @func_8857() /* ty=(Tensor[(16, 10, 11), float32],) */;
  %140 = @func_7793() /* ty=Tensor[(16, 10, 11), float32] */;
  %141 = %131.0;
  %142 = bitwise_or(%136, %137) /* ty=Tensor[(11, 12, 2), uint32] */;
  %143 = %138.0;
  %144 = %139.0;
  %145 = @func_8153() /* ty=Tensor[(11, 12, 2), uint16] */;
  %146 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
  (%140, %141, %var_11483, %142, %143, %144, %145, %146)
}

def @func_5086(%var_5070: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) {
  %147 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %148 = %147.0;
  %149 = cast(%var_5070, dtype="uint8") /* ty=Tensor[(16, 10, 11), uint8] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%148, dtype="uint8") /* ty=Tensor[(16, 10, 11), uint8] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %153 = cast(%var_5070, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
  %154 = left_shift(%151, %152) /* ty=Tensor[(16, 10, 11), uint8] */;
  %155 = asinh(%153) /* ty=Tensor[(16, 10, 11), float64] */;
  (%154, %155)
}

def @func_8515() -> (Tensor[(11, 12, 2), float32],) {
  %156 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %157 = %156.1;
  (%157,)
}

def @func_12168() -> (Tensor[(385), float32],) {
  %158 = @func_7988() /* ty=(Tensor[(385), float32], Tensor[(11, 5, 3), float32]) */;
  %159 = %158.0;
  (%159,)
}

def @func_5180(%var_5174: Tensor[(22), float32]) -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 1, 2), float32], Tensor[(165, 1), uint8], Tensor[(22), float32]) {
  %160 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %161 = cast(meta[relay.Constant][9] /* ty=Tensor[(165, 1), uint8] */, dtype="uint8") /* ty=Tensor[(165, 1), uint8] */;
  %162 = cast(%var_5174, dtype="float32") /* ty=Tensor[(22), float32] */;
  %163 = reshape(%161, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %164 = reshape(%162, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %165 = @func_1569(%163, %164) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
  %166 = %160.0;
  %167 = %165.2;
  (%166, %167, meta[relay.Constant][9] /* ty=Tensor[(165, 1), uint8] */, %var_5174)
}

def @func_11321(%var_11315: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(96), float64]) {
  %168 = @func_8515() /* ty=(Tensor[(11, 12, 2), float32],) */;
  %169 = cast(%var_11315, dtype="float64") /* ty=Tensor[(96), float64] */;
  %170 = reshape(%169, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %171 = @func_11303(%170) /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(16, 10, 11), float64]) */;
  %172 = %168.0;
  %173 = %171.2;
  (%172, %173, %var_11315)
}

def @func_11246(%var_11240: Tensor[(2, 7, 3), float32]) -> (Tensor[(2, 7, 3), float32], Tensor[(16, 10, 11), uint8]) {
  %174 = cast(%var_11240, dtype="float32") /* ty=Tensor[(2, 7, 3), float32] */;
  %175 = @func_9718() /* ty=(Tensor[(16, 10, 11), uint8],) */;
  %176 = atanh(%174) /* ty=Tensor[(2, 7, 3), float32] */;
  %177 = %175.0;
  (%176, %177)
}

def @func_12695() -> Tensor[(11, 1, 2), float64] {
  %178 = @func_12545() /* ty=(Tensor[(11, 1, 2), float64],) */;
  %178.0
}

def @func_10361(%var_10357: Tensor[(1, 96), float64]) -> (Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), float32], Tensor[(1, 96), float64]) {
  %179 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %180 = cast(%var_10357, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
  %181 = reshape(%180, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %182 = @func_9876(%181) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64]) */;
  %183 = %179.0;
  %184 = %182.0;
  (%183, %184, %var_10357)
}

def @func_5218() -> Tensor[(16, 10, 11), float32] {
  %185 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %185.0
}

def @func_4552(%var_4545: Tensor[(4, 14, 12), float64]) -> (Tensor[(4, 14, 12), float64],) {
  %186 = cast(%var_4545, dtype="float64") /* ty=Tensor[(4, 14, 12), float64] */;
  %187 = cosh(%186) /* ty=Tensor[(4, 14, 12), float64] */;
  (%187,)
}

def @func_10320() -> (Tensor[(385), float32],) {
  %188 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
  %189 = %188.2;
  (%189,)
}

def @func_12545() -> (Tensor[(11, 1, 2), float64],) {
  %190 = @func_8627() /* ty=Tensor[(11, 1, 2), float64] */;
  (%190,)
}

def @func_12280(%var_12262: Tensor[(336), int16]) -> (Tensor[(11, 12, 2), float64], Tensor[(12, 7, 4), bool], Tensor[(336), int16], Tensor[(11, 12, 2), uint16]) {
  %191 = cast(%var_12262, dtype="int16") /* ty=Tensor[(336), int16] */;
  %192 = cast(%var_12262, dtype="int16") /* ty=Tensor[(336), int16] */;
  %193 = reshape(%191, newshape=[12, 7, 4]) /* ty=Tensor[(12, 7, 4), int16] */;
  %194 = reshape(%192, newshape=[12, 7, 4]) /* ty=Tensor[(12, 7, 4), int16] */;
  %195 = @func_10992() /* ty=Tensor[(11, 12, 2), float64] */;
  %196 = @func_11795(%193, %194) /* ty=Tensor[(12, 7, 4), bool] */;
  %197 = @func_9825() /* ty=Tensor[(11, 12, 2), uint16] */;
  (%195, %196, %var_12262, %197)
}

def @func_712(%var_700: Tensor[(16, 12, 8), float64]) -> Tensor[(16, 12, 8), float64] {
  %198 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %199 = shape_of(%var_700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%var_700, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%200, %201) /* ty=Tensor[(16, 12, 8), float64] */
}

def @func_6387(%var_6376: Tensor[(1536), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(1536), float64], Tensor[(1536), float64]) {
  %202 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %203 = cast(%var_6376, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %204 = reshape(%203, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %205 = @func_6168(%204) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
  %206 = %205.2;
  %207 = cast(%206, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %208 = %202.0;
  %209 = acos(%207) /* ty=Tensor[(1536), float64] */;
  (%208, %var_6376, %209)
}

def @func_13645(%var_13583: Tensor[(385), float32], %var_13609: Tensor[(385), float64], %var_13635: Tensor[(672), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(385), float32], Tensor[(6, 7, 16), float32], Tensor[(672), float32]) {
  %210 = cast(meta[relay.Constant][11] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %211 = reshape(%210, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %212 = @func_8384(%211) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
  %213 = @func_7988() /* ty=(Tensor[(385), float32], Tensor[(11, 5, 3), float32]) */;
  %214 = %213.0;
  %215 = cast(%var_13583, dtype="float64") /* ty=Tensor[(385), float64] */;
  %216 = shape_of(%214, dtype="int32") /* ty=Tensor[(1), int32] */;
  %217 = cast(%214, dtype="float64") /* ty=Tensor[(385), float64] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?), float64] */;
  %219 = power(%217, %218) /* ty=Tensor[(385), float64] */;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(385), float64] */;
  %221 = atanh(%220) /* ty=Tensor[(385), float64] */;
  %222 = cast(%var_13609, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(1), int32] */;
  %224 = cast(%221, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %226 = minimum(%224, %225) /* ty=Tensor[(385), uint64] */;
  %227 = cast(%226, dtype="float32") /* ty=Tensor[(385), float32] */;
  %228 = cast(%var_13635, dtype="float32") /* ty=Tensor[(672), float32] */;
  %229 = reshape(%228, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float32] */;
  %230 = %212.1;
  %231 = acos(%227) /* ty=Tensor[(385), float32] */;
  %232 = @func_11175(%229) /* ty=Tensor[(6, 7, 16), float32] */;
  (%230, meta[relay.Constant][11] /* ty=Tensor[(168), float32] */, %231, %232, %var_13635)
}

def @func_8593() -> Tensor[(11, 5, 7), float32] {
  %233 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
  %233.1
}

def @func_10695() -> (Tensor[(11, 12, 2), uint16], Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(11, 12, 2), uint16]) {
  %234 = cast(meta[relay.Constant][12] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %235 = reshape(%234, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %236 = @func_10663() /* ty=Tensor[(11, 12, 2), uint16] */;
  %237 = @func_2043(%235) /* ty=Tensor[(14, 3, 4), float32] */;
  %238 = @func_10663() /* ty=Tensor[(11, 12, 2), uint16] */;
  (%236, %237, meta[relay.Constant][12] /* ty=Tensor[(168), float32] */, %238)
}

def @func_4820() -> (Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) {
  %239 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %240 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 10, 11), float32] */, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
  %241 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(16, 10, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 10, 11), float32] */, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %244 = cast(meta[relay.Constant][15] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %245 = reshape(%244, newshape=[11, 1, 2]) /* ty=Tensor[(11, 1, 2), float32] */;
  %246 = asin(%239) /* ty=Tensor[(16, 10, 11), float32] */;
  %247 = mod(%242, %243) /* ty=Tensor[(16, 10, 11), float64] */;
  %248 = @func_295(%245) /* ty=Tensor[(11, 1, 2), float32] */;
  (%246, %247, %248, meta[relay.Constant][15] /* ty=Tensor[(22), float32] */)
}

def @func_6917(%var_6909: Tensor[(672), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float64], Tensor[(16, 10, 11), uint8]) {
  %249 = @func_5123() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %250 = cast(%var_6909, dtype="float64") /* ty=Tensor[(672), float64] */;
  %251 = reshape(%250, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %252 = @func_6515(%251) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) */;
  %253 = %249.0;
  %254 = %252.0;
  %255 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
  (%253, %254, %var_6909, %255)
}

def @func_1820(%var_1805: Tensor[(22), float32]) -> (Tensor[(3, 5, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) {
  %256 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %257 = cast(meta[relay.Constant][17] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %258 = cast(%var_1805, dtype="float32") /* ty=Tensor[(22), float32] */;
  %259 = reshape(%257, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %260 = reshape(%258, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %261 = @func_1569(%259, %260) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
  %262 = cast(meta[relay.Constant][18] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %263 = reshape(%262, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %264 = acos(%256) /* ty=Tensor[(3, 5, 2), float32] */;
  %265 = %261.0;
  %266 = @func_712(%263) /* ty=Tensor[(16, 12, 8), float64] */;
  (%264, %265, meta[relay.Constant][17] /* ty=Tensor[(165), uint8] */, %var_1805, %266, meta[relay.Constant][18] /* ty=Tensor[(1536), float64] */)
}

def @func_13138() -> Tensor[(11, 12, 2), bool] {
  %267 = @func_8515() /* ty=(Tensor[(11, 12, 2), float32],) */;
  %268 = %267.0;
  %269 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 12, 2), float32] */, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%271, %272) /* ty=Tensor[(11, 12, 2), bool] */
}

def @func_6194() -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) {
  %273 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %274 = %273.0;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %276 = reshape(%275, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %277 = @func_5086(%276) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) */;
  %278 = %277.0;
  (%274, %278)
}

def @func_7934() -> (Tensor[(11, 12, 2), bool],) {
  %279 = @func_7022() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %280 = %279.0;
  (%280,)
}

def @func_4170(%var_4161: Tensor[(13, 6, 8), uint16], %var_4162: Tensor[(13, 6, 8), uint16]) -> (Tensor[(13, 6, 8), uint16],) {
  %281 = cast(%var_4162, dtype="uint16") /* ty=Tensor[(13, 6, 8), uint16] */;
  %282 = shape_of(%var_4161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%var_4161, dtype="uint16") /* ty=Tensor[(13, 6, 8), uint16] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %285 = logical_xor(%283, %284) /* ty=Tensor[(13, 6, 8), uint16] */;
  (%285,)
}

def @func_11356(%var_11349: Tensor[(3, 3, 7), float64]) -> (Tensor[(3, 3, 7), float64],) {
  %286 = cast(%var_11349, dtype="float64") /* ty=Tensor[(3, 3, 7), float64] */;
  %287 = log10(%286) /* ty=Tensor[(3, 3, 7), float64] */;
  (%287,)
}

def @func_118(%var_87: Tensor[(2, 4, 6), float64]) -> (Tensor[(2, 4, 6), float64],) {
  %288 = cast(%var_87, dtype="float64") /* ty=Tensor[(2, 4, 6), float64] */;
  %289 = tan(%288) /* ty=Tensor[(2, 4, 6), float64] */;
  (%289,)
}

def @func_6107() -> (Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) {
  %290 = @func_5819() /* ty=(Tensor[(11, 5, 3), bool],) */;
  %291 = cast(meta[relay.Constant][20] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %292 = reshape(%291, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float32] */;
  %293 = %290.0;
  %294 = @func_5701(%292) /* ty=Tensor[(11, 5, 7), float32] */;
  (%293, %294, meta[relay.Constant][20] /* ty=Tensor[(385), float32] */)
}

def @func_8128(%var_8109: Tensor[(11, 12, 2), float32]) -> Tensor[(11, 12, 2), uint32] {
  %295 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %296 = %295.0;
  %297 = cast(%var_8109, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
  %298 = shape_of(%296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%296, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%299, %300) /* ty=Tensor[(11, 12, 2), uint32] */
}

def @func_12439() -> Tensor[(11, 12, 2), float32] {
  %301 = @func_11734() /* ty=Tensor[(11, 12, 2), uint16] */;
  %302 = cast(%301, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  log(%302) /* ty=Tensor[(11, 12, 2), float32] */
}

def @func_9825() -> Tensor[(11, 12, 2), uint16] {
  @func_5483() /* ty=Tensor[(11, 12, 2), uint16] */
}

def @func_2297(%var_2282: float32) -> Tensor[(4, 16, 2), bool] {
  %303 = cast(%var_2282, dtype="bool") /* ty=bool */;
  %304 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 16, 2), float32] */, dtype="bool") /* ty=Tensor[(4, 16, 2), bool] */;
  not_equal(%303, %304) /* ty=Tensor[(4, 16, 2), bool] */
}

def @func_10221() -> (Tensor[(11, 1, 2), float32], Tensor[(385), float32]) {
  %305 = @func_6476() /* ty=(Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %306 = @func_8918() /* ty=(Tensor[(385), float32],) */;
  %307 = %305.1;
  %308 = %306.0;
  (%307, %308)
}

def @func_8901() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) {
  %309 = @func_5690() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) */;
  %310 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %311 = %309.4;
  (%310, %311)
}

def @func_1569(%var_1557: Tensor[(11, 5, 3), uint8], %var_1565: Tensor[(1, 22), float32]) -> (Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) {
  %312 = cast(%var_1557, dtype="bool") /* ty=Tensor[(11, 5, 3), bool] */;
  %313 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(11, 5, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 5, 3), uint8] */, dtype="bool") /* ty=Tensor[(11, 5, 3), bool] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %316 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 5, 3), uint8] */, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
  %317 = cast(%var_1565, dtype="float32") /* ty=Tensor[(1, 22), float32] */;
  %318 = reshape(%317, newshape=[11, 1, 2]) /* ty=Tensor[(11, 1, 2), float32] */;
  %319 = less_equal(%314, %315) /* ty=Tensor[(11, 5, 3), bool] */;
  %320 = erf(%316) /* ty=Tensor[(11, 5, 3), float32] */;
  %321 = @func_295(%318) /* ty=Tensor[(11, 1, 2), float32] */;
  (%319, %320, %321, %var_1565)
}

def @func_5564() -> (Tensor[(11, 12, 2), uint16],) {
  %322 = @func_5483() /* ty=Tensor[(11, 12, 2), uint16] */;
  (%322,)
}

def @func_8350() -> (Tensor[(11, 12, 2), bool],) {
  %323 = @func_7934() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %324 = %323.0;
  (%324,)
}

def @func_5819() -> (Tensor[(11, 5, 3), bool],) {
  %325 = @func_5690() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) */;
  %326 = %325.1;
  (%326,)
}

def @func_9119(%var_9091: Tensor[(4, 4, 15), float32], %var_9114: Tensor[(22), float32]) -> (Tensor[(4, 4, 15), float32], Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(22), float32]) {
  %327 = cast(%var_9091, dtype="float32") /* ty=Tensor[(4, 4, 15), float32] */;
  %328 = @func_5123() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %329 = cast(%var_9114, dtype="float32") /* ty=Tensor[(22), float32] */;
  %330 = reshape(%329, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %331 = @func_7385(%330) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(22), float32], Tensor[(11, 12, 2), uint16], Tensor[(4, 384), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8], Tensor[(784, 2), bool], Tensor[(11, 12, 2), uint16]) */;
  %332 = cosh(%327) /* ty=Tensor[(4, 4, 15), float32] */;
  %333 = %328.0;
  %334 = %331.2;
  (%332, %333, %334, %var_9114)
}

def @func_8153() -> Tensor[(11, 12, 2), uint16] {
  %335 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %335.0
}

def @func_11696() -> (Tensor[(11, 1, 2), float32],) {
  %336 = @func_10221() /* ty=(Tensor[(11, 1, 2), float32], Tensor[(385), float32]) */;
  %337 = %336.0;
  (%337,)
}

def @func_13262(%var_13225: Tensor[(96), float64]) -> (Tensor[(16, 10, 11), float32], Tensor[(96), float64], Tensor[(22), int64], Tensor[(11, 2), float32], Tensor[(15, 9, 8), float64]) {
  %338 = cast(%var_13225, dtype="float64") /* ty=Tensor[(96), float64] */;
  %339 = reshape(%338, newshape=[1, 96]) /* ty=Tensor[(1, 96), float64] */;
  %340 = @func_10361(%339) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), float32], Tensor[(1, 96), float64]) */;
  %341 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 2), float32] */, dtype="float32") /* ty=Tensor[(11, 2), float32] */;
  %342 = reshape(%341, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %343 = @func_4845(%342) /* ty=(Tensor[(13, 6, 8), uint16], Tensor[(624), uint16], Tensor[(22), int64]) */;
  %344 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 9, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
  %345 = acos(%344) /* ty=Tensor[(15, 9, 8), float32] */;
  %346 = cast(%345, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
  %347 = %340.0;
  %348 = %343.2;
  %349 = cos(%346) /* ty=Tensor[(15, 9, 8), float64] */;
  (%347, %var_13225, %348, meta[relay.Constant][23] /* ty=Tensor[(11, 2), float32] */, %349)
}

def @func_12880() -> (Tensor[(385), float64],) {
  %350 = @func_7988() /* ty=(Tensor[(385), float32], Tensor[(11, 5, 3), float32]) */;
  %351 = %350.0;
  %352 = cast(meta[relay.Constant][25] /* ty=Tensor[(385), float32] */, dtype="float64") /* ty=Tensor[(385), float64] */;
  %353 = shape_of(%351, dtype="int32") /* ty=Tensor[(1), int32] */;
  %354 = cast(%351, dtype="float64") /* ty=Tensor[(385), float64] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?), float64] */;
  %356 = multiply(%354, %355) /* ty=Tensor[(385), float64] */;
  (%356,)
}

def @func_11232() -> (Tensor[(11, 12, 2), float64],) {
  %357 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %358 = %357.0;
  (%358,)
}

def @func_9876(%var_9874: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64]) {
  %359 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
  %360 = cast(%var_9874, dtype="float64") /* ty=Tensor[(96), float64] */;
  %361 = reshape(%360, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %362 = @func_9846(%361) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
  %363 = %359.0;
  %364 = %362.0;
  (%363, %364, %var_9874)
}

def @func_12329(%var_12314: Tensor[(6, 140), float64], %var_12324: Tensor[(6, 140), float64]) -> (Tensor[(6, 140), float32],) {
  %365 = @func_9934() /* ty=(Tensor[(6, 140), float64],) */;
  %366 = %365.0;
  %367 = cast(%var_12314, dtype="int32") /* ty=Tensor[(6, 140), int32] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(2), int32] */;
  %369 = cast(%366, dtype="int32") /* ty=Tensor[(6, 140), int32] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %371 = bitwise_xor(%369, %370) /* ty=Tensor[(6, 140), int32] */;
  %372 = cast(%371, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %373 = shape_of(%var_12314, dtype="int32") /* ty=Tensor[(2), int32] */;
  %374 = cast(%var_12314, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %376 = divide(%374, %375) /* ty=Tensor[(6, 140), float64] */;
  %377 = cast(%var_12324, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %378 = shape_of(%376, dtype="int32") /* ty=Tensor[(2), int32] */;
  %379 = cast(%376, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %381 = mod(%379, %380) /* ty=Tensor[(6, 140), float32] */;
  (%381,)
}

def @func_7793() -> Tensor[(16, 10, 11), float32] {
  %382 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %383 = %382.0;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  log2(%384) /* ty=Tensor[(16, 10, 11), float32] */
}

def @func_11952() -> (Tensor[(16, 10, 11), float32], Tensor[(385), float32], Tensor[(672), float64], Tensor[(672), float64], Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float32]) {
  %385 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %386 = @func_8918() /* ty=(Tensor[(385), float32],) */;
  %387 = cast(meta[relay.Constant][26] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %388 = reshape(%387, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %389 = @func_10545(%388) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) */;
  %390 = @func_11100() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) */;
  %391 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %392 = %385.0;
  %393 = %386.0;
  %394 = %389.2;
  %395 = %390.0;
  %396 = %391.1;
  (%392, %393, %394, meta[relay.Constant][26] /* ty=Tensor[(672), float64] */, %395, %396)
}

def @func_5294(%var_5274: Tensor[(16, 10, 11), float32], %var_5287: Tensor[(768, 2), float64]) -> (Tensor[(16, 10, 11), bool], Tensor[(16, 12, 8), float64], Tensor[(768, 2), float64]) {
  %397 = @func_5218() /* ty=Tensor[(16, 10, 11), float32] */;
  %398 = cast(%var_5274, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%397, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %402 = cast(%var_5287, dtype="float64") /* ty=Tensor[(768, 2), float64] */;
  %403 = reshape(%402, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %404 = greater(%400, %401) /* ty=Tensor[(16, 10, 11), bool] */;
  %405 = @func_712(%403) /* ty=Tensor[(16, 12, 8), float64] */;
  (%404, %405, %var_5287)
}

def @func_4522(%var_4477: Tensor[(14, 7, 16), float32], %var_4511: Tensor[(1536), float64], %var_4515: Tensor[(14, 7, 16), float32]) -> (Tensor[(22), float32], Tensor[(60), float64], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), uint32]) {
  %406 = cast(meta[relay.Constant][27] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %407 = cast(meta[relay.Constant][28] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %408 = reshape(%406, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), float64] */;
  %409 = reshape(%407, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %410 = @func_4370(%408, %409) /* ty=(Tensor[(3, 4, 5), float64], Tensor[(11, 5, 3), bool], Tensor[(22), float32]) */;
  %411 = cast(%var_4511, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %412 = reshape(%411, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %413 = cast(%var_4477, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %414 = log10(%413) /* ty=Tensor[(14, 7, 16), float32] */;
  %415 = cast(%414, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %416 = atan(%415) /* ty=Tensor[(14, 7, 16), float32] */;
  %417 = cast(%var_4515, dtype="uint32") /* ty=Tensor[(14, 7, 16), uint32] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="uint32") /* ty=Tensor[(14, 7, 16), uint32] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %421 = %410.2;
  %422 = @func_712(%412) /* ty=Tensor[(16, 12, 8), float64] */;
  %423 = bitwise_and(%419, %420) /* ty=Tensor[(14, 7, 16), uint32] */;
  (%421, meta[relay.Constant][27] /* ty=Tensor[(60), float64] */, meta[relay.Constant][28] /* ty=Tensor[(22), float32] */, %422, %var_4511, %423)
}

def @func_8219(%var_8170: Tensor[(8, 7, 7), float64]) -> (Tensor[(8, 7, 7), float64], Tensor[(11, 12, 2), uint16]) {
  %424 = cast(%var_8170, dtype="float64") /* ty=Tensor[(8, 7, 7), float64] */;
  %425 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %426 = rsqrt(%424) /* ty=Tensor[(8, 7, 7), float64] */;
  %427 = %425.0;
  (%426, %427)
}

def @func_9583() -> (Tensor[(11, 12, 2), uint16], Tensor[(385), float32], Tensor[(16, 10, 11), float64]) {
  %428 = @func_8918() /* ty=(Tensor[(385), float32],) */;
  %429 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %430 = @func_8153() /* ty=Tensor[(11, 12, 2), uint16] */;
  %431 = %428.0;
  %432 = %429.1;
  (%430, %431, %432)
}

def @func_4996() -> Tensor[(11, 12, 2), float32] {
  %433 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %434 = %433.0;
  %435 = cast(%434, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  log2(%435) /* ty=Tensor[(11, 12, 2), float32] */
}

def @func_13028() -> (Tensor[(11, 1, 2), float64],) {
  %436 = @func_8627() /* ty=Tensor[(11, 1, 2), float64] */;
  (%436,)
}

def @func_2043(%var_2040: Tensor[(14, 3, 4), float32]) -> Tensor[(14, 3, 4), float32] {
  %437 = cast(%var_2040, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  exp(%437) /* ty=Tensor[(14, 3, 4), float32] */
}

def @func_7240() -> (Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) {
  %438 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %439 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %440 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
  %441 = %440.1;
  %442 = cast(%441, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %443 = %438.0;
  %444 = %439.0;
  %445 = tan(%442) /* ty=Tensor[(16, 10, 11), float32] */;
  (%443, %444, %445)
}

def @func_7617() -> (Tensor[(165), uint8],) {
  %446 = @func_6417() /* ty=(Tensor[(165), uint8],) */;
  %447 = %446.0;
  (%447,)
}

def @func_5946() -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) {
  %448 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %449 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %450 = %448.0;
  %451 = %449.0;
  (%450, %451)
}

def @func_7385(%var_7308: Tensor[(22), float32]) -> (Tensor[(11, 5, 3), bool], Tensor[(22), float32], Tensor[(11, 12, 2), uint16], Tensor[(4, 384), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8], Tensor[(784, 2), bool], Tensor[(11, 12, 2), uint16]) {
  %452 = cast(%var_7308, dtype="float32") /* ty=Tensor[(22), float32] */;
  %453 = reshape(%452, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %454 = @func_6787(%453) /* ty=(Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(840), float64], Tensor[(22), float32]) */;
  %455 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %456 = @func_5946() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) */;
  %457 = %456.1;
  %458 = @func_6300() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) */;
  %459 = %458.0;
  %460 = cast(%459, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %461 = sinh(%460) /* ty=Tensor[(16, 10, 11), float32] */;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
  %463 = atanh(%462) /* ty=Tensor[(16, 10, 11), float64] */;
  %464 = cast(%463, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %465 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%457, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %468 = cast(%457, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %469 = reshape(%468, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %470 = @func_5086(%469) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) */;
  %471 = cast(meta[relay.Constant][30] /* ty=Tensor[(784, 2), float32] */, dtype="float32") /* ty=Tensor[(784, 2), float32] */;
  %472 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 384), float64] */, dtype="float64") /* ty=Tensor[(4, 384), float64] */;
  %473 = cast(meta[relay.Constant][30] /* ty=Tensor[(784, 2), float32] */, dtype="float32") /* ty=Tensor[(784, 2), float32] */;
  %474 = reshape(%471, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %475 = reshape(%472, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %476 = reshape(%473, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
  %477 = @func_4522(%474, %475, %476) /* ty=(Tensor[(22), float32], Tensor[(60), float64], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), uint32]) */;
  %478 = %477.5;
  %479 = cast(%478, dtype="bool") /* ty=Tensor[(14, 7, 16), bool] */;
  %480 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(784, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %481 = cast(meta[relay.Constant][30] /* ty=Tensor[(784, 2), float32] */, dtype="bool") /* ty=Tensor[(784, 2), bool] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %483 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 384), float64] */, dtype="float64") /* ty=Tensor[(4, 384), float64] */;
  %484 = reshape(%483, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %485 = @func_6387(%484) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(1536), float64], Tensor[(1536), float64]) */;
  %486 = %454.1;
  %487 = %455.0;
  %488 = floor_mod(%466, %467) /* ty=Tensor[(16, 10, 11), float32] */;
  %489 = %470.0;
  %490 = logical_and(%481, %482) /* ty=Tensor[(784, 2), bool] */;
  %491 = %485.0;
  (%486, %var_7308, %487, meta[relay.Constant][29] /* ty=Tensor[(4, 384), float64] */, %488, %489, %490, %491)
}

def @func_12742() -> (Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) {
  %492 = @func_8593() /* ty=Tensor[(11, 5, 7), float32] */;
  %493 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%492, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %497 = cast(meta[relay.Constant][32] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %498 = reshape(%497, newshape=[16, 3, 2]) /* ty=Tensor[(16, 3, 2), float64] */;
  %499 = @func_4657(%498) /* ty=(Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) */;
  %500 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
  %501 = maximum(%495, %496) /* ty=Tensor[(11, 5, 7), float32] */;
  %502 = %499.0;
  (%500, %501, %502, meta[relay.Constant][32] /* ty=Tensor[(96), float64] */)
}

def @func_5701(%var_5693: Tensor[(11, 5, 7), float32]) -> Tensor[(11, 5, 7), float32] {
  %503 = cast(%var_5693, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
  cos(%503) /* ty=Tensor[(11, 5, 7), float32] */
}

def @func_6747(%var_6697: Tensor[(385), float32], %var_6712: Tensor[(385), float32], %var_6729: Tensor[(1760), float32], %var_6730: Tensor[(1536), float64], %var_6745: Tensor[(22), float32]) -> (Tensor[(385), uint16], Tensor[(385), int32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1760), float32], Tensor[(11, 12, 2), float32], Tensor[(7, 12, 10), bool], Tensor[(840), float64], Tensor[(22), float32]) {
  %504 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
  %505 = %504.2;
  %506 = cast(%var_6697, dtype="uint16") /* ty=Tensor[(385), uint16] */;
  %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(1), int32] */;
  %508 = cast(%505, dtype="uint16") /* ty=Tensor[(385), uint16] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %510 = cast(%var_6712, dtype="int32") /* ty=Tensor[(385), int32] */;
  %511 = shape_of(%505, dtype="int32") /* ty=Tensor[(1), int32] */;
  %512 = cast(%505, dtype="int32") /* ty=Tensor[(385), int32] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?), int32] */;
  %514 = cast(%var_6729, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %515 = cast(%var_6730, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %516 = reshape(%514, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %517 = reshape(%515, newshape=[768, 2]) /* ty=Tensor[(768, 2), float64] */;
  %518 = @func_5294(%516, %517) /* ty=(Tensor[(16, 10, 11), bool], Tensor[(16, 12, 8), float64], Tensor[(768, 2), float64]) */;
  %519 = cast(%var_6729, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %520 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %521 = cast(meta[relay.Constant][33] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %522 = cast(%var_6745, dtype="float32") /* ty=Tensor[(22), float32] */;
  %523 = reshape(%521, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
  %524 = reshape(%522, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %525 = @func_3644(%523, %524) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
  %526 = bitwise_and(%508, %509) /* ty=Tensor[(385), uint16] */;
  %527 = left_shift(%512, %513) /* ty=Tensor[(385), int32] */;
  %528 = %518.1;
  %529 = log2(%519) /* ty=Tensor[(1760), float32] */;
  %530 = %520.1;
  %531 = %525.8;
  (%526, %527, %528, %var_6730, %529, %530, %531, meta[relay.Constant][33] /* ty=Tensor[(840), float64] */, %var_6745)
}

def @func_4946() -> (Tensor[(11, 12, 2), uint16],) {
  %532 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %533 = %532.2;
  %534 = cast(%533, dtype="uint16") /* ty=Tensor[(11, 1, 2), uint16] */;
  %535 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 12, 2), float32] */, dtype="uint16") /* ty=Tensor[(11, 12, 2), uint16] */;
  %536 = subtract(%534, %535) /* ty=Tensor[(11, 12, 2), uint16] */;
  (%536,)
}

def @func_6787(%var_6781: Tensor[(22), float32]) -> (Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(840), float64], Tensor[(22), float32]) {
  %537 = @func_6476() /* ty=(Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %538 = cast(meta[relay.Constant][35] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %539 = cast(%var_6781, dtype="float32") /* ty=Tensor[(22), float32] */;
  %540 = reshape(%538, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
  %541 = reshape(%539, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %542 = @func_3644(%540, %541) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
  %543 = %537.0;
  %544 = %542.0;
  (%543, %544, meta[relay.Constant][35] /* ty=Tensor[(840), float64] */, %var_6781)
}

def @func_12217() -> (Tensor[(16, 10, 11), float32], Tensor[(22), float32], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(385), float32], Tensor[(96), float64]) {
  %545 = @func_8713() /* ty=(Tensor[(16, 10, 11), float32],) */;
  %546 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 22), float32] */, dtype="float32") /* ty=Tensor[(1, 22), float32] */;
  %547 = reshape(%546, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %548 = @func_9227(%547) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(385), int32], Tensor[(385), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(165), uint8]) */;
  %549 = cast(meta[relay.Constant][37] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %550 = reshape(%549, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %551 = @func_9846(%550) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
  %552 = cast(meta[relay.Constant][37] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %553 = reshape(%552, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %554 = @func_9876(%553) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64]) */;
  %555 = %545.0;
  %556 = %548.4;
  %557 = %551.1;
  %558 = @func_8235() /* ty=Tensor[(385), float32] */;
  %559 = %554.2;
  (%555, %556, meta[relay.Constant][36] /* ty=Tensor[(1, 22), float32] */, %557, meta[relay.Constant][37] /* ty=Tensor[(96), float64] */, %558, %559)
}

def @func_6515(%var_6509: Tensor[(672), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) {
  %560 = @func_5690() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) */;
  %561 = cast(%var_6509, dtype="float64") /* ty=Tensor[(672), float64] */;
  %562 = reshape(%561, newshape=[4, 14, 12]) /* ty=Tensor[(4, 14, 12), float64] */;
  %563 = @func_4552(%562) /* ty=(Tensor[(4, 14, 12), float64],) */;
  %564 = %560.4;
  %565 = %563.0;
  (%564, %565, %var_6509)
}

def @func_8100(%var_8057: Tensor[(840), float64], %var_8058: Tensor[(22), float32]) -> (Tensor[(16, 10, 11), uint8], Tensor[(165), uint8], Tensor[(840), float64], Tensor[(22), float32], Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) {
  %566 = cast(%var_8057, dtype="float64") /* ty=Tensor[(840), float64] */;
  %567 = cast(%var_8058, dtype="float32") /* ty=Tensor[(22), float32] */;
  %568 = reshape(%566, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
  %569 = reshape(%567, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %570 = @func_3644(%568, %569) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
  %571 = @func_7549() /* ty=Tensor[(16, 10, 11), uint8] */;
  %572 = cast(%571, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %573 = reshape(%572, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %574 = @func_5086(%573) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) */;
  %575 = cast(meta[relay.Constant][38] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %576 = reshape(%575, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float32] */;
  %577 = %570.1;
  %578 = %574.0;
  %579 = @func_5701(%576) /* ty=Tensor[(11, 5, 7), float32] */;
  (%571, %577, %var_8057, %var_8058, %578, %579, meta[relay.Constant][38] /* ty=Tensor[(385), float32] */)
}

def @func_7872() -> (Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) {
  %580 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %581 = %580.0;
  %582 = cast(%581, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %583 = exp(%582) /* ty=Tensor[(11, 12, 2), float64] */;
  %584 = @func_7793() /* ty=Tensor[(16, 10, 11), float32] */;
  (%583, %584)
}

def @func_8845() -> (Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float64]) {
  %585 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %586 = @func_6343() /* ty=Tensor[(16, 10, 11), float64] */;
  %587 = %585.0;
  (%586, %587)
}

def @func_12397() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 5, 7), float32], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) {
  %588 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
  %589 = cast(meta[relay.Constant][39] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %590 = reshape(%589, newshape=[11, 1, 2]) /* ty=Tensor[(11, 1, 2), float32] */;
  %591 = %588.0;
  %592 = @func_8593() /* ty=Tensor[(11, 5, 7), float32] */;
  %593 = @func_295(%590) /* ty=Tensor[(11, 1, 2), float32] */;
  (%591, %592, %593, meta[relay.Constant][39] /* ty=Tensor[(22), float32] */)
}

def @func_7954() -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) {
  %594 = @func_7934() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %595 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %596 = %594.0;
  %597 = %595.0;
  (%596, %597)
}

def @func_3644(%var_3576: Tensor[(7, 12, 10), float64], %var_3581: Tensor[(1, 22), float32]) -> (Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) {
  %598 = cast(meta[relay.Constant][40] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %599 = cast(%var_3581, dtype="float32") /* ty=Tensor[(1, 22), float32] */;
  %600 = reshape(%598, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %601 = reshape(%599, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %602 = @func_1569(%600, %601) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
  %603 = cast(-2.47667f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %604 = reshape(%603, newshape=[]) /* ty=float32 */;
  %605 = cast(%var_3576, dtype="float64") /* ty=Tensor[(7, 12, 10), float64] */;
  %606 = acosh(%605) /* ty=Tensor[(7, 12, 10), float64] */;
  %607 = cast(%var_3576, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%606, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %611 = cast(meta[relay.Constant][41] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %612 = reshape(%611, newshape=[1, 4, 2]) /* ty=Tensor[(1, 4, 2), float64] */;
  %613 = @func_2642(%612) /* ty=(Tensor[(1, 4, 2), float64], Tensor[(?, 4, 2), float64]) */;
  %614 = cast(%606, dtype="float32") /* ty=Tensor[(7, 12, 10), float32] */;
  %615 = acos(%614) /* ty=Tensor[(7, 12, 10), float32] */;
  %616 = cast(%615, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %617 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(%606, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %620 = %602.0;
  %621 = @func_2297(%604) /* ty=Tensor[(4, 16, 2), bool] */;
  %622 = less_equal(%609, %610) /* ty=Tensor[(7, 12, 10), bool] */;
  %623 = %613.1;
  %624 = equal(%618, %619) /* ty=Tensor[(7, 12, 10), bool] */;
  (%620, meta[relay.Constant][40] /* ty=Tensor[(165), uint8] */, %var_3581, %621, -2.47667f /* ty=float32 */, %622, %623, meta[relay.Constant][41] /* ty=Tensor[(8), float64] */, %624)
}

def @func_13341() -> (Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64], Tensor[(1760), uint8], Tensor[(168), float32], Tensor[(84, 2), float32]) {
  %625 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
  %626 = cast(meta[relay.Constant][42] /* ty=Tensor[(1760), uint8] */, dtype="uint8") /* ty=Tensor[(1760), uint8] */;
  %627 = reshape(%626, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), uint8] */;
  %628 = cast(meta[relay.Constant][43] /* ty=Tensor[(84, 2), float32] */, dtype="float32") /* ty=Tensor[(84, 2), float32] */;
  %629 = reshape(%628, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %630 = @func_8384(%629) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
  %631 = %625.1;
  %632 = @func_10477(%627) /* ty=Tensor[(16, 10, 11), float64] */;
  %633 = %630.2;
  (%631, %632, meta[relay.Constant][42] /* ty=Tensor[(1760), uint8] */, %633, meta[relay.Constant][43] /* ty=Tensor[(84, 2), float32] */)
}

def @func_6417() -> (Tensor[(165), uint8],) {
  %634 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %635 = %634.2;
  (%635,)
}

def @func_9227(%var_9216: Tensor[(22), float32]) -> (Tensor[(16, 10, 11), float64], Tensor[(385), int32], Tensor[(385), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(165), uint8]) {
  %636 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %637 = cast(meta[relay.Constant][44] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %638 = cast(meta[relay.Constant][44] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %639 = %636.0;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %641 = cast(meta[relay.Constant][45] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %642 = cast(%var_9216, dtype="float32") /* ty=Tensor[(22), float32] */;
  %643 = reshape(%637, newshape=[385]) /* ty=Tensor[(385), float32] */;
  %644 = reshape(%638, newshape=[385]) /* ty=Tensor[(385), float32] */;
  %645 = reshape(%640, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
  %646 = reshape(%641, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %647 = reshape(%642, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %648 = @func_6747(%643, %644, %645, %646, %647) /* ty=(Tensor[(385), uint16], Tensor[(385), int32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1760), float32], Tensor[(11, 12, 2), float32], Tensor[(7, 12, 10), bool], Tensor[(840), float64], Tensor[(22), float32]) */;
  %649 = @func_7617() /* ty=(Tensor[(165), uint8],) */;
  %650 = %648.1;
  %651 = %649.0;
  (%639, %650, meta[relay.Constant][44] /* ty=Tensor[(385), float32] */, meta[relay.Constant][45] /* ty=Tensor[(1536), float64] */, %var_9216, %651)
}

def @func_10916() -> (Tensor[(11, 12, 2), uint16],) {
  %652 = @func_8153() /* ty=Tensor[(11, 12, 2), uint16] */;
  (%652,)
}

def @func_4657(%var_4637: Tensor[(16, 3, 2), float64]) -> (Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) {
  %653 = cast(4.47255f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %654 = reshape(%653, newshape=[]) /* ty=float32 */;
  %655 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 3, 2), float64] */, dtype="bool") /* ty=Tensor[(16, 3, 2), bool] */;
  %656 = shape_of(%var_4637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%var_4637, dtype="bool") /* ty=Tensor[(16, 3, 2), bool] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %659 = not_equal(%657, %658) /* ty=Tensor[(16, 3, 2), bool] */;
  %660 = cast(4.47255f /* ty=float32 */, dtype="int8") /* ty=int8 */;
  %661 = cast(%659, dtype="int8") /* ty=Tensor[(16, 3, 2), int8] */;
  %662 = @func_2297(%654) /* ty=Tensor[(4, 16, 2), bool] */;
  %663 = minimum(%660, %661) /* ty=Tensor[(16, 3, 2), int8] */;
  (%662, %663)
}

def @func_4370(%var_4352: Tensor[(3, 4, 5), float64], %var_4366: Tensor[(22), float32]) -> (Tensor[(3, 4, 5), float64], Tensor[(11, 5, 3), bool], Tensor[(22), float32]) {
  %664 = cast(%var_4352, dtype="float64") /* ty=Tensor[(3, 4, 5), float64] */;
  %665 = cast(%var_4366, dtype="float32") /* ty=Tensor[(22), float32] */;
  %666 = reshape(%665, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %667 = @func_1820(%666) /* ty=(Tensor[(3, 5, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
  %668 = exp(%664) /* ty=Tensor[(3, 4, 5), float64] */;
  %669 = %667.1;
  (%668, %669, %var_4366)
}

def @func_8780(%var_8751: Tensor[(11, 12, 2), uint16]) -> (Tensor[(11, 12, 2), float64], Tensor[(22), float32], Tensor[(11, 12, 2), bool]) {
  %670 = @func_5483() /* ty=Tensor[(11, 12, 2), uint16] */;
  %671 = cast(%var_8751, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %675 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %676 = @func_7022() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %677 = multiply(%673, %674) /* ty=Tensor[(11, 12, 2), float64] */;
  %678 = %675.3;
  %679 = %676.0;
  (%677, %678, %679)
}

def @func_9307() -> (Tensor[(120), float64], Tensor[(120), float64], Tensor[(11, 12, 2), float64]) {
  %680 = cast(meta[relay.Constant][47] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %681 = reshape(%680, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %682 = @func_5776(%681) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(12, 5, 2), float64], Tensor[(120), float64], Tensor[(168), float32]) */;
  %683 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %684 = %683.0;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  %686 = tan(%685) /* ty=Tensor[(11, 12, 2), float32] */;
  %687 = @func_7022() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %688 = %687.0;
  %689 = cast(%688, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %690 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%686, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %693 = %682.2;
  %694 = floor_mod(%691, %692) /* ty=Tensor[(11, 12, 2), float64] */;
  (%693, meta[relay.Constant][47] /* ty=Tensor[(120), float64] */, %694)
}

def @main(%var_13685: Tensor[(3, 9, 16), int64]) -> Tensor[(3, 9, 16), int64] {
  %695 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 1, 16), int64] */, dtype="int64") /* ty=Tensor[(3, 1, 16), int64] */;
  %696 = cast(%var_13685, dtype="int64") /* ty=Tensor[(3, 9, 16), int64] */;
  multiply(%695, %696) /* ty=Tensor[(3, 9, 16), int64] */
}

def @func_13112(%var_13088: Tensor[(63), float64]) -> (Tensor[(16, 10, 11), float64], Tensor[(63), float64], Tensor[(16, 10, 11), float64], Tensor[(3, 3, 7), float32]) {
  %697 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %698 = cast(%var_13088, dtype="float64") /* ty=Tensor[(63), float64] */;
  %699 = reshape(%698, newshape=[3, 3, 7]) /* ty=Tensor[(3, 3, 7), float64] */;
  %700 = @func_11356(%699) /* ty=(Tensor[(3, 3, 7), float64],) */;
  %701 = %700.0;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(3, 3, 7), float32] */;
  %703 = @func_8557() /* ty=Tensor[(16, 10, 11), float64] */;
  %704 = %697.0;
  %705 = erf(%702) /* ty=Tensor[(3, 3, 7), float32] */;
  (%703, %var_13088, %704, %705)
}

def @func_5040() -> (Tensor[(16, 10, 11), float64],) {
  %706 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %707 = %706.1;
  (%707,)
}

def @func_9475() -> (Tensor[(11, 12, 2), float64],) {
  %708 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %709 = %708.0;
  (%709,)
}

def @func_5483() -> Tensor[(11, 12, 2), uint16] {
  %710 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %710.0
}

def @func_8713() -> (Tensor[(16, 10, 11), float32],) {
  %711 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
  %712 = %711.0;
  %713 = cast(%712, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %714 = sin(%713) /* ty=Tensor[(16, 10, 11), float32] */;
  (%714,)
}

def @func_8384(%var_8371: Tensor[(168), float32]) -> (Tensor[(16, 10, 11), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) {
  %715 = cast(%var_8371, dtype="float32") /* ty=Tensor[(168), float32] */;
  %716 = reshape(%715, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %717 = @func_6343() /* ty=Tensor[(16, 10, 11), float64] */;
  %718 = @func_2043(%716) /* ty=Tensor[(14, 3, 4), float32] */;
  (%717, %718, %var_8371)
}

def @func_7549() -> Tensor[(16, 10, 11), uint8] {
  %719 = @func_6300() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) */;
  %719.1
}

def @func_13482() -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) {
  %720 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %721 = @func_13138() /* ty=Tensor[(11, 12, 2), bool] */;
  %722 = %720.0;
  (%721, %722)
}

def @func_9468() -> (Tensor[(120), float64], Tensor[(16, 10, 11), float64]) {
  %723 = @func_9307() /* ty=(Tensor[(120), float64], Tensor[(120), float64], Tensor[(11, 12, 2), float64]) */;
  %724 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %725 = %723.0;
  %726 = %724.0;
  (%725, %726)
}

def @func_7745(%var_7648: Tensor[(16, 10, 11), float64], %var_7717: Tensor[(168), float32]) -> (Tensor[(16, 10, 11), float32], Tensor[(22), float32], Tensor[(22), float32], Tensor[(11, 12, 2), bool], Tensor[(16, 10, 11), float32], Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(1536), float64], Tensor[(1, 1536), float64]) {
  %727 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %728 = %727.0;
  %729 = cast(%728, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %730 = shape_of(%var_7648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%var_7648, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %733 = cast(meta[relay.Constant][49] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %734 = reshape(%733, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %735 = @func_5180(%734) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 1, 2), float32], Tensor[(165, 1), uint8], Tensor[(22), float32]) */;
  %736 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %737 = %736.0;
  %738 = cast(meta[relay.Constant][50] /* ty=Tensor[(11, 12, 2), uint16] */, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %742 = cast(%var_7648, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %743 = shape_of(%728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%728, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %746 = equal(%744, %745) /* ty=Tensor[(16, 10, 11), bool] */;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %748 = cast(%var_7717, dtype="float32") /* ty=Tensor[(168), float32] */;
  %749 = reshape(%748, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %750 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 1536), float64] */, dtype="float64") /* ty=Tensor[(1, 1536), float64] */;
  %751 = reshape(%750, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %752 = @func_6168(%751) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
  %753 = divide(%731, %732) /* ty=Tensor[(16, 10, 11), float32] */;
  %754 = %735.3;
  %755 = greater(%740, %741) /* ty=Tensor[(11, 12, 2), bool] */;
  %756 = cosh(%747) /* ty=Tensor[(16, 10, 11), float32] */;
  %757 = @func_2043(%749) /* ty=Tensor[(14, 3, 4), float32] */;
  %758 = %752.2;
  (%753, %754, meta[relay.Constant][49] /* ty=Tensor[(22), float32] */, %755, %756, %757, %var_7717, %758, meta[relay.Constant][51] /* ty=Tensor[(1, 1536), float64] */)
}

def @func_6614(%var_6579: Tensor[(1, 168), float32], %var_6580: Tensor[(1536), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(16, 12, 8), float64], int8, Tensor[(24), int8], Tensor[(1, 168), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(16, 10, 11), float32]) {
  %759 = cast(meta[relay.Constant][52] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %760 = cast(meta[relay.Constant][53] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %761 = cast(%var_6579, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %762 = cast(%var_6580, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %763 = cast(meta[relay.Constant][54] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %764 = reshape(%759, newshape=[]) /* ty=int8 */;
  %765 = reshape(%760, newshape=[12, 1, 2]) /* ty=Tensor[(12, 1, 2), int8] */;
  %766 = reshape(%761, newshape=[6, 28]) /* ty=Tensor[(6, 28), float32] */;
  %767 = reshape(%762, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %768 = reshape(%763, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %769 = @func_3731(%764, %765, %766, %767, %768) /* ty=(Tensor[(12, 1, 2), int8], Tensor[(14, 3, 4), float32], Tensor[(6, 28), float32], Tensor[(12, 1, 2), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(165), uint8], Tensor[(12, 70), float64], Tensor[(22), float32]) */;
  %770 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %771 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %772 = %769.4;
  %773 = %770.0;
  (%771, %772, meta[relay.Constant][52] /* ty=int8 */, meta[relay.Constant][53] /* ty=Tensor[(24), int8] */, %var_6579, %var_6580, meta[relay.Constant][54] /* ty=Tensor[(22), float32] */, %773)
}

def @func_10119() -> (Tensor[(11, 5, 3), bool], Tensor[(16, 10, 11), float32], Tensor[(120), float64], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(16, 10, 11), float32]) {
  %774 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %775 = %774.0;
  %776 = cast(%775, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %777 = @func_9307() /* ty=(Tensor[(120), float64], Tensor[(120), float64], Tensor[(11, 12, 2), float64]) */;
  %778 = cast(meta[relay.Constant][55] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %779 = reshape(%778, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %780 = @func_9846(%779) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
  %781 = @func_7887() /* ty=Tensor[(11, 5, 3), bool] */;
  %782 = exp(%776) /* ty=Tensor[(16, 10, 11), float32] */;
  %783 = %777.1;
  %784 = %780.1;
  %785 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
  (%781, %782, %783, %784, meta[relay.Constant][55] /* ty=Tensor[(96), float64] */, %785)
}

def @func_6411() -> (Tensor[(11, 12, 2), float32],) {
  %786 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
  (%786,)
}

def @func_13062() -> (Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 3), float32], Tensor[(165), uint8], Tensor[(16, 3, 2), int8], Tensor[(96), float64]) {
  %787 = @func_12742() /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
  %788 = cast(meta[relay.Constant][56] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %789 = @func_8627() /* ty=Tensor[(11, 1, 2), float64] */;
  %790 = cast(%789, dtype="float32") /* ty=Tensor[(11, 1, 2), float32] */;
  %791 = reshape(%788, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %792 = reshape(%790, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %793 = @func_1569(%791, %792) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
  %794 = cast(meta[relay.Constant][57] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %795 = reshape(%794, newshape=[16, 3, 2]) /* ty=Tensor[(16, 3, 2), float64] */;
  %796 = @func_4657(%795) /* ty=(Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) */;
  %797 = %787.0;
  %798 = %793.1;
  %799 = %796.1;
  (%789, %797, %798, meta[relay.Constant][56] /* ty=Tensor[(165), uint8] */, %799, meta[relay.Constant][57] /* ty=Tensor[(96), float64] */)
}

def @func_6476() -> (Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) {
  %800 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %801 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %802 = %800.2;
  %803 = %801.2;
  %804 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
  (%802, %803, %804)
}

def @func_11100() -> (Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) {
  %805 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %806 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %807 = %805.0;
  %808 = %806.0;
  (%807, %808)
}

def @func_10477(%var_10465: Tensor[(16, 10, 11), uint8]) -> Tensor[(16, 10, 11), float64] {
  %809 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
  %810 = cast(%var_10465, dtype="uint32") /* ty=Tensor[(16, 10, 11), uint32] */;
  %811 = shape_of(%809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(%809, dtype="uint32") /* ty=Tensor[(16, 10, 11), uint32] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %814 = right_shift(%812, %813) /* ty=Tensor[(16, 10, 11), uint32] */;
  %815 = cast(%814, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
  log10(%815) /* ty=Tensor[(16, 10, 11), float64] */
}

def @func_11904() -> (Tensor[(165), uint8], Tensor[(16, 10, 11), float64]) {
  %816 = @func_6417() /* ty=(Tensor[(165), uint8],) */;
  %817 = @func_5946() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) */;
  %818 = %816.0;
  %819 = %817.0;
  (%818, %819)
}

def @func_13451() -> (Tensor[(16, 10, 11), float64], Tensor[(120), float64]) {
  %820 = @func_8480() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32]) */;
  %821 = @func_13407() /* ty=(Tensor[(120), float64],) */;
  %822 = %820.0;
  %823 = %821.0;
  (%822, %823)
}

def @func_10281(%var_10258: Tensor[(2, 180), float64], %var_10264: Tensor[(22), float32], %var_10271: Tensor[(1536), float64]) -> (Tensor[(4, 12, 11), int64], Tensor[(11, 5, 3), bool], Tensor[(9, 5, 8), float64], Tensor[(2, 180), float64], Tensor[(11, 5, 3), bool], Tensor[(60), float64], Tensor[(22), float32], Tensor[(1536), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), float32]) {
  %824 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %825 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 12, 11), int64] */, dtype="int64") /* ty=Tensor[(4, 12, 11), int64] */;
  %826 = @func_5819() /* ty=(Tensor[(11, 5, 3), bool],) */;
  %827 = cast(%var_10258, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %828 = reshape(%827, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), float64] */;
  %829 = @func_9376(%828) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(9, 5, 8), float64]) */;
  %830 = cast(meta[relay.Constant][59] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %831 = cast(%var_10264, dtype="float32") /* ty=Tensor[(22), float32] */;
  %832 = reshape(%830, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), float64] */;
  %833 = reshape(%831, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %834 = @func_4370(%832, %833) /* ty=(Tensor[(3, 4, 5), float64], Tensor[(11, 5, 3), bool], Tensor[(22), float32]) */;
  %835 = cast(%var_10271, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %836 = reshape(%835, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %837 = @func_6387(%836) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(1536), float64], Tensor[(1536), float64]) */;
  %838 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %839 = maximum(%824, %825) /* ty=Tensor[(4, 12, 11), int64] */;
  %840 = %826.0;
  %841 = %829.2;
  %842 = %834.1;
  %843 = %837.2;
  %844 = %838.0;
  (%839, %840, %841, %var_10258, %842, meta[relay.Constant][59] /* ty=Tensor[(60), float64] */, %var_10264, %843, %var_10271, %844)
}

def @func_10964(%var_10960: bool, %var_10961: Tensor[(18), bool]) -> (Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(11, 12, 2), float64], Tensor[(6, 140), float64], Tensor[(11, 12, 2), uint16], Tensor[(9, 1, 2), bool], bool, Tensor[(18), bool]) {
  %845 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %846 = @func_10119() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 10, 11), float32], Tensor[(120), float64], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(16, 10, 11), float32]) */;
  %847 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %848 = @func_9934() /* ty=(Tensor[(6, 140), float64],) */;
  %849 = @func_9583() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(385), float32], Tensor[(16, 10, 11), float64]) */;
  %850 = cast(%var_10960, dtype="bool") /* ty=bool */;
  %851 = cast(%var_10961, dtype="bool") /* ty=Tensor[(18), bool] */;
  %852 = reshape(%850, newshape=[]) /* ty=bool */;
  %853 = reshape(%851, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), bool] */;
  %854 = @func_7092(%852, %853) /* ty=(Tensor[(9, 1, 2), bool],) */;
  %855 = %845.2;
  %856 = %846.0;
  %857 = %847.0;
  %858 = %848.0;
  %859 = %849.0;
  %860 = %854.0;
  (%855, %856, %857, %858, %859, %860, %var_10960, %var_10961)
}

def @func_6216() -> Tensor[(16, 10, 11), uint8] {
  %861 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
  %861.1
}

def @func_8627() -> Tensor[(11, 1, 2), float64] {
  %862 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %862.0
}

def @func_10663() -> Tensor[(11, 12, 2), uint16] {
  %863 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %863.0
}

def @func_9376(%var_9325: Tensor[(9, 5, 8), float64]) -> (Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(9, 5, 8), float64]) {
  %864 = cast(meta[relay.Constant][60] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %865 = reshape(%864, newshape=[1, 168]) /* ty=Tensor[(1, 168), float32] */;
  %866 = @func_4901(%865) /* ty=(Tensor[(11, 1, 2), float32], Tensor[(14, 3, 4), float32], Tensor[(120), float64], Tensor[(1, 168), float32]) */;
  %867 = cast(%var_9325, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %868 = asinh(%867) /* ty=Tensor[(9, 5, 8), float64] */;
  %869 = cast(%var_9325, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %870 = rsqrt(%869) /* ty=Tensor[(9, 5, 8), float64] */;
  %871 = cast(%870, dtype="int16") /* ty=Tensor[(9, 5, 8), int16] */;
  %872 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%868, dtype="int16") /* ty=Tensor[(9, 5, 8), int16] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %875 = multiply(%873, %874) /* ty=Tensor[(9, 5, 8), int16] */;
  %876 = cast(%870, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %877 = shape_of(%875, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%875, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %880 = %866.1;
  %881 = maximum(%878, %879) /* ty=Tensor[(9, 5, 8), float64] */;
  (%880, meta[relay.Constant][60] /* ty=Tensor[(168), float32] */, %881)
}

def @func_13407() -> (Tensor[(120), float64],) {
  %882 = @func_9468() /* ty=(Tensor[(120), float64], Tensor[(16, 10, 11), float64]) */;
  %883 = %882.0;
  (%883,)
}

def @func_9846(%var_9841: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) {
  %884 = @func_5123() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %885 = cast(%var_9841, dtype="float64") /* ty=Tensor[(96), float64] */;
  %886 = reshape(%885, newshape=[16, 3, 2]) /* ty=Tensor[(16, 3, 2), float64] */;
  %887 = @func_4657(%886) /* ty=(Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) */;
  %888 = %884.0;
  %889 = %887.0;
  (%888, %889, %var_9841)
}

def @func_8918() -> (Tensor[(385), float32],) {
  %890 = @func_7988() /* ty=(Tensor[(385), float32], Tensor[(11, 5, 3), float32]) */;
  %891 = %890.0;
  (%891,)
}

def @func_12825() -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), bool]) {
  %892 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %893 = @func_8350() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %894 = %892.0;
  %895 = %893.0;
  (%894, %895)
}

def @func_11303(%var_11279: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(16, 10, 11), float64]) {
  %896 = @func_7022() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %897 = cast(%var_11279, dtype="float64") /* ty=Tensor[(96), float64] */;
  %898 = reshape(%897, newshape=[1, 96]) /* ty=Tensor[(1, 96), float64] */;
  %899 = @func_10361(%898) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), float32], Tensor[(1, 96), float64]) */;
  %900 = @func_11100() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) */;
  %901 = %896.0;
  %902 = %899.1;
  %903 = %900.1;
  (%901, %902, %var_11279, %903)
}

def @func_10884() -> (Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) {
  %904 = @func_7240() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) */;
  %905 = %904.2;
  %906 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
  (%905, %906)
}

def @func_11611(%var_11601: Tensor[(63), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float32], Tensor[(11, 12, 2), uint16], Tensor[(3, 3, 7), float64], Tensor[(63), float64], Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(6, 7, 16), float64]) {
  %907 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %908 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %909 = cast(meta[relay.Constant][61] /* ty=Tensor[(672), float32] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %910 = reshape(%909, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %911 = @func_6917(%910) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float64], Tensor[(16, 10, 11), uint8]) */;
  %912 = cast(%var_11601, dtype="float64") /* ty=Tensor[(63), float64] */;
  %913 = reshape(%912, newshape=[3, 3, 7]) /* ty=Tensor[(3, 3, 7), float64] */;
  %914 = @func_11356(%913) /* ty=(Tensor[(3, 3, 7), float64],) */;
  %915 = @func_10916() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %916 = @func_11100() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) */;
  %917 = cast(meta[relay.Constant][61] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %918 = reshape(%917, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float32] */;
  %919 = @func_11175(%918) /* ty=Tensor[(6, 7, 16), float32] */;
  %920 = cast(%919, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %921 = %907.0;
  %922 = %908.0;
  %923 = %911.0;
  %924 = %914.0;
  %925 = %915.0;
  %926 = %916.0;
  %927 = sqrt(%920) /* ty=Tensor[(6, 7, 16), float64] */;
  (%921, %922, meta[relay.Constant][61] /* ty=Tensor[(672), float32] */, %923, %924, %var_11601, %925, %926, %927)
}

def @func_8480() -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32]) {
  %928 = @func_5946() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) */;
  %929 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %930 = %928.1;
  %931 = %929.0;
  %932 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
  (%930, %931, %932)
}

def @func_13359(%var_13350: Tensor[(1536), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(1536), float64], Tensor[(1536), float64]) {
  %933 = @func_11232() /* ty=(Tensor[(11, 12, 2), float64],) */;
  %934 = cast(%var_13350, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %935 = reshape(%934, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %936 = @func_6168(%935) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
  %937 = %933.0;
  %938 = %936.2;
  (%937, %938, %var_13350)
}

def @func_10992() -> Tensor[(11, 12, 2), float64] {
  %939 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %939.0
}

def @func_8333(%var_8274: Tensor[(120), float64]) -> (Tensor[(168), float32], Tensor[(120), float64], Tensor[(168), float32], Tensor[(16, 10, 11), bool]) {
  %940 = cast(%var_8274, dtype="float64") /* ty=Tensor[(120), float64] */;
  %941 = cast(meta[relay.Constant][62] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %942 = reshape(%940, newshape=[12, 5, 2]) /* ty=Tensor[(12, 5, 2), float64] */;
  %943 = reshape(%941, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %944 = @func_4091(%942, %943) /* ty=(Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
  %945 = @func_7793() /* ty=Tensor[(16, 10, 11), float32] */;
  %946 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
  %947 = cast(%946, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %948 = shape_of(%945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(%945, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %951 = %944.2;
  %952 = logical_or(%949, %950) /* ty=Tensor[(16, 10, 11), bool] */;
  (%951, %var_8274, meta[relay.Constant][62] /* ty=Tensor[(168), float32] */, %952)
}

def @func_2642(%var_2624: Tensor[(1, 4, 2), float64]) -> (Tensor[(1, 4, 2), float64], Tensor[(?, 4, 2), float64]) {
  %953 = cast(%var_2624, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  %954 = cast(%var_2624, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  %955 = log10(%954) /* ty=Tensor[(1, 4, 2), float64] */;
  %956 = cast(%955, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  %957 = shape_of(%var_2624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %958 = cast(%var_2624, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %960 = log2(%953) /* ty=Tensor[(1, 4, 2), float64] */;
  %961 = power(%958, %959) /* ty=Tensor[(?, 4, 2), float64] */;
  (%960, %961)
}

def @func_11034(%var_11023: Tensor[(1536), float64]) -> (Tensor[(2, 11, 12), float32], Tensor[(11, 12, 2), float32], Tensor[(6, 140), float64], Tensor[(1536), float64], Tensor[(1536), float64]) {
  %962 = cast(meta[relay.Constant][63] /* ty=Tensor[(2, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 12), float32] */;
  %963 = @func_9934() /* ty=(Tensor[(6, 140), float64],) */;
  %964 = cast(%var_11023, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %965 = reshape(%964, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %966 = @func_6168(%965) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
  %967 = log2(%962) /* ty=Tensor[(2, 11, 12), float32] */;
  %968 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %969 = %963.0;
  %970 = %966.2;
  (%967, %968, %969, %970, %var_11023)
}

def @func_9954() -> (Tensor[(16, 10, 11), float64],) {
  %971 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %972 = %971.0;
  (%972,)
}

def @func_5517() -> (Tensor[(16, 10, 11), float64],) {
  %973 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %974 = %973.0;
  (%974,)
}

def @func_8235() -> Tensor[(385), float32] {
  %975 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %975.1
}

def @func_4901(%var_4894: Tensor[(1, 168), float32]) -> (Tensor[(11, 1, 2), float32], Tensor[(14, 3, 4), float32], Tensor[(120), float64], Tensor[(1, 168), float32]) {
  %976 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %977 = cast(meta[relay.Constant][64] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %978 = cast(%var_4894, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %979 = reshape(%977, newshape=[12, 5, 2]) /* ty=Tensor[(12, 5, 2), float64] */;
  %980 = reshape(%978, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %981 = @func_4091(%979, %980) /* ty=(Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
  %982 = %976.2;
  %983 = %981.1;
  (%982, %983, meta[relay.Constant][64] /* ty=Tensor[(120), float64] */, %var_4894)
}

def @func_5350() -> (Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) {
  %984 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %985 = %984.2;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(11, 1, 2), float64] */;
  %987 = cast(meta[relay.Constant][65] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %988 = cast(%985, dtype="float32") /* ty=Tensor[(11, 1, 2), float32] */;
  %989 = reshape(%987, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %990 = reshape(%988, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %991 = @func_1569(%989, %990) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
  %992 = atan(%986) /* ty=Tensor[(11, 1, 2), float64] */;
  %993 = %991.0;
  (%992, %993, meta[relay.Constant][65] /* ty=Tensor[(165), uint8] */)
}

def @func_7092(%var_7084: bool, %var_7085: Tensor[(9, 1, 2), bool]) -> (Tensor[(9, 1, 2), bool],) {
  %994 = cast(%var_7084, dtype="bool") /* ty=bool */;
  %995 = cast(%var_7085, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
  %996 = logical_or(%994, %995) /* ty=Tensor[(9, 1, 2), bool] */;
  (%996,)
}

def @func_9047() -> Tensor[(165), uint8] {
  %997 = @func_6476() /* ty=(Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %997.0
}

def @func_5123() -> (Tensor[(11, 12, 2), uint16],) {
  %998 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %999 = %998.0;
  (%999,)
}

def @func_6168(%var_6141: Tensor[(1536), float64]) -> (Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) {
  %1000 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
  %1001 = cast(%var_6141, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %1002 = reshape(%1001, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %1003 = %1000.0;
  %1004 = @func_712(%1002) /* ty=Tensor[(16, 12, 8), float64] */;
  (%1003, %1004, %var_6141)
}

def @func_12115(%var_12066: Tensor[(11, 12, 2), uint16]) -> (Tensor[(165), uint8], Tensor[(11, 12, 2), uint8], Tensor[(11, 12, 2), uint16], Tensor[(165), uint8], Tensor[(8), float64]) {
  %1005 = @func_6417() /* ty=(Tensor[(165), uint8],) */;
  %1006 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
  %1007 = %1006.1;
  %1008 = cast(%var_12066, dtype="uint8") /* ty=Tensor[(11, 12, 2), uint8] */;
  %1009 = shape_of(%1007, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1010 = cast(%1007, dtype="uint8") /* ty=Tensor[(11, 12, 2), uint8] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1012 = @func_6417() /* ty=(Tensor[(165), uint8],) */;
  %1013 = @func_7214() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(1, 4, 2), float64], Tensor[(8), float64]) */;
  %1014 = %1005.0;
  %1015 = bitwise_and(%1010, %1011) /* ty=Tensor[(11, 12, 2), uint8] */;
  %1016 = @func_5483() /* ty=Tensor[(11, 12, 2), uint16] */;
  %1017 = %1012.0;
  %1018 = %1013.3;
  (%1014, %1015, %1016, %1017, %1018)
}

def @func_5776(%var_5724: Tensor[(120), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(12, 5, 2), float64], Tensor[(120), float64], Tensor[(168), float32]) {
  %1019 = cast(%var_5724, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1020 = cast(meta[relay.Constant][66] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1021 = reshape(%1019, newshape=[12, 5, 2]) /* ty=Tensor[(12, 5, 2), float64] */;
  %1022 = reshape(%1020, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1023 = @func_4091(%1021, %1022) /* ty=(Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
  %1024 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %1025 = %1023.0;
  (%1024, %1025, %var_5724, meta[relay.Constant][66] /* ty=Tensor[(168), float32] */)
}

def @func_7214() -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(1, 4, 2), float64], Tensor[(8), float64]) {
  %1026 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %1027 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %1028 = cast(meta[relay.Constant][67] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %1029 = reshape(%1028, newshape=[1, 4, 2]) /* ty=Tensor[(1, 4, 2), float64] */;
  %1030 = @func_2642(%1029) /* ty=(Tensor[(1, 4, 2), float64], Tensor[(?, 4, 2), float64]) */;
  %1031 = %1026.0;
  %1032 = %1027.0;
  %1033 = %1030.0;
  (%1031, %1032, %1033, meta[relay.Constant][67] /* ty=Tensor[(8), float64] */)
}

def @func_5690() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) {
  %1034 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %1035 = cast(meta[relay.Constant][68] /* ty=Tensor[(6, 140), float64] */, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %1036 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 22), float32] */, dtype="float32") /* ty=Tensor[(1, 22), float32] */;
  %1037 = reshape(%1035, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
  %1038 = reshape(%1036, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %1039 = @func_3644(%1037, %1038) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
  %1040 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %1041 = %1034.1;
  %1042 = %1039.0;
  %1043 = %1040.0;
  (%1041, %1042, meta[relay.Constant][68] /* ty=Tensor[(6, 140), float64] */, meta[relay.Constant][69] /* ty=Tensor[(1, 22), float32] */, %1043)
}

def @func_9718() -> (Tensor[(16, 10, 11), uint8],) {
  %1044 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
  %1045 = %1044.1;
  (%1045,)
}

def @func_295(%var_291: Tensor[(11, 1, 2), float32]) -> Tensor[(11, 1, 2), float32] {
  %1046 = cast(%var_291, dtype="float32") /* ty=Tensor[(11, 1, 2), float32] */;
  exp(%1046) /* ty=Tensor[(11, 1, 2), float32] */
}

def @func_11175(%var_11167: Tensor[(6, 7, 16), float32]) -> Tensor[(6, 7, 16), float32] {
  %1047 = cast(%var_11167, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  acosh(%1047) /* ty=Tensor[(6, 7, 16), float32] */
}

def @func_7477() -> Tensor[(16, 10, 11), float32] {
  %1048 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %1048.0
}

def @func_8557() -> Tensor[(16, 10, 11), float64] {
  %1049 = @func_5946() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) */;
  %1049.1
}

def @func_11049() -> (Tensor[(11, 5, 3), bool],) {
  %1050 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %1051 = %1050.1;
  (%1051,)
}

def @func_5586(%var_5581: Tensor[(48), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) {
  %1052 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %1053 = cast(%var_5581, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1054 = reshape(%1053, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %1055 = @func_118(%1054) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %1056 = cast(meta[relay.Constant][70] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %1057 = reshape(%1056, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %1058 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %1059 = %1052.0;
  %1060 = %1055.0;
  %1061 = @func_712(%1057) /* ty=Tensor[(16, 12, 8), float64] */;
  (%1058, %1059, %1060, %var_5581, %1061, meta[relay.Constant][70] /* ty=Tensor[(1536), float64] */)
}

def @func_11734() -> Tensor[(11, 12, 2), uint16] {
  %1062 = @func_5123() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %1062.0
}

def @func_12382(%var_12378: Tensor[(22, 1), float32]) -> (Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32], Tensor[(1536), float64], Tensor[(360), float64], Tensor[(22, 1), float32], Tensor[(1536), float64]) {
  %1063 = @func_11904() /* ty=(Tensor[(165), uint8], Tensor[(16, 10, 11), float64]) */;
  %1064 = @func_6411() /* ty=(Tensor[(11, 12, 2), float32],) */;
  %1065 = cast(meta[relay.Constant][71] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1066 = cast(%var_12378, dtype="float32") /* ty=Tensor[(22, 1), float32] */;
  %1067 = cast(meta[relay.Constant][72] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %1068 = reshape(%1065, newshape=[2, 180]) /* ty=Tensor[(2, 180), float64] */;
  %1069 = reshape(%1066, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %1070 = reshape(%1067, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %1071 = @func_10281(%1068, %1069, %1070) /* ty=(Tensor[(4, 12, 11), int64], Tensor[(11, 5, 3), bool], Tensor[(9, 5, 8), float64], Tensor[(2, 180), float64], Tensor[(11, 5, 3), bool], Tensor[(60), float64], Tensor[(22), float32], Tensor[(1536), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), float32]) */;
  %1072 = %1063.1;
  %1073 = %1064.0;
  %1074 = %1071.8;
  (%1072, %1073, %1074, meta[relay.Constant][71] /* ty=Tensor[(360), float64] */, %var_12378, meta[relay.Constant][72] /* ty=Tensor[(1536), float64] */)
}

def @func_11702() -> (Tensor[(165), uint8],) {
  %1075 = @func_7617() /* ty=(Tensor[(165), uint8],) */;
  %1076 = %1075.0;
  (%1076,)
}

def @func_13011() -> (Tensor[(16, 10, 11), float32],) {
  %1077 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
  (%1077,)
}

def @func_9934() -> (Tensor[(6, 140), float64],) {
  %1078 = @func_5690() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) */;
  %1079 = %1078.2;
  (%1079,)
}

def @func_5465() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) {
  %1080 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %1081 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
  (%1080, %1081)
}

def @func_7887() -> Tensor[(11, 5, 3), bool] {
  %1082 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
  %1082.0
}

def @func_7988() -> (Tensor[(385), float32], Tensor[(11, 5, 3), float32]) {
  %1083 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %1084 = @func_7887() /* ty=Tensor[(11, 5, 3), bool] */;
  %1085 = cast(%1084, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
  %1086 = %1083.1;
  %1087 = cos(%1085) /* ty=Tensor[(11, 5, 3), float32] */;
  (%1086, %1087)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9470() -> (Tensor[(120), float64], Tensor[(16, 10, 11), float64]) {
  @func_9468() /* ty=(Tensor[(120), float64], Tensor[(16, 10, 11), float64]) */
}

def @func_6476() -> (Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) {
  %0 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %1 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %2 = %0.2;
  %3 = %1.2;
  %4 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
  (%2, %3, %4)
}

def @func_12115(%var_12066: Tensor[(11, 12, 2), uint16]) -> (Tensor[(165), uint8], Tensor[(11, 12, 2), uint8], Tensor[(11, 12, 2), uint16], Tensor[(165), uint8], Tensor[(8), float64]) {
  %5 = @func_6417() /* ty=(Tensor[(165), uint8],) */;
  %6 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
  %7 = %6.1;
  %8 = cast(%var_12066, dtype="uint8") /* ty=Tensor[(11, 12, 2), uint8] */;
  %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%7, dtype="uint8") /* ty=Tensor[(11, 12, 2), uint8] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %12 = @func_6417() /* ty=(Tensor[(165), uint8],) */;
  %13 = @func_7214() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(1, 4, 2), float64], Tensor[(8), float64]) */;
  %14 = %5.0;
  %15 = bitwise_and(%10, %11) /* ty=Tensor[(11, 12, 2), uint8] */;
  %16 = @func_5483() /* ty=Tensor[(11, 12, 2), uint16] */;
  %17 = %12.0;
  %18 = %13.3;
  (%14, %15, %16, %17, %18)
}

def @func_5821() -> (Tensor[(11, 5, 3), bool],) {
  @func_5819() /* ty=(Tensor[(11, 5, 3), bool],) */
}

def @func_9827() -> Tensor[(11, 12, 2), uint16] {
  @func_9825() /* ty=Tensor[(11, 12, 2), uint16] */
}

def @func_6387(%var_6376: Tensor[(1536), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(1536), float64], Tensor[(1536), float64]) {
  %19 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %20 = cast(%var_6376, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %21 = reshape(%20, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %22 = @func_6168(%21) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
  %23 = %22.2;
  %24 = cast(%23, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %25 = %19.0;
  %26 = acos(%24) /* ty=Tensor[(1536), float64] */;
  (%25, %var_6376, %26)
}

def @func_5297(%var_5295: Tensor[(16, 10, 11), float32], %var_5296: Tensor[(768, 2), float64]) -> (Tensor[(16, 10, 11), bool], Tensor[(16, 12, 8), float64], Tensor[(768, 2), float64]) {
  %36 = fn (%var_5274: Tensor[(16, 10, 11), float32], %var_5287: Tensor[(768, 2), float64]) -> (Tensor[(16, 10, 11), bool], Tensor[(16, 12, 8), float64], Tensor[(768, 2), float64]) {
    %27 = @func_5218() /* ty=Tensor[(16, 10, 11), float32] */;
    %28 = cast(%var_5274, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
    %30 = cast(%27, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %32 = cast(%var_5287, dtype="float64") /* ty=Tensor[(768, 2), float64] */;
    %33 = reshape(%32, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
    %34 = greater(%30, %31) /* ty=Tensor[(16, 10, 11), bool] */;
    %35 = @func_712(%33) /* ty=Tensor[(16, 12, 8), float64] */;
    (%34, %35, %var_5287)
  };
  %36(%var_5295, %var_5296) /* ty=(Tensor[(16, 10, 11), bool], Tensor[(16, 12, 8), float64], Tensor[(768, 2), float64]) */
}

def @func_8335(%var_8334: Tensor[(120), float64]) -> (Tensor[(168), float32], Tensor[(120), float64], Tensor[(168), float32], Tensor[(16, 10, 11), bool]) {
  %50 = fn (%var_8274: Tensor[(120), float64]) -> (Tensor[(168), float32], Tensor[(120), float64], Tensor[(168), float32], Tensor[(16, 10, 11), bool]) {
    %37 = cast(%var_8274, dtype="float64") /* ty=Tensor[(120), float64] */;
    %38 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %39 = reshape(%37, newshape=[12, 5, 2]) /* ty=Tensor[(12, 5, 2), float64] */;
    %40 = reshape(%38, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %41 = @func_4091(%39, %40) /* ty=(Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
    %42 = @func_7793() /* ty=Tensor[(16, 10, 11), float32] */;
    %43 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
    %44 = cast(%43, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %45 = shape_of(%42, dtype="int32") /* ty=Tensor[(3), int32] */;
    %46 = cast(%42, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %48 = %41.2;
    %49 = logical_or(%46, %47) /* ty=Tensor[(16, 10, 11), bool] */;
    (%48, %var_8274, meta[relay.Constant][0] /* ty=Tensor[(168), float32] */, %49)
  };
  %50(%var_8334) /* ty=(Tensor[(168), float32], Tensor[(120), float64], Tensor[(168), float32], Tensor[(16, 10, 11), bool]) */
}

def @func_10286(%var_10283: Tensor[(2, 180), float64], %var_10284: Tensor[(22), float32], %var_10285: Tensor[(1536), float64]) -> (Tensor[(4, 12, 11), int64], Tensor[(11, 5, 3), bool], Tensor[(9, 5, 8), float64], Tensor[(2, 180), float64], Tensor[(11, 5, 3), bool], Tensor[(60), float64], Tensor[(22), float32], Tensor[(1536), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), float32]) {
  @func_10281(%var_10283, %var_10284, %var_10285) /* ty=(Tensor[(4, 12, 11), int64], Tensor[(11, 5, 3), bool], Tensor[(9, 5, 8), float64], Tensor[(2, 180), float64], Tensor[(11, 5, 3), bool], Tensor[(60), float64], Tensor[(22), float32], Tensor[(1536), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), float32]) */
}

def @func_4370(%var_4352: Tensor[(3, 4, 5), float64], %var_4366: Tensor[(22), float32]) -> (Tensor[(3, 4, 5), float64], Tensor[(11, 5, 3), bool], Tensor[(22), float32]) {
  %51 = cast(%var_4352, dtype="float64") /* ty=Tensor[(3, 4, 5), float64] */;
  %52 = cast(%var_4366, dtype="float32") /* ty=Tensor[(22), float32] */;
  %53 = reshape(%52, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %54 = @func_1820(%53) /* ty=(Tensor[(3, 5, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
  %55 = exp(%51) /* ty=Tensor[(3, 4, 5), float64] */;
  %56 = %54.1;
  (%55, %56, %var_4366)
}

def @func_12385(%var_12383: Tensor[(22, 1), float32]) -> (Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32], Tensor[(1536), float64], Tensor[(360), float64], Tensor[(22, 1), float32], Tensor[(1536), float64]) {
  @func_12382(%var_12383) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32], Tensor[(1536), float64], Tensor[(360), float64], Tensor[(22, 1), float32], Tensor[(1536), float64]) */
}

def @func_4903(%var_4902: Tensor[(1, 168), float32]) -> (Tensor[(11, 1, 2), float32], Tensor[(14, 3, 4), float32], Tensor[(120), float64], Tensor[(1, 168), float32]) {
  %65 = fn (%var_4894: Tensor[(1, 168), float32]) -> (Tensor[(11, 1, 2), float32], Tensor[(14, 3, 4), float32], Tensor[(120), float64], Tensor[(1, 168), float32]) {
    %57 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
    %58 = cast(meta[relay.Constant][1] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %59 = cast(%var_4894, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
    %60 = reshape(%58, newshape=[12, 5, 2]) /* ty=Tensor[(12, 5, 2), float64] */;
    %61 = reshape(%59, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %62 = @func_4091(%60, %61) /* ty=(Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
    %63 = %57.2;
    %64 = %62.1;
    (%63, %64, meta[relay.Constant][1] /* ty=Tensor[(120), float64] */, %var_4894)
  };
  %65(%var_4902) /* ty=(Tensor[(11, 1, 2), float32], Tensor[(14, 3, 4), float32], Tensor[(120), float64], Tensor[(1, 168), float32]) */
}

def @func_13452() -> (Tensor[(16, 10, 11), float64], Tensor[(120), float64]) {
  %70 = fn () -> (Tensor[(16, 10, 11), float64], Tensor[(120), float64]) {
    %66 = @func_8480() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32]) */;
    %67 = @func_13407() /* ty=(Tensor[(120), float64],) */;
    %68 = %66.0;
    %69 = %67.0;
    (%68, %69)
  };
  %70() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(120), float64]) */
}

def @func_10222() -> (Tensor[(11, 1, 2), float32], Tensor[(385), float32]) {
  %75 = fn () -> (Tensor[(11, 1, 2), float32], Tensor[(385), float32]) {
    %71 = @func_6476() /* ty=(Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) */;
    %72 = @func_8918() /* ty=(Tensor[(385), float32],) */;
    %73 = %71.1;
    %74 = %72.0;
    (%73, %74)
  };
  %75() /* ty=(Tensor[(11, 1, 2), float32], Tensor[(385), float32]) */
}

def @func_5947() -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) {
  %80 = fn () -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) {
    %76 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %77 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %78 = %76.0;
    %79 = %77.0;
    (%78, %79)
  };
  %80() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) */
}

def @func_8154() -> Tensor[(11, 12, 2), uint16] {
  %82 = fn () -> Tensor[(11, 12, 2), uint16] {
    %81 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
    %81.0
  };
  %82() /* ty=Tensor[(11, 12, 2), uint16] */
}

def @func_10916() -> (Tensor[(11, 12, 2), uint16],) {
  %83 = @func_8153() /* ty=Tensor[(11, 12, 2), uint16] */;
  (%83,)
}

def @func_13407() -> (Tensor[(120), float64],) {
  %84 = @func_9468() /* ty=(Tensor[(120), float64], Tensor[(16, 10, 11), float64]) */;
  %85 = %84.0;
  (%85,)
}

def @func_7215() -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(1, 4, 2), float64], Tensor[(8), float64]) {
  %94 = fn () -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(1, 4, 2), float64], Tensor[(8), float64]) {
    %86 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %87 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %88 = cast(meta[relay.Constant][2] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
    %89 = reshape(%88, newshape=[1, 4, 2]) /* ty=Tensor[(1, 4, 2), float64] */;
    %90 = @func_2642(%89) /* ty=(Tensor[(1, 4, 2), float64], Tensor[(?, 4, 2), float64]) */;
    %91 = %86.0;
    %92 = %87.0;
    %93 = %90.0;
    (%91, %92, %93, meta[relay.Constant][2] /* ty=Tensor[(8), float64] */)
  };
  %94() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(1, 4, 2), float64], Tensor[(8), float64]) */
}

def @func_1820(%var_1805: Tensor[(22), float32]) -> (Tensor[(3, 5, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) {
  %95 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 5, 2), float32] */;
  %96 = cast(meta[relay.Constant][4] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %97 = cast(%var_1805, dtype="float32") /* ty=Tensor[(22), float32] */;
  %98 = reshape(%96, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %99 = reshape(%97, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %100 = @func_1569(%98, %99) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
  %101 = cast(meta[relay.Constant][5] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %102 = reshape(%101, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %103 = acos(%95) /* ty=Tensor[(3, 5, 2), float32] */;
  %104 = %100.0;
  %105 = @func_712(%102) /* ty=Tensor[(16, 12, 8), float64] */;
  (%103, %104, meta[relay.Constant][4] /* ty=Tensor[(165), uint8] */, %var_1805, %105, meta[relay.Constant][5] /* ty=Tensor[(1536), float64] */)
}

def @func_10121() -> (Tensor[(11, 5, 3), bool], Tensor[(16, 10, 11), float32], Tensor[(120), float64], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(16, 10, 11), float32]) {
  @func_10119() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 10, 11), float32], Tensor[(120), float64], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(16, 10, 11), float32]) */
}

def @func_8131(%var_8129: Tensor[(11, 12, 2), float32]) -> Tensor[(11, 12, 2), uint32] {
  @func_8128(%var_8129) /* ty=Tensor[(11, 12, 2), uint32] */
}

def @func_3644(%var_3576: Tensor[(7, 12, 10), float64], %var_3581: Tensor[(1, 22), float32]) -> (Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) {
  %106 = cast(meta[relay.Constant][6] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %107 = cast(%var_3581, dtype="float32") /* ty=Tensor[(1, 22), float32] */;
  %108 = reshape(%106, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %109 = reshape(%107, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %110 = @func_1569(%108, %109) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
  %111 = cast(-2.47667f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %112 = reshape(%111, newshape=[]) /* ty=float32 */;
  %113 = cast(%var_3576, dtype="float64") /* ty=Tensor[(7, 12, 10), float64] */;
  %114 = acosh(%113) /* ty=Tensor[(7, 12, 10), float64] */;
  %115 = cast(%var_3576, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%114, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(8), float64] */, dtype="float64") /* ty=Tensor[(8), float64] */;
  %120 = reshape(%119, newshape=[1, 4, 2]) /* ty=Tensor[(1, 4, 2), float64] */;
  %121 = @func_2642(%120) /* ty=(Tensor[(1, 4, 2), float64], Tensor[(?, 4, 2), float64]) */;
  %122 = cast(%114, dtype="float32") /* ty=Tensor[(7, 12, 10), float32] */;
  %123 = acos(%122) /* ty=Tensor[(7, 12, 10), float32] */;
  %124 = cast(%123, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %125 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%114, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %128 = %110.0;
  %129 = @func_2297(%112) /* ty=Tensor[(4, 16, 2), bool] */;
  %130 = less_equal(%117, %118) /* ty=Tensor[(7, 12, 10), bool] */;
  %131 = %121.1;
  %132 = equal(%126, %127) /* ty=Tensor[(7, 12, 10), bool] */;
  (%128, meta[relay.Constant][6] /* ty=Tensor[(165), uint8] */, %var_3581, %129, -2.47667f /* ty=float32 */, %130, %131, meta[relay.Constant][7] /* ty=Tensor[(8), float64] */, %132)
}

def @func_12168() -> (Tensor[(385), float32],) {
  %133 = @func_7988() /* ty=(Tensor[(385), float32], Tensor[(11, 5, 3), float32]) */;
  %134 = %133.0;
  (%134,)
}

def @func_5703(%var_5702: Tensor[(11, 5, 7), float32]) -> Tensor[(11, 5, 7), float32] {
  %136 = fn (%var_5693: Tensor[(11, 5, 7), float32]) -> Tensor[(11, 5, 7), float32] {
    %135 = cast(%var_5693, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
    cos(%135) /* ty=Tensor[(11, 5, 7), float32] */
  };
  %136(%var_5702) /* ty=Tensor[(11, 5, 7), float32] */
}

def @func_7240() -> (Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) {
  %137 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %138 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %139 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
  %140 = %139.1;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %142 = %137.0;
  %143 = %138.0;
  %144 = tan(%141) /* ty=Tensor[(16, 10, 11), float32] */;
  (%142, %143, %144)
}

def @func_11399() -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32]) {
  @func_11397() /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32]) */
}

def @func_12696() -> Tensor[(11, 1, 2), float64] {
  %146 = fn () -> Tensor[(11, 1, 2), float64] {
    %145 = @func_12545() /* ty=(Tensor[(11, 1, 2), float64],) */;
    %145.0
  };
  %146() /* ty=Tensor[(11, 1, 2), float64] */
}

def @func_12282(%var_12281: Tensor[(336), int16]) -> (Tensor[(11, 12, 2), float64], Tensor[(12, 7, 4), bool], Tensor[(336), int16], Tensor[(11, 12, 2), uint16]) {
  %154 = fn (%var_12262: Tensor[(336), int16]) -> (Tensor[(11, 12, 2), float64], Tensor[(12, 7, 4), bool], Tensor[(336), int16], Tensor[(11, 12, 2), uint16]) {
    %147 = cast(%var_12262, dtype="int16") /* ty=Tensor[(336), int16] */;
    %148 = cast(%var_12262, dtype="int16") /* ty=Tensor[(336), int16] */;
    %149 = reshape(%147, newshape=[12, 7, 4]) /* ty=Tensor[(12, 7, 4), int16] */;
    %150 = reshape(%148, newshape=[12, 7, 4]) /* ty=Tensor[(12, 7, 4), int16] */;
    %151 = @func_10992() /* ty=Tensor[(11, 12, 2), float64] */;
    %152 = @func_11795(%149, %150) /* ty=Tensor[(12, 7, 4), bool] */;
    %153 = @func_9825() /* ty=Tensor[(11, 12, 2), uint16] */;
    (%151, %152, %var_12262, %153)
  };
  %154(%var_12281) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(12, 7, 4), bool], Tensor[(336), int16], Tensor[(11, 12, 2), uint16]) */
}

def @func_7550() -> Tensor[(16, 10, 11), uint8] {
  %156 = fn () -> Tensor[(16, 10, 11), uint8] {
    %155 = @func_6300() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) */;
    %155.1
  };
  %156() /* ty=Tensor[(16, 10, 11), uint8] */
}

def @func_3648(%var_3646: Tensor[(7, 12, 10), float64], %var_3647: Tensor[(1, 22), float32]) -> (Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) {
  @func_3644(%var_3646, %var_3647) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */
}

def @func_5518() -> (Tensor[(16, 10, 11), float64],) {
  %159 = fn () -> (Tensor[(16, 10, 11), float64],) {
    %157 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %158 = %157.0;
    (%158,)
  };
  %159() /* ty=(Tensor[(16, 10, 11), float64],) */
}

def @func_13012() -> (Tensor[(16, 10, 11), float32],) {
  %161 = fn () -> (Tensor[(16, 10, 11), float32],) {
    %160 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
    (%160,)
  };
  %161() /* ty=(Tensor[(16, 10, 11), float32],) */
}

def @func_10695() -> (Tensor[(11, 12, 2), uint16], Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(11, 12, 2), uint16]) {
  %162 = cast(meta[relay.Constant][8] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %163 = reshape(%162, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %164 = @func_10663() /* ty=Tensor[(11, 12, 2), uint16] */;
  %165 = @func_2043(%163) /* ty=Tensor[(14, 3, 4), float32] */;
  %166 = @func_10663() /* ty=Tensor[(11, 12, 2), uint16] */;
  (%164, %165, meta[relay.Constant][8] /* ty=Tensor[(168), float32] */, %166)
}

def @func_11232() -> (Tensor[(11, 12, 2), float64],) {
  %167 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %168 = %167.0;
  (%168,)
}

def @func_13265(%var_13263: Tensor[(96), float64]) -> (Tensor[(16, 10, 11), float32], Tensor[(96), float64], Tensor[(22), int64], Tensor[(11, 2), float32], Tensor[(15, 9, 8), float64]) {
  @func_13262(%var_13263) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(96), float64], Tensor[(22), int64], Tensor[(11, 2), float32], Tensor[(15, 9, 8), float64]) */
}

def @func_10967(%var_10965: bool, %var_10966: Tensor[(18), bool]) -> (Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(11, 12, 2), float64], Tensor[(6, 140), float64], Tensor[(11, 12, 2), uint16], Tensor[(9, 1, 2), bool], bool, Tensor[(18), bool]) {
  %185 = fn (%var_10960: bool, %var_10961: Tensor[(18), bool]) -> (Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(11, 12, 2), float64], Tensor[(6, 140), float64], Tensor[(11, 12, 2), uint16], Tensor[(9, 1, 2), bool], bool, Tensor[(18), bool]) {
    %169 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
    %170 = @func_10119() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 10, 11), float32], Tensor[(120), float64], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(16, 10, 11), float32]) */;
    %171 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
    %172 = @func_9934() /* ty=(Tensor[(6, 140), float64],) */;
    %173 = @func_9583() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(385), float32], Tensor[(16, 10, 11), float64]) */;
    %174 = cast(%var_10960, dtype="bool") /* ty=bool */;
    %175 = cast(%var_10961, dtype="bool") /* ty=Tensor[(18), bool] */;
    %176 = reshape(%174, newshape=[]) /* ty=bool */;
    %177 = reshape(%175, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), bool] */;
    %178 = @func_7092(%176, %177) /* ty=(Tensor[(9, 1, 2), bool],) */;
    %179 = %169.2;
    %180 = %170.0;
    %181 = %171.0;
    %182 = %172.0;
    %183 = %173.0;
    %184 = %178.0;
    (%179, %180, %181, %182, %183, %184, %var_10960, %var_10961)
  };
  %185(%var_10965, %var_10966) /* ty=(Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(11, 12, 2), float64], Tensor[(6, 140), float64], Tensor[(11, 12, 2), uint16], Tensor[(9, 1, 2), bool], bool, Tensor[(18), bool]) */
}

def @func_6196() -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) {
  @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */
}

def @func_6109() -> (Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) {
  @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */
}

def @func_12881() -> (Tensor[(385), float64],) {
  %193 = fn () -> (Tensor[(385), float64],) {
    %186 = @func_7988() /* ty=(Tensor[(385), float32], Tensor[(11, 5, 3), float32]) */;
    %187 = %186.0;
    %188 = cast(meta[relay.Constant][9] /* ty=Tensor[(385), float32] */, dtype="float64") /* ty=Tensor[(385), float64] */;
    %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(1), int32] */;
    %190 = cast(%187, dtype="float64") /* ty=Tensor[(385), float64] */;
    %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?), float64] */;
    %192 = multiply(%190, %191) /* ty=Tensor[(385), float64] */;
    (%192,)
  };
  %193() /* ty=(Tensor[(385), float64],) */
}

def @func_9048() -> Tensor[(165), uint8] {
  %195 = fn () -> Tensor[(165), uint8] {
    %194 = @func_6476() /* ty=(Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) */;
    %194.0
  };
  %195() /* ty=Tensor[(165), uint8] */
}

def @func_13645(%var_13583: Tensor[(385), float32], %var_13609: Tensor[(385), float64], %var_13635: Tensor[(672), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(385), float32], Tensor[(6, 7, 16), float32], Tensor[(672), float32]) {
  %196 = cast(meta[relay.Constant][10] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %197 = reshape(%196, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %198 = @func_8384(%197) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
  %199 = @func_7988() /* ty=(Tensor[(385), float32], Tensor[(11, 5, 3), float32]) */;
  %200 = %199.0;
  %201 = cast(%var_13583, dtype="float64") /* ty=Tensor[(385), float64] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(1), int32] */;
  %203 = cast(%200, dtype="float64") /* ty=Tensor[(385), float64] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?), float64] */;
  %205 = power(%203, %204) /* ty=Tensor[(385), float64] */;
  %206 = cast(%205, dtype="float64") /* ty=Tensor[(385), float64] */;
  %207 = atanh(%206) /* ty=Tensor[(385), float64] */;
  %208 = cast(%var_13609, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(1), int32] */;
  %210 = cast(%207, dtype="uint64") /* ty=Tensor[(385), uint64] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %212 = minimum(%210, %211) /* ty=Tensor[(385), uint64] */;
  %213 = cast(%212, dtype="float32") /* ty=Tensor[(385), float32] */;
  %214 = cast(%var_13635, dtype="float32") /* ty=Tensor[(672), float32] */;
  %215 = reshape(%214, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float32] */;
  %216 = %198.1;
  %217 = acos(%213) /* ty=Tensor[(385), float32] */;
  %218 = @func_11175(%215) /* ty=Tensor[(6, 7, 16), float32] */;
  (%216, meta[relay.Constant][10] /* ty=Tensor[(168), float32] */, %217, %218, %var_13635)
}

def @func_5819() -> (Tensor[(11, 5, 3), bool],) {
  %219 = @func_5690() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) */;
  %220 = %219.1;
  (%220,)
}

def @func_4374(%var_4372: Tensor[(3, 4, 5), float64], %var_4373: Tensor[(22), float32]) -> (Tensor[(3, 4, 5), float64], Tensor[(11, 5, 3), bool], Tensor[(22), float32]) {
  @func_4370(%var_4372, %var_4373) /* ty=(Tensor[(3, 4, 5), float64], Tensor[(11, 5, 3), bool], Tensor[(22), float32]) */
}

def @func_9584() -> (Tensor[(11, 12, 2), uint16], Tensor[(385), float32], Tensor[(16, 10, 11), float64]) {
  %226 = fn () -> (Tensor[(11, 12, 2), uint16], Tensor[(385), float32], Tensor[(16, 10, 11), float64]) {
    %221 = @func_8918() /* ty=(Tensor[(385), float32],) */;
    %222 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
    %223 = @func_8153() /* ty=Tensor[(11, 12, 2), uint16] */;
    %224 = %221.0;
    %225 = %222.1;
    (%223, %224, %225)
  };
  %226() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(385), float32], Tensor[(16, 10, 11), float64]) */
}

def @func_6194() -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) {
  %227 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %228 = %227.0;
  %229 = cast(%228, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %230 = reshape(%229, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
  %231 = @func_5086(%230) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) */;
  %232 = %231.0;
  (%228, %232)
}

def @func_12170() -> (Tensor[(385), float32],) {
  @func_12168() /* ty=(Tensor[(385), float32],) */
}

def @func_6107() -> (Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) {
  %233 = @func_5819() /* ty=(Tensor[(11, 5, 3), bool],) */;
  %234 = cast(meta[relay.Constant][11] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
  %235 = reshape(%234, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float32] */;
  %236 = %233.0;
  %237 = @func_5701(%235) /* ty=Tensor[(11, 5, 7), float32] */;
  (%236, %237, meta[relay.Constant][11] /* ty=Tensor[(385), float32] */)
}

def @func_5565() -> (Tensor[(11, 12, 2), uint16],) {
  %239 = fn () -> (Tensor[(11, 12, 2), uint16],) {
    %238 = @func_5483() /* ty=Tensor[(11, 12, 2), uint16] */;
    (%238,)
  };
  %239() /* ty=(Tensor[(11, 12, 2), uint16],) */
}

def @func_7935() -> (Tensor[(11, 12, 2), bool],) {
  %242 = fn () -> (Tensor[(11, 12, 2), bool],) {
    %240 = @func_7022() /* ty=(Tensor[(11, 12, 2), bool],) */;
    %241 = %240.0;
    (%241,)
  };
  %242() /* ty=(Tensor[(11, 12, 2), bool],) */
}

def @func_6170(%var_6169: Tensor[(1536), float64]) -> (Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) {
  %248 = fn (%var_6141: Tensor[(1536), float64]) -> (Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) {
    %243 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
    %244 = cast(%var_6141, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %245 = reshape(%244, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
    %246 = %243.0;
    %247 = @func_712(%245) /* ty=Tensor[(16, 12, 8), float64] */;
    (%246, %247, %var_6141)
  };
  %248(%var_6169) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */
}

def @func_7024() -> (Tensor[(11, 12, 2), bool],) {
  @func_7022() /* ty=(Tensor[(11, 12, 2), bool],) */
}

def @func_12645() -> (Tensor[(16, 10, 11), uint8], Tensor[(22), float32], Tensor[(22), float64], Tensor[(11, 12, 2), uint16]) {
  %249 = @func_6300() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) */;
  %250 = cast(meta[relay.Constant][12] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %251 = reshape(%250, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %252 = @func_5180(%251) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 1, 2), float32], Tensor[(165, 1), uint8], Tensor[(22), float32]) */;
  %253 = cast(meta[relay.Constant][12] /* ty=Tensor[(22), float32] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %254 = @func_10916() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %255 = %249.1;
  %256 = %252.3;
  %257 = rsqrt(%253) /* ty=Tensor[(22), float64] */;
  %258 = %254.0;
  (%255, %256, %257, %258)
}

def @func_9935() -> (Tensor[(6, 140), float64],) {
  %261 = fn () -> (Tensor[(6, 140), float64],) {
    %259 = @func_5690() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) */;
    %260 = %259.2;
    (%260,)
  };
  %261() /* ty=(Tensor[(6, 140), float64],) */
}

def @func_11614(%var_11612: Tensor[(63), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float32], Tensor[(11, 12, 2), uint16], Tensor[(3, 3, 7), float64], Tensor[(63), float64], Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(6, 7, 16), float64]) {
  @func_11611(%var_11612) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float32], Tensor[(11, 12, 2), uint16], Tensor[(3, 3, 7), float64], Tensor[(63), float64], Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(6, 7, 16), float64]) */
}

def @func_7954() -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) {
  %262 = @func_7934() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %263 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %264 = %262.0;
  %265 = %263.0;
  (%264, %265)
}

def @func_5218() -> Tensor[(16, 10, 11), float32] {
  %266 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %266.0
}

def @func_6618(%var_6616: Tensor[(1, 168), float32], %var_6617: Tensor[(1536), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(16, 12, 8), float64], int8, Tensor[(24), int8], Tensor[(1, 168), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(16, 10, 11), float32]) {
  @func_6614(%var_6616, %var_6617) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(16, 12, 8), float64], int8, Tensor[(24), int8], Tensor[(1, 168), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(16, 10, 11), float32]) */
}

def @func_7125() -> (Tensor[(16, 10, 11), float32], Tensor[(385), float32]) {
  %273 = fn () -> (Tensor[(16, 10, 11), float32], Tensor[(385), float32]) {
    %267 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
    %268 = %267.1;
    %269 = cast(%268, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %270 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
    %271 = acos(%269) /* ty=Tensor[(16, 10, 11), float32] */;
    %272 = %270.2;
    (%271, %272)
  };
  %273() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */
}

def @func_13138() -> Tensor[(11, 12, 2), bool] {
  %274 = @func_8515() /* ty=(Tensor[(11, 12, 2), float32],) */;
  %275 = %274.0;
  %276 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 12, 2), float32] */, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%275, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%278, %279) /* ty=Tensor[(11, 12, 2), bool] */
}

def @func_8103(%var_8101: Tensor[(840), float64], %var_8102: Tensor[(22), float32]) -> (Tensor[(16, 10, 11), uint8], Tensor[(165), uint8], Tensor[(840), float64], Tensor[(22), float32], Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) {
  %294 = fn (%var_8057: Tensor[(840), float64], %var_8058: Tensor[(22), float32]) -> (Tensor[(16, 10, 11), uint8], Tensor[(165), uint8], Tensor[(840), float64], Tensor[(22), float32], Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) {
    %280 = cast(%var_8057, dtype="float64") /* ty=Tensor[(840), float64] */;
    %281 = cast(%var_8058, dtype="float32") /* ty=Tensor[(22), float32] */;
    %282 = reshape(%280, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
    %283 = reshape(%281, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
    %284 = @func_3644(%282, %283) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
    %285 = @func_7549() /* ty=Tensor[(16, 10, 11), uint8] */;
    %286 = cast(%285, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %287 = reshape(%286, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
    %288 = @func_5086(%287) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) */;
    %289 = cast(meta[relay.Constant][14] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
    %290 = reshape(%289, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float32] */;
    %291 = %284.1;
    %292 = %288.0;
    %293 = @func_5701(%290) /* ty=Tensor[(11, 5, 7), float32] */;
    (%285, %291, %var_8057, %var_8058, %292, %293, meta[relay.Constant][14] /* ty=Tensor[(385), float32] */)
  };
  %294(%var_8101, %var_8102) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(165), uint8], Tensor[(840), float64], Tensor[(22), float32], Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */
}

def @func_11397() -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32]) {
  %295 = @func_8350() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %296 = %295.0;
  %297 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
  (%296, %297)
}

def @func_11952() -> (Tensor[(16, 10, 11), float32], Tensor[(385), float32], Tensor[(672), float64], Tensor[(672), float64], Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float32]) {
  %298 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %299 = @func_8918() /* ty=(Tensor[(385), float32],) */;
  %300 = cast(meta[relay.Constant][15] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %301 = reshape(%300, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %302 = @func_10545(%301) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) */;
  %303 = @func_11100() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) */;
  %304 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %305 = %298.0;
  %306 = %299.0;
  %307 = %302.2;
  %308 = %303.0;
  %309 = %304.1;
  (%305, %306, %307, meta[relay.Constant][15] /* ty=Tensor[(672), float64] */, %308, %309)
}

def @func_10119() -> (Tensor[(11, 5, 3), bool], Tensor[(16, 10, 11), float32], Tensor[(120), float64], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(16, 10, 11), float32]) {
  %310 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %311 = %310.0;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
  %313 = @func_9307() /* ty=(Tensor[(120), float64], Tensor[(120), float64], Tensor[(11, 12, 2), float64]) */;
  %314 = cast(meta[relay.Constant][16] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %315 = reshape(%314, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %316 = @func_9846(%315) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
  %317 = @func_7887() /* ty=Tensor[(11, 5, 3), bool] */;
  %318 = exp(%312) /* ty=Tensor[(16, 10, 11), float32] */;
  %319 = %313.1;
  %320 = %316.1;
  %321 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
  (%317, %318, %319, %320, meta[relay.Constant][16] /* ty=Tensor[(96), float64] */, %321)
}

def @func_6753(%var_6748: Tensor[(385), float32], %var_6749: Tensor[(385), float32], %var_6750: Tensor[(1760), float32], %var_6751: Tensor[(1536), float64], %var_6752: Tensor[(22), float32]) -> (Tensor[(385), uint16], Tensor[(385), int32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1760), float32], Tensor[(11, 12, 2), float32], Tensor[(7, 12, 10), bool], Tensor[(840), float64], Tensor[(22), float32]) {
  %350 = fn (%var_6697: Tensor[(385), float32], %var_6712: Tensor[(385), float32], %var_6729: Tensor[(1760), float32], %var_6730: Tensor[(1536), float64], %var_6745: Tensor[(22), float32]) -> (Tensor[(385), uint16], Tensor[(385), int32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1760), float32], Tensor[(11, 12, 2), float32], Tensor[(7, 12, 10), bool], Tensor[(840), float64], Tensor[(22), float32]) {
    %322 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
    %323 = %322.2;
    %324 = cast(%var_6697, dtype="uint16") /* ty=Tensor[(385), uint16] */;
    %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(1), int32] */;
    %326 = cast(%323, dtype="uint16") /* ty=Tensor[(385), uint16] */;
    %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %328 = cast(%var_6712, dtype="int32") /* ty=Tensor[(385), int32] */;
    %329 = shape_of(%323, dtype="int32") /* ty=Tensor[(1), int32] */;
    %330 = cast(%323, dtype="int32") /* ty=Tensor[(385), int32] */;
    %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?), int32] */;
    %332 = cast(%var_6729, dtype="float32") /* ty=Tensor[(1760), float32] */;
    %333 = cast(%var_6730, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %334 = reshape(%332, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
    %335 = reshape(%333, newshape=[768, 2]) /* ty=Tensor[(768, 2), float64] */;
    %336 = @func_5294(%334, %335) /* ty=(Tensor[(16, 10, 11), bool], Tensor[(16, 12, 8), float64], Tensor[(768, 2), float64]) */;
    %337 = cast(%var_6729, dtype="float32") /* ty=Tensor[(1760), float32] */;
    %338 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
    %339 = cast(meta[relay.Constant][17] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %340 = cast(%var_6745, dtype="float32") /* ty=Tensor[(22), float32] */;
    %341 = reshape(%339, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
    %342 = reshape(%340, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
    %343 = @func_3644(%341, %342) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
    %344 = bitwise_and(%326, %327) /* ty=Tensor[(385), uint16] */;
    %345 = left_shift(%330, %331) /* ty=Tensor[(385), int32] */;
    %346 = %336.1;
    %347 = log2(%337) /* ty=Tensor[(1760), float32] */;
    %348 = %338.1;
    %349 = %343.8;
    (%344, %345, %346, %var_6730, %347, %348, %349, meta[relay.Constant][17] /* ty=Tensor[(840), float64] */, %var_6745)
  };
  %350(%var_6748, %var_6749, %var_6750, %var_6751, %var_6752) /* ty=(Tensor[(385), uint16], Tensor[(385), int32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1760), float32], Tensor[(11, 12, 2), float32], Tensor[(7, 12, 10), bool], Tensor[(840), float64], Tensor[(22), float32]) */
}

def @func_11324(%var_11322: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(96), float64]) {
  @func_11321(%var_11322) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(96), float64]) */
}

def @func_6917(%var_6909: Tensor[(672), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float64], Tensor[(16, 10, 11), uint8]) {
  %351 = @func_5123() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %352 = cast(%var_6909, dtype="float64") /* ty=Tensor[(672), float64] */;
  %353 = reshape(%352, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %354 = @func_6515(%353) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) */;
  %355 = %351.0;
  %356 = %354.0;
  %357 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
  (%355, %356, %var_6909, %357)
}

def @func_712(%var_700: Tensor[(16, 12, 8), float64]) -> Tensor[(16, 12, 8), float64] {
  %358 = cast(meta[relay.Constant][18] /* ty=Tensor[(16, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %359 = shape_of(%var_700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%var_700, dtype="float64") /* ty=Tensor[(16, 12, 8), float64] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%360, %361) /* ty=Tensor[(16, 12, 8), float64] */
}

def @func_4522(%var_4477: Tensor[(14, 7, 16), float32], %var_4511: Tensor[(1536), float64], %var_4515: Tensor[(14, 7, 16), float32]) -> (Tensor[(22), float32], Tensor[(60), float64], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), uint32]) {
  %362 = cast(meta[relay.Constant][19] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %363 = cast(meta[relay.Constant][20] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %364 = reshape(%362, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), float64] */;
  %365 = reshape(%363, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %366 = @func_4370(%364, %365) /* ty=(Tensor[(3, 4, 5), float64], Tensor[(11, 5, 3), bool], Tensor[(22), float32]) */;
  %367 = cast(%var_4511, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %368 = reshape(%367, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %369 = cast(%var_4477, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %370 = log10(%369) /* ty=Tensor[(14, 7, 16), float32] */;
  %371 = cast(%370, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %372 = atan(%371) /* ty=Tensor[(14, 7, 16), float32] */;
  %373 = cast(%var_4515, dtype="uint32") /* ty=Tensor[(14, 7, 16), uint32] */;
  %374 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%372, dtype="uint32") /* ty=Tensor[(14, 7, 16), uint32] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %377 = %366.2;
  %378 = @func_712(%368) /* ty=Tensor[(16, 12, 8), float64] */;
  %379 = bitwise_and(%375, %376) /* ty=Tensor[(14, 7, 16), uint32] */;
  (%377, meta[relay.Constant][19] /* ty=Tensor[(60), float64] */, meta[relay.Constant][20] /* ty=Tensor[(22), float32] */, %378, %var_4511, %379)
}

def @func_11321(%var_11315: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(96), float64]) {
  %380 = @func_8515() /* ty=(Tensor[(11, 12, 2), float32],) */;
  %381 = cast(%var_11315, dtype="float64") /* ty=Tensor[(96), float64] */;
  %382 = reshape(%381, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %383 = @func_11303(%382) /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(16, 10, 11), float64]) */;
  %384 = %380.0;
  %385 = %383.2;
  (%384, %385, %var_11315)
}

def @func_6344() -> Tensor[(16, 10, 11), float64] {
  %387 = fn () -> Tensor[(16, 10, 11), float64] {
    %386 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
    %386.0
  };
  %387() /* ty=Tensor[(16, 10, 11), float64] */
}

def @func_10320() -> (Tensor[(385), float32],) {
  %388 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
  %389 = %388.2;
  (%389,)
}

def @func_8629() -> Tensor[(11, 1, 2), float64] {
  @func_8627() /* ty=Tensor[(11, 1, 2), float64] */
}

def @func_9119(%var_9091: Tensor[(4, 4, 15), float32], %var_9114: Tensor[(22), float32]) -> (Tensor[(4, 4, 15), float32], Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(22), float32]) {
  %390 = cast(%var_9091, dtype="float32") /* ty=Tensor[(4, 4, 15), float32] */;
  %391 = @func_5123() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %392 = cast(%var_9114, dtype="float32") /* ty=Tensor[(22), float32] */;
  %393 = reshape(%392, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %394 = @func_7385(%393) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(22), float32], Tensor[(11, 12, 2), uint16], Tensor[(4, 384), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8], Tensor[(784, 2), bool], Tensor[(11, 12, 2), uint16]) */;
  %395 = cosh(%390) /* ty=Tensor[(4, 4, 15), float32] */;
  %396 = %391.0;
  %397 = %394.2;
  (%395, %396, %397, %var_9114)
}

def @func_2297(%var_2282: float32) -> Tensor[(4, 16, 2), bool] {
  %398 = cast(%var_2282, dtype="bool") /* ty=bool */;
  %399 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 16, 2), float32] */, dtype="bool") /* ty=Tensor[(4, 16, 2), bool] */;
  not_equal(%398, %399) /* ty=Tensor[(4, 16, 2), bool] */
}

def @func_2642(%var_2624: Tensor[(1, 4, 2), float64]) -> (Tensor[(1, 4, 2), float64], Tensor[(?, 4, 2), float64]) {
  %400 = cast(%var_2624, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  %401 = cast(%var_2624, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  %402 = log10(%401) /* ty=Tensor[(1, 4, 2), float64] */;
  %403 = cast(%402, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  %404 = shape_of(%var_2624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%var_2624, dtype="float64") /* ty=Tensor[(1, 4, 2), float64] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %407 = log2(%400) /* ty=Tensor[(1, 4, 2), float64] */;
  %408 = power(%405, %406) /* ty=Tensor[(?, 4, 2), float64] */;
  (%407, %408)
}

def @func_13063() -> (Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 3), float32], Tensor[(165), uint8], Tensor[(16, 3, 2), int8], Tensor[(96), float64]) {
  %422 = fn () -> (Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 3), float32], Tensor[(165), uint8], Tensor[(16, 3, 2), int8], Tensor[(96), float64]) {
    %409 = @func_12742() /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
    %410 = cast(meta[relay.Constant][22] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
    %411 = @func_8627() /* ty=Tensor[(11, 1, 2), float64] */;
    %412 = cast(%411, dtype="float32") /* ty=Tensor[(11, 1, 2), float32] */;
    %413 = reshape(%410, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
    %414 = reshape(%412, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
    %415 = @func_1569(%413, %414) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
    %416 = cast(meta[relay.Constant][23] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %417 = reshape(%416, newshape=[16, 3, 2]) /* ty=Tensor[(16, 3, 2), float64] */;
    %418 = @func_4657(%417) /* ty=(Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) */;
    %419 = %409.0;
    %420 = %415.1;
    %421 = %418.1;
    (%411, %419, %420, meta[relay.Constant][22] /* ty=Tensor[(165), uint8] */, %421, meta[relay.Constant][23] /* ty=Tensor[(96), float64] */)
  };
  %422() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 3), float32], Tensor[(165), uint8], Tensor[(16, 3, 2), int8], Tensor[(96), float64]) */
}

def @func_5483() -> Tensor[(11, 12, 2), uint16] {
  %423 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %423.0
}

def @func_5182(%var_5181: Tensor[(22), float32]) -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 1, 2), float32], Tensor[(165, 1), uint8], Tensor[(22), float32]) {
  %432 = fn (%var_5174: Tensor[(22), float32]) -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 1, 2), float32], Tensor[(165, 1), uint8], Tensor[(22), float32]) {
    %424 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
    %425 = cast(meta[relay.Constant][24] /* ty=Tensor[(165, 1), uint8] */, dtype="uint8") /* ty=Tensor[(165, 1), uint8] */;
    %426 = cast(%var_5174, dtype="float32") /* ty=Tensor[(22), float32] */;
    %427 = reshape(%425, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
    %428 = reshape(%426, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
    %429 = @func_1569(%427, %428) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
    %430 = %424.0;
    %431 = %429.2;
    (%430, %431, meta[relay.Constant][24] /* ty=Tensor[(165, 1), uint8] */, %var_5174)
  };
  %432(%var_5181) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 1, 2), float32], Tensor[(165, 1), uint8], Tensor[(22), float32]) */
}

def @func_12742() -> (Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) {
  %433 = @func_8593() /* ty=Tensor[(11, 5, 7), float32] */;
  %434 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %438 = cast(meta[relay.Constant][26] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %439 = reshape(%438, newshape=[16, 3, 2]) /* ty=Tensor[(16, 3, 2), float64] */;
  %440 = @func_4657(%439) /* ty=(Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) */;
  %441 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
  %442 = maximum(%436, %437) /* ty=Tensor[(11, 5, 7), float32] */;
  %443 = %440.0;
  (%441, %442, %443, meta[relay.Constant][26] /* ty=Tensor[(96), float64] */)
}

def @func_8858() -> (Tensor[(16, 10, 11), float32],) {
  %445 = fn () -> (Tensor[(16, 10, 11), float32],) {
    %444 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
    (%444,)
  };
  %445() /* ty=(Tensor[(16, 10, 11), float32],) */
}

def @func_5690() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) {
  %446 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %447 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 140), float64] */, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %448 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 22), float32] */, dtype="float32") /* ty=Tensor[(1, 22), float32] */;
  %449 = reshape(%447, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
  %450 = reshape(%448, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %451 = @func_3644(%449, %450) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
  %452 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %453 = %446.1;
  %454 = %451.0;
  %455 = %452.0;
  (%453, %454, meta[relay.Constant][27] /* ty=Tensor[(6, 140), float64] */, meta[relay.Constant][28] /* ty=Tensor[(1, 22), float32] */, %455)
}

def @func_6517(%var_6516: Tensor[(672), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) {
  %462 = fn (%var_6509: Tensor[(672), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) {
    %456 = @func_5690() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) */;
    %457 = cast(%var_6509, dtype="float64") /* ty=Tensor[(672), float64] */;
    %458 = reshape(%457, newshape=[4, 14, 12]) /* ty=Tensor[(4, 14, 12), float64] */;
    %459 = @func_4552(%458) /* ty=(Tensor[(4, 14, 12), float64],) */;
    %460 = %456.4;
    %461 = %459.0;
    (%460, %461, %var_6509)
  };
  %462(%var_6516) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) */
}

def @func_13362(%var_13360: Tensor[(1536), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(1536), float64], Tensor[(1536), float64]) {
  @func_13359(%var_13360) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(1536), float64], Tensor[(1536), float64]) */
}

def @func_10027() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float64]) {
  %463 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
  %464 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %465 = %463.0;
  %466 = %464.0;
  (%465, %466)
}

def @func_1823(%var_1821: Tensor[(22), float32]) -> (Tensor[(3, 5, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) {
  @func_1820(%var_1821) /* ty=(Tensor[(3, 5, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */
}

def @func_4996() -> Tensor[(11, 12, 2), float32] {
  %467 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %468 = %467.0;
  %469 = cast(%468, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  log2(%469) /* ty=Tensor[(11, 12, 2), float32] */
}

def @func_4174(%var_4172: Tensor[(13, 6, 8), uint16], %var_4173: Tensor[(13, 6, 8), uint16]) -> (Tensor[(13, 6, 8), uint16],) {
  @func_4170(%var_4172, %var_4173) /* ty=(Tensor[(13, 6, 8), uint16],) */
}

def @func_5692() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) {
  @func_5690() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) */
}

def @func_8352() -> (Tensor[(11, 12, 2), bool],) {
  @func_8350() /* ty=(Tensor[(11, 12, 2), bool],) */
}

def @func_12990() -> (Tensor[(11, 12, 2), float32], Tensor[(6, 140), float32], Tensor[(840), float64], Tensor[(11, 5, 7), float32]) {
  @func_12988() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(6, 140), float32], Tensor[(840), float64], Tensor[(11, 5, 7), float32]) */
}

def @func_12545() -> (Tensor[(11, 1, 2), float64],) {
  %470 = @func_8627() /* ty=Tensor[(11, 1, 2), float64] */;
  (%470,)
}

def @func_12217() -> (Tensor[(16, 10, 11), float32], Tensor[(22), float32], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(385), float32], Tensor[(96), float64]) {
  %471 = @func_8713() /* ty=(Tensor[(16, 10, 11), float32],) */;
  %472 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 22), float32] */, dtype="float32") /* ty=Tensor[(1, 22), float32] */;
  %473 = reshape(%472, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %474 = @func_9227(%473) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(385), int32], Tensor[(385), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(165), uint8]) */;
  %475 = cast(meta[relay.Constant][30] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %476 = reshape(%475, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %477 = @func_9846(%476) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
  %478 = cast(meta[relay.Constant][30] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %479 = reshape(%478, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %480 = @func_9876(%479) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64]) */;
  %481 = %471.0;
  %482 = %474.4;
  %483 = %477.1;
  %484 = @func_8235() /* ty=Tensor[(385), float32] */;
  %485 = %480.2;
  (%481, %482, meta[relay.Constant][29] /* ty=Tensor[(1, 22), float32] */, %483, meta[relay.Constant][30] /* ty=Tensor[(96), float64] */, %484, %485)
}

def @func_11799(%var_11797: Tensor[(12, 7, 4), int16], %var_11798: Tensor[(12, 7, 4), int16]) -> Tensor[(12, 7, 4), bool] {
  @func_11795(%var_11797, %var_11798) /* ty=Tensor[(12, 7, 4), bool] */
}

def @func_9028(%var_9027: Tensor[(1536), float64]) -> (Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), bool], Tensor[(16, 10, 11), bool], Tensor[(3, 5, 2), float32], Tensor[(22), float32], Tensor[(16, 10, 11), uint8], Tensor[(120), float64], Tensor[(168), float32], Tensor[(9, 1, 2), bool], bool, Tensor[(18), bool]) {
  %518 = fn (%var_8947: Tensor[(1536), float64]) -> (Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), bool], Tensor[(16, 10, 11), bool], Tensor[(3, 5, 2), float32], Tensor[(22), float32], Tensor[(16, 10, 11), uint8], Tensor[(120), float64], Tensor[(168), float32], Tensor[(9, 1, 2), bool], bool, Tensor[(18), bool]) {
    %486 = cast(%var_8947, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %487 = reshape(%486, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
    %488 = @func_7793() /* ty=Tensor[(16, 10, 11), float32] */;
    %489 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 10, 11), float32] */, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %490 = shape_of(%488, dtype="int32") /* ty=Tensor[(3), int32] */;
    %491 = cast(%488, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %493 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 10, 11), float32] */, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %494 = shape_of(%488, dtype="int32") /* ty=Tensor[(3), int32] */;
    %495 = cast(%488, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %497 = cast(meta[relay.Constant][32] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
    %498 = reshape(%497, newshape=[22]) /* ty=Tensor[(22), float32] */;
    %499 = @func_1820(%498) /* ty=(Tensor[(3, 5, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
    %500 = less_equal(%495, %496) /* ty=Tensor[(16, 10, 11), bool] */;
    %501 = cast(%500, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %502 = reshape(%501, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
    %503 = @func_5086(%502) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) */;
    %504 = cast(meta[relay.Constant][33] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %505 = reshape(%504, newshape=[1, 168]) /* ty=Tensor[(1, 168), float32] */;
    %506 = @func_4901(%505) /* ty=(Tensor[(11, 1, 2), float32], Tensor[(14, 3, 4), float32], Tensor[(120), float64], Tensor[(1, 168), float32]) */;
    %507 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %508 = cast(meta[relay.Constant][34] /* ty=Tensor[(18), bool] */, dtype="bool") /* ty=Tensor[(18), bool] */;
    %509 = reshape(%507, newshape=[]) /* ty=bool */;
    %510 = reshape(%508, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), bool] */;
    %511 = @func_7092(%509, %510) /* ty=(Tensor[(9, 1, 2), bool],) */;
    %512 = @func_712(%487) /* ty=Tensor[(16, 12, 8), float64] */;
    %513 = less(%491, %492) /* ty=Tensor[(16, 10, 11), bool] */;
    %514 = %499.0;
    %515 = %503.0;
    %516 = %506.2;
    %517 = %511.0;
    (%512, %var_8947, %513, %500, %514, meta[relay.Constant][32] /* ty=Tensor[(22), float32] */, %515, %516, meta[relay.Constant][33] /* ty=Tensor[(168), float32] */, %517, True /* ty=bool */, meta[relay.Constant][34] /* ty=Tensor[(18), bool] */)
  };
  %518(%var_9027) /* ty=(Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), bool], Tensor[(16, 10, 11), bool], Tensor[(3, 5, 2), float32], Tensor[(22), float32], Tensor[(16, 10, 11), uint8], Tensor[(120), float64], Tensor[(168), float32], Tensor[(9, 1, 2), bool], bool, Tensor[(18), bool]) */
}

def @func_2043(%var_2040: Tensor[(14, 3, 4), float32]) -> Tensor[(14, 3, 4), float32] {
  %519 = cast(%var_2040, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  exp(%519) /* ty=Tensor[(14, 3, 4), float32] */
}

def @func_7794() -> Tensor[(16, 10, 11), float32] {
  %523 = fn () -> Tensor[(16, 10, 11), float32] {
    %520 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %521 = %520.0;
    %522 = cast(%521, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    log2(%522) /* ty=Tensor[(16, 10, 11), float32] */
  };
  %523() /* ty=Tensor[(16, 10, 11), float32] */
}

def @func_10663() -> Tensor[(11, 12, 2), uint16] {
  %524 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %524.0
}

def @func_8919() -> (Tensor[(385), float32],) {
  %527 = fn () -> (Tensor[(385), float32],) {
    %525 = @func_7988() /* ty=(Tensor[(385), float32], Tensor[(11, 5, 3), float32]) */;
    %526 = %525.0;
    (%526,)
  };
  %527() /* ty=(Tensor[(385), float32],) */
}

def @func_10886() -> (Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) {
  @func_10884() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) */
}

def @func_11356(%var_11349: Tensor[(3, 3, 7), float64]) -> (Tensor[(3, 3, 7), float64],) {
  %528 = cast(%var_11349, dtype="float64") /* ty=Tensor[(3, 3, 7), float64] */;
  %529 = log10(%528) /* ty=Tensor[(3, 3, 7), float64] */;
  (%529,)
}

def @func_11954() -> (Tensor[(16, 10, 11), float32], Tensor[(385), float32], Tensor[(672), float64], Tensor[(672), float64], Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float32]) {
  @func_11952() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32], Tensor[(672), float64], Tensor[(672), float64], Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float32]) */
}

def @func_13029() -> (Tensor[(11, 1, 2), float64],) {
  %531 = fn () -> (Tensor[(11, 1, 2), float64],) {
    %530 = @func_8627() /* ty=Tensor[(11, 1, 2), float64] */;
    (%530,)
  };
  %531() /* ty=(Tensor[(11, 1, 2), float64],) */
}

def @func_4848(%var_4846: Tensor[(22), float32]) -> (Tensor[(13, 6, 8), uint16], Tensor[(624), uint16], Tensor[(22), int64]) {
  @func_4845(%var_4846) /* ty=(Tensor[(13, 6, 8), uint16], Tensor[(624), uint16], Tensor[(22), int64]) */
}

def @func_5586(%var_5581: Tensor[(48), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) {
  %532 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %533 = cast(%var_5581, dtype="float64") /* ty=Tensor[(48), float64] */;
  %534 = reshape(%533, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %535 = @func_118(%534) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %536 = cast(meta[relay.Constant][35] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %537 = reshape(%536, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %538 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %539 = %532.0;
  %540 = %535.0;
  %541 = @func_712(%537) /* ty=Tensor[(16, 12, 8), float64] */;
  (%538, %539, %540, %var_5581, %541, meta[relay.Constant][35] /* ty=Tensor[(1536), float64] */)
}

def @func_6412() -> (Tensor[(11, 12, 2), float32],) {
  %543 = fn () -> (Tensor[(11, 12, 2), float32],) {
    %542 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
    (%542,)
  };
  %543() /* ty=(Tensor[(11, 12, 2), float32],) */
}

def @func_5485() -> Tensor[(11, 12, 2), uint16] {
  @func_5483() /* ty=Tensor[(11, 12, 2), uint16] */
}

def @func_5088(%var_5087: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) {
  %553 = fn (%var_5070: Tensor[(16, 10, 11), float32]) -> (Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) {
    %544 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
    %545 = %544.0;
    %546 = cast(%var_5070, dtype="uint8") /* ty=Tensor[(16, 10, 11), uint8] */;
    %547 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
    %548 = cast(%545, dtype="uint8") /* ty=Tensor[(16, 10, 11), uint8] */;
    %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %550 = cast(%var_5070, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
    %551 = left_shift(%548, %549) /* ty=Tensor[(16, 10, 11), uint8] */;
    %552 = asinh(%550) /* ty=Tensor[(16, 10, 11), float64] */;
    (%551, %552)
  };
  %553(%var_5087) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) */
}

def @func_4948() -> (Tensor[(11, 12, 2), uint16],) {
  @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */
}

def @func_9878(%var_9877: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64]) {
  %560 = fn (%var_9874: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64]) {
    %554 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
    %555 = cast(%var_9874, dtype="float64") /* ty=Tensor[(96), float64] */;
    %556 = reshape(%555, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %557 = @func_9846(%556) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
    %558 = %554.0;
    %559 = %557.0;
    (%558, %559, %var_9874)
  };
  %560(%var_9877) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64]) */
}

def @func_9719() -> (Tensor[(16, 10, 11), uint8],) {
  %563 = fn () -> (Tensor[(16, 10, 11), uint8],) {
    %561 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
    %562 = %561.1;
    (%562,)
  };
  %563() /* ty=(Tensor[(16, 10, 11), uint8],) */
}

def @func_11100() -> (Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) {
  %564 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %565 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %566 = %564.0;
  %567 = %565.0;
  (%566, %567)
}

def @func_10548(%var_10546: Tensor[(672), float64]) -> (Tensor[(16, 10, 11), float64], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) {
  @func_10545(%var_10546) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) */
}

def @func_12354() -> (Tensor[(11, 12, 2), float32],) {
  @func_12352() /* ty=(Tensor[(11, 12, 2), float32],) */
}

def @func_13409() -> (Tensor[(120), float64],) {
  @func_13407() /* ty=(Tensor[(120), float64],) */
}

def @func_4946() -> (Tensor[(11, 12, 2), uint16],) {
  %568 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %569 = %568.2;
  %570 = cast(%569, dtype="uint16") /* ty=Tensor[(11, 1, 2), uint16] */;
  %571 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 12, 2), float32] */, dtype="uint16") /* ty=Tensor[(11, 12, 2), uint16] */;
  %572 = subtract(%570, %571) /* ty=Tensor[(11, 12, 2), uint16] */;
  (%572,)
}

def @func_5125() -> (Tensor[(11, 12, 2), uint16],) {
  @func_5123() /* ty=(Tensor[(11, 12, 2), uint16],) */
}

def @func_3731(%var_3672: int8, %var_3673: Tensor[(12, 1, 2), int8], %var_3703: Tensor[(6, 28), float32], %var_3720: Tensor[(1536), float64], %var_3729: Tensor[(22), float32]) -> (Tensor[(12, 1, 2), int8], Tensor[(14, 3, 4), float32], Tensor[(6, 28), float32], Tensor[(12, 1, 2), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(165), uint8], Tensor[(12, 70), float64], Tensor[(22), float32]) {
  %573 = cast(%var_3672, dtype="int8") /* ty=int8 */;
  %574 = cast(%var_3673, dtype="int8") /* ty=Tensor[(12, 1, 2), int8] */;
  %575 = cast(%var_3703, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %576 = reshape(%575, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %577 = cast(%var_3673, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %578 = log10(%577) /* ty=Tensor[(12, 1, 2), float32] */;
  %579 = cast(%578, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %580 = cast(%var_3720, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %581 = reshape(%580, newshape=[16, 12, 8]) /* ty=Tensor[(16, 12, 8), float64] */;
  %582 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 70), float64] */, dtype="float64") /* ty=Tensor[(12, 70), float64] */;
  %583 = cast(%var_3729, dtype="float32") /* ty=Tensor[(22), float32] */;
  %584 = reshape(%582, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
  %585 = reshape(%583, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
  %586 = @func_3644(%584, %585) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
  %587 = subtract(%573, %574) /* ty=Tensor[(12, 1, 2), int8] */;
  %588 = @func_2043(%576) /* ty=Tensor[(14, 3, 4), float32] */;
  %589 = erf(%579) /* ty=Tensor[(12, 1, 2), float32] */;
  %590 = @func_712(%581) /* ty=Tensor[(16, 12, 8), float64] */;
  %591 = %586.1;
  (%587, %588, %var_3703, %589, %590, %var_3720, %591, meta[relay.Constant][37] /* ty=Tensor[(12, 70), float64] */, %var_3729)
}

def @func_5467() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) {
  @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */
}

def @func_6789(%var_6788: Tensor[(22), float32]) -> (Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(840), float64], Tensor[(22), float32]) {
  %600 = fn (%var_6781: Tensor[(22), float32]) -> (Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(840), float64], Tensor[(22), float32]) {
    %592 = @func_6476() /* ty=(Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) */;
    %593 = cast(meta[relay.Constant][38] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %594 = cast(%var_6781, dtype="float32") /* ty=Tensor[(22), float32] */;
    %595 = reshape(%593, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float64] */;
    %596 = reshape(%594, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
    %597 = @func_3644(%595, %596) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(165), uint8], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], float32, Tensor[(7, 12, 10), bool], Tensor[(?, 4, 2), float64], Tensor[(8), float64], Tensor[(7, 12, 10), bool]) */;
    %598 = %592.0;
    %599 = %597.0;
    (%598, %599, meta[relay.Constant][38] /* ty=Tensor[(840), float64] */, %var_6781)
  };
  %600(%var_6788) /* ty=(Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(840), float64], Tensor[(22), float32]) */
}

def @func_7387(%var_7386: Tensor[(22), float32]) -> (Tensor[(11, 5, 3), bool], Tensor[(22), float32], Tensor[(11, 12, 2), uint16], Tensor[(4, 384), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8], Tensor[(784, 2), bool], Tensor[(11, 12, 2), uint16]) {
  %641 = fn (%var_7308: Tensor[(22), float32]) -> (Tensor[(11, 5, 3), bool], Tensor[(22), float32], Tensor[(11, 12, 2), uint16], Tensor[(4, 384), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8], Tensor[(784, 2), bool], Tensor[(11, 12, 2), uint16]) {
    %601 = cast(%var_7308, dtype="float32") /* ty=Tensor[(22), float32] */;
    %602 = reshape(%601, newshape=[22]) /* ty=Tensor[(22), float32] */;
    %603 = @func_6787(%602) /* ty=(Tensor[(165), uint8], Tensor[(11, 5, 3), bool], Tensor[(840), float64], Tensor[(22), float32]) */;
    %604 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
    %605 = @func_5946() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) */;
    %606 = %605.1;
    %607 = @func_6300() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) */;
    %608 = %607.0;
    %609 = cast(%608, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %610 = sinh(%609) /* ty=Tensor[(16, 10, 11), float32] */;
    %611 = cast(%610, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
    %612 = atanh(%611) /* ty=Tensor[(16, 10, 11), float64] */;
    %613 = cast(%612, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %614 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
    %615 = cast(%606, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %617 = cast(%606, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %618 = reshape(%617, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), float32] */;
    %619 = @func_5086(%618) /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(16, 10, 11), float64]) */;
    %620 = cast(meta[relay.Constant][40] /* ty=Tensor[(784, 2), float32] */, dtype="float32") /* ty=Tensor[(784, 2), float32] */;
    %621 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 384), float64] */, dtype="float64") /* ty=Tensor[(4, 384), float64] */;
    %622 = cast(meta[relay.Constant][40] /* ty=Tensor[(784, 2), float32] */, dtype="float32") /* ty=Tensor[(784, 2), float32] */;
    %623 = reshape(%620, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
    %624 = reshape(%621, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %625 = reshape(%622, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float32] */;
    %626 = @func_4522(%623, %624, %625) /* ty=(Tensor[(22), float32], Tensor[(60), float64], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), uint32]) */;
    %627 = %626.5;
    %628 = cast(%627, dtype="bool") /* ty=Tensor[(14, 7, 16), bool] */;
    %629 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(784, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %630 = cast(meta[relay.Constant][40] /* ty=Tensor[(784, 2), float32] */, dtype="bool") /* ty=Tensor[(784, 2), bool] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %632 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 384), float64] */, dtype="float64") /* ty=Tensor[(4, 384), float64] */;
    %633 = reshape(%632, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %634 = @func_6387(%633) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(1536), float64], Tensor[(1536), float64]) */;
    %635 = %603.1;
    %636 = %604.0;
    %637 = floor_mod(%615, %616) /* ty=Tensor[(16, 10, 11), float32] */;
    %638 = %619.0;
    %639 = logical_and(%630, %631) /* ty=Tensor[(784, 2), bool] */;
    %640 = %634.0;
    (%635, %var_7308, %636, meta[relay.Constant][39] /* ty=Tensor[(4, 384), float64] */, %637, %638, %639, %640)
  };
  %641(%var_7386) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(22), float32], Tensor[(11, 12, 2), uint16], Tensor[(4, 384), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8], Tensor[(784, 2), bool], Tensor[(11, 12, 2), uint16]) */
}

def @func_11234() -> (Tensor[(11, 12, 2), float64],) {
  @func_11232() /* ty=(Tensor[(11, 12, 2), float64],) */
}

def @func_2300(%var_2298: float32) -> Tensor[(4, 16, 2), bool] {
  @func_2297(%var_2298) /* ty=Tensor[(4, 16, 2), bool] */
}

def @func_7989() -> (Tensor[(385), float32], Tensor[(11, 5, 3), float32]) {
  %647 = fn () -> (Tensor[(385), float32], Tensor[(11, 5, 3), float32]) {
    %642 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
    %643 = @func_7887() /* ty=Tensor[(11, 5, 3), bool] */;
    %644 = cast(%643, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
    %645 = %642.1;
    %646 = cos(%644) /* ty=Tensor[(11, 5, 3), float32] */;
    (%645, %646)
  };
  %647() /* ty=(Tensor[(385), float32], Tensor[(11, 5, 3), float32]) */
}

def @func_5254() -> Tensor[(11, 12, 2), float32] {
  %648 = fn () -> Tensor[(11, 12, 2), float32] {
    @func_4996() /* ty=Tensor[(11, 12, 2), float32] */
  };
  %648() /* ty=Tensor[(11, 12, 2), float32] */
}

def @func_12647() -> (Tensor[(16, 10, 11), uint8], Tensor[(22), float32], Tensor[(22), float64], Tensor[(11, 12, 2), uint16]) {
  @func_12645() /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(22), float32], Tensor[(22), float64], Tensor[(11, 12, 2), uint16]) */
}

def @func_5465() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) {
  %649 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %650 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
  (%649, %650)
}

def @func_7887() -> Tensor[(11, 5, 3), bool] {
  %651 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
  %651.0
}

def @func_11703() -> (Tensor[(165), uint8],) {
  %654 = fn () -> (Tensor[(165), uint8],) {
    %652 = @func_7617() /* ty=(Tensor[(165), uint8],) */;
    %653 = %652.0;
    (%653,)
  };
  %654() /* ty=(Tensor[(165), uint8],) */
}

def @func_1569(%var_1557: Tensor[(11, 5, 3), uint8], %var_1565: Tensor[(1, 22), float32]) -> (Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) {
  %655 = cast(%var_1557, dtype="bool") /* ty=Tensor[(11, 5, 3), bool] */;
  %656 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(11, 5, 3), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 5, 3), uint8] */, dtype="bool") /* ty=Tensor[(11, 5, 3), bool] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %659 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 5, 3), uint8] */, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
  %660 = cast(%var_1565, dtype="float32") /* ty=Tensor[(1, 22), float32] */;
  %661 = reshape(%660, newshape=[11, 1, 2]) /* ty=Tensor[(11, 1, 2), float32] */;
  %662 = less_equal(%657, %658) /* ty=Tensor[(11, 5, 3), bool] */;
  %663 = erf(%659) /* ty=Tensor[(11, 5, 3), float32] */;
  %664 = @func_295(%661) /* ty=Tensor[(11, 1, 2), float32] */;
  (%662, %663, %664, %var_1565)
}

def @func_6614(%var_6579: Tensor[(1, 168), float32], %var_6580: Tensor[(1536), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(16, 12, 8), float64], int8, Tensor[(24), int8], Tensor[(1, 168), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(16, 10, 11), float32]) {
  %665 = cast(meta[relay.Constant][42] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %666 = cast(meta[relay.Constant][43] /* ty=Tensor[(24), int8] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %667 = cast(%var_6579, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %668 = cast(%var_6580, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %669 = cast(meta[relay.Constant][44] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %670 = reshape(%665, newshape=[]) /* ty=int8 */;
  %671 = reshape(%666, newshape=[12, 1, 2]) /* ty=Tensor[(12, 1, 2), int8] */;
  %672 = reshape(%667, newshape=[6, 28]) /* ty=Tensor[(6, 28), float32] */;
  %673 = reshape(%668, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %674 = reshape(%669, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %675 = @func_3731(%670, %671, %672, %673, %674) /* ty=(Tensor[(12, 1, 2), int8], Tensor[(14, 3, 4), float32], Tensor[(6, 28), float32], Tensor[(12, 1, 2), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(165), uint8], Tensor[(12, 70), float64], Tensor[(22), float32]) */;
  %676 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %677 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %678 = %675.4;
  %679 = %676.0;
  (%677, %678, meta[relay.Constant][42] /* ty=int8 */, meta[relay.Constant][43] /* ty=Tensor[(24), int8] */, %var_6579, %var_6580, meta[relay.Constant][44] /* ty=Tensor[(22), float32] */, %679)
}

def @func_10281(%var_10258: Tensor[(2, 180), float64], %var_10264: Tensor[(22), float32], %var_10271: Tensor[(1536), float64]) -> (Tensor[(4, 12, 11), int64], Tensor[(11, 5, 3), bool], Tensor[(9, 5, 8), float64], Tensor[(2, 180), float64], Tensor[(11, 5, 3), bool], Tensor[(60), float64], Tensor[(22), float32], Tensor[(1536), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), float32]) {
  %680 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %681 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 12, 11), int64] */, dtype="int64") /* ty=Tensor[(4, 12, 11), int64] */;
  %682 = @func_5819() /* ty=(Tensor[(11, 5, 3), bool],) */;
  %683 = cast(%var_10258, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %684 = reshape(%683, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), float64] */;
  %685 = @func_9376(%684) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(9, 5, 8), float64]) */;
  %686 = cast(meta[relay.Constant][46] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %687 = cast(%var_10264, dtype="float32") /* ty=Tensor[(22), float32] */;
  %688 = reshape(%686, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), float64] */;
  %689 = reshape(%687, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %690 = @func_4370(%688, %689) /* ty=(Tensor[(3, 4, 5), float64], Tensor[(11, 5, 3), bool], Tensor[(22), float32]) */;
  %691 = cast(%var_10271, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %692 = reshape(%691, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %693 = @func_6387(%692) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(1536), float64], Tensor[(1536), float64]) */;
  %694 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %695 = maximum(%680, %681) /* ty=Tensor[(4, 12, 11), int64] */;
  %696 = %682.0;
  %697 = %685.2;
  %698 = %690.1;
  %699 = %693.2;
  %700 = %694.0;
  (%695, %696, %697, %var_10258, %698, meta[relay.Constant][46] /* ty=Tensor[(60), float64] */, %var_10264, %699, %var_10271, %700)
}

def @func_9781(%var_9780: Tensor[(14, 12, 9), float64]) -> Tensor[(14, 12, 9), int32] {
  %707 = fn (%var_9768: Tensor[(14, 12, 9), float64]) -> Tensor[(14, 12, 9), int32] {
    %701 = cast(%var_9768, dtype="float64") /* ty=Tensor[(14, 12, 9), float64] */;
    %702 = sigmoid(%701) /* ty=Tensor[(14, 12, 9), float64] */;
    %703 = cast(%var_9768, dtype="int32") /* ty=Tensor[(14, 12, 9), int32] */;
    %704 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
    %705 = cast(%702, dtype="int32") /* ty=Tensor[(14, 12, 9), int32] */;
    %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    left_shift(%705, %706) /* ty=Tensor[(14, 12, 9), int32] */
  };
  %707(%var_9780) /* ty=Tensor[(14, 12, 9), int32] */
}

def @func_9468() -> (Tensor[(120), float64], Tensor[(16, 10, 11), float64]) {
  %708 = @func_9307() /* ty=(Tensor[(120), float64], Tensor[(120), float64], Tensor[(11, 12, 2), float64]) */;
  %709 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %710 = %708.0;
  %711 = %709.0;
  (%710, %711)
}

def @func_10994() -> Tensor[(11, 12, 2), float64] {
  @func_10992() /* ty=Tensor[(11, 12, 2), float64] */
}

def @func_715(%var_713: Tensor[(16, 12, 8), float64]) -> Tensor[(16, 12, 8), float64] {
  @func_712(%var_713) /* ty=Tensor[(16, 12, 8), float64] */
}

def @func_10697() -> (Tensor[(11, 12, 2), uint16], Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(11, 12, 2), uint16]) {
  @func_10695() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(11, 12, 2), uint16]) */
}

def @func_8516() -> (Tensor[(11, 12, 2), float32],) {
  %714 = fn () -> (Tensor[(11, 12, 2), float32],) {
    %712 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
    %713 = %712.1;
    (%713,)
  };
  %714() /* ty=(Tensor[(11, 12, 2), float32],) */
}

def @func_11904() -> (Tensor[(165), uint8], Tensor[(16, 10, 11), float64]) {
  %715 = @func_6417() /* ty=(Tensor[(165), uint8],) */;
  %716 = @func_5946() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) */;
  %717 = %715.0;
  %718 = %716.0;
  (%717, %718)
}

def @func_12439() -> Tensor[(11, 12, 2), float32] {
  %719 = @func_11734() /* ty=Tensor[(11, 12, 2), uint16] */;
  %720 = cast(%719, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  log(%720) /* ty=Tensor[(11, 12, 2), float32] */
}

def @func_8714() -> (Tensor[(16, 10, 11), float32],) {
  %725 = fn () -> (Tensor[(16, 10, 11), float32],) {
    %721 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
    %722 = %721.0;
    %723 = cast(%722, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %724 = sin(%723) /* ty=Tensor[(16, 10, 11), float32] */;
    (%724,)
  };
  %725() /* ty=(Tensor[(16, 10, 11), float32],) */
}

def @func_8595() -> Tensor[(11, 5, 7), float32] {
  @func_8593() /* ty=Tensor[(11, 5, 7), float32] */
}

def @func_10322() -> (Tensor[(385), float32],) {
  @func_10320() /* ty=(Tensor[(385), float32],) */
}

def @func_8901() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) {
  %726 = @func_5690() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 3), bool], Tensor[(6, 140), float64], Tensor[(1, 22), float32], Tensor[(11, 12, 2), uint16]) */;
  %727 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %728 = %726.4;
  (%727, %728)
}

def @func_11177(%var_11176: Tensor[(6, 7, 16), float32]) -> Tensor[(6, 7, 16), float32] {
  %730 = fn (%var_11167: Tensor[(6, 7, 16), float32]) -> Tensor[(6, 7, 16), float32] {
    %729 = cast(%var_11167, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
    acosh(%729) /* ty=Tensor[(6, 7, 16), float32] */
  };
  %730(%var_11176) /* ty=Tensor[(6, 7, 16), float32] */
}

def @func_8780(%var_8751: Tensor[(11, 12, 2), uint16]) -> (Tensor[(11, 12, 2), float64], Tensor[(22), float32], Tensor[(11, 12, 2), bool]) {
  %731 = @func_5483() /* ty=Tensor[(11, 12, 2), uint16] */;
  %732 = cast(%var_8751, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %733 = shape_of(%731, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%731, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %736 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %737 = @func_7022() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %738 = multiply(%734, %735) /* ty=Tensor[(11, 12, 2), float64] */;
  %739 = %736.3;
  %740 = %737.0;
  (%738, %739, %740)
}

def @func_3738(%var_3733: int8, %var_3734: Tensor[(12, 1, 2), int8], %var_3735: Tensor[(6, 28), float32], %var_3736: Tensor[(1536), float64], %var_3737: Tensor[(22), float32]) -> (Tensor[(12, 1, 2), int8], Tensor[(14, 3, 4), float32], Tensor[(6, 28), float32], Tensor[(12, 1, 2), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(165), uint8], Tensor[(12, 70), float64], Tensor[(22), float32]) {
  @func_3731(%var_3733, %var_3734, %var_3735, %var_3736, %var_3737) /* ty=(Tensor[(12, 1, 2), int8], Tensor[(14, 3, 4), float32], Tensor[(6, 28), float32], Tensor[(12, 1, 2), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(165), uint8], Tensor[(12, 70), float64], Tensor[(22), float32]) */
}

def @func_4821() -> (Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) {
  %751 = fn () -> (Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) {
    %741 = cast(meta[relay.Constant][47] /* ty=Tensor[(16, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %742 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 10, 11), float32] */, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
    %743 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(16, 10, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %744 = cast(meta[relay.Constant][47] /* ty=Tensor[(16, 10, 11), float32] */, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
    %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %746 = cast(meta[relay.Constant][49] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
    %747 = reshape(%746, newshape=[11, 1, 2]) /* ty=Tensor[(11, 1, 2), float32] */;
    %748 = asin(%741) /* ty=Tensor[(16, 10, 11), float32] */;
    %749 = mod(%744, %745) /* ty=Tensor[(16, 10, 11), float64] */;
    %750 = @func_295(%747) /* ty=Tensor[(11, 1, 2), float32] */;
    (%748, %749, %750, meta[relay.Constant][49] /* ty=Tensor[(22), float32] */)
  };
  %751() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */
}

def @func_13342() -> (Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64], Tensor[(1760), uint8], Tensor[(168), float32], Tensor[(84, 2), float32]) {
  %761 = fn () -> (Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64], Tensor[(1760), uint8], Tensor[(168), float32], Tensor[(84, 2), float32]) {
    %752 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
    %753 = cast(meta[relay.Constant][50] /* ty=Tensor[(1760), uint8] */, dtype="uint8") /* ty=Tensor[(1760), uint8] */;
    %754 = reshape(%753, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), uint8] */;
    %755 = cast(meta[relay.Constant][51] /* ty=Tensor[(84, 2), float32] */, dtype="float32") /* ty=Tensor[(84, 2), float32] */;
    %756 = reshape(%755, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %757 = @func_8384(%756) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
    %758 = %752.1;
    %759 = @func_10477(%754) /* ty=Tensor[(16, 10, 11), float64] */;
    %760 = %757.2;
    (%758, %759, meta[relay.Constant][50] /* ty=Tensor[(1760), uint8] */, %760, meta[relay.Constant][51] /* ty=Tensor[(84, 2), float32] */)
  };
  %761() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64], Tensor[(1760), uint8], Tensor[(168), float32], Tensor[(84, 2), float32]) */
}

def @func_11303(%var_11279: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(16, 10, 11), float64]) {
  %762 = @func_7022() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %763 = cast(%var_11279, dtype="float64") /* ty=Tensor[(96), float64] */;
  %764 = reshape(%763, newshape=[1, 96]) /* ty=Tensor[(1, 96), float64] */;
  %765 = @func_10361(%764) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), float32], Tensor[(1, 96), float64]) */;
  %766 = @func_11100() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) */;
  %767 = %762.0;
  %768 = %765.1;
  %769 = %766.1;
  (%767, %768, %var_11279, %769)
}

def @func_6418() -> (Tensor[(165), uint8],) {
  %772 = fn () -> (Tensor[(165), uint8],) {
    %770 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
    %771 = %770.2;
    (%771,)
  };
  %772() /* ty=(Tensor[(165), uint8],) */
}

def @func_10545(%var_10530: Tensor[(672), float64]) -> (Tensor[(16, 10, 11), float64], Tensor[(4, 14, 12), float64], Tensor[(672), float64]) {
  %773 = @func_9468() /* ty=(Tensor[(120), float64], Tensor[(16, 10, 11), float64]) */;
  %774 = cast(%var_10530, dtype="float64") /* ty=Tensor[(672), float64] */;
  %775 = reshape(%774, newshape=[4, 14, 12]) /* ty=Tensor[(4, 14, 12), float64] */;
  %776 = @func_4552(%775) /* ty=(Tensor[(4, 14, 12), float64],) */;
  %777 = %773.1;
  %778 = %776.0;
  (%777, %778, %var_10530)
}

def @func_4659(%var_4658: Tensor[(16, 3, 2), float64]) -> (Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) {
  %790 = fn (%var_4637: Tensor[(16, 3, 2), float64]) -> (Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) {
    %779 = cast(4.47255f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %780 = reshape(%779, newshape=[]) /* ty=float32 */;
    %781 = cast(meta[relay.Constant][52] /* ty=Tensor[(16, 3, 2), float64] */, dtype="bool") /* ty=Tensor[(16, 3, 2), bool] */;
    %782 = shape_of(%var_4637, dtype="int32") /* ty=Tensor[(3), int32] */;
    %783 = cast(%var_4637, dtype="bool") /* ty=Tensor[(16, 3, 2), bool] */;
    %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %785 = not_equal(%783, %784) /* ty=Tensor[(16, 3, 2), bool] */;
    %786 = cast(4.47255f /* ty=float32 */, dtype="int8") /* ty=int8 */;
    %787 = cast(%785, dtype="int8") /* ty=Tensor[(16, 3, 2), int8] */;
    %788 = @func_2297(%780) /* ty=Tensor[(4, 16, 2), bool] */;
    %789 = minimum(%786, %787) /* ty=Tensor[(16, 3, 2), int8] */;
    (%788, %789)
  };
  %790(%var_4658) /* ty=(Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) */
}

def @func_9476() -> (Tensor[(11, 12, 2), float64],) {
  %793 = fn () -> (Tensor[(11, 12, 2), float64],) {
    %791 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
    %792 = %791.0;
    (%792,)
  };
  %793() /* ty=(Tensor[(11, 12, 2), float64],) */
}

def @func_4998() -> Tensor[(11, 12, 2), float32] {
  @func_4996() /* ty=Tensor[(11, 12, 2), float32] */
}

def @func_11698() -> (Tensor[(11, 1, 2), float32],) {
  @func_11696() /* ty=(Tensor[(11, 1, 2), float32],) */
}

def @main(%var_13685: Tensor[(3, 9, 16), int64]) -> Tensor[(3, 9, 16), int64] {
  %794 = cast(meta[relay.Constant][53] /* ty=Tensor[(3, 1, 16), int64] */, dtype="int64") /* ty=Tensor[(3, 1, 16), int64] */;
  %795 = cast(%var_13685, dtype="int64") /* ty=Tensor[(3, 9, 16), int64] */;
  multiply(%794, %795) /* ty=Tensor[(3, 9, 16), int64] */
}

def @func_11359(%var_11357: Tensor[(3, 3, 7), float64]) -> (Tensor[(3, 3, 7), float64],) {
  @func_11356(%var_11357) /* ty=(Tensor[(3, 3, 7), float64],) */
}

def @func_8235() -> Tensor[(385), float32] {
  %796 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %796.1
}

def @func_5351() -> (Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) {
  %807 = fn () -> (Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) {
    %797 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
    %798 = %797.2;
    %799 = cast(%798, dtype="float64") /* ty=Tensor[(11, 1, 2), float64] */;
    %800 = cast(meta[relay.Constant][54] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
    %801 = cast(%798, dtype="float32") /* ty=Tensor[(11, 1, 2), float32] */;
    %802 = reshape(%800, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
    %803 = reshape(%801, newshape=[1, 22]) /* ty=Tensor[(1, 22), float32] */;
    %804 = @func_1569(%802, %803) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */;
    %805 = atan(%799) /* ty=Tensor[(11, 1, 2), float64] */;
    %806 = %804.0;
    (%805, %806, meta[relay.Constant][54] /* ty=Tensor[(165), uint8] */)
  };
  %807() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */
}

def @func_8593() -> Tensor[(11, 5, 7), float32] {
  %808 = @func_6107() /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 7), float32], Tensor[(385), float32]) */;
  %808.1
}

def @func_7873() -> (Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) {
  %814 = fn () -> (Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) {
    %809 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
    %810 = %809.0;
    %811 = cast(%810, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
    %812 = exp(%811) /* ty=Tensor[(11, 12, 2), float64] */;
    %813 = @func_7793() /* ty=Tensor[(16, 10, 11), float32] */;
    (%812, %813)
  };
  %814() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */
}

def @func_6390(%var_6388: Tensor[(1536), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(1536), float64], Tensor[(1536), float64]) {
  @func_6387(%var_6388) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(1536), float64], Tensor[(1536), float64]) */
}

def @func_11611(%var_11601: Tensor[(63), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float32], Tensor[(11, 12, 2), uint16], Tensor[(3, 3, 7), float64], Tensor[(63), float64], Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(6, 7, 16), float64]) {
  %815 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %816 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %817 = cast(meta[relay.Constant][55] /* ty=Tensor[(672), float32] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %818 = reshape(%817, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %819 = @func_6917(%818) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float64], Tensor[(16, 10, 11), uint8]) */;
  %820 = cast(%var_11601, dtype="float64") /* ty=Tensor[(63), float64] */;
  %821 = reshape(%820, newshape=[3, 3, 7]) /* ty=Tensor[(3, 3, 7), float64] */;
  %822 = @func_11356(%821) /* ty=(Tensor[(3, 3, 7), float64],) */;
  %823 = @func_10916() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %824 = @func_11100() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) */;
  %825 = cast(meta[relay.Constant][55] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %826 = reshape(%825, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float32] */;
  %827 = @func_11175(%826) /* ty=Tensor[(6, 7, 16), float32] */;
  %828 = cast(%827, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %829 = %815.0;
  %830 = %816.0;
  %831 = %819.0;
  %832 = %822.0;
  %833 = %823.0;
  %834 = %824.0;
  %835 = sqrt(%828) /* ty=Tensor[(6, 7, 16), float64] */;
  (%829, %830, meta[relay.Constant][55] /* ty=Tensor[(672), float32] */, %831, %832, %var_11601, %833, %834, %835)
}

def @func_12352() -> (Tensor[(11, 12, 2), float32],) {
  %836 = @func_8515() /* ty=(Tensor[(11, 12, 2), float32],) */;
  %837 = %836.0;
  (%837,)
}

def @func_4527(%var_4524: Tensor[(14, 7, 16), float32], %var_4525: Tensor[(1536), float64], %var_4526: Tensor[(14, 7, 16), float32]) -> (Tensor[(22), float32], Tensor[(60), float64], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), uint32]) {
  @func_4522(%var_4524, %var_4525, %var_4526) /* ty=(Tensor[(22), float32], Tensor[(60), float64], Tensor[(22), float32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(14, 7, 16), uint32]) */
}

def @func_5041() -> (Tensor[(16, 10, 11), float64],) {
  %840 = fn () -> (Tensor[(16, 10, 11), float64],) {
    %838 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
    %839 = %838.1;
    (%839,)
  };
  %840() /* ty=(Tensor[(16, 10, 11), float64],) */
}

def @func_8783(%var_8781: Tensor[(11, 12, 2), uint16]) -> (Tensor[(11, 12, 2), float64], Tensor[(22), float32], Tensor[(11, 12, 2), bool]) {
  @func_8780(%var_8781) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(22), float32], Tensor[(11, 12, 2), bool]) */
}

def @func_7478() -> Tensor[(16, 10, 11), float32] {
  %842 = fn () -> Tensor[(16, 10, 11), float32] {
    %841 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
    %841.0
  };
  %842() /* ty=Tensor[(16, 10, 11), float32] */
}

def @func_4091(%var_4081: Tensor[(12, 5, 2), float64], %var_4087: Tensor[(168), float32]) -> (Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) {
  %843 = cast(%var_4081, dtype="float64") /* ty=Tensor[(12, 5, 2), float64] */;
  %844 = cast(%var_4087, dtype="float32") /* ty=Tensor[(168), float32] */;
  %845 = reshape(%844, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
  %846 = atanh(%843) /* ty=Tensor[(12, 5, 2), float64] */;
  %847 = @func_2043(%845) /* ty=Tensor[(14, 3, 4), float32] */;
  (%846, %847, %var_4087)
}

def @func_7889() -> Tensor[(11, 5, 3), bool] {
  @func_7887() /* ty=Tensor[(11, 5, 3), bool] */
}

def @func_11696() -> (Tensor[(11, 1, 2), float32],) {
  %848 = @func_10221() /* ty=(Tensor[(11, 1, 2), float32], Tensor[(385), float32]) */;
  %849 = %848.0;
  (%849,)
}

def @func_5589(%var_5587: Tensor[(48), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) {
  @func_5586(%var_5587) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */
}

def @func_8481() -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32]) {
  %855 = fn () -> (Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32]) {
    %850 = @func_5946() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) */;
    %851 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %852 = %850.1;
    %853 = %851.0;
    %854 = @func_5253() /* ty=Tensor[(11, 12, 2), float32] */;
    (%852, %853, %854)
  };
  %855() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32]) */
}

def @func_10479(%var_10478: Tensor[(16, 10, 11), uint8]) -> Tensor[(16, 10, 11), float64] {
  %863 = fn (%var_10465: Tensor[(16, 10, 11), uint8]) -> Tensor[(16, 10, 11), float64] {
    %856 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
    %857 = cast(%var_10465, dtype="uint32") /* ty=Tensor[(16, 10, 11), uint32] */;
    %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
    %859 = cast(%856, dtype="uint32") /* ty=Tensor[(16, 10, 11), uint32] */;
    %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %861 = right_shift(%859, %860) /* ty=Tensor[(16, 10, 11), uint32] */;
    %862 = cast(%861, dtype="float64") /* ty=Tensor[(16, 10, 11), float64] */;
    log10(%862) /* ty=Tensor[(16, 10, 11), float64] */
  };
  %863(%var_10478) /* ty=Tensor[(16, 10, 11), float64] */
}

def @func_2645(%var_2643: Tensor[(1, 4, 2), float64]) -> (Tensor[(1, 4, 2), float64], Tensor[(?, 4, 2), float64]) {
  @func_2642(%var_2643) /* ty=(Tensor[(1, 4, 2), float64], Tensor[(?, 4, 2), float64]) */
}

def @func_11102() -> (Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) {
  @func_11100() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), float64]) */
}

def @func_4170(%var_4161: Tensor[(13, 6, 8), uint16], %var_4162: Tensor[(13, 6, 8), uint16]) -> (Tensor[(13, 6, 8), uint16],) {
  %864 = cast(%var_4162, dtype="uint16") /* ty=Tensor[(13, 6, 8), uint16] */;
  %865 = shape_of(%var_4161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%var_4161, dtype="uint16") /* ty=Tensor[(13, 6, 8), uint16] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %868 = logical_xor(%866, %867) /* ty=Tensor[(13, 6, 8), uint16] */;
  (%868,)
}

def @func_8386(%var_8385: Tensor[(168), float32]) -> (Tensor[(16, 10, 11), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) {
  %873 = fn (%var_8371: Tensor[(168), float32]) -> (Tensor[(16, 10, 11), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) {
    %869 = cast(%var_8371, dtype="float32") /* ty=Tensor[(168), float32] */;
    %870 = reshape(%869, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
    %871 = @func_6343() /* ty=Tensor[(16, 10, 11), float64] */;
    %872 = @func_2043(%870) /* ty=Tensor[(14, 3, 4), float32] */;
    (%871, %872, %var_8371)
  };
  %873(%var_8385) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */
}

def @func_4095(%var_4093: Tensor[(12, 5, 2), float64], %var_4094: Tensor[(168), float32]) -> (Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) {
  @func_4091(%var_4093, %var_4094) /* ty=(Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */
}

def @func_8350() -> (Tensor[(11, 12, 2), bool],) {
  %874 = @func_7934() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %875 = %874.0;
  (%875,)
}

def @func_12329(%var_12314: Tensor[(6, 140), float64], %var_12324: Tensor[(6, 140), float64]) -> (Tensor[(6, 140), float32],) {
  %876 = @func_9934() /* ty=(Tensor[(6, 140), float64],) */;
  %877 = %876.0;
  %878 = cast(%var_12314, dtype="int32") /* ty=Tensor[(6, 140), int32] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(2), int32] */;
  %880 = cast(%877, dtype="int32") /* ty=Tensor[(6, 140), int32] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %882 = bitwise_xor(%880, %881) /* ty=Tensor[(6, 140), int32] */;
  %883 = cast(%882, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %884 = shape_of(%var_12314, dtype="int32") /* ty=Tensor[(2), int32] */;
  %885 = cast(%var_12314, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %887 = divide(%885, %886) /* ty=Tensor[(6, 140), float64] */;
  %888 = cast(%var_12324, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %889 = shape_of(%887, dtype="int32") /* ty=Tensor[(2), int32] */;
  %890 = cast(%887, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %892 = mod(%890, %891) /* ty=Tensor[(6, 140), float32] */;
  (%892,)
}

def @func_12333(%var_12331: Tensor[(6, 140), float64], %var_12332: Tensor[(6, 140), float64]) -> (Tensor[(6, 140), float32],) {
  @func_12329(%var_12331, %var_12332) /* ty=(Tensor[(6, 140), float32],) */
}

def @func_13359(%var_13350: Tensor[(1536), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(1536), float64], Tensor[(1536), float64]) {
  %893 = @func_11232() /* ty=(Tensor[(11, 12, 2), float64],) */;
  %894 = cast(%var_13350, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %895 = reshape(%894, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %896 = @func_6168(%895) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
  %897 = %893.0;
  %898 = %896.2;
  (%897, %898, %var_13350)
}

def @func_121(%var_119: Tensor[(2, 4, 6), float64]) -> (Tensor[(2, 4, 6), float64],) {
  @func_118(%var_119) /* ty=(Tensor[(2, 4, 6), float64],) */
}

def @func_7022() -> (Tensor[(11, 12, 2), bool],) {
  %899 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %900 = %899.1;
  %901 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 12, 2), float32] */, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%900, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %905 = equal(%903, %904) /* ty=Tensor[(11, 12, 2), bool] */;
  (%905,)
}

def @func_12441() -> Tensor[(11, 12, 2), float32] {
  @func_12439() /* ty=Tensor[(11, 12, 2), float32] */
}

def @func_12118(%var_12116: Tensor[(11, 12, 2), uint16]) -> (Tensor[(165), uint8], Tensor[(11, 12, 2), uint8], Tensor[(11, 12, 2), uint16], Tensor[(165), uint8], Tensor[(8), float64]) {
  @func_12115(%var_12116) /* ty=(Tensor[(165), uint8], Tensor[(11, 12, 2), uint8], Tensor[(11, 12, 2), uint16], Tensor[(165), uint8], Tensor[(8), float64]) */
}

def @func_12547() -> (Tensor[(11, 1, 2), float64],) {
  @func_12545() /* ty=(Tensor[(11, 1, 2), float64],) */
}

def @func_13140() -> Tensor[(11, 12, 2), bool] {
  @func_13138() /* ty=Tensor[(11, 12, 2), bool] */
}

def @func_10665() -> Tensor[(11, 12, 2), uint16] {
  @func_10663() /* ty=Tensor[(11, 12, 2), uint16] */
}

def @func_12219() -> (Tensor[(16, 10, 11), float32], Tensor[(22), float32], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(385), float32], Tensor[(96), float64]) {
  @func_12217() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(22), float32], Tensor[(1, 22), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64], Tensor[(385), float32], Tensor[(96), float64]) */
}

def @func_6478() -> (Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) {
  @func_6476() /* ty=(Tensor[(165), uint8], Tensor[(11, 1, 2), float32], Tensor[(11, 12, 2), float32]) */
}

def @func_10361(%var_10357: Tensor[(1, 96), float64]) -> (Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), float32], Tensor[(1, 96), float64]) {
  %906 = @func_7124() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(385), float32]) */;
  %907 = cast(%var_10357, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
  %908 = reshape(%907, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %909 = @func_9876(%908) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64]) */;
  %910 = %906.0;
  %911 = %909.0;
  (%910, %911, %var_10357)
}

def @func_13262(%var_13225: Tensor[(96), float64]) -> (Tensor[(16, 10, 11), float32], Tensor[(96), float64], Tensor[(22), int64], Tensor[(11, 2), float32], Tensor[(15, 9, 8), float64]) {
  %912 = cast(%var_13225, dtype="float64") /* ty=Tensor[(96), float64] */;
  %913 = reshape(%912, newshape=[1, 96]) /* ty=Tensor[(1, 96), float64] */;
  %914 = @func_10361(%913) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), float32], Tensor[(1, 96), float64]) */;
  %915 = cast(meta[relay.Constant][57] /* ty=Tensor[(11, 2), float32] */, dtype="float32") /* ty=Tensor[(11, 2), float32] */;
  %916 = reshape(%915, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %917 = @func_4845(%916) /* ty=(Tensor[(13, 6, 8), uint16], Tensor[(624), uint16], Tensor[(22), int64]) */;
  %918 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 9, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
  %919 = acos(%918) /* ty=Tensor[(15, 9, 8), float32] */;
  %920 = cast(%919, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
  %921 = %914.0;
  %922 = %917.2;
  %923 = cos(%920) /* ty=Tensor[(15, 9, 8), float64] */;
  (%921, %var_13225, %922, meta[relay.Constant][57] /* ty=Tensor[(11, 2), float32] */, %923)
}

def @func_297(%var_296: Tensor[(11, 1, 2), float32]) -> Tensor[(11, 1, 2), float32] {
  %925 = fn (%var_291: Tensor[(11, 1, 2), float32]) -> Tensor[(11, 1, 2), float32] {
    %924 = cast(%var_291, dtype="float32") /* ty=Tensor[(11, 1, 2), float32] */;
    exp(%924) /* ty=Tensor[(11, 1, 2), float32] */
  };
  %925(%var_296) /* ty=Tensor[(11, 1, 2), float32] */
}

def @func_8237() -> Tensor[(385), float32] {
  @func_8235() /* ty=Tensor[(385), float32] */
}

def @func_12988() -> (Tensor[(11, 12, 2), float32], Tensor[(6, 140), float32], Tensor[(840), float64], Tensor[(11, 5, 7), float32]) {
  %926 = cast(meta[relay.Constant][59] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %927 = cast(meta[relay.Constant][59] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %928 = reshape(%926, newshape=[6, 140]) /* ty=Tensor[(6, 140), float64] */;
  %929 = reshape(%927, newshape=[6, 140]) /* ty=Tensor[(6, 140), float64] */;
  %930 = @func_12329(%928, %929) /* ty=(Tensor[(6, 140), float32],) */;
  %931 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
  %932 = %930.0;
  %933 = @func_8593() /* ty=Tensor[(11, 5, 7), float32] */;
  (%931, %932, meta[relay.Constant][59] /* ty=Tensor[(840), float64] */, %933)
}

def @func_8128(%var_8109: Tensor[(11, 12, 2), float32]) -> Tensor[(11, 12, 2), uint32] {
  %934 = @func_5465() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float32]) */;
  %935 = %934.0;
  %936 = cast(%var_8109, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
  %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%935, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%938, %939) /* ty=Tensor[(11, 12, 2), uint32] */
}

def @func_9309() -> (Tensor[(120), float64], Tensor[(120), float64], Tensor[(11, 12, 2), float64]) {
  @func_9307() /* ty=(Tensor[(120), float64], Tensor[(120), float64], Tensor[(11, 12, 2), float64]) */
}

def @func_13482() -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) {
  %940 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %941 = @func_13138() /* ty=Tensor[(11, 12, 2), bool] */;
  %942 = %940.0;
  (%941, %942)
}

def @func_8221(%var_8220: Tensor[(8, 7, 7), float64]) -> (Tensor[(8, 7, 7), float64], Tensor[(11, 12, 2), uint16]) {
  %947 = fn (%var_8170: Tensor[(8, 7, 7), float64]) -> (Tensor[(8, 7, 7), float64], Tensor[(11, 12, 2), uint16]) {
    %943 = cast(%var_8170, dtype="float64") /* ty=Tensor[(8, 7, 7), float64] */;
    %944 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
    %945 = rsqrt(%943) /* ty=Tensor[(8, 7, 7), float64] */;
    %946 = %944.0;
    (%945, %946)
  };
  %947(%var_8220) /* ty=(Tensor[(8, 7, 7), float64], Tensor[(11, 12, 2), uint16]) */
}

def @func_12744() -> (Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) {
  @func_12742() /* ty=(Tensor[(16, 10, 11), uint8], Tensor[(11, 5, 7), float32], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */
}

def @func_10364(%var_10362: Tensor[(1, 96), float64]) -> (Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), float32], Tensor[(1, 96), float64]) {
  @func_10361(%var_10362) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), float32], Tensor[(1, 96), float64]) */
}

def @func_11036(%var_11035: Tensor[(1536), float64]) -> (Tensor[(2, 11, 12), float32], Tensor[(11, 12, 2), float32], Tensor[(6, 140), float64], Tensor[(1536), float64], Tensor[(1536), float64]) {
  %957 = fn (%var_11023: Tensor[(1536), float64]) -> (Tensor[(2, 11, 12), float32], Tensor[(11, 12, 2), float32], Tensor[(6, 140), float64], Tensor[(1536), float64], Tensor[(1536), float64]) {
    %948 = cast(meta[relay.Constant][60] /* ty=Tensor[(2, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 12), float32] */;
    %949 = @func_9934() /* ty=(Tensor[(6, 140), float64],) */;
    %950 = cast(%var_11023, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %951 = reshape(%950, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %952 = @func_6168(%951) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
    %953 = log2(%948) /* ty=Tensor[(2, 11, 12), float32] */;
    %954 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
    %955 = %949.0;
    %956 = %952.2;
    (%953, %954, %955, %956, %var_11023)
  };
  %957(%var_11035) /* ty=(Tensor[(2, 11, 12), float32], Tensor[(11, 12, 2), float32], Tensor[(6, 140), float64], Tensor[(1536), float64], Tensor[(1536), float64]) */
}

def @func_12826() -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), bool]) {
  %962 = fn () -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), bool]) {
    %958 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
    %959 = @func_8350() /* ty=(Tensor[(11, 12, 2), bool],) */;
    %960 = %958.0;
    %961 = %959.0;
    (%960, %961)
  };
  %962() /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), bool]) */
}

def @func_13484() -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) {
  @func_13482() /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) */
}

def @func_7095(%var_7093: bool, %var_7094: Tensor[(9, 1, 2), bool]) -> (Tensor[(9, 1, 2), bool],) {
  %966 = fn (%var_7084: bool, %var_7085: Tensor[(9, 1, 2), bool]) -> (Tensor[(9, 1, 2), bool],) {
    %963 = cast(%var_7084, dtype="bool") /* ty=bool */;
    %964 = cast(%var_7085, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
    %965 = logical_or(%963, %964) /* ty=Tensor[(9, 1, 2), bool] */;
    (%965,)
  };
  %966(%var_7093, %var_7094) /* ty=(Tensor[(9, 1, 2), bool],) */
}

def @func_5123() -> (Tensor[(11, 12, 2), uint16],) {
  %967 = @func_4946() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %968 = %967.0;
  (%968,)
}

def @func_10884() -> (Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) {
  %969 = @func_7240() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) */;
  %970 = %969.2;
  %971 = @func_7477() /* ty=Tensor[(16, 10, 11), float32] */;
  (%970, %971)
}

def @func_4845(%var_4838: Tensor[(22), float32]) -> (Tensor[(13, 6, 8), uint16], Tensor[(624), uint16], Tensor[(22), int64]) {
  %972 = cast(meta[relay.Constant][61] /* ty=Tensor[(624), uint16] */, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %973 = cast(meta[relay.Constant][61] /* ty=Tensor[(624), uint16] */, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %974 = reshape(%972, newshape=[13, 6, 8]) /* ty=Tensor[(13, 6, 8), uint16] */;
  %975 = reshape(%973, newshape=[13, 6, 8]) /* ty=Tensor[(13, 6, 8), uint16] */;
  %976 = @func_4170(%974, %975) /* ty=(Tensor[(13, 6, 8), uint16],) */;
  %977 = @func_4820() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */;
  %978 = %977.3;
  %979 = cast(%var_4838, dtype="int64") /* ty=Tensor[(22), int64] */;
  %980 = shape_of(%978, dtype="int32") /* ty=Tensor[(1), int32] */;
  %981 = cast(%978, dtype="int64") /* ty=Tensor[(22), int64] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?), int64] */;
  %983 = %976.0;
  %984 = left_shift(%981, %982) /* ty=Tensor[(22), int64] */;
  (%983, meta[relay.Constant][61] /* ty=Tensor[(624), uint16] */, %984)
}

def @func_7242() -> (Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) {
  @func_7240() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), float32]) */
}

def @func_8903() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) {
  @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */
}

def @func_8627() -> Tensor[(11, 1, 2), float64] {
  %985 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
  %985.0
}

def @func_12398() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 5, 7), float32], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) {
  %992 = fn () -> (Tensor[(11, 12, 2), float32], Tensor[(11, 5, 7), float32], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) {
    %986 = @func_8901() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), uint16]) */;
    %987 = cast(meta[relay.Constant][62] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
    %988 = reshape(%987, newshape=[11, 1, 2]) /* ty=Tensor[(11, 1, 2), float32] */;
    %989 = %986.0;
    %990 = @func_8593() /* ty=Tensor[(11, 5, 7), float32] */;
    %991 = @func_295(%988) /* ty=Tensor[(11, 1, 2), float32] */;
    (%989, %990, %991, meta[relay.Constant][62] /* ty=Tensor[(22), float32] */)
  };
  %992() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 5, 7), float32], Tensor[(11, 1, 2), float32], Tensor[(22), float32]) */
}

def @func_11795(%var_11782: Tensor[(12, 7, 4), int16], %var_11783: Tensor[(12, 7, 4), int16]) -> Tensor[(12, 7, 4), bool] {
  %993 = cast(%var_11783, dtype="bool") /* ty=Tensor[(12, 7, 4), bool] */;
  %994 = shape_of(%var_11782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%var_11782, dtype="bool") /* ty=Tensor[(12, 7, 4), bool] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%995, %996) /* ty=Tensor[(12, 7, 4), bool] */
}

def @func_10918() -> (Tensor[(11, 12, 2), uint16],) {
  @func_10916() /* ty=(Tensor[(11, 12, 2), uint16],) */
}

def @func_9955() -> (Tensor[(16, 10, 11), float64],) {
  %999 = fn () -> (Tensor[(16, 10, 11), float64],) {
    %997 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %998 = %997.0;
    (%998,)
  };
  %999() /* ty=(Tensor[(16, 10, 11), float64],) */
}

def @func_8558() -> Tensor[(16, 10, 11), float64] {
  %1001 = fn () -> Tensor[(16, 10, 11), float64] {
    %1000 = @func_5946() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), float64]) */;
    %1000.1
  };
  %1001() /* ty=Tensor[(16, 10, 11), float64] */
}

def @func_118(%var_87: Tensor[(2, 4, 6), float64]) -> (Tensor[(2, 4, 6), float64],) {
  %1002 = cast(%var_87, dtype="float64") /* ty=Tensor[(2, 4, 6), float64] */;
  %1003 = tan(%1002) /* ty=Tensor[(2, 4, 6), float64] */;
  (%1003,)
}

def @func_9848(%var_9847: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) {
  %1010 = fn (%var_9841: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) {
    %1004 = @func_5123() /* ty=(Tensor[(11, 12, 2), uint16],) */;
    %1005 = cast(%var_9841, dtype="float64") /* ty=Tensor[(96), float64] */;
    %1006 = reshape(%1005, newshape=[16, 3, 2]) /* ty=Tensor[(16, 3, 2), float64] */;
    %1007 = @func_4657(%1006) /* ty=(Tensor[(4, 16, 2), bool], Tensor[(16, 3, 2), int8]) */;
    %1008 = %1004.0;
    %1009 = %1007.0;
    (%1008, %1009, %var_9841)
  };
  %1010(%var_9847) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */
}

def @func_11248(%var_11247: Tensor[(2, 7, 3), float32]) -> (Tensor[(2, 7, 3), float32], Tensor[(16, 10, 11), uint8]) {
  %1015 = fn (%var_11240: Tensor[(2, 7, 3), float32]) -> (Tensor[(2, 7, 3), float32], Tensor[(16, 10, 11), uint8]) {
    %1011 = cast(%var_11240, dtype="float32") /* ty=Tensor[(2, 7, 3), float32] */;
    %1012 = @func_9718() /* ty=(Tensor[(16, 10, 11), uint8],) */;
    %1013 = atanh(%1011) /* ty=Tensor[(2, 7, 3), float32] */;
    %1014 = %1012.0;
    (%1013, %1014)
  };
  %1015(%var_11247) /* ty=(Tensor[(2, 7, 3), float32], Tensor[(16, 10, 11), uint8]) */
}

def @func_4554(%var_4553: Tensor[(4, 14, 12), float64]) -> (Tensor[(4, 14, 12), float64],) {
  %1018 = fn (%var_4545: Tensor[(4, 14, 12), float64]) -> (Tensor[(4, 14, 12), float64],) {
    %1016 = cast(%var_4545, dtype="float64") /* ty=Tensor[(4, 14, 12), float64] */;
    %1017 = cosh(%1016) /* ty=Tensor[(4, 14, 12), float64] */;
    (%1017,)
  };
  %1018(%var_4553) /* ty=(Tensor[(4, 14, 12), float64],) */
}

def @func_1573(%var_1571: Tensor[(11, 5, 3), uint8], %var_1572: Tensor[(1, 22), float32]) -> (Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) {
  @func_1569(%var_1571, %var_1572) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(11, 5, 3), float32], Tensor[(11, 1, 2), float32], Tensor[(1, 22), float32]) */
}

def @func_5220() -> Tensor[(16, 10, 11), float32] {
  @func_5218() /* ty=Tensor[(16, 10, 11), float32] */
}

def @func_9229(%var_9228: Tensor[(22), float32]) -> (Tensor[(16, 10, 11), float64], Tensor[(385), int32], Tensor[(385), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(165), uint8]) {
  %1035 = fn (%var_9216: Tensor[(22), float32]) -> (Tensor[(16, 10, 11), float64], Tensor[(385), int32], Tensor[(385), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(165), uint8]) {
    %1019 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %1020 = cast(meta[relay.Constant][63] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
    %1021 = cast(meta[relay.Constant][63] /* ty=Tensor[(385), float32] */, dtype="float32") /* ty=Tensor[(385), float32] */;
    %1022 = %1019.0;
    %1023 = cast(%1022, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %1024 = cast(meta[relay.Constant][64] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %1025 = cast(%var_9216, dtype="float32") /* ty=Tensor[(22), float32] */;
    %1026 = reshape(%1020, newshape=[385]) /* ty=Tensor[(385), float32] */;
    %1027 = reshape(%1021, newshape=[385]) /* ty=Tensor[(385), float32] */;
    %1028 = reshape(%1023, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
    %1029 = reshape(%1024, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %1030 = reshape(%1025, newshape=[22]) /* ty=Tensor[(22), float32] */;
    %1031 = @func_6747(%1026, %1027, %1028, %1029, %1030) /* ty=(Tensor[(385), uint16], Tensor[(385), int32], Tensor[(16, 12, 8), float64], Tensor[(1536), float64], Tensor[(1760), float32], Tensor[(11, 12, 2), float32], Tensor[(7, 12, 10), bool], Tensor[(840), float64], Tensor[(22), float32]) */;
    %1032 = @func_7617() /* ty=(Tensor[(165), uint8],) */;
    %1033 = %1031.1;
    %1034 = %1032.0;
    (%1022, %1033, meta[relay.Constant][63] /* ty=Tensor[(385), float32] */, meta[relay.Constant][64] /* ty=Tensor[(1536), float64] */, %var_9216, %1034)
  };
  %1035(%var_9228) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(385), int32], Tensor[(385), float32], Tensor[(1536), float64], Tensor[(22), float32], Tensor[(165), uint8]) */
}

def @func_11576(%var_11574: Tensor[(96), float64], %var_11575: Tensor[(11, 12, 2), uint16]) -> (Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64], Tensor[(11, 12, 2), uint32], Tensor[(11, 12, 2), bool], Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), uint8]) {
  @func_11572(%var_11574, %var_11575) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64], Tensor[(11, 12, 2), uint32], Tensor[(11, 12, 2), bool], Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), uint8]) */
}

def @func_6920(%var_6918: Tensor[(672), float64]) -> (Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float64], Tensor[(16, 10, 11), uint8]) {
  @func_6917(%var_6918) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(672), float64], Tensor[(16, 10, 11), uint8]) */
}

def @func_5778(%var_5777: Tensor[(120), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(12, 5, 2), float64], Tensor[(120), float64], Tensor[(168), float32]) {
  %1043 = fn (%var_5724: Tensor[(120), float64]) -> (Tensor[(11, 12, 2), float32], Tensor[(12, 5, 2), float64], Tensor[(120), float64], Tensor[(168), float32]) {
    %1036 = cast(%var_5724, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1037 = cast(meta[relay.Constant][65] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1038 = reshape(%1036, newshape=[12, 5, 2]) /* ty=Tensor[(12, 5, 2), float64] */;
    %1039 = reshape(%1037, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1040 = @func_4091(%1038, %1039) /* ty=(Tensor[(12, 5, 2), float64], Tensor[(14, 3, 4), float32], Tensor[(168), float32]) */;
    %1041 = @func_4996() /* ty=Tensor[(11, 12, 2), float32] */;
    %1042 = %1040.0;
    (%1041, %1042, %var_5724, meta[relay.Constant][65] /* ty=Tensor[(168), float32] */)
  };
  %1043(%var_5777) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(12, 5, 2), float64], Tensor[(120), float64], Tensor[(168), float32]) */
}

def @func_9123(%var_9121: Tensor[(4, 4, 15), float32], %var_9122: Tensor[(22), float32]) -> (Tensor[(4, 4, 15), float32], Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(22), float32]) {
  @func_9119(%var_9121, %var_9122) /* ty=(Tensor[(4, 4, 15), float32], Tensor[(11, 12, 2), uint16], Tensor[(11, 12, 2), uint16], Tensor[(22), float32]) */
}

def @func_11906() -> (Tensor[(165), uint8], Tensor[(16, 10, 11), float64]) {
  @func_11904() /* ty=(Tensor[(165), uint8], Tensor[(16, 10, 11), float64]) */
}

def @func_7618() -> (Tensor[(165), uint8],) {
  %1046 = fn () -> (Tensor[(165), uint8],) {
    %1044 = @func_6417() /* ty=(Tensor[(165), uint8],) */;
    %1045 = %1044.0;
    (%1045,)
  };
  %1046() /* ty=(Tensor[(165), uint8],) */
}

def @func_2046(%var_2044: Tensor[(14, 3, 4), float32]) -> Tensor[(14, 3, 4), float32] {
  @func_2043(%var_2044) /* ty=Tensor[(14, 3, 4), float32] */
}

def @func_12382(%var_12378: Tensor[(22, 1), float32]) -> (Tensor[(16, 10, 11), float64], Tensor[(11, 12, 2), float32], Tensor[(1536), float64], Tensor[(360), float64], Tensor[(22, 1), float32], Tensor[(1536), float64]) {
  %1047 = @func_11904() /* ty=(Tensor[(165), uint8], Tensor[(16, 10, 11), float64]) */;
  %1048 = @func_6411() /* ty=(Tensor[(11, 12, 2), float32],) */;
  %1049 = cast(meta[relay.Constant][66] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1050 = cast(%var_12378, dtype="float32") /* ty=Tensor[(22, 1), float32] */;
  %1051 = cast(meta[relay.Constant][67] /* ty=Tensor[(1536), float64] */, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %1052 = reshape(%1049, newshape=[2, 180]) /* ty=Tensor[(2, 180), float64] */;
  %1053 = reshape(%1050, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %1054 = reshape(%1051, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %1055 = @func_10281(%1052, %1053, %1054) /* ty=(Tensor[(4, 12, 11), int64], Tensor[(11, 5, 3), bool], Tensor[(9, 5, 8), float64], Tensor[(2, 180), float64], Tensor[(11, 5, 3), bool], Tensor[(60), float64], Tensor[(22), float32], Tensor[(1536), float64], Tensor[(1536), float64], Tensor[(16, 10, 11), float32]) */;
  %1056 = %1047.1;
  %1057 = %1048.0;
  %1058 = %1055.8;
  (%1056, %1057, %1058, meta[relay.Constant][66] /* ty=Tensor[(360), float64] */, %var_12378, meta[relay.Constant][67] /* ty=Tensor[(1536), float64] */)
}

def @func_7956() -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) {
  @func_7954() /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) */
}

def @func_13115(%var_13113: Tensor[(63), float64]) -> (Tensor[(16, 10, 11), float64], Tensor[(63), float64], Tensor[(16, 10, 11), float64], Tensor[(3, 3, 7), float32]) {
  @func_13112(%var_13113) /* ty=(Tensor[(16, 10, 11), float64], Tensor[(63), float64], Tensor[(16, 10, 11), float64], Tensor[(3, 3, 7), float32]) */
}

def @func_9825() -> Tensor[(11, 12, 2), uint16] {
  @func_5483() /* ty=Tensor[(11, 12, 2), uint16] */
}

def @func_11735() -> Tensor[(11, 12, 2), uint16] {
  %1060 = fn () -> Tensor[(11, 12, 2), uint16] {
    %1059 = @func_5123() /* ty=(Tensor[(11, 12, 2), uint16],) */;
    %1059.0
  };
  %1060() /* ty=Tensor[(11, 12, 2), uint16] */
}

def @func_6301() -> (Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) {
  %1063 = fn () -> (Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) {
    %1061 = @func_5218() /* ty=Tensor[(16, 10, 11), float32] */;
    %1062 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
    (%1061, %1062)
  };
  %1063() /* ty=(Tensor[(16, 10, 11), float32], Tensor[(16, 10, 11), uint8]) */
}

def @func_10029() -> (Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float64]) {
  @func_10027() /* ty=(Tensor[(11, 12, 2), float32], Tensor[(11, 12, 2), float64]) */
}

def @func_9307() -> (Tensor[(120), float64], Tensor[(120), float64], Tensor[(11, 12, 2), float64]) {
  %1064 = cast(meta[relay.Constant][68] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1065 = reshape(%1064, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %1066 = @func_5776(%1065) /* ty=(Tensor[(11, 12, 2), float32], Tensor[(12, 5, 2), float64], Tensor[(120), float64], Tensor[(168), float32]) */;
  %1067 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
  %1068 = %1067.0;
  %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  %1070 = tan(%1069) /* ty=Tensor[(11, 12, 2), float32] */;
  %1071 = @func_7022() /* ty=(Tensor[(11, 12, 2), bool],) */;
  %1072 = %1071.0;
  %1073 = cast(%1072, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %1074 = shape_of(%1070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%1070, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1077 = %1066.2;
  %1078 = floor_mod(%1075, %1076) /* ty=Tensor[(11, 12, 2), float64] */;
  (%1077, meta[relay.Constant][68] /* ty=Tensor[(120), float64] */, %1078)
}

def @func_11306(%var_11304: Tensor[(96), float64]) -> (Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(16, 10, 11), float64]) {
  @func_11303(%var_11304) /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), float32], Tensor[(96), float64], Tensor[(16, 10, 11), float64]) */
}

def @func_11050() -> (Tensor[(11, 5, 3), bool],) {
  %1081 = fn () -> (Tensor[(11, 5, 3), bool],) {
    %1079 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
    %1080 = %1079.1;
    (%1080,)
  };
  %1081() /* ty=(Tensor[(11, 5, 3), bool],) */
}

def @func_13112(%var_13088: Tensor[(63), float64]) -> (Tensor[(16, 10, 11), float64], Tensor[(63), float64], Tensor[(16, 10, 11), float64], Tensor[(3, 3, 7), float32]) {
  %1082 = @func_5517() /* ty=(Tensor[(16, 10, 11), float64],) */;
  %1083 = cast(%var_13088, dtype="float64") /* ty=Tensor[(63), float64] */;
  %1084 = reshape(%1083, newshape=[3, 3, 7]) /* ty=Tensor[(3, 3, 7), float64] */;
  %1085 = @func_11356(%1084) /* ty=(Tensor[(3, 3, 7), float64],) */;
  %1086 = %1085.0;
  %1087 = cast(%1086, dtype="float32") /* ty=Tensor[(3, 3, 7), float32] */;
  %1088 = @func_8557() /* ty=Tensor[(16, 10, 11), float64] */;
  %1089 = %1082.0;
  %1090 = erf(%1087) /* ty=Tensor[(3, 3, 7), float32] */;
  (%1088, %var_13088, %1089, %1090)
}

def @func_8846() -> (Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float64]) {
  %1094 = fn () -> (Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float64]) {
    %1091 = @func_5350() /* ty=(Tensor[(11, 1, 2), float64], Tensor[(11, 5, 3), bool], Tensor[(165), uint8]) */;
    %1092 = @func_6343() /* ty=Tensor[(16, 10, 11), float64] */;
    %1093 = %1091.0;
    (%1092, %1093)
  };
  %1094() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(11, 1, 2), float64]) */
}

def @func_11572(%var_11483: Tensor[(96), float64], %var_11489: Tensor[(11, 12, 2), uint16]) -> (Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), uint16], Tensor[(96), float64], Tensor[(11, 12, 2), uint32], Tensor[(11, 12, 2), bool], Tensor[(16, 10, 11), float32], Tensor[(11, 12, 2), uint16], Tensor[(16, 10, 11), uint8]) {
  %1095 = cast(%var_11483, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1096 = reshape(%1095, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %1097 = @func_9846(%1096) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(4, 16, 2), bool], Tensor[(96), float64]) */;
  %1098 = @func_7954() /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) */;
  %1099 = %1098.1;
  %1100 = cast(%var_11489, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
  %1101 = shape_of(%1099, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1102 = cast(%1099, dtype="uint32") /* ty=Tensor[(11, 12, 2), uint32] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1104 = @func_7954() /* ty=(Tensor[(11, 12, 2), bool], Tensor[(11, 12, 2), uint16]) */;
  %1105 = @func_8857() /* ty=(Tensor[(16, 10, 11), float32],) */;
  %1106 = @func_7793() /* ty=Tensor[(16, 10, 11), float32] */;
  %1107 = %1097.0;
  %1108 = bitwise_or(%1102, %1103) /* ty=Tensor[(11, 12, 2), uint32] */;
  %1109 = %1104.0;
  %1110 = %1105.0;
  %1111 = @func_8153() /* ty=Tensor[(11, 12, 2), uint16] */;
  %1112 = @func_6216() /* ty=Tensor[(16, 10, 11), uint8] */;
  (%1106, %1107, %var_11483, %1108, %1109, %1110, %1111, %1112)
}

def @func_10992() -> Tensor[(11, 12, 2), float64] {
  %1113 = @func_7872() /* ty=(Tensor[(11, 12, 2), float64], Tensor[(16, 10, 11), float32]) */;
  %1113.0
}

def @func_6217() -> Tensor[(16, 10, 11), uint8] {
  %1115 = fn () -> Tensor[(16, 10, 11), uint8] {
    %1114 = @func_6194() /* ty=(Tensor[(16, 10, 11), float64], Tensor[(16, 10, 11), uint8]) */;
    %1114.1
  };
  %1115() /* ty=Tensor[(16, 10, 11), uint8] */
}

def @func_9378(%var_9377: Tensor[(9, 5, 8), float64]) -> (Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(9, 5, 8), float64]) {
  %1134 = fn (%var_9325: Tensor[(9, 5, 8), float64]) -> (Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(9, 5, 8), float64]) {
    %1116 = cast(meta[relay.Constant][69] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1117 = reshape(%1116, newshape=[1, 168]) /* ty=Tensor[(1, 168), float32] */;
    %1118 = @func_4901(%1117) /* ty=(Tensor[(11, 1, 2), float32], Tensor[(14, 3, 4), float32], Tensor[(120), float64], Tensor[(1, 168), float32]) */;
    %1119 = cast(%var_9325, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
    %1120 = asinh(%1119) /* ty=Tensor[(9, 5, 8), float64] */;
    %1121 = cast(%var_9325, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
    %1122 = rsqrt(%1121) /* ty=Tensor[(9, 5, 8), float64] */;
    %1123 = cast(%1122, dtype="int16") /* ty=Tensor[(9, 5, 8), int16] */;
    %1124 = shape_of(%1120, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1125 = cast(%1120, dtype="int16") /* ty=Tensor[(9, 5, 8), int16] */;
    %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1127 = multiply(%1125, %1126) /* ty=Tensor[(9, 5, 8), int16] */;
    %1128 = cast(%1122, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
    %1129 = shape_of(%1127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1130 = cast(%1127, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
    %1131 = dyn.reshape(%1128, %1129, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1132 = %1118.1;
    %1133 = maximum(%1130, %1131) /* ty=Tensor[(9, 5, 8), float64] */;
    (%1132, meta[relay.Constant][69] /* ty=Tensor[(168), float32] */, %1133)
  };
  %1134(%var_9377) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(9, 5, 8), float64]) */
}

def @func_7748(%var_7746: Tensor[(16, 10, 11), float64], %var_7747: Tensor[(168), float32]) -> (Tensor[(16, 10, 11), float32], Tensor[(22), float32], Tensor[(22), float32], Tensor[(11, 12, 2), bool], Tensor[(16, 10, 11), float32], Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(1536), float64], Tensor[(1, 1536), float64]) {
  %1167 = fn (%var_7648: Tensor[(16, 10, 11), float64], %var_7717: Tensor[(168), float32]) -> (Tensor[(16, 10, 11), float32], Tensor[(22), float32], Tensor[(22), float32], Tensor[(11, 12, 2), bool], Tensor[(16, 10, 11), float32], Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(1536), float64], Tensor[(1, 1536), float64]) {
    %1135 = @func_5040() /* ty=(Tensor[(16, 10, 11), float64],) */;
    %1136 = %1135.0;
    %1137 = cast(%1136, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %1138 = shape_of(%var_7648, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1139 = cast(%var_7648, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1141 = cast(meta[relay.Constant][70] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
    %1142 = reshape(%1141, newshape=[22]) /* ty=Tensor[(22), float32] */;
    %1143 = @func_5180(%1142) /* ty=(Tensor[(11, 12, 2), uint16], Tensor[(11, 1, 2), float32], Tensor[(165, 1), uint8], Tensor[(22), float32]) */;
    %1144 = @func_5564() /* ty=(Tensor[(11, 12, 2), uint16],) */;
    %1145 = %1144.0;
    %1146 = cast(meta[relay.Constant][71] /* ty=Tensor[(11, 12, 2), uint16] */, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
    %1147 = shape_of(%1145, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1148 = cast(%1145, dtype="bool") /* ty=Tensor[(11, 12, 2), bool] */;
    %1149 = dyn.reshape(%1146, %1147, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1150 = cast(%var_7648, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %1151 = shape_of(%1136, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1152 = cast(%1136, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %1153 = dyn.reshape(%1150, %1151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1154 = equal(%1152, %1153) /* ty=Tensor[(16, 10, 11), bool] */;
    %1155 = cast(%1154, dtype="float32") /* ty=Tensor[(16, 10, 11), float32] */;
    %1156 = cast(%var_7717, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1157 = reshape(%1156, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float32] */;
    %1158 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 1536), float64] */, dtype="float64") /* ty=Tensor[(1, 1536), float64] */;
    %1159 = reshape(%1158, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
    %1160 = @func_6168(%1159) /* ty=(Tensor[(11, 5, 3), bool], Tensor[(16, 12, 8), float64], Tensor[(1536), float64]) */;
    %1161 = divide(%1139, %1140) /* ty=Tensor[(16, 10, 11), float32] */;
    %1162 = %1143.3;
    %1163 = greater(%1148, %1149) /* ty=Tensor[(11, 12, 2), bool] */;
    %1164 = cosh(%1155) /* ty=Tensor[(16, 10, 11), float32] */;
    %1165 = @func_2043(%1157) /* ty=Tensor[(14, 3, 4), float32] */;
    %1166 = %1160.2;
    (%1161, %1162, meta[relay.Constant][70] /* ty=Tensor[(22), float32] */, %1163, %1164, %1165, %var_7717, %1166, meta[relay.Constant][72] /* ty=Tensor[(1, 1536), float64] */)
  };
  %1167(%var_7746, %var_7747) /* ty=(Tensor[(16, 10, 11), float32], Tensor[(22), float32], Tensor[(22), float32], Tensor[(11, 12, 2), bool], Tensor[(16, 10, 11), float32], Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(1536), float64], Tensor[(1, 1536), float64]) */
}

def @func_13650(%var_13647: Tensor[(385), float32], %var_13648: Tensor[(385), float64], %var_13649: Tensor[(672), float32]) -> (Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(385), float32], Tensor[(6, 7, 16), float32], Tensor[(672), float32]) {
  @func_13645(%var_13647, %var_13648, %var_13649) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(168), float32], Tensor[(385), float32], Tensor[(6, 7, 16), float32], Tensor[(672), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen726/build/output.py:3506: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen726/build/output.py", line 3511, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(432) tvmgen_default_fused_multiply_kernel0(int64_t* __restrict__ T_multiply, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_multiply[(((int)threadIdx.x))] = (placeholder[((((((int)threadIdx.x) / 144) * 16) + (((int)threadIdx.x) & 15)))] * placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


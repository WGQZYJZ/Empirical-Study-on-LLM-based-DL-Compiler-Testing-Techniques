import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_14 = relay.const([[[-3.351939,3.155020,3.937107],[-5.109977,-0.589809,0.153791],[-3.807783,-6.492340,6.662554],[-3.850096,4.607098,-3.978378],[4.125585,-7.972252,-0.213532],[-5.635543,7.693916,6.307149]],[[-2.358177,4.528297,7.345640],[-9.072939,-5.515871,1.542359],[5.770276,3.844798,8.610444],[-8.518225,1.480685,1.323212],[9.786261,-2.276259,9.927833],[7.276000,1.707049,-0.325303]],[[3.253402,-8.267823,-6.606338],[-4.828966,-7.621185,-4.020896],[4.575356,-1.478053,0.746448],[-9.841554,1.280897,-0.014894],[-7.549002,-4.237955,-9.398328],[-8.198648,8.354006,-6.494614]],[[9.428541,9.519821,-4.285698],[7.055537,0.446682,-5.343531],[5.363418,9.772020,8.681562],[4.343986,5.173340,2.119850],[9.997685,9.823734,7.726222],[-9.591885,-2.596264,-4.413793]],[[8.533137,-0.117849,3.736263],[2.787164,4.719498,3.138158],[-6.008468,3.582229,-4.703281],[-6.071129,-6.557986,-7.122559],[8.367000,-1.012033,-3.919788],[-9.508578,-7.411489,-3.361326]],[[-7.912346,-8.785874,-7.873920],[-6.633773,7.179898,-2.076027],[1.164406,9.096155,0.027437],[0.094150,-1.308643,-8.465297],[-3.582550,-2.856236,-1.083463],[-9.137081,-8.801654,-3.835796]],[[-9.221728,-3.609372,-3.758581],[8.390867,8.264512,-0.695266],[-0.013477,3.341387,8.559234],[7.222157,-7.503377,9.279534],[5.359614,0.799155,-7.524209],[-5.104824,3.599175,-3.653381]],[[-5.374147,4.046919,-8.926887],[-4.293187,8.986097,4.868929],[1.561944,-2.825182,-7.162312],[-0.759487,9.350538,-6.098993],[-4.729612,-3.692035,9.549520],[6.319933,-1.482212,6.194954]]], dtype = "float32")#candidate|14|(8, 6, 3)|const|float32
uop_15 = relay.atanh(const_14.astype('float32')) # shape=(8, 6, 3)
bop_25 = relay.logical_xor(uop_15.astype('int16'), relay.reshape(const_14.astype('int16'), relay.shape_of(uop_15))) # shape=(8, 6, 3)
uop_29 = relay.sqrt(bop_25.astype('float32')) # shape=(8, 6, 3)
bop_38 = relay.logical_or(uop_15.astype('bool'), relay.reshape(uop_29.astype('bool'), relay.shape_of(uop_15))) # shape=(8, 6, 3)
output = relay.Tuple([bop_38,])
output2 = relay.Tuple([bop_38,])
func_43 = relay.Function([], output)
mod['func_43'] = func_43
mod = relay.transform.InferType()(mod)
output = func_43()
func_44 = relay.Function([], output)
mutated_mod['func_44'] = func_44
mutated_mod = relay.transform.InferType()(mutated_mod)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_65 = relay.TupleGetItem(func_43_call(), 0)
call_66 = relay.TupleGetItem(func_44_call(), 0)
output = relay.Tuple([call_65,])
output2 = relay.Tuple([call_66,])
func_67 = relay.Function([], output)
mod['func_67'] = func_67
mod = relay.transform.InferType()(mod)
output = func_67()
func_68 = relay.Function([], output)
mutated_mod['func_68'] = func_68
mutated_mod = relay.transform.InferType()(mutated_mod)
var_92 = relay.var("var_92", dtype = "float32", shape = (12, 14, 7))#candidate|92|(12, 14, 7)|var|float32
uop_93 = relay.acos(var_92.astype('float32')) # shape=(12, 14, 7)
const_99 = relay.const([[[9.278424,2.900385,7.793263,-9.558248,4.286365,1.004074,3.478983],[-4.783191,-6.371809,7.883082,-3.246949,-9.439053,7.794054,5.314660],[9.738897,-8.223865,-8.446674,3.672263,4.101452,3.736962,-9.002118],[-9.314966,6.065632,-0.789224,4.224536,-6.394137,0.151275,3.496861],[-7.333806,6.707027,-2.200535,-1.095479,0.652406,-7.528216,3.889853],[-8.903906,-0.443400,6.108191,5.188794,3.957610,4.684599,-5.193088],[0.401325,-1.772926,-4.698487,8.885319,4.972149,-9.899804,6.307146],[0.148909,-3.727197,-0.523398,-0.200333,-1.441734,8.333010,-3.731244],[4.291145,1.207962,8.478943,-4.518609,-4.793434,-2.308384,4.125746],[-8.224599,7.614937,-5.957256,0.749333,-3.503930,-2.086425,9.586004],[9.987946,7.309425,-3.724201,8.934882,-0.812789,-6.449662,1.821028],[-1.860006,3.267124,-0.367206,-7.132149,-5.027762,9.542227,-8.577206],[0.265479,-8.316495,1.748252,-6.497737,-1.039517,0.309618,0.657321],[2.227165,-7.334458,-0.427628,7.326226,-1.372531,3.225344,5.806510]],[[-8.609670,-7.153842,-2.728796,-1.584545,-9.657028,1.296631,-6.626537],[7.552055,-3.976594,-0.899160,-8.414603,-4.408327,1.137461,-6.104870],[3.000022,-1.825678,3.517581,-0.664360,8.327328,0.483098,5.401154],[-6.268858,-4.967929,5.777816,3.851740,9.500997,-5.661787,8.161865],[1.272973,-6.680993,7.118309,-6.303023,-5.334216,-3.591847,7.748735],[8.250057,1.421104,-6.757592,-4.370550,-0.614636,4.057676,1.481366],[-5.978510,-1.131188,-7.579166,-4.386753,2.909279,-2.565036,3.712225],[0.205740,7.431006,3.117296,-2.785105,-8.071926,-3.264593,-9.891995],[-4.433029,3.069129,-4.046852,-8.829582,0.553692,4.416818,7.165811],[-2.283885,-9.881315,9.557944,-2.011893,-3.564755,-8.416157,9.798973],[-0.371248,7.944228,-6.011488,0.227807,-0.782305,9.227034,-8.943002],[-4.608945,4.759589,1.696079,-3.541724,6.401221,6.544135,5.208917],[-5.442273,-8.260799,8.501014,1.002257,3.129454,-1.971014,2.987403],[9.946409,-4.544495,4.280321,-4.278172,-9.989961,-3.371409,6.502233]],[[8.044058,4.241385,-9.515784,-1.000301,5.534755,5.990004,-3.494018],[-1.091079,7.368763,-4.157937,5.785973,3.317472,-1.344812,-9.627270],[7.929312,-2.452270,1.667243,-4.963843,-3.539085,6.449126,9.748070],[-2.904935,-6.367604,7.497974,-4.326609,-4.121111,2.847376,1.118048],[1.759286,-1.618466,2.707723,4.481611,7.493957,-3.795080,2.137516],[1.166987,-9.040677,-1.822550,6.034215,4.202636,1.571936,3.502251],[0.661994,-5.134322,4.983865,-5.790511,-6.415414,8.234739,0.823671],[4.324239,4.676222,1.776678,-7.003547,-4.237066,6.143638,2.800815],[8.124005,-2.455459,5.872604,7.466213,9.771343,6.239935,-1.735964],[5.260680,5.098832,-4.018584,-0.565694,-9.341499,2.032399,-1.798144],[-4.713552,-1.089194,-3.805308,8.736496,5.015051,-2.674146,-4.048131],[-7.482638,-6.224046,-2.292250,-0.971060,-0.456652,4.498270,7.425463],[-7.930621,1.018685,9.595045,-3.650588,-2.183739,8.239700,2.099883],[5.492900,-2.253190,-1.480525,8.665687,-1.115888,3.405748,-9.632303]],[[5.094315,3.396980,1.615717,5.779686,-8.327380,3.118853,9.551080],[8.647155,-2.877341,-7.139813,-8.967432,-2.011628,7.512621,-8.754621],[3.369375,3.648431,-3.693139,-5.490776,-8.531691,7.971079,-8.688470],[3.097003,8.273883,-2.937519,3.254230,-8.200415,1.450149,-3.205600],[3.709264,2.061484,3.111864,-3.887973,4.659658,-1.613112,-4.911852],[7.504290,-1.150169,-1.777260,5.476455,5.949542,2.072478,-9.308790],[-7.756387,8.129979,9.040341,0.711140,-4.870377,2.204179,-8.382990],[2.084387,5.244875,3.332920,0.508216,4.258199,-6.516672,-9.490098],[0.086337,-9.692991,4.276139,8.983457,-8.028100,7.413685,-2.710397],[7.230426,-1.349624,2.938648,3.991875,0.620311,-5.766120,6.071546],[-8.995261,-5.472107,-4.035637,6.593504,6.876553,2.382416,5.089792],[-8.877957,3.287073,0.861440,-1.636702,6.447988,8.239854,-7.114589],[3.518901,7.373438,1.753944,1.800778,-4.826309,5.969360,-0.207816],[-5.402487,-8.110015,9.084538,-9.619506,4.053160,-4.073715,-7.356847]],[[-3.542022,5.350514,-7.119630,8.323513,5.628752,1.366838,0.680113],[8.556013,8.260628,-8.416956,-2.207278,6.087497,-5.907022,6.052958],[7.278760,-3.141337,-7.797993,-7.087018,-3.605056,1.284426,-8.510853],[-7.820903,0.571745,5.436280,9.890444,-8.146572,-2.426302,-5.491551],[5.884987,3.062206,7.032847,-0.085432,7.873708,-7.489427,-0.580533],[4.872181,-5.186423,-9.168873,1.432693,7.573282,9.536126,-4.320080],[6.168257,-2.532665,-5.857008,-9.108849,-3.129914,-6.646821,3.363669],[7.249632,-4.959315,-9.296938,-7.808880,-7.213546,9.987992,-2.950288],[-1.310463,-1.726817,6.467508,-6.462527,-2.931213,1.250447,9.762249],[-1.448272,-0.565366,-3.540092,8.678705,-5.060503,0.983615,2.830426],[-5.988030,-0.910021,4.705426,-1.536008,5.652806,-3.066237,0.469720],[-7.449559,8.243359,6.890553,7.493429,-6.456025,2.713556,-4.837544],[-7.640258,7.330118,-8.180302,3.887898,-9.192437,-4.036742,-3.423105],[9.141124,3.183571,-3.628637,-4.044759,-0.011547,1.957481,-1.950259]],[[9.029548,8.603812,4.716502,-4.347437,-5.901212,7.181696,-7.380306],[2.478306,-4.472184,-5.943621,-0.289951,2.911726,9.697061,-0.030709],[-8.603847,8.301619,-7.335891,8.470029,2.882069,8.033788,8.091844],[-7.999480,-0.065487,-8.343189,-1.818154,-2.139612,8.809548,1.930812],[-6.460669,0.857487,7.383022,-2.380721,-0.147470,0.910889,-1.929323],[6.156114,3.618303,2.871335,6.262907,-1.775818,-5.542112,7.606611],[-8.490696,-6.884131,-6.886956,-0.343629,-8.032323,9.051545,-9.648753],[-0.498963,9.091446,1.517887,2.891033,0.294347,-3.763130,-4.168543],[-2.302732,8.854003,4.826743,0.174845,4.838919,2.033123,6.194429],[-0.807127,4.961364,-0.182507,2.177813,6.903462,-9.370225,8.973788],[-3.441857,0.729505,7.303911,-2.981054,4.363171,2.710090,6.343703],[-4.090619,2.181727,-7.332967,-2.836436,-3.537985,-3.777756,-5.787862],[-7.423971,-8.366678,-5.652580,0.505132,-1.804754,-0.364950,-5.897216],[-3.900999,-5.503771,-3.661539,-3.175825,-0.104154,5.133570,-8.531262]],[[-6.726116,-7.874695,-6.849120,5.687283,-1.978291,3.635679,-0.931254],[-7.017805,9.911554,-4.624637,-5.159798,0.380547,-8.115313,1.611296],[-4.835208,9.390587,-4.786375,2.839858,-2.528890,2.775698,-6.802952],[7.550965,-8.035801,5.575051,9.071228,5.899506,-2.995349,-8.117709],[-3.633147,-1.399847,8.023946,2.187996,8.573447,-9.230434,-5.111561],[-5.564758,-0.133720,1.944434,-2.842144,-3.559543,3.820298,6.151097],[3.898886,-6.758063,8.840431,-3.520030,-0.353212,-5.592791,5.180964],[-5.439775,7.414343,-0.056118,-8.305263,-3.709064,-6.558369,-9.185749],[3.416511,4.180117,8.511301,-3.432985,-2.785183,8.760119,4.570784],[-0.174310,7.750564,-6.194697,5.027737,-2.757921,-9.722913,-0.719786],[-2.181487,-3.832539,-5.954767,-2.119955,1.808737,-1.055112,3.064302],[1.172231,-7.749116,3.074254,-6.636858,-2.321901,-4.656579,9.745945],[8.997880,6.628451,9.663587,7.897480,4.737780,9.876066,0.661942],[-3.976461,-0.838298,4.431671,0.145596,-7.102684,-7.190090,-7.656189]],[[5.872342,6.489208,8.259918,-4.849907,8.319700,8.691589,1.951011],[1.297101,-8.708833,-0.467701,6.935049,4.540380,-0.697835,-6.193736],[-0.684291,-7.932501,0.790148,0.597523,-0.002614,7.211647,0.493051],[9.051651,2.219244,9.331446,-7.235240,-9.037508,2.455805,5.738989],[0.904494,-1.742916,-3.523711,-6.043228,2.815795,-9.404958,3.443782],[9.566156,-8.353029,-8.575035,6.364474,-4.184888,7.865374,-5.551549],[-4.712248,-1.538083,0.408032,-5.456326,7.141032,4.907206,-3.199254],[3.454581,1.353266,-9.111760,1.159431,-2.413335,3.777447,-9.704751],[3.783498,7.536029,-8.763013,-2.698374,2.284737,5.399093,3.535223],[7.140970,0.316377,7.372664,4.409002,-2.812264,-4.556618,6.963833],[4.856177,-6.346811,-2.647742,9.814096,-0.225690,4.026579,-1.590956],[-5.206915,7.067434,4.648756,-1.503004,-2.177452,-4.025255,-2.343587],[4.869573,-5.574635,-4.587830,6.305978,3.846625,7.351320,-1.583948],[3.876898,-6.364972,-2.185759,6.377758,-9.989412,0.593672,3.797525]],[[1.365191,-4.050463,7.059380,-5.057502,-5.852711,8.051035,-2.389749],[4.841914,5.424941,9.573590,-0.135566,2.078424,7.945293,-7.164057],[-6.669557,-2.513321,8.501938,-7.922449,-0.394650,-8.786666,3.937703],[-2.204440,9.505042,-4.928233,-4.788720,-5.733206,-6.850310,-3.033790],[3.115550,-8.484393,-4.890567,3.532460,9.734850,-1.746707,-7.891036],[-7.181986,-0.136852,3.425750,-3.818853,-4.992408,4.600381,-1.189637],[0.412348,0.312983,8.909592,-4.148594,1.279921,4.422265,-8.360326],[-6.828817,2.929495,-1.310757,3.130131,3.588748,9.260300,-1.319063],[-5.452011,-1.141746,6.520812,-6.586085,3.876334,-9.294751,-0.435502],[-7.791771,7.396158,-5.901969,9.930471,4.575130,-3.334236,2.262492],[-7.533077,7.231597,-3.469328,-1.572088,9.250847,-9.231860,-4.027633],[6.288042,-8.999823,0.066658,-3.125328,-6.191950,-2.824367,-0.721857],[-5.521326,-1.030677,1.479018,1.137006,-0.761668,7.566706,-3.055764],[-2.415802,-8.875333,-5.567224,8.774743,2.763219,7.865293,-9.319947]],[[6.672689,-1.823071,-6.874417,-5.303300,-0.888223,9.894655,-0.133633],[7.773035,-0.234248,6.455712,9.476025,1.137577,4.393495,9.451470],[3.076081,-5.094337,-0.697949,-3.056774,1.453386,3.258272,9.631166],[-3.038410,6.960357,-7.732333,-0.007700,8.129683,4.496430,-8.777648],[3.999649,7.113362,6.889137,9.687604,8.361256,-2.993135,-0.125264],[-9.830665,-4.695874,4.712292,-7.046249,4.122394,5.193753,7.777306],[-4.741924,6.922854,6.571241,-5.842491,-7.393484,-0.993722,2.281239],[6.185000,-6.196467,2.293038,-1.070803,9.195314,9.809644,9.413271],[5.743673,5.823458,5.899337,7.484313,-1.730926,4.116852,0.722683],[-6.297764,7.866120,-5.707260,1.398710,-4.596530,6.005026,1.377036],[7.246725,8.790687,2.149755,-1.712575,-4.191249,4.899502,4.857082],[7.683870,-2.087853,2.483967,1.514254,-5.794249,-8.457265,6.002435],[-2.314573,-5.390299,5.279751,-7.973933,-4.558837,4.573133,-8.805207],[1.910131,-5.004188,-6.010793,-9.480606,-1.665554,1.300376,7.367575]],[[6.335932,7.013381,4.574460,6.232527,-9.624796,1.219962,-1.455640],[5.858724,9.480551,-3.102025,8.512914,-6.460868,7.047145,-8.221808],[5.080842,-5.122678,-2.395271,-4.221377,1.719959,-8.913311,4.021495],[-9.852863,3.648652,-9.925601,8.923895,-1.137731,0.118049,-1.201176],[9.995600,-1.434014,-2.849717,1.890011,-2.362040,-4.738839,-9.720197],[6.690422,-1.561143,6.100622,0.117606,-2.733186,8.228471,-3.557948],[-6.154570,4.024628,0.420914,-1.963547,-5.475347,-3.852602,-8.233982],[-5.684025,1.577403,-7.361306,9.413226,3.738887,-5.703929,6.153949],[-8.793057,-8.599654,8.798850,-6.459477,6.562346,-2.568904,5.909854],[1.235930,-6.535732,-6.958497,7.286404,8.198852,-6.306503,-5.321524],[4.877871,-8.203969,8.436918,-6.966302,-2.336502,9.929965,3.094976],[2.405603,-3.088838,-5.967691,-2.517064,-4.905217,-0.528810,3.060326],[9.053853,1.786629,8.765546,-0.290954,-3.092528,4.308601,-0.149193],[2.197134,3.250745,-3.740580,4.873649,-3.204997,5.994156,1.328354]],[[-4.735744,-4.030329,-5.153314,-3.161697,-4.361790,-9.992100,6.511811],[0.423825,-5.336096,-1.970964,-7.366823,4.368954,6.356323,9.624802],[7.183780,-1.564336,7.515984,3.272424,-9.038762,-8.924035,-7.932493],[-3.220854,-9.797985,7.802975,-6.502627,-7.923189,-5.679531,-8.527103],[7.471511,-7.507249,-7.294046,4.514213,-5.337332,-4.201953,-3.884023],[7.484400,3.867472,5.349394,3.224769,5.341667,-0.879478,-4.692206],[6.901282,-0.903545,3.551856,1.667534,-8.375106,9.298639,8.010579],[8.283149,-5.247142,9.371640,-2.002376,-2.584260,1.280957,8.869950],[9.847484,6.090949,-4.282004,-7.817296,-1.664812,-5.418026,-2.625926],[7.945364,1.974331,4.862862,0.321109,8.684241,6.600750,-1.976847],[2.168414,-2.369007,0.056523,-4.065918,-4.833994,6.359212,-4.964750],[9.397152,-2.251249,7.247486,0.254246,2.968706,3.646840,6.508222],[-7.996938,1.276323,5.678332,9.651017,6.688701,2.911179,-5.762077],[1.727900,-3.172407,6.394115,3.247527,-8.124861,7.455137,-6.586922]]], dtype = "float32")#candidate|99|(12, 14, 7)|const|float32
bop_100 = relay.not_equal(var_92.astype('bool'), relay.reshape(const_99.astype('bool'), relay.shape_of(var_92))) # shape=(12, 14, 7)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_105 = relay.TupleGetItem(func_43_call(), 0)
call_106 = relay.TupleGetItem(func_44_call(), 0)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_112 = relay.TupleGetItem(func_43_call(), 0)
call_113 = relay.TupleGetItem(func_44_call(), 0)
const_118 = relay.const([[[7.071560,0.042251,1.762576,6.868563,-7.170815,9.006478,-2.841443],[-4.576964,8.289569,3.695544,0.866091,3.037469,-4.035284,-2.779329],[-6.938323,2.665212,7.867725,9.998032,6.374391,-4.903682,2.432467],[-1.870072,-2.979543,-5.254909,-4.948650,-0.698663,7.055276,1.776171],[-3.685761,-8.306779,8.734050,-2.206477,-1.912214,-9.594427,5.106439],[-6.604686,-7.305392,-3.365304,9.095318,2.702365,-2.294570,2.431851],[0.351888,0.176621,6.661476,-0.893439,8.743357,1.783503,-8.820845],[6.081922,-1.862200,7.335047,-4.594718,-0.873227,-2.480734,3.543640],[9.912597,1.087146,-0.486080,-9.702273,-4.463648,-8.243074,-0.191464],[-3.460730,7.789082,-6.253295,0.729095,8.122644,0.459063,8.270080],[3.400185,-5.603494,-9.751900,1.181666,-6.283663,-1.374558,7.127312],[-9.009307,-0.277626,-5.054227,-1.322079,-4.305818,-7.366514,8.202621],[5.932286,-9.203403,6.745594,0.552295,-9.781251,-3.623699,-6.601300],[9.323252,-1.644804,8.376054,-9.570411,-2.308359,-9.822848,-3.416222]],[[-6.843842,-3.942559,5.917160,-1.666616,5.725959,-5.546055,6.489478],[-8.723188,2.018084,9.525393,0.413920,-7.593451,-0.795740,-6.035713],[9.083114,-0.828657,-2.577837,9.035567,4.843661,0.600459,8.882729],[-7.914554,-5.215137,2.537560,-3.817682,3.101485,5.106854,-6.481812],[6.082395,3.318142,0.494490,-3.760864,-6.092214,6.245519,-5.006008],[5.034175,-4.112420,-5.811654,-0.308604,-8.129105,-0.586933,3.735211],[-6.258862,1.920462,-3.898269,-7.333920,-5.590630,-3.812364,6.064868],[-2.573235,-6.204546,0.882086,3.798371,9.121860,4.607899,5.168409],[-2.118618,-1.881453,-2.592766,-8.717211,-4.798000,-2.214438,2.448738],[2.574018,7.718476,-4.448484,1.939828,-0.449643,6.148634,4.294600],[-9.482438,-3.576167,9.276298,8.695139,2.290132,-9.361680,-1.357263],[-8.847793,5.957194,-6.630821,-1.385497,-1.278094,7.226777,-4.314905],[7.973879,1.762112,-7.989579,-5.180130,-1.265979,9.901840,8.688405],[6.012358,7.802752,9.705694,-5.863439,9.300605,7.584756,-6.670969]],[[-4.977059,3.168785,-2.213328,3.251096,6.481931,-6.092589,0.137155],[6.834735,-2.685123,2.901272,-9.734938,-5.116565,-3.365777,5.794900],[-8.255767,-2.334504,1.611833,-2.115269,8.777644,-2.506146,0.081524],[-6.658986,3.795315,1.450684,9.943542,8.116234,1.350288,-7.296058],[9.856596,4.761176,0.989254,-9.502766,-1.076703,0.523163,4.837944],[-1.809859,-7.952566,4.163732,-3.392784,2.437888,5.464916,4.605438],[6.500114,0.871634,-4.549900,-2.812196,-2.821830,-7.186295,0.996396],[-1.277246,5.200192,6.435792,-5.280568,4.503594,7.099366,-3.211790],[8.049077,9.678967,2.275455,4.578255,-0.028843,2.071227,9.242724],[4.813003,0.985742,9.224425,-7.811210,0.879905,1.232688,9.533437],[1.750540,-5.929783,8.054041,7.027662,-1.748602,-3.327697,-2.502603],[6.854749,0.675741,-4.820576,8.396396,-1.944353,-7.351555,-3.234581],[-9.349169,-3.416565,1.039141,4.316520,3.955605,2.837884,0.588163],[-5.847655,1.354569,9.194340,-2.925944,-2.853583,6.158444,4.015015]],[[-5.027663,-0.729742,4.617355,-2.115985,7.420969,0.275021,9.146893],[-0.097307,7.215671,-2.756509,-7.283199,9.714671,-0.898476,-1.175195],[-1.560718,0.015988,5.862810,-8.305688,7.446163,2.755262,-7.028650],[6.304334,5.541306,-3.216535,-2.470757,-0.587538,6.003001,3.417459],[5.325752,7.781043,7.440296,-2.896164,-9.143941,5.137025,1.764857],[-4.098963,5.424067,6.849839,3.194631,0.991241,4.270534,7.685660],[-1.957400,-8.134603,-6.049206,6.415233,-8.855522,1.756010,-5.734924],[-1.424141,3.868541,6.900677,-8.204919,-1.287344,7.197187,3.598118],[4.960221,4.637101,2.317442,3.324649,7.623191,3.404422,-9.069351],[4.138042,6.657961,-8.098837,-6.343518,-7.694241,8.150670,7.917415],[-3.403370,7.038637,2.191346,0.945174,-2.055906,-9.450409,-8.383081],[0.330293,-3.810406,3.622132,9.286449,1.626148,-2.951930,-3.583503],[-2.868549,-4.370874,3.820005,-2.370142,-0.029802,2.718328,-4.069583],[-1.154620,-4.981477,1.781385,-6.188223,-6.476135,-1.864747,-1.558773]],[[1.126414,-0.793704,-7.374519,7.892271,-4.713125,-4.469948,4.042816],[8.600777,9.480196,-6.167565,-4.766375,1.987614,4.254014,-8.290109],[7.929313,-9.824147,5.890539,-8.624265,9.628806,5.436551,9.646826],[-2.483873,-5.703926,-0.677042,4.270607,2.184052,-4.443466,8.031957],[-1.184015,8.427443,-8.104339,7.622587,7.226797,4.012622,8.950392],[-0.668294,-4.466380,6.558336,6.000008,-7.348783,2.690539,-8.845350],[-2.332282,5.029000,2.450028,-9.913994,-2.066771,5.571662,9.877011],[-7.844928,-7.017271,9.543856,1.364221,9.257679,-8.055216,7.902857],[0.191047,9.799910,4.109881,-9.756612,-4.465968,-5.857349,-5.661287],[-4.219079,-1.063693,-5.949178,5.097819,9.559057,2.699730,3.092889],[1.753367,7.925133,-4.169825,-2.098166,4.253012,-9.580183,-9.155760],[-9.208374,5.760375,-7.438447,3.065942,-7.501806,9.232142,1.237727],[-3.141019,-5.206448,1.486416,-1.898757,1.016048,-1.095713,9.338286],[-7.655481,9.446480,8.977770,3.480273,5.303480,-3.582898,1.170799]],[[2.866493,-3.735671,-7.450268,6.751077,-5.521129,3.841453,9.154031],[-3.008141,5.593901,-5.769573,4.062177,8.295775,4.893753,8.433986],[-3.263709,4.144481,1.170252,8.947353,0.202025,-1.645822,-1.460683],[8.302922,4.135357,-2.528608,-6.454864,1.733430,-9.274466,-5.296525],[8.040851,-5.530458,-3.933044,-4.753830,9.888575,5.994438,-8.857107],[3.895320,-5.121496,-0.099825,-6.958282,-5.606718,6.096679,3.262931],[-0.950387,-9.905785,5.232029,8.801537,-1.525131,-6.102447,2.085462],[-3.391090,3.348865,-7.888986,-7.470339,2.567513,2.106235,2.357854],[0.890721,0.360783,-9.251156,-7.368934,-6.183955,-7.588942,1.436957],[-3.287717,-9.086020,-1.838611,-2.228651,1.716695,-0.449587,-3.760375],[-9.337512,-2.558978,-9.160835,7.380523,0.672140,-8.109493,8.037884],[8.244029,7.471757,3.405088,-2.039622,6.850149,-0.847195,-3.927201],[5.110958,4.782467,-1.224551,-8.296951,1.960474,-9.121348,9.168249],[-7.143698,6.771264,2.058296,1.589487,-2.481000,-1.536059,3.462849]],[[3.470688,5.743871,-3.193513,-9.791589,5.820524,4.161050,8.654091],[6.852692,-8.090306,6.632071,7.009168,6.257598,-3.571493,9.951751],[8.951545,5.210133,-5.378133,-9.308444,0.988831,0.755575,3.773176],[2.720610,-7.495905,0.905675,-3.242412,-4.788390,8.365806,3.427604],[-5.803852,-6.182708,4.386935,-5.534586,7.414568,-0.089701,3.345868],[9.470682,-9.456303,6.710599,2.573146,0.941659,-4.547985,-3.320295],[8.481241,9.050773,-6.314589,-2.644818,3.713034,9.574279,2.473324],[-4.163485,4.614313,0.685110,-2.894052,6.782038,0.171248,-4.861029],[-8.646095,9.606161,-0.520026,5.503929,-6.432184,-4.631739,-0.758712],[-5.661366,2.684700,7.115516,-1.803490,-9.247104,3.013214,0.616188],[-1.015662,-4.352753,-4.151654,7.409421,-2.953849,3.078208,-4.543991],[2.908720,8.718246,-0.594928,-5.169525,6.995770,-6.946767,2.017345],[7.112222,-1.149851,-6.817606,5.941723,-1.638151,5.179787,1.989586],[8.233199,-9.584272,1.287374,4.140644,-9.053394,5.528588,-7.676162]],[[2.690529,3.717456,-2.787767,6.085184,0.758855,3.173322,6.579237],[-5.138776,6.634447,-9.727664,-6.396970,3.178636,4.944443,7.605703],[-5.367035,-9.770270,-8.432577,-4.246841,0.319618,3.371568,-9.521292],[-1.709369,-1.259266,8.563382,-0.483646,5.528318,3.852375,-5.497690],[8.989791,0.959836,-2.735550,1.715417,9.862333,3.573270,7.103505],[2.484361,-7.703447,4.558767,1.451568,-6.825525,-8.896350,-0.442647],[9.907079,-1.460897,2.679018,-0.328583,8.477314,-8.764414,0.133672],[5.698368,-3.742592,5.237227,-2.029470,3.046864,5.801019,-3.568647],[-1.466664,2.776782,7.172504,-9.938925,0.211425,-0.919143,-7.534958],[1.106220,1.829940,0.486567,-1.514239,-5.971152,0.707502,-9.059945],[1.681172,8.770941,9.858698,7.713005,-6.457864,0.904871,-6.617009],[6.680185,-6.313300,7.339013,6.509591,-8.110537,2.418636,3.837765],[-5.551590,8.522229,-8.059345,1.996245,7.726413,-1.172852,-2.224275],[8.547948,-8.346083,-2.447081,1.578491,-7.579036,-0.181954,-6.878881]],[[7.921618,-3.489806,4.441905,9.978963,-3.585644,-0.248864,-4.873411],[-4.601053,-5.676251,0.189250,-2.374268,-6.089505,4.169112,-4.825067],[5.733633,2.196094,-6.276011,-8.210454,1.732199,9.034076,4.710593],[6.623054,1.234495,-5.636485,2.416034,-9.294441,8.425338,-6.634271],[6.163157,-3.942771,5.570804,8.706553,-0.028859,-5.774407,8.712756],[1.461264,0.788877,-7.430838,-5.199801,-3.435352,5.597322,4.040300],[2.257200,6.759325,3.512219,1.989120,-4.494424,-9.974775,9.733680],[-5.659122,6.875524,3.346991,3.108283,0.920579,-1.107482,8.596721],[-8.632411,0.836695,-9.356377,-6.640861,-3.265293,2.148312,-7.063754],[5.802560,-1.071683,-7.266583,-7.756859,-6.416049,-3.848852,9.226231],[4.485736,-1.611193,-3.188288,-2.810855,-5.078375,-2.113891,-8.823359],[4.529148,4.509924,-5.366660,3.103628,2.009529,-9.455890,3.407492],[8.985995,-6.847786,2.819095,-8.777596,-9.571951,0.389498,8.446330],[8.932273,1.144538,-7.430375,-1.296210,-6.295236,-6.152826,1.845836]],[[7.765421,7.408423,5.540757,9.968980,-6.404002,-1.635120,-1.122129],[6.614736,4.247598,-2.583160,-9.130215,-2.242865,2.263710,-4.186839],[-3.180048,1.643393,-5.388139,1.868237,-5.927131,-2.294782,-4.824164],[6.267513,-4.151036,0.983769,8.090568,-9.044050,-7.552349,-8.063068],[2.904923,4.066431,-6.042553,1.792245,5.156120,9.164345,-7.166324],[-6.424484,-8.342889,3.267054,3.627382,8.199893,-6.911971,-2.635814],[-3.890803,0.311541,2.146315,3.368997,2.653856,-8.056495,8.131458],[-7.001109,8.786329,2.316707,-1.545151,7.872887,5.004300,-3.158603],[-5.031231,-1.777621,-2.519513,6.154378,6.615504,3.874971,7.448502],[9.919454,5.850974,-6.591475,9.977044,9.144275,9.622446,6.604292],[3.160330,-0.592092,-1.385353,-8.345262,-1.692498,-0.296423,-6.286379],[-7.670359,2.385388,6.540491,1.372939,4.996299,9.445645,-2.644477],[7.160777,0.561384,-1.271695,2.966591,-2.706670,7.895906,3.281214],[-4.367839,4.026393,4.095278,6.959086,-9.042113,2.627399,3.805174]],[[-5.294344,2.250608,7.452550,-7.252282,-0.006802,-4.629316,5.048779],[-4.028608,4.097417,-9.032871,7.798134,2.686819,-4.205227,-3.842474],[4.453042,-6.552996,6.212176,-0.490664,-3.724054,-0.852395,-7.065615],[-9.275333,-5.295552,-1.619645,9.758630,5.401490,-0.684781,9.452083],[-3.354448,-3.165900,4.668839,7.632145,-3.708671,7.663518,-2.066739],[-8.440341,-0.157451,-3.641304,5.236945,-1.870356,3.408472,8.483739],[-3.926173,0.478284,-9.997534,1.189227,-6.912828,1.494403,-7.963641],[-1.280187,-4.058712,2.867614,6.369315,-9.977510,-4.840031,6.074634],[-6.885472,1.317261,-8.998756,3.157455,0.546904,-6.948083,3.728931],[-9.023360,0.246746,-4.098080,5.544592,-1.498367,4.555334,8.719627],[-5.280287,5.993865,-8.805086,3.602212,8.731706,5.912748,0.619403],[6.315542,8.948126,-9.290134,-0.243362,7.909904,-4.491908,-7.345502],[-1.794142,9.433677,-9.762394,0.125309,-2.391776,7.827324,1.741685],[-0.056080,4.759975,6.489788,6.467251,1.110080,-7.668430,-6.042419]],[[-5.107469,-2.261139,-5.903479,4.031066,-9.826258,4.134745,-2.055548],[5.083606,-9.812206,-3.310012,0.569838,-9.141169,-8.414869,-7.734038],[-3.831995,9.860781,3.211685,5.171466,-1.454683,-6.481115,9.398455],[7.479867,9.908036,2.703534,-5.747395,0.101253,2.568066,-3.793123],[4.833362,-3.386299,1.509500,-2.689384,4.058738,4.872554,8.890019],[7.949787,4.674368,-5.242372,4.580007,-0.898332,6.683749,7.859239],[-5.479936,-5.882864,-3.340974,6.229974,3.020166,-9.281915,-2.427694],[-7.402935,8.370874,-6.696314,-0.158127,2.111722,7.274749,3.728354],[9.021501,7.657983,-0.610312,0.603775,2.309648,9.016118,4.706354],[7.881601,2.653984,8.014303,8.448963,3.076931,-6.146107,4.594581],[1.249964,-1.042046,3.494514,-6.054079,-2.082426,-9.932844,-2.719856],[-1.429624,0.822705,6.385967,2.341926,-0.905557,4.976210,-8.145084],[-6.543458,9.514364,-2.748773,0.994254,1.073992,5.369959,5.803742],[2.709835,3.713412,4.415100,-2.739737,3.989421,9.684363,-3.959272]]], dtype = "float32")#candidate|118|(12, 14, 7)|const|float32
bop_119 = relay.logical_and(uop_93.astype('bool'), relay.reshape(const_118.astype('bool'), relay.shape_of(uop_93))) # shape=(12, 14, 7)
output = relay.Tuple([bop_100,call_105,call_112,bop_119,])
output2 = relay.Tuple([bop_100,call_106,call_113,bop_119,])
func_133 = relay.Function([var_92,], output)
mod['func_133'] = func_133
mod = relay.transform.InferType()(mod)
mutated_mod['func_133'] = func_133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_134 = relay.var("var_134", dtype = "float32", shape = (12, 14, 7))#candidate|134|(12, 14, 7)|var|float32
func_133_call = mutated_mod.get_global_var('func_133')
call_135 = func_133_call(var_134)
output = call_135
func_136 = relay.Function([var_134], output)
mutated_mod['func_136'] = func_136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_296 = relay.TupleGetItem(func_43_call(), 0)
call_297 = relay.TupleGetItem(func_44_call(), 0)
uop_315 = relay.log10(call_296.astype('float32')) # shape=(8, 6, 3)
uop_317 = relay.log10(call_297.astype('float32')) # shape=(8, 6, 3)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_340 = relay.TupleGetItem(func_43_call(), 0)
call_341 = relay.TupleGetItem(func_44_call(), 0)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_365 = relay.TupleGetItem(func_43_call(), 0)
call_366 = relay.TupleGetItem(func_44_call(), 0)
uop_367 = relay.erf(uop_315.astype('float64')) # shape=(8, 6, 3)
uop_369 = relay.erf(uop_317.astype('float64')) # shape=(8, 6, 3)
output = relay.Tuple([call_340,call_365,uop_367,])
output2 = relay.Tuple([call_341,call_366,uop_369,])
func_371 = relay.Function([], output)
mod['func_371'] = func_371
mod = relay.transform.InferType()(mod)
output = func_371()
func_372 = relay.Function([], output)
mutated_mod['func_372'] = func_372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_390 = relay.TupleGetItem(func_43_call(), 0)
call_391 = relay.TupleGetItem(func_44_call(), 0)
func_67_call = mod.get_global_var('func_67')
func_68_call = mutated_mod.get_global_var('func_68')
call_400 = relay.TupleGetItem(func_67_call(), 0)
call_401 = relay.TupleGetItem(func_68_call(), 0)
output = relay.Tuple([call_390,call_400,])
output2 = relay.Tuple([call_391,call_401,])
func_416 = relay.Function([], output)
mod['func_416'] = func_416
mod = relay.transform.InferType()(mod)
mutated_mod['func_416'] = func_416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_416_call = mutated_mod.get_global_var('func_416')
call_417 = func_416_call()
output = call_417
func_418 = relay.Function([], output)
mutated_mod['func_418'] = func_418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_453 = relay.TupleGetItem(func_43_call(), 0)
call_454 = relay.TupleGetItem(func_44_call(), 0)
const_473 = relay.const([[[True,False,True],[False,True,True],[True,True,False],[True,False,True],[True,False,True],[False,False,True]],[[True,True,False],[False,True,False],[False,False,True],[False,True,False],[False,False,False],[True,True,False]],[[True,False,True],[True,True,True],[False,False,False],[True,False,False],[False,True,True],[True,False,True]],[[True,False,True],[False,False,True],[True,True,True],[True,False,False],[True,True,False],[False,False,True]],[[False,True,True],[False,False,True],[False,True,True],[False,False,True],[True,True,True],[False,False,True]],[[True,True,False],[True,False,True],[True,False,False],[False,False,True],[True,False,False],[True,False,False]],[[False,True,True],[True,True,True],[False,False,True],[True,False,True],[True,False,False],[True,True,False]],[[False,False,False],[True,False,True],[False,False,True],[False,True,False],[False,True,True],[False,True,False]]], dtype = "bool")#candidate|473|(8, 6, 3)|const|bool
bop_474 = relay.right_shift(call_453.astype('int32'), relay.reshape(const_473.astype('int32'), relay.shape_of(call_453))) # shape=(8, 6, 3)
bop_477 = relay.right_shift(call_454.astype('int32'), relay.reshape(const_473.astype('int32'), relay.shape_of(call_454))) # shape=(8, 6, 3)
func_67_call = mod.get_global_var('func_67')
func_68_call = mutated_mod.get_global_var('func_68')
call_493 = relay.TupleGetItem(func_67_call(), 0)
call_494 = relay.TupleGetItem(func_68_call(), 0)
output = relay.Tuple([bop_474,call_493,])
output2 = relay.Tuple([bop_477,call_494,])
func_495 = relay.Function([], output)
mod['func_495'] = func_495
mod = relay.transform.InferType()(mod)
mutated_mod['func_495'] = func_495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_495_call = mutated_mod.get_global_var('func_495')
call_496 = func_495_call()
output = call_496
func_497 = relay.Function([], output)
mutated_mod['func_497'] = func_497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_546 = relay.var("var_546", dtype = "float64", shape = (7, 5, 9))#candidate|546|(7, 5, 9)|var|float64
uop_547 = relay.sinh(var_546.astype('float64')) # shape=(7, 5, 9)
uop_552 = relay.erf(uop_547.astype('float64')) # shape=(7, 5, 9)
func_416_call = mod.get_global_var('func_416')
func_418_call = mutated_mod.get_global_var('func_418')
call_558 = relay.TupleGetItem(func_416_call(), 1)
call_559 = relay.TupleGetItem(func_418_call(), 1)
uop_578 = relay.acosh(uop_552.astype('float64')) # shape=(7, 5, 9)
func_371_call = mod.get_global_var('func_371')
func_372_call = mutated_mod.get_global_var('func_372')
call_580 = relay.TupleGetItem(func_371_call(), 0)
call_581 = relay.TupleGetItem(func_372_call(), 0)
bop_582 = relay.floor_mod(uop_578.astype('float64'), relay.reshape(var_546.astype('float64'), relay.shape_of(uop_578))) # shape=(7, 5, 9)
output = relay.Tuple([call_558,call_580,bop_582,])
output2 = relay.Tuple([call_559,call_581,bop_582,])
func_601 = relay.Function([var_546,], output)
mod['func_601'] = func_601
mod = relay.transform.InferType()(mod)
mutated_mod['func_601'] = func_601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_602 = relay.var("var_602", dtype = "float64", shape = (7, 5, 9))#candidate|602|(7, 5, 9)|var|float64
func_601_call = mutated_mod.get_global_var('func_601')
call_603 = func_601_call(var_602)
output = call_603
func_604 = relay.Function([var_602], output)
mutated_mod['func_604'] = func_604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_372_call = mutated_mod.get_global_var('func_372')
call_624 = relay.TupleGetItem(func_371_call(), 2)
call_625 = relay.TupleGetItem(func_372_call(), 2)
output = call_624
output2 = call_625
func_665 = relay.Function([], output)
mod['func_665'] = func_665
mod = relay.transform.InferType()(mod)
mutated_mod['func_665'] = func_665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_665_call = mutated_mod.get_global_var('func_665')
call_666 = func_665_call()
output = call_666
func_667 = relay.Function([], output)
mutated_mod['func_667'] = func_667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_372_call = mutated_mod.get_global_var('func_372')
call_680 = relay.TupleGetItem(func_371_call(), 1)
call_681 = relay.TupleGetItem(func_372_call(), 1)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_700 = func_665_call()
call_701 = func_665_call()
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_718 = func_665_call()
call_719 = func_665_call()
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_723 = relay.TupleGetItem(func_495_call(), 0)
call_724 = relay.TupleGetItem(func_497_call(), 0)
func_601_call = mod.get_global_var('func_601')
func_604_call = mutated_mod.get_global_var('func_604')
var_730 = relay.var("var_730", dtype = "float64", shape = (35, 9))#candidate|730|(35, 9)|var|float64
call_729 = relay.TupleGetItem(func_601_call(relay.reshape(var_730.astype('float64'), [7, 5, 9])), 2)
call_731 = relay.TupleGetItem(func_604_call(relay.reshape(var_730.astype('float64'), [7, 5, 9])), 2)
func_601_call = mod.get_global_var('func_601')
func_604_call = mutated_mod.get_global_var('func_604')
call_737 = relay.TupleGetItem(func_601_call(relay.reshape(var_730.astype('float64'), [7, 5, 9])), 1)
call_738 = relay.TupleGetItem(func_604_call(relay.reshape(var_730.astype('float64'), [7, 5, 9])), 1)
bop_746 = relay.logical_and(call_723.astype('bool'), relay.reshape(call_737.astype('bool'), relay.shape_of(call_723))) # shape=(8, 6, 3)
bop_749 = relay.logical_and(call_724.astype('bool'), relay.reshape(call_738.astype('bool'), relay.shape_of(call_724))) # shape=(8, 6, 3)
output = relay.Tuple([call_680,call_700,call_718,call_729,var_730,bop_746,])
output2 = relay.Tuple([call_681,call_701,call_719,call_731,var_730,bop_749,])
func_752 = relay.Function([var_730,], output)
mod['func_752'] = func_752
mod = relay.transform.InferType()(mod)
mutated_mod['func_752'] = func_752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_753 = relay.var("var_753", dtype = "float64", shape = (35, 9))#candidate|753|(35, 9)|var|float64
func_752_call = mutated_mod.get_global_var('func_752')
call_754 = func_752_call(var_753)
output = call_754
func_755 = relay.Function([var_753], output)
mutated_mod['func_755'] = func_755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_768 = func_665_call()
call_769 = func_665_call()
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_774 = relay.TupleGetItem(func_495_call(), 1)
call_775 = relay.TupleGetItem(func_497_call(), 1)
uop_789 = relay.log2(call_774.astype('float64')) # shape=(8, 6, 3)
uop_791 = relay.log2(call_775.astype('float64')) # shape=(8, 6, 3)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_794 = relay.TupleGetItem(func_495_call(), 0)
call_795 = relay.TupleGetItem(func_497_call(), 0)
func_133_call = mod.get_global_var('func_133')
func_136_call = mutated_mod.get_global_var('func_136')
var_798 = relay.var("var_798", dtype = "float32", shape = (1176,))#candidate|798|(1176,)|var|float32
call_797 = relay.TupleGetItem(func_133_call(relay.reshape(var_798.astype('float32'), [12, 14, 7])), 2)
call_799 = relay.TupleGetItem(func_136_call(relay.reshape(var_798.astype('float32'), [12, 14, 7])), 2)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_821 = relay.TupleGetItem(func_495_call(), 0)
call_822 = relay.TupleGetItem(func_497_call(), 0)
output = relay.Tuple([call_768,uop_789,call_794,call_797,var_798,call_821,])
output2 = relay.Tuple([call_769,uop_791,call_795,call_799,var_798,call_822,])
func_826 = relay.Function([var_798,], output)
mod['func_826'] = func_826
mod = relay.transform.InferType()(mod)
mutated_mod['func_826'] = func_826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_827 = relay.var("var_827", dtype = "float32", shape = (1176,))#candidate|827|(1176,)|var|float32
func_826_call = mutated_mod.get_global_var('func_826')
call_828 = func_826_call(var_827)
output = call_828
func_829 = relay.Function([var_827], output)
mutated_mod['func_829'] = func_829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_372_call = mutated_mod.get_global_var('func_372')
call_838 = relay.TupleGetItem(func_371_call(), 1)
call_839 = relay.TupleGetItem(func_372_call(), 1)
output = call_838
output2 = call_839
func_842 = relay.Function([], output)
mod['func_842'] = func_842
mod = relay.transform.InferType()(mod)
mutated_mod['func_842'] = func_842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_842_call = mutated_mod.get_global_var('func_842')
call_843 = func_842_call()
output = call_843
func_844 = relay.Function([], output)
mutated_mod['func_844'] = func_844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_67_call = mod.get_global_var('func_67')
func_68_call = mutated_mod.get_global_var('func_68')
call_861 = relay.TupleGetItem(func_67_call(), 0)
call_862 = relay.TupleGetItem(func_68_call(), 0)
uop_883 = relay.asin(call_861.astype('float64')) # shape=(8, 6, 3)
uop_885 = relay.asin(call_862.astype('float64')) # shape=(8, 6, 3)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_888 = relay.TupleGetItem(func_495_call(), 1)
call_889 = relay.TupleGetItem(func_497_call(), 1)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_898 = relay.TupleGetItem(func_495_call(), 0)
call_899 = relay.TupleGetItem(func_497_call(), 0)
output = relay.Tuple([uop_883,call_888,call_898,])
output2 = relay.Tuple([uop_885,call_889,call_899,])
func_905 = relay.Function([], output)
mod['func_905'] = func_905
mod = relay.transform.InferType()(mod)
output = func_905()
func_906 = relay.Function([], output)
mutated_mod['func_906'] = func_906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_1022 = relay.TupleGetItem(func_43_call(), 0)
call_1023 = relay.TupleGetItem(func_44_call(), 0)
uop_1031 = relay.atan(call_1022.astype('float64')) # shape=(8, 6, 3)
uop_1033 = relay.atan(call_1023.astype('float64')) # shape=(8, 6, 3)
func_371_call = mod.get_global_var('func_371')
func_372_call = mutated_mod.get_global_var('func_372')
call_1049 = relay.TupleGetItem(func_371_call(), 2)
call_1050 = relay.TupleGetItem(func_372_call(), 2)
func_371_call = mod.get_global_var('func_371')
func_372_call = mutated_mod.get_global_var('func_372')
call_1061 = relay.TupleGetItem(func_371_call(), 1)
call_1062 = relay.TupleGetItem(func_372_call(), 1)
output = relay.Tuple([uop_1031,call_1049,call_1061,])
output2 = relay.Tuple([uop_1033,call_1050,call_1062,])
func_1066 = relay.Function([], output)
mod['func_1066'] = func_1066
mod = relay.transform.InferType()(mod)
output = func_1066()
func_1067 = relay.Function([], output)
mutated_mod['func_1067'] = func_1067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_1100 = relay.TupleGetItem(func_43_call(), 0)
call_1101 = relay.TupleGetItem(func_44_call(), 0)
output = call_1100
output2 = call_1101
func_1112 = relay.Function([], output)
mod['func_1112'] = func_1112
mod = relay.transform.InferType()(mod)
mutated_mod['func_1112'] = func_1112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1112_call = mutated_mod.get_global_var('func_1112')
call_1113 = func_1112_call()
output = call_1113
func_1114 = relay.Function([], output)
mutated_mod['func_1114'] = func_1114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_67_call = mod.get_global_var('func_67')
func_68_call = mutated_mod.get_global_var('func_68')
call_1115 = relay.TupleGetItem(func_67_call(), 0)
call_1116 = relay.TupleGetItem(func_68_call(), 0)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_1127 = func_665_call()
call_1128 = func_665_call()
output = relay.Tuple([call_1115,call_1127,])
output2 = relay.Tuple([call_1116,call_1128,])
func_1143 = relay.Function([], output)
mod['func_1143'] = func_1143
mod = relay.transform.InferType()(mod)
output = func_1143()
func_1144 = relay.Function([], output)
mutated_mod['func_1144'] = func_1144
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1234 = relay.const([[[7,10,7,-4,-6],[3,7,-10,5,-4],[-7,-10,-9,5,7],[1,4,-10,3,-10],[-8,-5,-6,10,6],[-10,10,-5,-4,3],[4,9,-3,1,-2],[7,1,-5,-6,10],[8,-4,7,1,4],[7,6,-8,-5,-7]],[[7,7,7,-6,-6],[6,6,6,3,-7],[9,-5,-1,8,-1],[5,8,-5,-3,-9],[-7,4,-6,7,8],[-6,-1,4,5,8],[-6,1,4,-10,-9],[5,-5,-9,7,-10],[-1,4,9,-4,1],[-10,4,2,9,2]],[[-2,-4,-5,-7,9],[9,-8,-4,10,-3],[7,-9,-5,8,2],[2,8,-10,8,-7],[-9,-1,-9,5,-10],[-4,2,-9,-2,-2],[10,10,-1,2,10],[-8,-8,-7,1,-10],[-10,9,6,8,-8],[4,-4,7,7,-5]],[[-1,-5,4,-7,3],[8,-2,7,7,-7],[6,3,8,-7,7],[1,9,-8,9,7],[-3,-7,-2,-4,-10],[3,4,9,-4,-8],[-10,-1,-6,-9,-4],[-9,3,-1,-4,3],[-6,1,-2,4,9],[-9,3,-8,-8,-6]],[[-5,-1,-4,-3,-7],[-2,3,-5,-6,-1],[2,-3,-1,-6,8],[-3,-8,1,-7,10],[-1,7,8,10,-10],[10,-2,-7,-4,2],[-4,4,1,5,10],[-2,-8,6,10,1],[-9,-3,3,-4,4],[8,-4,1,-10,1]],[[-2,2,1,-7,3],[4,10,-3,-9,10],[4,1,-10,1,-9],[-9,-7,-2,-10,1],[8,5,3,2,6],[3,-10,8,-9,10],[-3,-10,2,9,10],[5,-5,9,-10,-10],[-3,-6,9,4,5],[7,-7,-6,-8,10]],[[7,7,8,2,9],[4,-4,6,4,-3],[-6,-7,-9,1,-10],[-5,-8,8,10,-6],[1,10,10,-1,8],[5,8,6,-7,-3],[9,3,-2,-5,-3],[3,1,-9,1,-9],[-8,4,8,-1,6],[1,4,3,7,10]]], dtype = "int32")#candidate|1234|(7, 10, 5)|const|int32
const_1235 = relay.const([[[5,1,-4,-3,3],[-3,-6,7,2,2],[-3,-2,-10,6,-10],[-7,8,6,-2,-7],[2,-5,-2,-4,6],[-2,3,-7,-2,10],[-5,8,4,-5,3],[-1,-4,3,-1,-2],[5,3,-7,8,-3],[-5,5,4,-9,8]],[[-3,-7,7,4,-9],[2,10,1,-8,-9],[9,-9,-7,-6,2],[-8,-2,3,-9,7],[1,1,7,-1,10],[5,-3,-6,9,-9],[-5,-7,6,-8,5],[2,-7,9,6,10],[-9,-7,-3,-7,2],[-3,-4,4,10,-2]],[[9,5,8,1,-4],[-10,-8,-7,10,3],[-9,9,-9,-3,6],[8,-1,1,-8,3],[-5,-7,2,6,-10],[-3,7,4,6,-9],[-3,8,-9,-5,-3],[-9,3,-3,-1,-6],[8,-2,3,3,3],[4,6,-2,-2,1]],[[5,-6,-9,-3,6],[3,-9,8,-1,1],[-10,10,8,-2,6],[8,7,-10,-2,7],[10,-1,3,1,2],[-5,-9,-10,-6,-9],[-8,-6,10,-1,8],[-10,6,-9,3,-4],[-4,-7,4,1,-2],[4,7,4,5,2]],[[1,-6,-5,7,-7],[-3,10,5,9,-5],[4,10,-9,-3,-10],[-2,8,10,-2,-3],[8,1,8,-3,10],[10,9,-9,6,7],[-6,-9,-6,10,-7],[-7,9,-4,-4,5],[-7,9,-7,-6,-10],[-1,1,-1,-10,-5]],[[3,4,9,-8,7],[6,10,-9,4,2],[-10,10,-2,8,-3],[-10,4,6,-2,-6],[-10,2,-8,7,-8],[-5,1,-10,6,6],[1,-6,2,10,-8],[4,9,-6,-8,-8],[-1,7,-8,-6,4],[-4,9,-2,1,4]],[[8,-7,-3,5,-5],[10,-8,9,-3,-10],[8,4,5,-6,-7],[6,-8,2,6,-5],[-10,1,1,4,7],[-10,8,-10,-9,-1],[-9,-10,2,10,-7],[10,-9,7,-5,1],[3,-6,-5,-5,-5],[9,-3,-2,-10,4]]], dtype = "int32")#candidate|1235|(7, 10, 5)|const|int32
bop_1236 = relay.bitwise_xor(const_1234.astype('int32'), relay.reshape(const_1235.astype('int32'), relay.shape_of(const_1234))) # shape=(7, 10, 5)
output = relay.Tuple([bop_1236,])
output2 = relay.Tuple([bop_1236,])
func_1242 = relay.Function([], output)
mod['func_1242'] = func_1242
mod = relay.transform.InferType()(mod)
output = func_1242()
func_1243 = relay.Function([], output)
mutated_mod['func_1243'] = func_1243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1112_call = mod.get_global_var('func_1112')
func_1114_call = mutated_mod.get_global_var('func_1114')
call_1275 = func_1112_call()
call_1276 = func_1112_call()
var_1313 = relay.var("var_1313", dtype = "bool", shape = (8, 6, 3))#candidate|1313|(8, 6, 3)|var|bool
bop_1314 = relay.bitwise_or(call_1275.astype('int64'), relay.reshape(var_1313.astype('int64'), relay.shape_of(call_1275))) # shape=(8, 6, 3)
bop_1317 = relay.bitwise_or(call_1276.astype('int64'), relay.reshape(var_1313.astype('int64'), relay.shape_of(call_1276))) # shape=(8, 6, 3)
func_905_call = mod.get_global_var('func_905')
func_906_call = mutated_mod.get_global_var('func_906')
call_1318 = relay.TupleGetItem(func_905_call(), 1)
call_1319 = relay.TupleGetItem(func_906_call(), 1)
uop_1324 = relay.sigmoid(var_1313.astype('float64')) # shape=(8, 6, 3)
output = relay.Tuple([bop_1314,call_1318,uop_1324,])
output2 = relay.Tuple([bop_1317,call_1319,uop_1324,])
func_1326 = relay.Function([var_1313,], output)
mod['func_1326'] = func_1326
mod = relay.transform.InferType()(mod)
mutated_mod['func_1326'] = func_1326
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1327 = relay.var("var_1327", dtype = "bool", shape = (8, 6, 3))#candidate|1327|(8, 6, 3)|var|bool
func_1326_call = mutated_mod.get_global_var('func_1326')
call_1328 = func_1326_call(var_1327)
output = call_1328
func_1329 = relay.Function([var_1327], output)
mutated_mod['func_1329'] = func_1329
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1347 = relay.const([[[1.990462,9.241723,-4.983619,-4.922257,-4.292960,7.659229],[-0.719037,-9.570246,0.618671,2.209427,-5.829077,2.817888],[2.004978,9.779351,9.402777,4.376175,-0.424515,3.349887],[7.258702,6.916706,1.744213,0.784519,-8.509406,-5.585428],[-8.884431,-3.686588,4.510662,8.475840,-7.189291,-9.922610],[6.057557,-4.229338,-8.187256,-6.329833,4.158954,7.997692],[-4.648474,4.962066,3.042402,5.625315,0.052438,-8.225760],[5.647126,9.532156,-0.847416,9.964843,2.805457,6.154836],[0.144433,7.417120,6.821918,-7.599588,0.858996,6.440066]],[[5.126826,-3.537391,-3.495473,6.540577,-6.499249,-4.806311],[4.804548,8.630709,3.565099,-1.535368,-3.272829,-4.134432],[5.089761,-6.584322,-8.726414,7.006962,-1.742138,-6.624805],[-6.361744,-2.746282,-3.881193,5.916410,5.365548,-1.519173],[-3.738942,7.369464,-0.327930,-2.816716,-9.659528,-7.121470],[-7.283725,-1.758060,-7.613208,-7.129923,1.796517,2.694234],[6.526418,4.706876,8.890318,8.359671,-8.729140,1.444983],[-4.721815,-7.342062,-5.111688,8.268891,-9.106639,5.672819],[-9.691607,3.973540,-7.367524,3.254605,-5.496639,-8.863251]],[[-2.836596,3.504005,2.418133,7.220711,-3.408212,-7.111608],[8.842201,-6.209184,-4.468688,-6.204722,6.208919,-6.601317],[-5.907240,0.749191,-6.819050,5.245253,8.885077,3.856038],[2.611447,0.951025,8.835541,-8.985928,5.262775,-8.705021],[-7.212267,1.634650,5.521595,5.461666,8.366158,-8.356979],[7.915292,5.111770,-4.465375,7.298219,3.807073,0.179569],[-0.697668,4.565509,-8.640923,1.490359,-7.719211,-4.600798],[-6.737395,-8.085331,-6.057393,3.127986,-7.147377,8.074358],[-4.309408,-1.177711,8.764176,-7.789994,6.647390,0.898492]],[[5.320506,-8.119128,2.681743,4.355427,-7.701508,-9.388834],[-0.759617,-6.505925,-5.122399,2.952933,-6.736025,-2.808190],[-4.058404,-4.822951,1.748106,4.897974,-6.642498,-7.109877],[5.496436,-3.331712,7.834976,-5.805940,-0.759844,-5.373612],[-2.152688,3.009364,0.525210,-8.215650,-3.272639,6.900732],[1.777222,6.034983,-2.995112,7.172742,1.208513,-8.132594],[-6.909152,3.275739,0.536819,6.542089,2.145723,8.664921],[0.522981,-6.363715,-6.755071,2.909101,1.000950,1.389467],[-3.945821,4.059811,-9.272043,2.075700,-3.573582,-5.977805]],[[-6.932770,-4.668368,-3.155098,5.016706,7.445005,-5.950853],[9.390657,9.971591,-5.160876,3.328725,-2.477885,-6.431341],[-0.154338,1.613520,-6.197933,-5.159369,-4.383618,9.660740],[-3.502507,-2.642517,-2.780784,8.180265,-8.410275,-5.422524],[-7.076135,7.492511,-6.475341,6.031242,9.008159,-9.821778],[-8.482146,9.171883,9.911354,-4.190611,7.212616,5.067100],[9.078767,5.579377,-5.363625,-8.179393,3.223800,2.769283],[6.623974,-0.338684,0.065515,4.549284,-7.496845,-7.337780],[3.044449,3.133432,7.080386,-5.300677,-8.258895,-5.134640]],[[-7.538277,8.027975,0.070536,8.905564,8.486581,9.479905],[-5.008009,9.316743,4.754789,-7.958339,-9.187771,0.485796],[3.145777,-3.722547,-3.809761,-7.189447,1.028279,-5.295948],[-5.754628,5.273710,-6.371093,-7.245105,5.553944,1.008526],[-6.135627,1.630968,6.852911,-6.074819,8.798669,-8.899058],[-2.672263,-7.948146,-2.093481,-3.135296,-7.954887,6.387130],[-9.269962,-4.299258,5.178538,8.774890,0.264763,-0.328761],[4.446508,6.348408,8.400287,-7.257976,-8.755681,1.567422],[-1.323119,6.042328,2.878468,3.192714,2.233295,-4.815827]]], dtype = "float64")#candidate|1347|(6, 9, 6)|const|float64
const_1348 = relay.const([[[-2.878180,-5.572829,3.664564,2.440023,-4.572276,8.879470],[-4.173588,3.711321,-5.143883,2.271417,7.020899,-5.979500],[3.332163,-4.980212,-1.079760,7.463240,-2.265640,9.266285],[3.197703,7.121899,1.239469,6.451409,-6.297382,2.512409],[-5.090900,4.477530,-2.248621,-2.884547,1.551486,0.822628],[-8.795684,-3.090877,-6.875993,-8.923826,-7.746588,-3.369704],[-1.653117,-1.211456,-3.978555,-3.515466,-1.108022,-3.443554],[9.461140,-8.674799,7.548873,1.188330,-7.017253,4.266598],[0.054265,9.429838,7.166754,-0.337804,4.612974,-6.645317]],[[-5.601958,-3.915993,-1.221426,0.293418,6.242979,-2.290534],[0.606992,-4.500361,4.130576,4.700266,5.587376,5.266373],[-8.039340,3.144958,-3.934167,5.837958,-0.840142,7.542350],[1.042279,-0.982118,3.712226,6.793043,-8.363874,-7.765916],[1.343684,3.066304,-5.216755,7.993340,-8.932095,-2.949322],[3.383329,8.057845,8.527566,-5.662693,-3.337479,0.341820],[-5.763675,-5.417051,-1.769036,-9.947138,-4.279798,0.608473],[-8.251062,3.636392,1.729135,5.993409,-5.194794,-1.235031],[-9.808254,-4.880340,8.874770,-6.663638,-3.292418,4.973730]],[[2.815436,9.776784,2.422345,5.457254,5.092064,-6.276926],[-0.918701,6.742908,-6.440608,7.344580,7.362679,5.776818],[9.034140,-9.356660,8.680488,5.782524,9.692633,-0.821078],[3.109270,5.030472,0.569718,3.244485,2.160772,-7.430250],[-7.374018,-8.309149,6.287500,-3.063708,4.694729,-0.927119],[-5.680643,-8.310975,-3.503963,-0.623369,-4.339554,0.724368],[3.037362,0.777408,1.361755,9.885539,3.011994,5.560499],[7.784810,-4.518193,-2.626248,3.543725,-9.196318,1.973847],[0.325422,-7.658923,8.717261,6.034671,-3.117173,5.685424]],[[-9.961947,3.357812,7.344012,-6.596872,-6.656609,1.843093],[6.188098,-3.231579,-1.678490,3.236262,4.375143,0.910040],[6.001002,-5.922949,-5.540151,1.941377,-2.563664,-7.287533],[-8.965307,-7.006082,9.066564,2.236883,8.885409,-7.877007],[7.356767,8.899677,7.302914,2.890571,0.275256,-3.886542],[-4.114225,-6.549721,-2.194876,-5.796239,5.377630,-7.744504],[-2.721885,8.112924,8.584936,-4.786885,1.725306,9.517750],[-1.169901,4.612287,-8.415298,3.206156,-3.863586,2.269423],[9.487303,1.925381,0.001858,4.949079,5.998966,4.534549]],[[5.552565,-5.572499,0.998820,9.201789,-4.035039,6.028959],[0.516412,4.568534,-2.438685,-3.321436,-8.544620,-4.193145],[6.794315,-3.183694,-9.918718,0.740907,0.609445,8.423175],[-7.421014,-2.228965,0.250782,3.330963,4.089843,-0.975105],[-6.191519,6.267658,-3.178923,-1.816052,0.488935,9.535406],[-2.884404,2.851831,-6.640364,-7.769787,-4.428167,5.893769],[-2.738817,-2.230625,-0.214078,8.748959,8.768845,0.443567],[-1.978319,-5.500334,-5.319608,8.731154,-8.849683,-1.207580],[4.828645,9.128277,-2.359170,-4.191445,-3.668972,-6.169945]],[[4.211370,0.467228,-2.350795,8.375832,-2.290403,-1.264290],[4.068113,1.966762,5.884994,-2.577606,-1.372121,-6.165185],[-4.811439,2.980448,4.570052,7.897372,1.865020,2.069170],[-1.154473,-0.816487,-3.674445,4.795343,-2.142728,-9.448422],[7.201438,1.395507,-6.589095,-1.198450,-4.318703,1.448760],[1.966635,-8.404060,9.516095,-9.716476,-0.700376,-7.842502],[2.462304,-9.468900,-7.594161,4.312911,5.564485,2.574074],[-3.157436,5.043262,0.943133,-1.319990,7.710764,8.803798],[9.035351,-3.801405,-2.342857,-8.196736,1.727592,-8.208098]]], dtype = "float64")#candidate|1348|(6, 9, 6)|const|float64
bop_1349 = relay.floor_divide(const_1347.astype('float64'), relay.reshape(const_1348.astype('float64'), relay.shape_of(const_1347))) # shape=(6, 9, 6)
output = relay.Tuple([bop_1349,])
output2 = relay.Tuple([bop_1349,])
func_1354 = relay.Function([], output)
mod['func_1354'] = func_1354
mod = relay.transform.InferType()(mod)
output = func_1354()
func_1355 = relay.Function([], output)
mutated_mod['func_1355'] = func_1355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_842_call = mod.get_global_var('func_842')
func_844_call = mutated_mod.get_global_var('func_844')
call_1367 = func_842_call()
call_1368 = func_842_call()
func_826_call = mod.get_global_var('func_826')
func_829_call = mutated_mod.get_global_var('func_829')
const_1380 = relay.const([-6.166268,9.451367,6.846219,-6.560809,-8.128488,6.000370,-3.708438,0.273417,9.294826,2.782383,0.216309,9.836917,-3.956010,6.693903,4.613849,9.241407,-7.417354,-5.679239,-6.066092,3.767563,6.581340,-5.314916,5.333238,-1.467579,2.381352,8.751865,-1.497052,-1.676234,-7.331461,7.640158,7.593641,3.032027,7.662984,7.279749,9.982823,9.240904,0.015727,-7.126786,5.196134,1.976112,-6.769424,1.975062,2.541287,-9.614568,3.060633,3.384940,-1.536635,-5.460826,-4.612948,5.470642,-5.974399,-5.251239,-1.584542,2.883252,-4.756375,4.538007,6.832319,4.234732,-4.214704,5.261088,6.927974,-5.006797,4.855576,-2.773321,-8.289957,3.157430,-5.830926,-7.562877,5.362714,-9.647016,-7.929290,-6.641935,-0.771731,-0.286792,5.219337,-8.497888,-5.971049,-0.890194,2.380500,-5.280803,5.180749,6.183561,4.662622,-4.754358,0.085818,-6.053530,-4.638167,9.382485,4.845629,-6.635526,5.386371,8.509722,0.606529,-2.975936,-1.859066,9.603420,-1.600981,2.992313,-7.001827,-3.153423,-6.341885,-4.755534,-3.708447,9.495155,1.004232,-0.320123,-8.421279,6.539475,-6.915476,8.595794,-7.018641,-4.607390,5.506855,-1.882792,4.305227,2.140881,-0.181301,7.641000,2.517612,-2.775936,-3.449205,-0.807279,-8.973546,-6.941239,7.041073,-8.810411,-0.770613,-3.216333,-1.070202,-4.052886,-3.206595,-8.874358,3.883698,9.700949,-3.487938,7.590371,-9.648464,-1.059349,8.166608,8.137871,-4.864707,-6.403503,-3.662794,-4.791589,-3.916089,3.000337,-0.503589,4.325312,6.877418,-6.467123,-3.342133,-9.199679,0.419634,6.690198,0.382442,3.496954,-3.357550,6.255492,2.812693,-1.011880,-0.664521,-6.830549,7.077310,-5.922009,-3.254387,-9.760529,-8.976780,1.600839,8.534448,7.348910,-4.587005,-5.149003,-3.340184,3.702507,5.353948,1.600134,1.863646,-8.134478,2.663508,3.817459,-8.772986,-7.147325,-8.994755,-0.311253,7.667402,4.510851,2.907091,-9.476789,8.227356,6.186526,2.161880,-4.283912,-8.509569,0.549605,0.875318,5.338783,2.652876,-6.628810,7.924513,7.225527,-9.243852,-0.156410,3.815771,-2.942607,6.371101,3.498050,-9.602578,5.069115,6.533044,1.591602,-5.658431,-5.276287,-6.819215,7.047321,5.021729,-9.020187,7.788132,2.762238,-0.097285,7.426906,8.747434,-9.763435,-8.977336,-1.253051,8.581111,-1.819849,-0.396309,8.191628,-4.428516,6.056259,0.390151,7.729267,-7.583658,4.434144,-5.526464,-6.012578,-5.961004,-0.945112,9.091081,-8.976530,-0.384418,-7.954254,2.641129,0.193239,-5.161732,9.763795,4.477831,8.673200,-4.469240,-5.896427,7.110553,-8.267991,9.015370,7.180415,-4.907195,6.138611,-6.512189,2.569496,2.453426,6.926006,3.544689,-2.843213,-9.594070,1.319587,-0.820803,2.262166,-6.449840,3.333212,-3.018548,-1.182407,-4.656177,6.460208,4.597614,-9.633567,-0.225216,9.098250,6.132089,-9.114741,0.174834,-9.397253,7.203891,4.451916,7.706842,2.778967,7.945557,-9.124294,-9.845513,5.787748,4.217246,-3.636770,9.875856,9.646886,3.105962,-8.125741,5.944148,4.761780,8.545754,1.709068,1.194472,-0.913472,-4.887803,9.334095,4.463365,4.408145,-0.190118,-0.282355,5.392327,-2.073721,3.554466,3.053846,9.466201,5.284562,6.350779,-8.223714,5.508135,-8.983407,5.400573,-4.932272,-2.167826,2.305331,-4.925162,-7.380223,-1.761784,-4.173781,-1.152474,-6.039755,-1.152908,-5.969318,-7.761364,0.385347,2.083131,-0.842230,2.365406,1.893878,-2.688358,-8.181846,-9.027996,-4.879413,-5.224959,-0.537136,-7.031617,-0.468254,-7.694514,-7.924005,4.767353,6.965268,4.774270,-8.691763,-3.591255,-6.671171,-9.137039,6.586564,-1.605851,0.683559,3.273173,1.096958,5.247212,-6.285588,-9.722909,-4.562921,-3.602873,-8.741466,5.484372,-1.760378,2.746750,-2.227774,-3.928104,-6.178010,0.866137,8.402410,-8.312259,-0.768430,-3.350988,3.481306,-9.809400,6.077437,7.030646,-1.331054,-9.564730,9.607350,-9.972854,4.906874,3.389050,9.753296,-0.360009,0.546654,6.439299,-0.945692,4.684258,-3.854986,2.868731,-2.472387,2.447612,-7.788473,-0.203004,2.213680,4.048360,7.954028,8.499622,-0.139877,1.723758,-4.868992,6.156096,-5.376960,-4.357102,-0.617471,-9.736774,7.814176,-5.321067,1.985326,5.174034,2.162811,-2.191408,6.951162,5.942717,5.990428,-1.500336,6.232380,-2.059321,-9.077048,-2.697696,-6.606313,8.070027,-2.105312,9.010917,-6.910265,1.735442,-3.056361,-4.242274,7.134015,6.732739,-0.821185,-0.553337,3.951383,-6.028044,2.430734,2.889190,2.053170,4.352466,-8.065330,-6.605392,5.612313,-0.382269,9.032615,-6.834850,-6.706493,9.116307,7.196694,-9.990480,-8.713471,-6.539478,6.684935,5.016624,-9.789953,-8.787958,-8.938219,-3.908969,-8.099999,4.481763,5.643759,-2.030721,2.525054,6.965621,1.546696,4.565094,-3.897621,-4.751216,0.945913,-6.642799,-1.775137,-4.687230,7.484407,5.918449,2.695207,7.481703,-2.366605,-0.231868,3.936381,-1.138830,6.465499,-3.165691,6.195296,8.185541,4.777071,-0.038802,2.906577,-3.451647,7.448572,-0.166976,-8.560367,-2.617112,-4.896036,-0.805061,-8.080572,-6.384574,-1.089397,7.069815,9.155368,0.463571,-4.063038,5.736868,-8.915244,7.867954,7.119763,9.684834,8.024869,-5.145482,-5.603718,-9.060266,6.071289,1.533783,4.301051,5.701657,5.891188,9.496460,-3.459539,0.937316,-1.409020,7.907722,0.128314,3.270821,-0.948003,-6.552178,-3.223036,9.705132,8.842300,-3.410710,9.372355,-0.347637,-9.851404,-1.364900,-7.945800,8.200205,-7.896338,-3.869552,1.193605,3.812892,0.989803,7.394680,-6.453384,2.520656,2.579771,-9.340615,5.352384,8.479846,1.471487,-2.387047,-6.189860,-4.962060,-0.172721,-8.786939,0.583104,9.015694,8.735383,-8.471106,9.666947,9.267382,4.932471,2.298589,-3.423620,-6.012808,2.526943,7.459358,1.793763,-6.575854,-8.607429,9.842563,-3.425705,-8.928111,7.761925,4.726711,-2.477122,4.325775,1.519704,-6.730999,-1.928091,1.322901,-5.591107,1.638569,-0.539094,1.171420,-6.876599,-0.258717,-9.017438,-3.187086,-3.699964,-4.867908,-5.258559,-2.445092,5.951560,-4.118395,-0.782223,7.328698,-5.623000,-8.342156,-0.816363,-5.936002,-9.097386,-8.876354,1.721909,0.981407,-5.909272,1.180919,1.207352,-5.763105,-4.700442,-9.950772,-2.529810,6.497093,-7.889091,-4.224802,-5.481454,5.733639,4.224349,9.335560,-9.697925,-5.250115,-7.240455,-5.124914,-5.923623,-8.864004,7.864640,8.618933,-0.629731,-6.788151,-4.044847,-4.509272,7.760164,2.400614,1.887094,-9.746616,0.334941,-3.279538,-6.186743,-4.484682,-2.499500,9.002237,3.277957,6.129478,-5.416041,0.711776,-3.466953,5.262399,5.398410,2.491685,1.083659,7.182495,-2.693046,-1.973243,-8.720126,5.771379,-2.553038,-6.373348,5.955079,7.579346,8.303647,-4.917523,-2.788804,-7.362821,7.851654,-0.311149,5.858219,3.675955,-1.399192,-3.798624,-4.733604,0.019335,-2.894869,0.926294,5.770135,3.619246,6.362919,7.883851,8.996394,4.631237,5.866171,7.288120,7.283358,-0.918771,4.495930,-6.694692,3.016158,-0.867447,5.908367,9.828061,-1.579972,-3.649041,4.795211,-7.640005,9.486126,3.409081,4.990714,5.930103,8.987597,-0.980869,-2.811213,3.468714,-5.308418,4.456187,9.635280,4.812187,-2.446290,9.080217,9.627230,-3.923846,4.912823,2.602741,8.082802,-8.897709,-8.801155,5.185699,2.389009,-1.234099,-6.231467,-5.023413,1.352677,6.162616,1.603198,0.875873,-0.345659,2.904913,5.565315,5.283467,0.750694,6.028602,-8.909287,-8.204737,4.625711,-7.291976,-3.375411,0.546107,-0.284219,1.312554,8.002394,-6.415192,3.266199,-5.599300,-6.900134,8.864263,9.965044,2.982762,1.490991,3.824152,8.029782,-1.563218,-1.006545,4.935694,-8.404881,-9.856046,0.670818,-5.845888,-8.830751,9.258060,-3.848885,-5.747521,1.434779,0.688042,5.506395,-3.533470,-2.271497,7.945626,-1.590270,6.511152,3.410062,0.682849,-5.539371,1.654442,-9.529444,9.000191,8.800711,-8.881958,-4.797949,3.161152,-1.743081,-3.390551,-2.739073,-8.912750,-5.942856,-5.825481,9.314602,-0.261313,7.002709,6.889465,-8.794686,-7.740140,-3.689890,-8.902862,-8.094698,1.620771,6.563516,-5.775974,2.932043,0.333584,-7.072801,3.335542,3.474799,-9.771300,-2.932061,-0.153049,-4.431102,-0.058662,9.916958,0.966577,1.714931,-6.136826,-8.520446,-4.742151,2.320228,0.409589,1.581844,-0.062175,-2.458872,6.578226,-1.582275,0.501155,-8.625404,2.045587,8.722012,-0.394183,0.597881,9.571926,2.622092,4.337714,4.422407,-5.640189,-0.464455,2.351260,7.766163,5.927794,-6.704926,7.464397,-6.432382,-6.758480,1.283891,-6.655018,-4.336032,8.271069,-0.344594,-3.459429,3.685868,-4.132340,0.581234,2.086650,3.968098,-8.961075,4.716444,-5.362471,2.063582,8.842401,7.467091,6.575322,-3.605662,8.859945,-9.365595,-2.553714,5.008922,6.204961,5.319738,8.821475,1.545449,-1.699669,5.703296,-0.036641,-4.879563,-2.856711,-7.392596,8.755697,-2.668750,3.900718,-9.415010,-4.246325,-2.449934,1.188156,-4.729653,-2.458766,-6.862704,7.859549,-6.873124,-5.330529,0.824116,-0.131678,7.447847,-3.891151,2.292624,-6.765066,-1.460539,2.905272,-2.635460,-9.987285,9.759710,-1.346325,1.919927,-8.567948,9.833431,-3.927686,8.720881,-4.241061,-1.887273,-9.290098,-8.792668,-0.090362,4.645677,-4.563820,-8.157824,9.219613,2.004226,1.811378,6.151984,-5.173494,5.659234,7.005034,-4.989277,1.583202,0.503766,-1.568195,-5.138491,-4.527407,-8.723342,3.205320,3.385652,-8.004830,-4.785847,0.897987,0.633621,-2.024495,2.177592,6.153872,-5.182359,-4.076518,-6.659252,9.442776,1.883384,7.164759,-5.698460,-1.110944,4.313578,4.905227,4.266770,1.136452,-5.703056,9.749074,8.800633,6.591355,2.172792,5.687004,-2.953754,-4.845360,-4.863018,3.632051,-3.179883,-0.762909,1.955769,2.944023,4.695598,0.461888,-0.382069,7.715004,-6.109779,5.028122,-9.326693,4.141197,-4.023492,2.146840,0.311400,7.497942,-7.447429,4.467950,4.439035,-3.449834,2.946188,7.575980,-3.020008,-8.035449,5.197649,-8.896291,-1.816900,5.425437,6.810119,-4.847897,4.397881,-3.528639,8.461493,3.553382,-6.673091,5.738600,-4.245452,-7.439897,0.086473,5.683474,-2.161516,7.420638,2.161399,6.716410,9.745419,-6.849122,-5.739134,-8.292805,-6.340875,-0.407550,-1.887783,4.956058,-1.408007,9.027935,-1.093984,2.725564,6.234803,9.558324,5.800292,4.192334,-3.517148,0.370326,9.258984,9.015703,-2.669194,-9.703844,6.504745,6.936186,6.086142,-5.948056,7.402114,8.419197,-9.525631,7.155155,6.972768,-1.879464,-5.197282,-8.019511,0.707744,-5.559816,-8.605089,-5.950960,-0.649850,7.143968,7.338793,0.191330,7.423846,7.000264,9.864174,4.107355,7.789430,7.608040,-9.014150,5.495303,7.307502,9.396914,8.117130,3.619797,8.477383,0.880542,-9.517793,0.392460,2.775883,8.976617,8.422831,-8.205609,-1.697387,8.766996,6.143408,6.648057,-0.398627,-8.538086,-0.842335,1.355820,4.454478,-8.059860,4.154224,2.993335,-3.878765,5.071474,-5.290775,4.712737,4.948903,7.507819,7.835100,0.858094,8.313732,9.801263,-1.601576,4.889038,-2.036896,4.894312,7.007027,-5.385019,-6.351407,8.401680,8.191171,1.692007,7.732591,-8.136491,5.653376,-9.615612,2.925059,7.712570,-6.136210,1.098800,-8.448260,-1.115442,-5.706800,-8.162355,4.217060,2.416069,-6.443328,6.767507,2.707033,-8.484748,-1.840567,8.006623,1.603376,6.796336,7.590843,-1.744068,2.587022,9.148298,9.311582,-6.935947,9.718513,-3.234380,5.676524,-0.473096,0.274626,4.804226,1.488056,8.480529,5.674565,4.558441,-3.952004,4.124209,-0.090366,4.324522,-2.810789,-8.478036,0.778393,7.071550,0.517143,7.369034,-7.201018,-3.621754,7.786573,-8.626969,-6.928029,3.302643,8.414682,-7.870025,9.023523,-9.594862,-8.562085,0.896271,0.208931,-5.649167,-3.451049,0.501074,-5.518118,1.080103,9.499609,9.212180,0.686026,-0.166423,2.941286,-4.449387,-5.227857,-0.369371,-1.316917,-0.486528,-1.801205,-7.597717,-8.312855,8.738438,3.490988,-2.245148,5.398983,-3.258696,-1.884636,6.551251,2.992418,-4.990816,-1.776801], dtype = "float32")#candidate|1380|(1176,)|const|float32
call_1379 = relay.TupleGetItem(func_826_call(relay.reshape(const_1380.astype('float32'), [1176,])), 3)
call_1381 = relay.TupleGetItem(func_829_call(relay.reshape(const_1380.astype('float32'), [1176,])), 3)
output = relay.Tuple([call_1367,call_1379,const_1380,])
output2 = relay.Tuple([call_1368,call_1381,const_1380,])
func_1384 = relay.Function([], output)
mod['func_1384'] = func_1384
mod = relay.transform.InferType()(mod)
output = func_1384()
func_1385 = relay.Function([], output)
mutated_mod['func_1385'] = func_1385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_1400 = relay.TupleGetItem(func_1384_call(), 2)
call_1401 = relay.TupleGetItem(func_1385_call(), 2)
func_1354_call = mod.get_global_var('func_1354')
func_1355_call = mutated_mod.get_global_var('func_1355')
call_1410 = relay.TupleGetItem(func_1354_call(), 0)
call_1411 = relay.TupleGetItem(func_1355_call(), 0)
func_601_call = mod.get_global_var('func_601')
func_604_call = mutated_mod.get_global_var('func_604')
const_1413 = relay.const([-1.987641,3.363348,4.872486,2.834591,7.727257,0.820296,0.121097,5.658259,-6.508262,8.426841,0.377282,-9.984727,8.490850,9.190122,0.674396,-3.564820,-9.533865,4.505700,0.101631,-7.103697,-2.415445,-2.587454,-5.231796,-5.846522,-8.135869,2.601038,-3.562543,-3.585637,6.449696,-9.408413,-1.116440,-7.286394,-3.583809,-6.630624,-2.045150,8.554889,-1.420102,-8.167331,8.912490,-2.383531,9.650552,4.661921,9.684587,4.467177,9.849708,-9.534541,-4.284090,-2.396335,-1.177215,-1.035880,-1.723393,9.890444,-7.970309,5.524990,-8.534336,0.990305,8.343159,2.057658,5.282072,6.452620,2.662776,-6.495040,-3.740373,-4.959257,8.266328,6.114971,-4.272014,-8.537598,2.692358,4.092917,2.916138,7.607313,6.325653,-0.322556,2.639246,-5.713264,0.235379,-5.045094,7.016732,-3.989251,7.581628,-1.083817,-5.070076,-3.140487,5.234160,-7.104893,6.480312,3.210362,-5.627256,6.256615,-5.036940,-5.022741,-8.201999,5.704369,-9.933482,-1.151263,-2.920090,3.337124,5.788666,-3.442970,6.464511,-4.994356,-5.979013,-1.968360,1.194456,-4.532057,3.762069,1.608349,9.806978,8.645832,-9.848214,4.282455,1.365638,9.695134,1.853399,5.388998,-3.189650,6.797131,7.972607,-3.571748,8.913569,-9.989483,2.571934,-0.562496,5.965947,-1.175750,1.099533,-8.555815,8.736010,8.597639,4.762087,8.436706,-3.694146,-1.619616,-8.108197,-6.990367,2.029371,-8.399822,-4.436950,0.694249,9.345650,3.594020,8.115464,2.574925,-9.339405,4.751008,3.966837,5.052337,8.601475,2.297335,-0.058658,0.102338,1.224722,7.651686,-8.164427,2.209851,-8.006788,-1.667169,-3.514222,-4.205932,7.080022,-4.902963,3.609917,-7.579550,7.125301,-9.187274,-6.287090,4.282264,-7.022100,1.578741,3.118614,-9.809100,-7.365013,7.550365,-1.716061,8.686206,-8.086471,-0.309271,5.699449,-0.140782,-2.105956,4.384310,2.386049,-3.761404,5.440061,-0.473156,-9.225897,-6.457608,-8.843222,8.964781,-5.838782,-1.236453,-8.277664,-3.414113,9.747716,-8.034730,4.498737,-1.761891,-2.134599,-2.146539,3.132320,-5.299472,5.173854,-3.526927,2.777575,-6.165168,-9.845402,-0.881026,7.973451,-6.998541,6.677715,2.473692,-8.210741,9.590739,-4.305474,-0.387746,8.125853,-7.690151,-5.216896,-8.868180,-8.893421,4.428220,1.762072,-6.387839,-6.900000,6.403740,1.121593,-7.293657,5.180507,4.096349,-1.145523,9.928125,-4.073538,-8.561369,-0.612751,-5.082983,-5.734820,5.112428,6.459320,-4.554723,-9.427167,-0.870894,-4.347300,-1.862620,-6.057074,-5.169166,0.481194,-0.667214,5.872435,-5.384545,0.157084,-3.338279,-6.293100,1.237171,6.713868,8.362962,-2.701917,-8.864086,4.309693,-2.258077,-0.162516,-4.569911,-1.577524,8.027445,9.149529,8.923288,4.054194,-9.082133,1.321514,4.615430,-7.063435,-6.568415,-7.226576,1.043195,1.624573,-7.341815,-9.067412,-3.350085,7.515357,-0.179424,4.116567,-3.628039,-2.504509,0.189075,-2.553018,-1.823104,1.193758,3.850072,3.938097,3.925209,-4.164262,-9.934188,-1.699863,2.126531,5.518649,4.328862,2.100831,4.245102,-7.289641,5.084986,1.343895,0.297879,6.298991,5.785374,-5.617942,7.740281,-2.396878,0.665060,-9.723186,-4.520666,1.410076,6.947821,0.666485,-0.247588,7.473999], dtype = "float64")#candidate|1413|(315,)|const|float64
call_1412 = relay.TupleGetItem(func_601_call(relay.reshape(const_1413.astype('float64'), [7, 5, 9])), 0)
call_1414 = relay.TupleGetItem(func_604_call(relay.reshape(const_1413.astype('float64'), [7, 5, 9])), 0)
output = relay.Tuple([call_1400,call_1410,call_1412,const_1413,])
output2 = relay.Tuple([call_1401,call_1411,call_1414,const_1413,])
func_1420 = relay.Function([], output)
mod['func_1420'] = func_1420
mod = relay.transform.InferType()(mod)
output = func_1420()
func_1421 = relay.Function([], output)
mutated_mod['func_1421'] = func_1421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1439 = relay.var("var_1439", dtype = "int8", shape = (7, 14, 10))#candidate|1439|(7, 14, 10)|var|int8
var_1440 = relay.var("var_1440", dtype = "int8", shape = (7, 14, 10))#candidate|1440|(7, 14, 10)|var|int8
bop_1441 = relay.subtract(var_1439.astype('int8'), relay.reshape(var_1440.astype('int8'), relay.shape_of(var_1439))) # shape=(7, 14, 10)
bop_1460 = relay.less_equal(var_1440.astype('bool'), relay.reshape(var_1439.astype('bool'), relay.shape_of(var_1440))) # shape=(7, 14, 10)
output = relay.Tuple([bop_1441,bop_1460,])
output2 = relay.Tuple([bop_1441,bop_1460,])
func_1468 = relay.Function([var_1439,var_1440,], output)
mod['func_1468'] = func_1468
mod = relay.transform.InferType()(mod)
mutated_mod['func_1468'] = func_1468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mutated_mod.get_global_var('func_1468')
var_1470 = relay.var("var_1470", dtype = "int8", shape = (7, 14, 10))#candidate|1470|(7, 14, 10)|var|int8
var_1471 = relay.var("var_1471", dtype = "int8", shape = (7, 14, 10))#candidate|1471|(7, 14, 10)|var|int8
call_1469 = func_1468_call(var_1470,var_1471,)
output = call_1469
func_1472 = relay.Function([var_1470,var_1471,], output)
mutated_mod['func_1472'] = func_1472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_1482 = relay.TupleGetItem(func_43_call(), 0)
call_1483 = relay.TupleGetItem(func_44_call(), 0)
output = relay.Tuple([call_1482,])
output2 = relay.Tuple([call_1483,])
func_1486 = relay.Function([], output)
mod['func_1486'] = func_1486
mod = relay.transform.InferType()(mod)
mutated_mod['func_1486'] = func_1486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1486_call = mutated_mod.get_global_var('func_1486')
call_1487 = func_1486_call()
output = call_1487
func_1488 = relay.Function([], output)
mutated_mod['func_1488'] = func_1488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1493 = relay.TupleGetItem(func_1066_call(), 1)
call_1494 = relay.TupleGetItem(func_1067_call(), 1)
output = relay.Tuple([call_1493,])
output2 = relay.Tuple([call_1494,])
func_1507 = relay.Function([], output)
mod['func_1507'] = func_1507
mod = relay.transform.InferType()(mod)
mutated_mod['func_1507'] = func_1507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1507_call = mutated_mod.get_global_var('func_1507')
call_1508 = func_1507_call()
output = call_1508
func_1509 = relay.Function([], output)
mutated_mod['func_1509'] = func_1509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_1523 = func_665_call()
call_1524 = func_665_call()
func_1507_call = mod.get_global_var('func_1507')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_1531 = relay.TupleGetItem(func_1507_call(), 0)
call_1532 = relay.TupleGetItem(func_1509_call(), 0)
output = relay.Tuple([call_1523,call_1531,])
output2 = relay.Tuple([call_1524,call_1532,])
func_1539 = relay.Function([], output)
mod['func_1539'] = func_1539
mod = relay.transform.InferType()(mod)
output = func_1539()
func_1540 = relay.Function([], output)
mutated_mod['func_1540'] = func_1540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_905_call = mod.get_global_var('func_905')
func_906_call = mutated_mod.get_global_var('func_906')
call_1570 = relay.TupleGetItem(func_905_call(), 1)
call_1571 = relay.TupleGetItem(func_906_call(), 1)
output = relay.Tuple([call_1570,])
output2 = relay.Tuple([call_1571,])
func_1578 = relay.Function([], output)
mod['func_1578'] = func_1578
mod = relay.transform.InferType()(mod)
output = func_1578()
func_1579 = relay.Function([], output)
mutated_mod['func_1579'] = func_1579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_372_call = mutated_mod.get_global_var('func_372')
call_1580 = relay.TupleGetItem(func_371_call(), 0)
call_1581 = relay.TupleGetItem(func_372_call(), 0)
output = relay.Tuple([call_1580,])
output2 = relay.Tuple([call_1581,])
func_1595 = relay.Function([], output)
mod['func_1595'] = func_1595
mod = relay.transform.InferType()(mod)
mutated_mod['func_1595'] = func_1595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1595_call = mutated_mod.get_global_var('func_1595')
call_1596 = func_1595_call()
output = call_1596
func_1597 = relay.Function([], output)
mutated_mod['func_1597'] = func_1597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1780 = relay.var("var_1780", dtype = "float64", shape = (16, 14, 3))#candidate|1780|(16, 14, 3)|var|float64
var_1781 = relay.var("var_1781", dtype = "float64", shape = (16, 14, 3))#candidate|1781|(16, 14, 3)|var|float64
bop_1782 = relay.mod(var_1780.astype('float64'), relay.reshape(var_1781.astype('float64'), relay.shape_of(var_1780))) # shape=(16, 14, 3)
bop_1788 = relay.bitwise_or(var_1781.astype('int64'), relay.reshape(bop_1782.astype('int64'), relay.shape_of(var_1781))) # shape=(16, 14, 3)
bop_1796 = relay.less_equal(bop_1782.astype('bool'), relay.reshape(bop_1788.astype('bool'), relay.shape_of(bop_1782))) # shape=(16, 14, 3)
output = bop_1796
output2 = bop_1796
func_1812 = relay.Function([var_1780,var_1781,], output)
mod['func_1812'] = func_1812
mod = relay.transform.InferType()(mod)
var_1813 = relay.var("var_1813", dtype = "float64", shape = (16, 14, 3))#candidate|1813|(16, 14, 3)|var|float64
var_1814 = relay.var("var_1814", dtype = "float64", shape = (16, 14, 3))#candidate|1814|(16, 14, 3)|var|float64
output = func_1812(var_1813,var_1814,)
func_1815 = relay.Function([var_1813,var_1814,], output)
mutated_mod['func_1815'] = func_1815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_1831 = relay.TupleGetItem(func_1578_call(), 0)
call_1832 = relay.TupleGetItem(func_1579_call(), 0)
output = relay.Tuple([call_1831,])
output2 = relay.Tuple([call_1832,])
func_1836 = relay.Function([], output)
mod['func_1836'] = func_1836
mod = relay.transform.InferType()(mod)
mutated_mod['func_1836'] = func_1836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mutated_mod.get_global_var('func_1836')
call_1837 = func_1836_call()
output = call_1837
func_1838 = relay.Function([], output)
mutated_mod['func_1838'] = func_1838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_1851 = relay.TupleGetItem(func_1384_call(), 1)
call_1852 = relay.TupleGetItem(func_1385_call(), 1)
uop_1860 = relay.asinh(call_1851.astype('float64')) # shape=(8, 6, 3)
uop_1862 = relay.asinh(call_1852.astype('float64')) # shape=(8, 6, 3)
output = uop_1860
output2 = uop_1862
func_1872 = relay.Function([], output)
mod['func_1872'] = func_1872
mod = relay.transform.InferType()(mod)
mutated_mod['func_1872'] = func_1872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1872_call = mutated_mod.get_global_var('func_1872')
call_1873 = func_1872_call()
output = call_1873
func_1874 = relay.Function([], output)
mutated_mod['func_1874'] = func_1874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1486_call = mod.get_global_var('func_1486')
func_1488_call = mutated_mod.get_global_var('func_1488')
call_1897 = relay.TupleGetItem(func_1486_call(), 0)
call_1898 = relay.TupleGetItem(func_1488_call(), 0)
func_1468_call = mod.get_global_var('func_1468')
func_1472_call = mutated_mod.get_global_var('func_1472')
const_1900 = relay.const([-4,-6,9,4,4,-5,-5,-1,-8,-8,3,1,-4,8,-8,-7,-1,-7,6,4,-7,2,9,-4,-8,-3,6,-8,7,-6,-10,5,-10,4,4,-8,4,-2,5,9,6,-6,-10,-5,-10,-1,-5,-4,1,-1,-5,-5,-10,3,10,-1,-5,-1,3,1,-6,-6,9,6,-7,4,-7,-10,-3,-2,-4,-1,2,-6,-7,-10,9,4,7,9,-8,-5,-9,1,9,-7,8,4,10,-7,-6,10,5,7,-5,-8,-7,-9,10,-2,-5,2,9,-3,5,-5,-7,10,10,-5,-4,-9,6,9,8,-4,10,-6,3,7,-9,1,-9,7,-8,6,5,-3,3,-6,-3,4,8,2,9,-9,6,-4,3,-6,-6,-5,8,-2,1,-4,10,-10,9,-10,-5,-9,-1,6,6,6,-4,5,-8,7,-4,-6,2,-5,-9,-1,5,5,-3,-1,3,-3,6,-3,4,4,10,4,-5,4,3,-10,5,6,6,-9,5,-8,-9,-7,-10,10,-10,-1,-3,-1,-10,9,-6,-5,4,-1,-5,10,-9,-6,-8,8,-1,5,6,4,-8,-3,-8,7,2,1,-7,1,7,-7,-4,-5,4,10,-7,-5,-5,-9,7,-5,4,-6,8,-10,-5,-2,-2,3,-6,-5,7,-9,-10,-7,4,6,9,-10,-9,2,7,-6,-10,4,-4,-10,-3,-3,-7,8,4,9,5,-8,10,-2,-3,-4,9,-10,9,2,-9,2,7,5,-7,-7,-4,9,-7,8,1,-3,-2,-1,-3,4,2,-7,-10,-2,-7,-9,4,-4,1,10,-6,4,8,-2,10,4,-1,-3,-3,6,-6,2,3,2,8,7,9,-5,-9,-7,-2,-3,1,-2,2,6,-2,-1,-4,10,7,9,1,2,-10,8,-1,5,-6,-8,-8,10,3,-7,-4,-9,8,-8,2,8,-2,-8,-7,7,-1,-6,7,8,-5,7,4,2,-3,-1,-2,-1,-7,-9,1,10,9,10,1,-8,-3,-8,8,-8,-10,-10,-8,-9,7,9,-4,-9,-6,10,6,-2,10,5,9,3,-4,6,-1,7,2,7,7,-8,-2,8,6,-9,1,-8,-9,2,3,5,2,3,10,-10,5,-9,8,-7,9,-5,-9,-3,-6,-2,-4,5,9,-1,-8,-5,3,-2,-3,-9,2,-5,9,-9,-4,3,8,-5,8,7,9,10,7,-4,8,3,7,3,7,-10,5,-10,-3,-3,2,-8,-3,4,-10,-10,-2,-10,-2,-3,-9,1,-6,8,-7,10,-10,-2,-7,-2,-5,-7,7,5,2,-10,1,-4,2,6,-4,9,-7,6,-9,2,1,2,9,-9,5,2,9,-3,-10,10,-7,10,2,-9,4,-7,-3,3,4,2,1,5,2,3,-7,7,-4,8,-3,-8,-10,-2,-2,6,-8,7,-6,9,10,-1,-7,-9,-5,8,5,7,-9,-2,-5,-8,9,-2,6,3,5,3,2,2,10,-9,4,-4,-4,-3,-5,10,6,8,-5,-10,-5,-2,-4,8,4,2,-3,10,-3,4,6,1,-8,-6,2,-3,6,5,10,7,-3,2,3,3,9,-3,3,-8,5,-4,-7,-5,4,4,-5,10,8,-4,-5,9,4,8,-8,-8,8,1,1,-8,-7,-1,-3,-10,2,-6,-3,-1,-8,2,-5,2,-2,-1,-10,10,-3,-10,5,-9,-6,-5,9,3,5,5,8,5,2,-5,-5,8,9,4,7,-10,-8,1,-9,5,2,5,-9,9,6,-4,8,-9,-1,8,6,-3,3,2,-8,7,8,9,-2,-1,-10,-9,6,-5,1,-4,-3,3,-1,-7,1,1,4,1,8,-4,4,1,1,6,1,-3,9,10,1,10,-1,-3,1,-1,-5,-1,8,8,8,-3,6,-5,2,-4,3,4,5,9,3,-6,4,-5,7,-4,-9,-6,-3,-9,-6,-5,-7,1,8,7,-9,-8,-2,7,-10,6,6,-6,3,-5,10,-6,-10,-10,-8,-10,2,1,-2,-3,7,-4,1,3,5,1,-9,4,-5,-8,1,-1,5,-7,8,1,-9,-10,5,4,-1,-7,3,10,6,-2,-5,2,-3,-8,8,8,-2,-10,2,-7,1,5,-7,-4,2,-10,9,8,-10,4,-4,7,-1,-5,1,7,-7,-7,-7,7,-7,8,-10,9,-3,-8,-7,6,-2,-2,4,6,-2,-6,-6,-2,-2,10,-7,2,3,-8,4,10,-7,-10,2,2,1,-4,-3,-1,-7,6,9,5,-7,4,-8,-9,7,-4,9,4,6,-8,-4,-5,-9,6,-9,2,3,9,-2,-6,2,-9,-10,3,-1,-6,-8,-8,1,5,-3,8,-4,-9,9,-7,-9,-4,-9,4,5,-7,-10,10,-6,-3,-3,-7,10,-3,-1,-10,7,9,10,-8,-1,8,9,-5,2,-4,-9,-1,-4,7,-7,8,-2,1,-10,7,-5,5,2,7,-5,10,-1,-2,9,4,8,-1,-9,-2,-3,-2,-3,-2,-4,2,1,5,5,9,-7,-10,-5,7,5,-2,-8,9,-1,10,-2,-7,4,-7,9,5,-6,-3,7,-4,-9,5,3,1,-6,9,1,3,8,-6,-3,-7,5,-2,9,-7,4,-8], dtype = "int8")#candidate|1900|(980,)|const|int8
call_1899 = relay.TupleGetItem(func_1468_call(relay.reshape(const_1900.astype('int8'), [7, 14, 10]), relay.reshape(const_1900.astype('int8'), [7, 14, 10]), ), 0)
call_1901 = relay.TupleGetItem(func_1472_call(relay.reshape(const_1900.astype('int8'), [7, 14, 10]), relay.reshape(const_1900.astype('int8'), [7, 14, 10]), ), 0)
output = relay.Tuple([call_1897,call_1899,const_1900,])
output2 = relay.Tuple([call_1898,call_1901,const_1900,])
func_1903 = relay.Function([], output)
mod['func_1903'] = func_1903
mod = relay.transform.InferType()(mod)
output = func_1903()
func_1904 = relay.Function([], output)
mutated_mod['func_1904'] = func_1904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1242_call = mod.get_global_var('func_1242')
func_1243_call = mutated_mod.get_global_var('func_1243')
call_1947 = relay.TupleGetItem(func_1242_call(), 0)
call_1948 = relay.TupleGetItem(func_1243_call(), 0)
func_1468_call = mod.get_global_var('func_1468')
func_1472_call = mutated_mod.get_global_var('func_1472')
const_1951 = relay.const([[-7,9,-2,6,10,-9,9,-10,-2,-8,6,6,6,-1,-7,7,2,7,-8,5,4,-9,-10,4,2,10,1,-9,1,10,-9,-5,2,6,-4,10,-4,10,7,-5,-8,-9,10,-6,10,-10,-4,1,-6,7,-9,-7,5,-7,3,-1,7,-10,8,8,1,-6,-3,-10,-3,9,4,-4,-3,-1],[-5,9,-10,10,4,-5,-8,-9,-5,1,8,9,6,-2,6,-7,-4,6,-5,2,-6,4,8,-8,2,3,9,-1,7,6,-7,-8,-1,-6,1,-6,7,-3,-5,9,10,7,-8,-4,4,-10,-5,1,-3,2,5,2,-2,-8,-8,4,1,-9,2,3,5,6,-2,-6,5,8,8,1,-5,-6],[-6,-10,2,3,3,1,-9,-8,5,7,-1,-10,-5,8,-2,2,3,-4,-3,10,-4,4,9,6,5,5,-6,-5,-8,10,7,5,-6,-6,7,-5,-8,-4,-2,-2,2,4,-2,1,-4,-9,3,-3,-2,-9,7,-10,4,6,2,6,-5,4,-1,-9,-3,6,-2,-8,9,5,-1,3,-9,-3],[6,5,-10,-1,3,6,6,-6,10,-5,1,-5,5,10,-8,6,-4,5,1,5,-6,10,2,2,-9,-2,-9,5,-6,9,-1,6,-6,-9,7,-1,-6,6,-8,-1,7,9,10,-9,2,8,3,-7,7,5,2,8,8,8,-10,3,2,-3,-8,1,-2,-3,5,3,-6,7,-4,-7,-6,-8],[-4,6,-5,-10,-1,2,2,-8,5,-8,-10,10,9,-8,-2,3,-7,2,8,-4,-5,-2,-4,-3,-2,2,5,5,9,8,10,-5,-10,9,-3,7,-1,-4,-9,-4,7,2,7,-7,-3,-6,-8,-1,10,-4,-3,10,10,-9,-10,-2,10,-10,-3,3,-1,10,10,6,9,4,3,-8,-9,-3],[-3,-7,-7,9,-1,6,9,-1,-5,-2,1,10,1,6,-6,-10,-4,-1,-3,10,1,6,-4,-3,-8,-7,3,2,5,8,8,8,7,2,-10,-2,2,2,-8,7,2,-4,9,-10,5,6,6,-3,3,-10,8,3,3,6,-2,7,6,10,-9,-10,6,6,-9,-2,-4,7,-6,4,8,9],[2,8,9,-3,-6,-3,-10,2,-9,4,-7,-9,-1,-2,-4,3,-9,6,-6,-8,-4,5,-3,-5,-1,10,-10,-3,-4,2,-6,-6,3,-4,-10,1,7,-10,-3,5,-2,4,-5,-4,1,-7,-2,-3,4,6,-2,-10,5,1,4,3,-10,9,5,-4,-3,5,-5,-2,8,5,-7,10,6,9],[9,8,-9,5,-2,2,2,-1,-8,6,-1,7,-7,-9,10,2,7,1,9,-2,6,8,-1,-5,-4,-8,-1,4,-4,10,8,-5,4,-3,-1,3,8,7,2,10,-10,-10,3,-8,6,3,10,1,6,-6,-8,6,10,-5,3,8,-6,-6,-4,-6,-2,6,-10,7,-4,5,-4,10,-4,6],[-2,5,-5,-7,-5,1,3,-3,-6,-1,5,-4,6,-1,-9,-10,-3,9,5,-9,10,-2,-7,7,5,-6,1,7,4,-10,7,3,6,-8,-9,-5,-6,3,-10,-1,-6,3,-8,7,-8,-4,8,5,-1,-6,1,-1,-8,4,-5,-1,3,10,-6,-3,3,-9,7,6,-8,-2,6,8,8,-10],[-7,5,6,-1,-2,9,6,-8,-4,2,-9,-3,-8,8,2,-10,-10,-1,10,-1,10,8,7,-8,-4,-3,5,-7,8,2,3,1,8,-10,-5,1,-10,-1,6,-6,-10,-3,-8,9,-6,-7,2,2,1,-6,-2,4,-7,7,-2,6,-5,-6,-1,-8,-3,-8,3,5,-2,2,8,-6,-1,-10],[7,7,-5,6,10,-3,-8,-10,-8,7,-5,-6,7,8,4,-10,-4,-4,2,4,-3,-4,5,2,-8,7,-9,8,2,1,6,8,10,8,3,3,7,7,-3,9,-9,7,-9,2,-1,-7,6,-6,9,-8,5,8,-9,6,-3,5,1,-10,7,2,-8,-4,6,3,-3,8,2,-10,1,5],[2,8,2,-6,1,-6,8,-5,9,8,9,-1,-1,4,-6,-6,10,4,3,10,7,-4,5,7,-7,7,-2,9,-9,5,-3,-6,4,-5,-9,10,-1,10,4,-4,-4,-9,9,-2,-10,-8,8,5,5,1,-5,9,-7,-5,-8,-4,-8,-3,-2,9,-9,-4,-2,-1,9,10,-2,1,10,2],[3,-2,-10,1,-9,-1,-7,7,6,-6,-7,8,-7,-1,-4,-5,-9,-9,-4,-9,3,3,-9,-1,6,9,-6,-7,9,-10,-10,-2,-3,-8,-3,2,-8,-6,-3,1,6,7,8,-5,-1,-10,9,10,4,1,-4,3,-9,-9,10,4,-2,8,-6,-9,-5,7,-2,7,2,5,-2,8,-1,-4],[8,5,-10,2,-5,2,-1,-5,4,2,10,4,8,-3,-8,8,-6,8,7,1,-2,-1,10,7,-7,-1,-6,1,6,3,-1,-10,7,5,7,-5,7,-1,3,4,-8,-7,10,8,-1,10,3,1,9,5,1,6,-7,6,6,2,-5,-6,-8,-2,7,-3,3,2,1,9,-7,-10,1,-6]], dtype = "int8")#candidate|1951|(14, 70)|const|int8
call_1950 = relay.TupleGetItem(func_1468_call(relay.reshape(const_1951.astype('int8'), [7, 14, 10]), relay.reshape(const_1951.astype('int8'), [7, 14, 10]), ), 0)
call_1952 = relay.TupleGetItem(func_1472_call(relay.reshape(const_1951.astype('int8'), [7, 14, 10]), relay.reshape(const_1951.astype('int8'), [7, 14, 10]), ), 0)
uop_1953 = relay.exp(const_1951.astype('float64')) # shape=(14, 70)
uop_1958 = relay.atanh(uop_1953.astype('float64')) # shape=(14, 70)
uop_1960 = relay.sigmoid(uop_1953.astype('float32')) # shape=(14, 70)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1963 = relay.TupleGetItem(func_1066_call(), 2)
call_1964 = relay.TupleGetItem(func_1067_call(), 2)
uop_1965 = relay.sin(uop_1960.astype('float32')) # shape=(14, 70)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_1967 = func_665_call()
call_1968 = func_665_call()
func_1326_call = mod.get_global_var('func_1326')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_1974 = relay.TupleGetItem(func_1326_call(relay.reshape(call_1967.astype('bool'), [8, 6, 3])), 1)
call_1975 = relay.TupleGetItem(func_1329_call(relay.reshape(call_1967.astype('bool'), [8, 6, 3])), 1)
func_1903_call = mod.get_global_var('func_1903')
func_1904_call = mutated_mod.get_global_var('func_1904')
call_1979 = relay.TupleGetItem(func_1903_call(), 1)
call_1980 = relay.TupleGetItem(func_1904_call(), 1)
func_1420_call = mod.get_global_var('func_1420')
func_1421_call = mutated_mod.get_global_var('func_1421')
call_1983 = relay.TupleGetItem(func_1420_call(), 0)
call_1984 = relay.TupleGetItem(func_1421_call(), 0)
func_905_call = mod.get_global_var('func_905')
func_906_call = mutated_mod.get_global_var('func_906')
call_1985 = relay.TupleGetItem(func_905_call(), 2)
call_1986 = relay.TupleGetItem(func_906_call(), 2)
output = relay.Tuple([call_1947,call_1950,uop_1958,call_1963,uop_1965,call_1967,call_1974,call_1979,call_1983,call_1985,])
output2 = relay.Tuple([call_1948,call_1952,uop_1958,call_1964,uop_1965,call_1968,call_1975,call_1980,call_1984,call_1986,])
func_1989 = relay.Function([], output)
mod['func_1989'] = func_1989
mod = relay.transform.InferType()(mod)
output = func_1989()
func_1990 = relay.Function([], output)
mutated_mod['func_1990'] = func_1990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_67_call = mod.get_global_var('func_67')
func_68_call = mutated_mod.get_global_var('func_68')
call_2007 = relay.TupleGetItem(func_67_call(), 0)
call_2008 = relay.TupleGetItem(func_68_call(), 0)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_2011 = relay.TupleGetItem(func_1384_call(), 1)
call_2012 = relay.TupleGetItem(func_1385_call(), 1)
output = relay.Tuple([call_2007,call_2011,])
output2 = relay.Tuple([call_2008,call_2012,])
func_2027 = relay.Function([], output)
mod['func_2027'] = func_2027
mod = relay.transform.InferType()(mod)
output = func_2027()
func_2028 = relay.Function([], output)
mutated_mod['func_2028'] = func_2028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_416_call = mod.get_global_var('func_416')
func_418_call = mutated_mod.get_global_var('func_418')
call_2031 = relay.TupleGetItem(func_416_call(), 0)
call_2032 = relay.TupleGetItem(func_418_call(), 0)
var_2034 = relay.var("var_2034", dtype = "bool", shape = (8, 6, 3))#candidate|2034|(8, 6, 3)|var|bool
bop_2035 = relay.subtract(call_2031.astype('int16'), relay.reshape(var_2034.astype('int16'), relay.shape_of(call_2031))) # shape=(8, 6, 3)
bop_2038 = relay.subtract(call_2032.astype('int16'), relay.reshape(var_2034.astype('int16'), relay.shape_of(call_2032))) # shape=(8, 6, 3)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_2043 = func_665_call()
call_2044 = func_665_call()
func_905_call = mod.get_global_var('func_905')
func_906_call = mutated_mod.get_global_var('func_906')
call_2053 = relay.TupleGetItem(func_905_call(), 1)
call_2054 = relay.TupleGetItem(func_906_call(), 1)
var_2058 = relay.var("var_2058", dtype = "bool", shape = (8, 6, 3))#candidate|2058|(8, 6, 3)|var|bool
bop_2059 = relay.power(var_2034.astype('float32'), relay.reshape(var_2058.astype('float32'), relay.shape_of(var_2034))) # shape=(8, 6, 3)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_2073 = relay.TupleGetItem(func_1578_call(), 0)
call_2074 = relay.TupleGetItem(func_1579_call(), 0)
bop_2089 = relay.floor_divide(bop_2059.astype('float32'), relay.reshape(var_2034.astype('float32'), relay.shape_of(bop_2059))) # shape=(8, 6, 3)
func_1326_call = mod.get_global_var('func_1326')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_2092 = relay.TupleGetItem(func_1326_call(relay.reshape(bop_2089.astype('bool'), [8, 6, 3])), 2)
call_2093 = relay.TupleGetItem(func_1329_call(relay.reshape(bop_2089.astype('bool'), [8, 6, 3])), 2)
func_1989_call = mod.get_global_var('func_1989')
func_1990_call = mutated_mod.get_global_var('func_1990')
call_2101 = relay.TupleGetItem(func_1989_call(), 9)
call_2102 = relay.TupleGetItem(func_1990_call(), 9)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_2114 = relay.TupleGetItem(func_1578_call(), 0)
call_2115 = relay.TupleGetItem(func_1579_call(), 0)
output = relay.Tuple([bop_2035,call_2043,call_2053,call_2073,bop_2089,call_2092,call_2101,call_2114,])
output2 = relay.Tuple([bop_2038,call_2044,call_2054,call_2074,bop_2089,call_2093,call_2102,call_2115,])
func_2128 = relay.Function([var_2034,var_2058,], output)
mod['func_2128'] = func_2128
mod = relay.transform.InferType()(mod)
mutated_mod['func_2128'] = func_2128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2128_call = mutated_mod.get_global_var('func_2128')
var_2130 = relay.var("var_2130", dtype = "bool", shape = (8, 6, 3))#candidate|2130|(8, 6, 3)|var|bool
var_2131 = relay.var("var_2131", dtype = "bool", shape = (8, 6, 3))#candidate|2131|(8, 6, 3)|var|bool
call_2129 = func_2128_call(var_2130,var_2131,)
output = call_2129
func_2132 = relay.Function([var_2130,var_2131,], output)
mutated_mod['func_2132'] = func_2132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1354_call = mod.get_global_var('func_1354')
func_1355_call = mutated_mod.get_global_var('func_1355')
call_2203 = relay.TupleGetItem(func_1354_call(), 0)
call_2204 = relay.TupleGetItem(func_1355_call(), 0)
func_1836_call = mod.get_global_var('func_1836')
func_1838_call = mutated_mod.get_global_var('func_1838')
call_2205 = relay.TupleGetItem(func_1836_call(), 0)
call_2206 = relay.TupleGetItem(func_1838_call(), 0)
var_2223 = relay.var("var_2223", dtype = "float64", shape = (6, 9, 6))#candidate|2223|(6, 9, 6)|var|float64
bop_2224 = relay.logical_xor(call_2203.astype('uint16'), relay.reshape(var_2223.astype('uint16'), relay.shape_of(call_2203))) # shape=(6, 9, 6)
bop_2227 = relay.logical_xor(call_2204.astype('uint16'), relay.reshape(var_2223.astype('uint16'), relay.shape_of(call_2204))) # shape=(6, 9, 6)
func_2027_call = mod.get_global_var('func_2027')
func_2028_call = mutated_mod.get_global_var('func_2028')
call_2237 = relay.TupleGetItem(func_2027_call(), 1)
call_2238 = relay.TupleGetItem(func_2028_call(), 1)
output = relay.Tuple([call_2205,bop_2224,call_2237,])
output2 = relay.Tuple([call_2206,bop_2227,call_2238,])
func_2244 = relay.Function([var_2223,], output)
mod['func_2244'] = func_2244
mod = relay.transform.InferType()(mod)
mutated_mod['func_2244'] = func_2244
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2245 = relay.var("var_2245", dtype = "float64", shape = (6, 9, 6))#candidate|2245|(6, 9, 6)|var|float64
func_2244_call = mutated_mod.get_global_var('func_2244')
call_2246 = func_2244_call(var_2245)
output = call_2246
func_2247 = relay.Function([var_2245], output)
mutated_mod['func_2247'] = func_2247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2275 = relay.var("var_2275", dtype = "uint16", shape = (8, 6, 13))#candidate|2275|(8, 6, 13)|var|uint16
var_2276 = relay.var("var_2276", dtype = "uint16", shape = (8, 6, 13))#candidate|2276|(8, 6, 13)|var|uint16
bop_2277 = relay.right_shift(var_2275.astype('uint16'), relay.reshape(var_2276.astype('uint16'), relay.shape_of(var_2275))) # shape=(8, 6, 13)
uop_2285 = relay.log2(bop_2277.astype('float32')) # shape=(8, 6, 13)
var_2311 = relay.var("var_2311", dtype = "float32", shape = (8, 6, 13))#candidate|2311|(8, 6, 13)|var|float32
bop_2312 = relay.less(uop_2285.astype('bool'), relay.reshape(var_2311.astype('bool'), relay.shape_of(uop_2285))) # shape=(8, 6, 13)
uop_2321 = relay.atanh(var_2311.astype('float32')) # shape=(8, 6, 13)
output = relay.Tuple([bop_2312,uop_2321,])
output2 = relay.Tuple([bop_2312,uop_2321,])
func_2325 = relay.Function([var_2275,var_2276,var_2311,], output)
mod['func_2325'] = func_2325
mod = relay.transform.InferType()(mod)
mutated_mod['func_2325'] = func_2325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2325_call = mutated_mod.get_global_var('func_2325')
var_2327 = relay.var("var_2327", dtype = "uint16", shape = (8, 6, 13))#candidate|2327|(8, 6, 13)|var|uint16
var_2328 = relay.var("var_2328", dtype = "uint16", shape = (8, 6, 13))#candidate|2328|(8, 6, 13)|var|uint16
var_2329 = relay.var("var_2329", dtype = "float32", shape = (8, 6, 13))#candidate|2329|(8, 6, 13)|var|float32
call_2326 = func_2325_call(var_2327,var_2328,var_2329,)
output = call_2326
func_2330 = relay.Function([var_2327,var_2328,var_2329,], output)
mutated_mod['func_2330'] = func_2330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2027_call = mod.get_global_var('func_2027')
func_2028_call = mutated_mod.get_global_var('func_2028')
call_2347 = relay.TupleGetItem(func_2027_call(), 0)
call_2348 = relay.TupleGetItem(func_2028_call(), 0)
func_826_call = mod.get_global_var('func_826')
func_829_call = mutated_mod.get_global_var('func_829')
var_2350 = relay.var("var_2350", dtype = "float32", shape = (1176,))#candidate|2350|(1176,)|var|float32
call_2349 = relay.TupleGetItem(func_826_call(relay.reshape(var_2350.astype('float32'), [1176,])), 5)
call_2351 = relay.TupleGetItem(func_829_call(relay.reshape(var_2350.astype('float32'), [1176,])), 5)
func_905_call = mod.get_global_var('func_905')
func_906_call = mutated_mod.get_global_var('func_906')
call_2374 = relay.TupleGetItem(func_905_call(), 1)
call_2375 = relay.TupleGetItem(func_906_call(), 1)
output = relay.Tuple([call_2347,call_2349,var_2350,call_2374,])
output2 = relay.Tuple([call_2348,call_2351,var_2350,call_2375,])
func_2397 = relay.Function([var_2350,], output)
mod['func_2397'] = func_2397
mod = relay.transform.InferType()(mod)
mutated_mod['func_2397'] = func_2397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2398 = relay.var("var_2398", dtype = "float32", shape = (1176,))#candidate|2398|(1176,)|var|float32
func_2397_call = mutated_mod.get_global_var('func_2397')
call_2399 = func_2397_call(var_2398)
output = call_2399
func_2400 = relay.Function([var_2398], output)
mutated_mod['func_2400'] = func_2400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mod.get_global_var('func_1836')
func_1838_call = mutated_mod.get_global_var('func_1838')
call_2538 = relay.TupleGetItem(func_1836_call(), 0)
call_2539 = relay.TupleGetItem(func_1838_call(), 0)
output = relay.Tuple([call_2538,])
output2 = relay.Tuple([call_2539,])
func_2547 = relay.Function([], output)
mod['func_2547'] = func_2547
mod = relay.transform.InferType()(mod)
output = func_2547()
func_2548 = relay.Function([], output)
mutated_mod['func_2548'] = func_2548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2027_call = mod.get_global_var('func_2027')
func_2028_call = mutated_mod.get_global_var('func_2028')
call_2615 = relay.TupleGetItem(func_2027_call(), 0)
call_2616 = relay.TupleGetItem(func_2028_call(), 0)
output = relay.Tuple([call_2615,])
output2 = relay.Tuple([call_2616,])
func_2623 = relay.Function([], output)
mod['func_2623'] = func_2623
mod = relay.transform.InferType()(mod)
output = func_2623()
func_2624 = relay.Function([], output)
mutated_mod['func_2624'] = func_2624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1112_call = mod.get_global_var('func_1112')
func_1114_call = mutated_mod.get_global_var('func_1114')
call_2648 = func_1112_call()
call_2649 = func_1112_call()
func_1486_call = mod.get_global_var('func_1486')
func_1488_call = mutated_mod.get_global_var('func_1488')
call_2652 = relay.TupleGetItem(func_1486_call(), 0)
call_2653 = relay.TupleGetItem(func_1488_call(), 0)
uop_2655 = relay.cos(call_2652.astype('float32')) # shape=(8, 6, 3)
uop_2657 = relay.cos(call_2653.astype('float32')) # shape=(8, 6, 3)
func_2128_call = mod.get_global_var('func_2128')
func_2132_call = mutated_mod.get_global_var('func_2132')
call_2658 = relay.TupleGetItem(func_2128_call(relay.reshape(uop_2655.astype('bool'), [8, 6, 3]), relay.reshape(call_2648.astype('bool'), [8, 6, 3]), ), 5)
call_2659 = relay.TupleGetItem(func_2132_call(relay.reshape(uop_2655.astype('bool'), [8, 6, 3]), relay.reshape(call_2648.astype('bool'), [8, 6, 3]), ), 5)
uop_2681 = relay.exp(uop_2655.astype('float32')) # shape=(8, 6, 3)
uop_2683 = relay.exp(uop_2657.astype('float32')) # shape=(8, 6, 3)
func_1354_call = mod.get_global_var('func_1354')
func_1355_call = mutated_mod.get_global_var('func_1355')
call_2694 = relay.TupleGetItem(func_1354_call(), 0)
call_2695 = relay.TupleGetItem(func_1355_call(), 0)
output = relay.Tuple([call_2648,call_2658,uop_2681,call_2694,])
output2 = relay.Tuple([call_2649,call_2659,uop_2683,call_2695,])
func_2712 = relay.Function([], output)
mod['func_2712'] = func_2712
mod = relay.transform.InferType()(mod)
mutated_mod['func_2712'] = func_2712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2712_call = mutated_mod.get_global_var('func_2712')
call_2713 = func_2712_call()
output = call_2713
func_2714 = relay.Function([], output)
mutated_mod['func_2714'] = func_2714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1595_call = mod.get_global_var('func_1595')
func_1597_call = mutated_mod.get_global_var('func_1597')
call_2757 = relay.TupleGetItem(func_1595_call(), 0)
call_2758 = relay.TupleGetItem(func_1597_call(), 0)
output = relay.Tuple([call_2757,])
output2 = relay.Tuple([call_2758,])
func_2792 = relay.Function([], output)
mod['func_2792'] = func_2792
mod = relay.transform.InferType()(mod)
mutated_mod['func_2792'] = func_2792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2792_call = mutated_mod.get_global_var('func_2792')
call_2793 = func_2792_call()
output = call_2793
func_2794 = relay.Function([], output)
mutated_mod['func_2794'] = func_2794
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2816 = relay.var("var_2816", dtype = "float64", shape = (8, 16, 8))#candidate|2816|(8, 16, 8)|var|float64
uop_2817 = relay.asinh(var_2816.astype('float64')) # shape=(8, 16, 8)
output = relay.Tuple([uop_2817,])
output2 = relay.Tuple([uop_2817,])
func_2820 = relay.Function([var_2816,], output)
mod['func_2820'] = func_2820
mod = relay.transform.InferType()(mod)
mutated_mod['func_2820'] = func_2820
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2821 = relay.var("var_2821", dtype = "float64", shape = (8, 16, 8))#candidate|2821|(8, 16, 8)|var|float64
func_2820_call = mutated_mod.get_global_var('func_2820')
call_2822 = func_2820_call(var_2821)
output = call_2822
func_2823 = relay.Function([var_2821], output)
mutated_mod['func_2823'] = func_2823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1112_call = mod.get_global_var('func_1112')
func_1114_call = mutated_mod.get_global_var('func_1114')
call_2912 = func_1112_call()
call_2913 = func_1112_call()
uop_2926 = relay.acosh(call_2912.astype('float64')) # shape=(8, 6, 3)
uop_2928 = relay.acosh(call_2913.astype('float64')) # shape=(8, 6, 3)
output = relay.Tuple([uop_2926,])
output2 = relay.Tuple([uop_2928,])
func_2934 = relay.Function([], output)
mod['func_2934'] = func_2934
mod = relay.transform.InferType()(mod)
mutated_mod['func_2934'] = func_2934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2934_call = mutated_mod.get_global_var('func_2934')
call_2935 = func_2934_call()
output = call_2935
func_2936 = relay.Function([], output)
mutated_mod['func_2936'] = func_2936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mod.get_global_var('func_1836')
func_1838_call = mutated_mod.get_global_var('func_1838')
call_2945 = relay.TupleGetItem(func_1836_call(), 0)
call_2946 = relay.TupleGetItem(func_1838_call(), 0)
var_2966 = relay.var("var_2966", dtype = "bool", shape = (8, 6, 3))#candidate|2966|(8, 6, 3)|var|bool
bop_2967 = relay.less(call_2945.astype('bool'), relay.reshape(var_2966.astype('bool'), relay.shape_of(call_2945))) # shape=(8, 6, 3)
bop_2970 = relay.less(call_2946.astype('bool'), relay.reshape(var_2966.astype('bool'), relay.shape_of(call_2946))) # shape=(8, 6, 3)
output = relay.Tuple([bop_2967,])
output2 = relay.Tuple([bop_2970,])
func_2996 = relay.Function([var_2966,], output)
mod['func_2996'] = func_2996
mod = relay.transform.InferType()(mod)
mutated_mod['func_2996'] = func_2996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2997 = relay.var("var_2997", dtype = "bool", shape = (8, 6, 3))#candidate|2997|(8, 6, 3)|var|bool
func_2996_call = mutated_mod.get_global_var('func_2996')
call_2998 = func_2996_call(var_2997)
output = call_2998
func_2999 = relay.Function([var_2997], output)
mutated_mod['func_2999'] = func_2999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2934_call = mod.get_global_var('func_2934')
func_2936_call = mutated_mod.get_global_var('func_2936')
call_3094 = relay.TupleGetItem(func_2934_call(), 0)
call_3095 = relay.TupleGetItem(func_2936_call(), 0)
output = relay.Tuple([call_3094,])
output2 = relay.Tuple([call_3095,])
func_3117 = relay.Function([], output)
mod['func_3117'] = func_3117
mod = relay.transform.InferType()(mod)
mutated_mod['func_3117'] = func_3117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3117_call = mutated_mod.get_global_var('func_3117')
call_3118 = func_3117_call()
output = call_3118
func_3119 = relay.Function([], output)
mutated_mod['func_3119'] = func_3119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3137 = relay.var("var_3137", dtype = "float64", shape = (15, 10, 14))#candidate|3137|(15, 10, 14)|var|float64
uop_3138 = relay.tan(var_3137.astype('float64')) # shape=(15, 10, 14)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_3142 = relay.TupleGetItem(func_43_call(), 0)
call_3143 = relay.TupleGetItem(func_44_call(), 0)
output = relay.Tuple([uop_3138,call_3142,])
output2 = relay.Tuple([uop_3138,call_3143,])
func_3152 = relay.Function([var_3137,], output)
mod['func_3152'] = func_3152
mod = relay.transform.InferType()(mod)
var_3153 = relay.var("var_3153", dtype = "float64", shape = (15, 10, 14))#candidate|3153|(15, 10, 14)|var|float64
output = func_3152(var_3153)
func_3154 = relay.Function([var_3153], output)
mutated_mod['func_3154'] = func_3154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_3158 = relay.TupleGetItem(func_1143_call(), 0)
call_3159 = relay.TupleGetItem(func_1144_call(), 0)
uop_3160 = relay.rsqrt(call_3158.astype('float64')) # shape=(8, 6, 3)
uop_3162 = relay.rsqrt(call_3159.astype('float64')) # shape=(8, 6, 3)
output = relay.Tuple([uop_3160,])
output2 = relay.Tuple([uop_3162,])
func_3164 = relay.Function([], output)
mod['func_3164'] = func_3164
mod = relay.transform.InferType()(mod)
mutated_mod['func_3164'] = func_3164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3164_call = mutated_mod.get_global_var('func_3164')
call_3165 = func_3164_call()
output = call_3165
func_3166 = relay.Function([], output)
mutated_mod['func_3166'] = func_3166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1872_call = mod.get_global_var('func_1872')
func_1874_call = mutated_mod.get_global_var('func_1874')
call_3177 = func_1872_call()
call_3178 = func_1872_call()
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_3199 = relay.TupleGetItem(func_43_call(), 0)
call_3200 = relay.TupleGetItem(func_44_call(), 0)
func_416_call = mod.get_global_var('func_416')
func_418_call = mutated_mod.get_global_var('func_418')
call_3210 = relay.TupleGetItem(func_416_call(), 1)
call_3211 = relay.TupleGetItem(func_418_call(), 1)
func_495_call = mod.get_global_var('func_495')
func_497_call = mutated_mod.get_global_var('func_497')
call_3228 = relay.TupleGetItem(func_495_call(), 1)
call_3229 = relay.TupleGetItem(func_497_call(), 1)
output = relay.Tuple([call_3177,call_3199,call_3210,call_3228,])
output2 = relay.Tuple([call_3178,call_3200,call_3211,call_3229,])
func_3235 = relay.Function([], output)
mod['func_3235'] = func_3235
mod = relay.transform.InferType()(mod)
mutated_mod['func_3235'] = func_3235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3235_call = mutated_mod.get_global_var('func_3235')
call_3236 = func_3235_call()
output = call_3236
func_3237 = relay.Function([], output)
mutated_mod['func_3237'] = func_3237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_3240 = relay.TupleGetItem(func_1578_call(), 0)
call_3241 = relay.TupleGetItem(func_1579_call(), 0)
output = relay.Tuple([call_3240,])
output2 = relay.Tuple([call_3241,])
func_3257 = relay.Function([], output)
mod['func_3257'] = func_3257
mod = relay.transform.InferType()(mod)
output = func_3257()
func_3258 = relay.Function([], output)
mutated_mod['func_3258'] = func_3258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1989_call = mod.get_global_var('func_1989')
func_1990_call = mutated_mod.get_global_var('func_1990')
call_3299 = relay.TupleGetItem(func_1989_call(), 8)
call_3300 = relay.TupleGetItem(func_1990_call(), 8)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_3308 = relay.TupleGetItem(func_1384_call(), 0)
call_3309 = relay.TupleGetItem(func_1385_call(), 0)
output = relay.Tuple([call_3299,call_3308,])
output2 = relay.Tuple([call_3300,call_3309,])
func_3320 = relay.Function([], output)
mod['func_3320'] = func_3320
mod = relay.transform.InferType()(mod)
output = func_3320()
func_3321 = relay.Function([], output)
mutated_mod['func_3321'] = func_3321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_3325 = relay.TupleGetItem(func_1143_call(), 0)
call_3326 = relay.TupleGetItem(func_1144_call(), 0)
func_1486_call = mod.get_global_var('func_1486')
func_1488_call = mutated_mod.get_global_var('func_1488')
call_3338 = relay.TupleGetItem(func_1486_call(), 0)
call_3339 = relay.TupleGetItem(func_1488_call(), 0)
output = relay.Tuple([call_3325,call_3338,])
output2 = relay.Tuple([call_3326,call_3339,])
func_3359 = relay.Function([], output)
mod['func_3359'] = func_3359
mod = relay.transform.InferType()(mod)
mutated_mod['func_3359'] = func_3359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3359_call = mutated_mod.get_global_var('func_3359')
call_3360 = func_3359_call()
output = call_3360
func_3361 = relay.Function([], output)
mutated_mod['func_3361'] = func_3361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_842_call = mod.get_global_var('func_842')
func_844_call = mutated_mod.get_global_var('func_844')
call_3376 = func_842_call()
call_3377 = func_842_call()
func_1242_call = mod.get_global_var('func_1242')
func_1243_call = mutated_mod.get_global_var('func_1243')
call_3380 = relay.TupleGetItem(func_1242_call(), 0)
call_3381 = relay.TupleGetItem(func_1243_call(), 0)
func_1507_call = mod.get_global_var('func_1507')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_3430 = relay.TupleGetItem(func_1507_call(), 0)
call_3431 = relay.TupleGetItem(func_1509_call(), 0)
uop_3468 = relay.cosh(call_3430.astype('float32')) # shape=(8, 6, 3)
uop_3470 = relay.cosh(call_3431.astype('float32')) # shape=(8, 6, 3)
output = relay.Tuple([call_3376,call_3380,uop_3468,])
output2 = relay.Tuple([call_3377,call_3381,uop_3470,])
func_3495 = relay.Function([], output)
mod['func_3495'] = func_3495
mod = relay.transform.InferType()(mod)
output = func_3495()
func_3496 = relay.Function([], output)
mutated_mod['func_3496'] = func_3496
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3540 = relay.var("var_3540", dtype = "float64", shape = (12, 3, 9))#candidate|3540|(12, 3, 9)|var|float64
uop_3541 = relay.atanh(var_3540.astype('float64')) # shape=(12, 3, 9)
uop_3543 = relay.exp(var_3540.astype('float32')) # shape=(12, 3, 9)
output = relay.Tuple([uop_3541,uop_3543,])
output2 = relay.Tuple([uop_3541,uop_3543,])
func_3547 = relay.Function([var_3540,], output)
mod['func_3547'] = func_3547
mod = relay.transform.InferType()(mod)
mutated_mod['func_3547'] = func_3547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3548 = relay.var("var_3548", dtype = "float64", shape = (12, 3, 9))#candidate|3548|(12, 3, 9)|var|float64
func_3547_call = mutated_mod.get_global_var('func_3547')
call_3549 = func_3547_call(var_3548)
output = call_3549
func_3550 = relay.Function([var_3548], output)
mutated_mod['func_3550'] = func_3550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3164_call = mod.get_global_var('func_3164')
func_3166_call = mutated_mod.get_global_var('func_3166')
call_3582 = relay.TupleGetItem(func_3164_call(), 0)
call_3583 = relay.TupleGetItem(func_3166_call(), 0)
output = relay.Tuple([call_3582,])
output2 = relay.Tuple([call_3583,])
func_3586 = relay.Function([], output)
mod['func_3586'] = func_3586
mod = relay.transform.InferType()(mod)
mutated_mod['func_3586'] = func_3586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3586_call = mutated_mod.get_global_var('func_3586')
call_3587 = func_3586_call()
output = call_3587
func_3588 = relay.Function([], output)
mutated_mod['func_3588'] = func_3588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_3654 = relay.TupleGetItem(func_1384_call(), 1)
call_3655 = relay.TupleGetItem(func_1385_call(), 1)
output = relay.Tuple([call_3654,])
output2 = relay.Tuple([call_3655,])
func_3659 = relay.Function([], output)
mod['func_3659'] = func_3659
mod = relay.transform.InferType()(mod)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3659_call = mutated_mod.get_global_var('func_3659')
call_3660 = func_3659_call()
output = call_3660
func_3661 = relay.Function([], output)
mutated_mod['func_3661'] = func_3661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3117_call = mod.get_global_var('func_3117')
func_3119_call = mutated_mod.get_global_var('func_3119')
call_3672 = relay.TupleGetItem(func_3117_call(), 0)
call_3673 = relay.TupleGetItem(func_3119_call(), 0)
uop_3678 = relay.sin(call_3672.astype('float64')) # shape=(8, 6, 3)
uop_3680 = relay.sin(call_3673.astype('float64')) # shape=(8, 6, 3)
output = uop_3678
output2 = uop_3680
func_3685 = relay.Function([], output)
mod['func_3685'] = func_3685
mod = relay.transform.InferType()(mod)
output = func_3685()
func_3686 = relay.Function([], output)
mutated_mod['func_3686'] = func_3686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_3694 = relay.TupleGetItem(func_3257_call(), 0)
call_3695 = relay.TupleGetItem(func_3258_call(), 0)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_3698 = relay.TupleGetItem(func_1066_call(), 2)
call_3699 = relay.TupleGetItem(func_1067_call(), 2)
func_3320_call = mod.get_global_var('func_3320')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_3713 = relay.TupleGetItem(func_3320_call(), 1)
call_3714 = relay.TupleGetItem(func_3321_call(), 1)
func_1326_call = mod.get_global_var('func_1326')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_3717 = relay.TupleGetItem(func_1326_call(relay.reshape(call_3698.astype('bool'), [8, 6, 3])), 1)
call_3718 = relay.TupleGetItem(func_1329_call(relay.reshape(call_3698.astype('bool'), [8, 6, 3])), 1)
output = relay.Tuple([call_3694,call_3698,call_3713,call_3717,])
output2 = relay.Tuple([call_3695,call_3699,call_3714,call_3718,])
func_3719 = relay.Function([], output)
mod['func_3719'] = func_3719
mod = relay.transform.InferType()(mod)
output = func_3719()
func_3720 = relay.Function([], output)
mutated_mod['func_3720'] = func_3720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1595_call = mod.get_global_var('func_1595')
func_1597_call = mutated_mod.get_global_var('func_1597')
call_3738 = relay.TupleGetItem(func_1595_call(), 0)
call_3739 = relay.TupleGetItem(func_1597_call(), 0)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_3740 = relay.TupleGetItem(func_3257_call(), 0)
call_3741 = relay.TupleGetItem(func_3258_call(), 0)
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
call_3753 = relay.TupleGetItem(func_2712_call(), 3)
call_3754 = relay.TupleGetItem(func_2714_call(), 3)
const_3764 = relay.const([[[-3.938686,-8.089327,2.478002,1.117779,-2.053998,-6.610325],[5.926418,-9.261992,-7.644910,2.719377,3.735933,-8.665198],[-4.069184,-1.672422,7.930284,3.058581,-2.546419,-7.464105],[3.716103,2.240872,-3.514034,5.506673,-9.789615,6.582894],[-1.349753,-4.344871,-9.826946,6.421717,-5.173738,7.435789],[-8.152090,5.630389,-9.740996,-0.503390,2.721103,8.578518],[-8.944272,1.433524,-0.320024,1.042935,1.550086,-9.593435],[5.010554,-3.862704,0.294908,3.007252,-4.212331,3.079372],[-2.146946,2.632082,1.579544,2.935047,6.838933,-8.413589]],[[-9.198012,-8.890883,0.877314,1.813916,-4.973877,-9.046223],[2.221740,1.899409,-0.736212,2.350765,3.117329,1.567544],[2.653435,-6.620898,1.252636,0.086471,-5.611636,-5.696405],[-1.222628,-1.858365,8.839500,2.094380,2.589381,8.246990],[2.335398,-4.112708,7.812683,9.472771,4.379866,6.502923],[1.421987,-9.606998,-6.513180,9.389970,-7.183497,9.190337],[7.568312,9.008719,-4.111785,-6.239624,9.499795,-1.141638],[-4.920343,3.216505,1.630817,2.126195,5.540065,-0.699349],[-8.368361,9.416752,-2.396562,-2.685583,6.267570,-3.955529]],[[-1.820345,4.491079,8.082865,-3.131032,6.950178,0.909870],[-0.487560,6.307488,-6.042431,2.456340,-7.123044,-8.258934],[-4.389750,-9.742457,-4.642571,8.005315,5.701799,-1.182527],[-1.624481,7.520309,-1.434050,-6.429079,0.755859,5.436452],[3.509429,-2.404310,4.855845,-6.122942,5.073801,2.497097],[6.193051,5.897342,9.101385,-2.912812,-0.355115,4.492918],[-7.444360,-7.755205,-0.099915,-5.646725,-5.220189,3.678847],[8.519540,9.756964,-9.710941,-2.641896,9.522893,-5.422008],[5.414549,-2.256279,-7.300272,-0.737079,9.291756,-1.158353]],[[-0.295186,-6.297750,6.761148,-4.789649,3.066317,-1.003711],[-4.770908,-8.320298,-9.116909,-4.521395,7.765677,1.198388],[4.819849,-7.675865,-0.338578,-7.140567,8.666190,-6.998736],[-3.683690,4.191294,-1.756556,0.929965,-2.460120,0.374574],[-6.940557,-2.130597,-6.503615,-9.990583,-9.921331,3.189235],[9.387433,1.130284,-1.146237,-8.354277,4.848995,-1.765162],[9.085320,-8.815640,5.159353,-8.477164,-5.042081,7.941671],[-1.214380,-3.224925,3.432402,-2.867025,9.080497,3.402744],[6.204950,-9.559451,-5.036194,-7.203030,-1.328037,6.281160]],[[-4.536758,6.371436,9.002967,-7.884198,-2.682738,-2.479265],[-5.388014,8.061421,-7.407827,3.133264,-8.725296,-0.812603],[-1.749373,-3.945626,-7.471634,5.093550,4.760917,6.568030],[2.698699,-7.614844,-0.100839,7.168558,5.260239,-7.781598],[-9.396026,1.859161,4.658918,6.405754,5.461861,-3.469241],[7.684167,-8.009625,-6.103798,3.715972,3.918686,-8.459533],[-2.691438,-5.690171,-3.672617,-6.443790,-1.068932,4.292193],[9.808793,-3.653101,-0.042536,-8.543674,-3.012300,-3.053156],[-2.099868,-4.818787,9.951535,9.486926,2.424624,-2.531565]],[[-3.179658,-6.053057,-6.695674,-8.949340,-9.514114,-0.246792],[8.013344,-9.433076,-5.186782,4.058580,6.624225,-7.815940],[-9.858748,-4.019603,-8.691479,4.303576,8.012941,7.022460],[2.479861,-8.086218,-6.057546,-0.303707,3.210245,6.435782],[1.191372,9.639551,1.463059,3.330333,0.650120,3.459759],[-2.578560,4.631177,-3.266097,-6.424413,-8.325779,4.906970],[7.222941,4.095821,-4.374862,-4.099705,1.284593,-8.216288],[-5.110691,-7.869319,-1.806925,6.712434,-9.000627,-1.527504],[5.085696,-1.603883,9.308748,5.898265,7.797997,-8.695339]]], dtype = "float64")#candidate|3764|(6, 9, 6)|const|float64
bop_3765 = relay.add(call_3753.astype('int32'), relay.reshape(const_3764.astype('int32'), relay.shape_of(call_3753))) # shape=(6, 9, 6)
bop_3768 = relay.add(call_3754.astype('int32'), relay.reshape(const_3764.astype('int32'), relay.shape_of(call_3754))) # shape=(6, 9, 6)
output = relay.Tuple([call_3738,call_3740,bop_3765,])
output2 = relay.Tuple([call_3739,call_3741,bop_3768,])
func_3788 = relay.Function([], output)
mod['func_3788'] = func_3788
mod = relay.transform.InferType()(mod)
mutated_mod['func_3788'] = func_3788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3788_call = mutated_mod.get_global_var('func_3788')
call_3789 = func_3788_call()
output = call_3789
func_3790 = relay.Function([], output)
mutated_mod['func_3790'] = func_3790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_905_call = mod.get_global_var('func_905')
func_906_call = mutated_mod.get_global_var('func_906')
call_3860 = relay.TupleGetItem(func_905_call(), 0)
call_3861 = relay.TupleGetItem(func_906_call(), 0)
output = call_3860
output2 = call_3861
func_3865 = relay.Function([], output)
mod['func_3865'] = func_3865
mod = relay.transform.InferType()(mod)
mutated_mod['func_3865'] = func_3865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3865_call = mutated_mod.get_global_var('func_3865')
call_3866 = func_3865_call()
output = call_3866
func_3867 = relay.Function([], output)
mutated_mod['func_3867'] = func_3867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3880 = relay.var("var_3880", dtype = "float64", shape = (14, 2, 13))#candidate|3880|(14, 2, 13)|var|float64
uop_3881 = relay.atanh(var_3880.astype('float64')) # shape=(14, 2, 13)
output = uop_3881
output2 = uop_3881
func_3884 = relay.Function([var_3880,], output)
mod['func_3884'] = func_3884
mod = relay.transform.InferType()(mod)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3885 = relay.var("var_3885", dtype = "float64", shape = (14, 2, 13))#candidate|3885|(14, 2, 13)|var|float64
func_3884_call = mutated_mod.get_global_var('func_3884')
call_3886 = func_3884_call(var_3885)
output = call_3886
func_3887 = relay.Function([var_3885], output)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_842_call = mod.get_global_var('func_842')
func_844_call = mutated_mod.get_global_var('func_844')
call_3899 = func_842_call()
call_3900 = func_842_call()
output = relay.Tuple([call_3899,])
output2 = relay.Tuple([call_3900,])
func_3909 = relay.Function([], output)
mod['func_3909'] = func_3909
mod = relay.transform.InferType()(mod)
mutated_mod['func_3909'] = func_3909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3909_call = mutated_mod.get_global_var('func_3909')
call_3910 = func_3909_call()
output = call_3910
func_3911 = relay.Function([], output)
mutated_mod['func_3911'] = func_3911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3359_call = mod.get_global_var('func_3359')
func_3361_call = mutated_mod.get_global_var('func_3361')
call_3932 = relay.TupleGetItem(func_3359_call(), 0)
call_3933 = relay.TupleGetItem(func_3361_call(), 0)
func_1507_call = mod.get_global_var('func_1507')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_3934 = relay.TupleGetItem(func_1507_call(), 0)
call_3935 = relay.TupleGetItem(func_1509_call(), 0)
output = relay.Tuple([call_3932,call_3934,])
output2 = relay.Tuple([call_3933,call_3935,])
func_3944 = relay.Function([], output)
mod['func_3944'] = func_3944
mod = relay.transform.InferType()(mod)
mutated_mod['func_3944'] = func_3944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3944_call = mutated_mod.get_global_var('func_3944')
call_3945 = func_3944_call()
output = call_3945
func_3946 = relay.Function([], output)
mutated_mod['func_3946'] = func_3946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3968 = relay.var("var_3968", dtype = "bool", shape = (16, 12, 10))#candidate|3968|(16, 12, 10)|var|bool
const_3969 = relay.const([[[True,False,True,True,True,True,True,True,True,True],[False,True,False,True,False,False,True,False,True,False],[True,True,False,False,False,True,False,True,False,True],[True,True,False,True,False,True,False,True,False,True],[False,False,False,True,True,True,True,False,True,False],[True,False,False,True,True,False,True,True,True,True],[False,False,True,False,True,True,True,False,True,True],[True,True,True,False,False,True,True,True,True,False],[False,False,True,False,False,False,False,True,True,True],[False,True,True,True,False,True,True,True,True,False],[True,False,True,False,False,False,True,True,True,True],[False,True,True,True,True,True,True,True,False,False]],[[False,True,True,False,False,True,True,True,True,False],[True,False,False,True,False,True,True,False,False,False],[True,False,False,False,True,True,False,False,True,False],[False,True,True,False,True,False,True,False,True,False],[False,True,False,True,False,True,False,True,True,False],[True,False,True,True,False,False,True,False,True,False],[True,True,True,False,True,True,False,True,True,False],[True,False,True,False,True,True,True,True,False,False],[True,True,False,False,True,False,True,False,True,False],[False,False,True,True,False,True,False,True,False,False],[True,True,False,False,True,True,True,False,False,True],[False,True,False,False,False,True,True,True,True,False]],[[True,True,False,False,True,False,True,True,True,True],[True,False,True,True,False,False,False,True,True,False],[False,True,False,True,False,False,False,True,True,False],[True,False,True,True,False,False,True,False,False,True],[True,True,True,False,True,False,True,True,True,False],[False,False,True,False,True,True,False,True,False,True],[True,True,True,True,False,True,True,False,True,True],[True,True,True,False,True,False,False,False,True,False],[False,True,False,False,True,True,True,True,False,False],[False,False,True,True,True,False,True,False,False,False],[False,True,True,True,True,True,True,False,True,False],[False,False,False,False,False,True,True,True,True,True]],[[True,True,True,True,True,False,True,False,True,True],[False,True,False,False,False,True,True,True,True,False],[True,True,False,True,True,False,True,False,False,False],[False,True,True,True,False,False,False,True,False,True],[False,True,False,False,True,False,False,False,True,True],[False,False,True,True,False,False,True,True,True,True],[True,True,True,False,False,True,True,False,True,True],[True,True,False,True,False,True,True,False,True,False],[True,False,True,False,True,True,True,False,False,False],[False,True,True,True,True,True,False,False,False,True],[False,True,True,False,True,True,False,False,True,True],[True,False,True,False,True,False,True,False,True,True]],[[False,True,False,True,False,True,False,False,False,False],[False,False,False,True,False,True,False,False,True,True],[False,False,True,True,False,False,False,True,False,True],[False,False,False,False,True,False,False,False,False,False],[False,False,False,False,True,False,True,True,True,True],[False,True,True,False,False,False,False,False,True,True],[True,False,True,True,False,True,True,False,True,False],[False,True,False,False,False,False,True,True,True,False],[False,False,True,False,False,True,False,False,False,True],[True,True,True,True,True,False,False,False,False,True],[False,True,False,True,True,False,True,False,False,False],[False,False,False,True,False,False,True,False,True,True]],[[False,False,False,True,True,True,True,True,False,False],[False,False,True,True,True,False,True,False,True,True],[True,True,False,True,True,False,False,False,True,True],[True,True,True,True,False,True,True,False,False,True],[False,True,True,True,False,True,True,True,True,False],[True,False,False,True,False,True,True,False,True,False],[True,False,True,False,True,False,True,False,False,False],[True,False,True,True,True,True,False,False,False,True],[True,True,False,True,False,False,False,False,False,True],[False,True,True,False,True,False,False,True,True,False],[True,False,False,False,True,True,True,True,True,True],[True,False,True,True,True,True,True,True,True,True]],[[False,False,False,True,False,True,False,False,False,True],[False,True,True,False,True,True,True,False,False,False],[False,True,True,True,False,False,False,True,False,False],[False,False,False,False,False,False,False,False,False,False],[True,False,False,False,False,True,True,True,False,False],[True,False,True,False,True,False,True,True,True,True],[True,False,True,True,False,True,True,False,True,True],[True,False,True,True,True,True,False,False,False,False],[False,False,False,False,False,True,False,True,True,True],[False,False,True,False,False,False,True,True,False,True],[True,True,True,False,False,False,False,True,True,False],[True,True,False,False,True,True,True,True,False,False]],[[True,True,True,False,True,True,False,False,False,True],[True,True,False,True,False,True,True,False,False,False],[False,True,False,True,True,True,False,True,True,False],[True,False,True,False,False,False,True,True,True,False],[False,False,True,False,True,True,True,True,True,True],[True,False,True,True,True,False,True,True,True,False],[True,True,False,True,True,False,True,True,True,False],[True,True,True,False,False,False,False,True,True,True],[True,True,True,False,False,False,False,True,True,False],[True,True,True,True,False,False,False,True,True,True],[False,False,True,True,True,True,True,True,False,True],[False,True,False,False,True,False,False,False,False,False]],[[False,True,True,True,True,True,True,True,False,True],[False,False,True,True,True,False,False,True,True,True],[False,False,False,False,False,False,False,False,False,False],[False,False,False,True,True,True,False,False,False,True],[True,False,True,True,False,True,True,False,False,True],[True,False,True,False,False,True,False,False,True,False],[True,False,False,True,True,True,False,False,True,False],[True,True,False,False,False,False,True,True,True,True],[False,False,True,True,False,True,False,False,False,False],[False,True,False,False,False,True,True,False,True,True],[False,False,False,False,True,False,True,False,True,False],[False,False,False,True,True,True,True,False,True,True]],[[False,False,False,False,False,False,True,False,False,True],[True,False,True,True,False,False,True,True,True,False],[True,True,False,False,False,False,True,True,False,False],[False,False,False,False,False,True,False,True,True,False],[False,False,False,False,True,True,False,False,False,True],[False,False,False,True,False,True,True,True,False,True],[True,True,True,False,True,True,True,False,False,False],[False,True,False,True,True,True,False,True,True,False],[True,True,False,True,False,False,False,True,True,True],[False,True,False,True,True,True,False,False,True,True],[False,False,False,False,True,True,True,True,False,False],[True,True,True,False,True,False,False,True,True,False]],[[False,False,True,False,True,False,False,False,False,True],[True,False,True,True,False,False,False,True,True,False],[True,True,False,False,True,True,False,True,False,False],[True,True,False,False,True,True,False,True,True,False],[True,False,False,False,True,False,True,True,True,False],[False,False,True,False,True,False,True,True,False,True],[True,True,False,True,False,False,True,False,True,False],[True,False,True,True,True,False,False,False,False,True],[False,False,False,False,False,True,False,True,False,False],[False,False,False,True,True,False,True,False,False,False],[True,True,True,False,True,False,False,True,False,False],[False,False,False,False,False,False,True,True,True,False]],[[True,False,False,True,True,True,True,False,False,False],[False,True,True,True,True,False,True,True,True,True],[False,False,False,False,False,False,True,False,True,False],[False,True,False,False,False,True,True,False,True,True],[False,False,False,True,True,True,False,True,True,True],[False,True,True,False,True,False,True,False,False,False],[True,False,True,True,False,False,True,True,False,False],[True,False,False,True,True,False,True,True,True,False],[True,True,True,False,False,False,False,True,True,False],[True,False,False,True,True,False,True,False,False,True],[True,True,True,True,False,False,True,True,False,False],[True,True,False,False,True,False,True,False,True,False]],[[False,False,False,True,True,True,True,False,False,True],[True,True,False,False,False,True,True,False,False,True],[False,False,False,False,False,True,False,True,True,True],[True,False,False,True,True,True,True,False,False,True],[False,True,False,False,False,False,True,True,False,False],[False,True,False,False,True,False,True,False,False,True],[True,True,True,True,True,False,True,False,False,True],[True,False,False,True,True,False,True,False,True,False],[False,True,True,False,True,False,True,True,False,True],[False,False,False,True,True,True,True,False,True,True],[True,False,False,False,True,True,False,True,True,False],[True,False,True,False,False,True,False,True,False,True]],[[False,False,True,True,True,False,False,False,True,False],[True,False,False,True,False,False,False,True,True,False],[True,False,False,False,False,False,True,False,False,True],[True,False,True,False,True,False,True,False,False,False],[False,False,False,False,True,True,False,False,False,True],[False,True,True,False,True,True,False,True,False,False],[False,True,True,False,False,False,False,True,False,True],[True,False,True,True,True,False,False,True,False,False],[True,False,True,False,False,True,False,True,False,False],[True,False,True,False,False,True,True,True,False,True],[False,True,False,True,True,True,True,True,False,False],[False,True,False,True,False,True,False,False,False,False]],[[False,True,True,True,False,True,True,True,False,True],[False,False,True,False,True,False,True,True,True,False],[True,True,True,True,True,True,False,True,True,False],[False,True,False,True,True,False,False,False,True,True],[True,True,True,False,False,True,False,True,False,False],[True,True,True,True,False,False,False,True,False,False],[True,False,True,True,True,False,True,True,False,False],[False,False,False,False,False,False,True,True,True,True],[True,True,False,False,False,False,True,False,True,True],[False,True,True,False,False,False,False,False,True,True],[False,False,True,False,False,True,False,True,False,False],[False,True,True,False,False,True,False,True,True,False]],[[False,False,True,True,False,True,True,False,True,False],[True,False,False,False,False,False,False,True,True,False],[True,True,False,False,True,False,True,False,True,False],[False,True,False,True,False,False,False,True,True,False],[True,False,False,False,True,False,False,True,True,False],[True,False,True,True,False,True,True,True,True,False],[False,True,True,False,False,True,True,False,False,False],[False,False,False,False,False,True,True,False,False,False],[False,False,True,False,True,True,True,True,True,False],[True,True,True,True,True,True,False,False,True,True],[False,False,True,True,False,True,False,True,True,True],[False,False,True,True,False,False,False,True,True,True]]], dtype = "bool")#candidate|3969|(16, 12, 10)|const|bool
bop_3970 = relay.logical_or(var_3968.astype('bool'), relay.reshape(const_3969.astype('bool'), relay.shape_of(var_3968))) # shape=(16, 12, 10)
bop_3990 = relay.floor_divide(bop_3970.astype('float64'), relay.reshape(const_3969.astype('float64'), relay.shape_of(bop_3970))) # shape=(16, 12, 10)
output = bop_3990
output2 = bop_3990
func_3994 = relay.Function([var_3968,], output)
mod['func_3994'] = func_3994
mod = relay.transform.InferType()(mod)
var_3995 = relay.var("var_3995", dtype = "bool", shape = (16, 12, 10))#candidate|3995|(16, 12, 10)|var|bool
output = func_3994(var_3995)
func_3996 = relay.Function([var_3995], output)
mutated_mod['func_3996'] = func_3996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4030 = relay.var("var_4030", dtype = "float64", shape = (6, 1, 15))#candidate|4030|(6, 1, 15)|var|float64
uop_4031 = relay.exp(var_4030.astype('float64')) # shape=(6, 1, 15)
uop_4037 = relay.sqrt(uop_4031.astype('float32')) # shape=(6, 1, 15)
output = relay.Tuple([uop_4037,])
output2 = relay.Tuple([uop_4037,])
func_4051 = relay.Function([var_4030,], output)
mod['func_4051'] = func_4051
mod = relay.transform.InferType()(mod)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4052 = relay.var("var_4052", dtype = "float64", shape = (6, 1, 15))#candidate|4052|(6, 1, 15)|var|float64
func_4051_call = mutated_mod.get_global_var('func_4051')
call_4053 = func_4051_call(var_4052)
output = call_4053
func_4054 = relay.Function([var_4052], output)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4084 = relay.var("var_4084", dtype = "float64", shape = (14, 3, 8))#candidate|4084|(14, 3, 8)|var|float64
uop_4085 = relay.acosh(var_4084.astype('float64')) # shape=(14, 3, 8)
func_2996_call = mod.get_global_var('func_2996')
func_2999_call = mutated_mod.get_global_var('func_2999')
const_4092 = relay.const([[True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True]], dtype = "bool")#candidate|4092|(1, 144)|const|bool
call_4091 = relay.TupleGetItem(func_2996_call(relay.reshape(const_4092.astype('bool'), [8, 6, 3])), 0)
call_4093 = relay.TupleGetItem(func_2999_call(relay.reshape(const_4092.astype('bool'), [8, 6, 3])), 0)
output = relay.Tuple([uop_4085,call_4091,const_4092,])
output2 = relay.Tuple([uop_4085,call_4093,const_4092,])
func_4094 = relay.Function([var_4084,], output)
mod['func_4094'] = func_4094
mod = relay.transform.InferType()(mod)
var_4095 = relay.var("var_4095", dtype = "float64", shape = (14, 3, 8))#candidate|4095|(14, 3, 8)|var|float64
output = func_4094(var_4095)
func_4096 = relay.Function([var_4095], output)
mutated_mod['func_4096'] = func_4096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_4194 = relay.TupleGetItem(func_43_call(), 0)
call_4195 = relay.TupleGetItem(func_44_call(), 0)
func_3235_call = mod.get_global_var('func_3235')
func_3237_call = mutated_mod.get_global_var('func_3237')
call_4200 = relay.TupleGetItem(func_3235_call(), 3)
call_4201 = relay.TupleGetItem(func_3237_call(), 3)
output = relay.Tuple([call_4194,call_4200,])
output2 = relay.Tuple([call_4195,call_4201,])
func_4204 = relay.Function([], output)
mod['func_4204'] = func_4204
mod = relay.transform.InferType()(mod)
mutated_mod['func_4204'] = func_4204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4204_call = mutated_mod.get_global_var('func_4204')
call_4205 = func_4204_call()
output = call_4205
func_4206 = relay.Function([], output)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2623_call = mod.get_global_var('func_2623')
func_2624_call = mutated_mod.get_global_var('func_2624')
call_4277 = relay.TupleGetItem(func_2623_call(), 0)
call_4278 = relay.TupleGetItem(func_2624_call(), 0)
func_2623_call = mod.get_global_var('func_2623')
func_2624_call = mutated_mod.get_global_var('func_2624')
call_4280 = relay.TupleGetItem(func_2623_call(), 0)
call_4281 = relay.TupleGetItem(func_2624_call(), 0)
output = relay.Tuple([call_4277,call_4280,])
output2 = relay.Tuple([call_4278,call_4281,])
func_4292 = relay.Function([], output)
mod['func_4292'] = func_4292
mod = relay.transform.InferType()(mod)
output = func_4292()
func_4293 = relay.Function([], output)
mutated_mod['func_4293'] = func_4293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3909_call = mod.get_global_var('func_3909')
func_3911_call = mutated_mod.get_global_var('func_3911')
call_4299 = relay.TupleGetItem(func_3909_call(), 0)
call_4300 = relay.TupleGetItem(func_3911_call(), 0)
func_3320_call = mod.get_global_var('func_3320')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_4305 = relay.TupleGetItem(func_3320_call(), 0)
call_4306 = relay.TupleGetItem(func_3321_call(), 0)
output = relay.Tuple([call_4299,call_4305,])
output2 = relay.Tuple([call_4300,call_4306,])
func_4315 = relay.Function([], output)
mod['func_4315'] = func_4315
mod = relay.transform.InferType()(mod)
output = func_4315()
func_4316 = relay.Function([], output)
mutated_mod['func_4316'] = func_4316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3659_call = mod.get_global_var('func_3659')
func_3661_call = mutated_mod.get_global_var('func_3661')
call_4336 = relay.TupleGetItem(func_3659_call(), 0)
call_4337 = relay.TupleGetItem(func_3661_call(), 0)
func_3788_call = mod.get_global_var('func_3788')
func_3790_call = mutated_mod.get_global_var('func_3790')
call_4345 = relay.TupleGetItem(func_3788_call(), 1)
call_4346 = relay.TupleGetItem(func_3790_call(), 1)
func_1420_call = mod.get_global_var('func_1420')
func_1421_call = mutated_mod.get_global_var('func_1421')
call_4352 = relay.TupleGetItem(func_1420_call(), 1)
call_4353 = relay.TupleGetItem(func_1421_call(), 1)
func_3719_call = mod.get_global_var('func_3719')
func_3720_call = mutated_mod.get_global_var('func_3720')
call_4363 = relay.TupleGetItem(func_3719_call(), 3)
call_4364 = relay.TupleGetItem(func_3720_call(), 3)
var_4369 = relay.var("var_4369", dtype = "float64", shape = (6, 9, 6))#candidate|4369|(6, 9, 6)|var|float64
bop_4370 = relay.not_equal(call_4352.astype('bool'), relay.reshape(var_4369.astype('bool'), relay.shape_of(call_4352))) # shape=(6, 9, 6)
bop_4373 = relay.not_equal(call_4353.astype('bool'), relay.reshape(var_4369.astype('bool'), relay.shape_of(call_4353))) # shape=(6, 9, 6)
func_905_call = mod.get_global_var('func_905')
func_906_call = mutated_mod.get_global_var('func_906')
call_4386 = relay.TupleGetItem(func_905_call(), 0)
call_4387 = relay.TupleGetItem(func_906_call(), 0)
func_4315_call = mod.get_global_var('func_4315')
func_4316_call = mutated_mod.get_global_var('func_4316')
call_4390 = relay.TupleGetItem(func_4315_call(), 1)
call_4391 = relay.TupleGetItem(func_4316_call(), 1)
uop_4401 = relay.erf(var_4369.astype('float32')) # shape=(6, 9, 6)
uop_4403 = relay.log2(uop_4401.astype('float32')) # shape=(6, 9, 6)
func_1354_call = mod.get_global_var('func_1354')
func_1355_call = mutated_mod.get_global_var('func_1355')
call_4408 = relay.TupleGetItem(func_1354_call(), 0)
call_4409 = relay.TupleGetItem(func_1355_call(), 0)
output = relay.Tuple([call_4336,call_4345,call_4363,bop_4370,call_4386,call_4390,uop_4403,call_4408,])
output2 = relay.Tuple([call_4337,call_4346,call_4364,bop_4373,call_4387,call_4391,uop_4403,call_4409,])
func_4415 = relay.Function([var_4369,], output)
mod['func_4415'] = func_4415
mod = relay.transform.InferType()(mod)
mutated_mod['func_4415'] = func_4415
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4416 = relay.var("var_4416", dtype = "float64", shape = (6, 9, 6))#candidate|4416|(6, 9, 6)|var|float64
func_4415_call = mutated_mod.get_global_var('func_4415')
call_4417 = func_4415_call(var_4416)
output = call_4417
func_4418 = relay.Function([var_4416], output)
mutated_mod['func_4418'] = func_4418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4456 = relay.var("var_4456", dtype = "float32", shape = (16, 9, 13))#candidate|4456|(16, 9, 13)|var|float32
uop_4457 = relay.log10(var_4456.astype('float32')) # shape=(16, 9, 13)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_4459 = relay.TupleGetItem(func_43_call(), 0)
call_4460 = relay.TupleGetItem(func_44_call(), 0)
func_3788_call = mod.get_global_var('func_3788')
func_3790_call = mutated_mod.get_global_var('func_3790')
call_4466 = relay.TupleGetItem(func_3788_call(), 2)
call_4467 = relay.TupleGetItem(func_3790_call(), 2)
output = relay.Tuple([uop_4457,call_4459,call_4466,])
output2 = relay.Tuple([uop_4457,call_4460,call_4467,])
func_4468 = relay.Function([var_4456,], output)
mod['func_4468'] = func_4468
mod = relay.transform.InferType()(mod)
mutated_mod['func_4468'] = func_4468
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4469 = relay.var("var_4469", dtype = "float32", shape = (16, 9, 13))#candidate|4469|(16, 9, 13)|var|float32
func_4468_call = mutated_mod.get_global_var('func_4468')
call_4470 = func_4468_call(var_4469)
output = call_4470
func_4471 = relay.Function([var_4469], output)
mutated_mod['func_4471'] = func_4471
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4570 = relay.var("var_4570", dtype = "int32", shape = ())#candidate|4570|()|var|int32
const_4571 = relay.const([[[9,-3,-3,6,4],[-6,10,4,-8,6],[-5,4,10,-2,2],[-3,7,2,6,-9],[7,-1,-7,-10,-10],[-9,-5,-2,-3,-1],[6,-6,9,5,7],[8,-9,3,-3,-3],[7,8,4,-8,6],[4,3,-5,7,10],[3,-9,6,-8,-5],[4,2,-6,1,7],[-5,-9,8,-3,-3],[-2,2,9,-3,8],[6,10,1,-6,1],[-10,-4,-5,3,9]],[[10,4,-3,9,-8],[4,9,3,9,4],[5,-6,-5,1,-8],[5,2,-1,2,10],[9,5,-7,7,2],[-8,5,3,-5,-7],[-7,-5,2,5,-8],[-6,-1,2,-1,-6],[10,9,-7,5,-9],[9,7,-6,-1,-6],[7,3,-3,6,6],[9,7,3,-10,-10],[-5,6,4,-2,2],[4,-10,-7,-4,8],[-8,-7,-5,-1,-3],[4,1,-9,-2,9]],[[-8,5,-10,2,-7],[5,7,2,-4,-5],[-5,4,-10,2,5],[8,-6,3,7,-1],[4,-2,8,3,7],[1,-8,10,8,-10],[5,6,10,7,-5],[-2,2,1,5,4],[-1,-6,9,-7,-7],[-10,6,4,-7,3],[-7,2,10,1,-7],[-9,-1,-7,10,9],[-4,2,9,6,-6],[8,6,5,3,-1],[-3,9,5,6,2],[7,-6,-6,6,1]],[[-10,7,10,4,-10],[-4,-7,-8,-10,10],[-10,10,7,-1,7],[-6,10,5,-7,-3],[-5,-1,3,5,-4],[7,-3,1,10,-2],[3,-4,-1,-5,9],[5,-7,6,-6,3],[-7,3,5,9,-6],[-2,9,4,-8,-6],[8,-1,-8,5,10],[-3,8,9,1,-1],[-9,8,3,-5,2],[8,-7,-7,5,-8],[-1,4,-8,-5,10],[-6,2,-4,7,-6]],[[5,10,-2,-8,8],[4,8,9,10,2],[3,-7,-3,2,4],[-8,-9,-2,5,9],[-7,-1,10,8,-7],[8,-10,6,9,3],[3,4,-2,-4,6],[8,-6,-8,-10,-6],[1,-8,-2,4,10],[5,-1,-9,5,9],[7,-7,-6,-9,3],[7,1,5,-10,5],[8,-5,-6,1,-8],[-7,8,7,-8,4],[4,-5,5,-8,-9],[-4,2,-8,-6,2]]], dtype = "int32")#candidate|4571|(5, 16, 5)|const|int32
bop_4572 = relay.greater_equal(var_4570.astype('bool'), const_4571.astype('bool')) # shape=(5, 16, 5)
output = relay.Tuple([bop_4572,])
output2 = relay.Tuple([bop_4572,])
func_4593 = relay.Function([var_4570,], output)
mod['func_4593'] = func_4593
mod = relay.transform.InferType()(mod)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4594 = relay.var("var_4594", dtype = "int32", shape = ())#candidate|4594|()|var|int32
func_4593_call = mutated_mod.get_global_var('func_4593')
call_4595 = func_4593_call(var_4594)
output = call_4595
func_4596 = relay.Function([var_4594], output)
mutated_mod['func_4596'] = func_4596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3320_call = mod.get_global_var('func_3320')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_4636 = relay.TupleGetItem(func_3320_call(), 1)
call_4637 = relay.TupleGetItem(func_3321_call(), 1)
output = relay.Tuple([call_4636,])
output2 = relay.Tuple([call_4637,])
func_4639 = relay.Function([], output)
mod['func_4639'] = func_4639
mod = relay.transform.InferType()(mod)
mutated_mod['func_4639'] = func_4639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4639_call = mutated_mod.get_global_var('func_4639')
call_4640 = func_4639_call()
output = call_4640
func_4641 = relay.Function([], output)
mutated_mod['func_4641'] = func_4641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mod.get_global_var('func_1836')
func_1838_call = mutated_mod.get_global_var('func_1838')
call_4673 = relay.TupleGetItem(func_1836_call(), 0)
call_4674 = relay.TupleGetItem(func_1838_call(), 0)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_4678 = relay.TupleGetItem(func_1578_call(), 0)
call_4679 = relay.TupleGetItem(func_1579_call(), 0)
func_1539_call = mod.get_global_var('func_1539')
func_1540_call = mutated_mod.get_global_var('func_1540')
call_4704 = relay.TupleGetItem(func_1539_call(), 1)
call_4705 = relay.TupleGetItem(func_1540_call(), 1)
output = relay.Tuple([call_4673,call_4678,call_4704,])
output2 = relay.Tuple([call_4674,call_4679,call_4705,])
func_4706 = relay.Function([], output)
mod['func_4706'] = func_4706
mod = relay.transform.InferType()(mod)
output = func_4706()
func_4707 = relay.Function([], output)
mutated_mod['func_4707'] = func_4707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3164_call = mod.get_global_var('func_3164')
func_3166_call = mutated_mod.get_global_var('func_3166')
call_4721 = relay.TupleGetItem(func_3164_call(), 0)
call_4722 = relay.TupleGetItem(func_3166_call(), 0)
output = relay.Tuple([call_4721,])
output2 = relay.Tuple([call_4722,])
func_4727 = relay.Function([], output)
mod['func_4727'] = func_4727
mod = relay.transform.InferType()(mod)
output = func_4727()
func_4728 = relay.Function([], output)
mutated_mod['func_4728'] = func_4728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1578_call = mod.get_global_var('func_1578')
func_1579_call = mutated_mod.get_global_var('func_1579')
call_4790 = relay.TupleGetItem(func_1578_call(), 0)
call_4791 = relay.TupleGetItem(func_1579_call(), 0)
output = relay.Tuple([call_4790,])
output2 = relay.Tuple([call_4791,])
func_4796 = relay.Function([], output)
mod['func_4796'] = func_4796
mod = relay.transform.InferType()(mod)
mutated_mod['func_4796'] = func_4796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mutated_mod.get_global_var('func_4796')
call_4797 = func_4796_call()
output = call_4797
func_4798 = relay.Function([], output)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4932 = relay.var("var_4932", dtype = "float32", shape = ())#candidate|4932|()|var|float32
var_4933 = relay.var("var_4933", dtype = "float32", shape = (9, 9, 5))#candidate|4933|(9, 9, 5)|var|float32
bop_4934 = relay.power(var_4932.astype('float32'), var_4933.astype('float32')) # shape=(9, 9, 5)
bop_4951 = relay.multiply(var_4933.astype('uint64'), var_4932.astype('uint64')) # shape=(9, 9, 5)
output = relay.Tuple([bop_4934,bop_4951,])
output2 = relay.Tuple([bop_4934,bop_4951,])
func_4955 = relay.Function([var_4932,var_4933,], output)
mod['func_4955'] = func_4955
mod = relay.transform.InferType()(mod)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4955_call = mutated_mod.get_global_var('func_4955')
var_4957 = relay.var("var_4957", dtype = "float32", shape = ())#candidate|4957|()|var|float32
var_4958 = relay.var("var_4958", dtype = "float32", shape = (9, 9, 5))#candidate|4958|(9, 9, 5)|var|float32
call_4956 = func_4955_call(var_4957,var_4958,)
output = call_4956
func_4959 = relay.Function([var_4957,var_4958,], output)
mutated_mod['func_4959'] = func_4959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_4963 = relay.TupleGetItem(func_1066_call(), 2)
call_4964 = relay.TupleGetItem(func_1067_call(), 2)
func_2325_call = mod.get_global_var('func_2325')
func_2330_call = mutated_mod.get_global_var('func_2330')
var_4976 = relay.var("var_4976", dtype = "uint16", shape = (624,))#candidate|4976|(624,)|var|uint16
call_4975 = relay.TupleGetItem(func_2325_call(relay.reshape(var_4976.astype('uint16'), [8, 6, 13]), relay.reshape(var_4976.astype('uint16'), [8, 6, 13]), relay.reshape(var_4976.astype('float32'), [8, 6, 13]), ), 0)
call_4977 = relay.TupleGetItem(func_2330_call(relay.reshape(var_4976.astype('uint16'), [8, 6, 13]), relay.reshape(var_4976.astype('uint16'), [8, 6, 13]), relay.reshape(var_4976.astype('float32'), [8, 6, 13]), ), 0)
output = relay.Tuple([call_4963,call_4975,var_4976,])
output2 = relay.Tuple([call_4964,call_4977,var_4976,])
func_4998 = relay.Function([var_4976,], output)
mod['func_4998'] = func_4998
mod = relay.transform.InferType()(mod)
mutated_mod['func_4998'] = func_4998
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4999 = relay.var("var_4999", dtype = "uint16", shape = (624,))#candidate|4999|(624,)|var|uint16
func_4998_call = mutated_mod.get_global_var('func_4998')
call_5000 = func_4998_call(var_4999)
output = call_5000
func_5001 = relay.Function([var_4999], output)
mutated_mod['func_5001'] = func_5001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1143_call = mod.get_global_var('func_1143')
func_1144_call = mutated_mod.get_global_var('func_1144')
call_5028 = relay.TupleGetItem(func_1143_call(), 1)
call_5029 = relay.TupleGetItem(func_1144_call(), 1)
output = relay.Tuple([call_5028,])
output2 = relay.Tuple([call_5029,])
func_5042 = relay.Function([], output)
mod['func_5042'] = func_5042
mod = relay.transform.InferType()(mod)
output = func_5042()
func_5043 = relay.Function([], output)
mutated_mod['func_5043'] = func_5043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3865_call = mod.get_global_var('func_3865')
func_3867_call = mutated_mod.get_global_var('func_3867')
call_5060 = func_3865_call()
call_5061 = func_3865_call()
var_5064 = relay.var("var_5064", dtype = "float64", shape = (8, 6, 3))#candidate|5064|(8, 6, 3)|var|float64
bop_5065 = relay.multiply(call_5060.astype('int8'), relay.reshape(var_5064.astype('int8'), relay.shape_of(call_5060))) # shape=(8, 6, 3)
bop_5068 = relay.multiply(call_5061.astype('int8'), relay.reshape(var_5064.astype('int8'), relay.shape_of(call_5061))) # shape=(8, 6, 3)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_5073 = relay.TupleGetItem(func_4204_call(), 0)
call_5074 = relay.TupleGetItem(func_4206_call(), 0)
output = relay.Tuple([bop_5065,call_5073,])
output2 = relay.Tuple([bop_5068,call_5074,])
func_5085 = relay.Function([var_5064,], output)
mod['func_5085'] = func_5085
mod = relay.transform.InferType()(mod)
var_5086 = relay.var("var_5086", dtype = "float64", shape = (8, 6, 3))#candidate|5086|(8, 6, 3)|var|float64
output = func_5085(var_5086)
func_5087 = relay.Function([var_5086], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_5103 = relay.TupleGetItem(func_4796_call(), 0)
call_5104 = relay.TupleGetItem(func_4798_call(), 0)
func_1326_call = mod.get_global_var('func_1326')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_5108 = relay.TupleGetItem(func_1326_call(relay.reshape(call_5103.astype('bool'), [8, 6, 3])), 1)
call_5109 = relay.TupleGetItem(func_1329_call(relay.reshape(call_5103.astype('bool'), [8, 6, 3])), 1)
output = relay.Tuple([call_5103,call_5108,])
output2 = relay.Tuple([call_5104,call_5109,])
func_5114 = relay.Function([], output)
mod['func_5114'] = func_5114
mod = relay.transform.InferType()(mod)
output = func_5114()
func_5115 = relay.Function([], output)
mutated_mod['func_5115'] = func_5115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_5123 = relay.TupleGetItem(func_1384_call(), 2)
call_5124 = relay.TupleGetItem(func_1385_call(), 2)
func_133_call = mod.get_global_var('func_133')
func_136_call = mutated_mod.get_global_var('func_136')
call_5137 = relay.TupleGetItem(func_133_call(relay.reshape(call_5123.astype('float32'), [12, 14, 7])), 0)
call_5138 = relay.TupleGetItem(func_136_call(relay.reshape(call_5123.astype('float32'), [12, 14, 7])), 0)
uop_5143 = relay.log10(call_5137.astype('float32')) # shape=(12, 14, 7)
uop_5145 = relay.log10(call_5138.astype('float32')) # shape=(12, 14, 7)
func_826_call = mod.get_global_var('func_826')
func_829_call = mutated_mod.get_global_var('func_829')
call_5159 = relay.TupleGetItem(func_826_call(relay.reshape(call_5137.astype('float32'), [1176,])), 1)
call_5160 = relay.TupleGetItem(func_829_call(relay.reshape(call_5137.astype('float32'), [1176,])), 1)
output = relay.Tuple([call_5123,uop_5143,call_5159,])
output2 = relay.Tuple([call_5124,uop_5145,call_5160,])
func_5162 = relay.Function([], output)
mod['func_5162'] = func_5162
mod = relay.transform.InferType()(mod)
mutated_mod['func_5162'] = func_5162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5162_call = mutated_mod.get_global_var('func_5162')
call_5163 = func_5162_call()
output = call_5163
func_5164 = relay.Function([], output)
mutated_mod['func_5164'] = func_5164
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5187 = relay.var("var_5187", dtype = "float32", shape = (4, 11, 11))#candidate|5187|(4, 11, 11)|var|float32
uop_5188 = relay.sqrt(var_5187.astype('float32')) # shape=(4, 11, 11)
func_4727_call = mod.get_global_var('func_4727')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_5191 = relay.TupleGetItem(func_4727_call(), 0)
call_5192 = relay.TupleGetItem(func_4728_call(), 0)
bop_5211 = relay.equal(uop_5188.astype('bool'), relay.reshape(var_5187.astype('bool'), relay.shape_of(uop_5188))) # shape=(4, 11, 11)
func_2623_call = mod.get_global_var('func_2623')
func_2624_call = mutated_mod.get_global_var('func_2624')
call_5214 = relay.TupleGetItem(func_2623_call(), 0)
call_5215 = relay.TupleGetItem(func_2624_call(), 0)
var_5221 = relay.var("var_5221", dtype = "bool", shape = (4, 11, 11))#candidate|5221|(4, 11, 11)|var|bool
bop_5222 = relay.minimum(bop_5211.astype('uint16'), relay.reshape(var_5221.astype('uint16'), relay.shape_of(bop_5211))) # shape=(4, 11, 11)
func_2996_call = mod.get_global_var('func_2996')
func_2999_call = mutated_mod.get_global_var('func_2999')
call_5233 = relay.TupleGetItem(func_2996_call(relay.reshape(call_5191.astype('bool'), [8, 6, 3])), 0)
call_5234 = relay.TupleGetItem(func_2999_call(relay.reshape(call_5191.astype('bool'), [8, 6, 3])), 0)
output = relay.Tuple([call_5191,call_5214,bop_5222,call_5233,])
output2 = relay.Tuple([call_5192,call_5215,bop_5222,call_5234,])
func_5242 = relay.Function([var_5187,var_5221,], output)
mod['func_5242'] = func_5242
mod = relay.transform.InferType()(mod)
var_5243 = relay.var("var_5243", dtype = "float32", shape = (4, 11, 11))#candidate|5243|(4, 11, 11)|var|float32
var_5244 = relay.var("var_5244", dtype = "bool", shape = (4, 11, 11))#candidate|5244|(4, 11, 11)|var|bool
output = func_5242(var_5243,var_5244,)
func_5245 = relay.Function([var_5243,var_5244,], output)
mutated_mod['func_5245'] = func_5245
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5396 = relay.const(-10, dtype = "uint64")#candidate|5396|()|const|uint64
var_5397 = relay.var("var_5397", dtype = "uint64", shape = (10, 15, 5))#candidate|5397|(10, 15, 5)|var|uint64
bop_5398 = relay.right_shift(const_5396.astype('uint64'), var_5397.astype('uint64')) # shape=(10, 15, 5)
output = relay.Tuple([bop_5398,])
output2 = relay.Tuple([bop_5398,])
func_5401 = relay.Function([var_5397,], output)
mod['func_5401'] = func_5401
mod = relay.transform.InferType()(mod)
mutated_mod['func_5401'] = func_5401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5402 = relay.var("var_5402", dtype = "uint64", shape = (10, 15, 5))#candidate|5402|(10, 15, 5)|var|uint64
func_5401_call = mutated_mod.get_global_var('func_5401')
call_5403 = func_5401_call(var_5402)
output = call_5403
func_5404 = relay.Function([var_5402], output)
mutated_mod['func_5404'] = func_5404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5414 = relay.var("var_5414", dtype = "float64", shape = ())#candidate|5414|()|var|float64
const_5415 = relay.const([[[9.807512]],[[-5.068081]],[[-2.353283]],[[-0.981490]],[[3.972223]],[[-7.272294]],[[7.566433]],[[-1.467198]],[[6.599986]],[[-2.904485]],[[-7.005524]]], dtype = "float64")#candidate|5415|(11, 1, 1)|const|float64
bop_5416 = relay.equal(var_5414.astype('bool'), const_5415.astype('bool')) # shape=(11, 1, 1)
func_3235_call = mod.get_global_var('func_3235')
func_3237_call = mutated_mod.get_global_var('func_3237')
call_5434 = relay.TupleGetItem(func_3235_call(), 1)
call_5435 = relay.TupleGetItem(func_3237_call(), 1)
func_2623_call = mod.get_global_var('func_2623')
func_2624_call = mutated_mod.get_global_var('func_2624')
call_5439 = relay.TupleGetItem(func_2623_call(), 0)
call_5440 = relay.TupleGetItem(func_2624_call(), 0)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_5455 = relay.TupleGetItem(func_4796_call(), 0)
call_5456 = relay.TupleGetItem(func_4798_call(), 0)
output = relay.Tuple([bop_5416,call_5434,call_5439,call_5455,])
output2 = relay.Tuple([bop_5416,call_5435,call_5440,call_5456,])
func_5457 = relay.Function([var_5414,], output)
mod['func_5457'] = func_5457
mod = relay.transform.InferType()(mod)
var_5458 = relay.var("var_5458", dtype = "float64", shape = ())#candidate|5458|()|var|float64
output = func_5457(var_5458)
func_5459 = relay.Function([var_5458], output)
mutated_mod['func_5459'] = func_5459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5461 = relay.var("var_5461", dtype = "float64", shape = (11, 8, 1))#candidate|5461|(11, 8, 1)|var|float64
var_5462 = relay.var("var_5462", dtype = "float64", shape = (11, 8, 6))#candidate|5462|(11, 8, 6)|var|float64
bop_5463 = relay.subtract(var_5461.astype('float64'), var_5462.astype('float64')) # shape=(11, 8, 6)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_5466 = func_665_call()
call_5467 = func_665_call()
output = relay.Tuple([bop_5463,call_5466,])
output2 = relay.Tuple([bop_5463,call_5467,])
func_5470 = relay.Function([var_5461,var_5462,], output)
mod['func_5470'] = func_5470
mod = relay.transform.InferType()(mod)
var_5471 = relay.var("var_5471", dtype = "float64", shape = (11, 8, 1))#candidate|5471|(11, 8, 1)|var|float64
var_5472 = relay.var("var_5472", dtype = "float64", shape = (11, 8, 6))#candidate|5472|(11, 8, 6)|var|float64
output = func_5470(var_5471,var_5472,)
func_5473 = relay.Function([var_5471,var_5472,], output)
mutated_mod['func_5473'] = func_5473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4315_call = mod.get_global_var('func_4315')
func_4316_call = mutated_mod.get_global_var('func_4316')
call_5475 = relay.TupleGetItem(func_4315_call(), 0)
call_5476 = relay.TupleGetItem(func_4316_call(), 0)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_5502 = relay.TupleGetItem(func_43_call(), 0)
call_5503 = relay.TupleGetItem(func_44_call(), 0)
output = relay.Tuple([call_5475,call_5502,])
output2 = relay.Tuple([call_5476,call_5503,])
func_5516 = relay.Function([], output)
mod['func_5516'] = func_5516
mod = relay.transform.InferType()(mod)
output = func_5516()
func_5517 = relay.Function([], output)
mutated_mod['func_5517'] = func_5517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3359_call = mod.get_global_var('func_3359')
func_3361_call = mutated_mod.get_global_var('func_3361')
call_5549 = relay.TupleGetItem(func_3359_call(), 1)
call_5550 = relay.TupleGetItem(func_3361_call(), 1)
func_2325_call = mod.get_global_var('func_2325')
func_2330_call = mutated_mod.get_global_var('func_2330')
const_5568 = relay.const([8,-7,1,8,-1,4,-2,-8,6,2,3,-3,-7,-3,-6,4,-8,-8,-4,-7,-9,-6,-3,-6,8,-5,1,5,-3,-2,9,-4,-8,7,1,6,-5,1,-9,-7,4,-7,-9,2,5,4,-1,-2,-1,10,5,1,10,-5,10,5,-3,-10,9,6,-5,9,-9,6,1,1,4,3,-6,5,2,2,6,-10,4,-10,-6,-7,-1,-4,-1,-10,9,-10,-6,2,5,-5,-6,6,3,-2,-7,4,4,-4,-3,9,-8,8,4,-3,-4,9,-3,3,-5,5,-6,1,6,-4,-10,2,3,-3,10,7,-4,5,5,5,4,1,-8,-9,-8,5,7,-7,9,-1,-5,4,-7,9,8,-2,-6,2,5,-10,6,2,-5,6,-10,3,-7,7,8,6,1,-10,-2,3,-6,2,-10,-5,-5,9,10,-3,2,1,-7,8,6,7,2,5,4,-10,-4,-1,6,6,-3,4,-8,-7,-3,-5,5,-7,3,-5,-1,-1,-9,-4,2,4,-9,-3,3,-6,-5,5,4,-6,-4,-3,-7,-2,9,-5,7,10,-6,-5,-3,5,-1,-9,-2,1,8,-5,-2,-1,-2,-2,4,7,7,10,2,-9,8,9,2,10,-7,3,9,-8,2,1,4,-9,9,-2,-7,-5,8,6,7,-10,-10,-2,10,-1,-4,10,10,10,9,10,2,2,1,-1,-4,3,-5,5,6,8,10,-7,-5,10,8,9,-7,-9,-9,-1,1,-8,-8,2,3,-4,-5,-5,-8,4,7,6,-6,-6,-7,-9,8,5,-4,-2,4,-10,-8,9,10,-4,1,-10,-6,4,-3,10,-2,-9,-1,-3,-8,-1,-6,2,6,-2,5,3,-8,3,-2,5,7,10,7,-2,-6,1,5,-9,-9,-9,-3,-4,-1,-4,-1,5,-3,7,-10,-4,1,-10,9,1,-10,-10,3,4,2,-5,7,2,-8,-1,-5,-7,-10,-5,8,-5,-6,-9,-1,-3,3,8,1,-1,7,9,6,-10,-5,-5,3,-1,-7,8,-5,2,10,-7,10,-1,-9,2,-6,-4,-9,8,-1,3,-1,-5,-3,-4,7,-5,9,-5,-6,-6,9,-5,-10,-4,-2,-8,-7,7,10,-4,-3,3,5,-2,6,3,-9,6,1,-2,-7,4,-3,-4,4,-9,9,9,-1,4,9,3,-6,-9,8,-10,2,-1,-6,-8,-4,-9,1,4,-9,9,6,7,-10,-8,8,7,3,8,2,-2,-5,7,9,7,-2,5,8,-9,-10,1,7,9,4,9,-3,10,4,-3,-1,-10,-7,-10,-8,-7,7,6,4,4,-5,3,6,6,-3,2,1,6,8,5,6,-6,-8,9,-10,-3,9,-4,1,6,1,7,-1,-10,-10,7,-6,1,7,-9,4,-3,6,-8,7,1,2,-10,3,-2,-4,9,3,-6,-9,-7,-5,-5,-6,-9,9,-3,-10,-5,-2,5,7,-9,-1,9,10,-2,6,7,2,-7,10,1,-2,4,-5,-3,3,3,7,-4,7,1,5,5,5,-8,9,-6,8,-6,-7,5,9,3,-9,-2,-5,10,-2,-5,7,4,3,-9,-8,-3,-4,-6,-8,10,8,-4,6,2,2,-6,1,7,10,6,-2,6,9,2,10,5,-5,-10,-6,8,-10,-7,4,8], dtype = "uint16")#candidate|5568|(624,)|const|uint16
call_5567 = relay.TupleGetItem(func_2325_call(relay.reshape(const_5568.astype('uint16'), [8, 6, 13]), relay.reshape(const_5568.astype('uint16'), [8, 6, 13]), relay.reshape(const_5568.astype('float32'), [8, 6, 13]), ), 1)
call_5569 = relay.TupleGetItem(func_2330_call(relay.reshape(const_5568.astype('uint16'), [8, 6, 13]), relay.reshape(const_5568.astype('uint16'), [8, 6, 13]), relay.reshape(const_5568.astype('float32'), [8, 6, 13]), ), 1)
func_3994_call = mod.get_global_var('func_3994')
func_3996_call = mutated_mod.get_global_var('func_3996')
var_5589 = relay.var("var_5589", dtype = "bool", shape = (1920,))#candidate|5589|(1920,)|var|bool
call_5588 = func_3994_call(relay.reshape(var_5589.astype('bool'), [16, 12, 10]))
call_5590 = func_3994_call(relay.reshape(var_5589.astype('bool'), [16, 12, 10]))
output = relay.Tuple([call_5549,call_5567,const_5568,call_5588,var_5589,])
output2 = relay.Tuple([call_5550,call_5569,const_5568,call_5590,var_5589,])
func_5594 = relay.Function([var_5589,], output)
mod['func_5594'] = func_5594
mod = relay.transform.InferType()(mod)
var_5595 = relay.var("var_5595", dtype = "bool", shape = (1920,))#candidate|5595|(1920,)|var|bool
output = func_5594(var_5595)
func_5596 = relay.Function([var_5595], output)
mutated_mod['func_5596'] = func_5596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_5661 = func_665_call()
call_5662 = func_665_call()
func_1242_call = mod.get_global_var('func_1242')
func_1243_call = mutated_mod.get_global_var('func_1243')
call_5672 = relay.TupleGetItem(func_1242_call(), 0)
call_5673 = relay.TupleGetItem(func_1243_call(), 0)
output = relay.Tuple([call_5661,call_5672,])
output2 = relay.Tuple([call_5662,call_5673,])
func_5680 = relay.Function([], output)
mod['func_5680'] = func_5680
mod = relay.transform.InferType()(mod)
mutated_mod['func_5680'] = func_5680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5680_call = mutated_mod.get_global_var('func_5680')
call_5681 = func_5680_call()
output = call_5681
func_5682 = relay.Function([], output)
mutated_mod['func_5682'] = func_5682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5721 = relay.var("var_5721", dtype = "float64", shape = (14, 9, 14))#candidate|5721|(14, 9, 14)|var|float64
var_5722 = relay.var("var_5722", dtype = "float64", shape = (14, 9, 14))#candidate|5722|(14, 9, 14)|var|float64
bop_5723 = relay.less_equal(var_5721.astype('bool'), relay.reshape(var_5722.astype('bool'), relay.shape_of(var_5721))) # shape=(14, 9, 14)
uop_5732 = relay.sinh(var_5721.astype('float32')) # shape=(14, 9, 14)
func_1507_call = mod.get_global_var('func_1507')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_5741 = relay.TupleGetItem(func_1507_call(), 0)
call_5742 = relay.TupleGetItem(func_1509_call(), 0)
output = relay.Tuple([bop_5723,uop_5732,call_5741,])
output2 = relay.Tuple([bop_5723,uop_5732,call_5742,])
func_5746 = relay.Function([var_5721,var_5722,], output)
mod['func_5746'] = func_5746
mod = relay.transform.InferType()(mod)
var_5747 = relay.var("var_5747", dtype = "float64", shape = (14, 9, 14))#candidate|5747|(14, 9, 14)|var|float64
var_5748 = relay.var("var_5748", dtype = "float64", shape = (14, 9, 14))#candidate|5748|(14, 9, 14)|var|float64
output = func_5746(var_5747,var_5748,)
func_5749 = relay.Function([var_5747,var_5748,], output)
mutated_mod['func_5749'] = func_5749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
call_5790 = func_665_call()
call_5791 = func_665_call()
func_3152_call = mod.get_global_var('func_3152')
func_3154_call = mutated_mod.get_global_var('func_3154')
var_5805 = relay.var("var_5805", dtype = "float64", shape = (3, 700))#candidate|5805|(3, 700)|var|float64
call_5804 = relay.TupleGetItem(func_3152_call(relay.reshape(var_5805.astype('float64'), [15, 10, 14])), 1)
call_5806 = relay.TupleGetItem(func_3154_call(relay.reshape(var_5805.astype('float64'), [15, 10, 14])), 1)
output = relay.Tuple([call_5790,call_5804,var_5805,])
output2 = relay.Tuple([call_5791,call_5806,var_5805,])
func_5821 = relay.Function([var_5805,], output)
mod['func_5821'] = func_5821
mod = relay.transform.InferType()(mod)
mutated_mod['func_5821'] = func_5821
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5822 = relay.var("var_5822", dtype = "float64", shape = (3, 700))#candidate|5822|(3, 700)|var|float64
func_5821_call = mutated_mod.get_global_var('func_5821')
call_5823 = func_5821_call(var_5822)
output = call_5823
func_5824 = relay.Function([var_5822], output)
mutated_mod['func_5824'] = func_5824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3117_call = mod.get_global_var('func_3117')
func_3119_call = mutated_mod.get_global_var('func_3119')
call_5853 = relay.TupleGetItem(func_3117_call(), 0)
call_5854 = relay.TupleGetItem(func_3119_call(), 0)
func_1242_call = mod.get_global_var('func_1242')
func_1243_call = mutated_mod.get_global_var('func_1243')
call_5856 = relay.TupleGetItem(func_1242_call(), 0)
call_5857 = relay.TupleGetItem(func_1243_call(), 0)
uop_5862 = relay.sinh(call_5856.astype('float64')) # shape=(7, 10, 5)
uop_5864 = relay.sinh(call_5857.astype('float64')) # shape=(7, 10, 5)
uop_5884 = relay.cos(uop_5862.astype('float64')) # shape=(7, 10, 5)
uop_5886 = relay.cos(uop_5864.astype('float64')) # shape=(7, 10, 5)
uop_5896 = relay.log10(uop_5862.astype('float64')) # shape=(7, 10, 5)
uop_5898 = relay.log10(uop_5864.astype('float64')) # shape=(7, 10, 5)
output = relay.Tuple([call_5853,uop_5884,uop_5896,])
output2 = relay.Tuple([call_5854,uop_5886,uop_5898,])
func_5899 = relay.Function([], output)
mod['func_5899'] = func_5899
mod = relay.transform.InferType()(mod)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5899_call = mutated_mod.get_global_var('func_5899')
call_5900 = func_5899_call()
output = call_5900
func_5901 = relay.Function([], output)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5912 = relay.var("var_5912", dtype = "float32", shape = (1, 9))#candidate|5912|(1, 9)|var|float32
uop_5913 = relay.log2(var_5912.astype('float32')) # shape=(1, 9)
func_2623_call = mod.get_global_var('func_2623')
func_2624_call = mutated_mod.get_global_var('func_2624')
call_5933 = relay.TupleGetItem(func_2623_call(), 0)
call_5934 = relay.TupleGetItem(func_2624_call(), 0)
func_3719_call = mod.get_global_var('func_3719')
func_3720_call = mutated_mod.get_global_var('func_3720')
call_5943 = relay.TupleGetItem(func_3719_call(), 1)
call_5944 = relay.TupleGetItem(func_3720_call(), 1)
output = relay.Tuple([uop_5913,call_5933,call_5943,])
output2 = relay.Tuple([uop_5913,call_5934,call_5944,])
func_5966 = relay.Function([var_5912,], output)
mod['func_5966'] = func_5966
mod = relay.transform.InferType()(mod)
mutated_mod['func_5966'] = func_5966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5967 = relay.var("var_5967", dtype = "float32", shape = (1, 9))#candidate|5967|(1, 9)|var|float32
func_5966_call = mutated_mod.get_global_var('func_5966')
call_5968 = func_5966_call(var_5967)
output = call_5968
func_5969 = relay.Function([var_5967], output)
mutated_mod['func_5969'] = func_5969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6040 = relay.var("var_6040", dtype = "float32", shape = (2, 2, 5))#candidate|6040|(2, 2, 5)|var|float32
var_6041 = relay.var("var_6041", dtype = "float32", shape = (2, 2, 5))#candidate|6041|(2, 2, 5)|var|float32
bop_6042 = relay.divide(var_6040.astype('float32'), relay.reshape(var_6041.astype('float32'), relay.shape_of(var_6040))) # shape=(2, 2, 5)
uop_6062 = relay.sigmoid(bop_6042.astype('float32')) # shape=(2, 2, 5)
output = uop_6062
output2 = uop_6062
func_6073 = relay.Function([var_6040,var_6041,], output)
mod['func_6073'] = func_6073
mod = relay.transform.InferType()(mod)
mutated_mod['func_6073'] = func_6073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6073_call = mutated_mod.get_global_var('func_6073')
var_6075 = relay.var("var_6075", dtype = "float32", shape = (2, 2, 5))#candidate|6075|(2, 2, 5)|var|float32
var_6076 = relay.var("var_6076", dtype = "float32", shape = (2, 2, 5))#candidate|6076|(2, 2, 5)|var|float32
call_6074 = func_6073_call(var_6075,var_6076,)
output = call_6074
func_6077 = relay.Function([var_6075,var_6076,], output)
mutated_mod['func_6077'] = func_6077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1539_call = mod.get_global_var('func_1539')
func_1540_call = mutated_mod.get_global_var('func_1540')
call_6083 = relay.TupleGetItem(func_1539_call(), 1)
call_6084 = relay.TupleGetItem(func_1540_call(), 1)
output = relay.Tuple([call_6083,])
output2 = relay.Tuple([call_6084,])
func_6097 = relay.Function([], output)
mod['func_6097'] = func_6097
mod = relay.transform.InferType()(mod)
output = func_6097()
func_6098 = relay.Function([], output)
mutated_mod['func_6098'] = func_6098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1507_call = mod.get_global_var('func_1507')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_6121 = relay.TupleGetItem(func_1507_call(), 0)
call_6122 = relay.TupleGetItem(func_1509_call(), 0)
func_6073_call = mod.get_global_var('func_6073')
func_6077_call = mutated_mod.get_global_var('func_6077')
var_6125 = relay.var("var_6125", dtype = "float32", shape = (20,))#candidate|6125|(20,)|var|float32
call_6124 = func_6073_call(relay.reshape(var_6125.astype('float32'), [2, 2, 5]), relay.reshape(var_6125.astype('float32'), [2, 2, 5]), )
call_6126 = func_6073_call(relay.reshape(var_6125.astype('float32'), [2, 2, 5]), relay.reshape(var_6125.astype('float32'), [2, 2, 5]), )
func_1326_call = mod.get_global_var('func_1326')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_6127 = relay.TupleGetItem(func_1326_call(relay.reshape(call_6121.astype('bool'), [8, 6, 3])), 1)
call_6128 = relay.TupleGetItem(func_1329_call(relay.reshape(call_6121.astype('bool'), [8, 6, 3])), 1)
func_601_call = mod.get_global_var('func_601')
func_604_call = mutated_mod.get_global_var('func_604')
const_6151 = relay.const([-8.078002,1.583334,-4.854690,8.998001,8.902692,2.064162,9.925580,-5.280332,-0.089129,3.515803,9.593472,8.003546,7.393906,0.917653,0.973803,-0.996887,-5.118950,7.748827,-8.738525,9.023042,2.017482,-5.558253,-0.577516,-5.676845,4.073963,7.703155,5.071641,9.690086,-4.170130,3.379954,-9.631939,-0.524335,5.816397,-5.845919,-9.834493,7.062498,-3.496732,-4.829094,-5.027064,9.212557,-2.484600,-0.428251,7.285878,-7.737591,4.676231,3.402351,4.714439,-3.943856,-3.803955,-7.026258,5.747339,-0.306503,9.524807,-2.310773,4.213720,-2.608165,-6.687373,1.392818,-5.846731,8.563311,3.404670,-9.677896,-2.941864,3.588710,7.804210,-1.298742,-9.900571,-9.061146,8.980239,0.813205,-6.993408,3.567786,1.296868,1.433948,-2.577418,6.581068,9.474027,4.873738,-0.675076,-7.327637,-4.613198,-4.783937,3.490878,4.831039,0.501695,-3.193819,-2.833497,-2.930904,-5.198141,5.272440,7.506352,4.266899,-9.694866,-8.794073,1.387793,-4.442183,2.224528,-5.959281,6.697619,-6.039851,2.877007,5.669428,-6.124776,2.630583,3.212200,5.609158,2.085602,4.025640,8.245622,-9.210749,3.394814,7.127894,-1.130580,7.125943,0.423706,-6.912830,-3.921986,-6.826347,-7.325992,-8.250184,-9.912593,-4.359217,-9.798480,-6.225998,0.178185,-5.474321,9.427576,-8.755256,-5.671803,-0.763516,1.919612,-4.991638,-2.463197,-8.783334,-5.343573,-1.322628,-2.798563,-9.386351,-6.535534,3.851438,5.523406,-4.811579,6.286296,-1.795824,3.893180,5.639426,-2.187625,-7.730107,-7.046845,0.337214,5.965808,2.800412,-2.185903,-3.475698,-1.395913,-5.159804,-1.604094,7.716336,6.814380,8.934298,-9.893059,4.299618,-4.188567,2.396450,-0.838828,5.192321,-1.587885,-3.090711,-7.335192,4.161895,-7.950853,-1.417629,9.847392,-2.798116,-9.292048,6.850209,-2.351836,2.460889,-6.666344,6.635554,1.664657,0.019302,7.696820,-4.590514,-0.442664,8.552936,1.825894,3.015364,6.835722,-8.584852,6.447055,-6.157184,-7.642517,-1.743980,-3.668754,-8.986571,-0.469293,6.422105,5.520738,2.144198,4.019606,-2.574879,3.294254,7.003403,2.027178,-0.569776,2.672876,-1.295141,-8.989199,9.914993,-9.440361,-3.057857,9.046286,-5.781302,0.092652,-6.711121,-3.108294,5.222531,8.959521,-5.603420,-3.907954,5.522669,2.206442,-9.171155,9.936009,-8.321906,7.712813,-0.537360,-4.015340,9.340869,0.449158,8.675879,-8.000455,6.899536,0.274354,-5.593502,-7.005431,-1.440191,4.292744,8.545004,-3.363743,-5.702896,-1.456983,-6.682297,1.529861,-0.031102,0.423237,7.716662,-6.105660,1.412606,-2.058930,-6.352875,-1.767864,8.653310,3.168038,-9.461674,-9.800232,1.842462,0.281932,-8.371009,4.101881,3.136354,-4.680664,-7.517430,2.928044,-1.045431,7.151143,-4.440469,8.259816,9.207224,-7.037440,-6.622830,-4.506626,1.648320,8.394015,-6.067199,-4.494644,-7.694226,-9.485966,-2.010877,-6.349861,-1.995744,3.648030,3.919578,-4.880126,8.299023,-9.174623,5.605997,2.044654,8.788278,-4.161617,4.842184,3.630916,3.725722,-4.681730,-3.143632,3.491551,-0.443091,9.986572,6.028746,-0.606259,5.673218,4.773848,4.656315,1.600840,2.968485,-2.166201,8.055838,-0.364679,-2.649440,-6.113683,-9.732737,0.318585,-8.704296,-1.815385], dtype = "float64")#candidate|6151|(315,)|const|float64
call_6150 = relay.TupleGetItem(func_601_call(relay.reshape(const_6151.astype('float64'), [7, 5, 9])), 2)
call_6152 = relay.TupleGetItem(func_604_call(relay.reshape(const_6151.astype('float64'), [7, 5, 9])), 2)
uop_6159 = relay.atanh(call_6150.astype('float64')) # shape=(7, 5, 9)
uop_6161 = relay.atanh(call_6152.astype('float64')) # shape=(7, 5, 9)
output = relay.Tuple([call_6121,call_6124,var_6125,call_6127,const_6151,uop_6159,])
output2 = relay.Tuple([call_6122,call_6126,var_6125,call_6128,const_6151,uop_6161,])
func_6174 = relay.Function([var_6125,], output)
mod['func_6174'] = func_6174
mod = relay.transform.InferType()(mod)
var_6175 = relay.var("var_6175", dtype = "float32", shape = (20,))#candidate|6175|(20,)|var|float32
output = func_6174(var_6175)
func_6176 = relay.Function([var_6175], output)
mutated_mod['func_6176'] = func_6176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6178 = relay.var("var_6178", dtype = "int16", shape = (11, 4, 14))#candidate|6178|(11, 4, 14)|var|int16
var_6179 = relay.var("var_6179", dtype = "int16", shape = (11, 4, 14))#candidate|6179|(11, 4, 14)|var|int16
bop_6180 = relay.logical_xor(var_6178.astype('int16'), relay.reshape(var_6179.astype('int16'), relay.shape_of(var_6178))) # shape=(11, 4, 14)
output = bop_6180
output2 = bop_6180
func_6187 = relay.Function([var_6178,var_6179,], output)
mod['func_6187'] = func_6187
mod = relay.transform.InferType()(mod)
mutated_mod['func_6187'] = func_6187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6187_call = mutated_mod.get_global_var('func_6187')
var_6189 = relay.var("var_6189", dtype = "int16", shape = (11, 4, 14))#candidate|6189|(11, 4, 14)|var|int16
var_6190 = relay.var("var_6190", dtype = "int16", shape = (11, 4, 14))#candidate|6190|(11, 4, 14)|var|int16
call_6188 = func_6187_call(var_6189,var_6190,)
output = call_6188
func_6191 = relay.Function([var_6189,var_6190,], output)
mutated_mod['func_6191'] = func_6191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1354_call = mod.get_global_var('func_1354')
func_1355_call = mutated_mod.get_global_var('func_1355')
call_6253 = relay.TupleGetItem(func_1354_call(), 0)
call_6254 = relay.TupleGetItem(func_1355_call(), 0)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
const_6262 = relay.const([[-3.531223,8.044770,8.984646,-9.748006,-4.826905,-5.498631],[5.882992,-2.285899,-8.660989,-9.736787,-7.863440,-7.231919],[5.123746,2.260186,3.251374,-0.099228,3.745851,-1.799945],[2.627884,0.024910,0.701928,7.699265,-2.941646,0.354971],[6.965775,-2.490594,-0.039790,-2.185859,-9.600097,9.549569],[0.008301,4.372214,1.044076,-8.238581,0.053063,-6.245688],[2.929436,8.261846,0.159112,-3.996139,8.219354,-9.665634],[-1.433880,0.862924,1.095617,-7.141155,1.680327,3.204845],[6.168405,7.227142,-5.784747,2.471679,8.467046,4.687643],[8.761944,4.189281,-4.696256,-9.159539,-5.536983,-7.972855],[-5.815754,8.297379,-0.037731,-8.213471,-7.862721,-9.455974],[-6.808677,-4.680268,5.980194,-2.041651,6.894688,8.193375],[-0.183003,-1.923417,0.168607,-6.555712,3.272647,8.981873],[-1.979369,5.912358,4.900531,4.492522,-1.324092,5.131528],[7.857651,-8.190534,-3.701259,2.507624,-1.417428,8.030274],[-8.121298,4.741115,4.565931,6.721636,4.425797,-2.756525],[2.664281,-7.774593,6.829951,0.641629,4.177666,-7.064016],[9.699035,-6.147344,6.514785,4.550831,5.639281,-0.918182],[-7.194518,2.202034,-2.133757,-7.985699,8.246555,3.323086],[2.867629,-7.315157,4.118966,-9.581695,-1.815880,-3.639096],[-7.263259,1.398526,-5.126366,3.974327,3.254371,-4.946424],[-1.503430,7.164968,7.428363,8.130476,3.266014,-1.500888],[-4.883643,5.929155,6.770369,-3.367793,-6.453683,-5.342803],[0.985367,8.182863,-9.778703,1.551151,-4.296442,-6.298778]], dtype = "float64")#candidate|6262|(24, 6)|const|float64
call_6261 = relay.TupleGetItem(func_5085_call(relay.reshape(const_6262.astype('float64'), [8, 6, 3])), 0)
call_6263 = relay.TupleGetItem(func_5087_call(relay.reshape(const_6262.astype('float64'), [8, 6, 3])), 0)
output = relay.Tuple([call_6253,call_6261,const_6262,])
output2 = relay.Tuple([call_6254,call_6263,const_6262,])
func_6264 = relay.Function([], output)
mod['func_6264'] = func_6264
mod = relay.transform.InferType()(mod)
output = func_6264()
func_6265 = relay.Function([], output)
mutated_mod['func_6265'] = func_6265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2934_call = mod.get_global_var('func_2934')
func_2936_call = mutated_mod.get_global_var('func_2936')
call_6323 = relay.TupleGetItem(func_2934_call(), 0)
call_6324 = relay.TupleGetItem(func_2936_call(), 0)
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
call_6327 = relay.TupleGetItem(func_2712_call(), 0)
call_6328 = relay.TupleGetItem(func_2714_call(), 0)
output = relay.Tuple([call_6323,call_6327,])
output2 = relay.Tuple([call_6324,call_6328,])
func_6333 = relay.Function([], output)
mod['func_6333'] = func_6333
mod = relay.transform.InferType()(mod)
output = func_6333()
func_6334 = relay.Function([], output)
mutated_mod['func_6334'] = func_6334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3944_call = mod.get_global_var('func_3944')
func_3946_call = mutated_mod.get_global_var('func_3946')
call_6449 = relay.TupleGetItem(func_3944_call(), 0)
call_6450 = relay.TupleGetItem(func_3946_call(), 0)
func_1836_call = mod.get_global_var('func_1836')
func_1838_call = mutated_mod.get_global_var('func_1838')
call_6454 = relay.TupleGetItem(func_1836_call(), 0)
call_6455 = relay.TupleGetItem(func_1838_call(), 0)
func_1468_call = mod.get_global_var('func_1468')
func_1472_call = mutated_mod.get_global_var('func_1472')
const_6459 = relay.const([[4,6,8,-5,5,7,-9,1,2,7,-6,7,8,-7,-7,-8,6,9,6,-9,2,-10,-2,-5,7,-8,-8,-8,-4,-3,-7,-4,-4,9,10,10,5,-3,3,3,-1,10,5,-4,-2,-2,9,-3,2,5,-9,4,-7,3,4,-7,-9,2,6,3,-6,-6,-2,10,-1,5,-1,6,-5,-5],[8,-4,10,9,6,3,-6,9,-10,-3,5,2,9,4,-10,-3,-3,-3,6,9,3,-4,-1,-8,-3,3,-9,3,-3,-1,8,-9,-4,-1,4,10,2,-8,-6,-5,7,6,2,-5,-8,8,-4,-4,1,9,-7,-5,-3,-3,9,-10,7,4,7,4,10,1,1,2,-5,9,10,-3,7,5],[-6,-4,-1,2,-10,5,-8,-3,4,-9,6,10,-2,-10,1,-6,-8,-9,1,-9,6,2,-10,1,10,-2,-9,-2,-7,9,6,4,8,-7,5,-1,-9,6,-7,3,10,4,10,-8,8,7,-5,-10,-6,-3,2,-5,6,-8,10,-10,7,-8,10,5,7,2,5,-6,-8,4,-2,8,-10,-3],[-8,-1,-9,-3,6,6,10,-5,9,-5,-10,-6,-6,2,-1,-6,-2,-7,5,1,-7,-7,5,3,-3,1,-5,-8,1,9,-7,-2,-2,-9,8,10,-6,-4,9,7,6,-7,-6,4,-7,1,7,-4,-2,-6,4,8,1,3,9,-3,-7,-6,7,10,2,-9,-5,-8,7,-9,-7,3,1,9],[-3,7,-5,2,-4,6,-2,-6,10,-5,-7,-8,-3,6,6,-6,-10,-8,7,-4,2,8,7,-2,10,-3,-4,-5,1,-3,-9,-5,-3,1,-5,-4,9,1,-7,-2,-10,8,-6,-1,6,-6,-4,-1,6,-10,1,5,5,3,-9,-1,-9,-3,1,4,1,-2,10,3,-7,6,6,-7,7,4],[-6,5,5,-10,3,6,3,8,-1,-9,7,-8,7,5,-5,10,-6,-7,-4,-7,-1,2,1,5,-4,-2,-10,-3,6,-10,8,4,-6,3,8,-10,5,10,5,-7,2,9,10,10,1,8,-4,3,1,-4,8,-7,8,-6,-5,-2,-2,2,5,5,3,-7,-6,-9,-6,6,-4,4,10,-5],[-5,-3,-9,7,8,2,-7,-8,-9,10,9,7,8,-7,5,7,-10,5,7,5,-5,-7,-8,-3,-4,-10,8,-6,3,9,7,8,-6,9,6,-9,3,-3,-10,5,1,7,-7,8,-6,9,-2,-3,9,-4,-5,8,-8,6,9,-4,-1,2,5,9,8,7,3,2,9,1,-10,2,9,-10],[1,1,-6,-1,4,2,-6,-3,6,-4,-3,9,-3,-1,-8,3,6,3,-8,3,-4,3,4,8,-3,-7,7,-8,-6,5,2,7,-3,-10,-7,-2,-7,-9,-2,3,1,-2,5,-9,2,8,1,2,8,-6,4,-3,4,4,-1,3,-4,-10,-6,-3,-4,-4,6,10,9,-6,3,-6,1,5],[6,4,5,-10,-7,-1,3,8,3,-1,4,-7,-7,8,-4,10,2,-1,-1,8,-3,-9,-6,6,-4,2,-4,-9,-4,9,-1,-8,-6,-10,10,-5,8,-1,-2,2,6,8,-2,1,5,4,2,8,8,4,-5,3,4,8,1,-4,5,-6,-10,-3,-8,10,6,7,6,-4,-2,-6,8,-4],[3,7,1,-5,2,-5,-6,2,3,-7,-3,-1,7,1,1,-6,7,-4,-7,-1,-10,1,3,7,-3,6,5,-10,7,10,9,6,-9,6,1,7,4,-7,-3,3,-1,1,8,-10,5,3,-6,-1,1,-3,3,-6,-9,-3,7,8,7,-4,3,8,-4,1,3,-4,-9,7,-8,10,7,-2],[1,2,1,3,-2,3,5,5,-8,-10,-8,1,-3,-3,-6,5,-5,5,7,-4,-10,-4,-3,-3,-9,-7,2,-3,9,-5,1,2,7,3,-7,2,6,-4,-8,-9,10,4,-6,-6,2,-9,1,10,3,3,-2,9,2,6,-10,7,-3,-3,7,-3,3,2,7,4,-7,10,-4,7,2,-8],[-8,-4,5,1,9,2,10,-5,-6,-5,-10,2,3,1,-3,-10,3,6,-3,3,3,-1,-9,-7,9,-10,6,2,1,7,-2,7,-2,7,-9,5,-4,-2,7,8,3,5,-9,-9,10,-6,-4,10,-7,-1,-5,-8,-5,4,4,-9,1,4,-1,-10,-10,3,-3,-10,-10,-7,-9,6,9,-7],[-3,8,2,-3,9,-6,-2,-5,-4,5,7,-10,1,2,7,3,-8,3,-6,-5,-2,6,-1,-8,7,10,-5,10,-8,6,-2,9,-3,-9,9,-4,4,4,10,-2,-5,-10,-3,-8,3,-10,4,-6,-2,-6,1,-1,-9,-2,-8,5,-7,6,7,2,-10,4,10,3,-7,2,-8,-4,-9,-5],[1,10,6,7,-10,3,9,-5,9,10,6,3,4,-10,-6,-2,6,-6,-8,8,-1,-9,10,1,2,5,-5,2,8,4,7,-10,8,9,-8,-5,8,3,-1,-9,-8,-3,-5,-6,-6,-4,8,8,-1,-3,4,9,-3,-1,-9,-9,5,1,4,-2,10,3,-1,4,-8,2,-5,5,3,2]], dtype = "int8")#candidate|6459|(14, 70)|const|int8
call_6458 = relay.TupleGetItem(func_1468_call(relay.reshape(const_6459.astype('int8'), [7, 14, 10]), relay.reshape(const_6459.astype('int8'), [7, 14, 10]), ), 1)
call_6460 = relay.TupleGetItem(func_1472_call(relay.reshape(const_6459.astype('int8'), [7, 14, 10]), relay.reshape(const_6459.astype('int8'), [7, 14, 10]), ), 1)
func_3865_call = mod.get_global_var('func_3865')
func_3867_call = mutated_mod.get_global_var('func_3867')
call_6464 = func_3865_call()
call_6465 = func_3865_call()
func_3659_call = mod.get_global_var('func_3659')
func_3661_call = mutated_mod.get_global_var('func_3661')
call_6467 = relay.TupleGetItem(func_3659_call(), 0)
call_6468 = relay.TupleGetItem(func_3661_call(), 0)
output = relay.Tuple([call_6449,call_6454,call_6458,const_6459,call_6464,call_6467,])
output2 = relay.Tuple([call_6450,call_6455,call_6460,const_6459,call_6465,call_6468,])
func_6471 = relay.Function([], output)
mod['func_6471'] = func_6471
mod = relay.transform.InferType()(mod)
output = func_6471()
func_6472 = relay.Function([], output)
mutated_mod['func_6472'] = func_6472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1507_call = mod.get_global_var('func_1507')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_6498 = relay.TupleGetItem(func_1507_call(), 0)
call_6499 = relay.TupleGetItem(func_1509_call(), 0)
func_2820_call = mod.get_global_var('func_2820')
func_2823_call = mutated_mod.get_global_var('func_2823')
var_6501 = relay.var("var_6501", dtype = "float64", shape = (1024,))#candidate|6501|(1024,)|var|float64
call_6500 = relay.TupleGetItem(func_2820_call(relay.reshape(var_6501.astype('float64'), [8, 16, 8])), 0)
call_6502 = relay.TupleGetItem(func_2823_call(relay.reshape(var_6501.astype('float64'), [8, 16, 8])), 0)
func_4468_call = mod.get_global_var('func_4468')
func_4471_call = mutated_mod.get_global_var('func_4471')
var_6507 = relay.var("var_6507", dtype = "float32", shape = (1872,))#candidate|6507|(1872,)|var|float32
call_6506 = relay.TupleGetItem(func_4468_call(relay.reshape(var_6507.astype('float32'), [16, 9, 13])), 1)
call_6508 = relay.TupleGetItem(func_4471_call(relay.reshape(var_6507.astype('float32'), [16, 9, 13])), 1)
output = relay.Tuple([call_6498,call_6500,var_6501,call_6506,var_6507,])
output2 = relay.Tuple([call_6499,call_6502,var_6501,call_6508,var_6507,])
func_6511 = relay.Function([var_6501,var_6507,], output)
mod['func_6511'] = func_6511
mod = relay.transform.InferType()(mod)
var_6512 = relay.var("var_6512", dtype = "float64", shape = (1024,))#candidate|6512|(1024,)|var|float64
var_6513 = relay.var("var_6513", dtype = "float32", shape = (1872,))#candidate|6513|(1872,)|var|float32
output = func_6511(var_6512,var_6513,)
func_6514 = relay.Function([var_6512,var_6513,], output)
mutated_mod['func_6514'] = func_6514
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6568 = relay.var("var_6568", dtype = "float32", shape = (10, 10, 13))#candidate|6568|(10, 10, 13)|var|float32
uop_6569 = relay.rsqrt(var_6568.astype('float32')) # shape=(10, 10, 13)
uop_6571 = relay.asinh(var_6568.astype('float32')) # shape=(10, 10, 13)
bop_6576 = relay.logical_and(var_6568.astype('bool'), relay.reshape(uop_6571.astype('bool'), relay.shape_of(var_6568))) # shape=(10, 10, 13)
var_6590 = relay.var("var_6590", dtype = "float32", shape = (10, 10, 13))#candidate|6590|(10, 10, 13)|var|float32
bop_6591 = relay.multiply(var_6568.astype('uint64'), relay.reshape(var_6590.astype('uint64'), relay.shape_of(var_6568))) # shape=(10, 10, 13)
func_4998_call = mod.get_global_var('func_4998')
func_5001_call = mutated_mod.get_global_var('func_5001')
const_6598 = relay.const([[-10],[1],[-4],[-7],[2],[-9],[-2],[-10],[-10],[2],[8],[-1],[-4],[-6],[2],[-9],[6],[10],[-4],[4],[-4],[9],[-4],[4],[-1],[-1],[-2],[-1],[7],[5],[-9],[10],[6],[-5],[6],[6],[-2],[6],[1],[-2],[-10],[-3],[-7],[-9],[4],[-2],[10],[-6],[1],[-7],[-1],[-6],[8],[-3],[-6],[3],[-9],[-10],[-1],[-1],[-5],[-5],[6],[-3],[5],[5],[-3],[-2],[-7],[-1],[-9],[-10],[-9],[7],[1],[4],[-2],[3],[2],[-6],[-8],[-4],[-5],[3],[9],[-4],[-6],[-9],[5],[6],[3],[-4],[-1],[-4],[2],[2],[2],[-10],[-2],[9],[-5],[-4],[-7],[8],[8],[-10],[4],[-5],[-10],[7],[-10],[2],[5],[-8],[-5],[2],[10],[-2],[8],[9],[-4],[6],[-2],[10],[-1],[-3],[-8],[-2],[-7],[1],[9],[-3],[-1],[4],[-5],[-3],[1],[-6],[2],[4],[-4],[4],[-2],[-4],[9],[10],[-1],[7],[-7],[1],[-3],[2],[4],[8],[3],[9],[6],[9],[10],[-6],[1],[6],[-8],[3],[-5],[9],[9],[-3],[-9],[-8],[10],[-2],[-1],[-4],[-4],[-1],[-6],[-6],[2],[-4],[-2],[-5],[6],[3],[-9],[-8],[10],[-5],[10],[-3],[2],[9],[3],[-6],[3],[-3],[3],[-5],[6],[-6],[10],[-3],[-5],[3],[-10],[2],[-4],[-9],[6],[-3],[-5],[3],[4],[9],[-7],[6],[1],[10],[-10],[3],[-1],[1],[6],[2],[7],[-9],[2],[10],[-4],[-8],[8],[-10],[5],[-6],[3],[2],[-4],[9],[5],[10],[-7],[-4],[-2],[6],[7],[-9],[-10],[-3],[7],[10],[7],[-5],[-7],[9],[-4],[-3],[9],[-9],[-2],[-7],[1],[-2],[-4],[-5],[-4],[-2],[7],[4],[-10],[5],[3],[6],[-3],[-10],[-1],[4],[4],[-4],[10],[-9],[4],[-5],[-9],[-6],[-1],[4],[9],[5],[4],[-7],[-4],[-9],[-6],[7],[10],[-2],[7],[9],[6],[6],[6],[-3],[-9],[-5],[4],[10],[-4],[8],[-9],[7],[1],[8],[-7],[-6],[10],[-4],[4],[-9],[6],[8],[9],[-9],[6],[-4],[2],[-6],[3],[1],[-9],[-6],[-10],[7],[-8],[7],[-2],[5],[2],[6],[-3],[2],[-4],[-10],[-4],[-8],[9],[4],[-4],[3],[7],[5],[4],[3],[-8],[-3],[1],[-8],[-8],[3],[-1],[-5],[-5],[-10],[-9],[-1],[3],[-8],[-10],[3],[1],[-8],[-5],[-7],[-5],[3],[1],[6],[8],[-7],[1],[5],[-7],[-10],[-5],[-2],[-9],[9],[7],[7],[6],[9],[9],[-5],[3],[5],[-1],[-7],[3],[-5],[10],[-7],[8],[-5],[3],[8],[-1],[9],[4],[8],[-10],[-3],[-1],[-1],[-10],[7],[4],[3],[1],[6],[1],[5],[2],[-3],[-2],[4],[-3],[-2],[9],[-3],[10],[3],[3],[3],[-5],[1],[-4],[9],[2],[2],[2],[-5],[5],[1],[1],[-7],[1],[2],[-7],[1],[-7],[-7],[9],[-6],[-7],[-7],[6],[-5],[-9],[7],[10],[10],[3],[7],[-10],[-9],[3],[9],[3],[4],[-6],[10],[-3],[1],[1],[4],[1],[3],[10],[1],[10],[-7],[7],[4],[-1],[-9],[-9],[7],[1],[-6],[7],[4],[-3],[-1],[6],[-3],[3],[9],[5],[-9],[6],[-5],[6],[-9],[-1],[9],[-2],[-7],[7],[8],[-1],[2],[-10],[-3],[6],[3],[-9],[-7],[10],[2],[-8],[1],[-4],[-4],[8],[8],[2],[1],[-1],[-7],[8],[1],[8],[-4],[5],[-10],[-7],[-4],[1],[5],[2],[7],[3],[6],[-4],[-3],[4],[-10],[1],[1],[-10],[-8],[3],[-9],[9],[-2],[-7],[-5],[-6],[-4],[-5],[-3],[-10],[-1],[6],[6],[4],[2],[-5],[-10],[7],[7],[10],[6],[-4],[-8],[-7],[8],[-3],[8],[-3],[-7],[8],[4],[2],[-2],[-5],[-7],[-3],[-3],[-5],[-8],[2],[-10],[6],[-6],[4],[-8],[5],[-10],[6],[-8],[-10],[-8],[-9],[-10],[1],[-7],[-5],[-10],[6],[-2],[9],[5],[-9],[-1],[-4],[8],[5],[7],[-6],[-8],[-4],[-2],[1],[9]], dtype = "uint16")#candidate|6598|(624, 1)|const|uint16
call_6597 = relay.TupleGetItem(func_4998_call(relay.reshape(const_6598.astype('uint16'), [624,])), 1)
call_6599 = relay.TupleGetItem(func_5001_call(relay.reshape(const_6598.astype('uint16'), [624,])), 1)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_6607 = relay.TupleGetItem(func_4204_call(), 1)
call_6608 = relay.TupleGetItem(func_4206_call(), 1)
output = relay.Tuple([uop_6569,bop_6576,bop_6591,call_6597,const_6598,call_6607,])
output2 = relay.Tuple([uop_6569,bop_6576,bop_6591,call_6599,const_6598,call_6608,])
func_6622 = relay.Function([var_6568,var_6590,], output)
mod['func_6622'] = func_6622
mod = relay.transform.InferType()(mod)
mutated_mod['func_6622'] = func_6622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6622_call = mutated_mod.get_global_var('func_6622')
var_6624 = relay.var("var_6624", dtype = "float32", shape = (10, 10, 13))#candidate|6624|(10, 10, 13)|var|float32
var_6625 = relay.var("var_6625", dtype = "float32", shape = (10, 10, 13))#candidate|6625|(10, 10, 13)|var|float32
call_6623 = func_6622_call(var_6624,var_6625,)
output = call_6623
func_6626 = relay.Function([var_6624,var_6625,], output)
mutated_mod['func_6626'] = func_6626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3164_call = mod.get_global_var('func_3164')
func_3166_call = mutated_mod.get_global_var('func_3166')
call_6631 = relay.TupleGetItem(func_3164_call(), 0)
call_6632 = relay.TupleGetItem(func_3166_call(), 0)
output = call_6631
output2 = call_6632
func_6634 = relay.Function([], output)
mod['func_6634'] = func_6634
mod = relay.transform.InferType()(mod)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6634_call = mutated_mod.get_global_var('func_6634')
call_6635 = func_6634_call()
output = call_6635
func_6636 = relay.Function([], output)
mutated_mod['func_6636'] = func_6636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mod.get_global_var('func_1836')
func_1838_call = mutated_mod.get_global_var('func_1838')
call_6644 = relay.TupleGetItem(func_1836_call(), 0)
call_6645 = relay.TupleGetItem(func_1838_call(), 0)
func_4292_call = mod.get_global_var('func_4292')
func_4293_call = mutated_mod.get_global_var('func_4293')
call_6649 = relay.TupleGetItem(func_4292_call(), 0)
call_6650 = relay.TupleGetItem(func_4293_call(), 0)
func_3117_call = mod.get_global_var('func_3117')
func_3119_call = mutated_mod.get_global_var('func_3119')
call_6663 = relay.TupleGetItem(func_3117_call(), 0)
call_6664 = relay.TupleGetItem(func_3119_call(), 0)
output = relay.Tuple([call_6644,call_6649,call_6663,])
output2 = relay.Tuple([call_6645,call_6650,call_6664,])
func_6689 = relay.Function([], output)
mod['func_6689'] = func_6689
mod = relay.transform.InferType()(mod)
mutated_mod['func_6689'] = func_6689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6689_call = mutated_mod.get_global_var('func_6689')
call_6690 = func_6689_call()
output = call_6690
func_6691 = relay.Function([], output)
mutated_mod['func_6691'] = func_6691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_43_call = mod.get_global_var('func_43')
func_44_call = mutated_mod.get_global_var('func_44')
call_6694 = relay.TupleGetItem(func_43_call(), 0)
call_6695 = relay.TupleGetItem(func_44_call(), 0)
func_6634_call = mod.get_global_var('func_6634')
func_6636_call = mutated_mod.get_global_var('func_6636')
call_6708 = func_6634_call()
call_6709 = func_6634_call()
func_2934_call = mod.get_global_var('func_2934')
func_2936_call = mutated_mod.get_global_var('func_2936')
call_6715 = relay.TupleGetItem(func_2934_call(), 0)
call_6716 = relay.TupleGetItem(func_2936_call(), 0)
output = relay.Tuple([call_6694,call_6708,call_6715,])
output2 = relay.Tuple([call_6695,call_6709,call_6716,])
func_6724 = relay.Function([], output)
mod['func_6724'] = func_6724
mod = relay.transform.InferType()(mod)
output = func_6724()
func_6725 = relay.Function([], output)
mutated_mod['func_6725'] = func_6725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6472_call = mutated_mod.get_global_var('func_6472')
call_6736 = relay.TupleGetItem(func_6471_call(), 5)
call_6737 = relay.TupleGetItem(func_6472_call(), 5)
func_6511_call = mod.get_global_var('func_6511')
func_6514_call = mutated_mod.get_global_var('func_6514')
const_6752 = relay.const([[0.977115,-4.821327,-4.855530,9.848580,8.619975,5.541460,-5.022674,3.395647,9.591011,-5.737447,2.990341,1.912941,3.970618,-9.378036,-3.739387,-3.679869,-7.948602,3.426678,3.105169,3.628324,-0.311385,2.943049,-5.638689,-0.781231,-4.216644,-1.874313,-7.647730,-1.342151,-7.292266,-7.364460,6.341678,-8.498613,1.990514,-7.654264,-0.213045,9.403424,8.102292,3.903340,5.301524,9.630648,-8.813550,0.817840,7.829808,7.807990,6.988357,0.010413,-8.297712,-7.068791,0.910099,-6.957910,6.615402,-8.344054,-8.815894,-3.216593,-4.247330,6.518609,6.275058,2.375835,5.568645,-3.466049,-4.147448,9.445062,4.093402,-1.684645],[9.224923,-5.030611,-5.097968,5.642018,-3.571878,7.288075,1.814569,-6.047237,2.063897,-4.577104,-7.258741,8.617276,-2.285983,6.995985,0.503761,-7.354985,-4.518194,4.608087,-5.581878,-7.648366,-5.328159,7.890729,-9.256818,-6.098835,6.588226,-4.790274,1.369730,7.329322,6.184552,3.852059,-4.121234,8.683298,-1.072045,-5.258235,9.751515,8.186975,-4.722427,7.553088,-7.656887,-2.132016,-0.873955,1.925536,0.537970,6.138881,8.780970,2.459867,2.857914,1.872767,1.512196,-2.405359,-2.611534,-4.124293,-2.469755,4.948532,9.563494,-0.306882,6.743584,1.782463,-9.914758,8.483094,0.953438,-0.202878,2.484016,-2.957871],[5.619092,1.963499,-9.425528,-6.278223,0.256071,-0.125755,7.919788,9.458414,-3.396689,2.260429,2.331618,4.364785,6.498431,6.220931,9.126995,8.842335,-6.754904,-4.613370,-8.118427,2.268153,-1.853035,-2.493662,1.382478,-7.611834,-1.020302,-1.809535,-9.181920,-5.478769,8.058939,-6.869490,1.766529,5.045666,-3.750370,5.157496,-0.312576,5.596636,-7.154942,7.822993,8.778982,7.276957,8.930218,4.246556,3.547215,-2.643414,-7.840562,8.716657,-9.812089,0.044990,-0.988692,-8.916996,-5.724437,-3.357865,2.723399,-3.266419,6.903589,9.446506,8.782371,8.199999,-0.767375,-7.451926,-4.506238,8.298311,-7.064637,-6.792149],[8.109788,-0.029431,-4.033614,-7.150576,-5.046733,-9.295589,-5.511834,-8.111714,-2.356214,4.373558,8.317944,8.037870,2.455861,2.116579,-2.272180,5.251707,-4.693375,1.521359,-3.726268,-9.650243,-7.811436,-8.171371,-3.400650,-0.149204,-4.998101,-7.763368,2.052699,-0.400692,-3.973967,3.848939,8.006991,-8.242511,-2.214197,-5.853400,2.675964,2.323328,3.783143,-2.059235,-6.579333,-5.199378,-5.787866,0.621996,4.703232,9.425887,3.104718,-6.073955,4.122232,-4.821494,-2.934499,-6.213323,7.506178,7.001952,3.473905,7.296814,-0.029619,7.391231,-4.146749,9.416893,-1.204988,0.323042,2.575839,-6.556830,-2.129385,-1.671210],[1.584316,-6.902743,-8.114629,1.707480,9.763548,8.836360,-7.098708,3.282085,6.450693,-7.981539,0.908384,4.795779,7.731217,7.622436,-3.373568,-1.990793,-1.130107,2.271575,-9.624342,-7.270988,7.516132,-4.929853,-3.726571,-5.368840,-0.630090,4.386605,-2.876725,-3.087842,-1.769882,9.792059,4.978947,-8.694421,-5.562769,-0.336527,-7.513530,-7.567056,-1.667249,-7.047800,-8.769651,9.553760,4.429399,-6.401274,7.258621,-2.900668,-2.160493,8.694982,7.404247,1.052223,4.023441,3.864306,7.862650,7.436972,-9.479485,-5.261537,-0.097910,3.092903,3.276262,0.034160,-5.522469,-7.091869,0.938415,-5.756029,-8.578495,-5.783586],[3.174024,7.612210,5.249009,-4.219441,-3.772457,5.664830,-5.860137,4.296851,-6.394664,1.313741,-6.252907,-2.957616,2.929516,-7.419838,-7.666596,1.219670,-4.277035,-2.439409,6.378976,3.823683,-1.702587,-2.330433,1.867090,-8.941147,-0.381058,-0.900069,1.520233,-1.228371,4.628390,-0.239446,0.257187,6.201937,6.763173,6.828439,2.650076,-6.157878,1.612828,-1.605593,-3.179590,2.234900,-1.023397,6.131263,-3.122994,-6.663576,6.998728,5.038752,-1.565988,-7.545787,0.672259,-8.019196,8.967097,-1.917330,5.991671,1.250542,7.294820,-2.941153,9.748740,2.749243,3.486718,5.898715,5.773259,6.520759,-5.070022,4.814994],[-9.639628,-0.200080,-3.427772,-4.382393,0.903808,-0.221588,-4.353129,7.275098,-8.143143,5.573747,-0.608752,-6.659893,-7.968975,-2.755756,-6.416661,-0.309441,8.873163,-8.539591,3.876457,-2.477060,-7.311918,3.741741,2.857326,-8.201767,6.181490,-1.008434,5.986237,3.602171,-2.657560,-8.705018,7.379113,5.027659,8.190050,9.647770,5.153184,6.939060,-9.053778,-6.850181,2.027736,5.502219,6.819448,3.571194,6.716251,-1.437067,-8.151077,-4.645241,1.979770,-9.258645,5.248136,2.693868,9.469796,-5.711801,1.518392,-4.035905,-0.165622,3.161935,7.614382,-8.368677,-6.503933,-3.745259,9.017321,-7.705802,0.249350,3.116710],[-2.839500,1.124284,0.492236,8.348733,-9.002884,-7.346953,-4.877385,-1.828684,-7.376668,-3.268305,9.195677,2.195295,9.521422,6.601379,-1.637591,3.036731,6.921998,9.890096,-0.715644,2.497759,-2.462320,3.473975,-6.345759,-3.716241,-4.867257,7.006809,4.791429,-3.672387,-2.644374,3.066824,-0.937489,-9.673108,0.155827,2.591884,-5.807110,6.889297,-1.432798,9.463000,-9.011119,9.141449,-2.999757,2.973511,3.257317,-0.083007,0.056319,-2.907702,-1.939903,-0.555471,-5.644089,-6.548706,-0.996076,9.030925,-8.877348,8.570182,-3.515873,-7.413140,9.611435,6.417028,0.202277,0.429960,2.809017,2.059285,-8.580660,-0.579438],[2.097500,6.314898,-1.858635,-9.517447,-6.868709,9.330390,-2.627631,7.307944,1.327876,-9.153795,5.725710,-3.968097,0.046557,-4.683244,2.507025,7.536545,9.156033,-9.205422,8.250413,3.827214,9.167777,7.676777,-4.529412,3.981323,0.115981,-3.327633,6.701762,0.573251,-1.099611,-0.456650,-4.304283,-3.721046,7.730829,9.618948,1.701538,-3.880871,-6.096085,-1.299330,-5.893708,-8.311662,3.094715,-9.100129,1.930028,-2.241988,-0.593077,6.687966,-7.922883,-4.639824,1.617785,-1.853978,-2.373289,4.512279,-8.937868,9.292631,1.116451,-7.715517,9.291889,-3.061525,0.687394,-1.607266,8.613171,-5.230880,-0.555251,0.450748],[0.037460,-1.659176,-2.171577,-7.165242,-1.109555,-6.524943,8.208160,-7.911163,2.827287,-7.537478,4.646428,-5.305677,-8.417015,-1.195192,-6.090124,-3.507484,-9.504257,5.929791,-1.199351,6.884092,-8.069778,8.900329,7.767186,-7.007404,-3.473896,9.531452,6.188621,-7.418747,-7.551701,-4.108600,0.582619,-2.836644,-1.098743,-3.543983,7.907702,7.706180,4.575263,-4.209071,-7.102189,-9.502784,8.016995,3.804357,1.541960,-8.100592,-6.878936,-6.980229,-3.800485,9.538781,9.518156,4.909295,-3.566690,-3.484967,7.057942,-9.678111,8.591399,-5.163685,-2.751322,8.888883,-4.685155,5.299774,2.842697,-7.370609,3.581242,-9.836122],[1.091547,3.128524,-1.317578,-8.788109,-0.637621,4.719764,8.566733,-8.247682,3.636812,2.538847,-0.336138,5.100123,1.723066,1.256351,7.317698,9.646601,4.826400,-8.459830,-8.647849,-6.203228,5.667393,-6.198806,9.679773,-3.598258,-0.763596,-6.649262,6.211624,-3.924007,0.716485,0.358856,0.195980,-6.950093,8.031237,-7.694782,5.344624,1.303811,0.087930,7.131131,-3.451959,0.168597,8.648353,2.652324,1.302285,2.988363,0.558868,-8.014601,9.731152,-5.781595,6.725145,-1.053263,4.703999,-7.125302,5.767783,9.272659,6.415813,9.939016,0.063054,6.176269,-9.988426,0.979290,7.591677,9.637224,-2.698895,-0.256974],[-7.147084,-3.656576,-3.248975,-0.729333,-3.989204,9.520125,6.699196,0.149217,-2.378306,7.852501,5.186420,-9.377775,-2.541859,-6.726761,1.264705,4.800760,9.152731,8.467289,-3.587298,-3.707600,-7.319465,-9.984869,-4.204224,-9.656319,6.518749,9.415877,-5.456107,9.524601,6.362944,-8.502396,-8.250089,6.767646,5.863419,2.544344,-1.894286,0.160108,-6.647044,-8.579675,7.483374,2.153363,2.467516,7.968069,-3.972949,-9.158307,-8.391285,5.960066,-2.489805,3.782754,0.586925,2.431549,-9.813495,-4.850489,3.980602,5.939609,4.050754,4.553817,4.331038,0.340019,6.803205,-8.236153,-0.891572,9.185623,-1.006317,-9.157312],[5.862557,4.774881,-2.213387,-4.534644,2.771810,-4.901609,-6.312766,3.200344,2.211248,-0.933375,-9.643851,-8.927596,-2.438399,-4.569735,-2.754932,-1.534272,-2.087707,8.525691,-0.920544,-2.483627,2.034732,-6.544829,-4.246659,-1.569769,-5.468400,8.613989,2.503814,0.300367,1.618055,-1.549095,5.502400,9.249187,-7.999610,-8.892225,8.352722,-8.442306,-7.212772,-5.685792,-4.837436,-5.367277,6.815808,-9.408931,9.870538,-7.369956,7.018760,4.050428,-8.270545,-9.304864,5.067577,2.477188,-6.578725,-5.093340,-0.977076,4.247901,3.593314,-5.313333,0.333591,1.952899,-8.603030,0.029446,-2.683949,-9.269419,-3.554945,1.790881],[-7.843410,-7.400736,3.987760,2.567909,6.025457,-9.763893,-4.383251,-7.988871,7.687714,-3.682586,2.459005,4.634214,-1.951090,-8.057817,5.278231,4.376481,-9.889492,-4.951967,-1.680485,-6.450619,-7.396286,-4.915260,3.756986,6.744590,-0.217948,-4.357431,6.860213,3.524321,-3.755033,-2.981266,8.645520,9.643739,0.616330,7.797000,0.120975,-2.991009,4.956902,-6.407324,9.975690,0.464079,5.334906,3.105182,-7.377954,8.422347,4.418587,-0.228783,2.410194,-8.237946,1.074302,-0.010109,3.982577,-0.850072,0.345981,9.547906,-4.812364,-2.429325,6.083252,1.479764,-0.422232,-4.056167,-3.984848,-0.694463,-2.539080,4.573530],[8.312866,-3.753352,-9.222776,5.425013,4.398397,-4.331919,0.275941,8.287355,-7.611819,-4.625177,1.848310,-5.167645,6.664844,9.057860,-5.137510,8.156585,-6.613972,-9.804352,8.158121,-9.813925,7.470220,-1.243078,0.313329,8.509494,-3.702801,-5.457671,-9.597951,-8.824566,-0.748301,6.189124,-3.745207,-6.816243,-8.148799,3.809729,-0.796227,-8.578759,-4.417947,-8.746749,-0.137478,2.333663,-2.997608,0.437095,8.829029,-6.268888,9.726626,-1.088133,6.907947,3.087726,6.054665,3.530706,-2.548903,0.048544,-2.309327,7.616681,3.222730,-7.442763,-7.431937,-2.311202,6.447277,8.531450,-0.936105,-0.223997,-1.508784,7.710711],[-9.198111,8.010043,-5.542679,8.246358,0.020311,-1.624235,9.643560,-5.515959,-3.131712,1.291580,3.036839,-2.104427,-0.935705,0.553481,-4.370392,5.205553,2.207021,-4.991477,6.701837,9.861673,-8.491974,-9.942098,-5.649389,9.988229,1.680625,-2.385686,-9.882721,0.985546,3.589431,5.089002,1.283361,-1.882153,-9.882504,1.630464,-8.177720,-5.515587,-7.287490,-0.189387,8.901220,0.099127,2.160588,9.777373,-2.241964,-9.957080,-2.137138,-3.827781,-4.025402,-0.205310,0.755576,9.852908,-4.991131,-1.076860,-7.084388,2.463989,-6.327846,-1.881128,-8.193418,0.655665,-9.515056,-9.883037,-8.256549,9.551975,8.579939,1.786799]], dtype = "float64")#candidate|6752|(16, 64)|const|float64
const_6753 = relay.const([-4.584644,-6.717733,-9.476466,-0.116396,-6.317593,-4.529688,-9.375039,1.830403,2.031291,3.244768,-7.310956,5.852698,0.283323,-1.214007,4.068451,-2.037592,5.322884,-0.584882,6.123699,0.252128,2.988725,-7.208993,7.090973,9.935077,-3.606722,-5.649180,9.430635,-0.561194,-7.341912,0.235059,-1.231148,3.884205,-1.455814,7.755655,-3.888460,1.656694,-4.354022,-9.559289,1.011055,-4.051344,-9.084676,4.061842,-3.511138,-4.762529,-5.085582,-4.558030,-7.384572,3.324530,8.750594,-9.654192,6.167761,-6.780147,5.490032,4.801148,-7.631509,-0.139119,5.817579,-3.103848,-3.656278,-2.478378,-2.346070,9.132255,0.156675,1.812465,5.007548,-3.571952,8.580594,-3.538682,3.442481,2.572349,5.816891,9.246313,8.426289,4.370677,-1.756584,8.263057,-9.083223,2.630073,5.903827,9.525135,-1.600517,3.717036,-6.421081,8.117664,2.817435,6.863237,-8.587541,7.127054,-2.927460,1.198815,4.331797,5.943815,3.916476,4.744656,0.936533,0.367020,-3.429636,2.009242,-5.923872,8.115612,1.511621,1.762657,5.309159,-5.220950,7.011959,-7.994702,-8.176539,-7.265805,5.341095,-8.259904,-3.610437,-1.338931,-8.843232,9.449742,-6.782326,-0.947726,7.806230,-9.692819,1.285523,-9.246600,-5.002316,0.964272,-5.212475,0.062040,6.427053,-2.087615,4.099312,-1.594085,-8.823162,5.871285,-0.609161,4.561399,2.616263,-3.456636,-8.353602,9.339748,-3.743545,7.636536,-0.711163,-5.544880,-0.841956,-7.683147,5.873980,0.849760,-4.231798,3.094646,-8.209959,4.451993,-8.622884,-1.039763,-4.767976,7.520165,-6.722392,-1.188323,1.006681,-2.081112,2.690667,-3.286809,-8.249830,4.176195,-0.317659,0.067370,8.304288,-5.509648,9.812287,-4.089380,-1.842879,-3.817084,-5.629164,8.204769,3.623962,1.957759,-7.121904,8.335638,5.034807,-7.418936,0.919160,-2.071635,-9.257728,-1.597083,-0.018480,1.489647,7.162405,5.385153,-4.336656,2.974822,0.888991,9.739817,-0.656352,-6.124645,2.198450,8.337087,-7.578096,3.429041,-1.936642,-4.554754,-2.646984,0.448239,8.923575,2.653568,-6.522270,9.025440,6.627630,5.927382,-0.888512,9.670033,-3.192250,-4.354657,-4.816152,9.155802,-5.013508,2.801744,-2.654268,-7.582839,-4.368888,0.862804,-8.017560,-3.464334,1.661247,-0.895436,1.117118,8.361825,-0.841551,-2.257956,0.473534,-0.053627,-4.174957,-4.632059,-8.214865,-6.992078,-6.166149,5.322305,8.511337,-1.311630,-6.103577,-2.496945,-3.667307,8.748541,8.165539,-5.448442,-9.526590,-4.490256,-0.329762,4.938621,3.397848,5.205999,8.303443,3.210739,-4.009651,-9.690583,-6.863688,-3.049610,-5.761946,0.414626,-5.053636,2.015422,-8.337646,2.229145,-1.025120,-7.879504,-9.066909,-0.468260,-0.923664,-6.019677,4.927337,7.187659,3.491010,3.523052,-9.649521,-8.699949,-9.471363,0.333238,0.604741,2.023837,8.813989,-8.081511,-6.834624,8.424500,-4.714947,5.469165,-1.253998,7.922109,9.465867,-1.863956,1.822616,-5.980112,-1.275183,1.700558,-4.729050,4.108824,-0.776235,5.515098,-3.452173,5.967538,4.934930,5.576656,-0.015220,2.318782,1.312083,5.213973,-1.009550,-0.769085,1.091611,4.134531,-3.097217,5.758640,-6.334965,9.476446,7.963436,8.902820,-8.266837,0.530067,2.206476,-6.351758,-5.375132,0.792901,2.031449,2.285323,9.358033,-7.379774,2.652349,-8.896942,-7.033496,4.015511,1.954070,-5.262660,0.755503,-9.101897,0.325444,2.141229,-6.555584,-9.472904,-2.526662,-4.394767,-3.677768,1.370475,-7.774254,0.270580,-2.527060,-3.602845,5.342682,6.488086,-6.682908,9.883473,-4.696506,9.048492,-5.277290,-6.059845,9.575345,-5.270754,2.833241,-8.398167,-3.128141,-2.094185,-2.638053,-3.504012,-1.865240,-1.111872,1.433198,-0.992308,-8.870185,-4.604559,4.239784,8.148978,9.592088,9.271966,4.086727,-8.608918,0.496576,-5.413734,3.634070,-6.697104,-8.206531,1.271597,-4.020000,6.668729,8.311157,6.580529,-4.474136,-6.963077,2.504714,-9.743046,4.541308,-6.496705,-8.935032,-4.473009,6.197569,6.397788,1.109094,2.962253,-4.574369,-4.527107,-5.587520,-1.912156,-7.538530,-4.482795,-3.447984,-5.510868,7.464556,6.567610,-1.889651,6.926426,-3.650802,4.853389,0.196243,7.432997,-8.792443,-0.217379,-9.758091,9.295625,5.058790,-8.210192,4.940233,1.363353,4.355814,-3.402951,-5.331947,0.120173,-2.970144,-2.104224,9.998532,8.173721,2.228492,-9.796985,-2.826096,-7.135864,6.720017,-6.357232,2.392142,3.393795,-0.928227,-4.860926,4.593341,3.377829,9.820073,-6.721182,1.179439,-9.355202,9.188070,-4.520096,-2.392017,9.228059,8.745752,-0.135486,4.914032,9.151392,1.764384,-1.912595,3.977959,-1.773679,2.031280,3.917919,-4.569594,4.548868,-7.230602,-2.447780,-1.235254,-4.129907,7.816631,-0.322720,-3.493906,-5.737246,-8.274378,5.184576,-8.328641,-4.384906,-5.591983,-1.648429,0.508199,-8.787423,-5.039991,-2.547141,-4.665065,-6.461743,-4.023460,-6.658987,6.313032,-1.255077,0.573191,7.714759,-5.249260,7.956361,-1.372478,8.935497,7.445182,6.998947,-3.339914,-0.274628,0.181897,-8.836449,7.029679,-3.712214,4.489880,-1.780332,-2.190277,-9.013223,8.140369,2.525965,-7.698533,8.867315,-2.283510,0.782091,3.814751,5.312927,-9.616014,-7.888523,-5.976294,-0.915466,8.333609,-6.273403,1.814447,-2.201627,-4.788179,-5.331260,8.422529,-2.948110,-1.025200,-6.879989,3.717573,-8.736538,-5.652536,-8.218178,-0.842446,-7.242155,8.062667,3.723968,-1.226760,-3.459707,-2.125771,9.152116,-7.583759,1.630624,6.851150,-0.360318,-1.306603,-5.497204,5.270269,8.655182,-6.763191,-6.676635,6.014747,-8.903982,0.062686,-5.132445,5.428801,6.577878,-6.792334,-7.037900,9.676555,-4.445715,-0.711881,-0.666094,9.136829,6.632880,0.345381,-5.845830,2.567700,-8.392553,6.256912,-6.448561,-1.231636,-9.164053,4.767514,-2.067419,-0.127346,-4.388658,-5.991773,-4.786855,-5.727042,0.458163,8.396385,-0.970920,-3.766371,-5.947272,-1.899945,-2.572703,-0.422143,4.280428,1.176827,-7.495290,-0.442162,-0.325958,2.081864,9.597084,-3.042243,-0.557225,-2.880171,5.173668,1.745096,-7.757319,-0.304895,0.302651,0.489323,-1.802999,-1.340945,-4.911091,6.774178,1.617647,-0.718781,7.738298,7.187508,-7.201839,-3.572749,-4.472880,7.505470,2.265198,9.425162,0.975417,1.040800,-8.513622,-7.797411,6.853595,7.817779,1.321342,1.887677,4.505050,-8.852393,-1.180067,6.878260,-4.256747,9.008149,-7.109362,-5.605987,7.345931,-7.849554,-7.663724,0.308813,-5.902380,-6.665116,-7.317732,-1.850306,1.794753,4.631027,-6.064633,-1.191438,-2.215650,-1.416188,1.293524,-8.864676,8.550624,-8.173456,7.665833,4.305010,-9.903310,3.833942,9.086751,-1.511099,-3.373509,-7.268059,-0.223523,-2.466365,-0.748870,-8.042548,9.270344,-6.547388,5.358770,-4.408034,-6.959235,-3.451687,-3.436818,1.557043,-8.980631,-2.324485,-0.786334,9.946827,2.688455,2.267088,-8.844398,9.469111,-0.999756,-8.227803,-3.223014,-9.155337,-1.805658,-8.106536,1.933977,-8.751397,8.486615,-2.418386,2.809432,6.374617,3.154637,-6.861203,-7.337156,-2.535014,-3.973309,-7.884802,5.788140,1.008825,4.049095,-6.338100,-8.866588,-2.837126,7.303265,0.635684,-5.236675,-4.225279,6.206796,-4.037164,-3.332538,-3.904817,9.602422,-4.228192,1.908105,7.616957,8.790005,9.646142,-4.851493,9.714470,5.842739,0.871637,3.967319,2.961315,-2.690574,-2.708048,-2.433557,4.977102,7.216586,1.927721,-1.847215,-0.331190,-6.066887,9.581648,6.610815,8.208562,7.402487,3.362629,-0.940258,6.459430,-5.323869,8.348928,-6.558999,-2.637087,-3.150565,-9.435303,-6.848125,-3.469056,1.597706,-9.374683,8.355482,9.059859,-1.149955,1.273465,2.189382,6.993571,8.486253,9.204257,-6.593368,0.061823,8.162180,3.560024,-7.092958,-5.120405,7.392722,0.140608,-4.794645,5.297660,1.915786,6.726269,5.029227,-6.495034,-9.935943,-5.854479,2.519947,5.905052,6.572260,3.986025,7.768912,2.097290,-4.333705,2.850111,9.120210,7.303090,2.238277,-7.072074,0.960542,6.305463,-8.705205,-4.939407,-1.792394,-8.540234,-9.835586,2.463535,7.600463,-6.946847,1.684227,9.736292,-3.618493,3.070768,5.583341,-0.543948,-8.118697,-4.251274,2.545191,3.400715,8.690190,-6.057185,3.547400,2.137137,-0.540187,-0.817161,8.207457,3.382955,-8.463979,7.005211,-4.568028,-7.046110,-9.462853,3.915221,-3.600458,2.892507,-1.830899,8.219655,3.269327,-5.540714,8.174073,-7.020404,-3.678795,-5.587140,-1.973318,1.881364,-7.630249,-5.834779,-6.415767,-9.944789,-7.685967,-5.464904,2.217157,-8.972288,-3.651787,6.730852,9.315138,-0.445044,2.128251,-6.371988,8.037473,-4.154444,8.254315,-2.694895,-0.130148,-1.349957,-8.052458,6.745996,0.131901,-0.278856,-9.330701,9.429184,0.645652,-2.242179,-8.455060,5.571269,-7.497233,2.122768,-7.263332,8.291871,1.704046,2.384095,8.305495,4.229076,-1.294375,-4.737558,3.743451,-1.919323,-0.636425,5.286489,9.645656,-5.803895,-9.811632,0.801014,5.575860,3.340802,6.736074,-8.359288,5.908747,2.557772,7.676492,1.659571,3.021080,-7.528647,-3.278838,-6.847952,-0.003299,4.754002,8.464749,6.130261,1.462476,6.942546,6.909056,3.260482,8.958005,-6.085305,0.211398,-8.269142,6.182600,-2.780343,-0.609765,7.925960,9.060553,-8.998145,3.998184,1.353205,-0.566239,6.911240,-1.165955,4.206172,5.706215,-4.948317,2.629496,9.540039,7.197546,-9.450310,5.236630,-9.557434,-5.162321,8.648745,-7.817661,-3.621362,5.199768,-5.602167,1.962570,3.317506,2.659748,1.471556,-9.295026,4.437276,-9.095979,-9.447385,9.105028,-1.983324,4.323458,-7.337538,-1.773481,-7.268834,-1.553302,7.506832,-7.899088,8.038329,-6.536797,-2.340452,6.503249,3.920680,5.612311,2.154932,-4.541331,-1.103460,6.924916,-9.886798,-2.061861,4.704186,4.388478,-1.562776,-6.760895,-6.217020,-3.797658,8.085397,-3.533955,6.052810,-1.055663,4.302070,-2.802865,-9.243376,-9.169239,8.894212,-0.373145,9.798515,0.662797,8.738186,8.774348,-7.466629,9.326615,-8.929739,-4.681203,1.580495,-9.700348,-1.049825,1.605436,2.992826,0.571360,-6.153096,3.697008,7.089276,5.459227,-1.866466,-8.485711,-3.133053,5.941001,-5.799641,-0.005488,-1.242902,-9.718104,8.807025,-4.011341,0.323934,4.972181,1.560035,3.755373,4.385472,4.156073,-2.342351,-9.216864,7.070000,5.960933,-8.306833,-9.872480,-0.221998,4.496727,-3.033770,-6.280118,5.395524,3.658923,9.265756,7.601700,2.485986,-5.947515,7.141563,-4.729775,-9.676853,-9.358277,6.155158,-4.501791,1.463690,2.988811,1.279340,9.565419,5.325667,7.160972,0.256887,3.297706,6.361934,-5.833939,-9.564204,-2.226933,-1.441773,7.305740,5.753632,-0.312665,7.200319,-8.938794,0.500157,4.482581,-9.524185,6.323116,-6.604186,-3.418736,8.104022,-8.602173,4.072363,-6.710110,6.780260,3.502204,5.551665,4.576038,6.583360,2.569481,1.007986,2.012015,5.198686,5.887897,9.398555,-0.441137,1.956200,-5.651827,0.582880,-7.230205,2.385457,2.146595,1.787972,8.461787,-4.179419,-4.846977,-6.221950,0.122416,-6.905828,8.521925,-0.262959,-0.656479,-4.517927,-8.571342,-0.148245,-2.468129,-8.643480,-3.956471,-2.930272,-2.438596,2.850108,-9.523768,-8.123226,5.028221,-0.721273,-7.803483,-3.304635,-2.899243,3.264703,-5.299355,-3.928829,4.730516,-7.024002,-4.859130,-6.714232,7.933936,7.605807,6.382515,1.616564,6.901794,8.860000,-3.856476,-4.466153,-3.660130,0.821303,3.077785,1.441226,-1.033671,3.483158,-4.754294,7.130853,6.807207,5.239043,-9.785185,7.447104,-9.074282,8.362062,0.385646,-9.326405,-1.191780,-0.982470,6.986641,-7.165824,-4.514372,-6.437306,7.143895,-0.359920,6.010204,0.684261,8.851054,1.704039,5.765210,-5.724043,-1.166271,-6.477172,1.729361,0.385243,-3.869418,-4.303589,2.786931,6.429056,9.386923,0.537245,4.178627,-3.649610,9.589204,6.460963,3.700790,3.069581,-9.714253,-5.601944,1.311341,-4.413619,7.044624,-2.193642,4.218712,-6.718221,9.573586,1.905885,-0.027465,4.047383,8.438491,4.020562,3.573586,5.012270,-0.629540,6.909063,7.640506,-5.120520,-4.027579,8.764756,-1.031659,-2.605863,6.793526,0.546006,-7.918410,1.274586,7.726486,-2.176324,-8.290375,-6.130466,4.608299,-8.273142,8.210608,8.504631,6.892358,0.409806,-8.382649,3.599059,-3.475312,-6.533682,-8.054817,-8.062033,-9.272822,-0.169127,-8.520730,6.830979,-7.924612,-2.653233,-0.190718,2.993515,-5.431738,-3.412271,1.898983,-8.531973,-0.750943,-4.857362,6.086598,-1.265093,2.306147,-7.556862,1.231211,8.780064,8.991541,5.832844,0.203729,5.789375,1.663864,0.114134,7.154383,-4.851465,-0.032767,-1.235069,-9.032973,5.173456,1.732485,1.789496,9.155991,-6.353556,2.071470,4.614635,3.975511,-9.626079,-7.717830,8.739440,-3.727153,8.302169,-1.239048,-6.233579,-3.550089,-4.459211,4.498110,-4.320622,-2.351186,0.066892,-7.063045,-1.917885,5.495660,-2.062199,-1.311422,5.145093,-7.572806,8.832097,6.084947,3.061996,8.493549,5.468706,3.634418,-4.630021,9.167829,7.049908,-6.552376,6.071620,0.108747,1.124531,1.924441,-2.802267,2.000031,-0.399242,5.825575,-9.062313,0.391301,3.364134,6.790217,-4.040560,2.336280,-7.363364,7.516828,7.003506,9.277255,9.302488,6.971241,-1.078223,6.599983,6.414752,-2.136245,-7.045345,-8.986978,1.389387,5.251063,-9.181047,7.265186,-2.796525,-2.690650,7.564981,-4.451996,-0.142260,-9.656803,-4.172395,5.333725,-8.864568,4.322262,5.463549,-7.389978,5.243762,-4.166242,-7.622018,-4.899203,-9.649577,-2.290292,-2.259510,-8.677748,7.518839,-4.281118,2.996940,8.937292,2.828078,-2.143220,-9.631666,0.123514,-7.190368,0.538335,-8.937628,7.617398,-4.060643,-7.296811,-6.209830,8.139638,-2.336885,6.060984,7.248476,4.852114,9.531451,6.428661,3.426752,3.876001,-3.560426,-7.540184,-6.042525,-5.837391,-9.610956,5.979263,0.703460,-7.217897,-2.156192,2.064756,-4.219468,9.461206,-3.383811,-6.684810,2.622655,0.860339,-2.598917,-8.245651,6.413518,-4.933448,-2.952048,-5.566184,-8.023554,3.978414,-4.187494,8.045688,2.322828,-1.682400,3.575505,7.589654,-4.316586,5.057594,2.995343,0.070557,-2.025059,-9.212198,-1.474476,-9.852921,2.200873,4.566933,2.136342,-5.620295,7.840761,-9.564620,9.744664,-8.492622,5.033562,1.901239,4.536723,7.443089,-4.500137,-1.349331,2.039107,7.501829,-3.610511,-5.983072,0.427248,9.654038,-2.002833,-1.232807,7.571206,3.878822,-2.921393,7.526725,-3.767077,3.862907,-4.284659,0.173164,-2.534411,-1.401596,8.455257,-8.963554,-8.882863,-1.014186,-5.826914,-9.837794,0.858988,-9.551845,-4.266407,2.463826,-6.284137,2.102919,9.584344,-7.187940,-3.893404,-6.707044,-2.351174,-6.521053,-2.673872,5.220777,7.496893,5.407314,2.782425,-4.853095,3.950462,-5.872486,-3.174818,5.699307,-4.548115,-6.297310,-0.697954,3.526159,7.190128,7.732892,-8.057308,-5.599422,6.750405,-3.087046,8.293177,-2.371532,-9.617556,0.527483,3.498165,-1.112679,-4.315101,-0.559462,-2.567384,6.454667,6.876388,8.988623,7.025774,-2.161919,8.321799,-8.660763,8.043050,-7.972094,9.160583,3.311845,-5.819667,6.415896,-9.616215,5.327031,0.917551,-5.748252,-6.874170,-7.088895,-5.570481,-6.211716,4.103742,-6.668627,3.512648,-6.851195,-2.248531,0.968815,-2.124522,-9.096322,-6.517416,0.845886,-8.977297,5.325011,4.643734,2.500326,-9.568875,-3.849946,-4.712477,-9.379517,8.613907,-2.385693,-4.268012,-2.161502,-9.228524,2.906405,-2.871767,-8.741724,2.154015,1.006139,1.077356,-8.081302,-4.124080,7.259555,9.723478,4.750494,6.104278,1.605193,3.598230,-7.477173,-5.790269,2.330145,-6.494528,5.586854,6.160113,-8.635592,0.794715,-7.340155,7.212397,-6.556253,1.928400,5.061786,-3.315515,2.461482,-2.097289,7.631765,8.064436,-8.962732,0.737241,6.059057,-7.779560,5.320090,-1.093617,-6.526387,-5.945505,3.767642,-4.243377,-0.090313,5.843068,-0.748611,4.676001,-8.861862,-3.048869,-8.725401,-6.286523,-4.780671,6.710218,6.293620,9.478502,-6.935808,-8.993692,-6.828792,-8.435043,7.753279,-6.167534,-4.260736,-0.477503,-4.691541,4.275693,-0.151396,0.205097,-8.656974,-3.248144,-1.809775,9.734009,1.356976,-7.047358,-3.053651,-6.962505,-9.392904,-7.774250,-8.311460,8.815813,2.386542,7.467372,0.335294,4.096098,-3.697200,5.572436,4.797182,3.583189,-2.412646,-5.174972,-9.445852,4.623795,9.045214,3.836691,-6.945611,8.222463,6.910840,3.483520,1.006373,1.319792,-2.976192,-6.799939,7.111147,7.385606,-8.121544,5.557815,-4.247208,8.564721,-3.146113,-8.410018,-3.365872,-4.762989,-5.750907,-3.824979,-9.747530,6.928982,-7.601830,5.058863,1.181528,6.338643,-6.243399,3.557780,3.457674,6.829120,3.937264,-2.051896,6.428048,-4.978074,-7.186099,8.552443,-9.086162,-4.131254,-1.799102,-2.656635,-4.514334,9.112440,-3.712183,5.244748,-9.702675,9.498217,-3.462478,0.592147,0.464553,-4.682249,-9.336803,-1.172240,-1.625835,4.559275,-4.003097,2.380804,9.097602,-1.618645,2.647990,-3.943259,-2.548602,5.502208,2.094887,-4.379564,-6.020751,1.524232,-9.380670,0.657382,-3.295929,6.563402,7.327431,2.283975,-4.942548,-5.272797,0.543802,6.230352,3.969054,6.192079,8.786583,0.083518,-7.903612,-8.938662,-0.113651,0.853608,-9.753697,-3.211408,2.480037,-9.479394,7.406345,6.471621,2.474956,-1.486743,-0.485469,-8.026303,5.164327,4.876302,-1.918806,-4.372758,-4.961069,7.008284,-0.731487,-6.612416,4.220860,4.886217,2.166284,2.822660,3.073146,9.599497,7.268613,1.687287,6.374105,-1.749418,-6.183514,4.493763,6.842547,6.419143,-4.022695,3.703525,6.468656,-7.571136,-5.096855,3.470328,0.222105,6.491649,-8.902429,8.271494,7.984795,5.790597,-3.495732,-9.945055,7.750129,7.084405,9.631635,0.037755,-3.065641,-4.030013,-2.405188,-6.986033,-1.947816,-9.549029,5.013287,0.996364,-7.635594,-5.736065,0.529368,-2.109507,2.472039,-5.686016,-8.403556,3.198441,7.058791,8.584686,3.787527,2.815217,3.732422,8.093343,6.353048,-0.579800,1.951598,-2.699168,0.784578,-6.031342,-5.492840,-0.503785,-4.252786,8.056965,6.841071,4.606869,2.326050,-3.130471,3.882666,5.905890,-3.060949,-6.746105,-3.743910,-6.444745,3.965023,-6.390124,6.791632,-2.632805,-5.545090,7.271177,4.169832,8.422286,8.634043,9.177698,7.686782,4.238191,-5.271517,3.273362,-4.806878,6.848061,-0.219670,-9.593196,-3.080111,-4.090235,-2.355815,-0.384640,-5.436007,-3.590192,5.950178,-1.972584,-9.901798,6.627115,0.232817,-2.747829,-6.254116,7.091811,5.127524,0.611945,6.589657,4.360670,9.777583,6.933959,3.205297,-2.242155,6.040066,3.669342,-7.322331,1.210361,2.390530,-8.531062,4.388863,0.988890,1.321008,-2.089392,-4.662672,-8.598997,0.968005,9.039799,-7.255628,4.380463,9.887031,1.877481,6.244149,8.364919,-1.136639,2.551345,-9.873093,8.652412,7.124959,-7.461477,6.287373,2.901958,-3.081405,2.389279,-1.831954,-3.510576,2.885587,-1.799194,-9.030221,4.391952,1.839536,-3.565231,7.239518,0.097801,2.643149,-3.333918,-1.074432,7.757951,4.070285,5.579290,-1.496503,7.724847,-7.287872,-4.781710,9.682707,7.892090,-0.540856,-6.785208,2.596895,-1.862109,5.222293,0.436523,5.794637,-3.025258,4.331276,-9.587198,-9.600959], dtype = "float32")#candidate|6753|(1872,)|const|float32
call_6751 = relay.TupleGetItem(func_6511_call(relay.reshape(const_6752.astype('float64'), [1024,]), relay.reshape(const_6753.astype('float32'), [1872,]), ), 4)
call_6754 = relay.TupleGetItem(func_6514_call(relay.reshape(const_6752.astype('float64'), [1024,]), relay.reshape(const_6753.astype('float32'), [1872,]), ), 4)
output = relay.Tuple([call_6736,call_6751,const_6752,const_6753,])
output2 = relay.Tuple([call_6737,call_6754,const_6752,const_6753,])
func_6762 = relay.Function([], output)
mod['func_6762'] = func_6762
mod = relay.transform.InferType()(mod)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6762_call = mutated_mod.get_global_var('func_6762')
call_6763 = func_6762_call()
output = call_6763
func_6764 = relay.Function([], output)
mutated_mod['func_6764'] = func_6764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6786 = relay.var("var_6786", dtype = "int8", shape = (12, 7, 13))#candidate|6786|(12, 7, 13)|var|int8
const_6787 = relay.const([[[10,6,-9,-4,5,-2,6,-1,7,4,7,2,-3],[6,10,7,-5,3,-2,-8,6,-5,10,-3,-8,-10],[-4,-3,-5,-10,-8,-7,2,8,9,-10,-6,5,3],[-4,6,7,8,-8,9,-10,-7,-10,6,-4,6,8],[-8,-9,-5,-1,-8,-3,-8,-9,-9,2,5,4,1],[-6,1,-8,-9,2,-1,6,-3,6,-8,-6,6,-4],[1,-2,-5,9,4,-8,4,8,-3,3,-1,-7,5]],[[-7,-1,-2,10,-5,4,-2,-1,3,10,-9,4,-1],[2,-8,-1,-8,8,7,5,3,-5,-10,-7,2,-4],[10,-2,7,-9,2,9,-2,-1,-7,10,8,6,4],[10,-1,-4,4,-2,-3,-3,-10,-5,3,1,2,9],[7,-5,9,6,2,10,7,5,4,-4,-4,9,5],[-7,-1,5,2,-10,7,-8,5,5,10,5,9,8],[-8,-1,9,10,-4,10,6,4,8,-2,-10,9,8]],[[3,1,1,2,-4,1,1,-8,-3,2,8,1,-5],[9,-2,5,-4,-9,-8,8,2,-6,7,3,-8,9],[-7,10,-1,3,5,1,4,6,-10,4,6,-4,-3],[4,6,-9,-4,-2,-9,-10,-2,-6,10,-10,8,4],[-5,-8,-7,-2,-8,5,-2,-6,-1,5,-7,2,3],[-10,8,-7,-2,1,-9,-4,4,8,-6,6,3,5],[-2,-7,-8,10,-1,-9,1,-4,-3,-7,8,4,10]],[[-5,3,2,6,-2,8,-10,-8,2,7,2,-4,8],[2,8,-1,-6,-3,-10,10,3,6,9,-10,-3,-6],[-8,4,6,7,-10,7,3,-4,8,6,4,-5,-6],[-3,-4,6,3,10,-5,-3,7,3,-1,2,-3,-1],[10,9,10,5,-2,10,10,-5,8,2,-8,-5,3],[10,-8,2,-6,-4,-4,-4,1,-2,-5,7,-4,1],[5,-3,-7,-2,-4,3,-7,6,-9,8,4,2,-8]],[[5,8,-6,-3,-1,1,-5,10,-3,-6,-8,1,4],[7,-7,5,-7,-7,7,-1,8,4,5,1,2,-8],[4,-8,5,6,-8,-3,3,-7,9,9,-10,-3,8],[2,3,10,-9,8,4,5,3,7,9,-8,-2,8],[-1,-6,4,9,-7,-5,-7,-10,4,-3,5,-7,-3],[-3,-4,-6,1,-6,-9,-2,-3,-3,-7,3,10,2],[-5,-2,-4,5,5,6,5,-10,-6,1,9,-2,-8]],[[-10,1,4,1,-4,10,-6,5,2,2,4,-4,7],[-10,-10,4,-7,-1,10,-6,8,6,-10,4,10,-1],[5,-1,9,-3,-2,-8,-1,9,-3,-6,8,5,-2],[9,6,-8,5,7,-5,-2,7,-5,3,10,6,6],[-9,-1,1,-4,-9,-10,-2,-10,-9,-3,6,-7,-9],[-4,-4,-8,-1,-3,-10,-9,-7,-5,8,-7,2,5],[7,7,-8,2,1,-2,-2,7,10,-1,7,-10,-3]],[[-3,-7,5,10,-2,4,10,-6,10,-9,-10,-2,-8],[6,5,-4,-8,-9,-5,-6,-7,2,10,2,-8,8],[10,6,1,5,-5,6,-10,-8,-4,-3,-7,-2,7],[-8,5,-10,5,4,-1,-2,7,-2,5,-3,4,-3],[5,9,-9,4,2,8,1,3,-2,8,5,8,10],[10,-9,7,6,5,-3,-9,2,-2,1,5,-10,-3],[-5,-4,2,10,-5,-5,-3,6,9,2,-3,6,-8]],[[5,6,-1,-1,-7,-9,6,2,-4,-4,-2,6,-4],[-6,2,1,-2,-9,7,7,3,-1,-9,10,9,-6],[7,-6,-2,1,-6,3,-9,-2,10,-2,-7,-2,5],[10,8,-6,-9,-5,-5,-4,9,1,-10,6,-4,5],[-1,-8,10,2,-5,2,1,4,4,-6,-5,-10,-2],[7,5,7,-8,2,-2,-8,1,10,9,-7,-2,-5],[2,4,-2,-1,-2,2,-3,9,-7,4,-9,1,10]],[[1,2,1,-3,-9,-5,-3,1,6,-8,-3,2,-4],[-4,10,-4,8,-9,2,-5,1,3,6,9,-10,-8],[3,-10,2,-3,-10,3,5,-10,-8,-7,-6,2,4],[5,-10,5,-3,-2,1,-7,-4,-2,4,5,-8,10],[-3,-7,6,1,2,-9,2,-10,-9,-5,-9,4,-8],[5,3,1,8,3,7,9,-1,-6,2,-4,-5,5],[-6,7,-2,-4,-10,1,1,3,9,9,2,10,5]],[[6,7,-6,-2,8,7,-9,5,6,-5,5,-1,-3],[-2,-7,-1,9,-4,-10,7,-2,-2,-3,10,-4,-6],[-10,-5,-2,-10,-4,-3,8,7,6,9,-10,9,-9],[-3,-6,4,-8,3,-6,10,-3,-2,-10,2,-4,-4],[-2,-10,-3,-6,3,-9,6,2,2,-3,-5,-9,-5],[1,-1,-8,1,4,2,-5,9,-8,5,-9,4,-3],[9,3,2,-5,-2,-8,10,7,3,9,-5,6,-10]],[[8,-9,2,4,1,-3,2,7,6,-1,1,6,-5],[8,-2,8,-2,-2,4,2,-5,2,-10,-5,-6,1],[10,7,10,-9,-2,2,-6,8,4,5,-7,-7,6],[5,-10,-9,-6,8,-2,8,-5,-9,7,-9,9,10],[-3,-3,1,-10,6,5,-8,8,1,-5,8,-5,1],[-6,2,-6,-7,1,-9,-10,10,1,-10,7,6,-8],[-6,-9,-1,-7,5,5,4,-9,-8,-2,-6,-6,1]],[[-10,7,-1,-2,-10,-7,5,2,-1,7,1,-1,-4],[5,5,-5,-5,4,-5,-8,1,-4,5,-6,2,6],[-9,-8,6,-4,1,6,2,-4,6,4,7,-4,1],[9,-5,9,-6,8,-10,2,2,9,-10,2,9,5],[-1,-8,-1,10,-6,2,5,5,-4,9,7,-1,5],[4,9,-9,8,-7,-8,7,-5,7,10,-9,9,10],[8,-2,7,8,-5,8,-8,-2,-1,4,7,10,-5]]], dtype = "int8")#candidate|6787|(12, 7, 13)|const|int8
bop_6788 = relay.maximum(var_6786.astype('int8'), relay.reshape(const_6787.astype('int8'), relay.shape_of(var_6786))) # shape=(12, 7, 13)
output = bop_6788
output2 = bop_6788
func_6791 = relay.Function([var_6786,], output)
mod['func_6791'] = func_6791
mod = relay.transform.InferType()(mod)
mutated_mod['func_6791'] = func_6791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6792 = relay.var("var_6792", dtype = "int8", shape = (12, 7, 13))#candidate|6792|(12, 7, 13)|var|int8
func_6791_call = mutated_mod.get_global_var('func_6791')
call_6793 = func_6791_call(var_6792)
output = call_6793
func_6794 = relay.Function([var_6792], output)
mutated_mod['func_6794'] = func_6794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1507_call = mod.get_global_var('func_1507')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_6815 = relay.TupleGetItem(func_1507_call(), 0)
call_6816 = relay.TupleGetItem(func_1509_call(), 0)
output = call_6815
output2 = call_6816
func_6831 = relay.Function([], output)
mod['func_6831'] = func_6831
mod = relay.transform.InferType()(mod)
output = func_6831()
func_6832 = relay.Function([], output)
mutated_mod['func_6832'] = func_6832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6097_call = mod.get_global_var('func_6097')
func_6098_call = mutated_mod.get_global_var('func_6098')
call_6844 = relay.TupleGetItem(func_6097_call(), 0)
call_6845 = relay.TupleGetItem(func_6098_call(), 0)
func_1326_call = mod.get_global_var('func_1326')
func_1329_call = mutated_mod.get_global_var('func_1329')
call_6867 = relay.TupleGetItem(func_1326_call(relay.reshape(call_6844.astype('bool'), [8, 6, 3])), 0)
call_6868 = relay.TupleGetItem(func_1329_call(relay.reshape(call_6844.astype('bool'), [8, 6, 3])), 0)
func_3547_call = mod.get_global_var('func_3547')
func_3550_call = mutated_mod.get_global_var('func_3550')
const_6878 = relay.const([9.369075,-0.236299,-9.652051,1.849207,-5.145117,2.980014,-5.357573,-7.262326,-8.119878,3.087366,0.556827,1.928183,4.618103,-4.530993,-9.151593,-4.320827,2.263771,-2.060528,-2.439222,-4.914921,-3.003329,7.130752,-5.557887,4.908697,-7.214550,-2.288163,3.788774,-7.980508,0.213232,-3.392165,-5.958542,-0.529719,8.792531,0.992224,-5.824592,-9.354511,9.547337,9.925310,7.471535,-0.061521,1.849009,9.563815,-8.759920,-1.226677,-8.200806,4.382894,0.097587,7.333804,-3.860575,-5.534784,-2.287827,5.698658,-1.505564,5.644755,1.875591,-6.141231,-5.894549,-9.502894,6.414589,8.913517,8.066843,-6.889488,-5.453944,0.319790,-6.904426,0.362924,2.391174,8.012956,2.379160,2.027720,-2.026230,1.950094,-1.874737,-7.141798,-5.708037,3.674254,-7.533298,-2.797782,6.583121,-3.611364,3.070753,7.388033,-3.727659,5.196090,6.690581,5.060718,-7.981726,1.180029,-4.731344,-4.444637,5.754293,-6.537256,5.531348,-7.822300,-8.800331,-9.675492,-4.793281,-4.517363,-8.958039,-8.577240,2.308553,-4.845746,-1.890474,-4.834305,8.667358,-3.058105,-5.420907,-5.800206,5.103523,9.892844,2.033074,-8.338975,5.823455,6.103354,-9.760314,5.575658,5.283706,9.685106,2.948957,-8.168933,-6.899125,9.530017,8.551250,-1.630657,-3.911613,-7.491849,7.868181,2.342216,-4.935619,2.371213,-0.191418,-7.251430,-3.763052,-6.961570,3.665658,-0.097278,2.897314,-1.050852,8.892333,2.804239,-3.722462,-8.362539,-5.379935,-0.626288,-8.741934,4.755946,7.293279,-7.079081,9.598953,6.017708,1.596195,-1.447297,-1.795778,4.914902,2.922260,4.167541,-6.029116,-1.831513,-2.383225,1.564411,-1.926192,8.601079,-1.837200,2.064799,-7.093928,-8.500475,-1.744375,-6.764835,-2.463716,-9.646758,3.914555,8.602977,1.601056,-4.584638,1.751249,-2.351871,1.078954,5.667551,2.371267,4.956799,2.215205,3.656821,3.114673,-1.913350,1.889774,3.193741,8.472888,1.428488,-5.879100,-9.416190,9.430940,5.550878,-4.145487,9.992108,0.737315,-7.520929,-2.032648,-2.483900,3.433154,0.250210,-9.677226,7.895106,-8.142298,-0.303815,2.230350,-8.479344,-5.896658,7.658800,-3.412275,-1.747171,6.495023,-4.920935,5.504814,7.691628,-8.129669,4.674085,-8.976255,-8.810776,8.933128,3.733575,7.937345,-5.809854,-8.656357,-7.366757,-7.671684,-5.543167,7.179334,2.670925,-6.828878,-8.623227,-3.482392,3.846099,-8.241106,7.399836,-4.837139,-4.085888,-1.011991,0.479287,-5.525516,0.646530,4.214030,0.480628,-2.702012,9.770932,0.860755,8.378618,4.480710,-3.060212,-2.379299,-7.960065,1.443288,-7.019891,3.907865,-6.570123,-7.809689,-4.785318,1.506990,-0.969937,-4.751716,-0.344748,5.990472,1.280578,-8.621008,6.778369,7.144283,-2.021751,-9.495401,-0.627970,-2.682188,-6.885337,-8.674529,-6.653092,-3.534656,-0.572901,-6.923921,-3.727501,-3.484302,2.093258,-9.017358,-6.687193,-1.929258,-5.621321,9.642289,-2.073246,5.544175,-3.417173,0.042471,3.196341,-9.063430,-4.388198,5.300548,-2.767684,1.938375,-5.120319,-9.725697,7.743680,5.081790,-8.662149,6.099781,9.062729,6.238707,-7.453130,-6.288437,-2.807610,0.733093,-8.883978,9.394838,1.190988,-1.018397,-1.559231,-0.582085,6.976851,7.494877,-2.071323,-5.086446,3.759493,-4.004456,-8.908156,-8.548638,9.958571,1.906903,-7.575221,-9.859398,2.860923], dtype = "float64")#candidate|6878|(324,)|const|float64
call_6877 = relay.TupleGetItem(func_3547_call(relay.reshape(const_6878.astype('float64'), [12, 3, 9])), 1)
call_6879 = relay.TupleGetItem(func_3550_call(relay.reshape(const_6878.astype('float64'), [12, 3, 9])), 1)
var_6885 = relay.var("var_6885", dtype = "float64", shape = (324,))#candidate|6885|(324,)|var|float64
bop_6886 = relay.power(const_6878.astype('float32'), relay.reshape(var_6885.astype('float32'), relay.shape_of(const_6878))) # shape=(324,)
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
call_6896 = relay.TupleGetItem(func_2712_call(), 1)
call_6897 = relay.TupleGetItem(func_2714_call(), 1)
func_3909_call = mod.get_global_var('func_3909')
func_3911_call = mutated_mod.get_global_var('func_3911')
call_6902 = relay.TupleGetItem(func_3909_call(), 0)
call_6903 = relay.TupleGetItem(func_3911_call(), 0)
output = relay.Tuple([call_6844,call_6867,call_6877,bop_6886,call_6896,call_6902,])
output2 = relay.Tuple([call_6845,call_6868,call_6879,bop_6886,call_6897,call_6903,])
func_6908 = relay.Function([var_6885,], output)
mod['func_6908'] = func_6908
mod = relay.transform.InferType()(mod)
var_6909 = relay.var("var_6909", dtype = "float64", shape = (324,))#candidate|6909|(324,)|var|float64
output = func_6908(var_6909)
func_6910 = relay.Function([var_6909], output)
mutated_mod['func_6910'] = func_6910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_67_call = mod.get_global_var('func_67')
func_68_call = mutated_mod.get_global_var('func_68')
call_6920 = relay.TupleGetItem(func_67_call(), 0)
call_6921 = relay.TupleGetItem(func_68_call(), 0)
func_2547_call = mod.get_global_var('func_2547')
func_2548_call = mutated_mod.get_global_var('func_2548')
call_6945 = relay.TupleGetItem(func_2547_call(), 0)
call_6946 = relay.TupleGetItem(func_2548_call(), 0)
func_4998_call = mod.get_global_var('func_4998')
func_5001_call = mutated_mod.get_global_var('func_5001')
const_6963 = relay.const([[-8,-10],[9,-5],[9,1],[-7,10],[-9,4],[6,3],[7,-2],[7,-5],[-2,-5],[1,9],[10,-6],[3,8],[7,-1],[3,2],[3,-8],[-3,-7],[-10,-3],[2,10],[1,1],[-4,-7],[3,3],[-4,-8],[8,-7],[-9,-5],[7,-9],[-1,3],[7,-8],[-4,-3],[7,-7],[-2,5],[-10,-10],[-9,9],[4,-8],[-9,8],[6,-10],[-5,9],[8,10],[-10,-9],[-1,3],[-5,-7],[2,-5],[-8,-10],[3,5],[2,1],[-2,9],[7,-4],[8,-10],[10,3],[3,-7],[-3,5],[7,-5],[8,9],[6,-3],[6,3],[5,-7],[1,10],[-8,-6],[4,-6],[-3,-9],[6,10],[6,4],[9,5],[1,2],[2,7],[-7,-8],[4,1],[6,8],[-8,3],[-10,-5],[6,-6],[2,8],[-9,1],[-10,8],[-6,3],[9,-3],[10,10],[-4,-10],[4,5],[3,9],[2,8],[2,6],[-7,9],[10,2],[9,9],[-6,2],[-6,-8],[-4,-1],[-9,-8],[6,-9],[3,-8],[4,-5],[3,-6],[7,-1],[-7,-2],[-5,7],[3,-7],[9,4],[7,-9],[2,-2],[9,6],[-6,-9],[-5,3],[-5,6],[-8,-8],[10,-1],[4,6],[3,2],[7,-8],[-4,-7],[-9,9],[-3,-1],[-9,-9],[1,-5],[-9,2],[10,6],[2,2],[2,-3],[2,-4],[-10,-7],[5,9],[6,-2],[5,-7],[-8,4],[-6,3],[8,8],[1,-6],[-6,-9],[10,7],[-2,-9],[3,-3],[8,10],[-8,1],[-1,7],[-2,5],[9,-6],[-4,5],[4,-2],[-1,-7],[-6,2],[-1,1],[5,-6],[-2,-2],[4,10],[-5,-3],[-8,-5],[2,7],[-10,-4],[-5,5],[-3,-6],[1,-6],[7,3],[2,10],[-1,-10],[-8,2],[7,9],[1,3],[-4,-6],[6,-9],[1,-5],[-8,-2],[2,5],[-10,-8],[-5,10],[-2,7],[-1,-2],[-9,10],[-5,-3],[-1,-3],[9,-3],[-6,-6],[9,-6],[-1,8],[10,-7],[-10,-8],[-3,7],[6,-7],[9,1],[-4,-8],[-7,5],[-9,-7],[2,7],[2,-9],[4,9],[8,-4],[9,-4],[-6,-5],[5,8],[10,3],[3,5],[5,10],[-2,3],[8,-6],[-5,-9],[1,4],[3,-1],[9,-6],[8,-10],[7,-6],[1,-8],[-7,8],[-5,2],[1,5],[10,-9],[-4,3],[-8,4],[-3,4],[-8,-4],[9,8],[9,1],[8,5],[1,-8],[9,-6],[-6,-4],[-1,-4],[-3,5],[-10,-7],[2,10],[3,9],[9,1],[-1,-9],[-7,6],[3,6],[-8,-9],[3,7],[3,7],[-5,2],[-4,-4],[-9,-1],[-7,-4],[-7,-6],[3,-1],[-1,-6],[-8,-10],[9,-6],[6,7],[-4,4],[3,2],[10,3],[5,-4],[6,1],[-2,4],[-5,-2],[2,-8],[8,-10],[10,1],[1,-5],[-9,1],[10,-9],[4,-2],[6,10],[5,-6],[10,4],[-7,-1],[-8,-5],[7,4],[9,-10],[9,-10],[9,-2],[-1,-7],[-6,2],[7,-4],[-2,-4],[4,-8],[1,3],[-1,-2],[-6,5],[7,-10],[-7,8],[8,7],[-10,10],[-8,6],[8,7],[6,-2],[-8,-2],[10,-9],[4,9],[7,1],[8,1],[4,5],[-1,-3],[-6,1],[-3,10],[-5,-10],[-4,1],[6,1],[5,-2],[-3,3],[1,-1],[1,10],[5,7],[9,-8],[-8,-6],[-3,10],[1,7],[9,8],[-7,7],[-10,-4],[-7,4],[-8,-6],[-1,3],[-1,2],[-7,6],[10,-7],[4,5],[-1,7],[-9,3],[-3,-8],[-3,-10],[7,6],[2,1],[-7,-1],[4,-5]], dtype = "uint16")#candidate|6963|(312, 2)|const|uint16
call_6962 = relay.TupleGetItem(func_4998_call(relay.reshape(const_6963.astype('uint16'), [624,])), 2)
call_6964 = relay.TupleGetItem(func_5001_call(relay.reshape(const_6963.astype('uint16'), [624,])), 2)
func_4706_call = mod.get_global_var('func_4706')
func_4707_call = mutated_mod.get_global_var('func_4707')
call_6974 = relay.TupleGetItem(func_4706_call(), 2)
call_6975 = relay.TupleGetItem(func_4707_call(), 2)
output = relay.Tuple([call_6920,call_6945,call_6962,const_6963,call_6974,])
output2 = relay.Tuple([call_6921,call_6946,call_6964,const_6963,call_6975,])
func_6979 = relay.Function([], output)
mod['func_6979'] = func_6979
mod = relay.transform.InferType()(mod)
output = func_6979()
func_6980 = relay.Function([], output)
mutated_mod['func_6980'] = func_6980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2623_call = mod.get_global_var('func_2623')
func_2624_call = mutated_mod.get_global_var('func_2624')
call_6992 = relay.TupleGetItem(func_2623_call(), 0)
call_6993 = relay.TupleGetItem(func_2624_call(), 0)
output = relay.Tuple([call_6992,])
output2 = relay.Tuple([call_6993,])
func_6998 = relay.Function([], output)
mod['func_6998'] = func_6998
mod = relay.transform.InferType()(mod)
output = func_6998()
func_6999 = relay.Function([], output)
mutated_mod['func_6999'] = func_6999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6762_call = mod.get_global_var('func_6762')
func_6764_call = mutated_mod.get_global_var('func_6764')
call_7037 = relay.TupleGetItem(func_6762_call(), 0)
call_7038 = relay.TupleGetItem(func_6764_call(), 0)
func_2792_call = mod.get_global_var('func_2792')
func_2794_call = mutated_mod.get_global_var('func_2794')
call_7043 = relay.TupleGetItem(func_2792_call(), 0)
call_7044 = relay.TupleGetItem(func_2794_call(), 0)
output = relay.Tuple([call_7037,call_7043,])
output2 = relay.Tuple([call_7038,call_7044,])
func_7061 = relay.Function([], output)
mod['func_7061'] = func_7061
mod = relay.transform.InferType()(mod)
mutated_mod['func_7061'] = func_7061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7061_call = mutated_mod.get_global_var('func_7061')
call_7062 = func_7061_call()
output = call_7062
func_7063 = relay.Function([], output)
mutated_mod['func_7063'] = func_7063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_7124 = relay.TupleGetItem(func_1384_call(), 2)
call_7125 = relay.TupleGetItem(func_1385_call(), 2)
func_67_call = mod.get_global_var('func_67')
func_68_call = mutated_mod.get_global_var('func_68')
call_7133 = relay.TupleGetItem(func_67_call(), 0)
call_7134 = relay.TupleGetItem(func_68_call(), 0)
output = relay.Tuple([call_7124,call_7133,])
output2 = relay.Tuple([call_7125,call_7134,])
func_7135 = relay.Function([], output)
mod['func_7135'] = func_7135
mod = relay.transform.InferType()(mod)
mutated_mod['func_7135'] = func_7135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7135_call = mutated_mod.get_global_var('func_7135')
call_7136 = func_7135_call()
output = call_7136
func_7137 = relay.Function([], output)
mutated_mod['func_7137'] = func_7137
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7148 = relay.const([[[6.426494,6.772910,4.769765,-0.950223,-3.388436,7.342242,-0.525120,-0.294081,4.155751,-5.013854,7.862108],[6.494943,3.255156,-0.614432,-5.382272,-3.731761,6.827369,-8.046566,8.393385,9.466002,2.682285,-4.085929],[2.156266,4.958594,-2.799124,3.432799,0.631959,-3.230193,3.030306,5.315361,-6.246044,9.624288,1.436891]],[[-7.879674,-7.880495,2.351464,-9.521249,-2.176991,-8.688711,-7.782751,0.287687,4.582116,4.388746,9.725769],[-1.661959,-1.866613,8.762513,-6.817015,-1.867437,5.982014,-8.716091,-0.532416,-9.420756,5.002376,-3.066538],[4.463466,2.927845,-1.649676,-1.707431,7.898733,6.655470,7.401486,-0.054610,6.128910,-8.030941,1.268970]],[[7.113358,8.025493,-3.306760,0.251301,8.904099,8.685765,7.563978,7.275869,7.429048,-4.133174,-4.671410],[5.732484,9.440598,7.243013,9.024313,7.806982,-8.421416,-9.116855,6.210362,-7.961376,5.503311,3.926560],[7.746467,-0.190213,0.724228,8.171406,8.601253,-9.062069,-4.541022,-3.824841,1.981109,-4.957651,9.618500]],[[-3.384570,-7.550745,9.346840,-5.217518,-4.481087,6.320126,7.984421,7.291051,-5.465265,0.620678,-5.777895],[2.083429,-7.124111,-1.737980,-5.851437,8.358478,-0.949398,1.848867,9.712741,-2.272639,-7.657823,2.349202],[-7.601153,-9.789844,1.255275,-6.437980,2.470826,-0.879395,-9.883535,5.484786,-3.221248,2.598709,-4.240517]]], dtype = "float32")#candidate|7148|(4, 3, 11)|const|float32
var_7149 = relay.var("var_7149", dtype = "float32", shape = (4, 3, 11))#candidate|7149|(4, 3, 11)|var|float32
bop_7150 = relay.floor_mod(const_7148.astype('float32'), relay.reshape(var_7149.astype('float32'), relay.shape_of(const_7148))) # shape=(4, 3, 11)
output = bop_7150
output2 = bop_7150
func_7154 = relay.Function([var_7149,], output)
mod['func_7154'] = func_7154
mod = relay.transform.InferType()(mod)
mutated_mod['func_7154'] = func_7154
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7155 = relay.var("var_7155", dtype = "float32", shape = (4, 3, 11))#candidate|7155|(4, 3, 11)|var|float32
func_7154_call = mutated_mod.get_global_var('func_7154')
call_7156 = func_7154_call(var_7155)
output = call_7156
func_7157 = relay.Function([var_7155], output)
mutated_mod['func_7157'] = func_7157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2934_call = mod.get_global_var('func_2934')
func_2936_call = mutated_mod.get_global_var('func_2936')
call_7162 = relay.TupleGetItem(func_2934_call(), 0)
call_7163 = relay.TupleGetItem(func_2936_call(), 0)
func_5042_call = mod.get_global_var('func_5042')
func_5043_call = mutated_mod.get_global_var('func_5043')
call_7182 = relay.TupleGetItem(func_5042_call(), 0)
call_7183 = relay.TupleGetItem(func_5043_call(), 0)
func_133_call = mod.get_global_var('func_133')
func_136_call = mutated_mod.get_global_var('func_136')
var_7187 = relay.var("var_7187", dtype = "float32", shape = (1176,))#candidate|7187|(1176,)|var|float32
call_7186 = relay.TupleGetItem(func_133_call(relay.reshape(var_7187.astype('float32'), [12, 14, 7])), 0)
call_7188 = relay.TupleGetItem(func_136_call(relay.reshape(var_7187.astype('float32'), [12, 14, 7])), 0)
func_7135_call = mod.get_global_var('func_7135')
func_7137_call = mutated_mod.get_global_var('func_7137')
call_7197 = relay.TupleGetItem(func_7135_call(), 0)
call_7198 = relay.TupleGetItem(func_7137_call(), 0)
output = relay.Tuple([call_7162,call_7182,call_7186,var_7187,call_7197,])
output2 = relay.Tuple([call_7163,call_7183,call_7188,var_7187,call_7198,])
func_7204 = relay.Function([var_7187,], output)
mod['func_7204'] = func_7204
mod = relay.transform.InferType()(mod)
var_7205 = relay.var("var_7205", dtype = "float32", shape = (1176,))#candidate|7205|(1176,)|var|float32
output = func_7204(var_7205)
func_7206 = relay.Function([var_7205], output)
mutated_mod['func_7206'] = func_7206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2712_call = mod.get_global_var('func_2712')
func_2714_call = mutated_mod.get_global_var('func_2714')
call_7219 = relay.TupleGetItem(func_2712_call(), 1)
call_7220 = relay.TupleGetItem(func_2714_call(), 1)
func_4051_call = mod.get_global_var('func_4051')
func_4054_call = mutated_mod.get_global_var('func_4054')
var_7228 = relay.var("var_7228", dtype = "float64", shape = (1, 90))#candidate|7228|(1, 90)|var|float64
call_7227 = relay.TupleGetItem(func_4051_call(relay.reshape(var_7228.astype('float64'), [6, 1, 15])), 0)
call_7229 = relay.TupleGetItem(func_4054_call(relay.reshape(var_7228.astype('float64'), [6, 1, 15])), 0)
output = relay.Tuple([call_7219,call_7227,var_7228,])
output2 = relay.Tuple([call_7220,call_7229,var_7228,])
func_7230 = relay.Function([var_7228,], output)
mod['func_7230'] = func_7230
mod = relay.transform.InferType()(mod)
mutated_mod['func_7230'] = func_7230
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7231 = relay.var("var_7231", dtype = "float64", shape = (1, 90))#candidate|7231|(1, 90)|var|float64
func_7230_call = mutated_mod.get_global_var('func_7230')
call_7232 = func_7230_call(var_7231)
output = call_7232
func_7233 = relay.Function([var_7231], output)
mutated_mod['func_7233'] = func_7233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3659_call = mod.get_global_var('func_3659')
func_3661_call = mutated_mod.get_global_var('func_3661')
call_7238 = relay.TupleGetItem(func_3659_call(), 0)
call_7239 = relay.TupleGetItem(func_3661_call(), 0)
func_6187_call = mod.get_global_var('func_6187')
func_6191_call = mutated_mod.get_global_var('func_6191')
var_7243 = relay.var("var_7243", dtype = "int16", shape = (616,))#candidate|7243|(616,)|var|int16
call_7242 = func_6187_call(relay.reshape(var_7243.astype('int16'), [11, 4, 14]), relay.reshape(var_7243.astype('int16'), [11, 4, 14]), )
call_7244 = func_6187_call(relay.reshape(var_7243.astype('int16'), [11, 4, 14]), relay.reshape(var_7243.astype('int16'), [11, 4, 14]), )
output = relay.Tuple([call_7238,call_7242,var_7243,])
output2 = relay.Tuple([call_7239,call_7244,var_7243,])
func_7245 = relay.Function([var_7243,], output)
mod['func_7245'] = func_7245
mod = relay.transform.InferType()(mod)
mutated_mod['func_7245'] = func_7245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7246 = relay.var("var_7246", dtype = "int16", shape = (616,))#candidate|7246|(616,)|var|int16
func_7245_call = mutated_mod.get_global_var('func_7245')
call_7247 = func_7245_call(var_7246)
output = call_7247
func_7248 = relay.Function([var_7246], output)
mutated_mod['func_7248'] = func_7248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_372_call = mutated_mod.get_global_var('func_372')
call_7268 = relay.TupleGetItem(func_371_call(), 2)
call_7269 = relay.TupleGetItem(func_372_call(), 2)
output = relay.Tuple([call_7268,])
output2 = relay.Tuple([call_7269,])
func_7278 = relay.Function([], output)
mod['func_7278'] = func_7278
mod = relay.transform.InferType()(mod)
mutated_mod['func_7278'] = func_7278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7278_call = mutated_mod.get_global_var('func_7278')
call_7279 = func_7278_call()
output = call_7279
func_7280 = relay.Function([], output)
mutated_mod['func_7280'] = func_7280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1539_call = mod.get_global_var('func_1539')
func_1540_call = mutated_mod.get_global_var('func_1540')
call_7302 = relay.TupleGetItem(func_1539_call(), 1)
call_7303 = relay.TupleGetItem(func_1540_call(), 1)
func_6333_call = mod.get_global_var('func_6333')
func_6334_call = mutated_mod.get_global_var('func_6334')
call_7310 = relay.TupleGetItem(func_6333_call(), 1)
call_7311 = relay.TupleGetItem(func_6334_call(), 1)
func_4727_call = mod.get_global_var('func_4727')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_7317 = relay.TupleGetItem(func_4727_call(), 0)
call_7318 = relay.TupleGetItem(func_4728_call(), 0)
func_6333_call = mod.get_global_var('func_6333')
func_6334_call = mutated_mod.get_global_var('func_6334')
call_7332 = relay.TupleGetItem(func_6333_call(), 1)
call_7333 = relay.TupleGetItem(func_6334_call(), 1)
output = relay.Tuple([call_7302,call_7310,call_7317,call_7332,])
output2 = relay.Tuple([call_7303,call_7311,call_7318,call_7333,])
func_7339 = relay.Function([], output)
mod['func_7339'] = func_7339
mod = relay.transform.InferType()(mod)
output = func_7339()
func_7340 = relay.Function([], output)
mutated_mod['func_7340'] = func_7340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3865_call = mod.get_global_var('func_3865')
func_3867_call = mutated_mod.get_global_var('func_3867')
call_7363 = func_3865_call()
call_7364 = func_3865_call()
func_6791_call = mod.get_global_var('func_6791')
func_6794_call = mutated_mod.get_global_var('func_6794')
var_7370 = relay.var("var_7370", dtype = "int8", shape = (1092,))#candidate|7370|(1092,)|var|int8
call_7369 = func_6791_call(relay.reshape(var_7370.astype('int8'), [12, 7, 13]))
call_7371 = func_6791_call(relay.reshape(var_7370.astype('int8'), [12, 7, 13]))
output = relay.Tuple([call_7363,call_7369,var_7370,])
output2 = relay.Tuple([call_7364,call_7371,var_7370,])
func_7376 = relay.Function([var_7370,], output)
mod['func_7376'] = func_7376
mod = relay.transform.InferType()(mod)
var_7377 = relay.var("var_7377", dtype = "int8", shape = (1092,))#candidate|7377|(1092,)|var|int8
output = func_7376(var_7377)
func_7378 = relay.Function([var_7377], output)
mutated_mod['func_7378'] = func_7378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1486_call = mod.get_global_var('func_1486')
func_1488_call = mutated_mod.get_global_var('func_1488')
call_7399 = relay.TupleGetItem(func_1486_call(), 0)
call_7400 = relay.TupleGetItem(func_1488_call(), 0)
output = relay.Tuple([call_7399,])
output2 = relay.Tuple([call_7400,])
func_7415 = relay.Function([], output)
mod['func_7415'] = func_7415
mod = relay.transform.InferType()(mod)
mutated_mod['func_7415'] = func_7415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7415_call = mutated_mod.get_global_var('func_7415')
call_7416 = func_7415_call()
output = call_7416
func_7417 = relay.Function([], output)
mutated_mod['func_7417'] = func_7417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_7423 = relay.TupleGetItem(func_3257_call(), 0)
call_7424 = relay.TupleGetItem(func_3258_call(), 0)
func_1242_call = mod.get_global_var('func_1242')
func_1243_call = mutated_mod.get_global_var('func_1243')
call_7427 = relay.TupleGetItem(func_1242_call(), 0)
call_7428 = relay.TupleGetItem(func_1243_call(), 0)
output = relay.Tuple([call_7423,call_7427,])
output2 = relay.Tuple([call_7424,call_7428,])
func_7433 = relay.Function([], output)
mod['func_7433'] = func_7433
mod = relay.transform.InferType()(mod)
mutated_mod['func_7433'] = func_7433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7433_call = mutated_mod.get_global_var('func_7433')
call_7434 = func_7433_call()
output = call_7434
func_7435 = relay.Function([], output)
mutated_mod['func_7435'] = func_7435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5162_call = mod.get_global_var('func_5162')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_7472 = relay.TupleGetItem(func_5162_call(), 2)
call_7473 = relay.TupleGetItem(func_5164_call(), 2)
output = relay.Tuple([call_7472,])
output2 = relay.Tuple([call_7473,])
func_7506 = relay.Function([], output)
mod['func_7506'] = func_7506
mod = relay.transform.InferType()(mod)
output = func_7506()
func_7507 = relay.Function([], output)
mutated_mod['func_7507'] = func_7507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6472_call = mutated_mod.get_global_var('func_6472')
call_7533 = relay.TupleGetItem(func_6471_call(), 1)
call_7534 = relay.TupleGetItem(func_6472_call(), 1)
func_3659_call = mod.get_global_var('func_3659')
func_3661_call = mutated_mod.get_global_var('func_3661')
call_7539 = relay.TupleGetItem(func_3659_call(), 0)
call_7540 = relay.TupleGetItem(func_3661_call(), 0)
output = relay.Tuple([call_7533,call_7539,])
output2 = relay.Tuple([call_7534,call_7540,])
func_7554 = relay.Function([], output)
mod['func_7554'] = func_7554
mod = relay.transform.InferType()(mod)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7554_call = mutated_mod.get_global_var('func_7554')
call_7555 = func_7554_call()
output = call_7555
func_7556 = relay.Function([], output)
mutated_mod['func_7556'] = func_7556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3117_call = mod.get_global_var('func_3117')
func_3119_call = mutated_mod.get_global_var('func_3119')
call_7561 = relay.TupleGetItem(func_3117_call(), 0)
call_7562 = relay.TupleGetItem(func_3119_call(), 0)
func_5746_call = mod.get_global_var('func_5746')
func_5749_call = mutated_mod.get_global_var('func_5749')
const_7569 = relay.const([8.014447,-8.985711,2.554386,8.189204,1.486304,-3.328121,4.355732,7.463354,-1.175993,-7.955136,-3.657066,5.074566,4.874136,-7.349267,-0.606483,4.939131,-0.613595,1.279397,-4.111366,-3.974160,-8.413066,-9.375302,2.956330,-1.963635,8.164059,-5.001720,-4.804206,-6.296443,-4.513497,-4.497670,-9.069479,-9.044931,0.363181,-9.476814,4.232548,3.896688,-2.251271,8.009921,3.541788,6.613784,-9.106756,5.292821,7.335314,-8.175721,-4.387786,7.330323,2.148634,3.580163,8.975166,-8.799030,-4.854283,3.925041,8.646249,-0.390484,-0.993098,1.258562,-4.749188,6.040047,-2.248574,9.688998,-7.229327,-5.893392,-5.275165,-3.174187,4.938812,-1.167877,-5.989822,-7.715013,1.731396,7.290221,-9.228429,-1.174538,6.342605,0.024893,-8.131362,-2.199011,0.655762,-7.393732,-7.913875,4.664294,1.436038,-8.563680,1.194613,1.726052,4.214727,-3.326181,-2.708921,-6.449231,-0.274784,2.119896,-4.115293,5.622290,-2.954455,-7.395246,-1.461520,7.034048,9.158978,-0.428132,-5.584682,0.519911,-0.316806,-9.948256,2.909774,-2.986851,-0.440684,-7.768572,0.166441,-2.979951,2.184935,-1.861663,-6.085154,7.354840,5.599369,9.629396,2.700372,-6.444880,-6.307087,-3.860392,0.425557,-8.719919,3.093422,3.312152,-4.015264,-6.940851,-6.284987,-9.593337,-9.291596,-7.513949,8.666401,-0.327694,8.575861,-0.487938,0.701755,0.893265,9.554349,-5.824861,-0.790225,8.107249,0.979562,-1.113272,-8.158858,-0.443768,-5.617425,1.361932,-7.591981,-3.293644,-7.560603,-4.979694,-7.526923,-2.670357,8.965890,-0.263188,-3.091209,-6.345394,7.040091,2.553613,5.011796,1.630324,3.211695,1.192093,-0.300589,5.541352,-5.733687,-7.685031,6.854468,-0.462776,5.757962,-2.226965,-9.191988,3.344148,8.752300,-1.165066,-2.057940,-9.442148,-8.355671,-3.430689,6.900335,6.631429,9.019003,-0.522302,-0.334494,0.053819,9.036072,-8.797916,-5.208595,-0.037248,-2.860068,8.515527,-2.543653,-4.728680,4.211334,8.602454,-1.679492,7.509675,-2.070061,-2.401173,-1.683991,-5.019296,1.757381,-8.732679,-3.186907,2.435456,0.542951,2.316662,-2.464124,-0.108634,-0.996616,9.417940,-5.833132,-4.654569,-3.890837,6.065327,-9.179663,8.115802,-4.418495,-8.083107,-0.125642,-8.674072,-0.067431,9.491604,7.291239,-0.521222,9.054820,2.653296,-3.145850,-7.662450,-0.095809,-4.464878,9.993244,1.780756,0.695430,-4.704117,4.684174,7.189440,-3.575652,1.647908,-4.902426,-4.650088,4.960556,0.576721,2.247395,-0.752527,8.835879,4.028575,-6.617872,3.290678,-7.388620,3.200162,-3.314806,4.426466,3.527194,-9.844364,-2.362342,2.105610,-2.510636,-9.813404,-4.721048,-0.723524,1.149706,-2.806267,-7.375929,2.761753,2.789362,-8.626395,5.213684,9.411335,-2.862449,-5.262889,-6.862062,-0.715047,-5.667374,-1.125628,-2.566562,-0.238526,-1.103827,5.952391,-9.924763,5.321679,-0.943025,2.807469,5.957167,-6.483419,8.543765,2.730930,2.688735,-4.496168,-5.468579,-3.834183,0.681356,-7.835440,-7.625381,-5.339796,-6.020196,-4.820525,-1.206139,-2.276257,-3.532202,5.162995,3.624357,3.357999,6.028687,-6.127237,6.287175,-0.269635,8.044321,-9.153741,-6.036236,2.875788,2.064490,6.384502,9.201122,6.368067,7.180751,3.451694,9.439221,9.830222,8.565774,-6.294763,-7.285910,3.836446,4.917696,1.475917,0.019853,-6.147039,8.208639,-4.721496,1.049719,-0.827338,-9.977139,6.963052,5.831654,-1.311716,-6.130896,5.666202,5.144998,7.018822,-7.499262,8.171630,1.382615,-9.891294,9.324827,2.103329,5.722995,7.470382,-7.168606,5.854230,2.598016,-7.357917,0.627895,2.736754,-9.312357,8.995272,6.905407,-8.097744,8.596270,3.004268,9.804396,6.573491,9.656384,4.012903,-8.754594,5.157622,-8.352154,6.963912,1.261208,5.744914,0.905611,-4.186050,6.977703,0.428148,-9.165873,1.795592,-9.388529,-6.929271,-6.886551,7.593543,-7.888746,-9.539527,-3.630449,-4.077337,-4.933163,9.725924,5.257160,7.256757,1.769132,4.462007,5.079370,4.720225,0.618368,6.877139,8.964915,-3.089267,9.698130,6.195545,0.092859,1.599532,9.266153,6.040332,4.575961,9.631773,-9.580924,-9.416310,5.433007,9.318334,4.754517,-4.359287,5.415490,-3.407049,-0.858503,-3.877250,-1.420283,7.760055,-2.980376,-0.914247,5.859051,-7.207974,-8.465748,-5.599735,1.120962,-3.983469,-7.645543,5.032212,-2.511408,6.893803,7.203989,-0.543437,7.988396,5.263511,-3.884640,5.110408,9.720341,7.950273,-6.993207,-6.519685,7.595629,-2.161619,0.623190,1.859180,-8.908558,-0.095739,-0.617702,9.975593,2.789314,-9.171089,-1.952379,7.981050,4.597623,2.219379,-5.820175,5.251744,-8.510842,-4.705665,-7.308171,0.867688,-0.497697,-8.458049,-5.484133,-8.056445,5.668135,-3.579753,7.169848,5.936389,-5.392476,-0.454121,-0.423460,7.630008,-2.261419,8.683066,7.095939,1.840548,-9.760028,1.884992,3.880718,-2.634625,-4.663156,-0.677409,7.564225,-2.651211,-5.364008,-2.574280,2.763569,1.699463,0.222332,-4.692967,-5.824413,-4.482512,1.685293,4.420227,-5.547150,2.020981,-3.199145,-8.489062,-4.722807,-2.396001,8.194932,8.407713,-6.023535,-3.783687,0.896454,-4.479150,-6.560037,8.264187,-0.214500,-1.448494,-7.340929,9.705760,6.254707,-7.259509,4.063578,-7.728703,-8.503731,7.113960,9.011011,-1.271635,-3.135933,-7.103687,-8.591631,-3.594869,-6.002395,4.264865,9.477285,-8.086321,-4.132444,-8.968675,6.364196,-0.661997,-6.194222,-2.587660,-1.504213,2.462307,2.448408,4.659279,5.450095,2.783407,1.748044,-6.272130,5.014125,8.695894,-0.770271,8.771878,3.665589,4.492624,0.486257,1.261982,-3.380087,-6.002110,-4.100894,6.577822,-8.677428,4.506573,7.800241,-1.293005,-8.313016,-7.732695,4.658943,-5.135009,-1.676808,-5.119264,4.113971,3.212684,-8.615911,-6.020425,0.048702,-4.370016,-1.240969,0.903774,-0.385043,-8.585946,-6.305076,5.427536,9.170745,-3.832832,8.799617,1.439011,-1.488163,-1.919681,9.177982,8.373485,7.234983,-8.021770,0.164994,0.011173,0.424098,0.162945,9.630463,2.563598,-4.740893,-6.408220,-2.463209,4.070334,-0.648469,-9.842949,-7.167644,-8.707636,0.096320,8.215380,2.433527,-4.766837,-2.232633,-8.746963,-3.086659,-4.797512,0.088358,-3.372272,5.646273,-6.514970,-9.088352,9.305232,-8.433892,-7.228638,-0.270621,-6.163795,-0.009845,-0.222371,-3.153604,-0.025117,-3.220514,-8.362032,2.684878,8.452969,-6.544647,-8.790431,-9.788695,2.426091,-8.795752,2.676294,8.566002,-3.117878,-1.952186,-4.847880,1.797806,-7.752875,-0.340284,6.772915,9.543359,-3.040201,-9.750214,-4.154263,-9.197723,2.175562,2.497489,2.726839,-7.334066,8.611643,-1.449052,-3.734339,-1.074113,2.022523,1.310283,8.316650,1.002362,-1.807028,-8.793188,1.586805,-7.154089,4.799032,4.460366,-0.220781,-5.713674,-6.052492,7.558372,-0.440367,3.858342,-5.686807,-6.237134,-9.103520,9.086918,4.217381,6.042682,-6.871773,9.167136,-0.918439,-9.570687,6.395763,-7.815191,8.500271,-7.868135,0.504274,9.322487,-5.154773,7.373034,-2.540190,1.977341,1.625230,-0.282325,-4.211907,9.388004,-0.317395,1.210577,4.645025,4.647672,2.275449,-3.745118,-8.158811,3.604686,-7.642635,3.468359,2.749416,-2.716968,7.348470,1.411620,4.783283,-7.028959,-8.953926,3.484970,8.660273,1.963164,-5.205188,-1.611056,1.762898,5.205707,-9.106847,-7.224886,8.206995,-6.565557,0.825869,-3.125670,2.696259,-2.985376,-7.732074,4.096378,5.436864,-5.916074,-8.960112,-5.635887,-1.831702,7.343098,-0.398996,8.505220,5.207401,-1.178756,5.023867,3.840702,-5.680003,-6.766700,9.764195,-0.736458,-1.818235,-4.465066,9.202348,9.967336,-1.784557,5.100193,-4.052887,-1.880860,-4.743566,8.853485,7.117357,-5.568621,-5.523761,-4.661363,-7.802662,-2.548537,8.291808,-3.326337,1.493737,1.462162,-4.107492,-5.557869,2.246864,-5.805605,-9.992728,3.361469,-9.346890,3.911050,-1.643003,-0.998947,-8.627211,-1.359996,0.823374,9.954338,-3.292949,-9.868869,8.880665,4.879581,0.770517,-4.801600,6.739582,5.379427,-4.211843,0.826631,-4.631257,6.798549,-9.447178,0.520761,-2.984339,5.467765,0.697334,-3.721548,-4.555806,1.312689,7.610676,6.792312,5.676567,7.798077,7.683636,-2.874235,-8.920642,0.339650,4.124868,7.172050,0.478809,-7.096241,-7.960889,1.687437,7.366857,4.397048,-1.693499,2.512885,6.372226,8.419030,2.635742,1.910582,-4.858046,7.067289,7.028440,9.896258,3.784518,2.476189,-1.488111,-0.540870,6.757968,3.368676,8.540252,8.379490,1.340796,0.658021,-7.095344,-7.785349,3.051080,8.836285,-3.780290,8.636283,-2.348541,-3.910571,6.807889,-8.524570,-2.271659,2.470224,7.261263,-0.048999,1.014960,4.340366,-6.083483,-6.508234,4.407807,-7.686312,6.461769,6.456061,-2.748083,-2.928872,7.325186,-0.045851,-5.033766,5.676366,-3.107016,-3.410531,1.925389,-5.256310,-3.546322,-0.034134,-6.995563,3.672958,-4.108826,4.647086,-1.178034,7.521542,1.177992,9.242340,9.114880,3.080042,0.686658,5.988425,9.578702,-9.425277,9.512447,-1.556448,-0.013630,0.671281,-2.635870,5.220898,-3.431907,-7.304111,8.158093,-2.382414,-9.091120,-9.458544,3.955666,3.628217,0.317211,-6.834934,-9.128191,-5.176565,6.710325,4.116158,6.859290,-7.904137,1.036010,1.013298,9.315080,3.327462,5.943512,0.672989,-4.480647,9.328392,-4.632396,-2.756775,-3.673714,2.826362,-6.619755,-2.228749,-8.488857,7.893147,4.962265,-1.766196,-4.568221,2.299507,9.769128,3.971097,5.214624,-7.038699,-5.880182,-8.749814,5.203242,-1.595956,-3.139083,4.764855,-7.374111,3.745364,2.822953,-2.294127,8.233194,7.353511,-4.098436,-6.485535,-3.624205,3.478519,0.259491,2.904114,-0.034469,-2.136799,-6.846990,8.579132,6.613722,2.644901,-5.834607,-8.419139,1.489874,-3.525751,-2.467200,7.446608,5.899538,-1.227242,-9.693394,-7.800023,1.025823,4.111249,-9.619174,-9.323026,8.397241,9.375098,6.769277,-2.699146,5.711488,-7.499815,2.482927,-6.728659,0.143242,-8.876745,7.925811,-9.963013,0.840679,-3.372715,-9.510113,7.952889,-6.681809,1.728823,2.093406,-5.833522,-1.156073,-3.059568,-3.870906,0.825593,6.388766,1.984011,-2.173400,-5.091436,-4.041617,2.281831,5.218812,-3.583642,0.280986,-4.576786,2.066167,-9.348080,4.559304,-6.453970,6.182811,4.003808,4.512215,4.641472,-8.902478,8.479533,9.199962,3.763005,-3.425190,-4.300582,2.218538,-1.734552,-8.625045,5.621538,9.484992,6.316268,5.748892,-5.531885,-1.829959,-2.223152,9.188341,4.171562,-7.976720,2.494635,-7.129389,1.644550,-1.295329,7.333122,-0.600216,8.784831,-5.955732,-2.655634,2.458467,-2.852143,6.324252,3.452109,-7.588269,1.600171,2.808009,5.252006,-5.286625,-6.896871,-9.488984,5.007055,-7.042851,2.044205,-0.099793,-7.537149,-2.492786,5.187579,6.542461,-3.178930,8.835635,-9.342062,-3.391214,-7.992949,-2.488061,-9.503527,-8.863883,2.475920,-8.297684,8.123298,2.507572,-3.391473,-3.712851,7.170117,-5.172823,-6.624333,5.209174,4.644528,-9.019099,-3.654359,-5.527319,-8.463211,7.503100,3.112167,-7.056243,-7.527836,-8.262336,4.471549,-9.090238,-8.772224,-9.200194,-0.504613,0.219127,0.294808,2.157063,5.236806,-5.842112,6.151476,9.040117,1.640816,5.989273,3.695773,6.809645,7.054093,4.875573,-8.194639,-0.844589,6.882969,-0.396825,4.694086,3.220708,6.611324,-4.093841,5.656140,8.353541,5.750925,-9.542778,-0.853478,4.648639,8.748730,2.577481,-5.897646,-7.064223,-2.097778,7.926310,-5.324223,-6.520141,-1.170243,-9.578149,-0.775382,2.767004,8.872003,5.846895,6.945672,7.134609,3.322067,-9.200386,-1.850597,-7.837846,-9.932370,-0.917826,-9.795651,-5.359100,-4.349208,-9.100429,4.541518,-6.513416,2.164487,-8.348982,0.083296,8.715027,3.280464,-2.319321,-4.754768,-8.581893,-6.007080,2.471760,7.346472,-3.719508,1.305472,-9.249983,-2.816839,9.729452,-5.137674,-0.472960,4.373576,2.223590,6.593496,-0.787795,-9.662611,-6.306171,3.969023,4.333953,-7.617418,-3.128578,-7.732933,-6.962906,-6.507989,-0.335206,6.074701,-1.016689,-7.440283,3.878373,8.374228,0.260308,-5.840034,6.178696,7.792154,-8.160664,-1.469610,5.528497,-3.226678,7.141783,7.207111,2.734849,-1.591746,6.906469,4.176913,-1.601317,-9.895008,-3.243053,-1.815165,1.908098,-6.565889,3.351935,-4.014073,7.492102,-6.267613,4.132686,-4.764985,-9.605217,-6.616834,7.916661,1.486588,5.710967,1.951700,-4.267961,0.348716,-3.331847,-4.878705,-1.577441,-4.982207,1.951067,-7.286464,1.249191,8.204808,2.111727,6.657300,-3.180524,-8.890226,7.065402,9.523019,4.253894,0.167965,0.929040,2.656808,-4.983465,5.910011,-8.561613,3.051492,3.483100,-5.702575,-8.204647,7.421169,-4.229786,-6.758970,-2.025688,3.544967,-6.796621,2.370463,-9.190885,5.660796,-0.538481,-7.358317,-4.267988,-5.831140,0.662497,-5.796731,9.908422,-0.503639,-9.157481,1.303668,-0.893064,-3.990048,1.766708,-0.836610,7.964889,-5.685847,1.239862,-0.814389,-7.832953,5.836809,6.975541,-7.561234,1.188205,-9.057908,4.192907,-8.724772,9.562639,8.125840,-2.368655,-5.837758,0.257972,-2.281123,-5.247607,5.000838,4.629697,-4.388039,-5.241384,1.959627,2.115694,9.638268,8.096247,-7.711325,6.369811,4.512851,-2.797488,8.703967,4.124292,-6.316787,-5.618231,-0.489954,-3.994031,1.751972,4.669711,-7.460538,-6.202092,-4.511913,-1.719185,-9.797856,-7.849461,3.909750,-5.970226,-8.927715,-6.971286,2.335510,-5.186950,2.233535,-6.713421,-0.499843,3.057868,-7.733008,-3.790624,-2.038253,1.455332,-0.701107,-3.597545,-8.429521,-1.422016,-1.465923,8.546342,-7.337957,-4.653908,-4.452710,-7.179052,-6.913296,-9.176333,6.291655,5.188118,4.220121,2.914903,-8.262174,0.033466,-3.981247,-2.847584,2.369138,-2.675227,2.006366,5.947750,3.582033,-8.364583,9.927328,-3.071018,-9.729053,-1.250109,-7.828275,7.058338,-5.979169,-0.074490,4.885880,4.932281,-6.730915,-1.296347,-8.818489,-9.262611,0.171538,-8.226124,4.727938,0.194658,-6.123849,0.511326,0.265254,-6.307928,1.828855,-1.508756,4.871283,1.210657,5.610915,3.691941,9.242904,8.464422,2.482640,-6.059968,-3.699026,-4.565054,8.703657,-2.585955,-6.318159,-9.793856,3.602694,-4.378517,3.610768,-7.031031,3.030563,-7.121527,5.731641,4.479191,0.407665,6.586346,-6.056836,5.324508,3.117697,-7.757827,-7.864599,-8.839151,-0.325002,-6.929134,-6.463843,-0.538824,-3.102816,8.243712,7.676281,-5.091183,-9.900364,-7.264906,3.413512,-7.983758,3.106480,8.997407,-3.409482,5.878052,-4.338023,-4.327442,4.539083,3.434660,9.723504,6.999819,5.382905,-7.644318,-1.868877,-6.525924,-5.963815,-8.936989,-7.406066,7.528641,8.967887,8.033645,-3.251679,1.369197,-7.435757,6.514070,3.796628,-4.774018,7.379404,-9.390045,-7.856383,9.007435,7.364020,-0.848027,6.076686,-2.417902,6.256546,8.037908,2.674292,6.978128,3.983479,-8.609255,4.506416,1.720130,6.321230,-6.871632,0.058365,-8.982441,-4.224148,-5.974974,-1.000645,-7.217918,-5.835472,0.530809,-1.439023,4.902823,8.869257,-7.299442,6.480578,5.425257,6.939747,-4.659243,-4.087315,-1.207789,4.834940,-2.674299,5.755447,0.188460,-0.551383,-6.136482,8.539826,-8.195919,4.888664,-4.106789,0.687674,4.208028,2.063630,1.600253,-0.019762,-5.491081,-5.543366,8.471864,-5.019343,4.608003,8.251980,0.259746,9.149955,4.846712,7.032001,7.613011,-9.987093,1.304952,-0.328015,2.485028,-2.451498,4.653158,-8.941234,3.769632,1.129863,-7.765871,-2.287097,-9.797926,4.202369,-7.496998,7.494739,3.169781,-4.573439,2.757677,0.779557,9.561016,7.535758,-3.403820,4.128790,-4.074326,-7.208369,7.935422,-0.440023,7.053845,5.913862,-0.833274,3.509229,-2.717525,7.635579,1.452755,-0.254566,-0.694403,1.156868,-9.375400,-0.069839,0.118274,3.872733,5.082715,-2.084303,5.496001,-3.335030,-2.566621,-7.460220,4.250278,3.135788,-6.872403,0.187146,5.555774,-3.824329,0.111201,-5.730900,0.121990,7.480427,7.970394,7.890131,-2.479760,4.871305,-2.652126,1.949970,6.015095,-8.101981,7.671355,-2.806461,-5.643208,-3.443914,-1.854386,-0.450050,-4.659861,-9.002147,-0.952860,-4.302079,-9.858220,7.225437,2.964528,-5.571336,0.176238,2.675752,0.957343,5.823834,-6.469102,6.493698,-0.568221,-7.586148,-4.653785,3.871904,2.525750,9.094000,3.381392,-5.642276,9.740635,8.164670,0.342310,0.245591,-0.860226,-3.999320,-7.306471,8.381365,0.222834,5.144722,0.824690,-2.539213,4.133587,-8.793340,9.284271,4.671343,2.992226,8.499914,9.244912,2.111018,-7.694036,-8.558674,-0.299249,9.756458,-4.932864,6.221828,3.110449,-9.533531,3.584472,2.739526,5.959334,7.754607,0.131654,7.364070,-6.899781,8.847430,-3.732693,2.316337,4.602956,-7.714880,-8.169273,6.776844,-4.596117,-2.869275,-7.463787,-6.513463,-1.211255,1.346510,-3.191018,8.322413,9.722467,7.807737,-0.426648,-3.995417,-4.865366,3.599964,-8.054902,-4.288310,-7.760894,-7.162278,9.143175,-7.589983,6.362104,9.879619,-2.199556,-2.059528,6.517888,1.191098,-1.921452,-8.186575,7.487676,7.517223,-9.524949,-2.505699,-8.177596,-6.827978,4.056775,-8.971516,-5.592236,-4.295950,-1.593692,-6.413401,8.726490,3.921386,-4.609306,-1.788960,-0.056331,9.482384,8.059194,9.438735,4.551936,1.346074,2.746700,0.530637,-1.801065,-4.717536,-6.056010,-6.585709,0.393415,8.023886,3.274852,9.696274,-2.986438,8.397234,-3.168128,7.363008,-6.418880,-7.248192,-3.581152,6.095567,1.877473,4.936069,-9.908529,2.595555,-7.587569,5.167812,-4.282411,1.909865,-4.647050,7.490780,6.696752,-1.401677,4.591951,4.451217,-6.914015,-3.740907,9.369616,2.465928,-6.734930,8.460850,5.861259,-7.841304,9.405324,-5.850659,-1.467826,-9.614479,5.012390,8.196686,7.031298,-3.115401,3.751397,4.923171,5.393623,3.989471,-4.337793,-2.909788,8.257946,7.037195,-9.191864,-8.416077,6.885593,-5.580910,5.861384,-9.899598,7.490354,-6.005132,1.304609,3.377365,-6.585805,-1.717008,0.859641,6.630275,-5.393643,2.893120,-1.043234,6.761884,-4.715517,-4.812712,-1.257984,-2.198353,-0.409129,-5.826560,-5.391446,-3.443981,-7.480970,6.815221,2.169701], dtype = "float64")#candidate|7569|(1764,)|const|float64
call_7568 = relay.TupleGetItem(func_5746_call(relay.reshape(const_7569.astype('float64'), [14, 9, 14]), relay.reshape(const_7569.astype('float64'), [14, 9, 14]), ), 0)
call_7570 = relay.TupleGetItem(func_5749_call(relay.reshape(const_7569.astype('float64'), [14, 9, 14]), relay.reshape(const_7569.astype('float64'), [14, 9, 14]), ), 0)
output = relay.Tuple([call_7561,call_7568,const_7569,])
output2 = relay.Tuple([call_7562,call_7570,const_7569,])
func_7576 = relay.Function([], output)
mod['func_7576'] = func_7576
mod = relay.transform.InferType()(mod)
mutated_mod['func_7576'] = func_7576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7576_call = mutated_mod.get_global_var('func_7576')
call_7577 = func_7576_call()
output = call_7577
func_7578 = relay.Function([], output)
mutated_mod['func_7578'] = func_7578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7507_call = mutated_mod.get_global_var('func_7507')
call_7642 = relay.TupleGetItem(func_7506_call(), 0)
call_7643 = relay.TupleGetItem(func_7507_call(), 0)
output = call_7642
output2 = call_7643
func_7654 = relay.Function([], output)
mod['func_7654'] = func_7654
mod = relay.transform.InferType()(mod)
output = func_7654()
func_7655 = relay.Function([], output)
mutated_mod['func_7655'] = func_7655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3117_call = mod.get_global_var('func_3117')
func_3119_call = mutated_mod.get_global_var('func_3119')
call_7681 = relay.TupleGetItem(func_3117_call(), 0)
call_7682 = relay.TupleGetItem(func_3119_call(), 0)
func_3719_call = mod.get_global_var('func_3719')
func_3720_call = mutated_mod.get_global_var('func_3720')
call_7699 = relay.TupleGetItem(func_3719_call(), 0)
call_7700 = relay.TupleGetItem(func_3720_call(), 0)
output = relay.Tuple([call_7681,call_7699,])
output2 = relay.Tuple([call_7682,call_7700,])
func_7716 = relay.Function([], output)
mod['func_7716'] = func_7716
mod = relay.transform.InferType()(mod)
output = func_7716()
func_7717 = relay.Function([], output)
mutated_mod['func_7717'] = func_7717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5899_call = mod.get_global_var('func_5899')
func_5901_call = mutated_mod.get_global_var('func_5901')
call_7721 = relay.TupleGetItem(func_5899_call(), 2)
call_7722 = relay.TupleGetItem(func_5901_call(), 2)
output = call_7721
output2 = call_7722
func_7723 = relay.Function([], output)
mod['func_7723'] = func_7723
mod = relay.transform.InferType()(mod)
output = func_7723()
func_7724 = relay.Function([], output)
mutated_mod['func_7724'] = func_7724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7757 = relay.var("var_7757", dtype = "float32", shape = (15, 6, 12))#candidate|7757|(15, 6, 12)|var|float32
uop_7758 = relay.log(var_7757.astype('float32')) # shape=(15, 6, 12)
func_2820_call = mod.get_global_var('func_2820')
func_2823_call = mutated_mod.get_global_var('func_2823')
const_7764 = relay.const([-1.735576,-1.710248,-2.193051,8.896155,-0.183928,-4.967108,-2.402851,9.306313,1.827168,-3.235969,6.413405,-5.264668,0.895507,6.748686,8.002015,-5.757044,7.847237,-7.985512,0.945829,8.158926,0.129475,8.666867,-2.842507,-4.500625,2.585738,6.783067,9.759551,0.231397,-5.887161,3.712080,6.668251,2.974672,-8.695248,-8.900014,2.891115,-1.111306,3.957721,-7.908457,-8.990310,5.340152,6.398151,-6.014400,-0.181632,-7.909395,1.333996,4.706392,9.323861,8.498945,-5.000843,1.806648,6.500878,-0.708162,-7.986765,-7.430250,1.681014,-1.626692,-8.371787,5.521452,7.318095,9.055359,4.556950,0.246433,8.366096,-8.729534,-4.433871,0.836471,5.882577,-6.106827,2.311500,-8.680653,-2.059420,3.077055,-4.026339,5.717367,-7.661712,-3.551984,2.692808,-7.370616,-9.507165,-9.370543,6.952100,5.253550,1.578623,-5.797842,-5.176923,3.398939,7.028061,-1.949769,5.075563,5.444107,-8.137587,2.617151,0.277831,8.537274,2.376233,-6.978976,8.999725,9.247443,0.546269,8.150302,8.603444,-2.107186,-0.859662,-0.887518,5.691222,0.629425,5.936643,8.667331,0.234241,-1.250299,8.268756,9.862682,-9.203723,5.494003,-8.095521,-5.054604,-9.751218,-2.179173,2.234015,-9.546512,9.475814,-7.917108,5.766165,9.425396,-4.863895,1.861753,8.990249,8.729943,4.420657,4.075203,3.830508,7.029213,0.465211,-5.228905,-3.202200,1.814870,2.075114,-5.305483,2.767804,1.622339,-1.114056,3.283315,3.939688,1.812773,-1.905613,-0.032658,-0.459552,9.775700,0.219953,-2.860952,-7.818101,3.375838,-3.606072,-9.941484,-6.561322,1.856160,-0.446240,-2.698885,2.715236,8.616463,-6.204864,-6.308233,5.179253,-7.547567,6.757080,5.310411,-0.568038,6.464936,-0.833735,9.153886,7.680205,7.889533,7.083931,4.574474,-2.364038,-1.512486,-9.633167,6.455015,-4.102912,9.441481,4.432543,-0.910827,0.128644,-5.198523,9.246619,-9.653557,-4.338752,4.942179,6.688737,3.578711,0.677441,8.404837,-3.334335,0.965059,-1.088216,-4.242750,5.787285,-1.399698,6.828633,8.004105,-2.496381,4.686217,7.584469,-2.105823,-8.235181,-4.057082,-2.559183,0.627550,3.235295,5.448832,2.172257,3.954318,-5.420206,-9.023080,-6.445813,4.815035,1.416974,4.456944,5.521657,-5.553278,7.693091,1.176470,-6.477559,-0.255149,2.037298,7.881080,-0.642509,-8.556642,-6.796981,-0.519354,-2.428442,6.205164,-1.014485,-9.619324,0.134010,0.645102,-2.331570,-3.454477,-1.773554,-8.509508,-6.970843,-9.623762,-6.975465,-5.565093,5.536516,0.357252,-2.199994,-0.494617,7.479228,-5.504578,2.918161,-5.320082,-4.733937,-9.131890,6.703591,-2.413077,-3.836882,-1.263542,5.544322,-8.704999,3.309278,-4.693740,-1.255672,4.395398,-9.873669,-2.616693,0.169309,5.751754,9.110177,-9.150902,-5.497925,1.071028,-1.844529,3.414397,-0.186158,-5.129410,0.735517,6.190199,0.888939,2.318986,-0.472123,7.852231,-1.370240,1.973691,-1.858367,5.445057,-0.679357,-3.774294,-6.535786,5.072021,3.195357,5.323261,-0.899630,-7.660025,6.331151,7.060761,-2.376588,0.604447,7.772242,-7.632390,5.713591,-3.514277,-9.822871,-9.597647,-9.567422,9.986456,3.243453,-1.065127,6.522766,-2.407745,5.513514,-2.626268,-0.773604,-8.371329,-3.716891,-8.422770,-1.865588,-5.571040,4.928147,-1.725447,-5.492356,9.257176,-3.451804,9.192153,-0.654497,-0.806844,-5.443966,5.068960,-3.728217,-0.684220,2.169078,-2.768994,-3.659265,-6.750102,2.367164,6.874252,8.170767,-6.560494,3.694740,1.114679,8.252773,6.668361,6.650873,-4.571046,-8.101534,-2.698211,3.035938,-9.200752,8.004689,5.009483,1.235826,-1.030795,6.542409,-8.533455,8.677823,0.054961,5.208020,-9.067496,3.644431,-5.394253,5.811010,7.871585,-4.903603,-6.829024,4.091401,-2.178984,6.567781,5.466183,6.378525,3.965206,0.923682,1.292611,0.019746,1.461728,2.693117,-5.078413,8.985250,0.753582,3.313675,0.377610,-0.432646,0.341739,9.681949,-0.090070,-4.268315,0.930704,-2.573319,-6.780436,-7.329616,1.902441,-8.756275,-7.451629,2.062839,4.227050,-7.905688,6.244341,-6.589418,-5.041260,3.451163,4.285393,-4.778410,-3.710117,7.565731,-3.197688,-6.937167,0.945236,5.869629,-7.626640,-2.020254,-3.188421,2.806489,4.355096,-7.472307,5.065593,-8.868474,-1.447593,9.608454,-8.712655,3.376612,-6.033137,-8.095394,-2.221012,4.798659,-8.573524,-6.279286,-3.873463,3.546634,-8.968692,3.449993,3.240392,-2.922079,-1.238592,-2.257730,-8.774924,2.099155,-6.936595,3.869756,-1.248463,2.747223,-0.272274,2.090533,1.826901,-8.296538,-5.864621,0.803240,1.333236,9.625462,4.438124,-4.549474,-2.714332,-9.528453,5.413679,9.407354,6.701521,7.314658,6.747938,-7.965989,2.862876,-1.315280,5.202865,7.311383,2.125615,-0.736185,1.203554,-9.510193,8.636267,-3.159612,-6.455957,-4.071846,-5.409368,6.794598,-1.878873,7.949186,-9.996610,6.491134,8.781286,4.945170,-3.911587,-1.281514,-2.213097,5.622666,6.746267,0.929858,6.020181,0.423327,0.634031,2.944012,6.940599,7.384982,-6.208026,7.621136,3.519005,-9.701646,-9.748182,4.179072,-6.261848,-1.962428,-0.047409,3.215628,4.658907,-4.317054,-4.876443,-9.531271,-8.174370,4.638612,4.559806,-2.570204,3.132637,-5.976976,1.892563,3.769629,-3.033669,-4.627849,7.714383,-4.911821,-6.399436,4.098499,7.424515,-0.749562,5.498106,-5.775041,-0.983112,1.564440,-2.799830,-1.170514,-5.674280,5.580219,4.505942,1.478684,1.161697,-3.637399,-2.541758,-2.370989,2.086341,6.333439,3.791542,2.821312,3.536269,7.911553,-9.595182,5.596399,9.960175,1.460184,-5.529887,3.859144,7.111307,-2.947625,8.129106,8.738740,0.267547,4.493148,-4.152119,7.832890,-9.520224,1.862180,-0.986919,4.598977,1.504573,-0.682603,4.792954,-6.846771,2.672061,3.185984,7.875457,-2.983870,1.867912,1.908954,-7.806575,5.829622,-0.558121,-1.997344,-1.347799,-7.972007,-2.546875,7.924655,8.312122,-3.892919,-2.842780,9.203818,-9.746071,8.092925,-2.424754,-9.592209,2.998503,2.401444,-9.165718,-7.822110,3.686174,7.925066,0.493392,5.933240,-0.164840,-9.512894,0.008148,-8.316653,9.458640,-0.473664,3.249093,-7.933292,-0.559052,-1.293971,4.926812,8.119319,0.619553,6.812769,-7.557331,8.746825,-1.172292,9.206845,-2.110164,-9.941267,3.653574,7.706206,3.518356,6.083466,3.762055,-5.735646,-5.473825,2.518700,-0.706469,1.491515,7.830260,3.596934,-1.395113,-0.273851,4.292427,-3.541329,0.194423,8.825014,0.986010,-3.713207,-9.280611,-0.944907,2.863051,-1.957371,-8.434893,-6.588974,7.636488,0.488576,-3.847749,-0.051779,-8.798738,0.480374,-8.694826,-6.335190,7.815574,-0.752027,-4.234520,2.351258,-8.882766,7.016777,6.417017,-6.908170,-0.620300,-0.379808,2.401411,-8.213482,9.701364,2.715922,-2.422571,4.381859,6.470097,2.751263,-8.988460,4.723490,-3.979349,1.990460,-5.764200,-4.726039,-1.964966,3.347144,8.665747,4.188640,4.620786,-1.174301,2.854122,-6.432379,0.263732,-0.928979,-1.407377,-3.143219,-9.134225,-6.320028,-0.510602,5.510914,1.727791,-7.772454,-6.315045,0.298837,5.278910,0.529111,6.747309,3.977508,1.556774,4.248377,5.874285,2.234049,9.465917,-5.287483,-2.342423,-5.150350,-8.873763,1.006183,9.974909,4.949550,-6.825042,3.620549,-6.021736,2.033112,-8.522680,1.424923,-6.281254,0.158853,-2.813016,8.209004,-4.326780,-3.509367,1.665198,8.623208,-0.721953,4.018437,-5.678854,-0.299905,4.525288,-1.380844,-4.448224,3.670823,-6.134849,2.927249,-0.203889,-1.574287,-6.792237,9.468800,-8.573958,-2.951798,7.668690,6.579293,-7.675512,-3.916442,3.758256,4.495377,-8.642328,5.939648,-6.732239,6.597742,5.637499,2.200145,-4.763415,5.846509,3.336854,9.053106,6.016396,-8.635633,4.094821,2.423217,-3.671411,-4.653676,6.707821,2.756271,-6.788546,-9.923857,-9.342807,-3.289456,2.969411,5.179634,9.657329,0.671055,-3.425805,5.761205,6.077496,-0.960942,2.813302,-2.107923,-9.669527,-2.957779,3.490073,6.063112,-7.295256,-4.562412,6.512833,5.217857,5.974149,-0.974222,-9.810654,6.720519,-9.037214,0.436817,-7.251665,1.216795,-8.523890,-9.353305,-3.677136,5.328370,0.272334,-1.813650,-4.840907,7.619189,0.587247,7.659763,1.655805,1.409338,-7.228625,-4.345994,-9.700762,-6.175005,1.886710,-0.356185,-1.910484,3.261765,-6.709303,-8.203499,2.377479,-1.728674,5.502768,-9.389948,-6.716863,7.799179,1.486148,9.814633,4.909248,-4.562612,-6.617798,-1.112602,-8.324572,-7.617056,-5.830771,3.644291,3.682520,-0.064874,6.921088,0.669270,-8.988323,7.944978,-3.894692,7.702220,-3.247875,2.042534,1.496599,1.864219,2.453329,-1.337783,-0.421044,2.472844,4.241676,9.057491,-7.468726,-3.044126,6.274667,-6.255764,-5.666194,0.937140,6.960758,-4.316500,-9.321347,4.741238,3.824273,4.373770,7.669029,4.657478,-3.674472,-7.398341,-6.915655,4.751684,-4.254480,9.979601,-1.326811,8.169486,6.179181,-8.691065,3.114545,0.586014,6.992658,-4.584844,9.346263,2.407810,-0.262095,2.123816,-3.165570,-2.222141,-6.890469,0.656240,-4.324189,9.617287,-0.221686,-8.136274,4.224013,0.909440,-4.934670,2.573539,8.050286,-7.672796,-1.943124,-3.657138,-0.257641,5.197853,0.517975,1.375759,6.666600,6.204953,-8.491928,5.195320,-9.463058,-8.334944,9.951792,-3.040319,-4.043968,-8.468477,-3.596035,6.414482,-3.193519,-5.657516,-8.425666,4.162362,-8.500229,2.110988,-0.054441,-1.433762,6.096813,-4.671639,-1.794536,-4.928009,3.828688,-5.393287,8.167196,-5.097428,-0.351969,8.869001,5.699676,5.772440,-3.036690,-9.373615,9.836881,5.757694,-9.363066,1.681846,-6.032000,0.726298,1.415417,-7.374512,-3.517587,-6.222684,3.390994,6.343716,-2.870592,-5.092892,9.635574,-4.753839,0.329490,-9.386157,3.486822,-4.721947,6.761669,3.216376,4.094937,4.823245,-6.610353,2.477747,-9.147266,-0.666090,2.064652,8.884515,-3.200402,6.191901,5.387193,8.865698,-9.591578,-1.222242,9.602311,-3.845863,7.173169,-0.419212,3.145075,9.580448,-0.635958,-6.086952,-0.435381,3.460566,7.621862,-8.065808,-5.171446,4.298720,-3.658023,-6.946687,0.322067,-5.648166,-2.714251,7.281732,-1.559654,1.421115,-6.231637,-5.611734,1.014122,3.869442,8.316769,4.541020,0.663704,-1.454137,7.694566,-2.754075,6.417238,3.151342,6.979063,5.417826,-3.493001,5.112147,-7.970601,5.900334,0.030432,5.000985,7.643186,-0.901947,7.812062,-2.739193,4.371354,-5.651398,5.836279,-7.261043,-3.707581,4.763740,5.970101,5.323450,-6.649032,2.675565,-3.277610], dtype = "float64")#candidate|7764|(1024,)|const|float64
call_7763 = relay.TupleGetItem(func_2820_call(relay.reshape(const_7764.astype('float64'), [8, 16, 8])), 0)
call_7765 = relay.TupleGetItem(func_2823_call(relay.reshape(const_7764.astype('float64'), [8, 16, 8])), 0)
func_7576_call = mod.get_global_var('func_7576')
func_7578_call = mutated_mod.get_global_var('func_7578')
call_7778 = relay.TupleGetItem(func_7576_call(), 2)
call_7779 = relay.TupleGetItem(func_7578_call(), 2)
bop_7786 = relay.less_equal(call_7763.astype('bool'), relay.reshape(const_7764.astype('bool'), relay.shape_of(call_7763))) # shape=(8, 16, 8)
bop_7789 = relay.less_equal(call_7765.astype('bool'), relay.reshape(const_7764.astype('bool'), relay.shape_of(call_7765))) # shape=(8, 16, 8)
output = relay.Tuple([uop_7758,call_7778,bop_7786,])
output2 = relay.Tuple([uop_7758,call_7779,bop_7789,])
func_7810 = relay.Function([var_7757,], output)
mod['func_7810'] = func_7810
mod = relay.transform.InferType()(mod)
mutated_mod['func_7810'] = func_7810
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7811 = relay.var("var_7811", dtype = "float32", shape = (15, 6, 12))#candidate|7811|(15, 6, 12)|var|float32
func_7810_call = mutated_mod.get_global_var('func_7810')
call_7812 = func_7810_call(var_7811)
output = call_7812
func_7813 = relay.Function([var_7811], output)
mutated_mod['func_7813'] = func_7813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1872_call = mod.get_global_var('func_1872')
func_1874_call = mutated_mod.get_global_var('func_1874')
call_7815 = func_1872_call()
call_7816 = func_1872_call()
func_7716_call = mod.get_global_var('func_7716')
func_7717_call = mutated_mod.get_global_var('func_7717')
call_7823 = relay.TupleGetItem(func_7716_call(), 0)
call_7824 = relay.TupleGetItem(func_7717_call(), 0)
func_3547_call = mod.get_global_var('func_3547')
func_3550_call = mutated_mod.get_global_var('func_3550')
var_7843 = relay.var("var_7843", dtype = "float64", shape = (1, 324))#candidate|7843|(1, 324)|var|float64
call_7842 = relay.TupleGetItem(func_3547_call(relay.reshape(var_7843.astype('float64'), [12, 3, 9])), 0)
call_7844 = relay.TupleGetItem(func_3550_call(relay.reshape(var_7843.astype('float64'), [12, 3, 9])), 0)
func_752_call = mod.get_global_var('func_752')
func_755_call = mutated_mod.get_global_var('func_755')
const_7846 = relay.const([-1.924167,5.902002,2.057089,-7.082241,0.838378,-1.116058,9.729584,3.248932,0.128271,-9.168626,-7.358634,-6.430693,-9.555655,8.962308,-8.512541,1.086566,1.594915,0.748266,3.215759,-4.918699,-1.991048,-5.607080,-4.913110,-3.089178,9.417887,9.702412,6.789433,3.546970,-7.974233,4.177419,-4.900823,1.489867,7.444277,-0.373514,3.559884,1.724778,1.818632,4.671360,-6.457560,4.329420,-4.111226,1.102984,-5.325473,6.950374,8.610608,-1.734620,-0.257426,-2.026075,-3.170370,-4.931424,8.443465,-9.144411,8.569551,-5.195592,2.834268,-6.908753,-3.581274,2.098578,-4.225396,9.127438,6.604695,2.790503,-5.950668,4.680454,-3.708975,-3.986299,-7.783831,2.043253,-0.726027,7.964839,8.076060,6.144049,1.967057,1.062134,-0.078871,5.843255,-5.869946,7.848778,-9.848822,0.773765,-0.227279,-4.265023,-7.406225,-6.820545,-0.403243,-2.993987,9.363952,7.965543,-1.117215,6.659432,-0.315925,-6.581810,0.743668,6.089327,6.133481,6.248701,-6.875952,-6.562237,7.144556,1.417747,-5.074578,6.601734,9.770408,-2.657143,5.056094,-7.846844,-2.757728,-8.046360,-9.491833,-4.978542,4.188831,8.640684,3.046025,-3.261729,3.265349,-0.228004,-5.552643,9.416453,3.334979,5.082812,4.457010,-9.310363,2.198192,-0.142389,-5.155134,3.148878,-3.544786,2.231116,-5.909877,-5.535342,5.629605,2.726856,-8.406406,0.230124,-3.444492,2.397836,3.686817,5.494548,-2.040427,-9.368537,-5.318129,-7.913388,4.547169,5.528734,-2.776148,9.836994,-1.322476,3.400201,1.338786,-7.823157,7.964915,-3.664654,8.739672,7.013127,2.323612,-4.164103,0.615570,-3.575884,-6.121262,-5.952016,4.441133,-5.817478,-6.347920,-7.985847,5.588290,9.965887,-9.830122,5.488754,-9.762397,-5.287203,-7.502747,8.006155,3.633270,-6.183280,6.174752,-3.464285,-0.414881,9.727929,-0.592895,2.101892,-3.204959,7.513225,-9.588082,5.569125,9.161470,-8.921773,-6.279705,-2.702288,6.530829,-0.919421,5.207214,4.587043,0.943931,4.266685,-6.398012,0.068631,0.075625,-3.245908,0.136732,-4.310922,9.728427,5.452205,0.325139,4.148341,-0.031901,9.819268,4.885733,-7.245237,0.792877,-7.972521,-0.593612,6.604528,-7.775142,6.303669,9.876712,7.779673,-7.656891,-4.709100,-3.352478,-4.898035,2.133217,-3.537817,-6.445163,-1.824821,-2.276767,8.761076,-6.368829,9.340279,-6.223392,9.133825,-4.822010,-9.812362,1.296989,-4.019581,0.667320,-8.387114,0.819059,6.765499,1.143210,6.672597,-9.979270,-4.564196,1.995034,-8.205088,-3.427855,1.488361,-8.010889,3.091217,6.189248,2.034871,-3.494525,0.370589,-7.422336,0.119281,-2.576619,-1.995954,-5.042317,-4.855756,-8.185284,3.358346,-0.756076,7.404780,9.738661,-7.697420,6.712091,0.099633,0.305087,8.144913,8.444709,-8.289710,5.397046,-5.889508,3.061114,-5.822356,1.572664,0.864735,-1.756000,-5.738791,4.771181,-7.307692,-4.937340,6.259765,3.698856,-1.310147,8.649006,-4.396964,9.094928,-5.629279,5.675851,-5.302974,0.474748,-8.559541,-6.148029,8.622423,7.914592,-2.479177,8.404968,-4.838051,-4.848853,2.860954,2.838788,4.896281,-0.560409,8.668422,-5.456519,2.726454,9.848026,4.943535,-2.613008,-1.880484,2.396088,-8.757856,-9.081488,6.565470,2.206606], dtype = "float64")#candidate|7846|(315,)|const|float64
call_7845 = relay.TupleGetItem(func_752_call(relay.reshape(const_7846.astype('float64'), [35, 9])), 1)
call_7847 = relay.TupleGetItem(func_755_call(relay.reshape(const_7846.astype('float64'), [35, 9])), 1)
func_1903_call = mod.get_global_var('func_1903')
func_1904_call = mutated_mod.get_global_var('func_1904')
call_7848 = relay.TupleGetItem(func_1903_call(), 2)
call_7849 = relay.TupleGetItem(func_1904_call(), 2)
func_1354_call = mod.get_global_var('func_1354')
func_1355_call = mutated_mod.get_global_var('func_1355')
call_7853 = relay.TupleGetItem(func_1354_call(), 0)
call_7854 = relay.TupleGetItem(func_1355_call(), 0)
func_5401_call = mod.get_global_var('func_5401')
func_5404_call = mutated_mod.get_global_var('func_5404')
var_7860 = relay.var("var_7860", dtype = "uint64", shape = (1, 750))#candidate|7860|(1, 750)|var|uint64
call_7859 = relay.TupleGetItem(func_5401_call(relay.reshape(var_7860.astype('uint64'), [10, 15, 5])), 0)
call_7861 = relay.TupleGetItem(func_5404_call(relay.reshape(var_7860.astype('uint64'), [10, 15, 5])), 0)
output = relay.Tuple([call_7815,call_7823,call_7842,var_7843,call_7845,const_7846,call_7848,call_7853,call_7859,var_7860,])
output2 = relay.Tuple([call_7816,call_7824,call_7844,var_7843,call_7847,const_7846,call_7849,call_7854,call_7861,var_7860,])
func_7863 = relay.Function([var_7843,var_7860,], output)
mod['func_7863'] = func_7863
mod = relay.transform.InferType()(mod)
var_7864 = relay.var("var_7864", dtype = "float64", shape = (1, 324))#candidate|7864|(1, 324)|var|float64
var_7865 = relay.var("var_7865", dtype = "uint64", shape = (1, 750))#candidate|7865|(1, 750)|var|uint64
output = func_7863(var_7864,var_7865,)
func_7866 = relay.Function([var_7864,var_7865,], output)
mutated_mod['func_7866'] = func_7866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5114_call = mod.get_global_var('func_5114')
func_5115_call = mutated_mod.get_global_var('func_5115')
call_7870 = relay.TupleGetItem(func_5114_call(), 0)
call_7871 = relay.TupleGetItem(func_5115_call(), 0)
output = call_7870
output2 = call_7871
func_7875 = relay.Function([], output)
mod['func_7875'] = func_7875
mod = relay.transform.InferType()(mod)
output = func_7875()
func_7876 = relay.Function([], output)
mutated_mod['func_7876'] = func_7876
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7884 = relay.const([[[-5.751064,-0.491391,-0.884778,6.253832,5.555156,-2.303608,-1.085452,-8.675261,4.303966,5.891389,-7.050432,-4.666250,-1.660547],[1.237469,6.787655,9.145761,8.608934,-8.689001,-4.467831,1.882181,1.987873,0.454573,5.863035,2.853565,4.112201,3.978303],[3.628996,8.707742,-2.233782,4.210373,-8.618378,2.726190,-2.785114,8.126852,6.167175,5.946658,-9.683529,-4.150568,-3.743179],[8.984468,-0.087420,-5.108661,-7.682930,0.040559,-0.928675,-9.325990,-4.347295,8.653114,-8.280073,9.634699,6.860439,-6.279477],[0.142462,6.007294,-3.769349,6.065507,6.732421,-6.641790,-9.934344,-4.839050,-4.310785,6.304567,-1.439415,-8.071707,2.906654],[-8.614050,-4.938920,4.932950,0.313122,6.817438,5.259451,3.013123,-3.785868,-3.401271,6.410104,-4.856684,0.096573,-2.524896],[-8.832120,-5.880325,-7.547870,-9.165544,3.237321,0.543440,-6.862030,6.484568,3.484715,-1.445004,-7.296835,-6.734609,3.529371],[-0.860096,-3.087436,-2.756627,9.579672,1.965942,8.488479,-1.041968,6.757601,7.034752,-9.738618,5.431138,4.840061,-4.902600],[-5.647338,-4.859496,1.444555,-2.670768,6.204989,-5.376267,-4.090878,3.358379,4.029912,-5.730260,1.310337,-3.385962,-6.407581],[3.545434,1.868929,-0.236832,0.845332,6.038141,9.054620,-1.717706,-5.470210,4.697915,-2.947834,-3.347476,-4.751360,-1.237211],[-3.760620,0.434476,-7.050550,5.934517,-7.216225,7.533582,-1.329491,-8.699587,0.112119,-6.214385,5.922607,-0.447628,-1.581334],[1.348044,0.714763,-3.025178,-3.877920,1.839480,2.566879,-3.968775,-9.937005,1.736521,-2.008776,-6.209084,-4.866494,5.493721]],[[-8.788726,-6.315381,-7.695882,5.704220,8.840622,-3.444448,7.626825,1.409200,-8.789854,7.375182,8.326181,2.219828,-7.916207],[8.865115,-2.973650,6.172132,-9.093241,-1.917218,0.912629,2.528556,8.235454,4.619324,4.504094,2.331484,-8.950307,-1.453975],[5.545142,-7.357935,4.257173,5.266465,-7.963590,-9.422123,-0.047915,-5.317727,-4.419573,-9.011746,7.576510,-8.888963,-1.602616],[-9.887092,-5.137860,0.616916,-8.461518,-2.868926,5.296618,4.836472,-6.596837,8.207210,-3.074374,-8.997918,1.993208,3.359513],[-5.619624,6.061096,7.426675,-4.763986,-7.030249,-1.482357,3.143701,-4.960403,-1.963203,-7.055513,6.732638,9.425664,8.647547],[-5.533740,-4.917639,5.550582,7.491733,-6.696115,-8.715008,3.487523,-7.239422,2.448125,-3.867496,-1.381078,-6.880106,0.859043],[-0.806871,0.011087,-5.221552,-2.524239,0.124220,-4.698770,-0.303583,-9.818315,3.457127,9.160578,9.550731,9.368714,-0.797256],[-2.331360,-8.701752,-0.207179,-2.689802,4.820833,8.338961,2.114862,7.428114,-2.048578,-0.622811,7.539078,-6.721199,8.008736],[6.162343,2.630336,6.464662,-6.867719,8.564679,-0.589404,5.638117,-6.239704,-4.897871,8.709289,8.516831,8.354671,-7.068500],[0.916229,-4.143318,-9.386971,7.529589,4.236045,9.153182,0.263276,1.917294,-5.621896,7.889024,1.887831,2.663021,2.162760],[-8.699317,-5.368463,4.478997,0.296409,9.708508,-3.998817,6.338674,3.776706,1.578711,0.726548,-2.280947,4.488372,7.092462],[6.473526,-9.027635,2.417111,-5.358652,3.667693,-4.663238,6.595465,0.175948,-5.592791,8.259243,7.908988,-1.621909,7.449728]],[[0.162181,-7.337086,-9.494406,9.050598,3.303868,2.209158,-9.753582,7.913482,-1.497346,-7.964877,-3.039304,-9.981724,-5.625969],[1.521991,8.805276,-7.577092,4.504170,1.761015,-4.414334,-4.577414,4.627835,4.502003,1.571614,-3.898386,5.923531,1.085463],[-5.860450,-2.253077,5.268067,7.306131,-6.404945,9.184475,3.590229,1.263457,3.930007,4.531732,-3.370551,6.687725,5.333024],[0.135531,-2.633994,0.086231,-1.995338,-3.797580,0.240426,-6.850533,1.930387,6.892922,-2.535322,-4.700120,5.350602,4.383178],[5.644461,5.089469,-1.942276,4.066260,6.636485,0.080331,-5.165319,1.547339,-1.426016,-9.220734,-9.079622,-1.781351,-4.395334],[-8.894054,-3.897332,2.721316,-2.160300,-3.070584,4.929567,-6.230884,-9.546586,3.778562,3.692706,-9.677043,-9.724614,9.279546],[3.842847,-2.280680,-5.299973,4.269298,-0.927723,-5.099173,2.753710,9.026756,6.412790,7.641063,-6.809798,-4.339192,1.594129],[6.246235,7.739948,-6.937618,-2.120553,8.528603,-3.846253,1.468295,1.468057,7.338012,-1.944398,-8.153028,-9.648278,-9.318852],[-6.573431,-3.897511,9.385039,8.623061,-1.644536,5.785619,-7.767956,-0.841099,3.085672,2.693188,9.981903,9.927749,-7.726738],[1.501257,3.803799,0.818615,5.413790,-2.621525,9.764393,6.808463,6.243056,-9.326723,5.418317,-6.188668,-2.854876,-4.678746],[7.813235,1.968111,3.470528,-1.226618,-7.121965,-9.085743,-6.627180,0.983888,-2.213217,4.110551,7.713291,-4.952305,-2.317076],[-7.683059,-0.446950,7.205825,-3.275644,5.315809,2.888560,4.418677,2.748617,7.039590,-2.078281,2.095211,-3.203242,-3.143523]],[[-0.040477,-8.546585,-6.734259,8.711930,4.609634,-2.682376,-1.003954,0.265947,0.115163,5.732798,-7.950771,-8.094454,0.959808],[-8.651660,0.532252,-8.097123,3.020928,-8.531829,4.017878,-0.171725,-8.702253,-4.849543,7.998348,3.844927,-1.222394,9.461756],[2.039065,3.197534,-1.712366,-0.724203,5.116647,5.454772,-0.013017,-2.276739,-4.702477,-8.149486,4.509788,3.197776,5.266582],[6.981608,4.925213,-7.658183,3.991742,-1.282533,6.751834,4.952707,1.804085,3.075281,-8.808796,6.124793,4.154578,-6.726374],[-1.305763,8.380480,-1.877583,-6.066424,9.586697,-7.603635,-3.284808,-4.094634,-8.082131,-1.381630,7.648160,6.927222,2.801840],[-3.647425,-0.305140,3.259035,-3.175620,-2.832499,-9.770175,-8.452914,-2.408283,-0.722763,1.731070,-9.916520,-5.522843,9.239227],[2.454501,2.939004,8.991917,6.138873,-6.822473,3.986050,0.057720,5.614032,-5.171034,9.302881,9.739310,4.012709,7.613530],[-8.986642,7.250131,0.167494,-7.745411,0.837859,-3.413221,5.710186,-0.766111,9.020557,2.422380,9.805489,-0.669662,-5.029593],[-9.876163,1.844473,3.251471,6.556586,0.102904,5.079165,8.706447,-5.193951,1.594425,7.223568,-3.741550,7.722328,4.682644],[6.785400,-6.917600,7.069789,0.305851,-2.759931,-0.122987,2.598470,-8.174919,8.024367,-3.360681,4.968061,-9.539565,7.787509],[6.692552,-0.795326,9.778028,-9.662041,4.705226,-6.303385,-3.367262,9.398699,-8.736643,3.589946,-1.793713,-6.904645,-9.059417],[-7.234761,-2.824287,4.895333,6.740990,0.226011,7.335488,-5.001786,9.044415,2.655383,5.530354,1.130787,-7.070562,-6.777782]],[[4.515643,3.416559,-1.183355,-2.540620,9.767721,-1.437304,2.877922,9.451679,5.358017,5.680615,-7.256139,2.539552,-6.177129],[1.895517,2.709444,5.885700,-8.324942,-8.107955,-7.100822,-9.557584,-1.840927,-9.181638,-5.372167,-7.267681,1.488286,-6.258497],[-5.110453,8.761678,-8.623654,0.527655,-6.501104,9.637088,6.655197,3.661349,-3.513692,5.421606,-2.452769,9.624579,3.886523],[6.390126,5.206899,-9.394613,9.375169,-3.443277,-5.940929,7.724299,-9.840296,-5.122324,-0.842493,-9.066495,5.663286,9.453865],[5.296464,-2.666115,-0.068111,-5.314701,3.691645,8.427925,-0.631059,5.334899,-5.132607,-6.117312,0.305500,-9.949744,-2.920820],[-4.658275,0.280495,-9.179794,-1.567837,1.778665,-3.757592,9.547415,8.592284,-7.867215,-6.330115,-1.940719,-3.628630,-2.227085],[8.437134,1.176451,7.265916,7.462649,1.729938,6.540244,-7.240589,-7.031724,-5.533633,8.945181,-0.862769,-5.093763,9.014582],[7.685244,8.747359,9.977222,4.730103,-6.549142,-2.550149,5.137999,5.838558,-5.544896,9.530035,-7.260946,-7.829115,9.698886],[7.350618,8.241875,3.763780,-8.473621,-6.748337,7.500931,-3.821031,-1.999958,-1.726041,-7.406645,7.481933,2.941505,0.591014],[-6.683475,8.903578,1.083587,9.729486,5.193973,6.854745,5.508321,1.956473,2.286482,3.853195,2.520997,8.473699,7.801096],[-8.980089,-3.273742,4.595268,1.672854,-8.417352,0.234825,1.942359,-8.423475,0.651829,3.393750,4.087884,-1.568382,-2.513115],[-6.505173,-5.740802,-5.463480,-3.280162,-8.714879,-5.919048,7.097715,-0.456405,-6.420238,1.652484,9.895058,6.021145,-4.665887]],[[8.948259,1.719505,-0.653717,-3.885319,8.903311,8.038141,3.491791,8.847610,9.120080,-9.066021,-2.874247,4.212227,-1.991091],[-4.203583,5.570382,-9.911014,0.224433,4.270214,7.604614,-7.786193,-6.450873,-6.988082,-3.754323,8.378588,-0.257799,6.002529],[7.835125,0.245206,2.084108,0.741402,-8.840579,-3.455230,3.938185,5.915383,1.786974,3.723752,8.063885,2.511878,-9.489344],[5.405925,-0.542327,5.867891,5.330026,6.313403,-5.261656,-1.508276,-8.446527,-8.599391,-6.488850,-5.559547,-5.263106,7.581112],[-2.854927,0.705098,-2.911208,9.775649,8.533990,-9.122825,1.934647,-3.663455,-0.501466,-6.548228,6.839374,-8.888564,-9.647387],[7.408002,-7.213289,-7.723954,2.304393,6.826567,-8.968734,-3.934831,8.814684,1.210984,5.121404,-7.028094,-0.282602,-6.844294],[-0.655884,8.696801,-5.323854,2.556486,6.365121,0.765479,6.506228,-4.036930,9.538723,0.594936,4.040163,-8.153453,-1.636617],[-4.549630,9.676820,-0.222620,9.331818,4.591826,-8.849683,2.245660,-3.269995,-9.270372,6.860917,-0.363547,-2.889731,-4.229558],[-3.151690,-1.725620,9.075731,8.670440,1.191429,-6.663889,7.870141,-3.649581,-7.884342,2.231897,-2.141858,-3.021959,3.465288],[7.363398,9.959429,7.459034,-7.695852,-6.628525,4.972990,-8.993194,-8.468813,2.193226,-2.088488,9.708523,7.537840,-9.179388],[7.147879,-0.326566,6.172460,-9.252906,0.505572,-0.524190,1.722875,0.564027,-7.314859,4.213926,3.785179,-9.760025,2.324821],[-2.030526,-9.700184,-0.349644,-8.969228,-1.083176,-5.686236,-2.562116,6.774268,5.073910,2.182035,8.825797,7.819224,-7.388975]],[[7.337639,-1.086255,4.963926,-5.524232,1.491124,9.117830,4.199020,4.131460,-0.517931,9.905025,-0.469677,-4.949602,9.963019],[6.996213,-2.428006,3.838322,-9.207999,-1.199873,2.023558,-0.527273,-5.907445,-0.948494,3.330561,2.909486,7.320938,1.278109],[-7.207327,9.726934,9.637847,-9.304820,5.556520,-2.404303,1.250818,3.501076,5.995620,-8.506893,3.700776,5.395735,-4.582169],[-5.464711,7.189621,-0.444797,0.939847,6.307880,-4.038552,-5.619552,-1.237335,-6.122388,-3.865077,-3.804528,2.734036,9.879772],[8.855070,4.342303,5.290935,0.914013,-8.758877,-8.877419,9.123744,-8.686505,7.396538,0.254273,0.140350,-8.185310,3.297011],[0.310085,8.859816,1.018221,4.803385,-0.510306,-7.248252,7.345782,3.080368,-1.537295,-3.977571,2.355332,-8.256690,5.649251],[-7.087792,3.256387,-9.131141,-6.981210,4.390959,-8.911286,-6.673639,4.168587,-6.034184,3.885270,6.310621,-4.389827,4.766916],[6.250125,2.268963,9.691493,-3.692767,7.346067,-5.971881,-6.035355,-9.770731,-4.768342,-2.075806,8.454379,0.433150,-6.964278],[5.983959,-5.991128,-2.708690,-6.313692,-0.389490,3.765000,-1.623155,4.397816,-6.564897,-8.431234,-4.278366,-5.323202,-3.909980],[0.911226,-2.055095,-8.720361,-1.607708,-4.227818,3.749957,-7.532072,3.595758,-3.424193,1.349841,-0.181213,-4.558700,-4.465856],[6.733403,3.163977,-2.467997,4.403080,-1.824534,-5.086136,-6.879749,-9.251718,2.046896,0.783585,-0.415466,-1.649326,5.575619],[-1.022070,8.124916,-3.535249,1.773684,4.400596,-5.637220,-2.255785,-4.993119,-2.285962,-3.712797,-9.516275,0.741734,-4.029180]],[[-1.595365,9.658327,4.023839,1.869952,-9.575983,2.087640,2.930089,-9.990362,-6.166593,-0.674853,5.931661,1.621379,1.476478],[-6.814463,-9.408865,4.749459,7.700700,-2.053144,-4.915138,-3.585038,-9.324176,-4.109241,-6.603794,6.139705,7.424183,2.621107],[-4.002096,-3.861670,8.297042,0.992331,3.428912,-7.439628,9.313828,8.954824,-4.518444,5.410427,-0.858804,-8.906953,-2.115303],[3.799286,5.003898,-0.241511,4.963561,-2.932531,6.558379,-3.663677,-1.645413,-0.118071,-9.650917,2.297625,2.657186,9.400210],[-3.053265,-4.985295,3.943303,-6.477418,-6.240711,3.273634,-5.486437,-2.491428,7.174147,-9.739641,4.075911,6.323924,0.145137],[-4.984657,5.636538,-1.720538,4.092519,-2.271254,-6.452247,-2.522342,-5.073987,-0.589992,8.188653,-6.308445,-7.817962,-1.168666],[9.843811,5.309972,-4.421758,5.374357,8.097711,1.699390,-7.433863,8.199429,-1.461064,-4.721336,3.062153,3.486175,1.353527],[2.222754,4.978649,-2.588359,-8.044704,0.694309,2.204992,-9.195765,-6.965736,-6.726053,-8.868432,6.014423,6.083133,1.921759],[-1.711501,9.172468,-0.937408,4.314801,-7.812548,8.081694,0.126212,7.142222,1.147838,9.569689,1.823727,0.960916,-9.072065],[-9.378185,-8.694062,-0.544856,3.246203,-8.307852,4.227243,9.016930,8.126372,-8.607231,1.131560,-4.555279,5.699515,-2.578179],[7.386892,-4.592546,-1.889524,9.385071,-1.056142,0.342878,6.581366,-2.311998,-5.887275,-6.820168,-1.442225,-8.494049,-9.522572],[-4.454931,4.648994,-2.778243,-0.132451,-2.953828,8.294377,7.062614,9.246797,4.132071,7.350682,4.750811,3.651705,9.406244]],[[-2.380819,0.340456,-2.235861,1.590601,-4.709936,-8.846602,-2.784426,0.539081,-5.247636,-1.327514,-7.298262,-7.487273,9.723135],[1.295202,9.915632,-4.403093,-0.137052,-3.708941,2.059071,-8.445727,7.960787,8.746035,7.387669,-4.842751,3.519423,-1.167900],[-2.054038,0.653093,-2.224195,6.049822,-8.036667,-2.056369,3.950511,8.169401,-2.362111,9.042554,3.148177,7.297927,8.099439],[-7.755905,-5.355299,-6.024408,-0.184114,-1.449578,-1.426808,-9.149518,4.622999,-8.650997,-0.334122,-2.818025,4.337239,-4.101867],[-3.243541,-0.961579,5.157627,-7.819843,1.855790,5.808039,0.606960,-9.491437,0.748220,-9.936314,3.948204,8.059966,-1.482979],[-8.140845,8.870366,-4.429038,6.478074,-5.050344,-6.785058,-4.967383,1.165407,0.629975,-1.072495,1.278025,-8.315466,-7.898239],[-8.592787,0.335323,2.441448,-8.930348,1.122080,-2.528210,6.155736,4.887381,-1.652187,6.530522,8.286196,-4.481635,0.401027],[6.229886,9.341182,6.825877,-5.679886,-0.583147,9.817132,-1.754895,-9.553149,3.380993,6.757201,7.058789,-2.664734,-9.155031],[3.390464,2.594151,-8.314937,-7.939176,7.837898,5.135816,4.899589,1.892255,-3.208464,6.881782,1.688807,4.217989,6.597046],[-4.186503,3.478177,-7.219215,6.068975,4.083113,-8.548396,8.675026,-0.121311,8.021676,-2.725942,-6.496852,6.683386,0.655454],[-1.836666,2.357644,3.712406,4.481393,-9.640139,2.954031,-6.930239,2.978079,4.287439,-8.316177,4.393305,1.632979,-8.484572],[2.513390,9.811236,-3.838790,3.722184,8.682091,2.797095,9.389869,-7.537088,5.956414,-7.637991,-2.093584,1.142345,0.116526]],[[-1.772239,4.600105,-7.646073,-6.959377,1.296749,5.044135,5.183437,-4.489727,0.297321,-4.315489,-9.055313,-3.901532,2.128883],[-9.285783,7.091850,8.624964,-1.224717,0.247645,5.789980,-7.189195,-4.552436,1.054051,2.945081,5.880392,-2.475649,-2.815578],[4.487326,6.038184,8.367801,-2.980166,9.992272,0.379899,-6.845253,-9.980915,-5.220577,-4.407614,-6.351370,-0.561218,4.207982],[-5.935823,-5.018007,9.176676,-4.153876,-5.352371,-8.146351,-8.629439,-0.408955,-3.494123,-0.866970,5.153633,9.101540,-7.558502],[8.452958,5.072367,-5.570830,-3.456600,3.323065,-2.800436,-0.973899,4.149388,7.814867,-6.001851,6.548525,-7.927837,3.435746],[4.240225,-4.979498,-4.670018,-6.013879,-0.935539,-6.570371,4.782032,-0.601224,3.497937,-4.216012,-5.954238,-8.354883,-3.285371],[1.505387,-1.289245,-6.926293,1.482729,9.225410,-7.959967,-8.228620,-5.656462,-4.002051,-9.436798,8.170483,0.846060,-7.333724],[-6.665449,3.170790,8.427452,8.185449,4.307394,9.494670,-1.945281,7.398874,-9.354550,-7.522841,-0.100707,9.272936,1.154773],[-0.645151,-2.699285,-4.337175,3.237918,2.608153,-7.283546,-8.504680,-6.390584,0.474219,-9.355879,-9.666787,-4.800829,3.991841],[1.210873,7.758199,-7.531045,0.317908,-7.933743,9.230152,5.693586,-6.491282,0.058708,-1.669680,-6.024334,1.306677,-5.672347],[-0.195074,-2.791288,4.582323,-3.050065,-1.944132,-8.856728,7.056821,-5.971296,-9.065755,-1.094871,9.427546,-9.039286,5.809184],[2.489801,2.366057,-1.641969,-7.810100,-0.280290,-8.719200,-7.570579,1.204734,5.049768,-0.811319,9.631282,0.423886,3.397201]],[[2.023435,-2.434931,3.769222,9.487105,9.638173,-1.858558,-5.634121,5.642454,7.331009,-2.873170,-3.800444,7.089128,1.704478],[-7.416994,-9.564342,4.379607,3.826380,0.876080,-0.851267,6.401599,-3.778761,7.157695,-9.334620,-0.722461,1.119268,-8.639180],[-7.312151,-2.059616,-4.903049,-0.951598,-3.436431,6.514823,-4.627904,-5.224649,0.901605,-1.608429,0.514017,8.778866,1.577407],[9.463638,-7.034837,-6.918486,-5.631932,-8.184625,1.329326,0.897495,-2.382749,5.526652,3.917633,4.132673,-9.565053,2.740935],[-1.144809,7.213571,-8.844529,-9.495063,0.676916,2.290598,9.437409,-4.172233,-2.653822,-0.289246,-5.686052,8.029538,-2.826760],[4.402846,7.569757,-6.624945,2.778389,1.487227,6.282238,-5.461306,-5.847567,-2.299005,6.556810,5.055435,-9.108724,-1.570142],[5.691678,1.941765,7.793510,-9.130202,7.543444,-3.408999,2.010579,-3.228109,5.115226,0.853433,-1.504878,2.970989,-3.296803],[6.955910,-9.406269,-1.967350,-6.599209,8.162373,-2.460097,-7.493112,7.491397,-6.613575,-8.658427,8.569695,4.802570,8.191909],[-1.096492,6.206959,7.662661,4.377646,-9.634171,-3.146897,8.362063,-8.699022,5.856402,2.373388,9.830570,0.222273,-2.326133],[6.803758,7.098647,7.776302,5.105035,7.303088,-2.924793,4.610970,-9.031412,6.338347,2.728410,7.290613,-9.208188,8.017233],[-6.303389,8.642745,9.789210,-7.603840,2.188129,-9.225293,-8.963747,-5.701375,7.788692,3.061905,2.353016,5.987795,4.661922],[8.753741,-9.339130,6.836743,-4.381329,9.678855,-4.511570,-0.268783,-9.908840,-2.919254,-5.076509,4.768942,-9.457702,2.268788]],[[5.217109,3.065657,3.692959,-0.318032,7.058914,-1.187252,-3.386219,-4.790352,1.906649,-3.819206,0.779127,-6.213141,4.212373],[1.641766,1.693712,9.826337,-7.450451,0.231962,-6.771017,4.558170,0.003125,6.383985,5.769934,-6.333565,-1.626927,-8.805045],[-1.687664,-9.014311,-7.428166,2.646029,-0.780303,-3.459207,3.204417,8.049837,2.280811,-5.095286,-8.964645,-3.354899,5.272615],[0.293279,-5.946885,2.376426,-5.188835,-9.770459,-8.548338,-5.214822,5.713461,9.028687,-3.560060,-3.191631,0.168012,0.662265],[-4.755980,3.681293,-2.122474,7.675639,8.941495,0.696174,-9.979466,-3.708543,-1.910900,-6.938615,-6.039976,-5.012507,-0.730682],[-2.409898,4.728192,6.506800,-8.110182,2.715579,8.804540,4.861505,-2.978781,4.757733,-5.891926,3.600490,-6.335156,-8.835537],[0.408501,-9.812691,3.200960,5.966685,-5.676425,-3.848152,5.715501,2.162757,7.057178,2.717817,-7.370390,-9.967206,7.759533],[9.131852,4.697216,-3.756947,-7.098032,-6.037850,8.850234,2.396390,9.341087,-8.413218,3.535826,1.327694,-5.852714,-3.135960],[5.095491,-2.076918,-4.253993,0.905150,6.245999,-2.033859,-4.987906,-7.668938,-0.626324,1.855735,2.304024,7.153897,0.905039],[6.402985,4.125677,-8.733276,3.203461,3.426770,-0.272879,8.314756,-9.915559,-7.865846,9.813648,3.188433,-0.973135,0.474497],[-0.521453,-8.994061,3.320670,-2.335727,-8.109359,-1.801458,2.141766,8.887950,-2.104489,5.208767,5.803102,2.109133,-5.641338],[-3.933349,1.292570,2.296800,-2.639933,5.946082,3.118411,7.210753,5.767270,7.505820,1.978800,-6.465602,-5.775175,3.636184]],[[7.135836,-1.360530,5.626959,-5.462544,-5.496834,-0.695546,-5.240818,-5.926058,7.737643,6.302158,1.283210,7.389290,1.968423],[-1.793205,-4.810222,4.238670,-8.522609,9.400368,4.025586,-4.624840,1.240591,-0.469306,7.527781,-7.047049,-5.135121,5.300091],[-9.638608,0.905187,-7.379452,9.532731,7.372454,1.898447,-6.283390,0.941248,-7.781228,0.530775,-4.275872,8.133355,1.834509],[6.052125,7.010431,6.866602,5.234285,-2.188080,9.406557,-4.425884,-6.046221,-8.126814,4.538941,-8.673431,-7.050641,2.927561],[-2.416156,-6.330485,-8.883041,6.945432,-5.056885,-2.542148,6.336919,7.974076,-2.060656,2.396082,1.685136,-1.270746,4.116869],[7.682866,-7.472212,7.898314,9.030400,-5.983765,0.718723,-8.638260,6.786421,4.818143,3.314437,3.783614,2.568724,-4.820972],[-8.285356,0.587813,-7.773666,8.354098,0.542608,9.239648,-4.609496,2.111172,4.113647,0.464908,-6.117496,-2.187467,-7.757924],[9.147029,-9.500516,-3.398907,-2.123289,1.469335,-2.327081,-4.548939,3.614097,5.922236,2.263715,6.952812,-2.787730,1.887627],[5.911550,-6.398073,4.497688,6.601046,0.041575,1.813626,5.134552,-3.393973,1.840014,-9.586229,-4.227481,8.592195,-1.450762],[6.007243,6.089776,0.137255,-1.187583,-2.735448,4.722395,7.229702,-7.142503,6.961458,0.825115,8.778667,-2.105121,1.633067],[9.544122,-7.429590,7.495011,-9.560868,5.906407,-1.178965,7.362273,0.550110,-1.420290,-5.860641,5.295443,9.941778,9.234319],[-5.509227,-9.577304,9.672393,-1.076270,5.900604,9.281628,-3.759857,5.800743,-4.186381,-5.417206,2.729057,-0.331541,1.005890]],[[2.802795,8.556305,8.712195,-1.856743,3.353088,-0.992698,-7.970256,-6.494182,3.208375,-0.073176,6.992743,-6.854124,-0.344595],[-5.185327,4.879985,2.734151,-2.159899,1.206600,-3.310330,8.732020,5.223531,9.546091,0.690310,4.294207,-5.801036,6.008921],[-8.904839,6.767688,-5.693756,-3.770567,4.247367,-3.135688,-6.183061,-6.047190,-2.901059,-9.773987,1.333791,5.457023,5.021108],[4.051723,-8.318306,7.628000,-1.276000,2.481450,3.405252,-8.977275,0.957765,-6.614260,8.511158,-9.816291,9.045458,0.680688],[-9.843130,4.697464,-2.763742,-0.540434,-8.173829,5.417020,-2.645146,5.632114,-4.601117,6.040978,-5.812708,9.935492,-2.306529],[0.473373,6.611303,-3.301230,4.121967,8.953327,-6.681606,-7.755960,-3.743255,-9.041750,1.794979,-3.435326,3.453197,7.300830],[5.315121,2.424698,1.368628,6.948606,-9.814228,-3.181474,-1.371679,2.109358,8.464179,9.213620,2.960020,3.683316,2.818840],[3.605526,5.491715,-5.791417,5.877241,-8.398363,6.541675,0.571476,1.718647,5.894152,-4.637060,-7.519554,6.915640,2.960930],[7.716132,8.776371,-0.844750,-4.300679,5.239075,-3.255572,-4.479081,5.904179,5.857219,2.452365,4.292982,-2.055587,4.908447],[1.106923,-9.601024,-0.256092,8.044291,-9.623746,-9.403661,2.993156,2.325290,-6.137695,-4.417160,5.986618,3.806153,-6.242163],[-0.465820,-2.114045,-6.831111,-0.279185,-5.490745,-1.592094,-9.859112,7.564572,7.997550,-2.648606,-3.268131,0.229393,7.725924],[-4.449974,5.028555,0.572860,1.549603,-9.716926,1.167787,-9.425693,0.134091,-6.237779,8.347323,-4.512687,-9.333287,-0.502890]],[[7.278309,-4.457474,-6.875826,0.723559,4.833864,4.139786,-4.991195,-9.869471,-7.256778,6.867874,-4.679563,7.591547,9.997510],[-2.767124,2.884595,9.047360,-8.918801,0.426069,-3.933440,4.613589,7.305441,6.763427,-7.689883,8.614995,-6.783365,-2.237172],[-5.296742,1.073830,8.737839,-2.985263,-6.365514,3.921603,1.700884,0.547504,-9.580576,7.495009,-7.309159,2.622657,1.354734],[8.375654,-4.192084,-8.730089,-9.439721,-1.036022,8.274507,-0.059142,-1.660184,7.501684,-2.995761,-6.023961,6.700506,-9.882451],[-6.923531,-1.757387,-6.136761,8.235108,5.410804,-7.505884,3.505020,7.287561,6.347786,-9.517440,9.337765,4.560738,7.291132],[-8.630168,7.026621,-6.208310,3.480756,7.033205,-5.288890,-1.174248,-5.356854,9.375378,2.533453,9.433838,-5.913273,2.092830],[4.398375,5.452321,-5.219081,8.632066,-8.978709,8.256117,-1.970833,-5.407538,3.054129,-0.974368,1.786416,-0.585700,-8.602685],[3.836355,6.414608,-4.490991,3.539390,0.710000,-3.576082,5.508977,-3.977852,-3.883918,-2.990344,-1.545967,2.576575,7.464826],[-6.249943,5.024113,2.200356,-7.832551,7.488139,3.204065,-9.348699,-7.661327,1.817894,-2.165186,-1.028532,-3.457516,8.712592],[4.221442,2.524506,7.339964,-2.543768,-3.343305,3.466492,-1.571969,-6.270370,5.670976,5.799423,8.199904,5.498322,-6.040767],[-6.781831,-4.647844,2.672567,-2.915260,2.106210,5.475491,-1.202429,2.778232,-3.714169,6.856968,-6.648857,4.172728,-0.809283],[-9.846477,-6.504105,-0.952213,-3.937501,-3.092805,-6.879933,-2.955158,-3.807867,1.946717,-7.875589,-0.004900,-5.781892,5.445034]]], dtype = "float64")#candidate|7884|(15, 12, 13)|const|float64
uop_7885 = relay.tan(const_7884.astype('float64')) # shape=(15, 12, 13)
output = relay.Tuple([uop_7885,])
output2 = relay.Tuple([uop_7885,])
func_7899 = relay.Function([], output)
mod['func_7899'] = func_7899
mod = relay.transform.InferType()(mod)
mutated_mod['func_7899'] = func_7899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7899_call = mutated_mod.get_global_var('func_7899')
call_7900 = func_7899_call()
output = call_7900
func_7901 = relay.Function([], output)
mutated_mod['func_7901'] = func_7901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4727_call = mod.get_global_var('func_4727')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_7960 = relay.TupleGetItem(func_4727_call(), 0)
call_7961 = relay.TupleGetItem(func_4728_call(), 0)
output = relay.Tuple([call_7960,])
output2 = relay.Tuple([call_7961,])
func_7968 = relay.Function([], output)
mod['func_7968'] = func_7968
mod = relay.transform.InferType()(mod)
mutated_mod['func_7968'] = func_7968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7968_call = mutated_mod.get_global_var('func_7968')
call_7969 = func_7968_call()
output = call_7969
func_7970 = relay.Function([], output)
mutated_mod['func_7970'] = func_7970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_8009 = relay.TupleGetItem(func_4796_call(), 0)
call_8010 = relay.TupleGetItem(func_4798_call(), 0)
output = relay.Tuple([call_8009,])
output2 = relay.Tuple([call_8010,])
func_8016 = relay.Function([], output)
mod['func_8016'] = func_8016
mod = relay.transform.InferType()(mod)
output = func_8016()
func_8017 = relay.Function([], output)
mutated_mod['func_8017'] = func_8017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1989_call = mod.get_global_var('func_1989')
func_1990_call = mutated_mod.get_global_var('func_1990')
call_8020 = relay.TupleGetItem(func_1989_call(), 3)
call_8021 = relay.TupleGetItem(func_1990_call(), 3)
output = relay.Tuple([call_8020,])
output2 = relay.Tuple([call_8021,])
func_8023 = relay.Function([], output)
mod['func_8023'] = func_8023
mod = relay.transform.InferType()(mod)
output = func_8023()
func_8024 = relay.Function([], output)
mutated_mod['func_8024'] = func_8024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3909_call = mod.get_global_var('func_3909')
func_3911_call = mutated_mod.get_global_var('func_3911')
call_8028 = relay.TupleGetItem(func_3909_call(), 0)
call_8029 = relay.TupleGetItem(func_3911_call(), 0)
func_6724_call = mod.get_global_var('func_6724')
func_6725_call = mutated_mod.get_global_var('func_6725')
call_8035 = relay.TupleGetItem(func_6724_call(), 2)
call_8036 = relay.TupleGetItem(func_6725_call(), 2)
output = relay.Tuple([call_8028,call_8035,])
output2 = relay.Tuple([call_8029,call_8036,])
func_8069 = relay.Function([], output)
mod['func_8069'] = func_8069
mod = relay.transform.InferType()(mod)
output = func_8069()
func_8070 = relay.Function([], output)
mutated_mod['func_8070'] = func_8070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2547_call = mod.get_global_var('func_2547')
func_2548_call = mutated_mod.get_global_var('func_2548')
call_8094 = relay.TupleGetItem(func_2547_call(), 0)
call_8095 = relay.TupleGetItem(func_2548_call(), 0)
output = relay.Tuple([call_8094,])
output2 = relay.Tuple([call_8095,])
func_8107 = relay.Function([], output)
mod['func_8107'] = func_8107
mod = relay.transform.InferType()(mod)
mutated_mod['func_8107'] = func_8107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8107_call = mutated_mod.get_global_var('func_8107')
call_8108 = func_8107_call()
output = call_8108
func_8109 = relay.Function([], output)
mutated_mod['func_8109'] = func_8109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6762_call = mod.get_global_var('func_6762')
func_6764_call = mutated_mod.get_global_var('func_6764')
call_8127 = relay.TupleGetItem(func_6762_call(), 3)
call_8128 = relay.TupleGetItem(func_6764_call(), 3)
output = relay.Tuple([call_8127,])
output2 = relay.Tuple([call_8128,])
func_8129 = relay.Function([], output)
mod['func_8129'] = func_8129
mod = relay.transform.InferType()(mod)
mutated_mod['func_8129'] = func_8129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8129_call = mutated_mod.get_global_var('func_8129')
call_8130 = func_8129_call()
output = call_8130
func_8131 = relay.Function([], output)
mutated_mod['func_8131'] = func_8131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7339_call = mod.get_global_var('func_7339')
func_7340_call = mutated_mod.get_global_var('func_7340')
call_8142 = relay.TupleGetItem(func_7339_call(), 1)
call_8143 = relay.TupleGetItem(func_7340_call(), 1)
output = relay.Tuple([call_8142,])
output2 = relay.Tuple([call_8143,])
func_8155 = relay.Function([], output)
mod['func_8155'] = func_8155
mod = relay.transform.InferType()(mod)
output = func_8155()
func_8156 = relay.Function([], output)
mutated_mod['func_8156'] = func_8156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7278_call = mod.get_global_var('func_7278')
func_7280_call = mutated_mod.get_global_var('func_7280')
call_8181 = relay.TupleGetItem(func_7278_call(), 0)
call_8182 = relay.TupleGetItem(func_7280_call(), 0)
func_4998_call = mod.get_global_var('func_4998')
func_5001_call = mutated_mod.get_global_var('func_5001')
var_8185 = relay.var("var_8185", dtype = "uint16", shape = (624,))#candidate|8185|(624,)|var|uint16
call_8184 = relay.TupleGetItem(func_4998_call(relay.reshape(var_8185.astype('uint16'), [624,])), 1)
call_8186 = relay.TupleGetItem(func_5001_call(relay.reshape(var_8185.astype('uint16'), [624,])), 1)
output = relay.Tuple([call_8181,call_8184,var_8185,])
output2 = relay.Tuple([call_8182,call_8186,var_8185,])
func_8192 = relay.Function([var_8185,], output)
mod['func_8192'] = func_8192
mod = relay.transform.InferType()(mod)
mutated_mod['func_8192'] = func_8192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8193 = relay.var("var_8193", dtype = "uint16", shape = (624,))#candidate|8193|(624,)|var|uint16
func_8192_call = mutated_mod.get_global_var('func_8192')
call_8194 = func_8192_call(var_8193)
output = call_8194
func_8195 = relay.Function([var_8193], output)
mutated_mod['func_8195'] = func_8195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6097_call = mod.get_global_var('func_6097')
func_6098_call = mutated_mod.get_global_var('func_6098')
call_8251 = relay.TupleGetItem(func_6097_call(), 0)
call_8252 = relay.TupleGetItem(func_6098_call(), 0)
output = call_8251
output2 = call_8252
func_8261 = relay.Function([], output)
mod['func_8261'] = func_8261
mod = relay.transform.InferType()(mod)
output = func_8261()
func_8262 = relay.Function([], output)
mutated_mod['func_8262'] = func_8262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_842_call = mod.get_global_var('func_842')
func_844_call = mutated_mod.get_global_var('func_844')
call_8294 = func_842_call()
call_8295 = func_842_call()
output = call_8294
output2 = call_8295
func_8313 = relay.Function([], output)
mod['func_8313'] = func_8313
mod = relay.transform.InferType()(mod)
output = func_8313()
func_8314 = relay.Function([], output)
mutated_mod['func_8314'] = func_8314
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8330 = relay.const([[[-4.224970,3.134791,-6.650260,-5.114277,-0.311352,-8.995479,-8.293967,8.461792,2.590656,-1.570324,0.205911,2.885828,-5.854826,7.351931,7.641629,-5.403907],[5.769599,-1.676504,-9.302787,-0.598372,9.501478,-1.176074,-9.155674,-8.232329,7.182211,4.313302,-1.591788,-0.551798,0.406108,0.125135,-1.525915,-9.523369],[-5.650574,5.851466,4.450839,3.658720,-4.705975,4.450815,3.091001,-4.005987,-0.096291,8.728095,3.834550,6.713958,-4.019492,5.000697,-1.063328,-1.926500],[-0.731410,0.076036,8.786884,-2.531131,9.546806,-7.069793,-9.857211,8.203154,6.002739,5.983905,-9.496366,6.209401,0.365707,6.367092,5.452196,-3.902367],[0.400607,9.628544,-2.336113,6.921153,3.557345,-4.991180,-0.183019,-2.384686,9.148845,-2.916375,-4.706416,-2.278765,-6.349867,-2.132762,9.627174,0.369526],[-2.219159,0.264898,3.474423,-0.856699,-2.926857,-8.373496,-0.009127,-1.664016,-9.243531,1.087921,5.744199,-8.577894,7.617552,6.348764,-5.148156,-7.910489],[6.869074,4.607493,-9.186832,-8.640360,0.905387,1.168844,9.760463,9.130005,0.804358,6.239800,-4.690560,-6.685877,-4.514292,-6.414004,4.769930,7.107920]],[[-6.137631,3.666714,3.555466,9.875931,-8.460506,-8.186795,4.489701,2.689942,5.176923,1.378896,-8.778855,7.096923,9.342666,1.362315,-7.038603,3.290018],[-5.883055,3.954916,-8.131696,-3.036563,-0.296397,6.241129,-8.753167,-2.298783,9.703832,7.014415,4.348445,-2.623447,-2.030079,5.891390,-6.478082,8.737756],[0.344100,-2.647988,3.486779,-6.610435,-1.834220,4.298062,-4.008871,-9.259562,5.559816,-1.613117,-0.274068,3.666269,-8.427223,-7.304343,-1.853800,0.580176],[-4.478930,7.269342,-5.532832,5.576558,3.442581,8.753526,-6.614426,0.498261,5.807443,2.375510,-8.497021,-1.627828,0.323701,-6.826617,-2.594381,-7.075599],[2.546042,2.846977,1.557702,-6.818359,8.469279,3.591956,8.653994,-8.369459,-7.189650,4.169680,-4.547532,0.008800,-0.269687,1.399832,-2.184698,3.710767],[-0.874638,9.181404,-2.208098,-1.131465,-5.542368,8.336206,5.650409,-9.913574,7.642955,-9.619066,-6.174781,-4.193564,4.347783,7.021269,8.659515,-4.593778],[4.538705,0.192357,9.645915,-4.552133,9.109112,-4.239266,6.078139,-3.870412,-5.612069,-5.565731,8.301437,6.120424,1.536972,-5.382705,2.316376,-2.783632]],[[-1.837292,-4.714029,6.026244,2.807712,0.403119,6.585956,1.077806,9.490662,3.161569,-2.033361,-6.538207,6.209000,-3.569720,-3.646005,-9.921415,4.328259],[3.291291,8.982314,-6.371167,9.248889,-0.698062,-5.475541,7.201467,2.772318,3.574931,0.286212,4.666634,6.455426,-7.499048,9.836953,-7.727664,2.029072],[6.510868,7.736372,-2.601901,5.474346,4.079150,-2.682079,5.368142,6.858408,0.141901,9.467945,-1.489810,-1.300939,-5.738974,7.833456,-7.796486,-1.239302],[0.250305,8.533823,9.078815,-9.943369,-0.517778,6.914695,-6.661350,7.912570,7.595269,-3.426340,0.390346,-9.799489,9.619875,1.275947,-3.429965,9.240814],[4.724955,5.464882,3.193711,2.326059,-2.979394,1.476631,-3.922150,-2.637547,7.489193,8.545228,-7.656284,9.010676,8.845407,7.659324,-8.246374,-1.480240],[-2.149136,-4.257179,0.812711,3.412151,-4.980026,8.982914,2.475135,-1.952322,-6.026325,-2.035028,5.287600,-1.002337,-5.297835,0.266179,-0.244977,-5.755560],[6.105167,-3.062502,-0.816096,3.940320,1.292905,5.626161,-0.405571,3.266439,9.158215,4.135693,4.758883,-6.706475,-1.054378,1.544559,5.433739,3.750667]],[[-1.408865,1.242426,7.998317,-8.195080,5.142149,-9.769904,5.041593,3.582323,7.871013,-0.486638,-1.944104,-8.230517,-4.149244,-5.359554,9.059478,-8.984145],[4.980367,-4.139846,-7.214945,1.728779,3.130168,-5.932590,-7.118899,9.414710,-9.012639,-2.292609,-6.877304,1.245551,-6.711534,-0.652547,0.101886,-2.905319],[0.339362,-4.850421,6.660956,9.489062,6.412972,0.877787,9.717469,8.114342,-6.849961,8.080284,-0.842110,7.579924,-6.802822,-9.471898,0.266787,-1.886035],[8.873840,-4.276773,8.697623,0.655477,2.106697,-7.417657,-6.307180,6.367511,2.902213,3.121823,0.942260,2.038456,4.905370,-6.137722,-7.140477,0.644136],[7.011688,-4.431361,8.544417,3.182869,-5.089596,-5.425851,0.371101,-4.774576,-2.940891,-0.624845,-4.801447,7.163014,3.534670,-7.111608,-1.236601,8.543846],[-4.161659,-8.981788,-2.949543,-0.426552,3.444954,7.212645,-1.991582,-3.769475,4.219496,3.831642,-1.024740,1.025012,-3.486441,5.335739,8.314508,-9.174077],[-4.078095,-6.996491,-1.746573,9.932030,7.950295,-4.029118,-7.692146,-0.774515,3.972908,-4.830341,-7.186383,4.937537,5.492234,7.835132,4.409928,-2.729223]],[[7.735078,-5.113890,-6.703586,0.539631,-5.578607,2.654764,-1.517854,1.194339,3.655616,4.852191,2.704803,-2.238717,6.493065,-2.048943,9.701461,-7.284608],[8.127502,-0.299435,6.537098,5.053134,7.983734,-4.445285,-4.123966,9.708464,0.882392,9.091951,5.247311,-8.963817,0.589583,-9.728094,3.126612,0.700753],[2.384799,-5.737856,-2.761974,5.279870,1.089762,2.127451,6.122370,6.355761,-4.035671,6.433754,2.312363,-3.283011,-1.961817,9.033657,-1.357800,-4.453594],[0.324020,-9.362587,-2.790030,9.673792,9.638554,6.524040,-3.215778,-6.355473,6.880207,-0.910079,6.389134,-2.312461,9.752915,4.153647,-1.907271,-7.533067],[6.371567,4.606115,-1.860540,7.721637,-6.613838,-7.288267,7.958264,8.713064,-1.012630,8.663885,-5.083641,-2.429570,-4.660852,0.995900,1.917003,-1.742404],[-8.037782,7.415575,-9.473283,2.574362,0.015591,8.765580,-6.602210,-4.730526,9.453096,-9.471390,3.882292,4.426487,-0.840990,-3.762642,-3.888119,-4.455467],[9.508805,2.149908,-4.015680,-4.807995,-0.869169,3.203502,-8.698702,-9.510515,5.714823,6.327925,3.377346,-1.215389,-1.359495,5.376188,8.718027,2.155638]],[[7.813347,9.593930,2.533097,-8.875844,2.208063,-9.965202,7.905309,5.258297,8.187010,9.603828,-0.390088,0.003896,-3.933892,7.500518,-5.497029,-1.796194],[-0.695043,-9.378332,7.089884,5.243274,-6.185201,-3.914591,-4.891626,-1.448289,9.034154,-4.862502,-8.487786,-1.850549,9.794671,-2.636285,-5.215692,3.177645],[-0.622072,9.070391,-6.984325,2.608504,-5.809742,-2.440884,7.198355,7.231863,-7.139008,-6.563056,3.973189,-8.660334,6.139504,-2.955553,5.093379,-4.065237],[4.554089,-2.182457,-1.015536,-9.659994,1.115711,-3.727348,-5.389871,8.761766,8.770579,9.029499,-9.069106,9.017770,-3.517944,-4.153621,-7.613382,-1.974511],[-2.049901,8.241432,-4.377329,3.301085,6.903254,-8.330746,0.212598,-1.938623,-4.015335,1.437738,3.805945,-9.659310,1.445043,-1.288975,6.984005,9.083985],[6.286959,-5.284607,4.302126,6.720710,4.393165,-1.740224,-2.458826,-9.932933,-3.550438,4.275275,-5.250256,1.434354,-5.166111,1.858849,-0.466475,6.408804],[-3.524137,3.832525,-9.674528,-1.856129,0.938594,-4.461102,4.944511,-9.060947,9.629759,-1.317309,9.153536,3.898433,4.053707,2.262180,9.877743,5.452818]]], dtype = "float32")#candidate|8330|(6, 7, 16)|const|float32
uop_8331 = relay.sinh(const_8330.astype('float32')) # shape=(6, 7, 16)
bop_8333 = relay.bitwise_and(const_8330.astype('int64'), relay.reshape(uop_8331.astype('int64'), relay.shape_of(const_8330))) # shape=(6, 7, 16)
func_7576_call = mod.get_global_var('func_7576')
func_7578_call = mutated_mod.get_global_var('func_7578')
call_8344 = relay.TupleGetItem(func_7576_call(), 1)
call_8345 = relay.TupleGetItem(func_7578_call(), 1)
output = relay.Tuple([bop_8333,call_8344,])
output2 = relay.Tuple([bop_8333,call_8345,])
func_8361 = relay.Function([], output)
mod['func_8361'] = func_8361
mod = relay.transform.InferType()(mod)
output = func_8361()
func_8362 = relay.Function([], output)
mutated_mod['func_8362'] = func_8362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6264_call = mod.get_global_var('func_6264')
func_6265_call = mutated_mod.get_global_var('func_6265')
call_8368 = relay.TupleGetItem(func_6264_call(), 1)
call_8369 = relay.TupleGetItem(func_6265_call(), 1)
func_7278_call = mod.get_global_var('func_7278')
func_7280_call = mutated_mod.get_global_var('func_7280')
call_8378 = relay.TupleGetItem(func_7278_call(), 0)
call_8379 = relay.TupleGetItem(func_7280_call(), 0)
output = relay.Tuple([call_8368,call_8378,])
output2 = relay.Tuple([call_8369,call_8379,])
func_8393 = relay.Function([], output)
mod['func_8393'] = func_8393
mod = relay.transform.InferType()(mod)
output = func_8393()
func_8394 = relay.Function([], output)
mutated_mod['func_8394'] = func_8394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8155_call = mod.get_global_var('func_8155')
func_8156_call = mutated_mod.get_global_var('func_8156')
call_8515 = relay.TupleGetItem(func_8155_call(), 0)
call_8516 = relay.TupleGetItem(func_8156_call(), 0)
output = call_8515
output2 = call_8516
func_8558 = relay.Function([], output)
mod['func_8558'] = func_8558
mod = relay.transform.InferType()(mod)
output = func_8558()
func_8559 = relay.Function([], output)
mutated_mod['func_8559'] = func_8559
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8564 = relay.var("var_8564", dtype = "float32", shape = (9, 4, 9))#candidate|8564|(9, 4, 9)|var|float32
uop_8565 = relay.asinh(var_8564.astype('float32')) # shape=(9, 4, 9)
bop_8579 = relay.logical_xor(uop_8565.astype('int8'), relay.reshape(var_8564.astype('int8'), relay.shape_of(uop_8565))) # shape=(9, 4, 9)
func_7278_call = mod.get_global_var('func_7278')
func_7280_call = mutated_mod.get_global_var('func_7280')
call_8584 = relay.TupleGetItem(func_7278_call(), 0)
call_8585 = relay.TupleGetItem(func_7280_call(), 0)
output = relay.Tuple([bop_8579,call_8584,])
output2 = relay.Tuple([bop_8579,call_8585,])
func_8589 = relay.Function([var_8564,], output)
mod['func_8589'] = func_8589
mod = relay.transform.InferType()(mod)
var_8590 = relay.var("var_8590", dtype = "float32", shape = (9, 4, 9))#candidate|8590|(9, 4, 9)|var|float32
output = func_8589(var_8590)
func_8591 = relay.Function([var_8590], output)
mutated_mod['func_8591'] = func_8591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2934_call = mod.get_global_var('func_2934')
func_2936_call = mutated_mod.get_global_var('func_2936')
call_8595 = relay.TupleGetItem(func_2934_call(), 0)
call_8596 = relay.TupleGetItem(func_2936_call(), 0)
output = call_8595
output2 = call_8596
func_8626 = relay.Function([], output)
mod['func_8626'] = func_8626
mod = relay.transform.InferType()(mod)
output = func_8626()
func_8627 = relay.Function([], output)
mutated_mod['func_8627'] = func_8627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mod.get_global_var('func_7723')
func_7724_call = mutated_mod.get_global_var('func_7724')
call_8651 = func_7723_call()
call_8652 = func_7723_call()
output = relay.Tuple([call_8651,])
output2 = relay.Tuple([call_8652,])
func_8663 = relay.Function([], output)
mod['func_8663'] = func_8663
mod = relay.transform.InferType()(mod)
mutated_mod['func_8663'] = func_8663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8663_call = mutated_mod.get_global_var('func_8663')
call_8664 = func_8663_call()
output = call_8664
func_8665 = relay.Function([], output)
mutated_mod['func_8665'] = func_8665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8693 = relay.var("var_8693", dtype = "int16", shape = (5, 3, 1))#candidate|8693|(5, 3, 1)|var|int16
var_8694 = relay.var("var_8694", dtype = "int16", shape = (5, 3, 1))#candidate|8694|(5, 3, 1)|var|int16
bop_8695 = relay.equal(var_8693.astype('bool'), relay.reshape(var_8694.astype('bool'), relay.shape_of(var_8693))) # shape=(5, 3, 1)
func_3586_call = mod.get_global_var('func_3586')
func_3588_call = mutated_mod.get_global_var('func_3588')
call_8698 = relay.TupleGetItem(func_3586_call(), 0)
call_8699 = relay.TupleGetItem(func_3588_call(), 0)
func_8313_call = mod.get_global_var('func_8313')
func_8314_call = mutated_mod.get_global_var('func_8314')
call_8713 = func_8313_call()
call_8714 = func_8313_call()
func_3659_call = mod.get_global_var('func_3659')
func_3661_call = mutated_mod.get_global_var('func_3661')
call_8715 = relay.TupleGetItem(func_3659_call(), 0)
call_8716 = relay.TupleGetItem(func_3661_call(), 0)
bop_8718 = relay.mod(var_8693.astype('float32'), relay.reshape(bop_8695.astype('float32'), relay.shape_of(var_8693))) # shape=(5, 3, 1)
func_8023_call = mod.get_global_var('func_8023')
func_8024_call = mutated_mod.get_global_var('func_8024')
call_8725 = relay.TupleGetItem(func_8023_call(), 0)
call_8726 = relay.TupleGetItem(func_8024_call(), 0)
bop_8738 = relay.bitwise_xor(bop_8695.astype('int16'), relay.reshape(var_8694.astype('int16'), relay.shape_of(bop_8695))) # shape=(5, 3, 1)
output = relay.Tuple([call_8698,call_8713,call_8715,bop_8718,call_8725,bop_8738,])
output2 = relay.Tuple([call_8699,call_8714,call_8716,bop_8718,call_8726,bop_8738,])
F = relay.Function([var_8693,var_8694,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8693,var_8694,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

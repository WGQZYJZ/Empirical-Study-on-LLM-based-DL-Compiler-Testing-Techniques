==========mod==========
#[version = "0.0.5"]
def @func_8617(%var_8597: Tensor[(1760), float32]) -> (Tensor[(22, 5), float64], Tensor[(15, 13, 6), bool], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(588), int32], Tensor[(104, 8), float64]) {
  %0 = @func_5144() /* ty=(Tensor[(22, 5), float64],) */;
  %1 = cast(%var_8597, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %2 = reshape(%1, newshape=[10, 16, 11]) /* ty=Tensor[(10, 16, 11), float32] */;
  %3 = @func_1917(%2) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(2, 416), float64], Tensor[(80, 1), float32], Tensor[(832), float64], Tensor[(10, 16, 11), float64], Tensor[(15, 13, 6), bool], Tensor[(1170), int8]) */;
  %4 = @func_6101() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) */;
  %5 = cast(%var_8597, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(104, 8), float64] */, dtype="float64") /* ty=Tensor[(104, 8), float64] */;
  %7 = %0.0;
  %8 = cast(%7, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %9 = reshape(%5, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), float32] */;
  %10 = reshape(%6, newshape=[832, 1]) /* ty=Tensor[(832, 1), float64] */;
  %11 = reshape(%8, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %12 = @func_3701(%9, %10, %11) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32], Tensor[(832), float64], Tensor[(1760, 1), float32], Tensor[(832, 1), float64], Tensor[(110), float64], Tensor[(648), float32]) */;
  %13 = %3.5;
  %14 = @func_4773() /* ty=Tensor[(14, 7, 12), float64] */;
  %15 = %4.3;
  %16 = %12.3;
  (%7, %13, %var_8597, %14, %15, %16, meta[relay.Constant][0] /* ty=Tensor[(104, 8), float64] */)
}

def @func_8347() -> Tensor[(14, 7, 12), float64] {
  %17 = @func_5178() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %17.0
}

def @func_9818() -> Tensor[(14, 7, 12), float64] {
  @func_2184() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_2184() -> Tensor[(14, 7, 12), float64] {
  %18 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %19 = cast(%18, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  erf(%19) /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_2335() -> Tensor[(14, 7, 12), float64] {
  @func_2184() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_3903() -> (Tensor[(14, 7, 12), float64],) {
  %20 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %21 = %20.0;
  (%21,)
}

def @func_7215() -> (Tensor[(605), float32],) {
  %22 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %23 = %22.0;
  (%23,)
}

def @func_9048() -> Tensor[(14, 7, 12), float64] {
  %24 = @func_8035() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %24.1
}

def @func_2754() -> (Tensor[(14, 7, 12), float32],) {
  %25 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %26 = %25.0;
  (%26,)
}

def @func_2802(%var_2775: float64, %var_2776: Tensor[(110), float64]) -> (Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) {
  %27 = cast(%var_2775, dtype="float64") /* ty=float64 */;
  %28 = cast(%var_2776, dtype="float64") /* ty=Tensor[(110), float64] */;
  %29 = reshape(%27, newshape=[]) /* ty=float64 */;
  %30 = reshape(%28, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
  %31 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %32 = %31.0;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(54, 12), float32] */, dtype="float32") /* ty=Tensor[(54, 12), float32] */;
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(54, 12), float32] */, dtype="float32") /* ty=Tensor[(54, 12), float32] */;
  %36 = reshape(%34, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %37 = reshape(%35, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %38 = @func_1775(%36, %37) /* ty=(Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) */;
  %39 = @func_2258(%29, %30) /* ty=Tensor[(5, 2, 11), float64] */;
  %40 = rsqrt(%33) /* ty=Tensor[(14, 7, 12), float32] */;
  %41 = @func_2335() /* ty=Tensor[(14, 7, 12), float64] */;
  %42 = %38.1;
  (%39, %var_2775, %var_2776, %40, %41, %42, meta[relay.Constant][1] /* ty=Tensor[(54, 12), float32] */)
}

def @func_3141() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) {
  %43 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %44 = %43.1;
  %45 = @func_2335() /* ty=Tensor[(14, 7, 12), float64] */;
  (%44, %45)
}

def @func_2397(%var_2394: Tensor[(14, 11, 6), float64]) -> Tensor[(14, 11, 6), float64] {
  %46 = cast(%var_2394, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  cos(%46) /* ty=Tensor[(14, 11, 6), float64] */
}

def @func_5446() -> Tensor[(14, 7, 12), float32] {
  @func_3798() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_5341() -> Tensor[(14, 7, 12), float64] {
  %47 = @func_3903() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %47.0
}

def @func_7581() -> Tensor[(14, 7, 12), float32] {
  %48 = @func_2872() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), uint16]) */;
  %48.0
}

def @func_8163(%var_8145: int32, %var_8146: Tensor[(288), int32]) -> (Tensor[(14, 7, 12), float64], Tensor[(9, 4, 8), int32], int32, Tensor[(288), int32]) {
  %49 = @func_6836() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %50 = cast(%var_8145, dtype="int32") /* ty=int32 */;
  %51 = cast(%var_8146, dtype="int32") /* ty=Tensor[(288), int32] */;
  %52 = reshape(%50, newshape=[]) /* ty=int32 */;
  %53 = reshape(%51, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), int32] */;
  %54 = @func_5395(%52, %53) /* ty=(Tensor[(9, 4, 8), int32],) */;
  %55 = %49.0;
  %56 = %54.0;
  (%55, %56, %var_8145, %var_8146)
}

def @func_9087() -> Tensor[(5, 8, 10), float64] {
  %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 10), float64] */;
  exp(%57) /* ty=Tensor[(5, 8, 10), float64] */
}

def @func_7558(%var_7556: Tensor[(1, 110), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], Tensor[(208, 4), float64], Tensor[(1, 110), float64]) {
  %58 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %59 = cast(meta[relay.Constant][3] /* ty=Tensor[(1760), float32] */, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %60 = cast(meta[relay.Constant][4] /* ty=Tensor[(208, 4), float64] */, dtype="float64") /* ty=Tensor[(208, 4), float64] */;
  %61 = cast(%var_7556, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
  %62 = reshape(%59, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
  %63 = reshape(%60, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
  %64 = reshape(%61, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %65 = @func_4405(%62, %63, %64) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], float64, Tensor[(110), float64], Tensor[(648), float32], Tensor[(2, 416), uint64]) */;
  %66 = @func_6168() /* ty=Tensor[(14, 7, 12), float64] */;
  %67 = %58.0;
  %68 = %65.1;
  (%66, %67, %68, meta[relay.Constant][3] /* ty=Tensor[(1760), float32] */, meta[relay.Constant][4] /* ty=Tensor[(208, 4), float64] */, %var_7556)
}

def @func_3590(%var_3563: float64, %var_3564: Tensor[(14, 16, 1), float64]) -> (Tensor[(14, 16, 1), float64], Tensor[(15, 13, 6), bool], Tensor[(110), float64]) {
  %69 = cast(%var_3563, dtype="float64") /* ty=float64 */;
  %70 = cast(%var_3564, dtype="float64") /* ty=Tensor[(14, 16, 1), float64] */;
  %71 = cast(%var_3563, dtype="float64") /* ty=float64 */;
  %72 = cast(meta[relay.Constant][5] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %73 = reshape(%71, newshape=[]) /* ty=float64 */;
  %74 = reshape(%72, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %75 = @func_2802(%73, %74) /* ty=(Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) */;
  %76 = floor_mod(%69, %70) /* ty=Tensor[(14, 16, 1), float64] */;
  %77 = %75.5;
  (%76, %77, meta[relay.Constant][5] /* ty=Tensor[(110), float64] */)
}

def @func_5784() -> Tensor[(14, 7, 12), float64] {
  @func_2184() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_7762() -> (Tensor[(832), float64],) {
  %78 = @func_7660() /* ty=Tensor[(832), float64] */;
  (%78,)
}

def @func_4564() -> Tensor[(14, 7, 12), uint8] {
  %79 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %80 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
  %81 = cast(%80, dtype="uint8") /* ty=Tensor[(14, 7, 12), uint8] */;
  %82 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%79, dtype="uint8") /* ty=Tensor[(14, 7, 12), uint8] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%83, %84) /* ty=Tensor[(14, 7, 12), uint8] */
}

def @func_2836() -> (Tensor[(14, 7, 12), float32],) {
  %85 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %86 = %85.0;
  (%86,)
}

def @func_8806() -> Tensor[(14, 7, 12), float64] {
  @func_2101() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_9484(%var_9463: Tensor[(1, 105), float32], %var_9468: Tensor[(110), float64], %var_9479: Tensor[(16, 105), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(3, 7, 5), float32], Tensor[(22, 5), uint64], Tensor[(110), float64], Tensor[(16, 105), bool]) {
  %87 = @func_6185() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %88 = cast(%var_9463, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
  %89 = reshape(%88, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
  %90 = @func_9103(%89) /* ty=(Tensor[(3, 7, 5), float32],) */;
  %91 = cast(%var_9468, dtype="float64") /* ty=Tensor[(110), float64] */;
  %92 = reshape(%91, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
  %93 = @func_8667(%92) /* ty=(Tensor[(22, 5), uint64],) */;
  %94 = cast(%var_9463, dtype="float64") /* ty=Tensor[(1, 105), float64] */;
  %95 = rsqrt(%94) /* ty=Tensor[(1, 105), float64] */;
  %96 = cast(%95, dtype="bool") /* ty=Tensor[(1, 105), bool] */;
  %97 = cast(%var_9479, dtype="bool") /* ty=Tensor[(16, 105), bool] */;
  %98 = %87.0;
  %99 = %90.0;
  %100 = %93.0;
  %101 = equal(%96, %97) /* ty=Tensor[(16, 105), bool] */;
  (%98, %99, %100, %var_9468, %101)
}

def @func_1798(%var_1784: Tensor[(5, 11, 11), float64]) -> Tensor[(5, 11, 11), float64] {
  %102 = cast(%var_1784, dtype="float64") /* ty=Tensor[(5, 11, 11), float64] */;
  asin(%102) /* ty=Tensor[(5, 11, 11), float64] */
}

def @func_2372() -> (Tensor[(14, 7, 12), float32],) {
  %103 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %105 = acos(%104) /* ty=Tensor[(14, 7, 12), float32] */;
  (%105,)
}

def @func_2729() -> Tensor[(14, 7, 12), float32] {
  %106 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %106.0
}

def @func_4028() -> Tensor[(14, 7, 12), float32] {
  %107 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %107.1
}

def @func_6372(%var_6328: float32, %var_6329: Tensor[(13, 3, 10), float32]) -> (Tensor[(13, 3, 10), bool], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) {
  %108 = cast(%var_6328, dtype="float32") /* ty=float32 */;
  %109 = cast(%var_6329, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
  %110 = power(%108, %109) /* ty=Tensor[(13, 3, 10), float32] */;
  %111 = cast(%110, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %112 = cast(%var_6328, dtype="bool") /* ty=bool */;
  %113 = @func_5068() /* ty=(Tensor[(605), float32], Tensor[(14, 7, 12), float64], Tensor[(1760), float32], Tensor[(1, 832), float64], Tensor[(110), float64], Tensor[(14, 7, 12), float32]) */;
  %114 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %115 = greater(%111, %112) /* ty=Tensor[(13, 3, 10), bool] */;
  %116 = %113.0;
  %117 = %114.1;
  (%115, %116, %117)
}

def @func_3930(%var_3909: Tensor[(14, 7, 12), float64]) -> (Tensor[(14, 7, 12), float32],) {
  %118 = @func_3532() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %119 = %118.0;
  %120 = cast(%var_3909, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%119, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %124 = power(%122, %123) /* ty=Tensor[(14, 7, 12), float32] */;
  (%124,)
}

def @func_6185() -> (Tensor[(14, 7, 12), float64],) {
  %125 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %126 = %125.0;
  (%126,)
}

def @func_5233() -> Tensor[(14, 7, 12), float32] {
  @func_4650() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_3847(%var_3824: Tensor[(14, 7, 12), float32]) -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(924), float64], Tensor[(605), float64]) {
  %127 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %128 = @func_3798() /* ty=Tensor[(14, 7, 12), float32] */;
  %129 = cast(%var_3824, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%128, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %133 = cast(meta[relay.Constant][6] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %134 = cast(meta[relay.Constant][6] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %135 = cast(meta[relay.Constant][6] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %136 = reshape(%133, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %137 = reshape(%134, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %138 = reshape(%135, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %139 = @func_3037(%136, %137, %138) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) */;
  %140 = %127.0;
  %141 = minimum(%131, %132) /* ty=Tensor[(14, 7, 12), float64] */;
  %142 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
  %143 = %139.4;
  (%140, %141, %142, %143, meta[relay.Constant][6] /* ty=Tensor[(605), float64] */)
}

def @func_9676(%var_9669: int32) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), int64], int32) {
  %144 = @func_6185() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %145 = @func_7119() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) */;
  %146 = cast(%var_9669, dtype="int32") /* ty=int32 */;
  %147 = reshape(%146, newshape=[]) /* ty=int32 */;
  %148 = @func_7465(%147) /* ty=(Tensor[(14, 7, 12), int64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32]) */;
  %149 = %144.0;
  %150 = %145.0;
  %151 = %148.0;
  (%149, %150, %151, %var_9669)
}

def @func_3975() -> (Tensor[(605), float32],) {
  %152 = @func_3791() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) */;
  %153 = %152.4;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(605), float32] */;
  %155 = sin(%154) /* ty=Tensor[(605), float32] */;
  (%155,)
}

def @func_4765() -> Tensor[(14, 7, 12), float64] {
  @func_2335() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_5864() -> Tensor[(14, 7, 12), bool] {
  %156 = @func_4773() /* ty=Tensor[(14, 7, 12), float64] */;
  %157 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 7, 12), float64] */, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %158 = shape_of(%156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%156, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%159, %160) /* ty=Tensor[(14, 7, 12), bool] */
}

def @func_6909(%var_6902: float64, %var_6903: Tensor[(1, 1, 10), float64]) -> Tensor[(1, 1, 10), float64] {
  %161 = cast(%var_6902, dtype="float64") /* ty=float64 */;
  %162 = cast(%var_6903, dtype="float64") /* ty=Tensor[(1, 1, 10), float64] */;
  divide(%161, %162) /* ty=Tensor[(1, 1, 10), float64] */
}

def @func_9698() -> Tensor[(14, 7, 12), float64] {
  @func_6168() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_3475() -> Tensor[(14, 7, 12), float32] {
  %163 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %163.0
}

def @func_7119() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) {
  %164 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %165 = %164.1;
  %166 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
  %167 = @func_3475() /* ty=Tensor[(14, 7, 12), float32] */;
  (%165, %166, %167)
}

def @func_4925() -> (Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64]) {
  %168 = cast(6.75956f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %169 = cast(meta[relay.Constant][8] /* ty=Tensor[(22, 5), float64] */, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %170 = reshape(%168, newshape=[]) /* ty=float64 */;
  %171 = reshape(%169, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %172 = @func_2802(%170, %171) /* ty=(Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) */;
  %173 = cast(meta[relay.Constant][8] /* ty=Tensor[(22, 5), float64] */, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %174 = @func_4890() /* ty=Tensor[(14, 7, 12), float64] */;
  %175 = %172.0;
  %176 = sqrt(%173) /* ty=Tensor[(22, 5), float64] */;
  (%174, %175, 6.75956f64 /* ty=float64 */, %176)
}

def @func_3037(%var_2977: Tensor[(605), float64], %var_2987: Tensor[(605), float64], %var_3032: Tensor[(605), float64]) -> (Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) {
  %177 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %178 = cast(%var_2977, dtype="float64") /* ty=Tensor[(605), float64] */;
  %179 = reshape(%178, newshape=[5, 11, 11]) /* ty=Tensor[(5, 11, 11), float64] */;
  %180 = cast(%var_2977, dtype="float64") /* ty=Tensor[(605), float64] */;
  %181 = cos(%180) /* ty=Tensor[(605), float64] */;
  %182 = cast(%var_2987, dtype="bool") /* ty=Tensor[(605), bool] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(1), int32] */;
  %184 = cast(%181, dtype="bool") /* ty=Tensor[(605), bool] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?), bool] */;
  %186 = cast(meta[relay.Constant][9] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %187 = reshape(%186, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %188 = cast(meta[relay.Constant][10] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %189 = cast(meta[relay.Constant][10] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %190 = reshape(%188, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %191 = reshape(%189, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %192 = @func_1775(%190, %191) /* ty=(Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) */;
  %193 = cast(%var_2987, dtype="float32") /* ty=Tensor[(605), float32] */;
  %194 = shape_of(%181, dtype="int32") /* ty=Tensor[(1), int32] */;
  %195 = cast(%181, dtype="float32") /* ty=Tensor[(605), float32] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?), float32] */;
  %197 = cast(%var_3032, dtype="float32") /* ty=Tensor[(605), float32] */;
  %198 = shape_of(%181, dtype="int32") /* ty=Tensor[(1), int32] */;
  %199 = cast(%181, dtype="float32") /* ty=Tensor[(605), float32] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?), float32] */;
  %201 = %177.0;
  %202 = @func_1798(%179) /* ty=Tensor[(5, 11, 11), float64] */;
  %203 = equal(%184, %185) /* ty=Tensor[(605), bool] */;
  %204 = @func_2397(%187) /* ty=Tensor[(14, 11, 6), float64] */;
  %205 = %192.2;
  %206 = floor_divide(%195, %196) /* ty=Tensor[(605), float32] */;
  %207 = floor_mod(%199, %200) /* ty=Tensor[(605), float32] */;
  (%201, %202, %203, %204, meta[relay.Constant][9] /* ty=Tensor[(924), float64] */, %205, meta[relay.Constant][10] /* ty=Tensor[(648), float32] */, %206, %207)
}

def @func_5954() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) {
  %208 = cast(meta[relay.Constant][11] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %209 = reshape(%208, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %210 = @func_31(%209) /* ty=(Tensor[(13, 8, 8), float64],) */;
  %211 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %212 = @func_5233() /* ty=Tensor[(14, 7, 12), float32] */;
  %213 = %210.0;
  (%211, %212, %213, meta[relay.Constant][11] /* ty=Tensor[(832), float64] */)
}

def @func_8459(%var_8426: Tensor[(14, 7, 12), float64]) -> Tensor[(14, 7, 12), int16] {
  %214 = @func_3401() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %215 = %214.0;
  %216 = cast(%var_8426, dtype="int16") /* ty=Tensor[(14, 7, 12), int16] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="int16") /* ty=Tensor[(14, 7, 12), int16] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%218, %219) /* ty=Tensor[(14, 7, 12), int16] */
}

def @func_3369(%var_3343: int32, %var_3344: Tensor[(14, 14, 3), int32]) -> Tensor[(14, 14, 3), int32] {
  %220 = cast(%var_3343, dtype="int32") /* ty=int32 */;
  %221 = cast(%var_3344, dtype="int32") /* ty=Tensor[(14, 14, 3), int32] */;
  multiply(%220, %221) /* ty=Tensor[(14, 14, 3), int32] */
}

def @func_8644() -> Tensor[(605), float32] {
  @func_4738() /* ty=Tensor[(605), float32] */
}

def @func_4948(%var_4941: Tensor[(832), float64]) -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(40, 2), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) {
  %222 = @func_4122() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %223 = cast(meta[relay.Constant][12] /* ty=Tensor[(40, 2), float32] */, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %224 = cast(%var_4941, dtype="float64") /* ty=Tensor[(832), float64] */;
  %225 = reshape(%223, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %226 = reshape(%224, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %227 = @func_3298(%225, %226) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(80), float32], Tensor[(832), float64]) */;
  %228 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %229 = %222.0;
  %230 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
  %231 = %227.0;
  %232 = %228.0;
  (%229, %230, %231, meta[relay.Constant][12] /* ty=Tensor[(40, 2), float32] */, %var_4941, %232)
}

def @func_5355() -> (Tensor[(14, 7, 12), float64],) {
  %233 = @func_4294() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %234 = %233.0;
  (%234,)
}

def @func_4294() -> (Tensor[(14, 7, 12), float64],) {
  %235 = @func_3532() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %236 = %235.0;
  (%236,)
}

def @func_1775(%var_1740: Tensor[(9, 12, 6), float32], %var_1746: Tensor[(9, 12, 6), float32]) -> (Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) {
  %237 = cast(%var_1740, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
  %238 = cosh(%237) /* ty=Tensor[(9, 12, 6), float32] */;
  %239 = cast(%var_1746, dtype="bool") /* ty=Tensor[(9, 12, 6), bool] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%238, dtype="bool") /* ty=Tensor[(9, 12, 6), bool] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %243 = cast(meta[relay.Constant][13] /* ty=Tensor[(390, 3), int8] */, dtype="int8") /* ty=Tensor[(390, 3), int8] */;
  %244 = reshape(%243, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), int8] */;
  %245 = @func_1322(%244) /* ty=(Tensor[(15, 13, 6), bool],) */;
  %246 = logical_and(%241, %242) /* ty=Tensor[(9, 12, 6), bool] */;
  %247 = %245.0;
  (%246, %247, meta[relay.Constant][13] /* ty=Tensor[(390, 3), int8] */)
}

def @func_3117(%var_3109: Tensor[(14, 7, 12), float64]) -> Tensor[(14, 7, 12), float32] {
  %248 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %249 = cast(%var_3109, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%248, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%251, %252) /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_7478() -> (Tensor[(14, 7, 12), float32],) {
  %253 = @func_5233() /* ty=Tensor[(14, 7, 12), float32] */;
  (%253,)
}

def @func_5587() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) {
  %254 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %255 = %254.1;
  %256 = cast(%255, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %257 = reshape(%256, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), float32] */;
  %258 = @func_3743(%257) /* ty=(Tensor[(14, 7, 12), float32],) */;
  %259 = %258.0;
  %260 = @func_3475() /* ty=Tensor[(14, 7, 12), float32] */;
  (%255, %259, %260)
}

def @func_1322(%var_1297: Tensor[(15, 13, 6), int8]) -> (Tensor[(15, 13, 6), bool],) {
  %261 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 13, 6), int8] */, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %262 = shape_of(%var_1297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%var_1297, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %265 = equal(%263, %264) /* ty=Tensor[(15, 13, 6), bool] */;
  %266 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 13, 6), int8] */, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%265, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %270 = not_equal(%268, %269) /* ty=Tensor[(15, 13, 6), bool] */;
  (%270,)
}

def @func_4473(%var_4433: Tensor[(14, 7, 12), float64]) -> (Tensor[(14, 7, 12), bool], Tensor[(5, 234), float64]) {
  %271 = @func_2184() /* ty=Tensor[(14, 7, 12), float64] */;
  %272 = cast(%var_4433, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%271, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %276 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 234), int8] */, dtype="int8") /* ty=Tensor[(5, 234), int8] */;
  %277 = reshape(%276, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), int8] */;
  %278 = @func_1322(%277) /* ty=(Tensor[(15, 13, 6), bool],) */;
  %279 = %278.0;
  %280 = cast(%279, dtype="float64") /* ty=Tensor[(15, 13, 6), float64] */;
  %281 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(5, 234), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %282 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 234), int8] */, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %284 = less(%274, %275) /* ty=Tensor[(14, 7, 12), bool] */;
  %285 = divide(%282, %283) /* ty=Tensor[(5, 234), float64] */;
  (%284, %285)
}

def @func_9543(%var_9538: Tensor[(10, 1, 5), float32]) -> Tensor[(10, 1, 5), float32] {
  %286 = cast(%var_9538, dtype="float32") /* ty=Tensor[(10, 1, 5), float32] */;
  exp(%286) /* ty=Tensor[(10, 1, 5), float32] */
}

def @func_3791() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) {
  %287 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %288 = cast(meta[relay.Constant][16] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %289 = cast(meta[relay.Constant][16] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %290 = cast(meta[relay.Constant][16] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %291 = reshape(%288, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %292 = reshape(%289, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %293 = reshape(%290, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %294 = @func_3037(%291, %292, %293) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) */;
  %295 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %296 = %287.1;
  %297 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %298 = %294.8;
  (%295, %296, %297, %298, meta[relay.Constant][16] /* ty=Tensor[(605), float64] */)
}

def @func_4773() -> Tensor[(14, 7, 12), float64] {
  %299 = @func_3532() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %299.0
}

def @func_6546() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(9, 4, 8), int32], int32, Tensor[(288), int32], Tensor[(14, 7, 12), float32], Tensor[(605), float32]) {
  %300 = @func_3791() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) */;
  %301 = @func_4122() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %302 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %303 = cast(meta[relay.Constant][17] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %304 = reshape(%303, newshape=[5, 11, 11]) /* ty=Tensor[(5, 11, 11), float64] */;
  %305 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %306 = cast(meta[relay.Constant][18] /* ty=Tensor[(288), int32] */, dtype="int32") /* ty=Tensor[(288), int32] */;
  %307 = reshape(%305, newshape=[]) /* ty=int32 */;
  %308 = reshape(%306, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), int32] */;
  %309 = @func_5395(%307, %308) /* ty=(Tensor[(9, 4, 8), int32],) */;
  %310 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %311 = %310.0;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %313 = cast(meta[relay.Constant][17] /* ty=Tensor[(605), float64] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %314 = %300.2;
  %315 = %301.1;
  %316 = @func_4028() /* ty=Tensor[(14, 7, 12), float32] */;
  %317 = %302.0;
  %318 = @func_1798(%304) /* ty=Tensor[(5, 11, 11), float64] */;
  %319 = %309.0;
  %320 = exp(%312) /* ty=Tensor[(14, 7, 12), float32] */;
  %321 = erf(%313) /* ty=Tensor[(605), float32] */;
  (%314, %315, %316, %317, %318, %319, -5 /* ty=int32 */, meta[relay.Constant][18] /* ty=Tensor[(288), int32] */, %320, %321)
}

def @func_5789() -> Tensor[(14, 7, 12), float32] {
  @func_5446() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_6270(%var_6243: Tensor[(14, 7, 12), float32]) -> Tensor[(14, 7, 12), bool] {
  %322 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %323 = %322.1;
  %324 = cast(%var_6243, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%323, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%326, %327) /* ty=Tensor[(14, 7, 12), bool] */
}

def @func_3091() -> Tensor[(14, 7, 12), float64] {
  %328 = @func_2184() /* ty=Tensor[(14, 7, 12), float64] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  log(%329) /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_9167(%var_9113: Tensor[(9, 7, 3), bool], %var_9124: Tensor[(9, 7, 12), int32]) -> (Tensor[(9, 7, 3), bool], Tensor[(9, 7, 12), bool], Tensor[(14, 7, 12), bool], Tensor[(9, 7, 1), float64]) {
  %330 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 7, 1), int32] */, dtype="bool") /* ty=Tensor[(9, 7, 1), bool] */;
  %331 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 7, 3), int32] */, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %332 = not_equal(%330, %331) /* ty=Tensor[(9, 7, 3), bool] */;
  %333 = cast(%var_9113, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %334 = shape_of(%332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%332, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %337 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 7, 1), int32] */, dtype="bool") /* ty=Tensor[(9, 7, 1), bool] */;
  %338 = cast(%var_9124, dtype="bool") /* ty=Tensor[(9, 7, 12), bool] */;
  %339 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 7, 1), int32] */, dtype="float64") /* ty=Tensor[(9, 7, 1), float64] */;
  %340 = greater_equal(%335, %336) /* ty=Tensor[(9, 7, 3), bool] */;
  %341 = not_equal(%337, %338) /* ty=Tensor[(9, 7, 12), bool] */;
  %342 = @func_5864() /* ty=Tensor[(14, 7, 12), bool] */;
  %343 = cos(%339) /* ty=Tensor[(9, 7, 1), float64] */;
  (%340, %341, %342, %343)
}

def @func_5395(%var_5390: int32, %var_5391: Tensor[(9, 4, 8), int32]) -> (Tensor[(9, 4, 8), int32],) {
  %344 = cast(%var_5390, dtype="int32") /* ty=int32 */;
  %345 = cast(%var_5391, dtype="int32") /* ty=Tensor[(9, 4, 8), int32] */;
  %346 = bitwise_or(%344, %345) /* ty=Tensor[(9, 4, 8), int32] */;
  (%346,)
}

def @func_7171(%var_7142: int32) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(832), float64], Tensor[(98, 6), int32], Tensor[(14, 7, 12), float64], Tensor[(110), float64], Tensor[(14, 14, 3), float64], Tensor[(605), float32]) {
  %347 = cast(meta[relay.Constant][21] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %348 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
  %349 = cast(%348, dtype="uint8") /* ty=Tensor[(14, 7, 12), uint8] */;
  %350 = reshape(%347, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %351 = reshape(%349, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), uint8] */;
  %352 = @func_6622(%350, %351) /* ty=(Tensor[(605), float32], Tensor[(80), float32], Tensor[(832), float64], Tensor[(14, 7, 12), bool], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float32], Tensor[(14, 7, 12), float64]) */;
  %353 = cast(%var_7142, dtype="float64") /* ty=float64 */;
  %354 = cast(meta[relay.Constant][23] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %355 = reshape(%353, newshape=[]) /* ty=float64 */;
  %356 = reshape(%354, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
  %357 = @func_2949(%355, %356) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], float64, Tensor[(22, 5), float64], Tensor[(14, 7, 12), float64]) */;
  %358 = cast(%var_7142, dtype="int32") /* ty=int32 */;
  %359 = cast(meta[relay.Constant][22] /* ty=Tensor[(98, 6), int32] */, dtype="int32") /* ty=Tensor[(98, 6), int32] */;
  %360 = reshape(%358, newshape=[]) /* ty=int32 */;
  %361 = reshape(%359, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), int32] */;
  %362 = @func_3369(%360, %361) /* ty=Tensor[(14, 14, 3), int32] */;
  %363 = cast(%var_7142, dtype="float64") /* ty=float64 */;
  %364 = cast(%362, dtype="float64") /* ty=Tensor[(14, 14, 3), float64] */;
  %365 = @func_7018() /* ty=(Tensor[(605), float32],) */;
  %366 = %352.6;
  %367 = %357.0;
  %368 = add(%363, %364) /* ty=Tensor[(14, 14, 3), float64] */;
  %369 = %365.0;
  (%348, %366, meta[relay.Constant][21] /* ty=Tensor[(832), float64] */, meta[relay.Constant][22] /* ty=Tensor[(98, 6), int32] */, %367, meta[relay.Constant][23] /* ty=Tensor[(110), float64] */, %368, %369)
}

def @func_4017(%var_3996: Tensor[(832), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(10, 2, 4), uint16], Tensor[(20, 4), float32], Tensor[(832), float64]) {
  %370 = @func_3401() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %371 = cast(meta[relay.Constant][24] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %372 = cast(%var_3996, dtype="float64") /* ty=Tensor[(832), float64] */;
  %373 = reshape(%371, newshape=[10, 2, 4]) /* ty=Tensor[(10, 2, 4), float32] */;
  %374 = reshape(%372, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
  %375 = @func_161(%373, %374) /* ty=(Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) */;
  %376 = %370.0;
  %377 = @func_3475() /* ty=Tensor[(14, 7, 12), float32] */;
  %378 = %375.3;
  (%376, %377, %378, meta[relay.Constant][24] /* ty=Tensor[(20, 4), float32] */, %var_3996)
}

def @func_2578(%var_2472: Tensor[(1760), float32], %var_2524: Tensor[(832), float64], %var_2561: float64, %var_2562: Tensor[(22, 5), float64], %var_2565: Tensor[(648), float32]) -> (Tensor[(10, 16, 11), uint64], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(832), float64], Tensor[(14, 7, 12), float32], Tensor[(15, 13, 6), bool], Tensor[(1170), int8], Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(14, 7, 12), float32]) {
  %379 = cast(%var_2472, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %380 = reshape(%379, newshape=[10, 16, 11]) /* ty=Tensor[(10, 16, 11), float32] */;
  %381 = @func_1917(%380) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(2, 416), float64], Tensor[(80, 1), float32], Tensor[(832), float64], Tensor[(10, 16, 11), float64], Tensor[(15, 13, 6), bool], Tensor[(1170), int8]) */;
  %382 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %383 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %385 = cosh(%384) /* ty=Tensor[(14, 7, 12), float32] */;
  %386 = cast(%385, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %387 = cos(%386) /* ty=Tensor[(14, 7, 12), float64] */;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %389 = asin(%388) /* ty=Tensor[(14, 7, 12), float32] */;
  %390 = cast(%383, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %394 = cast(%var_2524, dtype="float64") /* ty=Tensor[(832), float64] */;
  %395 = reshape(%394, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %396 = @func_31(%395) /* ty=(Tensor[(13, 8, 8), float64],) */;
  %397 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %398 = cast(meta[relay.Constant][25] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %399 = reshape(%398, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), int8] */;
  %400 = @func_1322(%399) /* ty=(Tensor[(15, 13, 6), bool],) */;
  %401 = cast(%var_2561, dtype="float64") /* ty=float64 */;
  %402 = cast(%var_2562, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %403 = reshape(%401, newshape=[]) /* ty=float64 */;
  %404 = reshape(%402, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
  %405 = cast(%var_2565, dtype="float32") /* ty=Tensor[(648), float32] */;
  %406 = cast(%var_2565, dtype="float32") /* ty=Tensor[(648), float32] */;
  %407 = reshape(%405, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %408 = reshape(%406, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %409 = @func_1775(%407, %408) /* ty=(Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) */;
  %410 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %411 = %381.0;
  %412 = %382.1;
  %413 = floor_mod(%392, %393) /* ty=Tensor[(14, 7, 12), float64] */;
  %414 = %396.0;
  %415 = %397.0;
  %416 = %400.0;
  %417 = @func_2184() /* ty=Tensor[(14, 7, 12), float64] */;
  %418 = @func_2258(%403, %404) /* ty=Tensor[(5, 2, 11), float64] */;
  %419 = %409.2;
  %420 = %410.0;
  (%411, %var_2472, %412, %413, %414, %var_2524, %415, %416, meta[relay.Constant][25] /* ty=Tensor[(1170), int8] */, %417, %418, %var_2561, %var_2562, %419, %var_2565, %420)
}

def @func_8507() -> (Tensor[(14, 7, 12), uint8], Tensor[(924), float64], Tensor[(605), float64]) {
  %421 = cast(meta[relay.Constant][26] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %422 = cast(meta[relay.Constant][26] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %423 = cast(meta[relay.Constant][26] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %424 = reshape(%421, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %425 = reshape(%422, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %426 = reshape(%423, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %427 = @func_3037(%424, %425, %426) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) */;
  %428 = @func_4564() /* ty=Tensor[(14, 7, 12), uint8] */;
  %429 = %427.4;
  (%428, %429, meta[relay.Constant][26] /* ty=Tensor[(605), float64] */)
}

def @func_7519() -> Tensor[(14, 7, 12), float64] {
  %430 = @func_3903() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %430.0
}

def @func_3298(%var_3291: Tensor[(80), float32], %var_3292: Tensor[(832), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(80), float32], Tensor[(832), float64]) {
  %431 = cast(%var_3291, dtype="float32") /* ty=Tensor[(80), float32] */;
  %432 = cast(%var_3292, dtype="float64") /* ty=Tensor[(832), float64] */;
  %433 = reshape(%431, newshape=[10, 2, 4]) /* ty=Tensor[(10, 2, 4), float32] */;
  %434 = reshape(%432, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
  %435 = @func_161(%433, %434) /* ty=(Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) */;
  %436 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %437 = %435.1;
  (%436, %437, %var_3291, %var_3292)
}

def @func_5512(%var_5503: Tensor[(1, 1, 15), int16]) -> (Tensor[(1, 3, 15), bool],) {
  %438 = cast(%var_5503, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
  %439 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 3, 15), int16] */, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %440 = equal(%438, %439) /* ty=Tensor[(1, 3, 15), bool] */;
  (%440,)
}

def @func_7813(%var_7803: Tensor[(16, 1, 4), float64], %var_7804: Tensor[(16, 3, 4), float64]) -> (Tensor[(16, 3, 4), float64], Tensor[(16, 3, 4), float64]) {
  %441 = cast(%var_7803, dtype="float64") /* ty=Tensor[(16, 1, 4), float64] */;
  %442 = cast(%var_7804, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %443 = cast(%var_7804, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %444 = power(%441, %442) /* ty=Tensor[(16, 3, 4), float64] */;
  %445 = atan(%443) /* ty=Tensor[(16, 3, 4), float64] */;
  (%444, %445)
}

def @func_7271() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) {
  %446 = @func_5068() /* ty=(Tensor[(605), float32], Tensor[(14, 7, 12), float64], Tensor[(1760), float32], Tensor[(1, 832), float64], Tensor[(110), float64], Tensor[(14, 7, 12), float32]) */;
  %447 = @func_5386() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %448 = %446.5;
  %449 = %447.0;
  (%448, %449)
}

def @func_9836() -> Tensor[(14, 7, 12), float32] {
  %450 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %450.0
}

def @func_8067(%var_8054: Tensor[(14, 7, 12), float64]) -> (Tensor[(14, 7, 12), int8],) {
  %451 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
  %452 = cast(%var_8054, dtype="int8") /* ty=Tensor[(14, 7, 12), int8] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%451, dtype="int8") /* ty=Tensor[(14, 7, 12), int8] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %456 = logical_xor(%454, %455) /* ty=Tensor[(14, 7, 12), int8] */;
  (%456,)
}

def @func_1917(%var_1852: Tensor[(10, 16, 11), float32]) -> (Tensor[(10, 16, 11), uint64], Tensor[(2, 416), float64], Tensor[(80, 1), float32], Tensor[(832), float64], Tensor[(10, 16, 11), float64], Tensor[(15, 13, 6), bool], Tensor[(1170), int8]) {
  %457 = cast(%var_1852, dtype="float32") /* ty=Tensor[(10, 16, 11), float32] */;
  %458 = erf(%457) /* ty=Tensor[(10, 16, 11), float32] */;
  %459 = cast(%var_1852, dtype="uint64") /* ty=Tensor[(10, 16, 11), uint64] */;
  %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%458, dtype="uint64") /* ty=Tensor[(10, 16, 11), uint64] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %463 = cast(meta[relay.Constant][28] /* ty=Tensor[(80, 1), float32] */, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
  %464 = cast(meta[relay.Constant][29] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %465 = reshape(%463, newshape=[10, 2, 4]) /* ty=Tensor[(10, 2, 4), float32] */;
  %466 = reshape(%464, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
  %467 = @func_161(%465, %466) /* ty=(Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) */;
  %468 = cast(%458, dtype="float64") /* ty=Tensor[(10, 16, 11), float64] */;
  %469 = cast(meta[relay.Constant][30] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %470 = reshape(%469, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), int8] */;
  %471 = @func_1322(%470) /* ty=(Tensor[(15, 13, 6), bool],) */;
  %472 = multiply(%461, %462) /* ty=Tensor[(10, 16, 11), uint64] */;
  %473 = %467.2;
  %474 = sin(%468) /* ty=Tensor[(10, 16, 11), float64] */;
  %475 = %471.0;
  (%472, %473, meta[relay.Constant][28] /* ty=Tensor[(80, 1), float32] */, meta[relay.Constant][29] /* ty=Tensor[(832), float64] */, %474, %475, meta[relay.Constant][30] /* ty=Tensor[(1170), int8] */)
}

def @func_5475(%var_5470: Tensor[(12, 8, 6), int64]) -> (Tensor[(12, 8, 6), bool],) {
  %476 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 8, 6), int64] */, dtype="bool") /* ty=Tensor[(12, 8, 6), bool] */;
  %477 = shape_of(%var_5470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%var_5470, dtype="bool") /* ty=Tensor[(12, 8, 6), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = less_equal(%478, %479) /* ty=Tensor[(12, 8, 6), bool] */;
  (%480,)
}

def @func_7018() -> (Tensor[(605), float32],) {
  %481 = @func_4738() /* ty=Tensor[(605), float32] */;
  (%481,)
}

def @func_3401() -> (Tensor[(14, 7, 12), float64],) {
  %482 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  (%482,)
}

def @func_8667(%var_8660: Tensor[(22, 5), float64]) -> (Tensor[(22, 5), uint64],) {
  %483 = @func_5144() /* ty=(Tensor[(22, 5), float64],) */;
  %484 = %483.0;
  %485 = cast(%var_8660, dtype="uint64") /* ty=Tensor[(22, 5), uint64] */;
  %486 = shape_of(%484, dtype="int32") /* ty=Tensor[(2), int32] */;
  %487 = cast(%484, dtype="uint64") /* ty=Tensor[(22, 5), uint64] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %489 = bitwise_xor(%487, %488) /* ty=Tensor[(22, 5), uint64] */;
  (%489,)
}

def @func_9707() -> (Tensor[(605), float32],) {
  %490 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %491 = %490.0;
  (%491,)
}

def @main(%var_10111: Tensor[(7, 10, 11), float32]) -> Tensor[(7, 10, 11), bool] {
  %492 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 1, 11), float32] */, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %493 = cast(%var_10111, dtype="bool") /* ty=Tensor[(7, 10, 11), bool] */;
  greater(%492, %493) /* ty=Tensor[(7, 10, 11), bool] */
}

def @func_3168() -> Tensor[(14, 7, 12), float64] {
  %494 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %494.0
}

def @func_7465(%var_7448: int32) -> (Tensor[(14, 7, 12), int64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32]) {
  %495 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %496 = %495.0;
  %497 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %498 = %497.0;
  %499 = cast(%498, dtype="int64") /* ty=Tensor[(14, 7, 12), int64] */;
  %500 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%496, dtype="int64") /* ty=Tensor[(14, 7, 12), int64] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %503 = cast(%var_7448, dtype="int32") /* ty=int32 */;
  %504 = cast(meta[relay.Constant][33] /* ty=Tensor[(588), int32] */, dtype="int32") /* ty=Tensor[(588), int32] */;
  %505 = reshape(%503, newshape=[]) /* ty=int32 */;
  %506 = reshape(%504, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), int32] */;
  %507 = bitwise_and(%501, %502) /* ty=Tensor[(14, 7, 12), int64] */;
  %508 = @func_3369(%505, %506) /* ty=Tensor[(14, 14, 3), int32] */;
  (%507, %508, %var_7448, meta[relay.Constant][33] /* ty=Tensor[(588), int32] */)
}

def @func_9273() -> Tensor[(14, 7, 12), float32] {
  %509 = @func_4906() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %509.0
}

def @func_2160(%var_2138: Tensor[(3, 216), float32]) -> (Tensor[(14, 7, 12), int32], Tensor[(15, 13, 6), bool], Tensor[(3, 216), float32], Tensor[(14, 7, 12), float64]) {
  %510 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %511 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 7, 12), float64] */, dtype="int32") /* ty=Tensor[(14, 7, 12), int32] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%510, dtype="int32") /* ty=Tensor[(14, 7, 12), int32] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %515 = cast(%var_2138, dtype="float32") /* ty=Tensor[(3, 216), float32] */;
  %516 = cast(%var_2138, dtype="float32") /* ty=Tensor[(3, 216), float32] */;
  %517 = reshape(%515, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %518 = reshape(%516, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %519 = @func_1775(%517, %518) /* ty=(Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) */;
  %520 = cast(%510, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %521 = bitwise_xor(%513, %514) /* ty=Tensor[(14, 7, 12), int32] */;
  %522 = %519.1;
  %523 = sigmoid(%520) /* ty=Tensor[(14, 7, 12), float64] */;
  (%521, %522, %var_2138, %523)
}

def @func_9392() -> (Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(14, 7, 12), float32]) {
  %524 = @func_7478() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %525 = @func_7215() /* ty=(Tensor[(605), float32],) */;
  %526 = %524.0;
  %527 = %525.0;
  %528 = @func_9273() /* ty=Tensor[(14, 7, 12), float32] */;
  (%526, %527, %528)
}

def @func_9571() -> (Tensor[(14, 7, 12), float64], Tensor[(110), float64], Tensor[(1760), float64]) {
  %529 = @func_5245() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %530 = cast(meta[relay.Constant][35] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %531 = reshape(%530, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
  %532 = @func_8114(%531) /* ty=(Tensor[(22, 5), float64], Tensor[(1760), float32]) */;
  %533 = %532.1;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %535 = %529.0;
  %536 = erf(%534) /* ty=Tensor[(1760), float64] */;
  (%535, meta[relay.Constant][35] /* ty=Tensor[(110), float64] */, %536)
}

def @func_6168() -> Tensor[(14, 7, 12), float64] {
  %537 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %537.0
}

def @func_8384() -> Tensor[(14, 7, 12), uint8] {
  @func_4564() /* ty=Tensor[(14, 7, 12), uint8] */
}

def @func_8924() -> Tensor[(14, 7, 12), float64] {
  %538 = @func_5587() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %538.0
}

def @func_2949(%var_2917: float64, %var_2918: Tensor[(22, 5), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], float64, Tensor[(22, 5), float64], Tensor[(14, 7, 12), float64]) {
  %539 = cast(%var_2917, dtype="float64") /* ty=float64 */;
  %540 = cast(%var_2918, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %541 = reshape(%539, newshape=[]) /* ty=float64 */;
  %542 = reshape(%540, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %543 = @func_2802(%541, %542) /* ty=(Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) */;
  %544 = %543.3;
  %545 = cast(%544, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %546 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %547 = @func_2335() /* ty=Tensor[(14, 7, 12), float64] */;
  %548 = tan(%545) /* ty=Tensor[(14, 7, 12), float64] */;
  (%546, %547, %var_2917, %var_2918, %548)
}

def @func_10087(%var_10018: float64, %var_10079: Tensor[(605, 1), float32]) -> (Tensor[(14, 7, 12), float64], Tensor[(1, 1, 10), float64], float64, Tensor[(588), int32], Tensor[(14, 7, 12), float32], Tensor[(605), int8], Tensor[(605, 10), bool]) {
  %549 = @func_8372() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %550 = cast(%var_10018, dtype="float64") /* ty=float64 */;
  %551 = cast(meta[relay.Constant][36] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %552 = reshape(%550, newshape=[]) /* ty=float64 */;
  %553 = reshape(%551, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float64] */;
  %554 = cast(%var_10018, dtype="int32") /* ty=int32 */;
  %555 = reshape(%554, newshape=[]) /* ty=int32 */;
  %556 = @func_7465(%555) /* ty=(Tensor[(14, 7, 12), int64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32]) */;
  %557 = cast(%var_10079, dtype="float32") /* ty=Tensor[(605, 1), float32] */;
  %558 = reshape(%557, newshape=[605]) /* ty=Tensor[(605), float32] */;
  %559 = @func_9762(%558) /* ty=(Tensor[(605), int8], Tensor[(605), int64], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) */;
  %560 = cast(meta[relay.Constant][36] /* ty=Tensor[(10), float64] */, dtype="bool") /* ty=Tensor[(10), bool] */;
  %561 = cast(%var_10079, dtype="bool") /* ty=Tensor[(605, 1), bool] */;
  %562 = %549.0;
  %563 = @func_6909(%552, %553) /* ty=Tensor[(1, 1, 10), float64] */;
  %564 = %556.3;
  %565 = @func_4650() /* ty=Tensor[(14, 7, 12), float32] */;
  %566 = %559.0;
  %567 = greater(%560, %561) /* ty=Tensor[(605, 10), bool] */;
  (%562, %563, %var_10018, %564, %565, %566, %567)
}

def @func_7642(%var_7604: float64) -> (Tensor[(5, 2, 11), float64], float64, Tensor[(1, 110), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), uint16]) {
  %568 = cast(%var_7604, dtype="float64") /* ty=float64 */;
  %569 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 110), float64] */, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
  %570 = reshape(%568, newshape=[]) /* ty=float64 */;
  %571 = reshape(%569, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
  %572 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %574 = @func_2872() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), uint16]) */;
  %575 = @func_2258(%570, %571) /* ty=Tensor[(5, 2, 11), float64] */;
  %576 = atanh(%573) /* ty=Tensor[(14, 7, 12), float64] */;
  %577 = %574.1;
  (%575, %var_7604, meta[relay.Constant][37] /* ty=Tensor[(1, 110), float64] */, %576, %577)
}

def @func_3798() -> Tensor[(14, 7, 12), float32] {
  %578 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %578.0
}

def @func_31(%var_17: Tensor[(13, 8, 8), float64]) -> (Tensor[(13, 8, 8), float64],) {
  %579 = cast(%var_17, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %580 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(13, 8, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %583 = minimum(%581, %582) /* ty=Tensor[(13, 8, 8), float64] */;
  (%583,)
}

def @func_4259() -> (Tensor[(605), float32],) {
  %584 = @func_3975() /* ty=(Tensor[(605), float32],) */;
  %585 = %584.0;
  (%585,)
}

def @func_2389() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) {
  %586 = @func_2335() /* ty=Tensor[(14, 7, 12), float64] */;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %588 = cast(%586, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %589 = acosh(%587) /* ty=Tensor[(14, 7, 12), float32] */;
  %590 = sqrt(%588) /* ty=Tensor[(14, 7, 12), float64] */;
  (%589, %590)
}

def @func_4890() -> Tensor[(14, 7, 12), float64] {
  %591 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %591.0
}

def @func_7054() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), bool]) {
  %592 = @func_5587() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %593 = %592.2;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %595 = reshape(%594, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), float32] */;
  %596 = @func_6270(%595) /* ty=Tensor[(14, 7, 12), bool] */;
  (%593, %596)
}

def @func_5068() -> (Tensor[(605), float32], Tensor[(14, 7, 12), float64], Tensor[(1760), float32], Tensor[(1, 832), float64], Tensor[(110), float64], Tensor[(14, 7, 12), float32]) {
  %597 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %598 = cast(meta[relay.Constant][39] /* ty=Tensor[(1760), float32] */, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %599 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 832), float64] */, dtype="float64") /* ty=Tensor[(1, 832), float64] */;
  %600 = cast(meta[relay.Constant][41] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %601 = reshape(%598, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
  %602 = reshape(%599, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
  %603 = reshape(%600, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %604 = @func_4405(%601, %602, %603) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], float64, Tensor[(110), float64], Tensor[(648), float32], Tensor[(2, 416), uint64]) */;
  %605 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %606 = %597.0;
  %607 = %604.0;
  %608 = %605.0;
  (%606, %607, meta[relay.Constant][39] /* ty=Tensor[(1760), float32] */, meta[relay.Constant][40] /* ty=Tensor[(1, 832), float64] */, meta[relay.Constant][41] /* ty=Tensor[(110), float64] */, %608)
}

def @func_9987(%var_9972: Tensor[(11, 5, 7), int16], %var_9982: Tensor[(110), float64]) -> (Tensor[(11, 5, 7), int16], Tensor[(14, 7, 12), float32], Tensor[(22, 5), uint64], Tensor[(110), float64]) {
  %609 = cast(%var_9972, dtype="int16") /* ty=Tensor[(11, 5, 7), int16] */;
  %610 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(11, 5, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 5, 7), int16] */, dtype="int16") /* ty=Tensor[(11, 5, 7), int16] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %613 = @func_4906() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %614 = cast(%var_9982, dtype="float64") /* ty=Tensor[(110), float64] */;
  %615 = reshape(%614, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
  %616 = @func_8667(%615) /* ty=(Tensor[(22, 5), uint64],) */;
  %617 = bitwise_xor(%611, %612) /* ty=Tensor[(11, 5, 7), int16] */;
  %618 = %613.0;
  %619 = %616.0;
  (%617, %618, %619, %var_9982)
}

def @func_6647(%var_6644: Tensor[(1, 14, 3), float32]) -> Tensor[(1, 14, 3), float32] {
  %620 = cast(%var_6644, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  sigmoid(%620) /* ty=Tensor[(1, 14, 3), float32] */
}

def @func_3743(%var_3717: Tensor[(14, 7, 12), float32]) -> (Tensor[(14, 7, 12), float32],) {
  %621 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
  %622 = cast(%var_3717, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %626 = divide(%624, %625) /* ty=Tensor[(14, 7, 12), float32] */;
  (%626,)
}

def @func_6472() -> (Tensor[(3, 11, ?), float32], Tensor[(14, 7, 12), float64]) {
  %627 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 11, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 1), float64] */;
  %628 = log2(%627) /* ty=Tensor[(3, 11, 1), float64] */;
  %629 = cast(%628, dtype="float64") /* ty=Tensor[(3, 11, 1), float64] */;
  %630 = atanh(%629) /* ty=Tensor[(3, 11, 1), float64] */;
  %631 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 11, 1), float64] */, dtype="float32") /* ty=Tensor[(3, 11, 1), float32] */;
  %632 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%630, dtype="float32") /* ty=Tensor[(3, 11, 1), float32] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %635 = @func_3401() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %636 = floor_divide(%633, %634) /* ty=Tensor[(3, 11, ?), float32] */;
  %637 = %635.0;
  (%636, %637)
}

def @func_9923(%var_9919: Tensor[(13, 1, 13), float32]) -> (Tensor[(13, 1, 13), float32],) {
  %638 = cast(%var_9919, dtype="float32") /* ty=Tensor[(13, 1, 13), float32] */;
  %639 = atan(%638) /* ty=Tensor[(13, 1, 13), float32] */;
  (%639,)
}

def @func_161(%var_124: Tensor[(10, 2, 4), float32], %var_149: Tensor[(2, 416), float64]) -> (Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) {
  %640 = cast(%var_124, dtype="float32") /* ty=Tensor[(10, 2, 4), float32] */;
  %641 = sin(%640) /* ty=Tensor[(10, 2, 4), float32] */;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(10, 2, 4), float32] */;
  %643 = atan(%642) /* ty=Tensor[(10, 2, 4), float32] */;
  %644 = cast(%643, dtype="bool") /* ty=Tensor[(10, 2, 4), bool] */;
  %645 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%641, dtype="bool") /* ty=Tensor[(10, 2, 4), bool] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %648 = cast(%var_149, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
  %649 = reshape(%648, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %650 = @func_31(%649) /* ty=(Tensor[(13, 8, 8), float64],) */;
  %651 = cast(%641, dtype="uint16") /* ty=Tensor[(10, 2, 4), uint16] */;
  %652 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%643, dtype="uint16") /* ty=Tensor[(10, 2, 4), uint16] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %655 = greater_equal(%646, %647) /* ty=Tensor[(10, 2, 4), bool] */;
  %656 = %650.0;
  %657 = maximum(%653, %654) /* ty=Tensor[(10, 2, 4), uint16] */;
  (%655, %656, %var_149, %657)
}

def @func_8372() -> (Tensor[(14, 7, 12), float64],) {
  %658 = @func_5954() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) */;
  %659 = %658.0;
  (%659,)
}

def @func_5245() -> (Tensor[(14, 7, 12), float64],) {
  %660 = @func_4773() /* ty=Tensor[(14, 7, 12), float64] */;
  (%660,)
}

def @func_4650() -> Tensor[(14, 7, 12), float32] {
  %661 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %661.0
}

def @func_6320() -> (Tensor[(14, 7, 12), bool],) {
  %662 = @func_4294() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %663 = %662.0;
  %664 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %665 = %664.0;
  %666 = cast(%665, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %667 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%663, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = equal(%668, %669) /* ty=Tensor[(14, 7, 12), bool] */;
  (%670,)
}

def @func_9103(%var_9093: Tensor[(3, 7, 5), float32]) -> (Tensor[(3, 7, 5), float32],) {
  %671 = cast(%var_9093, dtype="float32") /* ty=Tensor[(3, 7, 5), float32] */;
  %672 = acos(%671) /* ty=Tensor[(3, 7, 5), float32] */;
  (%672,)
}

def @func_3532() -> (Tensor[(14, 7, 12), float64],) {
  %673 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  (%673,)
}

def @func_5178() -> (Tensor[(14, 7, 12), float64],) {
  %674 = @func_3903() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %675 = %674.0;
  (%675,)
}

def @func_6836() -> (Tensor[(14, 7, 12), float64],) {
  %676 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  (%676,)
}

def @func_4107(%var_4083: Tensor[(13, 3, 13), float32]) -> Tensor[(13, 3, 13), float32] {
  %677 = cast(%var_4083, dtype="float32") /* ty=Tensor[(13, 3, 13), float32] */;
  %678 = cos(%677) /* ty=Tensor[(13, 3, 13), float32] */;
  %679 = cast(%678, dtype="float32") /* ty=Tensor[(13, 3, 13), float32] */;
  %680 = cosh(%679) /* ty=Tensor[(13, 3, 13), float32] */;
  %681 = cast(%680, dtype="float32") /* ty=Tensor[(13, 3, 13), float32] */;
  atan(%681) /* ty=Tensor[(13, 3, 13), float32] */
}

def @func_9029() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) {
  %682 = @func_5954() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) */;
  %683 = %682.0;
  %684 = cast(%683, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %685 = reshape(%684, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), float64] */;
  %686 = @func_3117(%685) /* ty=Tensor[(14, 7, 12), float32] */;
  (%683, %686)
}

def @func_2258(%var_2248: float64, %var_2249: Tensor[(5, 2, 11), float64]) -> Tensor[(5, 2, 11), float64] {
  %687 = cast(%var_2248, dtype="float64") /* ty=float64 */;
  %688 = cast(%var_2249, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
  floor_mod(%687, %688) /* ty=Tensor[(5, 2, 11), float64] */
}

def @func_6714() -> (Tensor[(14, 7, 12), float64], Tensor[(110), float64], float64, Tensor[(224), float64], Tensor[(14, 7, 12), float64]) {
  %689 = @func_5245() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %690 = cast(9.93696f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %691 = cast(meta[relay.Constant][44] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %692 = reshape(%690, newshape=[]) /* ty=float64 */;
  %693 = reshape(%691, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float64] */;
  %694 = @func_3590(%692, %693) /* ty=(Tensor[(14, 16, 1), float64], Tensor[(15, 13, 6), bool], Tensor[(110), float64]) */;
  %695 = %689.0;
  %696 = %694.2;
  %697 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  (%695, %696, 9.93696f64 /* ty=float64 */, meta[relay.Constant][44] /* ty=Tensor[(224), float64] */, %697)
}

def @func_9322() -> Tensor[(14, 7, 12), float64] {
  @func_9048() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_2694() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) {
  %698 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %699 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %700 = cast(%699, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %701 = sin(%700) /* ty=Tensor[(14, 7, 12), float32] */;
  %702 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %703 = %702.0;
  %704 = cast(%699, dtype="uint64") /* ty=Tensor[(14, 7, 12), uint64] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%703, dtype="uint64") /* ty=Tensor[(14, 7, 12), uint64] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %708 = multiply(%706, %707) /* ty=Tensor[(14, 7, 12), uint64] */;
  %709 = cast(%701, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%708, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %713 = greater(%711, %712) /* ty=Tensor[(14, 7, 12), bool] */;
  %714 = cast(%713, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %715 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(%701, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %718 = %698.0;
  %719 = mod(%716, %717) /* ty=Tensor[(14, 7, 12), float32] */;
  (%718, %719)
}

def @func_5144() -> (Tensor[(22, 5), float64],) {
  %720 = @func_4925() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64]) */;
  %721 = %720.3;
  (%721,)
}

def @func_4405(%var_4369: Tensor[(1760), float32], %var_4370: Tensor[(2, 416), float64], %var_4372: Tensor[(110), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], float64, Tensor[(110), float64], Tensor[(648), float32], Tensor[(2, 416), uint64]) {
  %722 = cast(%var_4369, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %723 = cast(%var_4370, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
  %724 = cast(-8.19607f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %725 = cast(%var_4372, dtype="float64") /* ty=Tensor[(110), float64] */;
  %726 = cast(meta[relay.Constant][45] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %727 = reshape(%722, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
  %728 = reshape(%723, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %729 = reshape(%724, newshape=[]) /* ty=float64 */;
  %730 = reshape(%725, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
  %731 = reshape(%726, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %732 = @func_2578(%727, %728, %729, %730, %731) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(832), float64], Tensor[(14, 7, 12), float32], Tensor[(15, 13, 6), bool], Tensor[(1170), int8], Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(14, 7, 12), float32]) */;
  %733 = cast(%var_4370, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
  %734 = reshape(%733, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %735 = @func_31(%734) /* ty=(Tensor[(13, 8, 8), float64],) */;
  %736 = %735.0;
  %737 = cast(%736, dtype="uint64") /* ty=Tensor[(13, 8, 8), uint64] */;
  %738 = shape_of(%var_4370, dtype="int32") /* ty=Tensor[(2), int32] */;
  %739 = cast(%var_4370, dtype="uint64") /* ty=Tensor[(2, 416), uint64] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %741 = @func_2184() /* ty=Tensor[(14, 7, 12), float64] */;
  %742 = @func_3475() /* ty=Tensor[(14, 7, 12), float32] */;
  %743 = %732.6;
  %744 = right_shift(%739, %740) /* ty=Tensor[(2, 416), uint64] */;
  (%741, %742, %743, %var_4369, -8.19607f64 /* ty=float64 */, %var_4372, meta[relay.Constant][45] /* ty=Tensor[(648), float32] */, %744)
}

def @func_2872() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), uint16]) {
  %745 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %746 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
  %747 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
  %748 = cast(%747, dtype="uint16") /* ty=Tensor[(14, 7, 12), uint16] */;
  %749 = shape_of(%746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%746, dtype="uint16") /* ty=Tensor[(14, 7, 12), uint16] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %752 = %745.0;
  %753 = left_shift(%750, %751) /* ty=Tensor[(14, 7, 12), uint16] */;
  (%752, %753)
}

def @func_9762(%var_9717: Tensor[(605), float32]) -> (Tensor[(605), int8], Tensor[(605), int64], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) {
  %754 = @func_8644() /* ty=Tensor[(605), float32] */;
  %755 = cast(%var_9717, dtype="int8") /* ty=Tensor[(605), int8] */;
  %756 = shape_of(%754, dtype="int32") /* ty=Tensor[(1), int32] */;
  %757 = cast(%754, dtype="int8") /* ty=Tensor[(605), int8] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?), int8] */;
  %759 = cast(%var_9717, dtype="int64") /* ty=Tensor[(605), int64] */;
  %760 = shape_of(%754, dtype="int32") /* ty=Tensor[(1), int32] */;
  %761 = cast(%754, dtype="int64") /* ty=Tensor[(605), int64] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?), int64] */;
  %763 = @func_9392() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(14, 7, 12), float32]) */;
  %764 = @func_8372() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %765 = bitwise_or(%757, %758) /* ty=Tensor[(605), int8] */;
  %766 = multiply(%761, %762) /* ty=Tensor[(605), int64] */;
  %767 = %763.1;
  %768 = %764.0;
  (%765, %766, %767, %768)
}

def @func_3701(%var_3658: Tensor[(1760, 1), float32], %var_3659: Tensor[(832, 1), float64], %var_3660: Tensor[(110), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32], Tensor[(832), float64], Tensor[(1760, 1), float32], Tensor[(832, 1), float64], Tensor[(110), float64], Tensor[(648), float32]) {
  %769 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %770 = cast(meta[relay.Constant][46] /* ty=Tensor[(588), int32] */, dtype="int32") /* ty=Tensor[(588), int32] */;
  %771 = reshape(%769, newshape=[]) /* ty=int32 */;
  %772 = reshape(%770, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), int32] */;
  %773 = cast(%var_3658, dtype="float32") /* ty=Tensor[(1760, 1), float32] */;
  %774 = cast(%var_3659, dtype="float64") /* ty=Tensor[(832, 1), float64] */;
  %775 = cast(-8 /* ty=int32 */, dtype="float64") /* ty=float64 */;
  %776 = cast(%var_3660, dtype="float64") /* ty=Tensor[(110), float64] */;
  %777 = cast(meta[relay.Constant][47] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %778 = reshape(%773, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
  %779 = reshape(%774, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %780 = reshape(%775, newshape=[]) /* ty=float64 */;
  %781 = reshape(%776, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
  %782 = reshape(%777, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %783 = @func_2578(%778, %779, %780, %781, %782) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(832), float64], Tensor[(14, 7, 12), float32], Tensor[(15, 13, 6), bool], Tensor[(1170), int8], Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(14, 7, 12), float32]) */;
  %784 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %785 = @func_3369(%771, %772) /* ty=Tensor[(14, 14, 3), int32] */;
  %786 = %783.5;
  (%784, %785, -8 /* ty=int32 */, meta[relay.Constant][46] /* ty=Tensor[(588), int32] */, %786, %var_3658, %var_3659, %var_3660, meta[relay.Constant][47] /* ty=Tensor[(648), float32] */)
}

def @func_3218() -> Tensor[(14, 7, 12), float32] {
  @func_2729() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_9203() -> Tensor[(832), float64] {
  @func_7660() /* ty=Tensor[(832), float64] */
}

def @func_7660() -> Tensor[(832), float64] {
  %787 = @func_5954() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) */;
  %787.3
}

def @func_7973(%var_7964: Tensor[(605), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(605), int8]) {
  %788 = @func_3791() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) */;
  %789 = %788.4;
  %790 = cast(%var_7964, dtype="int8") /* ty=Tensor[(605), int8] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(1), int32] */;
  %792 = cast(%789, dtype="int8") /* ty=Tensor[(605), int8] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?), int8] */;
  %794 = @func_5341() /* ty=Tensor[(14, 7, 12), float64] */;
  %795 = bitwise_xor(%792, %793) /* ty=Tensor[(605), int8] */;
  (%794, %795)
}

def @func_8711(%var_8684: Tensor[(832), float64], %var_8700: Tensor[(605), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(832), float64], Tensor[(4, 20), int8], Tensor[(605), int8], Tensor[(605), float64]) {
  %796 = @func_3791() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) */;
  %797 = cast(meta[relay.Constant][48] /* ty=Tensor[(4, 20), float32] */, dtype="float32") /* ty=Tensor[(4, 20), float32] */;
  %798 = cast(%var_8684, dtype="float64") /* ty=Tensor[(832), float64] */;
  %799 = reshape(%797, newshape=[10, 2, 4]) /* ty=Tensor[(10, 2, 4), float32] */;
  %800 = reshape(%798, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
  %801 = @func_161(%799, %800) /* ty=(Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) */;
  %802 = %801.3;
  %803 = cast(%802, dtype="int8") /* ty=Tensor[(10, 2, 4), int8] */;
  %804 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(4, 20), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %805 = cast(meta[relay.Constant][48] /* ty=Tensor[(4, 20), float32] */, dtype="int8") /* ty=Tensor[(4, 20), int8] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %807 = cast(%var_8700, dtype="float64") /* ty=Tensor[(605), float64] */;
  %808 = reshape(%807, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %809 = @func_7973(%808) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(605), int8]) */;
  %810 = %796.2;
  %811 = minimum(%805, %806) /* ty=Tensor[(4, 20), int8] */;
  %812 = %809.1;
  (%810, %var_8684, %811, %812, %var_8700)
}

def @func_6622(%var_6570: Tensor[(832), float64], %var_6583: Tensor[(14, 7, 12), uint8]) -> (Tensor[(605), float32], Tensor[(80), float32], Tensor[(832), float64], Tensor[(14, 7, 12), bool], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float32], Tensor[(14, 7, 12), float64]) {
  %813 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %814 = @func_4564() /* ty=Tensor[(14, 7, 12), uint8] */;
  %815 = cast(%var_6583, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%814, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %819 = cast(%var_6570, dtype="float64") /* ty=Tensor[(832), float64] */;
  %820 = reshape(%819, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %821 = @func_4948(%820) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(40, 2), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) */;
  %822 = cast(meta[relay.Constant][49] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %823 = cast(%var_6570, dtype="float64") /* ty=Tensor[(832), float64] */;
  %824 = reshape(%822, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %825 = reshape(%823, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %826 = @func_3298(%824, %825) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(80), float32], Tensor[(832), float64]) */;
  %827 = %826.1;
  %828 = cast(%827, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  %829 = %813.0;
  %830 = logical_and(%817, %818) /* ty=Tensor[(14, 7, 12), bool] */;
  %831 = %821.0;
  %832 = acos(%828) /* ty=Tensor[(13, 8, 8), float32] */;
  %833 = @func_5784() /* ty=Tensor[(14, 7, 12), float64] */;
  (%829, meta[relay.Constant][49] /* ty=Tensor[(80), float32] */, %var_6570, %830, %831, %832, %833)
}

def @func_9961() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), bool]) {
  %834 = @func_9392() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(14, 7, 12), float32]) */;
  %835 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %836 = %835.0;
  %837 = cast(%836, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %838 = reshape(%837, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), float32] */;
  %839 = %834.2;
  %840 = @func_6270(%838) /* ty=Tensor[(14, 7, 12), bool] */;
  (%839, %836, %840)
}

def @func_5386() -> (Tensor[(14, 7, 12), float64],) {
  %841 = @func_4925() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64]) */;
  %842 = %841.0;
  (%842,)
}

def @func_8035() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) {
  %843 = @func_3903() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %844 = %843.0;
  %845 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %846 = @func_5784() /* ty=Tensor[(14, 7, 12), float64] */;
  (%844, %845, %846)
}

def @func_2101() -> Tensor[(14, 7, 12), float64] {
  %847 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %848 = log2(%847) /* ty=Tensor[(14, 7, 12), float64] */;
  %849 = cast(%848, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  log10(%849) /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_7340() -> (Tensor[(10, 8, 9), float64],) {
  %850 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 9), float64] */;
  %851 = rsqrt(%850) /* ty=Tensor[(10, 8, 9), float64] */;
  (%851,)
}

def @func_8114(%var_8098: Tensor[(22, 5), float64]) -> (Tensor[(22, 5), float64], Tensor[(1760), float32]) {
  %852 = @func_5144() /* ty=(Tensor[(22, 5), float64],) */;
  %853 = %852.0;
  %854 = cast(%var_8098, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(2), int32] */;
  %856 = cast(%853, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %858 = cast(%var_8098, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %859 = reshape(%858, newshape=[1, 110]) /* ty=Tensor[(1, 110), float64] */;
  %860 = @func_7558(%859) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], Tensor[(208, 4), float64], Tensor[(1, 110), float64]) */;
  %861 = power(%856, %857) /* ty=Tensor[(22, 5), float64] */;
  %862 = %860.3;
  (%861, %862)
}

def @func_4906() -> (Tensor[(14, 7, 12), float32],) {
  %863 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %864 = %863.0;
  (%864,)
}

def @func_4122() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) {
  %865 = @func_3798() /* ty=Tensor[(14, 7, 12), float32] */;
  %866 = @func_3218() /* ty=Tensor[(14, 7, 12), float32] */;
  (%865, %866)
}

def @func_4738() -> Tensor[(605), float32] {
  %867 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %867.0
}

def @func_6101() -> (Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) {
  %868 = @func_5587() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %869 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %870 = @func_5954() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) */;
  %871 = @func_4028() /* ty=Tensor[(14, 7, 12), float32] */;
  %872 = cast(%871, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %873 = %868.1;
  %874 = %869.0;
  %875 = %870.3;
  %876 = asinh(%872) /* ty=Tensor[(14, 7, 12), float32] */;
  (%873, %874, %875, %876)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8037() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) {
  @func_8035() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */
}

def @func_3590(%var_3563: float64, %var_3564: Tensor[(14, 16, 1), float64]) -> (Tensor[(14, 16, 1), float64], Tensor[(15, 13, 6), bool], Tensor[(110), float64]) {
  %0 = cast(%var_3563, dtype="float64") /* ty=float64 */;
  %1 = cast(%var_3564, dtype="float64") /* ty=Tensor[(14, 16, 1), float64] */;
  %2 = cast(%var_3563, dtype="float64") /* ty=float64 */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %4 = reshape(%2, newshape=[]) /* ty=float64 */;
  %5 = reshape(%3, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %6 = @func_2802(%4, %5) /* ty=(Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) */;
  %7 = floor_mod(%0, %1) /* ty=Tensor[(14, 16, 1), float64] */;
  %8 = %6.5;
  (%7, %8, meta[relay.Constant][0] /* ty=Tensor[(110), float64] */)
}

def @func_9488(%var_9485: Tensor[(1, 105), float32], %var_9486: Tensor[(110), float64], %var_9487: Tensor[(16, 105), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(3, 7, 5), float32], Tensor[(22, 5), uint64], Tensor[(110), float64], Tensor[(16, 105), bool]) {
  %24 = fn (%var_9463: Tensor[(1, 105), float32], %var_9468: Tensor[(110), float64], %var_9479: Tensor[(16, 105), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(3, 7, 5), float32], Tensor[(22, 5), uint64], Tensor[(110), float64], Tensor[(16, 105), bool]) {
    %9 = @func_6185() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %10 = cast(%var_9463, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
    %11 = reshape(%10, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float32] */;
    %12 = @func_9103(%11) /* ty=(Tensor[(3, 7, 5), float32],) */;
    %13 = cast(%var_9468, dtype="float64") /* ty=Tensor[(110), float64] */;
    %14 = reshape(%13, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
    %15 = @func_8667(%14) /* ty=(Tensor[(22, 5), uint64],) */;
    %16 = cast(%var_9463, dtype="float64") /* ty=Tensor[(1, 105), float64] */;
    %17 = rsqrt(%16) /* ty=Tensor[(1, 105), float64] */;
    %18 = cast(%17, dtype="bool") /* ty=Tensor[(1, 105), bool] */;
    %19 = cast(%var_9479, dtype="bool") /* ty=Tensor[(16, 105), bool] */;
    %20 = %9.0;
    %21 = %12.0;
    %22 = %15.0;
    %23 = equal(%18, %19) /* ty=Tensor[(16, 105), bool] */;
    (%20, %21, %22, %var_9468, %23)
  };
  %24(%var_9485, %var_9486, %var_9487) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(3, 7, 5), float32], Tensor[(22, 5), uint64], Tensor[(110), float64], Tensor[(16, 105), bool]) */
}

def @func_4651() -> Tensor[(14, 7, 12), float32] {
  %26 = fn () -> Tensor[(14, 7, 12), float32] {
    %25 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
    %25.0
  };
  %26() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_2374() -> (Tensor[(14, 7, 12), float32],) {
  @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */
}

def @func_7019() -> (Tensor[(605), float32],) {
  %28 = fn () -> (Tensor[(605), float32],) {
    %27 = @func_4738() /* ty=Tensor[(605), float32] */;
    (%27,)
  };
  %28() /* ty=(Tensor[(605), float32],) */
}

def @func_8645() -> Tensor[(605), float32] {
  %29 = fn () -> Tensor[(605), float32] {
    @func_4738() /* ty=Tensor[(605), float32] */
  };
  %29() /* ty=Tensor[(605), float32] */
}

def @func_9963() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), bool]) {
  @func_9961() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), bool]) */
}

def @func_6270(%var_6243: Tensor[(14, 7, 12), float32]) -> Tensor[(14, 7, 12), bool] {
  %30 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %31 = %30.1;
  %32 = cast(%var_6243, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%31, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%34, %35) /* ty=Tensor[(14, 7, 12), bool] */
}

def @func_3594(%var_3592: float64, %var_3593: Tensor[(14, 16, 1), float64]) -> (Tensor[(14, 16, 1), float64], Tensor[(15, 13, 6), bool], Tensor[(110), float64]) {
  @func_3590(%var_3592, %var_3593) /* ty=(Tensor[(14, 16, 1), float64], Tensor[(15, 13, 6), bool], Tensor[(110), float64]) */
}

def @func_3143() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) {
  @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */
}

def @func_10091(%var_10089: float64, %var_10090: Tensor[(605, 1), float32]) -> (Tensor[(14, 7, 12), float64], Tensor[(1, 1, 10), float64], float64, Tensor[(588), int32], Tensor[(14, 7, 12), float32], Tensor[(605), int8], Tensor[(605, 10), bool]) {
  @func_10087(%var_10089, %var_10090) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(1, 1, 10), float64], float64, Tensor[(588), int32], Tensor[(14, 7, 12), float32], Tensor[(605), int8], Tensor[(605, 10), bool]) */
}

def @func_5343() -> Tensor[(14, 7, 12), float64] {
  @func_5341() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_7660() -> Tensor[(832), float64] {
  %36 = @func_5954() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) */;
  %36.3
}

def @func_4030() -> Tensor[(14, 7, 12), float32] {
  @func_4028() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_3301(%var_3299: Tensor[(80), float32], %var_3300: Tensor[(832), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(80), float32], Tensor[(832), float64]) {
  %44 = fn (%var_3291: Tensor[(80), float32], %var_3292: Tensor[(832), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(80), float32], Tensor[(832), float64]) {
    %37 = cast(%var_3291, dtype="float32") /* ty=Tensor[(80), float32] */;
    %38 = cast(%var_3292, dtype="float64") /* ty=Tensor[(832), float64] */;
    %39 = reshape(%37, newshape=[10, 2, 4]) /* ty=Tensor[(10, 2, 4), float32] */;
    %40 = reshape(%38, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
    %41 = @func_161(%39, %40) /* ty=(Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) */;
    %42 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
    %43 = %41.1;
    (%42, %43, %var_3291, %var_3292)
  };
  %44(%var_3299, %var_3300) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(80), float32], Tensor[(832), float64]) */
}

def @func_34(%var_32: Tensor[(13, 8, 8), float64]) -> (Tensor[(13, 8, 8), float64],) {
  @func_31(%var_32) /* ty=(Tensor[(13, 8, 8), float64],) */
}

def @func_6185() -> (Tensor[(14, 7, 12), float64],) {
  %45 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %46 = %45.0;
  (%46,)
}

def @func_2585(%var_2580: Tensor[(1760), float32], %var_2581: Tensor[(832), float64], %var_2582: float64, %var_2583: Tensor[(22, 5), float64], %var_2584: Tensor[(648), float32]) -> (Tensor[(10, 16, 11), uint64], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(832), float64], Tensor[(14, 7, 12), float32], Tensor[(15, 13, 6), bool], Tensor[(1170), int8], Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(14, 7, 12), float32]) {
  @func_2578(%var_2580, %var_2581, %var_2582, %var_2583, %var_2584) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(832), float64], Tensor[(14, 7, 12), float32], Tensor[(15, 13, 6), bool], Tensor[(1170), int8], Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(14, 7, 12), float32]) */
}

def @func_2694() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) {
  %47 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %48 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %50 = sin(%49) /* ty=Tensor[(14, 7, 12), float32] */;
  %51 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %52 = %51.0;
  %53 = cast(%48, dtype="uint64") /* ty=Tensor[(14, 7, 12), uint64] */;
  %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%52, dtype="uint64") /* ty=Tensor[(14, 7, 12), uint64] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %57 = multiply(%55, %56) /* ty=Tensor[(14, 7, 12), uint64] */;
  %58 = cast(%50, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%57, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %62 = greater(%60, %61) /* ty=Tensor[(14, 7, 12), bool] */;
  %63 = cast(%62, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %64 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%50, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %67 = %47.0;
  %68 = mod(%65, %66) /* ty=Tensor[(14, 7, 12), float32] */;
  (%67, %68)
}

def @func_6716() -> (Tensor[(14, 7, 12), float64], Tensor[(110), float64], float64, Tensor[(224), float64], Tensor[(14, 7, 12), float64]) {
  @func_6714() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(110), float64], float64, Tensor[(224), float64], Tensor[(14, 7, 12), float64]) */
}

def @func_5512(%var_5503: Tensor[(1, 1, 15), int16]) -> (Tensor[(1, 3, 15), bool],) {
  %69 = cast(%var_5503, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
  %70 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 3, 15), int16] */, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %71 = equal(%69, %70) /* ty=Tensor[(1, 3, 15), bool] */;
  (%71,)
}

def @func_7480() -> (Tensor[(14, 7, 12), float32],) {
  @func_7478() /* ty=(Tensor[(14, 7, 12), float32],) */
}

def @func_7817(%var_7815: Tensor[(16, 1, 4), float64], %var_7816: Tensor[(16, 3, 4), float64]) -> (Tensor[(16, 3, 4), float64], Tensor[(16, 3, 4), float64]) {
  @func_7813(%var_7815, %var_7816) /* ty=(Tensor[(16, 3, 4), float64], Tensor[(16, 3, 4), float64]) */
}

def @func_1778(%var_1776: Tensor[(9, 12, 6), float32], %var_1777: Tensor[(9, 12, 6), float32]) -> (Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) {
  %83 = fn (%var_1740: Tensor[(9, 12, 6), float32], %var_1746: Tensor[(9, 12, 6), float32]) -> (Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) {
    %72 = cast(%var_1740, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
    %73 = cosh(%72) /* ty=Tensor[(9, 12, 6), float32] */;
    %74 = cast(%var_1746, dtype="bool") /* ty=Tensor[(9, 12, 6), bool] */;
    %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
    %76 = cast(%73, dtype="bool") /* ty=Tensor[(9, 12, 6), bool] */;
    %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %78 = cast(meta[relay.Constant][2] /* ty=Tensor[(390, 3), int8] */, dtype="int8") /* ty=Tensor[(390, 3), int8] */;
    %79 = reshape(%78, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), int8] */;
    %80 = @func_1322(%79) /* ty=(Tensor[(15, 13, 6), bool],) */;
    %81 = logical_and(%76, %77) /* ty=Tensor[(9, 12, 6), bool] */;
    %82 = %80.0;
    (%81, %82, meta[relay.Constant][2] /* ty=Tensor[(390, 3), int8] */)
  };
  %83(%var_1776, %var_1777) /* ty=(Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) */
}

def @func_1917(%var_1852: Tensor[(10, 16, 11), float32]) -> (Tensor[(10, 16, 11), uint64], Tensor[(2, 416), float64], Tensor[(80, 1), float32], Tensor[(832), float64], Tensor[(10, 16, 11), float64], Tensor[(15, 13, 6), bool], Tensor[(1170), int8]) {
  %84 = cast(%var_1852, dtype="float32") /* ty=Tensor[(10, 16, 11), float32] */;
  %85 = erf(%84) /* ty=Tensor[(10, 16, 11), float32] */;
  %86 = cast(%var_1852, dtype="uint64") /* ty=Tensor[(10, 16, 11), uint64] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="uint64") /* ty=Tensor[(10, 16, 11), uint64] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %90 = cast(meta[relay.Constant][3] /* ty=Tensor[(80, 1), float32] */, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
  %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %92 = reshape(%90, newshape=[10, 2, 4]) /* ty=Tensor[(10, 2, 4), float32] */;
  %93 = reshape(%91, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
  %94 = @func_161(%92, %93) /* ty=(Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) */;
  %95 = cast(%85, dtype="float64") /* ty=Tensor[(10, 16, 11), float64] */;
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %97 = reshape(%96, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), int8] */;
  %98 = @func_1322(%97) /* ty=(Tensor[(15, 13, 6), bool],) */;
  %99 = multiply(%88, %89) /* ty=Tensor[(10, 16, 11), uint64] */;
  %100 = %94.2;
  %101 = sin(%95) /* ty=Tensor[(10, 16, 11), float64] */;
  %102 = %98.0;
  (%99, %100, meta[relay.Constant][3] /* ty=Tensor[(80, 1), float32] */, meta[relay.Constant][4] /* ty=Tensor[(832), float64] */, %101, %102, meta[relay.Constant][5] /* ty=Tensor[(1170), int8] */)
}

def @func_2390() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) {
  %108 = fn () -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) {
    %103 = @func_2335() /* ty=Tensor[(14, 7, 12), float64] */;
    %104 = cast(%103, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
    %105 = cast(%103, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
    %106 = acosh(%104) /* ty=Tensor[(14, 7, 12), float32] */;
    %107 = sqrt(%105) /* ty=Tensor[(14, 7, 12), float64] */;
    (%106, %107)
  };
  %108() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */
}

def @func_9106(%var_9104: Tensor[(3, 7, 5), float32]) -> (Tensor[(3, 7, 5), float32],) {
  @func_9103(%var_9104) /* ty=(Tensor[(3, 7, 5), float32],) */
}

def @func_5146() -> (Tensor[(22, 5), float64],) {
  @func_5144() /* ty=(Tensor[(22, 5), float64],) */
}

def @func_8462(%var_8460: Tensor[(14, 7, 12), float64]) -> Tensor[(14, 7, 12), int16] {
  @func_8459(%var_8460) /* ty=Tensor[(14, 7, 12), int16] */
}

def @func_6714() -> (Tensor[(14, 7, 12), float64], Tensor[(110), float64], float64, Tensor[(224), float64], Tensor[(14, 7, 12), float64]) {
  %109 = @func_5245() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %110 = cast(9.93696f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %111 = cast(meta[relay.Constant][6] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %112 = reshape(%110, newshape=[]) /* ty=float64 */;
  %113 = reshape(%111, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float64] */;
  %114 = @func_3590(%112, %113) /* ty=(Tensor[(14, 16, 1), float64], Tensor[(15, 13, 6), bool], Tensor[(110), float64]) */;
  %115 = %109.0;
  %116 = %114.2;
  %117 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  (%115, %116, 9.93696f64 /* ty=float64 */, meta[relay.Constant][6] /* ty=Tensor[(224), float64] */, %117)
}

def @func_7478() -> (Tensor[(14, 7, 12), float32],) {
  %118 = @func_5233() /* ty=Tensor[(14, 7, 12), float32] */;
  (%118,)
}

def @func_3791() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) {
  %119 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %120 = cast(meta[relay.Constant][7] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %121 = cast(meta[relay.Constant][7] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %122 = cast(meta[relay.Constant][7] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %123 = reshape(%120, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %124 = reshape(%121, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %125 = reshape(%122, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %126 = @func_3037(%123, %124, %125) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) */;
  %127 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %128 = %119.1;
  %129 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %130 = %126.8;
  (%127, %128, %129, %130, meta[relay.Constant][7] /* ty=Tensor[(605), float64] */)
}

def @func_9765(%var_9763: Tensor[(605), float32]) -> (Tensor[(605), int8], Tensor[(605), int64], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) {
  @func_9762(%var_9763) /* ty=(Tensor[(605), int8], Tensor[(605), int64], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) */
}

def @func_4473(%var_4433: Tensor[(14, 7, 12), float64]) -> (Tensor[(14, 7, 12), bool], Tensor[(5, 234), float64]) {
  %131 = @func_2184() /* ty=Tensor[(14, 7, 12), float64] */;
  %132 = cast(%var_4433, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%131, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %136 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 234), int8] */, dtype="int8") /* ty=Tensor[(5, 234), int8] */;
  %137 = reshape(%136, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), int8] */;
  %138 = @func_1322(%137) /* ty=(Tensor[(15, 13, 6), bool],) */;
  %139 = %138.0;
  %140 = cast(%139, dtype="float64") /* ty=Tensor[(15, 13, 6), float64] */;
  %141 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(5, 234), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %142 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 234), int8] */, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %144 = less(%134, %135) /* ty=Tensor[(14, 7, 12), bool] */;
  %145 = divide(%142, %143) /* ty=Tensor[(5, 234), float64] */;
  (%144, %145)
}

def @func_2874() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), uint16]) {
  @func_2872() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), uint16]) */
}

def @func_6622(%var_6570: Tensor[(832), float64], %var_6583: Tensor[(14, 7, 12), uint8]) -> (Tensor[(605), float32], Tensor[(80), float32], Tensor[(832), float64], Tensor[(14, 7, 12), bool], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float32], Tensor[(14, 7, 12), float64]) {
  %146 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %147 = @func_4564() /* ty=Tensor[(14, 7, 12), uint8] */;
  %148 = cast(%var_6583, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%147, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %152 = cast(%var_6570, dtype="float64") /* ty=Tensor[(832), float64] */;
  %153 = reshape(%152, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %154 = @func_4948(%153) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(40, 2), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) */;
  %155 = cast(meta[relay.Constant][9] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %156 = cast(%var_6570, dtype="float64") /* ty=Tensor[(832), float64] */;
  %157 = reshape(%155, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %158 = reshape(%156, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %159 = @func_3298(%157, %158) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(80), float32], Tensor[(832), float64]) */;
  %160 = %159.1;
  %161 = cast(%160, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  %162 = %146.0;
  %163 = logical_and(%150, %151) /* ty=Tensor[(14, 7, 12), bool] */;
  %164 = %154.0;
  %165 = acos(%161) /* ty=Tensor[(13, 8, 8), float32] */;
  %166 = @func_5784() /* ty=Tensor[(14, 7, 12), float64] */;
  (%162, meta[relay.Constant][9] /* ty=Tensor[(80), float32] */, %var_6570, %163, %164, %165, %166)
}

def @func_3037(%var_2977: Tensor[(605), float64], %var_2987: Tensor[(605), float64], %var_3032: Tensor[(605), float64]) -> (Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) {
  %167 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %168 = cast(%var_2977, dtype="float64") /* ty=Tensor[(605), float64] */;
  %169 = reshape(%168, newshape=[5, 11, 11]) /* ty=Tensor[(5, 11, 11), float64] */;
  %170 = cast(%var_2977, dtype="float64") /* ty=Tensor[(605), float64] */;
  %171 = cos(%170) /* ty=Tensor[(605), float64] */;
  %172 = cast(%var_2987, dtype="bool") /* ty=Tensor[(605), bool] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(1), int32] */;
  %174 = cast(%171, dtype="bool") /* ty=Tensor[(605), bool] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?), bool] */;
  %176 = cast(meta[relay.Constant][10] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %177 = reshape(%176, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %178 = cast(meta[relay.Constant][11] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %179 = cast(meta[relay.Constant][11] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %180 = reshape(%178, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %181 = reshape(%179, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %182 = @func_1775(%180, %181) /* ty=(Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) */;
  %183 = cast(%var_2987, dtype="float32") /* ty=Tensor[(605), float32] */;
  %184 = shape_of(%171, dtype="int32") /* ty=Tensor[(1), int32] */;
  %185 = cast(%171, dtype="float32") /* ty=Tensor[(605), float32] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?), float32] */;
  %187 = cast(%var_3032, dtype="float32") /* ty=Tensor[(605), float32] */;
  %188 = shape_of(%171, dtype="int32") /* ty=Tensor[(1), int32] */;
  %189 = cast(%171, dtype="float32") /* ty=Tensor[(605), float32] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?), float32] */;
  %191 = %167.0;
  %192 = @func_1798(%169) /* ty=Tensor[(5, 11, 11), float64] */;
  %193 = equal(%174, %175) /* ty=Tensor[(605), bool] */;
  %194 = @func_2397(%177) /* ty=Tensor[(14, 11, 6), float64] */;
  %195 = %182.2;
  %196 = floor_divide(%185, %186) /* ty=Tensor[(605), float32] */;
  %197 = floor_mod(%189, %190) /* ty=Tensor[(605), float32] */;
  (%191, %192, %193, %194, meta[relay.Constant][10] /* ty=Tensor[(924), float64] */, %195, meta[relay.Constant][11] /* ty=Tensor[(648), float32] */, %196, %197)
}

def @func_3793() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) {
  @func_3791() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) */
}

def @func_9923(%var_9919: Tensor[(13, 1, 13), float32]) -> (Tensor[(13, 1, 13), float32],) {
  %198 = cast(%var_9919, dtype="float32") /* ty=Tensor[(13, 1, 13), float32] */;
  %199 = atan(%198) /* ty=Tensor[(13, 1, 13), float32] */;
  (%199,)
}

def @func_7215() -> (Tensor[(605), float32],) {
  %200 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %201 = %200.0;
  (%201,)
}

def @func_6912(%var_6910: float64, %var_6911: Tensor[(1, 1, 10), float64]) -> Tensor[(1, 1, 10), float64] {
  %204 = fn (%var_6902: float64, %var_6903: Tensor[(1, 1, 10), float64]) -> Tensor[(1, 1, 10), float64] {
    %202 = cast(%var_6902, dtype="float64") /* ty=float64 */;
    %203 = cast(%var_6903, dtype="float64") /* ty=Tensor[(1, 1, 10), float64] */;
    divide(%202, %203) /* ty=Tensor[(1, 1, 10), float64] */
  };
  %204(%var_6910, %var_6911) /* ty=Tensor[(1, 1, 10), float64] */
}

def @func_4123() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) {
  %207 = fn () -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) {
    %205 = @func_3798() /* ty=Tensor[(14, 7, 12), float32] */;
    %206 = @func_3218() /* ty=Tensor[(14, 7, 12), float32] */;
    (%205, %206)
  };
  %207() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */
}

def @func_4740() -> Tensor[(605), float32] {
  @func_4738() /* ty=Tensor[(605), float32] */
}

def @func_2806(%var_2804: float64, %var_2805: Tensor[(110), float64]) -> (Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) {
  @func_2802(%var_2804, %var_2805) /* ty=(Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) */
}

def @func_4892() -> Tensor[(14, 7, 12), float64] {
  @func_4890() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_5786() -> Tensor[(14, 7, 12), float64] {
  @func_5784() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_3373(%var_3371: int32, %var_3372: Tensor[(14, 14, 3), int32]) -> Tensor[(14, 14, 3), int32] {
  @func_3369(%var_3371, %var_3372) /* ty=Tensor[(14, 14, 3), int32] */
}

def @func_8459(%var_8426: Tensor[(14, 7, 12), float64]) -> Tensor[(14, 7, 12), int16] {
  %208 = @func_3401() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %209 = %208.0;
  %210 = cast(%var_8426, dtype="int16") /* ty=Tensor[(14, 7, 12), int16] */;
  %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %212 = cast(%209, dtype="int16") /* ty=Tensor[(14, 7, 12), int16] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%212, %213) /* ty=Tensor[(14, 7, 12), int16] */
}

def @func_8035() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) {
  %214 = @func_3903() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %215 = %214.0;
  %216 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %217 = @func_5784() /* ty=Tensor[(14, 7, 12), float64] */;
  (%215, %216, %217)
}

def @func_3141() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) {
  %218 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %219 = %218.1;
  %220 = @func_2335() /* ty=Tensor[(14, 7, 12), float64] */;
  (%219, %220)
}

def @func_8670(%var_8668: Tensor[(22, 5), float64]) -> (Tensor[(22, 5), uint64],) {
  @func_8667(%var_8668) /* ty=(Tensor[(22, 5), uint64],) */
}

def @func_7973(%var_7964: Tensor[(605), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(605), int8]) {
  %221 = @func_3791() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) */;
  %222 = %221.4;
  %223 = cast(%var_7964, dtype="int8") /* ty=Tensor[(605), int8] */;
  %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(1), int32] */;
  %225 = cast(%222, dtype="int8") /* ty=Tensor[(605), int8] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?), int8] */;
  %227 = @func_5341() /* ty=Tensor[(14, 7, 12), float64] */;
  %228 = bitwise_xor(%225, %226) /* ty=Tensor[(605), int8] */;
  (%227, %228)
}

def @func_1322(%var_1297: Tensor[(15, 13, 6), int8]) -> (Tensor[(15, 13, 6), bool],) {
  %229 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 13, 6), int8] */, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %230 = shape_of(%var_1297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%var_1297, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %233 = equal(%231, %232) /* ty=Tensor[(15, 13, 6), bool] */;
  %234 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 13, 6), int8] */, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %235 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%233, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %238 = not_equal(%236, %237) /* ty=Tensor[(15, 13, 6), bool] */;
  (%238,)
}

def @func_1325(%var_1323: Tensor[(15, 13, 6), int8]) -> (Tensor[(15, 13, 6), bool],) {
  @func_1322(%var_1323) /* ty=(Tensor[(15, 13, 6), bool],) */
}

def @func_6473() -> (Tensor[(3, 11, ?), float32], Tensor[(14, 7, 12), float64]) {
  %250 = fn () -> (Tensor[(3, 11, ?), float32], Tensor[(14, 7, 12), float64]) {
    %239 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 11, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 1), float64] */;
    %240 = log2(%239) /* ty=Tensor[(3, 11, 1), float64] */;
    %241 = cast(%240, dtype="float64") /* ty=Tensor[(3, 11, 1), float64] */;
    %242 = atanh(%241) /* ty=Tensor[(3, 11, 1), float64] */;
    %243 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 11, 1), float64] */, dtype="float32") /* ty=Tensor[(3, 11, 1), float32] */;
    %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %245 = cast(%242, dtype="float32") /* ty=Tensor[(3, 11, 1), float32] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %247 = @func_3401() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %248 = floor_divide(%245, %246) /* ty=Tensor[(3, 11, ?), float32] */;
    %249 = %247.0;
    (%248, %249)
  };
  %250() /* ty=(Tensor[(3, 11, ?), float32], Tensor[(14, 7, 12), float64]) */
}

def @func_6548() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(9, 4, 8), int32], int32, Tensor[(288), int32], Tensor[(14, 7, 12), float32], Tensor[(605), float32]) {
  @func_6546() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(9, 4, 8), int32], int32, Tensor[(288), int32], Tensor[(14, 7, 12), float32], Tensor[(605), float32]) */
}

def @func_6320() -> (Tensor[(14, 7, 12), bool],) {
  %251 = @func_4294() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %252 = %251.0;
  %253 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %254 = %253.0;
  %255 = cast(%254, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %256 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%252, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %259 = equal(%257, %258) /* ty=Tensor[(14, 7, 12), bool] */;
  (%259,)
}

def @func_3091() -> Tensor[(14, 7, 12), float64] {
  %260 = @func_2184() /* ty=Tensor[(14, 7, 12), float64] */;
  %261 = cast(%260, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  log(%261) /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_5234() -> Tensor[(14, 7, 12), float32] {
  %262 = fn () -> Tensor[(14, 7, 12), float32] {
    @func_4650() /* ty=Tensor[(14, 7, 12), float32] */
  };
  %262() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_5341() -> Tensor[(14, 7, 12), float64] {
  %263 = @func_3903() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %263.0
}

def @func_7342() -> (Tensor[(10, 8, 9), float64],) {
  @func_7340() /* ty=(Tensor[(10, 8, 9), float64],) */
}

def @func_4109(%var_4108: Tensor[(13, 3, 13), float32]) -> Tensor[(13, 3, 13), float32] {
  %269 = fn (%var_4083: Tensor[(13, 3, 13), float32]) -> Tensor[(13, 3, 13), float32] {
    %264 = cast(%var_4083, dtype="float32") /* ty=Tensor[(13, 3, 13), float32] */;
    %265 = cos(%264) /* ty=Tensor[(13, 3, 13), float32] */;
    %266 = cast(%265, dtype="float32") /* ty=Tensor[(13, 3, 13), float32] */;
    %267 = cosh(%266) /* ty=Tensor[(13, 3, 13), float32] */;
    %268 = cast(%267, dtype="float32") /* ty=Tensor[(13, 3, 13), float32] */;
    atan(%268) /* ty=Tensor[(13, 3, 13), float32] */
  };
  %269(%var_4108) /* ty=Tensor[(13, 3, 13), float32] */
}

def @func_9273() -> Tensor[(14, 7, 12), float32] {
  %270 = @func_4906() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %270.0
}

def @func_5955() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) {
  %277 = fn () -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) {
    %271 = cast(meta[relay.Constant][14] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
    %272 = reshape(%271, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
    %273 = @func_31(%272) /* ty=(Tensor[(13, 8, 8), float64],) */;
    %274 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
    %275 = @func_5233() /* ty=Tensor[(14, 7, 12), float32] */;
    %276 = %273.0;
    (%274, %275, %276, meta[relay.Constant][14] /* ty=Tensor[(832), float64] */)
  };
  %277() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) */
}

def @func_164(%var_162: Tensor[(10, 2, 4), float32], %var_163: Tensor[(2, 416), float64]) -> (Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) {
  %296 = fn (%var_124: Tensor[(10, 2, 4), float32], %var_149: Tensor[(2, 416), float64]) -> (Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) {
    %278 = cast(%var_124, dtype="float32") /* ty=Tensor[(10, 2, 4), float32] */;
    %279 = sin(%278) /* ty=Tensor[(10, 2, 4), float32] */;
    %280 = cast(%279, dtype="float32") /* ty=Tensor[(10, 2, 4), float32] */;
    %281 = atan(%280) /* ty=Tensor[(10, 2, 4), float32] */;
    %282 = cast(%281, dtype="bool") /* ty=Tensor[(10, 2, 4), bool] */;
    %283 = shape_of(%279, dtype="int32") /* ty=Tensor[(3), int32] */;
    %284 = cast(%279, dtype="bool") /* ty=Tensor[(10, 2, 4), bool] */;
    %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %286 = cast(%var_149, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
    %287 = reshape(%286, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
    %288 = @func_31(%287) /* ty=(Tensor[(13, 8, 8), float64],) */;
    %289 = cast(%279, dtype="uint16") /* ty=Tensor[(10, 2, 4), uint16] */;
    %290 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
    %291 = cast(%281, dtype="uint16") /* ty=Tensor[(10, 2, 4), uint16] */;
    %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %293 = greater_equal(%284, %285) /* ty=Tensor[(10, 2, 4), bool] */;
    %294 = %288.0;
    %295 = maximum(%291, %292) /* ty=Tensor[(10, 2, 4), uint16] */;
    (%293, %294, %var_149, %295)
  };
  %296(%var_162, %var_163) /* ty=(Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) */
}

def @func_8069(%var_8068: Tensor[(14, 7, 12), float64]) -> (Tensor[(14, 7, 12), int8],) {
  %303 = fn (%var_8054: Tensor[(14, 7, 12), float64]) -> (Tensor[(14, 7, 12), int8],) {
    %297 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
    %298 = cast(%var_8054, dtype="int8") /* ty=Tensor[(14, 7, 12), int8] */;
    %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
    %300 = cast(%297, dtype="int8") /* ty=Tensor[(14, 7, 12), int8] */;
    %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %302 = logical_xor(%300, %301) /* ty=Tensor[(14, 7, 12), int8] */;
    (%302,)
  };
  %303(%var_8068) /* ty=(Tensor[(14, 7, 12), int8],) */
}

def @func_7467(%var_7466: int32) -> (Tensor[(14, 7, 12), int64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32]) {
  %318 = fn (%var_7448: int32) -> (Tensor[(14, 7, 12), int64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32]) {
    %304 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
    %305 = %304.0;
    %306 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
    %307 = %306.0;
    %308 = cast(%307, dtype="int64") /* ty=Tensor[(14, 7, 12), int64] */;
    %309 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
    %310 = cast(%305, dtype="int64") /* ty=Tensor[(14, 7, 12), int64] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %312 = cast(%var_7448, dtype="int32") /* ty=int32 */;
    %313 = cast(meta[relay.Constant][15] /* ty=Tensor[(588), int32] */, dtype="int32") /* ty=Tensor[(588), int32] */;
    %314 = reshape(%312, newshape=[]) /* ty=int32 */;
    %315 = reshape(%313, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), int32] */;
    %316 = bitwise_and(%310, %311) /* ty=Tensor[(14, 7, 12), int64] */;
    %317 = @func_3369(%314, %315) /* ty=Tensor[(14, 14, 3), int32] */;
    (%316, %317, %var_7448, meta[relay.Constant][15] /* ty=Tensor[(588), int32] */)
  };
  %318(%var_7466) /* ty=(Tensor[(14, 7, 12), int64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32]) */
}

def @func_5068() -> (Tensor[(605), float32], Tensor[(14, 7, 12), float64], Tensor[(1760), float32], Tensor[(1, 832), float64], Tensor[(110), float64], Tensor[(14, 7, 12), float32]) {
  %319 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %320 = cast(meta[relay.Constant][16] /* ty=Tensor[(1760), float32] */, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %321 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 832), float64] */, dtype="float64") /* ty=Tensor[(1, 832), float64] */;
  %322 = cast(meta[relay.Constant][18] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %323 = reshape(%320, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
  %324 = reshape(%321, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
  %325 = reshape(%322, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %326 = @func_4405(%323, %324, %325) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], float64, Tensor[(110), float64], Tensor[(648), float32], Tensor[(2, 416), uint64]) */;
  %327 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %328 = %319.0;
  %329 = %326.0;
  %330 = %327.0;
  (%328, %329, meta[relay.Constant][16] /* ty=Tensor[(1760), float32] */, meta[relay.Constant][17] /* ty=Tensor[(1, 832), float64] */, meta[relay.Constant][18] /* ty=Tensor[(110), float64] */, %330)
}

def @func_6169() -> Tensor[(14, 7, 12), float64] {
  %332 = fn () -> Tensor[(14, 7, 12), float64] {
    %331 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
    %331.0
  };
  %332() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_9204() -> Tensor[(832), float64] {
  %333 = fn () -> Tensor[(832), float64] {
    @func_7660() /* ty=Tensor[(832), float64] */
  };
  %333() /* ty=Tensor[(832), float64] */
}

def @func_6375(%var_6373: float32, %var_6374: Tensor[(13, 3, 10), float32]) -> (Tensor[(13, 3, 10), bool], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) {
  %344 = fn (%var_6328: float32, %var_6329: Tensor[(13, 3, 10), float32]) -> (Tensor[(13, 3, 10), bool], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) {
    %334 = cast(%var_6328, dtype="float32") /* ty=float32 */;
    %335 = cast(%var_6329, dtype="float32") /* ty=Tensor[(13, 3, 10), float32] */;
    %336 = power(%334, %335) /* ty=Tensor[(13, 3, 10), float32] */;
    %337 = cast(%336, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
    %338 = cast(%var_6328, dtype="bool") /* ty=bool */;
    %339 = @func_5068() /* ty=(Tensor[(605), float32], Tensor[(14, 7, 12), float64], Tensor[(1760), float32], Tensor[(1, 832), float64], Tensor[(110), float64], Tensor[(14, 7, 12), float32]) */;
    %340 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
    %341 = greater(%337, %338) /* ty=Tensor[(13, 3, 10), bool] */;
    %342 = %339.0;
    %343 = %340.1;
    (%341, %342, %343)
  };
  %344(%var_6373, %var_6374) /* ty=(Tensor[(13, 3, 10), bool], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) */
}

def @func_4925() -> (Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64]) {
  %345 = cast(6.75956f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %346 = cast(meta[relay.Constant][19] /* ty=Tensor[(22, 5), float64] */, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %347 = reshape(%345, newshape=[]) /* ty=float64 */;
  %348 = reshape(%346, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %349 = @func_2802(%347, %348) /* ty=(Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) */;
  %350 = cast(meta[relay.Constant][19] /* ty=Tensor[(22, 5), float64] */, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %351 = @func_4890() /* ty=Tensor[(14, 7, 12), float64] */;
  %352 = %349.0;
  %353 = sqrt(%350) /* ty=Tensor[(22, 5), float64] */;
  (%351, %352, 6.75956f64 /* ty=float64 */, %353)
}

def @func_9838() -> Tensor[(14, 7, 12), float32] {
  @func_9836() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_4951(%var_4949: Tensor[(832), float64]) -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(40, 2), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) {
  @func_4948(%var_4949) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(40, 2), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) */
}

def @func_8386() -> Tensor[(14, 7, 12), uint8] {
  @func_8384() /* ty=Tensor[(14, 7, 12), uint8] */
}

def @func_5475(%var_5470: Tensor[(12, 8, 6), int64]) -> (Tensor[(12, 8, 6), bool],) {
  %354 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 8, 6), int64] */, dtype="bool") /* ty=Tensor[(12, 8, 6), bool] */;
  %355 = shape_of(%var_5470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_5470, dtype="bool") /* ty=Tensor[(12, 8, 6), bool] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %358 = less_equal(%356, %357) /* ty=Tensor[(12, 8, 6), bool] */;
  (%358,)
}

def @func_2335() -> Tensor[(14, 7, 12), float64] {
  @func_2184() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_3932(%var_3931: Tensor[(14, 7, 12), float64]) -> (Tensor[(14, 7, 12), float32],) {
  %366 = fn (%var_3909: Tensor[(14, 7, 12), float64]) -> (Tensor[(14, 7, 12), float32],) {
    %359 = @func_3532() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %360 = %359.0;
    %361 = cast(%var_3909, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
    %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(3), int32] */;
    %363 = cast(%360, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
    %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %365 = power(%363, %364) /* ty=Tensor[(14, 7, 12), float32] */;
    (%365,)
  };
  %366(%var_3931) /* ty=(Tensor[(14, 7, 12), float32],) */
}

def @func_7054() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), bool]) {
  %367 = @func_5587() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %368 = %367.2;
  %369 = cast(%368, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %370 = reshape(%369, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), float32] */;
  %371 = @func_6270(%370) /* ty=Tensor[(14, 7, 12), bool] */;
  (%368, %371)
}

def @func_2696() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) {
  @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */
}

def @func_9709() -> (Tensor[(605), float32],) {
  @func_9707() /* ty=(Tensor[(605), float32],) */
}

def @func_8374() -> (Tensor[(14, 7, 12), float64],) {
  @func_8372() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_4405(%var_4369: Tensor[(1760), float32], %var_4370: Tensor[(2, 416), float64], %var_4372: Tensor[(110), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], float64, Tensor[(110), float64], Tensor[(648), float32], Tensor[(2, 416), uint64]) {
  %372 = cast(%var_4369, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %373 = cast(%var_4370, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
  %374 = cast(-8.19607f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %375 = cast(%var_4372, dtype="float64") /* ty=Tensor[(110), float64] */;
  %376 = cast(meta[relay.Constant][21] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %377 = reshape(%372, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
  %378 = reshape(%373, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %379 = reshape(%374, newshape=[]) /* ty=float64 */;
  %380 = reshape(%375, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
  %381 = reshape(%376, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %382 = @func_2578(%377, %378, %379, %380, %381) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(832), float64], Tensor[(14, 7, 12), float32], Tensor[(15, 13, 6), bool], Tensor[(1170), int8], Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(14, 7, 12), float32]) */;
  %383 = cast(%var_4370, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
  %384 = reshape(%383, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %385 = @func_31(%384) /* ty=(Tensor[(13, 8, 8), float64],) */;
  %386 = %385.0;
  %387 = cast(%386, dtype="uint64") /* ty=Tensor[(13, 8, 8), uint64] */;
  %388 = shape_of(%var_4370, dtype="int32") /* ty=Tensor[(2), int32] */;
  %389 = cast(%var_4370, dtype="uint64") /* ty=Tensor[(2, 416), uint64] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %391 = @func_2184() /* ty=Tensor[(14, 7, 12), float64] */;
  %392 = @func_3475() /* ty=Tensor[(14, 7, 12), float32] */;
  %393 = %382.6;
  %394 = right_shift(%389, %390) /* ty=Tensor[(2, 416), uint64] */;
  (%391, %392, %393, %var_4369, -8.19607f64 /* ty=float64 */, %var_4372, meta[relay.Constant][21] /* ty=Tensor[(648), float32] */, %394)
}

def @func_6649(%var_6648: Tensor[(1, 14, 3), float32]) -> Tensor[(1, 14, 3), float32] {
  %396 = fn (%var_6644: Tensor[(1, 14, 3), float32]) -> Tensor[(1, 14, 3), float32] {
    %395 = cast(%var_6644, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
    sigmoid(%395) /* ty=Tensor[(1, 14, 3), float32] */
  };
  %396(%var_6648) /* ty=Tensor[(1, 14, 3), float32] */
}

def @func_9275() -> Tensor[(14, 7, 12), float32] {
  @func_9273() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_7645(%var_7643: float64) -> (Tensor[(5, 2, 11), float64], float64, Tensor[(1, 110), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), uint16]) {
  @func_7642(%var_7643) /* ty=(Tensor[(5, 2, 11), float64], float64, Tensor[(1, 110), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), uint16]) */
}

def @func_3169() -> Tensor[(14, 7, 12), float64] {
  %398 = fn () -> Tensor[(14, 7, 12), float64] {
    %397 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
    %397.0
  };
  %398() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_5447() -> Tensor[(14, 7, 12), float32] {
  %399 = fn () -> Tensor[(14, 7, 12), float32] {
    @func_3798() /* ty=Tensor[(14, 7, 12), float32] */
  };
  %399() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_7121() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) {
  @func_7119() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) */
}

def @func_3402() -> (Tensor[(14, 7, 12), float64],) {
  %401 = fn () -> (Tensor[(14, 7, 12), float64],) {
    %400 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
    (%400,)
  };
  %401() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_8507() -> (Tensor[(14, 7, 12), uint8], Tensor[(924), float64], Tensor[(605), float64]) {
  %402 = cast(meta[relay.Constant][22] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %403 = cast(meta[relay.Constant][22] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %404 = cast(meta[relay.Constant][22] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %405 = reshape(%402, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %406 = reshape(%403, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %407 = reshape(%404, newshape=[605]) /* ty=Tensor[(605), float64] */;
  %408 = @func_3037(%405, %406, %407) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) */;
  %409 = @func_4564() /* ty=Tensor[(14, 7, 12), uint8] */;
  %410 = %408.4;
  (%409, %410, meta[relay.Constant][22] /* ty=Tensor[(605), float64] */)
}

def @func_7520() -> Tensor[(14, 7, 12), float64] {
  %412 = fn () -> Tensor[(14, 7, 12), float64] {
    %411 = @func_3903() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %411.0
  };
  %412() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_9103(%var_9093: Tensor[(3, 7, 5), float32]) -> (Tensor[(3, 7, 5), float32],) {
  %413 = cast(%var_9093, dtype="float32") /* ty=Tensor[(3, 7, 5), float32] */;
  %414 = acos(%413) /* ty=Tensor[(3, 7, 5), float32] */;
  (%414,)
}

def @func_2836() -> (Tensor[(14, 7, 12), float32],) {
  %415 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %416 = %415.0;
  (%416,)
}

def @func_2184() -> Tensor[(14, 7, 12), float64] {
  %417 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %418 = cast(%417, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  erf(%418) /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_4295() -> (Tensor[(14, 7, 12), float64],) {
  %421 = fn () -> (Tensor[(14, 7, 12), float64],) {
    %419 = @func_3532() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %420 = %419.0;
    (%420,)
  };
  %421() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_2578(%var_2472: Tensor[(1760), float32], %var_2524: Tensor[(832), float64], %var_2561: float64, %var_2562: Tensor[(22, 5), float64], %var_2565: Tensor[(648), float32]) -> (Tensor[(10, 16, 11), uint64], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(832), float64], Tensor[(14, 7, 12), float32], Tensor[(15, 13, 6), bool], Tensor[(1170), int8], Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(14, 7, 12), float32]) {
  %422 = cast(%var_2472, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %423 = reshape(%422, newshape=[10, 16, 11]) /* ty=Tensor[(10, 16, 11), float32] */;
  %424 = @func_1917(%423) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(2, 416), float64], Tensor[(80, 1), float32], Tensor[(832), float64], Tensor[(10, 16, 11), float64], Tensor[(15, 13, 6), bool], Tensor[(1170), int8]) */;
  %425 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %426 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %427 = cast(%426, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %428 = cosh(%427) /* ty=Tensor[(14, 7, 12), float32] */;
  %429 = cast(%428, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %430 = cos(%429) /* ty=Tensor[(14, 7, 12), float64] */;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %432 = asin(%431) /* ty=Tensor[(14, 7, 12), float32] */;
  %433 = cast(%426, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%432, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %437 = cast(%var_2524, dtype="float64") /* ty=Tensor[(832), float64] */;
  %438 = reshape(%437, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %439 = @func_31(%438) /* ty=(Tensor[(13, 8, 8), float64],) */;
  %440 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %441 = cast(meta[relay.Constant][23] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %442 = reshape(%441, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), int8] */;
  %443 = @func_1322(%442) /* ty=(Tensor[(15, 13, 6), bool],) */;
  %444 = cast(%var_2561, dtype="float64") /* ty=float64 */;
  %445 = cast(%var_2562, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %446 = reshape(%444, newshape=[]) /* ty=float64 */;
  %447 = reshape(%445, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
  %448 = cast(%var_2565, dtype="float32") /* ty=Tensor[(648), float32] */;
  %449 = cast(%var_2565, dtype="float32") /* ty=Tensor[(648), float32] */;
  %450 = reshape(%448, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %451 = reshape(%449, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %452 = @func_1775(%450, %451) /* ty=(Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) */;
  %453 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %454 = %424.0;
  %455 = %425.1;
  %456 = floor_mod(%435, %436) /* ty=Tensor[(14, 7, 12), float64] */;
  %457 = %439.0;
  %458 = %440.0;
  %459 = %443.0;
  %460 = @func_2184() /* ty=Tensor[(14, 7, 12), float64] */;
  %461 = @func_2258(%446, %447) /* ty=Tensor[(5, 2, 11), float64] */;
  %462 = %452.2;
  %463 = %453.0;
  (%454, %var_2472, %455, %456, %457, %var_2524, %458, %459, meta[relay.Constant][23] /* ty=Tensor[(1170), int8] */, %460, %461, %var_2561, %var_2562, %462, %var_2565, %463)
}

def @func_9699() -> Tensor[(14, 7, 12), float64] {
  %464 = fn () -> Tensor[(14, 7, 12), float64] {
    @func_6168() /* ty=Tensor[(14, 7, 12), float64] */
  };
  %464() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_7642(%var_7604: float64) -> (Tensor[(5, 2, 11), float64], float64, Tensor[(1, 110), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), uint16]) {
  %465 = cast(%var_7604, dtype="float64") /* ty=float64 */;
  %466 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 110), float64] */, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
  %467 = reshape(%465, newshape=[]) /* ty=float64 */;
  %468 = reshape(%466, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
  %469 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
  %470 = cast(%469, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
  %471 = @func_2872() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), uint16]) */;
  %472 = @func_2258(%467, %468) /* ty=Tensor[(5, 2, 11), float64] */;
  %473 = atanh(%470) /* ty=Tensor[(14, 7, 12), float64] */;
  %474 = %471.1;
  (%472, %var_7604, meta[relay.Constant][24] /* ty=Tensor[(1, 110), float64] */, %473, %474)
}

def @func_7976(%var_7974: Tensor[(605), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(605), int8]) {
  @func_7973(%var_7974) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(605), int8]) */
}

def @func_5246() -> (Tensor[(14, 7, 12), float64],) {
  %476 = fn () -> (Tensor[(14, 7, 12), float64],) {
    %475 = @func_4773() /* ty=Tensor[(14, 7, 12), float64] */;
    (%475,)
  };
  %476() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_3798() -> Tensor[(14, 7, 12), float32] {
  %477 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %477.0
}

def @func_8384() -> Tensor[(14, 7, 12), uint8] {
  @func_4564() /* ty=Tensor[(14, 7, 12), uint8] */
}

def @func_4774() -> Tensor[(14, 7, 12), float64] {
  %479 = fn () -> Tensor[(14, 7, 12), float64] {
    %478 = @func_3532() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %478.0
  };
  %479() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_5866() -> Tensor[(14, 7, 12), bool] {
  @func_5864() /* ty=Tensor[(14, 7, 12), bool] */
}

def @func_8349() -> Tensor[(14, 7, 12), float64] {
  @func_8347() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_8619(%var_8618: Tensor[(1760), float32]) -> (Tensor[(22, 5), float64], Tensor[(15, 13, 6), bool], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(588), int32], Tensor[(104, 8), float64]) {
  %497 = fn (%var_8597: Tensor[(1760), float32]) -> (Tensor[(22, 5), float64], Tensor[(15, 13, 6), bool], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(588), int32], Tensor[(104, 8), float64]) {
    %480 = @func_5144() /* ty=(Tensor[(22, 5), float64],) */;
    %481 = cast(%var_8597, dtype="float32") /* ty=Tensor[(1760), float32] */;
    %482 = reshape(%481, newshape=[10, 16, 11]) /* ty=Tensor[(10, 16, 11), float32] */;
    %483 = @func_1917(%482) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(2, 416), float64], Tensor[(80, 1), float32], Tensor[(832), float64], Tensor[(10, 16, 11), float64], Tensor[(15, 13, 6), bool], Tensor[(1170), int8]) */;
    %484 = @func_6101() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) */;
    %485 = cast(%var_8597, dtype="float32") /* ty=Tensor[(1760), float32] */;
    %486 = cast(meta[relay.Constant][25] /* ty=Tensor[(104, 8), float64] */, dtype="float64") /* ty=Tensor[(104, 8), float64] */;
    %487 = %480.0;
    %488 = cast(%487, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
    %489 = reshape(%485, newshape=[1760, 1]) /* ty=Tensor[(1760, 1), float32] */;
    %490 = reshape(%486, newshape=[832, 1]) /* ty=Tensor[(832, 1), float64] */;
    %491 = reshape(%488, newshape=[110]) /* ty=Tensor[(110), float64] */;
    %492 = @func_3701(%489, %490, %491) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32], Tensor[(832), float64], Tensor[(1760, 1), float32], Tensor[(832, 1), float64], Tensor[(110), float64], Tensor[(648), float32]) */;
    %493 = %483.5;
    %494 = @func_4773() /* ty=Tensor[(14, 7, 12), float64] */;
    %495 = %484.3;
    %496 = %492.3;
    (%487, %493, %var_8597, %494, %495, %496, meta[relay.Constant][25] /* ty=Tensor[(104, 8), float64] */)
  };
  %497(%var_8618) /* ty=(Tensor[(22, 5), float64], Tensor[(15, 13, 6), bool], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(588), int32], Tensor[(104, 8), float64]) */
}

def @func_8925() -> Tensor[(14, 7, 12), float64] {
  %499 = fn () -> Tensor[(14, 7, 12), float64] {
    %498 = @func_5587() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
    %498.0
  };
  %499() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_5398(%var_5396: int32, %var_5397: Tensor[(9, 4, 8), int32]) -> (Tensor[(9, 4, 8), int32],) {
  %503 = fn (%var_5390: int32, %var_5391: Tensor[(9, 4, 8), int32]) -> (Tensor[(9, 4, 8), int32],) {
    %500 = cast(%var_5390, dtype="int32") /* ty=int32 */;
    %501 = cast(%var_5391, dtype="int32") /* ty=Tensor[(9, 4, 8), int32] */;
    %502 = bitwise_or(%500, %501) /* ty=Tensor[(9, 4, 8), int32] */;
    (%502,)
  };
  %503(%var_5396, %var_5397) /* ty=(Tensor[(9, 4, 8), int32],) */
}

def @func_6102() -> (Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) {
  %513 = fn () -> (Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) {
    %504 = @func_5587() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
    %505 = @func_4259() /* ty=(Tensor[(605), float32],) */;
    %506 = @func_5954() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) */;
    %507 = @func_4028() /* ty=Tensor[(14, 7, 12), float32] */;
    %508 = cast(%507, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
    %509 = %504.1;
    %510 = %505.0;
    %511 = %506.3;
    %512 = asinh(%508) /* ty=Tensor[(14, 7, 12), float32] */;
    (%509, %510, %511, %512)
  };
  %513() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) */
}

def @func_8807() -> Tensor[(14, 7, 12), float64] {
  %514 = fn () -> Tensor[(14, 7, 12), float64] {
    @func_2101() /* ty=Tensor[(14, 7, 12), float64] */
  };
  %514() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_3117(%var_3109: Tensor[(14, 7, 12), float64]) -> Tensor[(14, 7, 12), float32] {
  %515 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %516 = cast(%var_3109, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%515, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%518, %519) /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_2186() -> Tensor[(14, 7, 12), float64] {
  @func_2184() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_3903() -> (Tensor[(14, 7, 12), float64],) {
  %520 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %521 = %520.0;
  (%521,)
}

def @func_2838() -> (Tensor[(14, 7, 12), float32],) {
  @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */
}

def @func_4890() -> Tensor[(14, 7, 12), float64] {
  %522 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %522.0
}

def @func_3369(%var_3343: int32, %var_3344: Tensor[(14, 14, 3), int32]) -> Tensor[(14, 14, 3), int32] {
  %523 = cast(%var_3343, dtype="int32") /* ty=int32 */;
  %524 = cast(%var_3344, dtype="int32") /* ty=Tensor[(14, 14, 3), int32] */;
  multiply(%523, %524) /* ty=Tensor[(14, 14, 3), int32] */
}

def @func_9393() -> (Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(14, 7, 12), float32]) {
  %530 = fn () -> (Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(14, 7, 12), float32]) {
    %525 = @func_7478() /* ty=(Tensor[(14, 7, 12), float32],) */;
    %526 = @func_7215() /* ty=(Tensor[(605), float32],) */;
    %527 = %525.0;
    %528 = %526.0;
    %529 = @func_9273() /* ty=Tensor[(14, 7, 12), float32] */;
    (%527, %528, %529)
  };
  %530() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(14, 7, 12), float32]) */
}

def @func_10087(%var_10018: float64, %var_10079: Tensor[(605, 1), float32]) -> (Tensor[(14, 7, 12), float64], Tensor[(1, 1, 10), float64], float64, Tensor[(588), int32], Tensor[(14, 7, 12), float32], Tensor[(605), int8], Tensor[(605, 10), bool]) {
  %531 = @func_8372() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %532 = cast(%var_10018, dtype="float64") /* ty=float64 */;
  %533 = cast(meta[relay.Constant][26] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %534 = reshape(%532, newshape=[]) /* ty=float64 */;
  %535 = reshape(%533, newshape=[1, 1, 10]) /* ty=Tensor[(1, 1, 10), float64] */;
  %536 = cast(%var_10018, dtype="int32") /* ty=int32 */;
  %537 = reshape(%536, newshape=[]) /* ty=int32 */;
  %538 = @func_7465(%537) /* ty=(Tensor[(14, 7, 12), int64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32]) */;
  %539 = cast(%var_10079, dtype="float32") /* ty=Tensor[(605, 1), float32] */;
  %540 = reshape(%539, newshape=[605]) /* ty=Tensor[(605), float32] */;
  %541 = @func_9762(%540) /* ty=(Tensor[(605), int8], Tensor[(605), int64], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) */;
  %542 = cast(meta[relay.Constant][26] /* ty=Tensor[(10), float64] */, dtype="bool") /* ty=Tensor[(10), bool] */;
  %543 = cast(%var_10079, dtype="bool") /* ty=Tensor[(605, 1), bool] */;
  %544 = %531.0;
  %545 = @func_6909(%534, %535) /* ty=Tensor[(1, 1, 10), float64] */;
  %546 = %538.3;
  %547 = @func_4650() /* ty=Tensor[(14, 7, 12), float32] */;
  %548 = %541.0;
  %549 = greater(%542, %543) /* ty=Tensor[(605, 10), bool] */;
  (%544, %545, %var_10018, %546, %547, %548, %549)
}

def @func_9678(%var_9677: int32) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), int64], int32) {
  %558 = fn (%var_9669: int32) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), int64], int32) {
    %550 = @func_6185() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %551 = @func_7119() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) */;
    %552 = cast(%var_9669, dtype="int32") /* ty=int32 */;
    %553 = reshape(%552, newshape=[]) /* ty=int32 */;
    %554 = @func_7465(%553) /* ty=(Tensor[(14, 7, 12), int64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32]) */;
    %555 = %550.0;
    %556 = %551.0;
    %557 = %554.0;
    (%555, %556, %557, %var_9669)
  };
  %558(%var_9677) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), int64], int32) */
}

def @func_3533() -> (Tensor[(14, 7, 12), float64],) {
  %560 = fn () -> (Tensor[(14, 7, 12), float64],) {
    %559 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
    (%559,)
  };
  %560() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_6187() -> (Tensor[(14, 7, 12), float64],) {
  @func_6185() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_6273(%var_6271: Tensor[(14, 7, 12), float32]) -> Tensor[(14, 7, 12), bool] {
  @func_6270(%var_6271) /* ty=Tensor[(14, 7, 12), bool] */
}

def @func_9324() -> Tensor[(14, 7, 12), float64] {
  @func_9322() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_9961() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), bool]) {
  %561 = @func_9392() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(14, 7, 12), float32]) */;
  %562 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %565 = reshape(%564, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), float32] */;
  %566 = %561.2;
  %567 = @func_6270(%565) /* ty=Tensor[(14, 7, 12), bool] */;
  (%566, %563, %567)
}

def @func_4927() -> (Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64]) {
  @func_4925() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64]) */
}

def @func_2258(%var_2248: float64, %var_2249: Tensor[(5, 2, 11), float64]) -> Tensor[(5, 2, 11), float64] {
  %568 = cast(%var_2248, dtype="float64") /* ty=float64 */;
  %569 = cast(%var_2249, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
  floor_mod(%568, %569) /* ty=Tensor[(5, 2, 11), float64] */
}

def @func_3975() -> (Tensor[(605), float32],) {
  %570 = @func_3791() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) */;
  %571 = %570.4;
  %572 = cast(%571, dtype="float32") /* ty=Tensor[(605), float32] */;
  %573 = sin(%572) /* ty=Tensor[(605), float32] */;
  (%573,)
}

def @func_7217() -> (Tensor[(605), float32],) {
  @func_7215() /* ty=(Tensor[(605), float32],) */
}

def @func_7271() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) {
  %574 = @func_5068() /* ty=(Tensor[(605), float32], Tensor[(14, 7, 12), float64], Tensor[(1760), float32], Tensor[(1, 832), float64], Tensor[(110), float64], Tensor[(14, 7, 12), float32]) */;
  %575 = @func_5386() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %576 = %574.5;
  %577 = %575.0;
  (%576, %577)
}

def @func_7340() -> (Tensor[(10, 8, 9), float64],) {
  %578 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 9), float64] */;
  %579 = rsqrt(%578) /* ty=Tensor[(10, 8, 9), float64] */;
  (%579,)
}

def @func_4564() -> Tensor[(14, 7, 12), uint8] {
  %580 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
  %581 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
  %582 = cast(%581, dtype="uint8") /* ty=Tensor[(14, 7, 12), uint8] */;
  %583 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%580, dtype="uint8") /* ty=Tensor[(14, 7, 12), uint8] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%584, %585) /* ty=Tensor[(14, 7, 12), uint8] */
}

def @func_7056() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), bool]) {
  @func_7054() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), bool]) */
}

def @func_4738() -> Tensor[(605), float32] {
  %586 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %586.0
}

def @func_9707() -> (Tensor[(605), float32],) {
  %587 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %588 = %587.0;
  (%588,)
}

def @func_9926(%var_9924: Tensor[(13, 1, 13), float32]) -> (Tensor[(13, 1, 13), float32],) {
  @func_9923(%var_9924) /* ty=(Tensor[(13, 1, 13), float32],) */
}

def @func_2730() -> Tensor[(14, 7, 12), float32] {
  %590 = fn () -> Tensor[(14, 7, 12), float32] {
    %589 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
    %589.0
  };
  %590() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_2162(%var_2161: Tensor[(3, 216), float32]) -> (Tensor[(14, 7, 12), int32], Tensor[(15, 13, 6), bool], Tensor[(3, 216), float32], Tensor[(14, 7, 12), float64]) {
  %605 = fn (%var_2138: Tensor[(3, 216), float32]) -> (Tensor[(14, 7, 12), int32], Tensor[(15, 13, 6), bool], Tensor[(3, 216), float32], Tensor[(14, 7, 12), float64]) {
    %591 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
    %592 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 7, 12), float64] */, dtype="int32") /* ty=Tensor[(14, 7, 12), int32] */;
    %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %594 = cast(%591, dtype="int32") /* ty=Tensor[(14, 7, 12), int32] */;
    %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %596 = cast(%var_2138, dtype="float32") /* ty=Tensor[(3, 216), float32] */;
    %597 = cast(%var_2138, dtype="float32") /* ty=Tensor[(3, 216), float32] */;
    %598 = reshape(%596, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
    %599 = reshape(%597, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
    %600 = @func_1775(%598, %599) /* ty=(Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) */;
    %601 = cast(%591, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
    %602 = bitwise_xor(%594, %595) /* ty=Tensor[(14, 7, 12), int32] */;
    %603 = %600.1;
    %604 = sigmoid(%601) /* ty=Tensor[(14, 7, 12), float64] */;
    (%602, %603, %var_2138, %604)
  };
  %605(%var_2161) /* ty=(Tensor[(14, 7, 12), int32], Tensor[(15, 13, 6), bool], Tensor[(3, 216), float32], Tensor[(14, 7, 12), float64]) */
}

def @func_4948(%var_4941: Tensor[(832), float64]) -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(40, 2), float32], Tensor[(832), float64], Tensor[(14, 7, 12), float32]) {
  %606 = @func_4122() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %607 = cast(meta[relay.Constant][29] /* ty=Tensor[(40, 2), float32] */, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %608 = cast(%var_4941, dtype="float64") /* ty=Tensor[(832), float64] */;
  %609 = reshape(%607, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %610 = reshape(%608, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %611 = @func_3298(%609, %610) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(80), float32], Tensor[(832), float64]) */;
  %612 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %613 = %606.0;
  %614 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
  %615 = %611.0;
  %616 = %612.0;
  (%613, %614, %615, meta[relay.Constant][29] /* ty=Tensor[(40, 2), float32] */, %var_4941, %616)
}

def @func_7119() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) {
  %617 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
  %618 = %617.1;
  %619 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
  %620 = @func_3475() /* ty=Tensor[(14, 7, 12), float32] */;
  (%618, %619, %620)
}

def @func_4260() -> (Tensor[(605), float32],) {
  %623 = fn () -> (Tensor[(605), float32],) {
    %621 = @func_3975() /* ty=(Tensor[(605), float32],) */;
    %622 = %621.0;
    (%622,)
  };
  %623() /* ty=(Tensor[(605), float32],) */
}

def @func_7762() -> (Tensor[(832), float64],) {
  %624 = @func_7660() /* ty=Tensor[(832), float64] */;
  (%624,)
}

def @func_8166(%var_8164: int32, %var_8165: Tensor[(288), int32]) -> (Tensor[(14, 7, 12), float64], Tensor[(9, 4, 8), int32], int32, Tensor[(288), int32]) {
  %633 = fn (%var_8145: int32, %var_8146: Tensor[(288), int32]) -> (Tensor[(14, 7, 12), float64], Tensor[(9, 4, 8), int32], int32, Tensor[(288), int32]) {
    %625 = @func_6836() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %626 = cast(%var_8145, dtype="int32") /* ty=int32 */;
    %627 = cast(%var_8146, dtype="int32") /* ty=Tensor[(288), int32] */;
    %628 = reshape(%626, newshape=[]) /* ty=int32 */;
    %629 = reshape(%627, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), int32] */;
    %630 = @func_5395(%628, %629) /* ty=(Tensor[(9, 4, 8), int32],) */;
    %631 = %625.0;
    %632 = %630.0;
    (%631, %632, %var_8145, %var_8146)
  };
  %633(%var_8164, %var_8165) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(9, 4, 8), int32], int32, Tensor[(288), int32]) */
}

def @func_6626(%var_6624: Tensor[(832), float64], %var_6625: Tensor[(14, 7, 12), uint8]) -> (Tensor[(605), float32], Tensor[(80), float32], Tensor[(832), float64], Tensor[(14, 7, 12), bool], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float32], Tensor[(14, 7, 12), float64]) {
  @func_6622(%var_6624, %var_6625) /* ty=(Tensor[(605), float32], Tensor[(80), float32], Tensor[(832), float64], Tensor[(14, 7, 12), bool], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float32], Tensor[(14, 7, 12), float64]) */
}

def @func_1920(%var_1918: Tensor[(10, 16, 11), float32]) -> (Tensor[(10, 16, 11), uint64], Tensor[(2, 416), float64], Tensor[(80, 1), float32], Tensor[(832), float64], Tensor[(10, 16, 11), float64], Tensor[(15, 13, 6), bool], Tensor[(1170), int8]) {
  @func_1917(%var_1918) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(2, 416), float64], Tensor[(80, 1), float32], Tensor[(832), float64], Tensor[(10, 16, 11), float64], Tensor[(15, 13, 6), bool], Tensor[(1170), int8]) */
}

def @func_5588() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) {
  %641 = fn () -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) {
    %634 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
    %635 = %634.1;
    %636 = cast(%635, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
    %637 = reshape(%636, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), float32] */;
    %638 = @func_3743(%637) /* ty=(Tensor[(14, 7, 12), float32],) */;
    %639 = %638.0;
    %640 = @func_3475() /* ty=Tensor[(14, 7, 12), float32] */;
    (%635, %639, %640)
  };
  %641() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */
}

def @func_7662() -> Tensor[(832), float64] {
  @func_7660() /* ty=Tensor[(832), float64] */
}

def @func_8116(%var_8115: Tensor[(22, 5), float64]) -> (Tensor[(22, 5), float64], Tensor[(1760), float32]) {
  %653 = fn (%var_8098: Tensor[(22, 5), float64]) -> (Tensor[(22, 5), float64], Tensor[(1760), float32]) {
    %642 = @func_5144() /* ty=(Tensor[(22, 5), float64],) */;
    %643 = %642.0;
    %644 = cast(%var_8098, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
    %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(2), int32] */;
    %646 = cast(%643, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %648 = cast(%var_8098, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
    %649 = reshape(%648, newshape=[1, 110]) /* ty=Tensor[(1, 110), float64] */;
    %650 = @func_7558(%649) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], Tensor[(208, 4), float64], Tensor[(1, 110), float64]) */;
    %651 = power(%646, %647) /* ty=Tensor[(22, 5), float64] */;
    %652 = %650.3;
    (%651, %652)
  };
  %653(%var_8115) /* ty=(Tensor[(22, 5), float64], Tensor[(1760), float32]) */
}

def @func_2337() -> Tensor[(14, 7, 12), float64] {
  @func_2335() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_4476(%var_4474: Tensor[(14, 7, 12), float64]) -> (Tensor[(14, 7, 12), bool], Tensor[(5, 234), float64]) {
  @func_4473(%var_4474) /* ty=(Tensor[(14, 7, 12), bool], Tensor[(5, 234), float64]) */
}

def @func_9545(%var_9544: Tensor[(10, 1, 5), float32]) -> Tensor[(10, 1, 5), float32] {
  %655 = fn (%var_9538: Tensor[(10, 1, 5), float32]) -> Tensor[(10, 1, 5), float32] {
    %654 = cast(%var_9538, dtype="float32") /* ty=Tensor[(10, 1, 5), float32] */;
    exp(%654) /* ty=Tensor[(10, 1, 5), float32] */
  };
  %655(%var_9544) /* ty=Tensor[(10, 1, 5), float32] */
}

def @func_5784() -> Tensor[(14, 7, 12), float64] {
  @func_2184() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_9030() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) {
  %661 = fn () -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) {
    %656 = @func_5954() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) */;
    %657 = %656.0;
    %658 = cast(%657, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
    %659 = reshape(%658, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), float64] */;
    %660 = @func_3117(%659) /* ty=Tensor[(14, 7, 12), float32] */;
    (%657, %660)
  };
  %661() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32]) */
}

def @func_4766() -> Tensor[(14, 7, 12), float64] {
  %662 = fn () -> Tensor[(14, 7, 12), float64] {
    @func_2335() /* ty=Tensor[(14, 7, 12), float64] */
  };
  %662() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_4410(%var_4407: Tensor[(1760), float32], %var_4408: Tensor[(2, 416), float64], %var_4409: Tensor[(110), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], float64, Tensor[(110), float64], Tensor[(648), float32], Tensor[(2, 416), uint64]) {
  @func_4405(%var_4407, %var_4408, %var_4409) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], float64, Tensor[(110), float64], Tensor[(648), float32], Tensor[(2, 416), uint64]) */
}

def @func_3705(%var_3702: Tensor[(1760, 1), float32], %var_3703: Tensor[(832, 1), float64], %var_3704: Tensor[(110), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32], Tensor[(832), float64], Tensor[(1760, 1), float32], Tensor[(832, 1), float64], Tensor[(110), float64], Tensor[(648), float32]) {
  %681 = fn (%var_3658: Tensor[(1760, 1), float32], %var_3659: Tensor[(832, 1), float64], %var_3660: Tensor[(110), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32], Tensor[(832), float64], Tensor[(1760, 1), float32], Tensor[(832, 1), float64], Tensor[(110), float64], Tensor[(648), float32]) {
    %663 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %664 = cast(meta[relay.Constant][30] /* ty=Tensor[(588), int32] */, dtype="int32") /* ty=Tensor[(588), int32] */;
    %665 = reshape(%663, newshape=[]) /* ty=int32 */;
    %666 = reshape(%664, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), int32] */;
    %667 = cast(%var_3658, dtype="float32") /* ty=Tensor[(1760, 1), float32] */;
    %668 = cast(%var_3659, dtype="float64") /* ty=Tensor[(832, 1), float64] */;
    %669 = cast(-8 /* ty=int32 */, dtype="float64") /* ty=float64 */;
    %670 = cast(%var_3660, dtype="float64") /* ty=Tensor[(110), float64] */;
    %671 = cast(meta[relay.Constant][31] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %672 = reshape(%667, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
    %673 = reshape(%668, newshape=[832]) /* ty=Tensor[(832), float64] */;
    %674 = reshape(%669, newshape=[]) /* ty=float64 */;
    %675 = reshape(%670, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
    %676 = reshape(%671, newshape=[648]) /* ty=Tensor[(648), float32] */;
    %677 = @func_2578(%672, %673, %674, %675, %676) /* ty=(Tensor[(10, 16, 11), uint64], Tensor[(1760), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(13, 8, 8), float64], Tensor[(832), float64], Tensor[(14, 7, 12), float32], Tensor[(15, 13, 6), bool], Tensor[(1170), int8], Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(14, 7, 12), float32]) */;
    %678 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
    %679 = @func_3369(%665, %666) /* ty=Tensor[(14, 14, 3), int32] */;
    %680 = %677.5;
    (%678, %679, -8 /* ty=int32 */, meta[relay.Constant][30] /* ty=Tensor[(588), int32] */, %680, %var_3658, %var_3659, %var_3660, meta[relay.Constant][31] /* ty=Tensor[(648), float32] */)
  };
  %681(%var_3702, %var_3703, %var_3704) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 14, 3), int32], int32, Tensor[(588), int32], Tensor[(832), float64], Tensor[(1760, 1), float32], Tensor[(832, 1), float64], Tensor[(110), float64], Tensor[(648), float32]) */
}

def @func_2802(%var_2775: float64, %var_2776: Tensor[(110), float64]) -> (Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) {
  %682 = cast(%var_2775, dtype="float64") /* ty=float64 */;
  %683 = cast(%var_2776, dtype="float64") /* ty=Tensor[(110), float64] */;
  %684 = reshape(%682, newshape=[]) /* ty=float64 */;
  %685 = reshape(%683, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), float64] */;
  %686 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %687 = %686.0;
  %688 = cast(%687, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %689 = cast(meta[relay.Constant][32] /* ty=Tensor[(54, 12), float32] */, dtype="float32") /* ty=Tensor[(54, 12), float32] */;
  %690 = cast(meta[relay.Constant][32] /* ty=Tensor[(54, 12), float32] */, dtype="float32") /* ty=Tensor[(54, 12), float32] */;
  %691 = reshape(%689, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %692 = reshape(%690, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %693 = @func_1775(%691, %692) /* ty=(Tensor[(9, 12, 6), bool], Tensor[(15, 13, 6), bool], Tensor[(390, 3), int8]) */;
  %694 = @func_2258(%684, %685) /* ty=Tensor[(5, 2, 11), float64] */;
  %695 = rsqrt(%688) /* ty=Tensor[(14, 7, 12), float32] */;
  %696 = @func_2335() /* ty=Tensor[(14, 7, 12), float64] */;
  %697 = %693.1;
  (%694, %var_2775, %var_2776, %695, %696, %697, meta[relay.Constant][32] /* ty=Tensor[(54, 12), float32] */)
}

def @func_7813(%var_7803: Tensor[(16, 1, 4), float64], %var_7804: Tensor[(16, 3, 4), float64]) -> (Tensor[(16, 3, 4), float64], Tensor[(16, 3, 4), float64]) {
  %698 = cast(%var_7803, dtype="float64") /* ty=Tensor[(16, 1, 4), float64] */;
  %699 = cast(%var_7804, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %700 = cast(%var_7804, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %701 = power(%698, %699) /* ty=Tensor[(16, 3, 4), float64] */;
  %702 = atan(%700) /* ty=Tensor[(16, 3, 4), float64] */;
  (%701, %702)
}

def @func_5387() -> (Tensor[(14, 7, 12), float64],) {
  %705 = fn () -> (Tensor[(14, 7, 12), float64],) {
    %703 = @func_4925() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64]) */;
    %704 = %703.0;
    (%704,)
  };
  %705() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_3977() -> (Tensor[(605), float32],) {
  @func_3975() /* ty=(Tensor[(605), float32],) */
}

def @func_3745(%var_3744: Tensor[(14, 7, 12), float32]) -> (Tensor[(14, 7, 12), float32],) {
  %712 = fn (%var_3717: Tensor[(14, 7, 12), float32]) -> (Tensor[(14, 7, 12), float32],) {
    %706 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
    %707 = cast(%var_3717, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
    %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
    %709 = cast(%706, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
    %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %711 = divide(%709, %710) /* ty=Tensor[(14, 7, 12), float32] */;
    (%711,)
  };
  %712(%var_3744) /* ty=(Tensor[(14, 7, 12), float32],) */
}

def @func_3042(%var_3039: Tensor[(605), float64], %var_3040: Tensor[(605), float64], %var_3041: Tensor[(605), float64]) -> (Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) {
  @func_3037(%var_3039, %var_3040, %var_3041) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) */
}

def @func_5864() -> Tensor[(14, 7, 12), bool] {
  %713 = @func_4773() /* ty=Tensor[(14, 7, 12), float64] */;
  %714 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 7, 12), float64] */, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(%713, dtype="bool") /* ty=Tensor[(14, 7, 12), bool] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%716, %717) /* ty=Tensor[(14, 7, 12), bool] */
}

def @func_5144() -> (Tensor[(22, 5), float64],) {
  %718 = @func_4925() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(5, 2, 11), float64], float64, Tensor[(22, 5), float64]) */;
  %719 = %718.3;
  (%719,)
}

def @func_9819() -> Tensor[(14, 7, 12), float64] {
  %720 = fn () -> Tensor[(14, 7, 12), float64] {
    @func_2184() /* ty=Tensor[(14, 7, 12), float64] */
  };
  %720() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_5790() -> Tensor[(14, 7, 12), float32] {
  %721 = fn () -> Tensor[(14, 7, 12), float32] {
    @func_5446() /* ty=Tensor[(14, 7, 12), float32] */
  };
  %721() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_4019(%var_4018: Tensor[(832), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(10, 2, 4), uint16], Tensor[(20, 4), float32], Tensor[(832), float64]) {
  %731 = fn (%var_3996: Tensor[(832), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(10, 2, 4), uint16], Tensor[(20, 4), float32], Tensor[(832), float64]) {
    %722 = @func_3401() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %723 = cast(meta[relay.Constant][34] /* ty=Tensor[(20, 4), float32] */, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
    %724 = cast(%var_3996, dtype="float64") /* ty=Tensor[(832), float64] */;
    %725 = reshape(%723, newshape=[10, 2, 4]) /* ty=Tensor[(10, 2, 4), float32] */;
    %726 = reshape(%724, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
    %727 = @func_161(%725, %726) /* ty=(Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) */;
    %728 = %722.0;
    %729 = @func_3475() /* ty=Tensor[(14, 7, 12), float32] */;
    %730 = %727.3;
    (%728, %729, %730, meta[relay.Constant][34] /* ty=Tensor[(20, 4), float32] */, %var_3996)
  };
  %731(%var_4018) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(10, 2, 4), uint16], Tensor[(20, 4), float32], Tensor[(832), float64]) */
}

def @func_2952(%var_2950: float64, %var_2951: Tensor[(22, 5), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], float64, Tensor[(22, 5), float64], Tensor[(14, 7, 12), float64]) {
  %742 = fn (%var_2917: float64, %var_2918: Tensor[(22, 5), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], float64, Tensor[(22, 5), float64], Tensor[(14, 7, 12), float64]) {
    %732 = cast(%var_2917, dtype="float64") /* ty=float64 */;
    %733 = cast(%var_2918, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
    %734 = reshape(%732, newshape=[]) /* ty=float64 */;
    %735 = reshape(%733, newshape=[110]) /* ty=Tensor[(110), float64] */;
    %736 = @func_2802(%734, %735) /* ty=(Tensor[(5, 2, 11), float64], float64, Tensor[(110), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(15, 13, 6), bool], Tensor[(54, 12), float32]) */;
    %737 = %736.3;
    %738 = cast(%737, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
    %739 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
    %740 = @func_2335() /* ty=Tensor[(14, 7, 12), float64] */;
    %741 = tan(%738) /* ty=Tensor[(14, 7, 12), float64] */;
    (%739, %740, %var_2917, %var_2918, %741)
  };
  %742(%var_2950, %var_2951) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], float64, Tensor[(22, 5), float64], Tensor[(14, 7, 12), float64]) */
}

def @func_4907() -> (Tensor[(14, 7, 12), float32],) {
  %745 = fn () -> (Tensor[(14, 7, 12), float32],) {
    %743 = @func_2754() /* ty=(Tensor[(14, 7, 12), float32],) */;
    %744 = %743.0;
    (%744,)
  };
  %745() /* ty=(Tensor[(14, 7, 12), float32],) */
}

def @func_2262(%var_2260: float64, %var_2261: Tensor[(5, 2, 11), float64]) -> Tensor[(5, 2, 11), float64] {
  @func_2258(%var_2260, %var_2261) /* ty=Tensor[(5, 2, 11), float64] */
}

def @func_3120(%var_3118: Tensor[(14, 7, 12), float64]) -> Tensor[(14, 7, 12), float32] {
  @func_3117(%var_3118) /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_5515(%var_5513: Tensor[(1, 1, 15), int16]) -> (Tensor[(1, 3, 15), bool],) {
  @func_5512(%var_5513) /* ty=(Tensor[(1, 3, 15), bool],) */
}

def @func_4566() -> Tensor[(14, 7, 12), uint8] {
  @func_4564() /* ty=Tensor[(14, 7, 12), uint8] */
}

def @func_6546() -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(9, 4, 8), int32], int32, Tensor[(288), int32], Tensor[(14, 7, 12), float32], Tensor[(605), float32]) {
  %746 = @func_3791() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) */;
  %747 = @func_4122() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %748 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %749 = cast(meta[relay.Constant][35] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %750 = reshape(%749, newshape=[5, 11, 11]) /* ty=Tensor[(5, 11, 11), float64] */;
  %751 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %752 = cast(meta[relay.Constant][36] /* ty=Tensor[(288), int32] */, dtype="int32") /* ty=Tensor[(288), int32] */;
  %753 = reshape(%751, newshape=[]) /* ty=int32 */;
  %754 = reshape(%752, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), int32] */;
  %755 = @func_5395(%753, %754) /* ty=(Tensor[(9, 4, 8), int32],) */;
  %756 = @func_3141() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
  %757 = %756.0;
  %758 = cast(%757, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %759 = cast(meta[relay.Constant][35] /* ty=Tensor[(605), float64] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %760 = %746.2;
  %761 = %747.1;
  %762 = @func_4028() /* ty=Tensor[(14, 7, 12), float32] */;
  %763 = %748.0;
  %764 = @func_1798(%750) /* ty=Tensor[(5, 11, 11), float64] */;
  %765 = %755.0;
  %766 = exp(%758) /* ty=Tensor[(14, 7, 12), float32] */;
  %767 = erf(%759) /* ty=Tensor[(605), float32] */;
  (%760, %761, %762, %763, %764, %765, -5 /* ty=int32 */, meta[relay.Constant][36] /* ty=Tensor[(288), int32] */, %766, %767)
}

def @func_7558(%var_7556: Tensor[(1, 110), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], Tensor[(208, 4), float64], Tensor[(1, 110), float64]) {
  %768 = @func_4259() /* ty=(Tensor[(605), float32],) */;
  %769 = cast(meta[relay.Constant][37] /* ty=Tensor[(1760), float32] */, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %770 = cast(meta[relay.Constant][38] /* ty=Tensor[(208, 4), float64] */, dtype="float64") /* ty=Tensor[(208, 4), float64] */;
  %771 = cast(%var_7556, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
  %772 = reshape(%769, newshape=[1760]) /* ty=Tensor[(1760), float32] */;
  %773 = reshape(%770, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
  %774 = reshape(%771, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %775 = @func_4405(%772, %773, %774) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], float64, Tensor[(110), float64], Tensor[(648), float32], Tensor[(2, 416), uint64]) */;
  %776 = @func_6168() /* ty=Tensor[(14, 7, 12), float64] */;
  %777 = %768.0;
  %778 = %775.1;
  (%776, %777, %778, meta[relay.Constant][37] /* ty=Tensor[(1760), float32] */, meta[relay.Constant][38] /* ty=Tensor[(208, 4), float64] */, %var_7556)
}

def @func_9049() -> Tensor[(14, 7, 12), float64] {
  %780 = fn () -> Tensor[(14, 7, 12), float64] {
    %779 = @func_8035() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64]) */;
    %779.1
  };
  %780() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_4028() -> Tensor[(14, 7, 12), float32] {
  %781 = @func_2694() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float32]) */;
  %781.1
}

def @func_8667(%var_8660: Tensor[(22, 5), float64]) -> (Tensor[(22, 5), uint64],) {
  %782 = @func_5144() /* ty=(Tensor[(22, 5), float64],) */;
  %783 = %782.0;
  %784 = cast(%var_8660, dtype="uint64") /* ty=Tensor[(22, 5), uint64] */;
  %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(2), int32] */;
  %786 = cast(%783, dtype="uint64") /* ty=Tensor[(22, 5), uint64] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %788 = bitwise_xor(%786, %787) /* ty=Tensor[(22, 5), uint64] */;
  (%788,)
}

def @func_9171(%var_9169: Tensor[(9, 7, 3), bool], %var_9170: Tensor[(9, 7, 12), int32]) -> (Tensor[(9, 7, 3), bool], Tensor[(9, 7, 12), bool], Tensor[(14, 7, 12), bool], Tensor[(9, 7, 1), float64]) {
  @func_9167(%var_9169, %var_9170) /* ty=(Tensor[(9, 7, 3), bool], Tensor[(9, 7, 12), bool], Tensor[(14, 7, 12), bool], Tensor[(9, 7, 1), float64]) */
}

def @func_9322() -> Tensor[(14, 7, 12), float64] {
  @func_9048() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_9571() -> (Tensor[(14, 7, 12), float64], Tensor[(110), float64], Tensor[(1760), float64]) {
  %789 = @func_5245() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %790 = cast(meta[relay.Constant][39] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %791 = reshape(%790, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
  %792 = @func_8114(%791) /* ty=(Tensor[(22, 5), float64], Tensor[(1760), float32]) */;
  %793 = %792.1;
  %794 = cast(%793, dtype="float64") /* ty=Tensor[(1760), float64] */;
  %795 = %789.0;
  %796 = erf(%794) /* ty=Tensor[(1760), float64] */;
  (%795, meta[relay.Constant][39] /* ty=Tensor[(110), float64] */, %796)
}

def @func_2872() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), uint16]) {
  %797 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %798 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
  %799 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
  %800 = cast(%799, dtype="uint16") /* ty=Tensor[(14, 7, 12), uint16] */;
  %801 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%798, dtype="uint16") /* ty=Tensor[(14, 7, 12), uint16] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %804 = %797.0;
  %805 = left_shift(%802, %803) /* ty=Tensor[(14, 7, 12), uint16] */;
  (%804, %805)
}

def @func_7173(%var_7172: int32) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(832), float64], Tensor[(98, 6), int32], Tensor[(14, 7, 12), float64], Tensor[(110), float64], Tensor[(14, 14, 3), float64], Tensor[(605), float32]) {
  %829 = fn (%var_7142: int32) -> (Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(832), float64], Tensor[(98, 6), int32], Tensor[(14, 7, 12), float64], Tensor[(110), float64], Tensor[(14, 14, 3), float64], Tensor[(605), float32]) {
    %806 = cast(meta[relay.Constant][40] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
    %807 = @func_4765() /* ty=Tensor[(14, 7, 12), float64] */;
    %808 = cast(%807, dtype="uint8") /* ty=Tensor[(14, 7, 12), uint8] */;
    %809 = reshape(%806, newshape=[832]) /* ty=Tensor[(832), float64] */;
    %810 = reshape(%808, newshape=[14, 7, 12]) /* ty=Tensor[(14, 7, 12), uint8] */;
    %811 = @func_6622(%809, %810) /* ty=(Tensor[(605), float32], Tensor[(80), float32], Tensor[(832), float64], Tensor[(14, 7, 12), bool], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float32], Tensor[(14, 7, 12), float64]) */;
    %812 = cast(%var_7142, dtype="float64") /* ty=float64 */;
    %813 = cast(meta[relay.Constant][42] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
    %814 = reshape(%812, newshape=[]) /* ty=float64 */;
    %815 = reshape(%813, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
    %816 = @func_2949(%814, %815) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], float64, Tensor[(22, 5), float64], Tensor[(14, 7, 12), float64]) */;
    %817 = cast(%var_7142, dtype="int32") /* ty=int32 */;
    %818 = cast(meta[relay.Constant][41] /* ty=Tensor[(98, 6), int32] */, dtype="int32") /* ty=Tensor[(98, 6), int32] */;
    %819 = reshape(%817, newshape=[]) /* ty=int32 */;
    %820 = reshape(%818, newshape=[14, 14, 3]) /* ty=Tensor[(14, 14, 3), int32] */;
    %821 = @func_3369(%819, %820) /* ty=Tensor[(14, 14, 3), int32] */;
    %822 = cast(%var_7142, dtype="float64") /* ty=float64 */;
    %823 = cast(%821, dtype="float64") /* ty=Tensor[(14, 14, 3), float64] */;
    %824 = @func_7018() /* ty=(Tensor[(605), float32],) */;
    %825 = %811.6;
    %826 = %816.0;
    %827 = add(%822, %823) /* ty=Tensor[(14, 14, 3), float64] */;
    %828 = %824.0;
    (%807, %825, meta[relay.Constant][40] /* ty=Tensor[(832), float64] */, meta[relay.Constant][41] /* ty=Tensor[(98, 6), int32] */, %826, meta[relay.Constant][42] /* ty=Tensor[(110), float64] */, %827, %828)
  };
  %829(%var_7172) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float64], Tensor[(832), float64], Tensor[(98, 6), int32], Tensor[(14, 7, 12), float64], Tensor[(110), float64], Tensor[(14, 14, 3), float64], Tensor[(605), float32]) */
}

def @func_8372() -> (Tensor[(14, 7, 12), float64],) {
  %830 = @func_5954() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(13, 8, 8), float64], Tensor[(832), float64]) */;
  %831 = %830.0;
  (%831,)
}

def @func_7273() -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) {
  @func_7271() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */
}

def @func_9762(%var_9717: Tensor[(605), float32]) -> (Tensor[(605), int8], Tensor[(605), int64], Tensor[(605), float32], Tensor[(14, 7, 12), float64]) {
  %832 = @func_8644() /* ty=Tensor[(605), float32] */;
  %833 = cast(%var_9717, dtype="int8") /* ty=Tensor[(605), int8] */;
  %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(1), int32] */;
  %835 = cast(%832, dtype="int8") /* ty=Tensor[(605), int8] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?), int8] */;
  %837 = cast(%var_9717, dtype="int64") /* ty=Tensor[(605), int64] */;
  %838 = shape_of(%832, dtype="int32") /* ty=Tensor[(1), int32] */;
  %839 = cast(%832, dtype="int64") /* ty=Tensor[(605), int64] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?), int64] */;
  %841 = @func_9392() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(605), float32], Tensor[(14, 7, 12), float32]) */;
  %842 = @func_8372() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %843 = bitwise_or(%835, %836) /* ty=Tensor[(605), int8] */;
  %844 = multiply(%839, %840) /* ty=Tensor[(605), int64] */;
  %845 = %841.1;
  %846 = %842.0;
  (%843, %844, %845, %846)
}

def @func_7561(%var_7559: Tensor[(1, 110), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], Tensor[(208, 4), float64], Tensor[(1, 110), float64]) {
  @func_7558(%var_7559) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(14, 7, 12), float32], Tensor[(1760), float32], Tensor[(208, 4), float64], Tensor[(1, 110), float64]) */
}

def @func_3905() -> (Tensor[(14, 7, 12), float64],) {
  @func_3903() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_8714(%var_8712: Tensor[(832), float64], %var_8713: Tensor[(605), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(832), float64], Tensor[(4, 20), int8], Tensor[(605), int8], Tensor[(605), float64]) {
  %864 = fn (%var_8684: Tensor[(832), float64], %var_8700: Tensor[(605), float64]) -> (Tensor[(14, 7, 12), float64], Tensor[(832), float64], Tensor[(4, 20), int8], Tensor[(605), int8], Tensor[(605), float64]) {
    %847 = @func_3791() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(605), float32], Tensor[(605), float64]) */;
    %848 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 20), float32] */, dtype="float32") /* ty=Tensor[(4, 20), float32] */;
    %849 = cast(%var_8684, dtype="float64") /* ty=Tensor[(832), float64] */;
    %850 = reshape(%848, newshape=[10, 2, 4]) /* ty=Tensor[(10, 2, 4), float32] */;
    %851 = reshape(%849, newshape=[2, 416]) /* ty=Tensor[(2, 416), float64] */;
    %852 = @func_161(%850, %851) /* ty=(Tensor[(10, 2, 4), bool], Tensor[(13, 8, 8), float64], Tensor[(2, 416), float64], Tensor[(10, 2, 4), uint16]) */;
    %853 = %852.3;
    %854 = cast(%853, dtype="int8") /* ty=Tensor[(10, 2, 4), int8] */;
    %855 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(4, 20), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %856 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 20), float32] */, dtype="int8") /* ty=Tensor[(4, 20), int8] */;
    %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %858 = cast(%var_8700, dtype="float64") /* ty=Tensor[(605), float64] */;
    %859 = reshape(%858, newshape=[605]) /* ty=Tensor[(605), float64] */;
    %860 = @func_7973(%859) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(605), int8]) */;
    %861 = %847.2;
    %862 = minimum(%856, %857) /* ty=Tensor[(4, 20), int8] */;
    %863 = %860.1;
    (%861, %var_8684, %862, %863, %var_8700)
  };
  %864(%var_8712, %var_8713) /* ty=(Tensor[(14, 7, 12), float64], Tensor[(832), float64], Tensor[(4, 20), int8], Tensor[(605), int8], Tensor[(605), float64]) */
}

def @func_9990(%var_9988: Tensor[(11, 5, 7), int16], %var_9989: Tensor[(110), float64]) -> (Tensor[(11, 5, 7), int16], Tensor[(14, 7, 12), float32], Tensor[(22, 5), uint64], Tensor[(110), float64]) {
  %876 = fn (%var_9972: Tensor[(11, 5, 7), int16], %var_9982: Tensor[(110), float64]) -> (Tensor[(11, 5, 7), int16], Tensor[(14, 7, 12), float32], Tensor[(22, 5), uint64], Tensor[(110), float64]) {
    %865 = cast(%var_9972, dtype="int16") /* ty=Tensor[(11, 5, 7), int16] */;
    %866 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(11, 5, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %867 = cast(meta[relay.Constant][44] /* ty=Tensor[(11, 5, 7), int16] */, dtype="int16") /* ty=Tensor[(11, 5, 7), int16] */;
    %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %869 = @func_4906() /* ty=(Tensor[(14, 7, 12), float32],) */;
    %870 = cast(%var_9982, dtype="float64") /* ty=Tensor[(110), float64] */;
    %871 = reshape(%870, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
    %872 = @func_8667(%871) /* ty=(Tensor[(22, 5), uint64],) */;
    %873 = bitwise_xor(%867, %868) /* ty=Tensor[(11, 5, 7), int16] */;
    %874 = %869.0;
    %875 = %872.0;
    (%873, %874, %875, %var_9982)
  };
  %876(%var_9988, %var_9989) /* ty=(Tensor[(11, 5, 7), int16], Tensor[(14, 7, 12), float32], Tensor[(22, 5), uint64], Tensor[(110), float64]) */
}

def @func_3800() -> Tensor[(14, 7, 12), float32] {
  @func_3798() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_2102() -> Tensor[(14, 7, 12), float64] {
  %880 = fn () -> Tensor[(14, 7, 12), float64] {
    %877 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
    %878 = log2(%877) /* ty=Tensor[(14, 7, 12), float64] */;
    %879 = cast(%878, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
    log10(%879) /* ty=Tensor[(14, 7, 12), float64] */
  };
  %880() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_9836() -> Tensor[(14, 7, 12), float32] {
  %881 = @func_2836() /* ty=(Tensor[(14, 7, 12), float32],) */;
  %881.0
}

def @func_3476() -> Tensor[(14, 7, 12), float32] {
  %883 = fn () -> Tensor[(14, 7, 12), float32] {
    %882 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
    %882.0
  };
  %883() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_5478(%var_5476: Tensor[(12, 8, 6), int64]) -> (Tensor[(12, 8, 6), bool],) {
  @func_5475(%var_5476) /* ty=(Tensor[(12, 8, 6), bool],) */
}

def @func_5356() -> (Tensor[(14, 7, 12), float64],) {
  %886 = fn () -> (Tensor[(14, 7, 12), float64],) {
    %884 = @func_4294() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %885 = %884.0;
    (%885,)
  };
  %886() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_3219() -> Tensor[(14, 7, 12), float32] {
  %887 = fn () -> Tensor[(14, 7, 12), float32] {
    @func_2729() /* ty=Tensor[(14, 7, 12), float32] */
  };
  %887() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_9167(%var_9113: Tensor[(9, 7, 3), bool], %var_9124: Tensor[(9, 7, 12), int32]) -> (Tensor[(9, 7, 3), bool], Tensor[(9, 7, 12), bool], Tensor[(14, 7, 12), bool], Tensor[(9, 7, 1), float64]) {
  %888 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 7, 1), int32] */, dtype="bool") /* ty=Tensor[(9, 7, 1), bool] */;
  %889 = cast(meta[relay.Constant][47] /* ty=Tensor[(9, 7, 3), int32] */, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %890 = not_equal(%888, %889) /* ty=Tensor[(9, 7, 3), bool] */;
  %891 = cast(%var_9113, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %892 = shape_of(%890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%890, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %895 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 7, 1), int32] */, dtype="bool") /* ty=Tensor[(9, 7, 1), bool] */;
  %896 = cast(%var_9124, dtype="bool") /* ty=Tensor[(9, 7, 12), bool] */;
  %897 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 7, 1), int32] */, dtype="float64") /* ty=Tensor[(9, 7, 1), float64] */;
  %898 = greater_equal(%893, %894) /* ty=Tensor[(9, 7, 3), bool] */;
  %899 = not_equal(%895, %896) /* ty=Tensor[(9, 7, 12), bool] */;
  %900 = @func_5864() /* ty=Tensor[(14, 7, 12), bool] */;
  %901 = cos(%897) /* ty=Tensor[(9, 7, 1), float64] */;
  (%898, %899, %900, %901)
}

def @func_31(%var_17: Tensor[(13, 8, 8), float64]) -> (Tensor[(13, 8, 8), float64],) {
  %902 = cast(%var_17, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %903 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(13, 8, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %906 = minimum(%904, %905) /* ty=Tensor[(13, 8, 8), float64] */;
  (%906,)
}

def @func_9088() -> Tensor[(5, 8, 10), float64] {
  %908 = fn () -> Tensor[(5, 8, 10), float64] {
    %907 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 10), float64] */;
    exp(%907) /* ty=Tensor[(5, 8, 10), float64] */
  };
  %908() /* ty=Tensor[(5, 8, 10), float64] */
}

def @func_5070() -> (Tensor[(605), float32], Tensor[(14, 7, 12), float64], Tensor[(1760), float32], Tensor[(1, 832), float64], Tensor[(110), float64], Tensor[(14, 7, 12), float32]) {
  @func_5068() /* ty=(Tensor[(605), float32], Tensor[(14, 7, 12), float64], Tensor[(1760), float32], Tensor[(1, 832), float64], Tensor[(110), float64], Tensor[(14, 7, 12), float32]) */
}

def @func_5179() -> (Tensor[(14, 7, 12), float64],) {
  %911 = fn () -> (Tensor[(14, 7, 12), float64],) {
    %909 = @func_3903() /* ty=(Tensor[(14, 7, 12), float64],) */;
    %910 = %909.0;
    (%910,)
  };
  %911() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_2399(%var_2398: Tensor[(14, 11, 6), float64]) -> Tensor[(14, 11, 6), float64] {
  %913 = fn (%var_2394: Tensor[(14, 11, 6), float64]) -> Tensor[(14, 11, 6), float64] {
    %912 = cast(%var_2394, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
    cos(%912) /* ty=Tensor[(14, 11, 6), float64] */
  };
  %913(%var_2398) /* ty=Tensor[(14, 11, 6), float64] */
}

def @func_9573() -> (Tensor[(14, 7, 12), float64], Tensor[(110), float64], Tensor[(1760), float64]) {
  @func_9571() /* ty=(Tensor[(14, 7, 12), float64], Tensor[(110), float64], Tensor[(1760), float64]) */
}

def @func_3093() -> Tensor[(14, 7, 12), float64] {
  @func_3091() /* ty=Tensor[(14, 7, 12), float64] */
}

def @func_8347() -> Tensor[(14, 7, 12), float64] {
  %914 = @func_5178() /* ty=(Tensor[(14, 7, 12), float64],) */;
  %914.0
}

def @func_7764() -> (Tensor[(832), float64],) {
  @func_7762() /* ty=(Tensor[(832), float64],) */
}

def @func_8509() -> (Tensor[(14, 7, 12), uint8], Tensor[(924), float64], Tensor[(605), float64]) {
  @func_8507() /* ty=(Tensor[(14, 7, 12), uint8], Tensor[(924), float64], Tensor[(605), float64]) */
}

def @func_2372() -> (Tensor[(14, 7, 12), float32],) {
  %915 = @func_2101() /* ty=Tensor[(14, 7, 12), float64] */;
  %916 = cast(%915, dtype="float32") /* ty=Tensor[(14, 7, 12), float32] */;
  %917 = acos(%916) /* ty=Tensor[(14, 7, 12), float32] */;
  (%917,)
}

def @func_6837() -> (Tensor[(14, 7, 12), float64],) {
  %919 = fn () -> (Tensor[(14, 7, 12), float64],) {
    %918 = @func_3091() /* ty=Tensor[(14, 7, 12), float64] */;
    (%918,)
  };
  %919() /* ty=(Tensor[(14, 7, 12), float64],) */
}

def @func_7582() -> Tensor[(14, 7, 12), float32] {
  %921 = fn () -> Tensor[(14, 7, 12), float32] {
    %920 = @func_2872() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), uint16]) */;
    %920.0
  };
  %921() /* ty=Tensor[(14, 7, 12), float32] */
}

def @func_3849(%var_3848: Tensor[(14, 7, 12), float32]) -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(924), float64], Tensor[(605), float64]) {
  %939 = fn (%var_3824: Tensor[(14, 7, 12), float32]) -> (Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(924), float64], Tensor[(605), float64]) {
    %922 = @func_2372() /* ty=(Tensor[(14, 7, 12), float32],) */;
    %923 = @func_3798() /* ty=Tensor[(14, 7, 12), float32] */;
    %924 = cast(%var_3824, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
    %925 = shape_of(%923, dtype="int32") /* ty=Tensor[(3), int32] */;
    %926 = cast(%923, dtype="float64") /* ty=Tensor[(14, 7, 12), float64] */;
    %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %928 = cast(meta[relay.Constant][50] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
    %929 = cast(meta[relay.Constant][50] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
    %930 = cast(meta[relay.Constant][50] /* ty=Tensor[(605), float64] */, dtype="float64") /* ty=Tensor[(605), float64] */;
    %931 = reshape(%928, newshape=[605]) /* ty=Tensor[(605), float64] */;
    %932 = reshape(%929, newshape=[605]) /* ty=Tensor[(605), float64] */;
    %933 = reshape(%930, newshape=[605]) /* ty=Tensor[(605), float64] */;
    %934 = @func_3037(%931, %932, %933) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(5, 11, 11), float64], Tensor[(605), bool], Tensor[(14, 11, 6), float64], Tensor[(924), float64], Tensor[(390, 3), int8], Tensor[(648), float32], Tensor[(605), float32], Tensor[(605), float32]) */;
    %935 = %922.0;
    %936 = minimum(%926, %927) /* ty=Tensor[(14, 7, 12), float64] */;
    %937 = @func_2729() /* ty=Tensor[(14, 7, 12), float32] */;
    %938 = %934.4;
    (%935, %936, %937, %938, meta[relay.Constant][50] /* ty=Tensor[(605), float64] */)
  };
  %939(%var_3848) /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64], Tensor[(14, 7, 12), float32], Tensor[(924), float64], Tensor[(605), float64]) */
}

def @func_2755() -> (Tensor[(14, 7, 12), float32],) {
  %942 = fn () -> (Tensor[(14, 7, 12), float32],) {
    %940 = @func_2389() /* ty=(Tensor[(14, 7, 12), float32], Tensor[(14, 7, 12), float64]) */;
    %941 = %940.0;
    (%941,)
  };
  %942() /* ty=(Tensor[(14, 7, 12), float32],) */
}

def @func_1800(%var_1799: Tensor[(5, 11, 11), float64]) -> Tensor[(5, 11, 11), float64] {
  %944 = fn (%var_1784: Tensor[(5, 11, 11), float64]) -> Tensor[(5, 11, 11), float64] {
    %943 = cast(%var_1784, dtype="float64") /* ty=Tensor[(5, 11, 11), float64] */;
    asin(%943) /* ty=Tensor[(5, 11, 11), float64] */
  };
  %944(%var_1799) /* ty=Tensor[(5, 11, 11), float64] */
}

def @main(%var_10111: Tensor[(7, 10, 11), float32]) -> Tensor[(7, 10, 11), bool] {
  %945 = cast(meta[relay.Constant][51] /* ty=Tensor[(7, 1, 11), float32] */, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %946 = cast(%var_10111, dtype="bool") /* ty=Tensor[(7, 10, 11), bool] */;
  greater(%945, %946) /* ty=Tensor[(7, 10, 11), bool] */
}

def @func_6322() -> (Tensor[(14, 7, 12), bool],) {
  @func_6320() /* ty=(Tensor[(14, 7, 12), bool],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen360/build/output.py:2917: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen360/build/output.py", line 2922, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(770) tvmgen_default_fused_cast_greater_kernel0(signed char* __restrict__ T_greater, float* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_greater[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) < ((bool)placeholder1[((((((int)threadIdx.x) / 110) * 11) + (((int)threadIdx.x) % 11)))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


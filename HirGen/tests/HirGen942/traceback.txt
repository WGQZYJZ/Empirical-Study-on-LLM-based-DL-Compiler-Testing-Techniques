==========mod==========
#[version = "0.0.5"]
def @func_17180(%var_17160: Tensor[(15), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(5, 3, 1), float32], Tensor[(294), int64], Tensor[(1792), float64], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(14, 6, 6), float32], Tensor[(1, 504), float32]) {
  %0 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %4 = cast(%var_17160, dtype="float32") /* ty=Tensor[(15), float32] */;
  %5 = cast(meta[relay.Constant][2] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %6 = cast(meta[relay.Constant][3] /* ty=Tensor[(57344), bool] */, dtype="bool") /* ty=Tensor[(57344), bool] */;
  %7 = reshape(%1, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int64] */;
  %8 = reshape(%2, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int64] */;
  %9 = reshape(%3, newshape=[16, 112]) /* ty=Tensor[(16, 112), float64] */;
  %10 = reshape(%4, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %11 = reshape(%5, newshape=[32]) /* ty=Tensor[(32), float32] */;
  %12 = reshape(%6, newshape=[57344]) /* ty=Tensor[(57344), bool] */;
  %13 = @func_10207(%7, %8, %9, %10, %11, %12) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(8, 16, 14), float64], Tensor[(16, 112), float64], Tensor[(5, 3, 1), float32], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(10, 462), int16]) */;
  %14 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 504), float32] */, dtype="float32") /* ty=Tensor[(1, 504), float32] */;
  %15 = reshape(%14, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float32] */;
  %16 = @func_857(%15) /* ty=(Tensor[(14, 6, 6), float32],) */;
  %17 = %0.1;
  %18 = %13.3;
  %19 = %16.0;
  (%17, %18, meta[relay.Constant][0] /* ty=Tensor[(294), int64] */, meta[relay.Constant][1] /* ty=Tensor[(1792), float64] */, %var_17160, meta[relay.Constant][2] /* ty=Tensor[(32), float32] */, meta[relay.Constant][3] /* ty=Tensor[(57344), bool] */, %19, meta[relay.Constant][4] /* ty=Tensor[(1, 504), float32] */)
}

def @func_13190(%var_13155: Tensor[(2, 8, 11), int32], %var_13156: Tensor[(2, 8, 11), int32]) -> (Tensor[(2, 8, 11), bool],) {
  %20 = cast(%var_13156, dtype="bool") /* ty=Tensor[(2, 8, 11), bool] */;
  %21 = shape_of(%var_13155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%var_13155, dtype="bool") /* ty=Tensor[(2, 8, 11), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %24 = less(%22, %23) /* ty=Tensor[(2, 8, 11), bool] */;
  (%24,)
}

def @func_11482(%var_11473: Tensor[(6, 2, 5), uint64], %var_11474: Tensor[(6, 2, 5), uint64]) -> Tensor[(6, 2, 5), bool] {
  %25 = cast(%var_11474, dtype="bool") /* ty=Tensor[(6, 2, 5), bool] */;
  %26 = shape_of(%var_11473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%var_11473, dtype="bool") /* ty=Tensor[(6, 2, 5), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%27, %28) /* ty=Tensor[(6, 2, 5), bool] */
}

def @func_16138() -> (Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) {
  %29 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %30 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %31 = %30.1;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
  %33 = reshape(%32, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float64] */;
  %34 = cast(meta[relay.Constant][5] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %35 = reshape(%34, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float32] */;
  %36 = @func_7424(%35) /* ty=(Tensor[(3, 10, 15), float32],) */;
  %37 = %29.3;
  %38 = @func_5125(%33) /* ty=Tensor[(8, 12, 7), float64] */;
  %39 = %36.0;
  (%37, %31, %38, %39, meta[relay.Constant][5] /* ty=Tensor[(450), float32] */)
}

def @func_2244(%var_2198: Tensor[(11, 13, 8), float64]) -> (Tensor[(11, 13, 8), float64], Tensor[(1792), float64], Tensor[(120, 2), float64], Tensor[(1792), float64]) {
  %40 = cast(%var_2198, dtype="float64") /* ty=Tensor[(11, 13, 8), float64] */;
  %41 = cast(meta[relay.Constant][6] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %42 = cast(meta[relay.Constant][7] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %43 = reshape(%41, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
  %44 = reshape(%42, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %45 = @func_1814(%43, %44) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
  %46 = acosh(%40) /* ty=Tensor[(11, 13, 8), float64] */;
  %47 = %45.3;
  (%46, %47, meta[relay.Constant][6] /* ty=Tensor[(120, 2), float64] */, meta[relay.Constant][7] /* ty=Tensor[(1792), float64] */)
}

def @func_16071(%var_16052: Tensor[(60), uint64]) -> (Tensor[(5, 10, 1), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(4, 14, 16), int8], Tensor[(896), int8], Tensor[(1372), bool], Tensor[(6, 2, 5), bool], Tensor[(60), uint64]) {
  %48 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %49 = cast(meta[relay.Constant][8] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %50 = reshape(%49, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %51 = @func_14702(%50) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %52 = cast(meta[relay.Constant][9] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %53 = cast(meta[relay.Constant][9] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %54 = reshape(%52, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %55 = reshape(%53, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %56 = @func_8080(%54, %55) /* ty=(Tensor[(4, 14, 16), int8],) */;
  %57 = cast(meta[relay.Constant][10] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %58 = cast(meta[relay.Constant][10] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %59 = reshape(%57, newshape=[14, 7, 14]) /* ty=Tensor[(14, 7, 14), float64] */;
  %60 = reshape(%58, newshape=[14, 7, 14]) /* ty=Tensor[(14, 7, 14), float64] */;
  %61 = @func_14653(%59, %60) /* ty=(Tensor[(14, 7, 14), float64],) */;
  %62 = %61.0;
  %63 = cast(%62, dtype="bool") /* ty=Tensor[(14, 7, 14), bool] */;
  %64 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(1372), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %65 = cast(meta[relay.Constant][10] /* ty=Tensor[(1372), float64] */, dtype="bool") /* ty=Tensor[(1372), bool] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?), bool] */;
  %67 = cast(%var_16052, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %68 = cast(%var_16052, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %69 = reshape(%67, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), uint64] */;
  %70 = reshape(%68, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), uint64] */;
  %71 = %48.1;
  %72 = %51.0;
  %73 = %56.0;
  %74 = greater(%65, %66) /* ty=Tensor[(1372), bool] */;
  %75 = @func_11482(%69, %70) /* ty=Tensor[(6, 2, 5), bool] */;
  (%71, %72, meta[relay.Constant][8] /* ty=Tensor[(15), float32] */, %73, meta[relay.Constant][9] /* ty=Tensor[(896), int8] */, %74, %75, %var_16052)
}

def @func_14653(%var_14617: Tensor[(14, 7, 14), float64], %var_14618: Tensor[(14, 7, 14), float64]) -> (Tensor[(14, 7, 14), float64],) {
  %76 = cast(%var_14618, dtype="float64") /* ty=Tensor[(14, 7, 14), float64] */;
  %77 = shape_of(%var_14617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%var_14617, dtype="float64") /* ty=Tensor[(14, 7, 14), float64] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %80 = divide(%78, %79) /* ty=Tensor[(14, 7, 14), float64] */;
  (%80,)
}

def @func_16325() -> (Tensor[(8, 12, 7), float64],) {
  %81 = @func_15425() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %82 = %81.0;
  (%82,)
}

def @func_3956(%var_3886: Tensor[(9, 9, 1), float32], %var_3938: Tensor[(312), float32]) -> (Tensor[(9, 9, ?), bool], Tensor[(9, 9, ?), float64], Tensor[(312), float32], Tensor[(312), float32]) {
  %83 = cast(%var_3886, dtype="float32") /* ty=Tensor[(9, 9, 1), float32] */;
  %84 = rsqrt(%83) /* ty=Tensor[(9, 9, 1), float32] */;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(9, 9, 1), float64] */;
  %86 = atanh(%85) /* ty=Tensor[(9, 9, 1), float64] */;
  %87 = cast(%86, dtype="uint8") /* ty=Tensor[(9, 9, 1), uint8] */;
  %88 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%84, dtype="uint8") /* ty=Tensor[(9, 9, 1), uint8] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %91 = logical_xor(%89, %90) /* ty=Tensor[(9, 9, ?), uint8] */;
  %92 = cast(%91, dtype="bool") /* ty=Tensor[(9, 9, ?), bool] */;
  %93 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%86, dtype="bool") /* ty=Tensor[(9, 9, 1), bool] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %96 = cast(%86, dtype="float64") /* ty=Tensor[(9, 9, 1), float64] */;
  %97 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%91, dtype="float64") /* ty=Tensor[(9, 9, ?), float64] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %100 = cast(%var_3938, dtype="float32") /* ty=Tensor[(312), float32] */;
  %101 = reshape(%100, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %102 = @func_1149(%101) /* ty=(Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) */;
  %103 = logical_and(%94, %95) /* ty=Tensor[(9, 9, ?), bool] */;
  %104 = divide(%98, %99) /* ty=Tensor[(9, 9, ?), float64] */;
  %105 = %102.2;
  (%103, %104, %105, %var_3938)
}

def @func_16599() -> (Tensor[(8, 12, 7), float64],) {
  %106 = @func_16443() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) */;
  %107 = %106.0;
  (%107,)
}

def @func_17262(%var_17203: Tensor[(6, 1, 10), float64]) -> (Tensor[(14, 7, 14), float64], Tensor[(1372), float64], Tensor[(6, ?, 10), uint64]) {
  %108 = cast(meta[relay.Constant][11] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %109 = cast(meta[relay.Constant][11] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %110 = reshape(%108, newshape=[14, 7, 14]) /* ty=Tensor[(14, 7, 14), float64] */;
  %111 = reshape(%109, newshape=[14, 7, 14]) /* ty=Tensor[(14, 7, 14), float64] */;
  %112 = @func_14653(%110, %111) /* ty=(Tensor[(14, 7, 14), float64],) */;
  %113 = cast(%var_17203, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %114 = sigmoid(%113) /* ty=Tensor[(6, 1, 10), float64] */;
  %115 = cast(%114, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %116 = shape_of(%var_17203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%var_17203, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %119 = less(%117, %118) /* ty=Tensor[(6, ?, 10), bool] */;
  %120 = cast(%var_17203, dtype="uint64") /* ty=Tensor[(6, 1, 10), uint64] */;
  %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%119, dtype="uint64") /* ty=Tensor[(6, ?, 10), uint64] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %124 = %112.0;
  %125 = logical_xor(%122, %123) /* ty=Tensor[(6, ?, 10), uint64] */;
  (%124, meta[relay.Constant][11] /* ty=Tensor[(1372), float64] */, %125)
}

def @func_10749(%var_10711: int16, %var_10712: Tensor[(8, 3, 13), int16], %var_10718: Tensor[(1408), float32], %var_10745: Tensor[(8, 3, 13), bool]) -> (Tensor[(11, 8, 16), float32], Tensor[(1408), float32], Tensor[(8, 3, 13), float32]) {
  %126 = cast(%var_10718, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %127 = cast(%var_10718, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %128 = reshape(%126, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), float32] */;
  %129 = reshape(%127, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), float32] */;
  %130 = @func_5871(%128, %129) /* ty=(Tensor[(11, 8, 16), float32],) */;
  %131 = cast(%var_10711, dtype="bool") /* ty=bool */;
  %132 = cast(%var_10712, dtype="bool") /* ty=Tensor[(8, 3, 13), bool] */;
  %133 = not_equal(%131, %132) /* ty=Tensor[(8, 3, 13), bool] */;
  %134 = cast(%var_10745, dtype="float32") /* ty=Tensor[(8, 3, 13), float32] */;
  %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%133, dtype="float32") /* ty=Tensor[(8, 3, 13), float32] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %138 = %130.0;
  %139 = mod(%136, %137) /* ty=Tensor[(8, 3, 13), float32] */;
  (%138, %var_10718, %139)
}

def @func_8977(%var_8917: Tensor[(10, 2, 6), float32], %var_8937: Tensor[(3, 104), float32], %var_8951: Tensor[(3, 104), float32], %var_8961: Tensor[(3, 104), uint8], %var_8974: Tensor[(2, 640), float32], %var_8975: Tensor[(1792), float64]) -> (Tensor[(10, 2, 6), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), int64], Tensor[(312), float32], float32, Tensor[(2, 640), float32], Tensor[(1792), float64]) {
  %140 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 2, 6), float32] */, dtype="bool") /* ty=Tensor[(10, 2, 6), bool] */;
  %141 = shape_of(%var_8917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%var_8917, dtype="bool") /* ty=Tensor[(10, 2, 6), bool] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %144 = cast(%var_8937, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %145 = reshape(%144, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float32] */;
  %146 = @func_840(%145) /* ty=(Tensor[(3, 8, 13), float64],) */;
  %147 = cast(%var_8951, dtype="uint8") /* ty=Tensor[(3, 104), uint8] */;
  %148 = shape_of(%var_8937, dtype="int32") /* ty=Tensor[(2), int32] */;
  %149 = cast(%var_8937, dtype="uint8") /* ty=Tensor[(3, 104), uint8] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %151 = bitwise_and(%149, %150) /* ty=Tensor[(3, 104), uint8] */;
  %152 = cast(%var_8961, dtype="int64") /* ty=Tensor[(3, 104), int64] */;
  %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(2), int32] */;
  %154 = cast(%151, dtype="int64") /* ty=Tensor[(3, 104), int64] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %156 = cast(1.36364f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %157 = cast(%var_8974, dtype="float32") /* ty=Tensor[(2, 640), float32] */;
  %158 = cast(%var_8975, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %159 = reshape(%156, newshape=[]) /* ty=float32 */;
  %160 = reshape(%157, newshape=[5, 16, 16]) /* ty=Tensor[(5, 16, 16), float32] */;
  %161 = reshape(%158, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %162 = @func_6284(%159, %160, %161) /* ty=(Tensor[(5, 16, 16), float32], Tensor[(312), float32], Tensor[(240), float64], Tensor[(1792), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) */;
  %163 = less(%142, %143) /* ty=Tensor[(10, 2, 6), bool] */;
  %164 = %146.0;
  %165 = minimum(%154, %155) /* ty=Tensor[(3, 104), int64] */;
  %166 = %162.1;
  (%163, %164, %165, %166, 1.36364f /* ty=float32 */, %var_8974, %var_8975)
}

def @func_5871(%var_5862: Tensor[(11, 8, 16), float32], %var_5863: Tensor[(11, 8, 16), float32]) -> (Tensor[(11, 8, 16), float32],) {
  %167 = cast(%var_5863, dtype="float32") /* ty=Tensor[(11, 8, 16), float32] */;
  %168 = shape_of(%var_5862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%var_5862, dtype="float32") /* ty=Tensor[(11, 8, 16), float32] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %171 = divide(%169, %170) /* ty=Tensor[(11, 8, 16), float32] */;
  (%171,)
}

def @func_5721(%var_5717: Tensor[(16, 6, 7), float64]) -> Tensor[(16, 6, 7), float64] {
  %172 = cast(%var_5717, dtype="float64") /* ty=Tensor[(16, 6, 7), float64] */;
  acos(%172) /* ty=Tensor[(16, 6, 7), float64] */
}

def @func_6284(%var_6238: float32, %var_6239: Tensor[(5, 16, 16), float32], %var_6246: Tensor[(1792), float64]) -> (Tensor[(5, 16, 16), float32], Tensor[(312), float32], Tensor[(240), float64], Tensor[(1792), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) {
  %173 = cast(%var_6238, dtype="float32") /* ty=float32 */;
  %174 = cast(%var_6239, dtype="float32") /* ty=Tensor[(5, 16, 16), float32] */;
  %175 = cast(meta[relay.Constant][13] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %176 = cast(%var_6246, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %177 = reshape(%175, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
  %178 = reshape(%176, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %179 = @func_1814(%177, %178) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
  %180 = cast(meta[relay.Constant][14] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %181 = reshape(%180, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %182 = multiply(%173, %174) /* ty=Tensor[(5, 16, 16), float32] */;
  %183 = %179.1;
  %184 = @func_5721(%181) /* ty=Tensor[(16, 6, 7), float64] */;
  (%182, %183, meta[relay.Constant][13] /* ty=Tensor[(240), float64] */, %var_6246, %184, meta[relay.Constant][14] /* ty=Tensor[(672), float64] */)
}

def @func_1858(%var_1819: Tensor[(11, 3, 14), uint16], %var_1820: Tensor[(11, 3, 14), uint16], %var_1836: Tensor[(1792), float64]) -> (Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(11, 3, 14), float64], Tensor[(8, 16, 14), float64]) {
  %185 = cast(%var_1836, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %186 = reshape(%185, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
  %187 = @func_359(%186) /* ty=(Tensor[(8, 16, 14), float64],) */;
  %188 = cast(%var_1820, dtype="uint16") /* ty=Tensor[(11, 3, 14), uint16] */;
  %189 = shape_of(%var_1819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%var_1819, dtype="uint16") /* ty=Tensor[(11, 3, 14), uint16] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %192 = maximum(%190, %191) /* ty=Tensor[(11, 3, 14), uint16] */;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %194 = %187.0;
  %195 = cast(%194, dtype="float64") /* ty=Tensor[(8, 16, 14), float64] */;
  %196 = reshape(%195, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
  %197 = @func_359(%196) /* ty=(Tensor[(8, 16, 14), float64],) */;
  %198 = sinh(%193) /* ty=Tensor[(11, 3, 14), float64] */;
  %199 = %197.0;
  (%194, %var_1836, %198, %199)
}

def @func_16567(%var_16529: Tensor[(9, 2, 6), bool], %var_16537: Tensor[(1280), float32]) -> (Tensor[(9, 2, 6), bool], Tensor[(120), float32], Tensor[(1280), float32], Tensor[(1792), float64], Tensor[(3, 8, 13), int32]) {
  %200 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 2, 6), bool] */, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
  %201 = shape_of(%var_16529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%var_16529, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %205 = cast(meta[relay.Constant][18] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %206 = cast(meta[relay.Constant][18] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %207 = cast(meta[relay.Constant][18] /* ty=Tensor[(312), float32] */, dtype="uint8") /* ty=Tensor[(312), uint8] */;
  %208 = cast(%var_16537, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %209 = cast(meta[relay.Constant][17] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %210 = reshape(%204, newshape=[10, 2, 6]) /* ty=Tensor[(10, 2, 6), float32] */;
  %211 = reshape(%205, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
  %212 = reshape(%206, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
  %213 = reshape(%207, newshape=[3, 104]) /* ty=Tensor[(3, 104), uint8] */;
  %214 = reshape(%208, newshape=[2, 640]) /* ty=Tensor[(2, 640), float32] */;
  %215 = reshape(%209, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %216 = @func_8977(%210, %211, %212, %213, %214, %215) /* ty=(Tensor[(10, 2, 6), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), int64], Tensor[(312), float32], float32, Tensor[(2, 640), float32], Tensor[(1792), float64]) */;
  %217 = %216.1;
  %218 = cast(meta[relay.Constant][18] /* ty=Tensor[(312), float32] */, dtype="int32") /* ty=Tensor[(312), int32] */;
  %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%217, dtype="int32") /* ty=Tensor[(3, 8, 13), int32] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %222 = logical_and(%202, %203) /* ty=Tensor[(9, 2, 6), bool] */;
  %223 = bitwise_or(%220, %221) /* ty=Tensor[(3, 8, 13), int32] */;
  (%222, meta[relay.Constant][16] /* ty=Tensor[(120), float32] */, %var_16537, meta[relay.Constant][17] /* ty=Tensor[(1792), float64] */, %223)
}

def @main(%var_17577: Tensor[(60), uint64]) -> (Tensor[(15), float32], Tensor[(286, 4), float64], Tensor[(6, 2, 5), bool], Tensor[(60), uint64], Tensor[(15, 1, 1792), float32], Tensor[(490, 32), float32], Tensor[(462, 99), float32], Tensor[(462, 99), float32], Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(15, 462, 99), bool]) {
  %224 = cast(%var_17577, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %225 = cast(%var_17577, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %226 = reshape(%224, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), uint64] */;
  %227 = reshape(%225, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), uint64] */;
  %228 = cast(meta[relay.Constant][20] /* ty=Tensor[(286, 4), float64] */, dtype="float64") /* ty=Tensor[(286, 4), float64] */;
  %229 = reshape(%228, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float64] */;
  %230 = @func_2244(%229) /* ty=(Tensor[(11, 13, 8), float64], Tensor[(1792), float64], Tensor[(120, 2), float64], Tensor[(1792), float64]) */;
  %231 = %230.1;
  %232 = cast(meta[relay.Constant][19] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %233 = reshape(%232, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %234 = @func_17014(%233) /* ty=(Tensor[(3, 10, 15), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %235 = %234.1;
  %236 = cast(%231, dtype="float32") /* ty=Tensor[(1792), float32] */;
  %237 = cast(%235, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %238 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %239 = @func_16928() /* ty=(Tensor[(462, 99), float64],) */;
  %240 = %239.0;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %242 = cos(%241) /* ty=Tensor[(462, 99), float32] */;
  %243 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %244 = %243.2;
  %245 = cast(%244, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %246 = shape_of(%240, dtype="int32") /* ty=Tensor[(2), int32] */;
  %247 = cast(%240, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %249 = divide(%247, %248) /* ty=Tensor[(462, 99), float32] */;
  %250 = cast(%249, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %251 = shape_of(%242, dtype="int32") /* ty=Tensor[(2), int32] */;
  %252 = cast(%242, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %254 = cast(%240, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %255 = atan(%254) /* ty=Tensor[(462, 99), float32] */;
  %256 = cast(%242, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(2), int32] */;
  %258 = cast(%255, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %260 = cast(meta[relay.Constant][21] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %261 = reshape(%260, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float32] */;
  %262 = @func_840(%261) /* ty=(Tensor[(3, 8, 13), float64],) */;
  %263 = cast(%235, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
  %264 = cast(%242, dtype="bool") /* ty=Tensor[(462, 99), bool] */;
  %265 = not_equal(%263, %264) /* ty=Tensor[(15, 462, 99), bool] */;
  %266 = cast(%265, dtype="float32") /* ty=Tensor[(15, 462, 99), float32] */;
  %267 = sigmoid(%266) /* ty=Tensor[(15, 462, 99), float32] */;
  %268 = cast(%267, dtype="bool") /* ty=Tensor[(15, 462, 99), bool] */;
  %269 = cast(%255, dtype="bool") /* ty=Tensor[(462, 99), bool] */;
  %270 = @func_11482(%226, %227) /* ty=Tensor[(6, 2, 5), bool] */;
  %271 = power(%236, %237) /* ty=Tensor[(15, 1, 1792), float32] */;
  %272 = %238.3;
  %273 = add(%252, %253) /* ty=Tensor[(462, 99), float32] */;
  %274 = maximum(%258, %259) /* ty=Tensor[(462, 99), float32] */;
  %275 = %262.0;
  %276 = logical_or(%268, %269) /* ty=Tensor[(15, 462, 99), bool] */;
  (meta[relay.Constant][19] /* ty=Tensor[(15), float32] */, meta[relay.Constant][20] /* ty=Tensor[(286, 4), float64] */, %270, %var_17577, %271, %272, %273, %274, %275, meta[relay.Constant][21] /* ty=Tensor[(312), float32] */, %276)
}

def @func_12790(%var_12770: Tensor[(3, 3, 5), bool], %var_12785: Tensor[(3, 104), int16], %var_12786: Tensor[(1408), float32]) -> (Tensor[(3, 3, 5), bool], Tensor[(3, 3, 5), float32], Tensor[(11, 8, 16), float32], Tensor[(3, 104), int16], Tensor[(1408), float32]) {
  %277 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %278 = cast(%var_12770, dtype="bool") /* ty=Tensor[(3, 3, 5), bool] */;
  %279 = cast(%var_12770, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
  %280 = cast(True /* ty=bool */, dtype="int16") /* ty=int16 */;
  %281 = cast(%var_12785, dtype="int16") /* ty=Tensor[(3, 104), int16] */;
  %282 = cast(%var_12786, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %283 = cast(%var_12785, dtype="bool") /* ty=Tensor[(3, 104), bool] */;
  %284 = reshape(%280, newshape=[]) /* ty=int16 */;
  %285 = reshape(%281, newshape=[8, 3, 13]) /* ty=Tensor[(8, 3, 13), int16] */;
  %286 = reshape(%282, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
  %287 = reshape(%283, newshape=[8, 3, 13]) /* ty=Tensor[(8, 3, 13), bool] */;
  %288 = @func_10749(%284, %285, %286, %287) /* ty=(Tensor[(11, 8, 16), float32], Tensor[(1408), float32], Tensor[(8, 3, 13), float32]) */;
  %289 = logical_and(%277, %278) /* ty=Tensor[(3, 3, 5), bool] */;
  %290 = acos(%279) /* ty=Tensor[(3, 3, 5), float32] */;
  %291 = %288.0;
  (%289, %290, %291, %var_12785, %var_12786)
}

def @func_1149(%var_1144: Tensor[(312), float32]) -> (Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) {
  %292 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(14, 15, 14), float64] */;
  %293 = cast(%var_1144, dtype="float32") /* ty=Tensor[(312), float32] */;
  %294 = reshape(%293, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float32] */;
  %295 = @func_840(%294) /* ty=(Tensor[(3, 8, 13), float64],) */;
  %296 = log10(%292) /* ty=Tensor[(14, 15, 14), float64] */;
  %297 = %295.0;
  (%296, %297, %var_1144)
}

def @func_2073(%var_2034: Tensor[(4, 8, 1), float32], %var_2039: Tensor[(1792), float64], %var_2070: Tensor[(462), uint16]) -> (Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) {
  %298 = cast(%var_2039, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %299 = reshape(%298, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
  %300 = @func_359(%299) /* ty=(Tensor[(8, 16, 14), float64],) */;
  %301 = cast(%var_2034, dtype="float32") /* ty=Tensor[(4, 8, 1), float32] */;
  %302 = sin(%301) /* ty=Tensor[(4, 8, 1), float32] */;
  %303 = cast(%302, dtype="float32") /* ty=Tensor[(4, 8, 1), float32] */;
  %304 = cast(%var_2039, dtype="float32") /* ty=Tensor[(1792), float32] */;
  %305 = cast(%302, dtype="bool") /* ty=Tensor[(4, 8, 1), bool] */;
  %306 = cast(%var_2039, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %307 = cast(%var_2070, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %308 = cast(%var_2070, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %309 = cast(%var_2039, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %310 = reshape(%307, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint16] */;
  %311 = reshape(%308, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint16] */;
  %312 = reshape(%309, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %313 = @func_1858(%310, %311, %312) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(11, 3, 14), float64], Tensor[(8, 16, 14), float64]) */;
  %314 = %300.0;
  %315 = mod(%303, %304) /* ty=Tensor[(4, 8, 1792), float32] */;
  %316 = not_equal(%305, %306) /* ty=Tensor[(4, 8, 1792), bool] */;
  %317 = %313.1;
  (%314, %315, %316, %317, %var_2070)
}

def @func_3777(%var_3746: Tensor[(5, 3, 1), float32], %var_3751: Tensor[(32), float32], %var_3752: Tensor[(1792, 1), float64], %var_3753: Tensor[(462), uint16], %var_3756: Tensor[(4, 8, 1792), bool]) -> (Tensor[(5, 3, 1), float32], Tensor[(462), uint16], Tensor[(4, 8, 1792), uint8], Tensor[(1792, 32), int32]) {
  %318 = cast(%var_3746, dtype="float32") /* ty=Tensor[(5, 3, 1), float32] */;
  %319 = cast(%var_3751, dtype="float32") /* ty=Tensor[(32), float32] */;
  %320 = cast(%var_3752, dtype="float64") /* ty=Tensor[(1792, 1), float64] */;
  %321 = cast(%var_3753, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %322 = reshape(%319, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), float32] */;
  %323 = reshape(%320, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %324 = reshape(%321, newshape=[462]) /* ty=Tensor[(462), uint16] */;
  %325 = @func_2073(%322, %323, %324) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) */;
  %326 = %325.2;
  %327 = cast(%var_3756, dtype="uint8") /* ty=Tensor[(4, 8, 1792), uint8] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="uint8") /* ty=Tensor[(4, 8, 1792), uint8] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %331 = cast(%var_3752, dtype="int32") /* ty=Tensor[(1792, 1), int32] */;
  %332 = cast(%var_3751, dtype="int32") /* ty=Tensor[(32), int32] */;
  %333 = tan(%318) /* ty=Tensor[(5, 3, 1), float32] */;
  %334 = minimum(%329, %330) /* ty=Tensor[(4, 8, 1792), uint8] */;
  %335 = add(%331, %332) /* ty=Tensor[(1792, 32), int32] */;
  (%333, %var_3753, %334, %335)
}

def @func_16883(%var_16878: Tensor[(8, 12, 7), float64]) -> (Tensor[(8, 12, 7), int8],) {
  %336 = @func_16667() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */;
  %337 = %336.1;
  %338 = cast(%var_16878, dtype="int8") /* ty=Tensor[(8, 12, 7), int8] */;
  %339 = shape_of(%337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%337, dtype="int8") /* ty=Tensor[(8, 12, 7), int8] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %342 = bitwise_and(%340, %341) /* ty=Tensor[(8, 12, 7), int8] */;
  (%342,)
}

def @func_16443() -> (Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) {
  %343 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %344 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 60), uint32] */, dtype="uint32") /* ty=Tensor[(12, 60), uint32] */;
  %345 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 60), uint32] */, dtype="uint32") /* ty=Tensor[(12, 60), uint32] */;
  %346 = reshape(%344, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), uint32] */;
  %347 = reshape(%345, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), uint32] */;
  %348 = @func_12849(%346, %347) /* ty=(Tensor[(6, 15, 8), uint32],) */;
  %349 = %343.1;
  %350 = %348.0;
  (%349, %350, meta[relay.Constant][23] /* ty=Tensor[(12, 60), uint32] */)
}

def @func_16780() -> (Tensor[(8, 12, 7), float64],) {
  %351 = @func_16759() /* ty=Tensor[(8, 12, 7), float64] */;
  (%351,)
}

def @func_12849(%var_12836: Tensor[(6, 15, 8), uint32], %var_12837: Tensor[(6, 15, 8), uint32]) -> (Tensor[(6, 15, 8), uint32],) {
  %352 = cast(%var_12837, dtype="uint32") /* ty=Tensor[(6, 15, 8), uint32] */;
  %353 = shape_of(%var_12836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(%var_12836, dtype="uint32") /* ty=Tensor[(6, 15, 8), uint32] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %356 = bitwise_xor(%354, %355) /* ty=Tensor[(6, 15, 8), uint32] */;
  (%356,)
}

def @func_1502(%var_1468: Tensor[(5, 13, 8), bool], %var_1469: Tensor[(5, 13, 8), bool], %var_1497: Tensor[(312), float32]) -> (Tensor[(5, 13, 8), bool], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) {
  %357 = cast(%var_1469, dtype="bool") /* ty=Tensor[(5, 13, 8), bool] */;
  %358 = shape_of(%var_1468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_1468, dtype="bool") /* ty=Tensor[(5, 13, 8), bool] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %361 = cast(meta[relay.Constant][24] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %362 = reshape(%361, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
  %363 = @func_359(%362) /* ty=(Tensor[(8, 16, 14), float64],) */;
  %364 = cast(meta[relay.Constant][24] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %365 = cast(%var_1497, dtype="float32") /* ty=Tensor[(312), float32] */;
  %366 = reshape(%365, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %367 = @func_1149(%366) /* ty=(Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) */;
  %368 = logical_and(%359, %360) /* ty=Tensor[(5, 13, 8), bool] */;
  %369 = %363.0;
  %370 = asin(%364) /* ty=Tensor[(1792), float64] */;
  %371 = %367.0;
  (%368, %369, %370, %371, %var_1497)
}

def @func_7738(%var_7693: int64, %var_7713: Tensor[(1408), float32]) -> (Tensor[(2, 1, 16), int64], Tensor[(11, 8, 16), float32], Tensor[(1408), float32]) {
  %372 = cast(%var_7693, dtype="int64") /* ty=int64 */;
  %373 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 1, 16), int64] */, dtype="int64") /* ty=Tensor[(2, 1, 16), int64] */;
  %374 = cast(%var_7713, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %375 = cast(%var_7713, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %376 = reshape(%374, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), float32] */;
  %377 = reshape(%375, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), float32] */;
  %378 = @func_5871(%376, %377) /* ty=(Tensor[(11, 8, 16), float32],) */;
  %379 = right_shift(%372, %373) /* ty=Tensor[(2, 1, 16), int64] */;
  %380 = %378.0;
  (%379, %380, %var_7713)
}

def @func_5125(%var_5120: Tensor[(8, 12, 7), float64]) -> Tensor[(8, 12, 7), float64] {
  %381 = cast(%var_5120, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
  erf(%381) /* ty=Tensor[(8, 12, 7), float64] */
}

def @func_15894(%var_15860: Tensor[(15), float32], %var_15874: Tensor[(32), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(15), float32], Tensor[(8, 16, 14), float64], Tensor[(32), float32], Tensor[(15, 1, 462), uint8], Tensor[(64, 28), float64]) {
  %382 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %383 = cast(%var_15874, dtype="float32") /* ty=Tensor[(32), float32] */;
  %384 = cast(meta[relay.Constant][26] /* ty=Tensor[(64, 28), float64] */, dtype="float64") /* ty=Tensor[(64, 28), float64] */;
  %385 = cast(meta[relay.Constant][27] /* ty=Tensor[(462), uint16] */, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %386 = reshape(%383, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), float32] */;
  %387 = reshape(%384, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %388 = reshape(%385, newshape=[462]) /* ty=Tensor[(462), uint16] */;
  %389 = @func_2073(%386, %387, %388) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) */;
  %390 = cast(%var_15860, dtype="float32") /* ty=Tensor[(15), float32] */;
  %391 = reshape(%390, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %392 = @func_14702(%391) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %393 = %392.0;
  %394 = cast(meta[relay.Constant][27] /* ty=Tensor[(462), uint16] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %395 = cast(%393, dtype="uint8") /* ty=Tensor[(15, 1, 1), uint8] */;
  %396 = cast(meta[relay.Constant][26] /* ty=Tensor[(64, 28), float64] */, dtype="float64") /* ty=Tensor[(64, 28), float64] */;
  %397 = %382.0;
  %398 = %389.0;
  %399 = subtract(%394, %395) /* ty=Tensor[(15, 1, 462), uint8] */;
  %400 = exp(%396) /* ty=Tensor[(64, 28), float64] */;
  (%397, %var_15860, %398, %var_15874, %399, %400)
}

def @func_15982() -> (Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) {
  %401 = @func_15425() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %402 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %403 = %402.3;
  %404 = cast(%403, dtype="float64") /* ty=Tensor[(490, 32), float64] */;
  %405 = atan(%404) /* ty=Tensor[(490, 32), float64] */;
  %406 = cast(%405, dtype="float64") /* ty=Tensor[(490, 32), float64] */;
  %407 = sqrt(%406) /* ty=Tensor[(490, 32), float64] */;
  %408 = cast(%405, dtype="float64") /* ty=Tensor[(490, 32), float64] */;
  %409 = shape_of(%407, dtype="int32") /* ty=Tensor[(2), int32] */;
  %410 = cast(%407, dtype="float64") /* ty=Tensor[(490, 32), float64] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %412 = cast(%407, dtype="float32") /* ty=Tensor[(490, 32), float32] */;
  %413 = %401.0;
  %414 = floor_mod(%410, %411) /* ty=Tensor[(490, 32), float64] */;
  %415 = exp(%412) /* ty=Tensor[(490, 32), float32] */;
  (%413, %414, %415)
}

def @func_11105(%var_11064: Tensor[(2, 1, 15), float64], %var_11091: Tensor[(1078), float32], %var_11092: Tensor[(312), float32]) -> (Tensor[(2, 1, 15), float64], Tensor[(14, 15, 14), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(2, 1, 15), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) {
  %416 = cast(%var_11064, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
  %417 = sigmoid(%416) /* ty=Tensor[(2, 1, 15), float64] */;
  %418 = cast(%417, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
  %419 = cast(%var_11091, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %420 = cast(%var_11092, dtype="float32") /* ty=Tensor[(312), float32] */;
  %421 = reshape(%419, newshape=[14, 11, 7]) /* ty=Tensor[(14, 11, 7), float32] */;
  %422 = reshape(%420, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %423 = @func_4702(%421, %422) /* ty=(Tensor[(14, 11, 7), float32], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) */;
  %424 = cast(%var_11064, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
  %425 = asin(%424) /* ty=Tensor[(2, 1, 15), float64] */;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
  %427 = cast(meta[relay.Constant][28] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %428 = reshape(%427, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %429 = atan(%418) /* ty=Tensor[(2, 1, 15), float64] */;
  %430 = %423.1;
  %431 = log2(%426) /* ty=Tensor[(2, 1, 15), float64] */;
  %432 = @func_5721(%428) /* ty=Tensor[(16, 6, 7), float64] */;
  (%429, %430, %var_11091, %var_11092, %431, %432, meta[relay.Constant][28] /* ty=Tensor[(672), float64] */)
}

def @func_15277() -> Tensor[(5, 10, 1), float64] {
  @func_15246() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_17489() -> (Tensor[(8, 12, 7), float64], Tensor[(504), float32], Tensor[(504), float32]) {
  %433 = @func_17419() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %434 = cast(meta[relay.Constant][29] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %435 = reshape(%434, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %436 = @func_16522(%435) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(14, 6, 6), float32], Tensor[(504), float32]) */;
  %437 = %433.0;
  %438 = %436.4;
  (%437, %438, meta[relay.Constant][29] /* ty=Tensor[(504), float32] */)
}

def @func_15581(%var_15560: Tensor[(7, 4, 13), float64], %var_15566: Tensor[(2, 120), float64], %var_15567: Tensor[(1792), float64], %var_15570: Tensor[(2, 120), float64]) -> (Tensor[(7, 4, 13), float64], Tensor[(3, 8, 13), float64], Tensor[(1792), float64], Tensor[(2, 120), int8]) {
  %439 = cast(%var_15560, dtype="float64") /* ty=Tensor[(7, 4, 13), float64] */;
  %440 = cast(%var_15566, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
  %441 = cast(%var_15567, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %442 = reshape(%440, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
  %443 = reshape(%441, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %444 = @func_1814(%442, %443) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
  %445 = cast(%var_15570, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %446 = shape_of(%var_15566, dtype="int32") /* ty=Tensor[(2), int32] */;
  %447 = cast(%var_15566, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %449 = asin(%439) /* ty=Tensor[(7, 4, 13), float64] */;
  %450 = %444.0;
  %451 = minimum(%447, %448) /* ty=Tensor[(2, 120), int8] */;
  (%449, %450, %var_15567, %451)
}

def @func_7424(%var_7420: Tensor[(3, 10, 15), float32]) -> (Tensor[(3, 10, 15), float32],) {
  %452 = cast(%var_7420, dtype="float32") /* ty=Tensor[(3, 10, 15), float32] */;
  %453 = asinh(%452) /* ty=Tensor[(3, 10, 15), float32] */;
  (%453,)
}

def @func_17048() -> Tensor[(5, 10, 1), float64] {
  @func_15277() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_12266(%var_12231: Tensor[(3, 104), float32], %var_12237: Tensor[(294), int64], %var_12241: Tensor[(57344), bool], %var_12263: Tensor[(520), bool]) -> (Tensor[(10, 8, 4), float64], Tensor[(3, 8, 13), float64], Tensor[(96, 20), uint64], Tensor[(3, 104), float32], Tensor[(8, 16, 14), float64], Tensor[(294), int64], Tensor[(1792), float64], Tensor[(15), float32], Tensor[(16, 2), float32], Tensor[(57344), bool], Tensor[(8, 16, 14), float64], Tensor[(312), float32], Tensor[(520), bool]) {
  %454 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
  %455 = cos(%454) /* ty=Tensor[(10, 8, 4), float64] */;
  %456 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
  %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%455, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %460 = divide(%458, %459) /* ty=Tensor[(10, 8, 4), float64] */;
  %461 = cast(%460, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
  %462 = cast(meta[relay.Constant][31] /* ty=Tensor[(96, 20), uint64] */, dtype="uint64") /* ty=Tensor[(96, 20), uint64] */;
  %463 = cast(meta[relay.Constant][31] /* ty=Tensor[(96, 20), uint64] */, dtype="uint64") /* ty=Tensor[(96, 20), uint64] */;
  %464 = cast(%var_12231, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %465 = reshape(%462, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), uint64] */;
  %466 = reshape(%463, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), uint64] */;
  %467 = reshape(%464, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
  %468 = @func_8998(%465, %466, %467) /* ty=(Tensor[(12, 10, 16), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), float32]) */;
  %469 = cast(%var_12237, dtype="int64") /* ty=Tensor[(294), int64] */;
  %470 = cast(%var_12237, dtype="int64") /* ty=Tensor[(294), int64] */;
  %471 = cast(meta[relay.Constant][32] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %472 = cast(meta[relay.Constant][33] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %473 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 2), float32] */;
  %474 = cast(%var_12241, dtype="bool") /* ty=Tensor[(57344), bool] */;
  %475 = reshape(%469, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int64] */;
  %476 = reshape(%470, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int64] */;
  %477 = reshape(%471, newshape=[16, 112]) /* ty=Tensor[(16, 112), float64] */;
  %478 = reshape(%472, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %479 = reshape(%473, newshape=[32]) /* ty=Tensor[(32), float32] */;
  %480 = reshape(%474, newshape=[57344]) /* ty=Tensor[(57344), bool] */;
  %481 = @func_10207(%475, %476, %477, %478, %479, %480) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(8, 16, 14), float64], Tensor[(16, 112), float64], Tensor[(5, 3, 1), float32], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(10, 462), int16]) */;
  %482 = cast(meta[relay.Constant][32] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %483 = reshape(%482, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
  %484 = @func_359(%483) /* ty=(Tensor[(8, 16, 14), float64],) */;
  %485 = cast(%var_12263, dtype="bool") /* ty=Tensor[(520), bool] */;
  %486 = cast(%var_12263, dtype="bool") /* ty=Tensor[(520), bool] */;
  %487 = cast(%var_12231, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %488 = reshape(%485, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), bool] */;
  %489 = reshape(%486, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), bool] */;
  %490 = reshape(%487, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %491 = @func_1502(%488, %489, %490) /* ty=(Tensor[(5, 13, 8), bool], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) */;
  %492 = rsqrt(%461) /* ty=Tensor[(10, 8, 4), float64] */;
  %493 = %468.1;
  %494 = %481.1;
  %495 = %484.0;
  %496 = %491.4;
  (%492, %493, meta[relay.Constant][31] /* ty=Tensor[(96, 20), uint64] */, %var_12231, %494, %var_12237, meta[relay.Constant][32] /* ty=Tensor[(1792), float64] */, meta[relay.Constant][33] /* ty=Tensor[(15), float32] */, meta[relay.Constant][34] /* ty=Tensor[(16, 2), float32] */, %var_12241, %495, %496, %var_12263)
}

def @func_4627(%var_4601: Tensor[(14, 7, 5), float64], %var_4618: Tensor[(16, 2), float32]) -> (Tensor[(14, 7, 5), float64], Tensor[(8, 16, 14), float64], Tensor[(16, 2), float32], Tensor[(1792), float64], Tensor[(462, 1), uint16]) {
  %497 = cast(%var_4601, dtype="float64") /* ty=Tensor[(14, 7, 5), float64] */;
  %498 = cast(%var_4618, dtype="float32") /* ty=Tensor[(16, 2), float32] */;
  %499 = cast(meta[relay.Constant][35] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %500 = cast(meta[relay.Constant][36] /* ty=Tensor[(462, 1), uint16] */, dtype="uint16") /* ty=Tensor[(462, 1), uint16] */;
  %501 = reshape(%498, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), float32] */;
  %502 = reshape(%499, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %503 = reshape(%500, newshape=[462]) /* ty=Tensor[(462), uint16] */;
  %504 = @func_2073(%501, %502, %503) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) */;
  %505 = tan(%497) /* ty=Tensor[(14, 7, 5), float64] */;
  %506 = %504.0;
  (%505, %506, %var_4618, meta[relay.Constant][35] /* ty=Tensor[(1792), float64] */, meta[relay.Constant][36] /* ty=Tensor[(462, 1), uint16] */)
}

def @func_16392(%var_16355: Tensor[(8, 12, 7), float64], %var_16388: Tensor[(30), float64], %var_16389: Tensor[(240), float64], %var_16390: Tensor[(32), float32]) -> (Tensor[(5, 10, 1), float64], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(8, 12, 7), float32], Tensor[(1078), float32], Tensor[(30), float64], Tensor[(240), float64], Tensor[(32), float32]) {
  %507 = cast(meta[relay.Constant][37] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %508 = reshape(%507, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
  %509 = @func_16201() /* ty=(Tensor[(3, 10, 15), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */;
  %510 = %509.1;
  %511 = cast(%var_16355, dtype="float32") /* ty=Tensor[(8, 12, 7), float32] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%510, dtype="float32") /* ty=Tensor[(8, 12, 7), float32] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %515 = cast(%var_16388, dtype="float64") /* ty=Tensor[(30), float64] */;
  %516 = cast(%var_16389, dtype="float64") /* ty=Tensor[(240), float64] */;
  %517 = cast(%var_16390, dtype="float32") /* ty=Tensor[(32), float32] */;
  %518 = cast(%var_16389, dtype="float64") /* ty=Tensor[(240), float64] */;
  %519 = reshape(%515, newshape=[30, 1]) /* ty=Tensor[(30, 1), float64] */;
  %520 = reshape(%516, newshape=[24, 10]) /* ty=Tensor[(24, 10), float64] */;
  %521 = reshape(%517, newshape=[32]) /* ty=Tensor[(32), float32] */;
  %522 = reshape(%518, newshape=[24, 10]) /* ty=Tensor[(24, 10), float64] */;
  %523 = @func_15230(%519, %520, %521, %522) /* ty=(Tensor[(5, 10, 1), float64], Tensor[(2, 1, 15), float64], Tensor[(30, 1), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(16, 2), float32], Tensor[(245, 2), float64], Tensor[(32), float32], Tensor[(24, 10), bool]) */;
  %524 = @func_15246() /* ty=Tensor[(5, 10, 1), float64] */;
  %525 = @func_10510(%508) /* ty=Tensor[(16, 4, 5), float32] */;
  %526 = mod(%513, %514) /* ty=Tensor[(8, 12, 7), float32] */;
  %527 = %523.3;
  (%524, %525, meta[relay.Constant][37] /* ty=Tensor[(320), float32] */, %526, %527, %var_16388, %var_16389, %var_16390)
}

def @func_17419() -> (Tensor[(8, 12, 7), float64],) {
  %528 = @func_16325() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %529 = %528.0;
  (%529,)
}

def @func_9213(%var_9187: Tensor[(7, 4, 8), float64], %var_9210: Tensor[(312), float32]) -> (Tensor[(7, 4, 8), float64], Tensor[(462), uint16], Tensor[(99), float64], Tensor[(120, 2), float64], Tensor[(1144, 1), float64], Tensor[(8, 16, 14), float64], Tensor[(260, 2), bool], Tensor[(312), float32]) {
  %530 = cast(%var_9187, dtype="float64") /* ty=Tensor[(7, 4, 8), float64] */;
  %531 = cast(meta[relay.Constant][38] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %532 = reshape(%531, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %533 = @func_7969(%532) /* ty=(Tensor[(11, ?, 9), bool], Tensor[(1792), float64], Tensor[(32), float32], Tensor[(1792), float64], Tensor[(462), uint16]) */;
  %534 = cast(meta[relay.Constant][39] /* ty=Tensor[(1144, 1), float64] */, dtype="float64") /* ty=Tensor[(1144, 1), float64] */;
  %535 = reshape(%534, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float64] */;
  %536 = @func_2244(%535) /* ty=(Tensor[(11, 13, 8), float64], Tensor[(1792), float64], Tensor[(120, 2), float64], Tensor[(1792), float64]) */;
  %537 = cast(meta[relay.Constant][40] /* ty=Tensor[(260, 2), bool] */, dtype="bool") /* ty=Tensor[(260, 2), bool] */;
  %538 = cast(meta[relay.Constant][40] /* ty=Tensor[(260, 2), bool] */, dtype="bool") /* ty=Tensor[(260, 2), bool] */;
  %539 = cast(%var_9210, dtype="float32") /* ty=Tensor[(312), float32] */;
  %540 = reshape(%537, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), bool] */;
  %541 = reshape(%538, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), bool] */;
  %542 = reshape(%539, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %543 = @func_1502(%540, %541, %542) /* ty=(Tensor[(5, 13, 8), bool], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) */;
  %544 = sin(%530) /* ty=Tensor[(7, 4, 8), float64] */;
  %545 = %533.4;
  %546 = %536.2;
  %547 = %543.1;
  (%544, %545, meta[relay.Constant][38] /* ty=Tensor[(99), float64] */, %546, meta[relay.Constant][39] /* ty=Tensor[(1144, 1), float64] */, %547, meta[relay.Constant][40] /* ty=Tensor[(260, 2), bool] */, %var_9210)
}

def @func_10510(%var_10500: Tensor[(16, 4, 5), float32]) -> Tensor[(16, 4, 5), float32] {
  %548 = cast(%var_10500, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  sin(%548) /* ty=Tensor[(16, 4, 5), float32] */
}

def @func_15425() -> (Tensor[(8, 12, 7), float64],) {
  %549 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %550 = %549.1;
  (%550,)
}

def @func_16201() -> (Tensor[(3, 10, 15), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) {
  %551 = @func_16138() /* ty=(Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) */;
  %552 = @func_15425() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %553 = @func_15982() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) */;
  %554 = %551.3;
  %555 = %552.0;
  %556 = %553.0;
  (%554, %555, %556)
}

def @func_17481() -> (Tensor[(672), float64], Tensor[(5, 10, 1), float64], Tensor[(6, 15, 8), uint32]) {
  %557 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %558 = @func_16443() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) */;
  %559 = %557.2;
  %560 = @func_15246() /* ty=Tensor[(5, 10, 1), float64] */;
  %561 = %558.1;
  (%559, %560, %561)
}

def @func_7572(%var_7554: Tensor[(16, 6, 4), float32], %var_7555: Tensor[(16, 6, 4), float32]) -> (Tensor[(16, 6, 4), float32],) {
  %562 = cast(%var_7555, dtype="float32") /* ty=Tensor[(16, 6, 4), float32] */;
  %563 = shape_of(%var_7554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%var_7554, dtype="float32") /* ty=Tensor[(16, 6, 4), float32] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %566 = floor_divide(%564, %565) /* ty=Tensor[(16, 6, 4), float32] */;
  (%566,)
}

def @func_14702(%var_14687: Tensor[(15, 1, 1), float32]) -> (Tensor[(15, 1, 1), float32],) {
  %567 = cast(5.52204f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %568 = cast(%var_14687, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %569 = divide(%567, %568) /* ty=Tensor[(15, 1, 1), float32] */;
  (%569,)
}

def @func_13325(%var_13320: Tensor[(15, 11, 14), int64]) -> Tensor[(15, 11, 14), int64] {
  %570 = cast(%var_13320, dtype="int64") /* ty=Tensor[(15, 11, 14), int64] */;
  %571 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(15, 11, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 11, 14), int64] */, dtype="int64") /* ty=Tensor[(15, 11, 14), int64] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%572, %573) /* ty=Tensor[(15, 11, 14), int64] */
}

def @func_17440() -> Tensor[(5, 10, 1), float64] {
  @func_17048() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_840(%var_828: Tensor[(3, 8, 13), float32]) -> (Tensor[(3, 8, 13), float64],) {
  %574 = cast(%var_828, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %575 = rsqrt(%574) /* ty=Tensor[(3, 8, 13), float32] */;
  %576 = cast(%575, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
  %577 = sigmoid(%576) /* ty=Tensor[(3, 8, 13), float64] */;
  (%577,)
}

def @func_4702(%var_4676: Tensor[(14, 11, 7), float32], %var_4684: Tensor[(312), float32]) -> (Tensor[(14, 11, 7), float32], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) {
  %578 = cast(%var_4676, dtype="float32") /* ty=Tensor[(14, 11, 7), float32] */;
  %579 = cast(%var_4684, dtype="float32") /* ty=Tensor[(312), float32] */;
  %580 = reshape(%579, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %581 = @func_1149(%580) /* ty=(Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) */;
  %582 = sinh(%578) /* ty=Tensor[(14, 11, 7), float32] */;
  %583 = %581.0;
  (%582, %583, %var_4684)
}

def @func_16726() -> (Tensor[(672), float64],) {
  %584 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %585 = %584.2;
  (%585,)
}

def @func_8080(%var_8057: Tensor[(4, 14, 16), int8], %var_8058: Tensor[(4, 14, 16), int8]) -> (Tensor[(4, 14, 16), int8],) {
  %586 = cast(%var_8058, dtype="int8") /* ty=Tensor[(4, 14, 16), int8] */;
  %587 = shape_of(%var_8057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%var_8057, dtype="int8") /* ty=Tensor[(4, 14, 16), int8] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %590 = minimum(%588, %589) /* ty=Tensor[(4, 14, 16), int8] */;
  (%590,)
}

def @func_16522(%var_16504: Tensor[(504), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(14, 6, 6), float32], Tensor[(504), float32]) {
  %591 = @func_16443() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) */;
  %592 = @func_16138() /* ty=(Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) */;
  %593 = %592.1;
  %594 = cast(%593, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
  %595 = reshape(%594, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float64] */;
  %596 = cast(%var_16504, dtype="float32") /* ty=Tensor[(504), float32] */;
  %597 = reshape(%596, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float32] */;
  %598 = @func_857(%597) /* ty=(Tensor[(14, 6, 6), float32],) */;
  %599 = %591.0;
  %600 = @func_5125(%595) /* ty=Tensor[(8, 12, 7), float64] */;
  %601 = %598.0;
  (%599, %593, %600, %601, %var_16504)
}

def @func_16759() -> Tensor[(8, 12, 7), float64] {
  %602 = @func_16667() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */;
  %602.0
}

def @func_15230(%var_15206: Tensor[(30, 1), float64], %var_15211: Tensor[(24, 10), float64], %var_15218: Tensor[(32), float32], %var_15225: Tensor[(24, 10), float64]) -> (Tensor[(5, 10, 1), float64], Tensor[(2, 1, 15), float64], Tensor[(30, 1), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(16, 2), float32], Tensor[(245, 2), float64], Tensor[(32), float32], Tensor[(24, 10), bool]) {
  %603 = cast(%var_15206, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
  %604 = cast(meta[relay.Constant][42] /* ty=Tensor[(1078), float32] */, dtype="float32") /* ty=Tensor[(1078), float32] */;
  %605 = cast(meta[relay.Constant][43] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %606 = reshape(%603, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float64] */;
  %607 = reshape(%604, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
  %608 = reshape(%605, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %609 = @func_11105(%606, %607, %608) /* ty=(Tensor[(2, 1, 15), float64], Tensor[(14, 15, 14), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(2, 1, 15), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) */;
  %610 = cast(%var_15211, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
  %611 = cast(meta[relay.Constant][44] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %612 = reshape(%610, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
  %613 = reshape(%611, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %614 = @func_1814(%612, %613) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
  %615 = cast(meta[relay.Constant][45] /* ty=Tensor[(245, 2), float64] */, dtype="float64") /* ty=Tensor[(245, 2), float64] */;
  %616 = cast(%var_15218, dtype="float32") /* ty=Tensor[(32), float32] */;
  %617 = reshape(%615, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), float64] */;
  %618 = reshape(%616, newshape=[16, 2]) /* ty=Tensor[(16, 2), float32] */;
  %619 = @func_4627(%617, %618) /* ty=(Tensor[(14, 7, 5), float64], Tensor[(8, 16, 14), float64], Tensor[(16, 2), float32], Tensor[(1792), float64], Tensor[(462, 1), uint16]) */;
  %620 = cast(%var_15225, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %621 = shape_of(%var_15211, dtype="int32") /* ty=Tensor[(2), int32] */;
  %622 = cast(%var_15211, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %624 = @func_15174() /* ty=Tensor[(5, 10, 1), float64] */;
  %625 = %609.4;
  %626 = %614.2;
  %627 = %619.2;
  %628 = greater(%622, %623) /* ty=Tensor[(24, 10), bool] */;
  (%624, %625, %var_15206, meta[relay.Constant][42] /* ty=Tensor[(1078), float32] */, meta[relay.Constant][43] /* ty=Tensor[(312), float32] */, %626, meta[relay.Constant][44] /* ty=Tensor[(1792), float64] */, %627, meta[relay.Constant][45] /* ty=Tensor[(245, 2), float64] */, %var_15218, %628)
}

def @func_16928() -> (Tensor[(462, 99), float64],) {
  %629 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %630 = %629.2;
  %631 = cast(%630, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
  %632 = log(%631) /* ty=Tensor[(462, 99), float64] */;
  %633 = cast(%632, dtype="bool") /* ty=Tensor[(462, 99), bool] */;
  %634 = shape_of(%630, dtype="int32") /* ty=Tensor[(2), int32] */;
  %635 = cast(%630, dtype="bool") /* ty=Tensor[(462, 99), bool] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %637 = logical_and(%635, %636) /* ty=Tensor[(462, 99), bool] */;
  %638 = cast(%637, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
  %639 = shape_of(%630, dtype="int32") /* ty=Tensor[(2), int32] */;
  %640 = cast(%630, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %642 = floor_mod(%640, %641) /* ty=Tensor[(462, 99), float64] */;
  %643 = cast(%632, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
  %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(2), int32] */;
  %645 = cast(%642, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %647 = floor_divide(%645, %646) /* ty=Tensor[(462, 99), float64] */;
  (%647,)
}

def @func_17014(%var_17000: Tensor[(15), float32]) -> (Tensor[(3, 10, 15), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) {
  %648 = @func_16201() /* ty=(Tensor[(3, 10, 15), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */;
  %649 = %648.0;
  %650 = cast(%649, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
  %651 = cast(%var_17000, dtype="float32") /* ty=Tensor[(15), float32] */;
  %652 = reshape(%651, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %653 = @func_14702(%652) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %654 = acos(%650) /* ty=Tensor[(3, 10, 15), float64] */;
  %655 = %653.0;
  (%654, %655, %var_17000)
}

def @func_16667() -> (Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) {
  %656 = @func_16325() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %657 = @func_16138() /* ty=(Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) */;
  %658 = %656.0;
  %659 = %657.1;
  (%658, %659)
}

def @func_15695() -> (Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) {
  %660 = @func_15425() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %661 = cast(meta[relay.Constant][46] /* ty=Tensor[(490, 1), float64] */, dtype="float64") /* ty=Tensor[(490, 1), float64] */;
  %662 = cast(meta[relay.Constant][47] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %663 = reshape(%662, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %664 = @func_7969(%663) /* ty=(Tensor[(11, ?, 9), bool], Tensor[(1792), float64], Tensor[(32), float32], Tensor[(1792), float64], Tensor[(462), uint16]) */;
  %665 = %664.2;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(32), float32] */;
  %667 = reshape(%661, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), float64] */;
  %668 = reshape(%666, newshape=[16, 2]) /* ty=Tensor[(16, 2), float32] */;
  %669 = @func_4627(%667, %668) /* ty=(Tensor[(14, 7, 5), float64], Tensor[(8, 16, 14), float64], Tensor[(16, 2), float32], Tensor[(1792), float64], Tensor[(462, 1), uint16]) */;
  %670 = %669.4;
  %671 = cast(%670, dtype="uint32") /* ty=Tensor[(462, 1), uint32] */;
  %672 = cast(meta[relay.Constant][47] /* ty=Tensor[(99), float64] */, dtype="uint32") /* ty=Tensor[(99), uint32] */;
  %673 = cast(meta[relay.Constant][46] /* ty=Tensor[(490, 1), float64] */, dtype="float32") /* ty=Tensor[(490, 1), float32] */;
  %674 = cast(%665, dtype="float32") /* ty=Tensor[(32), float32] */;
  %675 = %660.0;
  %676 = @func_15174() /* ty=Tensor[(5, 10, 1), float64] */;
  %677 = left_shift(%671, %672) /* ty=Tensor[(462, 99), uint32] */;
  %678 = mod(%673, %674) /* ty=Tensor[(490, 32), float32] */;
  (%675, %676, %677, %678)
}

def @func_2159(%var_2145: Tensor[(13, 4, 15), float32]) -> Tensor[(13, 4, 15), float64] {
  %679 = cast(%var_2145, dtype="float32") /* ty=Tensor[(13, 4, 15), float32] */;
  %680 = erf(%679) /* ty=Tensor[(13, 4, 15), float32] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(13, 4, 15), float64] */;
  asin(%681) /* ty=Tensor[(13, 4, 15), float64] */
}

def @func_857(%var_854: Tensor[(14, 6, 6), float32]) -> (Tensor[(14, 6, 6), float32],) {
  %682 = cast(%var_854, dtype="float32") /* ty=Tensor[(14, 6, 6), float32] */;
  %683 = rsqrt(%682) /* ty=Tensor[(14, 6, 6), float32] */;
  (%683,)
}

def @func_17114(%var_17069: Tensor[(120), float32], %var_17070: Tensor[(312, 1), float32], %var_17071: Tensor[(1280), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(1792), float64], Tensor[(312, 1280), bool], Tensor[(312, 1280), float64]) {
  %684 = @func_15982() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) */;
  %685 = cast(%var_17069, dtype="float32") /* ty=Tensor[(120), float32] */;
  %686 = cast(%var_17070, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
  %687 = cast(%var_17070, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
  %688 = cast(%var_17070, dtype="uint8") /* ty=Tensor[(312, 1), uint8] */;
  %689 = cast(%var_17071, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %690 = cast(meta[relay.Constant][48] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %691 = reshape(%685, newshape=[10, 2, 6]) /* ty=Tensor[(10, 2, 6), float32] */;
  %692 = reshape(%686, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
  %693 = reshape(%687, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
  %694 = reshape(%688, newshape=[3, 104]) /* ty=Tensor[(3, 104), uint8] */;
  %695 = reshape(%689, newshape=[2, 640]) /* ty=Tensor[(2, 640), float32] */;
  %696 = reshape(%690, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %697 = @func_8977(%691, %692, %693, %694, %695, %696) /* ty=(Tensor[(10, 2, 6), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), int64], Tensor[(312), float32], float32, Tensor[(2, 640), float32], Tensor[(1792), float64]) */;
  %698 = cast(%var_17071, dtype="bool") /* ty=Tensor[(1280), bool] */;
  %699 = cast(%var_17070, dtype="bool") /* ty=Tensor[(312, 1), bool] */;
  %700 = cast(%var_17071, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %701 = cast(%var_17070, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
  %702 = floor_mod(%700, %701) /* ty=Tensor[(312, 1280), float32] */;
  %703 = cast(%702, dtype="float64") /* ty=Tensor[(312, 1280), float64] */;
  %704 = cast(%var_17070, dtype="float64") /* ty=Tensor[(312, 1), float64] */;
  %705 = %684.0;
  %706 = %697.6;
  %707 = equal(%698, %699) /* ty=Tensor[(312, 1280), bool] */;
  %708 = divide(%703, %704) /* ty=Tensor[(312, 1280), float64] */;
  (%705, %706, %var_17069, meta[relay.Constant][48] /* ty=Tensor[(1792), float64] */, %707, %708)
}

def @func_15174() -> Tensor[(5, 10, 1), float64] {
  %709 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 10, 1), float64] */;
  atanh(%709) /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_8998(%var_8987: Tensor[(12, 10, 16), uint64], %var_8988: Tensor[(12, 10, 16), uint64], %var_8994: Tensor[(3, 104), float32]) -> (Tensor[(12, 10, 16), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), float32]) {
  %710 = cast(%var_8988, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  %711 = shape_of(%var_8987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_8987, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %714 = cast(%var_8994, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %715 = reshape(%714, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %716 = @func_1149(%715) /* ty=(Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) */;
  %717 = greater(%712, %713) /* ty=Tensor[(12, 10, 16), bool] */;
  %718 = %716.1;
  (%717, %718, %var_8994)
}

def @func_1814(%var_1772: Tensor[(1, 16, 15), float64], %var_1789: Tensor[(1792), float64]) -> (Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) {
  %719 = cast(meta[relay.Constant][50] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %720 = reshape(%719, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float32] */;
  %721 = @func_840(%720) /* ty=(Tensor[(3, 8, 13), float64],) */;
  %722 = cast(%var_1789, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %723 = reshape(%722, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
  %724 = @func_359(%723) /* ty=(Tensor[(8, 16, 14), float64],) */;
  %725 = cast(%var_1772, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
  %726 = rsqrt(%725) /* ty=Tensor[(1, 16, 15), float64] */;
  %727 = cast(%var_1772, dtype="uint16") /* ty=Tensor[(1, 16, 15), uint16] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%726, dtype="uint16") /* ty=Tensor[(1, 16, 15), uint16] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %731 = %721.0;
  %732 = %724.0;
  %733 = minimum(%729, %730) /* ty=Tensor[(?, 16, 15), uint16] */;
  (%731, meta[relay.Constant][50] /* ty=Tensor[(312), float32] */, %732, %var_1789, %733)
}

def @func_7969(%var_7923: Tensor[(11, 1, 9), float64]) -> (Tensor[(11, ?, 9), bool], Tensor[(1792), float64], Tensor[(32), float32], Tensor[(1792), float64], Tensor[(462), uint16]) {
  %734 = cast(%var_7923, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
  %735 = rsqrt(%734) /* ty=Tensor[(11, 1, 9), float64] */;
  %736 = cast(%var_7923, dtype="bool") /* ty=Tensor[(11, 1, 9), bool] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="bool") /* ty=Tensor[(11, 1, 9), bool] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %740 = cast(meta[relay.Constant][51] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %741 = cast(meta[relay.Constant][52] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %742 = cast(meta[relay.Constant][53] /* ty=Tensor[(462), uint16] */, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %743 = reshape(%740, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), float32] */;
  %744 = reshape(%741, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %745 = reshape(%742, newshape=[462]) /* ty=Tensor[(462), uint16] */;
  %746 = @func_2073(%743, %744, %745) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) */;
  %747 = greater(%738, %739) /* ty=Tensor[(11, ?, 9), bool] */;
  %748 = %746.3;
  (%747, %748, meta[relay.Constant][51] /* ty=Tensor[(32), float32] */, meta[relay.Constant][52] /* ty=Tensor[(1792), float64] */, meta[relay.Constant][53] /* ty=Tensor[(462), uint16] */)
}

def @func_15763() -> (Tensor[(5, 10, 1), float64],) {
  %749 = @func_15246() /* ty=Tensor[(5, 10, 1), float64] */;
  (%749,)
}

def @func_17386() -> (Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), int8]) {
  %750 = @func_16443() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
  %753 = reshape(%752, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float64] */;
  %754 = @func_16883(%753) /* ty=(Tensor[(8, 12, 7), int8],) */;
  %755 = %754.0;
  (%751, %755)
}

def @func_11920(%var_11867: Tensor[(6, 14, 6), int32], %var_11868: Tensor[(6, 14, 6), int32]) -> (Tensor[(6, 14, 6), int32], Tensor[(3, 8, 13), float64], Tensor[(4, 480), uint64], Tensor[(312), float32]) {
  %756 = cast(%var_11868, dtype="int32") /* ty=Tensor[(6, 14, 6), int32] */;
  %757 = shape_of(%var_11867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%var_11867, dtype="int32") /* ty=Tensor[(6, 14, 6), int32] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %760 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 480), uint64] */, dtype="uint64") /* ty=Tensor[(4, 480), uint64] */;
  %761 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 480), uint64] */, dtype="uint64") /* ty=Tensor[(4, 480), uint64] */;
  %762 = cast(meta[relay.Constant][55] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %763 = reshape(%760, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), uint64] */;
  %764 = reshape(%761, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), uint64] */;
  %765 = reshape(%762, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
  %766 = @func_8998(%763, %764, %765) /* ty=(Tensor[(12, 10, 16), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), float32]) */;
  %767 = right_shift(%758, %759) /* ty=Tensor[(6, 14, 6), int32] */;
  %768 = %766.1;
  (%767, %768, meta[relay.Constant][54] /* ty=Tensor[(4, 480), uint64] */, meta[relay.Constant][55] /* ty=Tensor[(312), float32] */)
}

def @func_15372() -> (Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) {
  %769 = cast(meta[relay.Constant][56] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %770 = reshape(%769, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float64] */;
  %771 = @func_15246() /* ty=Tensor[(5, 10, 1), float64] */;
  %772 = @func_5125(%770) /* ty=Tensor[(8, 12, 7), float64] */;
  (%771, %772, meta[relay.Constant][56] /* ty=Tensor[(672), float64] */)
}

def @func_359(%var_355: Tensor[(8, 16, 14), float64]) -> (Tensor[(8, 16, 14), float64],) {
  %773 = cast(%var_355, dtype="float64") /* ty=Tensor[(8, 16, 14), float64] */;
  %774 = sin(%773) /* ty=Tensor[(8, 16, 14), float64] */;
  (%774,)
}

def @func_17342(%var_17312: Tensor[(312), float32], %var_17313: Tensor[(1280), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(312), float32], Tensor[(1280), float32], Tensor[(8, 12, 7), float64], Tensor[(3, 8, 13), float64], Tensor[(240), float64], Tensor[(490, 32), float64], Tensor[(312), float32], Tensor[(224, 1), float64]) {
  %775 = @func_16780() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %776 = cast(meta[relay.Constant][57] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %777 = cast(%var_17312, dtype="float32") /* ty=Tensor[(312), float32] */;
  %778 = cast(%var_17313, dtype="float32") /* ty=Tensor[(1280), float32] */;
  %779 = reshape(%776, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %780 = reshape(%777, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
  %781 = reshape(%778, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
  %782 = @func_17114(%779, %780, %781) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(1792), float64], Tensor[(312, 1280), bool], Tensor[(312, 1280), float64]) */;
  %783 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %784 = cast(meta[relay.Constant][58] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %785 = %782.1;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %787 = reshape(%784, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
  %788 = reshape(%786, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %789 = @func_1814(%787, %788) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
  %790 = @func_15982() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) */;
  %791 = cast(meta[relay.Constant][59] /* ty=Tensor[(224, 1), float64] */, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
  %792 = %789.0;
  %793 = cast(%792, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %794 = reshape(%791, newshape=[7, 4, 8]) /* ty=Tensor[(7, 4, 8), float64] */;
  %795 = reshape(%793, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %796 = @func_9213(%794, %795) /* ty=(Tensor[(7, 4, 8), float64], Tensor[(462), uint16], Tensor[(99), float64], Tensor[(120, 2), float64], Tensor[(1144, 1), float64], Tensor[(8, 16, 14), float64], Tensor[(260, 2), bool], Tensor[(312), float32]) */;
  %797 = %775.0;
  %798 = %783.1;
  %799 = %790.1;
  %800 = %796.7;
  (%797, %785, meta[relay.Constant][57] /* ty=Tensor[(120), float32] */, %var_17312, %var_17313, %798, %792, meta[relay.Constant][58] /* ty=Tensor[(240), float64] */, %799, %800, meta[relay.Constant][59] /* ty=Tensor[(224, 1), float64] */)
}

def @func_10207(%var_10165: Tensor[(7, 6, 7), int64], %var_10166: Tensor[(7, 6, 7), int64], %var_10175: Tensor[(16, 112), float64], %var_10179: Tensor[(15), float32], %var_10180: Tensor[(32), float32], %var_10182: Tensor[(57344), bool]) -> (Tensor[(7, 6, 7), bool], Tensor[(8, 16, 14), float64], Tensor[(16, 112), float64], Tensor[(5, 3, 1), float32], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(10, 462), int16]) {
  %801 = cast(%var_10166, dtype="bool") /* ty=Tensor[(7, 6, 7), bool] */;
  %802 = shape_of(%var_10165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%var_10165, dtype="bool") /* ty=Tensor[(7, 6, 7), bool] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %805 = cast(%var_10175, dtype="float64") /* ty=Tensor[(16, 112), float64] */;
  %806 = reshape(%805, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
  %807 = @func_359(%806) /* ty=(Tensor[(8, 16, 14), float64],) */;
  %808 = cast(%var_10179, dtype="float32") /* ty=Tensor[(15), float32] */;
  %809 = cast(%var_10180, dtype="float32") /* ty=Tensor[(32), float32] */;
  %810 = cast(%var_10175, dtype="float64") /* ty=Tensor[(16, 112), float64] */;
  %811 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 462), uint16] */, dtype="uint16") /* ty=Tensor[(1, 462), uint16] */;
  %812 = cast(%var_10182, dtype="bool") /* ty=Tensor[(57344), bool] */;
  %813 = reshape(%808, newshape=[5, 3, 1]) /* ty=Tensor[(5, 3, 1), float32] */;
  %814 = reshape(%809, newshape=[32]) /* ty=Tensor[(32), float32] */;
  %815 = reshape(%810, newshape=[1792, 1]) /* ty=Tensor[(1792, 1), float64] */;
  %816 = reshape(%811, newshape=[462]) /* ty=Tensor[(462), uint16] */;
  %817 = reshape(%812, newshape=[4, 8, 1792]) /* ty=Tensor[(4, 8, 1792), bool] */;
  %818 = @func_3777(%813, %814, %815, %816, %817) /* ty=(Tensor[(5, 3, 1), float32], Tensor[(462), uint16], Tensor[(4, 8, 1792), uint8], Tensor[(1792, 32), int32]) */;
  %819 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 462), uint16] */, dtype="int16") /* ty=Tensor[(1, 462), int16] */;
  %820 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 462), uint16] */, dtype="int16") /* ty=Tensor[(10, 462), int16] */;
  %821 = less(%803, %804) /* ty=Tensor[(7, 6, 7), bool] */;
  %822 = %807.0;
  %823 = %818.0;
  %824 = minimum(%819, %820) /* ty=Tensor[(10, 462), int16] */;
  (%821, %822, %var_10175, %823, %var_10179, %var_10180, %var_10182, %824)
}

def @func_15246() -> Tensor[(5, 10, 1), float64] {
  @func_15174() /* ty=Tensor[(5, 10, 1), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1152(%var_1150: Tensor[(312), float32]) -> (Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) {
  @func_1149(%var_1150) /* ty=(Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) */
}

def @func_17491() -> (Tensor[(8, 12, 7), float64], Tensor[(504), float32], Tensor[(504), float32]) {
  @func_17489() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(504), float32], Tensor[(504), float32]) */
}

def @func_16522(%var_16504: Tensor[(504), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(14, 6, 6), float32], Tensor[(504), float32]) {
  %0 = @func_16443() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) */;
  %1 = @func_16138() /* ty=(Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) */;
  %2 = %1.1;
  %3 = cast(%2, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
  %4 = reshape(%3, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float64] */;
  %5 = cast(%var_16504, dtype="float32") /* ty=Tensor[(504), float32] */;
  %6 = reshape(%5, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float32] */;
  %7 = @func_857(%6) /* ty=(Tensor[(14, 6, 6), float32],) */;
  %8 = %0.0;
  %9 = @func_5125(%4) /* ty=Tensor[(8, 12, 7), float64] */;
  %10 = %7.0;
  (%8, %2, %9, %10, %var_16504)
}

def @func_16140() -> (Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) {
  @func_16138() /* ty=(Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) */
}

def @func_3956(%var_3886: Tensor[(9, 9, 1), float32], %var_3938: Tensor[(312), float32]) -> (Tensor[(9, 9, ?), bool], Tensor[(9, 9, ?), float64], Tensor[(312), float32], Tensor[(312), float32]) {
  %11 = cast(%var_3886, dtype="float32") /* ty=Tensor[(9, 9, 1), float32] */;
  %12 = rsqrt(%11) /* ty=Tensor[(9, 9, 1), float32] */;
  %13 = cast(%12, dtype="float64") /* ty=Tensor[(9, 9, 1), float64] */;
  %14 = atanh(%13) /* ty=Tensor[(9, 9, 1), float64] */;
  %15 = cast(%14, dtype="uint8") /* ty=Tensor[(9, 9, 1), uint8] */;
  %16 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%12, dtype="uint8") /* ty=Tensor[(9, 9, 1), uint8] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %19 = logical_xor(%17, %18) /* ty=Tensor[(9, 9, ?), uint8] */;
  %20 = cast(%19, dtype="bool") /* ty=Tensor[(9, 9, ?), bool] */;
  %21 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%14, dtype="bool") /* ty=Tensor[(9, 9, 1), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %24 = cast(%14, dtype="float64") /* ty=Tensor[(9, 9, 1), float64] */;
  %25 = shape_of(%19, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(%19, dtype="float64") /* ty=Tensor[(9, 9, ?), float64] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %28 = cast(%var_3938, dtype="float32") /* ty=Tensor[(312), float32] */;
  %29 = reshape(%28, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %30 = @func_1149(%29) /* ty=(Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) */;
  %31 = logical_and(%22, %23) /* ty=Tensor[(9, 9, ?), bool] */;
  %32 = divide(%26, %27) /* ty=Tensor[(9, 9, ?), float64] */;
  %33 = %30.2;
  (%31, %32, %33, %var_3938)
}

def @func_15894(%var_15860: Tensor[(15), float32], %var_15874: Tensor[(32), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(15), float32], Tensor[(8, 16, 14), float64], Tensor[(32), float32], Tensor[(15, 1, 462), uint8], Tensor[(64, 28), float64]) {
  %34 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %35 = cast(%var_15874, dtype="float32") /* ty=Tensor[(32), float32] */;
  %36 = cast(meta[relay.Constant][0] /* ty=Tensor[(64, 28), float64] */, dtype="float64") /* ty=Tensor[(64, 28), float64] */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(462), uint16] */, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %38 = reshape(%35, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), float32] */;
  %39 = reshape(%36, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %40 = reshape(%37, newshape=[462]) /* ty=Tensor[(462), uint16] */;
  %41 = @func_2073(%38, %39, %40) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) */;
  %42 = cast(%var_15860, dtype="float32") /* ty=Tensor[(15), float32] */;
  %43 = reshape(%42, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %44 = @func_14702(%43) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %45 = %44.0;
  %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(462), uint16] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %47 = cast(%45, dtype="uint8") /* ty=Tensor[(15, 1, 1), uint8] */;
  %48 = cast(meta[relay.Constant][0] /* ty=Tensor[(64, 28), float64] */, dtype="float64") /* ty=Tensor[(64, 28), float64] */;
  %49 = %34.0;
  %50 = %41.0;
  %51 = subtract(%46, %47) /* ty=Tensor[(15, 1, 462), uint8] */;
  %52 = exp(%48) /* ty=Tensor[(64, 28), float64] */;
  (%49, %var_15860, %50, %var_15874, %51, %52)
}

def @func_5874(%var_5872: Tensor[(11, 8, 16), float32], %var_5873: Tensor[(11, 8, 16), float32]) -> (Tensor[(11, 8, 16), float32],) {
  %58 = fn (%var_5862: Tensor[(11, 8, 16), float32], %var_5863: Tensor[(11, 8, 16), float32]) -> (Tensor[(11, 8, 16), float32],) {
    %53 = cast(%var_5863, dtype="float32") /* ty=Tensor[(11, 8, 16), float32] */;
    %54 = shape_of(%var_5862, dtype="int32") /* ty=Tensor[(3), int32] */;
    %55 = cast(%var_5862, dtype="float32") /* ty=Tensor[(11, 8, 16), float32] */;
    %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %57 = divide(%55, %56) /* ty=Tensor[(11, 8, 16), float32] */;
    (%57,)
  };
  %58(%var_5872, %var_5873) /* ty=(Tensor[(11, 8, 16), float32],) */
}

def @func_4706(%var_4704: Tensor[(14, 11, 7), float32], %var_4705: Tensor[(312), float32]) -> (Tensor[(14, 11, 7), float32], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) {
  @func_4702(%var_4704, %var_4705) /* ty=(Tensor[(14, 11, 7), float32], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) */
}

def @func_16781() -> (Tensor[(8, 12, 7), float64],) {
  %60 = fn () -> (Tensor[(8, 12, 7), float64],) {
    %59 = @func_16759() /* ty=Tensor[(8, 12, 7), float64] */;
    (%59,)
  };
  %60() /* ty=(Tensor[(8, 12, 7), float64],) */
}

def @func_17048() -> Tensor[(5, 10, 1), float64] {
  @func_15277() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_16326() -> (Tensor[(8, 12, 7), float64],) {
  %63 = fn () -> (Tensor[(8, 12, 7), float64],) {
    %61 = @func_15425() /* ty=(Tensor[(8, 12, 7), float64],) */;
    %62 = %61.0;
    (%62,)
  };
  %63() /* ty=(Tensor[(8, 12, 7), float64],) */
}

def @func_17183(%var_17181: Tensor[(15), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(5, 3, 1), float32], Tensor[(294), int64], Tensor[(1792), float64], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(14, 6, 6), float32], Tensor[(1, 504), float32]) {
  @func_17180(%var_17181) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 3, 1), float32], Tensor[(294), int64], Tensor[(1792), float64], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(14, 6, 6), float32], Tensor[(1, 504), float32]) */
}

def @func_15983() -> (Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) {
  %79 = fn () -> (Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) {
    %64 = @func_15425() /* ty=(Tensor[(8, 12, 7), float64],) */;
    %65 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
    %66 = %65.3;
    %67 = cast(%66, dtype="float64") /* ty=Tensor[(490, 32), float64] */;
    %68 = atan(%67) /* ty=Tensor[(490, 32), float64] */;
    %69 = cast(%68, dtype="float64") /* ty=Tensor[(490, 32), float64] */;
    %70 = sqrt(%69) /* ty=Tensor[(490, 32), float64] */;
    %71 = cast(%68, dtype="float64") /* ty=Tensor[(490, 32), float64] */;
    %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(2), int32] */;
    %73 = cast(%70, dtype="float64") /* ty=Tensor[(490, 32), float64] */;
    %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %75 = cast(%70, dtype="float32") /* ty=Tensor[(490, 32), float32] */;
    %76 = %64.0;
    %77 = floor_mod(%73, %74) /* ty=Tensor[(490, 32), float64] */;
    %78 = exp(%75) /* ty=Tensor[(490, 32), float32] */;
    (%76, %77, %78)
  };
  %79() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) */
}

def @func_14702(%var_14687: Tensor[(15, 1, 1), float32]) -> (Tensor[(15, 1, 1), float32],) {
  %80 = cast(5.52204f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %81 = cast(%var_14687, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %82 = divide(%80, %81) /* ty=Tensor[(15, 1, 1), float32] */;
  (%82,)
}

def @func_5128(%var_5126: Tensor[(8, 12, 7), float64]) -> Tensor[(8, 12, 7), float64] {
  @func_5125(%var_5126) /* ty=Tensor[(8, 12, 7), float64] */
}

def @func_15697() -> (Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) {
  @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */
}

def @func_859(%var_858: Tensor[(14, 6, 6), float32]) -> (Tensor[(14, 6, 6), float32],) {
  %85 = fn (%var_854: Tensor[(14, 6, 6), float32]) -> (Tensor[(14, 6, 6), float32],) {
    %83 = cast(%var_854, dtype="float32") /* ty=Tensor[(14, 6, 6), float32] */;
    %84 = rsqrt(%83) /* ty=Tensor[(14, 6, 6), float32] */;
    (%84,)
  };
  %85(%var_858) /* ty=(Tensor[(14, 6, 6), float32],) */
}

def @func_16138() -> (Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) {
  %86 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %87 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %88 = %87.1;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
  %90 = reshape(%89, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float64] */;
  %91 = cast(meta[relay.Constant][2] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %92 = reshape(%91, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float32] */;
  %93 = @func_7424(%92) /* ty=(Tensor[(3, 10, 15), float32],) */;
  %94 = %86.3;
  %95 = @func_5125(%90) /* ty=Tensor[(8, 12, 7), float64] */;
  %96 = %93.0;
  (%94, %88, %95, %96, meta[relay.Constant][2] /* ty=Tensor[(450), float32] */)
}

def @func_1862(%var_1859: Tensor[(11, 3, 14), uint16], %var_1860: Tensor[(11, 3, 14), uint16], %var_1861: Tensor[(1792), float64]) -> (Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(11, 3, 14), float64], Tensor[(8, 16, 14), float64]) {
  %112 = fn (%var_1819: Tensor[(11, 3, 14), uint16], %var_1820: Tensor[(11, 3, 14), uint16], %var_1836: Tensor[(1792), float64]) -> (Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(11, 3, 14), float64], Tensor[(8, 16, 14), float64]) {
    %97 = cast(%var_1836, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %98 = reshape(%97, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
    %99 = @func_359(%98) /* ty=(Tensor[(8, 16, 14), float64],) */;
    %100 = cast(%var_1820, dtype="uint16") /* ty=Tensor[(11, 3, 14), uint16] */;
    %101 = shape_of(%var_1819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %102 = cast(%var_1819, dtype="uint16") /* ty=Tensor[(11, 3, 14), uint16] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %104 = maximum(%102, %103) /* ty=Tensor[(11, 3, 14), uint16] */;
    %105 = cast(%104, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
    %106 = %99.0;
    %107 = cast(%106, dtype="float64") /* ty=Tensor[(8, 16, 14), float64] */;
    %108 = reshape(%107, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
    %109 = @func_359(%108) /* ty=(Tensor[(8, 16, 14), float64],) */;
    %110 = sinh(%105) /* ty=Tensor[(11, 3, 14), float64] */;
    %111 = %109.0;
    (%106, %var_1836, %110, %111)
  };
  %112(%var_1859, %var_1860, %var_1861) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(11, 3, 14), float64], Tensor[(8, 16, 14), float64]) */
}

def @func_6289(%var_6286: float32, %var_6287: Tensor[(5, 16, 16), float32], %var_6288: Tensor[(1792), float64]) -> (Tensor[(5, 16, 16), float32], Tensor[(312), float32], Tensor[(240), float64], Tensor[(1792), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) {
  @func_6284(%var_6286, %var_6287, %var_6288) /* ty=(Tensor[(5, 16, 16), float32], Tensor[(312), float32], Tensor[(240), float64], Tensor[(1792), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) */
}

def @func_361(%var_360: Tensor[(8, 16, 14), float64]) -> (Tensor[(8, 16, 14), float64],) {
  %115 = fn (%var_355: Tensor[(8, 16, 14), float64]) -> (Tensor[(8, 16, 14), float64],) {
    %113 = cast(%var_355, dtype="float64") /* ty=Tensor[(8, 16, 14), float64] */;
    %114 = sin(%113) /* ty=Tensor[(8, 16, 14), float64] */;
    (%114,)
  };
  %115(%var_360) /* ty=(Tensor[(8, 16, 14), float64],) */
}

def @func_8977(%var_8917: Tensor[(10, 2, 6), float32], %var_8937: Tensor[(3, 104), float32], %var_8951: Tensor[(3, 104), float32], %var_8961: Tensor[(3, 104), uint8], %var_8974: Tensor[(2, 640), float32], %var_8975: Tensor[(1792), float64]) -> (Tensor[(10, 2, 6), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), int64], Tensor[(312), float32], float32, Tensor[(2, 640), float32], Tensor[(1792), float64]) {
  %116 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 2, 6), float32] */, dtype="bool") /* ty=Tensor[(10, 2, 6), bool] */;
  %117 = shape_of(%var_8917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%var_8917, dtype="bool") /* ty=Tensor[(10, 2, 6), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %120 = cast(%var_8937, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %121 = reshape(%120, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float32] */;
  %122 = @func_840(%121) /* ty=(Tensor[(3, 8, 13), float64],) */;
  %123 = cast(%var_8951, dtype="uint8") /* ty=Tensor[(3, 104), uint8] */;
  %124 = shape_of(%var_8937, dtype="int32") /* ty=Tensor[(2), int32] */;
  %125 = cast(%var_8937, dtype="uint8") /* ty=Tensor[(3, 104), uint8] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %127 = bitwise_and(%125, %126) /* ty=Tensor[(3, 104), uint8] */;
  %128 = cast(%var_8961, dtype="int64") /* ty=Tensor[(3, 104), int64] */;
  %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(2), int32] */;
  %130 = cast(%127, dtype="int64") /* ty=Tensor[(3, 104), int64] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %132 = cast(1.36364f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %133 = cast(%var_8974, dtype="float32") /* ty=Tensor[(2, 640), float32] */;
  %134 = cast(%var_8975, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %135 = reshape(%132, newshape=[]) /* ty=float32 */;
  %136 = reshape(%133, newshape=[5, 16, 16]) /* ty=Tensor[(5, 16, 16), float32] */;
  %137 = reshape(%134, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %138 = @func_6284(%135, %136, %137) /* ty=(Tensor[(5, 16, 16), float32], Tensor[(312), float32], Tensor[(240), float64], Tensor[(1792), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) */;
  %139 = less(%118, %119) /* ty=Tensor[(10, 2, 6), bool] */;
  %140 = %122.0;
  %141 = minimum(%130, %131) /* ty=Tensor[(3, 104), int64] */;
  %142 = %138.1;
  (%139, %140, %141, %142, 1.36364f /* ty=float32 */, %var_8974, %var_8975)
}

def @func_15425() -> (Tensor[(8, 12, 7), float64],) {
  %143 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %144 = %143.1;
  (%144,)
}

def @func_17482() -> (Tensor[(672), float64], Tensor[(5, 10, 1), float64], Tensor[(6, 15, 8), uint32]) {
  %150 = fn () -> (Tensor[(672), float64], Tensor[(5, 10, 1), float64], Tensor[(6, 15, 8), uint32]) {
    %145 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
    %146 = @func_16443() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) */;
    %147 = %145.2;
    %148 = @func_15246() /* ty=Tensor[(5, 10, 1), float64] */;
    %149 = %146.1;
    (%147, %148, %149)
  };
  %150() /* ty=(Tensor[(672), float64], Tensor[(5, 10, 1), float64], Tensor[(6, 15, 8), uint32]) */
}

def @func_16201() -> (Tensor[(3, 10, 15), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) {
  %151 = @func_16138() /* ty=(Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) */;
  %152 = @func_15425() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %153 = @func_15982() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) */;
  %154 = %151.3;
  %155 = %152.0;
  %156 = %153.0;
  (%154, %155, %156)
}

def @func_15586(%var_15582: Tensor[(7, 4, 13), float64], %var_15583: Tensor[(2, 120), float64], %var_15584: Tensor[(1792), float64], %var_15585: Tensor[(2, 120), float64]) -> (Tensor[(7, 4, 13), float64], Tensor[(3, 8, 13), float64], Tensor[(1792), float64], Tensor[(2, 120), int8]) {
  %170 = fn (%var_15560: Tensor[(7, 4, 13), float64], %var_15566: Tensor[(2, 120), float64], %var_15567: Tensor[(1792), float64], %var_15570: Tensor[(2, 120), float64]) -> (Tensor[(7, 4, 13), float64], Tensor[(3, 8, 13), float64], Tensor[(1792), float64], Tensor[(2, 120), int8]) {
    %157 = cast(%var_15560, dtype="float64") /* ty=Tensor[(7, 4, 13), float64] */;
    %158 = cast(%var_15566, dtype="float64") /* ty=Tensor[(2, 120), float64] */;
    %159 = cast(%var_15567, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %160 = reshape(%158, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
    %161 = reshape(%159, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
    %162 = @func_1814(%160, %161) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
    %163 = cast(%var_15570, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
    %164 = shape_of(%var_15566, dtype="int32") /* ty=Tensor[(2), int32] */;
    %165 = cast(%var_15566, dtype="int8") /* ty=Tensor[(2, 120), int8] */;
    %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %167 = asin(%157) /* ty=Tensor[(7, 4, 13), float64] */;
    %168 = %162.0;
    %169 = minimum(%165, %166) /* ty=Tensor[(2, 120), int8] */;
    (%167, %168, %var_15567, %169)
  };
  %170(%var_15582, %var_15583, %var_15584, %var_15585) /* ty=(Tensor[(7, 4, 13), float64], Tensor[(3, 8, 13), float64], Tensor[(1792), float64], Tensor[(2, 120), int8]) */
}

def @func_14705(%var_14703: Tensor[(15, 1, 1), float32]) -> (Tensor[(15, 1, 1), float32],) {
  @func_14702(%var_14703) /* ty=(Tensor[(15, 1, 1), float32],) */
}

def @func_16601() -> (Tensor[(8, 12, 7), float64],) {
  @func_16599() /* ty=(Tensor[(8, 12, 7), float64],) */
}

def @func_10207(%var_10165: Tensor[(7, 6, 7), int64], %var_10166: Tensor[(7, 6, 7), int64], %var_10175: Tensor[(16, 112), float64], %var_10179: Tensor[(15), float32], %var_10180: Tensor[(32), float32], %var_10182: Tensor[(57344), bool]) -> (Tensor[(7, 6, 7), bool], Tensor[(8, 16, 14), float64], Tensor[(16, 112), float64], Tensor[(5, 3, 1), float32], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(10, 462), int16]) {
  %171 = cast(%var_10166, dtype="bool") /* ty=Tensor[(7, 6, 7), bool] */;
  %172 = shape_of(%var_10165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%var_10165, dtype="bool") /* ty=Tensor[(7, 6, 7), bool] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %175 = cast(%var_10175, dtype="float64") /* ty=Tensor[(16, 112), float64] */;
  %176 = reshape(%175, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
  %177 = @func_359(%176) /* ty=(Tensor[(8, 16, 14), float64],) */;
  %178 = cast(%var_10179, dtype="float32") /* ty=Tensor[(15), float32] */;
  %179 = cast(%var_10180, dtype="float32") /* ty=Tensor[(32), float32] */;
  %180 = cast(%var_10175, dtype="float64") /* ty=Tensor[(16, 112), float64] */;
  %181 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 462), uint16] */, dtype="uint16") /* ty=Tensor[(1, 462), uint16] */;
  %182 = cast(%var_10182, dtype="bool") /* ty=Tensor[(57344), bool] */;
  %183 = reshape(%178, newshape=[5, 3, 1]) /* ty=Tensor[(5, 3, 1), float32] */;
  %184 = reshape(%179, newshape=[32]) /* ty=Tensor[(32), float32] */;
  %185 = reshape(%180, newshape=[1792, 1]) /* ty=Tensor[(1792, 1), float64] */;
  %186 = reshape(%181, newshape=[462]) /* ty=Tensor[(462), uint16] */;
  %187 = reshape(%182, newshape=[4, 8, 1792]) /* ty=Tensor[(4, 8, 1792), bool] */;
  %188 = @func_3777(%183, %184, %185, %186, %187) /* ty=(Tensor[(5, 3, 1), float32], Tensor[(462), uint16], Tensor[(4, 8, 1792), uint8], Tensor[(1792, 32), int32]) */;
  %189 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 462), uint16] */, dtype="int16") /* ty=Tensor[(1, 462), int16] */;
  %190 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 462), uint16] */, dtype="int16") /* ty=Tensor[(10, 462), int16] */;
  %191 = less(%173, %174) /* ty=Tensor[(7, 6, 7), bool] */;
  %192 = %177.0;
  %193 = %188.0;
  %194 = minimum(%189, %190) /* ty=Tensor[(10, 462), int16] */;
  (%191, %192, %var_10175, %193, %var_10179, %var_10180, %var_10182, %194)
}

def @func_5723(%var_5722: Tensor[(16, 6, 7), float64]) -> Tensor[(16, 6, 7), float64] {
  %196 = fn (%var_5717: Tensor[(16, 6, 7), float64]) -> Tensor[(16, 6, 7), float64] {
    %195 = cast(%var_5717, dtype="float64") /* ty=Tensor[(16, 6, 7), float64] */;
    acos(%195) /* ty=Tensor[(16, 6, 7), float64] */
  };
  %196(%var_5722) /* ty=Tensor[(16, 6, 7), float64] */
}

def @func_9216(%var_9214: Tensor[(7, 4, 8), float64], %var_9215: Tensor[(312), float32]) -> (Tensor[(7, 4, 8), float64], Tensor[(462), uint16], Tensor[(99), float64], Tensor[(120, 2), float64], Tensor[(1144, 1), float64], Tensor[(8, 16, 14), float64], Tensor[(260, 2), bool], Tensor[(312), float32]) {
  %215 = fn (%var_9187: Tensor[(7, 4, 8), float64], %var_9210: Tensor[(312), float32]) -> (Tensor[(7, 4, 8), float64], Tensor[(462), uint16], Tensor[(99), float64], Tensor[(120, 2), float64], Tensor[(1144, 1), float64], Tensor[(8, 16, 14), float64], Tensor[(260, 2), bool], Tensor[(312), float32]) {
    %197 = cast(%var_9187, dtype="float64") /* ty=Tensor[(7, 4, 8), float64] */;
    %198 = cast(meta[relay.Constant][6] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %199 = reshape(%198, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
    %200 = @func_7969(%199) /* ty=(Tensor[(11, ?, 9), bool], Tensor[(1792), float64], Tensor[(32), float32], Tensor[(1792), float64], Tensor[(462), uint16]) */;
    %201 = cast(meta[relay.Constant][7] /* ty=Tensor[(1144, 1), float64] */, dtype="float64") /* ty=Tensor[(1144, 1), float64] */;
    %202 = reshape(%201, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float64] */;
    %203 = @func_2244(%202) /* ty=(Tensor[(11, 13, 8), float64], Tensor[(1792), float64], Tensor[(120, 2), float64], Tensor[(1792), float64]) */;
    %204 = cast(meta[relay.Constant][8] /* ty=Tensor[(260, 2), bool] */, dtype="bool") /* ty=Tensor[(260, 2), bool] */;
    %205 = cast(meta[relay.Constant][8] /* ty=Tensor[(260, 2), bool] */, dtype="bool") /* ty=Tensor[(260, 2), bool] */;
    %206 = cast(%var_9210, dtype="float32") /* ty=Tensor[(312), float32] */;
    %207 = reshape(%204, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), bool] */;
    %208 = reshape(%205, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), bool] */;
    %209 = reshape(%206, newshape=[312]) /* ty=Tensor[(312), float32] */;
    %210 = @func_1502(%207, %208, %209) /* ty=(Tensor[(5, 13, 8), bool], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) */;
    %211 = sin(%197) /* ty=Tensor[(7, 4, 8), float64] */;
    %212 = %200.4;
    %213 = %203.2;
    %214 = %210.1;
    (%211, %212, meta[relay.Constant][6] /* ty=Tensor[(99), float64] */, %213, meta[relay.Constant][7] /* ty=Tensor[(1144, 1), float64] */, %214, meta[relay.Constant][8] /* ty=Tensor[(260, 2), bool] */, %var_9210)
  };
  %215(%var_9214, %var_9215) /* ty=(Tensor[(7, 4, 8), float64], Tensor[(462), uint16], Tensor[(99), float64], Tensor[(120, 2), float64], Tensor[(1144, 1), float64], Tensor[(8, 16, 14), float64], Tensor[(260, 2), bool], Tensor[(312), float32]) */
}

def @func_10754(%var_10750: int16, %var_10751: Tensor[(8, 3, 13), int16], %var_10752: Tensor[(1408), float32], %var_10753: Tensor[(8, 3, 13), bool]) -> (Tensor[(11, 8, 16), float32], Tensor[(1408), float32], Tensor[(8, 3, 13), float32]) {
  %230 = fn (%var_10711: int16, %var_10712: Tensor[(8, 3, 13), int16], %var_10718: Tensor[(1408), float32], %var_10745: Tensor[(8, 3, 13), bool]) -> (Tensor[(11, 8, 16), float32], Tensor[(1408), float32], Tensor[(8, 3, 13), float32]) {
    %216 = cast(%var_10718, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %217 = cast(%var_10718, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %218 = reshape(%216, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), float32] */;
    %219 = reshape(%217, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), float32] */;
    %220 = @func_5871(%218, %219) /* ty=(Tensor[(11, 8, 16), float32],) */;
    %221 = cast(%var_10711, dtype="bool") /* ty=bool */;
    %222 = cast(%var_10712, dtype="bool") /* ty=Tensor[(8, 3, 13), bool] */;
    %223 = not_equal(%221, %222) /* ty=Tensor[(8, 3, 13), bool] */;
    %224 = cast(%var_10745, dtype="float32") /* ty=Tensor[(8, 3, 13), float32] */;
    %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
    %226 = cast(%223, dtype="float32") /* ty=Tensor[(8, 3, 13), float32] */;
    %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %228 = %220.0;
    %229 = mod(%226, %227) /* ty=Tensor[(8, 3, 13), float32] */;
    (%228, %var_10718, %229)
  };
  %230(%var_10750, %var_10751, %var_10752, %var_10753) /* ty=(Tensor[(11, 8, 16), float32], Tensor[(1408), float32], Tensor[(8, 3, 13), float32]) */
}

def @func_15235(%var_15231: Tensor[(30, 1), float64], %var_15232: Tensor[(24, 10), float64], %var_15233: Tensor[(32), float32], %var_15234: Tensor[(24, 10), float64]) -> (Tensor[(5, 10, 1), float64], Tensor[(2, 1, 15), float64], Tensor[(30, 1), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(16, 2), float32], Tensor[(245, 2), float64], Tensor[(32), float32], Tensor[(24, 10), bool]) {
  %257 = fn (%var_15206: Tensor[(30, 1), float64], %var_15211: Tensor[(24, 10), float64], %var_15218: Tensor[(32), float32], %var_15225: Tensor[(24, 10), float64]) -> (Tensor[(5, 10, 1), float64], Tensor[(2, 1, 15), float64], Tensor[(30, 1), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(16, 2), float32], Tensor[(245, 2), float64], Tensor[(32), float32], Tensor[(24, 10), bool]) {
    %231 = cast(%var_15206, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
    %232 = cast(meta[relay.Constant][9] /* ty=Tensor[(1078), float32] */, dtype="float32") /* ty=Tensor[(1078), float32] */;
    %233 = cast(meta[relay.Constant][10] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
    %234 = reshape(%231, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float64] */;
    %235 = reshape(%232, newshape=[1078]) /* ty=Tensor[(1078), float32] */;
    %236 = reshape(%233, newshape=[312]) /* ty=Tensor[(312), float32] */;
    %237 = @func_11105(%234, %235, %236) /* ty=(Tensor[(2, 1, 15), float64], Tensor[(14, 15, 14), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(2, 1, 15), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) */;
    %238 = cast(%var_15211, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
    %239 = cast(meta[relay.Constant][11] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %240 = reshape(%238, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
    %241 = reshape(%239, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
    %242 = @func_1814(%240, %241) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
    %243 = cast(meta[relay.Constant][12] /* ty=Tensor[(245, 2), float64] */, dtype="float64") /* ty=Tensor[(245, 2), float64] */;
    %244 = cast(%var_15218, dtype="float32") /* ty=Tensor[(32), float32] */;
    %245 = reshape(%243, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), float64] */;
    %246 = reshape(%244, newshape=[16, 2]) /* ty=Tensor[(16, 2), float32] */;
    %247 = @func_4627(%245, %246) /* ty=(Tensor[(14, 7, 5), float64], Tensor[(8, 16, 14), float64], Tensor[(16, 2), float32], Tensor[(1792), float64], Tensor[(462, 1), uint16]) */;
    %248 = cast(%var_15225, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
    %249 = shape_of(%var_15211, dtype="int32") /* ty=Tensor[(2), int32] */;
    %250 = cast(%var_15211, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %252 = @func_15174() /* ty=Tensor[(5, 10, 1), float64] */;
    %253 = %237.4;
    %254 = %242.2;
    %255 = %247.2;
    %256 = greater(%250, %251) /* ty=Tensor[(24, 10), bool] */;
    (%252, %253, %var_15206, meta[relay.Constant][9] /* ty=Tensor[(1078), float32] */, meta[relay.Constant][10] /* ty=Tensor[(312), float32] */, %254, meta[relay.Constant][11] /* ty=Tensor[(1792), float64] */, %255, meta[relay.Constant][12] /* ty=Tensor[(245, 2), float64] */, %var_15218, %256)
  };
  %257(%var_15231, %var_15232, %var_15233, %var_15234) /* ty=(Tensor[(5, 10, 1), float64], Tensor[(2, 1, 15), float64], Tensor[(30, 1), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(16, 2), float32], Tensor[(245, 2), float64], Tensor[(32), float32], Tensor[(24, 10), bool]) */
}

def @func_1817(%var_1815: Tensor[(1, 16, 15), float64], %var_1816: Tensor[(1792), float64]) -> (Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) {
  %273 = fn (%var_1772: Tensor[(1, 16, 15), float64], %var_1789: Tensor[(1792), float64]) -> (Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) {
    %258 = cast(meta[relay.Constant][13] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
    %259 = reshape(%258, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float32] */;
    %260 = @func_840(%259) /* ty=(Tensor[(3, 8, 13), float64],) */;
    %261 = cast(%var_1789, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %262 = reshape(%261, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
    %263 = @func_359(%262) /* ty=(Tensor[(8, 16, 14), float64],) */;
    %264 = cast(%var_1772, dtype="float64") /* ty=Tensor[(1, 16, 15), float64] */;
    %265 = rsqrt(%264) /* ty=Tensor[(1, 16, 15), float64] */;
    %266 = cast(%var_1772, dtype="uint16") /* ty=Tensor[(1, 16, 15), uint16] */;
    %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
    %268 = cast(%265, dtype="uint16") /* ty=Tensor[(1, 16, 15), uint16] */;
    %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %270 = %260.0;
    %271 = %263.0;
    %272 = minimum(%268, %269) /* ty=Tensor[(?, 16, 15), uint16] */;
    (%270, meta[relay.Constant][13] /* ty=Tensor[(312), float32] */, %271, %var_1789, %272)
  };
  %273(%var_1815, %var_1816) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */
}

def @func_4702(%var_4676: Tensor[(14, 11, 7), float32], %var_4684: Tensor[(312), float32]) -> (Tensor[(14, 11, 7), float32], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) {
  %274 = cast(%var_4676, dtype="float32") /* ty=Tensor[(14, 11, 7), float32] */;
  %275 = cast(%var_4684, dtype="float32") /* ty=Tensor[(312), float32] */;
  %276 = reshape(%275, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %277 = @func_1149(%276) /* ty=(Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) */;
  %278 = sinh(%274) /* ty=Tensor[(14, 11, 7), float32] */;
  %279 = %277.0;
  (%278, %279, %var_4684)
}

def @func_15246() -> Tensor[(5, 10, 1), float64] {
  @func_15174() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_17016(%var_17015: Tensor[(15), float32]) -> (Tensor[(3, 10, 15), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) {
  %288 = fn (%var_17000: Tensor[(15), float32]) -> (Tensor[(3, 10, 15), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) {
    %280 = @func_16201() /* ty=(Tensor[(3, 10, 15), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */;
    %281 = %280.0;
    %282 = cast(%281, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
    %283 = cast(%var_17000, dtype="float32") /* ty=Tensor[(15), float32] */;
    %284 = reshape(%283, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
    %285 = @func_14702(%284) /* ty=(Tensor[(15, 1, 1), float32],) */;
    %286 = acos(%282) /* ty=Tensor[(3, 10, 15), float64] */;
    %287 = %285.0;
    (%286, %287, %var_17000)
  };
  %288(%var_17015) /* ty=(Tensor[(3, 10, 15), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */
}

def @func_14657(%var_14655: Tensor[(14, 7, 14), float64], %var_14656: Tensor[(14, 7, 14), float64]) -> (Tensor[(14, 7, 14), float64],) {
  @func_14653(%var_14655, %var_14656) /* ty=(Tensor[(14, 7, 14), float64],) */
}

def @func_14653(%var_14617: Tensor[(14, 7, 14), float64], %var_14618: Tensor[(14, 7, 14), float64]) -> (Tensor[(14, 7, 14), float64],) {
  %289 = cast(%var_14618, dtype="float64") /* ty=Tensor[(14, 7, 14), float64] */;
  %290 = shape_of(%var_14617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%var_14617, dtype="float64") /* ty=Tensor[(14, 7, 14), float64] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %293 = divide(%291, %292) /* ty=Tensor[(14, 7, 14), float64] */;
  (%293,)
}

def @func_12853(%var_12851: Tensor[(6, 15, 8), uint32], %var_12852: Tensor[(6, 15, 8), uint32]) -> (Tensor[(6, 15, 8), uint32],) {
  @func_12849(%var_12851, %var_12852) /* ty=(Tensor[(6, 15, 8), uint32],) */
}

def @func_7742(%var_7740: int64, %var_7741: Tensor[(1408), float32]) -> (Tensor[(2, 1, 16), int64], Tensor[(11, 8, 16), float32], Tensor[(1408), float32]) {
  @func_7738(%var_7740, %var_7741) /* ty=(Tensor[(2, 1, 16), int64], Tensor[(11, 8, 16), float32], Tensor[(1408), float32]) */
}

def @func_17180(%var_17160: Tensor[(15), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(5, 3, 1), float32], Tensor[(294), int64], Tensor[(1792), float64], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(14, 6, 6), float32], Tensor[(1, 504), float32]) {
  %294 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %295 = cast(meta[relay.Constant][14] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %296 = cast(meta[relay.Constant][14] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %297 = cast(meta[relay.Constant][15] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %298 = cast(%var_17160, dtype="float32") /* ty=Tensor[(15), float32] */;
  %299 = cast(meta[relay.Constant][16] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %300 = cast(meta[relay.Constant][17] /* ty=Tensor[(57344), bool] */, dtype="bool") /* ty=Tensor[(57344), bool] */;
  %301 = reshape(%295, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int64] */;
  %302 = reshape(%296, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int64] */;
  %303 = reshape(%297, newshape=[16, 112]) /* ty=Tensor[(16, 112), float64] */;
  %304 = reshape(%298, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %305 = reshape(%299, newshape=[32]) /* ty=Tensor[(32), float32] */;
  %306 = reshape(%300, newshape=[57344]) /* ty=Tensor[(57344), bool] */;
  %307 = @func_10207(%301, %302, %303, %304, %305, %306) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(8, 16, 14), float64], Tensor[(16, 112), float64], Tensor[(5, 3, 1), float32], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(10, 462), int16]) */;
  %308 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 504), float32] */, dtype="float32") /* ty=Tensor[(1, 504), float32] */;
  %309 = reshape(%308, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float32] */;
  %310 = @func_857(%309) /* ty=(Tensor[(14, 6, 6), float32],) */;
  %311 = %294.1;
  %312 = %307.3;
  %313 = %310.0;
  (%311, %312, meta[relay.Constant][14] /* ty=Tensor[(294), int64] */, meta[relay.Constant][15] /* ty=Tensor[(1792), float64] */, %var_17160, meta[relay.Constant][16] /* ty=Tensor[(32), float32] */, meta[relay.Constant][17] /* ty=Tensor[(57344), bool] */, %313, meta[relay.Constant][18] /* ty=Tensor[(1, 504), float32] */)
}

def @func_16599() -> (Tensor[(8, 12, 7), float64],) {
  %314 = @func_16443() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) */;
  %315 = %314.0;
  (%315,)
}

def @func_15764() -> (Tensor[(5, 10, 1), float64],) {
  %317 = fn () -> (Tensor[(5, 10, 1), float64],) {
    %316 = @func_15246() /* ty=Tensor[(5, 10, 1), float64] */;
    (%316,)
  };
  %317() /* ty=(Tensor[(5, 10, 1), float64],) */
}

def @func_17118(%var_17115: Tensor[(120), float32], %var_17116: Tensor[(312, 1), float32], %var_17117: Tensor[(1280), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(1792), float64], Tensor[(312, 1280), bool], Tensor[(312, 1280), float64]) {
  %343 = fn (%var_17069: Tensor[(120), float32], %var_17070: Tensor[(312, 1), float32], %var_17071: Tensor[(1280), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(1792), float64], Tensor[(312, 1280), bool], Tensor[(312, 1280), float64]) {
    %318 = @func_15982() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) */;
    %319 = cast(%var_17069, dtype="float32") /* ty=Tensor[(120), float32] */;
    %320 = cast(%var_17070, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
    %321 = cast(%var_17070, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
    %322 = cast(%var_17070, dtype="uint8") /* ty=Tensor[(312, 1), uint8] */;
    %323 = cast(%var_17071, dtype="float32") /* ty=Tensor[(1280), float32] */;
    %324 = cast(meta[relay.Constant][19] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %325 = reshape(%319, newshape=[10, 2, 6]) /* ty=Tensor[(10, 2, 6), float32] */;
    %326 = reshape(%320, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
    %327 = reshape(%321, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
    %328 = reshape(%322, newshape=[3, 104]) /* ty=Tensor[(3, 104), uint8] */;
    %329 = reshape(%323, newshape=[2, 640]) /* ty=Tensor[(2, 640), float32] */;
    %330 = reshape(%324, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
    %331 = @func_8977(%325, %326, %327, %328, %329, %330) /* ty=(Tensor[(10, 2, 6), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), int64], Tensor[(312), float32], float32, Tensor[(2, 640), float32], Tensor[(1792), float64]) */;
    %332 = cast(%var_17071, dtype="bool") /* ty=Tensor[(1280), bool] */;
    %333 = cast(%var_17070, dtype="bool") /* ty=Tensor[(312, 1), bool] */;
    %334 = cast(%var_17071, dtype="float32") /* ty=Tensor[(1280), float32] */;
    %335 = cast(%var_17070, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
    %336 = floor_mod(%334, %335) /* ty=Tensor[(312, 1280), float32] */;
    %337 = cast(%336, dtype="float64") /* ty=Tensor[(312, 1280), float64] */;
    %338 = cast(%var_17070, dtype="float64") /* ty=Tensor[(312, 1), float64] */;
    %339 = %318.0;
    %340 = %331.6;
    %341 = equal(%332, %333) /* ty=Tensor[(312, 1280), bool] */;
    %342 = divide(%337, %338) /* ty=Tensor[(312, 1280), float64] */;
    (%339, %340, %var_17069, meta[relay.Constant][19] /* ty=Tensor[(1792), float64] */, %341, %342)
  };
  %343(%var_17115, %var_17116, %var_17117) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(1792), float64], Tensor[(312, 1280), bool], Tensor[(312, 1280), float64]) */
}

def @func_6284(%var_6238: float32, %var_6239: Tensor[(5, 16, 16), float32], %var_6246: Tensor[(1792), float64]) -> (Tensor[(5, 16, 16), float32], Tensor[(312), float32], Tensor[(240), float64], Tensor[(1792), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) {
  %344 = cast(%var_6238, dtype="float32") /* ty=float32 */;
  %345 = cast(%var_6239, dtype="float32") /* ty=Tensor[(5, 16, 16), float32] */;
  %346 = cast(meta[relay.Constant][20] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %347 = cast(%var_6246, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %348 = reshape(%346, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
  %349 = reshape(%347, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %350 = @func_1814(%348, %349) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
  %351 = cast(meta[relay.Constant][21] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %352 = reshape(%351, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %353 = multiply(%344, %345) /* ty=Tensor[(5, 16, 16), float32] */;
  %354 = %350.1;
  %355 = @func_5721(%352) /* ty=Tensor[(16, 6, 7), float64] */;
  (%353, %354, meta[relay.Constant][20] /* ty=Tensor[(240), float64] */, %var_6246, %355, meta[relay.Constant][21] /* ty=Tensor[(672), float64] */)
}

def @func_2078(%var_2075: Tensor[(4, 8, 1), float32], %var_2076: Tensor[(1792), float64], %var_2077: Tensor[(462), uint16]) -> (Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) {
  @func_2073(%var_2075, %var_2076, %var_2077) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) */
}

def @func_15175() -> Tensor[(5, 10, 1), float64] {
  %357 = fn () -> Tensor[(5, 10, 1), float64] {
    %356 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 10, 1), float64] */;
    atanh(%356) /* ty=Tensor[(5, 10, 1), float64] */
  };
  %357() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_15248() -> Tensor[(5, 10, 1), float64] {
  @func_15246() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_1149(%var_1144: Tensor[(312), float32]) -> (Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) {
  %358 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(14, 15, 14), float64] */;
  %359 = cast(%var_1144, dtype="float32") /* ty=Tensor[(312), float32] */;
  %360 = reshape(%359, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float32] */;
  %361 = @func_840(%360) /* ty=(Tensor[(3, 8, 13), float64],) */;
  %362 = log10(%358) /* ty=Tensor[(14, 15, 14), float64] */;
  %363 = %361.0;
  (%362, %363, %var_1144)
}

def @func_4627(%var_4601: Tensor[(14, 7, 5), float64], %var_4618: Tensor[(16, 2), float32]) -> (Tensor[(14, 7, 5), float64], Tensor[(8, 16, 14), float64], Tensor[(16, 2), float32], Tensor[(1792), float64], Tensor[(462, 1), uint16]) {
  %364 = cast(%var_4601, dtype="float64") /* ty=Tensor[(14, 7, 5), float64] */;
  %365 = cast(%var_4618, dtype="float32") /* ty=Tensor[(16, 2), float32] */;
  %366 = cast(meta[relay.Constant][24] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %367 = cast(meta[relay.Constant][25] /* ty=Tensor[(462, 1), uint16] */, dtype="uint16") /* ty=Tensor[(462, 1), uint16] */;
  %368 = reshape(%365, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), float32] */;
  %369 = reshape(%366, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %370 = reshape(%367, newshape=[462]) /* ty=Tensor[(462), uint16] */;
  %371 = @func_2073(%368, %369, %370) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) */;
  %372 = tan(%364) /* ty=Tensor[(14, 7, 5), float64] */;
  %373 = %371.0;
  (%372, %373, %var_4618, meta[relay.Constant][24] /* ty=Tensor[(1792), float64] */, meta[relay.Constant][25] /* ty=Tensor[(462, 1), uint16] */)
}

def @func_17050() -> Tensor[(5, 10, 1), float64] {
  @func_17048() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_16525(%var_16523: Tensor[(504), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(14, 6, 6), float32], Tensor[(504), float32]) {
  @func_16522(%var_16523) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(14, 6, 6), float32], Tensor[(504), float32]) */
}

def @func_10512(%var_10511: Tensor[(16, 4, 5), float32]) -> Tensor[(16, 4, 5), float32] {
  %375 = fn (%var_10500: Tensor[(16, 4, 5), float32]) -> Tensor[(16, 4, 5), float32] {
    %374 = cast(%var_10500, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
    sin(%374) /* ty=Tensor[(16, 4, 5), float32] */
  };
  %375(%var_10511) /* ty=Tensor[(16, 4, 5), float32] */
}

def @func_17265(%var_17263: Tensor[(6, 1, 10), float64]) -> (Tensor[(14, 7, 14), float64], Tensor[(1372), float64], Tensor[(6, ?, 10), uint64]) {
  @func_17262(%var_17263) /* ty=(Tensor[(14, 7, 14), float64], Tensor[(1372), float64], Tensor[(6, ?, 10), uint64]) */
}

def @func_11923(%var_11921: Tensor[(6, 14, 6), int32], %var_11922: Tensor[(6, 14, 6), int32]) -> (Tensor[(6, 14, 6), int32], Tensor[(3, 8, 13), float64], Tensor[(4, 480), uint64], Tensor[(312), float32]) {
  %389 = fn (%var_11867: Tensor[(6, 14, 6), int32], %var_11868: Tensor[(6, 14, 6), int32]) -> (Tensor[(6, 14, 6), int32], Tensor[(3, 8, 13), float64], Tensor[(4, 480), uint64], Tensor[(312), float32]) {
    %376 = cast(%var_11868, dtype="int32") /* ty=Tensor[(6, 14, 6), int32] */;
    %377 = shape_of(%var_11867, dtype="int32") /* ty=Tensor[(3), int32] */;
    %378 = cast(%var_11867, dtype="int32") /* ty=Tensor[(6, 14, 6), int32] */;
    %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %380 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 480), uint64] */, dtype="uint64") /* ty=Tensor[(4, 480), uint64] */;
    %381 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 480), uint64] */, dtype="uint64") /* ty=Tensor[(4, 480), uint64] */;
    %382 = cast(meta[relay.Constant][27] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
    %383 = reshape(%380, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), uint64] */;
    %384 = reshape(%381, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), uint64] */;
    %385 = reshape(%382, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
    %386 = @func_8998(%383, %384, %385) /* ty=(Tensor[(12, 10, 16), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), float32]) */;
    %387 = right_shift(%378, %379) /* ty=Tensor[(6, 14, 6), int32] */;
    %388 = %386.1;
    (%387, %388, meta[relay.Constant][26] /* ty=Tensor[(4, 480), uint64] */, meta[relay.Constant][27] /* ty=Tensor[(312), float32] */)
  };
  %389(%var_11921, %var_11922) /* ty=(Tensor[(6, 14, 6), int32], Tensor[(3, 8, 13), float64], Tensor[(4, 480), uint64], Tensor[(312), float32]) */
}

def @func_13193(%var_13191: Tensor[(2, 8, 11), int32], %var_13192: Tensor[(2, 8, 11), int32]) -> (Tensor[(2, 8, 11), bool],) {
  %395 = fn (%var_13155: Tensor[(2, 8, 11), int32], %var_13156: Tensor[(2, 8, 11), int32]) -> (Tensor[(2, 8, 11), bool],) {
    %390 = cast(%var_13156, dtype="bool") /* ty=Tensor[(2, 8, 11), bool] */;
    %391 = shape_of(%var_13155, dtype="int32") /* ty=Tensor[(3), int32] */;
    %392 = cast(%var_13155, dtype="bool") /* ty=Tensor[(2, 8, 11), bool] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %394 = less(%392, %393) /* ty=Tensor[(2, 8, 11), bool] */;
    (%394,)
  };
  %395(%var_13191, %var_13192) /* ty=(Tensor[(2, 8, 11), bool],) */
}

def @func_15695() -> (Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) {
  %396 = @func_15425() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %397 = cast(meta[relay.Constant][28] /* ty=Tensor[(490, 1), float64] */, dtype="float64") /* ty=Tensor[(490, 1), float64] */;
  %398 = cast(meta[relay.Constant][29] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %399 = reshape(%398, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %400 = @func_7969(%399) /* ty=(Tensor[(11, ?, 9), bool], Tensor[(1792), float64], Tensor[(32), float32], Tensor[(1792), float64], Tensor[(462), uint16]) */;
  %401 = %400.2;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(32), float32] */;
  %403 = reshape(%397, newshape=[14, 7, 5]) /* ty=Tensor[(14, 7, 5), float64] */;
  %404 = reshape(%402, newshape=[16, 2]) /* ty=Tensor[(16, 2), float32] */;
  %405 = @func_4627(%403, %404) /* ty=(Tensor[(14, 7, 5), float64], Tensor[(8, 16, 14), float64], Tensor[(16, 2), float32], Tensor[(1792), float64], Tensor[(462, 1), uint16]) */;
  %406 = %405.4;
  %407 = cast(%406, dtype="uint32") /* ty=Tensor[(462, 1), uint32] */;
  %408 = cast(meta[relay.Constant][29] /* ty=Tensor[(99), float64] */, dtype="uint32") /* ty=Tensor[(99), uint32] */;
  %409 = cast(meta[relay.Constant][28] /* ty=Tensor[(490, 1), float64] */, dtype="float32") /* ty=Tensor[(490, 1), float32] */;
  %410 = cast(%401, dtype="float32") /* ty=Tensor[(32), float32] */;
  %411 = %396.0;
  %412 = @func_15174() /* ty=Tensor[(5, 10, 1), float64] */;
  %413 = left_shift(%407, %408) /* ty=Tensor[(462, 99), uint32] */;
  %414 = mod(%409, %410) /* ty=Tensor[(490, 32), float32] */;
  (%411, %412, %413, %414)
}

def @func_8985(%var_8979: Tensor[(10, 2, 6), float32], %var_8980: Tensor[(3, 104), float32], %var_8981: Tensor[(3, 104), float32], %var_8982: Tensor[(3, 104), uint8], %var_8983: Tensor[(2, 640), float32], %var_8984: Tensor[(1792), float64]) -> (Tensor[(10, 2, 6), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), int64], Tensor[(312), float32], float32, Tensor[(2, 640), float32], Tensor[(1792), float64]) {
  @func_8977(%var_8979, %var_8980, %var_8981, %var_8982, %var_8983, %var_8984) /* ty=(Tensor[(10, 2, 6), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), int64], Tensor[(312), float32], float32, Tensor[(2, 640), float32], Tensor[(1792), float64]) */
}

def @func_17345(%var_17343: Tensor[(312), float32], %var_17344: Tensor[(1280), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(312), float32], Tensor[(1280), float32], Tensor[(8, 12, 7), float64], Tensor[(3, 8, 13), float64], Tensor[(240), float64], Tensor[(490, 32), float64], Tensor[(312), float32], Tensor[(224, 1), float64]) {
  %441 = fn (%var_17312: Tensor[(312), float32], %var_17313: Tensor[(1280), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(312), float32], Tensor[(1280), float32], Tensor[(8, 12, 7), float64], Tensor[(3, 8, 13), float64], Tensor[(240), float64], Tensor[(490, 32), float64], Tensor[(312), float32], Tensor[(224, 1), float64]) {
    %415 = @func_16780() /* ty=(Tensor[(8, 12, 7), float64],) */;
    %416 = cast(meta[relay.Constant][30] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %417 = cast(%var_17312, dtype="float32") /* ty=Tensor[(312), float32] */;
    %418 = cast(%var_17313, dtype="float32") /* ty=Tensor[(1280), float32] */;
    %419 = reshape(%416, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %420 = reshape(%417, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
    %421 = reshape(%418, newshape=[1280]) /* ty=Tensor[(1280), float32] */;
    %422 = @func_17114(%419, %420, %421) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(1792), float64], Tensor[(312, 1280), bool], Tensor[(312, 1280), float64]) */;
    %423 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
    %424 = cast(meta[relay.Constant][31] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %425 = %422.1;
    %426 = cast(%425, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %427 = reshape(%424, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
    %428 = reshape(%426, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
    %429 = @func_1814(%427, %428) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
    %430 = @func_15982() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(490, 32), float64], Tensor[(490, 32), float32]) */;
    %431 = cast(meta[relay.Constant][32] /* ty=Tensor[(224, 1), float64] */, dtype="float64") /* ty=Tensor[(224, 1), float64] */;
    %432 = %429.0;
    %433 = cast(%432, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
    %434 = reshape(%431, newshape=[7, 4, 8]) /* ty=Tensor[(7, 4, 8), float64] */;
    %435 = reshape(%433, newshape=[312]) /* ty=Tensor[(312), float32] */;
    %436 = @func_9213(%434, %435) /* ty=(Tensor[(7, 4, 8), float64], Tensor[(462), uint16], Tensor[(99), float64], Tensor[(120, 2), float64], Tensor[(1144, 1), float64], Tensor[(8, 16, 14), float64], Tensor[(260, 2), bool], Tensor[(312), float32]) */;
    %437 = %415.0;
    %438 = %423.1;
    %439 = %430.1;
    %440 = %436.7;
    (%437, %425, meta[relay.Constant][30] /* ty=Tensor[(120), float32] */, %var_17312, %var_17313, %438, %432, meta[relay.Constant][31] /* ty=Tensor[(240), float64] */, %439, %440, meta[relay.Constant][32] /* ty=Tensor[(224, 1), float64] */)
  };
  %441(%var_17343, %var_17344) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(1792), float64], Tensor[(120), float32], Tensor[(312), float32], Tensor[(1280), float32], Tensor[(8, 12, 7), float64], Tensor[(3, 8, 13), float64], Tensor[(240), float64], Tensor[(490, 32), float64], Tensor[(312), float32], Tensor[(224, 1), float64]) */
}

def @func_16445() -> (Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) {
  @func_16443() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) */
}

def @func_15898(%var_15896: Tensor[(15), float32], %var_15897: Tensor[(32), float32]) -> (Tensor[(8, 12, 7), float64], Tensor[(15), float32], Tensor[(8, 16, 14), float64], Tensor[(32), float32], Tensor[(15, 1, 462), uint8], Tensor[(64, 28), float64]) {
  @func_15894(%var_15896, %var_15897) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(15), float32], Tensor[(8, 16, 14), float64], Tensor[(32), float32], Tensor[(15, 1, 462), uint8], Tensor[(64, 28), float64]) */
}

def @func_17489() -> (Tensor[(8, 12, 7), float64], Tensor[(504), float32], Tensor[(504), float32]) {
  %442 = @func_17419() /* ty=(Tensor[(8, 12, 7), float64],) */;
  %443 = cast(meta[relay.Constant][33] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %444 = reshape(%443, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %445 = @func_16522(%444) /* ty=(Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(14, 6, 6), float32], Tensor[(504), float32]) */;
  %446 = %442.0;
  %447 = %445.4;
  (%446, %447, meta[relay.Constant][33] /* ty=Tensor[(504), float32] */)
}

def @main(%var_17577: Tensor[(60), uint64]) -> (Tensor[(15), float32], Tensor[(286, 4), float64], Tensor[(6, 2, 5), bool], Tensor[(60), uint64], Tensor[(15, 1, 1792), float32], Tensor[(490, 32), float32], Tensor[(462, 99), float32], Tensor[(462, 99), float32], Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(15, 462, 99), bool]) {
  %448 = cast(%var_17577, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %449 = cast(%var_17577, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %450 = reshape(%448, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), uint64] */;
  %451 = reshape(%449, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), uint64] */;
  %452 = cast(meta[relay.Constant][35] /* ty=Tensor[(286, 4), float64] */, dtype="float64") /* ty=Tensor[(286, 4), float64] */;
  %453 = reshape(%452, newshape=[11, 13, 8]) /* ty=Tensor[(11, 13, 8), float64] */;
  %454 = @func_2247(%453) /* ty=(Tensor[(11, 13, 8), float64], Tensor[(1792), float64], Tensor[(120, 2), float64], Tensor[(1792), float64]) */;
  %455 = %454.1;
  %456 = cast(meta[relay.Constant][34] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %457 = reshape(%456, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %458 = @func_17016(%457) /* ty=(Tensor[(3, 10, 15), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32]) */;
  %459 = %458.1;
  %460 = cast(%455, dtype="float32") /* ty=Tensor[(1792), float32] */;
  %461 = cast(%459, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %462 = @func_15697() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %463 = @func_16929() /* ty=(Tensor[(462, 99), float64],) */;
  %464 = %463.0;
  %465 = cast(%464, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %466 = cos(%465) /* ty=Tensor[(462, 99), float32] */;
  %467 = @func_15697() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %468 = %467.2;
  %469 = cast(%468, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %470 = shape_of(%464, dtype="int32") /* ty=Tensor[(2), int32] */;
  %471 = cast(%464, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %473 = divide(%471, %472) /* ty=Tensor[(462, 99), float32] */;
  %474 = cast(%473, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %475 = shape_of(%466, dtype="int32") /* ty=Tensor[(2), int32] */;
  %476 = cast(%466, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %478 = cast(%464, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %479 = atan(%478) /* ty=Tensor[(462, 99), float32] */;
  %480 = cast(%466, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %481 = shape_of(%479, dtype="int32") /* ty=Tensor[(2), int32] */;
  %482 = cast(%479, dtype="float32") /* ty=Tensor[(462, 99), float32] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %484 = cast(meta[relay.Constant][36] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %485 = reshape(%484, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float32] */;
  %486 = @func_843(%485) /* ty=(Tensor[(3, 8, 13), float64],) */;
  %487 = cast(%459, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
  %488 = cast(%466, dtype="bool") /* ty=Tensor[(462, 99), bool] */;
  %489 = not_equal(%487, %488) /* ty=Tensor[(15, 462, 99), bool] */;
  %490 = cast(%489, dtype="float32") /* ty=Tensor[(15, 462, 99), float32] */;
  %491 = sigmoid(%490) /* ty=Tensor[(15, 462, 99), float32] */;
  %492 = cast(%491, dtype="bool") /* ty=Tensor[(15, 462, 99), bool] */;
  %493 = cast(%479, dtype="bool") /* ty=Tensor[(462, 99), bool] */;
  %494 = @func_11482(%450, %451) /* ty=Tensor[(6, 2, 5), bool] */;
  %495 = power(%460, %461) /* ty=Tensor[(15, 1, 1792), float32] */;
  %496 = %462.3;
  %497 = add(%476, %477) /* ty=Tensor[(462, 99), float32] */;
  %498 = maximum(%482, %483) /* ty=Tensor[(462, 99), float32] */;
  %499 = %486.0;
  %500 = logical_or(%492, %493) /* ty=Tensor[(15, 462, 99), bool] */;
  (meta[relay.Constant][34] /* ty=Tensor[(15), float32] */, meta[relay.Constant][35] /* ty=Tensor[(286, 4), float64] */, %494, %var_17577, %495, %496, %497, %498, %499, meta[relay.Constant][36] /* ty=Tensor[(312), float32] */, %500)
}

def @func_7971(%var_7970: Tensor[(11, 1, 9), float64]) -> (Tensor[(11, ?, 9), bool], Tensor[(1792), float64], Tensor[(32), float32], Tensor[(1792), float64], Tensor[(462), uint16]) {
  %516 = fn (%var_7923: Tensor[(11, 1, 9), float64]) -> (Tensor[(11, ?, 9), bool], Tensor[(1792), float64], Tensor[(32), float32], Tensor[(1792), float64], Tensor[(462), uint16]) {
    %501 = cast(%var_7923, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
    %502 = rsqrt(%501) /* ty=Tensor[(11, 1, 9), float64] */;
    %503 = cast(%var_7923, dtype="bool") /* ty=Tensor[(11, 1, 9), bool] */;
    %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
    %505 = cast(%502, dtype="bool") /* ty=Tensor[(11, 1, 9), bool] */;
    %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %507 = cast(meta[relay.Constant][37] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
    %508 = cast(meta[relay.Constant][38] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %509 = cast(meta[relay.Constant][39] /* ty=Tensor[(462), uint16] */, dtype="uint16") /* ty=Tensor[(462), uint16] */;
    %510 = reshape(%507, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), float32] */;
    %511 = reshape(%508, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
    %512 = reshape(%509, newshape=[462]) /* ty=Tensor[(462), uint16] */;
    %513 = @func_2073(%510, %511, %512) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) */;
    %514 = greater(%505, %506) /* ty=Tensor[(11, ?, 9), bool] */;
    %515 = %513.3;
    (%514, %515, meta[relay.Constant][37] /* ty=Tensor[(32), float32] */, meta[relay.Constant][38] /* ty=Tensor[(1792), float64] */, meta[relay.Constant][39] /* ty=Tensor[(462), uint16] */)
  };
  %516(%var_7970) /* ty=(Tensor[(11, ?, 9), bool], Tensor[(1792), float64], Tensor[(32), float32], Tensor[(1792), float64], Tensor[(462), uint16]) */
}

def @func_2244(%var_2198: Tensor[(11, 13, 8), float64]) -> (Tensor[(11, 13, 8), float64], Tensor[(1792), float64], Tensor[(120, 2), float64], Tensor[(1792), float64]) {
  %517 = cast(%var_2198, dtype="float64") /* ty=Tensor[(11, 13, 8), float64] */;
  %518 = cast(meta[relay.Constant][40] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %519 = cast(meta[relay.Constant][41] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %520 = reshape(%518, newshape=[1, 16, 15]) /* ty=Tensor[(1, 16, 15), float64] */;
  %521 = reshape(%519, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %522 = @func_1814(%520, %521) /* ty=(Tensor[(3, 8, 13), float64], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(?, 16, 15), uint16]) */;
  %523 = acosh(%517) /* ty=Tensor[(11, 13, 8), float64] */;
  %524 = %522.3;
  (%523, %524, meta[relay.Constant][40] /* ty=Tensor[(120, 2), float64] */, meta[relay.Constant][41] /* ty=Tensor[(1792), float64] */)
}

def @func_2073(%var_2034: Tensor[(4, 8, 1), float32], %var_2039: Tensor[(1792), float64], %var_2070: Tensor[(462), uint16]) -> (Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) {
  %525 = cast(%var_2039, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %526 = reshape(%525, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
  %527 = @func_359(%526) /* ty=(Tensor[(8, 16, 14), float64],) */;
  %528 = cast(%var_2034, dtype="float32") /* ty=Tensor[(4, 8, 1), float32] */;
  %529 = sin(%528) /* ty=Tensor[(4, 8, 1), float32] */;
  %530 = cast(%529, dtype="float32") /* ty=Tensor[(4, 8, 1), float32] */;
  %531 = cast(%var_2039, dtype="float32") /* ty=Tensor[(1792), float32] */;
  %532 = cast(%529, dtype="bool") /* ty=Tensor[(4, 8, 1), bool] */;
  %533 = cast(%var_2039, dtype="bool") /* ty=Tensor[(1792), bool] */;
  %534 = cast(%var_2070, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %535 = cast(%var_2070, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %536 = cast(%var_2039, dtype="float64") /* ty=Tensor[(1792), float64] */;
  %537 = reshape(%534, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint16] */;
  %538 = reshape(%535, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), uint16] */;
  %539 = reshape(%536, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
  %540 = @func_1858(%537, %538, %539) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(11, 3, 14), float64], Tensor[(8, 16, 14), float64]) */;
  %541 = %527.0;
  %542 = mod(%530, %531) /* ty=Tensor[(4, 8, 1792), float32] */;
  %543 = not_equal(%532, %533) /* ty=Tensor[(4, 8, 1792), bool] */;
  %544 = %540.1;
  (%541, %542, %543, %544, %var_2070)
}

def @func_7575(%var_7573: Tensor[(16, 6, 4), float32], %var_7574: Tensor[(16, 6, 4), float32]) -> (Tensor[(16, 6, 4), float32],) {
  %550 = fn (%var_7554: Tensor[(16, 6, 4), float32], %var_7555: Tensor[(16, 6, 4), float32]) -> (Tensor[(16, 6, 4), float32],) {
    %545 = cast(%var_7555, dtype="float32") /* ty=Tensor[(16, 6, 4), float32] */;
    %546 = shape_of(%var_7554, dtype="int32") /* ty=Tensor[(3), int32] */;
    %547 = cast(%var_7554, dtype="float32") /* ty=Tensor[(16, 6, 4), float32] */;
    %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %549 = floor_divide(%547, %548) /* ty=Tensor[(16, 6, 4), float32] */;
    (%549,)
  };
  %550(%var_7573, %var_7574) /* ty=(Tensor[(16, 6, 4), float32],) */
}

def @func_17441() -> Tensor[(5, 10, 1), float64] {
  %551 = fn () -> Tensor[(5, 10, 1), float64] {
    @func_17048() /* ty=Tensor[(5, 10, 1), float64] */
  };
  %551() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_15278() -> Tensor[(5, 10, 1), float64] {
  %552 = fn () -> Tensor[(5, 10, 1), float64] {
    @func_15246() /* ty=Tensor[(5, 10, 1), float64] */
  };
  %552() /* ty=Tensor[(5, 10, 1), float64] */
}

def @func_16668() -> (Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) {
  %557 = fn () -> (Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) {
    %553 = @func_16325() /* ty=(Tensor[(8, 12, 7), float64],) */;
    %554 = @func_16138() /* ty=(Tensor[(490, 32), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64], Tensor[(3, 10, 15), float32], Tensor[(450), float32]) */;
    %555 = %553.0;
    %556 = %554.1;
    (%555, %556)
  };
  %557() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */
}

def @func_13325(%var_13320: Tensor[(15, 11, 14), int64]) -> Tensor[(15, 11, 14), int64] {
  %558 = cast(%var_13320, dtype="int64") /* ty=Tensor[(15, 11, 14), int64] */;
  %559 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(15, 11, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 11, 14), int64] */, dtype="int64") /* ty=Tensor[(15, 11, 14), int64] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%560, %561) /* ty=Tensor[(15, 11, 14), int64] */
}

def @func_16727() -> (Tensor[(672), float64],) {
  %564 = fn () -> (Tensor[(672), float64],) {
    %562 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
    %563 = %562.2;
    (%563,)
  };
  %564() /* ty=(Tensor[(672), float64],) */
}

def @func_16883(%var_16878: Tensor[(8, 12, 7), float64]) -> (Tensor[(8, 12, 7), int8],) {
  %565 = @func_16667() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */;
  %566 = %565.1;
  %567 = cast(%var_16878, dtype="int8") /* ty=Tensor[(8, 12, 7), int8] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="int8") /* ty=Tensor[(8, 12, 7), int8] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %571 = bitwise_and(%569, %570) /* ty=Tensor[(8, 12, 7), int8] */;
  (%571,)
}

def @func_4631(%var_4629: Tensor[(14, 7, 5), float64], %var_4630: Tensor[(16, 2), float32]) -> (Tensor[(14, 7, 5), float64], Tensor[(8, 16, 14), float64], Tensor[(16, 2), float32], Tensor[(1792), float64], Tensor[(462, 1), uint16]) {
  @func_4627(%var_4629, %var_4630) /* ty=(Tensor[(14, 7, 5), float64], Tensor[(8, 16, 14), float64], Tensor[(16, 2), float32], Tensor[(1792), float64], Tensor[(462, 1), uint16]) */
}

def @func_11109(%var_11106: Tensor[(2, 1, 15), float64], %var_11107: Tensor[(1078), float32], %var_11108: Tensor[(312), float32]) -> (Tensor[(2, 1, 15), float64], Tensor[(14, 15, 14), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(2, 1, 15), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) {
  %589 = fn (%var_11064: Tensor[(2, 1, 15), float64], %var_11091: Tensor[(1078), float32], %var_11092: Tensor[(312), float32]) -> (Tensor[(2, 1, 15), float64], Tensor[(14, 15, 14), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(2, 1, 15), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) {
    %572 = cast(%var_11064, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
    %573 = sigmoid(%572) /* ty=Tensor[(2, 1, 15), float64] */;
    %574 = cast(%573, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
    %575 = cast(%var_11091, dtype="float32") /* ty=Tensor[(1078), float32] */;
    %576 = cast(%var_11092, dtype="float32") /* ty=Tensor[(312), float32] */;
    %577 = reshape(%575, newshape=[14, 11, 7]) /* ty=Tensor[(14, 11, 7), float32] */;
    %578 = reshape(%576, newshape=[312]) /* ty=Tensor[(312), float32] */;
    %579 = @func_4702(%577, %578) /* ty=(Tensor[(14, 11, 7), float32], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) */;
    %580 = cast(%var_11064, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
    %581 = asin(%580) /* ty=Tensor[(2, 1, 15), float64] */;
    %582 = cast(%581, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
    %583 = cast(meta[relay.Constant][43] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %584 = reshape(%583, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
    %585 = atan(%574) /* ty=Tensor[(2, 1, 15), float64] */;
    %586 = %579.1;
    %587 = log2(%582) /* ty=Tensor[(2, 1, 15), float64] */;
    %588 = @func_5721(%584) /* ty=Tensor[(16, 6, 7), float64] */;
    (%585, %586, %var_11091, %var_11092, %587, %588, meta[relay.Constant][43] /* ty=Tensor[(672), float64] */)
  };
  %589(%var_11106, %var_11107, %var_11108) /* ty=(Tensor[(2, 1, 15), float64], Tensor[(14, 15, 14), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(2, 1, 15), float64], Tensor[(16, 6, 7), float64], Tensor[(672), float64]) */
}

def @func_5125(%var_5120: Tensor[(8, 12, 7), float64]) -> Tensor[(8, 12, 7), float64] {
  %590 = cast(%var_5120, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
  erf(%590) /* ty=Tensor[(8, 12, 7), float64] */
}

def @func_2247(%var_2245: Tensor[(11, 13, 8), float64]) -> (Tensor[(11, 13, 8), float64], Tensor[(1792), float64], Tensor[(120, 2), float64], Tensor[(1792), float64]) {
  @func_2244(%var_2245) /* ty=(Tensor[(11, 13, 8), float64], Tensor[(1792), float64], Tensor[(120, 2), float64], Tensor[(1792), float64]) */
}

def @func_1506(%var_1503: Tensor[(5, 13, 8), bool], %var_1504: Tensor[(5, 13, 8), bool], %var_1505: Tensor[(312), float32]) -> (Tensor[(5, 13, 8), bool], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) {
  %606 = fn (%var_1468: Tensor[(5, 13, 8), bool], %var_1469: Tensor[(5, 13, 8), bool], %var_1497: Tensor[(312), float32]) -> (Tensor[(5, 13, 8), bool], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) {
    %591 = cast(%var_1469, dtype="bool") /* ty=Tensor[(5, 13, 8), bool] */;
    %592 = shape_of(%var_1468, dtype="int32") /* ty=Tensor[(3), int32] */;
    %593 = cast(%var_1468, dtype="bool") /* ty=Tensor[(5, 13, 8), bool] */;
    %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %595 = cast(meta[relay.Constant][44] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %596 = reshape(%595, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
    %597 = @func_359(%596) /* ty=(Tensor[(8, 16, 14), float64],) */;
    %598 = cast(meta[relay.Constant][44] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %599 = cast(%var_1497, dtype="float32") /* ty=Tensor[(312), float32] */;
    %600 = reshape(%599, newshape=[312]) /* ty=Tensor[(312), float32] */;
    %601 = @func_1149(%600) /* ty=(Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) */;
    %602 = logical_and(%593, %594) /* ty=Tensor[(5, 13, 8), bool] */;
    %603 = %597.0;
    %604 = asin(%598) /* ty=Tensor[(1792), float64] */;
    %605 = %601.0;
    (%602, %603, %604, %605, %var_1497)
  };
  %606(%var_1503, %var_1504, %var_1505) /* ty=(Tensor[(5, 13, 8), bool], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) */
}

def @func_10215(%var_10209: Tensor[(7, 6, 7), int64], %var_10210: Tensor[(7, 6, 7), int64], %var_10211: Tensor[(16, 112), float64], %var_10212: Tensor[(15), float32], %var_10213: Tensor[(32), float32], %var_10214: Tensor[(57344), bool]) -> (Tensor[(7, 6, 7), bool], Tensor[(8, 16, 14), float64], Tensor[(16, 112), float64], Tensor[(5, 3, 1), float32], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(10, 462), int16]) {
  @func_10207(%var_10209, %var_10210, %var_10211, %var_10212, %var_10213, %var_10214) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(8, 16, 14), float64], Tensor[(16, 112), float64], Tensor[(5, 3, 1), float32], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(10, 462), int16]) */
}

def @func_7426(%var_7425: Tensor[(3, 10, 15), float32]) -> (Tensor[(3, 10, 15), float32],) {
  %609 = fn (%var_7420: Tensor[(3, 10, 15), float32]) -> (Tensor[(3, 10, 15), float32],) {
    %607 = cast(%var_7420, dtype="float32") /* ty=Tensor[(3, 10, 15), float32] */;
    %608 = asinh(%607) /* ty=Tensor[(3, 10, 15), float32] */;
    (%608,)
  };
  %609(%var_7425) /* ty=(Tensor[(3, 10, 15), float32],) */
}

def @func_16570(%var_16568: Tensor[(9, 2, 6), bool], %var_16569: Tensor[(1280), float32]) -> (Tensor[(9, 2, 6), bool], Tensor[(120), float32], Tensor[(1280), float32], Tensor[(1792), float64], Tensor[(3, 8, 13), int32]) {
  %634 = fn (%var_16529: Tensor[(9, 2, 6), bool], %var_16537: Tensor[(1280), float32]) -> (Tensor[(9, 2, 6), bool], Tensor[(120), float32], Tensor[(1280), float32], Tensor[(1792), float64], Tensor[(3, 8, 13), int32]) {
    %610 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 2, 6), bool] */, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
    %611 = shape_of(%var_16529, dtype="int32") /* ty=Tensor[(3), int32] */;
    %612 = cast(%var_16529, dtype="bool") /* ty=Tensor[(9, 2, 6), bool] */;
    %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %614 = cast(meta[relay.Constant][46] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %615 = cast(meta[relay.Constant][48] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
    %616 = cast(meta[relay.Constant][48] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
    %617 = cast(meta[relay.Constant][48] /* ty=Tensor[(312), float32] */, dtype="uint8") /* ty=Tensor[(312), uint8] */;
    %618 = cast(%var_16537, dtype="float32") /* ty=Tensor[(1280), float32] */;
    %619 = cast(meta[relay.Constant][47] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %620 = reshape(%614, newshape=[10, 2, 6]) /* ty=Tensor[(10, 2, 6), float32] */;
    %621 = reshape(%615, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
    %622 = reshape(%616, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
    %623 = reshape(%617, newshape=[3, 104]) /* ty=Tensor[(3, 104), uint8] */;
    %624 = reshape(%618, newshape=[2, 640]) /* ty=Tensor[(2, 640), float32] */;
    %625 = reshape(%619, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
    %626 = @func_8977(%620, %621, %622, %623, %624, %625) /* ty=(Tensor[(10, 2, 6), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), int64], Tensor[(312), float32], float32, Tensor[(2, 640), float32], Tensor[(1792), float64]) */;
    %627 = %626.1;
    %628 = cast(meta[relay.Constant][48] /* ty=Tensor[(312), float32] */, dtype="int32") /* ty=Tensor[(312), int32] */;
    %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%627, dtype="int32") /* ty=Tensor[(3, 8, 13), int32] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %632 = logical_and(%612, %613) /* ty=Tensor[(9, 2, 6), bool] */;
    %633 = bitwise_or(%630, %631) /* ty=Tensor[(3, 8, 13), int32] */;
    (%632, meta[relay.Constant][46] /* ty=Tensor[(120), float32] */, %var_16537, meta[relay.Constant][47] /* ty=Tensor[(1792), float64] */, %633)
  };
  %634(%var_16568, %var_16569) /* ty=(Tensor[(9, 2, 6), bool], Tensor[(120), float32], Tensor[(1280), float32], Tensor[(1792), float64], Tensor[(3, 8, 13), int32]) */
}

def @func_843(%var_841: Tensor[(3, 8, 13), float32]) -> (Tensor[(3, 8, 13), float64],) {
  @func_840(%var_841) /* ty=(Tensor[(3, 8, 13), float64],) */
}

def @func_17262(%var_17203: Tensor[(6, 1, 10), float64]) -> (Tensor[(14, 7, 14), float64], Tensor[(1372), float64], Tensor[(6, ?, 10), uint64]) {
  %635 = cast(meta[relay.Constant][49] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %636 = cast(meta[relay.Constant][49] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %637 = reshape(%635, newshape=[14, 7, 14]) /* ty=Tensor[(14, 7, 14), float64] */;
  %638 = reshape(%636, newshape=[14, 7, 14]) /* ty=Tensor[(14, 7, 14), float64] */;
  %639 = @func_14653(%637, %638) /* ty=(Tensor[(14, 7, 14), float64],) */;
  %640 = cast(%var_17203, dtype="float64") /* ty=Tensor[(6, 1, 10), float64] */;
  %641 = sigmoid(%640) /* ty=Tensor[(6, 1, 10), float64] */;
  %642 = cast(%641, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %643 = shape_of(%var_17203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%var_17203, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %646 = less(%644, %645) /* ty=Tensor[(6, ?, 10), bool] */;
  %647 = cast(%var_17203, dtype="uint64") /* ty=Tensor[(6, 1, 10), uint64] */;
  %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%646, dtype="uint64") /* ty=Tensor[(6, ?, 10), uint64] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %651 = %639.0;
  %652 = logical_xor(%649, %650) /* ty=Tensor[(6, ?, 10), uint64] */;
  (%651, meta[relay.Constant][49] /* ty=Tensor[(1372), float64] */, %652)
}

def @func_7738(%var_7693: int64, %var_7713: Tensor[(1408), float32]) -> (Tensor[(2, 1, 16), int64], Tensor[(11, 8, 16), float32], Tensor[(1408), float32]) {
  %653 = cast(%var_7693, dtype="int64") /* ty=int64 */;
  %654 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 1, 16), int64] */, dtype="int64") /* ty=Tensor[(2, 1, 16), int64] */;
  %655 = cast(%var_7713, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %656 = cast(%var_7713, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %657 = reshape(%655, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), float32] */;
  %658 = reshape(%656, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), float32] */;
  %659 = @func_5871(%657, %658) /* ty=(Tensor[(11, 8, 16), float32],) */;
  %660 = right_shift(%653, %654) /* ty=Tensor[(2, 1, 16), int64] */;
  %661 = %659.0;
  (%660, %661, %var_7713)
}

def @func_2161(%var_2160: Tensor[(13, 4, 15), float32]) -> Tensor[(13, 4, 15), float64] {
  %665 = fn (%var_2145: Tensor[(13, 4, 15), float32]) -> Tensor[(13, 4, 15), float64] {
    %662 = cast(%var_2145, dtype="float32") /* ty=Tensor[(13, 4, 15), float32] */;
    %663 = erf(%662) /* ty=Tensor[(13, 4, 15), float32] */;
    %664 = cast(%663, dtype="float64") /* ty=Tensor[(13, 4, 15), float64] */;
    asin(%664) /* ty=Tensor[(13, 4, 15), float64] */
  };
  %665(%var_2160) /* ty=Tensor[(13, 4, 15), float64] */
}

def @func_12271(%var_12267: Tensor[(3, 104), float32], %var_12268: Tensor[(294), int64], %var_12269: Tensor[(57344), bool], %var_12270: Tensor[(520), bool]) -> (Tensor[(10, 8, 4), float64], Tensor[(3, 8, 13), float64], Tensor[(96, 20), uint64], Tensor[(3, 104), float32], Tensor[(8, 16, 14), float64], Tensor[(294), int64], Tensor[(1792), float64], Tensor[(15), float32], Tensor[(16, 2), float32], Tensor[(57344), bool], Tensor[(8, 16, 14), float64], Tensor[(312), float32], Tensor[(520), bool]) {
  %709 = fn (%var_12231: Tensor[(3, 104), float32], %var_12237: Tensor[(294), int64], %var_12241: Tensor[(57344), bool], %var_12263: Tensor[(520), bool]) -> (Tensor[(10, 8, 4), float64], Tensor[(3, 8, 13), float64], Tensor[(96, 20), uint64], Tensor[(3, 104), float32], Tensor[(8, 16, 14), float64], Tensor[(294), int64], Tensor[(1792), float64], Tensor[(15), float32], Tensor[(16, 2), float32], Tensor[(57344), bool], Tensor[(8, 16, 14), float64], Tensor[(312), float32], Tensor[(520), bool]) {
    %666 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
    %667 = cos(%666) /* ty=Tensor[(10, 8, 4), float64] */;
    %668 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 8, 4), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
    %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
    %670 = cast(%667, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %672 = divide(%670, %671) /* ty=Tensor[(10, 8, 4), float64] */;
    %673 = cast(%672, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
    %674 = cast(meta[relay.Constant][52] /* ty=Tensor[(96, 20), uint64] */, dtype="uint64") /* ty=Tensor[(96, 20), uint64] */;
    %675 = cast(meta[relay.Constant][52] /* ty=Tensor[(96, 20), uint64] */, dtype="uint64") /* ty=Tensor[(96, 20), uint64] */;
    %676 = cast(%var_12231, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
    %677 = reshape(%674, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), uint64] */;
    %678 = reshape(%675, newshape=[12, 10, 16]) /* ty=Tensor[(12, 10, 16), uint64] */;
    %679 = reshape(%676, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
    %680 = @func_8998(%677, %678, %679) /* ty=(Tensor[(12, 10, 16), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), float32]) */;
    %681 = cast(%var_12237, dtype="int64") /* ty=Tensor[(294), int64] */;
    %682 = cast(%var_12237, dtype="int64") /* ty=Tensor[(294), int64] */;
    %683 = cast(meta[relay.Constant][53] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %684 = cast(meta[relay.Constant][54] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
    %685 = cast(meta[relay.Constant][55] /* ty=Tensor[(16, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 2), float32] */;
    %686 = cast(%var_12241, dtype="bool") /* ty=Tensor[(57344), bool] */;
    %687 = reshape(%681, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int64] */;
    %688 = reshape(%682, newshape=[7, 6, 7]) /* ty=Tensor[(7, 6, 7), int64] */;
    %689 = reshape(%683, newshape=[16, 112]) /* ty=Tensor[(16, 112), float64] */;
    %690 = reshape(%684, newshape=[15]) /* ty=Tensor[(15), float32] */;
    %691 = reshape(%685, newshape=[32]) /* ty=Tensor[(32), float32] */;
    %692 = reshape(%686, newshape=[57344]) /* ty=Tensor[(57344), bool] */;
    %693 = @func_10207(%687, %688, %689, %690, %691, %692) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(8, 16, 14), float64], Tensor[(16, 112), float64], Tensor[(5, 3, 1), float32], Tensor[(15), float32], Tensor[(32), float32], Tensor[(57344), bool], Tensor[(10, 462), int16]) */;
    %694 = cast(meta[relay.Constant][53] /* ty=Tensor[(1792), float64] */, dtype="float64") /* ty=Tensor[(1792), float64] */;
    %695 = reshape(%694, newshape=[8, 16, 14]) /* ty=Tensor[(8, 16, 14), float64] */;
    %696 = @func_359(%695) /* ty=(Tensor[(8, 16, 14), float64],) */;
    %697 = cast(%var_12263, dtype="bool") /* ty=Tensor[(520), bool] */;
    %698 = cast(%var_12263, dtype="bool") /* ty=Tensor[(520), bool] */;
    %699 = cast(%var_12231, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
    %700 = reshape(%697, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), bool] */;
    %701 = reshape(%698, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), bool] */;
    %702 = reshape(%699, newshape=[312]) /* ty=Tensor[(312), float32] */;
    %703 = @func_1502(%700, %701, %702) /* ty=(Tensor[(5, 13, 8), bool], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(14, 15, 14), float64], Tensor[(312), float32]) */;
    %704 = rsqrt(%673) /* ty=Tensor[(10, 8, 4), float64] */;
    %705 = %680.1;
    %706 = %693.1;
    %707 = %696.0;
    %708 = %703.4;
    (%704, %705, meta[relay.Constant][52] /* ty=Tensor[(96, 20), uint64] */, %var_12231, %706, %var_12237, meta[relay.Constant][53] /* ty=Tensor[(1792), float64] */, meta[relay.Constant][54] /* ty=Tensor[(15), float32] */, meta[relay.Constant][55] /* ty=Tensor[(16, 2), float32] */, %var_12241, %707, %708, %var_12263)
  };
  %709(%var_12267, %var_12268, %var_12269, %var_12270) /* ty=(Tensor[(10, 8, 4), float64], Tensor[(3, 8, 13), float64], Tensor[(96, 20), uint64], Tensor[(3, 104), float32], Tensor[(8, 16, 14), float64], Tensor[(294), int64], Tensor[(1792), float64], Tensor[(15), float32], Tensor[(16, 2), float32], Tensor[(57344), bool], Tensor[(8, 16, 14), float64], Tensor[(312), float32], Tensor[(520), bool]) */
}

def @func_17420() -> (Tensor[(8, 12, 7), float64],) {
  %712 = fn () -> (Tensor[(8, 12, 7), float64],) {
    %710 = @func_16325() /* ty=(Tensor[(8, 12, 7), float64],) */;
    %711 = %710.0;
    (%711,)
  };
  %712() /* ty=(Tensor[(8, 12, 7), float64],) */
}

def @func_9003(%var_9000: Tensor[(12, 10, 16), uint64], %var_9001: Tensor[(12, 10, 16), uint64], %var_9002: Tensor[(3, 104), float32]) -> (Tensor[(12, 10, 16), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), float32]) {
  @func_8998(%var_9000, %var_9001, %var_9002) /* ty=(Tensor[(12, 10, 16), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), float32]) */
}

def @func_16886(%var_16884: Tensor[(8, 12, 7), float64]) -> (Tensor[(8, 12, 7), int8],) {
  @func_16883(%var_16884) /* ty=(Tensor[(8, 12, 7), int8],) */
}

def @func_3960(%var_3958: Tensor[(9, 9, 1), float32], %var_3959: Tensor[(312), float32]) -> (Tensor[(9, 9, ?), bool], Tensor[(9, 9, ?), float64], Tensor[(312), float32], Tensor[(312), float32]) {
  @func_3956(%var_3958, %var_3959) /* ty=(Tensor[(9, 9, ?), bool], Tensor[(9, 9, ?), float64], Tensor[(312), float32], Tensor[(312), float32]) */
}

def @func_11485(%var_11483: Tensor[(6, 2, 5), uint64], %var_11484: Tensor[(6, 2, 5), uint64]) -> Tensor[(6, 2, 5), bool] {
  %717 = fn (%var_11473: Tensor[(6, 2, 5), uint64], %var_11474: Tensor[(6, 2, 5), uint64]) -> Tensor[(6, 2, 5), bool] {
    %713 = cast(%var_11474, dtype="bool") /* ty=Tensor[(6, 2, 5), bool] */;
    %714 = shape_of(%var_11473, dtype="int32") /* ty=Tensor[(3), int32] */;
    %715 = cast(%var_11473, dtype="bool") /* ty=Tensor[(6, 2, 5), bool] */;
    %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%715, %716) /* ty=Tensor[(6, 2, 5), bool] */
  };
  %717(%var_11483, %var_11484) /* ty=Tensor[(6, 2, 5), bool] */
}

def @func_16071(%var_16052: Tensor[(60), uint64]) -> (Tensor[(5, 10, 1), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(4, 14, 16), int8], Tensor[(896), int8], Tensor[(1372), bool], Tensor[(6, 2, 5), bool], Tensor[(60), uint64]) {
  %718 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
  %719 = cast(meta[relay.Constant][56] /* ty=Tensor[(15), float32] */, dtype="float32") /* ty=Tensor[(15), float32] */;
  %720 = reshape(%719, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float32] */;
  %721 = @func_14702(%720) /* ty=(Tensor[(15, 1, 1), float32],) */;
  %722 = cast(meta[relay.Constant][57] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %723 = cast(meta[relay.Constant][57] /* ty=Tensor[(896), int8] */, dtype="int8") /* ty=Tensor[(896), int8] */;
  %724 = reshape(%722, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %725 = reshape(%723, newshape=[4, 14, 16]) /* ty=Tensor[(4, 14, 16), int8] */;
  %726 = @func_8080(%724, %725) /* ty=(Tensor[(4, 14, 16), int8],) */;
  %727 = cast(meta[relay.Constant][58] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %728 = cast(meta[relay.Constant][58] /* ty=Tensor[(1372), float64] */, dtype="float64") /* ty=Tensor[(1372), float64] */;
  %729 = reshape(%727, newshape=[14, 7, 14]) /* ty=Tensor[(14, 7, 14), float64] */;
  %730 = reshape(%728, newshape=[14, 7, 14]) /* ty=Tensor[(14, 7, 14), float64] */;
  %731 = @func_14653(%729, %730) /* ty=(Tensor[(14, 7, 14), float64],) */;
  %732 = %731.0;
  %733 = cast(%732, dtype="bool") /* ty=Tensor[(14, 7, 14), bool] */;
  %734 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(1372), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %735 = cast(meta[relay.Constant][58] /* ty=Tensor[(1372), float64] */, dtype="bool") /* ty=Tensor[(1372), bool] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?), bool] */;
  %737 = cast(%var_16052, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %738 = cast(%var_16052, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %739 = reshape(%737, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), uint64] */;
  %740 = reshape(%738, newshape=[6, 2, 5]) /* ty=Tensor[(6, 2, 5), uint64] */;
  %741 = %718.1;
  %742 = %721.0;
  %743 = %726.0;
  %744 = greater(%735, %736) /* ty=Tensor[(1372), bool] */;
  %745 = @func_11482(%739, %740) /* ty=Tensor[(6, 2, 5), bool] */;
  (%741, %742, meta[relay.Constant][56] /* ty=Tensor[(15), float32] */, %743, meta[relay.Constant][57] /* ty=Tensor[(896), int8] */, %744, %745, %var_16052)
}

def @func_840(%var_828: Tensor[(3, 8, 13), float32]) -> (Tensor[(3, 8, 13), float64],) {
  %746 = cast(%var_828, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %747 = rsqrt(%746) /* ty=Tensor[(3, 8, 13), float32] */;
  %748 = cast(%747, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
  %749 = sigmoid(%748) /* ty=Tensor[(3, 8, 13), float64] */;
  (%749,)
}

def @func_12794(%var_12791: Tensor[(3, 3, 5), bool], %var_12792: Tensor[(3, 104), int16], %var_12793: Tensor[(1408), float32]) -> (Tensor[(3, 3, 5), bool], Tensor[(3, 3, 5), float32], Tensor[(11, 8, 16), float32], Tensor[(3, 104), int16], Tensor[(1408), float32]) {
  %765 = fn (%var_12770: Tensor[(3, 3, 5), bool], %var_12785: Tensor[(3, 104), int16], %var_12786: Tensor[(1408), float32]) -> (Tensor[(3, 3, 5), bool], Tensor[(3, 3, 5), float32], Tensor[(11, 8, 16), float32], Tensor[(3, 104), int16], Tensor[(1408), float32]) {
    %750 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %751 = cast(%var_12770, dtype="bool") /* ty=Tensor[(3, 3, 5), bool] */;
    %752 = cast(%var_12770, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
    %753 = cast(True /* ty=bool */, dtype="int16") /* ty=int16 */;
    %754 = cast(%var_12785, dtype="int16") /* ty=Tensor[(3, 104), int16] */;
    %755 = cast(%var_12786, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %756 = cast(%var_12785, dtype="bool") /* ty=Tensor[(3, 104), bool] */;
    %757 = reshape(%753, newshape=[]) /* ty=int16 */;
    %758 = reshape(%754, newshape=[8, 3, 13]) /* ty=Tensor[(8, 3, 13), int16] */;
    %759 = reshape(%755, newshape=[1408]) /* ty=Tensor[(1408), float32] */;
    %760 = reshape(%756, newshape=[8, 3, 13]) /* ty=Tensor[(8, 3, 13), bool] */;
    %761 = @func_10749(%757, %758, %759, %760) /* ty=(Tensor[(11, 8, 16), float32], Tensor[(1408), float32], Tensor[(8, 3, 13), float32]) */;
    %762 = logical_and(%750, %751) /* ty=Tensor[(3, 3, 5), bool] */;
    %763 = acos(%752) /* ty=Tensor[(3, 3, 5), float32] */;
    %764 = %761.0;
    (%762, %763, %764, %var_12785, %var_12786)
  };
  %765(%var_12791, %var_12792, %var_12793) /* ty=(Tensor[(3, 3, 5), bool], Tensor[(3, 3, 5), float32], Tensor[(11, 8, 16), float32], Tensor[(3, 104), int16], Tensor[(1408), float32]) */
}

def @func_8083(%var_8081: Tensor[(4, 14, 16), int8], %var_8082: Tensor[(4, 14, 16), int8]) -> (Tensor[(4, 14, 16), int8],) {
  %771 = fn (%var_8057: Tensor[(4, 14, 16), int8], %var_8058: Tensor[(4, 14, 16), int8]) -> (Tensor[(4, 14, 16), int8],) {
    %766 = cast(%var_8058, dtype="int8") /* ty=Tensor[(4, 14, 16), int8] */;
    %767 = shape_of(%var_8057, dtype="int32") /* ty=Tensor[(3), int32] */;
    %768 = cast(%var_8057, dtype="int8") /* ty=Tensor[(4, 14, 16), int8] */;
    %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %770 = minimum(%768, %769) /* ty=Tensor[(4, 14, 16), int8] */;
    (%770,)
  };
  %771(%var_8081, %var_8082) /* ty=(Tensor[(4, 14, 16), int8],) */
}

def @func_16392(%var_16355: Tensor[(8, 12, 7), float64], %var_16388: Tensor[(30), float64], %var_16389: Tensor[(240), float64], %var_16390: Tensor[(32), float32]) -> (Tensor[(5, 10, 1), float64], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(8, 12, 7), float32], Tensor[(1078), float32], Tensor[(30), float64], Tensor[(240), float64], Tensor[(32), float32]) {
  %772 = cast(meta[relay.Constant][59] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %773 = reshape(%772, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
  %774 = @func_16201() /* ty=(Tensor[(3, 10, 15), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */;
  %775 = %774.1;
  %776 = cast(%var_16355, dtype="float32") /* ty=Tensor[(8, 12, 7), float32] */;
  %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%775, dtype="float32") /* ty=Tensor[(8, 12, 7), float32] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %780 = cast(%var_16388, dtype="float64") /* ty=Tensor[(30), float64] */;
  %781 = cast(%var_16389, dtype="float64") /* ty=Tensor[(240), float64] */;
  %782 = cast(%var_16390, dtype="float32") /* ty=Tensor[(32), float32] */;
  %783 = cast(%var_16389, dtype="float64") /* ty=Tensor[(240), float64] */;
  %784 = reshape(%780, newshape=[30, 1]) /* ty=Tensor[(30, 1), float64] */;
  %785 = reshape(%781, newshape=[24, 10]) /* ty=Tensor[(24, 10), float64] */;
  %786 = reshape(%782, newshape=[32]) /* ty=Tensor[(32), float32] */;
  %787 = reshape(%783, newshape=[24, 10]) /* ty=Tensor[(24, 10), float64] */;
  %788 = @func_15230(%784, %785, %786, %787) /* ty=(Tensor[(5, 10, 1), float64], Tensor[(2, 1, 15), float64], Tensor[(30, 1), float64], Tensor[(1078), float32], Tensor[(312), float32], Tensor[(8, 16, 14), float64], Tensor[(1792), float64], Tensor[(16, 2), float32], Tensor[(245, 2), float64], Tensor[(32), float32], Tensor[(24, 10), bool]) */;
  %789 = @func_15246() /* ty=Tensor[(5, 10, 1), float64] */;
  %790 = @func_10510(%773) /* ty=Tensor[(16, 4, 5), float32] */;
  %791 = mod(%778, %779) /* ty=Tensor[(8, 12, 7), float32] */;
  %792 = %788.3;
  (%789, %790, meta[relay.Constant][59] /* ty=Tensor[(320), float32] */, %791, %792, %var_16388, %var_16389, %var_16390)
}

def @func_16203() -> (Tensor[(3, 10, 15), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) {
  @func_16201() /* ty=(Tensor[(3, 10, 15), float32], Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */
}

def @func_15427() -> (Tensor[(8, 12, 7), float64],) {
  @func_15425() /* ty=(Tensor[(8, 12, 7), float64],) */
}

def @func_15372() -> (Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) {
  %793 = cast(meta[relay.Constant][60] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %794 = reshape(%793, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float64] */;
  %795 = @func_15246() /* ty=Tensor[(5, 10, 1), float64] */;
  %796 = @func_5125(%794) /* ty=Tensor[(8, 12, 7), float64] */;
  (%795, %796, meta[relay.Constant][60] /* ty=Tensor[(672), float64] */)
}

def @func_13328(%var_13326: Tensor[(15, 11, 14), int64]) -> Tensor[(15, 11, 14), int64] {
  @func_13325(%var_13326) /* ty=Tensor[(15, 11, 14), int64] */
}

def @func_15374() -> (Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) {
  @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */
}

def @func_12849(%var_12836: Tensor[(6, 15, 8), uint32], %var_12837: Tensor[(6, 15, 8), uint32]) -> (Tensor[(6, 15, 8), uint32],) {
  %797 = cast(%var_12837, dtype="uint32") /* ty=Tensor[(6, 15, 8), uint32] */;
  %798 = shape_of(%var_12836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%var_12836, dtype="uint32") /* ty=Tensor[(6, 15, 8), uint32] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %801 = bitwise_xor(%799, %800) /* ty=Tensor[(6, 15, 8), uint32] */;
  (%801,)
}

def @func_16929() -> (Tensor[(462, 99), float64],) {
  %821 = fn () -> (Tensor[(462, 99), float64],) {
    %802 = @func_15695() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(5, 10, 1), float64], Tensor[(462, 99), uint32], Tensor[(490, 32), float32]) */;
    %803 = %802.2;
    %804 = cast(%803, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
    %805 = log(%804) /* ty=Tensor[(462, 99), float64] */;
    %806 = cast(%805, dtype="bool") /* ty=Tensor[(462, 99), bool] */;
    %807 = shape_of(%803, dtype="int32") /* ty=Tensor[(2), int32] */;
    %808 = cast(%803, dtype="bool") /* ty=Tensor[(462, 99), bool] */;
    %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %810 = logical_and(%808, %809) /* ty=Tensor[(462, 99), bool] */;
    %811 = cast(%810, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
    %812 = shape_of(%803, dtype="int32") /* ty=Tensor[(2), int32] */;
    %813 = cast(%803, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
    %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %815 = floor_mod(%813, %814) /* ty=Tensor[(462, 99), float64] */;
    %816 = cast(%805, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
    %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(2), int32] */;
    %818 = cast(%815, dtype="float64") /* ty=Tensor[(462, 99), float64] */;
    %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %820 = floor_divide(%818, %819) /* ty=Tensor[(462, 99), float64] */;
    (%820,)
  };
  %821() /* ty=(Tensor[(462, 99), float64],) */
}

def @func_3783(%var_3778: Tensor[(5, 3, 1), float32], %var_3779: Tensor[(32), float32], %var_3780: Tensor[(1792, 1), float64], %var_3781: Tensor[(462), uint16], %var_3782: Tensor[(4, 8, 1792), bool]) -> (Tensor[(5, 3, 1), float32], Tensor[(462), uint16], Tensor[(4, 8, 1792), uint8], Tensor[(1792, 32), int32]) {
  %840 = fn (%var_3746: Tensor[(5, 3, 1), float32], %var_3751: Tensor[(32), float32], %var_3752: Tensor[(1792, 1), float64], %var_3753: Tensor[(462), uint16], %var_3756: Tensor[(4, 8, 1792), bool]) -> (Tensor[(5, 3, 1), float32], Tensor[(462), uint16], Tensor[(4, 8, 1792), uint8], Tensor[(1792, 32), int32]) {
    %822 = cast(%var_3746, dtype="float32") /* ty=Tensor[(5, 3, 1), float32] */;
    %823 = cast(%var_3751, dtype="float32") /* ty=Tensor[(32), float32] */;
    %824 = cast(%var_3752, dtype="float64") /* ty=Tensor[(1792, 1), float64] */;
    %825 = cast(%var_3753, dtype="uint16") /* ty=Tensor[(462), uint16] */;
    %826 = reshape(%823, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), float32] */;
    %827 = reshape(%824, newshape=[1792]) /* ty=Tensor[(1792), float64] */;
    %828 = reshape(%825, newshape=[462]) /* ty=Tensor[(462), uint16] */;
    %829 = @func_2073(%826, %827, %828) /* ty=(Tensor[(8, 16, 14), float64], Tensor[(4, 8, 1792), float32], Tensor[(4, 8, 1792), bool], Tensor[(1792), float64], Tensor[(462), uint16]) */;
    %830 = %829.2;
    %831 = cast(%var_3756, dtype="uint8") /* ty=Tensor[(4, 8, 1792), uint8] */;
    %832 = shape_of(%830, dtype="int32") /* ty=Tensor[(3), int32] */;
    %833 = cast(%830, dtype="uint8") /* ty=Tensor[(4, 8, 1792), uint8] */;
    %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %835 = cast(%var_3752, dtype="int32") /* ty=Tensor[(1792, 1), int32] */;
    %836 = cast(%var_3751, dtype="int32") /* ty=Tensor[(32), int32] */;
    %837 = tan(%822) /* ty=Tensor[(5, 3, 1), float32] */;
    %838 = minimum(%833, %834) /* ty=Tensor[(4, 8, 1792), uint8] */;
    %839 = add(%835, %836) /* ty=Tensor[(1792, 32), int32] */;
    (%837, %var_3753, %838, %839)
  };
  %840(%var_3778, %var_3779, %var_3780, %var_3781, %var_3782) /* ty=(Tensor[(5, 3, 1), float32], Tensor[(462), uint16], Tensor[(4, 8, 1792), uint8], Tensor[(1792, 32), int32]) */
}

def @func_16443() -> (Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) {
  %841 = @func_15372() /* ty=(Tensor[(5, 10, 1), float64], Tensor[(8, 12, 7), float64], Tensor[(672), float64]) */;
  %842 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 60), uint32] */, dtype="uint32") /* ty=Tensor[(12, 60), uint32] */;
  %843 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 60), uint32] */, dtype="uint32") /* ty=Tensor[(12, 60), uint32] */;
  %844 = reshape(%842, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), uint32] */;
  %845 = reshape(%843, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), uint32] */;
  %846 = @func_12849(%844, %845) /* ty=(Tensor[(6, 15, 8), uint32],) */;
  %847 = %841.1;
  %848 = %846.0;
  (%847, %848, meta[relay.Constant][61] /* ty=Tensor[(12, 60), uint32] */)
}

def @func_8998(%var_8987: Tensor[(12, 10, 16), uint64], %var_8988: Tensor[(12, 10, 16), uint64], %var_8994: Tensor[(3, 104), float32]) -> (Tensor[(12, 10, 16), bool], Tensor[(3, 8, 13), float64], Tensor[(3, 104), float32]) {
  %849 = cast(%var_8988, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  %850 = shape_of(%var_8987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%var_8987, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %853 = cast(%var_8994, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %854 = reshape(%853, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %855 = @func_1149(%854) /* ty=(Tensor[(14, 15, 14), float64], Tensor[(3, 8, 13), float64], Tensor[(312), float32]) */;
  %856 = greater(%851, %852) /* ty=Tensor[(12, 10, 16), bool] */;
  %857 = %855.1;
  (%856, %857, %var_8994)
}

def @func_16760() -> Tensor[(8, 12, 7), float64] {
  %859 = fn () -> Tensor[(8, 12, 7), float64] {
    %858 = @func_16667() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), float64]) */;
    %858.0
  };
  %859() /* ty=Tensor[(8, 12, 7), float64] */
}

def @func_17387() -> (Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), int8]) {
  %866 = fn () -> (Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), int8]) {
    %860 = @func_16443() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(6, 15, 8), uint32], Tensor[(12, 60), uint32]) */;
    %861 = %860.0;
    %862 = cast(%861, dtype="float64") /* ty=Tensor[(8, 12, 7), float64] */;
    %863 = reshape(%862, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float64] */;
    %864 = @func_16883(%863) /* ty=(Tensor[(8, 12, 7), int8],) */;
    %865 = %864.0;
    (%861, %865)
  };
  %866() /* ty=(Tensor[(8, 12, 7), float64], Tensor[(8, 12, 7), int8]) */
}

def @func_16398(%var_16394: Tensor[(8, 12, 7), float64], %var_16395: Tensor[(30), float64], %var_16396: Tensor[(240), float64], %var_16397: Tensor[(32), float32]) -> (Tensor[(5, 10, 1), float64], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(8, 12, 7), float32], Tensor[(1078), float32], Tensor[(30), float64], Tensor[(240), float64], Tensor[(32), float32]) {
  @func_16392(%var_16394, %var_16395, %var_16396, %var_16397) /* ty=(Tensor[(5, 10, 1), float64], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(8, 12, 7), float32], Tensor[(1078), float32], Tensor[(30), float64], Tensor[(240), float64], Tensor[(32), float32]) */
}

def @func_16074(%var_16072: Tensor[(60), uint64]) -> (Tensor[(5, 10, 1), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(4, 14, 16), int8], Tensor[(896), int8], Tensor[(1372), bool], Tensor[(6, 2, 5), bool], Tensor[(60), uint64]) {
  @func_16071(%var_16072) /* ty=(Tensor[(5, 10, 1), float64], Tensor[(15, 1, 1), float32], Tensor[(15), float32], Tensor[(4, 14, 16), int8], Tensor[(896), int8], Tensor[(1372), bool], Tensor[(6, 2, 5), bool], Tensor[(60), uint64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 2

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_4576(%var_4524: Tensor[(2, 11, 8), float32]) -> (Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float32]) {
  %0 = @func_3923() /* ty=Tensor[(2, 11, 8), float32] */;
  %1 = cast(%var_4524, dtype="uint32") /* ty=Tensor[(2, 11, 8), uint32] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="uint32") /* ty=Tensor[(2, 11, 8), uint32] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %5 = cast(%var_4524, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %6 = cosh(%5) /* ty=Tensor[(2, 11, 8), float32] */;
  %7 = cast(%6, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %8 = multiply(%3, %4) /* ty=Tensor[(2, 11, 8), uint32] */;
  %9 = asin(%7) /* ty=Tensor[(2, 11, 8), float32] */;
  (%8, %9)
}

def @func_3923() -> Tensor[(2, 11, 8), float32] {
  %10 = @func_2853() /* ty=Tensor[(2, 11, 8), float64] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 11, 8), float64] */, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%10, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%13, %14) /* ty=Tensor[(2, 11, 8), float32] */
}

def @func_2578(%var_2547: Tensor[(16, 1, 1), uint16], %var_2548: Tensor[(16, 15, 1), uint16], %var_2573: Tensor[(16, 6, 9), uint16]) -> (Tensor[(16, 15, 1), uint16], Tensor[(16, 6, 9), uint32]) {
  %15 = cast(%var_2547, dtype="uint16") /* ty=Tensor[(16, 1, 1), uint16] */;
  %16 = cast(%var_2548, dtype="uint16") /* ty=Tensor[(16, 15, 1), uint16] */;
  %17 = cast(%var_2547, dtype="uint32") /* ty=Tensor[(16, 1, 1), uint32] */;
  %18 = cast(%var_2573, dtype="uint32") /* ty=Tensor[(16, 6, 9), uint32] */;
  %19 = bitwise_or(%15, %16) /* ty=Tensor[(16, 15, 1), uint16] */;
  %20 = logical_xor(%17, %18) /* ty=Tensor[(16, 6, 9), uint32] */;
  (%19, %20)
}

def @func_2412() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) {
  %21 = @func_1693() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %22 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 960), float64] */, dtype="float64") /* ty=Tensor[(2, 960), float64] */;
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 960), float64] */, dtype="float64") /* ty=Tensor[(2, 960), float64] */;
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 960), float64] */, dtype="uint32") /* ty=Tensor[(2, 960), uint32] */;
  %27 = reshape(%23, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %28 = reshape(%24, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %29 = reshape(%25, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %30 = reshape(%26, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), uint32] */;
  %31 = @func_661(%27, %28, %29, %30) /* ty=(Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(15, 16, 8), uint8], Tensor[(15, 16, 8), bool], Tensor[(4, 3, 7), float64]) */;
  %32 = %31.3;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %34 = %21.0;
  %35 = %22.0;
  %36 = rsqrt(%33) /* ty=Tensor[(15, 16, 8), float32] */;
  (%34, %35, meta[relay.Constant][1] /* ty=Tensor[(2, 960), float64] */, meta[relay.Constant][2] /* ty=Tensor[(2160), uint8] */, %36)
}

def @func_1760() -> Tensor[(2, 11, 8), float64] {
  @func_1572() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_2360(%var_2337: int64, %var_2339: Tensor[(16), float32], %var_2340: Tensor[(1, 1365), uint16]) -> (Tensor[(2, 11, 8), int8], Tensor[(1920), float64], int64, Tensor[(240), int64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64]) {
  %37 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 11, 8), float64] */, dtype="int8") /* ty=Tensor[(2, 11, 8), int8] */;
  %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%37, dtype="int8") /* ty=Tensor[(2, 11, 8), int8] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %42 = cast(%var_2337, dtype="int64") /* ty=int64 */;
  %43 = cast(meta[relay.Constant][4] /* ty=Tensor[(240), int64] */, dtype="int64") /* ty=Tensor[(240), int64] */;
  %44 = cast(%var_2339, dtype="float32") /* ty=Tensor[(16), float32] */;
  %45 = cast(%var_2340, dtype="uint16") /* ty=Tensor[(1, 1365), uint16] */;
  %46 = cast(meta[relay.Constant][5] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %47 = reshape(%42, newshape=[]) /* ty=int64 */;
  %48 = reshape(%43, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), int64] */;
  %49 = reshape(%44, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %50 = reshape(%45, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), uint16] */;
  %51 = reshape(%46, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %52 = @func_2124(%47, %48, %49, %50, %51) /* ty=(Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %53 = cast(meta[relay.Constant][5] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %54 = right_shift(%40, %41) /* ty=Tensor[(2, 11, 8), int8] */;
  %55 = %52.1;
  %56 = cosh(%53) /* ty=Tensor[(1920), float64] */;
  (%54, %55, %var_2337, meta[relay.Constant][4] /* ty=Tensor[(240), int64] */, %var_2339, %var_2340, %56)
}

def @func_5764() -> (Tensor[(2, 960), float64],) {
  %57 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
  %58 = %57.2;
  (%58,)
}

def @func_3603() -> (Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64]) {
  %59 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
  %60 = %59.2;
  %61 = cast(%60, dtype="float32") /* ty=Tensor[(2, 960), float32] */;
  %62 = @func_3376() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %63 = exp(%61) /* ty=Tensor[(2, 960), float32] */;
  %64 = %62.0;
  (%63, %64)
}

def @func_6963(%var_6911: Tensor[(1920), float64], %var_6912: Tensor[(704), float64], %var_6946: Tensor[(200), uint32]) -> (Tensor[(5, 7, 13), int64], Tensor[(16), float32], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(11, 4, 16), uint8], Tensor[(2, 11, 8), float64], Tensor[(200), bool]) {
  %65 = @func_4883() /* ty=(Tensor[(5, 7, 13), int64],) */;
  %66 = cast(meta[relay.Constant][7] /* ty=Tensor[(200), uint32] */, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %67 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 1800), float32] */, dtype="float32") /* ty=Tensor[(2, 1800), float32] */;
  %68 = cast(meta[relay.Constant][9] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %69 = cast(%var_6911, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %70 = reshape(%66, newshape=[4, 5, 10]) /* ty=Tensor[(4, 5, 10), uint32] */;
  %71 = reshape(%67, newshape=[3600]) /* ty=Tensor[(3600), float32] */;
  %72 = reshape(%68, newshape=[455, 3]) /* ty=Tensor[(455, 3), uint16] */;
  %73 = reshape(%69, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %74 = @func_3738(%70, %71, %72, %73) /* ty=(Tensor[(4, 5, 10), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(455, 3), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(4, 5, 10), int32]) */;
  %75 = cast(meta[relay.Constant][6] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %76 = cast(%var_6911, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %77 = cast(%var_6912, dtype="float64") /* ty=Tensor[(704), float64] */;
  %78 = reshape(%75, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %79 = reshape(%76, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %80 = reshape(%77, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), float64] */;
  %81 = @func_1410(%78, %79, %80) /* ty=(Tensor[(11, 4, 16), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(7, 195), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), float64], Tensor[(11, 4, 16), bool]) */;
  %82 = %81.6;
  %83 = cast(%var_6912, dtype="uint8") /* ty=Tensor[(704), uint8] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="uint8") /* ty=Tensor[(11, 4, 16), uint8] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %87 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %88 = cast(%var_6946, dtype="bool") /* ty=Tensor[(200), bool] */;
  %89 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(200), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %90 = cast(meta[relay.Constant][7] /* ty=Tensor[(200), uint32] */, dtype="bool") /* ty=Tensor[(200), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?), bool] */;
  %92 = %65.0;
  %93 = %74.1;
  %94 = bitwise_or(%85, %86) /* ty=Tensor[(11, 4, 16), uint8] */;
  %95 = %87.0;
  %96 = greater(%90, %91) /* ty=Tensor[(200), bool] */;
  (%92, meta[relay.Constant][6] /* ty=Tensor[(16), float32] */, %var_6911, %93, meta[relay.Constant][8] /* ty=Tensor[(2, 1800), float32] */, meta[relay.Constant][9] /* ty=Tensor[(1365), uint16] */, %94, %95, %96)
}

def @func_6204() -> (Tensor[(2, 11, 8), float64], Tensor[(16), uint16], Tensor[(16, 15, 1), float32], Tensor[(1920), float64], int64, Tensor[(540), float64], Tensor[(16, 15, 180), bool]) {
  %97 = cast(meta[relay.Constant][10] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %98 = reshape(%97, newshape=[16]) /* ty=Tensor[(16), uint16] */;
  %99 = @func_4933(%98) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(16, 15, 1), uint16], Tensor[(16), uint16], Tensor[(240), uint16], Tensor[(864), uint16]) */;
  %100 = %99.2;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(16, 15, 1), float32] */;
  %102 = sigmoid(%101) /* ty=Tensor[(16, 15, 1), float32] */;
  %103 = cast(%102, dtype="float32") /* ty=Tensor[(16, 15, 1), float32] */;
  %104 = cast(meta[relay.Constant][11] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %105 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %106 = cast(meta[relay.Constant][12] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %107 = reshape(%104, newshape=[90, 2]) /* ty=Tensor[(90, 2), float64] */;
  %108 = reshape(%105, newshape=[]) /* ty=int64 */;
  %109 = reshape(%106, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %110 = @func_3149(%107, %108, %109) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(90, 2), float64], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(1920), float64], int64, Tensor[(2, 8), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(3, 180), float64], Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8]) */;
  %111 = cast(%102, dtype="bool") /* ty=Tensor[(16, 15, 1), bool] */;
  %112 = cast(meta[relay.Constant][11] /* ty=Tensor[(180), float64] */, dtype="bool") /* ty=Tensor[(180), bool] */;
  %113 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %114 = erf(%103) /* ty=Tensor[(16, 15, 1), float32] */;
  %115 = %110.6;
  %116 = less_equal(%111, %112) /* ty=Tensor[(16, 15, 180), bool] */;
  (%113, meta[relay.Constant][10] /* ty=Tensor[(16), uint16] */, %114, %115, 7 /* ty=int64 */, meta[relay.Constant][12] /* ty=Tensor[(540), float64] */, %116)
}

def @func_4179(%var_4176: Tensor[(208), float64], %var_4177: Tensor[(1365), uint16]) -> (Tensor[(2, 11, 8), float64], Tensor[(91, 15), uint16], Tensor[(4, 4), float64], Tensor[(208), float64], Tensor[(1365), uint16]) {
  %117 = @func_3603() /* ty=(Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64]) */;
  %118 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 4), float64] */;
  %119 = cast(%var_4176, dtype="float64") /* ty=Tensor[(208), float64] */;
  %120 = cast(%var_4177, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %121 = reshape(%118, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float64] */;
  %122 = reshape(%119, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
  %123 = reshape(%120, newshape=[91, 15]) /* ty=Tensor[(91, 15), uint16] */;
  %124 = @func_2293(%121, %122, %123) /* ty=(Tensor[(2, 13, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(4, 480), float64]) */;
  %125 = %117.1;
  %126 = %124.3;
  (%125, %126, meta[relay.Constant][13] /* ty=Tensor[(4, 4), float64] */, %var_4176, %var_4177)
}

def @func_3804(%var_3797: Tensor[(3600), float32], %var_3799: Tensor[(480, 4), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(455, 3), uint16], Tensor[(480, 4), float64]) {
  %127 = @func_2698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %128 = cast(%var_3797, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %129 = cast(meta[relay.Constant][14] /* ty=Tensor[(455, 3), uint16] */, dtype="uint16") /* ty=Tensor[(455, 3), uint16] */;
  %130 = cast(%var_3799, dtype="float64") /* ty=Tensor[(480, 4), float64] */;
  %131 = reshape(%128, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
  %132 = reshape(%129, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %133 = reshape(%130, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %134 = @func_2049(%131, %132, %133) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %135 = %127.0;
  %136 = %134.5;
  (%135, %136, %var_3797, meta[relay.Constant][14] /* ty=Tensor[(455, 3), uint16] */, %var_3799)
}

def @func_6674() -> Tensor[(2, 11, 8), float64] {
  @func_2853() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_5679() -> Tensor[(2, 11, 8), uint32] {
  %137 = @func_5280() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), uint32]) */;
  %137.1
}

def @func_1321(%var_1291: Tensor[(8, 1, 2), float32], %var_1302: Tensor[(1365), uint16], %var_1304: Tensor[(1920), float64]) -> (Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) {
  %138 = cast(%var_1291, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
  %139 = cast(%var_1302, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %140 = cast(%var_1302, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %141 = cast(meta[relay.Constant][15] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %142 = cast(%var_1304, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %143 = reshape(%139, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint16] */;
  %144 = reshape(%140, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint16] */;
  %145 = reshape(%141, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %146 = reshape(%142, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %147 = @func_991(%143, %144, %145, %146) /* ty=(Tensor[(7, 13, 15), float32], Tensor[(9, 4, 15), float64], Tensor[(7, 13, 15), float32], Tensor[(4, 3, 7), float64], Tensor[(1920), float64], Tensor[(2160), uint8], Tensor[(15, 16, 9), bool], Tensor[(4, 3, 7), uint8], Tensor[(540), float32]) */;
  %148 = cast(%var_1291, dtype="float64") /* ty=Tensor[(8, 1, 2), float64] */;
  %149 = acosh(%148) /* ty=Tensor[(8, 1, 2), float64] */;
  %150 = cast(%149, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
  %151 = cast(%var_1291, dtype="float64") /* ty=Tensor[(8, 1, 2), float64] */;
  %152 = asinh(%151) /* ty=Tensor[(8, 1, 2), float64] */;
  %153 = cast(%152, dtype="float64") /* ty=Tensor[(8, 1, 2), float64] */;
  %154 = sigmoid(%138) /* ty=Tensor[(8, 1, 2), float32] */;
  %155 = %147.0;
  %156 = cos(%150) /* ty=Tensor[(8, 1, 2), float32] */;
  %157 = tan(%153) /* ty=Tensor[(8, 1, 2), float64] */;
  (%154, %155, %var_1302, meta[relay.Constant][15] /* ty=Tensor[(540), float64] */, %var_1304, %156, %157)
}

def @func_432(%var_424: Tensor[(2160), uint8], %var_425: Tensor[(84), uint8]) -> (Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) {
  %158 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 2, 5), float32] */;
  %159 = cast(%var_424, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %160 = cast(%var_425, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %161 = reshape(%159, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
  %162 = reshape(%160, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
  %163 = @func_90(%161, %162) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
  %164 = log(%158) /* ty=Tensor[(14, 2, 5), float32] */;
  %165 = %163.0;
  (%164, %165, %var_424, %var_425)
}

def @func_4933(%var_4902: Tensor[(16), uint16]) -> (Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(16, 15, 1), uint16], Tensor[(16), uint16], Tensor[(240), uint16], Tensor[(864), uint16]) {
  %166 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
  %167 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
  %168 = cast(%var_4902, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %169 = cast(meta[relay.Constant][17] /* ty=Tensor[(240), uint16] */, dtype="uint16") /* ty=Tensor[(240), uint16] */;
  %170 = cast(meta[relay.Constant][18] /* ty=Tensor[(864), uint16] */, dtype="uint16") /* ty=Tensor[(864), uint16] */;
  %171 = reshape(%168, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), uint16] */;
  %172 = reshape(%169, newshape=[16, 15, 1]) /* ty=Tensor[(16, 15, 1), uint16] */;
  %173 = reshape(%170, newshape=[16, 6, 9]) /* ty=Tensor[(16, 6, 9), uint16] */;
  %174 = @func_2578(%171, %172, %173) /* ty=(Tensor[(16, 15, 1), uint16], Tensor[(16, 6, 9), uint32]) */;
  %175 = %166.0;
  %176 = %167.3;
  %177 = %174.0;
  (%175, %176, %177, %var_4902, meta[relay.Constant][17] /* ty=Tensor[(240), uint16] */, meta[relay.Constant][18] /* ty=Tensor[(864), uint16] */)
}

def @func_5125() -> Tensor[(2, 11, 8), float64] {
  %178 = @func_4092() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) */;
  %178.1
}

def @func_3227(%var_3184: Tensor[(2160), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(14, 2, 5), float32], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(2, 11, 8), int8]) {
  %179 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %180 = cast(%var_3184, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %181 = cast(meta[relay.Constant][19] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %182 = reshape(%180, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %183 = reshape(%181, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %184 = @func_432(%182, %183) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
  %185 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %186 = %185.0;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %188 = log(%187) /* ty=Tensor[(2, 11, 8), float32] */;
  %189 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %190 = cast(%189, dtype="int8") /* ty=Tensor[(2, 11, 8), int8] */;
  %191 = shape_of(%188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%188, dtype="int8") /* ty=Tensor[(2, 11, 8), int8] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %194 = %179.0;
  %195 = %184.0;
  %196 = left_shift(%192, %193) /* ty=Tensor[(2, 11, 8), int8] */;
  (%194, %195, %var_3184, meta[relay.Constant][19] /* ty=Tensor[(84), uint8] */, %196)
}

def @func_1781() -> Tensor[(2, 11, 8), float64] {
  @func_1760() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_4009() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) {
  %197 = @func_3030() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %198 = @func_2649() /* ty=(Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %199 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %200 = %197.0;
  %201 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %202 = %198.3;
  (%199, %200, %201, %202)
}

def @func_1969() -> (Tensor[(2, 11, 8), float64],) {
  %203 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  (%203,)
}

def @func_4120() -> Tensor[(2, 11, 8), float64] {
  %204 = @func_2698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %204.0
}

def @func_5556() -> Tensor[(2, 11, 8), float64] {
  %205 = @func_4092() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) */;
  %205.1
}

def @func_1410(%var_1387: Tensor[(16), float32], %var_1389: Tensor[(1920), float64], %var_1402: Tensor[(11, 4, 16), float64]) -> (Tensor[(11, 4, 16), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(7, 195), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), float64], Tensor[(11, 4, 16), bool]) {
  %206 = cast(6.87204f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %207 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
  %208 = cast(%var_1387, dtype="float32") /* ty=Tensor[(16), float32] */;
  %209 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 195), uint16] */, dtype="uint16") /* ty=Tensor[(7, 195), uint16] */;
  %210 = cast(%var_1389, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %211 = reshape(%208, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
  %212 = reshape(%209, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %213 = reshape(%210, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %214 = @func_1321(%211, %212, %213) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
  %215 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
  %216 = acos(%215) /* ty=Tensor[(11, 4, 16), float64] */;
  %217 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
  %218 = shape_of(%216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%216, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %221 = cast(%var_1402, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
  %222 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(11, 4, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 4, 16), float64] */, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %225 = power(%206, %207) /* ty=Tensor[(11, 4, 16), float64] */;
  %226 = %214.4;
  %227 = floor_divide(%219, %220) /* ty=Tensor[(11, 4, 16), float64] */;
  %228 = equal(%223, %224) /* ty=Tensor[(11, 4, 16), bool] */;
  (%225, %226, %var_1387, meta[relay.Constant][21] /* ty=Tensor[(7, 195), uint16] */, %var_1389, %227, %228)
}

def @func_4797() -> Tensor[(2, 11, 8), float64] {
  %229 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %229.0
}

def @func_7055(%var_7011: Tensor[(1872), float64]) -> (Tensor[(13, 16, 9), float64], Tensor[(1872), float64], Tensor[(2, 11, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %230 = cast(%var_7011, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %231 = reshape(%230, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %232 = @func_5136() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %233 = %232.0;
  %234 = @func_5125() /* ty=Tensor[(2, 11, 8), float64] */;
  %235 = cast(%234, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
  %236 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%233, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %239 = @func_3030() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %240 = @func_2841() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %241 = @func_6785(%231) /* ty=Tensor[(13, 16, 9), float64] */;
  %242 = not_equal(%237, %238) /* ty=Tensor[(2, 11, 8), bool] */;
  %243 = %239.0;
  %244 = %240.1;
  (%241, %var_7011, %242, %243, %244)
}

def @func_4447(%var_4396: Tensor[(12, 7, 14), float32]) -> Tensor[(12, 7, 14), bool] {
  %245 = cast(%var_4396, dtype="float32") /* ty=Tensor[(12, 7, 14), float32] */;
  %246 = acos(%245) /* ty=Tensor[(12, 7, 14), float32] */;
  %247 = cast(%246, dtype="int64") /* ty=Tensor[(12, 7, 14), int64] */;
  %248 = shape_of(%var_4396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%var_4396, dtype="int64") /* ty=Tensor[(12, 7, 14), int64] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %251 = subtract(%249, %250) /* ty=Tensor[(12, 7, 14), int64] */;
  %252 = cast(%251, dtype="bool") /* ty=Tensor[(12, 7, 14), bool] */;
  %253 = shape_of(%246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%246, dtype="bool") /* ty=Tensor[(12, 7, 14), bool] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%254, %255) /* ty=Tensor[(12, 7, 14), bool] */
}

def @main(%var_7116: Tensor[(4, 11, 10), float32]) -> Tensor[(4, 11, 10), float32] {
  %256 = cast(%var_7116, dtype="float32") /* ty=Tensor[(4, 11, 10), float32] */;
  log(%256) /* ty=Tensor[(4, 11, 10), float32] */
}

def @func_6288(%var_6280: Tensor[(72), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32]) {
  %257 = cast(%var_6280, dtype="float32") /* ty=Tensor[(72), float32] */;
  %258 = reshape(%257, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %259 = @func_5003(%258) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(540), float64]) */;
  %260 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %261 = %259.3;
  (%260, %261, %var_6280)
}

def @func_2841() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %262 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %263 = %262.0;
  %264 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  (%263, %264)
}

def @func_2796(%var_2776: Tensor[(2160), uint8], %var_2777: Tensor[(42, 2), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(42, 2), uint8]) {
  %265 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %266 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
  %267 = cast(%266, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %268 = cast(meta[relay.Constant][22] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %269 = cast(%var_2776, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %270 = cast(%var_2777, dtype="uint8") /* ty=Tensor[(42, 2), uint8] */;
  %271 = cast(meta[relay.Constant][22] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %272 = reshape(%268, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
  %273 = reshape(%269, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %274 = reshape(%270, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %275 = reshape(%271, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
  %276 = @func_1899(%272, %273, %274, %275) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) */;
  %277 = %265.0;
  %278 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %279 = atanh(%267) /* ty=Tensor[(2, 11, 8), float64] */;
  %280 = %276.1;
  (%277, %278, %279, %280, meta[relay.Constant][22] /* ty=Tensor[(180), float64] */, %var_2776, %var_2777)
}

def @func_2649() -> (Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) {
  %281 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 7, 13), int16] */, dtype="bool") /* ty=Tensor[(5, 7, 13), bool] */;
  %282 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 13), int16] */, dtype="bool") /* ty=Tensor[(5, 7, 13), bool] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %285 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %286 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %287 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 13), int16] */, dtype="int64") /* ty=Tensor[(5, 7, 13), int64] */;
  %288 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(5, 7, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 7, 13), int16] */, dtype="int64") /* ty=Tensor[(5, 7, 13), int64] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %291 = not_equal(%283, %284) /* ty=Tensor[(5, 7, 13), bool] */;
  %292 = %285.0;
  %293 = %286.0;
  %294 = add(%289, %290) /* ty=Tensor[(5, 7, 13), int64] */;
  (%291, %292, %293, %294)
}

def @func_5740() -> Tensor[(2, 11, 8), float64] {
  %295 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %295.0
}

def @func_6367() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %296 = @func_6048() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %297 = @func_5740() /* ty=Tensor[(2, 11, 8), float64] */;
  %298 = %296.0;
  (%297, %298)
}

def @func_3283() -> Tensor[(2, 11, 8), float64] {
  @func_2853() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_5529() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %299 = @func_5314() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %300 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %301 = %299.0;
  %302 = %300.0;
  (%301, %302)
}

def @func_2256(%var_2230: Tensor[(540), float64], %var_2231: Tensor[(1920), float64], %var_2245: Tensor[(84), uint8], %var_2248: Tensor[(2, 11, 8), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(60, 36), uint8], Tensor[(2160), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(2, 11, 8), bool]) {
  %303 = cast(meta[relay.Constant][25] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %304 = cast(meta[relay.Constant][25] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %305 = cast(%var_2230, dtype="float64") /* ty=Tensor[(540), float64] */;
  %306 = cast(%var_2231, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %307 = reshape(%303, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint16] */;
  %308 = reshape(%304, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint16] */;
  %309 = reshape(%305, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %310 = reshape(%306, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %311 = @func_991(%307, %308, %309, %310) /* ty=(Tensor[(7, 13, 15), float32], Tensor[(9, 4, 15), float64], Tensor[(7, 13, 15), float32], Tensor[(4, 3, 7), float64], Tensor[(1920), float64], Tensor[(2160), uint8], Tensor[(15, 16, 9), bool], Tensor[(4, 3, 7), uint8], Tensor[(540), float32]) */;
  %312 = %311.0;
  %313 = cast(%312, dtype="uint16") /* ty=Tensor[(7, 13, 15), uint16] */;
  %314 = cast(%var_2231, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %315 = cast(meta[relay.Constant][26] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %316 = reshape(%313, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %317 = reshape(%314, newshape=[96, 20]) /* ty=Tensor[(96, 20), float64] */;
  %318 = reshape(%315, newshape=[60, 36]) /* ty=Tensor[(60, 36), uint8] */;
  %319 = @func_1641(%316, %317, %318) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(96, 20), float64], Tensor[(2160), uint8], Tensor[(60, 36), uint8], Tensor[(84), uint8], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) */;
  %320 = cast(meta[relay.Constant][26] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %321 = cast(%var_2245, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %322 = reshape(%320, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %323 = reshape(%321, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %324 = @func_432(%322, %323) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
  %325 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
  %326 = cast(%var_2248, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %330 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %331 = %319.6;
  %332 = %324.2;
  %333 = logical_and(%328, %329) /* ty=Tensor[(2, 11, 8), bool] */;
  (%330, %312, meta[relay.Constant][25] /* ty=Tensor[(1365), uint16] */, %var_2230, %var_2231, %331, meta[relay.Constant][26] /* ty=Tensor[(2160), uint8] */, %332, %var_2245, %333)
}

def @func_5190(%var_5153: Tensor[(1, 1920), float64], %var_5161: Tensor[(1, 72), float32], %var_5162: Tensor[(540), float64], %var_5163: Tensor[(3600), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(1365, 1), uint16], Tensor[(240), int64], Tensor[(4, 4), float32], Tensor[(1365), uint16], Tensor[(1, 1920), bool], Tensor[(6, 3, 4), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1, 72), float32], Tensor[(1, 1920), float32]) {
  %334 = @func_3030() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %335 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %336 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), int64] */, dtype="int64") /* ty=Tensor[(240), int64] */;
  %337 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 4), float32] */;
  %338 = cast(meta[relay.Constant][29] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %339 = cast(%var_5153, dtype="float64") /* ty=Tensor[(1, 1920), float64] */;
  %340 = reshape(%335, newshape=[]) /* ty=int64 */;
  %341 = reshape(%336, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), int64] */;
  %342 = reshape(%337, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %343 = reshape(%338, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), uint16] */;
  %344 = reshape(%339, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %345 = @func_2124(%340, %341, %342, %343, %344) /* ty=(Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %346 = cast(%var_5153, dtype="bool") /* ty=Tensor[(1, 1920), bool] */;
  %347 = cast(-4 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %348 = cast(%var_5161, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %349 = cast(%var_5162, dtype="float64") /* ty=Tensor[(540), float64] */;
  %350 = cast(%var_5163, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %351 = cast(meta[relay.Constant][29] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %352 = reshape(%348, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %353 = reshape(%349, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %354 = reshape(%350, newshape=[2, 1800]) /* ty=Tensor[(2, 1800), float32] */;
  %355 = reshape(%351, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %356 = @func_3902(%352, %353, %354, %355) /* ty=(Tensor[(6, 3, 4), float32], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(6, 3, 4), float32], Tensor[(1365), uint16], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32]) */;
  %357 = cast(%var_5161, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %358 = cast(%var_5153, dtype="float32") /* ty=Tensor[(1, 1920), float32] */;
  %359 = cast(-4 /* ty=int64 */, dtype="float32") /* ty=float32 */;
  %360 = %334.1;
  %361 = %345.3;
  %362 = greater(%346, %347) /* ty=Tensor[(1, 1920), bool] */;
  %363 = %356.0;
  %364 = sinh(%357) /* ty=Tensor[(1, 72), float32] */;
  %365 = divide(%358, %359) /* ty=Tensor[(1, 1920), float32] */;
  (%360, %361, meta[relay.Constant][27] /* ty=Tensor[(240), int64] */, meta[relay.Constant][28] /* ty=Tensor[(4, 4), float32] */, meta[relay.Constant][29] /* ty=Tensor[(1365), uint16] */, %362, %363, %var_5162, %var_5163, %364, %365)
}

def @func_5731(%var_5712: Tensor[(13, 2, 4), float64]) -> (Tensor[(13, 2, 4), float64], Tensor[(2, 11, 8), float64]) {
  %366 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 4), float64] */;
  %367 = cast(%var_5712, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  %368 = floor_divide(%366, %367) /* ty=Tensor[(13, 2, 4), float64] */;
  %369 = @func_4120() /* ty=Tensor[(2, 11, 8), float64] */;
  (%368, %369)
}

def @func_940(%var_933: Tensor[(9, 4, 15), float64]) -> (Tensor[(9, 4, 15), float64],) {
  %370 = cast(%var_933, dtype="float64") /* ty=Tensor[(9, 4, 15), float64] */;
  %371 = exp(%370) /* ty=Tensor[(9, 4, 15), float64] */;
  (%371,)
}

def @func_6048() -> (Tensor[(2, 11, 8), float64],) {
  %372 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %373 = %372.0;
  (%373,)
}

def @func_2196(%var_2175: Tensor[(540), float64]) -> (Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(2, 11, 8), float32]) {
  %374 = cast(%var_2175, dtype="float64") /* ty=Tensor[(540), float64] */;
  %375 = reshape(%374, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
  %376 = @func_940(%375) /* ty=(Tensor[(9, 4, 15), float64],) */;
  %377 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
  %378 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 11, 8), float64] */, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %379 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%377, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %382 = %376.0;
  %383 = power(%380, %381) /* ty=Tensor[(2, 11, 8), float32] */;
  (%382, %var_2175, %383)
}

def @func_1796() -> (Tensor[(2, 11, 8), float64],) {
  %384 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
  (%384,)
}

def @func_1572() -> Tensor[(2, 11, 8), float64] {
  %385 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  exp(%385) /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_2049(%var_1971: Tensor[(15, 16, 15), float32], %var_2025: Tensor[(1365), uint16], %var_2026: Tensor[(1920), float64]) -> (Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %386 = cast(%var_1971, dtype="float32") /* ty=Tensor[(15, 16, 15), float32] */;
  %387 = acosh(%386) /* ty=Tensor[(15, 16, 15), float32] */;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(15, 16, 15), float64] */;
  %389 = cast(meta[relay.Constant][33] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %390 = cast(%var_2025, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %391 = cast(%var_2026, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %392 = reshape(%389, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
  %393 = reshape(%390, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %394 = reshape(%391, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %395 = @func_1321(%392, %393, %394) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
  %396 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %397 = erf(%388) /* ty=Tensor[(15, 16, 15), float64] */;
  %398 = %395.2;
  %399 = %396.0;
  %400 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
  (%397, %398, meta[relay.Constant][33] /* ty=Tensor[(16), float32] */, %var_2025, %var_2026, %399, %400)
}

def @func_2743() -> (Tensor[(2, 11, 8), float64],) {
  %401 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %402 = %401.0;
  (%402,)
}

def @func_4157(%var_4148: Tensor[(180, 1), float64], %var_4149: Tensor[(2160), uint8], %var_4150: Tensor[(84), uint8]) -> (Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180, 1), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) {
  %403 = @func_3603() /* ty=(Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64]) */;
  %404 = cast(%var_4148, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %405 = cast(%var_4149, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %406 = cast(%var_4150, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %407 = cast(%var_4148, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %408 = reshape(%404, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
  %409 = reshape(%405, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %410 = reshape(%406, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %411 = reshape(%407, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
  %412 = @func_1899(%408, %409, %410, %411) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) */;
  %413 = %403.0;
  %414 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %415 = %412.6;
  (%413, %414, %415, %var_4148, %var_4149, %var_4150)
}

def @func_1899(%var_1835: Tensor[(10, 9, 2), float64], %var_1844: Tensor[(2160), uint8], %var_1845: Tensor[(84), uint8], %var_1847: Tensor[(10, 9, 2), float64]) -> (Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) {
  %416 = cast(%var_1844, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %417 = cast(%var_1845, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %418 = reshape(%416, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %419 = reshape(%417, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %420 = @func_432(%418, %419) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
  %421 = cast(%var_1835, dtype="float64") /* ty=Tensor[(10, 9, 2), float64] */;
  %422 = erf(%421) /* ty=Tensor[(10, 9, 2), float64] */;
  %423 = cast(%var_1847, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
  %424 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(%422, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %427 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %428 = cast(%422, dtype="float32") /* ty=Tensor[(10, 9, 2), float32] */;
  %429 = cast(%422, dtype="float64") /* ty=Tensor[(10, 9, 2), float64] */;
  %430 = atan(%429) /* ty=Tensor[(10, 9, 2), float64] */;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(10, 9, 2), float32] */;
  %432 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %433 = %420.1;
  %434 = logical_or(%425, %426) /* ty=Tensor[(10, 9, 2), bool] */;
  %435 = %427.0;
  %436 = asinh(%428) /* ty=Tensor[(10, 9, 2), float32] */;
  %437 = log(%431) /* ty=Tensor[(10, 9, 2), float32] */;
  %438 = %432.0;
  (%433, %var_1844, %var_1845, %434, %435, %436, %437, %438)
}

def @func_3376() -> (Tensor[(2, 11, 8), float64],) {
  %439 = @func_3030() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %440 = %439.0;
  (%440,)
}

def @func_5280() -> (Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), uint32]) {
  %441 = @func_3923() /* ty=Tensor[(2, 11, 8), float32] */;
  %442 = cast(%441, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %443 = reshape(%442, newshape=[2, 11, 8]) /* ty=Tensor[(2, 11, 8), float32] */;
  %444 = @func_4576(%443) /* ty=(Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float32]) */;
  %445 = %444.0;
  (%441, %445)
}

def @func_2124(%var_2057: int64, %var_2058: Tensor[(5, 16, 3), int64], %var_2087: Tensor[(16), float32], %var_2088: Tensor[(1365, 1), uint16], %var_2106: Tensor[(1920), float64]) -> (Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %446 = cast(%var_2057, dtype="int64") /* ty=int64 */;
  %447 = cast(%var_2058, dtype="int64") /* ty=Tensor[(5, 16, 3), int64] */;
  %448 = cast(%var_2087, dtype="float32") /* ty=Tensor[(16), float32] */;
  %449 = cast(%var_2088, dtype="uint16") /* ty=Tensor[(1365, 1), uint16] */;
  %450 = cast(meta[relay.Constant][34] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %451 = reshape(%448, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
  %452 = reshape(%449, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %453 = reshape(%450, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %454 = @func_1321(%451, %452, %453) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
  %455 = cast(%var_2106, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %456 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(1920), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %457 = cast(meta[relay.Constant][34] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?), float64] */;
  %459 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %460 = cast(%459, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %461 = log2(%460) /* ty=Tensor[(2, 11, 8), float64] */;
  %462 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 11, 8), float64] */, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
  %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%461, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = greater(%464, %465) /* ty=Tensor[(2, 11, 8), bool] */;
  %467 = cast(%466, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %468 = erf(%467) /* ty=Tensor[(2, 11, 8), float64] */;
  %469 = cast(%459, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %470 = shape_of(%468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%468, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %473 = left_shift(%446, %447) /* ty=Tensor[(5, 16, 3), int64] */;
  %474 = %454.4;
  %475 = divide(%457, %458) /* ty=Tensor[(1920), float64] */;
  %476 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
  %477 = mod(%471, %472) /* ty=Tensor[(2, 11, 8), float64] */;
  (%473, %474, %var_2087, %var_2088, %475, %476, %477)
}

def @func_5003(%var_5000: Tensor[(72), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(540), float64]) {
  %478 = @func_3376() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %479 = cast(%var_5000, dtype="float32") /* ty=Tensor[(72), float32] */;
  %480 = cast(meta[relay.Constant][36] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %481 = reshape(%479, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %482 = reshape(%480, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %483 = @func_4285(%481, %482) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1365), uint16]) */;
  %484 = %478.0;
  %485 = %483.3;
  (%484, %485, %var_5000, meta[relay.Constant][36] /* ty=Tensor[(540), float64] */)
}

def @func_6569(%var_6542: Tensor[(3, 10, 1), float64]) -> (Tensor[(3, 10, 1), float64], Tensor[(2, 11, 8), float64]) {
  %486 = cast(%var_6542, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
  %487 = @func_2719() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %488 = acos(%486) /* ty=Tensor[(3, 10, 1), float64] */;
  %489 = %487.1;
  (%488, %489)
}

def @func_5078(%var_5062: Tensor[(21, 4), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float32], Tensor[(12, 7, 14), bool], Tensor[(6, 196), float32], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(21, 4), uint8]) {
  %490 = @func_1693() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %491 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 196), float32] */, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
  %492 = reshape(%491, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
  %493 = cast(meta[relay.Constant][38] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %494 = cast(%var_5062, dtype="uint8") /* ty=Tensor[(21, 4), uint8] */;
  %495 = reshape(%493, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %496 = reshape(%494, newshape=[42, 2]) /* ty=Tensor[(42, 2), uint8] */;
  %497 = @func_2796(%495, %496) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(42, 2), uint8]) */;
  %498 = %490.0;
  %499 = @func_3923() /* ty=Tensor[(2, 11, 8), float32] */;
  %500 = @func_4447(%492) /* ty=Tensor[(12, 7, 14), bool] */;
  %501 = %497.2;
  (%498, %499, %500, meta[relay.Constant][37] /* ty=Tensor[(6, 196), float32] */, %501, meta[relay.Constant][38] /* ty=Tensor[(2160), uint8] */, %var_5062)
}

def @func_2476(%var_2459: Tensor[(2, 11, 8), float64]) -> (Tensor[(2, 11, 8), int16], Tensor[(2, 11, 8), float32]) {
  %502 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %503 = %502.0;
  %504 = cast(%var_2459, dtype="int16") /* ty=Tensor[(2, 11, 8), int16] */;
  %505 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%503, dtype="int16") /* ty=Tensor[(2, 11, 8), int16] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %508 = cast(%var_2459, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %509 = logical_xor(%506, %507) /* ty=Tensor[(2, 11, 8), int16] */;
  %510 = acosh(%508) /* ty=Tensor[(2, 11, 8), float32] */;
  (%509, %510)
}

def @func_1693() -> (Tensor[(2, 11, 8), float64],) {
  %511 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %512 = cast(%511, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %513 = asinh(%512) /* ty=Tensor[(2, 11, 8), float64] */;
  (%513,)
}

def @func_2853() -> Tensor[(2, 11, 8), float64] {
  %514 = @func_2444() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %514.0
}

def @func_4285(%var_4280: Tensor[(72), float32], %var_4281: Tensor[(540), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1365), uint16]) {
  %515 = @func_4092() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) */;
  %516 = cast(%var_4280, dtype="float32") /* ty=Tensor[(72), float32] */;
  %517 = cast(%var_4281, dtype="float64") /* ty=Tensor[(540), float64] */;
  %518 = cast(meta[relay.Constant][39] /* ty=Tensor[(3600), float32] */, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %519 = cast(meta[relay.Constant][40] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %520 = reshape(%516, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %521 = reshape(%517, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %522 = reshape(%518, newshape=[2, 1800]) /* ty=Tensor[(2, 1800), float32] */;
  %523 = reshape(%519, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %524 = @func_3902(%520, %521, %522, %523) /* ty=(Tensor[(6, 3, 4), float32], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(6, 3, 4), float32], Tensor[(1365), uint16], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32]) */;
  %525 = %515.1;
  %526 = %524.11;
  (%525, %526, %var_4280, %var_4281, meta[relay.Constant][39] /* ty=Tensor[(3600), float32] */, meta[relay.Constant][40] /* ty=Tensor[(1365), uint16] */)
}

def @func_3738(%var_3682: Tensor[(4, 5, 10), uint32], %var_3695: Tensor[(3600), float32], %var_3696: Tensor[(455, 3), uint16], %var_3697: Tensor[(1920), float64]) -> (Tensor[(4, 5, 10), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(455, 3), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(4, 5, 10), int32]) {
  %527 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 5, 1), uint32] */, dtype="uint32") /* ty=Tensor[(4, 5, 1), uint32] */;
  %528 = cast(%var_3682, dtype="uint32") /* ty=Tensor[(4, 5, 10), uint32] */;
  %529 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %530 = cast(%var_3695, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %531 = cast(%var_3696, dtype="uint16") /* ty=Tensor[(455, 3), uint16] */;
  %532 = cast(%var_3697, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %533 = reshape(%530, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
  %534 = reshape(%531, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %535 = reshape(%532, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %536 = @func_2049(%533, %534, %535) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %537 = %529.0;
  %538 = cast(%537, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %539 = reshape(%538, newshape=[2, 11, 8]) /* ty=Tensor[(2, 11, 8), float64] */;
  %540 = @func_3273(%539) /* ty=(Tensor[(2, 11, 8), float64],) */;
  %541 = cast(%var_3695, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %542 = cast(%var_3682, dtype="int32") /* ty=Tensor[(4, 5, 10), int32] */;
  %543 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 5, 1), uint32] */, dtype="int32") /* ty=Tensor[(4, 5, 1), int32] */;
  %544 = bitwise_or(%527, %528) /* ty=Tensor[(4, 5, 10), uint32] */;
  %545 = %536.5;
  %546 = %540.0;
  %547 = atan(%541) /* ty=Tensor[(3600), float32] */;
  %548 = multiply(%542, %543) /* ty=Tensor[(4, 5, 10), int32] */;
  (%544, %537, %545, %var_3696, %var_3697, %546, %547, %548)
}

def @func_5495() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %549 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %550 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
  (%549, %550)
}

def @func_5965(%var_5933: Tensor[(3600), float32], %var_5935: Tensor[(1920), float64], %var_5947: Tensor[(1176), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(3, 28), float32], Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(1920), float64], Tensor[(3, 28), float64], Tensor[(2, 11, 8), float64], Tensor[(1176), float32], Tensor[(1176), float32]) {
  %551 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %552 = cast(meta[relay.Constant][42] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %553 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 28), uint8] */, dtype="uint8") /* ty=Tensor[(3, 28), uint8] */;
  %554 = reshape(%552, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
  %555 = reshape(%553, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
  %556 = @func_90(%554, %555) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
  %557 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 28), uint8] */, dtype="float32") /* ty=Tensor[(3, 28), float32] */;
  %558 = @func_2444() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %559 = cast(%var_5933, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %560 = cast(meta[relay.Constant][44] /* ty=Tensor[(91, 15), uint16] */, dtype="uint16") /* ty=Tensor[(91, 15), uint16] */;
  %561 = cast(%var_5935, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %562 = reshape(%559, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
  %563 = reshape(%560, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %564 = reshape(%561, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %565 = @func_2049(%562, %563, %564) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %566 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 28), uint8] */, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
  %567 = cast(%var_5947, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %568 = reshape(%567, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %569 = @func_4868(%568) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(1176), float32]) */;
  %570 = %551.0;
  %571 = %556.0;
  %572 = sin(%557) /* ty=Tensor[(3, 28), float32] */;
  %573 = @func_5679() /* ty=Tensor[(2, 11, 8), uint32] */;
  %574 = %558.0;
  %575 = %565.5;
  %576 = asinh(%566) /* ty=Tensor[(3, 28), float64] */;
  %577 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %578 = %569.2;
  (%570, %571, meta[relay.Constant][42] /* ty=Tensor[(2160), uint8] */, %572, %573, %574, %575, %var_5933, meta[relay.Constant][44] /* ty=Tensor[(91, 15), uint16] */, %var_5935, %576, %577, %578, %var_5947)
}

def @func_5843(%var_5813: Tensor[(1176), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(1176), bool]) {
  %579 = @func_3376() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %580 = cast(%var_5813, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %581 = reshape(%580, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
  %582 = @func_4868(%581) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(1176), float32]) */;
  %583 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %584 = cast(meta[relay.Constant][45] /* ty=Tensor[(1176), float32] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %585 = shape_of(%var_5813, dtype="int32") /* ty=Tensor[(1), int32] */;
  %586 = cast(%var_5813, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?), bool] */;
  %588 = %579.0;
  %589 = %582.1;
  %590 = @func_4120() /* ty=Tensor[(2, 11, 8), float64] */;
  %591 = %583.0;
  %592 = logical_and(%586, %587) /* ty=Tensor[(1176), bool] */;
  (%588, %589, %590, %591, %592)
}

def @func_4839(%var_4816: Tensor[(1, 12, 10), float64], %var_4836: Tensor[(630), float64]) -> (Tensor[(?, 12, 10), float64], Tensor[(?, 12, 10), float64], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(630), float64]) {
  %593 = cast(%var_4816, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %594 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(1, 12, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %597 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %598 = shape_of(%var_4816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_4816, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %601 = cast(%var_4836, dtype="float64") /* ty=Tensor[(630), float64] */;
  %602 = reshape(%601, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float64] */;
  %603 = @func_3633(%602) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(7, 15, 6), bool], Tensor[(5, 7, 13), bool]) */;
  %604 = power(%595, %596) /* ty=Tensor[(?, 12, 10), float64] */;
  %605 = mod(%599, %600) /* ty=Tensor[(?, 12, 10), float64] */;
  %606 = @func_4120() /* ty=Tensor[(2, 11, 8), float64] */;
  %607 = %603.1;
  (%604, %605, %606, %607, %var_4836)
}

def @func_4485() -> Tensor[(2, 11, 8), float64] {
  %608 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %608.0
}

def @func_5414(%var_5384: Tensor[(2160), uint8], %var_5385: Tensor[(84), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) {
  %609 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %610 = @func_4092() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) */;
  %611 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %612 = cast(meta[relay.Constant][47] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %613 = cast(%var_5384, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %614 = cast(%var_5385, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %615 = reshape(%612, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %616 = reshape(%613, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %617 = reshape(%614, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %618 = @func_4157(%615, %616, %617) /* ty=(Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180, 1), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
  %619 = %609.0;
  %620 = %610.1;
  %621 = %611.0;
  %622 = %618.2;
  (%619, %620, %621, %622, meta[relay.Constant][47] /* ty=Tensor[(180), float64] */, %var_5384, %var_5385)
}

def @func_991(%var_946: Tensor[(7, 13, 15), uint16], %var_947: Tensor[(7, 13, 15), uint16], %var_971: Tensor[(540), float64], %var_977: Tensor[(1920), float64]) -> (Tensor[(7, 13, 15), float32], Tensor[(9, 4, 15), float64], Tensor[(7, 13, 15), float32], Tensor[(4, 3, 7), float64], Tensor[(1920), float64], Tensor[(2160), uint8], Tensor[(15, 16, 9), bool], Tensor[(4, 3, 7), uint8], Tensor[(540), float32]) {
  %623 = cast(%var_947, dtype="uint16") /* ty=Tensor[(7, 13, 15), uint16] */;
  %624 = shape_of(%var_946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%var_946, dtype="uint16") /* ty=Tensor[(7, 13, 15), uint16] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %627 = bitwise_and(%625, %626) /* ty=Tensor[(7, 13, 15), uint16] */;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(7, 13, 15), float32] */;
  %629 = cast(%var_971, dtype="float64") /* ty=Tensor[(540), float64] */;
  %630 = reshape(%629, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
  %631 = @func_940(%630) /* ty=(Tensor[(9, 4, 15), float64],) */;
  %632 = cast(%627, dtype="float32") /* ty=Tensor[(7, 13, 15), float32] */;
  %633 = cast(%var_977, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %634 = cast(meta[relay.Constant][48] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %635 = cast(%var_977, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %636 = cast(%var_977, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
  %637 = reshape(%633, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %638 = reshape(%634, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %639 = reshape(%635, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
  %640 = reshape(%636, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), uint32] */;
  %641 = @func_661(%637, %638, %639, %640) /* ty=(Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(15, 16, 8), uint8], Tensor[(15, 16, 8), bool], Tensor[(4, 3, 7), float64]) */;
  %642 = cast(meta[relay.Constant][48] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %643 = %641.4;
  %644 = cast(%643, dtype="uint8") /* ty=Tensor[(4, 3, 7), uint8] */;
  %645 = reshape(%642, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
  %646 = reshape(%644, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
  %647 = @func_90(%645, %646) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
  %648 = %647.1;
  %649 = cast(%648, dtype="uint8") /* ty=Tensor[(15, 16, 9), uint8] */;
  %650 = cast(%643, dtype="uint8") /* ty=Tensor[(4, 3, 7), uint8] */;
  %651 = reshape(%649, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %652 = reshape(%650, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %653 = @func_432(%651, %652) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
  %654 = cast(%var_971, dtype="float32") /* ty=Tensor[(540), float32] */;
  %655 = log(%628) /* ty=Tensor[(7, 13, 15), float32] */;
  %656 = %631.0;
  %657 = log2(%632) /* ty=Tensor[(7, 13, 15), float32] */;
  %658 = %653.1;
  %659 = erf(%654) /* ty=Tensor[(540), float32] */;
  (%655, %656, %657, %643, %var_977, meta[relay.Constant][48] /* ty=Tensor[(2160), uint8] */, %648, %658, %659)
}

def @func_5314() -> (Tensor[(2, 11, 8), float64],) {
  %660 = @func_5136() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %661 = %660.0;
  (%661,)
}

def @func_6614() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %662 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %663 = @func_2698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %664 = @func_2719() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %665 = %664.0;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %667 = %662.0;
  %668 = %663.0;
  %669 = cos(%666) /* ty=Tensor[(2, 11, 8), float64] */;
  (%667, %668, %669)
}

def @func_90(%var_57: Tensor[(15, 16, 9), uint8], %var_65: Tensor[(4, 3, 7), uint8]) -> (Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) {
  %670 = cast(meta[relay.Constant][49] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %671 = cast(%var_65, dtype="uint8") /* ty=Tensor[(4, 3, 7), uint8] */;
  %672 = cast(meta[relay.Constant][49] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %673 = cast(%var_57, dtype="uint8") /* ty=Tensor[(15, 16, 9), uint8] */;
  %674 = bitwise_xor(%672, %673) /* ty=Tensor[(15, 16, 9), uint8] */;
  %675 = cast(%674, dtype="bool") /* ty=Tensor[(15, 16, 9), bool] */;
  %676 = shape_of(%var_57, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_57, dtype="bool") /* ty=Tensor[(15, 16, 9), bool] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %679 = logical_xor(%670, %671) /* ty=Tensor[(4, 3, 7), uint8] */;
  %680 = logical_and(%677, %678) /* ty=Tensor[(15, 16, 9), bool] */;
  (%679, %680)
}

def @func_4352(%var_4336: Tensor[(200), uint32], %var_4337: Tensor[(3600), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64]) {
  %681 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %682 = cast(%var_4336, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %683 = cast(%var_4337, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %684 = cast(meta[relay.Constant][50] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %685 = cast(meta[relay.Constant][51] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %686 = reshape(%682, newshape=[4, 5, 10]) /* ty=Tensor[(4, 5, 10), uint32] */;
  %687 = reshape(%683, newshape=[3600]) /* ty=Tensor[(3600), float32] */;
  %688 = reshape(%684, newshape=[455, 3]) /* ty=Tensor[(455, 3), uint16] */;
  %689 = reshape(%685, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %690 = @func_3738(%686, %687, %688, %689) /* ty=(Tensor[(4, 5, 10), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(455, 3), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(4, 5, 10), int32]) */;
  %691 = @func_2841() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %692 = %681.0;
  %693 = %690.6;
  %694 = %691.0;
  (%692, %693, %var_4336, %var_4337, meta[relay.Constant][50] /* ty=Tensor[(1365), uint16] */, meta[relay.Constant][51] /* ty=Tensor[(1920), float64] */, %694)
}

def @func_1641(%var_1618: Tensor[(1365), uint16], %var_1619: Tensor[(96, 20), float64], %var_1622: Tensor[(60, 36), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(96, 20), float64], Tensor[(2160), uint8], Tensor[(60, 36), uint8], Tensor[(84), uint8], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) {
  %695 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %697 = cast(meta[relay.Constant][52] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %698 = cast(%var_1618, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %699 = cast(%var_1619, dtype="float64") /* ty=Tensor[(96, 20), float64] */;
  %700 = reshape(%697, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
  %701 = reshape(%698, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %702 = reshape(%699, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %703 = @func_1321(%700, %701, %702) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
  %704 = cast(%var_1622, dtype="uint8") /* ty=Tensor[(60, 36), uint8] */;
  %705 = cast(meta[relay.Constant][53] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %706 = reshape(%704, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %707 = reshape(%705, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %708 = @func_432(%706, %707) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
  %709 = cast(meta[relay.Constant][54] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %710 = reshape(%709, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
  %711 = @func_940(%710) /* ty=(Tensor[(9, 4, 15), float64],) */;
  %712 = sin(%696) /* ty=Tensor[(2, 11, 8), float64] */;
  %713 = %703.4;
  %714 = %708.2;
  %715 = %711.0;
  (%712, %713, meta[relay.Constant][52] /* ty=Tensor[(16), float32] */, %var_1618, %var_1619, %714, %var_1622, meta[relay.Constant][53] /* ty=Tensor[(84), uint8] */, %715, meta[relay.Constant][54] /* ty=Tensor[(540), float64] */)
}

def @func_5136() -> (Tensor[(2, 11, 8), float64],) {
  %716 = @func_2853() /* ty=Tensor[(2, 11, 8), float64] */;
  (%716,)
}

def @func_2900() -> (Tensor[(2, 11, 8), float64],) {
  %717 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %718 = %717.0;
  (%718,)
}

def @func_1698() -> (Tensor[(2, 11, 8), float64],) {
  %719 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  (%719,)
}

def @func_6785(%var_6782: Tensor[(13, 16, 9), float64]) -> Tensor[(13, 16, 9), float64] {
  %720 = cast(%var_6782, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
  sin(%720) /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_2293(%var_2268: Tensor[(2, 1, 8), float64], %var_2269: Tensor[(2, 13, 8), float64], %var_2287: Tensor[(91, 15), uint16]) -> (Tensor[(2, 13, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(4, 480), float64]) {
  %721 = cast(%var_2268, dtype="bool") /* ty=Tensor[(2, 1, 8), bool] */;
  %722 = cast(%var_2269, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
  %723 = cast(meta[relay.Constant][55] /* ty=Tensor[(3600), float32] */, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %724 = cast(%var_2287, dtype="uint16") /* ty=Tensor[(91, 15), uint16] */;
  %725 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 480), float64] */, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
  %726 = reshape(%723, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
  %727 = reshape(%724, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %728 = reshape(%725, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %729 = @func_2049(%726, %727, %728) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %730 = greater(%721, %722) /* ty=Tensor[(2, 13, 8), bool] */;
  %731 = %729.6;
  (%730, %731, meta[relay.Constant][55] /* ty=Tensor[(3600), float32] */, %var_2287, meta[relay.Constant][56] /* ty=Tensor[(4, 480), float64] */)
}

def @func_3030() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %732 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %733 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
  (%732, %733)
}

def @func_6800() -> Tensor[(2, 11, 8), float64] {
  %734 = @func_4009() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %734.2
}

def @func_4027() -> (Tensor[(2, 11, 8), float64],) {
  %735 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %736 = %735.0;
  (%736,)
}

def @func_6535(%var_6435: Tensor[(208), float64], %var_6436: Tensor[(455, 3), uint16], %var_6490: Tensor[(200), uint32], %var_6530: Tensor[(4, 60), int64]) -> (Tensor[(2, 11, 8), float64], Tensor[(4, 480), float64], Tensor[(16), float64], Tensor[(208), float64], Tensor[(455, 3), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(9, 4, 15), float64], Tensor[(1365), uint16], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1920), float64], int64, Tensor[(4, 60), int64]) {
  %737 = @func_4009() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %738 = cast(meta[relay.Constant][57] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %739 = cast(%var_6435, dtype="float64") /* ty=Tensor[(208), float64] */;
  %740 = cast(%var_6436, dtype="uint16") /* ty=Tensor[(455, 3), uint16] */;
  %741 = reshape(%738, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float64] */;
  %742 = reshape(%739, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
  %743 = reshape(%740, newshape=[91, 15]) /* ty=Tensor[(91, 15), uint16] */;
  %744 = @func_2293(%741, %742, %743) /* ty=(Tensor[(2, 13, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(4, 480), float64]) */;
  %745 = cast(%var_6436, dtype="float64") /* ty=Tensor[(455, 3), float64] */;
  %746 = cast(meta[relay.Constant][58] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %747 = reshape(%746, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %748 = @func_6288(%747) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32]) */;
  %749 = %748.1;
  %750 = cast(%749, dtype="float64") /* ty=Tensor[(540), float64] */;
  %751 = reshape(%750, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
  %752 = @func_940(%751) /* ty=(Tensor[(9, 4, 15), float64],) */;
  %753 = cast(%var_6490, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %754 = cast(meta[relay.Constant][59] /* ty=Tensor[(3600), float32] */, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %755 = reshape(%753, newshape=[200]) /* ty=Tensor[(200), uint32] */;
  %756 = reshape(%754, newshape=[3600]) /* ty=Tensor[(3600), float32] */;
  %757 = @func_4352(%755, %756) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64]) */;
  %758 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %759 = cast(%var_6530, dtype="int64") /* ty=Tensor[(4, 60), int64] */;
  %760 = cast(meta[relay.Constant][57] /* ty=Tensor[(16), float64] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %761 = %757.4;
  %762 = cast(%761, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %763 = %744.4;
  %764 = cast(%763, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
  %765 = reshape(%758, newshape=[]) /* ty=int64 */;
  %766 = reshape(%759, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), int64] */;
  %767 = reshape(%760, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %768 = reshape(%762, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), uint16] */;
  %769 = reshape(%764, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %770 = @func_2124(%765, %766, %767, %768, %769) /* ty=(Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %771 = %737.0;
  %772 = asinh(%745) /* ty=Tensor[(455, 3), float64] */;
  %773 = %752.0;
  %774 = %770.4;
  (%771, %763, meta[relay.Constant][57] /* ty=Tensor[(16), float64] */, %var_6435, %772, %749, meta[relay.Constant][58] /* ty=Tensor[(72), float32] */, %773, %761, %var_6490, meta[relay.Constant][59] /* ty=Tensor[(3600), float32] */, %774, 2 /* ty=int64 */, %var_6530)
}

def @func_3486(%var_3464: Tensor[(11, 11, 9), float32]) -> (Tensor[(11, 11, 9), float32],) {
  %775 = cast(%var_3464, dtype="float32") /* ty=Tensor[(11, 11, 9), float32] */;
  %776 = sqrt(%775) /* ty=Tensor[(11, 11, 9), float32] */;
  (%776,)
}

def @func_3569(%var_3561: Tensor[(540), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) {
  %777 = @func_2853() /* ty=Tensor[(2, 11, 8), float64] */;
  %778 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
  %779 = cast(%778, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %780 = shape_of(%777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%777, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %783 = cast(%var_3561, dtype="float64") /* ty=Tensor[(540), float64] */;
  %784 = reshape(%783, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
  %785 = @func_940(%784) /* ty=(Tensor[(9, 4, 15), float64],) */;
  %786 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %787 = floor_mod(%781, %782) /* ty=Tensor[(2, 11, 8), float64] */;
  %788 = %785.0;
  (%786, %787, %788, %var_3561)
}

def @func_4868(%var_4856: Tensor[(1176), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(1176), float32]) {
  %789 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %790 = cast(%var_4856, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %791 = reshape(%790, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
  %792 = %789.0;
  %793 = @func_4447(%791) /* ty=Tensor[(12, 7, 14), bool] */;
  (%792, %793, %var_4856)
}

def @func_6262(%var_6210: uint32) -> (Tensor[(1, 9, 12), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(?, 9, 12), float64]) {
  %794 = cast(%var_6210, dtype="bool") /* ty=bool */;
  %795 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 9, 12), uint32] */, dtype="bool") /* ty=Tensor[(1, 9, 12), bool] */;
  %796 = @func_1693() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %797 = @func_3376() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %798 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 9, 12), uint32] */, dtype="float32") /* ty=Tensor[(1, 9, 12), float32] */;
  %799 = acosh(%798) /* ty=Tensor[(1, 9, 12), float32] */;
  %800 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 9, 12), uint32] */, dtype="uint16") /* ty=Tensor[(1, 9, 12), uint16] */;
  %801 = cast(%var_6210, dtype="uint16") /* ty=uint16 */;
  %802 = logical_xor(%800, %801) /* ty=Tensor[(1, 9, 12), uint16] */;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(1, 9, 12), float64] */;
  %804 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %805 = cast(%799, dtype="float64") /* ty=Tensor[(1, 9, 12), float64] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %807 = greater(%794, %795) /* ty=Tensor[(1, 9, 12), bool] */;
  %808 = @func_5740() /* ty=Tensor[(2, 11, 8), float64] */;
  %809 = %796.0;
  %810 = %797.0;
  %811 = minimum(%805, %806) /* ty=Tensor[(?, 9, 12), float64] */;
  (%807, %808, %809, %810, %811)
}

def @func_661(%var_613: Tensor[(15, 16, 8), float64], %var_624: Tensor[(2160), uint8], %var_636: Tensor[(15, 16, 8), float64], %var_649: Tensor[(15, 16, 8), uint32]) -> (Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(15, 16, 8), uint8], Tensor[(15, 16, 8), bool], Tensor[(4, 3, 7), float64]) {
  %812 = cast(%var_613, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %813 = atanh(%812) /* ty=Tensor[(15, 16, 8), float64] */;
  %814 = cast(%var_636, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %815 = shape_of(%813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%813, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %818 = power(%816, %817) /* ty=Tensor[(15, 16, 8), float64] */;
  %819 = cast(%818, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
  %820 = shape_of(%813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%813, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %823 = bitwise_and(%821, %822) /* ty=Tensor[(15, 16, 8), uint32] */;
  %824 = cast(%823, dtype="uint8") /* ty=Tensor[(15, 16, 8), uint8] */;
  %825 = shape_of(%818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%818, dtype="uint8") /* ty=Tensor[(15, 16, 8), uint8] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %828 = cast(%var_649, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %829 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%823, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %832 = cast(%var_624, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %833 = cast(meta[relay.Constant][61] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %834 = reshape(%832, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
  %835 = reshape(%833, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
  %836 = @func_90(%834, %835) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
  %837 = %836.0;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(4, 3, 7), float64] */;
  %839 = bitwise_or(%826, %827) /* ty=Tensor[(15, 16, 8), uint8] */;
  %840 = greater_equal(%830, %831) /* ty=Tensor[(15, 16, 8), bool] */;
  %841 = atanh(%838) /* ty=Tensor[(4, 3, 7), float64] */;
  (%var_624, meta[relay.Constant][61] /* ty=Tensor[(84), uint8] */, %839, %840, %841)
}

def @func_4092() -> (Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) {
  %842 = @func_4009() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %843 = %842.0;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %845 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %846 = log10(%844) /* ty=Tensor[(2, 11, 8), float32] */;
  %847 = %845.0;
  (%846, %847)
}

def @func_3902(%var_3834: Tensor[(6, 3, 4), float32], %var_3862: Tensor[(540), float64], %var_3883: Tensor[(2, 1800), float32], %var_3884: Tensor[(1365), uint16]) -> (Tensor[(6, 3, 4), float32], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(6, 3, 4), float32], Tensor[(1365), uint16], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32]) {
  %848 = cast(%var_3834, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %849 = cast(meta[relay.Constant][62] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %850 = reshape(%849, newshape=[2, 11, 8]) /* ty=Tensor[(2, 11, 8), float64] */;
  %851 = @func_3273(%850) /* ty=(Tensor[(2, 11, 8), float64],) */;
  %852 = cast(%var_3862, dtype="float64") /* ty=Tensor[(540), float64] */;
  %853 = reshape(%852, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
  %854 = @func_940(%853) /* ty=(Tensor[(9, 4, 15), float64],) */;
  %855 = cast(%var_3834, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %856 = cast(%var_3883, dtype="float32") /* ty=Tensor[(2, 1800), float32] */;
  %857 = cast(%var_3884, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %858 = cast(meta[relay.Constant][63] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %859 = reshape(%856, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
  %860 = reshape(%857, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %861 = reshape(%858, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %862 = @func_2049(%859, %860, %861) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %863 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %864 = cast(%var_3834, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %865 = sin(%848) /* ty=Tensor[(6, 3, 4), float32] */;
  %866 = %851.0;
  %867 = %854.0;
  %868 = erf(%855) /* ty=Tensor[(6, 3, 4), float32] */;
  %869 = %862.1;
  %870 = %863.0;
  %871 = log10(%864) /* ty=Tensor[(6, 3, 4), float32] */;
  (%865, %866, meta[relay.Constant][62] /* ty=Tensor[(176), float64] */, %867, %var_3862, %868, %869, %var_3883, %var_3884, meta[relay.Constant][63] /* ty=Tensor[(1920), float64] */, %870, %871)
}

def @func_6417(%var_6408: Tensor[(30, 6), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(10, 216), uint8], Tensor[(84, 1), uint8], Tensor[(30, 6), int8]) {
  %872 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %873 = cast(meta[relay.Constant][64] /* ty=Tensor[(30, 6), float64] */, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
  %874 = cast(meta[relay.Constant][65] /* ty=Tensor[(10, 216), uint8] */, dtype="uint8") /* ty=Tensor[(10, 216), uint8] */;
  %875 = cast(meta[relay.Constant][66] /* ty=Tensor[(84, 1), uint8] */, dtype="uint8") /* ty=Tensor[(84, 1), uint8] */;
  %876 = cast(meta[relay.Constant][64] /* ty=Tensor[(30, 6), float64] */, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
  %877 = reshape(%873, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
  %878 = reshape(%874, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %879 = reshape(%875, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %880 = reshape(%876, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
  %881 = @func_1899(%877, %878, %879, %880) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) */;
  %882 = cast(%var_6408, dtype="int8") /* ty=Tensor[(30, 6), int8] */;
  %883 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(30, 6), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %884 = cast(meta[relay.Constant][64] /* ty=Tensor[(30, 6), float64] */, dtype="int8") /* ty=Tensor[(30, 6), int8] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %886 = %872.0;
  %887 = %881.2;
  %888 = multiply(%884, %885) /* ty=Tensor[(30, 6), int8] */;
  (%886, %887, meta[relay.Constant][65] /* ty=Tensor[(10, 216), uint8] */, meta[relay.Constant][66] /* ty=Tensor[(84, 1), uint8] */, %888)
}

def @func_6124(%var_6085: Tensor[(16), float32], %var_6086: Tensor[(1, 1365), uint16]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), bool], Tensor[(704), float64]) {
  %889 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %890 = cast(%var_6085, dtype="float32") /* ty=Tensor[(16), float32] */;
  %891 = cast(%var_6086, dtype="uint16") /* ty=Tensor[(1, 1365), uint16] */;
  %892 = cast(meta[relay.Constant][67] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %893 = reshape(%890, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
  %894 = reshape(%891, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %895 = reshape(%892, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %896 = @func_1321(%893, %894, %895) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
  %897 = cast(%var_6085, dtype="float32") /* ty=Tensor[(16), float32] */;
  %898 = cast(meta[relay.Constant][67] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %899 = cast(meta[relay.Constant][68] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %900 = reshape(%897, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %901 = reshape(%898, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %902 = reshape(%899, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), float64] */;
  %903 = @func_1410(%900, %901, %902) /* ty=(Tensor[(11, 4, 16), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(7, 195), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), float64], Tensor[(11, 4, 16), bool]) */;
  %904 = @func_5556() /* ty=Tensor[(2, 11, 8), float64] */;
  %905 = %889.0;
  %906 = %896.3;
  %907 = %903.6;
  (%904, %905, %906, %var_6085, %var_6086, meta[relay.Constant][67] /* ty=Tensor[(1920), float64] */, %907, meta[relay.Constant][68] /* ty=Tensor[(704), float64] */)
}

def @func_1830() -> Tensor[(2, 11, 8), float64] {
  @func_1760() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_3273(%var_3264: Tensor[(2, 11, 8), float64]) -> (Tensor[(2, 11, 8), float64],) {
  %908 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
  %909 = cast(%var_3264, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %910 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%908, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %913 = divide(%911, %912) /* ty=Tensor[(2, 11, 8), float64] */;
  (%913,)
}

def @func_3633(%var_3609: Tensor[(7, 15, 6), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(7, 15, 6), bool], Tensor[(5, 7, 13), bool]) {
  %914 = cast(meta[relay.Constant][69] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %915 = reshape(%914, newshape=[2, 11, 8]) /* ty=Tensor[(2, 11, 8), float64] */;
  %916 = @func_3273(%915) /* ty=(Tensor[(2, 11, 8), float64],) */;
  %917 = cast(%var_3609, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
  %918 = sigmoid(%917) /* ty=Tensor[(7, 15, 6), float64] */;
  %919 = cast(%var_3609, dtype="bool") /* ty=Tensor[(7, 15, 6), bool] */;
  %920 = shape_of(%918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%918, dtype="bool") /* ty=Tensor[(7, 15, 6), bool] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %923 = @func_2649() /* ty=(Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %924 = %916.0;
  %925 = greater(%921, %922) /* ty=Tensor[(7, 15, 6), bool] */;
  %926 = %923.0;
  (%924, meta[relay.Constant][69] /* ty=Tensor[(176), float64] */, %925, %926)
}

def @func_7111() -> (Tensor[(2, 11, 8), float64],) {
  %927 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %928 = %927.0;
  (%928,)
}

def @func_2698() -> (Tensor[(2, 11, 8), float64],) {
  %929 = @func_2444() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %930 = %929.0;
  (%930,)
}

def @func_5670() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %931 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
  %932 = %931.1;
  %933 = @func_4797() /* ty=Tensor[(2, 11, 8), float64] */;
  (%932, %933)
}

def @func_2444() -> (Tensor[(2, 11, 8), float64],) {
  %934 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  (%934,)
}

def @func_4883() -> (Tensor[(5, 7, 13), int64],) {
  %935 = @func_4009() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %936 = %935.3;
  (%936,)
}

def @func_3149(%var_3054: Tensor[(90, 2), float64], %var_3072: int64, %var_3078: Tensor[(3, 180), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(90, 2), float64], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(1920), float64], int64, Tensor[(2, 8), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(3, 180), float64], Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8]) {
  %937 = @func_2649() /* ty=(Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %938 = @func_2698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %939 = cast(%var_3054, dtype="float64") /* ty=Tensor[(90, 2), float64] */;
  %940 = cast(meta[relay.Constant][70] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %941 = cast(meta[relay.Constant][71] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %942 = cast(%var_3054, dtype="float64") /* ty=Tensor[(90, 2), float64] */;
  %943 = reshape(%939, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
  %944 = reshape(%940, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %945 = reshape(%941, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %946 = reshape(%942, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
  %947 = @func_1899(%943, %944, %945, %946) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) */;
  %948 = cast(%var_3072, dtype="int64") /* ty=int64 */;
  %949 = cast(meta[relay.Constant][72] /* ty=Tensor[(2, 8), float32] */, dtype="float32") /* ty=Tensor[(2, 8), float32] */;
  %950 = cast(meta[relay.Constant][73] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %951 = reshape(%948, newshape=[]) /* ty=int64 */;
  %952 = reshape(%949, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %953 = reshape(%950, newshape=[1, 1365]) /* ty=Tensor[(1, 1365), uint16] */;
  %954 = @func_2360(%951, %952, %953) /* ty=(Tensor[(2, 11, 8), int8], Tensor[(1920), float64], int64, Tensor[(240), int64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64]) */;
  %955 = cast(%var_3078, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %956 = reshape(%955, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %957 = @func_2196(%956) /* ty=(Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(2, 11, 8), float32]) */;
  %958 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %959 = cast(meta[relay.Constant][70] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %960 = cast(meta[relay.Constant][71] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %961 = reshape(%959, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
  %962 = reshape(%960, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
  %963 = @func_90(%961, %962) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
  %964 = %937.2;
  %965 = %938.0;
  %966 = %947.2;
  %967 = %954.1;
  %968 = %957.1;
  %969 = %958.0;
  %970 = %963.0;
  (%964, %965, %966, %var_3054, meta[relay.Constant][70] /* ty=Tensor[(2160), uint8] */, meta[relay.Constant][71] /* ty=Tensor[(84), uint8] */, %967, %var_3072, meta[relay.Constant][72] /* ty=Tensor[(2, 8), float32] */, meta[relay.Constant][73] /* ty=Tensor[(1365), uint16] */, %968, %var_3078, %969, %970)
}

def @func_2719() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %971 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %972 = %971.0;
  %973 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
  (%972, %973)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4285(%var_4280: Tensor[(72), float32], %var_4281: Tensor[(540), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1365), uint16]) {
  %0 = @func_4092() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) */;
  %1 = cast(%var_4280, dtype="float32") /* ty=Tensor[(72), float32] */;
  %2 = cast(%var_4281, dtype="float64") /* ty=Tensor[(540), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(3600), float32] */, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %5 = reshape(%1, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %6 = reshape(%2, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %7 = reshape(%3, newshape=[2, 1800]) /* ty=Tensor[(2, 1800), float32] */;
  %8 = reshape(%4, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %9 = @func_3902(%5, %6, %7, %8) /* ty=(Tensor[(6, 3, 4), float32], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(6, 3, 4), float32], Tensor[(1365), uint16], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32]) */;
  %10 = %0.1;
  %11 = %9.11;
  (%10, %11, %var_4280, %var_4281, meta[relay.Constant][0] /* ty=Tensor[(3600), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1365), uint16] */)
}

def @func_1700() -> (Tensor[(2, 11, 8), float64],) {
  @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_5672() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  @func_5670() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_3275(%var_3274: Tensor[(2, 11, 8), float64]) -> (Tensor[(2, 11, 8), float64],) {
  %18 = fn (%var_3264: Tensor[(2, 11, 8), float64]) -> (Tensor[(2, 11, 8), float64],) {
    %12 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
    %13 = cast(%var_3264, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
    %15 = cast(%12, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %17 = divide(%15, %16) /* ty=Tensor[(2, 11, 8), float64] */;
    (%17,)
  };
  %18(%var_3274) /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_2843() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  @func_2841() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_3744(%var_3740: Tensor[(4, 5, 10), uint32], %var_3741: Tensor[(3600), float32], %var_3742: Tensor[(455, 3), uint16], %var_3743: Tensor[(1920), float64]) -> (Tensor[(4, 5, 10), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(455, 3), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(4, 5, 10), int32]) {
  @func_3738(%var_3740, %var_3741, %var_3742, %var_3743) /* ty=(Tensor[(4, 5, 10), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(455, 3), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(4, 5, 10), int32]) */
}

def @func_1694() -> (Tensor[(2, 11, 8), float64],) {
  %22 = fn () -> (Tensor[(2, 11, 8), float64],) {
    %19 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
    %20 = cast(%19, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %21 = asinh(%20) /* ty=Tensor[(2, 11, 8), float64] */;
    (%21,)
  };
  %22() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_5731(%var_5712: Tensor[(13, 2, 4), float64]) -> (Tensor[(13, 2, 4), float64], Tensor[(2, 11, 8), float64]) {
  %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 4), float64] */;
  %24 = cast(%var_5712, dtype="float64") /* ty=Tensor[(13, 2, 4), float64] */;
  %25 = floor_divide(%23, %24) /* ty=Tensor[(13, 2, 4), float64] */;
  %26 = @func_4120() /* ty=Tensor[(2, 11, 8), float64] */;
  (%25, %26)
}

def @func_6264(%var_6263: uint32) -> (Tensor[(1, 9, 12), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(?, 9, 12), float64]) {
  %45 = fn (%var_6210: uint32) -> (Tensor[(1, 9, 12), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(?, 9, 12), float64]) {
    %27 = cast(%var_6210, dtype="bool") /* ty=bool */;
    %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 9, 12), uint32] */, dtype="bool") /* ty=Tensor[(1, 9, 12), bool] */;
    %29 = @func_1693() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %30 = @func_3376() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 9, 12), uint32] */, dtype="float32") /* ty=Tensor[(1, 9, 12), float32] */;
    %32 = acosh(%31) /* ty=Tensor[(1, 9, 12), float32] */;
    %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 9, 12), uint32] */, dtype="uint16") /* ty=Tensor[(1, 9, 12), uint16] */;
    %34 = cast(%var_6210, dtype="uint16") /* ty=uint16 */;
    %35 = logical_xor(%33, %34) /* ty=Tensor[(1, 9, 12), uint16] */;
    %36 = cast(%35, dtype="float64") /* ty=Tensor[(1, 9, 12), float64] */;
    %37 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
    %38 = cast(%32, dtype="float64") /* ty=Tensor[(1, 9, 12), float64] */;
    %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %40 = greater(%27, %28) /* ty=Tensor[(1, 9, 12), bool] */;
    %41 = @func_5740() /* ty=Tensor[(2, 11, 8), float64] */;
    %42 = %29.0;
    %43 = %30.0;
    %44 = minimum(%38, %39) /* ty=Tensor[(?, 9, 12), float64] */;
    (%40, %41, %42, %43, %44)
  };
  %45(%var_6263) /* ty=(Tensor[(1, 9, 12), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(?, 9, 12), float64]) */
}

def @func_4183(%var_4181: Tensor[(208), float64], %var_4182: Tensor[(1365), uint16]) -> (Tensor[(2, 11, 8), float64], Tensor[(91, 15), uint16], Tensor[(4, 4), float64], Tensor[(208), float64], Tensor[(1365), uint16]) {
  @func_4179(%var_4181, %var_4182) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(91, 15), uint16], Tensor[(4, 4), float64], Tensor[(208), float64], Tensor[(1365), uint16]) */
}

def @func_1574() -> Tensor[(2, 11, 8), float64] {
  @func_1572() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_4027() -> (Tensor[(2, 11, 8), float64],) {
  %46 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %47 = %46.0;
  (%47,)
}

def @func_6788(%var_6786: Tensor[(13, 16, 9), float64]) -> Tensor[(13, 16, 9), float64] {
  @func_6785(%var_6786) /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_4871(%var_4869: Tensor[(1176), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(1176), float32]) {
  @func_4868(%var_4869) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(1176), float32]) */
}

def @func_1796() -> (Tensor[(2, 11, 8), float64],) {
  %48 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
  (%48,)
}

def @func_2298(%var_2295: Tensor[(2, 1, 8), float64], %var_2296: Tensor[(2, 13, 8), float64], %var_2297: Tensor[(91, 15), uint16]) -> (Tensor[(2, 13, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(4, 480), float64]) {
  @func_2293(%var_2295, %var_2296, %var_2297) /* ty=(Tensor[(2, 13, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(4, 480), float64]) */
}

def @func_1414(%var_1411: Tensor[(16), float32], %var_1412: Tensor[(1920), float64], %var_1413: Tensor[(11, 4, 16), float64]) -> (Tensor[(11, 4, 16), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(7, 195), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), float64], Tensor[(11, 4, 16), bool]) {
  %72 = fn (%var_1387: Tensor[(16), float32], %var_1389: Tensor[(1920), float64], %var_1402: Tensor[(11, 4, 16), float64]) -> (Tensor[(11, 4, 16), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(7, 195), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), float64], Tensor[(11, 4, 16), bool]) {
    %49 = cast(6.87204f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %50 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
    %51 = cast(%var_1387, dtype="float32") /* ty=Tensor[(16), float32] */;
    %52 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 195), uint16] */, dtype="uint16") /* ty=Tensor[(7, 195), uint16] */;
    %53 = cast(%var_1389, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %54 = reshape(%51, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
    %55 = reshape(%52, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
    %56 = reshape(%53, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %57 = @func_1321(%54, %55, %56) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
    %58 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
    %59 = acos(%58) /* ty=Tensor[(11, 4, 16), float64] */;
    %60 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
    %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
    %62 = cast(%59, dtype="float64") /* ty=Tensor[(11, 4, 16), float64] */;
    %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %64 = cast(%var_1402, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
    %65 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(11, 4, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 4, 16), float64] */, dtype="bool") /* ty=Tensor[(11, 4, 16), bool] */;
    %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %68 = power(%49, %50) /* ty=Tensor[(11, 4, 16), float64] */;
    %69 = %57.4;
    %70 = floor_divide(%62, %63) /* ty=Tensor[(11, 4, 16), float64] */;
    %71 = equal(%66, %67) /* ty=Tensor[(11, 4, 16), bool] */;
    (%68, %69, %var_1387, meta[relay.Constant][5] /* ty=Tensor[(7, 195), uint16] */, %var_1389, %70, %71)
  };
  %72(%var_1411, %var_1412, %var_1413) /* ty=(Tensor[(11, 4, 16), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(7, 195), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), float64], Tensor[(11, 4, 16), bool]) */
}

def @func_4868(%var_4856: Tensor[(1176), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(1176), float32]) {
  %73 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %74 = cast(%var_4856, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %75 = reshape(%74, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
  %76 = %73.0;
  %77 = @func_4447(%75) /* ty=Tensor[(12, 7, 14), bool] */;
  (%76, %77, %var_4856)
}

def @func_4842(%var_4840: Tensor[(1, 12, 10), float64], %var_4841: Tensor[(630), float64]) -> (Tensor[(?, 12, 10), float64], Tensor[(?, 12, 10), float64], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(630), float64]) {
  %93 = fn (%var_4816: Tensor[(1, 12, 10), float64], %var_4836: Tensor[(630), float64]) -> (Tensor[(?, 12, 10), float64], Tensor[(?, 12, 10), float64], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(630), float64]) {
    %78 = cast(%var_4816, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
    %79 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(1, 12, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %80 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
    %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %82 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
    %83 = shape_of(%var_4816, dtype="int32") /* ty=Tensor[(3), int32] */;
    %84 = cast(%var_4816, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
    %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %86 = cast(%var_4836, dtype="float64") /* ty=Tensor[(630), float64] */;
    %87 = reshape(%86, newshape=[7, 15, 6]) /* ty=Tensor[(7, 15, 6), float64] */;
    %88 = @func_3633(%87) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(7, 15, 6), bool], Tensor[(5, 7, 13), bool]) */;
    %89 = power(%80, %81) /* ty=Tensor[(?, 12, 10), float64] */;
    %90 = mod(%84, %85) /* ty=Tensor[(?, 12, 10), float64] */;
    %91 = @func_4120() /* ty=Tensor[(2, 11, 8), float64] */;
    %92 = %88.1;
    (%89, %90, %91, %92, %var_4836)
  };
  %93(%var_4840, %var_4841) /* ty=(Tensor[(?, 12, 10), float64], Tensor[(?, 12, 10), float64], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(630), float64]) */
}

def @main(%var_7116: Tensor[(4, 11, 10), float32]) -> Tensor[(4, 11, 10), float32] {
  %94 = cast(%var_7116, dtype="float32") /* ty=Tensor[(4, 11, 10), float32] */;
  log(%94) /* ty=Tensor[(4, 11, 10), float32] */
}

def @func_4161(%var_4158: Tensor[(180, 1), float64], %var_4159: Tensor[(2160), uint8], %var_4160: Tensor[(84), uint8]) -> (Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180, 1), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) {
  %108 = fn (%var_4148: Tensor[(180, 1), float64], %var_4149: Tensor[(2160), uint8], %var_4150: Tensor[(84), uint8]) -> (Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180, 1), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) {
    %95 = @func_3603() /* ty=(Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64]) */;
    %96 = cast(%var_4148, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
    %97 = cast(%var_4149, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %98 = cast(%var_4150, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %99 = cast(%var_4148, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
    %100 = reshape(%96, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
    %101 = reshape(%97, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %102 = reshape(%98, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %103 = reshape(%99, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
    %104 = @func_1899(%100, %101, %102, %103) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) */;
    %105 = %95.0;
    %106 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
    %107 = %104.6;
    (%105, %106, %107, %var_4148, %var_4149, %var_4150)
  };
  %108(%var_4158, %var_4159, %var_4160) /* ty=(Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180, 1), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) */
}

def @func_5670() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %109 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
  %110 = %109.1;
  %111 = @func_4797() /* ty=Tensor[(2, 11, 8), float64] */;
  (%110, %111)
}

def @func_6967(%var_6964: Tensor[(1920), float64], %var_6965: Tensor[(704), float64], %var_6966: Tensor[(200), uint32]) -> (Tensor[(5, 7, 13), int64], Tensor[(16), float32], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(11, 4, 16), uint8], Tensor[(2, 11, 8), float64], Tensor[(200), bool]) {
  %144 = fn (%var_6911: Tensor[(1920), float64], %var_6912: Tensor[(704), float64], %var_6946: Tensor[(200), uint32]) -> (Tensor[(5, 7, 13), int64], Tensor[(16), float32], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(11, 4, 16), uint8], Tensor[(2, 11, 8), float64], Tensor[(200), bool]) {
    %112 = @func_4883() /* ty=(Tensor[(5, 7, 13), int64],) */;
    %113 = cast(meta[relay.Constant][8] /* ty=Tensor[(200), uint32] */, dtype="uint32") /* ty=Tensor[(200), uint32] */;
    %114 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 1800), float32] */, dtype="float32") /* ty=Tensor[(2, 1800), float32] */;
    %115 = cast(meta[relay.Constant][10] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %116 = cast(%var_6911, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %117 = reshape(%113, newshape=[4, 5, 10]) /* ty=Tensor[(4, 5, 10), uint32] */;
    %118 = reshape(%114, newshape=[3600]) /* ty=Tensor[(3600), float32] */;
    %119 = reshape(%115, newshape=[455, 3]) /* ty=Tensor[(455, 3), uint16] */;
    %120 = reshape(%116, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %121 = @func_3738(%117, %118, %119, %120) /* ty=(Tensor[(4, 5, 10), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(455, 3), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(4, 5, 10), int32]) */;
    %122 = cast(meta[relay.Constant][7] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %123 = cast(%var_6911, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %124 = cast(%var_6912, dtype="float64") /* ty=Tensor[(704), float64] */;
    %125 = reshape(%122, newshape=[16]) /* ty=Tensor[(16), float32] */;
    %126 = reshape(%123, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %127 = reshape(%124, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), float64] */;
    %128 = @func_1410(%125, %126, %127) /* ty=(Tensor[(11, 4, 16), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(7, 195), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), float64], Tensor[(11, 4, 16), bool]) */;
    %129 = %128.6;
    %130 = cast(%var_6912, dtype="uint8") /* ty=Tensor[(704), uint8] */;
    %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(3), int32] */;
    %132 = cast(%129, dtype="uint8") /* ty=Tensor[(11, 4, 16), uint8] */;
    %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %134 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %135 = cast(%var_6946, dtype="bool") /* ty=Tensor[(200), bool] */;
    %136 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(200), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %137 = cast(meta[relay.Constant][8] /* ty=Tensor[(200), uint32] */, dtype="bool") /* ty=Tensor[(200), bool] */;
    %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?), bool] */;
    %139 = %112.0;
    %140 = %121.1;
    %141 = bitwise_or(%132, %133) /* ty=Tensor[(11, 4, 16), uint8] */;
    %142 = %134.0;
    %143 = greater(%137, %138) /* ty=Tensor[(200), bool] */;
    (%139, meta[relay.Constant][7] /* ty=Tensor[(16), float32] */, %var_6911, %140, meta[relay.Constant][9] /* ty=Tensor[(2, 1800), float32] */, meta[relay.Constant][10] /* ty=Tensor[(1365), uint16] */, %141, %142, %143)
  };
  %144(%var_6964, %var_6965, %var_6966) /* ty=(Tensor[(5, 7, 13), int64], Tensor[(16), float32], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(11, 4, 16), uint8], Tensor[(2, 11, 8), float64], Tensor[(200), bool]) */
}

def @func_7055(%var_7011: Tensor[(1872), float64]) -> (Tensor[(13, 16, 9), float64], Tensor[(1872), float64], Tensor[(2, 11, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %145 = cast(%var_7011, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %146 = reshape(%145, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %147 = @func_5136() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %148 = %147.0;
  %149 = @func_5125() /* ty=Tensor[(2, 11, 8), float64] */;
  %150 = cast(%149, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
  %151 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%148, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %154 = @func_3030() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %155 = @func_2841() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %156 = @func_6785(%146) /* ty=Tensor[(13, 16, 9), float64] */;
  %157 = not_equal(%152, %153) /* ty=Tensor[(2, 11, 8), bool] */;
  %158 = %154.0;
  %159 = %155.1;
  (%156, %var_7011, %157, %158, %159)
}

def @func_2744() -> (Tensor[(2, 11, 8), float64],) {
  %162 = fn () -> (Tensor[(2, 11, 8), float64],) {
    %160 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %161 = %160.0;
    (%161,)
  };
  %162() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_5969(%var_5966: Tensor[(3600), float32], %var_5967: Tensor[(1920), float64], %var_5968: Tensor[(1176), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(3, 28), float32], Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(1920), float64], Tensor[(3, 28), float64], Tensor[(2, 11, 8), float64], Tensor[(1176), float32], Tensor[(1176), float32]) {
  %191 = fn (%var_5933: Tensor[(3600), float32], %var_5935: Tensor[(1920), float64], %var_5947: Tensor[(1176), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(3, 28), float32], Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(1920), float64], Tensor[(3, 28), float64], Tensor[(2, 11, 8), float64], Tensor[(1176), float32], Tensor[(1176), float32]) {
    %163 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %164 = cast(meta[relay.Constant][11] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %165 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 28), uint8] */, dtype="uint8") /* ty=Tensor[(3, 28), uint8] */;
    %166 = reshape(%164, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
    %167 = reshape(%165, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
    %168 = @func_90(%166, %167) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
    %169 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 28), uint8] */, dtype="float32") /* ty=Tensor[(3, 28), float32] */;
    %170 = @func_2444() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %171 = cast(%var_5933, dtype="float32") /* ty=Tensor[(3600), float32] */;
    %172 = cast(meta[relay.Constant][13] /* ty=Tensor[(91, 15), uint16] */, dtype="uint16") /* ty=Tensor[(91, 15), uint16] */;
    %173 = cast(%var_5935, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %174 = reshape(%171, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
    %175 = reshape(%172, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
    %176 = reshape(%173, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %177 = @func_2049(%174, %175, %176) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
    %178 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 28), uint8] */, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
    %179 = cast(%var_5947, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %180 = reshape(%179, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %181 = @func_4868(%180) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(1176), float32]) */;
    %182 = %163.0;
    %183 = %168.0;
    %184 = sin(%169) /* ty=Tensor[(3, 28), float32] */;
    %185 = @func_5679() /* ty=Tensor[(2, 11, 8), uint32] */;
    %186 = %170.0;
    %187 = %177.5;
    %188 = asinh(%178) /* ty=Tensor[(3, 28), float64] */;
    %189 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
    %190 = %181.2;
    (%182, %183, meta[relay.Constant][11] /* ty=Tensor[(2160), uint8] */, %184, %185, %186, %187, %var_5933, meta[relay.Constant][13] /* ty=Tensor[(91, 15), uint16] */, %var_5935, %188, %189, %190, %var_5947)
  };
  %191(%var_5966, %var_5967, %var_5968) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(3, 28), float32], Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(1920), float64], Tensor[(3, 28), float64], Tensor[(2, 11, 8), float64], Tensor[(1176), float32], Tensor[(1176), float32]) */
}

def @func_2413() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) {
  %208 = fn () -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) {
    %192 = @func_1693() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %193 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %194 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 960), float64] */, dtype="float64") /* ty=Tensor[(2, 960), float64] */;
    %195 = cast(meta[relay.Constant][15] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %196 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 960), float64] */, dtype="float64") /* ty=Tensor[(2, 960), float64] */;
    %197 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 960), float64] */, dtype="uint32") /* ty=Tensor[(2, 960), uint32] */;
    %198 = reshape(%194, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %199 = reshape(%195, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %200 = reshape(%196, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %201 = reshape(%197, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), uint32] */;
    %202 = @func_661(%198, %199, %200, %201) /* ty=(Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(15, 16, 8), uint8], Tensor[(15, 16, 8), bool], Tensor[(4, 3, 7), float64]) */;
    %203 = %202.3;
    %204 = cast(%203, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
    %205 = %192.0;
    %206 = %193.0;
    %207 = rsqrt(%204) /* ty=Tensor[(15, 16, 8), float32] */;
    (%205, %206, meta[relay.Constant][14] /* ty=Tensor[(2, 960), float64] */, meta[relay.Constant][15] /* ty=Tensor[(2160), uint8] */, %207)
  };
  %208() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */
}

def @func_6288(%var_6280: Tensor[(72), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32]) {
  %209 = cast(%var_6280, dtype="float32") /* ty=Tensor[(72), float32] */;
  %210 = reshape(%209, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %211 = @func_5003(%210) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(540), float64]) */;
  %212 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %213 = %211.3;
  (%212, %213, %var_6280)
}

def @func_666(%var_662: Tensor[(15, 16, 8), float64], %var_663: Tensor[(2160), uint8], %var_664: Tensor[(15, 16, 8), float64], %var_665: Tensor[(15, 16, 8), uint32]) -> (Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(15, 16, 8), uint8], Tensor[(15, 16, 8), bool], Tensor[(4, 3, 7), float64]) {
  %244 = fn (%var_613: Tensor[(15, 16, 8), float64], %var_624: Tensor[(2160), uint8], %var_636: Tensor[(15, 16, 8), float64], %var_649: Tensor[(15, 16, 8), uint32]) -> (Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(15, 16, 8), uint8], Tensor[(15, 16, 8), bool], Tensor[(4, 3, 7), float64]) {
    %214 = cast(%var_613, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
    %215 = atanh(%214) /* ty=Tensor[(15, 16, 8), float64] */;
    %216 = cast(%var_636, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
    %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %218 = cast(%215, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
    %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %220 = power(%218, %219) /* ty=Tensor[(15, 16, 8), float64] */;
    %221 = cast(%220, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
    %222 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %223 = cast(%215, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
    %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %225 = bitwise_and(%223, %224) /* ty=Tensor[(15, 16, 8), uint32] */;
    %226 = cast(%225, dtype="uint8") /* ty=Tensor[(15, 16, 8), uint8] */;
    %227 = shape_of(%220, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(%220, dtype="uint8") /* ty=Tensor[(15, 16, 8), uint8] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %230 = cast(%var_649, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
    %231 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %232 = cast(%225, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
    %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %234 = cast(%var_624, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %235 = cast(meta[relay.Constant][16] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %236 = reshape(%234, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
    %237 = reshape(%235, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
    %238 = @func_90(%236, %237) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
    %239 = %238.0;
    %240 = cast(%239, dtype="float64") /* ty=Tensor[(4, 3, 7), float64] */;
    %241 = bitwise_or(%228, %229) /* ty=Tensor[(15, 16, 8), uint8] */;
    %242 = greater_equal(%232, %233) /* ty=Tensor[(15, 16, 8), bool] */;
    %243 = atanh(%240) /* ty=Tensor[(4, 3, 7), float64] */;
    (%var_624, meta[relay.Constant][16] /* ty=Tensor[(84), uint8] */, %241, %242, %243)
  };
  %244(%var_662, %var_663, %var_664, %var_665) /* ty=(Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(15, 16, 8), uint8], Tensor[(15, 16, 8), bool], Tensor[(4, 3, 7), float64]) */
}

def @func_5734(%var_5732: Tensor[(13, 2, 4), float64]) -> (Tensor[(13, 2, 4), float64], Tensor[(2, 11, 8), float64]) {
  @func_5731(%var_5732) /* ty=(Tensor[(13, 2, 4), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_4936(%var_4934: Tensor[(16), uint16]) -> (Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(16, 15, 1), uint16], Tensor[(16), uint16], Tensor[(240), uint16], Tensor[(864), uint16]) {
  @func_4933(%var_4934) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(16, 15, 1), uint16], Tensor[(16), uint16], Tensor[(240), uint16], Tensor[(864), uint16]) */
}

def @func_3153(%var_3150: Tensor[(90, 2), float64], %var_3151: int64, %var_3152: Tensor[(3, 180), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(90, 2), float64], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(1920), float64], int64, Tensor[(2, 8), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(3, 180), float64], Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8]) {
  %279 = fn (%var_3054: Tensor[(90, 2), float64], %var_3072: int64, %var_3078: Tensor[(3, 180), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(90, 2), float64], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(1920), float64], int64, Tensor[(2, 8), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(3, 180), float64], Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8]) {
    %245 = @func_2649() /* ty=(Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
    %246 = @func_2698() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %247 = cast(%var_3054, dtype="float64") /* ty=Tensor[(90, 2), float64] */;
    %248 = cast(meta[relay.Constant][17] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %249 = cast(meta[relay.Constant][18] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %250 = cast(%var_3054, dtype="float64") /* ty=Tensor[(90, 2), float64] */;
    %251 = reshape(%247, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
    %252 = reshape(%248, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %253 = reshape(%249, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %254 = reshape(%250, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
    %255 = @func_1899(%251, %252, %253, %254) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) */;
    %256 = cast(%var_3072, dtype="int64") /* ty=int64 */;
    %257 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 8), float32] */, dtype="float32") /* ty=Tensor[(2, 8), float32] */;
    %258 = cast(meta[relay.Constant][20] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %259 = reshape(%256, newshape=[]) /* ty=int64 */;
    %260 = reshape(%257, newshape=[16]) /* ty=Tensor[(16), float32] */;
    %261 = reshape(%258, newshape=[1, 1365]) /* ty=Tensor[(1, 1365), uint16] */;
    %262 = @func_2360(%259, %260, %261) /* ty=(Tensor[(2, 11, 8), int8], Tensor[(1920), float64], int64, Tensor[(240), int64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64]) */;
    %263 = cast(%var_3078, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
    %264 = reshape(%263, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %265 = @func_2196(%264) /* ty=(Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(2, 11, 8), float32]) */;
    %266 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %267 = cast(meta[relay.Constant][17] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %268 = cast(meta[relay.Constant][18] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %269 = reshape(%267, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
    %270 = reshape(%268, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
    %271 = @func_90(%269, %270) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
    %272 = %245.2;
    %273 = %246.0;
    %274 = %255.2;
    %275 = %262.1;
    %276 = %265.1;
    %277 = %266.0;
    %278 = %271.0;
    (%272, %273, %274, %var_3054, meta[relay.Constant][17] /* ty=Tensor[(2160), uint8] */, meta[relay.Constant][18] /* ty=Tensor[(84), uint8] */, %275, %var_3072, meta[relay.Constant][19] /* ty=Tensor[(2, 8), float32] */, meta[relay.Constant][20] /* ty=Tensor[(1365), uint16] */, %276, %var_3078, %277, %278)
  };
  %279(%var_3150, %var_3151, %var_3152) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(90, 2), float64], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(1920), float64], int64, Tensor[(2, 8), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(3, 180), float64], Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8]) */
}

def @func_5680() -> Tensor[(2, 11, 8), uint32] {
  %281 = fn () -> Tensor[(2, 11, 8), uint32] {
    %280 = @func_5280() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), uint32]) */;
    %280.1
  };
  %281() /* ty=Tensor[(2, 11, 8), uint32] */
}

def @func_2365(%var_2362: int64, %var_2363: Tensor[(16), float32], %var_2364: Tensor[(1, 1365), uint16]) -> (Tensor[(2, 11, 8), int8], Tensor[(1920), float64], int64, Tensor[(240), int64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64]) {
  @func_2360(%var_2362, %var_2363, %var_2364) /* ty=(Tensor[(2, 11, 8), int8], Tensor[(1920), float64], int64, Tensor[(240), int64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64]) */
}

def @func_3924() -> Tensor[(2, 11, 8), float32] {
  %287 = fn () -> Tensor[(2, 11, 8), float32] {
    %282 = @func_2853() /* ty=Tensor[(2, 11, 8), float64] */;
    %283 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 11, 8), float64] */, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
    %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
    %285 = cast(%282, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
    %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%285, %286) /* ty=Tensor[(2, 11, 8), float32] */
  };
  %287() /* ty=Tensor[(2, 11, 8), float32] */
}

def @func_2196(%var_2175: Tensor[(540), float64]) -> (Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(2, 11, 8), float32]) {
  %288 = cast(%var_2175, dtype="float64") /* ty=Tensor[(540), float64] */;
  %289 = reshape(%288, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
  %290 = @func_940(%289) /* ty=(Tensor[(9, 4, 15), float64],) */;
  %291 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
  %292 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 11, 8), float64] */, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %293 = shape_of(%291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%291, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %296 = %290.0;
  %297 = power(%294, %295) /* ty=Tensor[(2, 11, 8), float32] */;
  (%296, %var_2175, %297)
}

def @func_1325(%var_1322: Tensor[(8, 1, 2), float32], %var_1323: Tensor[(1365), uint16], %var_1324: Tensor[(1920), float64]) -> (Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) {
  %318 = fn (%var_1291: Tensor[(8, 1, 2), float32], %var_1302: Tensor[(1365), uint16], %var_1304: Tensor[(1920), float64]) -> (Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) {
    %298 = cast(%var_1291, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
    %299 = cast(%var_1302, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %300 = cast(%var_1302, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %301 = cast(meta[relay.Constant][23] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %302 = cast(%var_1304, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %303 = reshape(%299, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint16] */;
    %304 = reshape(%300, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint16] */;
    %305 = reshape(%301, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %306 = reshape(%302, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %307 = @func_991(%303, %304, %305, %306) /* ty=(Tensor[(7, 13, 15), float32], Tensor[(9, 4, 15), float64], Tensor[(7, 13, 15), float32], Tensor[(4, 3, 7), float64], Tensor[(1920), float64], Tensor[(2160), uint8], Tensor[(15, 16, 9), bool], Tensor[(4, 3, 7), uint8], Tensor[(540), float32]) */;
    %308 = cast(%var_1291, dtype="float64") /* ty=Tensor[(8, 1, 2), float64] */;
    %309 = acosh(%308) /* ty=Tensor[(8, 1, 2), float64] */;
    %310 = cast(%309, dtype="float32") /* ty=Tensor[(8, 1, 2), float32] */;
    %311 = cast(%var_1291, dtype="float64") /* ty=Tensor[(8, 1, 2), float64] */;
    %312 = asinh(%311) /* ty=Tensor[(8, 1, 2), float64] */;
    %313 = cast(%312, dtype="float64") /* ty=Tensor[(8, 1, 2), float64] */;
    %314 = sigmoid(%298) /* ty=Tensor[(8, 1, 2), float32] */;
    %315 = %307.0;
    %316 = cos(%310) /* ty=Tensor[(8, 1, 2), float32] */;
    %317 = tan(%313) /* ty=Tensor[(8, 1, 2), float64] */;
    (%314, %315, %var_1302, meta[relay.Constant][23] /* ty=Tensor[(540), float64] */, %var_1304, %316, %317)
  };
  %318(%var_1322, %var_1323, %var_1324) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */
}

def @func_996(%var_992: Tensor[(7, 13, 15), uint16], %var_993: Tensor[(7, 13, 15), uint16], %var_994: Tensor[(540), float64], %var_995: Tensor[(1920), float64]) -> (Tensor[(7, 13, 15), float32], Tensor[(9, 4, 15), float64], Tensor[(7, 13, 15), float32], Tensor[(4, 3, 7), float64], Tensor[(1920), float64], Tensor[(2160), uint8], Tensor[(15, 16, 9), bool], Tensor[(4, 3, 7), uint8], Tensor[(540), float32]) {
  %356 = fn (%var_946: Tensor[(7, 13, 15), uint16], %var_947: Tensor[(7, 13, 15), uint16], %var_971: Tensor[(540), float64], %var_977: Tensor[(1920), float64]) -> (Tensor[(7, 13, 15), float32], Tensor[(9, 4, 15), float64], Tensor[(7, 13, 15), float32], Tensor[(4, 3, 7), float64], Tensor[(1920), float64], Tensor[(2160), uint8], Tensor[(15, 16, 9), bool], Tensor[(4, 3, 7), uint8], Tensor[(540), float32]) {
    %319 = cast(%var_947, dtype="uint16") /* ty=Tensor[(7, 13, 15), uint16] */;
    %320 = shape_of(%var_946, dtype="int32") /* ty=Tensor[(3), int32] */;
    %321 = cast(%var_946, dtype="uint16") /* ty=Tensor[(7, 13, 15), uint16] */;
    %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %323 = bitwise_and(%321, %322) /* ty=Tensor[(7, 13, 15), uint16] */;
    %324 = cast(%323, dtype="float32") /* ty=Tensor[(7, 13, 15), float32] */;
    %325 = cast(%var_971, dtype="float64") /* ty=Tensor[(540), float64] */;
    %326 = reshape(%325, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
    %327 = @func_940(%326) /* ty=(Tensor[(9, 4, 15), float64],) */;
    %328 = cast(%323, dtype="float32") /* ty=Tensor[(7, 13, 15), float32] */;
    %329 = cast(%var_977, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %330 = cast(meta[relay.Constant][24] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %331 = cast(%var_977, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %332 = cast(%var_977, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
    %333 = reshape(%329, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %334 = reshape(%330, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %335 = reshape(%331, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float64] */;
    %336 = reshape(%332, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), uint32] */;
    %337 = @func_661(%333, %334, %335, %336) /* ty=(Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(15, 16, 8), uint8], Tensor[(15, 16, 8), bool], Tensor[(4, 3, 7), float64]) */;
    %338 = cast(meta[relay.Constant][24] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %339 = %337.4;
    %340 = cast(%339, dtype="uint8") /* ty=Tensor[(4, 3, 7), uint8] */;
    %341 = reshape(%338, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
    %342 = reshape(%340, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
    %343 = @func_90(%341, %342) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
    %344 = %343.1;
    %345 = cast(%344, dtype="uint8") /* ty=Tensor[(15, 16, 9), uint8] */;
    %346 = cast(%339, dtype="uint8") /* ty=Tensor[(4, 3, 7), uint8] */;
    %347 = reshape(%345, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %348 = reshape(%346, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %349 = @func_432(%347, %348) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
    %350 = cast(%var_971, dtype="float32") /* ty=Tensor[(540), float32] */;
    %351 = log(%324) /* ty=Tensor[(7, 13, 15), float32] */;
    %352 = %327.0;
    %353 = log2(%328) /* ty=Tensor[(7, 13, 15), float32] */;
    %354 = %349.1;
    %355 = erf(%350) /* ty=Tensor[(540), float32] */;
    (%351, %352, %353, %339, %var_977, meta[relay.Constant][24] /* ty=Tensor[(2160), uint8] */, %344, %354, %355)
  };
  %356(%var_992, %var_993, %var_994, %var_995) /* ty=(Tensor[(7, 13, 15), float32], Tensor[(9, 4, 15), float64], Tensor[(7, 13, 15), float32], Tensor[(4, 3, 7), float64], Tensor[(1920), float64], Tensor[(2160), uint8], Tensor[(15, 16, 9), bool], Tensor[(4, 3, 7), uint8], Tensor[(540), float32]) */
}

def @func_5495() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %357 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %358 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
  (%357, %358)
}

def @func_4447(%var_4396: Tensor[(12, 7, 14), float32]) -> Tensor[(12, 7, 14), bool] {
  %359 = cast(%var_4396, dtype="float32") /* ty=Tensor[(12, 7, 14), float32] */;
  %360 = acos(%359) /* ty=Tensor[(12, 7, 14), float32] */;
  %361 = cast(%360, dtype="int64") /* ty=Tensor[(12, 7, 14), int64] */;
  %362 = shape_of(%var_4396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%var_4396, dtype="int64") /* ty=Tensor[(12, 7, 14), int64] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %365 = subtract(%363, %364) /* ty=Tensor[(12, 7, 14), int64] */;
  %366 = cast(%365, dtype="bool") /* ty=Tensor[(12, 7, 14), bool] */;
  %367 = shape_of(%360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%360, dtype="bool") /* ty=Tensor[(12, 7, 14), bool] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%368, %369) /* ty=Tensor[(12, 7, 14), bool] */
}

def @func_4933(%var_4902: Tensor[(16), uint16]) -> (Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(16, 15, 1), uint16], Tensor[(16), uint16], Tensor[(240), uint16], Tensor[(864), uint16]) {
  %370 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
  %371 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
  %372 = cast(%var_4902, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %373 = cast(meta[relay.Constant][25] /* ty=Tensor[(240), uint16] */, dtype="uint16") /* ty=Tensor[(240), uint16] */;
  %374 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), uint16] */, dtype="uint16") /* ty=Tensor[(864), uint16] */;
  %375 = reshape(%372, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), uint16] */;
  %376 = reshape(%373, newshape=[16, 15, 1]) /* ty=Tensor[(16, 15, 1), uint16] */;
  %377 = reshape(%374, newshape=[16, 6, 9]) /* ty=Tensor[(16, 6, 9), uint16] */;
  %378 = @func_2578(%375, %376, %377) /* ty=(Tensor[(16, 15, 1), uint16], Tensor[(16, 6, 9), uint32]) */;
  %379 = %370.0;
  %380 = %371.3;
  %381 = %378.0;
  (%379, %380, %381, %var_4902, meta[relay.Constant][25] /* ty=Tensor[(240), uint16] */, meta[relay.Constant][26] /* ty=Tensor[(864), uint16] */)
}

def @func_6615() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %390 = fn () -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
    %382 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %383 = @func_2698() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %384 = @func_2719() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
    %385 = %384.0;
    %386 = cast(%385, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %387 = %382.0;
    %388 = %383.0;
    %389 = cos(%386) /* ty=Tensor[(2, 11, 8), float64] */;
    (%387, %388, %389)
  };
  %390() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_4450(%var_4448: Tensor[(12, 7, 14), float32]) -> Tensor[(12, 7, 14), bool] {
  @func_4447(%var_4448) /* ty=Tensor[(12, 7, 14), bool] */
}

def @func_1698() -> (Tensor[(2, 11, 8), float64],) {
  %391 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  (%391,)
}

def @func_2700() -> (Tensor[(2, 11, 8), float64],) {
  @func_2698() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_2719() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %392 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %393 = %392.0;
  %394 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
  (%393, %394)
}

def @func_2360(%var_2337: int64, %var_2339: Tensor[(16), float32], %var_2340: Tensor[(1, 1365), uint16]) -> (Tensor[(2, 11, 8), int8], Tensor[(1920), float64], int64, Tensor[(240), int64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64]) {
  %395 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %396 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 11, 8), float64] */, dtype="int8") /* ty=Tensor[(2, 11, 8), int8] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%395, dtype="int8") /* ty=Tensor[(2, 11, 8), int8] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %400 = cast(%var_2337, dtype="int64") /* ty=int64 */;
  %401 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), int64] */, dtype="int64") /* ty=Tensor[(240), int64] */;
  %402 = cast(%var_2339, dtype="float32") /* ty=Tensor[(16), float32] */;
  %403 = cast(%var_2340, dtype="uint16") /* ty=Tensor[(1, 1365), uint16] */;
  %404 = cast(meta[relay.Constant][29] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %405 = reshape(%400, newshape=[]) /* ty=int64 */;
  %406 = reshape(%401, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), int64] */;
  %407 = reshape(%402, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %408 = reshape(%403, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), uint16] */;
  %409 = reshape(%404, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %410 = @func_2124(%405, %406, %407, %408, %409) /* ty=(Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %411 = cast(meta[relay.Constant][29] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %412 = right_shift(%398, %399) /* ty=Tensor[(2, 11, 8), int8] */;
  %413 = %410.1;
  %414 = cosh(%411) /* ty=Tensor[(1920), float64] */;
  (%412, %413, %var_2337, meta[relay.Constant][28] /* ty=Tensor[(240), int64] */, %var_2339, %var_2340, %414)
}

def @func_4352(%var_4336: Tensor[(200), uint32], %var_4337: Tensor[(3600), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64]) {
  %415 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %416 = cast(%var_4336, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %417 = cast(%var_4337, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %418 = cast(meta[relay.Constant][30] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %419 = cast(meta[relay.Constant][31] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %420 = reshape(%416, newshape=[4, 5, 10]) /* ty=Tensor[(4, 5, 10), uint32] */;
  %421 = reshape(%417, newshape=[3600]) /* ty=Tensor[(3600), float32] */;
  %422 = reshape(%418, newshape=[455, 3]) /* ty=Tensor[(455, 3), uint16] */;
  %423 = reshape(%419, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %424 = @func_3738(%420, %421, %422, %423) /* ty=(Tensor[(4, 5, 10), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(455, 3), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(4, 5, 10), int32]) */;
  %425 = @func_2841() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %426 = %415.0;
  %427 = %424.6;
  %428 = %425.0;
  (%426, %427, %var_4336, %var_4337, meta[relay.Constant][30] /* ty=Tensor[(1365), uint16] */, meta[relay.Constant][31] /* ty=Tensor[(1920), float64] */, %428)
}

def @func_5845(%var_5844: Tensor[(1176), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(1176), bool]) {
  %443 = fn (%var_5813: Tensor[(1176), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(1176), bool]) {
    %429 = @func_3376() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %430 = cast(%var_5813, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %431 = reshape(%430, newshape=[1176]) /* ty=Tensor[(1176), float32] */;
    %432 = @func_4868(%431) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(1176), float32]) */;
    %433 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %434 = cast(meta[relay.Constant][32] /* ty=Tensor[(1176), float32] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %435 = shape_of(%var_5813, dtype="int32") /* ty=Tensor[(1), int32] */;
    %436 = cast(%var_5813, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?), bool] */;
    %438 = %429.0;
    %439 = %432.1;
    %440 = @func_4120() /* ty=Tensor[(2, 11, 8), float64] */;
    %441 = %433.0;
    %442 = logical_and(%436, %437) /* ty=Tensor[(1176), bool] */;
    (%438, %439, %440, %441, %442)
  };
  %443(%var_5844) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(12, 7, 14), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(1176), bool]) */
}

def @func_2841() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %444 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %445 = %444.0;
  %446 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  (%445, %446)
}

def @func_2650() -> (Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) {
  %461 = fn () -> (Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) {
    %447 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 7, 13), int16] */, dtype="bool") /* ty=Tensor[(5, 7, 13), bool] */;
    %448 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(5, 7, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %449 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 7, 13), int16] */, dtype="bool") /* ty=Tensor[(5, 7, 13), bool] */;
    %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %451 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %452 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %453 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 7, 13), int16] */, dtype="int64") /* ty=Tensor[(5, 7, 13), int64] */;
    %454 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(5, 7, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %455 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 7, 13), int16] */, dtype="int64") /* ty=Tensor[(5, 7, 13), int64] */;
    %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %457 = not_equal(%449, %450) /* ty=Tensor[(5, 7, 13), bool] */;
    %458 = %451.0;
    %459 = %452.0;
    %460 = add(%455, %456) /* ty=Tensor[(5, 7, 13), int64] */;
    (%457, %458, %459, %460)
  };
  %461() /* ty=(Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */
}

def @func_3635(%var_3634: Tensor[(7, 15, 6), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(7, 15, 6), bool], Tensor[(5, 7, 13), bool]) {
  %475 = fn (%var_3609: Tensor[(7, 15, 6), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(7, 15, 6), bool], Tensor[(5, 7, 13), bool]) {
    %462 = cast(meta[relay.Constant][35] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %463 = reshape(%462, newshape=[2, 11, 8]) /* ty=Tensor[(2, 11, 8), float64] */;
    %464 = @func_3273(%463) /* ty=(Tensor[(2, 11, 8), float64],) */;
    %465 = cast(%var_3609, dtype="float64") /* ty=Tensor[(7, 15, 6), float64] */;
    %466 = sigmoid(%465) /* ty=Tensor[(7, 15, 6), float64] */;
    %467 = cast(%var_3609, dtype="bool") /* ty=Tensor[(7, 15, 6), bool] */;
    %468 = shape_of(%466, dtype="int32") /* ty=Tensor[(3), int32] */;
    %469 = cast(%466, dtype="bool") /* ty=Tensor[(7, 15, 6), bool] */;
    %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %471 = @func_2649() /* ty=(Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
    %472 = %464.0;
    %473 = greater(%469, %470) /* ty=Tensor[(7, 15, 6), bool] */;
    %474 = %471.0;
    (%472, meta[relay.Constant][35] /* ty=Tensor[(176), float64] */, %473, %474)
  };
  %475(%var_3634) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(7, 15, 6), bool], Tensor[(5, 7, 13), bool]) */
}

def @func_2261(%var_2257: Tensor[(540), float64], %var_2258: Tensor[(1920), float64], %var_2259: Tensor[(84), uint8], %var_2260: Tensor[(2, 11, 8), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(60, 36), uint8], Tensor[(2160), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(2, 11, 8), bool]) {
  %507 = fn (%var_2230: Tensor[(540), float64], %var_2231: Tensor[(1920), float64], %var_2245: Tensor[(84), uint8], %var_2248: Tensor[(2, 11, 8), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(60, 36), uint8], Tensor[(2160), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(2, 11, 8), bool]) {
    %476 = cast(meta[relay.Constant][36] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %477 = cast(meta[relay.Constant][36] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %478 = cast(%var_2230, dtype="float64") /* ty=Tensor[(540), float64] */;
    %479 = cast(%var_2231, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %480 = reshape(%476, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint16] */;
    %481 = reshape(%477, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), uint16] */;
    %482 = reshape(%478, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %483 = reshape(%479, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %484 = @func_991(%480, %481, %482, %483) /* ty=(Tensor[(7, 13, 15), float32], Tensor[(9, 4, 15), float64], Tensor[(7, 13, 15), float32], Tensor[(4, 3, 7), float64], Tensor[(1920), float64], Tensor[(2160), uint8], Tensor[(15, 16, 9), bool], Tensor[(4, 3, 7), uint8], Tensor[(540), float32]) */;
    %485 = %484.0;
    %486 = cast(%485, dtype="uint16") /* ty=Tensor[(7, 13, 15), uint16] */;
    %487 = cast(%var_2231, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %488 = cast(meta[relay.Constant][37] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %489 = reshape(%486, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
    %490 = reshape(%487, newshape=[96, 20]) /* ty=Tensor[(96, 20), float64] */;
    %491 = reshape(%488, newshape=[60, 36]) /* ty=Tensor[(60, 36), uint8] */;
    %492 = @func_1641(%489, %490, %491) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(96, 20), float64], Tensor[(2160), uint8], Tensor[(60, 36), uint8], Tensor[(84), uint8], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) */;
    %493 = cast(meta[relay.Constant][37] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %494 = cast(%var_2245, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %495 = reshape(%493, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %496 = reshape(%494, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %497 = @func_432(%495, %496) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
    %498 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
    %499 = cast(%var_2248, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
    %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
    %501 = cast(%498, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
    %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %503 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
    %504 = %492.6;
    %505 = %497.2;
    %506 = logical_and(%501, %502) /* ty=Tensor[(2, 11, 8), bool] */;
    (%503, %485, meta[relay.Constant][36] /* ty=Tensor[(1365), uint16] */, %var_2230, %var_2231, %504, meta[relay.Constant][37] /* ty=Tensor[(2160), uint8] */, %505, %var_2245, %506)
  };
  %507(%var_2257, %var_2258, %var_2259, %var_2260) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(60, 36), uint8], Tensor[(2160), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(2, 11, 8), bool]) */
}

def @func_5126() -> Tensor[(2, 11, 8), float64] {
  %509 = fn () -> Tensor[(2, 11, 8), float64] {
    %508 = @func_4092() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) */;
    %508.1
  };
  %509() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_4885() -> (Tensor[(5, 7, 13), int64],) {
  @func_4883() /* ty=(Tensor[(5, 7, 13), int64],) */
}

def @func_6676() -> Tensor[(2, 11, 8), float64] {
  @func_6674() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_435(%var_433: Tensor[(2160), uint8], %var_434: Tensor[(84), uint8]) -> (Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) {
  %518 = fn (%var_424: Tensor[(2160), uint8], %var_425: Tensor[(84), uint8]) -> (Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) {
    %510 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 2, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 2, 5), float32] */;
    %511 = cast(%var_424, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %512 = cast(%var_425, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %513 = reshape(%511, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint8] */;
    %514 = reshape(%512, newshape=[4, 3, 7]) /* ty=Tensor[(4, 3, 7), uint8] */;
    %515 = @func_90(%513, %514) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */;
    %516 = log(%510) /* ty=Tensor[(14, 2, 5), float32] */;
    %517 = %515.0;
    (%516, %517, %var_424, %var_425)
  };
  %518(%var_433, %var_434) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */
}

def @func_2478(%var_2477: Tensor[(2, 11, 8), float64]) -> (Tensor[(2, 11, 8), int16], Tensor[(2, 11, 8), float32]) {
  %528 = fn (%var_2459: Tensor[(2, 11, 8), float64]) -> (Tensor[(2, 11, 8), int16], Tensor[(2, 11, 8), float32]) {
    %519 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %520 = %519.0;
    %521 = cast(%var_2459, dtype="int16") /* ty=Tensor[(2, 11, 8), int16] */;
    %522 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
    %523 = cast(%520, dtype="int16") /* ty=Tensor[(2, 11, 8), int16] */;
    %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %525 = cast(%var_2459, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
    %526 = logical_xor(%523, %524) /* ty=Tensor[(2, 11, 8), int16] */;
    %527 = acosh(%525) /* ty=Tensor[(2, 11, 8), float32] */;
    (%526, %527)
  };
  %528(%var_2477) /* ty=(Tensor[(2, 11, 8), int16], Tensor[(2, 11, 8), float32]) */
}

def @func_4011() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) {
  @func_4009() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */
}

def @func_2721() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  @func_2719() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_4029() -> (Tensor[(2, 11, 8), float64],) {
  @func_4027() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_4578(%var_4577: Tensor[(2, 11, 8), float32]) -> (Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float32]) {
  %539 = fn (%var_4524: Tensor[(2, 11, 8), float32]) -> (Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float32]) {
    %529 = @func_3923() /* ty=Tensor[(2, 11, 8), float32] */;
    %530 = cast(%var_4524, dtype="uint32") /* ty=Tensor[(2, 11, 8), uint32] */;
    %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
    %532 = cast(%529, dtype="uint32") /* ty=Tensor[(2, 11, 8), uint32] */;
    %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %534 = cast(%var_4524, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
    %535 = cosh(%534) /* ty=Tensor[(2, 11, 8), float32] */;
    %536 = cast(%535, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
    %537 = multiply(%532, %533) /* ty=Tensor[(2, 11, 8), uint32] */;
    %538 = asin(%536) /* ty=Tensor[(2, 11, 8), float32] */;
    (%537, %538)
  };
  %539(%var_4577) /* ty=(Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float32]) */
}

def @func_2900() -> (Tensor[(2, 11, 8), float64],) {
  %540 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %541 = %540.0;
  (%541,)
}

def @func_3605() -> (Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64]) {
  @func_3603() /* ty=(Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64]) */
}

def @func_4487() -> Tensor[(2, 11, 8), float64] {
  @func_4485() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_6540(%var_6536: Tensor[(208), float64], %var_6537: Tensor[(455, 3), uint16], %var_6538: Tensor[(200), uint32], %var_6539: Tensor[(4, 60), int64]) -> (Tensor[(2, 11, 8), float64], Tensor[(4, 480), float64], Tensor[(16), float64], Tensor[(208), float64], Tensor[(455, 3), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(9, 4, 15), float64], Tensor[(1365), uint16], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1920), float64], int64, Tensor[(4, 60), int64]) {
  %580 = fn (%var_6435: Tensor[(208), float64], %var_6436: Tensor[(455, 3), uint16], %var_6490: Tensor[(200), uint32], %var_6530: Tensor[(4, 60), int64]) -> (Tensor[(2, 11, 8), float64], Tensor[(4, 480), float64], Tensor[(16), float64], Tensor[(208), float64], Tensor[(455, 3), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(9, 4, 15), float64], Tensor[(1365), uint16], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1920), float64], int64, Tensor[(4, 60), int64]) {
    %542 = @func_4009() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
    %543 = cast(meta[relay.Constant][39] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %544 = cast(%var_6435, dtype="float64") /* ty=Tensor[(208), float64] */;
    %545 = cast(%var_6436, dtype="uint16") /* ty=Tensor[(455, 3), uint16] */;
    %546 = reshape(%543, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float64] */;
    %547 = reshape(%544, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
    %548 = reshape(%545, newshape=[91, 15]) /* ty=Tensor[(91, 15), uint16] */;
    %549 = @func_2293(%546, %547, %548) /* ty=(Tensor[(2, 13, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(4, 480), float64]) */;
    %550 = cast(%var_6436, dtype="float64") /* ty=Tensor[(455, 3), float64] */;
    %551 = cast(meta[relay.Constant][40] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %552 = reshape(%551, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %553 = @func_6288(%552) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32]) */;
    %554 = %553.1;
    %555 = cast(%554, dtype="float64") /* ty=Tensor[(540), float64] */;
    %556 = reshape(%555, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
    %557 = @func_940(%556) /* ty=(Tensor[(9, 4, 15), float64],) */;
    %558 = cast(%var_6490, dtype="uint32") /* ty=Tensor[(200), uint32] */;
    %559 = cast(meta[relay.Constant][41] /* ty=Tensor[(3600), float32] */, dtype="float32") /* ty=Tensor[(3600), float32] */;
    %560 = reshape(%558, newshape=[200]) /* ty=Tensor[(200), uint32] */;
    %561 = reshape(%559, newshape=[3600]) /* ty=Tensor[(3600), float32] */;
    %562 = @func_4352(%560, %561) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64]) */;
    %563 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %564 = cast(%var_6530, dtype="int64") /* ty=Tensor[(4, 60), int64] */;
    %565 = cast(meta[relay.Constant][39] /* ty=Tensor[(16), float64] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %566 = %562.4;
    %567 = cast(%566, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %568 = %549.4;
    %569 = cast(%568, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
    %570 = reshape(%563, newshape=[]) /* ty=int64 */;
    %571 = reshape(%564, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), int64] */;
    %572 = reshape(%565, newshape=[16]) /* ty=Tensor[(16), float32] */;
    %573 = reshape(%567, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), uint16] */;
    %574 = reshape(%569, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %575 = @func_2124(%570, %571, %572, %573, %574) /* ty=(Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
    %576 = %542.0;
    %577 = asinh(%550) /* ty=Tensor[(455, 3), float64] */;
    %578 = %557.0;
    %579 = %575.4;
    (%576, %568, meta[relay.Constant][39] /* ty=Tensor[(16), float64] */, %var_6435, %577, %554, meta[relay.Constant][40] /* ty=Tensor[(72), float32] */, %578, %566, %var_6490, meta[relay.Constant][41] /* ty=Tensor[(3600), float32] */, %579, 2 /* ty=int64 */, %var_6530)
  };
  %580(%var_6536, %var_6537, %var_6538, %var_6539) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(4, 480), float64], Tensor[(16), float64], Tensor[(208), float64], Tensor[(455, 3), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(9, 4, 15), float64], Tensor[(1365), uint16], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1920), float64], int64, Tensor[(4, 60), int64]) */
}

def @func_7112() -> (Tensor[(2, 11, 8), float64],) {
  %583 = fn () -> (Tensor[(2, 11, 8), float64],) {
    %581 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %582 = %581.0;
    (%582,)
  };
  %583() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_4289(%var_4287: Tensor[(72), float32], %var_4288: Tensor[(540), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1365), uint16]) {
  @func_4285(%var_4287, %var_4288) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1365), uint16]) */
}

def @func_6369() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  @func_6367() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_3603() -> (Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64]) {
  %584 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
  %585 = %584.2;
  %586 = cast(%585, dtype="float32") /* ty=Tensor[(2, 960), float32] */;
  %587 = @func_3376() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %588 = exp(%586) /* ty=Tensor[(2, 960), float32] */;
  %589 = %587.0;
  (%588, %589)
}

def @func_6124(%var_6085: Tensor[(16), float32], %var_6086: Tensor[(1, 1365), uint16]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), bool], Tensor[(704), float64]) {
  %590 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %591 = cast(%var_6085, dtype="float32") /* ty=Tensor[(16), float32] */;
  %592 = cast(%var_6086, dtype="uint16") /* ty=Tensor[(1, 1365), uint16] */;
  %593 = cast(meta[relay.Constant][42] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %594 = reshape(%591, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
  %595 = reshape(%592, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %596 = reshape(%593, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %597 = @func_1321(%594, %595, %596) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
  %598 = cast(%var_6085, dtype="float32") /* ty=Tensor[(16), float32] */;
  %599 = cast(meta[relay.Constant][42] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %600 = cast(meta[relay.Constant][43] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %601 = reshape(%598, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %602 = reshape(%599, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %603 = reshape(%600, newshape=[11, 4, 16]) /* ty=Tensor[(11, 4, 16), float64] */;
  %604 = @func_1410(%601, %602, %603) /* ty=(Tensor[(11, 4, 16), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(7, 195), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), float64], Tensor[(11, 4, 16), bool]) */;
  %605 = @func_5556() /* ty=Tensor[(2, 11, 8), float64] */;
  %606 = %590.0;
  %607 = %597.3;
  %608 = %604.6;
  (%605, %606, %607, %var_6085, %var_6086, meta[relay.Constant][42] /* ty=Tensor[(1920), float64] */, %608, meta[relay.Constant][43] /* ty=Tensor[(704), float64] */)
}

def @func_3377() -> (Tensor[(2, 11, 8), float64],) {
  %611 = fn () -> (Tensor[(2, 11, 8), float64],) {
    %609 = @func_3030() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
    %610 = %609.0;
    (%610,)
  };
  %611() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_6419(%var_6418: Tensor[(30, 6), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(10, 216), uint8], Tensor[(84, 1), uint8], Tensor[(30, 6), int8]) {
  %629 = fn (%var_6408: Tensor[(30, 6), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(10, 216), uint8], Tensor[(84, 1), uint8], Tensor[(30, 6), int8]) {
    %612 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %613 = cast(meta[relay.Constant][44] /* ty=Tensor[(30, 6), float64] */, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
    %614 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 216), uint8] */, dtype="uint8") /* ty=Tensor[(10, 216), uint8] */;
    %615 = cast(meta[relay.Constant][46] /* ty=Tensor[(84, 1), uint8] */, dtype="uint8") /* ty=Tensor[(84, 1), uint8] */;
    %616 = cast(meta[relay.Constant][44] /* ty=Tensor[(30, 6), float64] */, dtype="float64") /* ty=Tensor[(30, 6), float64] */;
    %617 = reshape(%613, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
    %618 = reshape(%614, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %619 = reshape(%615, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %620 = reshape(%616, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
    %621 = @func_1899(%617, %618, %619, %620) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) */;
    %622 = cast(%var_6408, dtype="int8") /* ty=Tensor[(30, 6), int8] */;
    %623 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(30, 6), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %624 = cast(meta[relay.Constant][44] /* ty=Tensor[(30, 6), float64] */, dtype="int8") /* ty=Tensor[(30, 6), int8] */;
    %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %626 = %612.0;
    %627 = %621.2;
    %628 = multiply(%624, %625) /* ty=Tensor[(30, 6), int8] */;
    (%626, %627, meta[relay.Constant][45] /* ty=Tensor[(10, 216), uint8] */, meta[relay.Constant][46] /* ty=Tensor[(84, 1), uint8] */, %628)
  };
  %629(%var_6418) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(10, 216), uint8], Tensor[(84, 1), uint8], Tensor[(30, 6), int8]) */
}

def @func_2199(%var_2197: Tensor[(540), float64]) -> (Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(2, 11, 8), float32]) {
  @func_2196(%var_2197) /* ty=(Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(2, 11, 8), float32]) */
}

def @func_2583(%var_2580: Tensor[(16, 1, 1), uint16], %var_2581: Tensor[(16, 15, 1), uint16], %var_2582: Tensor[(16, 6, 9), uint16]) -> (Tensor[(16, 15, 1), uint16], Tensor[(16, 6, 9), uint32]) {
  @func_2578(%var_2580, %var_2581, %var_2582) /* ty=(Tensor[(16, 15, 1), uint16], Tensor[(16, 6, 9), uint32]) */
}

def @func_3571(%var_3570: Tensor[(540), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) {
  %642 = fn (%var_3561: Tensor[(540), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) {
    %630 = @func_2853() /* ty=Tensor[(2, 11, 8), float64] */;
    %631 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
    %632 = cast(%631, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %633 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
    %634 = cast(%630, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %636 = cast(%var_3561, dtype="float64") /* ty=Tensor[(540), float64] */;
    %637 = reshape(%636, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
    %638 = @func_940(%637) /* ty=(Tensor[(9, 4, 15), float64],) */;
    %639 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
    %640 = floor_mod(%634, %635) /* ty=Tensor[(2, 11, 8), float64] */;
    %641 = %638.0;
    (%639, %640, %641, %var_3561)
  };
  %642(%var_3570) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) */
}

def @func_3284() -> Tensor[(2, 11, 8), float64] {
  %643 = fn () -> Tensor[(2, 11, 8), float64] {
    @func_2853() /* ty=Tensor[(2, 11, 8), float64] */
  };
  %643() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_2854() -> Tensor[(2, 11, 8), float64] {
  %645 = fn () -> Tensor[(2, 11, 8), float64] {
    %644 = @func_2444() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %644.0
  };
  %645() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_3030() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %646 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %647 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
  (%646, %647)
}

def @func_4092() -> (Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) {
  %648 = @func_4009() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %649 = %648.0;
  %650 = cast(%649, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %651 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %652 = log10(%650) /* ty=Tensor[(2, 11, 8), float32] */;
  %653 = %651.0;
  (%652, %653)
}

def @func_2130(%var_2125: int64, %var_2126: Tensor[(5, 16, 3), int64], %var_2127: Tensor[(16), float32], %var_2128: Tensor[(1365, 1), uint16], %var_2129: Tensor[(1920), float64]) -> (Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %686 = fn (%var_2057: int64, %var_2058: Tensor[(5, 16, 3), int64], %var_2087: Tensor[(16), float32], %var_2088: Tensor[(1365, 1), uint16], %var_2106: Tensor[(1920), float64]) -> (Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
    %654 = cast(%var_2057, dtype="int64") /* ty=int64 */;
    %655 = cast(%var_2058, dtype="int64") /* ty=Tensor[(5, 16, 3), int64] */;
    %656 = cast(%var_2087, dtype="float32") /* ty=Tensor[(16), float32] */;
    %657 = cast(%var_2088, dtype="uint16") /* ty=Tensor[(1365, 1), uint16] */;
    %658 = cast(meta[relay.Constant][47] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %659 = reshape(%656, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
    %660 = reshape(%657, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
    %661 = reshape(%658, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %662 = @func_1321(%659, %660, %661) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
    %663 = cast(%var_2106, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %664 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(1920), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %665 = cast(meta[relay.Constant][47] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?), float64] */;
    %667 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %669 = log2(%668) /* ty=Tensor[(2, 11, 8), float64] */;
    %670 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 11, 8), float64] */, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
    %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(3), int32] */;
    %672 = cast(%669, dtype="bool") /* ty=Tensor[(2, 11, 8), bool] */;
    %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %674 = greater(%672, %673) /* ty=Tensor[(2, 11, 8), bool] */;
    %675 = cast(%674, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %676 = erf(%675) /* ty=Tensor[(2, 11, 8), float64] */;
    %677 = cast(%667, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %678 = shape_of(%676, dtype="int32") /* ty=Tensor[(3), int32] */;
    %679 = cast(%676, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %681 = left_shift(%654, %655) /* ty=Tensor[(5, 16, 3), int64] */;
    %682 = %662.4;
    %683 = divide(%665, %666) /* ty=Tensor[(1920), float64] */;
    %684 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
    %685 = mod(%679, %680) /* ty=Tensor[(2, 11, 8), float64] */;
    (%681, %682, %var_2087, %var_2088, %683, %684, %685)
  };
  %686(%var_2125, %var_2126, %var_2127, %var_2128, %var_2129) /* ty=(Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_2445() -> (Tensor[(2, 11, 8), float64],) {
  %688 = fn () -> (Tensor[(2, 11, 8), float64],) {
    %687 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
    (%687,)
  };
  %688() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_4179(%var_4176: Tensor[(208), float64], %var_4177: Tensor[(1365), uint16]) -> (Tensor[(2, 11, 8), float64], Tensor[(91, 15), uint16], Tensor[(4, 4), float64], Tensor[(208), float64], Tensor[(1365), uint16]) {
  %689 = @func_3603() /* ty=(Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64]) */;
  %690 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 4), float64] */;
  %691 = cast(%var_4176, dtype="float64") /* ty=Tensor[(208), float64] */;
  %692 = cast(%var_4177, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %693 = reshape(%690, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float64] */;
  %694 = reshape(%691, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
  %695 = reshape(%692, newshape=[91, 15]) /* ty=Tensor[(91, 15), uint16] */;
  %696 = @func_2293(%693, %694, %695) /* ty=(Tensor[(2, 13, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(4, 480), float64]) */;
  %697 = %689.1;
  %698 = %696.3;
  (%697, %698, meta[relay.Constant][49] /* ty=Tensor[(4, 4), float64] */, %var_4176, %var_4177)
}

def @func_5557() -> Tensor[(2, 11, 8), float64] {
  %700 = fn () -> Tensor[(2, 11, 8), float64] {
    %699 = @func_4092() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) */;
    %699.1
  };
  %700() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_6049() -> (Tensor[(2, 11, 8), float64],) {
  %703 = fn () -> (Tensor[(2, 11, 8), float64],) {
    %701 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %702 = %701.0;
    (%702,)
  };
  %703() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_6674() -> Tensor[(2, 11, 8), float64] {
  @func_2853() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_5497() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  @func_5495() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_1782() -> Tensor[(2, 11, 8), float64] {
  %704 = fn () -> Tensor[(2, 11, 8), float64] {
    @func_1760() /* ty=Tensor[(2, 11, 8), float64] */
  };
  %704() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_5530() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %709 = fn () -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
    %705 = @func_5314() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %706 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %707 = %705.0;
    %708 = %706.0;
    (%707, %708)
  };
  %709() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_5005(%var_5004: Tensor[(72), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(540), float64]) {
  %718 = fn (%var_5000: Tensor[(72), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(540), float64]) {
    %710 = @func_3376() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %711 = cast(%var_5000, dtype="float32") /* ty=Tensor[(72), float32] */;
    %712 = cast(meta[relay.Constant][50] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %713 = reshape(%711, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %714 = reshape(%712, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %715 = @func_4285(%713, %714) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1365), uint16]) */;
    %716 = %710.0;
    %717 = %715.3;
    (%716, %717, %var_5000, meta[relay.Constant][50] /* ty=Tensor[(540), float64] */)
  };
  %718(%var_5004) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32], Tensor[(540), float64]) */
}

def @func_5080(%var_5079: Tensor[(21, 4), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float32], Tensor[(12, 7, 14), bool], Tensor[(6, 196), float32], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(21, 4), uint8]) {
  %731 = fn (%var_5062: Tensor[(21, 4), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float32], Tensor[(12, 7, 14), bool], Tensor[(6, 196), float32], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(21, 4), uint8]) {
    %719 = @func_1693() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %720 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 196), float32] */, dtype="float32") /* ty=Tensor[(6, 196), float32] */;
    %721 = reshape(%720, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
    %722 = cast(meta[relay.Constant][52] /* ty=Tensor[(2160), uint8] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %723 = cast(%var_5062, dtype="uint8") /* ty=Tensor[(21, 4), uint8] */;
    %724 = reshape(%722, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %725 = reshape(%723, newshape=[42, 2]) /* ty=Tensor[(42, 2), uint8] */;
    %726 = @func_2796(%724, %725) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(42, 2), uint8]) */;
    %727 = %719.0;
    %728 = @func_3923() /* ty=Tensor[(2, 11, 8), float32] */;
    %729 = @func_4447(%721) /* ty=Tensor[(12, 7, 14), bool] */;
    %730 = %726.2;
    (%727, %728, %729, meta[relay.Constant][51] /* ty=Tensor[(6, 196), float32] */, %730, meta[relay.Constant][52] /* ty=Tensor[(2160), uint8] */, %var_5062)
  };
  %731(%var_5079) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float32], Tensor[(12, 7, 14), bool], Tensor[(6, 196), float32], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(21, 4), uint8]) */
}

def @func_3738(%var_3682: Tensor[(4, 5, 10), uint32], %var_3695: Tensor[(3600), float32], %var_3696: Tensor[(455, 3), uint16], %var_3697: Tensor[(1920), float64]) -> (Tensor[(4, 5, 10), uint32], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(455, 3), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(4, 5, 10), int32]) {
  %732 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 5, 1), uint32] */, dtype="uint32") /* ty=Tensor[(4, 5, 1), uint32] */;
  %733 = cast(%var_3682, dtype="uint32") /* ty=Tensor[(4, 5, 10), uint32] */;
  %734 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %735 = cast(%var_3695, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %736 = cast(%var_3696, dtype="uint16") /* ty=Tensor[(455, 3), uint16] */;
  %737 = cast(%var_3697, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %738 = reshape(%735, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
  %739 = reshape(%736, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %740 = reshape(%737, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %741 = @func_2049(%738, %739, %740) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %742 = %734.0;
  %743 = cast(%742, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %744 = reshape(%743, newshape=[2, 11, 8]) /* ty=Tensor[(2, 11, 8), float64] */;
  %745 = @func_3273(%744) /* ty=(Tensor[(2, 11, 8), float64],) */;
  %746 = cast(%var_3695, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %747 = cast(%var_3682, dtype="int32") /* ty=Tensor[(4, 5, 10), int32] */;
  %748 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 5, 1), uint32] */, dtype="int32") /* ty=Tensor[(4, 5, 1), int32] */;
  %749 = bitwise_or(%732, %733) /* ty=Tensor[(4, 5, 10), uint32] */;
  %750 = %741.5;
  %751 = %745.0;
  %752 = atan(%746) /* ty=Tensor[(3600), float32] */;
  %753 = multiply(%747, %748) /* ty=Tensor[(4, 5, 10), int32] */;
  (%749, %742, %750, %var_3696, %var_3697, %751, %752, %753)
}

def @func_5314() -> (Tensor[(2, 11, 8), float64],) {
  %754 = @func_5136() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %755 = %754.0;
  (%755,)
}

def @func_4356(%var_4354: Tensor[(200), uint32], %var_4355: Tensor[(3600), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64]) {
  @func_4352(%var_4354, %var_4355) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(200), uint32], Tensor[(3600), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_4883() -> (Tensor[(5, 7, 13), int64],) {
  %756 = @func_4009() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %757 = %756.3;
  (%757,)
}

def @func_5765() -> (Tensor[(2, 960), float64],) {
  %760 = fn () -> (Tensor[(2, 960), float64],) {
    %758 = @func_2412() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 960), float64], Tensor[(2160), uint8], Tensor[(15, 16, 8), float32]) */;
    %759 = %758.2;
    (%759,)
  };
  %760() /* ty=(Tensor[(2, 960), float64],) */
}

def @func_1641(%var_1618: Tensor[(1365), uint16], %var_1619: Tensor[(96, 20), float64], %var_1622: Tensor[(60, 36), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(96, 20), float64], Tensor[(2160), uint8], Tensor[(60, 36), uint8], Tensor[(84), uint8], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) {
  %761 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %762 = cast(%761, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  %763 = cast(meta[relay.Constant][54] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %764 = cast(%var_1618, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %765 = cast(%var_1619, dtype="float64") /* ty=Tensor[(96, 20), float64] */;
  %766 = reshape(%763, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
  %767 = reshape(%764, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %768 = reshape(%765, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %769 = @func_1321(%766, %767, %768) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
  %770 = cast(%var_1622, dtype="uint8") /* ty=Tensor[(60, 36), uint8] */;
  %771 = cast(meta[relay.Constant][55] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
  %772 = reshape(%770, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
  %773 = reshape(%771, newshape=[84]) /* ty=Tensor[(84), uint8] */;
  %774 = @func_432(%772, %773) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
  %775 = cast(meta[relay.Constant][56] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %776 = reshape(%775, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
  %777 = @func_940(%776) /* ty=(Tensor[(9, 4, 15), float64],) */;
  %778 = sin(%762) /* ty=Tensor[(2, 11, 8), float64] */;
  %779 = %769.4;
  %780 = %774.2;
  %781 = %777.0;
  (%778, %779, meta[relay.Constant][54] /* ty=Tensor[(16), float32] */, %var_1618, %var_1619, %780, %var_1622, meta[relay.Constant][55] /* ty=Tensor[(84), uint8] */, %781, meta[relay.Constant][56] /* ty=Tensor[(540), float64] */)
}

def @func_1832() -> Tensor[(2, 11, 8), float64] {
  @func_1830() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_2293(%var_2268: Tensor[(2, 1, 8), float64], %var_2269: Tensor[(2, 13, 8), float64], %var_2287: Tensor[(91, 15), uint16]) -> (Tensor[(2, 13, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(91, 15), uint16], Tensor[(4, 480), float64]) {
  %782 = cast(%var_2268, dtype="bool") /* ty=Tensor[(2, 1, 8), bool] */;
  %783 = cast(%var_2269, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
  %784 = cast(meta[relay.Constant][57] /* ty=Tensor[(3600), float32] */, dtype="float32") /* ty=Tensor[(3600), float32] */;
  %785 = cast(%var_2287, dtype="uint16") /* ty=Tensor[(91, 15), uint16] */;
  %786 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 480), float64] */, dtype="float64") /* ty=Tensor[(4, 480), float64] */;
  %787 = reshape(%784, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
  %788 = reshape(%785, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %789 = reshape(%786, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %790 = @func_2049(%787, %788, %789) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %791 = greater(%782, %783) /* ty=Tensor[(2, 13, 8), bool] */;
  %792 = %790.6;
  (%791, %792, meta[relay.Constant][57] /* ty=Tensor[(3600), float32] */, %var_2287, meta[relay.Constant][58] /* ty=Tensor[(4, 480), float64] */)
}

def @func_1904(%var_1900: Tensor[(10, 9, 2), float64], %var_1901: Tensor[(2160), uint8], %var_1902: Tensor[(84), uint8], %var_1903: Tensor[(10, 9, 2), float64]) -> (Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) {
  %816 = fn (%var_1835: Tensor[(10, 9, 2), float64], %var_1844: Tensor[(2160), uint8], %var_1845: Tensor[(84), uint8], %var_1847: Tensor[(10, 9, 2), float64]) -> (Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) {
    %793 = cast(%var_1844, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %794 = cast(%var_1845, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %795 = reshape(%793, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %796 = reshape(%794, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %797 = @func_432(%795, %796) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
    %798 = cast(%var_1835, dtype="float64") /* ty=Tensor[(10, 9, 2), float64] */;
    %799 = erf(%798) /* ty=Tensor[(10, 9, 2), float64] */;
    %800 = cast(%var_1847, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
    %801 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
    %802 = cast(%799, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
    %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %804 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %805 = cast(%799, dtype="float32") /* ty=Tensor[(10, 9, 2), float32] */;
    %806 = cast(%799, dtype="float64") /* ty=Tensor[(10, 9, 2), float64] */;
    %807 = atan(%806) /* ty=Tensor[(10, 9, 2), float64] */;
    %808 = cast(%807, dtype="float32") /* ty=Tensor[(10, 9, 2), float32] */;
    %809 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %810 = %797.1;
    %811 = logical_or(%802, %803) /* ty=Tensor[(10, 9, 2), bool] */;
    %812 = %804.0;
    %813 = asinh(%805) /* ty=Tensor[(10, 9, 2), float32] */;
    %814 = log(%808) /* ty=Tensor[(10, 9, 2), float32] */;
    %815 = %809.0;
    (%810, %var_1844, %var_1845, %811, %812, %813, %814, %815)
  };
  %816(%var_1900, %var_1901, %var_1902, %var_1903) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) */
}

def @func_6571(%var_6570: Tensor[(3, 10, 1), float64]) -> (Tensor[(3, 10, 1), float64], Tensor[(2, 11, 8), float64]) {
  %821 = fn (%var_6542: Tensor[(3, 10, 1), float64]) -> (Tensor[(3, 10, 1), float64], Tensor[(2, 11, 8), float64]) {
    %817 = cast(%var_6542, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
    %818 = @func_2719() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
    %819 = acos(%817) /* ty=Tensor[(3, 10, 1), float64] */;
    %820 = %818.1;
    (%819, %820)
  };
  %821(%var_6570) /* ty=(Tensor[(3, 10, 1), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_6801() -> Tensor[(2, 11, 8), float64] {
  %823 = fn () -> Tensor[(2, 11, 8), float64] {
    %822 = @func_4009() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
    %822.2
  };
  %823() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_942(%var_941: Tensor[(9, 4, 15), float64]) -> (Tensor[(9, 4, 15), float64],) {
  %826 = fn (%var_933: Tensor[(9, 4, 15), float64]) -> (Tensor[(9, 4, 15), float64],) {
    %824 = cast(%var_933, dtype="float64") /* ty=Tensor[(9, 4, 15), float64] */;
    %825 = exp(%824) /* ty=Tensor[(9, 4, 15), float64] */;
    (%825,)
  };
  %826(%var_941) /* ty=(Tensor[(9, 4, 15), float64],) */
}

def @func_6367() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %827 = @func_6048() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %828 = @func_5740() /* ty=Tensor[(2, 11, 8), float64] */;
  %829 = %827.0;
  (%828, %829)
}

def @func_3902(%var_3834: Tensor[(6, 3, 4), float32], %var_3862: Tensor[(540), float64], %var_3883: Tensor[(2, 1800), float32], %var_3884: Tensor[(1365), uint16]) -> (Tensor[(6, 3, 4), float32], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(6, 3, 4), float32], Tensor[(1365), uint16], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32]) {
  %830 = cast(%var_3834, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %831 = cast(meta[relay.Constant][59] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %832 = reshape(%831, newshape=[2, 11, 8]) /* ty=Tensor[(2, 11, 8), float64] */;
  %833 = @func_3273(%832) /* ty=(Tensor[(2, 11, 8), float64],) */;
  %834 = cast(%var_3862, dtype="float64") /* ty=Tensor[(540), float64] */;
  %835 = reshape(%834, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), float64] */;
  %836 = @func_940(%835) /* ty=(Tensor[(9, 4, 15), float64],) */;
  %837 = cast(%var_3834, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %838 = cast(%var_3883, dtype="float32") /* ty=Tensor[(2, 1800), float32] */;
  %839 = cast(%var_3884, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
  %840 = cast(meta[relay.Constant][60] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %841 = reshape(%838, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
  %842 = reshape(%839, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
  %843 = reshape(%840, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %844 = @func_2049(%841, %842, %843) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %845 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %846 = cast(%var_3834, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %847 = sin(%830) /* ty=Tensor[(6, 3, 4), float32] */;
  %848 = %833.0;
  %849 = %836.0;
  %850 = erf(%837) /* ty=Tensor[(6, 3, 4), float32] */;
  %851 = %844.1;
  %852 = %845.0;
  %853 = log10(%846) /* ty=Tensor[(6, 3, 4), float32] */;
  (%847, %848, meta[relay.Constant][59] /* ty=Tensor[(176), float64] */, %849, %var_3862, %850, %851, %var_3883, %var_3884, meta[relay.Constant][60] /* ty=Tensor[(1920), float64] */, %852, %853)
}

def @func_2698() -> (Tensor[(2, 11, 8), float64],) {
  %854 = @func_2444() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %855 = %854.0;
  (%855,)
}

def @func_1572() -> Tensor[(2, 11, 8), float64] {
  %856 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
  exp(%856) /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_5282() -> (Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), uint32]) {
  @func_5280() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), uint32]) */
}

def @func_1761() -> Tensor[(2, 11, 8), float64] {
  %857 = fn () -> Tensor[(2, 11, 8), float64] {
    @func_1572() /* ty=Tensor[(2, 11, 8), float64] */
  };
  %857() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_4094() -> (Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) {
  @func_4092() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) */
}

def @func_6205() -> (Tensor[(2, 11, 8), float64], Tensor[(16), uint16], Tensor[(16, 15, 1), float32], Tensor[(1920), float64], int64, Tensor[(540), float64], Tensor[(16, 15, 180), bool]) {
  %878 = fn () -> (Tensor[(2, 11, 8), float64], Tensor[(16), uint16], Tensor[(16, 15, 1), float32], Tensor[(1920), float64], int64, Tensor[(540), float64], Tensor[(16, 15, 180), bool]) {
    %858 = cast(meta[relay.Constant][62] /* ty=Tensor[(16), uint16] */, dtype="uint16") /* ty=Tensor[(16), uint16] */;
    %859 = reshape(%858, newshape=[16]) /* ty=Tensor[(16), uint16] */;
    %860 = @func_4933(%859) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(16, 15, 1), uint16], Tensor[(16), uint16], Tensor[(240), uint16], Tensor[(864), uint16]) */;
    %861 = %860.2;
    %862 = cast(%861, dtype="float32") /* ty=Tensor[(16, 15, 1), float32] */;
    %863 = sigmoid(%862) /* ty=Tensor[(16, 15, 1), float32] */;
    %864 = cast(%863, dtype="float32") /* ty=Tensor[(16, 15, 1), float32] */;
    %865 = cast(meta[relay.Constant][63] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %866 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %867 = cast(meta[relay.Constant][64] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %868 = reshape(%865, newshape=[90, 2]) /* ty=Tensor[(90, 2), float64] */;
    %869 = reshape(%866, newshape=[]) /* ty=int64 */;
    %870 = reshape(%867, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
    %871 = @func_3149(%868, %869, %870) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(84), uint8], Tensor[(90, 2), float64], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(1920), float64], int64, Tensor[(2, 8), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(3, 180), float64], Tensor[(2, 11, 8), float64], Tensor[(4, 3, 7), uint8]) */;
    %872 = cast(%863, dtype="bool") /* ty=Tensor[(16, 15, 1), bool] */;
    %873 = cast(meta[relay.Constant][63] /* ty=Tensor[(180), float64] */, dtype="bool") /* ty=Tensor[(180), bool] */;
    %874 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
    %875 = erf(%864) /* ty=Tensor[(16, 15, 1), float32] */;
    %876 = %871.6;
    %877 = less_equal(%872, %873) /* ty=Tensor[(16, 15, 180), bool] */;
    (%874, meta[relay.Constant][62] /* ty=Tensor[(16), uint16] */, %875, %876, 7 /* ty=int64 */, meta[relay.Constant][64] /* ty=Tensor[(540), float64] */, %877)
  };
  %878() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(16), uint16], Tensor[(16, 15, 1), float32], Tensor[(1920), float64], int64, Tensor[(540), float64], Tensor[(16, 15, 180), bool]) */
}

def @func_6128(%var_6126: Tensor[(16), float32], %var_6127: Tensor[(1, 1365), uint16]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), bool], Tensor[(704), float64]) {
  @func_6124(%var_6126, %var_6127) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(16), float32], Tensor[(1, 1365), uint16], Tensor[(1920), float64], Tensor[(11, 4, 16), bool], Tensor[(704), float64]) */
}

def @func_4009() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) {
  %879 = @func_3030() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
  %880 = @func_2649() /* ty=(Tensor[(5, 7, 13), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(5, 7, 13), int64]) */;
  %881 = @func_1830() /* ty=Tensor[(2, 11, 8), float64] */;
  %882 = %879.0;
  %883 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
  %884 = %880.3;
  (%881, %882, %883, %884)
}

def @func_4485() -> Tensor[(2, 11, 8), float64] {
  %885 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %885.0
}

def @func_2902() -> (Tensor[(2, 11, 8), float64],) {
  @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_5742() -> Tensor[(2, 11, 8), float64] {
  @func_5740() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_3032() -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  @func_3030() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_5137() -> (Tensor[(2, 11, 8), float64],) {
  %887 = fn () -> (Tensor[(2, 11, 8), float64],) {
    %886 = @func_2853() /* ty=Tensor[(2, 11, 8), float64] */;
    (%886,)
  };
  %887() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_2799(%var_2797: Tensor[(2160), uint8], %var_2798: Tensor[(42, 2), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(42, 2), uint8]) {
  %904 = fn (%var_2776: Tensor[(2160), uint8], %var_2777: Tensor[(42, 2), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(42, 2), uint8]) {
    %888 = @func_2743() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %889 = @func_1760() /* ty=Tensor[(2, 11, 8), float64] */;
    %890 = cast(%889, dtype="float64") /* ty=Tensor[(2, 11, 8), float64] */;
    %891 = cast(meta[relay.Constant][65] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %892 = cast(%var_2776, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %893 = cast(%var_2777, dtype="uint8") /* ty=Tensor[(42, 2), uint8] */;
    %894 = cast(meta[relay.Constant][65] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %895 = reshape(%891, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
    %896 = reshape(%892, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %897 = reshape(%893, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %898 = reshape(%894, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), float64] */;
    %899 = @func_1899(%895, %896, %897, %898) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(10, 9, 2), bool], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(10, 9, 2), float32], Tensor[(2, 11, 8), float64]) */;
    %900 = %888.0;
    %901 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
    %902 = atanh(%890) /* ty=Tensor[(2, 11, 8), float64] */;
    %903 = %899.1;
    (%900, %901, %902, %903, meta[relay.Constant][65] /* ty=Tensor[(180), float64] */, %var_2776, %var_2777)
  };
  %904(%var_2797, %var_2798) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2160), uint8], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(42, 2), uint8]) */
}

def @func_3908(%var_3904: Tensor[(6, 3, 4), float32], %var_3905: Tensor[(540), float64], %var_3906: Tensor[(2, 1800), float32], %var_3907: Tensor[(1365), uint16]) -> (Tensor[(6, 3, 4), float32], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(6, 3, 4), float32], Tensor[(1365), uint16], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32]) {
  @func_3902(%var_3904, %var_3905, %var_3906, %var_3907) /* ty=(Tensor[(6, 3, 4), float32], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(6, 3, 4), float32], Tensor[(1365), uint16], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32]) */
}

def @func_7058(%var_7056: Tensor[(1872), float64]) -> (Tensor[(13, 16, 9), float64], Tensor[(1872), float64], Tensor[(2, 11, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  @func_7055(%var_7056) /* ty=(Tensor[(13, 16, 9), float64], Tensor[(1872), float64], Tensor[(2, 11, 8), bool], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_3807(%var_3805: Tensor[(3600), float32], %var_3806: Tensor[(480, 4), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(455, 3), uint16], Tensor[(480, 4), float64]) {
  %915 = fn (%var_3797: Tensor[(3600), float32], %var_3799: Tensor[(480, 4), float64]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(455, 3), uint16], Tensor[(480, 4), float64]) {
    %905 = @func_2698() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %906 = cast(%var_3797, dtype="float32") /* ty=Tensor[(3600), float32] */;
    %907 = cast(meta[relay.Constant][66] /* ty=Tensor[(455, 3), uint16] */, dtype="uint16") /* ty=Tensor[(455, 3), uint16] */;
    %908 = cast(%var_3799, dtype="float64") /* ty=Tensor[(480, 4), float64] */;
    %909 = reshape(%906, newshape=[15, 16, 15]) /* ty=Tensor[(15, 16, 15), float32] */;
    %910 = reshape(%907, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
    %911 = reshape(%908, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %912 = @func_2049(%909, %910, %911) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
    %913 = %905.0;
    %914 = %912.5;
    (%913, %914, %var_3797, meta[relay.Constant][66] /* ty=Tensor[(455, 3), uint16] */, %var_3799)
  };
  %915(%var_3805, %var_3806) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(3600), float32], Tensor[(455, 3), uint16], Tensor[(480, 4), float64]) */
}

def @func_2053(%var_2050: Tensor[(15, 16, 15), float32], %var_2051: Tensor[(1365), uint16], %var_2052: Tensor[(1920), float64]) -> (Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
  %931 = fn (%var_1971: Tensor[(15, 16, 15), float32], %var_2025: Tensor[(1365), uint16], %var_2026: Tensor[(1920), float64]) -> (Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) {
    %916 = cast(%var_1971, dtype="float32") /* ty=Tensor[(15, 16, 15), float32] */;
    %917 = acosh(%916) /* ty=Tensor[(15, 16, 15), float32] */;
    %918 = cast(%917, dtype="float64") /* ty=Tensor[(15, 16, 15), float64] */;
    %919 = cast(meta[relay.Constant][67] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %920 = cast(%var_2025, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %921 = cast(%var_2026, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %922 = reshape(%919, newshape=[8, 1, 2]) /* ty=Tensor[(8, 1, 2), float32] */;
    %923 = reshape(%920, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
    %924 = reshape(%921, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %925 = @func_1321(%922, %923, %924) /* ty=(Tensor[(8, 1, 2), float32], Tensor[(7, 13, 15), float32], Tensor[(1365), uint16], Tensor[(540), float64], Tensor[(1920), float64], Tensor[(8, 1, 2), float32], Tensor[(8, 1, 2), float64]) */;
    %926 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %927 = erf(%918) /* ty=Tensor[(15, 16, 15), float64] */;
    %928 = %925.2;
    %929 = %926.0;
    %930 = @func_1781() /* ty=Tensor[(2, 11, 8), float64] */;
    (%927, %928, meta[relay.Constant][67] /* ty=Tensor[(16), float32] */, %var_2025, %var_2026, %929, %930)
  };
  %931(%var_2050, %var_2051, %var_2052) /* ty=(Tensor[(15, 16, 15), float64], Tensor[(1365), uint16], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */
}

def @func_5740() -> Tensor[(2, 11, 8), float64] {
  %932 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
  %932.0
}

def @func_4121() -> Tensor[(2, 11, 8), float64] {
  %934 = fn () -> Tensor[(2, 11, 8), float64] {
    %933 = @func_2698() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %933.0
  };
  %934() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_93(%var_91: Tensor[(15, 16, 9), uint8], %var_92: Tensor[(4, 3, 7), uint8]) -> (Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) {
  %946 = fn (%var_57: Tensor[(15, 16, 9), uint8], %var_65: Tensor[(4, 3, 7), uint8]) -> (Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) {
    %935 = cast(meta[relay.Constant][68] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %936 = cast(%var_65, dtype="uint8") /* ty=Tensor[(4, 3, 7), uint8] */;
    %937 = cast(meta[relay.Constant][68] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %938 = cast(%var_57, dtype="uint8") /* ty=Tensor[(15, 16, 9), uint8] */;
    %939 = bitwise_xor(%937, %938) /* ty=Tensor[(15, 16, 9), uint8] */;
    %940 = cast(%939, dtype="bool") /* ty=Tensor[(15, 16, 9), bool] */;
    %941 = shape_of(%var_57, dtype="int32") /* ty=Tensor[(3), int32] */;
    %942 = cast(%var_57, dtype="bool") /* ty=Tensor[(15, 16, 9), bool] */;
    %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %944 = logical_xor(%935, %936) /* ty=Tensor[(4, 3, 7), uint8] */;
    %945 = logical_and(%942, %943) /* ty=Tensor[(15, 16, 9), bool] */;
    (%944, %945)
  };
  %946(%var_91, %var_92) /* ty=(Tensor[(4, 3, 7), uint8], Tensor[(15, 16, 9), bool]) */
}

def @func_5280() -> (Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), uint32]) {
  %947 = @func_3923() /* ty=Tensor[(2, 11, 8), float32] */;
  %948 = cast(%947, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
  %949 = reshape(%948, newshape=[2, 11, 8]) /* ty=Tensor[(2, 11, 8), float32] */;
  %950 = @func_4576(%949) /* ty=(Tensor[(2, 11, 8), uint32], Tensor[(2, 11, 8), float32]) */;
  %951 = %950.0;
  (%947, %951)
}

def @func_1646(%var_1643: Tensor[(1365), uint16], %var_1644: Tensor[(96, 20), float64], %var_1645: Tensor[(60, 36), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(96, 20), float64], Tensor[(2160), uint8], Tensor[(60, 36), uint8], Tensor[(84), uint8], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) {
  @func_1641(%var_1643, %var_1644, %var_1645) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365), uint16], Tensor[(96, 20), float64], Tensor[(2160), uint8], Tensor[(60, 36), uint8], Tensor[(84), uint8], Tensor[(9, 4, 15), float64], Tensor[(540), float64]) */
}

def @func_6785(%var_6782: Tensor[(13, 16, 9), float64]) -> Tensor[(13, 16, 9), float64] {
  %952 = cast(%var_6782, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
  sin(%952) /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_6291(%var_6289: Tensor[(72), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32]) {
  @func_6288(%var_6289) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(540), float64], Tensor[(72), float32]) */
}

def @func_1970() -> (Tensor[(2, 11, 8), float64],) {
  %954 = fn () -> (Tensor[(2, 11, 8), float64],) {
    %953 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
    (%953,)
  };
  %954() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_5195(%var_5191: Tensor[(1, 1920), float64], %var_5192: Tensor[(1, 72), float32], %var_5193: Tensor[(540), float64], %var_5194: Tensor[(3600), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(1365, 1), uint16], Tensor[(240), int64], Tensor[(4, 4), float32], Tensor[(1365), uint16], Tensor[(1, 1920), bool], Tensor[(6, 3, 4), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1, 72), float32], Tensor[(1, 1920), float32]) {
  %987 = fn (%var_5153: Tensor[(1, 1920), float64], %var_5161: Tensor[(1, 72), float32], %var_5162: Tensor[(540), float64], %var_5163: Tensor[(3600), float32]) -> (Tensor[(2, 11, 8), float64], Tensor[(1365, 1), uint16], Tensor[(240), int64], Tensor[(4, 4), float32], Tensor[(1365), uint16], Tensor[(1, 1920), bool], Tensor[(6, 3, 4), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1, 72), float32], Tensor[(1, 1920), float32]) {
    %955 = @func_3030() /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
    %956 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %957 = cast(meta[relay.Constant][69] /* ty=Tensor[(240), int64] */, dtype="int64") /* ty=Tensor[(240), int64] */;
    %958 = cast(meta[relay.Constant][70] /* ty=Tensor[(4, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 4), float32] */;
    %959 = cast(meta[relay.Constant][71] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %960 = cast(%var_5153, dtype="float64") /* ty=Tensor[(1, 1920), float64] */;
    %961 = reshape(%956, newshape=[]) /* ty=int64 */;
    %962 = reshape(%957, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), int64] */;
    %963 = reshape(%958, newshape=[16]) /* ty=Tensor[(16), float32] */;
    %964 = reshape(%959, newshape=[1365, 1]) /* ty=Tensor[(1365, 1), uint16] */;
    %965 = reshape(%960, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
    %966 = @func_2124(%961, %962, %963, %964, %965) /* ty=(Tensor[(5, 16, 3), int64], Tensor[(1920), float64], Tensor[(16), float32], Tensor[(1365, 1), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64]) */;
    %967 = cast(%var_5153, dtype="bool") /* ty=Tensor[(1, 1920), bool] */;
    %968 = cast(-4 /* ty=int64 */, dtype="bool") /* ty=bool */;
    %969 = cast(%var_5161, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
    %970 = cast(%var_5162, dtype="float64") /* ty=Tensor[(540), float64] */;
    %971 = cast(%var_5163, dtype="float32") /* ty=Tensor[(3600), float32] */;
    %972 = cast(meta[relay.Constant][71] /* ty=Tensor[(1365), uint16] */, dtype="uint16") /* ty=Tensor[(1365), uint16] */;
    %973 = reshape(%969, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
    %974 = reshape(%970, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %975 = reshape(%971, newshape=[2, 1800]) /* ty=Tensor[(2, 1800), float32] */;
    %976 = reshape(%972, newshape=[1365]) /* ty=Tensor[(1365), uint16] */;
    %977 = @func_3902(%973, %974, %975, %976) /* ty=(Tensor[(6, 3, 4), float32], Tensor[(2, 11, 8), float64], Tensor[(176), float64], Tensor[(9, 4, 15), float64], Tensor[(540), float64], Tensor[(6, 3, 4), float32], Tensor[(1365), uint16], Tensor[(2, 1800), float32], Tensor[(1365), uint16], Tensor[(1920), float64], Tensor[(2, 11, 8), float64], Tensor[(6, 3, 4), float32]) */;
    %978 = cast(%var_5161, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
    %979 = cast(%var_5153, dtype="float32") /* ty=Tensor[(1, 1920), float32] */;
    %980 = cast(-4 /* ty=int64 */, dtype="float32") /* ty=float32 */;
    %981 = %955.1;
    %982 = %966.3;
    %983 = greater(%967, %968) /* ty=Tensor[(1, 1920), bool] */;
    %984 = %977.0;
    %985 = sinh(%978) /* ty=Tensor[(1, 72), float32] */;
    %986 = divide(%979, %980) /* ty=Tensor[(1, 1920), float32] */;
    (%981, %982, meta[relay.Constant][69] /* ty=Tensor[(240), int64] */, meta[relay.Constant][70] /* ty=Tensor[(4, 4), float32] */, meta[relay.Constant][71] /* ty=Tensor[(1365), uint16] */, %983, %984, %var_5162, %var_5163, %985, %986)
  };
  %987(%var_5191, %var_5192, %var_5193, %var_5194) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(1365, 1), uint16], Tensor[(240), int64], Tensor[(4, 4), float32], Tensor[(1365), uint16], Tensor[(1, 1920), bool], Tensor[(6, 3, 4), float32], Tensor[(540), float64], Tensor[(3600), float32], Tensor[(1, 72), float32], Tensor[(1, 1920), float32]) */
}

def @func_3488(%var_3487: Tensor[(11, 11, 9), float32]) -> (Tensor[(11, 11, 9), float32],) {
  %990 = fn (%var_3464: Tensor[(11, 11, 9), float32]) -> (Tensor[(11, 11, 9), float32],) {
    %988 = cast(%var_3464, dtype="float32") /* ty=Tensor[(11, 11, 9), float32] */;
    %989 = sqrt(%988) /* ty=Tensor[(11, 11, 9), float32] */;
    (%989,)
  };
  %990(%var_3487) /* ty=(Tensor[(11, 11, 9), float32],) */
}

def @func_3229(%var_3228: Tensor[(2160), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(14, 2, 5), float32], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(2, 11, 8), int8]) {
  %1009 = fn (%var_3184: Tensor[(2160), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(14, 2, 5), float32], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(2, 11, 8), int8]) {
    %991 = @func_1698() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %992 = cast(%var_3184, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %993 = cast(meta[relay.Constant][72] /* ty=Tensor[(84), uint8] */, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %994 = reshape(%992, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %995 = reshape(%993, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %996 = @func_432(%994, %995) /* ty=(Tensor[(14, 2, 5), float32], Tensor[(4, 3, 7), uint8], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
    %997 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %998 = %997.0;
    %999 = cast(%998, dtype="float32") /* ty=Tensor[(2, 11, 8), float32] */;
    %1000 = log(%999) /* ty=Tensor[(2, 11, 8), float32] */;
    %1001 = @func_1572() /* ty=Tensor[(2, 11, 8), float64] */;
    %1002 = cast(%1001, dtype="int8") /* ty=Tensor[(2, 11, 8), int8] */;
    %1003 = shape_of(%1000, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1004 = cast(%1000, dtype="int8") /* ty=Tensor[(2, 11, 8), int8] */;
    %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1006 = %991.0;
    %1007 = %996.0;
    %1008 = left_shift(%1004, %1005) /* ty=Tensor[(2, 11, 8), int8] */;
    (%1006, %1007, %var_3184, meta[relay.Constant][72] /* ty=Tensor[(84), uint8] */, %1008)
  };
  %1009(%var_3228) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(14, 2, 5), float32], Tensor[(2160), uint8], Tensor[(84), uint8], Tensor[(2, 11, 8), int8]) */
}

def @func_1798() -> (Tensor[(2, 11, 8), float64],) {
  @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_5417(%var_5415: Tensor[(2160), uint8], %var_5416: Tensor[(84), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) {
  %1024 = fn (%var_5384: Tensor[(2160), uint8], %var_5385: Tensor[(84), uint8]) -> (Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) {
    %1010 = @func_1969() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %1011 = @func_4092() /* ty=(Tensor[(2, 11, 8), float32], Tensor[(2, 11, 8), float64]) */;
    %1012 = @func_1796() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %1013 = cast(meta[relay.Constant][73] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %1014 = cast(%var_5384, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
    %1015 = cast(%var_5385, dtype="uint8") /* ty=Tensor[(84), uint8] */;
    %1016 = reshape(%1013, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
    %1017 = reshape(%1014, newshape=[2160]) /* ty=Tensor[(2160), uint8] */;
    %1018 = reshape(%1015, newshape=[84]) /* ty=Tensor[(84), uint8] */;
    %1019 = @func_4157(%1016, %1017, %1018) /* ty=(Tensor[(2, 960), float32], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180, 1), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) */;
    %1020 = %1010.0;
    %1021 = %1011.1;
    %1022 = %1012.0;
    %1023 = %1019.2;
    (%1020, %1021, %1022, %1023, meta[relay.Constant][73] /* ty=Tensor[(180), float64] */, %var_5384, %var_5385)
  };
  %1024(%var_5415, %var_5416) /* ty=(Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(2, 11, 8), float64], Tensor[(10, 9, 2), float32], Tensor[(180), float64], Tensor[(2160), uint8], Tensor[(84), uint8]) */
}

def @func_1830() -> Tensor[(2, 11, 8), float64] {
  @func_1760() /* ty=Tensor[(2, 11, 8), float64] */
}

def @func_5316() -> (Tensor[(2, 11, 8), float64],) {
  @func_5314() /* ty=(Tensor[(2, 11, 8), float64],) */
}

def @func_2578(%var_2547: Tensor[(16, 1, 1), uint16], %var_2548: Tensor[(16, 15, 1), uint16], %var_2573: Tensor[(16, 6, 9), uint16]) -> (Tensor[(16, 15, 1), uint16], Tensor[(16, 6, 9), uint32]) {
  %1025 = cast(%var_2547, dtype="uint16") /* ty=Tensor[(16, 1, 1), uint16] */;
  %1026 = cast(%var_2548, dtype="uint16") /* ty=Tensor[(16, 15, 1), uint16] */;
  %1027 = cast(%var_2547, dtype="uint32") /* ty=Tensor[(16, 1, 1), uint32] */;
  %1028 = cast(%var_2573, dtype="uint32") /* ty=Tensor[(16, 6, 9), uint32] */;
  %1029 = bitwise_or(%1025, %1026) /* ty=Tensor[(16, 15, 1), uint16] */;
  %1030 = logical_xor(%1027, %1028) /* ty=Tensor[(16, 6, 9), uint32] */;
  (%1029, %1030)
}

def @func_4798() -> Tensor[(2, 11, 8), float64] {
  %1032 = fn () -> Tensor[(2, 11, 8), float64] {
    %1031 = @func_2900() /* ty=(Tensor[(2, 11, 8), float64],) */;
    %1031.0
  };
  %1032() /* ty=Tensor[(2, 11, 8), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen486/build/output.py:2299: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen486/build/output.py", line 2304, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(440) tvmgen_default_fused_log_kernel0(float* __restrict__ T_log, float* __restrict__ placeholder) {
  T_log[(((int)threadIdx.x))] = __logf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_7693(%var_7661: uint64, %var_7689: Tensor[(819), uint64]) -> (Tensor[(13, 6, 1), bool], Tensor[(12, 8, 10), float64], Tensor[(819), uint64], Tensor[(12, 8, 10), float64]) {
  %0 = cast(%var_7661, dtype="bool") /* ty=bool */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 6, 1), uint64] */, dtype="bool") /* ty=Tensor[(13, 6, 1), bool] */;
  %2 = cast(%var_7689, dtype="uint64") /* ty=Tensor[(819), uint64] */;
  %3 = reshape(%2, newshape=[819]) /* ty=Tensor[(819), uint64] */;
  %4 = @func_4731(%3) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(13, 9, 7), uint64], Tensor[(819), uint64]) */;
  %5 = @func_5807() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %6 = not_equal(%0, %1) /* ty=Tensor[(13, 6, 1), bool] */;
  %7 = %4.0;
  %8 = %5.0;
  (%6, %7, %var_7689, %8)
}

def @func_2059() -> Tensor[(12, 8, 10), float64] {
  %9 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %9.1
}

def @func_15757() -> (Tensor[(960), float64],) {
  %10 = @func_12717() /* ty=(Tensor[(960), float64],) */;
  %11 = %10.0;
  (%11,)
}

def @func_2850() -> Tensor[(12, 8, 10), float64] {
  %12 = @func_2667() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %12.0
}

def @func_12443(%var_12432: Tensor[(7, 8, 6), float64], %var_12433: Tensor[(7, 8, 6), float64]) -> (Tensor[(7, 8, 6), float64],) {
  %13 = cast(%var_12433, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %14 = shape_of(%var_12432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%var_12432, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %17 = floor_divide(%15, %16) /* ty=Tensor[(7, 8, 6), float64] */;
  (%17,)
}

def @func_6415() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), int16], Tensor[(960), float64]) {
  %18 = @func_2214() /* ty=(Tensor[(3, 9, 6), float64],) */;
  %19 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %20 = %18.0;
  %21 = @func_3979() /* ty=Tensor[(12, 8, 10), int16] */;
  %22 = %19.0;
  (%20, %21, %22)
}

def @func_16867() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %23 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %24 = @func_10991() /* ty=(Tensor[(960), float64],) */;
  %25 = %23.0;
  %26 = %24.0;
  (%25, %26)
}

def @func_9778(%var_9725: Tensor[(6, 14, 9), uint8]) -> (Tensor[(6, 14, 9), uint8], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 14, 9), uint8] */, dtype="uint8") /* ty=Tensor[(6, 14, 9), uint8] */;
  %28 = shape_of(%var_9725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%var_9725, dtype="uint8") /* ty=Tensor[(6, 14, 9), uint8] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %31 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %32 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %33 = minimum(%29, %30) /* ty=Tensor[(6, 14, 9), uint8] */;
  %34 = %31.0;
  %35 = %32.0;
  (%33, %34, %35)
}

def @func_16198() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %36 = @func_4781() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %37 = @func_2095() /* ty=Tensor[(960), float64] */;
  %38 = %36.1;
  (%37, %38)
}

def @func_2560() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %39 = @func_2540() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) */;
  %40 = @func_1821() /* ty=Tensor[(12, 8, 10), float32] */;
  %41 = %39.0;
  (%40, %41)
}

def @func_6174() -> (Tensor[(12, 8, 10), float64],) {
  %42 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %43 = %42.0;
  (%43,)
}

def @func_10839() -> Tensor[(960), float64] {
  %44 = @func_1784() /* ty=(Tensor[(960), float64],) */;
  %44.0
}

def @func_10931() -> (Tensor[(960), float64],) {
  %45 = @func_8653() /* ty=(Tensor[(960), float64],) */;
  %46 = %45.0;
  (%46,)
}

def @func_8169() -> (Tensor[(960), uint16],) {
  %47 = @func_7635() /* ty=Tensor[(960), uint16] */;
  (%47,)
}

def @func_11491() -> (Tensor[(960), float64],) {
  %48 = @func_5092() /* ty=(Tensor[(960), float64],) */;
  %49 = %48.0;
  (%49,)
}

def @func_2992() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %50 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %51 = @func_2684() /* ty=(Tensor[(960), float64],) */;
  %52 = @func_1821() /* ty=Tensor[(12, 8, 10), float32] */;
  %53 = %50.0;
  %54 = @func_1848() /* ty=Tensor[(12, 8, 10), float32] */;
  %55 = %51.0;
  (%52, %53, %54, %55)
}

def @func_11179() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %56 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %57 = @func_7043() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %58 = %56.1;
  %59 = %57.1;
  (%58, %59)
}

def @func_7336() -> Tensor[(960), float64] {
  %60 = @func_4221() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %60.1
}

def @func_12717() -> (Tensor[(960), float64],) {
  %61 = @func_4906() /* ty=Tensor[(960), float64] */;
  (%61,)
}

def @func_2582() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %62 = @func_2059() /* ty=Tensor[(12, 8, 10), float64] */;
  %63 = @func_1848() /* ty=Tensor[(12, 8, 10), float32] */;
  (%62, %63)
}

def @func_2038(%var_2003: Tensor[(5, 14, 16), bool]) -> (Tensor[(5, 14, 16), bool], Tensor[(12, 8, 10), float32]) {
  %64 = cast(%var_2003, dtype="bool") /* ty=Tensor[(5, 14, 16), bool] */;
  %65 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(5, 14, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 14, 16), bool] */, dtype="bool") /* ty=Tensor[(5, 14, 16), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %68 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %69 = logical_or(%66, %67) /* ty=Tensor[(5, 14, 16), bool] */;
  %70 = %68.0;
  (%69, %70)
}

def @func_7885() -> (Tensor[(12, 8, 10), float32], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504, 1), float32]) {
  %71 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %74 = reshape(%72, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %75 = reshape(%73, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %76 = @func_6312(%74, %75) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(504, 1), float64] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %78 = %71.0;
  %79 = %76.2;
  %80 = log10(%77) /* ty=Tensor[(504, 1), float32] */;
  (%78, %79, meta[relay.Constant][3] /* ty=Tensor[(144), float64] */, %80)
}

def @func_8333(%var_8323: Tensor[(9, 11, 13), uint64], %var_8324: Tensor[(9, 11, 13), uint64]) -> Tensor[(9, 11, 13), float64] {
  %81 = cast(%var_8324, dtype="uint64") /* ty=Tensor[(9, 11, 13), uint64] */;
  %82 = shape_of(%var_8323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%var_8323, dtype="uint64") /* ty=Tensor[(9, 11, 13), uint64] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %85 = multiply(%83, %84) /* ty=Tensor[(9, 11, 13), uint64] */;
  %86 = cast(%85, dtype="float64") /* ty=Tensor[(9, 11, 13), float64] */;
  exp(%86) /* ty=Tensor[(9, 11, 13), float64] */
}

def @func_5438() -> Tensor[(12, 8, 10), float32] {
  %87 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %87.1
}

def @func_17451(%var_17436: Tensor[(144), float64], %var_17437: Tensor[(2, 252), float64], %var_17445: Tensor[(2, 252), float64]) -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(6, 2, 12), float64], Tensor[(144), float64], Tensor[(2, 252), float64]) {
  %88 = @func_14572() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %89 = @func_10528() /* ty=(Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %90 = cast(%var_17436, dtype="float64") /* ty=Tensor[(144), float64] */;
  %91 = cast(%var_17437, dtype="float64") /* ty=Tensor[(2, 252), float64] */;
  %92 = reshape(%90, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %93 = reshape(%91, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %94 = @func_6312(%92, %93) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %95 = cast(%var_17445, dtype="float64") /* ty=Tensor[(2, 252), float64] */;
  %96 = shape_of(%var_17437, dtype="int32") /* ty=Tensor[(2), int32] */;
  %97 = cast(%var_17437, dtype="float64") /* ty=Tensor[(2, 252), float64] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %99 = %88.0;
  %100 = %89.1;
  %101 = %94.0;
  %102 = power(%97, %98) /* ty=Tensor[(2, 252), float64] */;
  (%99, %100, %101, %var_17436, %102)
}

def @func_4961() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %103 = @func_3885() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %104 = @func_2298() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %105 = @func_3362() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %106 = %103.1;
  %107 = %104.0;
  %108 = %105.0;
  (%106, %107, %108)
}

def @func_15464() -> (Tensor[(960), float64], Tensor[(16, 3, 10), float64], Tensor[(480), float64], Tensor[(12, 8, 10), float32]) {
  %109 = @func_9861() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %110 = cast(meta[relay.Constant][5] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %111 = cast(meta[relay.Constant][5] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %112 = reshape(%110, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), float64] */;
  %113 = reshape(%111, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), float64] */;
  %114 = @func_4157(%112, %113) /* ty=(Tensor[(16, 3, 10), float64],) */;
  %115 = @func_8920() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %116 = %109.1;
  %117 = %114.0;
  %118 = %115.2;
  (%116, %117, meta[relay.Constant][5] /* ty=Tensor[(480), float64] */, %118)
}

def @func_8089() -> (Tensor[(12, 8, 10), float32],) {
  %119 = @func_6271() /* ty=Tensor[(12, 8, 10), float32] */;
  (%119,)
}

def @func_8358() -> Tensor[(12, 8, 10), float32] {
  %120 = @func_5229() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %120.1
}

def @func_10777(%var_10764: Tensor[(9, 8, 13), int32]) -> (Tensor[(9, 8, 13), int32], Tensor[(12, 8, 10), float64]) {
  %121 = cast(meta[relay.Constant][6] /* ty=Tensor[(9, 8, 13), int32] */, dtype="int32") /* ty=Tensor[(9, 8, 13), int32] */;
  %122 = shape_of(%var_10764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_10764, dtype="int32") /* ty=Tensor[(9, 8, 13), int32] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %125 = @func_4828() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %126 = multiply(%123, %124) /* ty=Tensor[(9, 8, 13), int32] */;
  %127 = %125.0;
  (%126, %127)
}

def @func_11651() -> Tensor[(12, 8, 10), float64] {
  @func_7200() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_2381() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %128 = @func_1798() /* ty=(Tensor[(960), float64],) */;
  %129 = @func_2095() /* ty=Tensor[(960), float64] */;
  %130 = %128.0;
  (%129, %130)
}

def @func_18160() -> Tensor[(960), float64] {
  %131 = @func_9683() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %131.0
}

def @func_16681(%var_16667: Tensor[(3, 16, 8), int16], %var_16668: Tensor[(3, 16, 8), int16]) -> Tensor[(3, 16, 8), int16] {
  %132 = cast(%var_16668, dtype="int16") /* ty=Tensor[(3, 16, 8), int16] */;
  %133 = shape_of(%var_16667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%var_16667, dtype="int16") /* ty=Tensor[(3, 16, 8), int16] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  add(%134, %135) /* ty=Tensor[(3, 16, 8), int16] */
}

def @func_8797(%var_8790: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(6, 2, 12), float64], Tensor[(144), float64], Tensor[(504), float64]) {
  %136 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %137 = cast(%var_8790, dtype="float64") /* ty=Tensor[(144), float64] */;
  %138 = cast(meta[relay.Constant][7] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %139 = reshape(%137, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %140 = reshape(%138, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %141 = @func_6312(%139, %140) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %142 = %136.0;
  %143 = %141.0;
  (%142, %143, %var_8790, meta[relay.Constant][7] /* ty=Tensor[(504), float64] */)
}

def @func_3769() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %144 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %145 = %144.1;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %147 = @func_2903() /* ty=Tensor[(12, 8, 10), float32] */;
  %148 = rsqrt(%146) /* ty=Tensor[(12, 8, 10), float32] */;
  (%147, %148)
}

def @func_11022() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %149 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %150 = @func_9561() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %151 = %149.2;
  %152 = %150.1;
  (%151, %152)
}

def @func_14518() -> Tensor[(960), float64] {
  %153 = @func_9315() /* ty=(Tensor[(960), float64],) */;
  %153.0
}

def @func_13987(%var_13978: Tensor[(5, 10, 8), float32]) -> Tensor[(5, 10, 8), float32] {
  %154 = cast(%var_13978, dtype="float32") /* ty=Tensor[(5, 10, 8), float32] */;
  sinh(%154) /* ty=Tensor[(5, 10, 8), float32] */
}

def @func_4658() -> Tensor[(960), float64] {
  %155 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %155.0
}

def @func_1754() -> (Tensor[(960), float64],) {
  %156 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %157 = %156.0;
  (%157,)
}

def @func_3439(%var_3413: float64, %var_3414: Tensor[(480), float64], %var_3419: Tensor[(1120), bool]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(1120), bool], Tensor[(12, 8, 10), float32]) {
  %158 = @func_2810() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %159 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 504), float64] */, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %160 = reshape(%159, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %161 = @func_1447(%160) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64]) */;
  %162 = cast(%var_3413, dtype="float64") /* ty=float64 */;
  %163 = cast(%var_3414, dtype="float64") /* ty=Tensor[(480), float64] */;
  %164 = reshape(%162, newshape=[]) /* ty=float64 */;
  %165 = reshape(%163, newshape=[16, 15, 2]) /* ty=Tensor[(16, 15, 2), float64] */;
  %166 = @func_1423(%164, %165) /* ty=(Tensor[(16, 15, 2), float64],) */;
  %167 = cast(%var_3419, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %168 = reshape(%167, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), bool] */;
  %169 = @func_2038(%168) /* ty=(Tensor[(5, 14, 16), bool], Tensor[(12, 8, 10), float32]) */;
  %170 = %158.0;
  %171 = %161.1;
  %172 = %166.0;
  %173 = %169.1;
  %174 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  (%170, %171, meta[relay.Constant][8] /* ty=Tensor[(1, 504), float64] */, %172, %var_3413, %var_3414, %173, %var_3419, %174)
}

def @func_9407() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), int16]) {
  %175 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %176 = @func_7302() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
  %177 = @func_2131() /* ty=Tensor[(12, 8, 10), float32] */;
  %178 = %175.2;
  %179 = %176.0;
  (%177, %178, %179)
}

def @func_12037() -> (Tensor[(960), uint16], Tensor[(960), uint16]) {
  %180 = @func_4485() /* ty=(Tensor[(960), uint16],) */;
  %181 = %180.0;
  %182 = @func_7635() /* ty=Tensor[(960), uint16] */;
  (%181, %182)
}

def @func_14806() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %183 = @func_3885() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %184 = @func_8643() /* ty=Tensor[(12, 8, 10), float32] */;
  %185 = %183.2;
  (%184, %185)
}

def @func_11088() -> Tensor[(960), float64] {
  %186 = @func_1830() /* ty=(Tensor[(960), float64],) */;
  %186.0
}

def @func_7043() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %187 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %188 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %189 = %187.0;
  %190 = %188.0;
  (%189, %190)
}

def @func_5092() -> (Tensor[(960), float64],) {
  %191 = @func_1754() /* ty=(Tensor[(960), float64],) */;
  %192 = %191.0;
  (%192,)
}

def @func_7527() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %193 = @func_2214() /* ty=(Tensor[(3, 9, 6), float64],) */;
  %194 = @func_5012() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %195 = %194.0;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %197 = reshape(%196, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
  %198 = @func_1371(%197) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) */;
  %199 = %193.0;
  %200 = %198.1;
  (%199, %195, %200)
}

def @func_17374(%var_17340: int8, %var_17352: Tensor[(12, 78), int32]) -> (Tensor[(1, 15, 14), int8], Tensor[(504), float64], Tensor[(12, 78), int32], Tensor[(4, 36), float64], Tensor[(960), float64]) {
  %201 = cast(%var_17340, dtype="int8") /* ty=int8 */;
  %202 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 15, 14), int8] */, dtype="int8") /* ty=Tensor[(1, 15, 14), int8] */;
  %203 = cast(%var_17352, dtype="int32") /* ty=Tensor[(12, 78), int32] */;
  %204 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %205 = reshape(%203, newshape=[936]) /* ty=Tensor[(936), int32] */;
  %206 = reshape(%204, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %207 = @func_12574(%205, %206) /* ty=(Tensor[(960), float64], Tensor[(9, 8, 13), int32], Tensor[(936), int32], Tensor[(504), float64], Tensor[(144), float64]) */;
  %208 = @func_2381() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %209 = bitwise_or(%201, %202) /* ty=Tensor[(1, 15, 14), int8] */;
  %210 = %207.3;
  %211 = %208.1;
  (%209, %210, %var_17352, meta[relay.Constant][10] /* ty=Tensor[(4, 36), float64] */, %211)
}

def @func_3204() -> Tensor[(960), float64] {
  %212 = @func_2661() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %212.1
}

def @func_9315() -> (Tensor[(960), float64],) {
  %213 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %214 = %213.0;
  (%214,)
}

def @func_2214() -> (Tensor[(3, 9, 6), float64],) {
  %215 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %216 = %215.0;
  (%216,)
}

def @func_12486() -> (Tensor[(12, 8, 10), float32],) {
  %217 = @func_3147() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32]) */;
  %218 = %217.1;
  (%218,)
}

def @func_6312(%var_6287: Tensor[(6, 2, 12), float64], %var_6293: Tensor[(504), float64]) -> (Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) {
  %219 = cast(%var_6287, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
  %220 = cast(%var_6293, dtype="float64") /* ty=Tensor[(504), float64] */;
  %221 = reshape(%220, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
  %222 = @func_827(%221) /* ty=(Tensor[(6, 14, 6), float64],) */;
  %223 = erf(%219) /* ty=Tensor[(6, 2, 12), float64] */;
  %224 = %222.0;
  %225 = @func_2095() /* ty=Tensor[(960), float64] */;
  (%223, %224, %var_6293, %225)
}

def @func_1743() -> (Tensor[(12, 8, 10), float32],) {
  %226 = @func_1488() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %227 = %226.0;
  (%227,)
}

def @func_11900() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) {
  %228 = @func_5092() /* ty=(Tensor[(960), float64],) */;
  %229 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %230 = @func_3362() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %231 = @func_7914() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %232 = cast(meta[relay.Constant][11] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %233 = reshape(%232, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %234 = @func_9029(%233) /* ty=(Tensor[(15, 10, 11), float32],) */;
  %235 = %228.0;
  %236 = %229.0;
  %237 = @func_5455() /* ty=Tensor[(12, 8, 10), float32] */;
  %238 = %230.0;
  %239 = %231.0;
  %240 = %234.0;
  (%235, %236, %237, %238, %239, %240, meta[relay.Constant][11] /* ty=Tensor[(1650), float32] */)
}

def @func_1211() -> Tensor[(960), float64] {
  %241 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %241.0
}

def @func_8564() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %242 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %243 = @func_3611() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %244 = %242.0;
  %245 = %243.0;
  (%244, %245)
}

def @func_9683() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %246 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %247 = @func_4332() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool], Tensor[(819), uint64]) */;
  %248 = %246.0;
  %249 = %247.0;
  (%248, %249)
}

def @func_13209() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %250 = @func_2095() /* ty=Tensor[(960), float64] */;
  %251 = @func_11088() /* ty=Tensor[(960), float64] */;
  (%250, %251)
}

def @func_9720(%var_9713: Tensor[(1650), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float64]) {
  %252 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %253 = cast(%var_9713, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %254 = reshape(%253, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %255 = @func_9029(%254) /* ty=(Tensor[(15, 10, 11), float32],) */;
  %256 = cast(%var_9713, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %257 = %252.0;
  %258 = %255.0;
  %259 = acosh(%256) /* ty=Tensor[(1650), float64] */;
  (%257, %258, %259)
}

def @func_13637() -> Tensor[(12, 8, 10), float32] {
  %260 = @func_8920() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %260.2
}

def @func_16913(%var_16898: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(936), int32], Tensor[(144), float64]) {
  %261 = @func_16198() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %262 = cast(meta[relay.Constant][12] /* ty=Tensor[(936), int32] */, dtype="int32") /* ty=Tensor[(936), int32] */;
  %263 = cast(%var_16898, dtype="float64") /* ty=Tensor[(144), float64] */;
  %264 = reshape(%262, newshape=[936]) /* ty=Tensor[(936), int32] */;
  %265 = reshape(%263, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %266 = @func_12574(%264, %265) /* ty=(Tensor[(960), float64], Tensor[(9, 8, 13), int32], Tensor[(936), int32], Tensor[(504), float64], Tensor[(144), float64]) */;
  %267 = %261.0;
  %268 = %266.0;
  (%267, %268, meta[relay.Constant][12] /* ty=Tensor[(936), int32] */, %var_16898)
}

def @func_4887(%var_4831: Tensor[(8, 5, 7), bool], %var_4858: float64, %var_4859: Tensor[(480), float64]) -> (Tensor[(8, 5, 7), bool], Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %269 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 5, 7), bool] */, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %270 = shape_of(%var_4831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_4831, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %274 = cast(%var_4858, dtype="float64") /* ty=float64 */;
  %275 = cast(%var_4859, dtype="float64") /* ty=Tensor[(480), float64] */;
  %276 = reshape(%274, newshape=[]) /* ty=float64 */;
  %277 = reshape(%275, newshape=[16, 15, 2]) /* ty=Tensor[(16, 15, 2), float64] */;
  %278 = @func_1423(%276, %277) /* ty=(Tensor[(16, 15, 2), float64],) */;
  %279 = @func_3769() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %280 = @func_1028() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %281 = %280.0;
  %282 = cast(%281, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %283 = @func_4781() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %284 = @func_4221() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %285 = logical_or(%271, %272) /* ty=Tensor[(8, 5, 7), bool] */;
  %286 = %273.0;
  %287 = %278.0;
  %288 = %279.1;
  %289 = log10(%282) /* ty=Tensor[(12, 8, 10), float64] */;
  %290 = %283.0;
  %291 = %284.0;
  (%285, %286, %287, %var_4858, %var_4859, %288, %289, %290, %291)
}

def @func_3362() -> (Tensor[(12, 8, 10), float64],) {
  %292 = @func_2059() /* ty=Tensor[(12, 8, 10), float64] */;
  (%292,)
}

def @func_17124() -> (Tensor[(12, 2, 12), int16],) {
  %293 = @func_15214() /* ty=(Tensor[(12, 2, 12), float64],) */;
  %294 = %293.0;
  %295 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 2, 12), float64] */, dtype="int16") /* ty=Tensor[(12, 2, 12), int16] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%294, dtype="int16") /* ty=Tensor[(12, 2, 12), int16] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %299 = bitwise_and(%297, %298) /* ty=Tensor[(12, 2, 12), int16] */;
  (%299,)
}

def @func_16028(%var_16023: Tensor[(1, 208), float64]) -> (Tensor[(960), float64], Tensor[(4, 13, 4), float64], Tensor[(1, 208), float64], Tensor[(960), float64]) {
  %300 = @func_4251() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
  %301 = cast(%var_16023, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
  %302 = reshape(%301, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), float64] */;
  %303 = @func_10218() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
  %304 = %300.1;
  %305 = @func_9149(%302) /* ty=Tensor[(4, 13, 4), float64] */;
  %306 = %303.2;
  (%304, %305, %var_16023, %306)
}

def @func_17333(%var_17320: Tensor[(12, 11, 8), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(1056), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 11, 8), float32], Tensor[(12, 8, 10), float64]) {
  %307 = @func_8501() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %308 = @func_10730() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32]) */;
  %309 = cast(meta[relay.Constant][15] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %310 = reshape(%309, newshape=[12, 11, 8]) /* ty=Tensor[(12, 11, 8), float32] */;
  %311 = @func_13376(%310) /* ty=(Tensor[(12, 11, 8), float32],) */;
  %312 = %311.0;
  %313 = cast(%var_17320, dtype="float32") /* ty=Tensor[(12, 11, 8), float32] */;
  %314 = shape_of(%312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%312, dtype="float32") /* ty=Tensor[(12, 11, 8), float32] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %317 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %318 = %307.0;
  %319 = %308.2;
  %320 = floor_divide(%315, %316) /* ty=Tensor[(12, 11, 8), float32] */;
  %321 = %317.1;
  (%318, meta[relay.Constant][15] /* ty=Tensor[(1056), float32] */, %319, %320, %321)
}

def @func_12583() -> (Tensor[(960), float64],) {
  %322 = @func_5646() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %323 = %322.0;
  (%323,)
}

def @func_17971() -> (Tensor[(12, 8, 10), float32],) {
  %324 = @func_4710() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64]) */;
  %325 = %324.1;
  (%325,)
}

def @func_3611() -> (Tensor[(12, 8, 10), float32],) {
  %326 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %327 = %326.1;
  (%327,)
}

def @func_5807() -> (Tensor[(12, 8, 10), float64],) {
  %328 = @func_4961() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %329 = %328.2;
  (%329,)
}

def @func_9861() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %330 = @func_3089() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %331 = @func_1784() /* ty=(Tensor[(960), float64],) */;
  %332 = %330.0;
  %333 = %331.0;
  (%332, %333)
}

def @func_8675() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64]) {
  %334 = @func_2214() /* ty=(Tensor[(3, 9, 6), float64],) */;
  %335 = @func_3114() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) */;
  %336 = %334.0;
  %337 = %335.1;
  (%336, %337)
}

def @func_7200() -> Tensor[(12, 8, 10), float64] {
  %338 = @func_6174() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %338.0
}

def @func_4636() -> Tensor[(960), float64] {
  %339 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
  %339.0
}

def @func_5976() -> Tensor[(12, 8, 10), float32] {
  @func_5438() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_3737() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %340 = @func_3089() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %341 = @func_1784() /* ty=(Tensor[(960), float64],) */;
  %342 = @func_1798() /* ty=(Tensor[(960), float64],) */;
  %343 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %344 = %340.1;
  %345 = %341.0;
  %346 = %342.0;
  %347 = %343.1;
  (%344, %345, %346, %347)
}

def @func_4582() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %348 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %349 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %350 = %348.0;
  %351 = %349.1;
  (%350, %351)
}

def @func_2264() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %352 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %353 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %354 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %355 = @func_2131() /* ty=Tensor[(12, 8, 10), float32] */;
  %356 = %352.1;
  %357 = %353.0;
  %358 = %354.1;
  (%355, %356, %357, %358)
}

def @func_4828() -> (Tensor[(12, 8, 10), float64],) {
  %359 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %360 = %359.0;
  (%360,)
}

def @func_9066() -> Tensor[(12, 8, 10), float64] {
  @func_7309() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_2185() -> Tensor[(15, 15, 15), bool] {
  %361 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 15), float64] */;
  %362 = atan(%361) /* ty=Tensor[(15, 15, 15), float64] */;
  %363 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(15, 15, 15), bool] */;
  %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%362, dtype="bool") /* ty=Tensor[(15, 15, 15), bool] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%365, %366) /* ty=Tensor[(15, 15, 15), bool] */
}

def @func_7302() -> (Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) {
  %367 = @func_6241() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
  %368 = %367.1;
  %369 = @func_6271() /* ty=Tensor[(12, 8, 10), float32] */;
  (%368, %369)
}

def @func_11390() -> (Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), int16]) {
  %370 = @func_4431() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
  %371 = @func_6415() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), int16], Tensor[(960), float64]) */;
  %372 = %370.0;
  %373 = %371.1;
  (%372, %373)
}

def @func_18121(%var_18117: uint8, %var_18118: Tensor[(400), uint8]) -> (Tensor[(12, 8, 10), float64], Tensor[(8, 5, 10), bool], uint8, Tensor[(400), uint8]) {
  %374 = @func_2831() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %375 = cast(%var_18117, dtype="uint8") /* ty=uint8 */;
  %376 = cast(%var_18118, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %377 = reshape(%375, newshape=[]) /* ty=uint8 */;
  %378 = reshape(%376, newshape=[8, 5, 10]) /* ty=Tensor[(8, 5, 10), uint8] */;
  %379 = %374.0;
  %380 = @func_16950(%377, %378) /* ty=Tensor[(8, 5, 10), bool] */;
  (%379, %380, %var_18117, %var_18118)
}

def @func_11975() -> Tensor[(960), float64] {
  %381 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %381.1
}

def @func_13692() -> Tensor[(12, 8, 10), float32] {
  %382 = @func_3089() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %382.0
}

def @func_16520() -> (Tensor[(12, 8, 10), float64], Tensor[(960), uint16]) {
  %383 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %384 = @func_8169() /* ty=(Tensor[(960), uint16],) */;
  %385 = %383.0;
  %386 = %384.0;
  (%385, %386)
}

def @func_6094(%var_6041: Tensor[(9, 3, 2), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(9, 3, 2), bool], Tensor[(960), float64]) {
  %387 = @func_5535() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %388 = %387.1;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %390 = reshape(%389, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %391 = @func_331(%390) /* ty=(Tensor[(12, 8, 10), float32],) */;
  %392 = @func_4828() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %393 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %394 = cast(%var_6041, dtype="float32") /* ty=Tensor[(9, 3, 2), float32] */;
  %395 = log10(%394) /* ty=Tensor[(9, 3, 2), float32] */;
  %396 = cast(%395, dtype="float32") /* ty=Tensor[(9, 3, 2), float32] */;
  %397 = acosh(%396) /* ty=Tensor[(9, 3, 2), float32] */;
  %398 = cast(%var_6041, dtype="bool") /* ty=Tensor[(9, 3, 2), bool] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%397, dtype="bool") /* ty=Tensor[(9, 3, 2), bool] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %402 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %403 = %391.0;
  %404 = %392.0;
  %405 = %393.0;
  %406 = greater_equal(%400, %401) /* ty=Tensor[(9, 3, 2), bool] */;
  %407 = %402.0;
  (%388, %403, %404, %405, %406, %407)
}

def @func_14286() -> (Tensor[(12, 8, 10), float32],) {
  %408 = @func_7527() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %409 = %408.1;
  (%409,)
}

def @func_7747() -> Tensor[(12, 8, 10), float64] {
  %410 = @func_3114() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) */;
  %410.1
}

def @func_8643() -> Tensor[(12, 8, 10), float32] {
  %411 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %411.0
}

def @func_9117(%var_9107: Tensor[(14, 2, 10), float64]) -> (Tensor[(14, 2, 10), float64],) {
  %412 = cast(%var_9107, dtype="float64") /* ty=Tensor[(14, 2, 10), float64] */;
  %413 = sqrt(%412) /* ty=Tensor[(14, 2, 10), float64] */;
  (%413,)
}

def @func_4809() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %414 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %415 = @func_4251() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
  %416 = %414.1;
  %417 = %415.1;
  (%416, %417)
}

def @func_9029(%var_9025: Tensor[(15, 10, 11), float32]) -> (Tensor[(15, 10, 11), float32],) {
  %418 = cast(%var_9025, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %419 = cos(%418) /* ty=Tensor[(15, 10, 11), float32] */;
  (%419,)
}

def @func_3483(%var_3455: Tensor[(16, 1, 8), float32]) -> (Tensor[(16, 1, 8), float32], Tensor[(960), float64], Tensor[(16, ?, 8), int8]) {
  %420 = cast(%var_3455, dtype="float32") /* ty=Tensor[(16, 1, 8), float32] */;
  %421 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %422 = cast(%var_3455, dtype="float64") /* ty=Tensor[(16, 1, 8), float64] */;
  %423 = asinh(%422) /* ty=Tensor[(16, 1, 8), float64] */;
  %424 = cast(%423, dtype="int8") /* ty=Tensor[(16, 1, 8), int8] */;
  %425 = shape_of(%var_3455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%var_3455, dtype="int8") /* ty=Tensor[(16, 1, 8), int8] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %428 = log10(%420) /* ty=Tensor[(16, 1, 8), float32] */;
  %429 = %421.0;
  %430 = left_shift(%426, %427) /* ty=Tensor[(16, ?, 8), int8] */;
  (%428, %429, %430)
}

def @func_12096() -> (Tensor[(960), float64], Tensor[(12, 8, 10), int16]) {
  %431 = @func_10931() /* ty=(Tensor[(960), float64],) */;
  %432 = %431.0;
  %433 = @func_3979() /* ty=Tensor[(12, 8, 10), int16] */;
  (%432, %433)
}

def @func_1678() -> (Tensor[(960), float64], Tensor[(12, 8, 10), int32]) {
  %434 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %435 = %434.2;
  %436 = cast(%435, dtype="float32") /* ty=Tensor[(960), float32] */;
  %437 = reshape(%436, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
  %438 = @func_798(%437) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) */;
  %439 = %438.1;
  (%435, %439)
}

def @func_14866(%var_14834: Tensor[(7, 8, 12), float32], %var_14835: Tensor[(7, 8, 12), float32]) -> (Tensor[(12, 8, 10), float64], Tensor[(7, 8, 12), float64]) {
  %440 = @func_10218() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
  %441 = cast(%var_14835, dtype="float32") /* ty=Tensor[(7, 8, 12), float32] */;
  %442 = shape_of(%var_14834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_14834, dtype="float32") /* ty=Tensor[(7, 8, 12), float32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %445 = mod(%443, %444) /* ty=Tensor[(7, 8, 12), float32] */;
  %446 = cast(%445, dtype="float64") /* ty=Tensor[(7, 8, 12), float64] */;
  %447 = %440.0;
  %448 = asinh(%446) /* ty=Tensor[(7, 8, 12), float64] */;
  (%447, %448)
}

def @func_16840() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %449 = @func_9683() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %450 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %451 = @func_9066() /* ty=Tensor[(12, 8, 10), float64] */;
  %452 = %449.1;
  %453 = %450.1;
  %454 = @func_14518() /* ty=Tensor[(960), float64] */;
  (%451, %452, %453, %454)
}

def @func_8501() -> (Tensor[(12, 8, 10), float32],) {
  %455 = @func_1848() /* ty=Tensor[(12, 8, 10), float32] */;
  (%455,)
}

def @func_10117() -> (Tensor[(12, 8, 10), float32],) {
  %456 = @func_3040() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %457 = %456.0;
  (%457,)
}

def @func_2871() -> (Tensor[(12, 8, 10), float32],) {
  %458 = @func_1488() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %459 = %458.0;
  (%459,)
}

def @func_2831() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %460 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %461 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %462 = %460.1;
  %463 = %461.0;
  (%462, %463)
}

def @func_3089() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %464 = @func_3040() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %465 = @func_1830() /* ty=(Tensor[(960), float64],) */;
  %466 = %464.1;
  %467 = %465.0;
  (%466, %467)
}

def @func_11709() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(6, 14, 9), uint8], Tensor[(1, 756), uint8]) {
  %468 = @func_8501() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %469 = @func_4781() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %470 = @func_10931() /* ty=(Tensor[(960), float64],) */;
  %471 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 756), uint8] */, dtype="uint8") /* ty=Tensor[(1, 756), uint8] */;
  %472 = reshape(%471, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), uint8] */;
  %473 = @func_9778(%472) /* ty=(Tensor[(6, 14, 9), uint8], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %474 = %468.0;
  %475 = %469.0;
  %476 = %470.0;
  %477 = %473.0;
  (%474, %475, %476, %477, meta[relay.Constant][17] /* ty=Tensor[(1, 756), uint8] */)
}

def @func_18025() -> Tensor[(960), float64] {
  @func_7336() /* ty=Tensor[(960), float64] */
}

def @func_4410() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %478 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %479 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %480 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %481 = %478.0;
  %482 = %479.1;
  %483 = %480.0;
  (%481, %482, %483)
}

def @func_3114() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) {
  %484 = @func_1890() /* ty=(Tensor[(960), float64],) */;
  %485 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 504), float64] */, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %486 = reshape(%485, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %487 = @func_2442(%486) /* ty=(Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) */;
  %488 = %484.0;
  %489 = %487.3;
  (%488, %489, meta[relay.Constant][18] /* ty=Tensor[(1, 504), float64] */)
}

def @func_8441() -> Tensor[(960), float64] {
  %490 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %490.0
}

def @func_4485() -> (Tensor[(960), uint16],) {
  %491 = @func_3577() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %492 = %491.1;
  %493 = cast(meta[relay.Constant][19] /* ty=Tensor[(960), float64] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(1), int32] */;
  %495 = cast(%492, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %497 = bitwise_or(%495, %496) /* ty=Tensor[(960), uint16] */;
  (%497,)
}

def @func_16290() -> (Tensor[(960), float64],) {
  %498 = @func_5785() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %499 = %498.1;
  (%499,)
}

def @func_13920() -> (Tensor[(960), float64], Tensor[(6, 14, 6), float64]) {
  %500 = @func_6727() /* ty=(Tensor[(960), float64],) */;
  %501 = @func_12821() /* ty=(Tensor[(960), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %502 = %500.0;
  %503 = %501.1;
  (%502, %503)
}

def @func_16446() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %504 = @func_14471() /* ty=(Tensor[(960), float64],) */;
  %505 = @func_12522() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %506 = %504.0;
  %507 = %505.0;
  (%506, %507)
}

def @func_3680() -> (Tensor[(12, 8, 10), float32],) {
  %508 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %509 = %508.0;
  (%509,)
}

def @func_5646() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %510 = @func_4607() /* ty=Tensor[(960), float64] */;
  %511 = @func_2850() /* ty=Tensor[(12, 8, 10), float64] */;
  (%510, %511)
}

def @func_9295() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %512 = @func_3288() /* ty=(Tensor[(960), float64],) */;
  %513 = @func_6687() /* ty=(Tensor[(5, 3, 2), float32], Tensor[(960), float64]) */;
  %514 = %512.0;
  %515 = %513.1;
  (%514, %515)
}

def @main(%var_18351: Tensor[(15, 10, 5), float32]) -> (Tensor[(15, 10, 5), bool],) {
  %516 = cast(%var_18351, dtype="bool") /* ty=Tensor[(15, 10, 5), bool] */;
  %517 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(15, 10, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 10, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 10, 5), bool] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %520 = less(%518, %519) /* ty=Tensor[(15, 10, 5), bool] */;
  (%520,)
}

def @func_5860() -> Tensor[(960), float64] {
  %521 = @func_4809() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %521.1
}

def @func_1798() -> (Tensor[(960), float64],) {
  %522 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
  %523 = %522.0;
  (%523,)
}

def @func_2696() -> (Tensor[(960), float64],) {
  %524 = @func_2476() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %525 = %524.1;
  (%525,)
}

def @func_7083() -> Tensor[(960), float64] {
  @func_6526() /* ty=Tensor[(960), float64] */
}

def @func_1968() -> (Tensor[(12, 8, 10), float64],) {
  %526 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %527 = %526.0;
  %528 = cast(%527, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %529 = exp(%528) /* ty=Tensor[(12, 8, 10), float64] */;
  (%529,)
}

def @func_13884() -> (Tensor[(12, 8, 10), float32],) {
  %530 = @func_8920() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %531 = %530.1;
  (%531,)
}

def @func_16419() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %532 = @func_7302() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
  %533 = @func_8999() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %534 = %532.1;
  %535 = %533.1;
  (%534, %535)
}

def @func_14340() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(15, 10, 11), float32], Tensor[(550, 3), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %536 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %537 = @func_12522() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %538 = cast(meta[relay.Constant][21] /* ty=Tensor[(550, 3), float32] */, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
  %539 = reshape(%538, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %540 = @func_9029(%539) /* ty=(Tensor[(15, 10, 11), float32],) */;
  %541 = @func_3577() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %542 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %543 = @func_8653() /* ty=(Tensor[(960), float64],) */;
  %544 = %536.0;
  %545 = %537.0;
  %546 = %540.0;
  %547 = %541.0;
  %548 = %542.3;
  %549 = %543.0;
  (%544, %545, %546, meta[relay.Constant][21] /* ty=Tensor[(550, 3), float32] */, %547, %548, %549)
}

def @func_10161(%var_10136: int8, %var_10137: Tensor[(6, 11, 16), int8]) -> Tensor[(6, 11, 16), int8] {
  %550 = cast(%var_10136, dtype="int8") /* ty=int8 */;
  %551 = cast(%var_10137, dtype="int8") /* ty=Tensor[(6, 11, 16), int8] */;
  multiply(%550, %551) /* ty=Tensor[(6, 11, 16), int8] */
}

def @func_2684() -> (Tensor[(960), float64],) {
  %552 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %553 = %552.0;
  (%553,)
}

def @func_5006() -> Tensor[(960), float64] {
  %554 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
  %554.0
}

def @func_18298() -> (Tensor[(960), float64],) {
  %555 = @func_12717() /* ty=(Tensor[(960), float64],) */;
  %556 = %555.0;
  (%556,)
}

def @func_12861() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %557 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %558 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %559 = %557.0;
  %560 = %558.0;
  (%559, %560)
}

def @func_3040() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %561 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %562 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %563 = %561.0;
  %564 = %562.0;
  (%563, %564)
}

def @func_4710() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64]) {
  %565 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %566 = @func_3147() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32]) */;
  %567 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 504), float64] */, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %568 = reshape(%567, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %569 = @func_1447(%568) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64]) */;
  %570 = %565.1;
  %571 = %566.1;
  %572 = %569.1;
  (%570, %571, %572, meta[relay.Constant][22] /* ty=Tensor[(1, 504), float64] */)
}

def @func_11812(%var_11801: Tensor[(10, 8, 4), float32]) -> (Tensor[(10, 8, 4), float32], Tensor[(12, 8, 10), float64]) {
  %573 = cast(%var_11801, dtype="float32") /* ty=Tensor[(10, 8, 4), float32] */;
  %574 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %575 = cosh(%573) /* ty=Tensor[(10, 8, 4), float32] */;
  %576 = %574.0;
  (%575, %576)
}

def @func_11327(%var_11286: int8) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(6, 11, 7), int8], int8, Tensor[(462), int8], Tensor[(960), float64]) {
  %577 = @func_10072() /* ty=(Tensor[(960), float64],) */;
  %578 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %579 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %580 = cast(%var_11286, dtype="int8") /* ty=int8 */;
  %581 = cast(meta[relay.Constant][23] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
  %582 = reshape(%580, newshape=[]) /* ty=int8 */;
  %583 = reshape(%581, newshape=[6, 11, 7]) /* ty=Tensor[(6, 11, 7), int8] */;
  %584 = @func_6617(%582, %583) /* ty=(Tensor[(6, 11, 7), int8],) */;
  %585 = @func_2684() /* ty=(Tensor[(960), float64],) */;
  %586 = %577.0;
  %587 = %578.2;
  %588 = @func_8358() /* ty=Tensor[(12, 8, 10), float32] */;
  %589 = @func_7336() /* ty=Tensor[(960), float64] */;
  %590 = %579.0;
  %591 = @func_8298() /* ty=Tensor[(960), float64] */;
  %592 = %584.0;
  %593 = %585.0;
  (%586, %587, %588, %589, %590, %591, %592, %var_11286, meta[relay.Constant][23] /* ty=Tensor[(462), int8] */, %593)
}

def @func_10346(%var_10327: Tensor[(12, 12, 2), uint64], %var_10341: Tensor[(12, 12, 2), uint64]) -> (Tensor[(12, 12, 2), float32], Tensor[(12, 12, 2), int16]) {
  %594 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %595 = cast(%var_10327, dtype="uint64") /* ty=Tensor[(12, 12, 2), uint64] */;
  %596 = bitwise_xor(%594, %595) /* ty=Tensor[(12, 12, 2), uint64] */;
  %597 = cast(%596, dtype="float32") /* ty=Tensor[(12, 12, 2), float32] */;
  %598 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="float32") /* ty=float32 */;
  %599 = cast(%var_10341, dtype="int16") /* ty=Tensor[(12, 12, 2), int16] */;
  %600 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%596, dtype="int16") /* ty=Tensor[(12, 12, 2), int16] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %603 = floor_divide(%597, %598) /* ty=Tensor[(12, 12, 2), float32] */;
  %604 = multiply(%601, %602) /* ty=Tensor[(12, 12, 2), int16] */;
  (%603, %604)
}

def @func_13413() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  %605 = @func_9861() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %606 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %607 = @func_11709() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(6, 14, 9), uint8], Tensor[(1, 756), uint8]) */;
  %608 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %609 = %605.0;
  %610 = %606.0;
  %611 = %607.2;
  %612 = %608.0;
  (%609, %610, %611, %612)
}

def @func_516() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %613 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %614 = %613.1;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %616 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %617 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  %618 = sinh(%615) /* ty=Tensor[(12, 8, 10), float32] */;
  %619 = %616.4;
  (%617, %618, %619)
}

def @func_1400() -> (Tensor[(960), float64],) {
  %620 = @func_1211() /* ty=Tensor[(960), float64] */;
  (%620,)
}

def @func_1028() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %621 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %622 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %623 = %622.0;
  %624 = cast(%623, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %625 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %626 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %627 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %628 = %621.0;
  %629 = asinh(%624) /* ty=Tensor[(12, 8, 10), float64] */;
  %630 = %625.0;
  %631 = %626.0;
  %632 = %627.2;
  %633 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  (%628, %629, %630, %631, %632, %633)
}

def @func_1371(%var_1366: Tensor[(12, 8, 10), float32]) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) {
  %634 = @func_1028() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %635 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %636 = %635.0;
  %637 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 8, 10), float32] */, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%636, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %641 = cast(%var_1366, dtype="bool") /* ty=Tensor[(12, 8, 10), bool] */;
  %642 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%636, dtype="bool") /* ty=Tensor[(12, 8, 10), bool] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %645 = %634.2;
  %646 = floor_mod(%639, %640) /* ty=Tensor[(12, 8, 10), float64] */;
  %647 = greater_equal(%643, %644) /* ty=Tensor[(12, 8, 10), bool] */;
  (%645, %646, %647)
}

def @func_3577() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %648 = @func_1798() /* ty=(Tensor[(960), float64],) */;
  %649 = @func_3362() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %650 = %648.0;
  %651 = @func_3204() /* ty=Tensor[(960), float64] */;
  %652 = %649.0;
  (%650, %651, %652)
}

def @func_10172() -> Tensor[(960), uint16] {
  %653 = @func_8169() /* ty=(Tensor[(960), uint16],) */;
  %653.0
}

def @func_331(%var_302: Tensor[(12, 8, 10), float64]) -> (Tensor[(12, 8, 10), float32],) {
  %654 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %655 = %654.1;
  %656 = cast(%var_302, dtype="bool") /* ty=Tensor[(12, 8, 10), bool] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%655, dtype="bool") /* ty=Tensor[(12, 8, 10), bool] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %660 = not_equal(%658, %659) /* ty=Tensor[(12, 8, 10), bool] */;
  %661 = cast(%660, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %662 = atan(%661) /* ty=Tensor[(12, 8, 10), float32] */;
  (%662,)
}

def @func_15351() -> Tensor[(960), float64] {
  @func_11835() /* ty=Tensor[(960), float64] */
}

def @func_16546() -> Tensor[(12, 8, 10), int32] {
  %663 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
  %663.1
}

def @func_1890() -> (Tensor[(960), float64],) {
  %664 = @func_1798() /* ty=(Tensor[(960), float64],) */;
  %665 = %664.0;
  (%665,)
}

def @func_6727() -> (Tensor[(960), float64],) {
  %666 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %667 = %666.1;
  (%667,)
}

def @func_14471() -> (Tensor[(960), float64],) {
  %668 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %669 = %668.0;
  (%669,)
}

def @func_10218() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  %670 = @func_3362() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %671 = @func_1890() /* ty=(Tensor[(960), float64],) */;
  %672 = %670.0;
  %673 = %671.0;
  %674 = @func_2095() /* ty=Tensor[(960), float64] */;
  (%672, %673, %674)
}

def @func_16243(%var_16232: Tensor[(12, 12, 11), int32]) -> (Tensor[(12, 12, 11), float32], Tensor[(960), float64]) {
  %675 = @func_4104() /* ty=(Tensor[(12, 12, 11), int32],) */;
  %676 = %675.0;
  %677 = cast(%var_16232, dtype="float32") /* ty=Tensor[(12, 12, 11), float32] */;
  %678 = shape_of(%676, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%676, dtype="float32") /* ty=Tensor[(12, 12, 11), float32] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %681 = @func_13209() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %682 = power(%679, %680) /* ty=Tensor[(12, 12, 11), float32] */;
  %683 = %681.1;
  (%682, %683)
}

def @func_4221() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %684 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %685 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %686 = @func_2661() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %687 = %684.1;
  %688 = %685.0;
  %689 = %686.0;
  (%687, %688, %689)
}

def @func_1423(%var_1418: float64, %var_1419: Tensor[(16, 15, 2), float64]) -> (Tensor[(16, 15, 2), float64],) {
  %690 = cast(%var_1418, dtype="float64") /* ty=float64 */;
  %691 = cast(%var_1419, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
  %692 = add(%690, %691) /* ty=Tensor[(16, 15, 2), float64] */;
  (%692,)
}

def @func_5926() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %693 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %694 = @func_1798() /* ty=(Tensor[(960), float64],) */;
  %695 = @func_3680() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %696 = @func_4781() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %697 = @func_4710() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64]) */;
  %698 = %693.0;
  %699 = %694.0;
  %700 = %695.0;
  %701 = %696.1;
  %702 = @func_1909() /* ty=Tensor[(12, 8, 10), float32] */;
  %703 = %697.0;
  (%698, %699, %700, %701, %702, %703)
}

def @func_9592() -> Tensor[(14, 7, 4), float64] {
  %704 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 4), float64] */;
  log2(%704) /* ty=Tensor[(14, 7, 4), float64] */
}

def @func_14231() -> Tensor[(12, 8, 10), float64] {
  %705 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %705.3
}

def @func_12349() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %706 = @func_2298() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %707 = @func_3040() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %708 = %706.0;
  %709 = %707.0;
  (%708, %709)
}

def @func_14987() -> (Tensor[(12, 8, 10), float64], Tensor[(14, 2, 10), float64], Tensor[(280), float64], Tensor[(960), uint16], Tensor[(960), float64], Tensor[(960), float64], int8) {
  %710 = cast(meta[relay.Constant][27] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %711 = reshape(%710, newshape=[14, 2, 10]) /* ty=Tensor[(14, 2, 10), float64] */;
  %712 = @func_9117(%711) /* ty=(Tensor[(14, 2, 10), float64],) */;
  %713 = @func_12037() /* ty=(Tensor[(960), uint16], Tensor[(960), uint16]) */;
  %714 = @func_9683() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %715 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %716 = reshape(%715, newshape=[]) /* ty=int8 */;
  %717 = @func_11327(%716) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(6, 11, 7), int8], int8, Tensor[(462), int8], Tensor[(960), float64]) */;
  %718 = @func_9066() /* ty=Tensor[(12, 8, 10), float64] */;
  %719 = %712.0;
  %720 = %713.0;
  %721 = %714.1;
  %722 = %717.9;
  (%718, %719, meta[relay.Constant][27] /* ty=Tensor[(280), float64] */, %720, %721, %722, meta[relay.Constant][28] /* ty=int8 */)
}

def @func_1110() -> (Tensor[(12, 8, 10), float32],) {
  %723 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %724 = %723.1;
  (%724,)
}

def @func_15193(%var_15188: Tensor[(5, 15, 16), int16], %var_15189: Tensor[(5, 15, 16), int16]) -> Tensor[(5, 15, 16), bool] {
  %725 = cast(%var_15189, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
  %726 = shape_of(%var_15188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%var_15188, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%727, %728) /* ty=Tensor[(5, 15, 16), bool] */
}

def @func_15812() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %729 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %730 = @func_13884() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %731 = @func_15382() /* ty=Tensor[(960), float64] */;
  %732 = %729.1;
  %733 = %730.0;
  (%731, %732, %733)
}

def @func_14183() -> Tensor[(12, 8, 10), float32] {
  %734 = @func_5012() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %734.0
}

def @func_10730() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32]) {
  %735 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %736 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %737 = @func_2540() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) */;
  %738 = %737.1;
  %739 = cast(%738, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  %740 = @func_8089() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %741 = %735.1;
  %742 = %736.0;
  %743 = asinh(%739) /* ty=Tensor[(13, 9, 7), float32] */;
  %744 = %740.0;
  (%741, %742, %743, %744)
}

def @func_10440() -> Tensor[(12, 8, 10), float32] {
  @func_5455() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_13536() -> (Tensor[(960), float64],) {
  %745 = @func_9683() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %746 = %745.0;
  (%746,)
}

def @func_5785() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %747 = @func_2476() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %748 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %749 = %747.1;
  %750 = @func_4658() /* ty=Tensor[(960), float64] */;
  %751 = %748.0;
  (%749, %750, %751)
}

def @func_7914() -> (Tensor[(12, 8, 10), float64],) {
  %752 = @func_6174() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %753 = %752.0;
  (%753,)
}

def @func_9373(%var_9321: Tensor[(4, 8, 7), int8]) -> (Tensor[(4, 8, 7), int8], Tensor[(12, 8, 10), float32], Tensor[(4, 8, 7), float64]) {
  %754 = cast(%var_9321, dtype="int8") /* ty=Tensor[(4, 8, 7), int8] */;
  %755 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(4, 8, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 8, 7), int8] */, dtype="int8") /* ty=Tensor[(4, 8, 7), int8] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %758 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %759 = cast(%var_9321, dtype="float64") /* ty=Tensor[(4, 8, 7), float64] */;
  %760 = acos(%759) /* ty=Tensor[(4, 8, 7), float64] */;
  %761 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(4, 8, 7), bool] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%760, dtype="bool") /* ty=Tensor[(4, 8, 7), bool] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %765 = less_equal(%763, %764) /* ty=Tensor[(4, 8, 7), bool] */;
  %766 = cast(%765, dtype="float64") /* ty=Tensor[(4, 8, 7), float64] */;
  %767 = maximum(%756, %757) /* ty=Tensor[(4, 8, 7), int8] */;
  %768 = %758.1;
  %769 = exp(%766) /* ty=Tensor[(4, 8, 7), float64] */;
  (%767, %768, %769)
}

def @func_1830() -> (Tensor[(960), float64],) {
  %770 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %771 = %770.2;
  (%771,)
}

def @func_13761() -> (Tensor[(960), float64],) {
  %772 = @func_5785() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %773 = %772.1;
  (%773,)
}

def @func_17477(%var_17464: Tensor[(15, 4, 10), float64]) -> Tensor[(15, 4, 10), float64] {
  %774 = cast(%var_17464, dtype="float64") /* ty=Tensor[(15, 4, 10), float64] */;
  log(%774) /* ty=Tensor[(15, 4, 10), float64] */
}

def @func_4251() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  %775 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %776 = @func_1784() /* ty=(Tensor[(960), float64],) */;
  %777 = @func_2850() /* ty=Tensor[(12, 8, 10), float64] */;
  %778 = %775.0;
  %779 = %776.0;
  (%777, %778, %779)
}

def @func_10528() -> (Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %780 = @func_2540() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) */;
  %781 = @func_3885() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %782 = @func_8999() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %783 = @func_8870() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %784 = @func_3680() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %785 = %780.1;
  %786 = %781.0;
  %787 = %782.0;
  %788 = %783.0;
  %789 = %784.0;
  (%785, %786, %787, %788, %789)
}

def @func_12377() -> Tensor[(960), float64] {
  @func_5006() /* ty=Tensor[(960), float64] */
}

def @func_17105(%var_17045: Tensor[(144, 2), uint64]) -> (Tensor[(12, 8, 10), float64], Tensor[(144, 2), float32], Tensor[(144, 2), bool], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(144, 2), float32], Tensor[(960), float64]) {
  %790 = @func_7914() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %791 = cast(meta[relay.Constant][31] /* ty=Tensor[(144, 2), uint64] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %792 = cast(meta[relay.Constant][31] /* ty=Tensor[(144, 2), uint64] */, dtype="uint64") /* ty=Tensor[(144, 2), uint64] */;
  %793 = cast(meta[relay.Constant][31] /* ty=Tensor[(144, 2), uint64] */, dtype="uint64") /* ty=Tensor[(144, 2), uint64] */;
  %794 = reshape(%792, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint64] */;
  %795 = reshape(%793, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint64] */;
  %796 = @func_10346(%794, %795) /* ty=(Tensor[(12, 12, 2), float32], Tensor[(12, 12, 2), int16]) */;
  %797 = %796.1;
  %798 = cast(%797, dtype="bool") /* ty=Tensor[(12, 12, 2), bool] */;
  %799 = shape_of(%var_17045, dtype="int32") /* ty=Tensor[(2), int32] */;
  %800 = cast(%var_17045, dtype="bool") /* ty=Tensor[(144, 2), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %802 = @func_7158() /* ty=(Tensor[(12, 12, 11), int32], Tensor[(12, 8, 10), float32]) */;
  %803 = @func_1968() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %804 = cast(%var_17045, dtype="uint32") /* ty=Tensor[(144, 2), uint32] */;
  %805 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(144, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %806 = cast(meta[relay.Constant][31] /* ty=Tensor[(144, 2), uint64] */, dtype="uint32") /* ty=Tensor[(144, 2), uint32] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %808 = subtract(%806, %807) /* ty=Tensor[(144, 2), uint32] */;
  %809 = cast(meta[relay.Constant][31] /* ty=Tensor[(144, 2), uint64] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(2), int32] */;
  %811 = cast(%808, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %813 = @func_16606() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %814 = %790.0;
  %815 = acos(%791) /* ty=Tensor[(144, 2), float32] */;
  %816 = greater_equal(%800, %801) /* ty=Tensor[(144, 2), bool] */;
  %817 = %802.1;
  %818 = %803.0;
  %819 = mod(%811, %812) /* ty=Tensor[(144, 2), float32] */;
  %820 = %813.0;
  (%814, %815, %816, %817, %818, %819, %820)
}

def @func_6607() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %821 = @func_5807() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %822 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %823 = %821.0;
  %824 = %822.0;
  (%823, %824)
}

def @func_8999() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %825 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %826 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %827 = @func_6727() /* ty=(Tensor[(960), float64],) */;
  %828 = %825.1;
  %829 = %826.2;
  %830 = %827.0;
  (%828, %829, %830)
}

def @func_10072() -> (Tensor[(960), float64],) {
  %831 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %832 = %831.0;
  (%832,)
}

def @func_61(%var_52: Tensor[(12, 8, 10), float64]) -> (Tensor[(12, 8, 10), float64],) {
  %833 = cast(%var_52, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %834 = cos(%833) /* ty=Tensor[(12, 8, 10), float64] */;
  (%834,)
}

def @func_5281(%var_5256: Tensor[(6, 2, 8), float64]) -> (Tensor[(6, 2, 8), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 2, 8), float64], Tensor[(12, 8, 10), float64]) {
  %835 = cast(%var_5256, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %836 = @func_2381() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %837 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %838 = cast(%var_5256, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %839 = %837.0;
  %840 = cast(%839, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %841 = reshape(%840, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %842 = @func_61(%841) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %843 = cosh(%835) /* ty=Tensor[(6, 2, 8), float64] */;
  %844 = %836.1;
  %845 = asin(%838) /* ty=Tensor[(6, 2, 8), float64] */;
  %846 = %842.0;
  (%843, %844, %839, %845, %846)
}

def @func_9149(%var_9125: Tensor[(4, 13, 4), float64]) -> Tensor[(4, 13, 4), float64] {
  %847 = cast(%var_9125, dtype="float64") /* ty=Tensor[(4, 13, 4), float64] */;
  log10(%847) /* ty=Tensor[(4, 13, 4), float64] */
}

def @func_4545() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %848 = @func_3611() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %849 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %850 = %848.0;
  %851 = %849.0;
  (%850, %851)
}

def @func_2095() -> Tensor[(960), float64] {
  %852 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %852.1
}

def @func_13334() -> (Tensor[(12, 8, 10), float64],) {
  %853 = @func_6955() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %854 = %853.1;
  (%854,)
}

def @func_6964() -> Tensor[(12, 8, 10), float64] {
  %855 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %855.0
}

def @func_15618() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %856 = @func_4809() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %857 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %858 = %856.1;
  %859 = %857.0;
  (%858, %859)
}

def @func_1649() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %860 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %861 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %862 = %860.0;
  %863 = %861.1;
  (%862, %863)
}

def @func_15051() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %864 = @func_1890() /* ty=(Tensor[(960), float64],) */;
  %865 = @func_13296() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %866 = %864.0;
  %867 = %865.1;
  (%866, %867)
}

def @func_18215() -> Tensor[(12, 8, 10), float64] {
  %868 = @func_1028() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %868.1
}

def @func_3836() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %869 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %870 = %869.0;
  %871 = @func_1211() /* ty=Tensor[(960), float64] */;
  (%870, %871)
}

def @func_8946() -> Tensor[(960), float64] {
  %872 = @func_6607() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %872.1
}

def @func_15146() -> (Tensor[(960), float64],) {
  %873 = @func_1830() /* ty=(Tensor[(960), float64],) */;
  %874 = %873.0;
  (%874,)
}

def @func_3527() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %875 = @func_778() /* ty=Tensor[(960), float64] */;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(960), float64] */;
  %877 = reshape(%876, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %878 = @func_331(%877) /* ty=(Tensor[(12, 8, 10), float32],) */;
  %879 = %878.0;
  (%875, %879)
}

def @func_15739() -> (Tensor[(960), uint16], Tensor[(960), float64], Tensor[(960), float64]) {
  %880 = @func_4485() /* ty=(Tensor[(960), uint16],) */;
  %881 = @func_10931() /* ty=(Tensor[(960), float64],) */;
  %882 = @func_11179() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %883 = %880.0;
  %884 = %881.0;
  %885 = %882.0;
  (%883, %884, %885)
}

def @func_18064() -> Tensor[(960), float64] {
  %886 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %886.1
}

def @func_827(%var_823: Tensor[(6, 14, 6), float64]) -> (Tensor[(6, 14, 6), float64],) {
  %887 = cast(%var_823, dtype="float64") /* ty=Tensor[(6, 14, 6), float64] */;
  %888 = log(%887) /* ty=Tensor[(6, 14, 6), float64] */;
  (%888,)
}

def @func_5455() -> Tensor[(12, 8, 10), float32] {
  %889 = @func_1028() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %889.0
}

def @func_2903() -> Tensor[(12, 8, 10), float32] {
  %890 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %890.3
}

def @func_11835() -> Tensor[(960), float64] {
  %891 = @func_5092() /* ty=(Tensor[(960), float64],) */;
  %891.0
}

def @func_3885() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %892 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %893 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %894 = @func_2810() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %895 = %892.1;
  %896 = %893.0;
  %897 = %894.0;
  (%895, %896, %897)
}

def @func_778() -> Tensor[(960), float64] {
  %898 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %898.0
}

def @func_10595() -> Tensor[(960), float64] {
  @func_9045() /* ty=Tensor[(960), float64] */
}

def @func_1268() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %899 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %900 = %899.0;
  %901 = cast(%900, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %902 = reshape(%901, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %903 = @func_61(%902) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %904 = %903.0;
  (%900, %904)
}

def @func_1821() -> Tensor[(12, 8, 10), float32] {
  %905 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %905.0
}

def @func_1609() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %906 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %907 = @func_778() /* ty=Tensor[(960), float64] */;
  %908 = %906.0;
  (%907, %908)
}

def @func_2476() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %909 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %910 = @func_2381() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %911 = %909.0;
  %912 = %910.1;
  (%911, %912)
}

def @func_6482(%var_6465: Tensor[(1, 54), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 54), float32]) {
  %913 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  %914 = cast(%913, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %915 = reshape(%914, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %916 = @func_331(%915) /* ty=(Tensor[(12, 8, 10), float32],) */;
  %917 = cast(%var_6465, dtype="float32") /* ty=Tensor[(1, 54), float32] */;
  %918 = reshape(%917, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), float32] */;
  %919 = @func_6094(%918) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(9, 3, 2), bool], Tensor[(960), float64]) */;
  %920 = %916.0;
  %921 = %919.1;
  (%913, %920, %921, %var_6465)
}

def @func_2661() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %922 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %923 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %924 = %922.0;
  %925 = %923.1;
  (%924, %925)
}

def @func_4906() -> Tensor[(960), float64] {
  @func_2095() /* ty=Tensor[(960), float64] */
}

def @func_13730() -> (Tensor[(960), float64],) {
  %926 = @func_8402() /* ty=Tensor[(960), float64] */;
  (%926,)
}

def @func_16950(%var_16929: uint8, %var_16930: Tensor[(8, 5, 10), uint8]) -> Tensor[(8, 5, 10), bool] {
  %927 = cast(%var_16929, dtype="bool") /* ty=bool */;
  %928 = cast(%var_16930, dtype="bool") /* ty=Tensor[(8, 5, 10), bool] */;
  less(%927, %928) /* ty=Tensor[(8, 5, 10), bool] */
}

def @func_411() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %929 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %930 = %929.4;
  %931 = cast(%930, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %932 = acosh(%931) /* ty=Tensor[(12, 8, 10), float64] */;
  %933 = cast(%932, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %934 = tan(%933) /* ty=Tensor[(12, 8, 10), float64] */;
  %935 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  (%934, %935)
}

def @func_16606() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %936 = @func_12717() /* ty=(Tensor[(960), float64],) */;
  %937 = @func_12821() /* ty=(Tensor[(960), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %938 = %936.0;
  %939 = %937.0;
  (%938, %939)
}

def @func_6955() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %940 = @func_6918() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %941 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %942 = @func_3885() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %943 = %940.0;
  %944 = %941.1;
  %945 = %942.2;
  (%943, %944, %945)
}

def @func_9925() -> Tensor[(12, 8, 10), float32] {
  @func_2131() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_9561() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %946 = @func_1488() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %947 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %948 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %949 = @func_5535() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %950 = %946.0;
  %951 = @func_6271() /* ty=Tensor[(12, 8, 10), float32] */;
  %952 = %947.1;
  %953 = %948.1;
  %954 = %949.0;
  (%950, %951, %952, %953, %954)
}

def @func_17626() -> (Tensor[(960), float64], Tensor[(6, 11, 16), int8], int8, Tensor[(1056), int8], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %955 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %956 = cast(meta[relay.Constant][33] /* ty=Tensor[(1056), int8] */, dtype="int8") /* ty=Tensor[(1056), int8] */;
  %957 = reshape(%955, newshape=[]) /* ty=int8 */;
  %958 = reshape(%956, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), int8] */;
  %959 = @func_4636() /* ty=Tensor[(960), float64] */;
  %960 = @func_10161(%957, %958) /* ty=Tensor[(6, 11, 16), int8] */;
  %961 = @func_13692() /* ty=Tensor[(12, 8, 10), float32] */;
  %962 = @func_4607() /* ty=Tensor[(960), float64] */;
  (%959, %960, meta[relay.Constant][32] /* ty=int8 */, meta[relay.Constant][33] /* ty=Tensor[(1056), int8] */, %961, %962)
}

def @func_6241() -> (Tensor[(960), float64], Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) {
  %963 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %964 = %963.0;
  %965 = @func_3979() /* ty=Tensor[(12, 8, 10), int16] */;
  %966 = @func_5455() /* ty=Tensor[(12, 8, 10), float32] */;
  (%964, %965, %966)
}

def @func_11957(%var_11926: float64, %var_11928: Tensor[(1, 1120), bool]) -> (Tensor[(12, 8, 10), float64], Tensor[(1120), bool], Tensor[(480), float64], Tensor[(960), float64], Tensor[(128), float32], Tensor[(1, 1120), float64]) {
  %967 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %968 = cast(%var_11926, dtype="float64") /* ty=float64 */;
  %969 = cast(meta[relay.Constant][34] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %970 = cast(%var_11928, dtype="bool") /* ty=Tensor[(1, 1120), bool] */;
  %971 = reshape(%968, newshape=[]) /* ty=float64 */;
  %972 = reshape(%969, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %973 = reshape(%970, newshape=[1120]) /* ty=Tensor[(1120), bool] */;
  %974 = @func_3439(%971, %972, %973) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(1120), bool], Tensor[(12, 8, 10), float32]) */;
  %975 = cast(meta[relay.Constant][35] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %976 = reshape(%975, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
  %977 = @func_3483(%976) /* ty=(Tensor[(16, 1, 8), float32], Tensor[(960), float64], Tensor[(16, ?, 8), int8]) */;
  %978 = cast(%var_11928, dtype="float32") /* ty=Tensor[(1, 1120), float32] */;
  %979 = erf(%978) /* ty=Tensor[(1, 1120), float32] */;
  %980 = cast(%979, dtype="uint16") /* ty=Tensor[(1, 1120), uint16] */;
  %981 = cast(%var_11926, dtype="uint16") /* ty=uint16 */;
  %982 = minimum(%980, %981) /* ty=Tensor[(1, 1120), uint16] */;
  %983 = cast(%982, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
  %984 = %967.1;
  %985 = %974.7;
  %986 = %977.1;
  %987 = cosh(%983) /* ty=Tensor[(1, 1120), float64] */;
  (%984, %985, meta[relay.Constant][34] /* ty=Tensor[(480), float64] */, %986, meta[relay.Constant][35] /* ty=Tensor[(128), float32] */, %987)
}

def @func_13585() -> (Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64]) {
  %988 = cast(-5.62176f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %989 = cast(meta[relay.Constant][36] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %990 = reshape(%988, newshape=[]) /* ty=float64 */;
  %991 = reshape(%989, newshape=[16, 15, 2]) /* ty=Tensor[(16, 15, 2), float64] */;
  %992 = @func_1423(%990, %991) /* ty=(Tensor[(16, 15, 2), float64],) */;
  %993 = @func_9045() /* ty=Tensor[(960), float64] */;
  %994 = %992.0;
  (%993, %994, -5.62176f64 /* ty=float64 */, meta[relay.Constant][36] /* ty=Tensor[(480), float64] */)
}

def @func_3288() -> (Tensor[(960), float64],) {
  %995 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %996 = %995.1;
  (%996,)
}

def @func_6271() -> Tensor[(12, 8, 10), float32] {
  @func_1909() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_14103() -> (Tensor[(12, 8, 10), float32], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %997 = @func_13183() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %998 = cast(meta[relay.Constant][37] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %999 = reshape(%998, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), float32] */;
  %1000 = @func_10915(%999) /* ty=(Tensor[(5, 6, 3), float32],) */;
  %1001 = @func_11022() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1002 = cast(meta[relay.Constant][38] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1003 = reshape(%1002, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
  %1004 = @func_827(%1003) /* ty=(Tensor[(6, 14, 6), float64],) */;
  %1005 = %997.1;
  %1006 = %1000.0;
  %1007 = %1001.1;
  %1008 = %1004.0;
  %1009 = @func_9066() /* ty=Tensor[(12, 8, 10), float64] */;
  %1010 = @func_8946() /* ty=Tensor[(960), float64] */;
  (%1005, %1006, meta[relay.Constant][37] /* ty=Tensor[(90), float32] */, %1007, %1008, meta[relay.Constant][38] /* ty=Tensor[(504), float64] */, %1009, %1010)
}

def @func_15214() -> (Tensor[(12, 2, 12), float64],) {
  %1011 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 2, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 12), float64] */;
  %1012 = acosh(%1011) /* ty=Tensor[(12, 2, 12), float64] */;
  (%1012,)
}

def @func_12522() -> (Tensor[(12, 8, 10), float32],) {
  %1013 = @func_5229() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1014 = %1013.0;
  (%1014,)
}

def @func_598() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %1015 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1016 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1017 = %1015.2;
  %1018 = %1016.2;
  (%1017, %1018)
}

def @func_11047() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %1019 = @func_3611() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1020 = @func_4545() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1021 = %1019.0;
  %1022 = %1020.1;
  (%1021, %1022)
}

def @func_14572() -> (Tensor[(12, 8, 10), float64],) {
  %1023 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1024 = %1023.0;
  (%1024,)
}

def @func_12625() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1025 = @func_6607() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %1026 = @func_5086() /* ty=(Tensor[(15, 15, 15), bool], Tensor[(960), float64]) */;
  %1027 = @func_3836() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1028 = %1025.1;
  %1029 = %1026.1;
  %1030 = %1027.0;
  (%1028, %1029, %1030)
}

def @func_6431() -> Tensor[(13, 9, 7), float64] {
  %1031 = @func_2540() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) */;
  %1031.1
}

def @func_9990() -> Tensor[(16, 3, 5), float32] {
  %1032 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 5), float32] */;
  cos(%1032) /* ty=Tensor[(16, 3, 5), float32] */
}

def @func_798(%var_790: Tensor[(12, 8, 10), float32]) -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) {
  %1033 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1034 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1035 = %1034.1;
  %1036 = cast(%var_790, dtype="int32") /* ty=Tensor[(12, 8, 10), int32] */;
  %1037 = shape_of(%1035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1038 = cast(%1035, dtype="int32") /* ty=Tensor[(12, 8, 10), int32] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1040 = %1033.0;
  %1041 = logical_xor(%1038, %1039) /* ty=Tensor[(12, 8, 10), int32] */;
  (%1040, %1041)
}

def @func_12393() -> Tensor[(12, 8, 10), float32] {
  %1042 = @func_4332() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool], Tensor[(819), uint64]) */;
  %1042.1
}

def @func_10637() -> (Tensor[(960), float64],) {
  %1043 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1044 = %1043.0;
  (%1044,)
}

def @func_16982() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %1045 = @func_14286() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1046 = %1045.0;
  %1047 = @func_2850() /* ty=Tensor[(12, 8, 10), float64] */;
  (%1046, %1047)
}

def @func_17245() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(504), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  %1048 = cast(meta[relay.Constant][41] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1049 = reshape(%1048, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1050 = @func_2442(%1049) /* ty=(Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) */;
  %1051 = @func_15146() /* ty=(Tensor[(960), float64],) */;
  %1052 = @func_11491() /* ty=(Tensor[(960), float64],) */;
  %1053 = @func_5942() /* ty=Tensor[(960), float64] */;
  %1054 = %1050.3;
  %1055 = %1051.0;
  %1056 = %1052.0;
  (%1053, %1054, meta[relay.Constant][41] /* ty=Tensor[(504), float64] */, %1055, %1056)
}

def @func_17817(%var_17750: Tensor[(16, 6, 11), int16], %var_17751: Tensor[(16, 6, 11), int16]) -> (Tensor[(16, 6, 11), int8],) {
  %1057 = cast(%var_17751, dtype="bool") /* ty=Tensor[(16, 6, 11), bool] */;
  %1058 = shape_of(%var_17750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1059 = cast(%var_17750, dtype="bool") /* ty=Tensor[(16, 6, 11), bool] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1061 = greater(%1059, %1060) /* ty=Tensor[(16, 6, 11), bool] */;
  %1062 = cast(%1061, dtype="int8") /* ty=Tensor[(16, 6, 11), int8] */;
  %1063 = shape_of(%var_17751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(%var_17751, dtype="int8") /* ty=Tensor[(16, 6, 11), int8] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1066 = bitwise_and(%1064, %1065) /* ty=Tensor[(16, 6, 11), int8] */;
  (%1066,)
}

def @func_10419() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %1067 = @func_2831() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1068 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1069 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1070 = %1067.1;
  %1071 = %1068.1;
  %1072 = %1069.1;
  (%1070, %1071, %1072)
}

def @func_14411() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 12, 11), int32]) {
  %1073 = @func_3114() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) */;
  %1074 = @func_4104() /* ty=(Tensor[(12, 12, 11), int32],) */;
  %1075 = %1073.1;
  %1076 = %1074.0;
  (%1075, %1076)
}

def @func_4157(%var_4147: Tensor[(16, 3, 10), float64], %var_4148: Tensor[(16, 3, 10), float64]) -> (Tensor[(16, 3, 10), float64],) {
  %1077 = cast(%var_4148, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
  %1078 = shape_of(%var_4147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1079 = cast(%var_4147, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
  %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1081 = mod(%1079, %1080) /* ty=Tensor[(16, 3, 10), float64] */;
  (%1081,)
}

def @func_4731(%var_4728: Tensor[(819), uint64]) -> (Tensor[(12, 8, 10), float64], Tensor[(13, 9, 7), uint64], Tensor[(819), uint64]) {
  %1082 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1083 = cast(%var_4728, dtype="uint64") /* ty=Tensor[(819), uint64] */;
  %1084 = cast(%var_4728, dtype="uint64") /* ty=Tensor[(819), uint64] */;
  %1085 = reshape(%1083, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
  %1086 = reshape(%1084, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
  %1087 = @func_2121(%1085, %1086) /* ty=(Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) */;
  %1088 = %1082.0;
  %1089 = %1087.0;
  (%1088, %1089, %var_4728)
}

def @func_15753() -> Tensor[(12, 8, 10), float64] {
  %1090 = @func_7914() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1090.0
}

def @func_275() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %1091 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 9, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %1092 = cast(meta[relay.Constant][43] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1093 = reshape(%1092, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1094 = @func_61(%1093) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1095 = cast(meta[relay.Constant][43] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1096 = reshape(%1095, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1097 = @func_61(%1096) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1098 = cast(meta[relay.Constant][43] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1099 = reshape(%1098, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1100 = @func_61(%1099) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1101 = log10(%1091) /* ty=Tensor[(3, 9, 6), float64] */;
  %1102 = %1094.0;
  %1103 = %1097.0;
  %1104 = %1100.0;
  (%1101, %1102, meta[relay.Constant][43] /* ty=Tensor[(960), float64] */, %1103, %1104)
}

def @func_6636(%var_6626: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504), float64], Tensor[(960), float64]) {
  %1105 = @func_4809() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %1106 = cast(%var_6626, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1107 = cast(meta[relay.Constant][44] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1108 = reshape(%1106, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %1109 = reshape(%1107, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1110 = @func_6312(%1108, %1109) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %1111 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %1112 = %1105.1;
  %1113 = %1110.2;
  %1114 = %1111.0;
  (%1112, %1113, %var_6626, meta[relay.Constant][44] /* ty=Tensor[(504), float64] */, %1114)
}

def @func_6700() -> (Tensor[(960), uint16],) {
  %1115 = @func_4485() /* ty=(Tensor[(960), uint16],) */;
  %1116 = %1115.0;
  (%1116,)
}

def @func_14244() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1117 = @func_1754() /* ty=(Tensor[(960), float64],) */;
  %1118 = %1117.0;
  %1119 = @func_10440() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1118, %1119)
}

def @func_15382() -> Tensor[(960), float64] {
  %1120 = @func_6727() /* ty=(Tensor[(960), float64],) */;
  %1120.0
}

def @func_7158() -> (Tensor[(12, 12, 11), int32], Tensor[(12, 8, 10), float32]) {
  %1121 = @func_4104() /* ty=(Tensor[(12, 12, 11), int32],) */;
  %1122 = %1121.0;
  %1123 = @func_1909() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1122, %1123)
}

def @func_7635() -> Tensor[(960), uint16] {
  %1124 = @func_6700() /* ty=(Tensor[(960), uint16],) */;
  %1124.0
}

def @func_17637() -> (Tensor[(960), float64],) {
  %1125 = @func_10595() /* ty=Tensor[(960), float64] */;
  (%1125,)
}

def @func_12294() -> (Tensor[(12, 8, 10), float64],) {
  %1126 = @func_10218() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_7550() -> Tensor[(960), float64] {
  @func_5942() /* ty=Tensor[(960), float64] */
}

def @func_17723(%var_17698: Tensor[(756), uint8], %var_17715: Tensor[(756), uint8]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(756), uint64]) {
  %1128 = @func_4431() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
  %1129 = cast(%var_17698, dtype="uint8") /* ty=Tensor[(756), uint8] */;
  %1130 = reshape(%1129, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), uint8] */;
  %1131 = @func_9778(%1130) /* ty=(Tensor[(6, 14, 9), uint8], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1132 = @func_14471() /* ty=(Tensor[(960), float64],) */;
  %1133 = cast(%var_17715, dtype="uint64") /* ty=Tensor[(756), uint64] */;
  %1134 = shape_of(%var_17698, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1135 = cast(%var_17698, dtype="uint64") /* ty=Tensor[(756), uint64] */;
  %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1137 = %1128.1;
  %1138 = %1131.1;
  %1139 = %1132.0;
  %1140 = logical_xor(%1135, %1136) /* ty=Tensor[(756), uint64] */;
  (%1137, %1138, %1139, %1140)
}

def @func_5802() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %1141 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1142 = %1141.1;
  %1143 = cast(%1142, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1144 = reshape(%1143, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1145 = @func_61(%1144) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1146 = %1145.0;
  (%1142, %1146)
}

def @func_5229() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1147 = @func_2831() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1148 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1149 = %1147.1;
  %1150 = %1148.1;
  (%1149, %1150)
}

def @func_17010() -> (Tensor[(12, 8, 10), float32],) {
  %1151 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1151,)
}

def @func_1514() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %1152 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1153 = %1152.1;
  %1154 = cast(%1153, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1155 = reshape(%1154, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1156 = @func_61(%1155) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1157 = %1156.0;
  (%1153, %1157)
}

def @func_16126() -> (Tensor[(12, 8, 10), float32], Tensor[(6, 11, 7), int8], int8, Tensor[(7, 66), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %1158 = cast(meta[relay.Constant][45] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1159 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 66), int8] */, dtype="int8") /* ty=Tensor[(7, 66), int8] */;
  %1160 = reshape(%1158, newshape=[]) /* ty=int8 */;
  %1161 = reshape(%1159, newshape=[6, 11, 7]) /* ty=Tensor[(6, 11, 7), int8] */;
  %1162 = @func_6617(%1160, %1161) /* ty=(Tensor[(6, 11, 7), int8],) */;
  %1163 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 66), int8] */, dtype="float64") /* ty=Tensor[(7, 66), float64] */;
  %1164 = @func_15146() /* ty=(Tensor[(960), float64],) */;
  %1165 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1166 = @func_13637() /* ty=Tensor[(12, 8, 10), float32] */;
  %1167 = %1162.0;
  %1168 = cosh(%1163) /* ty=Tensor[(7, 66), float64] */;
  %1169 = %1164.0;
  %1170 = @func_1848() /* ty=Tensor[(12, 8, 10), float32] */;
  %1171 = @func_2850() /* ty=Tensor[(12, 8, 10), float64] */;
  %1172 = %1165.1;
  (%1166, %1167, meta[relay.Constant][45] /* ty=int8 */, %1168, %1169, %1170, %1171, %1172)
}

def @func_7977() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64]) {
  %1173 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1174 = @func_3114() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) */;
  %1175 = %1173.0;
  %1176 = %1174.0;
  %1177 = @func_6526() /* ty=Tensor[(960), float64] */;
  (%1175, %1176, %1177)
}

def @func_5942() -> Tensor[(960), float64] {
  %1178 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1178.0
}

def @func_9818() -> (Tensor[(960), float64],) {
  %1179 = @func_1211() /* ty=Tensor[(960), float64] */;
  (%1179,)
}

def @func_7309() -> Tensor[(12, 8, 10), float64] {
  %1180 = @func_5807() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1180.0
}

def @func_12913() -> Tensor[(12, 8, 10), float32] {
  @func_10440() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_2442(%var_2427: Tensor[(504), float64]) -> (Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) {
  %1181 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1182 = %1181.0;
  %1183 = cast(%1182, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1184 = reshape(%1183, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1185 = @func_61(%1184) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1186 = %1185.0;
  %1187 = cast(%1186, dtype="int16") /* ty=Tensor[(12, 8, 10), int16] */;
  %1188 = shape_of(%1182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1189 = cast(%1182, dtype="int16") /* ty=Tensor[(12, 8, 10), int16] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1191 = cast(%var_2427, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1192 = reshape(%1191, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
  %1193 = @func_827(%1192) /* ty=(Tensor[(6, 14, 6), float64],) */;
  %1194 = cast(%1186, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %1195 = reshape(%1194, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
  %1196 = @func_798(%1195) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) */;
  %1197 = multiply(%1189, %1190) /* ty=Tensor[(12, 8, 10), int16] */;
  %1198 = %1193.0;
  %1199 = %1196.0;
  (%1197, %1198, %var_2427, %1199)
}

def @func_5086() -> (Tensor[(15, 15, 15), bool], Tensor[(960), float64]) {
  %1200 = @func_2185() /* ty=Tensor[(15, 15, 15), bool] */;
  %1201 = @func_4636() /* ty=Tensor[(960), float64] */;
  (%1200, %1201)
}

def @func_13147() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %1202 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1203 = @func_5012() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1204 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %1205 = @func_2095() /* ty=Tensor[(960), float64] */;
  %1206 = @func_9066() /* ty=Tensor[(12, 8, 10), float64] */;
  %1207 = %1202.0;
  %1208 = %1203.0;
  %1209 = %1204.0;
  (%1205, %1206, %1207, %1208, %1209)
}

def @func_5535() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1210 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1211 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1212 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1213 = %1210.0;
  %1214 = %1211.0;
  %1215 = %1212.1;
  %1216 = @func_2131() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1213, %1214, %1215, %1216)
}

def @func_12235() -> (Tensor[(13, 9, 7), float64],) {
  %1217 = @func_10528() /* ty=(Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1218 = %1217.0;
  (%1218,)
}

def @func_13296() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %1219 = @func_4636() /* ty=Tensor[(960), float64] */;
  %1220 = @func_6771() /* ty=Tensor[(960), float64] */;
  (%1219, %1220)
}

def @func_1447(%var_1443: Tensor[(504), float64]) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64]) {
  %1221 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %1222 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1223 = cast(%var_1443, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1224 = reshape(%1223, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
  %1225 = @func_827(%1224) /* ty=(Tensor[(6, 14, 6), float64],) */;
  %1226 = %1221.0;
  %1227 = %1222.0;
  %1228 = %1225.0;
  (%1226, %1227, %1228, %var_1443)
}

def @func_6856() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %1229 = @func_1890() /* ty=(Tensor[(960), float64],) */;
  %1230 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1231 = %1229.0;
  %1232 = %1230.1;
  (%1231, %1232)
}

def @func_4431() -> (Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) {
  %1233 = @func_3680() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1234 = @func_3979() /* ty=Tensor[(12, 8, 10), int16] */;
  %1235 = %1233.0;
  (%1234, %1235)
}

def @func_13183() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %1236 = @func_1488() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1237 = @func_7309() /* ty=Tensor[(12, 8, 10), float64] */;
  %1238 = %1236.0;
  (%1237, %1238)
}

def @func_2810() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %1239 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1240 = @func_1754() /* ty=(Tensor[(960), float64],) */;
  %1241 = %1239.0;
  %1242 = %1240.0;
  (%1241, %1242)
}

def @func_7022() -> (Tensor[(960), float64], Tensor[(480), float64], Tensor[(12, 8, 10), float64], Tensor[(16, 3, 10), int32], Tensor[(960), float64]) {
  %1243 = @func_6771() /* ty=Tensor[(960), float64] */;
  %1244 = cast(%1243, dtype="float32") /* ty=Tensor[(960), float32] */;
  %1245 = reshape(%1244, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
  %1246 = @func_798(%1245) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) */;
  %1247 = cast(meta[relay.Constant][47] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1248 = cast(meta[relay.Constant][47] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1249 = reshape(%1247, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), float64] */;
  %1250 = reshape(%1248, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), float64] */;
  %1251 = @func_4157(%1249, %1250) /* ty=(Tensor[(16, 3, 10), float64],) */;
  %1252 = %1251.0;
  %1253 = cast(%1252, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
  %1254 = atanh(%1253) /* ty=Tensor[(16, 3, 10), float64] */;
  %1255 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 3, 10), float64] */, dtype="bool") /* ty=Tensor[(16, 3, 10), bool] */;
  %1256 = shape_of(%1254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1257 = cast(%1254, dtype="bool") /* ty=Tensor[(16, 3, 10), bool] */;
  %1258 = dyn.reshape(%1255, %1256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1259 = logical_and(%1257, %1258) /* ty=Tensor[(16, 3, 10), bool] */;
  %1260 = cast(%1254, dtype="int32") /* ty=Tensor[(16, 3, 10), int32] */;
  %1261 = shape_of(%1259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1262 = cast(%1259, dtype="int32") /* ty=Tensor[(16, 3, 10), int32] */;
  %1263 = dyn.reshape(%1260, %1261, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1264 = @func_2696() /* ty=(Tensor[(960), float64],) */;
  %1265 = %1246.0;
  %1266 = bitwise_xor(%1262, %1263) /* ty=Tensor[(16, 3, 10), int32] */;
  %1267 = %1264.0;
  (%1243, meta[relay.Constant][47] /* ty=Tensor[(480), float64] */, %1265, %1266, %1267)
}

def @func_13107() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], float64, Tensor[(480), float64], Tensor[(1, 1120), bool], Tensor[(960), float64], Tensor[(960), float64]) {
  %1268 = cast(5.37442f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1269 = cast(meta[relay.Constant][49] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1270 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 1120), bool] */, dtype="bool") /* ty=Tensor[(1, 1120), bool] */;
  %1271 = reshape(%1268, newshape=[]) /* ty=float64 */;
  %1272 = reshape(%1269, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %1273 = reshape(%1270, newshape=[1120]) /* ty=Tensor[(1120), bool] */;
  %1274 = @func_3439(%1271, %1272, %1273) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(1120), bool], Tensor[(12, 8, 10), float32]) */;
  %1275 = @func_3577() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1276 = @func_2992() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1277 = @func_10839() /* ty=Tensor[(960), float64] */;
  %1278 = %1274.6;
  %1279 = %1275.1;
  %1280 = %1276.3;
  (%1277, %1278, 5.37442f64 /* ty=float64 */, meta[relay.Constant][49] /* ty=Tensor[(480), float64] */, meta[relay.Constant][50] /* ty=Tensor[(1, 1120), bool] */, %1279, %1280)
}

def @func_9168() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %1281 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1282 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1283 = @func_5976() /* ty=Tensor[(12, 8, 10), float32] */;
  %1284 = %1281.1;
  %1285 = %1282.0;
  (%1283, %1284, %1285)
}

def @func_851() -> (Tensor[(12, 8, 10), float32],) {
  %1286 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1287 = %1286.0;
  (%1287,)
}

def @func_345() -> Tensor[(12, 8, 10), float32] {
  %1288 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1289 = %1288.3;
  %1290 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 8, 10), float64] */, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %1291 = shape_of(%1289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1292 = cast(%1289, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %1293 = dyn.reshape(%1290, %1291, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%1292, %1293) /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_6687() -> (Tensor[(5, 3, 2), float32], Tensor[(960), float64]) {
  %1294 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 3, 2), float32] */, dtype="float32") /* ty=Tensor[(5, 3, 2), float32] */;
  %1295 = log(%1294) /* ty=Tensor[(5, 3, 2), float32] */;
  %1296 = @func_5860() /* ty=Tensor[(960), float64] */;
  (%1295, %1296)
}

def @func_6878() -> (Tensor[(960), float64],) {
  %1297 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1298 = %1297.1;
  (%1298,)
}

def @func_8298() -> Tensor[(960), float64] {
  @func_4607() /* ty=Tensor[(960), float64] */
}

def @func_3979() -> Tensor[(12, 8, 10), int16] {
  %1299 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1300 = %1299.0;
  %1301 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %1302 = %1301.0;
  %1303 = cast(%1302, dtype="int16") /* ty=Tensor[(960), int16] */;
  %1304 = shape_of(%1300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1305 = cast(%1300, dtype="int16") /* ty=Tensor[(12, 8, 10), int16] */;
  %1306 = dyn.reshape(%1303, %1304, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%1305, %1306) /* ty=Tensor[(12, 8, 10), int16] */
}

def @func_2121(%var_2107: Tensor[(13, 9, 7), uint64], %var_2108: Tensor[(13, 9, 7), uint64]) -> (Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) {
  %1307 = cast(%var_2108, dtype="uint64") /* ty=Tensor[(13, 9, 7), uint64] */;
  %1308 = shape_of(%var_2107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1309 = cast(%var_2107, dtype="uint64") /* ty=Tensor[(13, 9, 7), uint64] */;
  %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1311 = cast(%var_2108, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  %1312 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1313 = %1312.0;
  %1314 = cast(%1313, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %1315 = reshape(%1314, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
  %1316 = @func_1371(%1315) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) */;
  %1317 = right_shift(%1309, %1310) /* ty=Tensor[(13, 9, 7), uint64] */;
  %1318 = atan(%1311) /* ty=Tensor[(13, 9, 7), float32] */;
  %1319 = %1316.2;
  (%1317, %1318, %1313, %1319)
}

def @func_12548(%var_12541: Tensor[(960), float64]) -> (Tensor[(16, 3, 5), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %1320 = cast(%var_12541, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1321 = reshape(%1320, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1322 = @func_61(%1321) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1323 = @func_9990() /* ty=Tensor[(16, 3, 5), float32] */;
  %1324 = %1322.0;
  (%1323, %1324, %var_12541)
}

def @func_571() -> (Tensor[(12, 8, 10), float32],) {
  %1325 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1325,)
}

def @func_2131() -> Tensor[(12, 8, 10), float32] {
  @func_1821() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_5012() -> (Tensor[(12, 8, 10), float32],) {
  %1326 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1327 = %1326.0;
  (%1327,)
}

def @func_4607() -> Tensor[(960), float64] {
  %1328 = @func_2476() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1328.0
}

def @func_8627(%var_8607: Tensor[(280), bool], %var_8609: Tensor[(120, 4), float64]) -> (Tensor[(12, 8, 10), float32], Tensor[(8, 5, 7), bool], Tensor[(280), bool], float64, Tensor[(120, 4), float64]) {
  %1329 = @func_4961() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1330 = cast(%var_8607, dtype="bool") /* ty=Tensor[(280), bool] */;
  %1331 = cast(3.41991f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1332 = cast(%var_8609, dtype="float64") /* ty=Tensor[(120, 4), float64] */;
  %1333 = reshape(%1330, newshape=[8, 5, 7]) /* ty=Tensor[(8, 5, 7), bool] */;
  %1334 = reshape(%1331, newshape=[]) /* ty=float64 */;
  %1335 = reshape(%1332, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %1336 = @func_4887(%1333, %1334, %1335) /* ty=(Tensor[(8, 5, 7), bool], Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1337 = %1329.0;
  %1338 = %1336.0;
  (%1337, %1338, %var_8607, 3.41991f64 /* ty=float64 */, %var_8609)
}

def @func_15034() -> Tensor[(960), float64] {
  @func_11975() /* ty=Tensor[(960), float64] */
}

def @func_16742() -> Tensor[(960), float64] {
  %1339 = @func_11179() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1339.0
}

def @func_6526() -> Tensor[(960), float64] {
  %1340 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1340.1
}

def @func_10915(%var_10909: Tensor[(5, 6, 3), float32]) -> (Tensor[(5, 6, 3), float32],) {
  %1341 = cast(%var_10909, dtype="float32") /* ty=Tensor[(5, 6, 3), float32] */;
  %1342 = cos(%1341) /* ty=Tensor[(5, 6, 3), float32] */;
  (%1342,)
}

def @func_1909() -> Tensor[(12, 8, 10), float32] {
  %1343 = @func_1110() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1343.0
}

def @func_6617(%var_6610: int8, %var_6611: Tensor[(6, 11, 7), int8]) -> (Tensor[(6, 11, 7), int8],) {
  %1344 = cast(%var_6610, dtype="int8") /* ty=int8 */;
  %1345 = cast(%var_6611, dtype="int8") /* ty=Tensor[(6, 11, 7), int8] */;
  %1346 = left_shift(%1344, %1345) /* ty=Tensor[(6, 11, 7), int8] */;
  (%1346,)
}

def @func_14149() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1347 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1348 = @func_12625() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1349 = %1347.0;
  %1350 = %1348.2;
  (%1349, %1350)
}

def @func_13220() -> Tensor[(12, 8, 10), float32] {
  %1351 = @func_2992() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1351.0
}

def @func_18005(%var_18001: Tensor[(11, 7, 13), uint32]) -> Tensor[(11, 7, 13), uint32] {
  %1352 = cast(%var_18001, dtype="uint32") /* ty=Tensor[(11, 7, 13), uint32] */;
  %1353 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(11, 7, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1354 = cast(meta[relay.Constant][53] /* ty=Tensor[(11, 7, 13), uint32] */, dtype="uint32") /* ty=Tensor[(11, 7, 13), uint32] */;
  %1355 = dyn.reshape(%1352, %1353, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%1354, %1355) /* ty=Tensor[(11, 7, 13), uint32] */
}

def @func_15277(%var_15223: Tensor[(672), float32], %var_15234: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(672), float32], Tensor[(12, 8, 10), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(12, 8, 10), bool]) {
  %1356 = cast(%var_15223, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1357 = cast(%var_15223, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1358 = reshape(%1356, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
  %1359 = reshape(%1357, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
  %1360 = @func_14866(%1358, %1359) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(7, 8, 12), float64]) */;
  %1361 = cast(%var_15234, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1362 = reshape(%1361, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1363 = @func_6636(%1362) /* ty=(Tensor[(960), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %1364 = @func_4906() /* ty=Tensor[(960), float64] */;
  %1365 = cast(%1364, dtype="float32") /* ty=Tensor[(960), float32] */;
  %1366 = reshape(%1365, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
  %1367 = @func_1371(%1366) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) */;
  %1368 = %1360.0;
  %1369 = @func_6964() /* ty=Tensor[(12, 8, 10), float64] */;
  %1370 = %1363.1;
  %1371 = %1367.2;
  (%1364, %1368, %var_15223, %1369, %1370, %var_15234, %1371)
}

def @func_15833() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1372 = @func_10528() /* ty=(Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1373 = @func_14761() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1374 = %1372.3;
  %1375 = %1373.4;
  (%1374, %1375)
}

def @func_4092() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %1376 = @func_2992() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1377 = @func_2992() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1378 = %1376.3;
  %1379 = %1377.3;
  (%1378, %1379)
}

def @func_10759(%var_10756: Tensor[(11, 3, 16), float32]) -> Tensor[(11, 3, 16), float32] {
  %1380 = cast(%var_10756, dtype="float32") /* ty=Tensor[(11, 3, 16), float32] */;
  acosh(%1380) /* ty=Tensor[(11, 3, 16), float32] */
}

def @func_15011() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %1381 = @func_13209() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1382 = @func_9925() /* ty=Tensor[(12, 8, 10), float32] */;
  %1383 = %1381.1;
  (%1382, %1383)
}

def @func_10991() -> (Tensor[(960), float64],) {
  %1384 = @func_4636() /* ty=Tensor[(960), float64] */;
  (%1384,)
}

def @func_4781() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1385 = @func_3680() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1386 = @func_778() /* ty=Tensor[(960), float64] */;
  %1387 = %1385.0;
  (%1386, %1387)
}

def @func_7591() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %1388 = @func_7527() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1389 = @func_2298() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1390 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1391 = %1388.1;
  %1392 = %1389.0;
  %1393 = %1390.1;
  (%1391, %1392, %1393)
}

def @func_884() -> (Tensor[(960), float64],) {
  %1394 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1395 = %1394.0;
  (%1395,)
}

def @func_8402() -> Tensor[(960), float64] {
  %1396 = @func_1890() /* ty=(Tensor[(960), float64],) */;
  %1396.0
}

def @func_16654() -> Tensor[(960), float64] {
  %1397 = @func_12625() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1397.0
}

def @func_2540() -> (Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) {
  %1398 = cast(meta[relay.Constant][54] /* ty=Tensor[(819), uint64] */, dtype="uint64") /* ty=Tensor[(819), uint64] */;
  %1399 = cast(meta[relay.Constant][54] /* ty=Tensor[(819), uint64] */, dtype="uint64") /* ty=Tensor[(819), uint64] */;
  %1400 = reshape(%1398, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
  %1401 = reshape(%1399, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
  %1402 = @func_2121(%1400, %1401) /* ty=(Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) */;
  %1403 = %1402.1;
  %1404 = cast(meta[relay.Constant][54] /* ty=Tensor[(819), uint64] */, dtype="int8") /* ty=Tensor[(819), int8] */;
  %1405 = shape_of(%1403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1406 = cast(%1403, dtype="int8") /* ty=Tensor[(13, 9, 7), int8] */;
  %1407 = dyn.reshape(%1404, %1405, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1408 = bitwise_xor(%1406, %1407) /* ty=Tensor[(13, 9, 7), int8] */;
  %1409 = cast(%1408, dtype="float64") /* ty=Tensor[(13, 9, 7), float64] */;
  %1410 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  %1411 = cos(%1409) /* ty=Tensor[(13, 9, 7), float64] */;
  (%1410, %1411)
}

def @func_14761() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1412 = @func_13761() /* ty=(Tensor[(960), float64],) */;
  %1413 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1414 = @func_4431() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
  %1415 = @func_3040() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1416 = @func_11900() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %1417 = @func_4221() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1418 = @func_11491() /* ty=(Tensor[(960), float64],) */;
  %1419 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1420 = @func_5860() /* ty=Tensor[(960), float64] */;
  %1421 = %1412.0;
  %1422 = %1413.0;
  %1423 = %1414.1;
  %1424 = %1415.0;
  %1425 = %1416.4;
  %1426 = %1417.2;
  %1427 = @func_5942() /* ty=Tensor[(960), float64] */;
  %1428 = %1418.0;
  %1429 = %1419.0;
  (%1420, %1421, %1422, %1423, %1424, %1425, %1426, %1427, %1428, %1429)
}

def @func_8920() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1430 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1431 = %1430.1;
  %1432 = cast(%1431, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1433 = reshape(%1432, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1434 = @func_331(%1433) /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1435 = %1434.0;
  %1436 = @func_8643() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1431, %1435, %1436)
}

def @func_12574(%var_12564: Tensor[(936), int32], %var_12571: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(9, 8, 13), int32], Tensor[(936), int32], Tensor[(504), float64], Tensor[(144), float64]) {
  %1437 = cast(%var_12564, dtype="int32") /* ty=Tensor[(936), int32] */;
  %1438 = reshape(%1437, newshape=[9, 8, 13]) /* ty=Tensor[(9, 8, 13), int32] */;
  %1439 = @func_10777(%1438) /* ty=(Tensor[(9, 8, 13), int32], Tensor[(12, 8, 10), float64]) */;
  %1440 = cast(%var_12571, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1441 = reshape(%1440, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %1442 = @func_6636(%1441) /* ty=(Tensor[(960), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %1443 = @func_7336() /* ty=Tensor[(960), float64] */;
  %1444 = %1439.0;
  %1445 = %1442.1;
  (%1443, %1444, %var_12564, %1445, %var_12571)
}

def @func_12960() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(2, 104), float64], Tensor[(4, 13, 4), bool], Tensor[(12, 8, 10), float32]) {
  %1446 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1447 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 104), float64] */, dtype="float64") /* ty=Tensor[(2, 104), float64] */;
  %1448 = reshape(%1447, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), float64] */;
  %1449 = @func_9149(%1448) /* ty=Tensor[(4, 13, 4), float64] */;
  %1450 = cast(%1449, dtype="float32") /* ty=Tensor[(4, 13, 4), float32] */;
  %1451 = tan(%1450) /* ty=Tensor[(4, 13, 4), float32] */;
  %1452 = cast(%1449, dtype="bool") /* ty=Tensor[(4, 13, 4), bool] */;
  %1453 = shape_of(%1451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1454 = cast(%1451, dtype="bool") /* ty=Tensor[(4, 13, 4), bool] */;
  %1455 = dyn.reshape(%1452, %1453, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1456 = @func_4607() /* ty=Tensor[(960), float64] */;
  %1457 = %1446.2;
  %1458 = not_equal(%1454, %1455) /* ty=Tensor[(4, 13, 4), bool] */;
  %1459 = @func_8643() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1456, %1457, meta[relay.Constant][55] /* ty=Tensor[(2, 104), float64] */, %1458, %1459)
}

def @func_17832() -> Tensor[(12, 8, 10), float32] {
  @func_1821() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_9045() -> Tensor[(960), float64] {
  %1460 = @func_6856() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1460.0
}

def @func_13497(%var_13483: Tensor[(504), float64]) -> (Tensor[(12, 8, 10), float32], Tensor[(5, 3, 2), float32], Tensor[(504), float64], Tensor[(504), float64], Tensor[(960), float64]) {
  %1461 = @func_2810() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1462 = @func_6687() /* ty=(Tensor[(5, 3, 2), float32], Tensor[(960), float64]) */;
  %1463 = cast(%var_13483, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1464 = reshape(%1463, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1465 = @func_2442(%1464) /* ty=(Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) */;
  %1466 = %1461.0;
  %1467 = %1462.0;
  %1468 = %1465.2;
  %1469 = @func_5006() /* ty=Tensor[(960), float64] */;
  (%1466, %1467, %1468, %var_13483, %1469)
}

def @func_8870() -> (Tensor[(12, 8, 10), float32],) {
  %1470 = @func_2131() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1470,)
}

def @func_6771() -> Tensor[(960), float64] {
  %1471 = @func_4221() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1471.1
}

def @func_8653() -> (Tensor[(960), float64],) {
  %1472 = @func_2381() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1473 = %1472.1;
  (%1473,)
}

def @func_4332() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool], Tensor[(819), uint64]) {
  %1474 = @func_2696() /* ty=(Tensor[(960), float64],) */;
  %1475 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1476 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1477 = cast(meta[relay.Constant][56] /* ty=Tensor[(819), uint64] */, dtype="uint64") /* ty=Tensor[(819), uint64] */;
  %1478 = cast(meta[relay.Constant][56] /* ty=Tensor[(819), uint64] */, dtype="uint64") /* ty=Tensor[(819), uint64] */;
  %1479 = reshape(%1477, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
  %1480 = reshape(%1478, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
  %1481 = @func_2121(%1479, %1480) /* ty=(Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) */;
  %1482 = %1474.0;
  %1483 = %1475.0;
  %1484 = %1476.0;
  %1485 = %1481.3;
  (%1482, %1483, %1484, %1485, meta[relay.Constant][56] /* ty=Tensor[(819), uint64] */)
}

def @func_6918() -> (Tensor[(12, 8, 10), float64],) {
  %1486 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1487 = %1486.1;
  (%1487,)
}

def @func_12821() -> (Tensor[(960), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %1488 = cast(meta[relay.Constant][57] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1489 = reshape(%1488, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
  %1490 = @func_827(%1489) /* ty=(Tensor[(6, 14, 6), float64],) */;
  %1491 = @func_7527() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1492 = @func_8501() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1493 = @func_8402() /* ty=Tensor[(960), float64] */;
  %1494 = %1490.0;
  %1495 = %1491.2;
  %1496 = %1492.0;
  (%1493, %1494, meta[relay.Constant][57] /* ty=Tensor[(504), float64] */, %1495, %1496)
}

def @func_3147() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32]) {
  %1497 = @func_2214() /* ty=(Tensor[(3, 9, 6), float64],) */;
  %1498 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1499 = %1498.0;
  %1500 = cast(%1499, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %1501 = %1497.0;
  %1502 = log2(%1500) /* ty=Tensor[(12, 8, 10), float32] */;
  (%1501, %1502)
}

def @func_4104() -> (Tensor[(12, 12, 11), int32],) {
  %1503 = cast(meta[relay.Constant][59] /* ty=Tensor[(12, 12, 11), int32] */, dtype="int32") /* ty=Tensor[(12, 12, 11), int32] */;
  %1504 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(12, 12, 11), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1505 = cast(meta[relay.Constant][58] /* ty=Tensor[(12, 12, 11), int32] */, dtype="int32") /* ty=Tensor[(12, 12, 11), int32] */;
  %1506 = dyn.reshape(%1503, %1504, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1507 = left_shift(%1505, %1506) /* ty=Tensor[(12, 12, 11), int32] */;
  (%1507,)
}

def @func_1173() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1508 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1509 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1510 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1511 = %1508.1;
  %1512 = cast(%1511, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1513 = reshape(%1512, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1514 = @func_331(%1513) /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1515 = %1509.2;
  %1516 = %1510.1;
  %1517 = %1514.0;
  (%1511, %1515, %1516, %1517)
}

def @func_17939() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1518 = @func_13107() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], float64, Tensor[(480), float64], Tensor[(1, 1120), bool], Tensor[(960), float64], Tensor[(960), float64]) */;
  %1519 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
  %1520 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1521 = %1518.6;
  %1522 = @func_8358() /* ty=Tensor[(12, 8, 10), float32] */;
  %1523 = %1519.0;
  %1524 = @func_8358() /* ty=Tensor[(12, 8, 10), float32] */;
  %1525 = %1520.1;
  (%1521, %1522, %1523, %1524, %1525)
}

def @func_2298() -> (Tensor[(12, 8, 10), float64],) {
  %1526 = @func_1968() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1527 = %1526.0;
  (%1527,)
}

def @func_1784() -> (Tensor[(960), float64],) {
  %1528 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1529 = %1528.0;
  (%1529,)
}

def @func_2667() -> (Tensor[(12, 8, 10), float64],) {
  %1530 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1531 = %1530.2;
  (%1531,)
}

def @func_13376(%var_13371: Tensor[(12, 11, 8), float32]) -> (Tensor[(12, 11, 8), float32],) {
  %1532 = cast(%var_13371, dtype="float32") /* ty=Tensor[(12, 11, 8), float32] */;
  %1533 = exp(%1532) /* ty=Tensor[(12, 11, 8), float32] */;
  (%1533,)
}

def @func_1488() -> (Tensor[(12, 8, 10), float32],) {
  %1534 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1535 = %1534.0;
  (%1535,)
}

def @func_1848() -> Tensor[(12, 8, 10), float32] {
  %1536 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1537 = %1536.0;
  %1538 = cast(%1537, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  asin(%1538) /* ty=Tensor[(12, 8, 10), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13296() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %0 = @func_4636() /* ty=Tensor[(960), float64] */;
  %1 = @func_6771() /* ty=Tensor[(960), float64] */;
  (%0, %1)
}

def @func_10932() -> (Tensor[(960), float64],) {
  %4 = fn () -> (Tensor[(960), float64],) {
    %2 = @func_8653() /* ty=(Tensor[(960), float64],) */;
    %3 = %2.0;
    (%3,)
  };
  %4() /* ty=(Tensor[(960), float64],) */
}

def @func_10074() -> (Tensor[(960), float64],) {
  @func_10072() /* ty=(Tensor[(960), float64],) */
}

def @func_5862() -> Tensor[(960), float64] {
  @func_5860() /* ty=Tensor[(960), float64] */
}

def @func_10762(%var_10760: Tensor[(11, 3, 16), float32]) -> Tensor[(11, 3, 16), float32] {
  @func_10759(%var_10760) /* ty=Tensor[(11, 3, 16), float32] */
}

def @func_7303() -> (Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) {
  %8 = fn () -> (Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) {
    %5 = @func_6241() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
    %6 = %5.1;
    %7 = @func_6271() /* ty=Tensor[(12, 8, 10), float32] */;
    (%6, %7)
  };
  %8() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */
}

def @func_11815(%var_11813: Tensor[(10, 8, 4), float32]) -> (Tensor[(10, 8, 4), float32], Tensor[(12, 8, 10), float64]) {
  @func_11812(%var_11813) /* ty=(Tensor[(10, 8, 4), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_4907() -> Tensor[(960), float64] {
  %9 = fn () -> Tensor[(960), float64] {
    @func_2095() /* ty=Tensor[(960), float64] */
  };
  %9() /* ty=Tensor[(960), float64] */
}

def @func_1029() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %23 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
    %10 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %11 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %12 = %11.0;
    %13 = cast(%12, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
    %14 = @func_884() /* ty=(Tensor[(960), float64],) */;
    %15 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %16 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %17 = %10.0;
    %18 = asinh(%13) /* ty=Tensor[(12, 8, 10), float64] */;
    %19 = %14.0;
    %20 = %15.0;
    %21 = %16.2;
    %22 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
    (%17, %18, %19, %20, %21, %22)
  };
  %23() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_5648() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  @func_5646() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_8501() -> (Tensor[(12, 8, 10), float32],) {
  %24 = @func_1848() /* ty=Tensor[(12, 8, 10), float32] */;
  (%24,)
}

def @func_13587() -> (Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64]) {
  @func_13585() /* ty=(Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64]) */
}

def @func_2831() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %25 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %26 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %27 = %25.1;
  %28 = %26.0;
  (%27, %28)
}

def @func_3613() -> (Tensor[(12, 8, 10), float32],) {
  @func_3611() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_13886() -> (Tensor[(12, 8, 10), float32],) {
  @func_13884() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_14472() -> (Tensor[(960), float64],) {
  %31 = fn () -> (Tensor[(960), float64],) {
    %29 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %30 = %29.0;
    (%30,)
  };
  %31() /* ty=(Tensor[(960), float64],) */
}

def @func_4584() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  @func_4582() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_10639() -> (Tensor[(960), float64],) {
  @func_10637() /* ty=(Tensor[(960), float64],) */
}

def @func_11902() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) {
  @func_11900() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */
}

def @func_3444(%var_3441: float64, %var_3442: Tensor[(480), float64], %var_3443: Tensor[(1120), bool]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(1120), bool], Tensor[(12, 8, 10), float32]) {
  @func_3439(%var_3441, %var_3442, %var_3443) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(1120), bool], Tensor[(12, 8, 10), float32]) */
}

def @func_3837() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %35 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
    %32 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %33 = %32.0;
    %34 = @func_1211() /* ty=Tensor[(960), float64] */;
    (%33, %34)
  };
  %35() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_11835() -> Tensor[(960), float64] {
  %36 = @func_5092() /* ty=(Tensor[(960), float64],) */;
  %36.0
}

def @func_1489() -> (Tensor[(12, 8, 10), float32],) {
  %39 = fn () -> (Tensor[(12, 8, 10), float32],) {
    %37 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %38 = %37.0;
    (%38,)
  };
  %39() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_14245() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %43 = fn () -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
    %40 = @func_1754() /* ty=(Tensor[(960), float64],) */;
    %41 = %40.0;
    %42 = @func_10440() /* ty=Tensor[(12, 8, 10), float32] */;
    (%41, %42)
  };
  %43() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_17833() -> Tensor[(12, 8, 10), float32] {
  %44 = fn () -> Tensor[(12, 8, 10), float32] {
    @func_1821() /* ty=Tensor[(12, 8, 10), float32] */
  };
  %44() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_18027() -> Tensor[(960), float64] {
  @func_18025() /* ty=Tensor[(960), float64] */
}

def @func_5804() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_16913(%var_16898: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(936), int32], Tensor[(144), float64]) {
  %45 = @func_16198() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %46 = cast(meta[relay.Constant][0] /* ty=Tensor[(936), int32] */, dtype="int32") /* ty=Tensor[(936), int32] */;
  %47 = cast(%var_16898, dtype="float64") /* ty=Tensor[(144), float64] */;
  %48 = reshape(%46, newshape=[936]) /* ty=Tensor[(936), int32] */;
  %49 = reshape(%47, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %50 = @func_12574(%48, %49) /* ty=(Tensor[(960), float64], Tensor[(9, 8, 13), int32], Tensor[(936), int32], Tensor[(504), float64], Tensor[(144), float64]) */;
  %51 = %45.0;
  %52 = %50.0;
  (%51, %52, meta[relay.Constant][0] /* ty=Tensor[(936), int32] */, %var_16898)
}

def @func_5926() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %53 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %54 = @func_1798() /* ty=(Tensor[(960), float64],) */;
  %55 = @func_3680() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %56 = @func_4781() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %57 = @func_4710() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64]) */;
  %58 = %53.0;
  %59 = %54.0;
  %60 = %55.0;
  %61 = %56.1;
  %62 = @func_1909() /* ty=Tensor[(12, 8, 10), float32] */;
  %63 = %57.0;
  (%58, %59, %60, %61, %62, %63)
}

def @func_4092() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %64 = @func_2992() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %65 = @func_2992() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %66 = %64.3;
  %67 = %65.3;
  (%66, %67)
}

def @func_7527() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %68 = @func_2214() /* ty=(Tensor[(3, 9, 6), float64],) */;
  %69 = @func_5012() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %70 = %69.0;
  %71 = cast(%70, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %72 = reshape(%71, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
  %73 = @func_1371(%72) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) */;
  %74 = %68.0;
  %75 = %73.1;
  (%74, %70, %75)
}

def @func_14151() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  @func_14149() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_16028(%var_16023: Tensor[(1, 208), float64]) -> (Tensor[(960), float64], Tensor[(4, 13, 4), float64], Tensor[(1, 208), float64], Tensor[(960), float64]) {
  %76 = @func_4251() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
  %77 = cast(%var_16023, dtype="float64") /* ty=Tensor[(1, 208), float64] */;
  %78 = reshape(%77, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), float64] */;
  %79 = @func_10218() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
  %80 = %76.1;
  %81 = @func_9149(%78) /* ty=Tensor[(4, 13, 4), float64] */;
  %82 = %79.2;
  (%80, %81, %var_16023, %82)
}

def @func_8643() -> Tensor[(12, 8, 10), float32] {
  %83 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %83.0
}

def @func_15051() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %84 = @func_1890() /* ty=(Tensor[(960), float64],) */;
  %85 = @func_13296() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %86 = %84.0;
  %87 = %85.1;
  (%86, %87)
}

def @func_11090() -> Tensor[(960), float64] {
  @func_11088() /* ty=Tensor[(960), float64] */
}

def @func_18066() -> Tensor[(960), float64] {
  @func_18064() /* ty=Tensor[(960), float64] */
}

def @func_3980() -> Tensor[(12, 8, 10), int16] {
  %96 = fn () -> Tensor[(12, 8, 10), int16] {
    %88 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %89 = %88.0;
    %90 = @func_1400() /* ty=(Tensor[(960), float64],) */;
    %91 = %90.0;
    %92 = cast(%91, dtype="int16") /* ty=Tensor[(960), int16] */;
    %93 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
    %94 = cast(%89, dtype="int16") /* ty=Tensor[(12, 8, 10), int16] */;
    %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_or(%94, %95) /* ty=Tensor[(12, 8, 10), int16] */
  };
  %96() /* ty=Tensor[(12, 8, 10), int16] */
}

def @func_2583() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %99 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
    %97 = @func_2059() /* ty=Tensor[(12, 8, 10), float64] */;
    %98 = @func_1848() /* ty=Tensor[(12, 8, 10), float32] */;
    (%97, %98)
  };
  %99() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_10841() -> Tensor[(960), float64] {
  @func_10839() /* ty=Tensor[(960), float64] */
}

def @func_7887() -> (Tensor[(12, 8, 10), float32], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504, 1), float32]) {
  @func_7885() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504, 1), float32]) */
}

def @func_2873() -> (Tensor[(12, 8, 10), float32],) {
  @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_17479(%var_17478: Tensor[(15, 4, 10), float64]) -> Tensor[(15, 4, 10), float64] {
  %101 = fn (%var_17464: Tensor[(15, 4, 10), float64]) -> Tensor[(15, 4, 10), float64] {
    %100 = cast(%var_17464, dtype="float64") /* ty=Tensor[(15, 4, 10), float64] */;
    log(%100) /* ty=Tensor[(15, 4, 10), float64] */
  };
  %101(%var_17478) /* ty=Tensor[(15, 4, 10), float64] */
}

def @func_2992() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %102 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %103 = @func_2684() /* ty=(Tensor[(960), float64],) */;
  %104 = @func_1821() /* ty=Tensor[(12, 8, 10), float32] */;
  %105 = %102.0;
  %106 = @func_1848() /* ty=Tensor[(12, 8, 10), float32] */;
  %107 = %103.0;
  (%104, %105, %106, %107)
}

def @func_11180() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %112 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %108 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %109 = @func_7043() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %110 = %108.1;
    %111 = %109.1;
    (%110, %111)
  };
  %112() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_7043() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %113 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %114 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %115 = %113.0;
  %116 = %114.0;
  (%115, %116)
}

def @func_8171() -> (Tensor[(960), uint16],) {
  @func_8169() /* ty=(Tensor[(960), uint16],) */
}

def @func_16245(%var_16244: Tensor[(12, 12, 11), int32]) -> (Tensor[(12, 12, 11), float32], Tensor[(960), float64]) {
  %126 = fn (%var_16232: Tensor[(12, 12, 11), int32]) -> (Tensor[(12, 12, 11), float32], Tensor[(960), float64]) {
    %117 = @func_4104() /* ty=(Tensor[(12, 12, 11), int32],) */;
    %118 = %117.0;
    %119 = cast(%var_16232, dtype="float32") /* ty=Tensor[(12, 12, 11), float32] */;
    %120 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
    %121 = cast(%118, dtype="float32") /* ty=Tensor[(12, 12, 11), float32] */;
    %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %123 = @func_13209() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %124 = power(%121, %122) /* ty=Tensor[(12, 12, 11), float32] */;
    %125 = %123.1;
    (%124, %125)
  };
  %126(%var_16244) /* ty=(Tensor[(12, 12, 11), float32], Tensor[(960), float64]) */
}

def @func_13731() -> (Tensor[(960), float64],) {
  %128 = fn () -> (Tensor[(960), float64],) {
    %127 = @func_8402() /* ty=Tensor[(960), float64] */;
    (%127,)
  };
  %128() /* ty=(Tensor[(960), float64],) */
}

def @func_12488() -> (Tensor[(12, 8, 10), float32],) {
  @func_12486() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_12574(%var_12564: Tensor[(936), int32], %var_12571: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(9, 8, 13), int32], Tensor[(936), int32], Tensor[(504), float64], Tensor[(144), float64]) {
  %129 = cast(%var_12564, dtype="int32") /* ty=Tensor[(936), int32] */;
  %130 = reshape(%129, newshape=[9, 8, 13]) /* ty=Tensor[(9, 8, 13), int32] */;
  %131 = @func_10777(%130) /* ty=(Tensor[(9, 8, 13), int32], Tensor[(12, 8, 10), float64]) */;
  %132 = cast(%var_12571, dtype="float64") /* ty=Tensor[(144), float64] */;
  %133 = reshape(%132, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %134 = @func_6636(%133) /* ty=(Tensor[(960), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %135 = @func_7336() /* ty=Tensor[(960), float64] */;
  %136 = %131.0;
  %137 = %134.1;
  (%135, %136, %var_12564, %137, %var_12571)
}

def @func_7045() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  @func_7043() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_2298() -> (Tensor[(12, 8, 10), float64],) {
  %138 = @func_1968() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %139 = %138.0;
  (%139,)
}

def @func_1402() -> (Tensor[(960), float64],) {
  @func_1400() /* ty=(Tensor[(960), float64],) */
}

def @func_10731() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32]) {
  %150 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32]) {
    %140 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %141 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %142 = @func_2540() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) */;
    %143 = %142.1;
    %144 = cast(%143, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
    %145 = @func_8089() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %146 = %140.1;
    %147 = %141.0;
    %148 = asinh(%144) /* ty=Tensor[(13, 9, 7), float32] */;
    %149 = %145.0;
    (%146, %147, %148, %149)
  };
  %150() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_9168() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %151 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %152 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %153 = @func_5976() /* ty=Tensor[(12, 8, 10), float32] */;
  %154 = %151.1;
  %155 = %152.0;
  (%153, %154, %155)
}

def @func_17727(%var_17725: Tensor[(756), uint8], %var_17726: Tensor[(756), uint8]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(756), uint64]) {
  @func_17723(%var_17725, %var_17726) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(756), uint64]) */
}

def @func_7747() -> Tensor[(12, 8, 10), float64] {
  %156 = @func_3114() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) */;
  %156.1
}

def @func_5976() -> Tensor[(12, 8, 10), float32] {
  @func_5438() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_5284(%var_5282: Tensor[(6, 2, 8), float64]) -> (Tensor[(6, 2, 8), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 2, 8), float64], Tensor[(12, 8, 10), float64]) {
  @func_5281(%var_5282) /* ty=(Tensor[(6, 2, 8), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 2, 8), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_6687() -> (Tensor[(5, 3, 2), float32], Tensor[(960), float64]) {
  %157 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 3, 2), float32] */, dtype="float32") /* ty=Tensor[(5, 3, 2), float32] */;
  %158 = log(%157) /* ty=Tensor[(5, 3, 2), float32] */;
  %159 = @func_5860() /* ty=Tensor[(960), float64] */;
  (%158, %159)
}

def @func_5978() -> Tensor[(12, 8, 10), float32] {
  @func_5976() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_6880() -> (Tensor[(960), float64],) {
  @func_6878() /* ty=(Tensor[(960), float64],) */
}

def @func_11710() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(6, 14, 9), uint8], Tensor[(1, 756), uint8]) {
  %170 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(6, 14, 9), uint8], Tensor[(1, 756), uint8]) {
    %160 = @func_8501() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %161 = @func_4781() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %162 = @func_10931() /* ty=(Tensor[(960), float64],) */;
    %163 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 756), uint8] */, dtype="uint8") /* ty=Tensor[(1, 756), uint8] */;
    %164 = reshape(%163, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), uint8] */;
    %165 = @func_9778(%164) /* ty=(Tensor[(6, 14, 9), uint8], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %166 = %160.0;
    %167 = %161.0;
    %168 = %162.0;
    %169 = %165.0;
    (%166, %167, %168, %169, meta[relay.Constant][2] /* ty=Tensor[(1, 756), uint8] */)
  };
  %170() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(6, 14, 9), uint8], Tensor[(1, 756), uint8]) */
}

def @func_15197(%var_15195: Tensor[(5, 15, 16), int16], %var_15196: Tensor[(5, 15, 16), int16]) -> Tensor[(5, 15, 16), bool] {
  @func_15193(%var_15195, %var_15196) /* ty=Tensor[(5, 15, 16), bool] */
}

def @func_15352() -> Tensor[(960), float64] {
  %171 = fn () -> Tensor[(960), float64] {
    @func_11835() /* ty=Tensor[(960), float64] */
  };
  %171() /* ty=Tensor[(960), float64] */
}

def @func_599() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %176 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %172 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %173 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %174 = %172.2;
    %175 = %173.2;
    (%174, %175)
  };
  %176() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_6528() -> Tensor[(960), float64] {
  @func_6526() /* ty=Tensor[(960), float64] */
}

def @func_6772() -> Tensor[(960), float64] {
  %178 = fn () -> Tensor[(960), float64] {
    %177 = @func_4221() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %177.1
  };
  %178() /* ty=Tensor[(960), float64] */
}

def @func_15814() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  @func_15812() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_17012() -> (Tensor[(12, 8, 10), float32],) {
  @func_17010() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_16126() -> (Tensor[(12, 8, 10), float32], Tensor[(6, 11, 7), int8], int8, Tensor[(7, 66), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %179 = cast(meta[relay.Constant][3] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %180 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 66), int8] */, dtype="int8") /* ty=Tensor[(7, 66), int8] */;
  %181 = reshape(%179, newshape=[]) /* ty=int8 */;
  %182 = reshape(%180, newshape=[6, 11, 7]) /* ty=Tensor[(6, 11, 7), int8] */;
  %183 = @func_6617(%181, %182) /* ty=(Tensor[(6, 11, 7), int8],) */;
  %184 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 66), int8] */, dtype="float64") /* ty=Tensor[(7, 66), float64] */;
  %185 = @func_15146() /* ty=(Tensor[(960), float64],) */;
  %186 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %187 = @func_13637() /* ty=Tensor[(12, 8, 10), float32] */;
  %188 = %183.0;
  %189 = cosh(%184) /* ty=Tensor[(7, 66), float64] */;
  %190 = %185.0;
  %191 = @func_1848() /* ty=Tensor[(12, 8, 10), float32] */;
  %192 = @func_2850() /* ty=Tensor[(12, 8, 10), float64] */;
  %193 = %186.1;
  (%187, %188, meta[relay.Constant][3] /* ty=int8 */, %189, %190, %191, %192, %193)
}

def @func_1610() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %197 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %194 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %195 = @func_778() /* ty=Tensor[(960), float64] */;
    %196 = %194.0;
    (%195, %196)
  };
  %197() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_8946() -> Tensor[(960), float64] {
  %198 = @func_6607() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %198.1
}

def @func_1890() -> (Tensor[(960), float64],) {
  %199 = @func_1798() /* ty=(Tensor[(960), float64],) */;
  %200 = %199.0;
  (%200,)
}

def @func_8089() -> (Tensor[(12, 8, 10), float32],) {
  %201 = @func_6271() /* ty=Tensor[(12, 8, 10), float32] */;
  (%201,)
}

def @func_7200() -> Tensor[(12, 8, 10), float64] {
  %202 = @func_6174() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %202.0
}

def @func_516() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %203 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %204 = %203.1;
  %205 = cast(%204, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %206 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %207 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  %208 = sinh(%205) /* ty=Tensor[(12, 8, 10), float32] */;
  %209 = %206.4;
  (%207, %208, %209)
}

def @func_4607() -> Tensor[(960), float64] {
  %210 = @func_2476() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %210.0
}

def @func_10530() -> (Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  @func_10528() /* ty=(Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_8630(%var_8628: Tensor[(280), bool], %var_8629: Tensor[(120, 4), float64]) -> (Tensor[(12, 8, 10), float32], Tensor[(8, 5, 7), bool], Tensor[(280), bool], float64, Tensor[(120, 4), float64]) {
  %221 = fn (%var_8607: Tensor[(280), bool], %var_8609: Tensor[(120, 4), float64]) -> (Tensor[(12, 8, 10), float32], Tensor[(8, 5, 7), bool], Tensor[(280), bool], float64, Tensor[(120, 4), float64]) {
    %211 = @func_4961() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %212 = cast(%var_8607, dtype="bool") /* ty=Tensor[(280), bool] */;
    %213 = cast(3.41991f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %214 = cast(%var_8609, dtype="float64") /* ty=Tensor[(120, 4), float64] */;
    %215 = reshape(%212, newshape=[8, 5, 7]) /* ty=Tensor[(8, 5, 7), bool] */;
    %216 = reshape(%213, newshape=[]) /* ty=float64 */;
    %217 = reshape(%214, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %218 = @func_4887(%215, %216, %217) /* ty=(Tensor[(8, 5, 7), bool], Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %219 = %211.0;
    %220 = %218.0;
    (%219, %220, %var_8607, 3.41991f64 /* ty=float64 */, %var_8609)
  };
  %221(%var_8628, %var_8629) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(8, 5, 7), bool], Tensor[(280), bool], float64, Tensor[(120, 4), float64]) */
}

def @func_9152(%var_9150: Tensor[(4, 13, 4), float64]) -> Tensor[(4, 13, 4), float64] {
  @func_9149(%var_9150) /* ty=Tensor[(4, 13, 4), float64] */
}

def @func_16656() -> Tensor[(960), float64] {
  @func_16654() /* ty=Tensor[(960), float64] */
}

def @func_15833() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %222 = @func_10528() /* ty=(Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %223 = @func_14761() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %224 = %222.3;
  %225 = %223.4;
  (%224, %225)
}

def @func_3769() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %226 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %227 = %226.1;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %229 = @func_2903() /* ty=Tensor[(12, 8, 10), float32] */;
  %230 = rsqrt(%228) /* ty=Tensor[(12, 8, 10), float32] */;
  (%229, %230)
}

def @func_16868() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %235 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %231 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %232 = @func_10991() /* ty=(Tensor[(960), float64],) */;
    %233 = %231.0;
    %234 = %232.0;
    (%233, %234)
  };
  %235() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_16681(%var_16667: Tensor[(3, 16, 8), int16], %var_16668: Tensor[(3, 16, 8), int16]) -> Tensor[(3, 16, 8), int16] {
  %236 = cast(%var_16668, dtype="int16") /* ty=Tensor[(3, 16, 8), int16] */;
  %237 = shape_of(%var_16667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%var_16667, dtype="int16") /* ty=Tensor[(3, 16, 8), int16] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  add(%238, %239) /* ty=Tensor[(3, 16, 8), int16] */
}

def @func_1373(%var_1372: Tensor[(12, 8, 10), float32]) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) {
  %254 = fn (%var_1366: Tensor[(12, 8, 10), float32]) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) {
    %240 = @func_1028() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %241 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %242 = %241.0;
    %243 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 8, 10), float32] */, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
    %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %245 = cast(%242, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %247 = cast(%var_1366, dtype="bool") /* ty=Tensor[(12, 8, 10), bool] */;
    %248 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %249 = cast(%242, dtype="bool") /* ty=Tensor[(12, 8, 10), bool] */;
    %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %251 = %240.2;
    %252 = floor_mod(%245, %246) /* ty=Tensor[(12, 8, 10), float64] */;
    %253 = greater_equal(%249, %250) /* ty=Tensor[(12, 8, 10), bool] */;
    (%251, %252, %253)
  };
  %254(%var_1372) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) */
}

def @func_4433() -> (Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) {
  @func_4431() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */
}

def @func_16446() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %255 = @func_14471() /* ty=(Tensor[(960), float64],) */;
  %256 = @func_12522() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %257 = %255.0;
  %258 = %256.0;
  (%257, %258)
}

def @main(%var_18351: Tensor[(15, 10, 5), float32]) -> (Tensor[(15, 10, 5), bool],) {
  %259 = cast(%var_18351, dtype="bool") /* ty=Tensor[(15, 10, 5), bool] */;
  %260 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(15, 10, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 10, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 10, 5), bool] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %263 = less(%261, %262) /* ty=Tensor[(15, 10, 5), bool] */;
  (%263,)
}

def @func_573() -> (Tensor[(12, 8, 10), float32],) {
  @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_6526() -> Tensor[(960), float64] {
  %264 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %264.1
}

def @func_7337() -> Tensor[(960), float64] {
  %266 = fn () -> Tensor[(960), float64] {
    %265 = @func_4221() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %265.1
  };
  %266() /* ty=Tensor[(960), float64] */
}

def @func_8948() -> Tensor[(960), float64] {
  @func_8946() /* ty=Tensor[(960), float64] */
}

def @func_12550(%var_12549: Tensor[(960), float64]) -> (Tensor[(16, 3, 5), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %272 = fn (%var_12541: Tensor[(960), float64]) -> (Tensor[(16, 3, 5), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
    %267 = cast(%var_12541, dtype="float64") /* ty=Tensor[(960), float64] */;
    %268 = reshape(%267, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
    %269 = @func_61(%268) /* ty=(Tensor[(12, 8, 10), float64],) */;
    %270 = @func_9990() /* ty=Tensor[(16, 3, 5), float32] */;
    %271 = %269.0;
    (%270, %271, %var_12541)
  };
  %272(%var_12549) /* ty=(Tensor[(16, 3, 5), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */
}

def @func_12719() -> (Tensor[(960), float64],) {
  @func_12717() /* ty=(Tensor[(960), float64],) */
}

def @func_12578(%var_12576: Tensor[(936), int32], %var_12577: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(9, 8, 13), int32], Tensor[(936), int32], Tensor[(504), float64], Tensor[(144), float64]) {
  @func_12574(%var_12576, %var_12577) /* ty=(Tensor[(960), float64], Tensor[(9, 8, 13), int32], Tensor[(936), int32], Tensor[(504), float64], Tensor[(144), float64]) */
}

def @func_14105() -> (Tensor[(12, 8, 10), float32], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  @func_14103() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */
}

def @func_4582() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %273 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %274 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %275 = %273.0;
  %276 = %274.1;
  (%275, %276)
}

def @func_16607() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %281 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %277 = @func_12717() /* ty=(Tensor[(960), float64],) */;
    %278 = @func_12821() /* ty=(Tensor[(960), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %279 = %277.0;
    %280 = %278.0;
    (%279, %280)
  };
  %281() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_17939() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %282 = @func_13107() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], float64, Tensor[(480), float64], Tensor[(1, 1120), bool], Tensor[(960), float64], Tensor[(960), float64]) */;
  %283 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
  %284 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %285 = %282.6;
  %286 = @func_8358() /* ty=Tensor[(12, 8, 10), float32] */;
  %287 = %283.0;
  %288 = @func_8358() /* ty=Tensor[(12, 8, 10), float32] */;
  %289 = %284.1;
  (%285, %286, %287, %288, %289)
}

def @func_4094() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_14183() -> Tensor[(12, 8, 10), float32] {
  %290 = @func_5012() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %290.0
}

def @func_13762() -> (Tensor[(960), float64],) {
  %293 = fn () -> (Tensor[(960), float64],) {
    %291 = @func_5785() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %292 = %291.1;
    (%292,)
  };
  %293() /* ty=(Tensor[(960), float64],) */
}

def @func_5231() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  @func_5229() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_6955() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %294 = @func_6918() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %295 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %296 = @func_3885() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %297 = %294.0;
  %298 = %295.1;
  %299 = %296.2;
  (%297, %298, %299)
}

def @func_12962() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(2, 104), float64], Tensor[(4, 13, 4), bool], Tensor[(12, 8, 10), float32]) {
  @func_12960() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(2, 104), float64], Tensor[(4, 13, 4), bool], Tensor[(12, 8, 10), float32]) */
}

def @func_15053() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  @func_15051() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_11837() -> Tensor[(960), float64] {
  @func_11835() /* ty=Tensor[(960), float64] */
}

def @func_12377() -> Tensor[(960), float64] {
  @func_5006() /* ty=Tensor[(960), float64] */
}

def @func_11391() -> (Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), int16]) {
  %304 = fn () -> (Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), int16]) {
    %300 = @func_4431() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
    %301 = @func_6415() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), int16], Tensor[(960), float64]) */;
    %302 = %300.0;
    %303 = %301.1;
    (%302, %303)
  };
  %304() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), int16]) */
}

def @func_6729() -> (Tensor[(960), float64],) {
  @func_6727() /* ty=(Tensor[(960), float64],) */
}

def @func_9029(%var_9025: Tensor[(15, 10, 11), float32]) -> (Tensor[(15, 10, 11), float32],) {
  %305 = cast(%var_9025, dtype="float32") /* ty=Tensor[(15, 10, 11), float32] */;
  %306 = cos(%305) /* ty=Tensor[(15, 10, 11), float32] */;
  (%306,)
}

def @func_1831() -> (Tensor[(960), float64],) {
  %309 = fn () -> (Tensor[(960), float64],) {
    %307 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %308 = %307.2;
    (%308,)
  };
  %309() /* ty=(Tensor[(960), float64],) */
}

def @func_15382() -> Tensor[(960), float64] {
  %310 = @func_6727() /* ty=(Tensor[(960), float64],) */;
  %310.0
}

def @func_411() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %311 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %312 = %311.4;
  %313 = cast(%312, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %314 = acosh(%313) /* ty=Tensor[(12, 8, 10), float64] */;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %316 = tan(%315) /* ty=Tensor[(12, 8, 10), float64] */;
  %317 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  (%316, %317)
}

def @func_10839() -> Tensor[(960), float64] {
  %318 = @func_1784() /* ty=(Tensor[(960), float64],) */;
  %318.0
}

def @func_17972() -> (Tensor[(12, 8, 10), float32],) {
  %321 = fn () -> (Tensor[(12, 8, 10), float32],) {
    %319 = @func_4710() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64]) */;
    %320 = %319.1;
    (%320,)
  };
  %321() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_333(%var_332: Tensor[(12, 8, 10), float64]) -> (Tensor[(12, 8, 10), float32],) {
  %331 = fn (%var_302: Tensor[(12, 8, 10), float64]) -> (Tensor[(12, 8, 10), float32],) {
    %322 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %323 = %322.1;
    %324 = cast(%var_302, dtype="bool") /* ty=Tensor[(12, 8, 10), bool] */;
    %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
    %326 = cast(%323, dtype="bool") /* ty=Tensor[(12, 8, 10), bool] */;
    %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %328 = not_equal(%326, %327) /* ty=Tensor[(12, 8, 10), bool] */;
    %329 = cast(%328, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
    %330 = atan(%329) /* ty=Tensor[(12, 8, 10), float32] */;
    (%330,)
  };
  %331(%var_332) /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_13639() -> Tensor[(12, 8, 10), float32] {
  @func_13637() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_1213() -> Tensor[(960), float64] {
  @func_1211() /* ty=Tensor[(960), float64] */
}

def @func_7978() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64]) {
  %337 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64]) {
    %332 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %333 = @func_3114() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) */;
    %334 = %332.0;
    %335 = %333.0;
    %336 = @func_6526() /* ty=Tensor[(960), float64] */;
    (%334, %335, %336)
  };
  %337() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_4252() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  %343 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) {
    %338 = @func_884() /* ty=(Tensor[(960), float64],) */;
    %339 = @func_1784() /* ty=(Tensor[(960), float64],) */;
    %340 = @func_2850() /* ty=Tensor[(12, 8, 10), float64] */;
    %341 = %338.0;
    %342 = %339.0;
    (%340, %341, %342)
  };
  %343() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_15034() -> Tensor[(960), float64] {
  @func_11975() /* ty=Tensor[(960), float64] */
}

def @func_801(%var_799: Tensor[(12, 8, 10), float32]) -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) {
  @func_798(%var_799) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) */
}

def @func_1970() -> (Tensor[(12, 8, 10), float64],) {
  @func_1968() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_7023() -> (Tensor[(960), float64], Tensor[(480), float64], Tensor[(12, 8, 10), float64], Tensor[(16, 3, 10), int32], Tensor[(960), float64]) {
  %369 = fn () -> (Tensor[(960), float64], Tensor[(480), float64], Tensor[(12, 8, 10), float64], Tensor[(16, 3, 10), int32], Tensor[(960), float64]) {
    %344 = @func_6771() /* ty=Tensor[(960), float64] */;
    %345 = cast(%344, dtype="float32") /* ty=Tensor[(960), float32] */;
    %346 = reshape(%345, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
    %347 = @func_798(%346) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) */;
    %348 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %349 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %350 = reshape(%348, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), float64] */;
    %351 = reshape(%349, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), float64] */;
    %352 = @func_4157(%350, %351) /* ty=(Tensor[(16, 3, 10), float64],) */;
    %353 = %352.0;
    %354 = cast(%353, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
    %355 = atanh(%354) /* ty=Tensor[(16, 3, 10), float64] */;
    %356 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 3, 10), float64] */, dtype="bool") /* ty=Tensor[(16, 3, 10), bool] */;
    %357 = shape_of(%355, dtype="int32") /* ty=Tensor[(3), int32] */;
    %358 = cast(%355, dtype="bool") /* ty=Tensor[(16, 3, 10), bool] */;
    %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %360 = logical_and(%358, %359) /* ty=Tensor[(16, 3, 10), bool] */;
    %361 = cast(%355, dtype="int32") /* ty=Tensor[(16, 3, 10), int32] */;
    %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(3), int32] */;
    %363 = cast(%360, dtype="int32") /* ty=Tensor[(16, 3, 10), int32] */;
    %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %365 = @func_2696() /* ty=(Tensor[(960), float64],) */;
    %366 = %347.0;
    %367 = bitwise_xor(%363, %364) /* ty=Tensor[(16, 3, 10), int32] */;
    %368 = %365.0;
    (%344, meta[relay.Constant][7] /* ty=Tensor[(480), float64] */, %366, %367, %368)
  };
  %369() /* ty=(Tensor[(960), float64], Tensor[(480), float64], Tensor[(12, 8, 10), float64], Tensor[(16, 3, 10), int32], Tensor[(960), float64]) */
}

def @func_6878() -> (Tensor[(960), float64],) {
  %370 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %371 = %370.1;
  (%371,)
}

def @func_3486(%var_3484: Tensor[(16, 1, 8), float32]) -> (Tensor[(16, 1, 8), float32], Tensor[(960), float64], Tensor[(16, ?, 8), int8]) {
  @func_3483(%var_3484) /* ty=(Tensor[(16, 1, 8), float32], Tensor[(960), float64], Tensor[(16, ?, 8), int8]) */
}

def @func_2851() -> Tensor[(12, 8, 10), float64] {
  %373 = fn () -> Tensor[(12, 8, 10), float64] {
    %372 = @func_2667() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %372.0
  };
  %373() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_12960() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(2, 104), float64], Tensor[(4, 13, 4), bool], Tensor[(12, 8, 10), float32]) {
  %374 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %375 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 104), float64] */, dtype="float64") /* ty=Tensor[(2, 104), float64] */;
  %376 = reshape(%375, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), float64] */;
  %377 = @func_9149(%376) /* ty=Tensor[(4, 13, 4), float64] */;
  %378 = cast(%377, dtype="float32") /* ty=Tensor[(4, 13, 4), float32] */;
  %379 = tan(%378) /* ty=Tensor[(4, 13, 4), float32] */;
  %380 = cast(%377, dtype="bool") /* ty=Tensor[(4, 13, 4), bool] */;
  %381 = shape_of(%379, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%379, dtype="bool") /* ty=Tensor[(4, 13, 4), bool] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %384 = @func_4607() /* ty=Tensor[(960), float64] */;
  %385 = %374.2;
  %386 = not_equal(%382, %383) /* ty=Tensor[(4, 13, 4), bool] */;
  %387 = @func_8643() /* ty=Tensor[(12, 8, 10), float32] */;
  (%384, %385, meta[relay.Constant][9] /* ty=Tensor[(2, 104), float64] */, %386, %387)
}

def @func_14519() -> Tensor[(960), float64] {
  %389 = fn () -> Tensor[(960), float64] {
    %388 = @func_9315() /* ty=(Tensor[(960), float64],) */;
    %388.0
  };
  %389() /* ty=Tensor[(960), float64] */
}

def @func_4160(%var_4158: Tensor[(16, 3, 10), float64], %var_4159: Tensor[(16, 3, 10), float64]) -> (Tensor[(16, 3, 10), float64],) {
  %395 = fn (%var_4147: Tensor[(16, 3, 10), float64], %var_4148: Tensor[(16, 3, 10), float64]) -> (Tensor[(16, 3, 10), float64],) {
    %390 = cast(%var_4148, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
    %391 = shape_of(%var_4147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %392 = cast(%var_4147, dtype="float64") /* ty=Tensor[(16, 3, 10), float64] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %394 = mod(%392, %393) /* ty=Tensor[(16, 3, 10), float64] */;
    (%394,)
  };
  %395(%var_4158, %var_4159) /* ty=(Tensor[(16, 3, 10), float64],) */
}

def @func_13585() -> (Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64]) {
  %396 = cast(-5.62176f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %397 = cast(meta[relay.Constant][10] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %398 = reshape(%396, newshape=[]) /* ty=float64 */;
  %399 = reshape(%397, newshape=[16, 15, 2]) /* ty=Tensor[(16, 15, 2), float64] */;
  %400 = @func_1423(%398, %399) /* ty=(Tensor[(16, 15, 2), float64],) */;
  %401 = @func_9045() /* ty=Tensor[(960), float64] */;
  %402 = %400.0;
  (%401, %402, -5.62176f64 /* ty=float64 */, meta[relay.Constant][10] /* ty=Tensor[(480), float64] */)
}

def @func_15036() -> Tensor[(960), float64] {
  @func_15034() /* ty=Tensor[(960), float64] */
}

def @func_1754() -> (Tensor[(960), float64],) {
  %403 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %404 = %403.0;
  (%404,)
}

def @func_3149() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32]) {
  @func_3147() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_4609() -> Tensor[(960), float64] {
  @func_4607() /* ty=Tensor[(960), float64] */
}

def @func_4781() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %405 = @func_3680() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %406 = @func_778() /* ty=Tensor[(960), float64] */;
  %407 = %405.0;
  (%406, %407)
}

def @func_10917(%var_10916: Tensor[(5, 6, 3), float32]) -> (Tensor[(5, 6, 3), float32],) {
  %410 = fn (%var_10909: Tensor[(5, 6, 3), float32]) -> (Tensor[(5, 6, 3), float32],) {
    %408 = cast(%var_10909, dtype="float32") /* ty=Tensor[(5, 6, 3), float32] */;
    %409 = cos(%408) /* ty=Tensor[(5, 6, 3), float32] */;
    (%409,)
  };
  %410(%var_10916) /* ty=(Tensor[(5, 6, 3), float32],) */
}

def @func_12913() -> Tensor[(12, 8, 10), float32] {
  @func_10440() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_5942() -> Tensor[(960), float64] {
  %411 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %411.0
}

def @func_4734(%var_4732: Tensor[(819), uint64]) -> (Tensor[(12, 8, 10), float64], Tensor[(13, 9, 7), uint64], Tensor[(819), uint64]) {
  @func_4731(%var_4732) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(13, 9, 7), uint64], Tensor[(819), uint64]) */
}

def @func_6964() -> Tensor[(12, 8, 10), float64] {
  %412 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %412.0
}

def @func_779() -> Tensor[(960), float64] {
  %414 = fn () -> Tensor[(960), float64] {
    %413 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %413.0
  };
  %414() /* ty=Tensor[(960), float64] */
}

def @func_7749() -> Tensor[(12, 8, 10), float64] {
  @func_7747() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_12038() -> (Tensor[(960), uint16], Tensor[(960), uint16]) {
  %418 = fn () -> (Tensor[(960), uint16], Tensor[(960), uint16]) {
    %415 = @func_4485() /* ty=(Tensor[(960), uint16],) */;
    %416 = %415.0;
    %417 = @func_7635() /* ty=Tensor[(960), uint16] */;
    (%416, %417)
  };
  %418() /* ty=(Tensor[(960), uint16], Tensor[(960), uint16]) */
}

def @func_2265() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %426 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
    %419 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %420 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %421 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %422 = @func_2131() /* ty=Tensor[(12, 8, 10), float32] */;
    %423 = %419.1;
    %424 = %420.0;
    %425 = %421.1;
    (%422, %423, %424, %425)
  };
  %426() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_9032(%var_9030: Tensor[(15, 10, 11), float32]) -> (Tensor[(15, 10, 11), float32],) {
  @func_9029(%var_9030) /* ty=(Tensor[(15, 10, 11), float32],) */
}

def @func_3578() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %432 = fn () -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
    %427 = @func_1798() /* ty=(Tensor[(960), float64],) */;
    %428 = @func_3362() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %429 = %427.0;
    %430 = @func_3204() /* ty=Tensor[(960), float64] */;
    %431 = %428.0;
    (%429, %430, %431)
  };
  %432() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_8442() -> Tensor[(960), float64] {
  %434 = fn () -> Tensor[(960), float64] {
    %433 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %433.0
  };
  %434() /* ty=Tensor[(960), float64] */
}

def @func_3090() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %439 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
    %435 = @func_3040() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %436 = @func_1830() /* ty=(Tensor[(960), float64],) */;
    %437 = %435.1;
    %438 = %436.0;
    (%437, %438)
  };
  %439() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_8799(%var_8798: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(6, 2, 12), float64], Tensor[(144), float64], Tensor[(504), float64]) {
  %448 = fn (%var_8790: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(6, 2, 12), float64], Tensor[(144), float64], Tensor[(504), float64]) {
    %440 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %441 = cast(%var_8790, dtype="float64") /* ty=Tensor[(144), float64] */;
    %442 = cast(meta[relay.Constant][11] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
    %443 = reshape(%441, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
    %444 = reshape(%442, newshape=[504]) /* ty=Tensor[(504), float64] */;
    %445 = @func_6312(%443, %444) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
    %446 = %440.0;
    %447 = %445.0;
    (%446, %447, %var_8790, meta[relay.Constant][11] /* ty=Tensor[(504), float64] */)
  };
  %448(%var_8798) /* ty=(Tensor[(960), float64], Tensor[(6, 2, 12), float64], Tensor[(144), float64], Tensor[(504), float64]) */
}

def @func_5456() -> Tensor[(12, 8, 10), float32] {
  %450 = fn () -> Tensor[(12, 8, 10), float32] {
    %449 = @func_1028() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %449.0
  };
  %450() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_13921() -> (Tensor[(960), float64], Tensor[(6, 14, 6), float64]) {
  %455 = fn () -> (Tensor[(960), float64], Tensor[(6, 14, 6), float64]) {
    %451 = @func_6727() /* ty=(Tensor[(960), float64],) */;
    %452 = @func_12821() /* ty=(Tensor[(960), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %453 = %451.0;
    %454 = %452.1;
    (%453, %454)
  };
  %455() /* ty=(Tensor[(960), float64], Tensor[(6, 14, 6), float64]) */
}

def @func_1516() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_10779(%var_10778: Tensor[(9, 8, 13), int32]) -> (Tensor[(9, 8, 13), int32], Tensor[(12, 8, 10), float64]) {
  %463 = fn (%var_10764: Tensor[(9, 8, 13), int32]) -> (Tensor[(9, 8, 13), int32], Tensor[(12, 8, 10), float64]) {
    %456 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 8, 13), int32] */, dtype="int32") /* ty=Tensor[(9, 8, 13), int32] */;
    %457 = shape_of(%var_10764, dtype="int32") /* ty=Tensor[(3), int32] */;
    %458 = cast(%var_10764, dtype="int32") /* ty=Tensor[(9, 8, 13), int32] */;
    %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %460 = @func_4828() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %461 = multiply(%458, %459) /* ty=Tensor[(9, 8, 13), int32] */;
    %462 = %460.0;
    (%461, %462)
  };
  %463(%var_10778) /* ty=(Tensor[(9, 8, 13), int32], Tensor[(12, 8, 10), float64]) */
}

def @func_6607() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %464 = @func_5807() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %465 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %466 = %464.0;
  %467 = %465.0;
  (%466, %467)
}

def @func_3681() -> (Tensor[(12, 8, 10), float32],) {
  %470 = fn () -> (Tensor[(12, 8, 10), float32],) {
    %468 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %469 = %468.0;
    (%469,)
  };
  %470() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_18162() -> Tensor[(960), float64] {
  @func_18160() /* ty=Tensor[(960), float64] */
}

def @func_6621(%var_6619: int8, %var_6620: Tensor[(6, 11, 7), int8]) -> (Tensor[(6, 11, 7), int8],) {
  @func_6617(%var_6619, %var_6620) /* ty=(Tensor[(6, 11, 7), int8],) */
}

def @func_3528() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %476 = fn () -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
    %471 = @func_778() /* ty=Tensor[(960), float64] */;
    %472 = cast(%471, dtype="float64") /* ty=Tensor[(960), float64] */;
    %473 = reshape(%472, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
    %474 = @func_331(%473) /* ty=(Tensor[(12, 8, 10), float32],) */;
    %475 = %474.0;
    (%471, %475)
  };
  %476() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_5092() -> (Tensor[(960), float64],) {
  %477 = @func_1754() /* ty=(Tensor[(960), float64],) */;
  %478 = %477.0;
  (%478,)
}

def @func_15215() -> (Tensor[(12, 2, 12), float64],) {
  %481 = fn () -> (Tensor[(12, 2, 12), float64],) {
    %479 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 2, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 12), float64] */;
    %480 = acosh(%479) /* ty=Tensor[(12, 2, 12), float64] */;
    (%480,)
  };
  %481() /* ty=(Tensor[(12, 2, 12), float64],) */
}

def @func_15835() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  @func_15833() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_16548() -> Tensor[(12, 8, 10), int32] {
  @func_16546() /* ty=Tensor[(12, 8, 10), int32] */
}

def @func_9684() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %486 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %482 = @func_884() /* ty=(Tensor[(960), float64],) */;
    %483 = @func_4332() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool], Tensor[(819), uint64]) */;
    %484 = %482.0;
    %485 = %483.0;
    (%484, %485)
  };
  %486() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_5281(%var_5256: Tensor[(6, 2, 8), float64]) -> (Tensor[(6, 2, 8), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 2, 8), float64], Tensor[(12, 8, 10), float64]) {
  %487 = cast(%var_5256, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %488 = @func_2381() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %489 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %490 = cast(%var_5256, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %491 = %489.0;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %493 = reshape(%492, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %494 = @func_61(%493) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %495 = cosh(%487) /* ty=Tensor[(6, 2, 8), float64] */;
  %496 = %488.1;
  %497 = asin(%490) /* ty=Tensor[(6, 2, 8), float64] */;
  %498 = %494.0;
  (%495, %496, %491, %497, %498)
}

def @func_12584() -> (Tensor[(960), float64],) {
  %501 = fn () -> (Tensor[(960), float64],) {
    %499 = @func_5646() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %500 = %499.0;
    (%500,)
  };
  %501() /* ty=(Tensor[(960), float64],) */
}

def @func_9316() -> (Tensor[(960), float64],) {
  %504 = fn () -> (Tensor[(960), float64],) {
    %502 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %503 = %502.0;
    (%503,)
  };
  %504() /* ty=(Tensor[(960), float64],) */
}

def @func_15618() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %505 = @func_4809() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %506 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %507 = %505.1;
  %508 = %506.0;
  (%507, %508)
}

def @func_4638() -> Tensor[(960), float64] {
  @func_4636() /* ty=Tensor[(960), float64] */
}

def @func_6242() -> (Tensor[(960), float64], Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) {
  %513 = fn () -> (Tensor[(960), float64], Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) {
    %509 = @func_1400() /* ty=(Tensor[(960), float64],) */;
    %510 = %509.0;
    %511 = @func_3979() /* ty=Tensor[(12, 8, 10), int16] */;
    %512 = @func_5455() /* ty=Tensor[(12, 8, 10), float32] */;
    (%510, %511, %512)
  };
  %513() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */
}

def @func_1745() -> (Tensor[(12, 8, 10), float32],) {
  @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_4809() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %514 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %515 = @func_4251() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
  %516 = %514.1;
  %517 = %515.1;
  (%516, %517)
}

def @func_12096() -> (Tensor[(960), float64], Tensor[(12, 8, 10), int16]) {
  %518 = @func_10931() /* ty=(Tensor[(960), float64],) */;
  %519 = %518.0;
  %520 = @func_3979() /* ty=Tensor[(12, 8, 10), int16] */;
  (%519, %520)
}

def @func_6966() -> Tensor[(12, 8, 10), float64] {
  @func_6964() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_12296() -> (Tensor[(12, 8, 10), float64],) {
  @func_12294() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_2904() -> Tensor[(12, 8, 10), float32] {
  %522 = fn () -> Tensor[(12, 8, 10), float32] {
    %521 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %521.3
  };
  %522() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_4486() -> (Tensor[(960), uint16],) {
  %530 = fn () -> (Tensor[(960), uint16],) {
    %523 = @func_3577() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %524 = %523.1;
    %525 = cast(meta[relay.Constant][14] /* ty=Tensor[(960), float64] */, dtype="uint16") /* ty=Tensor[(960), uint16] */;
    %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(1), int32] */;
    %527 = cast(%524, dtype="uint16") /* ty=Tensor[(960), uint16] */;
    %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %529 = bitwise_or(%527, %528) /* ty=Tensor[(960), uint16] */;
    (%529,)
  };
  %530() /* ty=(Tensor[(960), uint16],) */
}

def @func_1268() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %531 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %532 = %531.0;
  %533 = cast(%532, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %534 = reshape(%533, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %535 = @func_61(%534) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %536 = %535.0;
  (%532, %536)
}

def @func_11651() -> Tensor[(12, 8, 10), float64] {
  @func_7200() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_10350(%var_10348: Tensor[(12, 12, 2), uint64], %var_10349: Tensor[(12, 12, 2), uint64]) -> (Tensor[(12, 12, 2), float32], Tensor[(12, 12, 2), int16]) {
  @func_10346(%var_10348, %var_10349) /* ty=(Tensor[(12, 12, 2), float32], Tensor[(12, 12, 2), int16]) */
}

def @func_18160() -> Tensor[(960), float64] {
  %537 = @func_9683() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %537.0
}

def @func_13884() -> (Tensor[(12, 8, 10), float32],) {
  %538 = @func_8920() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %539 = %538.1;
  (%539,)
}

def @func_8091() -> (Tensor[(12, 8, 10), float32],) {
  @func_8089() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_17107(%var_17106: Tensor[(144, 2), uint64]) -> (Tensor[(12, 8, 10), float64], Tensor[(144, 2), float32], Tensor[(144, 2), bool], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(144, 2), float32], Tensor[(960), float64]) {
  %571 = fn (%var_17045: Tensor[(144, 2), uint64]) -> (Tensor[(12, 8, 10), float64], Tensor[(144, 2), float32], Tensor[(144, 2), bool], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(144, 2), float32], Tensor[(960), float64]) {
    %540 = @func_7914() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %541 = cast(meta[relay.Constant][15] /* ty=Tensor[(144, 2), uint64] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
    %542 = cast(meta[relay.Constant][15] /* ty=Tensor[(144, 2), uint64] */, dtype="uint64") /* ty=Tensor[(144, 2), uint64] */;
    %543 = cast(meta[relay.Constant][15] /* ty=Tensor[(144, 2), uint64] */, dtype="uint64") /* ty=Tensor[(144, 2), uint64] */;
    %544 = reshape(%542, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint64] */;
    %545 = reshape(%543, newshape=[12, 12, 2]) /* ty=Tensor[(12, 12, 2), uint64] */;
    %546 = @func_10346(%544, %545) /* ty=(Tensor[(12, 12, 2), float32], Tensor[(12, 12, 2), int16]) */;
    %547 = %546.1;
    %548 = cast(%547, dtype="bool") /* ty=Tensor[(12, 12, 2), bool] */;
    %549 = shape_of(%var_17045, dtype="int32") /* ty=Tensor[(2), int32] */;
    %550 = cast(%var_17045, dtype="bool") /* ty=Tensor[(144, 2), bool] */;
    %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %552 = @func_7158() /* ty=(Tensor[(12, 12, 11), int32], Tensor[(12, 8, 10), float32]) */;
    %553 = @func_1968() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %554 = cast(%var_17045, dtype="uint32") /* ty=Tensor[(144, 2), uint32] */;
    %555 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(144, 2), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %556 = cast(meta[relay.Constant][15] /* ty=Tensor[(144, 2), uint64] */, dtype="uint32") /* ty=Tensor[(144, 2), uint32] */;
    %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %558 = subtract(%556, %557) /* ty=Tensor[(144, 2), uint32] */;
    %559 = cast(meta[relay.Constant][15] /* ty=Tensor[(144, 2), uint64] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
    %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(2), int32] */;
    %561 = cast(%558, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
    %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %563 = @func_16606() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %564 = %540.0;
    %565 = acos(%541) /* ty=Tensor[(144, 2), float32] */;
    %566 = greater_equal(%550, %551) /* ty=Tensor[(144, 2), bool] */;
    %567 = %552.1;
    %568 = %553.0;
    %569 = mod(%561, %562) /* ty=Tensor[(144, 2), float32] */;
    %570 = %563.0;
    (%564, %565, %566, %567, %568, %569, %570)
  };
  %571(%var_17106) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(144, 2), float32], Tensor[(144, 2), bool], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(144, 2), float32], Tensor[(960), float64]) */
}

def @func_17247() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(504), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  @func_17245() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(504), float64], Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_11976() -> Tensor[(960), float64] {
  %573 = fn () -> Tensor[(960), float64] {
    %572 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %572.1
  };
  %573() /* ty=Tensor[(960), float64] */
}

def @func_64(%var_62: Tensor[(12, 8, 10), float64]) -> (Tensor[(12, 8, 10), float64],) {
  @func_61(%var_62) /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_17723(%var_17698: Tensor[(756), uint8], %var_17715: Tensor[(756), uint8]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(756), uint64]) {
  %574 = @func_4431() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
  %575 = cast(%var_17698, dtype="uint8") /* ty=Tensor[(756), uint8] */;
  %576 = reshape(%575, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), uint8] */;
  %577 = @func_9778(%576) /* ty=(Tensor[(6, 14, 9), uint8], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %578 = @func_14471() /* ty=(Tensor[(960), float64],) */;
  %579 = cast(%var_17715, dtype="uint64") /* ty=Tensor[(756), uint64] */;
  %580 = shape_of(%var_17698, dtype="int32") /* ty=Tensor[(1), int32] */;
  %581 = cast(%var_17698, dtype="uint64") /* ty=Tensor[(756), uint64] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %583 = %574.1;
  %584 = %577.1;
  %585 = %578.0;
  %586 = logical_xor(%581, %582) /* ty=Tensor[(756), uint64] */;
  (%583, %584, %585, %586)
}

def @func_2994() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  @func_2992() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_16916(%var_16914: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(936), int32], Tensor[(144), float64]) {
  @func_16913(%var_16914) /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(936), int32], Tensor[(144), float64]) */
}

def @func_2445(%var_2443: Tensor[(504), float64]) -> (Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) {
  @func_2442(%var_2443) /* ty=(Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_9376(%var_9374: Tensor[(4, 8, 7), int8]) -> (Tensor[(4, 8, 7), int8], Tensor[(12, 8, 10), float32], Tensor[(4, 8, 7), float64]) {
  @func_9373(%var_9374) /* ty=(Tensor[(4, 8, 7), int8], Tensor[(12, 8, 10), float32], Tensor[(4, 8, 7), float64]) */
}

def @func_16654() -> Tensor[(960), float64] {
  %587 = @func_12625() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %587.0
}

def @func_17335(%var_17334: Tensor[(12, 11, 8), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(1056), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 11, 8), float32], Tensor[(12, 8, 10), float64]) {
  %603 = fn (%var_17320: Tensor[(12, 11, 8), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(1056), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 11, 8), float32], Tensor[(12, 8, 10), float64]) {
    %588 = @func_8501() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %589 = @func_10730() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32]) */;
    %590 = cast(meta[relay.Constant][16] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
    %591 = reshape(%590, newshape=[12, 11, 8]) /* ty=Tensor[(12, 11, 8), float32] */;
    %592 = @func_13376(%591) /* ty=(Tensor[(12, 11, 8), float32],) */;
    %593 = %592.0;
    %594 = cast(%var_17320, dtype="float32") /* ty=Tensor[(12, 11, 8), float32] */;
    %595 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%593, dtype="float32") /* ty=Tensor[(12, 11, 8), float32] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %598 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %599 = %588.0;
    %600 = %589.2;
    %601 = floor_divide(%596, %597) /* ty=Tensor[(12, 11, 8), float32] */;
    %602 = %598.1;
    (%599, meta[relay.Constant][16] /* ty=Tensor[(1056), float32] */, %600, %601, %602)
  };
  %603(%var_17334) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(1056), float32], Tensor[(13, 9, 7), float32], Tensor[(12, 11, 8), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_15384() -> Tensor[(960), float64] {
  @func_15382() /* ty=Tensor[(960), float64] */
}

def @func_15754() -> Tensor[(12, 8, 10), float64] {
  %605 = fn () -> Tensor[(12, 8, 10), float64] {
    %604 = @func_7914() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %604.0
  };
  %605() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_16841() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %612 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
    %606 = @func_9683() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %607 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %608 = @func_9066() /* ty=Tensor[(12, 8, 10), float64] */;
    %609 = %606.1;
    %610 = %607.1;
    %611 = @func_14518() /* ty=Tensor[(960), float64] */;
    (%608, %609, %610, %611)
  };
  %612() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_2477() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %617 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %613 = @func_884() /* ty=(Tensor[(960), float64],) */;
    %614 = @func_2381() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %615 = %613.0;
    %616 = %614.1;
    (%615, %616)
  };
  %617() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_1786() -> (Tensor[(960), float64],) {
  @func_1784() /* ty=(Tensor[(960), float64],) */
}

def @func_5646() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %618 = @func_4607() /* ty=Tensor[(960), float64] */;
  %619 = @func_2850() /* ty=Tensor[(12, 8, 10), float64] */;
  (%618, %619)
}

def @func_11023() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %624 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
    %620 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %621 = @func_9561() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %622 = %620.2;
    %623 = %621.1;
    (%622, %623)
  };
  %624() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_1743() -> (Tensor[(12, 8, 10), float32],) {
  %625 = @func_1488() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %626 = %625.0;
  (%626,)
}

def @func_9373(%var_9321: Tensor[(4, 8, 7), int8]) -> (Tensor[(4, 8, 7), int8], Tensor[(12, 8, 10), float32], Tensor[(4, 8, 7), float64]) {
  %627 = cast(%var_9321, dtype="int8") /* ty=Tensor[(4, 8, 7), int8] */;
  %628 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(4, 8, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 8, 7), int8] */, dtype="int8") /* ty=Tensor[(4, 8, 7), int8] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %631 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %632 = cast(%var_9321, dtype="float64") /* ty=Tensor[(4, 8, 7), float64] */;
  %633 = acos(%632) /* ty=Tensor[(4, 8, 7), float64] */;
  %634 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(4, 8, 7), bool] */;
  %635 = shape_of(%633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%633, dtype="bool") /* ty=Tensor[(4, 8, 7), bool] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %638 = less_equal(%636, %637) /* ty=Tensor[(4, 8, 7), bool] */;
  %639 = cast(%638, dtype="float64") /* ty=Tensor[(4, 8, 7), float64] */;
  %640 = maximum(%629, %630) /* ty=Tensor[(4, 8, 7), int8] */;
  %641 = %631.1;
  %642 = exp(%639) /* ty=Tensor[(4, 8, 7), float64] */;
  (%640, %641, %642)
}

def @func_10759(%var_10756: Tensor[(11, 3, 16), float32]) -> Tensor[(11, 3, 16), float32] {
  %643 = cast(%var_10756, dtype="float32") /* ty=Tensor[(11, 3, 16), float32] */;
  acosh(%643) /* ty=Tensor[(11, 3, 16), float32] */
}

def @func_16685(%var_16683: Tensor[(3, 16, 8), int16], %var_16684: Tensor[(3, 16, 8), int16]) -> Tensor[(3, 16, 8), int16] {
  @func_16681(%var_16683, %var_16684) /* ty=Tensor[(3, 16, 8), int16] */
}

def @func_10346(%var_10327: Tensor[(12, 12, 2), uint64], %var_10341: Tensor[(12, 12, 2), uint64]) -> (Tensor[(12, 12, 2), float32], Tensor[(12, 12, 2), int16]) {
  %644 = cast(meta[relay.Constant][19] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %645 = cast(%var_10327, dtype="uint64") /* ty=Tensor[(12, 12, 2), uint64] */;
  %646 = bitwise_xor(%644, %645) /* ty=Tensor[(12, 12, 2), uint64] */;
  %647 = cast(%646, dtype="float32") /* ty=Tensor[(12, 12, 2), float32] */;
  %648 = cast(meta[relay.Constant][19] /* ty=uint64 */, dtype="float32") /* ty=float32 */;
  %649 = cast(%var_10341, dtype="int16") /* ty=Tensor[(12, 12, 2), int16] */;
  %650 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%646, dtype="int16") /* ty=Tensor[(12, 12, 2), int16] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %653 = floor_divide(%647, %648) /* ty=Tensor[(12, 12, 2), float32] */;
  %654 = multiply(%651, %652) /* ty=Tensor[(12, 12, 2), int16] */;
  (%653, %654)
}

def @func_3116() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) {
  @func_3114() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) */
}

def @func_4221() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %655 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %656 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %657 = @func_2661() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %658 = %655.1;
  %659 = %656.0;
  %660 = %657.0;
  (%658, %659, %660)
}

def @func_15620() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  @func_15618() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_15466() -> (Tensor[(960), float64], Tensor[(16, 3, 10), float64], Tensor[(480), float64], Tensor[(12, 8, 10), float32]) {
  @func_15464() /* ty=(Tensor[(960), float64], Tensor[(16, 3, 10), float64], Tensor[(480), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_2040(%var_2039: Tensor[(5, 14, 16), bool]) -> (Tensor[(5, 14, 16), bool], Tensor[(12, 8, 10), float32]) {
  %668 = fn (%var_2003: Tensor[(5, 14, 16), bool]) -> (Tensor[(5, 14, 16), bool], Tensor[(12, 8, 10), float32]) {
    %661 = cast(%var_2003, dtype="bool") /* ty=Tensor[(5, 14, 16), bool] */;
    %662 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(5, 14, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %663 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 14, 16), bool] */, dtype="bool") /* ty=Tensor[(5, 14, 16), bool] */;
    %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %665 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %666 = logical_or(%663, %664) /* ty=Tensor[(5, 14, 16), bool] */;
    %667 = %665.0;
    (%666, %667)
  };
  %668(%var_2039) /* ty=(Tensor[(5, 14, 16), bool], Tensor[(12, 8, 10), float32]) */
}

def @func_5012() -> (Tensor[(12, 8, 10), float32],) {
  %669 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %670 = %669.0;
  (%670,)
}

def @func_2300() -> (Tensor[(12, 8, 10), float64],) {
  @func_2298() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_11493() -> (Tensor[(960), float64],) {
  @func_11491() /* ty=(Tensor[(960), float64],) */
}

def @func_829(%var_828: Tensor[(6, 14, 6), float64]) -> (Tensor[(6, 14, 6), float64],) {
  %673 = fn (%var_823: Tensor[(6, 14, 6), float64]) -> (Tensor[(6, 14, 6), float64],) {
    %671 = cast(%var_823, dtype="float64") /* ty=Tensor[(6, 14, 6), float64] */;
    %672 = log(%671) /* ty=Tensor[(6, 14, 6), float64] */;
    (%672,)
  };
  %673(%var_828) /* ty=(Tensor[(6, 14, 6), float64],) */
}

def @func_7636() -> Tensor[(960), uint16] {
  %675 = fn () -> Tensor[(960), uint16] {
    %674 = @func_6700() /* ty=(Tensor[(960), uint16],) */;
    %674.0
  };
  %675() /* ty=Tensor[(960), uint16] */
}

def @func_5439() -> Tensor[(12, 8, 10), float32] {
  %677 = fn () -> Tensor[(12, 8, 10), float32] {
    %676 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %676.1
  };
  %677() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_9861() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %678 = @func_3089() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %679 = @func_1784() /* ty=(Tensor[(960), float64],) */;
  %680 = %678.0;
  %681 = %679.0;
  (%680, %681)
}

def @func_518() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_9047() -> Tensor[(960), float64] {
  @func_9045() /* ty=Tensor[(960), float64] */
}

def @func_1270() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_6315(%var_6313: Tensor[(6, 2, 12), float64], %var_6314: Tensor[(504), float64]) -> (Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) {
  %689 = fn (%var_6287: Tensor[(6, 2, 12), float64], %var_6293: Tensor[(504), float64]) -> (Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) {
    %682 = cast(%var_6287, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
    %683 = cast(%var_6293, dtype="float64") /* ty=Tensor[(504), float64] */;
    %684 = reshape(%683, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
    %685 = @func_827(%684) /* ty=(Tensor[(6, 14, 6), float64],) */;
    %686 = erf(%682) /* ty=Tensor[(6, 2, 12), float64] */;
    %687 = %685.0;
    %688 = @func_2095() /* ty=Tensor[(960), float64] */;
    (%686, %687, %var_6293, %688)
  };
  %689(%var_6313, %var_6314) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) */
}

def @func_18215() -> Tensor[(12, 8, 10), float64] {
  %690 = @func_1028() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %690.1
}

def @func_7591() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %691 = @func_7527() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %692 = @func_2298() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %693 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %694 = %691.1;
  %695 = %692.0;
  %696 = %693.1;
  (%694, %695, %696)
}

def @func_7915() -> (Tensor[(12, 8, 10), float64],) {
  %699 = fn () -> (Tensor[(12, 8, 10), float64],) {
    %697 = @func_6174() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %698 = %697.0;
    (%698,)
  };
  %699() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_9170() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  @func_9168() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_5014() -> (Tensor[(12, 8, 10), float32],) {
  @func_5012() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_9819() -> (Tensor[(960), float64],) {
  %701 = fn () -> (Tensor[(960), float64],) {
    %700 = @func_1211() /* ty=Tensor[(960), float64] */;
    (%700,)
  };
  %701() /* ty=(Tensor[(960), float64],) */
}

def @func_8404() -> Tensor[(960), float64] {
  @func_8402() /* ty=Tensor[(960), float64] */
}

def @func_4830() -> (Tensor[(12, 8, 10), float64],) {
  @func_4828() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_2124(%var_2122: Tensor[(13, 9, 7), uint64], %var_2123: Tensor[(13, 9, 7), uint64]) -> (Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) {
  %715 = fn (%var_2107: Tensor[(13, 9, 7), uint64], %var_2108: Tensor[(13, 9, 7), uint64]) -> (Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) {
    %702 = cast(%var_2108, dtype="uint64") /* ty=Tensor[(13, 9, 7), uint64] */;
    %703 = shape_of(%var_2107, dtype="int32") /* ty=Tensor[(3), int32] */;
    %704 = cast(%var_2107, dtype="uint64") /* ty=Tensor[(13, 9, 7), uint64] */;
    %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %706 = cast(%var_2108, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
    %707 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %708 = %707.0;
    %709 = cast(%708, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
    %710 = reshape(%709, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
    %711 = @func_1371(%710) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) */;
    %712 = right_shift(%704, %705) /* ty=Tensor[(13, 9, 7), uint64] */;
    %713 = atan(%706) /* ty=Tensor[(13, 9, 7), float32] */;
    %714 = %711.2;
    (%712, %713, %708, %714)
  };
  %715(%var_2122, %var_2123) /* ty=(Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) */
}

def @func_18300() -> (Tensor[(960), float64],) {
  @func_18298() /* ty=(Tensor[(960), float64],) */
}

def @func_1968() -> (Tensor[(12, 8, 10), float64],) {
  %716 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %717 = %716.0;
  %718 = cast(%717, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %719 = exp(%718) /* ty=Tensor[(12, 8, 10), float64] */;
  (%719,)
}

def @func_12236() -> (Tensor[(13, 9, 7), float64],) {
  %722 = fn () -> (Tensor[(13, 9, 7), float64],) {
    %720 = @func_10528() /* ty=(Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %721 = %720.0;
    (%721,)
  };
  %722() /* ty=(Tensor[(13, 9, 7), float64],) */
}

def @func_7202() -> Tensor[(12, 8, 10), float64] {
  @func_7200() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_17377(%var_17375: int8, %var_17376: Tensor[(12, 78), int32]) -> (Tensor[(1, 15, 14), int8], Tensor[(504), float64], Tensor[(12, 78), int32], Tensor[(4, 36), float64], Tensor[(960), float64]) {
  %734 = fn (%var_17340: int8, %var_17352: Tensor[(12, 78), int32]) -> (Tensor[(1, 15, 14), int8], Tensor[(504), float64], Tensor[(12, 78), int32], Tensor[(4, 36), float64], Tensor[(960), float64]) {
    %723 = cast(%var_17340, dtype="int8") /* ty=int8 */;
    %724 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 15, 14), int8] */, dtype="int8") /* ty=Tensor[(1, 15, 14), int8] */;
    %725 = cast(%var_17352, dtype="int32") /* ty=Tensor[(12, 78), int32] */;
    %726 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %727 = reshape(%725, newshape=[936]) /* ty=Tensor[(936), int32] */;
    %728 = reshape(%726, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %729 = @func_12574(%727, %728) /* ty=(Tensor[(960), float64], Tensor[(9, 8, 13), int32], Tensor[(936), int32], Tensor[(504), float64], Tensor[(144), float64]) */;
    %730 = @func_2381() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %731 = bitwise_or(%723, %724) /* ty=Tensor[(1, 15, 14), int8] */;
    %732 = %729.3;
    %733 = %730.1;
    (%731, %732, %var_17352, meta[relay.Constant][22] /* ty=Tensor[(4, 36), float64] */, %733)
  };
  %734(%var_17375, %var_17376) /* ty=(Tensor[(1, 15, 14), int8], Tensor[(504), float64], Tensor[(12, 78), int32], Tensor[(4, 36), float64], Tensor[(960), float64]) */
}

def @func_5008() -> Tensor[(960), float64] {
  @func_5006() /* ty=Tensor[(960), float64] */
}

def @func_18217() -> Tensor[(12, 8, 10), float64] {
  @func_18215() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_2696() -> (Tensor[(960), float64],) {
  %735 = @func_2476() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %736 = %735.1;
  (%736,)
}

def @func_15812() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %737 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %738 = @func_13884() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %739 = @func_15382() /* ty=Tensor[(960), float64] */;
  %740 = %737.1;
  %741 = %738.0;
  (%739, %740, %741)
}

def @func_13107() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], float64, Tensor[(480), float64], Tensor[(1, 1120), bool], Tensor[(960), float64], Tensor[(960), float64]) {
  %742 = cast(5.37442f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %743 = cast(meta[relay.Constant][23] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %744 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 1120), bool] */, dtype="bool") /* ty=Tensor[(1, 1120), bool] */;
  %745 = reshape(%742, newshape=[]) /* ty=float64 */;
  %746 = reshape(%743, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %747 = reshape(%744, newshape=[1120]) /* ty=Tensor[(1120), bool] */;
  %748 = @func_3439(%745, %746, %747) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(1120), bool], Tensor[(12, 8, 10), float32]) */;
  %749 = @func_3577() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %750 = @func_2992() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %751 = @func_10839() /* ty=Tensor[(960), float64] */;
  %752 = %748.6;
  %753 = %749.1;
  %754 = %750.3;
  (%751, %752, 5.37442f64 /* ty=float64 */, meta[relay.Constant][23] /* ty=Tensor[(480), float64] */, meta[relay.Constant][24] /* ty=Tensor[(1, 1120), bool] */, %753, %754)
}

def @func_7593() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  @func_7591() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_2132() -> Tensor[(12, 8, 10), float32] {
  %755 = fn () -> Tensor[(12, 8, 10), float32] {
    @func_1821() /* ty=Tensor[(12, 8, 10), float32] */
  };
  %755() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_6609() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  @func_6607() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */
}

def @func_9561() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %756 = @func_1488() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %757 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %758 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %759 = @func_5535() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %760 = %756.0;
  %761 = @func_6271() /* ty=Tensor[(12, 8, 10), float32] */;
  %762 = %757.1;
  %763 = %758.1;
  %764 = %759.0;
  (%760, %761, %762, %763, %764)
}

def @func_9563() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  @func_9561() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_9296() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %769 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %765 = @func_3288() /* ty=(Tensor[(960), float64],) */;
    %766 = @func_6687() /* ty=(Tensor[(5, 3, 2), float32], Tensor[(960), float64]) */;
    %767 = %765.0;
    %768 = %766.1;
    (%767, %768)
  };
  %769() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_6727() -> (Tensor[(960), float64],) {
  %770 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %771 = %770.1;
  (%771,)
}

def @func_16128() -> (Tensor[(12, 8, 10), float32], Tensor[(6, 11, 7), int8], int8, Tensor[(7, 66), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  @func_16126() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(6, 11, 7), int8], int8, Tensor[(7, 66), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_16521() -> (Tensor[(12, 8, 10), float64], Tensor[(960), uint16]) {
  %776 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(960), uint16]) {
    %772 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %773 = @func_8169() /* ty=(Tensor[(960), uint16],) */;
    %774 = %772.0;
    %775 = %773.0;
    (%774, %775)
  };
  %776() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), uint16]) */
}

def @func_8921() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %784 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
    %777 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %778 = %777.1;
    %779 = cast(%778, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
    %780 = reshape(%779, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
    %781 = @func_331(%780) /* ty=(Tensor[(12, 8, 10), float32],) */;
    %782 = %781.0;
    %783 = @func_8643() /* ty=Tensor[(12, 8, 10), float32] */;
    (%778, %782, %783)
  };
  %784() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_4658() -> Tensor[(960), float64] {
  %785 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %785.0
}

def @func_10991() -> (Tensor[(960), float64],) {
  %786 = @func_4636() /* ty=Tensor[(960), float64] */;
  (%786,)
}

def @func_7529() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  @func_7527() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_13210() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %789 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %787 = @func_2095() /* ty=Tensor[(960), float64] */;
    %788 = @func_11088() /* ty=Tensor[(960), float64] */;
    (%787, %788)
  };
  %789() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_7311() -> Tensor[(12, 8, 10), float64] {
  @func_7309() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_13414() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  %798 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64]) {
    %790 = @func_9861() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %791 = @func_1400() /* ty=(Tensor[(960), float64],) */;
    %792 = @func_11709() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(6, 14, 9), uint8], Tensor[(1, 756), uint8]) */;
    %793 = @func_1400() /* ty=(Tensor[(960), float64],) */;
    %794 = %790.0;
    %795 = %791.0;
    %796 = %792.2;
    %797 = %793.0;
    (%794, %795, %796, %797)
  };
  %798() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_16291() -> (Tensor[(960), float64],) {
  %801 = fn () -> (Tensor[(960), float64],) {
    %799 = @func_5785() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %800 = %799.1;
    (%800,)
  };
  %801() /* ty=(Tensor[(960), float64],) */
}

def @func_18025() -> Tensor[(960), float64] {
  @func_7336() /* ty=Tensor[(960), float64] */
}

def @func_16983() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %805 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
    %802 = @func_14286() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %803 = %802.0;
    %804 = @func_2850() /* ty=Tensor[(12, 8, 10), float64] */;
    (%803, %804)
  };
  %805() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_5802() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %806 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %807 = %806.1;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %809 = reshape(%808, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %810 = @func_61(%809) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %811 = %810.0;
  (%807, %811)
}

def @func_14761() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %812 = @func_13761() /* ty=(Tensor[(960), float64],) */;
  %813 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %814 = @func_4431() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
  %815 = @func_3040() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %816 = @func_11900() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) */;
  %817 = @func_4221() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %818 = @func_11491() /* ty=(Tensor[(960), float64],) */;
  %819 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %820 = @func_5860() /* ty=Tensor[(960), float64] */;
  %821 = %812.0;
  %822 = %813.0;
  %823 = %814.1;
  %824 = %815.0;
  %825 = %816.4;
  %826 = %817.2;
  %827 = @func_5942() /* ty=Tensor[(960), float64] */;
  %828 = %818.0;
  %829 = %819.0;
  (%820, %821, %822, %823, %824, %825, %826, %827, %828, %829)
}

def @func_3483(%var_3455: Tensor[(16, 1, 8), float32]) -> (Tensor[(16, 1, 8), float32], Tensor[(960), float64], Tensor[(16, ?, 8), int8]) {
  %830 = cast(%var_3455, dtype="float32") /* ty=Tensor[(16, 1, 8), float32] */;
  %831 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %832 = cast(%var_3455, dtype="float64") /* ty=Tensor[(16, 1, 8), float64] */;
  %833 = asinh(%832) /* ty=Tensor[(16, 1, 8), float64] */;
  %834 = cast(%833, dtype="int8") /* ty=Tensor[(16, 1, 8), int8] */;
  %835 = shape_of(%var_3455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%var_3455, dtype="int8") /* ty=Tensor[(16, 1, 8), int8] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %838 = log10(%830) /* ty=Tensor[(16, 1, 8), float32] */;
  %839 = %831.0;
  %840 = left_shift(%836, %837) /* ty=Tensor[(16, ?, 8), int8] */;
  (%838, %839, %840)
}

def @func_16421() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  @func_16419() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_16546() -> Tensor[(12, 8, 10), int32] {
  %841 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
  %841.1
}

def @func_18064() -> Tensor[(960), float64] {
  %842 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %842.1
}

def @func_17638() -> (Tensor[(960), float64],) {
  %844 = fn () -> (Tensor[(960), float64],) {
    %843 = @func_10595() /* ty=Tensor[(960), float64] */;
    (%843,)
  };
  %844() /* ty=(Tensor[(960), float64],) */
}

def @func_11812(%var_11801: Tensor[(10, 8, 4), float32]) -> (Tensor[(10, 8, 4), float32], Tensor[(12, 8, 10), float64]) {
  %845 = cast(%var_11801, dtype="float32") /* ty=Tensor[(10, 8, 4), float32] */;
  %846 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %847 = cosh(%845) /* ty=Tensor[(10, 8, 4), float32] */;
  %848 = %846.0;
  (%847, %848)
}

def @func_13148() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %857 = fn () -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
    %849 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %850 = @func_5012() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %851 = @func_1400() /* ty=(Tensor[(960), float64],) */;
    %852 = @func_2095() /* ty=Tensor[(960), float64] */;
    %853 = @func_9066() /* ty=Tensor[(12, 8, 10), float64] */;
    %854 = %849.0;
    %855 = %850.0;
    %856 = %851.0;
    (%852, %853, %854, %855, %856)
  };
  %857() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_9119(%var_9118: Tensor[(14, 2, 10), float64]) -> (Tensor[(14, 2, 10), float64],) {
  %860 = fn (%var_9107: Tensor[(14, 2, 10), float64]) -> (Tensor[(14, 2, 10), float64],) {
    %858 = cast(%var_9107, dtype="float64") /* ty=Tensor[(14, 2, 10), float64] */;
    %859 = sqrt(%858) /* ty=Tensor[(14, 2, 10), float64] */;
    (%859,)
  };
  %860(%var_9118) /* ty=(Tensor[(14, 2, 10), float64],) */
}

def @func_10173() -> Tensor[(960), uint16] {
  %862 = fn () -> Tensor[(960), uint16] {
    %861 = @func_8169() /* ty=(Tensor[(960), uint16],) */;
    %861.0
  };
  %862() /* ty=Tensor[(960), uint16] */
}

def @func_17627() -> (Tensor[(960), float64], Tensor[(6, 11, 16), int8], int8, Tensor[(1056), int8], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %871 = fn () -> (Tensor[(960), float64], Tensor[(6, 11, 16), int8], int8, Tensor[(1056), int8], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
    %863 = cast(meta[relay.Constant][25] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %864 = cast(meta[relay.Constant][26] /* ty=Tensor[(1056), int8] */, dtype="int8") /* ty=Tensor[(1056), int8] */;
    %865 = reshape(%863, newshape=[]) /* ty=int8 */;
    %866 = reshape(%864, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), int8] */;
    %867 = @func_4636() /* ty=Tensor[(960), float64] */;
    %868 = @func_10161(%865, %866) /* ty=Tensor[(6, 11, 16), int8] */;
    %869 = @func_13692() /* ty=Tensor[(12, 8, 10), float32] */;
    %870 = @func_4607() /* ty=Tensor[(960), float64] */;
    (%867, %868, meta[relay.Constant][25] /* ty=int8 */, meta[relay.Constant][26] /* ty=Tensor[(1056), int8] */, %869, %870)
  };
  %871() /* ty=(Tensor[(960), float64], Tensor[(6, 11, 16), int8], int8, Tensor[(1056), int8], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_4431() -> (Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) {
  %872 = @func_3680() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %873 = @func_3979() /* ty=Tensor[(12, 8, 10), int16] */;
  %874 = %872.0;
  (%873, %874)
}

def @func_1111() -> (Tensor[(12, 8, 10), float32],) {
  %877 = fn () -> (Tensor[(12, 8, 10), float32],) {
    %875 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %876 = %875.1;
    (%876,)
  };
  %877() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_346() -> Tensor[(12, 8, 10), float32] {
  %884 = fn () -> Tensor[(12, 8, 10), float32] {
    %878 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %879 = %878.3;
    %880 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 8, 10), float64] */, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
    %881 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
    %882 = cast(%879, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%882, %883) /* ty=Tensor[(12, 8, 10), float32] */
  };
  %884() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_8503() -> (Tensor[(12, 8, 10), float32],) {
  @func_8501() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_10218() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  %885 = @func_3362() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %886 = @func_1890() /* ty=(Tensor[(960), float64],) */;
  %887 = %885.0;
  %888 = %886.0;
  %889 = @func_2095() /* ty=Tensor[(960), float64] */;
  (%887, %888, %889)
}

def @func_3771() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  @func_3769() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_9723(%var_9721: Tensor[(1650), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float64]) {
  @func_9720(%var_9721) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float64]) */
}

def @func_11088() -> Tensor[(960), float64] {
  %890 = @func_1830() /* ty=(Tensor[(960), float64],) */;
  %890.0
}

def @func_12863() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  @func_12861() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_4105() -> (Tensor[(12, 12, 11), int32],) {
  %896 = fn () -> (Tensor[(12, 12, 11), int32],) {
    %891 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 12, 11), int32] */, dtype="int32") /* ty=Tensor[(12, 12, 11), int32] */;
    %892 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(12, 12, 11), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %893 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 12, 11), int32] */, dtype="int32") /* ty=Tensor[(12, 12, 11), int32] */;
    %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %895 = left_shift(%893, %894) /* ty=Tensor[(12, 12, 11), int32] */;
    (%895,)
  };
  %896() /* ty=(Tensor[(12, 12, 11), int32],) */
}

def @func_3439(%var_3413: float64, %var_3414: Tensor[(480), float64], %var_3419: Tensor[(1120), bool]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(1120), bool], Tensor[(12, 8, 10), float32]) {
  %897 = @func_2810() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %898 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 504), float64] */, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %899 = reshape(%898, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %900 = @func_1447(%899) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64]) */;
  %901 = cast(%var_3413, dtype="float64") /* ty=float64 */;
  %902 = cast(%var_3414, dtype="float64") /* ty=Tensor[(480), float64] */;
  %903 = reshape(%901, newshape=[]) /* ty=float64 */;
  %904 = reshape(%902, newshape=[16, 15, 2]) /* ty=Tensor[(16, 15, 2), float64] */;
  %905 = @func_1423(%903, %904) /* ty=(Tensor[(16, 15, 2), float64],) */;
  %906 = cast(%var_3419, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %907 = reshape(%906, newshape=[5, 14, 16]) /* ty=Tensor[(5, 14, 16), bool] */;
  %908 = @func_2038(%907) /* ty=(Tensor[(5, 14, 16), bool], Tensor[(12, 8, 10), float32]) */;
  %909 = %897.0;
  %910 = %900.1;
  %911 = %905.0;
  %912 = %908.1;
  %913 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  (%909, %910, meta[relay.Constant][30] /* ty=Tensor[(1, 504), float64] */, %911, %var_3413, %var_3414, %912, %var_3419, %913)
}

def @func_16198() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %914 = @func_4781() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %915 = @func_2095() /* ty=Tensor[(960), float64] */;
  %916 = %914.1;
  (%915, %916)
}

def @func_1756() -> (Tensor[(960), float64],) {
  @func_1754() /* ty=(Tensor[(960), float64],) */
}

def @func_10118() -> (Tensor[(12, 8, 10), float32],) {
  %919 = fn () -> (Tensor[(12, 8, 10), float32],) {
    %917 = @func_3040() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %918 = %917.0;
    (%918,)
  };
  %919() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_10165(%var_10163: int8, %var_10164: Tensor[(6, 11, 16), int8]) -> Tensor[(6, 11, 16), int8] {
  @func_10161(%var_10163, %var_10164) /* ty=Tensor[(6, 11, 16), int8] */
}

def @func_12915() -> Tensor[(12, 8, 10), float32] {
  @func_12913() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_1822() -> Tensor[(12, 8, 10), float32] {
  %921 = fn () -> Tensor[(12, 8, 10), float32] {
    %920 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %920.0
  };
  %921() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_14413() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 12, 11), int32]) {
  @func_14411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 12, 11), int32]) */
}

def @func_12294() -> (Tensor[(12, 8, 10), float64],) {
  %922 = @func_10218() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
  %923 = %922.0;
  (%923,)
}

def @func_14341() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(15, 10, 11), float32], Tensor[(550, 3), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %938 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(15, 10, 11), float32], Tensor[(550, 3), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
    %924 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %925 = @func_12522() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %926 = cast(meta[relay.Constant][31] /* ty=Tensor[(550, 3), float32] */, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
    %927 = reshape(%926, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
    %928 = @func_9029(%927) /* ty=(Tensor[(15, 10, 11), float32],) */;
    %929 = @func_3577() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %930 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %931 = @func_8653() /* ty=(Tensor[(960), float64],) */;
    %932 = %924.0;
    %933 = %925.0;
    %934 = %928.0;
    %935 = %929.0;
    %936 = %930.3;
    %937 = %931.0;
    (%932, %933, %934, meta[relay.Constant][31] /* ty=Tensor[(550, 3), float32] */, %935, %936, %937)
  };
  %938() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(15, 10, 11), float32], Tensor[(550, 3), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */
}

def @func_18298() -> (Tensor[(960), float64],) {
  %939 = @func_12717() /* ty=(Tensor[(960), float64],) */;
  %940 = %939.0;
  (%940,)
}

def @func_4783() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  @func_4781() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_1426(%var_1424: float64, %var_1425: Tensor[(16, 15, 2), float64]) -> (Tensor[(16, 15, 2), float64],) {
  %944 = fn (%var_1418: float64, %var_1419: Tensor[(16, 15, 2), float64]) -> (Tensor[(16, 15, 2), float64],) {
    %941 = cast(%var_1418, dtype="float64") /* ty=float64 */;
    %942 = cast(%var_1419, dtype="float64") /* ty=Tensor[(16, 15, 2), float64] */;
    %943 = add(%941, %942) /* ty=Tensor[(16, 15, 2), float64] */;
    (%943,)
  };
  %944(%var_1424, %var_1425) /* ty=(Tensor[(16, 15, 2), float64],) */
}

def @func_3114() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) {
  %945 = @func_1890() /* ty=(Tensor[(960), float64],) */;
  %946 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 504), float64] */, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %947 = reshape(%946, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %948 = @func_2442(%947) /* ty=(Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) */;
  %949 = %945.0;
  %950 = %948.3;
  (%949, %950, meta[relay.Constant][32] /* ty=Tensor[(1, 504), float64] */)
}

def @func_7159() -> (Tensor[(12, 12, 11), int32], Tensor[(12, 8, 10), float32]) {
  %954 = fn () -> (Tensor[(12, 12, 11), int32], Tensor[(12, 8, 10), float32]) {
    %951 = @func_4104() /* ty=(Tensor[(12, 12, 11), int32],) */;
    %952 = %951.0;
    %953 = @func_1909() /* ty=Tensor[(12, 8, 10), float32] */;
    (%952, %953)
  };
  %954() /* ty=(Tensor[(12, 12, 11), int32], Tensor[(12, 8, 10), float32]) */
}

def @func_1211() -> Tensor[(960), float64] {
  %955 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %955.0
}

def @func_8299() -> Tensor[(960), float64] {
  %956 = fn () -> Tensor[(960), float64] {
    @func_4607() /* ty=Tensor[(960), float64] */
  };
  %956() /* ty=Tensor[(960), float64] */
}

def @func_8336(%var_8334: Tensor[(9, 11, 13), uint64], %var_8335: Tensor[(9, 11, 13), uint64]) -> Tensor[(9, 11, 13), float64] {
  %963 = fn (%var_8323: Tensor[(9, 11, 13), uint64], %var_8324: Tensor[(9, 11, 13), uint64]) -> Tensor[(9, 11, 13), float64] {
    %957 = cast(%var_8324, dtype="uint64") /* ty=Tensor[(9, 11, 13), uint64] */;
    %958 = shape_of(%var_8323, dtype="int32") /* ty=Tensor[(3), int32] */;
    %959 = cast(%var_8323, dtype="uint64") /* ty=Tensor[(9, 11, 13), uint64] */;
    %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %961 = multiply(%959, %960) /* ty=Tensor[(9, 11, 13), uint64] */;
    %962 = cast(%961, dtype="float64") /* ty=Tensor[(9, 11, 13), float64] */;
    exp(%962) /* ty=Tensor[(9, 11, 13), float64] */
  };
  %963(%var_8334, %var_8335) /* ty=Tensor[(9, 11, 13), float64] */
}

def @func_5928() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  @func_5926() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_6175() -> (Tensor[(12, 8, 10), float64],) {
  %966 = fn () -> (Tensor[(12, 8, 10), float64],) {
    %964 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %965 = %964.0;
    (%965,)
  };
  %966() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_4962() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %973 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
    %967 = @func_3885() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %968 = @func_2298() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %969 = @func_3362() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %970 = %967.1;
    %971 = %968.0;
    %972 = %969.0;
    (%970, %971, %972)
  };
  %973() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_17941() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  @func_17939() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_2060() -> Tensor[(12, 8, 10), float64] {
  %975 = fn () -> Tensor[(12, 8, 10), float64] {
    %974 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %974.1
  };
  %975() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_10420() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %982 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
    %976 = @func_2831() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %977 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %978 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %979 = %976.1;
    %980 = %977.1;
    %981 = %978.1;
    (%979, %980, %981)
  };
  %982() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_5229() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %983 = @func_2831() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %984 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %985 = %983.1;
  %986 = %984.1;
  (%985, %986)
}

def @func_3289() -> (Tensor[(960), float64],) {
  %989 = fn () -> (Tensor[(960), float64],) {
    %987 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %988 = %987.1;
    (%988,)
  };
  %989() /* ty=(Tensor[(960), float64],) */
}

def @func_17245() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(504), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  %990 = cast(meta[relay.Constant][33] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %991 = reshape(%990, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %992 = @func_2442(%991) /* ty=(Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) */;
  %993 = @func_15146() /* ty=(Tensor[(960), float64],) */;
  %994 = @func_11491() /* ty=(Tensor[(960), float64],) */;
  %995 = @func_5942() /* ty=Tensor[(960), float64] */;
  %996 = %992.3;
  %997 = %993.0;
  %998 = %994.0;
  (%995, %996, meta[relay.Constant][33] /* ty=Tensor[(504), float64] */, %997, %998)
}

def @func_14149() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %999 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1000 = @func_12625() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1001 = %999.0;
  %1002 = %1000.2;
  (%1001, %1002)
}

def @func_8872() -> (Tensor[(12, 8, 10), float32],) {
  @func_8870() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_8654() -> (Tensor[(960), float64],) {
  %1005 = fn () -> (Tensor[(960), float64],) {
    %1003 = @func_2381() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1004 = %1003.1;
    (%1004,)
  };
  %1005() /* ty=(Tensor[(960), float64],) */
}

def @func_9781(%var_9779: Tensor[(6, 14, 9), uint8]) -> (Tensor[(6, 14, 9), uint8], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  @func_9778(%var_9779) /* ty=(Tensor[(6, 14, 9), uint8], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_10597() -> Tensor[(960), float64] {
  @func_10595() /* ty=Tensor[(960), float64] */
}

def @func_9778(%var_9725: Tensor[(6, 14, 9), uint8]) -> (Tensor[(6, 14, 9), uint8], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %1006 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 14, 9), uint8] */, dtype="uint8") /* ty=Tensor[(6, 14, 9), uint8] */;
  %1007 = shape_of(%var_9725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1008 = cast(%var_9725, dtype="uint8") /* ty=Tensor[(6, 14, 9), uint8] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1010 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1011 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1012 = minimum(%1008, %1009) /* ty=Tensor[(6, 14, 9), uint8] */;
  %1013 = %1010.0;
  %1014 = %1011.0;
  (%1012, %1013, %1014)
}

def @func_8169() -> (Tensor[(960), uint16],) {
  %1015 = @func_7635() /* ty=Tensor[(960), uint16] */;
  (%1015,)
}

def @func_9000() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %1022 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
    %1016 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %1017 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %1018 = @func_6727() /* ty=(Tensor[(960), float64],) */;
    %1019 = %1016.1;
    %1020 = %1017.2;
    %1021 = %1018.0;
    (%1019, %1020, %1021)
  };
  %1022() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */
}

def @func_18124(%var_18122: uint8, %var_18123: Tensor[(400), uint8]) -> (Tensor[(12, 8, 10), float64], Tensor[(8, 5, 10), bool], uint8, Tensor[(400), uint8]) {
  %1030 = fn (%var_18117: uint8, %var_18118: Tensor[(400), uint8]) -> (Tensor[(12, 8, 10), float64], Tensor[(8, 5, 10), bool], uint8, Tensor[(400), uint8]) {
    %1023 = @func_2831() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %1024 = cast(%var_18117, dtype="uint8") /* ty=uint8 */;
    %1025 = cast(%var_18118, dtype="uint8") /* ty=Tensor[(400), uint8] */;
    %1026 = reshape(%1024, newshape=[]) /* ty=uint8 */;
    %1027 = reshape(%1025, newshape=[8, 5, 10]) /* ty=Tensor[(8, 5, 10), uint8] */;
    %1028 = %1023.0;
    %1029 = @func_16950(%1026, %1027) /* ty=Tensor[(8, 5, 10), bool] */;
    (%1028, %1029, %var_18117, %var_18118)
  };
  %1030(%var_18122, %var_18123) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(8, 5, 10), bool], uint8, Tensor[(400), uint8]) */
}

def @func_2871() -> (Tensor[(12, 8, 10), float32],) {
  %1031 = @func_1488() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1032 = %1031.0;
  (%1032,)
}

def @func_4712() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64]) {
  @func_4710() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64]) */
}

def @func_16953(%var_16951: uint8, %var_16952: Tensor[(8, 5, 10), uint8]) -> Tensor[(8, 5, 10), bool] {
  %1035 = fn (%var_16929: uint8, %var_16930: Tensor[(8, 5, 10), uint8]) -> Tensor[(8, 5, 10), bool] {
    %1033 = cast(%var_16929, dtype="bool") /* ty=bool */;
    %1034 = cast(%var_16930, dtype="bool") /* ty=Tensor[(8, 5, 10), bool] */;
    less(%1033, %1034) /* ty=Tensor[(8, 5, 10), bool] */
  };
  %1035(%var_16951, %var_16952) /* ty=Tensor[(8, 5, 10), bool] */
}

def @func_6957() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  @func_6955() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_1650() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %1040 = fn () -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
    %1036 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1037 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %1038 = %1036.0;
    %1039 = %1037.1;
    (%1038, %1039)
  };
  %1040() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_4828() -> (Tensor[(12, 8, 10), float64],) {
  %1041 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1042 = %1041.0;
  (%1042,)
}

def @func_3147() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32]) {
  %1043 = @func_2214() /* ty=(Tensor[(3, 9, 6), float64],) */;
  %1044 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1045 = %1044.0;
  %1046 = cast(%1045, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %1047 = %1043.0;
  %1048 = log2(%1046) /* ty=Tensor[(12, 8, 10), float32] */;
  (%1047, %1048)
}

def @func_11653() -> Tensor[(12, 8, 10), float64] {
  @func_11651() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_2698() -> (Tensor[(960), float64],) {
  @func_2696() /* ty=(Tensor[(960), float64],) */
}

def @func_6433() -> Tensor[(13, 9, 7), float64] {
  @func_6431() /* ty=Tensor[(13, 9, 7), float64] */
}

def @func_14103() -> (Tensor[(12, 8, 10), float32], Tensor[(5, 6, 3), float32], Tensor[(90), float32], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  %1049 = @func_13183() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1050 = cast(meta[relay.Constant][35] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %1051 = reshape(%1050, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), float32] */;
  %1052 = @func_10915(%1051) /* ty=(Tensor[(5, 6, 3), float32],) */;
  %1053 = @func_11022() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1054 = cast(meta[relay.Constant][36] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1055 = reshape(%1054, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
  %1056 = @func_827(%1055) /* ty=(Tensor[(6, 14, 6), float64],) */;
  %1057 = %1049.1;
  %1058 = %1052.0;
  %1059 = %1053.1;
  %1060 = %1056.0;
  %1061 = @func_9066() /* ty=Tensor[(12, 8, 10), float64] */;
  %1062 = @func_8946() /* ty=Tensor[(960), float64] */;
  (%1057, %1058, meta[relay.Constant][35] /* ty=Tensor[(90), float32] */, %1059, %1060, meta[relay.Constant][36] /* ty=Tensor[(504), float64] */, %1061, %1062)
}

def @func_14287() -> (Tensor[(12, 8, 10), float32],) {
  %1065 = fn () -> (Tensor[(12, 8, 10), float32],) {
    %1063 = @func_7527() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %1064 = %1063.1;
    (%1064,)
  };
  %1065() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_10161(%var_10136: int8, %var_10137: Tensor[(6, 11, 16), int8]) -> Tensor[(6, 11, 16), int8] {
  %1066 = cast(%var_10136, dtype="int8") /* ty=int8 */;
  %1067 = cast(%var_10137, dtype="int8") /* ty=Tensor[(6, 11, 16), int8] */;
  multiply(%1066, %1067) /* ty=Tensor[(6, 11, 16), int8] */
}

def @func_13693() -> Tensor[(12, 8, 10), float32] {
  %1069 = fn () -> Tensor[(12, 8, 10), float32] {
    %1068 = @func_3089() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %1068.0
  };
  %1069() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_17820(%var_17818: Tensor[(16, 6, 11), int16], %var_17819: Tensor[(16, 6, 11), int16]) -> (Tensor[(16, 6, 11), int8],) {
  %1080 = fn (%var_17750: Tensor[(16, 6, 11), int16], %var_17751: Tensor[(16, 6, 11), int16]) -> (Tensor[(16, 6, 11), int8],) {
    %1070 = cast(%var_17751, dtype="bool") /* ty=Tensor[(16, 6, 11), bool] */;
    %1071 = shape_of(%var_17750, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1072 = cast(%var_17750, dtype="bool") /* ty=Tensor[(16, 6, 11), bool] */;
    %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1074 = greater(%1072, %1073) /* ty=Tensor[(16, 6, 11), bool] */;
    %1075 = cast(%1074, dtype="int8") /* ty=Tensor[(16, 6, 11), int8] */;
    %1076 = shape_of(%var_17751, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1077 = cast(%var_17751, dtype="int8") /* ty=Tensor[(16, 6, 11), int8] */;
    %1078 = dyn.reshape(%1075, %1076, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1079 = bitwise_and(%1077, %1078) /* ty=Tensor[(16, 6, 11), int8] */;
    (%1079,)
  };
  %1080(%var_17818, %var_17819) /* ty=(Tensor[(16, 6, 11), int8],) */
}

def @func_17125() -> (Tensor[(12, 2, 12), int16],) {
  %1088 = fn () -> (Tensor[(12, 2, 12), int16],) {
    %1081 = @func_15214() /* ty=(Tensor[(12, 2, 12), float64],) */;
    %1082 = %1081.0;
    %1083 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 2, 12), float64] */, dtype="int16") /* ty=Tensor[(12, 2, 12), int16] */;
    %1084 = shape_of(%1082, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1085 = cast(%1082, dtype="int16") /* ty=Tensor[(12, 2, 12), int16] */;
    %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1087 = bitwise_and(%1085, %1086) /* ty=Tensor[(12, 2, 12), int16] */;
    (%1087,)
  };
  %1088() /* ty=(Tensor[(12, 2, 12), int16],) */
}

def @func_4660() -> Tensor[(960), float64] {
  @func_4658() /* ty=Tensor[(960), float64] */
}

def @func_1910() -> Tensor[(12, 8, 10), float32] {
  %1090 = fn () -> Tensor[(12, 8, 10), float32] {
    %1089 = @func_1110() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1089.0
  };
  %1090() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_6094(%var_6041: Tensor[(9, 3, 2), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(9, 3, 2), bool], Tensor[(960), float64]) {
  %1091 = @func_5535() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1092 = %1091.1;
  %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1094 = reshape(%1093, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1095 = @func_331(%1094) /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1096 = @func_4828() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1097 = @func_4092() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1098 = cast(%var_6041, dtype="float32") /* ty=Tensor[(9, 3, 2), float32] */;
  %1099 = log10(%1098) /* ty=Tensor[(9, 3, 2), float32] */;
  %1100 = cast(%1099, dtype="float32") /* ty=Tensor[(9, 3, 2), float32] */;
  %1101 = acosh(%1100) /* ty=Tensor[(9, 3, 2), float32] */;
  %1102 = cast(%var_6041, dtype="bool") /* ty=Tensor[(9, 3, 2), bool] */;
  %1103 = shape_of(%1101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(%1101, dtype="bool") /* ty=Tensor[(9, 3, 2), bool] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1106 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1107 = %1095.0;
  %1108 = %1096.0;
  %1109 = %1097.0;
  %1110 = greater_equal(%1104, %1105) /* ty=Tensor[(9, 3, 2), bool] */;
  %1111 = %1106.0;
  (%1092, %1107, %1108, %1109, %1110, %1111)
}

def @func_18005(%var_18001: Tensor[(11, 7, 13), uint32]) -> Tensor[(11, 7, 13), uint32] {
  %1112 = cast(%var_18001, dtype="uint32") /* ty=Tensor[(11, 7, 13), uint32] */;
  %1113 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(11, 7, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1114 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 7, 13), uint32] */, dtype="uint32") /* ty=Tensor[(11, 7, 13), uint32] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%1114, %1115) /* ty=Tensor[(11, 7, 13), uint32] */
}

def @func_3737() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %1116 = @func_3089() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1117 = @func_1784() /* ty=(Tensor[(960), float64],) */;
  %1118 = @func_1798() /* ty=(Tensor[(960), float64],) */;
  %1119 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1120 = %1116.1;
  %1121 = %1117.0;
  %1122 = %1118.0;
  %1123 = %1119.1;
  (%1120, %1121, %1122, %1123)
}

def @func_12394() -> Tensor[(12, 8, 10), float32] {
  %1125 = fn () -> Tensor[(12, 8, 10), float32] {
    %1124 = @func_4332() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool], Tensor[(819), uint64]) */;
    %1124.1
  };
  %1125() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_15280(%var_15278: Tensor[(672), float32], %var_15279: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(672), float32], Tensor[(12, 8, 10), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(12, 8, 10), bool]) {
  %1142 = fn (%var_15223: Tensor[(672), float32], %var_15234: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(672), float32], Tensor[(12, 8, 10), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(12, 8, 10), bool]) {
    %1126 = cast(%var_15223, dtype="float32") /* ty=Tensor[(672), float32] */;
    %1127 = cast(%var_15223, dtype="float32") /* ty=Tensor[(672), float32] */;
    %1128 = reshape(%1126, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
    %1129 = reshape(%1127, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
    %1130 = @func_14866(%1128, %1129) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(7, 8, 12), float64]) */;
    %1131 = cast(%var_15234, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1132 = reshape(%1131, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %1133 = @func_6636(%1132) /* ty=(Tensor[(960), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
    %1134 = @func_4906() /* ty=Tensor[(960), float64] */;
    %1135 = cast(%1134, dtype="float32") /* ty=Tensor[(960), float32] */;
    %1136 = reshape(%1135, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
    %1137 = @func_1371(%1136) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), bool]) */;
    %1138 = %1130.0;
    %1139 = @func_6964() /* ty=Tensor[(12, 8, 10), float64] */;
    %1140 = %1133.1;
    %1141 = %1137.2;
    (%1134, %1138, %var_15223, %1139, %1140, %var_15234, %1141)
  };
  %1142(%var_15278, %var_15279) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(672), float32], Tensor[(12, 8, 10), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(12, 8, 10), bool]) */
}

def @func_16448() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  @func_16446() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_10637() -> (Tensor[(960), float64],) {
  %1143 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1144 = %1143.0;
  (%1144,)
}

def @func_2811() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %1149 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
    %1145 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1146 = @func_1754() /* ty=(Tensor[(960), float64],) */;
    %1147 = %1145.0;
    %1148 = %1146.0;
    (%1147, %1148)
  };
  %1149() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_852() -> (Tensor[(12, 8, 10), float32],) {
  %1152 = fn () -> (Tensor[(12, 8, 10), float32],) {
    %1150 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %1151 = %1150.0;
    (%1151,)
  };
  %1152() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_798(%var_790: Tensor[(12, 8, 10), float32]) -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) {
  %1153 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1154 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1155 = %1154.1;
  %1156 = cast(%var_790, dtype="int32") /* ty=Tensor[(12, 8, 10), int32] */;
  %1157 = shape_of(%1155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1158 = cast(%1155, dtype="int32") /* ty=Tensor[(12, 8, 10), int32] */;
  %1159 = dyn.reshape(%1156, %1157, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1160 = %1153.0;
  %1161 = logical_xor(%1158, %1159) /* ty=Tensor[(12, 8, 10), int32] */;
  (%1160, %1161)
}

def @func_1400() -> (Tensor[(960), float64],) {
  %1162 = @func_1211() /* ty=Tensor[(960), float64] */;
  (%1162,)
}

def @func_1892() -> (Tensor[(960), float64],) {
  @func_1890() /* ty=(Tensor[(960), float64],) */
}

def @func_12717() -> (Tensor[(960), float64],) {
  %1163 = @func_4906() /* ty=Tensor[(960), float64] */;
  (%1163,)
}

def @func_9863() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  @func_9861() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_12447(%var_12445: Tensor[(7, 8, 6), float64], %var_12446: Tensor[(7, 8, 6), float64]) -> (Tensor[(7, 8, 6), float64],) {
  @func_12443(%var_12445, %var_12446) /* ty=(Tensor[(7, 8, 6), float64],) */
}

def @func_9045() -> Tensor[(960), float64] {
  %1164 = @func_6856() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1164.0
}

def @func_8566() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  @func_8564() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_13376(%var_13371: Tensor[(12, 11, 8), float32]) -> (Tensor[(12, 11, 8), float32],) {
  %1165 = cast(%var_13371, dtype="float32") /* ty=Tensor[(12, 11, 8), float32] */;
  %1166 = exp(%1165) /* ty=Tensor[(12, 11, 8), float32] */;
  (%1166,)
}

def @func_10993() -> (Tensor[(960), float64],) {
  @func_10991() /* ty=(Tensor[(960), float64],) */
}

def @func_61(%var_52: Tensor[(12, 8, 10), float64]) -> (Tensor[(12, 8, 10), float64],) {
  %1167 = cast(%var_52, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1168 = cos(%1167) /* ty=Tensor[(12, 8, 10), float64] */;
  (%1168,)
}

def @func_12524() -> (Tensor[(12, 8, 10), float32],) {
  @func_12522() /* ty=(Tensor[(12, 8, 10), float32],) */
}

def @func_8564() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1169 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1170 = @func_3611() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1171 = %1169.0;
  %1172 = %1170.0;
  (%1171, %1172)
}

def @func_4892(%var_4889: Tensor[(8, 5, 7), bool], %var_4890: float64, %var_4891: Tensor[(480), float64]) -> (Tensor[(8, 5, 7), bool], Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  @func_4887(%var_4889, %var_4890, %var_4891) /* ty=(Tensor[(8, 5, 7), bool], Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_12522() -> (Tensor[(12, 8, 10), float32],) {
  %1173 = @func_5229() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1174 = %1173.0;
  (%1174,)
}

def @func_7085() -> Tensor[(960), float64] {
  @func_7083() /* ty=Tensor[(960), float64] */
}

def @func_2096() -> Tensor[(960), float64] {
  %1176 = fn () -> Tensor[(960), float64] {
    %1175 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1175.1
  };
  %1176() /* ty=Tensor[(960), float64] */
}

def @func_3739() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_13989(%var_13988: Tensor[(5, 10, 8), float32]) -> Tensor[(5, 10, 8), float32] {
  %1178 = fn (%var_13978: Tensor[(5, 10, 8), float32]) -> Tensor[(5, 10, 8), float32] {
    %1177 = cast(%var_13978, dtype="float32") /* ty=Tensor[(5, 10, 8), float32] */;
    sinh(%1177) /* ty=Tensor[(5, 10, 8), float32] */
  };
  %1178(%var_13988) /* ty=Tensor[(5, 10, 8), float32] */
}

def @func_16742() -> Tensor[(960), float64] {
  %1179 = @func_11179() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1179.0
}

def @func_9720(%var_9713: Tensor[(1650), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(15, 10, 11), float32], Tensor[(1650), float64]) {
  %1180 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1181 = cast(%var_9713, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1182 = reshape(%1181, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %1183 = @func_9029(%1182) /* ty=(Tensor[(15, 10, 11), float32],) */;
  %1184 = cast(%var_9713, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %1185 = %1180.0;
  %1186 = %1183.0;
  %1187 = acosh(%1184) /* ty=Tensor[(1650), float64] */;
  (%1185, %1186, %1187)
}

def @func_13298() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  @func_13296() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_6431() -> Tensor[(13, 9, 7), float64] {
  %1188 = @func_2540() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) */;
  %1188.1
}

def @func_13537() -> (Tensor[(960), float64],) {
  %1191 = fn () -> (Tensor[(960), float64],) {
    %1189 = @func_9683() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1190 = %1189.0;
    (%1190,)
  };
  %1191() /* ty=(Tensor[(960), float64],) */
}

def @func_14411() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 12, 11), int32]) {
  %1192 = @func_3114() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) */;
  %1193 = @func_4104() /* ty=(Tensor[(12, 12, 11), int32],) */;
  %1194 = %1192.1;
  %1195 = %1193.0;
  (%1194, %1195)
}

def @func_8645() -> Tensor[(12, 8, 10), float32] {
  @func_8643() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_3611() -> (Tensor[(12, 8, 10), float32],) {
  %1196 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1197 = %1196.1;
  (%1197,)
}

def @func_14807() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1201 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
    %1198 = @func_3885() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %1199 = @func_8643() /* ty=Tensor[(12, 8, 10), float32] */;
    %1200 = %1198.2;
    (%1199, %1200)
  };
  %1201() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_15193(%var_15188: Tensor[(5, 15, 16), int16], %var_15189: Tensor[(5, 15, 16), int16]) -> Tensor[(5, 15, 16), bool] {
  %1202 = cast(%var_15189, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
  %1203 = shape_of(%var_15188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1204 = cast(%var_15188, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
  %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1204, %1205) /* ty=Tensor[(5, 15, 16), bool] */
}

def @func_16744() -> Tensor[(960), float64] {
  @func_16742() /* ty=Tensor[(960), float64] */
}

def @func_13109() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], float64, Tensor[(480), float64], Tensor[(1, 1120), bool], Tensor[(960), float64], Tensor[(960), float64]) {
  @func_13107() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], float64, Tensor[(480), float64], Tensor[(1, 1120), bool], Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_17010() -> (Tensor[(12, 8, 10), float32],) {
  %1206 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1206,)
}

def @func_14763() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  @func_14761() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_13637() -> Tensor[(12, 8, 10), float32] {
  %1207 = @func_8920() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1207.2
}

def @func_17456(%var_17453: Tensor[(144), float64], %var_17454: Tensor[(2, 252), float64], %var_17455: Tensor[(2, 252), float64]) -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(6, 2, 12), float64], Tensor[(144), float64], Tensor[(2, 252), float64]) {
  @func_17451(%var_17453, %var_17454, %var_17455) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(6, 2, 12), float64], Tensor[(144), float64], Tensor[(2, 252), float64]) */
}

def @func_10528() -> (Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1208 = @func_2540() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) */;
  %1209 = @func_3885() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1210 = @func_8999() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %1211 = @func_8870() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1212 = @func_3680() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1213 = %1208.1;
  %1214 = %1209.0;
  %1215 = %1210.0;
  %1216 = %1211.0;
  %1217 = %1212.0;
  (%1213, %1214, %1215, %1216, %1217)
}

def @func_5094() -> (Tensor[(960), float64],) {
  @func_5092() /* ty=(Tensor[(960), float64],) */
}

def @func_15146() -> (Tensor[(960), float64],) {
  %1218 = @func_1830() /* ty=(Tensor[(960), float64],) */;
  %1219 = %1218.0;
  (%1219,)
}

def @func_12626() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1226 = fn () -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
    %1220 = @func_6607() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
    %1221 = @func_5086() /* ty=(Tensor[(15, 15, 15), bool], Tensor[(960), float64]) */;
    %1222 = @func_3836() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %1223 = %1220.1;
    %1224 = %1221.1;
    %1225 = %1222.0;
    (%1223, %1224, %1225)
  };
  %1226() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_10442() -> Tensor[(12, 8, 10), float32] {
  @func_10440() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_6639(%var_6637: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504), float64], Tensor[(960), float64]) {
  @func_6636(%var_6637) /* ty=(Tensor[(960), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504), float64], Tensor[(960), float64]) */
}

def @func_3363() -> (Tensor[(12, 8, 10), float64],) {
  %1228 = fn () -> (Tensor[(12, 8, 10), float64],) {
    %1227 = @func_2059() /* ty=Tensor[(12, 8, 10), float64] */;
    (%1227,)
  };
  %1228() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_14573() -> (Tensor[(12, 8, 10), float64],) {
  %1231 = fn () -> (Tensor[(12, 8, 10), float64],) {
    %1229 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %1230 = %1229.0;
    (%1230,)
  };
  %1231() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_7309() -> Tensor[(12, 8, 10), float64] {
  %1232 = @func_5807() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1232.0
}

def @func_10595() -> Tensor[(960), float64] {
  @func_9045() /* ty=Tensor[(960), float64] */
}

def @func_4811() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64]) {
  @func_4809() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */
}

def @func_8402() -> Tensor[(960), float64] {
  %1233 = @func_1890() /* ty=(Tensor[(960), float64],) */;
  %1233.0
}

def @func_2541() -> (Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) {
  %1248 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) {
    %1234 = cast(meta[relay.Constant][39] /* ty=Tensor[(819), uint64] */, dtype="uint64") /* ty=Tensor[(819), uint64] */;
    %1235 = cast(meta[relay.Constant][39] /* ty=Tensor[(819), uint64] */, dtype="uint64") /* ty=Tensor[(819), uint64] */;
    %1236 = reshape(%1234, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
    %1237 = reshape(%1235, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
    %1238 = @func_2121(%1236, %1237) /* ty=(Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) */;
    %1239 = %1238.1;
    %1240 = cast(meta[relay.Constant][39] /* ty=Tensor[(819), uint64] */, dtype="int8") /* ty=Tensor[(819), int8] */;
    %1241 = shape_of(%1239, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1242 = cast(%1239, dtype="int8") /* ty=Tensor[(13, 9, 7), int8] */;
    %1243 = dyn.reshape(%1240, %1241, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1244 = bitwise_xor(%1242, %1243) /* ty=Tensor[(13, 9, 7), int8] */;
    %1245 = cast(%1244, dtype="float64") /* ty=Tensor[(13, 9, 7), float64] */;
    %1246 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
    %1247 = cos(%1245) /* ty=Tensor[(13, 9, 7), float64] */;
    (%1246, %1247)
  };
  %1248() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) */
}

def @func_13497(%var_13483: Tensor[(504), float64]) -> (Tensor[(12, 8, 10), float32], Tensor[(5, 3, 2), float32], Tensor[(504), float64], Tensor[(504), float64], Tensor[(960), float64]) {
  %1249 = @func_2810() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1250 = @func_6687() /* ty=(Tensor[(5, 3, 2), float32], Tensor[(960), float64]) */;
  %1251 = cast(%var_13483, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1252 = reshape(%1251, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1253 = @func_2442(%1252) /* ty=(Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) */;
  %1254 = %1249.0;
  %1255 = %1250.0;
  %1256 = %1253.2;
  %1257 = @func_5006() /* ty=Tensor[(960), float64] */;
  (%1254, %1255, %1256, %var_13483, %1257)
}

def @func_3041() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1262 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
    %1258 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %1259 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %1260 = %1258.0;
    %1261 = %1259.0;
    (%1260, %1261)
  };
  %1262() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_14869(%var_14867: Tensor[(7, 8, 12), float32], %var_14868: Tensor[(7, 8, 12), float32]) -> (Tensor[(12, 8, 10), float64], Tensor[(7, 8, 12), float64]) {
  %1272 = fn (%var_14834: Tensor[(7, 8, 12), float32], %var_14835: Tensor[(7, 8, 12), float32]) -> (Tensor[(12, 8, 10), float64], Tensor[(7, 8, 12), float64]) {
    %1263 = @func_10218() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */;
    %1264 = cast(%var_14835, dtype="float32") /* ty=Tensor[(7, 8, 12), float32] */;
    %1265 = shape_of(%var_14834, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1266 = cast(%var_14834, dtype="float32") /* ty=Tensor[(7, 8, 12), float32] */;
    %1267 = dyn.reshape(%1264, %1265, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1268 = mod(%1266, %1267) /* ty=Tensor[(7, 8, 12), float32] */;
    %1269 = cast(%1268, dtype="float64") /* ty=Tensor[(7, 8, 12), float64] */;
    %1270 = %1263.0;
    %1271 = asinh(%1269) /* ty=Tensor[(7, 8, 12), float64] */;
    (%1270, %1271)
  };
  %1272(%var_14867, %var_14868) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(7, 8, 12), float64]) */
}

def @func_2382() -> (Tensor[(960), float64], Tensor[(960), float64]) {
  %1276 = fn () -> (Tensor[(960), float64], Tensor[(960), float64]) {
    %1273 = @func_1798() /* ty=(Tensor[(960), float64],) */;
    %1274 = @func_2095() /* ty=Tensor[(960), float64] */;
    %1275 = %1273.0;
    (%1274, %1275)
  };
  %1276() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_12861() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1277 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1278 = @func_851() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1279 = %1277.0;
  %1280 = %1278.0;
  (%1279, %1280)
}

def @func_14185() -> Tensor[(12, 8, 10), float32] {
  @func_14183() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_6857() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %1285 = fn () -> (Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
    %1281 = @func_1890() /* ty=(Tensor[(960), float64],) */;
    %1282 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %1283 = %1281.0;
    %1284 = %1282.1;
    (%1283, %1284)
  };
  %1285() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_2662() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %1290 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
    %1286 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1287 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1288 = %1286.0;
    %1289 = %1287.1;
    (%1288, %1289)
  };
  %1290() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_15012() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
  %1294 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64]) {
    %1291 = @func_13209() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1292 = @func_9925() /* ty=Tensor[(12, 8, 10), float32] */;
    %1293 = %1291.1;
    (%1292, %1293)
  };
  %1294() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */
}

def @func_14988() -> (Tensor[(12, 8, 10), float64], Tensor[(14, 2, 10), float64], Tensor[(280), float64], Tensor[(960), uint16], Tensor[(960), float64], Tensor[(960), float64], int8) {
  %1308 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(14, 2, 10), float64], Tensor[(280), float64], Tensor[(960), uint16], Tensor[(960), float64], Tensor[(960), float64], int8) {
    %1295 = cast(meta[relay.Constant][40] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %1296 = reshape(%1295, newshape=[14, 2, 10]) /* ty=Tensor[(14, 2, 10), float64] */;
    %1297 = @func_9117(%1296) /* ty=(Tensor[(14, 2, 10), float64],) */;
    %1298 = @func_12037() /* ty=(Tensor[(960), uint16], Tensor[(960), uint16]) */;
    %1299 = @func_9683() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1300 = cast(meta[relay.Constant][41] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1301 = reshape(%1300, newshape=[]) /* ty=int8 */;
    %1302 = @func_11327(%1301) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(6, 11, 7), int8], int8, Tensor[(462), int8], Tensor[(960), float64]) */;
    %1303 = @func_9066() /* ty=Tensor[(12, 8, 10), float64] */;
    %1304 = %1297.0;
    %1305 = %1298.0;
    %1306 = %1299.1;
    %1307 = %1302.9;
    (%1303, %1304, meta[relay.Constant][40] /* ty=Tensor[(280), float64] */, %1305, %1306, %1307, meta[relay.Constant][41] /* ty=int8 */)
  };
  %1308() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(14, 2, 10), float64], Tensor[(280), float64], Tensor[(960), uint16], Tensor[(960), float64], Tensor[(960), float64], int8) */
}

def @func_2442(%var_2427: Tensor[(504), float64]) -> (Tensor[(12, 8, 10), int16], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64]) {
  %1309 = @func_1514() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1310 = %1309.0;
  %1311 = cast(%1310, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1312 = reshape(%1311, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1313 = @func_61(%1312) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1314 = %1313.0;
  %1315 = cast(%1314, dtype="int16") /* ty=Tensor[(12, 8, 10), int16] */;
  %1316 = shape_of(%1310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1317 = cast(%1310, dtype="int16") /* ty=Tensor[(12, 8, 10), int16] */;
  %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1319 = cast(%var_2427, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1320 = reshape(%1319, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
  %1321 = @func_827(%1320) /* ty=(Tensor[(6, 14, 6), float64],) */;
  %1322 = cast(%1314, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
  %1323 = reshape(%1322, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
  %1324 = @func_798(%1323) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) */;
  %1325 = multiply(%1317, %1318) /* ty=Tensor[(12, 8, 10), int16] */;
  %1326 = %1321.0;
  %1327 = %1324.0;
  (%1325, %1326, %var_2427, %1327)
}

def @func_2668() -> (Tensor[(12, 8, 10), float64],) {
  %1330 = fn () -> (Tensor[(12, 8, 10), float64],) {
    %1328 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %1329 = %1328.2;
    (%1329,)
  };
  %1330() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_2186() -> Tensor[(15, 15, 15), bool] {
  %1337 = fn () -> Tensor[(15, 15, 15), bool] {
    %1331 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 15), float64] */;
    %1332 = atan(%1331) /* ty=Tensor[(15, 15, 15), float64] */;
    %1333 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(15, 15, 15), bool] */;
    %1334 = shape_of(%1332, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1335 = cast(%1332, dtype="bool") /* ty=Tensor[(15, 15, 15), bool] */;
    %1336 = dyn.reshape(%1333, %1334, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1335, %1336) /* ty=Tensor[(15, 15, 15), bool] */
  };
  %1337() /* ty=Tensor[(15, 15, 15), bool] */
}

def @func_12351() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  @func_12349() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_6919() -> (Tensor[(12, 8, 10), float64],) {
  %1340 = fn () -> (Tensor[(12, 8, 10), float64],) {
    %1338 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %1339 = %1338.1;
    (%1339,)
  };
  %1340() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_12443(%var_12432: Tensor[(7, 8, 6), float64], %var_12433: Tensor[(7, 8, 6), float64]) -> (Tensor[(7, 8, 6), float64],) {
  %1341 = cast(%var_12433, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %1342 = shape_of(%var_12432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1343 = cast(%var_12432, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %1344 = dyn.reshape(%1341, %1342, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1345 = floor_divide(%1343, %1344) /* ty=Tensor[(7, 8, 6), float64] */;
  (%1345,)
}

def @func_13221() -> Tensor[(12, 8, 10), float32] {
  %1347 = fn () -> Tensor[(12, 8, 10), float32] {
    %1346 = @func_2992() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %1346.0
  };
  %1347() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_8676() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64]) {
  %1352 = fn () -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64]) {
    %1348 = @func_2214() /* ty=(Tensor[(3, 9, 6), float64],) */;
    %1349 = @func_3114() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(1, 504), float64]) */;
    %1350 = %1348.0;
    %1351 = %1349.1;
    (%1350, %1351)
  };
  %1352() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_14232() -> Tensor[(12, 8, 10), float64] {
  %1354 = fn () -> Tensor[(12, 8, 10), float64] {
    %1353 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %1353.3
  };
  %1354() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_6617(%var_6610: int8, %var_6611: Tensor[(6, 11, 7), int8]) -> (Tensor[(6, 11, 7), int8],) {
  %1355 = cast(%var_6610, dtype="int8") /* ty=int8 */;
  %1356 = cast(%var_6611, dtype="int8") /* ty=Tensor[(6, 11, 7), int8] */;
  %1357 = left_shift(%1355, %1356) /* ty=Tensor[(6, 11, 7), int8] */;
  (%1357,)
}

def @func_13336() -> (Tensor[(12, 8, 10), float64],) {
  @func_13334() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_4636() -> Tensor[(960), float64] {
  %1358 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
  %1358.0
}

def @func_2561() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1362 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
    %1359 = @func_2540() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(13, 9, 7), float64]) */;
    %1360 = @func_1821() /* ty=Tensor[(12, 8, 10), float32] */;
    %1361 = %1359.0;
    (%1360, %1361)
  };
  %1362() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_5808() -> (Tensor[(12, 8, 10), float64],) {
  %1365 = fn () -> (Tensor[(12, 8, 10), float64],) {
    %1363 = @func_4961() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %1364 = %1363.2;
    (%1364,)
  };
  %1365() /* ty=(Tensor[(12, 8, 10), float64],) */
}

def @func_18008(%var_18006: Tensor[(11, 7, 13), uint32]) -> Tensor[(11, 7, 13), uint32] {
  @func_18005(%var_18006) /* ty=Tensor[(11, 7, 13), uint32] */
}

def @func_11047() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %1366 = @func_3611() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1367 = @func_4545() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
  %1368 = %1366.0;
  %1369 = %1367.1;
  (%1368, %1369)
}

def @func_9991() -> Tensor[(16, 3, 5), float32] {
  %1371 = fn () -> Tensor[(16, 3, 5), float32] {
    %1370 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 5), float32] */;
    cos(%1370) /* ty=Tensor[(16, 3, 5), float32] */
  };
  %1371() /* ty=Tensor[(16, 3, 5), float32] */
}

def @func_413() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_11049() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  @func_11047() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_11900() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(15, 10, 11), float32], Tensor[(1650), float32]) {
  %1372 = @func_5092() /* ty=(Tensor[(960), float64],) */;
  %1373 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1374 = @func_3362() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1375 = @func_7914() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1376 = cast(meta[relay.Constant][44] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1377 = reshape(%1376, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float32] */;
  %1378 = @func_9029(%1377) /* ty=(Tensor[(15, 10, 11), float32],) */;
  %1379 = %1372.0;
  %1380 = %1373.0;
  %1381 = @func_5455() /* ty=Tensor[(12, 8, 10), float32] */;
  %1382 = %1374.0;
  %1383 = %1375.0;
  %1384 = %1378.0;
  (%1379, %1380, %1381, %1382, %1383, %1384, meta[relay.Constant][44] /* ty=Tensor[(1650), float32] */)
}

def @func_5006() -> Tensor[(960), float64] {
  %1385 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
  %1385.0
}

def @func_9593() -> Tensor[(14, 7, 4), float64] {
  %1387 = fn () -> Tensor[(14, 7, 4), float64] {
    %1386 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 4), float64] */;
    log2(%1386) /* ty=Tensor[(14, 7, 4), float64] */
  };
  %1387() /* ty=Tensor[(14, 7, 4), float64] */
}

def @func_6484(%var_6483: Tensor[(1, 54), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 54), float32]) {
  %1397 = fn (%var_6465: Tensor[(1, 54), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 54), float32]) {
    %1388 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
    %1389 = cast(%1388, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
    %1390 = reshape(%1389, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
    %1391 = @func_331(%1390) /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1392 = cast(%var_6465, dtype="float32") /* ty=Tensor[(1, 54), float32] */;
    %1393 = reshape(%1392, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), float32] */;
    %1394 = @func_6094(%1393) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(9, 3, 2), bool], Tensor[(960), float64]) */;
    %1395 = %1391.0;
    %1396 = %1394.1;
    (%1388, %1395, %1396, %var_6465)
  };
  %1397(%var_6483) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 54), float32]) */
}

def @func_10072() -> (Tensor[(960), float64],) {
  %1398 = @func_884() /* ty=(Tensor[(960), float64],) */;
  %1399 = %1398.0;
  (%1399,)
}

def @func_10220() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) {
  @func_10218() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_12822() -> (Tensor[(960), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %1409 = fn () -> (Tensor[(960), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
    %1400 = cast(meta[relay.Constant][46] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
    %1401 = reshape(%1400, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
    %1402 = @func_827(%1401) /* ty=(Tensor[(6, 14, 6), float64],) */;
    %1403 = @func_7527() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %1404 = @func_8501() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1405 = @func_8402() /* ty=Tensor[(960), float64] */;
    %1406 = %1402.0;
    %1407 = %1403.2;
    %1408 = %1404.0;
    (%1405, %1406, meta[relay.Constant][46] /* ty=Tensor[(504), float64] */, %1407, %1408)
  };
  %1409() /* ty=(Tensor[(960), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_13500(%var_13498: Tensor[(504), float64]) -> (Tensor[(12, 8, 10), float32], Tensor[(5, 3, 2), float32], Tensor[(504), float64], Tensor[(504), float64], Tensor[(960), float64]) {
  @func_13497(%var_13498) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(5, 3, 2), float32], Tensor[(504), float64], Tensor[(504), float64], Tensor[(960), float64]) */
}

def @func_16031(%var_16029: Tensor[(1, 208), float64]) -> (Tensor[(960), float64], Tensor[(4, 13, 4), float64], Tensor[(1, 208), float64], Tensor[(960), float64]) {
  @func_16028(%var_16029) /* ty=(Tensor[(960), float64], Tensor[(4, 13, 4), float64], Tensor[(1, 208), float64], Tensor[(960), float64]) */
}

def @func_12098() -> (Tensor[(960), float64], Tensor[(12, 8, 10), int16]) {
  @func_12096() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int16]) */
}

def @func_1799() -> (Tensor[(960), float64],) {
  %1412 = fn () -> (Tensor[(960), float64],) {
    %1410 = @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */;
    %1411 = %1410.0;
    (%1411,)
  };
  %1412() /* ty=(Tensor[(960), float64],) */
}

def @func_7696(%var_7694: uint64, %var_7695: Tensor[(819), uint64]) -> (Tensor[(13, 6, 1), bool], Tensor[(12, 8, 10), float64], Tensor[(819), uint64], Tensor[(12, 8, 10), float64]) {
  %1422 = fn (%var_7661: uint64, %var_7689: Tensor[(819), uint64]) -> (Tensor[(13, 6, 1), bool], Tensor[(12, 8, 10), float64], Tensor[(819), uint64], Tensor[(12, 8, 10), float64]) {
    %1413 = cast(%var_7661, dtype="bool") /* ty=bool */;
    %1414 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 6, 1), uint64] */, dtype="bool") /* ty=Tensor[(13, 6, 1), bool] */;
    %1415 = cast(%var_7689, dtype="uint64") /* ty=Tensor[(819), uint64] */;
    %1416 = reshape(%1415, newshape=[819]) /* ty=Tensor[(819), uint64] */;
    %1417 = @func_4731(%1416) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(13, 9, 7), uint64], Tensor[(819), uint64]) */;
    %1418 = @func_5807() /* ty=(Tensor[(12, 8, 10), float64],) */;
    %1419 = not_equal(%1413, %1414) /* ty=Tensor[(13, 6, 1), bool] */;
    %1420 = %1417.0;
    %1421 = %1418.0;
    (%1419, %1420, %var_7689, %1421)
  };
  %1422(%var_7694, %var_7695) /* ty=(Tensor[(13, 6, 1), bool], Tensor[(12, 8, 10), float64], Tensor[(819), uint64], Tensor[(12, 8, 10), float64]) */
}

def @func_2685() -> (Tensor[(960), float64],) {
  %1425 = fn () -> (Tensor[(960), float64],) {
    %1423 = @func_884() /* ty=(Tensor[(960), float64],) */;
    %1424 = %1423.0;
    (%1424,)
  };
  %1425() /* ty=(Tensor[(960), float64],) */
}

def @func_1849() -> Tensor[(12, 8, 10), float32] {
  %1429 = fn () -> Tensor[(12, 8, 10), float32] {
    %1426 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1427 = %1426.0;
    %1428 = cast(%1427, dtype="float32") /* ty=Tensor[(12, 8, 10), float32] */;
    asin(%1428) /* ty=Tensor[(12, 8, 10), float32] */
  };
  %1429() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_13379(%var_13377: Tensor[(12, 11, 8), float32]) -> (Tensor[(12, 11, 8), float32],) {
  @func_13376(%var_13377) /* ty=(Tensor[(12, 11, 8), float32],) */
}

def @func_3205() -> Tensor[(960), float64] {
  %1431 = fn () -> Tensor[(960), float64] {
    %1430 = @func_2661() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %1430.1
  };
  %1431() /* ty=Tensor[(960), float64] */
}

def @func_2833() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  @func_2831() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_6415() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), int16], Tensor[(960), float64]) {
  %1432 = @func_2214() /* ty=(Tensor[(3, 9, 6), float64],) */;
  %1433 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1434 = %1432.0;
  %1435 = @func_3979() /* ty=Tensor[(12, 8, 10), int16] */;
  %1436 = %1433.0;
  (%1434, %1435, %1436)
}

def @func_5944() -> Tensor[(960), float64] {
  @func_5942() /* ty=Tensor[(960), float64] */
}

def @func_5787() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  @func_5785() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_885() -> (Tensor[(960), float64],) {
  %1439 = fn () -> (Tensor[(960), float64],) {
    %1437 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1438 = %1437.0;
    (%1438,)
  };
  %1439() /* ty=(Tensor[(960), float64],) */
}

def @func_9926() -> Tensor[(12, 8, 10), float32] {
  %1440 = fn () -> Tensor[(12, 8, 10), float32] {
    @func_2131() /* ty=Tensor[(12, 8, 10), float32] */
  };
  %1440() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_7083() -> Tensor[(960), float64] {
  @func_6526() /* ty=Tensor[(960), float64] */
}

def @func_4546() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %1445 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
    %1441 = @func_3611() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1442 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %1443 = %1441.0;
    %1444 = %1442.0;
    (%1443, %1444)
  };
  %1445() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */
}

def @func_4333() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool], Tensor[(819), uint64]) {
  %1458 = fn () -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool], Tensor[(819), uint64]) {
    %1446 = @func_2696() /* ty=(Tensor[(960), float64],) */;
    %1447 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %1448 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1449 = cast(meta[relay.Constant][48] /* ty=Tensor[(819), uint64] */, dtype="uint64") /* ty=Tensor[(819), uint64] */;
    %1450 = cast(meta[relay.Constant][48] /* ty=Tensor[(819), uint64] */, dtype="uint64") /* ty=Tensor[(819), uint64] */;
    %1451 = reshape(%1449, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
    %1452 = reshape(%1450, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
    %1453 = @func_2121(%1451, %1452) /* ty=(Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) */;
    %1454 = %1446.0;
    %1455 = %1447.0;
    %1456 = %1448.0;
    %1457 = %1453.3;
    (%1454, %1455, %1456, %1457, meta[relay.Constant][48] /* ty=Tensor[(819), uint64] */)
  };
  %1458() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool], Tensor[(819), uint64]) */
}

def @func_6702() -> (Tensor[(960), uint16],) {
  @func_6700() /* ty=(Tensor[(960), uint16],) */
}

def @func_6272() -> Tensor[(12, 8, 10), float32] {
  %1459 = fn () -> Tensor[(12, 8, 10), float32] {
    @func_1909() /* ty=Tensor[(12, 8, 10), float32] */
  };
  %1459() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_2214() -> (Tensor[(3, 9, 6), float64],) {
  %1460 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1461 = %1460.0;
  (%1461,)
}

def @func_4731(%var_4728: Tensor[(819), uint64]) -> (Tensor[(12, 8, 10), float64], Tensor[(13, 9, 7), uint64], Tensor[(819), uint64]) {
  %1462 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1463 = cast(%var_4728, dtype="uint64") /* ty=Tensor[(819), uint64] */;
  %1464 = cast(%var_4728, dtype="uint64") /* ty=Tensor[(819), uint64] */;
  %1465 = reshape(%1463, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
  %1466 = reshape(%1464, newshape=[13, 9, 7]) /* ty=Tensor[(13, 9, 7), uint64] */;
  %1467 = @func_2121(%1465, %1466) /* ty=(Tensor[(13, 9, 7), uint64], Tensor[(13, 9, 7), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), bool]) */;
  %1468 = %1462.0;
  %1469 = %1467.0;
  (%1468, %1469, %var_4728)
}

def @func_5536() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1477 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
    %1470 = @func_2582() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %1471 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1472 = @func_1609() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1473 = %1470.0;
    %1474 = %1471.0;
    %1475 = %1472.1;
    %1476 = @func_2131() /* ty=Tensor[(12, 8, 10), float32] */;
    (%1473, %1474, %1475, %1476)
  };
  %1477() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_3886() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1484 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
    %1478 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %1479 = @func_1268() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %1480 = @func_2810() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %1481 = %1478.1;
    %1482 = %1479.0;
    %1483 = %1480.0;
    (%1481, %1482, %1483)
  };
  %1484() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_8359() -> Tensor[(12, 8, 10), float32] {
  %1486 = fn () -> Tensor[(12, 8, 10), float32] {
    %1485 = @func_5229() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %1485.1
  };
  %1486() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_1678() -> (Tensor[(960), float64], Tensor[(12, 8, 10), int32]) {
  %1487 = @func_275() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
  %1488 = %1487.2;
  %1489 = cast(%1488, dtype="float32") /* ty=Tensor[(960), float32] */;
  %1490 = reshape(%1489, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float32] */;
  %1491 = @func_798(%1490) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), int32]) */;
  %1492 = %1491.1;
  (%1488, %1492)
}

def @func_5860() -> Tensor[(960), float64] {
  %1493 = @func_4809() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %1493.1
}

def @func_5087() -> (Tensor[(15, 15, 15), bool], Tensor[(960), float64]) {
  %1496 = fn () -> (Tensor[(15, 15, 15), bool], Tensor[(960), float64]) {
    %1494 = @func_2185() /* ty=Tensor[(15, 15, 15), bool] */;
    %1495 = @func_4636() /* ty=Tensor[(960), float64] */;
    (%1494, %1495)
  };
  %1496() /* ty=(Tensor[(15, 15, 15), bool], Tensor[(960), float64]) */
}

def @func_2216() -> (Tensor[(3, 9, 6), float64],) {
  @func_2214() /* ty=(Tensor[(3, 9, 6), float64],) */
}

def @func_7551() -> Tensor[(960), float64] {
  %1497 = fn () -> Tensor[(960), float64] {
    @func_5942() /* ty=Tensor[(960), float64] */
  };
  %1497() /* ty=Tensor[(960), float64] */
}

def @func_4710() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64]) {
  %1498 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1499 = @func_3147() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32]) */;
  %1500 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 504), float64] */, dtype="float64") /* ty=Tensor[(1, 504), float64] */;
  %1501 = reshape(%1500, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1502 = @func_1447(%1501) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64]) */;
  %1503 = %1498.1;
  %1504 = %1499.1;
  %1505 = %1502.1;
  (%1503, %1504, %1505, meta[relay.Constant][49] /* ty=Tensor[(1, 504), float64] */)
}

def @func_6636(%var_6626: Tensor[(144), float64]) -> (Tensor[(960), float64], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504), float64], Tensor[(960), float64]) {
  %1506 = @func_4809() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %1507 = cast(%var_6626, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1508 = cast(meta[relay.Constant][50] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1509 = reshape(%1507, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %1510 = reshape(%1508, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1511 = @func_6312(%1509, %1510) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %1512 = @func_1400() /* ty=(Tensor[(960), float64],) */;
  %1513 = %1506.1;
  %1514 = %1511.2;
  %1515 = %1512.0;
  (%1513, %1514, %var_6626, meta[relay.Constant][50] /* ty=Tensor[(504), float64] */, %1515)
}

def @func_9149(%var_9125: Tensor[(4, 13, 4), float64]) -> Tensor[(4, 13, 4), float64] {
  %1516 = cast(%var_9125, dtype="float64") /* ty=Tensor[(4, 13, 4), float64] */;
  log10(%1516) /* ty=Tensor[(4, 13, 4), float64] */
}

def @func_11329(%var_11328: int8) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(6, 11, 7), int8], int8, Tensor[(462), int8], Tensor[(960), float64]) {
  %1534 = fn (%var_11286: int8) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(6, 11, 7), int8], int8, Tensor[(462), int8], Tensor[(960), float64]) {
    %1517 = @func_10072() /* ty=(Tensor[(960), float64],) */;
    %1518 = @func_2264() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
    %1519 = @func_2871() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1520 = cast(%var_11286, dtype="int8") /* ty=int8 */;
    %1521 = cast(meta[relay.Constant][51] /* ty=Tensor[(462), int8] */, dtype="int8") /* ty=Tensor[(462), int8] */;
    %1522 = reshape(%1520, newshape=[]) /* ty=int8 */;
    %1523 = reshape(%1521, newshape=[6, 11, 7]) /* ty=Tensor[(6, 11, 7), int8] */;
    %1524 = @func_6617(%1522, %1523) /* ty=(Tensor[(6, 11, 7), int8],) */;
    %1525 = @func_2684() /* ty=(Tensor[(960), float64],) */;
    %1526 = %1517.0;
    %1527 = %1518.2;
    %1528 = @func_8358() /* ty=Tensor[(12, 8, 10), float32] */;
    %1529 = @func_7336() /* ty=Tensor[(960), float64] */;
    %1530 = %1519.0;
    %1531 = @func_8298() /* ty=Tensor[(960), float64] */;
    %1532 = %1524.0;
    %1533 = %1525.0;
    (%1526, %1527, %1528, %1529, %1530, %1531, %1532, %var_11286, meta[relay.Constant][51] /* ty=Tensor[(462), int8] */, %1533)
  };
  %1534(%var_11328) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(6, 11, 7), int8], int8, Tensor[(462), int8], Tensor[(960), float64]) */
}

def @func_9408() -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), int16]) {
  %1540 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), int16]) {
    %1535 = @func_3737() /* ty=(Tensor[(960), float64], Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
    %1536 = @func_7302() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
    %1537 = @func_2131() /* ty=Tensor[(12, 8, 10), float32] */;
    %1538 = %1535.2;
    %1539 = %1536.0;
    (%1537, %1538, %1539)
  };
  %1540() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64], Tensor[(12, 8, 10), int16]) */
}

def @func_571() -> (Tensor[(12, 8, 10), float32],) {
  %1541 = @func_345() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1541,)
}

def @func_7885() -> (Tensor[(12, 8, 10), float32], Tensor[(504), float64], Tensor[(144), float64], Tensor[(504, 1), float32]) {
  %1542 = @func_4410() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1543 = cast(meta[relay.Constant][52] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1544 = cast(meta[relay.Constant][53] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %1545 = reshape(%1543, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %1546 = reshape(%1544, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1547 = @func_6312(%1545, %1546) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %1548 = cast(meta[relay.Constant][53] /* ty=Tensor[(504, 1), float64] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %1549 = %1542.0;
  %1550 = %1547.2;
  %1551 = log10(%1548) /* ty=Tensor[(504, 1), float32] */;
  (%1549, %1550, meta[relay.Constant][52] /* ty=Tensor[(144), float64] */, %1551)
}

def @func_4223() -> (Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  @func_4221() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_6689() -> (Tensor[(5, 3, 2), float32], Tensor[(960), float64]) {
  @func_6687() /* ty=(Tensor[(5, 3, 2), float32], Tensor[(960), float64]) */
}

def @func_15758() -> (Tensor[(960), float64],) {
  %1554 = fn () -> (Tensor[(960), float64],) {
    %1552 = @func_12717() /* ty=(Tensor[(960), float64],) */;
    %1553 = %1552.0;
    (%1553,)
  };
  %1554() /* ty=(Tensor[(960), float64],) */
}

def @func_11960(%var_11958: float64, %var_11959: Tensor[(1, 1120), bool]) -> (Tensor[(12, 8, 10), float64], Tensor[(1120), bool], Tensor[(480), float64], Tensor[(960), float64], Tensor[(128), float32], Tensor[(1, 1120), float64]) {
  %1576 = fn (%var_11926: float64, %var_11928: Tensor[(1, 1120), bool]) -> (Tensor[(12, 8, 10), float64], Tensor[(1120), bool], Tensor[(480), float64], Tensor[(960), float64], Tensor[(128), float32], Tensor[(1, 1120), float64]) {
    %1555 = @func_5802() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */;
    %1556 = cast(%var_11926, dtype="float64") /* ty=float64 */;
    %1557 = cast(meta[relay.Constant][54] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %1558 = cast(%var_11928, dtype="bool") /* ty=Tensor[(1, 1120), bool] */;
    %1559 = reshape(%1556, newshape=[]) /* ty=float64 */;
    %1560 = reshape(%1557, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %1561 = reshape(%1558, newshape=[1120]) /* ty=Tensor[(1120), bool] */;
    %1562 = @func_3439(%1559, %1560, %1561) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(1, 504), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(1120), bool], Tensor[(12, 8, 10), float32]) */;
    %1563 = cast(meta[relay.Constant][55] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
    %1564 = reshape(%1563, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
    %1565 = @func_3483(%1564) /* ty=(Tensor[(16, 1, 8), float32], Tensor[(960), float64], Tensor[(16, ?, 8), int8]) */;
    %1566 = cast(%var_11928, dtype="float32") /* ty=Tensor[(1, 1120), float32] */;
    %1567 = erf(%1566) /* ty=Tensor[(1, 1120), float32] */;
    %1568 = cast(%1567, dtype="uint16") /* ty=Tensor[(1, 1120), uint16] */;
    %1569 = cast(%var_11926, dtype="uint16") /* ty=uint16 */;
    %1570 = minimum(%1568, %1569) /* ty=Tensor[(1, 1120), uint16] */;
    %1571 = cast(%1570, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
    %1572 = %1555.1;
    %1573 = %1562.7;
    %1574 = %1565.1;
    %1575 = cosh(%1571) /* ty=Tensor[(1, 1120), float64] */;
    (%1572, %1573, meta[relay.Constant][54] /* ty=Tensor[(480), float64] */, %1574, meta[relay.Constant][55] /* ty=Tensor[(128), float32] */, %1575)
  };
  %1576(%var_11958, %var_11959) /* ty=(Tensor[(12, 8, 10), float64], Tensor[(1120), bool], Tensor[(480), float64], Tensor[(960), float64], Tensor[(128), float32], Tensor[(1, 1120), float64]) */
}

def @func_11491() -> (Tensor[(960), float64],) {
  %1577 = @func_5092() /* ty=(Tensor[(960), float64],) */;
  %1578 = %1577.0;
  (%1578,)
}

def @func_1680() -> (Tensor[(960), float64], Tensor[(12, 8, 10), int32]) {
  @func_1678() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), int32]) */
}

def @func_1514() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %1579 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1580 = %1579.1;
  %1581 = cast(%1580, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1582 = reshape(%1581, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
  %1583 = @func_61(%1582) /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1584 = %1583.0;
  (%1580, %1584)
}

def @func_4411() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
  %1591 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) {
    %1585 = @func_2560() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
    %1586 = @func_3527() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %1587 = @func_1173() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
    %1588 = %1585.0;
    %1589 = %1586.1;
    %1590 = %1587.0;
    (%1588, %1589, %1590)
  };
  %1591() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */
}

def @func_8870() -> (Tensor[(12, 8, 10), float32],) {
  %1592 = @func_2131() /* ty=Tensor[(12, 8, 10), float32] */;
  (%1592,)
}

def @func_5785() -> (Tensor[(960), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1593 = @func_2476() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1594 = @func_1743() /* ty=(Tensor[(12, 8, 10), float32],) */;
  %1595 = %1593.1;
  %1596 = @func_4658() /* ty=Tensor[(960), float64] */;
  %1597 = %1594.0;
  (%1595, %1596, %1597)
}

def @func_1784() -> (Tensor[(960), float64],) {
  %1598 = @func_1649() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float64]) */;
  %1599 = %1598.0;
  (%1599,)
}

def @func_6097(%var_6095: Tensor[(9, 3, 2), float32]) -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(9, 3, 2), bool], Tensor[(960), float64]) {
  @func_6094(%var_6095) /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(9, 3, 2), bool], Tensor[(960), float64]) */
}

def @func_16200() -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  @func_16198() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_1174() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
  %1610 = fn () -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) {
    %1600 = @func_411() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
    %1601 = @func_516() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) */;
    %1602 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1603 = %1600.1;
    %1604 = cast(%1603, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
    %1605 = reshape(%1604, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
    %1606 = @func_331(%1605) /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1607 = %1601.2;
    %1608 = %1602.1;
    %1609 = %1606.0;
    (%1603, %1607, %1608, %1609)
  };
  %1610() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_13334() -> (Tensor[(12, 8, 10), float64],) {
  %1611 = @func_6955() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1612 = %1611.1;
  (%1612,)
}

def @func_17451(%var_17436: Tensor[(144), float64], %var_17437: Tensor[(2, 252), float64], %var_17445: Tensor[(2, 252), float64]) -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(6, 2, 12), float64], Tensor[(144), float64], Tensor[(2, 252), float64]) {
  %1613 = @func_14572() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1614 = @func_10528() /* ty=(Tensor[(13, 9, 7), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1615 = cast(%var_17436, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1616 = cast(%var_17437, dtype="float64") /* ty=Tensor[(2, 252), float64] */;
  %1617 = reshape(%1615, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %1618 = reshape(%1616, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %1619 = @func_6312(%1617, %1618) /* ty=(Tensor[(6, 2, 12), float64], Tensor[(6, 14, 6), float64], Tensor[(504), float64], Tensor[(960), float64]) */;
  %1620 = cast(%var_17445, dtype="float64") /* ty=Tensor[(2, 252), float64] */;
  %1621 = shape_of(%var_17437, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1622 = cast(%var_17437, dtype="float64") /* ty=Tensor[(2, 252), float64] */;
  %1623 = dyn.reshape(%1620, %1621, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1624 = %1613.0;
  %1625 = %1614.1;
  %1626 = %1619.0;
  %1627 = power(%1622, %1623) /* ty=Tensor[(2, 252), float64] */;
  (%1624, %1625, %1626, %var_17436, %1627)
}

def @func_16419() -> (Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64]) {
  %1628 = @func_7302() /* ty=(Tensor[(12, 8, 10), int16], Tensor[(12, 8, 10), float32]) */;
  %1629 = @func_8999() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64]) */;
  %1630 = %1628.1;
  %1631 = %1629.1;
  (%1630, %1631)
}

def @func_276() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
  %1646 = fn () -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) {
    %1632 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 9, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
    %1633 = cast(meta[relay.Constant][57] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %1634 = reshape(%1633, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
    %1635 = @func_61(%1634) /* ty=(Tensor[(12, 8, 10), float64],) */;
    %1636 = cast(meta[relay.Constant][57] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %1637 = reshape(%1636, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
    %1638 = @func_61(%1637) /* ty=(Tensor[(12, 8, 10), float64],) */;
    %1639 = cast(meta[relay.Constant][57] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %1640 = reshape(%1639, newshape=[12, 8, 10]) /* ty=Tensor[(12, 8, 10), float64] */;
    %1641 = @func_61(%1640) /* ty=(Tensor[(12, 8, 10), float64],) */;
    %1642 = log10(%1632) /* ty=Tensor[(3, 9, 6), float64] */;
    %1643 = %1635.0;
    %1644 = %1638.0;
    %1645 = %1641.0;
    (%1642, %1643, meta[relay.Constant][57] /* ty=Tensor[(960), float64] */, %1644, %1645)
  };
  %1646() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64]) */
}

def @func_12349() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %1647 = @func_2298() /* ty=(Tensor[(12, 8, 10), float64],) */;
  %1648 = @func_3040() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1649 = %1647.0;
  %1650 = %1648.0;
  (%1649, %1650)
}

def @func_1449(%var_1448: Tensor[(504), float64]) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64]) {
  %1659 = fn (%var_1443: Tensor[(504), float64]) -> (Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64]) {
    %1651 = @func_1400() /* ty=(Tensor[(960), float64],) */;
    %1652 = @func_571() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1653 = cast(%var_1443, dtype="float64") /* ty=Tensor[(504), float64] */;
    %1654 = reshape(%1653, newshape=[6, 14, 6]) /* ty=Tensor[(6, 14, 6), float64] */;
    %1655 = @func_827(%1654) /* ty=(Tensor[(6, 14, 6), float64],) */;
    %1656 = %1651.0;
    %1657 = %1652.0;
    %1658 = %1655.0;
    (%1656, %1657, %1658, %var_1443)
  };
  %1659(%var_1448) /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32], Tensor[(6, 14, 6), float64], Tensor[(504), float64]) */
}

def @func_15740() -> (Tensor[(960), uint16], Tensor[(960), float64], Tensor[(960), float64]) {
  %1666 = fn () -> (Tensor[(960), uint16], Tensor[(960), float64], Tensor[(960), float64]) {
    %1660 = @func_4485() /* ty=(Tensor[(960), uint16],) */;
    %1661 = @func_10931() /* ty=(Tensor[(960), float64],) */;
    %1662 = @func_11179() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
    %1663 = %1660.0;
    %1664 = %1661.0;
    %1665 = %1662.0;
    (%1663, %1664, %1665)
  };
  %1666() /* ty=(Tensor[(960), uint16], Tensor[(960), float64], Tensor[(960), float64]) */
}

def @func_10440() -> Tensor[(12, 8, 10), float32] {
  @func_5455() /* ty=Tensor[(12, 8, 10), float32] */
}

def @func_12379() -> Tensor[(960), float64] {
  @func_12377() /* ty=Tensor[(960), float64] */
}

def @func_6700() -> (Tensor[(960), uint16],) {
  %1667 = @func_4485() /* ty=(Tensor[(960), uint16],) */;
  %1668 = %1667.0;
  (%1668,)
}

def @func_4887(%var_4831: Tensor[(8, 5, 7), bool], %var_4858: float64, %var_4859: Tensor[(480), float64]) -> (Tensor[(8, 5, 7), bool], Tensor[(960), float64], Tensor[(16, 15, 2), float64], float64, Tensor[(480), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64]) {
  %1669 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 5, 7), bool] */, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %1670 = shape_of(%var_4831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1671 = cast(%var_4831, dtype="bool") /* ty=Tensor[(8, 5, 7), bool] */;
  %1672 = dyn.reshape(%1669, %1670, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1673 = @func_598() /* ty=(Tensor[(960), float64], Tensor[(960), float64]) */;
  %1674 = cast(%var_4858, dtype="float64") /* ty=float64 */;
  %1675 = cast(%var_4859, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1676 = reshape(%1674, newshape=[]) /* ty=float64 */;
  %1677 = reshape(%1675, newshape=[16, 15, 2]) /* ty=Tensor[(16, 15, 2), float64] */;
  %1678 = @func_1423(%1676, %1677) /* ty=(Tensor[(16, 15, 2), float64],) */;
  %1679 = @func_3769() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1680 = @func_1028() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */;
  %1681 = %1680.0;
  %1682 = cast(%1681, dtype="float64") /* ty=Tensor[(12, 8, 10), float64] */;
  %1683 = @func_4781() /* ty=(Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1684 = @func_4221() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(960), float64], Tensor[(12, 8, 10), float32]) */;
  %1685 = logical_or(%1671, %1672) /* ty=Tensor[(8, 5, 7), bool] */;
  %1686 = %1673.0;
  %1687 = %1678.0;
  %1688 = %1679.1;
  %1689 = log10(%1682) /* ty=Tensor[(12, 8, 10), float64] */;
  %1690 = %1683.0;
  %1691 = %1684.0;
  (%1685, %1686, %1687, %var_4858, %var_4859, %1688, %1689, %1690, %1691)
}

def @func_12486() -> (Tensor[(12, 8, 10), float32],) {
  %1692 = @func_3147() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), float32]) */;
  %1693 = %1692.1;
  (%1693,)
}

def @func_13184() -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
  %1697 = fn () -> (Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) {
    %1694 = @func_1488() /* ty=(Tensor[(12, 8, 10), float32],) */;
    %1695 = @func_7309() /* ty=Tensor[(12, 8, 10), float64] */;
    %1696 = %1694.0;
    (%1695, %1696)
  };
  %1697() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32]) */
}

def @func_6417() -> (Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), int16], Tensor[(960), float64]) {
  @func_6415() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(12, 8, 10), int16], Tensor[(960), float64]) */
}

def @func_15148() -> (Tensor[(960), float64],) {
  @func_15146() /* ty=(Tensor[(960), float64],) */
}

def @func_9067() -> Tensor[(12, 8, 10), float64] {
  %1698 = fn () -> Tensor[(12, 8, 10), float64] {
    @func_7309() /* ty=Tensor[(12, 8, 10), float64] */
  };
  %1698() /* ty=Tensor[(12, 8, 10), float64] */
}

def @func_15464() -> (Tensor[(960), float64], Tensor[(16, 3, 10), float64], Tensor[(480), float64], Tensor[(12, 8, 10), float32]) {
  %1699 = @func_9861() /* ty=(Tensor[(12, 8, 10), float32], Tensor[(960), float64]) */;
  %1700 = cast(meta[relay.Constant][59] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1701 = cast(meta[relay.Constant][59] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1702 = reshape(%1700, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), float64] */;
  %1703 = reshape(%1701, newshape=[16, 3, 10]) /* ty=Tensor[(16, 3, 10), float64] */;
  %1704 = @func_4157(%1702, %1703) /* ty=(Tensor[(16, 3, 10), float64],) */;
  %1705 = @func_8920() /* ty=(Tensor[(12, 8, 10), float64], Tensor[(12, 8, 10), float32], Tensor[(12, 8, 10), float32]) */;
  %1706 = %1699.1;
  %1707 = %1704.0;
  %1708 = %1705.2;
  (%1706, %1707, meta[relay.Constant][59] /* ty=Tensor[(480), float64] */, %1708)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen588/build/output.py:6507: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen588/build/output.py", line 6512, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(750) tvmgen_default_fused_cast_reshape_less_kernel0(signed char* __restrict__ T_less, signed char* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_less[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) < ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


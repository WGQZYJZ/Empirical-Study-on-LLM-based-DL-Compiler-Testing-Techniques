==========mod==========
#[version = "0.0.5"]
def @func_2124() -> (Tensor[(14, 14, 15), float32], Tensor[(30), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %1 = reshape(%0, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %2 = @func_2047(%1) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) */;
  %3 = %2.2;
  %4 = cast(%3, dtype="float32") /* ty=Tensor[(30), float32] */;
  %5 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(30), int32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?), float32] */;
  %8 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
  %9 = floor_divide(%6, %7) /* ty=Tensor[(30), float32] */;
  (%8, %9)
}

def @func_6427() -> Tensor[(14, 14, 15), float32] {
  %10 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %10.0
}

def @func_10969(%var_10965: Tensor[(30, 1), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(30, 1), int32]) {
  %11 = @func_10351() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %12 = cast(%var_10965, dtype="int32") /* ty=Tensor[(30, 1), int32] */;
  %13 = %11.0;
  %14 = cast(%13, dtype="int8") /* ty=Tensor[(14, 14, 15), int8] */;
  %15 = reshape(%12, newshape=[5, 6]) /* ty=Tensor[(5, 6), int32] */;
  %16 = reshape(%14, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), int8] */;
  %17 = @func_4648(%15, %16) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32], Tensor[(14, 14, 15), uint8]) */;
  %18 = %17.3;
  (%13, %18, %var_10965)
}

def @func_11995() -> Tensor[(14, 14, 15), float32] {
  @func_4224() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_3156() -> (Tensor[(14, 14, 15), float32],) {
  %19 = @func_1573() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %20 = %19.0;
  (%20,)
}

def @func_7550() -> (Tensor[(5, 14, 6), int32],) {
  %21 = @func_6878() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) */;
  %22 = %21.0;
  (%22,)
}

def @func_7806() -> (Tensor[(14, 14, 15), float32],) {
  %23 = @func_6531() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %24 = %23.0;
  (%24,)
}

def @func_9121() -> Tensor[(14, 14, 15), float32] {
  @func_6939() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_3376() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %25 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %26 = %25.0;
  %27 = @func_2385() /* ty=Tensor[(14, 14, 15), float32] */;
  (%26, %27)
}

def @func_4200(%var_4178: Tensor[(7, 5, 13), int16]) -> (Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) {
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 5, 13), int16] */, dtype="bool") /* ty=Tensor[(7, 5, 13), bool] */;
  %29 = shape_of(%var_4178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%var_4178, dtype="bool") /* ty=Tensor[(7, 5, 13), bool] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %32 = less_equal(%30, %31) /* ty=Tensor[(7, 5, 13), bool] */;
  %33 = @func_3625() /* ty=Tensor[(14, 14, 15), float32] */;
  (%32, %33)
}

def @func_2376() -> (Tensor[(14, 14, 15), float32],) {
  %34 = @func_1609() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %35 = %34.1;
  (%35,)
}

def @func_11155() -> Tensor[(14, 14, 15), float32] {
  %36 = @func_5453() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %36.0
}

def @func_6531() -> (Tensor[(14, 14, 15), float32],) {
  %37 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %38 = %37.0;
  (%38,)
}

def @func_5887() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) {
  %39 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %40 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %41 = %39.0;
  %42 = %40.0;
  (%41, %42)
}

def @func_2606() -> Tensor[(14, 14, 15), float32] {
  %43 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %43.0
}

def @func_9568(%var_9549: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32]) {
  %44 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %45 = cast(%var_9549, dtype="float32") /* ty=Tensor[(182), float32] */;
  %46 = reshape(%45, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %47 = @func_8149(%46) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %48 = @func_4266() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
  %49 = %44.0;
  %50 = %47.0;
  %51 = %48.0;
  (%49, %50, %var_9549, %51)
}

def @func_13964() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %52 = @func_12155() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
  %53 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %54 = %52.0;
  %55 = %53.0;
  (%54, %55)
}

def @func_156(%var_141: Tensor[(5, 1, 6), int32]) -> (Tensor[(5, 14, 6), int32],) {
  %56 = cast(%var_141, dtype="int32") /* ty=Tensor[(5, 1, 6), int32] */;
  %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(5, 14, 6), int32] */, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
  %58 = logical_xor(%56, %57) /* ty=Tensor[(5, 14, 6), int32] */;
  (%58,)
}

def @func_3829() -> (Tensor[(5, 14, 6), int32],) {
  %59 = @func_2207() /* ty=Tensor[(5, 14, 6), int32] */;
  (%59,)
}

def @func_6680() -> (Tensor[(14, 14, 15), float32],) {
  %60 = @func_6628() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %61 = %60.0;
  (%61,)
}

def @func_6149() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %62 = @func_3782() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %63 = @func_4795() /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) */;
  %64 = @func_2207() /* ty=Tensor[(5, 14, 6), int32] */;
  %65 = %62.1;
  %66 = %63.0;
  (%64, %65, %66)
}

def @func_11427() -> Tensor[(14, 14, 15), int8] {
  @func_1195() /* ty=Tensor[(14, 14, 15), int8] */
}

def @func_3282(%var_3265: Tensor[(1, 2, 3), float64]) -> (Tensor[(3, 2, 3), float64], Tensor[(1, 2, 3), float64]) {
  %67 = cast(%var_3265, dtype="float64") /* ty=Tensor[(1, 2, 3), float64] */;
  %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 2, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 3), float64] */;
  %69 = cast(%var_3265, dtype="float64") /* ty=Tensor[(1, 2, 3), float64] */;
  %70 = divide(%67, %68) /* ty=Tensor[(3, 2, 3), float64] */;
  %71 = asinh(%69) /* ty=Tensor[(1, 2, 3), float64] */;
  (%70, %71)
}

def @func_13865(%var_13849: Tensor[(5, 14, 6), int32]) -> (Tensor[(5, 14, 6), bool], Tensor[(5, 14, 6), float32]) {
  %72 = @func_11769() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(6, 10, 5), float64], Tensor[(5, 14, 6), int32]) */;
  %73 = %72.3;
  %74 = cast(%var_13849, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%73, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %78 = cast(%var_13849, dtype="float32") /* ty=Tensor[(5, 14, 6), float32] */;
  %79 = less_equal(%76, %77) /* ty=Tensor[(5, 14, 6), bool] */;
  %80 = acosh(%78) /* ty=Tensor[(5, 14, 6), float32] */;
  (%79, %80)
}

def @func_4313(%var_4289: Tensor[(10, 3, 15), float32], %var_4302: Tensor[(455), int16]) -> (Tensor[(10, 3, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) {
  %81 = cast(%var_4289, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %82 = cast(%var_4302, dtype="int16") /* ty=Tensor[(455), int16] */;
  %83 = reshape(%82, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), int16] */;
  %84 = @func_4200(%83) /* ty=(Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) */;
  %85 = exp(%81) /* ty=Tensor[(10, 3, 15), float32] */;
  %86 = %84.1;
  (%85, %86, %var_4302)
}

def @func_13699() -> (Tensor[(5, 14, 6), int32],) {
  %87 = @func_7437() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %88 = %87.0;
  (%88,)
}

def @func_4648(%var_4591: Tensor[(5, 6), int32], %var_4600: Tensor[(14, 14, 15), int8]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32], Tensor[(14, 14, 15), uint8]) {
  %89 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %90 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %91 = cast(%var_4591, dtype="int32") /* ty=Tensor[(5, 6), int32] */;
  %92 = reshape(%91, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
  %93 = @func_156(%92) /* ty=(Tensor[(5, 14, 6), int32],) */;
  %94 = @func_3405() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %95 = %94.1;
  %96 = cast(%var_4600, dtype="uint8") /* ty=Tensor[(14, 14, 15), uint8] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="uint8") /* ty=Tensor[(14, 14, 15), uint8] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %100 = %89.0;
  %101 = %90.0;
  %102 = %93.0;
  %103 = bitwise_and(%98, %99) /* ty=Tensor[(14, 14, 15), uint8] */;
  (%100, %101, %102, %var_4591, %103)
}

def @func_1235(%var_1233: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) {
  %104 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %105 = cast(%var_1233, dtype="float32") /* ty=Tensor[(182), float32] */;
  %106 = reshape(%105, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %107 = @func_961(%106) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %108 = %104.0;
  %109 = %107.2;
  (%108, %109, %var_1233)
}

def @func_13363() -> (Tensor[(182), float32],) {
  %110 = @func_5493() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
  %111 = %110.1;
  (%111,)
}

def @func_5602(%var_5593: Tensor[(65, 7), int16]) -> (Tensor[(1, 14, 13), float32], Tensor[(7, 5, 13), bool], Tensor[(65, 7), int16], Tensor[(14, 14, 15), float32]) {
  %112 = @func_5350() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) */;
  %113 = cast(%var_5593, dtype="int16") /* ty=Tensor[(65, 7), int16] */;
  %114 = reshape(%113, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), int16] */;
  %115 = @func_4200(%114) /* ty=(Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) */;
  %116 = %112.3;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(1, 14, 13), float32] */;
  %118 = reshape(%117, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %119 = @func_1235(%118) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
  %120 = %115.0;
  %121 = %119.0;
  (%116, %120, %var_5593, %121)
}

def @func_7194() -> Tensor[(14, 14, 15), float32] {
  @func_2385() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_14496() -> (Tensor[(14, 14, 15), float32],) {
  %122 = @func_2649() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %123 = %122.0;
  (%123,)
}

def @func_11652(%var_11650: Tensor[(10, 42), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int8], Tensor[(10, 42), int32]) {
  %124 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %125 = cast(%var_11650, dtype="int32") /* ty=Tensor[(10, 42), int32] */;
  %126 = reshape(%125, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %127 = @func_4129(%126) /* ty=(Tensor[(5, 14, 6), int8], Tensor[(14, 14, 15), float32]) */;
  %128 = %124.0;
  %129 = @func_9121() /* ty=Tensor[(14, 14, 15), float32] */;
  %130 = %127.0;
  (%128, %129, %130, %var_11650)
}

def @func_7353() -> (Tensor[(14, 14, 15), float32],) {
  %131 = @func_1609() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %132 = %131.0;
  (%132,)
}

def @func_7922() -> (Tensor[(14, 14, 15), float32],) {
  %133 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %134 = %133.0;
  (%134,)
}

def @func_1105(%var_1061: Tensor[(30), int32], %var_1062: Tensor[(24, 2), float32]) -> (Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) {
  %135 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %136 = %135.0;
  %137 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 14, 15), float32] */, dtype="int32") /* ty=Tensor[(14, 14, 15), int32] */;
  %138 = shape_of(%136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%136, dtype="int32") /* ty=Tensor[(14, 14, 15), int32] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %141 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 14, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %142 = shape_of(%136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%136, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %145 = cast(%var_1061, dtype="int32") /* ty=Tensor[(30), int32] */;
  %146 = cast(%var_1062, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
  %147 = reshape(%145, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %148 = reshape(%146, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %149 = @func_381(%147, %148) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %150 = %149.4;
  %151 = cast(%150, dtype="float32") /* ty=Tensor[(48), float32] */;
  %152 = reshape(%151, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
  %153 = @func_21(%152) /* ty=Tensor[(6, 2, 8), float32] */;
  %154 = cast(%153, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %155 = left_shift(%139, %140) /* ty=Tensor[(14, 14, 15), int32] */;
  %156 = greater_equal(%143, %144) /* ty=Tensor[(14, 14, 15), bool] */;
  %157 = erf(%154) /* ty=Tensor[(6, 2, 8), float64] */;
  (%155, %156, %150, %var_1061, %var_1062, %157)
}

def @func_12403(%var_12382: Tensor[(14, 10, 13), int32], %var_12383: Tensor[(14, 10, 13), int32]) -> (Tensor[(14, 10, 13), float64], Tensor[(14, 14, 15), float32]) {
  %158 = cast(%var_12383, dtype="int32") /* ty=Tensor[(14, 10, 13), int32] */;
  %159 = shape_of(%var_12382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%var_12382, dtype="int32") /* ty=Tensor[(14, 10, 13), int32] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %162 = bitwise_or(%160, %161) /* ty=Tensor[(14, 10, 13), int32] */;
  %163 = cast(%162, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %164 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %165 = asinh(%163) /* ty=Tensor[(14, 10, 13), float64] */;
  %166 = %164.0;
  (%165, %166)
}

def @func_13624() -> Tensor[(14, 14, 15), float32] {
  %167 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %167.0
}

def @func_8527() -> (Tensor[(14, 14, 15), float64],) {
  %168 = @func_4266() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
  %169 = %168.1;
  (%169,)
}

def @func_5493() -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) {
  %170 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %171 = cast(meta[relay.Constant][5] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %172 = reshape(%171, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %173 = @func_2087(%172) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %174 = %170.1;
  %175 = %173.2;
  (%174, %175, meta[relay.Constant][5] /* ty=Tensor[(182), float32] */)
}

def @func_8303(%var_8257: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %176 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %177 = @func_7550() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %178 = cast(%var_8257, dtype="float32") /* ty=Tensor[(182), float32] */;
  %179 = reshape(%178, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
  %180 = @func_883(%179) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
  %181 = @func_5453() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %182 = @func_7468() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %183 = %176.1;
  %184 = %177.0;
  %185 = %180.0;
  %186 = %181.0;
  %187 = %182.0;
  (%183, %184, %185, %var_8257, %186, %187)
}

def @func_6477() -> (Tensor[(14, 14, 15), float32],) {
  %188 = @func_4359() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %189 = %188.0;
  (%189,)
}

def @func_1500() -> (Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) {
  %190 = cast(meta[relay.Constant][6] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %191 = reshape(%190, newshape=[5, 16, 5]) /* ty=Tensor[(5, 16, 5), float64] */;
  %192 = @func_206(%191) /* ty=(Tensor[(5, 16, 5), float64], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(5, 14, 6), int32]) */;
  %193 = cast(meta[relay.Constant][7] /* ty=Tensor[(182, 1), float32] */, dtype="float32") /* ty=Tensor[(182, 1), float32] */;
  %194 = reshape(%193, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %195 = @func_961(%194) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %196 = @func_1348() /* ty=(Tensor[(2, 9, 11), float64],) */;
  %197 = %196.0;
  %198 = cast(%197, dtype="float32") /* ty=Tensor[(2, 9, 11), float32] */;
  %199 = cos(%198) /* ty=Tensor[(2, 9, 11), float32] */;
  %200 = cast(%197, dtype="uint8") /* ty=Tensor[(2, 9, 11), uint8] */;
  %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%199, dtype="uint8") /* ty=Tensor[(2, 9, 11), uint8] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %204 = %192.1;
  %205 = %195.1;
  %206 = multiply(%202, %203) /* ty=Tensor[(2, 9, 11), uint8] */;
  (%204, meta[relay.Constant][6] /* ty=Tensor[(400), float64] */, %205, meta[relay.Constant][7] /* ty=Tensor[(182, 1), float32] */, %206)
}

def @func_8639() -> (Tensor[(14, 14, 15), float32],) {
  %207 = @func_5268() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %208 = %207.0;
  (%208,)
}

def @func_14065(%var_14050: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %209 = @func_7468() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %210 = @func_9253() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %211 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %212 = cast(%var_14050, dtype="float32") /* ty=Tensor[(182), float32] */;
  %213 = reshape(%212, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %214 = @func_8303(%213) /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %215 = %209.0;
  %216 = %210.0;
  %217 = %211.0;
  %218 = %214.2;
  (%215, %216, %217, %218, %var_14050)
}

def @func_4687() -> (Tensor[(14, 14, 15), float32],) {
  %219 = @func_3625() /* ty=Tensor[(14, 14, 15), float32] */;
  (%219,)
}

def @func_3257(%var_3240: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) {
  %220 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %221 = cast(%220, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %222 = cast(%var_3240, dtype="float32") /* ty=Tensor[(48), float32] */;
  %223 = reshape(%221, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %224 = reshape(%222, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %225 = @func_1769(%223, %224) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %226 = %225.2;
  %227 = @func_1195() /* ty=Tensor[(14, 14, 15), int8] */;
  (%220, %226, %var_3240, %227)
}

def @func_4795() -> (Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) {
  %228 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %229 = cast(meta[relay.Constant][8] /* ty=Tensor[(30, 1), int32] */, dtype="int32") /* ty=Tensor[(30, 1), int32] */;
  %230 = reshape(%229, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
  %231 = @func_156(%230) /* ty=(Tensor[(5, 14, 6), int32],) */;
  %232 = %228.1;
  %233 = %231.0;
  (%232, %233, meta[relay.Constant][8] /* ty=Tensor[(30, 1), int32] */)
}

def @func_8772() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %234 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %235 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %236 = %234.0;
  %237 = %235.1;
  (%236, %237)
}

def @func_2047(%var_2009: Tensor[(30), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) {
  %238 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %239 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 14, 15), bool] */, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%238, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %243 = cast(%var_2009, dtype="int32") /* ty=Tensor[(30), int32] */;
  %244 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %245 = reshape(%243, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %246 = reshape(%244, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %247 = @func_381(%245, %246) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %248 = floor_mod(%241, %242) /* ty=Tensor[(14, 14, 15), float32] */;
  %249 = %247.0;
  (%248, %249, %var_2009, meta[relay.Constant][10] /* ty=Tensor[(12, 4), float32] */)
}

def @func_12538(%var_12527: Tensor[(16, 13, 13), float64], %var_12528: Tensor[(16, 13, 13), float64]) -> (Tensor[(16, 13, 13), float64], Tensor[(16, 13, 13), float32]) {
  %250 = cast(%var_12528, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
  %251 = shape_of(%var_12527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%var_12527, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %254 = cast(%var_12528, dtype="float32") /* ty=Tensor[(16, 13, 13), float32] */;
  %255 = mod(%252, %253) /* ty=Tensor[(16, 13, 13), float64] */;
  %256 = sigmoid(%254) /* ty=Tensor[(16, 13, 13), float32] */;
  (%255, %256)
}

def @func_13482() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool]) {
  %257 = cast(meta[relay.Constant][11] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %258 = reshape(%257, newshape=[26, 7]) /* ty=Tensor[(26, 7), float32] */;
  %259 = @func_10316(%258) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(26, 7), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) */;
  %260 = @func_5360() /* ty=Tensor[(14, 14, 15), float32] */;
  %261 = @func_2606() /* ty=Tensor[(14, 14, 15), float32] */;
  %262 = %259.0;
  %263 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  (%260, %261, %262, meta[relay.Constant][11] /* ty=Tensor[(182), float32] */, %263)
}

def @func_12274(%var_12265: int64) -> (Tensor[(1, 4, 12), bool], Tensor[(14, 14, 15), float32]) {
  %264 = cast(%var_12265, dtype="bool") /* ty=bool */;
  %265 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 4, 12), int64] */, dtype="bool") /* ty=Tensor[(1, 4, 12), bool] */;
  %266 = @func_7468() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %267 = less(%264, %265) /* ty=Tensor[(1, 4, 12), bool] */;
  %268 = %266.0;
  (%267, %268)
}

def @func_9311(%var_9305: Tensor[(6, 10, 5), uint32]) -> (Tensor[(6, 10, 5), uint32],) {
  %269 = cast(%var_9305, dtype="uint32") /* ty=Tensor[(6, 10, 5), uint32] */;
  %270 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(6, 10, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 10, 5), uint32] */, dtype="uint32") /* ty=Tensor[(6, 10, 5), uint32] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %273 = right_shift(%271, %272) /* ty=Tensor[(6, 10, 5), uint32] */;
  (%273,)
}

def @func_1195() -> Tensor[(14, 14, 15), int8] {
  %274 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %274.1
}

def @func_4359() -> (Tensor[(14, 14, 15), float32],) {
  %275 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %276 = %275.0;
  (%276,)
}

def @func_2756() -> (Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(24, 2), float32]) {
  %277 = @func_1847() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %278 = cast(meta[relay.Constant][14] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %279 = %277.2;
  %280 = cast(%279, dtype="float32") /* ty=Tensor[(48), float32] */;
  %281 = reshape(%278, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %282 = reshape(%280, newshape=[24, 2]) /* ty=Tensor[(24, 2), float32] */;
  %283 = @func_1105(%281, %282) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) */;
  %284 = cast(meta[relay.Constant][14] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %285 = cast(%279, dtype="float32") /* ty=Tensor[(48), float32] */;
  %286 = reshape(%284, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %287 = reshape(%285, newshape=[24, 2]) /* ty=Tensor[(24, 2), float32] */;
  %288 = @func_1105(%286, %287) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) */;
  %289 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %290 = %283.3;
  %291 = %288.4;
  (%289, %279, %290, meta[relay.Constant][14] /* ty=Tensor[(30), int32] */, %291)
}

def @func_7029() -> (Tensor[(14, 14, 15), float32],) {
  %292 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %293 = %292.0;
  (%293,)
}

def @func_5421() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), float64], Tensor[(455), int16]) {
  %294 = @func_3829() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %295 = cast(meta[relay.Constant][15] /* ty=Tensor[(455), int16] */, dtype="int16") /* ty=Tensor[(455), int16] */;
  %296 = reshape(%295, newshape=[455]) /* ty=Tensor[(455), int16] */;
  %297 = @func_4747(%296) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(7, 5, 13), bool], Tensor[(455), float64]) */;
  %298 = %294.0;
  %299 = @func_2606() /* ty=Tensor[(14, 14, 15), float32] */;
  %300 = @func_2606() /* ty=Tensor[(14, 14, 15), float32] */;
  %301 = %297.2;
  (%298, %299, %300, %301, meta[relay.Constant][15] /* ty=Tensor[(455), int16] */)
}

def @func_5268() -> (Tensor[(14, 14, 15), float32],) {
  %302 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  (%302,)
}

def @func_8693() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %303 = @func_7487() /* ty=Tensor[(14, 14, 15), float32] */;
  %304 = @func_7487() /* ty=Tensor[(14, 14, 15), float32] */;
  (%303, %304)
}

def @func_1634() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %305 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %306 = @func_1325() /* ty=Tensor[(14, 14, 15), float32] */;
  (%305, %306)
}

def @func_2351(%var_2339: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(182), float32]) {
  %307 = @func_1609() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %308 = cast(meta[relay.Constant][16] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %309 = cast(%var_2339, dtype="float32") /* ty=Tensor[(182), float32] */;
  %310 = reshape(%308, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %311 = reshape(%309, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %312 = @func_1979(%310, %311) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) */;
  %313 = %307.0;
  %314 = %312.0;
  (%313, %314, meta[relay.Constant][16] /* ty=Tensor[(588), float64] */, %var_2339)
}

def @func_1573() -> (Tensor[(14, 14, 15), float32],) {
  %315 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %316 = %315.0;
  (%316,)
}

def @func_6932() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %317 = @func_6726() /* ty=Tensor[(14, 14, 15), float32] */;
  %318 = @func_1195() /* ty=Tensor[(14, 14, 15), int8] */;
  (%317, %318)
}

def @func_7675(%var_7641: Tensor[(30), int32]) -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32], Tensor[(12, 4), float32]) {
  %319 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %320 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %321 = cast(%var_7641, dtype="int32") /* ty=Tensor[(30), int32] */;
  %322 = reshape(%321, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %323 = @func_6565(%322) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(5, 84), int32], Tensor[(30), int32]) */;
  %324 = cast(%var_7641, dtype="int32") /* ty=Tensor[(30), int32] */;
  %325 = reshape(%324, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %326 = @func_2047(%325) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) */;
  %327 = %319.0;
  %328 = %320.0;
  %329 = @func_6645() /* ty=Tensor[(14, 14, 15), float32] */;
  %330 = %323.0;
  %331 = %326.3;
  (%327, %328, %329, %330, %var_7641, %331)
}

def @func_7526() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %332 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %333 = @func_2171() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %334 = %332.0;
  %335 = %333.0;
  (%334, %335)
}

def @func_11502() -> (Tensor[(1, 14, 13), float32],) {
  %336 = @func_5188() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %337 = %336.0;
  (%337,)
}

def @func_2649() -> (Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
  %338 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %339 = cast(meta[relay.Constant][17] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %340 = reshape(%339, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
  %341 = @func_883(%340) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
  %342 = %338.0;
  %343 = %341.2;
  (%342, %343, meta[relay.Constant][17] /* ty=Tensor[(182), float32] */)
}

def @func_3098(%var_3044: Tensor[(14, 14, 15), float32], %var_3060: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) {
  %344 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %345 = %344.0;
  %346 = cast(%var_3044, dtype="int64") /* ty=Tensor[(14, 14, 15), int64] */;
  %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%345, dtype="int64") /* ty=Tensor[(14, 14, 15), int64] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %350 = cast(%var_3060, dtype="float32") /* ty=Tensor[(182), float32] */;
  %351 = reshape(%350, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %352 = @func_1235(%351) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
  %353 = cast(%345, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %354 = cast(meta[relay.Constant][18] /* ty=Tensor[(24, 2), float32] */, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
  %355 = reshape(%353, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %356 = reshape(%354, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %357 = @func_1769(%355, %356) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %358 = add(%348, %349) /* ty=Tensor[(14, 14, 15), int64] */;
  %359 = %352.1;
  %360 = %357.3;
  %361 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  (%358, %359, %var_3060, %360, meta[relay.Constant][18] /* ty=Tensor[(24, 2), float32] */, %361)
}

def @func_1348() -> (Tensor[(2, 9, 11), float64],) {
  %362 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  %363 = log2(%362) /* ty=Tensor[(2, 9, 11), float64] */;
  (%363,)
}

def @func_8605(%var_8579: Tensor[(10, 14, 1), float64]) -> (Tensor[(14, 14, 15), float32], Tensor[(10, 14, ?), bool], Tensor[(14, 14, 15), float32]) {
  %364 = cast(%var_8579, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %365 = sigmoid(%364) /* ty=Tensor[(10, 14, 1), float64] */;
  %366 = cast(%var_8579, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%365, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %370 = @func_7379() /* ty=Tensor[(14, 14, 15), float32] */;
  %371 = logical_and(%368, %369) /* ty=Tensor[(10, 14, ?), bool] */;
  %372 = @func_7730() /* ty=Tensor[(14, 14, 15), float32] */;
  (%370, %371, %372)
}

def @func_9664() -> (Tensor[(14, 14, 15), float32],) {
  %373 = @func_6932() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %374 = %373.0;
  (%374,)
}

def @func_12440() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %375 = @func_10681() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %376 = @func_7379() /* ty=Tensor[(14, 14, 15), float32] */;
  %377 = %375.0;
  (%376, %377)
}

def @func_10351() -> (Tensor[(14, 14, 15), float32],) {
  %378 = @func_7353() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %379 = %378.0;
  (%379,)
}

def @func_2171() -> (Tensor[(14, 14, 15), float32],) {
  %380 = @func_1325() /* ty=Tensor[(14, 14, 15), float32] */;
  (%380,)
}

def @func_5350() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) {
  %381 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %382 = cast(meta[relay.Constant][20] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %383 = reshape(%382, newshape=[1, 12, 2]) /* ty=Tensor[(1, 12, 2), float32] */;
  %384 = @func_2419(%383) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(14, 14, 15), float32]) */;
  %385 = @func_5188() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %386 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %387 = %385.0;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(1, 14, 13), float32] */;
  %389 = reshape(%388, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
  %390 = @func_883(%389) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
  %391 = %381.0;
  %392 = %384.1;
  %393 = %386.2;
  %394 = %390.1;
  (%391, %392, meta[relay.Constant][20] /* ty=Tensor[(24), float32] */, %387, %393, %394)
}

def @func_12155() -> (Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) {
  %395 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %396 = reshape(%395, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %397 = @func_3257(%396) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) */;
  %398 = @func_6645() /* ty=Tensor[(14, 14, 15), float32] */;
  %399 = %397.1;
  (%398, %399, meta[relay.Constant][21] /* ty=Tensor[(4, 12), float32] */)
}

def @func_5188() -> (Tensor[(1, 14, 13), float32],) {
  %400 = @func_2679() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %401 = %400.0;
  (%401,)
}

def @func_7437() -> (Tensor[(5, 14, 6), int32],) {
  %402 = @func_4471() /* ty=Tensor[(5, 14, 6), int32] */;
  (%402,)
}

def @func_10316(%var_10292: Tensor[(26, 7), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(26, 7), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) {
  %403 = cast(%var_10292, dtype="float32") /* ty=Tensor[(26, 7), float32] */;
  %404 = reshape(%403, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %405 = @func_2087(%404) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %406 = @func_5350() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) */;
  %407 = @func_5421() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), float64], Tensor[(455), int16]) */;
  %408 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
  %409 = %405.3;
  %410 = %406.1;
  %411 = %407.4;
  (%408, %409, %var_10292, %410, %411)
}

def @func_9383(%var_9364: Tensor[(1, 182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(14, 14, 15), float32]) {
  %412 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %413 = @func_7806() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %414 = %413.0;
  %415 = cast(%414, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %416 = cast(%var_9364, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %417 = reshape(%415, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %418 = reshape(%416, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %419 = @func_3098(%417, %418) /* ty=(Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) */;
  %420 = %412.1;
  %421 = %419.2;
  %422 = @func_6038() /* ty=Tensor[(14, 14, 15), float32] */;
  (%420, %414, %421, %var_9364, %422)
}

def @func_381(%var_358: Tensor[(30), int32], %var_375: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) {
  %423 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %424 = %423.0;
  %425 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 14, 15), float32] */, dtype="int32") /* ty=Tensor[(14, 14, 15), int32] */;
  %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%424, dtype="int32") /* ty=Tensor[(14, 14, 15), int32] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %429 = cast(%var_358, dtype="int32") /* ty=Tensor[(30), int32] */;
  %430 = reshape(%429, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
  %431 = @func_156(%430) /* ty=(Tensor[(5, 14, 6), int32],) */;
  %432 = cast(%var_375, dtype="float32") /* ty=Tensor[(48), float32] */;
  %433 = reshape(%432, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
  %434 = bitwise_xor(%427, %428) /* ty=Tensor[(14, 14, 15), int32] */;
  %435 = %431.0;
  %436 = @func_21(%433) /* ty=Tensor[(6, 2, 8), float32] */;
  (%434, %435, %var_358, %436, %var_375)
}

def @func_10714() -> (Tensor[(5, 14, 6), int32],) {
  %437 = @func_6878() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) */;
  %438 = %437.0;
  (%438,)
}

def @func_12721() -> (Tensor[(14, 14, 15), float32],) {
  %439 = @func_3376() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %440 = %439.1;
  (%440,)
}

def @func_13977(%var_13966: Tensor[(2, 5, 12), uint32], %var_13967: Tensor[(2, 5, 12), uint32]) -> Tensor[(2, 5, 12), bool] {
  %441 = cast(%var_13967, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %442 = shape_of(%var_13966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_13966, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%443, %444) /* ty=Tensor[(2, 5, 12), bool] */
}

def @func_11919() -> Tensor[(300), uint32] {
  %445 = @func_10221() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) */;
  %445.1
}

def @func_7181(%var_7175: Tensor[(48, 7), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48, 7), bool]) {
  %446 = cast(meta[relay.Constant][23] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %447 = reshape(%446, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %448 = @func_3675(%447) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(48), float32]) */;
  %449 = cast(meta[relay.Constant][23] /* ty=Tensor[(48, 1), float32] */, dtype="bool") /* ty=Tensor[(48, 1), bool] */;
  %450 = cast(%var_7175, dtype="bool") /* ty=Tensor[(48, 7), bool] */;
  %451 = @func_3160() /* ty=Tensor[(14, 14, 15), float32] */;
  %452 = %448.0;
  %453 = equal(%449, %450) /* ty=Tensor[(48, 7), bool] */;
  (%451, %452, %453)
}

def @func_10681() -> (Tensor[(14, 14, 15), float32],) {
  %454 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %455 = %454.0;
  (%455,)
}

def @func_5360() -> Tensor[(14, 14, 15), float32] {
  %456 = @func_4266() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
  %456.0
}

def @func_3675(%var_3667: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(48), float32]) {
  %457 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %458 = cast(meta[relay.Constant][24] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %459 = cast(%var_3667, dtype="float32") /* ty=Tensor[(48), float32] */;
  %460 = reshape(%458, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %461 = reshape(%459, newshape=[24, 2]) /* ty=Tensor[(24, 2), float32] */;
  %462 = @func_1105(%460, %461) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) */;
  %463 = %457.0;
  %464 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %465 = %462.0;
  (%463, %464, %465, meta[relay.Constant][24] /* ty=Tensor[(30), int32] */, %var_3667)
}

def @func_2571(%var_2559: Tensor[(1, 182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 182), float32], Tensor[(98, 6), float64], Tensor[(1, 182), float32]) {
  %466 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %467 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
  %468 = @func_1573() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %469 = %468.0;
  %470 = cast(%469, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %471 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%467, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %474 = cast(meta[relay.Constant][25] /* ty=Tensor[(98, 6), float64] */, dtype="float64") /* ty=Tensor[(98, 6), float64] */;
  %475 = cast(%var_2559, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %476 = reshape(%474, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %477 = reshape(%475, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %478 = @func_1979(%476, %477) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) */;
  %479 = %466.0;
  %480 = logical_and(%472, %473) /* ty=Tensor[(14, 14, 15), bool] */;
  %481 = %478.2;
  (%479, %480, %481, meta[relay.Constant][25] /* ty=Tensor[(98, 6), float64] */, %var_2559)
}

def @func_4972(%var_4926: Tensor[(9, 10, 11), float32], %var_4927: Tensor[(9, 10, 11), float32]) -> (Tensor[(9, 10, 11), bool], Tensor[(9, 10, 11), float64], Tensor[(14, 14, 15), float32], Tensor[(30), int32], Tensor[(48), float32], Tensor[(5, 84), int32]) {
  %482 = cast(%var_4927, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %483 = shape_of(%var_4926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%var_4926, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %486 = power(%484, %485) /* ty=Tensor[(9, 10, 11), float32] */;
  %487 = cast(%var_4926, dtype="bool") /* ty=Tensor[(9, 10, 11), bool] */;
  %488 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%486, dtype="bool") /* ty=Tensor[(9, 10, 11), bool] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %491 = cast(%var_4926, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  %492 = cast(meta[relay.Constant][26] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %493 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 84), int32] */, dtype="int32") /* ty=Tensor[(5, 84), int32] */;
  %494 = reshape(%492, newshape=[2, 24]) /* ty=Tensor[(2, 24), float32] */;
  %495 = reshape(%493, newshape=[420, 1]) /* ty=Tensor[(420, 1), int32] */;
  %496 = @func_4074(%494, %495) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(2, 24), bool], Tensor[(6, 2, 8), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(420, 1), int32], Tensor[(30), int32]) */;
  %497 = logical_and(%489, %490) /* ty=Tensor[(9, 10, 11), bool] */;
  %498 = sigmoid(%491) /* ty=Tensor[(9, 10, 11), float64] */;
  %499 = @func_3625() /* ty=Tensor[(14, 14, 15), float32] */;
  %500 = %496.7;
  (%497, %498, %499, %500, meta[relay.Constant][26] /* ty=Tensor[(48), float32] */, meta[relay.Constant][27] /* ty=Tensor[(5, 84), int32] */)
}

def @func_9151(%var_9136: Tensor[(6, 4, 13), float32], %var_9137: Tensor[(6, 4, 13), float32]) -> (Tensor[(6, 4, 13), float32],) {
  %501 = cast(%var_9137, dtype="float32") /* ty=Tensor[(6, 4, 13), float32] */;
  %502 = shape_of(%var_9136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%var_9136, dtype="float32") /* ty=Tensor[(6, 4, 13), float32] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %505 = divide(%503, %504) /* ty=Tensor[(6, 4, 13), float32] */;
  (%505,)
}

def @func_2290(%var_2237: Tensor[(14, 14, 15), float32], %var_2264: Tensor[(14, 14, 15), uint64], %var_2287: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(48), float32]) {
  %506 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %507 = %506.0;
  %508 = cast(%var_2237, dtype="uint64") /* ty=Tensor[(14, 14, 15), uint64] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="uint64") /* ty=Tensor[(14, 14, 15), uint64] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %512 = minimum(%510, %511) /* ty=Tensor[(14, 14, 15), uint64] */;
  %513 = cast(%var_2264, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %517 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %518 = cast(%507, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %519 = cast(%var_2287, dtype="float32") /* ty=Tensor[(48), float32] */;
  %520 = reshape(%518, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %521 = reshape(%519, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %522 = @func_1769(%520, %521) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %523 = greater(%515, %516) /* ty=Tensor[(14, 14, 15), bool] */;
  %524 = %517.1;
  %525 = %522.2;
  (%523, %524, %525, %var_2287)
}

def @func_11769() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(6, 10, 5), float64], Tensor[(5, 14, 6), int32]) {
  %526 = @func_7550() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %527 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %528 = @func_6932() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %529 = @func_6322() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %530 = @func_10221() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) */;
  %531 = %526.0;
  %532 = %527.0;
  %533 = %528.1;
  %534 = %529.0;
  %535 = %530.2;
  %536 = @func_11473() /* ty=Tensor[(5, 14, 6), int32] */;
  (%531, %532, %533, %534, %535, %536)
}

def @func_8555() -> (Tensor[(14, 14, 15), int8],) {
  %537 = @func_8447() /* ty=(Tensor[(14, 14, 15), int8],) */;
  %538 = %537.0;
  (%538,)
}

def @func_9253() -> (Tensor[(14, 14, 15), float32],) {
  %539 = @func_7194() /* ty=Tensor[(14, 14, 15), float32] */;
  (%539,)
}

def @func_560() -> (Tensor[(14, 14, 15), float32],) {
  %540 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %541 = %540.0;
  (%541,)
}

def @func_9293() -> Tensor[(14, 14, 15), float32] {
  @func_6939() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_1325() -> Tensor[(14, 14, 15), float32] {
  @func_1244() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_6628() -> (Tensor[(14, 14, 15), float32],) {
  %542 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %543 = %542.0;
  (%543,)
}

def @func_13142(%var_13123: Tensor[(196), float64]) -> (Tensor[(30), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 2, 7), float64], Tensor[(196), float64], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %544 = @func_2124() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(30), float32]) */;
  %545 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %546 = cast(meta[relay.Constant][28] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %547 = reshape(%546, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %548 = @func_8149(%547) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %549 = cast(%var_13123, dtype="float64") /* ty=Tensor[(196), float64] */;
  %550 = reshape(%549, newshape=[14, 2, 7]) /* ty=Tensor[(14, 2, 7), float64] */;
  %551 = @func_13075(%550) /* ty=(Tensor[(14, 2, 7), float64],) */;
  %552 = @func_9514() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %553 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %554 = %544.1;
  %555 = %545.0;
  %556 = %548.2;
  %557 = %551.0;
  %558 = %552.0;
  %559 = %553.1;
  (%554, %555, %556, meta[relay.Constant][28] /* ty=Tensor[(182), float32] */, %557, %var_13123, %558, %559)
}

def @func_4129(%var_4110: Tensor[(5, 14, 6), int32]) -> (Tensor[(5, 14, 6), int8], Tensor[(14, 14, 15), float32]) {
  %560 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %561 = %560.0;
  %562 = cast(%var_4110, dtype="int8") /* ty=Tensor[(5, 14, 6), int8] */;
  %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%561, dtype="int8") /* ty=Tensor[(5, 14, 6), int8] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %566 = bitwise_and(%564, %565) /* ty=Tensor[(5, 14, 6), int8] */;
  %567 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
  (%566, %567)
}

def @func_667() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %568 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %569 = %568.0;
  %570 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 14, 15), float32] */, dtype="int8") /* ty=Tensor[(14, 14, 15), int8] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="int8") /* ty=Tensor[(14, 14, 15), int8] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %574 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %575 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %576 = subtract(%572, %573) /* ty=Tensor[(14, 14, 15), int8] */;
  %577 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %578 = %574.0;
  (%575, %576, %577, %578)
}

def @func_1244() -> Tensor[(14, 14, 15), float32] {
  %579 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %579.0
}

def @func_6878() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) {
  %580 = @func_6322() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %581 = %580.0;
  %582 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  (%581, %582)
}

def @func_10946() -> (Tensor[(30), int32], Tensor[(14, 14, 15), float32]) {
  %583 = @func_8401() /* ty=(Tensor[(30), int32],) */;
  %584 = %583.0;
  %585 = @func_9753() /* ty=Tensor[(14, 14, 15), float32] */;
  (%584, %585)
}

def @func_11880() -> Tensor[(14, 14, 15), float32] {
  %586 = @func_2171() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %586.0
}

def @func_9638() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %587 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %588 = %587.0;
  %589 = @func_9032() /* ty=Tensor[(14, 14, 15), float32] */;
  (%588, %589)
}

def @func_783() -> Tensor[(14, 14, 15), bool] {
  %590 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %591 = %590.0;
  %592 = cast(%591, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %593 = log(%592) /* ty=Tensor[(14, 14, 15), float32] */;
  %594 = cast(%593, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %595 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%591, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%596, %597) /* ty=Tensor[(14, 14, 15), bool] */
}

def @func_12812() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %598 = @func_11522() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %599 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %600 = %598.0;
  %601 = %599.0;
  (%600, %601)
}

def @func_4074(%var_4043: Tensor[(2, 24), float32], %var_4071: Tensor[(420, 1), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(2, 24), bool], Tensor[(6, 2, 8), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(420, 1), int32], Tensor[(30), int32]) {
  %602 = cast(%var_4043, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
  %603 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(2, 24), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %604 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 24), float32] */, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %606 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 24), float32] */, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %607 = reshape(%606, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
  %608 = @func_21(%607) /* ty=Tensor[(6, 2, 8), float32] */;
  %609 = cast(%608, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %610 = cast(meta[relay.Constant][31] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %611 = reshape(%610, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %612 = @func_2087(%611) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %613 = cast(%var_4071, dtype="int32") /* ty=Tensor[(420, 1), int32] */;
  %614 = cast(meta[relay.Constant][32] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %615 = reshape(%613, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %616 = reshape(%614, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %617 = @func_2990(%615, %616) /* ty=(Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) */;
  %618 = @func_1325() /* ty=Tensor[(14, 14, 15), float32] */;
  %619 = logical_or(%604, %605) /* ty=Tensor[(2, 24), bool] */;
  %620 = sinh(%609) /* ty=Tensor[(6, 2, 8), float64] */;
  %621 = %612.1;
  %622 = %617.10;
  (%618, %619, %620, %621, meta[relay.Constant][31] /* ty=Tensor[(182), float32] */, %622, %var_4071, meta[relay.Constant][32] /* ty=Tensor[(30), int32] */)
}

def @func_6516() -> Tensor[(14, 14, 15), float32] {
  %623 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %623.0
}

def @func_1609() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %624 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %625 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %626 = %624.3;
  %627 = %625.0;
  (%626, %627)
}

def @func_8749(%var_8745: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
  %628 = @func_7029() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %629 = cast(%var_8745, dtype="float32") /* ty=Tensor[(182), float32] */;
  %630 = reshape(%629, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
  %631 = @func_883(%630) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
  %632 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %633 = %628.0;
  %634 = %631.2;
  (%632, %633, %634, %var_8745)
}

def @func_14433() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(30, 1), float32], Tensor[(1, 2, 3), float64], Tensor[(6, 1), float64], Tensor[(6, 2, 8), float32]) {
  %635 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %636 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %637 = @func_4795() /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) */;
  %638 = %637.2;
  %639 = cast(%638, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %640 = cosh(%639) /* ty=Tensor[(30, 1), float32] */;
  %641 = cast(%640, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %642 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 1), float64] */;
  %643 = reshape(%642, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
  %644 = @func_3282(%643) /* ty=(Tensor[(3, 2, 3), float64], Tensor[(1, 2, 3), float64]) */;
  %645 = @func_1847() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %646 = %635.3;
  %647 = %636.0;
  %648 = tan(%641) /* ty=Tensor[(30, 1), float32] */;
  %649 = %644.1;
  %650 = %645.1;
  (%646, %647, %648, %649, meta[relay.Constant][33] /* ty=Tensor[(6, 1), float64] */, %650)
}

def @func_14185() -> Tensor[(14, 14, 15), float32] {
  @func_12874() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_14147(%var_14081: Tensor[(3, 16, 11), float64], %var_14112: Tensor[(3, 16, 11), float64]) -> (Tensor[(3, 16, 11), bool], Tensor[(14, 14, 15), float32], Tensor[(3, 16, 11), bool], Tensor[(3, 16, 11), float32], Tensor[(3, 16, 11), uint32], Tensor[(3, 16, 11), bool]) {
  %651 = cast(%var_14112, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %652 = shape_of(%var_14081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%var_14081, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %655 = @func_12721() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %656 = cast(%var_14081, dtype="float64") /* ty=Tensor[(3, 16, 11), float64] */;
  %657 = rsqrt(%656) /* ty=Tensor[(3, 16, 11), float64] */;
  %658 = cast(%var_14112, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%657, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = cast(%var_14081, dtype="float64") /* ty=Tensor[(3, 16, 11), float64] */;
  %663 = sinh(%662) /* ty=Tensor[(3, 16, 11), float64] */;
  %664 = cast(%663, dtype="float32") /* ty=Tensor[(3, 16, 11), float32] */;
  %665 = asin(%664) /* ty=Tensor[(3, 16, 11), float32] */;
  %666 = cast(%657, dtype="float32") /* ty=Tensor[(3, 16, 11), float32] */;
  %667 = shape_of(%665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%665, dtype="float32") /* ty=Tensor[(3, 16, 11), float32] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %670 = cast(%var_14081, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %671 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%657, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %674 = not_equal(%672, %673) /* ty=Tensor[(3, 16, 11), bool] */;
  %675 = cast(%var_14081, dtype="uint32") /* ty=Tensor[(3, 16, 11), uint32] */;
  %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%674, dtype="uint32") /* ty=Tensor[(3, 16, 11), uint32] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %679 = right_shift(%677, %678) /* ty=Tensor[(3, 16, 11), uint32] */;
  %680 = cast(%679, dtype="uint32") /* ty=Tensor[(3, 16, 11), uint32] */;
  %681 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%663, dtype="uint32") /* ty=Tensor[(3, 16, 11), uint32] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %684 = cast(%var_14081, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %685 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%674, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %688 = greater_equal(%653, %654) /* ty=Tensor[(3, 16, 11), bool] */;
  %689 = %655.0;
  %690 = greater(%660, %661) /* ty=Tensor[(3, 16, 11), bool] */;
  %691 = mod(%668, %669) /* ty=Tensor[(3, 16, 11), float32] */;
  %692 = minimum(%682, %683) /* ty=Tensor[(3, 16, 11), uint32] */;
  %693 = equal(%686, %687) /* ty=Tensor[(3, 16, 11), bool] */;
  (%688, %689, %690, %691, %692, %693)
}

def @func_4471() -> Tensor[(5, 14, 6), int32] {
  @func_2207() /* ty=Tensor[(5, 14, 6), int32] */
}

def @func_5234(%var_5230: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %694 = @func_3376() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %695 = cast(%var_5230, dtype="float32") /* ty=Tensor[(182), float32] */;
  %696 = reshape(%695, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %697 = @func_961(%696) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %698 = %694.1;
  %699 = %697.1;
  (%698, %699, %var_5230)
}

def @func_9032() -> Tensor[(14, 14, 15), float32] {
  @func_3160() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_10519(%var_10505: Tensor[(5, 15, 9), float32]) -> (Tensor[(5, 15, 9), float32], Tensor[(14, 14, 15), float32]) {
  %700 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %701 = shape_of(%var_10505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%var_10505, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %704 = @func_9514() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %705 = divide(%702, %703) /* ty=Tensor[(5, 15, 9), float32] */;
  %706 = %704.0;
  (%705, %706)
}

def @func_2419(%var_2392: Tensor[(1, 12, 2), float32]) -> (Tensor[(1, 12, 2), float32], Tensor[(14, 14, 15), float32]) {
  %707 = cast(%var_2392, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %708 = cosh(%707) /* ty=Tensor[(1, 12, 2), float32] */;
  %709 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  (%708, %709)
}

def @func_6939() -> Tensor[(14, 14, 15), float32] {
  %710 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %710.0
}

def @func_7379() -> Tensor[(14, 14, 15), float32] {
  %711 = @func_1573() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %711.0
}

def @func_3405() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %712 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %713 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %714 = %712.0;
  %715 = %713.1;
  (%714, %715)
}

def @func_6038() -> Tensor[(14, 14, 15), float32] {
  @func_5360() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_1847() -> (Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) {
  %716 = @func_1609() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %717 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %718 = reshape(%717, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
  %719 = %716.0;
  %720 = @func_21(%718) /* ty=Tensor[(6, 2, 8), float32] */;
  (%719, %720, meta[relay.Constant][35] /* ty=Tensor[(48), float32] */)
}

def @func_6287(%var_6209: Tensor[(12, 4), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(12, 4), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(5, 14, 6), int32]) {
  %721 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %722 = @func_2649() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %723 = %721.0;
  %724 = cast(%723, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %725 = cast(%var_6209, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %726 = reshape(%724, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %727 = reshape(%725, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %728 = @func_1769(%726, %727) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %729 = @func_5453() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %730 = %729.0;
  %731 = cast(%730, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %732 = %722.2;
  %733 = cast(%732, dtype="float32") /* ty=Tensor[(182), float32] */;
  %734 = reshape(%731, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %735 = reshape(%733, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %736 = @func_3098(%734, %735) /* ty=(Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) */;
  %737 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %738 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
  %739 = %728.0;
  %740 = %736.1;
  %741 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %742 = %737.0;
  (%723, %738, %732, %739, %var_6209, %730, %740, %741, %742)
}

def @func_11682() -> Tensor[(14, 14, 15), float32] {
  %743 = @func_6663() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %743.0
}

def @func_624() -> Tensor[(14, 14, 15), float32] {
  %744 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %744.0
}

def @func_9808(%var_9781: Tensor[(13, 14), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(13, 14), float32], Tensor[(14, 14, 15), float32]) {
  %745 = @func_6531() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %746 = cast(%var_9781, dtype="float32") /* ty=Tensor[(13, 14), float32] */;
  %747 = reshape(%746, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %748 = @func_2087(%747) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %749 = @func_1634() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %750 = %745.0;
  %751 = %748.0;
  %752 = %749.0;
  (%750, %751, %var_9781, %752)
}

def @main() -> Tensor[(8, 7, 7), float32] {
  %753 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 7, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 7), float32] */;
  acosh(%753) /* ty=Tensor[(8, 7, 7), float32] */
}

def @func_4224() -> Tensor[(14, 14, 15), float32] {
  @func_3160() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_10081(%var_10073: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %754 = cast(%var_10073, dtype="float32") /* ty=Tensor[(182), float32] */;
  %755 = reshape(%754, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %756 = @func_2087(%755) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %757 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
  %758 = %756.3;
  (%757, %758, %var_10073)
}

def @func_11947(%var_11938: Tensor[(8, 16, 15), uint16]) -> Tensor[(8, 16, 15), bool] {
  %759 = cast(%var_11938, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
  %760 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(8, 16, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 16, 15), uint16] */, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%761, %762) /* ty=Tensor[(8, 16, 15), bool] */
}

def @func_9593(%var_9578: Tensor[(9, 3, 1), int8], %var_9579: Tensor[(9, 3, 7), int8]) -> Tensor[(9, 3, 7), int8] {
  %763 = cast(%var_9578, dtype="int8") /* ty=Tensor[(9, 3, 1), int8] */;
  %764 = cast(%var_9579, dtype="int8") /* ty=Tensor[(9, 3, 7), int8] */;
  left_shift(%763, %764) /* ty=Tensor[(9, 3, 7), int8] */
}

def @func_12341() -> (Tensor[(1, 14, 13), float32],) {
  %765 = @func_2679() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %766 = %765.0;
  (%766,)
}

def @func_6663() -> (Tensor[(14, 14, 15), float32],) {
  %767 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
  (%767,)
}

def @func_9896() -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %768 = @func_5493() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
  %769 = @func_4224() /* ty=Tensor[(14, 14, 15), float32] */;
  %770 = %768.2;
  (%769, %770)
}

def @func_9733(%var_9700: Tensor[(10, 42), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(14, 14, 15), float32], Tensor[(10, 42), int32], Tensor[(30), int32]) {
  %771 = @func_6663() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %772 = @func_1847() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %773 = cast(%var_9700, dtype="int32") /* ty=Tensor[(10, 42), int32] */;
  %774 = cast(meta[relay.Constant][38] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %775 = reshape(%773, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %776 = reshape(%774, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %777 = @func_2990(%775, %776) /* ty=(Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) */;
  %778 = %771.0;
  %779 = %772.1;
  %780 = %777.2;
  (%778, %779, %780, %var_9700, meta[relay.Constant][38] /* ty=Tensor[(30), int32] */)
}

def @func_1291(%var_1255: Tensor[(182), float32], %var_1260: Tensor[(4, 12), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(4, 12), float32], Tensor[(14, 14, 15), int32], Tensor[(182, 1), float32]) {
  %781 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %782 = cast(%var_1255, dtype="float32") /* ty=Tensor[(182), float32] */;
  %783 = reshape(%782, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %784 = @func_419(%783) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
  %785 = cast(meta[relay.Constant][39] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %786 = cast(%var_1260, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %787 = reshape(%785, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %788 = reshape(%786, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %789 = @func_381(%787, %788) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %790 = %789.2;
  %791 = cast(%790, dtype="int32") /* ty=Tensor[(30), int32] */;
  %792 = cast(%var_1260, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %793 = reshape(%791, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %794 = reshape(%792, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %795 = @func_381(%793, %794) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %796 = cast(%var_1255, dtype="float32") /* ty=Tensor[(182), float32] */;
  %797 = reshape(%796, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
  %798 = @func_883(%797) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
  %799 = %781.0;
  %800 = %784.1;
  %801 = %795.0;
  %802 = %798.3;
  (%799, %800, %var_1255, %790, meta[relay.Constant][39] /* ty=Tensor[(30), int32] */, %var_1260, %801, %802)
}

def @func_3292(%var_3287: Tensor[(14, 12, 15), float32]) -> (Tensor[(14, 12, 15), float32],) {
  %803 = cast(%var_3287, dtype="float32") /* ty=Tensor[(14, 12, 15), float32] */;
  %804 = log10(%803) /* ty=Tensor[(14, 12, 15), float32] */;
  (%804,)
}

def @func_12682(%var_12671: Tensor[(1, 27), int8], %var_12672: Tensor[(189), int8]) -> (Tensor[(14, 14, 15), float32], Tensor[(9, 3, 7), int8], Tensor[(1, 27), int8], Tensor[(189), int8]) {
  %805 = cast(%var_12671, dtype="int8") /* ty=Tensor[(1, 27), int8] */;
  %806 = cast(%var_12672, dtype="int8") /* ty=Tensor[(189), int8] */;
  %807 = reshape(%805, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), int8] */;
  %808 = reshape(%806, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), int8] */;
  %809 = @func_4224() /* ty=Tensor[(14, 14, 15), float32] */;
  %810 = @func_9593(%807, %808) /* ty=Tensor[(9, 3, 7), int8] */;
  (%809, %810, %var_12671, %var_12672)
}

def @func_13075(%var_13065: Tensor[(14, 2, 7), float64]) -> (Tensor[(14, 2, 7), float64],) {
  %811 = cast(6.54968f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %812 = cast(%var_13065, dtype="float64") /* ty=Tensor[(14, 2, 7), float64] */;
  %813 = mod(%811, %812) /* ty=Tensor[(14, 2, 7), float64] */;
  (%813,)
}

def @func_13918() -> Tensor[(14, 14, 15), float32] {
  @func_12874() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_5453() -> (Tensor[(14, 14, 15), float32],) {
  %814 = @func_3160() /* ty=Tensor[(14, 14, 15), float32] */;
  (%814,)
}

def @func_13394() -> Tensor[(1, 14, 13), float64] {
  @func_12199() /* ty=Tensor[(1, 14, 13), float64] */
}

def @func_14298() -> (Tensor[(182), float32], Tensor[(182), float32]) {
  %815 = @func_13285() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %816 = @func_13363() /* ty=(Tensor[(182), float32],) */;
  %817 = %815.2;
  %818 = %816.0;
  (%817, %818)
}

def @func_3625() -> Tensor[(14, 14, 15), float32] {
  %819 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %819.0
}

def @func_7329(%var_7305: Tensor[(1, 48), float32]) -> (Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(1, 48), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32]) {
  %820 = @func_6932() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %821 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %822 = %821.0;
  %823 = cast(%822, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %824 = cast(%822, dtype="uint64") /* ty=Tensor[(14, 14, 15), uint64] */;
  %825 = cast(%var_7305, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %826 = reshape(%823, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %827 = reshape(%824, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), uint64] */;
  %828 = reshape(%825, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %829 = @func_2290(%826, %827, %828) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %830 = cast(%var_7305, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %831 = reshape(%830, newshape=[12, 4]) /* ty=Tensor[(12, 4), float32] */;
  %832 = @func_6287(%831) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(12, 4), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(5, 14, 6), int32]) */;
  %833 = %829.2;
  %834 = cast(%833, dtype="int32") /* ty=Tensor[(5, 6), int32] */;
  %835 = %820.1;
  %836 = cast(%835, dtype="int8") /* ty=Tensor[(14, 14, 15), int8] */;
  %837 = reshape(%834, newshape=[5, 6]) /* ty=Tensor[(5, 6), int32] */;
  %838 = reshape(%836, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), int8] */;
  %839 = @func_4648(%837, %838) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32], Tensor[(14, 14, 15), uint8]) */;
  %840 = %832.8;
  %841 = %839.3;
  (%835, %822, %833, %var_7305, %840, %841)
}

def @func_9753() -> Tensor[(14, 14, 15), float32] {
  %842 = @func_6993() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %842.1
}

def @func_4443() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %843 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %844 = %843.0;
  %845 = @func_1195() /* ty=Tensor[(14, 14, 15), int8] */;
  (%844, %845)
}

def @func_6726() -> Tensor[(14, 14, 15), float32] {
  %846 = @func_5268() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %846.0
}

def @func_7468() -> (Tensor[(14, 14, 15), float32],) {
  %847 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %848 = %847.0;
  (%848,)
}

def @func_7877() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %849 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %850 = @func_4795() /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) */;
  %851 = %849.0;
  %852 = %850.0;
  (%851, %852)
}

def @func_206(%var_192: Tensor[(5, 16, 5), float64]) -> (Tensor[(5, 16, 5), float64], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(5, 14, 6), int32]) {
  %853 = cast(%var_192, dtype="float64") /* ty=Tensor[(5, 16, 5), float64] */;
  %854 = cast(meta[relay.Constant][40] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %855 = reshape(%854, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
  %856 = @func_156(%855) /* ty=(Tensor[(5, 14, 6), int32],) */;
  %857 = cast(meta[relay.Constant][40] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %858 = reshape(%857, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
  %859 = @func_156(%858) /* ty=(Tensor[(5, 14, 6), int32],) */;
  %860 = atanh(%853) /* ty=Tensor[(5, 16, 5), float64] */;
  %861 = %856.0;
  %862 = %859.0;
  (%860, %861, meta[relay.Constant][40] /* ty=Tensor[(30), int32] */, %862)
}

def @func_9228(%var_9201: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float64]) {
  %863 = @func_7457() /* ty=Tensor[(14, 14, 15), float32] */;
  %864 = cast(%863, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %865 = reshape(%864, newshape=[2940]) /* ty=Tensor[(2940), float32] */;
  %866 = @func_3540(%865) /* ty=(Tensor[(24, 2), float32], Tensor[(2940), float32], Tensor[(182), float32], Tensor[(13, 3, 6), float32], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
  %867 = @func_4359() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %868 = cast(%var_9201, dtype="float32") /* ty=Tensor[(48), float32] */;
  %869 = reshape(%868, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
  %870 = @func_21(%869) /* ty=Tensor[(6, 2, 8), float32] */;
  %871 = cast(%870, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %872 = %866.7;
  %873 = %867.0;
  %874 = log2(%871) /* ty=Tensor[(6, 2, 8), float64] */;
  (%863, %872, %var_9201, %873, %874)
}

def @func_419(%var_408: Tensor[(1, 14, 13), float32]) -> (Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) {
  %875 = cast(%var_408, dtype="float32") /* ty=Tensor[(1, 14, 13), float32] */;
  %876 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %877 = erf(%875) /* ty=Tensor[(1, 14, 13), float32] */;
  %878 = %876.0;
  (%877, %878)
}

def @func_6322() -> (Tensor[(5, 14, 6), int32],) {
  %879 = @func_4471() /* ty=Tensor[(5, 14, 6), int32] */;
  (%879,)
}

def @func_21(%var_16: Tensor[(6, 1, 8), float32]) -> Tensor[(6, 2, 8), float32] {
  %880 = cast(%var_16, dtype="float32") /* ty=Tensor[(6, 1, 8), float32] */;
  %881 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 2, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 8), float32] */;
  floor_divide(%880, %881) /* ty=Tensor[(6, 2, 8), float32] */
}

def @func_11822(%var_11810: Tensor[(15, 15, 8), bool]) -> Tensor[(15, 15, 8), uint8] {
  %882 = cast(%var_11810, dtype="bool") /* ty=Tensor[(15, 15, 8), bool] */;
  %883 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(15, 15, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 15, 8), bool] */, dtype="bool") /* ty=Tensor[(15, 15, 8), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %886 = logical_or(%884, %885) /* ty=Tensor[(15, 15, 8), bool] */;
  %887 = cast(%var_11810, dtype="uint8") /* ty=Tensor[(15, 15, 8), uint8] */;
  %888 = shape_of(%886, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%886, dtype="uint8") /* ty=Tensor[(15, 15, 8), uint8] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%889, %890) /* ty=Tensor[(15, 15, 8), uint8] */
}

def @func_4266() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) {
  %891 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %892 = cast(%891, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %893 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %894 = reshape(%893, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %895 = @func_3257(%894) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) */;
  %896 = @func_2385() /* ty=Tensor[(14, 14, 15), float32] */;
  %897 = log2(%892) /* ty=Tensor[(14, 14, 15), float64] */;
  %898 = %895.1;
  (%896, %897, %898, meta[relay.Constant][43] /* ty=Tensor[(4, 12), float32] */)
}

def @func_6565(%var_6563: Tensor[(30), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(5, 84), int32], Tensor[(30), int32]) {
  %899 = @func_5493() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
  %900 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 84), int32] */, dtype="int32") /* ty=Tensor[(5, 84), int32] */;
  %901 = cast(%var_6563, dtype="int32") /* ty=Tensor[(30), int32] */;
  %902 = reshape(%900, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %903 = reshape(%901, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %904 = @func_2990(%902, %903) /* ty=(Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) */;
  %905 = %899.0;
  %906 = %904.5;
  (%905, %906, meta[relay.Constant][44] /* ty=Tensor[(5, 84), int32] */, %var_6563)
}

def @func_506() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %907 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %908 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %909 = %907.0;
  %910 = %908.0;
  (%909, %910)
}

def @func_2207() -> Tensor[(5, 14, 6), int32] {
  %911 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %911.0
}

def @func_12199() -> Tensor[(1, 14, 13), float64] {
  %912 = @func_12031() /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
  %913 = %912.0;
  %914 = cast(%913, dtype="float64") /* ty=Tensor[(1, 14, 13), float64] */;
  rsqrt(%914) /* ty=Tensor[(1, 14, 13), float64] */
}

def @func_11473() -> Tensor[(5, 14, 6), int32] {
  @func_4471() /* ty=Tensor[(5, 14, 6), int32] */
}

def @func_12781(%var_12772: Tensor[(2, 8, 3), int16]) -> (Tensor[(2, 8, 3), int16], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(14, 14, 15), float32], Tensor[(1820), int32], Tensor[(2, 8, 3), bool], Tensor[(14, 14, 15), float32]) {
  %915 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 8, 3), int16] */, dtype="int16") /* ty=Tensor[(2, 8, 3), int16] */;
  %916 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(2, 8, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 8, 3), int16] */, dtype="int16") /* ty=Tensor[(2, 8, 3), int16] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %919 = @func_11522() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %920 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %921 = cast(meta[relay.Constant][47] /* ty=Tensor[(1820), int32] */, dtype="int32") /* ty=Tensor[(1820), int32] */;
  %922 = cast(meta[relay.Constant][47] /* ty=Tensor[(1820), int32] */, dtype="int32") /* ty=Tensor[(1820), int32] */;
  %923 = reshape(%921, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), int32] */;
  %924 = reshape(%922, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), int32] */;
  %925 = @func_12403(%923, %924) /* ty=(Tensor[(14, 10, 13), float64], Tensor[(14, 14, 15), float32]) */;
  %926 = cast(%var_12772, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %927 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(2, 8, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 8, 3), int16] */, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %930 = @func_3405() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %931 = bitwise_or(%917, %918) /* ty=Tensor[(2, 8, 3), int16] */;
  %932 = %919.0;
  %933 = %920.3;
  %934 = %925.1;
  %935 = logical_or(%928, %929) /* ty=Tensor[(2, 8, 3), bool] */;
  %936 = %930.0;
  (%931, %932, %933, %934, meta[relay.Constant][47] /* ty=Tensor[(1820), int32] */, %935, %936)
}

def @func_14646(%var_14634: Tensor[(16, 3, 1), float32]) -> (Tensor[(16, 3, ?), float32],) {
  %937 = cast(%var_14634, dtype="float32") /* ty=Tensor[(16, 3, 1), float32] */;
  %938 = rsqrt(%937) /* ty=Tensor[(16, 3, 1), float32] */;
  %939 = cast(%var_14634, dtype="float32") /* ty=Tensor[(16, 3, 1), float32] */;
  %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%938, dtype="float32") /* ty=Tensor[(16, 3, 1), float32] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %943 = power(%941, %942) /* ty=Tensor[(16, 3, ?), float32] */;
  (%943,)
}

def @func_10698() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %944 = @func_10681() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %945 = %944.0;
  %946 = @func_5360() /* ty=Tensor[(14, 14, 15), float32] */;
  (%945, %946)
}

def @func_12309(%var_12287: Tensor[(12, 9, 14), float64]) -> (Tensor[(12, 9, 14), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 14, 15), float32]) {
  %947 = cast(%var_12287, dtype="float64") /* ty=Tensor[(12, 9, 14), float64] */;
  %948 = log10(%947) /* ty=Tensor[(12, 9, 14), float64] */;
  %949 = cast(%var_12287, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
  %950 = shape_of(%948, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(%948, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %953 = cast(meta[relay.Constant][48] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %954 = reshape(%953, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
  %955 = @func_3282(%954) /* ty=(Tensor[(3, 2, 3), float64], Tensor[(1, 2, 3), float64]) */;
  %956 = floor_mod(%951, %952) /* ty=Tensor[(12, 9, 14), float32] */;
  %957 = %955.1;
  %958 = @func_9032() /* ty=Tensor[(14, 14, 15), float32] */;
  (%956, %957, meta[relay.Constant][48] /* ty=Tensor[(6), float64] */, %958)
}

def @func_7593(%var_7591: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
  %959 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %960 = cast(%var_7591, dtype="float32") /* ty=Tensor[(182), float32] */;
  %961 = reshape(%960, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %962 = @func_419(%961) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
  %963 = %959.0;
  %964 = %962.0;
  (%963, %964, %var_7591)
}

def @func_10570() -> Tensor[(5, 14, 6), int32] {
  %965 = @func_7550() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %965.0
}

def @func_883(%var_874: Tensor[(182, 1), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) {
  %966 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %967 = %966.0;
  %968 = cast(%967, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %969 = cast(%var_874, dtype="float32") /* ty=Tensor[(182, 1), float32] */;
  %970 = reshape(%969, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %971 = @func_419(%970) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
  %972 = atan(%968) /* ty=Tensor[(14, 14, 15), float32] */;
  %973 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %974 = %971.0;
  (%972, %973, %974, %var_874)
}

def @func_8149(%var_8136: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %975 = @func_2124() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(30), float32]) */;
  %976 = @func_6531() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %977 = cast(%var_8136, dtype="float32") /* ty=Tensor[(182), float32] */;
  %978 = reshape(%977, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %979 = @func_1235(%978) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
  %980 = %975.0;
  %981 = %976.0;
  %982 = @func_5360() /* ty=Tensor[(14, 14, 15), float32] */;
  %983 = %979.0;
  (%980, %981, %982, %983, %var_8136)
}

def @func_8401() -> (Tensor[(30), int32],) {
  %984 = @func_2756() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(24, 2), float32]) */;
  %985 = %984.2;
  (%985,)
}

def @func_11248() -> Tensor[(14, 14, 15), float32] {
  @func_5360() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_1412() -> (Tensor[(14, 14, 15), float32],) {
  %986 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  (%986,)
}

def @func_12874() -> Tensor[(14, 14, 15), float32] {
  %987 = @func_12721() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %987.0
}

def @func_330() -> (Tensor[(14, 14, 15), float32],) {
  %988 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %989 = tan(%988) /* ty=Tensor[(14, 14, 15), float32] */;
  (%989,)
}

def @func_1769(%var_1754: Tensor[(14, 14, 15), float32], %var_1765: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) {
  %990 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %991 = %990.2;
  %992 = cast(%var_1754, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %993 = shape_of(%991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%991, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %996 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 6), int32] */, dtype="int32") /* ty=Tensor[(5, 6), int32] */;
  %997 = cast(%var_1765, dtype="float32") /* ty=Tensor[(48), float32] */;
  %998 = reshape(%996, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %999 = reshape(%997, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1000 = @func_381(%998, %999) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %1001 = equal(%994, %995) /* ty=Tensor[(14, 14, 15), bool] */;
  %1002 = %1000.2;
  (%1001, %1002, meta[relay.Constant][50] /* ty=Tensor[(5, 6), int32] */, %var_1765)
}

def @func_11522() -> (Tensor[(14, 14, 15), float32],) {
  %1003 = @func_7526() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_7713() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32]) {
  %1005 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1006 = @func_3829() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %1007 = @func_6038() /* ty=Tensor[(14, 14, 15), float32] */;
  %1008 = %1005.0;
  %1009 = %1006.0;
  (%1007, %1008, %1009)
}

def @func_13767() -> Tensor[(5, 14, 6), int32] {
  @func_11473() /* ty=Tensor[(5, 14, 6), int32] */
}

def @func_7132(%var_7112: Tensor[(14, 14, 15), float32]) -> (Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32]) {
  %1010 = @func_6663() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1011 = %1010.0;
  %1012 = cast(%var_7112, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %1013 = shape_of(%1011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(%1011, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1016 = power(%1014, %1015) /* ty=Tensor[(14, 14, 15), float64] */;
  %1017 = @func_2385() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1016, %1017)
}

def @func_12370() -> Tensor[(1, 14, 13), float32] {
  %1018 = @func_11502() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %1018.0
}

def @func_10221() -> (Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) {
  %1019 = cast(meta[relay.Constant][51] /* ty=Tensor[(300), uint32] */, dtype="uint32") /* ty=Tensor[(300), uint32] */;
  %1020 = reshape(%1019, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), uint32] */;
  %1021 = @func_9311(%1020) /* ty=(Tensor[(6, 10, 5), uint32],) */;
  %1022 = %1021.0;
  %1023 = cast(%1022, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %1024 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
  %1025 = asinh(%1023) /* ty=Tensor[(6, 10, 5), float64] */;
  %1026 = @func_2606() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1024, meta[relay.Constant][51] /* ty=Tensor[(300), uint32] */, %1025, %1026)
}

def @func_12031() -> (Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) {
  %1027 = @func_2649() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %1028 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1029 = %1027.1;
  %1030 = %1028.0;
  (%1029, %1030)
}

def @func_4747(%var_4723: Tensor[(455), int16]) -> (Tensor[(14, 14, 15), float32], Tensor[(7, 5, 13), bool], Tensor[(455), float64]) {
  %1031 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1032 = cast(%var_4723, dtype="int16") /* ty=Tensor[(455), int16] */;
  %1033 = reshape(%1032, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), int16] */;
  %1034 = @func_4200(%1033) /* ty=(Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) */;
  %1035 = cast(%var_4723, dtype="float64") /* ty=Tensor[(455), float64] */;
  %1036 = asin(%1035) /* ty=Tensor[(455), float64] */;
  %1037 = cast(%1036, dtype="float64") /* ty=Tensor[(455), float64] */;
  %1038 = %1031.2;
  %1039 = %1034.0;
  %1040 = log10(%1037) /* ty=Tensor[(455), float64] */;
  (%1038, %1039, %1040)
}

def @func_10640(%var_10634: Tensor[(312), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(312), float32]) {
  %1041 = @func_3376() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1042 = @func_8447() /* ty=(Tensor[(14, 14, 15), int8],) */;
  %1043 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1044 = cast(%var_10634, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1045 = cast(%var_10634, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1046 = reshape(%1044, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), float32] */;
  %1047 = reshape(%1045, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), float32] */;
  %1048 = @func_9151(%1046, %1047) /* ty=(Tensor[(6, 4, 13), float32],) */;
  %1049 = %1048.0;
  %1050 = cast(%1049, dtype="float32") /* ty=Tensor[(6, 4, 13), float32] */;
  %1051 = shape_of(%var_10634, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1052 = cast(%var_10634, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1053 = dyn.reshape(%1050, %1051, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1054 = %1041.1;
  %1055 = %1042.0;
  %1056 = %1043.0;
  %1057 = add(%1052, %1053) /* ty=Tensor[(312), float32] */;
  (%1054, %1055, %1056, %1057)
}

def @func_10176(%var_10172: Tensor[(1, 455), int16]) -> (Tensor[(30), int32], Tensor[(5, 16, 5), float64], Tensor[(400), float32], Tensor[(7, 5, 13), bool], Tensor[(1, 455), int16]) {
  %1058 = @func_8401() /* ty=(Tensor[(30), int32],) */;
  %1059 = cast(meta[relay.Constant][52] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1060 = reshape(%1059, newshape=[5, 16, 5]) /* ty=Tensor[(5, 16, 5), float64] */;
  %1061 = @func_206(%1060) /* ty=(Tensor[(5, 16, 5), float64], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(5, 14, 6), int32]) */;
  %1062 = cast(meta[relay.Constant][52] /* ty=Tensor[(400), float64] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %1063 = cast(%var_10172, dtype="int16") /* ty=Tensor[(1, 455), int16] */;
  %1064 = reshape(%1063, newshape=[455]) /* ty=Tensor[(455), int16] */;
  %1065 = @func_4747(%1064) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(7, 5, 13), bool], Tensor[(455), float64]) */;
  %1066 = %1058.0;
  %1067 = %1061.0;
  %1068 = sin(%1062) /* ty=Tensor[(400), float32] */;
  %1069 = %1065.1;
  (%1066, %1067, %1068, %1069, %var_10172)
}

def @func_13818() -> (Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(12, 4), float32], Tensor[(70, 6), int32]) {
  %1070 = @func_12031() /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
  %1071 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %1072 = cast(meta[relay.Constant][54] /* ty=Tensor[(70, 6), int32] */, dtype="int32") /* ty=Tensor[(70, 6), int32] */;
  %1073 = reshape(%1071, newshape=[2, 24]) /* ty=Tensor[(2, 24), float32] */;
  %1074 = reshape(%1072, newshape=[420, 1]) /* ty=Tensor[(420, 1), int32] */;
  %1075 = @func_4074(%1073, %1074) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(2, 24), bool], Tensor[(6, 2, 8), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(420, 1), int32], Tensor[(30), int32]) */;
  %1076 = %1070.0;
  %1077 = %1075.4;
  (%1076, %1077, meta[relay.Constant][53] /* ty=Tensor[(12, 4), float32] */, meta[relay.Constant][54] /* ty=Tensor[(70, 6), int32] */)
}

def @func_13251(%var_13216: int64, %var_13217: Tensor[(13, 13, 1), int64]) -> (Tensor[(13, 13, 1), bool], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) {
  %1078 = cast(%var_13216, dtype="bool") /* ty=bool */;
  %1079 = cast(%var_13217, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
  %1080 = @func_10221() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) */;
  %1081 = cast(meta[relay.Constant][55] /* ty=Tensor[(24, 2), float32] */, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
  %1082 = reshape(%1081, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1083 = @func_9228(%1082) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float64]) */;
  %1084 = greater(%1078, %1079) /* ty=Tensor[(13, 13, 1), bool] */;
  %1085 = %1080.2;
  %1086 = %1083.0;
  %1087 = @func_7379() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1084, %1085, %1086, meta[relay.Constant][55] /* ty=Tensor[(24, 2), float32] */, %1087)
}

def @func_8858() -> (Tensor[(14, 14, 15), float32],) {
  %1088 = @func_5360() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1088,)
}

def @func_14585(%var_14535: Tensor[(2, 24), float32], %var_14560: Tensor[(2, 24), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(2, 24), float64], Tensor[(14, 14, 15), float32]) {
  %1089 = cast(meta[relay.Constant][56] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1090 = reshape(%1089, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1091 = @func_2351(%1090) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(182), float32]) */;
  %1092 = cast(%var_14535, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %1093 = reshape(%1092, newshape=[12, 4]) /* ty=Tensor[(12, 4), float32] */;
  %1094 = @func_6287(%1093) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(12, 4), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(5, 14, 6), int32]) */;
  %1095 = cast(%var_14560, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %1096 = shape_of(%var_14535, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1097 = cast(%var_14535, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1099 = @func_11995() /* ty=Tensor[(14, 14, 15), float32] */;
  %1100 = %1091.0;
  %1101 = %1094.0;
  %1102 = floor_divide(%1097, %1098) /* ty=Tensor[(2, 24), float64] */;
  %1103 = @func_11995() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1099, %1100, meta[relay.Constant][56] /* ty=Tensor[(182), float32] */, %1101, %1102, %1103)
}

def @func_13204() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1104 = @func_5453() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1105 = @func_6939() /* ty=Tensor[(14, 14, 15), float32] */;
  %1106 = %1104.0;
  (%1105, %1106)
}

def @func_7730() -> Tensor[(14, 14, 15), float32] {
  @func_7457() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_12956(%var_12948: Tensor[(11, 30), int32]) -> (Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(420), int32], Tensor[(11, 30), float32]) {
  %1107 = @func_2679() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %1108 = @func_8183() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1109 = @func_3405() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %1110 = cast(meta[relay.Constant][57] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %1111 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 30), int32] */, dtype="int32") /* ty=Tensor[(1, 30), int32] */;
  %1112 = reshape(%1110, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %1113 = reshape(%1111, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %1114 = @func_2990(%1112, %1113) /* ty=(Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) */;
  %1115 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 30), int32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %1116 = cast(%var_12948, dtype="float32") /* ty=Tensor[(11, 30), float32] */;
  %1117 = %1107.0;
  %1118 = %1108.0;
  %1119 = %1109.0;
  %1120 = %1114.5;
  %1121 = mod(%1115, %1116) /* ty=Tensor[(11, 30), float32] */;
  (%1117, %1118, %1119, %1120, meta[relay.Constant][57] /* ty=Tensor[(420), int32] */, %1121)
}

def @func_6645() -> Tensor[(14, 14, 15), float32] {
  %1122 = @func_1847() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %1122.0
}

def @func_3540(%var_3490: Tensor[(2940), float32]) -> (Tensor[(24, 2), float32], Tensor[(2940), float32], Tensor[(182), float32], Tensor[(13, 3, 6), float32], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) {
  %1123 = cast(%var_3490, dtype="float32") /* ty=Tensor[(2940), float32] */;
  %1124 = cast(meta[relay.Constant][59] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1125 = reshape(%1123, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %1126 = reshape(%1124, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1127 = @func_3098(%1125, %1126) /* ty=(Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) */;
  %1128 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 6), float32] */;
  %1129 = acos(%1128) /* ty=Tensor[(13, 3, 6), float32] */;
  %1130 = cast(%1129, dtype="float32") /* ty=Tensor[(13, 3, 6), float32] */;
  %1131 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1132 = cast(meta[relay.Constant][59] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1133 = %1127.4;
  %1134 = cast(%1133, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
  %1135 = reshape(%1132, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1136 = reshape(%1134, newshape=[4, 12]) /* ty=Tensor[(4, 12), float32] */;
  %1137 = @func_1291(%1135, %1136) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(4, 12), float32], Tensor[(14, 14, 15), int32], Tensor[(182, 1), float32]) */;
  %1138 = @func_2679() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %1139 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1140 = exp(%1130) /* ty=Tensor[(13, 3, 6), float32] */;
  %1141 = %1131.0;
  %1142 = %1137.7;
  %1143 = %1138.0;
  %1144 = %1139.0;
  (%1133, %var_3490, meta[relay.Constant][59] /* ty=Tensor[(182), float32] */, %1140, %1141, %1142, %1143, %1144)
}

def @func_11035(%var_11022: Tensor[(312), float32]) -> (Tensor[(14, 14, 15), int8], Tensor[(182), float32], Tensor[(30), int32], Tensor[(14, 14, 15), int8], Tensor[(312), float32], Tensor[(14, 14, 15), float32]) {
  %1145 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %1146 = cast(meta[relay.Constant][61] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %1147 = reshape(%1146, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %1148 = @func_6565(%1147) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(5, 84), int32], Tensor[(30), int32]) */;
  %1149 = cast(%var_11022, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1150 = reshape(%1149, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %1151 = @func_10640(%1150) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(312), float32]) */;
  %1152 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1153 = %1145.1;
  %1154 = %1148.1;
  %1155 = %1151.1;
  %1156 = %1152.0;
  (%1153, %1154, meta[relay.Constant][61] /* ty=Tensor[(30), int32] */, %1155, %var_11022, %1156)
}

def @func_4000() -> (Tensor[(14, 14, 15), float32],) {
  %1157 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_7487() -> Tensor[(14, 14, 15), float32] {
  %1159 = @func_5350() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) */;
  %1159.1
}

def @func_6993() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1160 = @func_3782() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1161 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
  %1162 = %1160.1;
  (%1161, %1162)
}

def @func_8183() -> (Tensor[(14, 14, 15), float32],) {
  %1163 = @func_6726() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1163,)
}

def @func_2087(%var_2071: Tensor[(182), float32]) -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) {
  %1164 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %1165 = cast(%var_2071, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1166 = reshape(%1165, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1167 = @func_961(%1166) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %1168 = cast(meta[relay.Constant][62] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %1169 = reshape(%1168, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %1170 = @func_2047(%1169) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) */;
  %1171 = %1164.0;
  %1172 = %1167.1;
  %1173 = %1170.0;
  (%1171, %1172, %var_2071, %1173, meta[relay.Constant][62] /* ty=Tensor[(30), int32] */)
}

def @func_10788(%var_10779: Tensor[(312, 1), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(182), float32], Tensor[(312, ?), bool]) {
  %1174 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1175 = cast(meta[relay.Constant][63] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1176 = reshape(%1175, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1177 = @func_2087(%1176) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %1178 = cast(%var_10779, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
  %1179 = cast(%var_10779, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
  %1180 = reshape(%1178, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), float32] */;
  %1181 = reshape(%1179, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), float32] */;
  %1182 = @func_9151(%1180, %1181) /* ty=(Tensor[(6, 4, 13), float32],) */;
  %1183 = %1182.0;
  %1184 = cast(%1183, dtype="bool") /* ty=Tensor[(6, 4, 13), bool] */;
  %1185 = shape_of(%var_10779, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1186 = cast(%var_10779, dtype="bool") /* ty=Tensor[(312, 1), bool] */;
  %1187 = dyn.reshape(%1184, %1185, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1188 = %1174.0;
  %1189 = %1177.0;
  %1190 = logical_and(%1186, %1187) /* ty=Tensor[(312, ?), bool] */;
  (%1188, %1189, meta[relay.Constant][63] /* ty=Tensor[(182), float32] */, %1190)
}

def @func_961(%var_945: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %1191 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %1192 = %1191.1;
  %1193 = cast(%1192, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %1194 = cast(%var_945, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1195 = reshape(%1194, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %1196 = @func_419(%1195) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
  %1197 = cosh(%1193) /* ty=Tensor[(14, 14, 15), float32] */;
  %1198 = %1196.1;
  (%1197, %1198, %var_945)
}

def @func_2990(%var_2937: Tensor[(5, 14, 6), int32], %var_2980: Tensor[(30), int32]) -> (Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) {
  %1199 = @func_2756() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(24, 2), float32]) */;
  %1200 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
  %1201 = cast(%1200, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %1202 = cast(meta[relay.Constant][64] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %1203 = cast(meta[relay.Constant][65] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1204 = reshape(%1202, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %1205 = reshape(%1203, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %1206 = @func_1979(%1204, %1205) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) */;
  %1207 = cast(%1200, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %1208 = @func_2207() /* ty=Tensor[(5, 14, 6), int32] */;
  %1209 = cast(%var_2937, dtype="uint16") /* ty=Tensor[(5, 14, 6), uint16] */;
  %1210 = shape_of(%1208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1211 = cast(%1208, dtype="uint16") /* ty=Tensor[(5, 14, 6), uint16] */;
  %1212 = dyn.reshape(%1209, %1210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1213 = %1199.4;
  %1214 = cast(%1213, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
  %1215 = reshape(%1214, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
  %1216 = cast(%var_2980, dtype="int32") /* ty=Tensor[(30), int32] */;
  %1217 = reshape(%1216, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
  %1218 = @func_156(%1217) /* ty=(Tensor[(5, 14, 6), int32],) */;
  %1219 = asinh(%1201) /* ty=Tensor[(14, 14, 15), float64] */;
  %1220 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %1221 = %1206.1;
  %1222 = acos(%1207) /* ty=Tensor[(14, 14, 15), float32] */;
  %1223 = multiply(%1211, %1212) /* ty=Tensor[(5, 14, 6), uint16] */;
  %1224 = @func_21(%1215) /* ty=Tensor[(6, 2, 8), float32] */;
  %1225 = %1218.0;
  (%1213, %1219, %1220, %1221, meta[relay.Constant][64] /* ty=Tensor[(588), float64] */, meta[relay.Constant][65] /* ty=Tensor[(182), float32] */, %1222, %1223, %1224, %1225, %var_2980)
}

def @func_11240() -> (Tensor[(14, 14, 15), float32],) {
  %1226 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1226,)
}

def @func_3782() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1227 = @func_3405() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %1228 = @func_2385() /* ty=Tensor[(14, 14, 15), float32] */;
  %1229 = %1227.0;
  (%1228, %1229)
}

def @func_2679() -> (Tensor[(1, 14, 13), float32],) {
  %1230 = @func_2649() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %1231 = %1230.1;
  (%1231,)
}

def @func_7457() -> Tensor[(14, 14, 15), float32] {
  %1232 = @func_6993() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1232.0
}

def @func_6758(%var_6749: Tensor[(13, 15, 8), int32]) -> Tensor[(13, 15, 8), int32] {
  %1233 = cast(%var_6749, dtype="int32") /* ty=Tensor[(13, 15, 8), int32] */;
  %1234 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(13, 15, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1235 = cast(meta[relay.Constant][66] /* ty=Tensor[(13, 15, 8), int32] */, dtype="int32") /* ty=Tensor[(13, 15, 8), int32] */;
  %1236 = dyn.reshape(%1233, %1234, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%1235, %1236) /* ty=Tensor[(13, 15, 8), int32] */
}

def @func_13285() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %1237 = @func_9896() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %1238 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %1239 = @func_6038() /* ty=Tensor[(14, 14, 15), float32] */;
  %1240 = %1237.1;
  (%1238, %1239, %1240)
}

def @func_1979(%var_1963: Tensor[(6, 7, 14), float64], %var_1970: Tensor[(1, 182), float32]) -> (Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) {
  %1241 = cast(%var_1963, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %1242 = cast(%var_1970, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %1243 = reshape(%1242, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1244 = @func_961(%1243) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %1245 = atanh(%1241) /* ty=Tensor[(6, 7, 14), float64] */;
  %1246 = %1244.2;
  (%1245, %1246, %var_1970)
}

def @func_13528() -> Tensor[(14, 14, 15), float32] {
  %1247 = @func_6663() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1247.0
}

def @func_8014(%var_7977: Tensor[(9, 10, 14), float32], %var_7978: Tensor[(9, 10, 14), float32]) -> (Tensor[(9, 10, 14), int8], Tensor[(14, 14, 15), bool]) {
  %1248 = cast(%var_7978, dtype="float32") /* ty=Tensor[(9, 10, 14), float32] */;
  %1249 = shape_of(%var_7977, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1250 = cast(%var_7977, dtype="float32") /* ty=Tensor[(9, 10, 14), float32] */;
  %1251 = dyn.reshape(%1248, %1249, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1252 = multiply(%1250, %1251) /* ty=Tensor[(9, 10, 14), float32] */;
  %1253 = cast(%var_7977, dtype="int8") /* ty=Tensor[(9, 10, 14), int8] */;
  %1254 = shape_of(%1252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1255 = cast(%1252, dtype="int8") /* ty=Tensor[(9, 10, 14), int8] */;
  %1256 = dyn.reshape(%1253, %1254, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1257 = maximum(%1255, %1256) /* ty=Tensor[(9, 10, 14), int8] */;
  %1258 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  (%1257, %1258)
}

def @func_7049(%var_7044: Tensor[(6, 9, 5), float32]) -> (Tensor[(6, 9, 5), float32], Tensor[(14, 14, 15), float32]) {
  %1259 = cast(%var_7044, dtype="float32") /* ty=Tensor[(6, 9, 5), float32] */;
  %1260 = log2(%1259) /* ty=Tensor[(6, 9, 5), float32] */;
  %1261 = @func_6726() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1260, %1261)
}

def @func_6978() -> (Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32]) {
  %1262 = @func_4359() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1263 = %1262.0;
  %1264 = @func_4471() /* ty=Tensor[(5, 14, 6), int32] */;
  (%1263, %1264)
}

def @func_3952(%var_3928: Tensor[(5, 8, 2), int64]) -> (Tensor[(5, 8, 2), int64], Tensor[(5, 6), int32], Tensor[(2940), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32]) {
  %1265 = cast(meta[relay.Constant][67] /* ty=Tensor[(5, 8, 2), int64] */, dtype="int64") /* ty=Tensor[(5, 8, 2), int64] */;
  %1266 = shape_of(%var_3928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1267 = cast(%var_3928, dtype="int64") /* ty=Tensor[(5, 8, 2), int64] */;
  %1268 = dyn.reshape(%1265, %1266, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1269 = cast(meta[relay.Constant][68] /* ty=Tensor[(2940), float32] */, dtype="float32") /* ty=Tensor[(2940), float32] */;
  %1270 = cast(meta[relay.Constant][69] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1271 = reshape(%1269, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %1272 = reshape(%1270, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1273 = @func_1769(%1271, %1272) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %1274 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1275 = minimum(%1267, %1268) /* ty=Tensor[(5, 8, 2), int64] */;
  %1276 = %1273.2;
  %1277 = %1274.0;
  (%1275, %1276, meta[relay.Constant][68] /* ty=Tensor[(2940), float32] */, meta[relay.Constant][69] /* ty=Tensor[(48), float32] */, %1277)
}

def @func_836() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %1278 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1279 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %1280 = %1278.1;
  (%1279, %1280)
}

def @func_14341() -> (Tensor[(30), float32], Tensor[(14, 14, 15), float32]) {
  %1281 = @func_2124() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(30), float32]) */;
  %1282 = %1281.1;
  %1283 = @func_7379() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1282, %1283)
}

def @func_13649() -> (Tensor[(1, 14, 13), float32],) {
  %1284 = @func_5188() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %1285 = %1284.0;
  (%1285,)
}

def @func_2385() -> Tensor[(14, 14, 15), float32] {
  %1286 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1286.0
}

def @func_10495() -> (Tensor[(4, 12), float32], Tensor[(14, 14, 15), float32]) {
  %1287 = @func_4266() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
  %1288 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1289 = %1287.3;
  %1290 = %1288.0;
  (%1289, %1290)
}

def @func_8447() -> (Tensor[(14, 14, 15), int8],) {
  %1291 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %1292 = %1291.1;
  (%1292,)
}

def @func_14698() -> (Tensor[(182), float32], Tensor[(14, 14, 15), float32]) {
  %1293 = @func_13363() /* ty=(Tensor[(182), float32],) */;
  %1294 = %1293.0;
  %1295 = cast(%1294, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1296 = reshape(%1295, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1297 = @func_8149(%1296) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %1298 = %1297.3;
  (%1294, %1298)
}

def @func_9514() -> (Tensor[(14, 14, 15), float32],) {
  %1299 = @func_3160() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1299,)
}

def @func_5822(%var_5819: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(48), float32]) {
  %1300 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1301 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %1302 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %1303 = cast(%1302, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %1304 = cast(%var_5819, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1305 = reshape(%1304, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1306 = @func_3257(%1305) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) */;
  %1307 = %1300.0;
  %1308 = @func_3160() /* ty=Tensor[(14, 14, 15), float32] */;
  %1309 = %1301.0;
  %1310 = rsqrt(%1303) /* ty=Tensor[(14, 14, 15), float64] */;
  %1311 = %1306.1;
  (%1307, %1308, %1309, %1310, %1311, %var_5819)
}

def @func_14283() -> (Tensor[(5, 14, 6), int32],) {
  %1312 = @func_11473() /* ty=Tensor[(5, 14, 6), int32] */;
  (%1312,)
}

def @func_3160() -> Tensor[(14, 14, 15), float32] {
  %1313 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1313.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4224() -> Tensor[(14, 14, 15), float32] {
  @func_3160() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_1108(%var_1106: Tensor[(30), int32], %var_1107: Tensor[(24, 2), float32]) -> (Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) {
  %23 = fn (%var_1061: Tensor[(30), int32], %var_1062: Tensor[(24, 2), float32]) -> (Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) {
    %0 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1 = %0.0;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 14, 15), float32] */, dtype="int32") /* ty=Tensor[(14, 14, 15), int32] */;
    %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
    %4 = cast(%1, dtype="int32") /* ty=Tensor[(14, 14, 15), int32] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 14, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
    %7 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
    %8 = cast(%1, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
    %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %10 = cast(%var_1061, dtype="int32") /* ty=Tensor[(30), int32] */;
    %11 = cast(%var_1062, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
    %12 = reshape(%10, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %13 = reshape(%11, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %14 = @func_381(%12, %13) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
    %15 = %14.4;
    %16 = cast(%15, dtype="float32") /* ty=Tensor[(48), float32] */;
    %17 = reshape(%16, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
    %18 = @func_21(%17) /* ty=Tensor[(6, 2, 8), float32] */;
    %19 = cast(%18, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
    %20 = left_shift(%4, %5) /* ty=Tensor[(14, 14, 15), int32] */;
    %21 = greater_equal(%8, %9) /* ty=Tensor[(14, 14, 15), bool] */;
    %22 = erf(%19) /* ty=Tensor[(6, 2, 8), float64] */;
    (%20, %21, %15, %var_1061, %var_1062, %22)
  };
  %23(%var_1106, %var_1107) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) */
}

def @func_8184() -> (Tensor[(14, 14, 15), float32],) {
  %25 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %24 = @func_6726() /* ty=Tensor[(14, 14, 15), float32] */;
    (%24,)
  };
  %25() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_4689() -> (Tensor[(14, 14, 15), float32],) {
  @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_7595(%var_7594: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
  %32 = fn (%var_7591: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
    %26 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %27 = cast(%var_7591, dtype="float32") /* ty=Tensor[(182), float32] */;
    %28 = reshape(%27, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
    %29 = @func_419(%28) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
    %30 = %26.0;
    %31 = %29.0;
    (%30, %31, %var_7591)
  };
  %32(%var_7594) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */
}

def @func_10572() -> Tensor[(5, 14, 6), int32] {
  @func_10570() /* ty=Tensor[(5, 14, 6), int32] */
}

def @func_14648(%var_14647: Tensor[(16, 3, 1), float32]) -> (Tensor[(16, 3, ?), float32],) {
  %40 = fn (%var_14634: Tensor[(16, 3, 1), float32]) -> (Tensor[(16, 3, ?), float32],) {
    %33 = cast(%var_14634, dtype="float32") /* ty=Tensor[(16, 3, 1), float32] */;
    %34 = rsqrt(%33) /* ty=Tensor[(16, 3, 1), float32] */;
    %35 = cast(%var_14634, dtype="float32") /* ty=Tensor[(16, 3, 1), float32] */;
    %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
    %37 = cast(%34, dtype="float32") /* ty=Tensor[(16, 3, 1), float32] */;
    %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %39 = power(%37, %38) /* ty=Tensor[(16, 3, ?), float32] */;
    (%39,)
  };
  %40(%var_14647) /* ty=(Tensor[(16, 3, ?), float32],) */
}

def @func_4443() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %41 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %42 = %41.0;
  %43 = @func_1195() /* ty=Tensor[(14, 14, 15), int8] */;
  (%42, %43)
}

def @func_8639() -> (Tensor[(14, 14, 15), float32],) {
  %44 = @func_5268() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %45 = %44.0;
  (%45,)
}

def @func_12722() -> (Tensor[(14, 14, 15), float32],) {
  %48 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %46 = @func_3376() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %47 = %46.1;
    (%47,)
  };
  %48() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_14298() -> (Tensor[(182), float32], Tensor[(182), float32]) {
  %49 = @func_13285() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %50 = @func_13363() /* ty=(Tensor[(182), float32],) */;
  %51 = %49.2;
  %52 = %50.0;
  (%51, %52)
}

def @func_6290(%var_6288: Tensor[(12, 4), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(12, 4), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(5, 14, 6), int32]) {
  @func_6287(%var_6288) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(12, 4), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(5, 14, 6), int32]) */
}

def @func_7675(%var_7641: Tensor[(30), int32]) -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32], Tensor[(12, 4), float32]) {
  %53 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %54 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %55 = cast(%var_7641, dtype="int32") /* ty=Tensor[(30), int32] */;
  %56 = reshape(%55, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %57 = @func_6565(%56) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(5, 84), int32], Tensor[(30), int32]) */;
  %58 = cast(%var_7641, dtype="int32") /* ty=Tensor[(30), int32] */;
  %59 = reshape(%58, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %60 = @func_2047(%59) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) */;
  %61 = %53.0;
  %62 = %54.0;
  %63 = @func_6645() /* ty=Tensor[(14, 14, 15), float32] */;
  %64 = %57.0;
  %65 = %60.3;
  (%61, %62, %63, %64, %var_7641, %65)
}

def @func_6665() -> (Tensor[(14, 14, 15), float32],) {
  @func_6663() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_669() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_9665() -> (Tensor[(14, 14, 15), float32],) {
  %68 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %66 = @func_6932() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %67 = %66.0;
    (%67,)
  };
  %68() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_1348() -> (Tensor[(2, 9, 11), float64],) {
  %69 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 11), float64] */;
  %70 = log2(%69) /* ty=Tensor[(2, 9, 11), float64] */;
  (%70,)
}

def @func_2172() -> (Tensor[(14, 14, 15), float32],) {
  %72 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %71 = @func_1325() /* ty=Tensor[(14, 14, 15), float32] */;
    (%71,)
  };
  %72() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_12441() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %76 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %73 = @func_10681() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %74 = @func_7379() /* ty=Tensor[(14, 14, 15), float32] */;
    %75 = %73.0;
    (%74, %75)
  };
  %76() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_6680() -> (Tensor[(14, 14, 15), float32],) {
  %77 = @func_6628() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %78 = %77.0;
  (%78,)
}

def @func_13701() -> (Tensor[(5, 14, 6), int32],) {
  @func_13699() /* ty=(Tensor[(5, 14, 6), int32],) */
}

def @func_14699() -> (Tensor[(182), float32], Tensor[(14, 14, 15), float32]) {
  %85 = fn () -> (Tensor[(182), float32], Tensor[(14, 14, 15), float32]) {
    %79 = @func_13363() /* ty=(Tensor[(182), float32],) */;
    %80 = %79.0;
    %81 = cast(%80, dtype="float32") /* ty=Tensor[(182), float32] */;
    %82 = reshape(%81, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %83 = @func_8149(%82) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
    %84 = %83.3;
    (%80, %84)
  };
  %85() /* ty=(Tensor[(182), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_886(%var_884: Tensor[(182, 1), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) {
  @func_883(%var_884) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */
}

def @func_8447() -> (Tensor[(14, 14, 15), int8],) {
  %86 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %87 = %86.1;
  (%87,)
}

def @func_10084(%var_10082: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  @func_10081(%var_10082) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */
}

def @func_5453() -> (Tensor[(14, 14, 15), float32],) {
  %88 = @func_3160() /* ty=Tensor[(14, 14, 15), float32] */;
  (%88,)
}

def @func_11824(%var_11823: Tensor[(15, 15, 8), bool]) -> Tensor[(15, 15, 8), uint8] {
  %98 = fn (%var_11810: Tensor[(15, 15, 8), bool]) -> Tensor[(15, 15, 8), uint8] {
    %89 = cast(%var_11810, dtype="bool") /* ty=Tensor[(15, 15, 8), bool] */;
    %90 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(15, 15, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %91 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 15, 8), bool] */, dtype="bool") /* ty=Tensor[(15, 15, 8), bool] */;
    %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %93 = logical_or(%91, %92) /* ty=Tensor[(15, 15, 8), bool] */;
    %94 = cast(%var_11810, dtype="uint8") /* ty=Tensor[(15, 15, 8), uint8] */;
    %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
    %96 = cast(%93, dtype="uint8") /* ty=Tensor[(15, 15, 8), uint8] */;
    %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_xor(%96, %97) /* ty=Tensor[(15, 15, 8), uint8] */
  };
  %98(%var_11823) /* ty=Tensor[(15, 15, 8), uint8] */
}

def @func_10316(%var_10292: Tensor[(26, 7), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(26, 7), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) {
  %99 = cast(%var_10292, dtype="float32") /* ty=Tensor[(26, 7), float32] */;
  %100 = reshape(%99, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %101 = @func_2087(%100) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %102 = @func_5350() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) */;
  %103 = @func_5421() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), float64], Tensor[(455), int16]) */;
  %104 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
  %105 = %101.3;
  %106 = %102.1;
  %107 = %103.4;
  (%104, %105, %var_10292, %106, %107)
}

def @func_10716() -> (Tensor[(5, 14, 6), int32],) {
  @func_10714() /* ty=(Tensor[(5, 14, 6), int32],) */
}

def @func_4317(%var_4315: Tensor[(10, 3, 15), float32], %var_4316: Tensor[(455), int16]) -> (Tensor[(10, 3, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) {
  @func_4313(%var_4315, %var_4316) /* ty=(Tensor[(10, 3, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) */
}

def @func_2295(%var_2292: Tensor[(14, 14, 15), float32], %var_2293: Tensor[(14, 14, 15), uint64], %var_2294: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(48), float32]) {
  @func_2290(%var_2292, %var_2293, %var_2294) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(48), float32]) */
}

def @func_2049(%var_2048: Tensor[(30), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) {
  %120 = fn (%var_2009: Tensor[(30), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) {
    %108 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
    %109 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 14, 15), bool] */, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
    %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(3), int32] */;
    %111 = cast(%108, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
    %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %113 = cast(%var_2009, dtype="int32") /* ty=Tensor[(30), int32] */;
    %114 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
    %115 = reshape(%113, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %116 = reshape(%114, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %117 = @func_381(%115, %116) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
    %118 = floor_mod(%111, %112) /* ty=Tensor[(14, 14, 15), float32] */;
    %119 = %117.0;
    (%118, %119, %var_2009, meta[relay.Constant][4] /* ty=Tensor[(12, 4), float32] */)
  };
  %120(%var_2048) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) */
}

def @func_5269() -> (Tensor[(14, 14, 15), float32],) {
  %122 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %121 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
    (%121,)
  };
  %122() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_13768() -> Tensor[(5, 14, 6), int32] {
  %123 = fn () -> Tensor[(5, 14, 6), int32] {
    @func_11473() /* ty=Tensor[(5, 14, 6), int32] */
  };
  %123() /* ty=Tensor[(5, 14, 6), int32] */
}

def @func_4976(%var_4974: Tensor[(9, 10, 11), float32], %var_4975: Tensor[(9, 10, 11), float32]) -> (Tensor[(9, 10, 11), bool], Tensor[(9, 10, 11), float64], Tensor[(14, 14, 15), float32], Tensor[(30), int32], Tensor[(48), float32], Tensor[(5, 84), int32]) {
  @func_4972(%var_4974, %var_4975) /* ty=(Tensor[(9, 10, 11), bool], Tensor[(9, 10, 11), float64], Tensor[(14, 14, 15), float32], Tensor[(30), int32], Tensor[(48), float32], Tensor[(5, 84), int32]) */
}

def @func_6646() -> Tensor[(14, 14, 15), float32] {
  %125 = fn () -> Tensor[(14, 14, 15), float32] {
    %124 = @func_1847() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
    %124.0
  };
  %125() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_785() -> Tensor[(14, 14, 15), bool] {
  @func_783() /* ty=Tensor[(14, 14, 15), bool] */
}

def @func_7730() -> Tensor[(14, 14, 15), float32] {
  @func_7457() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_11881() -> Tensor[(14, 14, 15), float32] {
  %127 = fn () -> Tensor[(14, 14, 15), float32] {
    %126 = @func_2171() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %126.0
  };
  %127() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_5888() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) {
  %132 = fn () -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) {
    %128 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
    %129 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %130 = %128.0;
    %131 = %129.0;
    (%130, %131)
  };
  %132() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) */
}

def @func_3377() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %136 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %133 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %134 = %133.0;
    %135 = @func_2385() /* ty=Tensor[(14, 14, 15), float32] */;
    (%134, %135)
  };
  %136() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_4129(%var_4110: Tensor[(5, 14, 6), int32]) -> (Tensor[(5, 14, 6), int8], Tensor[(14, 14, 15), float32]) {
  %137 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %138 = %137.0;
  %139 = cast(%var_4110, dtype="int8") /* ty=Tensor[(5, 14, 6), int8] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%138, dtype="int8") /* ty=Tensor[(5, 14, 6), int8] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %143 = bitwise_and(%141, %142) /* ty=Tensor[(5, 14, 6), int8] */;
  %144 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
  (%143, %144)
}

def @func_4268() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) {
  @func_4266() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */
}

def @func_507() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %149 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %145 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %146 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %147 = %145.0;
    %148 = %146.0;
    (%147, %148)
  };
  %149() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_3162() -> Tensor[(14, 14, 15), float32] {
  @func_3160() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_5423() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), float64], Tensor[(455), int16]) {
  @func_5421() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), float64], Tensor[(455), int16]) */
}

def @func_12781(%var_12772: Tensor[(2, 8, 3), int16]) -> (Tensor[(2, 8, 3), int16], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(14, 14, 15), float32], Tensor[(1820), int32], Tensor[(2, 8, 3), bool], Tensor[(14, 14, 15), float32]) {
  %150 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 8, 3), int16] */, dtype="int16") /* ty=Tensor[(2, 8, 3), int16] */;
  %151 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(2, 8, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 8, 3), int16] */, dtype="int16") /* ty=Tensor[(2, 8, 3), int16] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %154 = @func_11522() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %155 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %156 = cast(meta[relay.Constant][7] /* ty=Tensor[(1820), int32] */, dtype="int32") /* ty=Tensor[(1820), int32] */;
  %157 = cast(meta[relay.Constant][7] /* ty=Tensor[(1820), int32] */, dtype="int32") /* ty=Tensor[(1820), int32] */;
  %158 = reshape(%156, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), int32] */;
  %159 = reshape(%157, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), int32] */;
  %160 = @func_12403(%158, %159) /* ty=(Tensor[(14, 10, 13), float64], Tensor[(14, 14, 15), float32]) */;
  %161 = cast(%var_12772, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %162 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(2, 8, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 8, 3), int16] */, dtype="bool") /* ty=Tensor[(2, 8, 3), bool] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %165 = @func_3405() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %166 = bitwise_or(%152, %153) /* ty=Tensor[(2, 8, 3), int16] */;
  %167 = %154.0;
  %168 = %155.3;
  %169 = %160.1;
  %170 = logical_or(%163, %164) /* ty=Tensor[(2, 8, 3), bool] */;
  %171 = %165.0;
  (%166, %167, %168, %169, meta[relay.Constant][7] /* ty=Tensor[(1820), int32] */, %170, %171)
}

def @func_2990(%var_2937: Tensor[(5, 14, 6), int32], %var_2980: Tensor[(30), int32]) -> (Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) {
  %172 = @func_2756() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(24, 2), float32]) */;
  %173 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
  %174 = cast(%173, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %175 = cast(meta[relay.Constant][8] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %176 = cast(meta[relay.Constant][9] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %177 = reshape(%175, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %178 = reshape(%176, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %179 = @func_1979(%177, %178) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) */;
  %180 = cast(%173, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %181 = @func_2207() /* ty=Tensor[(5, 14, 6), int32] */;
  %182 = cast(%var_2937, dtype="uint16") /* ty=Tensor[(5, 14, 6), uint16] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%181, dtype="uint16") /* ty=Tensor[(5, 14, 6), uint16] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %186 = %172.4;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
  %188 = reshape(%187, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
  %189 = cast(%var_2980, dtype="int32") /* ty=Tensor[(30), int32] */;
  %190 = reshape(%189, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
  %191 = @func_156(%190) /* ty=(Tensor[(5, 14, 6), int32],) */;
  %192 = asinh(%174) /* ty=Tensor[(14, 14, 15), float64] */;
  %193 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %194 = %179.1;
  %195 = acos(%180) /* ty=Tensor[(14, 14, 15), float32] */;
  %196 = multiply(%184, %185) /* ty=Tensor[(5, 14, 6), uint16] */;
  %197 = @func_21(%188) /* ty=Tensor[(6, 2, 8), float32] */;
  %198 = %191.0;
  (%186, %192, %193, %194, meta[relay.Constant][8] /* ty=Tensor[(588), float64] */, meta[relay.Constant][9] /* ty=Tensor[(182), float32] */, %195, %196, %197, %198, %var_2980)
}

def @func_6322() -> (Tensor[(5, 14, 6), int32],) {
  %199 = @func_4471() /* ty=Tensor[(5, 14, 6), int32] */;
  (%199,)
}

def @func_1325() -> Tensor[(14, 14, 15), float32] {
  @func_1244() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_4750(%var_4748: Tensor[(455), int16]) -> (Tensor[(14, 14, 15), float32], Tensor[(7, 5, 13), bool], Tensor[(455), float64]) {
  @func_4747(%var_4748) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(7, 5, 13), bool], Tensor[(455), float64]) */
}

def @func_10946() -> (Tensor[(30), int32], Tensor[(14, 14, 15), float32]) {
  %200 = @func_8401() /* ty=(Tensor[(30), int32],) */;
  %201 = %200.0;
  %202 = @func_9753() /* ty=Tensor[(14, 14, 15), float32] */;
  (%201, %202)
}

def @func_10497() -> (Tensor[(4, 12), float32], Tensor[(14, 14, 15), float32]) {
  @func_10495() /* ty=(Tensor[(4, 12), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_10642(%var_10641: Tensor[(312), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(312), float32]) {
  %220 = fn (%var_10634: Tensor[(312), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(312), float32]) {
    %203 = @func_3376() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %204 = @func_8447() /* ty=(Tensor[(14, 14, 15), int8],) */;
    %205 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %206 = cast(%var_10634, dtype="float32") /* ty=Tensor[(312), float32] */;
    %207 = cast(%var_10634, dtype="float32") /* ty=Tensor[(312), float32] */;
    %208 = reshape(%206, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), float32] */;
    %209 = reshape(%207, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), float32] */;
    %210 = @func_9151(%208, %209) /* ty=(Tensor[(6, 4, 13), float32],) */;
    %211 = %210.0;
    %212 = cast(%211, dtype="float32") /* ty=Tensor[(6, 4, 13), float32] */;
    %213 = shape_of(%var_10634, dtype="int32") /* ty=Tensor[(1), int32] */;
    %214 = cast(%var_10634, dtype="float32") /* ty=Tensor[(312), float32] */;
    %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?), float32] */;
    %216 = %203.1;
    %217 = %204.0;
    %218 = %205.0;
    %219 = add(%214, %215) /* ty=Tensor[(312), float32] */;
    (%216, %217, %218, %219)
  };
  %220(%var_10641) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(312), float32]) */
}

def @func_9516() -> (Tensor[(14, 14, 15), float32],) {
  @func_9514() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_561() -> (Tensor[(14, 14, 15), float32],) {
  %223 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %221 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %222 = %221.0;
    (%222,)
  };
  %223() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_2125() -> (Tensor[(14, 14, 15), float32], Tensor[(30), float32]) {
  %234 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(30), float32]) {
    %224 = cast(meta[relay.Constant][10] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
    %225 = reshape(%224, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %226 = @func_2047(%225) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) */;
    %227 = %226.2;
    %228 = cast(%227, dtype="float32") /* ty=Tensor[(30), float32] */;
    %229 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %230 = cast(meta[relay.Constant][10] /* ty=Tensor[(30), int32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
    %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?), float32] */;
    %232 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
    %233 = floor_divide(%230, %231) /* ty=Tensor[(30), float32] */;
    (%232, %233)
  };
  %234() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(30), float32]) */
}

def @func_331() -> (Tensor[(14, 14, 15), float32],) {
  %237 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %235 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
    %236 = tan(%235) /* ty=Tensor[(14, 14, 15), float32] */;
    (%236,)
  };
  %237() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_8527() -> (Tensor[(14, 14, 15), float64],) {
  %238 = @func_4266() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
  %239 = %238.1;
  (%239,)
}

def @func_3406() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %244 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
    %240 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %241 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %242 = %240.0;
    %243 = %241.1;
    (%242, %243)
  };
  %244() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */
}

def @func_4200(%var_4178: Tensor[(7, 5, 13), int16]) -> (Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) {
  %245 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 5, 13), int16] */, dtype="bool") /* ty=Tensor[(7, 5, 13), bool] */;
  %246 = shape_of(%var_4178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%var_4178, dtype="bool") /* ty=Tensor[(7, 5, 13), bool] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %249 = less_equal(%247, %248) /* ty=Tensor[(7, 5, 13), bool] */;
  %250 = @func_3625() /* ty=Tensor[(14, 14, 15), float32] */;
  (%249, %250)
}

def @func_6518() -> Tensor[(14, 14, 15), float32] {
  @func_6516() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_12406(%var_12404: Tensor[(14, 10, 13), int32], %var_12405: Tensor[(14, 10, 13), int32]) -> (Tensor[(14, 10, 13), float64], Tensor[(14, 14, 15), float32]) {
  %260 = fn (%var_12382: Tensor[(14, 10, 13), int32], %var_12383: Tensor[(14, 10, 13), int32]) -> (Tensor[(14, 10, 13), float64], Tensor[(14, 14, 15), float32]) {
    %251 = cast(%var_12383, dtype="int32") /* ty=Tensor[(14, 10, 13), int32] */;
    %252 = shape_of(%var_12382, dtype="int32") /* ty=Tensor[(3), int32] */;
    %253 = cast(%var_12382, dtype="int32") /* ty=Tensor[(14, 10, 13), int32] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %255 = bitwise_or(%253, %254) /* ty=Tensor[(14, 10, 13), int32] */;
    %256 = cast(%255, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
    %257 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %258 = asinh(%256) /* ty=Tensor[(14, 10, 13), float64] */;
    %259 = %257.0;
    (%258, %259)
  };
  %260(%var_12404, %var_12405) /* ty=(Tensor[(14, 10, 13), float64], Tensor[(14, 14, 15), float32]) */
}

def @func_13530() -> Tensor[(14, 14, 15), float32] {
  @func_13528() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_9808(%var_9781: Tensor[(13, 14), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(13, 14), float32], Tensor[(14, 14, 15), float32]) {
  %261 = @func_6531() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %262 = cast(%var_9781, dtype="float32") /* ty=Tensor[(13, 14), float32] */;
  %263 = reshape(%262, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %264 = @func_2087(%263) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %265 = @func_1634() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %266 = %261.0;
  %267 = %264.0;
  %268 = %265.0;
  (%266, %267, %var_9781, %268)
}

def @func_10698() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %269 = @func_10681() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %270 = %269.0;
  %271 = @func_5360() /* ty=Tensor[(14, 14, 15), float32] */;
  (%270, %271)
}

def @func_13364() -> (Tensor[(182), float32],) {
  %274 = fn () -> (Tensor[(182), float32],) {
    %272 = @func_5493() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
    %273 = %272.1;
    (%273,)
  };
  %274() /* ty=(Tensor[(182), float32],) */
}

def @func_7488() -> Tensor[(14, 14, 15), float32] {
  %276 = fn () -> Tensor[(14, 14, 15), float32] {
    %275 = @func_5350() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) */;
    %275.1
  };
  %276() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_10570() -> Tensor[(5, 14, 6), int32] {
  %277 = @func_7550() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %277.0
}

def @func_7132(%var_7112: Tensor[(14, 14, 15), float32]) -> (Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32]) {
  %278 = @func_6663() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %279 = %278.0;
  %280 = cast(%var_7112, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%279, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %284 = power(%282, %283) /* ty=Tensor[(14, 14, 15), float64] */;
  %285 = @func_2385() /* ty=Tensor[(14, 14, 15), float32] */;
  (%284, %285)
}

def @func_9151(%var_9136: Tensor[(6, 4, 13), float32], %var_9137: Tensor[(6, 4, 13), float32]) -> (Tensor[(6, 4, 13), float32],) {
  %286 = cast(%var_9137, dtype="float32") /* ty=Tensor[(6, 4, 13), float32] */;
  %287 = shape_of(%var_9136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%var_9136, dtype="float32") /* ty=Tensor[(6, 4, 13), float32] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %290 = divide(%288, %289) /* ty=Tensor[(6, 4, 13), float32] */;
  (%290,)
}

def @func_3292(%var_3287: Tensor[(14, 12, 15), float32]) -> (Tensor[(14, 12, 15), float32],) {
  %291 = cast(%var_3287, dtype="float32") /* ty=Tensor[(14, 12, 15), float32] */;
  %292 = log10(%291) /* ty=Tensor[(14, 12, 15), float32] */;
  (%292,)
}

def @func_24(%var_22: Tensor[(6, 1, 8), float32]) -> Tensor[(6, 2, 8), float32] {
  @func_21(%var_22) /* ty=Tensor[(6, 2, 8), float32] */
}

def @func_11770() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(6, 10, 5), float64], Tensor[(5, 14, 6), int32]) {
  %304 = fn () -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(6, 10, 5), float64], Tensor[(5, 14, 6), int32]) {
    %293 = @func_7550() /* ty=(Tensor[(5, 14, 6), int32],) */;
    %294 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %295 = @func_6932() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %296 = @func_6322() /* ty=(Tensor[(5, 14, 6), int32],) */;
    %297 = @func_10221() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) */;
    %298 = %293.0;
    %299 = %294.0;
    %300 = %295.1;
    %301 = %296.0;
    %302 = %297.2;
    %303 = @func_11473() /* ty=Tensor[(5, 14, 6), int32] */;
    (%298, %299, %300, %301, %302, %303)
  };
  %304() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(6, 10, 5), float64], Tensor[(5, 14, 6), int32]) */
}

def @func_6531() -> (Tensor[(14, 14, 15), float32],) {
  %305 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %306 = %305.0;
  (%306,)
}

def @func_6663() -> (Tensor[(14, 14, 15), float32],) {
  %307 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
  (%307,)
}

def @func_624() -> Tensor[(14, 14, 15), float32] {
  %308 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %308.0
}

def @func_2209() -> Tensor[(5, 14, 6), int32] {
  @func_2207() /* ty=Tensor[(5, 14, 6), int32] */
}

def @func_6941() -> Tensor[(14, 14, 15), float32] {
  @func_6939() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_2419(%var_2392: Tensor[(1, 12, 2), float32]) -> (Tensor[(1, 12, 2), float32], Tensor[(14, 14, 15), float32]) {
  %309 = cast(%var_2392, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %310 = cosh(%309) /* ty=Tensor[(1, 12, 2), float32] */;
  %311 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  (%310, %311)
}

def @func_12372() -> Tensor[(1, 14, 13), float32] {
  @func_12370() /* ty=Tensor[(1, 14, 13), float32] */
}

def @func_2650() -> (Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
  %318 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
    %312 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %313 = cast(meta[relay.Constant][13] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %314 = reshape(%313, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
    %315 = @func_883(%314) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
    %316 = %312.0;
    %317 = %315.2;
    (%316, %317, meta[relay.Constant][13] /* ty=Tensor[(182), float32] */)
  };
  %318() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */
}

def @func_4360() -> (Tensor[(14, 14, 15), float32],) {
  %321 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %319 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %320 = %319.0;
    (%320,)
  };
  %321() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_9597(%var_9595: Tensor[(9, 3, 1), int8], %var_9596: Tensor[(9, 3, 7), int8]) -> Tensor[(9, 3, 7), int8] {
  @func_9593(%var_9595, %var_9596) /* ty=Tensor[(9, 3, 7), int8] */
}

def @func_10682() -> (Tensor[(14, 14, 15), float32],) {
  %324 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %322 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %323 = %322.0;
    (%323,)
  };
  %324() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_13395() -> Tensor[(1, 14, 13), float64] {
  %325 = fn () -> Tensor[(1, 14, 13), float64] {
    @func_12199() /* ty=Tensor[(1, 14, 13), float64] */
  };
  %325() /* ty=Tensor[(1, 14, 13), float64] */
}

def @func_5234(%var_5230: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %326 = @func_3376() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %327 = cast(%var_5230, dtype="float32") /* ty=Tensor[(182), float32] */;
  %328 = reshape(%327, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %329 = @func_961(%328) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
  %330 = %326.1;
  %331 = %329.1;
  (%330, %331, %var_5230)
}

def @func_9514() -> (Tensor[(14, 14, 15), float32],) {
  %332 = @func_3160() /* ty=Tensor[(14, 14, 15), float32] */;
  (%332,)
}

def @func_6324() -> (Tensor[(5, 14, 6), int32],) {
  @func_6322() /* ty=(Tensor[(5, 14, 6), int32],) */
}

def @func_13865(%var_13849: Tensor[(5, 14, 6), int32]) -> (Tensor[(5, 14, 6), bool], Tensor[(5, 14, 6), float32]) {
  %333 = @func_11769() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(6, 10, 5), float64], Tensor[(5, 14, 6), int32]) */;
  %334 = %333.3;
  %335 = cast(%var_13849, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%334, dtype="bool") /* ty=Tensor[(5, 14, 6), bool] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %339 = cast(%var_13849, dtype="float32") /* ty=Tensor[(5, 14, 6), float32] */;
  %340 = less_equal(%337, %338) /* ty=Tensor[(5, 14, 6), bool] */;
  %341 = acosh(%339) /* ty=Tensor[(5, 14, 6), float32] */;
  (%340, %341)
}

def @func_7469() -> (Tensor[(14, 14, 15), float32],) {
  %344 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %342 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %343 = %342.0;
    (%343,)
  };
  %344() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_10790(%var_10789: Tensor[(312, 1), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(182), float32], Tensor[(312, ?), bool]) {
  %362 = fn (%var_10779: Tensor[(312, 1), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(182), float32], Tensor[(312, ?), bool]) {
    %345 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %346 = cast(meta[relay.Constant][14] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %347 = reshape(%346, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %348 = @func_2087(%347) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
    %349 = cast(%var_10779, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
    %350 = cast(%var_10779, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
    %351 = reshape(%349, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), float32] */;
    %352 = reshape(%350, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), float32] */;
    %353 = @func_9151(%351, %352) /* ty=(Tensor[(6, 4, 13), float32],) */;
    %354 = %353.0;
    %355 = cast(%354, dtype="bool") /* ty=Tensor[(6, 4, 13), bool] */;
    %356 = shape_of(%var_10779, dtype="int32") /* ty=Tensor[(2), int32] */;
    %357 = cast(%var_10779, dtype="bool") /* ty=Tensor[(312, 1), bool] */;
    %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %359 = %345.0;
    %360 = %348.0;
    %361 = logical_and(%357, %358) /* ty=Tensor[(312, ?), bool] */;
    (%359, %360, meta[relay.Constant][14] /* ty=Tensor[(182), float32] */, %361)
  };
  %362(%var_10789) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(182), float32], Tensor[(312, ?), bool]) */
}

def @func_8151(%var_8150: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %372 = fn (%var_8136: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
    %363 = @func_2124() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(30), float32]) */;
    %364 = @func_6531() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %365 = cast(%var_8136, dtype="float32") /* ty=Tensor[(182), float32] */;
    %366 = reshape(%365, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %367 = @func_1235(%366) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
    %368 = %363.0;
    %369 = %364.0;
    %370 = @func_5360() /* ty=Tensor[(14, 14, 15), float32] */;
    %371 = %367.0;
    (%368, %369, %370, %371, %var_8136)
  };
  %372(%var_8150) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */
}

def @func_14147(%var_14081: Tensor[(3, 16, 11), float64], %var_14112: Tensor[(3, 16, 11), float64]) -> (Tensor[(3, 16, 11), bool], Tensor[(14, 14, 15), float32], Tensor[(3, 16, 11), bool], Tensor[(3, 16, 11), float32], Tensor[(3, 16, 11), uint32], Tensor[(3, 16, 11), bool]) {
  %373 = cast(%var_14112, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %374 = shape_of(%var_14081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%var_14081, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %377 = @func_12721() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %378 = cast(%var_14081, dtype="float64") /* ty=Tensor[(3, 16, 11), float64] */;
  %379 = rsqrt(%378) /* ty=Tensor[(3, 16, 11), float64] */;
  %380 = cast(%var_14112, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %381 = shape_of(%379, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%379, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %384 = cast(%var_14081, dtype="float64") /* ty=Tensor[(3, 16, 11), float64] */;
  %385 = sinh(%384) /* ty=Tensor[(3, 16, 11), float64] */;
  %386 = cast(%385, dtype="float32") /* ty=Tensor[(3, 16, 11), float32] */;
  %387 = asin(%386) /* ty=Tensor[(3, 16, 11), float32] */;
  %388 = cast(%379, dtype="float32") /* ty=Tensor[(3, 16, 11), float32] */;
  %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%387, dtype="float32") /* ty=Tensor[(3, 16, 11), float32] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %392 = cast(%var_14081, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %393 = shape_of(%379, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%379, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %396 = not_equal(%394, %395) /* ty=Tensor[(3, 16, 11), bool] */;
  %397 = cast(%var_14081, dtype="uint32") /* ty=Tensor[(3, 16, 11), uint32] */;
  %398 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%396, dtype="uint32") /* ty=Tensor[(3, 16, 11), uint32] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %401 = right_shift(%399, %400) /* ty=Tensor[(3, 16, 11), uint32] */;
  %402 = cast(%401, dtype="uint32") /* ty=Tensor[(3, 16, 11), uint32] */;
  %403 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(%385, dtype="uint32") /* ty=Tensor[(3, 16, 11), uint32] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %406 = cast(%var_14081, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %407 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%396, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %410 = greater_equal(%375, %376) /* ty=Tensor[(3, 16, 11), bool] */;
  %411 = %377.0;
  %412 = greater(%382, %383) /* ty=Tensor[(3, 16, 11), bool] */;
  %413 = mod(%390, %391) /* ty=Tensor[(3, 16, 11), float32] */;
  %414 = minimum(%404, %405) /* ty=Tensor[(3, 16, 11), uint32] */;
  %415 = equal(%408, %409) /* ty=Tensor[(3, 16, 11), bool] */;
  (%410, %411, %412, %413, %414, %415)
}

def @func_8607(%var_8606: Tensor[(10, 14, 1), float64]) -> (Tensor[(14, 14, 15), float32], Tensor[(10, 14, ?), bool], Tensor[(14, 14, 15), float32]) {
  %425 = fn (%var_8579: Tensor[(10, 14, 1), float64]) -> (Tensor[(14, 14, 15), float32], Tensor[(10, 14, ?), bool], Tensor[(14, 14, 15), float32]) {
    %416 = cast(%var_8579, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
    %417 = sigmoid(%416) /* ty=Tensor[(10, 14, 1), float64] */;
    %418 = cast(%var_8579, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
    %420 = cast(%417, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %422 = @func_7379() /* ty=Tensor[(14, 14, 15), float32] */;
    %423 = logical_and(%420, %421) /* ty=Tensor[(10, 14, ?), bool] */;
    %424 = @func_7730() /* ty=Tensor[(14, 14, 15), float32] */;
    (%422, %423, %424)
  };
  %425(%var_8606) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(10, 14, ?), bool], Tensor[(14, 14, 15), float32]) */
}

def @func_12309(%var_12287: Tensor[(12, 9, 14), float64]) -> (Tensor[(12, 9, 14), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 14, 15), float32]) {
  %426 = cast(%var_12287, dtype="float64") /* ty=Tensor[(12, 9, 14), float64] */;
  %427 = log10(%426) /* ty=Tensor[(12, 9, 14), float64] */;
  %428 = cast(%var_12287, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
  %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%427, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %432 = cast(meta[relay.Constant][15] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %433 = reshape(%432, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
  %434 = @func_3282(%433) /* ty=(Tensor[(3, 2, 3), float64], Tensor[(1, 2, 3), float64]) */;
  %435 = floor_mod(%430, %431) /* ty=Tensor[(12, 9, 14), float32] */;
  %436 = %434.1;
  %437 = @func_9032() /* ty=Tensor[(14, 14, 15), float32] */;
  (%435, %436, meta[relay.Constant][15] /* ty=Tensor[(6), float64] */, %437)
}

def @func_9733(%var_9700: Tensor[(10, 42), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(14, 14, 15), float32], Tensor[(10, 42), int32], Tensor[(30), int32]) {
  %438 = @func_6663() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %439 = @func_1847() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
  %440 = cast(%var_9700, dtype="int32") /* ty=Tensor[(10, 42), int32] */;
  %441 = cast(meta[relay.Constant][16] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %442 = reshape(%440, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %443 = reshape(%441, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %444 = @func_2990(%442, %443) /* ty=(Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) */;
  %445 = %438.0;
  %446 = %439.1;
  %447 = %444.2;
  (%445, %446, %447, %var_9700, meta[relay.Constant][16] /* ty=Tensor[(30), int32] */)
}

def @func_12155() -> (Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) {
  %448 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %449 = reshape(%448, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %450 = @func_3257(%449) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) */;
  %451 = @func_6645() /* ty=Tensor[(14, 14, 15), float32] */;
  %452 = %450.1;
  (%451, %452, meta[relay.Constant][17] /* ty=Tensor[(4, 12), float32] */)
}

def @func_5350() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) {
  %453 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %454 = cast(meta[relay.Constant][18] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %455 = reshape(%454, newshape=[1, 12, 2]) /* ty=Tensor[(1, 12, 2), float32] */;
  %456 = @func_2419(%455) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(14, 14, 15), float32]) */;
  %457 = @func_5188() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %458 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %459 = %457.0;
  %460 = cast(%459, dtype="float32") /* ty=Tensor[(1, 14, 13), float32] */;
  %461 = reshape(%460, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
  %462 = @func_883(%461) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
  %463 = %453.0;
  %464 = %456.1;
  %465 = %458.2;
  %466 = %462.1;
  (%463, %464, meta[relay.Constant][18] /* ty=Tensor[(24), float32] */, %459, %465, %466)
}

def @func_6979() -> (Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32]) {
  %470 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32]) {
    %467 = @func_4359() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %468 = %467.0;
    %469 = @func_4471() /* ty=Tensor[(5, 14, 6), int32] */;
    (%468, %469)
  };
  %470() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32]) */
}

def @func_7030() -> (Tensor[(14, 14, 15), float32],) {
  %473 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %471 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %472 = %471.0;
    (%472,)
  };
  %473() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_159(%var_157: Tensor[(5, 1, 6), int32]) -> (Tensor[(5, 14, 6), int32],) {
  @func_156(%var_157) /* ty=(Tensor[(5, 14, 6), int32],) */
}

def @func_1237(%var_1236: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) {
  %480 = fn (%var_1233: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) {
    %474 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %475 = cast(%var_1233, dtype="float32") /* ty=Tensor[(182), float32] */;
    %476 = reshape(%475, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %477 = @func_961(%476) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
    %478 = %474.0;
    %479 = %477.2;
    (%478, %479, %var_1233)
  };
  %480(%var_1236) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */
}

def @func_2608() -> Tensor[(14, 14, 15), float32] {
  @func_2606() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_9593(%var_9578: Tensor[(9, 3, 1), int8], %var_9579: Tensor[(9, 3, 7), int8]) -> Tensor[(9, 3, 7), int8] {
  %481 = cast(%var_9578, dtype="int8") /* ty=Tensor[(9, 3, 1), int8] */;
  %482 = cast(%var_9579, dtype="int8") /* ty=Tensor[(9, 3, 7), int8] */;
  left_shift(%481, %482) /* ty=Tensor[(9, 3, 7), int8] */
}

def @func_10495() -> (Tensor[(4, 12), float32], Tensor[(14, 14, 15), float32]) {
  %483 = @func_4266() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
  %484 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %485 = %483.3;
  %486 = %484.0;
  (%485, %486)
}

def @func_3830() -> (Tensor[(5, 14, 6), int32],) {
  %488 = fn () -> (Tensor[(5, 14, 6), int32],) {
    %487 = @func_2207() /* ty=Tensor[(5, 14, 6), int32] */;
    (%487,)
  };
  %488() /* ty=(Tensor[(5, 14, 6), int32],) */
}

def @func_883(%var_874: Tensor[(182, 1), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) {
  %489 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %490 = %489.0;
  %491 = cast(%490, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %492 = cast(%var_874, dtype="float32") /* ty=Tensor[(182, 1), float32] */;
  %493 = reshape(%492, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %494 = @func_419(%493) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
  %495 = atan(%491) /* ty=Tensor[(14, 14, 15), float32] */;
  %496 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %497 = %494.0;
  (%495, %496, %497, %var_874)
}

def @func_21(%var_16: Tensor[(6, 1, 8), float32]) -> Tensor[(6, 2, 8), float32] {
  %498 = cast(%var_16, dtype="float32") /* ty=Tensor[(6, 1, 8), float32] */;
  %499 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 2, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 8), float32] */;
  floor_divide(%498, %499) /* ty=Tensor[(6, 2, 8), float32] */
}

def @func_5604(%var_5603: Tensor[(65, 7), int16]) -> (Tensor[(1, 14, 13), float32], Tensor[(7, 5, 13), bool], Tensor[(65, 7), int16], Tensor[(14, 14, 15), float32]) {
  %510 = fn (%var_5593: Tensor[(65, 7), int16]) -> (Tensor[(1, 14, 13), float32], Tensor[(7, 5, 13), bool], Tensor[(65, 7), int16], Tensor[(14, 14, 15), float32]) {
    %500 = @func_5350() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) */;
    %501 = cast(%var_5593, dtype="int16") /* ty=Tensor[(65, 7), int16] */;
    %502 = reshape(%501, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), int16] */;
    %503 = @func_4200(%502) /* ty=(Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) */;
    %504 = %500.3;
    %505 = cast(%504, dtype="float32") /* ty=Tensor[(1, 14, 13), float32] */;
    %506 = reshape(%505, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %507 = @func_1235(%506) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
    %508 = %503.0;
    %509 = %507.0;
    (%504, %508, %var_5593, %509)
  };
  %510(%var_5603) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(7, 5, 13), bool], Tensor[(65, 7), int16], Tensor[(14, 14, 15), float32]) */
}

def @func_4445() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */
}

def @func_2422(%var_2420: Tensor[(1, 12, 2), float32]) -> (Tensor[(1, 12, 2), float32], Tensor[(14, 14, 15), float32]) {
  @func_2419(%var_2420) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_4747(%var_4723: Tensor[(455), int16]) -> (Tensor[(14, 14, 15), float32], Tensor[(7, 5, 13), bool], Tensor[(455), float64]) {
  %511 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %512 = cast(%var_4723, dtype="int16") /* ty=Tensor[(455), int16] */;
  %513 = reshape(%512, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), int16] */;
  %514 = @func_4200(%513) /* ty=(Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) */;
  %515 = cast(%var_4723, dtype="float64") /* ty=Tensor[(455), float64] */;
  %516 = asin(%515) /* ty=Tensor[(455), float64] */;
  %517 = cast(%516, dtype="float64") /* ty=Tensor[(455), float64] */;
  %518 = %511.2;
  %519 = %514.0;
  %520 = log10(%517) /* ty=Tensor[(455), float64] */;
  (%518, %519, %520)
}

def @func_9155(%var_9153: Tensor[(6, 4, 13), float32], %var_9154: Tensor[(6, 4, 13), float32]) -> (Tensor[(6, 4, 13), float32],) {
  @func_9151(%var_9153, %var_9154) /* ty=(Tensor[(6, 4, 13), float32],) */
}

def @func_6760(%var_6759: Tensor[(13, 15, 8), int32]) -> Tensor[(13, 15, 8), int32] {
  %525 = fn (%var_6749: Tensor[(13, 15, 8), int32]) -> Tensor[(13, 15, 8), int32] {
    %521 = cast(%var_6749, dtype="int32") /* ty=Tensor[(13, 15, 8), int32] */;
    %522 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(13, 15, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %523 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 15, 8), int32] */, dtype="int32") /* ty=Tensor[(13, 15, 8), int32] */;
    %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    maximum(%523, %524) /* ty=Tensor[(13, 15, 8), int32] */
  };
  %525(%var_6759) /* ty=Tensor[(13, 15, 8), int32] */
}

def @func_14300() -> (Tensor[(182), float32], Tensor[(182), float32]) {
  @func_14298() /* ty=(Tensor[(182), float32], Tensor[(182), float32]) */
}

def @func_1634() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %526 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %527 = @func_1325() /* ty=Tensor[(14, 14, 15), float32] */;
  (%526, %527)
}

def @func_3542(%var_3541: Tensor[(2940), float32]) -> (Tensor[(24, 2), float32], Tensor[(2940), float32], Tensor[(182), float32], Tensor[(13, 3, 6), float32], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) {
  %550 = fn (%var_3490: Tensor[(2940), float32]) -> (Tensor[(24, 2), float32], Tensor[(2940), float32], Tensor[(182), float32], Tensor[(13, 3, 6), float32], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) {
    %528 = cast(%var_3490, dtype="float32") /* ty=Tensor[(2940), float32] */;
    %529 = cast(meta[relay.Constant][21] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %530 = reshape(%528, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
    %531 = reshape(%529, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %532 = @func_3098(%530, %531) /* ty=(Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) */;
    %533 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 6), float32] */;
    %534 = acos(%533) /* ty=Tensor[(13, 3, 6), float32] */;
    %535 = cast(%534, dtype="float32") /* ty=Tensor[(13, 3, 6), float32] */;
    %536 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %537 = cast(meta[relay.Constant][21] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %538 = %532.4;
    %539 = cast(%538, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
    %540 = reshape(%537, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %541 = reshape(%539, newshape=[4, 12]) /* ty=Tensor[(4, 12), float32] */;
    %542 = @func_1291(%540, %541) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(4, 12), float32], Tensor[(14, 14, 15), int32], Tensor[(182, 1), float32]) */;
    %543 = @func_2679() /* ty=(Tensor[(1, 14, 13), float32],) */;
    %544 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %545 = exp(%535) /* ty=Tensor[(13, 3, 6), float32] */;
    %546 = %536.0;
    %547 = %542.7;
    %548 = %543.0;
    %549 = %544.0;
    (%538, %var_3490, meta[relay.Constant][21] /* ty=Tensor[(182), float32] */, %545, %546, %547, %548, %549)
  };
  %550(%var_3541) /* ty=(Tensor[(24, 2), float32], Tensor[(2940), float32], Tensor[(182), float32], Tensor[(13, 3, 6), float32], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_8773() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %555 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
    %551 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %552 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %553 = %551.0;
    %554 = %552.1;
    (%553, %554)
  };
  %555() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */
}

def @func_11241() -> (Tensor[(14, 14, 15), float32],) {
  %557 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %556 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
    (%556,)
  };
  %557() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_208(%var_207: Tensor[(5, 16, 5), float64]) -> (Tensor[(5, 16, 5), float64], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(5, 14, 6), int32]) {
  %568 = fn (%var_192: Tensor[(5, 16, 5), float64]) -> (Tensor[(5, 16, 5), float64], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(5, 14, 6), int32]) {
    %558 = cast(%var_192, dtype="float64") /* ty=Tensor[(5, 16, 5), float64] */;
    %559 = cast(meta[relay.Constant][23] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
    %560 = reshape(%559, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
    %561 = @func_156(%560) /* ty=(Tensor[(5, 14, 6), int32],) */;
    %562 = cast(meta[relay.Constant][23] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
    %563 = reshape(%562, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
    %564 = @func_156(%563) /* ty=(Tensor[(5, 14, 6), int32],) */;
    %565 = atanh(%558) /* ty=Tensor[(5, 16, 5), float64] */;
    %566 = %561.0;
    %567 = %564.0;
    (%565, %566, meta[relay.Constant][23] /* ty=Tensor[(30), int32] */, %567)
  };
  %568(%var_207) /* ty=(Tensor[(5, 16, 5), float64], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(5, 14, 6), int32]) */
}

def @func_12812() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %569 = @func_11522() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %570 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %571 = %569.0;
  %572 = %570.0;
  (%571, %572)
}

def @func_14285() -> (Tensor[(5, 14, 6), int32],) {
  @func_14283() /* ty=(Tensor[(5, 14, 6), int32],) */
}

def @func_10319(%var_10317: Tensor[(26, 7), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(26, 7), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) {
  @func_10316(%var_10317) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(26, 7), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) */
}

def @func_1611() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  @func_1609() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_3102(%var_3100: Tensor[(14, 14, 15), float32], %var_3101: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) {
  @func_3098(%var_3100, %var_3101) /* ty=(Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_12682(%var_12671: Tensor[(1, 27), int8], %var_12672: Tensor[(189), int8]) -> (Tensor[(14, 14, 15), float32], Tensor[(9, 3, 7), int8], Tensor[(1, 27), int8], Tensor[(189), int8]) {
  %573 = cast(%var_12671, dtype="int8") /* ty=Tensor[(1, 27), int8] */;
  %574 = cast(%var_12672, dtype="int8") /* ty=Tensor[(189), int8] */;
  %575 = reshape(%573, newshape=[9, 3, 1]) /* ty=Tensor[(9, 3, 1), int8] */;
  %576 = reshape(%574, newshape=[9, 3, 7]) /* ty=Tensor[(9, 3, 7), int8] */;
  %577 = @func_4224() /* ty=Tensor[(14, 14, 15), float32] */;
  %578 = @func_9593(%575, %576) /* ty=Tensor[(9, 3, 7), int8] */;
  (%577, %578, %var_12671, %var_12672)
}

def @func_13965() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %583 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %579 = @func_12155() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
    %580 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %581 = %579.0;
    %582 = %580.0;
    (%581, %582)
  };
  %583() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_9034() -> Tensor[(14, 14, 15), float32] {
  @func_9032() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_384(%var_382: Tensor[(30), int32], %var_383: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) {
  %598 = fn (%var_358: Tensor[(30), int32], %var_375: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) {
    %584 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %585 = %584.0;
    %586 = cast(meta[relay.Constant][24] /* ty=Tensor[(14, 14, 15), float32] */, dtype="int32") /* ty=Tensor[(14, 14, 15), int32] */;
    %587 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
    %588 = cast(%585, dtype="int32") /* ty=Tensor[(14, 14, 15), int32] */;
    %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %590 = cast(%var_358, dtype="int32") /* ty=Tensor[(30), int32] */;
    %591 = reshape(%590, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
    %592 = @func_156(%591) /* ty=(Tensor[(5, 14, 6), int32],) */;
    %593 = cast(%var_375, dtype="float32") /* ty=Tensor[(48), float32] */;
    %594 = reshape(%593, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
    %595 = bitwise_xor(%588, %589) /* ty=Tensor[(14, 14, 15), int32] */;
    %596 = %592.0;
    %597 = @func_21(%594) /* ty=Tensor[(6, 2, 8), float32] */;
    (%595, %596, %var_358, %597, %var_375)
  };
  %598(%var_382, %var_383) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */
}

def @func_4074(%var_4043: Tensor[(2, 24), float32], %var_4071: Tensor[(420, 1), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(2, 24), bool], Tensor[(6, 2, 8), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(420, 1), int32], Tensor[(30), int32]) {
  %599 = cast(%var_4043, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
  %600 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(2, 24), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %601 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 24), float32] */, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %603 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 24), float32] */, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %604 = reshape(%603, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
  %605 = @func_21(%604) /* ty=Tensor[(6, 2, 8), float32] */;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
  %607 = cast(meta[relay.Constant][26] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %608 = reshape(%607, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %609 = @func_2087(%608) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %610 = cast(%var_4071, dtype="int32") /* ty=Tensor[(420, 1), int32] */;
  %611 = cast(meta[relay.Constant][27] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %612 = reshape(%610, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %613 = reshape(%611, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %614 = @func_2990(%612, %613) /* ty=(Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) */;
  %615 = @func_1325() /* ty=Tensor[(14, 14, 15), float32] */;
  %616 = logical_or(%601, %602) /* ty=Tensor[(2, 24), bool] */;
  %617 = sinh(%606) /* ty=Tensor[(6, 2, 8), float64] */;
  %618 = %609.1;
  %619 = %614.10;
  (%615, %616, %617, %618, meta[relay.Constant][26] /* ty=Tensor[(182), float32] */, %619, %var_4071, meta[relay.Constant][27] /* ty=Tensor[(30), int32] */)
}

def @func_10081(%var_10073: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %620 = cast(%var_10073, dtype="float32") /* ty=Tensor[(182), float32] */;
  %621 = reshape(%620, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %622 = @func_2087(%621) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
  %623 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
  %624 = %622.3;
  (%623, %624, %var_10073)
}

def @func_9293() -> Tensor[(14, 14, 15), float32] {
  @func_6939() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_6728() -> Tensor[(14, 14, 15), float32] {
  @func_6726() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_5455() -> (Tensor[(14, 14, 15), float32],) {
  @func_5453() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_10700() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  @func_10698() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_6533() -> (Tensor[(14, 14, 15), float32],) {
  @func_6531() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_12312(%var_12310: Tensor[(12, 9, 14), float64]) -> (Tensor[(12, 9, 14), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 14, 15), float32]) {
  @func_12309(%var_12310) /* ty=(Tensor[(12, 9, 14), float32], Tensor[(1, 2, 3), float64], Tensor[(6), float64], Tensor[(14, 14, 15), float32]) */
}

def @func_1350() -> (Tensor[(2, 9, 11), float64],) {
  @func_1348() /* ty=(Tensor[(2, 9, 11), float64],) */
}

def @func_14068(%var_14066: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  @func_14065(%var_14066) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */
}

def @func_1294(%var_1292: Tensor[(182), float32], %var_1293: Tensor[(4, 12), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(4, 12), float32], Tensor[(14, 14, 15), int32], Tensor[(182, 1), float32]) {
  %647 = fn (%var_1255: Tensor[(182), float32], %var_1260: Tensor[(4, 12), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(4, 12), float32], Tensor[(14, 14, 15), int32], Tensor[(182, 1), float32]) {
    %625 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %626 = cast(%var_1255, dtype="float32") /* ty=Tensor[(182), float32] */;
    %627 = reshape(%626, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
    %628 = @func_419(%627) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
    %629 = cast(meta[relay.Constant][28] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
    %630 = cast(%var_1260, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
    %631 = reshape(%629, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %632 = reshape(%630, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %633 = @func_381(%631, %632) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
    %634 = %633.2;
    %635 = cast(%634, dtype="int32") /* ty=Tensor[(30), int32] */;
    %636 = cast(%var_1260, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
    %637 = reshape(%635, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %638 = reshape(%636, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %639 = @func_381(%637, %638) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
    %640 = cast(%var_1255, dtype="float32") /* ty=Tensor[(182), float32] */;
    %641 = reshape(%640, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
    %642 = @func_883(%641) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
    %643 = %625.0;
    %644 = %628.1;
    %645 = %639.0;
    %646 = %642.3;
    (%643, %644, %var_1255, %634, meta[relay.Constant][28] /* ty=Tensor[(30), int32] */, %var_1260, %645, %646)
  };
  %647(%var_1292, %var_1293) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(4, 12), float32], Tensor[(14, 14, 15), int32], Tensor[(182, 1), float32]) */
}

def @func_11921() -> Tensor[(300), uint32] {
  @func_11919() /* ty=Tensor[(300), uint32] */
}

def @func_13980(%var_13978: Tensor[(2, 5, 12), uint32], %var_13979: Tensor[(2, 5, 12), uint32]) -> Tensor[(2, 5, 12), bool] {
  %652 = fn (%var_13966: Tensor[(2, 5, 12), uint32], %var_13967: Tensor[(2, 5, 12), uint32]) -> Tensor[(2, 5, 12), bool] {
    %648 = cast(%var_13967, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
    %649 = shape_of(%var_13966, dtype="int32") /* ty=Tensor[(3), int32] */;
    %650 = cast(%var_13966, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
    %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%650, %651) /* ty=Tensor[(2, 5, 12), bool] */
  };
  %652(%var_13978, %var_13979) /* ty=Tensor[(2, 5, 12), bool] */
}

def @func_14185() -> Tensor[(14, 14, 15), float32] {
  @func_12874() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_1849() -> (Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) {
  @func_1847() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */
}

def @func_12956(%var_12948: Tensor[(11, 30), int32]) -> (Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(420), int32], Tensor[(11, 30), float32]) {
  %653 = @func_2679() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %654 = @func_8183() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %655 = @func_3405() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %656 = cast(meta[relay.Constant][29] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %657 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 30), int32] */, dtype="int32") /* ty=Tensor[(1, 30), int32] */;
  %658 = reshape(%656, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %659 = reshape(%657, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %660 = @func_2990(%658, %659) /* ty=(Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) */;
  %661 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 30), int32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %662 = cast(%var_12948, dtype="float32") /* ty=Tensor[(11, 30), float32] */;
  %663 = %653.0;
  %664 = %654.0;
  %665 = %655.0;
  %666 = %660.5;
  %667 = mod(%661, %662) /* ty=Tensor[(11, 30), float32] */;
  (%663, %664, %665, %666, meta[relay.Constant][29] /* ty=Tensor[(420), int32] */, %667)
}

def @func_3257(%var_3240: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) {
  %668 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %670 = cast(%var_3240, dtype="float32") /* ty=Tensor[(48), float32] */;
  %671 = reshape(%669, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %672 = reshape(%670, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %673 = @func_1769(%671, %672) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %674 = %673.2;
  %675 = @func_1195() /* ty=Tensor[(14, 14, 15), int8] */;
  (%668, %674, %var_3240, %675)
}

def @func_7049(%var_7044: Tensor[(6, 9, 5), float32]) -> (Tensor[(6, 9, 5), float32], Tensor[(14, 14, 15), float32]) {
  %676 = cast(%var_7044, dtype="float32") /* ty=Tensor[(6, 9, 5), float32] */;
  %677 = log2(%676) /* ty=Tensor[(6, 9, 5), float32] */;
  %678 = @func_6726() /* ty=Tensor[(14, 14, 15), float32] */;
  (%677, %678)
}

def @func_9254() -> (Tensor[(14, 14, 15), float32],) {
  %680 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %679 = @func_7194() /* ty=Tensor[(14, 14, 15), float32] */;
    (%679,)
  };
  %680() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_156(%var_141: Tensor[(5, 1, 6), int32]) -> (Tensor[(5, 14, 6), int32],) {
  %681 = cast(%var_141, dtype="int32") /* ty=Tensor[(5, 1, 6), int32] */;
  %682 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 14, 6), int32] */, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
  %683 = logical_xor(%681, %682) /* ty=Tensor[(5, 14, 6), int32] */;
  (%683,)
}

def @func_2757() -> (Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(24, 2), float32]) {
  %699 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(24, 2), float32]) {
    %684 = @func_1847() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
    %685 = cast(meta[relay.Constant][32] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
    %686 = %684.2;
    %687 = cast(%686, dtype="float32") /* ty=Tensor[(48), float32] */;
    %688 = reshape(%685, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %689 = reshape(%687, newshape=[24, 2]) /* ty=Tensor[(24, 2), float32] */;
    %690 = @func_1105(%688, %689) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) */;
    %691 = cast(meta[relay.Constant][32] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
    %692 = cast(%686, dtype="float32") /* ty=Tensor[(48), float32] */;
    %693 = reshape(%691, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %694 = reshape(%692, newshape=[24, 2]) /* ty=Tensor[(24, 2), float32] */;
    %695 = @func_1105(%693, %694) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) */;
    %696 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
    %697 = %690.3;
    %698 = %695.4;
    (%696, %686, %697, meta[relay.Constant][32] /* ty=Tensor[(30), int32] */, %698)
  };
  %699() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(24, 2), float32]) */
}

def @func_4132(%var_4130: Tensor[(5, 14, 6), int32]) -> (Tensor[(5, 14, 6), int8], Tensor[(14, 14, 15), float32]) {
  @func_4129(%var_4130) /* ty=(Tensor[(5, 14, 6), int8], Tensor[(14, 14, 15), float32]) */
}

def @func_13868(%var_13866: Tensor[(5, 14, 6), int32]) -> (Tensor[(5, 14, 6), bool], Tensor[(5, 14, 6), float32]) {
  @func_13865(%var_13866) /* ty=(Tensor[(5, 14, 6), bool], Tensor[(5, 14, 6), float32]) */
}

def @func_4002() -> (Tensor[(14, 14, 15), float32],) {
  @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_6040() -> Tensor[(14, 14, 15), float32] {
  @func_6038() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_9386(%var_9384: Tensor[(1, 182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(14, 14, 15), float32]) {
  @func_9383(%var_9384) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_783() -> Tensor[(14, 14, 15), bool] {
  %700 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %701 = %700.0;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %703 = log(%702) /* ty=Tensor[(14, 14, 15), float32] */;
  %704 = cast(%703, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %705 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%701, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%706, %707) /* ty=Tensor[(14, 14, 15), bool] */
}

def @func_10972(%var_10970: Tensor[(30, 1), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(30, 1), int32]) {
  @func_10969(%var_10970) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(30, 1), int32]) */
}

def @func_5361() -> Tensor[(14, 14, 15), float32] {
  %709 = fn () -> Tensor[(14, 14, 15), float32] {
    %708 = @func_4266() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
    %708.0
  };
  %709() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_3955(%var_3953: Tensor[(5, 8, 2), int64]) -> (Tensor[(5, 8, 2), int64], Tensor[(5, 6), int32], Tensor[(2940), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32]) {
  @func_3952(%var_3953) /* ty=(Tensor[(5, 8, 2), int64], Tensor[(5, 6), int32], Tensor[(2940), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_9754() -> Tensor[(14, 14, 15), float32] {
  %711 = fn () -> Tensor[(14, 14, 15), float32] {
    %710 = @func_6993() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %710.1
  };
  %711() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_11474() -> Tensor[(5, 14, 6), int32] {
  %712 = fn () -> Tensor[(5, 14, 6), int32] {
    @func_4471() /* ty=Tensor[(5, 14, 6), int32] */
  };
  %712() /* ty=Tensor[(5, 14, 6), int32] */
}

def @func_3157() -> (Tensor[(14, 14, 15), float32],) {
  %715 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %713 = @func_1573() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %714 = %713.0;
    (%714,)
  };
  %715() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_2089(%var_2088: Tensor[(182), float32]) -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) {
  %726 = fn (%var_2071: Tensor[(182), float32]) -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) {
    %716 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
    %717 = cast(%var_2071, dtype="float32") /* ty=Tensor[(182), float32] */;
    %718 = reshape(%717, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %719 = @func_961(%718) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
    %720 = cast(meta[relay.Constant][33] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
    %721 = reshape(%720, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %722 = @func_2047(%721) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(12, 4), float32]) */;
    %723 = %716.0;
    %724 = %719.1;
    %725 = %722.0;
    (%723, %724, %var_2071, %725, meta[relay.Constant][33] /* ty=Tensor[(30), int32] */)
  };
  %726(%var_2088) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */
}

def @func_6880() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) {
  @func_6878() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) */
}

def @func_8014(%var_7977: Tensor[(9, 10, 14), float32], %var_7978: Tensor[(9, 10, 14), float32]) -> (Tensor[(9, 10, 14), int8], Tensor[(14, 14, 15), bool]) {
  %727 = cast(%var_7978, dtype="float32") /* ty=Tensor[(9, 10, 14), float32] */;
  %728 = shape_of(%var_7977, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_7977, dtype="float32") /* ty=Tensor[(9, 10, 14), float32] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %731 = multiply(%729, %730) /* ty=Tensor[(9, 10, 14), float32] */;
  %732 = cast(%var_7977, dtype="int8") /* ty=Tensor[(9, 10, 14), int8] */;
  %733 = shape_of(%731, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%731, dtype="int8") /* ty=Tensor[(9, 10, 14), int8] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %736 = maximum(%734, %735) /* ty=Tensor[(9, 10, 14), int8] */;
  %737 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  (%736, %737)
}

def @func_11502() -> (Tensor[(1, 14, 13), float32],) {
  %738 = @func_5188() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %739 = %738.0;
  (%739,)
}

def @func_7922() -> (Tensor[(14, 14, 15), float32],) {
  %740 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %741 = %740.0;
  (%741,)
}

def @func_13624() -> Tensor[(14, 14, 15), float32] {
  %742 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %742.0
}

def @func_13528() -> Tensor[(14, 14, 15), float32] {
  %743 = @func_6663() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %743.0
}

def @func_12341() -> (Tensor[(1, 14, 13), float32],) {
  %744 = @func_2679() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %745 = %744.0;
  (%745,)
}

def @func_11428() -> Tensor[(14, 14, 15), int8] {
  %746 = fn () -> Tensor[(14, 14, 15), int8] {
    @func_1195() /* ty=Tensor[(14, 14, 15), int8] */
  };
  %746() /* ty=Tensor[(14, 14, 15), int8] */
}

def @func_13650() -> (Tensor[(1, 14, 13), float32],) {
  %749 = fn () -> (Tensor[(1, 14, 13), float32],) {
    %747 = @func_5188() /* ty=(Tensor[(1, 14, 13), float32],) */;
    %748 = %747.0;
    (%748,)
  };
  %749() /* ty=(Tensor[(1, 14, 13), float32],) */
}

def @main() -> Tensor[(8, 7, 7), float32] {
  %750 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 7, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 7), float32] */;
  acosh(%750) /* ty=Tensor[(8, 7, 7), float32] */
}

def @func_14065(%var_14050: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %751 = @func_7468() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %752 = @func_9253() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %753 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %754 = cast(%var_14050, dtype="float32") /* ty=Tensor[(182), float32] */;
  %755 = reshape(%754, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %756 = @func_8303(%755) /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %757 = %751.0;
  %758 = %752.0;
  %759 = %753.0;
  %760 = %756.2;
  (%757, %758, %759, %760, %var_14050)
}

def @func_4687() -> (Tensor[(14, 14, 15), float32],) {
  %761 = @func_3625() /* ty=Tensor[(14, 14, 15), float32] */;
  (%761,)
}

def @func_6629() -> (Tensor[(14, 14, 15), float32],) {
  %764 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %762 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %763 = %762.0;
    (%763,)
  };
  %764() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_13483() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool]) {
  %772 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool]) {
    %765 = cast(meta[relay.Constant][35] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %766 = reshape(%765, newshape=[26, 7]) /* ty=Tensor[(26, 7), float32] */;
    %767 = @func_10316(%766) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(26, 7), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) */;
    %768 = @func_5360() /* ty=Tensor[(14, 14, 15), float32] */;
    %769 = @func_2606() /* ty=Tensor[(14, 14, 15), float32] */;
    %770 = %767.0;
    %771 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
    (%768, %769, %770, meta[relay.Constant][35] /* ty=Tensor[(182), float32] */, %771)
  };
  %772() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool]) */
}

def @func_11996() -> Tensor[(14, 14, 15), float32] {
  %773 = fn () -> Tensor[(14, 14, 15), float32] {
    @func_4224() /* ty=Tensor[(14, 14, 15), float32] */
  };
  %773() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_5822(%var_5819: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(48), float32]) {
  %774 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %775 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %776 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %777 = cast(%776, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %778 = cast(%var_5819, dtype="float32") /* ty=Tensor[(48), float32] */;
  %779 = reshape(%778, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %780 = @func_3257(%779) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) */;
  %781 = %774.0;
  %782 = @func_3160() /* ty=Tensor[(14, 14, 15), float32] */;
  %783 = %775.0;
  %784 = rsqrt(%777) /* ty=Tensor[(14, 14, 15), float64] */;
  %785 = %780.1;
  (%781, %782, %783, %784, %785, %var_5819)
}

def @func_9811(%var_9809: Tensor[(13, 14), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(13, 14), float32], Tensor[(14, 14, 15), float32]) {
  @func_9808(%var_9809) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(13, 14), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_8556() -> (Tensor[(14, 14, 15), int8],) {
  %788 = fn () -> (Tensor[(14, 14, 15), int8],) {
    %786 = @func_8447() /* ty=(Tensor[(14, 14, 15), int8],) */;
    %787 = %786.0;
    (%787,)
  };
  %788() /* ty=(Tensor[(14, 14, 15), int8],) */
}

def @func_14151(%var_14149: Tensor[(3, 16, 11), float64], %var_14150: Tensor[(3, 16, 11), float64]) -> (Tensor[(3, 16, 11), bool], Tensor[(14, 14, 15), float32], Tensor[(3, 16, 11), bool], Tensor[(3, 16, 11), float32], Tensor[(3, 16, 11), uint32], Tensor[(3, 16, 11), bool]) {
  @func_14147(%var_14149, %var_14150) /* ty=(Tensor[(3, 16, 11), bool], Tensor[(14, 14, 15), float32], Tensor[(3, 16, 11), bool], Tensor[(3, 16, 11), float32], Tensor[(3, 16, 11), uint32], Tensor[(3, 16, 11), bool]) */
}

def @func_6682() -> (Tensor[(14, 14, 15), float32],) {
  @func_6680() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_7194() -> Tensor[(14, 14, 15), float32] {
  @func_2385() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_9295() -> Tensor[(14, 14, 15), float32] {
  @func_9293() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_8752(%var_8750: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
  @func_8749(%var_8750) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */
}

def @func_7196() -> Tensor[(14, 14, 15), float32] {
  @func_7194() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_8860() -> (Tensor[(14, 14, 15), float32],) {
  @func_8858() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_11249() -> Tensor[(14, 14, 15), float32] {
  %789 = fn () -> Tensor[(14, 14, 15), float32] {
    @func_5360() /* ty=Tensor[(14, 14, 15), float32] */
  };
  %789() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_1245() -> Tensor[(14, 14, 15), float32] {
  %791 = fn () -> Tensor[(14, 14, 15), float32] {
    %790 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %790.0
  };
  %791() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_7052(%var_7050: Tensor[(6, 9, 5), float32]) -> (Tensor[(6, 9, 5), float32], Tensor[(14, 14, 15), float32]) {
  @func_7049(%var_7050) /* ty=(Tensor[(6, 9, 5), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_4313(%var_4289: Tensor[(10, 3, 15), float32], %var_4302: Tensor[(455), int16]) -> (Tensor[(10, 3, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), int16]) {
  %792 = cast(%var_4289, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %793 = cast(%var_4302, dtype="int16") /* ty=Tensor[(455), int16] */;
  %794 = reshape(%793, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), int16] */;
  %795 = @func_4200(%794) /* ty=(Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) */;
  %796 = exp(%792) /* ty=Tensor[(10, 3, 15), float32] */;
  %797 = %795.1;
  (%796, %797, %var_4302)
}

def @func_4471() -> Tensor[(5, 14, 6), int32] {
  @func_2207() /* ty=Tensor[(5, 14, 6), int32] */
}

def @func_4473() -> Tensor[(5, 14, 6), int32] {
  @func_4471() /* ty=Tensor[(5, 14, 6), int32] */
}

def @func_7353() -> (Tensor[(14, 14, 15), float32],) {
  %798 = @func_1609() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %799 = %798.0;
  (%799,)
}

def @func_9570(%var_9569: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32]) {
  %808 = fn (%var_9549: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32]) {
    %800 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %801 = cast(%var_9549, dtype="float32") /* ty=Tensor[(182), float32] */;
    %802 = reshape(%801, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %803 = @func_8149(%802) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
    %804 = @func_4266() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */;
    %805 = %800.0;
    %806 = %803.0;
    %807 = %804.0;
    (%805, %806, %var_9549, %807)
  };
  %808(%var_9569) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_2377() -> (Tensor[(14, 14, 15), float32],) {
  %811 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %809 = @func_1609() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %810 = %809.1;
    (%810,)
  };
  %811() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_7331(%var_7330: Tensor[(1, 48), float32]) -> (Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(1, 48), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32]) {
  %834 = fn (%var_7305: Tensor[(1, 48), float32]) -> (Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(1, 48), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32]) {
    %812 = @func_6932() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %813 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %814 = %813.0;
    %815 = cast(%814, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
    %816 = cast(%814, dtype="uint64") /* ty=Tensor[(14, 14, 15), uint64] */;
    %817 = cast(%var_7305, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
    %818 = reshape(%815, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
    %819 = reshape(%816, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), uint64] */;
    %820 = reshape(%817, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %821 = @func_2290(%818, %819, %820) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
    %822 = cast(%var_7305, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
    %823 = reshape(%822, newshape=[12, 4]) /* ty=Tensor[(12, 4), float32] */;
    %824 = @func_6287(%823) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(12, 4), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(5, 14, 6), int32]) */;
    %825 = %821.2;
    %826 = cast(%825, dtype="int32") /* ty=Tensor[(5, 6), int32] */;
    %827 = %812.1;
    %828 = cast(%827, dtype="int8") /* ty=Tensor[(14, 14, 15), int8] */;
    %829 = reshape(%826, newshape=[5, 6]) /* ty=Tensor[(5, 6), int32] */;
    %830 = reshape(%828, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), int8] */;
    %831 = @func_4648(%829, %830) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32], Tensor[(14, 14, 15), uint8]) */;
    %832 = %824.8;
    %833 = %831.3;
    (%827, %814, %825, %var_7305, %832, %833)
  };
  %834(%var_7330) /* ty=(Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(1, 48), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32]) */
}

def @func_4078(%var_4076: Tensor[(2, 24), float32], %var_4077: Tensor[(420, 1), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(2, 24), bool], Tensor[(6, 2, 8), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(420, 1), int32], Tensor[(30), int32]) {
  @func_4074(%var_4076, %var_4077) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(2, 24), bool], Tensor[(6, 2, 8), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(420, 1), int32], Tensor[(30), int32]) */
}

def @func_13626() -> Tensor[(14, 14, 15), float32] {
  @func_13624() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_10948() -> (Tensor[(30), int32], Tensor[(14, 14, 15), float32]) {
  @func_10946() /* ty=(Tensor[(30), int32], Tensor[(14, 14, 15), float32]) */
}

def @func_12541(%var_12539: Tensor[(16, 13, 13), float64], %var_12540: Tensor[(16, 13, 13), float64]) -> (Tensor[(16, 13, 13), float64], Tensor[(16, 13, 13), float32]) {
  %842 = fn (%var_12527: Tensor[(16, 13, 13), float64], %var_12528: Tensor[(16, 13, 13), float64]) -> (Tensor[(16, 13, 13), float64], Tensor[(16, 13, 13), float32]) {
    %835 = cast(%var_12528, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
    %836 = shape_of(%var_12527, dtype="int32") /* ty=Tensor[(3), int32] */;
    %837 = cast(%var_12527, dtype="float64") /* ty=Tensor[(16, 13, 13), float64] */;
    %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %839 = cast(%var_12528, dtype="float32") /* ty=Tensor[(16, 13, 13), float32] */;
    %840 = mod(%837, %838) /* ty=Tensor[(16, 13, 13), float64] */;
    %841 = sigmoid(%839) /* ty=Tensor[(16, 13, 13), float32] */;
    (%840, %841)
  };
  %842(%var_12539, %var_12540) /* ty=(Tensor[(16, 13, 13), float64], Tensor[(16, 13, 13), float32]) */
}

def @func_6150() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %848 = fn () -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
    %843 = @func_3782() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %844 = @func_4795() /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) */;
    %845 = @func_2207() /* ty=Tensor[(5, 14, 6), int32] */;
    %846 = %843.1;
    %847 = %844.0;
    (%845, %846, %847)
  };
  %848() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */
}

def @func_6726() -> Tensor[(14, 14, 15), float32] {
  %849 = @func_5268() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %849.0
}

def @func_13919() -> Tensor[(14, 14, 15), float32] {
  %850 = fn () -> Tensor[(14, 14, 15), float32] {
    @func_12874() /* ty=Tensor[(14, 14, 15), float32] */
  };
  %850() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_14283() -> (Tensor[(5, 14, 6), int32],) {
  %851 = @func_11473() /* ty=Tensor[(5, 14, 6), int32] */;
  (%851,)
}

def @func_2680() -> (Tensor[(1, 14, 13), float32],) {
  %854 = fn () -> (Tensor[(1, 14, 13), float32],) {
    %852 = @func_2649() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
    %853 = %852.1;
    (%853,)
  };
  %854() /* ty=(Tensor[(1, 14, 13), float32],) */
}

def @func_8749(%var_8745: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
  %855 = @func_7029() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %856 = cast(%var_8745, dtype="float32") /* ty=Tensor[(182), float32] */;
  %857 = reshape(%856, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
  %858 = @func_883(%857) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
  %859 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %860 = %855.0;
  %861 = %858.2;
  (%859, %860, %861, %var_8745)
}

def @func_10221() -> (Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) {
  %862 = cast(meta[relay.Constant][36] /* ty=Tensor[(300), uint32] */, dtype="uint32") /* ty=Tensor[(300), uint32] */;
  %863 = reshape(%862, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), uint32] */;
  %864 = @func_9311(%863) /* ty=(Tensor[(6, 10, 5), uint32],) */;
  %865 = %864.0;
  %866 = cast(%865, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %867 = @func_6427() /* ty=Tensor[(14, 14, 15), float32] */;
  %868 = asinh(%866) /* ty=Tensor[(6, 10, 5), float64] */;
  %869 = @func_2606() /* ty=Tensor[(14, 14, 15), float32] */;
  (%867, meta[relay.Constant][36] /* ty=Tensor[(300), uint32] */, %868, %869)
}

def @func_12031() -> (Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) {
  %870 = @func_2649() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %871 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %872 = %870.1;
  %873 = %871.0;
  (%872, %873)
}

def @func_14187() -> Tensor[(14, 14, 15), float32] {
  @func_14185() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_4266() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) {
  %874 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %875 = cast(%874, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %876 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %877 = reshape(%876, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %878 = @func_3257(%877) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) */;
  %879 = @func_2385() /* ty=Tensor[(14, 14, 15), float32] */;
  %880 = log2(%875) /* ty=Tensor[(14, 14, 15), float64] */;
  %881 = %878.1;
  (%879, %880, %881, meta[relay.Constant][37] /* ty=Tensor[(4, 12), float32] */)
}

def @func_9640() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  @func_9638() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_12343() -> (Tensor[(1, 14, 13), float32],) {
  @func_12341() /* ty=(Tensor[(1, 14, 13), float32],) */
}

def @func_13254(%var_13252: int64, %var_13253: Tensor[(13, 13, 1), int64]) -> (Tensor[(13, 13, 1), bool], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) {
  %892 = fn (%var_13216: int64, %var_13217: Tensor[(13, 13, 1), int64]) -> (Tensor[(13, 13, 1), bool], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) {
    %882 = cast(%var_13216, dtype="bool") /* ty=bool */;
    %883 = cast(%var_13217, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
    %884 = @func_10221() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) */;
    %885 = cast(meta[relay.Constant][38] /* ty=Tensor[(24, 2), float32] */, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
    %886 = reshape(%885, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %887 = @func_9228(%886) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float64]) */;
    %888 = greater(%882, %883) /* ty=Tensor[(13, 13, 1), bool] */;
    %889 = %884.2;
    %890 = %887.0;
    %891 = @func_7379() /* ty=Tensor[(14, 14, 15), float32] */;
    (%888, %889, %890, meta[relay.Constant][38] /* ty=Tensor[(24, 2), float32] */, %891)
  };
  %892(%var_13252, %var_13253) /* ty=(Tensor[(13, 13, 1), bool], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_1982(%var_1980: Tensor[(6, 7, 14), float64], %var_1981: Tensor[(1, 182), float32]) -> (Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) {
  %899 = fn (%var_1963: Tensor[(6, 7, 14), float64], %var_1970: Tensor[(1, 182), float32]) -> (Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) {
    %893 = cast(%var_1963, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
    %894 = cast(%var_1970, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
    %895 = reshape(%894, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %896 = @func_961(%895) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
    %897 = atanh(%893) /* ty=Tensor[(6, 7, 14), float64] */;
    %898 = %896.2;
    (%897, %898, %var_1970)
  };
  %899(%var_1980, %var_1981) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) */
}

def @func_12876() -> Tensor[(14, 14, 15), float32] {
  @func_12874() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_14434() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(30, 1), float32], Tensor[(1, 2, 3), float64], Tensor[(6, 1), float64], Tensor[(6, 2, 8), float32]) {
  %916 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(30, 1), float32], Tensor[(1, 2, 3), float64], Tensor[(6, 1), float64], Tensor[(6, 2, 8), float32]) {
    %900 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %901 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %902 = @func_4795() /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) */;
    %903 = %902.2;
    %904 = cast(%903, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
    %905 = cosh(%904) /* ty=Tensor[(30, 1), float32] */;
    %906 = cast(%905, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
    %907 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 1), float64] */;
    %908 = reshape(%907, newshape=[1, 2, 3]) /* ty=Tensor[(1, 2, 3), float64] */;
    %909 = @func_3282(%908) /* ty=(Tensor[(3, 2, 3), float64], Tensor[(1, 2, 3), float64]) */;
    %910 = @func_1847() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
    %911 = %900.3;
    %912 = %901.0;
    %913 = tan(%906) /* ty=Tensor[(30, 1), float32] */;
    %914 = %909.1;
    %915 = %910.1;
    (%911, %912, %913, %914, meta[relay.Constant][39] /* ty=Tensor[(6, 1), float64] */, %915)
  };
  %916() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(30, 1), float32], Tensor[(1, 2, 3), float64], Tensor[(6, 1), float64], Tensor[(6, 2, 8), float32]) */
}

def @func_12959(%var_12957: Tensor[(11, 30), int32]) -> (Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(420), int32], Tensor[(11, 30), float32]) {
  @func_12956(%var_12957) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(420), int32], Tensor[(11, 30), float32]) */
}

def @func_8018(%var_8016: Tensor[(9, 10, 14), float32], %var_8017: Tensor[(9, 10, 14), float32]) -> (Tensor[(9, 10, 14), int8], Tensor[(14, 14, 15), bool]) {
  @func_8014(%var_8016, %var_8017) /* ty=(Tensor[(9, 10, 14), int8], Tensor[(14, 14, 15), bool]) */
}

def @func_8402() -> (Tensor[(30), int32],) {
  %919 = fn () -> (Tensor[(30), int32],) {
    %917 = @func_2756() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(30), int32], Tensor[(30), int32], Tensor[(24, 2), float32]) */;
    %918 = %917.2;
    (%918,)
  };
  %919() /* ty=(Tensor[(30), int32],) */
}

def @func_6933() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %922 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
    %920 = @func_6726() /* ty=Tensor[(14, 14, 15), float32] */;
    %921 = @func_1195() /* ty=Tensor[(14, 14, 15), int8] */;
    (%920, %921)
  };
  %922() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */
}

def @func_7807() -> (Tensor[(14, 14, 15), float32],) {
  %925 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %923 = @func_6531() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %924 = %923.0;
    (%924,)
  };
  %925() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_6038() -> Tensor[(14, 14, 15), float32] {
  @func_5360() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_4796() -> (Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) {
  %932 = fn () -> (Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) {
    %926 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %927 = cast(meta[relay.Constant][40] /* ty=Tensor[(30, 1), int32] */, dtype="int32") /* ty=Tensor[(30, 1), int32] */;
    %928 = reshape(%927, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
    %929 = @func_156(%928) /* ty=(Tensor[(5, 14, 6), int32],) */;
    %930 = %926.1;
    %931 = %929.0;
    (%930, %931, meta[relay.Constant][40] /* ty=Tensor[(30, 1), int32] */)
  };
  %932() /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) */
}

def @func_6516() -> Tensor[(14, 14, 15), float32] {
  %933 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %933.0
}

def @func_7355() -> (Tensor[(14, 14, 15), float32],) {
  @func_7353() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_4203(%var_4201: Tensor[(7, 5, 13), int16]) -> (Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) {
  @func_4200(%var_4201) /* ty=(Tensor[(7, 5, 13), bool], Tensor[(14, 14, 15), float32]) */
}

def @func_6427() -> Tensor[(14, 14, 15), float32] {
  %934 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %934.0
}

def @func_5189() -> (Tensor[(1, 14, 13), float32],) {
  %937 = fn () -> (Tensor[(1, 14, 13), float32],) {
    %935 = @func_2679() /* ty=(Tensor[(1, 14, 13), float32],) */;
    %936 = %935.0;
    (%936,)
  };
  %937() /* ty=(Tensor[(1, 14, 13), float32],) */
}

def @func_963(%var_962: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %946 = fn (%var_945: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
    %938 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %939 = %938.1;
    %940 = cast(%939, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
    %941 = cast(%var_945, dtype="float32") /* ty=Tensor[(182), float32] */;
    %942 = reshape(%941, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
    %943 = @func_419(%942) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
    %944 = cosh(%940) /* ty=Tensor[(14, 14, 15), float32] */;
    %945 = %943.1;
    (%944, %945, %var_945)
  };
  %946(%var_962) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */
}

def @func_11156() -> Tensor[(14, 14, 15), float32] {
  %948 = fn () -> Tensor[(14, 14, 15), float32] {
    %947 = @func_5453() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %947.0
  };
  %948() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_5825(%var_5823: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(48), float32]) {
  @func_5822(%var_5823) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float64], Tensor[(5, 6), int32], Tensor[(48), float32]) */
}

def @func_6478() -> (Tensor[(14, 14, 15), float32],) {
  %951 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %949 = @func_4359() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %950 = %949.0;
    (%950,)
  };
  %951() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_9897() -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %955 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
    %952 = @func_5493() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
    %953 = @func_4224() /* ty=Tensor[(14, 14, 15), float32] */;
    %954 = %952.2;
    (%953, %954)
  };
  %955() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */
}

def @func_7380() -> Tensor[(14, 14, 15), float32] {
  %957 = fn () -> Tensor[(14, 14, 15), float32] {
    %956 = @func_1573() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %956.0
  };
  %957() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_1636() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  @func_1634() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_1573() -> (Tensor[(14, 14, 15), float32],) {
  %958 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %959 = %958.0;
  (%959,)
}

def @func_10521(%var_10520: Tensor[(5, 15, 9), float32]) -> (Tensor[(5, 15, 9), float32], Tensor[(14, 14, 15), float32]) {
  %967 = fn (%var_10505: Tensor[(5, 15, 9), float32]) -> (Tensor[(5, 15, 9), float32], Tensor[(14, 14, 15), float32]) {
    %960 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
    %961 = shape_of(%var_10505, dtype="int32") /* ty=Tensor[(3), int32] */;
    %962 = cast(%var_10505, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
    %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %964 = @func_9514() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %965 = divide(%962, %963) /* ty=Tensor[(5, 15, 9), float32] */;
    %966 = %964.0;
    (%965, %966)
  };
  %967(%var_10520) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_11683() -> Tensor[(14, 14, 15), float32] {
  %969 = fn () -> Tensor[(14, 14, 15), float32] {
    %968 = @func_6663() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %968.0
  };
  %969() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_1609() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %970 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %971 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %972 = %970.3;
  %973 = %971.0;
  (%972, %973)
}

def @func_4226() -> Tensor[(14, 14, 15), float32] {
  @func_4224() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_9032() -> Tensor[(14, 14, 15), float32] {
  @func_3160() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_3678(%var_3676: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(48), float32]) {
  @func_3675(%var_3676) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(48), float32]) */
}

def @func_7551() -> (Tensor[(5, 14, 6), int32],) {
  %976 = fn () -> (Tensor[(5, 14, 6), int32],) {
    %974 = @func_6878() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) */;
    %975 = %974.0;
    (%975,)
  };
  %976() /* ty=(Tensor[(5, 14, 6), int32],) */
}

def @func_14588(%var_14586: Tensor[(2, 24), float32], %var_14587: Tensor[(2, 24), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(2, 24), float64], Tensor[(14, 14, 15), float32]) {
  %992 = fn (%var_14535: Tensor[(2, 24), float32], %var_14560: Tensor[(2, 24), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(2, 24), float64], Tensor[(14, 14, 15), float32]) {
    %977 = cast(meta[relay.Constant][42] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %978 = reshape(%977, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %979 = @func_2351(%978) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(182), float32]) */;
    %980 = cast(%var_14535, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
    %981 = reshape(%980, newshape=[12, 4]) /* ty=Tensor[(12, 4), float32] */;
    %982 = @func_6287(%981) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(12, 4), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(5, 14, 6), int32]) */;
    %983 = cast(%var_14560, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
    %984 = shape_of(%var_14535, dtype="int32") /* ty=Tensor[(2), int32] */;
    %985 = cast(%var_14535, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
    %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %987 = @func_11995() /* ty=Tensor[(14, 14, 15), float32] */;
    %988 = %979.0;
    %989 = %982.0;
    %990 = floor_divide(%985, %986) /* ty=Tensor[(2, 24), float64] */;
    %991 = @func_11995() /* ty=Tensor[(14, 14, 15), float32] */;
    (%987, %988, meta[relay.Constant][42] /* ty=Tensor[(182), float32] */, %989, %990, %991)
  };
  %992(%var_14586, %var_14587) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(2, 24), float64], Tensor[(14, 14, 15), float32]) */
}

def @func_9383(%var_9364: Tensor[(1, 182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(14, 14, 15), float32]) {
  %993 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %994 = @func_7806() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %995 = %994.0;
  %996 = cast(%995, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %997 = cast(%var_9364, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %998 = reshape(%996, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %999 = reshape(%997, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1000 = @func_3098(%998, %999) /* ty=(Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) */;
  %1001 = %993.1;
  %1002 = %1000.2;
  %1003 = @func_6038() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1001, %995, %1002, %var_9364, %1003)
}

def @func_9313(%var_9312: Tensor[(6, 10, 5), uint32]) -> (Tensor[(6, 10, 5), uint32],) {
  %1009 = fn (%var_9305: Tensor[(6, 10, 5), uint32]) -> (Tensor[(6, 10, 5), uint32],) {
    %1004 = cast(%var_9305, dtype="uint32") /* ty=Tensor[(6, 10, 5), uint32] */;
    %1005 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(6, 10, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1006 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 10, 5), uint32] */, dtype="uint32") /* ty=Tensor[(6, 10, 5), uint32] */;
    %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1008 = right_shift(%1006, %1007) /* ty=Tensor[(6, 10, 5), uint32] */;
    (%1008,)
  };
  %1009(%var_9312) /* ty=(Tensor[(6, 10, 5), uint32],) */
}

def @func_12814() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  @func_12812() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_1196() -> Tensor[(14, 14, 15), int8] {
  %1011 = fn () -> Tensor[(14, 14, 15), int8] {
    %1010 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %1010.1
  };
  %1011() /* ty=Tensor[(14, 14, 15), int8] */
}

def @func_12157() -> (Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) {
  @func_12155() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(4, 12), float32]) */
}

def @func_2354(%var_2352: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(182), float32]) {
  @func_2351(%var_2352) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(182), float32]) */
}

def @func_10178(%var_10177: Tensor[(1, 455), int16]) -> (Tensor[(30), int32], Tensor[(5, 16, 5), float64], Tensor[(400), float32], Tensor[(7, 5, 13), bool], Tensor[(1, 455), int16]) {
  %1024 = fn (%var_10172: Tensor[(1, 455), int16]) -> (Tensor[(30), int32], Tensor[(5, 16, 5), float64], Tensor[(400), float32], Tensor[(7, 5, 13), bool], Tensor[(1, 455), int16]) {
    %1012 = @func_8401() /* ty=(Tensor[(30), int32],) */;
    %1013 = cast(meta[relay.Constant][44] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
    %1014 = reshape(%1013, newshape=[5, 16, 5]) /* ty=Tensor[(5, 16, 5), float64] */;
    %1015 = @func_206(%1014) /* ty=(Tensor[(5, 16, 5), float64], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(5, 14, 6), int32]) */;
    %1016 = cast(meta[relay.Constant][44] /* ty=Tensor[(400), float64] */, dtype="float32") /* ty=Tensor[(400), float32] */;
    %1017 = cast(%var_10172, dtype="int16") /* ty=Tensor[(1, 455), int16] */;
    %1018 = reshape(%1017, newshape=[455]) /* ty=Tensor[(455), int16] */;
    %1019 = @func_4747(%1018) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(7, 5, 13), bool], Tensor[(455), float64]) */;
    %1020 = %1012.0;
    %1021 = %1015.0;
    %1022 = sin(%1016) /* ty=Tensor[(400), float32] */;
    %1023 = %1019.1;
    (%1020, %1021, %1022, %1023, %var_10172)
  };
  %1024(%var_10177) /* ty=(Tensor[(30), int32], Tensor[(5, 16, 5), float64], Tensor[(400), float32], Tensor[(7, 5, 13), bool], Tensor[(1, 455), int16]) */
}

def @func_12276(%var_12275: int64) -> (Tensor[(1, 4, 12), bool], Tensor[(14, 14, 15), float32]) {
  %1030 = fn (%var_12265: int64) -> (Tensor[(1, 4, 12), bool], Tensor[(14, 14, 15), float32]) {
    %1025 = cast(%var_12265, dtype="bool") /* ty=bool */;
    %1026 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 4, 12), int64] */, dtype="bool") /* ty=Tensor[(1, 4, 12), bool] */;
    %1027 = @func_7468() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1028 = less(%1025, %1026) /* ty=Tensor[(1, 4, 12), bool] */;
    %1029 = %1027.0;
    (%1028, %1029)
  };
  %1030(%var_12275) /* ty=(Tensor[(1, 4, 12), bool], Tensor[(14, 14, 15), float32]) */
}

def @func_14496() -> (Tensor[(14, 14, 15), float32],) {
  %1031 = @func_2649() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %1032 = %1031.0;
  (%1032,)
}

def @func_7135(%var_7133: Tensor[(14, 14, 15), float32]) -> (Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32]) {
  @func_7132(%var_7133) /* ty=(Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32]) */
}

def @func_5494() -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) {
  %1039 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) {
    %1033 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %1034 = cast(meta[relay.Constant][46] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1035 = reshape(%1034, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %1036 = @func_2087(%1035) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32]) */;
    %1037 = %1033.1;
    %1038 = %1036.2;
    (%1037, %1038, meta[relay.Constant][46] /* ty=Tensor[(182), float32] */)
  };
  %1039() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */
}

def @func_14343() -> (Tensor[(30), float32], Tensor[(14, 14, 15), float32]) {
  @func_14341() /* ty=(Tensor[(30), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_3626() -> Tensor[(14, 14, 15), float32] {
  %1041 = fn () -> Tensor[(14, 14, 15), float32] {
    %1040 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1040.0
  };
  %1041() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_6429() -> Tensor[(14, 14, 15), float32] {
  @func_6427() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_12200() -> Tensor[(1, 14, 13), float64] {
  %1045 = fn () -> Tensor[(1, 14, 13), float64] {
    %1042 = @func_12031() /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
    %1043 = %1042.0;
    %1044 = cast(%1043, dtype="float64") /* ty=Tensor[(1, 14, 13), float64] */;
    rsqrt(%1044) /* ty=Tensor[(1, 14, 13), float64] */
  };
  %1045() /* ty=Tensor[(1, 14, 13), float64] */
}

def @func_11949(%var_11948: Tensor[(8, 16, 15), uint16]) -> Tensor[(8, 16, 15), bool] {
  %1050 = fn (%var_11938: Tensor[(8, 16, 15), uint16]) -> Tensor[(8, 16, 15), bool] {
    %1046 = cast(%var_11938, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
    %1047 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(8, 16, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1048 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 16, 15), uint16] */, dtype="bool") /* ty=Tensor[(8, 16, 15), bool] */;
    %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%1048, %1049) /* ty=Tensor[(8, 16, 15), bool] */
  };
  %1050(%var_11948) /* ty=Tensor[(8, 16, 15), bool] */
}

def @func_7527() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1055 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %1051 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1052 = @func_2171() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1053 = %1051.0;
    %1054 = %1052.0;
    (%1053, %1054)
  };
  %1055() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_5352() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) {
  @func_5350() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(24), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool]) */
}

def @func_11504() -> (Tensor[(1, 14, 13), float32],) {
  @func_11502() /* ty=(Tensor[(1, 14, 13), float32],) */
}

def @func_10969(%var_10965: Tensor[(30, 1), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(30, 1), int32]) {
  %1056 = @func_10351() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1057 = cast(%var_10965, dtype="int32") /* ty=Tensor[(30, 1), int32] */;
  %1058 = %1056.0;
  %1059 = cast(%1058, dtype="int8") /* ty=Tensor[(14, 14, 15), int8] */;
  %1060 = reshape(%1057, newshape=[5, 6]) /* ty=Tensor[(5, 6), int32] */;
  %1061 = reshape(%1059, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), int8] */;
  %1062 = @func_4648(%1060, %1061) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32], Tensor[(14, 14, 15), uint8]) */;
  %1063 = %1062.3;
  (%1058, %1063, %var_10965)
}

def @func_7714() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32]) {
  %1069 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32]) {
    %1064 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1065 = @func_3829() /* ty=(Tensor[(5, 14, 6), int32],) */;
    %1066 = @func_6038() /* ty=Tensor[(14, 14, 15), float32] */;
    %1067 = %1064.0;
    %1068 = %1065.0;
    (%1066, %1067, %1068)
  };
  %1069() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32]) */
}

def @func_1847() -> (Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) {
  %1070 = @func_1609() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1071 = cast(meta[relay.Constant][48] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1072 = reshape(%1071, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
  %1073 = %1070.0;
  %1074 = @func_21(%1072) /* ty=Tensor[(6, 2, 8), float32] */;
  (%1073, %1074, meta[relay.Constant][48] /* ty=Tensor[(48), float32] */)
}

def @func_837() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %1078 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
    %1075 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %1076 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
    %1077 = %1075.1;
    (%1076, %1077)
  };
  %1078() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */
}

def @func_3160() -> Tensor[(14, 14, 15), float32] {
  %1079 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1079.0
}

def @func_11523() -> (Tensor[(14, 14, 15), float32],) {
  %1082 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %1080 = @func_7526() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %1081 = %1080.0;
    (%1081,)
  };
  %1082() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_1772(%var_1770: Tensor[(14, 14, 15), float32], %var_1771: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) {
  %1096 = fn (%var_1754: Tensor[(14, 14, 15), float32], %var_1765: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) {
    %1083 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %1084 = %1083.2;
    %1085 = cast(%var_1754, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
    %1086 = shape_of(%1084, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1087 = cast(%1084, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
    %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1089 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 6), int32] */, dtype="int32") /* ty=Tensor[(5, 6), int32] */;
    %1090 = cast(%var_1765, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1091 = reshape(%1089, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %1092 = reshape(%1090, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1093 = @func_381(%1091, %1092) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(6, 2, 8), float32], Tensor[(48), float32]) */;
    %1094 = equal(%1087, %1088) /* ty=Tensor[(14, 14, 15), bool] */;
    %1095 = %1093.2;
    (%1094, %1095, meta[relay.Constant][49] /* ty=Tensor[(5, 6), int32] */, %var_1765)
  };
  %1096(%var_1770, %var_1771) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */
}

def @func_11037(%var_11036: Tensor[(312), float32]) -> (Tensor[(14, 14, 15), int8], Tensor[(182), float32], Tensor[(30), int32], Tensor[(14, 14, 15), int8], Tensor[(312), float32], Tensor[(14, 14, 15), float32]) {
  %1109 = fn (%var_11022: Tensor[(312), float32]) -> (Tensor[(14, 14, 15), int8], Tensor[(182), float32], Tensor[(30), int32], Tensor[(14, 14, 15), int8], Tensor[(312), float32], Tensor[(14, 14, 15), float32]) {
    %1097 = @func_4443() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %1098 = cast(meta[relay.Constant][50] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
    %1099 = reshape(%1098, newshape=[30]) /* ty=Tensor[(30), int32] */;
    %1100 = @func_6565(%1099) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(5, 84), int32], Tensor[(30), int32]) */;
    %1101 = cast(%var_11022, dtype="float32") /* ty=Tensor[(312), float32] */;
    %1102 = reshape(%1101, newshape=[312]) /* ty=Tensor[(312), float32] */;
    %1103 = @func_10640(%1102) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(312), float32]) */;
    %1104 = @func_4687() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1105 = %1097.1;
    %1106 = %1100.1;
    %1107 = %1103.1;
    %1108 = %1104.0;
    (%1105, %1106, meta[relay.Constant][50] /* ty=Tensor[(30), int32] */, %1107, %var_11022, %1108)
  };
  %1109(%var_11036) /* ty=(Tensor[(14, 14, 15), int8], Tensor[(182), float32], Tensor[(30), int32], Tensor[(14, 14, 15), int8], Tensor[(312), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_12033() -> (Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) {
  @func_12031() /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_9230(%var_9229: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float64]) {
  %1122 = fn (%var_9201: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float64]) {
    %1110 = @func_7457() /* ty=Tensor[(14, 14, 15), float32] */;
    %1111 = cast(%1110, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
    %1112 = reshape(%1111, newshape=[2940]) /* ty=Tensor[(2940), float32] */;
    %1113 = @func_3540(%1112) /* ty=(Tensor[(24, 2), float32], Tensor[(2940), float32], Tensor[(182), float32], Tensor[(13, 3, 6), float32], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
    %1114 = @func_4359() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1115 = cast(%var_9201, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1116 = reshape(%1115, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float32] */;
    %1117 = @func_21(%1116) /* ty=Tensor[(6, 2, 8), float32] */;
    %1118 = cast(%1117, dtype="float64") /* ty=Tensor[(6, 2, 8), float64] */;
    %1119 = %1113.7;
    %1120 = %1114.0;
    %1121 = log2(%1118) /* ty=Tensor[(6, 2, 8), float64] */;
    (%1110, %1119, %var_9201, %1120, %1121)
  };
  %1122(%var_9229) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float64]) */
}

def @func_6565(%var_6563: Tensor[(30), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(5, 84), int32], Tensor[(30), int32]) {
  %1123 = @func_5493() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
  %1124 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 84), int32] */, dtype="int32") /* ty=Tensor[(5, 84), int32] */;
  %1125 = cast(%var_6563, dtype="int32") /* ty=Tensor[(30), int32] */;
  %1126 = reshape(%1124, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %1127 = reshape(%1125, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %1128 = @func_2990(%1126, %1127) /* ty=(Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) */;
  %1129 = %1123.0;
  %1130 = %1128.5;
  (%1129, %1130, meta[relay.Constant][51] /* ty=Tensor[(5, 84), int32] */, %var_6563)
}

def @func_11654(%var_11653: Tensor[(10, 42), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int8], Tensor[(10, 42), int32]) {
  %1138 = fn (%var_11650: Tensor[(10, 42), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int8], Tensor[(10, 42), int32]) {
    %1131 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1132 = cast(%var_11650, dtype="int32") /* ty=Tensor[(10, 42), int32] */;
    %1133 = reshape(%1132, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
    %1134 = @func_4129(%1133) /* ty=(Tensor[(5, 14, 6), int8], Tensor[(14, 14, 15), float32]) */;
    %1135 = %1131.0;
    %1136 = @func_9121() /* ty=Tensor[(14, 14, 15), float32] */;
    %1137 = %1134.0;
    (%1135, %1136, %1137, %var_11650)
  };
  %1138(%var_11653) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int8], Tensor[(10, 42), int32]) */
}

def @func_3952(%var_3928: Tensor[(5, 8, 2), int64]) -> (Tensor[(5, 8, 2), int64], Tensor[(5, 6), int32], Tensor[(2940), float32], Tensor[(48), float32], Tensor[(14, 14, 15), float32]) {
  %1139 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 8, 2), int64] */, dtype="int64") /* ty=Tensor[(5, 8, 2), int64] */;
  %1140 = shape_of(%var_3928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%var_3928, dtype="int64") /* ty=Tensor[(5, 8, 2), int64] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1143 = cast(meta[relay.Constant][53] /* ty=Tensor[(2940), float32] */, dtype="float32") /* ty=Tensor[(2940), float32] */;
  %1144 = cast(meta[relay.Constant][54] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1145 = reshape(%1143, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %1146 = reshape(%1144, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1147 = @func_1769(%1145, %1146) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %1148 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1149 = minimum(%1141, %1142) /* ty=Tensor[(5, 8, 2), int64] */;
  %1150 = %1147.2;
  %1151 = %1148.0;
  (%1149, %1150, meta[relay.Constant][53] /* ty=Tensor[(2940), float32] */, meta[relay.Constant][54] /* ty=Tensor[(48), float32] */, %1151)
}

def @func_1327() -> Tensor[(14, 14, 15), float32] {
  @func_1325() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_8529() -> (Tensor[(14, 14, 15), float64],) {
  @func_8527() /* ty=(Tensor[(14, 14, 15), float64],) */
}

def @func_3282(%var_3265: Tensor[(1, 2, 3), float64]) -> (Tensor[(3, 2, 3), float64], Tensor[(1, 2, 3), float64]) {
  %1152 = cast(%var_3265, dtype="float64") /* ty=Tensor[(1, 2, 3), float64] */;
  %1153 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 2, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 3), float64] */;
  %1154 = cast(%var_3265, dtype="float64") /* ty=Tensor[(1, 2, 3), float64] */;
  %1155 = divide(%1152, %1153) /* ty=Tensor[(3, 2, 3), float64] */;
  %1156 = asinh(%1154) /* ty=Tensor[(1, 2, 3), float64] */;
  (%1155, %1156)
}

def @func_3285(%var_3283: Tensor[(1, 2, 3), float64]) -> (Tensor[(3, 2, 3), float64], Tensor[(1, 2, 3), float64]) {
  @func_3282(%var_3283) /* ty=(Tensor[(3, 2, 3), float64], Tensor[(1, 2, 3), float64]) */
}

def @func_2573(%var_2572: Tensor[(1, 182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 182), float32], Tensor[(98, 6), float64], Tensor[(1, 182), float32]) {
  %1173 = fn (%var_2559: Tensor[(1, 182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 182), float32], Tensor[(98, 6), float64], Tensor[(1, 182), float32]) {
    %1157 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1158 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
    %1159 = @func_1573() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1160 = %1159.0;
    %1161 = cast(%1160, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
    %1162 = shape_of(%1158, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1163 = cast(%1158, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
    %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1165 = cast(meta[relay.Constant][56] /* ty=Tensor[(98, 6), float64] */, dtype="float64") /* ty=Tensor[(98, 6), float64] */;
    %1166 = cast(%var_2559, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
    %1167 = reshape(%1165, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
    %1168 = reshape(%1166, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
    %1169 = @func_1979(%1167, %1168) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) */;
    %1170 = %1157.0;
    %1171 = logical_and(%1163, %1164) /* ty=Tensor[(14, 14, 15), bool] */;
    %1172 = %1169.2;
    (%1170, %1171, %1172, meta[relay.Constant][56] /* ty=Tensor[(98, 6), float64] */, %var_2559)
  };
  %1173(%var_2572) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 182), float32], Tensor[(98, 6), float64], Tensor[(1, 182), float32]) */
}

def @func_3675(%var_3667: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(48), float32]) {
  %1174 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1175 = cast(meta[relay.Constant][57] /* ty=Tensor[(30), int32] */, dtype="int32") /* ty=Tensor[(30), int32] */;
  %1176 = cast(%var_3667, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1177 = reshape(%1175, newshape=[30]) /* ty=Tensor[(30), int32] */;
  %1178 = reshape(%1176, newshape=[24, 2]) /* ty=Tensor[(24, 2), float32] */;
  %1179 = @func_1105(%1177, %1178) /* ty=(Tensor[(14, 14, 15), int32], Tensor[(14, 14, 15), bool], Tensor[(48), float32], Tensor[(30), int32], Tensor[(24, 2), float32], Tensor[(6, 2, 8), float64]) */;
  %1180 = %1174.0;
  %1181 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %1182 = %1179.0;
  (%1180, %1181, %1182, meta[relay.Constant][57] /* ty=Tensor[(30), int32] */, %var_3667)
}

def @func_667() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1183 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1184 = %1183.0;
  %1185 = cast(meta[relay.Constant][58] /* ty=Tensor[(14, 14, 15), float32] */, dtype="int8") /* ty=Tensor[(14, 14, 15), int8] */;
  %1186 = shape_of(%1184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1187 = cast(%1184, dtype="int8") /* ty=Tensor[(14, 14, 15), int8] */;
  %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1189 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1190 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %1191 = subtract(%1187, %1188) /* ty=Tensor[(14, 14, 15), int8] */;
  %1192 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  %1193 = %1189.0;
  (%1190, %1191, %1192, %1193)
}

def @func_9736(%var_9734: Tensor[(10, 42), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(14, 14, 15), float32], Tensor[(10, 42), int32], Tensor[(30), int32]) {
  @func_9733(%var_9734) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(6, 2, 8), float32], Tensor[(14, 14, 15), float32], Tensor[(10, 42), int32], Tensor[(30), int32]) */
}

def @func_6939() -> Tensor[(14, 14, 15), float32] {
  %1194 = @func_3156() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1194.0
}

def @func_13699() -> (Tensor[(5, 14, 6), int32],) {
  %1195 = @func_7437() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %1196 = %1195.0;
  (%1196,)
}

def @func_5421() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(455), float64], Tensor[(455), int16]) {
  %1197 = @func_3829() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %1198 = cast(meta[relay.Constant][59] /* ty=Tensor[(455), int16] */, dtype="int16") /* ty=Tensor[(455), int16] */;
  %1199 = reshape(%1198, newshape=[455]) /* ty=Tensor[(455), int16] */;
  %1200 = @func_4747(%1199) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(7, 5, 13), bool], Tensor[(455), float64]) */;
  %1201 = %1197.0;
  %1202 = @func_2606() /* ty=Tensor[(14, 14, 15), float32] */;
  %1203 = @func_2606() /* ty=Tensor[(14, 14, 15), float32] */;
  %1204 = %1200.2;
  (%1201, %1202, %1203, %1204, meta[relay.Constant][59] /* ty=Tensor[(455), int16] */)
}

def @func_9122() -> Tensor[(14, 14, 15), float32] {
  %1205 = fn () -> Tensor[(14, 14, 15), float32] {
    @func_6939() /* ty=Tensor[(14, 14, 15), float32] */
  };
  %1205() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_11919() -> Tensor[(300), uint32] {
  %1206 = @func_10221() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) */;
  %1206.1
}

def @func_10353() -> (Tensor[(14, 14, 15), float32],) {
  @func_10351() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_14341() -> (Tensor[(30), float32], Tensor[(14, 14, 15), float32]) {
  %1207 = @func_2124() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(30), float32]) */;
  %1208 = %1207.1;
  %1209 = @func_7379() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1208, %1209)
}

def @func_9638() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1210 = @func_6477() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1211 = %1210.0;
  %1212 = @func_9032() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1211, %1212)
}

def @func_1413() -> (Tensor[(14, 14, 15), float32],) {
  %1214 = fn () -> (Tensor[(14, 14, 15), float32],) {
    %1213 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
    (%1213,)
  };
  %1214() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_6287(%var_6209: Tensor[(12, 4), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(12, 4), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), bool], Tensor[(5, 14, 6), int32]) {
  %1215 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
  %1216 = @func_2649() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %1217 = %1215.0;
  %1218 = cast(%1217, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %1219 = cast(%var_6209, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %1220 = reshape(%1218, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %1221 = reshape(%1219, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1222 = @func_1769(%1220, %1221) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %1223 = @func_5453() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1224 = %1223.0;
  %1225 = cast(%1224, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %1226 = %1216.2;
  %1227 = cast(%1226, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1228 = reshape(%1225, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %1229 = reshape(%1227, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1230 = @func_3098(%1228, %1229) /* ty=(Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) */;
  %1231 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %1232 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
  %1233 = %1222.0;
  %1234 = %1230.1;
  %1235 = @func_783() /* ty=Tensor[(14, 14, 15), bool] */;
  %1236 = %1231.0;
  (%1217, %1232, %1226, %1233, %var_6209, %1224, %1234, %1235, %1236)
}

def @func_1501() -> (Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) {
  %1254 = fn () -> (Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) {
    %1237 = cast(meta[relay.Constant][60] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
    %1238 = reshape(%1237, newshape=[5, 16, 5]) /* ty=Tensor[(5, 16, 5), float64] */;
    %1239 = @func_206(%1238) /* ty=(Tensor[(5, 16, 5), float64], Tensor[(5, 14, 6), int32], Tensor[(30), int32], Tensor[(5, 14, 6), int32]) */;
    %1240 = cast(meta[relay.Constant][61] /* ty=Tensor[(182, 1), float32] */, dtype="float32") /* ty=Tensor[(182, 1), float32] */;
    %1241 = reshape(%1240, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %1242 = @func_961(%1241) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
    %1243 = @func_1348() /* ty=(Tensor[(2, 9, 11), float64],) */;
    %1244 = %1243.0;
    %1245 = cast(%1244, dtype="float32") /* ty=Tensor[(2, 9, 11), float32] */;
    %1246 = cos(%1245) /* ty=Tensor[(2, 9, 11), float32] */;
    %1247 = cast(%1244, dtype="uint8") /* ty=Tensor[(2, 9, 11), uint8] */;
    %1248 = shape_of(%1246, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1249 = cast(%1246, dtype="uint8") /* ty=Tensor[(2, 9, 11), uint8] */;
    %1250 = dyn.reshape(%1247, %1248, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1251 = %1239.1;
    %1252 = %1242.1;
    %1253 = multiply(%1249, %1250) /* ty=Tensor[(2, 9, 11), uint8] */;
    (%1251, meta[relay.Constant][60] /* ty=Tensor[(400), float64] */, %1252, meta[relay.Constant][61] /* ty=Tensor[(182, 1), float32] */, %1253)
  };
  %1254() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */
}

def @func_7458() -> Tensor[(14, 14, 15), float32] {
  %1256 = fn () -> Tensor[(14, 14, 15), float32] {
    %1255 = @func_6993() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %1255.0
  };
  %1256() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_13286() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  %1261 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
    %1257 = @func_9896() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
    %1258 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
    %1259 = @func_6038() /* ty=Tensor[(14, 14, 15), float32] */;
    %1260 = %1257.1;
    (%1258, %1259, %1260)
  };
  %1261() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */
}

def @func_7924() -> (Tensor[(14, 14, 15), float32],) {
  @func_7922() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_6568(%var_6566: Tensor[(30), int32]) -> (Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(5, 84), int32], Tensor[(30), int32]) {
  @func_6565(%var_6566) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(5, 84), int32], Tensor[(30), int32]) */
}

def @func_8449() -> (Tensor[(14, 14, 15), int8],) {
  @func_8447() /* ty=(Tensor[(14, 14, 15), int8],) */
}

def @func_6878() -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) {
  %1262 = @func_6322() /* ty=(Tensor[(5, 14, 6), int32],) */;
  %1263 = %1262.0;
  %1264 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1263, %1264)
}

def @func_2606() -> Tensor[(14, 14, 15), float32] {
  %1265 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1265.0
}

def @func_421(%var_420: Tensor[(1, 14, 13), float32]) -> (Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) {
  %1270 = fn (%var_408: Tensor[(1, 14, 13), float32]) -> (Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) {
    %1266 = cast(%var_408, dtype="float32") /* ty=Tensor[(1, 14, 13), float32] */;
    %1267 = @func_330() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1268 = erf(%1266) /* ty=Tensor[(1, 14, 13), float32] */;
    %1269 = %1267.0;
    (%1268, %1269)
  };
  %1270(%var_420) /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_10223() -> (Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) {
  @func_10221() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(300), uint32], Tensor[(6, 10, 5), float64], Tensor[(14, 14, 15), float32]) */
}

def @func_12686(%var_12684: Tensor[(1, 27), int8], %var_12685: Tensor[(189), int8]) -> (Tensor[(14, 14, 15), float32], Tensor[(9, 3, 7), int8], Tensor[(1, 27), int8], Tensor[(189), int8]) {
  @func_12682(%var_12684, %var_12685) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(9, 3, 7), int8], Tensor[(1, 27), int8], Tensor[(189), int8]) */
}

def @func_8858() -> (Tensor[(14, 14, 15), float32],) {
  %1271 = @func_5360() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1271,)
}

def @func_2290(%var_2237: Tensor[(14, 14, 15), float32], %var_2264: Tensor[(14, 14, 15), uint64], %var_2287: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), float32], Tensor[(5, 6), int32], Tensor[(48), float32]) {
  %1272 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1273 = %1272.0;
  %1274 = cast(%var_2237, dtype="uint64") /* ty=Tensor[(14, 14, 15), uint64] */;
  %1275 = shape_of(%1273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1276 = cast(%1273, dtype="uint64") /* ty=Tensor[(14, 14, 15), uint64] */;
  %1277 = dyn.reshape(%1274, %1275, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1278 = minimum(%1276, %1277) /* ty=Tensor[(14, 14, 15), uint64] */;
  %1279 = cast(%var_2264, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %1280 = shape_of(%1278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1281 = cast(%1278, dtype="bool") /* ty=Tensor[(14, 14, 15), bool] */;
  %1282 = dyn.reshape(%1279, %1280, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1283 = @func_506() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1284 = cast(%1273, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %1285 = cast(%var_2287, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1286 = reshape(%1284, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %1287 = reshape(%1285, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1288 = @func_1769(%1286, %1287) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %1289 = greater(%1281, %1282) /* ty=Tensor[(14, 14, 15), bool] */;
  %1290 = %1283.1;
  %1291 = %1288.2;
  (%1289, %1290, %1291, %var_2287)
}

def @func_12370() -> Tensor[(1, 14, 13), float32] {
  %1292 = @func_11502() /* ty=(Tensor[(1, 14, 13), float32],) */;
  %1292.0
}

def @func_1575() -> (Tensor[(14, 14, 15), float32],) {
  @func_1573() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_3295(%var_3293: Tensor[(14, 12, 15), float32]) -> (Tensor[(14, 12, 15), float32],) {
  @func_3292(%var_3293) /* ty=(Tensor[(14, 12, 15), float32],) */
}

def @func_4972(%var_4926: Tensor[(9, 10, 11), float32], %var_4927: Tensor[(9, 10, 11), float32]) -> (Tensor[(9, 10, 11), bool], Tensor[(9, 10, 11), float64], Tensor[(14, 14, 15), float32], Tensor[(30), int32], Tensor[(48), float32], Tensor[(5, 84), int32]) {
  %1293 = cast(%var_4927, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %1294 = shape_of(%var_4926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1295 = cast(%var_4926, dtype="float32") /* ty=Tensor[(9, 10, 11), float32] */;
  %1296 = dyn.reshape(%1293, %1294, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1297 = power(%1295, %1296) /* ty=Tensor[(9, 10, 11), float32] */;
  %1298 = cast(%var_4926, dtype="bool") /* ty=Tensor[(9, 10, 11), bool] */;
  %1299 = shape_of(%1297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1300 = cast(%1297, dtype="bool") /* ty=Tensor[(9, 10, 11), bool] */;
  %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1302 = cast(%var_4926, dtype="float64") /* ty=Tensor[(9, 10, 11), float64] */;
  %1303 = cast(meta[relay.Constant][62] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1304 = cast(meta[relay.Constant][63] /* ty=Tensor[(5, 84), int32] */, dtype="int32") /* ty=Tensor[(5, 84), int32] */;
  %1305 = reshape(%1303, newshape=[2, 24]) /* ty=Tensor[(2, 24), float32] */;
  %1306 = reshape(%1304, newshape=[420, 1]) /* ty=Tensor[(420, 1), int32] */;
  %1307 = @func_4074(%1305, %1306) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(2, 24), bool], Tensor[(6, 2, 8), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(420, 1), int32], Tensor[(30), int32]) */;
  %1308 = logical_and(%1300, %1301) /* ty=Tensor[(9, 10, 11), bool] */;
  %1309 = sigmoid(%1302) /* ty=Tensor[(9, 10, 11), float64] */;
  %1310 = @func_3625() /* ty=Tensor[(14, 14, 15), float32] */;
  %1311 = %1307.7;
  (%1308, %1309, %1310, %1311, meta[relay.Constant][62] /* ty=Tensor[(48), float32] */, meta[relay.Constant][63] /* ty=Tensor[(5, 84), int32] */)
}

def @func_7879() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  @func_7877() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */
}

def @func_3098(%var_3044: Tensor[(14, 14, 15), float32], %var_3060: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), int64], Tensor[(182), float32], Tensor[(182), float32], Tensor[(48), float32], Tensor[(24, 2), float32], Tensor[(14, 14, 15), float32]) {
  %1312 = @func_2376() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1313 = %1312.0;
  %1314 = cast(%var_3044, dtype="int64") /* ty=Tensor[(14, 14, 15), int64] */;
  %1315 = shape_of(%1313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1316 = cast(%1313, dtype="int64") /* ty=Tensor[(14, 14, 15), int64] */;
  %1317 = dyn.reshape(%1314, %1315, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1318 = cast(%var_3060, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1319 = reshape(%1318, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1320 = @func_1235(%1319) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(182), float32]) */;
  %1321 = cast(%1313, dtype="float32") /* ty=Tensor[(14, 14, 15), float32] */;
  %1322 = cast(meta[relay.Constant][64] /* ty=Tensor[(24, 2), float32] */, dtype="float32") /* ty=Tensor[(24, 2), float32] */;
  %1323 = reshape(%1321, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float32] */;
  %1324 = reshape(%1322, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1325 = @func_1769(%1323, %1324) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(30), int32], Tensor[(5, 6), int32], Tensor[(48), float32]) */;
  %1326 = add(%1316, %1317) /* ty=Tensor[(14, 14, 15), int64] */;
  %1327 = %1320.1;
  %1328 = %1325.3;
  %1329 = @func_624() /* ty=Tensor[(14, 14, 15), float32] */;
  (%1326, %1327, %var_3060, %1328, meta[relay.Constant][64] /* ty=Tensor[(24, 2), float32] */, %1329)
}

def @func_3783() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1333 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %1330 = @func_3405() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %1331 = @func_2385() /* ty=Tensor[(14, 14, 15), float32] */;
    %1332 = %1330.0;
    (%1331, %1332)
  };
  %1333() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_12874() -> Tensor[(14, 14, 15), float32] {
  %1334 = @func_12721() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1334.0
}

def @func_7732() -> Tensor[(14, 14, 15), float32] {
  @func_7730() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_7438() -> (Tensor[(5, 14, 6), int32],) {
  %1336 = fn () -> (Tensor[(5, 14, 6), int32],) {
    %1335 = @func_4471() /* ty=Tensor[(5, 14, 6), int32] */;
    (%1335,)
  };
  %1336() /* ty=(Tensor[(5, 14, 6), int32],) */
}

def @func_7678(%var_7676: Tensor[(30), int32]) -> (Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32], Tensor[(12, 4), float32]) {
  @func_7675(%var_7676) /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(30), int32], Tensor[(12, 4), float32]) */
}

def @func_8641() -> (Tensor[(14, 14, 15), float32],) {
  @func_8639() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_5237(%var_5235: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) {
  @func_5234(%var_5235) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */
}

def @func_2386() -> Tensor[(14, 14, 15), float32] {
  %1338 = fn () -> Tensor[(14, 14, 15), float32] {
    %1337 = @func_560() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1337.0
  };
  %1338() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_2994(%var_2992: Tensor[(5, 14, 6), int32], %var_2993: Tensor[(30), int32]) -> (Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) {
  @func_2990(%var_2992, %var_2993) /* ty=(Tensor[(24, 2), float32], Tensor[(14, 14, 15), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(588), float64], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), uint16], Tensor[(6, 2, 8), float32], Tensor[(5, 14, 6), int32], Tensor[(30), int32]) */
}

def @func_3260(%var_3258: Tensor[(48), float32]) -> (Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) {
  @func_3257(%var_3258) /* ty=(Tensor[(14, 14, 15), bool], Tensor[(5, 6), int32], Tensor[(48), float32], Tensor[(14, 14, 15), int8]) */
}

def @func_2207() -> Tensor[(5, 14, 6), int32] {
  %1339 = @func_1500() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(400), float64], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(2, 9, 11), uint8]) */;
  %1339.0
}

def @func_7183(%var_7182: Tensor[(48, 7), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48, 7), bool]) {
  %1348 = fn (%var_7175: Tensor[(48, 7), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48, 7), bool]) {
    %1340 = cast(meta[relay.Constant][65] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
    %1341 = reshape(%1340, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1342 = @func_3675(%1341) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(14, 14, 15), int32], Tensor[(30), int32], Tensor[(48), float32]) */;
    %1343 = cast(meta[relay.Constant][65] /* ty=Tensor[(48, 1), float32] */, dtype="bool") /* ty=Tensor[(48, 1), bool] */;
    %1344 = cast(%var_7175, dtype="bool") /* ty=Tensor[(48, 7), bool] */;
    %1345 = @func_3160() /* ty=Tensor[(14, 14, 15), float32] */;
    %1346 = %1342.0;
    %1347 = equal(%1343, %1344) /* ty=Tensor[(48, 7), bool] */;
    (%1345, %1346, %1347)
  };
  %1348(%var_7182) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(48, 7), bool]) */
}

def @func_7877() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %1349 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1350 = @func_4795() /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(30, 1), int32]) */;
  %1351 = %1349.0;
  %1352 = %1350.0;
  (%1351, %1352)
}

def @func_4000() -> (Tensor[(14, 14, 15), float32],) {
  %1353 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_8305(%var_8304: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1367 = fn (%var_8257: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %1355 = @func_667() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %1356 = @func_7550() /* ty=(Tensor[(5, 14, 6), int32],) */;
    %1357 = cast(%var_8257, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1358 = reshape(%1357, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
    %1359 = @func_883(%1358) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), bool], Tensor[(1, 14, 13), float32], Tensor[(182, 1), float32]) */;
    %1360 = @func_5453() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1361 = @func_7468() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1362 = %1355.1;
    %1363 = %1356.0;
    %1364 = %1359.0;
    %1365 = %1360.0;
    %1366 = %1361.0;
    (%1362, %1363, %1364, %var_8257, %1365, %1366)
  };
  %1367(%var_8304) /* ty=(Tensor[(14, 14, 15), int8], Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_13144(%var_13143: Tensor[(196), float64]) -> (Tensor[(30), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 2, 7), float64], Tensor[(196), float64], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
  %1384 = fn (%var_13123: Tensor[(196), float64]) -> (Tensor[(30), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 2, 7), float64], Tensor[(196), float64], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) {
    %1368 = @func_2124() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(30), float32]) */;
    %1369 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1370 = cast(meta[relay.Constant][66] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1371 = reshape(%1370, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %1372 = @func_8149(%1371) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32]) */;
    %1373 = cast(%var_13123, dtype="float64") /* ty=Tensor[(196), float64] */;
    %1374 = reshape(%1373, newshape=[14, 2, 7]) /* ty=Tensor[(14, 2, 7), float64] */;
    %1375 = @func_13075(%1374) /* ty=(Tensor[(14, 2, 7), float64],) */;
    %1376 = @func_9514() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1377 = @func_836() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %1378 = %1368.1;
    %1379 = %1369.0;
    %1380 = %1372.2;
    %1381 = %1375.0;
    %1382 = %1376.0;
    %1383 = %1377.1;
    (%1378, %1379, %1380, meta[relay.Constant][66] /* ty=Tensor[(182), float32] */, %1381, %var_13123, %1382, %1383)
  };
  %1384(%var_13143) /* ty=(Tensor[(30), float32], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(14, 2, 7), float64], Tensor[(196), float64], Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */
}

def @func_8694() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1387 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %1385 = @func_7487() /* ty=Tensor[(14, 14, 15), float32] */;
    %1386 = @func_7487() /* ty=Tensor[(14, 14, 15), float32] */;
    (%1385, %1386)
  };
  %1387() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_4651(%var_4649: Tensor[(5, 6), int32], %var_4650: Tensor[(14, 14, 15), int8]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32], Tensor[(14, 14, 15), uint8]) {
  %1403 = fn (%var_4591: Tensor[(5, 6), int32], %var_4600: Tensor[(14, 14, 15), int8]) -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32], Tensor[(14, 14, 15), uint8]) {
    %1388 = @func_4000() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1389 = @func_1412() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1390 = cast(%var_4591, dtype="int32") /* ty=Tensor[(5, 6), int32] */;
    %1391 = reshape(%1390, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), int32] */;
    %1392 = @func_156(%1391) /* ty=(Tensor[(5, 14, 6), int32],) */;
    %1393 = @func_3405() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), int8]) */;
    %1394 = %1393.1;
    %1395 = cast(%var_4600, dtype="uint8") /* ty=Tensor[(14, 14, 15), uint8] */;
    %1396 = shape_of(%1394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1397 = cast(%1394, dtype="uint8") /* ty=Tensor[(14, 14, 15), uint8] */;
    %1398 = dyn.reshape(%1395, %1396, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1399 = %1388.0;
    %1400 = %1389.0;
    %1401 = %1392.0;
    %1402 = bitwise_and(%1397, %1398) /* ty=Tensor[(14, 14, 15), uint8] */;
    (%1399, %1400, %1401, %var_4591, %1402)
  };
  %1403(%var_4649, %var_4650) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32], Tensor[(5, 14, 6), int32], Tensor[(5, 6), int32], Tensor[(14, 14, 15), uint8]) */
}

def @func_10714() -> (Tensor[(5, 14, 6), int32],) {
  %1404 = @func_6878() /* ty=(Tensor[(5, 14, 6), int32], Tensor[(14, 14, 15), float32]) */;
  %1405 = %1404.0;
  (%1405,)
}

def @func_626() -> Tensor[(14, 14, 15), float32] {
  @func_624() /* ty=Tensor[(14, 14, 15), float32] */
}

def @func_13077(%var_13076: Tensor[(14, 2, 7), float64]) -> (Tensor[(14, 2, 7), float64],) {
  %1409 = fn (%var_13065: Tensor[(14, 2, 7), float64]) -> (Tensor[(14, 2, 7), float64],) {
    %1406 = cast(6.54968f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1407 = cast(%var_13065, dtype="float64") /* ty=Tensor[(14, 2, 7), float64] */;
    %1408 = mod(%1406, %1407) /* ty=Tensor[(14, 2, 7), float64] */;
    (%1408,)
  };
  %1409(%var_13076) /* ty=(Tensor[(14, 2, 7), float64],) */
}

def @func_13819() -> (Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(12, 4), float32], Tensor[(70, 6), int32]) {
  %1418 = fn () -> (Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(12, 4), float32], Tensor[(70, 6), int32]) {
    %1410 = @func_12031() /* ty=(Tensor[(1, 14, 13), float32], Tensor[(14, 14, 15), float32]) */;
    %1411 = cast(meta[relay.Constant][67] /* ty=Tensor[(12, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
    %1412 = cast(meta[relay.Constant][68] /* ty=Tensor[(70, 6), int32] */, dtype="int32") /* ty=Tensor[(70, 6), int32] */;
    %1413 = reshape(%1411, newshape=[2, 24]) /* ty=Tensor[(2, 24), float32] */;
    %1414 = reshape(%1412, newshape=[420, 1]) /* ty=Tensor[(420, 1), int32] */;
    %1415 = @func_4074(%1413, %1414) /* ty=(Tensor[(14, 14, 15), float32], Tensor[(2, 24), bool], Tensor[(6, 2, 8), float64], Tensor[(14, 14, 15), float32], Tensor[(182), float32], Tensor[(30), int32], Tensor[(420, 1), int32], Tensor[(30), int32]) */;
    %1416 = %1410.0;
    %1417 = %1415.4;
    (%1416, %1417, meta[relay.Constant][67] /* ty=Tensor[(12, 4), float32] */, meta[relay.Constant][68] /* ty=Tensor[(70, 6), int32] */)
  };
  %1418() /* ty=(Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(12, 4), float32], Tensor[(70, 6), int32]) */
}

def @func_2351(%var_2339: Tensor[(182), float32]) -> (Tensor[(14, 14, 15), float32], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(182), float32]) {
  %1419 = @func_1609() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
  %1420 = cast(meta[relay.Constant][69] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %1421 = cast(%var_2339, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1422 = reshape(%1420, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %1423 = reshape(%1421, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %1424 = @func_1979(%1422, %1423) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(182), float32], Tensor[(1, 182), float32]) */;
  %1425 = %1419.0;
  %1426 = %1424.0;
  (%1425, %1426, meta[relay.Constant][69] /* ty=Tensor[(588), float64] */, %var_2339)
}

def @func_14498() -> (Tensor[(14, 14, 15), float32],) {
  @func_14496() /* ty=(Tensor[(14, 14, 15), float32],) */
}

def @func_6994() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1430 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %1427 = @func_3782() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */;
    %1428 = @func_1244() /* ty=Tensor[(14, 14, 15), float32] */;
    %1429 = %1427.1;
    (%1428, %1429)
  };
  %1430() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_10351() -> (Tensor[(14, 14, 15), float32],) {
  %1431 = @func_7353() /* ty=(Tensor[(14, 14, 15), float32],) */;
  %1432 = %1431.0;
  (%1432,)
}

def @func_13205() -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
  %1436 = fn () -> (Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) {
    %1433 = @func_5453() /* ty=(Tensor[(14, 14, 15), float32],) */;
    %1434 = @func_6939() /* ty=Tensor[(14, 14, 15), float32] */;
    %1435 = %1433.0;
    (%1434, %1435)
  };
  %1436() /* ty=(Tensor[(14, 14, 15), float32], Tensor[(14, 14, 15), float32]) */
}

def @func_12784(%var_12782: Tensor[(2, 8, 3), int16]) -> (Tensor[(2, 8, 3), int16], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(14, 14, 15), float32], Tensor[(1820), int32], Tensor[(2, 8, 3), bool], Tensor[(14, 14, 15), float32]) {
  @func_12781(%var_12782) /* ty=(Tensor[(2, 8, 3), int16], Tensor[(14, 14, 15), float32], Tensor[(182, 1), float32], Tensor[(14, 14, 15), float32], Tensor[(1820), int32], Tensor[(2, 8, 3), bool], Tensor[(14, 14, 15), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen496/build/output.py:4689: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen496/build/output.py:4694: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen496/build/output.py:4707: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen496/build/output.py:4712: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen496/build/output.py:4717: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen496/build/output.py:4722: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
def @main() -> Tensor[(8, 7, 7), float32] {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 7, 7), float32] */, dtype="float32") /* GeneratedSource */ /* ty=Tensor[(8, 7, 7), float32] */;
  acosh(%0) /* GeneratedSource */ /* ty=Tensor[(8, 7, 7), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

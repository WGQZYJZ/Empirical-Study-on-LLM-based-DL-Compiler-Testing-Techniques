import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_120 = relay.var("var_120", dtype = "float64", shape = (16, 9, 15))#candidate|120|(16, 9, 15)|var|float64
uop_121 = relay.log10(var_120.astype('float64')) # shape=(16, 9, 15)
uop_134 = relay.sinh(uop_121.astype('float64')) # shape=(16, 9, 15)
output = uop_134
output2 = uop_134
func_141 = relay.Function([var_120,], output)
mod['func_141'] = func_141
mod = relay.transform.InferType()(mod)
var_142 = relay.var("var_142", dtype = "float64", shape = (16, 9, 15))#candidate|142|(16, 9, 15)|var|float64
output = func_141(var_142)
func_143 = relay.Function([var_142], output)
mutated_mod['func_143'] = func_143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_153 = relay.var("var_153", dtype = "float64", shape = (7, 12, 13))#candidate|153|(7, 12, 13)|var|float64
uop_154 = relay.cosh(var_153.astype('float64')) # shape=(7, 12, 13)
var_161 = relay.var("var_161", dtype = "float64", shape = (7, 12, 13))#candidate|161|(7, 12, 13)|var|float64
bop_162 = relay.greater_equal(uop_154.astype('bool'), relay.reshape(var_161.astype('bool'), relay.shape_of(uop_154))) # shape=(7, 12, 13)
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
var_168 = relay.var("var_168", dtype = "float64", shape = (2160,))#candidate|168|(2160,)|var|float64
call_167 = func_141_call(relay.reshape(var_168.astype('float64'), [16, 9, 15]))
call_169 = func_141_call(relay.reshape(var_168.astype('float64'), [16, 9, 15]))
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
call_179 = func_141_call(relay.reshape(call_167.astype('float64'), [16, 9, 15]))
call_180 = func_141_call(relay.reshape(call_167.astype('float64'), [16, 9, 15]))
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
call_181 = func_141_call(relay.reshape(call_179.astype('float64'), [16, 9, 15]))
call_182 = func_141_call(relay.reshape(call_179.astype('float64'), [16, 9, 15]))
var_186 = relay.var("var_186", dtype = "float64", shape = (7, 12, 13))#candidate|186|(7, 12, 13)|var|float64
bop_187 = relay.multiply(uop_154.astype('int64'), relay.reshape(var_186.astype('int64'), relay.shape_of(uop_154))) # shape=(7, 12, 13)
output = relay.Tuple([bop_162,call_167,var_168,call_179,call_181,bop_187,])
output2 = relay.Tuple([bop_162,call_169,var_168,call_180,call_182,bop_187,])
func_190 = relay.Function([var_153,var_161,var_168,var_186,], output)
mod['func_190'] = func_190
mod = relay.transform.InferType()(mod)
var_191 = relay.var("var_191", dtype = "float64", shape = (7, 12, 13))#candidate|191|(7, 12, 13)|var|float64
var_192 = relay.var("var_192", dtype = "float64", shape = (7, 12, 13))#candidate|192|(7, 12, 13)|var|float64
var_193 = relay.var("var_193", dtype = "float64", shape = (2160,))#candidate|193|(2160,)|var|float64
var_194 = relay.var("var_194", dtype = "float64", shape = (7, 12, 13))#candidate|194|(7, 12, 13)|var|float64
output = func_190(var_191,var_192,var_193,var_194,)
func_195 = relay.Function([var_191,var_192,var_193,var_194,], output)
mutated_mod['func_195'] = func_195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_357 = relay.var("var_357", dtype = "uint8", shape = (4, 3, 10))#candidate|357|(4, 3, 10)|var|uint8
var_358 = relay.var("var_358", dtype = "uint8", shape = (4, 3, 10))#candidate|358|(4, 3, 10)|var|uint8
bop_359 = relay.left_shift(var_357.astype('uint8'), relay.reshape(var_358.astype('uint8'), relay.shape_of(var_357))) # shape=(4, 3, 10)
uop_362 = relay.atanh(var_357.astype('float32')) # shape=(4, 3, 10)
output = relay.Tuple([bop_359,uop_362,])
output2 = relay.Tuple([bop_359,uop_362,])
func_371 = relay.Function([var_357,var_358,], output)
mod['func_371'] = func_371
mod = relay.transform.InferType()(mod)
mutated_mod['func_371'] = func_371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mutated_mod.get_global_var('func_371')
var_373 = relay.var("var_373", dtype = "uint8", shape = (4, 3, 10))#candidate|373|(4, 3, 10)|var|uint8
var_374 = relay.var("var_374", dtype = "uint8", shape = (4, 3, 10))#candidate|374|(4, 3, 10)|var|uint8
call_372 = func_371_call(var_373,var_374,)
output = call_372
func_375 = relay.Function([var_373,var_374,], output)
mutated_mod['func_375'] = func_375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_526 = relay.var("var_526", dtype = "int16", shape = (3, 5, 7))#candidate|526|(3, 5, 7)|var|int16
const_527 = relay.const([[[10,-3,9,-7,1,5,4],[-5,4,7,9,4,1,6],[-3,-4,-4,-5,-3,8,-6],[1,8,-4,-4,-2,6,-8],[9,8,4,-7,9,3,-8]],[[7,-2,5,-4,2,-3,-10],[-8,7,2,-9,9,7,10],[9,-1,-2,-5,-4,-10,-7],[-1,-2,-5,8,6,6,-5],[-3,-4,-5,-9,9,5,-2]],[[-2,-8,6,-3,10,-10,9],[4,-10,-1,1,9,-4,-5],[4,6,4,8,-3,-3,-2],[-1,-3,-7,4,-7,-5,-5],[7,-9,-7,10,6,-5,10]]], dtype = "int16")#candidate|527|(3, 5, 7)|const|int16
bop_528 = relay.minimum(var_526.astype('int16'), relay.reshape(const_527.astype('int16'), relay.shape_of(var_526))) # shape=(3, 5, 7)
output = bop_528
output2 = bop_528
func_541 = relay.Function([var_526,], output)
mod['func_541'] = func_541
mod = relay.transform.InferType()(mod)
mutated_mod['func_541'] = func_541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_542 = relay.var("var_542", dtype = "int16", shape = (3, 5, 7))#candidate|542|(3, 5, 7)|var|int16
func_541_call = mutated_mod.get_global_var('func_541')
call_543 = func_541_call(var_542)
output = call_543
func_544 = relay.Function([var_542], output)
mutated_mod['func_544'] = func_544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_706 = relay.var("var_706", dtype = "float64", shape = (15, 4, 7))#candidate|706|(15, 4, 7)|var|float64
uop_707 = relay.cos(var_706.astype('float64')) # shape=(15, 4, 7)
output = uop_707
output2 = uop_707
func_721 = relay.Function([var_706,], output)
mod['func_721'] = func_721
mod = relay.transform.InferType()(mod)
mutated_mod['func_721'] = func_721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_722 = relay.var("var_722", dtype = "float64", shape = (15, 4, 7))#candidate|722|(15, 4, 7)|var|float64
func_721_call = mutated_mod.get_global_var('func_721')
call_723 = func_721_call(var_722)
output = call_723
func_724 = relay.Function([var_722], output)
mutated_mod['func_724'] = func_724
mutated_mod = relay.transform.InferType()(mutated_mod)
const_870 = relay.const(2.912212, dtype = "float32")#candidate|870|()|const|float32
const_871 = relay.const([[[7.708295,-7.486504,-9.523661,4.239573,7.529019],[4.763030,-9.850145,1.930973,-5.949620,4.380183],[9.206155,-9.347002,-1.013443,0.837750,7.610443],[8.761314,4.700294,0.968149,-5.016365,-8.462901],[-3.111237,-1.783886,6.896186,-3.606743,-2.042750],[3.980098,2.068644,-5.222051,4.123084,-4.439964],[-6.597268,-9.014631,9.750679,-3.967427,-6.419882],[-5.330154,-1.783438,-5.135563,-2.833825,9.822155],[-7.639220,-9.119133,8.449324,9.173027,1.101919]],[[8.633405,1.430538,2.585901,3.646606,4.672908],[1.832541,-0.438644,-4.263533,2.092777,-8.678970],[0.284265,-6.345865,-4.276646,-1.945103,-3.121211],[2.685437,-9.964014,2.978263,-6.499161,4.748336],[7.168461,3.179582,-5.886660,-9.015774,-7.062964],[-0.873692,8.048910,-7.219466,-2.804413,-6.010674],[-9.617492,6.276474,-9.907603,-6.694222,2.799621],[-8.083487,-1.040953,4.835478,9.653221,3.878939],[-6.906515,-6.971012,-1.172522,7.632460,1.873076]],[[1.011799,-4.562904,-5.065553,-5.192392,6.406211],[-9.135671,-9.876863,5.332665,4.848721,2.608581],[-9.602546,3.140595,1.777220,5.764252,-3.372038],[-1.709665,-5.078693,-3.067344,-9.405709,-8.504791],[6.025900,4.442675,2.053274,5.722097,-9.254309],[6.896651,-3.850338,1.896202,-2.586923,-3.047017],[3.741591,7.258507,7.773416,7.177720,-7.700863],[9.821564,-9.199674,4.002127,8.621009,0.522034],[6.705877,5.506380,6.843702,3.334510,6.581065]],[[-3.264534,2.645687,0.341700,-7.206534,-6.226969],[-5.947453,-3.421332,-4.385490,-3.296909,-6.024380],[4.151256,6.269578,1.501766,2.405196,-2.141130],[-2.019441,-7.173577,-1.525718,6.181699,-2.975482],[6.149909,1.866503,3.074419,2.314768,-7.945057],[6.169956,3.428568,-3.051397,7.422240,-6.241876],[-6.148421,1.502461,-4.716410,-8.605857,-6.328456],[3.524190,6.851148,1.459956,-1.911263,3.207242],[-8.573933,7.578958,6.176282,-6.918811,0.447651]],[[-1.219804,2.321110,-2.897028,-6.125477,5.089663],[9.958780,-4.394844,-4.894767,-4.041343,8.867061],[4.760536,-7.457415,1.945435,-1.761956,0.613359],[-0.791475,3.359543,0.094156,9.877772,2.885407],[-3.807413,5.842065,7.231318,-2.351079,0.247521],[4.660388,9.614565,3.019595,4.239309,-0.905289],[2.642263,6.256039,-7.921354,1.028492,-4.714816],[2.485646,7.798700,4.457321,-6.984507,-0.781649],[1.131297,-7.901934,-0.882658,-5.051814,5.916610]],[[-9.033268,4.351361,8.634919,-2.547784,-2.959254],[6.773567,0.072702,-5.200470,-8.041643,-4.092669],[-9.774722,-2.025440,-4.178948,-1.012705,0.158724],[4.872292,5.419267,4.109590,-5.309240,6.726791],[-1.941456,-0.846477,5.036800,-4.564145,5.229411],[7.581068,2.081182,-7.130184,-8.722699,-1.132094],[-7.021012,2.205209,-0.689352,6.292948,-4.658104],[5.190584,0.304356,-8.779544,8.839232,-0.600661],[0.457394,-0.040457,-3.486489,-8.644845,-6.928618]],[[-8.383383,-7.737553,-9.676331,-8.670589,5.275075],[-1.991263,0.077892,0.144895,-8.609243,-9.667731],[1.117283,-6.458101,-4.603553,2.243564,4.958779],[5.651378,-6.059620,0.066833,3.467095,-7.981207],[-8.060900,5.229564,4.500709,1.870689,4.735735],[-6.169159,5.851262,2.598955,4.047434,-9.955827],[-6.941509,-1.760493,8.155288,2.750328,9.282173],[-3.225164,-1.712977,1.269724,-9.417227,5.176280],[1.835679,-4.131008,7.859786,-5.233669,-3.047209]],[[4.816372,5.834163,-1.326496,-5.750726,9.181422],[7.184962,5.081927,0.804107,0.438993,-4.278103],[-2.632762,5.463260,-3.773860,-1.905731,7.293915],[-3.834828,2.100649,1.411877,-3.978030,3.485327],[9.686028,1.238099,-7.087207,-4.301902,-3.678017],[-7.033315,-7.866950,-4.636152,-0.089568,7.845765],[6.642998,7.460125,7.679550,-5.809912,-6.154827],[4.135839,1.810465,-8.496601,-6.335397,2.082691],[0.607575,3.602548,7.489800,1.914165,-3.104341]],[[-0.087028,-1.855122,-7.831006,-4.568257,0.225049],[-2.013258,-9.447506,-4.723936,6.600426,1.492171],[0.989565,-2.837016,-4.347633,-7.292241,-2.135632],[6.887297,8.047227,-3.518211,2.795903,-7.674846],[3.631226,-1.561921,-8.454359,-8.722804,6.181629],[1.162160,4.073624,0.232818,3.518596,4.729122],[-3.278172,-7.407076,-1.495949,2.624329,8.008033],[-5.209085,-8.719827,4.197842,8.384577,-9.033240],[1.143442,-2.875973,6.044017,8.602405,7.635617]],[[-7.641287,8.573979,1.747176,6.296067,2.592703],[2.176443,2.296093,-4.346949,-1.997961,5.731299],[-2.873291,-7.888743,6.619717,-7.989621,6.100724],[4.911823,5.341965,-2.967677,-7.158376,8.668345],[4.043841,0.983855,-7.404456,1.568580,-1.002341],[9.261585,4.479742,7.428950,-0.809004,5.787756],[1.218141,2.766007,4.721386,-6.721231,-4.570423],[-8.539636,-1.473213,-1.569591,2.832301,8.206039],[-7.156574,4.184404,5.374051,-1.345146,-0.647831]],[[2.373101,-1.165752,9.257323,-3.664952,2.627058],[4.321573,-1.120134,-7.926424,2.223968,-5.326391],[9.824731,1.943125,1.677439,5.726193,-7.248380],[9.502446,9.756425,5.928911,-4.511124,-4.665024],[-1.605254,9.262672,9.484754,8.895086,8.976550],[-1.843137,7.414509,2.027985,-3.620725,-1.696345],[4.881497,-1.219415,-7.476003,2.389352,9.660493],[-3.144042,4.530745,3.309947,0.087969,5.268855],[-0.628925,9.670375,-1.201160,-8.467950,2.612270]],[[9.349773,9.215235,-7.508895,3.339905,-2.118234],[0.069995,-9.330781,-8.134800,-2.124883,1.279697],[-0.574075,8.316885,3.541903,3.532228,-9.108531],[-8.511690,5.725086,2.045573,8.233994,1.047978],[6.276686,9.079880,7.670028,9.257889,4.357210],[-4.459282,6.386234,-5.889272,4.051839,-6.242807],[-9.016787,8.493552,-8.183462,7.943534,-6.578620],[5.005762,-9.108603,6.512776,-6.191085,4.167494],[8.517590,-6.878351,6.621462,2.948554,-9.089474]]], dtype = "float32")#candidate|871|(12, 9, 5)|const|float32
bop_872 = relay.less_equal(const_870.astype('bool'), const_871.astype('bool')) # shape=(12, 9, 5)
output = bop_872
output2 = bop_872
func_896 = relay.Function([], output)
mod['func_896'] = func_896
mod = relay.transform.InferType()(mod)
output = func_896()
func_897 = relay.Function([], output)
mutated_mod['func_897'] = func_897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_912 = func_896_call()
call_913 = func_896_call()
func_190_call = mod.get_global_var('func_190')
func_195_call = mutated_mod.get_global_var('func_195')
var_918 = relay.var("var_918", dtype = "float64", shape = (14, 78))#candidate|918|(14, 78)|var|float64
const_919 = relay.const([6.005759,9.227640,-7.246144,0.207774,-3.312966,-2.611145,-8.295564,-2.261701,7.363550,-7.806413,9.362889,-8.581144,6.467545,5.463901,-3.804339,-6.795312,-8.218278,0.211740,-9.119704,-5.076316,-7.206033,-7.576822,-1.122148,0.541136,-6.540048,4.616777,-0.061175,-5.751842,2.224130,2.801661,-7.449095,-5.763500,6.946314,5.712608,-5.116570,-5.269367,-2.598308,1.728503,3.289050,9.534532,-0.082284,4.908975,-0.937209,-9.608631,3.774241,5.901427,0.021426,-0.198131,0.626470,5.663861,1.411141,8.270165,-2.822020,0.618811,1.492727,1.253844,1.627026,6.179069,-4.330554,-6.131806,9.262888,0.528352,2.852612,4.790074,-1.536521,-1.606884,6.035801,2.593143,-6.065912,9.381128,7.338647,1.534198,-2.444193,4.605030,-3.424384,-9.913881,0.471856,5.090403,-7.532791,-9.073065,3.372387,-6.115237,-1.958169,-9.191311,-0.020191,-3.566166,9.543309,8.643433,-4.454780,-4.756022,-2.002810,-7.343989,2.723350,-6.348702,8.660772,-4.799789,1.551963,7.639680,-2.115342,-4.594342,8.246783,5.863269,-3.674469,-5.283254,5.083237,6.953540,-2.310140,3.097071,4.320381,5.345330,-1.378773,5.403929,-1.802737,5.803471,9.830788,-0.889156,0.002339,7.263972,-5.383953,-1.268378,-4.427888,2.490184,-3.169909,-5.066716,-6.145635,-3.748798,5.610051,-4.653525,-9.463117,1.072275,3.699055,-9.318340,9.452988,-6.915446,-3.640854,0.157915,-2.809012,6.485747,9.202146,2.780776,5.163157,0.477625,0.133573,-0.901006,4.012419,6.290350,5.009555,1.869729,6.102782,-9.716183,4.091181,2.290470,-4.472094,-6.960800,-6.222479,7.842224,6.111925,1.859589,-2.194864,-9.667726,5.208836,-5.349844,1.472994,5.943742,5.559272,-6.922298,1.129618,4.719410,-9.364161,2.601736,2.107472,-4.687920,2.889833,3.076545,-8.619212,-7.739994,-1.258153,-4.662180,-5.999239,-4.494295,-6.682466,-6.017122,-5.098047,8.677185,6.480802,-5.558254,-1.203626,3.736142,-1.937266,1.437291,-1.556491,-4.916036,8.595552,5.576977,-3.269787,9.270311,-8.457093,-7.481661,6.570634,-8.473270,-8.164739,1.737576,5.350920,1.463021,-3.771566,-9.238326,-8.872151,7.571811,-4.930822,1.158532,-2.663987,6.872469,5.111068,-5.395338,9.069893,1.358953,8.588779,-0.107718,-1.297752,-9.991984,4.200357,1.238272,4.929940,9.766839,2.663527,-2.888493,7.360069,0.972484,9.411221,-8.412283,-4.342616,-9.294581,-0.946522,-3.287810,-9.572365,9.127658,-3.612842,8.968831,6.889976,6.282121,-2.824694,8.264750,9.427121,-0.841115,-3.309304,3.314605,-5.822093,-2.027894,8.171812,9.174106,0.084306,1.813469,-9.083818,6.296127,0.861457,-3.550051,-4.998529,6.594269,-7.541412,-8.707729,-7.440739,7.343812,6.920141,-0.613794,4.942062,0.562996,-2.225963,-3.095773,2.409236,2.198405,-8.524503,-3.215713,3.535997,-4.079531,3.438916,-4.646904,-6.980048,8.708891,7.541982,-6.040523,5.500097,4.237522,-1.455064,-2.092572,5.205591,-3.272503,-2.517022,-0.069822,3.708262,3.786229,5.769689,-6.485544,-2.603573,5.144161,4.688868,-5.239782,2.313976,8.556527,8.574652,-3.323954,6.668676,-9.399438,9.162811,5.145435,0.246175,-3.855219,-9.721960,-0.354944,-3.112307,-2.042464,-5.559474,-8.660046,-7.354409,6.565738,-8.643236,-7.474136,3.294557,4.419939,3.099290,4.147076,2.307913,0.307618,-5.850157,-6.360541,4.261714,1.709027,3.503377,-2.176154,4.306396,3.720254,6.873765,1.084161,-4.914324,4.557284,6.263836,-1.069826,-4.972789,-1.700907,-8.834403,6.339585,9.350888,2.897780,0.576405,-1.197582,0.433388,-4.709381,2.440783,0.747953,-2.725686,1.964970,6.750108,-4.672225,4.640577,7.250693,-1.590291,5.140902,8.571785,-2.830648,-8.046990,4.737870,5.443098,-7.146438,8.250622,-4.350751,9.761843,7.178569,-6.481871,-0.393202,-5.498446,2.646888,4.417752,-1.906101,4.131524,0.126245,2.266082,6.861784,-5.573874,9.867105,-9.516792,3.246748,8.257174,-0.894693,-2.595193,4.992914,-2.093326,0.587010,0.777700,-5.403101,7.841971,0.110327,-7.380374,9.733975,-0.460433,-4.460837,-2.907490,-6.811156,-1.695927,4.306362,-6.489625,0.487481,2.673588,-6.186099,-4.085933,9.514407,-4.946139,-2.590778,-1.212639,7.375138,-1.918772,0.621635,7.746919,-5.547952,-7.140696,-3.363211,-1.986602,-9.911915,9.678930,7.394869,0.654565,5.245709,9.615656,9.217160,6.170627,-1.221026,-0.203988,-0.628401,-1.810998,-1.981078,7.310658,8.843747,-5.219810,4.914741,-8.429946,-5.217252,-0.641322,9.155187,8.046153,6.703326,2.471242,9.386620,2.970966,7.292803,-4.813054,-9.330048,-9.714102,-9.883139,8.732862,-4.405985,-4.666571,-0.494468,-5.439063,-3.243396,-7.957751,-0.356677,2.557225,0.012505,-2.430067,-8.482771,-2.567593,-8.381225,-9.712755,-2.264318,-9.107036,3.481836,9.970147,9.251894,8.878309,1.012526,6.010038,8.355716,9.876326,9.986427,1.873292,4.456510,1.483163,1.950686,-9.142667,1.496789,-2.690656,8.116632,-4.210726,-4.472100,-6.258011,1.946816,8.884326,-7.289501,-0.281469,-2.344206,-7.337365,8.932496,0.789601,8.954737,-0.836877,8.175444,-7.565422,-1.777588,3.503257,-6.678900,7.740888,-5.097678,2.147792,8.734245,-7.330057,9.766445,5.639872,-1.616265,6.537115,-2.256415,5.297350,7.807617,-6.596476,-8.325662,-7.168964,9.567008,5.191469,-9.981516,3.853135,-2.805705,-7.026526,-2.472080,-0.319320,-8.840041,-0.544517,-1.834170,-6.628291,3.281782,3.802060,1.546804,9.455447,0.256714,-6.314149,4.478160,-9.824927,2.258506,8.154388,-7.315863,9.519381,-0.072034,-4.264256,8.808439,-2.238614,8.726519,-7.582114,1.570248,-5.286676,-8.749489,-4.472561,-6.162224,5.026449,2.864706,9.482435,5.615244,4.724087,-9.875143,-5.637981,-5.383232,7.764102,-3.986055,-4.456287,3.967165,7.561943,7.343331,7.153054,-1.370753,-9.472203,4.984503,6.370373,-2.270138,-5.908854,-8.672907,-0.511725,4.799336,9.870133,0.814874,4.252764,-5.367865,4.074586,8.653345,7.819259,5.763276,6.190174,3.753406,7.201110,6.886083,-7.926546,-3.020695,6.589074,-3.186984,-3.634542,-2.165044,-4.893696,-7.819653,2.810834,-1.705249,7.096297,-5.612963,2.261685,7.553458,4.355760,-6.489365,2.357855,-3.670225,7.904381,3.687105,-3.662446,4.606651,-4.209867,-4.991707,8.054367,-8.157572,3.067276,-3.200598,-7.326705,1.343387,-7.687206,7.953040,5.197308,-6.373404,1.059473,-0.191420,-9.452522,-9.438907,5.253990,-4.244831,-8.044053,0.903799,9.007010,-3.331146,5.523072,8.169764,8.444329,4.904619,-8.770153,9.803145,2.905765,0.844065,-0.273237,-1.223167,4.547687,-8.469624,8.781918,8.009913,0.724095,-0.983191,3.970332,3.372707,6.171352,3.289659,-2.013968,7.213526,-4.595793,8.464730,-4.614749,-5.432250,-8.439133,2.621107,-2.973306,-5.650268,-0.239208,2.545486,-8.110570,7.926180,2.749363,8.388083,5.406077,-3.265240,-3.209025,-1.044024,0.148871,-5.983261,-8.167293,-1.673684,-7.620315,-2.516973,1.349996,-8.820846,-6.102693,3.218248,6.592164,-6.003349,9.510362,-3.879416,-7.771854,1.548026,-5.700200,-7.448487,3.405742,4.555957,2.359604,8.692166,8.487410,3.841905,5.262188,-2.980804,1.876650,2.800569,8.415738,-4.670786,1.293921,5.147509,3.432457,-0.779453,-5.226571,-5.168893,4.904683,4.559616,-4.492838,0.473250,9.501069,-2.784910,-3.182140,-7.929148,5.468882,8.942487,-5.090527,-7.289868,-7.277815,-3.464341,3.024691,4.682972,-2.560623,2.047081,5.791755,-4.239326,-6.748117,8.958050,4.755129,-8.199534,3.225867,8.962413,0.542662,1.234502,-3.456883,-9.479150,2.502765,-2.248668,-4.616252,-8.465656,-8.465910,2.064473,5.635023,6.248818,-7.910949,4.087110,-6.301524,2.305276,9.911306,6.460066,-1.090784,2.325671,4.799431,-4.705122,5.840380,2.949024,5.503841,8.356477,-8.419815,3.238040,-2.205890,-2.536133,2.613345,-3.038513,-7.927008,-5.539786,-1.655382,-2.130882,-2.294083,4.456828,3.006043,3.941432,0.969390,4.436775,-9.997414,-0.572762,-6.606636,5.373979,-4.872824,-3.575231,7.283920,-9.918335,-9.260174,-1.632897,3.139183,-4.295053,-8.650474,3.390813,-9.131279,9.337411,-1.851710,-2.886114,-6.395757,-8.845420,3.890884,-0.166338,-5.619451,-0.241270,1.419644,3.946439,7.700266,-6.484138,0.616863,6.811350,-4.679466,-0.061255,9.682601,3.934175,-4.501707,-0.433126,-3.542670,3.132080,3.449488,8.518119,-7.780265,6.620580,1.436962,4.319992,-1.178689,-1.019939,-2.415853,1.527244,5.456015,4.339326,-4.421601,-2.118041,-5.620983,4.748789,5.490169,4.364356,9.254726,4.124243,-1.797227,-7.987800,-1.296610,6.836855,7.624736,-1.252336,-6.171750,4.647428,6.248455,6.128814,5.213192,-9.642007,-8.201966,-2.157138,-9.150958,-8.405422,-6.986305,6.919325,7.439479,7.662349,2.256183,-0.645425,-7.567893,4.663147,0.926898,5.127857,3.846350,5.466859,8.973707,-6.852608,-9.822109,-0.434356,1.696908,7.634023,3.007471,0.135443,-8.196609,-9.614535,5.028896,-0.014140,-4.403814,4.620806,7.140649,6.682596,-2.207489,0.508259,-0.350563,-8.810923,4.209414,1.406958,-1.883780,-6.705027,-3.940687,2.941130,-2.459740,-3.984551,-6.211463,-2.081284,-6.997100,-5.425800,2.081004,2.899496,-7.548688,1.881335,9.104456,-7.110316,-5.340003,-2.143347,2.715507,-9.468424,-4.516223,-3.112847,6.019201,-5.847498,9.709506,-6.567754,-9.689296,-2.758748,0.196367,9.385513,-9.981233,2.900858,-2.835658,2.035698,8.080602,0.311559,-6.171473,-8.974162,-2.757744,-1.812672,-2.982337,2.732235,-8.646769,1.520641,9.120478,3.065674,-7.504417,-5.137822,-2.290506,-9.328091,-4.555482,1.649307,1.704775,-5.333695,0.010241,1.490054,5.728362,-8.451815,5.140254,-6.783141,-3.751275,-7.770435,-4.538393,3.911349,4.556122,-1.392899,1.698103,-1.395539,-7.656481,0.094139,1.173451,5.358833,9.426539,5.981030,7.340109,1.123056,5.130977,-0.492641,5.673583,-6.837952,3.020950,-6.836397,0.550805,3.667447,9.769819,1.087762,-3.635410,9.957162,-3.985247,-8.975590,-0.914266,-6.804434,7.043061,5.825233,-6.991238,9.532543,9.043301,3.750813,8.974432,-7.955211,7.719720,8.690654,-9.939769,7.560005,7.293768,-8.420190,6.762307,4.509458,3.908506,5.134147,6.502346,3.718624,-7.458697,4.127895,5.508876,-2.684579,7.177009,-2.191522,2.897112,-9.762323,4.762726,-0.277176,0.456929,-2.911008,7.412617,0.234375,-3.642237,2.573861,3.290129,-5.559654,-3.436886,3.385947,4.428525,0.753526,8.142494,1.316359,-0.513846,1.762492,-5.138002,-7.437537,-2.682539,-2.176449,-5.143576,7.453517,-9.314916,-5.497299,2.900120,-6.547098,-5.131817,3.513151,3.657683,-1.027133,-6.849663,-4.753702,1.110552,-2.606959,-0.902479,1.974130,-9.725946,-0.512078,-8.998880,6.170548,-8.956202,-0.668316,9.666204,-3.507537,4.493236,-3.818641,-3.958385,-6.852399,7.477798,6.866953,3.556817,-4.503032,-4.755814,-9.771028,-9.995590,-1.174106,2.993657,6.527817,-5.542248,6.207276,-6.215808,0.111647,-7.951334,5.129514,2.870079,7.627429,1.008804,-5.582096,-5.214415,-9.113699,0.810172,1.176733,-9.723552,2.150785,-2.586998,-5.905819,4.364818,-5.939928,4.706723,9.976250,-5.179250,9.664000,6.625412,9.199319,-1.330218,-1.652296,-8.939205,-3.572770,-4.928440,1.389053,-1.057187,2.267735,-6.363549,-7.250737,6.820003,-7.189659,-6.817393,3.471219,4.906086,-9.020217,6.498137,6.850080,-4.867158,-4.527747,-4.251708,-5.598844,1.838376,-7.843825,6.176733,6.076160,-1.046535,-0.521966,8.015818,-2.930021,3.720187,-2.187336,9.911214,-1.016241,6.653946,-8.017201,7.305514,-9.810606,4.543971,-7.279243,7.503644,5.828629,0.388087,7.374640,-7.191442,9.675200,-2.569911,-9.733320,-4.517303,3.697493,1.762895,1.294798,-5.587307,4.037454,-0.698914,-1.505813,4.837269,6.079255,-3.002032,5.139811,5.289580,-2.759899,-0.797691,1.281862,1.928442,-3.668959,8.724510,4.398796,7.759273,6.844258,-9.807983,-9.231540,8.085410,-4.547353,-9.626613,-4.685106,7.966550,7.065438,2.357057,-8.830701,1.898404,0.878139,-9.266427,9.882791,5.571815,8.407253,-7.825592,1.560723,8.911252,6.840680,1.693732,5.108462,-4.215605,-5.933624,-4.625753,7.052212,1.501237,-1.264092,1.348061,-2.983663,-9.557581,9.581293,5.600524,-0.333728,-7.998899,-0.470793,-8.548545,-4.394292,-7.700011,-2.861060,8.820279,-6.526230,7.594043,-7.474482,-2.767474,8.538476,-4.855832,-5.105571,-8.282086,5.044701,-2.890634,-8.427517,4.534974,-4.656026,-4.716307,-1.482358,-5.992285,-1.515362,3.331226,-5.350145,5.807782,-2.827959,-4.974267,0.265203,-8.804543,-6.070611,-8.226958,3.816741,3.832378,4.153076,-3.680227,-0.507898,4.029545,-1.945964,8.363384,-5.567207,5.804418,1.480837,6.938305,-6.866496,0.658628,8.075435,9.538109,5.943837,-3.918485,-4.972499,4.656550,2.001142,-2.716825,4.535080,-6.094664,-7.107483,7.512276,-8.559299,6.113373,-0.195157,2.760710,-1.750996,-2.084180,4.686754,2.282995,1.879502,-0.467314,6.636905,0.683747,1.484502,-3.834731,8.437738,1.190906,7.405984,-9.408536,9.194192,1.873350,-8.196241,1.352786,-1.644661,-6.655799,8.103300,-7.260092,7.137711,-4.828656,5.243062,-7.746081,-3.912298,-2.318328,-8.890388,9.065172,-5.769180,-4.990547,-8.618047,3.304880,-7.001540,-9.808166,-2.801949,-0.407680,-2.735804,-6.040207,3.739840,-5.531657,-8.449500,3.684418,6.688519,-8.182862,4.330314,2.989264,9.319289,-6.040538,-1.552210,8.835329,8.161934,-6.739418,-5.695390,-0.613030,6.180683,6.838628,1.749279,7.692800,9.412920,3.428507,-4.369802,-3.089619,8.990543,6.438531,-7.124751,-1.338045,-5.364566,1.664010,-9.858974,-9.918141,0.920247,8.539624,2.537303,3.439680,4.903783,8.068076,4.700422,6.357192,1.701900,-5.901217,1.100326,3.829729,6.866833,4.247854,-9.364105,-5.693104,7.697893,6.603106,-9.719538,-3.991334,7.455577,1.484308,3.426641,5.619444,9.586245,-7.472971,-3.805491,-7.318876,8.759605,0.937298,9.891510,3.570590,-2.822335,1.828476,0.635362,-6.013475,-4.541632,-5.541480,-9.367210,-8.366171,1.661466,-4.014789,-1.464704,-2.621727,-6.492369,-2.556859,6.752650,1.528937,-6.874153,-5.967986,-9.159607,-7.662292,-6.829801,-1.727949,-4.238823,-8.481835,-6.377507,3.088032,8.600685,-3.705244,-8.122445,9.924764,-8.400813,6.357882,-8.640316,-5.924816,-1.988131,9.181082,4.468863,1.817153,-1.004490,-4.681324,-0.460636,1.612561,6.959705,-3.695688,-3.631470,9.315840,-0.044229,7.217779,-5.356227,0.327647,-7.634303,6.371943,-7.952947,3.695477,-8.787518,5.841480,-5.962776,-9.353551,-6.399204,1.186580,-4.049868,6.951767,7.978978,8.907037,1.709057,-9.719867,7.588619,0.293194,-5.355102,-4.150809,-5.725250,6.991190,7.570451,-0.322030,-9.465714,-4.897215,-3.392852,1.132470,2.085817,2.271896,2.995317,-7.538085,7.500100,9.892088,8.532606,-6.993323,9.746220,-3.059796,6.202446,3.228437,-9.093518,7.406903,4.296746,-1.499311,2.803953,1.616593,8.902186,-9.683608,-1.210846,-6.195489,4.683081,0.817655,-7.651421,7.162767,2.054986,-5.761634,2.658130,-6.381293,-5.745714,0.538205,7.452082,0.595105,-4.169660,4.541932,0.052850,-1.259275,9.774409,0.898923,8.323679,5.392034,0.512139,-5.038818,3.632534,-9.427419,8.082734,-4.839531,-4.273985,9.152027,0.741754,4.942278,-6.524700,1.571792,-9.320162,-6.898102,-6.254210,-5.061761,1.162375,-6.499020,5.391020,-0.125979,-4.385068,9.466936,-6.091736,6.742095,-4.697470,-0.852007,7.083952,-6.640264,5.326844,3.161753,-4.866416,3.655761,6.656693,8.192750,-1.602436,2.843198,-2.516822,-4.647060,-5.999189,-2.656395,-3.467222,3.713260,-5.482774,9.563819,-9.797130,7.357871,-4.959017,-7.238502,-8.408348,3.022687,-1.972102,9.004185,1.640639,6.737836,-9.259368,-1.745569,6.463976,-8.670923,7.551448,7.859238,-6.250540,9.960928,2.674701,-2.099115,1.946649,0.457747,3.476520,-4.367078,-9.722917,-9.198792,6.344739,8.667233,-3.558863,-6.747441,-9.386806,-3.522054,0.154177,8.618512,5.673366,-2.629151,4.227604,-8.799514,5.012714,-4.142949,2.400255,-8.896044,7.491241,9.854956,7.520759,-6.594899,0.670493,-7.383756,-6.195088,2.547883,-0.262561,-2.323193,9.335129,-6.669921,0.483183,-0.955017,5.731423,4.426875,7.912306,-5.848953,-6.850277,-5.674178,6.415864,-3.236451,-8.199189,-9.368259,-5.095170,6.162321,8.051033,-2.082307,-4.747891,8.681614,9.662483,-9.980951,3.509871,3.447819,0.356618,7.179371,-4.171156,-3.186155,-2.096664,7.486755,0.167934,-5.250119,-5.747691,6.837716,-9.946751,-1.531773,6.046149,-1.082599,-3.324065,1.311312,0.254654,-8.307082,-8.169708,-0.960170,6.727440,4.027084,-8.086425,-7.854880,-9.264824,4.988975,-3.498726,-8.703437,8.327303,9.094510,-5.514735,0.780664,9.777125,-4.505174,7.284918,-8.639552,-2.342148,0.647254,-4.005305,-5.765819,-5.040075,4.904001,9.241867,-7.447740,-3.237057,-4.283968,-2.655271,-3.987189,-6.162439,-8.459955,5.407480,-8.472813,-3.574862,9.381995,5.033509,-6.770238,2.952275,0.633126,0.219262,7.754783,2.986688,8.418353,-2.720269,9.851395,-1.261597,-0.473608,0.246200,0.864809,-2.190196,-7.845219,-3.985101,7.904400,-1.855595,3.469349,6.094309,0.418175,-4.860476,-5.901353,-1.584119,2.904376,8.594369,-7.518115,7.916366,1.092592,-2.995094,0.414824,-0.048283,9.616479,3.998643,-1.878424,0.140841,2.193162,-6.529735,-6.534142,-8.576693,4.730829,3.864003,-2.857928,-7.939999,0.044722,4.279244,4.913450,6.207319,-0.353724,5.384872,2.350301,-9.507985,0.592099,6.050042,0.094230,6.617429,0.894367,-7.070929,3.941828,6.208329,-0.579798,-4.655174,-6.671703,-7.835816,-7.617853,-1.077491,-9.759064,8.878365,7.254298,-6.642346,-5.122071,-1.822862,-1.054123,5.807140,4.053991,-8.157172,8.332213,9.955269,0.693421,-3.301215,-1.890872,5.221000,1.163664,-9.440554,1.910237,5.715648,-0.238208,-2.908676,-0.117863,9.688918,-2.860047,1.104841,-3.011292,-9.512009,-4.019083,7.628676,8.760800,-7.020457,9.226935,3.145447,5.969879,-1.245786,-9.501447,-2.514719,-8.469403,-5.590230,-2.527607,-1.763273,6.453224,-3.320695,0.071426,-7.396219,-1.906911,9.591029,9.772181,4.203251,7.049285,-5.708076,-5.444359,1.787225,-8.526941,5.151505,0.555558,6.346079,-1.920190,4.966056,-5.921032,-4.018566,-6.093297,-8.738788,4.229089,-2.250211,-9.076718,-4.318858,6.397681,4.037940,-8.014078,-1.190408,8.272569,-3.659876,5.654906,0.264624,1.798689,1.944592,-4.483930,3.308042,2.998972,-3.157200,-1.431103,-9.019062,-5.790336,-6.654995,-0.405334,9.450990,-7.844178,-4.365722,9.487457,6.643995,1.105363,-5.945229,2.768107,9.482991,8.831392,-7.818173,8.790447,4.518865,-5.756362,-8.166465,8.261118,-6.712128,0.805362,5.220454,0.198377,5.211700,4.671231,-2.604136,1.026213,7.790413,2.189222,-7.278206,-9.831104,4.099273,3.137005,-1.732904,8.087501,9.188869,8.090160,3.800232,3.492224,0.755627,-2.058294,4.443975,-6.754662,-8.647514,-9.407618,-8.695123,-8.491047,-8.048433,6.395339,-7.531730,5.122355,9.207056,1.685732,6.500898,9.686982,7.082338,-7.872590,0.500372,-7.977252,5.882393,-1.705093,1.476745,7.944978,4.641267,-7.057041,9.362929,8.914822,-9.329279,6.644020,1.352198,1.266129,-4.550229,-2.628652,-1.706475,1.366723,0.615022,3.069380,-5.334468,-9.319451,1.566096,-5.161031,0.254047,3.531376,-9.608192,5.229908,3.963558,-3.709649,4.492179,7.627834,6.431487,7.376705,-1.849391,-9.723577,3.530442,-2.871394,0.930046,2.112441,-0.686316,2.838908,9.924022,6.096346,8.023169,-7.661401,-6.500141,-7.597496,-7.360805,-8.809957,-7.891688,7.931759,-9.873030,-7.458822,-8.871134,-8.085759,-2.177007,9.087904,-9.382444,-2.559259,1.004358,-9.561838,-6.259261,2.884502,-3.378511,0.223265,-3.428214,-5.473642,5.420959,1.865500,-4.133729,-2.430522,4.618446,-9.393645,-1.775802,9.475175,1.082654,5.603100,-8.956364,-4.449703,6.290938,1.817893,9.466212,-1.499754,-6.240518,-1.965550,2.401990,4.105581,2.996423,-6.516791,-9.149476,5.629760,-9.405817,7.391580,1.821580,8.325441,2.620673,9.569145,0.809000,4.425540,0.869200,-3.991945,4.511303,3.679906,-3.044482,-2.613971,0.696643,-1.303765,8.654751,-3.776459,-1.255390,7.813712,-8.409861,-7.693747,-1.989551,9.205285,0.589016,-4.835526,4.708145,2.936719,0.503833,-2.723251,7.243248,-9.669187,-2.869115,-6.940329,1.420620,-2.047774,-3.306744,2.583363,6.346433,-3.690385,-3.543492,5.627030,-9.781930,6.996366,-3.094789,-7.556632,9.625218,-9.321048,1.130061,-4.345098,-7.421139,-7.335995,1.803971,6.250910,-0.029974,3.016287,-7.667792,-4.484978,-7.002633,4.495580,6.344882,-2.845864,-3.434699,-5.113589,4.994691,-6.769614,7.054037,-0.582715,-0.482955,6.507181,6.520413,-8.819966,2.549616,-1.116062,-2.490310,7.842822,2.115277,-7.556994,-6.066174,8.247163,0.899174,-0.274861,-7.710900,4.215264,-3.156461,5.832343,-0.246979,-1.403072,-5.644081,2.921777,-1.644820,-9.716510,-0.038097,6.150656,7.728758,2.566297,8.120948,-7.398824,-4.799847,-6.178101,-8.533392,7.277855,5.924842,2.905471,-4.498001,5.224986,8.719593,4.112880,-1.860476,-2.224300,8.640817,7.426269,2.315603,1.845372,8.336997,0.531768,8.343870,-8.897649,-3.344529,2.770561,-5.210042,9.427681,-8.940841,-9.152102,7.771765,7.043212,-1.224957,5.566089,-3.348053,8.637737,2.504326,1.487757,3.283393,6.843403,2.965210,7.148517,2.219875,7.478088,6.466278,9.076797,2.947449,1.780976,5.075597,5.743151,3.950581,1.622633,3.379415,-6.989282,1.596694,-3.239919,-9.805135,-1.016616,-1.028508,2.346460,4.008702,4.482101,7.289310,-2.999853,2.542541,-7.892600,1.830015,8.021483,8.850777,4.973051,-7.844574,9.920029,0.748391,-7.803618,-8.485387,4.443482,-6.800311,-7.343537,-3.891483,-1.299912,-8.194768,-3.604098,2.597451,2.448716,2.972676,4.712042,-2.517247,-7.296768,-6.979605,-8.492265,0.457919,7.216434,-7.192969,0.149576,-2.106277,-0.358613,2.358582,-3.947390,8.634696,5.576434,1.552245,-2.068118,0.194412,7.240407,0.091705,-4.345587,-0.193305,1.587388,8.234736,2.273786,-1.402626,7.609135,-2.463693,-5.645950,6.751307], dtype = "float64")#candidate|919|(2160,)|const|float64
call_917 = relay.TupleGetItem(func_190_call(relay.reshape(var_918.astype('float64'), [7, 12, 13]), relay.reshape(var_918.astype('float64'), [7, 12, 13]), relay.reshape(const_919.astype('float64'), [2160,]), relay.reshape(var_918.astype('float64'), [7, 12, 13]), ), 3)
call_920 = relay.TupleGetItem(func_195_call(relay.reshape(var_918.astype('float64'), [7, 12, 13]), relay.reshape(var_918.astype('float64'), [7, 12, 13]), relay.reshape(const_919.astype('float64'), [2160,]), relay.reshape(var_918.astype('float64'), [7, 12, 13]), ), 3)
bop_921 = relay.logical_xor(call_917.astype('uint16'), relay.reshape(const_919.astype('uint16'), relay.shape_of(call_917))) # shape=(16, 9, 15)
bop_924 = relay.logical_xor(call_920.astype('uint16'), relay.reshape(const_919.astype('uint16'), relay.shape_of(call_920))) # shape=(16, 9, 15)
output = relay.Tuple([call_912,var_918,bop_921,])
output2 = relay.Tuple([call_913,var_918,bop_924,])
func_932 = relay.Function([var_918,], output)
mod['func_932'] = func_932
mod = relay.transform.InferType()(mod)
mutated_mod['func_932'] = func_932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_933 = relay.var("var_933", dtype = "float64", shape = (14, 78))#candidate|933|(14, 78)|var|float64
func_932_call = mutated_mod.get_global_var('func_932')
call_934 = func_932_call(var_933)
output = call_934
func_935 = relay.Function([var_933], output)
mutated_mod['func_935'] = func_935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_948 = relay.var("var_948", dtype = "int16", shape = ())#candidate|948|()|var|int16
const_949 = relay.const([[[7,-9,-4,-6,-5,-9,-1,8],[-9,-5,-3,3,1,-7,-6,-4],[9,-1,-4,-9,3,5,5,10],[-6,-9,3,8,-1,3,-2,-10],[10,-3,10,3,-4,-7,-10,2],[-9,-6,1,10,-1,-9,10,3],[3,-6,1,-6,8,3,10,5],[-6,-4,4,-1,9,-7,1,10],[-7,-7,-8,3,-10,-5,2,2],[8,5,1,7,7,-8,-6,-4],[-7,-1,-6,2,-1,-6,4,2],[-5,-5,4,6,-8,2,5,6]],[[7,-8,2,-10,-8,9,-6,5],[10,8,4,7,-10,-5,-5,8],[8,6,7,-6,-4,-8,-8,4],[3,-9,-7,8,-5,2,-5,1],[-6,7,5,-8,-10,1,-9,3],[-8,2,1,3,-4,6,-3,5],[6,-5,-5,3,-1,-3,-1,4],[-9,5,8,-5,-10,2,-10,5],[8,8,-2,9,7,-4,8,-8],[-6,-8,10,9,-4,7,9,-9],[-1,10,-2,-9,-3,-7,-2,-10],[9,-7,1,1,6,-9,-2,-1]],[[9,-8,-4,-10,-1,10,4,-4],[-7,-4,-6,4,-4,8,-5,-9],[-2,-5,-6,-5,-4,10,4,4],[6,10,4,-5,-10,6,-2,10],[-4,10,4,6,-10,-9,-2,-6],[1,-10,1,-5,8,6,6,4],[5,-3,9,8,-8,4,7,8],[-5,5,6,6,-3,2,10,-1],[-9,-3,-4,10,5,-1,5,2],[-10,5,-1,9,-3,3,-6,6],[1,-6,10,6,-9,10,8,3],[3,5,-8,5,-7,3,-5,9]],[[-10,-10,10,-6,4,-4,-7,2],[4,3,-4,-1,7,4,-5,-7],[-7,-5,-2,7,-4,8,-7,-3],[-8,3,3,2,-10,-3,9,-9],[-8,5,-3,5,5,-3,4,5],[10,-5,-4,6,-5,-10,-10,3],[3,-7,-2,6,-6,10,-4,-3],[5,-9,6,4,6,-6,-2,6],[6,-4,6,4,8,3,8,-8],[5,-1,-3,-2,8,-7,4,-6],[7,-9,-9,-6,-6,10,-6,-9],[6,-3,7,-9,-1,7,-8,-8]],[[-2,-7,-9,-1,3,-2,-10,3],[3,6,-9,-4,9,-6,4,-1],[2,-1,-2,-7,-6,7,10,-3],[-4,-4,3,-3,-1,1,-4,4],[-2,-6,-9,-1,-2,10,-6,8],[3,-3,9,-1,7,-6,4,-7],[-8,3,6,2,-2,-3,-9,-8],[-10,-9,9,1,-1,4,-10,-4],[-4,6,10,-9,2,1,-2,4],[-4,-2,2,-8,2,-10,5,-9],[-8,-10,-4,-3,10,10,6,5],[-8,2,10,-6,-2,-5,8,-5]],[[-10,7,5,-4,5,-8,-9,-1],[-9,10,-3,-4,-1,-1,2,7],[2,-7,5,3,-5,-3,3,5],[6,-5,-2,-1,7,-3,-9,-2],[8,9,3,5,2,-4,9,9],[5,-4,1,9,9,-9,-4,-3],[-2,-6,-2,-3,-9,9,8,-5],[10,-1,7,10,-4,6,10,10],[2,7,9,8,10,-7,-7,-5],[-4,-9,6,6,-10,8,4,4],[-4,-7,4,10,-7,4,1,-1],[6,5,1,4,6,1,-9,-5]],[[7,-5,-9,5,-2,-8,-10,10],[-10,10,6,3,5,3,1,5],[10,-1,5,-5,-6,-3,-5,-4],[6,4,-9,8,-3,6,-9,-3],[2,-9,9,7,-8,-4,1,-8],[4,-3,-1,7,-3,9,5,-10],[4,-6,-3,10,3,-6,4,5],[6,-2,-8,10,-1,3,10,5],[-3,1,-3,-9,5,-3,7,-8],[6,9,-9,7,-1,6,-4,-7],[1,4,7,2,-7,2,5,-9],[9,4,1,8,2,3,-4,-2]],[[6,-2,-9,6,1,2,-7,-6],[-10,-4,2,3,5,-9,-4,-5],[8,5,4,-3,-1,-1,-5,7],[-7,-6,-3,4,-5,-7,7,1],[-3,-3,8,-2,-3,1,1,-5],[9,1,2,-9,10,6,-2,-3],[3,-10,1,4,-8,-4,-1,1],[-2,-3,8,3,-10,3,6,-4],[1,-2,7,-8,8,-6,-3,-2],[-9,-1,-7,-3,3,-6,4,-10],[6,-9,9,-2,1,8,4,1],[5,8,-6,6,1,-10,3,-1]],[[-3,6,8,-9,-3,-5,6,-10],[-7,2,3,5,-1,-8,5,5],[-10,10,-6,-8,-7,-8,8,6],[10,9,6,-7,8,-3,-7,-3],[-9,4,3,8,5,-6,8,8],[-10,9,-2,-4,2,-5,6,-5],[-2,-4,-2,-6,-10,2,4,4],[-9,-1,9,-3,-1,-1,6,-3],[4,-3,10,5,-4,10,7,2],[-6,6,6,-8,10,5,-5,4],[6,8,-7,-7,-8,-8,10,-8],[5,-4,7,-10,-1,-1,-3,-8]],[[2,-6,6,1,10,-6,1,9],[-2,-9,-4,6,-3,-4,1,7],[5,-4,9,-5,-7,9,9,-6],[-10,-1,-3,2,3,-6,9,10],[9,6,-1,6,4,-6,3,5],[6,-10,5,6,-1,6,8,-3],[-2,-2,10,9,-3,-8,-6,2],[2,-10,7,7,-10,7,9,-2],[8,3,2,-1,-6,1,-5,3],[-6,-4,-9,-2,-4,-5,-8,-3],[1,-4,8,7,-6,6,-1,9],[-2,-4,-2,7,3,8,-1,8]],[[6,4,-7,10,9,-7,6,2],[6,8,2,1,-9,7,-9,3],[-6,1,-8,-9,10,-9,-9,-4],[-7,-3,8,-4,-5,9,7,1],[-9,-1,7,3,-5,4,5,10],[-10,1,-7,7,8,-7,-7,10],[-5,2,10,-9,-10,-10,-3,-9],[3,1,4,3,-3,7,-1,6],[8,9,-5,-3,-3,2,-3,-7],[8,6,7,4,-2,-1,-7,-2],[-5,3,9,-7,-8,10,-7,-8],[6,-8,5,-4,2,1,-2,-4]],[[-2,-7,2,-7,2,-2,4,-5],[-3,-5,5,-5,-3,-6,-9,-2],[-7,6,-4,10,10,-6,-3,7],[5,6,1,9,-10,-9,-5,-2],[3,-4,2,-4,9,9,10,-9],[7,-7,9,-2,-10,9,-3,10],[10,-2,9,5,5,-9,9,2],[-3,4,-2,8,9,-7,-8,-6],[-2,-1,2,10,-9,4,7,5],[4,10,8,-8,-7,9,6,6],[-4,1,-2,-5,10,-2,-3,4],[8,3,-4,-5,10,6,9,-5]],[[8,9,7,-2,3,-1,-3,-6],[-1,-9,2,3,7,-7,1,7],[8,-9,2,-1,7,1,-8,-1],[6,3,-3,9,8,-4,9,-8],[9,-1,3,6,-5,10,-6,2],[2,-1,4,2,-7,10,-10,-5],[10,-10,8,-2,4,6,-6,1],[6,10,-1,9,-1,-8,-9,-7],[-8,1,2,-1,-7,8,9,-9],[1,-4,-4,-4,4,-3,4,-4],[-9,-10,-6,9,10,-7,7,4],[7,-4,-3,-5,10,-3,-10,-7]],[[-10,3,-8,9,2,-6,2,-8],[-2,-10,-1,-3,5,-3,3,-5],[7,-10,2,4,7,-2,-2,10],[5,10,-4,-4,10,-3,9,7],[8,10,7,4,6,5,-10,-3],[-2,8,-5,-5,2,-8,-8,7],[-2,-5,-3,-5,9,-8,-4,2],[1,1,4,2,6,7,7,-9],[2,-10,-5,5,-6,10,3,5],[4,1,6,4,-5,5,4,3],[-7,3,9,-5,1,4,-1,-8],[-6,3,-4,1,7,-1,9,-8]],[[-6,-10,9,9,-3,3,-1,9],[4,9,-10,-9,-8,1,-4,-4],[10,-5,-9,10,-9,-8,-8,10],[-10,1,-1,8,-1,-7,-7,-5],[-6,7,-9,9,-2,8,3,-3],[5,2,2,-5,8,8,-2,-2],[5,6,-6,10,2,-7,6,-8],[2,8,2,9,-5,3,9,-8],[3,-8,8,7,8,7,-4,4],[6,1,7,-8,-6,10,6,-8],[1,-10,-4,1,10,5,-4,1],[-2,10,4,-2,10,-4,1,5]],[[-9,-2,-1,4,-2,7,-9,10],[5,-1,-9,-9,-4,-5,-4,6],[7,-6,-3,-2,-9,-3,-1,10],[-6,-5,3,-3,-7,-3,-1,4],[-8,-8,3,6,-3,2,5,-10],[-4,-5,10,-3,8,-8,4,-7],[-2,-3,-7,9,-1,3,-5,-6],[-9,4,-9,-6,5,-6,-4,3],[-7,5,7,-5,-4,-6,-3,-8],[3,2,10,-9,-2,4,-7,3],[5,-2,-1,3,-3,-4,1,-1],[-3,6,-2,8,1,9,-1,4]]], dtype = "int16")#candidate|949|(16, 12, 8)|const|int16
bop_950 = relay.minimum(var_948.astype('int16'), const_949.astype('int16')) # shape=(16, 12, 8)
output = bop_950
output2 = bop_950
func_958 = relay.Function([var_948,], output)
mod['func_958'] = func_958
mod = relay.transform.InferType()(mod)
var_959 = relay.var("var_959", dtype = "int16", shape = ())#candidate|959|()|var|int16
output = func_958(var_959)
func_960 = relay.Function([var_959], output)
mutated_mod['func_960'] = func_960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_1028 = func_896_call()
call_1029 = func_896_call()
output = relay.Tuple([call_1028,])
output2 = relay.Tuple([call_1029,])
func_1041 = relay.Function([], output)
mod['func_1041'] = func_1041
mod = relay.transform.InferType()(mod)
output = func_1041()
func_1042 = relay.Function([], output)
mutated_mod['func_1042'] = func_1042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_1063 = func_896_call()
call_1064 = func_896_call()
func_958_call = mod.get_global_var('func_958')
func_960_call = mutated_mod.get_global_var('func_960')
const_1091 = relay.const(9, dtype = "int16")#candidate|1091|()|const|int16
call_1090 = func_958_call(relay.reshape(const_1091.astype('int16'), []))
call_1092 = func_958_call(relay.reshape(const_1091.astype('int16'), []))
func_371_call = mod.get_global_var('func_371')
func_375_call = mutated_mod.get_global_var('func_375')
var_1094 = relay.var("var_1094", dtype = "uint8", shape = (120,))#candidate|1094|(120,)|var|uint8
call_1093 = relay.TupleGetItem(func_371_call(relay.reshape(var_1094.astype('uint8'), [4, 3, 10]), relay.reshape(var_1094.astype('uint8'), [4, 3, 10]), ), 1)
call_1095 = relay.TupleGetItem(func_375_call(relay.reshape(var_1094.astype('uint8'), [4, 3, 10]), relay.reshape(var_1094.astype('uint8'), [4, 3, 10]), ), 1)
const_1104 = relay.const([[[-9.508512,-4.185814,-0.900366,2.538055,1.602492,-6.307019,7.752413,-4.284635,-9.664587,-6.834786],[3.784620,9.307616,-6.740417,4.535023,-9.979769,4.021960,-0.891948,4.645450,-8.488322,6.182370],[-3.153872,-6.807601,9.007426,-5.501157,-0.996528,9.318730,-2.690614,-2.739424,5.454267,4.246501]],[[-1.263096,-4.918143,-6.148113,5.671790,7.204895,-3.467212,-0.167518,9.097252,9.579218,-0.159101],[9.346867,-7.593041,-5.754584,-0.820386,-6.578460,9.401687,-9.245885,-5.201399,-8.601916,1.304683],[-0.918237,6.472290,-8.951848,0.165431,-2.267187,1.928874,1.786836,-6.738221,-5.209148,4.212403]],[[-1.746518,-5.853106,9.375841,5.741581,-2.503844,7.404107,-0.684906,-0.863245,2.226096,7.027516],[9.207450,7.859588,-8.220004,-1.987210,-5.996742,3.443109,-7.900801,8.868166,-2.433336,3.510836],[1.730266,-9.807737,-4.338235,-0.928196,-9.754591,4.060384,2.893618,-7.690455,-7.694483,-0.750097]],[[0.490943,2.554769,1.855849,4.662081,4.593746,8.848128,7.356975,9.854708,-7.365724,0.246803],[5.866755,-2.583192,-0.188461,-7.191194,3.884603,9.268768,-7.017120,-2.479243,-0.293754,-9.860081],[7.757135,-2.829140,3.877305,-7.548348,-6.900364,-2.911035,-4.292453,-6.644768,6.693690,-5.558643]]], dtype = "float32")#candidate|1104|(4, 3, 10)|const|float32
bop_1105 = relay.greater(call_1093.astype('bool'), relay.reshape(const_1104.astype('bool'), relay.shape_of(call_1093))) # shape=(4, 3, 10)
bop_1108 = relay.greater(call_1095.astype('bool'), relay.reshape(const_1104.astype('bool'), relay.shape_of(call_1095))) # shape=(4, 3, 10)
const_1120 = relay.const([[[-8,-1,-10,-3,-4,-5,5,5],[-3,8,-2,-10,7,-4,4,-8],[-2,1,4,6,4,4,1,5],[-6,4,3,6,9,6,-9,-8],[-3,-7,-6,-6,-4,10,-10,3],[-10,-3,-8,5,-1,3,-5,-3],[3,-5,2,-9,-2,6,-8,7],[4,2,-8,-1,6,-1,8,-9],[-3,-10,-8,3,-10,9,8,5],[-5,-5,-2,4,-4,-8,10,-1],[-4,9,-10,9,3,-7,3,4],[8,2,10,1,2,4,7,-6]],[[8,2,-8,-7,6,-4,7,8],[9,-7,-8,1,-10,-2,2,-7],[-3,-8,9,-4,1,-5,-7,-4],[-2,5,1,-10,3,-7,1,-7],[4,-5,-3,9,8,10,6,-2],[-9,8,5,1,1,-4,4,5],[9,3,1,-3,6,4,1,10],[-3,8,-8,7,-6,10,-2,-10],[-6,-2,2,8,1,10,8,-10],[10,-8,-8,8,5,6,6,10],[-6,3,-8,-8,10,10,9,8],[9,-10,2,1,-9,-7,-2,8]],[[-1,-7,-9,7,2,9,9,-3],[-7,3,10,-9,10,3,-4,9],[-2,-4,1,2,1,7,9,8],[10,7,5,10,-3,9,-3,-5],[-5,8,2,-1,1,3,-7,-8],[-2,10,1,5,2,1,2,-2],[5,-5,10,-10,-6,-3,-5,2],[3,7,2,8,-7,1,7,6],[-5,-8,9,-6,-4,7,-9,7],[3,-8,5,8,6,-1,3,4],[-10,-3,-2,-5,-9,6,-3,9],[-6,-10,-4,-2,8,-3,1,-8]],[[-10,2,-3,8,9,-9,-6,8],[-5,10,-7,-2,-6,-5,-2,9],[-8,-4,6,-3,6,9,10,2],[6,-7,-4,7,3,6,8,5],[-6,7,1,-9,1,6,5,-9],[10,5,6,-6,7,2,7,1],[8,-7,9,-5,4,-4,-9,-2],[-2,5,-3,6,-2,5,-8,3],[6,7,6,8,3,-10,6,1],[1,5,-6,-5,-9,-8,-9,-7],[10,10,3,-7,9,-9,9,4],[-8,5,-10,-4,1,10,-2,-4]],[[-8,-10,2,7,5,8,-6,6],[-1,-9,1,10,3,1,6,2],[10,2,9,3,5,-10,6,-4],[6,8,7,9,-9,-7,-6,8],[1,7,-9,-6,4,5,9,-6],[5,2,5,1,-4,8,5,5],[6,-8,2,1,-7,5,8,-10],[-9,-2,-6,8,-1,-9,2,4],[5,7,3,3,-6,7,4,-8],[2,7,3,9,2,2,-3,6],[-6,7,-2,-1,-1,-6,-6,7],[-4,-9,10,3,-7,9,-1,9]],[[-7,1,7,2,10,2,-2,-7],[3,-5,3,4,5,1,-8,7],[9,9,-10,3,-8,-10,-3,-5],[1,9,10,-6,-9,-10,9,4],[-5,-5,3,7,-4,10,-1,6],[-6,8,10,-10,-10,8,10,-9],[-5,10,-4,-1,-5,8,7,10],[10,-1,1,-1,-4,10,3,8],[6,7,-6,-10,9,-7,-3,2],[-4,-4,-4,3,6,-1,5,-8],[-7,10,-5,-4,-8,3,-7,-5],[-7,3,-5,-1,-4,-3,-2,-1]],[[-8,-4,-3,9,1,-3,4,9],[-8,-5,3,-6,-10,7,2,1],[-8,2,5,-3,1,7,3,-1],[10,-3,-3,1,10,5,3,1],[-3,3,4,6,-1,5,9,-4],[-1,4,-8,9,-1,9,10,-5],[2,-3,-3,2,-4,-7,-2,-1],[-8,10,2,-3,4,8,1,-9],[3,-7,-4,10,7,-8,10,3],[8,5,3,-2,-9,10,-4,-3],[4,-3,3,4,-3,-9,4,1],[7,2,4,-4,-4,5,5,5]],[[9,6,1,2,-4,7,4,10],[3,-1,7,2,-2,-1,6,-8],[2,-7,-6,7,1,-8,1,6],[3,3,-5,-3,-5,-5,8,5],[9,-5,2,-7,-9,8,4,-5],[1,8,6,-2,4,9,-5,4],[-8,-1,4,-3,-2,2,-5,4],[7,-2,1,-2,-5,9,-7,4],[-3,-8,-2,7,-2,-1,-7,2],[6,5,-10,-4,-7,-3,-5,4],[1,-2,-4,6,-9,-10,-3,-10],[-6,8,-1,-1,7,-7,-2,-8]],[[-2,5,-3,-2,1,1,-6,-2],[-6,-8,-7,7,4,4,-4,8],[-7,4,5,2,-7,9,4,6],[4,-8,5,-4,-1,5,-3,3],[-8,-7,2,9,4,1,-9,-9],[2,-7,5,4,-10,-1,-3,-2],[-1,2,-2,-3,8,4,2,4],[3,9,-3,-3,-3,5,-1,5],[-9,5,9,-6,3,-8,-5,9],[6,-5,-2,-1,3,10,-4,-5],[-3,2,10,3,-10,-8,-5,-3],[6,9,4,-2,-5,-10,9,-2]],[[6,6,-4,1,2,-8,-8,-8],[-9,-2,-5,10,7,1,-5,-8],[-8,1,5,-5,3,6,4,-6],[8,-6,2,-5,7,-5,-8,5],[9,-8,-8,-3,-8,-10,2,-5],[-4,7,8,5,7,-8,-2,3],[-9,-6,-5,5,10,6,-3,-4],[4,5,3,-7,-7,-7,10,-10],[2,3,7,-9,-3,-8,-7,-5],[2,-5,7,5,-9,-5,-4,-5],[1,2,-5,-4,9,7,2,7],[10,-9,5,3,8,-2,-10,-7]],[[-8,8,3,4,-2,7,10,8],[-7,-7,2,-6,-7,-1,9,8],[10,-1,-8,6,-3,-3,-9,3],[9,8,-1,4,-7,6,4,3],[2,10,8,-9,8,-6,-5,3],[-10,-7,-9,10,5,-2,-10,6],[1,-1,9,2,9,4,-6,10],[-2,-8,8,-7,-3,-4,5,4],[-4,-7,-4,10,-6,9,-5,-9],[-4,10,-4,-6,7,2,8,10],[-3,-6,-7,-2,3,6,-8,7],[-3,-7,3,7,-1,-1,-5,2]],[[-7,6,-5,8,10,7,2,-2],[-10,-5,-2,2,9,2,-4,5],[3,7,10,7,3,7,-8,10],[10,3,-8,-5,10,-3,4,-8],[-9,-6,-4,8,6,1,-4,4],[-8,6,-3,5,8,8,7,-8],[2,-5,6,-2,-9,-6,5,7],[-6,1,3,3,-5,-3,6,1],[7,2,9,6,8,1,4,9],[2,-1,10,-6,4,9,3,8],[8,-3,-8,7,1,-1,7,-6],[2,7,1,8,5,7,-7,-7]],[[-9,-2,-9,2,6,-6,-3,-5],[10,-8,-5,6,4,-7,-10,-6],[5,3,6,6,7,8,-4,7],[-4,5,-9,-9,-4,-4,3,3],[-7,-3,-2,-6,3,-10,-8,1],[2,-1,-8,-6,1,7,1,3],[6,2,5,8,-3,-4,-7,-2],[2,-2,6,-3,9,10,-1,7],[-8,-7,6,-10,-6,-9,-1,4],[4,4,-5,6,10,-3,8,-10],[8,9,5,-4,-6,-3,-3,10],[2,-9,2,10,-1,5,-2,6]],[[-2,-3,-6,7,-9,-9,-7,2],[-5,-8,-6,9,9,7,-8,-1],[-9,7,-1,-9,5,5,-7,5],[9,8,-10,-1,2,-10,2,-1],[6,-6,4,-9,3,5,2,1],[1,-5,8,-2,5,-3,5,-7],[3,10,-1,6,-3,-4,-1,4],[-6,-3,-6,-7,6,9,-5,2],[2,-5,1,6,4,-8,-7,-7],[3,9,4,2,7,1,10,10],[-7,4,6,-3,2,-5,4,-9],[-1,-8,-6,5,10,5,-1,-1]],[[-10,8,8,8,3,-6,5,-5],[6,3,2,5,-6,-3,5,-7],[2,1,-7,8,2,6,-1,-6],[-2,9,9,-9,4,3,-7,-2],[-6,-9,-2,10,10,3,-6,-8],[-10,-4,1,-3,5,-4,-4,1],[1,-10,6,-9,5,10,3,-2],[7,1,9,-4,-7,9,5,3],[10,1,5,-4,3,2,6,-10],[-1,-4,6,7,6,-7,5,-7],[3,-1,-7,9,-3,-8,6,-3],[-1,-7,2,-10,-9,-9,7,7]],[[5,10,-5,6,1,-6,-3,6],[-3,-1,-9,5,-10,-2,2,6],[-9,1,-5,-1,-10,7,-5,7],[8,-3,1,-4,-2,-7,-6,-4],[-1,-1,2,5,1,7,-5,-4],[-4,-9,-4,-5,1,-3,-7,4],[-1,-4,-8,-9,3,5,-2,-2],[-5,-3,-5,-9,2,-7,-10,7],[-7,8,-4,-4,-3,-4,9,5],[-8,-7,9,-1,-8,2,-9,-1],[1,-4,4,-1,-9,6,-2,4],[-9,3,4,3,-4,2,-3,2]]], dtype = "int16")#candidate|1120|(16, 12, 8)|const|int16
bop_1121 = relay.divide(call_1090.astype('float32'), relay.reshape(const_1120.astype('float32'), relay.shape_of(call_1090))) # shape=(16, 12, 8)
bop_1124 = relay.divide(call_1092.astype('float32'), relay.reshape(const_1120.astype('float32'), relay.shape_of(call_1092))) # shape=(16, 12, 8)
output = relay.Tuple([call_1063,const_1091,var_1094,bop_1105,bop_1121,])
output2 = relay.Tuple([call_1064,const_1091,var_1094,bop_1108,bop_1124,])
func_1134 = relay.Function([var_1094,], output)
mod['func_1134'] = func_1134
mod = relay.transform.InferType()(mod)
var_1135 = relay.var("var_1135", dtype = "uint8", shape = (120,))#candidate|1135|(120,)|var|uint8
output = func_1134(var_1135)
func_1136 = relay.Function([var_1135], output)
mutated_mod['func_1136'] = func_1136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1138 = relay.var("var_1138", dtype = "bool", shape = (14, 1, 7))#candidate|1138|(14, 1, 7)|var|bool
const_1139 = relay.const([[[False,False,True,False,True,True,False],[False,True,True,False,False,False,True],[False,True,True,False,True,True,False],[False,True,True,True,False,False,True],[False,False,False,False,True,True,False],[False,True,False,True,False,True,True],[False,True,False,False,False,False,False]],[[False,True,True,False,False,False,False],[True,False,True,True,True,True,True],[False,True,True,False,False,True,True],[False,False,False,False,True,True,False],[True,True,False,True,False,True,False],[True,False,False,False,False,True,True],[True,True,False,True,False,True,False]],[[False,False,True,False,False,False,False],[True,True,False,False,False,False,False],[False,False,False,True,False,False,True],[False,True,False,False,False,False,True],[False,True,True,False,True,True,False],[True,True,False,False,False,False,True],[False,True,True,False,True,True,False]],[[True,True,True,True,False,False,True],[True,False,True,True,False,False,False],[True,True,False,True,False,True,True],[False,True,False,False,False,True,True],[True,False,True,False,True,False,False],[False,False,True,True,True,False,False],[True,True,False,False,False,True,True]],[[True,False,True,True,True,True,False],[False,True,True,True,True,False,False],[True,False,False,True,True,True,False],[False,False,False,True,True,True,True],[True,False,True,False,False,False,False],[True,True,False,True,False,True,True],[False,True,True,True,True,True,False]],[[False,False,False,False,False,False,True],[True,True,True,True,True,False,True],[True,False,True,True,True,True,False],[False,False,True,False,True,False,True],[True,True,True,True,False,True,False],[False,True,True,False,True,False,True],[False,False,False,False,False,False,True]],[[False,True,True,False,False,True,False],[True,True,True,False,True,False,False],[True,True,False,True,False,True,True],[True,False,False,False,False,True,False],[True,True,True,True,False,False,True],[False,True,True,False,True,False,False],[False,False,False,True,True,False,False]],[[True,False,False,True,False,False,True],[False,True,True,True,False,False,False],[True,False,True,True,False,False,True],[True,False,False,True,False,False,False],[True,True,False,True,True,False,False],[True,True,True,True,False,False,True],[True,False,True,False,False,True,True]],[[False,True,True,True,False,True,False],[False,True,False,False,False,True,True],[True,True,True,False,False,False,False],[True,False,True,False,False,False,False],[False,True,True,True,True,False,False],[True,True,True,True,True,True,True],[True,False,False,True,False,True,True]],[[False,True,True,True,True,False,True],[True,True,True,False,False,True,True],[True,True,True,False,True,False,False],[False,False,True,True,False,False,False],[False,True,False,True,True,True,False],[False,False,False,False,True,True,False],[True,False,True,True,False,False,True]],[[True,True,True,True,True,True,False],[True,True,True,False,False,True,True],[True,False,True,False,False,True,False],[True,True,False,True,True,True,False],[True,True,True,False,False,True,True],[True,False,False,True,True,True,True],[True,False,False,True,False,True,True]],[[True,True,True,False,False,True,True],[True,False,True,True,True,True,True],[False,False,True,True,False,True,False],[True,False,True,False,False,True,True],[False,True,False,True,False,True,False],[False,False,True,True,False,True,False],[False,False,False,False,False,True,True]],[[False,False,False,True,False,True,True],[False,True,True,False,False,True,False],[False,True,False,False,True,True,True],[False,False,False,False,False,False,False],[False,True,True,False,True,True,True],[True,True,True,True,False,False,True],[False,True,True,False,False,True,False]],[[False,True,True,False,True,True,False],[False,True,False,False,False,True,True],[True,True,False,False,False,True,True],[False,True,True,False,True,False,False],[True,False,False,True,True,True,True],[False,True,True,False,False,True,True],[True,True,False,False,False,False,True]]], dtype = "bool")#candidate|1139|(14, 7, 7)|const|bool
bop_1140 = relay.logical_or(var_1138.astype('bool'), const_1139.astype('bool')) # shape=(14, 7, 7)
output = bop_1140
output2 = bop_1140
func_1147 = relay.Function([var_1138,], output)
mod['func_1147'] = func_1147
mod = relay.transform.InferType()(mod)
var_1148 = relay.var("var_1148", dtype = "bool", shape = (14, 1, 7))#candidate|1148|(14, 1, 7)|var|bool
output = func_1147(var_1148)
func_1149 = relay.Function([var_1148], output)
mutated_mod['func_1149'] = func_1149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_1162 = func_896_call()
call_1163 = func_896_call()
func_1134_call = mod.get_global_var('func_1134')
func_1136_call = mutated_mod.get_global_var('func_1136')
const_1192 = relay.const([7,-6,6,-8,-6,10,6,6,10,-2,10,8,-4,-4,-3,7,-2,-4,-3,-7,-9,-2,7,-2,-2,7,-4,9,-2,-5,3,3,-5,4,-9,8,8,-5,-7,-1,3,10,-3,-5,5,-9,4,-4,3,6,8,10,-1,10,-3,-1,-9,4,-2,-8,-9,-5,-3,1,-6,-7,-8,-10,-1,-10,-1,1,-2,5,-3,10,4,-6,-6,-2,-1,-5,-6,-9,5,-3,10,10,8,5,8,5,5,-8,10,3,1,-2,5,5,-3,-8,-2,-5,2,6,-9,2,4,-5,2,-6,6,-9,1,2,-2,-7,7,-7], dtype = "uint8")#candidate|1192|(120,)|const|uint8
call_1191 = relay.TupleGetItem(func_1134_call(relay.reshape(const_1192.astype('uint8'), [120,])), 0)
call_1193 = relay.TupleGetItem(func_1136_call(relay.reshape(const_1192.astype('uint8'), [120,])), 0)
output = relay.Tuple([call_1162,call_1191,const_1192,])
output2 = relay.Tuple([call_1163,call_1193,const_1192,])
func_1201 = relay.Function([], output)
mod['func_1201'] = func_1201
mod = relay.transform.InferType()(mod)
mutated_mod['func_1201'] = func_1201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1202 = func_1201_call()
output = call_1202
func_1203 = relay.Function([], output)
mutated_mod['func_1203'] = func_1203
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1286 = relay.var("var_1286", dtype = "float32", shape = (3, 9, 2))#candidate|1286|(3, 9, 2)|var|float32
var_1287 = relay.var("var_1287", dtype = "float32", shape = (3, 9, 2))#candidate|1287|(3, 9, 2)|var|float32
bop_1288 = relay.add(var_1286.astype('float32'), relay.reshape(var_1287.astype('float32'), relay.shape_of(var_1286))) # shape=(3, 9, 2)
output = relay.Tuple([bop_1288,])
output2 = relay.Tuple([bop_1288,])
func_1298 = relay.Function([var_1286,var_1287,], output)
mod['func_1298'] = func_1298
mod = relay.transform.InferType()(mod)
var_1299 = relay.var("var_1299", dtype = "float32", shape = (3, 9, 2))#candidate|1299|(3, 9, 2)|var|float32
var_1300 = relay.var("var_1300", dtype = "float32", shape = (3, 9, 2))#candidate|1300|(3, 9, 2)|var|float32
output = func_1298(var_1299,var_1300,)
func_1301 = relay.Function([var_1299,var_1300,], output)
mutated_mod['func_1301'] = func_1301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_1332 = relay.TupleGetItem(func_1201_call(), 2)
call_1333 = relay.TupleGetItem(func_1203_call(), 2)
output = relay.Tuple([call_1332,])
output2 = relay.Tuple([call_1333,])
func_1342 = relay.Function([], output)
mod['func_1342'] = func_1342
mod = relay.transform.InferType()(mod)
mutated_mod['func_1342'] = func_1342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1342_call = mutated_mod.get_global_var('func_1342')
call_1343 = func_1342_call()
output = call_1343
func_1344 = relay.Function([], output)
mutated_mod['func_1344'] = func_1344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_1419 = func_896_call()
call_1420 = func_896_call()
var_1423 = relay.var("var_1423", dtype = "bool", shape = (12, 9, 5))#candidate|1423|(12, 9, 5)|var|bool
bop_1424 = relay.multiply(call_1419.astype('uint16'), relay.reshape(var_1423.astype('uint16'), relay.shape_of(call_1419))) # shape=(12, 9, 5)
bop_1427 = relay.multiply(call_1420.astype('uint16'), relay.reshape(var_1423.astype('uint16'), relay.shape_of(call_1420))) # shape=(12, 9, 5)
output = relay.Tuple([bop_1424,])
output2 = relay.Tuple([bop_1427,])
func_1445 = relay.Function([var_1423,], output)
mod['func_1445'] = func_1445
mod = relay.transform.InferType()(mod)
mutated_mod['func_1445'] = func_1445
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1446 = relay.var("var_1446", dtype = "bool", shape = (12, 9, 5))#candidate|1446|(12, 9, 5)|var|bool
func_1445_call = mutated_mod.get_global_var('func_1445')
call_1447 = func_1445_call(var_1446)
output = call_1447
func_1448 = relay.Function([var_1446], output)
mutated_mod['func_1448'] = func_1448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_1479 = relay.TupleGetItem(func_1201_call(), 0)
call_1480 = relay.TupleGetItem(func_1203_call(), 0)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_1491 = func_896_call()
call_1492 = func_896_call()
output = relay.Tuple([call_1479,call_1491,])
output2 = relay.Tuple([call_1480,call_1492,])
func_1494 = relay.Function([], output)
mod['func_1494'] = func_1494
mod = relay.transform.InferType()(mod)
mutated_mod['func_1494'] = func_1494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1494_call = mutated_mod.get_global_var('func_1494')
call_1495 = func_1494_call()
output = call_1495
func_1496 = relay.Function([], output)
mutated_mod['func_1496'] = func_1496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_1519 = relay.TupleGetItem(func_1201_call(), 2)
call_1520 = relay.TupleGetItem(func_1203_call(), 2)
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
const_1522 = relay.const([[-0.624837,-1.716100,-3.326023,-6.982059,-5.751774,9.750296],[-5.680958,9.624923,-9.045769,1.924762,-3.133854,-5.808595],[-9.630233,9.168029,-6.137044,3.362380,-5.375359,8.780773],[-2.398433,4.260633,-8.901855,-4.281762,5.067524,6.696069],[6.614334,-4.446217,-1.079222,1.101251,9.056084,4.996331],[-2.063895,-0.581044,-4.727778,-1.879569,9.899927,5.168097],[-0.481094,-3.888455,5.701271,-1.086997,-0.385390,-3.206296],[2.642946,-2.776926,-0.684254,-0.417465,-5.690940,-7.449917],[6.487050,4.304749,-4.555756,-2.525085,-9.037351,3.229496],[8.144266,-5.211208,-6.246547,-3.600909,6.820644,-6.272913],[-5.820453,-8.626982,-7.998567,4.638811,2.050297,-2.822370],[6.902330,5.920366,-7.512457,3.417004,-7.183190,9.005845],[-6.021254,-3.994437,-3.297790,-5.805516,0.952339,7.141613],[8.465658,3.950938,-5.504482,-3.782634,7.839790,7.941951],[-1.240370,6.255566,7.601979,-4.816866,-1.726450,1.145096],[7.820167,2.125952,-6.376731,-7.578832,5.109181,1.446473],[-4.138489,9.797919,2.100493,5.964922,1.211294,-9.166043],[1.274125,-0.340724,4.783012,3.157026,6.046721,5.838319],[8.850707,7.046033,-4.124800,-7.484193,6.923909,-3.806300],[5.851655,-9.977772,-1.604906,6.197538,4.660791,3.287395],[6.396275,-8.025228,7.484679,-7.928376,9.758910,6.034396],[-8.500204,-7.086469,8.968425,-3.715528,-4.545661,0.624470],[9.957791,6.944871,-3.003701,9.329505,4.407947,7.982311],[-7.559520,5.096029,2.030220,9.245122,2.658239,4.562244],[-8.713418,0.416111,9.591354,9.764226,2.526940,4.601846],[0.508300,9.854565,-9.031181,2.532764,-8.994264,1.828878],[2.983924,-6.094079,-7.361331,0.210234,6.581287,-4.366101],[5.484373,-7.955652,-3.080052,-7.643096,-7.702529,-6.378831],[-5.125917,9.132768,-0.433692,1.395041,9.725434,-1.688830],[7.711650,-2.849485,-5.572266,9.222319,-0.105060,-8.658629],[-9.580417,-9.744258,-4.664391,6.161992,-9.455030,-8.381242],[4.658577,-4.498995,3.867488,8.828436,-8.474087,9.477705],[-5.371051,-1.512218,-7.130728,5.339895,-1.803962,-5.206735],[-0.486995,4.256342,-8.867124,9.203766,0.272940,0.712847],[4.426583,-3.306362,-4.023958,-9.275642,-7.321447,-2.333624],[-0.309781,5.590789,8.846579,9.934179,-4.180171,9.031935],[-1.667494,-6.991048,-7.481506,-8.237685,-6.783198,-5.177867],[7.497982,0.589605,9.703623,-5.160234,1.248657,-8.653057],[6.445711,-8.704977,4.263347,5.872909,8.250277,5.829502],[6.745583,4.776811,-4.485307,-7.097858,-5.863071,-9.642967],[6.279552,5.825625,-4.163194,-4.164281,-3.906567,6.649967],[-5.988937,8.530359,0.499743,4.362804,9.661071,-0.715391],[-4.538414,2.737639,9.980225,8.927170,-1.000045,9.751775],[-8.426880,2.802155,6.896556,-4.596189,7.247804,6.906785],[2.363625,2.104679,1.238041,-7.622633,-2.143561,-1.115977],[5.919787,0.231191,9.915890,2.830076,-4.013858,-6.576084],[5.797315,5.230579,-6.822066,0.213948,4.285846,-0.955097],[5.257627,3.016788,-8.423360,7.626981,1.438650,-6.569141],[7.092178,-0.848590,-7.078531,0.157195,-2.230779,-0.055078],[1.214013,-9.771885,-9.259238,6.006859,7.198168,0.586479],[6.449745,-1.334563,1.963128,8.719011,-8.618003,-8.698422],[-9.473617,-1.635128,-9.382500,2.463235,5.812488,2.906837],[6.309563,4.088450,0.182698,-7.965054,6.188862,9.749412],[0.009111,7.795184,-1.092880,-7.059273,-1.463078,6.776831],[9.168118,-0.859392,-7.314215,-1.332804,7.992172,0.663096],[0.159086,1.953081,-7.415032,6.226716,7.459042,8.124736],[5.221626,-4.043164,-5.895145,-4.605172,-7.173972,-6.196040],[-5.355462,-3.047403,-2.858290,-7.322564,-3.693385,-0.079203],[-5.841872,-3.869701,7.911775,-8.277399,-4.458881,-5.290065],[-1.413635,-9.047061,7.982635,-9.175147,-8.479208,4.424986],[-6.296801,-9.741129,5.248428,7.352801,-8.849615,7.744126],[4.270713,-8.361172,-9.075823,-9.752789,-0.266486,-4.598793],[-2.564286,6.643048,9.363542,8.293790,6.731595,-3.311127],[2.648040,-1.098344,-4.731824,3.234144,2.289366,0.557922],[-0.027928,9.461410,-9.027278,-5.667087,-3.086737,1.583502],[5.486555,9.516324,-8.408809,4.447586,5.322376,-6.290575],[-0.824427,9.464328,6.581027,6.151885,-5.323443,-2.136405],[-8.274193,7.020401,5.301788,6.769914,-3.953059,3.629283],[-0.343216,-8.535084,-6.857155,0.078740,-9.002982,3.694214],[9.926065,5.164903,4.217498,4.801605,-5.665624,-6.476490],[2.967603,-2.884791,-2.800182,0.345911,1.460454,-0.955073],[-4.498339,-8.310252,-1.440472,-4.839686,-6.647541,7.319583],[-3.746523,-7.647233,-0.588057,-3.945322,-5.428911,1.523990],[-7.596761,8.774547,-8.521099,5.957274,-1.023865,1.381656],[5.159339,-6.980767,2.274898,6.256147,-2.223107,-3.115987],[-0.371297,4.937974,-6.353763,7.562036,7.653603,-9.754121],[-0.714105,-5.637651,7.107967,8.975315,9.793697,-2.890394],[-5.422075,-5.286918,5.800529,2.483973,3.156881,-2.596470],[9.593550,-8.493107,4.647642,-7.360289,8.927010,-4.839892],[-5.493096,6.861810,3.790095,-9.273145,-8.784075,8.651763],[3.431191,5.508837,9.861073,-7.218922,-8.594660,4.909285],[4.665633,7.275621,-3.596262,4.500656,-8.009903,-8.486796],[0.559426,2.296358,-8.320264,7.340037,7.705504,-4.635883],[0.901271,5.619164,-1.718114,4.966245,-8.164278,-6.621886],[-6.185764,1.572371,-0.872962,-6.972415,-2.820350,1.779195],[-5.018910,-3.545970,-7.364387,-1.933474,-9.127922,6.483751],[-6.228512,-2.293656,6.880789,8.935311,7.154439,-0.648694],[9.283374,0.776127,-9.650042,-6.938146,8.116203,-4.052301],[4.071820,1.850283,-5.237355,-4.101861,0.525290,1.418129],[3.741453,-0.033928,6.064654,5.109841,-3.993710,-9.097468],[4.712552,5.089333,-3.895161,-9.504738,4.421919,1.021377],[-4.439871,-9.663215,-3.162941,8.962340,9.498906,-0.504991],[-7.536910,6.574412,-8.264449,-5.280075,-5.592553,6.832175],[3.789362,-3.531392,4.369945,8.735777,-7.111736,-0.317919],[4.085767,-5.930663,2.638254,-7.535999,-4.534238,-1.532016],[1.173356,0.487155,4.752040,-9.335749,-0.438421,2.669257],[-3.859279,-4.938205,-4.593368,-5.695971,-5.148320,-9.946506],[5.591826,8.304740,-7.194965,3.964301,-3.119963,8.693585],[8.963780,1.073661,5.811544,6.915042,3.750711,-4.463076],[-3.761406,6.031857,2.218288,9.649269,-1.929790,6.589810],[-8.010500,9.307822,5.532740,-4.339068,-8.675892,-3.771829],[-2.548571,-3.786811,2.507113,-6.201616,0.849710,-3.093609],[2.498388,2.880522,1.747741,0.541812,9.856992,-2.835975],[0.242409,6.769303,-8.113581,8.363800,-7.768867,-4.012728],[-8.538412,9.908448,9.927996,7.996130,9.921598,-6.755728],[3.021224,5.995994,-8.178140,1.830807,-5.515086,-4.797100],[-1.629357,-0.468204,7.467808,6.325411,8.919171,2.996406],[-8.958700,2.093942,7.532271,-0.343295,2.055393,-6.529522],[-1.951719,-1.081853,-6.255446,8.530973,-7.144011,7.115986],[5.491900,-7.862735,-4.250178,9.692677,-9.023038,-1.614414],[-4.674985,-9.484497,-7.553472,-1.344820,-3.185385,-9.149765],[7.443094,3.214728,6.442521,5.106296,7.487979,0.573787],[3.442635,3.836999,8.643254,0.736529,-1.868240,-7.844533],[-2.262100,5.044820,0.222328,-1.679502,-9.810926,-5.079148],[-6.684690,-8.617688,4.750970,5.489768,-6.036022,-0.913803],[8.195371,3.833107,0.147328,-3.507756,-5.253371,-0.695657],[0.040230,-2.109741,7.999837,5.954442,-0.090843,0.306707],[1.145490,-0.509390,1.259583,-2.836892,4.928591,0.367663],[4.319102,-2.693153,6.849130,8.592808,2.182435,-8.292297],[-4.686968,1.217428,5.110857,0.340072,3.569957,-4.494014],[-3.076280,8.548843,2.167291,0.287175,5.992128,-9.864093],[-5.946020,5.655013,-4.979487,-0.871979,-7.748047,3.163622],[2.579983,-3.314781,8.853914,1.626353,4.328310,8.866016],[4.788324,7.990237,-7.807940,-8.522370,3.868771,0.670304],[3.973587,7.389833,1.702463,-1.089733,7.925602,0.546663],[5.320697,-6.300345,-5.560736,4.912410,-1.655598,-7.023743],[9.755720,-7.079313,-0.292332,-9.570125,0.051328,7.931084],[-4.401869,1.117022,4.933896,-4.746733,-3.576215,2.059390],[-3.897022,-9.082349,-0.277624,-5.854971,0.717594,-1.355579],[-2.898488,-3.428503,-5.387862,-8.816546,0.951070,-7.855360],[-4.298553,5.712024,-7.362665,3.886382,-7.306150,8.876911],[-6.265420,-1.380771,-6.234084,-8.521426,6.254882,7.120576],[-8.771198,-5.306283,8.374843,-1.842868,-2.220182,-6.713053],[8.189775,9.320189,-2.567073,-2.049091,-8.661505,-6.363554],[7.408169,3.627062,8.876569,9.560190,-2.996356,1.622264],[-3.489641,-9.537073,-4.205048,5.395167,-6.445699,7.374035],[-6.979397,-7.300803,-1.017619,5.310725,8.834198,-5.988677],[6.418580,-8.857283,6.565569,-6.496356,-7.322935,-5.454590],[5.109860,-8.638573,1.268742,-7.252505,9.123377,-0.655334],[-8.511179,7.906735,8.208822,-4.960145,9.502617,-2.342391],[3.618997,1.903308,8.922269,-7.482175,4.297079,6.355780],[-6.815422,-8.115605,-1.817502,3.140671,9.787356,-6.390495],[-6.409178,3.090282,6.849585,-7.358592,-4.031774,-3.437891],[-3.967981,3.260085,7.283685,-3.807196,-2.874751,1.106686],[0.473835,8.353044,-2.905716,7.867450,3.570099,-5.825055],[5.176780,2.125699,-8.566648,9.163602,-1.736080,1.723626],[8.167154,8.160532,-0.998721,-4.413380,1.173849,-6.457015],[3.675195,-5.255706,8.842940,-4.490929,5.655528,-5.604958],[4.876361,-1.078179,-2.780845,-7.136279,6.747928,-0.122685],[-8.703067,-8.895478,-3.264676,2.260134,-1.831234,-5.314476],[9.134490,-7.319996,-6.177732,-9.698928,1.285425,8.682764],[-2.994367,6.870116,6.047139,-1.444650,5.803067,3.969819],[8.713154,0.319303,-3.407723,1.620860,-7.082303,0.866045],[7.620691,8.922665,-0.177241,-4.938811,-8.710145,2.972845],[6.407915,1.614405,-6.935309,6.062131,-1.134050,7.876576],[-7.505361,-2.469589,8.455487,-9.844511,5.655340,2.717967],[-2.795421,5.695619,5.789839,4.335558,-2.386957,6.363387],[4.205295,-9.380906,-5.004732,3.354702,3.774934,5.172770],[0.520607,1.943305,6.514290,-7.872544,-8.810299,-5.921102],[-5.061128,6.987968,5.515892,9.492852,5.589011,-4.865125],[-4.157253,-0.907473,5.367706,-2.190949,5.093126,0.768331],[-3.054720,7.206918,5.576979,-2.990270,1.108037,-7.892907],[0.285538,7.255621,-6.818276,-4.081077,3.518510,-3.226886],[-0.037886,6.074057,-0.528873,5.742572,5.326134,6.332310],[-0.881918,-9.278712,4.351644,-2.597218,5.508477,2.689506],[2.614233,-7.374394,0.436227,7.689671,9.468723,8.766498],[-1.469340,-8.749613,8.789459,-7.315173,5.884038,5.375890],[-0.388584,0.279502,-3.774143,3.608575,-1.233170,-9.449524],[-3.609255,-5.844607,9.060175,0.177581,-6.235793,7.729796],[0.527437,6.311565,-8.282574,-8.915768,6.341401,-1.236390],[-5.175350,1.426160,4.817303,-4.750422,-8.331587,4.760445],[0.641379,8.777642,-8.592080,0.638777,-9.713728,0.779206],[-3.643960,1.155509,5.056014,6.756005,8.275490,8.722773],[-5.062618,-4.507277,-7.581931,-4.876742,-3.971805,4.674027],[-0.783033,6.864097,8.006725,-5.792157,-0.881641,6.574679],[7.458835,8.122999,-8.946733,-9.791431,8.653488,5.254188],[-5.145208,6.495195,3.338185,-4.466505,5.791155,-8.452911],[-6.624438,-2.568287,8.939866,-0.908420,-8.192644,5.135378],[-6.146541,-6.980833,8.160647,5.438343,4.256646,-0.600851],[3.463629,0.386792,-0.821091,-7.634016,-9.734592,9.474448],[-3.212221,-7.597840,-1.074126,5.088779,8.981230,-3.413019],[2.074381,1.042008,-5.622216,5.063656,-5.302015,-6.570002],[1.538679,3.430177,-7.206576,7.970559,-3.446866,2.304696],[8.982340,-3.685875,-2.599410,6.723537,-1.943508,0.595803],[8.742619,4.185349,9.744468,-5.986215,-9.263321,-6.555135],[7.976206,6.150947,6.693891,-1.176515,-6.695114,-4.400219],[9.284863,-6.275399,-8.029934,-3.010346,6.930801,0.380038],[1.269496,2.682765,8.919488,-7.842841,0.160181,-5.480954],[3.941196,3.701669,9.566279,-0.593397,-3.765939,7.568159],[-2.154346,-2.445337,6.729412,-9.785883,7.871835,-7.163243],[8.254459,1.592951,-7.339224,-4.253536,-3.228557,5.413494],[6.294903,-2.285953,9.210915,-5.618708,8.409780,2.641852],[-6.527390,-7.127303,5.019114,-0.077311,7.550847,9.829781],[0.754305,1.453878,2.487966,-0.842378,0.147692,-8.893473],[-9.189774,-8.780412,9.339593,-9.124362,-2.022170,-5.885506],[5.806733,-4.160822,-6.221608,-8.270858,8.537517,-2.287155],[2.978841,3.116431,3.370493,5.777227,-8.385943,-0.785014],[4.837532,7.724699,7.625893,8.481453,-9.644199,6.799672],[1.901567,1.518453,-6.243218,4.298070,-9.967970,-4.094437],[9.745023,3.290049,4.562263,0.967505,-4.952843,-1.800842],[-8.809103,-2.708238,-9.895978,-4.113355,6.447174,-5.388515],[6.104350,9.000160,0.972397,1.385628,9.364705,-2.568053],[-4.852593,6.914601,8.581392,-3.265424,7.831701,-6.044111],[7.408429,4.099775,-7.973693,-8.342526,-0.897942,7.541516],[6.962644,-1.815939,5.095371,2.011378,-1.399655,-5.139695],[1.981084,-2.701701,4.667522,-0.518195,4.787432,-6.707229],[5.503727,8.412749,-8.694060,9.310885,8.276162,0.903596],[6.463756,3.799906,6.623458,2.379564,-0.324150,-3.813705],[-0.758888,-9.086437,-7.354381,-7.455419,4.300886,6.913927],[-8.809841,1.121073,-5.057149,0.409256,-1.572904,-6.821894],[-2.960655,-9.236837,7.276835,5.053356,6.839021,7.673566],[-9.468172,3.642056,1.882100,6.327243,-5.816597,6.888523],[3.450138,-8.442383,5.076831,-3.076271,-4.823988,3.620870],[5.349000,4.892302,-7.630963,-4.608934,-8.873435,2.951208],[8.347737,-4.751897,0.071923,-7.058927,-3.729390,-4.501712],[3.585140,5.136813,4.890292,5.413667,0.663043,7.519334],[2.183016,-3.359946,-5.068052,0.121560,3.000281,2.168877],[-2.860806,0.158806,-7.381149,-2.752737,-2.478123,2.582459],[-7.298403,-8.588002,6.548496,-4.693070,-0.252685,9.991971],[-1.976535,-6.396776,-3.324304,-8.901933,1.367512,1.586124],[-8.661057,-7.864550,4.430960,-2.630980,-9.412756,-8.363005],[8.698608,2.119891,0.018665,-6.535839,4.659954,2.726673],[-4.569195,-5.357683,-4.984868,9.060023,-3.470300,4.835494],[3.708472,9.827162,4.921182,6.457055,-5.686695,-0.504497],[2.302383,8.732941,5.265887,-9.592317,0.374304,1.866232],[-1.386900,-1.580347,-9.575948,0.182412,0.720159,-7.007664],[-5.030000,6.004511,-1.137857,-3.127103,-7.267723,-1.927295],[3.510330,5.032316,-9.980288,-0.564591,8.638125,4.963617],[-3.074250,1.256175,0.241786,-6.579328,-7.032619,6.495465],[4.816640,-1.421245,8.283345,1.776106,-8.517551,6.329266],[-6.889301,9.512976,-5.596876,6.751071,7.246180,0.366117],[-2.998565,-4.310286,0.012929,5.365906,-0.297555,2.254875],[5.493479,-1.089797,6.755568,-5.806717,7.497902,-5.373738],[-0.429173,-3.263947,-1.995592,-5.588350,-4.475517,8.032911],[-6.611842,-9.064845,2.012900,4.348438,7.434025,-6.547536],[2.558355,-0.974421,-8.417269,8.810783,-4.094515,2.931373],[9.214294,-9.781502,-3.080549,7.523763,-2.339603,2.040057],[3.927791,-2.303413,-3.678626,-4.680772,7.467696,-8.331614],[5.450915,-9.758763,-6.650911,-7.046210,-4.465018,0.659796],[9.819632,6.430307,-9.630703,3.237924,4.000099,-0.256752],[-3.242848,-8.937850,7.153206,6.119029,-5.136332,5.744826],[4.038079,-1.447211,-9.073264,3.371914,-5.005447,3.856831],[1.474978,4.699579,6.807243,5.696800,-5.211374,8.489554],[-0.806134,-5.316112,6.561642,5.340371,4.145339,-9.243085],[5.293389,1.664952,-7.346346,1.633861,8.681167,9.577449],[-5.543831,-5.754035,-5.882819,2.044714,7.148162,6.049251],[6.868999,9.767738,-8.968238,-5.592593,6.056338,0.802382],[-6.345020,-6.684751,7.194195,-3.656959,-6.914945,-4.339770],[7.562978,4.626376,4.793166,5.811090,-2.197830,-0.182900],[-1.481379,-0.377492,-5.927728,0.925684,-0.196705,8.261605],[5.889692,-1.848310,-8.865322,-1.478443,-2.508150,-8.536751],[-1.511410,-1.499752,4.631410,3.886696,5.108996,4.417252],[-7.112196,-6.067461,-0.535412,-3.366435,-3.274154,7.848818],[-8.224754,-1.722423,-1.393160,-8.889765,-2.754696,3.212217],[6.420751,5.310879,-3.897982,3.656704,4.835457,-4.027873],[2.380541,-7.111607,9.664157,-4.351582,4.093224,-7.080066],[-8.706641,5.135748,2.748836,-7.993733,2.719664,5.734986],[-2.016607,-3.876147,-0.023225,-5.554620,-7.046412,8.686000],[-9.804518,2.158138,-1.026752,7.359190,-7.628736,5.908371],[2.769637,9.232877,9.489825,7.822424,1.196114,-6.185035],[-7.847440,1.928595,5.039554,-1.583250,-7.617614,8.934723],[2.847313,4.769657,4.589451,3.715573,-7.099236,-2.934238],[5.863832,-1.009820,8.806861,-7.138369,5.647494,-8.743866],[4.337435,-7.810479,-7.023258,-9.342310,0.268894,-3.960507],[0.263460,9.105811,-4.097832,5.550101,9.446576,-4.161944],[-4.455762,-2.525707,-9.256101,-1.697112,2.452215,7.056624],[7.946095,7.562979,-1.301086,3.110667,7.390941,3.183601],[-2.722839,7.594596,-0.768707,2.053717,3.829659,-4.814983],[-1.094684,7.769786,-6.124323,-9.105340,-8.089988,-8.520118],[3.080492,-1.386801,-9.421259,-1.603530,2.280189,7.751399],[1.192018,-6.395210,-9.242311,-1.516844,-3.986429,2.516135],[-2.156558,-4.624365,3.126373,3.583049,-5.266343,-2.620487],[-7.172091,-4.925546,-3.329308,0.807065,-8.348302,-2.350722],[7.196160,8.162255,-5.372236,-9.824650,-8.673856,-0.430334],[9.009496,-6.099814,2.908646,-3.865072,8.316387,8.172023],[-8.114642,1.893460,4.341125,-5.338627,-8.399904,-7.265576],[-0.869439,-0.134019,8.018096,-6.075414,-3.094567,-5.775537],[2.000063,3.177306,7.752922,3.065094,-6.812665,-8.885425],[-8.020077,-1.512015,0.351361,-5.496658,3.835695,-0.299990],[3.740582,0.635124,-1.844985,7.140555,-8.008876,-1.462343],[-0.355791,-0.964252,8.879557,-5.046609,7.479424,-9.789039],[4.068748,-6.733977,1.639653,8.232622,7.485733,4.705878],[-2.468988,-5.572908,3.101141,6.444904,-4.013573,-0.639156],[-4.446895,7.063194,5.432357,-5.248108,-9.799946,0.890112],[-4.900903,-9.710295,8.771148,0.172693,1.034757,5.063168],[-4.844111,-1.584972,-0.803017,-6.020341,7.531268,-6.607194],[-9.074432,7.917956,9.946465,-2.174942,4.714127,9.778914],[-6.967734,-5.354324,-0.234015,3.635790,-3.812843,9.653832],[-8.248918,-6.363149,-9.932417,9.051577,9.364203,5.642558],[9.795077,-3.912605,9.900262,-2.392218,-2.413177,5.929039],[-1.936494,-1.551347,-9.078195,7.084906,7.908709,-0.384994],[-2.551465,-4.305509,-9.083574,-8.108681,-4.558429,-5.186836],[-2.042258,4.337904,6.843067,-5.023883,6.153206,6.668262],[-7.172601,9.815444,-4.700951,3.180624,7.549135,-9.247179],[-3.014472,4.208200,-4.678634,-8.671633,-1.723474,1.113978],[-6.195488,2.226905,-5.328964,6.158426,7.367401,0.096971],[-1.224535,-0.754369,-7.222018,4.291067,5.737935,2.080374],[-2.541519,3.425020,-2.792475,-3.199373,-8.216741,-8.923365],[-6.891963,9.301584,-6.223253,1.981205,-8.688172,-1.213088],[7.701563,8.744361,7.043558,-4.673615,-2.969378,-8.371528],[-6.064699,9.647584,2.521553,-3.267104,7.768986,3.967080],[-7.327054,-4.995170,1.782575,0.293149,-3.514378,2.972523],[-1.193386,4.387951,7.821426,7.104385,-5.654188,-9.165206],[-9.308834,-6.485274,3.873020,-3.312928,-1.975336,-2.926951],[4.929423,-3.836520,-4.055183,5.147125,3.034469,8.589637],[1.748027,1.729785,2.529425,6.963630,-9.653753,5.288981],[2.998809,0.235011,-2.253430,8.602175,7.778956,3.210333],[-8.707513,-0.923042,1.734673,-6.519449,-4.059676,-1.516363],[-4.984865,-2.060829,3.456373,-8.429894,3.175114,1.208404],[9.715313,6.857873,-4.935274,-5.948963,-9.402368,4.188434],[-4.972490,-0.610266,4.838277,-3.634465,-4.345304,-3.210780],[-0.391342,-8.805853,-6.718549,5.297570,2.345784,-0.211566],[0.008825,-6.870063,-3.557697,1.995505,6.359858,7.672131],[-7.697011,-2.971100,-2.440124,1.994277,0.604959,-6.886690],[1.087280,4.437652,5.920050,-0.254814,-9.788435,-9.615534],[-8.020945,6.620299,8.526623,-4.577997,-1.001868,-6.634497],[8.059775,9.392299,1.037815,-1.260184,5.672410,0.801417],[-0.691183,8.305801,-6.359564,3.172319,8.988937,2.100909],[2.917941,2.197738,-0.928745,0.676690,2.965293,6.480246],[-2.726851,4.324068,5.242657,-0.797982,-4.566069,7.086219],[2.413097,-8.750018,8.003812,1.894978,5.071752,9.803378],[-7.139525,-1.359292,7.210859,3.956275,6.565233,-8.650864],[5.344385,-8.645402,-7.942081,5.486610,-6.337728,8.767045],[8.352330,3.166064,8.224245,-9.707081,4.891502,1.498125],[-8.526184,-5.155209,5.193287,6.421492,-3.573413,-7.687529],[3.660039,-8.814469,3.130651,9.852338,0.533829,-1.327622],[5.653546,-5.198552,0.932644,-7.450777,-3.959839,4.932668],[8.342274,2.284746,5.290404,-9.224975,2.631707,-9.862742],[-1.371323,8.903438,-5.976701,-2.895947,-0.726292,-1.106711],[-7.707111,-4.994161,-6.580259,-3.798204,-6.543712,3.735513],[-1.620111,-0.708625,-5.830629,-2.663338,-0.051437,-6.308742],[9.118774,3.263722,-4.230619,4.068534,-0.374886,6.194543],[-7.214965,-5.663455,7.051309,-7.939745,3.238001,5.961100],[9.888057,3.806833,4.553568,2.521953,-0.645399,1.733903],[-5.256717,-7.931420,-7.410778,0.982950,0.490347,9.815498],[3.645918,-1.264025,-0.963881,2.302172,-8.813192,0.345842],[-8.586700,-1.191541,0.109342,6.288859,9.554258,-0.768628],[-5.927305,-9.124327,8.257268,-4.897401,4.998071,-7.005412],[0.097950,5.956600,-7.365655,4.962519,8.820256,1.649457],[3.376479,3.010293,-8.096479,-7.404282,8.054785,6.400477],[-7.500757,-3.859736,-5.754982,4.402437,-8.096163,2.000141],[-0.044852,5.541543,7.731141,-1.982225,-1.115735,8.733448],[-3.250344,3.210414,-1.044409,-7.732459,-1.291655,-0.234880],[9.154560,-9.241270,-1.254672,-4.642546,9.803847,7.520471],[9.978543,6.232848,7.513932,-7.266793,0.288224,9.059050],[-5.722848,-3.793560,-2.444463,-9.960953,0.353773,4.326315],[-7.215225,-8.094247,-2.949208,-7.908658,7.810338,4.820342],[-5.731927,-9.025988,2.195029,0.918388,-7.860048,-5.670767],[-6.695478,-8.413098,-0.548090,-9.616343,-5.730489,-0.973290],[-6.811450,-2.085125,-3.596608,-6.517353,0.505910,-5.047268],[-1.606873,2.592249,-6.445643,-7.501211,-1.191693,-1.632485],[-4.501463,6.029699,0.721063,5.367600,6.174572,9.443025],[1.019250,-2.852140,4.007838,0.193323,1.386380,-2.064945],[4.933457,-2.440686,3.191955,-8.244479,5.231223,-5.860336],[6.435547,-1.566090,9.736167,-3.408766,1.954314,-0.869762],[-3.340330,5.943884,-4.739300,2.574961,-8.595998,2.353697],[-9.976222,5.655940,1.313376,-9.274534,-6.768250,1.981140],[-9.218562,-5.720897,4.382498,-3.940892,1.442775,8.670605],[1.374423,8.985296,-5.523339,-8.295406,-5.254986,8.815972],[7.078707,-9.658624,-0.428509,-5.688629,9.410808,5.065247]], dtype = "float64")#candidate|1522|(360, 6)|const|float64
call_1521 = func_141_call(relay.reshape(const_1522.astype('float64'), [16, 9, 15]))
call_1523 = func_141_call(relay.reshape(const_1522.astype('float64'), [16, 9, 15]))
func_190_call = mod.get_global_var('func_190')
func_195_call = mutated_mod.get_global_var('func_195')
var_1530 = relay.var("var_1530", dtype = "float64", shape = (1092,))#candidate|1530|(1092,)|var|float64
call_1529 = relay.TupleGetItem(func_190_call(relay.reshape(var_1530.astype('float64'), [7, 12, 13]), relay.reshape(var_1530.astype('float64'), [7, 12, 13]), relay.reshape(call_1521.astype('float64'), [2160,]), relay.reshape(var_1530.astype('float64'), [7, 12, 13]), ), 2)
call_1531 = relay.TupleGetItem(func_195_call(relay.reshape(var_1530.astype('float64'), [7, 12, 13]), relay.reshape(var_1530.astype('float64'), [7, 12, 13]), relay.reshape(call_1521.astype('float64'), [2160,]), relay.reshape(var_1530.astype('float64'), [7, 12, 13]), ), 2)
output = relay.Tuple([call_1519,call_1521,const_1522,call_1529,var_1530,])
output2 = relay.Tuple([call_1520,call_1523,const_1522,call_1531,var_1530,])
func_1536 = relay.Function([var_1530,], output)
mod['func_1536'] = func_1536
mod = relay.transform.InferType()(mod)
mutated_mod['func_1536'] = func_1536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1537 = relay.var("var_1537", dtype = "float64", shape = (1092,))#candidate|1537|(1092,)|var|float64
func_1536_call = mutated_mod.get_global_var('func_1536')
call_1538 = func_1536_call(var_1537)
output = call_1538
func_1539 = relay.Function([var_1537], output)
mutated_mod['func_1539'] = func_1539
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1574 = relay.var("var_1574", dtype = "float64", shape = (7, 15, 16))#candidate|1574|(7, 15, 16)|var|float64
const_1575 = relay.constdtype = "float64")#candidate|1575|(7, 15, 16)|const|float64
bop_1576 = relay.multiply(var_1574.astype('float64'), relay.reshape(const_1575.astype('float64'), relay.shape_of(var_1574))) # shape=(7, 15, 16)
output = relay.Tuple([bop_1576,])
output2 = relay.Tuple([bop_1576,])
func_1598 = relay.Function([var_1574,], output)
mod['func_1598'] = func_1598
mod = relay.transform.InferType()(mod)
var_1599 = relay.var("var_1599", dtype = "float64", shape = (7, 15, 16))#candidate|1599|(7, 15, 16)|var|float64
output = func_1598(var_1599)
func_1600 = relay.Function([var_1599], output)
mutated_mod['func_1600'] = func_1600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_1643 = relay.TupleGetItem(func_1201_call(), 1)
call_1644 = relay.TupleGetItem(func_1203_call(), 1)
func_1298_call = mod.get_global_var('func_1298')
func_1301_call = mutated_mod.get_global_var('func_1301')
var_1661 = relay.var("var_1661", dtype = "float32", shape = (54, 1))#candidate|1661|(54, 1)|var|float32
call_1660 = relay.TupleGetItem(func_1298_call(relay.reshape(var_1661.astype('float32'), [3, 9, 2]), relay.reshape(var_1661.astype('float32'), [3, 9, 2]), ), 0)
call_1662 = relay.TupleGetItem(func_1301_call(relay.reshape(var_1661.astype('float32'), [3, 9, 2]), relay.reshape(var_1661.astype('float32'), [3, 9, 2]), ), 0)
uop_1664 = relay.atan(call_1660.astype('float32')) # shape=(3, 9, 2)
uop_1666 = relay.atan(call_1662.astype('float32')) # shape=(3, 9, 2)
output = relay.Tuple([call_1643,var_1661,uop_1664,])
output2 = relay.Tuple([call_1644,var_1661,uop_1666,])
func_1678 = relay.Function([var_1661,], output)
mod['func_1678'] = func_1678
mod = relay.transform.InferType()(mod)
mutated_mod['func_1678'] = func_1678
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1679 = relay.var("var_1679", dtype = "float32", shape = (54, 1))#candidate|1679|(54, 1)|var|float32
func_1678_call = mutated_mod.get_global_var('func_1678')
call_1680 = func_1678_call(var_1679)
output = call_1680
func_1681 = relay.Function([var_1679], output)
mutated_mod['func_1681'] = func_1681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1703 = relay.var("var_1703", dtype = "int8", shape = (9, 14, 1))#candidate|1703|(9, 14, 1)|var|int8
var_1704 = relay.var("var_1704", dtype = "int8", shape = (9, 14, 5))#candidate|1704|(9, 14, 5)|var|int8
bop_1705 = relay.multiply(var_1703.astype('int8'), var_1704.astype('int8')) # shape=(9, 14, 5)
func_1678_call = mod.get_global_var('func_1678')
func_1681_call = mutated_mod.get_global_var('func_1681')
var_1711 = relay.var("var_1711", dtype = "float32", shape = (54,))#candidate|1711|(54,)|var|float32
call_1710 = relay.TupleGetItem(func_1678_call(relay.reshape(var_1711.astype('float32'), [54, 1])), 2)
call_1712 = relay.TupleGetItem(func_1681_call(relay.reshape(var_1711.astype('float32'), [54, 1])), 2)
var_1717 = relay.var("var_1717", dtype = "int8", shape = (9, 14, 5))#candidate|1717|(9, 14, 5)|var|int8
bop_1718 = relay.not_equal(var_1704.astype('bool'), relay.reshape(var_1717.astype('bool'), relay.shape_of(var_1704))) # shape=(9, 14, 5)
func_1678_call = mod.get_global_var('func_1678')
func_1681_call = mutated_mod.get_global_var('func_1681')
call_1725 = relay.TupleGetItem(func_1678_call(relay.reshape(var_1711.astype('float32'), [54, 1])), 1)
call_1726 = relay.TupleGetItem(func_1681_call(relay.reshape(var_1711.astype('float32'), [54, 1])), 1)
bop_1729 = relay.bitwise_or(call_1710.astype('int8'), relay.reshape(var_1711.astype('int8'), relay.shape_of(call_1710))) # shape=(3, 9, 2)
bop_1732 = relay.bitwise_or(call_1712.astype('int8'), relay.reshape(var_1711.astype('int8'), relay.shape_of(call_1712))) # shape=(3, 9, 2)
output = relay.Tuple([bop_1705,bop_1718,call_1725,bop_1729,])
output2 = relay.Tuple([bop_1705,bop_1718,call_1726,bop_1732,])
func_1736 = relay.Function([var_1703,var_1704,var_1711,var_1717,], output)
mod['func_1736'] = func_1736
mod = relay.transform.InferType()(mod)
var_1737 = relay.var("var_1737", dtype = "int8", shape = (9, 14, 1))#candidate|1737|(9, 14, 1)|var|int8
var_1738 = relay.var("var_1738", dtype = "int8", shape = (9, 14, 5))#candidate|1738|(9, 14, 5)|var|int8
var_1739 = relay.var("var_1739", dtype = "float32", shape = (54,))#candidate|1739|(54,)|var|float32
var_1740 = relay.var("var_1740", dtype = "int8", shape = (9, 14, 5))#candidate|1740|(9, 14, 5)|var|int8
output = func_1736(var_1737,var_1738,var_1739,var_1740,)
func_1741 = relay.Function([var_1737,var_1738,var_1739,var_1740,], output)
mutated_mod['func_1741'] = func_1741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1494_call = mod.get_global_var('func_1494')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_1764 = relay.TupleGetItem(func_1494_call(), 0)
call_1765 = relay.TupleGetItem(func_1496_call(), 0)
var_1770 = relay.var("var_1770", dtype = "bool", shape = (12, 9, 5))#candidate|1770|(12, 9, 5)|var|bool
bop_1771 = relay.maximum(call_1764.astype('uint8'), relay.reshape(var_1770.astype('uint8'), relay.shape_of(call_1764))) # shape=(12, 9, 5)
bop_1774 = relay.maximum(call_1765.astype('uint8'), relay.reshape(var_1770.astype('uint8'), relay.shape_of(call_1765))) # shape=(12, 9, 5)
bop_1781 = relay.not_equal(call_1764.astype('bool'), relay.reshape(var_1770.astype('bool'), relay.shape_of(call_1764))) # shape=(12, 9, 5)
bop_1784 = relay.not_equal(call_1765.astype('bool'), relay.reshape(var_1770.astype('bool'), relay.shape_of(call_1765))) # shape=(12, 9, 5)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
const_1788 = relay.const([-5.986667,-7.982456,1.309683,-4.973604,8.353691,-8.282363,-5.476190,8.006414,-2.742711,7.554623,-2.502805,0.849145,-4.170995,-3.142871,0.591626,0.595491,-4.781345,-1.723439,8.531657,4.098160,-1.032156,-0.490712,0.308366,2.364819,-5.483720,-4.833996,4.847808,-4.461723,6.879149,4.070527,-9.554017,-9.275388,-7.797583,-2.024992,-4.118597,-5.842473,5.653866,0.869911,3.425138,-7.952392,7.246332,-8.979732,-9.833074,-1.733933,4.746350,-4.941586,0.721892,-2.804593,7.566777,2.135861,9.753145,8.077616,-6.576992,9.019812,9.354399,8.533478,-8.799121,1.281216,-9.845089,-7.413836,7.283534,-9.744199,4.871163,-1.370141,9.781948,-7.033049,-0.696141,-4.040561,8.388359,-0.677502,5.838464,8.880222,3.399409,9.115329,9.429369,-1.856850,-3.165644,6.749560,0.261831,9.722783,7.401109,9.452501,1.913145,-9.199737,0.716718,2.993265,-3.478902,-6.512824,-7.256186,-8.997069,7.241501,-2.700031,2.634603,-2.383980,-3.618710,2.771911,3.220281,2.303648,-7.815574,1.519123,-1.482341,2.615007,-5.931508,-8.472411,6.729100,-5.559135,8.262225,-5.736301,-9.516814,-2.736418,-8.162058,-0.739628,-6.450222,-3.095992,9.710566,5.347314,7.872338,-7.702101,-0.104438,-4.883695,2.603878,4.267792,8.915576,3.398275,-7.057035,-0.825634,-0.809323,-2.994676,-3.143433,8.386316,6.930169,4.496532,8.231235,-7.142284,0.177666,9.946000,5.123583,2.479614,3.740709,-5.286905,-5.154144,-9.095658,8.125525,-9.518060,-0.484157,7.080659,-4.322288,-6.014588,-6.234256,0.697433,7.372365,5.378692,1.709543,8.370174,0.993057,-7.220596,0.562471,-0.070902,-5.911583,-0.161905,1.574452,-5.262951,4.506475,1.143118,9.378321,9.590344,-2.062457,8.920670,6.817600,-7.651022,-3.208479,8.573106,4.863862,-0.122570,-5.650653,-6.441375,-1.663553,1.245991,7.899697,7.964903,7.810611,4.328806,2.022074,-9.619709,-5.170560,-5.039773,5.930840,-4.698609,7.183688,-4.528586,0.931398,6.251016,8.527740,4.758455,-2.387292,6.308320,4.593863,1.105305,5.839392,-5.461492,-0.020503,-0.810936,-1.311310,-6.032875,5.970646,5.268218,-4.107146,-6.544497,2.283454,-4.788777,1.012505,8.612009,2.256327,3.782682,-1.178267,-7.535035,-9.290224,2.459427,7.352669,5.393437,-1.228408,4.062317,4.725425,5.845428,-8.010093,-8.934449,7.965131,-8.860253,-2.833796,-1.280805,5.096487,4.727299,4.651715,-2.319753,4.082597,-0.687501,-4.692250,-5.438988,6.046348,-0.196060,8.540638,8.460073,1.720702,8.190669,-8.835944,-6.329499,-5.209640,9.963474,-7.514585,-1.444893,2.720180,-4.967111,4.987027,-4.716990,-5.586454,-7.457238,8.042256,-7.389518,1.732669,1.693143,3.207454,-9.202641,5.299102,-1.093569,1.084066,2.674887,8.150522,7.140516,-3.224417,4.349350,-1.016561,3.096763,-2.942908,-2.539822,8.919239,0.558050,-5.840062,1.610751,5.755900,8.377944,-9.632736,-6.128461,-1.694922,-3.736271,2.026185,9.081388,7.159426,9.310268,8.027767,-8.382899,1.459640,8.056542,6.384106,-6.104674,-4.092570,9.983869,-1.351214,-1.240361,0.905282,-9.674669,1.533426,5.015953,-4.330298,-0.022748,-6.507637,-1.688175,-2.736451,1.892113,-2.230502,-6.988358,-3.812182,-9.018177,2.620777,2.729909,3.616914,2.591945,-7.993487,-6.460502,-8.286359,-0.435273,2.095617,-6.523346,-3.007796,1.038777,5.807383,-2.572322,2.792356,7.878294,6.616783,-7.394198,-5.348005,0.234975,-2.492320,4.864639,-9.769200,9.441505,-4.721793,1.787467,-5.390919,-8.670655,2.987095,7.013491,4.482723,4.019393,5.021928,7.487217,-5.694504,-9.955207,-4.084720,8.314738,0.846303,-0.278419,-0.204668,9.765520,-8.669419,7.792384,-4.636144,9.839973,6.484982,-4.930921,-1.979411,-8.205379,2.194724,1.315169,-2.096347,-2.011839,3.608957,3.679520,2.634734,-1.162750,-4.126946,1.346251,-3.810234,-0.928558,4.427399,1.543095,2.043204,-9.663077,-3.593056,-7.550006,-2.336015,3.194997,-6.130845,-5.410181,7.386939,1.400849,-2.381918,-1.477298,8.903095,-0.728154,0.236376,-7.480855,5.930839,0.729148,-6.963667,-1.477180,8.875361,8.563432,-8.319508,8.421991,-6.369520,-0.121084,7.991462,-6.040892,3.776334,0.351392,-2.396330,9.361552,8.105219,0.336725,8.027972,-9.870328,5.479351,-9.750491,9.310035,9.300578,-4.451601,-3.225754,-7.042349,0.624848,9.481243,8.856575,-8.276884,1.665808,0.015979,-8.354220,-6.187075,3.128722,-8.774043,-4.782668,8.737103,4.556908,0.327647,0.665306,-4.819566,6.925819,-0.958484,3.007883,-8.464926,-5.756772,-8.419396,-9.472434,6.241257,-9.872852,4.712453,-5.702634,1.498055,-1.805578,5.373743,-7.033824,-7.724603,-1.837400,-5.071691,-9.589855,-9.362290,4.156257,9.695224,-9.010742,5.178536,-4.784776,7.523779,-6.078809,-0.170257,4.599363,-2.272558,-8.184443,5.314990,7.682368,-5.867581,-2.021116,-6.960485,4.550958,9.985721,0.887333,9.246785,0.542061,-8.874297,5.240704,5.636472,-3.977561,-1.838981,-8.975908,1.964727,-0.836729,7.811183,1.327004,-5.500728,6.345262,-6.517493,-6.257410,-0.160010,-8.840066,5.038848,-8.971803,-4.267352,0.700438,8.412831,-9.735278,8.224048,-8.881314,-1.190204,1.563703,5.211536,-3.754976,8.109964,5.969158,6.901752,-2.927605,1.975740,3.175008,9.309786,-2.547826,-9.312258,-7.111870,2.701280,9.267635,-2.991896,-4.642006,8.544391,0.410978,-1.518243,8.313105,-2.573647,-0.086801,-4.596879,9.866147,-1.587183,-8.478460,-7.863890,1.840978,4.420903,8.476411,1.280933,6.291352,4.255052,0.213470,5.386386,9.652633,-3.511979,2.652860,1.443175,-2.809831,0.247746,-9.523921,1.131151,7.939502,-2.176957,-3.436082,2.124498,7.499129,-0.176884,-9.167840,8.583310,4.995439,7.559882,-9.360525,9.901499,6.158938,9.191551,4.817315,2.570783,6.111361,7.687788,8.805498,-2.691708,2.634085,6.333427,-0.655151,3.977266,-2.741082,5.307388,8.575132,8.702213,9.382395,8.746407,-4.935796,4.221110,-0.711994,8.659246,9.386785,-2.310145,2.272207,-7.625442,-7.275321,0.019990,6.129251,8.039646,-3.791576,5.405053,4.306726,-8.642520,5.603202,-1.319004,-7.582847,7.394140,3.736263,4.519634,5.701337,-2.053823,3.409692,-7.063627,-9.965157,-0.565326,-8.222555,-5.998590,-3.147168,6.378639,5.809348,4.025322,-8.382381,8.301206,5.292519,-2.158793,5.750318,-6.640153,-8.205017,8.748362,7.602534,3.000210,0.170041,2.244931,-3.537579,1.862067,-7.196565,-3.574190,8.767249,-4.702323,-1.906945,3.150973,-3.945787,-4.489847,-4.079039,3.998860,8.706715,1.373765,9.076721,-8.581441,-4.665796,0.325771,3.707987,1.172718,0.193310,9.960362,-1.126148,8.572790,-0.004946,1.785840,4.089939,-1.561129,-7.748748,6.224468,8.901027,5.138273,6.712465,-5.063374,-3.919987,2.345510,-0.482665,2.645363,2.564273,9.290384,9.144341,-8.273102,2.062596,7.085129,1.289517,1.015890,0.380082,-8.632626,0.072197,8.162802,-9.980694,-0.412259,0.956772,7.294167,-0.329425,-3.664487,6.746211,7.057459,-3.369211,-9.635157,8.814884,-8.497776,3.208964,-4.606592,2.694715,-3.889347,-7.117035,-4.635274,9.745939,9.367079,-6.309576,2.113793,-2.951743,3.657026,6.135145,-9.780654,8.844668,7.809124,1.665845,-6.874822,3.844334,-6.907087,9.925446,1.292009,-4.484692,-4.363854,0.065065,2.454873,-2.667233,-0.871474,-7.489398,1.623863,9.983185,-9.285966,-1.434617,2.289468,-5.368410,4.204384,7.557802,-8.943102,1.974094,-3.885817,-5.956822,2.353521,-0.709411,-1.435134,-0.351280,2.410675,9.966464,4.772954,-0.449875,0.050415,-9.078820,-6.616114,-1.343045,-5.201433,4.035026,-1.215397,-9.247236,9.103130,6.995266,0.875611,4.197681,2.222031,4.718736,-8.411679,7.522940,-3.236934,-1.109851,8.016226,5.548141,2.435511,6.452620,-3.166110,6.181459,-6.359058,5.625525,-8.641397,-6.348053,4.338443,-1.867193,6.111692,-1.957222,-2.393782,-7.929398,7.311350,4.577442,8.301564,-8.093059,-7.249226,3.105284,-3.910396,-9.290036,6.959209,-8.925860,-2.406476,-7.453847,-0.892684,7.049440,9.859500,0.122813,9.086814,5.870560,4.513994,-9.766433,1.763583,-0.247388,4.360899,3.067671,-3.170935,2.634689,-4.512521,-5.424085,-4.018029,8.979261,-4.605184,-1.204505,8.988362,-6.584871,7.813815,-2.282441,-8.548853,-7.698054,-3.692602,-1.333289,9.458057,2.414591,9.870359,4.119233,-5.129600,2.913008,9.751463,-9.129337,-2.602290,8.821285,-0.620377,-6.976042,-2.313885,-3.954487,-4.091285,4.702282,-7.084650,-0.578240,5.099584,-7.712365,-2.117665,-9.079402,2.599077,7.038706,5.079337,-2.245124,-1.869486,-0.066144,7.757770,8.776312,1.481866,-6.898883,-4.588221,1.016660,-7.591734,2.470742,9.418179,-9.467824,-7.169851,-9.384810,-0.665257,4.381094,-1.785489,3.951853,-5.981026,2.568448,-9.496242,-5.619485,-1.227405,-4.437219,1.081808,-2.845405,2.795633,1.161911,-0.302940,0.388343,-2.507781,2.630463,-7.269618,5.548375,-5.815370,-5.410996,-6.696818,1.430551,-0.295816,2.870909,3.323808,-1.831607,-4.709157,-6.339370,-5.120990,0.477878,7.405930,3.070827,2.805839,-7.938739,4.972810,-8.876706,0.063387,1.996029,6.671744,6.726405,-9.679503,0.982771,-5.140886,6.863016,0.484041,9.028109,8.094827,-8.570324,4.655996,-7.497999,3.637123,-3.600583,-9.868372,-8.844636,-4.437641,-4.740322,-8.386072,8.417610,-4.450705,1.992706,3.620919,-8.215404,6.983477,-7.134553,3.005967,6.541638,5.176453,-0.432831,2.384986,-4.839600,-3.728915,-0.285426,-4.450393,5.878834,-2.687003,4.186976,-8.671561,5.988550,-3.450264,-9.241997,-2.847204,9.607476,-1.745634,-6.129907,-8.667661,1.137570,5.460258,6.552347,-4.083043,-0.955903,3.554388,-2.727447,7.204957,2.193363,4.414042,-3.104314,-3.366165,-4.500606,1.531123,-2.832145,9.096512,-2.484169,-2.138874,-9.855267,7.105127,7.084495,-8.934163,-3.925113,9.546865,-5.449086,5.375823,5.107356,-8.522343,-3.842408,-8.865144,1.013188,4.205025,-9.687260,-4.875773,-8.483054,-3.850002,-7.411234,5.024687,-7.320846,3.287770,-2.264001,3.189341,-6.803164,3.646679,3.323638,7.291306,6.636772,9.502428,-4.989931,-4.363778,6.641175,7.828259,-2.886229,-3.906248,8.189831,8.694679,-9.404236,8.857715,-3.212014,-6.042853,-9.286214,-0.138552,-3.477385,-6.139172,1.923984,1.495124,5.307813,5.799253,1.157045,-2.643497,3.107568,-2.275718,7.409901,-5.715482,-9.329918,9.804636,-9.933491,-3.953685,6.937965,-8.035698,-9.344232,2.951251,-9.921405,3.732532,-2.761153,-6.183106,9.371209,-1.442694,0.748786,-8.483340,2.236693,-7.619276,1.083284,-7.459485,0.247862,-3.810424,-7.743368,6.816511,-7.360873,-0.808871,2.261544,-9.419659,-4.078683,4.979582,1.566941,1.623816,3.671128,-2.547938,1.258541,-2.394012,4.408845,-6.300968,-1.481509,-4.389520,-0.485624,-7.099712,-9.832993,-6.684867,9.100847,-3.618433,9.946961,6.765457,2.389449,4.291409,-1.916500,-6.895811,-6.380397,6.458050,-8.861789,1.752448,-4.951509,-7.136260,-1.596150,8.598879,-9.993563,-2.004494,-3.566716,8.166288,-3.662959,-2.946312,-0.096556,-7.658655,3.118684,9.876734,-5.258904,-5.733233,-6.712461,9.562988,7.722732,-2.397954,-3.459164,0.651641,-0.337432,-2.677190,1.501334,3.263545,6.008387,2.359529,1.202377,8.784165,8.463932,1.546896,-9.910623,2.225247,9.285925,-0.483752,-3.857301,-1.839740,-9.375259,3.191584,2.098949,7.250822,8.883795,4.421946,0.012620,-4.934166,-5.315305,2.064569,-5.197287,-4.300846,-0.809602,7.358045,-3.592220,-6.617114,-8.800557,3.779646,-7.557877,9.698730,4.424467,7.895774,1.422451,9.183869,3.988088,-8.271637,4.210125,4.856034,8.646315,7.719067,8.245885,-7.789087,0.091114,2.708767,-0.106096,0.371265,-4.832018,5.387581,-0.968910,9.619204,1.512619,3.277107,4.139977,-2.704244,3.632209,-3.046225,0.112728,1.551086,-8.828040,8.390565,2.438581,-6.831742,0.749565,2.552731,9.672327,4.861532,-1.355924,9.416372,2.651270,7.012485,7.794731,6.066372,-9.473654,-5.672194,-0.842696,-6.348985,-5.207059,5.016524,-9.091375,-1.409414,1.928334,-5.671631,-0.655768,6.869815,3.151006,4.329870,3.990803,-0.671970,0.598350,-2.890807,-1.816274,2.760685,-1.063637,-8.278359,6.970918,-5.859446,-3.452931,-0.976985,-8.139735,-3.801239,-1.178761,1.816041,7.044840,-0.038648,-7.157941,-4.412716,9.544696,8.743332,-9.690169,-1.169380,-3.602736,-9.786359,5.266790,-2.308430,7.423526,1.190455,-8.793392,7.980723,-7.764917,-2.288531,-9.035516,2.911859,-8.755591,3.825210,-4.967636,-2.996207,-1.934536,6.516929,5.363076,-4.357529,3.243971,8.086878,-7.204590,7.525170,-1.236466,1.098275,-9.899996,-8.710413,7.486790,0.117419,1.110875,9.040653,-7.921033,7.217640,-0.904429,-9.481655,1.051876,8.201140,-7.021508,5.228563,-6.194419,-7.109219,7.300705,3.008506,-3.169860,0.295982,-9.733002,-5.979499,3.051780,-4.563593,8.752342,5.519880,-8.064046,-9.860366,0.517964,3.830833,-9.821062,-3.506486,-1.157484,-6.760883,-9.738783,-6.394178,-8.673036,-5.566837,-6.838211,8.222902,7.501190,4.959752,9.133151,2.071426,1.255514,-9.546110,-0.087982,4.047968,-5.243237,5.420597,6.875348,5.041816,-0.809179,-1.029668,7.389350,-8.299300,-2.565206,-9.981092,0.701557,8.240232,1.330559,-5.278287,-5.496005,-6.923666,-6.272657,-6.107143,-0.917014,5.040549,5.735097,3.267083,-1.831586,2.768664,5.313712,-7.167352,3.909379,9.302123,-0.395361,-2.100378,-7.317997,3.769293,3.118789,-9.608999,-5.353944,-2.437025,0.580831,-5.441435,-6.006203,0.668202,2.464706,-0.559980,1.831114,1.556755,-0.591411,-6.987400,9.844904,9.018237,7.590912,-4.517782,5.288690,3.290924,-5.175138,-3.283129,-0.284795,8.881298,-2.483843,-5.790844,0.991049,0.802416,-4.567294,-5.018302,7.317768,-7.865146,-3.050994,-9.994343,8.474123,-2.819024,3.657627,-4.533784,-2.548157,-5.449896,-1.878207,-7.020286,-3.452165,6.096387,-8.717930,-0.355683,2.758947,-6.160429,1.225077,6.219374,5.636056,1.607396,7.584017,-6.043896,2.269479,-2.002165,5.100679,3.839580,-5.310288,-1.912011,1.123678,-9.208107,6.455851,-1.673764,-5.907551,-0.513973,2.231644,-8.522290,8.069657,1.446655,4.536971,-0.462652,-8.492455,3.914981,-9.327628,4.284165,-8.925522,-6.780733,4.367076,7.761910,1.165967,4.262284,8.717395,7.617245,-3.147179,9.250041,-5.661348,-0.267789,2.749599,8.794696,-5.690046,0.507491,-5.647172,-0.310400,-8.853288,3.496731,8.020128,5.818085,3.631220,-6.389173,4.671067,9.721830,2.681776,-8.369099,4.582193,7.525802,5.570131,8.943802,-4.188054,7.750910,4.525281,-6.017524,0.335626,0.308058,-0.788487,-1.588029,1.544839,9.330872,4.151668,4.659907,7.894497,-8.683202,-3.298703,3.538059,-8.613187,7.954314,1.147706,-2.578464,9.882688,6.751448,5.039825,4.043632,-0.798168,-9.511847,0.827039,-4.030761,-5.968903,3.827780,-3.882185,3.250848,7.743638,-0.077197,5.797658,3.323384,-5.783365,-3.412909,-6.728700,-9.223107,7.551593,-9.847444,7.282699,8.667152,-1.601515,-9.925526,8.673662,4.480085,-1.547596,-5.930954,-5.396999,5.115493,-8.737916,0.711674,1.153391,2.240820,-6.842601,1.091023,8.310013,8.709847,9.597080,-4.257302,5.036003,9.178779,-3.751682,6.537859,0.055258,2.656902,8.166299,-1.583605,6.785312,3.350109,-0.149209,4.271681,5.105909,3.605435,-1.873178,-9.683926,5.194596,8.489178,0.422778,-8.311137,0.699745,-1.813122,-4.720802,-0.050370,4.887970,5.917777,-5.498243,9.510810,3.507138,6.482945,-0.361792,-0.009565,2.107482,8.945351,-7.815620,-6.547273,-0.613713,-0.463388,9.313827,-0.031669,-4.167592,-1.221126,-6.096505,8.591119,-5.246065,1.460767,-4.070093,-9.867702,2.822300,-6.253200,-6.170186,-3.036303,9.184249,7.767947,2.621814,9.998210,-0.887793,-2.069227,4.762338,-3.200254,-3.775933,5.392940,7.718989,2.559128,7.038380,6.295229,-0.999048,-9.993398,-2.901329,-5.928963,4.585054,-1.290335,-2.050645,-4.047294,-1.663084,3.682690,-9.473714,2.581066,4.282636,0.375421,-1.114031,-5.155780,-4.255090,-2.048800,-5.849969,-7.750819,1.773352,2.158298,7.716895,9.625423,7.616862,8.334792,3.613877,6.275098,4.622138,-1.920068,3.850528,-0.358448,0.641016,6.093775,5.087283,-5.521598,-9.050111,-2.615364,5.363201,7.017077,1.634953,6.340990,1.028474,3.909132,1.492078,-6.445921,-7.342136,-6.293584,9.080441,2.709412,7.164678,8.710072,-2.056379,2.930719,-0.946543,-0.398351,8.686180,-6.664499,-7.234799,1.014746,6.970098,7.954697,-9.640698,-6.696234,6.664369,6.168665,2.534722,-4.144745,-3.398478,5.372501,-2.605357,-5.320457,9.819875,-0.327486,-5.118820,8.762377,9.957583,0.131977,-9.096656,3.632570,-7.498005,-7.740859,-3.690010,0.867256,3.767628,5.839619,-9.940537,2.600283,-1.523415,2.696967,-6.794091,7.159666,8.466511,4.334070,-1.426753,0.662261,9.378487,-2.507435,-7.148963,0.174600,-6.159310,1.077039,-6.358902,6.191977,-7.679257,-8.936770,8.935500,-8.836471,-6.054748,4.993927,1.053620,5.105102,-2.411004,-5.763983,5.668202,-8.484721,-5.692226,-6.287023,1.268860,0.747430,5.980888,-8.784227,6.007124,3.555177,-2.324770,-8.053974,-3.033968,8.512517,2.595459,8.783833,1.027933,9.557988,-6.566910,-5.679312,6.496481,0.160058,4.987004], dtype = "float64")#candidate|1788|(1680,)|const|float64
call_1787 = relay.TupleGetItem(func_1598_call(relay.reshape(const_1788.astype('float64'), [7, 15, 16])), 0)
call_1789 = relay.TupleGetItem(func_1600_call(relay.reshape(const_1788.astype('float64'), [7, 15, 16])), 0)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_1801 = func_896_call()
call_1802 = func_896_call()
func_1678_call = mod.get_global_var('func_1678')
func_1681_call = mutated_mod.get_global_var('func_1681')
const_1811 = relay.const([-2.150714,1.706190,-1.072532,-8.034975,-0.427865,4.676259,-4.870326,-2.009713,-6.849519,0.594169,7.324642,6.743337,2.182170,-7.251860,-0.796946,-2.550253,0.598062,1.563825,-8.873237,-2.147511,4.964566,7.028940,-8.764215,-2.344768,-5.698474,-6.378850,-4.256506,0.353371,5.082910,7.933506,9.242572,-3.690501,4.866512,-4.606672,-1.092063,-6.237897,-0.704233,7.026273,8.858297,3.056107,3.867462,-2.776440,1.912895,5.674211,3.194855,8.994775,-9.122167,2.915935,3.876020,5.455440,4.897259,1.642466,-4.570860,-4.128754], dtype = "float32")#candidate|1811|(54,)|const|float32
call_1810 = relay.TupleGetItem(func_1678_call(relay.reshape(const_1811.astype('float32'), [54, 1])), 1)
call_1812 = relay.TupleGetItem(func_1681_call(relay.reshape(const_1811.astype('float32'), [54, 1])), 1)
func_1298_call = mod.get_global_var('func_1298')
func_1301_call = mutated_mod.get_global_var('func_1301')
call_1819 = relay.TupleGetItem(func_1298_call(relay.reshape(call_1810.astype('float32'), [3, 9, 2]), relay.reshape(call_1810.astype('float32'), [3, 9, 2]), ), 0)
call_1820 = relay.TupleGetItem(func_1301_call(relay.reshape(call_1810.astype('float32'), [3, 9, 2]), relay.reshape(call_1810.astype('float32'), [3, 9, 2]), ), 0)
output = relay.Tuple([bop_1771,bop_1781,call_1787,const_1788,call_1801,call_1810,const_1811,call_1819,])
output2 = relay.Tuple([bop_1774,bop_1784,call_1789,const_1788,call_1802,call_1812,const_1811,call_1820,])
func_1825 = relay.Function([var_1770,], output)
mod['func_1825'] = func_1825
mod = relay.transform.InferType()(mod)
mutated_mod['func_1825'] = func_1825
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1826 = relay.var("var_1826", dtype = "bool", shape = (12, 9, 5))#candidate|1826|(12, 9, 5)|var|bool
func_1825_call = mutated_mod.get_global_var('func_1825')
call_1827 = func_1825_call(var_1826)
output = call_1827
func_1828 = relay.Function([var_1826], output)
mutated_mod['func_1828'] = func_1828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_1833 = func_896_call()
call_1834 = func_896_call()
func_1342_call = mod.get_global_var('func_1342')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_1856 = relay.TupleGetItem(func_1342_call(), 0)
call_1857 = relay.TupleGetItem(func_1344_call(), 0)
func_1134_call = mod.get_global_var('func_1134')
func_1136_call = mutated_mod.get_global_var('func_1136')
call_1879 = relay.TupleGetItem(func_1134_call(relay.reshape(call_1856.astype('uint8'), [120,])), 4)
call_1880 = relay.TupleGetItem(func_1136_call(relay.reshape(call_1856.astype('uint8'), [120,])), 4)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
const_1893 = relay.const([False,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False], dtype = "bool")#candidate|1893|(98,)|const|bool
call_1892 = func_1147_call(relay.reshape(const_1893.astype('bool'), [14, 1, 7]))
call_1894 = func_1147_call(relay.reshape(const_1893.astype('bool'), [14, 1, 7]))
func_1342_call = mod.get_global_var('func_1342')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_1896 = relay.TupleGetItem(func_1342_call(), 0)
call_1897 = relay.TupleGetItem(func_1344_call(), 0)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
const_1907 = relay.const([[-4.755313,-3.547608,4.551883,8.612531,7.979615,3.778550,2.053493,-2.264280,7.722236,-4.776471,-1.727838,-5.630953,2.846362,-8.548934,7.066514,2.882908,-9.860759,-3.617316,6.454268,2.838384,2.145501,5.019312,-3.779858,9.279634,9.622333,-5.717354,4.958152,0.789950,-2.342175,-2.688551,9.997577,3.770931,7.828686,0.846942,3.719528,3.200759,8.915001,7.975305,-5.600289,9.171760,-8.483352,-2.649645,8.635206,8.423876,3.613183,9.646655,5.243177,7.968171,-1.737836,-7.612567,3.386470,-5.140974,-5.515938,-0.498944,-4.688000,2.183668,5.840906,-2.905328,9.784549,-7.188910,-5.138171,1.233535,-4.202998,-1.622352,-5.597982,-5.350166,7.444461,-8.725002,-6.496238,-3.186978,0.060835,-2.295554,3.447034,5.044134,-2.547044,-0.624165,3.432344,-0.742975,-5.797230,-6.398825,8.054723,-3.781032,5.371150,5.124917,-2.326906,-2.756740,6.184555,-8.169746,-8.201273,9.368432,-6.087722,5.056690,-8.434204,8.143985,-8.293585,0.645059,9.158300,-2.643588,-9.603875,-7.937113,-5.923278,-0.811166,7.800177,-9.677292,-0.365512,-8.169657,3.037283,-6.311950,-7.396646,-6.025276,2.310767,-8.943762,-1.585481,2.798330,-3.817433,8.697312,1.186377,-9.553888,-7.735941,-5.771278,5.181065,4.119131,-9.853599,-5.617748,-5.181656,6.429877,-1.172136,-9.864030,4.676698,1.723562,0.466935,-2.080474,3.205362,-0.182401,1.865588,-6.344368,5.784294,-4.892000,-7.045463,-2.393153,0.755888,-9.702367,-6.382561,-8.322301,4.314049,3.513168,-2.699059,6.653235,9.677614,-9.419832,-0.245802,7.636100,-9.182605,7.671371,-8.887953,9.365511,6.960296,4.520756,-2.499136,1.543508,9.853816,3.969025,-2.920586,3.176870,-3.139640,9.812309,9.068882,-0.233864,-5.589885,-4.675993,-1.407219,-7.662686,8.724579,1.782587,-8.717606,9.509125,9.841728,1.577570,1.549270,4.867477,-0.469111,-8.253593,1.684842,-5.282079,-8.372976,-5.249841,-0.357923,6.782193,-2.902076,-5.896817,5.460114,4.279172,-9.414767,0.592360,5.075326,8.981329,4.260553,3.607187,-3.558786,-4.412606,-2.429697,6.891108,6.027444,9.115308,1.951147,-0.842673,3.872688,-7.397308,1.091856,-5.702744,-7.623013,-1.676131,3.545498,0.373318,2.329192,8.145441,-0.362175,5.928976,9.381470,-6.118934,-6.688944,6.666550,-1.103709,0.296062,5.732273,-7.301930,7.270103,0.193404,1.735673,-6.298625,-4.689935,-9.502442,3.537783,9.028430,-8.028358,1.705448,-1.022469,9.235895,-8.595497,-0.390722,-5.858948,-0.068986,-8.869429,-0.871470,-7.608306,-8.458710,-7.916617,9.336764,-1.114508,-9.950330,-2.205194,5.798527,9.212511,3.834893,4.324325,2.841814,7.105196,6.528283,-7.944799,1.141432,6.584417,9.503627,-5.322498,4.313569,5.446096,-7.459765,7.308798,5.143532,-9.133934,5.765599,-7.936231,4.263227,-6.701552,6.695649,-1.281301,2.868930,6.575669,-4.819078,0.385009,-0.530670,9.737882,9.540403,9.300149,5.732155,9.525528,6.618720,-6.352698,2.321311,-8.050482,2.316630,1.021499,-0.899596,0.524081,6.099011,-5.090553,-4.468731,-3.242324,-7.784142,-1.405568,0.850025,-8.352070,7.940430,7.141490,7.455398,-8.623287,-0.665908,6.174057,-3.935321,6.067291,-3.104607,4.648787,-6.354851,-8.696942,0.434744,-5.886040,-1.425781,-7.783914,2.285484,8.376085,7.167831,7.693194,2.768625,-1.404429,-0.716637,2.906155,1.775645,7.083714,-7.710021,-0.307977,-3.499340,-8.942450,-1.095443,-9.349276,-1.485062,-4.424936,8.581407,-4.302882,2.891384,-8.077253,-1.937747,-5.923698,0.590019,6.314951,4.812931,8.623181,0.860151,-1.667330,-4.082335,4.780044,-1.353786,-7.449339,-3.632242,1.623945,6.767319,1.880395,9.370089,3.704956,6.813764,8.870223,1.604671,-1.954652,-9.959254,-9.048732,5.520751,-8.138035,9.542088,-2.745723,1.557012,2.064758,8.564059,-6.586018,-3.720591,1.258069,9.940816,-4.991696,-6.325848,1.992878,-5.386886,3.862764,7.054174,8.439315,7.525441,-8.152466,8.308739,9.610929,-8.368962,-3.261241,-9.790173,-2.148010,-5.218823,-4.838332,9.534894,3.634515,0.245304,-7.653219,-6.360296,5.672074,2.718649,-7.709801,-6.178363,6.305166,-8.187345,8.688846,-2.961178,-5.027850,8.854263,6.801190,-8.654010,-8.062465,0.750223,-6.307651,-9.228714,6.238043,-9.815086,5.110310,-0.378279,5.448275,-8.767260,8.489991,1.124580,0.999087,-9.456977,2.051526,7.529607,-5.479044,-1.014836,8.680627,-5.039373,-1.512993,-8.488137,4.271682,9.538507,8.461163,-3.345132,-7.253730,-5.849542,-4.158088,-7.232853,5.017405,5.330645,-9.604691,4.419460,-4.783197,5.447858,-1.448160,-0.523590,-2.788065,-6.754908,1.702521,-4.945076,-8.921415,0.525196,5.488397,7.877927,-8.775423,-9.252316,-6.003555,-9.150227,2.606879,-5.343518,6.304448,-3.925074,-1.065528,-6.766247,4.205552,9.988197,2.937183,-9.910234,-6.142329,-1.090493,-3.159673,3.418193,-4.911215,2.944790,1.895574,1.063744,7.717950,-0.005976,-8.896820,4.920501,3.750410,-1.451307,-4.779781,2.202269,-4.845914,4.596248,-1.228006,8.868040,-0.397460,2.913408,-6.040269,-7.808574,-1.792047,5.494757,4.832951,-9.294200,3.514851,-3.373956,0.092383,-5.050154,3.108958,-1.295351,0.225216,-6.220609,-7.696224,7.451345,-4.451192,-1.444766,8.363191,5.912318,1.773612,5.595418,-2.082241,-7.425456,-1.073503,7.957243,-6.713028,5.574869,-7.788562,4.111059,0.665169,0.628924,-4.675922,-0.808997,-5.820362,4.730056,6.053081,-5.894831,-3.095186,9.676516,-7.930975,-3.190842,-6.020838,-3.567489,1.571065,-4.567485,-9.517882,-6.236499,9.710631,-8.288846,-8.364096,1.569418,9.769601,-2.916396,-9.820341,-4.463418,-6.952621,2.638872,-0.825766,2.041732,0.852245,8.546472,-5.939097,4.041728,-6.580398,7.422200,7.995026,4.809916,-6.669480,-7.852668,1.686666,8.906883,1.627424,4.872150,-8.785918,0.041827,-7.421255,-6.830806,-3.495032,-1.447444,8.208973,1.969270,4.234773,0.464201,-7.421853,-4.792423,-1.523893,-9.114664,5.443967,-1.832231,-1.396598,2.915507,-2.069326,7.167972,2.104730,0.832075,3.417313,5.331695,2.241123,6.046914,-2.587970,-1.784944,8.800076,-1.197974,-2.774576,8.083274,-8.735252,5.299568,-6.437584,8.308924,-7.506169,-4.828495,-1.432564,-5.280909,1.496323,7.091234,-9.132865,-8.492570,-3.411563,-9.990257,7.087623,-7.779035,-6.979744,-3.453155,-7.867486,0.143444,6.013203,4.960064,1.680714,4.380975,9.766511,6.836131,-1.777063,2.256922,-5.864134,7.109947,3.248997,-7.904782,6.885242,-9.282580,-0.983542,5.060391,-9.582696,8.375712,-6.395810,-6.127858,-2.540996,4.134980,2.624101,4.787512,-0.619388,-4.965545,-9.569492,-1.641264,8.824085,-9.286580,-3.644267,7.721772,-0.703050,-9.051676,-2.666431,-2.060903,-0.717644,6.115294,-9.001836,-9.562976,-0.049938,2.787313,9.073449,-7.752670,-8.512528,-9.437703,-9.307609,6.467827,8.710541,-4.744075,-5.764670,-0.662419,-6.068608,8.058114,-1.357242,-4.312667,-3.364663,-4.037600,5.290575,-5.537642,4.508798,-6.089183,5.190165,-8.962660,1.948560,-2.244719,0.907698,1.738687,-1.085849,-3.786553,-5.193893,7.303695,-5.423288,-3.347452,4.617230,-8.608327,5.617674,-8.778782,-9.112628,6.012880,0.869586,-9.082272,-2.973260,6.850003,-6.626138,-3.713099,-9.565799,2.803969,5.466992,-7.152481,-5.176933,4.533965,3.478290,-1.126451,-6.404681,9.104504,6.880133,-1.089168,5.593240,7.585395,5.202280,-2.129218,6.441546,9.646468,3.314969,4.261456,-8.065597,-5.511873,6.211302,5.767629,-0.510245,9.684046,-7.257720,-5.325376,4.015362,4.496497,9.939523,-4.090180,4.421387,5.911205,1.773332,7.618192,7.957391,0.621807,-3.607058,-5.965321,-6.201237,0.452153,8.846890,-7.241501,5.613718,8.175320,-4.843044,2.770927,3.581605,-8.922730,-8.873058,-2.878176,5.043415,-3.323764,5.348522,5.858768,-6.249933,-0.082317,-4.349487,9.773926,6.039623,-5.048632,-1.308201,3.257844,-1.701523,5.384068,0.346892,-3.792139,6.692995,2.509050,6.654140,-2.606828,0.347549,4.245610,-6.073605,0.206128,3.415816,6.900975,5.884839,-4.134290,-8.582696,-9.339697,1.933549,4.032483,9.381847,1.428368,3.072845,9.245888,4.253863,-6.079886,0.811520,5.188035,9.719006,-5.808079,6.760870,-6.896847,-3.136000,-4.939534,4.115417,9.267163,-7.627316,1.434009,-9.561558,-8.466048,4.700231,9.112562,-2.100042,7.780595,9.811257,-1.928255,-4.015656,5.704184,-8.504599,3.273904,5.246914,-8.611937,5.026195,3.231319,-9.302455,7.876076,-2.190401,-8.646893,7.069187,-6.455798,-0.602424,-4.978048,4.263972,2.793846,8.186758,9.829192,2.126569,-4.628725,5.052782,8.035513,0.551719,1.794902,8.479693,-3.735457],[7.160687,-3.023596,5.854478,8.017429,-0.406334,-7.633014,9.221023,-6.899638,-5.614265,6.060273,-9.781580,1.188109,-4.014410,7.158800,7.505550,-5.548858,-4.861824,-2.044766,0.064657,-9.682580,-1.336694,4.263757,-3.463555,8.583631,-1.989497,-0.562164,3.745615,-4.074019,-9.372759,5.635393,0.970845,-5.562283,-5.608153,-0.160672,-1.474248,8.642919,2.843483,-1.373997,-6.777406,-8.206536,1.797435,5.037619,1.938584,-1.599586,4.529717,8.595819,9.909338,-3.017979,-2.100850,-7.932295,5.704600,7.874197,-6.445243,-0.275204,8.386365,-0.287836,5.273583,0.780528,2.896112,-8.367253,-8.575348,-5.621235,-8.287857,9.618247,4.336872,8.140532,-4.001007,3.227613,4.851486,5.256082,4.021388,2.695453,-5.813189,2.057197,-5.725875,-6.587896,0.928190,-3.298460,-5.244749,-2.243107,2.350403,-4.166912,-1.675258,7.656255,-4.497748,8.721598,-1.179305,-2.687616,0.640755,-6.318457,-1.013766,-2.486085,5.826546,3.206481,1.577544,1.505738,5.767561,-7.618105,-5.162818,4.817694,-8.276616,-4.975987,8.574427,9.051938,-0.788594,-0.579012,2.884143,-7.861193,-8.255724,-1.308087,9.229016,-4.754044,1.644874,-1.871482,-6.960127,-7.073593,-8.538373,4.711604,-9.897087,7.801791,8.676782,1.282032,-9.493357,9.334729,3.806551,-2.093454,-7.287065,1.146853,7.280879,1.153841,-1.338378,4.379337,-0.471939,-3.576481,6.677558,6.079175,-8.685589,2.186581,-3.543688,1.448715,-1.597143,-2.344988,-9.554450,5.161465,3.885026,-6.895582,-0.987270,4.696956,-9.413716,6.724646,5.847062,-8.928859,7.749369,-6.285144,3.495039,4.941533,-1.246700,-4.671200,-3.568271,-9.445700,-4.137178,6.300272,-1.504293,1.255651,-2.502013,1.312310,4.476658,1.082879,3.104187,-6.425130,6.837848,7.999741,7.234445,3.364296,2.975885,8.834750,-7.371526,-4.408289,2.095648,3.812272,5.498759,5.445654,1.419808,7.387521,8.538788,8.456982,-4.339915,-0.550257,-8.424624,3.252642,7.891363,7.005697,0.382064,4.460550,7.559321,-6.420451,3.816808,2.238022,1.276295,9.029673,-6.065849,9.101264,1.516611,-5.927504,7.049921,1.947057,-2.124418,-0.747223,9.722732,3.434637,9.889203,3.610289,6.176246,7.648581,6.867363,1.880482,4.429070,-7.088826,-2.143631,-6.923246,-8.664639,7.562251,-2.167925,-5.072181,9.556360,-0.388796,-3.605831,8.932604,-7.959889,-8.324642,4.571809,5.144163,-6.424645,-4.304547,-2.358484,4.385574,-5.253197,1.428185,-9.277263,-4.902581,0.406113,-2.280261,-3.885670,-8.768371,-4.652120,1.640271,-2.988278,-7.971273,-8.391489,-1.832459,4.727175,-2.411850,-4.160146,-5.522937,1.312564,-5.729485,4.927717,-2.839020,-6.740368,-3.911071,6.278710,-0.525709,-6.469643,1.404685,2.596895,4.503224,3.926952,6.344325,-0.732994,-3.734102,-8.926905,-7.590850,-2.777432,-5.030881,0.760459,4.702173,-4.819374,6.838015,7.290951,1.443684,-2.638163,7.820113,-4.256149,9.635048,0.070103,8.238567,-5.011075,4.021523,-2.118489,6.109043,5.986771,0.538892,-7.607265,-5.025532,3.535284,2.092710,6.311286,2.995074,7.852282,-9.119242,-4.740853,-4.207354,8.741093,7.953193,9.481486,-6.183847,-3.310802,-8.388222,-7.972307,-4.982026,9.918365,4.503147,-6.763322,-3.373998,5.705637,-6.907104,-2.358207,-0.507390,3.892883,-4.290580,-6.975092,7.574886,-4.207976,9.998922,-1.841037,-0.945073,2.081426,-7.073341,-7.193941,7.395783,0.928852,6.808778,7.262446,-0.141985,-5.857840,0.362657,5.858506,6.223278,8.932958,-1.549412,-7.431435,2.400854,-5.357770,8.093040,-5.306537,-9.144531,5.839987,-0.960412,7.161183,0.769789,4.133612,-1.269062,7.469156,-8.052412,-2.469977,-5.284126,5.313667,5.711167,-2.048709,-7.703721,1.143767,-1.472547,-5.209133,3.030480,8.910871,0.783529,-2.399648,7.432552,4.149966,-8.362071,-0.208872,-8.745572,-9.489660,4.837917,3.691744,8.708532,-3.145544,6.795017,-9.744864,-1.984186,4.394647,-5.526367,3.823513,4.396842,7.164775,4.788720,-5.070656,7.760060,8.997370,9.261482,-9.952508,2.227920,8.308435,-6.111212,-8.757772,2.364208,-0.960147,8.860113,-1.255775,7.781614,-3.495384,8.472682,-6.043100,5.338295,-2.375246,-9.096446,1.168651,6.056259,-7.665256,0.145706,7.342210,-3.526218,-9.366477,2.351633,-3.707537,0.209374,5.343616,-5.797051,6.828037,1.524313,-6.908872,3.928120,-9.900492,-4.563593,-4.514978,9.610892,8.910877,5.561429,2.488309,-8.395254,2.952073,-5.038079,-1.646106,5.604696,-3.783305,9.771068,-6.319316,-7.073392,-6.246396,-5.339808,-8.895770,-9.017902,1.145064,-3.044874,-7.480013,4.448928,-8.413273,2.310022,-0.776508,-7.491463,8.157569,2.016889,-1.109276,-5.709635,1.973280,6.820775,-7.612369,5.679069,-6.241166,-8.094008,-9.580523,-1.383362,6.377424,2.417442,-7.499511,-7.753483,-5.481459,-1.304638,-0.872201,1.244179,0.039916,0.352998,-9.389958,2.556649,-6.608184,9.348064,4.579027,8.917812,3.051760,-2.611610,3.739912,-6.459243,3.698258,-5.338687,6.812032,3.347285,4.082786,3.289080,7.176407,-4.739698,-5.652987,-5.825216,8.590107,0.871927,-5.865408,1.449590,-4.887869,8.180645,-8.006678,3.313515,9.238188,-5.520246,-0.341762,-5.264775,-0.179916,0.607745,8.907630,5.678833,-5.481405,4.566634,-5.205696,-1.601503,-6.526930,-9.462045,8.109692,8.600573,-4.433489,6.064275,0.756671,-8.082975,-8.642491,-3.255138,4.813741,6.924163,-0.118952,6.362653,9.070296,-9.005171,1.725262,-0.343223,-4.130244,-6.591611,5.313818,1.650177,2.671126,-2.595867,-7.780087,8.600991,-1.413604,4.248059,-6.581873,-4.082893,-5.268643,5.464421,1.400338,-6.434194,0.176574,4.935762,7.541886,6.214401,-6.699279,-8.023292,7.788870,1.921516,-1.729173,-8.003606,4.957991,-2.356827,7.288081,3.891131,3.432993,7.408015,-5.166608,0.733700,6.183557,0.202536,1.282757,-0.385659,1.549830,-8.748409,-0.928700,-4.841188,4.296316,6.606183,1.888023,-0.803502,8.008747,1.934810,-7.129481,6.404181,-2.487396,6.854272,-4.646005,-1.900841,6.467226,-9.663022,8.700101,7.852144,1.200318,-6.117655,-1.947872,-4.212623,-2.836787,8.832467,-1.779196,-3.850669,0.091349,-2.734653,-3.326315,-7.388249,-0.373292,5.516147,4.303793,-0.527043,-5.433407,6.614886,1.078252,-8.763640,-7.458280,-8.750118,-1.665495,8.751340,1.799793,9.266696,-4.004005,1.512205,-2.157525,-0.715801,-0.805061,9.390748,9.467486,8.072528,-5.531216,-2.131821,1.536602,1.064476,-2.201113,-6.643629,0.648925,4.931583,6.586990,-2.350835,9.926262,9.903383,8.367777,-5.197010,-2.998832,-7.976258,1.487424,6.722763,3.792599,-7.911969,6.097839,3.435174,0.071758,-6.179566,-8.726570,-1.363271,9.699838,0.437041,-5.907567,-8.941989,0.458826,7.145465,8.202853,6.937426,-1.760943,-2.507381,-8.372485,-3.981571,-9.229134,-9.408057,6.130081,6.006521,0.954670,4.268720,-9.790107,-0.748521,-8.489484,3.118029,-0.992362,8.475327,-7.464695,-8.888448,8.830025,-1.275376,9.001544,-2.831126,-6.833692,0.237295,-6.180202,0.154148,-4.044255,-4.874139,-2.801618,4.374089,8.638106,8.868260,-0.781463,-9.543397,-9.845041,-6.125260,-9.118259,-9.013484,-3.717368,-6.866664,-5.106621,6.696841,4.207029,-5.583086,4.070032,-0.202824,-1.362775,0.692586,3.214907,-3.711802,-6.598747,1.406946,-8.223830,7.083245,7.933533,0.249925,-5.418633,8.809881,0.680407,9.916483,8.627906,7.209479,7.965630,-3.149495,-1.982254,-4.234196,0.511177,2.361005,3.491496,-8.639101,-6.130551,-9.070426,8.452326,-1.237168,9.764179,9.511646,1.110224,-2.655990,4.317314,1.255314,-6.568780,8.673249,5.794664,9.340217,9.049231,-8.275970,4.801058,-2.500595,-4.518884,3.375678,-4.418879,-0.858024,2.819991,-9.255255,8.133334,9.539117,6.713010,-6.545258,2.853973,7.012671,7.849518,2.781952,1.474928,6.826227,-6.397356,4.288049,-0.796961,0.179959,2.118547,-8.663827,6.646988,-0.484198,-0.429087,-1.151179,-9.998661,2.128805,2.022098,-0.297317,-3.666396,-5.046931,5.566695,-2.075274,3.800180,1.439290,2.403760,8.092960,8.925748,-4.621545,-8.668644,-8.233324,-0.880929,6.787506,-7.877014,-1.703680,2.659490,9.640025,5.953082,-2.875720,1.564839,0.003738,-0.426872,-8.819683,-5.243995,3.065620,7.264199,1.824680,1.767590,3.391247,-4.055541,2.306734,-6.836459,-0.750332,-1.952163,-4.473913,5.145120,-7.407988,-5.586907,8.310209,2.676169,-8.158388,-8.600894,9.554560,-3.385312,2.131992,-4.402664,-9.999607,-1.422083,-1.697600,-7.946220,-2.218651,-3.084774,4.973870,1.711225,6.376417,9.492290,0.683409,4.889657,-8.319055,2.153667,3.264886,-9.519190,-5.728341,-7.280246,1.284861]], dtype = "float64")#candidate|1907|(2, 840)|const|float64
call_1906 = relay.TupleGetItem(func_1598_call(relay.reshape(const_1907.astype('float64'), [7, 15, 16])), 0)
call_1908 = relay.TupleGetItem(func_1600_call(relay.reshape(const_1907.astype('float64'), [7, 15, 16])), 0)
func_541_call = mod.get_global_var('func_541')
func_544_call = mutated_mod.get_global_var('func_544')
const_1918 = relay.const([1,-7,3,2,3,-10,-2,-8,1,5,7,-9,-6,5,-10,-8,-8,-3,-1,6,9,-6,7,7,-6,-5,6,-1,-5,-10,3,-4,-3,4,6,-1,-6,-5,10,10,6,-2,1,3,-2,-1,-3,5,-3,-3,9,-3,10,7,-4,8,2,10,-5,-1,10,-9,-8,8,-3,2,4,6,-7,-5,-10,9,-3,7,-6,5,10,-6,10,4,6,5,3,-5,6,1,3,8,-1,-5,3,10,6,4,1,-9,-3,-8,-8,9,2,-10,10,-2,4], dtype = "int16")#candidate|1918|(105,)|const|int16
call_1917 = func_541_call(relay.reshape(const_1918.astype('int16'), [3, 5, 7]))
call_1919 = func_541_call(relay.reshape(const_1918.astype('int16'), [3, 5, 7]))
uop_1932 = relay.sqrt(const_1907.astype('float32')) # shape=(2, 840)
const_1943 = relay.const([[1.666294,0.130417,-3.368465,-9.435177,7.550643,-6.842906,-5.665512,-6.523846,6.578395,-5.770789,-4.137327,-5.025438,-2.831307,-3.878685,8.494228,5.262736,3.713965,1.749949,7.015776,-6.115946,-5.559240,7.009594,3.420998,2.690651,9.587413,-7.373838,7.342682,-2.999608,2.195032,-0.458025,-7.695003,-7.310846,-7.330525,6.065712,0.248709,-3.539240,-2.036445,3.208660,9.963959,7.309208,-8.220114,-7.665198,-7.863367,9.081111,3.199559,-3.667061,3.004115,-7.269031,-4.628355,-3.630402,6.193399,0.586620,-7.224224,-2.568076,-0.427913,-1.983147,2.759768,-2.737465,8.523354,6.908699,4.854851,2.480514,-3.461638,-5.226177,9.227708,5.384500,2.470250,9.825710,5.763602,0.251408,0.729035,-8.059958,-4.511357,-1.478275,6.653337,6.993167,-8.494200,4.457407,-9.783705,5.727447,-9.318611,-0.550193,-2.250212,-5.808403,1.039618,3.188346,7.760158,2.369913,-6.209709,-2.210160,-2.762469,-9.693453,-0.008556,3.578565,5.799672,-0.163059,4.946434,6.958935,-8.782860,7.038662,9.800446,-4.114867,9.421501,-8.760316,-3.051216,2.497704,-4.421138,4.768592,9.662566,4.448722,7.568161,3.503293,3.313189,-3.292475,-2.874968,5.284040,-3.674888,-3.815768,-6.231416,4.756255,7.250819,5.126619,-1.609611,-8.122660,6.534540,-2.875545,-2.263012,-1.313561,-4.550113,9.678426,-0.045455,-4.508716,1.104762,-4.711860,-7.223382,-1.806332,-6.565581,0.173349,-7.590768,2.627468,-2.380275,-1.846481,4.858402,-6.076576,-6.006212,-2.977309,-4.595530,6.911146,5.216182,5.004832,-6.704762,-2.542614,8.572018,1.613154,5.442561,-6.207217,2.885171,-4.867860,4.003448,-2.358775,6.772739,-7.348548,-3.485124,3.416489,-3.031089,6.649838,-8.326556,9.612923,2.729544,1.283564,5.858210,-0.336142,-7.192019,6.647677,4.847399,5.003296,-6.478945,2.174601,-1.010199,8.676873,6.938602,7.512298,-2.987738,-0.545160,6.072281,-5.634957,9.686493,0.041516,-9.344231,2.247776,3.618858,-1.410055,-2.170935,-8.363192,-6.045488,6.406567,-7.249529,1.785356,-9.336573,-7.664057,7.085126,-8.814522,-4.731201,-0.316932,5.268159,-9.221855,0.108086,-2.122018,-2.452045,-7.903253,-4.058151,8.850499,-7.819327,3.149757,-6.799242,-2.804626,6.115679,-8.920500,8.934765,-0.882067,-2.390894,7.990581,2.516100,4.092760,-4.525968,-0.802090,-1.071797,8.122114,-6.725122,8.578257,-5.878720,-4.716884,-0.184359,6.372485,4.376645,-3.889552,8.994648,0.447317,-6.319808,-3.737696,-9.573648,1.415513,-6.658221,4.734746,-7.196349,3.846278,6.098312,-3.265388,-4.949793,5.508873,0.439524,2.167801,2.413541,4.228230,-8.334388,-7.192957,-7.289728,0.802263,-0.903624,5.169934,5.131207,3.274084,-6.115817,-3.013812,-1.218570,-3.966940,-0.291172,-9.282403,9.045203,2.221616,0.736404,-1.304478,0.552157,5.719194,6.219426,-6.714150,6.739755,9.050449,2.419529,0.054647,9.676442,6.024915,7.358677,3.008193,7.605623,-6.763303,-4.012828,-9.651535,-4.155295,5.572670,-1.162044,-2.494980,5.321255,8.597376,-8.443673,-5.362654,0.178485,0.156069,5.559231,3.817243,3.759950,-8.812400,-0.025431,5.542310,-0.201323,-2.583347,8.992915,-4.155733,-3.994147,4.115112,-4.451063,-4.287913,-2.891216,5.965450,-4.433436,-0.302087,-3.502302,7.696693,-1.488327,-9.305888,9.823395,0.578662,3.438905,-5.261320,-0.630094,-9.229992,4.114961,-0.241444,-9.483128,-5.426308,-1.152345,-2.932984,4.981900,8.026688,1.644237,-2.380956,1.005936,6.910827,5.158742,-8.677200,9.259923,0.066439,-1.458094,-2.250798,8.793847,8.027245,-2.188617,-7.788942,-3.892446,4.106522,0.137612,-5.090164,8.115926,-9.545124,4.652761,-3.718275,0.345120,-3.131081,6.716569,1.603625,3.603457,-1.572417,-3.041656,6.077895,6.333694,-0.063019,-6.136405,8.408259,-3.425369,-8.217365,-4.464361,6.234769,-3.211526,8.263230,-6.636150,-5.113886,-4.351866,3.380440,-5.885864,7.780324,5.154896,-7.072756,-9.441651,-3.611944,7.121068,1.388212,0.271879,-6.934991,-0.208308,-3.566643,-5.029091,-1.022551,8.089408,7.843791,-1.844733,5.055341,7.060818,6.823494,5.259910,-2.190607,-6.692164,6.352379,-6.491091,-7.745687,5.752204,-1.670827,0.686215,-1.410399,-5.824920,-8.297433,-9.262460,9.299655,-3.751033,-5.777384,-2.465966,-2.092961,-7.791240,-7.896794,4.062521,7.436272,5.907379,-1.502134,-7.055944,-9.690420,9.740093,2.592152,-2.849581,6.956553,8.803316,1.012423,-7.397500,-1.408487,5.683403,-3.419236,3.984919,4.578266,9.648760,-3.182409,2.851326,-5.109666,3.276514,-7.133571,-3.030065,-1.703184,6.542668,8.143729,-6.327664,-2.385535,8.730775,-9.616320,-9.709832,6.382783,-1.544319,7.705663,-6.199717,-4.552976,7.974300,-0.764976,-6.293405,9.470097,-3.600432,8.214364,9.876475,-7.674175,-3.958229,0.877418,-4.259297,-4.483526,-5.144690,-4.953240,-4.697413,4.889279,-5.038975,6.229232,-0.387168,-7.952084,-1.880212,2.554837,-5.171309,-4.146850,1.283880,5.413793,-4.803775,-8.767489,-5.885979,-6.883944,0.742534,-3.662771,0.339207,-7.046569,4.280862,-1.411106,-0.731798,3.173458,5.935095,-0.089273,1.873924,-2.574800,5.049344,5.607337,-6.880720,-8.160712,0.449820,7.303063,3.112699,-6.550642,-2.324253,-3.112517,2.313393,5.956670,2.223860,4.327485,-7.018025,-3.184924,-2.190701,8.011813,0.268895,-8.755325,-6.129744,1.861232,0.314820,-1.845807,-0.177088,-6.529035,-8.435255,-9.498771,4.501539,5.113705,-9.152288,-7.291269,8.018392,6.009006,7.943630,2.569969,6.356873,3.385207,-3.806854,-1.350885,-0.826201,-2.784800,6.365941,-8.535108,-3.733647,-3.120017,-6.961954,0.506354,-0.703466,-3.908139,-5.766920,2.647753,4.512945,-4.934404,6.726995,-3.182592,-9.078396,-4.404163,-6.000912,-4.793756,-0.192384,8.281687,3.801164,-2.001936,9.852918,-8.010626,-6.046626,2.582112,-4.946615,-1.143154,-6.717259,-0.013193,2.910353,-3.240202,3.615227,5.966677,8.184956,-7.105742,8.178194,-2.973761,-2.882029,5.501843,6.458092,-3.020858,-9.972456,8.586557,4.322926,7.955998,-5.549444,-1.512165,3.358569,-6.827327,-1.518109,4.366055,7.557320,-1.808985,-3.794909,6.430267,-9.291852,-5.307494,-6.349391,-0.511188,0.816447,-1.622426,3.055653,5.586644,-3.714021,-0.156073,6.785316,3.543335,9.679174,-0.760242,8.434979,6.097906,8.425753,-7.568070,7.340344,3.328699,2.845830,4.001469,0.866816,1.092089,-4.868186,-6.471510,9.505908,-9.827379,-7.488246,0.793019,-2.344220,8.661928,-0.927175,6.673890,-3.762709,-5.984431,3.954127,4.807238,-7.069889,-3.467673,-1.523806,-7.594887,-5.422214,-7.174467,6.565076,-5.543253,1.140694,3.838570,-5.793818,2.157156,-8.410791,-7.565179,4.636741,-1.877443,-4.664597,-9.851409,5.927495,-8.642415,-5.969018,-9.093230,-8.930196,8.704184,2.810551,8.391874,-9.653652,-8.166362,-6.033590,-7.273975,-7.997938,-0.878348,3.981178,2.460013,0.254125,4.740991,7.885483,-6.128758,-5.490879,5.234283,-1.503556,3.620172,7.439599,5.371610,-4.815196,-0.828540,-9.387746,2.598661,7.763183,1.169139,9.832638,-6.516257,-1.695837,-0.117749,5.250114,-2.976195,2.167179,-3.012247,-7.671258,-3.938644,6.049071,8.172585,3.538411,0.620298,-4.965114,-8.877205,1.050595,-1.710788,1.805758,1.511200,-3.199390,-2.113792,0.027106,-0.201947,5.661500,7.518830,0.968510,-7.817374,0.604699,-7.713757,-3.997302,5.346756,0.057703,-4.497741,7.385046,0.601091,7.692605,6.608883,-2.710644,-7.208347,-8.837372,-5.239790,4.628182,2.706921,6.439594,-7.281851,-7.408494,8.513699,2.733538,-9.855658,1.896779,-1.357053,1.890638,-5.650516,2.481348,1.658692,-5.250897,-8.215208,4.225187,-7.491813,7.163723,-2.523369,1.866478,4.518499,4.093715,9.151074,-8.950566,-1.003270,6.900642,9.063143,4.612663,-3.456026,1.761093,5.091474,-4.743776,0.005120,-5.436007,7.799386,3.495362,-8.663675,-9.047153,-9.624664,1.901564,0.189951,3.998470,-2.739287,0.735193,-3.233803,3.376322,2.650577,1.337879,8.544325,0.324253,7.953570,8.077100,1.998802,7.081270,-0.046630,-6.664296,0.445261,7.440808,3.330663,1.577298,3.851614,5.032949,-1.271235,8.834566,4.069184,8.898960,9.069737,-1.645457,-8.260645,-2.352655,1.450539,-4.161678,-7.177662,-1.758274,9.469435,2.177408,-7.929805,4.894782,-3.723807,-6.219926,8.268100,-9.354733,-5.612016,-7.743654,1.530208,-7.195025,3.398204,9.466651,-6.461380,9.545497,5.019657,-0.867502,-1.610237,4.237354,-0.999536,-7.985955,7.345099,-7.772863,8.037457,-9.481432,-5.581629,9.821215,-9.020298,7.453033,-9.807081,-3.015803,-2.378719,0.163120,-9.299103,1.866230,-7.199465,8.989241,-1.852717],[-7.243194,-8.499579,-8.849250,9.271224,-6.839087,3.586980,-5.200404,6.406507,3.926374,2.578034,-6.897947,8.137773,-9.665743,2.474151,9.416015,8.510812,9.144919,6.678513,-2.524135,-0.290042,-6.266563,7.254996,8.041099,2.408603,-6.711231,-7.925872,-0.569227,-3.119474,8.705274,-3.332386,4.523252,-9.672688,2.196609,0.580933,-0.123819,1.631903,4.795211,7.441167,1.752561,7.928021,8.600682,-8.468285,-2.154832,-1.685393,-3.566730,-9.839453,6.568008,-9.709572,-0.924123,-3.615359,9.292957,4.162260,-2.931837,-6.890898,7.762914,0.944483,4.464532,2.854955,-1.821950,2.359972,-7.100811,0.617089,2.978179,6.555803,3.537607,-6.299628,8.987328,9.036095,8.843195,5.449266,8.233607,1.860536,-1.345608,-9.503406,2.751119,4.126356,-2.378108,4.133325,-8.466207,3.589461,-5.256913,1.569320,-2.748035,-4.216568,-7.981956,-7.477712,-8.327313,-6.750960,-1.826140,-0.862710,-3.521001,-5.595935,-6.798534,-3.903359,-5.323719,-4.494260,-0.017831,-2.220930,-2.380051,-4.937001,-3.755563,-3.815040,-7.863032,4.009418,-7.012499,-3.522758,9.658882,0.874205,-9.422316,-7.469910,2.548288,-7.837524,-3.692202,-5.183701,9.098358,2.000349,-1.058128,-7.422208,-7.566757,0.375693,8.822967,-4.705099,-2.268216,-7.641926,0.493197,0.602318,6.457618,-0.579945,-6.964020,-7.382927,8.106626,0.231755,-5.736025,6.255794,1.732597,1.503248,-8.949986,8.114354,4.590230,-4.508156,1.195591,7.568366,2.338105,-1.408120,7.486882,0.084011,6.178857,-2.404939,-6.641734,-2.189099,-5.578181,8.604494,7.181531,-6.445898,-8.705699,-6.691045,-5.679234,8.186856,5.545573,-1.395917,-9.486020,-5.891354,-9.720166,1.796537,-9.024861,6.407220,4.147228,5.437888,2.133240,8.693512,-1.624397,2.870860,-6.001226,-3.684183,7.640869,-0.791989,-4.005637,8.526725,9.587167,-2.735752,-4.239112,-7.300950,-9.007921,6.408239,1.675275,4.200317,-2.325943,4.550642,6.920377,-4.754567,-6.433729,9.669738,5.765535,7.823303,0.713909,-6.059353,5.943184,-5.146640,5.303327,-5.248690,-9.152733,-9.305363,-6.114991,5.351056,-6.791609,-1.780933,-1.998545,8.290324,-6.866235,-1.212554,-2.553189,-1.217161,-1.261620,0.739175,-4.787315,-9.371434,-5.993571,2.603085,-3.815954,-4.012095,-4.017390,8.178895,-6.196814,5.395174,-9.844782,5.894461,-8.270966,-4.109554,-5.207946,-2.139410,7.635555,0.412848,-0.792656,2.580538,-5.889993,8.351514,-5.505751,6.591043,3.732043,-3.777214,2.228996,4.790786,7.764072,-5.784571,1.473974,-4.832837,8.548336,-1.903984,-0.706946,8.099396,-2.747394,3.144975,0.890648,7.023211,8.281480,-6.619735,5.010943,9.893046,-6.722341,-4.129894,-4.293336,-9.005262,4.739767,5.643630,-6.727296,-4.562497,9.583293,-4.182279,-4.618650,-5.032372,3.833387,-6.862104,-0.810566,7.451859,2.618026,-9.647745,-5.124638,-1.004597,-8.502859,8.258336,-2.100486,0.979698,3.535750,-0.063865,6.053167,-4.006007,-8.459009,-9.617816,-6.107643,6.666171,9.051187,9.555682,-3.852233,1.420569,-1.942850,-5.606333,-6.243811,-1.469277,6.000689,-1.766172,1.507620,4.568036,9.551221,-8.201165,5.107620,-4.356322,-3.591950,-0.085710,1.232159,0.928464,-0.138804,-2.194968,9.792163,-5.444068,2.180867,1.449285,2.873390,-8.107461,-5.421614,-3.537151,-6.604234,7.019154,3.708872,-7.338548,9.029269,-7.771479,4.361028,4.426697,8.726068,1.718371,-4.067245,-4.926024,2.093033,-1.909495,9.872121,5.437470,4.603314,-0.223280,-2.435781,2.075721,-9.533315,0.550518,-9.574739,-0.590702,-7.624557,1.339618,7.615441,5.761231,-6.637284,-0.136727,-1.198320,-0.378471,-0.139545,-4.457695,4.120857,4.390507,9.560370,3.907186,2.675752,-1.166116,8.257116,-3.133471,2.876433,9.489546,5.093600,5.886893,9.170731,-1.225388,1.981957,-9.582749,-8.443662,-6.056457,-3.002780,-7.269364,-6.936393,9.314161,-4.422453,-3.322227,8.144166,2.480464,8.852123,4.826211,-1.896268,7.389259,-1.397249,-3.336371,3.760592,6.704412,-8.339638,2.262767,-1.311083,-8.041805,-4.453073,-5.122197,-3.292527,-6.452724,-8.569111,-8.432311,8.677350,-8.508207,1.856990,3.367566,-9.348795,-1.072380,-1.738828,2.543972,9.278437,5.610364,-9.017366,9.458599,1.219226,-7.409062,7.954929,9.089677,-6.178481,6.707553,-4.379325,-7.733444,6.237693,-7.095353,-6.630488,-5.337144,2.477962,1.291841,3.095108,7.807048,9.635306,-0.783108,-2.676218,9.515849,-1.393339,8.580295,7.157363,4.060464,-1.093919,-0.819058,2.640248,-7.813028,-6.700151,-1.005541,8.873071,6.928262,0.020185,3.797809,0.289624,7.945261,4.714007,-4.580292,-7.293621,3.523841,4.606041,-3.489034,-1.328903,-6.857225,-1.563064,-1.166076,-5.884765,-6.183523,-2.947383,9.165200,6.811163,1.176030,6.579410,0.167563,1.869664,8.462400,5.500337,8.302190,-5.833806,-2.751292,-7.579904,-4.528804,-1.693610,-6.580561,3.830588,-4.649882,-8.317528,5.763543,-0.209884,-4.749980,-8.170571,-8.569922,2.390726,6.334951,1.245794,-9.111371,6.337424,-5.784138,-7.531269,-3.692158,1.210650,-9.226794,-2.548863,2.295921,-3.107000,-4.606369,1.920917,-4.926350,-1.557097,2.011186,-4.598560,5.439313,-5.770966,5.993793,-5.803238,-1.923190,0.441561,-1.632088,7.771261,-6.967042,7.985512,-5.880845,8.767229,6.317164,-5.999906,-0.037457,-2.136287,-2.144288,6.057780,3.246407,4.758107,4.913378,-2.506035,-1.101872,-7.369976,-8.518113,8.414413,-0.980529,5.189320,-0.310227,-1.661569,-0.183735,-4.861144,-1.069623,3.640740,-5.388305,6.445699,6.211766,0.618802,9.814597,-5.557454,5.806986,-1.701824,-4.608005,7.253880,-9.133012,6.197469,-4.785984,5.534335,-7.365849,9.709439,-3.807699,-0.761877,-9.229832,2.911959,1.968077,8.422975,-9.403513,3.715470,-8.208316,3.478743,-4.214437,4.982088,8.003089,1.561354,3.845334,-4.540313,-8.643062,8.305976,-4.203566,-5.517146,-7.142441,-2.195895,-7.215415,-0.645721,-3.820228,5.759852,-6.578117,4.302707,0.922511,8.951358,7.157069,-0.004274,1.134923,8.549104,5.095582,4.802596,5.021482,-0.368019,2.219940,-9.684882,-2.818341,5.886997,9.973351,-7.271058,5.003783,3.790050,9.085908,-9.824635,-2.858576,-9.962309,-3.496134,3.012664,1.328332,7.031708,-9.979289,-9.113323,6.829597,-4.312768,3.493624,6.106266,-2.333538,9.376155,9.666607,-6.736922,9.833516,2.568132,8.516664,-5.303823,-7.874473,6.120195,7.111089,9.043839,5.303277,0.814878,2.597309,-1.439704,-4.368615,2.851290,7.628264,0.426125,5.496323,-2.051093,4.075625,6.325630,-9.414721,3.908182,4.770911,-2.126044,-3.787664,8.003388,3.904418,8.929409,4.885182,0.130197,3.549716,-2.713239,7.148556,8.858297,7.887284,-2.348712,8.657601,5.954976,-3.567028,-4.605143,-1.632953,-9.964661,2.858516,5.503681,1.291920,4.541006,6.964801,1.585321,9.218178,9.696133,1.216918,-5.270964,3.512494,7.876553,-9.899833,-8.462146,9.746845,-1.574373,5.118148,-6.201875,-0.042352,0.693688,3.212805,-5.317232,3.327342,1.530716,7.748507,5.287646,4.554642,-3.304333,-1.804464,-2.557702,-4.180971,-1.997748,-7.712354,-8.076750,2.175476,-1.926338,-1.074329,5.476543,5.679929,-9.845478,-8.986832,3.745808,3.980532,5.789531,9.524333,9.535084,-5.120898,4.021799,-6.444634,9.080089,0.170538,-8.658485,-9.322598,3.862751,-3.408397,-1.700823,2.425592,9.817039,-4.058234,1.671477,-9.818912,4.532236,-4.257136,-9.872050,-2.087006,-0.795287,2.395564,1.176681,-5.798103,1.292035,-0.989781,-3.160818,-6.906415,-7.957895,-3.388875,-1.966051,1.021411,-9.152190,-0.117956,-8.232870,-8.392027,-5.903577,-0.584229,-6.636147,-2.143737,7.276040,5.720767,-1.388555,1.621213,-1.669929,-8.082059,5.790627,-8.861226,-9.551207,-7.545668,3.820246,5.546168,-5.737758,2.028119,9.506002,4.095008,5.761044,-9.655350,-6.761918,-5.025067,3.478219,4.648575,-3.677132,-5.974539,-7.976265,-6.164073,-7.902285,7.298376,9.148631,7.978445,-1.375458,9.771623,7.576011,2.242876,-2.673311,6.437973,2.913413,-7.061004,-7.150478,-4.561082,5.910987,9.964687,-7.145879,-5.212478,8.708108,-4.018776,-6.329670,3.977466,7.262038,0.145061,2.580351,-9.801333,7.766083,-7.474732,3.521069,-6.927428,2.022462,-5.780487,-6.327762,8.691326,-8.255010,4.403776,-1.821649,9.206327,-5.654434,1.685784,1.543651,-2.057810,-9.671067,-6.168978,9.870417,-2.404775,-1.439868,-5.629901,1.043624,1.762198,-5.736475,2.781568,0.811051,-8.530017,5.610117,1.027350,4.384512,-7.729672,4.021541,-5.350176,3.157348,5.749422,0.590063,8.932694,-7.977574,6.632514,8.219973,2.469925,1.436538,-9.126224,5.172939,1.950086]], dtype = "float32")#candidate|1943|(2, 840)|const|float32
bop_1944 = relay.left_shift(uop_1932.astype('uint64'), relay.reshape(const_1943.astype('uint64'), relay.shape_of(uop_1932))) # shape=(2, 840)
bop_1957 = relay.add(bop_1944.astype('uint32'), relay.reshape(const_1907.astype('uint32'), relay.shape_of(bop_1944))) # shape=(2, 840)
uop_1963 = relay.log2(uop_1932.astype('float64')) # shape=(2, 840)
var_1973 = relay.var("var_1973", dtype = "float64", shape = (2, 840))#candidate|1973|(2, 840)|var|float64
bop_1974 = relay.logical_or(uop_1963.astype('bool'), relay.reshape(var_1973.astype('bool'), relay.shape_of(uop_1963))) # shape=(2, 840)
bop_1979 = relay.floor_divide(uop_1963.astype('float32'), relay.reshape(bop_1944.astype('float32'), relay.shape_of(uop_1963))) # shape=(2, 840)
uop_1982 = relay.exp(bop_1944.astype('float64')) # shape=(2, 840)
var_2001 = relay.var("var_2001", dtype = "uint64", shape = (2, 840))#candidate|2001|(2, 840)|var|uint64
bop_2002 = relay.minimum(bop_1944.astype('int16'), relay.reshape(var_2001.astype('int16'), relay.shape_of(bop_1944))) # shape=(2, 840)
var_2006 = relay.var("var_2006", dtype = "uint64", shape = (2, 840))#candidate|2006|(2, 840)|var|uint64
bop_2007 = relay.equal(bop_1944.astype('bool'), relay.reshape(var_2006.astype('bool'), relay.shape_of(bop_1944))) # shape=(2, 840)
output = relay.Tuple([call_1833,call_1856,call_1879,call_1892,const_1893,call_1896,call_1906,call_1917,const_1918,bop_1957,bop_1974,bop_1979,uop_1982,bop_2002,bop_2007,])
output2 = relay.Tuple([call_1834,call_1857,call_1880,call_1894,const_1893,call_1897,call_1908,call_1919,const_1918,bop_1957,bop_1974,bop_1979,uop_1982,bop_2002,bop_2007,])
func_2010 = relay.Function([var_1973,var_2001,var_2006,], output)
mod['func_2010'] = func_2010
mod = relay.transform.InferType()(mod)
mutated_mod['func_2010'] = func_2010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2010_call = mutated_mod.get_global_var('func_2010')
var_2012 = relay.var("var_2012", dtype = "float64", shape = (2, 840))#candidate|2012|(2, 840)|var|float64
var_2013 = relay.var("var_2013", dtype = "uint64", shape = (2, 840))#candidate|2013|(2, 840)|var|uint64
var_2014 = relay.var("var_2014", dtype = "uint64", shape = (2, 840))#candidate|2014|(2, 840)|var|uint64
call_2011 = func_2010_call(var_2012,var_2013,var_2014,)
output = call_2011
func_2015 = relay.Function([var_2012,var_2013,var_2014,], output)
mutated_mod['func_2015'] = func_2015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_2019 = relay.TupleGetItem(func_1201_call(), 0)
call_2020 = relay.TupleGetItem(func_1203_call(), 0)
output = relay.Tuple([call_2019,])
output2 = relay.Tuple([call_2020,])
func_2032 = relay.Function([], output)
mod['func_2032'] = func_2032
mod = relay.transform.InferType()(mod)
output = func_2032()
func_2033 = relay.Function([], output)
mutated_mod['func_2033'] = func_2033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2032_call = mod.get_global_var('func_2032')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_2062 = relay.TupleGetItem(func_2032_call(), 0)
call_2063 = relay.TupleGetItem(func_2033_call(), 0)
uop_2064 = relay.sigmoid(call_2062.astype('float64')) # shape=(12, 9, 5)
uop_2066 = relay.sigmoid(call_2063.astype('float64')) # shape=(12, 9, 5)
output = relay.Tuple([uop_2064,])
output2 = relay.Tuple([uop_2066,])
func_2067 = relay.Function([], output)
mod['func_2067'] = func_2067
mod = relay.transform.InferType()(mod)
mutated_mod['func_2067'] = func_2067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mutated_mod.get_global_var('func_2067')
call_2068 = func_2067_call()
output = call_2068
func_2069 = relay.Function([], output)
mutated_mod['func_2069'] = func_2069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_2126 = relay.TupleGetItem(func_2067_call(), 0)
call_2127 = relay.TupleGetItem(func_2069_call(), 0)
output = call_2126
output2 = call_2127
func_2130 = relay.Function([], output)
mod['func_2130'] = func_2130
mod = relay.transform.InferType()(mod)
mutated_mod['func_2130'] = func_2130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2130_call = mutated_mod.get_global_var('func_2130')
call_2131 = func_2130_call()
output = call_2131
func_2132 = relay.Function([], output)
mutated_mod['func_2132'] = func_2132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1342_call = mod.get_global_var('func_1342')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_2178 = relay.TupleGetItem(func_1342_call(), 0)
call_2179 = relay.TupleGetItem(func_1344_call(), 0)
output = relay.Tuple([call_2178,])
output2 = relay.Tuple([call_2179,])
func_2180 = relay.Function([], output)
mod['func_2180'] = func_2180
mod = relay.transform.InferType()(mod)
output = func_2180()
func_2181 = relay.Function([], output)
mutated_mod['func_2181'] = func_2181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_2188 = relay.TupleGetItem(func_1201_call(), 2)
call_2189 = relay.TupleGetItem(func_1203_call(), 2)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_2194 = relay.TupleGetItem(func_2067_call(), 0)
call_2195 = relay.TupleGetItem(func_2069_call(), 0)
output = relay.Tuple([call_2188,call_2194,])
output2 = relay.Tuple([call_2189,call_2195,])
func_2227 = relay.Function([], output)
mod['func_2227'] = func_2227
mod = relay.transform.InferType()(mod)
mutated_mod['func_2227'] = func_2227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2227_call = mutated_mod.get_global_var('func_2227')
call_2228 = func_2227_call()
output = call_2228
func_2229 = relay.Function([], output)
mutated_mod['func_2229'] = func_2229
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2245 = relay.const([[[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True]],[[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True]]], dtype = "bool")#candidate|2245|(2, 14, 1)|const|bool
const_2246 = relay.const([[[False,False,False,False,False,True],[False,True,False,True,True,True],[False,True,False,True,False,True],[True,False,False,True,False,True],[True,False,True,False,False,True],[False,False,True,True,False,False],[False,True,True,True,False,False],[False,False,True,True,True,False],[False,False,False,False,True,False],[False,False,True,True,False,True],[False,True,True,False,False,True],[False,False,False,True,True,False],[True,False,False,False,True,True],[False,True,True,False,False,False]],[[True,False,False,False,True,True],[True,False,False,False,False,False],[True,False,False,False,True,False],[False,False,False,True,False,True],[False,True,False,False,True,False],[False,False,False,True,False,False],[False,True,False,False,True,False],[False,True,False,False,True,True],[False,True,True,False,False,True],[True,True,False,False,True,False],[False,True,False,True,False,True],[True,False,False,True,False,False],[True,False,True,True,True,False],[False,True,True,True,False,False]]], dtype = "bool")#candidate|2246|(2, 14, 6)|const|bool
bop_2247 = relay.logical_or(const_2245.astype('bool'), const_2246.astype('bool')) # shape=(2, 14, 6)
uop_2250 = relay.atan(const_2245.astype('float32')) # shape=(2, 14, 1)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_2255 = relay.TupleGetItem(func_1201_call(), 2)
call_2256 = relay.TupleGetItem(func_1203_call(), 2)
output = relay.Tuple([bop_2247,uop_2250,call_2255,])
output2 = relay.Tuple([bop_2247,uop_2250,call_2256,])
func_2261 = relay.Function([], output)
mod['func_2261'] = func_2261
mod = relay.transform.InferType()(mod)
output = func_2261()
func_2262 = relay.Function([], output)
mutated_mod['func_2262'] = func_2262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2032_call = mod.get_global_var('func_2032')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_2263 = relay.TupleGetItem(func_2032_call(), 0)
call_2264 = relay.TupleGetItem(func_2033_call(), 0)
output = relay.Tuple([call_2263,])
output2 = relay.Tuple([call_2264,])
func_2273 = relay.Function([], output)
mod['func_2273'] = func_2273
mod = relay.transform.InferType()(mod)
mutated_mod['func_2273'] = func_2273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2273_call = mutated_mod.get_global_var('func_2273')
call_2274 = func_2273_call()
output = call_2274
func_2275 = relay.Function([], output)
mutated_mod['func_2275'] = func_2275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_2280 = relay.TupleGetItem(func_1201_call(), 1)
call_2281 = relay.TupleGetItem(func_1203_call(), 1)
output = relay.Tuple([call_2280,])
output2 = relay.Tuple([call_2281,])
func_2286 = relay.Function([], output)
mod['func_2286'] = func_2286
mod = relay.transform.InferType()(mod)
output = func_2286()
func_2287 = relay.Function([], output)
mutated_mod['func_2287'] = func_2287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2328 = relay.var("var_2328", dtype = "float32", shape = (15, 3, 7))#candidate|2328|(15, 3, 7)|var|float32
uop_2329 = relay.cosh(var_2328.astype('float32')) # shape=(15, 3, 7)
uop_2343 = relay.asin(var_2328.astype('float64')) # shape=(15, 3, 7)
output = relay.Tuple([uop_2329,uop_2343,])
output2 = relay.Tuple([uop_2329,uop_2343,])
func_2345 = relay.Function([var_2328,], output)
mod['func_2345'] = func_2345
mod = relay.transform.InferType()(mod)
var_2346 = relay.var("var_2346", dtype = "float32", shape = (15, 3, 7))#candidate|2346|(15, 3, 7)|var|float32
output = func_2345(var_2346)
func_2347 = relay.Function([var_2346], output)
mutated_mod['func_2347'] = func_2347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2440 = relay.var("var_2440", dtype = "float32", shape = (2, 12, 10))#candidate|2440|(2, 12, 10)|var|float32
uop_2441 = relay.acos(var_2440.astype('float32')) # shape=(2, 12, 10)
var_2443 = relay.var("var_2443", dtype = "float32", shape = (2, 12, 10))#candidate|2443|(2, 12, 10)|var|float32
bop_2444 = relay.minimum(uop_2441.astype('uint16'), relay.reshape(var_2443.astype('uint16'), relay.shape_of(uop_2441))) # shape=(2, 12, 10)
output = relay.Tuple([bop_2444,])
output2 = relay.Tuple([bop_2444,])
func_2453 = relay.Function([var_2440,var_2443,], output)
mod['func_2453'] = func_2453
mod = relay.transform.InferType()(mod)
var_2454 = relay.var("var_2454", dtype = "float32", shape = (2, 12, 10))#candidate|2454|(2, 12, 10)|var|float32
var_2455 = relay.var("var_2455", dtype = "float32", shape = (2, 12, 10))#candidate|2455|(2, 12, 10)|var|float32
output = func_2453(var_2454,var_2455,)
func_2456 = relay.Function([var_2454,var_2455,], output)
mutated_mod['func_2456'] = func_2456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_2471 = relay.TupleGetItem(func_1201_call(), 0)
call_2472 = relay.TupleGetItem(func_1203_call(), 0)
func_2130_call = mod.get_global_var('func_2130')
func_2132_call = mutated_mod.get_global_var('func_2132')
call_2479 = func_2130_call()
call_2480 = func_2130_call()
func_1298_call = mod.get_global_var('func_1298')
func_1301_call = mutated_mod.get_global_var('func_1301')
const_2501 = relay.const([0.192812,-0.565516,-6.277770,3.342151,-5.581702,9.846431,-0.742753,-3.756657,-6.698953,-0.635065,-7.147617,3.109699,2.957588,-5.559865,6.149392,-3.548951,1.392361,-7.170548,7.988345,-2.496691,-7.512838,2.240606,6.669336,-0.387432,6.394492,8.353007,7.907817,-4.056200,-9.381314,0.222060,-1.315935,-7.768685,-4.926101,-8.086096,-6.008148,9.718985,-1.695562,-0.959228,2.787215,6.313125,2.214561,-9.071662,4.217472,7.312118,5.395868,8.718638,-8.438600,-3.492830,-8.023438,-0.747865,3.608498,-1.086217,-4.962130,4.662347], dtype = "float32")#candidate|2501|(54,)|const|float32
call_2500 = relay.TupleGetItem(func_1298_call(relay.reshape(const_2501.astype('float32'), [3, 9, 2]), relay.reshape(const_2501.astype('float32'), [3, 9, 2]), ), 0)
call_2502 = relay.TupleGetItem(func_1301_call(relay.reshape(const_2501.astype('float32'), [3, 9, 2]), relay.reshape(const_2501.astype('float32'), [3, 9, 2]), ), 0)
func_541_call = mod.get_global_var('func_541')
func_544_call = mutated_mod.get_global_var('func_544')
var_2508 = relay.var("var_2508", dtype = "int16", shape = (1, 105))#candidate|2508|(1, 105)|var|int16
call_2507 = func_541_call(relay.reshape(var_2508.astype('int16'), [3, 5, 7]))
call_2509 = func_541_call(relay.reshape(var_2508.astype('int16'), [3, 5, 7]))
func_1298_call = mod.get_global_var('func_1298')
func_1301_call = mutated_mod.get_global_var('func_1301')
call_2518 = relay.TupleGetItem(func_1298_call(relay.reshape(const_2501.astype('float32'), [3, 9, 2]), relay.reshape(call_2500.astype('float32'), [3, 9, 2]), ), 0)
call_2519 = relay.TupleGetItem(func_1301_call(relay.reshape(const_2501.astype('float32'), [3, 9, 2]), relay.reshape(call_2500.astype('float32'), [3, 9, 2]), ), 0)
uop_2521 = relay.log2(call_2471.astype('float32')) # shape=(12, 9, 5)
uop_2523 = relay.log2(call_2472.astype('float32')) # shape=(12, 9, 5)
output = relay.Tuple([call_2479,call_2500,const_2501,call_2507,var_2508,call_2518,uop_2521,])
output2 = relay.Tuple([call_2480,call_2502,const_2501,call_2509,var_2508,call_2519,uop_2523,])
func_2524 = relay.Function([var_2508,], output)
mod['func_2524'] = func_2524
mod = relay.transform.InferType()(mod)
mutated_mod['func_2524'] = func_2524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2525 = relay.var("var_2525", dtype = "int16", shape = (1, 105))#candidate|2525|(1, 105)|var|int16
func_2524_call = mutated_mod.get_global_var('func_2524')
call_2526 = func_2524_call(var_2525)
output = call_2526
func_2527 = relay.Function([var_2525], output)
mutated_mod['func_2527'] = func_2527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2286_call = mod.get_global_var('func_2286')
func_2287_call = mutated_mod.get_global_var('func_2287')
call_2537 = relay.TupleGetItem(func_2286_call(), 0)
call_2538 = relay.TupleGetItem(func_2287_call(), 0)
func_2524_call = mod.get_global_var('func_2524')
func_2527_call = mutated_mod.get_global_var('func_2527')
var_2545 = relay.var("var_2545", dtype = "int16", shape = (105,))#candidate|2545|(105,)|var|int16
call_2544 = relay.TupleGetItem(func_2524_call(relay.reshape(var_2545.astype('int16'), [1, 105])), 0)
call_2546 = relay.TupleGetItem(func_2527_call(relay.reshape(var_2545.astype('int16'), [1, 105])), 0)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2560 = relay.TupleGetItem(func_2180_call(), 0)
call_2561 = relay.TupleGetItem(func_2181_call(), 0)
output = relay.Tuple([call_2537,call_2544,var_2545,call_2560,])
output2 = relay.Tuple([call_2538,call_2546,var_2545,call_2561,])
func_2581 = relay.Function([var_2545,], output)
mod['func_2581'] = func_2581
mod = relay.transform.InferType()(mod)
mutated_mod['func_2581'] = func_2581
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2582 = relay.var("var_2582", dtype = "int16", shape = (105,))#candidate|2582|(105,)|var|int16
func_2581_call = mutated_mod.get_global_var('func_2581')
call_2583 = func_2581_call(var_2582)
output = call_2583
func_2584 = relay.Function([var_2582], output)
mutated_mod['func_2584'] = func_2584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2664 = relay.TupleGetItem(func_2180_call(), 0)
call_2665 = relay.TupleGetItem(func_2181_call(), 0)
func_371_call = mod.get_global_var('func_371')
func_375_call = mutated_mod.get_global_var('func_375')
call_2679 = relay.TupleGetItem(func_371_call(relay.reshape(call_2664.astype('uint8'), [4, 3, 10]), relay.reshape(call_2664.astype('uint8'), [4, 3, 10]), ), 0)
call_2680 = relay.TupleGetItem(func_375_call(relay.reshape(call_2664.astype('uint8'), [4, 3, 10]), relay.reshape(call_2664.astype('uint8'), [4, 3, 10]), ), 0)
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
var_2684 = relay.var("var_2684", dtype = "float64", shape = (2160,))#candidate|2684|(2160,)|var|float64
call_2683 = func_141_call(relay.reshape(var_2684.astype('float64'), [16, 9, 15]))
call_2685 = func_141_call(relay.reshape(var_2684.astype('float64'), [16, 9, 15]))
output = relay.Tuple([call_2664,call_2679,call_2683,var_2684,])
output2 = relay.Tuple([call_2665,call_2680,call_2685,var_2684,])
func_2690 = relay.Function([var_2684,], output)
mod['func_2690'] = func_2690
mod = relay.transform.InferType()(mod)
mutated_mod['func_2690'] = func_2690
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2691 = relay.var("var_2691", dtype = "float64", shape = (2160,))#candidate|2691|(2160,)|var|float64
func_2690_call = mutated_mod.get_global_var('func_2690')
call_2692 = func_2690_call(var_2691)
output = call_2692
func_2693 = relay.Function([var_2691], output)
mutated_mod['func_2693'] = func_2693
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2701 = relay.const([[[5.347387,-5.392569,-1.305645,-8.868401,1.301015,0.227946],[-1.762079,4.134040,0.118012,7.806326,3.648225,2.281044]],[[6.382243,-3.969840,-5.538211,-7.864518,-1.131975,-5.522309],[5.665718,1.154327,-7.964973,4.038851,1.017318,8.653993]],[[-8.177617,0.300485,-6.031765,-9.545063,-4.163459,8.231327],[-6.941726,-2.815723,-8.840189,0.361598,-0.100058,6.733619]],[[-1.133883,9.721404,5.780288,-7.118166,9.749217,1.977217],[-9.096046,-8.604102,-4.996593,2.985073,3.364380,3.106648]],[[-1.562138,5.963629,2.290086,6.227757,-0.065650,-0.362473],[9.711300,1.389340,-2.093436,5.425800,-6.261694,-5.486758]],[[3.022664,7.017157,4.280788,0.040590,1.078389,-2.852331],[1.701236,-8.225136,7.755489,4.511100,-0.601276,7.816716]],[[3.552808,6.064192,-3.379731,-0.111788,-0.892222,9.608655],[-9.306967,8.022945,9.556044,3.807294,-9.600585,-7.180689]],[[-9.084475,-5.574611,-1.899875,7.735753,-7.920132,0.366062],[-9.001243,6.027368,5.930953,5.980886,3.692699,-0.854886]],[[-2.680146,6.105757,5.908033,-4.404307,4.884503,-0.104425],[4.447898,8.939132,7.644338,-8.299878,-0.494292,-3.134810]]], dtype = "float64")#candidate|2701|(9, 2, 6)|const|float64
uop_2702 = relay.log2(const_2701.astype('float64')) # shape=(9, 2, 6)
output = relay.Tuple([uop_2702,])
output2 = relay.Tuple([uop_2702,])
func_2705 = relay.Function([], output)
mod['func_2705'] = func_2705
mod = relay.transform.InferType()(mod)
output = func_2705()
func_2706 = relay.Function([], output)
mutated_mod['func_2706'] = func_2706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2723 = relay.TupleGetItem(func_2180_call(), 0)
call_2724 = relay.TupleGetItem(func_2181_call(), 0)
output = call_2723
output2 = call_2724
func_2725 = relay.Function([], output)
mod['func_2725'] = func_2725
mod = relay.transform.InferType()(mod)
mutated_mod['func_2725'] = func_2725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mutated_mod.get_global_var('func_2725')
call_2726 = func_2725_call()
output = call_2726
func_2727 = relay.Function([], output)
mutated_mod['func_2727'] = func_2727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2262_call = mutated_mod.get_global_var('func_2262')
call_2801 = relay.TupleGetItem(func_2261_call(), 0)
call_2802 = relay.TupleGetItem(func_2262_call(), 0)
uop_2803 = relay.sinh(call_2801.astype('float64')) # shape=(2, 14, 6)
uop_2805 = relay.sinh(call_2802.astype('float64')) # shape=(2, 14, 6)
output = uop_2803
output2 = uop_2805
func_2813 = relay.Function([], output)
mod['func_2813'] = func_2813
mod = relay.transform.InferType()(mod)
output = func_2813()
func_2814 = relay.Function([], output)
mutated_mod['func_2814'] = func_2814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2032_call = mod.get_global_var('func_2032')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_2815 = relay.TupleGetItem(func_2032_call(), 0)
call_2816 = relay.TupleGetItem(func_2033_call(), 0)
const_2822 = relay.const([[[True,False,True,True,False],[False,False,True,True,False],[False,False,False,False,True],[True,False,False,True,False],[False,False,False,False,True],[True,False,True,True,True],[True,True,True,False,False],[False,False,False,True,True],[False,False,True,True,False]],[[True,False,False,True,True],[False,True,True,False,True],[True,True,True,False,True],[True,False,False,False,False],[False,False,True,False,False],[False,False,False,False,True],[False,True,True,False,False],[False,True,True,False,True],[False,True,True,False,True]],[[False,True,True,False,True],[False,False,False,True,False],[False,True,False,False,True],[False,False,False,True,False],[False,False,True,True,False],[True,False,True,False,False],[False,False,True,False,False],[False,False,False,False,True],[False,False,False,False,False]],[[False,False,False,False,False],[True,True,False,False,False],[False,True,False,True,True],[False,True,True,True,True],[True,False,True,True,False],[False,True,True,True,False],[True,True,False,False,True],[False,True,False,False,True],[True,False,True,True,True]],[[False,False,True,False,True],[False,True,True,False,True],[False,False,False,True,True],[False,False,False,True,False],[False,True,True,False,False],[True,True,False,False,True],[False,False,True,True,False],[False,True,False,False,True],[True,False,False,True,True]],[[True,False,True,False,True],[False,False,False,True,False],[False,False,False,True,False],[True,True,True,False,False],[True,False,True,True,False],[True,False,False,True,False],[True,False,False,True,False],[True,True,False,True,False],[True,False,True,True,True]],[[True,False,False,False,False],[False,False,False,True,True],[True,False,False,True,True],[False,True,False,False,False],[False,True,True,True,False],[True,False,False,False,True],[True,False,True,True,False],[True,True,False,True,True],[False,False,True,False,False]],[[True,False,True,True,False],[True,True,True,False,False],[True,True,False,False,False],[True,True,False,False,True],[False,True,False,True,True],[True,True,True,True,True],[True,False,True,False,True],[True,True,False,False,True],[True,True,True,True,True]],[[True,True,True,True,True],[False,True,True,False,False],[False,False,True,True,True],[False,True,True,True,True],[False,False,True,False,False],[False,True,False,True,True],[True,False,False,False,True],[True,False,True,False,True],[True,False,True,True,False]],[[False,True,True,True,True],[False,True,True,True,True],[False,False,True,False,True],[False,True,False,False,False],[True,True,False,False,False],[True,False,False,False,True],[False,False,False,True,True],[True,False,False,True,True],[False,True,True,True,True]],[[True,True,False,True,True],[False,False,False,True,True],[False,False,True,True,True],[False,True,True,False,True],[True,False,True,True,True],[False,True,False,False,False],[True,True,True,True,False],[False,False,False,True,True],[True,True,True,False,False]],[[False,False,False,False,True],[True,True,True,False,False],[False,False,False,False,False],[False,True,True,False,False],[True,False,False,False,True],[True,True,True,True,False],[True,True,False,True,True],[True,False,False,False,False],[True,False,True,True,False]]], dtype = "bool")#candidate|2822|(12, 9, 5)|const|bool
bop_2823 = relay.left_shift(call_2815.astype('uint8'), relay.reshape(const_2822.astype('uint8'), relay.shape_of(call_2815))) # shape=(12, 9, 5)
bop_2826 = relay.left_shift(call_2816.astype('uint8'), relay.reshape(const_2822.astype('uint8'), relay.shape_of(call_2816))) # shape=(12, 9, 5)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_2827 = func_896_call()
call_2828 = func_896_call()
output = relay.Tuple([bop_2823,call_2827,])
output2 = relay.Tuple([bop_2826,call_2828,])
func_2833 = relay.Function([], output)
mod['func_2833'] = func_2833
mod = relay.transform.InferType()(mod)
mutated_mod['func_2833'] = func_2833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mutated_mod.get_global_var('func_2833')
call_2834 = func_2833_call()
output = call_2834
func_2835 = relay.Function([], output)
mutated_mod['func_2835'] = func_2835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2705_call = mod.get_global_var('func_2705')
func_2706_call = mutated_mod.get_global_var('func_2706')
call_2839 = relay.TupleGetItem(func_2705_call(), 0)
call_2840 = relay.TupleGetItem(func_2706_call(), 0)
func_1536_call = mod.get_global_var('func_1536')
func_1539_call = mutated_mod.get_global_var('func_1539')
var_2842 = relay.var("var_2842", dtype = "float64", shape = (14, 78))#candidate|2842|(14, 78)|var|float64
call_2841 = relay.TupleGetItem(func_1536_call(relay.reshape(var_2842.astype('float64'), [1092,])), 0)
call_2843 = relay.TupleGetItem(func_1539_call(relay.reshape(var_2842.astype('float64'), [1092,])), 0)
func_371_call = mod.get_global_var('func_371')
func_375_call = mutated_mod.get_global_var('func_375')
call_2853 = relay.TupleGetItem(func_371_call(relay.reshape(call_2841.astype('uint8'), [4, 3, 10]), relay.reshape(call_2841.astype('uint8'), [4, 3, 10]), ), 0)
call_2854 = relay.TupleGetItem(func_375_call(relay.reshape(call_2841.astype('uint8'), [4, 3, 10]), relay.reshape(call_2841.astype('uint8'), [4, 3, 10]), ), 0)
var_2869 = relay.var("var_2869", dtype = "float64", shape = (14, 78))#candidate|2869|(14, 78)|var|float64
bop_2870 = relay.minimum(var_2842.astype('int8'), relay.reshape(var_2869.astype('int8'), relay.shape_of(var_2842))) # shape=(14, 78)
const_2878 = relay.const([[5.945214,-0.782827,1.905002,7.613140,7.307455,4.856199,1.152673,-2.771992,-1.091492,5.997844,-1.402557,5.834642,7.666617,-9.750597,-6.946988,-5.024218,3.058442,1.459745,-4.615280,-9.524796,-1.504964,6.907381,6.113265,5.582130,8.681202,4.635301,-5.655356,-4.431689,0.936811,-2.165337,-1.320926,9.974136,9.979270,0.808414,-4.481090,4.798333,1.891830,-1.709096,-6.899311,-7.199237,-6.819494,7.217510,-6.892101,-1.693027,-0.058752,4.807725,9.732622,-7.173838,-0.179734,3.500024,1.246902,7.423921,8.985387,-7.921836,-6.598576,9.447586,-9.366043,8.415906,-4.532967,4.327907,-9.530985,5.382263,8.727911,-9.501383,0.323089,-2.914947,-4.618706,-7.889078,8.732029,3.791014,6.544489,-4.144055,0.310638,4.923808,-6.642584,-9.285293,6.963793,-5.086055],[4.304429,-1.067979,-7.552487,8.505838,0.136397,-3.467972,-7.545364,-5.646463,-7.680505,-5.648019,-5.638109,3.712174,-0.659676,7.573902,-1.932008,-0.296711,-0.630814,-2.190566,-2.239407,6.577481,0.386056,-2.342245,1.036931,-5.647608,-7.265994,7.994899,-3.070715,0.953226,-7.627705,-7.764772,-3.944457,-1.226984,-6.109747,-2.006517,-5.321144,-0.388775,9.711413,-3.277252,1.369408,3.472127,4.662541,-9.499799,3.973574,-2.880013,-5.324212,-0.558061,1.664538,0.092386,-4.309072,-4.332748,2.970288,-8.884608,-0.507421,5.573151,7.757268,0.992489,3.297977,-9.174766,2.136148,-6.500365,-3.535139,-1.981753,4.161926,7.412393,9.346477,-7.035752,-7.807792,-2.582916,9.463349,-2.378134,-8.815627,0.013556,9.703302,-5.434770,-0.704938,-9.562233,-2.490088,6.757298],[-9.768198,1.554416,-4.412647,-3.888141,-3.129724,3.286730,-9.227990,3.924965,3.560419,-2.377948,-7.529472,6.412257,7.165284,7.042559,0.196711,6.441658,2.298195,0.119637,-9.884587,-4.771919,-5.788011,3.708154,7.523290,8.390947,6.756366,9.437368,6.209481,5.334214,-3.926977,-4.593500,4.570254,7.254867,-3.469989,-6.439091,-0.303074,6.939791,0.479986,8.428914,7.476845,9.737533,-8.916015,0.538608,-0.761438,-6.523214,9.180560,-6.352622,-0.587509,-7.127888,-7.410237,-7.284702,2.151230,-4.479837,-8.075058,-0.900397,-7.668366,-2.765962,-7.693396,-4.695891,-3.622755,-6.749360,8.607543,-2.052992,-8.508991,-0.662469,-0.039120,-0.119562,7.633937,-9.609976,-5.952610,3.955816,-3.527893,-4.675860,2.792409,9.430045,7.809625,-1.930439,-8.145276,0.459448],[3.784566,-7.896376,-3.832175,1.225757,5.245248,7.859137,-7.724417,-6.817634,-5.189451,-5.251362,-6.488793,-5.298814,6.437934,-1.661453,3.638896,-9.047729,-6.010132,-1.224383,9.683052,-2.034088,7.992915,5.653125,-2.423950,4.400044,-0.223880,8.839212,6.480273,-2.577002,-6.908717,8.700646,-0.007954,-8.276591,-8.519598,6.253746,-8.411398,-2.033300,7.850841,-1.748440,8.813685,7.415755,3.384798,-4.263217,-2.798301,9.259246,-5.040039,-3.118584,-9.216307,1.244166,-8.436885,2.693917,-2.926262,-8.297864,0.135880,6.039002,-4.648476,-6.137208,3.071090,0.985063,0.408128,-5.013088,3.373780,9.958396,4.511787,-3.029516,7.428782,4.373868,0.754084,-3.636656,-5.702155,8.931471,-7.396114,-7.828730,6.697730,3.198024,-7.785898,-5.629813,-3.670309,3.052669],[-2.546255,2.877306,3.970432,8.739796,6.799535,6.498651,9.607972,-7.595851,-0.920447,-4.599186,-5.378750,9.685681,5.767941,-9.877484,7.729000,-8.901154,2.866799,2.317325,-1.991025,0.277935,-2.137462,0.691218,-5.981378,2.551370,-8.064293,-7.670634,0.534285,8.976327,2.196834,3.876169,0.294296,-7.974056,7.053112,-5.699175,-9.268402,5.643450,-6.533973,-1.132068,6.390160,-3.761446,3.470410,-2.863833,-8.502745,-6.633368,-6.768257,-1.686480,1.221519,-8.300674,-4.923574,-4.494304,9.527938,-2.066568,-2.841211,-4.636863,-6.157597,6.431223,6.789403,7.105660,5.117313,7.636593,7.825450,5.127202,-4.112022,6.572619,-1.498734,8.938907,-0.962116,-2.554174,-6.308920,-6.604254,1.443221,4.054885,3.028831,-8.863331,-8.253370,-4.590911,6.780712,-2.472407],[-1.122068,-9.072755,2.308402,-1.264460,4.788376,-7.141479,2.560747,1.493059,-2.588641,5.388280,2.737362,-3.710217,5.744896,5.761985,-5.790175,-7.869474,6.750631,-6.629685,-4.245086,-3.966205,3.431290,7.171689,4.497806,0.689335,6.823972,-3.798434,-7.370148,-1.043423,8.767985,-1.315222,3.000982,-5.848867,4.101596,9.206291,7.856896,-1.791888,-9.320732,9.230183,-3.763630,2.897899,1.775654,-8.497291,-4.314816,3.738017,-3.805062,-6.301293,-2.244205,-2.624434,3.923496,2.343447,-2.614820,8.595353,-2.576701,-8.118224,9.166552,-5.280759,6.328119,-0.315584,-8.401543,-0.804939,4.093284,-4.909170,0.949952,8.701415,4.709985,-3.158917,-3.458921,-1.186861,-1.223033,9.379275,7.354115,3.705048,-7.317912,-9.955653,3.444467,5.488709,7.696098,1.203156],[8.859914,7.730899,6.403698,-0.062763,7.221376,-0.821556,3.256994,7.198000,-0.384412,-7.009423,-3.723358,6.668012,0.861580,-0.056675,-2.627938,6.619206,8.329606,-5.930054,-3.051182,-8.241032,-0.283710,-1.733423,0.910287,-8.786436,-3.920866,-0.094598,6.339048,-3.226016,1.562119,-1.624952,-8.820338,8.721854,-6.792903,9.185764,-4.180380,6.316474,-6.136265,-8.056700,5.136277,3.325625,9.312383,2.195963,9.783039,2.979974,-6.565776,4.340305,-3.614084,-5.891509,-2.504778,4.889064,-7.818457,0.419188,-5.441442,-1.289051,-0.019094,4.314527,4.735590,8.628496,4.235632,4.011605,-4.709700,-7.686894,6.913423,4.605007,-7.360443,-6.545312,9.460709,-1.817610,-3.156994,-7.063638,-9.291102,-8.830575,-1.545296,6.753020,7.934745,7.775076,4.915442,-2.931349],[6.762656,-3.139419,-6.272337,-8.191050,9.360609,-7.768051,8.440255,-8.595750,-4.037614,6.052370,-5.348480,-0.150578,-8.567978,4.079857,-1.674708,-8.627568,-8.418075,7.259987,-3.119353,-4.869628,-0.514854,6.056520,4.791080,-7.314270,-8.988529,-9.787322,-1.883449,-0.387462,0.929524,-1.938593,2.502509,2.871102,9.443933,3.945616,-0.174054,8.739883,-8.373943,-8.399853,1.783982,0.220145,-0.453604,-3.740658,3.348908,9.290543,3.377119,-6.297437,1.503418,-2.808423,-9.865697,-2.752914,9.089310,-5.730204,-9.585329,-6.790425,6.367109,3.406920,7.668296,-0.229271,3.952496,4.857733,1.330756,8.106980,7.731026,8.125636,5.026929,-0.479392,-9.789523,-1.578177,7.795140,-0.399888,6.208775,6.873502,6.159602,1.541828,4.107166,0.227635,-8.666881,2.311516],[-5.647729,6.384684,-7.654647,3.467719,-7.350827,4.148571,-8.443111,-1.314062,-6.823231,-9.680472,4.135908,-0.237586,9.796029,9.522447,-0.758220,6.858760,-3.227353,4.506533,7.902763,7.910400,-3.302058,9.040502,-0.873954,-1.915548,6.339731,-9.768858,-5.671668,-9.210589,4.157697,2.588868,-2.391187,-8.487264,-9.501010,-4.815171,-8.844140,0.902456,-4.502708,2.372823,9.032334,4.838520,8.795935,1.494148,-8.986807,6.565863,-7.757671,-5.301707,6.535643,9.267356,-6.076056,5.002779,3.224286,9.651019,-8.077313,-9.263156,1.272859,-1.320265,5.008255,-7.781738,5.919704,3.470850,2.892410,9.967946,6.927321,-8.652078,-2.715660,-9.057443,-9.301962,3.070032,8.900827,-1.038575,-3.341065,1.390618,3.596230,0.418688,4.073888,-6.211078,-2.409016,0.667131],[-1.970735,2.902699,-3.876571,-9.473939,-3.797176,0.897758,1.455981,-9.996569,-9.505064,3.168847,5.325921,8.181924,-0.791393,7.201853,0.477781,-9.123848,-8.107629,-7.067879,3.680946,-2.303469,-6.589764,5.883609,6.487229,4.139790,2.283928,2.331113,-2.124040,2.716945,-1.564544,5.476054,-1.478934,8.462519,-5.387959,3.308008,-5.072911,4.706011,8.169032,-2.793712,-6.985130,-5.170619,8.733112,-9.282698,-1.500889,-9.364774,0.622090,-9.341269,1.326726,-7.553746,4.175973,0.466224,0.505484,1.113158,-6.843081,-5.653958,5.995279,-2.306861,-9.330921,-9.724767,5.442502,-8.152828,2.062077,-8.741148,-5.460270,-3.244454,-6.736268,-6.988847,-3.814618,-3.228068,0.870280,3.293812,2.167296,8.153542,-2.263872,5.709125,-9.041405,-7.482014,-1.576497,-9.706114],[-3.096092,0.447142,6.885354,-4.471495,2.668184,-7.401344,4.819249,3.672267,9.186423,4.116905,9.203660,1.540321,-2.030225,5.679062,-6.920860,4.714253,-7.824268,1.579022,-6.678765,5.314553,-2.848224,8.943023,9.783420,0.322894,3.637394,-1.594392,2.956668,4.772048,-8.976090,-0.367280,-8.353334,5.527366,-1.118260,-2.496057,-9.357480,-9.985553,6.410746,7.615643,6.268051,-8.881671,8.950903,9.560355,-1.723687,-1.251721,7.242503,-9.019868,-5.558176,-1.370796,-6.951241,-1.481864,-8.776102,-5.644738,-1.050635,-6.842459,-5.178412,-8.550928,4.603811,-0.262458,-1.710065,-8.428465,1.200095,-1.456733,-0.445963,8.431105,0.701929,-5.409119,-5.347608,-2.116134,-5.827704,-1.915081,0.442493,-5.320457,-1.755084,-4.145842,9.901822,-7.852280,9.204119,-7.860437],[2.248028,6.825228,5.510000,-7.197386,-1.221926,-9.820206,7.987975,1.660249,-7.458522,-2.572345,-6.682590,9.196088,9.670869,-8.299748,-7.138715,4.041203,-8.337666,7.735436,-2.286465,-5.840080,-4.725558,8.560632,9.481957,-5.968296,-7.460148,6.570446,6.924591,-6.819259,-5.904100,-7.190472,9.022610,9.711175,-9.054589,-4.908832,-1.572687,8.786568,8.432378,6.025020,3.658775,-6.138660,-2.600845,-1.811233,3.104860,-9.923382,2.513806,-2.481632,-3.088083,5.626110,-9.928373,8.226017,-3.843647,9.921701,0.660958,-0.384457,-5.624082,-2.921111,-6.678332,2.478106,5.172908,-9.861464,-6.947814,-2.553332,-1.985477,7.982463,5.964482,9.133353,4.876014,8.654429,7.103702,0.860676,7.057247,-4.597248,-9.559105,4.210216,-7.804874,-3.630370,-5.333791,2.901521],[-6.387134,-5.204162,-6.949456,6.256169,-6.128327,-8.144115,7.831963,-5.630929,-4.198875,-7.464036,-9.000747,-4.415753,2.377408,3.094635,8.735144,-5.705732,0.867219,9.281502,3.885162,4.241098,-6.395155,2.856853,9.824743,-2.517440,8.719395,-7.997427,-4.938010,-9.683122,2.482501,2.971219,-2.497161,8.799318,-8.185825,4.739313,8.193875,-4.024107,8.216481,7.080296,9.536609,-4.719715,3.135159,-5.295513,6.593470,7.958205,-8.103879,-4.529712,9.913344,-5.142704,-3.920495,2.248463,-3.261360,0.956704,6.532248,-4.783669,-0.293938,2.774883,7.907265,6.280426,-9.186241,5.042748,-1.098866,-5.513167,2.715041,4.328286,-2.345602,-3.045220,-6.399661,-3.188652,-3.537468,-3.883120,1.541519,-7.878263,4.220305,-5.031713,1.412688,-8.920791,6.770936,4.424960],[8.661674,-0.383913,7.472592,-6.267667,2.047750,1.071789,5.560064,-6.366769,-5.830149,0.439472,1.303445,0.714114,-9.082466,-3.730841,-1.820991,-2.205032,-7.604705,-8.848568,3.626722,-7.009307,2.774712,0.346373,3.066729,-8.624037,-9.861007,-7.017344,3.501603,-2.579361,6.292162,4.515737,-9.529165,-3.107855,-8.074915,-9.050319,6.220936,-4.408624,4.350402,-2.604997,-3.966028,-8.447071,-7.438363,-2.911512,-7.118589,5.567541,5.646135,-5.896534,0.977663,-8.887901,1.083317,2.337136,2.343144,5.747854,7.866691,-7.355859,-8.527971,6.994281,2.030971,-8.847109,-5.213373,5.100104,-5.497601,-3.225598,-6.644399,-7.334506,6.919949,1.701342,4.233582,7.460388,-4.041297,-3.269032,-6.145211,2.535539,3.073550,-1.976662,-1.811561,9.731599,9.650812,-2.175392]], dtype = "float64")#candidate|2878|(14, 78)|const|float64
bop_2879 = relay.power(var_2869.astype('float64'), relay.reshape(const_2878.astype('float64'), relay.shape_of(var_2869))) # shape=(14, 78)
output = relay.Tuple([call_2839,call_2841,call_2853,bop_2870,bop_2879,])
output2 = relay.Tuple([call_2840,call_2843,call_2854,bop_2870,bop_2879,])
func_2891 = relay.Function([var_2842,var_2869,], output)
mod['func_2891'] = func_2891
mod = relay.transform.InferType()(mod)
mutated_mod['func_2891'] = func_2891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2891_call = mutated_mod.get_global_var('func_2891')
var_2893 = relay.var("var_2893", dtype = "float64", shape = (14, 78))#candidate|2893|(14, 78)|var|float64
var_2894 = relay.var("var_2894", dtype = "float64", shape = (14, 78))#candidate|2894|(14, 78)|var|float64
call_2892 = func_2891_call(var_2893,var_2894,)
output = call_2892
func_2895 = relay.Function([var_2893,var_2894,], output)
mutated_mod['func_2895'] = func_2895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
call_2942 = func_2725_call()
call_2943 = func_2725_call()
output = relay.Tuple([call_2942,])
output2 = relay.Tuple([call_2943,])
func_2960 = relay.Function([], output)
mod['func_2960'] = func_2960
mod = relay.transform.InferType()(mod)
output = func_2960()
func_2961 = relay.Function([], output)
mutated_mod['func_2961'] = func_2961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_2970 = func_896_call()
call_2971 = func_896_call()
var_2987 = relay.var("var_2987", dtype = "bool", shape = (12, 9, 5))#candidate|2987|(12, 9, 5)|var|bool
bop_2988 = relay.floor_mod(call_2970.astype('float32'), relay.reshape(var_2987.astype('float32'), relay.shape_of(call_2970))) # shape=(12, 9, 5)
bop_2991 = relay.floor_mod(call_2971.astype('float32'), relay.reshape(var_2987.astype('float32'), relay.shape_of(call_2971))) # shape=(12, 9, 5)
bop_3010 = relay.power(call_2970.astype('float64'), relay.reshape(var_2987.astype('float64'), relay.shape_of(call_2970))) # shape=(12, 9, 5)
bop_3013 = relay.power(call_2971.astype('float64'), relay.reshape(var_2987.astype('float64'), relay.shape_of(call_2971))) # shape=(12, 9, 5)
output = relay.Tuple([bop_2988,bop_3010,])
output2 = relay.Tuple([bop_2991,bop_3013,])
func_3036 = relay.Function([var_2987,], output)
mod['func_3036'] = func_3036
mod = relay.transform.InferType()(mod)
mutated_mod['func_3036'] = func_3036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3037 = relay.var("var_3037", dtype = "bool", shape = (12, 9, 5))#candidate|3037|(12, 9, 5)|var|bool
func_3036_call = mutated_mod.get_global_var('func_3036')
call_3038 = func_3036_call(var_3037)
output = call_3038
func_3039 = relay.Function([var_3037], output)
mutated_mod['func_3039'] = func_3039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2960_call = mod.get_global_var('func_2960')
func_2961_call = mutated_mod.get_global_var('func_2961')
call_3132 = relay.TupleGetItem(func_2960_call(), 0)
call_3133 = relay.TupleGetItem(func_2961_call(), 0)
output = relay.Tuple([call_3132,])
output2 = relay.Tuple([call_3133,])
func_3147 = relay.Function([], output)
mod['func_3147'] = func_3147
mod = relay.transform.InferType()(mod)
mutated_mod['func_3147'] = func_3147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3147_call = mutated_mod.get_global_var('func_3147')
call_3148 = func_3147_call()
output = call_3148
func_3149 = relay.Function([], output)
mutated_mod['func_3149'] = func_3149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_3184 = relay.TupleGetItem(func_1201_call(), 0)
call_3185 = relay.TupleGetItem(func_1203_call(), 0)
output = relay.Tuple([call_3184,])
output2 = relay.Tuple([call_3185,])
func_3209 = relay.Function([], output)
mod['func_3209'] = func_3209
mod = relay.transform.InferType()(mod)
mutated_mod['func_3209'] = func_3209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mutated_mod.get_global_var('func_3209')
call_3210 = func_3209_call()
output = call_3210
func_3211 = relay.Function([], output)
mutated_mod['func_3211'] = func_3211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1494_call = mod.get_global_var('func_1494')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_3224 = relay.TupleGetItem(func_1494_call(), 0)
call_3225 = relay.TupleGetItem(func_1496_call(), 0)
func_2813_call = mod.get_global_var('func_2813')
func_2814_call = mutated_mod.get_global_var('func_2814')
call_3244 = func_2813_call()
call_3245 = func_2813_call()
var_3256 = relay.var("var_3256", dtype = "float64", shape = (2, 14, 6))#candidate|3256|(2, 14, 6)|var|float64
bop_3257 = relay.bitwise_or(call_3244.astype('int8'), relay.reshape(var_3256.astype('int8'), relay.shape_of(call_3244))) # shape=(2, 14, 6)
bop_3260 = relay.bitwise_or(call_3245.astype('int8'), relay.reshape(var_3256.astype('int8'), relay.shape_of(call_3245))) # shape=(2, 14, 6)
bop_3268 = relay.multiply(bop_3257.astype('int32'), relay.reshape(call_3244.astype('int32'), relay.shape_of(bop_3257))) # shape=(2, 14, 6)
bop_3271 = relay.multiply(bop_3260.astype('int32'), relay.reshape(call_3245.astype('int32'), relay.shape_of(bop_3260))) # shape=(2, 14, 6)
uop_3280 = relay.cosh(var_3256.astype('float64')) # shape=(2, 14, 6)
output = relay.Tuple([call_3224,bop_3268,uop_3280,])
output2 = relay.Tuple([call_3225,bop_3271,uop_3280,])
func_3290 = relay.Function([var_3256,], output)
mod['func_3290'] = func_3290
mod = relay.transform.InferType()(mod)
mutated_mod['func_3290'] = func_3290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3291 = relay.var("var_3291", dtype = "float64", shape = (2, 14, 6))#candidate|3291|(2, 14, 6)|var|float64
func_3290_call = mutated_mod.get_global_var('func_3290')
call_3292 = func_3290_call(var_3291)
output = call_3292
func_3293 = relay.Function([var_3291], output)
mutated_mod['func_3293'] = func_3293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2813_call = mod.get_global_var('func_2813')
func_2814_call = mutated_mod.get_global_var('func_2814')
call_3311 = func_2813_call()
call_3312 = func_2813_call()
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_3327 = relay.TupleGetItem(func_2180_call(), 0)
call_3328 = relay.TupleGetItem(func_2181_call(), 0)
output = relay.Tuple([call_3311,call_3327,])
output2 = relay.Tuple([call_3312,call_3328,])
func_3334 = relay.Function([], output)
mod['func_3334'] = func_3334
mod = relay.transform.InferType()(mod)
mutated_mod['func_3334'] = func_3334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3334_call = mutated_mod.get_global_var('func_3334')
call_3335 = func_3334_call()
output = call_3335
func_3336 = relay.Function([], output)
mutated_mod['func_3336'] = func_3336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3147_call = mod.get_global_var('func_3147')
func_3149_call = mutated_mod.get_global_var('func_3149')
call_3417 = relay.TupleGetItem(func_3147_call(), 0)
call_3418 = relay.TupleGetItem(func_3149_call(), 0)
output = call_3417
output2 = call_3418
func_3419 = relay.Function([], output)
mod['func_3419'] = func_3419
mod = relay.transform.InferType()(mod)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3420 = func_3419_call()
output = call_3420
func_3421 = relay.Function([], output)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1042_call = mutated_mod.get_global_var('func_1042')
call_3432 = relay.TupleGetItem(func_1041_call(), 0)
call_3433 = relay.TupleGetItem(func_1042_call(), 0)
output = relay.Tuple([call_3432,])
output2 = relay.Tuple([call_3433,])
func_3445 = relay.Function([], output)
mod['func_3445'] = func_3445
mod = relay.transform.InferType()(mod)
mutated_mod['func_3445'] = func_3445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mutated_mod.get_global_var('func_3445')
call_3446 = func_3445_call()
output = call_3446
func_3447 = relay.Function([], output)
mutated_mod['func_3447'] = func_3447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2273_call = mod.get_global_var('func_2273')
func_2275_call = mutated_mod.get_global_var('func_2275')
call_3477 = relay.TupleGetItem(func_2273_call(), 0)
call_3478 = relay.TupleGetItem(func_2275_call(), 0)
output = call_3477
output2 = call_3478
func_3479 = relay.Function([], output)
mod['func_3479'] = func_3479
mod = relay.transform.InferType()(mod)
output = func_3479()
func_3480 = relay.Function([], output)
mutated_mod['func_3480'] = func_3480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
call_3514 = func_2725_call()
call_3515 = func_2725_call()
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_3533 = relay.TupleGetItem(func_2833_call(), 1)
call_3534 = relay.TupleGetItem(func_2835_call(), 1)
output = relay.Tuple([call_3514,call_3533,])
output2 = relay.Tuple([call_3515,call_3534,])
func_3541 = relay.Function([], output)
mod['func_3541'] = func_3541
mod = relay.transform.InferType()(mod)
output = func_3541()
func_3542 = relay.Function([], output)
mutated_mod['func_3542'] = func_3542
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3575 = relay.var("var_3575", dtype = "float32", shape = (15, 1, 2))#candidate|3575|(15, 1, 2)|var|float32
uop_3576 = relay.acosh(var_3575.astype('float32')) # shape=(15, 1, 2)
uop_3580 = relay.sqrt(uop_3576.astype('float32')) # shape=(15, 1, 2)
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
const_3588 = relay.const([-2.373081,-7.914850,5.668070,9.150223,-4.731249,1.502722,0.118998,-7.181038,0.799585,4.148756,-4.362476,7.127877,1.614479,9.984477,7.829699,-1.727012,5.858315,7.767571,9.501825,9.594521,-1.390020,5.973238,3.109591,8.360992,-2.593938,-0.968815,2.080319,-8.668767,0.716425,8.476781,-8.125198,-6.932831,-4.223095,1.811008,-9.942058,5.579151,5.669040,-1.604288,4.715177,-7.518861,-1.860940,-3.657788,-4.774337,-0.187700,-0.298872,-0.025496,-8.380525,9.925197,5.673301,-8.107967,9.677200,-6.262371,-0.093066,0.786241,3.067354,4.651085,-3.734118,0.366393,-9.770621,6.908046,3.216677,5.553243,-2.785133,8.780604,0.691001,-6.952476,6.896335,-6.348025,4.019645,7.184719,0.253902,2.200149,-5.519200,-0.261409,-8.156715,-8.178725,6.052974,3.648274,-3.859521,9.859101,-6.297325,-5.750333,2.369948,1.742199,-9.509784,1.808811,5.948072,-3.459622,7.223857,-8.690710,-8.409417,9.187050,5.911831,1.821412,1.400583,5.544942,-9.259453,-2.776960,-9.723942,7.208796,-9.905074,-6.639444,4.219040,-8.296385,9.227660,-4.273780,9.650831,-9.211739,3.066802,-3.804125,-1.140349,-1.597324,8.819196,-7.186563,1.065091,-5.046846,-0.154200,3.411182,7.270022,-5.304148,1.590136,-1.558575,0.554901,6.634800,9.646100,2.030175,4.963214,-9.867593,-2.317491,3.700639,-4.672568,-4.455870,-9.124732,-6.734484,8.942784,7.439763,-4.685402,8.553026,-3.344449,-6.382487,-2.033804,7.241882,5.455902,-5.803870,8.731044,5.888706,2.139871,-2.153628,-1.099939,-3.123060,-4.426543,-5.034389,4.563065,-1.349332,-2.672196,3.530990,-5.176594,-6.019187,4.687013,-8.524853,-8.204284,-8.483726,5.365181,-8.376491,-3.867190,3.610017,-5.979853,8.362178,7.638059,4.383655,-7.883102,-8.868856,2.514157,-4.470044,5.747288,9.738414,0.205993,3.230744,3.466652,-8.703423,-6.637673,-7.435838,3.558597,7.798018,0.541979,-0.941511,0.045038,-2.645104,3.372448,1.385221,4.729522,8.466457,7.042926,8.397055,-6.362429,-5.949439,5.469143,2.882221,-6.945041,8.260171,8.611426,7.447674,-4.219410,9.457537,-7.263005,-2.572129,-6.611494,-4.723882,0.054450,-8.501494,9.640545,-6.719327,9.785617,1.906820,-0.213970,3.473252,-8.546661,1.498746,-6.222615,7.958608,1.171753,4.783336,4.628438,9.775835,5.406575,-9.773864,-9.432008,-2.189876,-2.093986,6.974499,-7.532714,-6.454571,8.169058,-1.092611,-8.221941,4.712558,2.648383,6.366380,-9.477616,7.899070,-2.740974,8.814963,4.685827,-4.108124,9.430679,-0.464175,-1.323128,2.679505,-3.513135,-6.707909,6.492114,7.024195,-0.822657,4.415473,3.713375,-1.595504,-4.900296,2.536203,9.349069,5.242342,8.995722,2.166720,-3.048004,-1.426234,-5.614377,8.154702,-5.401636,-8.550825,-4.940451,6.900605,2.003489,5.661757,1.398606,7.830449,7.188328,-7.910637,-9.160963,-3.048455,-9.050006,-7.042379,3.293537,-6.501524,-2.152096,-0.575475,-3.729256,-9.514840,-5.534272,9.595403,-0.440359,-8.431477,0.776944,7.458187,-4.282053,-1.551303,-2.425782,0.034003,-9.205627,0.866303,4.366210,1.669381,7.206349,4.894162,-2.857994,-0.602204,1.336167,-2.310836,3.250227,-0.667353,4.555890,-9.971505,6.295845,-3.114479,5.263272,-2.235898,6.036372], dtype = "float32")#candidate|3588|(315,)|const|float32
call_3587 = relay.TupleGetItem(func_2345_call(relay.reshape(const_3588.astype('float32'), [15, 3, 7])), 1)
call_3589 = relay.TupleGetItem(func_2347_call(relay.reshape(const_3588.astype('float32'), [15, 3, 7])), 1)
bop_3593 = relay.bitwise_xor(call_3587.astype('int32'), relay.reshape(const_3588.astype('int32'), relay.shape_of(call_3587))) # shape=(15, 3, 7)
bop_3596 = relay.bitwise_xor(call_3589.astype('int32'), relay.reshape(const_3588.astype('int32'), relay.shape_of(call_3589))) # shape=(15, 3, 7)
func_3479_call = mod.get_global_var('func_3479')
func_3480_call = mutated_mod.get_global_var('func_3480')
call_3602 = func_3479_call()
call_3603 = func_3479_call()
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
var_3609 = relay.var("var_3609", dtype = "bool", shape = (98,))#candidate|3609|(98,)|var|bool
call_3608 = func_1147_call(relay.reshape(var_3609.astype('bool'), [14, 1, 7]))
call_3610 = func_1147_call(relay.reshape(var_3609.astype('bool'), [14, 1, 7]))
bop_3615 = relay.greater(uop_3580.astype('bool'), relay.reshape(uop_3576.astype('bool'), relay.shape_of(uop_3580))) # shape=(15, 1, 2)
uop_3637 = relay.asinh(uop_3580.astype('float64')) # shape=(15, 1, 2)
uop_3645 = relay.rsqrt(uop_3637.astype('float32')) # shape=(15, 1, 2)
output = relay.Tuple([bop_3593,call_3602,call_3608,var_3609,bop_3615,uop_3645,])
output2 = relay.Tuple([bop_3596,call_3603,call_3610,var_3609,bop_3615,uop_3645,])
func_3662 = relay.Function([var_3575,var_3609,], output)
mod['func_3662'] = func_3662
mod = relay.transform.InferType()(mod)
mutated_mod['func_3662'] = func_3662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3662_call = mutated_mod.get_global_var('func_3662')
var_3664 = relay.var("var_3664", dtype = "float32", shape = (15, 1, 2))#candidate|3664|(15, 1, 2)|var|float32
var_3665 = relay.var("var_3665", dtype = "bool", shape = (98,))#candidate|3665|(98,)|var|bool
call_3663 = func_3662_call(var_3664,var_3665,)
output = call_3663
func_3666 = relay.Function([var_3664,var_3665,], output)
mutated_mod['func_3666'] = func_3666
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3668 = relay.const(6, dtype = "int32")#candidate|3668|()|const|int32
var_3669 = relay.var("var_3669", dtype = "int32", shape = (14, 9, 9))#candidate|3669|(14, 9, 9)|var|int32
bop_3670 = relay.multiply(const_3668.astype('int32'), var_3669.astype('int32')) # shape=(14, 9, 9)
output = relay.Tuple([bop_3670,])
output2 = relay.Tuple([bop_3670,])
func_3673 = relay.Function([var_3669,], output)
mod['func_3673'] = func_3673
mod = relay.transform.InferType()(mod)
var_3674 = relay.var("var_3674", dtype = "int32", shape = (14, 9, 9))#candidate|3674|(14, 9, 9)|var|int32
output = func_3673(var_3674)
func_3675 = relay.Function([var_3674], output)
mutated_mod['func_3675'] = func_3675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2032_call = mod.get_global_var('func_2032')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_3681 = relay.TupleGetItem(func_2032_call(), 0)
call_3682 = relay.TupleGetItem(func_2033_call(), 0)
func_2524_call = mod.get_global_var('func_2524')
func_2527_call = mutated_mod.get_global_var('func_2527')
var_3684 = relay.var("var_3684", dtype = "int16", shape = (105,))#candidate|3684|(105,)|var|int16
call_3683 = relay.TupleGetItem(func_2524_call(relay.reshape(var_3684.astype('int16'), [1, 105])), 3)
call_3685 = relay.TupleGetItem(func_2527_call(relay.reshape(var_3684.astype('int16'), [1, 105])), 3)
var_3703 = relay.var("var_3703", dtype = "int16", shape = (3, 5, 7))#candidate|3703|(3, 5, 7)|var|int16
bop_3704 = relay.divide(call_3683.astype('float32'), relay.reshape(var_3703.astype('float32'), relay.shape_of(call_3683))) # shape=(3, 5, 7)
bop_3707 = relay.divide(call_3685.astype('float32'), relay.reshape(var_3703.astype('float32'), relay.shape_of(call_3685))) # shape=(3, 5, 7)
uop_3720 = relay.cos(call_3681.astype('float64')) # shape=(12, 9, 5)
uop_3722 = relay.cos(call_3682.astype('float64')) # shape=(12, 9, 5)
uop_3729 = relay.sin(uop_3720.astype('float64')) # shape=(12, 9, 5)
uop_3731 = relay.sin(uop_3722.astype('float64')) # shape=(12, 9, 5)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_3738 = func_3419_call()
call_3739 = func_3419_call()
func_1445_call = mod.get_global_var('func_1445')
func_1448_call = mutated_mod.get_global_var('func_1448')
call_3743 = relay.TupleGetItem(func_1445_call(relay.reshape(uop_3729.astype('bool'), [12, 9, 5])), 0)
call_3744 = relay.TupleGetItem(func_1448_call(relay.reshape(uop_3729.astype('bool'), [12, 9, 5])), 0)
output = relay.Tuple([var_3684,bop_3704,uop_3729,call_3738,call_3743,])
output2 = relay.Tuple([var_3684,bop_3707,uop_3731,call_3739,call_3744,])
func_3749 = relay.Function([var_3684,var_3703,], output)
mod['func_3749'] = func_3749
mod = relay.transform.InferType()(mod)
mutated_mod['func_3749'] = func_3749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mutated_mod.get_global_var('func_3749')
var_3751 = relay.var("var_3751", dtype = "int16", shape = (105,))#candidate|3751|(105,)|var|int16
var_3752 = relay.var("var_3752", dtype = "int16", shape = (3, 5, 7))#candidate|3752|(3, 5, 7)|var|int16
call_3750 = func_3749_call(var_3751,var_3752,)
output = call_3750
func_3753 = relay.Function([var_3751,var_3752,], output)
mutated_mod['func_3753'] = func_3753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2227_call = mod.get_global_var('func_2227')
func_2229_call = mutated_mod.get_global_var('func_2229')
call_3764 = relay.TupleGetItem(func_2227_call(), 0)
call_3765 = relay.TupleGetItem(func_2229_call(), 0)
output = relay.Tuple([call_3764,])
output2 = relay.Tuple([call_3765,])
func_3777 = relay.Function([], output)
mod['func_3777'] = func_3777
mod = relay.transform.InferType()(mod)
output = func_3777()
func_3778 = relay.Function([], output)
mutated_mod['func_3778'] = func_3778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_3902 = relay.TupleGetItem(func_2067_call(), 0)
call_3903 = relay.TupleGetItem(func_2069_call(), 0)
var_3907 = relay.var("var_3907", dtype = "float64", shape = (12, 9, 5))#candidate|3907|(12, 9, 5)|var|float64
bop_3908 = relay.bitwise_or(call_3902.astype('uint8'), relay.reshape(var_3907.astype('uint8'), relay.shape_of(call_3902))) # shape=(12, 9, 5)
bop_3911 = relay.bitwise_or(call_3903.astype('uint8'), relay.reshape(var_3907.astype('uint8'), relay.shape_of(call_3903))) # shape=(12, 9, 5)
output = relay.Tuple([bop_3908,])
output2 = relay.Tuple([bop_3911,])
func_3918 = relay.Function([var_3907,], output)
mod['func_3918'] = func_3918
mod = relay.transform.InferType()(mod)
mutated_mod['func_3918'] = func_3918
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3919 = relay.var("var_3919", dtype = "float64", shape = (12, 9, 5))#candidate|3919|(12, 9, 5)|var|float64
func_3918_call = mutated_mod.get_global_var('func_3918')
call_3920 = func_3918_call(var_3919)
output = call_3920
func_3921 = relay.Function([var_3919], output)
mutated_mod['func_3921'] = func_3921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2262_call = mutated_mod.get_global_var('func_2262')
call_3945 = relay.TupleGetItem(func_2261_call(), 0)
call_3946 = relay.TupleGetItem(func_2262_call(), 0)
uop_3963 = relay.log10(call_3945.astype('float32')) # shape=(2, 14, 6)
uop_3965 = relay.log10(call_3946.astype('float32')) # shape=(2, 14, 6)
func_2227_call = mod.get_global_var('func_2227')
func_2229_call = mutated_mod.get_global_var('func_2229')
call_3966 = relay.TupleGetItem(func_2227_call(), 1)
call_3967 = relay.TupleGetItem(func_2229_call(), 1)
output = relay.Tuple([uop_3963,call_3966,])
output2 = relay.Tuple([uop_3965,call_3967,])
func_3971 = relay.Function([], output)
mod['func_3971'] = func_3971
mod = relay.transform.InferType()(mod)
mutated_mod['func_3971'] = func_3971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3971_call = mutated_mod.get_global_var('func_3971')
call_3972 = func_3971_call()
output = call_3972
func_3973 = relay.Function([], output)
mutated_mod['func_3973'] = func_3973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mod.get_global_var('func_3445')
func_3447_call = mutated_mod.get_global_var('func_3447')
call_4002 = relay.TupleGetItem(func_3445_call(), 0)
call_4003 = relay.TupleGetItem(func_3447_call(), 0)
output = call_4002
output2 = call_4003
func_4019 = relay.Function([], output)
mod['func_4019'] = func_4019
mod = relay.transform.InferType()(mod)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4020 = func_4019_call()
output = call_4020
func_4021 = relay.Function([], output)
mutated_mod['func_4021'] = func_4021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2705_call = mod.get_global_var('func_2705')
func_2706_call = mutated_mod.get_global_var('func_2706')
call_4058 = relay.TupleGetItem(func_2705_call(), 0)
call_4059 = relay.TupleGetItem(func_2706_call(), 0)
output = call_4058
output2 = call_4059
func_4060 = relay.Function([], output)
mod['func_4060'] = func_4060
mod = relay.transform.InferType()(mod)
output = func_4060()
func_4061 = relay.Function([], output)
mutated_mod['func_4061'] = func_4061
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4099 = relay.const([[[1.066366,9.761878,-5.347138,-2.642129,8.998573,6.640280,2.519009],[5.967848,8.774414,0.489622,-5.815205,1.322779,-7.901958,-8.935357],[8.890219,-0.402237,-9.876689,-5.927337,9.139617,-0.901180,0.760911]],[[-1.604439,-2.199128,7.751262,9.075335,-6.356464,-6.549627,7.181534],[-7.383588,-9.927175,0.075970,1.603478,-5.466815,-2.729618,-2.852045],[-7.477760,9.501333,-0.351717,6.015830,5.808663,-0.239056,-5.458074]],[[-2.081110,-7.450975,7.793274,-0.975617,7.507477,-0.436448,5.464022],[9.467371,-4.353713,-0.079690,9.185468,0.850404,-5.590296,1.214074],[-6.832565,-2.274985,2.338400,-1.431637,2.986329,-2.593387,-6.766270]],[[4.451001,8.213398,2.273343,-4.642616,7.201057,-1.157506,-9.780906],[-3.265837,6.745805,0.070391,9.973801,-9.667535,-4.862380,-7.949371],[4.156603,1.949850,-7.322147,9.096939,-7.819439,8.234738,8.673054]],[[-4.765888,5.432427,5.451029,-2.876488,-6.651554,-4.209552,9.157804],[-7.675792,9.355260,-2.204392,-2.783581,0.207639,-3.836075,-2.744135],[-5.900722,5.076149,0.349839,3.504489,1.066346,-0.413613,9.480992]],[[8.422968,9.737901,-6.054264,3.421881,8.308253,6.303177,7.345140],[5.038117,-7.081437,-2.994774,-2.060747,-6.974051,-9.303300,0.312746],[0.993482,7.124874,5.206561,-0.486038,0.806194,-0.877797,-0.455824]],[[-3.508901,5.091908,5.896869,5.554596,2.924552,0.432127,7.567087],[-3.021456,-0.618516,4.858271,-7.952398,-8.658278,-9.326088,-3.364472],[4.872647,-3.366434,-3.384178,7.313919,7.378311,4.416575,-2.836310]],[[-3.850894,6.522864,1.306690,-8.193935,0.339773,0.649091,-6.311715],[-2.489417,0.941766,8.570915,8.920832,1.222436,0.714149,9.960707],[-1.972536,1.290297,7.768982,6.385092,6.215843,6.760341,-4.689674]],[[-2.795959,-8.137047,0.253553,-3.338439,0.886351,-9.973251,-1.568456],[-2.364494,7.456447,-2.955947,1.319418,6.952675,-1.149057,8.995366],[0.313221,-0.739434,-1.319082,-8.156621,-2.871826,-0.125481,-1.099660]]], dtype = "float64")#candidate|4099|(9, 3, 7)|const|float64
uop_4100 = relay.acos(const_4099.astype('float64')) # shape=(9, 3, 7)
func_932_call = mod.get_global_var('func_932')
func_935_call = mutated_mod.get_global_var('func_935')
const_4104 = relay.const([9.000131,-3.962409,-8.187707,5.183319,2.364065,-1.776716,-8.489146,4.722159,-9.590667,0.037802,2.739312,1.082180,-3.716312,-9.547648,-5.737056,-2.300726,0.169464,-2.318346,-8.837178,-4.969823,9.280320,7.793298,-2.400117,1.695155,-0.880015,5.983140,-2.026750,-5.052412,-9.169587,7.186250,-9.979337,4.984744,-2.183470,2.192498,1.338274,-6.521909,7.617289,-4.684160,-2.871320,-4.097620,-4.127589,4.186157,-0.061776,1.827142,-7.588690,-6.649354,-2.582762,7.620800,2.481424,8.392851,-5.043286,4.406375,7.216782,6.403847,6.355329,-9.337030,-9.983160,2.316661,2.649864,9.897303,2.132520,-2.362047,5.056098,-4.891234,5.576634,2.643977,0.861139,3.608350,-6.268017,-7.495962,-8.238069,4.051564,-7.253001,-4.588231,-9.500857,-3.575509,1.413390,7.771709,-6.433461,2.771767,-5.736757,5.769707,1.866590,-8.425841,-6.701120,-7.443534,-6.486517,6.150781,-4.894190,-9.786558,6.099262,-1.308003,-8.384545,-0.891834,1.546923,-5.152823,-4.524264,7.830146,-2.907425,-2.219011,-8.092257,8.410780,-9.500921,-7.691963,-6.979319,0.252614,0.414504,-1.262058,-1.424424,-9.803312,-0.521864,3.590598,-7.803654,7.464698,-4.149450,1.543367,-3.185497,3.310285,7.715562,1.113477,0.150439,-6.829438,-1.548291,-2.653148,1.216142,-1.110094,6.109794,-4.003159,-3.243267,-4.067298,9.681747,9.891048,-7.511675,9.976262,-8.579624,-0.171183,0.541594,-0.474180,7.645452,-2.100261,7.619340,2.812907,-8.102720,2.227388,1.144875,-2.971040,7.442031,-2.070973,-3.176363,-7.520600,-6.722179,-6.776811,0.021718,6.441288,2.811925,4.590760,-4.382519,9.147743,-8.436094,0.216335,-2.037986,6.369979,4.068242,-9.068214,2.604830,7.055120,3.657324,2.415094,-2.322967,5.404467,3.388107,7.025050,3.625766,-4.128576,6.492966,6.284185,0.543020,2.116924,-6.393232,3.045758,-2.952031,7.383536,-2.004092,-1.666909,3.964653,7.388344,-9.276998,-2.492596,6.246744,-6.332450,-2.066307,6.067833,-6.231424,9.961307,-9.858581,-1.897293,4.465980,-5.881056,-5.455339,-3.741008,-5.791620,-0.994653,-8.694539,1.761965,-6.327823,-6.165783,0.593090,-4.922808,0.346239,4.066877,-2.613324,-1.208541,1.530295,-4.208936,-7.614088,-4.164315,-4.869033,2.251307,3.387195,-3.805544,-4.667439,4.816370,-1.386638,4.780079,5.678539,2.041093,-3.883789,0.522878,-6.982070,-1.390885,-7.879042,-6.116199,1.304865,-9.178113,-2.160149,-0.624893,6.638602,-4.340508,-8.395496,2.077607,-0.931327,9.973610,4.953231,2.923917,-5.006931,-5.467980,-0.828925,1.414014,-4.764570,-0.713021,1.284014,-5.892445,-0.604289,-7.846487,-0.825669,-3.640956,3.867144,-1.306569,-7.202039,-1.129830,2.935544,-6.458461,1.979898,3.935249,0.954648,-1.272720,4.294489,0.817199,-1.653535,-4.698301,-4.888891,9.401019,-3.275992,-1.771383,7.037510,-2.865144,1.024393,-8.192423,-4.835274,-3.940340,-6.309957,-0.240867,9.535192,4.967648,-8.785360,6.264033,6.885666,-5.240748,-5.718433,-4.206984,0.349736,-8.189200,7.394805,-0.201139,-6.085469,5.261222,4.687133,-5.084661,-3.469233,-1.697321,6.743280,6.282185,3.479850,0.784705,-7.237147,5.990625,-6.390669,-7.402166,9.997864,5.441210,5.363543,-4.240190,1.462692,-3.418749,-8.846130,-0.939561,-1.027671,-6.115865,0.078714,9.949778,-5.698850,0.099286,-7.724936,-3.727732,-0.634479,8.821487,1.195851,0.595762,4.540640,-0.233422,-4.030833,1.442125,-1.628091,-1.231111,0.900305,4.658867,7.117693,-1.030146,-3.268554,6.365768,7.849852,-2.587702,-3.923098,9.002846,1.955391,5.369624,-6.059701,-0.156965,4.828867,-3.654571,-2.503878,-8.310670,-2.918523,8.711982,0.380676,-8.437778,-1.132356,8.669199,-9.568045,-3.720114,-4.488450,1.684530,-7.756576,1.759571,1.568332,7.810061,9.851703,7.983675,-1.931229,-4.310231,2.304010,-7.553445,-9.861797,-2.055388,-8.482615,-8.213398,-4.620950,1.391671,-2.543833,-3.882966,-2.159320,8.779077,2.363532,-2.045485,-1.187619,-2.555287,1.788983,3.080649,-2.915843,-9.885614,-7.236530,-8.113204,-7.143232,1.022849,-8.969569,-8.865059,1.107248,8.151788,-9.930244,7.371109,-8.398631,-7.408247,-2.717432,9.305790,4.481703,-1.322954,0.274581,6.968185,-5.059379,-0.213062,-7.617881,-0.527421,-2.272881,7.644215,1.467141,0.184089,-7.867096,3.494731,5.431522,3.693994,-8.484918,-4.371342,-9.772603,8.786982,6.457017,-0.084969,3.999244,9.213984,-4.996243,-8.347530,5.637362,8.620095,-5.250721,9.195378,-8.261934,-9.473855,-1.500812,-3.371782,-4.199792,7.776428,3.761721,-2.860889,-1.534533,-4.859879,-6.475012,-8.533894,8.679044,5.963555,-0.724783,2.124544,0.461650,2.219792,8.640034,8.449832,-1.629064,1.684543,-3.354758,-6.991045,5.350668,1.376376,1.854391,-7.810924,3.526800,-6.887070,-8.219944,-0.140203,-8.859660,9.038262,8.142221,2.537439,8.799271,4.876698,-1.124317,5.425386,3.480218,8.976129,-3.662319,9.447570,6.522168,-6.850595,4.763229,-9.162588,-4.947669,6.889103,-9.254068,1.238603,6.211622,4.025820,-1.037181,-0.609048,2.529120,4.699134,7.402646,9.379217,-1.247151,-7.295540,2.319558,4.494875,-2.909301,0.068995,-1.652612,-1.937007,-6.791192,0.140059,-4.212287,-3.541946,-6.090348,-8.620566,-0.679241,-5.386635,9.360884,-2.567985,7.005854,-1.368614,9.939275,-9.936375,1.079464,1.532079,-7.197857,-9.183451,-2.966199,-6.566011,-9.613534,-8.009160,7.397936,-6.975305,3.206587,3.206326,-0.690374,-7.040573,3.339880,2.948269,-8.768370,-0.748922,-9.466183,2.488334,5.283895,7.735143,-2.783227,-5.139595,-2.672750,-8.927008,-8.185186,5.888040,-1.527813,-4.884156,-6.202476,-5.719490,-6.754572,-2.686838,3.968995,-0.887589,9.953002,5.657090,6.298122,3.482854,-6.737331,-1.757847,9.402998,4.987016,5.739570,-5.848718,-0.470813,-7.488123,7.442524,4.999751,9.829913,-9.284406,6.189405,-4.654984,8.177282,-9.539952,-9.579551,-6.344717,-8.120171,6.325316,4.290726,-4.168816,-4.613667,4.668636,5.905489,-3.889668,-6.156455,6.389790,-0.747548,-8.671497,-7.216420,4.564628,5.581670,-6.901822,-4.310615,-8.315488,9.092736,1.797505,3.692159,-8.601307,6.813643,7.935269,9.758048,5.537107,3.885435,0.495477,-6.913210,-9.527904,4.865357,-9.402031,-0.559082,4.107345,5.572175,7.227360,5.310596,0.028458,-7.764441,-6.493924,7.283508,-9.677998,-6.537043,-5.532970,-1.024227,-6.977055,-5.831033,8.471641,3.282159,-5.517814,7.771973,-4.348735,8.029476,6.856100,-7.049264,7.086245,2.459039,-7.667755,-2.227680,3.234007,2.998906,-0.232216,-5.345580,-6.667869,-6.899418,-5.978556,-1.118645,2.955860,-6.730455,-1.855123,-7.694580,-5.593022,1.844902,0.175795,-9.683146,-9.618751,5.706958,0.730852,6.326500,7.965308,-7.856329,1.864094,-0.409642,6.816145,-5.331163,-7.935369,2.998768,-0.814307,1.953204,-0.711439,-7.269150,-5.663894,4.082207,2.639798,3.041577,2.234617,-2.825426,7.083783,5.929864,9.489713,-5.749970,-1.812314,3.155905,-5.867761,6.351494,-3.599210,6.464944,6.670939,-7.007869,6.276229,6.388832,2.692588,-0.993341,2.234538,3.397596,5.575381,-0.636476,-8.759116,-2.563935,-0.620550,4.929937,-4.560635,2.436873,-4.220370,-7.002557,-5.982337,-7.947103,-1.298812,-7.354547,-8.630362,-7.009785,2.813665,5.665226,-7.567690,-7.101901,9.619560,6.265125,-2.024588,6.648046,-7.969934,8.060762,-5.734561,9.380326,-2.835170,-4.448691,6.436023,-7.859569,0.217416,-5.469868,6.534004,-7.485311,1.786803,-0.604794,3.270657,-0.322930,-6.654661,-3.349477,8.569026,3.506151,5.093641,-3.683584,-4.965325,6.851197,-6.565902,-3.976955,-4.435084,4.412126,-1.378779,2.080471,0.916233,-0.389809,6.857535,-8.418672,-6.918108,-0.840465,4.856003,-1.213201,2.596040,5.502582,-7.680027,-9.726204,0.744594,-6.811898,2.648980,7.532055,5.420580,-1.244480,-4.735100,2.393937,-7.933242,-6.853690,-8.295318,-2.439291,-3.298008,4.598235,8.187509,4.606374,6.832048,-2.824427,4.458196,-0.675867,7.284457,-3.464545,1.859431,-9.754223,0.489846,-3.968300,-9.787518,-2.471769,-0.305503,0.545248,7.899051,-0.667805,-6.662170,6.076565,-9.230023,-4.187215,4.323709,5.527707,-8.974016,-5.747009,-3.800495,7.772163,4.856354,5.297484,1.676514,6.590204,3.113492,-8.501001,9.610239,-8.565793,0.752063,9.633279,4.261498,3.026378,3.130549,6.675545,-9.267895,-6.378774,-1.796699,-7.869209,-3.667455,-3.358714,1.812766,9.006401,9.172417,7.757794,-3.959230,3.082292,9.116807,0.245388,-6.420573,3.895663,7.392293,0.228534,8.823968,1.922115,3.937661,-9.968671,-7.845628,7.348655,1.099834,-4.821292,-8.869198,2.025509,7.829907,-9.004401,3.684024,-5.125905,8.441374,5.067615,7.647265,-1.308620,-8.282399,-2.080018,-4.376804,-7.467004,-8.080598,1.828213,-2.030074,-5.968029,5.827305,-7.765493,-8.704399,1.293639,-0.592308,1.997726,0.669181,-0.336555,-8.172665,8.432704,2.748777,-7.771573,-5.403441,-6.085550,-9.279491,-3.979035,0.171811,-7.185078,-3.682311,4.742798,-8.910833,-7.606849,-1.586537,-7.360683,0.033556,9.784886,9.197732,-2.938506,6.962840,1.447209,-1.055916,2.816608,-7.613962,2.262011,7.699401,8.578873,2.753263,8.770511,-8.250031,-5.026655,6.629300,-8.789826,8.903187,9.290049,1.908015,-6.862815,-3.273179,7.038046,-2.947468,6.779295,7.759153,1.993702,2.323589,-7.279411,-3.914676,5.642992,-6.338282,3.504351,7.940792,-5.145608,0.402192,-4.905480,-4.170268,-1.975073,-3.981362,-1.108234,-7.316998,3.146746,1.195588,5.520515,-5.630862,7.226255,8.799805,8.544830,9.608994,4.350615,-5.325497,4.993142,-1.971615,6.165837,7.798938,-0.963921,-2.141548,3.954734,-8.203664,7.293524,-1.942025,1.373097,5.201092,-3.282711,7.176202,0.407183,4.845712,-8.923411,-7.219867,-4.779777,-7.040531,5.822197,-8.442047,-6.227190,-7.492904,-0.890385,-2.887207,-2.540966,-5.401851,7.966312,-7.600427,8.935724,9.254901,7.624481,-6.440710,5.872767,6.510242,5.788317,-9.875192,-9.539856,8.077214,4.703399,-0.845474,-1.070495,-8.787843,-3.520831,-5.752289,-5.363675,-8.618385,-1.986880,9.417223,1.152826,-7.869617,8.349113,-2.092870,2.392730,-7.150079,2.269203,-3.998051,1.721046,5.625735,-0.154037,0.620559,2.443964,-5.032892,-5.882809,-0.257636,-5.844885,-8.115361,7.620604,1.107080,6.619752,4.099758,6.263754,-7.068612,-4.892295,-9.081991,8.339904,4.611961,5.353682,-6.192320,1.868923,3.103778,-4.012668,2.522422,-5.874497,-3.507335,-7.475269,3.743514,-0.561426,-4.837415,7.205940,0.821604,4.815776,-2.244759,-9.866593,-7.650332,6.522337,-2.459606,-7.937546,1.172483,-2.951672,-9.662525,0.397363,-4.046870,8.167974,-9.354229,-5.730850,2.367951,-9.822056,-8.792058,1.099627,-1.039545,1.286216,-7.120661,0.867703,-5.430876,2.710504,-5.067672,-3.467749,-0.155617,-8.328435,7.215912,-3.405855,-1.324583,-5.030223,-4.103484,2.686069,-3.795164,8.826081,-3.802285,-1.134119,-7.595344,7.992465,-6.393029,-0.314400,1.723326,0.929327,7.168738,-6.483611,-9.207344,-4.595183,-6.194718,1.358286,-3.723855,7.582688,8.423037,-4.155625,5.560166,6.874828,4.702039,8.962839,-4.725807,1.911232,-3.295260,4.635410,-7.992865,1.275779,2.254215,3.279985,5.875921], dtype = "float64")#candidate|4104|(1092,)|const|float64
call_4103 = relay.TupleGetItem(func_932_call(relay.reshape(const_4104.astype('float64'), [14, 78])), 0)
call_4105 = relay.TupleGetItem(func_935_call(relay.reshape(const_4104.astype('float64'), [14, 78])), 0)
var_4116 = relay.var("var_4116", dtype = "float64", shape = (1092,))#candidate|4116|(1092,)|var|float64
bop_4117 = relay.not_equal(const_4104.astype('bool'), relay.reshape(var_4116.astype('bool'), relay.shape_of(const_4104))) # shape=(1092,)
func_721_call = mod.get_global_var('func_721')
func_724_call = mutated_mod.get_global_var('func_724')
var_4122 = relay.var("var_4122", dtype = "float64", shape = (420,))#candidate|4122|(420,)|var|float64
call_4121 = func_721_call(relay.reshape(var_4122.astype('float64'), [15, 4, 7]))
call_4123 = func_721_call(relay.reshape(var_4122.astype('float64'), [15, 4, 7]))
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
const_4128 = relay.const([[5.836390,-8.935382,-5.725136,8.421443,-2.362758,-4.761506,3.669591,-1.713955,5.232016,-4.687940,-9.285163,9.397128,8.720577,7.813871,1.982773,-3.505799,-5.503741,-7.666074,-1.114150,5.656606,9.990003,-7.145350,-8.154135,0.822485,-5.312755,7.090169,-5.290139,-0.018653,6.938861,0.193692,4.200312,-3.156852,-5.150165,7.863298,-8.960766,-0.966564,-4.665183,4.435177,5.491439,-6.733244,-1.969970,-4.563467,1.192098,-5.738090,8.228696,6.371216,1.180706,-4.724885,-5.980336,9.262145,-3.796381,6.285245,-8.096911,3.013508,1.274207,-9.927428,8.206127,-9.823234,6.372519,-4.937993,-0.838884,5.886887,9.503187,6.646497,1.138331,-3.249998,-9.435984,8.640248,-3.542498,5.015963,-3.173258,7.292752,-7.577005,-1.940620,-5.503319,-9.169404,2.056486,5.378392,0.643787,-6.340795,2.103915,-0.346807,-3.278200,-3.599802,-8.927942,-4.327794,9.201482,5.042429,4.669555,9.772449,-0.954779,-3.409157,-6.668215,-4.407714,8.010185,-2.848434,0.894183,-4.626500,-3.762268,7.231541,-7.035105,-2.712281,5.507437,-5.887338,8.493776,4.055999,6.886626,6.296021,7.732222,-1.781847,5.301697,3.972175,1.006282,-8.793400,-0.289099,1.435849,-5.744051,9.039467,7.233998,-5.717641,7.326919,-0.047523,-2.963716,-9.889188,6.544374,-5.393264,-0.208377,3.066328,9.245112,0.504227,3.164650,8.817472,-7.600822,-8.232084,-4.028400,6.191364,-4.692521,-7.032176,2.457015,-5.349904],[8.256487,9.853505,-7.741637,-8.491983,3.110289,6.601611,-1.617747,-1.438581,6.233008,-1.439497,6.260884,-6.641005,9.280678,-9.431163,7.160636,4.773783,5.356151,-5.255856,0.754937,-5.175640,3.425416,-1.252339,-3.460473,-1.899676,7.915936,9.932875,-0.200536,-7.925667,-0.438463,7.793899,4.904268,1.288769,2.415913,-1.679206,-0.370434,2.137611,-8.136523,9.056785,-3.498612,1.860596,-3.744258,5.620207,-0.741322,-5.812952,-2.649782,-1.817597,-8.852315,7.789538,-6.401503,-1.357579,-1.163252,-3.686092,1.755816,6.226062,7.025104,1.390180,0.100758,9.732319,-7.896265,-0.550804,0.747823,-7.627759,-0.129225,0.868941,4.180315,1.011980,-3.964928,8.816470,6.003203,0.009078,6.534979,-6.028793,0.025044,-0.996722,6.523977,7.225894,5.061688,-5.936263,5.355661,-3.762492,-5.594251,-8.729627,6.898982,-0.507452,-7.029408,-6.490570,3.907190,-8.816623,-0.994951,-8.495103,8.272377,-8.813057,-4.937730,3.453466,-1.301304,-1.289757,0.282093,3.789057,-0.257434,-4.613011,-0.380031,-2.451167,0.344310,-9.708998,8.625658,-4.730925,-9.202755,-8.804875,9.258985,-1.896016,5.156156,-9.136272,1.879728,-8.995506,-6.069910,-3.718743,1.488601,-9.059527,5.856561,-8.926912,1.511739,-6.720131,9.473732,-7.844625,-3.807206,-9.430718,-4.925169,-8.732721,7.520758,1.062962,4.386093,-3.302561,7.861442,-5.658486,4.922577,4.968279,4.817077,6.183524,-3.028882,1.011392],[-8.846681,6.661364,8.198787,7.264451,-3.334887,-1.102164,-0.806099,-6.991623,1.060772,3.336495,2.463552,1.070537,-3.701958,9.547298,8.990242,9.395975,-7.298145,-7.074186,-7.888104,-1.596133,-4.909199,6.143314,7.377946,-3.635518,-1.131249,-6.147566,0.161289,-8.129939,-9.722962,-6.172253,-4.158271,8.024770,-5.938237,-0.206444,7.876237,7.687340,4.280014,5.990065,-2.185809,8.563085,2.116142,-8.179689,-7.760695,-7.897100,-5.738950,-0.948630,-1.049234,-6.127655,6.146818,2.435334,7.155299,-9.634270,2.785233,-0.301436,-0.580572,-8.236065,2.219490,-0.683971,4.468524,-3.596186,6.733314,8.821549,-8.475999,5.424481,-6.580511,3.240801,7.681029,8.322231,8.855503,6.260805,6.735721,1.650629,-1.507448,-3.873554,-3.286803,-9.722083,4.577778,5.191503,8.395064,9.765367,2.158369,7.283169,2.873703,-2.179695,-0.909159,-0.970540,7.362183,-8.108667,7.968878,-6.134844,3.453702,0.153963,-7.130369,2.042038,5.030419,9.371853,2.090111,-3.697069,9.069305,0.005974,-3.357659,-4.243208,5.663823,0.193078,6.795319,-3.087248,-7.646166,-7.751336,-1.872230,-6.846568,-5.601253,-5.043521,5.373612,-2.135583,5.762582,-4.783218,4.278083,-0.860300,-2.839883,9.024427,5.313492,-5.696189,-1.046701,-3.961076,-4.860764,-0.971385,-5.191532,-8.270069,5.525219,3.929592,-4.482149,-9.020936,-8.260526,-0.216836,3.646034,-6.904515,5.133556,-9.970395,3.695668,-8.136110],[-4.935196,1.009540,-2.226301,-8.697869,-7.061249,-9.264909,2.213170,8.904839,9.925614,-0.765328,1.891597,0.626179,-4.468226,-0.493053,-7.737868,4.140235,-7.137473,-7.896238,2.492682,-5.829144,-5.545834,-2.648069,-1.262722,6.054424,-4.920755,-1.086621,-0.312259,-7.429027,5.585236,2.745268,-9.333233,-2.028395,9.776064,6.288959,3.126601,-9.307438,-1.625306,-7.708285,-5.442355,4.771551,4.903945,9.174666,1.534864,-2.393437,-8.628568,5.584510,6.621775,5.383846,-5.721695,0.055995,4.785621,9.734772,-1.483738,-6.870542,3.374908,4.778769,8.693636,-9.925053,3.346749,7.520361,-2.534917,-9.131970,0.219916,-8.729616,-0.653677,9.410362,-5.476439,6.091956,-5.562100,7.871859,0.466520,6.629774,3.587512,-7.474004,-9.899973,1.921559,-1.278834,-2.938907,4.832577,0.651694,-1.180304,2.565334,5.560340,-9.031817,-5.428484,6.361405,-0.523698,-3.596517,-4.803003,-2.659646,6.587529,-7.653151,1.086302,2.966130,1.715894,-3.344037,4.693344,-8.659432,5.150870,3.596696,6.709068,3.482683,1.585908,7.495828,-5.951671,-8.667950,3.824555,4.319821,-0.728499,-2.902926,0.171746,7.409589,-1.650813,7.153520,-0.043212,-9.931508,3.145916,-4.578985,9.712447,0.090201,1.083421,0.031293,-7.082926,-9.784832,3.881095,-7.159121,8.349841,-6.508554,-2.865735,7.671060,-4.534503,-2.256066,-3.972756,-5.411853,-9.574063,0.617482,0.601562,7.649798,-6.567437,-0.496958],[-8.661921,-7.313311,2.120269,3.423202,0.503520,-1.321675,-9.945879,2.178923,8.292524,4.871474,1.654033,-5.864047,0.394369,-6.466738,5.026854,-1.889811,-1.252465,1.554859,8.323630,3.564872,-6.000197,-7.055579,-4.026191,3.089061,9.427044,0.411949,4.054103,2.460072,6.837105,-5.947993,8.813463,-3.725496,-4.403361,9.179378,0.316794,-9.647882,-0.016944,-1.782096,-9.668162,3.655742,-8.537712,5.495133,-4.239654,2.827873,-4.494439,-9.873697,-1.115742,9.437819,-3.925402,-2.861289,9.032583,0.408701,9.162985,-0.512040,8.437357,7.885347,1.558606,-5.934994,6.483687,2.973101,5.196043,2.754922,7.483143,-0.569336,2.399312,1.707214,5.877629,1.568301,-5.799195,3.640086,0.625956,-5.245919,0.833573,-4.110275,-0.459426,-0.471570,5.700105,1.902730,9.831888,-0.258208,-5.587051,1.582350,4.239233,-3.889379,4.709286,3.993204,-8.154294,9.344164,-9.462141,-0.852596,2.259115,8.964621,3.942586,4.900286,-6.100439,6.530107,6.202723,2.041281,0.117691,8.934333,0.758257,6.698615,-7.597896,9.674255,-1.706159,1.610927,-5.928769,-0.839859,0.275661,-9.608392,-4.875167,-5.335462,6.023513,-8.406555,0.500027,8.354893,-9.007348,-6.074509,7.186691,-4.837112,4.635784,2.424700,-5.695380,2.528139,-1.921971,9.426991,-2.631406,-4.811210,1.599747,-3.333377,-4.144467,8.398921,9.875435,9.176888,6.345382,-0.645858,9.259680,3.357764,-0.353367,4.074769],[-7.128900,4.650098,-7.465764,-2.735459,-3.358841,-4.774676,-7.267066,6.321992,2.378798,-8.559012,-8.787541,-1.891401,7.352038,4.259021,-2.270257,-9.302104,-7.405936,2.633264,6.150792,-9.374581,8.727095,0.127893,2.948440,2.995258,6.481947,4.243513,-0.427016,-8.982217,8.495282,6.770041,-1.659459,5.129461,0.673713,-0.990852,-2.950988,-9.166164,2.989139,-9.409618,6.565305,-9.483791,4.429452,-5.991434,0.594204,3.934907,6.578035,-7.664348,-3.017377,-9.805455,1.912230,1.607655,1.127783,7.593137,5.353036,0.014893,9.381772,2.651947,-1.416244,-9.597715,-3.113312,-9.730052,9.932064,-6.625827,-2.128220,5.328273,1.955454,-6.860983,0.059205,6.513693,1.238399,0.044930,-7.017271,8.672081,-2.347108,-9.660073,-2.048577,-3.061965,-8.339882,2.239319,9.143320,-3.132390,9.027739,-3.922747,-8.567715,0.961049,-0.268520,-8.589894,-5.607580,1.947494,7.175482,2.255093,5.140449,8.381731,-0.780903,-3.375569,-9.137568,-5.349911,6.128476,-5.545936,0.414118,7.799524,-1.892084,-7.037154,-5.146682,4.259459,-9.865671,5.302641,4.302649,0.883041,8.938815,9.889584,-3.332469,-4.525305,-1.786339,9.234682,-2.056860,-1.317100,-5.660485,7.312526,-7.846216,-5.830344,-2.660116,-6.410824,5.437533,0.916509,-7.738813,-8.164852,6.703011,-8.585249,1.437499,2.228414,6.396896,-1.728453,-8.870572,-9.106137,-2.970595,4.670696,-9.928248,-9.114037,3.843239,-7.979164],[0.600933,-3.414745,7.951194,-5.900903,-4.617280,8.605579,3.814395,8.203065,5.628284,6.236640,0.470278,-5.138118,-0.708686,8.619639,5.873406,5.923169,-0.890405,7.776812,9.321124,-8.364344,1.997065,2.028446,8.279192,-4.717186,-2.125063,-9.123167,9.303200,7.645642,-6.032440,5.674270,-2.987386,-2.985397,8.977354,5.380482,1.896715,-9.841639,7.161401,-3.628577,9.617943,1.987061,-0.575119,2.386106,5.307353,2.378626,6.129420,1.849453,-3.926277,-4.440752,4.474177,-8.484564,4.260691,2.466061,-3.635319,3.253960,-6.557794,5.673524,-2.055921,-8.462020,3.332049,8.999669,7.510672,-9.338210,-2.614427,7.812851,-5.287822,6.075613,-3.358061,-9.150302,-1.697111,-0.111413,3.308292,8.395248,-8.861779,5.354778,5.013594,-5.954803,6.821392,-2.395999,2.413038,3.607458,3.251140,6.956581,5.644738,-9.886041,2.367300,-2.641159,-5.613685,4.858751,-0.282442,-2.700026,0.086676,-1.138649,-4.635988,7.197154,-2.304145,8.367799,2.993569,3.709369,0.481535,-2.627636,8.252505,8.140251,-4.834383,-5.340002,1.121492,-3.511059,-2.475395,9.106502,-1.762356,-5.232736,4.251913,-8.953718,3.356821,9.528182,-2.565393,6.339108,-2.463809,7.558081,9.216936,8.692481,7.179426,-4.654063,-3.226585,-8.451619,-8.094395,1.984351,-7.821558,-8.125639,-0.301636,-8.528952,8.212951,-9.107070,-3.721423,-3.853187,2.920123,-4.794699,4.995808,-5.325469,-6.635322,-7.380729],[-7.976573,-3.608105,-5.566637,-6.823262,-0.534690,4.878024,-5.744325,-0.255684,0.048961,8.390655,-2.289636,4.655625,-1.257989,-3.381860,-9.447019,7.218153,-6.897148,-5.511473,-3.073728,1.084321,5.217278,-5.443944,-9.808622,0.104892,0.546925,7.243756,-0.449885,4.698921,-4.221297,-6.088763,4.591291,6.576011,9.412920,-9.376578,-0.586918,8.454865,-5.918254,-3.179450,-9.416600,-5.206487,-5.854393,7.874596,2.130621,7.559578,-8.333761,-3.278009,7.964974,-2.629556,1.440213,-6.334683,-9.223377,-5.620969,7.244944,-5.532312,-1.651422,0.736118,-1.848548,3.320509,6.036030,1.239760,-7.100226,7.306839,-8.704544,7.866970,-2.388491,0.403340,9.228470,2.535710,-9.507598,-9.184328,7.154237,1.227580,-2.939720,1.141651,2.565958,-8.814367,-5.303425,9.971139,9.681773,7.507254,-2.059316,-4.463871,-2.354036,-2.225634,2.294686,9.327536,-9.464535,-5.505150,5.786973,4.798578,4.198132,8.322749,5.438282,-5.090660,6.656185,3.960498,-3.816698,9.435850,6.941177,-0.369373,-4.481478,3.622038,-6.350333,1.249040,7.104895,3.828768,-3.941316,3.825275,1.056161,-4.478350,0.034794,6.034935,-3.687449,-2.509667,-1.116522,-6.786976,-0.110094,-7.241905,-3.512894,-7.235247,-6.166194,-7.045214,-8.157472,-9.066297,0.873327,-2.422478,-0.272168,-8.634748,-1.436377,9.513766,2.784736,4.416780,5.020807,9.618816,-6.609250,-0.374751,8.126884,0.334091,-1.454983,8.898345],[6.206087,-9.413647,0.754553,-0.471212,8.631442,9.483502,0.369105,-8.862897,-0.101250,-9.268777,1.880959,3.508778,7.295528,0.334880,-7.406139,9.572092,-5.705607,-0.090904,6.471524,-0.963672,-7.847147,0.809129,-4.834881,-9.134552,3.504117,8.528483,9.162256,5.992728,-8.877990,-0.823274,-4.482899,-3.779390,7.500881,-0.363857,1.997111,8.749498,-7.631053,7.100290,-4.079568,9.510602,8.924271,0.982177,1.346698,8.761159,2.255426,6.201080,-1.230385,-2.165472,-4.551966,-0.461932,4.481492,2.516384,-3.308504,8.648805,-3.780285,6.830206,3.509977,4.691358,6.647871,-9.593550,-1.298102,-6.161962,7.403576,2.955176,-5.641673,7.468203,7.002321,9.278375,-2.206520,5.149955,-9.826671,-5.321451,0.199132,-1.677563,-3.584320,7.680134,-6.170329,5.851943,-6.268765,1.389566,-9.649914,0.370147,0.485758,-9.363989,1.673913,9.188865,-2.540875,7.802897,9.580744,-1.540034,4.135423,-5.290870,-6.579849,0.213884,-5.813188,0.330832,-5.821466,2.102947,2.574089,2.241276,1.755064,-8.978951,-2.831152,1.529966,-3.951375,2.538567,5.955769,4.001630,-2.156368,-7.283707,-2.959181,0.219606,-5.652401,-8.243286,-4.201162,-5.654315,-8.256751,9.827113,5.157993,-0.937779,7.763423,3.322098,-7.513760,-2.976450,4.008539,1.649479,-1.163864,-4.208207,1.589786,-0.849802,-3.638882,8.182202,-1.124186,0.504415,1.764306,0.258365,-2.633637,5.155775,4.062748,7.733745],[1.043064,-1.058480,4.928722,-9.824191,-3.591825,1.950929,-9.796665,9.674842,2.016943,-7.261559,2.036793,3.397820,-7.659472,-1.911946,-3.724694,-2.422473,-2.187466,6.327231,-5.613248,2.814633,8.096554,1.778546,3.523639,-7.675897,-1.249959,-9.491045,-2.319565,6.723128,-3.229293,-7.827715,5.326546,-5.224536,-2.515418,0.473382,-2.545563,7.170156,9.560837,5.560805,0.769897,-7.845943,-6.539830,1.441284,-3.247108,2.342992,-6.322203,-3.042016,-2.294451,-0.054373,-5.371395,2.708976,-6.259176,-2.799613,-2.343141,-9.926354,0.514904,0.957542,3.081978,-9.957442,8.976150,7.573875,-0.391802,6.150579,-9.536350,4.612351,4.288034,8.500307,9.471431,-5.099755,5.040672,8.420667,1.505927,-7.713840,-3.389322,-0.860862,-8.856499,3.132340,7.358130,-8.351123,-1.502058,5.241325,-5.159794,7.623083,-8.331492,4.220120,7.382762,6.458804,8.268498,2.756487,-4.231335,8.411916,0.876951,5.336933,3.828361,6.295444,7.426539,-5.520680,1.987900,8.279547,5.971851,-2.089473,-1.282697,3.145430,8.947350,2.968055,-0.555761,4.995977,6.620415,6.298972,-5.888925,6.481040,1.716037,8.288853,6.851021,-6.015662,-1.553672,5.088870,-3.023255,-2.516671,-6.294199,-2.326247,7.449471,-3.765802,-7.621802,0.759682,-0.970601,5.199046,-0.374372,2.108817,3.495241,-8.721502,-5.409311,-0.526798,-8.392903,-9.310535,-5.015804,-4.431097,-2.754510,7.157500,-6.838961,3.753474],[1.088233,-2.555280,-1.559842,2.709931,4.658922,5.001600,-3.832973,3.726597,-6.939368,2.394927,-7.146180,-2.087160,-5.207008,3.960671,9.154405,-2.844825,1.462819,-3.357255,-3.029264,-0.641258,-0.324401,3.267526,0.971154,5.388181,-9.997538,6.334526,-6.673750,-4.100259,2.314740,3.194348,-5.936333,9.403824,-2.170118,8.408821,1.631125,2.553696,3.615298,-2.428651,5.443562,7.329289,-5.170848,-7.494797,-1.139568,-4.641216,-6.556198,-9.749515,7.711051,6.147192,-1.376553,-0.545832,-4.231718,7.589074,-8.776935,-1.986186,9.021760,7.937367,-7.915234,7.906473,-8.130658,-4.152271,0.981973,-5.599937,-9.389670,2.059887,-0.187290,8.029637,5.517671,0.886551,-0.558938,6.141771,0.620492,-6.128251,-3.519067,-0.408363,5.563604,8.239361,-2.562118,2.747108,6.879703,3.795046,-0.427695,-0.849900,9.794589,2.712135,-5.191409,2.591342,8.514670,8.458388,4.886767,8.135337,7.743026,-8.668314,-2.167416,-7.547045,-5.512129,2.788019,-8.044992,-4.609225,8.056457,-4.496584,-5.592648,5.400447,3.538068,8.263601,2.308596,0.037296,6.987622,-7.513557,4.886652,-1.222922,-2.880539,-8.836719,6.635274,-5.869805,-3.163536,-8.237310,-1.760373,-2.440206,8.208258,5.086434,-5.860726,9.650808,-3.740530,8.436240,-1.687467,0.030127,-7.049461,-2.517110,-4.992989,-6.759229,8.668660,5.454349,4.805549,3.026555,4.611381,6.687649,6.535697,2.195990,-6.902677,3.247662],[-5.942015,0.710344,-4.035997,7.044487,-8.808524,4.925072,-9.938303,0.836890,-0.853056,-0.457102,1.501714,-8.041842,-1.472601,-0.117090,-7.719320,-4.401949,-5.326706,5.612320,7.348884,7.528263,2.395184,9.127365,0.999377,0.975153,4.315617,6.026695,3.967074,9.695745,-5.650057,-6.927034,3.480657,2.121251,-3.703000,-5.194073,0.708770,8.657190,-0.089944,5.373507,6.340568,9.791284,-1.988300,-8.791905,-1.047687,-3.876316,6.822816,-9.512803,0.673580,2.506443,-0.889868,8.950370,4.526471,-2.989333,7.376110,-4.727324,-9.365011,7.103877,-0.250754,-3.495289,6.804887,5.524575,0.439297,2.641496,-6.323904,-3.995604,-8.290042,-2.845291,-0.140885,1.920897,-5.424050,2.103371,0.796471,-9.587209,-5.769823,3.672671,3.534485,-2.120565,-7.402479,3.904742,-6.223586,0.408739,6.145347,1.561946,9.832589,9.007051,-6.004424,-6.502155,7.837053,7.558485,-0.065327,4.420591,-8.373062,-5.317292,9.429086,4.123177,-5.398933,-1.023764,-7.340576,8.576083,-9.469200,-1.093216,9.605214,-6.502089,4.284472,-1.864888,-9.709261,7.902943,-2.122212,3.646058,1.151778,2.613313,-7.540815,7.859514,5.868509,-3.932516,1.645791,-1.734490,0.998648,4.419462,6.491808,-0.913228,9.780772,-8.800286,-5.180433,2.022806,-2.964831,2.343262,-7.106636,0.053918,8.641614,4.433714,-0.658262,-3.118088,-7.935755,-7.933247,1.241512,-2.400366,-9.375708,-6.166842,-2.068182,-9.032635]], dtype = "float64")#candidate|4128|(12, 140)|const|float64
call_4127 = relay.TupleGetItem(func_1598_call(relay.reshape(const_4128.astype('float64'), [7, 15, 16])), 0)
call_4129 = relay.TupleGetItem(func_1600_call(relay.reshape(const_4128.astype('float64'), [7, 15, 16])), 0)
func_2813_call = mod.get_global_var('func_2813')
func_2814_call = mutated_mod.get_global_var('func_2814')
call_4134 = func_2813_call()
call_4135 = func_2813_call()
func_3662_call = mod.get_global_var('func_3662')
func_3666_call = mutated_mod.get_global_var('func_3666')
const_4151 = relay.const([2.290028,-6.931091,-9.157154,-5.943494,5.123440,-5.781473,8.684586,-8.018602,0.434918,0.305933,-6.631330,9.219138,-1.639076,-7.834547,1.647670,-7.922891,-4.732611,-9.796731,4.711387,-9.688706,0.305530,7.281798,-3.233306,-7.770264,9.643203,-1.021676,4.610744,1.181642,-9.937217,-1.160109], dtype = "float32")#candidate|4151|(30,)|const|float32
var_4152 = relay.var("var_4152", dtype = "bool", shape = (98,))#candidate|4152|(98,)|var|bool
call_4150 = relay.TupleGetItem(func_3662_call(relay.reshape(const_4151.astype('float32'), [15, 1, 2]), relay.reshape(var_4152.astype('bool'), [98,]), ), 4)
call_4153 = relay.TupleGetItem(func_3666_call(relay.reshape(const_4151.astype('float32'), [15, 1, 2]), relay.reshape(var_4152.astype('bool'), [98,]), ), 4)
var_4160 = relay.var("var_4160", dtype = "float64", shape = (9, 3, 7))#candidate|4160|(9, 3, 7)|var|float64
bop_4161 = relay.bitwise_or(uop_4100.astype('int8'), relay.reshape(var_4160.astype('int8'), relay.shape_of(uop_4100))) # shape=(9, 3, 7)
func_4019_call = mod.get_global_var('func_4019')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_4168 = func_4019_call()
call_4169 = func_4019_call()
output = relay.Tuple([call_4103,bop_4117,call_4121,var_4122,call_4127,const_4128,call_4134,call_4150,const_4151,var_4152,bop_4161,call_4168,])
output2 = relay.Tuple([call_4105,bop_4117,call_4123,var_4122,call_4129,const_4128,call_4135,call_4153,const_4151,var_4152,bop_4161,call_4169,])
func_4174 = relay.Function([var_4116,var_4122,var_4152,var_4160,], output)
mod['func_4174'] = func_4174
mod = relay.transform.InferType()(mod)
mutated_mod['func_4174'] = func_4174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4174_call = mutated_mod.get_global_var('func_4174')
var_4176 = relay.var("var_4176", dtype = "float64", shape = (1092,))#candidate|4176|(1092,)|var|float64
var_4177 = relay.var("var_4177", dtype = "float64", shape = (420,))#candidate|4177|(420,)|var|float64
var_4178 = relay.var("var_4178", dtype = "bool", shape = (98,))#candidate|4178|(98,)|var|bool
var_4179 = relay.var("var_4179", dtype = "float64", shape = (9, 3, 7))#candidate|4179|(9, 3, 7)|var|float64
call_4175 = func_4174_call(var_4176,var_4177,var_4178,var_4179,)
output = call_4175
func_4180 = relay.Function([var_4176,var_4177,var_4178,var_4179,], output)
mutated_mod['func_4180'] = func_4180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2286_call = mod.get_global_var('func_2286')
func_2287_call = mutated_mod.get_global_var('func_2287')
call_4200 = relay.TupleGetItem(func_2286_call(), 0)
call_4201 = relay.TupleGetItem(func_2287_call(), 0)
func_2581_call = mod.get_global_var('func_2581')
func_2584_call = mutated_mod.get_global_var('func_2584')
const_4211 = relay.const([-2,-7,-9,4,9,4,-6,8,-7,-9,1,-6,-3,-9,7,-10,-8,-8,9,10,10,9,-10,-1,-1,1,-6,-10,-9,-7,-8,9,-4,-3,-1,-3,9,-6,-1,4,-9,-4,4,-3,3,-1,-7,-7,7,7,2,-8,4,-8,3,6,8,7,6,-3,10,-9,4,9,3,1,6,6,5,6,5,10,-4,5,6,8,-4,2,-1,1,-5,-9,2,-4,9,-5,-3,-10,-3,-6,3,-5,-9,4,8,-5,-8,5,-2,-8,-10,-5,-9,10,10], dtype = "int16")#candidate|4211|(105,)|const|int16
call_4210 = relay.TupleGetItem(func_2581_call(relay.reshape(const_4211.astype('int16'), [105,])), 1)
call_4212 = relay.TupleGetItem(func_2584_call(relay.reshape(const_4211.astype('int16'), [105,])), 1)
func_2453_call = mod.get_global_var('func_2453')
func_2456_call = mutated_mod.get_global_var('func_2456')
const_4218 = relay.const([-6.357969,-6.535521,-8.529009,-6.999869,0.687074,-9.212226,9.457134,8.721670,7.403928,1.141339,8.789808,-2.235911,-0.795155,8.744546,-6.040588,0.312969,9.016662,6.623604,-4.752636,7.197972,7.190905,-1.802950,5.455269,4.715128,-4.878376,-2.008882,-2.476485,-1.715050,0.160573,-3.516027,0.327661,-2.689910,6.406520,-8.137544,1.740347,7.695897,6.601697,6.314202,-3.394588,5.496953,-2.456683,-7.621726,-9.423093,6.169183,4.730674,8.396117,-2.321006,6.340037,-3.880498,1.344576,3.491070,-5.484399,-5.250734,2.542896,-9.157449,-0.002694,9.523924,0.195521,2.748352,2.484236,-2.827231,4.350793,-9.651846,7.533237,-3.432338,3.072043,3.240930,3.774075,7.739635,-8.107326,5.708183,-3.514149,-9.589472,6.013220,4.358302,-6.937066,0.075494,-5.354477,-8.019836,-0.420969,-5.344291,-9.386843,7.902286,-3.813080,2.592004,9.094157,6.229762,7.518515,1.953562,5.017072,5.805889,2.180226,0.717057,-0.889099,0.560828,-1.645840,-8.201366,3.725478,-3.034003,6.633141,8.764626,9.978797,-6.931377,-8.896159,3.212831,-8.170239,1.274578,3.006223,4.918893,-6.846170,6.849970,1.650908,2.387187,7.081446,-9.374103,7.925192,6.582163,-4.526221,4.630858,-0.814896,-2.772468,4.598807,-4.482920,-0.844991,3.277338,-3.986947,5.754105,-0.501603,-9.008346,2.214797,-2.627556,-5.238238,9.816692,-0.972314,5.515770,7.250806,1.758933,1.041881,6.642203,-4.550190,-3.606943,0.609576,-8.322132,1.231682,-7.960051,3.747524,0.375279,-9.055847,-9.382776,-1.727332,0.536287,8.226364,-9.908048,-1.241836,-1.440269,-9.417313,5.243815,-2.858821,-7.985855,3.935819,-3.067087,1.437443,-3.398390,-8.878216,-6.242724,5.493234,-9.854057,3.663612,4.529958,7.570597,-6.788103,6.398442,0.714574,1.594417,1.240806,-5.887558,8.708470,5.160276,-9.844644,-4.342325,-4.877194,-2.423926,-1.176041,-3.943698,-4.950303,7.756800,6.257801,-8.156003,-0.972332,-9.078604,-6.226783,-8.354461,0.779490,-6.871326,9.060315,-6.477836,-8.839183,8.998555,-8.358914,-8.457107,7.938651,7.523354,-9.769904,6.006334,8.153153,-5.681072,3.650301,4.401668,1.746293,-9.524289,-5.963575,-9.773160,3.541989,0.689744,2.534849,-0.125168,0.038565,-5.467759,-6.041076,7.936716,0.544827,8.558358,-5.827114,3.315565,-0.366367,-2.058461,6.651574,7.114949,-1.341832,-7.734804,7.777805,-3.024878,0.497187,-3.456563,0.645817,5.585461,-8.652890,9.643293,-6.076096,-8.908213], dtype = "float32")#candidate|4218|(240,)|const|float32
call_4217 = relay.TupleGetItem(func_2453_call(relay.reshape(const_4218.astype('float32'), [2, 12, 10]), relay.reshape(const_4218.astype('float32'), [2, 12, 10]), ), 0)
call_4219 = relay.TupleGetItem(func_2456_call(relay.reshape(const_4218.astype('float32'), [2, 12, 10]), relay.reshape(const_4218.astype('float32'), [2, 12, 10]), ), 0)
output = relay.Tuple([call_4200,call_4210,const_4211,call_4217,const_4218,])
output2 = relay.Tuple([call_4201,call_4212,const_4211,call_4219,const_4218,])
func_4220 = relay.Function([], output)
mod['func_4220'] = func_4220
mod = relay.transform.InferType()(mod)
mutated_mod['func_4220'] = func_4220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4220_call = mutated_mod.get_global_var('func_4220')
call_4221 = func_4220_call()
output = call_4221
func_4222 = relay.Function([], output)
mutated_mod['func_4222'] = func_4222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2286_call = mod.get_global_var('func_2286')
func_2287_call = mutated_mod.get_global_var('func_2287')
call_4229 = relay.TupleGetItem(func_2286_call(), 0)
call_4230 = relay.TupleGetItem(func_2287_call(), 0)
uop_4235 = relay.sinh(call_4229.astype('float64')) # shape=(12, 9, 5)
uop_4237 = relay.sinh(call_4230.astype('float64')) # shape=(12, 9, 5)
output = relay.Tuple([uop_4235,])
output2 = relay.Tuple([uop_4237,])
func_4250 = relay.Function([], output)
mod['func_4250'] = func_4250
mod = relay.transform.InferType()(mod)
output = func_4250()
func_4251 = relay.Function([], output)
mutated_mod['func_4251'] = func_4251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
call_4265 = func_2725_call()
call_4266 = func_2725_call()
func_3749_call = mod.get_global_var('func_3749')
func_3753_call = mutated_mod.get_global_var('func_3753')
const_4270 = relay.const([-4,6,3,-2,-1,-2,-8,6,5,-7,-6,-6,3,10,-9,-9,-7,6,-10,3,-3,-6,1,2,-3,5,-6,-10,10,-4,-10,-2,1,9,6,-5,-8,-9,-2,-7,10,6,2,-8,5,-1,-6,-4,-3,-10,-6,8,-3,-2,-10,2,2,-7,-2,-7,8,2,5,2,-10,6,5,-9,-3,-3,-2,2,-3,-8,-5,-1,-5,6,10,7,-8,5,1,4,-9,-6,4,-4,-6,-1,7,3,-3,-3,8,-5,7,2,6,-9,-2,5,-2,2,-1], dtype = "int16")#candidate|4270|(105,)|const|int16
call_4269 = relay.TupleGetItem(func_3749_call(relay.reshape(const_4270.astype('int16'), [105,]), relay.reshape(const_4270.astype('int16'), [3, 5, 7]), ), 3)
call_4271 = relay.TupleGetItem(func_3753_call(relay.reshape(const_4270.astype('int16'), [105,]), relay.reshape(const_4270.astype('int16'), [3, 5, 7]), ), 3)
func_1536_call = mod.get_global_var('func_1536')
func_1539_call = mutated_mod.get_global_var('func_1539')
const_4275 = relay.const([3.862710,-7.485655,3.316855,-3.071008,-9.711052,4.382054,3.019023,-3.310668,-4.015342,1.816818,-0.589553,8.557131,-9.335225,-3.900621,2.573089,4.080854,7.491552,-5.071911,-0.831725,6.333924,4.538067,9.621217,0.616514,0.288154,7.376841,4.806766,0.483329,-1.605347,-3.997657,2.747502,-8.884498,-0.628838,1.906652,0.978460,8.857053,-8.616538,4.471132,9.468096,4.927065,0.972248,4.749892,0.386607,2.062572,8.006087,-3.339019,-0.605193,4.396804,-5.207429,0.480345,-0.750759,3.290295,-0.926350,-8.509981,2.417817,-8.901155,3.752418,6.229458,-0.317821,-9.672696,9.132948,4.835475,0.720123,-9.710016,2.590224,3.586422,7.115079,-6.365870,-0.006091,1.175073,1.789539,-3.226246,-4.037172,1.247689,-2.815272,-4.016669,-6.257973,9.581365,-8.413107,1.866007,-4.490131,7.058773,9.719877,9.616278,-2.910670,-0.142154,-3.072656,-3.314502,-0.307074,-0.219195,1.049578,-1.655964,-3.583776,-2.003458,-6.585025,-5.745637,-9.080086,-9.972339,1.853104,8.752736,-8.519370,4.457396,-7.691745,1.798529,2.781340,-1.740604,-5.865105,-9.161250,-3.610940,2.303208,9.328624,9.909171,9.842324,3.260929,1.187024,7.400077,-6.080397,0.869803,-1.019613,-7.065500,-0.953815,7.933958,9.859284,9.558302,-2.826913,-5.812006,-6.606445,2.430352,9.347025,-5.617714,-9.810785,7.196914,2.179782,4.299593,2.668631,0.901085,-8.933438,2.133495,7.160242,-8.622612,1.704793,2.616956,-6.068910,-7.489771,4.317383,7.610458,-7.452616,2.680485,4.558506,6.316290,-0.320646,-7.712766,8.947147,-2.065175,-8.603404,-8.406497,-6.331311,1.055681,4.107003,-1.848758,-9.792096,-8.563527,-7.377439,-7.482758,-0.227714,7.887591,4.647889,-7.656556,3.563413,6.278146,0.781125,1.360103,1.466968,-1.636235,-8.110220,9.353959,-4.503269,2.652162,0.888052,-6.761764,-3.562991,-3.341539,8.776982,-3.869130,-9.685290,-5.131381,-7.600578,7.771232,-2.439252,-4.707778,-7.594374,-2.256727,5.795591,-5.679235,0.382007,-9.239826,-8.179042,6.242366,2.022884,-5.544645,8.513602,8.603512,-6.157926,2.170991,7.518284,-6.531122,-5.758203,-8.641917,-3.071496,-1.709313,-5.920634,1.495538,-8.327605,-5.387387,9.271487,9.944733,-6.976255,-9.740399,0.892041,8.887860,6.253887,-2.916919,-8.152986,4.990681,3.738817,0.373545,-3.349298,-1.611115,8.935505,4.387729,9.603247,-8.661350,5.536045,2.944003,-3.613110,8.399414,-5.188124,0.037611,9.245294,2.052023,6.856794,-4.234065,-5.051226,-1.121549,0.430042,-1.004517,-2.958019,-5.784013,6.142213,-4.930582,7.069547,6.431835,9.487610,-2.775634,7.953291,-6.186262,-6.577202,-0.627458,3.205057,4.608323,-4.430598,-9.046406,-2.057709,7.956185,-5.798197,6.515755,5.846044,0.963123,-2.116445,8.755666,1.268440,-1.274935,-0.892136,-6.385962,9.234414,3.483246,7.423974,-7.421064,-7.944998,4.097243,1.697077,-7.839323,5.484983,2.301569,-2.171017,5.932921,-6.566990,7.015204,2.902209,7.916767,9.039616,-9.358868,-8.631763,-7.505215,-8.122681,0.645460,5.457975,9.127301,9.670352,-2.151775,4.740199,8.802707,2.260031,9.676695,9.806673,2.732812,9.408138,0.755657,-1.015078,-6.276365,-7.543537,-7.202033,-5.295889,-3.882870,-0.150340,3.706970,0.039978,-2.590809,4.419324,8.174608,-9.540162,-0.694905,-3.056470,1.428091,8.538296,-1.749588,3.380126,3.876739,-0.545450,4.939094,-8.664819,-8.694869,7.338068,-5.440300,-3.858451,3.951878,-6.665138,-3.393972,-5.697158,9.634562,-0.161369,3.090407,-2.587569,9.885926,-4.920189,-9.965547,5.750897,-8.710035,2.860974,1.613531,-7.485775,-5.643490,-5.067777,-2.422833,-2.113973,8.596250,9.210248,-9.074500,8.280170,-4.286735,-3.998569,5.385887,7.367078,-9.705328,-3.952941,0.931616,4.830223,-8.539493,-1.728406,-1.186095,-2.896990,8.377635,-4.210069,-9.365526,7.076006,1.921388,3.327627,1.187746,1.179080,8.062379,-5.647230,-8.532263,-1.442319,2.078413,2.334019,7.019522,6.510338,8.172579,-5.966696,-3.789382,-1.569261,9.434702,-5.643897,2.257384,-2.991023,3.730089,3.992141,-7.202941,-5.216522,-6.521497,7.983278,-1.777744,8.744314,-5.265219,2.477538,7.771450,7.995579,9.060392,-4.891465,2.220345,1.031094,4.082825,-1.588437,-3.540175,3.757840,1.662261,-8.374119,-5.737420,1.823953,3.724530,6.346056,0.843805,5.820470,-9.596168,1.032442,-4.415737,-4.277861,9.630095,-8.949038,-3.825941,-5.291385,-3.686865,7.814439,-3.191278,-6.644159,6.153314,1.506363,-0.759173,9.492484,-6.530733,-8.434843,1.435881,-7.040155,3.244116,-5.445288,-4.422999,0.591202,6.123559,5.198615,-9.989748,5.510633,4.054064,-2.642142,5.862876,-5.301886,-8.412177,-2.807420,-2.478692,-6.808695,5.447031,2.829914,7.237808,1.587393,6.055666,8.629208,-3.485757,6.919276,7.089376,9.225444,6.662394,-0.661838,-8.474980,6.074083,1.649746,-6.043569,-7.355164,-8.951412,7.417629,-7.648038,1.854773,-0.439512,-1.073914,2.524574,4.749901,-1.668185,7.787530,-5.788720,4.448950,-7.715103,7.970262,-7.238489,-6.401927,9.584400,-9.939121,-1.484216,2.963102,0.244524,-4.974389,4.667897,6.050589,-1.115538,-3.605701,-2.016207,-6.193306,-6.284092,8.022290,8.925281,-8.270126,3.741561,-4.822238,-0.170327,-2.678754,3.911151,-7.420312,-3.653468,-8.122892,-4.254660,4.348839,-3.495352,2.606532,3.309232,4.672024,-4.939424,-6.503190,-8.865968,3.699543,-5.046628,-5.546694,-9.699085,0.150037,-5.723394,1.066405,-8.530938,3.865043,-1.072298,-0.935433,-6.120432,-5.696454,6.151354,-8.247822,2.130214,-2.707728,-9.887777,7.333196,0.016019,6.130360,-1.832222,3.247297,-4.013464,-1.672661,0.096497,-2.765248,-5.297305,1.072495,1.202269,-9.340726,1.126323,2.489097,1.668377,0.968756,4.163205,1.067475,9.356400,-2.678755,1.309210,6.361309,5.338152,-7.951264,-0.205140,4.381445,-0.501483,0.746895,-7.484985,6.680411,2.818037,9.462166,4.244519,8.633531,9.710778,-0.203871,-2.868519,0.899015,-1.635037,0.341549,1.503513,-9.430139,-7.312067,-1.048077,-7.607307,0.358516,-7.620760,-6.801369,6.598781,-8.935565,-9.589109,6.031278,-8.680725,-4.183497,2.757453,-6.762785,3.927530,-5.593964,-0.464542,-9.317036,-4.580860,-4.192461,-7.882792,-1.694683,-0.433011,-0.061990,-5.048352,4.955970,4.027903,1.698354,-7.214715,1.836295,-4.701235,8.968985,-7.190430,-7.355911,6.475759,1.483811,3.029928,7.273532,1.328886,-2.008534,-1.514450,-0.632775,-4.481833,-8.563772,2.940336,-8.972092,1.227227,-4.060633,9.457203,-6.368300,-3.600116,0.093950,3.798935,0.586474,-8.844672,-9.403783,-9.190901,-1.080762,-1.325228,8.023361,8.753698,-6.828220,3.660615,-9.015252,4.883400,-5.885395,2.937223,4.532605,-4.751683,6.708982,4.332438,0.067826,-9.115765,-9.146017,-1.665440,1.575167,9.977627,-8.542484,-9.014504,0.151995,4.449560,0.468452,9.933833,-7.883747,-8.855182,5.876763,3.251238,7.663668,-9.723709,8.462718,5.474585,-5.162632,-1.196540,6.141532,-4.264470,-3.510514,-7.142741,-4.449653,-1.089422,-4.547282,-0.947281,-6.800040,-6.363385,2.704210,5.572907,-7.372215,5.989994,4.573819,4.536344,6.169709,-9.340688,-3.853851,3.687074,-3.708751,3.772176,-2.174459,-8.915341,2.813146,-7.833899,-1.094337,6.538895,-3.104838,2.099153,-3.300904,9.609544,-7.132278,9.975916,-5.752595,8.026711,7.752832,4.207579,-8.539477,-7.027345,7.948733,0.054918,1.596810,-7.938664,6.858807,9.735889,-6.063152,1.046993,-6.330347,4.911518,-0.791439,-2.934688,3.251070,1.587211,7.134459,-5.574272,4.065709,-2.889715,-4.509188,-9.624762,9.074097,-0.246059,-1.920285,-4.159281,-1.392049,-7.863162,4.665070,-0.092414,-5.602416,-2.192627,-4.956789,-4.217458,-3.864564,-2.367379,7.728624,4.544601,-3.621068,3.680596,4.841528,-4.739276,5.986869,-4.079215,7.499142,-9.812404,2.093599,2.921083,9.618636,3.515258,6.301719,-0.708738,-4.423303,7.332866,7.288522,-1.898358,-7.819488,7.848230,9.269120,-2.765128,-9.302625,-1.752853,-1.708417,2.495247,-3.324742,1.750730,-5.680362,-1.793598,1.762224,-9.343284,-9.890717,-3.964389,2.409191,0.392327,3.928835,0.769486,-3.778244,9.205470,2.140194,-9.424096,2.275198,6.862253,9.707325,6.385252,8.416126,-7.819638,-6.069278,6.634671,-2.657249,-2.837768,-0.621056,7.140878,0.739460,0.723640,-2.336652,-3.970578,-6.591293,9.944456,-9.677539,-1.209271,-2.530113,6.742349,5.716684,-4.968689,5.456132,-9.202139,-2.193645,-2.205755,-6.330973,2.863284,0.320790,7.807472,0.295007,-2.595282,0.772264,-1.009627,3.784495,-2.595394,-3.099042,-2.311738,7.895454,4.643955,-7.906529,3.786702,-6.137436,0.100211,3.533382,1.523202,-1.707319,-7.409804,-3.104967,4.418139,-4.828103,2.306592,8.652927,5.375644,-2.782133,-7.693717,-8.952584,5.076736,-0.165770,6.451807,4.332096,8.802368,-6.841537,4.724554,-0.969378,-5.656896,-7.122738,3.713966,0.927559,-6.784454,9.337894,-5.331785,5.978793,-6.197346,2.114157,0.506098,-6.519187,-3.691739,-1.517239,-1.557139,-7.014884,8.662531,-0.760085,-3.319210,9.527566,9.973938,-9.583206,0.090713,3.501829,9.637357,0.922302,-3.992823,9.186249,-1.340310,-2.527109,-5.379607,5.085263,-0.307500,-7.197798,7.945646,5.909091,2.977879,-5.149309,6.841565,-2.007511,-7.222904,4.469887,-3.533532,7.913266,-1.771307,1.168313,7.930174,9.236723,-9.703145,-5.551323,1.144869,-7.786232,9.149430,4.597922,-0.351568,-9.482792,4.668720,5.618847,-9.639051,-8.954262,2.766847,-7.496160,-7.838017,-3.731624,5.881872,-7.053897,-3.819713,4.198514,-0.674438,5.768158,3.643252,2.892496,1.437602,-0.404082,-9.394094,0.278980,-5.255061,-2.610219,7.541983,9.545310,8.141058,7.444894,-9.896851,-2.169253,-6.052702,8.708258,8.877057,-7.461678,-3.161325,-2.596485,-4.532732,-7.562712,7.691824,0.162801,0.611896,-8.419966,9.527505,-1.092859,-2.479524,-2.205900,-4.583679,-2.096905,-3.468463,4.570890,6.062418,7.113823,1.841001,-2.995127,-6.497267,9.719695,-1.868866,5.710458,2.086120,7.627170,-5.168651,-8.314640,-5.353530,-0.134153,-3.034241,1.552815,7.110047,9.499714,-3.705926,-1.279567,5.940317,-7.583008,6.165788,0.485161,6.565275,-2.968143,-8.481798,8.040992,-0.704120,-0.764932,3.900069,-4.778784,-6.932833,9.992228,-6.339364,-3.369379,3.321869,8.871600,-7.706016,7.150322,-9.864136,4.516894,0.908286,6.678835,-8.343125,-6.987924,0.747876,-3.547428,-8.699649,-6.038870,5.787363,-0.372148,8.591087,6.081798,6.470610,0.247646,8.915531,-4.810026,5.655779,-9.002097,2.566446,2.357850,7.011334,7.137016,9.937170,-9.866097,-6.691367,2.544819,0.006973,1.986262,-7.019056,-6.780993,2.617499,-8.945189,-3.805437,-4.441409,4.564069,-7.381356,8.860264,-8.662211,7.947246,-9.464177,4.958682,4.438050,-8.376278,1.563998,0.386994,-8.201479,1.320187,-4.746039,8.410201,8.834810,-4.816642,-6.730479,5.073479,4.160816,3.040258,-4.473066,3.743017,3.294701,-0.930635,-2.389874,-7.250195,-2.634993,4.950729,0.060285,1.548245,8.139278,-3.893201,-9.882465,-2.472864,-8.901346,9.117037,8.712987,-5.372951,-2.875962,4.817483,8.779007,-7.655881,4.335312,-0.688508,-2.092856,-0.157440,6.770898,5.659297], dtype = "float64")#candidate|4275|(1092,)|const|float64
call_4274 = relay.TupleGetItem(func_1536_call(relay.reshape(const_4275.astype('float64'), [1092,])), 0)
call_4276 = relay.TupleGetItem(func_1539_call(relay.reshape(const_4275.astype('float64'), [1092,])), 0)
output = relay.Tuple([call_4265,call_4269,const_4270,call_4274,const_4275,])
output2 = relay.Tuple([call_4266,call_4271,const_4270,call_4276,const_4275,])
func_4288 = relay.Function([], output)
mod['func_4288'] = func_4288
mod = relay.transform.InferType()(mod)
mutated_mod['func_4288'] = func_4288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4288_call = mutated_mod.get_global_var('func_4288')
call_4289 = func_4288_call()
output = call_4289
func_4290 = relay.Function([], output)
mutated_mod['func_4290'] = func_4290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_4314 = func_896_call()
call_4315 = func_896_call()
output = call_4314
output2 = call_4315
func_4323 = relay.Function([], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mutated_mod.get_global_var('func_4323')
call_4324 = func_4323_call()
output = call_4324
func_4325 = relay.Function([], output)
mutated_mod['func_4325'] = func_4325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1342_call = mod.get_global_var('func_1342')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_4360 = relay.TupleGetItem(func_1342_call(), 0)
call_4361 = relay.TupleGetItem(func_1344_call(), 0)
func_3334_call = mod.get_global_var('func_3334')
func_3336_call = mutated_mod.get_global_var('func_3336')
call_4370 = relay.TupleGetItem(func_3334_call(), 1)
call_4371 = relay.TupleGetItem(func_3336_call(), 1)
func_3918_call = mod.get_global_var('func_3918')
func_3921_call = mutated_mod.get_global_var('func_3921')
const_4377 = relay.const([-3.612668,-0.444665,-4.368213,7.115988,1.430606,-8.092051,-0.242489,-6.775135,-6.526017,0.059502,-4.207542,-3.944859,3.048194,6.529965,8.814137,0.452742,4.268751,-2.251447,4.633253,-8.913465,-9.588654,-8.177408,-8.344131,9.953679,2.280155,-9.702881,5.698825,7.030274,-5.159882,5.647922,-1.094739,-5.851992,1.602819,3.553212,-2.827239,9.050169,-5.066368,8.215173,-2.520810,-1.000119,7.460280,3.644205,8.719163,-9.708623,-1.837048,0.423311,-1.231608,-1.665757,-7.687937,-0.695108,0.860103,-9.981843,-4.729917,0.556379,-5.075799,-4.503785,-3.446000,-8.039754,-7.899662,5.378130,-2.684130,0.876721,-3.592413,-5.367535,8.044492,1.189185,8.900707,8.665619,-2.877131,-5.128459,-7.232868,-0.976255,8.394201,-9.764652,5.013383,-4.022595,-4.983637,-9.103416,6.837712,-9.557695,-0.486495,5.368084,1.415295,2.895866,9.212589,-7.423498,-6.713945,-3.519709,5.432261,1.816994,4.285196,-0.866686,-8.324156,-7.378175,-8.958359,-9.910834,6.701654,-3.271522,-6.827198,-0.700770,1.566977,5.334163,9.473258,6.072744,-2.125179,-4.811801,-7.575093,-4.626542,6.401614,-4.205754,7.760858,-7.142409,7.047891,3.169777,-7.636212,7.940048,-4.546061,4.409350,1.098278,-3.712170,-0.539929,6.648405,1.305473,6.592714,-1.419198,-3.172027,-1.582702,-2.302054,4.105698,-3.953611,1.118707,-8.372975,-8.120836,-0.459692,-4.247692,-0.535221,7.857169,-6.130767,8.713475,0.999866,4.908330,2.742217,3.865896,4.398219,7.125168,-7.540615,-2.960219,-3.464059,1.557610,-0.511431,5.230545,-0.150190,-2.802792,9.719245,-5.407810,1.803665,8.358352,3.045954,8.705665,0.398252,-0.151756,4.494533,-7.468907,-5.990029,-0.694396,-2.199325,8.163730,-9.040261,8.231366,9.772431,8.787077,3.978319,4.397547,3.676575,-9.741808,0.810611,-7.329397,3.994365,-1.770890,-3.870201,-3.872642,-1.899416,8.604779,5.583922,-2.291339,-6.974169,0.369596,-3.951022,4.875955,1.503745,2.002521,-7.960154,-3.086099,-5.355857,9.991186,7.090608,4.230105,8.154463,4.373472,0.387712,8.323941,1.733128,-3.554215,3.366864,0.456432,5.132032,6.371196,-3.737000,2.039383,-4.089753,-6.013643,-0.486634,7.782547,-1.869848,-2.114317,0.337702,-3.909354,-2.799187,-4.181427,-9.226009,4.873968,-1.890098,2.766566,-3.730270,-7.863810,-3.443527,-8.927054,-0.427062,-2.989336,-1.438477,0.088864,8.577818,-6.354508,-3.247651,0.553678,-6.168680,-0.861297,-7.450476,-8.468342,-9.532994,2.078618,3.381733,9.495274,-5.788362,-5.774274,-3.978244,-0.806235,9.429029,4.975097,3.405396,-4.493549,9.611692,1.314310,7.142071,-1.700651,-7.112906,-5.231221,-6.002155,5.061286,4.569978,2.107745,5.627052,8.882665,9.596876,-5.245902,-9.354531,-9.057475,5.022334,8.359295,8.651728,-7.552956,4.610578,9.497320,-8.341658,-5.357372,4.212820,1.113193,9.500260,0.599337,-8.020013,-9.869197,7.904139,-2.302143,-0.951171,1.299858,-3.798452,5.761662,-0.601267,2.706085,2.524727,-6.408589,2.512200,-7.264034,9.057276,4.494784,5.779753,-1.030606,1.756702,-5.117473,-7.740340,2.468996,1.947342,-1.267562,-1.855187,9.959421,-8.721656,-9.228737,8.641978,-9.156861,-0.690416,-1.101976,9.399330,-3.875930,-8.637538,-6.708031,-7.636648,5.861173,-7.059500,8.706123,6.794048,3.721211,3.940574,7.711361,-0.587134,6.521119,-8.926039,-8.579412,-3.389138,-6.820852,6.308166,3.383511,-2.639248,-9.266907,-4.079041,1.931186,-5.721306,7.350828,-8.264172,-8.608588,5.532179,-6.381110,-3.157003,4.890061,6.595096,5.013358,3.130517,2.565233,9.631106,-1.362201,4.866079,4.496441,-1.281632,6.956878,7.310049,9.618861,4.689410,-3.843503,5.319713,-9.474659,3.956160,8.611889,-4.039236,5.523405,-3.366953,-0.262937,9.321461,8.157006,-2.662034,7.573626,8.903235,-3.315265,-4.119309,-5.435716,4.505756,-6.852696,-0.777527,4.898293,-9.860943,-1.711476,-8.477077,8.558089,-8.997715,-5.211801,2.835343,-4.977015,-6.985860,-5.287507,-1.756508,-4.773287,1.545954,-9.839033,4.787996,8.466379,-3.710965,-0.855534,-2.328587,7.513435,7.259584,0.336222,1.322476,5.191336,7.096323,-4.563670,-0.504415,7.199393,9.878034,9.325666,4.628619,6.398480,-0.430794,-9.737679,0.807593,8.178499,0.190564,3.037559,-2.126097,9.783750,-3.109583,8.866441,-2.317730,6.370848,3.218596,-4.848630,0.708047,-3.103217,-1.765153,-8.133725,-0.737776,-3.665839,-7.568010,-0.064706,-4.981245,-7.008268,4.917604,1.735811,-3.579925,-6.513309,9.929920,-2.225042,-9.499931,-0.526671,-8.065179,-3.110144,-7.102075,-9.053242,-6.458520,0.955571,-7.801364,-2.511948,-0.801660,-1.640618,-1.148076,-3.973622,9.634654,-6.400496,6.379094,-7.721299,1.601802,5.391037,5.315726,-1.343108,-7.277216,-7.803793,-7.845932,4.970416,-7.839760,2.073500,-8.785827,-5.293287,3.477316,9.092211,1.314521,-1.642858,-2.583873,-2.837045,6.988917,5.119449,2.156945,7.113353,-7.692859,-1.327199,-3.918682,1.023636,5.939101,-7.349437,-3.429939,0.038583,-9.314141,-8.833771,3.551193,-3.720966,-2.688776,3.408955,-4.015458,0.026066,1.395421,9.812791,0.476280,-5.765491,7.982499,4.347287,-9.607371,0.540894,-0.437971,4.075165,9.098489,7.315874,1.076794,4.296354,7.359779,5.147863,-0.637981,-8.526067,1.963511,-2.348933,0.132153,4.127715,-0.104773,-5.644425,-4.432382,3.158459,-5.711965,7.717918,4.963100,9.873834,3.461206,9.847723,5.850265,-0.584696,-1.534196,8.393351,-1.760918,0.240042,-9.144559,-8.431833,3.939810,-1.918247,-9.663261,0.229145,-1.641830], dtype = "float64")#candidate|4377|(540,)|const|float64
call_4376 = relay.TupleGetItem(func_3918_call(relay.reshape(const_4377.astype('float64'), [12, 9, 5])), 0)
call_4378 = relay.TupleGetItem(func_3921_call(relay.reshape(const_4377.astype('float64'), [12, 9, 5])), 0)
output = relay.Tuple([call_4360,call_4370,call_4376,const_4377,])
output2 = relay.Tuple([call_4361,call_4371,call_4378,const_4377,])
func_4385 = relay.Function([], output)
mod['func_4385'] = func_4385
mod = relay.transform.InferType()(mod)
output = func_4385()
func_4386 = relay.Function([], output)
mutated_mod['func_4386'] = func_4386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_4409 = func_3419_call()
call_4410 = func_3419_call()
func_2705_call = mod.get_global_var('func_2705')
func_2706_call = mutated_mod.get_global_var('func_2706')
call_4418 = relay.TupleGetItem(func_2705_call(), 0)
call_4419 = relay.TupleGetItem(func_2706_call(), 0)
var_4422 = relay.var("var_4422", dtype = "float64", shape = (9, 2, 6))#candidate|4422|(9, 2, 6)|var|float64
bop_4423 = relay.bitwise_xor(call_4418.astype('uint64'), relay.reshape(var_4422.astype('uint64'), relay.shape_of(call_4418))) # shape=(9, 2, 6)
bop_4426 = relay.bitwise_xor(call_4419.astype('uint64'), relay.reshape(var_4422.astype('uint64'), relay.shape_of(call_4419))) # shape=(9, 2, 6)
output = relay.Tuple([call_4409,bop_4423,])
output2 = relay.Tuple([call_4410,bop_4426,])
func_4447 = relay.Function([var_4422,], output)
mod['func_4447'] = func_4447
mod = relay.transform.InferType()(mod)
var_4448 = relay.var("var_4448", dtype = "float64", shape = (9, 2, 6))#candidate|4448|(9, 2, 6)|var|float64
output = func_4447(var_4448)
func_4449 = relay.Function([var_4448], output)
mutated_mod['func_4449'] = func_4449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4220_call = mod.get_global_var('func_4220')
func_4222_call = mutated_mod.get_global_var('func_4222')
call_4457 = relay.TupleGetItem(func_4220_call(), 0)
call_4458 = relay.TupleGetItem(func_4222_call(), 0)
func_2960_call = mod.get_global_var('func_2960')
func_2961_call = mutated_mod.get_global_var('func_2961')
call_4462 = relay.TupleGetItem(func_2960_call(), 0)
call_4463 = relay.TupleGetItem(func_2961_call(), 0)
func_3749_call = mod.get_global_var('func_3749')
func_3753_call = mutated_mod.get_global_var('func_3753')
const_4475 = relay.const([[3,2,-5,8,3,3,-2,3,-9,-3,4,-5,7,3,1],[-8,-3,-2,7,-2,-1,8,-7,5,-10,4,-6,-10,8,6],[-5,2,7,8,7,-4,7,4,-3,-2,9,6,5,-10,-1],[10,3,4,9,-1,4,-5,-7,4,7,-10,10,-4,4,-7],[10,-3,-3,-10,10,7,7,4,-10,-2,4,7,-2,10,5],[-2,-7,8,1,10,-1,5,2,2,8,1,9,-6,9,6],[-3,8,3,-10,4,-6,-1,-5,-10,5,4,-2,5,4,5]], dtype = "int16")#candidate|4475|(7, 15)|const|int16
call_4474 = relay.TupleGetItem(func_3749_call(relay.reshape(const_4475.astype('int16'), [105,]), relay.reshape(const_4475.astype('int16'), [3, 5, 7]), ), 1)
call_4476 = relay.TupleGetItem(func_3753_call(relay.reshape(const_4475.astype('int16'), [105,]), relay.reshape(const_4475.astype('int16'), [3, 5, 7]), ), 1)
func_1298_call = mod.get_global_var('func_1298')
func_1301_call = mutated_mod.get_global_var('func_1301')
const_4495 = relay.const([[0.321038,7.718079,-5.313236,-0.391642,-1.735374,-1.218405,-9.959891,2.289005,3.477244,6.930826,1.300249,-9.703813,-8.288129,8.565169,4.701618,-2.845486,-8.941942,0.538775],[4.035757,-1.553319,-3.674585,7.945939,6.136033,-0.659555,9.382120,9.592446,-2.804798,7.302718,0.866248,1.835205,-3.147408,8.899710,9.545561,4.912308,-4.111572,5.536370],[0.265869,6.589301,2.217094,9.713071,-6.851094,2.119318,-3.245862,7.885015,9.880753,7.566389,-0.274115,-8.042172,4.031708,7.470767,3.853991,-2.315129,1.782024,1.552974]], dtype = "float32")#candidate|4495|(3, 18)|const|float32
call_4494 = relay.TupleGetItem(func_1298_call(relay.reshape(const_4495.astype('float32'), [3, 9, 2]), relay.reshape(const_4495.astype('float32'), [3, 9, 2]), ), 0)
call_4496 = relay.TupleGetItem(func_1301_call(relay.reshape(const_4495.astype('float32'), [3, 9, 2]), relay.reshape(const_4495.astype('float32'), [3, 9, 2]), ), 0)
func_3445_call = mod.get_global_var('func_3445')
func_3447_call = mutated_mod.get_global_var('func_3447')
call_4502 = relay.TupleGetItem(func_3445_call(), 0)
call_4503 = relay.TupleGetItem(func_3447_call(), 0)
func_190_call = mod.get_global_var('func_190')
func_195_call = mutated_mod.get_global_var('func_195')
const_4513 = relay.const([[-2.081084],[9.925584],[6.376523],[0.489298],[9.147157],[3.909970],[0.374526],[-1.982070],[3.378157],[8.718726],[0.466513],[-6.258708],[4.446732],[6.879782],[-2.923701],[-1.357674],[-0.471306],[7.053046],[4.552560],[-7.138260],[7.802280],[-0.348818],[-4.482510],[4.923266],[-7.849595],[3.083511],[-1.883868],[-5.205642],[4.127329],[0.373115],[7.372349],[-5.899008],[1.864086],[5.763537],[0.184134],[2.998214],[6.280667],[9.175637],[3.111901],[4.221193],[7.877100],[2.818359],[-5.727905],[-4.026589],[-4.431793],[-2.633596],[0.084008],[8.705946],[-8.932249],[4.647499],[-7.806123],[-9.133524],[-8.979290],[4.400004],[-6.466493],[9.477548],[8.955614],[6.217334],[2.883860],[-4.182050],[6.474281],[6.298208],[1.992845],[2.728205],[-4.244178],[3.240650],[-9.858922],[-4.592512],[-0.537659],[-8.225121],[5.725741],[-8.080478],[-2.856589],[-6.525167],[1.927950],[2.564549],[7.699079],[3.008658],[6.569981],[-9.021934],[8.400310],[-2.400858],[5.321650],[-5.638369],[6.896081],[-0.448383],[0.595106],[7.022424],[-4.335856],[5.151491],[-9.183950],[-4.588864],[9.624190],[7.551967],[5.185254],[-8.890245],[0.902071],[-3.517869],[-2.338498],[-8.160071],[1.814956],[-4.860943],[-7.348731],[-8.430037],[9.212383],[-4.878786],[4.721684],[-5.580769],[3.765188],[7.582258],[0.281674],[3.709011],[4.935374],[-5.129621],[5.601346],[0.970423],[1.746808],[3.230868],[1.588777],[5.805826],[8.072590],[4.571099],[-8.421118],[6.907229],[7.116154],[-5.148401],[5.230472],[5.332608],[8.387493],[-8.991968],[7.795311],[9.711772],[1.769934],[-3.578418],[3.898536],[7.245440],[4.848344],[6.091833],[-5.921637],[1.683622],[8.603807],[9.636224],[-0.395206],[4.125925],[-8.702403],[-7.576968],[0.118781],[-8.543082],[-3.083025],[-3.838522],[-4.654905],[-8.492724],[-2.793966],[-0.027257],[-4.640769],[-5.256730],[7.368279],[-4.486547],[-6.999283],[-4.010832],[9.854639],[-5.534046],[-3.616902],[3.731678],[2.073964],[-7.836570],[-6.095084],[-1.526910],[-8.879410],[9.555311],[-4.913526],[5.621735],[7.928747],[2.788824],[8.872948],[-8.425365],[-8.707989],[-8.560382],[-4.491701],[0.449808],[3.300007],[1.204167],[-8.776139],[-6.771651],[-4.408581],[-3.340118],[5.531953],[5.699975],[2.076615],[-7.716593],[-2.601377],[-9.745823],[-0.059758],[5.586559],[-6.408858],[-9.250051],[6.942579],[8.789588],[7.193158],[-3.321131],[-8.070254],[3.016904],[-0.030732],[-4.312389],[9.478435],[2.968643],[-4.976957],[7.455753],[-3.347162],[4.836179],[1.733457],[-5.293653],[6.530608],[7.974077],[8.355450],[4.747338],[-8.318218],[9.357065],[2.981487],[-8.698096],[-8.804634],[-0.964869],[4.222724],[2.628401],[-5.522100],[9.706429],[6.621466],[-9.877758],[7.337082],[1.233136],[-0.513804],[-7.757753],[1.234681],[6.380756],[-1.718329],[-0.553504],[8.666748],[3.352156],[-4.286670],[-7.683225],[3.804029],[-4.236053],[5.243552],[9.567605],[-5.177499],[7.711593],[8.358924],[8.896252],[1.247925],[1.758816],[2.381226],[6.912621],[-5.327022],[6.361707],[5.502563],[-4.954526],[7.998729],[0.467209],[3.447351],[-2.755210],[-7.599569],[-6.327953],[9.345952],[-8.114079],[3.621104],[-0.849406],[5.688309],[7.036858],[-5.243573],[-9.725656],[6.193426],[-4.685603],[-8.892469],[0.134590],[0.341327],[5.888007],[-9.740070],[4.889843],[-0.744949],[-4.371740],[-3.123139],[-6.673818],[-7.250562],[9.565226],[-9.046755],[4.920420],[-8.621637],[5.498032],[6.086755],[0.542025],[-4.765745],[-4.501814],[-3.439558],[-3.155944],[-0.509933],[-4.958207],[-2.183031],[-2.373235],[6.839439],[9.496408],[-8.292088],[3.707774],[4.087161],[8.282396],[2.564907],[5.317440],[5.071866],[-2.418267],[6.099126],[-3.550687],[-3.601318],[-1.587050],[0.372362],[4.416578],[9.613833],[3.380100],[4.386090],[-3.141514],[0.183803],[-9.939368],[-0.369270],[-5.327806],[5.003051],[-8.779078],[6.870972],[-1.243108],[0.519708],[-4.512594],[-2.483350],[8.953143],[3.462270],[1.525853],[1.045606],[0.513273],[1.405443],[-0.193072],[2.914270],[6.701603],[3.807077],[5.492830],[8.100775],[-3.051371],[2.349422],[7.689725],[0.125401],[0.284458],[5.694277],[2.399196],[-0.519234],[2.550795],[-3.083104],[-0.065281],[-7.946668],[8.807177],[6.718918],[6.173934],[-3.260954],[7.248686],[-9.820876],[5.350149],[-6.275276],[-1.504232],[7.942372],[-3.356005],[-6.329087],[9.495234],[9.421576],[-2.700173],[-0.021107],[-0.291908],[7.063911],[-1.076335],[0.552379],[7.498415],[-8.909559],[2.021446],[8.076650],[5.131108],[-4.363302],[-4.580034],[0.385962],[2.869949],[2.580725],[0.333158],[4.810947],[2.094209],[3.590693],[6.858989],[-2.326957],[-2.394534],[5.213191],[7.770531],[-7.297938],[-2.373248],[-2.414248],[1.577165],[-0.304971],[0.832134],[7.782442],[0.016929],[-3.018523],[5.501581],[-4.370720],[-3.452310],[5.362581],[-2.287125],[2.679377],[8.069437],[-9.339889],[-2.790727],[-2.746393],[-4.829372],[-1.748564],[6.308162],[-3.779828],[6.935567],[3.624281],[-4.264984],[0.300087],[-0.902429],[-9.487989],[0.027499],[-9.875000],[5.383175],[-1.186646],[-4.838210],[8.640693],[-3.715880],[-4.580097],[8.827785],[-5.336646],[0.147976],[2.870587],[-7.939368],[-3.231651],[0.535173],[4.689836],[-8.535615],[4.105510],[-3.365986],[0.936127],[5.932860],[1.811269],[4.509652],[2.497553],[0.513898],[8.744722],[2.202712],[-5.300862],[1.383320],[1.605675],[5.807827],[5.740528],[-1.887093],[2.682609],[5.740431],[6.284004],[-9.947334],[-9.834014],[-9.456228],[-2.007287],[1.106095],[-8.052323],[0.217229],[-8.229388],[-7.331173],[0.386273],[-7.831057],[7.448040],[-0.673991],[1.608780],[-4.572896],[-4.086343],[-3.154927],[-2.734650],[-5.250992],[-8.240280],[-4.648451],[-9.820771],[7.046690],[-7.665080],[-6.315426],[-6.011201],[-8.789927],[-3.355801],[-3.917384],[-8.072115],[-8.940363],[4.708469],[3.264321],[-2.752103],[1.039813],[-9.336689],[7.071389],[9.458284],[4.023517],[-5.395485],[5.545506],[0.590882],[2.076977],[-6.516438],[0.551554],[-3.105918],[4.374084],[-1.751530],[8.688397],[-2.354459],[9.271742],[-0.764495],[-9.680211],[-9.622944],[1.593952],[0.914996],[7.839530],[-4.404519],[-6.453706],[-6.480800],[-7.624756],[-4.763317],[2.180459],[-1.904534],[4.835933],[6.769219],[5.505683],[9.792117],[3.904143],[-7.410600],[4.211864],[4.624879],[-4.178395],[5.576215],[7.268206],[-1.933865],[-6.165167],[2.234675],[-0.093708],[-4.775440],[1.987989],[-4.406033],[3.682922],[-9.984230],[5.714516],[0.416329],[-7.133807],[1.572061],[-0.363800],[-0.657993],[9.620105],[6.303936],[8.478187],[4.222328],[7.754288],[9.486762],[3.415522],[4.041754],[6.586001],[6.004729],[-0.485554],[1.889992],[2.682983],[4.099603],[8.054820],[5.360643],[6.495593],[-5.800792],[-3.341906],[-9.808164],[8.884510],[-1.068320],[0.960176],[7.360961],[5.374745],[-6.077366],[9.317190],[-7.408017],[-5.179068],[3.171075],[5.903746],[-5.076333],[2.848816],[3.057827],[-0.233490],[6.039329],[9.170485],[-3.971122],[-4.903661],[-3.961840],[-2.678550],[9.672547],[-5.535994],[5.159674],[-9.757942],[5.053609],[2.802756],[-9.214775],[-7.033947],[-5.521070],[9.977898],[3.745788],[1.178148],[0.676925],[4.878636],[2.466072],[-4.527563],[-4.003820],[5.442756],[-1.214916],[-9.738836],[2.252447],[8.265987],[-8.464429],[-2.147664],[6.186471],[9.343436],[-1.539339],[-8.481749],[-2.119631],[9.201537],[-3.320309],[-2.558128],[9.733025],[-2.179650],[7.927220],[5.338030],[-0.706154],[-4.736850],[-2.923342],[-1.885804],[-6.765482],[-2.822198],[-2.491910],[1.132918],[8.232995],[9.197116],[-3.894367],[-0.857031],[3.471679],[8.174032],[4.016839],[6.036969],[-8.975097],[-4.556659],[-0.426975],[-5.974260],[-6.431453],[-4.163031],[8.960535],[4.885987],[-5.818314],[-7.634979],[3.438637],[-5.711126],[2.243834],[2.496372],[-8.154694],[4.180410],[6.189459],[-6.723455],[-5.048975],[-2.978790],[5.952672],[1.621028],[-7.335077],[9.425337],[8.984895],[-5.985226],[-2.025090],[0.453833],[-3.585740],[-2.456580],[-5.922581],[5.118657],[-8.514779],[8.950220],[-7.310323],[9.671400],[-4.284605],[9.691945],[-9.996277],[-1.649478],[-6.552533],[-2.954057],[4.909230],[4.892917],[-4.670502],[8.909242],[7.525453],[-1.393133],[-9.396442],[-2.680128],[-3.581794],[-7.423889],[-0.973670],[6.759218],[3.528841],[6.846673],[-3.558744],[-9.469027],[0.396130],[-4.903325],[-3.619438],[-6.757508],[-3.657365],[3.059284],[8.361299],[-6.251289],[5.804076],[-8.946712],[-6.063630],[-2.492938],[0.747215],[8.763880],[9.160507],[-9.965620],[2.435269],[0.659708],[-9.573370],[7.070553],[-2.196435],[6.714293],[-8.414473],[5.371897],[-1.389648],[-1.237920],[-4.631333],[-3.927614],[-6.227443],[7.107615],[-5.358913],[-1.160756],[-1.931949],[8.519796],[-7.396457],[-2.147268],[2.854994],[-4.142918],[4.828237],[1.969022],[5.540193],[-2.551248],[0.644766],[-7.760385],[-1.199091],[1.763038],[6.282557],[5.879117],[1.080891],[-6.844657],[3.208973],[2.109142],[-0.742647],[1.927174],[1.490568],[1.987169],[-6.969327],[-2.868369],[3.124772],[5.225514],[7.418514],[-7.988046],[-4.425670],[-1.022901],[-4.572593],[8.680907],[5.356826],[-0.185597],[-7.305661],[8.387986],[-7.298997],[2.800414],[-4.974839],[-0.324541],[-0.097734],[-1.838938],[9.374778],[-7.048120],[-9.033636],[2.973460],[8.973690],[-5.816796],[8.788242],[-7.285948],[-8.813516],[-0.727817],[-9.234959],[3.061620],[0.586431],[-3.638712],[2.525618],[3.091873],[4.699871],[3.143336],[9.811105],[-5.118532],[0.518184],[0.963600],[4.103383],[1.397172],[-6.005305],[4.034301],[9.367986],[7.770269],[-4.684410],[-9.893047],[-8.287511],[-0.848989],[1.707803],[8.098641],[9.065093],[1.998411],[1.271575],[1.974653],[-7.518250],[-4.075187],[-5.007879],[2.243964],[9.125776],[1.139706],[1.144615],[2.068336],[5.790696],[1.680936],[7.804094],[5.745531],[5.744380],[-0.879571],[-1.480222],[0.478262],[-8.993521],[3.055138],[5.062997],[-8.135841],[3.941813],[2.318163],[9.096403],[7.537143],[-9.626175],[2.045476],[1.711718],[-8.006333],[6.848254],[2.879114],[2.758786],[-2.869737],[8.839823],[-3.864369],[-2.470756],[6.886450],[-6.144016],[-0.262691],[5.929145],[1.978238],[0.431163],[-0.314819],[1.495096],[3.607254],[0.218660],[-0.975949],[1.779943],[-2.965893],[-0.379384],[-5.284007],[4.038192],[5.983545],[-4.496192],[6.681692],[9.262660],[3.294528],[5.298287],[6.135330],[8.012922],[3.183998],[-4.254688],[2.606500],[-1.928414],[-2.963537],[-3.226108],[4.236144],[-9.656423],[-1.165018],[4.198443],[-2.692862],[-3.939386],[8.387189],[2.889779],[-2.453559],[3.175219],[7.114643],[-2.439787],[4.239279],[-7.568177],[8.444923],[-0.463351],[-7.775214],[0.168936],[3.563318],[-2.206942],[8.972822],[-1.006337],[-4.762163],[-7.752357],[-9.912018],[-3.370622],[3.481517],[-4.071681],[2.048117],[-0.910487],[9.508918],[-2.010426],[4.625824],[-0.440122],[-3.548928],[-4.776182],[4.584541],[-1.082508],[3.727923],[2.229368],[-2.837557],[1.537895],[-6.496011],[-1.045838],[1.234263],[-5.515865],[-8.678491],[-9.779913],[3.341848],[-0.735238],[-1.645412],[0.857347],[3.571670],[0.379510],[-5.627540],[-6.656143],[7.459406],[-2.892226],[9.744540],[8.156615],[9.968812],[-6.303496],[-9.260133],[2.290619],[4.257871],[4.744718],[8.676740],[-0.519549],[-2.189478],[0.477554],[-6.674506],[1.347328],[4.607780],[8.109430],[1.373884],[4.956474],[-5.938160],[-5.816029],[4.586916],[-0.111515],[6.928082],[-0.887133],[8.000500],[-4.442155],[-9.550591],[-7.261998],[8.117788],[-1.839185],[-9.315753],[-4.023918],[6.934657],[-9.845637],[9.666057],[-3.447033],[0.994228],[2.672585],[0.445223],[1.592762],[-7.978760],[-2.166037],[9.175295],[2.198434],[3.897700],[3.246516],[2.349900],[2.381455],[-0.749992],[6.656633],[-3.518865],[-1.421568],[-5.074240],[-5.088615],[7.676730],[-9.993881],[5.199814],[-7.591088],[-3.108546],[-6.844208],[-6.050189],[5.478479],[4.069461],[-3.675625],[-4.016483],[0.313823],[8.591571],[-9.866790],[0.829892],[2.642904],[-0.447434],[9.579399],[3.117158],[-3.593430],[4.189035],[7.819470],[1.443641],[-1.456081],[0.061263],[-7.910894],[-3.564529],[-8.985739],[3.371757],[3.993315],[1.100765],[1.025343],[9.058887],[-2.575083],[-6.579712],[-5.723577],[4.216356],[3.447819],[-8.406537],[3.135089],[-0.136347],[0.526318],[8.046706],[5.893972],[6.776466],[0.105119],[4.505370],[-5.885025],[0.940674],[3.922043],[-4.410983],[-5.222900],[1.412826],[-6.705555],[4.562935],[7.200215],[4.854534],[-1.850180],[-0.153710],[6.246797],[-1.374757],[4.154925],[0.218773],[-7.069435],[-2.643570],[-7.677102],[1.070789],[-7.440629],[7.495061],[-3.424375],[-4.477435],[-9.652194],[0.401649],[-3.661171],[-1.110970],[6.887223],[-4.616193],[4.704210],[-7.037902],[5.734540],[4.540915],[4.982250],[-8.558538],[-0.068126],[-4.640080],[-9.410088],[-4.199938],[-6.190895],[7.559441],[-2.114923],[-8.058154],[-7.566725],[-6.041275],[-2.059499],[-7.981756],[3.940722],[-5.758903],[-3.659209],[-4.632175],[-3.938201],[-0.786083],[3.137065],[7.892486]], dtype = "float64")#candidate|4513|(1092, 1)|const|float64
var_4514 = relay.var("var_4514", dtype = "float64", shape = (2160,))#candidate|4514|(2160,)|var|float64
call_4512 = relay.TupleGetItem(func_190_call(relay.reshape(const_4513.astype('float64'), [7, 12, 13]), relay.reshape(const_4513.astype('float64'), [7, 12, 13]), relay.reshape(var_4514.astype('float64'), [2160,]), relay.reshape(const_4513.astype('float64'), [7, 12, 13]), ), 0)
call_4515 = relay.TupleGetItem(func_195_call(relay.reshape(const_4513.astype('float64'), [7, 12, 13]), relay.reshape(const_4513.astype('float64'), [7, 12, 13]), relay.reshape(var_4514.astype('float64'), [2160,]), relay.reshape(const_4513.astype('float64'), [7, 12, 13]), ), 0)
func_541_call = mod.get_global_var('func_541')
func_544_call = mutated_mod.get_global_var('func_544')
call_4522 = func_541_call(relay.reshape(const_4475.astype('int16'), [3, 5, 7]))
call_4523 = func_541_call(relay.reshape(const_4475.astype('int16'), [3, 5, 7]))
func_371_call = mod.get_global_var('func_371')
func_375_call = mutated_mod.get_global_var('func_375')
call_4524 = relay.TupleGetItem(func_371_call(relay.reshape(call_4462.astype('uint8'), [4, 3, 10]), relay.reshape(call_4462.astype('uint8'), [4, 3, 10]), ), 1)
call_4525 = relay.TupleGetItem(func_375_call(relay.reshape(call_4462.astype('uint8'), [4, 3, 10]), relay.reshape(call_4462.astype('uint8'), [4, 3, 10]), ), 1)
bop_4528 = relay.maximum(call_4474.astype('int64'), relay.reshape(const_4475.astype('int64'), relay.shape_of(call_4474))) # shape=(3, 5, 7)
bop_4531 = relay.maximum(call_4476.astype('int64'), relay.reshape(const_4475.astype('int64'), relay.shape_of(call_4476))) # shape=(3, 5, 7)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_4543 = func_3419_call()
call_4544 = func_3419_call()
output = relay.Tuple([call_4457,call_4462,call_4494,const_4495,call_4502,call_4512,const_4513,var_4514,call_4522,call_4524,bop_4528,call_4543,])
output2 = relay.Tuple([call_4458,call_4463,call_4496,const_4495,call_4503,call_4515,const_4513,var_4514,call_4523,call_4525,bop_4531,call_4544,])
func_4545 = relay.Function([var_4514,], output)
mod['func_4545'] = func_4545
mod = relay.transform.InferType()(mod)
var_4546 = relay.var("var_4546", dtype = "float64", shape = (2160,))#candidate|4546|(2160,)|var|float64
output = func_4545(var_4546)
func_4547 = relay.Function([var_4546], output)
mutated_mod['func_4547'] = func_4547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4060_call = mod.get_global_var('func_4060')
func_4061_call = mutated_mod.get_global_var('func_4061')
call_4564 = func_4060_call()
call_4565 = func_4060_call()
func_3334_call = mod.get_global_var('func_3334')
func_3336_call = mutated_mod.get_global_var('func_3336')
call_4573 = relay.TupleGetItem(func_3334_call(), 1)
call_4574 = relay.TupleGetItem(func_3336_call(), 1)
func_3290_call = mod.get_global_var('func_3290')
func_3293_call = mutated_mod.get_global_var('func_3293')
const_4579 = relay.const([-5.417622,-0.511663,-6.052530,2.784232,-7.216578,3.613114,1.798164,0.374985,-4.155529,-5.759287,7.816672,-9.414572,0.943899,-6.852617,1.664368,-8.860962,5.735632,-8.972564,5.013295,-1.784775,1.021959,6.941284,9.715059,7.527757,-3.563904,1.947322,-8.184686,-1.030061,1.743333,8.148255,-4.015239,-5.072761,-8.587659,0.879963,-2.945643,8.314364,0.725160,0.353057,3.549840,4.603908,-5.780667,-5.149948,-4.130789,-7.636965,3.737801,-6.009186,7.077654,3.237652,9.469632,9.323041,6.919414,4.073109,9.348282,2.705719,4.249805,0.345011,0.879616,6.005577,-8.833256,6.721611,7.557774,-8.666829,-7.095069,-7.728216,-8.926039,-0.964846,6.660327,4.782208,-2.127883,4.410494,2.932229,0.439284,-3.148410,-7.323252,-0.133515,-5.860145,-4.338855,-9.632401,5.574782,-4.547225,-2.228747,5.710684,9.364671,-6.918855,0.609469,3.663239,-6.129060,-3.353976,4.667709,-0.748090,-5.735616,1.238983,3.832869,-7.807173,4.834742,-1.255891,2.966957,1.998763,-7.108666,-0.803541,9.207187,-9.426460,-5.931208,1.114258,-5.535628,4.845212,-0.944971,1.858264,-5.825865,-9.552108,-4.489391,4.988793,-0.252870,-4.432498,-4.250830,3.912241,8.278492,-6.073956,-9.418155,9.626661,2.867166,2.025042,-4.446687,8.124957,-7.369274,-0.768916,-9.605436,-0.881083,-9.206154,-6.837387,8.162017,-3.284195,8.255573,-1.621621,-0.266182,-0.777262,-6.028518,-3.344970,-0.772739,9.395294,4.032129,-0.326983,5.334615,8.733188,3.030519,9.071776,8.607624,8.673755,-2.244627,-5.193037,-3.096897,-7.289576,-7.286859,0.536636,-2.916439,-6.989049,-1.080033,0.810497,6.000372,0.044096,-7.468591,-6.950235,-5.457327,8.523189,5.019730,-9.482491,-9.082261,8.290314], dtype = "float64")#candidate|4579|(168,)|const|float64
call_4578 = relay.TupleGetItem(func_3290_call(relay.reshape(const_4579.astype('float64'), [2, 14, 6])), 0)
call_4580 = relay.TupleGetItem(func_3293_call(relay.reshape(const_4579.astype('float64'), [2, 14, 6])), 0)
func_4385_call = mod.get_global_var('func_4385')
func_4386_call = mutated_mod.get_global_var('func_4386')
call_4587 = relay.TupleGetItem(func_4385_call(), 1)
call_4588 = relay.TupleGetItem(func_4386_call(), 1)
uop_4599 = relay.exp(call_4564.astype('float64')) # shape=(9, 2, 6)
uop_4601 = relay.exp(call_4565.astype('float64')) # shape=(9, 2, 6)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_4609 = relay.TupleGetItem(func_2833_call(), 1)
call_4610 = relay.TupleGetItem(func_2835_call(), 1)
output = relay.Tuple([call_4573,call_4578,const_4579,call_4587,uop_4599,call_4609,])
output2 = relay.Tuple([call_4574,call_4580,const_4579,call_4588,uop_4601,call_4610,])
func_4615 = relay.Function([], output)
mod['func_4615'] = func_4615
mod = relay.transform.InferType()(mod)
output = func_4615()
func_4616 = relay.Function([], output)
mutated_mod['func_4616'] = func_4616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_4661 = relay.TupleGetItem(func_1201_call(), 2)
call_4662 = relay.TupleGetItem(func_1203_call(), 2)
func_3290_call = mod.get_global_var('func_3290')
func_3293_call = mutated_mod.get_global_var('func_3293')
var_4675 = relay.var("var_4675", dtype = "float64", shape = (168,))#candidate|4675|(168,)|var|float64
call_4674 = relay.TupleGetItem(func_3290_call(relay.reshape(var_4675.astype('float64'), [2, 14, 6])), 2)
call_4676 = relay.TupleGetItem(func_3293_call(relay.reshape(var_4675.astype('float64'), [2, 14, 6])), 2)
output = relay.Tuple([call_4661,call_4674,var_4675,])
output2 = relay.Tuple([call_4662,call_4676,var_4675,])
func_4679 = relay.Function([var_4675,], output)
mod['func_4679'] = func_4679
mod = relay.transform.InferType()(mod)
var_4680 = relay.var("var_4680", dtype = "float64", shape = (168,))#candidate|4680|(168,)|var|float64
output = func_4679(var_4680)
func_4681 = relay.Function([var_4680], output)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2286_call = mod.get_global_var('func_2286')
func_2287_call = mutated_mod.get_global_var('func_2287')
call_4708 = relay.TupleGetItem(func_2286_call(), 0)
call_4709 = relay.TupleGetItem(func_2287_call(), 0)
func_958_call = mod.get_global_var('func_958')
func_960_call = mutated_mod.get_global_var('func_960')
var_4725 = relay.var("var_4725", dtype = "int16", shape = ())#candidate|4725|()|var|int16
call_4724 = func_958_call(relay.reshape(var_4725.astype('int16'), []))
call_4726 = func_958_call(relay.reshape(var_4725.astype('int16'), []))
output = relay.Tuple([call_4708,call_4724,var_4725,])
output2 = relay.Tuple([call_4709,call_4726,var_4725,])
func_4735 = relay.Function([var_4725,], output)
mod['func_4735'] = func_4735
mod = relay.transform.InferType()(mod)
mutated_mod['func_4735'] = func_4735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4736 = relay.var("var_4736", dtype = "int16", shape = ())#candidate|4736|()|var|int16
func_4735_call = mutated_mod.get_global_var('func_4735')
call_4737 = func_4735_call(var_4736)
output = call_4737
func_4738 = relay.Function([var_4736], output)
mutated_mod['func_4738'] = func_4738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2960_call = mod.get_global_var('func_2960')
func_2961_call = mutated_mod.get_global_var('func_2961')
call_4777 = relay.TupleGetItem(func_2960_call(), 0)
call_4778 = relay.TupleGetItem(func_2961_call(), 0)
func_2891_call = mod.get_global_var('func_2891')
func_2895_call = mutated_mod.get_global_var('func_2895')
const_4785 = relay.const([1.113568,2.101925,7.790432,-1.998177,-6.481285,3.812644,4.479568,-1.802837,3.726105,3.185229,6.673738,-4.304392,8.189253,-0.476658,3.976697,5.735255,0.828175,-0.647232,-7.661864,1.108546,2.926892,7.389899,8.398991,4.180638,-9.485672,-0.919770,-8.934815,4.646674,-1.481147,-1.805293,-1.791862,-2.288998,-9.579380,7.945592,9.951335,3.814953,6.697794,5.513948,-2.018439,2.448694,2.228532,2.501683,9.693492,-1.286480,-2.916093,9.123591,-3.998400,-6.335565,5.154741,1.512485,7.171986,0.884988,8.984459,3.309556,5.836466,-6.174994,-4.413020,-6.055242,1.329741,7.182322,8.657072,-9.710492,-1.130574,5.352207,-3.266525,-1.250177,9.584892,-1.921079,3.638949,1.029971,8.179276,5.490067,5.830217,8.880352,-4.891106,-0.081340,6.915907,2.554004,-3.477909,1.729969,8.957680,-2.805537,5.477714,1.681869,-2.625139,0.005019,5.094145,4.523062,-7.158024,7.258611,-8.791983,2.102461,-4.725618,7.830439,4.601726,-1.898667,1.354228,2.004992,0.548021,5.687160,3.178282,1.774336,5.303503,8.423395,7.257861,0.274455,3.661614,-3.487169,7.649897,-2.268506,-1.630539,-3.702020,0.170546,8.176721,-0.727912,-3.226081,2.113605,-2.072898,-6.178054,9.557388,-2.330144,8.124059,0.522092,-5.028523,-5.919307,1.467757,3.137011,-6.963845,8.672384,7.118078,-6.008816,-0.091507,-7.008318,-4.409331,-1.247150,-5.173126,-9.784630,-9.977822,9.186360,1.084358,8.240096,7.975525,-7.256186,1.610777,6.214409,2.239652,-2.395004,3.183498,1.829692,-5.231338,6.786528,-3.787787,-3.170964,9.029234,4.237470,5.850560,2.261684,5.270542,-2.891219,-7.382436,-2.206212,0.290667,0.916398,4.021234,2.408249,-9.463521,-9.599070,-0.125770,-7.520008,7.692500,-6.714252,-0.765946,3.361917,2.637735,4.620617,6.478154,-1.287291,-5.189975,1.603752,-5.375026,2.166886,-8.609936,3.149892,9.971263,-8.734370,-5.946149,2.129352,3.767644,-3.128145,5.126374,-6.412453,0.151474,9.654348,-9.000451,6.199050,8.449366,2.767565,2.289011,2.655487,-7.646868,3.970751,-1.830144,-0.096727,2.098437,6.774705,-7.012935,2.491009,-3.990029,6.549228,6.262935,4.683217,-3.973249,-8.689271,6.359887,-6.864723,-3.074626,-8.606679,-1.050038,-9.381551,-5.584358,-8.447868,2.897572,-0.156715,6.236078,-5.259124,5.499579,2.042961,-2.537460,8.001755,6.827986,-5.746032,1.827776,7.771257,0.326668,6.882688,2.523397,-4.476725,2.593598,-1.747780,-0.195619,2.326642,-1.791421,6.101903,9.834185,-7.882616,-8.268375,-1.120864,-9.514043,-0.613727,3.071204,4.654375,6.452886,9.384232,-2.845092,9.932107,-4.941515,-7.138914,-4.665535,0.970653,-7.544031,-3.786838,-8.430563,-1.294665,-7.587887,-7.488573,-2.115502,-0.882649,7.463618,-8.856127,3.991852,5.494082,8.572895,-3.275833,3.981827,1.350255,-7.150152,8.123670,-8.156136,8.804869,-5.087258,-3.904044,2.738774,-5.500686,-4.850000,-8.190853,7.045288,9.789439,-3.899250,-0.243139,1.364329,9.990786,2.325971,7.247731,6.347792,7.311563,-3.979274,-3.784736,-7.273212,2.350604,-8.158932,8.619032,2.672255,-0.127792,-6.747950,0.248908,-9.793385,7.402309,8.365971,1.192821,3.234734,-4.417066,-4.555204,1.835797,-1.083043,1.729605,8.684751,-3.021054,8.698934,-3.483047,1.920450,0.029146,-6.556637,4.109136,1.087802,-5.603677,3.739628,8.810056,-0.219140,3.916503,4.589877,0.698830,7.371526,1.776528,-0.483014,-3.814787,6.121708,9.275183,5.698004,-8.782491,0.092478,9.641852,0.568893,-7.544501,-8.036407,-2.592366,-5.382016,-8.745046,3.370212,-7.488948,2.854286,0.306376,-7.852657,-9.754003,-8.981726,0.945038,-8.788665,-1.250349,7.519144,7.569137,-4.142015,8.152063,0.433767,-8.424502,2.330953,-7.692230,-9.890844,1.825075,-9.856425,-8.133504,-4.920985,-1.222523,-7.704269,1.556472,8.723715,5.090843,-0.307550,-3.949311,-3.907945,0.959239,1.417424,-2.875184,9.244007,-7.454164,-5.764075,-3.788197,-9.140689,1.901594,-6.544918,-7.053218,3.225278,9.757573,-3.302781,3.053346,2.689237,-2.047478,-7.846003,-0.239086,7.616050,3.625001,8.744229,-0.233607,-4.727580,-7.565886,-4.722160,-6.438597,9.027857,-3.201386,7.432166,-8.613322,-4.023727,7.959633,-0.508243,-4.124918,-5.570491,2.487883,-0.382928,-6.536921,6.975592,8.711802,5.640958,6.512630,4.101859,9.385495,8.126345,2.509150,-8.471936,-0.824889,-2.076177,-5.320491,-8.898266,-1.689657,-9.653477,5.590439,-2.825265,2.141368,-4.554683,-0.561627,-7.671482,-3.967621,9.231838,4.667087,-0.305666,-9.317505,5.613654,7.047869,-2.799592,-3.876370,-3.373292,-2.595186,-4.414435,1.610190,-8.604814,-5.063076,3.743340,-8.773969,7.265764,-0.923035,4.848495,-7.906861,-3.319531,-0.472464,-2.021777,8.877341,-6.886117,5.132746,9.518899,9.646723,-0.633503,2.395881,-1.975255,-4.140509,4.247324,2.404341,-2.528344,2.279328,-7.081762,9.303988,-1.705075,5.232066,0.280663,7.486349,8.760832,-4.489492,6.620918,8.406891,-5.351999,6.710166,5.044657,-6.720476,-9.568718,-9.555321,-7.666428,3.139552,-3.230613,7.243053,6.703364,-0.292259,-3.847367,-9.984563,-0.013585,6.589869,-6.357798,7.468127,-9.547745,6.640399,2.656275,4.835244,2.625880,2.034893,8.760412,8.059674,0.698013,-4.960019,4.673126,7.204553,-8.635858,-8.048769,1.221960,-6.440707,1.102487,2.537049,9.088797,-5.667792,7.443688,-5.690066,7.785205,-2.287881,-2.987082,-6.878171,0.438164,3.917951,-7.066455,-9.869168,2.982138,1.205190,-8.199438,-9.318998,1.335409,2.060274,-8.310221,-4.584108,8.941306,-3.250575,2.394201,7.712530,7.731109,-6.363397,-6.028753,4.780990,-4.387146,7.788331,9.352191,-2.118854,-6.965937,-6.064454,-4.621954,-3.396411,5.045178,1.257962,1.667834,4.532177,7.492792,3.858923,2.329995,-6.319416,7.241601,-8.455813,6.354911,-1.408306,-0.971679,-6.257309,6.242733,0.380882,2.795815,8.440614,0.942535,6.375134,-6.722977,4.218395,-2.184333,3.207958,3.924788,-5.656446,1.610783,-7.130096,4.537864,-1.007277,-9.666838,2.961264,-4.040791,-9.405097,-5.612863,-0.156894,-1.663443,-4.312861,1.081520,6.675933,0.368264,5.369123,-6.888979,6.221678,-2.488642,-5.681995,9.206387,1.970666,-4.069093,8.551270,3.290514,8.936013,4.916693,-5.506735,-5.179223,4.566989,-1.473509,-8.899692,0.836729,-0.544627,3.613335,-4.985797,1.368736,-1.912045,4.646405,-5.399587,9.482055,5.803630,8.257872,-0.461575,0.853052,7.849601,-5.727896,-5.903948,6.366714,-0.951109,5.962983,7.359860,-3.629637,-5.558594,-0.190721,-7.614112,-9.041441,-1.690383,-5.520011,6.539433,6.951002,7.634888,-0.612202,1.430099,-1.343672,-5.198558,-1.201551,-5.982730,8.618291,-0.154051,3.282504,-5.660427,-5.763400,5.570815,5.362392,-9.516144,-2.023679,-7.103572,9.001263,-7.658858,1.039224,1.960240,6.869658,-5.507923,-0.028800,-7.583134,-5.746025,-6.592255,6.546021,2.005217,-3.427050,4.473953,9.347455,-5.210780,6.827547,-6.691079,3.188868,-3.580786,-3.454080,-3.501703,-6.883966,-4.594883,7.017962,5.885776,1.440130,4.770071,8.661967,-0.003509,-3.090766,5.225891,8.524434,8.867478,-0.786182,0.377852,-4.077064,7.727758,-4.709289,3.319593,-7.484588,4.551616,6.557656,-4.896363,4.171320,5.972059,8.131935,-2.813964,9.659538,8.678234,9.400441,-0.831869,-3.095036,-5.916838,4.675558,-1.805337,6.054356,6.913579,-4.304489,5.224822,-9.710574,-8.175129,5.821620,0.241888,-0.168075,-9.148777,3.424326,2.734896,8.465767,1.653513,-6.678631,-2.368812,4.080750,-1.159789,3.052171,6.769754,2.626112,2.690662,-4.270848,2.063991,-9.407687,9.163893,-9.549174,6.029705,-8.312047,-8.415158,5.599448,-7.889166,0.902358,-2.242664,-4.484988,-7.390604,7.286099,5.873455,-9.067912,-1.205647,-6.570427,8.417005,7.557475,-9.145425,6.233000,-3.881025,-3.843795,2.621915,3.025881,-4.233023,6.346671,4.535698,9.046452,6.108495,0.888790,-3.630801,1.990814,-0.028898,-5.683632,-7.416404,-3.376973,-8.180649,-1.461804,-4.947656,-5.155499,8.624533,7.197595,-2.905095,3.520012,5.690819,-4.499260,7.586195,9.679615,-5.918704,-4.244263,9.209063,7.987809,9.079765,8.864177,7.736867,2.116020,7.084588,-4.139421,8.495525,3.548431,-6.630048,-7.304321,5.025286,-3.341125,5.139951,5.212376,8.993537,2.441255,-3.282606,-4.840794,-4.826652,-9.553794,-8.459283,6.172279,4.446854,-3.801668,-9.252453,4.540142,-6.193806,2.678037,-3.677487,-9.191938,4.781966,7.911331,-3.686386,-0.269931,2.089624,5.500264,5.557968,0.856158,1.273493,-5.916594,-2.057744,-9.076178,5.665099,-3.958416,-7.174765,7.466297,-3.718391,7.561708,-2.895399,3.362211,-9.218455,-9.223930,-1.768483,-1.008263,8.599524,0.014234,-7.666548,9.444508,-6.705955,-5.577545,-3.880079,-7.558594,-7.459516,-3.470461,6.344813,-6.770555,-5.500128,0.378837,-1.790474,-1.060203,5.022878,0.685397,5.122905,7.495221,-4.819241,-8.932658,-2.650094,-0.136051,-7.684674,5.276812,-4.175935,-8.034647,-7.897676,2.620580,2.122360,7.260350,-3.542633,2.970869,5.455557,6.187721,-3.309769,-2.709458,-0.228853,7.752558,4.083160,5.165981,-2.904700,-1.621025,1.839551,8.893929,-8.564157,0.050797,4.361409,-8.193471,-3.110953,-8.823635,-6.691548,4.875636,1.449228,0.551476,4.593140,0.756398,-0.702731,0.597290,0.091936,1.844547,9.845894,-7.644522,7.838480,1.685281,-8.735897,-6.329576,-6.564390,-5.126054,-1.215178,2.677133,-1.814616,5.375763,-0.569089,-4.489896,4.572864,1.039086,8.059788,5.686695,0.896951,-8.862565,-6.923352,-6.721596,-0.884301,0.293106,-3.961963,-2.495381,3.738836,-7.847154,-3.239792,9.961879,-3.677994,-7.438844,2.189256,-9.856510,-1.391229,-9.840673,0.703611,-4.385304,9.935367,-4.206345,-1.579173,-3.976644,-5.220204,9.331206,-1.941689,-9.413323,-1.159881,-2.853395,-2.286021,-8.182118,0.450742,6.402541,0.431470,-6.264970,9.143699,-4.039849,7.617404,9.310463,8.119043,4.266531,-3.654423,-1.755147,-5.550966,-4.421987,5.338197,-2.600510,1.789753,0.338780,4.209873,-2.363440,-7.029139,-5.194935,4.030434,0.190812,-0.373953,-2.689635,-3.981389,4.983451,4.175086,5.888698,-4.333438,4.519133,-2.368197,-9.427928,-4.223352,-0.649912,-7.313672,6.233750,9.755669,-0.798141,0.999382,-2.213887,-7.610543,-5.717404,8.392929,-3.357062,3.022401,2.261837,6.530564,4.519158,-2.883306,-1.045258,-8.433712,5.264598,6.047023,-6.074805,-8.202749,-6.408957,-6.080523,4.630696,0.481544,-7.721862,6.015433,-4.895169,0.574217,6.682093,4.628030,-1.974988,2.605076,6.743065,-6.276449,3.365681,-1.251929,8.443312,-0.068318,-7.207210,-0.800764,7.675768,2.308373,-5.153195,2.297552,-4.324069,-3.820512,7.811259,-5.914806,-3.816289,-9.571855,-6.225482,5.792752,7.480694,-9.398845,9.420841,-3.538662,-6.240954,-3.320738,1.623612,-8.032765,4.667328,-1.566821,-0.931405,4.793881,1.154098,-2.272921,2.245342,5.740656,-7.546270,-4.182210,3.271709,-9.454339,-5.476716,-9.575494,-4.198914,-1.828841,8.765540,-9.276558,8.191168,-2.880715,0.910561,-3.169260,2.786820,-8.233662,0.641801,6.149531,0.255488,6.806916,5.558600,6.466489,-0.522921,9.573631,6.115397,-4.650528,9.495556], dtype = "float64")#candidate|4785|(1092,)|const|float64
call_4784 = relay.TupleGetItem(func_2891_call(relay.reshape(const_4785.astype('float64'), [14, 78]), relay.reshape(const_4785.astype('float64'), [14, 78]), ), 1)
call_4786 = relay.TupleGetItem(func_2895_call(relay.reshape(const_4785.astype('float64'), [14, 78]), relay.reshape(const_4785.astype('float64'), [14, 78]), ), 1)
func_4060_call = mod.get_global_var('func_4060')
func_4061_call = mutated_mod.get_global_var('func_4061')
call_4793 = func_4060_call()
call_4794 = func_4060_call()
func_2227_call = mod.get_global_var('func_2227')
func_2229_call = mutated_mod.get_global_var('func_2229')
call_4800 = relay.TupleGetItem(func_2227_call(), 1)
call_4801 = relay.TupleGetItem(func_2229_call(), 1)
output = relay.Tuple([call_4777,call_4784,const_4785,call_4793,call_4800,])
output2 = relay.Tuple([call_4778,call_4786,const_4785,call_4794,call_4801,])
func_4806 = relay.Function([], output)
mod['func_4806'] = func_4806
mod = relay.transform.InferType()(mod)
mutated_mod['func_4806'] = func_4806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4806_call = mutated_mod.get_global_var('func_4806')
call_4807 = func_4806_call()
output = call_4807
func_4808 = relay.Function([], output)
mutated_mod['func_4808'] = func_4808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_4815 = func_896_call()
call_4816 = func_896_call()
uop_4824 = relay.acos(call_4815.astype('float64')) # shape=(12, 9, 5)
uop_4826 = relay.acos(call_4816.astype('float64')) # shape=(12, 9, 5)
uop_4831 = relay.asinh(uop_4824.astype('float32')) # shape=(12, 9, 5)
uop_4833 = relay.asinh(uop_4826.astype('float32')) # shape=(12, 9, 5)
func_4615_call = mod.get_global_var('func_4615')
func_4616_call = mutated_mod.get_global_var('func_4616')
call_4858 = relay.TupleGetItem(func_4615_call(), 5)
call_4859 = relay.TupleGetItem(func_4616_call(), 5)
func_4679_call = mod.get_global_var('func_4679')
func_4681_call = mutated_mod.get_global_var('func_4681')
const_4864 = relay.const([[-4.730910],[4.548330],[6.508710],[4.532497],[0.804667],[6.726805],[7.588090],[1.948841],[-0.102824],[4.968844],[1.177777],[-4.084356],[0.031531],[8.129374],[-3.636000],[-5.850400],[4.436090],[-7.557063],[-6.793036],[3.739016],[6.314596],[6.448502],[-9.865984],[6.432401],[-5.863028],[-6.337670],[-3.389495],[3.238386],[-7.766499],[0.200699],[-3.878403],[1.289865],[8.966108],[-0.184216],[5.039617],[2.822443],[-2.258828],[-8.817043],[-7.840203],[-3.942207],[-0.164970],[-3.008068],[1.398976],[1.526636],[-1.552289],[-9.430996],[-8.079514],[8.710006],[7.324229],[7.168035],[0.489444],[-0.953812],[2.788519],[-3.521240],[-7.769115],[0.855647],[6.887558],[4.650181],[1.218710],[-2.597325],[7.988376],[-2.152158],[-0.951884],[-1.628215],[-7.117520],[5.478623],[-8.221262],[3.040923],[-4.467883],[2.405030],[-6.770105],[1.003150],[2.079405],[-7.447793],[8.054821],[-8.144106],[-2.063030],[-4.371281],[-2.569415],[-8.548505],[-1.445767],[-3.768803],[4.582535],[0.750992],[2.653211],[-9.144693],[4.781597],[2.957368],[-6.911200],[9.246027],[-2.866005],[4.637217],[-3.157528],[-3.841633],[-7.321654],[8.322066],[-8.670141],[8.599360],[-9.288690],[1.302413],[-8.216219],[9.388781],[5.546752],[-7.946714],[0.298834],[-5.754506],[2.128770],[-3.677097],[5.612556],[4.074524],[5.765433],[2.456651],[-1.144571],[-4.463773],[8.563962],[9.484805],[0.787200],[6.607097],[5.269559],[0.435814],[7.456440],[7.354188],[2.006060],[-7.337136],[-5.692868],[-3.611717],[5.943563],[1.267181],[-6.286461],[-7.938134],[7.700266],[9.551212],[-7.612138],[2.423429],[-1.185906],[-4.773549],[-5.105736],[3.671624],[2.721369],[7.746037],[1.417588],[-5.339545],[6.106517],[-8.795578],[0.449004],[6.112149],[-0.646201],[6.077832],[4.939993],[9.093940],[2.412811],[0.564547],[2.098578],[9.675496],[-1.000811],[-1.823922],[-9.658772],[-1.768705],[-2.919537],[-1.190095],[8.250830],[-9.673942],[-6.932150],[6.908863],[-6.176469],[-7.527295],[-0.350673],[-7.458201]], dtype = "float64")#candidate|4864|(168, 1)|const|float64
call_4863 = relay.TupleGetItem(func_4679_call(relay.reshape(const_4864.astype('float64'), [168,])), 1)
call_4865 = relay.TupleGetItem(func_4681_call(relay.reshape(const_4864.astype('float64'), [168,])), 1)
func_2960_call = mod.get_global_var('func_2960')
func_2961_call = mutated_mod.get_global_var('func_2961')
call_4866 = relay.TupleGetItem(func_2960_call(), 0)
call_4867 = relay.TupleGetItem(func_2961_call(), 0)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
const_4886 = relay.const([[True,True,False,False,False,False,True,True,False,False,True,False,False,True],[False,False,False,True,False,False,True,False,True,False,False,False,False,False],[True,True,False,False,True,False,False,True,False,True,False,False,True,False],[True,True,True,True,True,True,True,False,True,False,False,True,False,True],[True,False,True,False,True,True,False,False,True,False,True,False,True,False],[False,False,False,True,True,True,True,True,False,False,True,True,False,True],[False,False,False,False,False,False,False,True,True,True,False,True,True,True]], dtype = "bool")#candidate|4886|(7, 14)|const|bool
call_4885 = func_1147_call(relay.reshape(const_4886.astype('bool'), [14, 1, 7]))
call_4887 = func_1147_call(relay.reshape(const_4886.astype('bool'), [14, 1, 7]))
func_4679_call = mod.get_global_var('func_4679')
func_4681_call = mutated_mod.get_global_var('func_4681')
call_4889 = relay.TupleGetItem(func_4679_call(relay.reshape(const_4864.astype('float64'), [168,])), 2)
call_4890 = relay.TupleGetItem(func_4681_call(relay.reshape(const_4864.astype('float64'), [168,])), 2)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_4895 = relay.TupleGetItem(func_3209_call(), 0)
call_4896 = relay.TupleGetItem(func_3211_call(), 0)
func_1825_call = mod.get_global_var('func_1825')
func_1828_call = mutated_mod.get_global_var('func_1828')
call_4907 = relay.TupleGetItem(func_1825_call(relay.reshape(call_4895.astype('bool'), [12, 9, 5])), 0)
call_4908 = relay.TupleGetItem(func_1828_call(relay.reshape(call_4895.astype('bool'), [12, 9, 5])), 0)
func_4447_call = mod.get_global_var('func_4447')
func_4449_call = mutated_mod.get_global_var('func_4449')
var_4926 = relay.var("var_4926", dtype = "float64", shape = (108,))#candidate|4926|(108,)|var|float64
call_4925 = relay.TupleGetItem(func_4447_call(relay.reshape(var_4926.astype('float64'), [9, 2, 6])), 0)
call_4927 = relay.TupleGetItem(func_4449_call(relay.reshape(var_4926.astype('float64'), [9, 2, 6])), 0)
output = relay.Tuple([uop_4831,call_4858,call_4863,const_4864,call_4866,call_4885,const_4886,call_4889,call_4895,call_4907,call_4925,var_4926,])
output2 = relay.Tuple([uop_4833,call_4859,call_4865,const_4864,call_4867,call_4887,const_4886,call_4890,call_4896,call_4908,call_4927,var_4926,])
func_4952 = relay.Function([var_4926,], output)
mod['func_4952'] = func_4952
mod = relay.transform.InferType()(mod)
var_4953 = relay.var("var_4953", dtype = "float64", shape = (108,))#candidate|4953|(108,)|var|float64
output = func_4952(var_4953)
func_4954 = relay.Function([var_4953], output)
mutated_mod['func_4954'] = func_4954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2227_call = mod.get_global_var('func_2227')
func_2229_call = mutated_mod.get_global_var('func_2229')
call_4985 = relay.TupleGetItem(func_2227_call(), 0)
call_4986 = relay.TupleGetItem(func_2229_call(), 0)
output = relay.Tuple([call_4985,])
output2 = relay.Tuple([call_4986,])
func_5002 = relay.Function([], output)
mod['func_5002'] = func_5002
mod = relay.transform.InferType()(mod)
mutated_mod['func_5002'] = func_5002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5002_call = mutated_mod.get_global_var('func_5002')
call_5003 = func_5002_call()
output = call_5003
func_5004 = relay.Function([], output)
mutated_mod['func_5004'] = func_5004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_5017 = relay.TupleGetItem(func_2180_call(), 0)
call_5018 = relay.TupleGetItem(func_2181_call(), 0)
func_1445_call = mod.get_global_var('func_1445')
func_1448_call = mutated_mod.get_global_var('func_1448')
var_5036 = relay.var("var_5036", dtype = "bool", shape = (540,))#candidate|5036|(540,)|var|bool
call_5035 = relay.TupleGetItem(func_1445_call(relay.reshape(var_5036.astype('bool'), [12, 9, 5])), 0)
call_5037 = relay.TupleGetItem(func_1448_call(relay.reshape(var_5036.astype('bool'), [12, 9, 5])), 0)
output = relay.Tuple([call_5017,call_5035,var_5036,])
output2 = relay.Tuple([call_5018,call_5037,var_5036,])
func_5047 = relay.Function([var_5036,], output)
mod['func_5047'] = func_5047
mod = relay.transform.InferType()(mod)
mutated_mod['func_5047'] = func_5047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5048 = relay.var("var_5048", dtype = "bool", shape = (540,))#candidate|5048|(540,)|var|bool
func_5047_call = mutated_mod.get_global_var('func_5047')
call_5049 = func_5047_call(var_5048)
output = call_5049
func_5050 = relay.Function([var_5048], output)
mutated_mod['func_5050'] = func_5050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2032_call = mod.get_global_var('func_2032')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_5074 = relay.TupleGetItem(func_2032_call(), 0)
call_5075 = relay.TupleGetItem(func_2033_call(), 0)
output = relay.Tuple([call_5074,])
output2 = relay.Tuple([call_5075,])
func_5080 = relay.Function([], output)
mod['func_5080'] = func_5080
mod = relay.transform.InferType()(mod)
output = func_5080()
func_5081 = relay.Function([], output)
mutated_mod['func_5081'] = func_5081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2286_call = mod.get_global_var('func_2286')
func_2287_call = mutated_mod.get_global_var('func_2287')
call_5090 = relay.TupleGetItem(func_2286_call(), 0)
call_5091 = relay.TupleGetItem(func_2287_call(), 0)
output = call_5090
output2 = call_5091
func_5117 = relay.Function([], output)
mod['func_5117'] = func_5117
mod = relay.transform.InferType()(mod)
mutated_mod['func_5117'] = func_5117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5117_call = mutated_mod.get_global_var('func_5117')
call_5118 = func_5117_call()
output = call_5118
func_5119 = relay.Function([], output)
mutated_mod['func_5119'] = func_5119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2032_call = mod.get_global_var('func_2032')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_5151 = relay.TupleGetItem(func_2032_call(), 0)
call_5152 = relay.TupleGetItem(func_2033_call(), 0)
output = call_5151
output2 = call_5152
func_5173 = relay.Function([], output)
mod['func_5173'] = func_5173
mod = relay.transform.InferType()(mod)
output = func_5173()
func_5174 = relay.Function([], output)
mutated_mod['func_5174'] = func_5174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_5237 = func_3419_call()
call_5238 = func_3419_call()
output = call_5237
output2 = call_5238
func_5273 = relay.Function([], output)
mod['func_5273'] = func_5273
mod = relay.transform.InferType()(mod)
output = func_5273()
func_5274 = relay.Function([], output)
mutated_mod['func_5274'] = func_5274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1042_call = mutated_mod.get_global_var('func_1042')
call_5283 = relay.TupleGetItem(func_1041_call(), 0)
call_5284 = relay.TupleGetItem(func_1042_call(), 0)
func_1445_call = mod.get_global_var('func_1445')
func_1448_call = mutated_mod.get_global_var('func_1448')
call_5304 = relay.TupleGetItem(func_1445_call(relay.reshape(call_5283.astype('bool'), [12, 9, 5])), 0)
call_5305 = relay.TupleGetItem(func_1448_call(relay.reshape(call_5283.astype('bool'), [12, 9, 5])), 0)
output = relay.Tuple([call_5283,call_5304,])
output2 = relay.Tuple([call_5284,call_5305,])
func_5308 = relay.Function([], output)
mod['func_5308'] = func_5308
mod = relay.transform.InferType()(mod)
output = func_5308()
func_5309 = relay.Function([], output)
mutated_mod['func_5309'] = func_5309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3777_call = mod.get_global_var('func_3777')
func_3778_call = mutated_mod.get_global_var('func_3778')
call_5330 = relay.TupleGetItem(func_3777_call(), 0)
call_5331 = relay.TupleGetItem(func_3778_call(), 0)
output = call_5330
output2 = call_5331
func_5355 = relay.Function([], output)
mod['func_5355'] = func_5355
mod = relay.transform.InferType()(mod)
mutated_mod['func_5355'] = func_5355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5355_call = mutated_mod.get_global_var('func_5355')
call_5356 = func_5355_call()
output = call_5356
func_5357 = relay.Function([], output)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5080_call = mod.get_global_var('func_5080')
func_5081_call = mutated_mod.get_global_var('func_5081')
call_5423 = relay.TupleGetItem(func_5080_call(), 0)
call_5424 = relay.TupleGetItem(func_5081_call(), 0)
output = call_5423
output2 = call_5424
func_5446 = relay.Function([], output)
mod['func_5446'] = func_5446
mod = relay.transform.InferType()(mod)
output = func_5446()
func_5447 = relay.Function([], output)
mutated_mod['func_5447'] = func_5447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1042_call = mutated_mod.get_global_var('func_1042')
call_5461 = relay.TupleGetItem(func_1041_call(), 0)
call_5462 = relay.TupleGetItem(func_1042_call(), 0)
func_3541_call = mod.get_global_var('func_3541')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_5470 = relay.TupleGetItem(func_3541_call(), 1)
call_5471 = relay.TupleGetItem(func_3542_call(), 1)
output = relay.Tuple([call_5461,call_5470,])
output2 = relay.Tuple([call_5462,call_5471,])
func_5488 = relay.Function([], output)
mod['func_5488'] = func_5488
mod = relay.transform.InferType()(mod)
output = func_5488()
func_5489 = relay.Function([], output)
mutated_mod['func_5489'] = func_5489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5490 = relay.var("var_5490", dtype = "float32", shape = (8, 14, 5))#candidate|5490|(8, 14, 5)|var|float32
uop_5491 = relay.sqrt(var_5490.astype('float32')) # shape=(8, 14, 5)
func_4220_call = mod.get_global_var('func_4220')
func_4222_call = mutated_mod.get_global_var('func_4222')
call_5500 = relay.TupleGetItem(func_4220_call(), 4)
call_5501 = relay.TupleGetItem(func_4222_call(), 4)
uop_5511 = relay.log(var_5490.astype('float64')) # shape=(8, 14, 5)
var_5521 = relay.var("var_5521", dtype = "float64", shape = (8, 14, 5))#candidate|5521|(8, 14, 5)|var|float64
bop_5522 = relay.mod(uop_5511.astype('float64'), relay.reshape(var_5521.astype('float64'), relay.shape_of(uop_5511))) # shape=(8, 14, 5)
func_1494_call = mod.get_global_var('func_1494')
func_1496_call = mutated_mod.get_global_var('func_1496')
call_5527 = relay.TupleGetItem(func_1494_call(), 1)
call_5528 = relay.TupleGetItem(func_1496_call(), 1)
output = relay.Tuple([uop_5491,call_5500,bop_5522,call_5527,])
output2 = relay.Tuple([uop_5491,call_5501,bop_5522,call_5528,])
func_5537 = relay.Function([var_5490,var_5521,], output)
mod['func_5537'] = func_5537
mod = relay.transform.InferType()(mod)
mutated_mod['func_5537'] = func_5537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5537_call = mutated_mod.get_global_var('func_5537')
var_5539 = relay.var("var_5539", dtype = "float32", shape = (8, 14, 5))#candidate|5539|(8, 14, 5)|var|float32
var_5540 = relay.var("var_5540", dtype = "float64", shape = (8, 14, 5))#candidate|5540|(8, 14, 5)|var|float64
call_5538 = func_5537_call(var_5539,var_5540,)
output = call_5538
func_5541 = relay.Function([var_5539,var_5540,], output)
mutated_mod['func_5541'] = func_5541
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5546 = relay.const([[[-8,4,-7,10,-7,-9,4,7],[-4,-7,7,3,-5,9,-6,9],[-7,7,-8,-6,-9,3,8,3],[10,-10,-6,-7,6,3,6,-7],[-7,-10,3,-1,-10,-6,-4,-2],[-1,-1,3,-7,7,-2,2,-7],[8,-5,3,3,-10,-4,2,-1],[8,7,4,-2,-4,4,-8,4],[-8,6,4,-7,-2,9,8,-4],[-5,-8,7,-8,6,4,10,-9],[6,10,-7,-4,-9,-1,-6,1],[-8,-8,1,-5,-5,1,6,6]],[[5,3,4,-1,2,-7,-8,8],[1,2,-10,-9,5,-2,1,-6],[3,-8,-7,-9,-10,-7,-9,6],[-3,-10,-5,-9,10,-3,9,-5],[9,3,-4,-4,1,5,-8,-7],[-1,-3,-7,-9,6,-6,-1,1],[-8,-3,7,7,3,-7,4,2],[-1,2,-1,-5,-2,4,-5,1],[-7,4,-4,-1,2,7,-10,-1],[-8,-10,-5,6,7,-1,2,6],[8,5,-2,10,2,1,-10,6],[-7,-7,-3,-2,-4,5,-4,-7]],[[-10,6,-9,-5,6,5,-8,4],[-7,-10,5,-3,2,4,6,10],[-4,-7,5,-3,7,6,9,3],[-10,-6,-2,3,6,9,9,-7],[8,-7,7,-3,-10,-2,-7,-4],[-5,-2,-1,10,-2,-7,-10,7],[2,2,-6,6,4,-6,10,-9],[-2,3,-8,1,1,3,6,-3],[4,8,2,9,-1,-8,6,-7],[10,4,-2,-8,-4,-8,10,7],[-7,-7,10,-7,-10,-3,4,-9],[-1,-2,7,-7,10,-1,7,4]],[[4,4,-7,6,-6,6,-8,-4],[-7,1,-8,-6,6,-9,-5,8],[4,5,5,-1,-10,-2,-1,9],[-7,-3,-1,-3,6,1,-5,-3],[2,-2,-3,1,9,4,-4,-9],[5,5,-1,-2,-2,-10,-3,8],[3,6,3,9,-3,-2,-6,-9],[3,7,-4,-2,-4,-5,-5,4],[-5,4,-6,-1,-8,7,6,-4],[-1,4,2,6,-8,4,-6,-3],[-7,-10,-10,3,4,1,-7,8],[8,7,-9,7,-2,3,9,10]],[[3,-10,-8,2,-4,-9,-9,-3],[2,8,-1,-1,8,-2,9,3],[-9,-4,8,7,8,7,7,-4],[-7,10,-7,-10,2,2,-1,3],[1,-7,3,3,3,1,-7,9],[-9,-10,8,3,-2,-3,-1,-7],[4,-1,9,10,-1,4,-6,-10],[1,-1,-1,-3,9,-10,-4,5],[10,-7,-8,-4,8,7,-10,10],[8,-10,-8,-6,9,-9,2,3],[8,2,6,4,-2,9,9,-3],[3,-8,8,-7,-9,-10,-10,2]],[[2,5,9,-2,-2,3,2,-10],[1,3,-1,6,7,-10,10,9],[5,-10,5,5,4,-9,-6,-1],[-7,6,-5,10,10,-10,-2,-2],[3,1,-5,5,6,8,-5,1],[-3,3,-1,1,3,-4,2,-1],[-10,-3,9,-8,6,-7,5,6],[-6,8,-10,-9,-10,-7,10,9],[2,-7,-2,6,-1,10,2,5],[-4,3,2,8,-6,-6,5,-8],[-7,-8,10,-8,8,8,-3,7],[-8,1,6,-3,6,-9,-5,8]],[[2,3,-1,-2,9,2,-4,9],[-1,3,-2,10,-6,-1,-7,-4],[-6,-10,8,-9,-3,8,9,-1],[-10,6,3,-1,4,-9,-10,8],[10,4,-2,-4,3,-4,9,-1],[-2,-4,2,3,7,4,6,5],[4,3,-4,10,-9,10,-2,9],[-9,-10,-10,6,6,7,6,8],[-5,3,-8,-9,-9,-4,-1,6],[8,2,10,5,7,-10,8,-2],[-2,2,-10,-6,-1,2,5,-3],[-8,3,2,6,4,2,-7,-2]],[[-9,-9,-7,-10,7,-10,1,-9],[8,-7,-2,10,2,-7,-8,9],[5,-6,5,1,-7,-6,4,-7],[7,-5,-8,6,-8,-10,4,-2],[7,1,6,-4,3,-5,-5,-9],[8,-3,8,-8,-2,1,-10,-5],[4,9,-8,-7,2,7,-4,-2],[-10,-1,-2,-5,9,-10,-2,6],[-1,-8,-9,-1,6,-10,6,-3],[5,-7,4,1,9,-2,6,-8],[4,-7,8,-4,8,5,4,-10],[-3,-5,-8,-10,-10,9,10,-5]],[[1,7,-2,8,-3,-1,2,-5],[8,-1,8,5,-6,6,-2,-2],[6,6,8,-7,-6,9,2,4],[4,6,9,-2,8,10,-2,4],[-2,6,-4,-3,5,-10,-6,7],[-2,-3,-8,5,-4,5,9,-6],[2,3,6,8,-7,-8,-5,-2],[2,7,2,-4,-10,4,10,2],[-3,8,8,1,-6,-8,-8,7],[8,7,-9,8,-2,1,-4,4],[6,7,9,3,8,6,4,5],[-1,-3,5,-10,-8,1,-3,-9]],[[6,-5,5,2,-9,-1,-4,-6],[9,3,-5,-3,5,-4,6,7],[1,-10,-2,-2,-9,-6,9,7],[-3,4,-5,-10,-8,9,8,-9],[-8,5,-9,10,10,-10,10,-9],[-8,-1,-7,-5,5,-10,-8,4],[-5,-7,-8,2,-7,-8,-2,9],[9,4,1,2,3,-9,-10,8],[-3,-2,6,-8,-8,9,3,-1],[6,-10,-5,4,-8,-9,-7,-6],[6,9,1,6,-6,-9,-2,3],[6,-6,-10,10,-5,-6,10,1]],[[9,-9,-1,-2,-1,-6,-3,-3],[-4,3,1,-10,4,7,8,-1],[1,-1,-8,-7,-8,-4,-2,2],[-7,-10,10,-5,5,-10,1,4],[-3,4,10,10,4,10,10,4],[9,-8,-3,5,4,-5,-9,6],[-5,-3,2,4,-9,6,8,-1],[-3,8,-9,-5,10,-7,-8,3],[5,-8,-1,-5,-9,-4,-10,-4],[1,10,-4,-2,-5,-5,1,-6],[-4,-3,1,7,-10,4,5,4],[9,5,-9,10,-5,-8,-1,-1]]], dtype = "uint64")#candidate|5546|(11, 12, 8)|const|uint64
var_5547 = relay.var("var_5547", dtype = "uint64", shape = (11, 12, 8))#candidate|5547|(11, 12, 8)|var|uint64
bop_5548 = relay.greater_equal(const_5546.astype('bool'), relay.reshape(var_5547.astype('bool'), relay.shape_of(const_5546))) # shape=(11, 12, 8)
func_3971_call = mod.get_global_var('func_3971')
func_3973_call = mutated_mod.get_global_var('func_3973')
call_5567 = relay.TupleGetItem(func_3971_call(), 1)
call_5568 = relay.TupleGetItem(func_3973_call(), 1)
func_4679_call = mod.get_global_var('func_4679')
func_4681_call = mutated_mod.get_global_var('func_4681')
var_5575 = relay.var("var_5575", dtype = "float64", shape = (168,))#candidate|5575|(168,)|var|float64
call_5574 = relay.TupleGetItem(func_4679_call(relay.reshape(var_5575.astype('float64'), [168,])), 2)
call_5576 = relay.TupleGetItem(func_4681_call(relay.reshape(var_5575.astype('float64'), [168,])), 2)
uop_5589 = relay.atanh(call_5567.astype('float64')) # shape=(12, 9, 5)
uop_5591 = relay.atanh(call_5568.astype('float64')) # shape=(12, 9, 5)
output = relay.Tuple([bop_5548,call_5574,var_5575,uop_5589,])
output2 = relay.Tuple([bop_5548,call_5576,var_5575,uop_5591,])
func_5593 = relay.Function([var_5547,var_5575,], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
var_5594 = relay.var("var_5594", dtype = "uint64", shape = (11, 12, 8))#candidate|5594|(11, 12, 8)|var|uint64
var_5595 = relay.var("var_5595", dtype = "float64", shape = (168,))#candidate|5595|(168,)|var|float64
output = func_5593(var_5594,var_5595,)
func_5596 = relay.Function([var_5594,var_5595,], output)
mutated_mod['func_5596'] = func_5596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1342_call = mod.get_global_var('func_1342')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_5621 = relay.TupleGetItem(func_1342_call(), 0)
call_5622 = relay.TupleGetItem(func_1344_call(), 0)
output = call_5621
output2 = call_5622
func_5623 = relay.Function([], output)
mod['func_5623'] = func_5623
mod = relay.transform.InferType()(mod)
mutated_mod['func_5623'] = func_5623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5623_call = mutated_mod.get_global_var('func_5623')
call_5624 = func_5623_call()
output = call_5624
func_5625 = relay.Function([], output)
mutated_mod['func_5625'] = func_5625
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5632 = relay.var("var_5632", dtype = "float64", shape = (4, 10, 4))#candidate|5632|(4, 10, 4)|var|float64
uop_5633 = relay.asin(var_5632.astype('float64')) # shape=(4, 10, 4)
output = uop_5633
output2 = uop_5633
func_5637 = relay.Function([var_5632,], output)
mod['func_5637'] = func_5637
mod = relay.transform.InferType()(mod)
var_5638 = relay.var("var_5638", dtype = "float64", shape = (4, 10, 4))#candidate|5638|(4, 10, 4)|var|float64
output = func_5637(var_5638)
func_5639 = relay.Function([var_5638], output)
mutated_mod['func_5639'] = func_5639
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5679 = relay.const(10, dtype = "uint8")#candidate|5679|()|const|uint8
var_5680 = relay.var("var_5680", dtype = "uint8", shape = (13, 11, 3))#candidate|5680|(13, 11, 3)|var|uint8
bop_5681 = relay.bitwise_and(const_5679.astype('uint8'), var_5680.astype('uint8')) # shape=(13, 11, 3)
output = relay.Tuple([bop_5681,])
output2 = relay.Tuple([bop_5681,])
func_5688 = relay.Function([var_5680,], output)
mod['func_5688'] = func_5688
mod = relay.transform.InferType()(mod)
mutated_mod['func_5688'] = func_5688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5689 = relay.var("var_5689", dtype = "uint8", shape = (13, 11, 3))#candidate|5689|(13, 11, 3)|var|uint8
func_5688_call = mutated_mod.get_global_var('func_5688')
call_5690 = func_5688_call(var_5689)
output = call_5690
func_5691 = relay.Function([var_5689], output)
mutated_mod['func_5691'] = func_5691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5080_call = mod.get_global_var('func_5080')
func_5081_call = mutated_mod.get_global_var('func_5081')
call_5725 = relay.TupleGetItem(func_5080_call(), 0)
call_5726 = relay.TupleGetItem(func_5081_call(), 0)
output = relay.Tuple([call_5725,])
output2 = relay.Tuple([call_5726,])
func_5730 = relay.Function([], output)
mod['func_5730'] = func_5730
mod = relay.transform.InferType()(mod)
output = func_5730()
func_5731 = relay.Function([], output)
mutated_mod['func_5731'] = func_5731
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5734 = relay.const([[[True,False,True],[False,False,False],[True,False,False],[False,True,True],[False,False,True],[True,False,False],[False,True,False],[False,True,True],[True,False,False]],[[True,True,False],[True,False,False],[False,False,True],[False,True,True],[False,True,False],[False,False,True],[True,True,True],[True,False,False],[False,False,True]],[[True,False,False],[True,True,True],[False,False,True],[False,False,True],[True,False,False],[False,False,False],[True,False,False],[False,False,True],[True,True,True]],[[True,True,False],[True,False,False],[True,False,True],[False,False,True],[True,False,True],[False,False,True],[False,False,True],[False,True,False],[False,True,False]],[[False,False,True],[True,False,True],[True,True,True],[True,False,True],[False,False,True],[True,True,False],[False,True,False],[True,True,False],[True,False,False]],[[True,False,True],[True,False,False],[False,False,False],[True,True,True],[True,True,True],[False,True,True],[False,True,False],[False,True,True],[False,True,False]],[[False,False,False],[False,True,True],[False,False,True],[False,False,True],[False,False,True],[True,True,False],[False,True,True],[True,True,False],[True,True,False]],[[False,True,True],[False,False,True],[True,False,False],[False,False,False],[True,False,False],[True,False,False],[False,True,True],[False,True,True],[True,False,False]],[[False,True,False],[False,True,True],[True,False,True],[False,True,False],[False,True,False],[False,False,True],[False,True,True],[True,True,True],[False,True,False]],[[True,True,True],[False,True,False],[False,True,False],[True,False,False],[True,False,True],[True,False,False],[True,False,False],[False,False,False],[False,True,True]],[[True,False,True],[True,True,False],[False,True,True],[True,True,False],[True,True,False],[True,False,False],[False,True,False],[False,False,False],[False,True,False]],[[False,True,False],[False,False,False],[True,True,True],[True,False,True],[False,True,False],[False,False,True],[False,True,True],[False,True,False],[False,True,True]],[[False,True,False],[False,False,True],[False,False,True],[False,True,False],[False,False,False],[True,False,True],[True,False,True],[True,False,False],[False,False,True]],[[True,False,False],[False,False,False],[False,False,False],[True,True,False],[False,True,True],[False,True,True],[True,False,True],[False,False,True],[False,True,True]]], dtype = "bool")#candidate|5734|(14, 9, 3)|const|bool
var_5735 = relay.var("var_5735", dtype = "bool", shape = (14, 9, 3))#candidate|5735|(14, 9, 3)|var|bool
bop_5736 = relay.logical_or(const_5734.astype('bool'), relay.reshape(var_5735.astype('bool'), relay.shape_of(const_5734))) # shape=(14, 9, 3)
output = bop_5736
output2 = bop_5736
func_5739 = relay.Function([var_5735,], output)
mod['func_5739'] = func_5739
mod = relay.transform.InferType()(mod)
mutated_mod['func_5739'] = func_5739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5740 = relay.var("var_5740", dtype = "bool", shape = (14, 9, 3))#candidate|5740|(14, 9, 3)|var|bool
func_5739_call = mutated_mod.get_global_var('func_5739')
call_5741 = func_5739_call(var_5740)
output = call_5741
func_5742 = relay.Function([var_5740], output)
mutated_mod['func_5742'] = func_5742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2286_call = mod.get_global_var('func_2286')
func_2287_call = mutated_mod.get_global_var('func_2287')
call_5746 = relay.TupleGetItem(func_2286_call(), 0)
call_5747 = relay.TupleGetItem(func_2287_call(), 0)
output = relay.Tuple([call_5746,])
output2 = relay.Tuple([call_5747,])
func_5750 = relay.Function([], output)
mod['func_5750'] = func_5750
mod = relay.transform.InferType()(mod)
mutated_mod['func_5750'] = func_5750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5750_call = mutated_mod.get_global_var('func_5750')
call_5751 = func_5750_call()
output = call_5751
func_5752 = relay.Function([], output)
mutated_mod['func_5752'] = func_5752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3147_call = mod.get_global_var('func_3147')
func_3149_call = mutated_mod.get_global_var('func_3149')
call_5767 = relay.TupleGetItem(func_3147_call(), 0)
call_5768 = relay.TupleGetItem(func_3149_call(), 0)
output = call_5767
output2 = call_5768
func_5773 = relay.Function([], output)
mod['func_5773'] = func_5773
mod = relay.transform.InferType()(mod)
output = func_5773()
func_5774 = relay.Function([], output)
mutated_mod['func_5774'] = func_5774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_5783 = func_4323_call()
call_5784 = func_4323_call()
func_141_call = mod.get_global_var('func_141')
func_143_call = mutated_mod.get_global_var('func_143')
var_5786 = relay.var("var_5786", dtype = "float64", shape = (2160,))#candidate|5786|(2160,)|var|float64
call_5785 = func_141_call(relay.reshape(var_5786.astype('float64'), [16, 9, 15]))
call_5787 = func_141_call(relay.reshape(var_5786.astype('float64'), [16, 9, 15]))
func_4545_call = mod.get_global_var('func_4545')
func_4547_call = mutated_mod.get_global_var('func_4547')
call_5800 = relay.TupleGetItem(func_4545_call(relay.reshape(call_5785.astype('float64'), [2160,])), 2)
call_5801 = relay.TupleGetItem(func_4547_call(relay.reshape(call_5785.astype('float64'), [2160,])), 2)
uop_5802 = relay.rsqrt(var_5786.astype('float32')) # shape=(2160,)
func_4220_call = mod.get_global_var('func_4220')
func_4222_call = mutated_mod.get_global_var('func_4222')
call_5810 = relay.TupleGetItem(func_4220_call(), 1)
call_5811 = relay.TupleGetItem(func_4222_call(), 1)
output = relay.Tuple([call_5783,call_5785,call_5800,uop_5802,call_5810,])
output2 = relay.Tuple([call_5784,call_5787,call_5801,uop_5802,call_5811,])
func_5819 = relay.Function([var_5786,], output)
mod['func_5819'] = func_5819
mod = relay.transform.InferType()(mod)
var_5820 = relay.var("var_5820", dtype = "float64", shape = (2160,))#candidate|5820|(2160,)|var|float64
output = func_5819(var_5820)
func_5821 = relay.Function([var_5820], output)
mutated_mod['func_5821'] = func_5821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5173_call = mod.get_global_var('func_5173')
func_5174_call = mutated_mod.get_global_var('func_5174')
call_5846 = func_5173_call()
call_5847 = func_5173_call()
output = relay.Tuple([call_5846,])
output2 = relay.Tuple([call_5847,])
func_5850 = relay.Function([], output)
mod['func_5850'] = func_5850
mod = relay.transform.InferType()(mod)
output = func_5850()
func_5851 = relay.Function([], output)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1342_call = mod.get_global_var('func_1342')
func_1344_call = mutated_mod.get_global_var('func_1344')
call_5913 = relay.TupleGetItem(func_1342_call(), 0)
call_5914 = relay.TupleGetItem(func_1344_call(), 0)
func_3445_call = mod.get_global_var('func_3445')
func_3447_call = mutated_mod.get_global_var('func_3447')
call_5923 = relay.TupleGetItem(func_3445_call(), 0)
call_5924 = relay.TupleGetItem(func_3447_call(), 0)
func_5739_call = mod.get_global_var('func_5739')
func_5742_call = mutated_mod.get_global_var('func_5742')
const_5928 = relay.const([False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,False,False,False], dtype = "bool")#candidate|5928|(378,)|const|bool
call_5927 = func_5739_call(relay.reshape(const_5928.astype('bool'), [14, 9, 3]))
call_5929 = func_5739_call(relay.reshape(const_5928.astype('bool'), [14, 9, 3]))
output = relay.Tuple([call_5913,call_5923,call_5927,const_5928,])
output2 = relay.Tuple([call_5914,call_5924,call_5929,const_5928,])
func_5937 = relay.Function([], output)
mod['func_5937'] = func_5937
mod = relay.transform.InferType()(mod)
mutated_mod['func_5937'] = func_5937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5937_call = mutated_mod.get_global_var('func_5937')
call_5938 = func_5937_call()
output = call_5938
func_5939 = relay.Function([], output)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5958 = relay.var("var_5958", dtype = "float32", shape = (6, 10, 10))#candidate|5958|(6, 10, 10)|var|float32
var_5959 = relay.var("var_5959", dtype = "float32", shape = (6, 10, 10))#candidate|5959|(6, 10, 10)|var|float32
bop_5960 = relay.minimum(var_5958.astype('float32'), relay.reshape(var_5959.astype('float32'), relay.shape_of(var_5958))) # shape=(6, 10, 10)
bop_5970 = relay.power(bop_5960.astype('float32'), relay.reshape(var_5958.astype('float32'), relay.shape_of(bop_5960))) # shape=(6, 10, 10)
func_4447_call = mod.get_global_var('func_4447')
func_4449_call = mutated_mod.get_global_var('func_4449')
const_5979 = relay.const([-1.798523,8.908865,8.084379,2.475452,6.357983,-3.396832,-5.425119,-3.216185,-7.073561,-4.216452,-5.656396,2.764636,-2.703596,-4.254526,5.333386,2.054109,0.163095,2.108618,2.406867,1.634922,2.986350,8.307626,0.293036,3.799071,8.530321,-0.454121,-4.506039,7.047883,-0.431647,6.012588,9.671168,-6.291710,1.967472,-7.587262,-5.629794,2.879906,0.564584,4.619032,-7.748719,-0.271401,-6.999024,2.421703,-7.272318,8.386143,-5.945865,-1.855828,-8.544445,0.511346,-8.911556,-8.158331,3.347699,9.891107,6.241927,9.564429,7.931880,2.653817,-2.591667,-3.629980,6.007076,7.681620,-8.794592,-0.703344,-5.119703,-0.499306,4.687996,1.414025,-7.011010,2.117423,-8.634601,3.931729,-1.197435,5.343142,-1.784443,-0.120319,-3.130889,4.097571,2.547089,2.780420,6.204666,6.123869,-9.881328,2.679344,0.037382,-2.680071,7.255827,9.256309,-4.680783,-2.657922,-1.180127,8.039798,5.675932,-0.329779,-3.848214,-0.462200,3.412830,-9.509073,3.545762,9.925453,-4.362224,-0.318112,2.899510,2.738237,-2.783402,-4.031357,-2.912941,8.998646,1.677662,1.558868], dtype = "float64")#candidate|5979|(108,)|const|float64
call_5978 = relay.TupleGetItem(func_4447_call(relay.reshape(const_5979.astype('float64'), [9, 2, 6])), 0)
call_5980 = relay.TupleGetItem(func_4449_call(relay.reshape(const_5979.astype('float64'), [9, 2, 6])), 0)
output = relay.Tuple([bop_5970,call_5978,const_5979,])
output2 = relay.Tuple([bop_5970,call_5980,const_5979,])
func_5984 = relay.Function([var_5958,var_5959,], output)
mod['func_5984'] = func_5984
mod = relay.transform.InferType()(mod)
var_5985 = relay.var("var_5985", dtype = "float32", shape = (6, 10, 10))#candidate|5985|(6, 10, 10)|var|float32
var_5986 = relay.var("var_5986", dtype = "float32", shape = (6, 10, 10))#candidate|5986|(6, 10, 10)|var|float32
output = func_5984(var_5985,var_5986,)
func_5987 = relay.Function([var_5985,var_5986,], output)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5080_call = mod.get_global_var('func_5080')
func_5081_call = mutated_mod.get_global_var('func_5081')
call_6011 = relay.TupleGetItem(func_5080_call(), 0)
call_6012 = relay.TupleGetItem(func_5081_call(), 0)
func_2032_call = mod.get_global_var('func_2032')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_6015 = relay.TupleGetItem(func_2032_call(), 0)
call_6016 = relay.TupleGetItem(func_2033_call(), 0)
output = relay.Tuple([call_6011,call_6015,])
output2 = relay.Tuple([call_6012,call_6016,])
func_6023 = relay.Function([], output)
mod['func_6023'] = func_6023
mod = relay.transform.InferType()(mod)
output = func_6023()
func_6024 = relay.Function([], output)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5446_call = mod.get_global_var('func_5446')
func_5447_call = mutated_mod.get_global_var('func_5447')
call_6065 = func_5446_call()
call_6066 = func_5446_call()
func_3147_call = mod.get_global_var('func_3147')
func_3149_call = mutated_mod.get_global_var('func_3149')
call_6071 = relay.TupleGetItem(func_3147_call(), 0)
call_6072 = relay.TupleGetItem(func_3149_call(), 0)
func_2010_call = mod.get_global_var('func_2010')
func_2015_call = mutated_mod.get_global_var('func_2015')
var_6096 = relay.var("var_6096", dtype = "float64", shape = (84, 20))#candidate|6096|(84, 20)|var|float64
call_6095 = relay.TupleGetItem(func_2010_call(relay.reshape(var_6096.astype('float64'), [2, 840]), relay.reshape(var_6096.astype('uint64'), [2, 840]), relay.reshape(var_6096.astype('uint64'), [2, 840]), ), 10)
call_6097 = relay.TupleGetItem(func_2015_call(relay.reshape(var_6096.astype('float64'), [2, 840]), relay.reshape(var_6096.astype('uint64'), [2, 840]), relay.reshape(var_6096.astype('uint64'), [2, 840]), ), 10)
var_6109 = relay.var("var_6109", dtype = "float64", shape = (84, 20))#candidate|6109|(84, 20)|var|float64
bop_6110 = relay.divide(var_6096.astype('float64'), relay.reshape(var_6109.astype('float64'), relay.shape_of(var_6096))) # shape=(84, 20)
func_3147_call = mod.get_global_var('func_3147')
func_3149_call = mutated_mod.get_global_var('func_3149')
call_6128 = relay.TupleGetItem(func_3147_call(), 0)
call_6129 = relay.TupleGetItem(func_3149_call(), 0)
uop_6139 = relay.atan(call_6095.astype('float64')) # shape=(2, 840)
uop_6141 = relay.atan(call_6097.astype('float64')) # shape=(2, 840)
output = relay.Tuple([call_6065,call_6071,bop_6110,call_6128,uop_6139,])
output2 = relay.Tuple([call_6066,call_6072,bop_6110,call_6129,uop_6141,])
func_6142 = relay.Function([var_6096,var_6109,], output)
mod['func_6142'] = func_6142
mod = relay.transform.InferType()(mod)
mutated_mod['func_6142'] = func_6142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6142_call = mutated_mod.get_global_var('func_6142')
var_6144 = relay.var("var_6144", dtype = "float64", shape = (84, 20))#candidate|6144|(84, 20)|var|float64
var_6145 = relay.var("var_6145", dtype = "float64", shape = (84, 20))#candidate|6145|(84, 20)|var|float64
call_6143 = func_6142_call(var_6144,var_6145,)
output = call_6143
func_6146 = relay.Function([var_6144,var_6145,], output)
mutated_mod['func_6146'] = func_6146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6156 = relay.var("var_6156", dtype = "bool", shape = (7, 10, 11))#candidate|6156|(7, 10, 11)|var|bool
var_6157 = relay.var("var_6157", dtype = "bool", shape = (7, 10, 11))#candidate|6157|(7, 10, 11)|var|bool
bop_6158 = relay.logical_and(var_6156.astype('bool'), relay.reshape(var_6157.astype('bool'), relay.shape_of(var_6156))) # shape=(7, 10, 11)
var_6167 = relay.var("var_6167", dtype = "bool", shape = (7, 10, 11))#candidate|6167|(7, 10, 11)|var|bool
bop_6168 = relay.minimum(var_6156.astype('uint32'), relay.reshape(var_6167.astype('uint32'), relay.shape_of(var_6156))) # shape=(7, 10, 11)
func_721_call = mod.get_global_var('func_721')
func_724_call = mutated_mod.get_global_var('func_724')
var_6172 = relay.var("var_6172", dtype = "float64", shape = (420,))#candidate|6172|(420,)|var|float64
call_6171 = func_721_call(relay.reshape(var_6172.astype('float64'), [15, 4, 7]))
call_6173 = func_721_call(relay.reshape(var_6172.astype('float64'), [15, 4, 7]))
func_5819_call = mod.get_global_var('func_5819')
func_5821_call = mutated_mod.get_global_var('func_5821')
const_6179 = relay.const([3.354297,-9.026910,-4.844164,5.443255,3.532389,-0.666065,-6.145127,3.088662,-4.171925,6.452607,-2.867302,-4.091869,-6.976285,0.011802,-5.086355,7.976845,-9.174473,-6.097538,-2.802255,-7.032355,-6.250932,-6.388684,3.543174,-7.883204,4.371184,-7.027887,4.462689,8.195526,1.307204,-5.281411,3.240239,2.439815,5.410718,0.160492,-4.206517,9.382275,-0.100557,0.405183,1.939083,5.444543,9.241961,-2.283476,-6.853333,0.249150,-8.605207,1.155865,8.593379,7.489176,-4.666265,-1.516316,2.390906,8.596304,-9.745893,8.928679,9.698840,-7.490609,-4.580309,3.010207,-3.537521,-2.156082,-6.299259,-9.527186,3.591757,-2.339597,-3.753206,-7.655264,-7.419974,4.849700,-1.649850,-6.790119,5.006643,-6.965345,-8.275996,-9.521469,-9.127743,0.803989,-7.958993,-0.431810,-6.147266,-4.446901,-5.220990,-9.828553,-1.613158,8.748826,-1.696237,-4.591415,-3.856111,1.253162,1.853008,4.486629,-8.038868,-0.130686,-6.716448,-1.286695,-1.662081,-8.377906,0.141071,2.802109,-6.489877,-0.406858,7.949798,3.909873,-4.456852,-0.955249,-6.246864,4.570067,-6.313604,-2.487344,6.182304,9.070877,6.204345,-9.127661,-9.854463,-0.283155,-1.622056,1.222252,-1.518550,4.553930,9.182103,-1.177304,1.668999,5.549625,4.216099,-7.050842,-0.664269,-5.023657,6.312949,4.177852,0.595184,5.908162,-0.033599,5.594149,3.757121,7.021937,-5.462412,-6.940955,-6.815072,9.380097,2.184243,-1.330990,-7.710734,2.510043,6.757488,5.784638,8.343312,-0.967386,-3.369334,-8.864480,-3.253528,-6.399573,5.971403,-9.881100,-2.956809,4.566378,5.373088,-7.222402,5.577581,-1.698015,-2.562506,8.486905,-2.671583,5.587564,1.560992,-1.547033,-7.383604,-9.013380,4.852491,0.303461,-8.011292,-3.660968,-9.855313,0.581047,-5.473111,-3.375106,-9.775103,-6.746670,0.098476,6.227429,7.957761,-4.018888,-8.840775,7.732321,8.260453,-4.746123,-8.122381,2.813344,9.174157,-7.509733,-5.007683,-8.565110,-9.587743,4.360086,-6.280671,-6.133755,-6.544459,4.363891,5.795709,2.967904,0.341060,-1.230724,-3.193332,-0.488397,6.124150,4.412616,0.863838,-7.030663,8.631658,6.214608,-6.277601,6.946728,-7.284430,5.856274,-5.520448,-3.819994,-3.690494,9.492814,6.563521,-8.598697,-4.258039,-1.285632,3.841988,4.257893,4.563408,3.396804,-7.010525,-1.853868,0.037139,-4.567361,-3.848362,-3.763545,9.321895,2.370546,1.824435,8.726320,-9.295043,-3.226731,-1.814344,-0.907716,-8.397037,2.951326,-4.321734,-8.369179,-5.351874,7.990212,1.362248,7.634907,9.425289,2.307549,2.142953,-8.750029,3.011527,5.610072,-0.152144,4.782143,6.097910,7.770580,-4.029062,-0.329548,-2.858348,-2.030308,9.940157,7.412797,-7.419448,6.697072,3.871117,3.736729,-2.805213,1.022253,-7.613352,-3.819707,1.619576,-5.613525,4.101372,-9.038189,-1.069310,8.190330,8.954817,3.224630,-2.098243,2.434377,-9.128444,-1.570448,6.226333,-5.008546,-7.104538,-9.189518,-8.839865,8.435220,7.899138,-8.346127,-4.620195,0.574660,-7.388822,-1.162190,2.855118,-4.897794,-9.522850,4.605631,-2.963823,-3.886922,-9.300550,3.166882,9.873083,-3.635755,-1.364888,-8.624163,-6.261484,-3.605686,-8.238346,3.193253,-7.881382,-2.078403,-9.565467,8.650133,3.311903,9.910300,-6.519647,-0.780974,-7.923917,-2.202420,2.788103,0.068723,-3.887611,-8.904377,-0.420892,-4.874034,-5.206720,-0.401031,-2.021069,6.330367,1.973609,6.240556,3.888778,0.935061,-3.740838,3.491957,-2.448361,-6.547780,-7.967718,-0.104726,-3.549133,-3.159138,0.512308,-9.867877,-3.409686,4.240112,-3.895924,7.386609,-1.955778,5.070232,-7.426322,9.543624,-3.581988,0.439691,-3.412381,9.503512,-2.899544,3.039912,-0.973677,-9.181276,-9.267078,-0.653918,-2.031028,-3.395972,-7.251940,-2.594989,-2.583550,-2.696267,6.251195,-0.780620,6.204592,-9.671896,9.930778,1.590628,1.464361,-8.560602,3.705408,0.126396,-7.858813,-2.561213,3.317506,1.073224,-2.457496,-2.516152,9.449953,-5.946614,7.977484,-0.302831,-3.491025,-2.178278,6.363563,5.325220,-3.379927,6.226848,9.658141,1.496404,-5.744233,-9.798418,-7.591336,-2.147920,8.890070,-2.579162,6.583135,0.362163,-4.359370,-7.561247,-3.507473,-9.623742,-5.890223,1.807104,-5.938616,-2.425651,9.626736,6.640360,-1.907697,5.909910,-1.555540,-6.112394,5.465995,-3.898953,2.628586,9.038113,-2.659313,-4.426548,0.843104,-5.854330,8.078712,-0.490310,-6.039784,-5.016492,4.501036,-4.308179,-1.543285,-1.423705,0.166528,2.919072,1.773745,-1.626737,3.234518,-5.301164,1.466565,-4.594524,4.922214,0.327378,-5.960939,-6.011895,-2.556683,-4.074773,3.020308,-5.830511,8.124073,-8.830164,-0.408922,-7.619078,1.430746,8.204585,-3.716076,6.269866,-5.938698,8.626568,5.044639,8.792542,-7.567258,-6.518584,-8.055672,-8.929418,-1.442941,-4.575272,-4.082077,-5.619259,5.675136,-7.794948,2.553927,6.343134,-4.700134,1.649314,6.964688,4.567564,-9.244616,6.842675,-8.568228,-9.076596,-1.709701,-8.200770,8.065890,7.965484,-3.326033,-2.720083,1.715112,3.378119,-9.704621,0.884218,0.969526,-7.361584,-4.096417,-6.999969,4.970728,-3.869212,6.503013,-4.322506,3.604300,5.946240,7.316813,-0.609254,-3.289042,8.044437,-1.837916,-1.632996,1.386174,7.741617,-0.452305,9.254503,-0.994428,-9.616793,-0.390728,-1.508892,-5.729734,4.305101,-6.673535,-2.541702,1.284676,4.596795,8.506757,-0.215449,-5.887534,-4.160490,6.853608,2.874041,5.187359,-3.508687,-4.050764,-0.291269,-5.712769,3.855330,7.488816,1.298353,6.876925,-4.158107,-8.040637,7.447355,-5.007264,-0.062014,8.401276,5.854921,3.450531,-5.381496,-8.901899,-5.865893,-1.238285,2.609869,2.465156,8.924377,-0.666486,8.436072,-4.493300,8.952915,4.725070,-0.465788,5.756568,9.240739,5.490686,0.598816,-5.623999,2.873764,8.092534,-1.380745,3.719437,1.306265,2.598950,1.276365,7.865365,-5.423205,-7.965823,-0.095642,-4.527399,-1.029247,6.618478,-7.029644,7.683340,7.772530,-2.003754,4.769924,1.167615,5.203328,-0.115827,-4.685335,-2.219793,-8.931044,3.928787,-8.702914,-8.274932,-4.969516,-1.595399,-0.657954,-5.117503,-5.106174,9.879555,-3.971370,-8.567165,-4.859176,-0.944455,4.941403,7.148222,0.303993,-7.936901,2.211800,-6.704707,-9.567985,-6.670745,-9.023947,-0.504024,8.850916,0.372394,-8.145196,-4.983077,-0.264609,4.546818,8.967412,8.892587,-5.688795,-1.998899,-4.927799,0.274861,-1.669703,3.267018,-7.581754,6.537699,-4.813394,3.759221,5.650178,1.073138,2.033161,3.914382,2.974232,9.440081,-0.455084,8.547304,2.204074,5.359723,-6.574160,-5.785473,6.663272,5.363572,-3.076085,-3.861451,-2.722782,3.125513,5.021813,-0.834073,1.912980,-6.209555,1.717278,5.580385,-8.119456,-6.890196,3.488258,7.372934,6.133805,-9.640127,1.492907,9.522053,-5.089546,3.961273,6.509353,1.776923,-7.620528,-1.070177,6.138408,-4.067527,-1.504567,7.397148,9.307073,-7.186457,3.294147,8.021116,-7.418946,-4.293765,5.643315,-3.875787,7.569146,-4.841843,0.331599,5.508876,-3.777914,-0.377950,4.313161,-0.628192,-0.727495,7.788552,-5.386392,-5.035637,5.234090,3.307700,2.650343,2.770169,5.737160,-3.838112,-4.055932,-9.467710,1.507526,2.983021,-0.622121,5.659987,3.909485,-6.537099,9.033419,-6.185243,5.832910,-2.050038,4.878917,1.675310,5.821687,8.804039,6.616221,-8.339829,-9.977303,0.009705,1.581357,4.260252,0.059191,-1.793380,-1.381306,1.863067,7.050520,-2.436702,0.277641,9.485850,5.752927,-7.060382,-4.527934,3.867467,1.383618,5.790963,-2.879714,5.972232,-2.285169,-5.019588,-6.176219,-9.943341,2.423928,-3.862503,-0.433976,6.783556,-9.457415,3.002296,-1.315773,4.356642,2.303948,4.187241,2.703792,-0.406841,-9.572276,-9.251669,-1.329728,-8.255955,-9.672303,1.507087,4.662724,-1.610505,-8.127761,-3.015584,4.339415,-2.814568,2.613516,-6.801485,-1.106886,-8.805695,8.430276,7.077165,-7.903603,-4.587904,-3.856641,7.663193,-0.633155,9.188912,8.973032,-3.162925,8.950025,-0.068912,-5.901983,9.179202,0.601348,0.237756,9.151787,-3.818160,2.184385,-5.234581,-0.139875,3.616078,3.236826,-1.374432,-8.206908,5.352440,1.050675,-2.882468,-6.931308,2.757282,-8.595916,1.431496,1.205200,3.797995,-5.422246,3.283155,9.213438,6.569751,9.322128,-5.746995,-2.825784,-4.769984,1.060313,3.370934,-2.650979,9.785545,-0.532844,-9.509721,-0.751783,-3.236097,6.732424,-7.173507,-8.126523,-4.704403,8.824823,6.813322,-9.616623,8.303351,9.507109,-2.771749,8.388069,-0.064739,-7.648165,-6.439232,-5.814614,7.458279,-2.598577,-6.168814,8.632204,-7.747352,4.024103,7.115734,8.049396,5.227134,2.761553,4.554209,8.987697,-9.812361,-8.596808,4.158065,0.155720,9.270932,-8.970778,-7.988995,-7.701074,-4.230156,9.580100,5.640683,-8.505308,1.018393,-6.801558,4.323149,-7.264502,6.557039,-5.546629,7.954697,8.814680,7.999700,-2.997514,-7.024517,-2.990026,1.698567,-5.153936,8.793270,9.441964,-9.360418,3.419821,-1.138258,-9.627453,-8.722394,-6.132698,-7.988701,-3.739473,7.740407,-8.170149,0.016402,-6.495126,-1.302929,-6.688740,4.912273,-0.114376,6.227902,2.082460,2.165343,-4.987064,-6.593786,5.966230,-8.463369,-1.319303,-6.949275,7.197161,-7.937670,-7.289333,-1.176049,-8.185195,1.834259,-9.215033,-0.864507,-0.367656,7.612546,6.097203,6.040100,-3.506788,0.183647,0.713893,7.584201,6.817839,-0.883492,-9.912414,-2.958765,-8.057484,2.161902,4.319059,1.104340,9.476470,-8.401113,-0.260812,4.484675,6.685855,-5.390931,3.904739,-2.866802,2.242436,-3.806443,1.686925,-2.446294,-3.413608,-1.790135,5.672227,4.593695,-7.032896,4.799453,0.980665,-9.225356,0.050388,5.142205,-3.764198,-8.715651,-2.655707,-3.416598,3.708163,-0.297363,-8.737034,4.765918,-8.559005,8.061708,-5.988350,5.011730,2.378684,3.280816,-0.631005,1.647733,-6.133769,-9.973159,1.789423,-6.389911,2.133491,-7.939844,-4.547570,4.001567,7.015227,8.798246,-7.725864,9.747834,-7.641667,-5.564549,-5.683728,-5.415700,8.125524,1.458822,8.846955,-0.144275,-9.018618,-9.934946,-8.039830,6.525416,-2.944356,-1.151703,-2.254904,9.487491,-7.676397,5.550440,5.135018,9.067451,8.361973,6.507960,-6.128444,3.618302,0.014980,8.941067,-1.168311,5.568075,-6.288818,6.067620,8.917992,8.728826,-4.611287,-9.109751,-1.685964,1.546953,6.038812,-4.416771,-7.485753,-0.032260,-4.542264,4.652037,2.732149,0.610657,-5.440787,-5.989726,0.584444,7.235209,-8.641984,-6.957908,7.199938,-8.526314,-0.270047,2.816465,6.070805,-3.994627,8.958409,-1.069228,-9.349700,-5.272997,-6.267645,7.083925,8.675456,4.797484,-7.882562,-3.089844,1.899510,-7.586814,-7.002534,-9.972613,-7.261174,1.886581,5.718414,-0.368007,1.077220,-1.415151,9.146844,-6.711981,2.422676,-1.849007,2.117726,9.902091,-2.190378,-7.934354,1.966807,-7.898981,-8.957169,-9.836974,0.788342,6.829320,2.925260,-1.278158,9.619488,5.189132,-6.719703,8.550520,0.496678,7.206168,-8.452887,-1.796523,-5.370743,6.347408,-9.083829,-5.119953,-9.017242,-9.606541,-9.129222,-6.807972,8.730548,-1.155111,-9.144189,1.433799,-9.471575,0.889921,1.707191,2.084081,-5.929605,-0.347829,-7.280680,-8.588698,-5.458210,-2.002806,9.961989,3.950122,9.390095,-8.300695,7.119457,0.303541,-7.377040,-8.781446,-2.165498,-9.538248,1.559287,0.197918,4.024693,-3.823937,-1.931680,-8.580531,-9.744824,5.419028,5.978937,5.687102,6.465593,5.234029,4.920742,8.898832,4.748079,-6.326618,-7.193469,-0.965295,8.761320,-7.883685,6.920344,0.928906,-3.022603,9.576783,-0.319027,-4.283288,7.613739,-7.552708,2.156545,-3.450635,1.607353,9.555698,-5.653373,7.923258,4.477805,-3.855096,6.113666,-8.838943,-7.749147,6.562757,-3.974672,-5.421108,4.003937,-8.484813,0.979452,6.262645,2.181640,-7.934008,-4.248137,2.661098,6.747844,8.152154,7.837688,-1.085769,0.707829,-3.783401,3.074427,-3.003656,1.397108,-4.527111,0.545102,0.826522,-5.133509,6.251959,-8.154832,-8.162350,-4.178127,-3.645151,3.395084,2.499890,-6.517419,-7.433864,-6.449070,8.222558,5.258431,-0.707803,1.864685,1.121989,-3.373996,7.820216,9.702438,-1.297623,6.692125,8.510070,-8.411419,1.511653,0.416858,-6.160612,-9.866182,2.108250,6.128031,5.021903,-8.942288,2.099523,8.013435,9.043252,-0.571527,-0.558364,-6.571706,3.007299,-3.921611,3.981779,-8.451399,1.729758,5.469020,9.081258,3.465548,-3.015248,3.119519,-7.972199,-9.086597,-0.927971,0.829434,-0.722147,-6.744994,-4.088284,-5.088590,-1.989884,-1.176824,-3.669246,1.695053,-6.957738,-4.575330,-3.859548,-6.641619,-7.120536,-4.138526,-9.056253,2.378561,2.047938,-8.511827,-7.761687,9.109778,1.601541,-6.156615,-2.248048,3.910842,-5.441190,9.986759,-8.520105,1.727283,-7.656206,9.783820,-0.405224,3.439390,-0.482027,4.804353,-9.585463,-4.403615,-8.362449,2.307245,-3.429842,-4.471297,-3.334238,0.685704,0.266018,1.756271,-7.592909,-6.386781,0.920958,-7.986986,3.696852,-3.805971,-4.271820,-2.989120,-1.975757,8.952090,-8.291294,1.601821,6.259188,5.687747,-4.703103,-1.195291,9.753481,4.994826,-6.162617,1.148638,9.673795,-0.340069,-4.359276,9.242466,-7.358163,5.233876,-3.917081,-4.407002,1.923541,-1.382602,-0.279313,-4.760778,-1.490448,7.984907,4.172131,-9.909575,-3.293388,-0.599396,7.556020,9.219071,1.441476,3.504310,-4.260470,3.841139,8.983438,5.470563,0.880229,-6.421516,4.775094,-0.152488,-4.639295,5.851644,9.918560,3.716582,9.529449,0.474023,6.667082,-9.476248,-2.451562,4.021322,-4.229130,9.232810,-0.572964,4.456247,8.525570,-0.202757,-7.322193,8.084922,2.938910,9.501543,3.114863,0.231808,9.329909,-1.916954,-1.960390,1.336894,-0.837889,-2.060184,-6.442115,-8.949904,5.115620,5.678630,9.641095,-3.851133,4.955827,4.117377,-1.097395,6.636820,0.133575,6.959566,1.147672,-3.778650,6.621428,-9.727755,-9.575620,-8.485313,7.785642,4.152638,-7.705086,-0.411738,4.470149,-1.705421,-2.499000,0.835831,-7.935948,2.172547,-2.285332,9.343311,-0.895246,0.857719,9.861967,0.752017,-6.135932,7.724651,-2.440627,-0.400468,9.305417,5.349494,9.565587,0.980964,0.797188,9.612689,-0.787311,6.639719,8.038975,8.214180,-7.336442,7.147911,-2.961839,0.780221,-4.355263,-0.780522,8.784691,-4.957763,8.922847,-0.456522,-8.266105,-3.416890,-5.550929,-0.358220,-5.046310,-6.961899,-6.998301,7.785357,-0.866888,8.010060,2.026457,4.510895,7.507312,3.360184,0.377545,0.026178,0.740053,4.651243,5.428495,1.716520,6.548511,1.373557,-3.672464,-6.900870,0.719789,1.687866,-0.360357,1.338470,-1.931592,-3.456455,-5.437052,-3.722328,9.762267,-2.635898,5.926788,-2.331466,6.011806,-4.977339,7.186256,9.443615,-3.035817,8.185698,8.096769,-0.247258,5.328880,1.247110,-2.688737,5.573281,7.628689,-3.567156,-1.101615,-5.707793,-5.019761,3.583567,2.444351,2.261461,2.648267,-1.640357,7.427891,8.903088,1.907883,0.680468,-6.277940,2.325775,-8.806556,-8.094098,9.790698,-5.180500,3.751916,2.997203,-0.700571,-6.675683,6.475890,-6.267496,8.750011,0.332515,2.398748,-0.605968,4.117527,9.669664,7.064530,-2.931512,-5.073021,5.803641,-6.018201,1.661913,2.445821,7.987162,-5.989206,9.643777,6.736224,6.736574,1.603018,-2.465010,7.365990,-5.309995,4.027290,7.821964,-1.448961,3.674119,0.724804,1.615525,-5.379938,5.160695,6.164280,-1.563488,1.490032,0.304999,6.296881,-5.737060,0.598332,8.974082,0.525135,0.214618,6.543373,1.253028,4.470436,8.366014,7.337687,-7.151185,-5.277366,8.821042,-6.545861,-0.594237,-2.885096,2.076715,-6.648890,-9.545787,4.564115,8.101554,-8.607646,-5.584050,8.589505,5.256474,-5.821249,9.716004,-8.518030,3.241993,5.381709,-9.428343,-9.229451,-2.783950,-2.836957,-3.049477,-5.387793,1.487658,-5.773866,-0.445974,9.830602,-1.044640,9.487884,-8.450068,-5.860289,9.946846,-8.585260,5.799451,3.391331,0.116439,-1.886153,7.799583,8.448962,9.453864,-7.957481,8.592047,7.793068,-5.291969,-1.611865,-4.556098,-4.320962,-5.154642,5.101903,3.292138,9.192410,9.514338,-9.825620,-2.432547,8.250472,-1.657998,5.799066,4.232178,4.279554,-8.093680,1.634298,5.808445,-7.193847,-0.903260,8.781088,-1.500097,-7.815809,7.851463,-3.415346,-6.731205,9.777022,-2.761994,-7.872177,-9.311909,1.056069,6.290888,4.378305,-0.454875,3.031411,-7.564494,-3.318226,9.922063,-3.299463,4.855218,3.335381,-4.727143,-8.122476,7.169151,-2.454144,0.186264,-4.583051,-3.602742,1.879106,6.089939,3.705951,1.201076,-0.893593,-7.483156,4.883172,-3.975091,0.351127,-7.409993,4.820611,6.103775,4.043310,1.239309,9.616031,6.151484,-5.174552,1.493911,-3.047099,3.361439,-4.947076,8.192749,0.139565,-0.979251,-0.836215,2.174992,-2.292530,-2.102007,8.151505,-5.224281,9.635469,5.523199,-0.631900,-5.449422,3.535440,-1.234229,7.359758,-6.766610,9.504614,-2.880669,6.681226,3.161495,-2.589107,1.751373,8.985926,-7.413145,3.929390,-5.936529,4.708531,7.562855,-9.582513,-5.194302,1.853638,-2.341511,6.954825,1.148355,-6.368830,-3.723899,-9.576830,-8.361223,4.331278,-6.512228,-2.324921,0.985623,0.041234,2.231418,-3.630360,-2.620514,-5.469481,-8.605040,9.828338,-3.714368,-4.613009,-6.384258,-1.462852,-0.473750,1.020664,-2.254358,6.421931,0.292741,-1.041739,-9.658556,-9.429467,5.261515,1.757134,-3.935229,5.070620,2.162591,-0.723403,-1.737746,-8.029769,-6.752523,9.639612,-2.855304,-6.813782,-7.918209,-8.644390,8.483943,1.492553,0.132031,-3.707439,8.820528,-8.432366,3.610520,-5.406669,0.190741,-8.443924,-9.817211,-6.603763,-2.964015,2.479078,-3.183161,3.967750,-5.930857,-1.352414,-2.082795,-4.440775,-4.794707,-0.981136,4.440604,0.527647,6.630138,-2.994645,8.499683,-7.844668,-2.699518,-9.189935,3.355113,-6.705699,-5.495893,6.981248,-8.974420,-1.149122,-2.300441,-0.827218,8.812129,-6.624448,-7.960157,5.694794,-7.879537,0.317955,5.399126,8.668457,-8.225964,-1.546589,-0.060028,1.874187,3.281540,6.698064,-8.915975,1.057488,3.612174,-3.483137,9.567969,1.599862,-4.602758,-9.273135,2.549524,-6.965334,2.900317,-4.178340,3.989669,-9.313985,-9.406082,-6.847048,-4.909234,-0.600696,-0.332562,9.407537,-9.207042,2.142920,6.614679,-8.378079,4.700584,-5.064314,-4.075074,-2.230091,-8.046366,-3.504340,-8.580992,7.108649,0.701862,-1.553759,3.095627,7.571844,-3.316032,-6.282838,-2.108171,-0.656830,3.604195,-0.254903,-6.093916,4.180686,-6.426137,7.267232,6.165434,7.241555,-0.414999,-2.845315,2.838254,-6.773465,-2.081055,0.041151,8.171736,-3.986520,9.118598,-4.146067,4.716585,-3.397162,-0.013304,-9.618525,7.294461,-7.781071,1.074335,0.654016,-0.236491,-4.100771,-3.698555,5.422467,-9.636376,-2.414887,-9.740992,6.818248,5.788513,0.006445,6.145812,7.983678,1.890128,-5.654755,-5.033925,3.670453,6.613574,4.183652,-0.730039,-0.488672,-6.894120,-9.841027,6.607352,-2.696653,4.163190,-2.070412,5.313684,2.582703,5.745282,8.174305,0.371956,-4.689053,-8.206453,-0.488080,-3.558181,1.532372,-9.704217,-9.884948,3.328857,-2.055577,-3.840390,1.108565,-9.757170,3.867663,4.416844,0.413123,4.987898,1.991375,5.802211,-5.338934,-6.065235,-7.011420,6.521354,3.252857,7.439101,-4.913958,-0.101447,5.034989,-1.269552,7.010375,3.487064,3.617968,-7.166433,-6.897240,-8.213809,-8.638347,7.352644,9.817471,5.066733,6.321619,-5.949179,-1.862782,-8.435713,2.881584,-4.907185,-9.809093,0.388227,3.284182,-6.461005,8.243937,-7.962769,-2.022957,-6.640044,9.351845,-1.459224,-0.736220,-7.176248,5.552193,-9.611951,7.547906,6.314068,-2.670213,0.213788,9.342220,-8.963274,6.955189,-2.411360,-4.954579,9.949982,-8.163212,-6.086390,0.671154,2.359067,4.800870,7.856771,2.903021,-1.522115,-5.714995,0.685343,-4.841493,-5.955438,-7.463757,1.423297,-9.681322,-4.050507,-3.670248,8.218686,3.679529,-6.616719,3.330871,-4.548946,3.340117,-5.850612,-6.783721,4.092861,8.937039,-1.871431,-1.440856,-9.597608,9.107425,6.675895,-1.903780,7.092959,0.647472,-7.367911,4.982465,5.789743,-9.730643,-9.088208,5.343945,2.525266,-1.206790,8.640445,0.481190,3.732253,-9.699652,-0.514398,9.218773,0.845364,0.817572,8.159793,-9.275433,5.622039,3.856046,5.036028,2.160646,0.335077,6.840767,-5.137234,3.934618,1.738470,-3.388868,-4.314348,0.884082,9.637386,1.424251,3.491454,2.254098,-7.402781,4.803241,-4.939731,-2.249651,-0.003902,-6.392479,-8.641990,-0.459983,6.015094,7.801820,-6.701732,1.503533,-4.616980,3.632669,-6.497899,-6.844976,0.228956,5.589253,5.232045,8.644388,1.659102,-6.999873,5.065921,7.619585,-0.323673,-6.153564,3.580854,-5.197817,3.063863,0.636193,-4.279538,-2.362562,7.346809,0.928408,-0.949524,-1.412658,-0.032943,4.944925,7.891844,1.841382,-4.743765,0.563942,6.741623,8.492189,1.616772,5.650529,-1.683516,3.972791,2.641570,-4.272723,0.344189,2.311484,-7.704941,-7.154804,9.183765,6.611285,9.157082,7.245603,-7.953969,2.519295,4.840560,6.006606,0.642925,-8.258271,-3.842708,-3.460274,3.394455,0.226919,-9.897546,-4.800521,0.666581,8.941515,-7.138082,-3.426286,9.890202,-5.648345,-8.433765,9.684542,-2.511090,-4.819237,-5.083497,-3.581028,-3.422016,7.492200,1.598543,-4.492037,4.721134,-7.975369,-7.195202,-6.568399,-7.703077,-5.443897,7.545278,-0.529933,6.078872,-2.635799,8.452825,-9.807153,-7.439375,7.146645,0.450663,9.365210,3.114994,-6.847672,-4.181219,-1.506987,3.091045,9.307510,-0.751226,-5.878207,-0.349653,9.492106,2.874170,3.469889,-0.414882,-3.192728,-3.962620,-0.850676,9.746960,5.656807,-0.826317,-7.183660,-0.588414,-6.873500,-4.512506,6.513433,3.861357,-5.152863,-6.815164,-5.094194,-8.201805,-8.609237,-0.795745,1.430130,0.926079,0.921548,-7.233257,2.466024,0.100415,8.500348,-8.607934,-2.025617,3.338205,-8.047600,-1.099376,-8.230423,2.902754,0.175497,-0.377952,6.584588,5.722969,4.094853,1.621221,7.223766,-4.226190,-6.273898,7.778261,-7.107525,4.331986,-5.453560,5.520045,1.776974,4.632346,6.558915,9.165427,6.780855,6.882310], dtype = "float64")#candidate|6179|(2160,)|const|float64
call_6178 = relay.TupleGetItem(func_5819_call(relay.reshape(const_6179.astype('float64'), [2160,])), 0)
call_6180 = relay.TupleGetItem(func_5821_call(relay.reshape(const_6179.astype('float64'), [2160,])), 0)
output = relay.Tuple([bop_6158,bop_6168,call_6171,var_6172,call_6178,const_6179,])
output2 = relay.Tuple([bop_6158,bop_6168,call_6173,var_6172,call_6180,const_6179,])
func_6182 = relay.Function([var_6156,var_6157,var_6167,var_6172,], output)
mod['func_6182'] = func_6182
mod = relay.transform.InferType()(mod)
mutated_mod['func_6182'] = func_6182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6182_call = mutated_mod.get_global_var('func_6182')
var_6184 = relay.var("var_6184", dtype = "bool", shape = (7, 10, 11))#candidate|6184|(7, 10, 11)|var|bool
var_6185 = relay.var("var_6185", dtype = "bool", shape = (7, 10, 11))#candidate|6185|(7, 10, 11)|var|bool
var_6186 = relay.var("var_6186", dtype = "bool", shape = (7, 10, 11))#candidate|6186|(7, 10, 11)|var|bool
var_6187 = relay.var("var_6187", dtype = "float64", shape = (420,))#candidate|6187|(420,)|var|float64
call_6183 = func_6182_call(var_6184,var_6185,var_6186,var_6187,)
output = call_6183
func_6188 = relay.Function([var_6184,var_6185,var_6186,var_6187,], output)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5488_call = mod.get_global_var('func_5488')
func_5489_call = mutated_mod.get_global_var('func_5489')
call_6209 = relay.TupleGetItem(func_5488_call(), 0)
call_6210 = relay.TupleGetItem(func_5489_call(), 0)
func_2524_call = mod.get_global_var('func_2524')
func_2527_call = mutated_mod.get_global_var('func_2527')
var_6226 = relay.var("var_6226", dtype = "int16", shape = (1, 105))#candidate|6226|(1, 105)|var|int16
call_6225 = relay.TupleGetItem(func_2524_call(relay.reshape(var_6226.astype('int16'), [1, 105])), 6)
call_6227 = relay.TupleGetItem(func_2527_call(relay.reshape(var_6226.astype('int16'), [1, 105])), 6)
func_5002_call = mod.get_global_var('func_5002')
func_5004_call = mutated_mod.get_global_var('func_5004')
call_6234 = relay.TupleGetItem(func_5002_call(), 0)
call_6235 = relay.TupleGetItem(func_5004_call(), 0)
output = relay.Tuple([call_6209,call_6225,var_6226,call_6234,])
output2 = relay.Tuple([call_6210,call_6227,var_6226,call_6235,])
func_6251 = relay.Function([var_6226,], output)
mod['func_6251'] = func_6251
mod = relay.transform.InferType()(mod)
mutated_mod['func_6251'] = func_6251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6252 = relay.var("var_6252", dtype = "int16", shape = (1, 105))#candidate|6252|(1, 105)|var|int16
func_6251_call = mutated_mod.get_global_var('func_6251')
call_6253 = func_6251_call(var_6252)
output = call_6253
func_6254 = relay.Function([var_6252], output)
mutated_mod['func_6254'] = func_6254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_6310 = func_3419_call()
call_6311 = func_3419_call()
output = relay.Tuple([call_6310,])
output2 = relay.Tuple([call_6311,])
func_6318 = relay.Function([], output)
mod['func_6318'] = func_6318
mod = relay.transform.InferType()(mod)
mutated_mod['func_6318'] = func_6318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6318_call = mutated_mod.get_global_var('func_6318')
call_6319 = func_6318_call()
output = call_6319
func_6320 = relay.Function([], output)
mutated_mod['func_6320'] = func_6320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_6339 = relay.TupleGetItem(func_2180_call(), 0)
call_6340 = relay.TupleGetItem(func_2181_call(), 0)
output = call_6339
output2 = call_6340
func_6342 = relay.Function([], output)
mod['func_6342'] = func_6342
mod = relay.transform.InferType()(mod)
output = func_6342()
func_6343 = relay.Function([], output)
mutated_mod['func_6343'] = func_6343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4288_call = mod.get_global_var('func_4288')
func_4290_call = mutated_mod.get_global_var('func_4290')
call_6386 = relay.TupleGetItem(func_4288_call(), 1)
call_6387 = relay.TupleGetItem(func_4290_call(), 1)
output = relay.Tuple([call_6386,])
output2 = relay.Tuple([call_6387,])
func_6389 = relay.Function([], output)
mod['func_6389'] = func_6389
mod = relay.transform.InferType()(mod)
output = func_6389()
func_6390 = relay.Function([], output)
mutated_mod['func_6390'] = func_6390
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6401 = relay.var("var_6401", dtype = "bool", shape = (10, 1, 2))#candidate|6401|(10, 1, 2)|var|bool
var_6402 = relay.var("var_6402", dtype = "bool", shape = (10, 1, 2))#candidate|6402|(10, 1, 2)|var|bool
bop_6403 = relay.logical_and(var_6401.astype('bool'), relay.reshape(var_6402.astype('bool'), relay.shape_of(var_6401))) # shape=(10, 1, 2)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_6417 = relay.TupleGetItem(func_2067_call(), 0)
call_6418 = relay.TupleGetItem(func_2069_call(), 0)
func_2581_call = mod.get_global_var('func_2581')
func_2584_call = mutated_mod.get_global_var('func_2584')
var_6429 = relay.var("var_6429", dtype = "int16", shape = (21, 5))#candidate|6429|(21, 5)|var|int16
call_6428 = relay.TupleGetItem(func_2581_call(relay.reshape(var_6429.astype('int16'), [105,])), 1)
call_6430 = relay.TupleGetItem(func_2584_call(relay.reshape(var_6429.astype('int16'), [105,])), 1)
func_1736_call = mod.get_global_var('func_1736')
func_1741_call = mutated_mod.get_global_var('func_1741')
var_6436 = relay.var("var_6436", dtype = "int8", shape = (1, 126))#candidate|6436|(1, 126)|var|int8
const_6437 = relay.const([[8,9,-2,8,-10,10,-7,6,4],[-1,1,-10,8,8,7,-6,-7,-4],[-5,-7,-3,7,-7,-3,10,-7,6],[3,-7,-8,10,9,1,6,-8,-3],[1,2,4,10,9,-4,-5,1,-2],[6,4,-1,1,-3,2,9,-7,-3],[8,6,1,6,-10,7,5,4,-1],[4,-6,-10,-2,-4,-3,1,-10,-1],[-6,-6,6,-8,7,2,-9,-9,-3],[3,-7,8,6,3,6,-9,-3,-1],[-10,-9,3,4,-8,-6,1,10,-8],[10,-6,10,-9,6,-5,10,-6,-2],[-10,10,9,-9,-7,2,7,-9,-5],[7,-9,-7,-2,8,5,6,6,3],[1,-8,3,4,-2,-5,2,-2,-6],[3,-5,5,-1,-5,-4,2,2,-4],[8,5,10,6,3,-3,6,-7,9],[2,1,-6,-8,10,8,7,9,5],[-3,3,8,4,-4,-6,-1,4,8],[6,-10,-7,10,4,7,1,10,-5],[10,4,-10,-10,1,-4,-7,4,-9],[-6,7,2,-1,4,-7,-4,8,-4],[10,-3,7,9,-2,-1,-8,-1,1],[6,6,-5,-9,-1,-7,-7,-6,-10],[-10,9,4,2,-9,6,6,-3,-10],[-3,-7,7,-9,3,-7,-2,-3,-8],[3,10,4,-1,6,1,2,8,-2],[5,7,9,-2,2,2,-4,-1,6],[-10,6,-2,-5,-4,-8,-6,-8,-3],[-9,-7,-4,-3,3,-3,-1,-9,1],[5,8,7,-6,8,-7,8,-10,9],[4,-2,-5,-8,-8,-3,-8,4,-8],[1,7,-5,-2,10,-7,-6,10,8],[1,-2,-10,-9,-3,-6,8,-4,-7],[-9,3,-3,-10,-1,-4,-6,6,-7],[2,7,-1,-8,-8,-5,-3,-8,-4],[9,7,-4,3,-8,-5,5,1,3],[-5,-4,-3,-2,3,-5,10,-3,-7],[9,-7,7,4,-9,6,-8,5,7],[-10,6,-8,2,-6,4,2,-3,10],[10,6,8,3,4,-9,6,10,5],[-5,-6,2,6,3,10,1,-7,9],[-8,1,-10,5,-2,-10,-4,5,-7],[8,-10,3,4,2,-1,-7,5,3],[10,3,-2,2,7,-6,4,-6,-6],[-6,4,-2,-1,6,-8,-9,-8,2],[-5,-5,-2,5,-6,-2,-1,-3,-8],[-2,3,-5,8,9,6,5,6,4],[-3,-3,1,1,6,10,8,-3,1],[-2,-1,4,-4,1,-1,7,-5,2],[8,1,-7,7,3,6,9,-3,-1],[-2,-6,-5,1,10,4,3,7,-5],[-2,-8,6,7,2,-10,6,7,6],[-10,4,2,-6,-10,-8,5,-7,3],[7,-1,-3,-3,2,3,-10,4,7],[-1,-2,5,-6,-7,3,6,-3,10],[-7,-5,3,-6,4,-8,-7,-3,-2],[6,9,10,-7,-4,5,-6,-9,9],[2,-4,5,-7,-4,1,1,3,3],[1,-2,-10,-1,9,-9,1,-6,-6],[-10,5,-5,8,-4,-5,-6,6,-3],[7,3,5,8,3,-2,9,4,-6],[10,5,6,-2,-8,2,-5,7,-9],[-1,-8,-3,5,-2,5,10,-1,9],[6,-2,10,-6,-5,4,-3,10,-9],[-4,4,5,-4,-3,3,4,5,-4],[10,-9,-2,6,10,-9,-9,-5,-8],[10,-9,-7,-9,2,7,-9,7,-1],[-3,-6,-4,-3,-9,8,1,1,3],[2,1,5,1,6,-4,-9,-5,-1]], dtype = "int8")#candidate|6437|(70, 9)|const|int8
var_6438 = relay.var("var_6438", dtype = "float32", shape = (54,))#candidate|6438|(54,)|var|float32
call_6435 = relay.TupleGetItem(func_1736_call(relay.reshape(var_6436.astype('int8'), [9, 14, 1]), relay.reshape(const_6437.astype('int8'), [9, 14, 5]), relay.reshape(var_6438.astype('float32'), [54,]), relay.reshape(const_6437.astype('int8'), [9, 14, 5]), ), 1)
call_6439 = relay.TupleGetItem(func_1741_call(relay.reshape(var_6436.astype('int8'), [9, 14, 1]), relay.reshape(const_6437.astype('int8'), [9, 14, 5]), relay.reshape(var_6438.astype('float32'), [54,]), relay.reshape(const_6437.astype('int8'), [9, 14, 5]), ), 1)
output = relay.Tuple([bop_6403,call_6417,call_6428,var_6429,call_6435,var_6436,const_6437,var_6438,])
output2 = relay.Tuple([bop_6403,call_6418,call_6430,var_6429,call_6439,var_6436,const_6437,var_6438,])
func_6471 = relay.Function([var_6401,var_6402,var_6429,var_6436,var_6438,], output)
mod['func_6471'] = func_6471
mod = relay.transform.InferType()(mod)
mutated_mod['func_6471'] = func_6471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mutated_mod.get_global_var('func_6471')
var_6473 = relay.var("var_6473", dtype = "bool", shape = (10, 1, 2))#candidate|6473|(10, 1, 2)|var|bool
var_6474 = relay.var("var_6474", dtype = "bool", shape = (10, 1, 2))#candidate|6474|(10, 1, 2)|var|bool
var_6475 = relay.var("var_6475", dtype = "int16", shape = (21, 5))#candidate|6475|(21, 5)|var|int16
var_6476 = relay.var("var_6476", dtype = "int8", shape = (1, 126))#candidate|6476|(1, 126)|var|int8
var_6477 = relay.var("var_6477", dtype = "float32", shape = (54,))#candidate|6477|(54,)|var|float32
call_6472 = func_6471_call(var_6473,var_6474,var_6475,var_6476,var_6477,)
output = call_6472
func_6478 = relay.Function([var_6473,var_6474,var_6475,var_6476,var_6477,], output)
mutated_mod['func_6478'] = func_6478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mod.get_global_var('func_4019')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_6594 = func_4019_call()
call_6595 = func_4019_call()
output = relay.Tuple([call_6594,])
output2 = relay.Tuple([call_6595,])
func_6598 = relay.Function([], output)
mod['func_6598'] = func_6598
mod = relay.transform.InferType()(mod)
output = func_6598()
func_6599 = relay.Function([], output)
mutated_mod['func_6599'] = func_6599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3147_call = mod.get_global_var('func_3147')
func_3149_call = mutated_mod.get_global_var('func_3149')
call_6609 = relay.TupleGetItem(func_3147_call(), 0)
call_6610 = relay.TupleGetItem(func_3149_call(), 0)
func_541_call = mod.get_global_var('func_541')
func_544_call = mutated_mod.get_global_var('func_544')
var_6632 = relay.var("var_6632", dtype = "int16", shape = (21, 5))#candidate|6632|(21, 5)|var|int16
call_6631 = func_541_call(relay.reshape(var_6632.astype('int16'), [3, 5, 7]))
call_6633 = func_541_call(relay.reshape(var_6632.astype('int16'), [3, 5, 7]))
func_6142_call = mod.get_global_var('func_6142')
func_6146_call = mutated_mod.get_global_var('func_6146')
var_6650 = relay.var("var_6650", dtype = "float64", shape = (1680,))#candidate|6650|(1680,)|var|float64
call_6649 = relay.TupleGetItem(func_6142_call(relay.reshape(var_6650.astype('float64'), [84, 20]), relay.reshape(var_6650.astype('float64'), [84, 20]), ), 1)
call_6651 = relay.TupleGetItem(func_6146_call(relay.reshape(var_6650.astype('float64'), [84, 20]), relay.reshape(var_6650.astype('float64'), [84, 20]), ), 1)
output = relay.Tuple([call_6609,call_6631,var_6632,call_6649,var_6650,])
output2 = relay.Tuple([call_6610,call_6633,var_6632,call_6651,var_6650,])
func_6656 = relay.Function([var_6632,var_6650,], output)
mod['func_6656'] = func_6656
mod = relay.transform.InferType()(mod)
var_6657 = relay.var("var_6657", dtype = "int16", shape = (21, 5))#candidate|6657|(21, 5)|var|int16
var_6658 = relay.var("var_6658", dtype = "float64", shape = (1680,))#candidate|6658|(1680,)|var|float64
output = func_6656(var_6657,var_6658,)
func_6659 = relay.Function([var_6657,var_6658,], output)
mutated_mod['func_6659'] = func_6659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4615_call = mod.get_global_var('func_4615')
func_4616_call = mutated_mod.get_global_var('func_4616')
call_6720 = relay.TupleGetItem(func_4615_call(), 4)
call_6721 = relay.TupleGetItem(func_4616_call(), 4)
var_6731 = relay.var("var_6731", dtype = "float64", shape = (9, 2, 6))#candidate|6731|(9, 2, 6)|var|float64
bop_6732 = relay.multiply(call_6720.astype('uint8'), relay.reshape(var_6731.astype('uint8'), relay.shape_of(call_6720))) # shape=(9, 2, 6)
bop_6735 = relay.multiply(call_6721.astype('uint8'), relay.reshape(var_6731.astype('uint8'), relay.shape_of(call_6721))) # shape=(9, 2, 6)
func_5355_call = mod.get_global_var('func_5355')
func_5357_call = mutated_mod.get_global_var('func_5357')
call_6737 = func_5355_call()
call_6738 = func_5355_call()
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_6743 = relay.TupleGetItem(func_4250_call(), 0)
call_6744 = relay.TupleGetItem(func_4251_call(), 0)
output = relay.Tuple([bop_6732,call_6737,call_6743,])
output2 = relay.Tuple([bop_6735,call_6738,call_6744,])
func_6745 = relay.Function([var_6731,], output)
mod['func_6745'] = func_6745
mod = relay.transform.InferType()(mod)
mutated_mod['func_6745'] = func_6745
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6746 = relay.var("var_6746", dtype = "float64", shape = (9, 2, 6))#candidate|6746|(9, 2, 6)|var|float64
func_6745_call = mutated_mod.get_global_var('func_6745')
call_6747 = func_6745_call(var_6746)
output = call_6747
func_6748 = relay.Function([var_6746], output)
mutated_mod['func_6748'] = func_6748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3479_call = mod.get_global_var('func_3479')
func_3480_call = mutated_mod.get_global_var('func_3480')
call_6759 = func_3479_call()
call_6760 = func_3479_call()
output = call_6759
output2 = call_6760
func_6785 = relay.Function([], output)
mod['func_6785'] = func_6785
mod = relay.transform.InferType()(mod)
mutated_mod['func_6785'] = func_6785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6785_call = mutated_mod.get_global_var('func_6785')
call_6786 = func_6785_call()
output = call_6786
func_6787 = relay.Function([], output)
mutated_mod['func_6787'] = func_6787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4806_call = mod.get_global_var('func_4806')
func_4808_call = mutated_mod.get_global_var('func_4808')
call_6866 = relay.TupleGetItem(func_4806_call(), 2)
call_6867 = relay.TupleGetItem(func_4808_call(), 2)
func_6389_call = mod.get_global_var('func_6389')
func_6390_call = mutated_mod.get_global_var('func_6390')
call_6871 = relay.TupleGetItem(func_6389_call(), 0)
call_6872 = relay.TupleGetItem(func_6390_call(), 0)
func_3479_call = mod.get_global_var('func_3479')
func_3480_call = mutated_mod.get_global_var('func_3480')
call_6880 = func_3479_call()
call_6881 = func_3479_call()
output = relay.Tuple([call_6866,call_6871,call_6880,])
output2 = relay.Tuple([call_6867,call_6872,call_6881,])
func_6885 = relay.Function([], output)
mod['func_6885'] = func_6885
mod = relay.transform.InferType()(mod)
mutated_mod['func_6885'] = func_6885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6885_call = mutated_mod.get_global_var('func_6885')
call_6886 = func_6885_call()
output = call_6886
func_6887 = relay.Function([], output)
mutated_mod['func_6887'] = func_6887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2705_call = mod.get_global_var('func_2705')
func_2706_call = mutated_mod.get_global_var('func_2706')
call_6917 = relay.TupleGetItem(func_2705_call(), 0)
call_6918 = relay.TupleGetItem(func_2706_call(), 0)
func_5047_call = mod.get_global_var('func_5047')
func_5050_call = mutated_mod.get_global_var('func_5050')
const_6926 = relay.const([True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False], dtype = "bool")#candidate|6926|(540,)|const|bool
call_6925 = relay.TupleGetItem(func_5047_call(relay.reshape(const_6926.astype('bool'), [540,])), 0)
call_6927 = relay.TupleGetItem(func_5050_call(relay.reshape(const_6926.astype('bool'), [540,])), 0)
output = relay.Tuple([call_6917,call_6925,const_6926,])
output2 = relay.Tuple([call_6918,call_6927,const_6926,])
func_6935 = relay.Function([], output)
mod['func_6935'] = func_6935
mod = relay.transform.InferType()(mod)
mutated_mod['func_6935'] = func_6935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6935_call = mutated_mod.get_global_var('func_6935')
call_6936 = func_6935_call()
output = call_6936
func_6937 = relay.Function([], output)
mutated_mod['func_6937'] = func_6937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_6991 = relay.TupleGetItem(func_3209_call(), 0)
call_6992 = relay.TupleGetItem(func_3211_call(), 0)
output = relay.Tuple([call_6991,])
output2 = relay.Tuple([call_6992,])
func_6999 = relay.Function([], output)
mod['func_6999'] = func_6999
mod = relay.transform.InferType()(mod)
mutated_mod['func_6999'] = func_6999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6999_call = mutated_mod.get_global_var('func_6999')
call_7000 = func_6999_call()
output = call_7000
func_7001 = relay.Function([], output)
mutated_mod['func_7001'] = func_7001
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7002 = relay.const([[[7.882252,2.049540,-3.871384,-1.005111,4.895604,-8.426886,-9.988442,9.161539,-1.217799,-2.172289,5.576644,6.489543,8.934470],[4.388637,-2.193686,-5.095317,-7.673701,5.626458,1.814966,1.884974,4.607437,-3.317887,-1.060522,2.412697,-2.683056,-7.242900],[-2.247990,2.623661,4.439603,9.463868,8.128942,5.634771,5.563980,7.588679,5.523959,4.994320,-2.403207,-8.402082,2.874356],[6.906813,7.010951,0.824943,4.504428,4.161914,-5.727640,-1.025571,-2.598849,4.147103,-0.942355,4.048449,-3.181044,2.937414],[-3.156814,9.089117,0.836302,2.585087,-8.655366,0.547242,5.871033,-9.406453,8.289920,4.451534,2.411000,9.226047,4.706774],[0.494911,0.141386,-3.067813,-7.783258,7.539378,-1.550083,-9.966663,-5.962665,-6.054893,2.320970,1.565280,1.177541,-0.289670],[0.761177,0.937808,-1.597676,-6.249622,3.900032,5.025749,0.746653,7.534259,9.755988,-2.829709,0.717760,7.847701,-4.469812],[0.497030,-0.400834,-0.521774,6.355540,-9.205650,-8.756698,4.392535,-0.845871,4.118476,-6.625629,2.991090,-7.717961,1.859181],[6.917703,-5.767818,7.915383,6.804205,-9.850248,9.337614,8.511508,4.049013,1.012015,1.698024,-6.497234,4.896674,-2.860408],[-5.174634,-6.609813,-6.298778,5.319676,2.391622,0.180836,-0.321409,-3.013897,4.360896,5.991542,0.412491,-3.530683,-5.400569]],[[8.002803,3.139054,5.506228,1.277753,4.725035,3.311028,-9.157046,4.932495,1.848547,1.153094,9.225906,-0.364444,-8.439019],[3.299973,-6.768483,3.166202,9.909731,5.407666,-8.355657,5.173369,9.368076,-0.452907,2.094023,7.627507,6.930122,3.355379],[4.809042,-1.137042,1.696375,-1.737292,5.772161,-0.840479,-2.325306,2.152626,-1.352268,-5.821337,3.231152,5.942298,-7.782415],[-0.249989,-9.647875,3.773324,3.931693,1.386285,1.378151,-0.812152,7.468395,-5.973912,5.471838,-5.788846,-4.004204,5.891257],[-4.964804,-0.589099,3.787106,-2.379315,-8.855455,6.962058,5.547628,2.299234,8.059916,-5.587416,-8.788289,-4.882867,-9.773275],[9.274606,-9.259412,7.617578,1.725558,2.397275,-6.161766,-1.956220,6.738412,-8.563618,-2.871084,-0.015520,0.677940,-2.240352],[4.344586,3.401495,-0.957051,-6.790052,2.011657,7.238721,9.434046,6.725463,-0.998727,9.720440,-9.263221,9.640370,3.312676],[-1.443587,-0.505581,-1.869577,1.144024,6.272115,-6.801853,-3.981370,4.475420,-3.206323,5.384945,-4.369130,-0.616231,5.367222],[5.103205,6.451492,-8.005248,-9.870594,7.410817,-9.133367,-8.352908,-2.017377,4.438194,6.102867,-4.184073,-8.216803,2.775033],[1.719867,-7.629198,-3.384810,6.109277,-1.989560,8.590130,-1.950451,6.412915,-8.271162,4.125571,-5.602919,0.776151,8.136396]],[[0.611825,9.118512,4.648942,-8.085725,-5.548997,3.919681,7.837266,9.463872,-0.926617,9.168992,7.812397,-0.953783,-6.300555],[6.970557,-8.106222,2.973725,-2.281651,-7.474764,9.722383,2.708087,-7.218469,-5.121934,-6.522295,-3.095285,1.648418,-5.070875],[4.437955,8.005925,4.724290,-3.126146,-8.204061,-5.742122,-3.968786,-4.622602,6.626319,9.689076,-5.261558,1.841634,-9.311305],[-4.725814,6.281716,-0.595064,6.764745,-5.003815,-7.234132,-7.383877,-2.973981,-4.198867,7.218911,7.228654,-4.658452,-3.655387],[-5.379830,-9.032665,-3.731297,-0.072974,0.186101,-9.999720,9.546036,-8.632940,0.734664,-0.553133,5.409007,2.273971,6.893226],[1.362880,2.433481,-2.691144,-7.319129,-8.581129,7.778115,-8.792024,2.016411,6.661622,-4.630586,6.473212,-9.918638,2.722948],[-5.030631,9.794738,5.274753,5.959535,-4.273046,-2.219013,-6.978136,5.655128,-6.302013,0.008780,3.919171,-5.969499,-8.502788],[7.842168,8.731196,-8.638042,2.132975,6.744033,-9.916182,-0.930211,-9.867870,5.775232,7.465592,8.933920,9.126417,-2.322080],[5.669152,-9.392798,-7.375474,2.060147,-4.337100,2.705056,3.001437,7.035195,6.784250,-7.269014,-9.424866,5.642239,0.595028],[7.474659,7.002320,5.381846,-4.191688,-5.034661,8.741080,-3.845823,8.793215,-2.914995,-7.211731,-0.615466,7.790448,-0.146088]],[[7.089835,0.532128,-2.495260,1.253390,-4.901286,-2.265126,-0.607644,9.063224,-4.101299,0.577526,5.140228,-3.407857,5.266239],[-8.279353,-7.108455,2.633147,-1.543435,-4.748781,1.101881,-5.815488,-6.103931,6.634541,6.815449,-9.225054,-3.892883,8.271155],[0.402444,-5.787964,-7.634161,2.099113,8.762923,-5.531727,-5.684186,-3.579800,-7.169753,1.776409,5.211637,2.446347,-1.651288],[9.940057,-5.903735,-0.995981,-2.883463,-5.103765,1.701033,8.887777,-5.550942,-5.608192,-3.625961,8.359494,3.374996,0.271605],[8.181681,2.772602,4.587544,-1.815210,3.794201,7.027669,8.479520,8.353058,-1.591029,2.010970,-4.354169,1.023756,-8.438007],[-4.811904,8.101625,1.028414,-8.360484,-3.758125,4.280659,0.477224,-9.892282,-5.851317,5.057428,-2.834158,2.965371,-5.504426],[-8.369030,-0.663143,-6.269900,-1.310533,7.742561,-5.499767,4.102376,5.350325,-0.553224,0.806600,6.521984,-0.388765,5.084150],[-7.728702,1.073523,7.216285,-2.960569,-3.655378,-0.702374,8.757489,-4.117697,7.446452,-6.109991,-8.556254,-6.395553,8.145791],[-6.186469,-1.285173,3.931269,-6.894436,1.449418,-9.276902,6.405128,2.511051,9.344209,9.015697,-6.528336,0.750705,4.710890],[9.467117,-8.573480,-0.275990,2.772725,-2.408920,5.695669,6.803737,-1.508243,0.693780,-1.413597,8.137212,6.801043,-1.499939]]], dtype = "float32")#candidate|7002|(4, 10, 13)|const|float32
uop_7003 = relay.sinh(const_7002.astype('float32')) # shape=(4, 10, 13)
output = uop_7003
output2 = uop_7003
func_7006 = relay.Function([], output)
mod['func_7006'] = func_7006
mod = relay.transform.InferType()(mod)
output = func_7006()
func_7007 = relay.Function([], output)
mutated_mod['func_7007'] = func_7007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5002_call = mod.get_global_var('func_5002')
func_5004_call = mutated_mod.get_global_var('func_5004')
call_7013 = relay.TupleGetItem(func_5002_call(), 0)
call_7014 = relay.TupleGetItem(func_5004_call(), 0)
output = relay.Tuple([call_7013,])
output2 = relay.Tuple([call_7014,])
func_7016 = relay.Function([], output)
mod['func_7016'] = func_7016
mod = relay.transform.InferType()(mod)
mutated_mod['func_7016'] = func_7016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7016_call = mutated_mod.get_global_var('func_7016')
call_7017 = func_7016_call()
output = call_7017
func_7018 = relay.Function([], output)
mutated_mod['func_7018'] = func_7018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_7026 = func_3419_call()
call_7027 = func_3419_call()
func_2524_call = mod.get_global_var('func_2524')
func_2527_call = mutated_mod.get_global_var('func_2527')
const_7030 = relay.const([2,-8,-8,10,-4,-3,-6,-10,-8,-1,-7,-10,1,4,5,-10,-1,-9,5,-8,-10,-10,7,5,4,2,10,6,5,3,3,9,10,-6,-7,7,-7,-4,-9,-2,4,6,5,5,-2,-9,2,1,-8,-10,-3,-2,6,-7,-6,7,2,-4,-3,-6,-9,-2,-7,-6,9,-9,5,-5,9,3,8,5,-3,-6,10,-3,-10,-2,7,-1,-4,-9,4,-7,5,-10,1,-2,6,1,1,-5,-1,10,-4,4,-5,-4,-8,-2,2,5,-1,8,-6], dtype = "int16")#candidate|7030|(105,)|const|int16
call_7029 = relay.TupleGetItem(func_2524_call(relay.reshape(const_7030.astype('int16'), [1, 105])), 1)
call_7031 = relay.TupleGetItem(func_2527_call(relay.reshape(const_7030.astype('int16'), [1, 105])), 1)
output = relay.Tuple([call_7026,call_7029,const_7030,])
output2 = relay.Tuple([call_7027,call_7031,const_7030,])
func_7038 = relay.Function([], output)
mod['func_7038'] = func_7038
mod = relay.transform.InferType()(mod)
output = func_7038()
func_7039 = relay.Function([], output)
mutated_mod['func_7039'] = func_7039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5173_call = mod.get_global_var('func_5173')
func_5174_call = mutated_mod.get_global_var('func_5174')
call_7067 = func_5173_call()
call_7068 = func_5173_call()
func_5446_call = mod.get_global_var('func_5446')
func_5447_call = mutated_mod.get_global_var('func_5447')
call_7083 = func_5446_call()
call_7084 = func_5446_call()
func_5273_call = mod.get_global_var('func_5273')
func_5274_call = mutated_mod.get_global_var('func_5274')
call_7089 = func_5273_call()
call_7090 = func_5273_call()
output = relay.Tuple([call_7067,call_7083,call_7089,])
output2 = relay.Tuple([call_7068,call_7084,call_7090,])
func_7109 = relay.Function([], output)
mod['func_7109'] = func_7109
mod = relay.transform.InferType()(mod)
output = func_7109()
func_7110 = relay.Function([], output)
mutated_mod['func_7110'] = func_7110
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7126 = relay.const([[[1,6,-1,10,8],[-7,-1,-6,3,5],[3,1,6,-6,9],[10,5,8,5,-3],[7,3,2,10,7],[7,1,-1,-1,9],[-4,2,3,7,-9],[2,10,-5,-5,8],[-10,3,4,-8,10],[-7,-6,-4,-10,-8],[-1,4,-8,-4,5],[4,-6,9,-10,8],[-4,-4,5,-9,1],[3,-10,3,-9,-10]],[[8,2,-2,7,7],[1,10,4,-5,10],[10,8,-4,7,-10],[8,2,4,-10,-5],[-6,-10,2,-2,7],[-3,-7,9,3,-5],[-5,-1,-10,3,7],[8,-6,10,4,-7],[3,-10,-2,-4,-6],[-8,-9,-2,-5,2],[6,-5,-10,-2,-4],[5,-10,10,5,9],[-2,-6,7,3,-4],[-3,-4,-3,-1,9]],[[6,5,-9,8,-10],[9,5,6,-3,3],[3,-10,-4,1,7],[-3,4,-9,-4,8],[7,7,-3,3,3],[5,-5,2,9,-7],[5,-1,9,-1,8],[-8,-9,6,-9,7],[-6,7,-1,-1,4],[7,9,8,10,2],[9,5,-8,-9,10],[8,-2,9,5,2],[-9,1,-10,7,-6],[-10,-10,4,-5,-4]],[[1,-3,10,4,2],[-7,8,-1,6,-8],[9,-9,2,7,-6],[-4,-7,-10,9,-4],[-2,3,10,-8,-4],[-9,6,-1,1,8],[1,6,9,6,-8],[10,-3,9,9,-10],[-4,3,4,10,2],[-5,-10,-2,7,-6],[10,4,-8,-7,-10],[7,5,-6,4,6],[-4,10,4,-10,1],[7,-1,-7,5,4]],[[-2,-1,-1,-5,5],[-2,4,2,7,10],[-9,1,9,-6,3],[-2,-1,9,-2,-8],[6,5,-5,8,10],[-9,-5,6,8,8],[2,-4,3,-6,8],[3,7,1,-6,3],[9,6,2,-9,3],[-2,7,9,-9,-6],[-8,-10,8,6,-2],[-3,-1,-6,10,3],[-3,8,1,10,2],[-7,-9,-5,8,-3]]], dtype = "int32")#candidate|7126|(5, 14, 5)|const|int32
var_7127 = relay.var("var_7127", dtype = "int32", shape = (5, 14, 5))#candidate|7127|(5, 14, 5)|var|int32
bop_7128 = relay.bitwise_xor(const_7126.astype('int32'), relay.reshape(var_7127.astype('int32'), relay.shape_of(const_7126))) # shape=(5, 14, 5)
uop_7135 = relay.tan(var_7127.astype('float32')) # shape=(5, 14, 5)
output = relay.Tuple([bop_7128,uop_7135,])
output2 = relay.Tuple([bop_7128,uop_7135,])
func_7140 = relay.Function([var_7127,], output)
mod['func_7140'] = func_7140
mod = relay.transform.InferType()(mod)
mutated_mod['func_7140'] = func_7140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7141 = relay.var("var_7141", dtype = "int32", shape = (5, 14, 5))#candidate|7141|(5, 14, 5)|var|int32
func_7140_call = mutated_mod.get_global_var('func_7140')
call_7142 = func_7140_call(var_7141)
output = call_7142
func_7143 = relay.Function([var_7141], output)
mutated_mod['func_7143'] = func_7143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3334_call = mod.get_global_var('func_3334')
func_3336_call = mutated_mod.get_global_var('func_3336')
call_7157 = relay.TupleGetItem(func_3334_call(), 1)
call_7158 = relay.TupleGetItem(func_3336_call(), 1)
func_2813_call = mod.get_global_var('func_2813')
func_2814_call = mutated_mod.get_global_var('func_2814')
call_7197 = func_2813_call()
call_7198 = func_2813_call()
var_7200 = relay.var("var_7200", dtype = "float64", shape = (2, 14, 6))#candidate|7200|(2, 14, 6)|var|float64
bop_7201 = relay.left_shift(call_7197.astype('int8'), relay.reshape(var_7200.astype('int8'), relay.shape_of(call_7197))) # shape=(2, 14, 6)
bop_7204 = relay.left_shift(call_7198.astype('int8'), relay.reshape(var_7200.astype('int8'), relay.shape_of(call_7198))) # shape=(2, 14, 6)
func_2032_call = mod.get_global_var('func_2032')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_7205 = relay.TupleGetItem(func_2032_call(), 0)
call_7206 = relay.TupleGetItem(func_2033_call(), 0)
output = relay.Tuple([call_7157,bop_7201,call_7205,])
output2 = relay.Tuple([call_7158,bop_7204,call_7206,])
func_7221 = relay.Function([var_7200,], output)
mod['func_7221'] = func_7221
mod = relay.transform.InferType()(mod)
var_7222 = relay.var("var_7222", dtype = "float64", shape = (2, 14, 6))#candidate|7222|(2, 14, 6)|var|float64
output = func_7221(var_7222)
func_7223 = relay.Function([var_7222], output)
mutated_mod['func_7223'] = func_7223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_7233 = func_4323_call()
call_7234 = func_4323_call()
uop_7238 = relay.log10(call_7233.astype('float64')) # shape=(12, 9, 5)
uop_7240 = relay.log10(call_7234.astype('float64')) # shape=(12, 9, 5)
func_896_call = mod.get_global_var('func_896')
func_897_call = mutated_mod.get_global_var('func_897')
call_7245 = func_896_call()
call_7246 = func_896_call()
func_1825_call = mod.get_global_var('func_1825')
func_1828_call = mutated_mod.get_global_var('func_1828')
call_7253 = relay.TupleGetItem(func_1825_call(relay.reshape(call_7233.astype('bool'), [12, 9, 5])), 6)
call_7254 = relay.TupleGetItem(func_1828_call(relay.reshape(call_7233.astype('bool'), [12, 9, 5])), 6)
output = relay.Tuple([uop_7238,call_7245,call_7253,])
output2 = relay.Tuple([uop_7240,call_7246,call_7254,])
func_7258 = relay.Function([], output)
mod['func_7258'] = func_7258
mod = relay.transform.InferType()(mod)
output = func_7258()
func_7259 = relay.Function([], output)
mutated_mod['func_7259'] = func_7259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2262_call = mutated_mod.get_global_var('func_2262')
call_7375 = relay.TupleGetItem(func_2261_call(), 0)
call_7376 = relay.TupleGetItem(func_2262_call(), 0)
uop_7383 = relay.log(call_7375.astype('float64')) # shape=(2, 14, 6)
uop_7385 = relay.log(call_7376.astype('float64')) # shape=(2, 14, 6)
output = relay.Tuple([uop_7383,])
output2 = relay.Tuple([uop_7385,])
func_7390 = relay.Function([], output)
mod['func_7390'] = func_7390
mod = relay.transform.InferType()(mod)
output = func_7390()
func_7391 = relay.Function([], output)
mutated_mod['func_7391'] = func_7391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2130_call = mod.get_global_var('func_2130')
func_2132_call = mutated_mod.get_global_var('func_2132')
call_7493 = func_2130_call()
call_7494 = func_2130_call()
func_2891_call = mod.get_global_var('func_2891')
func_2895_call = mutated_mod.get_global_var('func_2895')
var_7496 = relay.var("var_7496", dtype = "float64", shape = (1092,))#candidate|7496|(1092,)|var|float64
call_7495 = relay.TupleGetItem(func_2891_call(relay.reshape(var_7496.astype('float64'), [14, 78]), relay.reshape(var_7496.astype('float64'), [14, 78]), ), 3)
call_7497 = relay.TupleGetItem(func_2895_call(relay.reshape(var_7496.astype('float64'), [14, 78]), relay.reshape(var_7496.astype('float64'), [14, 78]), ), 3)
func_4952_call = mod.get_global_var('func_4952')
func_4954_call = mutated_mod.get_global_var('func_4954')
var_7504 = relay.var("var_7504", dtype = "float64", shape = (3, 36))#candidate|7504|(3, 36)|var|float64
call_7503 = relay.TupleGetItem(func_4952_call(relay.reshape(var_7504.astype('float64'), [108,])), 4)
call_7505 = relay.TupleGetItem(func_4954_call(relay.reshape(var_7504.astype('float64'), [108,])), 4)
func_2581_call = mod.get_global_var('func_2581')
func_2584_call = mutated_mod.get_global_var('func_2584')
var_7528 = relay.var("var_7528", dtype = "int16", shape = (105, 1))#candidate|7528|(105, 1)|var|int16
call_7527 = relay.TupleGetItem(func_2581_call(relay.reshape(var_7528.astype('int16'), [105,])), 2)
call_7529 = relay.TupleGetItem(func_2584_call(relay.reshape(var_7528.astype('int16'), [105,])), 2)
output = relay.Tuple([call_7493,call_7495,var_7496,call_7503,var_7504,call_7527,var_7528,])
output2 = relay.Tuple([call_7494,call_7497,var_7496,call_7505,var_7504,call_7529,var_7528,])
func_7536 = relay.Function([var_7496,var_7504,var_7528,], output)
mod['func_7536'] = func_7536
mod = relay.transform.InferType()(mod)
mutated_mod['func_7536'] = func_7536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7536_call = mutated_mod.get_global_var('func_7536')
var_7538 = relay.var("var_7538", dtype = "float64", shape = (1092,))#candidate|7538|(1092,)|var|float64
var_7539 = relay.var("var_7539", dtype = "float64", shape = (3, 36))#candidate|7539|(3, 36)|var|float64
var_7540 = relay.var("var_7540", dtype = "int16", shape = (105, 1))#candidate|7540|(105, 1)|var|int16
call_7537 = func_7536_call(var_7538,var_7539,var_7540,)
output = call_7537
func_7541 = relay.Function([var_7538,var_7539,var_7540,], output)
mutated_mod['func_7541'] = func_7541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5730_call = mod.get_global_var('func_5730')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_7597 = relay.TupleGetItem(func_5730_call(), 0)
call_7598 = relay.TupleGetItem(func_5731_call(), 0)
output = relay.Tuple([call_7597,])
output2 = relay.Tuple([call_7598,])
func_7603 = relay.Function([], output)
mod['func_7603'] = func_7603
mod = relay.transform.InferType()(mod)
mutated_mod['func_7603'] = func_7603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7603_call = mutated_mod.get_global_var('func_7603')
call_7604 = func_7603_call()
output = call_7604
func_7605 = relay.Function([], output)
mutated_mod['func_7605'] = func_7605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6935_call = mod.get_global_var('func_6935')
func_6937_call = mutated_mod.get_global_var('func_6937')
call_7627 = relay.TupleGetItem(func_6935_call(), 1)
call_7628 = relay.TupleGetItem(func_6937_call(), 1)
func_2833_call = mod.get_global_var('func_2833')
func_2835_call = mutated_mod.get_global_var('func_2835')
call_7638 = relay.TupleGetItem(func_2833_call(), 0)
call_7639 = relay.TupleGetItem(func_2835_call(), 0)
func_4615_call = mod.get_global_var('func_4615')
func_4616_call = mutated_mod.get_global_var('func_4616')
call_7640 = relay.TupleGetItem(func_4615_call(), 3)
call_7641 = relay.TupleGetItem(func_4616_call(), 3)
output = relay.Tuple([call_7627,call_7638,call_7640,])
output2 = relay.Tuple([call_7628,call_7639,call_7641,])
func_7653 = relay.Function([], output)
mod['func_7653'] = func_7653
mod = relay.transform.InferType()(mod)
mutated_mod['func_7653'] = func_7653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7653_call = mutated_mod.get_global_var('func_7653')
call_7654 = func_7653_call()
output = call_7654
func_7655 = relay.Function([], output)
mutated_mod['func_7655'] = func_7655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6885_call = mod.get_global_var('func_6885')
func_6887_call = mutated_mod.get_global_var('func_6887')
call_7688 = relay.TupleGetItem(func_6885_call(), 0)
call_7689 = relay.TupleGetItem(func_6887_call(), 0)
output = call_7688
output2 = call_7689
func_7690 = relay.Function([], output)
mod['func_7690'] = func_7690
mod = relay.transform.InferType()(mod)
output = func_7690()
func_7691 = relay.Function([], output)
mutated_mod['func_7691'] = func_7691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6885_call = mod.get_global_var('func_6885')
func_6887_call = mutated_mod.get_global_var('func_6887')
call_7766 = relay.TupleGetItem(func_6885_call(), 2)
call_7767 = relay.TupleGetItem(func_6887_call(), 2)
output = call_7766
output2 = call_7767
func_7793 = relay.Function([], output)
mod['func_7793'] = func_7793
mod = relay.transform.InferType()(mod)
mutated_mod['func_7793'] = func_7793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7793_call = mutated_mod.get_global_var('func_7793')
call_7794 = func_7793_call()
output = call_7794
func_7795 = relay.Function([], output)
mutated_mod['func_7795'] = func_7795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2286_call = mod.get_global_var('func_2286')
func_2287_call = mutated_mod.get_global_var('func_2287')
call_7798 = relay.TupleGetItem(func_2286_call(), 0)
call_7799 = relay.TupleGetItem(func_2287_call(), 0)
output = call_7798
output2 = call_7799
func_7809 = relay.Function([], output)
mod['func_7809'] = func_7809
mod = relay.transform.InferType()(mod)
output = func_7809()
func_7810 = relay.Function([], output)
mutated_mod['func_7810'] = func_7810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4288_call = mod.get_global_var('func_4288')
func_4290_call = mutated_mod.get_global_var('func_4290')
call_7910 = relay.TupleGetItem(func_4288_call(), 2)
call_7911 = relay.TupleGetItem(func_4290_call(), 2)
func_1536_call = mod.get_global_var('func_1536')
func_1539_call = mutated_mod.get_global_var('func_1539')
var_7947 = relay.var("var_7947", dtype = "float64", shape = (1, 1092))#candidate|7947|(1, 1092)|var|float64
call_7946 = relay.TupleGetItem(func_1536_call(relay.reshape(var_7947.astype('float64'), [1092,])), 2)
call_7948 = relay.TupleGetItem(func_1539_call(relay.reshape(var_7947.astype('float64'), [1092,])), 2)
output = relay.Tuple([call_7910,call_7946,var_7947,])
output2 = relay.Tuple([call_7911,call_7948,var_7947,])
func_7959 = relay.Function([var_7947,], output)
mod['func_7959'] = func_7959
mod = relay.transform.InferType()(mod)
mutated_mod['func_7959'] = func_7959
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7960 = relay.var("var_7960", dtype = "float64", shape = (1, 1092))#candidate|7960|(1, 1092)|var|float64
func_7959_call = mutated_mod.get_global_var('func_7959')
call_7961 = func_7959_call(var_7960)
output = call_7961
func_7962 = relay.Function([var_7960], output)
mutated_mod['func_7962'] = func_7962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7809_call = mod.get_global_var('func_7809')
func_7810_call = mutated_mod.get_global_var('func_7810')
call_8021 = func_7809_call()
call_8022 = func_7809_call()
var_8037 = relay.var("var_8037", dtype = "bool", shape = (12, 9, 5))#candidate|8037|(12, 9, 5)|var|bool
bop_8038 = relay.greater(call_8021.astype('bool'), relay.reshape(var_8037.astype('bool'), relay.shape_of(call_8021))) # shape=(12, 9, 5)
bop_8041 = relay.greater(call_8022.astype('bool'), relay.reshape(var_8037.astype('bool'), relay.shape_of(call_8022))) # shape=(12, 9, 5)
func_4545_call = mod.get_global_var('func_4545')
func_4547_call = mutated_mod.get_global_var('func_4547')
const_8054 = relay.const([-1.667373,-4.144427,5.364277,5.593721,1.461671,0.625000,5.296944,-5.654815,-6.407676,5.570646,2.201812,-8.141433,7.394011,-1.637058,-8.633494,-5.139602,5.650400,0.648503,-6.547788,0.743616,4.983459,0.740542,3.897387,-9.192213,5.385101,-0.843462,1.519038,8.098304,-2.391164,-2.077323,-9.134765,-3.975349,2.434487,-2.728096,-2.268876,5.266262,-5.670796,-4.753139,-5.464226,0.251022,1.369781,-4.421645,0.754777,1.094899,4.948167,-8.684361,-2.753307,-7.445377,-1.635931,9.278664,-9.657733,-3.265228,1.285577,5.059029,-9.398694,-2.819038,-9.217167,-8.287144,-9.377558,-9.338858,1.356698,1.885171,7.060728,9.799659,7.329090,-1.994323,6.813522,-6.586855,4.053125,-3.308231,7.753048,9.503620,5.724360,4.528586,2.615986,-0.415018,-1.757477,-7.212241,3.287824,5.339872,6.009432,-9.441945,-5.908694,2.847030,-0.274796,1.696046,-7.724815,-6.033550,4.303151,3.588734,3.428357,1.278402,-6.118468,6.950950,-1.305591,-0.283792,-2.577993,-9.756320,1.272498,-4.131084,-6.837366,5.099618,6.458697,-3.693600,5.117132,6.748591,7.330483,-2.007092,5.382433,1.679940,-0.001746,8.490620,3.329760,-1.770626,2.261577,-9.473500,-3.433792,3.835415,2.116301,-1.122347,2.607489,2.048575,1.425660,-4.891638,9.099524,-4.865041,7.576104,-4.247542,8.603323,-8.685933,-0.472671,-0.680409,-0.041446,-8.925829,-2.487088,8.796344,-9.126384,-0.339454,-5.751106,-6.364588,6.235739,-4.464565,-7.746131,7.211192,4.905667,6.230563,-6.041025,-0.313325,5.608293,9.931396,-9.375186,7.097425,2.973311,-1.780704,5.833580,-9.949367,8.358449,9.022008,1.365006,7.368066,-9.306159,-7.256391,5.079564,-0.627823,1.414679,-2.794423,-6.846395,5.886603,9.422549,4.535847,-6.171774,9.272128,-2.711062,-3.747177,4.690756,-7.781162,-8.391182,1.173352,-7.059433,-8.679595,5.826036,6.632263,-2.407344,2.707806,-8.040577,-5.158071,-7.119347,-2.545764,0.487001,8.170450,-1.323680,-9.514856,-6.219844,-1.318540,4.692662,7.543644,9.995663,-2.400320,1.348848,-4.279879,0.930678,-1.155436,-0.613178,-4.840815,8.093255,2.391531,-2.677842,-6.515704,5.624278,8.626022,4.128703,6.616107,0.277104,2.895412,9.125208,-5.846233,-1.447711,3.761200,9.997149,-0.964688,9.917334,-4.306074,-8.250174,-6.879393,-6.504173,-5.068784,-8.285413,-0.217025,-6.639571,-4.780461,0.361266,-9.397924,-9.842882,3.167168,8.709088,-4.015181,1.719412,-2.827013,-8.942585,9.818850,-3.686167,-6.436759,9.770399,-1.910949,-2.763051,4.802469,4.407275,-9.428859,4.685384,6.583188,4.882718,9.498649,7.951998,-3.743105,2.877549,-8.520943,-8.286659,-8.201311,5.263449,0.739382,-0.332702,-7.630295,-0.669434,4.098890,-9.337739,-1.071288,-1.145388,-4.534533,-2.224662,5.927604,-3.057913,8.426915,6.962986,-7.070781,2.508696,-8.083749,-4.659587,5.781314,4.159765,6.991381,-9.274962,-5.111657,6.420442,-9.470626,8.584694,2.391906,6.385729,-6.751192,2.286259,0.846656,-7.896427,-9.952811,-1.524501,7.976678,-3.531794,3.773636,2.974968,1.349554,-5.044785,-8.345994,-2.797664,8.774852,-4.978561,-9.480322,-0.431341,-5.394817,9.759041,-6.527855,2.522933,-4.710892,-5.414095,-7.146301,0.363026,-1.421766,6.119755,1.883566,6.344008,2.152473,6.103762,5.829106,2.030364,-3.704481,-4.823055,6.485925,9.399067,3.762621,2.519213,5.850626,1.229233,6.664747,-3.424598,-8.506080,3.457223,9.011333,6.062466,1.161637,5.536526,-1.189898,-9.847810,1.524158,5.963159,3.955838,-1.581967,7.641425,-5.806584,-6.126547,0.109787,-9.316459,-4.613006,5.006194,-3.447897,-4.088031,6.260187,3.002771,-3.244055,2.217749,5.225981,5.905046,5.176182,-5.436588,2.982306,-3.825623,8.604378,5.717350,-1.431995,-6.147804,5.757739,-2.458957,7.002744,-9.173925,-5.358101,0.813326,-3.473599,6.182073,4.331615,-0.201945,-4.640186,9.236829,8.117114,3.740375,-3.082514,6.617181,4.483407,-2.399270,3.902621,-2.454923,-3.972345,-9.657062,-8.192517,-0.535743,6.573577,-4.292261,2.569772,4.935898,2.686991,-4.356025,-7.852205,2.206878,-5.912690,-3.674353,4.245780,9.338437,-4.539541,-2.001227,-9.907508,-9.180787,3.202959,1.100397,4.009550,-0.585812,-2.867817,-7.850711,-4.196833,-7.448192,9.332971,-7.613883,4.380673,-9.952734,4.306082,5.627153,4.543279,3.557623,-5.064382,4.488558,-7.709796,-3.474394,-9.712214,1.320370,4.680634,4.759963,4.123002,0.863641,-5.301803,-7.033676,-8.528502,9.814702,-6.721921,5.570862,3.792920,-4.393459,-3.948022,-6.109504,5.428801,6.283779,1.985158,1.474016,-7.214906,-7.416215,-7.919716,7.922941,-3.572975,-0.003550,5.060377,8.611716,-5.565876,-4.343359,3.364366,6.756468,0.496090,4.658772,-5.621536,8.657046,3.326800,8.823524,-1.061110,-8.640509,2.465120,9.141237,-7.625643,9.057620,-9.503718,3.756893,3.318178,-9.293343,2.925801,0.414660,-4.073344,1.177110,-0.387625,8.583853,0.324001,8.460245,-4.845432,7.381144,-1.624462,8.265443,4.373329,-5.718578,-5.415187,8.432750,-9.179488,3.521391,6.287489,-8.120459,2.101124,-8.020438,1.199611,9.222698,4.246708,3.231688,7.094203,-2.560419,6.318758,9.877438,-7.291590,-0.748167,-3.377097,3.447430,-0.573954,3.683298,-9.966774,-7.493346,-3.791566,8.938711,-9.822072,6.135840,-3.110478,-0.780894,-0.695989,1.541026,-2.381890,0.235224,5.145644,-6.011803,-7.725455,2.563550,-0.554994,-1.377982,7.378612,-6.720314,-5.215539,5.595804,1.535458,2.915772,-2.051199,-1.886123,-8.595280,6.998522,7.355428,2.527482,6.818155,-0.342655,-1.513292,-0.341071,-8.949420,9.844008,-7.648618,0.451821,1.185793,2.728233,6.898868,-4.296202,3.102115,2.877442,-4.085031,-1.338434,2.136027,1.809789,-1.364914,1.168847,-5.936916,6.069474,-6.176215,-5.409940,2.216415,7.690337,-3.854450,-3.459831,9.905040,-9.745921,-7.471009,5.664201,8.779911,5.481553,2.709722,-8.286659,-2.333922,-6.304770,1.263577,-9.164733,6.670335,0.669207,4.953699,3.696540,-8.580742,-0.119675,1.646229,-1.017634,-0.882486,-8.486339,4.584796,2.676963,-8.409694,-7.078928,9.971122,0.970600,-6.503679,-8.576186,-6.938664,-7.513620,9.489353,-3.206778,-1.667611,0.038081,-3.262006,-8.316468,-9.699972,2.669605,-5.121294,-7.830869,-8.843336,-8.124896,8.721185,6.065608,-3.089081,-3.518669,-7.816275,-6.252629,8.560800,-1.931760,2.915272,3.095915,-3.758572,4.809769,-0.418634,-3.505337,1.684569,3.730219,7.340560,-8.906981,-6.904008,4.980442,8.139454,-6.713036,1.580400,9.605974,9.850283,4.466705,3.385388,-1.305692,-5.136668,6.088890,9.883285,-4.117778,3.688983,8.952987,9.331250,-8.453211,-9.294726,-6.769471,7.153243,6.544612,-0.816893,9.543089,2.179113,-5.795047,-6.106476,3.112474,-7.015747,3.684468,-1.667594,-9.953386,9.838108,3.007097,0.860985,-4.913931,4.314505,2.827515,-5.597364,4.016087,9.906045,6.041954,1.314821,6.216833,6.016988,5.875778,6.684965,3.342926,9.355286,8.748482,-7.561436,7.750612,5.255847,-4.533648,6.103271,8.073273,7.727212,2.275104,3.577681,-5.807629,5.826857,-3.581829,9.956600,4.965149,-3.532470,6.088382,-4.082609,-4.568387,-0.531194,1.841341,9.240196,-0.666915,-6.028672,5.087841,-9.374973,-8.230534,-8.501102,7.097694,-5.741620,-5.972971,2.217948,-7.773696,-9.532965,1.619664,5.326849,5.823062,1.471875,7.835459,1.275593,0.958201,-3.448643,7.836738,-0.416387,6.709792,5.816765,-6.531532,6.096425,5.696362,9.513705,-5.558378,7.007736,0.531595,6.079461,-3.958780,-6.186399,9.921497,8.362061,8.058708,1.432788,0.375070,-9.960441,5.374028,-5.469825,7.953863,4.663228,-6.982151,4.269406,8.016645,-5.984551,7.341467,5.712483,4.298894,1.980928,-2.497438,3.433278,-4.719530,2.663768,-3.690561,-8.559545,-8.560363,1.392160,-7.238442,-0.010946,-3.982026,-1.036829,7.136666,-4.415045,-5.572299,8.220311,-3.528530,-4.270819,-9.006860,-4.848379,2.185814,3.587038,-3.761418,-9.249682,6.174704,-9.802003,9.878231,-3.536882,-3.924366,-1.097032,-4.263905,1.624121,-8.866331,0.236556,-5.729736,9.810614,-5.727937,3.754742,-9.628159,-2.880370,-3.363696,7.761953,2.703128,2.219955,-6.537958,-2.485124,9.215873,5.505074,-0.381093,4.917921,-8.319618,-6.535928,6.779169,9.048363,-6.436285,7.226344,-0.314371,-4.240641,-6.472038,0.160311,2.676046,-7.021594,0.269211,9.619091,-0.396295,-5.684112,5.417832,-1.991654,-7.636413,-5.256766,8.233391,-5.794610,-9.155259,6.255554,-2.845200,6.926521,-7.128225,-1.682360,0.549340,9.078328,-2.531838,-0.152969,0.856257,-9.032742,-3.650868,-8.007674,5.936119,6.163282,1.916444,-3.673921,9.553274,-3.448258,9.826925,-4.715364,-0.463718,9.206151,8.716299,-0.178113,-3.111185,7.117283,-5.569315,-9.001819,-3.388829,8.499082,-4.481333,5.096719,-8.606932,7.347734,-6.795531,-2.963600,-1.452603,-7.722237,-7.955691,-5.362646,7.378238,5.563269,7.191229,9.345776,-3.450457,3.694806,6.960582,-9.245541,-1.182912,4.231824,2.933255,7.704711,5.774519,-7.390871,5.638896,-6.731144,-8.289781,-4.044619,7.790947,2.870528,-3.566198,-5.020062,4.058467,5.381545,7.847360,-9.997196,2.197932,-2.964272,3.308081,-8.739640,0.541319,-2.365846,-0.747348,9.247996,-4.071850,8.515075,2.682779,-7.789099,4.861253,6.664323,4.511438,3.561234,0.501793,7.436979,-7.681394,0.277989,9.768218,2.329536,-7.905661,3.782902,0.835667,-0.396457,0.960302,1.784716,-2.885288,9.076983,2.131802,-6.144829,-4.594972,7.846653,1.538373,-9.128485,-9.600789,9.507343,-2.427713,-7.651270,2.599573,-7.638559,8.022533,8.049886,-4.619136,1.192226,-2.468205,4.080605,-5.561643,2.037215,7.620739,-8.918136,-3.251162,6.505739,-0.804029,-8.473075,-5.369733,-0.485750,2.535722,4.582025,-5.612638,2.453485,6.415669,7.897019,5.618042,0.926684,-1.204866,5.920409,0.431683,3.256885,-7.039105,-4.030126,5.267399,-1.384495,-0.405913,-4.666266,1.199664,7.168110,-3.310882,-2.769304,-4.684612,6.341600,2.799435,8.779426,8.366970,-3.763474,-7.972293,-1.061085,-0.962690,-3.770068,-6.510697,0.344281,-0.822305,-9.587527,-0.959681,3.957544,1.945003,8.200314,3.803154,6.877942,-4.083390,-2.854735,-2.911378,-5.334457,4.807978,-7.544658,6.355763,6.414521,-5.242457,6.771487,-4.973965,1.166216,4.166199,-4.424000,0.003023,7.778175,-6.984353,0.373967,-0.809433,4.940348,-5.129615,3.224750,2.321745,-7.922585,8.847829,-2.510711,-1.661783,0.478817,8.801419,-0.944572,2.646044,-3.197426,4.426930,9.585891,0.737958,0.373033,-5.014099,7.679123,-1.074887,5.279696,4.281867,3.884028,-6.066947,2.291459,6.624346,-7.693313,6.776600,-9.500901,-0.227085,-6.328605,-7.362214,-5.680359,5.088328,-2.469566,7.897514,9.845576,-6.434713,-9.379369,8.632325,-4.834029,8.622170,7.662846,1.146829,3.356347,0.747062,2.273230,2.534859,-6.007749,9.548481,-6.973856,8.831421,-8.542187,3.535550,-6.834331,-1.289050,4.817232,8.737021,4.929076,-4.932695,6.615167,-8.290151,2.483274,-3.354662,-2.811730,-6.135628,-9.990608,-5.116980,1.173474,3.080718,-7.788207,-4.812548,1.994310,4.841378,-7.086387,6.189869,4.076127,-6.159737,3.200767,7.057888,4.551636,9.685495,5.357519,-1.775665,1.617502,-1.180899,2.307242,4.149836,-6.276941,4.018161,-6.207867,-2.590487,2.024458,-0.445454,3.761440,-5.935675,7.866552,-6.022020,-3.601292,-2.789672,-2.691828,2.713577,3.899111,-3.004173,1.395248,7.476482,-6.437878,-9.443400,-4.546029,0.282877,-2.040605,-0.296843,2.129767,-3.843122,6.647545,1.751103,8.025632,-1.045215,8.953920,-6.745453,-5.137145,-5.503987,-2.984660,-5.200330,3.061602,-6.601602,-3.838271,3.234456,-2.456095,8.257298,-9.528392,1.588611,4.024502,9.417324,5.518259,-3.769516,6.138019,-4.514115,5.076018,-1.796627,-4.950239,-9.797080,-4.991236,-5.436342,3.446036,-5.465751,-9.690582,3.046593,3.170277,-9.724574,-8.946867,9.294438,2.420926,8.662916,-4.807536,2.525126,4.026680,8.607996,-9.932032,-3.805662,6.661326,6.280603,-1.039262,-4.169336,1.000335,-6.374449,4.429092,5.235937,-0.403647,3.136051,0.283479,5.245605,-5.303229,-4.304940,0.129576,-7.794289,4.016963,-3.096463,-3.526791,-0.569736,-1.920595,7.862333,-9.206054,-4.705495,-8.662301,9.326094,2.975035,-6.100871,-7.467840,-6.374829,5.417179,-9.423657,-0.462948,-8.772075,1.767299,5.247069,-2.847661,7.705268,1.210120,7.732508,6.458473,2.998340,6.851965,-5.339025,-0.729807,1.449150,8.837216,8.991815,2.221761,-9.405416,-0.367828,-6.447630,6.400763,6.721224,3.200015,-0.109803,8.669089,0.803685,9.262141,-2.085604,-4.674123,4.041675,-9.960643,-0.022638,-7.916746,-5.814486,-9.163758,3.444551,1.092660,-8.878042,2.216613,3.873395,4.727510,-2.737166,2.131651,-6.924577,-4.176247,3.481844,-0.921209,-3.036560,3.422079,9.491484,2.186117,2.046938,9.400584,-8.688152,-9.503041,-1.751243,-9.034610,-7.235518,0.295802,-8.424502,-1.902987,-5.235888,0.127694,9.308060,-1.915620,-6.066983,-7.969606,-0.712169,5.392004,-8.444554,-1.511752,8.378819,0.556406,-6.034717,5.974976,7.528435,0.641745,-5.817338,-0.586969,0.727558,0.686447,2.397594,9.083332,2.253712,-8.309150,-6.514239,-2.399608,5.159628,5.629452,2.417891,-7.858863,-1.114887,-1.472258,-1.899343,-7.387752,4.295838,2.613029,2.222370,-9.094125,-4.341441,8.007997,-3.011452,-6.144520,1.213181,8.605675,-1.573477,4.994320,0.691446,-3.462891,4.301998,9.209912,-2.828016,4.108371,6.972531,-8.417264,-0.474758,-7.123368,-2.916949,-1.812379,-7.275219,-6.760694,-5.268010,5.892313,8.286057,0.249822,7.842630,-3.682065,-6.064024,0.902592,2.119660,3.071339,3.951282,-0.739528,-4.154691,-6.067929,1.349779,-3.170878,-4.742873,3.799087,9.974149,-8.962941,-1.733453,-8.717620,-7.749728,-1.684158,9.952145,8.209901,-8.634581,-9.844658,6.037402,2.580747,9.146973,-8.834064,-3.899827,-9.122089,-3.423177,-1.838728,6.668990,4.089734,-7.576499,6.198877,9.297449,5.782880,4.919977,9.128922,-1.724285,5.454881,-4.927811,3.590572,6.788408,-0.475958,2.627858,-2.394072,1.802573,-9.306545,-5.283410,4.100954,5.182438,4.867171,2.742935,9.052286,5.981975,0.994451,-3.511716,-8.608072,-0.664760,6.990874,6.700118,-4.452755,-3.598345,1.610371,4.888896,-0.862675,4.029902,3.362631,-2.390223,-0.599161,8.724573,4.497137,-0.958035,0.857018,-7.686940,-8.931996,1.735126,-1.902793,-5.832669,-8.457281,9.555783,-4.514343,-2.537434,7.775700,-4.066196,-4.855591,8.162808,3.361879,-7.199674,9.573290,9.204044,-0.624058,-6.675347,-2.037107,-7.137577,-8.990111,-5.824213,-2.045280,-9.526176,5.468294,5.870351,-1.713287,-1.565845,7.372438,0.239235,3.226449,-8.860177,6.571166,0.159677,4.903994,-7.163349,4.603444,-9.313700,4.527207,8.521012,3.677958,-6.777274,1.196719,0.824234,1.861376,4.463720,-7.820411,8.157086,5.787756,0.750672,-5.488784,-5.330487,-6.080578,-4.975711,-3.168828,6.262331,-8.159131,4.335328,-7.297038,-0.046851,9.039384,-2.107471,-7.858221,2.434988,-9.140946,-8.723329,-5.825105,-9.107419,-6.641252,-6.048112,-6.833514,-1.964209,-7.723651,7.542335,5.798297,-8.300770,6.387187,-1.882435,-4.268510,6.520896,-6.472260,-1.456078,8.715826,-1.182791,6.315743,-4.609260,-3.026058,-4.075875,-4.484044,4.992817,-5.681494,6.241844,-6.643629,2.448601,9.303432,-0.235061,-0.295385,5.994068,5.235976,8.522929,-0.281983,6.623473,6.371700,4.356373,9.787491,1.760010,6.010618,8.158811,-5.480634,-4.250592,-3.270458,0.011876,1.167057,-7.396076,-5.304909,5.596785,0.916443,7.252661,9.213487,-7.945385,1.732838,-7.133407,-1.933817,8.768520,-2.255147,0.486827,-9.409826,2.596797,6.191925,-3.794780,-8.239698,-7.814396,-9.668213,-9.221520,8.991262,-4.003101,-7.070928,1.235758,2.480218,8.026469,-9.027740,-3.075360,3.433279,4.384406,2.606880,3.858911,1.632150,8.271851,7.343888,0.984154,-5.751896,-5.173834,-9.277496,-0.802944,-2.962329,5.690563,-5.073741,4.445170,-0.822591,-4.290114,-6.062296,2.249527,3.163152,-0.926406,-3.513261,3.274971,5.149887,2.032882,2.126873,4.107198,9.394073,8.245569,-8.880224,4.119244,9.361809,-4.429616,7.455095,6.126204,-5.929641,-1.411834,-9.972036,-8.290603,7.936296,2.555851,2.590780,-2.106184,-7.465059,-9.433819,-6.140843,4.523410,2.651277,6.396017,3.751475,7.530432,-2.076008,-0.936279,-5.005024,2.841165,-7.826795,-2.330060,5.788313,-8.621989,-2.083273,3.875041,-1.139263,-2.970759,-8.562149,3.094993,2.469838,-9.639783,-1.328616,-8.965290,8.470629,-3.086888,-3.696426,5.906867,6.572028,2.945585,-5.170724,-1.182450,8.483741,-6.991307,-5.457317,0.509701,-3.716349,-8.449384,-9.649421,3.209753,-6.327040,6.322598,1.469360,-2.579589,-4.979141,-0.920158,-4.669676,-8.915957,-8.108491,-9.608352,-7.411432,-9.254690,7.243617,3.149291,2.218066,6.536096,-8.154829,-0.665484,3.477972,-8.419251,7.683875,-5.904434,2.132168,5.624727,3.667022,-5.903087,-2.269358,-9.229480,4.804795,6.080421,1.599138,-4.374325,-8.862132,0.060175,-2.995630,4.946014,-8.685859,4.483417,-3.490205,7.889264,-3.970483,4.556222,-0.225228,-2.736024,2.020981,-5.675139,-7.888970,-3.216383,-4.739192,-7.561802,5.188078,-0.636006,3.038543,3.596255,-7.521424,5.577089,6.527239,6.343519,2.994793,8.547227,-4.591610,7.547844,5.944056,3.929088,1.244542,-5.548881,2.460960,-4.330479,-0.606179,8.579730,9.417928,-8.871360,7.118435,-7.692506,1.401904,-3.293519,-9.110809,3.420013,1.583326,9.929637,-0.829021,-5.259351,-8.326046,1.711716,-5.394166,6.188721,5.364353,-5.212094,-5.242347,6.966052,1.720181,1.526694,2.328951,4.809866,5.667514,1.178175,-9.719102,2.476810,9.011211,5.599112,3.330470,9.130146,-9.657536,-9.560150,-5.976473,9.486432,0.088147,1.113613,2.338380,5.483391,1.445430,-0.254805,-8.202174,-9.869521,-5.218609,-7.827870,7.292670,7.631585,3.556326,-0.456500,4.198900,3.772491,-0.526883,-2.821735,1.172570,-0.159329,-1.004221,-4.717489,-1.439389,-1.599610,5.132746,4.200322,-8.617856,-1.558244,-3.442749,-5.049382,-9.067507,-7.086843,-9.364665,-3.098850,-2.337021,9.874265,-7.218830,-3.156784,-1.917830,9.614227,2.594437,-2.163907,7.951231,6.966698,4.699509,-4.091609,-8.066100,-6.478499,1.076711,-4.650029,2.439261,-5.854676,-8.203443,7.102321,-1.817227,-7.143735,2.464690,5.525721,8.376187,-0.265229,-6.531728,4.107705,0.060115,-2.878629,-3.478243,-2.685896,-9.813572,5.749029,7.733536,9.064196,-9.516612,1.476661,7.177645,-4.963513,-4.607494,1.975801,6.254333,3.166181,7.524705,2.077866,-7.227248,1.545640,5.284024,2.405118,7.350101,-4.842380,-3.133768,3.046011,-7.915125,2.253085,-9.162814,-8.008010,6.501162,-7.358808,6.329179,-6.441486,-7.978183,-2.070702,4.410556,-5.153612,-3.024963,-9.290499,2.055174,-5.951130,0.965335,-6.082462,2.213257,-7.863045,-9.944921,9.408442,-9.144321,3.689916,9.899260,-9.106529,-0.235669,-3.517278,8.853267,1.611665,-4.726226,6.969344,0.149974,-8.024489,-3.378134,4.957129,5.507185,-7.253707,5.343637,-8.157196,3.814585,3.054336,-1.239847,-1.278194,-5.052602,-2.615190,-9.111669,-3.057959,6.821293,-8.369960,1.764686,-3.182849,-1.859059,5.410616,-4.210484,-4.426753,-6.818807,9.946757,8.655296,5.771488,-5.088389,5.728662,8.236186,-9.453354,-2.459932,-8.098424,1.036231,-6.633757,7.128530,7.513078,-2.367037,8.752686,3.501342,7.423982,-0.815100,-2.167717,-7.061078,7.676543,0.097063,-5.658403,-3.335183,-0.653410,7.152075,3.304088,-8.371371,-2.758673,6.320602,7.550895,6.973901,7.635858,9.767947,-8.579863,4.962776,0.585149,6.498572,-7.843416,-7.531564,2.714889,-6.078860,-9.241099,4.932125,5.427534,-7.817053,2.789656,8.651762,-8.982393,-2.722344,-5.188087,-2.805940,4.941487,1.838765,-3.362424,-7.393172,8.625003,-5.416865,4.304190,-1.817863,-2.682195,0.625941,-4.127423,0.431944,-5.987131,8.070640,0.119311,-2.304268,-5.663648,9.609141,-6.231866,-2.241024,-7.163453,2.218866,8.997539,-8.213835,5.260320,3.194711,-6.179700,-1.205266,9.367284,9.246302,5.989865,2.141540,4.298780,-5.884850,-0.529910,1.137069,-6.106499,-8.598144,-3.929633,7.566180,-5.731964,-3.703068,4.410073,3.912201,-2.718511,-1.173692,6.950525,5.180556,-9.123887,-4.463753,1.011517,0.874658,-4.262073,8.923483,-9.942913,-8.253715,8.729967,0.154312,8.159248,4.267430,8.856816,-7.395492,0.429131,8.369584,3.023218,-4.217292,7.895807,-2.383321,5.094903,-7.845602,8.438100,4.678633,3.818033,2.259690,1.172193,6.653031,-5.105800,7.481661,4.739539,3.918805,-7.364134,9.235557,1.638992,-3.846503,5.654032,-0.687320,2.022603,-8.361289,-0.077584,-1.820652,-8.159238,-3.109427,6.808226,7.952797,-3.421342,3.275972,-0.141534,-6.476313,1.237126,1.119826,-5.376915,3.836811,8.970400,-6.355727,8.621758,7.255856,-1.306873,3.301538,-4.446772,2.331730,9.385771,8.426514,3.690360,-9.185791,-7.549176,-2.137947,4.250716,2.471081,5.964042,1.279247,-2.425391,-5.678055,-9.270813,-8.400654,-8.753897,-6.263631,-5.189310,-9.773334,7.952757,-2.731655,-9.511492,-8.173306,-1.883304,-7.658196,-8.488855,9.328668,-0.582317,8.499318,7.182468,8.849322,8.407674,6.993753,-8.316569,-7.632074,-6.028382,4.966608,7.201130,1.856384,4.444639,7.618861,4.358992,-2.259693,-7.105096,-7.705184,9.678259,-7.643468,2.170288,0.928233,1.870256,-4.860285,-3.062416,-5.072533,7.694538,-9.075298,1.619363,-5.857241,-7.842192,-5.473438,0.149944,-9.822536,6.456333,6.574988,-5.676283,-0.610971,-9.430482,-8.150765,-1.322779,-2.250252,-7.096944,6.742140,-2.060803,-0.814155,-8.713659,-4.380099,2.495512,6.123780,6.020170,-6.760618,3.888393,5.224994,8.935666,-3.849372,-1.168253,4.487308,2.738172,-2.837745,4.745703,-9.244831,6.238394,5.741738,9.176481,7.718257,4.364552,5.839813,-0.847900,2.453901,-8.969717,-3.231045,-7.691806,4.594564,-3.196660,-2.123024,-7.523331,3.349402,6.931645,-7.277894,9.529195,2.216693,5.385294,6.493357,3.237225,6.342571,0.275578], dtype = "float64")#candidate|8054|(2160,)|const|float64
call_8053 = relay.TupleGetItem(func_4545_call(relay.reshape(const_8054.astype('float64'), [2160,])), 8)
call_8055 = relay.TupleGetItem(func_4547_call(relay.reshape(const_8054.astype('float64'), [2160,])), 8)
func_2227_call = mod.get_global_var('func_2227')
func_2229_call = mutated_mod.get_global_var('func_2229')
call_8057 = relay.TupleGetItem(func_2227_call(), 0)
call_8058 = relay.TupleGetItem(func_2229_call(), 0)
func_721_call = mod.get_global_var('func_721')
func_724_call = mutated_mod.get_global_var('func_724')
var_8060 = relay.var("var_8060", dtype = "float64", shape = (420,))#candidate|8060|(420,)|var|float64
call_8059 = func_721_call(relay.reshape(var_8060.astype('float64'), [15, 4, 7]))
call_8061 = func_721_call(relay.reshape(var_8060.astype('float64'), [15, 4, 7]))
func_4174_call = mod.get_global_var('func_4174')
func_4180_call = mutated_mod.get_global_var('func_4180')
const_8069 = relay.const([[-4.842226,-4.375194,-9.906620,-6.576201,-9.385180,6.820891,2.908913,2.015330,-3.503448,8.636408,-3.420076,3.091215,8.223462,-8.929103,-0.075540,2.782704,-4.274468,-1.701912,2.659631,9.412676,-8.781671,-0.091865,2.319396,5.807601,9.507629,-1.884816,5.497493,-6.198395,-8.564101,-3.662294,3.214588,-0.054667,-3.774843,-7.235669,8.393043,4.110506,-3.208573,6.268735,5.611369,0.255533,6.211014,-0.175704,4.979425,8.897626,7.426094,8.497485,7.587052,0.614022,-1.817619,2.114202,2.103897,-0.250303,-8.123219,-7.138669,-0.642560,-6.991643,0.410202,-8.263437,3.657606,3.220658,-7.865136,3.728689,-4.575900,7.149087,-1.199744,-3.286326,7.653199,-4.284895,-0.710690,6.318959,-3.345192,-7.238267,4.577258,4.157671,-2.340733,1.223884,1.103004,-4.970452],[6.982411,-1.268085,-1.906463,-2.713793,1.526202,3.236404,6.609493,-4.490518,-9.382954,0.644215,-5.107864,-0.066937,6.803512,4.646807,7.374859,-9.604572,7.723850,-5.168895,1.879761,7.319945,1.273541,-6.596087,8.627773,2.793779,1.444898,1.522662,9.598402,-8.845548,-5.926681,4.381177,6.029171,-3.569507,-9.335516,-2.177120,3.094807,2.103029,-3.531578,1.922942,-2.470827,4.874050,-4.073869,3.098947,9.662007,-7.776801,8.465986,2.994877,-3.641234,9.309659,-2.231428,-6.946805,3.082076,8.981214,-3.945172,-8.127609,3.053719,-2.800511,-5.704680,1.684077,-3.844799,2.959868,7.599354,-1.437618,6.813931,-9.920784,-7.182612,2.464275,-2.031123,8.548726,-1.521739,-0.068328,-2.503182,2.133004,-4.951386,-8.777434,-3.028962,8.211483,-6.422096,0.027377],[2.484019,1.725399,5.253519,-0.811460,7.083448,-9.737477,4.854220,0.161336,3.225180,-6.021180,8.698180,-2.099904,7.291187,8.212451,-1.873253,2.001986,5.695039,0.023505,4.986935,-8.974528,6.129927,-1.067758,7.560605,-4.642280,-0.408848,4.452775,5.612423,-9.915929,6.084446,-6.896494,-4.258042,8.402494,8.454936,-4.039534,-8.680107,8.124357,7.602322,-8.857724,-6.583845,-6.413793,-6.133432,-8.982040,2.955073,-4.022867,3.037583,-4.358276,-6.657855,3.143557,-1.712118,-8.968362,-8.993788,0.982984,-4.926835,1.322441,-6.772292,6.005193,0.878180,6.315462,-7.293558,9.623686,-9.819112,-8.919157,0.505911,-5.335395,1.124832,5.637992,9.479598,-1.575305,-3.657426,-9.294225,3.222098,1.470231,7.158445,3.486778,-7.737215,2.982692,5.038287,6.331246],[5.393813,-1.631358,8.184136,1.819352,-5.320847,-2.969570,5.079167,-2.303987,-6.691322,3.741573,-1.937787,-5.277541,5.951386,2.701488,7.768722,8.756062,4.020789,1.601602,9.883697,9.747851,-3.746789,9.357927,-6.484491,-1.619227,8.100910,-7.862093,2.395211,8.769148,1.122141,1.707256,1.764762,3.489262,-0.030121,1.674288,5.731654,-9.126856,-0.745289,2.122740,0.248495,-1.186115,9.349339,-3.820282,7.236601,7.647050,-7.313679,0.140964,-6.997292,-1.632788,0.594620,-4.737821,-3.909896,8.788053,-0.900249,8.959880,-4.629415,5.094713,2.444138,-2.574035,6.842747,9.283929,-3.065451,4.823071,1.570240,-8.035273,-8.127664,-9.588673,4.159282,5.161567,-7.157078,2.072778,-3.308230,3.958452,-7.787799,-0.892352,3.929991,4.094865,-7.918062,-4.666537],[7.014748,3.923196,-7.496547,-2.545393,7.501413,7.772510,4.953633,-7.038606,8.606088,3.079428,-7.072943,6.495307,0.893535,9.345449,-3.377325,2.072742,-2.066310,5.834350,-9.051670,-7.696098,0.332193,-2.822398,-9.585328,7.242485,-3.483631,3.672625,-5.458454,-1.014085,-1.344858,-4.077173,-2.645058,-4.428070,-9.928999,4.779813,8.596860,-0.726284,2.862750,5.838428,0.573762,-8.058610,1.268375,-9.169621,-3.144036,6.453621,9.842181,0.800636,-4.836386,-3.176717,1.391082,0.806198,-0.621458,-2.534025,-5.833286,1.274667,-7.284452,4.432167,-3.563375,8.846006,7.067185,0.446025,-2.128985,-1.794995,-4.632833,7.890355,-8.664202,-1.944482,-2.696825,-6.469922,1.155319,1.197602,2.456747,1.031949,-6.706278,6.938127,-0.823569,-5.281825,0.089523,5.998956],[-0.838443,-5.257845,2.890649,5.275733,7.560110,6.077305,6.296669,-8.347409,4.280659,-7.234720,-2.365682,0.719262,-5.906815,-1.516958,-3.642860,5.713203,-1.481140,5.216635,9.895304,-1.041995,0.934503,4.628393,-9.547058,3.505338,1.203070,8.175261,0.565030,-8.222173,8.405439,-1.205724,-3.835236,-4.856366,9.998862,0.327351,-6.055813,6.975973,1.203513,-5.896002,-5.999361,0.843297,-4.867917,2.802119,-4.897416,1.765571,-9.942951,2.629062,-5.616535,-8.777000,-9.482685,-1.992325,9.927298,-2.937608,-6.423771,-1.537797,-2.901577,-5.855561,-0.286992,3.376188,-6.829671,-6.823445,-9.729164,5.617450,9.582576,-6.464463,2.266101,-0.848379,-1.684735,4.537267,-7.431685,4.201711,-3.873614,9.860170,8.788907,9.472675,1.420916,2.159099,5.646317,-0.279231],[-7.321237,-4.526750,7.205750,-3.193698,8.770277,-0.992071,6.756179,4.686750,-9.402466,-5.306823,0.577853,8.003745,-7.205626,-4.296340,5.234384,-4.537833,2.632527,-0.388237,-5.526284,-6.787397,-1.515342,2.775798,-8.479717,0.118434,8.972939,-0.856841,2.122384,8.597058,-7.274313,-5.976102,9.975157,6.574001,2.524358,1.842452,-9.653759,-4.571816,9.416569,-3.260447,-5.991585,-3.182184,-5.726737,-4.255310,-9.965974,2.400812,5.341216,-6.011169,-6.974572,1.420721,2.877976,8.082043,-0.872941,1.027203,0.695838,3.045006,4.671186,6.783466,-2.183611,-3.447700,-5.099598,-3.156200,8.172834,-9.363839,-2.256348,2.052627,-9.928188,-2.017232,-5.657765,-1.137368,8.704789,6.970624,1.812238,-8.878092,-3.670208,-7.195601,-7.866354,-7.385186,-9.468747,-9.957504],[-8.046786,-0.713294,-6.674348,0.274823,-5.488446,3.832111,1.279379,7.030116,7.100582,7.750121,-1.299850,-3.611237,-2.381695,-4.068032,2.802750,9.972819,-0.096580,9.512349,-8.066667,-2.018425,-0.415781,9.494578,-2.162926,3.323327,-0.131166,-7.589601,-6.188648,-5.285637,6.981468,7.156542,7.192816,5.525424,1.084950,-8.804075,3.852274,-8.783328,-8.828495,-7.300254,-1.061164,5.429834,-0.023429,2.251408,-3.958473,8.035016,-5.491025,1.793485,2.150082,-6.954327,8.195021,8.529452,2.696507,-4.931275,2.284302,-3.605572,-3.252699,-7.739695,1.569094,-3.427789,4.865929,-5.711682,-1.563163,8.917203,-8.006864,-1.279391,8.110766,-6.669701,-2.832346,-9.613831,4.759806,9.314387,-8.476744,-7.716784,-0.011548,-8.972422,-3.682367,8.987828,-6.309935,7.034888],[-0.082269,-0.260214,3.036212,-5.817418,6.796293,0.748351,-2.235387,9.168457,-5.093270,-2.529340,-6.831015,7.703987,0.803906,9.961303,2.802095,-8.273235,3.359360,8.211112,-2.859598,-2.710519,7.032294,-0.793447,-6.110171,-7.928471,-9.372544,8.128418,0.914760,7.969688,-4.695925,-4.655854,1.514015,7.192312,4.701319,4.066400,9.945764,-9.000682,4.273245,-9.232844,-0.471387,3.540611,5.339465,3.218668,4.032558,-5.535742,0.839464,5.409003,2.339827,9.824496,-3.903646,-0.669462,-9.237851,-4.709933,-0.434366,-8.796689,9.971894,2.913246,-1.386553,-3.003672,0.448632,7.128386,2.519141,-0.188925,-0.471367,-6.539215,-7.563422,-4.770853,0.105189,7.180501,5.482201,-8.834580,5.922601,2.594771,-4.131836,4.497521,-2.130083,-7.852701,0.353171,5.783176],[3.562460,-4.519786,-2.149358,-9.899041,6.628470,1.477480,0.884089,-2.783433,3.367512,9.593121,9.714028,-0.405519,0.652880,1.656101,0.546441,-6.581062,-0.632186,-1.781409,3.023572,-5.018831,-0.733601,6.199080,2.399632,-7.191057,-0.826361,-5.230932,-6.111361,7.145049,-5.682110,2.011963,7.917051,-7.051504,-4.256475,0.227606,0.607332,3.581874,0.336060,-4.833002,-8.012608,-6.124531,-9.275617,-0.954381,1.577772,-9.747929,-7.628518,6.559034,-8.697207,-0.203364,-1.867971,-4.278578,2.615461,-4.546525,7.684277,-4.992595,5.147967,-9.788438,4.235379,9.491414,-1.629191,-8.166195,4.298967,5.793749,2.281887,-0.825727,8.873240,-6.925970,-9.838422,9.676460,9.005682,2.699060,-8.419831,-6.394385,-5.129603,-5.918430,7.071907,-5.417567,-7.972467,-1.620365],[9.662782,-7.730767,-8.831573,0.989949,9.886194,-9.456312,-1.000043,0.517770,3.367671,4.355438,8.609435,-4.716119,-9.588154,6.881125,-2.406123,5.648284,8.084018,-5.426225,-7.542901,-2.514497,9.685172,-3.589949,5.938950,-5.652133,1.750991,-1.820317,-7.102180,0.384214,8.650762,3.096855,6.729391,6.887738,-8.502342,-8.944274,-2.134926,-2.829712,2.338272,6.177684,5.711763,5.913465,0.580523,2.918542,-3.243853,5.014899,-2.550626,-5.858023,1.664614,-4.324109,1.593536,-5.494379,3.876485,4.732357,7.298664,8.519081,2.878738,8.933297,1.110926,-0.470457,1.315357,3.659610,-6.329987,9.129321,-0.880267,-0.613907,-5.806878,2.050613,1.178747,-7.384351,4.900023,8.665772,-4.033837,-9.270414,-9.363359,-1.058173,-4.233157,4.098626,1.214961,-1.812074],[-7.142092,1.611384,7.964704,-9.954905,-3.450463,4.288302,3.223482,-2.933599,4.717446,5.678354,3.260758,4.051725,9.896364,-3.609354,-0.312508,-3.531382,9.598268,1.349691,-6.334118,-3.438816,4.849085,6.610247,-7.127116,-4.348150,-8.462553,4.789854,9.931982,9.153122,7.043981,3.950548,-2.274334,-2.263398,-7.715926,-0.910345,-3.506002,5.501328,-6.116935,-1.297322,-3.190201,-2.261756,-7.843806,-2.616077,-0.326043,-3.892037,5.332771,8.806151,-2.525928,-1.950761,-0.260264,4.733189,2.784256,-0.606807,7.908069,-1.021699,4.879678,-0.448196,6.496853,-0.555315,-0.586777,3.580246,-3.916456,5.890585,2.838845,4.814096,-7.510487,-0.337299,7.519719,9.860831,8.232933,-0.082186,-9.498855,-5.948109,7.640591,-9.984608,6.388779,-0.351074,-2.820998,-1.271067],[8.391247,1.911451,5.794032,9.097964,-5.745706,9.027069,-2.289871,4.055624,7.087064,-8.179159,-0.594544,-9.085040,8.667435,4.613174,8.149997,7.724628,-0.147206,-6.694804,-8.836466,-3.495640,1.775084,-7.662678,-9.553180,-9.549593,6.423164,-3.981412,8.779233,9.498509,6.883412,2.130751,0.793304,9.294240,1.847716,7.839017,3.013572,1.770481,5.807146,8.264638,3.602340,2.410673,-8.675301,-3.791914,9.580575,-3.241794,-2.369600,2.211471,-8.221544,5.286945,-9.229857,0.903061,2.490038,-6.251573,-9.832680,-4.628919,-7.244990,-1.245297,3.630308,-1.676170,7.401645,-8.156445,-7.639485,7.137095,-7.325794,2.062661,3.551538,9.786626,5.099467,5.394493,9.873783,8.636109,-8.716602,-3.336182,-2.014059,-4.392649,-2.928305,6.888953,-7.418281,9.191494],[-6.135654,7.668539,-9.003052,-1.347862,7.704341,6.650020,4.829364,-1.157142,3.597052,4.707340,7.074820,3.070707,-9.622532,1.541391,6.030681,-7.079778,6.783505,0.757212,-7.440346,9.915471,1.962062,-9.297935,6.490757,-8.203754,2.531778,-4.367998,8.335907,-2.918537,-0.670859,-0.993519,3.572041,6.926127,3.125109,-9.028600,-7.063990,5.299437,-3.459529,-8.542589,-7.917477,-8.541259,5.044921,-3.352679,-8.657480,-4.978819,-5.647685,-7.085757,7.303583,-2.445553,-2.187884,-1.038299,-4.284027,4.458524,5.597843,-8.166903,-5.401618,-3.540281,1.022347,8.949422,7.601514,7.009271,-7.433672,3.874396,6.290423,-4.636153,-0.472570,8.338262,-4.486644,-0.541496,-5.172158,9.667994,3.846724,-3.811952,3.111192,0.195754,-3.568513,-1.184231,-8.093325,-5.382382]], dtype = "float64")#candidate|8069|(14, 78)|const|float64
var_8070 = relay.var("var_8070", dtype = "bool", shape = (98,))#candidate|8070|(98,)|var|bool
const_8071 = relay.const([[9.573729,4.209223,4.667127,6.049305,4.751022,-6.527452,1.379540,6.487196,-2.599281,-1.240705,-1.025190,-2.808444,-4.829709,-8.680567,2.973437,8.696050,-7.599920,1.588984,8.958264,-5.593515,6.634688,-5.177960,-2.270337,6.865826,2.399107,0.281400,-6.641162,-1.238409,4.645653,7.751498,-1.049881,1.186305,4.397132,-5.399363,-6.494307,-6.353441,5.023432,-9.797650,-7.817852,5.231909,0.625437,3.376625,-3.683392,-8.498935,-6.161920,-1.033939,1.829510,-5.090046,-8.177573,2.762021,7.563713,9.573782,-3.133401,-9.547778,4.552410,-2.199788,-4.390235,-0.032795,-9.357896,9.613422,-8.890651,7.608192,0.751719,-1.718520,-7.901142,-3.350626,4.828675,0.016191,-5.697297,-7.529356,0.111529,-2.820950,2.484705,-6.151464,-2.594083,-1.797893,1.159072,-4.016136,9.174250,-0.888342,-5.921331,-1.912195,-2.448525,5.327502,3.818006,-0.690419,-9.096864,2.194790,0.673319,4.964780,7.236700,-5.703486,9.854359,9.479068,-9.743689,6.875946,1.574951,-4.263231,4.154418,-3.868621,-6.710019,0.299867,5.278892,-2.632746,-8.154282,-4.326544,6.960028,-1.573529,3.613610,-0.238097,7.299730,-3.586602,3.056032,3.454777,-4.732514,7.409437,-9.522506,-6.776739,0.147198,9.395426,-6.428945,2.172111,-2.359751,8.550582,-9.005366,6.997392,5.241624,-7.653194,9.535978,5.687903,5.326398,-9.951659,9.410292,3.525407,9.964323,-3.111670,8.041303,5.803256,9.848712,7.283236,-3.105951,6.301274,9.651398,-4.013088,2.054604,-9.595481,6.063758,0.661375,2.217194,8.298978,9.449824,6.432811,-6.487466,-2.235953,5.411495,2.080464,4.087963,7.486381,-1.896612,1.113233,0.762600,-2.316318,-6.449501,1.103417,-2.669638,-6.712982,-1.798582,-4.211279,-0.314641,-2.480839,6.944387,-2.225786,-5.659424,4.268360,3.715971,4.932318,-8.295885,4.649555,6.812014,4.394672,-5.330603,9.106484,6.215602,4.724981,-4.775547,9.026001,0.913782,-8.734103,4.135881]], dtype = "float64")#candidate|8071|(1, 189)|const|float64
call_8068 = relay.TupleGetItem(func_4174_call(relay.reshape(const_8069.astype('float64'), [1092,]), relay.reshape(call_8059.astype('float64'), [420,]), relay.reshape(var_8070.astype('bool'), [98,]), relay.reshape(const_8071.astype('float64'), [9, 3, 7]), ), 3)
call_8072 = relay.TupleGetItem(func_4180_call(relay.reshape(const_8069.astype('float64'), [1092,]), relay.reshape(call_8059.astype('float64'), [420,]), relay.reshape(var_8070.astype('bool'), [98,]), relay.reshape(const_8071.astype('float64'), [9, 3, 7]), ), 3)
uop_8077 = relay.sqrt(const_8071.astype('float32')) # shape=(1, 189)
uop_8082 = relay.sigmoid(uop_8077.astype('float64')) # shape=(1, 189)
output = relay.Tuple([bop_8038,call_8053,const_8054,call_8057,call_8059,var_8060,call_8068,const_8069,var_8070,uop_8082,])
output2 = relay.Tuple([bop_8041,call_8055,const_8054,call_8058,call_8061,var_8060,call_8072,const_8069,var_8070,uop_8082,])
func_8091 = relay.Function([var_8037,var_8060,var_8070,], output)
mod['func_8091'] = func_8091
mod = relay.transform.InferType()(mod)
mutated_mod['func_8091'] = func_8091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8091_call = mutated_mod.get_global_var('func_8091')
var_8093 = relay.var("var_8093", dtype = "bool", shape = (12, 9, 5))#candidate|8093|(12, 9, 5)|var|bool
var_8094 = relay.var("var_8094", dtype = "float64", shape = (420,))#candidate|8094|(420,)|var|float64
var_8095 = relay.var("var_8095", dtype = "bool", shape = (98,))#candidate|8095|(98,)|var|bool
call_8092 = func_8091_call(var_8093,var_8094,var_8095,)
output = call_8092
func_8096 = relay.Function([var_8093,var_8094,var_8095,], output)
mutated_mod['func_8096'] = func_8096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2286_call = mod.get_global_var('func_2286')
func_2287_call = mutated_mod.get_global_var('func_2287')
call_8175 = relay.TupleGetItem(func_2286_call(), 0)
call_8176 = relay.TupleGetItem(func_2287_call(), 0)
output = relay.Tuple([call_8175,])
output2 = relay.Tuple([call_8176,])
func_8192 = relay.Function([], output)
mod['func_8192'] = func_8192
mod = relay.transform.InferType()(mod)
output = func_8192()
func_8193 = relay.Function([], output)
mutated_mod['func_8193'] = func_8193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3777_call = mod.get_global_var('func_3777')
func_3778_call = mutated_mod.get_global_var('func_3778')
call_8208 = relay.TupleGetItem(func_3777_call(), 0)
call_8209 = relay.TupleGetItem(func_3778_call(), 0)
output = relay.Tuple([call_8208,])
output2 = relay.Tuple([call_8209,])
func_8216 = relay.Function([], output)
mod['func_8216'] = func_8216
mod = relay.transform.InferType()(mod)
output = func_8216()
func_8217 = relay.Function([], output)
mutated_mod['func_8217'] = func_8217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6885_call = mod.get_global_var('func_6885')
func_6887_call = mutated_mod.get_global_var('func_6887')
call_8274 = relay.TupleGetItem(func_6885_call(), 2)
call_8275 = relay.TupleGetItem(func_6887_call(), 2)
output = call_8274
output2 = call_8275
func_8277 = relay.Function([], output)
mod['func_8277'] = func_8277
mod = relay.transform.InferType()(mod)
output = func_8277()
func_8278 = relay.Function([], output)
mutated_mod['func_8278'] = func_8278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2273_call = mod.get_global_var('func_2273')
func_2275_call = mutated_mod.get_global_var('func_2275')
call_8308 = relay.TupleGetItem(func_2273_call(), 0)
call_8309 = relay.TupleGetItem(func_2275_call(), 0)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
var_8318 = relay.var("var_8318", dtype = "bool", shape = (7, 14))#candidate|8318|(7, 14)|var|bool
call_8317 = func_1147_call(relay.reshape(var_8318.astype('bool'), [14, 1, 7]))
call_8319 = func_1147_call(relay.reshape(var_8318.astype('bool'), [14, 1, 7]))
func_5773_call = mod.get_global_var('func_5773')
func_5774_call = mutated_mod.get_global_var('func_5774')
call_8324 = func_5773_call()
call_8325 = func_5773_call()
output = relay.Tuple([call_8308,call_8317,var_8318,call_8324,])
output2 = relay.Tuple([call_8309,call_8319,var_8318,call_8325,])
func_8337 = relay.Function([var_8318,], output)
mod['func_8337'] = func_8337
mod = relay.transform.InferType()(mod)
mutated_mod['func_8337'] = func_8337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8338 = relay.var("var_8338", dtype = "bool", shape = (7, 14))#candidate|8338|(7, 14)|var|bool
func_8337_call = mutated_mod.get_global_var('func_8337')
call_8339 = func_8337_call(var_8338)
output = call_8339
func_8340 = relay.Function([var_8338], output)
mutated_mod['func_8340'] = func_8340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8357 = relay.var("var_8357", dtype = "float64", shape = (3, 2, 5))#candidate|8357|(3, 2, 5)|var|float64
var_8358 = relay.var("var_8358", dtype = "float64", shape = (3, 2, 5))#candidate|8358|(3, 2, 5)|var|float64
bop_8359 = relay.mod(var_8357.astype('float64'), relay.reshape(var_8358.astype('float64'), relay.shape_of(var_8357))) # shape=(3, 2, 5)
func_3479_call = mod.get_global_var('func_3479')
func_3480_call = mutated_mod.get_global_var('func_3480')
call_8364 = func_3479_call()
call_8365 = func_3479_call()
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_8373 = func_4323_call()
call_8374 = func_4323_call()
output = relay.Tuple([bop_8359,call_8364,call_8373,])
output2 = relay.Tuple([bop_8359,call_8365,call_8374,])
func_8381 = relay.Function([var_8357,var_8358,], output)
mod['func_8381'] = func_8381
mod = relay.transform.InferType()(mod)
var_8382 = relay.var("var_8382", dtype = "float64", shape = (3, 2, 5))#candidate|8382|(3, 2, 5)|var|float64
var_8383 = relay.var("var_8383", dtype = "float64", shape = (3, 2, 5))#candidate|8383|(3, 2, 5)|var|float64
output = func_8381(var_8382,var_8383,)
func_8384 = relay.Function([var_8382,var_8383,], output)
mutated_mod['func_8384'] = func_8384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2130_call = mod.get_global_var('func_2130')
func_2132_call = mutated_mod.get_global_var('func_2132')
call_8411 = func_2130_call()
call_8412 = func_2130_call()
func_6142_call = mod.get_global_var('func_6142')
func_6146_call = mutated_mod.get_global_var('func_6146')
var_8418 = relay.var("var_8418", dtype = "float64", shape = (1680,))#candidate|8418|(1680,)|var|float64
call_8417 = relay.TupleGetItem(func_6142_call(relay.reshape(var_8418.astype('float64'), [84, 20]), relay.reshape(var_8418.astype('float64'), [84, 20]), ), 0)
call_8419 = relay.TupleGetItem(func_6146_call(relay.reshape(var_8418.astype('float64'), [84, 20]), relay.reshape(var_8418.astype('float64'), [84, 20]), ), 0)
func_5739_call = mod.get_global_var('func_5739')
func_5742_call = mutated_mod.get_global_var('func_5742')
const_8425 = relay.const([True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True], dtype = "bool")#candidate|8425|(378,)|const|bool
call_8424 = func_5739_call(relay.reshape(const_8425.astype('bool'), [14, 9, 3]))
call_8426 = func_5739_call(relay.reshape(const_8425.astype('bool'), [14, 9, 3]))
output = relay.Tuple([call_8411,call_8417,var_8418,call_8424,const_8425,])
output2 = relay.Tuple([call_8412,call_8419,var_8418,call_8426,const_8425,])
func_8429 = relay.Function([var_8418,], output)
mod['func_8429'] = func_8429
mod = relay.transform.InferType()(mod)
mutated_mod['func_8429'] = func_8429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8430 = relay.var("var_8430", dtype = "float64", shape = (1680,))#candidate|8430|(1680,)|var|float64
func_8429_call = mutated_mod.get_global_var('func_8429')
call_8431 = func_8429_call(var_8430)
output = call_8431
func_8432 = relay.Function([var_8430], output)
mutated_mod['func_8432'] = func_8432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8481 = relay.var("var_8481", dtype = "float32", shape = (3, 14, 1))#candidate|8481|(3, 14, 1)|var|float32
uop_8482 = relay.sqrt(var_8481.astype('float32')) # shape=(3, 14, 1)
output = relay.Tuple([uop_8482,])
output2 = relay.Tuple([uop_8482,])
F = relay.Function([var_8481,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8481,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

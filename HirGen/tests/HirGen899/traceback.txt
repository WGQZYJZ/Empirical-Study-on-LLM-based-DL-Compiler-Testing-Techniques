==========mod==========
#[version = "0.0.5"]
def @func_11039() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %0 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %3 = @func_10430() /* ty=Tensor[(6, 14, 10), float32] */;
  %4 = acosh(%2) /* ty=Tensor[(6, 14, 10), float32] */;
  (%3, %4)
}

def @func_1546(%var_1512: Tensor[(5, 13, 5), int64], %var_1534: Tensor[(4, 16, 12), float64]) -> (Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) {
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 13, 5), int64] */, dtype="int64") /* ty=Tensor[(5, 13, 5), int64] */;
  %6 = shape_of(%var_1512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%var_1512, dtype="int64") /* ty=Tensor[(5, 13, 5), int64] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(192, 4), float32] */, dtype="float32") /* ty=Tensor[(192, 4), float32] */;
  %10 = reshape(%9, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %11 = @func_122(%10) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %12 = %11.0;
  %13 = cast(%12, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %14 = reshape(%13, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %15 = @func_122(%14) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %16 = %15.1;
  %17 = cast(%var_1534, dtype="bool") /* ty=Tensor[(4, 16, 12), bool] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%16, dtype="bool") /* ty=Tensor[(4, 16, 12), bool] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %21 = bitwise_xor(%7, %8) /* ty=Tensor[(5, 13, 5), int64] */;
  %22 = logical_or(%19, %20) /* ty=Tensor[(4, 16, 12), bool] */;
  (%21, %12, meta[relay.Constant][1] /* ty=Tensor[(192, 4), float32] */, %22)
}

def @func_10875() -> (Tensor[(6, 14, 10), float32],) {
  %23 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %24 = %23.0;
  (%24,)
}

def @func_21218() -> Tensor[(6, 14, 10), float32] {
  %25 = @func_17546() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(256), float64]) */;
  %25.0
}

def @func_18735() -> (Tensor[(5, 16, 14), float32],) {
  %26 = @func_14934() /* ty=(Tensor[(5, 16, 14), float32],) */;
  %27 = %26.0;
  (%27,)
}

def @func_20459() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(140), uint32]) {
  %28 = @func_16730() /* ty=(Tensor[(256), float64],) */;
  %29 = @func_10655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) */;
  %30 = @func_14474() /* ty=Tensor[(6, 14, 10), float32] */;
  %31 = %28.0;
  %32 = %29.2;
  (%30, %31, %32)
}

def @func_6741() -> (Tensor[(6, 14, 10), float32],) {
  %33 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %34 = %33.0;
  (%34,)
}

def @func_6488(%var_6477: Tensor[(2, 16, 1), float32]) -> (Tensor[(2, 16, 1), float32], Tensor[(2, 15, 3), bool], Tensor[(90, 1), float64]) {
  %35 = cast(%var_6477, dtype="float32") /* ty=Tensor[(2, 16, 1), float32] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %38 = reshape(%36, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %39 = reshape(%37, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %40 = @func_5698(%38, %39) /* ty=(Tensor[(2, 15, 3), bool],) */;
  %41 = cos(%35) /* ty=Tensor[(2, 16, 1), float32] */;
  %42 = %40.0;
  (%41, %42, meta[relay.Constant][2] /* ty=Tensor[(90, 1), float64] */)
}

def @func_15772() -> Tensor[(11, 11, 12), float32] {
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 12), float32] */;
  exp(%43) /* ty=Tensor[(11, 11, 12), float32] */
}

def @func_16705() -> Tensor[(6, 14, 10), float32] {
  @func_9469() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_18836(%var_18816: Tensor[(60), float64], %var_18828: Tensor[(5, 44), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32], Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 11, 5), float64], Tensor[(5, 44), float64]) {
  %44 = @func_16884() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %45 = cast(meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %46 = cast(meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %47 = cast(meta[relay.Constant][5] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %48 = cast(meta[relay.Constant][6] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %49 = cast(meta[relay.Constant][7] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %50 = reshape(%45, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %51 = reshape(%46, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %52 = reshape(%47, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %53 = reshape(%48, newshape=[]) /* ty=uint32 */;
  %54 = reshape(%49, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %55 = @func_2482(%50, %51, %52, %53, %54) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %56 = cast(%var_18816, dtype="float64") /* ty=Tensor[(60), float64] */;
  %57 = reshape(%56, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %58 = @func_12717(%57) /* ty=(Tensor[(256), float64], Tensor[(45, 2), float64], Tensor[(60), float64], Tensor[(768), float64]) */;
  %59 = cast(%var_18828, dtype="float64") /* ty=Tensor[(5, 44), float64] */;
  %60 = reshape(%59, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float64] */;
  %61 = @func_14105(%60) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(7, 11, 5), float64]) */;
  %62 = %44.2;
  %63 = @func_16705() /* ty=Tensor[(6, 14, 10), float32] */;
  %64 = %55.13;
  %65 = %58.2;
  %66 = %61.1;
  (%62, %63, %64, meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, meta[relay.Constant][5] /* ty=Tensor[(325), int64] */, meta[relay.Constant][6] /* ty=uint32 */, meta[relay.Constant][7] /* ty=Tensor[(140), uint32] */, %65, %var_18816, %66, %var_18828)
}

def @func_15418() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %67 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
  %68 = @func_12213() /* ty=Tensor[(256), float64] */;
  %69 = %67.0;
  %70 = @func_7729() /* ty=Tensor[(6, 14, 10), float32] */;
  (%68, %69, %70)
}

def @func_14313(%var_14306: Tensor[(77), float32]) -> (Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) {
  %71 = @func_13459() /* ty=(Tensor[(35, 10), int32],) */;
  %72 = cast(%var_14306, dtype="float32") /* ty=Tensor[(77), float32] */;
  %73 = reshape(%72, newshape=[1, 11, 7]) /* ty=Tensor[(1, 11, 7), float32] */;
  %74 = @func_10600(%73) /* ty=(Tensor[(1, 11, 7), float32],) */;
  %75 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %76 = %71.0;
  %77 = %74.0;
  %78 = %75.1;
  (%76, %77, %var_14306, %78)
}

def @func_18914() -> Tensor[(256), float64] {
  %79 = @func_13857() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
  %79.1
}

def @func_20493(%var_20482: Tensor[(16, 10, 1), float64]) -> (Tensor[(16, 10, 1), float64],) {
  %80 = cast(%var_20482, dtype="float64") /* ty=Tensor[(16, 10, 1), float64] */;
  %81 = exp(%80) /* ty=Tensor[(16, 10, 1), float64] */;
  (%81,)
}

def @func_6626() -> (Tensor[(6, 14, 10), float32],) {
  %82 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %83 = rsqrt(%82) /* ty=Tensor[(6, 14, 10), float32] */;
  (%83,)
}

def @func_12213() -> Tensor[(256), float64] {
  @func_12013() /* ty=Tensor[(256), float64] */
}

def @func_15888() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float64]) {
  %84 = @func_11326() /* ty=(Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */;
  %85 = @func_10248() /* ty=Tensor[(256), float64] */;
  %86 = %84.0;
  (%85, %86)
}

def @func_16483() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) {
  %87 = @func_10012() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %88 = @func_8870() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %89 = @func_15059() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(35, 10), int32], Tensor[(77), float32], Tensor[(7, 11, 5), float64]) */;
  %90 = %87.0;
  %91 = %88.0;
  %92 = %89.4;
  (%90, %91, %92)
}

def @func_7937() -> Tensor[(6, 14, 10), float32] {
  %93 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %93.0
}

def @func_21503() -> Tensor[(6, 14, 10), float32] {
  %94 = @func_16595() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %94.0
}

def @func_21167(%var_21164: Tensor[(105), float64], %var_21165: Tensor[(325), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(105), float64], Tensor[(325), int64]) {
  %95 = @func_16595() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %96 = cast(%var_21164, dtype="float64") /* ty=Tensor[(105), float64] */;
  %97 = cast(%var_21165, dtype="int64") /* ty=Tensor[(325), int64] */;
  %98 = reshape(%96, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %99 = reshape(%97, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %100 = @func_6947(%98, %99) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) */;
  %101 = %95.0;
  %102 = %100.0;
  (%101, %102, %var_21164, %var_21165)
}

def @func_17748() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64]) {
  %103 = cast(meta[relay.Constant][9] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %104 = reshape(%103, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %105 = @func_17072(%104) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64]) */;
  %106 = @func_13918() /* ty=Tensor[(6, 14, 10), float32] */;
  %107 = %105.0;
  (%106, %107, meta[relay.Constant][9] /* ty=Tensor[(90), float64] */)
}

def @func_10234(%var_10209: Tensor[(5, 3, 4), float64]) -> (Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) {
  %108 = cast(%var_10209, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %109 = cast(meta[relay.Constant][10] /* ty=Tensor[(45, 2), float64] */, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %110 = cast(meta[relay.Constant][10] /* ty=Tensor[(45, 2), float64] */, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %111 = reshape(%109, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %112 = reshape(%110, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %113 = @func_5698(%111, %112) /* ty=(Tensor[(2, 15, 3), bool],) */;
  %114 = sqrt(%108) /* ty=Tensor[(5, 3, 4), float64] */;
  %115 = %113.0;
  (%114, %115, meta[relay.Constant][10] /* ty=Tensor[(45, 2), float64] */)
}

def @func_11594() -> (Tensor[(6, 14, 10), float32],) {
  %116 = @func_10875() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %117 = %116.0;
  (%117,)
}

def @func_17040() -> (Tensor[(11, 11, 12), float32], Tensor[(6, 14, 10), float32]) {
  %118 = @func_9558() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %119 = @func_15772() /* ty=Tensor[(11, 11, 12), float32] */;
  %120 = %118.0;
  (%119, %120)
}

def @func_19789(%var_19783: Tensor[(84, 20), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(154), float32], Tensor[(84, 20), float64]) {
  %121 = cast(meta[relay.Constant][11] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %122 = cast(%var_19783, dtype="float64") /* ty=Tensor[(84, 20), float64] */;
  %123 = reshape(%121, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %124 = reshape(%122, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %125 = @func_18524(%123, %124) /* ty=(Tensor[(256), float64], Tensor[(224), float32], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(6, 14, 10), float32]) */;
  %126 = @func_19008() /* ty=Tensor[(6, 14, 10), float32] */;
  %127 = %125.4;
  (%126, %127, meta[relay.Constant][11] /* ty=Tensor[(154), float32] */, %var_19783)
}

def @func_10900() -> Tensor[(42), float64] {
  %128 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %128.2
}

def @func_12947() -> Tensor[(6, 14, 10), float32] {
  %129 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %129.0
}

def @func_9558() -> (Tensor[(6, 14, 10), float32],) {
  %130 = @func_7825() /* ty=Tensor[(6, 14, 10), float32] */;
  (%130,)
}

def @func_9681(%var_9616: Tensor[(16, 4, 12), float64]) -> (Tensor[(16, 4, 12), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %131 = cast(%var_9616, dtype="float64") /* ty=Tensor[(16, 4, 12), float64] */;
  %132 = @func_9558() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %133 = atanh(%131) /* ty=Tensor[(16, 4, 12), float64] */;
  %134 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %135 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
  %136 = %132.0;
  (%133, %134, %135, %136)
}

def @func_14433() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %137 = @func_14398() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %138 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %139 = %137.0;
  (%138, %139)
}

def @func_13655() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %140 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %141 = @func_9611() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %142 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
  %143 = @func_12668() /* ty=Tensor[(6, 14, 10), float32] */;
  %144 = %140.0;
  %145 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %146 = %141.1;
  (%142, %143, %144, %145, %146)
}

def @func_13713(%var_13703: Tensor[(7, 10, 12), float32]) -> Tensor[(7, 10, 12), float32] {
  %147 = cast(%var_13703, dtype="float32") /* ty=Tensor[(7, 10, 12), float32] */;
  cosh(%147) /* ty=Tensor[(7, 10, 12), float32] */
}

def @func_13178() -> Tensor[(256), float64] {
  @func_12025() /* ty=Tensor[(256), float64] */
}

def @func_21365() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64]) {
  %148 = @func_21142() /* ty=(Tensor[(256), float64],) */;
  %149 = @func_18275() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %150 = @func_13278() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) */;
  %151 = %148.0;
  %152 = %149.0;
  %153 = %150.1;
  (%151, %152, %153)
}

def @func_7477(%var_7469: Tensor[(325), int64], %var_7470: Tensor[(768), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), bool], Tensor[(325), int64], Tensor[(768), float64]) {
  %154 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %155 = cast(%var_7469, dtype="int64") /* ty=Tensor[(325), int64] */;
  %156 = cast(%var_7470, dtype="float64") /* ty=Tensor[(768), float64] */;
  %157 = reshape(%155, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %158 = reshape(%156, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %159 = @func_1546(%157, %158) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %160 = %154.0;
  %161 = %159.3;
  (%160, %161, %var_7469, %var_7470)
}

def @func_5732(%var_5722: Tensor[(8, 16, 2), float64]) -> (Tensor[(8, 16, 2), float64], Tensor[(8, 16, 2), float64]) {
  %162 = cast(%var_5722, dtype="float64") /* ty=Tensor[(8, 16, 2), float64] */;
  %163 = cast(%var_5722, dtype="float64") /* ty=Tensor[(8, 16, 2), float64] */;
  %164 = acosh(%162) /* ty=Tensor[(8, 16, 2), float64] */;
  %165 = acos(%163) /* ty=Tensor[(8, 16, 2), float64] */;
  (%164, %165)
}

def @func_12765() -> Tensor[(6, 14, 10), float32] {
  %166 = @func_12552() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %166.1
}

def @func_14915() -> Tensor[(7, 11, 5), float64] {
  @func_14075() /* ty=Tensor[(7, 11, 5), float64] */
}

def @func_13407() -> (Tensor[(256), float64],) {
  %167 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
  %168 = %167.0;
  (%168,)
}

def @func_14934() -> (Tensor[(5, 16, 14), float32],) {
  %169 = @func_11755() /* ty=(Tensor[(5, 16, 14), float32],) */;
  %170 = %169.0;
  (%170,)
}

def @func_21853() -> (Tensor[(256), float64],) {
  %171 = @func_16984() /* ty=Tensor[(256), float64] */;
  (%171,)
}

def @func_17072(%var_17069: Tensor[(90), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64]) {
  %172 = @func_8964() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */;
  %173 = cast(%var_17069, dtype="float64") /* ty=Tensor[(90), float64] */;
  %174 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %175 = reshape(%173, newshape=[3, 30]) /* ty=Tensor[(3, 30), float64] */;
  %176 = reshape(%174, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %177 = @func_14039(%175, %176) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(60), float64]) */;
  %178 = %172.0;
  %179 = %177.5;
  (%178, %179, %var_17069, meta[relay.Constant][12] /* ty=Tensor[(60), float64] */)
}

def @func_17375() -> Tensor[(105), float64] {
  @func_16288() /* ty=Tensor[(105), float64] */
}

def @func_20189() -> (Tensor[(6, 14, 10), float32],) {
  %180 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %181 = %180.0;
  (%181,)
}

def @func_19751(%var_19699: Tensor[(216), float64]) -> (Tensor[(256), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %182 = @func_18010() /* ty=(Tensor[(256), float64], Tensor[(256), float64], Tensor[(256), float64]) */;
  %183 = @func_10530() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %184 = cast(%var_19699, dtype="float64") /* ty=Tensor[(216), float64] */;
  %185 = cast(meta[relay.Constant][13] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %186 = cast(meta[relay.Constant][14] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %187 = reshape(%184, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %188 = reshape(%185, newshape=[]) /* ty=uint32 */;
  %189 = reshape(%186, newshape=[35, 4]) /* ty=Tensor[(35, 4), uint32] */;
  %190 = @func_9900(%187, %188, %189) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
  %191 = @func_15449() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %192 = %182.2;
  %193 = %183.1;
  %194 = %190.2;
  %195 = %191.0;
  %196 = @func_19100() /* ty=Tensor[(256), float64] */;
  (%192, %193, %194, %var_19699, meta[relay.Constant][13] /* ty=uint32 */, meta[relay.Constant][14] /* ty=Tensor[(140), uint32] */, %195, %196)
}

def @func_9008() -> (Tensor[(6, 14, 10), float32],) {
  %197 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  (%197,)
}

def @func_12668() -> Tensor[(6, 14, 10), float32] {
  @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_20718() -> Tensor[(6, 14, 10), float32] {
  @func_15385() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_2222(%var_2209: uint32, %var_2210: Tensor[(1, 14, 10), uint32]) -> Tensor[(1, 14, 10), bool] {
  %198 = cast(%var_2209, dtype="bool") /* ty=bool */;
  %199 = cast(%var_2210, dtype="bool") /* ty=Tensor[(1, 14, 10), bool] */;
  not_equal(%198, %199) /* ty=Tensor[(1, 14, 10), bool] */
}

def @func_10530() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %200 = cast(meta[relay.Constant][15] /* ty=Tensor[(9), float32] */, dtype="float32") /* ty=Tensor[(9), float32] */;
  %201 = reshape(%200, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), float32] */;
  %202 = @func_5006(%201) /* ty=(Tensor[(1, 9, 1), float32],) */;
  %203 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %204 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %205 = @func_10357() /* ty=Tensor[(256), float64] */;
  %206 = %202.0;
  %207 = %203.0;
  %208 = @func_9502() /* ty=Tensor[(6, 14, 10), float32] */;
  (%204, %205, %206, meta[relay.Constant][15] /* ty=Tensor[(9), float32] */, %207, %208)
}

def @func_18581() -> Tensor[(6, 14, 10), float32] {
  %209 = @func_10530() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %209.0
}

def @func_11230() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) {
  %210 = cast(meta[relay.Constant][16] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %211 = cast(meta[relay.Constant][17] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %212 = reshape(%210, newshape=[325]) /* ty=Tensor[(325), int64] */;
  %213 = reshape(%211, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %214 = @func_7477(%212, %213) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), bool], Tensor[(325), int64], Tensor[(768), float64]) */;
  %215 = cast(meta[relay.Constant][17] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %216 = reshape(%215, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %217 = @func_7643(%216) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) */;
  %218 = cast(meta[relay.Constant][18] /* ty=Tensor[(35, 10), int32] */, dtype="int32") /* ty=Tensor[(35, 10), int32] */;
  %219 = cast(meta[relay.Constant][19] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %220 = reshape(%218, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
  %221 = reshape(%219, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %222 = @func_10942(%220, %221) /* ty=(Tensor[(5, 5, 14), int32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(42), float64]) */;
  %223 = @func_9502() /* ty=Tensor[(6, 14, 10), float32] */;
  %224 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
  %225 = %214.0;
  %226 = %217.1;
  %227 = %222.3;
  (%223, %224, %225, meta[relay.Constant][16] /* ty=Tensor[(325), int64] */, meta[relay.Constant][17] /* ty=Tensor[(768), float64] */, %226, %227, meta[relay.Constant][18] /* ty=Tensor[(35, 10), int32] */, meta[relay.Constant][19] /* ty=Tensor[(42), float64] */)
}

def @func_12552() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %228 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %229 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %230 = %228.0;
  %231 = %229.1;
  (%230, %231)
}

def @func_19401() -> (Tensor[(256), float64],) {
  %232 = @func_12025() /* ty=Tensor[(256), float64] */;
  (%232,)
}

def @func_9827() -> Tensor[(6, 14, 10), float32] {
  @func_9502() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_12177() -> Tensor[(6, 14, 10), float32] {
  %233 = @func_9008() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %233.0
}

def @func_16288() -> Tensor[(105), float64] {
  %234 = @func_8715() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(768), float32], Tensor[(105), float64], Tensor[(325), int64], Tensor[(6, 14, 10), float32]) */;
  %234.2
}

def @func_9727() -> (Tensor[(256), float64], Tensor[(8, 16, 2), float64]) {
  %235 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
  %236 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
  %237 = %235.2;
  %238 = %236.1;
  (%237, %238)
}

def @func_16123() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(840), float32]) {
  %239 = @func_15324() /* ty=(Tensor[(256), float64],) */;
  %240 = cast(meta[relay.Constant][20] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %241 = %239.0;
  %242 = cast(%241, dtype="float64") /* ty=Tensor[(256), float64] */;
  %243 = reshape(%240, newshape=[6, 14, 10]) /* ty=Tensor[(6, 14, 10), float32] */;
  %244 = reshape(%242, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %245 = @func_7795(%243, %244) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %246 = %245.0;
  (%241, %246, meta[relay.Constant][20] /* ty=Tensor[(840), float32] */)
}

def @func_16674() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %247 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %248 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %249 = %247.4;
  (%248, %249)
}

def @func_15324() -> (Tensor[(256), float64],) {
  %250 = @func_10357() /* ty=Tensor[(256), float64] */;
  (%250,)
}

def @func_14599(%var_14591: Tensor[(90), float64], %var_14592: Tensor[(60), float64]) -> (Tensor[(35, 10), int32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64]) {
  %251 = @func_13459() /* ty=(Tensor[(35, 10), int32],) */;
  %252 = cast(%var_14591, dtype="float64") /* ty=Tensor[(90), float64] */;
  %253 = cast(%var_14592, dtype="float64") /* ty=Tensor[(60), float64] */;
  %254 = reshape(%252, newshape=[3, 30]) /* ty=Tensor[(3, 30), float64] */;
  %255 = reshape(%253, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %256 = @func_14039(%254, %255) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(60), float64]) */;
  %257 = %251.0;
  %258 = %256.1;
  (%257, %258, %var_14591, %var_14592)
}

def @func_17317() -> Tensor[(6, 14, 10), float32] {
  %259 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %259.0
}

def @func_12717(%var_12706: Tensor[(60), float64]) -> (Tensor[(256), float64], Tensor[(45, 2), float64], Tensor[(60), float64], Tensor[(768), float64]) {
  %260 = cast(%var_12706, dtype="float64") /* ty=Tensor[(60), float64] */;
  %261 = reshape(%260, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %262 = @func_10234(%261) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) */;
  %263 = @func_11230() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) */;
  %264 = @func_10248() /* ty=Tensor[(256), float64] */;
  %265 = %262.2;
  %266 = %263.4;
  (%264, %265, %var_12706, %266)
}

def @func_9294() -> (Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) {
  %267 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %268 = cast(meta[relay.Constant][21] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %269 = reshape(%268, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %270 = @func_9089(%269) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %271 = %267.0;
  %272 = %270.2;
  (%271, %272, meta[relay.Constant][21] /* ty=Tensor[(42), float64] */)
}

def @func_13782(%var_13744: Tensor[(1, 9), float32], %var_13745: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(1, 9), float32], Tensor[(256), float64]) {
  %273 = cast(%var_13744, dtype="float32") /* ty=Tensor[(1, 9), float32] */;
  %274 = cast(%var_13745, dtype="float64") /* ty=Tensor[(256), float64] */;
  %275 = reshape(%273, newshape=[9]) /* ty=Tensor[(9), float32] */;
  %276 = reshape(%274, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %277 = @func_8328(%275, %276) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float32], Tensor[(768), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(256), float64]) */;
  %278 = @func_12947() /* ty=Tensor[(6, 14, 10), float32] */;
  %279 = %277.4;
  (%278, %279, %var_13744, %var_13745)
}

def @func_20272(%var_20260: Tensor[(105), float64], %var_20261: Tensor[(325, 1), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325, 105), bool], Tensor[(256), float64]) {
  %280 = @func_16363() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %281 = cast(%var_20260, dtype="float64") /* ty=Tensor[(105), float64] */;
  %282 = cast(%var_20261, dtype="int64") /* ty=Tensor[(325, 1), int64] */;
  %283 = reshape(%281, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %284 = reshape(%282, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %285 = @func_6947(%283, %284) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) */;
  %286 = cast(%var_20260, dtype="bool") /* ty=Tensor[(105), bool] */;
  %287 = cast(%var_20261, dtype="bool") /* ty=Tensor[(325, 1), bool] */;
  %288 = @func_11710() /* ty=(Tensor[(256), float64],) */;
  %289 = %280.1;
  %290 = %285.0;
  %291 = less_equal(%286, %287) /* ty=Tensor[(325, 105), bool] */;
  %292 = %288.0;
  (%289, %290, %291, %292)
}

def @func_7111() -> (Tensor[(256), float64], Tensor[(4, 16, 4), float64]) {
  %293 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
  %294 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
  %295 = %294.1;
  %296 = cast(%295, dtype="float64") /* ty=Tensor[(4, 16, 4), float64] */;
  %297 = %293.2;
  %298 = cosh(%296) /* ty=Tensor[(4, 16, 4), float64] */;
  (%297, %298)
}

def @func_13459() -> (Tensor[(35, 10), int32],) {
  %299 = @func_11230() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) */;
  %300 = %299.7;
  (%300,)
}

def @func_16211(%var_16201: Tensor[(1680), float64], %var_16209: Tensor[(216), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], uint32, Tensor[(216), float64]) {
  %301 = @func_10113() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %302 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
  %303 = cast(%var_16201, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %304 = reshape(%303, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %305 = @func_4363(%304) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) */;
  %306 = cast(%var_16209, dtype="float64") /* ty=Tensor[(216), float64] */;
  %307 = reshape(%306, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %308 = @func_10841(%307) /* ty=(uint32, Tensor[(216), float64], Tensor[(216), float64], Tensor[(140), uint32]) */;
  %309 = %301.0;
  %310 = %302.1;
  %311 = %305.1;
  %312 = %308.0;
  (%309, %310, %311, %var_16201, %312, %var_16209)
}

def @func_19923(%var_19903: Tensor[(64, 12), float64]) -> (Tensor[(105), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(64, 12), float64], Tensor[(?, 11, 7), bool], Tensor[(7, 10, 12), float32]) {
  %313 = cast(%var_19903, dtype="float64") /* ty=Tensor[(64, 12), float64] */;
  %314 = reshape(%313, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %315 = @func_7643(%314) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) */;
  %316 = cast(meta[relay.Constant][22] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %317 = reshape(%316, newshape=[1, 11, 7]) /* ty=Tensor[(1, 11, 7), float32] */;
  %318 = @func_10600(%317) /* ty=(Tensor[(1, 11, 7), float32],) */;
  %319 = %318.0;
  %320 = cast(meta[relay.Constant][22] /* ty=Tensor[(77), float32] */, dtype="bool") /* ty=Tensor[(77), bool] */;
  %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%319, dtype="bool") /* ty=Tensor[(1, 11, 7), bool] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %324 = @func_16705() /* ty=Tensor[(6, 14, 10), float32] */;
  %325 = cast(%324, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %326 = reshape(%325, newshape=[7, 10, 12]) /* ty=Tensor[(7, 10, 12), float32] */;
  %327 = @func_17375() /* ty=Tensor[(105), float64] */;
  %328 = @func_19100() /* ty=Tensor[(256), float64] */;
  %329 = %315.6;
  %330 = logical_and(%322, %323) /* ty=Tensor[(?, 11, 7), bool] */;
  %331 = @func_13713(%326) /* ty=Tensor[(7, 10, 12), float32] */;
  (%327, %328, %324, %329, %var_19903, %330, %331)
}

def @func_7741() -> Tensor[(6, 14, 10), float32] {
  @func_7345() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_17818(%var_17809: Tensor[(5, 10, 7), float32]) -> Tensor[(5, 10, 7), float32] {
  %332 = cast(%var_17809, dtype="float32") /* ty=Tensor[(5, 10, 7), float32] */;
  cosh(%332) /* ty=Tensor[(5, 10, 7), float32] */
}

def @func_15197() -> Tensor[(7, 11, 5), float64] {
  %333 = @func_14915() /* ty=Tensor[(7, 11, 5), float64] */;
  %334 = cast(%333, dtype="float64") /* ty=Tensor[(7, 11, 5), float64] */;
  erf(%334) /* ty=Tensor[(7, 11, 5), float64] */
}

def @func_22146() -> (Tensor[(6, 14, 10), float32],) {
  %335 = @func_21503() /* ty=Tensor[(6, 14, 10), float32] */;
  (%335,)
}

def @func_5698(%var_5692: Tensor[(2, 15, 3), float64], %var_5693: Tensor[(2, 15, 3), float64]) -> (Tensor[(2, 15, 3), bool],) {
  %336 = cast(%var_5693, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %337 = shape_of(%var_5692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%var_5692, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %340 = equal(%338, %339) /* ty=Tensor[(2, 15, 3), bool] */;
  (%340,)
}

def @func_21750() -> Tensor[(6, 14, 10), float32] {
  %341 = @func_8835() /* ty=(Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) */;
  %341.0
}

def @func_5006(%var_5002: Tensor[(1, 9, 1), float32]) -> (Tensor[(1, 9, 1), float32],) {
  %342 = cast(%var_5002, dtype="float32") /* ty=Tensor[(1, 9, 1), float32] */;
  %343 = acosh(%342) /* ty=Tensor[(1, 9, 1), float32] */;
  (%343,)
}

def @func_16896() -> Tensor[(256), float64] {
  %344 = @func_16439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %344.1
}

def @func_7428(%var_7425: Tensor[(4, 8, 3), float64]) -> (Tensor[(4, 8, 3), float64],) {
  %345 = cast(%var_7425, dtype="float64") /* ty=Tensor[(4, 8, 3), float64] */;
  %346 = atan(%345) /* ty=Tensor[(4, 8, 3), float64] */;
  (%346,)
}

def @func_12600(%var_12578: Tensor[(6, 14, 10), float32]) -> (Tensor[(6, 14, 10), uint16], int64, Tensor[(42), uint16]) {
  %347 = @func_11370() /* ty=Tensor[(6, 14, 10), float32] */;
  %348 = cast(%var_12578, dtype="uint16") /* ty=Tensor[(6, 14, 10), uint16] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="uint16") /* ty=Tensor[(6, 14, 10), uint16] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %352 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %353 = cast(meta[relay.Constant][23] /* ty=Tensor[(42), int64] */, dtype="int64") /* ty=Tensor[(42), int64] */;
  %354 = reshape(%352, newshape=[]) /* ty=int64 */;
  %355 = reshape(%353, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), int64] */;
  %356 = @func_11144(%354, %355) /* ty=(Tensor[(1, 14, 3), int64],) */;
  %357 = %356.0;
  %358 = cast(%357, dtype="uint16") /* ty=Tensor[(1, 14, 3), uint16] */;
  %359 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(42), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %360 = cast(meta[relay.Constant][23] /* ty=Tensor[(42), int64] */, dtype="uint16") /* ty=Tensor[(42), uint16] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %362 = bitwise_and(%350, %351) /* ty=Tensor[(6, 14, 10), uint16] */;
  %363 = subtract(%360, %361) /* ty=Tensor[(42), uint16] */;
  (%362, 4 /* ty=int64 */, %363)
}

def @func_9089(%var_9078: Tensor[(42), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64]) {
  %364 = @func_8870() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %365 = cast(meta[relay.Constant][24] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %366 = cast(%var_9078, dtype="float64") /* ty=Tensor[(42), float64] */;
  %367 = reshape(%365, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %368 = reshape(%366, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %369 = @func_2959(%367, %368) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %370 = %364.0;
  %371 = %369.0;
  (%370, %371, meta[relay.Constant][24] /* ty=Tensor[(224), float32] */, %var_9078)
}

def @func_20622() -> (Tensor[(6, 14, 10), float32],) {
  %372 = @func_8633() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %373 = %372.2;
  (%373,)
}

def @func_15380() -> (Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 10, 12), float32], Tensor[(7, 10, 12), float32]) {
  %374 = @func_14934() /* ty=(Tensor[(5, 16, 14), float32],) */;
  %375 = @func_9008() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %376 = %375.0;
  %377 = cast(%376, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %378 = reshape(%377, newshape=[7, 10, 12]) /* ty=Tensor[(7, 10, 12), float32] */;
  %379 = cast(%376, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %380 = reshape(%379, newshape=[7, 10, 12]) /* ty=Tensor[(7, 10, 12), float32] */;
  %381 = %374.0;
  %382 = @func_13713(%378) /* ty=Tensor[(7, 10, 12), float32] */;
  %383 = @func_13713(%380) /* ty=Tensor[(7, 10, 12), float32] */;
  (%381, %376, %382, %383)
}

def @func_14075() -> Tensor[(7, 11, 5), float64] {
  %384 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 5), float64] */;
  rsqrt(%384) /* ty=Tensor[(7, 11, 5), float64] */
}

def @func_14770(%var_14744: float32, %var_14745: Tensor[(2, 1, 6), float32]) -> (Tensor[(2, 1, 6), uint64],) {
  %385 = cast(%var_14744, dtype="bool") /* ty=bool */;
  %386 = cast(%var_14745, dtype="bool") /* ty=Tensor[(2, 1, 6), bool] */;
  %387 = less_equal(%385, %386) /* ty=Tensor[(2, 1, 6), bool] */;
  %388 = cast(%387, dtype="uint64") /* ty=Tensor[(2, 1, 6), uint64] */;
  %389 = cast(%var_14744, dtype="uint64") /* ty=uint64 */;
  %390 = right_shift(%388, %389) /* ty=Tensor[(2, 1, 6), uint64] */;
  (%390,)
}

def @func_15340() -> Tensor[(6, 14, 10), float32] {
  %391 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %391.0
}

def @func_16439() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %392 = @func_12268() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %393 = @func_15324() /* ty=(Tensor[(256), float64],) */;
  %394 = @func_13360() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %395 = @func_11326() /* ty=(Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */;
  %396 = %392.0;
  %397 = %393.0;
  %398 = %394.0;
  %399 = @func_10813() /* ty=Tensor[(6, 14, 10), float32] */;
  %400 = %395.2;
  (%396, %397, %398, %399, %400)
}

def @func_12069() -> Tensor[(6, 14, 10), float32] {
  %401 = @func_10530() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %401.4
}

def @func_18657() -> (Tensor[(6, 14, 10), float32],) {
  %402 = @func_14210() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %403 = %402.0;
  (%403,)
}

def @func_16066(%var_16014: Tensor[(6, 14, 10), float32], %var_16020: Tensor[(1, 60), float64], %var_16027: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), bool], Tensor[(256), float64], Tensor[(1, 60), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32]) {
  %404 = @func_9379() /* ty=Tensor[(6, 14, 10), float32] */;
  %405 = cast(%var_16014, dtype="bool") /* ty=Tensor[(6, 14, 10), bool] */;
  %406 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%404, dtype="bool") /* ty=Tensor[(6, 14, 10), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %409 = cast(%var_16020, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %410 = reshape(%409, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %411 = @func_12717(%410) /* ty=(Tensor[(256), float64], Tensor[(45, 2), float64], Tensor[(60), float64], Tensor[(768), float64]) */;
  %412 = cast(meta[relay.Constant][26] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %413 = cast(%var_16027, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %414 = reshape(%412, newshape=[]) /* ty=uint32 */;
  %415 = reshape(%413, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
  %416 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %417 = cast(meta[relay.Constant][27] /* ty=Tensor[(9), float32] */, dtype="float32") /* ty=Tensor[(9), float32] */;
  %418 = reshape(%417, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), float32] */;
  %419 = @func_5006(%418) /* ty=(Tensor[(1, 9, 1), float32],) */;
  %420 = logical_or(%407, %408) /* ty=Tensor[(6, 14, 10), bool] */;
  %421 = %411.0;
  %422 = @func_2222(%414, %415) /* ty=Tensor[(1, 14, 10), bool] */;
  %423 = %416.0;
  %424 = %419.0;
  %425 = @func_10430() /* ty=Tensor[(6, 14, 10), float32] */;
  (%420, %421, %var_16020, %422, meta[relay.Constant][26] /* ty=uint32 */, %var_16027, %423, %424, meta[relay.Constant][27] /* ty=Tensor[(9), float32] */, %425)
}

def @func_18010() -> (Tensor[(256), float64], Tensor[(256), float64], Tensor[(256), float64]) {
  %426 = @func_11067() /* ty=(Tensor[(256), float64],) */;
  %427 = @func_13482() /* ty=Tensor[(256), float64] */;
  %428 = %426.0;
  %429 = @func_16984() /* ty=Tensor[(256), float64] */;
  (%427, %428, %429)
}

def @main() -> (Tensor[(3, 12, 13), float32],) {
  %430 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 13), float32] */;
  %431 = log2(%430) /* ty=Tensor[(3, 12, 13), float32] */;
  (%431,)
}

def @func_16595() -> (Tensor[(6, 14, 10), float32],) {
  %432 = @func_11594() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %433 = %432.0;
  (%433,)
}

def @func_5662(%var_5653: Tensor[(4, 16, 4), float64]) -> Tensor[(4, 16, 4), float64] {
  %434 = cast(%var_5653, dtype="float64") /* ty=Tensor[(4, 16, 4), float64] */;
  sigmoid(%434) /* ty=Tensor[(4, 16, 4), float64] */
}

def @func_22402() -> (Tensor[(6, 14, 10), float32],) {
  %435 = @func_16363() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %436 = %435.2;
  (%436,)
}

def @func_12049() -> Tensor[(6, 14, 10), float32] {
  @func_7825() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_12013() -> Tensor[(256), float64] {
  %437 = @func_11710() /* ty=(Tensor[(256), float64],) */;
  %437.0
}

def @func_11755() -> (Tensor[(5, 16, 14), float32],) {
  %438 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 16, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 14), float32] */;
  %439 = log(%438) /* ty=Tensor[(5, 16, 14), float32] */;
  (%439,)
}

def @func_11370() -> Tensor[(6, 14, 10), float32] {
  %440 = @func_10875() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %440.0
}

def @func_18563() -> (Tensor[(6, 14, 10), float32],) {
  %441 = @func_17675() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %442 = %441.0;
  (%442,)
}

def @func_11326() -> (Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) {
  %443 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %444 = %443.0;
  %445 = cast(%444, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
  %446 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 14, 10), float32] */, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
  %447 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%444, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %450 = sin(%445) /* ty=Tensor[(6, 14, 10), float64] */;
  %451 = divide(%448, %449) /* ty=Tensor[(6, 14, 10), float64] */;
  %452 = @func_7729() /* ty=Tensor[(6, 14, 10), float32] */;
  (%450, %451, %452)
}

def @func_18044() -> Tensor[(6, 14, 10), float32] {
  %453 = @func_17748() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64]) */;
  %453.1
}

def @func_21412() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %454 = @func_19008() /* ty=Tensor[(6, 14, 10), float32] */;
  %455 = @func_21028() /* ty=Tensor[(6, 14, 10), float32] */;
  %456 = @func_16815() /* ty=Tensor[(256), float64] */;
  (%454, %455, %456)
}

def @func_14039(%var_14021: Tensor[(3, 30), float64], %var_14036: Tensor[(60), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(60), float64]) {
  %457 = @func_11039() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %458 = cast(%var_14021, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %459 = cast(%var_14021, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %460 = reshape(%458, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %461 = reshape(%459, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %462 = @func_5698(%460, %461) /* ty=(Tensor[(2, 15, 3), bool],) */;
  %463 = @func_10530() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %464 = cast(%var_14036, dtype="float64") /* ty=Tensor[(60), float64] */;
  %465 = reshape(%464, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %466 = @func_10234(%465) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) */;
  %467 = %457.1;
  %468 = %462.0;
  %469 = %463.5;
  %470 = %466.1;
  (%467, %468, %var_14021, %469, %470, %var_14036)
}

def @func_17468() -> (Tensor[(256), float64],) {
  %471 = @func_13857() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
  %472 = %471.1;
  (%472,)
}

def @func_10774(%var_10729: Tensor[(60), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(5, 3, 4), float32]) {
  %473 = cast(%var_10729, dtype="float64") /* ty=Tensor[(60), float64] */;
  %474 = reshape(%473, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %475 = @func_10234(%474) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) */;
  %476 = %475.0;
  %477 = cast(%476, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %478 = rsqrt(%477) /* ty=Tensor[(5, 3, 4), float64] */;
  %479 = cast(%476, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %483 = not_equal(%481, %482) /* ty=Tensor[(5, 3, 4), bool] */;
  %484 = cast(%476, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
  %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%483, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %488 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
  %489 = divide(%486, %487) /* ty=Tensor[(5, 3, 4), float32] */;
  (%488, %var_10729, %489)
}

def @func_11882() -> Tensor[(6, 14, 10), float32] {
  @func_10813() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_7969(%var_7966: uint32, %var_7967: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) {
  %490 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %491 = %490.0;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
  %493 = cast(%var_7966, dtype="uint32") /* ty=uint32 */;
  %494 = cast(%var_7967, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %495 = reshape(%493, newshape=[]) /* ty=uint32 */;
  %496 = reshape(%494, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
  %497 = sinh(%492) /* ty=Tensor[(6, 14, 10), float64] */;
  %498 = @func_2222(%495, %496) /* ty=Tensor[(1, 14, 10), bool] */;
  (%497, %498, %var_7966, %var_7967)
}

def @func_14105(%var_14099: Tensor[(5, 4, 11), float64]) -> (Tensor[(5, 4, 11), float64], Tensor[(7, 11, 5), float64]) {
  %499 = cast(%var_14099, dtype="float64") /* ty=Tensor[(5, 4, 11), float64] */;
  %500 = asin(%499) /* ty=Tensor[(5, 4, 11), float64] */;
  %501 = @func_14075() /* ty=Tensor[(7, 11, 5), float64] */;
  (%500, %501)
}

def @func_14474() -> Tensor[(6, 14, 10), float32] {
  @func_11927() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_21891(%var_21876: Tensor[(7, 10, 12), float32]) -> (Tensor[(7, 10, 12), uint8], Tensor[(7, 10, 12), float32]) {
  %502 = @func_15380() /* ty=(Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 10, 12), float32], Tensor[(7, 10, 12), float32]) */;
  %503 = %502.2;
  %504 = cast(%var_21876, dtype="uint8") /* ty=Tensor[(7, 10, 12), uint8] */;
  %505 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%503, dtype="uint8") /* ty=Tensor[(7, 10, 12), uint8] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %508 = cast(%503, dtype="float32") /* ty=Tensor[(7, 10, 12), float32] */;
  %509 = add(%506, %507) /* ty=Tensor[(7, 10, 12), uint8] */;
  %510 = erf(%508) /* ty=Tensor[(7, 10, 12), float32] */;
  (%509, %510)
}

def @func_16815() -> Tensor[(256), float64] {
  @func_13178() /* ty=Tensor[(256), float64] */
}

def @func_10090(%var_10046: Tensor[(42), float64], %var_10057: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float64], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) {
  %511 = @func_8870() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %512 = %511.0;
  %513 = cast(%512, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
  %514 = cast(meta[relay.Constant][31] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %515 = cast(%var_10046, dtype="float64") /* ty=Tensor[(42), float64] */;
  %516 = reshape(%514, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %517 = reshape(%515, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %518 = @func_2959(%516, %517) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %519 = cast(meta[relay.Constant][32] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %520 = cast(%var_10057, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %521 = reshape(%519, newshape=[]) /* ty=uint32 */;
  %522 = reshape(%520, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
  %523 = cos(%513) /* ty=Tensor[(6, 14, 10), float64] */;
  %524 = %518.0;
  %525 = @func_2222(%521, %522) /* ty=Tensor[(1, 14, 10), bool] */;
  (%523, %524, meta[relay.Constant][31] /* ty=Tensor[(224), float32] */, %var_10046, %525, meta[relay.Constant][32] /* ty=uint32 */, %var_10057)
}

def @func_20070(%var_20060: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float32], Tensor[(140), uint32], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32]) {
  %526 = cast(meta[relay.Constant][33] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %527 = cast(%var_20060, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %528 = reshape(%526, newshape=[]) /* ty=uint32 */;
  %529 = reshape(%527, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %530 = @func_7969(%528, %529) /* ty=(Tensor[(6, 14, 10), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) */;
  %531 = @func_9469() /* ty=Tensor[(6, 14, 10), float32] */;
  %532 = %530.3;
  %533 = @func_15105() /* ty=Tensor[(6, 14, 10), float32] */;
  (%531, %532, meta[relay.Constant][33] /* ty=uint32 */, %var_20060, %533)
}

def @func_17675() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %534 = @func_16439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %535 = %534.2;
  %536 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
  (%535, %536)
}

def @func_6714(%var_6700: uint32) -> (Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], Tensor[(14, 5, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(1, 14, 10), bool], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) {
  %537 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 30), float64] */, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %538 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 30), float64] */, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %539 = reshape(%537, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %540 = reshape(%538, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %541 = @func_5698(%539, %540) /* ty=(Tensor[(2, 15, 3), bool],) */;
  %542 = cast(meta[relay.Constant][35] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %543 = reshape(%542, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %544 = @func_4363(%543) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) */;
  %545 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 5), float32] */;
  %546 = cosh(%545) /* ty=Tensor[(14, 5, 5), float32] */;
  %547 = cast(%546, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %548 = cast(%546, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %549 = cast(meta[relay.Constant][37] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %550 = cast(meta[relay.Constant][37] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %551 = cast(meta[relay.Constant][38] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %552 = cast(%var_6700, dtype="uint32") /* ty=uint32 */;
  %553 = cast(meta[relay.Constant][39] /* ty=Tensor[(35, 4), uint32] */, dtype="uint32") /* ty=Tensor[(35, 4), uint32] */;
  %554 = reshape(%549, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %555 = reshape(%550, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %556 = reshape(%551, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %557 = reshape(%552, newshape=[]) /* ty=uint32 */;
  %558 = reshape(%553, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %559 = @func_2482(%554, %555, %556, %557, %558) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %560 = %541.0;
  %561 = %544.1;
  %562 = log(%547) /* ty=Tensor[(14, 5, 5), float64] */;
  %563 = acos(%548) /* ty=Tensor[(14, 5, 5), float64] */;
  %564 = %559.9;
  (%560, meta[relay.Constant][34] /* ty=Tensor[(3, 30), float64] */, %561, meta[relay.Constant][35] /* ty=Tensor[(1680), float64] */, %562, %563, %564, meta[relay.Constant][37] /* ty=Tensor[(216), float64] */, meta[relay.Constant][38] /* ty=Tensor[(325), int64] */, %var_6700, meta[relay.Constant][39] /* ty=Tensor[(35, 4), uint32] */)
}

def @func_16091() -> (Tensor[(42), float64],) {
  %565 = @func_10900() /* ty=Tensor[(42), float64] */;
  (%565,)
}

def @func_18524(%var_18517: Tensor[(154), float32], %var_18518: Tensor[(1680), float64]) -> (Tensor[(256), float64], Tensor[(224), float32], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(6, 14, 10), float32]) {
  %566 = cast(%var_18517, dtype="float32") /* ty=Tensor[(154), float32] */;
  %567 = cast(%var_18518, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %568 = @func_13178() /* ty=Tensor[(256), float64] */;
  %569 = cast(%568, dtype="float64") /* ty=Tensor[(256), float64] */;
  %570 = reshape(%566, newshape=[2, 7, 11]) /* ty=Tensor[(2, 7, 11), float32] */;
  %571 = reshape(%567, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %572 = reshape(%569, newshape=[256, 1]) /* ty=Tensor[(256, 1), float64] */;
  %573 = @func_6828(%570, %571, %572) /* ty=(Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) */;
  %574 = @func_16439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %575 = %573.2;
  %576 = %574.3;
  (%568, %575, %var_18517, %var_18518, %576)
}

def @func_6947(%var_6934: Tensor[(105), float64], %var_6942: Tensor[(325, 1), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) {
  %577 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %578 = cast(%var_6934, dtype="float64") /* ty=Tensor[(105), float64] */;
  %579 = cast(meta[relay.Constant][40] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %580 = reshape(%578, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float64] */;
  %581 = reshape(%579, newshape=[32, 24]) /* ty=Tensor[(32, 24), float32] */;
  %582 = @func_1630(%580, %581) /* ty=(Tensor[(3, 7, 5), float64], Tensor[(4, 16, 12), float64], Tensor[(32, 24), float32], Tensor[(192, 4), float32], Tensor[(325), int64]) */;
  %583 = cast(%var_6942, dtype="int64") /* ty=Tensor[(325, 1), int64] */;
  %584 = cast(meta[relay.Constant][40] /* ty=Tensor[(768), float32] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %585 = reshape(%583, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %586 = reshape(%584, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %587 = @func_1546(%585, %586) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %588 = %577.0;
  %589 = %582.0;
  %590 = %587.0;
  (%588, %589, %var_6934, meta[relay.Constant][40] /* ty=Tensor[(768), float32] */, %590, %var_6942)
}

def @func_16386() -> (Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(6, 14, 10), float32]) {
  %591 = @func_16363() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %592 = @func_16091() /* ty=(Tensor[(42), float64],) */;
  %593 = @func_14814() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %594 = %591.2;
  %595 = %592.0;
  %596 = %593.0;
  (%594, %595, %596)
}

def @func_9502() -> Tensor[(6, 14, 10), float32] {
  @func_7410() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_16363() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %597 = @func_9611() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %598 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %599 = @func_9353() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %600 = %597.1;
  %601 = %598.0;
  %602 = %599.0;
  (%600, %601, %602)
}

def @func_19489() -> (Tensor[(6, 14, 10), float32], Tensor[(1680), float64]) {
  %603 = @func_8633() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %604 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %605 = %603.0;
  %606 = %604.3;
  (%605, %606)
}

def @func_20129() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %607 = @func_10655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) */;
  %608 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %609 = %607.1;
  (%608, %609)
}

def @func_10655() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) {
  %610 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %611 = @func_10113() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %612 = cast(meta[relay.Constant][41] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
  %613 = cast(meta[relay.Constant][42] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %614 = reshape(%612, newshape=[6, 16, 13]) /* ty=Tensor[(6, 16, 13), float64] */;
  %615 = reshape(%613, newshape=[]) /* ty=uint32 */;
  %616 = @func_10577(%614, %615) /* ty=(Tensor[(6, 16, 13), float64], Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32]) */;
  %617 = %610.0;
  %618 = %611.0;
  %619 = %616.5;
  (%617, %618, %619, meta[relay.Constant][41] /* ty=Tensor[(1248), float64] */, meta[relay.Constant][42] /* ty=uint32 */)
}

def @func_12268() -> (Tensor[(6, 14, 10), float32],) {
  %620 = @func_11230() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) */;
  %621 = %620.0;
  (%621,)
}

def @func_12159() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %622 = @func_9558() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %623 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %624 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %625 = %622.0;
  %626 = %623.1;
  (%624, %625, %626)
}

def @func_14814() -> (Tensor[(6, 14, 10), float32],) {
  %627 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %628 = %627.0;
  (%628,)
}

def @func_13360() -> (Tensor[(6, 14, 10), float32],) {
  %629 = @func_12904() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %630 = %629.1;
  (%630,)
}

def @func_14294() -> Tensor[(6, 14, 10), float32] {
  @func_13945() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_11021() -> (Tensor[(6, 14, 10), float32], Tensor[(224), float32]) {
  %631 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %632 = @func_9379() /* ty=Tensor[(6, 14, 10), float32] */;
  %633 = %631.1;
  (%632, %633)
}

def @func_13857() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %634 = @func_9008() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %635 = @func_11710() /* ty=(Tensor[(256), float64],) */;
  %636 = %634.0;
  %637 = %635.0;
  (%636, %637)
}

def @func_19829() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %638 = @func_11872() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %639 = @func_9611() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %640 = @func_12503() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %641 = %638.0;
  %642 = %639.0;
  %643 = %640.0;
  %644 = @func_18044() /* ty=Tensor[(6, 14, 10), float32] */;
  (%641, %642, %643, %644)
}

def @func_8835() -> (Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) {
  %645 = cast(meta[relay.Constant][43] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %646 = cast(meta[relay.Constant][44] /* ty=Tensor[(70, 2), uint32] */, dtype="uint32") /* ty=Tensor[(70, 2), uint32] */;
  %647 = reshape(%645, newshape=[]) /* ty=uint32 */;
  %648 = reshape(%646, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %649 = @func_7969(%647, %648) /* ty=(Tensor[(6, 14, 10), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) */;
  %650 = @func_7729() /* ty=Tensor[(6, 14, 10), float32] */;
  %651 = %649.2;
  (%650, %651, meta[relay.Constant][43] /* ty=uint32 */, meta[relay.Constant][44] /* ty=Tensor[(70, 2), uint32] */)
}

def @func_18642() -> (Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) {
  %652 = @func_16483() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) */;
  %653 = @func_7741() /* ty=Tensor[(6, 14, 10), float32] */;
  %654 = %652.2;
  (%653, %654)
}

def @func_18114() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %655 = @func_14814() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %656 = @func_16896() /* ty=Tensor[(256), float64] */;
  %657 = %655.0;
  %658 = @func_17317() /* ty=Tensor[(6, 14, 10), float32] */;
  (%656, %657, %658)
}

def @func_14210() -> (Tensor[(6, 14, 10), float32],) {
  %659 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %660 = %659.0;
  (%660,)
}

def @func_10248() -> Tensor[(256), float64] {
  %661 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
  %661.0
}

def @func_15059() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(35, 10), int32], Tensor[(77), float32], Tensor[(7, 11, 5), float64]) {
  %662 = cast(meta[relay.Constant][45] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %663 = reshape(%662, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %664 = @func_14313(%663) /* ty=(Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) */;
  %665 = @func_13178() /* ty=Tensor[(256), float64] */;
  %666 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %667 = %664.0;
  %668 = @func_14075() /* ty=Tensor[(7, 11, 5), float64] */;
  (%665, %666, %667, meta[relay.Constant][45] /* ty=Tensor[(77), float32] */, %668)
}

def @func_21253() -> Tensor[(6, 14, 10), float32] {
  @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_19310() -> Tensor[(6, 14, 10), float32] {
  @func_11370() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_13880(%var_13864: Tensor[(8, 12, 5), uint64]) -> (Tensor[(8, 12, 5), bool],) {
  %669 = cast(%var_13864, dtype="bool") /* ty=Tensor[(8, 12, 5), bool] */;
  %670 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(8, 12, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 12, 5), uint64] */, dtype="bool") /* ty=Tensor[(8, 12, 5), bool] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %673 = less_equal(%671, %672) /* ty=Tensor[(8, 12, 5), bool] */;
  (%673,)
}

def @func_18720() -> Tensor[(4, 16, 4), float64] {
  %674 = @func_13013() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 16, 4), float64]) */;
  %674.2
}

def @func_8046(%var_8026: Tensor[(3, 3), float32], %var_8038: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %675 = cast(%var_8026, dtype="float32") /* ty=Tensor[(3, 3), float32] */;
  %676 = reshape(%675, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), float32] */;
  %677 = @func_5006(%676) /* ty=(Tensor[(1, 9, 1), float32],) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="float32") /* ty=Tensor[(1, 9, 1), float32] */;
  %680 = reshape(%679, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), float32] */;
  %681 = @func_5006(%680) /* ty=(Tensor[(1, 9, 1), float32],) */;
  %682 = cast(meta[relay.Constant][47] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %683 = cast(meta[relay.Constant][48] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %684 = cast(%var_8038, dtype="float64") /* ty=Tensor[(256), float64] */;
  %685 = reshape(%682, newshape=[2, 7, 11]) /* ty=Tensor[(2, 7, 11), float32] */;
  %686 = reshape(%683, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %687 = reshape(%684, newshape=[256, 1]) /* ty=Tensor[(256, 1), float64] */;
  %688 = @func_6828(%685, %686, %687) /* ty=(Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) */;
  %689 = @func_7741() /* ty=Tensor[(6, 14, 10), float32] */;
  %690 = %681.0;
  %691 = %688.4;
  %692 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %693 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  (%689, %678, %var_8026, %690, %691, meta[relay.Constant][47] /* ty=Tensor[(154), float32] */, meta[relay.Constant][48] /* ty=Tensor[(1680), float64] */, %var_8038, %692, %693)
}

def @func_19008() -> Tensor[(6, 14, 10), float32] {
  @func_12765() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_8964() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) {
  %694 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
  %695 = %694.0;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
  %697 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %698 = @func_7729() /* ty=Tensor[(6, 14, 10), float32] */;
  %699 = exp(%696) /* ty=Tensor[(6, 14, 10), float64] */;
  %700 = %697.0;
  (%698, %699, %700)
}

def @func_15449() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %701 = @func_9008() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %702 = %701.0;
  %703 = @func_13918() /* ty=Tensor[(6, 14, 10), float32] */;
  (%702, %703)
}

def @func_13482() -> Tensor[(256), float64] {
  @func_12013() /* ty=Tensor[(256), float64] */
}

def @func_2959(%var_2934: Tensor[(14, 16, 1), float32], %var_2941: Tensor[(42), float64]) -> (Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) {
  %704 = cast(%var_2934, dtype="float32") /* ty=Tensor[(14, 16, 1), float32] */;
  %705 = cast(%var_2941, dtype="float64") /* ty=Tensor[(42), float64] */;
  %706 = reshape(%705, newshape=[1, 6, 7]) /* ty=Tensor[(1, 6, 7), float64] */;
  %707 = asin(%704) /* ty=Tensor[(14, 16, 1), float32] */;
  %708 = @func_1857(%706) /* ty=Tensor[(1, 6, 7), float64] */;
  (%707, %708, %var_2941)
}

def @func_7410() -> Tensor[(6, 14, 10), float32] {
  @func_7345() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_7392() -> (Tensor[(6, 14, 10), float32],) {
  %709 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %710 = %709.0;
  (%710,)
}

def @func_14878(%var_14868: Tensor[(6, 1, 15), float32]) -> (Tensor[(6, ?, 15), int64], Tensor[(6, 1, 15), float64]) {
  %711 = cast(%var_14868, dtype="float32") /* ty=Tensor[(6, 1, 15), float32] */;
  %712 = cos(%711) /* ty=Tensor[(6, 1, 15), float32] */;
  %713 = cast(%var_14868, dtype="int64") /* ty=Tensor[(6, 1, 15), int64] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%712, dtype="int64") /* ty=Tensor[(6, 1, 15), int64] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %717 = cast(%712, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %718 = maximum(%715, %716) /* ty=Tensor[(6, ?, 15), int64] */;
  %719 = log10(%717) /* ty=Tensor[(6, 1, 15), float64] */;
  (%718, %719)
}

def @func_12401() -> Tensor[(6, 14, 10), float32] {
  %720 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %720.0
}

def @func_8328(%var_8319: Tensor[(9), float32], %var_8320: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float32], Tensor[(768), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(256), float64]) {
  %721 = cast(meta[relay.Constant][49] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %722 = reshape(%721, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %723 = @func_122(%722) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %724 = cast(%var_8319, dtype="float32") /* ty=Tensor[(9), float32] */;
  %725 = cast(%var_8320, dtype="float64") /* ty=Tensor[(256), float64] */;
  %726 = reshape(%724, newshape=[3, 3]) /* ty=Tensor[(3, 3), float32] */;
  %727 = reshape(%725, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %728 = @func_8046(%726, %727) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %729 = @func_7741() /* ty=Tensor[(6, 14, 10), float32] */;
  %730 = %723.0;
  %731 = %728.3;
  (%729, %730, meta[relay.Constant][49] /* ty=Tensor[(768), float32] */, %731, %var_8319, %var_8320)
}

def @func_20820(%var_20799: Tensor[(15, 8, 2), int64]) -> (Tensor[(15, 8, 2), bool], Tensor[(?, 14, 10), float64]) {
  %732 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 8, 2), int64] */, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
  %733 = shape_of(%var_20799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_20799, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %736 = cast(meta[relay.Constant][51] /* ty=Tensor[(140, 1), uint32] */, dtype="uint32") /* ty=Tensor[(140, 1), uint32] */;
  %737 = reshape(%736, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %738 = @func_15176(%737) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) */;
  %739 = %738.1;
  %740 = cast(meta[relay.Constant][51] /* ty=Tensor[(140, 1), uint32] */, dtype="float64") /* ty=Tensor[(140, 1), float64] */;
  %741 = shape_of(%739, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%739, dtype="float64") /* ty=Tensor[(1, 14, 10), float64] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %744 = less_equal(%734, %735) /* ty=Tensor[(15, 8, 2), bool] */;
  %745 = divide(%742, %743) /* ty=Tensor[(?, 14, 10), float64] */;
  (%744, %745)
}

def @func_9469() -> Tensor[(6, 14, 10), float32] {
  %746 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %746.0
}

def @func_17941() -> Tensor[(256), float64] {
  %747 = @func_15888() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float64]) */;
  %747.0
}

def @func_13945() -> Tensor[(6, 14, 10), float32] {
  %748 = @func_13655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %748.0
}

def @func_15176(%var_15168: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) {
  %749 = cast(meta[relay.Constant][52] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %750 = cast(%var_15168, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %751 = reshape(%749, newshape=[]) /* ty=uint32 */;
  %752 = reshape(%750, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
  %753 = @func_12401() /* ty=Tensor[(6, 14, 10), float32] */;
  %754 = @func_2222(%751, %752) /* ty=Tensor[(1, 14, 10), bool] */;
  (%753, %754, meta[relay.Constant][52] /* ty=uint32 */, %var_15168)
}

def @func_20223() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %755 = @func_13655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %756 = @func_11710() /* ty=(Tensor[(256), float64],) */;
  %757 = %755.2;
  %758 = %756.0;
  (%757, %758)
}

def @func_18275() -> (Tensor[(6, 14, 10), float32],) {
  %759 = @func_12049() /* ty=Tensor[(6, 14, 10), float32] */;
  (%759,)
}

def @func_10196(%var_10148: Tensor[(9), float32], %var_10190: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(256), float64], Tensor[(8, 16, 2), float64], Tensor[(1680), int16], Tensor[(5, 13, 5), int64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32]) {
  %760 = cast(%var_10148, dtype="float32") /* ty=Tensor[(9), float32] */;
  %761 = cast(meta[relay.Constant][53] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %762 = reshape(%760, newshape=[3, 3]) /* ty=Tensor[(3, 3), float32] */;
  %763 = reshape(%761, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %764 = @func_8046(%762, %763) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %765 = cast(meta[relay.Constant][53] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %766 = reshape(%765, newshape=[8, 16, 2]) /* ty=Tensor[(8, 16, 2), float64] */;
  %767 = @func_5732(%766) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(8, 16, 2), float64]) */;
  %768 = cast(%var_10148, dtype="float32") /* ty=Tensor[(9), float32] */;
  %769 = cast(meta[relay.Constant][53] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %770 = reshape(%768, newshape=[3, 3]) /* ty=Tensor[(3, 3), float32] */;
  %771 = reshape(%769, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %772 = @func_8046(%770, %771) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %773 = %772.4;
  %774 = cast(meta[relay.Constant][54] /* ty=Tensor[(1680), float64] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(1), int32] */;
  %776 = cast(%773, dtype="int16") /* ty=Tensor[(1680), int16] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?), int16] */;
  %778 = cast(meta[relay.Constant][55] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %779 = cast(meta[relay.Constant][55] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %780 = cast(meta[relay.Constant][56] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %781 = cast(meta[relay.Constant][57] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %782 = cast(%var_10190, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %783 = reshape(%778, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %784 = reshape(%779, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %785 = reshape(%780, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %786 = reshape(%781, newshape=[]) /* ty=uint32 */;
  %787 = reshape(%782, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %788 = @func_2482(%783, %784, %785, %786, %787) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %789 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
  %790 = %764.9;
  %791 = %767.1;
  %792 = minimum(%776, %777) /* ty=Tensor[(1680), int16] */;
  %793 = %788.5;
  (%789, %790, %var_10148, meta[relay.Constant][53] /* ty=Tensor[(256), float64] */, %791, %792, %793, meta[relay.Constant][55] /* ty=Tensor[(216), float64] */, meta[relay.Constant][56] /* ty=Tensor[(325), int64] */, meta[relay.Constant][57] /* ty=uint32 */, %var_10190)
}

def @func_17913() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(16, 6), float64], Tensor[(6, 14, 10), float32], Tensor[(96), float64]) {
  %794 = @func_15449() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %795 = @func_8870() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %796 = @func_13857() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
  %797 = cast(meta[relay.Constant][58] /* ty=Tensor[(16, 6), float64] */, dtype="float64") /* ty=Tensor[(16, 6), float64] */;
  %798 = reshape(%797, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %799 = @func_16267(%798) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 8, 3), float64], Tensor[(96), float64], Tensor[(6, 14, 10), float32]) */;
  %800 = cast(meta[relay.Constant][58] /* ty=Tensor[(16, 6), float64] */, dtype="float64") /* ty=Tensor[(16, 6), float64] */;
  %801 = reshape(%800, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %802 = @func_16267(%801) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 8, 3), float64], Tensor[(96), float64], Tensor[(6, 14, 10), float32]) */;
  %803 = %794.1;
  %804 = %795.0;
  %805 = %796.1;
  %806 = %799.1;
  %807 = @func_12069() /* ty=Tensor[(6, 14, 10), float32] */;
  %808 = %802.4;
  (%803, %804, %805, %806, meta[relay.Constant][58] /* ty=Tensor[(16, 6), float64] */, %807, %808)
}

def @func_10357() -> Tensor[(256), float64] {
  @func_10248() /* ty=Tensor[(256), float64] */
}

def @func_11384() -> (Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], Tensor[(60), float64]) {
  %809 = cast(meta[relay.Constant][59] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %810 = reshape(%809, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %811 = @func_10234(%810) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) */;
  %812 = @func_11370() /* ty=Tensor[(6, 14, 10), float32] */;
  %813 = %811.2;
  (%812, %813, meta[relay.Constant][59] /* ty=Tensor[(60), float64] */)
}

def @func_21593(%var_21557: Tensor[(105), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(105), float64], Tensor[(325), float64], Tensor[(325), float32]) {
  %814 = @func_16884() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %815 = @func_20577() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %816 = cast(%var_21557, dtype="float64") /* ty=Tensor[(105), float64] */;
  %817 = cast(meta[relay.Constant][60] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %818 = reshape(%816, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %819 = reshape(%817, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %820 = @func_20272(%818, %819) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325, 105), bool], Tensor[(256), float64]) */;
  %821 = cast(meta[relay.Constant][60] /* ty=Tensor[(325), int64] */, dtype="float64") /* ty=Tensor[(325), float64] */;
  %822 = acos(%821) /* ty=Tensor[(325), float64] */;
  %823 = cast(%822, dtype="float64") /* ty=Tensor[(325), float64] */;
  %824 = sqrt(%823) /* ty=Tensor[(325), float64] */;
  %825 = cast(%824, dtype="float64") /* ty=Tensor[(325), float64] */;
  %826 = cast(%824, dtype="float32") /* ty=Tensor[(325), float32] */;
  %827 = atan(%826) /* ty=Tensor[(325), float32] */;
  %828 = cast(%827, dtype="float32") /* ty=Tensor[(325), float32] */;
  %829 = %814.0;
  %830 = %815.1;
  %831 = %820.0;
  %832 = exp(%825) /* ty=Tensor[(325), float64] */;
  %833 = log10(%828) /* ty=Tensor[(325), float32] */;
  (%829, %830, %831, %var_21557, %832, %833)
}

def @func_21713() -> Tensor[(6, 14, 10), float32] {
  %834 = @func_18114() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %834.1
}

def @func_10600(%var_10597: Tensor[(1, 11, 7), float32]) -> (Tensor[(1, 11, 7), float32],) {
  %835 = cast(%var_10597, dtype="float32") /* ty=Tensor[(1, 11, 7), float32] */;
  %836 = log(%835) /* ty=Tensor[(1, 11, 7), float32] */;
  (%836,)
}

def @func_21288() -> (Tensor[(7, 11, 5), float64], Tensor[(224), float32]) {
  %837 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %838 = @func_14915() /* ty=Tensor[(7, 11, 5), float64] */;
  %839 = %837.1;
  (%838, %839)
}

def @func_8278() -> (Tensor[(6, 14, 10), float32],) {
  %840 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %841 = %840.0;
  (%841,)
}

def @func_11927() -> Tensor[(6, 14, 10), float32] {
  @func_9469() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_17346() -> (Tensor[(6, 14, 10), float32],) {
  %842 = @func_11039() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %843 = %842.1;
  (%843,)
}

def @func_9353() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %844 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %845 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %846 = %844.0;
  %847 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
  %848 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %849 = %845.3;
  (%846, %847, %848, %849)
}

def @func_11710() -> (Tensor[(256), float64],) {
  %850 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
  %851 = %850.2;
  (%851,)
}

def @func_4363(%var_4339: Tensor[(14, 12, 10), float64]) -> (Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) {
  %852 = cast(%var_4339, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %853 = cast(%var_4339, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %854 = cosh(%852) /* ty=Tensor[(14, 12, 10), float64] */;
  %855 = sqrt(%853) /* ty=Tensor[(14, 12, 10), float32] */;
  (%854, %855)
}

def @func_21142() -> (Tensor[(256), float64],) {
  %856 = @func_13482() /* ty=Tensor[(256), float64] */;
  (%856,)
}

def @func_10012() -> (Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %857 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
  %858 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
  %859 = cast(%858, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %860 = %857.1;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(8, 16, 2), float64] */;
  %862 = reshape(%859, newshape=[6, 14, 10]) /* ty=Tensor[(6, 14, 10), float32] */;
  %863 = reshape(%861, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %864 = @func_7795(%862, %863) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %865 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %866 = %864.0;
  %867 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
  %868 = %865.0;
  (%858, %860, %866, %867, %868)
}

def @func_7795(%var_7768: Tensor[(6, 14, 10), float32], %var_7782: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) {
  %869 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %870 = %869.0;
  %871 = cast(%var_7768, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%870, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %875 = cast(%var_7782, dtype="float64") /* ty=Tensor[(256), float64] */;
  %876 = reshape(%875, newshape=[4, 16, 4]) /* ty=Tensor[(4, 16, 4), float64] */;
  %877 = cast(%var_7768, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %878 = mod(%873, %874) /* ty=Tensor[(6, 14, 10), float32] */;
  %879 = @func_5662(%876) /* ty=Tensor[(4, 16, 4), float64] */;
  %880 = sqrt(%877) /* ty=Tensor[(6, 14, 10), float32] */;
  (%878, %879, %var_7782, %880)
}

def @func_9379() -> Tensor[(6, 14, 10), float32] {
  %881 = @func_8278() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %881.0
}

def @func_11178() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32]) {
  %882 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
  %883 = %882.0;
  %884 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  (%883, %884)
}

def @func_13918() -> Tensor[(6, 14, 10), float32] {
  @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_12611() -> Tensor[(6, 14, 10), float32] {
  %885 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %885.0
}

def @func_10942(%var_10919: Tensor[(5, 5, 14), int32], %var_10938: Tensor[(42), float64]) -> (Tensor[(5, 5, 14), int32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(42), float64]) {
  %886 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %887 = cast(%var_10919, dtype="int32") /* ty=Tensor[(5, 5, 14), int32] */;
  %888 = cast(meta[relay.Constant][61] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %889 = cast(%var_10938, dtype="float64") /* ty=Tensor[(42), float64] */;
  %890 = reshape(%888, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %891 = reshape(%889, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %892 = @func_2959(%890, %891) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %893 = bitwise_xor(%886, %887) /* ty=Tensor[(5, 5, 14), int32] */;
  %894 = %892.2;
  (%893, %894, meta[relay.Constant][61] /* ty=Tensor[(224), float32] */, %var_10938)
}

def @func_8633() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %895 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %896 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
  %897 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %898 = %895.0;
  (%896, %897, %898)
}

def @func_12503() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %899 = @func_9502() /* ty=Tensor[(6, 14, 10), float32] */;
  %900 = @func_7741() /* ty=Tensor[(6, 14, 10), float32] */;
  %901 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
  (%899, %900, %901)
}

def @func_6781(%var_6757: Tensor[(224), float32], %var_6758: Tensor[(42), float64], %var_6763: Tensor[(1680), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(224), float32], Tensor[(42), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) {
  %902 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %903 = cast(%var_6757, dtype="float32") /* ty=Tensor[(224), float32] */;
  %904 = cast(%var_6758, dtype="float64") /* ty=Tensor[(42), float64] */;
  %905 = reshape(%903, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %906 = reshape(%904, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %907 = @func_2959(%905, %906) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %908 = cast(%var_6763, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %909 = reshape(%908, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %910 = @func_4363(%909) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) */;
  %911 = %902.0;
  %912 = %907.1;
  %913 = %910.1;
  (%911, %912, %var_6757, %var_6758, %913, %var_6763)
}

def @func_21808() -> Tensor[(256), float64] {
  %914 = @func_11067() /* ty=(Tensor[(256), float64],) */;
  %914.0
}

def @func_2482(%var_2347: Tensor[(3, 9, 8), float64], %var_2348: Tensor[(3, 9, 8), float64], %var_2400: Tensor[(325, 1), int64], %var_2455: uint32, %var_2456: Tensor[(140), uint32]) -> (Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) {
  %915 = cast(meta[relay.Constant][62] /* ty=Tensor[(2, 384), float32] */, dtype="float32") /* ty=Tensor[(2, 384), float32] */;
  %916 = reshape(%915, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %917 = @func_122(%916) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %918 = %917.1;
  %919 = cast(%918, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %920 = reshape(%919, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %921 = @func_122(%920) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %922 = cast(%var_2347, dtype="float32") /* ty=Tensor[(3, 9, 8), float32] */;
  %923 = cast(%918, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %924 = reshape(%923, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %925 = @func_122(%924) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %926 = cast(%var_2400, dtype="int64") /* ty=Tensor[(325, 1), int64] */;
  %927 = %921.1;
  %928 = cast(%927, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
  %929 = reshape(%926, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %930 = reshape(%928, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %931 = @func_1546(%929, %930) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %932 = cast(%var_2348, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %933 = shape_of(%var_2347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_2347, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %936 = divide(%934, %935) /* ty=Tensor[(3, 9, 8), float64] */;
  %937 = cast(%936, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %938 = %925.0;
  %939 = cast(%938, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %940 = reshape(%939, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %941 = @func_122(%940) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %942 = cast(%var_2455, dtype="uint32") /* ty=uint32 */;
  %943 = cast(%var_2456, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %944 = reshape(%942, newshape=[]) /* ty=uint32 */;
  %945 = reshape(%943, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
  %946 = %931.0;
  %947 = cast(%946, dtype="int64") /* ty=Tensor[(5, 13, 5), int64] */;
  %948 = cast(meta[relay.Constant][62] /* ty=Tensor[(2, 384), float32] */, dtype="float64") /* ty=Tensor[(2, 384), float64] */;
  %949 = reshape(%947, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %950 = reshape(%948, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %951 = @func_1546(%949, %950) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %952 = cast(meta[relay.Constant][63] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %953 = reshape(%952, newshape=[1, 6, 7]) /* ty=Tensor[(1, 6, 7), float64] */;
  %954 = exp(%922) /* ty=Tensor[(3, 9, 8), float32] */;
  %955 = log10(%937) /* ty=Tensor[(3, 9, 8), float64] */;
  %956 = %941.0;
  %957 = @func_2222(%944, %945) /* ty=Tensor[(1, 14, 10), bool] */;
  %958 = %951.1;
  %959 = @func_1857(%953) /* ty=Tensor[(1, 6, 7), float64] */;
  (%918, meta[relay.Constant][62] /* ty=Tensor[(2, 384), float32] */, %927, %954, %938, %946, %var_2400, %955, %956, %957, %var_2455, %var_2456, %958, %959, meta[relay.Constant][63] /* ty=Tensor[(42), float64] */)
}

def @func_20962() -> (Tensor[(105), float64],) {
  %960 = @func_17375() /* ty=Tensor[(105), float64] */;
  (%960,)
}

def @func_17361() -> (Tensor[(9), float32], Tensor[(6, 14, 10), float32]) {
  %961 = @func_14361() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(140), uint32]) */;
  %962 = %961.2;
  %963 = @func_14474() /* ty=Tensor[(6, 14, 10), float32] */;
  (%962, %963)
}

def @func_21776() -> Tensor[(6, 14, 10), float32] {
  @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_7729() -> Tensor[(6, 14, 10), float32] {
  %964 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %964.0
}

def @func_10113() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %965 = @func_8278() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %966 = @func_10012() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %967 = %965.0;
  %968 = %966.4;
  (%967, %968)
}

def @func_21028() -> Tensor[(6, 14, 10), float32] {
  @func_10813() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_15995(%var_15936: float64, %var_15937: Tensor[(14, 13, 5), float64]) -> (Tensor[(14, 13, 5), bool], Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], Tensor[(140), uint32]) {
  %969 = cast(%var_15936, dtype="bool") /* ty=bool */;
  %970 = cast(%var_15937, dtype="bool") /* ty=Tensor[(14, 13, 5), bool] */;
  %971 = cast(%var_15936, dtype="uint32") /* ty=uint32 */;
  %972 = cast(meta[relay.Constant][64] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %973 = reshape(%971, newshape=[]) /* ty=uint32 */;
  %974 = reshape(%972, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
  %975 = less_equal(%969, %970) /* ty=Tensor[(14, 13, 5), bool] */;
  %976 = @func_14474() /* ty=Tensor[(6, 14, 10), float32] */;
  %977 = @func_2222(%973, %974) /* ty=Tensor[(1, 14, 10), bool] */;
  (%975, %976, %977, meta[relay.Constant][64] /* ty=Tensor[(140), uint32] */)
}

def @func_14832() -> (Tensor[(6, 14, 10), float32],) {
  %978 = @func_11039() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %979 = %978.0;
  (%979,)
}

def @func_8660(%var_8640: Tensor[(13, 1, 5), float32]) -> (Tensor[(13, 1, 5), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %980 = cast(%var_8640, dtype="float32") /* ty=Tensor[(13, 1, 5), float32] */;
  %981 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %982 = %981.0;
  %983 = cast(%982, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %984 = cast(meta[relay.Constant][65] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %985 = reshape(%983, newshape=[6, 14, 10]) /* ty=Tensor[(6, 14, 10), float32] */;
  %986 = reshape(%984, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %987 = @func_7795(%985, %986) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %988 = asin(%980) /* ty=Tensor[(13, 1, 5), float32] */;
  %989 = %987.3;
  (%988, %982, %989, meta[relay.Constant][65] /* ty=Tensor[(256), float64] */)
}

def @func_16267(%var_16262: Tensor[(96), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 8, 3), float64], Tensor[(96), float64], Tensor[(6, 14, 10), float32]) {
  %990 = @func_14361() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(140), uint32]) */;
  %991 = cast(%var_16262, dtype="float64") /* ty=Tensor[(96), float64] */;
  %992 = reshape(%991, newshape=[4, 8, 3]) /* ty=Tensor[(4, 8, 3), float64] */;
  %993 = @func_7428(%992) /* ty=(Tensor[(4, 8, 3), float64],) */;
  %994 = @func_12765() /* ty=Tensor[(6, 14, 10), float32] */;
  %995 = %990.1;
  %996 = @func_10248() /* ty=Tensor[(256), float64] */;
  %997 = %993.0;
  %998 = @func_10813() /* ty=Tensor[(6, 14, 10), float32] */;
  (%994, %995, %996, %997, %var_16262, %998)
}

def @func_11693() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], uint32, Tensor[(6, 14, 10), float32]) {
  %999 = @func_11384() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], Tensor[(60), float64]) */;
  %1000 = @func_10655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) */;
  %1001 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %1002 = @func_11370() /* ty=Tensor[(6, 14, 10), float32] */;
  %1003 = @func_7825() /* ty=Tensor[(6, 14, 10), float32] */;
  %1004 = %999.1;
  %1005 = %1000.4;
  %1006 = %1001.0;
  (%1002, %1003, %1004, %1005, %1006)
}

def @func_22103() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1007 = @func_15105() /* ty=Tensor[(6, 14, 10), float32] */;
  %1008 = @func_17317() /* ty=Tensor[(6, 14, 10), float32] */;
  (%1007, %1008)
}

def @func_17131() -> Tensor[(6, 14, 10), float32] {
  @func_16705() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_14398() -> (Tensor[(6, 14, 10), float32],) {
  %1009 = @func_13360() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1010 = %1009.0;
  (%1010,)
}

def @func_19659(%var_19523: Tensor[(77), float32], %var_19544: Tensor[(35, 10), int32], %var_19632: Tensor[(768), float64], %var_19638: Tensor[(6, 3), int64], %var_19647: Tensor[(14, 165), float32]) -> (Tensor[(256), float64], Tensor[(77), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64], Tensor[(105), float64], Tensor[(256), float64], Tensor[(35, 10), float32], Tensor[(35, 10), float32], Tensor[(35, 10), uint16], Tensor[(768), float64], Tensor[(768), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 3), int64], Tensor[(6, 14, 10), float32], Tensor[(14, 11, 15), bool], Tensor[(14, 165), float32], Tensor[(35, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1011 = cast(meta[relay.Constant][66] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1012 = reshape(%1011, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %1013 = @func_17072(%1012) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64]) */;
  %1014 = @func_18010() /* ty=(Tensor[(256), float64], Tensor[(256), float64], Tensor[(256), float64]) */;
  %1015 = cast(%var_19523, dtype="float32") /* ty=Tensor[(77), float32] */;
  %1016 = reshape(%1015, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %1017 = @func_14313(%1016) /* ty=(Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) */;
  %1018 = %1017.0;
  %1019 = cast(%var_19544, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %1020 = shape_of(%1018, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1021 = cast(%1018, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %1022 = dyn.reshape(%1019, %1020, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1023 = floor_divide(%1021, %1022) /* ty=Tensor[(35, 10), float64] */;
  %1024 = cast(%var_19544, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %1025 = rsqrt(%1024) /* ty=Tensor[(35, 10), float32] */;
  %1026 = cast(%1025, dtype="int32") /* ty=Tensor[(35, 10), int32] */;
  %1027 = shape_of(%1023, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1028 = cast(%1023, dtype="int32") /* ty=Tensor[(35, 10), int32] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1030 = left_shift(%1028, %1029) /* ty=Tensor[(35, 10), int32] */;
  %1031 = cast(%1030, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %1032 = cast(%1025, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %1033 = cast(%1030, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %1034 = log2(%1033) /* ty=Tensor[(35, 10), float32] */;
  %1035 = cast(%1034, dtype="uint16") /* ty=Tensor[(35, 10), uint16] */;
  %1036 = shape_of(%1030, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1037 = cast(%1030, dtype="uint16") /* ty=Tensor[(35, 10), uint16] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1039 = cast(%var_19632, dtype="float64") /* ty=Tensor[(768), float64] */;
  %1040 = reshape(%1039, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %1041 = @func_7643(%1040) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) */;
  %1042 = cast(%var_19638, dtype="int64") /* ty=Tensor[(6, 3), int64] */;
  %1043 = reshape(%1042, newshape=[3, 6]) /* ty=Tensor[(3, 6), int64] */;
  %1044 = @func_15131(%1043) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(3, 6), int64], Tensor[(216), int64]) */;
  %1045 = cast(%var_19647, dtype="float32") /* ty=Tensor[(14, 165), float32] */;
  %1046 = reshape(%1045, newshape=[14, 11, 15]) /* ty=Tensor[(14, 11, 15), float32] */;
  %1047 = @func_17589(%1046) /* ty=(Tensor[(14, 11, 15), bool],) */;
  %1048 = cast(%1023, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %1049 = log10(%1048) /* ty=Tensor[(35, 10), float32] */;
  %1050 = cast(%1025, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %1051 = exp(%1050) /* ty=Tensor[(35, 10), float64] */;
  %1052 = cast(%var_19544, dtype="bool") /* ty=Tensor[(35, 10), bool] */;
  %1053 = shape_of(%1051, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1054 = cast(%1051, dtype="bool") /* ty=Tensor[(35, 10), bool] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1056 = less_equal(%1054, %1055) /* ty=Tensor[(35, 10), bool] */;
  %1057 = cast(%1056, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %1058 = shape_of(%1049, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1059 = cast(%1049, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1061 = @func_14007() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1062 = @func_12013() /* ty=Tensor[(256), float64] */;
  %1063 = %1013.0;
  %1064 = @func_17375() /* ty=Tensor[(105), float64] */;
  %1065 = %1014.0;
  %1066 = acosh(%1031) /* ty=Tensor[(35, 10), float32] */;
  %1067 = log(%1032) /* ty=Tensor[(35, 10), float32] */;
  %1068 = right_shift(%1037, %1038) /* ty=Tensor[(35, 10), uint16] */;
  %1069 = %1041.8;
  %1070 = %1044.0;
  %1071 = @func_14294() /* ty=Tensor[(6, 14, 10), float32] */;
  %1072 = %1047.0;
  %1073 = divide(%1059, %1060) /* ty=Tensor[(35, 10), float32] */;
  %1074 = %1061.0;
  (%1062, %var_19523, %1063, meta[relay.Constant][66] /* ty=Tensor[(90), float64] */, %1064, %1065, %1066, %1067, %1068, %1069, %var_19632, %1070, %var_19638, %1071, %1072, %var_19647, %1073, %1074)
}

def @func_10577(%var_10538: Tensor[(6, 16, 13), float64], %var_10573: uint32) -> (Tensor[(6, 16, 13), float64], Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32]) {
  %1075 = cast(%var_10538, dtype="float64") /* ty=Tensor[(6, 16, 13), float64] */;
  %1076 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1077 = cast(meta[relay.Constant][67] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1078 = cast(%var_10573, dtype="uint32") /* ty=uint32 */;
  %1079 = cast(meta[relay.Constant][68] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %1080 = reshape(%1077, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %1081 = reshape(%1078, newshape=[]) /* ty=uint32 */;
  %1082 = reshape(%1079, newshape=[35, 4]) /* ty=Tensor[(35, 4), uint32] */;
  %1083 = @func_9900(%1080, %1081, %1082) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
  %1084 = rsqrt(%1075) /* ty=Tensor[(6, 16, 13), float64] */;
  %1085 = %1076.0;
  %1086 = %1083.1;
  (%1084, %1085, %1086, meta[relay.Constant][67] /* ty=Tensor[(216), float64] */, %var_10573, meta[relay.Constant][68] /* ty=Tensor[(140), uint32] */)
}

def @func_12904() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1087 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
  %1088 = @func_11801() /* ty=Tensor[(6, 14, 10), float32] */;
  (%1087, %1088)
}

def @func_11144(%var_11139: int64, %var_11140: Tensor[(1, 14, 3), int64]) -> (Tensor[(1, 14, 3), int64],) {
  %1089 = cast(%var_11139, dtype="int64") /* ty=int64 */;
  %1090 = cast(%var_11140, dtype="int64") /* ty=Tensor[(1, 14, 3), int64] */;
  %1091 = multiply(%1089, %1090) /* ty=Tensor[(1, 14, 3), int64] */;
  (%1091,)
}

def @func_20368() -> (Tensor[(224), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1092 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %1093 = @func_11872() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1094 = @func_16674() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
  %1095 = %1092.1;
  %1096 = %1093.0;
  %1097 = @func_19364() /* ty=Tensor[(6, 14, 10), float32] */;
  %1098 = %1094.0;
  (%1095, %1096, %1097, %1098)
}

def @func_19372(%var_19369: Tensor[(6, 8, 2), float64]) -> Tensor[(6, 8, 2), float64] {
  %1099 = cast(%var_19369, dtype="float64") /* ty=Tensor[(6, 8, 2), float64] */;
  sin(%1099) /* ty=Tensor[(6, 8, 2), float64] */
}

def @func_22059(%var_22035: Tensor[(35, 4), uint32], %var_22045: Tensor[(77), float32]) -> (Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64], Tensor[(6, 14, 10), float32], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(35, 4), uint32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(77), float32], Tensor[(77), float32], Tensor[(35, 10), float64]) {
  %1100 = cast(meta[relay.Constant][69] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1101 = cast(meta[relay.Constant][70] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1102 = reshape(%1100, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %1103 = reshape(%1101, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1104 = @func_14599(%1102, %1103) /* ty=(Tensor[(35, 10), int32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64]) */;
  %1105 = @func_13360() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1106 = cast(meta[relay.Constant][71] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1107 = cast(meta[relay.Constant][72] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1108 = cast(%var_22035, dtype="uint32") /* ty=Tensor[(35, 4), uint32] */;
  %1109 = reshape(%1106, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %1110 = reshape(%1107, newshape=[]) /* ty=uint32 */;
  %1111 = reshape(%1108, newshape=[35, 4]) /* ty=Tensor[(35, 4), uint32] */;
  %1112 = @func_9900(%1109, %1110, %1111) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
  %1113 = cast(%var_22045, dtype="float32") /* ty=Tensor[(77), float32] */;
  %1114 = reshape(%1113, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %1115 = @func_14313(%1114) /* ty=(Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) */;
  %1116 = cast(meta[relay.Constant][73] /* ty=Tensor[(35, 10), int32] */, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %1117 = tan(%1116) /* ty=Tensor[(35, 10), float64] */;
  %1118 = cast(%1117, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %1119 = sin(%1118) /* ty=Tensor[(35, 10), float64] */;
  %1120 = @func_13459() /* ty=(Tensor[(35, 10), int32],) */;
  %1121 = %1120.0;
  %1122 = cast(meta[relay.Constant][73] /* ty=Tensor[(35, 10), int32] */, dtype="uint32") /* ty=Tensor[(35, 10), uint32] */;
  %1123 = shape_of(%1121, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1124 = cast(%1121, dtype="uint32") /* ty=Tensor[(35, 10), uint32] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1126 = bitwise_or(%1124, %1125) /* ty=Tensor[(35, 10), uint32] */;
  %1127 = cast(%1126, dtype="int8") /* ty=Tensor[(35, 10), int8] */;
  %1128 = shape_of(%1121, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1129 = cast(%1121, dtype="int8") /* ty=Tensor[(35, 10), int8] */;
  %1130 = dyn.reshape(%1127, %1128, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1131 = minimum(%1129, %1130) /* ty=Tensor[(35, 10), int8] */;
  %1132 = cast(%1131, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %1133 = shape_of(%1119, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1134 = cast(%1119, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1136 = %1104.3;
  %1137 = %1105.0;
  %1138 = %1112.2;
  %1139 = @func_12069() /* ty=Tensor[(6, 14, 10), float32] */;
  %1140 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
  %1141 = %1115.2;
  %1142 = floor_mod(%1134, %1135) /* ty=Tensor[(35, 10), float64] */;
  (%1136, meta[relay.Constant][69] /* ty=Tensor[(90), float64] */, meta[relay.Constant][70] /* ty=Tensor[(60), float64] */, %1137, %1138, meta[relay.Constant][71] /* ty=Tensor[(216), float64] */, meta[relay.Constant][72] /* ty=uint32 */, %var_22035, %1139, %1140, %1141, %var_22045, %1142)
}

def @func_18261() -> (Tensor[(6, 14, 10), float32], uint32) {
  %1143 = @func_8835() /* ty=(Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) */;
  %1144 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
  %1145 = %1143.2;
  (%1144, %1145)
}

def @func_8715() -> (Tensor[(6, 14, 10), float32], Tensor[(768), float32], Tensor[(105), float64], Tensor[(325), int64], Tensor[(6, 14, 10), float32]) {
  %1146 = cast(meta[relay.Constant][74] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1147 = cast(meta[relay.Constant][75] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %1148 = reshape(%1146, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1149 = reshape(%1147, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %1150 = @func_6947(%1148, %1149) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) */;
  %1151 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1152 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %1153 = %1150.3;
  %1154 = %1151.0;
  (%1152, %1153, meta[relay.Constant][74] /* ty=Tensor[(105), float64] */, meta[relay.Constant][75] /* ty=Tensor[(325), int64] */, %1154)
}

def @func_16884() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1155 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1156 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
  %1157 = @func_9379() /* ty=Tensor[(6, 14, 10), float32] */;
  %1158 = %1155.0;
  (%1156, %1157, %1158)
}

def @func_1857(%var_1852: Tensor[(1, 6, 7), float64]) -> Tensor[(1, 6, 7), float64] {
  %1159 = cast(%var_1852, dtype="float64") /* ty=Tensor[(1, 6, 7), float64] */;
  log2(%1159) /* ty=Tensor[(1, 6, 7), float64] */
}

def @func_6828(%var_6796: Tensor[(2, 7, 11), float32], %var_6815: Tensor[(1680), float64], %var_6821: Tensor[(256, 1), float64]) -> (Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) {
  %1160 = cast(%var_6796, dtype="float32") /* ty=Tensor[(2, 7, 11), float32] */;
  %1161 = cast(meta[relay.Constant][76] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1162 = cast(meta[relay.Constant][77] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %1163 = cast(%var_6815, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1164 = reshape(%1161, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1165 = reshape(%1162, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %1166 = reshape(%1163, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %1167 = @func_6781(%1164, %1165, %1166) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(224), float32], Tensor[(42), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) */;
  %1168 = cast(%var_6821, dtype="float64") /* ty=Tensor[(256, 1), float64] */;
  %1169 = reshape(%1168, newshape=[4, 16, 4]) /* ty=Tensor[(4, 16, 4), float64] */;
  %1170 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1171 = asin(%1160) /* ty=Tensor[(2, 7, 11), float32] */;
  %1172 = %1167.4;
  %1173 = @func_5662(%1169) /* ty=Tensor[(4, 16, 4), float64] */;
  %1174 = %1170.0;
  (%1171, %1172, meta[relay.Constant][76] /* ty=Tensor[(224), float32] */, meta[relay.Constant][77] /* ty=Tensor[(42), float64] */, %var_6815, %1173, %var_6821, %1174)
}

def @func_14976() -> Tensor[(6, 14, 10), float32] {
  @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_19351() -> (Tensor[(6, 14, 10), float32], uint32) {
  %1175 = @func_8835() /* ty=(Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) */;
  %1176 = @func_15340() /* ty=Tensor[(6, 14, 10), float32] */;
  %1177 = %1175.1;
  (%1176, %1177)
}

def @func_9611() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1178 = @func_9558() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1179 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1180 = %1178.0;
  %1181 = %1179.0;
  (%1180, %1181)
}

def @func_11801() -> Tensor[(6, 14, 10), float32] {
  %1182 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %1182.1
}

def @func_15105() -> Tensor[(6, 14, 10), float32] {
  %1183 = @func_8964() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */;
  %1183.2
}

def @func_20577() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1184 = @func_12947() /* ty=Tensor[(6, 14, 10), float32] */;
  %1185 = @func_15709() /* ty=Tensor[(6, 14, 10), float32] */;
  (%1184, %1185)
}

def @func_19364() -> Tensor[(6, 14, 10), float32] {
  @func_7345() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_11067() -> (Tensor[(256), float64],) {
  %1186 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
  %1187 = %1186.0;
  (%1187,)
}

def @func_14361() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(140), uint32]) {
  %1188 = @func_13407() /* ty=(Tensor[(256), float64],) */;
  %1189 = cast(meta[relay.Constant][78] /* ty=Tensor[(9), float32] */, dtype="float32") /* ty=Tensor[(9), float32] */;
  %1190 = cast(meta[relay.Constant][79] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %1191 = reshape(%1189, newshape=[9]) /* ty=Tensor[(9), float32] */;
  %1192 = reshape(%1190, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %1193 = @func_10196(%1191, %1192) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(256), float64], Tensor[(8, 16, 2), float64], Tensor[(1680), int16], Tensor[(5, 13, 5), int64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32]) */;
  %1194 = %1188.0;
  %1195 = %1193.0;
  (%1194, %1195, meta[relay.Constant][78] /* ty=Tensor[(9), float32] */, meta[relay.Constant][79] /* ty=Tensor[(140), uint32] */)
}

def @func_19170() -> (uint32, Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %1196 = @func_8835() /* ty=(Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) */;
  %1197 = %1196.1;
  %1198 = @func_17131() /* ty=Tensor[(6, 14, 10), float32] */;
  %1199 = @func_12213() /* ty=Tensor[(256), float64] */;
  (%1197, %1198, %1199)
}

def @func_6898() -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) {
  %1200 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1201 = cast(meta[relay.Constant][80] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1202 = reshape(%1201, newshape=[4, 16, 4]) /* ty=Tensor[(4, 16, 4), float64] */;
  %1203 = %1200.0;
  %1204 = @func_5662(%1202) /* ty=Tensor[(4, 16, 4), float64] */;
  (%1203, %1204, meta[relay.Constant][80] /* ty=Tensor[(256), float64] */)
}

def @func_19996() -> (Tensor[(11, 11, 12), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %1205 = @func_15772() /* ty=Tensor[(11, 11, 12), float32] */;
  %1206 = @func_18581() /* ty=Tensor[(6, 14, 10), float32] */;
  %1207 = @func_13482() /* ty=Tensor[(256), float64] */;
  (%1205, %1206, %1207)
}

def @func_16730() -> (Tensor[(256), float64],) {
  %1208 = @func_15324() /* ty=(Tensor[(256), float64],) */;
  %1209 = %1208.0;
  (%1209,)
}

def @func_15562(%var_15513: Tensor[(13, 25), int64], %var_15527: Tensor[(77), float32], %var_15531: Tensor[(90), float64]) -> (uint32, Tensor[(325, 1), int64], Tensor[(105), float64], Tensor[(13, 25), int64], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64], Tensor[(256), float64], uint32) {
  %1210 = @func_13278() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) */;
  %1211 = cast(meta[relay.Constant][81] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1212 = cast(%var_15513, dtype="int64") /* ty=Tensor[(13, 25), int64] */;
  %1213 = reshape(%1211, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1214 = reshape(%1212, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %1215 = @func_6947(%1213, %1214) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) */;
  %1216 = cast(%var_15527, dtype="float32") /* ty=Tensor[(77), float32] */;
  %1217 = reshape(%1216, newshape=[1, 11, 7]) /* ty=Tensor[(1, 11, 7), float32] */;
  %1218 = @func_10600(%1217) /* ty=(Tensor[(1, 11, 7), float32],) */;
  %1219 = cast(%var_15531, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1220 = cast(meta[relay.Constant][82] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1221 = reshape(%1219, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %1222 = reshape(%1220, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1223 = @func_14599(%1221, %1222) /* ty=(Tensor[(35, 10), int32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64]) */;
  %1224 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %1225 = @func_13278() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) */;
  %1226 = %1210.2;
  %1227 = %1215.5;
  %1228 = %1218.0;
  %1229 = %1223.1;
  %1230 = %1224.0;
  %1231 = %1225.2;
  (%1226, %1227, meta[relay.Constant][81] /* ty=Tensor[(105), float64] */, %var_15513, %1228, %var_15527, %1229, %var_15531, meta[relay.Constant][82] /* ty=Tensor[(60), float64] */, %1230, %1231)
}

def @func_17271() -> Tensor[(6, 14, 10), float32] {
  @func_11370() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_13013() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 16, 4), float64]) {
  %1232 = @func_10875() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1233 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
  %1234 = %1232.0;
  %1235 = @func_10357() /* ty=Tensor[(256), float64] */;
  %1236 = %1233.1;
  (%1234, %1235, %1236)
}

def @func_8396() -> Tensor[(6, 14, 10), float32] {
  @func_7825() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_15131(%var_15128: Tensor[(3, 6), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(3, 6), int64], Tensor[(216), int64]) {
  %1237 = cast(%var_15128, dtype="int64") /* ty=Tensor[(3, 6), int64] */;
  %1238 = cast(meta[relay.Constant][83] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %1239 = reshape(%1237, newshape=[3, 6, 1]) /* ty=Tensor[(3, 6, 1), int64] */;
  %1240 = reshape(%1238, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), int64] */;
  %1241 = @func_11111(%1239, %1240) /* ty=(Tensor[(3, 6, 12), int64], Tensor[(6, 14, 10), float32]) */;
  %1242 = @func_9469() /* ty=Tensor[(6, 14, 10), float32] */;
  %1243 = %1241.1;
  (%1242, %1243, %var_15128, meta[relay.Constant][83] /* ty=Tensor[(216), int64] */)
}

def @func_20847() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1244 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %1245 = @func_14007() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1246 = %1244.3;
  %1247 = %1245.0;
  (%1246, %1247)
}

def @func_15385() -> Tensor[(6, 14, 10), float32] {
  @func_11927() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_13278() -> (Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) {
  %1248 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %1249 = cast(meta[relay.Constant][84] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1250 = reshape(%1249, newshape=[]) /* ty=uint32 */;
  %1251 = @func_6714(%1250) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], Tensor[(14, 5, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(1, 14, 10), bool], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
  %1252 = %1248.2;
  %1253 = %1251.4;
  (%1252, %1253, meta[relay.Constant][84] /* ty=uint32 */)
}

def @func_20940() -> Tensor[(256), float64] {
  @func_12013() /* ty=Tensor[(256), float64] */
}

def @func_7522() -> (Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) {
  %1254 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1255 = cast(meta[relay.Constant][85] /* ty=Tensor[(4, 64), float64] */, dtype="float64") /* ty=Tensor[(4, 64), float64] */;
  %1256 = reshape(%1255, newshape=[8, 16, 2]) /* ty=Tensor[(8, 16, 2), float64] */;
  %1257 = @func_5732(%1256) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(8, 16, 2), float64]) */;
  %1258 = %1254.0;
  %1259 = %1257.1;
  (%1258, %1259, meta[relay.Constant][85] /* ty=Tensor[(4, 64), float64] */)
}

def @func_21243(%var_21230: Tensor[(5, 11, 13), uint64], %var_21231: Tensor[(5, 11, 13), uint64]) -> (Tensor[(5, 11, 13), uint64],) {
  %1260 = cast(%var_21231, dtype="uint64") /* ty=Tensor[(5, 11, 13), uint64] */;
  %1261 = shape_of(%var_21230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1262 = cast(%var_21230, dtype="uint64") /* ty=Tensor[(5, 11, 13), uint64] */;
  %1263 = dyn.reshape(%1260, %1261, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1264 = bitwise_and(%1262, %1263) /* ty=Tensor[(5, 11, 13), uint64] */;
  (%1264,)
}

def @func_11111(%var_11096: Tensor[(3, 6, 1), int64], %var_11097: Tensor[(3, 6, 12), int64]) -> (Tensor[(3, 6, 12), int64], Tensor[(6, 14, 10), float32]) {
  %1265 = cast(%var_11096, dtype="int64") /* ty=Tensor[(3, 6, 1), int64] */;
  %1266 = cast(%var_11097, dtype="int64") /* ty=Tensor[(3, 6, 12), int64] */;
  %1267 = @func_11021() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32]) */;
  %1268 = right_shift(%1265, %1266) /* ty=Tensor[(3, 6, 12), int64] */;
  %1269 = %1267.0;
  (%1268, %1269)
}

def @func_10264(%var_10257: Tensor[(3, 16, 8), float64]) -> Tensor[(3, 16, 8), float64] {
  %1270 = cast(%var_10257, dtype="float64") /* ty=Tensor[(3, 16, 8), float64] */;
  %1271 = shape_of(meta[relay.Constant][86] /* ty=Tensor[(3, 16, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1272 = cast(meta[relay.Constant][86] /* ty=Tensor[(3, 16, 8), float64] */, dtype="float64") /* ty=Tensor[(3, 16, 8), float64] */;
  %1273 = dyn.reshape(%1270, %1271, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%1272, %1273) /* ty=Tensor[(3, 16, 8), float64] */
}

def @func_12025() -> Tensor[(256), float64] {
  %1274 = @func_11710() /* ty=(Tensor[(256), float64],) */;
  %1274.0
}

def @func_122(%var_95: Tensor[(4, 16, 12), float32]) -> (Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) {
  %1275 = cast(%var_95, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %1276 = cast(%var_95, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
  %1277 = cosh(%1275) /* ty=Tensor[(4, 16, 12), float32] */;
  %1278 = log2(%1276) /* ty=Tensor[(4, 16, 12), float64] */;
  (%1277, %1278)
}

def @func_19100() -> Tensor[(256), float64] {
  %1279 = @func_11710() /* ty=(Tensor[(256), float64],) */;
  %1279.0
}

def @func_14007() -> (Tensor[(6, 14, 10), float32],) {
  %1280 = @func_12765() /* ty=Tensor[(6, 14, 10), float32] */;
  (%1280,)
}

def @func_15266() -> (Tensor[(256), float64],) {
  %1281 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %1282 = %1281.0;
  (%1282,)
}

def @func_17589(%var_17557: Tensor[(14, 11, 15), float32]) -> (Tensor[(14, 11, 15), bool],) {
  %1283 = cast(%var_17557, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
  %1284 = log2(%1283) /* ty=Tensor[(14, 11, 15), float32] */;
  %1285 = cast(%1284, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %1286 = shape_of(%var_17557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1287 = cast(%var_17557, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %1288 = dyn.reshape(%1285, %1286, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1289 = logical_or(%1287, %1288) /* ty=Tensor[(14, 11, 15), bool] */;
  (%1289,)
}

def @func_10813() -> Tensor[(6, 14, 10), float32] {
  %1290 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %1290.0
}

def @func_9900(%var_9895: Tensor[(216), float64], %var_9897: uint32, %var_9898: Tensor[(35, 4), uint32]) -> (Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) {
  %1291 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
  %1292 = cast(%var_9895, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1293 = cast(%var_9895, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1294 = cast(meta[relay.Constant][87] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %1295 = cast(%var_9897, dtype="uint32") /* ty=uint32 */;
  %1296 = cast(%var_9898, dtype="uint32") /* ty=Tensor[(35, 4), uint32] */;
  %1297 = reshape(%1292, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %1298 = reshape(%1293, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %1299 = reshape(%1294, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %1300 = reshape(%1295, newshape=[]) /* ty=uint32 */;
  %1301 = reshape(%1296, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %1302 = @func_2482(%1297, %1298, %1299, %1300, %1301) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %1303 = %1291.1;
  %1304 = %1302.0;
  (%1303, %1304, %var_9895, meta[relay.Constant][87] /* ty=Tensor[(325), int64] */, %var_9897, %var_9898)
}

def @func_21130() -> Tensor[(6, 14, 10), float32] {
  @func_15709() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_9261() -> (Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) {
  %1305 = cast(meta[relay.Constant][88] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1306 = cast(meta[relay.Constant][89] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1307 = cast(meta[relay.Constant][90] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1308 = reshape(%1305, newshape=[2, 7, 11]) /* ty=Tensor[(2, 7, 11), float32] */;
  %1309 = reshape(%1306, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %1310 = reshape(%1307, newshape=[256, 1]) /* ty=Tensor[(256, 1), float64] */;
  %1311 = @func_6828(%1308, %1309, %1310) /* ty=(Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) */;
  %1312 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
  %1313 = %1311.3;
  %1314 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
  (%1312, %1313, meta[relay.Constant][88] /* ty=Tensor[(154), float32] */, meta[relay.Constant][89] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][90] /* ty=Tensor[(256), float64] */, %1314)
}

def @func_7345() -> Tensor[(6, 14, 10), float32] {
  %1315 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
  %1315.0
}

def @func_8448() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1316 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1317 = @func_8278() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1318 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %1319 = %1316.0;
  %1320 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %1321 = %1317.0;
  (%1318, %1319, %1320, %1321)
}

def @func_20916() -> Tensor[(6, 14, 10), float32] {
  @func_12947() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_10841(%var_10823: Tensor[(216), float64]) -> (uint32, Tensor[(216), float64], Tensor[(216), float64], Tensor[(140), uint32]) {
  %1322 = @func_10655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) */;
  %1323 = cast(%var_10823, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1324 = %1322.4;
  %1325 = cast(%1324, dtype="uint32") /* ty=uint32 */;
  %1326 = cast(meta[relay.Constant][91] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %1327 = reshape(%1323, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %1328 = reshape(%1325, newshape=[]) /* ty=uint32 */;
  %1329 = reshape(%1326, newshape=[35, 4]) /* ty=Tensor[(35, 4), uint32] */;
  %1330 = @func_9900(%1327, %1328, %1329) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
  %1331 = %1330.2;
  (%1324, %1331, %var_10823, meta[relay.Constant][91] /* ty=Tensor[(140), uint32] */)
}

def @func_17546() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(256), float64]) {
  %1332 = @func_16439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %1333 = @func_16730() /* ty=(Tensor[(256), float64],) */;
  %1334 = %1332.4;
  %1335 = @func_11370() /* ty=Tensor[(6, 14, 10), float32] */;
  %1336 = @func_13482() /* ty=Tensor[(256), float64] */;
  %1337 = %1333.0;
  (%1334, %1335, %1336, %1337)
}

def @func_15709() -> Tensor[(6, 14, 10), float32] {
  %1338 = @func_9353() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %1338.3
}

def @func_11872() -> (Tensor[(6, 14, 10), float32],) {
  %1339 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1340 = %1339.0;
  (%1340,)
}

def @func_16984() -> Tensor[(256), float64] {
  @func_12213() /* ty=Tensor[(256), float64] */
}

def @func_7265(%var_7256: Tensor[(5, 15, 9), float32]) -> Tensor[(5, 15, 9), float32] {
  %1341 = cast(%var_7256, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  asin(%1341) /* ty=Tensor[(5, 15, 9), float32] */
}

def @func_22318(%var_22270: Tensor[(224), float32], %var_22271: Tensor[(14, 3), float64], %var_22272: Tensor[(1680), float64], %var_22290: Tensor[(216), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(14, 3), float64], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32]) {
  %1342 = cast(%var_22270, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1343 = cast(%var_22271, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
  %1344 = cast(%var_22272, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1345 = reshape(%1342, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1346 = reshape(%1343, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %1347 = reshape(%1344, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %1348 = @func_6781(%1345, %1346, %1347) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(224), float32], Tensor[(42), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) */;
  %1349 = cast(%var_22290, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1350 = reshape(%1349, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %1351 = @func_19751(%1350) /* ty=(Tensor[(256), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
  %1352 = @func_11755() /* ty=(Tensor[(5, 16, 14), float32],) */;
  %1353 = @func_14007() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1354 = @func_12611() /* ty=Tensor[(6, 14, 10), float32] */;
  %1355 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %1356 = %1348.3;
  %1357 = %1351.0;
  %1358 = %1352.0;
  %1359 = %1353.0;
  (%1354, %1355, %1356, %var_22270, %var_22271, %var_22272, %1357, %var_22290, %1358, %1359)
}

def @func_10430() -> Tensor[(6, 14, 10), float32] {
  @func_9379() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_7825() -> Tensor[(6, 14, 10), float32] {
  @func_7410() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_8870() -> (Tensor[(6, 14, 10), float32],) {
  %1360 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1361 = %1360.0;
  (%1361,)
}

def @func_1630(%var_1586: Tensor[(3, 7, 5), float64], %var_1612: Tensor[(32, 24), float32]) -> (Tensor[(3, 7, 5), float64], Tensor[(4, 16, 12), float64], Tensor[(32, 24), float32], Tensor[(192, 4), float32], Tensor[(325), int64]) {
  %1362 = cast(meta[relay.Constant][92] /* ty=Tensor[(3, 7, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 5), float64] */;
  %1363 = shape_of(%var_1586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1364 = cast(%var_1586, dtype="float64") /* ty=Tensor[(3, 7, 5), float64] */;
  %1365 = dyn.reshape(%1362, %1363, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1366 = cast(%var_1612, dtype="float32") /* ty=Tensor[(32, 24), float32] */;
  %1367 = reshape(%1366, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %1368 = @func_122(%1367) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %1369 = cast(meta[relay.Constant][93] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %1370 = cast(%var_1612, dtype="float64") /* ty=Tensor[(32, 24), float64] */;
  %1371 = reshape(%1369, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %1372 = reshape(%1370, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %1373 = @func_1546(%1371, %1372) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %1374 = floor_divide(%1364, %1365) /* ty=Tensor[(3, 7, 5), float64] */;
  %1375 = %1368.1;
  %1376 = %1373.2;
  (%1374, %1375, %var_1612, %1376, meta[relay.Constant][93] /* ty=Tensor[(325), int64] */)
}

def @func_7643(%var_7636: Tensor[(768), float64]) -> (Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) {
  %1377 = cast(meta[relay.Constant][94] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1378 = cast(meta[relay.Constant][94] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1379 = reshape(%1377, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %1380 = reshape(%1378, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %1381 = @func_5698(%1379, %1380) /* ty=(Tensor[(2, 15, 3), bool],) */;
  %1382 = cast(meta[relay.Constant][95] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
  %1383 = reshape(%1382, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
  %1384 = @func_7265(%1383) /* ty=Tensor[(5, 15, 9), float32] */;
  %1385 = cast(%1384, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %1386 = reshape(%1385, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
  %1387 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1388 = %1387.0;
  %1389 = cast(%1388, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
  %1390 = log2(%1389) /* ty=Tensor[(6, 14, 10), float64] */;
  %1391 = cast(%1388, dtype="int8") /* ty=Tensor[(6, 14, 10), int8] */;
  %1392 = shape_of(%1390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1393 = cast(%1390, dtype="int8") /* ty=Tensor[(6, 14, 10), int8] */;
  %1394 = dyn.reshape(%1391, %1392, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1395 = cast(meta[relay.Constant][96] /* ty=Tensor[(13, 25), int64] */, dtype="int64") /* ty=Tensor[(13, 25), int64] */;
  %1396 = cast(%var_7636, dtype="float64") /* ty=Tensor[(768), float64] */;
  %1397 = reshape(%1395, newshape=[325]) /* ty=Tensor[(325), int64] */;
  %1398 = reshape(%1396, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %1399 = @func_7477(%1397, %1398) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), bool], Tensor[(325), int64], Tensor[(768), float64]) */;
  %1400 = %1381.0;
  %1401 = @func_7265(%1386) /* ty=Tensor[(5, 15, 9), float32] */;
  %1402 = logical_xor(%1393, %1394) /* ty=Tensor[(6, 14, 10), int8] */;
  %1403 = %1399.0;
  (%1400, meta[relay.Constant][94] /* ty=Tensor[(90), float64] */, %1384, meta[relay.Constant][95] /* ty=Tensor[(675), float32] */, %1401, %1402, %1403, meta[relay.Constant][96] /* ty=Tensor[(13, 25), int64] */, %var_7636)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8280() -> (Tensor[(6, 14, 10), float32],) {
  @func_8278() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_9296() -> (Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) {
  @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */
}

def @func_8331(%var_8329: Tensor[(9), float32], %var_8330: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float32], Tensor[(768), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(256), float64]) {
  %11 = fn (%var_8319: Tensor[(9), float32], %var_8320: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float32], Tensor[(768), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(256), float64]) {
    %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
    %1 = reshape(%0, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
    %2 = @func_122(%1) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
    %3 = cast(%var_8319, dtype="float32") /* ty=Tensor[(9), float32] */;
    %4 = cast(%var_8320, dtype="float64") /* ty=Tensor[(256), float64] */;
    %5 = reshape(%3, newshape=[3, 3]) /* ty=Tensor[(3, 3), float32] */;
    %6 = reshape(%4, newshape=[256]) /* ty=Tensor[(256), float64] */;
    %7 = @func_8046(%5, %6) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %8 = @func_7741() /* ty=Tensor[(6, 14, 10), float32] */;
    %9 = %2.0;
    %10 = %7.3;
    (%8, %9, meta[relay.Constant][0] /* ty=Tensor[(768), float32] */, %10, %var_8319, %var_8320)
  };
  %11(%var_8329, %var_8330) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float32], Tensor[(768), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(256), float64]) */
}

def @func_14880(%var_14879: Tensor[(6, 1, 15), float32]) -> (Tensor[(6, ?, 15), int64], Tensor[(6, 1, 15), float64]) {
  %21 = fn (%var_14868: Tensor[(6, 1, 15), float32]) -> (Tensor[(6, ?, 15), int64], Tensor[(6, 1, 15), float64]) {
    %12 = cast(%var_14868, dtype="float32") /* ty=Tensor[(6, 1, 15), float32] */;
    %13 = cos(%12) /* ty=Tensor[(6, 1, 15), float32] */;
    %14 = cast(%var_14868, dtype="int64") /* ty=Tensor[(6, 1, 15), int64] */;
    %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
    %16 = cast(%13, dtype="int64") /* ty=Tensor[(6, 1, 15), int64] */;
    %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %18 = cast(%13, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
    %19 = maximum(%16, %17) /* ty=Tensor[(6, ?, 15), int64] */;
    %20 = log10(%18) /* ty=Tensor[(6, 1, 15), float64] */;
    (%19, %20)
  };
  %21(%var_14879) /* ty=(Tensor[(6, ?, 15), int64], Tensor[(6, 1, 15), float64]) */
}

def @func_20495(%var_20494: Tensor[(16, 10, 1), float64]) -> (Tensor[(16, 10, 1), float64],) {
  %24 = fn (%var_20482: Tensor[(16, 10, 1), float64]) -> (Tensor[(16, 10, 1), float64],) {
    %22 = cast(%var_20482, dtype="float64") /* ty=Tensor[(16, 10, 1), float64] */;
    %23 = exp(%22) /* ty=Tensor[(16, 10, 1), float64] */;
    (%23,)
  };
  %24(%var_20494) /* ty=(Tensor[(16, 10, 1), float64],) */
}

def @func_21130() -> Tensor[(6, 14, 10), float32] {
  @func_15709() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_21253() -> Tensor[(6, 14, 10), float32] {
  @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_19351() -> (Tensor[(6, 14, 10), float32], uint32) {
  %25 = @func_8835() /* ty=(Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) */;
  %26 = @func_15340() /* ty=Tensor[(6, 14, 10), float32] */;
  %27 = %25.1;
  (%26, %27)
}

def @func_11802() -> Tensor[(6, 14, 10), float32] {
  %29 = fn () -> Tensor[(6, 14, 10), float32] {
    %28 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
    %28.1
  };
  %29() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_6714(%var_6700: uint32) -> (Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], Tensor[(14, 5, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(1, 14, 10), bool], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) {
  %30 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 30), float64] */, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 30), float64] */, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %32 = reshape(%30, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %33 = reshape(%31, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %34 = @func_5698(%32, %33) /* ty=(Tensor[(2, 15, 3), bool],) */;
  %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %36 = reshape(%35, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %37 = @func_4363(%36) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) */;
  %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 5), float32] */;
  %39 = cosh(%38) /* ty=Tensor[(14, 5, 5), float32] */;
  %40 = cast(%39, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %41 = cast(%39, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %43 = cast(meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %44 = cast(meta[relay.Constant][5] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %45 = cast(%var_6700, dtype="uint32") /* ty=uint32 */;
  %46 = cast(meta[relay.Constant][6] /* ty=Tensor[(35, 4), uint32] */, dtype="uint32") /* ty=Tensor[(35, 4), uint32] */;
  %47 = reshape(%42, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %48 = reshape(%43, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %49 = reshape(%44, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %50 = reshape(%45, newshape=[]) /* ty=uint32 */;
  %51 = reshape(%46, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %52 = @func_2482(%47, %48, %49, %50, %51) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %53 = %34.0;
  %54 = %37.1;
  %55 = log(%40) /* ty=Tensor[(14, 5, 5), float64] */;
  %56 = acos(%41) /* ty=Tensor[(14, 5, 5), float64] */;
  %57 = %52.9;
  (%53, meta[relay.Constant][1] /* ty=Tensor[(3, 30), float64] */, %54, meta[relay.Constant][2] /* ty=Tensor[(1680), float64] */, %55, %56, %57, meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, meta[relay.Constant][5] /* ty=Tensor[(325), int64] */, %var_6700, meta[relay.Constant][6] /* ty=Tensor[(35, 4), uint32] */)
}

def @func_7431(%var_7429: Tensor[(4, 8, 3), float64]) -> (Tensor[(4, 8, 3), float64],) {
  @func_7428(%var_7429) /* ty=(Tensor[(4, 8, 3), float64],) */
}

def @func_9470() -> Tensor[(6, 14, 10), float32] {
  %59 = fn () -> Tensor[(6, 14, 10), float32] {
    %58 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %58.0
  };
  %59() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_21414() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  @func_21412() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */
}

def @func_16705() -> Tensor[(6, 14, 10), float32] {
  @func_9469() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_20941() -> Tensor[(256), float64] {
  %60 = fn () -> Tensor[(256), float64] {
    @func_12013() /* ty=Tensor[(256), float64] */
  };
  %60() /* ty=Tensor[(256), float64] */
}

def @func_20272(%var_20260: Tensor[(105), float64], %var_20261: Tensor[(325, 1), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325, 105), bool], Tensor[(256), float64]) {
  %61 = @func_16363() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %62 = cast(%var_20260, dtype="float64") /* ty=Tensor[(105), float64] */;
  %63 = cast(%var_20261, dtype="int64") /* ty=Tensor[(325, 1), int64] */;
  %64 = reshape(%62, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %65 = reshape(%63, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %66 = @func_6947(%64, %65) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) */;
  %67 = cast(%var_20260, dtype="bool") /* ty=Tensor[(105), bool] */;
  %68 = cast(%var_20261, dtype="bool") /* ty=Tensor[(325, 1), bool] */;
  %69 = @func_11710() /* ty=(Tensor[(256), float64],) */;
  %70 = %61.1;
  %71 = %66.0;
  %72 = less_equal(%67, %68) /* ty=Tensor[(325, 105), bool] */;
  %73 = %69.0;
  (%70, %71, %72, %73)
}

def @func_10603(%var_10601: Tensor[(1, 11, 7), float32]) -> (Tensor[(1, 11, 7), float32],) {
  @func_10600(%var_10601) /* ty=(Tensor[(1, 11, 7), float32],) */
}

def @func_16214(%var_16212: Tensor[(1680), float64], %var_16213: Tensor[(216), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], uint32, Tensor[(216), float64]) {
  %86 = fn (%var_16201: Tensor[(1680), float64], %var_16209: Tensor[(216), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], uint32, Tensor[(216), float64]) {
    %74 = @func_10113() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %75 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
    %76 = cast(%var_16201, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %77 = reshape(%76, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
    %78 = @func_4363(%77) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) */;
    %79 = cast(%var_16209, dtype="float64") /* ty=Tensor[(216), float64] */;
    %80 = reshape(%79, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %81 = @func_10841(%80) /* ty=(uint32, Tensor[(216), float64], Tensor[(216), float64], Tensor[(140), uint32]) */;
    %82 = %74.0;
    %83 = %75.1;
    %84 = %78.1;
    %85 = %81.0;
    (%82, %83, %84, %var_16201, %85, %var_16209)
  };
  %86(%var_16212, %var_16213) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], uint32, Tensor[(216), float64]) */
}

def @func_9504() -> Tensor[(6, 14, 10), float32] {
  @func_9502() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_4366(%var_4364: Tensor[(14, 12, 10), float64]) -> (Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) {
  @func_4363(%var_4364) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) */
}

def @func_7973(%var_7971: uint32, %var_7972: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) {
  @func_7969(%var_7971, %var_7972) /* ty=(Tensor[(6, 14, 10), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) */
}

def @func_19925(%var_19924: Tensor[(64, 12), float64]) -> (Tensor[(105), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(64, 12), float64], Tensor[(?, 11, 7), bool], Tensor[(7, 10, 12), float32]) {
  %106 = fn (%var_19903: Tensor[(64, 12), float64]) -> (Tensor[(105), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(64, 12), float64], Tensor[(?, 11, 7), bool], Tensor[(7, 10, 12), float32]) {
    %87 = cast(%var_19903, dtype="float64") /* ty=Tensor[(64, 12), float64] */;
    %88 = reshape(%87, newshape=[768]) /* ty=Tensor[(768), float64] */;
    %89 = @func_7643(%88) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) */;
    %90 = cast(meta[relay.Constant][7] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
    %91 = reshape(%90, newshape=[1, 11, 7]) /* ty=Tensor[(1, 11, 7), float32] */;
    %92 = @func_10600(%91) /* ty=(Tensor[(1, 11, 7), float32],) */;
    %93 = %92.0;
    %94 = cast(meta[relay.Constant][7] /* ty=Tensor[(77), float32] */, dtype="bool") /* ty=Tensor[(77), bool] */;
    %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
    %96 = cast(%93, dtype="bool") /* ty=Tensor[(1, 11, 7), bool] */;
    %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %98 = @func_16705() /* ty=Tensor[(6, 14, 10), float32] */;
    %99 = cast(%98, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
    %100 = reshape(%99, newshape=[7, 10, 12]) /* ty=Tensor[(7, 10, 12), float32] */;
    %101 = @func_17375() /* ty=Tensor[(105), float64] */;
    %102 = @func_19100() /* ty=Tensor[(256), float64] */;
    %103 = %89.6;
    %104 = logical_and(%96, %97) /* ty=Tensor[(?, 11, 7), bool] */;
    %105 = @func_13713(%100) /* ty=Tensor[(7, 10, 12), float32] */;
    (%101, %102, %98, %103, %var_19903, %104, %105)
  };
  %106(%var_19924) /* ty=(Tensor[(105), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(64, 12), float64], Tensor[(?, 11, 7), bool], Tensor[(7, 10, 12), float32]) */
}

def @func_14833() -> (Tensor[(6, 14, 10), float32],) {
  %109 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %107 = @func_11039() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %108 = %107.0;
    (%108,)
  };
  %109() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_7394() -> (Tensor[(6, 14, 10), float32],) {
  @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_7825() -> Tensor[(6, 14, 10), float32] {
  @func_7410() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_22324(%var_22320: Tensor[(224), float32], %var_22321: Tensor[(14, 3), float64], %var_22322: Tensor[(1680), float64], %var_22323: Tensor[(216), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(14, 3), float64], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32]) {
  @func_22318(%var_22320, %var_22321, %var_22322, %var_22323) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(14, 3), float64], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_9727() -> (Tensor[(256), float64], Tensor[(8, 16, 2), float64]) {
  %110 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
  %111 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
  %112 = %110.2;
  %113 = %111.1;
  (%112, %113)
}

def @func_14039(%var_14021: Tensor[(3, 30), float64], %var_14036: Tensor[(60), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(60), float64]) {
  %114 = @func_11039() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %115 = cast(%var_14021, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %116 = cast(%var_14021, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %117 = reshape(%115, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %118 = reshape(%116, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %119 = @func_5698(%117, %118) /* ty=(Tensor[(2, 15, 3), bool],) */;
  %120 = @func_10530() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %121 = cast(%var_14036, dtype="float64") /* ty=Tensor[(60), float64] */;
  %122 = reshape(%121, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %123 = @func_10234(%122) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) */;
  %124 = %114.1;
  %125 = %119.0;
  %126 = %120.5;
  %127 = %123.1;
  (%124, %125, %var_14021, %126, %127, %var_14036)
}

def @func_6488(%var_6477: Tensor[(2, 16, 1), float32]) -> (Tensor[(2, 16, 1), float32], Tensor[(2, 15, 3), bool], Tensor[(90, 1), float64]) {
  %128 = cast(%var_6477, dtype="float32") /* ty=Tensor[(2, 16, 1), float32] */;
  %129 = cast(meta[relay.Constant][8] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %130 = cast(meta[relay.Constant][8] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %131 = reshape(%129, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %132 = reshape(%130, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %133 = @func_5698(%131, %132) /* ty=(Tensor[(2, 15, 3), bool],) */;
  %134 = cos(%128) /* ty=Tensor[(2, 16, 1), float32] */;
  %135 = %133.0;
  (%134, %135, meta[relay.Constant][8] /* ty=Tensor[(90, 1), float64] */)
}

def @func_12765() -> Tensor[(6, 14, 10), float32] {
  %136 = @func_12552() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %136.1
}

def @func_14936() -> (Tensor[(5, 16, 14), float32],) {
  @func_14934() /* ty=(Tensor[(5, 16, 14), float32],) */
}

def @func_7795(%var_7768: Tensor[(6, 14, 10), float32], %var_7782: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) {
  %137 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %138 = %137.0;
  %139 = cast(%var_7768, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%138, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %143 = cast(%var_7782, dtype="float64") /* ty=Tensor[(256), float64] */;
  %144 = reshape(%143, newshape=[4, 16, 4]) /* ty=Tensor[(4, 16, 4), float64] */;
  %145 = cast(%var_7768, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %146 = mod(%141, %142) /* ty=Tensor[(6, 14, 10), float32] */;
  %147 = @func_5662(%144) /* ty=Tensor[(4, 16, 4), float64] */;
  %148 = sqrt(%145) /* ty=Tensor[(6, 14, 10), float32] */;
  (%146, %147, %var_7782, %148)
}

def @func_16091() -> (Tensor[(42), float64],) {
  %149 = @func_10900() /* ty=Tensor[(42), float64] */;
  (%149,)
}

def @func_15179(%var_15177: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) {
  @func_15176(%var_15177) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) */
}

def @func_10237(%var_10235: Tensor[(5, 3, 4), float64]) -> (Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) {
  @func_10234(%var_10235) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) */
}

def @func_15711() -> Tensor[(6, 14, 10), float32] {
  @func_15709() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_14294() -> Tensor[(6, 14, 10), float32] {
  @func_13945() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_19997() -> (Tensor[(11, 11, 12), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %153 = fn () -> (Tensor[(11, 11, 12), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
    %150 = @func_15772() /* ty=Tensor[(11, 11, 12), float32] */;
    %151 = @func_18581() /* ty=Tensor[(6, 14, 10), float32] */;
    %152 = @func_13482() /* ty=Tensor[(256), float64] */;
    (%150, %151, %152)
  };
  %153() /* ty=(Tensor[(11, 11, 12), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */
}

def @func_16439() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %154 = @func_12268() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %155 = @func_15324() /* ty=(Tensor[(256), float64],) */;
  %156 = @func_13360() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %157 = @func_11326() /* ty=(Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */;
  %158 = %154.0;
  %159 = %155.0;
  %160 = %156.0;
  %161 = @func_10813() /* ty=Tensor[(6, 14, 10), float32] */;
  %162 = %157.2;
  (%158, %159, %160, %161, %162)
}

def @func_16093() -> (Tensor[(42), float64],) {
  @func_16091() /* ty=(Tensor[(42), float64],) */
}

def @func_16363() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %163 = @func_9611() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %164 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %165 = @func_9353() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %166 = %163.1;
  %167 = %164.0;
  %168 = %165.0;
  (%166, %167, %168)
}

def @func_20623() -> (Tensor[(6, 14, 10), float32],) {
  %171 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %169 = @func_8633() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %170 = %169.2;
    (%170,)
  };
  %171() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_14915() -> Tensor[(7, 11, 5), float64] {
  @func_14075() /* ty=Tensor[(7, 11, 5), float64] */
}

def @func_20461() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(140), uint32]) {
  @func_20459() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(140), uint32]) */
}

def @func_12904() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %172 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
  %173 = @func_11801() /* ty=Tensor[(6, 14, 10), float32] */;
  (%172, %173)
}

def @func_8837() -> (Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) {
  @func_8835() /* ty=(Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) */
}

def @func_13918() -> Tensor[(6, 14, 10), float32] {
  @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_20718() -> Tensor[(6, 14, 10), float32] {
  @func_15385() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_18644() -> (Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) {
  @func_18642() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) */
}

def @func_19753(%var_19752: Tensor[(216), float64]) -> (Tensor[(256), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %189 = fn (%var_19699: Tensor[(216), float64]) -> (Tensor[(256), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
    %174 = @func_18010() /* ty=(Tensor[(256), float64], Tensor[(256), float64], Tensor[(256), float64]) */;
    %175 = @func_10530() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %176 = cast(%var_19699, dtype="float64") /* ty=Tensor[(216), float64] */;
    %177 = cast(meta[relay.Constant][9] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %178 = cast(meta[relay.Constant][10] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %179 = reshape(%176, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %180 = reshape(%177, newshape=[]) /* ty=uint32 */;
    %181 = reshape(%178, newshape=[35, 4]) /* ty=Tensor[(35, 4), uint32] */;
    %182 = @func_9900(%179, %180, %181) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
    %183 = @func_15449() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %184 = %174.2;
    %185 = %175.1;
    %186 = %182.2;
    %187 = %183.0;
    %188 = @func_19100() /* ty=Tensor[(256), float64] */;
    (%184, %185, %186, %var_19699, meta[relay.Constant][9] /* ty=uint32 */, meta[relay.Constant][10] /* ty=Tensor[(140), uint32] */, %187, %188)
  };
  %189(%var_19752) /* ty=(Tensor[(256), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */
}

def @func_10264(%var_10257: Tensor[(3, 16, 8), float64]) -> Tensor[(3, 16, 8), float64] {
  %190 = cast(%var_10257, dtype="float64") /* ty=Tensor[(3, 16, 8), float64] */;
  %191 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(3, 16, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 16, 8), float64] */, dtype="float64") /* ty=Tensor[(3, 16, 8), float64] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%192, %193) /* ty=Tensor[(3, 16, 8), float64] */
}

def @func_15387() -> Tensor[(6, 14, 10), float32] {
  @func_15385() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_19403() -> (Tensor[(256), float64],) {
  @func_19401() /* ty=(Tensor[(256), float64],) */
}

def @func_10234(%var_10209: Tensor[(5, 3, 4), float64]) -> (Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) {
  %194 = cast(%var_10209, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %195 = cast(meta[relay.Constant][12] /* ty=Tensor[(45, 2), float64] */, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %196 = cast(meta[relay.Constant][12] /* ty=Tensor[(45, 2), float64] */, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %197 = reshape(%195, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %198 = reshape(%196, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %199 = @func_5698(%197, %198) /* ty=(Tensor[(2, 15, 3), bool],) */;
  %200 = sqrt(%194) /* ty=Tensor[(5, 3, 4), float64] */;
  %201 = %199.0;
  (%200, %201, meta[relay.Constant][12] /* ty=Tensor[(45, 2), float64] */)
}

def @func_12719(%var_12718: Tensor[(60), float64]) -> (Tensor[(256), float64], Tensor[(45, 2), float64], Tensor[(60), float64], Tensor[(768), float64]) {
  %209 = fn (%var_12706: Tensor[(60), float64]) -> (Tensor[(256), float64], Tensor[(45, 2), float64], Tensor[(60), float64], Tensor[(768), float64]) {
    %202 = cast(%var_12706, dtype="float64") /* ty=Tensor[(60), float64] */;
    %203 = reshape(%202, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
    %204 = @func_10234(%203) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) */;
    %205 = @func_11230() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) */;
    %206 = @func_10248() /* ty=Tensor[(256), float64] */;
    %207 = %204.2;
    %208 = %205.4;
    (%206, %207, %var_12706, %208)
  };
  %209(%var_12718) /* ty=(Tensor[(256), float64], Tensor[(45, 2), float64], Tensor[(60), float64], Tensor[(768), float64]) */
}

def @func_15774() -> Tensor[(11, 11, 12), float32] {
  @func_15772() /* ty=Tensor[(11, 11, 12), float32] */
}

def @func_18581() -> Tensor[(6, 14, 10), float32] {
  %210 = @func_10530() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %210.0
}

def @func_21246(%var_21244: Tensor[(5, 11, 13), uint64], %var_21245: Tensor[(5, 11, 13), uint64]) -> (Tensor[(5, 11, 13), uint64],) {
  %216 = fn (%var_21230: Tensor[(5, 11, 13), uint64], %var_21231: Tensor[(5, 11, 13), uint64]) -> (Tensor[(5, 11, 13), uint64],) {
    %211 = cast(%var_21231, dtype="uint64") /* ty=Tensor[(5, 11, 13), uint64] */;
    %212 = shape_of(%var_21230, dtype="int32") /* ty=Tensor[(3), int32] */;
    %213 = cast(%var_21230, dtype="uint64") /* ty=Tensor[(5, 11, 13), uint64] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %215 = bitwise_and(%213, %214) /* ty=Tensor[(5, 11, 13), uint64] */;
    (%215,)
  };
  %216(%var_21244, %var_21245) /* ty=(Tensor[(5, 11, 13), uint64],) */
}

def @func_14603(%var_14601: Tensor[(90), float64], %var_14602: Tensor[(60), float64]) -> (Tensor[(35, 10), int32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64]) {
  @func_14599(%var_14601, %var_14602) /* ty=(Tensor[(35, 10), int32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64]) */
}

def @func_11144(%var_11139: int64, %var_11140: Tensor[(1, 14, 3), int64]) -> (Tensor[(1, 14, 3), int64],) {
  %217 = cast(%var_11139, dtype="int64") /* ty=int64 */;
  %218 = cast(%var_11140, dtype="int64") /* ty=Tensor[(1, 14, 3), int64] */;
  %219 = multiply(%217, %218) /* ty=Tensor[(1, 14, 3), int64] */;
  (%219,)
}

def @func_11883() -> Tensor[(6, 14, 10), float32] {
  %220 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_10813() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %220() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_20370() -> (Tensor[(224), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_20368() /* ty=(Tensor[(224), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_16675() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %224 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
    %221 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
    %222 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
    %223 = %221.4;
    (%222, %223)
  };
  %224() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */
}

def @func_18720() -> Tensor[(4, 16, 4), float64] {
  %225 = @func_13013() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 16, 4), float64]) */;
  %225.2
}

def @func_18045() -> Tensor[(6, 14, 10), float32] {
  %227 = fn () -> Tensor[(6, 14, 10), float32] {
    %226 = @func_17748() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64]) */;
    %226.1
  };
  %227() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_11068() -> (Tensor[(256), float64],) {
  %230 = fn () -> (Tensor[(256), float64],) {
    %228 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
    %229 = %228.0;
    (%229,)
  };
  %230() /* ty=(Tensor[(256), float64],) */
}

def @func_20368() -> (Tensor[(224), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %231 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %232 = @func_11872() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %233 = @func_16674() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
  %234 = %231.1;
  %235 = %232.0;
  %236 = @func_19364() /* ty=Tensor[(6, 14, 10), float32] */;
  %237 = %233.0;
  (%234, %235, %236, %237)
}

def @func_22063(%var_22061: Tensor[(35, 4), uint32], %var_22062: Tensor[(77), float32]) -> (Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64], Tensor[(6, 14, 10), float32], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(35, 4), uint32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(77), float32], Tensor[(77), float32], Tensor[(35, 10), float64]) {
  @func_22059(%var_22061, %var_22062) /* ty=(Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64], Tensor[(6, 14, 10), float32], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(35, 4), uint32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(77), float32], Tensor[(77), float32], Tensor[(35, 10), float64]) */
}

def @func_22147() -> (Tensor[(6, 14, 10), float32],) {
  %239 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %238 = @func_21503() /* ty=Tensor[(6, 14, 10), float32] */;
    (%238,)
  };
  %239() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_7827() -> Tensor[(6, 14, 10), float32] {
  @func_7825() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_18722() -> Tensor[(4, 16, 4), float64] {
  @func_18720() /* ty=Tensor[(4, 16, 4), float64] */
}

def @func_19170() -> (uint32, Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %240 = @func_8835() /* ty=(Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) */;
  %241 = %240.1;
  %242 = @func_17131() /* ty=Tensor[(6, 14, 10), float32] */;
  %243 = @func_12213() /* ty=Tensor[(256), float64] */;
  (%241, %242, %243)
}

def @func_20849() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_20847() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10013() -> (Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %256 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %244 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
    %245 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
    %246 = cast(%245, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
    %247 = %244.1;
    %248 = cast(%247, dtype="float64") /* ty=Tensor[(8, 16, 2), float64] */;
    %249 = reshape(%246, newshape=[6, 14, 10]) /* ty=Tensor[(6, 14, 10), float32] */;
    %250 = reshape(%248, newshape=[256]) /* ty=Tensor[(256), float64] */;
    %251 = @func_7795(%249, %250) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
    %252 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %253 = %251.0;
    %254 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
    %255 = %252.0;
    (%245, %247, %253, %254, %255)
  };
  %256() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10813() -> Tensor[(6, 14, 10), float32] {
  %257 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %257.0
}

def @func_14008() -> (Tensor[(6, 14, 10), float32],) {
  %259 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %258 = @func_12765() /* ty=Tensor[(6, 14, 10), float32] */;
    (%258,)
  };
  %259() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_15889() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float64]) {
  %263 = fn () -> (Tensor[(256), float64], Tensor[(6, 14, 10), float64]) {
    %260 = @func_11326() /* ty=(Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */;
    %261 = @func_10248() /* ty=Tensor[(256), float64] */;
    %262 = %260.0;
    (%261, %262)
  };
  %263() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float64]) */
}

def @func_21029() -> Tensor[(6, 14, 10), float32] {
  %264 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_10813() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %264() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_16267(%var_16262: Tensor[(96), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 8, 3), float64], Tensor[(96), float64], Tensor[(6, 14, 10), float32]) {
  %265 = @func_14361() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(140), uint32]) */;
  %266 = cast(%var_16262, dtype="float64") /* ty=Tensor[(96), float64] */;
  %267 = reshape(%266, newshape=[4, 8, 3]) /* ty=Tensor[(4, 8, 3), float64] */;
  %268 = @func_7428(%267) /* ty=(Tensor[(4, 8, 3), float64],) */;
  %269 = @func_12765() /* ty=Tensor[(6, 14, 10), float32] */;
  %270 = %265.1;
  %271 = @func_10248() /* ty=Tensor[(256), float64] */;
  %272 = %268.0;
  %273 = @func_10813() /* ty=Tensor[(6, 14, 10), float32] */;
  (%269, %270, %271, %272, %var_16262, %273)
}

def @func_10199(%var_10197: Tensor[(9), float32], %var_10198: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(256), float64], Tensor[(8, 16, 2), float64], Tensor[(1680), int16], Tensor[(5, 13, 5), int64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32]) {
  %308 = fn (%var_10148: Tensor[(9), float32], %var_10190: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(256), float64], Tensor[(8, 16, 2), float64], Tensor[(1680), int16], Tensor[(5, 13, 5), int64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32]) {
    %274 = cast(%var_10148, dtype="float32") /* ty=Tensor[(9), float32] */;
    %275 = cast(meta[relay.Constant][13] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %276 = reshape(%274, newshape=[3, 3]) /* ty=Tensor[(3, 3), float32] */;
    %277 = reshape(%275, newshape=[256]) /* ty=Tensor[(256), float64] */;
    %278 = @func_8046(%276, %277) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %279 = cast(meta[relay.Constant][13] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %280 = reshape(%279, newshape=[8, 16, 2]) /* ty=Tensor[(8, 16, 2), float64] */;
    %281 = @func_5732(%280) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(8, 16, 2), float64]) */;
    %282 = cast(%var_10148, dtype="float32") /* ty=Tensor[(9), float32] */;
    %283 = cast(meta[relay.Constant][13] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %284 = reshape(%282, newshape=[3, 3]) /* ty=Tensor[(3, 3), float32] */;
    %285 = reshape(%283, newshape=[256]) /* ty=Tensor[(256), float64] */;
    %286 = @func_8046(%284, %285) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %287 = %286.4;
    %288 = cast(meta[relay.Constant][14] /* ty=Tensor[(1680), float64] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
    %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(1), int32] */;
    %290 = cast(%287, dtype="int16") /* ty=Tensor[(1680), int16] */;
    %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?), int16] */;
    %292 = cast(meta[relay.Constant][15] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %293 = cast(meta[relay.Constant][15] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %294 = cast(meta[relay.Constant][16] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
    %295 = cast(meta[relay.Constant][17] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %296 = cast(%var_10190, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %297 = reshape(%292, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
    %298 = reshape(%293, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
    %299 = reshape(%294, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
    %300 = reshape(%295, newshape=[]) /* ty=uint32 */;
    %301 = reshape(%296, newshape=[140]) /* ty=Tensor[(140), uint32] */;
    %302 = @func_2482(%297, %298, %299, %300, %301) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
    %303 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
    %304 = %278.9;
    %305 = %281.1;
    %306 = minimum(%290, %291) /* ty=Tensor[(1680), int16] */;
    %307 = %302.5;
    (%303, %304, %var_10148, meta[relay.Constant][13] /* ty=Tensor[(256), float64] */, %305, %306, %307, meta[relay.Constant][15] /* ty=Tensor[(216), float64] */, meta[relay.Constant][16] /* ty=Tensor[(325), int64] */, meta[relay.Constant][17] /* ty=uint32 */, %var_10190)
  };
  %308(%var_10197, %var_10198) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(256), float64], Tensor[(8, 16, 2), float64], Tensor[(1680), int16], Tensor[(5, 13, 5), int64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32]) */
}

def @func_7412() -> Tensor[(6, 14, 10), float32] {
  @func_7410() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_18583() -> Tensor[(6, 14, 10), float32] {
  @func_18581() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_5698(%var_5692: Tensor[(2, 15, 3), float64], %var_5693: Tensor[(2, 15, 3), float64]) -> (Tensor[(2, 15, 3), bool],) {
  %309 = cast(%var_5693, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %310 = shape_of(%var_5692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%var_5692, dtype="bool") /* ty=Tensor[(2, 15, 3), bool] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %313 = equal(%311, %312) /* ty=Tensor[(2, 15, 3), bool] */;
  (%313,)
}

def @func_12213() -> Tensor[(256), float64] {
  @func_12013() /* ty=Tensor[(256), float64] */
}

def @func_11327() -> (Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) {
  %324 = fn () -> (Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) {
    %314 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %315 = %314.0;
    %316 = cast(%315, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
    %317 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 14, 10), float32] */, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
    %318 = shape_of(%315, dtype="int32") /* ty=Tensor[(3), int32] */;
    %319 = cast(%315, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
    %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %321 = sin(%316) /* ty=Tensor[(6, 14, 10), float64] */;
    %322 = divide(%319, %320) /* ty=Tensor[(6, 14, 10), float64] */;
    %323 = @func_7729() /* ty=Tensor[(6, 14, 10), float32] */;
    (%321, %322, %323)
  };
  %324() /* ty=(Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */
}

def @func_13656() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %332 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %325 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %326 = @func_9611() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %327 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
    %328 = @func_12668() /* ty=Tensor[(6, 14, 10), float32] */;
    %329 = %325.0;
    %330 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
    %331 = %326.1;
    (%327, %328, %329, %330, %331)
  };
  %332() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_11711() -> (Tensor[(256), float64],) {
  %335 = fn () -> (Tensor[(256), float64],) {
    %333 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
    %334 = %333.2;
    (%334,)
  };
  %335() /* ty=(Tensor[(256), float64],) */
}

def @func_15566(%var_15563: Tensor[(13, 25), int64], %var_15564: Tensor[(77), float32], %var_15565: Tensor[(90), float64]) -> (uint32, Tensor[(325, 1), int64], Tensor[(105), float64], Tensor[(13, 25), int64], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64], Tensor[(256), float64], uint32) {
  %358 = fn (%var_15513: Tensor[(13, 25), int64], %var_15527: Tensor[(77), float32], %var_15531: Tensor[(90), float64]) -> (uint32, Tensor[(325, 1), int64], Tensor[(105), float64], Tensor[(13, 25), int64], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64], Tensor[(256), float64], uint32) {
    %336 = @func_13278() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) */;
    %337 = cast(meta[relay.Constant][19] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %338 = cast(%var_15513, dtype="int64") /* ty=Tensor[(13, 25), int64] */;
    %339 = reshape(%337, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %340 = reshape(%338, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
    %341 = @func_6947(%339, %340) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) */;
    %342 = cast(%var_15527, dtype="float32") /* ty=Tensor[(77), float32] */;
    %343 = reshape(%342, newshape=[1, 11, 7]) /* ty=Tensor[(1, 11, 7), float32] */;
    %344 = @func_10600(%343) /* ty=(Tensor[(1, 11, 7), float32],) */;
    %345 = cast(%var_15531, dtype="float64") /* ty=Tensor[(90), float64] */;
    %346 = cast(meta[relay.Constant][20] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %347 = reshape(%345, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %348 = reshape(%346, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %349 = @func_14599(%347, %348) /* ty=(Tensor[(35, 10), int32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64]) */;
    %350 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
    %351 = @func_13278() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) */;
    %352 = %336.2;
    %353 = %341.5;
    %354 = %344.0;
    %355 = %349.1;
    %356 = %350.0;
    %357 = %351.2;
    (%352, %353, meta[relay.Constant][19] /* ty=Tensor[(105), float64] */, %var_15513, %354, %var_15527, %355, %var_15531, meta[relay.Constant][20] /* ty=Tensor[(60), float64] */, %356, %357)
  };
  %358(%var_15563, %var_15564, %var_15565) /* ty=(uint32, Tensor[(325, 1), int64], Tensor[(105), float64], Tensor[(13, 25), int64], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64], Tensor[(256), float64], uint32) */
}

def @func_13180() -> Tensor[(256), float64] {
  @func_13178() /* ty=Tensor[(256), float64] */
}

def @func_20129() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %359 = @func_10655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) */;
  %360 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %361 = %359.1;
  (%360, %361)
}

def @func_2963(%var_2961: Tensor[(14, 16, 1), float32], %var_2962: Tensor[(42), float64]) -> (Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) {
  @func_2959(%var_2961, %var_2962) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */
}

def @func_21894(%var_21892: Tensor[(7, 10, 12), float32]) -> (Tensor[(7, 10, 12), uint8], Tensor[(7, 10, 12), float32]) {
  @func_21891(%var_21892) /* ty=(Tensor[(7, 10, 12), uint8], Tensor[(7, 10, 12), float32]) */
}

def @func_16483() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) {
  %362 = @func_10012() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %363 = @func_8870() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %364 = @func_15059() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(35, 10), int32], Tensor[(77), float32], Tensor[(7, 11, 5), float64]) */;
  %365 = %362.0;
  %366 = %363.0;
  %367 = %364.4;
  (%365, %366, %367)
}

def @func_9262() -> (Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) {
  %378 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) {
    %368 = cast(meta[relay.Constant][21] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %369 = cast(meta[relay.Constant][22] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %370 = cast(meta[relay.Constant][23] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %371 = reshape(%368, newshape=[2, 7, 11]) /* ty=Tensor[(2, 7, 11), float32] */;
    %372 = reshape(%369, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %373 = reshape(%370, newshape=[256, 1]) /* ty=Tensor[(256, 1), float64] */;
    %374 = @func_6828(%371, %372, %373) /* ty=(Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) */;
    %375 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
    %376 = %374.3;
    %377 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
    (%375, %376, meta[relay.Constant][21] /* ty=Tensor[(154), float32] */, meta[relay.Constant][22] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][23] /* ty=Tensor[(256), float64] */, %377)
  };
  %378() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */
}

def @func_12767() -> Tensor[(6, 14, 10), float32] {
  @func_12765() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_14315(%var_14314: Tensor[(77), float32]) -> (Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) {
  %387 = fn (%var_14306: Tensor[(77), float32]) -> (Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) {
    %379 = @func_13459() /* ty=(Tensor[(35, 10), int32],) */;
    %380 = cast(%var_14306, dtype="float32") /* ty=Tensor[(77), float32] */;
    %381 = reshape(%380, newshape=[1, 11, 7]) /* ty=Tensor[(1, 11, 7), float32] */;
    %382 = @func_10600(%381) /* ty=(Tensor[(1, 11, 7), float32],) */;
    %383 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %384 = %379.0;
    %385 = %382.0;
    %386 = %383.1;
    (%384, %385, %var_14306, %386)
  };
  %387(%var_14314) /* ty=(Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10600(%var_10597: Tensor[(1, 11, 7), float32]) -> (Tensor[(1, 11, 7), float32],) {
  %388 = cast(%var_10597, dtype="float32") /* ty=Tensor[(1, 11, 7), float32] */;
  %389 = log(%388) /* ty=Tensor[(1, 11, 7), float32] */;
  (%389,)
}

def @func_13460() -> (Tensor[(35, 10), int32],) {
  %392 = fn () -> (Tensor[(35, 10), int32],) {
    %390 = @func_11230() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) */;
    %391 = %390.7;
    (%391,)
  };
  %392() /* ty=(Tensor[(35, 10), int32],) */
}

def @func_10876() -> (Tensor[(6, 14, 10), float32],) {
  %395 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %393 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %394 = %393.0;
    (%394,)
  };
  %395() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_2225(%var_2223: uint32, %var_2224: Tensor[(1, 14, 10), uint32]) -> Tensor[(1, 14, 10), bool] {
  %398 = fn (%var_2209: uint32, %var_2210: Tensor[(1, 14, 10), uint32]) -> Tensor[(1, 14, 10), bool] {
    %396 = cast(%var_2209, dtype="bool") /* ty=bool */;
    %397 = cast(%var_2210, dtype="bool") /* ty=Tensor[(1, 14, 10), bool] */;
    not_equal(%396, %397) /* ty=Tensor[(1, 14, 10), bool] */
  };
  %398(%var_2223, %var_2224) /* ty=Tensor[(1, 14, 10), bool] */
}

def @func_12402() -> Tensor[(6, 14, 10), float32] {
  %400 = fn () -> Tensor[(6, 14, 10), float32] {
    %399 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %399.0
  };
  %400() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_16365() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_16363() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_18839(%var_18837: Tensor[(60), float64], %var_18838: Tensor[(5, 44), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32], Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 11, 5), float64], Tensor[(5, 44), float64]) {
  %424 = fn (%var_18816: Tensor[(60), float64], %var_18828: Tensor[(5, 44), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32], Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 11, 5), float64], Tensor[(5, 44), float64]) {
    %401 = @func_16884() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %402 = cast(meta[relay.Constant][24] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %403 = cast(meta[relay.Constant][24] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %404 = cast(meta[relay.Constant][25] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
    %405 = cast(meta[relay.Constant][26] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %406 = cast(meta[relay.Constant][27] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %407 = reshape(%402, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
    %408 = reshape(%403, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
    %409 = reshape(%404, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
    %410 = reshape(%405, newshape=[]) /* ty=uint32 */;
    %411 = reshape(%406, newshape=[140]) /* ty=Tensor[(140), uint32] */;
    %412 = @func_2482(%407, %408, %409, %410, %411) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
    %413 = cast(%var_18816, dtype="float64") /* ty=Tensor[(60), float64] */;
    %414 = reshape(%413, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %415 = @func_12717(%414) /* ty=(Tensor[(256), float64], Tensor[(45, 2), float64], Tensor[(60), float64], Tensor[(768), float64]) */;
    %416 = cast(%var_18828, dtype="float64") /* ty=Tensor[(5, 44), float64] */;
    %417 = reshape(%416, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float64] */;
    %418 = @func_14105(%417) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(7, 11, 5), float64]) */;
    %419 = %401.2;
    %420 = @func_16705() /* ty=Tensor[(6, 14, 10), float32] */;
    %421 = %412.13;
    %422 = %415.2;
    %423 = %418.1;
    (%419, %420, %421, meta[relay.Constant][24] /* ty=Tensor[(216), float64] */, meta[relay.Constant][25] /* ty=Tensor[(325), int64] */, meta[relay.Constant][26] /* ty=uint32 */, meta[relay.Constant][27] /* ty=Tensor[(140), uint32] */, %422, %var_18816, %423, %var_18828)
  };
  %424(%var_18837, %var_18838) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32], Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 11, 5), float64], Tensor[(5, 44), float64]) */
}

def @func_7799(%var_7797: Tensor[(6, 14, 10), float32], %var_7798: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) {
  @func_7795(%var_7797, %var_7798) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */
}

def @func_16485() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) {
  @func_16483() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) */
}

def @func_7522() -> (Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) {
  %425 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %426 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 64), float64] */, dtype="float64") /* ty=Tensor[(4, 64), float64] */;
  %427 = reshape(%426, newshape=[8, 16, 2]) /* ty=Tensor[(8, 16, 2), float64] */;
  %428 = @func_5732(%427) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(8, 16, 2), float64]) */;
  %429 = %425.0;
  %430 = %428.1;
  (%429, %430, meta[relay.Constant][28] /* ty=Tensor[(4, 64), float64] */)
}

def @func_11385() -> (Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], Tensor[(60), float64]) {
  %436 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], Tensor[(60), float64]) {
    %431 = cast(meta[relay.Constant][29] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %432 = reshape(%431, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
    %433 = @func_10234(%432) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) */;
    %434 = @func_11370() /* ty=Tensor[(6, 14, 10), float32] */;
    %435 = %433.2;
    (%434, %435, meta[relay.Constant][29] /* ty=Tensor[(60), float64] */)
  };
  %436() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], Tensor[(60), float64]) */
}

def @func_12161() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_12159() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10432() -> Tensor[(6, 14, 10), float32] {
  @func_10430() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_12215() -> Tensor[(256), float64] {
  @func_12213() /* ty=Tensor[(256), float64] */
}

def @func_12051() -> Tensor[(6, 14, 10), float32] {
  @func_12049() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_7730() -> Tensor[(6, 14, 10), float32] {
  %438 = fn () -> Tensor[(6, 14, 10), float32] {
    %437 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %437.0
  };
  %438() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_10113() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %439 = @func_8278() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %440 = @func_10012() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %441 = %439.0;
  %442 = %440.4;
  (%441, %442)
}

def @func_11372() -> Tensor[(6, 14, 10), float32] {
  @func_11370() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_10530() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %443 = cast(meta[relay.Constant][30] /* ty=Tensor[(9), float32] */, dtype="float32") /* ty=Tensor[(9), float32] */;
  %444 = reshape(%443, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), float32] */;
  %445 = @func_5006(%444) /* ty=(Tensor[(1, 9, 1), float32],) */;
  %446 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %447 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %448 = @func_10357() /* ty=Tensor[(256), float64] */;
  %449 = %445.0;
  %450 = %446.0;
  %451 = @func_9502() /* ty=Tensor[(6, 14, 10), float32] */;
  (%447, %448, %449, meta[relay.Constant][30] /* ty=Tensor[(9), float32] */, %450, %451)
}

def @func_6899() -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) {
  %457 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) {
    %452 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %453 = cast(meta[relay.Constant][31] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %454 = reshape(%453, newshape=[4, 16, 4]) /* ty=Tensor[(4, 16, 4), float64] */;
    %455 = %452.0;
    %456 = @func_5662(%454) /* ty=Tensor[(4, 16, 4), float64] */;
    (%455, %456, meta[relay.Constant][31] /* ty=Tensor[(256), float64] */)
  };
  %457() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */
}

def @func_8634() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %462 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %458 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %459 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
    %460 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
    %461 = %458.0;
    (%459, %460, %461)
  };
  %462() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_12177() -> Tensor[(6, 14, 10), float32] {
  %463 = @func_9008() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %463.0
}

def @func_14816() -> (Tensor[(6, 14, 10), float32],) {
  @func_14814() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_10774(%var_10729: Tensor[(60), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(5, 3, 4), float32]) {
  %464 = cast(%var_10729, dtype="float64") /* ty=Tensor[(60), float64] */;
  %465 = reshape(%464, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %466 = @func_10234(%465) /* ty=(Tensor[(5, 3, 4), float64], Tensor[(2, 15, 3), bool], Tensor[(45, 2), float64]) */;
  %467 = %466.0;
  %468 = cast(%467, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %469 = rsqrt(%468) /* ty=Tensor[(5, 3, 4), float64] */;
  %470 = cast(%467, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%469, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %474 = not_equal(%472, %473) /* ty=Tensor[(5, 3, 4), bool] */;
  %475 = cast(%467, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
  %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%474, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %479 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
  %480 = divide(%477, %478) /* ty=Tensor[(5, 3, 4), float32] */;
  (%479, %var_10729, %480)
}

def @func_9502() -> Tensor[(6, 14, 10), float32] {
  @func_7410() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_11927() -> Tensor[(6, 14, 10), float32] {
  @func_9469() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_11872() -> (Tensor[(6, 14, 10), float32],) {
  %481 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %482 = %481.0;
  (%482,)
}

def @func_9900(%var_9895: Tensor[(216), float64], %var_9897: uint32, %var_9898: Tensor[(35, 4), uint32]) -> (Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) {
  %483 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
  %484 = cast(%var_9895, dtype="float64") /* ty=Tensor[(216), float64] */;
  %485 = cast(%var_9895, dtype="float64") /* ty=Tensor[(216), float64] */;
  %486 = cast(meta[relay.Constant][32] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %487 = cast(%var_9897, dtype="uint32") /* ty=uint32 */;
  %488 = cast(%var_9898, dtype="uint32") /* ty=Tensor[(35, 4), uint32] */;
  %489 = reshape(%484, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %490 = reshape(%485, newshape=[3, 9, 8]) /* ty=Tensor[(3, 9, 8), float64] */;
  %491 = reshape(%486, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %492 = reshape(%487, newshape=[]) /* ty=uint32 */;
  %493 = reshape(%488, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %494 = @func_2482(%489, %490, %491, %492, %493) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %495 = %483.1;
  %496 = %494.0;
  (%495, %496, %var_9895, meta[relay.Constant][32] /* ty=Tensor[(325), int64] */, %var_9897, %var_9898)
}

def @func_7477(%var_7469: Tensor[(325), int64], %var_7470: Tensor[(768), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), bool], Tensor[(325), int64], Tensor[(768), float64]) {
  %497 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %498 = cast(%var_7469, dtype="int64") /* ty=Tensor[(325), int64] */;
  %499 = cast(%var_7470, dtype="float64") /* ty=Tensor[(768), float64] */;
  %500 = reshape(%498, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %501 = reshape(%499, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %502 = @func_1546(%500, %501) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %503 = %497.0;
  %504 = %502.3;
  (%503, %504, %var_7469, %var_7470)
}

def @func_12600(%var_12578: Tensor[(6, 14, 10), float32]) -> (Tensor[(6, 14, 10), uint16], int64, Tensor[(42), uint16]) {
  %505 = @func_11370() /* ty=Tensor[(6, 14, 10), float32] */;
  %506 = cast(%var_12578, dtype="uint16") /* ty=Tensor[(6, 14, 10), uint16] */;
  %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%505, dtype="uint16") /* ty=Tensor[(6, 14, 10), uint16] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %510 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %511 = cast(meta[relay.Constant][33] /* ty=Tensor[(42), int64] */, dtype="int64") /* ty=Tensor[(42), int64] */;
  %512 = reshape(%510, newshape=[]) /* ty=int64 */;
  %513 = reshape(%511, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), int64] */;
  %514 = @func_11144(%512, %513) /* ty=(Tensor[(1, 14, 3), int64],) */;
  %515 = %514.0;
  %516 = cast(%515, dtype="uint16") /* ty=Tensor[(1, 14, 3), uint16] */;
  %517 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(42), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %518 = cast(meta[relay.Constant][33] /* ty=Tensor[(42), int64] */, dtype="uint16") /* ty=Tensor[(42), uint16] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %520 = bitwise_and(%508, %509) /* ty=Tensor[(6, 14, 10), uint16] */;
  %521 = subtract(%518, %519) /* ty=Tensor[(42), uint16] */;
  (%520, 4 /* ty=int64 */, %521)
}

def @func_11695() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], uint32, Tensor[(6, 14, 10), float32]) {
  @func_11693() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], uint32, Tensor[(6, 14, 10), float32]) */
}

def @func_18658() -> (Tensor[(6, 14, 10), float32],) {
  %524 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %522 = @func_14210() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %523 = %522.0;
    (%523,)
  };
  %524() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_20131() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_20129() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_11874() -> (Tensor[(6, 14, 10), float32],) {
  @func_11872() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_13785(%var_13783: Tensor[(1, 9), float32], %var_13784: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(1, 9), float32], Tensor[(256), float64]) {
  %532 = fn (%var_13744: Tensor[(1, 9), float32], %var_13745: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(1, 9), float32], Tensor[(256), float64]) {
    %525 = cast(%var_13744, dtype="float32") /* ty=Tensor[(1, 9), float32] */;
    %526 = cast(%var_13745, dtype="float64") /* ty=Tensor[(256), float64] */;
    %527 = reshape(%525, newshape=[9]) /* ty=Tensor[(9), float32] */;
    %528 = reshape(%526, newshape=[256]) /* ty=Tensor[(256), float64] */;
    %529 = @func_8328(%527, %528) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float32], Tensor[(768), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(256), float64]) */;
    %530 = @func_12947() /* ty=Tensor[(6, 14, 10), float32] */;
    %531 = %529.4;
    (%530, %531, %var_13744, %var_13745)
  };
  %532(%var_13783, %var_13784) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(1, 9), float32], Tensor[(256), float64]) */
}

def @func_16270(%var_16268: Tensor[(96), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 8, 3), float64], Tensor[(96), float64], Tensor[(6, 14, 10), float32]) {
  @func_16267(%var_16268) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 8, 3), float64], Tensor[(96), float64], Tensor[(6, 14, 10), float32]) */
}

def @func_19791(%var_19790: Tensor[(84, 20), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(154), float32], Tensor[(84, 20), float64]) {
  %540 = fn (%var_19783: Tensor[(84, 20), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(154), float32], Tensor[(84, 20), float64]) {
    %533 = cast(meta[relay.Constant][34] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %534 = cast(%var_19783, dtype="float64") /* ty=Tensor[(84, 20), float64] */;
    %535 = reshape(%533, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %536 = reshape(%534, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %537 = @func_18524(%535, %536) /* ty=(Tensor[(256), float64], Tensor[(224), float32], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(6, 14, 10), float32]) */;
    %538 = @func_19008() /* ty=Tensor[(6, 14, 10), float32] */;
    %539 = %537.4;
    (%538, %539, meta[relay.Constant][34] /* ty=Tensor[(154), float32] */, %var_19783)
  };
  %540(%var_19790) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(154), float32], Tensor[(84, 20), float64]) */
}

def @func_15998(%var_15996: float64, %var_15997: Tensor[(14, 13, 5), float64]) -> (Tensor[(14, 13, 5), bool], Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], Tensor[(140), uint32]) {
  %550 = fn (%var_15936: float64, %var_15937: Tensor[(14, 13, 5), float64]) -> (Tensor[(14, 13, 5), bool], Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], Tensor[(140), uint32]) {
    %541 = cast(%var_15936, dtype="bool") /* ty=bool */;
    %542 = cast(%var_15937, dtype="bool") /* ty=Tensor[(14, 13, 5), bool] */;
    %543 = cast(%var_15936, dtype="uint32") /* ty=uint32 */;
    %544 = cast(meta[relay.Constant][35] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %545 = reshape(%543, newshape=[]) /* ty=uint32 */;
    %546 = reshape(%544, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
    %547 = less_equal(%541, %542) /* ty=Tensor[(14, 13, 5), bool] */;
    %548 = @func_14474() /* ty=Tensor[(6, 14, 10), float32] */;
    %549 = @func_2222(%545, %546) /* ty=Tensor[(1, 14, 10), bool] */;
    (%547, %548, %549, meta[relay.Constant][35] /* ty=Tensor[(140), uint32] */)
  };
  %550(%var_15996, %var_15997) /* ty=(Tensor[(14, 13, 5), bool], Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], Tensor[(140), uint32]) */
}

def @func_16731() -> (Tensor[(256), float64],) {
  %553 = fn () -> (Tensor[(256), float64],) {
    %551 = @func_15324() /* ty=(Tensor[(256), float64],) */;
    %552 = %551.0;
    (%552,)
  };
  %553() /* ty=(Tensor[(256), float64],) */
}

def @func_16985() -> Tensor[(256), float64] {
  %554 = fn () -> Tensor[(256), float64] {
    @func_12213() /* ty=Tensor[(256), float64] */
  };
  %554() /* ty=Tensor[(256), float64] */
}

def @func_15381() -> (Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 10, 12), float32], Tensor[(7, 10, 12), float32]) {
  %565 = fn () -> (Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 10, 12), float32], Tensor[(7, 10, 12), float32]) {
    %555 = @func_14934() /* ty=(Tensor[(5, 16, 14), float32],) */;
    %556 = @func_9008() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %557 = %556.0;
    %558 = cast(%557, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
    %559 = reshape(%558, newshape=[7, 10, 12]) /* ty=Tensor[(7, 10, 12), float32] */;
    %560 = cast(%557, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
    %561 = reshape(%560, newshape=[7, 10, 12]) /* ty=Tensor[(7, 10, 12), float32] */;
    %562 = %555.0;
    %563 = @func_13713(%559) /* ty=Tensor[(7, 10, 12), float32] */;
    %564 = @func_13713(%561) /* ty=Tensor[(7, 10, 12), float32] */;
    (%562, %557, %563, %564)
  };
  %565() /* ty=(Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 10, 12), float32], Tensor[(7, 10, 12), float32]) */
}

def @func_19401() -> (Tensor[(256), float64],) {
  %566 = @func_12025() /* ty=Tensor[(256), float64] */;
  (%566,)
}

def @func_13407() -> (Tensor[(256), float64],) {
  %567 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
  %568 = %567.0;
  (%568,)
}

def @func_17676() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %572 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %569 = @func_16439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %570 = %569.2;
    %571 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
    (%570, %571)
  };
  %572() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_12504() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %576 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %573 = @func_9502() /* ty=Tensor[(6, 14, 10), float32] */;
    %574 = @func_7741() /* ty=Tensor[(6, 14, 10), float32] */;
    %575 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
    (%573, %574, %575)
  };
  %576() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_21777() -> Tensor[(6, 14, 10), float32] {
  %577 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %577() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_7741() -> Tensor[(6, 14, 10), float32] {
  @func_7345() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_18564() -> (Tensor[(6, 14, 10), float32],) {
  %580 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %578 = @func_17675() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %579 = %578.0;
    (%579,)
  };
  %580() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_9683(%var_9682: Tensor[(16, 4, 12), float64]) -> (Tensor[(16, 4, 12), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %587 = fn (%var_9616: Tensor[(16, 4, 12), float64]) -> (Tensor[(16, 4, 12), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %581 = cast(%var_9616, dtype="float64") /* ty=Tensor[(16, 4, 12), float64] */;
    %582 = @func_9558() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %583 = atanh(%581) /* ty=Tensor[(16, 4, 12), float64] */;
    %584 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
    %585 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
    %586 = %582.0;
    (%583, %584, %585, %586)
  };
  %587(%var_9682) /* ty=(Tensor[(16, 4, 12), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10358() -> Tensor[(256), float64] {
  %588 = fn () -> Tensor[(256), float64] {
    @func_10248() /* ty=Tensor[(256), float64] */
  };
  %588() /* ty=Tensor[(256), float64] */
}

def @func_21220() -> Tensor[(6, 14, 10), float32] {
  @func_21218() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_16387() -> (Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(6, 14, 10), float32]) {
  %595 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(6, 14, 10), float32]) {
    %589 = @func_16363() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %590 = @func_16091() /* ty=(Tensor[(42), float64],) */;
    %591 = @func_14814() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %592 = %589.2;
    %593 = %590.0;
    %594 = %591.0;
    (%592, %593, %594)
  };
  %595() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(6, 14, 10), float32]) */
}

def @func_11041() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_11039() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10093(%var_10091: Tensor[(42), float64], %var_10092: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float64], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) {
  %611 = fn (%var_10046: Tensor[(42), float64], %var_10057: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float64], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) {
    %596 = @func_8870() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %597 = %596.0;
    %598 = cast(%597, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
    %599 = cast(meta[relay.Constant][36] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %600 = cast(%var_10046, dtype="float64") /* ty=Tensor[(42), float64] */;
    %601 = reshape(%599, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
    %602 = reshape(%600, newshape=[42]) /* ty=Tensor[(42), float64] */;
    %603 = @func_2959(%601, %602) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
    %604 = cast(meta[relay.Constant][37] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %605 = cast(%var_10057, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %606 = reshape(%604, newshape=[]) /* ty=uint32 */;
    %607 = reshape(%605, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
    %608 = cos(%598) /* ty=Tensor[(6, 14, 10), float64] */;
    %609 = %603.0;
    %610 = @func_2222(%606, %607) /* ty=Tensor[(1, 14, 10), bool] */;
    (%608, %609, meta[relay.Constant][36] /* ty=Tensor[(224), float32] */, %var_10046, %610, meta[relay.Constant][37] /* ty=uint32 */, %var_10057)
  };
  %611(%var_10091, %var_10092) /* ty=(Tensor[(6, 14, 10), float64], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) */
}

def @func_17074(%var_17073: Tensor[(90), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64]) {
  %620 = fn (%var_17069: Tensor[(90), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64]) {
    %612 = @func_8964() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */;
    %613 = cast(%var_17069, dtype="float64") /* ty=Tensor[(90), float64] */;
    %614 = cast(meta[relay.Constant][38] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %615 = reshape(%613, newshape=[3, 30]) /* ty=Tensor[(3, 30), float64] */;
    %616 = reshape(%614, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %617 = @func_14039(%615, %616) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(60), float64]) */;
    %618 = %612.0;
    %619 = %617.5;
    (%618, %619, %var_17069, meta[relay.Constant][38] /* ty=Tensor[(60), float64] */)
  };
  %620(%var_17073) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64]) */
}

def @func_14474() -> Tensor[(6, 14, 10), float32] {
  @func_11927() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_13857() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %621 = @func_9008() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %622 = @func_11710() /* ty=(Tensor[(256), float64],) */;
  %623 = %621.0;
  %624 = %622.0;
  (%623, %624)
}

def @func_13920() -> Tensor[(6, 14, 10), float32] {
  @func_13918() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_21595(%var_21594: Tensor[(105), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(105), float64], Tensor[(325), float64], Tensor[(325), float32]) {
  %645 = fn (%var_21557: Tensor[(105), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(105), float64], Tensor[(325), float64], Tensor[(325), float32]) {
    %625 = @func_16884() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %626 = @func_20577() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %627 = cast(%var_21557, dtype="float64") /* ty=Tensor[(105), float64] */;
    %628 = cast(meta[relay.Constant][39] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
    %629 = reshape(%627, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %630 = reshape(%628, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
    %631 = @func_20272(%629, %630) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325, 105), bool], Tensor[(256), float64]) */;
    %632 = cast(meta[relay.Constant][39] /* ty=Tensor[(325), int64] */, dtype="float64") /* ty=Tensor[(325), float64] */;
    %633 = acos(%632) /* ty=Tensor[(325), float64] */;
    %634 = cast(%633, dtype="float64") /* ty=Tensor[(325), float64] */;
    %635 = sqrt(%634) /* ty=Tensor[(325), float64] */;
    %636 = cast(%635, dtype="float64") /* ty=Tensor[(325), float64] */;
    %637 = cast(%635, dtype="float32") /* ty=Tensor[(325), float32] */;
    %638 = atan(%637) /* ty=Tensor[(325), float32] */;
    %639 = cast(%638, dtype="float32") /* ty=Tensor[(325), float32] */;
    %640 = %625.0;
    %641 = %626.1;
    %642 = %631.0;
    %643 = exp(%636) /* ty=Tensor[(325), float64] */;
    %644 = log10(%639) /* ty=Tensor[(325), float32] */;
    (%640, %641, %642, %var_21557, %643, %644)
  };
  %645(%var_21594) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(105), float64], Tensor[(325), float64], Tensor[(325), float32]) */
}

def @func_9294() -> (Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) {
  %646 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %647 = cast(meta[relay.Constant][40] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %648 = reshape(%647, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %649 = @func_9089(%648) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %650 = %646.0;
  %651 = %649.2;
  (%650, %651, meta[relay.Constant][40] /* ty=Tensor[(42), float64] */)
}

def @func_14361() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(140), uint32]) {
  %652 = @func_13407() /* ty=(Tensor[(256), float64],) */;
  %653 = cast(meta[relay.Constant][41] /* ty=Tensor[(9), float32] */, dtype="float32") /* ty=Tensor[(9), float32] */;
  %654 = cast(meta[relay.Constant][42] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %655 = reshape(%653, newshape=[9]) /* ty=Tensor[(9), float32] */;
  %656 = reshape(%654, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %657 = @func_10196(%655, %656) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(256), float64], Tensor[(8, 16, 2), float64], Tensor[(1680), int16], Tensor[(5, 13, 5), int64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(140), uint32]) */;
  %658 = %652.0;
  %659 = %657.0;
  (%658, %659, meta[relay.Constant][41] /* ty=Tensor[(9), float32] */, meta[relay.Constant][42] /* ty=Tensor[(140), uint32] */)
}

def @func_20073(%var_20071: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float32], Tensor[(140), uint32], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32]) {
  @func_20070(%var_20071) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(140), uint32], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32]) */
}

def @func_14476() -> Tensor[(6, 14, 10), float32] {
  @func_14474() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_5732(%var_5722: Tensor[(8, 16, 2), float64]) -> (Tensor[(8, 16, 2), float64], Tensor[(8, 16, 2), float64]) {
  %660 = cast(%var_5722, dtype="float64") /* ty=Tensor[(8, 16, 2), float64] */;
  %661 = cast(%var_5722, dtype="float64") /* ty=Tensor[(8, 16, 2), float64] */;
  %662 = acosh(%660) /* ty=Tensor[(8, 16, 2), float64] */;
  %663 = acos(%661) /* ty=Tensor[(8, 16, 2), float64] */;
  (%662, %663)
}

def @func_12906() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_12904() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_18642() -> (Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) {
  %664 = @func_16483() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 11, 5), float64]) */;
  %665 = @func_7741() /* ty=Tensor[(6, 14, 10), float32] */;
  %666 = %664.2;
  (%665, %666)
}

def @func_11148(%var_11146: int64, %var_11147: Tensor[(1, 14, 3), int64]) -> (Tensor[(1, 14, 3), int64],) {
  @func_11144(%var_11146, %var_11147) /* ty=(Tensor[(1, 14, 3), int64],) */
}

def @func_14363() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(140), uint32]) {
  @func_14361() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(140), uint32]) */
}

def @func_10430() -> Tensor[(6, 14, 10), float32] {
  @func_9379() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_11929() -> Tensor[(6, 14, 10), float32] {
  @func_11927() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_1860(%var_1858: Tensor[(1, 6, 7), float64]) -> Tensor[(1, 6, 7), float64] {
  @func_1857(%var_1858) /* ty=Tensor[(1, 6, 7), float64] */
}

def @func_22059(%var_22035: Tensor[(35, 4), uint32], %var_22045: Tensor[(77), float32]) -> (Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64], Tensor[(6, 14, 10), float32], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(35, 4), uint32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(77), float32], Tensor[(77), float32], Tensor[(35, 10), float64]) {
  %667 = cast(meta[relay.Constant][43] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %668 = cast(meta[relay.Constant][44] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %669 = reshape(%667, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %670 = reshape(%668, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %671 = @func_14599(%669, %670) /* ty=(Tensor[(35, 10), int32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64]) */;
  %672 = @func_13360() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %673 = cast(meta[relay.Constant][45] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %674 = cast(meta[relay.Constant][46] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %675 = cast(%var_22035, dtype="uint32") /* ty=Tensor[(35, 4), uint32] */;
  %676 = reshape(%673, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %677 = reshape(%674, newshape=[]) /* ty=uint32 */;
  %678 = reshape(%675, newshape=[35, 4]) /* ty=Tensor[(35, 4), uint32] */;
  %679 = @func_9900(%676, %677, %678) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
  %680 = cast(%var_22045, dtype="float32") /* ty=Tensor[(77), float32] */;
  %681 = reshape(%680, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %682 = @func_14313(%681) /* ty=(Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) */;
  %683 = cast(meta[relay.Constant][47] /* ty=Tensor[(35, 10), int32] */, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %684 = tan(%683) /* ty=Tensor[(35, 10), float64] */;
  %685 = cast(%684, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %686 = sin(%685) /* ty=Tensor[(35, 10), float64] */;
  %687 = @func_13459() /* ty=(Tensor[(35, 10), int32],) */;
  %688 = %687.0;
  %689 = cast(meta[relay.Constant][47] /* ty=Tensor[(35, 10), int32] */, dtype="uint32") /* ty=Tensor[(35, 10), uint32] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(2), int32] */;
  %691 = cast(%688, dtype="uint32") /* ty=Tensor[(35, 10), uint32] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %693 = bitwise_or(%691, %692) /* ty=Tensor[(35, 10), uint32] */;
  %694 = cast(%693, dtype="int8") /* ty=Tensor[(35, 10), int8] */;
  %695 = shape_of(%688, dtype="int32") /* ty=Tensor[(2), int32] */;
  %696 = cast(%688, dtype="int8") /* ty=Tensor[(35, 10), int8] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %698 = minimum(%696, %697) /* ty=Tensor[(35, 10), int8] */;
  %699 = cast(%698, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %700 = shape_of(%686, dtype="int32") /* ty=Tensor[(2), int32] */;
  %701 = cast(%686, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %703 = %671.3;
  %704 = %672.0;
  %705 = %679.2;
  %706 = @func_12069() /* ty=Tensor[(6, 14, 10), float32] */;
  %707 = @func_8396() /* ty=Tensor[(6, 14, 10), float32] */;
  %708 = %682.2;
  %709 = floor_mod(%701, %702) /* ty=Tensor[(35, 10), float64] */;
  (%703, meta[relay.Constant][43] /* ty=Tensor[(90), float64] */, meta[relay.Constant][44] /* ty=Tensor[(60), float64] */, %704, %705, meta[relay.Constant][45] /* ty=Tensor[(216), float64] */, meta[relay.Constant][46] /* ty=uint32 */, %var_22035, %706, %707, %708, %var_22045, %709)
}

def @func_18915() -> Tensor[(256), float64] {
  %711 = fn () -> Tensor[(256), float64] {
    %710 = @func_13857() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
    %710.1
  };
  %711() /* ty=Tensor[(256), float64] */
}

def @func_9353() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %712 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %713 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %714 = %712.0;
  %715 = @func_7345() /* ty=Tensor[(6, 14, 10), float32] */;
  %716 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %717 = %713.3;
  (%714, %715, %716, %717)
}

def @func_20578() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %720 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %718 = @func_12947() /* ty=Tensor[(6, 14, 10), float32] */;
    %719 = @func_15709() /* ty=Tensor[(6, 14, 10), float32] */;
    (%718, %719)
  };
  %720() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_13880(%var_13864: Tensor[(8, 12, 5), uint64]) -> (Tensor[(8, 12, 5), bool],) {
  %721 = cast(%var_13864, dtype="bool") /* ty=Tensor[(8, 12, 5), bool] */;
  %722 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(8, 12, 5), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(meta[relay.Constant][48] /* ty=Tensor[(8, 12, 5), uint64] */, dtype="bool") /* ty=Tensor[(8, 12, 5), bool] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %725 = less_equal(%723, %724) /* ty=Tensor[(8, 12, 5), bool] */;
  (%725,)
}

def @func_8398() -> Tensor[(6, 14, 10), float32] {
  @func_8396() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_12613() -> Tensor[(6, 14, 10), float32] {
  @func_12611() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_14770(%var_14744: float32, %var_14745: Tensor[(2, 1, 6), float32]) -> (Tensor[(2, 1, 6), uint64],) {
  %726 = cast(%var_14744, dtype="bool") /* ty=bool */;
  %727 = cast(%var_14745, dtype="bool") /* ty=Tensor[(2, 1, 6), bool] */;
  %728 = less_equal(%726, %727) /* ty=Tensor[(2, 1, 6), bool] */;
  %729 = cast(%728, dtype="uint64") /* ty=Tensor[(2, 1, 6), uint64] */;
  %730 = cast(%var_14744, dtype="uint64") /* ty=uint64 */;
  %731 = right_shift(%729, %730) /* ty=Tensor[(2, 1, 6), uint64] */;
  (%731,)
}

def @func_15268() -> (Tensor[(256), float64],) {
  @func_15266() /* ty=(Tensor[(256), float64],) */
}

def @func_7428(%var_7425: Tensor[(4, 8, 3), float64]) -> (Tensor[(4, 8, 3), float64],) {
  %732 = cast(%var_7425, dtype="float64") /* ty=Tensor[(4, 8, 3), float64] */;
  %733 = atan(%732) /* ty=Tensor[(4, 8, 3), float64] */;
  (%733,)
}

def @func_9559() -> (Tensor[(6, 14, 10), float32],) {
  %735 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %734 = @func_7825() /* ty=Tensor[(6, 14, 10), float32] */;
    (%734,)
  };
  %735() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_11114(%var_11112: Tensor[(3, 6, 1), int64], %var_11113: Tensor[(3, 6, 12), int64]) -> (Tensor[(3, 6, 12), int64], Tensor[(6, 14, 10), float32]) {
  %741 = fn (%var_11096: Tensor[(3, 6, 1), int64], %var_11097: Tensor[(3, 6, 12), int64]) -> (Tensor[(3, 6, 12), int64], Tensor[(6, 14, 10), float32]) {
    %736 = cast(%var_11096, dtype="int64") /* ty=Tensor[(3, 6, 1), int64] */;
    %737 = cast(%var_11097, dtype="int64") /* ty=Tensor[(3, 6, 12), int64] */;
    %738 = @func_11021() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32]) */;
    %739 = right_shift(%736, %737) /* ty=Tensor[(3, 6, 12), int64] */;
    %740 = %738.0;
    (%739, %740)
  };
  %741(%var_11112, %var_11113) /* ty=(Tensor[(3, 6, 12), int64], Tensor[(6, 14, 10), float32]) */
}

def @func_11693() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], uint32, Tensor[(6, 14, 10), float32]) {
  %742 = @func_11384() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(45, 2), float64], Tensor[(60), float64]) */;
  %743 = @func_10655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) */;
  %744 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %745 = @func_11370() /* ty=Tensor[(6, 14, 10), float32] */;
  %746 = @func_7825() /* ty=Tensor[(6, 14, 10), float32] */;
  %747 = %742.1;
  %748 = %743.4;
  %749 = %744.0;
  (%745, %746, %747, %748, %749)
}

def @func_19172() -> (uint32, Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  @func_19170() /* ty=(uint32, Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */
}

def @func_17469() -> (Tensor[(256), float64],) {
  %752 = fn () -> (Tensor[(256), float64],) {
    %750 = @func_13857() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
    %751 = %750.1;
    (%751,)
  };
  %752() /* ty=(Tensor[(256), float64],) */
}

def @func_18114() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %753 = @func_14814() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %754 = @func_16896() /* ty=Tensor[(256), float64] */;
  %755 = %753.0;
  %756 = @func_17317() /* ty=Tensor[(6, 14, 10), float32] */;
  (%754, %755, %756)
}

def @func_16123() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(840), float32]) {
  %757 = @func_15324() /* ty=(Tensor[(256), float64],) */;
  %758 = cast(meta[relay.Constant][49] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %759 = %757.0;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(256), float64] */;
  %761 = reshape(%758, newshape=[6, 14, 10]) /* ty=Tensor[(6, 14, 10), float32] */;
  %762 = reshape(%760, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %763 = @func_7795(%761, %762) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %764 = %763.0;
  (%759, %764, meta[relay.Constant][49] /* ty=Tensor[(840), float32] */)
}

def @func_10901() -> Tensor[(42), float64] {
  %766 = fn () -> Tensor[(42), float64] {
    %765 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
    %765.2
  };
  %766() /* ty=Tensor[(42), float64] */
}

def @func_18262() -> (Tensor[(6, 14, 10), float32], uint32) {
  %770 = fn () -> (Tensor[(6, 14, 10), float32], uint32) {
    %767 = @func_8835() /* ty=(Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) */;
    %768 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
    %769 = %767.2;
    (%768, %769)
  };
  %770() /* ty=(Tensor[(6, 14, 10), float32], uint32) */
}

def @func_19353() -> (Tensor[(6, 14, 10), float32], uint32) {
  @func_19351() /* ty=(Tensor[(6, 14, 10), float32], uint32) */
}

def @func_21290() -> (Tensor[(7, 11, 5), float64], Tensor[(224), float32]) {
  @func_21288() /* ty=(Tensor[(7, 11, 5), float64], Tensor[(224), float32]) */
}

def @func_12026() -> Tensor[(256), float64] {
  %772 = fn () -> Tensor[(256), float64] {
    %771 = @func_11710() /* ty=(Tensor[(256), float64],) */;
    %771.0
  };
  %772() /* ty=Tensor[(256), float64] */
}

def @func_20720() -> Tensor[(6, 14, 10), float32] {
  @func_20718() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_21366() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64]) {
  %779 = fn () -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64]) {
    %773 = @func_21142() /* ty=(Tensor[(256), float64],) */;
    %774 = @func_18275() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %775 = @func_13278() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) */;
    %776 = %773.0;
    %777 = %774.0;
    %778 = %775.1;
    (%776, %777, %778)
  };
  %779() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64]) */
}

def @func_12015() -> Tensor[(256), float64] {
  @func_12013() /* ty=Tensor[(256), float64] */
}

def @func_21143() -> (Tensor[(256), float64],) {
  %781 = fn () -> (Tensor[(256), float64],) {
    %780 = @func_13482() /* ty=Tensor[(256), float64] */;
    (%780,)
  };
  %781() /* ty=(Tensor[(256), float64],) */
}

def @func_21808() -> Tensor[(256), float64] {
  %782 = @func_11067() /* ty=(Tensor[(256), float64],) */;
  %782.0
}

def @func_15772() -> Tensor[(11, 11, 12), float32] {
  %783 = cast(meta[relay.Constant][50] /* ty=Tensor[(11, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 12), float32] */;
  exp(%783) /* ty=Tensor[(11, 11, 12), float32] */
}

def @func_1634(%var_1632: Tensor[(3, 7, 5), float64], %var_1633: Tensor[(32, 24), float32]) -> (Tensor[(3, 7, 5), float64], Tensor[(4, 16, 12), float64], Tensor[(32, 24), float32], Tensor[(192, 4), float32], Tensor[(325), int64]) {
  @func_1630(%var_1632, %var_1633) /* ty=(Tensor[(3, 7, 5), float64], Tensor[(4, 16, 12), float64], Tensor[(32, 24), float32], Tensor[(192, 4), float32], Tensor[(325), int64]) */
}

def @func_22404() -> (Tensor[(6, 14, 10), float32],) {
  @func_22402() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_12552() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %784 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %785 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %786 = %784.0;
  %787 = %785.1;
  (%786, %787)
}

def @func_13409() -> (Tensor[(256), float64],) {
  @func_13407() /* ty=(Tensor[(256), float64],) */
}

def @func_6626() -> (Tensor[(6, 14, 10), float32],) {
  %788 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %789 = rsqrt(%788) /* ty=Tensor[(6, 14, 10), float32] */;
  (%789,)
}

def @func_7392() -> (Tensor[(6, 14, 10), float32],) {
  %790 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %791 = %790.0;
  (%791,)
}

def @func_11178() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32]) {
  %792 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
  %793 = %792.0;
  %794 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  (%793, %794)
}

def @func_9008() -> (Tensor[(6, 14, 10), float32],) {
  %795 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  (%795,)
}

def @func_5702(%var_5700: Tensor[(2, 15, 3), float64], %var_5701: Tensor[(2, 15, 3), float64]) -> (Tensor[(2, 15, 3), bool],) {
  @func_5698(%var_5700, %var_5701) /* ty=(Tensor[(2, 15, 3), bool],) */
}

def @func_14105(%var_14099: Tensor[(5, 4, 11), float64]) -> (Tensor[(5, 4, 11), float64], Tensor[(7, 11, 5), float64]) {
  %796 = cast(%var_14099, dtype="float64") /* ty=Tensor[(5, 4, 11), float64] */;
  %797 = asin(%796) /* ty=Tensor[(5, 4, 11), float64] */;
  %798 = @func_14075() /* ty=Tensor[(7, 11, 5), float64] */;
  (%797, %798)
}

def @func_14435() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_14433() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_21167(%var_21164: Tensor[(105), float64], %var_21165: Tensor[(325), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(105), float64], Tensor[(325), int64]) {
  %799 = @func_16595() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %800 = cast(%var_21164, dtype="float64") /* ty=Tensor[(105), float64] */;
  %801 = cast(%var_21165, dtype="int64") /* ty=Tensor[(325), int64] */;
  %802 = reshape(%800, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %803 = reshape(%801, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
  %804 = @func_6947(%802, %803) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) */;
  %805 = %799.0;
  %806 = %804.0;
  (%805, %806, %var_21164, %var_21165)
}

def @func_10815() -> Tensor[(6, 14, 10), float32] {
  @func_10813() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_22318(%var_22270: Tensor[(224), float32], %var_22271: Tensor[(14, 3), float64], %var_22272: Tensor[(1680), float64], %var_22290: Tensor[(216), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(14, 3), float64], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32]) {
  %807 = cast(%var_22270, dtype="float32") /* ty=Tensor[(224), float32] */;
  %808 = cast(%var_22271, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
  %809 = cast(%var_22272, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %810 = reshape(%807, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %811 = reshape(%808, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %812 = reshape(%809, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %813 = @func_6781(%810, %811, %812) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(224), float32], Tensor[(42), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) */;
  %814 = cast(%var_22290, dtype="float64") /* ty=Tensor[(216), float64] */;
  %815 = reshape(%814, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %816 = @func_19751(%815) /* ty=(Tensor[(256), float64], Tensor[(256), float64], Tensor[(216), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
  %817 = @func_11755() /* ty=(Tensor[(5, 16, 14), float32],) */;
  %818 = @func_14007() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %819 = @func_12611() /* ty=Tensor[(6, 14, 10), float32] */;
  %820 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %821 = %813.3;
  %822 = %816.0;
  %823 = %817.0;
  %824 = %818.0;
  (%819, %820, %821, %var_22270, %var_22271, %var_22272, %822, %var_22290, %823, %824)
}

def @func_16125() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(840), float32]) {
  @func_16123() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(840), float32]) */
}

def @func_13361() -> (Tensor[(6, 14, 10), float32],) {
  %827 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %825 = @func_12904() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %826 = %825.1;
    (%826,)
  };
  %827() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_18524(%var_18517: Tensor[(154), float32], %var_18518: Tensor[(1680), float64]) -> (Tensor[(256), float64], Tensor[(224), float32], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(6, 14, 10), float32]) {
  %828 = cast(%var_18517, dtype="float32") /* ty=Tensor[(154), float32] */;
  %829 = cast(%var_18518, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %830 = @func_13178() /* ty=Tensor[(256), float64] */;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(256), float64] */;
  %832 = reshape(%828, newshape=[2, 7, 11]) /* ty=Tensor[(2, 7, 11), float32] */;
  %833 = reshape(%829, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %834 = reshape(%831, newshape=[256, 1]) /* ty=Tensor[(256, 1), float64] */;
  %835 = @func_6828(%832, %833, %834) /* ty=(Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) */;
  %836 = @func_16439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %837 = %835.2;
  %838 = %836.3;
  (%830, %837, %var_18517, %var_18518, %838)
}

def @func_19101() -> Tensor[(256), float64] {
  %840 = fn () -> Tensor[(256), float64] {
    %839 = @func_11710() /* ty=(Tensor[(256), float64],) */;
    %839.0
  };
  %840() /* ty=Tensor[(256), float64] */
}

def @func_6491(%var_6489: Tensor[(2, 16, 1), float32]) -> (Tensor[(2, 16, 1), float32], Tensor[(2, 15, 3), bool], Tensor[(90, 1), float64]) {
  @func_6488(%var_6489) /* ty=(Tensor[(2, 16, 1), float32], Tensor[(2, 15, 3), bool], Tensor[(90, 1), float64]) */
}

def @func_7267(%var_7266: Tensor[(5, 15, 9), float32]) -> Tensor[(5, 15, 9), float32] {
  %842 = fn (%var_7256: Tensor[(5, 15, 9), float32]) -> Tensor[(5, 15, 9), float32] {
    %841 = cast(%var_7256, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
    asin(%841) /* ty=Tensor[(5, 15, 9), float32] */
  };
  %842(%var_7266) /* ty=Tensor[(5, 15, 9), float32] */
}

def @func_6951(%var_6949: Tensor[(105), float64], %var_6950: Tensor[(325, 1), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) {
  @func_6947(%var_6949, %var_6950) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) */
}

def @func_12179() -> Tensor[(6, 14, 10), float32] {
  @func_12177() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_19666(%var_19661: Tensor[(77), float32], %var_19662: Tensor[(35, 10), int32], %var_19663: Tensor[(768), float64], %var_19664: Tensor[(6, 3), int64], %var_19665: Tensor[(14, 165), float32]) -> (Tensor[(256), float64], Tensor[(77), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64], Tensor[(105), float64], Tensor[(256), float64], Tensor[(35, 10), float32], Tensor[(35, 10), float32], Tensor[(35, 10), uint16], Tensor[(768), float64], Tensor[(768), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 3), int64], Tensor[(6, 14, 10), float32], Tensor[(14, 11, 15), bool], Tensor[(14, 165), float32], Tensor[(35, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_19659(%var_19661, %var_19662, %var_19663, %var_19664, %var_19665) /* ty=(Tensor[(256), float64], Tensor[(77), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64], Tensor[(105), float64], Tensor[(256), float64], Tensor[(35, 10), float32], Tensor[(35, 10), float32], Tensor[(35, 10), uint16], Tensor[(768), float64], Tensor[(768), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 3), int64], Tensor[(6, 14, 10), float32], Tensor[(14, 11, 15), bool], Tensor[(14, 165), float32], Tensor[(35, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_18116() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_18114() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_9729() -> (Tensor[(256), float64], Tensor[(8, 16, 2), float64]) {
  @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */
}

def @func_18011() -> (Tensor[(256), float64], Tensor[(256), float64], Tensor[(256), float64]) {
  %847 = fn () -> (Tensor[(256), float64], Tensor[(256), float64], Tensor[(256), float64]) {
    %843 = @func_11067() /* ty=(Tensor[(256), float64],) */;
    %844 = @func_13482() /* ty=Tensor[(256), float64] */;
    %845 = %843.0;
    %846 = @func_16984() /* ty=Tensor[(256), float64] */;
    (%844, %845, %846)
  };
  %847() /* ty=(Tensor[(256), float64], Tensor[(256), float64], Tensor[(256), float64]) */
}

def @func_9355() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_9353() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_21132() -> Tensor[(6, 14, 10), float32] {
  @func_21130() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_20459() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(140), uint32]) {
  %848 = @func_16730() /* ty=(Tensor[(256), float64],) */;
  %849 = @func_10655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) */;
  %850 = @func_14474() /* ty=Tensor[(6, 14, 10), float32] */;
  %851 = %848.0;
  %852 = %849.2;
  (%850, %851, %852)
}

def @func_21891(%var_21876: Tensor[(7, 10, 12), float32]) -> (Tensor[(7, 10, 12), uint8], Tensor[(7, 10, 12), float32]) {
  %853 = @func_15380() /* ty=(Tensor[(5, 16, 14), float32], Tensor[(6, 14, 10), float32], Tensor[(7, 10, 12), float32], Tensor[(7, 10, 12), float32]) */;
  %854 = %853.2;
  %855 = cast(%var_21876, dtype="uint8") /* ty=Tensor[(7, 10, 12), uint8] */;
  %856 = shape_of(%854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%854, dtype="uint8") /* ty=Tensor[(7, 10, 12), uint8] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %859 = cast(%854, dtype="float32") /* ty=Tensor[(7, 10, 12), float32] */;
  %860 = add(%857, %858) /* ty=Tensor[(7, 10, 12), uint8] */;
  %861 = erf(%859) /* ty=Tensor[(7, 10, 12), float32] */;
  (%860, %861)
}

def @func_7111() -> (Tensor[(256), float64], Tensor[(4, 16, 4), float64]) {
  %862 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
  %863 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
  %864 = %863.1;
  %865 = cast(%864, dtype="float64") /* ty=Tensor[(4, 16, 4), float64] */;
  %866 = %862.2;
  %867 = cosh(%865) /* ty=Tensor[(4, 16, 4), float64] */;
  (%866, %867)
}

def @func_17348() -> (Tensor[(6, 14, 10), float32],) {
  @func_17346() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_1857(%var_1852: Tensor[(1, 6, 7), float64]) -> Tensor[(1, 6, 7), float64] {
  %868 = cast(%var_1852, dtype="float64") /* ty=Tensor[(1, 6, 7), float64] */;
  log2(%868) /* ty=Tensor[(1, 6, 7), float64] */
}

def @func_14296() -> Tensor[(6, 14, 10), float32] {
  @func_14294() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_9612() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %873 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %869 = @func_9558() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %870 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %871 = %869.0;
    %872 = %870.0;
    (%871, %872)
  };
  %873() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_6786(%var_6783: Tensor[(224), float32], %var_6784: Tensor[(42), float64], %var_6785: Tensor[(1680), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(224), float32], Tensor[(42), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) {
  @func_6781(%var_6783, %var_6784, %var_6785) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(224), float32], Tensor[(42), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) */
}

def @func_15325() -> (Tensor[(256), float64],) {
  %875 = fn () -> (Tensor[(256), float64],) {
    %874 = @func_10357() /* ty=Tensor[(256), float64] */;
    (%874,)
  };
  %875() /* ty=(Tensor[(256), float64],) */
}

def @func_17346() -> (Tensor[(6, 14, 10), float32],) {
  %876 = @func_11039() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %877 = %876.1;
  (%877,)
}

def @func_15176(%var_15168: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) {
  %878 = cast(meta[relay.Constant][52] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %879 = cast(%var_15168, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %880 = reshape(%878, newshape=[]) /* ty=uint32 */;
  %881 = reshape(%879, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
  %882 = @func_12401() /* ty=Tensor[(6, 14, 10), float32] */;
  %883 = @func_2222(%880, %881) /* ty=Tensor[(1, 14, 10), bool] */;
  (%882, %883, meta[relay.Constant][52] /* ty=uint32 */, %var_15168)
}

def @func_17589(%var_17557: Tensor[(14, 11, 15), float32]) -> (Tensor[(14, 11, 15), bool],) {
  %884 = cast(%var_17557, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
  %885 = log2(%884) /* ty=Tensor[(14, 11, 15), float32] */;
  %886 = cast(%885, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %887 = shape_of(%var_17557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(%var_17557, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %890 = logical_or(%888, %889) /* ty=Tensor[(14, 11, 15), bool] */;
  (%890,)
}

def @func_14399() -> (Tensor[(6, 14, 10), float32],) {
  %893 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %891 = @func_13360() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %892 = %891.0;
    (%892,)
  };
  %893() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_13715(%var_13714: Tensor[(7, 10, 12), float32]) -> Tensor[(7, 10, 12), float32] {
  %895 = fn (%var_13703: Tensor[(7, 10, 12), float32]) -> Tensor[(7, 10, 12), float32] {
    %894 = cast(%var_13703, dtype="float32") /* ty=Tensor[(7, 10, 12), float32] */;
    cosh(%894) /* ty=Tensor[(7, 10, 12), float32] */
  };
  %895(%var_13714) /* ty=Tensor[(7, 10, 12), float32] */
}

def @func_17914() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(16, 6), float64], Tensor[(6, 14, 10), float32], Tensor[(96), float64]) {
  %911 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(16, 6), float64], Tensor[(6, 14, 10), float32], Tensor[(96), float64]) {
    %896 = @func_15449() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %897 = @func_8870() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %898 = @func_13857() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */;
    %899 = cast(meta[relay.Constant][53] /* ty=Tensor[(16, 6), float64] */, dtype="float64") /* ty=Tensor[(16, 6), float64] */;
    %900 = reshape(%899, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %901 = @func_16267(%900) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 8, 3), float64], Tensor[(96), float64], Tensor[(6, 14, 10), float32]) */;
    %902 = cast(meta[relay.Constant][53] /* ty=Tensor[(16, 6), float64] */, dtype="float64") /* ty=Tensor[(16, 6), float64] */;
    %903 = reshape(%902, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %904 = @func_16267(%903) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 8, 3), float64], Tensor[(96), float64], Tensor[(6, 14, 10), float32]) */;
    %905 = %896.1;
    %906 = %897.0;
    %907 = %898.1;
    %908 = %901.1;
    %909 = @func_12069() /* ty=Tensor[(6, 14, 10), float32] */;
    %910 = %904.4;
    (%905, %906, %907, %908, meta[relay.Constant][53] /* ty=Tensor[(16, 6), float64] */, %909, %910)
  };
  %911() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(16, 6), float64], Tensor[(6, 14, 10), float32], Tensor[(96), float64]) */
}

def @func_16707() -> Tensor[(6, 14, 10), float32] {
  @func_16705() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_21412() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %912 = @func_19008() /* ty=Tensor[(6, 14, 10), float32] */;
  %913 = @func_21028() /* ty=Tensor[(6, 14, 10), float32] */;
  %914 = @func_16815() /* ty=Tensor[(256), float64] */;
  (%912, %913, %914)
}

def @func_2489(%var_2484: Tensor[(3, 9, 8), float64], %var_2485: Tensor[(3, 9, 8), float64], %var_2486: Tensor[(325, 1), int64], %var_2487: uint32, %var_2488: Tensor[(140), uint32]) -> (Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) {
  @func_2482(%var_2484, %var_2485, %var_2486, %var_2487, %var_2488) /* ty=(Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */
}

def @func_19659(%var_19523: Tensor[(77), float32], %var_19544: Tensor[(35, 10), int32], %var_19632: Tensor[(768), float64], %var_19638: Tensor[(6, 3), int64], %var_19647: Tensor[(14, 165), float32]) -> (Tensor[(256), float64], Tensor[(77), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64], Tensor[(105), float64], Tensor[(256), float64], Tensor[(35, 10), float32], Tensor[(35, 10), float32], Tensor[(35, 10), uint16], Tensor[(768), float64], Tensor[(768), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 3), int64], Tensor[(6, 14, 10), float32], Tensor[(14, 11, 15), bool], Tensor[(14, 165), float32], Tensor[(35, 10), float32], Tensor[(6, 14, 10), float32]) {
  %915 = cast(meta[relay.Constant][54] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %916 = reshape(%915, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %917 = @func_17072(%916) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64]) */;
  %918 = @func_18010() /* ty=(Tensor[(256), float64], Tensor[(256), float64], Tensor[(256), float64]) */;
  %919 = cast(%var_19523, dtype="float32") /* ty=Tensor[(77), float32] */;
  %920 = reshape(%919, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %921 = @func_14313(%920) /* ty=(Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) */;
  %922 = %921.0;
  %923 = cast(%var_19544, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %924 = shape_of(%922, dtype="int32") /* ty=Tensor[(2), int32] */;
  %925 = cast(%922, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %927 = floor_divide(%925, %926) /* ty=Tensor[(35, 10), float64] */;
  %928 = cast(%var_19544, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %929 = rsqrt(%928) /* ty=Tensor[(35, 10), float32] */;
  %930 = cast(%929, dtype="int32") /* ty=Tensor[(35, 10), int32] */;
  %931 = shape_of(%927, dtype="int32") /* ty=Tensor[(2), int32] */;
  %932 = cast(%927, dtype="int32") /* ty=Tensor[(35, 10), int32] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %934 = left_shift(%932, %933) /* ty=Tensor[(35, 10), int32] */;
  %935 = cast(%934, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %936 = cast(%929, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %937 = cast(%934, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %938 = log2(%937) /* ty=Tensor[(35, 10), float32] */;
  %939 = cast(%938, dtype="uint16") /* ty=Tensor[(35, 10), uint16] */;
  %940 = shape_of(%934, dtype="int32") /* ty=Tensor[(2), int32] */;
  %941 = cast(%934, dtype="uint16") /* ty=Tensor[(35, 10), uint16] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %943 = cast(%var_19632, dtype="float64") /* ty=Tensor[(768), float64] */;
  %944 = reshape(%943, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %945 = @func_7643(%944) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) */;
  %946 = cast(%var_19638, dtype="int64") /* ty=Tensor[(6, 3), int64] */;
  %947 = reshape(%946, newshape=[3, 6]) /* ty=Tensor[(3, 6), int64] */;
  %948 = @func_15131(%947) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(3, 6), int64], Tensor[(216), int64]) */;
  %949 = cast(%var_19647, dtype="float32") /* ty=Tensor[(14, 165), float32] */;
  %950 = reshape(%949, newshape=[14, 11, 15]) /* ty=Tensor[(14, 11, 15), float32] */;
  %951 = @func_17589(%950) /* ty=(Tensor[(14, 11, 15), bool],) */;
  %952 = cast(%927, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %953 = log10(%952) /* ty=Tensor[(35, 10), float32] */;
  %954 = cast(%929, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %955 = exp(%954) /* ty=Tensor[(35, 10), float64] */;
  %956 = cast(%var_19544, dtype="bool") /* ty=Tensor[(35, 10), bool] */;
  %957 = shape_of(%955, dtype="int32") /* ty=Tensor[(2), int32] */;
  %958 = cast(%955, dtype="bool") /* ty=Tensor[(35, 10), bool] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %960 = less_equal(%958, %959) /* ty=Tensor[(35, 10), bool] */;
  %961 = cast(%960, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %962 = shape_of(%953, dtype="int32") /* ty=Tensor[(2), int32] */;
  %963 = cast(%953, dtype="float32") /* ty=Tensor[(35, 10), float32] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %965 = @func_14007() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %966 = @func_12013() /* ty=Tensor[(256), float64] */;
  %967 = %917.0;
  %968 = @func_17375() /* ty=Tensor[(105), float64] */;
  %969 = %918.0;
  %970 = acosh(%935) /* ty=Tensor[(35, 10), float32] */;
  %971 = log(%936) /* ty=Tensor[(35, 10), float32] */;
  %972 = right_shift(%941, %942) /* ty=Tensor[(35, 10), uint16] */;
  %973 = %945.8;
  %974 = %948.0;
  %975 = @func_14294() /* ty=Tensor[(6, 14, 10), float32] */;
  %976 = %951.0;
  %977 = divide(%963, %964) /* ty=Tensor[(35, 10), float32] */;
  %978 = %965.0;
  (%966, %var_19523, %967, meta[relay.Constant][54] /* ty=Tensor[(90), float64] */, %968, %969, %970, %971, %972, %973, %var_19632, %974, %var_19638, %975, %976, %var_19647, %977, %978)
}

def @func_13483() -> Tensor[(256), float64] {
  %979 = fn () -> Tensor[(256), float64] {
    @func_12013() /* ty=Tensor[(256), float64] */
  };
  %979() /* ty=Tensor[(256), float64] */
}

def @func_20191() -> (Tensor[(6, 14, 10), float32],) {
  @func_20189() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_7524() -> (Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) {
  @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */
}

def @func_13014() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 16, 4), float64]) {
  %985 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 16, 4), float64]) {
    %980 = @func_10875() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %981 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
    %982 = %980.0;
    %983 = @func_10357() /* ty=Tensor[(256), float64] */;
    %984 = %981.1;
    (%982, %983, %984)
  };
  %985() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(4, 16, 4), float64]) */
}

def @func_16897() -> Tensor[(256), float64] {
  %987 = fn () -> Tensor[(256), float64] {
    %986 = @func_16439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %986.1
  };
  %987() /* ty=Tensor[(256), float64] */
}

def @func_19365() -> Tensor[(6, 14, 10), float32] {
  %988 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_7345() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %988() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_5008(%var_5007: Tensor[(1, 9, 1), float32]) -> (Tensor[(1, 9, 1), float32],) {
  %991 = fn (%var_5002: Tensor[(1, 9, 1), float32]) -> (Tensor[(1, 9, 1), float32],) {
    %989 = cast(%var_5002, dtype="float32") /* ty=Tensor[(1, 9, 1), float32] */;
    %990 = acosh(%989) /* ty=Tensor[(1, 9, 1), float32] */;
    (%990,)
  };
  %991(%var_5007) /* ty=(Tensor[(1, 9, 1), float32],) */
}

def @func_21288() -> (Tensor[(7, 11, 5), float64], Tensor[(224), float32]) {
  %992 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
  %993 = @func_14915() /* ty=Tensor[(7, 11, 5), float64] */;
  %994 = %992.1;
  (%993, %994)
}

def @func_17376() -> Tensor[(105), float64] {
  %995 = fn () -> Tensor[(105), float64] {
    @func_16288() /* ty=Tensor[(105), float64] */
  };
  %995() /* ty=Tensor[(105), float64] */
}

def @func_12049() -> Tensor[(6, 14, 10), float32] {
  @func_7825() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_12948() -> Tensor[(6, 14, 10), float32] {
  %997 = fn () -> Tensor[(6, 14, 10), float32] {
    %996 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %996.0
  };
  %997() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_17133() -> Tensor[(6, 14, 10), float32] {
  @func_17131() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_18737() -> (Tensor[(5, 16, 14), float32],) {
  @func_18735() /* ty=(Tensor[(5, 16, 14), float32],) */
}

def @func_11231() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) {
  %1016 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) {
    %998 = cast(meta[relay.Constant][55] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
    %999 = cast(meta[relay.Constant][56] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %1000 = reshape(%998, newshape=[325]) /* ty=Tensor[(325), int64] */;
    %1001 = reshape(%999, newshape=[768]) /* ty=Tensor[(768), float64] */;
    %1002 = @func_7477(%1000, %1001) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), bool], Tensor[(325), int64], Tensor[(768), float64]) */;
    %1003 = cast(meta[relay.Constant][56] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %1004 = reshape(%1003, newshape=[768]) /* ty=Tensor[(768), float64] */;
    %1005 = @func_7643(%1004) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) */;
    %1006 = cast(meta[relay.Constant][57] /* ty=Tensor[(35, 10), int32] */, dtype="int32") /* ty=Tensor[(35, 10), int32] */;
    %1007 = cast(meta[relay.Constant][58] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
    %1008 = reshape(%1006, newshape=[5, 5, 14]) /* ty=Tensor[(5, 5, 14), int32] */;
    %1009 = reshape(%1007, newshape=[42]) /* ty=Tensor[(42), float64] */;
    %1010 = @func_10942(%1008, %1009) /* ty=(Tensor[(5, 5, 14), int32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(42), float64]) */;
    %1011 = @func_9502() /* ty=Tensor[(6, 14, 10), float32] */;
    %1012 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
    %1013 = %1002.0;
    %1014 = %1005.1;
    %1015 = %1010.3;
    (%1011, %1012, %1013, meta[relay.Constant][55] /* ty=Tensor[(325), int64] */, meta[relay.Constant][56] /* ty=Tensor[(768), float64] */, %1014, %1015, meta[relay.Constant][57] /* ty=Tensor[(35, 10), int32] */, meta[relay.Constant][58] /* ty=Tensor[(42), float64] */)
  };
  %1016() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) */
}

def @func_15266() -> (Tensor[(256), float64],) {
  %1017 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %1018 = %1017.0;
  (%1018,)
}

def @func_15059() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(35, 10), int32], Tensor[(77), float32], Tensor[(7, 11, 5), float64]) {
  %1019 = cast(meta[relay.Constant][59] /* ty=Tensor[(77), float32] */, dtype="float32") /* ty=Tensor[(77), float32] */;
  %1020 = reshape(%1019, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %1021 = @func_14313(%1020) /* ty=(Tensor[(35, 10), int32], Tensor[(1, 11, 7), float32], Tensor[(77), float32], Tensor[(6, 14, 10), float32]) */;
  %1022 = @func_13178() /* ty=Tensor[(256), float64] */;
  %1023 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %1024 = %1021.0;
  %1025 = @func_14075() /* ty=Tensor[(7, 11, 5), float64] */;
  (%1022, %1023, %1024, meta[relay.Constant][59] /* ty=Tensor[(77), float32] */, %1025)
}

def @func_15419() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1030 = fn () -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %1026 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
    %1027 = @func_12213() /* ty=Tensor[(256), float64] */;
    %1028 = %1026.0;
    %1029 = @func_7729() /* ty=Tensor[(6, 14, 10), float32] */;
    (%1027, %1028, %1029)
  };
  %1030() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_2959(%var_2934: Tensor[(14, 16, 1), float32], %var_2941: Tensor[(42), float64]) -> (Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) {
  %1031 = cast(%var_2934, dtype="float32") /* ty=Tensor[(14, 16, 1), float32] */;
  %1032 = cast(%var_2941, dtype="float64") /* ty=Tensor[(42), float64] */;
  %1033 = reshape(%1032, newshape=[1, 6, 7]) /* ty=Tensor[(1, 6, 7), float64] */;
  %1034 = asin(%1031) /* ty=Tensor[(14, 16, 1), float32] */;
  %1035 = @func_1857(%1033) /* ty=Tensor[(1, 6, 7), float64] */;
  (%1034, %1035, %var_2941)
}

def @func_19311() -> Tensor[(6, 14, 10), float32] {
  %1036 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_11370() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %1036() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_6832(%var_6829: Tensor[(2, 7, 11), float32], %var_6830: Tensor[(1680), float64], %var_6831: Tensor[(256, 1), float64]) -> (Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) {
  %1052 = fn (%var_6796: Tensor[(2, 7, 11), float32], %var_6815: Tensor[(1680), float64], %var_6821: Tensor[(256, 1), float64]) -> (Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) {
    %1037 = cast(%var_6796, dtype="float32") /* ty=Tensor[(2, 7, 11), float32] */;
    %1038 = cast(meta[relay.Constant][60] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %1039 = cast(meta[relay.Constant][61] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
    %1040 = cast(%var_6815, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %1041 = reshape(%1038, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %1042 = reshape(%1039, newshape=[42]) /* ty=Tensor[(42), float64] */;
    %1043 = reshape(%1040, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %1044 = @func_6781(%1041, %1042, %1043) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(224), float32], Tensor[(42), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) */;
    %1045 = cast(%var_6821, dtype="float64") /* ty=Tensor[(256, 1), float64] */;
    %1046 = reshape(%1045, newshape=[4, 16, 4]) /* ty=Tensor[(4, 16, 4), float64] */;
    %1047 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1048 = asin(%1037) /* ty=Tensor[(2, 7, 11), float32] */;
    %1049 = %1044.4;
    %1050 = @func_5662(%1046) /* ty=Tensor[(4, 16, 4), float64] */;
    %1051 = %1047.0;
    (%1048, %1049, meta[relay.Constant][60] /* ty=Tensor[(224), float32] */, meta[relay.Constant][61] /* ty=Tensor[(42), float64] */, %var_6815, %1050, %var_6821, %1051)
  };
  %1052(%var_6829, %var_6830, %var_6831) /* ty=(Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) */
}

def @func_8716() -> (Tensor[(6, 14, 10), float32], Tensor[(768), float32], Tensor[(105), float64], Tensor[(325), int64], Tensor[(6, 14, 10), float32]) {
  %1062 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(768), float32], Tensor[(105), float64], Tensor[(325), int64], Tensor[(6, 14, 10), float32]) {
    %1053 = cast(meta[relay.Constant][62] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %1054 = cast(meta[relay.Constant][63] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
    %1055 = reshape(%1053, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %1056 = reshape(%1054, newshape=[325, 1]) /* ty=Tensor[(325, 1), int64] */;
    %1057 = @func_6947(%1055, %1056) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) */;
    %1058 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1059 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
    %1060 = %1057.3;
    %1061 = %1058.0;
    (%1059, %1060, meta[relay.Constant][62] /* ty=Tensor[(105), float64] */, meta[relay.Constant][63] /* ty=Tensor[(325), int64] */, %1061)
  };
  %1062() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(768), float32], Tensor[(105), float64], Tensor[(325), int64], Tensor[(6, 14, 10), float32]) */
}

def @func_5735(%var_5733: Tensor[(8, 16, 2), float64]) -> (Tensor[(8, 16, 2), float64], Tensor[(8, 16, 2), float64]) {
  @func_5732(%var_5733) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(8, 16, 2), float64]) */
}

def @func_10656() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) {
  %1073 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) {
    %1063 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
    %1064 = @func_10113() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %1065 = cast(meta[relay.Constant][64] /* ty=Tensor[(1248), float64] */, dtype="float64") /* ty=Tensor[(1248), float64] */;
    %1066 = cast(meta[relay.Constant][65] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1067 = reshape(%1065, newshape=[6, 16, 13]) /* ty=Tensor[(6, 16, 13), float64] */;
    %1068 = reshape(%1066, newshape=[]) /* ty=uint32 */;
    %1069 = @func_10577(%1067, %1068) /* ty=(Tensor[(6, 16, 13), float64], Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32]) */;
    %1070 = %1063.0;
    %1071 = %1064.0;
    %1072 = %1069.5;
    (%1070, %1071, %1072, meta[relay.Constant][64] /* ty=Tensor[(1248), float64] */, meta[relay.Constant][65] /* ty=uint32 */)
  };
  %1073() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) */
}

def @func_11370() -> Tensor[(6, 14, 10), float32] {
  %1074 = @func_10875() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1074.0
}

def @func_14076() -> Tensor[(7, 11, 5), float64] {
  %1076 = fn () -> Tensor[(7, 11, 5), float64] {
    %1075 = cast(meta[relay.Constant][66] /* ty=Tensor[(7, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 5), float64] */;
    rsqrt(%1075) /* ty=Tensor[(7, 11, 5), float64] */
  };
  %1076() /* ty=Tensor[(7, 11, 5), float64] */
}

def @func_7937() -> Tensor[(6, 14, 10), float32] {
  %1077 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1077.0
}

def @func_8964() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) {
  %1078 = @func_7522() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(8, 16, 2), float64], Tensor[(4, 64), float64]) */;
  %1079 = %1078.0;
  %1080 = cast(%1079, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
  %1081 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1082 = @func_7729() /* ty=Tensor[(6, 14, 10), float32] */;
  %1083 = exp(%1080) /* ty=Tensor[(6, 14, 10), float64] */;
  %1084 = %1081.0;
  (%1082, %1083, %1084)
}

def @func_11756() -> (Tensor[(5, 16, 14), float32],) {
  %1087 = fn () -> (Tensor[(5, 16, 14), float32],) {
    %1085 = cast(meta[relay.Constant][67] /* ty=Tensor[(5, 16, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 14), float32] */;
    %1086 = log(%1085) /* ty=Tensor[(5, 16, 14), float32] */;
    (%1086,)
  };
  %1087() /* ty=(Tensor[(5, 16, 14), float32],) */
}

def @func_9089(%var_9078: Tensor[(42), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64]) {
  %1088 = @func_8870() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1089 = cast(meta[relay.Constant][68] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1090 = cast(%var_9078, dtype="float64") /* ty=Tensor[(42), float64] */;
  %1091 = reshape(%1089, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %1092 = reshape(%1090, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %1093 = @func_2959(%1091, %1092) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %1094 = %1088.0;
  %1095 = %1093.0;
  (%1094, %1095, meta[relay.Constant][68] /* ty=Tensor[(224), float32] */, %var_9078)
}

def @func_16070(%var_16067: Tensor[(6, 14, 10), float32], %var_16068: Tensor[(1, 60), float64], %var_16069: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), bool], Tensor[(256), float64], Tensor[(1, 60), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32]) {
  %1118 = fn (%var_16014: Tensor[(6, 14, 10), float32], %var_16020: Tensor[(1, 60), float64], %var_16027: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), bool], Tensor[(256), float64], Tensor[(1, 60), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32]) {
    %1096 = @func_9379() /* ty=Tensor[(6, 14, 10), float32] */;
    %1097 = cast(%var_16014, dtype="bool") /* ty=Tensor[(6, 14, 10), bool] */;
    %1098 = shape_of(%1096, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1099 = cast(%1096, dtype="bool") /* ty=Tensor[(6, 14, 10), bool] */;
    %1100 = dyn.reshape(%1097, %1098, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1101 = cast(%var_16020, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
    %1102 = reshape(%1101, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %1103 = @func_12717(%1102) /* ty=(Tensor[(256), float64], Tensor[(45, 2), float64], Tensor[(60), float64], Tensor[(768), float64]) */;
    %1104 = cast(meta[relay.Constant][69] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1105 = cast(%var_16027, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %1106 = reshape(%1104, newshape=[]) /* ty=uint32 */;
    %1107 = reshape(%1105, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
    %1108 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1109 = cast(meta[relay.Constant][70] /* ty=Tensor[(9), float32] */, dtype="float32") /* ty=Tensor[(9), float32] */;
    %1110 = reshape(%1109, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), float32] */;
    %1111 = @func_5006(%1110) /* ty=(Tensor[(1, 9, 1), float32],) */;
    %1112 = logical_or(%1099, %1100) /* ty=Tensor[(6, 14, 10), bool] */;
    %1113 = %1103.0;
    %1114 = @func_2222(%1106, %1107) /* ty=Tensor[(1, 14, 10), bool] */;
    %1115 = %1108.0;
    %1116 = %1111.0;
    %1117 = @func_10430() /* ty=Tensor[(6, 14, 10), float32] */;
    (%1112, %1113, %var_16020, %1114, meta[relay.Constant][69] /* ty=uint32 */, %var_16027, %1115, %1116, meta[relay.Constant][70] /* ty=Tensor[(9), float32] */, %1117)
  };
  %1118(%var_16067, %var_16068, %var_16069) /* ty=(Tensor[(6, 14, 10), bool], Tensor[(256), float64], Tensor[(1, 60), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10777(%var_10775: Tensor[(60), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(5, 3, 4), float32]) {
  @func_10774(%var_10775) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(5, 3, 4), float32]) */
}

def @func_22104() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1121 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %1119 = @func_15105() /* ty=Tensor[(6, 14, 10), float32] */;
    %1120 = @func_17317() /* ty=Tensor[(6, 14, 10), float32] */;
    (%1119, %1120)
  };
  %1121() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_17362() -> (Tensor[(9), float32], Tensor[(6, 14, 10), float32]) {
  %1125 = fn () -> (Tensor[(9), float32], Tensor[(6, 14, 10), float32]) {
    %1122 = @func_14361() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(9), float32], Tensor[(140), uint32]) */;
    %1123 = %1122.2;
    %1124 = @func_14474() /* ty=Tensor[(6, 14, 10), float32] */;
    (%1123, %1124)
  };
  %1125() /* ty=(Tensor[(9), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_20189() -> (Tensor[(6, 14, 10), float32],) {
  %1126 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_14934() -> (Tensor[(5, 16, 14), float32],) {
  %1128 = @func_11755() /* ty=(Tensor[(5, 16, 14), float32],) */;
  %1129 = %1128.0;
  (%1129,)
}

def @func_11039() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1130 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %1131 = %1130.0;
  %1132 = cast(%1131, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %1133 = @func_10430() /* ty=Tensor[(6, 14, 10), float32] */;
  %1134 = acosh(%1132) /* ty=Tensor[(6, 14, 10), float32] */;
  (%1133, %1134)
}

def @func_14599(%var_14591: Tensor[(90), float64], %var_14592: Tensor[(60), float64]) -> (Tensor[(35, 10), int32], Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(60), float64]) {
  %1135 = @func_13459() /* ty=(Tensor[(35, 10), int32],) */;
  %1136 = cast(%var_14591, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1137 = cast(%var_14592, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1138 = reshape(%1136, newshape=[3, 30]) /* ty=Tensor[(3, 30), float64] */;
  %1139 = reshape(%1137, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1140 = @func_14039(%1138, %1139) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(60), float64]) */;
  %1141 = %1135.0;
  %1142 = %1140.1;
  (%1141, %1142, %var_14591, %var_14592)
}

def @func_14774(%var_14772: float32, %var_14773: Tensor[(2, 1, 6), float32]) -> (Tensor[(2, 1, 6), uint64],) {
  @func_14770(%var_14772, %var_14773) /* ty=(Tensor[(2, 1, 6), uint64],) */
}

def @func_20224() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %1147 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
    %1143 = @func_13655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %1144 = @func_11710() /* ty=(Tensor[(256), float64],) */;
    %1145 = %1143.2;
    %1146 = %1144.0;
    (%1145, %1146)
  };
  %1147() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */
}

def @func_17272() -> Tensor[(6, 14, 10), float32] {
  %1148 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_11370() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %1148() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_20917() -> Tensor[(6, 14, 10), float32] {
  %1149 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_12947() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %1149() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_21504() -> Tensor[(6, 14, 10), float32] {
  %1151 = fn () -> Tensor[(6, 14, 10), float32] {
    %1150 = @func_16595() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1150.0
  };
  %1151() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_8396() -> Tensor[(6, 14, 10), float32] {
  @func_7825() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_11180() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32]) {
  @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */
}

def @func_13178() -> Tensor[(256), float64] {
  @func_12025() /* ty=Tensor[(256), float64] */
}

def @func_7743() -> Tensor[(6, 14, 10), float32] {
  @func_7741() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_15105() -> Tensor[(6, 14, 10), float32] {
  %1152 = @func_8964() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */;
  %1152.2
}

def @func_19010() -> Tensor[(6, 14, 10), float32] {
  @func_19008() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_21810() -> Tensor[(256), float64] {
  @func_21808() /* ty=Tensor[(256), float64] */
}

def @func_16288() -> Tensor[(105), float64] {
  %1153 = @func_8715() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(768), float32], Tensor[(105), float64], Tensor[(325), int64], Tensor[(6, 14, 10), float32]) */;
  %1153.2
}

def @func_12071() -> Tensor[(6, 14, 10), float32] {
  @func_12069() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_16596() -> (Tensor[(6, 14, 10), float32],) {
  %1156 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %1154 = @func_11594() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1155 = %1154.0;
    (%1155,)
  };
  %1156() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_17547() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(256), float64]) {
  %1163 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(256), float64]) {
    %1157 = @func_16439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %1158 = @func_16730() /* ty=(Tensor[(256), float64],) */;
    %1159 = %1157.4;
    %1160 = @func_11370() /* ty=Tensor[(6, 14, 10), float32] */;
    %1161 = @func_13482() /* ty=Tensor[(256), float64] */;
    %1162 = %1158.0;
    (%1159, %1160, %1161, %1162)
  };
  %1163() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(256), float64]) */
}

def @func_16886() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_16884() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_6781(%var_6757: Tensor[(224), float32], %var_6758: Tensor[(42), float64], %var_6763: Tensor[(1680), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(1, 6, 7), float64], Tensor[(224), float32], Tensor[(42), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) {
  %1164 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1165 = cast(%var_6757, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1166 = cast(%var_6758, dtype="float64") /* ty=Tensor[(42), float64] */;
  %1167 = reshape(%1165, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %1168 = reshape(%1166, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %1169 = @func_2959(%1167, %1168) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
  %1170 = cast(%var_6763, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1171 = reshape(%1170, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %1172 = @func_4363(%1171) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) */;
  %1173 = %1164.0;
  %1174 = %1169.1;
  %1175 = %1172.1;
  (%1173, %1174, %var_6757, %var_6758, %1175, %var_6763)
}

def @func_8835() -> (Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) {
  %1176 = cast(meta[relay.Constant][71] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1177 = cast(meta[relay.Constant][72] /* ty=Tensor[(70, 2), uint32] */, dtype="uint32") /* ty=Tensor[(70, 2), uint32] */;
  %1178 = reshape(%1176, newshape=[]) /* ty=uint32 */;
  %1179 = reshape(%1177, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %1180 = @func_7969(%1178, %1179) /* ty=(Tensor[(6, 14, 10), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) */;
  %1181 = @func_7729() /* ty=Tensor[(6, 14, 10), float32] */;
  %1182 = %1180.2;
  (%1181, %1182, meta[relay.Constant][71] /* ty=uint32 */, meta[relay.Constant][72] /* ty=Tensor[(70, 2), uint32] */)
}

def @func_15199() -> Tensor[(7, 11, 5), float64] {
  @func_15197() /* ty=Tensor[(7, 11, 5), float64] */
}

def @func_8450() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10580(%var_10578: Tensor[(6, 16, 13), float64], %var_10579: uint32) -> (Tensor[(6, 16, 13), float64], Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32]) {
  %1195 = fn (%var_10538: Tensor[(6, 16, 13), float64], %var_10573: uint32) -> (Tensor[(6, 16, 13), float64], Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32]) {
    %1183 = cast(%var_10538, dtype="float64") /* ty=Tensor[(6, 16, 13), float64] */;
    %1184 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1185 = cast(meta[relay.Constant][73] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %1186 = cast(%var_10573, dtype="uint32") /* ty=uint32 */;
    %1187 = cast(meta[relay.Constant][74] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %1188 = reshape(%1185, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %1189 = reshape(%1186, newshape=[]) /* ty=uint32 */;
    %1190 = reshape(%1187, newshape=[35, 4]) /* ty=Tensor[(35, 4), uint32] */;
    %1191 = @func_9900(%1188, %1189, %1190) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
    %1192 = rsqrt(%1183) /* ty=Tensor[(6, 16, 13), float64] */;
    %1193 = %1184.0;
    %1194 = %1191.1;
    (%1192, %1193, %1194, meta[relay.Constant][73] /* ty=Tensor[(216), float64] */, %var_10573, meta[relay.Constant][74] /* ty=Tensor[(140), uint32] */)
  };
  %1195(%var_10578, %var_10579) /* ty=(Tensor[(6, 16, 13), float64], Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), float64], Tensor[(216), float64], uint32, Tensor[(140), uint32]) */
}

def @func_8660(%var_8640: Tensor[(13, 1, 5), float32]) -> (Tensor[(13, 1, 5), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  %1196 = cast(%var_8640, dtype="float32") /* ty=Tensor[(13, 1, 5), float32] */;
  %1197 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1198 = %1197.0;
  %1199 = cast(%1198, dtype="float32") /* ty=Tensor[(6, 14, 10), float32] */;
  %1200 = cast(meta[relay.Constant][75] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1201 = reshape(%1199, newshape=[6, 14, 10]) /* ty=Tensor[(6, 14, 10), float32] */;
  %1202 = reshape(%1200, newshape=[256]) /* ty=Tensor[(256), float64] */;
  %1203 = @func_7795(%1201, %1202) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %1204 = asin(%1196) /* ty=Tensor[(13, 1, 5), float32] */;
  %1205 = %1203.3;
  (%1204, %1198, %1205, meta[relay.Constant][75] /* ty=Tensor[(256), float64] */)
}

def @func_12013() -> Tensor[(256), float64] {
  %1206 = @func_11710() /* ty=(Tensor[(256), float64],) */;
  %1206.0
}

def @func_2482(%var_2347: Tensor[(3, 9, 8), float64], %var_2348: Tensor[(3, 9, 8), float64], %var_2400: Tensor[(325, 1), int64], %var_2455: uint32, %var_2456: Tensor[(140), uint32]) -> (Tensor[(4, 16, 12), float64], Tensor[(2, 384), float32], Tensor[(4, 16, 12), float64], Tensor[(3, 9, 8), float32], Tensor[(4, 16, 12), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64], Tensor[(3, 9, 8), float64], Tensor[(4, 16, 12), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32], Tensor[(4, 16, 12), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) {
  %1207 = cast(meta[relay.Constant][76] /* ty=Tensor[(2, 384), float32] */, dtype="float32") /* ty=Tensor[(2, 384), float32] */;
  %1208 = reshape(%1207, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %1209 = @func_122(%1208) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %1210 = %1209.1;
  %1211 = cast(%1210, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %1212 = reshape(%1211, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %1213 = @func_122(%1212) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %1214 = cast(%var_2347, dtype="float32") /* ty=Tensor[(3, 9, 8), float32] */;
  %1215 = cast(%1210, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %1216 = reshape(%1215, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %1217 = @func_122(%1216) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %1218 = cast(%var_2400, dtype="int64") /* ty=Tensor[(325, 1), int64] */;
  %1219 = %1213.1;
  %1220 = cast(%1219, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
  %1221 = reshape(%1218, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %1222 = reshape(%1220, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %1223 = @func_1546(%1221, %1222) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %1224 = cast(%var_2348, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %1225 = shape_of(%var_2347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1226 = cast(%var_2347, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1228 = divide(%1226, %1227) /* ty=Tensor[(3, 9, 8), float64] */;
  %1229 = cast(%1228, dtype="float64") /* ty=Tensor[(3, 9, 8), float64] */;
  %1230 = %1217.0;
  %1231 = cast(%1230, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %1232 = reshape(%1231, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %1233 = @func_122(%1232) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %1234 = cast(%var_2455, dtype="uint32") /* ty=uint32 */;
  %1235 = cast(%var_2456, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %1236 = reshape(%1234, newshape=[]) /* ty=uint32 */;
  %1237 = reshape(%1235, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
  %1238 = %1223.0;
  %1239 = cast(%1238, dtype="int64") /* ty=Tensor[(5, 13, 5), int64] */;
  %1240 = cast(meta[relay.Constant][76] /* ty=Tensor[(2, 384), float32] */, dtype="float64") /* ty=Tensor[(2, 384), float64] */;
  %1241 = reshape(%1239, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %1242 = reshape(%1240, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %1243 = @func_1546(%1241, %1242) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %1244 = cast(meta[relay.Constant][77] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %1245 = reshape(%1244, newshape=[1, 6, 7]) /* ty=Tensor[(1, 6, 7), float64] */;
  %1246 = exp(%1214) /* ty=Tensor[(3, 9, 8), float32] */;
  %1247 = log10(%1229) /* ty=Tensor[(3, 9, 8), float64] */;
  %1248 = %1233.0;
  %1249 = @func_2222(%1236, %1237) /* ty=Tensor[(1, 14, 10), bool] */;
  %1250 = %1243.1;
  %1251 = @func_1857(%1245) /* ty=Tensor[(1, 6, 7), float64] */;
  (%1210, meta[relay.Constant][76] /* ty=Tensor[(2, 384), float32] */, %1219, %1246, %1230, %1238, %var_2400, %1247, %1248, %1249, %var_2455, %var_2456, %1250, %1251, meta[relay.Constant][77] /* ty=Tensor[(42), float64] */)
}

def @func_8870() -> (Tensor[(6, 14, 10), float32],) {
  %1252 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1253 = %1252.0;
  (%1253,)
}

def @func_17942() -> Tensor[(256), float64] {
  %1255 = fn () -> Tensor[(256), float64] {
    %1254 = @func_15888() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float64]) */;
    %1254.0
  };
  %1255() /* ty=Tensor[(256), float64] */
}

def @func_1630(%var_1586: Tensor[(3, 7, 5), float64], %var_1612: Tensor[(32, 24), float32]) -> (Tensor[(3, 7, 5), float64], Tensor[(4, 16, 12), float64], Tensor[(32, 24), float32], Tensor[(192, 4), float32], Tensor[(325), int64]) {
  %1256 = cast(meta[relay.Constant][78] /* ty=Tensor[(3, 7, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 5), float64] */;
  %1257 = shape_of(%var_1586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1258 = cast(%var_1586, dtype="float64") /* ty=Tensor[(3, 7, 5), float64] */;
  %1259 = dyn.reshape(%1256, %1257, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1260 = cast(%var_1612, dtype="float32") /* ty=Tensor[(32, 24), float32] */;
  %1261 = reshape(%1260, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
  %1262 = @func_122(%1261) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
  %1263 = cast(meta[relay.Constant][79] /* ty=Tensor[(325), int64] */, dtype="int64") /* ty=Tensor[(325), int64] */;
  %1264 = cast(%var_1612, dtype="float64") /* ty=Tensor[(32, 24), float64] */;
  %1265 = reshape(%1263, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %1266 = reshape(%1264, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %1267 = @func_1546(%1265, %1266) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %1268 = floor_divide(%1258, %1259) /* ty=Tensor[(3, 7, 5), float64] */;
  %1269 = %1262.1;
  %1270 = %1267.2;
  (%1268, %1269, %var_1612, %1270, meta[relay.Constant][79] /* ty=Tensor[(325), int64] */)
}

def @func_9010() -> (Tensor[(6, 14, 10), float32],) {
  @func_9008() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_15385() -> Tensor[(6, 14, 10), float32] {
  @func_11927() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_14917() -> Tensor[(7, 11, 5), float64] {
  @func_14915() /* ty=Tensor[(7, 11, 5), float64] */
}

def @func_9092(%var_9090: Tensor[(42), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64]) {
  @func_9089(%var_9090) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 16, 1), float32], Tensor[(224), float32], Tensor[(42), float64]) */
}

def @func_15061() -> (Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(35, 10), int32], Tensor[(77), float32], Tensor[(7, 11, 5), float64]) {
  @func_15059() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(35, 10), int32], Tensor[(77), float32], Tensor[(7, 11, 5), float64]) */
}

def @func_21171(%var_21169: Tensor[(105), float64], %var_21170: Tensor[(325), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(105), float64], Tensor[(325), int64]) {
  @func_21167(%var_21169, %var_21170) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(105), float64], Tensor[(325), int64]) */
}

def @func_21854() -> (Tensor[(256), float64],) {
  %1272 = fn () -> (Tensor[(256), float64],) {
    %1271 = @func_16984() /* ty=Tensor[(256), float64] */;
    (%1271,)
  };
  %1272() /* ty=(Tensor[(256), float64],) */
}

def @func_20847() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1273 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %1274 = @func_14007() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1275 = %1273.3;
  %1276 = %1274.0;
  (%1275, %1276)
}

def @func_6742() -> (Tensor[(6, 14, 10), float32],) {
  %1279 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %1277 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1278 = %1277.0;
    (%1278,)
  };
  %1279() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_7939() -> Tensor[(6, 14, 10), float32] {
  @func_7937() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_17592(%var_17590: Tensor[(14, 11, 15), float32]) -> (Tensor[(14, 11, 15), bool],) {
  @func_17589(%var_17590) /* ty=(Tensor[(14, 11, 15), bool],) */
}

def @func_20822(%var_20821: Tensor[(15, 8, 2), int64]) -> (Tensor[(15, 8, 2), bool], Tensor[(?, 14, 10), float64]) {
  %1294 = fn (%var_20799: Tensor[(15, 8, 2), int64]) -> (Tensor[(15, 8, 2), bool], Tensor[(?, 14, 10), float64]) {
    %1280 = cast(meta[relay.Constant][80] /* ty=Tensor[(15, 8, 2), int64] */, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
    %1281 = shape_of(%var_20799, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1282 = cast(%var_20799, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
    %1283 = dyn.reshape(%1280, %1281, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1284 = cast(meta[relay.Constant][81] /* ty=Tensor[(140, 1), uint32] */, dtype="uint32") /* ty=Tensor[(140, 1), uint32] */;
    %1285 = reshape(%1284, newshape=[140]) /* ty=Tensor[(140), uint32] */;
    %1286 = @func_15176(%1285) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) */;
    %1287 = %1286.1;
    %1288 = cast(meta[relay.Constant][81] /* ty=Tensor[(140, 1), uint32] */, dtype="float64") /* ty=Tensor[(140, 1), float64] */;
    %1289 = shape_of(%1287, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1290 = cast(%1287, dtype="float64") /* ty=Tensor[(1, 14, 10), float64] */;
    %1291 = dyn.reshape(%1288, %1289, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1292 = less_equal(%1282, %1283) /* ty=Tensor[(15, 8, 2), bool] */;
    %1293 = divide(%1290, %1291) /* ty=Tensor[(?, 14, 10), float64] */;
    (%1292, %1293)
  };
  %1294(%var_20821) /* ty=(Tensor[(15, 8, 2), bool], Tensor[(?, 14, 10), float64]) */
}

def @func_12669() -> Tensor[(6, 14, 10), float32] {
  %1295 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %1295() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_1549(%var_1547: Tensor[(5, 13, 5), int64], %var_1548: Tensor[(4, 16, 12), float64]) -> (Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) {
  %1314 = fn (%var_1512: Tensor[(5, 13, 5), int64], %var_1534: Tensor[(4, 16, 12), float64]) -> (Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) {
    %1296 = cast(meta[relay.Constant][82] /* ty=Tensor[(5, 13, 5), int64] */, dtype="int64") /* ty=Tensor[(5, 13, 5), int64] */;
    %1297 = shape_of(%var_1512, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1298 = cast(%var_1512, dtype="int64") /* ty=Tensor[(5, 13, 5), int64] */;
    %1299 = dyn.reshape(%1296, %1297, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1300 = cast(meta[relay.Constant][83] /* ty=Tensor[(192, 4), float32] */, dtype="float32") /* ty=Tensor[(192, 4), float32] */;
    %1301 = reshape(%1300, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
    %1302 = @func_122(%1301) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
    %1303 = %1302.0;
    %1304 = cast(%1303, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
    %1305 = reshape(%1304, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float32] */;
    %1306 = @func_122(%1305) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */;
    %1307 = %1306.1;
    %1308 = cast(%var_1534, dtype="bool") /* ty=Tensor[(4, 16, 12), bool] */;
    %1309 = shape_of(%1307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1310 = cast(%1307, dtype="bool") /* ty=Tensor[(4, 16, 12), bool] */;
    %1311 = dyn.reshape(%1308, %1309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1312 = bitwise_xor(%1298, %1299) /* ty=Tensor[(5, 13, 5), int64] */;
    %1313 = logical_or(%1310, %1311) /* ty=Tensor[(4, 16, 12), bool] */;
    (%1312, %1303, meta[relay.Constant][83] /* ty=Tensor[(192, 4), float32] */, %1313)
  };
  %1314(%var_1547, %var_1548) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */
}

def @func_12603(%var_12601: Tensor[(6, 14, 10), float32]) -> (Tensor[(6, 14, 10), uint16], int64, Tensor[(42), uint16]) {
  @func_12600(%var_12601) /* ty=(Tensor[(6, 14, 10), uint16], int64, Tensor[(42), uint16]) */
}

def @func_15197() -> Tensor[(7, 11, 5), float64] {
  %1315 = @func_14915() /* ty=Tensor[(7, 11, 5), float64] */;
  %1316 = cast(%1315, dtype="float64") /* ty=Tensor[(7, 11, 5), float64] */;
  erf(%1316) /* ty=Tensor[(7, 11, 5), float64] */
}

def @func_122(%var_95: Tensor[(4, 16, 12), float32]) -> (Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) {
  %1317 = cast(%var_95, dtype="float32") /* ty=Tensor[(4, 16, 12), float32] */;
  %1318 = cast(%var_95, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
  %1319 = cosh(%1317) /* ty=Tensor[(4, 16, 12), float32] */;
  %1320 = log2(%1318) /* ty=Tensor[(4, 16, 12), float64] */;
  (%1319, %1320)
}

def @func_16884() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1321 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1322 = @func_9827() /* ty=Tensor[(6, 14, 10), float32] */;
  %1323 = @func_9379() /* ty=Tensor[(6, 14, 10), float32] */;
  %1324 = %1321.0;
  (%1322, %1323, %1324)
}

def @func_17041() -> (Tensor[(11, 11, 12), float32], Tensor[(6, 14, 10), float32]) {
  %1328 = fn () -> (Tensor[(11, 11, 12), float32], Tensor[(6, 14, 10), float32]) {
    %1325 = @func_9558() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1326 = @func_15772() /* ty=Tensor[(11, 11, 12), float32] */;
    %1327 = %1325.0;
    (%1326, %1327)
  };
  %1328() /* ty=(Tensor[(11, 11, 12), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_20070(%var_20060: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float32], Tensor[(140), uint32], uint32, Tensor[(140), uint32], Tensor[(6, 14, 10), float32]) {
  %1329 = cast(meta[relay.Constant][84] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1330 = cast(%var_20060, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %1331 = reshape(%1329, newshape=[]) /* ty=uint32 */;
  %1332 = reshape(%1330, newshape=[140]) /* ty=Tensor[(140), uint32] */;
  %1333 = @func_7969(%1331, %1332) /* ty=(Tensor[(6, 14, 10), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) */;
  %1334 = @func_9469() /* ty=Tensor[(6, 14, 10), float32] */;
  %1335 = %1333.3;
  %1336 = @func_15105() /* ty=Tensor[(6, 14, 10), float32] */;
  (%1334, %1335, meta[relay.Constant][84] /* ty=uint32 */, %var_20060, %1336)
}

def @func_20276(%var_20274: Tensor[(105), float64], %var_20275: Tensor[(325, 1), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325, 105), bool], Tensor[(256), float64]) {
  @func_20272(%var_20274, %var_20275) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325, 105), bool], Tensor[(256), float64]) */
}

def @func_12269() -> (Tensor[(6, 14, 10), float32],) {
  %1339 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %1337 = @func_11230() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(325), int64], Tensor[(768), float64], Tensor[(90), float64], Tensor[(42), float64], Tensor[(35, 10), int32], Tensor[(42), float64]) */;
    %1338 = %1337.0;
    (%1338,)
  };
  %1339() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_17317() -> Tensor[(6, 14, 10), float32] {
  %1340 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1340.0
}

def @func_14043(%var_14041: Tensor[(3, 30), float64], %var_14042: Tensor[(60), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(60), float64]) {
  @func_14039(%var_14041, %var_14042) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(6, 14, 10), float32], Tensor[(2, 15, 3), bool], Tensor[(60), float64]) */
}

def @func_15709() -> Tensor[(6, 14, 10), float32] {
  %1341 = @func_9353() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %1341.3
}

def @func_15107() -> Tensor[(6, 14, 10), float32] {
  @func_15105() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_18275() -> (Tensor[(6, 14, 10), float32],) {
  %1342 = @func_12049() /* ty=Tensor[(6, 14, 10), float32] */;
  (%1342,)
}

def @func_9905(%var_9902: Tensor[(216), float64], %var_9903: uint32, %var_9904: Tensor[(35, 4), uint32]) -> (Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) {
  @func_9900(%var_9902, %var_9903, %var_9904) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */
}

def @func_15133(%var_15132: Tensor[(3, 6), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(3, 6), int64], Tensor[(216), int64]) {
  %1350 = fn (%var_15128: Tensor[(3, 6), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(3, 6), int64], Tensor[(216), int64]) {
    %1343 = cast(%var_15128, dtype="int64") /* ty=Tensor[(3, 6), int64] */;
    %1344 = cast(meta[relay.Constant][85] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
    %1345 = reshape(%1343, newshape=[3, 6, 1]) /* ty=Tensor[(3, 6, 1), int64] */;
    %1346 = reshape(%1344, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), int64] */;
    %1347 = @func_11111(%1345, %1346) /* ty=(Tensor[(3, 6, 12), int64], Tensor[(6, 14, 10), float32]) */;
    %1348 = @func_9469() /* ty=Tensor[(6, 14, 10), float32] */;
    %1349 = %1347.1;
    (%1348, %1349, %var_15128, meta[relay.Constant][85] /* ty=Tensor[(216), int64] */)
  };
  %1350(%var_15132) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(3, 6), int64], Tensor[(216), int64]) */
}

def @func_15450() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1354 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %1351 = @func_9008() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1352 = %1351.0;
    %1353 = @func_13918() /* ty=Tensor[(6, 14, 10), float32] */;
    (%1352, %1353)
  };
  %1354() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10249() -> Tensor[(256), float64] {
  %1356 = fn () -> Tensor[(256), float64] {
    %1355 = @func_9727() /* ty=(Tensor[(256), float64], Tensor[(8, 16, 2), float64]) */;
    %1355.0
  };
  %1356() /* ty=Tensor[(256), float64] */
}

def @func_7113() -> (Tensor[(256), float64], Tensor[(4, 16, 4), float64]) {
  @func_7111() /* ty=(Tensor[(256), float64], Tensor[(4, 16, 4), float64]) */
}

def @func_17131() -> Tensor[(6, 14, 10), float32] {
  @func_16705() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_22402() -> (Tensor[(6, 14, 10), float32],) {
  %1357 = @func_16363() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %1358 = %1357.2;
  (%1358,)
}

def @func_19008() -> Tensor[(6, 14, 10), float32] {
  @func_12765() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_7346() -> Tensor[(6, 14, 10), float32] {
  %1360 = fn () -> Tensor[(6, 14, 10), float32] {
    %1359 = @func_6898() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 4), float64], Tensor[(256), float64]) */;
    %1359.0
  };
  %1360() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_11022() -> (Tensor[(6, 14, 10), float32], Tensor[(224), float32]) {
  %1364 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(224), float32]) {
    %1361 = @func_9294() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32], Tensor[(42), float64]) */;
    %1362 = @func_9379() /* ty=Tensor[(6, 14, 10), float32] */;
    %1363 = %1361.1;
    (%1362, %1363)
  };
  %1364() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(224), float32]) */
}

def @func_8663(%var_8661: Tensor[(13, 1, 5), float32]) -> (Tensor[(13, 1, 5), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  @func_8660(%var_8661) /* ty=(Tensor[(13, 1, 5), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */
}

def @func_8448() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1365 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1366 = @func_8278() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1367 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %1368 = %1365.0;
  %1369 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %1370 = %1366.0;
  (%1367, %1368, %1369, %1370)
}

def @func_16290() -> Tensor[(105), float64] {
  @func_16288() /* ty=Tensor[(105), float64] */
}

def @func_18277() -> (Tensor[(6, 14, 10), float32],) {
  @func_18275() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_12069() -> Tensor[(6, 14, 10), float32] {
  %1371 = @func_10530() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
  %1371.4
}

def @func_6628() -> (Tensor[(6, 14, 10), float32],) {
  @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_8872() -> (Tensor[(6, 14, 10), float32],) {
  @func_8870() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_10267(%var_10265: Tensor[(3, 16, 8), float64]) -> Tensor[(3, 16, 8), float64] {
  @func_10264(%var_10265) /* ty=Tensor[(3, 16, 8), float64] */
}

def @func_21255() -> Tensor[(6, 14, 10), float32] {
  @func_21253() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_9381() -> Tensor[(6, 14, 10), float32] {
  @func_9379() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_7410() -> Tensor[(6, 14, 10), float32] {
  @func_7345() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_17821(%var_17819: Tensor[(5, 10, 7), float32]) -> Tensor[(5, 10, 7), float32] {
  @func_17818(%var_17819) /* ty=Tensor[(5, 10, 7), float32] */
}

def @func_21714() -> Tensor[(6, 14, 10), float32] {
  %1373 = fn () -> Tensor[(6, 14, 10), float32] {
    %1372 = @func_18114() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %1372.1
  };
  %1373() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_19374(%var_19373: Tensor[(6, 8, 2), float64]) -> Tensor[(6, 8, 2), float64] {
  %1375 = fn (%var_19369: Tensor[(6, 8, 2), float64]) -> Tensor[(6, 8, 2), float64] {
    %1374 = cast(%var_19369, dtype="float64") /* ty=Tensor[(6, 8, 2), float64] */;
    sin(%1374) /* ty=Tensor[(6, 8, 2), float64] */
  };
  %1375(%var_19373) /* ty=Tensor[(6, 8, 2), float64] */
}

def @func_10532() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_10530() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(1, 9, 1), float32], Tensor[(9), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_16441() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_16439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_21750() -> Tensor[(6, 14, 10), float32] {
  %1376 = @func_8835() /* ty=(Tensor[(6, 14, 10), float32], uint32, uint32, Tensor[(70, 2), uint32]) */;
  %1376.0
}

def @func_7969(%var_7966: uint32, %var_7967: Tensor[(140), uint32]) -> (Tensor[(6, 14, 10), float64], Tensor[(1, 14, 10), bool], uint32, Tensor[(140), uint32]) {
  %1377 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1378 = %1377.0;
  %1379 = cast(%1378, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
  %1380 = cast(%var_7966, dtype="uint32") /* ty=uint32 */;
  %1381 = cast(%var_7967, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %1382 = reshape(%1380, newshape=[]) /* ty=uint32 */;
  %1383 = reshape(%1381, newshape=[1, 14, 10]) /* ty=Tensor[(1, 14, 10), uint32] */;
  %1384 = sinh(%1379) /* ty=Tensor[(6, 14, 10), float64] */;
  %1385 = @func_2222(%1382, %1383) /* ty=Tensor[(1, 14, 10), bool] */;
  (%1384, %1385, %var_7966, %var_7967)
}

def @func_9379() -> Tensor[(6, 14, 10), float32] {
  %1386 = @func_8278() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1386.0
}

def @func_14108(%var_14106: Tensor[(5, 4, 11), float64]) -> (Tensor[(5, 4, 11), float64], Tensor[(7, 11, 5), float64]) {
  @func_14105(%var_14106) /* ty=(Tensor[(5, 4, 11), float64], Tensor[(7, 11, 5), float64]) */
}

def @func_9828() -> Tensor[(6, 14, 10), float32] {
  %1387 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_9502() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %1387() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_13883(%var_13881: Tensor[(8, 12, 5), uint64]) -> (Tensor[(8, 12, 5), bool],) {
  @func_13880(%var_13881) /* ty=(Tensor[(8, 12, 5), bool],) */
}

def @func_12554() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_12552() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_4363(%var_4339: Tensor[(14, 12, 10), float64]) -> (Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), float32]) {
  %1388 = cast(%var_4339, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %1389 = cast(%var_4339, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %1390 = cosh(%1388) /* ty=Tensor[(14, 12, 10), float64] */;
  %1391 = sqrt(%1389) /* ty=Tensor[(14, 12, 10), float32] */;
  (%1390, %1391)
}

def @func_12159() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1392 = @func_9558() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1393 = @func_11178() /* ty=(Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
  %1394 = @func_7937() /* ty=Tensor[(6, 14, 10), float32] */;
  %1395 = %1392.0;
  %1396 = %1393.1;
  (%1394, %1395, %1396)
}

def @func_8966() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) {
  @func_8964() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float64], Tensor[(6, 14, 10), float32]) */
}

def @func_17319() -> Tensor[(6, 14, 10), float32] {
  @func_17317() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_18735() -> (Tensor[(5, 16, 14), float32],) {
  %1397 = @func_14934() /* ty=(Tensor[(5, 16, 14), float32],) */;
  %1398 = %1397.0;
  (%1398,)
}

def @func_8046(%var_8026: Tensor[(3, 3), float32], %var_8038: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1399 = cast(%var_8026, dtype="float32") /* ty=Tensor[(3, 3), float32] */;
  %1400 = reshape(%1399, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), float32] */;
  %1401 = @func_5006(%1400) /* ty=(Tensor[(1, 9, 1), float32],) */;
  %1402 = %1401.0;
  %1403 = cast(%1402, dtype="float32") /* ty=Tensor[(1, 9, 1), float32] */;
  %1404 = reshape(%1403, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), float32] */;
  %1405 = @func_5006(%1404) /* ty=(Tensor[(1, 9, 1), float32],) */;
  %1406 = cast(meta[relay.Constant][86] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %1407 = cast(meta[relay.Constant][87] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1408 = cast(%var_8038, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1409 = reshape(%1406, newshape=[2, 7, 11]) /* ty=Tensor[(2, 7, 11), float32] */;
  %1410 = reshape(%1407, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %1411 = reshape(%1408, newshape=[256, 1]) /* ty=Tensor[(256, 1), float64] */;
  %1412 = @func_6828(%1409, %1410, %1411) /* ty=(Tensor[(2, 7, 11), float32], Tensor[(14, 12, 10), float32], Tensor[(224), float32], Tensor[(42), float64], Tensor[(1680), float64], Tensor[(4, 16, 4), float64], Tensor[(256, 1), float64], Tensor[(6, 14, 10), float32]) */;
  %1413 = @func_7741() /* ty=Tensor[(6, 14, 10), float32] */;
  %1414 = %1405.0;
  %1415 = %1412.4;
  %1416 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %1417 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  (%1413, %1402, %var_8026, %1414, %1415, meta[relay.Constant][86] /* ty=Tensor[(154), float32] */, meta[relay.Constant][87] /* ty=Tensor[(1680), float64] */, %var_8038, %1416, %1417)
}

def @func_6947(%var_6934: Tensor[(105), float64], %var_6942: Tensor[(325, 1), int64]) -> (Tensor[(6, 14, 10), float32], Tensor[(3, 7, 5), float64], Tensor[(105), float64], Tensor[(768), float32], Tensor[(5, 13, 5), int64], Tensor[(325, 1), int64]) {
  %1418 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1419 = cast(%var_6934, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1420 = cast(meta[relay.Constant][88] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1421 = reshape(%1419, newshape=[3, 7, 5]) /* ty=Tensor[(3, 7, 5), float64] */;
  %1422 = reshape(%1420, newshape=[32, 24]) /* ty=Tensor[(32, 24), float32] */;
  %1423 = @func_1630(%1421, %1422) /* ty=(Tensor[(3, 7, 5), float64], Tensor[(4, 16, 12), float64], Tensor[(32, 24), float32], Tensor[(192, 4), float32], Tensor[(325), int64]) */;
  %1424 = cast(%var_6942, dtype="int64") /* ty=Tensor[(325, 1), int64] */;
  %1425 = cast(meta[relay.Constant][88] /* ty=Tensor[(768), float32] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %1426 = reshape(%1424, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), int64] */;
  %1427 = reshape(%1425, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %1428 = @func_1546(%1426, %1427) /* ty=(Tensor[(5, 13, 5), int64], Tensor[(4, 16, 12), float32], Tensor[(192, 4), float32], Tensor[(4, 16, 12), bool]) */;
  %1429 = %1418.0;
  %1430 = %1423.0;
  %1431 = %1428.0;
  (%1429, %1430, %var_6934, meta[relay.Constant][88] /* ty=Tensor[(768), float32] */, %1431, %var_6942)
}

def @func_13946() -> Tensor[(6, 14, 10), float32] {
  %1433 = fn () -> Tensor[(6, 14, 10), float32] {
    %1432 = @func_13655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %1432.0
  };
  %1433() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_17749() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64]) {
  %1439 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64]) {
    %1434 = cast(meta[relay.Constant][89] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %1435 = reshape(%1434, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %1436 = @func_17072(%1435) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(60), float64], Tensor[(90), float64], Tensor[(60), float64]) */;
    %1437 = @func_13918() /* ty=Tensor[(6, 14, 10), float32] */;
    %1438 = %1436.0;
    (%1437, %1438, meta[relay.Constant][89] /* ty=Tensor[(90), float64] */)
  };
  %1439() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(90), float64]) */
}

def @func_10115() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_10113() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_7645(%var_7644: Tensor[(768), float64]) -> (Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) {
  %1467 = fn (%var_7636: Tensor[(768), float64]) -> (Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) {
    %1440 = cast(meta[relay.Constant][90] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %1441 = cast(meta[relay.Constant][90] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %1442 = reshape(%1440, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
    %1443 = reshape(%1441, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
    %1444 = @func_5698(%1442, %1443) /* ty=(Tensor[(2, 15, 3), bool],) */;
    %1445 = cast(meta[relay.Constant][91] /* ty=Tensor[(675), float32] */, dtype="float32") /* ty=Tensor[(675), float32] */;
    %1446 = reshape(%1445, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
    %1447 = @func_7265(%1446) /* ty=Tensor[(5, 15, 9), float32] */;
    %1448 = cast(%1447, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
    %1449 = reshape(%1448, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float32] */;
    %1450 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1451 = %1450.0;
    %1452 = cast(%1451, dtype="float64") /* ty=Tensor[(6, 14, 10), float64] */;
    %1453 = log2(%1452) /* ty=Tensor[(6, 14, 10), float64] */;
    %1454 = cast(%1451, dtype="int8") /* ty=Tensor[(6, 14, 10), int8] */;
    %1455 = shape_of(%1453, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1456 = cast(%1453, dtype="int8") /* ty=Tensor[(6, 14, 10), int8] */;
    %1457 = dyn.reshape(%1454, %1455, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1458 = cast(meta[relay.Constant][92] /* ty=Tensor[(13, 25), int64] */, dtype="int64") /* ty=Tensor[(13, 25), int64] */;
    %1459 = cast(%var_7636, dtype="float64") /* ty=Tensor[(768), float64] */;
    %1460 = reshape(%1458, newshape=[325]) /* ty=Tensor[(325), int64] */;
    %1461 = reshape(%1459, newshape=[768]) /* ty=Tensor[(768), float64] */;
    %1462 = @func_7477(%1460, %1461) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), bool], Tensor[(325), int64], Tensor[(768), float64]) */;
    %1463 = %1444.0;
    %1464 = @func_7265(%1449) /* ty=Tensor[(5, 15, 9), float32] */;
    %1465 = logical_xor(%1456, %1457) /* ty=Tensor[(6, 14, 10), int8] */;
    %1466 = %1462.0;
    (%1463, meta[relay.Constant][90] /* ty=Tensor[(90), float64] */, %1447, meta[relay.Constant][91] /* ty=Tensor[(675), float32] */, %1464, %1465, %1466, meta[relay.Constant][92] /* ty=Tensor[(13, 25), int64] */, %var_7636)
  };
  %1467(%var_7644) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(90), float64], Tensor[(5, 15, 9), float32], Tensor[(675), float32], Tensor[(5, 15, 9), float32], Tensor[(6, 14, 10), int8], Tensor[(6, 14, 10), float32], Tensor[(13, 25), int64], Tensor[(768), float64]) */
}

def @func_17818(%var_17809: Tensor[(5, 10, 7), float32]) -> Tensor[(5, 10, 7), float32] {
  %1468 = cast(%var_17809, dtype="float32") /* ty=Tensor[(5, 10, 7), float32] */;
  cosh(%1468) /* ty=Tensor[(5, 10, 7), float32] */
}

def @func_10843(%var_10842: Tensor[(216), float64]) -> (uint32, Tensor[(216), float64], Tensor[(216), float64], Tensor[(140), uint32]) {
  %1479 = fn (%var_10823: Tensor[(216), float64]) -> (uint32, Tensor[(216), float64], Tensor[(216), float64], Tensor[(140), uint32]) {
    %1469 = @func_10655() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(140), uint32], Tensor[(1248), float64], uint32) */;
    %1470 = cast(%var_10823, dtype="float64") /* ty=Tensor[(216), float64] */;
    %1471 = %1469.4;
    %1472 = cast(%1471, dtype="uint32") /* ty=uint32 */;
    %1473 = cast(meta[relay.Constant][93] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %1474 = reshape(%1470, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %1475 = reshape(%1472, newshape=[]) /* ty=uint32 */;
    %1476 = reshape(%1473, newshape=[35, 4]) /* ty=Tensor[(35, 4), uint32] */;
    %1477 = @func_9900(%1474, %1475, %1476) /* ty=(Tensor[(8, 16, 2), float64], Tensor[(4, 16, 12), float64], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
    %1478 = %1477.2;
    (%1471, %1478, %var_10823, meta[relay.Constant][93] /* ty=Tensor[(140), uint32] */)
  };
  %1479(%var_10842) /* ty=(uint32, Tensor[(216), float64], Tensor[(216), float64], Tensor[(140), uint32]) */
}

def @func_8278() -> (Tensor[(6, 14, 10), float32],) {
  %1480 = @func_6741() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1481 = %1480.0;
  (%1481,)
}

def @func_14211() -> (Tensor[(6, 14, 10), float32],) {
  %1484 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %1482 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1483 = %1482.0;
    (%1483,)
  };
  %1484() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_21218() -> Tensor[(6, 14, 10), float32] {
  %1485 = @func_17546() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(256), float64], Tensor[(256), float64]) */;
  %1485.0
}

def @func_6717(%var_6715: uint32) -> (Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], Tensor[(14, 5, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(1, 14, 10), bool], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) {
  @func_6714(%var_6715) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], Tensor[(14, 5, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(1, 14, 10), bool], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */
}

def @func_21752() -> Tensor[(6, 14, 10), float32] {
  @func_21750() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_7481(%var_7479: Tensor[(325), int64], %var_7480: Tensor[(768), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), bool], Tensor[(325), int64], Tensor[(768), float64]) {
  @func_7477(%var_7479, %var_7480) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(4, 16, 12), bool], Tensor[(325), int64], Tensor[(768), float64]) */
}

def @main() -> (Tensor[(3, 12, 13), float32],) {
  %1486 = cast(meta[relay.Constant][94] /* ty=Tensor[(3, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 13), float32] */;
  %1487 = log2(%1486) /* ty=Tensor[(3, 12, 13), float32] */;
  (%1487,)
}

def @func_14977() -> Tensor[(6, 14, 10), float32] {
  %1488 = fn () -> Tensor[(6, 14, 10), float32] {
    @func_11801() /* ty=Tensor[(6, 14, 10), float32] */
  };
  %1488() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_19830() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1496 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
    %1489 = @func_11872() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1490 = @func_9611() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %1491 = @func_12503() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %1492 = %1489.0;
    %1493 = %1490.0;
    %1494 = %1491.0;
    %1495 = @func_18044() /* ty=Tensor[(6, 14, 10), float32] */;
    (%1492, %1493, %1494, %1495)
  };
  %1496() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_10945(%var_10943: Tensor[(5, 5, 14), int32], %var_10944: Tensor[(42), float64]) -> (Tensor[(5, 5, 14), int32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(42), float64]) {
  %1506 = fn (%var_10919: Tensor[(5, 5, 14), int32], %var_10938: Tensor[(42), float64]) -> (Tensor[(5, 5, 14), int32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(42), float64]) {
    %1497 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %1498 = cast(%var_10919, dtype="int32") /* ty=Tensor[(5, 5, 14), int32] */;
    %1499 = cast(meta[relay.Constant][95] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %1500 = cast(%var_10938, dtype="float64") /* ty=Tensor[(42), float64] */;
    %1501 = reshape(%1499, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
    %1502 = reshape(%1500, newshape=[42]) /* ty=Tensor[(42), float64] */;
    %1503 = @func_2959(%1501, %1502) /* ty=(Tensor[(14, 16, 1), float32], Tensor[(1, 6, 7), float64], Tensor[(42), float64]) */;
    %1504 = bitwise_xor(%1497, %1498) /* ty=Tensor[(5, 5, 14), int32] */;
    %1505 = %1503.2;
    (%1504, %1505, meta[relay.Constant][95] /* ty=Tensor[(224), float32] */, %var_10938)
  };
  %1506(%var_10943, %var_10944) /* ty=(Tensor[(5, 5, 14), int32], Tensor[(42), float64], Tensor[(224), float32], Tensor[(42), float64]) */
}

def @func_8050(%var_8048: Tensor[(3, 3), float32], %var_8049: Tensor[(256), float64]) -> (Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  @func_8046(%var_8048, %var_8049) /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1, 9, 1), float32], Tensor[(3, 3), float32], Tensor[(1, 9, 1), float32], Tensor[(1680), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */
}

def @func_19490() -> (Tensor[(6, 14, 10), float32], Tensor[(1680), float64]) {
  %1511 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(1680), float64]) {
    %1507 = @func_8633() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %1508 = @func_9261() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(42), float64], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(256), float64], Tensor[(6, 14, 10), float32]) */;
    %1509 = %1507.0;
    %1510 = %1508.3;
    (%1509, %1510)
  };
  %1511() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(1680), float64]) */
}

def @func_15341() -> Tensor[(6, 14, 10), float32] {
  %1513 = fn () -> Tensor[(6, 14, 10), float32] {
    %1512 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1512.0
  };
  %1513() /* ty=Tensor[(6, 14, 10), float32] */
}

def @func_125(%var_123: Tensor[(4, 16, 12), float32]) -> (Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) {
  @func_122(%var_123) /* ty=(Tensor[(4, 16, 12), float32], Tensor[(4, 16, 12), float64]) */
}

def @func_20963() -> (Tensor[(105), float64],) {
  %1515 = fn () -> (Tensor[(105), float64],) {
    %1514 = @func_17375() /* ty=Tensor[(105), float64] */;
    (%1514,)
  };
  %1515() /* ty=(Tensor[(105), float64],) */
}

def @func_16816() -> Tensor[(256), float64] {
  %1516 = fn () -> Tensor[(256), float64] {
    @func_13178() /* ty=Tensor[(256), float64] */
  };
  %1516() /* ty=Tensor[(256), float64] */
}

def @func_18528(%var_18526: Tensor[(154), float32], %var_18527: Tensor[(1680), float64]) -> (Tensor[(256), float64], Tensor[(224), float32], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(6, 14, 10), float32]) {
  @func_18524(%var_18526, %var_18527) /* ty=(Tensor[(256), float64], Tensor[(224), float32], Tensor[(154), float32], Tensor[(1680), float64], Tensor[(6, 14, 10), float32]) */
}

def @func_13279() -> (Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) {
  %1523 = fn () -> (Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) {
    %1517 = @func_8448() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) */;
    %1518 = cast(meta[relay.Constant][96] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1519 = reshape(%1518, newshape=[]) /* ty=uint32 */;
    %1520 = @func_6714(%1519) /* ty=(Tensor[(2, 15, 3), bool], Tensor[(3, 30), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64], Tensor[(14, 5, 5), float64], Tensor[(14, 5, 5), float64], Tensor[(1, 14, 10), bool], Tensor[(216), float64], Tensor[(325), int64], uint32, Tensor[(35, 4), uint32]) */;
    %1521 = %1517.2;
    %1522 = %1520.4;
    (%1521, %1522, meta[relay.Constant][96] /* ty=uint32 */)
  };
  %1523() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(14, 5, 5), float64], uint32) */
}

def @func_5664(%var_5663: Tensor[(4, 16, 4), float64]) -> Tensor[(4, 16, 4), float64] {
  %1525 = fn (%var_5653: Tensor[(4, 16, 4), float64]) -> Tensor[(4, 16, 4), float64] {
    %1524 = cast(%var_5653, dtype="float64") /* ty=Tensor[(4, 16, 4), float64] */;
    sigmoid(%1524) /* ty=Tensor[(4, 16, 4), float64] */
  };
  %1525(%var_5663) /* ty=Tensor[(4, 16, 4), float64] */
}

def @func_13859() -> (Tensor[(6, 14, 10), float32], Tensor[(256), float64]) {
  @func_13857() /* ty=(Tensor[(6, 14, 10), float32], Tensor[(256), float64]) */
}

def @func_11595() -> (Tensor[(6, 14, 10), float32],) {
  %1528 = fn () -> (Tensor[(6, 14, 10), float32],) {
    %1526 = @func_10875() /* ty=(Tensor[(6, 14, 10), float32],) */;
    %1527 = %1526.0;
    (%1527,)
  };
  %1528() /* ty=(Tensor[(6, 14, 10), float32],) */
}

def @func_14433() -> (Tensor[(6, 14, 10), float32], Tensor[(6, 14, 10), float32]) {
  %1529 = @func_14398() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1530 = @func_7410() /* ty=Tensor[(6, 14, 10), float32] */;
  %1531 = %1529.0;
  (%1530, %1531)
}

def @func_14814() -> (Tensor[(6, 14, 10), float32],) {
  %1532 = @func_7392() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1533 = %1532.0;
  (%1533,)
}

def @func_12611() -> Tensor[(6, 14, 10), float32] {
  %1534 = @func_6626() /* ty=(Tensor[(6, 14, 10), float32],) */;
  %1534.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen899/build/output.py:5405: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen899/build/output.py:5410: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')

===================================
#[version = "0.0.5"]
type GradCell[T] {
  Raw(T),
  One(fn () -> T),
  Zero(fn () -> T),
}

def @main() -> ((Tensor[(3, 12, 13), float32],), ()) {
  let %x: fn () -> ((GradCell[Tensor[(3, 12, 13), float32]],), ()) = fn () -> ((GradCell[Tensor[(3, 12, 13), float32]],), ()) {
    let %x1: GradCell[Tensor[(3, 12, 13), float32]] = Raw(meta[relay.Constant][0] /* ty=Tensor[(3, 12, 13), float32] */) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
    let %x2: fn () -> Tensor[(3, 12, 13), float32] = fn () -> Tensor[(3, 12, 13), float32] {
      meta[relay.Constant][1] /* ty=Tensor[(3, 12, 13), float32] */
    };
    let %x3: GradCell[Tensor[(3, 12, 13), float32]] = One(%x2) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
    let %x4: (GradCell[Tensor[(3, 12, 13), float32]],) = (%x1,);
    let %x5: fn () -> Tensor[(3, 12, 13), float32] = fn () -> Tensor[(3, 12, 13), float32] {
      meta[relay.Constant][2] /* ty=Tensor[(3, 12, 13), float32] */
    };
    let %x6: GradCell[Tensor[(3, 12, 13), float32]] = Zero(%x5) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
    let %x7: (GradCell[Tensor[(3, 12, 13), float32]],) = (%x6,);
    let %x8: fn (Tensor[(3, 12, 13), float32], Tensor[(3, 12, 13), float32]) -> Tensor[(3, 12, 13), float32] = fn (%lhs: Tensor[(3, 12, 13), float32], %rhs: Tensor[(3, 12, 13), float32]) -> Tensor[(3, 12, 13), float32] {
      let %x9: Tensor[(3, 12, 13), float32] = add(%lhs, %rhs) /* ty=Tensor[(3, 12, 13), float32] */;
      %x9
    };
    let %x10: fn () -> Tensor[(3, 12, 13), float32] = fn () -> Tensor[(3, 12, 13), float32] {
      meta[relay.Constant][3] /* ty=Tensor[(3, 12, 13), float32] */
    };
    let %x11: GradCell[Tensor[(3, 12, 13), float32]] = One(%x10) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
    let %x12: (GradCell[Tensor[(3, 12, 13), float32]],) = (%x11,);
    let %x13: (GradCell[Tensor[(3, 12, 13), float32]], GradCell[Tensor[(3, 12, 13), float32]]) = (%x3, %x11);
    let %x14: GradCell[Tensor[(3, 12, 13), float32]] = Raw(meta[relay.Constant][4] /* ty=Tensor[(3, 12, 13), float32] */) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
    let %x15: () = ();
    let %x16: ((GradCell[Tensor[(3, 12, 13), float32]],), ()) = (%x4, %x15);
    %x16
  };
  let %x17: GradCell[Tensor[(3, 12, 13), float32]] = Raw(meta[relay.Constant][0] /* ty=Tensor[(3, 12, 13), float32] */) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
  let %x18: fn () -> Tensor[(3, 12, 13), float32] = fn () -> Tensor[(3, 12, 13), float32] {
    meta[relay.Constant][5] /* ty=Tensor[(3, 12, 13), float32] */
  };
  let %x19: GradCell[Tensor[(3, 12, 13), float32]] = One(%x18) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
  let %x20: (GradCell[Tensor[(3, 12, 13), float32]],) = (%x17,);
  let %x21: fn () -> Tensor[(3, 12, 13), float32] = fn () -> Tensor[(3, 12, 13), float32] {
    meta[relay.Constant][6] /* ty=Tensor[(3, 12, 13), float32] */
  };
  let %x22: GradCell[Tensor[(3, 12, 13), float32]] = Zero(%x21) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
  let %x23: (GradCell[Tensor[(3, 12, 13), float32]],) = (%x22,);
  let %x24: fn (Tensor[(3, 12, 13), float32], Tensor[(3, 12, 13), float32]) -> Tensor[(3, 12, 13), float32] = fn (%lhs1: Tensor[(3, 12, 13), float32], %rhs1: Tensor[(3, 12, 13), float32]) -> Tensor[(3, 12, 13), float32] {
    let %x25: Tensor[(3, 12, 13), float32] = add(%lhs1, %rhs1) /* ty=Tensor[(3, 12, 13), float32] */;
    %x25
  };
  let %x26: fn () -> Tensor[(3, 12, 13), float32] = fn () -> Tensor[(3, 12, 13), float32] {
    meta[relay.Constant][7] /* ty=Tensor[(3, 12, 13), float32] */
  };
  let %x27: GradCell[Tensor[(3, 12, 13), float32]] = One(%x26) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
  let %x28: (GradCell[Tensor[(3, 12, 13), float32]],) = (%x27,);
  let %x29: (GradCell[Tensor[(3, 12, 13), float32]], GradCell[Tensor[(3, 12, 13), float32]]) = (%x19, %x27);
  let %x30: GradCell[Tensor[(3, 12, 13), float32]] = Raw(meta[relay.Constant][8] /* ty=Tensor[(3, 12, 13), float32] */) /* ty=GradCell[Tensor[(3, 12, 13), float32]] */;
  let %x31: () = ();
  let %x32: ((GradCell[Tensor[(3, 12, 13), float32]],), ()) = (%x20, %x31);
  let %x33: (Tensor[(3, 12, 13), float32],) = (meta[relay.Constant][0] /* ty=Tensor[(3, 12, 13), float32] */,);
  let %x34: () = ();
  let %x35: ((Tensor[(3, 12, 13), float32],), ()) = (%x33, %x34);
  %x35
}

def @AddGradCell[T](%add: fn (T, T) -> T, %l: GradCell[T], %r: GradCell[T]) -> GradCell[T] {
  let %x36: (GradCell[T], GradCell[T]) = (%l, %r);
  let %x37: GradCell[T] = match (%x36) {
    (Zero(_), _) => {
      %r
    },
    (_, Zero(_)) => {
      %l
    },
    _ => {
      let %x38: T = match (%l) {
        Raw(%x39: T) => {
          %x39
        },
        One(%x40: fn () -> T) => {
          let %x41: T = %x40() /* ty=T */;
          %x41
        },
        Zero(%x42: fn () -> T) => {
          let %x43: T = %x42() /* ty=T */;
          %x43
        },
      };
      let %x44: T = match (%r) {
        Raw(%x45: T) => {
          %x45
        },
        One(%x46: fn () -> T) => {
          let %x47: T = %x46() /* ty=T */;
          %x47
        },
        Zero(%x48: fn () -> T) => {
          let %x49: T = %x48() /* ty=T */;
          %x49
        },
      };
      let %x50: T = %add(%x38, %x44) /* ty=T */;
      let %x51: GradCell[T] = Raw(%x50) /* ty=GradCell[T] */;
      %x51
    },
  };
  %x37
}

def @MultiplyGradCell[T](%multiply: fn (T, T) -> T, %l1: GradCell[T], %r1: GradCell[T]) -> GradCell[T] {
  let %x52: (GradCell[T], GradCell[T]) = (%l1, %r1);
  let %x53: GradCell[T] = match (%x52) {
    (Zero(_), _) => {
      %l1
    },
    (_, Zero(_)) => {
      %r1
    },
    (One(_), _) => {
      %r1
    },
    (_, One(_)) => {
      %l1
    },
    _ => {
      let %x54: T = match (%l1) {
        Raw(%x55: T) => {
          %x55
        },
        One(%x56: fn () -> T) => {
          let %x57: T = %x56() /* ty=T */;
          %x57
        },
        Zero(%x58: fn () -> T) => {
          let %x59: T = %x58() /* ty=T */;
          %x59
        },
      };
      let %x60: T = match (%r1) {
        Raw(%x61: T) => {
          %x61
        },
        One(%x62: fn () -> T) => {
          let %x63: T = %x62() /* ty=T */;
          %x63
        },
        Zero(%x64: fn () -> T) => {
          let %x65: T = %x64() /* ty=T */;
          %x65
        },
      };
      let %x66: T = %multiply(%x54, %x60) /* ty=T */;
      let %x67: GradCell[T] = Raw(%x66) /* ty=GradCell[T] */;
      %x67
    },
  };
  %x53
}

def @FromGradCell[T](%g: GradCell[T]) -> T {
  let %x68: T = match (%g) {
    Raw(%x69: T) => {
      %x69
    },
    One(%x70: fn () -> T) => {
      let %x71: T = %x70() /* ty=T */;
      %x71
    },
    Zero(%x72: fn () -> T) => {
      let %x73: T = %x72() /* ty=T */;
      %x73
    },
  };
  %x68
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen899/build/output.py", line 5436, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  27: TVMFuncCall
  26: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  25: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  24: tvm::relay::backend::ExecutorCodegen::Codegen(tvm::relay::Function const&, tvm::runtime::String)
  23: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::GraphExecutorCodegenModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  22: tvm::relay::backend::GraphExecutorCodegen::Codegen(tvm::relay::Function, tvm::runtime::String)
  21: tvm::IRModule::FromExpr(tvm::RelayExpr const&, tvm::runtime::Map<tvm::GlobalVar, tvm::BaseFunc, void, void> const&, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void> const&)
  20: tvm::IRModule::FromExprInContext(tvm::RelayExpr const&, tvm::runtime::Map<tvm::GlobalVar, tvm::BaseFunc, void, void> const&, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void> const&, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >)
  19: tvm::IRModuleNode::Add(tvm::GlobalVar const&, tvm::BaseFunc const&, bool)
  18: tvm::WarnIfMalformed(tvm::IRModule const&, tvm::relay::Function)
  17: tvm::relay::FreeTypeVars(tvm::RelayExpr const&, tvm::IRModule const&)
  16: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
  15: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
  14: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
  12: tvm::relay::TypeVarEVisitor::VisitExpr_(tvm::relay::LetNode const*)
  11: tvm::relay::ExpandANormalForm(tvm::relay::LetNode const*, std::function<void (tvm::relay::LetNode const*)>, std::function<void (tvm::relay::LetNode const*)>)
  10: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
  9: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
  8: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
  7: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
  6: tvm::relay::TypeVarEVisitor::VisitExpr_(tvm::relay::LetNode const*)
  5: tvm::relay::ExpandANormalForm(tvm::relay::LetNode const*, std::function<void (tvm::relay::LetNode const*)>, std::function<void (tvm::relay::LetNode const*)>)
  4: tvm::relay::MixedModeVisitor::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::MixedModeVisitor::VisitLeaf(tvm::RelayExpr const&)
  2: tvm::relay::TypeVarEVisitor::VisitExpr_(tvm::ConstructorNode const*)
  1: tvm::IRModuleNode::LookupTypeDef(tvm::GlobalTypeVar const&) const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/src/ir/module.cc", line 279
TVMError: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------
  Check failed: (it != type_definitions.end()) is false: There is no definition of GradCell

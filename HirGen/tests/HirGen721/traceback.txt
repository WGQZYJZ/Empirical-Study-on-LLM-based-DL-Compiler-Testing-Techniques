==========mod==========
#[version = "0.0.5"]
def @func_21688() -> (Tensor[(4, 15, 14), float32],) {
  %0 = @func_11700() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1 = %0.0;
  (%1,)
}

def @func_4825() -> (Tensor[(4, 15, 14), float32],) {
  %2 = @func_3670() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %3 = %2.0;
  (%3,)
}

def @func_12405(%var_12389: Tensor[(4, 3, 15), float32]) -> (Tensor[(4, 3, 15), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %4 = cast(%var_12389, dtype="float32") /* ty=Tensor[(4, 3, 15), float32] */;
  %5 = @func_9329() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %6 = @func_5123() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %7 = log10(%4) /* ty=Tensor[(4, 3, 15), float32] */;
  %8 = %5.0;
  %9 = %6.0;
  (%7, %8, %9)
}

def @func_753() -> Tensor[(4, 15, 14), float32] {
  @func_553() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_17848() -> Tensor[(4, 15, 14), float32] {
  @func_1424() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_1735() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %10 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %11 = @func_1611() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %12 = %10.1;
  %13 = %11.0;
  (%12, %13)
}

def @func_8222(%var_8199: Tensor[(4, 8, 2), float32], %var_8204: Tensor[(1680), uint16]) -> (Tensor[(4, 8, 2), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), bool]) {
  %14 = cast(%var_8199, dtype="float32") /* ty=Tensor[(4, 8, 2), float32] */;
  %15 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(4, 8, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(4, 8, 2), float32] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %18 = cast(%var_8204, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %19 = reshape(%18, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
  %20 = @func_1332(%19) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %21 = mod(%16, %17) /* ty=Tensor[(4, 8, 2), float32] */;
  %22 = %20.10;
  %23 = @func_4278() /* ty=Tensor[(4, 15, 14), bool] */;
  (%21, %22, %var_8204, %23)
}

def @func_11430() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) {
  %24 = @func_10956() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %25 = @func_2422() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %26 = @func_5379() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %27 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %28 = @func_4108() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) */;
  %29 = @func_3432() /* ty=Tensor[(4, 15, 14), bool] */;
  %30 = %24.1;
  %31 = %25.0;
  %32 = %26.1;
  %33 = %27.1;
  %34 = %28.1;
  (%29, %30, %31, %32, %33, %34)
}

def @func_18851() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %35 = @func_11020() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %36 = @func_14186() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %37 = %35.2;
  %38 = %36.1;
  (%37, %38)
}

def @func_3818() -> Tensor[(4, 15, 14), bool] {
  @func_3432() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_2489() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %39 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  %40 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
  (%39, %40)
}

def @func_11614() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %41 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %42 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %43 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %44 = %41.0;
  %45 = %42.0;
  %46 = %43.1;
  (%44, %45, %46)
}

def @func_18982() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %47 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %48 = @func_16900() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %49 = %47.1;
  %50 = %48.0;
  (%49, %50)
}

def @func_2525() -> (Tensor[(4, 15, 14), float32],) {
  %51 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  (%51,)
}

def @func_15752() -> Tensor[(4, 15, 14), bool] {
  @func_1014() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_3393() -> Tensor[(4, 15, 14), float32] {
  %52 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %52.0
}

def @func_5290() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %53 = @func_5123() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %54 = @func_1478() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %55 = @func_3002() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %56 = @func_3227() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %57 = @func_2738() /* ty=Tensor[(4, 15, 14), float64] */;
  %58 = %53.0;
  %59 = %54.1;
  %60 = %55.0;
  %61 = @func_4039() /* ty=Tensor[(4, 15, 14), float32] */;
  %62 = %56.2;
  (%57, %58, %59, %60, %61, %62)
}

def @func_586() -> (Tensor[(4, 15, 14), bool],) {
  %63 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %64 = %63.2;
  (%64,)
}

def @func_12342() -> Tensor[(4, 15, 14), bool] {
  @func_4278() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_3793() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %65 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %66 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %67 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %68 = %65.1;
  %69 = %66.0;
  %70 = %67.0;
  %71 = @func_1222() /* ty=Tensor[(4, 15, 14), float32] */;
  (%68, %69, %70, %71)
}

def @func_8892() -> (Tensor[(4, 15, 14), float32],) {
  %72 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %73 = %72.0;
  (%73,)
}

def @func_13249() -> Tensor[(4, 15, 14), float32] {
  %74 = @func_8782() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %74.0
}

def @func_2277() -> Tensor[(4, 15, 14), float32] {
  @func_928() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_384() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %75 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %76 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %77 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %78 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %79 = %78.2;
  %80 = cast(%79, dtype="float64") /* ty=Tensor[(4, 15, 14), float64] */;
  %81 = atanh(%80) /* ty=Tensor[(4, 15, 14), float64] */;
  %82 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %83 = %82.3;
  %84 = cast(%83, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %85 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%81, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %88 = %75.2;
  %89 = %76.0;
  %90 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %91 = %77.2;
  %92 = power(%86, %87) /* ty=Tensor[(4, 15, 14), float32] */;
  (%88, %89, %90, %91, %92)
}

def @func_1515() -> (Tensor[(4, 15, 14), float32],) {
  %93 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %94 = %93.3;
  (%94,)
}

def @func_4278() -> Tensor[(4, 15, 14), bool] {
  %95 = @func_1478() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %95.0
}

def @func_18323() -> Tensor[(4, 15, 14), bool] {
  @func_17091() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_14762() -> (Tensor[(4, 15, 14), bool],) {
  %96 = @func_9072() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %97 = %96.0;
  (%97,)
}

def @func_15652() -> Tensor[(4, 15, 14), float32] {
  %98 = @func_8769() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %98.0
}

def @func_2000() -> (Tensor[(4, 15, 14), float32],) {
  %99 = @func_1611() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %100 = %99.0;
  (%100,)
}

def @func_3028() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %101 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %102 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  %103 = %101.0;
  (%102, %103)
}

def @func_2851() -> Tensor[(4, 15, 14), float32] {
  %104 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %104.1
}

def @func_7210() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %105 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %106 = %105.0;
  %107 = @func_5885() /* ty=Tensor[(4, 15, 14), float32] */;
  (%106, %107)
}

def @func_727() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %108 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %109 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %110 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %111 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %112 = %108.0;
  %113 = %109.1;
  %114 = %110.0;
  %115 = %111.0;
  (%112, %113, %114, %115)
}

def @func_528() -> Tensor[(4, 15, 14), float32] {
  %116 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %116.0
}

def @func_12634() -> Tensor[(4, 15, 14), float32] {
  %117 = @func_11106() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %117.0
}

def @func_6014() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) {
  %118 = cast(meta[relay.Constant][1] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %119 = cast(meta[relay.Constant][2] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %120 = reshape(%118, newshape=[]) /* ty=uint32 */;
  %121 = reshape(%119, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), uint32] */;
  %122 = @func_3393() /* ty=Tensor[(4, 15, 14), float32] */;
  %123 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
  %124 = @func_1579(%120, %121) /* ty=Tensor[(14, 3, 7), bool] */;
  (%122, %123, %124, meta[relay.Constant][1] /* ty=uint32 */, meta[relay.Constant][2] /* ty=Tensor[(294), uint32] */)
}

def @func_22026(%var_22008: Tensor[(3, 2, 8), uint32], %var_22015: Tensor[(294), uint32]) -> (Tensor[(3, 2, 8), uint32], Tensor[(294), uint32], Tensor[(294), uint32]) {
  %125 = cast(%var_22008, dtype="uint32") /* ty=Tensor[(3, 2, 8), uint32] */;
  %126 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(3, 2, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 2, 8), uint32] */, dtype="uint32") /* ty=Tensor[(3, 2, 8), uint32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %129 = cast(%var_22015, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %130 = reshape(%129, newshape=[294]) /* ty=Tensor[(294), uint32] */;
  %131 = @func_11183(%130) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
  %132 = bitwise_or(%127, %128) /* ty=Tensor[(3, 2, 8), uint32] */;
  %133 = %131.3;
  (%132, %133, %var_22015)
}

def @func_9895() -> (Tensor[(4, 15, 14), bool],) {
  %134 = @func_7607() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %135 = %134.2;
  (%135,)
}

def @func_14404(%var_14370: Tensor[(5, 16, 4), float32], %var_14400: Tensor[(64), float32]) -> (Tensor[(5, 16, 4), float32], Tensor[(3, 14, ?), int32], Tensor[(84), int64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(64), float32], Tensor[(1680), uint16]) {
  %136 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 16, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 4), float32] */;
  %137 = shape_of(%var_14370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_14370, dtype="float32") /* ty=Tensor[(5, 16, 4), float32] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %140 = cast(meta[relay.Constant][5] /* ty=Tensor[(84), int64] */, dtype="int64") /* ty=Tensor[(84), int64] */;
  %141 = reshape(%140, newshape=[84]) /* ty=Tensor[(84), int64] */;
  %142 = @func_9760(%141) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(3, 14, ?), int32], Tensor[(42), int64], Tensor[(84), int64]) */;
  %143 = @func_7483() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %144 = cast(%var_14400, dtype="float32") /* ty=Tensor[(64), float32] */;
  %145 = cast(meta[relay.Constant][6] /* ty=Tensor[(1680), uint16] */, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %146 = reshape(%144, newshape=[4, 8, 2]) /* ty=Tensor[(4, 8, 2), float32] */;
  %147 = reshape(%145, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
  %148 = @func_8222(%146, %147) /* ty=(Tensor[(4, 8, 2), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), bool]) */;
  %149 = floor_divide(%138, %139) /* ty=Tensor[(5, 16, 4), float32] */;
  %150 = %142.1;
  %151 = @func_9652() /* ty=Tensor[(4, 15, 14), bool] */;
  %152 = %143.0;
  %153 = %148.2;
  (%149, %150, meta[relay.Constant][5] /* ty=Tensor[(84), int64] */, %151, %152, %153, %var_14400, meta[relay.Constant][6] /* ty=Tensor[(1680), uint16] */)
}

def @func_18964() -> (Tensor[(14, 3, 7), bool],) {
  %154 = @func_9377() /* ty=(Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) */;
  %155 = %154.0;
  (%155,)
}

def @func_19749() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %156 = @func_11129() /* ty=Tensor[(4, 15, 14), float32] */;
  %157 = @func_3818() /* ty=Tensor[(4, 15, 14), bool] */;
  (%156, %157)
}

def @func_21185() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %158 = @func_5848() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %159 = %158.1;
  %160 = @func_8538() /* ty=Tensor[(4, 15, 14), float32] */;
  (%159, %160)
}

def @func_9908() -> (Tensor[(4, 15, 14), float32],) {
  %161 = @func_4825() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %162 = %161.0;
  (%162,)
}

def @func_16359() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %163 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
  %164 = @func_16010() /* ty=Tensor[(4, 15, 14), float32] */;
  (%163, %164)
}

def @func_2376() -> Tensor[(4, 15, 14), float32] {
  @func_2277() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_6627() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %165 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %166 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %167 = %165.1;
  %168 = %166.2;
  %169 = @func_6163() /* ty=Tensor[(4, 15, 14), float32] */;
  (%167, %168, %169)
}

def @func_3432() -> Tensor[(4, 15, 14), bool] {
  %170 = @func_2030() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %170.0
}

def @func_8063() -> (Tensor[(4, 15, 14), float32],) {
  %171 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %172 = %171.0;
  (%172,)
}

def @func_13556() -> (Tensor[(4, 15, 14), float32],) {
  %173 = @func_8842() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %174 = %173.1;
  (%174,)
}

def @func_18039() -> Tensor[(4, 15, 14), float32] {
  %175 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %175.1
}

def @func_20531() -> Tensor[(4, 15, 14), bool] {
  %176 = @func_15784() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
  %176.2
}

def @func_14820() -> (Tensor[(4, 15, 14), float32],) {
  %177 = @func_1965() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %178 = %177.0;
  (%178,)
}

def @func_626() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %179 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %180 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %181 = %179.1;
  %182 = %180.0;
  (%181, %182)
}

def @func_9205() -> (Tensor[(4, 15, 14), bool],) {
  %183 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  (%183,)
}

def @func_12297() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120), float32]) {
  %184 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %185 = @func_1908() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %186 = @func_7100() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %187 = cast(meta[relay.Constant][7] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %188 = reshape(%187, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), float32] */;
  %189 = @func_1045(%188) /* ty=(Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) */;
  %190 = %184.0;
  %191 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  %192 = %185.0;
  %193 = %186.0;
  %194 = %189.1;
  (%190, %191, %192, %193, %194, meta[relay.Constant][7] /* ty=Tensor[(120), float32] */)
}

def @func_6565() -> Tensor[(4, 15, 14), float32] {
  @func_288() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_17432(%var_17425: Tensor[(13, 6, 4), float32]) -> (Tensor[(13, 6, 4), float32],) {
  %195 = cast(%var_17425, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %196 = sinh(%195) /* ty=Tensor[(13, 6, 4), float32] */;
  (%196,)
}

def @func_16229() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %197 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %198 = @func_7552() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %199 = %197.2;
  %200 = %198.0;
  (%199, %200)
}

def @func_3898() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %201 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %202 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %203 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %204 = @func_1918() /* ty=Tensor[(4, 15, 14), float32] */;
  %205 = %201.0;
  %206 = %202.3;
  %207 = %203.0;
  (%204, %205, %206, %207)
}

def @func_4943(%var_4933: Tensor[(48), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(2, 6, 4), bool], Tensor[(48), uint32], Tensor[(4, 15, 14), float32]) {
  %208 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %209 = cast(%var_4933, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %210 = cast(%var_4933, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %211 = reshape(%209, newshape=[2, 6, 4]) /* ty=Tensor[(2, 6, 4), uint32] */;
  %212 = reshape(%210, newshape=[2, 6, 4]) /* ty=Tensor[(2, 6, 4), uint32] */;
  %213 = @func_3262() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %214 = %208.0;
  %215 = @func_2130(%211, %212) /* ty=Tensor[(2, 6, 4), bool] */;
  %216 = %213.1;
  (%214, %215, %var_4933, %216)
}

def @func_13093(%var_13082: Tensor[(6, 13, 16), float64], %var_13083: Tensor[(6, 13, 16), float64], %var_13087: Tensor[(6, 13, 16), float64]) -> (Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), bool]) {
  %217 = cast(%var_13083, dtype="float64") /* ty=Tensor[(6, 13, 16), float64] */;
  %218 = shape_of(%var_13082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%var_13082, dtype="float64") /* ty=Tensor[(6, 13, 16), float64] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %221 = cast(%var_13087, dtype="bool") /* ty=Tensor[(6, 13, 16), bool] */;
  %222 = shape_of(%var_13082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_13082, dtype="bool") /* ty=Tensor[(6, 13, 16), bool] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %225 = floor_divide(%219, %220) /* ty=Tensor[(6, 13, 16), float64] */;
  %226 = less_equal(%223, %224) /* ty=Tensor[(6, 13, 16), bool] */;
  (%225, %226)
}

def @func_21095() -> (Tensor[(4, 15, 14), float32],) {
  %227 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %228 = %227.0;
  (%228,)
}

def @func_288() -> Tensor[(4, 15, 14), float32] {
  %229 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %229.4
}

def @func_239() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %230 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %231 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %232 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %233 = %232.0;
  %234 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %235 = %234.0;
  %236 = cast(%235, dtype="bool") /* ty=Tensor[(4, 15, 14), bool] */;
  %237 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%233, dtype="bool") /* ty=Tensor[(4, 15, 14), bool] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %240 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %241 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %242 = %230.0;
  %243 = %231.0;
  %244 = less_equal(%238, %239) /* ty=Tensor[(4, 15, 14), bool] */;
  %245 = %240.0;
  %246 = %241.2;
  (%242, %243, %244, %245, %246)
}

def @func_9593() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %247 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %248 = @func_3793() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %249 = @func_3227() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %250 = %247.1;
  %251 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  %252 = %248.0;
  %253 = %249.0;
  %254 = @func_6163() /* ty=Tensor[(4, 15, 14), float32] */;
  %255 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
  (%250, %251, %252, %253, %254, %255)
}

def @func_16164() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %256 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %257 = %256.1;
  %258 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
  %259 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
  %260 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  (%257, %258, %259, %260)
}

def @func_5461() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %261 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %262 = %261.0;
  %263 = @func_4039() /* ty=Tensor[(4, 15, 14), float32] */;
  %264 = @func_5220() /* ty=Tensor[(4, 15, 14), float32] */;
  (%262, %263, %264)
}

def @func_16010() -> Tensor[(4, 15, 14), float32] {
  %265 = @func_11306() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %265.0
}

def @func_17326() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(6, 15, 2), bool], Tensor[(180), int8]) {
  %266 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %267 = @func_11020() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %268 = @func_12884() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %269 = @func_8696() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %270 = cast(meta[relay.Constant][8] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %271 = reshape(%270, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), int8] */;
  %272 = %266.1;
  %273 = %267.4;
  %274 = %268.0;
  %275 = %269.1;
  %276 = @func_11165(%271) /* ty=Tensor[(6, 15, 2), bool] */;
  (%272, %273, %274, %275, %276, meta[relay.Constant][8] /* ty=Tensor[(180), int8] */)
}

def @func_7451() -> (Tensor[(4, 15, 14), float32],) {
  %277 = @func_5848() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %278 = %277.0;
  (%278,)
}

def @func_1045(%var_1029: Tensor[(12, 2, 5), float32]) -> (Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) {
  %279 = cast(%var_1029, dtype="float32") /* ty=Tensor[(12, 2, 5), float32] */;
  %280 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %281 = sigmoid(%279) /* ty=Tensor[(12, 2, 5), float32] */;
  %282 = %280.2;
  (%281, %282)
}

def @func_1222() -> Tensor[(4, 15, 14), float32] {
  %283 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %283.0
}

def @func_2738() -> Tensor[(4, 15, 14), float64] {
  %284 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(4, 15, 14), float64] */;
  rsqrt(%285) /* ty=Tensor[(4, 15, 14), float64] */
}

def @func_10141() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %286 = @func_8882() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %287 = %286.1;
  %288 = @func_4850() /* ty=Tensor[(4, 15, 14), float32] */;
  (%287, %288)
}

def @func_14186() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %289 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %290 = @func_13825() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %291 = %289.1;
  %292 = %290.0;
  (%291, %292)
}

def @func_2325(%var_2301: Tensor[(1680, 1), uint16]) -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool], Tensor[(1680, 1), float32], Tensor[(4, 15, 14), float32]) {
  %293 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %294 = cast(%var_2301, dtype="uint16") /* ty=Tensor[(1680, 1), uint16] */;
  %295 = reshape(%294, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
  %296 = @func_831(%295) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
  %297 = cast(%var_2301, dtype="float32") /* ty=Tensor[(1680, 1), float32] */;
  %298 = %296.1;
  %299 = cast(%298, dtype="uint16") /* ty=Tensor[(8, 14, 15), uint16] */;
  %300 = reshape(%299, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
  %301 = @func_1332(%300) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %302 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  %303 = %293.0;
  %304 = atan(%297) /* ty=Tensor[(1680, 1), float32] */;
  %305 = %301.11;
  (%302, %303, %298, %304, %305)
}

def @func_11558() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  %306 = @func_11430() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) */;
  %307 = @func_6054() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %308 = %306.5;
  %309 = %307.2;
  (%308, %309)
}

def @func_11972() -> (Tensor[(3, 12, 6), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %310 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 12, 6), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 6), float32] */;
  %311 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %312 = exp(%310) /* ty=Tensor[(3, 12, 6), float32] */;
  %313 = %311.1;
  %314 = @func_8538() /* ty=Tensor[(4, 15, 14), float32] */;
  (%312, %313, %314)
}

def @func_10708() -> Tensor[(208), uint32] {
  %315 = @func_4108() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) */;
  %315.3
}

def @func_2463() -> (Tensor[(4, 15, 14), float32],) {
  %316 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
  (%316,)
}

def @func_15681() -> (Tensor[(4, 15, 14), float32],) {
  %317 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %318 = %317.3;
  (%318,)
}

def @func_5649() -> (Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) {
  %319 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
  %320 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %321 = %319.2;
  %322 = %320.1;
  (%321, %322)
}

def @func_20866() -> (Tensor[(4, 15, 14), float32],) {
  %323 = @func_8842() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %324 = %323.1;
  (%324,)
}

def @func_1424() -> Tensor[(4, 15, 14), float32] {
  %325 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %325.0
}

def @func_5379() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %326 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %327 = %326.1;
  %328 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
  (%327, %328)
}

def @func_9652() -> Tensor[(4, 15, 14), bool] {
  %329 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %329.2
}

def @func_11129() -> Tensor[(4, 15, 14), float32] {
  %330 = @func_7430() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %330.0
}

def @func_6487() -> Tensor[(4, 15, 14), bool] {
  @func_1014() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_3326() -> Tensor[(4, 15, 14), float32] {
  %331 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %331.0
}

def @func_11165(%var_11142: Tensor[(6, 15, 2), int8]) -> Tensor[(6, 15, 2), bool] {
  %332 = cast(meta[relay.Constant][10] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %333 = cast(%var_11142, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %334 = not_equal(%332, %333) /* ty=Tensor[(6, 15, 2), bool] */;
  %335 = cast(%334, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %336 = shape_of(%var_11142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%var_11142, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%337, %338) /* ty=Tensor[(6, 15, 2), bool] */
}

def @func_15526() -> (Tensor[(294), uint32],) {
  %339 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
  %340 = %339.4;
  (%340,)
}

def @func_9024() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %341 = @func_8892() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %342 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %343 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %344 = %341.0;
  %345 = %342.1;
  %346 = @func_6487() /* ty=Tensor[(4, 15, 14), bool] */;
  %347 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
  %348 = %343.0;
  (%344, %345, %346, %347, %348)
}

def @func_19514() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), float64]) {
  %349 = @func_14368() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(1680), uint16]) */;
  %350 = %349.1;
  %351 = cast(%350, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %352 = reshape(%351, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
  %353 = @func_1332(%352) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %354 = cast(%350, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %355 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
  %356 = %353.6;
  %357 = sinh(%354) /* ty=Tensor[(1680), float64] */;
  (%355, %356, %357)
}

def @func_21410() -> (Tensor[(14, 5, 9), bool],) {
  %358 = @func_7920() /* ty=(Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) */;
  %359 = %358.0;
  %360 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 5, 9), float64] */, dtype="bool") /* ty=Tensor[(14, 5, 9), bool] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="bool") /* ty=Tensor[(14, 5, 9), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = logical_and(%362, %363) /* ty=Tensor[(14, 5, 9), bool] */;
  (%364,)
}

def @func_11497(%var_11463: Tensor[(121), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(14, 3, 7), bool], Tensor[(1, 11, 11), float64]) {
  %365 = @func_9024() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %366 = cast(%var_11463, dtype="float64") /* ty=Tensor[(121), float64] */;
  %367 = reshape(%366, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float64] */;
  %368 = @func_6344() /* ty=(Tensor[(14, 3, 7), bool],) */;
  %369 = @func_10814(%367) /* ty=Tensor[(1, 11, 11), float64] */;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(1, 11, 11), float64] */;
  %371 = reshape(%370, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float64] */;
  %372 = %365.3;
  %373 = %368.0;
  %374 = @func_10814(%371) /* ty=Tensor[(1, 11, 11), float64] */;
  (%372, %369, %var_11463, %373, %374)
}

def @func_10814(%var_10811: Tensor[(1, 11, 11), float64]) -> Tensor[(1, 11, 11), float64] {
  %375 = cast(%var_10811, dtype="float64") /* ty=Tensor[(1, 11, 11), float64] */;
  atan(%375) /* ty=Tensor[(1, 11, 11), float64] */
}

def @func_17091() -> Tensor[(4, 15, 14), bool] {
  %376 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %376.0
}

def @func_17939() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %377 = @func_13825() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %378 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %379 = @func_1092() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(840, 2), float32]) */;
  %380 = %377.0;
  %381 = %378.1;
  %382 = %379.0;
  (%380, %381, %382)
}

def @func_11700() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %383 = @func_4464() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %384 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
  %385 = @func_3002() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %386 = %383.1;
  %387 = %384.1;
  %388 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
  %389 = %385.0;
  (%386, %387, %388, %389)
}

def @func_3978() -> Tensor[(4, 15, 14), float32] {
  %390 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %390.0
}

def @func_4894() -> (Tensor[(4, 15, 14), float32],) {
  %391 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %392 = %391.1;
  (%392,)
}

def @func_13638() -> Tensor[(4, 15, 14), float32] {
  @func_3978() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_15407() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %393 = @func_13900() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %394 = @func_6728() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %395 = %393.0;
  %396 = %394.2;
  %397 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
  (%395, %396, %397)
}

def @func_14949() -> (Tensor[(4, 15, 14), float32],) {
  %398 = @func_1222() /* ty=Tensor[(4, 15, 14), float32] */;
  (%398,)
}

def @func_3227() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %399 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
  %400 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %401 = %399.1;
  %402 = %400.0;
  %403 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
  (%401, %402, %403)
}

def @func_10887() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %404 = @func_9179() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %405 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
  %406 = %404.2;
  %407 = %405.0;
  (%406, %407)
}

def @func_5507() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) {
  %408 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %409 = @func_3818() /* ty=Tensor[(4, 15, 14), bool] */;
  %410 = %408.1;
  (%409, %410)
}

def @func_15968(%var_15961: Tensor[(1, 5, 13), int16], %var_15962: Tensor[(13, 5, 13), int16]) -> (Tensor[(13, 5, 13), bool], Tensor[(13, 5, 13), float32]) {
  %411 = cast(%var_15961, dtype="bool") /* ty=Tensor[(1, 5, 13), bool] */;
  %412 = cast(%var_15962, dtype="bool") /* ty=Tensor[(13, 5, 13), bool] */;
  %413 = cast(%var_15962, dtype="float32") /* ty=Tensor[(13, 5, 13), float32] */;
  %414 = less(%411, %412) /* ty=Tensor[(13, 5, 13), bool] */;
  %415 = sin(%413) /* ty=Tensor[(13, 5, 13), float32] */;
  (%414, %415)
}

def @func_8424() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %416 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %417 = @func_4464() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %418 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %419 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
  %420 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
  %421 = %416.0;
  %422 = %417.1;
  %423 = %418.1;
  (%419, %420, %421, %422, %423)
}

def @func_2338() -> Tensor[(4, 15, 14), float32] {
  %424 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %424.0
}

def @func_13782() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %425 = @func_5649() /* ty=(Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %426 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %427 = @func_11020() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %428 = @func_7430() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %429 = %425.1;
  %430 = %426.0;
  %431 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %432 = %427.2;
  %433 = @func_12342() /* ty=Tensor[(4, 15, 14), bool] */;
  %434 = %428.0;
  (%429, %430, %431, %432, %433, %434)
}

def @func_16250() -> Tensor[(4, 15, 14), float32] {
  %435 = @func_7210() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %435.0
}

def @func_21786() -> (Tensor[(294), uint32],) {
  %436 = @func_15526() /* ty=(Tensor[(294), uint32],) */;
  %437 = %436.0;
  (%437,)
}

def @func_14680() -> Tensor[(4, 15, 14), float32] {
  %438 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %438.3
}

def @func_553() -> Tensor[(4, 15, 14), float32] {
  %439 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %439.0
}

def @func_9760(%var_9758: Tensor[(84), int64]) -> (Tensor[(4, 15, 14), float32], Tensor[(3, 14, ?), int32], Tensor[(42), int64], Tensor[(84), int64]) {
  %440 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %441 = cast(meta[relay.Constant][12] /* ty=Tensor[(42), int64] */, dtype="int64") /* ty=Tensor[(42), int64] */;
  %442 = cast(%var_9758, dtype="int64") /* ty=Tensor[(84), int64] */;
  %443 = reshape(%441, newshape=[3, 14, 1]) /* ty=Tensor[(3, 14, 1), int64] */;
  %444 = reshape(%442, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int64] */;
  %445 = @func_3139(%443, %444) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(3, 14, 1), float64], Tensor[(3, 14, ?), int32], Tensor[(3, 14, 2), bool]) */;
  %446 = %440.0;
  %447 = %445.2;
  (%446, %447, meta[relay.Constant][12] /* ty=Tensor[(42), int64] */, %var_9758)
}

def @func_11930() -> Tensor[(14, 5, 9), float64] {
  %448 = @func_7920() /* ty=(Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) */;
  %448.0
}

def @func_12318() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %449 = @func_10296() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %450 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %451 = %449.0;
  %452 = %450.0;
  (%451, %452)
}

def @func_21564(%var_21554: Tensor[(13, 6, 12), int64], %var_21555: Tensor[(13, 6, 12), int64]) -> (Tensor[(13, 6, 12), int64], Tensor[(4, 15, 14), bool]) {
  %453 = cast(%var_21555, dtype="int64") /* ty=Tensor[(13, 6, 12), int64] */;
  %454 = shape_of(%var_21554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%var_21554, dtype="int64") /* ty=Tensor[(13, 6, 12), int64] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %457 = right_shift(%455, %456) /* ty=Tensor[(13, 6, 12), int64] */;
  %458 = @func_3432() /* ty=Tensor[(4, 15, 14), bool] */;
  (%457, %458)
}

def @func_6899(%var_6897: Tensor[(120, 1), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32]) {
  %459 = @func_2030() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %460 = cast(%var_6897, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
  %461 = reshape(%460, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), float32] */;
  %462 = @func_1045(%461) /* ty=(Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) */;
  %463 = %459.1;
  %464 = %462.1;
  (%463, %464, %var_6897)
}

def @func_3139(%var_3089: Tensor[(3, 14, 1), int64], %var_3134: Tensor[(3, 14, 2), int64]) -> (Tensor[(14, 3, 7), bool], Tensor[(3, 14, 1), float64], Tensor[(3, 14, ?), int32], Tensor[(3, 14, 2), bool]) {
  %465 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %466 = cast(%var_3089, dtype="float64") /* ty=Tensor[(3, 14, 1), float64] */;
  %467 = rsqrt(%466) /* ty=Tensor[(3, 14, 1), float64] */;
  %468 = cast(%467, dtype="float64") /* ty=Tensor[(3, 14, 1), float64] */;
  %469 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %470 = cast(%var_3089, dtype="int64") /* ty=Tensor[(3, 14, 1), int64] */;
  %471 = bitwise_and(%469, %470) /* ty=Tensor[(3, 14, 1), int64] */;
  %472 = cast(%471, dtype="int32") /* ty=Tensor[(3, 14, 1), int32] */;
  %473 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%467, dtype="int32") /* ty=Tensor[(3, 14, 1), int32] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %476 = cast(%471, dtype="bool") /* ty=Tensor[(3, 14, 1), bool] */;
  %477 = cast(%var_3134, dtype="bool") /* ty=Tensor[(3, 14, 2), bool] */;
  %478 = %465.1;
  %479 = exp(%468) /* ty=Tensor[(3, 14, 1), float64] */;
  %480 = logical_xor(%474, %475) /* ty=Tensor[(3, 14, ?), int32] */;
  %481 = not_equal(%476, %477) /* ty=Tensor[(3, 14, 2), bool] */;
  (%478, %479, %480, %481)
}

def @func_6318() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %482 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
  %483 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %484 = @func_5507() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
  %485 = %482.1;
  %486 = %483.0;
  %487 = %484.1;
  (%485, %486, %487)
}

def @func_7048() -> (Tensor[(4, 15, 14), float32],) {
  %488 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %489 = %488.0;
  (%489,)
}

def @func_5085() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %490 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %491 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %492 = %490.0;
  %493 = %491.0;
  (%492, %493)
}

def @func_8923(%var_8919: Tensor[(24, 2), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(24, 2), uint32]) {
  %494 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %495 = cast(%var_8919, dtype="uint32") /* ty=Tensor[(24, 2), uint32] */;
  %496 = reshape(%495, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %497 = @func_4943(%496) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(2, 6, 4), bool], Tensor[(48), uint32], Tensor[(4, 15, 14), float32]) */;
  %498 = %494.0;
  %499 = %497.3;
  (%498, %499, %var_8919)
}

def @func_8882() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %500 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %501 = %500.6;
  %502 = @func_4278() /* ty=Tensor[(4, 15, 14), bool] */;
  (%501, %502)
}

def @func_564() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %503 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %504 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %505 = %503.0;
  (%504, %505)
}

def @func_12198() -> (Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), float32]) {
  %506 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %507 = @func_9072() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %508 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %509 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %510 = cast(meta[relay.Constant][13] /* ty=Tensor[(121), float64] */, dtype="float64") /* ty=Tensor[(121), float64] */;
  %511 = reshape(%510, newshape=[121]) /* ty=Tensor[(121), float64] */;
  %512 = @func_11497(%511) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(14, 3, 7), bool], Tensor[(1, 11, 11), float64]) */;
  %513 = %512.2;
  %514 = cast(%513, dtype="float32") /* ty=Tensor[(121), float32] */;
  %515 = cos(%514) /* ty=Tensor[(121), float32] */;
  %516 = cast(%513, dtype="float64") /* ty=Tensor[(121), float64] */;
  %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(1), int32] */;
  %518 = cast(%515, dtype="float64") /* ty=Tensor[(121), float64] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?), float64] */;
  %520 = %506.0;
  %521 = %507.0;
  %522 = %508.0;
  %523 = %509.0;
  %524 = floor_mod(%518, %519) /* ty=Tensor[(121), float64] */;
  %525 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  (%520, meta[relay.Constant][13] /* ty=Tensor[(121), float64] */, %521, %522, %523, %524, %525)
}

def @func_7920() -> (Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) {
  %526 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 9), float32] */;
  %527 = sinh(%526) /* ty=Tensor[(14, 5, 9), float32] */;
  %528 = cast(%527, dtype="float32") /* ty=Tensor[(14, 5, 9), float32] */;
  %529 = log10(%528) /* ty=Tensor[(14, 5, 9), float32] */;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(14, 5, 9), float64] */;
  %531 = @func_3262() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %532 = rsqrt(%530) /* ty=Tensor[(14, 5, 9), float64] */;
  %533 = %531.1;
  (%532, %533)
}

def @func_10679() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %534 = @func_9908() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %535 = @func_7100() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %536 = @func_4278() /* ty=Tensor[(4, 15, 14), bool] */;
  %537 = %534.0;
  %538 = %535.0;
  %539 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  (%536, %537, %538, %539)
}

def @func_9665() -> Tensor[(4, 15, 14), float32] {
  %540 = @func_5606() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %540.0
}

def @func_17772(%var_17747: Tensor[(192), int8]) -> (Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], Tensor[(192), int8], Tensor[(4, 15, 14), bool]) {
  %541 = @func_8755() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %542 = cast(%var_17747, dtype="int8") /* ty=Tensor[(192), int8] */;
  %543 = cast(%var_17747, dtype="int8") /* ty=Tensor[(192), int8] */;
  %544 = reshape(%542, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int8] */;
  %545 = reshape(%543, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int8] */;
  %546 = @func_14086(%544, %545) /* ty=(Tensor[(4, 12, 4), int8], Tensor[(14, 3, 7), bool]) */;
  %547 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
  %548 = %541.0;
  %549 = %546.1;
  %550 = %547.0;
  (%548, %549, %var_17747, %550)
}

def @func_14023() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %551 = @func_12884() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %552 = @func_8769() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %553 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %554 = %551.0;
  %555 = @func_12342() /* ty=Tensor[(4, 15, 14), bool] */;
  %556 = %552.0;
  %557 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  %558 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
  %559 = %553.1;
  (%554, %555, %556, %557, %558, %559)
}

def @func_9879() -> (Tensor[(4, 15, 14), float32],) {
  %560 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
  (%560,)
}

def @func_5350() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  %561 = @func_2738() /* ty=Tensor[(4, 15, 14), float64] */;
  %562 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  (%561, %562)
}

def @func_11338() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %563 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %564 = @func_3670() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %565 = %563.0;
  %566 = %564.0;
  (%565, %566)
}

def @func_12781() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(13, 4, 4), uint32], Tensor[(4, 15, 14), float32]) {
  %567 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %568 = @func_8769() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %569 = @func_4108() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) */;
  %570 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %571 = %567.1;
  %572 = @func_1222() /* ty=Tensor[(4, 15, 14), float32] */;
  %573 = %568.0;
  %574 = %569.2;
  %575 = %570.0;
  (%571, %572, %573, %574, %575)
}

def @func_19840() -> (Tensor[(4, 15, 14), float32],) {
  %576 = @func_14680() /* ty=Tensor[(4, 15, 14), float32] */;
  (%576,)
}

def @func_11306() -> (Tensor[(4, 15, 14), float32],) {
  %577 = @func_4234() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %578 = %577.3;
  (%578,)
}

def @func_21959() -> (Tensor[(4, 15, 14), float32],) {
  %579 = @func_17848() /* ty=Tensor[(4, 15, 14), float32] */;
  (%579,)
}

def @func_3308() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %580 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %581 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %582 = %580.0;
  %583 = %581.1;
  (%582, %583)
}

def @func_7702() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  %584 = @func_4108() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) */;
  %585 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %586 = @func_5885() /* ty=Tensor[(4, 15, 14), float32] */;
  %587 = @func_4278() /* ty=Tensor[(4, 15, 14), bool] */;
  %588 = %584.1;
  %589 = %585.0;
  (%586, %587, %588, %589)
}

def @func_20370() -> (Tensor[(4, 15, 14), float32],) {
  %590 = @func_10241() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %591 = %590.0;
  (%591,)
}

def @func_20766() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %592 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %593 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %594 = %592.2;
  %595 = %593.1;
  (%594, %595)
}

def @func_16656() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %596 = @func_14220() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(208), uint32]) */;
  %597 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %598 = @func_5350() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %599 = @func_16164() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %600 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %601 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %602 = @func_11262() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %603 = %596.0;
  %604 = %597.0;
  %605 = %598.1;
  %606 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
  %607 = @func_5885() /* ty=Tensor[(4, 15, 14), float32] */;
  %608 = %599.3;
  %609 = %600.0;
  %610 = %601.1;
  %611 = %602.0;
  (%603, %604, %605, %606, %607, %608, %609, %610, %611)
}

def @func_8360() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %612 = @func_7920() /* ty=(Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) */;
  %613 = @func_5290() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %614 = %612.1;
  %615 = %613.2;
  (%614, %615)
}

def @func_5771() -> Tensor[(4, 15, 14), float32] {
  @func_4039() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_13900() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %616 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %617 = @func_7702() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %618 = %616.1;
  %619 = %617.1;
  (%618, %619)
}

def @func_17215() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %620 = @func_16229() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %621 = %620.0;
  %622 = @func_8538() /* ty=Tensor[(4, 15, 14), float32] */;
  (%621, %622)
}

def @func_7965(%var_7949: Tensor[(7, 10, 8), uint16], %var_7950: Tensor[(7, 10, 8), uint16]) -> (Tensor[(7, 10, 8), uint16],) {
  %623 = cast(%var_7950, dtype="uint16") /* ty=Tensor[(7, 10, 8), uint16] */;
  %624 = shape_of(%var_7949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%var_7949, dtype="uint16") /* ty=Tensor[(7, 10, 8), uint16] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %627 = logical_xor(%625, %626) /* ty=Tensor[(7, 10, 8), uint16] */;
  (%627,)
}

def @func_6266() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %628 = @func_3002() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %629 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %630 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %631 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
  %632 = %628.0;
  %633 = %629.0;
  %634 = %630.0;
  (%631, %632, %633, %634)
}

def @func_22242() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %635 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %636 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  %637 = %635.0;
  (%636, %637)
}

def @func_11183(%var_11179: Tensor[(294), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) {
  %638 = @func_5461() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %639 = cast(meta[relay.Constant][15] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %640 = cast(%var_11179, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %641 = reshape(%639, newshape=[]) /* ty=uint32 */;
  %642 = reshape(%640, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), uint32] */;
  %643 = %638.0;
  %644 = @func_1579(%641, %642) /* ty=Tensor[(14, 3, 7), bool] */;
  (%643, %644, meta[relay.Constant][15] /* ty=uint32 */, %var_11179)
}

def @func_20666() -> (Tensor[(4, 15, 14), float32],) {
  %645 = @func_20337() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %646 = %645.1;
  (%646,)
}

def @func_9444() -> (Tensor[(4, 15, 14), float32],) {
  %647 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %648 = %647.0;
  (%648,)
}

def @func_10241() -> (Tensor[(4, 15, 14), float32],) {
  %649 = @func_2851() /* ty=Tensor[(4, 15, 14), float32] */;
  (%649,)
}

def @func_5123() -> (Tensor[(4, 15, 14), float32],) {
  %650 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %651 = %650.0;
  (%651,)
}

def @func_1908() -> (Tensor[(4, 15, 14), float32],) {
  %652 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %653 = %652.3;
  (%653,)
}

def @func_975() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %654 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %655 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %656 = %654.1;
  %657 = %655.0;
  %658 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
  %659 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  (%656, %657, %658, %659)
}

def @func_1656() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %660 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
  %661 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  (%660, %661)
}

def @func_8538() -> Tensor[(4, 15, 14), float32] {
  @func_2246() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_9072() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %662 = @func_8293() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
  %663 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %664 = %662.2;
  %665 = %663.0;
  (%664, %665)
}

def @func_3924(%var_3914: Tensor[(7, 8, 3), float32]) -> Tensor[(7, 8, 3), float64] {
  %666 = cast(%var_3914, dtype="float32") /* ty=Tensor[(7, 8, 3), float32] */;
  %667 = asinh(%666) /* ty=Tensor[(7, 8, 3), float32] */;
  %668 = cast(%667, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
  asin(%668) /* ty=Tensor[(7, 8, 3), float64] */
}

def @func_14368() -> (Tensor[(4, 15, 14), bool], Tensor[(1680), uint16]) {
  %669 = @func_12297() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120), float32]) */;
  %670 = @func_6728() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %671 = %669.4;
  %672 = %670.1;
  (%671, %672)
}

def @func_4850() -> Tensor[(4, 15, 14), float32] {
  %673 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %673.0
}

def @func_8769() -> (Tensor[(4, 15, 14), float32],) {
  %674 = @func_1965() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %675 = %674.1;
  (%675,)
}

def @func_14220() -> (Tensor[(4, 15, 14), float32], Tensor[(208), uint32]) {
  %676 = @func_7387() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %677 = %676.0;
  %678 = @func_10708() /* ty=Tensor[(208), uint32] */;
  (%677, %678)
}

def @func_6344() -> (Tensor[(14, 3, 7), bool],) {
  %679 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
  %680 = %679.2;
  (%680,)
}

def @func_8161() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %681 = @func_3729() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %682 = @func_7430() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %683 = %681.0;
  %684 = %682.2;
  (%683, %684)
}

def @func_18826(%var_18761: Tensor[(13, 3, 7), uint64]) -> (Tensor[(13, 3, 7), int16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 12, 4), int8], Tensor[(48, 4), int8], Tensor[(4, 15, 14), bool]) {
  %685 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 3, 7), uint64] */, dtype="int16") /* ty=Tensor[(13, 3, 7), int16] */;
  %686 = shape_of(%var_18761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%var_18761, dtype="int16") /* ty=Tensor[(13, 3, 7), int16] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %689 = add(%687, %688) /* ty=Tensor[(13, 3, 7), int16] */;
  %690 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 3, 7), uint64] */, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
  %691 = shape_of(%var_18761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_18761, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %694 = equal(%692, %693) /* ty=Tensor[(13, 3, 7), bool] */;
  %695 = cast(%694, dtype="int16") /* ty=Tensor[(13, 3, 7), int16] */;
  %696 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%689, dtype="int16") /* ty=Tensor[(13, 3, 7), int16] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %699 = @func_18741() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %700 = cast(meta[relay.Constant][18] /* ty=Tensor[(48, 4), int8] */, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
  %701 = cast(meta[relay.Constant][18] /* ty=Tensor[(48, 4), int8] */, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
  %702 = reshape(%700, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int8] */;
  %703 = reshape(%701, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int8] */;
  %704 = @func_14086(%702, %703) /* ty=(Tensor[(4, 12, 4), int8], Tensor[(14, 3, 7), bool]) */;
  %705 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %706 = minimum(%697, %698) /* ty=Tensor[(13, 3, 7), int16] */;
  %707 = %699.0;
  %708 = @func_6163() /* ty=Tensor[(4, 15, 14), float32] */;
  %709 = %704.0;
  %710 = %705.0;
  (%706, %707, %708, %709, meta[relay.Constant][18] /* ty=Tensor[(48, 4), int8] */, %710)
}

def @func_19923() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %711 = @func_5379() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %712 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %713 = @func_17848() /* ty=Tensor[(4, 15, 14), float32] */;
  %714 = %711.0;
  %715 = %712.1;
  (%713, %714, %715)
}

def @func_21947() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %716 = @func_10956() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %717 = @func_20337() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %718 = %716.1;
  %719 = %717.0;
  (%718, %719)
}

def @func_3537(%var_3474: Tensor[(4, 15, 14), float32]) -> (Tensor[(4, 15, 14), int64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %720 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %721 = %720.0;
  %722 = cast(%var_3474, dtype="int64") /* ty=Tensor[(4, 15, 14), int64] */;
  %723 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%721, dtype="int64") /* ty=Tensor[(4, 15, 14), int64] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %726 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %727 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %728 = bitwise_and(%724, %725) /* ty=Tensor[(4, 15, 14), int64] */;
  %729 = %726.1;
  %730 = %727.0;
  (%728, %729, %730)
}

def @func_2763() -> (Tensor[(4, 15, 14), float32],) {
  %731 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
  (%731,)
}

def @func_20811() -> Tensor[(4, 15, 14), float32] {
  @func_12426() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_14522() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %732 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %733 = @func_11430() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) */;
  %734 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %735 = %732.0;
  %736 = @func_12063() /* ty=Tensor[(4, 15, 14), float32] */;
  %737 = %733.4;
  %738 = %734.1;
  (%735, %736, %737, %738)
}

def @func_2030() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %739 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %740 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  %741 = %739.0;
  (%740, %741)
}

def @func_17386(%var_17377: Tensor[(14, 14, 5), uint32]) -> Tensor[(14, 14, 5), bool] {
  %742 = cast(%var_17377, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %743 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%744, %745) /* ty=Tensor[(14, 14, 5), bool] */
}

def @func_3638() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %746 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %747 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %748 = %746.1;
  %749 = @func_2246() /* ty=Tensor[(4, 15, 14), float32] */;
  %750 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  %751 = %747.0;
  (%748, %749, %750, %751)
}

def @func_2246() -> Tensor[(4, 15, 14), float32] {
  %752 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %752.0
}

def @func_18638() -> Tensor[(4, 15, 14), bool] {
  %753 = @func_11430() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) */;
  %753.0
}

def @func_20101() -> (Tensor[(4, 15, 14), float32],) {
  %754 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
  (%754,)
}

def @func_6054() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %755 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %756 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %757 = @func_4039() /* ty=Tensor[(4, 15, 14), float32] */;
  %758 = %755.0;
  %759 = %756.0;
  (%757, %758, %759)
}

def @func_9837() -> (Tensor[(4, 15, 14), float32],) {
  %760 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %761 = %760.1;
  (%761,)
}

def @func_22292(%var_22260: Tensor[(1, 6, 14), uint32], %var_22261: Tensor[(2, 6, 14), uint32]) -> (Tensor[(2, 6, 14), bool], Tensor[(14, 3, 7), bool]) {
  %762 = cast(%var_22260, dtype="bool") /* ty=Tensor[(1, 6, 14), bool] */;
  %763 = cast(%var_22261, dtype="bool") /* ty=Tensor[(2, 6, 14), bool] */;
  %764 = @func_9377() /* ty=(Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) */;
  %765 = greater(%762, %763) /* ty=Tensor[(2, 6, 14), bool] */;
  %766 = %764.0;
  (%765, %766)
}

def @func_1478() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %767 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %768 = %767.0;
  %769 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  (%768, %769)
}

def @func_11262() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %770 = @func_5848() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %771 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %772 = %770.1;
  %773 = %771.1;
  %774 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  (%772, %773, %774)
}

def @func_16900() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %775 = @func_16488() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %776 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
  %777 = %775.1;
  (%776, %777)
}

def @func_1876() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %778 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
  %779 = cast(%778, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %780 = sin(%779) /* ty=Tensor[(4, 15, 14), float32] */;
  %781 = @func_408() /* ty=Tensor[(4, 15, 14), float32] */;
  (%780, %781)
}

def @func_14252() -> Tensor[(4, 15, 14), bool] {
  %782 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
  %782.0
}

def @func_13000() -> (Tensor[(4, 15, 14), float32],) {
  %783 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %784 = %783.0;
  (%784,)
}

def @func_5220() -> Tensor[(4, 15, 14), float32] {
  %785 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %785.0
}

def @func_3262() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %786 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %787 = %786.0;
  %788 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  (%787, %788)
}

def @func_6066() -> Tensor[(4, 15, 14), float32] {
  @func_1222() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_7483() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %789 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %790 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %791 = %789.2;
  %792 = %790.0;
  (%791, %792)
}

def @func_3729() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %793 = @func_2422() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %794 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %795 = %793.0;
  %796 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
  %797 = %794.3;
  (%795, %796, %797)
}

def @func_17686() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %798 = @func_10141() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %799 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %800 = %798.1;
  %801 = %799.1;
  (%800, %801)
}

def @func_20080() -> (Tensor[(4, 15, 14), float32],) {
  %802 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %803 = %802.0;
  (%803,)
}

def @func_20227() -> (Tensor[(4, 15, 14), float32],) {
  %804 = @func_16495() /* ty=Tensor[(4, 15, 14), float32] */;
  (%804,)
}

def @func_21285() -> (Tensor[(4, 15, 14), float32],) {
  %805 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %806 = %805.0;
  (%806,)
}

def @func_1332(%var_1312: Tensor[(1680), uint16]) -> (Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %807 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %808 = cast(meta[relay.Constant][21] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %809 = cast(meta[relay.Constant][21] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %810 = reshape(%808, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), uint32] */;
  %811 = reshape(%809, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), uint32] */;
  %812 = @func_454(%810, %811) /* ty=(Tensor[(13, 4, 4), uint32], Tensor[(13, 4, 4), float32]) */;
  %813 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %814 = cast(meta[relay.Constant][20] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %815 = reshape(%814, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), float32] */;
  %816 = @func_1045(%815) /* ty=(Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) */;
  %817 = %816.1;
  %818 = cast(%817, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %819 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %820 = cast(%var_1312, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %821 = reshape(%820, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
  %822 = @func_831(%821) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
  %823 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %824 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %825 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %826 = %807.3;
  %827 = %812.1;
  %828 = %813.0;
  %829 = cosh(%818) /* ty=Tensor[(4, 15, 14), float32] */;
  %830 = %819.0;
  %831 = %822.0;
  %832 = %823.1;
  %833 = %824.3;
  %834 = %825.0;
  (%826, meta[relay.Constant][20] /* ty=Tensor[(120), float32] */, %827, meta[relay.Constant][21] /* ty=Tensor[(208), uint32] */, %828, %829, %830, %831, %var_1312, %832, %833, %834)
}

def @func_83() -> (Tensor[(4, 15, 14), float32],) {
  %835 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %836 = log10(%835) /* ty=Tensor[(4, 15, 14), float32] */;
  (%836,)
}

def @func_16380() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %837 = @func_2000() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %838 = %837.0;
  %839 = @func_14680() /* ty=Tensor[(4, 15, 14), float32] */;
  (%838, %839)
}

def @func_7552() -> (Tensor[(4, 15, 14), float32],) {
  %840 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %841 = %840.2;
  (%841,)
}

def @func_10213(%var_10185: Tensor[(168), float32], %var_10195: Tensor[(7, 8, 3), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(168), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(7, 8, 3), float64]) {
  %842 = @func_6266() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %843 = @func_8293() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
  %844 = @func_7100() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %845 = @func_5649() /* ty=(Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %846 = @func_9377() /* ty=(Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) */;
  %847 = cast(%var_10185, dtype="float32") /* ty=Tensor[(168), float32] */;
  %848 = reshape(%847, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float32] */;
  %849 = @func_3924(%848) /* ty=Tensor[(7, 8, 3), float64] */;
  %850 = cast(%var_10195, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%849, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %854 = %842.1;
  %855 = %843.2;
  %856 = %844.0;
  %857 = %845.1;
  %858 = %846.1;
  %859 = power(%852, %853) /* ty=Tensor[(7, 8, 3), float64] */;
  (%854, %855, %var_10185, %856, %857, %858, %859)
}

def @func_9102() -> Tensor[(4, 15, 14), float32] {
  %860 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %860.3
}

def @func_11020() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %861 = @func_8882() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %862 = @func_5123() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %863 = @func_8882() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %864 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %865 = @func_4464() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %866 = %861.0;
  %867 = %862.0;
  %868 = %863.0;
  %869 = %864.0;
  %870 = %865.1;
  (%866, %867, %868, %869, %870)
}

def @func_12941() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %871 = @func_9444() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %872 = @func_12884() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %873 = %871.0;
  %874 = %872.0;
  (%873, %874)
}

def @func_8782() -> (Tensor[(4, 15, 14), float32],) {
  %875 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  (%875,)
}

def @func_515() -> (Tensor[(4, 15, 14), float32],) {
  %876 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %877 = cast(%876, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %878 = asin(%877) /* ty=Tensor[(4, 15, 14), float32] */;
  (%878,)
}

def @func_1611() -> (Tensor[(4, 15, 14), float32],) {
  %879 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %880 = %879.3;
  (%880,)
}

def @func_1918() -> Tensor[(4, 15, 14), float32] {
  %881 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %881.0
}

def @func_16508(%var_16497: Tensor[(5, 5, 9), float32]) -> (Tensor[(5, 5, 9), float32],) {
  %882 = cast(%var_16497, dtype="float32") /* ty=Tensor[(5, 5, 9), float32] */;
  %883 = erf(%882) /* ty=Tensor[(5, 5, 9), float32] */;
  (%883,)
}

def @func_1014() -> Tensor[(4, 15, 14), bool] {
  %884 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %884.0
}

def @func_15621() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %885 = @func_9837() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %886 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %887 = @func_14522() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %888 = %885.0;
  %889 = %886.3;
  %890 = %887.0;
  (%888, %889, %890)
}

def @func_15132() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %891 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %892 = %891.0;
  %893 = @func_9652() /* ty=Tensor[(4, 15, 14), bool] */;
  (%892, %893)
}

def @func_20441(%var_20437: Tensor[(1078), int16]) -> (Tensor[(4, 15, 14), float32], Tensor[(11, 7, 14), bool], Tensor[(1078), int16]) {
  %894 = cast(%var_20437, dtype="int16") /* ty=Tensor[(1078), int16] */;
  %895 = reshape(%894, newshape=[11, 7, 14]) /* ty=Tensor[(11, 7, 14), int16] */;
  %896 = @func_16060(%895) /* ty=(Tensor[(11, 7, 14), bool],) */;
  %897 = @func_17733() /* ty=Tensor[(4, 15, 14), float32] */;
  %898 = %896.0;
  (%897, %898, %var_20437)
}

def @func_17155() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(144), float32], Tensor[(4, 15, 14), float32], Tensor[(1200, 2), float64]) {
  %899 = @func_8063() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %900 = cast(meta[relay.Constant][23] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %901 = reshape(%900, newshape=[12, 12, 1]) /* ty=Tensor[(12, 12, 1), float32] */;
  %902 = @func_10491(%901) /* ty=(Tensor[(12, 12, 1), float32], Tensor[(4, 15, 14), float32]) */;
  %903 = cast(meta[relay.Constant][24] /* ty=Tensor[(1200, 2), float32] */, dtype="float32") /* ty=Tensor[(1200, 2), float32] */;
  %904 = reshape(%903, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %905 = @func_4785(%904) /* ty=(Tensor[(16, 10, 15), float32], Tensor[(4, 15, 14), float32]) */;
  %906 = cast(meta[relay.Constant][24] /* ty=Tensor[(1200, 2), float32] */, dtype="float64") /* ty=Tensor[(1200, 2), float64] */;
  %907 = %899.0;
  %908 = %902.1;
  %909 = %905.1;
  %910 = acos(%906) /* ty=Tensor[(1200, 2), float64] */;
  (%907, %908, meta[relay.Constant][23] /* ty=Tensor[(144), float32] */, %909, %910)
}

def @func_18741() -> (Tensor[(4, 15, 14), float32],) {
  %911 = @func_1908() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %912 = %911.0;
  (%912,)
}

def @func_928() -> Tensor[(4, 15, 14), float32] {
  %913 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %913.1
}

def @func_10116(%var_10100: Tensor[(8, 2, 8), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(8, 2, 8), float32]) {
  %914 = cast(%var_10100, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
  %915 = atanh(%914) /* ty=Tensor[(8, 2, 8), float32] */;
  %916 = cast(%915, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
  %917 = @func_4850() /* ty=Tensor[(4, 15, 14), float32] */;
  %918 = acosh(%916) /* ty=Tensor[(8, 2, 8), float32] */;
  (%917, %918)
}

def @func_1965() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %919 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %920 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %921 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %922 = %919.0;
  %923 = %920.0;
  %924 = %921.0;
  %925 = @func_1918() /* ty=Tensor[(4, 15, 14), float32] */;
  (%922, %923, %924, %925)
}

def @func_14998() -> Tensor[(4, 15, 14), float32] {
  %926 = @func_3793() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %926.2
}

def @func_9377() -> (Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) {
  %927 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
  %928 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %929 = %927.2;
  %930 = %928.0;
  (%929, %930)
}

def @func_8189() -> Tensor[(4, 15, 14), float32] {
  %931 = @func_5606() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %931.1
}

def @func_12426() -> Tensor[(4, 15, 14), float32] {
  %932 = @func_10956() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %932.1
}

def @func_14086(%var_14058: Tensor[(4, 12, 4), int8], %var_14059: Tensor[(4, 12, 4), int8]) -> (Tensor[(4, 12, 4), int8], Tensor[(14, 3, 7), bool]) {
  %933 = cast(%var_14059, dtype="int8") /* ty=Tensor[(4, 12, 4), int8] */;
  %934 = shape_of(%var_14058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %935 = cast(%var_14058, dtype="int8") /* ty=Tensor[(4, 12, 4), int8] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %937 = @func_9377() /* ty=(Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) */;
  %938 = logical_xor(%935, %936) /* ty=Tensor[(4, 12, 4), int8] */;
  %939 = %937.0;
  (%938, %939)
}

def @func_19590(%var_19516: Tensor[(1, 13, 3), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(?, 13, 3), int32], Tensor[(4, 15, 14), float32], Tensor[(390), float32], Tensor[(4, 15, 14), float32]) {
  %940 = @func_16229() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %941 = cast(%var_19516, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
  %942 = tan(%941) /* ty=Tensor[(1, 13, 3), float64] */;
  %943 = cast(%942, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
  %944 = shape_of(%var_19516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%var_19516, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %947 = floor_mod(%945, %946) /* ty=Tensor[(?, 13, 3), float64] */;
  %948 = cast(%942, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%947, dtype="bool") /* ty=Tensor[(?, 13, 3), bool] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %952 = not_equal(%950, %951) /* ty=Tensor[(?, 13, 3), bool] */;
  %953 = cast(%947, dtype="float32") /* ty=Tensor[(?, 13, 3), float32] */;
  %954 = acos(%953) /* ty=Tensor[(?, 13, 3), float32] */;
  %955 = cast(%954, dtype="int32") /* ty=Tensor[(?, 13, 3), int32] */;
  %956 = shape_of(%952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%952, dtype="int32") /* ty=Tensor[(?, 13, 3), int32] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %959 = cast(meta[relay.Constant][25] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %960 = reshape(%959, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), float32] */;
  %961 = @func_2615(%960) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(1680), uint16], Tensor[(2, 15, 13), int64], Tensor[(4, 15, 14), float32]) */;
  %962 = @func_6163() /* ty=Tensor[(4, 15, 14), float32] */;
  %963 = %940.0;
  %964 = subtract(%957, %958) /* ty=Tensor[(?, 13, 3), int32] */;
  %965 = %961.1;
  %966 = @func_11129() /* ty=Tensor[(4, 15, 14), float32] */;
  (%962, %963, %964, %965, meta[relay.Constant][25] /* ty=Tensor[(390), float32] */, %966)
}

def @func_3002() -> (Tensor[(4, 15, 14), float32],) {
  %967 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %968 = %967.0;
  (%968,)
}

def @func_20516() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %969 = @func_12297() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120), float32]) */;
  %970 = @func_1478() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %971 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
  %972 = %969.1;
  %973 = %970.1;
  %974 = @func_16495() /* ty=Tensor[(4, 15, 14), float32] */;
  %975 = %971.0;
  (%972, %973, %974, %975)
}

def @func_14596() -> Tensor[(4, 15, 14), float32] {
  %976 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %976.0
}

def @func_10491(%var_10472: Tensor[(12, 12, 1), float32]) -> (Tensor[(12, 12, 1), float32], Tensor[(4, 15, 14), float32]) {
  %977 = cast(%var_10472, dtype="float32") /* ty=Tensor[(12, 12, 1), float32] */;
  %978 = sqrt(%977) /* ty=Tensor[(12, 12, 1), float32] */;
  %979 = @func_1918() /* ty=Tensor[(4, 15, 14), float32] */;
  (%978, %979)
}

def @func_21572() -> (Tensor[(4, 15, 14), float32],) {
  %980 = @func_10332() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %981 = %980.0;
  (%981,)
}

def @func_9329() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %982 = @func_7451() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %983 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
  %984 = %982.0;
  (%983, %984)
}

def @func_16196(%var_16186: Tensor[(15, 15, 12), float32]) -> (Tensor[(15, 15, 12), float32], Tensor[(12, 12, 1), float32], Tensor[(144), float32]) {
  %985 = cast(%var_16186, dtype="float32") /* ty=Tensor[(15, 15, 12), float32] */;
  %986 = cast(meta[relay.Constant][26] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %987 = reshape(%986, newshape=[12, 12, 1]) /* ty=Tensor[(12, 12, 1), float32] */;
  %988 = @func_10491(%987) /* ty=(Tensor[(12, 12, 1), float32], Tensor[(4, 15, 14), float32]) */;
  %989 = exp(%985) /* ty=Tensor[(15, 15, 12), float32] */;
  %990 = %988.0;
  (%989, %990, meta[relay.Constant][26] /* ty=Tensor[(144), float32] */)
}

def @func_15723() -> (Tensor[(4, 15, 14), float32],) {
  %991 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  (%991,)
}

def @func_5885() -> Tensor[(4, 15, 14), float32] {
  %992 = @func_3729() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %992.0
}

def @func_7607() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %993 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %994 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %995 = @func_6066() /* ty=Tensor[(4, 15, 14), float32] */;
  %996 = %993.2;
  (%994, %995, %996)
}

def @func_10956() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %997 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %998 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %999 = %997.4;
  %1000 = %998.1;
  (%999, %1000)
}

def @func_21327(%var_21321: Tensor[(14, 1, 7), int64], %var_21322: Tensor[(14, 16, 7), int64]) -> Tensor[(14, 16, 7), bool] {
  %1001 = cast(%var_21321, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
  %1002 = cast(%var_21322, dtype="bool") /* ty=Tensor[(14, 16, 7), bool] */;
  greater(%1001, %1002) /* ty=Tensor[(14, 16, 7), bool] */
}

def @func_2615(%var_2545: Tensor[(2, 15, 13), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(1680), uint16], Tensor[(2, 15, 13), int64], Tensor[(4, 15, 14), float32]) {
  %1003 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1004 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1005 = cast(meta[relay.Constant][27] /* ty=Tensor[(1680), uint16] */, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %1006 = reshape(%1005, newshape=[1680, 1]) /* ty=Tensor[(1680, 1), uint16] */;
  %1007 = @func_2325(%1006) /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool], Tensor[(1680, 1), float32], Tensor[(4, 15, 14), float32]) */;
  %1008 = cast(%var_2545, dtype="float32") /* ty=Tensor[(2, 15, 13), float32] */;
  %1009 = tan(%1008) /* ty=Tensor[(2, 15, 13), float32] */;
  %1010 = cast(%var_2545, dtype="int8") /* ty=Tensor[(2, 15, 13), int8] */;
  %1011 = shape_of(%1009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1012 = cast(%1009, dtype="int8") /* ty=Tensor[(2, 15, 13), int8] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1014 = subtract(%1012, %1013) /* ty=Tensor[(2, 15, 13), int8] */;
  %1015 = cast(%1009, dtype="int64") /* ty=Tensor[(2, 15, 13), int64] */;
  %1016 = shape_of(%1014, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%1014, dtype="int64") /* ty=Tensor[(2, 15, 13), int64] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1019 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1020 = %1003.0;
  %1021 = %1004.4;
  %1022 = %1007.0;
  %1023 = add(%1017, %1018) /* ty=Tensor[(2, 15, 13), int64] */;
  %1024 = %1019.0;
  (%1020, %1021, %1022, meta[relay.Constant][27] /* ty=Tensor[(1680), uint16] */, %1023, %1024)
}

def @func_13937() -> (Tensor[(4, 15, 14), bool],) {
  %1025 = @func_13900() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1026 = %1025.1;
  (%1026,)
}

def @main() -> (Tensor[(10, 6, 7), float32],) {
  %1027 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 6, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 7), float32] */;
  %1028 = exp(%1027) /* ty=Tensor[(10, 6, 7), float32] */;
  (%1028,)
}

def @func_17043() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %1029 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1030 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1031 = %1029.2;
  %1032 = %1030.0;
  (%1031, %1032)
}

def @func_6524(%var_6492: Tensor[(5, 13, 6), uint32], %var_6493: Tensor[(5, 13, 6), uint32], %var_6499: Tensor[(5, 13, 6), uint32]) -> (Tensor[(5, 13, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) {
  %1033 = cast(%var_6493, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %1034 = shape_of(%var_6492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1035 = cast(%var_6492, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1037 = cast(%var_6499, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %1038 = shape_of(%var_6492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1039 = cast(%var_6492, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1041 = cast(%var_6499, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %1042 = greater_equal(%1035, %1036) /* ty=Tensor[(5, 13, 6), bool] */;
  %1043 = divide(%1039, %1040) /* ty=Tensor[(5, 13, 6), float32] */;
  %1044 = log2(%1041) /* ty=Tensor[(5, 13, 6), float32] */;
  (%1042, %1043, %1044)
}

def @func_8696() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1045 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1046 = @func_7387() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1047 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %1048 = %1045.0;
  %1049 = %1046.0;
  (%1047, %1048, %1049)
}

def @func_11244(%var_11196: Tensor[(16, 1, 16), float64], %var_11197: Tensor[(16, 15, 16), float64]) -> (Tensor[(16, 15, 16), float64], Tensor[(16, 1, 16), float32]) {
  %1050 = cast(%var_11196, dtype="float64") /* ty=Tensor[(16, 1, 16), float64] */;
  %1051 = cast(%var_11197, dtype="float64") /* ty=Tensor[(16, 15, 16), float64] */;
  %1052 = cast(%var_11196, dtype="float32") /* ty=Tensor[(16, 1, 16), float32] */;
  %1053 = floor_mod(%1050, %1051) /* ty=Tensor[(16, 15, 16), float64] */;
  %1054 = acosh(%1052) /* ty=Tensor[(16, 1, 16), float32] */;
  (%1053, %1054)
}

def @func_20679() -> Tensor[(4, 15, 14), float32] {
  %1055 = @func_7100() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1055.0
}

def @func_6163() -> Tensor[(4, 15, 14), float32] {
  @func_4039() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_16102() -> (Tensor[(4, 15, 14), float32],) {
  %1056 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1057 = %1056.0;
  (%1057,)
}

def @func_13825() -> (Tensor[(4, 15, 14), float32],) {
  %1058 = @func_9593() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1059 = %1058.3;
  (%1059,)
}

def @func_20802() -> (Tensor[(4, 15, 14), float32],) {
  %1060 = @func_8769() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1061 = %1060.0;
  (%1061,)
}

def @func_1092() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(840, 2), float32]) {
  %1062 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1063 = cast(meta[relay.Constant][29] /* ty=Tensor[(840, 2), uint16] */, dtype="uint16") /* ty=Tensor[(840, 2), uint16] */;
  %1064 = reshape(%1063, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
  %1065 = @func_831(%1064) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
  %1066 = %1065.1;
  %1067 = cast(%1066, dtype="float32") /* ty=Tensor[(8, 14, 15), float32] */;
  %1068 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(840, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1069 = cast(meta[relay.Constant][29] /* ty=Tensor[(840, 2), uint16] */, dtype="float32") /* ty=Tensor[(840, 2), float32] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1071 = %1062.0;
  %1072 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %1073 = mod(%1069, %1070) /* ty=Tensor[(840, 2), float32] */;
  (%1071, %1072, %1073)
}

def @func_21627() -> Tensor[(4, 15, 14), float32] {
  %1074 = @func_8696() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1074.2
}

def @func_10296() -> (Tensor[(4, 15, 14), float32],) {
  %1075 = @func_8696() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1076 = %1075.1;
  (%1076,)
}

def @func_4039() -> Tensor[(4, 15, 14), float32] {
  %1077 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1077.0
}

def @func_15901(%var_15891: Tensor[(64), float32]) -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(64), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) {
  %1078 = @func_7702() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %1079 = cast(%var_15891, dtype="float32") /* ty=Tensor[(64), float32] */;
  %1080 = cast(meta[relay.Constant][30] /* ty=Tensor[(1680), uint16] */, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %1081 = reshape(%1079, newshape=[4, 8, 2]) /* ty=Tensor[(4, 8, 2), float32] */;
  %1082 = reshape(%1080, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
  %1083 = @func_8222(%1081, %1082) /* ty=(Tensor[(4, 8, 2), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), bool]) */;
  %1084 = @func_2000() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1085 = %1078.1;
  %1086 = %1083.3;
  %1087 = %1084.0;
  (%1085, %1086, %var_15891, meta[relay.Constant][30] /* ty=Tensor[(1680), uint16] */, %1087)
}

def @func_19830() -> Tensor[(4, 15, 14), float32] {
  %1088 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1088.0
}

def @func_22205() -> (Tensor[(4, 15, 14), float32],) {
  %1089 = @func_21285() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1090 = %1089.0;
  (%1090,)
}

def @func_8842() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1091 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1092 = %1091.0;
  %1093 = @func_6565() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1092, %1093)
}

def @func_13359(%var_13315: Tensor[(294), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(294), uint32]) {
  %1094 = @func_13000() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1095 = cast(%var_13315, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %1096 = reshape(%1095, newshape=[294]) /* ty=Tensor[(294), uint32] */;
  %1097 = @func_11183(%1096) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
  %1098 = %1094.0;
  %1099 = %1097.0;
  (%1098, %1099, %var_13315)
}

def @func_1579(%var_1551: uint32, %var_1552: Tensor[(14, 3, 7), uint32]) -> Tensor[(14, 3, 7), bool] {
  %1100 = cast(%var_1551, dtype="bool") /* ty=bool */;
  %1101 = cast(%var_1552, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
  %1102 = greater_equal(%1100, %1101) /* ty=Tensor[(14, 3, 7), bool] */;
  %1103 = cast(%1102, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
  %1104 = cast(%var_1551, dtype="bool") /* ty=bool */;
  greater(%1103, %1104) /* ty=Tensor[(14, 3, 7), bool] */
}

def @func_12884() -> (Tensor[(4, 15, 14), float32],) {
  %1105 = @func_12318() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1106 = %1105.1;
  (%1106,)
}

def @func_21820() -> (Tensor[(4, 15, 14), float32],) {
  %1107 = @func_18039() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1107,)
}

def @func_7136() -> (Tensor[(4, 15, 14), bool],) {
  %1108 = @func_3818() /* ty=Tensor[(4, 15, 14), bool] */;
  (%1108,)
}

def @func_12063() -> Tensor[(4, 15, 14), float32] {
  @func_8538() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_6728() -> (Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) {
  %1109 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1110 = @func_5649() /* ty=(Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %1111 = %1109.0;
  %1112 = %1110.0;
  %1113 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1111, %1112, %1113)
}

def @func_15251() -> (Tensor[(4, 15, 14), float64], Tensor[(3, 12, 6), float64]) {
  %1114 = @func_11558() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %1115 = @func_11972() /* ty=(Tensor[(3, 12, 6), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1116 = %1115.0;
  %1117 = cast(%1116, dtype="float64") /* ty=Tensor[(3, 12, 6), float64] */;
  %1118 = %1114.0;
  %1119 = log2(%1117) /* ty=Tensor[(3, 12, 6), float64] */;
  (%1118, %1119)
}

def @func_18259() -> Tensor[(4, 15, 14), float32] {
  %1120 = @func_10296() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1120.0
}

def @func_16488() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1121 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1122 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1123 = %1121.1;
  %1124 = %1122.1;
  %1125 = @func_2851() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1123, %1124, %1125)
}

def @func_2130(%var_2122: Tensor[(2, 6, 4), uint32], %var_2123: Tensor[(2, 6, 4), uint32]) -> Tensor[(2, 6, 4), bool] {
  %1126 = cast(%var_2123, dtype="bool") /* ty=Tensor[(2, 6, 4), bool] */;
  %1127 = shape_of(%var_2122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(%var_2122, dtype="bool") /* ty=Tensor[(2, 6, 4), bool] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1128, %1129) /* ty=Tensor[(2, 6, 4), bool] */
}

def @func_6775() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %1130 = @func_3227() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1131 = @func_6360() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1132 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1133 = %1130.2;
  %1134 = %1131.0;
  %1135 = %1132.2;
  (%1133, %1134, %1135)
}

def @func_21003() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1136 = @func_6627() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1137 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1138 = @func_18741() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1139 = @func_6054() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1140 = %1136.1;
  %1141 = %1137.0;
  %1142 = %1138.0;
  %1143 = %1139.0;
  (%1140, %1141, %1142, %1143)
}

def @func_20921() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32]) {
  %1144 = @func_1478() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1145 = @func_5606() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1146 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1147 = @func_11129() /* ty=Tensor[(4, 15, 14), float32] */;
  %1148 = %1144.0;
  %1149 = %1145.1;
  %1150 = @func_10708() /* ty=Tensor[(208), uint32] */;
  %1151 = %1146.0;
  (%1147, %1148, %1149, %1150, %1151)
}

def @func_4785(%var_4775: Tensor[(16, 10, 15), float32]) -> (Tensor[(16, 10, 15), float32], Tensor[(4, 15, 14), float32]) {
  %1152 = cast(%var_4775, dtype="float32") /* ty=Tensor[(16, 10, 15), float32] */;
  %1153 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1154 = acos(%1152) /* ty=Tensor[(16, 10, 15), float32] */;
  %1155 = %1153.0;
  (%1154, %1155)
}

def @func_15193() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1156 = @func_12941() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1157 = @func_14252() /* ty=Tensor[(4, 15, 14), bool] */;
  %1158 = %1156.0;
  %1159 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1157, %1158, %1159)
}

def @func_19267(%var_19154: Tensor[(7, 7, 8), float32], %var_19226: Tensor[(121), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(5, 5, 9), float32], Tensor[(225), float32], Tensor[(1200, 2), float64], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(7, 7, 8), bool], Tensor[(4, 15, 14), float32]) {
  %1160 = @func_11430() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) */;
  %1161 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %1162 = @func_17686() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1163 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1164 = @func_17043() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1165 = cast(meta[relay.Constant][31] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %1166 = reshape(%1165, newshape=[5, 5, 9]) /* ty=Tensor[(5, 5, 9), float32] */;
  %1167 = @func_16508(%1166) /* ty=(Tensor[(5, 5, 9), float32],) */;
  %1168 = @func_17155() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(144), float32], Tensor[(4, 15, 14), float32], Tensor[(1200, 2), float64]) */;
  %1169 = cast(%var_19226, dtype="float64") /* ty=Tensor[(121), float64] */;
  %1170 = reshape(%1169, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float64] */;
  %1171 = cast(%var_19154, dtype="float32") /* ty=Tensor[(7, 7, 8), float32] */;
  %1172 = acosh(%1171) /* ty=Tensor[(7, 7, 8), float32] */;
  %1173 = cast(%var_19154, dtype="uint16") /* ty=Tensor[(7, 7, 8), uint16] */;
  %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1175 = cast(%1172, dtype="uint16") /* ty=Tensor[(7, 7, 8), uint16] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1177 = maximum(%1175, %1176) /* ty=Tensor[(7, 7, 8), uint16] */;
  %1178 = cast(%var_19154, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
  %1179 = shape_of(%1177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1180 = cast(%1177, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
  %1181 = dyn.reshape(%1178, %1179, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1182 = @func_6728() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %1183 = %1160.2;
  %1184 = %1161.0;
  %1185 = %1162.0;
  %1186 = %1163.1;
  %1187 = %1164.0;
  %1188 = %1167.0;
  %1189 = %1168.4;
  %1190 = @func_10814(%1170) /* ty=Tensor[(1, 11, 11), float64] */;
  %1191 = equal(%1180, %1181) /* ty=Tensor[(7, 7, 8), bool] */;
  %1192 = %1182.2;
  (%1183, %1184, %1185, %1186, %1187, %1188, meta[relay.Constant][31] /* ty=Tensor[(225), float32] */, %1189, %1190, %var_19226, %1191, %1192)
}

def @func_3670() -> (Tensor[(4, 15, 14), float32],) {
  %1193 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1194 = %1193.4;
  (%1194,)
}

def @func_21527() -> (Tensor[(4, 15, 14), bool],) {
  %1195 = @func_19749() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1196 = %1195.1;
  (%1196,)
}

def @func_13534() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1197 = @func_8892() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1198 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1199 = %1197.0;
  %1200 = %1198.3;
  (%1199, %1200)
}

def @func_4234() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %1201 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1202 = @func_3227() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1203 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
  %1204 = @func_3978() /* ty=Tensor[(4, 15, 14), float32] */;
  %1205 = cast(%1204, dtype="bool") /* ty=Tensor[(4, 15, 14), bool] */;
  %1206 = shape_of(%1203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1207 = cast(%1203, dtype="bool") /* ty=Tensor[(4, 15, 14), bool] */;
  %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1209 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %1210 = %1201.0;
  %1211 = @func_2851() /* ty=Tensor[(4, 15, 14), float32] */;
  %1212 = %1202.2;
  %1213 = equal(%1207, %1208) /* ty=Tensor[(4, 15, 14), bool] */;
  (%1209, %1210, %1211, %1212, %1213)
}

def @func_15784() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) {
  %1214 = @func_5290() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1215 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1216 = %1214.0;
  %1217 = %1215.0;
  %1218 = @func_10079() /* ty=Tensor[(4, 15, 14), bool] */;
  (%1216, %1217, %1218)
}

def @func_16805(%var_16787: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), float64], Tensor[(4, 15, 14), float32], Tensor[(2, 840), uint16]) {
  %1219 = cast(%var_16787, dtype="float64") /* ty=Tensor[(5, 12, 2), float64] */;
  %1220 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 840), uint16] */, dtype="uint16") /* ty=Tensor[(2, 840), uint16] */;
  %1221 = reshape(%1220, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
  %1222 = @func_831(%1221) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
  %1223 = cosh(%1219) /* ty=Tensor[(5, 12, 2), float64] */;
  %1224 = %1222.0;
  (%1223, %1224, meta[relay.Constant][32] /* ty=Tensor[(2, 840), uint16] */)
}

def @func_6360() -> (Tensor[(4, 15, 14), float32],) {
  %1225 = @func_2936() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1226 = %1225.1;
  (%1226,)
}

def @func_18476() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) {
  %1227 = @func_10679() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1228 = @func_7702() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %1229 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1230 = @func_5649() /* ty=(Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %1231 = %1227.3;
  %1232 = %1228.3;
  %1233 = %1229.0;
  %1234 = %1230.0;
  (%1231, %1232, %1233, %1234)
}

def @func_19707() -> Tensor[(4, 15, 14), float32] {
  %1235 = @func_7387() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1235.0
}

def @func_17733() -> Tensor[(4, 15, 14), float32] {
  @func_14680() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_8293() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) {
  %1236 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1237 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1238 = %1236.0;
  %1239 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  %1240 = %1237.1;
  (%1238, %1239, %1240)
}

def @func_17878() -> (Tensor[(4, 15, 14), float32],) {
  %1241 = @func_9879() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1242 = %1241.0;
  (%1242,)
}

def @func_20163() -> Tensor[(4, 15, 14), float32] {
  %1243 = @func_14522() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1243.3
}

def @func_19146() -> (Tensor[(121), float64], Tensor[(4, 15, 14), float32]) {
  %1244 = @func_12198() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), float32]) */;
  %1245 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1246 = %1244.1;
  %1247 = %1245.0;
  (%1246, %1247)
}

def @func_14424() -> (Tensor[(4, 15, 14), bool],) {
  %1248 = @func_6487() /* ty=Tensor[(4, 15, 14), bool] */;
  (%1248,)
}

def @func_20400(%var_20378: Tensor[(13, 1, 14), bool], %var_20393: Tensor[(5, 45), float32]) -> (Tensor[(13, 8, 14), uint8], Tensor[(5, 5, 9), float32], Tensor[(5, 45), float32]) {
  %1249 = cast(%var_20378, dtype="bool") /* ty=Tensor[(13, 1, 14), bool] */;
  %1250 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 8, 14), bool] */, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  %1251 = logical_and(%1249, %1250) /* ty=Tensor[(13, 8, 14), bool] */;
  %1252 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 8, 14), bool] */, dtype="uint8") /* ty=Tensor[(13, 8, 14), uint8] */;
  %1253 = shape_of(%1251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1254 = cast(%1251, dtype="uint8") /* ty=Tensor[(13, 8, 14), uint8] */;
  %1255 = dyn.reshape(%1252, %1253, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1256 = cast(%var_20393, dtype="float32") /* ty=Tensor[(5, 45), float32] */;
  %1257 = reshape(%1256, newshape=[5, 5, 9]) /* ty=Tensor[(5, 5, 9), float32] */;
  %1258 = @func_16508(%1257) /* ty=(Tensor[(5, 5, 9), float32],) */;
  %1259 = minimum(%1254, %1255) /* ty=Tensor[(13, 8, 14), uint8] */;
  %1260 = %1258.0;
  (%1259, %1260, %var_20393)
}

def @func_20272() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1261 = @func_14522() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1262 = @func_7048() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1263 = %1261.3;
  %1264 = %1262.0;
  (%1263, %1264)
}

def @func_2936() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1265 = @func_1611() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1266 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1267 = %1266.4;
  %1268 = cast(%1267, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %1269 = %1265.0;
  %1270 = atan(%1268) /* ty=Tensor[(4, 15, 14), float32] */;
  (%1269, %1270)
}

def @func_17245() -> Tensor[(4, 15, 14), bool] {
  @func_12342() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_4464() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1271 = @func_3898() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1272 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1273 = %1271.3;
  %1274 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
  %1275 = @func_3326() /* ty=Tensor[(4, 15, 14), float32] */;
  %1276 = %1272.0;
  (%1273, %1274, %1275, %1276)
}

def @func_12370(%var_12357: Tensor[(14, 11, 14), bool]) -> Tensor[(14, 11, 14), bool] {
  %1277 = cast(%var_12357, dtype="bool") /* ty=Tensor[(14, 11, 14), bool] */;
  %1278 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(14, 11, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1279 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 11, 14), bool] */, dtype="bool") /* ty=Tensor[(14, 11, 14), bool] */;
  %1280 = dyn.reshape(%1277, %1278, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1279, %1280) /* ty=Tensor[(14, 11, 14), bool] */
}

def @func_7310() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1281 = @func_1965() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1282 = %1281.0;
  %1283 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1282, %1283)
}

def @func_13802() -> Tensor[(4, 15, 14), float32] {
  @func_12426() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_7430() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1284 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1285 = @func_4850() /* ty=Tensor[(4, 15, 14), float32] */;
  %1286 = %1284.0;
  %1287 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1285, %1286, %1287)
}

def @func_7100() -> (Tensor[(4, 15, 14), float32],) {
  %1288 = @func_6054() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1289 = %1288.2;
  (%1289,)
}

def @func_2422() -> (Tensor[(4, 15, 14), float32],) {
  %1290 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1291 = %1290.0;
  (%1291,)
}

def @func_18954() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1292 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1293 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1294 = %1292.0;
  %1295 = %1293.0;
  (%1294, %1295)
}

def @func_2231() -> (Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1296 = @func_2030() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1297 = cast(meta[relay.Constant][36] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1298 = cast(meta[relay.Constant][37] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %1299 = reshape(%1297, newshape=[]) /* ty=uint32 */;
  %1300 = reshape(%1298, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), uint32] */;
  %1301 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1302 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1303 = %1296.1;
  %1304 = @func_1579(%1299, %1300) /* ty=Tensor[(14, 3, 7), bool] */;
  %1305 = @func_1918() /* ty=Tensor[(4, 15, 14), float32] */;
  %1306 = %1301.2;
  %1307 = %1302.4;
  (%1303, %1304, meta[relay.Constant][36] /* ty=uint32 */, meta[relay.Constant][37] /* ty=Tensor[(294), uint32] */, %1305, %1306, %1307)
}

def @func_10079() -> Tensor[(4, 15, 14), bool] {
  %1308 = @func_9205() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %1308.0
}

def @func_5848() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1309 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1310 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %1311 = %1309.0;
  (%1310, %1311)
}

def @func_176() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1312 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1313 = %1312.0;
  %1314 = cast(%1313, dtype="float64") /* ty=Tensor[(4, 15, 14), float64] */;
  %1315 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1316 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1317 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1318 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1319 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1320 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1321 = acosh(%1314) /* ty=Tensor[(4, 15, 14), float64] */;
  %1322 = %1315.0;
  %1323 = %1316.0;
  %1324 = %1317.0;
  %1325 = %1318.0;
  %1326 = %1319.0;
  %1327 = %1320.0;
  (%1321, %1322, %1323, %1324, %1325, %1326, %1327)
}

def @func_408() -> Tensor[(4, 15, 14), float32] {
  @func_288() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_20057(%var_20032: Tensor[(128, 2), float64], %var_20033: Tensor[(3840), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(5, 13, 6), float64], Tensor[(4, 15, 14), bool], Tensor[(16, 15, 16), float64], Tensor[(128, 2), float64], Tensor[(3840), float64], Tensor[(5, 13, 6), uint8]) {
  %1328 = @func_11941() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1329 = cast(meta[relay.Constant][38] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %1330 = cast(meta[relay.Constant][38] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %1331 = cast(meta[relay.Constant][38] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %1332 = reshape(%1329, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), uint32] */;
  %1333 = reshape(%1330, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), uint32] */;
  %1334 = reshape(%1331, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), uint32] */;
  %1335 = @func_6524(%1332, %1333, %1334) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) */;
  %1336 = %1335.1;
  %1337 = cast(meta[relay.Constant][38] /* ty=Tensor[(390), uint32] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %1338 = shape_of(%1336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1339 = cast(%1336, dtype="float64") /* ty=Tensor[(5, 13, 6), float64] */;
  %1340 = dyn.reshape(%1337, %1338, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1341 = cast(%var_20032, dtype="float64") /* ty=Tensor[(128, 2), float64] */;
  %1342 = cast(%var_20033, dtype="float64") /* ty=Tensor[(3840), float64] */;
  %1343 = reshape(%1341, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), float64] */;
  %1344 = reshape(%1342, newshape=[16, 15, 16]) /* ty=Tensor[(16, 15, 16), float64] */;
  %1345 = @func_11244(%1343, %1344) /* ty=(Tensor[(16, 15, 16), float64], Tensor[(16, 1, 16), float32]) */;
  %1346 = cast(meta[relay.Constant][38] /* ty=Tensor[(390), uint32] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %1347 = shape_of(%1336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1348 = cast(%1336, dtype="uint8") /* ty=Tensor[(5, 13, 6), uint8] */;
  %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1350 = %1328.0;
  %1351 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %1352 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
  %1353 = add(%1339, %1340) /* ty=Tensor[(5, 13, 6), float64] */;
  %1354 = @func_9652() /* ty=Tensor[(4, 15, 14), bool] */;
  %1355 = %1345.0;
  %1356 = subtract(%1348, %1349) /* ty=Tensor[(5, 13, 6), uint8] */;
  (%1350, %1351, %1352, %1353, %1354, %1355, %var_20032, %var_20033, %1356)
}

def @func_13819() -> Tensor[(4, 15, 14), float32] {
  %1357 = @func_9329() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1357.1
}

def @func_7387() -> (Tensor[(4, 15, 14), float32],) {
  %1358 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1358,)
}

def @func_20573() -> (Tensor[(4, 15, 14), float32],) {
  %1359 = @func_20227() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1360 = %1359.0;
  (%1360,)
}

def @func_18665() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  %1361 = @func_15784() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
  %1362 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1363 = %1361.0;
  %1364 = %1362.0;
  (%1363, %1364)
}

def @func_11106() -> (Tensor[(4, 15, 14), float32],) {
  %1365 = @func_8063() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1366 = %1365.0;
  (%1366,)
}

def @func_11859() -> (Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32], Tensor[(120), float32]) {
  %1367 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %1368 = cast(meta[relay.Constant][39] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1369 = reshape(%1368, newshape=[120, 1]) /* ty=Tensor[(120, 1), float32] */;
  %1370 = @func_6899(%1369) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32]) */;
  %1371 = %1367.0;
  %1372 = %1370.2;
  (%1371, %1372, meta[relay.Constant][39] /* ty=Tensor[(120), float32] */)
}

def @func_12435() -> (Tensor[(4, 15, 14), float32],) {
  %1373 = @func_5350() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %1374 = %1373.1;
  (%1374,)
}

def @func_8755() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1375 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1376 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1377 = %1375.6;
  %1378 = %1376.0;
  (%1377, %1378)
}

def @func_13186() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1379 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1380 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %1381 = %1379.0;
  %1382 = @func_8538() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1380, %1381, %1382)
}

def @func_9713() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1383 = @func_5461() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1384 = @func_5606() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1385 = @func_7310() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1386 = %1383.1;
  %1387 = %1384.0;
  %1388 = %1385.0;
  (%1386, %1387, %1388)
}

def @func_13576() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1389 = @func_5290() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1390 = @func_8842() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1391 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1392 = %1389.0;
  %1393 = %1390.1;
  %1394 = %1391.1;
  (%1392, %1393, %1394)
}

def @func_4746() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1395 = @func_2422() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1396 = @func_3978() /* ty=Tensor[(4, 15, 14), float32] */;
  %1397 = @func_3978() /* ty=Tensor[(4, 15, 14), float32] */;
  %1398 = %1395.0;
  (%1396, %1397, %1398)
}

def @func_20337() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1399 = @func_5885() /* ty=Tensor[(4, 15, 14), float32] */;
  %1400 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1399, %1400)
}

def @func_18602(%var_18518: Tensor[(312), float32], %var_18537: Tensor[(13, 6, 4), float64], %var_18567: Tensor[(48), uint32], %var_18590: Tensor[(1, 980), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(312), float32], Tensor[(13, 6, 4), bool], Tensor[(4, 15, 14), float32], Tensor[(13, 6, 4), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(48), uint32], Tensor[(4, 15, 14), bool], Tensor[(120), float32], Tensor[(14, 14, 5), bool], Tensor[(1, 980), uint32]) {
  %1401 = @func_5290() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1402 = cast(%var_18518, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1403 = reshape(%1402, newshape=[13, 6, 4]) /* ty=Tensor[(13, 6, 4), float32] */;
  %1404 = @func_17432(%1403) /* ty=(Tensor[(13, 6, 4), float32],) */;
  %1405 = %1404.0;
  %1406 = cast(%1405, dtype="float64") /* ty=Tensor[(13, 6, 4), float64] */;
  %1407 = atan(%1406) /* ty=Tensor[(13, 6, 4), float64] */;
  %1408 = cast(%var_18537, dtype="bool") /* ty=Tensor[(13, 6, 4), bool] */;
  %1409 = shape_of(%1407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1410 = cast(%1407, dtype="bool") /* ty=Tensor[(13, 6, 4), bool] */;
  %1411 = dyn.reshape(%1408, %1409, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1412 = cast(%1407, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %1413 = @func_5350() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %1414 = cast(%var_18567, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1415 = reshape(%1414, newshape=[24, 2]) /* ty=Tensor[(24, 2), uint32] */;
  %1416 = @func_8923(%1415) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(24, 2), uint32]) */;
  %1417 = cast(meta[relay.Constant][40] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1418 = reshape(%1417, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), float32] */;
  %1419 = @func_1045(%1418) /* ty=(Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) */;
  %1420 = cast(%var_18590, dtype="uint32") /* ty=Tensor[(1, 980), uint32] */;
  %1421 = reshape(%1420, newshape=[14, 14, 5]) /* ty=Tensor[(14, 14, 5), uint32] */;
  %1422 = %1401.5;
  %1423 = not_equal(%1410, %1411) /* ty=Tensor[(13, 6, 4), bool] */;
  %1424 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
  %1425 = log2(%1412) /* ty=Tensor[(13, 6, 4), float32] */;
  %1426 = %1413.1;
  %1427 = %1416.1;
  %1428 = %1419.1;
  %1429 = @func_17386(%1421) /* ty=Tensor[(14, 14, 5), bool] */;
  (%1422, %var_18518, %1423, %1424, %1425, %1426, %1427, %var_18567, %1428, meta[relay.Constant][40] /* ty=Tensor[(120), float32] */, %1429, %var_18590)
}

def @func_20306() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1430 = @func_11020() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1431 = @func_13802() /* ty=Tensor[(4, 15, 14), float32] */;
  %1432 = %1430.2;
  (%1431, %1432)
}

def @func_13129(%var_13119: Tensor[(4, 4, 7), float64]) -> (Tensor[(4, 4, 7), float64], Tensor[(4, 15, 14), float32]) {
  %1433 = cast(%var_13119, dtype="float64") /* ty=Tensor[(4, 4, 7), float64] */;
  %1434 = log(%1433) /* ty=Tensor[(4, 4, 7), float64] */;
  %1435 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1434, %1435)
}

def @func_831(%var_769: Tensor[(8, 14, 15), uint16]) -> (Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) {
  %1436 = cast(%var_769, dtype="uint16") /* ty=Tensor[(8, 14, 15), uint16] */;
  %1437 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(8, 14, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1438 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 14, 15), uint16] */, dtype="uint16") /* ty=Tensor[(8, 14, 15), uint16] */;
  %1439 = dyn.reshape(%1436, %1437, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1440 = maximum(%1438, %1439) /* ty=Tensor[(8, 14, 15), uint16] */;
  %1441 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 14, 15), uint16] */, dtype="bool") /* ty=Tensor[(8, 14, 15), bool] */;
  %1442 = shape_of(%1440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1443 = cast(%1440, dtype="bool") /* ty=Tensor[(8, 14, 15), bool] */;
  %1444 = dyn.reshape(%1441, %1442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1445 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %1446 = not_equal(%1443, %1444) /* ty=Tensor[(8, 14, 15), bool] */;
  (%1445, %1446)
}

def @func_1764() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) {
  %1447 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %1448 = cast(meta[relay.Constant][42] /* ty=Tensor[(1680), uint16] */, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %1449 = reshape(%1448, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
  %1450 = @func_831(%1449) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
  %1451 = %1447.0;
  %1452 = %1450.0;
  (%1451, %1452, meta[relay.Constant][42] /* ty=Tensor[(1680), uint16] */)
}

def @func_9179() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1453 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1454 = @func_6627() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1455 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1456 = %1453.0;
  %1457 = %1454.2;
  %1458 = %1455.0;
  (%1456, %1457, %1458)
}

def @func_14919() -> (Tensor[(4, 15, 14), float32],) {
  %1459 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1460 = %1459.0;
  (%1460,)
}

def @func_16916() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1461 = @func_11338() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1462 = %1461.1;
  %1463 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1462, %1463)
}

def @func_11941() -> (Tensor[(4, 15, 14), float32],) {
  %1464 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1465 = %1464.1;
  (%1465,)
}

def @func_13067(%var_13010: Tensor[(32, 8), float64], %var_13011: Tensor[(3840), float64], %var_13043: Tensor[(32, 8), float32], %var_13047: Tensor[(32, 8), bool], %var_13062: Tensor[(1, 2400), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(16, 1, 16), float32], Tensor[(3840), float64], Tensor[(32, 8), float32], Tensor[(4, 15, 14), float32], Tensor[(16, 10, 15), float32], Tensor[(1, 2400), float32], Tensor[(4, 15, 14), bool]) {
  %1466 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1467 = cast(%var_13010, dtype="float64") /* ty=Tensor[(32, 8), float64] */;
  %1468 = cast(%var_13011, dtype="float64") /* ty=Tensor[(3840), float64] */;
  %1469 = reshape(%1467, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), float64] */;
  %1470 = reshape(%1468, newshape=[16, 15, 16]) /* ty=Tensor[(16, 15, 16), float64] */;
  %1471 = @func_11244(%1469, %1470) /* ty=(Tensor[(16, 15, 16), float64], Tensor[(16, 1, 16), float32]) */;
  %1472 = cast(%var_13010, dtype="float32") /* ty=Tensor[(32, 8), float32] */;
  %1473 = acosh(%1472) /* ty=Tensor[(32, 8), float32] */;
  %1474 = cast(%var_13043, dtype="bool") /* ty=Tensor[(32, 8), bool] */;
  %1475 = shape_of(%1473, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1476 = cast(%1473, dtype="bool") /* ty=Tensor[(32, 8), bool] */;
  %1477 = dyn.reshape(%1474, %1475, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1478 = greater(%1476, %1477) /* ty=Tensor[(32, 8), bool] */;
  %1479 = cast(%var_13047, dtype="float32") /* ty=Tensor[(32, 8), float32] */;
  %1480 = shape_of(%1478, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1481 = cast(%1478, dtype="float32") /* ty=Tensor[(32, 8), float32] */;
  %1482 = dyn.reshape(%1479, %1480, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1483 = @func_8063() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1484 = cast(%var_13062, dtype="float32") /* ty=Tensor[(1, 2400), float32] */;
  %1485 = reshape(%1484, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %1486 = @func_4785(%1485) /* ty=(Tensor[(16, 10, 15), float32], Tensor[(4, 15, 14), float32]) */;
  %1487 = @func_9895() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %1488 = %1466.0;
  %1489 = %1471.1;
  %1490 = divide(%1481, %1482) /* ty=Tensor[(32, 8), float32] */;
  %1491 = %1483.0;
  %1492 = %1486.0;
  %1493 = %1487.0;
  (%1488, %1489, %var_13011, %1490, %1491, %1492, %var_13062, %1493)
}

def @func_17643() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1494 = @func_16164() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1495 = @func_14023() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1496 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1497 = %1494.3;
  %1498 = %1495.3;
  %1499 = %1496.3;
  (%1497, %1498, %1499)
}

def @func_454(%var_432: Tensor[(13, 4, 4), uint32], %var_433: Tensor[(13, 4, 4), uint32]) -> (Tensor[(13, 4, 4), uint32], Tensor[(13, 4, 4), float32]) {
  %1500 = cast(%var_433, dtype="uint32") /* ty=Tensor[(13, 4, 4), uint32] */;
  %1501 = shape_of(%var_432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1502 = cast(%var_432, dtype="uint32") /* ty=Tensor[(13, 4, 4), uint32] */;
  %1503 = dyn.reshape(%1500, %1501, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1504 = cast(%var_432, dtype="float32") /* ty=Tensor[(13, 4, 4), float32] */;
  %1505 = multiply(%1502, %1503) /* ty=Tensor[(13, 4, 4), uint32] */;
  %1506 = exp(%1504) /* ty=Tensor[(13, 4, 4), float32] */;
  (%1505, %1506)
}

def @func_5606() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1507 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1508 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1509 = @func_4234() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1510 = %1507.6;
  %1511 = %1508.0;
  %1512 = %1509.0;
  (%1510, %1511, %1512)
}

def @func_4582() -> Tensor[(4, 15, 14), float32] {
  @func_2246() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_5907(%var_5891: Tensor[(13, 6, 4), float64]) -> (Tensor[(13, 6, 4), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1513 = cast(%var_5891, dtype="float64") /* ty=Tensor[(13, 6, 4), float64] */;
  %1514 = asinh(%1513) /* ty=Tensor[(13, 6, 4), float64] */;
  %1515 = cast(meta[relay.Constant][43] /* ty=Tensor[(13, 6, 4), float64] */, dtype="uint32") /* ty=Tensor[(13, 6, 4), uint32] */;
  %1516 = shape_of(%1514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1517 = cast(%1514, dtype="uint32") /* ty=Tensor[(13, 6, 4), uint32] */;
  %1518 = dyn.reshape(%1515, %1516, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1519 = @func_3793() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1520 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1521 = maximum(%1517, %1518) /* ty=Tensor[(13, 6, 4), uint32] */;
  %1522 = %1519.1;
  %1523 = %1520.0;
  (%1521, %1522, %1523)
}

def @func_16495() -> Tensor[(4, 15, 14), float32] {
  %1524 = @func_13534() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1524.1
}

def @func_16060(%var_16051: Tensor[(11, 7, 14), int16]) -> (Tensor[(11, 7, 14), bool],) {
  %1525 = cast(meta[relay.Constant][44] /* ty=Tensor[(11, 7, 14), int16] */, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
  %1526 = shape_of(%var_16051, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1527 = cast(%var_16051, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
  %1528 = dyn.reshape(%1525, %1526, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1529 = greater(%1527, %1528) /* ty=Tensor[(11, 7, 14), bool] */;
  (%1529,)
}

def @func_20944() -> Tensor[(1680), uint16] {
  %1530 = @func_14368() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(1680), uint16]) */;
  %1530.1
}

def @func_18708() -> (Tensor[(4, 15, 14), float64],) {
  %1531 = @func_2738() /* ty=Tensor[(4, 15, 14), float64] */;
  (%1531,)
}

def @func_4108() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) {
  %1532 = cast(meta[relay.Constant][45] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %1533 = cast(meta[relay.Constant][45] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %1534 = reshape(%1532, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), uint32] */;
  %1535 = reshape(%1533, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), uint32] */;
  %1536 = @func_454(%1534, %1535) /* ty=(Tensor[(13, 4, 4), uint32], Tensor[(13, 4, 4), float32]) */;
  %1537 = @func_2851() /* ty=Tensor[(4, 15, 14), float32] */;
  %1538 = @func_2738() /* ty=Tensor[(4, 15, 14), float64] */;
  %1539 = %1536.0;
  (%1537, %1538, %1539, meta[relay.Constant][45] /* ty=Tensor[(208), uint32] */)
}

def @func_17973() -> Tensor[(4, 15, 14), float32] {
  @func_1222() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_10332() -> (Tensor[(4, 15, 14), float32],) {
  %1540 = @func_9102() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1540,)
}

def @func_15297() -> (Tensor[(4, 15, 14), float32],) {
  %1541 = @func_5848() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1542 = %1541.0;
  (%1542,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7452() -> (Tensor[(4, 15, 14), float32],) {
  %2 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %0 = @func_5848() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_11558() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  %3 = @func_11430() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) */;
  %4 = @func_6054() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %5 = %3.5;
  %6 = %4.2;
  (%5, %6)
}

def @func_14086(%var_14058: Tensor[(4, 12, 4), int8], %var_14059: Tensor[(4, 12, 4), int8]) -> (Tensor[(4, 12, 4), int8], Tensor[(14, 3, 7), bool]) {
  %7 = cast(%var_14059, dtype="int8") /* ty=Tensor[(4, 12, 4), int8] */;
  %8 = shape_of(%var_14058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%var_14058, dtype="int8") /* ty=Tensor[(4, 12, 4), int8] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %11 = @func_9377() /* ty=(Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) */;
  %12 = logical_xor(%9, %10) /* ty=Tensor[(4, 12, 4), int8] */;
  %13 = %11.0;
  (%12, %13)
}

def @func_11701() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %21 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %14 = @func_4464() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %15 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
    %16 = @func_3002() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %17 = %14.1;
    %18 = %15.1;
    %19 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
    %20 = %16.0;
    (%17, %18, %19, %20)
  };
  %21() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_10680() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %28 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %22 = @func_9908() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %23 = @func_7100() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %24 = @func_4278() /* ty=Tensor[(4, 15, 14), bool] */;
    %25 = %22.0;
    %26 = %23.0;
    %27 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
    (%24, %25, %26, %27)
  };
  %28() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_19749() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %29 = @func_11129() /* ty=Tensor[(4, 15, 14), float32] */;
  %30 = @func_3818() /* ty=Tensor[(4, 15, 14), bool] */;
  (%29, %30)
}

def @func_11942() -> (Tensor[(4, 15, 14), float32],) {
  %33 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %31 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %32 = %31.1;
    (%32,)
  };
  %33() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_16062(%var_16061: Tensor[(11, 7, 14), int16]) -> (Tensor[(11, 7, 14), bool],) {
  %39 = fn (%var_16051: Tensor[(11, 7, 14), int16]) -> (Tensor[(11, 7, 14), bool],) {
    %34 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 7, 14), int16] */, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
    %35 = shape_of(%var_16051, dtype="int32") /* ty=Tensor[(3), int32] */;
    %36 = cast(%var_16051, dtype="bool") /* ty=Tensor[(11, 7, 14), bool] */;
    %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %38 = greater(%36, %37) /* ty=Tensor[(11, 7, 14), bool] */;
    (%38,)
  };
  %39(%var_16061) /* ty=(Tensor[(11, 7, 14), bool],) */
}

def @func_3309() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %44 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
    %40 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %41 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %42 = %40.0;
    %43 = %41.1;
    (%42, %43)
  };
  %44() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_20082() -> (Tensor[(4, 15, 14), float32],) {
  @func_20080() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_16805(%var_16787: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), float64], Tensor[(4, 15, 14), float32], Tensor[(2, 840), uint16]) {
  %45 = cast(%var_16787, dtype="float64") /* ty=Tensor[(5, 12, 2), float64] */;
  %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 840), uint16] */, dtype="uint16") /* ty=Tensor[(2, 840), uint16] */;
  %47 = reshape(%46, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
  %48 = @func_831(%47) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
  %49 = cosh(%45) /* ty=Tensor[(5, 12, 2), float64] */;
  %50 = %48.0;
  (%49, %50, meta[relay.Constant][1] /* ty=Tensor[(2, 840), uint16] */)
}

def @func_16916() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %51 = @func_11338() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %52 = %51.1;
  %53 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
  (%52, %53)
}

def @func_20813() -> Tensor[(4, 15, 14), float32] {
  @func_20811() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_2489() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %54 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  %55 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
  (%54, %55)
}

def @func_6488() -> Tensor[(4, 15, 14), bool] {
  %56 = fn () -> Tensor[(4, 15, 14), bool] {
    @func_1014() /* ty=Tensor[(4, 15, 14), bool] */
  };
  %56() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_17848() -> Tensor[(4, 15, 14), float32] {
  @func_1424() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_5507() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) {
  %57 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %58 = @func_3818() /* ty=Tensor[(4, 15, 14), bool] */;
  %59 = %57.1;
  (%58, %59)
}

def @func_9330() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %63 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %60 = @func_7451() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %61 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
    %62 = %60.0;
    (%61, %62)
  };
  %63() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_4747() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %68 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %64 = @func_2422() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %65 = @func_3978() /* ty=Tensor[(4, 15, 14), float32] */;
    %66 = @func_3978() /* ty=Tensor[(4, 15, 14), float32] */;
    %67 = %64.0;
    (%65, %66, %67)
  };
  %68() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_1764() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) {
  %69 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %70 = cast(meta[relay.Constant][2] /* ty=Tensor[(1680), uint16] */, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %71 = reshape(%70, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
  %72 = @func_831(%71) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
  %73 = %69.0;
  %74 = %72.0;
  (%73, %74, meta[relay.Constant][2] /* ty=Tensor[(1680), uint16] */)
}

def @func_3263() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %78 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %75 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %76 = %75.0;
    %77 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
    (%76, %77)
  };
  %78() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_16360() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %81 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %79 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
    %80 = @func_16010() /* ty=Tensor[(4, 15, 14), float32] */;
    (%79, %80)
  };
  %81() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_15252() -> (Tensor[(4, 15, 14), float64], Tensor[(3, 12, 6), float64]) {
  %88 = fn () -> (Tensor[(4, 15, 14), float64], Tensor[(3, 12, 6), float64]) {
    %82 = @func_11558() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
    %83 = @func_11972() /* ty=(Tensor[(3, 12, 6), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %84 = %83.0;
    %85 = cast(%84, dtype="float64") /* ty=Tensor[(3, 12, 6), float64] */;
    %86 = %82.0;
    %87 = log2(%85) /* ty=Tensor[(3, 12, 6), float64] */;
    (%86, %87)
  };
  %88() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(3, 12, 6), float64]) */
}

def @func_16657() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %105 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %89 = @func_14220() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(208), uint32]) */;
    %90 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %91 = @func_5350() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
    %92 = @func_16164() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %93 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %94 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %95 = @func_11262() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %96 = %89.0;
    %97 = %90.0;
    %98 = %91.1;
    %99 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
    %100 = @func_5885() /* ty=Tensor[(4, 15, 14), float32] */;
    %101 = %92.3;
    %102 = %93.0;
    %103 = %94.1;
    %104 = %95.0;
    (%96, %97, %98, %99, %100, %101, %102, %103, %104)
  };
  %105() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_5291() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %116 = fn () -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %106 = @func_5123() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %107 = @func_1478() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %108 = @func_3002() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %109 = @func_3227() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %110 = @func_2738() /* ty=Tensor[(4, 15, 14), float64] */;
    %111 = %106.0;
    %112 = %107.1;
    %113 = %108.0;
    %114 = @func_4039() /* ty=Tensor[(4, 15, 14), float32] */;
    %115 = %109.2;
    (%110, %111, %112, %113, %114, %115)
  };
  %116() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_2231() -> (Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %117 = @func_2030() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %118 = cast(meta[relay.Constant][3] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %119 = cast(meta[relay.Constant][4] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %120 = reshape(%118, newshape=[]) /* ty=uint32 */;
  %121 = reshape(%119, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), uint32] */;
  %122 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %123 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %124 = %117.1;
  %125 = @func_1579(%120, %121) /* ty=Tensor[(14, 3, 7), bool] */;
  %126 = @func_1918() /* ty=Tensor[(4, 15, 14), float32] */;
  %127 = %122.2;
  %128 = %123.4;
  (%124, %125, meta[relay.Constant][3] /* ty=uint32 */, meta[relay.Constant][4] /* ty=Tensor[(294), uint32] */, %126, %127, %128)
}

def @func_18966() -> (Tensor[(14, 3, 7), bool],) {
  @func_18964() /* ty=(Tensor[(14, 3, 7), bool],) */
}

def @func_7388() -> (Tensor[(4, 15, 14), float32],) {
  %130 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %129 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
    (%129,)
  };
  %130() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_19515() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), float64]) {
  %140 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), float64]) {
    %131 = @func_14368() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(1680), uint16]) */;
    %132 = %131.1;
    %133 = cast(%132, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
    %134 = reshape(%133, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
    %135 = @func_1332(%134) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %136 = cast(%132, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %137 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
    %138 = %135.6;
    %139 = sinh(%136) /* ty=Tensor[(1680), float64] */;
    (%137, %138, %139)
  };
  %140() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), float64]) */
}

def @func_8162() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %145 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %141 = @func_3729() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %142 = @func_7430() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %143 = %141.0;
    %144 = %142.2;
    (%143, %144)
  };
  %145() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_7702() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  %146 = @func_4108() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) */;
  %147 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %148 = @func_5885() /* ty=Tensor[(4, 15, 14), float32] */;
  %149 = @func_4278() /* ty=Tensor[(4, 15, 14), bool] */;
  %150 = %146.1;
  %151 = %147.0;
  (%148, %149, %150, %151)
}

def @func_8697() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %157 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %152 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %153 = @func_7387() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %154 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
    %155 = %152.0;
    %156 = %153.0;
    (%154, %155, %156)
  };
  %157() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_5380() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %161 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %158 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %159 = %158.1;
    %160 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
    (%159, %160)
  };
  %161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_1920() -> Tensor[(4, 15, 14), float32] {
  @func_1918() /* ty=Tensor[(4, 15, 14), float32] */
}

def @main() -> (Tensor[(10, 6, 7), float32],) {
  %162 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 6, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 7), float32] */;
  %163 = exp(%162) /* ty=Tensor[(10, 6, 7), float32] */;
  (%163,)
}

def @func_1334(%var_1333: Tensor[(1680), uint16]) -> (Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %192 = fn (%var_1312: Tensor[(1680), uint16]) -> (Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %164 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %165 = cast(meta[relay.Constant][7] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
    %166 = cast(meta[relay.Constant][7] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
    %167 = reshape(%165, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), uint32] */;
    %168 = reshape(%166, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), uint32] */;
    %169 = @func_454(%167, %168) /* ty=(Tensor[(13, 4, 4), uint32], Tensor[(13, 4, 4), float32]) */;
    %170 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %171 = cast(meta[relay.Constant][6] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %172 = reshape(%171, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), float32] */;
    %173 = @func_1045(%172) /* ty=(Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) */;
    %174 = %173.1;
    %175 = cast(%174, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
    %176 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %177 = cast(%var_1312, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
    %178 = reshape(%177, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
    %179 = @func_831(%178) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
    %180 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %181 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %182 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %183 = %164.3;
    %184 = %169.1;
    %185 = %170.0;
    %186 = cosh(%175) /* ty=Tensor[(4, 15, 14), float32] */;
    %187 = %176.0;
    %188 = %179.0;
    %189 = %180.1;
    %190 = %181.3;
    %191 = %182.0;
    (%183, meta[relay.Constant][6] /* ty=Tensor[(120), float32] */, %184, meta[relay.Constant][7] /* ty=Tensor[(208), uint32] */, %185, %186, %187, %188, %var_1312, %189, %190, %191)
  };
  %192(%var_1333) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_8784() -> (Tensor[(4, 15, 14), float32],) {
  @func_8782() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_9205() -> (Tensor[(4, 15, 14), bool],) {
  %193 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  (%193,)
}

def @func_7484() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %198 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %194 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %195 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %196 = %194.2;
    %197 = %195.0;
    (%196, %197)
  };
  %198() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_21960() -> (Tensor[(4, 15, 14), float32],) {
  %200 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %199 = @func_17848() /* ty=Tensor[(4, 15, 14), float32] */;
    (%199,)
  };
  %200() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_7211() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %204 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %201 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %202 = %201.0;
    %203 = @func_5885() /* ty=Tensor[(4, 15, 14), float32] */;
    (%202, %203)
  };
  %204() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_17245() -> Tensor[(4, 15, 14), bool] {
  @func_12342() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_14951() -> (Tensor[(4, 15, 14), float32],) {
  @func_14949() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_5350() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  %205 = @func_2738() /* ty=Tensor[(4, 15, 14), float64] */;
  %206 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  (%205, %206)
}

def @func_16508(%var_16497: Tensor[(5, 5, 9), float32]) -> (Tensor[(5, 5, 9), float32],) {
  %207 = cast(%var_16497, dtype="float32") /* ty=Tensor[(5, 5, 9), float32] */;
  %208 = erf(%207) /* ty=Tensor[(5, 5, 9), float32] */;
  (%208,)
}

def @func_13576() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %209 = @func_5290() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %210 = @func_8842() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %211 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %212 = %209.0;
  %213 = %210.1;
  %214 = %211.1;
  (%212, %213, %214)
}

def @func_13361(%var_13360: Tensor[(294), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(294), uint32]) {
  %221 = fn (%var_13315: Tensor[(294), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(294), uint32]) {
    %215 = @func_13000() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %216 = cast(%var_13315, dtype="uint32") /* ty=Tensor[(294), uint32] */;
    %217 = reshape(%216, newshape=[294]) /* ty=Tensor[(294), uint32] */;
    %218 = @func_11183(%217) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
    %219 = %215.0;
    %220 = %218.0;
    (%219, %220, %var_13315)
  };
  %221(%var_13360) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(294), uint32]) */
}

def @func_18666() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  %226 = fn () -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
    %222 = @func_15784() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
    %223 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %224 = %222.0;
    %225 = %223.0;
    (%224, %225)
  };
  %226() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */
}

def @func_14221() -> (Tensor[(4, 15, 14), float32], Tensor[(208), uint32]) {
  %230 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(208), uint32]) {
    %227 = @func_7387() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %228 = %227.0;
    %229 = @func_10708() /* ty=Tensor[(208), uint32] */;
    (%228, %229)
  };
  %230() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(208), uint32]) */
}

def @func_21574() -> (Tensor[(4, 15, 14), float32],) {
  @func_21572() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_21788() -> (Tensor[(294), uint32],) {
  @func_21786() /* ty=(Tensor[(294), uint32],) */
}

def @func_5509() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) {
  @func_5507() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */
}

def @func_12634() -> Tensor[(4, 15, 14), float32] {
  %231 = @func_11106() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %231.0
}

def @func_2491() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_22295(%var_22293: Tensor[(1, 6, 14), uint32], %var_22294: Tensor[(2, 6, 14), uint32]) -> (Tensor[(2, 6, 14), bool], Tensor[(14, 3, 7), bool]) {
  %237 = fn (%var_22260: Tensor[(1, 6, 14), uint32], %var_22261: Tensor[(2, 6, 14), uint32]) -> (Tensor[(2, 6, 14), bool], Tensor[(14, 3, 7), bool]) {
    %232 = cast(%var_22260, dtype="bool") /* ty=Tensor[(1, 6, 14), bool] */;
    %233 = cast(%var_22261, dtype="bool") /* ty=Tensor[(2, 6, 14), bool] */;
    %234 = @func_9377() /* ty=(Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) */;
    %235 = greater(%232, %233) /* ty=Tensor[(2, 6, 14), bool] */;
    %236 = %234.0;
    (%235, %236)
  };
  %237(%var_22293, %var_22294) /* ty=(Tensor[(2, 6, 14), bool], Tensor[(14, 3, 7), bool]) */
}

def @func_1515() -> (Tensor[(4, 15, 14), float32],) {
  %238 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %239 = %238.3;
  (%239,)
}

def @func_16380() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %240 = @func_2000() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %241 = %240.0;
  %242 = @func_14680() /* ty=Tensor[(4, 15, 14), float32] */;
  (%241, %242)
}

def @func_21629() -> Tensor[(4, 15, 14), float32] {
  @func_21627() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_1015() -> Tensor[(4, 15, 14), bool] {
  %244 = fn () -> Tensor[(4, 15, 14), bool] {
    %243 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %243.0
  };
  %244() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_10143() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  @func_10141() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_6565() -> Tensor[(4, 15, 14), float32] {
  @func_288() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_13820() -> Tensor[(4, 15, 14), float32] {
  %246 = fn () -> Tensor[(4, 15, 14), float32] {
    %245 = @func_9329() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %245.1
  };
  %246() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_11614() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %247 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %248 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %249 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %250 = %247.0;
  %251 = %248.0;
  %252 = %249.1;
  (%250, %251, %252)
}

def @func_10888() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %257 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %253 = @func_9179() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %254 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
    %255 = %253.2;
    %256 = %254.0;
    (%255, %256)
  };
  %257() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_1658() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_19146() -> (Tensor[(121), float64], Tensor[(4, 15, 14), float32]) {
  %258 = @func_12198() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), float32]) */;
  %259 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %260 = %258.1;
  %261 = %259.0;
  (%260, %261)
}

def @func_4946(%var_4944: Tensor[(48), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(2, 6, 4), bool], Tensor[(48), uint32], Tensor[(4, 15, 14), float32]) {
  @func_4943(%var_4944) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(2, 6, 4), bool], Tensor[(48), uint32], Tensor[(4, 15, 14), float32]) */
}

def @func_5907(%var_5891: Tensor[(13, 6, 4), float64]) -> (Tensor[(13, 6, 4), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %262 = cast(%var_5891, dtype="float64") /* ty=Tensor[(13, 6, 4), float64] */;
  %263 = asinh(%262) /* ty=Tensor[(13, 6, 4), float64] */;
  %264 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 6, 4), float64] */, dtype="uint32") /* ty=Tensor[(13, 6, 4), uint32] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%263, dtype="uint32") /* ty=Tensor[(13, 6, 4), uint32] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %268 = @func_3793() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %269 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %270 = maximum(%266, %267) /* ty=Tensor[(13, 6, 4), uint32] */;
  %271 = %268.1;
  %272 = %269.0;
  (%270, %271, %272)
}

def @func_12426() -> Tensor[(4, 15, 14), float32] {
  %273 = @func_10956() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %273.1
}

def @func_8226(%var_8224: Tensor[(4, 8, 2), float32], %var_8225: Tensor[(1680), uint16]) -> (Tensor[(4, 8, 2), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), bool]) {
  @func_8222(%var_8224, %var_8225) /* ty=(Tensor[(4, 8, 2), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), bool]) */
}

def @func_8883() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %277 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
    %274 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %275 = %274.6;
    %276 = @func_4278() /* ty=Tensor[(4, 15, 14), bool] */;
    (%275, %276)
  };
  %277() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_8757() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_8755() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_1611() -> (Tensor[(4, 15, 14), float32],) {
  %278 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %279 = %278.3;
  (%279,)
}

def @func_3980() -> Tensor[(4, 15, 14), float32] {
  @func_3978() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_14821() -> (Tensor[(4, 15, 14), float32],) {
  %282 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %280 = @func_1965() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %281 = %280.0;
    (%281,)
  };
  %282() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_8360() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %283 = @func_7920() /* ty=(Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) */;
  %284 = @func_5290() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %285 = %283.1;
  %286 = %284.2;
  (%285, %286)
}

def @func_19831() -> Tensor[(4, 15, 14), float32] {
  %288 = fn () -> Tensor[(4, 15, 14), float32] {
    %287 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %287.0
  };
  %288() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_408() -> Tensor[(4, 15, 14), float32] {
  @func_288() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_11339() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %293 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
    %289 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %290 = @func_3670() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %291 = %289.0;
    %292 = %290.0;
    (%291, %292)
  };
  %293() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_385() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %312 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
    %294 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %295 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %296 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %297 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %298 = %297.2;
    %299 = cast(%298, dtype="float64") /* ty=Tensor[(4, 15, 14), float64] */;
    %300 = atanh(%299) /* ty=Tensor[(4, 15, 14), float64] */;
    %301 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %302 = %301.3;
    %303 = cast(%302, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
    %304 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
    %305 = cast(%300, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
    %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %307 = %294.2;
    %308 = %295.0;
    %309 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
    %310 = %296.2;
    %311 = power(%305, %306) /* ty=Tensor[(4, 15, 14), float32] */;
    (%307, %308, %309, %310, %311)
  };
  %312() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_4234() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %313 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %314 = @func_3227() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %315 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
  %316 = @func_3978() /* ty=Tensor[(4, 15, 14), float32] */;
  %317 = cast(%316, dtype="bool") /* ty=Tensor[(4, 15, 14), bool] */;
  %318 = shape_of(%315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%315, dtype="bool") /* ty=Tensor[(4, 15, 14), bool] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %321 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %322 = %313.0;
  %323 = @func_2851() /* ty=Tensor[(4, 15, 14), float32] */;
  %324 = %314.2;
  %325 = equal(%319, %320) /* ty=Tensor[(4, 15, 14), bool] */;
  (%321, %322, %323, %324, %325)
}

def @func_19751() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  @func_19749() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_4896() -> (Tensor[(4, 15, 14), float32],) {
  @func_4894() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_7136() -> (Tensor[(4, 15, 14), bool],) {
  %326 = @func_3818() /* ty=Tensor[(4, 15, 14), bool] */;
  (%326,)
}

def @func_1479() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %330 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
    %327 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %328 = %327.0;
    %329 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
    (%328, %329)
  };
  %330() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_976() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %337 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %331 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %332 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %333 = %331.1;
    %334 = %332.0;
    %335 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
    %336 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
    (%333, %334, %335, %336)
  };
  %337() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_16252() -> Tensor[(4, 15, 14), float32] {
  @func_16250() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_588() -> (Tensor[(4, 15, 14), bool],) {
  @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */
}

def @func_16250() -> Tensor[(4, 15, 14), float32] {
  %338 = @func_7210() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %338.0
}

def @func_11186(%var_11184: Tensor[(294), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) {
  @func_11183(%var_11184) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */
}

def @func_17043() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %339 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %340 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %341 = %339.2;
  %342 = %340.0;
  (%341, %342)
}

def @func_7431() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %347 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %343 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %344 = @func_4850() /* ty=Tensor[(4, 15, 14), float32] */;
    %345 = %343.0;
    %346 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
    (%344, %345, %346)
  };
  %347() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_3978() -> Tensor[(4, 15, 14), float32] {
  %348 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %348.0
}

def @func_9653() -> Tensor[(4, 15, 14), bool] {
  %350 = fn () -> Tensor[(4, 15, 14), bool] {
    %349 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %349.2
  };
  %350() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_14425() -> (Tensor[(4, 15, 14), bool],) {
  %352 = fn () -> (Tensor[(4, 15, 14), bool],) {
    %351 = @func_6487() /* ty=Tensor[(4, 15, 14), bool] */;
    (%351,)
  };
  %352() /* ty=(Tensor[(4, 15, 14), bool],) */
}

def @func_2464() -> (Tensor[(4, 15, 14), float32],) {
  %354 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %353 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
    (%353,)
  };
  %354() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_18964() -> (Tensor[(14, 3, 7), bool],) {
  %355 = @func_9377() /* ty=(Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) */;
  %356 = %355.0;
  (%356,)
}

def @func_17973() -> Tensor[(4, 15, 14), float32] {
  @func_1222() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_8844() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_8842() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_755() -> Tensor[(4, 15, 14), float32] {
  @func_753() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_13826() -> (Tensor[(4, 15, 14), float32],) {
  %359 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %357 = @func_9593() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %358 = %357.3;
    (%358,)
  };
  %359() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_11974() -> (Tensor[(3, 12, 6), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_11972() /* ty=(Tensor[(3, 12, 6), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_12885() -> (Tensor[(4, 15, 14), float32],) {
  %362 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %360 = @func_12318() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %361 = %360.1;
    (%361,)
  };
  %362() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_1766() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) {
  @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */
}

def @func_5651() -> (Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) {
  @func_5649() /* ty=(Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */
}

def @func_833(%var_832: Tensor[(8, 14, 15), uint16]) -> (Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) {
  %374 = fn (%var_769: Tensor[(8, 14, 15), uint16]) -> (Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) {
    %363 = cast(%var_769, dtype="uint16") /* ty=Tensor[(8, 14, 15), uint16] */;
    %364 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(8, 14, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %365 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 14, 15), uint16] */, dtype="uint16") /* ty=Tensor[(8, 14, 15), uint16] */;
    %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %367 = maximum(%365, %366) /* ty=Tensor[(8, 14, 15), uint16] */;
    %368 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 14, 15), uint16] */, dtype="bool") /* ty=Tensor[(8, 14, 15), bool] */;
    %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
    %370 = cast(%367, dtype="bool") /* ty=Tensor[(8, 14, 15), bool] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %372 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
    %373 = not_equal(%370, %371) /* ty=Tensor[(8, 14, 15), bool] */;
    (%372, %373)
  };
  %374(%var_832) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */
}

def @func_16382() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_16380() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_20531() -> Tensor[(4, 15, 14), bool] {
  %375 = @func_15784() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
  %375.2
}

def @func_17386(%var_17377: Tensor[(14, 14, 5), uint32]) -> Tensor[(14, 14, 5), bool] {
  %376 = cast(%var_17377, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %377 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 14, 5), uint32] */, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%378, %379) /* ty=Tensor[(14, 14, 5), bool] */
}

def @func_6015() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) {
  %387 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) {
    %380 = cast(meta[relay.Constant][11] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %381 = cast(meta[relay.Constant][12] /* ty=Tensor[(294), uint32] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
    %382 = reshape(%380, newshape=[]) /* ty=uint32 */;
    %383 = reshape(%381, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), uint32] */;
    %384 = @func_3393() /* ty=Tensor[(4, 15, 14), float32] */;
    %385 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
    %386 = @func_1579(%382, %383) /* ty=Tensor[(14, 3, 7), bool] */;
    (%384, %385, %386, meta[relay.Constant][11] /* ty=uint32 */, meta[relay.Constant][12] /* ty=Tensor[(294), uint32] */)
  };
  %387() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */
}

def @func_15194() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %392 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %388 = @func_12941() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %389 = @func_14252() /* ty=Tensor[(4, 15, 14), bool] */;
    %390 = %388.0;
    %391 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
    (%389, %390, %391)
  };
  %392() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_410() -> Tensor[(4, 15, 14), float32] {
  @func_408() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_21285() -> (Tensor[(4, 15, 14), float32],) {
  %393 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %394 = %393.0;
  (%394,)
}

def @func_4466() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_4464() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_6164() -> Tensor[(4, 15, 14), float32] {
  %395 = fn () -> Tensor[(4, 15, 14), float32] {
    @func_4039() /* ty=Tensor[(4, 15, 14), float32] */
  };
  %395() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_10817(%var_10815: Tensor[(1, 11, 11), float64]) -> Tensor[(1, 11, 11), float64] {
  @func_10814(%var_10815) /* ty=Tensor[(1, 11, 11), float64] */
}

def @func_13937() -> (Tensor[(4, 15, 14), bool],) {
  %396 = @func_13900() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %397 = %396.1;
  (%397,)
}

def @func_2233() -> (Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_14186() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %398 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %399 = @func_13825() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %400 = %398.1;
  %401 = %399.0;
  (%400, %401)
}

def @func_8064() -> (Tensor[(4, 15, 14), float32],) {
  %404 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %402 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %403 = %402.0;
    (%403,)
  };
  %404() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_1224() -> Tensor[(4, 15, 14), float32] {
  @func_1222() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_4785(%var_4775: Tensor[(16, 10, 15), float32]) -> (Tensor[(16, 10, 15), float32], Tensor[(4, 15, 14), float32]) {
  %405 = cast(%var_4775, dtype="float32") /* ty=Tensor[(16, 10, 15), float32] */;
  %406 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %407 = acos(%405) /* ty=Tensor[(16, 10, 15), float32] */;
  %408 = %406.0;
  (%407, %408)
}

def @func_12199() -> (Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), float32]) {
  %429 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), float32]) {
    %409 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %410 = @func_9072() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %411 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %412 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %413 = cast(meta[relay.Constant][13] /* ty=Tensor[(121), float64] */, dtype="float64") /* ty=Tensor[(121), float64] */;
    %414 = reshape(%413, newshape=[121]) /* ty=Tensor[(121), float64] */;
    %415 = @func_11497(%414) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(14, 3, 7), bool], Tensor[(1, 11, 11), float64]) */;
    %416 = %415.2;
    %417 = cast(%416, dtype="float32") /* ty=Tensor[(121), float32] */;
    %418 = cos(%417) /* ty=Tensor[(121), float32] */;
    %419 = cast(%416, dtype="float64") /* ty=Tensor[(121), float64] */;
    %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(1), int32] */;
    %421 = cast(%418, dtype="float64") /* ty=Tensor[(121), float64] */;
    %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?), float64] */;
    %423 = %409.0;
    %424 = %410.0;
    %425 = %411.0;
    %426 = %412.0;
    %427 = floor_mod(%421, %422) /* ty=Tensor[(121), float64] */;
    %428 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
    (%423, meta[relay.Constant][13] /* ty=Tensor[(121), float64] */, %424, %425, %426, %427, %428)
  };
  %429() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(121), float64], Tensor[(4, 15, 14), float32]) */
}

def @func_528() -> Tensor[(4, 15, 14), float32] {
  %430 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %430.0
}

def @func_21688() -> (Tensor[(4, 15, 14), float32],) {
  %431 = @func_11700() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %432 = %431.0;
  (%432,)
}

def @func_7312() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_7310() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_16102() -> (Tensor[(4, 15, 14), float32],) {
  %433 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %434 = %433.0;
  (%434,)
}

def @func_6319() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %441 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
    %435 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
    %436 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %437 = @func_5507() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
    %438 = %435.1;
    %439 = %436.0;
    %440 = %437.1;
    (%438, %439, %440)
  };
  %441() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_20867() -> (Tensor[(4, 15, 14), float32],) {
  %444 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %442 = @func_8842() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %443 = %442.1;
    (%443,)
  };
  %444() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_9910() -> (Tensor[(4, 15, 14), float32],) {
  @func_9908() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_12941() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %445 = @func_9444() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %446 = @func_12884() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %447 = %445.0;
  %448 = %446.0;
  (%447, %448)
}

def @func_3139(%var_3089: Tensor[(3, 14, 1), int64], %var_3134: Tensor[(3, 14, 2), int64]) -> (Tensor[(14, 3, 7), bool], Tensor[(3, 14, 1), float64], Tensor[(3, 14, ?), int32], Tensor[(3, 14, 2), bool]) {
  %449 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %450 = cast(%var_3089, dtype="float64") /* ty=Tensor[(3, 14, 1), float64] */;
  %451 = rsqrt(%450) /* ty=Tensor[(3, 14, 1), float64] */;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(3, 14, 1), float64] */;
  %453 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %454 = cast(%var_3089, dtype="int64") /* ty=Tensor[(3, 14, 1), int64] */;
  %455 = bitwise_and(%453, %454) /* ty=Tensor[(3, 14, 1), int64] */;
  %456 = cast(%455, dtype="int32") /* ty=Tensor[(3, 14, 1), int32] */;
  %457 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%451, dtype="int32") /* ty=Tensor[(3, 14, 1), int32] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %460 = cast(%455, dtype="bool") /* ty=Tensor[(3, 14, 1), bool] */;
  %461 = cast(%var_3134, dtype="bool") /* ty=Tensor[(3, 14, 2), bool] */;
  %462 = %449.1;
  %463 = exp(%452) /* ty=Tensor[(3, 14, 1), float64] */;
  %464 = logical_xor(%458, %459) /* ty=Tensor[(3, 14, ?), int32] */;
  %465 = not_equal(%460, %461) /* ty=Tensor[(3, 14, 2), bool] */;
  (%462, %463, %464, %465)
}

def @func_11020() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %466 = @func_8882() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %467 = @func_5123() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %468 = @func_8882() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %469 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %470 = @func_4464() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %471 = %466.0;
  %472 = %467.0;
  %473 = %468.0;
  %474 = %469.0;
  %475 = %470.1;
  (%471, %472, %473, %474, %475)
}

def @func_6054() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %476 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %477 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %478 = @func_4039() /* ty=Tensor[(4, 15, 14), float32] */;
  %479 = %476.0;
  %480 = %477.0;
  (%478, %479, %480)
}

def @func_18828(%var_18827: Tensor[(13, 3, 7), uint64]) -> (Tensor[(13, 3, 7), int16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 12, 4), int8], Tensor[(48, 4), int8], Tensor[(4, 15, 14), bool]) {
  %507 = fn (%var_18761: Tensor[(13, 3, 7), uint64]) -> (Tensor[(13, 3, 7), int16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 12, 4), int8], Tensor[(48, 4), int8], Tensor[(4, 15, 14), bool]) {
    %481 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 3, 7), uint64] */, dtype="int16") /* ty=Tensor[(13, 3, 7), int16] */;
    %482 = shape_of(%var_18761, dtype="int32") /* ty=Tensor[(3), int32] */;
    %483 = cast(%var_18761, dtype="int16") /* ty=Tensor[(13, 3, 7), int16] */;
    %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %485 = add(%483, %484) /* ty=Tensor[(13, 3, 7), int16] */;
    %486 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 3, 7), uint64] */, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
    %487 = shape_of(%var_18761, dtype="int32") /* ty=Tensor[(3), int32] */;
    %488 = cast(%var_18761, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
    %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %490 = equal(%488, %489) /* ty=Tensor[(13, 3, 7), bool] */;
    %491 = cast(%490, dtype="int16") /* ty=Tensor[(13, 3, 7), int16] */;
    %492 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
    %493 = cast(%485, dtype="int16") /* ty=Tensor[(13, 3, 7), int16] */;
    %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %495 = @func_18741() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %496 = cast(meta[relay.Constant][16] /* ty=Tensor[(48, 4), int8] */, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
    %497 = cast(meta[relay.Constant][16] /* ty=Tensor[(48, 4), int8] */, dtype="int8") /* ty=Tensor[(48, 4), int8] */;
    %498 = reshape(%496, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int8] */;
    %499 = reshape(%497, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int8] */;
    %500 = @func_14086(%498, %499) /* ty=(Tensor[(4, 12, 4), int8], Tensor[(14, 3, 7), bool]) */;
    %501 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %502 = minimum(%493, %494) /* ty=Tensor[(13, 3, 7), int16] */;
    %503 = %495.0;
    %504 = @func_6163() /* ty=Tensor[(4, 15, 14), float32] */;
    %505 = %500.0;
    %506 = %501.0;
    (%502, %503, %504, %505, meta[relay.Constant][16] /* ty=Tensor[(48, 4), int8] */, %506)
  };
  %507(%var_18827) /* ty=(Tensor[(13, 3, 7), int16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 12, 4), int8], Tensor[(48, 4), int8], Tensor[(4, 15, 14), bool]) */
}

def @func_14025() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_14023() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_17215() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %508 = @func_16229() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %509 = %508.0;
  %510 = @func_8538() /* ty=Tensor[(4, 15, 14), float32] */;
  (%509, %510)
}

def @func_17645() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_17643() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_15407() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %511 = @func_13900() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %512 = @func_6728() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %513 = %511.0;
  %514 = %512.2;
  %515 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
  (%513, %514, %515)
}

def @func_20061(%var_20059: Tensor[(128, 2), float64], %var_20060: Tensor[(3840), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(5, 13, 6), float64], Tensor[(4, 15, 14), bool], Tensor[(16, 15, 16), float64], Tensor[(128, 2), float64], Tensor[(3840), float64], Tensor[(5, 13, 6), uint8]) {
  @func_20057(%var_20059, %var_20060) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(5, 13, 6), float64], Tensor[(4, 15, 14), bool], Tensor[(16, 15, 16), float64], Tensor[(128, 2), float64], Tensor[(3840), float64], Tensor[(5, 13, 6), uint8]) */
}

def @func_4041() -> Tensor[(4, 15, 14), float32] {
  @func_4039() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_7609() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  @func_7607() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_753() -> Tensor[(4, 15, 14), float32] {
  @func_553() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_21567(%var_21565: Tensor[(13, 6, 12), int64], %var_21566: Tensor[(13, 6, 12), int64]) -> (Tensor[(13, 6, 12), int64], Tensor[(4, 15, 14), bool]) {
  %522 = fn (%var_21554: Tensor[(13, 6, 12), int64], %var_21555: Tensor[(13, 6, 12), int64]) -> (Tensor[(13, 6, 12), int64], Tensor[(4, 15, 14), bool]) {
    %516 = cast(%var_21555, dtype="int64") /* ty=Tensor[(13, 6, 12), int64] */;
    %517 = shape_of(%var_21554, dtype="int32") /* ty=Tensor[(3), int32] */;
    %518 = cast(%var_21554, dtype="int64") /* ty=Tensor[(13, 6, 12), int64] */;
    %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %520 = right_shift(%518, %519) /* ty=Tensor[(13, 6, 12), int64] */;
    %521 = @func_3432() /* ty=Tensor[(4, 15, 14), bool] */;
    (%520, %521)
  };
  %522(%var_21565, %var_21566) /* ty=(Tensor[(13, 6, 12), int64], Tensor[(4, 15, 14), bool]) */
}

def @func_15653() -> Tensor[(4, 15, 14), float32] {
  %524 = fn () -> Tensor[(4, 15, 14), float32] {
    %523 = @func_8769() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %523.0
  };
  %524() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_9881() -> (Tensor[(4, 15, 14), float32],) {
  @func_9879() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_2328(%var_2326: Tensor[(1680, 1), uint16]) -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool], Tensor[(1680, 1), float32], Tensor[(4, 15, 14), float32]) {
  @func_2325(%var_2326) /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool], Tensor[(1680, 1), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_9896() -> (Tensor[(4, 15, 14), bool],) {
  %527 = fn () -> (Tensor[(4, 15, 14), bool],) {
    %525 = @func_7607() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %526 = %525.2;
    (%526,)
  };
  %527() /* ty=(Tensor[(4, 15, 14), bool],) */
}

def @func_18710() -> (Tensor[(4, 15, 14), float64],) {
  @func_18708() /* ty=(Tensor[(4, 15, 14), float64],) */
}

def @func_14763() -> (Tensor[(4, 15, 14), bool],) {
  %530 = fn () -> (Tensor[(4, 15, 14), bool],) {
    %528 = @func_9072() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %529 = %528.0;
    (%529,)
  };
  %530() /* ty=(Tensor[(4, 15, 14), bool],) */
}

def @func_553() -> Tensor[(4, 15, 14), float32] {
  %531 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %531.0
}

def @func_9379() -> (Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) {
  @func_9377() /* ty=(Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_6528(%var_6525: Tensor[(5, 13, 6), uint32], %var_6526: Tensor[(5, 13, 6), uint32], %var_6527: Tensor[(5, 13, 6), uint32]) -> (Tensor[(5, 13, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) {
  %544 = fn (%var_6492: Tensor[(5, 13, 6), uint32], %var_6493: Tensor[(5, 13, 6), uint32], %var_6499: Tensor[(5, 13, 6), uint32]) -> (Tensor[(5, 13, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) {
    %532 = cast(%var_6493, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
    %533 = shape_of(%var_6492, dtype="int32") /* ty=Tensor[(3), int32] */;
    %534 = cast(%var_6492, dtype="bool") /* ty=Tensor[(5, 13, 6), bool] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %536 = cast(%var_6499, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
    %537 = shape_of(%var_6492, dtype="int32") /* ty=Tensor[(3), int32] */;
    %538 = cast(%var_6492, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
    %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %540 = cast(%var_6499, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
    %541 = greater_equal(%534, %535) /* ty=Tensor[(5, 13, 6), bool] */;
    %542 = divide(%538, %539) /* ty=Tensor[(5, 13, 6), float32] */;
    %543 = log2(%540) /* ty=Tensor[(5, 13, 6), float32] */;
    (%541, %542, %543)
  };
  %544(%var_6525, %var_6526, %var_6527) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) */
}

def @func_16808(%var_16806: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), float64], Tensor[(4, 15, 14), float32], Tensor[(2, 840), uint16]) {
  @func_16805(%var_16806) /* ty=(Tensor[(5, 12, 2), float64], Tensor[(4, 15, 14), float32], Tensor[(2, 840), uint16]) */
}

def @func_1094() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(840, 2), float32]) {
  @func_1092() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(840, 2), float32]) */
}

def @func_454(%var_432: Tensor[(13, 4, 4), uint32], %var_433: Tensor[(13, 4, 4), uint32]) -> (Tensor[(13, 4, 4), uint32], Tensor[(13, 4, 4), float32]) {
  %545 = cast(%var_433, dtype="uint32") /* ty=Tensor[(13, 4, 4), uint32] */;
  %546 = shape_of(%var_432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%var_432, dtype="uint32") /* ty=Tensor[(13, 4, 4), uint32] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %549 = cast(%var_432, dtype="float32") /* ty=Tensor[(13, 4, 4), float32] */;
  %550 = multiply(%547, %548) /* ty=Tensor[(13, 4, 4), uint32] */;
  %551 = exp(%549) /* ty=Tensor[(13, 4, 4), float32] */;
  (%550, %551)
}

def @func_14369() -> (Tensor[(4, 15, 14), bool], Tensor[(1680), uint16]) {
  %556 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(1680), uint16]) {
    %552 = @func_12297() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120), float32]) */;
    %553 = @func_6728() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
    %554 = %552.4;
    %555 = %553.1;
    (%554, %555)
  };
  %556() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(1680), uint16]) */
}

def @func_13186() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %557 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %558 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %559 = %557.0;
  %560 = @func_8538() /* ty=Tensor[(4, 15, 14), float32] */;
  (%558, %559, %560)
}

def @func_22207() -> (Tensor[(4, 15, 14), float32],) {
  @func_22205() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_17217() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  @func_17215() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_13073(%var_13068: Tensor[(32, 8), float64], %var_13069: Tensor[(3840), float64], %var_13070: Tensor[(32, 8), float32], %var_13071: Tensor[(32, 8), bool], %var_13072: Tensor[(1, 2400), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(16, 1, 16), float32], Tensor[(3840), float64], Tensor[(32, 8), float32], Tensor[(4, 15, 14), float32], Tensor[(16, 10, 15), float32], Tensor[(1, 2400), float32], Tensor[(4, 15, 14), bool]) {
  %589 = fn (%var_13010: Tensor[(32, 8), float64], %var_13011: Tensor[(3840), float64], %var_13043: Tensor[(32, 8), float32], %var_13047: Tensor[(32, 8), bool], %var_13062: Tensor[(1, 2400), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(16, 1, 16), float32], Tensor[(3840), float64], Tensor[(32, 8), float32], Tensor[(4, 15, 14), float32], Tensor[(16, 10, 15), float32], Tensor[(1, 2400), float32], Tensor[(4, 15, 14), bool]) {
    %561 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %562 = cast(%var_13010, dtype="float64") /* ty=Tensor[(32, 8), float64] */;
    %563 = cast(%var_13011, dtype="float64") /* ty=Tensor[(3840), float64] */;
    %564 = reshape(%562, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), float64] */;
    %565 = reshape(%563, newshape=[16, 15, 16]) /* ty=Tensor[(16, 15, 16), float64] */;
    %566 = @func_11244(%564, %565) /* ty=(Tensor[(16, 15, 16), float64], Tensor[(16, 1, 16), float32]) */;
    %567 = cast(%var_13010, dtype="float32") /* ty=Tensor[(32, 8), float32] */;
    %568 = acosh(%567) /* ty=Tensor[(32, 8), float32] */;
    %569 = cast(%var_13043, dtype="bool") /* ty=Tensor[(32, 8), bool] */;
    %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(2), int32] */;
    %571 = cast(%568, dtype="bool") /* ty=Tensor[(32, 8), bool] */;
    %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %573 = greater(%571, %572) /* ty=Tensor[(32, 8), bool] */;
    %574 = cast(%var_13047, dtype="float32") /* ty=Tensor[(32, 8), float32] */;
    %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(2), int32] */;
    %576 = cast(%573, dtype="float32") /* ty=Tensor[(32, 8), float32] */;
    %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %578 = @func_8063() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %579 = cast(%var_13062, dtype="float32") /* ty=Tensor[(1, 2400), float32] */;
    %580 = reshape(%579, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
    %581 = @func_4785(%580) /* ty=(Tensor[(16, 10, 15), float32], Tensor[(4, 15, 14), float32]) */;
    %582 = @func_9895() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %583 = %561.0;
    %584 = %566.1;
    %585 = divide(%576, %577) /* ty=Tensor[(32, 8), float32] */;
    %586 = %578.0;
    %587 = %581.0;
    %588 = %582.0;
    (%583, %584, %var_13011, %585, %586, %587, %var_13062, %588)
  };
  %589(%var_13068, %var_13069, %var_13070, %var_13071, %var_13072) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(16, 1, 16), float32], Tensor[(3840), float64], Tensor[(32, 8), float32], Tensor[(4, 15, 14), float32], Tensor[(16, 10, 15), float32], Tensor[(1, 2400), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_3818() -> Tensor[(4, 15, 14), bool] {
  @func_3432() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_7048() -> (Tensor[(4, 15, 14), float32],) {
  %590 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %591 = %590.0;
  (%591,)
}

def @func_5848() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %592 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %593 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %594 = %592.0;
  (%593, %594)
}

def @func_9760(%var_9758: Tensor[(84), int64]) -> (Tensor[(4, 15, 14), float32], Tensor[(3, 14, ?), int32], Tensor[(42), int64], Tensor[(84), int64]) {
  %595 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %596 = cast(meta[relay.Constant][17] /* ty=Tensor[(42), int64] */, dtype="int64") /* ty=Tensor[(42), int64] */;
  %597 = cast(%var_9758, dtype="int64") /* ty=Tensor[(84), int64] */;
  %598 = reshape(%596, newshape=[3, 14, 1]) /* ty=Tensor[(3, 14, 1), int64] */;
  %599 = reshape(%597, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int64] */;
  %600 = @func_3139(%598, %599) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(3, 14, 1), float64], Tensor[(3, 14, ?), int32], Tensor[(3, 14, 2), bool]) */;
  %601 = %595.0;
  %602 = %600.2;
  (%601, %602, meta[relay.Constant][17] /* ty=Tensor[(42), int64] */, %var_9758)
}

def @func_7138() -> (Tensor[(4, 15, 14), bool],) {
  @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */
}

def @func_1908() -> (Tensor[(4, 15, 14), float32],) {
  %603 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %604 = %603.3;
  (%604,)
}

def @func_19709() -> Tensor[(4, 15, 14), float32] {
  @func_19707() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_1582(%var_1580: uint32, %var_1581: Tensor[(14, 3, 7), uint32]) -> Tensor[(14, 3, 7), bool] {
  %610 = fn (%var_1551: uint32, %var_1552: Tensor[(14, 3, 7), uint32]) -> Tensor[(14, 3, 7), bool] {
    %605 = cast(%var_1551, dtype="bool") /* ty=bool */;
    %606 = cast(%var_1552, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
    %607 = greater_equal(%605, %606) /* ty=Tensor[(14, 3, 7), bool] */;
    %608 = cast(%607, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
    %609 = cast(%var_1551, dtype="bool") /* ty=bool */;
    greater(%608, %609) /* ty=Tensor[(14, 3, 7), bool] */
  };
  %610(%var_1580, %var_1581) /* ty=Tensor[(14, 3, 7), bool] */
}

def @func_15785() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) {
  %616 = fn () -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) {
    %611 = @func_5290() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %612 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %613 = %611.0;
    %614 = %612.0;
    %615 = @func_10079() /* ty=Tensor[(4, 15, 14), bool] */;
    (%613, %614, %615)
  };
  %616() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */
}

def @func_20944() -> Tensor[(1680), uint16] {
  %617 = @func_14368() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(1680), uint16]) */;
  %617.1
}

def @func_3898() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %618 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %619 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %620 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %621 = @func_1918() /* ty=Tensor[(4, 15, 14), float32] */;
  %622 = %618.0;
  %623 = %619.3;
  %624 = %620.0;
  (%621, %622, %623, %624)
}

def @func_6627() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %625 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %626 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %627 = %625.1;
  %628 = %626.2;
  %629 = @func_6163() /* ty=Tensor[(4, 15, 14), float32] */;
  (%627, %628, %629)
}

def @func_22026(%var_22008: Tensor[(3, 2, 8), uint32], %var_22015: Tensor[(294), uint32]) -> (Tensor[(3, 2, 8), uint32], Tensor[(294), uint32], Tensor[(294), uint32]) {
  %630 = cast(%var_22008, dtype="uint32") /* ty=Tensor[(3, 2, 8), uint32] */;
  %631 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(3, 2, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(meta[relay.Constant][18] /* ty=Tensor[(3, 2, 8), uint32] */, dtype="uint32") /* ty=Tensor[(3, 2, 8), uint32] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %634 = cast(%var_22015, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %635 = reshape(%634, newshape=[294]) /* ty=Tensor[(294), uint32] */;
  %636 = @func_11183(%635) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
  %637 = bitwise_or(%632, %633) /* ty=Tensor[(3, 2, 8), uint32] */;
  %638 = %636.3;
  (%637, %638, %var_22015)
}

def @func_12781() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(13, 4, 4), uint32], Tensor[(4, 15, 14), float32]) {
  %639 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %640 = @func_8769() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %641 = @func_4108() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) */;
  %642 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %643 = %639.1;
  %644 = @func_1222() /* ty=Tensor[(4, 15, 14), float32] */;
  %645 = %640.0;
  %646 = %641.2;
  %647 = %642.0;
  (%643, %644, %645, %646, %647)
}

def @func_15903(%var_15902: Tensor[(64), float32]) -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(64), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) {
  %658 = fn (%var_15891: Tensor[(64), float32]) -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(64), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) {
    %648 = @func_7702() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
    %649 = cast(%var_15891, dtype="float32") /* ty=Tensor[(64), float32] */;
    %650 = cast(meta[relay.Constant][19] /* ty=Tensor[(1680), uint16] */, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
    %651 = reshape(%649, newshape=[4, 8, 2]) /* ty=Tensor[(4, 8, 2), float32] */;
    %652 = reshape(%650, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
    %653 = @func_8222(%651, %652) /* ty=(Tensor[(4, 8, 2), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), bool]) */;
    %654 = @func_2000() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %655 = %648.1;
    %656 = %653.3;
    %657 = %654.0;
    (%655, %656, %var_15891, meta[relay.Constant][19] /* ty=Tensor[(1680), uint16] */, %657)
  };
  %658(%var_15902) /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(64), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */
}

def @func_7050() -> (Tensor[(4, 15, 14), float32],) {
  @func_7048() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_4943(%var_4933: Tensor[(48), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(2, 6, 4), bool], Tensor[(48), uint32], Tensor[(4, 15, 14), float32]) {
  %659 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %660 = cast(%var_4933, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %661 = cast(%var_4933, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %662 = reshape(%660, newshape=[2, 6, 4]) /* ty=Tensor[(2, 6, 4), uint32] */;
  %663 = reshape(%661, newshape=[2, 6, 4]) /* ty=Tensor[(2, 6, 4), uint32] */;
  %664 = @func_3262() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %665 = %659.0;
  %666 = @func_2130(%662, %663) /* ty=Tensor[(2, 6, 4), bool] */;
  %667 = %664.1;
  (%665, %666, %var_4933, %667)
}

def @func_8294() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) {
  %673 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) {
    %668 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %669 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %670 = %668.0;
    %671 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
    %672 = %669.1;
    (%670, %671, %672)
  };
  %673() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */
}

def @func_18608(%var_18604: Tensor[(312), float32], %var_18605: Tensor[(13, 6, 4), float64], %var_18606: Tensor[(48), uint32], %var_18607: Tensor[(1, 980), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(312), float32], Tensor[(13, 6, 4), bool], Tensor[(4, 15, 14), float32], Tensor[(13, 6, 4), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(48), uint32], Tensor[(4, 15, 14), bool], Tensor[(120), float32], Tensor[(14, 14, 5), bool], Tensor[(1, 980), uint32]) {
  @func_18602(%var_18604, %var_18605, %var_18606, %var_18607) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(312), float32], Tensor[(13, 6, 4), bool], Tensor[(4, 15, 14), float32], Tensor[(13, 6, 4), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(48), uint32], Tensor[(4, 15, 14), bool], Tensor[(120), float32], Tensor[(14, 14, 5), bool], Tensor[(1, 980), uint32]) */
}

def @func_21186() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %677 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %674 = @func_5848() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %675 = %674.1;
    %676 = @func_8538() /* ty=Tensor[(4, 15, 14), float32] */;
    (%675, %676)
  };
  %677() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_4280() -> Tensor[(4, 15, 14), bool] {
  @func_4278() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_1222() -> Tensor[(4, 15, 14), float32] {
  %678 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %678.0
}

def @func_3672() -> (Tensor[(4, 15, 14), float32],) {
  @func_3670() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_11931() -> Tensor[(14, 5, 9), float64] {
  %680 = fn () -> Tensor[(14, 5, 9), float64] {
    %679 = @func_7920() /* ty=(Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) */;
    %679.0
  };
  %680() /* ty=Tensor[(14, 5, 9), float64] */
}

def @func_10116(%var_10100: Tensor[(8, 2, 8), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(8, 2, 8), float32]) {
  %681 = cast(%var_10100, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
  %682 = atanh(%681) /* ty=Tensor[(8, 2, 8), float32] */;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(8, 2, 8), float32] */;
  %684 = @func_4850() /* ty=Tensor[(4, 15, 14), float32] */;
  %685 = acosh(%683) /* ty=Tensor[(8, 2, 8), float32] */;
  (%684, %685)
}

def @func_17093() -> Tensor[(4, 15, 14), bool] {
  @func_17091() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_564() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %686 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %687 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %688 = %686.0;
  (%687, %688)
}

def @func_20080() -> (Tensor[(4, 15, 14), float32],) {
  %689 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %690 = %689.0;
  (%690,)
}

def @func_15725() -> (Tensor[(4, 15, 14), float32],) {
  @func_15723() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_85() -> (Tensor[(4, 15, 14), float32],) {
  @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_13098(%var_13095: Tensor[(6, 13, 16), float64], %var_13096: Tensor[(6, 13, 16), float64], %var_13097: Tensor[(6, 13, 16), float64]) -> (Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), bool]) {
  @func_13093(%var_13095, %var_13096, %var_13097) /* ty=(Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), bool]) */
}

def @func_6067() -> Tensor[(4, 15, 14), float32] {
  %691 = fn () -> Tensor[(4, 15, 14), float32] {
    @func_1222() /* ty=Tensor[(4, 15, 14), float32] */
  };
  %691() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_7102() -> (Tensor[(4, 15, 14), float32],) {
  @func_7100() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_20370() -> (Tensor[(4, 15, 14), float32],) {
  %692 = @func_10241() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %693 = %692.0;
  (%693,)
}

def @func_13782() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %694 = @func_5649() /* ty=(Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %695 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %696 = @func_11020() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %697 = @func_7430() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %698 = %694.1;
  %699 = %695.0;
  %700 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %701 = %696.2;
  %702 = @func_12342() /* ty=Tensor[(4, 15, 14), bool] */;
  %703 = %697.0;
  (%698, %699, %700, %701, %702, %703)
}

def @func_8362() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_9102() -> Tensor[(4, 15, 14), float32] {
  %704 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %704.3
}

def @func_19271(%var_19269: Tensor[(7, 7, 8), float32], %var_19270: Tensor[(121), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(5, 5, 9), float32], Tensor[(225), float32], Tensor[(1200, 2), float64], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(7, 7, 8), bool], Tensor[(4, 15, 14), float32]) {
  @func_19267(%var_19269, %var_19270) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(5, 5, 9), float32], Tensor[(225), float32], Tensor[(1200, 2), float64], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(7, 7, 8), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_2936() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %705 = @func_1611() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %706 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %707 = %706.4;
  %708 = cast(%707, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %709 = %705.0;
  %710 = atan(%708) /* ty=Tensor[(4, 15, 14), float32] */;
  (%709, %710)
}

def @func_2279() -> Tensor[(4, 15, 14), float32] {
  @func_2277() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_1426() -> Tensor[(4, 15, 14), float32] {
  @func_1424() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_8893() -> (Tensor[(4, 15, 14), float32],) {
  %713 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %711 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %712 = %711.0;
    (%712,)
  };
  %713() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_16164() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %714 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %715 = %714.1;
  %716 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
  %717 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
  %718 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  (%715, %716, %717, %718)
}

def @func_20403(%var_20401: Tensor[(13, 1, 14), bool], %var_20402: Tensor[(5, 45), float32]) -> (Tensor[(13, 8, 14), uint8], Tensor[(5, 5, 9), float32], Tensor[(5, 45), float32]) {
  %731 = fn (%var_20378: Tensor[(13, 1, 14), bool], %var_20393: Tensor[(5, 45), float32]) -> (Tensor[(13, 8, 14), uint8], Tensor[(5, 5, 9), float32], Tensor[(5, 45), float32]) {
    %719 = cast(%var_20378, dtype="bool") /* ty=Tensor[(13, 1, 14), bool] */;
    %720 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 8, 14), bool] */, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
    %721 = logical_and(%719, %720) /* ty=Tensor[(13, 8, 14), bool] */;
    %722 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 8, 14), bool] */, dtype="uint8") /* ty=Tensor[(13, 8, 14), uint8] */;
    %723 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
    %724 = cast(%721, dtype="uint8") /* ty=Tensor[(13, 8, 14), uint8] */;
    %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %726 = cast(%var_20393, dtype="float32") /* ty=Tensor[(5, 45), float32] */;
    %727 = reshape(%726, newshape=[5, 5, 9]) /* ty=Tensor[(5, 5, 9), float32] */;
    %728 = @func_16508(%727) /* ty=(Tensor[(5, 5, 9), float32],) */;
    %729 = minimum(%724, %725) /* ty=Tensor[(13, 8, 14), uint8] */;
    %730 = %728.0;
    (%729, %730, %var_20393)
  };
  %731(%var_20401, %var_20402) /* ty=(Tensor[(13, 8, 14), uint8], Tensor[(5, 5, 9), float32], Tensor[(5, 45), float32]) */
}

def @func_15622() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %738 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %732 = @func_9837() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %733 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %734 = @func_14522() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %735 = %732.0;
    %736 = %733.3;
    %737 = %734.0;
    (%735, %736, %737)
  };
  %738() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_1613() -> (Tensor[(4, 15, 14), float32],) {
  @func_1611() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_1517() -> (Tensor[(4, 15, 14), float32],) {
  @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_2247() -> Tensor[(4, 15, 14), float32] {
  %740 = fn () -> Tensor[(4, 15, 14), float32] {
    %739 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %739.0
  };
  %740() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_20680() -> Tensor[(4, 15, 14), float32] {
  %742 = fn () -> Tensor[(4, 15, 14), float32] {
    %741 = @func_7100() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %741.0
  };
  %742() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_16900() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %743 = @func_16488() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %744 = @func_2376() /* ty=Tensor[(4, 15, 14), float32] */;
  %745 = %743.1;
  (%744, %745)
}

def @func_19148() -> (Tensor[(121), float64], Tensor[(4, 15, 14), float32]) {
  @func_19146() /* ty=(Tensor[(121), float64], Tensor[(4, 15, 14), float32]) */
}

def @func_10956() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %746 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %747 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %748 = %746.4;
  %749 = %747.1;
  (%748, %749)
}

def @func_530() -> Tensor[(4, 15, 14), float32] {
  @func_528() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_2765() -> (Tensor[(4, 15, 14), float32],) {
  @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_6728() -> (Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) {
  %750 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %751 = @func_5649() /* ty=(Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %752 = %750.0;
  %753 = %751.0;
  %754 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  (%752, %753, %754)
}

def @func_11306() -> (Tensor[(4, 15, 14), float32],) {
  %755 = @func_4234() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %756 = %755.3;
  (%756,)
}

def @func_7922() -> (Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) {
  @func_7920() /* ty=(Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) */
}

def @func_9667() -> Tensor[(4, 15, 14), float32] {
  @func_9665() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_728() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %765 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
    %757 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %758 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %759 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %760 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %761 = %757.0;
    %762 = %758.1;
    %763 = %759.0;
    %764 = %760.0;
    (%761, %762, %763, %764)
  };
  %765() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_9104() -> Tensor[(4, 15, 14), float32] {
  @func_9102() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_586() -> (Tensor[(4, 15, 14), bool],) {
  %766 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %767 = %766.2;
  (%767,)
}

def @func_15409() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_15407() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_20533() -> Tensor[(4, 15, 14), bool] {
  @func_20531() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_11130() -> Tensor[(4, 15, 14), float32] {
  %769 = fn () -> Tensor[(4, 15, 14), float32] {
    %768 = @func_7430() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %768.0
  };
  %769() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_6267() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %777 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %770 = @func_3002() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %771 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %772 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %773 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
    %774 = %770.0;
    %775 = %771.0;
    %776 = %772.0;
    (%773, %774, %775, %776)
  };
  %777() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_17328() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(6, 15, 2), bool], Tensor[(180), int8]) {
  @func_17326() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(6, 15, 2), bool], Tensor[(180), int8]) */
}

def @func_14681() -> Tensor[(4, 15, 14), float32] {
  %779 = fn () -> Tensor[(4, 15, 14), float32] {
    %778 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %778.3
  };
  %779() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_22205() -> (Tensor[(4, 15, 14), float32],) {
  %780 = @func_21285() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %781 = %780.0;
  (%781,)
}

def @func_12297() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120), float32]) {
  %782 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %783 = @func_1908() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %784 = @func_7100() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %785 = cast(meta[relay.Constant][22] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %786 = reshape(%785, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), float32] */;
  %787 = @func_1045(%786) /* ty=(Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) */;
  %788 = %782.0;
  %789 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  %790 = %783.0;
  %791 = %784.0;
  %792 = %787.1;
  (%788, %789, %790, %791, %792, meta[relay.Constant][22] /* ty=Tensor[(120), float32] */)
}

def @func_8189() -> Tensor[(4, 15, 14), float32] {
  %793 = @func_5606() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %793.1
}

def @func_8191() -> Tensor[(4, 15, 14), float32] {
  @func_8189() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_10216(%var_10214: Tensor[(168), float32], %var_10215: Tensor[(7, 8, 3), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(168), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(7, 8, 3), float64]) {
  %812 = fn (%var_10185: Tensor[(168), float32], %var_10195: Tensor[(7, 8, 3), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(168), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(7, 8, 3), float64]) {
    %794 = @func_6266() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %795 = @func_8293() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
    %796 = @func_7100() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %797 = @func_5649() /* ty=(Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
    %798 = @func_9377() /* ty=(Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) */;
    %799 = cast(%var_10185, dtype="float32") /* ty=Tensor[(168), float32] */;
    %800 = reshape(%799, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float32] */;
    %801 = @func_3924(%800) /* ty=Tensor[(7, 8, 3), float64] */;
    %802 = cast(%var_10195, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
    %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
    %804 = cast(%801, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
    %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %806 = %794.1;
    %807 = %795.2;
    %808 = %796.0;
    %809 = %797.1;
    %810 = %798.1;
    %811 = power(%804, %805) /* ty=Tensor[(7, 8, 3), float64] */;
    (%806, %807, %var_10185, %808, %809, %810, %811)
  };
  %812(%var_10214, %var_10215) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(168), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(7, 8, 3), float64]) */
}

def @func_3730() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %818 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %813 = @func_2422() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %814 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %815 = %813.0;
    %816 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
    %817 = %814.3;
    (%815, %816, %817)
  };
  %818() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_13251() -> Tensor[(4, 15, 14), float32] {
  @func_13249() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_11499(%var_11498: Tensor[(121), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(14, 3, 7), bool], Tensor[(1, 11, 11), float64]) {
  %829 = fn (%var_11463: Tensor[(121), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(14, 3, 7), bool], Tensor[(1, 11, 11), float64]) {
    %819 = @func_9024() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %820 = cast(%var_11463, dtype="float64") /* ty=Tensor[(121), float64] */;
    %821 = reshape(%820, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float64] */;
    %822 = @func_6344() /* ty=(Tensor[(14, 3, 7), bool],) */;
    %823 = @func_10814(%821) /* ty=Tensor[(1, 11, 11), float64] */;
    %824 = cast(%823, dtype="float64") /* ty=Tensor[(1, 11, 11), float64] */;
    %825 = reshape(%824, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float64] */;
    %826 = %819.3;
    %827 = %822.0;
    %828 = @func_10814(%825) /* ty=Tensor[(1, 11, 11), float64] */;
    (%826, %823, %var_11463, %827, %828)
  };
  %829(%var_11498) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(14, 3, 7), bool], Tensor[(1, 11, 11), float64]) */
}

def @func_20767() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %834 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %830 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %831 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %832 = %830.2;
    %833 = %831.1;
    (%832, %833)
  };
  %834() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_3900() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_3898() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_517() -> (Tensor[(4, 15, 14), float32],) {
  @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_3327() -> Tensor[(4, 15, 14), float32] {
  %836 = fn () -> Tensor[(4, 15, 14), float32] {
    %835 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %835.0
  };
  %836() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_626() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %837 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %838 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %839 = %837.1;
  %840 = %838.0;
  (%839, %840)
}

def @func_8755() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %841 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %842 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %843 = %841.6;
  %844 = %842.0;
  (%843, %844)
}

def @func_2763() -> (Tensor[(4, 15, 14), float32],) {
  %845 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
  (%845,)
}

def @func_9181() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_9179() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_20811() -> Tensor[(4, 15, 14), float32] {
  @func_12426() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_929() -> Tensor[(4, 15, 14), float32] {
  %847 = fn () -> Tensor[(4, 15, 14), float32] {
    %846 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %846.1
  };
  %847() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_20274() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_20272() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_21096() -> (Tensor[(4, 15, 14), float32],) {
  %850 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %848 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %849 = %848.0;
    (%849,)
  };
  %850() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_11248(%var_11246: Tensor[(16, 1, 16), float64], %var_11247: Tensor[(16, 15, 16), float64]) -> (Tensor[(16, 15, 16), float64], Tensor[(16, 1, 16), float32]) {
  @func_11244(%var_11246, %var_11247) /* ty=(Tensor[(16, 15, 16), float64], Tensor[(16, 1, 16), float32]) */
}

def @func_10296() -> (Tensor[(4, 15, 14), float32],) {
  %851 = @func_8696() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %852 = %851.1;
  (%852,)
}

def @func_5085() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %853 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %854 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %855 = %853.0;
  %856 = %854.0;
  (%855, %856)
}

def @func_20307() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %860 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %857 = @func_11020() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %858 = @func_13802() /* ty=Tensor[(4, 15, 14), float32] */;
    %859 = %857.2;
    (%858, %859)
  };
  %860() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_20057(%var_20032: Tensor[(128, 2), float64], %var_20033: Tensor[(3840), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(5, 13, 6), float64], Tensor[(4, 15, 14), bool], Tensor[(16, 15, 16), float64], Tensor[(128, 2), float64], Tensor[(3840), float64], Tensor[(5, 13, 6), uint8]) {
  %861 = @func_11941() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %862 = cast(meta[relay.Constant][23] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %863 = cast(meta[relay.Constant][23] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %864 = cast(meta[relay.Constant][23] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %865 = reshape(%862, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), uint32] */;
  %866 = reshape(%863, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), uint32] */;
  %867 = reshape(%864, newshape=[5, 13, 6]) /* ty=Tensor[(5, 13, 6), uint32] */;
  %868 = @func_6524(%865, %866, %867) /* ty=(Tensor[(5, 13, 6), bool], Tensor[(5, 13, 6), float32], Tensor[(5, 13, 6), float32]) */;
  %869 = %868.1;
  %870 = cast(meta[relay.Constant][23] /* ty=Tensor[(390), uint32] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%869, dtype="float64") /* ty=Tensor[(5, 13, 6), float64] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %874 = cast(%var_20032, dtype="float64") /* ty=Tensor[(128, 2), float64] */;
  %875 = cast(%var_20033, dtype="float64") /* ty=Tensor[(3840), float64] */;
  %876 = reshape(%874, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), float64] */;
  %877 = reshape(%875, newshape=[16, 15, 16]) /* ty=Tensor[(16, 15, 16), float64] */;
  %878 = @func_11244(%876, %877) /* ty=(Tensor[(16, 15, 16), float64], Tensor[(16, 1, 16), float32]) */;
  %879 = cast(meta[relay.Constant][23] /* ty=Tensor[(390), uint32] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %880 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%869, dtype="uint8") /* ty=Tensor[(5, 13, 6), uint8] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %883 = %861.0;
  %884 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %885 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
  %886 = add(%872, %873) /* ty=Tensor[(5, 13, 6), float64] */;
  %887 = @func_9652() /* ty=Tensor[(4, 15, 14), bool] */;
  %888 = %878.0;
  %889 = subtract(%881, %882) /* ty=Tensor[(5, 13, 6), uint8] */;
  (%883, %884, %885, %886, %887, %888, %var_20032, %var_20033, %889)
}

def @func_15753() -> Tensor[(4, 15, 14), bool] {
  %890 = fn () -> Tensor[(4, 15, 14), bool] {
    @func_1014() /* ty=Tensor[(4, 15, 14), bool] */
  };
  %890() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_2740() -> Tensor[(4, 15, 14), float64] {
  @func_2738() /* ty=Tensor[(4, 15, 14), float64] */
}

def @func_17939() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %891 = @func_13825() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %892 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %893 = @func_1092() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(840, 2), float32]) */;
  %894 = %891.0;
  %895 = %892.1;
  %896 = %893.0;
  (%894, %895, %896)
}

def @func_18602(%var_18518: Tensor[(312), float32], %var_18537: Tensor[(13, 6, 4), float64], %var_18567: Tensor[(48), uint32], %var_18590: Tensor[(1, 980), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(312), float32], Tensor[(13, 6, 4), bool], Tensor[(4, 15, 14), float32], Tensor[(13, 6, 4), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(48), uint32], Tensor[(4, 15, 14), bool], Tensor[(120), float32], Tensor[(14, 14, 5), bool], Tensor[(1, 980), uint32]) {
  %897 = @func_5290() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %898 = cast(%var_18518, dtype="float32") /* ty=Tensor[(312), float32] */;
  %899 = reshape(%898, newshape=[13, 6, 4]) /* ty=Tensor[(13, 6, 4), float32] */;
  %900 = @func_17432(%899) /* ty=(Tensor[(13, 6, 4), float32],) */;
  %901 = %900.0;
  %902 = cast(%901, dtype="float64") /* ty=Tensor[(13, 6, 4), float64] */;
  %903 = atan(%902) /* ty=Tensor[(13, 6, 4), float64] */;
  %904 = cast(%var_18537, dtype="bool") /* ty=Tensor[(13, 6, 4), bool] */;
  %905 = shape_of(%903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%903, dtype="bool") /* ty=Tensor[(13, 6, 4), bool] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %908 = cast(%903, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %909 = @func_5350() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %910 = cast(%var_18567, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %911 = reshape(%910, newshape=[24, 2]) /* ty=Tensor[(24, 2), uint32] */;
  %912 = @func_8923(%911) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(24, 2), uint32]) */;
  %913 = cast(meta[relay.Constant][24] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %914 = reshape(%913, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), float32] */;
  %915 = @func_1045(%914) /* ty=(Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) */;
  %916 = cast(%var_18590, dtype="uint32") /* ty=Tensor[(1, 980), uint32] */;
  %917 = reshape(%916, newshape=[14, 14, 5]) /* ty=Tensor[(14, 14, 5), uint32] */;
  %918 = %897.5;
  %919 = not_equal(%906, %907) /* ty=Tensor[(13, 6, 4), bool] */;
  %920 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
  %921 = log2(%908) /* ty=Tensor[(13, 6, 4), float32] */;
  %922 = %909.1;
  %923 = %912.1;
  %924 = %915.1;
  %925 = @func_17386(%917) /* ty=Tensor[(14, 14, 5), bool] */;
  (%918, %var_18518, %919, %920, %921, %922, %923, %var_18567, %924, meta[relay.Constant][24] /* ty=Tensor[(120), float32] */, %925, %var_18590)
}

def @func_6056() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_6054() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_10242() -> (Tensor[(4, 15, 14), float32],) {
  %927 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %926 = @func_2851() /* ty=Tensor[(4, 15, 14), float32] */;
    (%926,)
  };
  %927() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_239() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %928 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %929 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %930 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %931 = %930.0;
  %932 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %933 = %932.0;
  %934 = cast(%933, dtype="bool") /* ty=Tensor[(4, 15, 14), bool] */;
  %935 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %936 = cast(%931, dtype="bool") /* ty=Tensor[(4, 15, 14), bool] */;
  %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %938 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %939 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %940 = %928.0;
  %941 = %929.0;
  %942 = less_equal(%936, %937) /* ty=Tensor[(4, 15, 14), bool] */;
  %943 = %938.0;
  %944 = %939.2;
  (%940, %941, %942, %943, %944)
}

def @func_555() -> Tensor[(4, 15, 14), float32] {
  @func_553() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_9025() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %953 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
    %945 = @func_8892() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %946 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %947 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %948 = %945.0;
    %949 = %946.1;
    %950 = @func_6487() /* ty=Tensor[(4, 15, 14), bool] */;
    %951 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
    %952 = %947.0;
    (%948, %949, %950, %951, %952)
  };
  %953() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_14598() -> Tensor[(4, 15, 14), float32] {
  @func_14596() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_15723() -> (Tensor[(4, 15, 14), float32],) {
  %954 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  (%954,)
}

def @func_3639() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %961 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %955 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %956 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %957 = %955.1;
    %958 = @func_2246() /* ty=Tensor[(4, 15, 14), float32] */;
    %959 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
    %960 = %956.0;
    (%957, %958, %959, %960)
  };
  %961() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_2423() -> (Tensor[(4, 15, 14), float32],) {
  %964 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %962 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %963 = %962.0;
    (%963,)
  };
  %964() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_13901() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %969 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
    %965 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %966 = @func_7702() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
    %967 = %965.1;
    %968 = %966.1;
    (%967, %968)
  };
  %969() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_17774(%var_17773: Tensor[(192), int8]) -> (Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], Tensor[(192), int8], Tensor[(4, 15, 14), bool]) {
  %980 = fn (%var_17747: Tensor[(192), int8]) -> (Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], Tensor[(192), int8], Tensor[(4, 15, 14), bool]) {
    %970 = @func_8755() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %971 = cast(%var_17747, dtype="int8") /* ty=Tensor[(192), int8] */;
    %972 = cast(%var_17747, dtype="int8") /* ty=Tensor[(192), int8] */;
    %973 = reshape(%971, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int8] */;
    %974 = reshape(%972, newshape=[4, 12, 4]) /* ty=Tensor[(4, 12, 4), int8] */;
    %975 = @func_14086(%973, %974) /* ty=(Tensor[(4, 12, 4), int8], Tensor[(14, 3, 7), bool]) */;
    %976 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
    %977 = %970.0;
    %978 = %975.1;
    %979 = %976.0;
    (%977, %978, %var_17747, %979)
  };
  %980(%var_17773) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], Tensor[(192), int8], Tensor[(4, 15, 14), bool]) */
}

def @func_17734() -> Tensor[(4, 15, 14), float32] {
  %981 = fn () -> Tensor[(4, 15, 14), float32] {
    @func_14680() /* ty=Tensor[(4, 15, 14), float32] */
  };
  %981() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_20922() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32]) {
  %990 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32]) {
    %982 = @func_1478() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %983 = @func_5606() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %984 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %985 = @func_11129() /* ty=Tensor[(4, 15, 14), float32] */;
    %986 = %982.0;
    %987 = %983.1;
    %988 = @func_10708() /* ty=Tensor[(208), uint32] */;
    %989 = %984.0;
    (%985, %986, %987, %988, %989)
  };
  %990() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32]) */
}

def @func_4278() -> Tensor[(4, 15, 14), bool] {
  %991 = @func_1478() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %991.0
}

def @func_3228() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %997 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %992 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
    %993 = @func_1656() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %994 = %992.1;
    %995 = %993.0;
    %996 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
    (%994, %995, %996)
  };
  %997() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_7607() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %998 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %999 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %1000 = @func_6066() /* ty=Tensor[(4, 15, 14), float32] */;
  %1001 = %998.2;
  (%999, %1000, %1001)
}

def @func_1918() -> Tensor[(4, 15, 14), float32] {
  %1002 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1002.0
}

def @func_8842() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1003 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1004 = %1003.0;
  %1005 = @func_6565() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1004, %1005)
}

def @func_11431() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) {
  %1017 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) {
    %1006 = @func_10956() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1007 = @func_2422() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1008 = @func_5379() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1009 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1010 = @func_4108() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) */;
    %1011 = @func_3432() /* ty=Tensor[(4, 15, 14), bool] */;
    %1012 = %1006.1;
    %1013 = %1007.0;
    %1014 = %1008.1;
    %1015 = %1009.1;
    %1016 = %1010.1;
    (%1011, %1012, %1013, %1014, %1015, %1016)
  };
  %1017() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) */
}

def @func_3539(%var_3538: Tensor[(4, 15, 14), float32]) -> (Tensor[(4, 15, 14), int64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1029 = fn (%var_3474: Tensor[(4, 15, 14), float32]) -> (Tensor[(4, 15, 14), int64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1018 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1019 = %1018.0;
    %1020 = cast(%var_3474, dtype="int64") /* ty=Tensor[(4, 15, 14), int64] */;
    %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1022 = cast(%1019, dtype="int64") /* ty=Tensor[(4, 15, 14), int64] */;
    %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1024 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1025 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1026 = bitwise_and(%1022, %1023) /* ty=Tensor[(4, 15, 14), int64] */;
    %1027 = %1024.1;
    %1028 = %1025.0;
    (%1026, %1027, %1028)
  };
  %1029(%var_3538) /* ty=(Tensor[(4, 15, 14), int64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_17687() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1034 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1030 = @func_10141() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %1031 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1032 = %1030.1;
    %1033 = %1031.1;
    (%1032, %1033)
  };
  %1034() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_18324() -> Tensor[(4, 15, 14), bool] {
  %1035 = fn () -> Tensor[(4, 15, 14), bool] {
    @func_17091() /* ty=Tensor[(4, 15, 14), bool] */
  };
  %1035() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_6730() -> (Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) {
  @func_6728() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */
}

def @func_2339() -> Tensor[(4, 15, 14), float32] {
  %1037 = fn () -> Tensor[(4, 15, 14), float32] {
    %1036 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1036.0
  };
  %1037() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_17326() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(6, 15, 2), bool], Tensor[(180), int8]) {
  %1038 = @func_8161() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1039 = @func_11020() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1040 = @func_12884() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1041 = @func_8696() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1042 = cast(meta[relay.Constant][25] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1043 = reshape(%1042, newshape=[6, 15, 2]) /* ty=Tensor[(6, 15, 2), int8] */;
  %1044 = %1038.1;
  %1045 = %1039.4;
  %1046 = %1040.0;
  %1047 = %1041.1;
  %1048 = @func_11165(%1043) /* ty=Tensor[(6, 15, 2), bool] */;
  (%1044, %1045, %1046, %1047, %1048, meta[relay.Constant][25] /* ty=Tensor[(180), int8] */)
}

def @func_13557() -> (Tensor[(4, 15, 14), float32],) {
  %1051 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1049 = @func_8842() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1050 = %1049.1;
    (%1050,)
  };
  %1051() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_6899(%var_6897: Tensor[(120, 1), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32]) {
  %1052 = @func_2030() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1053 = cast(%var_6897, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
  %1054 = reshape(%1053, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), float32] */;
  %1055 = @func_1045(%1054) /* ty=(Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) */;
  %1056 = %1052.1;
  %1057 = %1055.1;
  (%1056, %1057, %var_6897)
}

def @func_8222(%var_8199: Tensor[(4, 8, 2), float32], %var_8204: Tensor[(1680), uint16]) -> (Tensor[(4, 8, 2), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), bool]) {
  %1058 = cast(%var_8199, dtype="float32") /* ty=Tensor[(4, 8, 2), float32] */;
  %1059 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(4, 8, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1060 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(4, 8, 2), float32] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1062 = cast(%var_8204, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
  %1063 = reshape(%1062, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
  %1064 = @func_1332(%1063) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1065 = mod(%1060, %1061) /* ty=Tensor[(4, 8, 2), float32] */;
  %1066 = %1064.10;
  %1067 = @func_4278() /* ty=Tensor[(4, 15, 14), bool] */;
  (%1065, %1066, %var_8204, %1067)
}

def @func_6776() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %1074 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
    %1068 = @func_3227() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1069 = @func_6360() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1070 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %1071 = %1068.2;
    %1072 = %1069.0;
    %1073 = %1070.2;
    (%1071, %1072, %1073)
  };
  %1074() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_3393() -> Tensor[(4, 15, 14), float32] {
  %1075 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1075.0
}

def @func_21287() -> (Tensor[(4, 15, 14), float32],) {
  @func_21285() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_5124() -> (Tensor[(4, 15, 14), float32],) {
  %1078 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1076 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1077 = %1076.0;
    (%1077,)
  };
  %1078() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_14596() -> Tensor[(4, 15, 14), float32] {
  %1079 = @func_2463() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1079.0
}

def @func_12373(%var_12371: Tensor[(14, 11, 14), bool]) -> Tensor[(14, 11, 14), bool] {
  @func_12370(%var_12371) /* ty=Tensor[(14, 11, 14), bool] */
}

def @func_13939() -> (Tensor[(4, 15, 14), bool],) {
  @func_13937() /* ty=(Tensor[(4, 15, 14), bool],) */
}

def @func_9073() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %1084 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
    %1080 = @func_8293() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), bool]) */;
    %1081 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1082 = %1080.2;
    %1083 = %1081.0;
    (%1082, %1083)
  };
  %1084() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_21527() -> (Tensor[(4, 15, 14), bool],) {
  %1085 = @func_19749() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1086 = %1085.1;
  (%1086,)
}

def @func_14524() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_14522() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_17247() -> Tensor[(4, 15, 14), bool] {
  @func_17245() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_5850() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_5848() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_1092() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(840, 2), float32]) {
  %1087 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1088 = cast(meta[relay.Constant][27] /* ty=Tensor[(840, 2), uint16] */, dtype="uint16") /* ty=Tensor[(840, 2), uint16] */;
  %1089 = reshape(%1088, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
  %1090 = @func_831(%1089) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
  %1091 = %1090.1;
  %1092 = cast(%1091, dtype="float32") /* ty=Tensor[(8, 14, 15), float32] */;
  %1093 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(840, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1094 = cast(meta[relay.Constant][27] /* ty=Tensor[(840, 2), uint16] */, dtype="float32") /* ty=Tensor[(840, 2), float32] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1096 = %1087.0;
  %1097 = @func_528() /* ty=Tensor[(4, 15, 14), float32] */;
  %1098 = mod(%1094, %1095) /* ty=Tensor[(840, 2), float32] */;
  (%1096, %1097, %1098)
}

def @func_14949() -> (Tensor[(4, 15, 14), float32],) {
  %1099 = @func_1222() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1099,)
}

def @func_12370(%var_12357: Tensor[(14, 11, 14), bool]) -> Tensor[(14, 11, 14), bool] {
  %1100 = cast(%var_12357, dtype="bool") /* ty=Tensor[(14, 11, 14), bool] */;
  %1101 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(14, 11, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1102 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 11, 14), bool] */, dtype="bool") /* ty=Tensor[(14, 11, 14), bool] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1102, %1103) /* ty=Tensor[(14, 11, 14), bool] */
}

def @func_2526() -> (Tensor[(4, 15, 14), float32],) {
  %1105 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1104 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1104,)
  };
  %1105() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_4039() -> Tensor[(4, 15, 14), float32] {
  %1106 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1106.0
}

def @func_18260() -> Tensor[(4, 15, 14), float32] {
  %1108 = fn () -> Tensor[(4, 15, 14), float32] {
    %1107 = @func_10296() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1107.0
  };
  %1108() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_7704() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  @func_7702() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */
}

def @func_6361() -> (Tensor[(4, 15, 14), float32],) {
  %1111 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1109 = @func_2936() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1110 = %1109.1;
    (%1110,)
  };
  %1111() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_9594() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1121 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1112 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1113 = @func_3793() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1114 = @func_3227() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1115 = %1112.1;
    %1116 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
    %1117 = %1113.0;
    %1118 = %1114.0;
    %1119 = @func_6163() /* ty=Tensor[(4, 15, 14), float32] */;
    %1120 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1115, %1116, %1117, %1118, %1119, %1120)
  };
  %1121() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_16918() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_16916() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_2853() -> Tensor[(4, 15, 14), float32] {
  @func_2851() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_18478() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) {
  @func_18476() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */
}

def @func_13784() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  @func_13782() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_20101() -> (Tensor[(4, 15, 14), float32],) {
  %1122 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1122,)
}

def @func_20517() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %1130 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
    %1123 = @func_12297() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120), float32]) */;
    %1124 = @func_1478() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %1125 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
    %1126 = %1123.1;
    %1127 = %1124.1;
    %1128 = @func_16495() /* ty=Tensor[(4, 15, 14), float32] */;
    %1129 = %1125.0;
    (%1126, %1127, %1128, %1129)
  };
  %1130() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_9179() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1131 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1132 = @func_6627() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1133 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1134 = %1131.0;
  %1135 = %1132.2;
  %1136 = %1133.0;
  (%1134, %1135, %1136)
}

def @func_2277() -> Tensor[(4, 15, 14), float32] {
  @func_928() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_6629() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_6627() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_19267(%var_19154: Tensor[(7, 7, 8), float32], %var_19226: Tensor[(121), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(5, 5, 9), float32], Tensor[(225), float32], Tensor[(1200, 2), float64], Tensor[(1, 11, 11), float64], Tensor[(121), float64], Tensor[(7, 7, 8), bool], Tensor[(4, 15, 14), float32]) {
  %1137 = @func_11430() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) */;
  %1138 = @func_586() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %1139 = @func_17686() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1140 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1141 = @func_17043() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1142 = cast(meta[relay.Constant][29] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %1143 = reshape(%1142, newshape=[5, 5, 9]) /* ty=Tensor[(5, 5, 9), float32] */;
  %1144 = @func_16508(%1143) /* ty=(Tensor[(5, 5, 9), float32],) */;
  %1145 = @func_17155() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(144), float32], Tensor[(4, 15, 14), float32], Tensor[(1200, 2), float64]) */;
  %1146 = cast(%var_19226, dtype="float64") /* ty=Tensor[(121), float64] */;
  %1147 = reshape(%1146, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), float64] */;
  %1148 = cast(%var_19154, dtype="float32") /* ty=Tensor[(7, 7, 8), float32] */;
  %1149 = acosh(%1148) /* ty=Tensor[(7, 7, 8), float32] */;
  %1150 = cast(%var_19154, dtype="uint16") /* ty=Tensor[(7, 7, 8), uint16] */;
  %1151 = shape_of(%1149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1152 = cast(%1149, dtype="uint16") /* ty=Tensor[(7, 7, 8), uint16] */;
  %1153 = dyn.reshape(%1150, %1151, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1154 = maximum(%1152, %1153) /* ty=Tensor[(7, 7, 8), uint16] */;
  %1155 = cast(%var_19154, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
  %1156 = shape_of(%1154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1157 = cast(%1154, dtype="bool") /* ty=Tensor[(7, 7, 8), bool] */;
  %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1159 = @func_6728() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %1160 = %1137.2;
  %1161 = %1138.0;
  %1162 = %1139.0;
  %1163 = %1140.1;
  %1164 = %1141.0;
  %1165 = %1144.0;
  %1166 = %1145.4;
  %1167 = @func_10814(%1147) /* ty=Tensor[(1, 11, 11), float64] */;
  %1168 = equal(%1157, %1158) /* ty=Tensor[(7, 7, 8), bool] */;
  %1169 = %1159.2;
  (%1160, %1161, %1162, %1163, %1164, %1165, meta[relay.Constant][29] /* ty=Tensor[(225), float32] */, %1166, %1167, %var_19226, %1168, %1169)
}

def @func_1045(%var_1029: Tensor[(12, 2, 5), float32]) -> (Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) {
  %1170 = cast(%var_1029, dtype="float32") /* ty=Tensor[(12, 2, 5), float32] */;
  %1171 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1172 = sigmoid(%1170) /* ty=Tensor[(12, 2, 5), float32] */;
  %1173 = %1171.2;
  (%1172, %1173)
}

def @func_19707() -> Tensor[(4, 15, 14), float32] {
  %1174 = @func_7387() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1174.0
}

def @func_2032() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  @func_2030() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_14407(%var_14405: Tensor[(5, 16, 4), float32], %var_14406: Tensor[(64), float32]) -> (Tensor[(5, 16, 4), float32], Tensor[(3, 14, ?), int32], Tensor[(84), int64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(64), float32], Tensor[(1680), uint16]) {
  %1193 = fn (%var_14370: Tensor[(5, 16, 4), float32], %var_14400: Tensor[(64), float32]) -> (Tensor[(5, 16, 4), float32], Tensor[(3, 14, ?), int32], Tensor[(84), int64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(64), float32], Tensor[(1680), uint16]) {
    %1175 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 16, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 4), float32] */;
    %1176 = shape_of(%var_14370, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1177 = cast(%var_14370, dtype="float32") /* ty=Tensor[(5, 16, 4), float32] */;
    %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1179 = cast(meta[relay.Constant][31] /* ty=Tensor[(84), int64] */, dtype="int64") /* ty=Tensor[(84), int64] */;
    %1180 = reshape(%1179, newshape=[84]) /* ty=Tensor[(84), int64] */;
    %1181 = @func_9760(%1180) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(3, 14, ?), int32], Tensor[(42), int64], Tensor[(84), int64]) */;
    %1182 = @func_7483() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1183 = cast(%var_14400, dtype="float32") /* ty=Tensor[(64), float32] */;
    %1184 = cast(meta[relay.Constant][32] /* ty=Tensor[(1680), uint16] */, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
    %1185 = reshape(%1183, newshape=[4, 8, 2]) /* ty=Tensor[(4, 8, 2), float32] */;
    %1186 = reshape(%1184, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
    %1187 = @func_8222(%1185, %1186) /* ty=(Tensor[(4, 8, 2), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), bool]) */;
    %1188 = floor_divide(%1177, %1178) /* ty=Tensor[(5, 16, 4), float32] */;
    %1189 = %1181.1;
    %1190 = @func_9652() /* ty=Tensor[(4, 15, 14), bool] */;
    %1191 = %1182.0;
    %1192 = %1187.2;
    (%1188, %1189, meta[relay.Constant][31] /* ty=Tensor[(84), int64] */, %1190, %1191, %1192, %var_14400, meta[relay.Constant][32] /* ty=Tensor[(1680), uint16] */)
  };
  %1193(%var_14405, %var_14406) /* ty=(Tensor[(5, 16, 4), float32], Tensor[(3, 14, ?), int32], Tensor[(84), int64], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(64), float32], Tensor[(1680), uint16]) */
}

def @func_14188() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_14186() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_2376() -> Tensor[(4, 15, 14), float32] {
  @func_2277() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_18639() -> Tensor[(4, 15, 14), bool] {
  %1195 = fn () -> Tensor[(4, 15, 14), bool] {
    %1194 = @func_11430() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) */;
    %1194.0
  };
  %1195() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_16166() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  @func_16164() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_11308() -> (Tensor[(4, 15, 14), float32],) {
  @func_11306() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_19841() -> (Tensor[(4, 15, 14), float32],) {
  %1197 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1196 = @func_14680() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1196,)
  };
  %1197() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_1424() -> Tensor[(4, 15, 14), float32] {
  %1198 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1198.0
}

def @func_9444() -> (Tensor[(4, 15, 14), float32],) {
  %1199 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1200 = %1199.0;
  (%1200,)
}

def @func_178() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_2133(%var_2131: Tensor[(2, 6, 4), uint32], %var_2132: Tensor[(2, 6, 4), uint32]) -> Tensor[(2, 6, 4), bool] {
  %1205 = fn (%var_2122: Tensor[(2, 6, 4), uint32], %var_2123: Tensor[(2, 6, 4), uint32]) -> Tensor[(2, 6, 4), bool] {
    %1201 = cast(%var_2123, dtype="bool") /* ty=Tensor[(2, 6, 4), bool] */;
    %1202 = shape_of(%var_2122, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1203 = cast(%var_2122, dtype="bool") /* ty=Tensor[(2, 6, 4), bool] */;
    %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%1203, %1204) /* ty=Tensor[(2, 6, 4), bool] */
  };
  %1205(%var_2131, %var_2132) /* ty=Tensor[(2, 6, 4), bool] */
}

def @func_7965(%var_7949: Tensor[(7, 10, 8), uint16], %var_7950: Tensor[(7, 10, 8), uint16]) -> (Tensor[(7, 10, 8), uint16],) {
  %1206 = cast(%var_7950, dtype="uint16") /* ty=Tensor[(7, 10, 8), uint16] */;
  %1207 = shape_of(%var_7949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1208 = cast(%var_7949, dtype="uint16") /* ty=Tensor[(7, 10, 8), uint16] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1210 = logical_xor(%1208, %1209) /* ty=Tensor[(7, 10, 8), uint16] */;
  (%1210,)
}

def @func_16488() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1211 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1212 = @func_8360() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1213 = %1211.1;
  %1214 = %1212.1;
  %1215 = @func_2851() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1213, %1214, %1215)
}

def @func_22030(%var_22028: Tensor[(3, 2, 8), uint32], %var_22029: Tensor[(294), uint32]) -> (Tensor[(3, 2, 8), uint32], Tensor[(294), uint32], Tensor[(294), uint32]) {
  @func_22026(%var_22028, %var_22029) /* ty=(Tensor[(3, 2, 8), uint32], Tensor[(294), uint32], Tensor[(294), uint32]) */
}

def @func_20372() -> (Tensor[(4, 15, 14), float32],) {
  @func_20370() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_241() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_13535() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1220 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1216 = @func_8892() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1217 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1218 = %1216.0;
    %1219 = %1217.3;
    (%1218, %1219)
  };
  %1220() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_11167(%var_11166: Tensor[(6, 15, 2), int8]) -> Tensor[(6, 15, 2), bool] {
  %1228 = fn (%var_11142: Tensor[(6, 15, 2), int8]) -> Tensor[(6, 15, 2), bool] {
    %1221 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="bool") /* ty=bool */;
    %1222 = cast(%var_11142, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
    %1223 = not_equal(%1221, %1222) /* ty=Tensor[(6, 15, 2), bool] */;
    %1224 = cast(%1223, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
    %1225 = shape_of(%var_11142, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1226 = cast(%var_11142, dtype="bool") /* ty=Tensor[(6, 15, 2), bool] */;
    %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1226, %1227) /* ty=Tensor[(6, 15, 2), bool] */
  };
  %1228(%var_11166) /* ty=Tensor[(6, 15, 2), bool] */
}

def @func_17975() -> Tensor[(4, 15, 14), float32] {
  @func_17973() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_176() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1229 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1230 = %1229.0;
  %1231 = cast(%1230, dtype="float64") /* ty=Tensor[(4, 15, 14), float64] */;
  %1232 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1233 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1234 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1235 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1236 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1237 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1238 = acosh(%1231) /* ty=Tensor[(4, 15, 14), float64] */;
  %1239 = %1232.0;
  %1240 = %1233.0;
  %1241 = %1234.0;
  %1242 = %1235.0;
  %1243 = %1236.0;
  %1244 = %1237.0;
  (%1238, %1239, %1240, %1241, %1242, %1243, %1244)
}

def @func_22242() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1245 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1246 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  %1247 = %1245.0;
  (%1246, %1247)
}

def @func_8425() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1256 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1248 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1249 = @func_4464() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1250 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1251 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
    %1252 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
    %1253 = %1248.0;
    %1254 = %1249.1;
    %1255 = %1250.1;
    (%1251, %1252, %1253, %1254, %1255)
  };
  %1256() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_11972() -> (Tensor[(3, 12, 6), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1257 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 12, 6), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 6), float32] */;
  %1258 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1259 = exp(%1257) /* ty=Tensor[(3, 12, 6), float32] */;
  %1260 = %1258.1;
  %1261 = @func_8538() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1259, %1260, %1261)
}

def @func_15298() -> (Tensor[(4, 15, 14), float32],) {
  %1264 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1262 = @func_5848() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1263 = %1262.0;
    (%1263,)
  };
  %1264() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_11262() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1265 = @func_5848() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1266 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1267 = %1265.1;
  %1268 = %1266.1;
  %1269 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1267, %1268, %1269)
}

def @func_20163() -> Tensor[(4, 15, 14), float32] {
  %1270 = @func_14522() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1270.3
}

def @func_21948() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1275 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1271 = @func_10956() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1272 = @func_20337() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1273 = %1271.1;
    %1274 = %1272.0;
    (%1273, %1274)
  };
  %1275() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_20337() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1276 = @func_5885() /* ty=Tensor[(4, 15, 14), float32] */;
  %1277 = @func_5771() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1276, %1277)
}

def @func_19924() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1283 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1278 = @func_5379() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1279 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1280 = @func_17848() /* ty=Tensor[(4, 15, 14), float32] */;
    %1281 = %1278.0;
    %1282 = %1279.1;
    (%1280, %1281, %1282)
  };
  %1283() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_3029() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1287 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1284 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1285 = @func_2338() /* ty=Tensor[(4, 15, 14), float32] */;
    %1286 = %1284.0;
    (%1285, %1286)
  };
  %1287() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_10080() -> Tensor[(4, 15, 14), bool] {
  %1289 = fn () -> Tensor[(4, 15, 14), bool] {
    %1288 = @func_9205() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %1288.0
  };
  %1289() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_20574() -> (Tensor[(4, 15, 14), float32],) {
  %1292 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1290 = @func_20227() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1291 = %1290.0;
    (%1291,)
  };
  %1292() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_20443(%var_20442: Tensor[(1078), int16]) -> (Tensor[(4, 15, 14), float32], Tensor[(11, 7, 14), bool], Tensor[(1078), int16]) {
  %1298 = fn (%var_20437: Tensor[(1078), int16]) -> (Tensor[(4, 15, 14), float32], Tensor[(11, 7, 14), bool], Tensor[(1078), int16]) {
    %1293 = cast(%var_20437, dtype="int16") /* ty=Tensor[(1078), int16] */;
    %1294 = reshape(%1293, newshape=[11, 7, 14]) /* ty=Tensor[(11, 7, 14), int16] */;
    %1295 = @func_16060(%1294) /* ty=(Tensor[(11, 7, 14), bool],) */;
    %1296 = @func_17733() /* ty=Tensor[(4, 15, 14), float32] */;
    %1297 = %1295.0;
    (%1296, %1297, %var_20437)
  };
  %1298(%var_20442) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(11, 7, 14), bool], Tensor[(1078), int16]) */
}

def @func_10493(%var_10492: Tensor[(12, 12, 1), float32]) -> (Tensor[(12, 12, 1), float32], Tensor[(4, 15, 14), float32]) {
  %1302 = fn (%var_10472: Tensor[(12, 12, 1), float32]) -> (Tensor[(12, 12, 1), float32], Tensor[(4, 15, 14), float32]) {
    %1299 = cast(%var_10472, dtype="float32") /* ty=Tensor[(12, 12, 1), float32] */;
    %1300 = sqrt(%1299) /* ty=Tensor[(12, 12, 1), float32] */;
    %1301 = @func_1918() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1300, %1301)
  };
  %1302(%var_10492) /* ty=(Tensor[(12, 12, 1), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_20339() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_20337() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_7920() -> (Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) {
  %1303 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 9), float32] */;
  %1304 = sinh(%1303) /* ty=Tensor[(14, 5, 9), float32] */;
  %1305 = cast(%1304, dtype="float32") /* ty=Tensor[(14, 5, 9), float32] */;
  %1306 = log10(%1305) /* ty=Tensor[(14, 5, 9), float32] */;
  %1307 = cast(%1306, dtype="float64") /* ty=Tensor[(14, 5, 9), float64] */;
  %1308 = @func_3262() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1309 = rsqrt(%1307) /* ty=Tensor[(14, 5, 9), float64] */;
  %1310 = %1308.1;
  (%1309, %1310)
}

def @func_18476() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) {
  %1311 = @func_10679() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1312 = @func_7702() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %1313 = @func_2763() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1314 = @func_5649() /* ty=(Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) */;
  %1315 = %1311.3;
  %1316 = %1312.3;
  %1317 = %1313.0;
  %1318 = %1314.0;
  (%1315, %1316, %1317, %1318)
}

def @func_4583() -> Tensor[(4, 15, 14), float32] {
  %1319 = fn () -> Tensor[(4, 15, 14), float32] {
    @func_2246() /* ty=Tensor[(4, 15, 14), float32] */
  };
  %1319() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_17941() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_17939() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_5607() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1326 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1320 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1321 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1322 = @func_4234() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
    %1323 = %1320.6;
    %1324 = %1321.0;
    %1325 = %1322.0;
    (%1323, %1324, %1325)
  };
  %1326() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_11264() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_11262() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_6567() -> Tensor[(4, 15, 14), float32] {
  @func_6565() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_10298() -> (Tensor[(4, 15, 14), float32],) {
  @func_10296() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_3794() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1334 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1327 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %1328 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1329 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1330 = %1327.1;
    %1331 = %1328.0;
    %1332 = %1329.0;
    %1333 = @func_1222() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1330, %1331, %1332, %1333)
  };
  %1334() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_13001() -> (Tensor[(4, 15, 14), float32],) {
  %1337 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1335 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1336 = %1335.0;
    (%1336,)
  };
  %1337() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_458(%var_456: Tensor[(13, 4, 4), uint32], %var_457: Tensor[(13, 4, 4), uint32]) -> (Tensor[(13, 4, 4), uint32], Tensor[(13, 4, 4), float32]) {
  @func_454(%var_456, %var_457) /* ty=(Tensor[(13, 4, 4), uint32], Tensor[(13, 4, 4), float32]) */
}

def @func_11244(%var_11196: Tensor[(16, 1, 16), float64], %var_11197: Tensor[(16, 15, 16), float64]) -> (Tensor[(16, 15, 16), float64], Tensor[(16, 1, 16), float32]) {
  %1338 = cast(%var_11196, dtype="float64") /* ty=Tensor[(16, 1, 16), float64] */;
  %1339 = cast(%var_11197, dtype="float64") /* ty=Tensor[(16, 15, 16), float64] */;
  %1340 = cast(%var_11196, dtype="float32") /* ty=Tensor[(16, 1, 16), float32] */;
  %1341 = floor_mod(%1338, %1339) /* ty=Tensor[(16, 15, 16), float64] */;
  %1342 = acosh(%1340) /* ty=Tensor[(16, 1, 16), float32] */;
  (%1341, %1342)
}

def @func_21627() -> Tensor[(4, 15, 14), float32] {
  %1343 = @func_8696() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1343.2
}

def @func_3670() -> (Tensor[(4, 15, 14), float32],) {
  %1344 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1345 = %1344.4;
  (%1345,)
}

def @func_13131(%var_13130: Tensor[(4, 4, 7), float64]) -> (Tensor[(4, 4, 7), float64], Tensor[(4, 15, 14), float32]) {
  %1349 = fn (%var_13119: Tensor[(4, 4, 7), float64]) -> (Tensor[(4, 4, 7), float64], Tensor[(4, 15, 14), float32]) {
    %1346 = cast(%var_13119, dtype="float64") /* ty=Tensor[(4, 4, 7), float64] */;
    %1347 = log(%1346) /* ty=Tensor[(4, 4, 7), float64] */;
    %1348 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1347, %1348)
  };
  %1349(%var_13130) /* ty=(Tensor[(4, 4, 7), float64], Tensor[(4, 15, 14), float32]) */
}

def @func_20165() -> Tensor[(4, 15, 14), float32] {
  @func_20163() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_3143(%var_3141: Tensor[(3, 14, 1), int64], %var_3142: Tensor[(3, 14, 2), int64]) -> (Tensor[(14, 3, 7), bool], Tensor[(3, 14, 1), float64], Tensor[(3, 14, ?), int32], Tensor[(3, 14, 2), bool]) {
  @func_3139(%var_3141, %var_3142) /* ty=(Tensor[(14, 3, 7), bool], Tensor[(3, 14, 1), float64], Tensor[(3, 14, ?), int32], Tensor[(3, 14, 2), bool]) */
}

def @func_4788(%var_4786: Tensor[(16, 10, 15), float32]) -> (Tensor[(16, 10, 15), float32], Tensor[(4, 15, 14), float32]) {
  @func_4785(%var_4786) /* ty=(Tensor[(16, 10, 15), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_8540() -> Tensor[(4, 15, 14), float32] {
  @func_8538() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_15527() -> (Tensor[(294), uint32],) {
  %1352 = fn () -> (Tensor[(294), uint32],) {
    %1350 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
    %1351 = %1350.4;
    (%1351,)
  };
  %1352() /* ty=(Tensor[(294), uint32],) */
}

def @func_2000() -> (Tensor[(4, 15, 14), float32],) {
  %1353 = @func_1611() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_13578() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_13576() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_3003() -> (Tensor[(4, 15, 14), float32],) {
  %1357 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1355 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1356 = %1355.0;
    (%1356,)
  };
  %1357() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_628() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_8925(%var_8924: Tensor[(24, 2), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(24, 2), uint32]) {
  %1364 = fn (%var_8919: Tensor[(24, 2), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(24, 2), uint32]) {
    %1358 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1359 = cast(%var_8919, dtype="uint32") /* ty=Tensor[(24, 2), uint32] */;
    %1360 = reshape(%1359, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %1361 = @func_4943(%1360) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(2, 6, 4), bool], Tensor[(48), uint32], Tensor[(4, 15, 14), float32]) */;
    %1362 = %1358.0;
    %1363 = %1361.3;
    (%1362, %1363, %var_8919)
  };
  %1364(%var_8924) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(24, 2), uint32]) */
}

def @func_17432(%var_17425: Tensor[(13, 6, 4), float32]) -> (Tensor[(13, 6, 4), float32],) {
  %1365 = cast(%var_17425, dtype="float32") /* ty=Tensor[(13, 6, 4), float32] */;
  %1366 = sinh(%1365) /* ty=Tensor[(13, 6, 4), float32] */;
  (%1366,)
}

def @func_12943() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_12941() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_16198(%var_16197: Tensor[(15, 15, 12), float32]) -> (Tensor[(15, 15, 12), float32], Tensor[(12, 12, 1), float32], Tensor[(144), float32]) {
  %1373 = fn (%var_16186: Tensor[(15, 15, 12), float32]) -> (Tensor[(15, 15, 12), float32], Tensor[(12, 12, 1), float32], Tensor[(144), float32]) {
    %1367 = cast(%var_16186, dtype="float32") /* ty=Tensor[(15, 15, 12), float32] */;
    %1368 = cast(meta[relay.Constant][36] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1369 = reshape(%1368, newshape=[12, 12, 1]) /* ty=Tensor[(12, 12, 1), float32] */;
    %1370 = @func_10491(%1369) /* ty=(Tensor[(12, 12, 1), float32], Tensor[(4, 15, 14), float32]) */;
    %1371 = exp(%1367) /* ty=Tensor[(15, 15, 12), float32] */;
    %1372 = %1370.0;
    (%1371, %1372, meta[relay.Constant][36] /* ty=Tensor[(144), float32] */)
  };
  %1373(%var_16197) /* ty=(Tensor[(15, 15, 12), float32], Tensor[(12, 12, 1), float32], Tensor[(144), float32]) */
}

def @func_8770() -> (Tensor[(4, 15, 14), float32],) {
  %1376 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1374 = @func_1965() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1375 = %1374.1;
    (%1375,)
  };
  %1376() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_10814(%var_10811: Tensor[(1, 11, 11), float64]) -> Tensor[(1, 11, 11), float64] {
  %1377 = cast(%var_10811, dtype="float64") /* ty=Tensor[(1, 11, 11), float64] */;
  atan(%1377) /* ty=Tensor[(1, 11, 11), float64] */
}

def @func_12343() -> Tensor[(4, 15, 14), bool] {
  %1378 = fn () -> Tensor[(4, 15, 14), bool] {
    @func_4278() /* ty=Tensor[(4, 15, 14), bool] */
  };
  %1378() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_7969(%var_7967: Tensor[(7, 10, 8), uint16], %var_7968: Tensor[(7, 10, 8), uint16]) -> (Tensor[(7, 10, 8), uint16],) {
  @func_7965(%var_7967, %var_7968) /* ty=(Tensor[(7, 10, 8), uint16],) */
}

def @func_14023() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1379 = @func_12884() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1380 = @func_8769() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1381 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1382 = %1379.0;
  %1383 = @func_12342() /* ty=Tensor[(4, 15, 14), bool] */;
  %1384 = %1380.0;
  %1385 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  %1386 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
  %1387 = %1381.1;
  (%1382, %1383, %1384, %1385, %1386, %1387)
}

def @func_21411() -> (Tensor[(14, 5, 9), bool],) {
  %1395 = fn () -> (Tensor[(14, 5, 9), bool],) {
    %1388 = @func_7920() /* ty=(Tensor[(14, 5, 9), float64], Tensor[(4, 15, 14), float32]) */;
    %1389 = %1388.0;
    %1390 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 5, 9), float64] */, dtype="bool") /* ty=Tensor[(14, 5, 9), bool] */;
    %1391 = shape_of(%1389, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1392 = cast(%1389, dtype="bool") /* ty=Tensor[(14, 5, 9), bool] */;
    %1393 = dyn.reshape(%1390, %1391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1394 = logical_and(%1392, %1393) /* ty=Tensor[(14, 5, 9), bool] */;
    (%1394,)
  };
  %1395() /* ty=(Tensor[(14, 5, 9), bool],) */
}

def @func_11022() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_11020() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_4851() -> Tensor[(4, 15, 14), float32] {
  %1397 = fn () -> Tensor[(4, 15, 14), float32] {
    %1396 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1396.0
  };
  %1397() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_21327(%var_21321: Tensor[(14, 1, 7), int64], %var_21322: Tensor[(14, 16, 7), int64]) -> Tensor[(14, 16, 7), bool] {
  %1398 = cast(%var_21321, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
  %1399 = cast(%var_21322, dtype="bool") /* ty=Tensor[(14, 16, 7), bool] */;
  greater(%1398, %1399) /* ty=Tensor[(14, 16, 7), bool] */
}

def @func_12437() -> (Tensor[(4, 15, 14), float32],) {
  @func_12435() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_15971(%var_15969: Tensor[(1, 5, 13), int16], %var_15970: Tensor[(13, 5, 13), int16]) -> (Tensor[(13, 5, 13), bool], Tensor[(13, 5, 13), float32]) {
  %1405 = fn (%var_15961: Tensor[(1, 5, 13), int16], %var_15962: Tensor[(13, 5, 13), int16]) -> (Tensor[(13, 5, 13), bool], Tensor[(13, 5, 13), float32]) {
    %1400 = cast(%var_15961, dtype="bool") /* ty=Tensor[(1, 5, 13), bool] */;
    %1401 = cast(%var_15962, dtype="bool") /* ty=Tensor[(13, 5, 13), bool] */;
    %1402 = cast(%var_15962, dtype="float32") /* ty=Tensor[(13, 5, 13), float32] */;
    %1403 = less(%1400, %1401) /* ty=Tensor[(13, 5, 13), bool] */;
    %1404 = sin(%1402) /* ty=Tensor[(13, 5, 13), float32] */;
    (%1403, %1404)
  };
  %1405(%var_15969, %var_15970) /* ty=(Tensor[(13, 5, 13), bool], Tensor[(13, 5, 13), float32]) */
}

def @func_515() -> (Tensor[(4, 15, 14), float32],) {
  %1406 = @func_288() /* ty=Tensor[(4, 15, 14), float32] */;
  %1407 = cast(%1406, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %1408 = asin(%1407) /* ty=Tensor[(4, 15, 14), float32] */;
  (%1408,)
}

def @func_16511(%var_16509: Tensor[(5, 5, 9), float32]) -> (Tensor[(5, 5, 9), float32],) {
  @func_16508(%var_16509) /* ty=(Tensor[(5, 5, 9), float32],) */
}

def @func_21572() -> (Tensor[(4, 15, 14), float32],) {
  %1409 = @func_10332() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1410 = %1409.0;
  (%1410,)
}

def @func_20228() -> (Tensor[(4, 15, 14), float32],) {
  %1412 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1411 = @func_16495() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1411,)
  };
  %1412() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_18983() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1417 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1413 = @func_4746() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1414 = @func_16900() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1415 = %1413.1;
    %1416 = %1414.0;
    (%1415, %1416)
  };
  %1417() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_3433() -> Tensor[(4, 15, 14), bool] {
  %1419 = fn () -> Tensor[(4, 15, 14), bool] {
    %1418 = @func_2030() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %1418.0
  };
  %1419() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_12636() -> Tensor[(4, 15, 14), float32] {
  @func_12634() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_1736() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %1424 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
    %1420 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1421 = @func_1611() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1422 = %1420.1;
    %1423 = %1421.0;
    (%1422, %1423)
  };
  %1424() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_16011() -> Tensor[(4, 15, 14), float32] {
  %1426 = fn () -> Tensor[(4, 15, 14), float32] {
    %1425 = @func_11306() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1425.0
  };
  %1426() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_16902() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_16900() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_11560() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  @func_11558() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */
}

def @func_17643() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1427 = @func_16164() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1428 = @func_14023() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1429 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1430 = %1427.3;
  %1431 = %1428.3;
  %1432 = %1429.3;
  (%1430, %1431, %1432)
}

def @func_20946() -> Tensor[(1680), uint16] {
  @func_20944() /* ty=Tensor[(1680), uint16] */
}

def @func_1656() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %1433 = @func_928() /* ty=Tensor[(4, 15, 14), float32] */;
  %1434 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  (%1433, %1434)
}

def @func_9879() -> (Tensor[(4, 15, 14), float32],) {
  %1435 = @func_4582() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1435,)
}

def @func_4464() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1436 = @func_3898() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1437 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1438 = %1436.3;
  %1439 = @func_1424() /* ty=Tensor[(4, 15, 14), float32] */;
  %1440 = @func_3326() /* ty=Tensor[(4, 15, 14), float32] */;
  %1441 = %1437.0;
  (%1438, %1439, %1440, %1441)
}

def @func_21529() -> (Tensor[(4, 15, 14), bool],) {
  @func_21527() /* ty=(Tensor[(4, 15, 14), bool],) */
}

def @func_21786() -> (Tensor[(294), uint32],) {
  %1442 = @func_15526() /* ty=(Tensor[(294), uint32],) */;
  %1443 = %1442.0;
  (%1443,)
}

def @func_2325(%var_2301: Tensor[(1680, 1), uint16]) -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool], Tensor[(1680, 1), float32], Tensor[(4, 15, 14), float32]) {
  %1444 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1445 = cast(%var_2301, dtype="uint16") /* ty=Tensor[(1680, 1), uint16] */;
  %1446 = reshape(%1445, newshape=[8, 14, 15]) /* ty=Tensor[(8, 14, 15), uint16] */;
  %1447 = @func_831(%1446) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool]) */;
  %1448 = cast(%var_2301, dtype="float32") /* ty=Tensor[(1680, 1), float32] */;
  %1449 = %1447.1;
  %1450 = cast(%1449, dtype="uint16") /* ty=Tensor[(8, 14, 15), uint16] */;
  %1451 = reshape(%1450, newshape=[1680]) /* ty=Tensor[(1680), uint16] */;
  %1452 = @func_1332(%1451) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(120), float32], Tensor[(13, 4, 4), float32], Tensor[(208), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1453 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  %1454 = %1444.0;
  %1455 = atan(%1448) /* ty=Tensor[(1680, 1), float32] */;
  %1456 = %1452.11;
  (%1453, %1454, %1449, %1455, %1456)
}

def @func_4109() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) {
  %1465 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) {
    %1457 = cast(meta[relay.Constant][38] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
    %1458 = cast(meta[relay.Constant][38] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
    %1459 = reshape(%1457, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), uint32] */;
    %1460 = reshape(%1458, newshape=[13, 4, 4]) /* ty=Tensor[(13, 4, 4), uint32] */;
    %1461 = @func_454(%1459, %1460) /* ty=(Tensor[(13, 4, 4), uint32], Tensor[(13, 4, 4), float32]) */;
    %1462 = @func_2851() /* ty=Tensor[(4, 15, 14), float32] */;
    %1463 = @func_2738() /* ty=Tensor[(4, 15, 14), float64] */;
    %1464 = %1461.0;
    (%1462, %1463, %1464, meta[relay.Constant][38] /* ty=Tensor[(208), uint32] */)
  };
  %1465() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) */
}

def @func_12063() -> Tensor[(4, 15, 14), float32] {
  @func_8538() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_1048(%var_1046: Tensor[(12, 2, 5), float32]) -> (Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) {
  @func_1045(%var_1046) /* ty=(Tensor[(12, 2, 5), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_2938() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_2936() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_9763(%var_9761: Tensor[(84), int64]) -> (Tensor[(4, 15, 14), float32], Tensor[(3, 14, ?), int32], Tensor[(42), int64], Tensor[(84), int64]) {
  @func_9760(%var_9761) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(3, 14, ?), int32], Tensor[(42), int64], Tensor[(84), int64]) */
}

def @func_18954() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1466 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1467 = @func_6775() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1468 = %1466.0;
  %1469 = %1467.0;
  (%1468, %1469)
}

def @func_12407(%var_12406: Tensor[(4, 3, 15), float32]) -> (Tensor[(4, 3, 15), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1476 = fn (%var_12389: Tensor[(4, 3, 15), float32]) -> (Tensor[(4, 3, 15), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1470 = cast(%var_12389, dtype="float32") /* ty=Tensor[(4, 3, 15), float32] */;
    %1471 = @func_9329() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1472 = @func_5123() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1473 = log10(%1470) /* ty=Tensor[(4, 3, 15), float32] */;
    %1474 = %1471.0;
    %1475 = %1472.0;
    (%1473, %1474, %1475)
  };
  %1476(%var_12406) /* ty=(Tensor[(4, 3, 15), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_18039() -> Tensor[(4, 15, 14), float32] {
  %1477 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1477.1
}

def @func_9714() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1484 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1478 = @func_5461() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1479 = @func_5606() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1480 = @func_7310() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1481 = %1478.1;
    %1482 = %1479.0;
    %1483 = %1480.0;
    (%1481, %1482, %1483)
  };
  %1484() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_12428() -> Tensor[(4, 15, 14), float32] {
  @func_12426() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_21821() -> (Tensor[(4, 15, 14), float32],) {
  %1486 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1485 = @func_18039() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1485,)
  };
  %1486() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_5649() -> (Tensor[(1680), uint16], Tensor[(4, 15, 14), float32]) {
  %1487 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
  %1488 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1489 = %1487.2;
  %1490 = %1488.1;
  (%1489, %1490)
}

def @func_13249() -> Tensor[(4, 15, 14), float32] {
  %1491 = @func_8782() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1491.0
}

def @func_20272() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1492 = @func_14522() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1493 = @func_7048() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1494 = %1492.3;
  %1495 = %1493.0;
  (%1494, %1495)
}

def @func_17389(%var_17387: Tensor[(14, 14, 5), uint32]) -> Tensor[(14, 14, 5), bool] {
  @func_17386(%var_17387) /* ty=Tensor[(14, 14, 5), bool] */
}

def @func_14522() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1496 = @func_2489() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1497 = @func_11430() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64]) */;
  %1498 = @func_239() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1499 = %1496.0;
  %1500 = @func_12063() /* ty=Tensor[(4, 15, 14), float32] */;
  %1501 = %1497.4;
  %1502 = %1498.1;
  (%1499, %1500, %1501, %1502)
}

def @func_6345() -> (Tensor[(14, 3, 7), bool],) {
  %1505 = fn () -> (Tensor[(14, 3, 7), bool],) {
    %1503 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
    %1504 = %1503.2;
    (%1504,)
  };
  %1505() /* ty=(Tensor[(14, 3, 7), bool],) */
}

def @func_4236() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  @func_4234() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_2738() -> Tensor[(4, 15, 14), float64] {
  %1506 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
  %1507 = cast(%1506, dtype="float64") /* ty=Tensor[(4, 15, 14), float64] */;
  rsqrt(%1507) /* ty=Tensor[(4, 15, 14), float64] */
}

def @func_11108() -> (Tensor[(4, 15, 14), float32],) {
  @func_11106() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_17155() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(144), float32], Tensor[(4, 15, 14), float32], Tensor[(1200, 2), float64]) {
  %1508 = @func_8063() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1509 = cast(meta[relay.Constant][39] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1510 = reshape(%1509, newshape=[12, 12, 1]) /* ty=Tensor[(12, 12, 1), float32] */;
  %1511 = @func_10491(%1510) /* ty=(Tensor[(12, 12, 1), float32], Tensor[(4, 15, 14), float32]) */;
  %1512 = cast(meta[relay.Constant][40] /* ty=Tensor[(1200, 2), float32] */, dtype="float32") /* ty=Tensor[(1200, 2), float32] */;
  %1513 = reshape(%1512, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), float32] */;
  %1514 = @func_4785(%1513) /* ty=(Tensor[(16, 10, 15), float32], Tensor[(4, 15, 14), float32]) */;
  %1515 = cast(meta[relay.Constant][40] /* ty=Tensor[(1200, 2), float32] */, dtype="float64") /* ty=Tensor[(1200, 2), float64] */;
  %1516 = %1508.0;
  %1517 = %1511.1;
  %1518 = %1514.1;
  %1519 = acos(%1515) /* ty=Tensor[(1200, 2), float64] */;
  (%1516, %1517, meta[relay.Constant][39] /* ty=Tensor[(144), float32] */, %1518, %1519)
}

def @func_9446() -> (Tensor[(4, 15, 14), float32],) {
  @func_9444() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_14999() -> Tensor[(4, 15, 14), float32] {
  %1521 = fn () -> Tensor[(4, 15, 14), float32] {
    %1520 = @func_3793() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1520.2
  };
  %1521() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_7310() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1522 = @func_1965() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1523 = %1522.0;
  %1524 = @func_2277() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1523, %1524)
}

def @func_8782() -> (Tensor[(4, 15, 14), float32],) {
  %1525 = @func_553() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1525,)
}

def @func_16490() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_16488() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_13188() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_13186() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_11106() -> (Tensor[(4, 15, 14), float32],) {
  %1526 = @func_8063() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1527 = %1526.0;
  (%1527,)
}

def @func_17850() -> Tensor[(4, 15, 14), float32] {
  @func_17848() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_20103() -> (Tensor[(4, 15, 14), float32],) {
  @func_20101() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_5885() -> Tensor[(4, 15, 14), float32] {
  %1528 = @func_3729() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1528.0
}

def @func_5887() -> Tensor[(4, 15, 14), float32] {
  @func_5885() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_12783() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(13, 4, 4), uint32], Tensor[(4, 15, 14), float32]) {
  @func_12781() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(13, 4, 4), uint32], Tensor[(4, 15, 14), float32]) */
}

def @func_18708() -> (Tensor[(4, 15, 14), float64],) {
  %1529 = @func_2738() /* ty=Tensor[(4, 15, 14), float64] */;
  (%1529,)
}

def @func_14253() -> Tensor[(4, 15, 14), bool] {
  %1531 = fn () -> Tensor[(4, 15, 14), bool] {
    %1530 = @func_1764() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(1680), uint16]) */;
    %1530.0
  };
  %1531() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_19592(%var_19591: Tensor[(1, 13, 3), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(?, 13, 3), int32], Tensor[(4, 15, 14), float32], Tensor[(390), float32], Tensor[(4, 15, 14), float32]) {
  %1559 = fn (%var_19516: Tensor[(1, 13, 3), float64]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(?, 13, 3), int32], Tensor[(4, 15, 14), float32], Tensor[(390), float32], Tensor[(4, 15, 14), float32]) {
    %1532 = @func_16229() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %1533 = cast(%var_19516, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
    %1534 = tan(%1533) /* ty=Tensor[(1, 13, 3), float64] */;
    %1535 = cast(%1534, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
    %1536 = shape_of(%var_19516, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1537 = cast(%var_19516, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
    %1538 = dyn.reshape(%1535, %1536, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1539 = floor_mod(%1537, %1538) /* ty=Tensor[(?, 13, 3), float64] */;
    %1540 = cast(%1534, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
    %1541 = shape_of(%1539, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1542 = cast(%1539, dtype="bool") /* ty=Tensor[(?, 13, 3), bool] */;
    %1543 = dyn.reshape(%1540, %1541, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1544 = not_equal(%1542, %1543) /* ty=Tensor[(?, 13, 3), bool] */;
    %1545 = cast(%1539, dtype="float32") /* ty=Tensor[(?, 13, 3), float32] */;
    %1546 = acos(%1545) /* ty=Tensor[(?, 13, 3), float32] */;
    %1547 = cast(%1546, dtype="int32") /* ty=Tensor[(?, 13, 3), int32] */;
    %1548 = shape_of(%1544, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1549 = cast(%1544, dtype="int32") /* ty=Tensor[(?, 13, 3), int32] */;
    %1550 = dyn.reshape(%1547, %1548, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1551 = cast(meta[relay.Constant][41] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
    %1552 = reshape(%1551, newshape=[2, 15, 13]) /* ty=Tensor[(2, 15, 13), float32] */;
    %1553 = @func_2615(%1552) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(1680), uint16], Tensor[(2, 15, 13), int64], Tensor[(4, 15, 14), float32]) */;
    %1554 = @func_6163() /* ty=Tensor[(4, 15, 14), float32] */;
    %1555 = %1532.0;
    %1556 = subtract(%1549, %1550) /* ty=Tensor[(?, 13, 3), int32] */;
    %1557 = %1553.1;
    %1558 = @func_11129() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1554, %1555, %1556, %1557, meta[relay.Constant][41] /* ty=Tensor[(390), float32] */, %1558)
  };
  %1559(%var_19591) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(?, 13, 3), int32], Tensor[(4, 15, 14), float32], Tensor[(390), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_15133() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
  %1563 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) {
    %1560 = @func_975() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1561 = %1560.0;
    %1562 = @func_9652() /* ty=Tensor[(4, 15, 14), bool] */;
    (%1561, %1562)
  };
  %1563() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */
}

def @func_4894() -> (Tensor[(4, 15, 14), float32],) {
  %1564 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1565 = %1564.1;
  (%1565,)
}

def @func_10141() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %1566 = @func_8882() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1567 = %1566.1;
  %1568 = @func_4850() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1567, %1568)
}

def @func_9839() -> (Tensor[(4, 15, 14), float32],) {
  @func_9837() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_12319() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1573 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1569 = @func_10296() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1570 = @func_3028() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1571 = %1569.0;
    %1572 = %1570.0;
    (%1571, %1572)
  };
  %1573() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_16104() -> (Tensor[(4, 15, 14), float32],) {
  @func_16102() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_2378() -> Tensor[(4, 15, 14), float32] {
  @func_2376() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_83() -> (Tensor[(4, 15, 14), float32],) {
  %1574 = cast(meta[relay.Constant][42] /* ty=Tensor[(4, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
  %1575 = log10(%1574) /* ty=Tensor[(4, 15, 14), float32] */;
  (%1575,)
}

def @func_16230() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %1580 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
    %1576 = @func_727() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %1577 = @func_7552() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1578 = %1576.2;
    %1579 = %1577.0;
    (%1578, %1579)
  };
  %1580() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_7553() -> (Tensor[(4, 15, 14), float32],) {
  %1583 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1581 = @func_384() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
    %1582 = %1581.2;
    (%1582,)
  };
  %1583() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_10333() -> (Tensor[(4, 15, 14), float32],) {
  %1585 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1584 = @func_9102() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1584,)
  };
  %1585() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_4827() -> (Tensor[(4, 15, 14), float32],) {
  @func_4825() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_11860() -> (Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32], Tensor[(120), float32]) {
  %1592 = fn () -> (Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32], Tensor[(120), float32]) {
    %1586 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
    %1587 = cast(meta[relay.Constant][43] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %1588 = reshape(%1587, newshape=[120, 1]) /* ty=Tensor[(120, 1), float32] */;
    %1589 = @func_6899(%1588) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32]) */;
    %1590 = %1586.0;
    %1591 = %1589.2;
    (%1590, %1591, meta[relay.Constant][43] /* ty=Tensor[(120), float32] */)
  };
  %1592() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32], Tensor[(120), float32]) */
}

def @func_5352() -> (Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) {
  @func_5350() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */
}

def @func_5221() -> Tensor[(4, 15, 14), float32] {
  %1594 = fn () -> Tensor[(4, 15, 14), float32] {
    %1593 = @func_2525() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1593.0
  };
  %1594() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_17091() -> Tensor[(4, 15, 14), bool] {
  %1595 = @func_7136() /* ty=(Tensor[(4, 15, 14), bool],) */;
  %1595.0
}

def @func_2002() -> (Tensor[(4, 15, 14), float32],) {
  @func_2000() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_9908() -> (Tensor[(4, 15, 14), float32],) {
  %1596 = @func_4825() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1597 = %1596.0;
  (%1597,)
}

def @func_8538() -> Tensor[(4, 15, 14), float32] {
  @func_2246() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_20667() -> (Tensor[(4, 15, 14), float32],) {
  %1600 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1598 = @func_20337() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1599 = %1598.1;
    (%1599,)
  };
  %1600() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_7100() -> (Tensor[(4, 15, 14), float32],) {
  %1601 = @func_6054() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1602 = %1601.2;
  (%1602,)
}

def @func_5910(%var_5908: Tensor[(13, 6, 4), float64]) -> (Tensor[(13, 6, 4), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_5907(%var_5908) /* ty=(Tensor[(13, 6, 4), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_9207() -> (Tensor[(4, 15, 14), bool],) {
  @func_9205() /* ty=(Tensor[(4, 15, 14), bool],) */
}

def @func_10709() -> Tensor[(208), uint32] {
  %1604 = fn () -> Tensor[(208), uint32] {
    %1603 = @func_4108() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float64], Tensor[(13, 4, 4), uint32], Tensor[(208), uint32]) */;
    %1603.3
  };
  %1604() /* ty=Tensor[(208), uint32] */
}

def @func_1965() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1605 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1606 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1607 = @func_83() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1608 = %1605.0;
  %1609 = %1606.0;
  %1610 = %1607.0;
  %1611 = @func_1918() /* ty=Tensor[(4, 15, 14), float32] */;
  (%1608, %1609, %1610, %1611)
}

def @func_14090(%var_14088: Tensor[(4, 12, 4), int8], %var_14089: Tensor[(4, 12, 4), int8]) -> (Tensor[(4, 12, 4), int8], Tensor[(14, 3, 7), bool]) {
  @func_14086(%var_14088, %var_14089) /* ty=(Tensor[(4, 12, 4), int8], Tensor[(14, 3, 7), bool]) */
}

def @func_3926(%var_3925: Tensor[(7, 8, 3), float32]) -> Tensor[(7, 8, 3), float64] {
  %1615 = fn (%var_3914: Tensor[(7, 8, 3), float32]) -> Tensor[(7, 8, 3), float64] {
    %1612 = cast(%var_3914, dtype="float32") /* ty=Tensor[(7, 8, 3), float32] */;
    %1613 = asinh(%1612) /* ty=Tensor[(7, 8, 3), float32] */;
    %1614 = cast(%1613, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
    asin(%1614) /* ty=Tensor[(7, 8, 3), float64] */
  };
  %1615(%var_3925) /* ty=Tensor[(7, 8, 3), float64] */
}

def @func_5773() -> Tensor[(4, 15, 14), float32] {
  @func_5771() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_18852() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1620 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1616 = @func_11020() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1617 = @func_14186() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1618 = %1616.2;
    %1619 = %1617.1;
    (%1618, %1619)
  };
  %1620() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_10119(%var_10117: Tensor[(8, 2, 8), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(8, 2, 8), float32]) {
  @func_10116(%var_10117) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(8, 2, 8), float32]) */
}

def @func_18742() -> (Tensor[(4, 15, 14), float32],) {
  %1623 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1621 = @func_1908() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1622 = %1621.0;
    (%1622,)
  };
  %1623() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_4825() -> (Tensor[(4, 15, 14), float32],) {
  %1624 = @func_3670() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1625 = %1624.0;
  (%1625,)
}

def @func_2617(%var_2616: Tensor[(2, 15, 13), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(1680), uint16], Tensor[(2, 15, 13), int64], Tensor[(4, 15, 14), float32]) {
  %1648 = fn (%var_2545: Tensor[(2, 15, 13), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(1680), uint16], Tensor[(2, 15, 13), int64], Tensor[(4, 15, 14), float32]) {
    %1626 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1627 = @func_2231() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1628 = cast(meta[relay.Constant][44] /* ty=Tensor[(1680), uint16] */, dtype="uint16") /* ty=Tensor[(1680), uint16] */;
    %1629 = reshape(%1628, newshape=[1680, 1]) /* ty=Tensor[(1680, 1), uint16] */;
    %1630 = @func_2325(%1629) /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32], Tensor[(8, 14, 15), bool], Tensor[(1680, 1), float32], Tensor[(4, 15, 14), float32]) */;
    %1631 = cast(%var_2545, dtype="float32") /* ty=Tensor[(2, 15, 13), float32] */;
    %1632 = tan(%1631) /* ty=Tensor[(2, 15, 13), float32] */;
    %1633 = cast(%var_2545, dtype="int8") /* ty=Tensor[(2, 15, 13), int8] */;
    %1634 = shape_of(%1632, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1635 = cast(%1632, dtype="int8") /* ty=Tensor[(2, 15, 13), int8] */;
    %1636 = dyn.reshape(%1633, %1634, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1637 = subtract(%1635, %1636) /* ty=Tensor[(2, 15, 13), int8] */;
    %1638 = cast(%1632, dtype="int64") /* ty=Tensor[(2, 15, 13), int64] */;
    %1639 = shape_of(%1637, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1640 = cast(%1637, dtype="int64") /* ty=Tensor[(2, 15, 13), int64] */;
    %1641 = dyn.reshape(%1638, %1639, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1642 = @func_1515() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1643 = %1626.0;
    %1644 = %1627.4;
    %1645 = %1630.0;
    %1646 = add(%1640, %1641) /* ty=Tensor[(2, 15, 13), int64] */;
    %1647 = %1642.0;
    (%1643, %1644, %1645, meta[relay.Constant][44] /* ty=Tensor[(1680), uint16] */, %1646, %1647)
  };
  %1648(%var_2616) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(1680), uint16], Tensor[(2, 15, 13), int64], Tensor[(4, 15, 14), float32]) */
}

def @func_21331(%var_21329: Tensor[(14, 1, 7), int64], %var_21330: Tensor[(14, 16, 7), int64]) -> Tensor[(14, 16, 7), bool] {
  @func_21327(%var_21329, %var_21330) /* ty=Tensor[(14, 16, 7), bool] */
}

def @func_21004() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1657 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1649 = @func_6627() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1650 = @func_1876() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1651 = @func_18741() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1652 = @func_6054() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1653 = %1649.1;
    %1654 = %1650.0;
    %1655 = %1651.0;
    %1656 = %1652.0;
    (%1653, %1654, %1655, %1656)
  };
  %1657() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_2030() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  %1658 = @func_515() /* ty=(Tensor[(4, 15, 14), float32],) */;
  %1659 = @func_1014() /* ty=Tensor[(4, 15, 14), bool] */;
  %1660 = %1658.0;
  (%1659, %1660)
}

def @func_17435(%var_17433: Tensor[(13, 6, 4), float32]) -> (Tensor[(13, 6, 4), float32],) {
  @func_17432(%var_17433) /* ty=(Tensor[(13, 6, 4), float32],) */
}

def @func_1910() -> (Tensor[(4, 15, 14), float32],) {
  @func_1908() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_6902(%var_6900: Tensor[(120, 1), float32]) -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32]) {
  @func_6899(%var_6900) /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120, 1), float32]) */
}

def @func_17157() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(144), float32], Tensor[(4, 15, 14), float32], Tensor[(1200, 2), float64]) {
  @func_17155() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(144), float32], Tensor[(4, 15, 14), float32], Tensor[(1200, 2), float64]) */
}

def @func_18956() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_18954() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_9377() -> (Tensor[(14, 3, 7), bool], Tensor[(4, 15, 14), float32]) {
  %1661 = @func_6014() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) */;
  %1662 = @func_3308() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool]) */;
  %1663 = %1661.2;
  %1664 = %1662.0;
  (%1663, %1664)
}

def @func_10958() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_10956() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_13803() -> Tensor[(4, 15, 14), float32] {
  %1665 = fn () -> Tensor[(4, 15, 14), float32] {
    @func_12426() /* ty=Tensor[(4, 15, 14), float32] */
  };
  %1665() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_13639() -> Tensor[(4, 15, 14), float32] {
  %1666 = fn () -> Tensor[(4, 15, 14), float32] {
    @func_3978() /* ty=Tensor[(4, 15, 14), float32] */
  };
  %1666() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_17879() -> (Tensor[(4, 15, 14), float32],) {
  %1669 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1667 = @func_9879() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1668 = %1667.0;
    (%1668,)
  };
  %1669() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_17045() -> (Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  @func_17043() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_20803() -> (Tensor[(4, 15, 14), float32],) {
  %1672 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1670 = @func_8769() /* ty=(Tensor[(4, 15, 14), float32],) */;
    %1671 = %1670.0;
    (%1671,)
  };
  %1672() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_2851() -> Tensor[(4, 15, 14), float32] {
  %1673 = @func_1735() /* ty=(Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */;
  %1673.1
}

def @func_11183(%var_11179: Tensor[(294), uint32]) -> (Tensor[(4, 15, 14), float32], Tensor[(14, 3, 7), bool], uint32, Tensor[(294), uint32]) {
  %1674 = @func_5461() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1675 = cast(meta[relay.Constant][45] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1676 = cast(%var_11179, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %1677 = reshape(%1675, newshape=[]) /* ty=uint32 */;
  %1678 = reshape(%1676, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), uint32] */;
  %1679 = %1674.0;
  %1680 = @func_1579(%1677, %1678) /* ty=Tensor[(14, 3, 7), bool] */;
  (%1679, %1680, meta[relay.Constant][45] /* ty=uint32 */, %var_11179)
}

def @func_12299() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120), float32]) {
  @func_12297() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(120), float32]) */
}

def @func_3820() -> Tensor[(4, 15, 14), bool] {
  @func_3818() /* ty=Tensor[(4, 15, 14), bool] */
}

def @func_1967() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_1965() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_18041() -> Tensor[(4, 15, 14), float32] {
  @func_18039() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_5087() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_566() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_11616() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) {
  @func_11614() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), bool], Tensor[(4, 15, 14), float32]) */
}

def @func_21690() -> (Tensor[(4, 15, 14), float32],) {
  @func_21688() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_3395() -> Tensor[(4, 15, 14), float32] {
  @func_3393() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_5462() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1685 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1681 = @func_626() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1682 = %1681.0;
    %1683 = @func_4039() /* ty=Tensor[(4, 15, 14), float32] */;
    %1684 = @func_5220() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1682, %1683, %1684)
  };
  %1685() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_22244() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  @func_22242() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

def @func_12435() -> (Tensor[(4, 15, 14), float32],) {
  %1686 = @func_5350() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32]) */;
  %1687 = %1686.1;
  (%1687,)
}

def @func_289() -> Tensor[(4, 15, 14), float32] {
  %1689 = fn () -> Tensor[(4, 15, 14), float32] {
    %1688 = @func_176() /* ty=(Tensor[(4, 15, 14), float64], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1688.4
  };
  %1689() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_9837() -> (Tensor[(4, 15, 14), float32],) {
  %1690 = @func_5085() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1691 = %1690.1;
  (%1691,)
}

def @func_13093(%var_13082: Tensor[(6, 13, 16), float64], %var_13083: Tensor[(6, 13, 16), float64], %var_13087: Tensor[(6, 13, 16), float64]) -> (Tensor[(6, 13, 16), float64], Tensor[(6, 13, 16), bool]) {
  %1692 = cast(%var_13083, dtype="float64") /* ty=Tensor[(6, 13, 16), float64] */;
  %1693 = shape_of(%var_13082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1694 = cast(%var_13082, dtype="float64") /* ty=Tensor[(6, 13, 16), float64] */;
  %1695 = dyn.reshape(%1692, %1693, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1696 = cast(%var_13087, dtype="bool") /* ty=Tensor[(6, 13, 16), bool] */;
  %1697 = shape_of(%var_13082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1698 = cast(%var_13082, dtype="bool") /* ty=Tensor[(6, 13, 16), bool] */;
  %1699 = dyn.reshape(%1696, %1697, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1700 = floor_divide(%1694, %1695) /* ty=Tensor[(6, 13, 16), float64] */;
  %1701 = less_equal(%1698, %1699) /* ty=Tensor[(6, 13, 16), bool] */;
  (%1700, %1701)
}

def @func_16496() -> Tensor[(4, 15, 14), float32] {
  %1703 = fn () -> Tensor[(4, 15, 14), float32] {
    %1702 = @func_13534() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1702.1
  };
  %1703() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_15682() -> (Tensor[(4, 15, 14), float32],) {
  %1706 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1704 = @func_3638() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1705 = %1704.3;
    (%1705,)
  };
  %1706() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_9665() -> Tensor[(4, 15, 14), float32] {
  %1707 = @func_5606() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
  %1707.0
}

def @func_12065() -> Tensor[(4, 15, 14), float32] {
  @func_12063() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_5771() -> Tensor[(4, 15, 14), float32] {
  @func_4039() /* ty=Tensor[(4, 15, 14), float32] */
}

def @func_14920() -> (Tensor[(4, 15, 14), float32],) {
  %1710 = fn () -> (Tensor[(4, 15, 14), float32],) {
    %1708 = @func_564() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */;
    %1709 = %1708.0;
    (%1709,)
  };
  %1710() /* ty=(Tensor[(4, 15, 14), float32],) */
}

def @func_1877() -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
  %1715 = fn () -> (Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) {
    %1711 = @func_753() /* ty=Tensor[(4, 15, 14), float32] */;
    %1712 = cast(%1711, dtype="float32") /* ty=Tensor[(4, 15, 14), float32] */;
    %1713 = sin(%1712) /* ty=Tensor[(4, 15, 14), float32] */;
    %1714 = @func_408() /* ty=Tensor[(4, 15, 14), float32] */;
    (%1713, %1714)
  };
  %1715() /* ty=(Tensor[(4, 15, 14), float32], Tensor[(4, 15, 14), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen721/build/output.py:6852: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen721/build/output.py:6857: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen721/build/output.py:6869: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen721/build/output.py:6874: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen721/build/output.py:6879: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen721/build/output.py:6884: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
def @main() -> (Tensor[(10, 6, 7), float32],) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 6, 7), float32] */, dtype="float32") /* GeneratedSource */ /* ty=Tensor[(10, 6, 7), float32] */;
  %1 = exp(%0) /* GeneratedSource */ /* ty=Tensor[(10, 6, 7), float32] */;
  (%1,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

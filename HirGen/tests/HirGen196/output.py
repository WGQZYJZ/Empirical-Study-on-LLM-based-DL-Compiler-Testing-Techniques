import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_175 = relay.var("var_175", dtype = "float32", shape = (6, 5, 2))#candidate|175|(6, 5, 2)|var|float32
uop_176 = relay.sqrt(var_175.astype('float32')) # shape=(6, 5, 2)
bop_178 = relay.greater(var_175.astype('bool'), relay.reshape(uop_176.astype('bool'), relay.shape_of(var_175))) # shape=(6, 5, 2)
output = relay.Tuple([bop_178,])
output2 = relay.Tuple([bop_178,])
func_206 = relay.Function([var_175,], output)
mod['func_206'] = func_206
mod = relay.transform.InferType()(mod)
var_207 = relay.var("var_207", dtype = "float32", shape = (6, 5, 2))#candidate|207|(6, 5, 2)|var|float32
output = func_206(var_207)
func_208 = relay.Function([var_207], output)
mutated_mod['func_208'] = func_208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_594 = relay.var("var_594", dtype = "float32", shape = (16, 7, 12))#candidate|594|(16, 7, 12)|var|float32
uop_595 = relay.exp(var_594.astype('float32')) # shape=(16, 7, 12)
output = relay.Tuple([uop_595,])
output2 = relay.Tuple([uop_595,])
func_601 = relay.Function([var_594,], output)
mod['func_601'] = func_601
mod = relay.transform.InferType()(mod)
var_602 = relay.var("var_602", dtype = "float32", shape = (16, 7, 12))#candidate|602|(16, 7, 12)|var|float32
output = func_601(var_602)
func_603 = relay.Function([var_602], output)
mutated_mod['func_603'] = func_603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_895 = relay.var("var_895", dtype = "float64", shape = (16, 3, 9))#candidate|895|(16, 3, 9)|var|float64
uop_896 = relay.acos(var_895.astype('float64')) # shape=(16, 3, 9)
uop_905 = relay.sqrt(var_895.astype('float32')) # shape=(16, 3, 9)
output = relay.Tuple([uop_896,uop_905,])
output2 = relay.Tuple([uop_896,uop_905,])
func_912 = relay.Function([var_895,], output)
mod['func_912'] = func_912
mod = relay.transform.InferType()(mod)
mutated_mod['func_912'] = func_912
mutated_mod = relay.transform.InferType()(mutated_mod)
var_913 = relay.var("var_913", dtype = "float64", shape = (16, 3, 9))#candidate|913|(16, 3, 9)|var|float64
func_912_call = mutated_mod.get_global_var('func_912')
call_914 = func_912_call(var_913)
output = call_914
func_915 = relay.Function([var_913], output)
mutated_mod['func_915'] = func_915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_972 = relay.var("var_972", dtype = "int64", shape = ())#candidate|972|()|var|int64
var_973 = relay.var("var_973", dtype = "int64", shape = (9, 14, 7))#candidate|973|(9, 14, 7)|var|int64
bop_974 = relay.bitwise_and(var_972.astype('int64'), var_973.astype('int64')) # shape=(9, 14, 7)
output = relay.Tuple([bop_974,])
output2 = relay.Tuple([bop_974,])
func_998 = relay.Function([var_972,var_973,], output)
mod['func_998'] = func_998
mod = relay.transform.InferType()(mod)
mutated_mod['func_998'] = func_998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_998_call = mutated_mod.get_global_var('func_998')
var_1000 = relay.var("var_1000", dtype = "int64", shape = ())#candidate|1000|()|var|int64
var_1001 = relay.var("var_1001", dtype = "int64", shape = (9, 14, 7))#candidate|1001|(9, 14, 7)|var|int64
call_999 = func_998_call(var_1000,var_1001,)
output = call_999
func_1002 = relay.Function([var_1000,var_1001,], output)
mutated_mod['func_1002'] = func_1002
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1347 = relay.const(-1, dtype = "int64")#candidate|1347|()|const|int64
var_1348 = relay.var("var_1348", dtype = "int64", shape = (10, 5, 8))#candidate|1348|(10, 5, 8)|var|int64
bop_1349 = relay.greater_equal(const_1347.astype('bool'), var_1348.astype('bool')) # shape=(10, 5, 8)
bop_1353 = relay.mod(const_1347.astype('float64'), bop_1349.astype('float64')) # shape=(10, 5, 8)
uop_1366 = relay.erf(bop_1353.astype('float64')) # shape=(10, 5, 8)
output = uop_1366
output2 = uop_1366
func_1395 = relay.Function([var_1348,], output)
mod['func_1395'] = func_1395
mod = relay.transform.InferType()(mod)
var_1396 = relay.var("var_1396", dtype = "int64", shape = (10, 5, 8))#candidate|1396|(10, 5, 8)|var|int64
output = func_1395(var_1396)
func_1397 = relay.Function([var_1396], output)
mutated_mod['func_1397'] = func_1397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1602 = relay.var("var_1602", dtype = "float32", shape = (1, 4, 12))#candidate|1602|(1, 4, 12)|var|float32
uop_1603 = relay.exp(var_1602.astype('float32')) # shape=(1, 4, 12)
bop_1610 = relay.minimum(uop_1603.astype('float32'), relay.reshape(var_1602.astype('float32'), relay.shape_of(uop_1603))) # shape=(1, 4, 12)
const_1615 = relay.const([[[0.504711,5.355703,7.303151,0.977309,9.181222,8.473462,5.457014,2.883372,3.285463,-0.376856,-6.673595,-7.947803],[4.307311,-2.526640,7.501522,-6.295255,-0.164683,2.719815,-8.313656,7.549522,6.153653,-9.865353,5.477966,1.211303],[-5.652455,0.139391,1.130177,1.375823,-5.270410,1.151887,-2.114449,-1.038330,8.714461,-0.812858,8.790530,-7.625672],[6.722847,0.820255,-7.203817,6.876063,2.258132,7.902304,8.471901,5.218380,-2.126070,4.367332,1.422876,1.146626]],[[7.073097,-9.477635,7.442116,2.775089,3.363111,-3.188541,-4.592510,-7.031886,-1.434490,-4.763998,0.879976,3.814874],[-8.880072,-4.061900,0.092856,-6.510197,2.881753,0.085762,9.041422,4.451122,2.869356,-0.381451,-3.326640,5.620871],[-6.722416,-6.731205,-0.981790,-4.094366,-1.478463,-8.100258,-6.512059,1.644500,3.372217,9.849087,1.435543,0.102554],[-8.534162,-7.758018,-1.810870,5.783070,2.460764,-4.781236,0.388743,-2.836073,9.317708,6.076958,-1.265334,-0.195681]],[[0.243293,-8.999886,-7.848961,-9.504763,-5.639182,5.530642,-6.886355,0.154340,-4.891312,8.662927,-5.550931,-8.292897],[-1.226883,-9.102028,-3.015021,-4.816742,-7.367023,-9.924770,-6.625335,2.256514,-7.221326,-1.884669,9.790952,-5.124110],[5.999687,8.657444,-0.034739,-0.677288,-8.863929,7.816117,9.808407,-0.765388,-9.122133,-9.402384,9.241299,1.706350],[9.866044,0.618045,-0.821018,-7.786881,6.955392,7.434459,4.214930,0.120340,-6.713345,-9.286841,-5.206863,6.349917]],[[-4.587480,-6.538974,9.835810,3.788157,9.435890,7.583396,-1.580861,7.207308,-2.309907,6.020021,-6.538043,9.575968],[4.159111,-2.365488,-0.641306,4.704714,-5.070418,3.233485,5.896305,-7.208395,0.396877,-4.052311,4.384833,2.071203],[5.200887,-7.861735,8.465582,-6.854945,0.397130,6.043347,3.305686,-4.372812,-7.685400,2.018993,-2.471660,-2.000294],[-7.752358,-9.509305,-5.478939,5.980638,-2.468292,-8.287503,5.349420,1.073419,3.670364,-0.546137,0.403147,-5.095321]],[[-8.747886,6.062670,5.271375,-9.130946,2.099642,-4.218383,6.067007,1.243317,4.906575,3.385223,-0.896082,3.078752],[1.183520,-3.466510,9.521171,-1.828316,7.079573,-1.465431,6.678709,-2.922809,7.249188,4.932443,-7.439353,2.393365],[-9.996386,-2.194048,6.494036,-9.095424,5.527423,6.191246,-9.019628,7.386922,9.465883,-2.402450,-4.422512,3.517382],[3.214325,-3.761240,1.357398,1.896203,8.461077,2.782723,-5.827175,8.569424,-4.116998,-8.951429,6.162232,-7.999735]],[[2.064674,4.802536,1.531696,-4.948887,3.003915,-9.428242,-1.755485,-0.383829,8.599930,-1.690130,-3.268131,-3.184205],[-3.052358,6.199504,-6.738656,-6.686547,-6.517406,1.397447,0.122842,5.881073,6.700810,3.331072,7.989879,0.963080],[9.167772,-2.018681,9.006810,4.570147,3.285308,8.878104,-5.781805,-8.855134,-7.008314,1.857852,5.308468,-3.220352],[-2.139264,-3.075071,-0.741365,6.106534,9.080322,5.500890,-5.926226,-5.741562,9.661273,4.187164,7.551182,-3.749490]],[[0.689713,6.423808,-5.883455,9.415572,-3.357983,8.195822,2.636018,-0.861999,-0.233330,-6.735880,-0.706208,6.883767],[-1.076704,-2.265935,-6.101539,6.658930,-5.982155,-1.349351,1.618798,0.921054,8.357607,-8.753482,9.203958,1.639787],[-3.244087,-1.705455,-0.500225,-4.402141,-7.174646,-2.099428,8.479553,6.338049,7.624993,8.345748,9.761388,-5.337544],[1.405465,-9.884640,1.109076,-7.949151,1.666324,3.601150,-5.301248,-3.835949,-2.885488,3.366420,0.145343,6.945882]],[[-0.645131,4.529516,4.875369,-3.558002,-0.018274,-7.069861,-7.699814,8.433351,9.167786,7.321445,-2.772968,5.486847],[0.454373,-4.585134,6.819340,1.016158,-8.337517,6.755655,-1.294951,-2.354116,-4.906951,-2.795334,-3.972723,-2.008870],[-1.327545,9.553434,-0.405135,4.537127,-7.626471,-2.306654,3.909956,3.411048,-5.735512,-2.718411,3.455195,1.659506],[9.458325,-1.762330,7.477907,1.001638,7.720435,-9.536172,7.277043,2.639828,6.165622,4.102296,5.892239,0.058859]],[[-7.465266,-4.550520,-6.031326,7.640744,5.546740,1.461928,3.792714,1.842122,-7.167293,-6.690872,4.224899,6.006708],[3.155296,-7.074178,9.596960,-8.377708,4.389572,3.802906,-6.417018,0.656616,9.346294,-2.806175,9.982858,5.326860],[4.199300,-9.044212,4.754256,4.449646,-9.146994,0.202718,7.356818,7.122951,-4.380390,2.779699,-3.410897,-3.370369],[7.967323,-6.266434,-1.725520,-8.603968,1.183651,9.249633,-1.698411,6.093305,-4.311577,0.812780,-6.508730,-4.033656]],[[0.151623,0.493915,-4.247311,1.764397,-3.318317,-8.216896,8.301195,-4.651894,6.034363,7.463135,-5.741829,3.575524],[5.343193,0.385621,2.471487,-5.097831,6.023730,-4.080406,-9.216052,6.658212,0.726196,5.554775,8.559412,5.520586],[9.725492,-0.825673,5.367745,-2.789235,-3.493072,-0.644169,5.490883,3.405896,-3.801830,-8.429266,2.128032,2.200252],[-4.459853,-0.145900,-9.087015,-5.830509,-4.833486,-8.525409,-4.908540,7.746832,-8.934022,7.135105,-5.586132,-5.118158]],[[-6.724616,8.303669,-2.246551,7.816020,-3.298477,-1.181997,6.734092,-8.050695,-8.020043,-9.354343,-6.222357,4.427726],[1.436835,-4.602903,4.527976,2.723059,-3.209936,-1.863085,3.560000,9.152999,8.967117,3.523798,-2.853589,-5.610173],[-3.459712,-1.860971,-6.280662,8.173256,-3.276111,-3.789773,-6.422935,5.459328,-1.310779,8.527922,9.329879,7.725857],[4.068643,-5.575313,6.116314,-7.192871,0.243031,-9.825342,-5.555240,0.271042,0.402201,0.911528,3.588287,-7.000418]],[[-4.936636,-2.321783,-4.156175,-4.484225,-1.347083,-6.320704,7.895786,1.859678,0.965500,2.152513,8.258086,-8.927766],[-5.549786,-6.085062,-0.371536,3.075066,-3.736841,7.533175,-8.845260,-7.558800,-5.210426,-7.010575,5.020010,-7.120087],[2.923173,6.488308,-9.993362,2.724966,7.380268,2.147006,6.960169,-0.694486,-9.994482,-6.981417,7.324284,8.652909],[8.023861,9.791370,5.899505,2.269482,1.200617,2.312465,-8.934627,-1.613256,-7.083461,-3.689198,7.610869,7.118014]],[[-6.227415,-7.860917,5.125506,8.402981,6.637382,1.490078,-7.365449,4.999049,3.702066,4.604718,7.859901,4.170960],[1.326226,7.763688,-7.098571,-1.604198,7.860280,-9.895176,-6.999495,5.206960,2.452325,-3.015300,-6.928636,3.010363],[-1.106717,5.292879,2.362952,8.840401,-6.578732,5.768066,-7.802676,2.693231,-3.433703,-8.751611,1.523546,-7.739955],[-1.485509,-4.991303,-8.860154,6.276113,4.322769,-6.539303,5.152345,1.867243,5.199642,5.366164,2.041391,3.898980]]], dtype = "float32")#candidate|1615|(13, 4, 12)|const|float32
bop_1616 = relay.mod(bop_1610.astype('float32'), const_1615.astype('float32')) # shape=(13, 4, 12)
output = bop_1616
output2 = bop_1616
func_1621 = relay.Function([var_1602,], output)
mod['func_1621'] = func_1621
mod = relay.transform.InferType()(mod)
mutated_mod['func_1621'] = func_1621
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1622 = relay.var("var_1622", dtype = "float32", shape = (1, 4, 12))#candidate|1622|(1, 4, 12)|var|float32
func_1621_call = mutated_mod.get_global_var('func_1621')
call_1623 = func_1621_call(var_1622)
output = call_1623
func_1624 = relay.Function([var_1622], output)
mutated_mod['func_1624'] = func_1624
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1884 = relay.var("var_1884", dtype = "int64", shape = (12, 4, 16))#candidate|1884|(12, 4, 16)|var|int64
var_1885 = relay.var("var_1885", dtype = "int64", shape = (12, 4, 16))#candidate|1885|(12, 4, 16)|var|int64
bop_1886 = relay.multiply(var_1884.astype('int64'), relay.reshape(var_1885.astype('int64'), relay.shape_of(var_1884))) # shape=(12, 4, 16)
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
const_1891 = relay.const([0.141937,-7.024844,8.736593,1.729361,8.718068,-5.400613,-1.929871,-8.149651,-3.141896,8.195550,2.333766,-1.377612,-4.922737,-7.953452,4.994151,9.576082,8.556400,-7.581804,-8.533963,7.929381,-1.401372,-0.391825,-3.027842,-6.767101,-7.237422,1.049931,-1.024336,2.032702,6.379276,-4.278464,-4.798030,3.908261,3.159629,-9.462888,4.516094,3.726087,2.809891,-7.765163,9.086944,-9.697863,-8.862892,5.015109,-4.033015,9.012770,-8.839156,-9.522488,3.115405,9.521117,-4.442518,-5.729384,1.419039,8.815180,0.862407,-5.183765,-9.681638,-8.907412,-5.721857,0.807812,-4.911982,-0.605348,-3.639360,9.790783,-4.595952,-9.591911,9.531748,6.599636,2.080730,8.585651,-0.149717,1.504336,2.307517,-4.099209,9.706723,-2.122130,-9.280440,-0.977872,9.972194,8.240286,-5.268021,-5.131072,-7.897747,-4.483851,-6.108282,1.605951,-8.522059,4.633663,-1.190920,6.859356,2.081359,-2.606744,4.249788,-7.803616,-4.725935,-5.192284,-3.569112,-5.739194,-8.377179,-1.961034,5.260306,-1.021609,-8.284068,3.808971,9.411494,-4.526824,-8.126096,-1.467908,1.465632,-7.702807,-4.786978,3.569716,-3.384241,-8.875305,-5.852504,9.837039,-9.966548,7.006417,-5.638645,6.288231,-1.348044,-6.314071,-9.359753,-8.400626,-5.987386,-3.260991,3.613556,3.486694,3.657823,6.510007,-6.833338,0.882366,-8.408803,8.911394,0.706317,-2.546977,-0.813857,-7.261730,2.679471,-5.245855,-2.285593,4.673882,-9.301815,4.914092,-9.635945,-3.653688,8.122669,1.541648,-7.429867,-6.866201,1.484145,1.667906,-0.998064,0.150078,-1.570657,6.819269,-3.918643,3.068585,5.887511,-3.129038,2.223643,-4.021725,0.085067,-2.240397,-9.876878,2.879949,9.394871,2.341871,2.651097,8.204806,-5.217589,-1.066211,2.487438,-1.528751,-0.457517,-8.505119,6.873792,-8.337968,-5.609664,-5.124350,-9.443989,1.665900,8.529322,2.461291,1.602644,-8.641095,4.582501,-1.120683,-7.869487,1.279460,6.370982,-4.696700,-7.524160,0.655365,1.375647,9.826141,-6.187333,5.884592,4.912675,-3.140169,-8.097751,-8.323015,7.540703,-9.647231,8.952251,-9.869926,-7.351714,8.692409,6.025938,5.580076,8.734382,-6.352242,6.464815,2.622175,-3.351170,6.435420,-0.253618,-5.129945,-9.654985,-9.536447,-6.456842,2.832148,8.582881,8.387303,8.152689,-1.988777,7.449901,-8.625899,-7.334533,3.522349,4.848344,6.214122,0.559580,9.973083,2.222781,9.075459,-2.705158,-9.850240,-3.533258,6.009072,-7.207822,-8.346369,-9.477631,2.899811,-9.966302,-5.979015,3.232489,8.042979,8.661198,5.805383,-4.936843,0.412469,6.421318,5.821506,5.376820,7.128691,-5.068858,-0.772654,3.543382,7.557926,-6.869706,1.979743,-5.273858,-3.364638,-6.603225,-8.424422,8.802575,0.647572,3.380554,-3.219372,0.410264,-7.701895,6.836327,8.867063,-9.208168,-1.957957,-4.938989,6.928569,-2.829251,-5.170678,2.196864,-2.322030,-8.318963,5.020263,-0.289638,5.284112,8.124620,7.763519,-4.708112,8.096106,5.142903,7.518034,-5.373929,-0.957484,5.887776,0.344643,0.416600,3.566158,3.545903,0.124298,-7.205829,-3.187195,7.342862,-5.873184,-4.633565,-4.914616,5.533549,3.545988,-8.559465,-3.684651,-9.201409,-1.760262,0.205741,-3.293465,-8.701199,-1.288485,-1.721966,8.510236,-3.658544,9.283400,2.482054,6.124690,2.665469,-0.946105,-6.487799,8.862341,-8.287091,9.013616,3.580251,2.069343,5.603387,-7.396920,-2.928380,7.263080,1.160076,0.123537,7.521817,7.508322,3.321167,-0.135748,8.017091,-6.381410,-4.122959,8.332778,5.455948,0.328884,4.346025,-8.706869,0.668059,-9.425868,-7.424479,-5.672730,-6.653916,0.075242,2.091288,-0.222512,7.064828,7.005564,-4.472332,-8.210674,7.745918,-9.102754,3.052601,-1.475489,8.851122,-1.887596,-0.334429,9.914362,-2.983800,-5.222182,-5.324691,-3.775635,8.708709,4.484678,7.084849,-1.784569,-9.958687,6.601359,0.944299,-5.424879,-3.658915,3.758398,5.470558,-9.760557,7.613517,-2.073140,1.366460,4.692514,-3.803974,-1.464275,-3.534078,-5.841045,6.533013,1.161541,1.594635,1.837560,-4.024311,-5.739778,2.009233,8.974458,1.368220,6.485587,1.985804,8.864180,7.024164,9.889347,-6.668990,-0.759181,9.244412,9.089987,-1.287633,-4.512201,9.185766,-5.615546,8.244171,2.480630,2.528711,3.381474,0.059172,-3.580539,-9.668333,8.950223,8.669533,6.977555,2.536424,3.508254,3.858143,-0.738265,-5.908291,-3.622509,-5.621870,-2.146467,-5.894029,-7.243111,0.108353,-1.214749,-5.337170,-6.317581,-3.354718,-7.955537,-9.161787,9.484184,-4.366095,-7.662255,-6.107092,-1.982212,-0.922593,7.469997,7.288348,4.212017,-8.411569,-0.073212,9.447663,1.953574,-0.589849,4.966091,6.388955,4.900826,-9.593066,9.449610,-1.293000,8.098206,-4.264611,1.620790,8.899362,-9.438200,-7.952795,-8.275442,-9.136940,1.703610,-1.799287,8.602814,4.859246,5.966882,4.088530,7.037695,-4.625436,-3.730445,1.506018,-3.262246,-1.453245,-1.059298,-5.381574,-7.148050,-1.371379,5.319315,-3.974272,4.174855,1.849483,7.057678,1.463342,-2.296176,-5.183053,-8.901634,-5.670074,-8.450391,-4.199192,-0.524275,0.903695,9.508706,-3.336402,-7.537510,5.552081,5.181130,-3.927152,5.518339,7.776465,-4.473668,0.037058,5.024762,4.291440,-6.167331,-6.456478,-6.474006,-6.076268,-5.453898,0.049582,4.743023,-4.904244,0.411117,-3.087696,-0.884007,0.424734,9.153550,7.195603,-6.882181,-5.259647,-5.689737,7.868994,-1.979920,-9.530959,9.006733,-6.992017,5.590456,2.181567,3.169661,1.182574,4.974582,-9.533793,3.567139,8.873764,9.571181,5.930053,-8.629637,-4.209557,-9.256338,3.836285,-4.009767,-7.649027,-4.184470,5.297722,1.001937,2.728751,9.741810,7.115772,-6.935663,-4.851654,-8.244663,1.005762,8.862721,-3.830983,4.155722,2.048087,8.218065,2.657547,0.747499,0.695006,3.323991,6.438723,2.736480,-8.956103,2.089121,5.822988,-8.718681,-6.105521,-7.058909,9.747433,0.846168,-1.861197,-8.881923,-7.154516,-2.380975,0.015948,5.941331,-4.117858,3.874550,-9.282639,0.346329,3.053999,-2.826851,5.772197,-6.292572,-4.608568,5.811658,-8.711994,-5.175486,7.001181,-4.169637,7.024878,8.133776,-1.778497,-9.718536,9.695661,-4.194851,8.090475,8.984635,-5.616580,7.577782,6.624542,2.566286,-9.061726,-6.627748,-7.216107,-5.572393,-1.920251,9.422029,0.911833,0.742002,0.128978,8.422992,9.896299,-3.356267,-8.113932,-2.299005,-7.112151,9.146769,-8.487412,0.596205,-9.729704,-1.745439,6.244161,-2.934801,1.669569,-4.968510,2.241276,0.860629,-8.778132,-3.683569,9.145540,-1.522678,-3.411642,-8.009268,4.889468,8.757951,-6.626446,0.238808,1.223176,-9.240256,6.724123,-8.886840,-4.479480,9.703757,9.887731,7.943860,9.239065,-2.587781,9.127709,-7.591241,-7.639732,-7.338930,0.116818,9.036981,2.609124,8.935266,-1.487955,-2.708287,7.861089,6.276321,4.020349,8.818323,-0.142024,9.961042,-9.757106,-9.591616,5.008941,0.533655,-7.429523,-2.793637,-0.518260,0.103977,1.910815,8.368751,0.407144,6.596369,0.114338,4.608283,-5.321759,3.161078,-9.362358,-0.353909,4.320855,-0.924682,-6.738181,6.443757,-7.028528,4.459003,-4.393711,-9.511494,6.510816,3.855525,-6.284662,-4.883704,8.454172,-5.187211,7.732590,4.151965,-5.268470,5.057881,-4.074553,-3.171392,3.539724,-8.654928,-8.347157,2.706986,-8.091862,0.654182,-5.834478,-0.459315,2.600276,0.276061,7.675931,3.744086,2.139934,-3.988962,-0.500365,-2.402702,-9.424924,6.721198,-1.166941,-8.704027,0.112664,8.454717,1.499074,5.493267,-0.109336,4.558219,-1.132905,-7.729360,4.995973,0.867990,8.868740,4.471465,2.755541,-4.707202,-5.221466,-8.429837,-4.896636,0.237994,5.227744,7.883672,0.572225,5.607680,9.928151,0.575006,-2.069972,-2.913200,2.630037,4.804957,4.528361,-5.964036,-2.642015,8.363316,-6.895032,-5.382834,-4.731070,-7.767794,4.081586,7.700629,9.309220,5.944284,4.726083,0.615161,-2.443068,8.446693,-5.424071,6.759279,0.659631,-5.911186,8.658323,2.841026,-1.615962,0.427952,-3.791967,-9.394945,-1.287107,7.270252,-4.399783,-9.257930,-2.954822,-0.547016,3.381340,1.808811,-9.231885,-3.608704,3.859556,1.028967,8.428499,0.060448,3.010319,5.895286,2.198306,-9.415591,0.707605,-3.633015,-7.627013,8.439413,-7.880564,-3.721941,-9.839051,-2.704753,9.004605,3.194512,5.412722,-9.399456,-5.245463,-0.368859,-2.136750,8.995828,9.977759,8.059857,-2.441943,6.180368,-8.667386,-3.733953,-0.042021,-0.948188,-2.943284,6.771612,-5.111200,1.735153,2.227750,-7.079980,-3.528269,-1.897137,-4.727691,7.976864,-9.360312,3.495222,2.708794,1.012852,4.334208,5.423785,0.182788,1.293519,-7.792940,-5.596440,-5.988247,0.621620,2.203942,-4.271791,-0.703493,-6.275605,-8.896951,2.216098,3.834173,2.813386,-9.619543,0.445962,2.275863,1.300234,3.398145,-4.809886,-0.147753,-7.595302,6.123338,3.218096,-5.448903,-4.331456,-6.407813,-2.246032,-0.780076,-6.447774,-8.637520,-9.953544,-7.305575,5.347900,1.200366,3.804099,-8.332763,8.525063,-4.319628,2.584043,9.371858,2.045280,3.542171,5.348313,3.020965,-5.399850,4.502598,-3.180274,-2.647131,9.102514,9.999737,8.428073,-8.968923,2.319251,-3.562707,-8.145839,-9.911483,3.979557,0.746613,1.550808,-8.090610,9.217491,-6.362503,1.042521,2.922694,-1.126368,2.044924,-3.169718,0.438628,-0.511266,-6.526645,1.150514,-6.796786,-7.267812,3.774582,-2.668305,6.489045,-2.879367,3.747175,-3.476058,-0.779799,2.398508,2.839242,-7.639337,5.601317,-4.294053,7.462327,-9.044575,-7.096575,4.186852,-4.672327,1.768067,0.778976,2.784837,3.151545,-7.171022,9.727940,5.086632,5.240391,7.244560,-0.002707,4.859736,1.770850,0.745606,-8.114237,4.496605,-7.819578,1.490275,-4.218813,7.286753,-9.353123,-8.508636,4.123729,-7.190926,5.835544,-8.557833,9.166411,7.532566,4.109207,-1.211589,4.473145,8.555010,-1.946638,-1.558821,3.696793,-2.448358,2.463262,9.812021,-8.024244,0.117442,8.125435,9.434660,8.265889,8.750496,1.471245,2.246187,-5.573591,0.362235,5.972318,2.127321,3.244302,-9.358533,-2.459226,3.218349,-8.175841,-2.242928,-7.963403,-9.180315,-7.914650,9.884679,-4.116755,4.610781,5.882904,5.201992,-4.466877,1.533204,4.849827,-9.372818,-2.058729,-8.931053,-4.746957,-6.679284,2.465471,3.773900,0.287946,4.274485,4.970583,-8.106844,3.423555,6.049409,-9.767496,5.527945,-6.705045,-7.560965,-0.393894,3.020114,2.198454,7.306620,6.103798,2.073067,7.627079,-9.275099,9.600218,9.615539,-2.631523,-4.567011,-9.436251,-7.003845,2.233511,1.755253,-1.012245,-6.076713,-3.807128,-8.734595,-8.269397,-3.436545,-6.795550,-3.354368,7.829815,4.902964,-4.607173,8.910746,7.977103,-7.174202,-9.698002,-7.560264,-6.098359,-9.881451,7.128790,-7.274044,-2.608927,0.489676,5.522393,-5.476044,-2.469316,4.495990,5.821583,6.365894,-3.418690,3.793647,8.596557,8.653672,0.706383,-9.268170,-4.822953,-3.863995,-4.833970,-8.114547,-4.922719,-2.202158,-0.735315,0.891541,-7.605623,-0.661837,-9.723002,2.764451,-7.360817,-2.938984,7.587388,-5.583905,3.285170,-8.447569,-9.667684,-2.489824,-7.678885,1.207830,-9.579251,-8.404602,6.493928,4.371150,4.499988,0.640388,-1.567434,0.859507,8.870593,1.634690,-0.189628,-0.892047,-8.694133,4.293478,6.906433,4.888487,-8.087364,5.870769,1.324655,8.601421,2.445624,-6.296733,-0.465047,3.345095,6.375312,3.055032,6.792697,-9.150663,-0.008314,-8.802067,2.374411,8.012836,7.385648,3.020491,2.447512,0.510651,-0.450693,-1.589511,5.678049,-8.272122,7.619515,4.624473,5.323311,-3.456253,8.639522,3.934458,0.239770,-5.444117,2.256678,4.204024,6.067128,-2.906682,-5.389533,-4.464088,-1.449104,-0.597605,-2.575820,-7.009178,3.116062,3.706394,9.733454,0.563016,2.171927,-6.403166,-5.140685,-9.338896,-1.645870,6.615092,9.972831,5.785492,-7.306737,0.533104,5.448341,-5.600071,7.650108,2.803106,-1.005196,9.831376,7.349652,3.257827,3.090898,6.436276,-7.382260,-2.274080,-1.802252,5.445804,0.355060,-8.760153,6.915798,6.696931,-7.749260,3.216029,-0.676715,0.410601,-6.358223,2.446060,-2.264170,-7.614229,5.191978,-8.380438,-9.534665,-4.157490,6.646849,-1.669466,0.849988,9.668112,-9.051223,-4.483005,1.201104,-5.127886,-0.930070,1.020731,-6.414263,8.818715,-6.019448,-6.904311,-3.937061,-4.794538,9.662245,-3.226298,-7.835159,-0.472792,-7.728845,3.443887,-4.676990,-5.729524,7.012155,9.221215,3.047689,1.507991,2.158618,-5.089683,-6.648214,8.601093,1.782598,-2.574490,3.676716,-8.914841,-0.950522,6.163264,-7.866234,4.293933,9.417958,9.659138,-4.824569,-6.331725,-5.032289,6.518876,7.574211,-3.130502,-5.186299,-3.799422,-2.080158,2.120696,2.636623,4.654421,-8.874820,6.956597,-7.650741,-4.955774,-8.426652,-1.938622,1.739836,7.365386,-3.345558,3.820818,7.459829,-1.584375,3.333584,-1.756963,-7.579310,-7.147392,-0.099703,-3.735114,-1.632240,1.038540,9.909935,-1.550569,5.251347,5.420292,4.509354,-9.521241,-2.825871,-1.579125,4.065097,-0.766074,9.130310,-3.353107,7.046066,-1.429089,-4.056756,-6.767198,8.696052,-9.647441,-5.788252,-7.432470,5.649945,-3.017348,1.788558,9.980090,1.459623,-7.199774,-7.774249,9.579933,2.026697,3.152028,1.614857,0.709751,-5.711748,-2.214525,6.417286,2.849506,5.173651,-6.349166,-7.436975,2.529572,-3.775826,-8.624603,8.976624,-1.315813,8.420585,-6.806341,8.855448,7.722990,4.800829,-7.568538,-7.015731,3.006258,-0.777497,-1.176935,9.278240,-6.889732,7.489603,-0.794798,-8.453106,6.856397,4.910116,8.028283,4.888615,-5.118322,-8.753502,0.362490,-0.206453,-1.729722,1.383057,-8.014447,8.893290,-5.952485,3.102255,4.709634,9.107352,-4.096655,-4.396420,8.293012,-8.204690,-5.648225,-5.501123,-9.689954], dtype = "float32")#candidate|1891|(1344,)|const|float32
call_1890 = relay.TupleGetItem(func_601_call(relay.reshape(const_1891.astype('float32'), [16, 7, 12])), 0)
call_1892 = relay.TupleGetItem(func_603_call(relay.reshape(const_1891.astype('float32'), [16, 7, 12])), 0)
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
call_1894 = relay.TupleGetItem(func_601_call(relay.reshape(const_1891.astype('float32'), [16, 7, 12])), 0)
call_1895 = relay.TupleGetItem(func_603_call(relay.reshape(const_1891.astype('float32'), [16, 7, 12])), 0)
output = relay.Tuple([bop_1886,call_1890,const_1891,call_1894,])
output2 = relay.Tuple([bop_1886,call_1892,const_1891,call_1895,])
func_1901 = relay.Function([var_1884,var_1885,], output)
mod['func_1901'] = func_1901
mod = relay.transform.InferType()(mod)
mutated_mod['func_1901'] = func_1901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1901_call = mutated_mod.get_global_var('func_1901')
var_1903 = relay.var("var_1903", dtype = "int64", shape = (12, 4, 16))#candidate|1903|(12, 4, 16)|var|int64
var_1904 = relay.var("var_1904", dtype = "int64", shape = (12, 4, 16))#candidate|1904|(12, 4, 16)|var|int64
call_1902 = func_1901_call(var_1903,var_1904,)
output = call_1902
func_1905 = relay.Function([var_1903,var_1904,], output)
mutated_mod['func_1905'] = func_1905
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2015 = relay.var("var_2015", dtype = "float64", shape = (1, 16, 5))#candidate|2015|(1, 16, 5)|var|float64
uop_2016 = relay.asinh(var_2015.astype('float64')) # shape=(1, 16, 5)
output = uop_2016
output2 = uop_2016
func_2022 = relay.Function([var_2015,], output)
mod['func_2022'] = func_2022
mod = relay.transform.InferType()(mod)
mutated_mod['func_2022'] = func_2022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2023 = relay.var("var_2023", dtype = "float64", shape = (1, 16, 5))#candidate|2023|(1, 16, 5)|var|float64
func_2022_call = mutated_mod.get_global_var('func_2022')
call_2024 = func_2022_call(var_2023)
output = call_2024
func_2025 = relay.Function([var_2023], output)
mutated_mod['func_2025'] = func_2025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2216 = relay.var("var_2216", dtype = "float32", shape = (13, 4, 13))#candidate|2216|(13, 4, 13)|var|float32
uop_2217 = relay.acos(var_2216.astype('float32')) # shape=(13, 4, 13)
bop_2219 = relay.not_equal(uop_2217.astype('bool'), relay.reshape(var_2216.astype('bool'), relay.shape_of(uop_2217))) # shape=(13, 4, 13)
uop_2227 = relay.acosh(bop_2219.astype('float64')) # shape=(13, 4, 13)
output = uop_2227
output2 = uop_2227
func_2232 = relay.Function([var_2216,], output)
mod['func_2232'] = func_2232
mod = relay.transform.InferType()(mod)
var_2233 = relay.var("var_2233", dtype = "float32", shape = (13, 4, 13))#candidate|2233|(13, 4, 13)|var|float32
output = func_2232(var_2233)
func_2234 = relay.Function([var_2233], output)
mutated_mod['func_2234'] = func_2234
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2331 = relay.var("var_2331", dtype = "float32", shape = ())#candidate|2331|()|var|float32
var_2332 = relay.var("var_2332", dtype = "float32", shape = (5, 12, 7))#candidate|2332|(5, 12, 7)|var|float32
bop_2333 = relay.mod(var_2331.astype('float32'), var_2332.astype('float32')) # shape=(5, 12, 7)
func_912_call = mod.get_global_var('func_912')
func_915_call = mutated_mod.get_global_var('func_915')
const_2339 = relay.const([-1.561346,-8.028969,-4.128100,-2.584110,0.768436,-1.951490,3.293214,-4.220573,7.779808,-7.905603,4.503341,6.225943,9.094516,2.876684,-0.459175,-6.275660,2.029296,5.882107,5.371030,-6.775157,-9.699938,2.115541,3.953663,-4.873043,-9.956373,-6.692343,4.781412,-2.039431,-0.789533,9.779025,-8.304143,5.030517,8.750902,1.945295,4.376135,9.900179,-8.306986,2.469491,-7.550984,-8.464185,-6.827537,-0.272924,5.493131,-6.901437,-6.824928,-5.445148,4.503316,5.173344,-0.673310,5.661205,-3.860088,7.535153,1.058136,-0.624058,-5.388884,-9.525922,-6.479001,8.014731,1.989261,2.760177,7.033826,-7.200676,-8.159108,2.245871,-8.111962,-2.896379,2.749330,5.095352,-7.936833,-6.840981,4.349090,7.625507,-3.020633,5.483927,-5.526543,3.683917,-2.486940,-8.209897,2.321507,0.530403,-1.459258,-0.105657,1.325389,-2.442637,-1.488216,-8.718690,6.839995,6.699720,-1.709446,-1.657853,8.536618,4.467163,8.412669,-6.941289,0.909299,4.090988,9.159254,-8.727259,9.815693,-3.645709,4.539230,5.610088,-9.598134,-5.015571,6.977793,0.532563,1.607143,-3.113721,-4.170613,2.634844,-0.696069,9.447888,6.697306,-1.969157,-3.751894,-8.089505,-4.274569,0.291099,-6.797497,2.499457,-8.889176,-6.204244,4.601006,-0.818505,-2.816140,-2.472216,-4.795078,-1.651531,9.431880,6.618230,-7.413040,9.446540,4.544622,7.968949,0.658329,-6.942223,-2.712590,7.758334,5.371135,4.439523,6.363098,3.900904,-6.434233,5.118491,-9.253462,0.938484,-4.675674,8.430118,7.036829,0.567199,-7.981131,-7.297339,3.903144,-7.428206,-4.609763,-8.881208,3.160373,9.430716,5.238810,7.808659,1.780268,-2.198993,-0.216772,-5.311784,6.140581,-1.068723,8.073416,-3.644730,-3.067023,5.032422,-5.324705,-5.892307,2.797815,4.030216,0.628307,9.819040,-0.253770,-3.143970,4.179290,-1.450057,5.611303,-6.232083,-2.595899,0.693709,-7.628163,6.672693,-0.344189,-7.487445,7.298584,-4.299567,8.690520,-4.231864,-7.666743,-0.087444,1.359469,-2.750421,7.492221,8.571749,8.321054,-3.989573,2.829944,-5.060645,5.982732,-0.491042,4.890237,4.474953,-7.460587,-3.437926,9.382092,-9.314284,5.692967,8.991380,-7.963186,-6.072151,3.344284,7.945490,-4.437572,-2.923902,-7.592283,9.264449,6.847785,-1.946326,-0.305763,-7.247660,9.971199,-4.419241,1.178534,2.613611,-9.974009,3.629908,-4.658427,-7.726034,2.945901,2.665865,5.627251,6.948136,4.051123,-8.219141,-8.434493,4.904507,-7.807119,-7.740611,5.125827,7.970748,-1.809795,4.456525,3.198640,0.468819,-8.448905,-9.830042,8.312868,2.234024,-9.496174,-0.498014,-0.493557,-1.235866,9.979492,3.855807,4.178097,-3.825642,9.767613,-6.727994,-0.165006,0.484703,-9.994653,-1.740575,4.886662,1.154398,-9.592096,-6.395596,7.831170,0.747908,-7.054724,-0.340442,8.885368,1.175994,-2.482272,0.171658,9.503550,-7.210911,-2.085761,-4.584096,-5.032039,5.045766,8.884169,2.928943,3.932784,-3.251064,7.354914,9.191140,0.612890,-2.473839,-8.851934,-5.469071,-1.327541,-9.257121,-4.690944,5.130532,-6.444774,6.897948,-4.358900,-1.995915,9.656842,7.395534,3.029431,1.614271,1.918872,1.624126,5.119995,-5.554496,-2.078972,-0.517740,8.551414,9.738481,1.785498,7.736786,8.512650,2.225487,-7.574792,-5.347577,9.414128,6.106482,6.144981,-2.623568,-9.716185,-5.808440,7.916568,3.667855,-0.085376,-4.050572,4.910446,-0.780046,-6.637800,5.094447,-4.111040,-7.272491,9.371323,6.125991,-4.015704,6.905911,-3.741098,2.297913,0.350226,-3.303910,5.299173,0.671818,-8.023339,-4.674676,8.965147,-8.879377,2.920567,5.386380,-2.755176,7.757483,-6.327591,1.269024,-9.920237,1.077910,-0.689495,-5.698996,-2.178264,-9.727319,5.799097,5.648915,4.180969,-3.110001,5.455270,0.952856,-2.109201,-1.042762,-4.432791,5.736610,9.327663,-5.426641,-9.691810,7.663510,-6.949586,-6.884783,-5.080118,-8.169087,7.740685,-6.984438,-2.809542,-4.276600,-8.915241,5.832310,-6.344916,-5.007968,9.574869,6.754357,2.125806,7.665968,7.355872,9.336723,4.528524,8.089671,-4.602374,1.599260,5.100760,-8.715656,8.259563,-2.822229,-8.475971,7.558760,9.677959,-8.737011,8.117977,-0.745978,2.520741,4.807030,1.979157,9.897747,-3.467325,-9.877912,-7.852171,-6.020251,1.652294,1.479444,6.189457,4.481272,-6.775287,6.900782,9.961871,-7.339666,3.177535,-8.980173,-3.988609,-0.284491,-2.393207,-5.723282,2.581093,-7.133641], dtype = "float64")#candidate|2339|(432,)|const|float64
call_2338 = relay.TupleGetItem(func_912_call(relay.reshape(const_2339.astype('float64'), [16, 3, 9])), 0)
call_2340 = relay.TupleGetItem(func_915_call(relay.reshape(const_2339.astype('float64'), [16, 3, 9])), 0)
func_1621_call = mod.get_global_var('func_1621')
func_1624_call = mutated_mod.get_global_var('func_1624')
var_2342 = relay.var("var_2342", dtype = "float32", shape = (48,))#candidate|2342|(48,)|var|float32
call_2341 = func_1621_call(relay.reshape(var_2342.astype('float32'), [1, 4, 12]))
call_2343 = func_1621_call(relay.reshape(var_2342.astype('float32'), [1, 4, 12]))
output = relay.Tuple([bop_2333,call_2338,const_2339,call_2341,var_2342,])
output2 = relay.Tuple([bop_2333,call_2340,const_2339,call_2343,var_2342,])
func_2344 = relay.Function([var_2331,var_2332,var_2342,], output)
mod['func_2344'] = func_2344
mod = relay.transform.InferType()(mod)
mutated_mod['func_2344'] = func_2344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2344_call = mutated_mod.get_global_var('func_2344')
var_2346 = relay.var("var_2346", dtype = "float32", shape = ())#candidate|2346|()|var|float32
var_2347 = relay.var("var_2347", dtype = "float32", shape = (5, 12, 7))#candidate|2347|(5, 12, 7)|var|float32
var_2348 = relay.var("var_2348", dtype = "float32", shape = (48,))#candidate|2348|(48,)|var|float32
call_2345 = func_2344_call(var_2346,var_2347,var_2348,)
output = call_2345
func_2349 = relay.Function([var_2346,var_2347,var_2348,], output)
mutated_mod['func_2349'] = func_2349
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2687 = relay.var("var_2687", dtype = "bool", shape = ())#candidate|2687|()|var|bool
var_2688 = relay.var("var_2688", dtype = "bool", shape = (1, 16))#candidate|2688|(1, 16)|var|bool
bop_2689 = relay.logical_and(var_2687.astype('bool'), var_2688.astype('bool')) # shape=(1, 16)
func_998_call = mod.get_global_var('func_998')
func_1002_call = mutated_mod.get_global_var('func_1002')
const_2713 = relay.const([-4,9,-9,10,-2,-2,7,-5,3,-8,-4,6,5,-5,9,-5,10,-10,2,-9,-5,3,10,-8,5,-5,-9,1,7,6,-5,1,-7,-6,-1,5,5,9,5,10,3,9,8,-5,5,3,6,-5,6,-4,-6,2,7,9,-9,2,-6,-4,-10,-1,2,-4,1,3,-3,-2,-4,-4,-8,-2,4,6,4,4,9,-6,-1,-3,-2,-8,1,-7,6,5,6,10,-1,10,6,-9,9,-10,-8,5,-9,-8,-4,-5,-6,-4,-2,-2,3,-8,6,-6,5,-9,10,4,6,-10,-6,-5,-9,-5,-5,4,9,-7,-1,1,-2,8,4,-1,-3,5,10,-2,-8,10,5,1,7,-10,10,4,-2,4,-6,10,-10,1,-4,-8,1,6,-1,-10,5,-7,-1,-9,-5,1,-9,-3,6,8,-6,-4,4,10,7,2,-8,-8,-1,-4,-9,-10,-5,-9,4,3,-4,6,7,3,-8,5,-5,-6,10,-5,-2,7,-7,-10,-4,2,10,-7,-5,-2,-5,-8,-1,-9,2,-8,-8,-4,3,-7,-9,-6,6,-9,-2,-2,7,9,4,-7,-1,-3,-3,-5,2,-3,8,3,3,-3,-10,-3,-6,-7,10,7,10,-10,6,7,-7,1,10,-9,4,7,10,-5,2,-5,5,-4,1,-7,-1,-4,-7,-6,-9,-9,1,-8,-7,7,4,-2,5,3,-3,-2,-7,5,-1,2,-9,4,-8,-1,5,4,2,-8,3,-3,-2,-5,1,-2,2,-4,-6,1,1,6,-9,-7,6,8,-7,-8,-7,-7,-2,5,-4,6,-7,1,-8,8,-7,10,2,-5,-10,7,7,-8,-4,4,1,-9,7,-10,9,4,-3,-1,4,-2,-10,-4,5,-7,-6,-9,3,7,10,-4,-3,6,3,-1,-3,1,-3,10,8,7,10,-3,3,-10,-5,-3,5,6,-5,4,1,-3,4,-2,-3,-8,-4,4,9,2,2,-4,-5,4,-9,-9,-8,7,-8,-4,-8,1,-1,1,1,-6,1,10,4,5,4,6,-8,2,1,-6,8,1,2,-1,-9,6,9,-3,9,6,4,3,-4,8,1,-4,-1,10,9,8,8,-8,-9,-10,1,-2,-10,6,10,-1,8,-1,10,-4,-3,-9,-4,8,7,4,5,-10,-8,1,2,10,7,1,-3,10,-5,6,3,-5,-1,-8,-2,3,7,-10,8,-9,1,4,-4,9,3,-3,9,-9,-6,7,5,1,-6,1,1,8,-1,-8,-7,6,-2,6,-6,2,-2,-3,-10,7,5,9,7,10,10,-4,-4,-6,-9,8,9,-9,-10,8,-5,6,-2,-6,2,8,3,-10,-4,3,-1,1,2,1,-2,-10,3,-7,-10,-5,-10,-6,-8,-9,-3,6,-5,5,6,-7,-6,-5,4,-5,8,9,-6,-10,1,5,-4,-1,-7,-6,4,-3,-2,-1,-2,-1,8,-8,-4,7,10,3,-4,-2,-1,-5,-2,7,-7,-8,-5,-1,8,-5,10,10,-3,-3,-7,7,-3,-3,1,9,-8,-10,8,6,-5,-10,5,4,-5,5,3,-10,-6,-3,4,-8,-3,-7,-2,-8,-6,-1,-2,-8,-3,1,-7,-4,5,-2,1,5,-10,6,-7,-8,-5,-3,3,4,-4,-2,5,6,5,-2,1,2,-10,-3,5,10,-8,6,2,-7,-4,-9,-7,10,-6,10,-8,7,3,4,1,5,-5,-3,1,-5,-1,6,3,3,8,5,8,-7,3,-6,-5,6,-3,1,10,-1,-2,2,6,-3,9,-2,3,7,-3,10,5,10,-6,-4,-6,-9,5,-4,-5,5,8,-2,-9,4,-3,7,-4,-5,-7,7,5,2,7,9,4,9,-1,10,9,1,-2,-9,-7,-7,3,-8,1,-6,-7,-10,9,2,10,2,-7,1,-5,-6,-5,7,-6,-6,-8,-5,9,5,-7,-2,8,-8,8,4,2,-6,-2,4,-1,-7,5,1,9,4,2,5,-9,-6,-2,2,4,-10,-2,-6,-7,1,7,5,-9,-4,-4,-2,-3,2,3,-9,2,3,6,-7,2,-4,-2,-7,-10,2,1,9,-6,-9,-2,8,-10,8,-2,-10,2,5,4,5,-4,-10,-4,-9,9,-3,-8,7,-4,3,-9,-10,6,-7,7,8,10,6,-6,-6,5,-8,-10,1,7,10,9,-8,-5,-9,8,6,5,4,9,6,1,6,-6,-7,-3,10,-7,8,5,6,5,1,-4,-1,7,6,1,1,-1,4,-5,7,-3,4,4,-1,-4,7,9,10,5,-6,-7,6,5,-1,4,-10,3,-7,8,4,-2,9,-10,9,-2,-2,2,-7,9,7,6,-2,-3,-7], dtype = "int64")#candidate|2713|(882,)|const|int64
call_2712 = relay.TupleGetItem(func_998_call(relay.reshape(var_2687.astype('int64'), []), relay.reshape(const_2713.astype('int64'), [9, 14, 7]), ), 0)
call_2714 = relay.TupleGetItem(func_1002_call(relay.reshape(var_2687.astype('int64'), []), relay.reshape(const_2713.astype('int64'), [9, 14, 7]), ), 0)
func_2344_call = mod.get_global_var('func_2344')
func_2349_call = mutated_mod.get_global_var('func_2349')
const_2717 = relay.const([6.667254,-3.073969,-8.719899,-1.848556,-5.139841,0.889626,-2.085498,-8.959844,2.099436,-1.465901,-2.874203,5.924858,-9.240593,1.797675,4.529635,-2.992727,-5.007447,-4.075348,6.844371,7.861176,2.883645,0.287028,-0.682544,5.853187,0.665024,4.132620,-3.595602,-8.894944,0.667648,6.345610,-0.318405,7.454866,-3.235716,-6.733285,-1.512998,4.816456,-1.394812,7.503064,-5.859814,-2.107300,-2.001119,-6.826992,1.161843,-1.595800,-9.702542,6.878948,1.484328,-3.064059,-0.620275,5.375979,-1.775090,4.501438,-8.025604,9.172726,6.192429,-6.159191,0.583151,-2.848404,9.497462,4.615234,-2.666821,1.663199,7.209162,-7.987698,-2.652099,-7.836014,-4.774825,7.581112,-9.976083,-9.367109,5.190789,-4.599027,8.265034,9.248586,2.316974,-5.260589,9.637575,2.535589,4.482876,8.323168,0.857185,-5.923840,7.648385,-4.436700,5.872366,8.847448,4.659190,9.227293,-3.628683,-0.553148,-1.809515,-8.411215,-1.179723,-2.720509,5.811426,8.020496,-6.547297,-4.324114,6.578382,9.065509,5.145983,8.519147,-8.872408,6.840047,7.304367,-7.740592,9.853190,-4.910365,-0.846544,0.307714,-4.430868,4.636245,0.994756,-4.708459,-6.796138,6.898164,-8.049098,2.004267,2.374551,7.965738,-7.284925,-5.630232,-0.135494,8.157218,-6.705266,-0.256227,3.454986,2.061557,-3.468020,5.571247,4.395101,-3.819567,-2.188545,0.165909,4.464878,-5.396693,-4.058682,9.206673,8.532844,-9.553743,2.012159,-9.662370,-6.306855,3.467425,6.319600,4.139079,7.348629,-5.765872,0.586462,-8.527297,4.466622,-1.436929,5.699941,-6.490774,-2.304585,-0.230360,-8.510934,-2.269117,-2.344686,9.062558,2.573548,3.231549,-9.645433,-3.550966,8.720471,-6.952770,6.512897,-3.348514,-2.860586,-8.673868,1.793169,2.913329,4.872504,-1.975715,0.703519,-5.037275,6.184227,-1.769701,0.170170,9.030810,2.689619,8.975029,2.087798,8.816327,0.181576,-6.804591,2.963496,-4.914000,-7.713602,-9.786600,-1.781209,-8.562562,-2.099512,4.327928,3.991992,-1.861401,4.743477,8.471436,-7.827629,-0.945071,-5.148361,-8.924140,-6.824822,8.201193,-5.330791,1.694841,-8.635550,-8.625564,-9.392308,-9.299897,-5.220554,-4.931214,0.098299,-0.106443,-2.754773,7.557666,-9.473437,-9.275621,-8.997484,9.172189,-9.379239,1.268819,-3.904190,2.732996,6.180848,-4.764259,9.513103,4.799010,-2.474526,-9.875558,1.717201,-5.985809,1.615494,-5.294672,-7.062329,-6.545891,-1.506459,8.809629,4.688713,5.411115,-8.897185,8.683448,-0.088343,-9.157680,-3.563633,-6.442036,-9.278235,7.777159,2.256153,7.975178,2.012855,-1.048160,1.640941,-8.743078,9.865301,-4.262920,5.820767,4.689361,-5.746976,7.665048,-0.116658,-8.084810,-3.698754,-2.640529,-2.126383,5.726802,-7.928757,2.124482,0.446430,-5.281232,-4.144753,-8.789866,-2.502925,2.356170,-5.256676,-9.723015,-2.990236,6.859234,-3.311073,2.175940,-5.577077,7.884584,-6.016262,-2.531962,-5.786930,-8.447037,0.629189,6.888768,-7.610461,3.689010,6.778396,2.185136,-4.807081,-1.680569,5.313529,6.028797,-5.633884,-3.924501,-4.617596,-7.463692,4.549035,6.302569,2.646157,2.174444,9.436603,-1.264629,-7.431577,2.775539,8.373916,0.092145,7.636054,-1.098003,7.987125,-1.232164,5.195314,1.771060,-6.277992,-9.370583,9.671864,6.340244,-3.425499,2.258468,-6.660180,2.454173,-4.673631,-4.471289,-1.315258,2.240814,0.229121,4.822894,-0.413290,1.672932,9.679386,-0.988162,6.997375,7.311292,-4.295613,-1.430394,2.319095,-9.465443,4.808496,6.163805,8.925070,5.422199,0.949008,7.807038,6.697414,-7.926162,-0.922434,0.558890,-3.927377,3.696203,4.518120,7.461154,-7.344799,-3.125140,-1.651248,6.232965,-9.081292,-0.005575,8.065744,6.453873,6.684494,6.230885,8.765590,9.690732,5.789116,-0.890721,5.314425,-2.644404,6.820875,4.862365,-0.905651,6.242530,7.862993,-2.520052,9.360396,-6.167890,4.290449,3.906054,-6.554446,4.363448,3.744249,9.927843,5.445347,-0.735125,-7.446655,6.134106,-7.320259,-0.750414,-6.844940,-2.696176,-6.261319,-1.840572,-6.828385,-7.559830,4.023217,5.202092,6.437314,9.269690,-3.808649,8.878982,1.811476,2.805187,2.001117,0.667168,2.728497,-2.844026,-1.734274,6.911069,-9.286857,-7.217684,5.925364,-1.036156,-2.471077,-1.882492,-8.427219,8.625820,-3.007019,1.730446], dtype = "float32")#candidate|2717|(420,)|const|float32
var_2718 = relay.var("var_2718", dtype = "float32", shape = (48,))#candidate|2718|(48,)|var|float32
call_2716 = relay.TupleGetItem(func_2344_call(relay.reshape(var_2687.astype('float32'), []), relay.reshape(const_2717.astype('float32'), [5, 12, 7]), relay.reshape(var_2718.astype('float32'), [48,]), ), 4)
call_2719 = relay.TupleGetItem(func_2349_call(relay.reshape(var_2687.astype('float32'), []), relay.reshape(const_2717.astype('float32'), [5, 12, 7]), relay.reshape(var_2718.astype('float32'), [48,]), ), 4)
func_1621_call = mod.get_global_var('func_1621')
func_1624_call = mutated_mod.get_global_var('func_1624')
call_2720 = func_1621_call(relay.reshape(var_2718.astype('float32'), [1, 4, 12]))
call_2721 = func_1621_call(relay.reshape(var_2718.astype('float32'), [1, 4, 12]))
output = relay.Tuple([bop_2689,call_2712,const_2713,call_2716,const_2717,var_2718,call_2720,])
output2 = relay.Tuple([bop_2689,call_2714,const_2713,call_2719,const_2717,var_2718,call_2721,])
func_2727 = relay.Function([var_2687,var_2688,var_2718,], output)
mod['func_2727'] = func_2727
mod = relay.transform.InferType()(mod)
var_2728 = relay.var("var_2728", dtype = "bool", shape = ())#candidate|2728|()|var|bool
var_2729 = relay.var("var_2729", dtype = "bool", shape = (1, 16))#candidate|2729|(1, 16)|var|bool
var_2730 = relay.var("var_2730", dtype = "float32", shape = (48,))#candidate|2730|(48,)|var|float32
output = func_2727(var_2728,var_2729,var_2730,)
func_2731 = relay.Function([var_2728,var_2729,var_2730,], output)
mutated_mod['func_2731'] = func_2731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2764 = relay.var("var_2764", dtype = "float64", shape = (10, 11, 13))#candidate|2764|(10, 11, 13)|var|float64
uop_2765 = relay.sqrt(var_2764.astype('float64')) # shape=(10, 11, 13)
uop_2770 = relay.asin(var_2764.astype('float64')) # shape=(10, 11, 13)
output = relay.Tuple([uop_2765,uop_2770,])
output2 = relay.Tuple([uop_2765,uop_2770,])
func_2772 = relay.Function([var_2764,], output)
mod['func_2772'] = func_2772
mod = relay.transform.InferType()(mod)
var_2773 = relay.var("var_2773", dtype = "float64", shape = (10, 11, 13))#candidate|2773|(10, 11, 13)|var|float64
output = func_2772(var_2773)
func_2774 = relay.Function([var_2773], output)
mutated_mod['func_2774'] = func_2774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2829 = relay.var("var_2829", dtype = "uint64", shape = (10, 3, 2))#candidate|2829|(10, 3, 2)|var|uint64
var_2830 = relay.var("var_2830", dtype = "uint64", shape = (10, 3, 2))#candidate|2830|(10, 3, 2)|var|uint64
bop_2831 = relay.subtract(var_2829.astype('uint64'), relay.reshape(var_2830.astype('uint64'), relay.shape_of(var_2829))) # shape=(10, 3, 2)
func_2344_call = mod.get_global_var('func_2344')
func_2349_call = mutated_mod.get_global_var('func_2349')
var_2838 = relay.var("var_2838", dtype = "float32", shape = ())#candidate|2838|()|var|float32
var_2839 = relay.var("var_2839", dtype = "float32", shape = (420,))#candidate|2839|(420,)|var|float32
const_2840 = relay.const([-8.084234,1.016466,7.798236,0.040143,-1.356751,7.858869,2.568303,-3.893333,7.066424,5.061907,1.320708,-4.575981,-3.388328,7.122156,4.583928,-3.143008,2.534388,5.617320,-4.150608,6.777194,-8.481009,7.621573,0.667599,8.335130,-7.952442,-5.231524,-5.786593,1.082747,-7.361867,-5.978950,4.571049,3.291983,-8.097050,-0.562036,-2.795880,2.009787,-5.767636,-7.617192,7.045417,-5.174127,-1.526444,1.841275,-4.084783,7.918423,1.273204,-6.189966,6.100718,5.483887], dtype = "float32")#candidate|2840|(48,)|const|float32
call_2837 = relay.TupleGetItem(func_2344_call(relay.reshape(var_2838.astype('float32'), []), relay.reshape(var_2839.astype('float32'), [5, 12, 7]), relay.reshape(const_2840.astype('float32'), [48,]), ), 0)
call_2841 = relay.TupleGetItem(func_2349_call(relay.reshape(var_2838.astype('float32'), []), relay.reshape(var_2839.astype('float32'), [5, 12, 7]), relay.reshape(const_2840.astype('float32'), [48,]), ), 0)
output = relay.Tuple([bop_2831,call_2837,var_2838,var_2839,const_2840,])
output2 = relay.Tuple([bop_2831,call_2841,var_2838,var_2839,const_2840,])
func_2845 = relay.Function([var_2829,var_2830,var_2838,var_2839,], output)
mod['func_2845'] = func_2845
mod = relay.transform.InferType()(mod)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mutated_mod.get_global_var('func_2845')
var_2847 = relay.var("var_2847", dtype = "uint64", shape = (10, 3, 2))#candidate|2847|(10, 3, 2)|var|uint64
var_2848 = relay.var("var_2848", dtype = "uint64", shape = (10, 3, 2))#candidate|2848|(10, 3, 2)|var|uint64
var_2849 = relay.var("var_2849", dtype = "float32", shape = ())#candidate|2849|()|var|float32
var_2850 = relay.var("var_2850", dtype = "float32", shape = (420,))#candidate|2850|(420,)|var|float32
call_2846 = func_2845_call(var_2847,var_2848,var_2849,var_2850,)
output = call_2846
func_2851 = relay.Function([var_2847,var_2848,var_2849,var_2850,], output)
mutated_mod['func_2851'] = func_2851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2870 = relay.var("var_2870", dtype = "float32", shape = (13, 15, 7))#candidate|2870|(13, 15, 7)|var|float32
uop_2871 = relay.atanh(var_2870.astype('float32')) # shape=(13, 15, 7)
func_2344_call = mod.get_global_var('func_2344')
func_2349_call = mutated_mod.get_global_var('func_2349')
const_2884 = relay.const(1.981590, dtype = "float32")#candidate|2884|()|const|float32
var_2885 = relay.var("var_2885", dtype = "float32", shape = (210, 2))#candidate|2885|(210, 2)|var|float32
const_2886 = relay.const([0.688092,6.567173,-8.154205,-6.298839,5.354975,8.758984,2.606412,7.624256,0.716512,6.031208,0.154256,-4.903058,2.005759,-9.549608,-8.348445,-1.564012,4.661854,0.170624,-0.880022,-1.858194,-6.808871,2.311166,-6.165320,4.669809,3.187624,-4.641630,-3.642903,8.821300,-6.185984,-8.219764,2.854009,0.596447,9.800996,-6.576617,-7.595536,6.271858,3.327881,-2.383473,-1.773966,7.200537,0.074180,-5.193666,1.870683,5.078478,2.497915,-6.945408,-8.554300,-4.994096], dtype = "float32")#candidate|2886|(48,)|const|float32
call_2883 = relay.TupleGetItem(func_2344_call(relay.reshape(const_2884.astype('float32'), []), relay.reshape(var_2885.astype('float32'), [5, 12, 7]), relay.reshape(const_2886.astype('float32'), [48,]), ), 3)
call_2887 = relay.TupleGetItem(func_2349_call(relay.reshape(const_2884.astype('float32'), []), relay.reshape(var_2885.astype('float32'), [5, 12, 7]), relay.reshape(const_2886.astype('float32'), [48,]), ), 3)
const_2901 = relay.const([[[-2.390706,-2.313408,0.390330,2.248207,4.642760,9.871304,3.179518,2.626519,-8.236766,2.612571,-2.191162,-4.740955],[-5.444355,5.712586,-6.323070,5.192884,-2.355578,-6.584504,-3.661612,8.183170,-0.565223,7.033792,-3.951512,-0.190602],[8.021255,7.778668,3.783322,-5.258794,-1.020194,3.475594,-1.654204,-1.900446,-1.389141,-6.595008,-3.530415,-7.186459],[4.538427,4.748638,-8.646545,-8.867026,2.571986,-1.371971,-1.060987,-3.443280,-1.337054,5.526094,-3.787304,1.808778]],[[-2.776518,4.653439,5.429783,-9.904541,5.536802,-2.357636,5.964558,-7.533326,-6.870905,5.257588,0.109455,3.936383],[9.303970,2.930750,-5.971081,-1.438685,-3.600320,-9.445849,1.361245,-0.223256,-8.384367,1.333565,-2.148561,-3.442694],[-0.257473,2.959692,2.667310,0.588861,3.361822,-6.779386,7.063181,-1.521068,7.110725,3.845356,7.314651,7.269792],[-7.955873,7.659600,-0.067065,6.332572,-8.362865,1.972670,2.093936,-4.233373,5.610971,9.063015,-0.899218,-1.753773]],[[-4.184177,-9.772876,-2.946134,3.891853,-1.231340,7.376341,-7.050022,4.161819,3.860350,-7.560745,8.147584,5.507924],[9.494955,1.509472,-9.573800,2.575626,5.396883,7.633710,-5.786221,-4.596788,1.018499,2.295018,-1.357539,-2.428207],[7.891546,9.870019,-6.359311,9.953822,7.461869,7.254575,8.713825,-4.139230,-4.436513,-3.089856,-4.167552,-4.484621],[-3.537599,4.676760,-1.748845,-8.078594,-2.139411,6.418986,-6.569392,-6.338311,5.238950,7.764818,3.767212,-2.190590]],[[1.882392,-1.982678,3.758477,-0.785799,-8.709449,2.585183,9.022639,8.290081,6.499861,-1.372914,0.272019,9.714118],[-3.789661,0.700150,-3.441535,-9.770973,-9.402727,7.145329,9.646553,5.709581,3.847780,-8.431964,-9.304178,-2.627428],[-0.484210,6.426309,5.909197,4.394136,-9.018484,4.617792,-7.840783,-5.884483,-7.296255,-0.511678,7.455263,-1.194255],[-8.113607,-4.902340,-6.798522,-0.804321,5.272298,-7.774859,-9.507108,0.484433,5.495438,8.984494,-5.294884,-1.420391]],[[4.034829,-6.252068,2.957106,6.319605,4.265796,-6.750692,-4.568344,1.262325,1.603178,8.065857,3.024896,-3.009849],[7.301342,-3.371794,6.507624,2.092782,7.343979,-1.599114,-8.224102,6.215972,1.716316,9.296993,-6.280592,6.565077],[-6.274862,-0.895528,9.912623,-3.861786,-3.890456,-3.108958,-5.722538,0.439003,4.872984,-6.016198,5.464107,-9.565317],[6.845496,9.609731,-9.284036,5.502708,1.855974,-5.539731,-2.201619,2.764135,6.375656,3.299165,1.220476,0.574294]],[[-8.968520,-5.748858,4.116554,-5.376022,-1.601088,4.833363,-8.676240,-0.158224,-8.487692,5.151638,1.474068,2.616247],[-2.609975,-0.686553,1.761680,7.511656,2.386919,-7.123130,-3.943567,-3.284958,-3.184692,5.763096,-8.642028,-9.198087],[-1.304838,-6.298806,-5.976556,-7.771324,-5.075965,4.786437,-8.325018,2.759882,-2.357411,6.220516,-8.691203,-2.847477],[7.924896,0.775549,1.417152,-0.166391,9.637126,4.915807,-8.064255,7.966876,5.700742,8.431945,3.280392,8.263211]],[[-2.158874,-6.433681,-3.453717,8.252027,-5.967773,-0.017101,-7.776368,9.937043,3.738312,9.279621,-1.081730,-6.738655],[3.402060,9.012666,-4.261175,4.360076,8.601608,5.973964,-5.433408,8.592212,9.756390,-1.731668,-1.219968,-3.318304],[-8.726417,-1.308439,-7.096970,-8.273902,-5.630686,-0.738179,0.313336,9.836172,0.293868,-4.259339,4.092630,-4.229656],[5.461917,-7.169058,-2.798495,8.573609,-5.835486,9.432820,-9.422774,5.574419,4.159746,8.606660,2.301114,-8.730670]],[[2.540883,-1.889742,-4.726181,-6.344923,3.761440,-3.501410,9.196569,-8.843978,5.794677,-0.047248,-9.516896,-4.062745],[0.415418,-7.975113,-4.947667,0.519414,5.685643,-4.528961,-3.744882,-9.433835,7.669198,8.982775,-4.117442,-4.903219],[1.487610,-3.397413,-2.350752,5.777784,-4.020587,-9.973485,-6.225797,1.683069,2.025883,-3.956873,-2.551764,0.034055],[3.605353,-2.548972,8.653606,2.317035,0.441917,-9.164289,-4.733609,6.199333,3.482407,8.321204,1.969521,9.997231]],[[-4.522026,-6.109513,-5.841492,-3.838895,-0.289597,-5.456147,6.499476,-6.623806,7.934957,4.980823,-4.698441,-0.599561],[-7.673403,-5.673840,-6.196492,7.206574,5.931708,8.143354,4.818133,4.498601,-5.852843,8.983905,5.636855,-7.885028],[-8.754306,-4.331038,-5.298139,-0.658056,-9.175673,-2.902748,5.457179,4.958846,2.047758,-0.548291,-8.535461,-4.161717],[7.609734,-0.451200,8.189662,4.760320,-1.483640,1.887406,5.149130,-4.767623,-1.592833,-2.392793,-0.537031,-9.420610]],[[9.726488,-1.776840,-6.344551,-9.130461,2.989688,-7.871253,-8.102748,-8.459945,0.838035,8.732821,-2.049296,-7.356214],[7.641494,-0.551725,-4.052324,6.390931,7.550805,3.191530,5.752293,-7.553986,-7.300952,3.897409,-8.096390,-3.789180],[0.855029,-0.240838,5.649204,-9.826581,-1.032945,-3.499784,6.829486,-5.656622,6.652339,-7.803458,8.071605,8.262090],[4.678839,-2.678291,0.814989,1.249579,8.105750,-7.287102,-0.552853,7.532699,0.199063,6.346571,1.754926,7.670418]],[[2.316583,0.553148,-7.288223,7.749640,-2.775181,-8.972692,-2.119759,-8.235760,1.536903,-3.082573,-9.090194,-1.895464],[9.789387,-5.962160,3.028672,6.893175,-7.947219,-0.137638,-0.865848,-6.130656,8.614394,-4.907216,8.426922,3.868228],[4.831013,-3.734361,9.403387,6.652467,6.808194,-2.581694,2.158040,7.881184,-3.301223,4.232981,1.972971,2.267137],[-1.830165,-1.739305,5.693434,-7.746102,5.913270,-8.263592,-1.376600,4.683326,0.120081,-9.576071,-0.617725,-3.464571]],[[1.326155,2.108661,-6.149483,-8.306568,-7.464236,-1.067508,-0.154710,-7.491223,3.545755,4.347298,-8.519824,9.325393],[-8.857271,-4.480946,-7.868867,2.448053,-8.183937,-6.832263,-1.338464,2.799643,-7.449730,-2.231984,2.985253,-5.239964],[2.685033,-8.682364,0.442846,3.504240,0.490483,-5.822004,6.723123,-7.792897,-6.051539,-6.006557,1.327187,0.448594],[0.888448,-4.614184,-8.424142,9.752834,-8.580576,3.998013,-3.558911,6.752206,-7.720479,2.627979,-7.464913,-6.259194]],[[-7.848894,0.274892,-2.772190,6.082049,-4.431394,-1.400383,3.853541,-5.326798,2.234915,1.260831,-5.506364,-9.760165],[-1.369975,-6.562275,3.052628,2.654856,9.251233,1.730331,4.783886,8.909909,-5.081030,-1.082786,-7.597208,-0.118592],[-9.058804,4.891543,-7.673222,0.999336,2.994163,7.521355,-4.330746,-6.602005,9.725663,-0.668587,1.955938,-8.915048],[2.879901,3.763413,6.171249,-1.775876,1.259687,8.290230,1.879199,-4.828538,-8.345478,0.522234,-4.561151,3.326053]]], dtype = "float32")#candidate|2901|(13, 4, 12)|const|float32
bop_2902 = relay.left_shift(call_2883.astype('uint8'), relay.reshape(const_2901.astype('uint8'), relay.shape_of(call_2883))) # shape=(13, 4, 12)
bop_2905 = relay.left_shift(call_2887.astype('uint8'), relay.reshape(const_2901.astype('uint8'), relay.shape_of(call_2887))) # shape=(13, 4, 12)
uop_2920 = relay.atan(uop_2871.astype('float64')) # shape=(13, 15, 7)
output = relay.Tuple([const_2884,var_2885,const_2886,bop_2902,uop_2920,])
output2 = relay.Tuple([const_2884,var_2885,const_2886,bop_2905,uop_2920,])
func_2925 = relay.Function([var_2870,var_2885,], output)
mod['func_2925'] = func_2925
mod = relay.transform.InferType()(mod)
mutated_mod['func_2925'] = func_2925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2925_call = mutated_mod.get_global_var('func_2925')
var_2927 = relay.var("var_2927", dtype = "float32", shape = (13, 15, 7))#candidate|2927|(13, 15, 7)|var|float32
var_2928 = relay.var("var_2928", dtype = "float32", shape = (210, 2))#candidate|2928|(210, 2)|var|float32
call_2926 = func_2925_call(var_2927,var_2928,)
output = call_2926
func_2929 = relay.Function([var_2927,var_2928,], output)
mutated_mod['func_2929'] = func_2929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3020 = relay.var("var_3020", dtype = "uint64", shape = (9, 11, 9))#candidate|3020|(9, 11, 9)|var|uint64
var_3021 = relay.var("var_3021", dtype = "uint64", shape = (9, 11, 9))#candidate|3021|(9, 11, 9)|var|uint64
bop_3022 = relay.left_shift(var_3020.astype('uint64'), relay.reshape(var_3021.astype('uint64'), relay.shape_of(var_3020))) # shape=(9, 11, 9)
func_2772_call = mod.get_global_var('func_2772')
func_2774_call = mutated_mod.get_global_var('func_2774')
var_3034 = relay.var("var_3034", dtype = "float64", shape = (1430,))#candidate|3034|(1430,)|var|float64
call_3033 = relay.TupleGetItem(func_2772_call(relay.reshape(var_3034.astype('float64'), [10, 11, 13])), 1)
call_3035 = relay.TupleGetItem(func_2774_call(relay.reshape(var_3034.astype('float64'), [10, 11, 13])), 1)
uop_3041 = relay.cosh(call_3033.astype('float32')) # shape=(10, 11, 13)
uop_3043 = relay.cosh(call_3035.astype('float32')) # shape=(10, 11, 13)
uop_3062 = relay.atanh(var_3021.astype('float64')) # shape=(9, 11, 9)
var_3076 = relay.var("var_3076", dtype = "float64", shape = (9, 11, 9))#candidate|3076|(9, 11, 9)|var|float64
bop_3077 = relay.greater_equal(uop_3062.astype('bool'), relay.reshape(var_3076.astype('bool'), relay.shape_of(uop_3062))) # shape=(9, 11, 9)
output = relay.Tuple([bop_3022,var_3034,uop_3041,bop_3077,])
output2 = relay.Tuple([bop_3022,var_3034,uop_3043,bop_3077,])
func_3082 = relay.Function([var_3020,var_3021,var_3034,var_3076,], output)
mod['func_3082'] = func_3082
mod = relay.transform.InferType()(mod)
mutated_mod['func_3082'] = func_3082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3082_call = mutated_mod.get_global_var('func_3082')
var_3084 = relay.var("var_3084", dtype = "uint64", shape = (9, 11, 9))#candidate|3084|(9, 11, 9)|var|uint64
var_3085 = relay.var("var_3085", dtype = "uint64", shape = (9, 11, 9))#candidate|3085|(9, 11, 9)|var|uint64
var_3086 = relay.var("var_3086", dtype = "float64", shape = (1430,))#candidate|3086|(1430,)|var|float64
var_3087 = relay.var("var_3087", dtype = "float64", shape = (9, 11, 9))#candidate|3087|(9, 11, 9)|var|float64
call_3083 = func_3082_call(var_3084,var_3085,var_3086,var_3087,)
output = call_3083
func_3088 = relay.Function([var_3084,var_3085,var_3086,var_3087,], output)
mutated_mod['func_3088'] = func_3088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3387 = relay.var("var_3387", dtype = "int8", shape = (11, 2, 10))#candidate|3387|(11, 2, 10)|var|int8
var_3388 = relay.var("var_3388", dtype = "int8", shape = (11, 2, 10))#candidate|3388|(11, 2, 10)|var|int8
bop_3389 = relay.bitwise_xor(var_3387.astype('int8'), relay.reshape(var_3388.astype('int8'), relay.shape_of(var_3387))) # shape=(11, 2, 10)
func_2925_call = mod.get_global_var('func_2925')
func_2929_call = mutated_mod.get_global_var('func_2929')
var_3400 = relay.var("var_3400", dtype = "float32", shape = (1365,))#candidate|3400|(1365,)|var|float32
var_3401 = relay.var("var_3401", dtype = "float32", shape = (420,))#candidate|3401|(420,)|var|float32
call_3399 = relay.TupleGetItem(func_2925_call(relay.reshape(var_3400.astype('float32'), [13, 15, 7]), relay.reshape(var_3401.astype('float32'), [210, 2]), ), 1)
call_3402 = relay.TupleGetItem(func_2929_call(relay.reshape(var_3400.astype('float32'), [13, 15, 7]), relay.reshape(var_3401.astype('float32'), [210, 2]), ), 1)
output = relay.Tuple([bop_3389,call_3399,var_3400,var_3401,])
output2 = relay.Tuple([bop_3389,call_3402,var_3400,var_3401,])
func_3412 = relay.Function([var_3387,var_3388,var_3400,var_3401,], output)
mod['func_3412'] = func_3412
mod = relay.transform.InferType()(mod)
mutated_mod['func_3412'] = func_3412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3412_call = mutated_mod.get_global_var('func_3412')
var_3414 = relay.var("var_3414", dtype = "int8", shape = (11, 2, 10))#candidate|3414|(11, 2, 10)|var|int8
var_3415 = relay.var("var_3415", dtype = "int8", shape = (11, 2, 10))#candidate|3415|(11, 2, 10)|var|int8
var_3416 = relay.var("var_3416", dtype = "float32", shape = (1365,))#candidate|3416|(1365,)|var|float32
var_3417 = relay.var("var_3417", dtype = "float32", shape = (420,))#candidate|3417|(420,)|var|float32
call_3413 = func_3412_call(var_3414,var_3415,var_3416,var_3417,)
output = call_3413
func_3418 = relay.Function([var_3414,var_3415,var_3416,var_3417,], output)
mutated_mod['func_3418'] = func_3418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3582 = relay.var("var_3582", dtype = "float32", shape = (15, 4, 9))#candidate|3582|(15, 4, 9)|var|float32
uop_3583 = relay.sigmoid(var_3582.astype('float32')) # shape=(15, 4, 9)
output = uop_3583
output2 = uop_3583
func_3590 = relay.Function([var_3582,], output)
mod['func_3590'] = func_3590
mod = relay.transform.InferType()(mod)
mutated_mod['func_3590'] = func_3590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3591 = relay.var("var_3591", dtype = "float32", shape = (15, 4, 9))#candidate|3591|(15, 4, 9)|var|float32
func_3590_call = mutated_mod.get_global_var('func_3590')
call_3592 = func_3590_call(var_3591)
output = call_3592
func_3593 = relay.Function([var_3591], output)
mutated_mod['func_3593'] = func_3593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4078 = relay.var("var_4078", dtype = "float32", shape = (5, 4, 3))#candidate|4078|(5, 4, 3)|var|float32
uop_4079 = relay.acos(var_4078.astype('float32')) # shape=(5, 4, 3)
bop_4099 = relay.bitwise_or(var_4078.astype('uint8'), relay.reshape(uop_4079.astype('uint8'), relay.shape_of(var_4078))) # shape=(5, 4, 3)
bop_4104 = relay.floor_mod(uop_4079.astype('float32'), relay.reshape(bop_4099.astype('float32'), relay.shape_of(uop_4079))) # shape=(5, 4, 3)
output = bop_4104
output2 = bop_4104
func_4111 = relay.Function([var_4078,], output)
mod['func_4111'] = func_4111
mod = relay.transform.InferType()(mod)
var_4112 = relay.var("var_4112", dtype = "float32", shape = (5, 4, 3))#candidate|4112|(5, 4, 3)|var|float32
output = func_4111(var_4112)
func_4113 = relay.Function([var_4112], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4141 = relay.var("var_4141", dtype = "uint8", shape = ())#candidate|4141|()|var|uint8
const_4142 = relay.const([[[8,6,2,-2,-5,8,1],[-3,-1,-3,-9,8,2,4],[-5,-2,6,6,5,7,-7]],[[5,2,-10,-4,-5,9,2],[-1,5,-7,10,-6,-1,2],[-10,-10,-8,-10,7,-1,-9]],[[-6,-2,-1,-4,6,2,-8],[-3,-1,-3,8,5,-2,-6],[-3,-5,-7,-5,-4,7,-2]],[[-1,1,5,7,-3,9,-4],[8,-6,-4,1,8,10,-6],[-1,5,1,6,-10,-3,-7]],[[-2,-5,-9,-3,-4,6,2],[-5,4,-7,9,-7,-3,7],[1,-8,5,3,-6,8,-3]],[[-3,2,-3,5,-5,7,1],[-8,-6,2,-4,-7,10,-5],[5,-3,-5,10,1,-8,-2]],[[-8,-5,-1,7,-4,8,-10],[-7,9,5,4,-8,9,-8],[6,4,-2,10,9,-7,-10]],[[6,-7,7,7,-7,3,3],[-5,-1,-2,-2,-3,10,-10],[6,-5,-10,-5,6,8,-3]]], dtype = "uint8")#candidate|4142|(8, 3, 7)|const|uint8
bop_4143 = relay.equal(var_4141.astype('bool'), const_4142.astype('bool')) # shape=(8, 3, 7)
func_1901_call = mod.get_global_var('func_1901')
func_1905_call = mutated_mod.get_global_var('func_1905')
var_4161 = relay.var("var_4161", dtype = "int64", shape = (768,))#candidate|4161|(768,)|var|int64
call_4160 = relay.TupleGetItem(func_1901_call(relay.reshape(var_4161.astype('int64'), [12, 4, 16]), relay.reshape(var_4161.astype('int64'), [12, 4, 16]), ), 1)
call_4162 = relay.TupleGetItem(func_1905_call(relay.reshape(var_4161.astype('int64'), [12, 4, 16]), relay.reshape(var_4161.astype('int64'), [12, 4, 16]), ), 1)
bop_4164 = relay.less_equal(bop_4143.astype('bool'), relay.reshape(const_4142.astype('bool'), relay.shape_of(bop_4143))) # shape=(8, 3, 7)
output = relay.Tuple([call_4160,var_4161,bop_4164,])
output2 = relay.Tuple([call_4162,var_4161,bop_4164,])
func_4167 = relay.Function([var_4141,var_4161,], output)
mod['func_4167'] = func_4167
mod = relay.transform.InferType()(mod)
mutated_mod['func_4167'] = func_4167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4167_call = mutated_mod.get_global_var('func_4167')
var_4169 = relay.var("var_4169", dtype = "uint8", shape = ())#candidate|4169|()|var|uint8
var_4170 = relay.var("var_4170", dtype = "int64", shape = (768,))#candidate|4170|(768,)|var|int64
call_4168 = func_4167_call(var_4169,var_4170,)
output = call_4168
func_4171 = relay.Function([var_4169,var_4170,], output)
mutated_mod['func_4171'] = func_4171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4231 = relay.var("var_4231", dtype = "float32", shape = (14, 5, 14))#candidate|4231|(14, 5, 14)|var|float32
uop_4232 = relay.sin(var_4231.astype('float32')) # shape=(14, 5, 14)
func_1395_call = mod.get_global_var('func_1395')
func_1397_call = mutated_mod.get_global_var('func_1397')
const_4235 = relay.const([-2,-10,-8,3,8,-7,-1,6,-5,-5,-3,9,7,3,-1,-3,7,-3,10,2,-10,-5,-5,6,-7,2,8,-4,-1,5,9,7,3,-2,-4,3,3,-6,10,-10,-5,-10,4,-7,9,6,-4,-6,3,-2,-2,2,2,4,1,2,8,8,4,-6,-9,-2,7,2,6,6,8,5,-5,-3,-5,-2,-6,3,-6,-2,-5,-2,4,4,-7,-10,-10,6,-4,-4,5,-9,6,1,-5,1,-9,4,-6,-5,-1,-9,-10,8,5,2,-8,2,-5,6,-8,-9,9,-2,4,-9,4,5,4,-9,-5,-10,2,-5,-7,-8,-9,3,2,4,-7,-2,2,5,1,6,5,-7,9,5,-6,-2,1,4,3,1,2,10,-1,1,-1,9,2,-4,-9,-7,-3,9,-6,-7,-2,8,-4,-1,5,8,-6,1,-3,9,3,9,6,-10,-3,-3,7,-1,2,-5,-4,3,10,-8,-9,6,-2,8,3,2,6,10,-7,-6,5,-7,4,8,2,-6,-2,2,7,4,7,5,1,7,-8,-8,4,-1,5,-4,-3,9,5,1,-1,-2,-3,2,-4,-4,1,5,-9,-8,6,-3,-4,-6,4,-1,-2,-1,-3,1,-1,-10,-10,2,3,-6,-9,10,1,-4,-3,8,-9,-2,-4,-10,7,9,-6,7,-10,8,3,-5,-4,-7,-4,-2,-6,7,-7,-4,8,-2,-4,-4,3,6,-2,10,7,-2,-4,6,-9,7,2,2,7,-4,4,-7,-4,5,-1,-9,-2,-1,-5,6,10,2,7,1,10,4,5,-3,4,2,-2,-4,-4,-3,-4,7,-4,-7,4,4,-3,-8,-2,7,8,1,-2,8,-2,7,2,1,4,7,-3,-2,9,-7,10,7,3,9,5,-3,10,4,-5,-8,-10,-7,-5,-1,8,7,2,-5,4,-10,5,7,-5,-9,-5,-9,3,-9,-4,5,8,1,10,5,-2,-4,-10,4,3,6,-10,2,-1,-4,-3,1,2,3,8,7,-5,-8,-3,10,6,3,-9,9,-10,-8,-3,4,9,-9,-7,8,9,-7], dtype = "int64")#candidate|4235|(400,)|const|int64
call_4234 = func_1395_call(relay.reshape(const_4235.astype('int64'), [10, 5, 8]))
call_4236 = func_1395_call(relay.reshape(const_4235.astype('int64'), [10, 5, 8]))
func_3590_call = mod.get_global_var('func_3590')
func_3593_call = mutated_mod.get_global_var('func_3593')
var_4240 = relay.var("var_4240", dtype = "float32", shape = (270, 2))#candidate|4240|(270, 2)|var|float32
call_4239 = func_3590_call(relay.reshape(var_4240.astype('float32'), [15, 4, 9]))
call_4241 = func_3590_call(relay.reshape(var_4240.astype('float32'), [15, 4, 9]))
bop_4242 = relay.left_shift(var_4240.astype('uint8'), relay.reshape(call_4239.astype('uint8'), relay.shape_of(var_4240))) # shape=(270, 2)
bop_4245 = relay.left_shift(var_4240.astype('uint8'), relay.reshape(call_4241.astype('uint8'), relay.shape_of(var_4240))) # shape=(270, 2)
uop_4252 = relay.acosh(uop_4232.astype('float32')) # shape=(14, 5, 14)
func_1395_call = mod.get_global_var('func_1395')
func_1397_call = mutated_mod.get_global_var('func_1397')
call_4256 = func_1395_call(relay.reshape(call_4234.astype('int64'), [10, 5, 8]))
call_4257 = func_1395_call(relay.reshape(call_4234.astype('int64'), [10, 5, 8]))
func_2772_call = mod.get_global_var('func_2772')
func_2774_call = mutated_mod.get_global_var('func_2774')
var_4271 = relay.var("var_4271", dtype = "float64", shape = (1430,))#candidate|4271|(1430,)|var|float64
call_4270 = relay.TupleGetItem(func_2772_call(relay.reshape(var_4271.astype('float64'), [10, 11, 13])), 1)
call_4272 = relay.TupleGetItem(func_2774_call(relay.reshape(var_4271.astype('float64'), [10, 11, 13])), 1)
output = relay.Tuple([call_4234,const_4235,bop_4242,uop_4252,call_4256,call_4270,var_4271,])
output2 = relay.Tuple([call_4236,const_4235,bop_4245,uop_4252,call_4257,call_4272,var_4271,])
func_4275 = relay.Function([var_4231,var_4240,var_4271,], output)
mod['func_4275'] = func_4275
mod = relay.transform.InferType()(mod)
var_4276 = relay.var("var_4276", dtype = "float32", shape = (14, 5, 14))#candidate|4276|(14, 5, 14)|var|float32
var_4277 = relay.var("var_4277", dtype = "float32", shape = (270, 2))#candidate|4277|(270, 2)|var|float32
var_4278 = relay.var("var_4278", dtype = "float64", shape = (1430,))#candidate|4278|(1430,)|var|float64
output = func_4275(var_4276,var_4277,var_4278,)
func_4279 = relay.Function([var_4276,var_4277,var_4278,], output)
mutated_mod['func_4279'] = func_4279
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4677 = relay.var("var_4677", dtype = "int16", shape = (7, 6, 6))#candidate|4677|(7, 6, 6)|var|int16
var_4678 = relay.var("var_4678", dtype = "int16", shape = (7, 6, 6))#candidate|4678|(7, 6, 6)|var|int16
bop_4679 = relay.greater(var_4677.astype('bool'), relay.reshape(var_4678.astype('bool'), relay.shape_of(var_4677))) # shape=(7, 6, 6)
func_3082_call = mod.get_global_var('func_3082')
func_3088_call = mutated_mod.get_global_var('func_3088')
var_4700 = relay.var("var_4700", dtype = "uint64", shape = (1, 891))#candidate|4700|(1, 891)|var|uint64
var_4701 = relay.var("var_4701", dtype = "float64", shape = (11, 130))#candidate|4701|(11, 130)|var|float64
call_4699 = relay.TupleGetItem(func_3082_call(relay.reshape(var_4700.astype('uint64'), [9, 11, 9]), relay.reshape(var_4700.astype('uint64'), [9, 11, 9]), relay.reshape(var_4701.astype('float64'), [1430,]), relay.reshape(var_4700.astype('float64'), [9, 11, 9]), ), 0)
call_4702 = relay.TupleGetItem(func_3088_call(relay.reshape(var_4700.astype('uint64'), [9, 11, 9]), relay.reshape(var_4700.astype('uint64'), [9, 11, 9]), relay.reshape(var_4701.astype('float64'), [1430,]), relay.reshape(var_4700.astype('float64'), [9, 11, 9]), ), 0)
func_3590_call = mod.get_global_var('func_3590')
func_3593_call = mutated_mod.get_global_var('func_3593')
const_4706 = relay.const([[-2.974476,-6.365777,-0.396379,4.790989,0.987210,-9.999184,3.556963,-3.702117,8.810618,4.437920],[1.780399,-6.233796,-1.422612,-9.327389,5.531807,-9.481237,-2.643054,0.619070,7.932702,-1.325335],[-6.460021,4.579603,8.207489,8.710449,6.664904,2.773662,-3.681858,-4.130142,7.292750,0.283207],[-5.678604,-6.267885,9.050956,9.877146,5.286519,0.855293,-4.492541,3.558159,-7.914038,-7.289843],[7.823987,1.672519,-1.957892,-6.321437,-1.001717,-8.961330,2.872492,0.256684,-8.426968,4.303921],[-5.314180,0.642169,3.339343,9.651944,-4.374671,-7.203809,8.913778,5.300482,0.808215,-5.705948],[-8.249947,-5.439012,0.688426,-4.355792,-8.050641,9.322765,-6.339699,9.187936,2.340923,3.426929],[0.575802,1.904523,6.175947,-9.641294,-5.908341,-9.292181,8.599202,-8.306357,-0.703061,-1.164017],[7.160675,-0.173278,6.320861,8.423470,-7.487539,-7.967127,-3.453728,-8.699883,-4.709588,-9.552543],[6.002016,8.119346,9.777802,-9.985641,-6.361418,-4.283584,-3.434983,6.003611,8.202059,9.511691],[-3.102022,6.939610,0.842646,-8.633132,-6.586578,5.146204,-8.546157,-5.201700,-0.769079,9.473501],[2.619342,-7.426179,-9.395987,7.726957,7.522053,4.168895,-7.233070,-8.486022,0.119575,-9.220861],[-1.228461,8.393660,-2.433566,-0.169160,-3.263873,-4.508207,-5.745213,-4.879385,-5.109095,-3.322924],[-7.003488,7.811384,-5.968076,-1.926503,4.635205,4.753383,-6.076471,-6.537699,-6.072129,-6.864691],[-7.186663,-5.850113,8.465593,-7.320688,7.749957,5.887573,-5.431211,-0.043696,0.030096,-0.951629],[9.130788,-0.382655,9.971808,7.333177,2.819375,-9.693118,-6.128454,-8.102182,4.006281,4.550819],[3.868609,-0.562928,-1.851961,-7.842873,-8.126752,-0.868112,-1.246027,6.615411,4.673851,0.215250],[-0.557035,-6.960824,4.558047,3.217243,3.402959,7.782970,7.051839,1.277772,-7.338719,2.212949],[-2.034366,7.232847,-5.012526,-8.146229,4.277633,5.106186,-1.127674,-9.522003,-2.461594,-1.256227],[-9.402019,0.501100,-9.930156,3.400959,-0.372677,9.105460,-2.343792,-8.901732,2.528933,-2.500260],[-0.792991,7.395775,-3.101171,-3.577165,5.613053,-8.463242,-9.637489,0.776409,-7.832718,-6.772523],[-5.087576,-0.389750,-0.330035,2.067904,0.690016,-8.101411,2.859478,-9.992665,4.737839,5.315828],[-3.832024,-4.887517,4.166181,8.072691,1.847368,-2.866316,2.068916,-7.649864,2.523834,6.340536],[-1.869108,1.244094,9.193246,0.748042,-7.397299,2.944403,-8.725814,-5.890563,-8.807180,-0.043049],[4.641846,9.467880,6.922122,-7.572846,5.161810,3.920773,8.442690,-7.870755,3.220125,9.163745],[-3.419138,-8.797063,-7.585842,-8.015307,-0.409148,-0.131454,8.740674,-4.029512,-8.434453,-4.893303],[-6.724450,2.000657,-0.811029,3.440488,7.025644,9.690582,5.191544,-7.024728,-9.335141,-0.916722],[5.839402,-2.684002,-5.427705,3.229412,4.717125,9.777824,-9.971753,1.391602,-7.571781,-1.678600],[8.272334,6.995908,5.835920,3.807450,-6.148335,-3.107686,-7.428124,-6.337449,7.840351,5.018934],[6.732668,-7.587886,5.574470,-0.845469,-9.802954,2.552284,8.535135,7.810996,8.407144,-5.873069],[-0.436792,7.531149,-2.467858,-6.123700,-5.187704,-7.824197,-9.975248,1.220367,7.359991,4.392685],[-5.531849,4.508132,5.063641,-7.433054,6.391036,-8.094398,7.913279,8.145169,4.505689,7.009200],[0.735155,-3.583293,-5.921261,-8.909409,7.872457,-3.957545,-3.322391,8.471537,-9.504781,-2.082574],[6.810717,4.236454,8.526662,-9.725401,-7.056047,-1.979569,6.528738,5.659189,-3.183898,2.638001],[0.739667,7.875725,-2.409760,0.695353,-7.264648,-8.625785,-1.550132,-7.211290,-4.178498,3.204447],[-6.165551,7.248807,-2.653891,3.239543,-5.715325,-9.178220,-9.686244,6.417193,7.289418,9.368060],[9.010674,1.738602,-9.600256,5.971768,-9.345617,9.771740,-8.804768,-1.838750,-9.716996,5.162008],[7.463781,-6.194202,9.645361,-0.986739,6.419013,-9.341875,2.551856,-8.327911,8.419686,8.528409],[-6.283481,-7.872580,7.613732,5.023344,-0.657755,-2.581331,7.152388,-7.844292,-1.618768,0.969323],[-5.497206,-9.038745,2.356465,2.481434,-8.791649,-7.925607,-5.298459,6.192519,7.939565,4.723893],[8.503465,9.282004,-5.589706,7.215711,-8.338510,-0.999978,-1.536530,1.667286,-9.594257,-4.135311],[1.892126,2.604998,4.915002,1.462877,-7.622162,0.922688,-6.689821,-8.893361,-7.606519,1.173266],[-8.928465,9.970406,8.708733,-0.783796,-6.120402,-0.490965,5.112314,4.531815,8.997487,5.052012],[8.760504,3.075953,-9.860062,-8.673107,-9.050143,4.285893,-5.198333,4.876723,4.913878,3.502059],[5.140234,3.102027,5.693426,2.139649,5.333922,-0.086601,2.030027,-5.566638,1.064689,-9.614801],[2.577823,-1.723468,5.706728,7.893475,1.401475,-0.725878,-2.179854,0.104413,-5.277505,-0.127124],[-7.538439,-8.767900,4.850546,7.043655,7.720318,-7.767444,5.733399,-7.428016,-9.976275,-0.201098],[-9.585218,-2.272790,-3.758417,6.699743,6.285288,6.643936,-3.997432,4.841127,-5.262611,4.603757],[7.886009,-1.641467,-2.713466,9.820118,-0.616572,6.731015,-9.308455,-8.847618,8.470458,3.496443],[4.709757,-9.202317,-8.753612,9.267257,-2.577472,-6.706819,-0.521784,5.586630,-1.115231,-8.282941],[-7.601191,8.054401,7.758281,6.732024,1.264789,2.164991,1.603137,8.262944,-3.465117,1.562110],[6.230301,-8.101082,-3.823377,-3.356864,-7.456821,-9.703666,-6.258124,1.636956,0.252650,7.614012],[4.563418,0.856403,-7.759766,-4.905309,-6.280661,-4.383773,9.257779,5.943188,-7.017452,-7.797453],[-2.805185,8.029334,6.952675,9.568183,9.050602,2.506359,9.622196,-0.225644,1.497965,-9.950325]], dtype = "float32")#candidate|4706|(54, 10)|const|float32
call_4705 = func_3590_call(relay.reshape(const_4706.astype('float32'), [15, 4, 9]))
call_4707 = func_3590_call(relay.reshape(const_4706.astype('float32'), [15, 4, 9]))
bop_4713 = relay.mod(call_4699.astype('float64'), relay.reshape(var_4700.astype('float64'), relay.shape_of(call_4699))) # shape=(9, 11, 9)
bop_4716 = relay.mod(call_4702.astype('float64'), relay.reshape(var_4700.astype('float64'), relay.shape_of(call_4702))) # shape=(9, 11, 9)
var_4717 = relay.var("var_4717", dtype = "int16", shape = (7, 6, 6))#candidate|4717|(7, 6, 6)|var|int16
bop_4718 = relay.maximum(var_4677.astype('int32'), relay.reshape(var_4717.astype('int32'), relay.shape_of(var_4677))) # shape=(7, 6, 6)
output = relay.Tuple([bop_4679,var_4701,call_4705,const_4706,bop_4713,bop_4718,])
output2 = relay.Tuple([bop_4679,var_4701,call_4707,const_4706,bop_4716,bop_4718,])
func_4721 = relay.Function([var_4677,var_4678,var_4700,var_4701,var_4717,], output)
mod['func_4721'] = func_4721
mod = relay.transform.InferType()(mod)
mutated_mod['func_4721'] = func_4721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4721_call = mutated_mod.get_global_var('func_4721')
var_4723 = relay.var("var_4723", dtype = "int16", shape = (7, 6, 6))#candidate|4723|(7, 6, 6)|var|int16
var_4724 = relay.var("var_4724", dtype = "int16", shape = (7, 6, 6))#candidate|4724|(7, 6, 6)|var|int16
var_4725 = relay.var("var_4725", dtype = "uint64", shape = (1, 891))#candidate|4725|(1, 891)|var|uint64
var_4726 = relay.var("var_4726", dtype = "float64", shape = (11, 130))#candidate|4726|(11, 130)|var|float64
var_4727 = relay.var("var_4727", dtype = "int16", shape = (7, 6, 6))#candidate|4727|(7, 6, 6)|var|int16
call_4722 = func_4721_call(var_4723,var_4724,var_4725,var_4726,var_4727,)
output = call_4722
func_4728 = relay.Function([var_4723,var_4724,var_4725,var_4726,var_4727,], output)
mutated_mod['func_4728'] = func_4728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5106 = relay.var("var_5106", dtype = "uint8", shape = (9, 10, 2))#candidate|5106|(9, 10, 2)|var|uint8
var_5107 = relay.var("var_5107", dtype = "uint8", shape = (9, 10, 2))#candidate|5107|(9, 10, 2)|var|uint8
bop_5108 = relay.maximum(var_5106.astype('uint8'), relay.reshape(var_5107.astype('uint8'), relay.shape_of(var_5106))) # shape=(9, 10, 2)
bop_5115 = relay.floor_mod(var_5106.astype('float32'), relay.reshape(bop_5108.astype('float32'), relay.shape_of(var_5106))) # shape=(9, 10, 2)
bop_5124 = relay.mod(bop_5108.astype('float64'), relay.reshape(bop_5115.astype('float64'), relay.shape_of(bop_5108))) # shape=(9, 10, 2)
uop_5127 = relay.log(var_5107.astype('float64')) # shape=(9, 10, 2)
bop_5143 = relay.right_shift(var_5107.astype('uint16'), relay.reshape(bop_5108.astype('uint16'), relay.shape_of(var_5107))) # shape=(9, 10, 2)
uop_5149 = relay.log10(uop_5127.astype('float32')) # shape=(9, 10, 2)
bop_5155 = relay.equal(uop_5149.astype('bool'), relay.reshape(bop_5143.astype('bool'), relay.shape_of(uop_5149))) # shape=(9, 10, 2)
func_1901_call = mod.get_global_var('func_1901')
func_1905_call = mutated_mod.get_global_var('func_1905')
var_5160 = relay.var("var_5160", dtype = "int64", shape = (768,))#candidate|5160|(768,)|var|int64
call_5159 = relay.TupleGetItem(func_1901_call(relay.reshape(var_5160.astype('int64'), [12, 4, 16]), relay.reshape(var_5160.astype('int64'), [12, 4, 16]), ), 0)
call_5161 = relay.TupleGetItem(func_1905_call(relay.reshape(var_5160.astype('int64'), [12, 4, 16]), relay.reshape(var_5160.astype('int64'), [12, 4, 16]), ), 0)
func_1395_call = mod.get_global_var('func_1395')
func_1397_call = mutated_mod.get_global_var('func_1397')
const_5173 = relay.const([4,4,-2,4,-10,7,7,-8,-6,6,1,7,3,5,-3,-10,-2,8,-5,-1,1,8,-9,-4,1,-3,8,-6,9,1,-10,8,-7,-8,-9,5,7,5,10,-9,3,-3,1,-2,-1,-2,-5,-6,5,3,5,3,3,-5,1,-4,-7,-5,-8,-9,-1,-1,1,7,3,1,1,-9,-4,-7,-10,9,-10,4,-1,-7,3,-7,7,-2,7,10,9,-10,6,8,-8,3,-9,-6,-1,-1,10,1,-3,2,8,7,1,-10,5,-3,3,3,-5,2,-1,-2,-2,-10,8,6,4,-3,1,2,-9,2,-10,-6,3,3,-3,-5,-8,4,7,-1,-3,3,-6,-3,1,7,-8,8,-2,-5,6,4,5,9,7,-2,-4,8,2,-5,5,-4,-6,6,3,-3,-3,2,-4,-1,-1,-3,8,5,1,2,-1,-10,-9,6,-10,-9,-5,-3,2,-2,-7,-7,8,-6,1,6,-4,-10,-3,-3,7,-7,4,3,-4,-10,2,7,-1,-9,-2,-6,-1,7,5,8,3,4,3,-5,4,9,5,6,-10,-8,-9,-7,3,4,-6,-9,6,-10,1,-8,-3,1,-3,-3,1,3,8,-8,-6,8,-5,-4,-10,-1,-8,-8,-6,-8,-5,1,-2,5,6,10,8,-5,7,-3,2,10,3,-2,6,-9,2,-8,-6,-6,-6,6,6,-6,-1,-2,3,6,1,-6,-9,-9,-4,-5,7,5,-8,7,2,-9,-10,-7,-4,-10,10,-1,10,-8,-4,-7,4,4,10,-8,-5,-7,-9,-10,5,5,6,4,3,-4,-7,-7,2,-5,-5,7,1,4,6,2,-4,9,-4,-9,7,5,4,-4,-5,9,3,9,7,3,-7,-7,5,-4,10,-5,5,-2,-4,-5,5,-3,7,-2,5,-8,-4,5,4,6,3,3,-5,-8,1,-10,-5,-7,-4,7,-6,-4,-3,-10,10,-10,-9,-2,-10,-3,-2,-7,7,1,3,-3,-6,-1,-9,5,7,4,-10,2,5,-1,2,7,-2,-1,8,-5,-2,-3,-7,2,-6,4,1,8,-3,6,-6,5], dtype = "int64")#candidate|5173|(400,)|const|int64
call_5172 = func_1395_call(relay.reshape(const_5173.astype('int64'), [10, 5, 8]))
call_5174 = func_1395_call(relay.reshape(const_5173.astype('int64'), [10, 5, 8]))
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
var_5179 = relay.var("var_5179", dtype = "float32", shape = (1344,))#candidate|5179|(1344,)|var|float32
call_5178 = relay.TupleGetItem(func_601_call(relay.reshape(var_5179.astype('float32'), [16, 7, 12])), 0)
call_5180 = relay.TupleGetItem(func_603_call(relay.reshape(var_5179.astype('float32'), [16, 7, 12])), 0)
uop_5187 = relay.atanh(uop_5149.astype('float32')) # shape=(9, 10, 2)
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
call_5203 = relay.TupleGetItem(func_601_call(relay.reshape(call_5178.astype('float32'), [16, 7, 12])), 0)
call_5204 = relay.TupleGetItem(func_603_call(relay.reshape(call_5178.astype('float32'), [16, 7, 12])), 0)
func_206_call = mod.get_global_var('func_206')
func_208_call = mutated_mod.get_global_var('func_208')
var_5212 = relay.var("var_5212", dtype = "float32", shape = (60,))#candidate|5212|(60,)|var|float32
call_5211 = relay.TupleGetItem(func_206_call(relay.reshape(var_5212.astype('float32'), [6, 5, 2])), 0)
call_5213 = relay.TupleGetItem(func_208_call(relay.reshape(var_5212.astype('float32'), [6, 5, 2])), 0)
output = relay.Tuple([bop_5124,bop_5155,call_5159,var_5160,call_5172,const_5173,call_5178,var_5179,uop_5187,call_5203,call_5211,var_5212,])
output2 = relay.Tuple([bop_5124,bop_5155,call_5161,var_5160,call_5174,const_5173,call_5180,var_5179,uop_5187,call_5204,call_5213,var_5212,])
func_5218 = relay.Function([var_5106,var_5107,var_5160,var_5179,var_5212,], output)
mod['func_5218'] = func_5218
mod = relay.transform.InferType()(mod)
mutated_mod['func_5218'] = func_5218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5218_call = mutated_mod.get_global_var('func_5218')
var_5220 = relay.var("var_5220", dtype = "uint8", shape = (9, 10, 2))#candidate|5220|(9, 10, 2)|var|uint8
var_5221 = relay.var("var_5221", dtype = "uint8", shape = (9, 10, 2))#candidate|5221|(9, 10, 2)|var|uint8
var_5222 = relay.var("var_5222", dtype = "int64", shape = (768,))#candidate|5222|(768,)|var|int64
var_5223 = relay.var("var_5223", dtype = "float32", shape = (1344,))#candidate|5223|(1344,)|var|float32
var_5224 = relay.var("var_5224", dtype = "float32", shape = (60,))#candidate|5224|(60,)|var|float32
call_5219 = func_5218_call(var_5220,var_5221,var_5222,var_5223,var_5224,)
output = call_5219
func_5225 = relay.Function([var_5220,var_5221,var_5222,var_5223,var_5224,], output)
mutated_mod['func_5225'] = func_5225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5690 = relay.var("var_5690", dtype = "float64", shape = (14, 7, 2))#candidate|5690|(14, 7, 2)|var|float64
uop_5691 = relay.sinh(var_5690.astype('float64')) # shape=(14, 7, 2)
bop_5705 = relay.bitwise_xor(uop_5691.astype('int32'), relay.reshape(var_5690.astype('int32'), relay.shape_of(uop_5691))) # shape=(14, 7, 2)
output = relay.Tuple([bop_5705,])
output2 = relay.Tuple([bop_5705,])
func_5714 = relay.Function([var_5690,], output)
mod['func_5714'] = func_5714
mod = relay.transform.InferType()(mod)
var_5715 = relay.var("var_5715", dtype = "float64", shape = (14, 7, 2))#candidate|5715|(14, 7, 2)|var|float64
output = func_5714(var_5715)
func_5716 = relay.Function([var_5715], output)
mutated_mod['func_5716'] = func_5716
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6028 = relay.var("var_6028", dtype = "bool", shape = (13, 2, 14))#candidate|6028|(13, 2, 14)|var|bool
var_6029 = relay.var("var_6029", dtype = "bool", shape = (13, 2, 14))#candidate|6029|(13, 2, 14)|var|bool
bop_6030 = relay.logical_or(var_6028.astype('bool'), relay.reshape(var_6029.astype('bool'), relay.shape_of(var_6028))) # shape=(13, 2, 14)
var_6037 = relay.var("var_6037", dtype = "bool", shape = (13, 2, 14))#candidate|6037|(13, 2, 14)|var|bool
bop_6038 = relay.minimum(var_6029.astype('float32'), relay.reshape(var_6037.astype('float32'), relay.shape_of(var_6029))) # shape=(13, 2, 14)
func_601_call = mod.get_global_var('func_601')
func_603_call = mutated_mod.get_global_var('func_603')
const_6045 = relay.const([-7.941540,-8.580266,8.032495,5.392847,-8.935167,5.652959,-8.534693,-2.108691,7.154974,5.228987,-0.084161,0.285064,7.934712,-3.628097,4.892882,-2.185083,-4.221913,3.657710,-6.583542,-8.111787,5.269623,-6.089118,7.665521,1.382482,4.661687,-6.904541,3.567474,-0.037207,2.116342,6.881317,-3.584822,1.494285,-7.089459,-4.742137,3.457509,-0.386013,-6.024750,-1.130578,2.729619,-1.619393,-4.451462,-3.845451,5.288208,5.538807,2.429983,4.013035,-4.055082,-6.446273,3.193628,8.811756,-0.560534,8.888210,-3.183123,-9.721192,-4.750550,3.860226,-0.613059,-9.789501,-6.700289,-1.045144,-0.882532,-8.982361,-2.472230,-0.153864,3.393151,4.441004,9.862150,3.461891,-0.578185,7.913804,-4.208657,-5.900727,-1.272060,-5.525767,-0.128801,-9.676922,-5.270600,7.042947,-8.330374,4.260175,8.987493,3.778594,0.003405,3.570737,-4.235225,-4.338198,5.449201,0.328916,1.580505,-1.339384,6.963686,1.525108,8.715984,-4.952072,-8.814850,-8.754640,-5.117706,-1.085269,-3.115091,-6.555621,-5.169044,1.116942,6.211923,6.485662,2.849663,-4.261863,-1.688820,-6.167919,-0.248389,7.218641,-5.951825,-5.954098,5.617866,9.819356,-0.378197,3.088632,-4.164951,-7.462952,7.655313,5.896083,-1.436227,9.898469,7.961190,-9.667668,0.200786,-5.562403,0.633041,-7.308629,0.004988,-3.252232,0.336528,-6.981030,8.515780,0.246928,-9.008158,9.382114,-3.520020,1.317811,-6.299492,7.186792,-6.164713,-5.368854,3.526862,-6.646051,-6.196506,-8.864319,-9.644361,1.861348,-0.287877,3.550619,4.021605,2.876108,7.588698,0.714832,-8.839459,3.129830,-3.276465,9.189012,5.803842,-4.813916,-1.174907,0.656159,5.953294,-2.673468,-7.625765,-7.716957,-7.286327,6.659238,7.306608,-2.403973,-1.908189,-4.714110,4.939728,-0.365866,2.836411,-7.448256,5.442817,7.289151,-6.181591,-6.872281,2.286381,3.856905,-0.908953,0.494083,7.726664,-3.072906,-2.002399,4.901134,-4.709342,-7.554460,-1.015757,4.422824,-6.827870,4.856519,7.287600,3.707809,-2.287667,-9.567404,-1.159147,-7.808711,6.220574,1.002822,0.737884,4.568265,-0.177516,-2.712749,-2.553826,-2.043590,-4.021500,-6.175638,-1.760616,-2.965923,-2.652747,1.986455,-3.645567,-3.661639,-1.819729,9.758561,-8.794738,6.353879,-9.861704,-2.593152,-0.151128,-2.063245,-2.493401,-3.595315,-2.978555,0.386188,0.819419,9.707830,8.927022,-5.216251,2.984030,4.507807,-7.782126,-0.682482,-0.373610,-9.770409,-5.447874,5.945881,7.668134,7.964142,-1.657212,-7.003564,1.791245,-4.588807,3.903761,6.303055,-6.198218,8.124524,6.382878,-5.527762,-5.800656,-6.536574,1.439522,7.635178,1.213966,-1.584432,8.511752,-7.078194,0.469192,9.800253,9.261633,1.819616,-1.131435,-5.059384,4.002881,0.910701,6.391890,-6.552014,-8.032386,5.840542,-8.487768,4.662887,-6.303222,-9.460231,-7.334269,6.600481,-3.064033,-4.599157,7.135329,2.006604,1.061016,-4.121818,-1.486114,3.040895,-8.258550,7.377270,-4.734285,-3.481687,-4.683041,-1.776192,0.398737,-8.125401,6.225982,-2.855511,9.104606,3.071116,-4.529341,-0.276879,-7.809562,5.200717,-5.880672,7.973208,-0.731213,-0.719454,-4.648906,1.422920,-0.227484,-3.926977,-3.960845,-5.845623,-8.675561,-1.739362,5.608195,8.348236,-7.299366,-9.655811,8.401179,-7.311364,3.772575,-0.163506,9.079411,8.405772,6.622004,1.291223,-6.602493,-4.562536,0.306814,-5.271601,2.005433,-7.925819,-2.475356,-9.001743,-4.427243,6.808119,0.669572,-4.956391,-6.878440,-6.522190,0.232950,1.572274,1.146648,-8.890051,9.993427,6.861618,-7.880086,-2.836253,-0.519546,9.599205,6.865298,7.899936,-6.293968,-2.855717,0.814744,7.676757,-7.287091,8.515662,-1.675205,6.428843,-3.374680,-4.627954,-9.556636,7.321863,3.644687,-7.156647,-1.337685,-0.128168,6.415867,7.104747,0.940298,7.828251,8.084286,-6.038798,-5.550171,1.054976,-5.470696,2.243747,0.820870,-9.655540,6.842681,8.562865,-8.479082,8.844291,-3.388213,-9.021119,9.233776,-6.267781,-5.634974,-8.844357,-8.837943,0.141900,4.053140,9.240395,-9.528178,1.765170,-9.608059,0.911679,-3.315047,-2.558780,3.626548,2.264599,-6.703738,5.293379,-5.662398,9.130269,-1.414861,5.075456,-9.991497,-8.045432,-7.061250,-3.184554,-1.926297,1.759778,-7.218180,-0.409324,8.072469,-4.952033,9.310800,-3.556438,5.032883,-5.802305,1.040148,0.421760,-8.791004,-6.900703,-5.080624,-0.407633,-6.361883,5.688198,1.118236,-3.633822,3.403745,2.058923,-2.556485,-9.312312,6.572985,7.916260,0.824060,-9.115686,-9.335109,-1.708370,-9.194031,-6.521926,4.027911,5.015835,2.570757,4.128294,3.030136,7.708296,-6.840657,4.200835,-1.939771,-8.886306,-0.921005,4.600807,3.873249,8.722283,-2.717618,-0.484379,0.873290,5.108706,1.065565,-0.392363,9.712629,7.941622,1.113104,8.991060,0.044126,9.601829,3.826520,3.375641,1.055379,-3.013466,-2.755645,0.897032,-1.743384,-7.072117,9.286932,-5.045658,-4.602306,-8.396999,3.619953,2.589983,-9.606138,-2.326595,6.559748,-1.574350,-1.613614,8.034165,-5.566213,-9.081737,7.923163,-4.076463,9.111582,2.259071,-8.330263,-7.003149,6.900036,8.963235,-1.194379,9.438777,1.412721,-7.474193,-2.141361,-6.603938,-0.817676,-0.771360,7.173766,-5.283968,1.561109,-1.719032,-5.035059,4.387961,-4.363119,0.287597,-2.400679,-1.082910,-8.466964,6.192092,-7.985772,5.155324,2.507227,-7.785659,4.507799,4.955091,-2.862650,-5.482012,-6.171351,3.855134,-1.352310,-0.979762,6.330172,-8.374682,2.045807,8.928396,7.397803,6.321676,-6.118022,1.267668,-1.788089,-0.918935,-1.331896,6.643163,6.714039,7.498116,6.807696,-5.520343,1.841180,1.988979,1.565568,-2.492452,6.940404,6.198079,-7.497149,7.564432,1.429305,6.434028,7.811884,1.045158,2.378080,-4.599378,-1.734242,-3.384958,-0.913106,-2.514656,-9.385446,-8.308513,-0.955131,2.034124,5.409281,-4.234106,-6.121178,-2.042779,-1.681217,-9.037844,5.722303,8.692013,-8.079956,0.589423,3.394073,-7.364922,-2.589724,1.655477,-4.665312,6.072565,-7.838816,-9.925247,-6.967507,-9.388173,-9.747972,-0.761135,5.815301,2.405338,1.295143,-2.574230,1.306917,-1.898694,-1.907673,-9.918489,-7.698023,-3.931066,4.008158,-0.562250,6.273491,5.880165,2.570615,3.092056,9.312036,-9.765200,5.870389,6.241612,9.470027,5.312799,3.300162,-7.134804,0.244005,-8.103051,-6.572564,-0.764930,8.224549,1.053691,-9.218375,-6.573359,-7.044566,-5.158103,2.338013,-4.526316,-4.166038,-4.926476,1.692766,7.192297,6.059955,-9.196870,-0.225603,-2.268687,-6.455842,4.533969,-5.772772,-2.381032,-7.038256,6.263917,-9.359004,7.212250,0.905682,-3.383775,-3.297254,0.999121,-8.349295,8.920890,3.594166,-7.145505,-4.757750,-4.111004,2.686023,6.177407,0.185835,-3.728858,-4.616564,-3.080074,9.665552,-8.374508,4.654161,-1.316024,8.359514,-2.812004,0.099232,-8.994892,-2.890864,-3.944670,7.002658,-7.649514,-3.924552,-6.073437,-4.036110,-3.219288,-0.205983,4.612919,6.928418,2.925538,-3.797905,9.519855,-7.763680,1.352611,-7.139755,7.400667,1.992304,-6.855010,-2.428243,-1.335039,-7.684709,-7.729650,6.003642,-6.049527,3.149875,-7.033207,4.578740,9.045740,7.651376,8.964104,3.011228,-4.845792,-9.240665,-5.588629,7.389688,2.585994,-8.350139,-8.014725,8.388997,-7.162048,-0.668427,-2.279454,-1.107129,-0.297040,-6.665286,0.093992,-5.181721,-8.634958,-1.058789,0.798762,1.128991,8.512295,-5.159051,-8.123617,-6.018629,5.487877,4.763347,0.713256,7.444208,3.258889,0.144242,9.912139,-9.802816,-5.987070,2.411085,7.305985,-7.888502,-6.524449,-4.804356,-5.218251,5.349685,-3.244367,-5.008710,-8.003134,4.924980,8.596299,-5.818002,-7.692034,0.428209,2.578720,-4.310084,0.043499,-4.198644,1.087809,-0.024169,0.050871,7.141564,-9.300579,9.980740,-8.592828,3.804149,8.170139,-3.514211,-0.750041,-1.754713,-3.178286,-9.116087,0.831913,1.422725,-0.733284,3.796613,4.473998,4.994333,-8.844624,-5.564943,6.706452,-7.178883,5.292140,-9.801554,-9.790761,-7.562891,4.202414,9.621174,5.050882,7.786813,-4.602002,3.544040,-3.833835,-4.628125,-0.845050,4.945593,-5.972454,-5.924494,-5.181953,0.086978,-1.920210,-3.687882,4.306839,-6.962460,-4.366962,-0.150316,-5.950310,2.586966,-7.186156,2.013311,-2.140410,-5.181558,7.557708,1.075167,5.677480,-4.869844,-0.226840,3.766678,-3.215139,-5.903927,5.688086,-0.458193,-8.785007,-6.914781,5.539115,4.112299,-2.422623,-7.597433,2.183171,-2.984038,-6.809593,-7.014400,1.778964,-6.897108,5.328654,-0.628398,0.147671,3.662550,-9.383255,-6.775096,4.545270,-3.489241,1.652443,2.922409,-4.274889,8.549721,3.722246,6.168977,9.992542,-9.368914,-1.078409,-3.567493,5.156046,9.323659,5.115845,4.165910,-7.797053,1.336453,-1.967931,-5.570423,-9.671810,-7.813392,3.690876,-7.329674,5.215224,8.373428,8.769848,-1.689156,1.269768,5.968946,1.584531,-2.836745,-8.397788,-7.352658,-9.425426,6.420035,-7.367339,-3.527879,6.807478,0.089103,-0.940404,-4.979060,-0.566518,-9.163849,-3.103709,-9.517171,3.417723,4.836984,-0.773761,-7.401636,-7.690257,2.448439,4.384247,-6.696484,-3.348338,-2.348268,9.530405,5.120065,6.363730,1.394694,2.612374,3.171045,-6.493349,-3.800600,-4.501412,-8.871932,-9.554611,-9.323340,1.281137,-9.429087,-0.911537,-9.118213,6.168878,0.978802,-8.019895,-2.548657,-5.572313,-5.459739,4.781903,-3.272295,0.345414,-8.579121,-5.040904,-5.732861,-3.734460,-9.379646,5.886903,-5.882290,-4.318780,5.419110,-6.402683,-4.889114,8.760578,-0.742759,0.896317,1.880162,0.324801,-0.749187,-1.519864,8.054916,0.988535,8.817635,5.282192,1.895678,3.125233,-2.135988,-5.375273,-4.057876,2.762227,-6.761508,7.623095,7.030857,-2.493306,8.741816,-2.510123,1.138542,-6.880754,-2.759834,-1.168516,1.920447,-7.667796,9.690440,-2.313536,5.630873,-5.126278,-5.648203,4.929459,-7.479355,7.926476,-4.134094,3.541088,7.989386,-8.056205,7.094300,2.274518,-6.520977,-6.999446,-9.594695,2.806237,-3.950155,-2.731021,-1.658502,-4.424930,6.817449,-5.344222,-4.673133,4.798234,1.428075,3.875636,-3.116124,7.521985,5.910369,-7.884594,-5.698044,2.246896,-1.607628,9.977278,2.934997,5.541625,4.566545,-3.591654,4.851778,0.244090,2.383209,0.361649,4.038310,-6.153884,-3.850532,-3.560982,-0.030621,3.876012,9.844012,0.117620,4.934659,3.710080,-6.148026,-2.228787,5.017885,-1.578457,-7.588785,-4.185036,-6.374827,-9.112511,-2.608959,8.127502,-4.733788,1.013468,7.467667,-0.242968,9.446609,0.609255,7.257194,-5.972025,2.929830,4.500024,-6.389346,4.036238,-7.362776,-9.508685,2.358559,-7.015812,-5.742323,9.138553,-4.312862,-1.439190,-6.353101,-6.784505,4.295533,-4.621033,5.705394,3.486007,-2.800518,8.119338,-7.376629,7.237338,3.168435,-8.391317,0.279669,-2.320613,1.958612,3.627452,-4.916358,-5.771685,-5.069536,5.424184,-0.750548,-1.605915,0.081229,-7.483782,0.722457,4.137114,1.163460,-7.901212,-7.149788,-7.085803,-7.508700,5.715006,6.997752,-3.152209,-5.222345,-1.204297,-6.671895,9.629901,-8.842097,-0.398981,0.617710,-0.172010,8.611988,2.576393,2.665547,9.543752,-1.215213,5.162561,-7.959793,3.642785,1.033518,-5.939721,-4.598975,5.775987,0.047829,-7.142284,-8.816226,1.338551,-0.054100,7.990804,-9.010092,2.012851,3.317412,4.626528,-7.720051,-6.363958,-5.011140,-0.301274,7.900306,8.399333,1.387467,6.416121,-0.631584,9.937354,-9.687032,9.516661,5.799155,1.481089,5.137157,5.358394,6.628705,4.859258,-5.309822,3.315723,2.256380,-8.104438,-0.585266,-1.210309,-7.022120,1.873067,-1.252417,5.301163,0.888017,-5.472487,9.930655,7.648153,-2.244114,-7.775840,-4.770320,-5.568735,-2.443932,-4.786958,-2.876850,-1.504603,-1.178081,1.875797,-0.976863,-8.309142,5.226572,-8.329550,-9.423258,-0.204840,-0.154847,3.869358,-8.931680,-1.227824,-3.667867,9.506079,-2.563792,9.572280,-6.658799,8.905866,-3.170695,-6.174944,3.533795,-1.791153,-7.973035,-5.936034,-6.209293,0.281822,3.207357,8.919199,-9.956611,-7.735147,-8.765363,5.860754,3.440615,6.631184,4.337842,3.216541,-3.034232,-2.873723,-1.626764,9.762398,4.016381,0.022614,5.663155,-7.797599,-1.188267,-5.450926,6.527510,5.709572,-3.881618,-6.315695,-1.305316,-3.113591,7.026692,-3.093679,8.294478,-0.754587,-5.675002,3.602756,1.529500,-8.136192,3.760542,-0.484051,-4.917459,1.183683,4.700999,-7.595627,6.627855,-2.057520,-2.040696,0.280646,9.718275,-4.970454,4.679949,5.805228,4.689742,-0.996893,-0.933861,2.739428,-4.043126,5.502833,-6.537584,-3.398178,2.397127,7.103830,5.417888,5.220595,-8.292031,-1.522314,-3.866308,-8.691855,7.214486,-7.025795,-3.860216,6.417467,-3.336241,-9.954965,-2.341286,-5.729686,4.327384,9.707578,-8.375075,0.841895,-8.595255,4.458863,4.447700,6.738214,-1.723507,-3.126197,0.928450,-2.937741,5.318196,7.463987,1.903800,4.279455,7.775730,2.123879,1.686824,-9.159515,-8.874423,-2.141753,-0.814615,9.076872,4.659711,4.377862,1.515714,-5.719171,-1.686048,-8.301169,-0.596672,-1.048573,3.652520,8.589903,4.477793,-8.843703,7.791354,7.155760,-7.419959,4.408651,3.942426,6.412499,-4.258582,1.178529,2.368572,-6.799187,2.435914,5.915862,-2.585547,3.676449,-4.128537,9.508329,9.582200,9.799414,9.699315,1.543583,1.601366,2.097489,9.242825,-8.064681,2.442802,-6.149897,-5.366413,9.243192,-1.739222,-9.761700,-0.431922,9.681575,-1.613165,-3.758522,9.384351,-7.031664,-6.968497,-8.477398,-7.249264,-8.134477,6.255162,-9.515880,-9.099869,-8.749832,4.526120,0.340777,-8.140046,4.105582,-7.725114,2.030001,9.881537,-9.725962,9.133723,5.964011,-0.233363,4.810936,-3.760458,9.954135,8.073482,-8.870690,-4.684375,0.856516,-5.276298,6.246707,-0.725003,-9.797771], dtype = "float32")#candidate|6045|(1344,)|const|float32
call_6044 = relay.TupleGetItem(func_601_call(relay.reshape(const_6045.astype('float32'), [16, 7, 12])), 0)
call_6046 = relay.TupleGetItem(func_603_call(relay.reshape(const_6045.astype('float32'), [16, 7, 12])), 0)
func_4167_call = mod.get_global_var('func_4167')
func_4171_call = mutated_mod.get_global_var('func_4171')
const_6051 = relay.const(-9, dtype = "uint8")#candidate|6051|()|const|uint8
var_6052 = relay.var("var_6052", dtype = "int64", shape = (768,))#candidate|6052|(768,)|var|int64
call_6050 = relay.TupleGetItem(func_4167_call(relay.reshape(const_6051.astype('uint8'), []), relay.reshape(var_6052.astype('int64'), [768,]), ), 0)
call_6053 = relay.TupleGetItem(func_4171_call(relay.reshape(const_6051.astype('uint8'), []), relay.reshape(var_6052.astype('int64'), [768,]), ), 0)
output = relay.Tuple([bop_6030,bop_6038,call_6044,const_6045,call_6050,const_6051,var_6052,])
output2 = relay.Tuple([bop_6030,bop_6038,call_6046,const_6045,call_6053,const_6051,var_6052,])
func_6054 = relay.Function([var_6028,var_6029,var_6037,var_6052,], output)
mod['func_6054'] = func_6054
mod = relay.transform.InferType()(mod)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6054_call = mutated_mod.get_global_var('func_6054')
var_6056 = relay.var("var_6056", dtype = "bool", shape = (13, 2, 14))#candidate|6056|(13, 2, 14)|var|bool
var_6057 = relay.var("var_6057", dtype = "bool", shape = (13, 2, 14))#candidate|6057|(13, 2, 14)|var|bool
var_6058 = relay.var("var_6058", dtype = "bool", shape = (13, 2, 14))#candidate|6058|(13, 2, 14)|var|bool
var_6059 = relay.var("var_6059", dtype = "int64", shape = (768,))#candidate|6059|(768,)|var|int64
call_6055 = func_6054_call(var_6056,var_6057,var_6058,var_6059,)
output = call_6055
func_6060 = relay.Function([var_6056,var_6057,var_6058,var_6059,], output)
mutated_mod['func_6060'] = func_6060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6068 = relay.var("var_6068", dtype = "uint32", shape = (11, 8, 8))#candidate|6068|(11, 8, 8)|var|uint32
const_6069 = relay.const([[[9,-1,-2,9,3,-10,-9,-2],[-9,-10,-10,-7,-7,-8,6,-6],[-5,-8,-1,-8,7,7,-4,-6],[3,5,6,-4,-6,3,-10,-7],[-10,-5,-5,7,-10,9,-3,-6],[-2,10,6,2,-8,4,-8,4],[-7,8,9,-6,-10,-2,2,9],[-2,4,7,-8,1,-3,-2,-6]],[[6,-2,7,-6,3,-10,-8,10],[10,-8,10,-9,9,-1,-1,-1],[-8,5,-1,4,9,-2,3,-8],[6,7,1,8,-10,-10,-5,-9],[4,-10,-5,2,8,-4,5,-1],[8,-6,8,1,-4,-10,-4,2],[4,-4,4,-6,9,3,-2,5],[-6,10,-7,-1,-4,8,1,5]],[[-1,6,-6,-10,-2,10,-7,5],[8,-5,-8,5,-9,-9,4,6],[4,1,-6,-6,-3,-4,1,-4],[-5,-5,-7,-7,3,7,-10,3],[6,-2,4,-1,-4,9,-4,-6],[4,-4,-2,-9,4,4,-10,-6],[10,9,7,3,4,-1,-5,-7],[-8,1,-9,7,-8,-7,-8,5]],[[2,2,-5,-3,6,-7,-10,-9],[-5,-10,-1,-8,-8,7,10,3],[-7,3,1,1,9,8,2,2],[8,-10,1,-7,-4,6,-6,6],[-4,-3,5,4,-2,5,-10,9],[-9,4,-8,-8,5,4,2,5],[9,3,-4,7,-9,-9,-9,4],[7,7,-1,8,10,-9,4,-10]],[[-4,4,-2,-5,3,-2,10,10],[6,-5,-2,-4,6,7,-7,-10],[2,10,-7,6,7,-2,-4,6],[-10,8,3,6,-5,-9,10,5],[5,5,-10,-4,9,-6,10,2],[3,4,1,-7,-5,-9,6,-6],[-9,3,-1,6,4,-2,4,-4],[5,-6,8,-1,8,7,-3,-4]],[[-3,10,5,4,8,2,2,-2],[4,3,9,-4,-3,-10,-3,9],[-3,-9,-4,6,3,-7,-5,-1],[-7,10,8,3,-4,-10,-9,-2],[9,-9,-6,-9,6,-3,-5,10],[1,-5,6,2,5,7,-2,-4],[-2,-6,-1,-9,-8,-8,9,4],[7,-6,-1,3,4,-8,10,-9]],[[-7,3,7,5,-4,-2,-10,-10],[-6,-10,-9,-3,-4,7,-4,-8],[-1,-9,3,-8,8,10,4,4],[8,-9,8,8,-2,6,3,-7],[5,5,-3,-4,2,-6,6,10],[-6,1,-2,8,5,-2,-7,5],[6,-9,4,7,-9,-4,-6,9],[3,8,10,-9,-9,5,1,-10]],[[-1,-5,6,1,-6,-10,-7,-6],[10,6,-9,3,8,-8,10,-6],[-8,-6,-3,-10,1,-1,9,-1],[-1,-9,5,-2,1,-4,7,2],[10,-8,6,-2,-7,7,2,7],[8,8,9,8,10,-3,-1,2],[4,4,9,-6,3,-4,-5,2],[8,-5,-10,9,5,8,-6,7]],[[10,9,-1,6,10,1,-3,-7],[3,-10,-6,-4,10,7,2,-5],[7,-2,8,-2,-9,4,-4,-5],[-4,1,-5,-1,6,-10,-1,-1],[-8,7,-2,-4,10,3,10,2],[-2,-4,-9,-1,-2,-5,7,-1],[10,10,-7,-1,4,-10,1,-10],[6,-9,10,9,-2,-7,10,-1]],[[-8,-2,-7,9,-6,-10,2,1],[4,2,-1,-8,-7,1,4,8],[7,6,-5,-7,-5,-10,-7,-4],[3,6,9,1,10,-3,-6,-8],[-3,8,7,-8,2,-9,1,1],[1,9,5,6,-2,2,10,-2],[2,10,7,4,-8,-10,8,2],[-3,9,-1,-3,-2,4,5,-4]],[[7,-8,3,-4,7,-7,-7,4],[10,-8,-6,7,-6,-1,-6,-9],[2,5,-1,4,3,3,-2,10],[8,-4,-8,6,1,-6,6,-2],[-5,2,8,-6,-9,2,5,5],[1,10,2,3,3,4,7,8],[5,-9,-7,-5,-3,-2,-3,2],[6,-3,-7,-6,6,-2,6,-4]]], dtype = "uint32")#candidate|6069|(11, 8, 8)|const|uint32
bop_6070 = relay.right_shift(var_6068.astype('uint32'), relay.reshape(const_6069.astype('uint32'), relay.shape_of(var_6068))) # shape=(11, 8, 8)
func_2232_call = mod.get_global_var('func_2232')
func_2234_call = mutated_mod.get_global_var('func_2234')
var_6077 = relay.var("var_6077", dtype = "float32", shape = (13, 52))#candidate|6077|(13, 52)|var|float32
call_6076 = func_2232_call(relay.reshape(var_6077.astype('float32'), [13, 4, 13]))
call_6078 = func_2232_call(relay.reshape(var_6077.astype('float32'), [13, 4, 13]))
var_6089 = relay.var("var_6089", dtype = "float32", shape = (13, 52))#candidate|6089|(13, 52)|var|float32
bop_6090 = relay.mod(var_6077.astype('float64'), relay.reshape(var_6089.astype('float64'), relay.shape_of(var_6077))) # shape=(13, 52)
output = relay.Tuple([bop_6070,call_6076,bop_6090,])
output2 = relay.Tuple([bop_6070,call_6078,bop_6090,])
func_6095 = relay.Function([var_6068,var_6077,var_6089,], output)
mod['func_6095'] = func_6095
mod = relay.transform.InferType()(mod)
var_6096 = relay.var("var_6096", dtype = "uint32", shape = (11, 8, 8))#candidate|6096|(11, 8, 8)|var|uint32
var_6097 = relay.var("var_6097", dtype = "float32", shape = (13, 52))#candidate|6097|(13, 52)|var|float32
var_6098 = relay.var("var_6098", dtype = "float32", shape = (13, 52))#candidate|6098|(13, 52)|var|float32
output = func_6095(var_6096,var_6097,var_6098,)
func_6099 = relay.Function([var_6096,var_6097,var_6098,], output)
mutated_mod['func_6099'] = func_6099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6127 = relay.var("var_6127", dtype = "uint16", shape = (5, 13, 1))#candidate|6127|(5, 13, 1)|var|uint16
const_6128 = relay.const([[[-2,-10,3,6,4,-8,-6,-8,-7,2,-9,10],[-9,-7,-6,10,2,-8,7,-6,-1,8,1,-6],[10,-4,6,8,-2,8,4,8,9,-2,-2,-9],[-7,4,-2,6,8,-3,-5,2,6,5,-9,7],[-3,-6,9,9,2,-2,4,8,-10,-8,4,2],[3,9,2,-2,6,9,-1,1,-2,8,3,-9],[7,-5,9,-10,-7,-6,6,4,-4,-7,-3,-10],[3,10,4,-8,7,1,-3,10,-1,-8,4,10],[9,5,-8,-7,-3,-7,-8,-7,8,-3,-10,-10],[-9,9,-2,-1,8,5,1,7,2,-8,-8,-7],[4,7,3,6,-6,5,-7,1,2,-1,9,-4],[3,1,-8,8,-6,-7,-2,3,1,-8,-4,-4],[-6,-7,7,5,-3,1,-3,-3,-4,2,-5,-2]],[[2,-3,-10,3,3,10,-1,-10,-1,8,-10,7],[-3,-7,-3,-5,10,1,6,-5,-4,-1,-2,-1],[-3,-1,4,-6,6,-5,4,-5,-9,-6,2,6],[-10,3,7,9,5,-3,-7,-5,-2,-5,2,3],[-8,-4,2,-6,-6,-4,-5,5,2,-10,-6,-3],[7,5,10,9,-8,-6,-5,-3,-3,6,-10,1],[-10,3,8,-4,-6,4,-8,-1,8,-7,4,-3],[-6,7,1,-10,-9,-7,-10,1,2,1,-8,8],[-4,6,6,-6,-10,10,3,2,-4,-10,-10,10],[6,-1,8,8,-4,-9,-8,3,-10,-1,7,-4],[2,5,4,-1,-9,-3,-2,8,-9,-8,-3,-5],[8,-3,-9,5,-10,-3,-8,-5,9,-5,-10,10],[-1,6,-1,-5,7,3,-7,-7,-9,-3,7,3]],[[7,8,2,-7,-8,6,-4,-8,3,6,10,-8],[4,-3,1,-6,5,-4,-5,1,-3,-3,-10,-7],[4,2,5,-10,-1,-9,-2,-9,-2,-5,5,10],[-1,-5,6,3,-5,4,2,10,-9,-6,-5,-8],[-9,6,9,3,1,-2,-2,-8,7,-7,-6,-4],[6,-7,-6,-10,8,-8,1,8,9,-10,-2,-8],[-10,9,1,-2,3,10,4,4,-5,10,6,-10],[5,-8,6,-5,-10,-4,-8,-8,6,10,-9,2],[9,-1,-10,-1,-1,-2,-2,5,3,-3,-4,2],[10,-9,-6,-2,-5,-1,-4,-1,-1,1,-2,-5],[6,6,10,1,9,6,3,2,1,-6,-6,-9],[10,10,8,6,5,3,9,-5,4,-6,3,6],[9,-10,-6,2,1,-9,9,-1,9,-4,-6,9]],[[-2,6,10,9,3,-4,10,-7,10,-8,-1,-5],[-2,9,10,7,-10,7,-6,-9,10,8,-1,-9],[-10,2,-7,-10,-8,9,4,9,-1,-3,-7,-4],[8,-4,-6,4,1,7,-4,9,3,-1,-3,10],[9,9,-8,10,6,8,1,9,-7,2,-1,-5],[-8,-3,7,3,9,-1,-6,4,6,-5,4,-1],[-8,4,3,-6,-8,-1,2,-10,-7,-7,-3,-4],[-3,-8,-3,-9,9,4,7,-4,-9,-9,-9,4],[-1,9,-2,-2,4,-3,6,-1,9,8,5,10],[-7,7,-9,1,1,-1,7,-9,1,9,6,-4],[-5,-9,-6,-6,-8,-8,5,-5,1,1,-1,-10],[-2,2,1,1,10,-8,-8,7,9,-3,5,3],[5,-6,2,-9,-7,2,-8,-5,2,-3,10,-8]],[[-7,5,10,10,10,4,-3,10,-5,-9,-5,9],[8,10,4,-6,1,-3,-9,-8,10,-3,-6,-5],[5,-4,-8,10,7,-5,9,1,5,1,-8,3],[1,-1,8,8,1,6,4,-9,-7,1,-8,-6],[-8,-4,-7,4,-2,-7,-2,6,6,5,7,3],[8,7,-10,-6,-1,-3,-7,6,-4,2,7,-1],[7,5,8,7,5,2,9,2,-10,8,-3,-9],[-9,-3,6,-1,10,6,-7,-5,-8,-8,7,-7],[-6,-6,-3,-8,-5,-9,6,3,-8,-3,-3,5],[-7,8,-4,3,-2,-1,-6,-7,9,-10,-6,9],[6,-6,4,2,-6,-7,7,-8,-1,-4,-7,5],[-7,-1,2,6,5,8,-5,9,1,10,8,-9],[-9,3,5,2,-7,-6,4,-6,4,-6,-4,-10]]], dtype = "uint16")#candidate|6128|(5, 13, 12)|const|uint16
bop_6129 = relay.less_equal(var_6127.astype('bool'), const_6128.astype('bool')) # shape=(5, 13, 12)
output = bop_6129
output2 = bop_6129
func_6132 = relay.Function([var_6127,], output)
mod['func_6132'] = func_6132
mod = relay.transform.InferType()(mod)
var_6133 = relay.var("var_6133", dtype = "uint16", shape = (5, 13, 1))#candidate|6133|(5, 13, 1)|var|uint16
output = func_6132(var_6133)
func_6134 = relay.Function([var_6133], output)
mutated_mod['func_6134'] = func_6134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6278 = relay.var("var_6278", dtype = "float32", shape = (12, 3, 11))#candidate|6278|(12, 3, 11)|var|float32
var_6279 = relay.var("var_6279", dtype = "float32", shape = (12, 3, 11))#candidate|6279|(12, 3, 11)|var|float32
bop_6280 = relay.floor_divide(var_6278.astype('float32'), relay.reshape(var_6279.astype('float32'), relay.shape_of(var_6278))) # shape=(12, 3, 11)
output = bop_6280
output2 = bop_6280
func_6286 = relay.Function([var_6278,var_6279,], output)
mod['func_6286'] = func_6286
mod = relay.transform.InferType()(mod)
var_6287 = relay.var("var_6287", dtype = "float32", shape = (12, 3, 11))#candidate|6287|(12, 3, 11)|var|float32
var_6288 = relay.var("var_6288", dtype = "float32", shape = (12, 3, 11))#candidate|6288|(12, 3, 11)|var|float32
output = func_6286(var_6287,var_6288,)
func_6289 = relay.Function([var_6287,var_6288,], output)
mutated_mod['func_6289'] = func_6289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6805 = relay.var("var_6805", dtype = "uint32", shape = (11, 14, 2))#candidate|6805|(11, 14, 2)|var|uint32
const_6806 = relay.const([[[-9,-6],[-8,-6],[-7,-7],[-1,-1],[-8,2],[-4,-6],[5,-10],[7,10],[4,3],[-5,4],[-5,-10],[10,3],[-2,1],[-3,-6]],[[-8,-5],[4,3],[3,9],[-6,-10],[5,-7],[3,-4],[-9,1],[-3,2],[5,-8],[-5,6],[-6,8],[9,-3],[9,-9],[10,-7]],[[10,2],[-7,7],[-4,-1],[-6,6],[2,-4],[-3,-5],[-6,5],[10,6],[-2,-3],[3,-10],[-7,-5],[-8,6],[7,10],[8,-10]],[[-2,10],[-9,-1],[-5,9],[-6,-6],[-10,7],[1,5],[-5,6],[2,8],[3,5],[-6,-2],[-3,-2],[9,-4],[-6,4],[-4,7]],[[-6,3],[-1,2],[-8,-5],[-5,9],[7,7],[-7,5],[-1,5],[10,3],[5,3],[-6,9],[4,-10],[2,-7],[1,6],[-6,-3]],[[10,10],[-10,-5],[10,8],[-3,-2],[2,5],[3,4],[5,-2],[-3,-8],[3,-2],[-3,-5],[-4,-3],[-1,-5],[-8,10],[10,3]],[[-5,6],[10,-10],[4,-7],[10,-1],[6,-3],[-10,-3],[-7,-8],[-6,-4],[-8,9],[-6,4],[-3,-6],[2,9],[-3,4],[-1,2]],[[9,-8],[-2,5],[5,-1],[-5,3],[-3,-2],[8,2],[6,-7],[-4,-6],[8,7],[-6,-2],[-8,-6],[-6,-2],[-7,6],[8,9]],[[4,10],[2,1],[9,9],[-10,-10],[4,1],[2,10],[2,5],[4,3],[-7,-7],[10,-8],[-6,6],[-8,4],[2,-1],[-1,-4]],[[-9,-4],[-4,-4],[-9,-1],[-1,-9],[7,-2],[-4,6],[-2,-10],[10,-9],[-6,1],[-7,10],[-5,6],[-1,-2],[-2,1],[1,-2]],[[4,9],[10,2],[-8,-6],[7,-2],[7,10],[-4,-4],[7,10],[5,-10],[-4,3],[-4,9],[-8,-6],[1,9],[7,-7],[10,-5]]], dtype = "uint32")#candidate|6806|(11, 14, 2)|const|uint32
bop_6807 = relay.logical_xor(var_6805.astype('uint32'), relay.reshape(const_6806.astype('uint32'), relay.shape_of(var_6805))) # shape=(11, 14, 2)
func_5714_call = mod.get_global_var('func_5714')
func_5716_call = mutated_mod.get_global_var('func_5716')
var_6822 = relay.var("var_6822", dtype = "float64", shape = (196,))#candidate|6822|(196,)|var|float64
call_6821 = relay.TupleGetItem(func_5714_call(relay.reshape(var_6822.astype('float64'), [14, 7, 2])), 0)
call_6823 = relay.TupleGetItem(func_5716_call(relay.reshape(var_6822.astype('float64'), [14, 7, 2])), 0)
uop_6855 = relay.sqrt(call_6821.astype('float64')) # shape=(14, 7, 2)
uop_6857 = relay.sqrt(call_6823.astype('float64')) # shape=(14, 7, 2)
const_6860 = relay.const([[[10,-10],[-8,-8],[2,-2],[9,5],[-2,2],[1,-5],[9,7],[-7,-3],[-4,5],[-4,5],[-2,4],[-2,9],[1,1],[9,8]],[[-4,-2],[-7,-9],[10,1],[1,-1],[-4,6],[6,-10],[-7,3],[-1,-6],[4,-5],[4,10],[-9,7],[10,1],[-5,-1],[-2,-9]],[[4,-7],[-3,-9],[2,7],[-7,10],[-1,-6],[-5,4],[5,10],[-8,8],[-3,8],[-9,-2],[-10,-5],[-8,-5],[-1,10],[9,5]],[[-9,9],[8,-9],[2,8],[4,-2],[-10,5],[1,-9],[-2,-10],[2,3],[4,1],[1,2],[9,7],[-1,10],[-6,-1],[7,-1]],[[8,-8],[-7,-4],[-4,3],[-6,9],[7,9],[-2,1],[-5,7],[4,-9],[-9,3],[-9,-7],[3,-8],[-6,-2],[-2,-3],[1,-4]],[[-8,-6],[-7,5],[3,2],[-6,-7],[-2,7],[2,1],[2,8],[-7,10],[3,8],[-3,8],[2,2],[-2,6],[-1,-9],[2,-9]],[[-5,-8],[1,-10],[5,6],[2,8],[7,-1],[-6,-10],[9,2],[-3,-6],[9,-3],[-3,5],[-10,10],[9,5],[7,-3],[-2,-1]],[[-6,4],[5,-8],[-5,5],[3,-8],[2,-6],[-5,7],[8,4],[-4,-10],[-8,-8],[4,7],[6,-9],[-1,3],[-6,-4],[-9,-4]],[[10,-6],[5,-5],[-2,-5],[-10,8],[-4,6],[-6,9],[-5,5],[-4,2],[9,2],[-3,6],[-1,-4],[3,10],[8,1],[2,-6]],[[-2,2],[9,4],[1,-1],[-3,2],[8,-9],[-9,-8],[-3,-3],[-10,-4],[9,10],[2,-8],[-10,-9],[-8,8],[-10,-6],[-6,-8]],[[-5,5],[-9,8],[9,-7],[-2,5],[-8,6],[9,1],[-1,-8],[3,-5],[6,-6],[9,2],[3,-8],[-6,8],[9,-7],[8,-8]]], dtype = "uint32")#candidate|6860|(11, 14, 2)|const|uint32
bop_6861 = relay.left_shift(const_6806.astype('uint64'), relay.reshape(const_6860.astype('uint64'), relay.shape_of(const_6806))) # shape=(11, 14, 2)
func_2022_call = mod.get_global_var('func_2022')
func_2025_call = mutated_mod.get_global_var('func_2025')
const_6866 = relay.const([2.574146,1.387219,-3.168849,3.102154,-5.027476,-2.338829,-9.904756,4.016705,-4.576942,-8.727829,5.047695,-6.818929,-6.222826,5.071726,8.193611,4.609407,-6.923879,7.843847,-6.788313,0.086381,2.755905,6.905193,9.559814,-0.064256,-1.226364,1.650036,7.604988,-3.773279,-4.910682,-0.711243,-9.024607,-0.739096,-2.961541,-8.142706,9.501843,4.121716,6.496998,-7.829216,-9.765774,-8.960756,0.636727,-3.397657,-5.334269,8.827744,-9.517363,-9.708397,0.778664,-6.843532,-1.915101,2.923063,-7.393688,6.278887,4.734966,7.061523,-1.113648,-6.550013,9.544691,-0.952531,3.495611,-3.053838,6.190243,5.278605,-6.170926,2.975386,-5.953366,-2.839786,8.099100,-0.923198,4.316904,-4.051776,-3.558529,-8.887300,3.217192,4.318845,-8.001356,0.775677,-2.691417,-5.228831,-0.932714,9.416622], dtype = "float64")#candidate|6866|(80,)|const|float64
call_6865 = func_2022_call(relay.reshape(const_6866.astype('float64'), [1, 16, 5]))
call_6867 = func_2022_call(relay.reshape(const_6866.astype('float64'), [1, 16, 5]))
func_2925_call = mod.get_global_var('func_2925')
func_2929_call = mutated_mod.get_global_var('func_2929')
var_6877 = relay.var("var_6877", dtype = "float32", shape = (1365,))#candidate|6877|(1365,)|var|float32
const_6878 = relay.const([6.194302,-2.379693,7.023526,-7.134005,7.837118,1.152312,8.712797,0.536661,-7.300523,1.577297,6.706244,-2.663978,-3.401021,-3.763693,-2.323614,1.908296,-2.409556,9.747333,-6.103197,-5.429788,4.649824,8.076427,-8.401401,-5.472944,4.330357,-3.739886,2.199394,-2.801145,7.728278,1.184754,-5.132561,9.188796,-8.362577,-4.847578,1.934730,-1.185797,-2.777916,2.935744,-1.113016,3.569111,3.949364,-6.765356,-2.052475,9.206970,6.393344,1.344079,1.909014,-5.184791,6.352740,-0.669288,6.113537,8.008831,-7.506368,-1.134418,-9.177032,-1.637115,6.611226,-6.817387,7.781685,0.762389,-3.448411,-9.811315,-6.367609,7.305866,1.170194,-2.882965,-3.760399,-8.217326,-9.710677,6.774092,-2.949290,6.248039,-1.037293,6.349874,4.372206,-3.494099,8.580532,6.311784,2.146400,4.949364,-9.370875,3.240377,5.878590,1.557561,4.831933,-8.733464,-0.553619,3.838742,-1.129271,-5.936536,-8.263868,0.031150,5.132015,5.536144,-6.280427,6.014465,-0.100199,4.555868,-8.910877,6.774228,-8.017529,3.854573,6.345668,1.413608,8.525777,7.077562,5.623269,0.141717,9.098465,0.087159,0.447006,-9.596703,-0.743713,4.644172,-6.872833,-7.370234,-6.290440,3.137794,-2.244470,6.461664,-7.126107,3.770067,-7.566097,-4.178826,4.652920,5.085644,-8.404197,-4.447924,9.913990,1.826594,6.007416,-9.725227,2.242205,8.538397,0.969129,0.498344,-6.937873,9.870344,0.045076,-7.645197,4.926058,2.340432,-5.377138,-9.058931,8.001334,9.424538,8.773902,7.235042,-0.683792,1.823867,9.987833,2.858924,5.701999,-6.922936,1.277442,-2.011148,-1.195155,-4.201820,6.531899,2.650051,6.937430,2.619003,-2.826900,7.949724,-3.643860,-4.627457,-6.167022,3.070649,-4.948278,-5.647129,-9.438260,2.684755,0.948809,8.807172,-5.472714,4.463384,-2.579290,5.127515,0.286589,8.706278,9.576005,-5.606738,9.272978,3.382137,1.724466,4.801290,-9.744259,6.695535,6.012295,9.546253,5.883097,3.074996,4.026413,-8.074841,1.149741,-2.024284,-9.428819,-9.857108,-1.099431,2.365842,-4.744799,-6.040831,7.577984,-8.348552,-2.560379,0.909284,-6.999299,2.306744,2.415825,3.148838,6.370821,3.890144,-3.939291,-0.810264,9.064655,-5.142901,-9.957701,7.658803,-7.067880,-2.809943,1.889639,-1.951483,-1.206237,7.462962,-4.520508,8.782075,4.424802,7.499942,-3.247725,-0.270777,9.206132,3.590116,0.856810,-5.641157,-0.617398,2.626074,-1.046558,-1.127104,3.317157,-0.540584,-0.949954,-6.478178,-1.339472,6.694969,9.394859,-4.295830,-2.202226,-1.297109,-3.332043,-1.142456,-3.442790,-7.167290,6.333687,8.592023,8.852975,-3.255804,7.239606,7.676434,-5.282028,0.809584,-7.244463,7.989527,6.419455,7.310643,-5.241562,3.427997,6.115159,5.185232,-7.375558,0.311034,-4.761041,5.520770,-4.573853,6.899280,8.820249,-3.592112,-1.954237,-5.111089,-2.242543,-5.536050,5.401618,2.699473,7.449969,-5.027852,2.199319,8.209427,3.907254,-4.250069,9.201508,9.471258,-3.213771,8.340013,2.661930,-8.792787,4.094467,-0.508775,-1.607883,6.131413,-9.381909,0.746903,7.296601,4.407472,6.293588,2.744650,9.014083,2.998082,-8.027789,-2.995374,8.434527,5.237378,2.110648,0.482404,9.522580,-0.811204,-5.635622,-2.886406,-4.686102,4.653721,8.872244,4.142601,0.158191,-9.012018,8.040990,2.978150,8.223550,0.641216,-7.252477,5.782263,1.015558,5.029816,4.544146,9.068773,6.221674,-4.171375,3.326888,3.581950,-9.912689,7.124424,-2.821904,-5.174652,4.360754,5.683724,8.300008,-8.196481,-9.043660,-6.703362,2.541632,6.772671,-0.731012,1.424802,8.212690,-0.975742,-7.033933,0.564381,-0.789989,-0.655251,3.207775,3.372141,-1.179868,7.011736,7.154521,7.154028,-8.784150,2.791248,-1.515764,-7.445176,7.057005,7.609303,-3.842743,7.841770,3.670386,9.129261,0.030183,7.310933,-3.635029,-1.173138,-7.966384,-0.025733,-7.148230,-7.389694,-2.545314,5.775539,9.318163,2.558207,5.031827,5.122384,-7.745927,-0.837776,9.692871,-6.537656,-4.373784,-4.200538,-3.647758,5.311551,-1.161139,0.648140,0.386415,9.563955,7.262665,-4.972901,6.838196,6.523942,-3.850593,2.555874,1.930581,4.845893,-2.462822,3.808812,-7.589367,8.264355,-1.716206,4.037028,0.549444,-6.400523,4.380825,-2.575109,-2.283078,7.004099,8.326217,5.839867], dtype = "float32")#candidate|6878|(420,)|const|float32
call_6876 = relay.TupleGetItem(func_2925_call(relay.reshape(var_6877.astype('float32'), [13, 15, 7]), relay.reshape(const_6878.astype('float32'), [210, 2]), ), 4)
call_6879 = relay.TupleGetItem(func_2929_call(relay.reshape(var_6877.astype('float32'), [13, 15, 7]), relay.reshape(const_6878.astype('float32'), [210, 2]), ), 4)
output = relay.Tuple([bop_6807,var_6822,uop_6855,bop_6861,call_6865,const_6866,call_6876,var_6877,const_6878,])
output2 = relay.Tuple([bop_6807,var_6822,uop_6857,bop_6861,call_6867,const_6866,call_6879,var_6877,const_6878,])
func_6880 = relay.Function([var_6805,var_6822,var_6877,], output)
mod['func_6880'] = func_6880
mod = relay.transform.InferType()(mod)
var_6881 = relay.var("var_6881", dtype = "uint32", shape = (11, 14, 2))#candidate|6881|(11, 14, 2)|var|uint32
var_6882 = relay.var("var_6882", dtype = "float64", shape = (196,))#candidate|6882|(196,)|var|float64
var_6883 = relay.var("var_6883", dtype = "float32", shape = (1365,))#candidate|6883|(1365,)|var|float32
output = func_6880(var_6881,var_6882,var_6883,)
func_6884 = relay.Function([var_6881,var_6882,var_6883,], output)
mutated_mod['func_6884'] = func_6884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6952 = relay.var("var_6952", dtype = "float32", shape = (5, 7, 16))#candidate|6952|(5, 7, 16)|var|float32
uop_6953 = relay.sinh(var_6952.astype('float32')) # shape=(5, 7, 16)
output = uop_6953
output2 = uop_6953
func_6964 = relay.Function([var_6952,], output)
mod['func_6964'] = func_6964
mod = relay.transform.InferType()(mod)
var_6965 = relay.var("var_6965", dtype = "float32", shape = (5, 7, 16))#candidate|6965|(5, 7, 16)|var|float32
output = func_6964(var_6965)
func_6966 = relay.Function([var_6965], output)
mutated_mod['func_6966'] = func_6966
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7041 = relay.const([[[4.510332,-3.981940,6.650973,3.086048,7.475375,3.024626],[-5.892574,8.345894,-9.573639,8.568848,5.495526,-6.546294],[-4.305904,-3.142237,-0.977247,-1.475015,-0.756372,4.885130],[-1.186439,-4.854190,-9.892114,4.436123,2.672050,3.234579]],[[7.941808,-8.604120,-2.061327,4.264827,-6.661713,7.582738],[1.321704,-4.547922,-6.187770,3.821322,-5.564000,4.603284],[3.785942,0.692503,5.253833,-5.116740,-0.076385,-9.292987],[-9.171358,1.524089,6.645395,5.087276,-2.141711,8.891155]]], dtype = "float32")#candidate|7041|(2, 4, 6)|const|float32
uop_7042 = relay.exp(const_7041.astype('float32')) # shape=(2, 4, 6)
output = relay.Tuple([uop_7042,])
output2 = relay.Tuple([uop_7042,])
func_7045 = relay.Function([], output)
mod['func_7045'] = func_7045
mod = relay.transform.InferType()(mod)
output = func_7045()
func_7046 = relay.Function([], output)
mutated_mod['func_7046'] = func_7046
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7064 = relay.const([[[3,-6,10,-3,1,-10,-3,-4,-1,4,-2,-5,9],[-3,9,1,-9,10,-4,-6,8,-7,-6,-3,9,-4],[-2,2,-5,6,-3,5,-5,-3,-10,3,-6,9,3],[-10,9,3,-3,3,-2,-3,8,-6,4,2,-8,-4],[-5,-8,-6,1,2,-7,1,-4,-8,5,-4,-9,-10],[-4,7,-5,-4,-3,9,8,-7,6,-4,10,-7,10],[-8,2,1,8,-6,2,-4,-10,8,6,-2,5,5],[10,4,3,-10,-2,1,-10,-1,-6,-7,9,6,-3],[8,-4,5,4,3,-3,-4,-3,5,5,6,-2,-10],[8,-6,2,-9,10,-2,5,-4,10,5,7,9,-7]],[[-3,-9,2,7,-10,-6,9,5,10,9,-2,4,-2],[-9,-10,5,-7,-6,-2,9,-6,-3,10,-8,-9,4],[6,1,8,-9,6,4,8,4,-5,-4,-7,7,6],[-8,10,8,-10,4,-7,-10,8,-8,-6,-10,5,-3],[2,2,5,5,-1,-3,-2,-1,-1,3,5,-8,4],[-1,2,3,-5,-4,-2,8,-1,-4,-8,-1,-6,-8],[6,1,4,8,7,9,-6,-2,1,-2,9,-5,-3],[-7,1,-9,3,-6,1,2,7,9,6,4,9,10],[-3,8,1,6,-1,10,4,-1,-4,-4,6,-6,7],[10,5,-6,4,6,-9,9,7,6,-7,-10,-9,2]],[[10,-8,6,-2,7,-1,2,-8,2,-3,-9,2,-5],[7,-9,-1,-6,5,-6,-5,7,-6,5,-1,3,6],[2,-8,-2,-3,3,-9,3,-1,3,2,1,-10,-1],[-3,-5,-6,7,-6,-8,-8,-2,-10,-3,4,8,-7],[-1,5,-7,6,-5,1,-6,-1,-5,-5,-5,2,7],[-5,9,4,-6,3,7,-7,6,6,-4,-6,5,-6],[8,10,3,10,7,3,3,9,9,-6,-4,7,-9],[-9,-6,-7,-4,-10,4,8,-2,-7,10,6,-1,-4],[-5,5,6,10,-8,6,8,8,4,5,8,4,9],[-9,2,-7,6,3,-7,-4,4,6,6,5,-1,-9]],[[-4,9,2,-6,-1,3,9,1,-3,-1,-7,-8,-3],[4,-3,5,5,-3,-1,-1,-3,2,-4,-6,-10,-3],[-5,9,-4,-4,-7,6,-4,-8,7,-7,-8,2,2],[9,6,8,-5,-1,-1,7,7,-9,-4,4,-8,2],[10,10,-2,3,-10,-1,-7,5,-9,-7,6,7,-4],[-3,-4,2,9,-7,10,-10,10,-7,-4,-8,-3,-1],[-10,10,1,-10,-8,-8,-2,-1,4,3,5,-4,2],[-5,-6,5,5,2,1,-1,-4,-8,-4,1,2,-6],[5,5,-2,2,7,4,5,9,1,4,1,-4,-1],[-6,10,-10,-2,2,-7,1,-2,-9,-4,2,10,-1]],[[-8,-7,1,-1,-5,-5,10,-2,2,3,10,-2,2],[-10,-9,-3,-5,5,-6,-6,-9,-8,8,8,-5,5],[-2,-2,10,7,2,-4,2,2,6,-7,-6,-6,6],[6,4,7,-8,-2,-10,6,9,-8,1,-7,7,-4],[10,9,5,-9,7,-8,-6,3,-9,7,-1,9,6],[-9,-1,-6,-6,-8,10,-1,-7,2,-9,-9,-6,-6],[-5,8,-10,-2,3,-3,5,-9,1,4,9,1,-2],[6,-1,6,-9,7,3,-2,9,3,-9,9,-2,-7],[-8,9,-9,10,1,-5,-10,2,2,-10,-9,5,7],[7,-8,2,-3,7,-8,-3,3,-9,-2,6,5,5]],[[3,4,-5,-1,7,10,-4,5,4,-3,8,9,5],[4,-5,7,-2,-8,-2,-1,-2,-1,5,-10,-6,5],[-9,5,-2,-5,9,-5,-3,-9,3,7,8,4,6],[4,9,5,6,1,1,6,-9,1,7,-8,10,8],[3,-1,5,10,-7,-1,7,4,1,-7,3,2,-8],[10,6,-5,-9,-10,4,-10,5,7,-7,-7,8,-7],[-2,3,-1,-9,1,8,4,6,-7,10,-10,-1,5],[3,2,8,-1,7,4,-1,-1,6,-6,-5,9,-5],[2,5,-4,5,-2,-3,4,7,7,2,6,5,-10],[-6,-6,7,-7,-9,3,-10,-7,-8,-2,-8,2,8]]], dtype = "int8")#candidate|7064|(6, 10, 13)|const|int8
var_7065 = relay.var("var_7065", dtype = "int8", shape = (6, 10, 13))#candidate|7065|(6, 10, 13)|var|int8
bop_7066 = relay.minimum(const_7064.astype('int8'), relay.reshape(var_7065.astype('int8'), relay.shape_of(const_7064))) # shape=(6, 10, 13)
output = relay.Tuple([bop_7066,])
output2 = relay.Tuple([bop_7066,])
func_7072 = relay.Function([var_7065,], output)
mod['func_7072'] = func_7072
mod = relay.transform.InferType()(mod)
mutated_mod['func_7072'] = func_7072
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7073 = relay.var("var_7073", dtype = "int8", shape = (6, 10, 13))#candidate|7073|(6, 10, 13)|var|int8
func_7072_call = mutated_mod.get_global_var('func_7072')
call_7074 = func_7072_call(var_7073)
output = call_7074
func_7075 = relay.Function([var_7073], output)
mutated_mod['func_7075'] = func_7075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7045_call = mod.get_global_var('func_7045')
func_7046_call = mutated_mod.get_global_var('func_7046')
call_7094 = relay.TupleGetItem(func_7045_call(), 0)
call_7095 = relay.TupleGetItem(func_7046_call(), 0)
output = call_7094
output2 = call_7095
func_7098 = relay.Function([], output)
mod['func_7098'] = func_7098
mod = relay.transform.InferType()(mod)
output = func_7098()
func_7099 = relay.Function([], output)
mutated_mod['func_7099'] = func_7099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7098_call = mod.get_global_var('func_7098')
func_7099_call = mutated_mod.get_global_var('func_7099')
call_7120 = func_7098_call()
call_7121 = func_7098_call()
output = call_7120
output2 = call_7121
func_7124 = relay.Function([], output)
mod['func_7124'] = func_7124
mod = relay.transform.InferType()(mod)
output = func_7124()
func_7125 = relay.Function([], output)
mutated_mod['func_7125'] = func_7125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mod.get_global_var('func_7124')
func_7125_call = mutated_mod.get_global_var('func_7125')
call_7219 = func_7124_call()
call_7220 = func_7124_call()
output = relay.Tuple([call_7219,])
output2 = relay.Tuple([call_7220,])
func_7221 = relay.Function([], output)
mod['func_7221'] = func_7221
mod = relay.transform.InferType()(mod)
output = func_7221()
func_7222 = relay.Function([], output)
mutated_mod['func_7222'] = func_7222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7221_call = mod.get_global_var('func_7221')
func_7222_call = mutated_mod.get_global_var('func_7222')
call_7239 = relay.TupleGetItem(func_7221_call(), 0)
call_7240 = relay.TupleGetItem(func_7222_call(), 0)
const_7250 = relay.const([[[-7.018080,-6.945137,-4.143784,-0.585047,9.416986,4.807699],[-0.448671,-6.187407,-2.587956,6.052929,-6.204945,-6.674066],[5.245126,-8.342783,3.201128,7.520883,-0.588317,2.391857],[9.387936,5.705269,-4.749352,-5.628966,-9.608287,2.419191]],[[1.580308,3.516126,2.750327,-9.614609,-1.147470,8.311330],[-5.465740,6.281561,-9.445356,1.672639,-5.084281,7.388274],[6.378788,-1.827239,-2.067298,-0.572240,-3.215383,4.410893],[-7.283052,-0.651543,4.706293,-3.372435,-5.879479,-0.667348]]], dtype = "float32")#candidate|7250|(2, 4, 6)|const|float32
bop_7251 = relay.not_equal(call_7239.astype('bool'), relay.reshape(const_7250.astype('bool'), relay.shape_of(call_7239))) # shape=(2, 4, 6)
bop_7254 = relay.not_equal(call_7240.astype('bool'), relay.reshape(const_7250.astype('bool'), relay.shape_of(call_7240))) # shape=(2, 4, 6)
bop_7269 = relay.maximum(bop_7251.astype('uint64'), relay.reshape(const_7250.astype('uint64'), relay.shape_of(bop_7251))) # shape=(2, 4, 6)
bop_7272 = relay.maximum(bop_7254.astype('uint64'), relay.reshape(const_7250.astype('uint64'), relay.shape_of(bop_7254))) # shape=(2, 4, 6)
func_3590_call = mod.get_global_var('func_3590')
func_3593_call = mutated_mod.get_global_var('func_3593')
var_7282 = relay.var("var_7282", dtype = "float32", shape = (9, 60))#candidate|7282|(9, 60)|var|float32
call_7281 = func_3590_call(relay.reshape(var_7282.astype('float32'), [15, 4, 9]))
call_7283 = func_3590_call(relay.reshape(var_7282.astype('float32'), [15, 4, 9]))
func_7045_call = mod.get_global_var('func_7045')
func_7046_call = mutated_mod.get_global_var('func_7046')
call_7296 = relay.TupleGetItem(func_7045_call(), 0)
call_7297 = relay.TupleGetItem(func_7046_call(), 0)
bop_7317 = relay.minimum(const_7250.astype('int16'), relay.reshape(bop_7251.astype('int16'), relay.shape_of(const_7250))) # shape=(2, 4, 6)
bop_7320 = relay.minimum(const_7250.astype('int16'), relay.reshape(bop_7254.astype('int16'), relay.shape_of(const_7250))) # shape=(2, 4, 6)
func_7072_call = mod.get_global_var('func_7072')
func_7075_call = mutated_mod.get_global_var('func_7075')
const_7327 = relay.const([9,-4,2,-2,-1,2,-7,-10,-2,8,6,5,-9,-2,-10,-8,9,-9,-5,-3,-5,8,8,7,-4,-6,-2,-6,-1,-3,9,8,-1,-7,10,-5,-7,-1,1,-6,2,7,2,4,4,-4,9,1,1,-8,-9,7,8,-10,-5,-5,-8,-10,-8,4,4,-4,-10,-2,-4,1,3,-1,8,-1,-10,2,1,-8,8,10,10,4,-1,-10,-7,10,2,3,3,-3,-10,-10,-6,-7,-10,6,-3,1,-7,8,-3,3,10,-5,10,5,-4,-9,1,7,-5,3,-5,1,-5,-7,-9,-6,-8,1,1,-6,-9,7,2,-3,-9,2,-9,8,-4,-4,5,2,-3,1,-7,10,3,7,-3,2,-7,10,9,-3,2,6,9,3,10,-7,1,6,9,1,4,-8,8,-10,-5,-2,10,6,-7,-1,-3,8,10,-7,-7,-2,2,5,-5,8,6,9,-9,7,-4,-5,-9,-10,-6,9,-7,-6,9,10,-6,6,-8,10,-9,-5,7,1,-2,-6,-10,-4,6,-8,3,10,8,-1,-10,4,-10,-4,9,-3,-6,1,-6,7,-7,6,4,-9,-4,7,-3,-7,1,8,-7,-3,1,-3,3,8,4,9,-4,8,-1,3,-9,-7,-4,-4,-7,5,3,7,-7,-7,9,-1,-6,-10,-6,-1,5,-7,2,-1,-10,-6,-6,8,-8,-6,-1,-9,-6,4,-5,-8,10,1,-9,-10,1,-2,1,-2,-7,5,5,-6,6,-4,-4,1,-10,-5,-7,7,-3,2,-9,2,-3,3,-2,1,-9,-8,9,-7,4,-7,-9,6,5,7,-2,-9,5,-5,3,4,10,4,-1,-8,5,3,-2,-7,9,-1,2,-8,-6,-3,-8,10,6,7,7,2,3,-7,6,-3,9,-6,8,7,6,2,6,1,-7,9,6,-5,9,-5,7,10,6,4,-9,-5,-10,8,-8,-8,-7,-9,2,-1,8,-8,8,1,-5,5,8,10,6,6,4,8,-2,-4,3,-5,-3,-9,10,-4,-7,-10,8,4,7,9,5,5,-6,-4,-4,3,-4,10,-2,-1,-3,3,1,7,-1,-1,6,6,3,-3,10,6,-8,-8,-1,7,-1,7,-2,-2,-3,-9,-9,10,-2,-10,-1,-6,5,7,-4,1,-9,-7,-5,3,-4,-8,5,4,3,2,10,-10,2,2,4,-1,-4,-3,9,-6,6,5,-1,1,-1,-7,10,8,7,-8,-3,-3,7,-5,-3,9,-6,3,3,3,-6,7,-8,-8,4,3,4,4,5,10,-10,-7,5,-6,-5,-10,-7,-9,-1,9,4,3,-1,1,-6,-4,-2,-7,-3,3,1,-9,2,5,-6,9,6,9,-2,-1,-1,-7,8,-10,-6,-6,-6,-5,-6,2,-3,-3,-6,6,3,6,-4,9,-6,10,-1,9,5,6,4,-3,-8,8,9,1,5,7,10,-1,6,8,-2,-3,-1,-10,6,4,10,-9,7,-10,-7,2,-5,-2,6,6,-7,5,-9,-2,8,8,-7,-8,9,7,-7,1,-1,2,-5,3,9,-9,-5,-3,9,3,-10,-2,-9,5,9,-9,-9,8,-9,-5,1,7,6,-10,-5,3,-4,-4,-6,-10,-5,5,-7,-7,4,-7,3,-2,5,-4,-5,-6,1,-1,-1,10,-7,9,8,10,-7,8,10,10,1,8,10,2,-5,6,1,1,3,-2,7,2,9,-5,9,8,7,4,9,-9,-9,10,3,8,3,-8,1,6,1,3,-5,1,-5,1,1,6,-5,1,-8,-7,-8,3,6,-1,9,10,-3,7,-6,-1,6,-8,-6,10,-8,8,3,-5,-1,7,-10,-5,8,2,10,-2,5,-9,8,8,8,10,-7,2,1,7,8,4,-6,9,-4,-4,10,-9,-5,-4,2,6,-9,5,-8,1,8,4,-4,10,4,6,-7,4,-1,-5,-10,-2,9,-1,2,5,-7,-6,3,-10,9,-3,-10,-10,-3,6,8,-4,-5,-6,-7,9,-1,9,-10,-1,5,-7,8,8,2,7,-9,-7,-6,-3,7,10,-4,1,6,-5,5,5,-9,7,6,3], dtype = "int8")#candidate|7327|(780,)|const|int8
call_7326 = relay.TupleGetItem(func_7072_call(relay.reshape(const_7327.astype('int8'), [6, 10, 13])), 0)
call_7328 = relay.TupleGetItem(func_7075_call(relay.reshape(const_7327.astype('int8'), [6, 10, 13])), 0)
func_4167_call = mod.get_global_var('func_4167')
func_4171_call = mutated_mod.get_global_var('func_4171')
const_7330 = relay.const(-4, dtype = "uint8")#candidate|7330|()|const|uint8
var_7331 = relay.var("var_7331", dtype = "int64", shape = (768,))#candidate|7331|(768,)|var|int64
call_7329 = relay.TupleGetItem(func_4167_call(relay.reshape(const_7330.astype('uint8'), []), relay.reshape(var_7331.astype('int64'), [768,]), ), 0)
call_7332 = relay.TupleGetItem(func_4171_call(relay.reshape(const_7330.astype('uint8'), []), relay.reshape(var_7331.astype('int64'), [768,]), ), 0)
output = relay.Tuple([bop_7269,call_7281,var_7282,call_7296,bop_7317,call_7326,const_7327,call_7329,const_7330,var_7331,])
output2 = relay.Tuple([bop_7272,call_7283,var_7282,call_7297,bop_7320,call_7328,const_7327,call_7332,const_7330,var_7331,])
func_7336 = relay.Function([var_7282,var_7331,], output)
mod['func_7336'] = func_7336
mod = relay.transform.InferType()(mod)
var_7337 = relay.var("var_7337", dtype = "float32", shape = (9, 60))#candidate|7337|(9, 60)|var|float32
var_7338 = relay.var("var_7338", dtype = "int64", shape = (768,))#candidate|7338|(768,)|var|int64
output = func_7336(var_7337,var_7338,)
func_7339 = relay.Function([var_7337,var_7338,], output)
mutated_mod['func_7339'] = func_7339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7343 = relay.var("var_7343", dtype = "bool", shape = (1, 15, 1))#candidate|7343|(1, 15, 1)|var|bool
var_7344 = relay.var("var_7344", dtype = "bool", shape = (10, 15, 6))#candidate|7344|(10, 15, 6)|var|bool
bop_7345 = relay.logical_or(var_7343.astype('bool'), var_7344.astype('bool')) # shape=(10, 15, 6)
var_7349 = relay.var("var_7349", dtype = "bool", shape = (10, 15, 6))#candidate|7349|(10, 15, 6)|var|bool
bop_7350 = relay.not_equal(bop_7345.astype('bool'), relay.reshape(var_7349.astype('bool'), relay.shape_of(bop_7345))) # shape=(10, 15, 6)
output = bop_7350
output2 = bop_7350
func_7353 = relay.Function([var_7343,var_7344,var_7349,], output)
mod['func_7353'] = func_7353
mod = relay.transform.InferType()(mod)
var_7354 = relay.var("var_7354", dtype = "bool", shape = (1, 15, 1))#candidate|7354|(1, 15, 1)|var|bool
var_7355 = relay.var("var_7355", dtype = "bool", shape = (10, 15, 6))#candidate|7355|(10, 15, 6)|var|bool
var_7356 = relay.var("var_7356", dtype = "bool", shape = (10, 15, 6))#candidate|7356|(10, 15, 6)|var|bool
output = func_7353(var_7354,var_7355,var_7356,)
func_7357 = relay.Function([var_7354,var_7355,var_7356,], output)
mutated_mod['func_7357'] = func_7357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7098_call = mod.get_global_var('func_7098')
func_7099_call = mutated_mod.get_global_var('func_7099')
call_7378 = func_7098_call()
call_7379 = func_7098_call()
func_1901_call = mod.get_global_var('func_1901')
func_1905_call = mutated_mod.get_global_var('func_1905')
var_7381 = relay.var("var_7381", dtype = "int64", shape = (768, 1))#candidate|7381|(768, 1)|var|int64
call_7380 = relay.TupleGetItem(func_1901_call(relay.reshape(var_7381.astype('int64'), [12, 4, 16]), relay.reshape(var_7381.astype('int64'), [12, 4, 16]), ), 0)
call_7382 = relay.TupleGetItem(func_1905_call(relay.reshape(var_7381.astype('int64'), [12, 4, 16]), relay.reshape(var_7381.astype('int64'), [12, 4, 16]), ), 0)
output = relay.Tuple([call_7378,call_7380,var_7381,])
output2 = relay.Tuple([call_7379,call_7382,var_7381,])
func_7384 = relay.Function([var_7381,], output)
mod['func_7384'] = func_7384
mod = relay.transform.InferType()(mod)
mutated_mod['func_7384'] = func_7384
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7385 = relay.var("var_7385", dtype = "int64", shape = (768, 1))#candidate|7385|(768, 1)|var|int64
func_7384_call = mutated_mod.get_global_var('func_7384')
call_7386 = func_7384_call(var_7385)
output = call_7386
func_7387 = relay.Function([var_7385], output)
mutated_mod['func_7387'] = func_7387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mod.get_global_var('func_7124')
func_7125_call = mutated_mod.get_global_var('func_7125')
call_7389 = func_7124_call()
call_7390 = func_7124_call()
func_206_call = mod.get_global_var('func_206')
func_208_call = mutated_mod.get_global_var('func_208')
var_7393 = relay.var("var_7393", dtype = "float32", shape = (60,))#candidate|7393|(60,)|var|float32
call_7392 = relay.TupleGetItem(func_206_call(relay.reshape(var_7393.astype('float32'), [6, 5, 2])), 0)
call_7394 = relay.TupleGetItem(func_208_call(relay.reshape(var_7393.astype('float32'), [6, 5, 2])), 0)
output = relay.Tuple([call_7389,call_7392,var_7393,])
output2 = relay.Tuple([call_7390,call_7394,var_7393,])
func_7397 = relay.Function([var_7393,], output)
mod['func_7397'] = func_7397
mod = relay.transform.InferType()(mod)
mutated_mod['func_7397'] = func_7397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7398 = relay.var("var_7398", dtype = "float32", shape = (60,))#candidate|7398|(60,)|var|float32
func_7397_call = mutated_mod.get_global_var('func_7397')
call_7399 = func_7397_call(var_7398)
output = call_7399
func_7400 = relay.Function([var_7398], output)
mutated_mod['func_7400'] = func_7400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7045_call = mod.get_global_var('func_7045')
func_7046_call = mutated_mod.get_global_var('func_7046')
call_7404 = relay.TupleGetItem(func_7045_call(), 0)
call_7405 = relay.TupleGetItem(func_7046_call(), 0)
func_6964_call = mod.get_global_var('func_6964')
func_6966_call = mutated_mod.get_global_var('func_6966')
var_7413 = relay.var("var_7413", dtype = "float32", shape = (2, 280))#candidate|7413|(2, 280)|var|float32
call_7412 = func_6964_call(relay.reshape(var_7413.astype('float32'), [5, 7, 16]))
call_7414 = func_6964_call(relay.reshape(var_7413.astype('float32'), [5, 7, 16]))
uop_7417 = relay.sinh(call_7404.astype('float32')) # shape=(2, 4, 6)
uop_7419 = relay.sinh(call_7405.astype('float32')) # shape=(2, 4, 6)
output = relay.Tuple([call_7412,var_7413,uop_7417,])
output2 = relay.Tuple([call_7414,var_7413,uop_7419,])
func_7421 = relay.Function([var_7413,], output)
mod['func_7421'] = func_7421
mod = relay.transform.InferType()(mod)
mutated_mod['func_7421'] = func_7421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7422 = relay.var("var_7422", dtype = "float32", shape = (2, 280))#candidate|7422|(2, 280)|var|float32
func_7421_call = mutated_mod.get_global_var('func_7421')
call_7423 = func_7421_call(var_7422)
output = call_7423
func_7424 = relay.Function([var_7422], output)
mutated_mod['func_7424'] = func_7424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7045_call = mod.get_global_var('func_7045')
func_7046_call = mutated_mod.get_global_var('func_7046')
call_7465 = relay.TupleGetItem(func_7045_call(), 0)
call_7466 = relay.TupleGetItem(func_7046_call(), 0)
output = call_7465
output2 = call_7466
func_7480 = relay.Function([], output)
mod['func_7480'] = func_7480
mod = relay.transform.InferType()(mod)
output = func_7480()
func_7481 = relay.Function([], output)
mutated_mod['func_7481'] = func_7481
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7502 = relay.constdtype = "float64")#candidate|7502|(14, 9, 14)|const|float64
var_7503 = relay.var("var_7503", dtype = "float64", shape = (14, 9, 14))#candidate|7503|(14, 9, 14)|var|float64
bop_7504 = relay.mod(const_7502.astype('float64'), relay.reshape(var_7503.astype('float64'), relay.shape_of(const_7502))) # shape=(14, 9, 14)
output = relay.Tuple([bop_7504,])
output2 = relay.Tuple([bop_7504,])
func_7508 = relay.Function([var_7503,], output)
mod['func_7508'] = func_7508
mod = relay.transform.InferType()(mod)
var_7509 = relay.var("var_7509", dtype = "float64", shape = (14, 9, 14))#candidate|7509|(14, 9, 14)|var|float64
output = func_7508(var_7509)
func_7510 = relay.Function([var_7509], output)
mutated_mod['func_7510'] = func_7510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7098_call = mod.get_global_var('func_7098')
func_7099_call = mutated_mod.get_global_var('func_7099')
call_7520 = func_7098_call()
call_7521 = func_7098_call()
func_7480_call = mod.get_global_var('func_7480')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_7522 = func_7480_call()
call_7523 = func_7480_call()
uop_7524 = relay.cosh(call_7520.astype('float64')) # shape=(2, 4, 6)
uop_7526 = relay.cosh(call_7521.astype('float64')) # shape=(2, 4, 6)
output = relay.Tuple([call_7522,uop_7524,])
output2 = relay.Tuple([call_7523,uop_7526,])
func_7529 = relay.Function([], output)
mod['func_7529'] = func_7529
mod = relay.transform.InferType()(mod)
mutated_mod['func_7529'] = func_7529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7529_call = mutated_mod.get_global_var('func_7529')
call_7530 = func_7529_call()
output = call_7530
func_7531 = relay.Function([], output)
mutated_mod['func_7531'] = func_7531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mod.get_global_var('func_7124')
func_7125_call = mutated_mod.get_global_var('func_7125')
call_7587 = func_7124_call()
call_7588 = func_7124_call()
func_4167_call = mod.get_global_var('func_4167')
func_4171_call = mutated_mod.get_global_var('func_4171')
const_7592 = relay.const(-9, dtype = "uint8")#candidate|7592|()|const|uint8
var_7593 = relay.var("var_7593", dtype = "int64", shape = (768,))#candidate|7593|(768,)|var|int64
call_7591 = relay.TupleGetItem(func_4167_call(relay.reshape(const_7592.astype('uint8'), []), relay.reshape(var_7593.astype('int64'), [768,]), ), 0)
call_7594 = relay.TupleGetItem(func_4171_call(relay.reshape(const_7592.astype('uint8'), []), relay.reshape(var_7593.astype('int64'), [768,]), ), 0)
output = relay.Tuple([call_7587,call_7591,const_7592,var_7593,])
output2 = relay.Tuple([call_7588,call_7594,const_7592,var_7593,])
func_7602 = relay.Function([var_7593,], output)
mod['func_7602'] = func_7602
mod = relay.transform.InferType()(mod)
mutated_mod['func_7602'] = func_7602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7603 = relay.var("var_7603", dtype = "int64", shape = (768,))#candidate|7603|(768,)|var|int64
func_7602_call = mutated_mod.get_global_var('func_7602')
call_7604 = func_7602_call(var_7603)
output = call_7604
func_7605 = relay.Function([var_7603], output)
mutated_mod['func_7605'] = func_7605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7529_call = mod.get_global_var('func_7529')
func_7531_call = mutated_mod.get_global_var('func_7531')
call_7649 = relay.TupleGetItem(func_7529_call(), 1)
call_7650 = relay.TupleGetItem(func_7531_call(), 1)
output = call_7649
output2 = call_7650
func_7651 = relay.Function([], output)
mod['func_7651'] = func_7651
mod = relay.transform.InferType()(mod)
mutated_mod['func_7651'] = func_7651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7651_call = mutated_mod.get_global_var('func_7651')
call_7652 = func_7651_call()
output = call_7652
func_7653 = relay.Function([], output)
mutated_mod['func_7653'] = func_7653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7480_call = mod.get_global_var('func_7480')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_7691 = func_7480_call()
call_7692 = func_7480_call()
output = relay.Tuple([call_7691,])
output2 = relay.Tuple([call_7692,])
func_7701 = relay.Function([], output)
mod['func_7701'] = func_7701
mod = relay.transform.InferType()(mod)
output = func_7701()
func_7702 = relay.Function([], output)
mutated_mod['func_7702'] = func_7702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7221_call = mod.get_global_var('func_7221')
func_7222_call = mutated_mod.get_global_var('func_7222')
call_7739 = relay.TupleGetItem(func_7221_call(), 0)
call_7740 = relay.TupleGetItem(func_7222_call(), 0)
func_4275_call = mod.get_global_var('func_4275')
func_4279_call = mutated_mod.get_global_var('func_4279')
const_7745 = relay.const([-0.254209,-5.196382,-2.185184,6.114550,6.321269,-0.016197,1.452111,-4.055570,9.181413,-7.250016,-7.021531,-1.205433,0.963228,-0.986662,-5.794177,2.928329,4.870968,5.315648,-4.186235,0.257931,-4.999824,-7.881662,1.187377,3.935194,2.889142,-5.303028,-5.821791,1.418203,0.403251,-8.767047,1.507189,-2.164764,0.141225,5.314285,8.615879,-4.797153,-5.923871,6.705637,7.314714,-2.416614,2.003516,-3.575160,0.355729,6.162712,-8.788313,4.293219,1.061848,-1.303972,5.655141,-1.386191,-5.518837,-7.570244,4.106220,-9.558490,-5.467055,8.688317,0.645918,5.067762,5.411601,-4.035306,-2.287603,-0.742012,5.283828,-2.690397,-3.676739,7.898430,1.395025,9.016680,-8.733420,2.053848,-4.492160,-3.129895,1.124785,-7.519002,-6.648838,-8.641868,-8.574594,4.397569,0.039526,-6.830040,-3.755439,9.305802,6.694810,5.641534,-1.728879,-6.925369,7.441934,5.028652,-1.661369,-1.500296,-9.340428,0.900602,4.607151,-1.239968,5.658542,-7.935816,1.027975,0.770949,-3.659390,-6.641033,-7.165231,4.939166,8.100178,-8.648770,-7.724716,-1.518732,0.100413,-5.989737,-3.155386,5.049967,8.287387,-2.904751,4.307785,-3.135531,-4.904978,5.729280,7.355967,-6.433445,1.446222,6.702578,8.516089,-3.299359,2.006436,8.731593,1.601942,3.159359,-2.628739,7.112684,-6.983872,2.739596,-2.205831,7.759416,7.372555,-9.224623,-0.333633,0.046475,-9.996448,-0.835805,-0.172017,5.507251,-7.501467,-0.043740,-2.671910,6.089286,5.710624,4.999914,7.052049,-8.635125,8.017879,7.851313,-7.067350,7.452779,-7.697039,-3.749443,-5.898414,-5.190002,4.606237,3.518846,7.893634,-3.449654,-5.796562,-7.494756,-9.361704,-4.462430,-5.020517,9.847693,-7.849000,2.700930,-5.961821,7.872268,7.597867,8.010996,1.750788,2.438630,6.657482,5.784888,3.523222,3.635199,-7.909997,3.028472,4.531667,5.752852,-0.842953,-2.777201,3.027456,5.325606,-5.544614,6.969954,0.316545,-5.588637,-5.695284,-5.764443,8.530911,2.473764,-7.830168,-9.650129,2.012607,8.030650,-5.142465,-1.372985,-3.380278,4.408976,-0.094506,-9.849834,0.789799,4.728779,-5.115451,9.555460,0.471771,-6.830886,-8.968363,-8.457968,-0.397442,6.167358,8.805957,-1.721000,9.305529,-6.321026,-1.989605,4.029188,1.561109,6.463311,4.899355,-7.994574,0.173227,-1.276909,2.554626,7.337779,-9.922541,7.991152,-0.737585,0.648048,6.173850,-9.453409,-7.694129,5.610141,-6.199761,-3.149230,1.698626,-9.238853,3.503604,-4.297247,3.070772,-3.809238,-5.816779,-4.778470,-9.337110,-8.235202,6.888832,2.469553,2.176057,-8.654390,-5.738188,7.851966,2.730268,-5.839555,-1.280097,8.477347,0.406958,7.339435,8.253327,-1.227756,-9.888231,6.154335,6.604712,4.551613,1.259619,-7.539483,-4.586693,-6.477798,-9.970222,-6.541287,4.799857,-3.502215,-4.460599,3.440167,8.301576,5.310019,-7.865996,-9.311415,0.294386,-4.983841,3.525755,-4.394829,-0.768188,0.809419,-1.200835,8.378079,6.936550,-4.164172,-8.530038,-7.392031,6.317303,8.573376,-9.142412,-1.399182,4.882353,0.080881,0.170362,8.074336,-1.939582,-3.211117,-4.625035,-3.852268,-7.074745,7.438645,-8.082884,-9.739126,3.788082,-3.367232,2.713420,-7.242794,1.728176,2.475085,2.508438,2.454568,9.437009,-7.946771,8.636214,-9.136130,3.296397,-9.848176,0.955089,-2.304728,-7.819857,-3.308366,8.030480,6.472902,-9.889575,0.025252,9.005254,3.577950,8.041368,-5.438758,2.688841,-9.270619,0.772089,-6.935260,7.642509,4.054075,1.853666,-1.441866,-3.195645,-1.338090,-8.775633,8.072828,-3.226890,1.645388,-4.776390,-3.137798,-6.884805,1.865785,-1.431606,-3.524457,-9.120410,6.884552,6.237753,-0.470558,9.865010,0.692666,-1.180386,0.414164,3.524713,-1.457450,2.447310,1.470077,0.351837,9.704809,8.441964,-0.635477,3.518324,3.102390,1.227449,3.532886,-4.991633,-1.621643,8.938547,5.797788,-3.582778,-5.589614,8.025244,2.006207,-9.239705,-4.825926,-0.661407,0.667771,-8.159463,1.273457,-1.655238,5.920756,4.798600,-6.679656,0.864009,4.860935,8.537506,0.995583,-2.210720,-8.765921,7.321636,-4.866847,4.909579,-4.900708,-9.786489,0.003818,-3.255513,-5.115117,-8.670590,-8.201458,-9.862611,-7.983963,6.270165,-0.138716,-7.785510,7.007670,6.569104,-8.027535,1.083625,7.178506,-8.344292,6.715145,3.113467,-4.245937,-1.280096,1.203501,-9.189678,-4.078354,-1.814378,6.180139,8.201036,-6.337121,-7.914993,7.042368,5.758704,-0.459535,4.070890,-6.940999,5.988142,9.722235,8.085059,-1.396843,-1.634549,-6.470776,-6.389639,4.419296,-0.587912,-1.181476,-2.733956,-9.488150,-9.340774,3.624819,-9.062566,-5.585746,-0.227255,5.154501,9.515341,-6.543584,0.132593,-9.993418,-4.760282,5.721330,4.503472,-6.304739,-6.844918,-6.756504,4.083541,-5.979587,3.713147,8.299323,-3.146752,-9.227104,-6.880089,1.604133,4.801653,5.616040,-4.563001,-4.383026,2.092926,9.522657,7.086090,-2.390399,-8.519591,7.332841,-8.729520,6.976090,5.461513,-8.990392,-6.890078,2.683886,1.607200,-3.856460,-5.217150,7.130735,5.565216,1.236724,-9.872023,5.916495,-9.337107,4.457172,0.533017,-5.497598,-0.948528,-4.401620,-1.887102,-2.957387,0.350818,6.700477,8.065533,1.207298,-4.095626,4.007353,-2.562477,0.623573,8.977703,6.255858,2.561901,-1.340966,-4.357479,1.508974,-3.508548,-3.910718,-0.088360,2.925761,7.724634,-0.125631,7.542744,-8.608270,-4.875229,2.010701,-6.152782,-0.534679,-1.055879,9.388174,2.356247,8.803814,-5.460723,2.582567,-8.184273,-0.662694,5.868418,2.111812,2.457559,0.345847,7.001369,6.361691,0.218779,3.773907,-0.078060,5.707148,0.552078,-3.330369,-9.510894,-8.232440,-7.231882,-5.546946,5.041173,7.836618,-7.006585,-7.932026,6.438598,6.119782,8.234000,-2.545225,-2.591413,-7.767960,-8.326914,2.251588,-4.668820,6.529198,0.008717,4.709041,6.858202,7.124262,7.836914,1.923671,6.522680,2.989079,-5.291088,7.955275,0.181941,-8.578481,-1.289072,4.409860,-4.626420,5.950238,-1.424014,-5.381025,0.710293,9.351464,-8.396742,0.921332,-8.952357,-4.759911,-7.398935,9.527575,7.179264,-9.375984,0.395984,0.539223,-0.589502,6.350675,6.845637,5.585548,0.441877,6.699796,0.898464,-4.582341,0.366454,-7.067366,-3.410018,-5.511638,-4.392014,8.806311,-2.304214,0.059971,4.764860,1.888309,-4.323498,-5.425848,-9.270616,8.748888,-0.689979,4.518732,3.382864,-7.114258,9.589551,2.728913,1.473115,1.698766,5.771351,-3.173342,-7.863670,4.935171,-5.398942,-9.422598,1.979315,2.384071,5.212961,-4.526189,-5.954254,-3.045679,2.499439,5.626642,-9.430079,-0.358734,2.147295,2.404915,-5.753843,8.664255,-4.865388,1.350280,9.245837,0.816392,0.147661,5.648914,-3.310600,2.131310,-5.977799,-7.974038,-0.267165,-3.044101,-4.514089,8.272176,5.891691,3.697172,-1.001679,5.119801,8.203980,0.187927,-8.814278,9.110309,-5.132836,-1.093783,4.345611,-8.179992,3.034891,-6.900337,-8.062893,5.194155,-5.169914,1.796388,1.027640,-0.375217,1.139004,-7.621644,3.374220,9.313926,-8.590197,-8.796362,-6.732118,5.579603,7.065490,6.136325,7.851619,5.435562,-9.862927,5.236759,-5.270559,-8.605856,2.789651,7.754957,-8.693527,-0.947746,1.859386,0.072600,5.693164,9.031732,-5.219190,-5.820106,3.987403,0.307616,-7.459452,-6.386063,-3.877894,1.988066,7.762974,-1.520540,1.563140,-0.164822,6.737114,-0.954894,2.306688,-6.837166,1.603254,7.289450,-8.974344,-3.148204,3.825108,7.558890,2.997570,8.199042,-3.806599,0.376240,3.044296,-5.894189,0.046311,6.701197,-6.554631,-6.023114,5.251125,6.179230,-7.536355,-5.512383,-9.445738,8.450594,-3.477160,-9.980061,8.171111,-4.621700,3.822387,0.057807,-6.412845,6.434708,-9.075928,-9.406957,-3.209573,-8.515772,6.871634,-6.345186,-7.314172,6.380402,3.209944,5.361125,3.695961,2.087500,-9.988400,2.416014,8.534780,-6.994673,-2.543410,8.239550,-8.868085,3.735498,6.170563,2.093691,-8.405492,-8.947952,-7.123491,-3.311910,-2.121349,-4.533321,-7.639930,3.304854,8.756041,-5.362387,-5.447522,-7.776491,5.339550,-9.728243,9.102441,-4.654279,-8.714192,3.944165,9.819456,7.109993,1.807573,-2.526085,6.299752,-3.090425,6.276026,9.359058,-3.802714,-1.358495,2.031128,-9.066050,-6.395335,-2.541243,-9.937059,6.309096,2.201322,8.449783,7.513567,6.790398,4.054145,0.817868,-1.490511,-2.392474,-1.780548,-1.084779,5.479675,-6.993618,0.316282,-5.698525,3.256756,0.414767,-6.442999,4.226937,3.126471,2.347685,-6.670777,5.634991,1.260266,-2.138495,4.249242,1.575541,0.258972,-4.274218,1.806650,-8.269454,6.372624,0.220028,-2.458351,1.622691,3.166989,-1.253315,4.386226,-4.639379,7.396486,-3.896786,7.523049,1.393846,3.869141,-4.933434,2.791164,3.353926,-3.880821,-0.520276,-4.230528,-3.313898,-5.793802,2.847368,8.025628,-4.424863,-3.434010,5.113896,0.282202,6.891762,-8.807710,4.556156,-4.902163,-5.250474,2.692065,-5.216815,-0.183875,-0.123530,9.802429,-0.153887,0.494346,-4.465082,2.613909,-8.205822,-6.477377,-7.146497,0.143538,-7.936061,-3.113324,-8.306241,-5.413295,2.553806,-7.389266,1.864068,-4.399089,-2.285414,4.039979,3.708164,-4.403479,9.910896,8.504316,1.659364,2.131704,7.938634,2.702185,5.641926,-7.786573,-4.310742,-2.909357,-9.890524,-9.126203,8.381769,1.143530,-1.145883,-8.891016,7.269128,8.347290,-0.570932,-5.690682,1.104188,1.875372,8.612076,9.704578,-3.603735,-8.478946,-3.955518,6.769899,-8.486231,4.908250,-5.398339,-4.934073,9.547547,4.775573,-8.615364,2.262249,0.453677,-4.071049,-0.866332,-5.964371,-9.531220,-4.080821,8.577100,-4.455978,-4.692767,9.987705,5.549633,-5.389867,1.081664,-7.661202,-5.811533,9.704299,-7.203114,-4.264458,-6.452747,-0.239115,0.128010,6.556418,-4.924673,-6.064788,6.988794,-9.453569,9.717893,-5.745513,-1.049147,-5.010049,-9.392829,-7.682522,-7.382548,-5.648640,0.734099,2.051482,7.501538,-7.847955,-2.962793,-5.848546,-8.508702,-4.544458,-8.992950,-3.941887,5.233657,1.547599,3.744864,-8.419248,-6.548787], dtype = "float32")#candidate|7745|(980,)|const|float32
var_7746 = relay.var("var_7746", dtype = "float32", shape = (540,))#candidate|7746|(540,)|var|float32
const_7747 = relay.const([[-1.431849],[8.549670],[-7.627882],[4.640927],[-9.086085],[4.275366],[-7.634006],[6.177953],[-4.378362],[9.403387],[-7.977227],[-5.024598],[8.482247],[-3.104052],[9.518096],[-1.295447],[-0.779009],[-1.531183],[2.416485],[2.312427],[-8.766482],[4.541143],[6.825623],[-4.360838],[8.933424],[-1.811855],[0.945167],[0.037931],[-9.619886],[-2.051765],[1.617681],[-3.643636],[-3.285269],[-4.706544],[-8.955012],[3.778701],[-2.870065],[6.498695],[-4.810518],[1.064251],[-8.764778],[8.108659],[6.099112],[-7.988912],[2.365455],[3.465362],[-7.246851],[-1.782679],[0.195470],[-5.066105],[-7.267474],[-6.570248],[7.815743],[-4.076008],[9.051280],[7.657936],[8.062447],[7.538558],[8.626909],[9.107459],[-4.646617],[-0.643678],[-0.061071],[-2.286014],[3.666868],[1.686307],[-8.081608],[0.860673],[7.583741],[9.560748],[3.041539],[-0.530681],[-4.553027],[0.498685],[-8.717456],[-8.804716],[-3.744069],[3.947998],[0.561184],[-0.105291],[-7.935179],[-0.686210],[9.927851],[-9.181107],[9.138949],[7.906920],[-3.276918],[4.166918],[5.297864],[1.090666],[7.657720],[-7.692318],[-1.868697],[-0.224369],[6.498920],[-2.998485],[-3.793140],[8.123348],[-6.192710],[1.988795],[8.265543],[0.895279],[-4.671199],[-3.113250],[7.591817],[4.699128],[4.911072],[-0.344144],[0.374171],[6.860622],[0.930111],[9.256854],[-2.539545],[2.581640],[-0.633768],[-3.020382],[3.902671],[-9.910694],[2.430018],[0.374146],[-4.583404],[2.095345],[6.865193],[0.124369],[1.504791],[5.795061],[-4.750444],[-7.280133],[5.951989],[-5.498598],[-3.221815],[-2.051844],[-8.236791],[-3.169157],[9.620903],[-4.679550],[-1.310568],[-5.787909],[-3.854827],[7.777471],[-3.806994],[-2.343277],[0.598758],[-0.498417],[0.039169],[-9.945598],[3.401686],[3.620295],[5.720170],[4.771336],[-8.488038],[-4.523897],[-3.857371],[-5.397889],[-9.093964],[-0.063619],[-8.160514],[-3.827090],[7.726596],[9.567687],[9.166496],[5.585005],[-2.531790],[-3.963215],[-5.857529],[-0.143869],[3.438881],[5.413041],[0.999826],[-9.328206],[0.572920],[0.548289],[-0.438056],[9.446466],[-3.172998],[-7.274982],[7.389712],[-8.396637],[-7.265187],[6.198453],[8.078127],[7.849605],[8.732111],[-6.088929],[-1.560750],[-9.134705],[5.431883],[-0.144559],[8.925139],[5.431613],[-6.729573],[6.344505],[8.010626],[9.102150],[-9.977524],[-6.082000],[-4.151477],[9.750070],[2.072117],[9.303325],[-5.102864],[2.066579],[2.266269],[5.283137],[-8.938143],[-2.762388],[-0.871246],[-8.081404],[9.805280],[-4.183684],[-3.930766],[5.085956],[-2.583358],[-0.978359],[-4.872543],[-5.536597],[-9.475372],[-3.929611],[5.781557],[-7.271842],[8.113885],[-0.795330],[8.147809],[8.411514],[-7.870317],[-0.826880],[2.089326],[5.496642],[-6.494923],[1.575778],[0.702203],[-0.185101],[2.976102],[7.208592],[-6.984854],[-5.365282],[-8.483783],[-8.627220],[6.952879],[8.539900],[4.314047],[4.070219],[0.420993],[-0.758528],[-0.219303],[4.814243],[7.525608],[7.596984],[-9.941413],[5.684123],[3.306049],[-4.102916],[-7.963729],[5.582140],[6.401399],[5.325284],[-2.782682],[5.851188],[-4.945095],[-9.823804],[6.408574],[-4.296699],[6.779021],[0.493788],[6.569320],[-5.464875],[0.930115],[-8.888017],[1.620926],[2.635796],[-6.498490],[0.249793],[7.633534],[3.121225],[1.522678],[1.547369],[7.275642],[6.593423],[1.838333],[-9.878487],[-1.918204],[0.361029],[-1.212487],[0.244954],[6.234006],[-5.316227],[-9.124385],[1.935211],[-9.887556],[7.227269],[-3.062376],[-8.197798],[-4.679710],[-4.770846],[-3.009055],[-8.583619],[2.765204],[-7.188794],[-0.009718],[-8.945353],[7.574184],[7.931148],[-9.637372],[4.836549],[6.388916],[-5.050011],[3.669107],[7.670228],[5.372379],[-7.188380],[3.282812],[-4.478886],[-3.890995],[-5.283435],[-5.211962],[1.206227],[1.326572],[1.796405],[2.693142],[-1.259780],[1.079946],[-6.484106],[1.698103],[0.661464],[4.127881],[-1.621120],[-7.257709],[1.380164],[-6.954982],[8.750204],[-3.644915],[-1.035301],[-8.569674],[-4.802671],[-9.260779],[-2.484443],[6.332511],[2.829113],[8.085637],[8.609635],[-9.497555],[9.985626],[-7.449375],[7.060583],[-0.149745],[-4.728918],[5.524551],[-0.125338],[-2.483136],[9.400622],[5.942935],[2.846897],[-1.004899],[0.232728],[2.913664],[-5.915012],[-7.215904],[-3.347983],[2.191215],[6.614944],[1.304207],[-5.896881],[-4.959745],[-7.768960],[4.803418],[-1.029081],[1.894574],[-6.709741],[-6.305744],[7.462853],[-9.534634],[7.187732],[4.402884],[-7.433420],[0.318918],[-2.190040],[1.858942],[-9.580495],[8.138816],[-1.624767],[-2.765348],[5.123659],[-1.799493],[-1.540419],[7.601252],[-4.890658],[3.453581],[1.048309],[-4.021179],[3.733857],[8.910503],[-9.231470],[5.670854],[7.987947],[9.058592],[0.135207],[-5.376010],[8.739632],[-9.018472],[1.979271],[-8.912585],[-5.213089],[3.658889],[-0.922672],[2.272615],[5.693696],[-8.881740],[1.327788],[-0.351335],[-0.306711],[-7.970129],[-1.870871],[4.979141],[-3.041822],[4.903183],[7.353550],[6.375427],[6.577236],[6.497353],[-8.302660],[-1.712348],[-5.067625],[4.732733],[-5.652301],[-9.453709],[0.645563],[-8.237532],[0.169169],[-6.475120],[-8.393539],[7.267095],[8.078920],[2.488294],[4.087449],[-8.133414],[5.463138],[8.020084],[1.859276],[1.151028],[7.820673],[6.773983],[-9.748425],[-4.981065],[2.903487],[4.818985],[-9.769134],[5.857204],[-3.100600],[-0.621587],[-1.517294],[1.549085],[2.181437],[0.466466],[-3.703808],[-2.290314],[-5.584934],[-7.037041],[-4.277659],[-7.266015],[1.231365],[4.928771],[-8.043839],[9.921008],[7.464257],[-5.688760],[4.418584],[5.121194],[-4.119073],[5.801691],[1.757413],[-0.547123],[8.611205],[-5.569737],[0.390234],[1.609089],[3.460853],[-0.817007],[-5.093159],[-5.580519],[-4.575081],[4.113967],[-1.922884],[-6.964528],[7.015352],[5.456862],[-2.970402],[-8.575055],[5.543713],[9.980458],[6.888711],[0.200711],[5.906227],[-4.983966],[-3.304011],[3.278118],[6.998474],[-8.155587],[7.554249],[-8.644544],[-1.692044],[4.853671],[-9.423775],[9.361590],[-0.803973],[-0.342859],[8.255886],[-4.354429],[-4.325590],[-3.076711],[9.613060],[4.005293],[-9.029883],[8.486980],[-6.823545],[-2.575236],[4.562306],[7.963789],[9.075478],[2.327407],[9.094334],[5.791603],[-3.861292],[1.888641],[-8.763575],[4.020286],[7.377579],[-1.776016],[-9.539541],[9.291508],[-0.511438],[3.089606],[5.264470],[9.858825],[2.755064],[5.761838],[-0.909297],[-4.895875],[-6.741260],[1.011453],[6.269164],[1.496943],[4.980270],[4.279280],[0.349503],[1.602743],[-7.162401],[4.548586],[2.917314],[8.697910],[-4.506028],[-5.888411],[5.244487],[0.546637],[-1.021064],[7.621571],[6.106118],[5.607327],[-9.404322],[-9.851321],[8.477564],[0.401847],[-5.322705],[-6.461067],[0.053115],[5.212799],[-9.684323],[8.099164],[-4.939485],[8.837490],[7.987123],[-3.955900],[8.047794],[-3.046311],[-3.112287],[0.685946],[-0.279087],[-1.292443],[-6.671666],[-0.484939],[-8.303583],[8.017651],[5.007441],[-7.272504],[3.181795],[0.364044],[-6.270676],[0.669023],[8.411193],[-4.471524],[-2.360602],[5.986630],[-4.061616],[8.599410],[-1.353964],[2.299309],[2.965727],[0.961362],[8.565124],[-7.027903],[-4.052212],[0.915228],[-6.638399],[-7.005350],[-9.781825],[6.852152],[3.549014],[6.298862],[-6.679826],[-7.759686],[1.181300],[2.504185],[-9.371102],[5.824809],[2.853415],[-2.540914],[3.183503],[-2.953557],[-7.168933],[2.155603],[0.484942],[3.769328],[-4.679008],[1.787803],[9.348350],[9.585468],[9.513287],[-9.749926],[-0.460252],[8.743368],[9.326758],[4.715201],[3.391001],[-6.073001],[-6.419634],[2.155938],[7.335682],[-5.454703],[8.543001],[-6.509120],[6.461374],[5.753270],[9.673830],[-4.941611],[-6.819605],[1.143236],[4.041657],[-3.546025],[-0.188928],[-6.302455],[4.624699],[8.967612],[-9.797205],[-9.248416],[2.577653],[1.447104],[-4.836514],[2.896146],[-3.627925],[9.137658],[8.746243],[-5.758899],[0.839193],[3.228377],[-4.688871],[8.239898],[8.353406],[-8.985371],[-4.454386],[-5.292225],[0.705286],[1.887300],[-2.657049],[4.371688],[-2.084559],[3.200679],[0.771267],[3.773174],[5.663076],[8.399758],[-3.601958],[0.563353],[5.166001],[-9.031888],[-2.140806],[6.166847],[-5.865620],[9.569994],[9.065276],[6.334288],[-8.087470],[9.666529],[-9.807424],[-8.607723],[2.889894],[4.559002],[-3.915220],[-7.969001],[-3.564460],[-2.871038],[7.018618],[5.391858],[-0.119043],[-5.064977],[7.937008],[0.824077],[8.268490],[-7.980758],[2.001588],[0.173773],[-6.433358],[9.422962],[1.754108],[-4.572885],[-6.087946],[-9.332709],[-8.010147],[6.405211],[-3.398539],[-8.709621],[1.794056],[0.785165],[-3.371135],[-7.915269],[4.925405],[-2.403060],[6.043299],[-2.654176],[8.177941],[-1.867926],[3.246887],[6.336429],[-9.592253],[-5.512875],[6.189472],[8.042172],[5.002977],[5.048836],[-1.316124],[3.456277],[3.802269],[7.484392],[5.451032],[9.346962],[-7.845073],[-0.345763],[-5.457454],[5.958569],[-1.595994],[3.817926],[-4.924774],[-7.416807],[-6.950133],[7.711314],[-1.380086],[-6.014510],[-9.361755],[-2.017928],[7.855831],[5.823465],[5.671048],[-9.661749],[3.644752],[7.817915],[2.901745],[9.075756],[1.263778],[7.776527],[6.702634],[-0.648867],[-2.236422],[6.025940],[-4.678221],[-5.959190],[9.788650],[3.787335],[-9.764983],[-7.199240],[2.206344],[1.314802],[4.599639],[-1.975832],[0.360333],[-2.524089],[-9.682464],[-9.268273],[4.461818],[1.087591],[0.690975],[5.183302],[2.499123],[3.243426],[-4.999553],[-8.714983],[7.439501],[8.257844],[-9.551762],[4.633367],[1.577049],[7.639114],[-4.348314],[-9.110634],[9.496350],[1.242699],[-7.026420],[-9.864039],[1.720193],[2.403587],[7.930112],[9.658816],[3.540879],[4.547643],[-4.090623],[6.523622],[-6.021886],[9.175609],[-1.878494],[-2.821273],[-5.019760],[-9.646292],[2.901665],[-9.070247],[4.272159],[-4.295857],[6.157959],[3.089933],[-3.787350],[0.043560],[-5.549685],[3.850729],[7.488888],[2.263390],[-8.747439],[8.409555],[-1.844099],[1.618825],[-2.236747],[-0.948604],[7.322930],[3.767097],[9.072786],[-5.984565],[8.778401],[-1.798412],[-1.140046],[1.035480],[1.391823],[-9.782042],[-3.862246],[-3.993263],[6.756740],[-5.955053],[0.078992],[7.105011],[-8.249669],[-6.155099],[-7.901728],[5.909051],[-0.206854],[1.878629],[2.111088],[-7.035001],[4.020109],[9.560643],[-8.579604],[-6.884914],[8.251982],[-0.095123],[-7.169373],[-7.011996],[-1.385615],[-7.056500],[4.795352],[-3.875852],[9.505363],[-8.730893],[-4.580897],[7.928426],[8.949878],[-4.075674],[-6.233623],[-8.339738],[9.082176],[3.392318],[-6.529141],[-5.030325],[-6.069733],[2.775999],[6.196069],[5.281136],[7.202006],[3.527108],[-6.212365],[-1.029553],[9.719615],[7.266472],[2.445472],[-6.219165],[-3.069861],[-3.388704],[4.572584],[5.245080],[7.733185],[5.749135],[5.997989],[-5.965539],[-6.961891],[-4.048282],[-3.667694],[3.256865],[6.295968],[-7.486068],[-2.645818],[-6.542343],[-8.476149],[9.908396],[8.334311],[4.532768],[-5.444571],[2.783253],[0.856127],[-0.825202],[-1.752682],[-5.406102],[7.398443],[-3.584426],[-6.193276],[-6.872645],[6.343142],[-1.933027],[1.086283],[1.606113],[-0.553027],[-3.477161],[2.565213],[-8.590525],[2.860901],[3.784471],[-8.427379],[-7.766631],[4.951885],[-2.293279],[7.769476],[-6.726392],[6.869703],[-9.325793],[-5.096658],[-1.034850],[-3.826223],[9.114332],[-5.252900],[-2.926639],[1.206582],[4.437616],[2.869608],[1.367092],[9.516945],[5.589047],[-1.395036],[8.622757],[-1.624052],[6.467446],[-2.277594],[6.658908],[-4.856605],[-0.047968],[4.394708],[-6.403724],[-2.856557],[-8.510343],[2.165073],[-5.971248],[7.436010],[-0.392808],[9.883914],[-6.950062],[5.661973],[4.661679],[7.164905],[0.330409],[0.635752],[-2.264543],[-6.450541],[7.291864],[4.947044],[6.060059],[-8.699376],[1.287252],[4.491469],[1.453651],[7.945448],[-1.117778],[6.805186],[-0.283496],[-6.069433],[-4.242327],[-2.077343],[-2.052207],[0.542684],[3.900733],[8.022606],[-3.437261],[5.171339],[-5.412870],[7.794032],[8.897170],[6.281351],[5.570696],[4.340043],[1.249168],[7.313048],[-3.740909],[-8.280056],[1.981290],[-9.148664],[-2.735816],[0.218027],[5.323100],[-8.573329],[0.938642],[-0.626733],[8.395731],[-2.230631],[-3.258936],[-5.842686],[7.095877],[-0.903309],[4.008348],[2.108697],[-6.686280],[-7.256198],[8.707006],[6.488875],[-4.994295],[-4.104025],[6.606256],[-7.724077],[-9.835600],[-5.549878],[6.244141],[-1.465167],[-2.070740],[-3.268568],[-8.728159],[-2.947717],[7.475978],[4.158920],[-9.322328],[-2.475601],[9.332383],[-6.372410],[7.823006],[7.493526],[0.896537],[-6.346143],[-3.098036],[-5.533152],[2.815803],[0.916686],[-2.482631],[7.916768],[-5.609874],[-1.044372],[1.909710],[3.384885],[-0.768583],[-1.101888],[-5.098930],[6.038340],[3.565185],[-1.659800],[5.934686],[-4.486892],[2.322981],[-9.710739],[-0.147004],[-4.000671],[-4.858810],[6.369451],[1.305786],[-3.755077],[7.630921],[6.300548],[-1.095301],[6.310468],[-7.259245],[-2.087935],[-5.680169],[0.842592],[-6.504174],[4.707741],[5.011172],[0.242965],[5.194514],[8.312316],[1.048253],[-1.579326],[-2.210662],[-3.168617],[-8.591060],[-2.085706],[-2.082847],[-8.111113],[-1.352614],[-7.967463],[9.215398],[5.293428],[9.709292],[3.022745],[2.784597],[6.835541],[-0.687677],[2.076220],[1.506623],[-6.051481],[-2.537235],[3.375140],[7.162714],[7.508343],[4.910032],[-8.659214],[-4.813795],[7.544371],[-0.536800],[-5.415108],[3.882199],[-4.835548],[1.648594],[3.146813],[1.076817],[-7.795171],[-0.866845],[-4.657259],[-7.375185],[1.466672],[-9.173749],[-7.486456],[1.723705],[-2.448716],[-3.821616],[-4.968599],[4.428756],[-8.640737],[-5.485023],[4.523708],[1.097669],[6.823658],[3.875325],[4.995532],[-9.624755],[0.357231],[-4.543152],[1.874698],[1.786276],[4.942806],[-9.950907],[-5.061987],[-7.119905],[-6.204422],[-1.359932],[-4.633744],[1.747033],[4.461755],[-8.924612],[-7.235382],[-4.073936],[5.645685],[-6.022435],[-5.633428],[-0.440653],[5.624887],[6.577580],[-4.229745],[-9.292375],[9.186091],[1.742274],[-3.638550],[9.105105],[0.171757],[-8.154534],[-9.023170],[-9.889074],[2.123877],[-3.333321],[-8.537452],[0.506946],[1.920457],[9.657227],[-5.938125],[-2.258808],[-0.791361],[-6.091755],[5.037657],[3.604091],[9.892140],[-4.888686],[-7.338898],[4.682292],[9.407534],[0.153643],[-8.055835],[-5.155205],[-6.669480],[-0.745715],[3.585197],[-2.341024],[-8.675906],[4.043054],[-1.225961],[-1.282505],[-9.992089],[-4.969252],[9.594023],[6.238429],[0.414567],[3.943890],[4.447303],[-4.306417],[3.781454],[0.715077],[7.750412],[2.585925],[-9.715504],[3.187219],[8.680096],[-9.359856],[4.382072],[-2.325553],[-4.085165],[5.385302],[-3.942633],[1.177267],[-5.110711],[0.956147],[-9.689679],[2.943780],[-6.150323],[6.795942],[5.999806],[-9.433204],[0.841085],[-0.945699],[1.772793],[2.572049],[-7.513648],[2.969988],[8.986408],[8.255965],[-4.463433],[-4.214737],[7.171306],[7.904501],[-4.082977],[-4.165287],[3.551361],[-5.444372],[1.467957],[7.331419],[4.944165],[-5.835886],[-2.513622],[-2.882359],[-0.947442],[0.530414],[1.608921],[-3.270350],[1.455881],[-9.604158],[-8.182421],[9.321744],[5.084318],[-9.376443],[6.378925],[8.183823],[6.207470],[-4.046322],[-3.655152],[2.578941],[-7.062912],[3.895652],[-0.723320],[-3.563243],[0.379444],[6.670627],[6.071410],[-9.891130],[-7.782365],[4.114655],[-5.801025],[-1.265111],[-6.393206],[3.745123],[-5.575852],[-6.784126],[-8.815510],[-5.288500],[6.871127],[-9.143906],[8.702402],[-7.545285],[1.648408],[-3.683335],[-0.648691],[0.208245],[-2.525718],[-0.127714],[-0.021601],[3.543233],[-7.639538],[-9.998797],[-7.435956],[-9.532189],[9.963536],[-5.161534],[-9.058578],[-2.135480],[4.275852],[-6.954054],[-0.580369],[7.987538],[2.910018],[-3.525353],[0.534898],[-0.943619],[6.090480],[-5.229369],[8.513910],[2.739785],[-8.449321],[-8.889535],[-1.451473],[-2.454524],[5.572499],[7.550099],[-8.293669],[-6.422564],[-8.488621],[4.368020],[2.092443],[-5.536538],[-0.031360],[-3.603614],[8.561593],[1.551171],[7.412827],[-0.788299],[-1.765178],[-8.278371],[3.518406],[9.702485],[-8.161973],[-0.660696],[-7.103747],[-2.278432],[7.643933],[-5.813843],[-2.186972],[-7.912536],[-9.405633],[7.462946],[2.946825],[-0.640140],[-2.196564],[8.726212],[-3.871273],[3.501895],[-4.747491],[-8.303981],[9.398227],[-8.871389],[7.961957],[5.622273],[2.582713],[7.964016],[8.738125],[-9.564215],[-3.646909],[-1.165572],[7.215278],[5.306564],[-1.611572],[-6.930133],[-6.048860],[-7.453609],[0.812702],[-0.026998],[0.203899],[-3.914709],[0.343585],[1.596164],[-7.266654],[9.405301],[-0.007136],[0.066425],[8.205234],[2.309115],[3.778534],[3.131986],[-1.729215],[-2.765546],[-8.694834],[-5.992753],[-5.538006],[5.811362],[-6.868015],[-3.515262],[-6.124248],[-6.923691],[3.112605],[-6.926981],[-0.218318],[-2.590160],[5.307911],[7.514941],[6.943390],[3.492057],[-6.902223],[-5.895397],[4.529613],[5.370366],[-1.108448],[-6.667759],[0.528785],[8.246049],[0.771994],[-8.461264],[9.722281],[1.576074],[-3.538028],[9.182436],[-2.389659]], dtype = "float64")#candidate|7747|(1430, 1)|const|float64
call_7744 = relay.TupleGetItem(func_4275_call(relay.reshape(const_7745.astype('float32'), [14, 5, 14]), relay.reshape(var_7746.astype('float32'), [270, 2]), relay.reshape(const_7747.astype('float64'), [1430,]), ), 2)
call_7748 = relay.TupleGetItem(func_4279_call(relay.reshape(const_7745.astype('float32'), [14, 5, 14]), relay.reshape(var_7746.astype('float32'), [270, 2]), relay.reshape(const_7747.astype('float64'), [1430,]), ), 2)
func_1901_call = mod.get_global_var('func_1901')
func_1905_call = mutated_mod.get_global_var('func_1905')
const_7751 = relay.const([-9,10,-8,4,-5,-3,-7,8,5,-10,3,-6,8,9,2,9,-4,7,-5,-4,-3,-1,5,6,5,10,-2,10,2,9,1,5,-8,5,-5,-6,-6,-1,-8,-5,-3,-2,-5,-4,-4,-1,3,-10,10,6,4,4,-9,-5,1,2,6,8,8,8,-7,9,-7,-4,-4,-10,4,-2,-10,2,6,-7,7,4,9,9,3,9,9,-4,-4,3,2,-1,-2,-6,-6,-1,-2,10,8,-9,-1,8,-10,3,1,-1,9,7,-6,10,-8,5,-7,-1,-8,6,9,-9,10,-4,-6,-4,-9,-8,6,7,2,-5,-10,-6,9,8,-5,6,9,-6,6,-1,3,-2,-1,4,-2,2,5,8,9,-1,-3,10,8,-6,-10,-1,-10,3,-1,-3,-7,-3,-3,6,9,6,6,-5,-6,1,1,8,-7,1,7,1,10,-6,-8,-7,-4,10,-1,-6,-9,-10,1,10,-8,-7,6,8,-3,1,9,-8,-10,-2,-7,-7,-7,5,-4,7,-7,-8,-4,8,-3,1,-6,-4,9,-7,-6,3,1,1,-2,-9,5,-1,-4,-6,-10,8,8,-2,9,5,2,-7,5,-8,8,-7,7,-2,9,-7,-7,-4,-8,-3,-6,10,-6,2,-9,-10,10,-10,7,9,1,4,-2,2,7,-4,-6,4,5,5,8,1,-5,6,-6,-8,10,5,-4,-9,4,5,-2,-4,-5,-1,4,-3,-4,3,-2,6,-4,-4,-10,9,-8,6,3,7,6,-1,9,-3,2,4,6,-8,1,-9,6,-4,4,4,-7,7,8,-8,-3,3,-7,-1,-7,3,10,-8,4,1,-2,-5,-8,6,2,7,5,1,7,2,9,-9,-1,-7,8,3,5,-1,-2,-2,-9,8,-1,5,-10,-9,4,10,-6,10,-7,4,-3,-8,1,7,-1,5,5,9,7,-4,9,-6,-5,8,9,5,-8,7,4,-1,-3,8,-8,-3,6,-6,5,9,8,9,1,9,8,-1,2,-7,2,-2,2,-3,-5,3,-1,-10,-8,-6,5,-10,-3,-5,-5,-1,10,5,-1,10,9,7,-4,9,-6,-2,-2,5,-3,4,5,-3,1,4,-8,9,8,5,3,-3,-1,-1,7,-10,-6,-6,-2,-3,9,-4,-4,4,8,-5,5,1,2,9,-10,10,5,-7,9,7,-1,-6,-3,8,-10,-4,10,-9,9,-4,8,5,3,10,5,-9,10,5,6,7,-6,-10,-8,3,-8,-6,-2,-10,6,9,9,10,-3,-5,8,-4,-2,-3,3,8,4,8,7,-2,-9,-4,9,8,-9,-1,-4,3,9,-8,3,-4,2,-2,-1,9,5,10,7,6,-2,5,3,-6,6,-3,-2,6,8,-2,-2,10,-4,1,-10,-1,7,-10,6,3,10,10,2,5,-4,10,5,5,-2,-5,5,-5,-10,5,9,-7,-3,-10,-5,-6,1,6,7,7,10,-2,-6,9,1,3,1,2,10,-8,6,-5,3,-3,5,-2,2,9,-2,-7,2,7,-1,-7,9,-6,-3,-4,-2,-7,-8,9,-2,9,9,-6,-5,6,10,-5,-3,7,-1,10,-9,10,5,-7,-2,-10,-4,3,9,-5,5,1,-2,1,9,-9,-10,4,-2,4,-1,4,1,3,9,1,10,1,10,7,5,6,7,-3,-4,3,-1,9,4,-4,-1,-6,-8,-5,9,6,8,-9,5,-3,9,2,-3,-4,4,10,4,8,-1,8,3,-1,-9,7,4,-1,-4,-3,-4,3,-6,3,7,1,4,-7,5,-9,10,-8,-6,7,4,6,-6,7,-2,-1,-2,8,-2,-3,2,-3,8,7,4,3,-4,7,-9,-4,-5,-1,-7,-2,-1,8,-7,-8,-6,-8,-8,8,1,4,10,-1,4,1,-9,2,8,-5,-5,-1,-9,1,1,9,-7,-1,4,-3,6,-2,4,6,8,-8,-6,3,-7,3,8,-1,-9,-3,8,1,-7,-8,-9,-5,-6,9,2,-9,8,9,6,-10,-4,-7,-8,-6,-5,8,-7,-10,-7,-8], dtype = "int64")#candidate|7751|(768,)|const|int64
call_7750 = relay.TupleGetItem(func_1901_call(relay.reshape(const_7751.astype('int64'), [12, 4, 16]), relay.reshape(const_7751.astype('int64'), [12, 4, 16]), ), 1)
call_7752 = relay.TupleGetItem(func_1905_call(relay.reshape(const_7751.astype('int64'), [12, 4, 16]), relay.reshape(const_7751.astype('int64'), [12, 4, 16]), ), 1)
uop_7754 = relay.sigmoid(const_7751.astype('float32')) # shape=(768,)
uop_7758 = relay.log10(const_7747.astype('float32')) # shape=(1430, 1)
uop_7760 = relay.cos(uop_7758.astype('float64')) # shape=(1430, 1)
bop_7782 = relay.logical_xor(uop_7760.astype('int16'), relay.reshape(const_7747.astype('int16'), relay.shape_of(uop_7760))) # shape=(1430, 1)
func_7529_call = mod.get_global_var('func_7529')
func_7531_call = mutated_mod.get_global_var('func_7531')
call_7786 = relay.TupleGetItem(func_7529_call(), 1)
call_7787 = relay.TupleGetItem(func_7531_call(), 1)
bop_7788 = relay.minimum(uop_7754.astype('uint32'), uop_7758.astype('uint32')) # shape=(1430, 768)
const_7791 = relay.const([[-6,3,-2,-3,-2,3,-8,9,7,-5,5,-5,-9,-8,-8],[4,-7,-1,2,10,-2,4,-1,-9,-8,1,10,4,7,-10],[-4,-8,1,-1,-5,7,-4,-9,-5,-7,-3,-6,4,-4,-9],[-5,7,7,-5,1,1,-9,-8,-4,-7,5,9,4,-9,-4],[3,5,-5,7,3,3,-3,-1,-3,5,-5,-1,-2,-10,3],[1,-5,5,-9,3,-10,7,1,8,2,5,4,6,10,6],[9,-1,-2,-8,1,-4,-8,-8,-7,-4,-8,10,4,7,-9],[-7,-8,5,-5,2,4,8,-5,4,1,-4,-6,2,-10,4],[-1,2,-1,1,9,1,9,7,4,-9,9,5,-10,7,-7],[1,-2,-7,-1,-9,4,-6,-1,-9,6,1,1,-3,4,-1],[9,-9,7,5,4,8,6,-1,7,-2,-9,-8,-1,-3,1],[6,-8,-2,-10,-2,-1,-2,-4,-3,-6,6,10,-8,-7,7],[-5,-7,-7,7,-5,2,1,2,1,-8,2,2,10,-4,1],[6,-6,8,-3,1,-5,-4,8,-2,3,8,4,9,2,-4],[7,-8,4,-4,-2,-4,9,3,-6,-8,5,-6,6,6,1],[10,9,-8,-5,-9,-9,-7,-3,-8,7,9,2,2,3,5],[-7,9,-6,-8,-1,-9,2,-1,-6,5,2,7,1,3,9],[-7,4,10,-7,10,-7,-8,-7,-5,7,8,6,-5,-7,3],[6,-10,-10,-2,-1,2,-3,9,1,-5,-4,8,-10,-10,-1],[5,-5,-8,7,1,-4,8,-5,-9,10,5,-9,-7,7,-10],[-10,-4,9,-1,3,8,5,7,2,-6,-2,-10,7,-3,-5],[-1,-7,-2,-8,-7,-5,10,-1,-9,5,-7,10,9,7,10],[-7,8,5,-4,-3,5,4,-7,4,-9,-3,7,6,-9,-10],[-4,9,10,-2,-8,-5,-4,-2,-5,-6,7,-3,-1,2,3],[-8,-8,-8,2,5,8,6,-9,4,-7,8,-10,-10,-1,2],[4,-10,-10,3,10,-3,-5,10,-9,10,5,-4,1,9,-8],[-6,4,7,6,-5,7,7,-8,8,3,7,-7,4,-5,-2],[5,-7,5,2,-5,8,-6,-4,1,-6,-1,2,-4,-8,1],[-3,-9,7,4,3,-6,-1,-5,-9,-8,-1,-5,-9,-9,-9],[-8,-9,3,-8,5,6,2,6,-4,-4,-9,3,5,-5,8],[7,6,-2,-1,-6,2,10,1,3,-2,-8,-9,-6,-3,-3],[5,-9,-7,10,3,-6,9,-1,3,-6,9,5,4,-4,-2],[-10,-8,-10,9,-5,-7,7,9,4,2,-5,3,10,-1,6],[3,2,4,6,-5,8,-2,-6,5,-10,-2,-9,-7,4,-5],[-1,4,-8,9,-4,5,-6,8,-7,-4,9,4,-10,-9,8],[5,-10,5,9,-4,-10,-4,-7,8,5,-10,7,4,-4,-4],[-7,-2,-9,-7,-2,-1,3,9,-10,-3,-1,1,7,-7,-10],[-1,-3,-6,-9,1,5,6,-9,-7,3,8,-2,-2,-8,-10],[-4,-5,-6,-9,3,8,2,-7,10,4,5,7,-2,-10,2],[7,3,-2,3,3,1,-8,-7,4,1,1,9,-7,1,-9],[7,8,10,-8,3,-10,5,5,-3,9,8,-3,-10,-8,-10],[-3,-7,-7,-2,1,-8,-10,-9,3,6,9,4,1,-4,6],[-9,9,1,-4,-2,-8,6,-1,3,-10,-8,2,-10,-7,-3],[-6,-1,10,-4,-6,-9,-7,2,-1,-6,5,7,5,10,2],[6,-6,7,-8,10,7,8,-4,6,9,-4,5,10,1,-3],[-3,-4,-5,-9,-2,-8,-8,-7,-9,6,2,-2,5,8,-4],[-10,-9,8,-5,-8,5,8,-2,-6,7,-9,-3,-7,-3,-4],[-5,3,-9,9,-9,-1,-2,-8,3,5,7,10,-5,10,-1],[6,-9,1,2,-1,6,7,-8,-10,2,-2,1,9,-8,-5],[-5,4,-2,1,-2,6,4,-6,2,-5,1,-3,9,10,3],[4,-8,10,-3,3,5,5,-5,-2,-7,1,-4,2,-6,-1],[-10,5,-5,-6,-7,-6,-8,-2,4,-10,-10,-10,-5,10,-9],[-10,-7,-6,9,-3,-3,-1,-3,-6,6,7,6,2,4,-5],[-6,9,-8,-8,-9,7,1,2,8,9,3,2,7,-3,10],[1,10,9,-7,9,5,5,-2,10,-5,6,6,7,3,-2],[7,9,5,9,3,5,4,6,9,7,-4,1,-4,3,10],[2,-1,7,7,6,-6,9,-1,5,8,3,9,-2,-4,-10],[-2,-2,-3,9,-6,1,-5,1,5,7,10,-7,-6,9,6],[4,4,-3,6,-7,8,-6,10,1,3,-3,8,1,-3,-1],[2,8,-1,2,-4,4,1,-5,7,-10,-3,-3,-5,4,7],[-6,1,6,7,-3,-9,3,7,10,-3,4,3,5,-4,-5],[-6,-9,-5,3,4,-2,-3,10,-10,-1,3,9,5,-4,-4],[-9,10,-9,4,6,6,-9,-1,-8,-3,6,-6,-2,10,7],[6,4,3,-2,3,-5,4,-9,-4,7,-6,3,-7,-3,10],[-1,-8,-4,-8,10,-4,10,8,4,6,9,-4,6,-7,10],[-10,8,6,9,-10,-5,1,-2,-5,-2,8,7,-6,-5,1],[-2,6,9,2,4,-4,-6,-4,-5,-5,-4,-2,4,3,3],[-5,-4,-5,-1,-8,10,-5,8,-7,10,2,4,4,-4,-7],[8,-1,3,5,6,-2,-7,5,6,-10,1,-10,-6,4,9],[6,-5,2,-7,-3,-4,9,10,9,-5,4,-1,-4,-9,8],[10,-7,-2,-3,10,2,-1,-7,7,10,-5,2,9,2,2],[5,-3,-7,5,-4,5,9,6,-10,-4,-7,-3,2,4,-9],[3,8,-8,10,2,8,-9,7,5,-2,-6,-5,-9,8,-2],[-10,10,-10,1,-4,4,-4,9,2,-7,-2,-3,-1,-3,-6],[5,-9,-1,7,-8,9,-1,9,-4,-3,-5,-3,1,1,-2],[-10,-10,-4,-9,-5,10,-1,6,-2,-10,9,-1,4,-6,-9],[-1,-5,-7,1,10,2,-9,2,4,-4,-10,-2,9,4,-2],[-2,-1,1,8,5,-10,-9,-2,4,6,2,3,8,1,-7],[-6,-5,8,6,-10,3,7,-8,-2,5,-10,-5,-3,7,6],[9,3,-10,2,6,-4,-1,-10,2,-1,1,5,4,-10,4],[-5,9,-4,8,2,7,2,8,9,3,8,1,1,-1,-6],[-6,-7,8,3,-7,-9,-2,4,-2,-2,3,10,-3,-1,1],[-1,-10,-3,10,-4,10,3,4,-4,2,-3,5,-9,4,7],[7,4,8,6,3,7,3,5,-9,6,-4,6,-2,-10,-7],[4,6,-3,-5,-4,-9,2,-1,1,-8,3,6,1,-6,-6],[9,9,10,-2,1,5,-7,1,-8,1,-7,-5,-4,1,-9],[-5,9,-8,7,5,-5,5,-1,-1,-9,2,7,-1,8,-2],[-8,-7,-4,5,-6,9,-5,5,-3,3,-1,9,6,10,1],[1,1,-6,5,-6,4,-2,10,-4,-6,-6,-4,4,5,4],[-5,5,2,-3,-5,-8,6,7,-7,-10,10,9,-3,3,-6],[5,-1,1,4,-2,5,-7,10,-9,-6,10,-7,9,-4,9],[3,-3,-4,10,8,-6,-2,4,-8,-8,1,2,9,-7,8],[-2,10,5,-10,2,7,-1,-9,-10,7,3,8,-8,-9,-9],[-3,-5,-6,6,5,4,-4,-8,1,3,-8,7,-4,-6,-4],[-9,7,1,-6,1,-7,-3,9,5,1,-9,-6,6,5,-2],[-6,7,7,-7,7,4,3,4,-9,4,-8,-9,-1,-4,-9],[-5,-7,10,-2,-5,-7,2,6,-3,-8,-5,4,-1,-10,-1],[-1,-4,9,-10,-1,10,8,7,10,9,1,-4,-5,-9,-2],[-4,7,1,1,6,10,9,10,10,-10,-9,2,-5,10,1],[-2,-5,4,4,-9,9,-10,7,-6,1,-5,-6,-4,3,-5],[-8,-3,8,10,3,6,-1,10,-4,5,4,-6,9,5,7],[-8,9,-9,9,10,-3,3,1,-1,2,2,10,-10,1,-10],[-3,3,-2,-10,-6,-4,-7,2,-10,4,-1,-10,6,9,-3],[-6,-1,-2,-5,-5,-1,7,-6,5,-2,-10,5,5,9,-9],[-4,3,-5,-10,5,9,-6,5,7,-8,9,3,7,5,1],[2,-8,3,-10,-2,-10,-3,9,-6,8,-7,-3,8,8,8],[7,7,5,-7,-4,-9,3,-1,-10,1,3,2,8,-8,5],[-8,-7,8,-6,6,7,4,-7,-2,-2,-4,1,-2,8,-5],[-7,-5,-9,-4,-9,5,-8,-4,4,4,1,2,4,10,6],[-4,10,5,4,6,-4,9,-10,10,1,9,-4,3,-8,9],[-8,-5,4,-10,1,-2,-7,-6,-4,-10,-10,6,-3,-1,1],[3,7,-10,9,-7,-5,5,10,8,10,8,8,-4,-4,-10],[-9,4,10,-6,3,-9,-4,10,-8,7,-6,-5,-10,5,-8],[-9,-7,-4,7,6,-3,8,-9,-1,-7,-4,3,9,-10,7],[9,-8,1,3,-10,-7,6,-2,4,-4,10,-5,-7,6,9],[7,3,4,7,-1,-6,2,4,7,-7,-2,-8,2,3,3],[3,-10,7,-10,1,1,-10,9,9,5,-6,-3,-3,-10,-2],[8,6,4,2,-10,-7,-10,6,-2,-5,8,-1,-8,5,1],[-2,5,-7,-1,-2,1,2,6,-1,2,5,-7,-3,3,2],[7,10,-2,-8,-5,-4,10,8,-5,-6,2,10,-10,-6,-3],[6,2,10,3,7,-10,4,10,-10,10,-3,-7,-2,8,-1],[-6,-8,3,2,-10,3,1,-4,9,7,9,-2,5,-5,-3],[1,-3,8,9,-1,-1,10,4,-3,5,-2,2,-3,7,-7],[4,2,8,-5,-9,7,1,-4,-1,-7,8,3,3,-4,-3],[3,-10,-9,4,-7,-10,-5,-2,-7,-5,-1,4,-3,-9,-7],[10,4,-4,8,6,-1,10,7,-4,-6,9,-3,1,-9,-5],[-7,-8,-4,-5,-10,-8,7,-8,1,-1,2,4,2,-3,8],[-9,4,-7,10,5,-2,3,-2,-6,-3,-9,6,2,9,-10],[5,3,9,-2,-1,-8,-1,-2,2,-5,2,9,5,9,7],[2,-1,5,-2,-8,3,6,7,-6,-4,3,5,6,-5,6],[4,-6,-1,-4,8,-6,10,-5,-9,-5,2,-9,-1,-8,9],[8,10,-10,-5,-5,-10,5,2,6,-3,-4,-10,3,-7,-10],[5,-4,2,-7,2,-3,3,-2,-8,-8,-9,5,5,-3,-10],[-3,-8,1,2,-10,-10,-7,-1,-1,7,-9,2,-6,-3,-3],[9,-8,-4,-9,-7,-3,4,-3,10,1,3,-4,3,6,-6],[-8,5,-3,7,7,3,-2,-1,1,8,7,-1,8,10,1],[-3,2,-9,8,9,1,-5,-10,-9,-6,-2,-8,-5,-8,-10],[-2,9,10,-10,-3,6,-2,6,-7,-2,2,9,6,6,-10],[4,9,9,9,-10,10,-4,-8,6,-5,-10,2,-7,-5,4],[-9,-9,-2,-10,10,3,7,-4,-10,-10,-9,-4,-10,-1,3],[-10,6,3,-10,8,4,-9,1,-7,4,-7,-8,3,-1,-4],[-2,7,6,5,-2,5,4,-8,-9,-5,-10,5,-5,-9,5],[-1,10,8,-9,-3,5,6,5,-4,6,-7,-6,-8,3,7],[1,-8,7,8,-6,-4,10,-2,-5,9,-10,10,9,6,7],[9,-1,-10,2,4,-8,10,-10,5,1,-7,-10,-8,6,10],[-7,-1,7,-9,-9,8,-1,7,3,7,6,6,2,5,-7],[-1,-6,-7,4,-4,8,10,10,-1,1,-8,1,-5,9,-8],[6,3,2,9,-5,-8,-4,-2,-8,-9,10,-6,-5,-1,10],[3,1,-10,-7,2,1,-4,-8,1,-9,5,-2,-10,1,-3],[5,8,5,10,8,-1,1,6,-2,-7,9,-2,-4,-10,-6],[-5,3,6,1,8,-9,8,6,1,-1,1,-2,-3,-7,-1],[-7,5,-2,-6,10,-2,-4,-9,6,-8,-10,-9,4,-1,4],[-8,-10,1,-6,5,-2,5,1,8,-5,6,-7,-2,-8,4],[6,-5,6,8,-6,8,-2,-5,8,-10,-10,-10,3,8,4],[-5,5,-7,-5,-1,-8,8,3,-2,-7,-3,1,1,-5,7],[-2,-10,-10,6,-3,-8,-9,2,-4,-2,-9,7,6,7,-9],[-1,-5,-8,7,4,-4,-3,-3,-4,1,7,10,-1,-1,10],[-3,3,-1,4,-8,9,5,6,7,2,-7,-8,-2,-5,-7],[7,5,7,2,3,-4,-5,-4,-4,2,-9,-6,7,-5,-2],[-7,-4,8,8,5,-3,8,7,-8,5,8,10,2,-1,-10],[-1,4,3,7,4,-5,-2,-5,-6,-9,-5,-4,10,-2,3],[5,-3,1,1,-7,9,-3,6,-9,3,1,2,2,-3,4],[8,-4,-10,-7,1,7,-8,3,10,-6,10,10,-5,6,9],[-8,1,10,-4,-2,2,7,10,4,1,-3,-9,5,-5,4],[10,3,-1,-3,-1,-10,-4,3,-8,-4,-8,2,-9,-1,-7],[-10,-6,-10,-5,4,10,9,2,10,10,2,2,-5,-2,-7],[3,8,10,10,3,-3,9,-6,5,-2,-1,-5,8,-2,-6],[9,-6,-1,-7,6,-5,10,3,5,-4,-5,3,6,9,4],[-8,-7,2,-3,-10,-6,7,1,5,-2,-6,4,8,-1,-9],[-4,-7,-3,10,-5,-4,9,10,5,-7,4,3,-3,9,8],[8,-5,3,-4,-4,7,-4,1,-8,9,3,-1,3,-7,-7],[-10,-7,7,-3,-4,2,4,10,7,-2,-5,2,-1,-9,9],[5,8,4,-1,8,5,9,-5,-7,-6,1,-5,-7,-1,-7],[2,-8,4,-6,1,4,-6,-5,1,3,2,1,8,4,-6],[-10,4,9,-1,5,-10,10,-2,-5,9,-4,-4,6,5,-1],[-2,-9,8,6,-2,-3,-2,8,-8,-10,-5,-7,9,8,5],[5,10,-6,4,10,-7,-10,-6,6,3,2,-8,4,-10,1],[6,5,-2,6,6,-1,1,-1,-10,-2,1,-3,-10,-8,3],[-8,-7,-7,-5,-4,1,2,-7,-8,2,-1,3,-3,3,5],[-1,5,5,7,-4,-1,-6,-6,9,-1,-5,3,-10,-1,10],[-9,9,10,-5,-6,-8,4,3,1,6,-3,8,-9,4,1],[7,6,-3,2,5,-1,-8,-1,6,2,-3,3,3,-10,-3],[3,-9,8,7,-4,-1,-7,9,-9,-9,-7,8,-6,3,5],[4,-7,-9,9,-6,-8,7,5,7,-10,-7,-1,-8,-3,2],[10,8,-1,4,-2,-2,-9,-8,-4,10,-3,3,-1,2,4],[4,2,-3,6,4,10,-8,6,5,3,7,4,10,3,-9],[-8,2,4,4,5,-10,5,-5,-8,-4,-8,6,9,7,-2],[8,1,7,-5,7,-8,-4,7,-5,-2,3,-7,3,-9,-9],[-9,8,-7,7,-7,-4,1,9,9,-10,-2,-2,6,-7,8],[-5,-3,8,1,5,-2,-4,-9,1,-6,1,-8,8,-8,10],[-1,4,-9,5,8,7,-9,2,-3,-5,8,6,9,-9,-9],[5,-5,5,1,-3,9,10,-2,-5,-7,-3,-8,-10,-2,-8],[-9,2,-1,-5,4,1,1,-3,-4,-7,1,-8,8,-10,9],[3,8,-10,-10,-1,-7,10,-6,1,1,2,10,5,-8,-10],[2,2,9,-10,1,3,-6,5,8,-1,-4,3,3,-1,4],[7,-5,5,-5,2,6,1,10,1,2,7,7,1,9,-2],[-3,8,-1,1,7,1,9,-7,-8,7,2,-7,5,8,1],[-6,8,4,8,-5,-9,10,6,10,-6,7,2,-7,-1,-10],[5,-7,-1,-2,8,-4,2,6,-3,-4,-5,7,5,2,-10],[-10,-10,8,10,8,5,-7,-8,-5,-1,-10,-1,2,2,4],[8,-7,-3,-8,2,2,-8,4,-2,-6,9,-9,-4,6,5],[-8,-6,-9,-9,-3,-3,-8,-4,10,1,-10,4,1,-10,-4],[9,-8,-6,-5,6,-5,2,3,-6,-5,10,7,5,-10,7],[2,5,-10,-10,7,2,8,-5,-4,-3,8,-4,-5,-3,8],[10,-5,-1,-5,1,-7,-4,-8,6,-2,3,-4,2,-8,6],[-4,-5,1,-5,6,-10,10,-8,5,-2,-4,-6,2,10,5],[-7,4,10,-7,-2,3,-6,8,-1,9,-1,-8,5,-4,-3],[1,-10,3,10,4,-3,-6,8,-4,-10,-2,-9,-7,-4,7],[2,7,-7,-1,-10,-1,-2,3,-2,10,-3,-10,-5,-5,1],[-6,4,-6,-6,7,2,1,2,5,-5,5,-9,10,-3,-5],[-9,-7,6,3,10,10,-6,9,8,-4,-9,1,-4,-2,-8],[-3,-9,9,6,9,-1,-2,-1,9,-3,4,-1,-9,-8,6],[-1,-2,-9,-8,-4,-1,-8,-6,-3,10,-7,9,-9,-7,-1],[-2,9,-3,-4,3,9,-5,-8,6,5,7,-10,1,5,10],[-2,10,-6,-2,-5,-10,-1,-1,-5,2,3,-3,-8,-6,-4],[-10,-9,-8,7,-7,6,-9,2,10,7,9,-3,-4,-9,-5],[7,9,-8,-10,8,-9,5,-3,-8,-8,5,4,10,-9,10],[-1,-9,-4,-1,4,-4,-6,-3,-7,10,-5,-3,-10,-8,-3],[3,7,6,1,-6,9,-1,6,-1,-4,-8,-5,9,5,6],[-6,-4,3,2,9,2,-5,-4,7,-8,6,10,-9,9,-6],[4,4,-5,-9,-4,7,8,-8,-7,-8,6,10,-7,2,-5],[-1,-2,-8,-3,-6,-9,2,6,-2,7,-5,5,-6,6,-8],[-8,-3,-3,7,-10,-2,5,6,8,-4,7,-5,-7,-7,-10],[-8,-4,-1,4,1,-1,2,-1,-9,8,1,5,10,-8,8],[1,-8,-7,-10,-7,4,7,7,-8,-4,-2,-4,10,8,2],[-8,2,-8,5,9,-2,-3,2,-7,-6,9,-8,4,8,8],[10,4,9,2,-3,-7,7,-4,-10,9,3,-4,10,1,-2],[9,2,-5,-7,-9,9,5,-6,2,3,-1,-1,9,5,-1],[-8,10,-8,-5,3,5,-9,-5,-1,-10,2,1,8,-5,10],[1,-8,10,-5,1,8,-9,8,2,3,-4,-5,8,-6,6],[1,-6,8,7,10,3,-5,4,8,-5,-2,-8,7,-2,-9],[9,-6,10,-2,1,-6,9,-7,-7,3,-8,4,-1,1,1],[2,1,8,3,-8,-1,9,6,-5,10,8,10,-3,-10,-4],[4,5,-3,-7,-3,1,9,-4,-5,-1,-6,5,8,8,-2],[-3,6,4,-10,-6,-5,-7,-8,-1,-1,-9,1,2,4,1],[2,-4,1,8,10,6,-4,10,-5,4,-7,-2,7,-10,-6],[8,-5,4,2,-9,9,-8,8,4,2,9,1,8,5,-10],[8,-9,-2,-9,7,7,-3,9,-4,7,1,7,-9,-9,-2],[-5,4,-5,7,3,4,-1,6,10,-5,7,-5,5,9,8],[2,2,-9,4,-3,-3,-6,5,8,-3,-4,-8,-5,5,-8],[5,-10,6,8,-7,-7,-7,7,-5,7,8,8,-2,-9,-9],[2,7,-5,-1,-4,-3,9,6,-1,-10,8,-2,4,-3,1],[-1,10,-4,2,-7,4,-9,-1,10,3,2,8,2,-8,-4],[-7,-3,-3,-3,4,3,-1,2,5,-3,2,2,9,-3,-8],[-5,3,3,7,-3,7,1,-8,9,-5,-2,10,-8,-9,-4],[-7,6,-1,6,-5,10,-4,-10,-4,-6,3,-5,-5,10,3],[2,6,-9,-7,6,-5,5,-7,-4,4,-1,9,10,8,-7],[-5,-10,9,8,8,1,10,5,-3,-10,10,-5,-7,4,-4],[-6,-1,10,10,7,1,1,6,-9,-8,7,10,8,7,-3],[-4,10,9,-7,-7,7,4,9,6,10,-9,-2,7,8,-4],[4,2,-5,-3,10,-9,-8,-4,5,-5,4,2,-2,-9,-2],[3,-3,2,-8,8,-7,-6,10,-1,2,9,-9,3,9,-4],[-5,9,-2,3,7,9,-10,8,6,6,5,-3,6,8,8],[-8,-10,10,-1,-1,8,-10,-4,-8,-8,-8,10,9,-7,-3],[10,-9,-2,2,6,10,5,2,-10,2,5,-3,1,-4,1],[-5,-1,-3,7,-6,1,5,-10,7,-9,2,-9,10,-8,-10],[4,-10,-2,-9,8,-2,-5,-5,5,-9,-1,8,-5,-1,5],[-2,7,-5,4,-9,-3,-1,7,-5,10,-7,-6,-2,-3,6],[4,-8,-9,-1,-9,7,-1,-10,8,1,1,10,2,10,7],[-5,3,2,-6,-9,5,-5,-6,-5,2,2,-5,-3,-4,-4],[1,2,5,-8,-8,6,-2,-10,-7,3,-2,-5,7,3,2],[-4,9,7,-1,4,1,-5,-2,1,9,-9,9,7,3,-1],[9,10,-3,-3,3,4,-9,8,3,1,3,2,-3,2,-8],[2,8,9,-8,-6,2,-6,-10,-4,-4,-6,2,-1,-6,2],[-5,3,-6,-5,-5,-9,2,9,10,4,6,-10,-7,-5,5],[-8,4,6,-6,-6,3,-9,1,-6,1,4,9,8,-7,10],[2,4,1,-6,2,-7,7,9,-4,-8,4,-2,6,-10,5],[-4,-10,-3,-2,-8,-10,9,-1,-7,5,7,5,-4,-1,3],[6,1,10,9,-4,4,1,3,-4,-6,4,-8,-5,10,-7],[-10,-2,1,8,2,6,-5,-3,-3,-7,-8,4,-9,-8,-5],[-4,2,-9,-8,4,6,-9,-10,-7,1,-10,4,5,-3,2],[2,4,-4,8,7,-5,1,-3,-6,4,6,-6,-7,4,8],[1,-4,5,-7,1,4,-8,9,7,-4,5,-4,10,6,5],[-2,5,1,-5,2,4,-1,2,-6,9,10,1,7,-7,-7],[-8,-9,4,-2,6,-4,-1,-3,-7,3,-10,-10,-9,2,1],[-10,-6,-3,-7,-9,10,-5,10,-3,6,5,-3,7,-5,9],[8,-6,-6,-9,3,-8,-3,1,1,-2,-1,5,3,5,-2],[-3,-4,7,7,5,-3,-10,-7,2,6,9,1,3,-7,-2],[-5,-9,6,-10,-3,-1,-1,-5,-4,10,-10,-9,-4,-7,-5],[10,-5,-10,7,2,-9,8,-5,-10,-7,9,9,8,-4,-4],[3,-8,5,7,-10,-3,3,-8,-2,7,9,9,-8,1,2],[-1,-1,3,-9,-9,-1,-7,-2,3,1,5,8,8,-1,-9],[8,9,-1,7,-3,10,-9,-10,-1,-6,5,-2,7,10,-1],[-2,9,10,4,-1,-4,-2,-9,3,-7,2,-2,4,8,-9],[3,10,3,-3,5,-5,-8,-1,1,-6,-5,-8,-5,-8,8],[-4,1,4,-3,-2,-2,7,-5,-6,-4,-3,-1,8,7,10],[5,6,-7,-1,-9,9,3,-1,6,-3,8,-9,-8,6,3],[1,-10,-4,-9,-9,2,-10,-6,3,6,10,3,2,6,-9],[4,7,-8,2,7,-6,9,-6,-4,-7,-5,4,-8,-1,4],[1,9,9,8,5,-3,8,4,9,3,10,-4,-5,-1,-5],[6,1,6,1,3,1,6,10,-3,9,6,3,-6,-10,-7],[-1,3,-8,-6,-4,6,7,-7,3,-7,-8,-4,2,-1,8],[-9,3,-3,-2,-2,9,6,-10,-2,-4,7,-3,5,10,10],[-6,-9,3,-9,-10,-3,-9,-5,-3,3,-10,-1,9,10,2],[9,9,6,-9,-6,6,-10,-2,3,3,-3,4,6,2,5],[6,-3,-2,-4,3,-2,3,1,6,-1,2,2,9,-1,1],[-6,-2,1,-9,-8,9,1,-1,-7,8,6,1,-6,-5,5],[3,-5,2,2,1,4,-8,-1,-7,8,6,5,-1,2,-8],[-3,10,-7,-2,-4,8,4,-2,7,-5,7,8,-1,-3,-6],[-1,1,5,-4,8,1,-5,-2,-9,-8,-3,-6,-7,3,-1],[2,-7,3,-2,10,-2,-3,-5,-6,5,9,-1,8,-3,1],[-9,-5,-5,-10,-3,4,-1,-4,6,-3,8,-7,-8,-10,-8],[-4,-1,5,7,-2,6,-8,4,3,6,1,7,-4,6,5],[-4,-3,10,-2,3,-9,-9,-6,-1,-5,7,10,5,-1,9],[-5,7,-7,-5,-1,-2,-5,-7,5,2,-4,7,2,-9,3],[9,10,-5,10,-7,-6,3,-1,-4,10,-8,4,-10,9,9],[7,9,3,-6,2,8,-4,1,3,2,1,10,7,-2,-1],[-8,9,8,9,-9,-9,1,1,-7,-9,-10,8,6,9,-2],[10,-9,-5,-5,2,9,2,-3,4,-7,-8,3,-6,1,-10],[-6,-3,9,3,-4,7,-6,-3,-10,-8,10,-4,2,-6,5],[-8,-6,9,6,-9,-9,-4,-5,-4,6,4,8,2,7,-2],[4,7,-8,-3,-8,-9,-9,2,1,-9,-7,-4,-10,-2,-2],[1,-6,-4,-5,-3,1,2,4,-4,-1,2,5,-1,-10,-1],[-9,8,1,10,-3,2,4,6,1,2,2,-8,-8,9,1],[-2,-2,-6,6,-2,-10,5,-2,1,-10,3,-7,-10,-9,-4],[-10,-1,-1,-7,4,6,-8,7,1,-1,-2,-6,5,-5,4],[3,10,-6,10,5,-7,-7,1,2,3,-6,8,-6,-5,-7],[2,3,-5,-10,6,-10,-6,5,10,-3,3,-10,9,-3,-6],[-5,2,8,-9,-4,-4,8,-1,9,-2,-6,10,-5,-1,5],[-1,-6,8,-2,-2,2,1,8,-4,-3,9,-1,-5,-2,-7],[6,7,2,-5,4,3,5,-7,7,-10,-8,-10,-2,7,3],[-10,3,10,3,-4,-5,5,2,-5,-3,-9,-5,-2,-8,-10],[-3,2,6,-3,-7,7,3,-4,-4,-4,-3,8,6,5,-8],[-6,3,-7,10,-1,-7,1,-2,5,-1,5,-3,-1,2,2],[-3,1,4,9,9,3,10,-8,-6,-10,-1,10,-7,-3,-1],[1,3,9,3,3,8,10,7,-10,-10,-1,-3,-6,-6,-1],[4,-8,-5,4,7,-10,3,-10,-9,-7,-9,3,-1,-4,8],[1,-7,-10,-10,-10,4,-9,-3,1,-1,2,-7,6,4,5],[5,-5,-7,-5,-9,-3,9,2,-4,4,9,7,-3,-4,-3],[10,-4,-10,-9,-9,2,-3,-5,4,8,-5,6,-5,-7,5],[-5,-7,9,2,-2,8,5,6,-6,9,8,3,10,-2,-6],[-8,-1,1,-2,-10,6,-2,-9,10,9,-1,5,-3,-1,-1],[-4,-7,-4,7,-3,-2,-2,9,5,7,9,2,-2,-9,2],[10,-9,-10,-7,-10,-1,1,-9,5,2,-9,-9,-8,-6,2],[7,3,-8,2,10,-8,-6,-6,-1,-10,-4,7,10,4,10],[-5,9,6,10,5,-10,3,-1,-3,-4,7,-2,3,8,1],[7,-7,-3,-6,-1,-5,3,6,-10,6,2,4,-8,7,8],[3,1,2,5,8,-8,-4,2,-6,-7,-6,8,2,-1,-1],[6,-2,6,-2,3,-4,5,-3,7,9,2,4,7,5,6],[5,-9,-10,5,3,-4,-9,4,3,-1,-9,10,-2,-9,5],[10,9,10,-2,1,-3,4,-3,-7,-2,-1,-1,4,9,10],[-9,5,10,7,-2,-1,5,-8,4,7,4,-6,-10,-8,-4],[-3,1,-2,5,6,10,-10,-1,-5,6,10,1,-4,-6,10],[-3,2,-10,4,4,3,-5,10,3,-10,7,-8,-8,1,-5],[2,3,1,-8,1,4,7,6,7,3,8,-9,-8,9,1],[-10,1,6,-9,6,10,3,-1,-7,10,-8,-9,5,6,-9],[-9,9,-2,-3,-3,2,-2,3,6,4,9,4,-10,7,4],[-4,-5,-6,-2,-10,1,10,-9,-7,-4,-10,-4,3,3,2],[6,-2,-1,-9,-9,-9,5,4,-4,-10,1,-1,4,10,2],[5,-10,-10,-7,-5,10,-7,-5,8,3,6,-5,10,9,-7],[2,2,2,6,-10,8,-6,4,7,9,-9,-3,-1,6,-2],[2,6,9,-3,7,-3,5,1,1,3,-7,2,-9,-2,-3],[-9,-2,9,2,4,9,-8,9,4,-7,-7,-1,4,-3,6],[-5,-3,1,6,-5,-7,-10,-7,-2,8,-1,-4,5,2,-8],[-4,-5,-10,8,-2,-8,5,1,6,6,5,-8,-8,8,-9],[-2,9,-9,-6,5,-7,-4,-1,-6,-8,-1,-8,1,2,-9],[8,-5,1,-6,-10,-2,1,1,8,-9,10,1,-10,5,4],[4,-7,8,2,2,4,1,9,9,1,-6,-9,10,-9,-1],[1,4,-4,-6,8,-2,-2,-10,-5,8,7,7,-9,7,-2],[-1,-4,10,7,8,-4,8,3,4,-4,-4,-4,-9,7,-1],[4,1,8,10,7,-1,-8,4,-6,9,-1,-5,5,-10,-9],[1,-4,5,-4,-7,3,-4,8,4,8,-8,-8,4,8,-6],[-4,2,9,-9,-2,-8,6,-8,9,2,7,4,4,1,-1],[-9,-5,-2,8,-1,-10,7,-10,4,-9,5,-6,-3,9,2],[-4,7,-2,8,-2,4,6,10,6,-5,10,-3,1,9,-4],[1,2,9,-7,-7,4,3,-3,-7,-6,-8,-4,-5,6,6],[6,8,-7,3,-4,5,4,-1,10,9,-2,-4,-5,1,2],[-3,-9,6,10,2,-4,3,4,8,-1,1,4,-10,-4,-2],[10,-5,-10,5,-4,5,3,-7,-3,-4,-2,10,10,-4,-10],[-3,6,1,10,-6,-4,-4,3,7,-8,2,6,5,1,2],[-10,4,-2,-1,-1,-9,-2,-4,-4,-10,-2,2,4,5,1],[-7,-2,-8,-3,7,10,3,-8,-6,7,-7,-10,-8,8,-10],[-3,-3,-5,9,2,4,-3,3,-3,6,-6,-3,-1,3,-6],[-10,7,2,-4,9,-9,5,1,3,-8,-6,-9,-5,1,10],[8,-4,3,8,-9,3,-2,-9,-8,-9,-3,-5,5,5,-7],[-3,6,1,-3,7,5,-9,-8,-2,-3,5,9,10,-9,1],[-1,10,-2,-7,9,7,5,3,-6,-2,-9,9,-8,-1,4],[-4,6,2,-6,-3,6,8,-9,7,-9,6,-7,-5,4,5],[-8,4,-2,2,-7,4,6,-5,5,10,-10,-2,-3,-3,3],[-6,-6,6,9,7,-2,1,2,-3,-7,-3,-9,-3,1,1],[3,-8,-8,-6,-2,-4,3,2,-9,-4,-6,-3,-1,-9,-4],[10,-6,6,-3,-2,7,-7,9,-8,4,7,1,5,8,-8],[-4,8,7,5,-8,4,3,8,1,-4,-1,5,1,-4,5],[9,-10,-1,-3,-8,-5,8,4,-2,5,-9,5,8,7,-4],[6,2,-2,-5,-1,-8,5,-4,6,-3,-2,-7,10,4,7],[-10,3,9,6,2,8,4,10,2,6,6,2,6,7,9],[-9,-7,10,-10,1,-4,4,2,-5,-7,-4,8,6,-7,-5],[-9,5,9,-3,10,2,2,-1,9,1,-9,-1,-2,-3,10],[-7,-4,-6,-6,3,2,1,1,-10,-9,8,-9,-7,6,2],[-9,8,9,-8,2,4,-7,1,6,2,-6,3,1,-6,9],[-4,7,4,5,-3,-3,4,2,2,7,-1,-4,8,-4,4],[-2,-4,10,5,7,-4,-6,2,4,-4,-8,5,1,7,10],[3,-10,9,4,-7,3,-3,2,5,-9,-8,-5,-9,6,4],[-7,-8,-3,-9,2,-9,-9,-5,8,-6,10,4,-7,-4,8],[1,-6,-2,-7,-7,7,7,10,7,-4,7,-9,1,-3,-2],[-4,8,-3,10,-3,2,-5,-8,-3,-3,1,10,10,-7,6],[-5,2,10,-6,-9,9,1,-2,-7,5,9,9,-6,-1,-3],[2,-9,1,-4,-2,-8,-4,-5,9,1,-3,1,-2,-10,-2],[1,-10,10,2,2,7,-4,-8,-7,-2,-2,9,-8,2,5],[10,-8,10,6,2,-5,8,9,-10,-3,-5,1,10,-6,-5],[8,10,-10,4,2,1,-4,-9,-5,1,3,-6,-9,-4,-9],[-9,6,3,-10,1,-4,9,3,2,7,7,9,-6,10,-5],[-9,-7,4,3,8,5,-8,9,2,-9,-5,3,-2,2,9],[2,-4,4,-9,-5,3,-9,6,-2,1,9,10,10,1,5],[-1,-9,-5,6,-2,-3,1,-3,9,-5,-9,-6,8,-2,-10],[-10,-3,10,4,4,-7,10,-8,-4,10,-9,8,7,-3,-5],[-5,8,4,6,3,3,-6,7,7,10,5,-6,7,8,-2],[7,-8,5,-2,-1,10,5,8,-9,7,2,-1,4,-2,9],[5,-3,-10,6,-9,7,2,5,-5,-3,-6,-4,-3,-6,-1],[1,3,-9,-10,5,6,1,3,6,-2,2,-5,-6,5,5],[9,1,8,4,-9,-7,8,-10,6,1,-8,8,9,4,-6],[-9,-3,-6,2,-6,7,-5,3,-8,-3,9,-1,-5,-10,4],[5,10,4,8,-6,-9,10,-9,-9,-4,-5,-4,-9,-7,-9],[5,-4,2,3,-6,-6,3,8,1,-9,10,9,10,-4,-8],[-8,6,10,-10,10,3,2,2,-7,5,-1,10,10,1,-9],[-6,-2,8,2,4,-5,-10,2,-5,6,-5,-9,-8,-6,-3],[-7,-3,3,2,9,-9,-4,1,10,5,10,-4,6,7,4],[9,9,10,-1,-9,-8,-7,7,8,-8,5,2,6,-5,10],[-3,1,-8,5,-3,2,-3,6,8,9,-7,-3,-6,-7,-2],[-2,-5,-6,-4,-4,5,2,6,-8,-2,-10,1,-9,2,10],[4,-8,5,-4,5,7,4,8,7,-6,-2,1,-2,4,8],[-10,6,-3,-2,-1,5,-8,7,-10,-3,7,-3,-1,-1,-8],[9,-3,-8,7,3,8,5,-10,-4,-1,7,4,-6,-4,2],[-6,-2,7,5,-9,-1,10,-6,10,-1,9,-9,-7,-10,4],[6,4,-10,9,6,-6,8,-6,-6,-4,-7,4,-6,1,-3],[1,-6,7,-7,-1,-6,-3,-5,-7,-5,-8,6,8,-1,9],[5,-3,-6,-7,9,-7,7,9,10,10,9,-8,10,-6,-5],[4,6,3,10,-6,-7,5,-4,5,2,-9,-5,-5,-3,5],[9,-9,9,-8,1,-9,6,4,10,-4,-5,3,-10,-3,1],[-10,-7,7,1,8,-7,2,-3,-3,-4,-5,-10,6,-9,2],[7,2,10,-4,5,5,-9,7,-3,-6,9,-5,10,-8,2],[-10,-1,5,-4,-2,-10,-10,4,-4,-10,-4,-2,6,2,-10],[6,-3,4,6,-8,-6,-7,-9,6,8,4,4,2,-7,-6],[9,8,-6,-4,2,-5,2,5,-1,-7,-6,2,6,-10,8],[-9,-7,-3,-3,7,8,-2,-4,-2,-7,-5,-9,-2,2,-7],[7,9,6,9,8,-3,-10,9,-1,10,-1,2,3,-4,-6],[-5,-8,1,6,-3,7,-3,2,-2,2,-4,6,-2,10,4],[-8,2,-3,1,-2,6,-2,-6,-10,1,8,-4,9,-5,-3],[-8,-8,-8,-1,8,3,3,-2,2,-7,3,-8,2,-2,-8],[-6,5,-7,2,-2,-3,6,-2,5,10,9,-9,-2,-6,-8],[9,-3,7,-9,-9,-1,8,10,-8,8,-9,3,5,9,-10],[-8,-8,-7,-10,-3,-7,-5,4,7,-2,-9,-1,9,8,5],[-2,8,3,-6,-10,-6,-5,-4,-6,-8,3,9,10,7,-5],[-5,-7,-8,6,7,-5,7,-6,7,-1,10,2,7,7,-9],[10,9,5,-2,-1,1,4,6,-8,-9,7,2,-9,1,-4],[-8,2,-2,5,2,-2,4,8,5,-2,-4,6,-6,2,10],[-8,10,8,-1,-5,10,3,-5,-5,-8,7,-6,7,-9,-9],[-6,-9,-9,8,9,10,-5,7,-7,-10,-9,-8,-1,7,5],[-1,5,7,7,5,-1,9,-1,5,9,4,6,3,6,-9],[7,3,-2,-9,8,-6,10,-6,-2,-6,8,-8,-1,-2,-2],[9,-1,-3,-3,-3,-6,-9,-4,5,5,6,-3,-6,7,3],[-8,-9,5,3,4,-8,-5,-9,1,7,-7,-9,-9,-7,4],[-6,-4,-1,-6,-6,10,-3,2,-4,-5,-9,3,-7,3,-1],[-5,9,-1,-10,-7,-9,2,-2,5,-7,4,-5,4,-1,5],[3,-8,-3,5,8,-10,10,1,8,5,-6,-9,-10,-2,-1],[-3,-1,9,2,5,-7,-8,-1,-7,3,-2,3,-10,6,3],[1,2,-1,-5,-4,-4,7,5,1,7,-6,-4,4,-3,8],[-8,4,-10,-10,9,-5,-4,-6,-4,-3,-4,-2,7,4,6],[7,-10,3,-7,7,8,10,-8,-3,3,3,-4,-6,3,-2],[-2,5,2,-4,-3,-5,-2,-3,1,-3,1,-2,3,7,-7],[-4,-7,-1,-7,8,-5,-8,-7,-9,6,-3,-8,-1,4,-6],[6,2,-9,4,9,5,-4,10,6,2,-1,-9,3,-7,-8],[9,-3,9,5,7,5,7,6,3,-7,4,-3,7,4,2],[-9,8,-2,-3,10,1,3,-5,5,1,-4,-2,-9,-2,4],[-7,-4,4,-3,5,8,-7,5,-10,-9,-4,5,1,-6,-6],[-8,3,9,-10,-8,-4,-4,-7,-2,-9,7,5,9,5,8],[6,-6,9,-10,-6,7,-3,10,8,-1,10,-10,2,-10,7],[-8,-5,3,10,3,10,-5,-1,-6,-4,7,5,-8,9,3],[7,10,-8,3,6,3,8,-2,-10,7,5,7,-1,8,4],[-5,-5,-10,-8,2,-3,-2,4,9,4,7,7,-1,10,8],[3,4,10,2,8,-4,2,3,1,7,5,-5,9,-3,-7],[2,6,-7,-9,-4,4,2,-3,-1,5,10,-3,2,-2,10],[8,7,-7,2,-3,5,-6,5,-9,6,4,4,10,9,3],[-1,-1,-8,-3,4,-7,-5,-7,-4,7,-2,5,-8,4,-9],[7,1,-8,-4,-7,9,9,-1,-4,-3,-5,2,3,-9,9],[5,9,2,4,10,-6,7,3,-4,-3,10,3,1,3,-2],[-9,-8,4,-8,8,10,-7,1,-5,10,3,-9,3,-2,-2],[-9,-3,9,-7,-6,5,10,2,-5,-8,8,-5,10,9,-4],[-8,1,-10,-1,-7,1,-10,3,2,-1,-3,2,6,-5,3],[5,10,5,8,6,-2,5,-8,5,8,-10,5,-8,3,-5],[3,-10,-7,5,-10,9,10,7,6,-9,10,-7,3,-5,1],[5,-1,6,-9,-3,2,4,-10,1,2,2,1,-6,-5,3],[2,-9,-2,-3,4,3,-2,9,7,-7,9,-3,-9,7,2],[1,9,-9,2,3,9,-3,2,-2,1,-9,1,5,1,-5],[1,8,-5,-2,-8,5,2,8,-2,-4,-2,-7,7,4,-1],[2,6,-5,-7,-9,3,-2,-4,10,3,-10,9,9,-9,-3],[-3,-4,4,-1,8,8,8,6,-2,-9,-4,-3,6,10,-6],[-6,9,9,3,6,4,1,-6,3,7,5,2,-4,-10,6],[7,-5,5,-2,6,8,-2,9,7,-5,5,-6,8,5,-6],[3,4,2,2,6,1,-9,2,-2,1,5,-9,-2,1,-6],[10,-2,7,-4,7,-10,-3,-1,6,-5,-3,4,-1,9,-6],[9,-6,2,5,4,-5,10,3,2,5,6,-10,-9,7,-3],[5,-10,-4,-4,-6,1,-5,9,2,-7,1,-6,4,-1,5],[5,-7,3,-5,2,-7,5,4,2,-5,5,-4,8,6,10],[-3,-5,8,-4,7,8,-7,-10,5,6,-10,-8,2,2,-5],[-1,-7,-1,-8,-2,8,-1,-1,5,2,9,-2,6,-5,2],[-1,10,-3,5,-5,6,-4,-8,7,-2,7,-1,-10,-3,-5],[5,-9,-4,-6,-4,3,-2,-7,2,6,-5,7,3,2,2],[-2,3,-2,6,5,8,-9,5,-3,-2,-4,5,2,9,-4],[1,-8,9,-1,-7,-4,4,-7,3,-7,2,-1,-3,3,-9],[10,2,2,7,6,-10,9,8,-5,8,6,-3,7,2,-5],[6,10,-3,-1,8,4,-2,3,1,-8,2,-10,-3,-1,6],[7,-3,-4,-1,-9,-6,8,8,-5,1,-9,-7,10,-6,6],[-6,6,2,-8,-6,-2,9,-8,3,-7,7,9,-5,-6,9],[2,7,-5,-9,9,-9,6,3,7,7,2,10,-10,2,5],[-7,7,7,2,6,-1,-4,-4,-3,5,-7,-6,10,-1,1],[2,-2,-4,10,7,9,2,7,2,-1,3,-4,4,-6,-4],[8,7,-6,1,8,3,-7,3,-3,5,-4,1,-7,1,9],[-10,-3,8,-9,5,-6,5,5,7,-4,3,1,3,-8,-9],[2,-3,8,4,10,-5,10,-2,-7,-5,1,9,2,10,-8],[7,10,-5,-1,6,-8,8,10,-3,8,9,5,-5,-2,7],[4,10,-3,-4,3,6,10,1,5,-8,3,-6,7,-5,6],[1,-5,-6,7,5,-10,3,-6,-10,10,7,7,-4,-5,-3],[9,9,-4,-4,-4,1,1,-4,8,-9,-1,-4,10,-3,6],[-3,8,1,-8,-1,6,-6,5,4,-3,-4,9,-5,5,-3],[-1,-8,-8,-1,3,-9,-3,6,7,1,-2,6,-2,-2,8],[10,2,10,-4,-8,-2,-8,4,-3,3,-2,-1,-10,-9,2],[10,9,-9,-3,10,3,-8,9,2,-4,-9,2,5,3,-4],[3,8,-5,-5,-1,10,8,-5,-4,10,4,4,-9,7,5],[10,5,-4,-6,-3,-3,-3,2,8,4,4,9,-5,-7,10],[-4,-1,-8,-3,1,3,8,-3,-3,8,10,9,-10,-8,5],[-10,-8,-9,-4,-3,6,-9,4,-7,-4,6,7,-5,-8,-5],[-1,-3,5,-7,4,-6,-6,7,8,6,-8,-7,-10,1,5],[4,-2,7,8,-10,4,3,10,9,-3,-9,-1,-6,-1,2],[3,-4,-2,-4,-6,1,10,-9,3,10,7,8,8,-1,-1],[6,9,-10,-2,-9,1,-8,3,1,7,5,1,-2,-7,7],[-5,5,3,-3,2,-3,4,-1,-9,5,6,-10,3,-5,2],[-10,4,-1,1,-2,-9,-7,8,-10,-2,3,-4,4,-4,10],[10,-4,-5,1,-10,10,-10,10,5,-7,6,-7,-4,10,8],[3,-9,-2,10,10,-8,9,7,8,-1,1,4,10,8,3],[9,6,2,2,-3,4,-3,9,-4,4,-9,-5,-4,2,-6],[-10,10,-2,-3,-4,7,6,-1,-1,-2,-2,-3,-8,1,-1],[-3,-1,6,-7,10,-5,-1,8,-8,9,-8,-2,8,-10,-10],[-6,-3,-7,-4,7,-8,-2,3,-3,1,-2,-10,9,-4,7],[-1,8,3,2,2,1,10,-10,-3,6,2,-2,2,-2,-10],[2,-5,-7,6,6,-7,-9,-10,1,-10,7,3,-6,-9,-3],[1,-4,6,3,-9,1,7,4,-6,9,2,-10,5,1,-6],[5,-10,4,-10,-7,7,6,7,-1,5,-1,-6,-5,8,-5],[2,4,10,-9,4,-7,5,6,3,5,7,-8,-4,6,-3],[-8,2,9,7,-10,6,-5,3,3,9,8,1,-9,-1,8],[-5,-8,-6,8,-9,-8,10,-5,7,10,5,9,4,-10,-2],[-8,5,-5,5,8,-4,8,-2,-6,3,2,-6,4,1,-4],[4,-2,-9,2,2,9,-6,1,-4,-6,5,-4,1,10,4],[4,7,9,-5,-2,-10,-7,10,4,-7,10,10,-4,4,2],[-9,7,4,-3,-6,-8,-6,3,-2,-9,-9,2,2,2,-1],[5,-1,-5,-10,-6,5,-3,8,8,-2,9,-5,3,-7,5],[-9,8,-3,-7,-3,-1,6,1,9,1,8,5,1,1,10],[5,-6,-1,8,-4,-10,1,-7,9,-4,7,4,-3,9,4],[10,1,4,7,-10,5,5,8,-8,8,-1,4,-9,10,-3],[-9,2,10,-2,8,-7,-3,-10,-4,8,-2,1,4,-3,7],[-7,-8,8,6,3,3,-8,-2,-7,-9,-10,-4,5,10,10],[-3,-6,7,8,-6,-9,3,-7,-6,-3,9,-5,2,-1,-9],[10,10,-2,-1,-10,3,8,-9,-3,9,-9,7,1,6,-4],[3,-7,-3,1,1,-3,-3,10,-7,-8,-9,5,2,7,-6],[-3,8,-5,8,5,9,4,10,-7,-7,3,1,1,-4,1],[1,10,-3,8,-2,1,-2,7,-8,-9,7,-10,10,4,-2],[-3,-1,2,-1,-7,5,6,2,-9,8,-5,10,5,-7,-5],[6,-3,2,-4,8,-5,7,2,3,-10,-9,-5,-10,-10,-1],[-7,-2,7,6,6,1,8,-3,9,-10,-8,-2,10,5,-1],[5,-5,-8,1,-4,-9,10,-4,8,10,10,8,1,4,-8],[-4,2,-9,6,6,9,-4,5,-2,9,2,8,-3,-10,8],[-3,10,-6,8,9,9,-1,4,10,10,8,1,4,8,1],[3,-10,7,-1,5,9,7,8,-8,9,-10,-10,4,2,-9],[8,7,4,-4,-1,7,5,-1,-5,-3,-5,-3,5,8,-9],[-2,-8,5,-5,8,-7,7,9,7,7,10,7,6,1,9],[2,5,10,-5,-8,-10,-10,-9,7,4,-7,5,-8,-6,-6],[6,-6,-1,2,1,8,7,10,-6,-1,10,-5,-4,5,-1],[-4,-2,-10,7,8,-2,-1,6,-4,-10,-5,4,3,-4,-1],[1,3,-6,-6,-5,-2,3,-7,-7,-1,7,-7,-5,-1,1],[5,-7,-9,1,9,2,-4,-7,1,-1,2,10,9,2,-6],[3,-8,10,-7,-3,-7,-8,-9,4,-10,4,-3,3,-10,5],[9,7,-10,7,6,-4,4,-5,-6,4,-6,-7,-5,-2,-7],[-10,6,-8,-4,4,4,4,9,-2,10,2,-6,-4,1,-5],[2,-7,-5,-5,-7,-1,-8,-10,6,-5,-1,2,-5,-8,2],[-7,3,5,8,-6,-2,7,-2,8,-2,-4,-7,10,-3,-10],[-6,-3,2,6,1,-4,-9,-2,9,-8,-2,-4,9,5,-2],[10,4,4,3,-4,2,-7,1,9,-9,3,-9,2,-8,-1],[2,8,-5,1,-4,2,7,6,-9,9,4,-3,6,-3,2],[7,-3,3,-1,6,1,5,7,7,-8,6,-8,-7,4,-3],[1,-2,6,4,2,-7,6,-3,3,9,-6,-5,1,1,1],[-2,3,-9,-1,-10,-3,-8,-9,3,8,-3,-6,1,2,5],[-3,6,-2,8,-9,8,3,2,6,-4,-9,1,7,5,1],[1,-8,3,-5,5,7,-8,9,4,9,-10,-7,4,-2,-1],[10,8,-2,-5,-1,-5,-6,-9,-4,10,3,2,2,3,-6],[8,10,-1,6,3,8,6,-10,-1,-9,8,3,-3,-5,-1],[-3,-6,-5,-7,-2,-8,6,-6,-10,3,-8,-1,-2,-7,1],[9,-7,8,9,-4,-6,3,8,-10,-6,6,-5,-6,3,3],[3,9,6,-5,5,-8,-2,4,-4,-8,7,-6,-3,9,-8],[-2,-6,-5,10,-7,-7,-5,10,1,-4,-4,-3,5,-5,-3],[-9,-3,8,7,-8,-5,1,-6,-1,-5,-7,8,-9,7,-9],[6,5,-3,7,-3,6,2,9,-8,-6,-5,-2,-5,8,-7],[-2,7,2,10,-1,6,10,5,-5,-10,-8,6,-10,4,-2],[-4,-2,2,2,5,5,-9,9,-4,8,7,-1,-9,5,8],[4,4,5,-2,-7,8,-8,9,-4,-2,-9,10,4,-2,5],[-8,3,5,-7,-5,-3,10,-4,1,-4,-10,-3,-4,2,-8],[5,5,8,-6,-8,3,5,-5,2,7,-8,-8,7,-10,7],[7,-3,-10,2,-10,-8,-4,-8,-4,-4,6,-7,-2,8,5],[-9,-9,-5,-5,-4,9,-10,5,-1,-10,-7,6,-3,-10,10],[8,8,-4,-6,-1,-6,2,-5,-5,3,3,2,-6,8,7],[1,-9,-5,-3,-2,1,9,5,10,4,5,-5,-7,-3,-7],[4,6,-9,4,1,-10,-3,8,5,-10,-1,-8,-4,-7,1],[7,-4,-1,-5,-8,-1,1,-9,4,4,5,-8,2,-10,-7],[5,-8,-7,3,-4,-8,-1,-10,7,6,-7,9,-4,7,1],[4,-10,-4,-1,-10,-10,-9,9,-1,3,-10,-8,6,-1,7],[9,-8,6,-5,-9,-2,-3,-7,-10,1,-6,6,1,6,-6],[-3,-4,1,3,7,-3,10,-9,8,-5,-5,-9,5,-2,1],[-3,1,5,7,2,-7,-4,10,-6,-5,9,-4,-10,8,7],[9,4,-7,-6,5,10,-2,1,-8,-10,9,-4,8,9,7],[7,-8,-8,8,-9,1,-6,-4,4,-5,-8,6,5,-5,1],[-2,9,-7,-3,10,-9,5,-5,6,2,6,6,-3,3,7],[1,-2,7,7,4,6,-10,1,-10,7,-8,4,-2,-7,5],[10,-3,-6,2,2,1,-1,9,-8,-1,-2,7,-5,3,5],[7,-5,8,3,-7,5,-5,10,-2,-2,5,-2,-2,-3,-2],[-4,-4,3,2,-1,1,6,-6,-9,-7,9,-6,6,1,-2],[8,6,-7,-3,3,8,3,1,10,-8,-2,9,-2,-6,4],[8,6,-3,2,-9,-3,-10,-1,-8,10,8,-4,2,3,9],[-7,-1,-2,3,-2,1,-1,4,2,3,-9,-8,9,7,7],[1,-4,5,7,-1,2,8,3,-5,5,10,10,-5,5,3],[9,-6,-8,-10,-8,-8,3,6,-10,-2,1,-9,8,-2,-7],[7,-10,-10,3,-5,-10,-3,-9,-10,2,-3,4,3,-7,8],[-1,9,-7,2,-10,-1,10,-5,3,-9,9,-9,6,-8,-9],[7,1,-1,-7,-6,-2,7,-3,4,-10,-2,-6,6,2,-5],[10,1,9,10,7,-5,5,10,6,3,-6,7,-5,-4,-6],[-8,-2,-10,10,-9,7,3,-5,9,8,9,8,-6,10,-10],[10,5,-4,6,-4,-1,8,5,9,-7,6,1,-4,7,-6],[10,-6,1,-9,-5,2,6,-2,-5,4,7,10,6,-4,5],[1,-9,10,8,-5,-6,9,-6,2,-1,7,-6,8,8,4],[-4,-1,-3,-3,4,-2,-6,10,-1,5,-9,-1,-9,5,-1],[-3,6,-9,6,-8,1,-1,-2,-1,5,6,-8,7,6,-7],[2,3,5,-5,-4,-3,6,4,-7,2,10,-6,-6,8,-4],[8,-6,-4,-3,-1,-5,-3,-8,-8,1,7,-9,-4,5,-9],[-8,6,10,-2,-10,-9,7,3,-3,2,-2,-7,-3,8,-4],[8,-3,-5,-6,-5,10,-1,-10,-4,-9,6,7,-2,6,-8],[-8,2,5,-6,4,9,-7,-3,-9,9,5,-9,1,-3,-3],[7,9,3,-5,-5,10,3,6,-4,4,3,9,4,-3,-6],[7,-8,-3,10,-1,6,-1,-9,-8,-4,-6,-4,8,4,-2],[-8,4,-7,8,-4,2,-10,-1,-2,4,1,-2,5,-2,1],[-7,-5,4,5,-9,1,-1,6,2,2,3,-5,10,-5,7],[8,-5,-5,5,1,1,5,4,3,-9,-1,-10,-7,4,-3],[-10,-5,4,-5,1,2,9,3,7,9,-3,-8,5,-3,1],[-10,-7,-7,-4,-7,-10,9,6,-5,10,-9,-4,-7,-4,8],[6,-6,4,1,8,4,-7,-9,5,-6,-8,7,1,1,-4],[-1,-8,1,-10,1,-2,-6,-6,-4,9,-5,6,-8,-7,4],[-9,-2,-2,10,-7,10,6,10,2,-4,-5,-9,2,-10,8],[10,9,-6,-5,10,7,-1,7,8,9,-10,10,7,-9,-3],[-1,4,-3,10,7,9,-2,-9,-4,-8,-9,-9,-2,-3,3],[7,8,-5,-2,-6,7,-4,-6,9,10,-4,10,9,10,-2],[-9,9,2,6,-9,2,-10,8,-9,-7,-6,7,-6,9,-10],[9,2,5,-1,8,5,-7,-6,10,-2,2,10,6,-8,2],[-8,5,10,-3,-5,1,1,-5,-1,-2,-6,2,6,1,-5],[-1,-3,-4,-8,-4,-10,-3,2,-9,6,5,6,5,-7,7],[9,-4,4,-5,-7,-7,3,1,9,8,1,-5,-5,10,-9],[4,5,-10,8,-5,-6,3,2,7,-3,-5,2,-1,2,-7],[-8,-9,-8,6,-6,-2,-1,4,-10,3,5,8,-9,2,-10],[-4,-9,3,-4,5,10,-2,2,-4,-6,6,8,9,-2,-1],[-2,-3,8,10,7,-1,1,-7,9,7,-2,-7,10,-8,-8],[7,3,-1,-7,2,6,-10,7,4,-3,-3,8,3,-7,10],[-9,-7,8,3,1,-1,1,6,1,5,-10,8,2,4,2],[7,3,-6,-2,-6,6,-9,-1,4,2,-5,-2,10,4,-3],[10,-10,6,3,4,-10,-9,7,4,1,5,-8,-8,-10,4],[9,-7,-6,4,8,3,2,9,-3,3,8,-1,-6,7,-1],[3,-5,-10,1,2,-4,9,8,-5,10,-8,-7,-5,8,-1],[2,-1,-2,8,5,-5,9,-6,4,10,1,-2,-7,-3,8],[-5,6,5,-5,3,7,10,4,2,9,-3,10,-1,4,-3],[8,3,2,-3,-3,8,4,5,-5,-7,-1,-7,8,9,3],[-4,-9,-4,5,9,-2,9,6,6,-2,-8,-3,-3,2,-1],[-5,-6,10,-5,-9,-4,-3,9,-8,3,-5,-3,3,-9,10],[-1,-5,-9,-9,1,-3,9,1,-7,2,-6,-8,-7,-5,-9],[-6,-9,-7,7,7,4,-6,-5,-2,3,10,-2,10,-3,-6],[1,-3,3,1,4,2,7,2,5,2,-7,-9,5,6,6],[2,-4,-8,-3,-10,8,-6,10,-6,-9,2,3,4,-3,-9],[2,6,6,-6,-6,7,-8,8,-2,-4,-3,8,-10,-7,3],[-3,7,5,-5,2,7,3,6,-7,6,-9,8,8,-10,-2],[-10,9,4,1,-5,9,4,-1,-7,-9,10,3,-7,-7,-5],[1,-1,3,6,-5,8,-5,9,-5,6,9,-3,-3,3,-9],[-8,4,-1,-7,2,8,-9,4,-2,-4,4,4,8,-10,-7],[9,-9,5,1,-7,-5,5,-9,-1,10,7,9,-1,-9,7],[-10,-1,3,-9,9,9,10,-7,-3,-9,-4,-4,8,-9,8],[4,6,9,1,-4,-3,-4,7,3,10,2,8,6,-3,6],[-2,-3,6,-8,9,9,6,-8,-7,-4,1,-10,4,-9,-2],[10,3,-2,5,-8,-5,10,-2,-6,-7,7,-8,1,4,9],[-4,10,2,8,6,-4,5,-10,-2,6,-9,-1,10,9,3],[10,4,-5,-5,-4,1,10,3,2,8,-9,3,-6,-4,-8],[10,4,-9,-10,4,-5,-5,-2,5,-6,-4,-2,6,9,-2],[7,-5,3,2,10,1,-2,10,-5,-9,-10,7,-9,1,-5],[5,2,-4,5,2,3,-1,-8,-10,8,5,4,1,6,-5],[4,4,-1,-2,-4,4,-6,2,-7,-8,-4,2,-4,3,-4],[3,-8,5,5,8,2,5,-10,-3,-9,-2,3,-1,7,-10],[-2,-1,2,-2,3,-4,-3,-4,-8,-9,-9,10,-5,2,-6],[-2,-7,-1,-9,6,4,-7,-1,-1,10,-7,-1,5,-9,7],[-1,-6,-2,-7,-9,-2,-3,1,10,4,-1,2,-6,-5,4],[-10,1,-3,-2,-5,-1,5,4,9,-7,-7,-2,10,6,4],[-7,6,10,-4,-2,-5,-4,9,6,5,9,-2,10,10,7],[-7,8,-6,-7,-1,7,-1,6,-10,-8,-6,6,-7,-9,-2],[10,-3,-7,9,9,-2,-7,9,3,-6,4,-7,1,7,-2],[6,-2,-2,-8,-4,10,3,-9,1,-2,2,-8,-8,-2,6],[-8,7,3,-1,-10,-6,-1,8,-1,-1,-5,-1,-9,-9,-8],[8,-1,-7,6,-3,-3,9,-8,-5,7,2,-6,-4,-3,-7],[-9,-6,9,3,1,4,-7,-9,1,3,-9,-7,-9,-1,3],[5,4,4,-7,1,-5,4,-9,4,-9,5,4,-5,4,-7],[-8,10,-6,-7,1,10,4,-5,-9,10,-8,5,8,6,8],[8,-6,7,-1,4,4,-8,-6,-3,4,2,-10,-7,-1,-10],[-6,4,-7,5,-7,1,-1,-2,-4,3,-8,-1,5,9,-10],[-4,9,2,1,5,-4,-9,-9,-5,6,10,-6,2,-10,-7],[10,-9,-1,7,6,-10,-10,9,-10,2,-4,-9,7,2,-4],[8,-2,5,7,5,-3,8,-6,5,-3,1,1,-10,3,4],[2,-1,10,-8,-7,-2,10,4,-7,1,5,-9,-3,-5,-8],[-6,-2,5,-5,8,-7,-10,8,-4,-2,7,8,4,-3,-10],[7,-3,2,-8,10,7,-4,-8,-1,-9,7,10,10,-9,-10],[-3,-2,5,-4,-1,9,-6,4,-7,-4,10,2,9,2,6],[4,1,8,9,9,6,7,2,6,10,8,3,8,4,9],[-5,1,-8,2,-9,-9,-8,9,-2,9,-4,10,9,-9,-1],[2,3,2,10,-1,2,8,-8,9,-1,-2,5,4,1,6],[-4,-7,-2,8,-2,5,-1,-5,-7,1,-3,4,-2,-2,4],[4,-8,4,-8,4,-3,4,-9,5,3,7,-8,6,9,-4],[7,2,-8,5,-1,8,7,10,-2,5,4,1,-3,3,-4],[7,-4,7,5,10,1,2,9,-8,-10,4,7,5,4,-1],[4,10,-9,1,-8,-2,6,-1,-9,-4,3,2,-5,7,-4],[8,8,-7,6,1,-9,-5,8,-10,4,-5,-3,-7,5,-10],[4,-10,-7,-9,4,-8,-4,8,8,8,-1,9,1,2,9],[6,1,6,-2,-10,-5,-1,-1,9,-4,-1,2,-9,-5,-1],[-5,8,3,-4,6,-3,-4,8,-1,5,7,-4,-6,-4,-6],[-7,-3,8,8,-3,8,5,-10,7,3,-1,-8,1,-8,8],[9,-6,10,-8,-8,3,9,-7,-5,10,-8,10,6,3,4],[7,-7,-8,8,5,9,1,-10,-4,-7,-4,-7,-3,6,6],[-7,5,-7,3,9,1,-8,3,-3,2,3,-4,-2,3,5],[8,-2,8,-6,-5,8,4,-8,-3,-5,-8,-3,-1,1,3],[-3,10,5,-5,8,9,-3,2,-9,-2,-4,-5,3,3,9],[-10,8,8,-7,-6,2,-2,8,8,-1,-4,-1,1,6,-9],[-10,7,-10,-1,7,-5,5,-6,1,2,4,-8,-8,10,3],[-1,10,-2,5,1,-5,3,-2,-2,-2,-9,-2,-1,6,-6],[-1,-3,-5,1,-10,-1,9,-2,-2,-5,3,-9,9,-7,1],[3,8,-3,10,-2,6,-3,9,5,-4,-6,-4,-1,-4,9],[10,7,7,3,-6,8,-10,9,10,1,-6,-8,1,-5,-6],[2,6,5,1,-3,-5,-9,5,4,-1,7,9,10,-3,-7],[-1,6,-10,3,1,8,-8,-8,-4,8,7,-5,-9,10,-1],[-4,6,10,-2,-9,2,6,-4,-2,-9,6,-6,-6,-5,8],[1,-8,1,-5,4,4,1,5,6,-6,10,3,-2,-8,5],[-2,-7,5,2,-8,4,-10,4,2,5,-7,7,-8,10,5],[3,4,-2,7,-9,-10,-9,-1,8,-4,-1,-7,-2,-9,-2],[-10,4,4,-2,-9,7,5,-10,8,-10,-10,-5,9,-1,-4],[3,-5,-9,-4,-1,2,-2,4,5,-9,-6,6,-5,1,-3],[8,-8,-4,5,7,-1,-4,10,-5,3,10,5,3,10,8],[10,1,1,6,-1,2,4,5,7,6,3,1,1,10,9],[-7,3,6,3,-2,5,-6,-1,10,10,9,-4,-1,-6,8],[-8,4,-3,9,-4,-2,-4,-7,-1,4,5,-7,4,3,9],[-5,6,-2,4,7,-2,-7,7,-1,3,10,-1,-4,-4,-4],[8,-4,3,-5,7,2,-1,4,-5,8,4,-3,-4,-9,3],[5,-5,6,-5,2,5,1,-7,3,4,9,9,1,10,-6],[-5,6,10,-7,-5,6,5,3,4,3,7,-4,-5,-2,6],[7,8,1,-5,4,-9,9,10,7,10,-10,5,5,-2,2],[6,-9,-5,4,-3,2,-1,-8,-3,-4,7,1,-9,-2,7],[9,5,10,2,-2,4,-7,-2,-5,1,9,-3,-2,1,5],[7,-3,-6,4,9,-3,9,6,-6,-8,10,7,-2,-10,-2],[-2,1,-5,8,-4,-7,-8,10,10,6,-5,9,-2,2,5],[8,-6,1,-5,3,4,8,-8,7,-4,-6,-1,-2,6,-6],[-7,6,-3,-5,8,10,7,5,4,-3,-6,9,4,2,-3],[-2,-3,4,-7,-6,6,-6,-4,10,2,-8,10,6,7,5],[8,-2,6,-9,-6,8,1,-7,-5,-2,-10,-7,-8,-6,3],[-6,-1,-2,-6,-1,-5,8,-5,10,-4,8,5,-4,-10,-9],[-6,-4,5,5,6,-8,7,7,-1,-5,-3,8,-10,-2,-5],[-5,-8,-9,2,8,9,9,2,-1,4,7,-9,-5,7,1],[-8,4,-5,9,-6,7,3,-3,-1,5,10,-5,6,10,-7],[7,9,-1,6,-2,-7,8,-5,4,-7,3,2,6,8,-3],[-9,10,4,10,1,10,3,7,-1,3,-1,-5,6,1,9],[3,-4,6,4,6,10,-5,-6,-8,-5,-6,1,7,5,5],[2,4,1,-4,5,-4,7,-7,-4,-1,8,-3,-3,10,10],[1,-3,10,4,1,-3,4,4,5,6,7,7,7,-2,-5],[-2,6,3,9,7,9,-7,-2,-6,-1,4,8,-9,9,-2],[6,3,9,-6,-5,10,-3,-9,-2,-1,-7,2,-4,2,4],[10,-8,-10,10,7,8,-9,8,7,3,4,5,-7,9,-4],[3,-3,-6,-10,-10,2,-6,-1,1,4,-10,-3,-4,-5,10],[-8,-3,6,5,-6,2,-2,-8,-3,-5,-2,7,9,8,6],[5,-10,4,-8,1,5,9,-4,-2,-8,5,-3,7,-4,8],[-10,-4,3,-6,1,4,-3,-3,2,5,4,9,-10,1,-9],[6,4,-2,9,8,9,6,-7,-10,-6,-8,-3,-10,-5,-1],[-2,6,6,-4,7,-7,-6,-8,-3,3,-1,10,1,-1,10],[9,-8,1,4,-2,-9,-7,3,-9,4,-6,4,1,5,-10],[-5,-9,5,-6,5,-9,-7,9,-2,6,2,-10,-7,2,4],[-9,2,-1,-9,-5,5,9,8,3,10,-3,3,-7,-6,-4],[-10,1,-2,8,-9,6,-6,-7,-6,-4,4,-7,3,-9,4],[9,-6,-9,-3,10,9,-6,-2,9,7,-6,-1,8,-8,10],[10,-9,2,-5,-4,-6,10,10,-9,1,2,-7,-2,-4,-3],[4,8,8,-3,4,7,-2,4,-10,-1,-6,-10,-4,9,-3],[-6,6,4,3,-8,-7,-9,-1,-1,3,-3,4,4,-6,-8],[5,-7,8,-6,9,8,-8,-4,-7,9,-6,-10,4,10,9],[8,-2,7,-8,-10,7,-2,-6,-2,-3,4,-3,-2,2,-8],[10,7,3,-3,-6,-8,5,-8,8,4,2,3,-6,-2,-6],[9,8,-7,1,4,5,2,3,10,9,5,4,7,-2,8],[3,4,-5,-4,3,6,7,-9,-8,-4,-3,-10,-6,6,-10],[-5,-4,-4,-2,-5,-4,4,-9,-4,1,7,6,10,-6,9],[1,-9,-5,-3,-9,3,-9,7,-9,8,10,2,5,-7,10],[-9,3,7,-8,6,-1,3,5,10,2,2,5,7,7,1],[1,8,7,-2,8,-4,-7,8,8,6,8,-1,3,3,1],[7,5,6,3,-8,-7,9,-3,8,5,-1,-1,7,10,3],[-5,1,-8,-3,6,1,6,-9,-6,-10,2,-5,-4,6,4],[3,-2,9,-3,10,-6,5,10,2,-3,-9,4,8,8,-9],[-5,-2,-9,6,5,-3,6,2,-4,-4,-7,-1,-8,-8,-5],[1,-1,7,-5,-4,-9,-1,7,-1,-10,-5,7,-9,-5,5],[3,-1,10,4,3,8,-5,4,-4,2,-1,10,-4,-5,3],[-10,8,1,-9,7,-3,3,4,1,-4,10,9,-3,9,2],[10,2,-3,-9,-10,-4,1,-4,-5,-3,-7,2,4,-8,5],[-9,-4,-4,4,1,10,-6,3,6,-4,-6,-3,-6,6,-2],[-8,6,9,-10,3,-4,7,4,1,-9,-10,-5,-5,-9,-7],[-2,9,-8,7,-1,9,3,-7,-7,10,5,-9,2,3,5],[-2,6,4,-2,-2,-1,-8,7,5,8,-8,-3,5,-2,-7],[-2,-1,-2,2,6,-5,-5,3,-2,5,-2,-5,1,2,-10],[-10,8,9,-6,2,-5,9,3,1,8,7,1,7,-2,5],[8,2,-7,-5,-4,-7,5,-10,-7,6,-8,-7,7,-3,3],[-10,-3,6,-7,-5,6,-1,-7,3,-3,1,-4,-10,-2,-7],[-1,5,-1,-6,-10,9,-2,-10,1,-2,2,6,2,6,-1],[1,10,-7,-9,-9,-3,-8,9,5,1,6,1,-9,10,-10],[-8,2,-9,1,2,-8,10,-2,-5,-1,-6,-10,-9,-1,6],[-9,-4,-4,-9,-2,7,-8,7,-6,-8,-9,-3,3,-9,2],[-8,10,3,-5,-1,5,-7,4,2,-4,-8,7,1,-7,6],[6,2,6,-1,10,-7,1,8,8,7,2,-7,1,1,-10],[7,3,-5,-7,-1,10,1,-4,7,9,-5,3,2,-2,10],[-9,10,-10,-10,-1,5,-1,-3,3,6,-7,-5,-5,-2,9],[2,3,-10,7,10,-1,1,1,-6,7,-8,-2,-3,-9,7],[1,6,1,6,3,10,-3,5,-9,10,-2,-8,-3,-5,-10],[-10,2,-6,9,-3,-2,-8,5,8,-6,-8,9,5,1,-2],[-10,3,-8,5,2,10,2,-8,-3,1,-7,8,-8,-7,2],[-1,4,6,-4,-7,-10,10,-7,9,9,9,-8,3,1,5],[9,-8,10,3,5,-2,-1,7,3,7,-5,-7,7,-8,-9],[-2,9,-1,3,4,-6,-5,9,4,-9,3,1,-6,1,7],[-7,10,10,-6,5,-3,4,-9,-1,4,-6,-5,-10,-5,4],[-3,-2,8,2,7,4,10,7,3,-2,9,6,7,4,7],[8,1,-10,-4,-3,-2,10,-4,-3,6,-4,5,10,5,8],[3,1,5,-3,8,9,-2,3,-5,-1,-2,-9,-4,-3,-2],[1,4,-9,5,-10,-7,-4,8,-5,4,8,-10,6,-8,2],[-7,-7,-5,4,8,5,-2,6,-8,7,-6,9,1,-7,4],[9,2,-6,2,-1,5,10,6,-9,9,-6,10,9,3,-2],[-9,2,-9,-10,-10,5,-6,-3,3,5,-10,4,-8,-3,3],[10,6,-3,2,-6,-4,-8,-6,-3,4,10,10,-4,-1,1],[-2,-5,-3,-5,-4,7,-2,10,-7,8,2,-5,-3,1,10],[7,-3,2,3,-10,8,6,-4,9,-9,1,6,2,-9,-3],[-6,-8,-5,4,-8,8,4,6,-8,7,2,7,-6,-7,-5],[-3,-3,8,3,-7,-8,5,-8,-10,-5,-4,-7,-7,3,9],[6,-6,2,8,-10,6,-1,2,1,-8,10,-5,4,-1,8],[4,1,7,-8,9,-4,-5,-6,-6,8,-5,-5,-5,-4,7],[-6,8,-3,-1,1,-8,-2,10,10,5,8,-8,2,-4,-10],[8,2,-3,2,7,-3,8,9,-3,4,9,-10,4,10,8],[-9,-8,-6,-9,7,4,10,-7,-10,10,-2,5,-9,4,7],[1,-10,-10,-4,-5,-4,2,10,4,2,1,6,6,5,5],[5,1,-7,-2,-9,-3,-7,-6,6,7,8,4,6,-9,1],[4,-2,-1,-5,1,3,4,10,-9,1,-6,5,-3,9,1],[-6,6,-9,8,-4,-7,-4,9,2,2,-1,4,-8,7,9],[-7,-1,4,2,4,-2,4,-2,9,8,-9,8,7,10,-3],[-1,7,-5,-4,4,4,-10,9,-1,8,-8,2,-10,-3,-2],[1,-9,5,-9,3,-8,-7,-7,-2,5,-10,9,-10,-1,-1],[-3,6,9,6,-4,-1,-7,-3,-5,3,-7,2,4,-4,8],[6,8,-3,-5,6,9,-2,-6,-1,1,10,8,3,7,-5],[-3,-8,4,7,-2,1,-8,10,-9,4,8,6,-7,5,6],[-9,-10,-9,8,-6,-9,-4,9,1,-8,7,-1,9,4,10],[-4,9,5,10,6,-6,10,-1,5,-8,9,8,-8,5,-2],[2,-7,-2,10,8,6,10,5,7,-5,4,10,-3,-10,10],[5,-10,4,-5,-1,-2,-6,-5,6,-10,8,-3,7,-7,-4],[10,1,-4,-9,-3,3,-9,10,1,-5,4,-6,-10,-5,-9],[-5,10,9,5,4,-10,3,-7,3,-6,-8,10,9,4,-8],[-3,-4,-3,9,-2,-3,-10,-4,-9,3,-5,-8,-5,-6,1],[4,9,8,-2,9,10,8,10,6,-1,5,-2,-1,-9,5],[-1,5,8,3,10,6,5,9,8,-7,8,6,-6,-6,4],[-7,2,-8,-5,2,2,-5,-2,4,-2,10,2,8,3,-5],[7,5,-3,-10,1,-4,-8,1,1,-1,-6,-3,-6,-6,-6],[9,2,3,-6,-4,4,1,-4,5,10,10,-6,-4,-5,5],[-1,5,8,-9,-10,5,-10,10,-1,-3,9,-4,-8,9,-9],[5,9,-5,7,-5,-8,2,7,6,-5,6,2,-10,10,-6],[-6,-3,10,-5,-4,3,-9,4,7,3,-6,-5,-2,-1,-6],[1,9,-8,4,5,2,-1,-4,-8,-2,-2,-1,-9,4,5],[-10,-2,2,5,3,-3,-1,-7,-1,6,7,4,-7,-3,6],[2,4,-2,-4,-4,8,-2,-4,-3,-8,-6,9,5,4,8],[5,3,-4,8,1,-4,9,-7,-9,-6,1,1,4,7,-3],[-8,-7,-10,6,-10,1,-8,-4,-3,-7,-7,3,-6,6,-6],[10,-7,-5,-7,-6,9,-3,-8,-4,-9,2,-7,5,-1,-9],[-10,-1,6,-6,8,-2,-1,-4,1,2,8,5,6,-9,1],[-5,4,7,-1,-3,-7,6,1,7,-9,-1,2,2,-7,8],[-6,-8,9,10,-10,-1,-1,5,8,-3,2,5,3,-3,-6],[-8,-1,5,-4,2,-2,-1,9,-5,7,-7,4,-2,-9,7],[5,10,-4,8,3,-1,2,-8,-7,9,10,2,7,-1,10],[-2,3,-3,-10,-4,2,8,7,-4,-8,8,-8,-4,-6,-9],[-2,1,6,2,-4,7,-4,-9,-2,5,7,-9,-6,8,-9],[8,10,7,-5,10,-7,-7,-3,-4,-1,-6,-4,1,-8,-4],[6,8,-3,-1,-8,-8,-9,8,1,-8,10,-1,9,-6,1],[-5,2,-4,-2,3,-6,-7,-8,-7,-6,3,9,2,-8,-6],[-8,9,-4,-7,7,-6,-3,-6,-7,-1,-1,1,-2,9,-9],[10,-6,7,1,-8,-6,-9,-7,-1,1,-7,10,-2,1,2],[-6,7,-1,-2,2,1,4,8,-7,4,-5,-2,-9,7,6],[9,-2,-4,5,-7,7,5,-10,-1,-4,-6,-7,3,-3,-7],[-10,2,7,8,5,-8,-5,-4,-8,3,1,10,-8,-8,-3],[-1,-3,6,-3,9,2,-10,2,2,-8,-1,-2,1,-4,-2],[-3,-2,10,-4,4,8,-3,-1,-2,-5,7,1,7,-1,10],[9,-10,10,1,-10,-9,1,7,-9,6,-9,-9,4,2,-10],[1,-6,2,-1,-9,-10,-9,10,-6,5,2,4,-4,-1,6],[-9,-1,-7,10,-8,9,9,10,6,-8,-7,-6,-6,-9,-9],[8,-1,-4,4,6,-4,9,-3,-3,-4,-9,-3,-1,-5,8],[7,-3,-7,-7,-10,-4,-8,-8,-3,-9,3,-7,2,7,-8],[3,-1,4,-1,10,5,-8,8,-5,6,-7,1,5,-9,3],[9,5,-10,9,-3,7,-4,3,10,4,-4,-4,4,10,-4],[-5,9,-3,10,-2,-3,-10,-3,-1,-3,-8,-8,5,4,7],[10,-10,-3,-8,7,3,9,8,-8,-5,-8,9,-5,-9,-10],[8,-10,9,-5,4,6,-3,5,-7,2,4,-4,5,-7,-10],[-1,-9,9,4,-2,6,-8,-5,10,-5,-5,-4,4,-10,-6],[-10,-1,9,4,5,-4,7,2,6,-5,6,-2,9,-2,6],[1,6,-2,5,-10,3,-5,-7,-2,9,-6,7,7,-1,-7],[8,1,-4,-3,-1,3,-9,6,-3,1,-6,-9,4,-1,5],[-1,7,-9,7,2,-4,-3,3,-1,8,10,-8,6,-5,6],[-4,4,-1,4,4,-7,5,3,9,-4,-5,-10,-5,4,5],[1,7,3,-8,-7,7,3,5,-9,8,-3,10,-6,2,-7],[2,-8,-5,8,-8,-6,-8,-6,-4,9,-10,7,-10,7,4],[10,-3,-4,7,-2,6,3,-6,9,4,2,-2,4,-1,-3],[6,-1,-2,-7,-5,-6,-6,5,8,2,3,7,-2,-7,-3],[-7,6,8,-3,4,4,10,-9,-2,10,10,-7,-9,10,-1],[8,2,8,-9,8,10,5,2,5,-2,7,10,-1,-10,-5],[-3,-8,7,8,-6,1,-6,6,-2,-3,7,8,-1,-6,-9],[-3,6,-7,9,8,10,1,-8,6,-9,-6,-9,4,3,-3],[3,-5,9,-9,-5,-4,-8,3,-4,-6,9,9,-8,2,-3],[6,-2,4,-2,10,1,4,-8,5,-7,-5,7,-8,5,8],[4,-5,-6,-8,1,6,1,-3,-9,1,1,6,-7,5,-4],[-3,9,-7,-4,-3,-4,-9,3,3,10,9,9,-1,2,2],[9,8,-1,4,3,-4,-8,-1,-5,-2,10,8,9,-10,3],[8,-5,-1,3,-6,3,-3,-3,10,1,-2,-5,2,8,-4],[-2,-7,1,5,-3,2,1,7,-2,-9,-10,3,1,-9,7],[-2,-8,-6,-8,6,-2,-7,4,6,-4,-8,-7,-10,-8,7],[-4,2,1,2,-1,-9,5,-7,-4,6,7,10,8,-2,1],[-10,10,7,-2,-9,7,7,7,-2,6,-7,-5,6,-9,8],[8,6,-1,-9,4,-7,9,-3,-9,-7,7,7,3,5,-2],[3,-2,7,-2,8,8,6,-1,-6,-6,-5,-7,6,6,3],[6,-7,4,4,2,-1,1,-10,6,3,8,-4,-10,6,-2],[5,4,-8,8,2,8,-2,1,-9,7,9,-2,4,-5,-10],[-9,5,-9,-10,7,-8,-7,1,-4,7,4,9,-2,8,3],[-4,-6,-4,4,-3,7,-7,4,4,-10,-9,8,-2,3,8],[9,8,3,-2,9,-9,7,-3,-3,8,10,10,9,10,2],[-8,10,-8,-2,-1,6,-7,5,3,-7,-5,-10,4,-7,-1],[-2,3,9,-6,-2,1,-6,-10,-8,-1,5,1,1,7,2],[10,-7,8,4,6,-9,-3,-7,6,-7,-2,4,-10,-1,-4],[4,-6,7,-6,8,-9,3,1,-5,5,7,6,1,6,-2],[-4,4,-7,6,4,-9,2,-2,-2,-4,-3,-6,-2,-5,-10],[9,-1,-8,4,4,-9,-10,3,-5,-1,1,10,2,-6,-10],[-4,-10,2,3,-3,5,-10,-2,6,-7,8,2,-7,2,1],[-10,9,-10,-8,-8,-2,3,-7,-6,-6,-2,2,4,10,5],[-8,-8,4,9,-3,-3,9,8,2,-10,8,3,-8,3,5],[-3,10,-1,9,6,-6,-10,6,-2,3,-7,6,5,10,-3],[-4,7,8,-8,-5,-1,-3,7,-1,8,-3,-7,6,2,-7],[-9,3,-5,-4,-10,-7,-2,-3,10,2,-10,-2,3,-8,-1],[3,-8,-8,7,-7,-2,9,-7,-7,-8,2,3,4,1,2],[-1,-6,1,-3,5,-9,-6,-3,1,-9,-8,-5,-6,-6,5],[1,-4,4,-10,-6,-10,-1,3,9,-3,-3,1,1,-10,-4],[-6,-8,1,-8,2,-5,-10,9,2,7,8,8,1,7,-8],[-4,-8,-5,-8,-2,-8,3,5,1,-3,5,-10,3,2,-3],[-2,5,1,9,-4,10,-9,-9,-6,-2,-9,-2,-7,2,-6],[-10,-2,-6,-4,2,7,-9,6,1,-8,-3,-9,8,10,7],[-5,-2,-1,-9,5,-4,-5,9,1,-3,4,-8,9,-10,5],[6,-6,6,9,4,-9,8,-1,5,-8,1,-4,-4,-4,-5],[4,1,-10,-7,4,-4,-10,-9,1,3,4,-3,4,5,-4],[6,-10,7,-4,10,6,3,8,6,-7,1,4,2,-1,-3],[7,-10,8,8,2,2,-2,5,-8,-9,10,10,4,-2,-9],[8,6,-5,-7,-8,1,-10,-6,4,6,3,-3,-1,-5,10],[10,1,9,-2,-7,7,2,-2,2,4,-9,-7,-8,-9,-3],[-8,-8,9,-3,6,-1,9,-10,-2,6,2,3,-8,-8,-5],[-6,2,-9,3,-1,-3,2,6,2,-4,-3,4,6,8,-8],[4,5,-2,-8,8,6,2,5,1,7,8,4,8,5,-3],[-9,1,-5,-10,-9,-10,2,-4,1,4,1,-8,3,4,-1],[3,5,6,6,-3,-6,10,7,3,-9,8,7,4,1,10],[-4,6,6,1,9,6,7,3,2,-3,-3,1,-6,-1,-3],[-1,-3,-8,10,-10,-3,2,6,3,-1,1,7,5,-8,-2],[-7,-10,1,-1,9,-8,10,10,7,-6,-2,-2,2,4,-6],[-3,-1,-5,-2,3,-10,2,3,7,-9,-8,-1,-2,10,3],[4,10,8,8,-2,1,-2,-3,9,6,-3,9,-7,-7,8],[-4,3,-8,7,-2,8,2,-8,-6,-3,3,7,9,2,2],[5,2,7,-8,-7,7,4,7,4,-9,8,-6,5,-10,1],[-6,-7,4,-10,2,5,-3,9,-2,-3,-4,4,-5,-5,-5],[6,-5,-2,1,-3,7,2,-8,-2,-6,1,8,-9,-2,8],[1,1,-1,4,2,2,-7,3,-7,-6,-10,2,10,-10,6],[-2,-6,-2,3,-8,5,-8,6,10,6,6,-2,-3,2,7],[-5,-2,9,7,-1,-10,-7,-1,-10,6,-6,2,-3,-2,-2],[2,9,10,9,1,4,-6,-10,6,7,-7,-6,-3,-8,5],[-6,-9,2,-3,7,-1,-7,-2,4,-8,1,4,-6,6,1],[-4,-10,-4,-2,-3,2,10,3,-8,-1,7,-4,9,7,-6],[9,-9,-4,-1,-1,5,-10,-5,-8,-1,-1,-1,9,-5,-5],[7,2,3,1,2,10,-5,2,-5,-3,7,3,9,8,-10],[-6,7,5,3,5,5,-3,-8,-2,-3,-9,9,10,8,1],[-1,7,4,-1,7,4,-3,-4,-10,-6,-1,5,1,-7,3],[4,-6,5,2,-1,-4,-3,-10,10,3,-6,4,-6,7,1],[3,8,-8,-3,9,-1,9,-1,-1,10,10,-2,-7,7,-2],[-6,6,6,4,-6,3,7,-1,10,1,10,8,-6,-10,9],[-3,-9,-6,7,-6,7,10,1,4,7,-3,-7,-9,-6,-7],[-1,9,-1,6,-6,-3,-2,-9,-6,4,8,-8,-8,7,-6],[-6,-5,6,9,6,-2,10,-1,7,-2,1,-8,-5,6,10],[-6,-8,3,-9,-5,2,5,3,1,-5,1,-2,-5,-7,9],[-4,8,-8,-7,7,-3,1,-1,5,-4,-6,4,-6,-5,3],[-4,8,10,-3,2,-1,9,4,8,-3,-10,9,-6,-5,10],[2,-5,-4,-6,-2,-8,-3,6,-6,-7,-7,7,10,-1,-4],[-3,2,9,-10,6,-3,-6,-1,6,-5,8,1,-7,9,-6],[-8,-1,4,8,-5,8,9,6,6,-9,4,-4,5,6,1],[6,2,2,7,1,-4,-2,5,-5,8,4,3,1,-1,-1],[10,2,7,7,3,6,9,4,-3,-4,5,7,6,-6,-4],[9,-4,-5,4,5,-9,7,-8,-1,10,-6,-5,-2,2,10],[-3,-9,10,8,-5,1,5,-2,-9,-5,-8,1,-5,-6,1],[2,-5,-2,6,-6,4,-5,-7,1,-7,2,-7,-1,-8,-7],[3,4,2,-10,8,9,5,-1,8,8,-8,3,5,-6,-2],[-3,-4,-2,1,-7,10,-10,-10,7,3,-5,6,-4,3,6],[-5,-10,-6,-9,4,5,-4,9,6,-3,-3,-9,10,2,5],[9,-8,3,1,10,-10,9,2,7,6,-8,-2,-10,2,6],[-1,-9,5,-3,-4,2,-8,7,9,-9,-5,5,-3,10,8],[-3,2,-2,-4,3,-7,-1,6,-6,-3,1,1,-7,-3,-2],[-2,2,6,1,8,-7,9,-4,5,9,7,6,-5,4,10],[9,-10,-8,-4,4,2,-8,9,-3,2,-2,1,-6,-1,-2],[-8,-4,1,-3,-10,-10,-10,5,-2,4,10,4,-2,-8,3],[-3,-1,9,9,-1,-1,-3,-1,10,7,-7,8,10,2,-2],[-8,-7,-1,2,-8,-1,4,-10,4,-6,2,10,5,-1,-8],[5,9,2,8,-2,-7,-5,-6,-3,5,-1,-5,8,-1,-10],[-1,4,6,-9,-1,9,1,8,9,10,-3,2,4,-9,-8],[-5,-3,-8,-6,-1,6,-5,-6,-8,4,-10,1,-6,-1,-1],[3,7,-4,5,1,-4,-10,6,2,2,2,-5,-3,7,6],[-4,-1,-7,5,4,9,-3,-7,-4,2,6,-9,6,-4,7],[-8,-10,-1,3,-8,2,-5,6,-5,-2,8,3,-1,-9,-2],[4,9,-9,1,-6,1,8,-4,-1,-5,-8,-2,-2,7,-7],[-10,-9,7,9,3,8,-5,1,1,8,6,-10,-6,3,-4],[2,-3,2,10,7,7,9,-2,-1,4,-8,7,9,10,7],[-2,7,2,5,-1,7,-10,1,-7,-4,2,-3,9,2,-4],[5,-8,3,-4,-3,-1,-4,-7,2,7,-8,7,10,3,-7],[-1,-5,7,-8,-6,-7,-3,9,-5,-5,8,-3,-5,3,5],[5,4,-4,9,1,4,6,8,9,-8,-6,-8,-1,2,-10],[-4,2,6,9,7,-1,-8,10,2,-9,-4,7,6,4,2],[4,1,-3,9,10,-2,8,-10,5,-6,4,-1,-1,-9,-2],[10,-8,-1,8,5,-7,1,-8,-2,2,-7,-7,7,3,6],[6,3,-7,-5,4,2,-8,7,-3,6,6,-4,-2,-2,7],[-10,5,9,10,6,-5,-5,3,-8,10,4,7,-10,10,-4],[1,-2,-9,-8,-8,-3,5,5,-2,6,8,8,7,6,2],[-6,4,-1,10,2,-6,-10,-4,10,-9,8,6,5,-7,-3],[-9,-4,-7,-7,-4,7,-5,2,-4,-7,-9,-10,-2,10,-6],[-10,2,-1,1,-7,9,7,-1,-3,-3,7,7,9,-4,1],[-2,6,-7,2,-7,4,-1,9,-2,-6,-5,9,2,-1,6],[8,-5,9,-3,1,-10,-5,-8,4,7,8,-4,-3,-4,-7],[-6,-6,1,-2,-8,6,10,10,8,-1,-7,8,-4,10,-5],[8,-3,-4,-2,1,-1,-10,10,10,-8,-4,8,6,3,1],[4,1,4,4,-4,-7,-3,8,9,-3,1,-9,9,2,-5],[10,-2,7,-6,1,-5,7,-5,3,-4,-10,4,-3,-9,5],[-10,3,5,8,-10,-1,9,-5,4,-10,-6,3,-4,-5,3],[-6,4,-5,-9,10,3,-8,-9,9,-3,-2,-3,-3,1,-1],[9,-5,7,1,2,9,3,10,-2,-7,-9,-6,-4,-1,-8],[-7,-10,-9,2,-6,3,2,3,-10,-10,-2,6,5,-6,4],[9,-2,-4,9,-2,4,10,-3,-7,-10,2,8,-9,-9,-7],[10,2,8,-2,6,2,3,-6,-5,-1,-10,6,-2,-8,1],[-2,5,2,4,10,1,-9,-4,-1,8,5,-5,-5,-7,8],[10,8,5,-9,-7,6,1,-2,-2,5,7,7,2,-10,5],[-6,7,-10,-7,9,8,-1,3,-5,10,-5,3,-8,-6,-5],[-6,5,6,-4,-4,4,-10,-2,-2,-10,-8,-9,10,7,6],[6,2,5,-9,-8,6,5,-1,-1,-4,5,-5,-5,4,1],[-2,3,-10,-2,1,-2,-4,-3,3,-7,-2,-9,9,-3,5],[-2,-1,-3,-5,-10,4,1,8,-4,5,-8,-6,-7,-2,-9],[-4,-8,-7,-8,5,-7,1,-9,-2,-9,-4,8,-3,-6,-5],[4,7,-6,4,-5,3,9,1,-2,1,-2,8,7,-4,8],[10,-9,-5,-1,1,5,-9,-10,4,-1,-3,2,-2,-3,-5],[-6,-3,4,-1,5,3,8,8,-10,9,-9,-6,-4,-1,-7],[-7,5,-9,10,-6,-2,8,-8,-7,9,2,8,9,6,-8],[8,5,9,-4,4,5,8,-7,10,-7,-9,6,-6,-1,5],[-7,-7,10,-6,7,4,-5,7,-1,5,-7,8,4,-8,-6],[4,-8,6,1,2,-10,-1,-1,7,9,-9,-6,10,10,-5],[-3,-2,2,-8,-9,-10,-9,4,-3,-9,2,-9,-6,10,-8],[-4,4,1,3,-8,2,-1,-8,8,-5,4,-8,6,3,-1],[1,-10,-1,-10,10,7,5,-2,3,6,10,5,-4,-1,-9],[6,8,-6,4,-5,5,6,-10,-4,-8,-10,2,-6,8,-1],[-2,8,10,-10,3,9,-7,-7,5,9,4,4,5,-10,9],[-2,8,-10,-8,-3,4,-7,10,8,-7,-9,-6,-7,-2,6],[8,-2,-9,-5,1,-6,-3,-7,-8,8,-2,8,-1,9,-2],[7,-4,-6,-9,10,10,-8,10,4,2,5,9,2,-6,3],[9,-8,9,3,-5,-10,10,6,3,8,-3,9,-6,-2,-5],[10,7,4,10,-5,-2,-9,-3,2,8,3,-3,-3,-5,-1],[4,-4,-7,-8,-8,5,-8,-2,-1,8,4,-1,4,-6,-3],[-1,8,9,-6,4,9,-3,4,-7,10,6,-7,-1,-3,3],[-3,4,-10,5,-9,9,10,5,7,-9,-9,9,4,-8,6],[-4,6,8,-10,-1,4,6,-9,-8,-5,3,3,-10,3,-5],[-1,-6,4,2,-9,-2,-2,6,9,10,-2,8,7,4,7],[-7,-6,-3,8,-6,-10,-1,9,6,3,4,10,-1,-1,5],[2,-6,6,3,-7,-1,1,9,-9,-8,2,-8,-5,7,3],[3,3,-8,-9,3,1,-2,7,-2,6,-9,-5,9,5,5],[-8,-5,-8,-10,-3,-2,8,-7,-5,1,3,10,-8,-6,-4],[3,1,-3,-9,7,-7,-6,-3,1,-6,-9,-4,-4,7,7],[5,5,8,-7,2,-8,-3,7,-1,-5,-1,-5,5,-1,-1],[6,-10,4,-1,-4,-2,-6,-1,10,1,9,10,-1,3,-7],[-10,-2,6,-6,-4,-1,-7,1,10,-9,7,-5,10,-3,-5],[9,5,-4,7,9,-2,-10,-7,-6,4,-10,-1,-9,-8,-6],[-5,8,6,5,2,7,-6,5,-7,2,4,2,4,8,6],[-5,-1,-2,-5,-10,-1,-2,-3,-10,-8,10,2,-9,3,-10],[-5,9,10,-1,-8,-3,-10,-6,2,1,-8,-3,-3,9,-2],[-7,8,1,9,2,-6,6,7,-9,10,10,3,8,-6,3],[10,4,-6,-3,-8,-2,-9,2,-2,9,-3,10,10,1,9],[-3,4,6,-2,-4,-5,7,-7,-1,10,-1,-7,-8,-2,-3],[2,9,-3,5,1,8,-6,-9,-3,-1,10,-5,-6,-6,-1],[7,-4,1,-9,-3,-8,8,5,8,-10,3,3,-1,-3,5],[-5,-7,-9,4,-5,-2,-7,8,10,10,-4,-3,2,-6,-8],[-9,5,2,6,-4,5,5,-6,4,6,-7,-6,7,-4,-5],[6,-7,-3,5,-7,2,6,-3,-10,-8,10,7,8,8,-7],[-4,8,-3,2,-10,-8,-2,10,7,-4,-6,-4,2,9,4],[2,10,-9,9,-1,-10,-1,-5,8,3,-1,-6,-2,-7,-8],[-8,8,10,-8,-9,-2,-2,-1,-6,-1,3,-5,-8,-1,9],[-5,2,2,-1,5,-3,-10,9,-2,-4,-1,-6,8,-7,-9],[10,3,7,4,-8,-9,5,6,1,-7,2,2,8,1,10],[-2,-4,-10,10,9,4,-1,-7,1,6,3,-7,9,6,1],[-10,6,-7,4,-4,-5,1,7,4,6,-7,-1,5,-2,-10],[6,-5,3,-1,-9,-2,-3,-2,-2,10,8,8,-2,9,-3],[6,-10,-4,-2,2,1,-6,8,7,-6,-8,4,6,-9,1],[-6,3,-9,9,-5,-3,-4,5,8,-1,-8,-1,-7,10,3],[-9,-8,7,1,-1,6,5,4,3,3,-6,-3,3,5,-5],[3,-9,6,10,-3,-6,-4,10,-2,-10,5,5,-5,7,2],[-8,5,7,5,-1,-10,-7,9,-2,10,-5,10,-4,-8,4],[-4,6,4,-1,3,-5,-8,-7,10,5,3,-7,-9,7,4],[7,8,9,7,8,1,-4,8,5,1,9,1,-7,1,-10],[-7,-4,10,-4,-3,-8,-8,7,-4,-5,4,8,-2,-8,1],[7,-4,-1,-4,1,7,-6,-2,10,-5,10,1,-5,-5,5],[10,3,4,-8,9,10,9,-5,-8,6,10,-3,5,3,10],[7,-1,-5,4,-7,-1,3,2,-10,2,2,-1,4,-2,8],[-6,-3,3,6,-1,2,-8,1,-2,-10,8,-8,-8,5,-9],[3,7,-6,4,-10,5,-7,9,-4,-3,-7,6,-8,-6,-6],[5,4,-5,-2,2,-6,-6,-1,2,-7,-8,6,8,10,-8],[-2,-6,-4,-7,-10,2,6,-8,4,10,7,-6,6,6,9],[-2,6,7,9,-10,-3,-6,2,-5,7,8,7,-6,7,9],[-7,-8,1,5,-1,10,9,4,3,6,7,4,7,7,4],[-3,-6,-2,-8,6,3,-3,5,2,7,8,3,9,1,-5],[1,4,10,-4,-4,-8,-8,9,-8,-9,-10,-10,8,2,-5],[-4,6,-4,5,-5,-8,-8,-5,8,-10,10,-6,5,-2,-3],[6,5,-5,-8,-7,-9,-7,-9,-6,8,6,9,2,5,-1],[-3,8,-10,-7,3,-1,-8,1,-3,-4,6,2,-1,-9,8],[-5,-8,-9,5,-7,9,-3,8,-2,-5,-5,6,4,10,4],[-3,7,3,10,-1,8,-8,-6,-7,9,-7,-10,-10,2,8],[-7,6,-4,1,7,-4,-1,6,-9,8,-6,2,7,10,3],[-7,3,-8,2,-3,-1,-4,7,2,6,4,4,-5,10,-4],[7,7,5,-7,3,6,4,10,3,-5,-1,-8,-7,-10,2],[1,-3,9,4,-5,-5,2,-2,-1,4,1,-7,4,3,10],[-6,-5,9,-9,10,-9,6,4,-6,2,-1,7,3,9,-3],[-1,9,-2,-10,3,-6,4,-6,9,-1,9,-5,9,6,-3],[-8,10,10,10,-4,9,3,-1,2,-8,10,-7,6,2,-6],[2,1,3,-5,-1,-4,-10,-6,8,10,2,-5,-6,5,-4],[-5,2,10,7,-8,6,-1,-9,-7,4,4,7,3,2,-3],[6,3,-4,-5,10,-9,5,5,4,2,-9,-2,-6,2,-2],[4,-3,-7,-2,5,-8,-10,-4,-9,-7,6,9,-4,6,5],[-1,7,-8,10,-9,-3,9,9,8,-4,3,1,-2,9,1],[6,-6,5,-7,3,-7,-10,10,4,9,3,9,-4,-8,-1],[-10,10,-9,-10,-7,-2,-9,-5,-4,-7,8,-7,-5,-10,-5],[-2,7,8,7,2,-1,2,-9,-1,5,-7,7,2,4,-4],[2,-3,10,-4,-1,2,-3,4,-1,-6,-2,-1,-5,-2,4],[8,-6,6,-4,4,9,7,-2,5,-5,-2,-3,9,-8,9],[-9,-2,7,10,8,-7,1,8,-5,9,-5,-1,5,-6,-1],[9,-1,-4,6,-2,-9,1,2,-3,4,1,2,8,9,4],[-1,9,-3,10,6,-6,-10,-3,8,-3,8,2,3,-1,7],[2,6,8,4,-9,-2,3,1,6,6,2,3,-5,-7,1],[-10,10,6,-7,7,-1,2,3,-4,3,-10,3,10,-2,-6],[8,9,4,-5,-8,-1,-3,4,6,-9,-7,5,-4,2,1],[8,4,9,-3,-2,-9,1,-6,2,-5,3,9,4,5,9],[3,-7,-5,6,-1,10,-9,-3,-5,7,5,-4,9,8,-5],[10,-4,-5,-1,10,7,-1,-10,1,9,-7,-9,-7,-10,-2],[1,1,7,6,-6,10,-6,-2,-5,-4,-3,7,2,2,-10],[-7,4,-8,-5,-1,-9,-4,3,-1,-1,3,6,7,5,-1],[2,9,5,1,2,-3,-2,-5,-5,3,3,-9,7,8,5],[-8,5,-7,5,-2,-7,-7,4,-3,-10,4,-4,4,-8,3],[10,-2,-1,7,6,-10,-6,3,-10,-8,5,-6,4,-8,2],[8,5,7,1,-1,-5,10,-7,-3,9,9,-5,3,-5,-4],[4,-7,3,6,-9,-1,-7,6,-3,-3,2,8,-7,7,-2],[8,-2,-7,-10,9,10,-4,2,-3,10,-7,9,10,-6,9],[5,-6,-6,-1,7,-8,1,-6,-3,-8,-8,-7,-10,-5,3],[6,3,6,6,6,9,-10,5,3,-8,2,6,3,8,4],[-3,-9,10,-8,3,10,7,2,8,1,-6,4,-6,-8,6],[-6,-10,-9,-2,-7,-10,-9,-8,10,-6,-4,6,4,4,6],[4,10,7,-6,-6,-4,-9,1,3,5,-2,4,6,2,10],[1,10,-7,1,-5,-6,1,-1,-5,6,4,9,-8,5,-5],[7,-6,7,1,-9,-5,5,-10,-2,1,-5,8,4,-8,-5],[2,9,9,5,4,-8,7,-6,-10,-4,-6,7,-4,9,9],[-7,6,-1,1,-6,-10,-7,8,5,-4,10,-9,-4,-1,5],[7,-1,7,9,-9,-7,9,-5,-7,-6,1,-9,-6,-3,7],[5,1,10,-9,8,-6,-7,8,4,4,4,-8,8,-9,-1],[1,10,-3,4,9,-1,8,2,4,9,3,-5,-10,5,6],[-4,1,2,6,7,7,-2,10,1,7,-3,-5,1,3,-3],[-1,7,2,-7,3,-4,6,5,10,-1,8,-9,-2,8,-8],[4,9,3,-1,10,8,6,1,-1,9,-10,-4,10,9,3],[1,7,9,1,-2,-5,8,6,3,2,9,-9,-3,1,8],[-9,1,9,10,1,-3,-4,-8,-10,-8,-2,-6,-10,-1,1],[6,8,-8,9,-7,9,9,-8,-4,5,-3,-6,10,-6,-8],[-10,-6,4,-3,1,-5,9,2,8,-8,-7,-2,9,-1,-2],[-1,5,-1,9,-2,-6,-1,-1,-4,8,-4,4,9,7,-8],[1,1,7,7,-6,8,-5,6,-1,-5,-6,-5,-4,-6,6],[-9,-3,5,2,8,10,-9,3,3,10,5,6,6,6,-2],[-8,-9,3,3,-5,-5,-4,-10,-2,3,10,7,7,7,-7],[-6,-9,-6,-9,10,-9,-7,-9,-10,-1,-4,10,-10,-7,2],[5,9,-3,10,3,3,5,4,8,-9,-6,3,-4,-3,-9],[3,3,2,8,-5,2,-2,10,2,-2,9,2,4,-5,7],[1,10,3,-9,3,-3,-2,9,2,1,2,10,4,-2,-10],[-2,10,-5,5,-5,8,3,-2,5,6,8,6,2,3,-8],[4,5,4,-10,-6,9,-2,5,5,-9,-5,-8,6,-10,5],[-1,-8,4,8,2,10,5,4,-9,-1,-9,-5,7,9,2],[5,-5,-10,6,-5,-10,-2,9,9,4,-6,6,9,5,-3],[2,-10,3,-5,10,1,-5,8,-8,1,9,-4,1,10,-9],[-2,-3,7,-6,6,2,-7,10,-10,4,-10,-1,8,6,-9],[-3,8,-5,1,-5,9,-4,-4,-2,3,-10,-9,-7,-4,-6],[-10,3,-4,-2,2,-6,5,-7,-4,-7,-7,10,-7,-2,10],[3,-7,-9,-7,-8,8,-1,-3,4,-9,6,8,-1,-3,-8],[-1,4,-7,8,3,4,9,-4,4,-10,1,-9,2,-5,-5],[1,-4,-3,-9,5,-7,1,4,8,5,1,4,6,1,2],[-4,1,7,9,5,7,-2,-7,6,-6,-1,-9,-6,10,6],[-5,-2,-6,-10,-4,8,-6,10,9,-9,10,-2,5,-4,9],[-7,-10,-1,-8,1,8,3,-4,-7,2,-9,-6,-9,-3,5],[5,-6,-1,-3,-8,10,8,9,-10,-2,-4,3,4,-10,9],[6,-5,8,9,-4,-8,4,2,5,-2,4,-1,-4,1,9],[9,-1,-8,-2,-4,6,3,-9,3,-6,-2,1,-5,8,10],[3,3,-4,7,-9,-4,-3,5,1,8,5,6,-5,10,9],[1,9,-10,-6,-1,-7,2,-2,-4,6,-10,1,-4,9,8],[-4,-1,-2,8,-9,-4,3,-8,2,-8,3,-7,6,-1,-7],[-4,-9,-6,8,-10,2,-3,10,10,3,-8,7,-3,9,7],[-6,-9,-10,7,-8,4,10,4,1,2,1,-2,-9,1,-10],[4,-1,-10,-7,-8,-5,4,2,-7,-2,-6,-1,1,-3,8],[1,9,4,-5,-8,7,-5,-9,8,9,5,3,4,-5,-8],[-2,4,3,3,-10,-10,4,-9,2,1,9,5,-3,8,5],[9,-5,9,1,-5,-4,-2,-10,-3,10,2,-1,3,-7,2],[-7,1,3,1,5,7,-2,-8,-9,3,-9,1,5,6,7],[5,-6,-7,10,5,5,-5,-10,-9,7,10,-8,-6,5,4],[9,-7,10,5,3,5,3,-4,4,4,5,7,-7,6,-6],[-5,4,9,-5,5,-6,5,-2,-2,2,10,-2,-1,-10,2],[-9,-1,6,-8,6,-6,-4,10,9,4,10,1,1,-10,10],[8,-6,4,-1,-2,6,9,-10,-9,3,-4,-7,4,8,-10],[-5,-2,7,6,10,7,7,-7,-9,9,10,-4,8,-7,-3],[7,-3,-2,6,-2,-5,4,9,2,-8,9,-6,-8,-2,-3],[10,-6,10,7,5,2,-10,-5,-10,4,-9,7,-7,-10,-10],[7,-2,6,10,-9,3,-8,-10,2,1,-7,1,6,10,9],[8,1,9,-3,1,6,5,-8,9,2,-6,-10,4,-4,-1],[-4,1,10,-3,10,7,9,-2,-5,-5,-10,-8,7,-6,4],[-8,-8,-6,-8,5,4,-6,4,-9,10,7,-4,-2,-7,-6],[8,1,-2,8,7,-1,-5,-3,-6,9,-6,-8,1,5,-10],[1,6,6,9,1,-7,-9,9,3,-4,-3,-7,3,3,-8],[-1,-1,-8,-7,2,7,8,4,-5,5,7,2,-1,6,4],[-4,-10,4,-3,9,8,-5,-9,4,-5,-7,-6,-8,5,8],[-7,-6,9,-7,10,-6,-1,5,-9,7,-7,-6,-3,-10,10],[8,2,4,-6,6,6,-6,-4,-8,1,6,-10,-3,-1,-1],[-2,-8,-5,-8,3,6,-7,-10,-5,-3,-6,6,-5,10,3],[7,-2,-2,5,-7,5,2,8,-10,-10,9,3,-1,6,4],[-3,-5,-4,-2,-8,-1,-2,2,3,-5,6,-1,1,9,5],[7,2,5,-2,7,5,2,1,1,7,-8,-10,-1,-3,8],[-4,8,-10,4,-1,1,-10,-7,-6,-6,-2,3,-5,5,-7],[-8,10,6,2,-4,-2,-10,6,3,6,3,4,-4,-4,-1],[-1,-1,6,5,-7,2,1,-2,-1,-9,4,9,-1,1,9],[4,10,3,3,7,-6,-1,-2,6,-10,2,-8,-4,-3,4],[-6,6,-6,-5,8,10,10,10,6,5,10,10,10,9,-10],[9,-5,-5,3,-1,1,-4,-7,-2,10,-9,-7,-2,-4,2],[6,-3,6,4,-5,2,-8,-6,1,-8,-5,3,7,-9,-8],[8,-2,-7,-6,-10,7,8,8,-10,1,-2,-4,-8,-2,-3],[-8,6,-1,-8,3,-9,-10,6,2,7,-6,10,7,3,5],[-2,9,10,-1,7,8,6,3,-6,-10,8,3,5,6,-1],[-6,-3,-1,2,-3,5,5,9,-3,-2,-7,6,10,2,-1],[-8,-6,-1,4,-8,-2,-8,4,4,-2,10,-1,-1,-10,-9],[-6,8,-8,10,2,-10,-10,-1,6,4,4,-7,-2,5,1],[-3,-3,-10,9,4,7,8,-2,4,6,8,-9,6,1,-3],[7,1,8,10,1,-1,-8,8,7,10,7,5,10,9,-3],[6,-8,-8,10,6,-2,10,7,9,-9,1,-4,-1,-8,-10],[3,-10,4,-9,-8,6,5,7,5,8,-5,-7,5,-5,-10],[-3,10,-4,-3,-9,-10,-8,-10,-9,-3,8,-5,-6,4,-3],[-6,-5,-10,-3,4,4,6,10,-9,2,5,-1,-6,1,10],[-4,10,5,10,1,-9,-9,6,-2,10,8,-5,-6,-6,10],[-10,-2,-4,10,-4,-8,-7,9,-10,-10,-4,-6,9,-9,10],[3,-4,10,-2,1,-3,-9,8,4,9,-6,4,4,-3,-10],[-4,3,-8,3,-5,-7,3,-9,-6,-1,-6,-9,-1,8,10],[9,1,-2,-6,10,-1,-10,-5,-7,1,-5,7,1,-9,-1],[7,4,1,8,3,9,-4,-10,9,9,7,8,10,-9,-8],[-9,-10,2,9,9,7,5,8,-2,5,8,7,-6,-5,5],[7,6,-7,1,8,7,9,-7,-7,5,-2,4,6,6,4],[5,-7,1,1,1,1,3,10,-8,-2,-1,-5,-4,2,4],[-3,-9,10,-6,1,10,-7,-3,-6,-6,-3,1,-1,-9,-6],[10,2,2,9,-4,-7,-4,7,1,-8,2,-5,9,9,-10],[-1,-4,2,-4,4,-3,2,7,-7,-5,-7,-6,9,10,-5],[2,-1,-8,4,5,-2,1,8,-5,6,7,8,-8,3,6],[-8,-4,9,-3,-4,3,9,-9,-1,9,8,-5,-3,3,2],[-2,10,-3,-7,-1,7,6,7,-2,-4,10,-6,8,9,-3],[-3,-3,-2,3,5,10,-6,-9,-4,5,-9,-9,9,4,1],[1,6,-8,-2,-8,4,10,-4,5,7,7,-5,3,-4,-2],[-8,-10,6,-3,-8,5,8,-4,-4,2,8,-1,6,7,-3],[-6,3,-7,3,-7,-2,-4,10,5,-4,-7,-8,5,2,-5],[-2,-8,-6,-4,-7,-1,5,-9,1,9,3,-10,-4,-5,1],[-3,-3,-8,8,-10,-4,3,-6,4,-6,-5,-1,-2,-1,3],[-8,-7,-9,-10,8,1,-10,-9,7,-4,-8,-6,5,8,-6],[10,-9,-5,-1,-7,-4,10,5,10,5,-6,4,-4,1,-9],[-2,1,5,2,-10,6,9,9,5,7,5,5,-7,-10,-2],[3,7,7,-9,-9,-2,-4,1,7,3,8,-9,-9,3,-5],[8,8,4,-9,-8,4,3,1,1,2,1,-2,-10,-7,10],[-7,-1,-6,-2,-8,3,-10,-9,-2,10,4,1,-4,-9,-5],[2,-9,-7,-6,2,-9,5,5,2,-6,-1,-4,10,-7,-8],[10,-4,-10,6,10,-1,4,8,-2,9,1,-2,-4,4,1],[-6,9,-2,1,-7,7,-7,6,2,-6,-7,1,-3,-2,-8],[8,-6,4,-7,7,3,2,6,-7,-5,9,9,3,-5,-10],[10,9,-4,3,7,5,-5,-1,-4,-9,-1,-3,8,-4,-9],[-8,-2,-4,-9,8,-10,-5,10,3,-6,3,1,-8,9,2],[6,-8,6,-3,-2,10,-3,-4,2,-5,2,-6,3,1,-5],[10,4,10,-2,4,5,4,10,-9,7,-3,-3,3,-2,-5],[-9,10,5,-5,2,-10,5,5,4,-2,-9,2,-3,-7,1],[-1,9,6,-1,2,2,2,-8,5,-2,-6,1,6,-3,8],[-5,6,10,9,-3,-7,-4,4,-10,5,5,7,-9,9,-4],[-8,6,6,-6,-9,7,-5,7,-3,8,10,-1,-9,-8,4],[5,-2,8,7,2,-6,-2,-9,10,-7,-2,-4,-4,3,1],[-3,-3,-7,10,8,10,2,-5,-4,-3,-7,-9,-7,-4,-2],[-10,-3,-9,-6,6,2,6,-1,-5,9,-5,-4,-7,-7,3],[-8,-4,8,5,4,-5,-9,-10,-5,-5,-2,1,7,7,9],[-3,5,-9,-1,-4,-8,-1,2,-7,-6,-9,3,6,-8,-3],[-5,5,6,-10,10,3,-4,5,6,3,2,-4,-2,6,5],[8,-6,1,-10,-10,-6,-8,-5,-6,-3,-7,-1,-2,1,-6],[7,-8,8,6,2,-8,-9,9,-9,7,6,-9,-4,1,-10],[4,2,4,-3,9,6,-4,-4,-1,9,-9,3,-1,10,4],[10,9,4,-3,-4,2,10,7,8,10,-7,2,6,6,-9],[6,-10,5,-10,1,-1,-6,-9,-6,2,-6,-3,-8,6,-5],[-6,-6,7,2,-10,-1,-8,-1,-9,-7,10,-9,-4,2,-3],[-4,-7,5,2,1,-2,2,-9,-10,7,-1,-1,-2,9,2],[10,-9,8,10,3,1,-4,-7,3,1,-5,9,-3,8,4],[4,-9,8,8,5,-1,-7,9,-6,-3,4,-9,1,-3,-4],[2,10,10,7,8,-9,10,4,2,-2,6,3,1,7,-3],[-3,-10,4,-3,-8,-5,-9,-5,-4,2,-1,6,-6,-8,-2],[-6,7,8,-6,4,-1,2,-4,3,-3,-6,5,-10,8,4],[10,7,-5,-1,-5,6,-4,7,3,-7,-7,5,-6,1,-3],[-6,-4,-2,-7,2,6,1,6,9,8,-8,-3,-6,-7,7],[-1,-5,-5,6,8,7,5,5,5,-3,-3,9,5,7,10],[4,-6,-8,5,-6,-3,-8,-10,-2,-10,10,-7,9,2,-7],[-9,-8,9,-7,-2,-9,5,-3,-2,-4,9,6,-2,-1,-3],[1,-9,-9,4,5,9,1,3,1,-7,10,8,6,-2,-6],[-5,-9,5,3,3,5,3,-6,-10,-2,1,-4,9,-8,-9],[10,-1,-6,-6,-6,-6,3,-7,-6,7,5,-1,8,1,4],[10,1,2,8,6,-9,4,-4,2,-9,9,6,3,1,-1],[1,9,-3,-9,9,6,2,9,-3,7,1,-6,-7,2,-10],[-4,-4,-2,2,-9,-1,-8,-7,10,-9,1,-4,-6,3,-10],[10,-3,7,-1,-1,1,-5,4,7,1,-2,7,-7,-8,2],[5,-3,4,6,-2,-6,-10,1,3,9,-5,6,8,6,6],[-5,10,9,-10,1,-5,-5,10,-8,-6,-8,-9,-5,-10,4],[-1,-6,7,-6,4,8,-6,4,-1,-8,-1,-9,3,-1,9],[8,2,-2,3,7,7,9,-10,-9,7,-9,-6,-3,4,-9],[-7,2,2,2,4,-5,5,-6,6,8,-3,-4,-7,5,10],[6,-2,1,-4,9,10,-3,-7,4,2,-7,-10,5,7,-3],[-5,-6,-9,1,10,5,4,-7,-5,-4,-2,4,-1,1,9],[9,-3,1,2,7,-9,-1,8,-6,8,2,1,6,-6,-2],[-3,9,5,-7,-9,8,7,-5,-7,10,8,-9,-7,-1,-2],[-8,-5,10,-8,-7,-5,8,-2,9,-3,7,10,-10,-1,-1],[-7,9,-7,-10,-9,-3,9,6,-4,3,5,-9,-7,1,-2],[-4,-1,-1,-3,-5,-7,7,-8,9,8,-7,5,-8,-5,-2],[-1,-7,9,-3,8,-3,6,3,2,6,-8,-5,-9,7,3],[-4,-6,-1,9,-7,1,4,-1,1,-10,5,10,-9,4,4],[5,-4,-10,-8,-8,-8,7,8,8,3,-6,4,-2,-6,10],[4,9,10,2,8,5,10,-9,-1,-8,5,-5,-2,5,-3],[-10,-4,-6,8,-2,-7,4,8,8,10,-4,-1,-7,5,-3],[-9,-7,9,5,1,-6,4,-8,3,10,1,10,4,-5,9],[9,-10,-1,8,-8,5,7,-4,-10,10,-10,-7,-3,8,-1],[-7,-9,5,-7,5,-3,-1,-10,5,10,9,6,-10,6,-8],[-9,7,3,-7,6,8,-4,10,-4,1,2,-3,7,-9,3],[2,-4,1,1,-8,10,6,6,6,-3,-1,-1,5,-10,-3],[-4,7,3,5,-4,5,-10,-7,-7,6,4,-6,2,2,-10],[4,-9,-3,-9,-10,-3,8,-6,-2,10,6,5,-8,5,-10],[-5,8,7,10,-2,-10,5,-2,5,-5,-4,-10,3,8,5],[3,-4,6,2,7,8,1,-5,6,7,-4,4,-9,-1,-5],[5,-8,8,-8,2,4,-3,3,8,-8,3,-3,8,-4,-9],[5,6,2,-9,-2,-8,-3,3,-10,7,3,4,9,-10,-2],[1,-2,3,8,-8,7,1,8,-7,-3,10,8,-4,7,7],[2,7,4,-9,3,5,3,9,-9,2,5,-10,6,-8,-7],[-10,-3,-2,-8,9,10,1,-9,-7,-1,10,10,6,3,1],[-9,8,10,10,3,-9,-5,-6,-5,5,-1,1,-7,9,1],[10,3,-5,-2,-10,4,9,4,-4,-10,4,-5,5,1,2],[6,-5,1,-1,-3,-9,-4,6,4,6,10,7,6,5,-8],[1,-8,4,-6,-4,7,6,2,7,4,3,-5,7,-2,9],[9,3,-6,-9,-1,-1,-8,8,-1,-9,-2,10,3,-7,2],[-3,5,10,-3,4,-6,10,2,-6,-7,-1,-9,4,-10,5],[6,3,-5,3,-4,10,1,-3,-2,-7,8,-7,1,-9,4],[-1,3,4,-10,6,5,3,-7,-9,9,-7,-6,-4,-8,7],[6,-4,3,8,8,-7,-9,-7,1,5,-1,-7,-7,-5,-3],[-6,-2,1,-10,-9,3,1,8,-10,3,-1,10,-3,-2,-3],[-3,-5,1,10,-4,-2,-5,-1,-9,6,-10,6,8,8,-10],[-2,-10,-7,4,4,4,-5,9,6,8,-1,10,10,-9,-5],[-9,-3,5,-4,5,6,-6,-2,10,-4,-9,-9,-2,-6,-7],[-1,7,7,-2,-2,-9,-10,-3,9,-10,2,-7,10,-9,-10],[5,-3,5,-6,-3,6,9,8,-10,-5,-9,10,7,-5,4],[3,7,4,7,9,-10,-1,-2,-3,7,3,-7,2,-4,-10],[-4,-10,10,3,5,7,-10,6,-9,-6,-9,2,3,9,3],[-6,4,-8,-9,2,-6,9,9,-9,6,-7,-4,8,3,3],[-9,-2,2,-7,-2,6,2,-3,-1,-1,8,2,7,7,9],[5,-8,1,7,-4,-1,-9,6,-3,-4,5,-2,-4,-9,8],[-3,-6,-10,-3,-8,-7,7,-3,-8,9,-1,-4,1,2,8],[-8,3,-4,-2,9,5,-1,2,3,-10,-1,-7,6,4,-8],[9,5,-1,-4,-7,-4,-1,-5,9,-4,-2,-2,2,9,-7],[8,4,-8,2,7,-9,4,-6,-4,8,-5,-2,1,6,-8],[8,9,-9,6,-2,-5,-2,10,7,-4,-9,5,-6,5,-8],[-7,9,10,-4,3,9,-7,-4,-10,1,6,-3,-3,-9,2],[-1,8,4,10,-4,4,-9,-6,-9,6,2,-4,-4,5,5],[-5,-6,-8,10,-8,1,10,4,6,4,-5,-5,1,-6,-5],[6,9,10,2,-7,4,6,-7,2,6,-5,-4,10,2,-4],[10,6,1,9,7,6,4,-9,-4,4,7,-3,-2,8,10],[10,3,-1,5,10,6,7,-9,10,-5,5,6,7,-2,1],[-9,4,-10,-6,3,-8,3,-8,10,-8,-10,1,1,-3,2],[-5,-6,3,-1,10,-7,4,6,4,10,2,-5,6,-2,-8],[-5,-5,3,-7,-9,10,-9,-9,8,10,-7,8,9,9,4],[-4,-2,2,-9,2,9,-7,8,-3,9,-4,8,-8,5,8],[5,-10,3,4,2,3,8,10,-7,-2,-6,5,-8,3,-10],[-5,-3,6,9,-9,6,2,1,9,5,-6,-8,7,4,1],[8,-3,-3,6,-8,2,-6,-7,-8,-7,-10,6,-4,5,-2],[5,2,-3,-6,-6,-4,10,3,-1,6,4,2,5,2,5],[-6,-5,6,-5,7,-9,-8,-2,-8,1,-10,-9,4,8,2],[9,-2,8,2,-2,-3,-9,2,3,2,-2,-9,-5,-3,-9],[4,4,-4,-6,6,-3,-9,-1,4,10,7,8,-3,1,4],[2,9,6,10,2,-7,6,-9,-8,-2,9,-2,-7,10,2],[7,-5,-2,4,10,10,10,7,7,-10,-6,10,8,3,-5],[-3,1,-3,-7,-6,2,6,6,-1,9,-1,2,2,-1,7],[2,-10,-10,-7,-9,-5,1,-5,5,9,7,10,3,1,-9],[-10,10,3,3,8,2,-5,7,9,5,-7,-8,-4,-8,-5],[-3,7,4,-3,9,1,7,4,7,5,1,-4,8,2,-3],[5,1,-9,-4,-4,-6,-4,-4,-6,-4,-2,-2,4,8,-7],[2,-9,4,9,-2,10,-7,-2,5,-1,10,5,-4,3,-4],[3,2,10,9,3,10,1,10,-10,5,5,7,-7,-9,-2],[-9,-1,-6,9,8,-7,5,-8,5,-9,1,4,-4,-10,-1],[5,7,3,5,-7,1,-3,-3,-1,-1,1,-2,10,5,-8],[2,6,-9,1,10,9,3,8,-5,6,-9,7,-1,-9,9],[-3,-1,10,-10,6,-8,-1,-8,-7,-10,-8,10,-10,4,-9],[7,6,3,-9,-7,-4,9,6,-8,10,-7,-5,-6,10,-6],[-5,-1,10,8,-8,6,2,1,5,-4,-5,3,-10,7,-9],[6,-6,8,2,7,1,-6,-1,2,4,10,6,1,4,-5],[3,-8,8,-6,2,-2,7,7,-3,-3,-6,8,8,-8,-9],[5,4,-10,-1,-7,-10,-7,7,6,-4,8,-5,4,6,-4],[-6,-9,-4,5,7,-8,10,-5,-9,8,-3,-5,-5,-10,2],[-7,6,-9,5,6,7,-1,9,-4,9,6,-8,-10,2,5],[-7,4,-8,-4,8,-7,5,-10,3,7,-7,6,5,-10,10],[-3,-6,10,10,9,7,-1,-3,9,6,-10,8,-8,-3,-2],[-2,2,1,-3,8,-7,7,7,8,8,3,-6,-5,6,3],[-3,-2,-4,-6,2,-1,9,6,8,4,-7,-5,8,7,9],[1,-4,6,-3,-9,8,-3,-7,-5,-2,-2,-5,-2,-6,6],[-9,-7,9,-5,8,7,-1,1,1,5,-4,-2,4,2,5],[5,-7,10,-8,8,6,-9,8,-7,7,-10,-8,2,10,-4],[-3,2,-3,-8,7,4,1,-2,-5,-6,10,-3,-10,-2,10],[9,7,5,-2,-9,-9,4,-6,7,-5,4,-10,-6,4,3],[6,-9,-3,-10,-7,6,2,4,-4,1,-5,-5,-4,5,10],[1,-10,-6,-5,10,7,-8,3,9,4,-7,7,-1,-4,8],[-6,10,1,1,-6,8,4,-2,-7,-6,-3,7,8,2,8],[-8,10,2,-7,7,-5,-5,-10,-8,10,-7,9,-4,6,9]], dtype = "int16")#candidate|7791|(1430, 15)|const|int16
bop_7792 = relay.divide(bop_7782.astype('float32'), const_7791.astype('float32')) # shape=(1430, 15)
bop_7796 = relay.power(const_7751.astype('float32'), bop_7788.astype('float32')) # shape=(1430, 768)
func_7221_call = mod.get_global_var('func_7221')
func_7222_call = mutated_mod.get_global_var('func_7222')
call_7803 = relay.TupleGetItem(func_7221_call(), 0)
call_7804 = relay.TupleGetItem(func_7222_call(), 0)
func_7353_call = mod.get_global_var('func_7353')
func_7357_call = mutated_mod.get_global_var('func_7357')
const_7808 = relay.const([True,True,True,True,True,False,True,False,False,True,False,True,True,True,False], dtype = "bool")#candidate|7808|(15,)|const|bool
var_7809 = relay.var("var_7809", dtype = "bool", shape = (900,))#candidate|7809|(900,)|var|bool
call_7807 = func_7353_call(relay.reshape(const_7808.astype('bool'), [1, 15, 1]), relay.reshape(var_7809.astype('bool'), [10, 15, 6]), relay.reshape(var_7809.astype('bool'), [10, 15, 6]), )
call_7810 = func_7353_call(relay.reshape(const_7808.astype('bool'), [1, 15, 1]), relay.reshape(var_7809.astype('bool'), [10, 15, 6]), relay.reshape(var_7809.astype('bool'), [10, 15, 6]), )
uop_7812 = relay.sqrt(bop_7788.astype('float64')) # shape=(1430, 768)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
const_7818 = relay.const([1.948044,0.319392,-5.078577,5.734598,0.799473,6.407458,-8.049645,1.397192,1.826667,-1.549419,8.030854,2.854803,-5.047139,-3.116201,-3.349884,-1.099384,9.366718,3.208078,-2.866390,-2.740115,0.667304,7.135743,5.373841,-1.861622,4.863214,-7.931019,-3.796562,-6.255479,-1.531395,-7.810506,-4.707558,-0.525211,-1.044043,8.059684,-0.011282,-3.668694,5.368771,6.088987,-1.285167,1.704056,-9.676887,5.972181,-1.548878,-1.255233,-9.041418,1.496253,9.200348,-5.038405,1.008948,-5.673542,7.810112,-6.144683,-0.308060,9.244580,5.902187,-3.673030,-4.548240,-4.566381,8.943502,4.041257], dtype = "float32")#candidate|7818|(60,)|const|float32
call_7817 = func_4111_call(relay.reshape(const_7818.astype('float32'), [5, 4, 3]))
call_7819 = func_4111_call(relay.reshape(const_7818.astype('float32'), [5, 4, 3]))
func_3590_call = mod.get_global_var('func_3590')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_7823 = func_3590_call(relay.reshape(call_7744.astype('float32'), [15, 4, 9]))
call_7824 = func_3590_call(relay.reshape(call_7744.astype('float32'), [15, 4, 9]))
func_7397_call = mod.get_global_var('func_7397')
func_7400_call = mutated_mod.get_global_var('func_7400')
call_7826 = relay.TupleGetItem(func_7397_call(relay.reshape(call_7817.astype('float32'), [60,])), 0)
call_7827 = relay.TupleGetItem(func_7400_call(relay.reshape(call_7817.astype('float32'), [60,])), 0)
output = relay.Tuple([call_7739,call_7744,const_7745,var_7746,call_7750,call_7786,bop_7792,bop_7796,call_7803,call_7807,const_7808,var_7809,uop_7812,call_7817,const_7818,call_7823,call_7826,])
output2 = relay.Tuple([call_7740,call_7748,const_7745,var_7746,call_7752,call_7787,bop_7792,bop_7796,call_7804,call_7810,const_7808,var_7809,uop_7812,call_7819,const_7818,call_7824,call_7827,])
func_7829 = relay.Function([var_7746,var_7809,], output)
mod['func_7829'] = func_7829
mod = relay.transform.InferType()(mod)
mutated_mod['func_7829'] = func_7829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7829_call = mutated_mod.get_global_var('func_7829')
var_7831 = relay.var("var_7831", dtype = "float32", shape = (540,))#candidate|7831|(540,)|var|float32
var_7832 = relay.var("var_7832", dtype = "bool", shape = (900,))#candidate|7832|(900,)|var|bool
call_7830 = func_7829_call(var_7831,var_7832,)
output = call_7830
func_7833 = relay.Function([var_7831,var_7832,], output)
mutated_mod['func_7833'] = func_7833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7852 = relay.var("var_7852", dtype = "uint32", shape = (10, 3, 3))#candidate|7852|(10, 3, 3)|var|uint32
var_7853 = relay.var("var_7853", dtype = "uint32", shape = (10, 3, 3))#candidate|7853|(10, 3, 3)|var|uint32
bop_7854 = relay.right_shift(var_7852.astype('uint32'), relay.reshape(var_7853.astype('uint32'), relay.shape_of(var_7852))) # shape=(10, 3, 3)
uop_7858 = relay.sinh(bop_7854.astype('float64')) # shape=(10, 3, 3)
output = uop_7858
output2 = uop_7858
func_7874 = relay.Function([var_7852,var_7853,], output)
mod['func_7874'] = func_7874
mod = relay.transform.InferType()(mod)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mutated_mod.get_global_var('func_7874')
var_7876 = relay.var("var_7876", dtype = "uint32", shape = (10, 3, 3))#candidate|7876|(10, 3, 3)|var|uint32
var_7877 = relay.var("var_7877", dtype = "uint32", shape = (10, 3, 3))#candidate|7877|(10, 3, 3)|var|uint32
call_7875 = func_7874_call(var_7876,var_7877,)
output = call_7875
func_7878 = relay.Function([var_7876,var_7877,], output)
mutated_mod['func_7878'] = func_7878
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7891 = relay.const(True, dtype = "bool")#candidate|7891|()|const|bool
var_7892 = relay.var("var_7892", dtype = "bool", shape = (4, 1, 3))#candidate|7892|(4, 1, 3)|var|bool
bop_7893 = relay.logical_or(const_7891.astype('bool'), var_7892.astype('bool')) # shape=(4, 1, 3)
output = bop_7893
output2 = bop_7893
func_7902 = relay.Function([var_7892,], output)
mod['func_7902'] = func_7902
mod = relay.transform.InferType()(mod)
var_7903 = relay.var("var_7903", dtype = "bool", shape = (4, 1, 3))#candidate|7903|(4, 1, 3)|var|bool
output = func_7902(var_7903)
func_7904 = relay.Function([var_7903], output)
mutated_mod['func_7904'] = func_7904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7480_call = mod.get_global_var('func_7480')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_7918 = func_7480_call()
call_7919 = func_7480_call()
func_6964_call = mod.get_global_var('func_6964')
func_6966_call = mutated_mod.get_global_var('func_6966')
const_7921 = relay.const([-6.716859,-6.664116,3.351535,4.139044,-6.259543,8.956543,-7.128774,-8.960337,1.959352,3.599629,2.055548,-6.633122,7.121047,6.640407,-1.442541,2.348509,-1.749537,2.820508,4.522221,5.361964,-7.622487,-1.526441,-8.458723,-2.445033,-7.172325,-2.707283,4.487261,8.632251,-8.592453,4.387191,-0.087751,4.119370,-0.324994,-1.278836,4.611603,7.024424,3.741601,0.015674,6.110466,4.316177,8.842793,6.118482,-1.117882,8.916892,3.092312,-3.839452,2.230951,-9.492582,-0.207942,7.430845,-6.069001,6.023175,2.244567,-3.246739,-3.842157,-9.482809,2.146510,-7.756214,-1.482271,-5.256221,0.798258,4.023017,1.179417,-4.081270,5.015985,4.441619,0.799784,1.313680,2.588359,7.487762,2.706175,-0.651450,2.232726,4.988131,-4.495129,-9.680930,-8.084311,1.759953,8.359016,2.431143,9.047232,3.686310,8.103422,1.344114,-5.332817,-9.261089,2.271772,-7.669112,-8.526870,-3.726644,8.396861,-7.916627,3.544387,0.737177,7.921024,5.948825,-2.895634,6.539678,0.976486,-8.533898,9.437583,6.705731,8.407510,-1.898847,5.655074,1.557918,9.074968,-2.952200,4.008637,5.895341,-0.303021,4.376082,3.272358,-7.691232,-7.321035,-7.080726,-5.403225,-9.262807,6.907896,0.817513,7.826105,-2.447522,-3.495641,9.314825,-7.404637,-0.209719,1.411370,4.469985,5.197248,9.863636,2.303155,6.367643,-5.855646,8.237562,-7.424060,-0.822863,7.812873,-3.190402,-9.777743,6.644368,4.157936,4.267082,-4.143461,6.520225,6.866670,4.659257,0.163164,-2.172742,-3.104124,8.636668,-6.397139,-1.684805,-5.757922,2.727363,6.274330,-5.205858,-5.209681,8.066919,-5.373965,-6.996980,-6.232803,-8.843345,6.931337,0.943636,8.672381,-7.081790,-0.166256,4.834856,-2.547826,8.130821,-0.346625,-7.609176,-5.197183,9.350389,-7.010204,-6.949367,1.138281,-1.611188,6.291780,-0.314408,5.033005,-9.834357,1.856663,-7.708461,-4.451777,7.369901,2.497211,7.236515,-0.781691,6.607765,5.945933,8.017748,-0.685701,3.921495,5.682023,-8.684098,-6.880677,-9.391485,4.624041,4.429158,6.083911,-1.680214,-5.458465,-6.791554,-6.032263,-5.757281,0.575522,-6.606283,9.542648,8.038603,9.230702,8.261652,-6.474394,6.582210,2.436585,7.828823,-2.694963,2.433897,2.153336,9.228891,9.090301,4.685765,5.250711,1.368537,0.845068,5.666892,-7.584555,3.837195,-3.002554,-0.127108,5.687710,-7.231643,3.427893,4.816207,2.992130,-9.000230,-1.068116,3.915213,5.732073,-1.212352,0.362142,3.543029,3.921884,-2.892224,-8.161166,6.732792,-0.554474,1.352737,4.728285,4.915130,2.456476,-7.864420,0.259054,5.865101,-6.647122,-7.217639,5.481271,2.839194,-2.339575,-4.781268,8.507912,-1.513496,-6.477774,4.570367,-4.769966,-8.806151,6.134155,5.036371,9.199861,3.180908,9.401459,7.508664,-4.083166,9.456957,1.774222,5.321590,8.896475,-6.435136,8.841315,0.264861,-6.684159,7.455692,-8.871121,2.155187,1.441055,9.288509,-4.831274,5.941909,-5.374952,5.203652,-5.119137,-7.768848,-1.295050,9.257873,-6.875325,-1.396600,6.165817,-6.463500,-0.349723,8.621176,0.702097,-1.640526,7.737985,-9.268657,-3.906991,5.172446,-1.510283,-9.790232,1.934852,-0.869060,1.957218,-4.842558,-2.108175,-9.992556,-5.819350,-5.773122,3.147681,8.265337,-7.012072,-2.315954,1.881050,6.230090,9.086836,2.362669,-2.810260,-7.210524,-6.363246,-3.906575,-7.616067,4.333819,-0.867433,-6.189887,2.219540,-7.170622,1.229288,-3.720105,1.052102,-9.074345,-8.814919,1.455156,7.102579,-5.995670,-8.381552,-9.872574,5.146741,-0.867776,9.937975,4.245695,-1.430691,-0.468626,-6.492451,9.427865,-2.121649,-9.142204,5.292732,8.020233,-6.531327,-6.747395,-9.625869,5.110298,-0.989926,6.203731,-8.051808,-0.636419,4.812328,-6.500640,-6.502656,6.781494,1.275891,3.516507,5.678464,5.142936,-1.950394,-7.203325,-6.186912,-2.548324,9.724581,-9.612165,1.054637,9.754076,0.465192,-5.853095,3.716223,-7.512595,-3.773171,9.757570,3.724037,4.072704,-6.454686,-9.226962,0.432644,6.631034,0.147354,-3.739613,4.996389,6.302634,4.775415,-5.652163,3.098523,1.698348,-5.679905,8.689707,4.135133,8.179199,-4.868326,-2.203664,-4.959989,4.329637,9.227616,-7.299871,4.897333,9.123956,-0.696935,4.446648,-6.804690,6.289448,3.120129,-7.761148,1.289375,-5.821021,-8.442628,6.615131,-8.458423,-4.447223,-2.749727,-3.038158,-7.198971,-1.228286,6.270792,-1.460205,-1.979243,-1.930448,-3.063289,-4.655068,-7.978440,3.872960,9.330903,-7.625941,6.116737,1.730442,7.256704,9.540291,1.955720,-7.955706,1.841356,-9.170061,-3.684964,4.435692,-7.520265,-9.712169,-6.326527,6.818306,-9.377038,-1.352170,-2.838720,1.405229,7.760062,8.095106,-4.915463,-3.372871,-3.918821,5.388148,8.525484,7.145805,-3.664391,0.964503,1.657413,-6.180643,-7.574845,-2.174826,-2.120979,-3.040484,-5.371861,-0.287203,-3.606083,1.957694,-0.029003,0.695708,9.878951,2.761535,1.230311,5.679616,8.947560,-0.663491,-8.345934,-8.348137,7.737531,-2.953312,-4.095782,-9.672937,1.612657,1.029094,7.999633,-4.542680,2.217704,-1.300302,-6.077565,9.993790,-3.476651,2.361824,-7.804176,7.848023,-2.381044,-2.014225,1.148745,8.970406,-5.460128,-6.514007,-8.813722,-3.888836,-9.384709,-4.705055,-1.933189,-5.637230,1.124244,7.792156,1.872585,1.875154,3.202143,-8.330478,2.221493,4.319671,-4.327237,4.046587,-3.409715,-6.709812,-4.367193,9.137828,-1.713338,8.013082,2.343617,-3.106429,-6.186102,3.627234,1.303234,-3.709981,7.122179,-3.687133,7.269284,-4.391650,1.036719,-4.229588,6.693340,1.224346,5.303099,-6.479639,0.167208,1.949489,-7.635209,9.281548,-1.081367,-7.258309,-0.384841,5.788198,-9.481270,7.569373,-0.528985,-1.419414,-5.992049,9.992711], dtype = "float32")#candidate|7921|(560,)|const|float32
call_7920 = func_6964_call(relay.reshape(const_7921.astype('float32'), [5, 7, 16]))
call_7922 = func_6964_call(relay.reshape(const_7921.astype('float32'), [5, 7, 16]))
func_7508_call = mod.get_global_var('func_7508')
func_7510_call = mutated_mod.get_global_var('func_7510')
var_7928 = relay.var("var_7928", dtype = "float64", shape = (1764,))#candidate|7928|(1764,)|var|float64
call_7927 = relay.TupleGetItem(func_7508_call(relay.reshape(var_7928.astype('float64'), [14, 9, 14])), 0)
call_7929 = relay.TupleGetItem(func_7510_call(relay.reshape(var_7928.astype('float64'), [14, 9, 14])), 0)
var_7931 = relay.var("var_7931", dtype = "float32", shape = (5, 7, 16))#candidate|7931|(5, 7, 16)|var|float32
bop_7932 = relay.bitwise_xor(call_7920.astype('int64'), relay.reshape(var_7931.astype('int64'), relay.shape_of(call_7920))) # shape=(5, 7, 16)
bop_7935 = relay.bitwise_xor(call_7922.astype('int64'), relay.reshape(var_7931.astype('int64'), relay.shape_of(call_7922))) # shape=(5, 7, 16)
uop_7942 = relay.tan(call_7927.astype('float64')) # shape=(14, 9, 14)
uop_7944 = relay.tan(call_7929.astype('float64')) # shape=(14, 9, 14)
func_7829_call = mod.get_global_var('func_7829')
func_7833_call = mutated_mod.get_global_var('func_7833')
const_7949 = relay.const([-6.154317,3.713245,2.422122,8.221953,6.534773,1.270287,1.663917,-5.086432,4.204279,2.168585,-4.428493,3.312383,9.137965,-6.483123,-9.518191,-4.702554,3.360066,6.827001,6.043540,-7.876585,2.548810,5.659568,2.723322,9.527272,7.390986,-1.482291,2.227482,-6.262562,-1.695615,-7.027489,-1.239427,-7.940960,-6.450895,-9.761520,-7.917647,-8.443796,8.203849,-9.429698,-8.707957,1.967783,-6.595547,6.099766,4.725326,3.374266,-3.384249,-5.386602,-4.847223,-4.400949,-2.528112,4.298895,4.903014,-0.826683,1.311578,-4.958323,3.533305,1.282106,1.986052,7.816294,8.827231,6.395313,-3.274386,-4.716578,-9.143809,7.261445,-6.668814,6.639236,8.258388,-1.817305,5.582285,-5.754126,-1.048201,-9.552941,-9.967780,-4.709037,-5.878998,8.665251,6.844980,-7.247266,-4.998917,-0.559835,-0.702275,7.700264,-1.636393,-4.176386,-6.342254,-2.084680,7.321379,-8.245335,-3.231171,3.866286,-9.247170,-3.134335,-8.185374,9.212823,-9.947177,5.980160,-7.258293,-4.776708,-7.936917,-2.095630,3.599565,5.117941,1.873183,-4.290835,-1.329634,3.252129,-7.594005,-7.974948,-3.873433,-6.366954,-2.795277,5.426998,-8.604947,3.976023,-8.682972,6.573828,-8.749893,-3.918575,-0.978917,6.780620,-0.342833,-6.182203,-0.573373,-9.584649,-4.110909,-2.167099,-4.656335,6.283748,0.188522,-2.012981,-9.178971,-4.284793,-2.816792,8.339951,1.306636,-4.768025,9.046063,1.206042,6.771139,-3.784281,-8.723291,-8.510858,-9.715843,6.863233,-4.580719,2.390755,4.537991,7.638620,4.310439,-2.934165,-8.896851,-9.608217,9.276119,2.653575,5.497672,0.135636,-0.455430,0.744887,5.018462,5.808785,-5.484355,5.218329,-7.190697,8.520913,4.427217,-9.117323,-2.706825,9.307593,-5.649470,6.407390,-0.624357,3.069449,-5.628652,3.343633,4.718750,-3.978309,7.238479,9.208008,-9.705476,9.203084,5.943647,6.986511,8.004026,4.830874,-2.698049,6.545257,2.307591,3.381459,5.582608,-0.465705,0.142751,-7.284430,-6.748562,-3.529060,8.746079,-1.145038,-0.303693,-6.799034,-5.473824,3.706075,-9.208578,9.640925,-6.184392,-6.467063,2.661987,-3.112263,8.173399,0.581879,1.044435,-0.312695,-9.352281,3.097950,3.901681,-0.687025,0.119362,-7.459899,-7.739756,-2.824138,-5.376427,5.510395,6.730353,1.905477,-6.677448,-3.328477,-6.674303,-5.360534,5.449939,7.083312,-7.532919,-1.838690,-0.711295,5.532276,-7.259790,8.762691,-5.979014,-7.222179,-6.954165,-8.981064,-5.359015,-6.024490,-5.319807,7.431313,-5.115948,-4.729742,-1.092681,1.216736,7.979097,-5.462479,-9.483971,-0.113748,-8.609647,-0.536641,-7.975105,4.059599,5.355244,-4.159171,0.266414,2.797079,-6.655194,-0.134906,-2.415492,7.549367,-4.507549,1.826699,7.033400,-8.160330,-7.292086,7.392973,9.113031,1.111372,-1.563037,-6.716008,-8.394942,-6.301238,3.923796,4.558934,-2.314262,0.411417,-6.424331,8.695973,1.123611,9.070430,-6.105584,-6.996323,-1.286237,-3.809764,6.737255,-3.280099,-5.948768,9.256629,1.405368,7.011483,4.262485,-5.108569,6.942911,-0.940938,4.397405,-5.659633,-1.391041,-3.805314,-0.616663,0.003902,8.232566,0.889522,-7.814926,-5.189729,-2.105784,2.781859,-9.079925,3.715984,5.688727,-0.178746,-9.780632,-3.165924,-6.515640,9.811104,7.003086,-1.559883,-7.333301,-9.205664,-9.360371,-3.603534,-4.625634,5.121751,4.211360,-8.734187,-4.438728,-9.992152,7.946967,2.089573,8.665717,6.668161,9.347746,7.862344,5.849445,8.783041,-9.881597,-7.540487,0.944817,-9.528458,1.312016,-7.764826,6.355825,-8.093513,5.886840,-1.639520,-8.753898,-8.103980,-4.294482,5.693110,9.287290,8.266038,-9.367276,5.164880,3.843685,-0.818987,-8.508384,-9.936152,0.167143,0.808402,-8.259419,8.603861,5.771575,2.985413,-7.768341,2.601316,2.099507,7.148291,9.287397,8.978157,-9.359776,2.713600,-7.404447,7.480079,-5.241910,1.740968,-9.469177,6.957727,-3.098730,1.118586,0.646990,-7.074200,-5.705713,-0.419382,-4.326522,-1.386456,5.859996,-4.268797,-3.642008,-1.754495,-4.462363,9.731184,-9.669326,-4.720684,5.766353,7.074924,-3.378966,6.824988,-5.697627,-6.923516,-6.926617,8.233624,-4.240256,3.513246,3.787601,5.911163,1.692737,1.485965,9.766750,-7.209659,5.281713,9.279389,-3.952069,-6.359451,-6.302097,1.798206,-5.148923,9.364442,-3.110350,9.119374,-1.015930,3.972674,3.309324,3.893456,-2.732391,-9.240708,-7.269190,-6.093172,-0.744043,7.267830,5.685404,5.247675,0.344792,7.218595,-3.699027,-5.537988,7.617202,-1.704568,-4.633377,-8.098066,-6.327280,-5.635155,-6.669992,7.207127,-5.809360,-8.627103,9.519718,5.791522,-7.739212,0.877261,2.784254,4.052840,7.144948,5.756965,0.076186,3.115746,-8.460270,-1.602875,-8.918053,-7.534559,-4.833917,-7.745526,-4.018980,6.135248,-2.752938,6.890439,-8.667184,1.457746,2.245965,7.052483,-1.795912,-3.432445,-4.095508,8.126836,-2.172602,7.781257,-8.148033,-2.056326,6.418106,3.023275,-8.682579,8.392968,4.821081,3.762068,-0.453970,-7.213827,9.973754,7.613548,1.575450,-5.371157,-3.614912,4.803618,8.233478,-7.495027,7.439435,6.864829,-6.455522,-3.450888,4.909629,-9.018051,-8.270534,-6.812732,3.287967,5.262165,-2.276977,-2.985150,-5.182055,-8.786722,-9.087556,-3.393093,-9.456418,4.647184,4.567040,2.078719,1.240350,-8.796989,-1.952182,5.676212,-9.701997,-0.461426,-6.998545,-0.754537,-5.615108,7.051935,3.965246,-9.841691,5.468734,-4.081535,3.563524,0.561285,-8.299424,-1.911611,-9.638303,-0.239572,2.272019,3.174683,-9.084697,-6.637290,-7.385840,0.801732], dtype = "float32")#candidate|7949|(540,)|const|float32
const_7950 = relay.const([[False,True,True,True,False,True,True,True,True,False],[True,True,False,False,True,True,True,True,False,False],[False,False,False,False,True,True,False,True,False,True],[True,False,False,False,False,False,False,True,True,True],[True,False,False,True,True,True,False,False,False,True],[False,False,True,True,False,False,False,False,True,False],[True,False,True,True,True,True,True,True,False,True],[False,True,True,False,False,False,True,False,False,True],[True,True,True,False,False,True,False,False,False,True],[True,True,False,False,True,True,True,False,False,True],[True,False,False,True,False,False,True,True,False,False],[False,False,True,True,False,True,False,True,True,False],[False,False,False,False,False,True,True,True,True,True],[False,True,True,False,False,True,False,True,False,True],[True,False,True,False,True,True,True,False,False,True],[False,True,True,False,True,False,True,True,True,True],[False,False,False,False,False,False,True,True,True,False],[False,True,False,True,True,False,False,True,False,True],[False,False,False,True,True,True,True,False,False,True],[True,True,True,True,True,True,True,False,False,True],[False,False,False,True,True,True,True,False,False,True],[True,False,True,True,False,False,False,True,True,True],[False,False,False,True,False,True,True,True,True,True],[False,False,False,False,True,True,False,False,True,False],[True,False,True,False,True,True,True,False,False,False],[True,True,False,True,False,False,False,True,False,True],[True,False,True,True,True,False,False,True,False,False],[True,True,False,False,False,False,True,True,False,False],[True,True,True,True,False,True,False,False,True,False],[True,False,False,True,True,True,True,True,False,False],[True,False,True,False,False,True,False,False,False,False],[False,True,True,True,True,True,False,True,True,True],[True,False,True,True,True,False,True,True,False,True],[True,True,True,False,True,False,False,True,False,False],[True,False,False,False,True,True,True,True,False,False],[True,True,True,False,False,False,True,True,True,True],[True,False,False,False,True,False,False,True,True,False],[True,True,False,True,True,True,False,True,True,False],[True,False,True,False,False,False,True,True,True,False],[False,False,True,True,True,False,True,True,True,False],[False,False,True,False,False,True,False,False,False,True],[True,True,True,False,False,True,False,True,True,False],[True,True,False,False,False,True,False,True,True,True],[False,True,False,True,True,False,False,True,False,False],[False,True,False,True,False,False,True,False,True,False],[False,False,True,True,True,False,False,True,True,True],[True,True,False,True,True,False,True,True,True,True],[False,False,True,False,True,True,False,False,True,True],[False,False,True,False,True,False,False,True,False,True],[True,True,True,True,False,False,True,True,True,True],[False,True,True,True,True,False,False,True,True,False],[False,True,False,False,True,True,False,True,False,False],[True,True,True,False,True,True,False,False,False,True],[True,True,True,False,False,False,True,True,False,False],[True,False,True,True,False,True,False,True,False,False],[True,True,False,True,True,True,False,True,True,True],[True,True,False,False,True,False,False,False,True,False],[False,False,True,False,True,True,True,True,False,True],[False,False,True,False,True,False,True,True,False,False],[False,True,True,False,True,True,True,True,True,False],[False,False,True,True,False,False,False,True,False,True],[False,False,True,True,False,False,False,True,True,False],[True,False,True,True,False,False,False,True,True,True],[False,True,True,True,False,True,True,True,False,True],[False,True,True,True,False,True,True,False,False,False],[False,False,False,True,True,True,True,True,False,True],[False,False,False,False,True,True,True,True,False,False],[False,False,True,False,True,True,True,False,False,False],[False,False,False,True,False,True,False,True,False,False],[False,False,True,True,False,False,False,False,True,False],[False,False,False,True,False,True,False,True,True,False],[True,True,True,True,False,True,False,False,False,False],[True,True,True,False,False,True,False,False,True,False],[False,True,False,False,False,False,True,True,True,False],[True,True,True,False,False,False,True,True,False,False],[True,True,True,False,True,True,False,False,True,True],[False,True,True,False,True,True,False,False,False,True],[False,False,False,True,False,True,True,False,False,False],[False,True,True,True,False,True,False,False,True,True],[True,True,False,False,True,True,False,True,True,False],[False,True,False,True,False,True,False,False,True,False],[False,True,True,True,False,True,False,False,True,True],[True,True,False,True,True,True,False,True,False,True],[False,True,False,False,False,False,True,False,False,False],[False,False,True,True,False,True,True,False,True,False],[False,False,True,False,True,True,False,True,False,False],[False,False,True,False,True,True,True,False,True,True],[True,True,False,False,True,False,False,False,False,True],[False,False,False,False,True,True,True,True,True,True],[True,True,False,True,False,True,False,True,True,False]], dtype = "bool")#candidate|7950|(90, 10)|const|bool
call_7948 = relay.TupleGetItem(func_7829_call(relay.reshape(const_7949.astype('float32'), [540,]), relay.reshape(const_7950.astype('bool'), [900,]), ), 3)
call_7951 = relay.TupleGetItem(func_7833_call(relay.reshape(const_7949.astype('float32'), [540,]), relay.reshape(const_7950.astype('bool'), [900,]), ), 3)
uop_7955 = relay.erf(uop_7942.astype('float32')) # shape=(14, 9, 14)
uop_7957 = relay.erf(uop_7944.astype('float32')) # shape=(14, 9, 14)
func_3082_call = mod.get_global_var('func_3082')
func_3088_call = mutated_mod.get_global_var('func_3088')
const_7959 = relay.const([10,3,5,-7,-1,-3,-1,-7,-2,-9,-4,5,-7,9,8,-6,-1,-10,-10,1,-9,10,-3,-3,5,-4,-6,10,-3,5,-7,2,2,4,10,5,-10,-3,5,7,-7,10,-10,-9,7,4,7,-4,9,10,5,-1,4,9,-10,-9,7,-2,-8,-10,7,3,-2,-2,4,10,-9,4,5,-3,10,-1,1,-8,6,-8,-3,-6,5,-6,10,-8,-7,10,-4,6,-5,4,2,-9,-9,-3,9,7,-7,-2,-9,6,3,-9,-1,2,3,3,6,-6,-10,-7,-8,2,-7,4,7,5,10,-8,10,6,-5,-9,-5,-8,-3,4,1,-1,-4,-6,7,-10,7,7,-7,-9,3,5,-2,-3,-10,-10,-4,-9,6,-9,9,1,9,-3,2,-1,1,-5,3,-10,6,3,-1,-10,2,-1,3,8,9,-8,-3,-7,7,7,-9,-2,-7,7,-9,-4,-8,-3,6,-3,-1,7,2,-8,6,-8,2,-10,-6,6,3,8,6,4,-3,8,-8,7,1,-8,1,-9,-9,-4,5,-2,-2,4,6,-10,5,-2,-5,2,6,-10,-9,4,10,-2,-9,-7,-9,-1,-1,3,-10,-8,3,10,3,10,3,-9,-1,-1,-9,5,1,2,-8,-7,-9,-5,6,-4,9,2,-8,-6,6,-1,-6,-3,-2,-1,2,-1,5,-3,-1,-2,3,-2,-7,-1,-6,7,9,-10,-7,-3,9,9,-10,-4,3,1,10,-8,2,9,2,-1,-8,-5,-2,-5,2,4,8,3,6,9,7,-6,-7,-8,-10,3,8,2,-6,-2,1,-2,-5,-2,9,10,9,7,-10,-8,-2,8,-8,-1,-7,7,-8,-9,-4,-8,2,-8,-4,8,10,2,-4,-3,3,9,6,10,-4,8,9,10,-4,2,-5,-9,6,-8,-6,-5,4,8,1,-3,6,3,-9,-7,-3,-10,9,7,3,-6,-8,-7,-6,-2,3,-3,1,2,-1,1,-8,-6,10,-2,9,-3,2,9,3,6,1,2,-7,9,5,-4,1,-10,1,6,-4,9,9,4,1,7,-9,-5,-7,-4,6,-3,-6,-2,7,-9,6,-4,5,-6,-10,-2,6,-7,2,3,-9,-9,-1,6,-8,6,-2,-9,-2,5,10,1,7,-8,9,-8,-8,-5,-5,-7,-5,-7,7,6,-2,9,10,-7,10,-7,7,-9,-2,5,7,-10,-7,1,-4,-3,-10,8,6,9,3,5,1,6,-2,1,-5,4,-10,5,-4,10,-3,-5,6,-5,2,-10,5,4,-6,-7,-8,2,7,-3,10,-6,4,1,9,-10,7,-2,5,-10,-5,-4,1,4,-5,-1,-2,7,-2,7,-6,2,8,-6,2,-6,4,-1,-5,-4,-1,7,-2,1,-7,-5,7,4,1,-10,5,-1,5,-5,8,5,4,3,8,-10,-2,8,2,7,-4,-8,1,2,-3,8,-6,-1,5,-6,7,10,5,-9,1,-2,-2,-6,10,-1,-4,-6,-2,-1,-10,3,-7,7,2,8,-3,-10,9,-8,-3,3,9,-6,-6,-9,-5,4,-7,3,8,-5,-2,-3,-3,1,3,-1,-5,3,-5,-8,7,4,2,3,9,-10,-5,3,8,-3,-1,-1,-3,-10,9,3,-1,-9,-6,-4,2,-7,6,4,3,-5,2,-3,-2,-5,10,-8,7,-3,-10,8,-10,9,-3,10,-10,2,-2,-9,7,-7,6,-7,1,-3,-8,2,-4,-4,2,6,-10,6,-3,-6,2,7,-7,8,4,-10,2,10,1,-6,-9,-6,1,1,-8,-6,10,-10,-10,6,10,6,-6,-10,10,9,-8,-8,-9,-7,-6,1,8,3,-8,2,5,-3,-6,-9,1,-6,4,-10,-3,-2,-9,4,-2,5,-8,-1,-5,-5,7,7,-1,-9,-9,8,3,2,10,-1,-5,-4,3,7,2,-9,5,9,1,10,4,-1,-7,10,10,-2,8,-9,3,-9,7,4,-5,5,8,5,3,-10,10,-8,1,-5,-7,-10,-10,5,-6,-7,-3,-7,8,-4,8,1,-6,-6,8,8,6,6,-4,3,-2,-10,-3,-6,7,-3,-6,2,-3,2,2,5,-5,-5,-3,-10,-7,10,7,4,-7,-8,-1,-8,-1,-4,-8,10,-1,6,-1,9,-7,1,-6,-8,4,-10,8,-9,-6,-1,-3,2,6,-10,-2,-9,7,-5,-7,-7,-10,-3,-3,-7,-7,-5,-1,-6,5,-8,-4,-8,-6,-5,-5,-3,-9,3,-1,3,3,8,-7,3,-2,-8,5,-1,-8,-6,-1,8,-7,4,-5,6,6,-2,-10,-6,-3,1,2,-10,8,-7,-7,9,-8,-10,9,-1,-9,10,5,4,-2,-7,-4,-7,7,1,1,-7,-2,-1,2], dtype = "uint64")#candidate|7959|(891,)|const|uint64
const_7960 = relay.const([7.491832,7.156169,-3.936041,5.678159,-7.091243,-0.102316,1.080463,0.197298,-7.651282,-5.115987,-8.532295,-1.888248,-3.863094,9.858010,-4.752464,-6.212810,-2.251836,-3.751841,-9.373558,-9.541063,-7.951225,6.952120,-7.437281,-5.997292,-0.571044,1.250164,0.357927,-3.283490,-2.399081,4.890766,-1.688776,-9.899140,7.883764,9.613300,8.355475,-2.251964,9.572890,3.799128,-7.483542,-5.841565,-0.512693,-8.099124,9.870043,0.095003,-7.667000,-0.562514,-7.931824,3.707976,9.266165,-8.556316,1.340790,9.156826,-4.736552,-8.487473,-5.448930,6.556170,-3.793746,-9.752222,4.278636,-4.003586,2.856273,-0.191630,6.573268,0.211304,-4.508782,3.055763,6.680021,-0.212117,8.756866,-3.208715,-2.350924,-6.473404,4.955041,-7.249213,-4.305698,0.846031,-7.398661,-9.286725,3.311035,-5.287526,3.202024,2.833432,-4.084040,-5.957858,-0.032728,3.473304,5.763077,-4.595257,9.729930,0.327505,7.397826,9.535397,-4.427932,9.297802,9.386882,6.633502,-3.380920,9.772888,2.166204,-3.923312,5.137831,-1.940137,-8.230331,0.878193,4.514866,0.908992,0.774740,-4.100362,-5.168827,-7.444536,-9.205535,-0.920580,-6.747219,3.285733,-9.665762,-7.387557,-0.621060,-4.205140,2.856322,-3.456668,-3.083419,3.376238,-0.777726,6.079900,5.203375,-2.600826,5.195975,-3.194444,4.809322,3.371076,-0.040877,7.344380,-0.578057,0.174751,0.194657,3.693712,6.463142,-7.966862,-8.945688,1.778591,7.086995,8.640791,-2.421417,-1.504007,-5.509618,0.672769,1.488334,6.649164,-3.744203,6.810165,-2.633593,1.581907,6.234293,2.476673,9.969072,-1.060994,-4.820500,-0.078638,1.957608,-2.682745,-2.728098,-6.672308,-4.794963,-1.209543,-3.822277,8.640431,-9.122265,9.378892,-7.879802,6.070042,1.853263,-6.918325,-0.430778,-8.386539,4.399534,8.964431,6.027522,-4.141608,6.473990,-1.954936,-8.251513,-7.392031,4.335371,5.024688,-8.781350,3.870192,-9.738888,5.343672,-0.664044,-8.844701,8.260029,-6.133775,-5.196696,-5.869857,8.381821,8.403492,-1.784671,-7.141090,7.647701,3.157260,-4.210696,0.440842,-1.231954,4.825164,2.171123,0.203061,6.918601,7.329542,-5.988640,3.324298,-7.317112,0.050582,-3.884128,-9.956690,9.577640,3.757134,8.665840,-0.850878,-2.480706,-2.629875,-0.490045,-2.556206,9.475441,3.617635,6.518771,7.001096,5.977713,8.773021,-0.175053,-6.352894,1.476130,-9.870358,-2.845548,2.116834,-9.707645,-3.682053,1.542914,4.638555,-6.900412,-1.854250,6.880131,-6.676453,-1.519217,4.800691,4.090033,7.084555,8.531987,1.521857,-6.457261,-8.926313,8.329357,6.845361,5.818789,4.034660,1.195465,-7.311324,-4.811090,-1.768084,-0.578216,6.899204,3.556302,-3.729909,-1.725114,-8.573583,-2.680672,-0.966435,-4.081139,-3.081079,-1.231746,1.667478,0.850025,-0.961864,-1.024977,1.562865,-9.813033,1.769334,6.902799,4.540166,9.972646,-5.613281,-9.419804,7.615118,2.543582,4.284574,-1.494421,3.381545,-6.164020,6.896126,-4.653829,0.917953,5.763475,-9.673179,-8.219961,9.087575,-9.941694,-4.669415,-0.492891,9.662074,7.495964,6.598905,4.689791,-1.938779,-1.279996,6.244701,-7.786302,-4.634701,3.985798,-2.224224,-3.767322,8.374196,3.627063,3.208641,-2.234195,7.088320,2.238398,8.326619,-1.335072,-3.386036,2.266338,1.536643,-6.740710,4.466266,0.809770,-2.826761,5.666219,-5.557821,3.525284,-6.548230,-5.904236,7.072607,-0.720576,-9.872695,-9.062244,-8.545939,-4.177319,5.134446,3.938020,-4.067978,-9.945652,-5.195425,1.599527,6.278555,-9.761256,-4.281652,6.319361,4.603623,-9.503141,-3.867003,-1.381938,-1.723234,8.009153,-9.820525,-1.559097,8.061044,9.471668,4.281042,-5.384422,1.238945,-4.629407,3.116212,7.466268,-0.907346,-4.149503,3.582761,0.389575,-2.118517,0.929103,9.134278,1.820297,2.599258,-0.191309,1.092167,3.893303,1.422077,-5.540874,2.034129,6.999076,5.081988,1.824875,1.952552,-2.690385,9.096998,-6.229339,-6.006143,0.310089,-6.557593,-4.183306,-4.717729,-3.221678,6.215763,-6.030463,-6.378174,-0.673209,9.585946,-0.407866,-7.233807,-3.031558,8.827281,-5.721141,2.619804,7.041074,1.103381,5.122747,5.222965,-6.998598,8.460336,3.000257,-7.201489,2.984573,4.955642,-8.866192,4.478822,6.796562,4.140917,-5.786927,1.732767,-3.119523,0.543983,-3.958607,9.671163,7.494213,7.920850,1.586984,2.842296,-8.198902,-5.481146,-5.910703,4.042653,-6.251619,-5.477510,6.355232,-5.751270,-0.951730,-7.528739,-3.874737,1.190564,-4.125853,3.644864,5.407760,-2.050314,7.578815,-1.414115,-3.002803,-5.542571,3.797607,8.250818,-2.266437,-7.648745,2.536605,-5.469655,1.528427,-9.252750,-0.077694,4.294181,-6.053338,7.557135,-2.111151,1.563766,-9.582091,-6.780324,-1.680590,-1.058553,3.977414,-6.048076,7.398246,3.284834,-1.077311,-3.603412,7.791246,-5.797914,-7.029683,5.298929,-1.333361,6.491322,-0.558439,-6.068654,-7.542382,-0.208185,0.105873,-8.355218,8.239632,0.969632,5.480544,-8.739555,5.981879,-2.982961,1.683086,0.039177,3.481299,-3.441623,-6.115820,-7.701527,8.442654,-7.082043,6.017569,-2.393037,-4.305415,8.916965,4.794941,-5.253795,-2.705321,-5.395072,1.352325,3.653288,1.370853,-3.060171,-1.253828,-0.178441,8.451106,3.277009,1.151313,6.351946,5.941962,-4.873645,2.187448,-6.919615,2.899282,0.789619,-2.133111,4.606665,-1.276674,4.733515,6.856073,-0.350954,-5.602955,8.280927,7.102718,-6.107887,1.154833,-0.389019,4.712283,3.642512,0.982302,9.905625,5.143643,9.944330,1.570991,0.373304,-9.593528,7.827332,4.273554,0.726605,-1.237894,9.816427,-5.732682,-9.446403,-4.696355,-0.892578,-4.483278,2.506422,6.480826,7.336670,8.041589,2.797509,-1.819394,7.297213,6.562397,2.071347,-3.183805,-1.354441,-6.031949,-9.486151,-7.564007,-8.298248,0.039243,-0.495962,9.899529,2.995894,-7.240936,-0.847776,3.537214,-8.032856,-7.458362,-0.792334,8.735783,5.866535,2.083941,-1.407631,9.830943,-6.740192,8.950892,3.249052,-2.776163,1.927109,1.157148,-1.830987,1.720832,3.103293,-0.428631,-3.948770,-8.442084,0.309962,-3.387917,6.131745,-4.554903,-3.548665,2.305269,-6.205900,-2.539242,-6.938413,-6.135349,-4.285321,-5.038251,1.194267,-7.789245,-8.431822,-0.610703,-9.660546,0.234907,-7.296608,-8.804460,1.815324,-9.715432,7.562547,-2.298907,-4.288248,-6.789776,-1.683461,-6.495769,4.746327,-2.691768,-1.459597,0.669049,9.980818,-3.652911,6.212008,-6.559414,-0.890116,-2.851485,6.162067,-2.787888,7.837046,-6.124237,6.892256,-5.370666,4.242597,-1.749581,9.921835,3.566779,-6.522733,-8.094407,-1.217820,7.152236,1.441152,-8.324259,-4.911532,-9.836163,-0.656755,8.799995,1.943152,-3.100685,-6.893596,-2.918155,3.266394,-3.584014,-3.825014,9.775038,6.171555,6.720580,-5.578741,3.948489,-1.133984,6.031175,6.239262,-2.518618,-9.882938,3.936048,1.953205,-7.856228,4.280604,1.906689,0.666131,-3.268458,6.015109,1.767693,-0.070861,-5.746291,-9.941670,0.636332,-3.494112,-4.376988,-6.429391,-5.866898,-3.207970,-3.092720,4.974035,3.513102,-5.477215,-4.294879,0.217621,-8.292113,-3.596386,8.766555,-7.912386,-9.065987,-6.803956,1.428045,5.067769,4.310955,-0.336189,0.899261,6.601872,-6.415085,6.381697,9.317394,-6.441466,-3.778292,-4.464914,6.119280,-0.628830,4.607571,-1.134000,7.197143,-1.347871,9.583960,7.566139,2.012846,7.975475,-5.751650,-2.522801,-5.417679,4.645492,9.874512,-9.550778,-5.724213,7.406897,2.497902,-4.064718,5.867992,8.667848,5.019249,4.989467,2.046235,-5.608383,0.130815,0.128612,2.808443,-5.227951,-5.289093,6.609341,7.862427,8.183173,3.328272,-2.540213,-6.640141,5.763947,-0.044478,-1.531933,-2.643221,8.161667,8.186052,3.245742,-9.864068,-5.906186,-2.326199,7.208110,-2.518683,-1.933736,4.892872,-7.252725,9.627485,1.125547,-7.141307,8.297111,5.554546,2.123017,-2.922256,8.080960,-0.325151,5.021412,-8.762932,6.968184,7.017620,-7.150204,-3.611001,4.949305,-4.066176,5.645051,-7.797144,2.844183,7.778092,6.017174,2.294022,-6.283780,-8.653801,-4.962402,9.545129,3.325102,-9.215810,2.957729,-2.061046,-5.444088,1.271097,0.219071,-7.549137,8.720932,8.721117,3.287509,-8.460262,5.410149,-8.092639,7.236813,7.066325,-5.597744,-7.971607,-3.326715,-8.119899,7.117562,-7.073697,-0.314166,-1.280937,-2.392793,-1.255045,-5.283448,-2.654522,1.643459,-7.954788,-6.403282,4.916435,7.081690,-3.948723,-0.436444,-3.089229,-3.153742,-1.389962,6.513975,7.873983,7.331663,-9.907087,-8.659871,0.846863,0.397323,-8.433279,0.467038,-9.972581,5.591083,-0.141047,-1.516267,0.769055,1.015554,4.367231,-5.817443,-7.643800,-3.530921,-7.342978,0.252813,-5.995136,6.960619,-3.262481,-3.045213,3.746861,7.320924,9.340163,-3.122727,1.263133,-7.757274,-3.267460,3.528374,-9.808217,9.400187,-6.876665,-2.966085,7.792113,8.777834,-8.106598,2.686639,7.963332,5.774214,-7.010229,2.702841,1.240940,-4.670717,2.859243,1.900566,0.133131,-0.783172,0.846135,-8.629588,-8.581920,0.875733,3.880037,-2.628758,5.432950,3.505292,4.996283,5.652306,-6.076833,-8.009613,7.505118,-6.403596,5.385467,-7.831614,3.170076,9.477091,-8.295741,8.596171,4.680482,-0.669882,9.788032,-1.649869,8.055521,-6.022711,1.795740,2.606379,-5.860143,0.318478,-7.595153,-3.657152,-1.535723,4.042741,-8.763840,-4.987664,-7.048028,1.075490,-3.385807,-9.474666,7.106545,-0.482948,0.410974,-8.743199,6.548411,4.859380,7.151288,2.530823,-2.293414,5.294201,7.795872,-0.058264,-3.464350,-6.374860,-6.947366,-4.864181,2.224759,-0.507410,-2.277645,-1.707315,0.046837,9.757160,6.670733,-9.655161,0.939062,7.234105,-9.500365,-3.360955,1.746039,8.213432,8.649101,4.612767,-0.940737,-6.931581,-1.117047,-2.298900,-2.870479,5.068659,8.637275,6.280580,8.179830,8.477857,6.840959,-3.360653,-0.258806,-6.878423,-5.435578,-6.852897,4.751407,6.233092,6.292575,4.799964,-0.853990,-9.264012,2.303179,-4.306566,-1.315859,-3.286543,-0.495432,-9.688310,-2.245160,-4.490806,-9.963400,-5.298762,9.934069,-0.442494,8.744817,6.477427,-7.992074,1.997869,4.168031,-6.068192,-5.521070,5.240407,9.734100,6.614988,-0.186662,-2.560882,5.208547,7.641867,2.250704,7.332010,4.419241,-9.760480,-4.981107,2.805476,1.320576,1.854165,-7.347180,-7.024318,-9.948080,-9.740661,-2.707867,-5.800520,3.098989,-7.029292,9.440519,5.204121,-9.480827,-5.300935,-9.922133,4.288559,7.342683,3.112369,1.856852,7.852697,6.168527,6.990930,3.800211,0.392690,7.690237,2.707865,-9.795277,4.715818,-6.668888,2.865828,-2.390920,-2.169352,-0.628249,3.248455,-8.563445,6.623143,-2.831967,0.741404,-2.090273,-3.340486,-7.476671,-1.661007,1.194950,-7.419072,6.473431,-6.122124,-7.914476,9.656250,-2.341381,-0.983582,-3.847984,-8.536006,-0.227483,-7.984687,5.750466,-9.808798,-2.571190,-6.482533,8.822781,0.104786,-8.564223,-5.513891,-3.739047,3.217919,-9.722583,5.969207,-8.380171,-4.929434,6.208471,3.506555,7.591298,6.770712,2.746909,0.037658,-9.884439,3.245014,-6.744939,6.055107,-5.612787,3.002817,-8.434374,5.384012,0.799833,-4.158582,-6.249168,7.058748,6.109150,7.540511,-9.513121,0.243735,7.785698,7.503800,-3.629935,-6.434901,-5.104594,-1.457230,8.698151,8.571760,3.535941,8.954230,5.273170,8.812932,8.282233,7.203354,-2.061414,-9.944313,-4.372881,8.751846,-6.973225,9.790524,-2.630702,-6.507770,6.111130,-2.896881,7.606187,-1.798413,-2.474597,1.258290,-8.516052,0.047191,-5.681333,-7.351835,6.216492,3.349379,2.365703,-4.197744,-2.342276,7.929813,-1.322792,-3.802135,-7.082523,0.015006,9.748667,-8.191524,7.482632,-6.479031,-3.167250,-9.888553,-2.125604,9.768213,-2.969028,6.077860,-1.019963,-8.314103,-5.090280,-6.980741,7.355151,8.669385,0.816015,-6.425164,4.922462,-6.009668,0.263340,-1.496725,-3.849735,-7.729337,3.427790,-5.169888,-8.664606,8.506639,9.731977,7.888274,1.303508,1.681789,5.342582,0.019191,-4.129807,-0.743220,7.769717,-3.571059,-2.073717,-1.024248,-6.992794,-2.107134,-0.368637,-0.670278,3.172674,-6.106853,-9.932033,8.274475,-2.173581,8.123018,-9.762764,-0.974520,-6.002852,-0.547661,2.167279,-5.509777,7.750124,3.233258,-8.976608,7.829327,4.273729,-1.585980,-2.230144,9.546298,0.564508,0.309397,-6.987963,8.756636,-6.149053,-0.423123,-9.160629,-1.877956,4.194322,8.745763,1.690296,0.022840,1.042100,-7.582910,-6.869001,-5.680365,-6.960745,5.588770,4.561006,5.729502,-8.241244,-0.419432,5.958397,-0.756562,-0.349428,-3.591150,7.373224,-3.023169,-1.315388,-7.441672,6.757835,-2.690893,-2.548061,-8.236565,-6.154683,-8.843069,0.027841,8.986168,0.479022,0.682746,-5.994990,5.066998,-5.599592,-1.548248,-1.004440,8.612272,9.546208,-0.710587,3.230039,4.766098,-5.047980,2.443941,-6.301552,-4.039952,-7.056685,4.096463,-4.616098,-0.906577,1.354034,7.049581,5.686367,7.321691,-4.379645,5.389762,-1.487003,5.086107,-4.462141,7.802973,0.414497,-5.369264,0.230747,-9.140784,-6.372883,-1.603707,1.540353,4.265155,-7.320071,5.569945,-2.949791,7.348704,-6.799172,-9.451733,8.889920,3.713623,0.922003,-0.410807,-5.136690,-5.496597,-6.770215,-5.335449,-0.100431,-0.201266,-9.387933,9.069620,-2.567720,7.526190,2.576434,5.225497,8.266714,-1.131161,-8.794163,-7.474811,8.058144,1.392807,7.651585,-3.765102,-1.663797,5.725524,-9.716314,9.161359,9.665595,9.706031,-6.194443,6.858166,-6.372642,0.178313,-4.401343,0.845903,-8.647345,7.071942,-3.324395,-3.670118,4.525758,4.807026,-6.283132,-6.071612,5.706917,1.745306,8.757218,-8.437331,-8.810471,-5.980174,0.367473,-3.336028,2.074270,2.730095,8.967365,-2.017509,3.299651,2.952956,-5.277871,3.721264,9.474060,-0.292064,2.926450,-4.769736,-5.718138,3.531576,-1.358881,1.511410,2.667040,0.178841,-9.215804,0.207712,3.714236,-5.717808,5.869199,-6.241300,-1.267764,0.162019,1.352809,4.106519,-4.564611,0.375591,-2.486482,-5.174843,0.239680,6.834291,9.943692,-4.826287,3.886313,5.865626,-5.195887,8.503841,-1.529088,8.439208,6.067552,4.783203,5.562696,-9.519406,0.103891,9.616027,1.940401,4.125668,-6.379952,0.501653,-3.465371,-9.906739,-6.474028,6.169705,-4.519857,-8.404758,4.904332,4.402408,-6.877170,-7.621879,3.155250,2.076164,-0.701249,4.489392,-9.755372,-0.072042,3.986810,9.643268,1.467142,-9.634735,5.073769,0.701301,-1.355349,2.597611,-6.488382,3.651391,-7.941015,-2.727966,5.154930,9.424042,4.911960,-1.631794,-9.001833,-6.014905,-4.354234,2.442647,-2.575998,-5.403021,3.968273,8.478764,0.120225,0.521439,0.156499,1.358445,-1.688475,-8.553080], dtype = "float64")#candidate|7960|(1430,)|const|float64
call_7958 = relay.TupleGetItem(func_3082_call(relay.reshape(const_7959.astype('uint64'), [9, 11, 9]), relay.reshape(const_7959.astype('uint64'), [9, 11, 9]), relay.reshape(const_7960.astype('float64'), [1430,]), relay.reshape(const_7959.astype('float64'), [9, 11, 9]), ), 2)
call_7961 = relay.TupleGetItem(func_3088_call(relay.reshape(const_7959.astype('uint64'), [9, 11, 9]), relay.reshape(const_7959.astype('uint64'), [9, 11, 9]), relay.reshape(const_7960.astype('float64'), [1430,]), relay.reshape(const_7959.astype('float64'), [9, 11, 9]), ), 2)
output = relay.Tuple([call_7918,const_7921,var_7928,bop_7932,call_7948,const_7949,const_7950,uop_7955,call_7958,const_7959,const_7960,])
output2 = relay.Tuple([call_7919,const_7921,var_7928,bop_7935,call_7951,const_7949,const_7950,uop_7957,call_7961,const_7959,const_7960,])
func_7966 = relay.Function([var_7928,var_7931,], output)
mod['func_7966'] = func_7966
mod = relay.transform.InferType()(mod)
var_7967 = relay.var("var_7967", dtype = "float64", shape = (1764,))#candidate|7967|(1764,)|var|float64
var_7968 = relay.var("var_7968", dtype = "float32", shape = (5, 7, 16))#candidate|7968|(5, 7, 16)|var|float32
output = func_7966(var_7967,var_7968,)
func_7969 = relay.Function([var_7967,var_7968,], output)
mutated_mod['func_7969'] = func_7969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7651_call = mod.get_global_var('func_7651')
func_7653_call = mutated_mod.get_global_var('func_7653')
call_7976 = func_7651_call()
call_7977 = func_7651_call()
func_7966_call = mod.get_global_var('func_7966')
func_7969_call = mutated_mod.get_global_var('func_7969')
const_7981 = relay.const([-3.878427,-8.201385,3.452053,8.965698,-2.204578,0.541455,1.210332,-6.611032,2.505664,-5.212932,6.590262,8.897800,0.460202,3.010684,-4.434812,-1.142214,1.867767,-3.165834,-4.120791,-2.342314,-7.069874,3.534165,7.101674,-8.248909,-8.960273,-4.941632,-9.852911,-9.037726,-5.719288,7.419063,9.124293,4.470244,-3.025154,-6.943205,5.993397,1.946984,-9.085197,-1.646704,-8.440892,3.772888,8.893357,4.228046,6.825666,8.499900,8.828359,-2.666551,5.569897,9.485581,3.463765,-6.653437,-3.598039,-9.153541,-9.016394,-4.892159,4.569711,3.458714,2.699621,3.466036,3.013578,-0.204422,6.462087,5.310649,-1.927149,-3.245502,-0.337182,-4.221233,9.002966,-1.673740,6.286120,-6.752747,-3.829432,-5.981739,-0.020534,-9.292032,-5.900411,-3.371694,0.081839,-4.029884,-7.091689,4.261417,-4.525553,7.238945,6.448287,4.733402,-0.868786,1.037308,-8.455596,-5.935078,6.209082,-3.374635,7.057426,7.483202,-5.116757,-5.785059,5.220774,-2.253950,-9.794360,5.906620,9.813978,-8.999806,-9.134530,-5.628416,7.071746,-7.391123,8.592016,5.198672,5.964925,2.207264,-2.476636,1.165787,5.592594,9.802041,9.171162,0.742670,-7.448411,9.110363,-0.393868,0.217972,-8.980781,-7.423383,-0.214943,0.158458,4.365509,1.142581,-3.157067,2.495670,-9.951757,3.108400,5.523880,-8.400649,2.535514,-7.466247,6.758996,2.410524,4.556746,6.350147,7.837699,-3.833437,0.699925,7.265678,-1.056726,-3.597697,9.241249,-5.251523,-2.388774,-8.371215,-8.926606,4.863043,-0.113185,-1.487640,1.059796,0.190084,-7.927005,1.189282,-8.255245,7.369874,1.578884,5.660824,-2.225003,3.478015,3.552522,-7.018062,-9.966305,9.343141,-6.036788,3.255435,-3.152721,4.597966,-4.463691,-0.924683,5.421686,4.780487,2.548598,1.508664,-6.055563,1.878891,2.024443,-1.833587,6.077531,-3.958871,7.602690,7.926006,8.100206,-5.595431,5.381129,-2.395207,-0.259719,3.314951,-7.843560,4.744007,7.300018,-2.708556,-3.477664,4.699507,9.169758,-6.068029,3.818778,-8.790811,-7.814451,-9.658252,6.010598,-6.627962,-7.834973,-8.971844,-4.784512,3.105582,-0.695477,-6.768417,-9.330236,-8.997432,-9.067250,-5.169931,3.424715,-0.616616,7.355680,9.427682,6.663724,5.804738,-6.828807,-3.718968,5.478620,-1.556257,-3.932380,6.842869,-4.345862,-0.990340,-2.286783,-5.359358,2.386680,6.200396,2.821912,4.063383,-8.328203,-6.888698,-1.342671,0.636785,2.825562,5.961434,1.362442,-7.015727,6.318497,-9.985913,-7.079162,0.705491,7.544490,-2.290143,0.435008,8.696547,-7.064848,-5.788755,-4.819452,0.274423,-3.446680,3.043062,7.969966,1.273457,-6.639118,-9.564275,1.222923,-2.912718,-4.759215,8.157038,1.158425,6.396779,2.823563,-2.557006,8.458781,4.455637,5.758127,9.694984,-2.313528,9.101741,-0.889192,2.984347,6.619335,-3.573829,7.377537,0.253712,-0.350041,-1.038414,1.946611,-7.997857,-5.973710,-0.977562,-7.169169,-6.594865,-8.478784,-6.171014,1.925337,-8.583383,2.082683,-6.182296,4.023979,2.942947,-9.665566,2.473112,4.466159,4.719860,4.692820,1.055553,6.914814,-5.167366,9.368923,7.634723,8.182658,0.624493,-8.531946,6.756476,0.583391,-6.995617,-2.287047,1.675965,7.224510,-1.711174,-6.893099,-5.634999,6.231640,-8.306981,3.822678,-5.001766,0.953872,-0.641415,3.685550,1.114572,-9.781289,3.052019,9.489401,-5.357311,9.725590,9.924529,-4.091227,6.713033,3.267039,-5.733463,5.271713,4.969110,-1.847984,6.127648,7.972458,0.169927,-8.952756,-9.967122,0.672739,-2.078425,1.297364,2.873865,6.495785,-6.791483,-3.608786,-2.435778,8.078342,-0.127035,0.635666,9.404760,1.024996,-6.110713,3.604745,5.671565,-7.234874,8.165565,-7.731538,2.925892,-7.892905,-5.426349,9.174059,-9.055182,-5.096563,-8.681812,-8.051367,-5.700537,-7.506237,7.558124,1.013101,8.082433,-1.961349,-8.279587,4.345318,7.717216,8.114691,-4.134719,-8.010786,9.980164,8.418186,-1.906361,5.571924,4.734190,7.687729,-3.272208,-5.802068,-3.017214,-4.032863,1.228732,4.262258,3.523215,-9.211322,6.652442,5.805099,2.165651,-3.921347,-3.354553,-2.831629,-8.822240,1.321037,-9.759319,-0.172231,-2.801400,7.657463,-1.307854,-5.710855,8.018714,5.424971,7.595626,0.416800,7.672752,-1.517129,-8.330001,-3.159677,1.572479,6.659484,2.307170,-7.347962,-9.885811,4.551805,-5.797832,5.363523,-2.603215,-4.152762,5.405629,-9.548364,-3.559898,-6.179993,5.768250,8.669088,-6.203201,-2.335307,-2.863496,-2.259990,7.311958,0.363800,6.174096,1.884338,7.150084,-6.852783,-7.794039,7.346845,1.472599,7.960970,-0.679815,9.090232,5.599192,-3.557638,3.035643,-9.818301,-8.872643,-1.778141,-0.161793,0.405034,-1.536234,-6.387361,-5.874011,1.813199,-4.656373,-4.376295,5.893909,7.432534,-6.408230,-1.243012,-1.133243,-0.643840,-7.962443,2.793798,-3.626922,-6.600554,-0.208337,7.274992,-3.195706,-8.689575,3.122367,-2.407418,4.226626,6.424576,9.584124,9.030952,3.773492,4.405581,-7.309941,-8.761903,1.220501,7.610245,-0.436817,9.105667,0.673473,4.039296,-3.131698,5.634654,3.183703,3.643844,-8.217474,2.727958,-2.022745,4.071866,0.361576,-2.641251,-6.411695,-1.716449,-7.530967,-3.807313,6.884518,9.804049,4.163806,0.374335,0.949723,5.051336,0.323620,4.062236,0.858219,2.005615,9.882249,-6.946296,9.022859,-3.371165,-7.688128,-9.940359,-1.964124,8.064947,-9.915972,-8.248330,-3.838438,-9.157055,-4.451993,7.385410,-7.023338,-1.743033,-7.643294,-0.602081,7.537326,-7.430380,4.702961,-5.540148,-5.882900,9.787664,-8.744972,-8.139531,0.667878,2.909379,0.785252,-9.339218,3.608870,7.653479,9.779617,6.591061,-4.889999,-4.794785,-3.639134,7.785843,-0.600439,-3.879253,-0.608992,6.461090,9.273756,-2.614849,-3.839927,-6.905404,1.349338,7.179295,7.167080,-9.703875,-2.236232,2.647306,3.856559,4.947948,5.394954,-6.079204,5.925099,-8.105227,-6.879698,2.201534,9.803081,-5.527957,6.346048,7.470709,1.523856,-5.743735,-2.639717,-4.260330,-9.536240,2.280214,5.370744,8.977019,-6.763227,3.392076,-0.260691,3.422842,7.055609,9.840064,8.776219,7.968180,-4.700808,3.630735,-2.486148,-4.142238,4.922173,-6.666831,4.776979,7.738054,6.626644,4.205279,9.308909,3.111057,-1.102432,1.079646,6.647920,-1.054656,-4.928941,-1.934350,-9.439763,9.486654,8.814708,-8.546627,-7.909224,-3.908703,4.504233,9.199117,-4.297815,3.442107,1.805851,-2.485199,0.036856,-8.163071,-1.404522,-9.408724,9.259794,0.257099,-2.548547,-8.365589,9.328038,-5.996047,-6.917832,-7.692121,5.499395,8.904692,-9.837529,1.563550,3.774054,-6.510765,1.957657,-8.445576,-7.634084,0.161637,1.393255,0.573713,-3.316084,2.606751,-3.327762,5.455660,1.668525,-7.667255,-2.588927,-2.638036,-0.873775,-9.978030,9.263231,-3.507353,-0.220292,-8.491404,9.654171,-0.855274,-6.650446,-1.536174,4.771408,-6.520192,5.631333,6.043472,-0.657609,4.388924,-6.907650,-4.969512,-6.085416,0.377105,-2.962635,-5.492523,-0.320879,7.072106,1.266831,6.586525,4.682439,3.373057,-7.616063,7.361943,-4.992000,5.309738,-7.138664,1.360513,7.642060,3.726231,-1.113842,5.492034,-6.149425,4.119109,6.443008,1.941857,-3.070089,4.953754,6.408658,-3.204413,7.831412,-5.913636,6.907338,-0.745618,-6.752367,6.078156,5.238177,4.956026,6.290231,9.633929,0.545480,-0.243852,-1.012962,0.271361,-7.014810,3.292535,3.734684,7.489525,4.655956,0.949637,8.342542,6.064287,-6.310409,-7.512981,5.321858,-9.417693,-7.762373,0.674450,-0.886830,-8.308698,-7.557740,-6.926641,6.589348,-5.665829,1.165467,3.417582,-8.455084,2.884039,4.781714,2.234023,-6.946995,-4.741647,-3.630356,4.958537,-8.146885,4.083948,4.788121,-0.656849,2.728141,-0.639262,6.487658,3.332011,-8.302356,-6.752796,-0.378326,-7.161395,9.262634,-3.757393,-6.765681,-5.328315,6.179021,7.696251,9.782897,-0.600087,6.838957,0.535662,-2.128263,-4.549766,6.521854,-2.189868,-8.418909,-2.886880,4.880716,0.310020,-1.790322,-8.159440,5.193528,0.993924,-8.277738,2.982493,-7.573502,-3.420184,9.837782,7.721176,3.814649,6.645893,-7.248998,7.479742,-7.160419,-6.163907,-8.539062,-5.357331,-7.062618,-1.900622,6.938818,-2.857739,-5.903202,-6.418920,-3.290588,-1.202971,-3.595964,4.157493,-9.989487,-9.926148,-8.822868,5.152085,-2.678314,-9.104332,5.623322,4.559644,2.141035,-8.741733,-7.265823,1.045007,-0.472793,-2.106542,4.346825,-1.829299,-8.892505,-0.566833,6.743734,5.081833,-9.474693,-4.225514,-5.656856,-8.096865,-7.836758,9.620679,-4.011492,2.835658,-5.328883,9.129765,6.996134,5.709602,-1.019575,-8.461024,-2.750862,2.398360,-2.272678,-7.165227,0.070857,-4.586538,-2.073589,-1.706065,-2.837714,8.200936,0.892086,7.380280,-8.419280,-1.710679,-9.173822,-9.028755,-7.592365,7.637440,-8.277544,1.274537,2.514131,4.697814,1.084561,-6.513477,7.567621,5.521209,-3.232510,0.649670,9.207653,7.175158,1.050455,-5.935544,-7.264308,-7.748495,-1.264356,-3.515085,7.308748,5.916399,-0.091323,-2.526017,8.333382,-2.378133,-3.673178,3.096045,-6.535146,-7.298229,-6.865160,2.696502,-1.384181,9.408534,-2.856989,-4.585505,0.507620,-5.846481,2.940819,7.191601,-0.450225,-1.056387,-5.036888,4.180633,4.453888,-6.760843,-8.144774,-3.297531,5.424153,0.727132,7.449707,9.240694,3.609582,-4.094838,-4.339954,-3.654596,-3.345997,-1.938980,-7.003581,6.074690,7.340557,6.847544,4.184925,-8.739398,-6.143757,-2.911906,-9.216342,-7.067781,-2.800886,-1.714036,0.767389,2.004977,-6.966541,-1.212614,0.247982,-6.710526,7.380616,8.820955,3.232383,1.028771,6.553943,2.345553,8.959966,-4.697350,4.499513,-1.389566,9.476501,-3.007422,1.913743,-8.210066,-8.774483,3.847992,-7.660675,-4.580679,8.145583,7.230719,-7.138343,-7.064527,5.461015,6.202507,9.027599,2.095380,6.725440,-7.172678,-7.874443,-0.235121,3.781831,-7.272687,-4.732808,7.039141,-6.205473,-4.509245,-3.284022,-0.825273,0.087602,-2.119832,7.522432,8.421530,3.933578,-5.770922,-4.560926,-5.519764,-6.425730,-3.011692,3.498141,-1.778688,-9.433312,-0.247513,1.312946,-2.522393,-8.425455,-1.660706,-1.496581,4.296966,8.490844,5.534410,-9.595128,-2.681915,-3.829685,7.388332,-1.723686,9.142634,-9.328371,5.377247,-1.608724,6.405468,-2.108508,2.612624,4.970169,-8.875329,-6.686924,0.711800,3.090085,7.652319,-1.956875,-8.602044,2.387505,9.324056,8.261863,0.480933,4.723733,0.654882,-9.186793,-8.307343,6.739717,2.631073,8.377652,-4.869312,-5.561390,-9.476709,-8.260251,6.545790,3.825167,5.354803,-8.576894,-8.343293,4.464366,7.384862,-6.321231,-7.693881,6.196507,8.765597,-2.153459,3.679006,-7.618826,4.764862,-3.189065,-2.235469,1.231181,9.674566,-4.904576,5.788095,4.563221,-0.296586,4.296598,4.072917,-7.226907,3.016287,-3.720456,8.816853,-6.599859,0.856728,9.529229,-1.892114,1.009470,-9.334872,-7.613526,-7.368855,7.025497,6.486467,3.297479,6.599503,-7.767098,-0.415506,3.113133,0.208963,-3.398352,7.304580,-4.933061,-2.566354,9.656523,8.107113,2.459874,4.476437,-5.868410,9.000851,7.044001,8.675532,5.615568,-6.956560,3.984705,-2.188904,-3.043017,-8.996431,-4.631474,-4.491446,2.049891,9.176127,4.259128,6.393812,8.778508,5.061498,9.400228,-2.243263,-7.179741,-3.036524,-8.223457,2.589642,-7.560297,9.226602,1.138186,-8.792967,-5.344024,5.554017,-5.112822,0.192243,3.027077,-6.662187,-2.665495,3.577004,2.407880,-5.404710,-2.553462,-4.141036,4.133330,9.108991,6.531460,-4.653664,4.202136,-9.697760,-3.294327,-0.864467,-4.792839,6.219833,5.872990,-6.985897,-0.400465,5.853451,-7.922824,3.774781,1.985393,-8.404309,-8.113613,-0.451430,-8.672990,0.090375,1.099255,-5.888133,-9.142016,-9.138459,-2.702966,-0.818461,2.479653,-1.122313,8.116775,-4.957093,-1.452005,3.466295,4.032718,4.991838,-0.391930,-5.146821,-7.371486,-4.090422,-4.635801,-0.322033,5.891239,9.761241,-8.962580,-1.398272,4.167110,4.607076,-2.349283,-1.987792,-5.440695,7.561931,-6.674290,-6.812653,8.614262,3.409323,0.932239,-7.328211,-0.579482,-6.664031,7.832757,-6.496363,4.826799,7.844328,4.274829,4.837130,8.315979,-7.017859,-6.610853,-9.347367,5.716511,-9.418278,3.452142,4.639179,-5.030337,6.012195,2.945099,5.784529,8.218153,-8.504005,-8.902263,-4.113751,-3.631146,-5.760092,-8.018704,-9.265648,-4.950547,-3.459592,-7.225814,-1.329503,6.166461,-7.611202,2.401974,9.032081,-8.223569,0.971321,2.929084,-1.420928,2.800229,4.487152,7.607001,9.722263,-7.056727,-0.955160,-2.144284,0.972266,-8.827312,-8.800791,0.478989,-9.675080,3.042575,2.446353,5.947406,-8.725752,-5.942586,-8.779339,-2.605676,7.238571,-6.648952,5.795525,-2.147544,-2.270768,-9.581003,0.770359,5.307192,-8.335914,8.505106,2.146647,5.083145,1.080320,1.185841,-0.001086,-6.720383,-7.288685,5.946037,2.604710,9.980675,-3.250451,-1.449355,9.291475,5.397640,-3.557669,7.841469,8.473767,2.432135,-0.974600,5.132312,-7.384304,9.254175,-8.102763,-8.289283,-3.195285,3.445113,-2.372003,-1.365307,9.914674,7.657105,3.497737,-7.541464,4.284585,8.643108,-3.763385,-6.250923,-1.081182,-4.403400,-2.833978,-2.434962,-2.392891,0.688296,3.790390,-5.068660,4.743686,-6.579144,3.545071,-1.559170,9.853383,-3.540806,-1.060396,-9.405471,-3.503465,1.609455,-0.294586,-8.032634,9.714048,6.863900,2.984940,-6.597303,7.239507,5.860835,0.211790,8.280862,-3.864673,-3.836127,8.545204,5.147146,6.670254,-1.052854,4.834202,-8.575701,9.646136,9.497605,-9.085624,9.942779,1.469294,-9.860222,-3.918596,2.132995,4.599724,5.014584,-2.946414,5.991756,6.650688,2.393102,-2.415697,-9.990484,1.367355,-9.861306,5.979863,0.571360,5.468216,3.191144,-1.013177,-5.432000,-0.309589,-0.719003,-4.519562,8.429977,9.917039,-7.770140,-2.839667,9.454026,6.858642,5.716195,-9.672917,9.250797,-5.177776,0.286900,9.223373,7.860744,-3.378740,-8.764475,5.352947,-3.358335,3.868039,-4.675040,9.652511,2.425038,6.521592,2.953650,-4.113769,0.080660,4.138719,2.331355,-2.782521,7.242600,-7.558649,-4.970543,7.042223,-2.906780,0.182972,-2.232469,2.175299,7.128544,9.592821,-2.623066,8.614525,-0.424487,-1.920897,1.100059,-3.368181,6.679965,2.514805,-6.674412,4.714631,8.338648,7.316557,1.959718,8.488735,-0.737155,-0.448664,-3.391820,-0.633787,-0.597435,-7.450788,-5.797300,-5.475842,8.015857,1.859258,-6.471933,5.355627,6.673493,-1.312687,8.772741,-3.400607,-0.311277,-7.235699,-8.972898,0.900554,4.158647,5.913397,2.497574,-2.087684,5.868986,-1.894947,-4.389135,4.215216,8.572841,-9.703965,9.936431,-9.402447,3.100416,0.018270,9.424330,8.875837,-7.175977,-9.725842,-1.018649,2.310595,-0.887095,-0.582136,2.456440,2.711666,0.971687,7.085018,-9.030002,-4.608328,-5.241013,8.580432,-9.088167,-5.251309,6.481038,-3.151374,8.794874,6.925652,-3.757439,-7.669637,6.880895,-3.906415,-4.820965,-2.711079,6.693621,-8.603786,-6.318584,8.786595,-8.158218,7.210516,2.914157,-2.348380,1.770024,-7.522691,7.461689,1.978680,-1.942508,2.911031,3.968875,0.533740,-9.596797,-1.981045,-6.486280,9.127045,-5.409737,-2.614218,9.936533,-4.280104,6.352673,-1.482014,-1.013137,4.439788,9.942705,1.045329,-2.011159,1.694312,-9.398186,3.298612,1.321108,-3.664776,-7.536353,1.040313,7.857581,-3.192722,1.480882,1.610810,6.669787,-3.013235,7.539429,1.268125,9.891502,-0.254093,2.959987,-5.842948,-2.092410,-4.797207,1.103593,-2.165596,9.169471,1.103193,6.628964,-9.030364,-6.369783,2.018670,-5.906926,7.866785,9.584904,-1.308129,-9.822065,-2.381592,8.006958,2.561318,-6.830767,1.523355,-6.209873,-5.725218,4.475335,-6.162902,-3.560594,3.057237,5.632119,-2.468770,-7.778893,4.137243,9.578203,5.687458,-1.752148,2.032163,5.797219,-7.031713,-5.049968,2.188425,-1.077933,9.706745,-7.529829,1.420565,7.980143,-0.729240,-8.111807,-6.366051,0.575246,-9.674825,-1.108804,6.926034,-5.663360,-3.495963,-3.181557,-2.085010,8.390661,6.740198,-6.154552,1.114946,-1.946000,4.294547,5.587800,-8.825811,-5.506789,-8.216543,9.264411,-5.129257,-1.515419,-1.712241,-5.111986,2.712439,-6.847624,3.749374,4.124621,-7.317590,0.191186,3.345296,-8.885288,2.390559,-2.817985,5.134931,5.996845,-2.777640,-7.225438,4.141902,9.015377,6.867205,5.299799,1.176665,7.199025,1.404761,8.094148,-7.070572,-6.114160,-5.915142,1.601986,-6.204898,5.585691,-0.950923,1.724351,2.987625,-6.203760,-0.283296,8.590888,5.037024,-8.521963,6.796846,4.664747,5.340999,-8.088639,-9.884960,6.910743,-2.058983,8.645439,5.077920,-7.909338,-2.487504,3.826831,5.172977,-3.509002,6.342801,3.493439,-7.420435,-9.534329,-5.758417,-6.627781,9.681620,-7.689258,-5.589448,-1.637210,-7.353722,-2.751608,-8.645679,-9.093537,0.920363,-3.194698,1.300227,3.731692,-0.176438,8.665277,-0.785148,4.125546,7.367711,-3.405707,-8.798037,5.177137,8.067301,7.450593,1.224589,8.995382,-2.226731,-4.933143,6.602739,1.043582,6.738610,0.137257,-1.882757,6.194759,-1.900593,-0.434668,3.033506,7.956286,9.601190,-5.988515,-7.698784,3.451334,9.846475,-3.021642,-0.320408,-4.288564,-8.959739,2.468937,-3.580323,4.006098,-3.002817,7.228237,4.037061,0.515520,4.985927,-2.131555,0.499047,-2.046142,7.563314,-5.802765,9.289939,8.551981,-6.229693,-0.130864,-1.243481,1.832751,6.195839,-8.391272,6.935355,-9.303899,5.837328,6.024722,-7.458725,3.468741,-8.497716,0.914059,-3.292442,-3.196471,-7.392487,8.973224,-1.983083,5.291814,-8.978238,-3.365473,9.538891,-9.013002,7.729052,-3.211074,-2.134722,6.948961,3.709237,-1.905942,-4.518728,-4.643689,4.722539,9.272434,-7.758451,-4.993686,-6.415738,-3.061859,0.392918,-0.123710,-6.426916,-2.425208,-1.177208,-8.582531,4.020929,3.447504,3.804243,-0.125976,4.038406,-1.795732,-2.330999,-2.999950,2.384243,0.951850,-1.827874,-5.757223,-1.243748,0.390070,-8.587774,-3.177887,-1.882052,4.421583,9.032586,-3.882474,4.073130,-6.154671,4.673714,-3.677621], dtype = "float64")#candidate|7981|(1764,)|const|float64
const_7982 = relay.const([0.086616,1.662669,9.435119,-5.590709,-2.884632,1.832236,-1.734706,-9.702143,-2.419894,9.792335,1.895710,3.451880,-5.316106,6.875586,1.056142,9.826493,-1.992765,-7.820860,5.268463,-9.692580,7.478668,-4.903756,-1.164487,8.820758,-3.012022,3.230575,-1.895381,-8.492933,-1.690473,6.558394,1.308361,5.740572,1.941937,5.501239,-8.453441,-9.224222,8.180700,-6.424361,2.994917,-5.342718,-5.646486,8.776974,-4.840455,1.455927,2.672903,9.453695,-6.051301,7.702025,-9.393304,-7.066929,-3.599050,3.385318,-8.298284,2.623950,3.360403,7.514623,6.030729,0.191153,-5.389359,2.860485,1.278148,-7.932505,7.208126,2.584305,-0.851788,-7.014526,-2.561151,-0.329687,3.945157,-1.382899,3.721372,-9.915616,-8.728139,9.186727,3.555651,-0.296564,9.855461,-9.872855,-8.018974,-0.016609,1.005035,7.772608,-1.297735,-3.414393,-5.717339,2.362957,-2.811296,-2.072771,5.251209,-9.643318,-2.087155,0.246699,6.707139,-2.677768,2.251277,8.487405,-1.525516,-1.179301,-5.899011,-0.351165,9.166612,3.521466,-1.569598,-8.461552,9.784787,-7.602425,1.259383,8.670449,4.541642,9.804886,-7.328025,8.486682,3.456441,-3.303913,7.381298,-5.790432,-7.871259,-7.880395,-7.810209,-1.648748,5.329078,6.758215,-9.232112,-6.624011,8.539308,-4.884457,-4.942747,-5.659563,5.550975,9.764926,2.810117,7.946611,6.212720,-9.785772,-6.579536,2.553344,3.673735,-0.567404,0.743774,1.932162,-8.160837,1.446041,-2.156444,3.408491,-1.246585,-9.629396,-1.699641,0.695787,2.445499,8.039594,-5.973029,-5.244434,-9.412893,8.806211,7.133829,-2.388017,-3.938423,-0.087431,4.160098,-6.808911,-9.742124,0.456808,-8.096189,8.877409,3.440284,3.255256,0.713282,7.611985,-9.244459,-1.671757,-9.338082,-4.835043,-0.042964,0.916368,-8.940448,1.377389,-1.672122,3.971392,8.709348,-3.069781,-9.354812,-0.825600,8.108389,4.159671,-6.110200,7.081286,-3.441581,3.430101,-7.878944,-1.358844,-0.385035,-6.695967,-0.798440,6.105867,-1.553948,-8.490354,5.493294,-8.294251,8.148684,-6.926602,3.903001,-9.342881,5.742662,-0.046649,-3.303153,-4.732164,-2.527430,4.742562,3.464388,-1.419592,-5.470281,-9.458803,4.315519,4.552442,-2.051638,-3.043493,4.036601,6.795599,-9.344685,4.702594,-1.795158,4.906068,-3.770703,1.138768,2.559728,2.698083,4.934561,7.160049,-7.117226,8.740209,3.455389,8.216162,-9.788495,0.670724,-1.722618,3.243140,1.667450,-9.903842,2.081906,1.301947,9.160910,-4.493223,-9.114837,-8.691983,-8.412876,9.005255,9.156420,2.736375,8.013511,4.074851,2.294049,-2.687405,9.292557,-9.057058,-0.423243,-7.172589,-3.137920,-4.100986,-3.995840,3.033340,-4.054081,-7.465665,9.939444,8.482207,7.134990,2.761395,0.371651,1.102269,-5.547025,5.840063,6.658906,-6.285817,3.496444,-9.503601,2.749717,-0.310085,-0.096095,-7.761946,-5.754523,-1.147950,-8.256078,-9.499859,5.380406,-5.518548,0.509798,-1.737868,7.674405,-9.108227,-8.630153,3.067059,5.396244,7.526043,-1.657042,7.706609,-5.882712,-3.016517,8.861930,-1.892372,-8.853659,-6.660509,9.810642,-6.124141,-8.442216,2.945198,9.281489,-2.825924,-7.383562,-9.120400,4.413146,-1.496509,1.136347,-8.694622,2.379435,2.348138,-4.796933,-6.922070,5.761124,-2.414804,8.350463,-6.501049,-7.260538,3.990549,-9.417141,-2.571920,-2.239601,6.557904,2.758945,-6.627766,7.167944,8.631537,-6.753427,6.932043,-2.640754,4.288928,5.387403,1.664681,-8.224952,-3.266665,-2.836660,5.571590,5.676676,1.870721,-2.593761,-4.765580,2.361773,7.496369,5.128259,3.469401,0.952987,2.043631,-8.356680,-2.715964,-4.513199,-8.547172,0.005112,0.010694,-3.508154,-2.435372,-6.595031,-2.963606,-7.411960,5.413110,-0.334623,8.681289,9.126618,-2.640898,2.964801,8.015807,-7.674949,7.214662,6.547450,-6.131644,0.701342,-0.082557,0.758425,5.948645,0.739832,9.266103,-0.854879,6.064039,-3.242518,9.559803,-9.239165,6.949762,-3.151357,1.567363,1.595307,-9.479047,-9.204299,-4.266077,6.269547,6.614255,7.231471,3.286285,1.348053,4.850219,-5.073976,-5.736571,4.365167,0.498019,-9.615936,0.207716,3.190530,-8.110345,1.864004,0.144185,-4.392391,6.091690,-8.256626,2.472332,1.979979,2.983109,-1.172966,-9.852134,1.403846,4.439806,-1.046516,1.921655,-3.042231,5.358154,-7.255222,0.818971,4.463595,-3.089088,7.261171,-1.207279,1.648708,-2.940497,4.266958,4.884703,0.880560,-9.080184,-5.616482,9.875232,4.652219,-6.762436,4.776217,-6.002031,-3.530783,-8.969754,2.054463,-0.503980,-8.976698,-9.586943,6.875931,-0.812169,-6.535255,0.887646,-6.933972,-2.007834,3.678700,-2.022173,-5.644513,-2.844657,5.390341,-0.578274,5.057393,2.555331,8.463042,9.562977,-4.372054,2.460145,-5.886617,6.294017,3.736113,-8.288561,-6.673498,-0.232090,7.751547,2.410737,8.867512,4.497492,-3.359056,3.606878,-1.957848,-8.795364,-6.841670,-9.325436,-4.767435,-8.607772,1.719484,6.955721,6.276779,-8.231906,-3.055150,2.212682,7.510784,-7.552739,-5.056371,6.239279,-0.222837,4.065304,-5.650657,6.049500,6.645324,-0.817728,-9.153756,-4.784099,6.811144,-5.219995,-0.486838,-6.836233,4.207936,2.220889,-8.870542,-0.940638,-8.209740,9.532363,3.912030,-0.662017,-9.053023,9.987813,-5.264178,-8.085937,-1.671202,1.338356,9.687280,-3.712316,-1.198769,-8.002911,2.444367,2.973946,-5.502376,-5.903000,0.210836,-2.149683,5.778241,-4.150407,0.369013,-0.597498,8.246720,-7.205647,7.045133,4.035836,-9.668641,-5.210261,0.165929,5.647992,-0.577318,1.435132,-8.125399,-0.647908,-4.737942,1.582585,0.959457,2.903883,1.490302,8.372037,4.152940,-6.326790,-5.888663,2.312935,-6.521785,5.312377,-8.168129,-9.527410,-2.358145,-8.841052,9.276410,-1.153937], dtype = "float32")#candidate|7982|(560,)|const|float32
call_7980 = relay.TupleGetItem(func_7966_call(relay.reshape(const_7981.astype('float64'), [1764,]), relay.reshape(const_7982.astype('float32'), [5, 7, 16]), ), 9)
call_7983 = relay.TupleGetItem(func_7969_call(relay.reshape(const_7981.astype('float64'), [1764,]), relay.reshape(const_7982.astype('float32'), [5, 7, 16]), ), 9)
output = relay.Tuple([call_7976,call_7980,const_7981,const_7982,])
output2 = relay.Tuple([call_7977,call_7983,const_7981,const_7982,])
func_7993 = relay.Function([], output)
mod['func_7993'] = func_7993
mod = relay.transform.InferType()(mod)
output = func_7993()
func_7994 = relay.Function([], output)
mutated_mod['func_7994'] = func_7994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7480_call = mod.get_global_var('func_7480')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_8136 = func_7480_call()
call_8137 = func_7480_call()
func_2344_call = mod.get_global_var('func_2344')
func_2349_call = mutated_mod.get_global_var('func_2349')
const_8148 = relay.const(-4.166812, dtype = "float32")#candidate|8148|()|const|float32
var_8149 = relay.var("var_8149", dtype = "float32", shape = (420,))#candidate|8149|(420,)|var|float32
call_8147 = relay.TupleGetItem(func_2344_call(relay.reshape(const_8148.astype('float32'), []), relay.reshape(var_8149.astype('float32'), [5, 12, 7]), relay.reshape(call_8136.astype('float32'), [48,]), ), 2)
call_8150 = relay.TupleGetItem(func_2349_call(relay.reshape(const_8148.astype('float32'), []), relay.reshape(var_8149.astype('float32'), [5, 12, 7]), relay.reshape(call_8136.astype('float32'), [48,]), ), 2)
output = relay.Tuple([call_8136,call_8147,const_8148,var_8149,])
output2 = relay.Tuple([call_8137,call_8150,const_8148,var_8149,])
func_8154 = relay.Function([var_8149,], output)
mod['func_8154'] = func_8154
mod = relay.transform.InferType()(mod)
var_8155 = relay.var("var_8155", dtype = "float32", shape = (420,))#candidate|8155|(420,)|var|float32
output = func_8154(var_8155)
func_8156 = relay.Function([var_8155], output)
mutated_mod['func_8156'] = func_8156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7651_call = mod.get_global_var('func_7651')
func_7653_call = mutated_mod.get_global_var('func_7653')
call_8158 = func_7651_call()
call_8159 = func_7651_call()
uop_8163 = relay.log10(call_8158.astype('float32')) # shape=(2, 4, 6)
uop_8165 = relay.log10(call_8159.astype('float32')) # shape=(2, 4, 6)
output = uop_8163
output2 = uop_8165
func_8166 = relay.Function([], output)
mod['func_8166'] = func_8166
mod = relay.transform.InferType()(mod)
output = func_8166()
func_8167 = relay.Function([], output)
mutated_mod['func_8167'] = func_8167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7993_call = mod.get_global_var('func_7993')
func_7994_call = mutated_mod.get_global_var('func_7994')
call_8179 = relay.TupleGetItem(func_7993_call(), 2)
call_8180 = relay.TupleGetItem(func_7994_call(), 2)
var_8199 = relay.var("var_8199", dtype = "float64", shape = (1764,))#candidate|8199|(1764,)|var|float64
bop_8200 = relay.power(call_8179.astype('float64'), relay.reshape(var_8199.astype('float64'), relay.shape_of(call_8179))) # shape=(1764,)
bop_8203 = relay.power(call_8180.astype('float64'), relay.reshape(var_8199.astype('float64'), relay.shape_of(call_8180))) # shape=(1764,)
func_7384_call = mod.get_global_var('func_7384')
func_7387_call = mutated_mod.get_global_var('func_7387')
var_8207 = relay.var("var_8207", dtype = "int64", shape = (768,))#candidate|8207|(768,)|var|int64
call_8206 = relay.TupleGetItem(func_7384_call(relay.reshape(var_8207.astype('int64'), [768, 1])), 2)
call_8208 = relay.TupleGetItem(func_7387_call(relay.reshape(var_8207.astype('int64'), [768, 1])), 2)
output = relay.Tuple([bop_8200,call_8206,var_8207,])
output2 = relay.Tuple([bop_8203,call_8208,var_8207,])
func_8209 = relay.Function([var_8199,var_8207,], output)
mod['func_8209'] = func_8209
mod = relay.transform.InferType()(mod)
mutated_mod['func_8209'] = func_8209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8209_call = mutated_mod.get_global_var('func_8209')
var_8211 = relay.var("var_8211", dtype = "float64", shape = (1764,))#candidate|8211|(1764,)|var|float64
var_8212 = relay.var("var_8212", dtype = "int64", shape = (768,))#candidate|8212|(768,)|var|int64
call_8210 = func_8209_call(var_8211,var_8212,)
output = call_8210
func_8213 = relay.Function([var_8211,var_8212,], output)
mutated_mod['func_8213'] = func_8213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7045_call = mod.get_global_var('func_7045')
func_7046_call = mutated_mod.get_global_var('func_7046')
call_8297 = relay.TupleGetItem(func_7045_call(), 0)
call_8298 = relay.TupleGetItem(func_7046_call(), 0)
func_7651_call = mod.get_global_var('func_7651')
func_7653_call = mutated_mod.get_global_var('func_7653')
call_8304 = func_7651_call()
call_8305 = func_7651_call()
bop_8307 = relay.divide(call_8304.astype('float32'), relay.reshape(call_8297.astype('float32'), relay.shape_of(call_8304))) # shape=(2, 4, 6)
bop_8310 = relay.divide(call_8305.astype('float32'), relay.reshape(call_8298.astype('float32'), relay.shape_of(call_8305))) # shape=(2, 4, 6)
func_2232_call = mod.get_global_var('func_2232')
func_2234_call = mutated_mod.get_global_var('func_2234')
var_8314 = relay.var("var_8314", dtype = "float32", shape = (676, 1))#candidate|8314|(676, 1)|var|float32
call_8313 = func_2232_call(relay.reshape(var_8314.astype('float32'), [13, 4, 13]))
call_8315 = func_2232_call(relay.reshape(var_8314.astype('float32'), [13, 4, 13]))
output = relay.Tuple([bop_8307,call_8313,var_8314,])
output2 = relay.Tuple([bop_8310,call_8315,var_8314,])
func_8317 = relay.Function([var_8314,], output)
mod['func_8317'] = func_8317
mod = relay.transform.InferType()(mod)
mutated_mod['func_8317'] = func_8317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8318 = relay.var("var_8318", dtype = "float32", shape = (676, 1))#candidate|8318|(676, 1)|var|float32
func_8317_call = mutated_mod.get_global_var('func_8317')
call_8319 = func_8317_call(var_8318)
output = call_8319
func_8320 = relay.Function([var_8318], output)
mutated_mod['func_8320'] = func_8320
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8324 = relay.var("var_8324", dtype = "float64", shape = (6, 2, 7))#candidate|8324|(6, 2, 7)|var|float64
uop_8325 = relay.sin(var_8324.astype('float64')) # shape=(6, 2, 7)
output = uop_8325
output2 = uop_8325
func_8333 = relay.Function([var_8324,], output)
mod['func_8333'] = func_8333
mod = relay.transform.InferType()(mod)
var_8334 = relay.var("var_8334", dtype = "float64", shape = (6, 2, 7))#candidate|8334|(6, 2, 7)|var|float64
output = func_8333(var_8334)
func_8335 = relay.Function([var_8334], output)
mutated_mod['func_8335'] = func_8335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8166_call = mod.get_global_var('func_8166')
func_8167_call = mutated_mod.get_global_var('func_8167')
call_8371 = func_8166_call()
call_8372 = func_8166_call()
output = relay.Tuple([call_8371,])
output2 = relay.Tuple([call_8372,])
func_8373 = relay.Function([], output)
mod['func_8373'] = func_8373
mod = relay.transform.InferType()(mod)
output = func_8373()
func_8374 = relay.Function([], output)
mutated_mod['func_8374'] = func_8374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7098_call = mod.get_global_var('func_7098')
func_7099_call = mutated_mod.get_global_var('func_7099')
call_8377 = func_7098_call()
call_8378 = func_7098_call()
func_7124_call = mod.get_global_var('func_7124')
func_7125_call = mutated_mod.get_global_var('func_7125')
call_8384 = func_7124_call()
call_8385 = func_7124_call()
func_7993_call = mod.get_global_var('func_7993')
func_7994_call = mutated_mod.get_global_var('func_7994')
call_8386 = relay.TupleGetItem(func_7993_call(), 3)
call_8387 = relay.TupleGetItem(func_7994_call(), 3)
bop_8391 = relay.bitwise_or(call_8377.astype('int16'), relay.reshape(call_8384.astype('int16'), relay.shape_of(call_8377))) # shape=(2, 4, 6)
bop_8394 = relay.bitwise_or(call_8378.astype('int16'), relay.reshape(call_8385.astype('int16'), relay.shape_of(call_8378))) # shape=(2, 4, 6)
func_2925_call = mod.get_global_var('func_2925')
func_2929_call = mutated_mod.get_global_var('func_2929')
var_8397 = relay.var("var_8397", dtype = "float32", shape = (1365,))#candidate|8397|(1365,)|var|float32
var_8398 = relay.var("var_8398", dtype = "float32", shape = (420, 1))#candidate|8398|(420, 1)|var|float32
call_8396 = relay.TupleGetItem(func_2925_call(relay.reshape(var_8397.astype('float32'), [13, 15, 7]), relay.reshape(var_8398.astype('float32'), [210, 2]), ), 3)
call_8399 = relay.TupleGetItem(func_2929_call(relay.reshape(var_8397.astype('float32'), [13, 15, 7]), relay.reshape(var_8398.astype('float32'), [210, 2]), ), 3)
func_7421_call = mod.get_global_var('func_7421')
func_7424_call = mutated_mod.get_global_var('func_7424')
call_8417 = relay.TupleGetItem(func_7421_call(relay.reshape(call_8386.astype('float32'), [2, 280])), 1)
call_8418 = relay.TupleGetItem(func_7424_call(relay.reshape(call_8386.astype('float32'), [2, 280])), 1)
var_8419 = relay.var("var_8419", dtype = "float32", shape = (1365,))#candidate|8419|(1365,)|var|float32
bop_8420 = relay.bitwise_and(var_8397.astype('uint16'), relay.reshape(var_8419.astype('uint16'), relay.shape_of(var_8397))) # shape=(1365,)
var_8434 = relay.var("var_8434", dtype = "float32", shape = (2, 280))#candidate|8434|(2, 280)|var|float32
bop_8435 = relay.bitwise_xor(call_8417.astype('uint16'), relay.reshape(var_8434.astype('uint16'), relay.shape_of(call_8417))) # shape=(2, 280)
bop_8438 = relay.bitwise_xor(call_8418.astype('uint16'), relay.reshape(var_8434.astype('uint16'), relay.shape_of(call_8418))) # shape=(2, 280)
output = relay.Tuple([call_8386,bop_8391,call_8396,var_8398,bop_8420,bop_8435,])
output2 = relay.Tuple([call_8387,bop_8394,call_8399,var_8398,bop_8420,bop_8438,])
func_8440 = relay.Function([var_8397,var_8398,var_8419,var_8434,], output)
mod['func_8440'] = func_8440
mod = relay.transform.InferType()(mod)
var_8441 = relay.var("var_8441", dtype = "float32", shape = (1365,))#candidate|8441|(1365,)|var|float32
var_8442 = relay.var("var_8442", dtype = "float32", shape = (420, 1))#candidate|8442|(420, 1)|var|float32
var_8443 = relay.var("var_8443", dtype = "float32", shape = (1365,))#candidate|8443|(1365,)|var|float32
var_8444 = relay.var("var_8444", dtype = "float32", shape = (2, 280))#candidate|8444|(2, 280)|var|float32
output = func_8440(var_8441,var_8442,var_8443,var_8444,)
func_8445 = relay.Function([var_8441,var_8442,var_8443,var_8444,], output)
mutated_mod['func_8445'] = func_8445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7529_call = mod.get_global_var('func_7529')
func_7531_call = mutated_mod.get_global_var('func_7531')
call_8449 = relay.TupleGetItem(func_7529_call(), 0)
call_8450 = relay.TupleGetItem(func_7531_call(), 0)
uop_8453 = relay.acos(call_8449.astype('float64')) # shape=(2, 4, 6)
uop_8455 = relay.acos(call_8450.astype('float64')) # shape=(2, 4, 6)
output = uop_8453
output2 = uop_8455
func_8462 = relay.Function([], output)
mod['func_8462'] = func_8462
mod = relay.transform.InferType()(mod)
mutated_mod['func_8462'] = func_8462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8462_call = mutated_mod.get_global_var('func_8462')
call_8463 = func_8462_call()
output = call_8463
func_8464 = relay.Function([], output)
mutated_mod['func_8464'] = func_8464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mod.get_global_var('func_7124')
func_7125_call = mutated_mod.get_global_var('func_7125')
call_8469 = func_7124_call()
call_8470 = func_7124_call()
func_2925_call = mod.get_global_var('func_2925')
func_2929_call = mutated_mod.get_global_var('func_2929')
var_8474 = relay.var("var_8474", dtype = "float32", shape = (455, 3))#candidate|8474|(455, 3)|var|float32
var_8475 = relay.var("var_8475", dtype = "float32", shape = (420,))#candidate|8475|(420,)|var|float32
call_8473 = relay.TupleGetItem(func_2925_call(relay.reshape(var_8474.astype('float32'), [13, 15, 7]), relay.reshape(var_8475.astype('float32'), [210, 2]), ), 0)
call_8476 = relay.TupleGetItem(func_2929_call(relay.reshape(var_8474.astype('float32'), [13, 15, 7]), relay.reshape(var_8475.astype('float32'), [210, 2]), ), 0)
uop_8482 = relay.erf(call_8469.astype('float32')) # shape=(2, 4, 6)
uop_8484 = relay.erf(call_8470.astype('float32')) # shape=(2, 4, 6)
bop_8501 = relay.less_equal(uop_8482.astype('bool'), relay.reshape(call_8469.astype('bool'), relay.shape_of(uop_8482))) # shape=(2, 4, 6)
bop_8504 = relay.less_equal(uop_8484.astype('bool'), relay.reshape(call_8470.astype('bool'), relay.shape_of(uop_8484))) # shape=(2, 4, 6)
output = relay.Tuple([call_8473,var_8474,var_8475,bop_8501,])
output2 = relay.Tuple([call_8476,var_8474,var_8475,bop_8504,])
func_8517 = relay.Function([var_8474,var_8475,], output)
mod['func_8517'] = func_8517
mod = relay.transform.InferType()(mod)
mutated_mod['func_8517'] = func_8517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8517_call = mutated_mod.get_global_var('func_8517')
var_8519 = relay.var("var_8519", dtype = "float32", shape = (455, 3))#candidate|8519|(455, 3)|var|float32
var_8520 = relay.var("var_8520", dtype = "float32", shape = (420,))#candidate|8520|(420,)|var|float32
call_8518 = func_8517_call(var_8519,var_8520,)
output = call_8518
func_8521 = relay.Function([var_8519,var_8520,], output)
mutated_mod['func_8521'] = func_8521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8462_call = mod.get_global_var('func_8462')
func_8464_call = mutated_mod.get_global_var('func_8464')
call_8624 = func_8462_call()
call_8625 = func_8462_call()
output = call_8624
output2 = call_8625
func_8646 = relay.Function([], output)
mod['func_8646'] = func_8646
mod = relay.transform.InferType()(mod)
mutated_mod['func_8646'] = func_8646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8646_call = mutated_mod.get_global_var('func_8646')
call_8647 = func_8646_call()
output = call_8647
func_8648 = relay.Function([], output)
mutated_mod['func_8648'] = func_8648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7529_call = mod.get_global_var('func_7529')
func_7531_call = mutated_mod.get_global_var('func_7531')
call_8652 = relay.TupleGetItem(func_7529_call(), 0)
call_8653 = relay.TupleGetItem(func_7531_call(), 0)
uop_8667 = relay.cos(call_8652.astype('float64')) # shape=(2, 4, 6)
uop_8669 = relay.cos(call_8653.astype('float64')) # shape=(2, 4, 6)
bop_8674 = relay.floor_mod(uop_8667.astype('float32'), relay.reshape(call_8652.astype('float32'), relay.shape_of(uop_8667))) # shape=(2, 4, 6)
bop_8677 = relay.floor_mod(uop_8669.astype('float32'), relay.reshape(call_8653.astype('float32'), relay.shape_of(uop_8669))) # shape=(2, 4, 6)
func_7701_call = mod.get_global_var('func_7701')
func_7702_call = mutated_mod.get_global_var('func_7702')
call_8678 = relay.TupleGetItem(func_7701_call(), 0)
call_8679 = relay.TupleGetItem(func_7702_call(), 0)
func_7874_call = mod.get_global_var('func_7874')
func_7878_call = mutated_mod.get_global_var('func_7878')
var_8708 = relay.var("var_8708", dtype = "uint32", shape = (90,))#candidate|8708|(90,)|var|uint32
call_8707 = func_7874_call(relay.reshape(var_8708.astype('uint32'), [10, 3, 3]), relay.reshape(var_8708.astype('uint32'), [10, 3, 3]), )
call_8709 = func_7874_call(relay.reshape(var_8708.astype('uint32'), [10, 3, 3]), relay.reshape(var_8708.astype('uint32'), [10, 3, 3]), )
output = relay.Tuple([bop_8674,call_8678,call_8707,var_8708,])
output2 = relay.Tuple([bop_8677,call_8679,call_8709,var_8708,])
func_8717 = relay.Function([var_8708,], output)
mod['func_8717'] = func_8717
mod = relay.transform.InferType()(mod)
var_8718 = relay.var("var_8718", dtype = "uint32", shape = (90,))#candidate|8718|(90,)|var|uint32
output = func_8717(var_8718)
func_8719 = relay.Function([var_8718], output)
mutated_mod['func_8719'] = func_8719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8373_call = mod.get_global_var('func_8373')
func_8374_call = mutated_mod.get_global_var('func_8374')
call_8761 = relay.TupleGetItem(func_8373_call(), 0)
call_8762 = relay.TupleGetItem(func_8374_call(), 0)
output = relay.Tuple([call_8761,])
output2 = relay.Tuple([call_8762,])
func_8798 = relay.Function([], output)
mod['func_8798'] = func_8798
mod = relay.transform.InferType()(mod)
output = func_8798()
func_8799 = relay.Function([], output)
mutated_mod['func_8799'] = func_8799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7480_call = mod.get_global_var('func_7480')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_8866 = func_7480_call()
call_8867 = func_7480_call()
func_8717_call = mod.get_global_var('func_8717')
func_8719_call = mutated_mod.get_global_var('func_8719')
var_8871 = relay.var("var_8871", dtype = "uint32", shape = (1, 90))#candidate|8871|(1, 90)|var|uint32
call_8870 = relay.TupleGetItem(func_8717_call(relay.reshape(var_8871.astype('uint32'), [90,])), 2)
call_8872 = relay.TupleGetItem(func_8719_call(relay.reshape(var_8871.astype('uint32'), [90,])), 2)
func_6132_call = mod.get_global_var('func_6132')
func_6134_call = mutated_mod.get_global_var('func_6134')
var_8883 = relay.var("var_8883", dtype = "uint16", shape = (65,))#candidate|8883|(65,)|var|uint16
call_8882 = func_6132_call(relay.reshape(var_8883.astype('uint16'), [5, 13, 1]))
call_8884 = func_6132_call(relay.reshape(var_8883.astype('uint16'), [5, 13, 1]))
func_5218_call = mod.get_global_var('func_5218')
func_5225_call = mutated_mod.get_global_var('func_5225')
const_8888 = relay.const([4,-9,-1,-1,1,9,6,10,2,5,5,-4,-8,10,4,2,-9,8,-6,-7,6,6,3,-8,-3,-10,8,5,7,-8,7,10,10,8,-9,-2,2,-5,-3,-1,-5,5,4,-3,-5,1,-2,-10,9,10,-4,4,-2,10,-3,-2,-3,-4,-8,8,-8,9,-10,-2,-8,8,5,-7,-3,2,9,4,4,-9,-5,-10,-5,-2,-6,3,-7,6,-5,10,-10,-3,10,-3,5,9,-10,-2,-5,-10,-9,5,-6,-9,-3,-6,-3,6,-6,6,-2,3,3,8,2,-9,3,-8,-6,-9,-7,-4,5,2,8,5,4,-5,-5,-2,-3,1,-4,6,-7,-1,-1,3,-4,9,4,3,4,-2,2,-8,-5,-10,8,-1,10,-9,6,7,8,3,10,7,-5,-2,5,10,1,-10,-8,5,-4,7,8,-1,9,-6,9,10,-4,-1,-6,-8,-2,7,-1,6,-9,-7,-8,-3], dtype = "uint8")#candidate|8888|(180,)|const|uint8
const_8889 = relay.const([1,5,-6,-5,-6,3,-10,-10,3,5,-3,-7,-7,3,6,-8,-5,-2,2,7,-6,1,-3,5,6,-5,-9,10,-7,-1,-4,-3,2,1,-5,-3,1,5,7,-10,-9,2,9,-6,-4,1,-6,8,-10,-3,9,5,9,6,9,-9,-2,8,4,8,-3,-7,-5,-8,-3,-1,-6,-4,6,1,5,4,4,9,-6,-7,7,-7,-6,-9,-3,-1,9,-3,5,-10,5,-8,-6,6,-3,10,-6,4,9,1,6,-2,-7,-9,3,3,-3,-9,-7,10,10,1,4,-8,-1,-6,10,1,7,2,-1,-7,5,1,3,-1,1,6,7,8,-2,-4,-6,-10,9,2,6,-2,7,2,-7,2,-4,1,2,-9,8,7,-2,-7,-10,9,-8,6,6,-7,2,9,6,9,-3,-4,-6,3,7,-7,8,-2,6,-4,-5,-5,8,5,6,-6,4,8,-9,8,-2,5,-2,8,5,10,3,-9,9,-9,-7,4,2,-3,-4,1,5,-5,4,-5,-5,1,10,1,3,4,4,3,-9,-9,7,-10,5,-9,1,8,-9,-8,-6,-10,-8,10,2,7,2,-6,-5,1,-4,-7,-6,-4,1,-8,10,9,-10,-1,-4,4,4,3,8,7,8,-10,-10,-1,-6,-9,5,-6,7,-9,-6,7,5,-9,-5,7,-4,-8,-1,5,-10,-6,4,-1,-9,-4,-5,7,10,-3,6,-10,8,3,9,-9,-4,-5,8,1,-6,4,-5,-1,1,-2,5,7,2,-3,10,9,8,4,9,3,10,9,10,-2,6,-8,-8,6,-5,-10,-10,10,-2,-2,-10,10,-2,-7,1,-3,-7,-9,6,-4,4,-7,-2,2,9,-7,-1,-9,6,-7,-7,-5,3,-7,9,9,5,8,1,5,6,-9,9,-1,-3,-3,1,3,1,-3,3,-2,8,-10,-9,-10,-7,3,-6,4,-5,2,-4,-9,6,3,-4,2,4,2,4,-10,1,-8,10,-8,8,10,-6,-5,9,-4,5,-6,7,-4,-7,4,10,7,-4,2,5,-2,-8,-5,-6,-3,-6,-2,4,4,2,1,9,-9,-3,5,-2,-8,5,-9,-4,-4,9,3,-3,7,4,7,-6,-8,-7,6,7,10,-9,3,-1,-4,-2,-6,-4,10,4,3,4,-8,2,8,8,-1,7,2,2,10,3,-1,-2,-4,8,6,-7,-3,-8,8,1,5,-7,7,3,3,5,2,7,-4,1,9,4,-7,-4,-8,-8,6,2,-3,3,2,2,-7,-9,-3,1,-10,-5,7,6,6,-10,7,8,-10,10,8,7,-10,-6,-9,-7,4,-8,1,8,-5,-10,2,-6,8,6,7,-3,2,-2,-10,9,-10,5,-8,9,-3,8,6,10,10,-3,-9,-8,10,1,-10,4,-5,9,3,-9,-6,4,10,7,-9,-1,-9,-9,-8,8,1,7,-2,1,4,-4,6,-2,9,8,-2,-6,7,-1,-6,-4,1,-2,6,10,3,10,-1,6,6,8,3,10,-3,-7,-9,5,10,5,-3,8,1,5,-2,2,5,5,-7,-9,5,-9,-7,-4,-4,-5,-8,-4,10,-10,10,-8,1,-2,8,9,7,8,2,1,3,-4,-8,9,-10,10,-1,3,-2,2,-6,5,-7,-9,5,7,-7,-10,-1,-5,-7,9,5,-10,8,-9,3,2,-5,10,-3,9,-10,-7,9,2,-6,4,6,8,-7,2,3,1,5,9,10,5,8,-1,-3,4,5,-3,-3,-4,-10,-4,8,-10,-9,-10,8,9,9,-4,4,-4,-6,-7,-7,-3,7,1,-3,2,-1,-2,-8,-6,2,1,-8,4,-1,-4,6,-7,-3,2,-9,-9,-5,-9,4,1,-5,-4,7,-8,-1,-7,10,-1,2,10,-6,-10,-1,-5,2,1,-10,10,-2,-8,-1,-1,-8,-5,-4,10,3,2,-8,-7,4,-10,4,4,10,-1,6,3,4,4,10,-9,-5,7,9,6,5,-8,7,4,-3,-10,9,-2,-9,5,10,4,-5,9,-8,-7,-2], dtype = "int64")#candidate|8889|(768,)|const|int64
const_8890 = relay.const([-4.255444,7.457486,-4.058931,-5.678330,-6.984018,-9.943958,1.914530,-2.223489,-4.708161,7.182295,-6.920360,-6.157961,-0.699673,-4.379073,-2.358957,6.112090,-9.591890,-2.972894,8.616736,-2.563120,4.207552,4.197292,1.107747,0.205293,-3.909602,5.710933,-4.712920,0.192722,4.919128,6.463350,6.137253,-6.986636,1.408649,-8.684004,-2.875395,-6.899305,8.460404,-7.814116,-7.349056,-1.598366,-1.866484,3.316304,-0.072185,0.042905,-6.749256,1.935772,-4.778684,9.969811,-2.608016,-3.890263,1.013588,3.594825,7.043687,4.247126,3.741871,-2.927480,5.314049,-2.588362,8.765210,1.055913,-8.363145,5.010471,8.930263,-1.091251,-0.921725,-2.792338,-9.588529,9.701408,3.264537,5.563565,-1.734172,5.655411,8.075942,6.281181,7.203364,-7.430917,-9.401398,-1.514015,-2.990450,6.119411,-4.955145,-6.772510,7.299906,-6.048678,-1.774354,5.230533,5.687438,3.658695,6.985978,9.620334,5.360545,-5.838874,3.258984,7.084647,-5.763080,7.773913,-1.793260,0.721387,8.378731,7.110164,0.027288,-4.634968,2.266731,6.925839,8.168431,9.149291,-3.244961,-8.469318,2.734543,7.398557,-7.444108,-5.198121,0.955197,1.181970,2.876978,-0.662444,4.855163,0.146265,-0.531629,8.940878,-3.290606,2.245421,5.922768,-5.133355,6.236583,-3.976769,-7.008581,4.104220,-5.791326,-1.544402,5.872059,-8.025482,-9.927240,5.041753,-7.554267,-5.025060,9.144761,5.122626,1.472801,2.966283,4.298494,-2.651291,-6.554107,8.853589,-5.695513,-1.644515,8.691310,2.718483,6.771492,-5.582933,4.733382,-0.567033,-5.495952,8.510653,0.400364,8.180971,-2.035184,7.899802,3.310236,9.642159,-2.634673,5.744862,-1.519485,9.786338,5.242261,6.297018,-3.785199,9.692310,4.740767,-5.664163,-7.778540,-4.558237,-4.152640,1.983446,-2.563608,0.106296,7.460525,-4.772365,3.706490,6.292116,-2.529664,-9.078427,-4.508443,5.963487,-7.808712,-7.757307,2.389431,-6.193140,-4.072293,2.122977,-7.627081,-3.436928,1.033880,-6.555860,-3.226893,3.940464,-2.479350,-0.167357,-3.978594,2.531883,0.554781,7.367701,-2.054293,-8.854309,4.613067,2.390115,5.103649,7.102740,8.601519,0.123932,3.746672,-5.306349,-4.982478,-4.517032,-2.548446,-4.126360,-2.119433,4.954276,1.085495,8.503674,0.251583,-7.925960,-3.719790,-6.407268,5.315359,-5.835898,-9.510903,4.725396,6.113658,2.604658,9.637515,2.074979,6.399981,-7.659676,7.227443,-8.943142,-9.492837,1.595455,-7.861909,-7.533547,6.841108,5.041099,9.823362,5.240340,-6.999880,4.609111,-3.968477,1.660038,3.265098,-2.346359,-1.701331,0.407715,6.016740,4.387384,-1.069099,-7.706886,-3.466924,-3.769448,-6.008407,-7.315517,-0.244389,-2.930152,6.527678,5.181430,9.303316,2.230443,-4.511959,-3.905980,3.443144,7.555223,-6.099634,3.300738,8.453723,-1.420394,8.766731,8.244096,-3.802220,-9.954650,3.134283,-8.028523,9.268639,-5.241542,3.715765,-7.265531,3.311903,-4.162070,5.709985,-8.960952,0.357090,-4.258883,-5.725605,3.389291,8.174007,-5.493128,3.375801,4.191014,-6.478513,-9.065425,-6.723369,-8.134611,-3.947486,2.126730,-7.014339,6.919008,5.780132,1.463760,7.644370,-8.208820,-1.776267,0.681979,-4.745763,6.393864,3.470035,-3.326780,-8.997256,4.764229,2.993023,-3.354065,-3.195608,-9.715910,0.682726,0.417703,-5.530592,4.253290,-7.509020,-1.158625,6.663137,3.080449,6.743010,-3.621405,-6.916918,-7.569113,9.293868,-1.411855,-2.167105,3.629359,-8.559646,-4.237484,-7.966436,2.245130,1.137513,5.904430,2.707185,8.030849,-1.516044,-7.642126,5.533143,2.295477,5.623656,-0.229680,-1.892959,8.386138,6.598924,1.376976,1.666048,-6.427502,-7.465804,7.446700,9.160664,-2.712317,2.718356,-0.580255,2.563936,6.140176,9.154702,5.996911,9.010673,-8.082716,-5.499562,-8.489200,3.951602,-8.806916,8.356423,5.454728,-4.336826,-0.895344,0.551696,-9.126671,-5.249146,1.238338,-6.353092,3.659554,-5.682385,-7.648936,9.224511,-9.532138,8.937627,-0.192129,8.470283,6.433829,6.976304,9.962743,2.742035,-4.412673,1.098736,4.648805,-4.721709,3.727241,3.966490,3.852542,-2.331046,0.473530,7.473899,-7.061401,6.389218,-6.018655,-4.876045,5.354978,-9.757527,4.897220,-1.177750,6.302620,-2.094875,1.560839,-8.524747,-7.106483,-7.777367,-3.736329,-9.055307,-0.822876,3.601454,-1.749709,-1.946502,3.368268,3.341630,-9.435776,6.988303,-6.044913,-7.808154,3.998771,7.989418,-3.367009,2.865652,8.952232,6.521758,-8.349399,-2.772613,-0.118825,-2.063728,7.687770,9.191624,8.936106,1.042722,-1.556448,7.729769,-4.069757,6.153708,9.874495,-6.899647,-3.443832,-8.737578,-8.961754,-2.598559,-5.847007,-3.549663,-8.670703,3.922512,-1.562002,-7.596533,5.425580,7.131781,-5.892676,-6.226924,5.685266,-8.203166,-7.062736,-5.056017,7.726104,-1.307254,-9.759080,-9.257054,-8.009475,-9.839813,-2.287836,9.983670,5.689257,-1.824146,0.415818,5.720089,5.428313,7.870081,-1.316473,-3.713187,-6.749255,5.384471,5.406347,0.726067,-2.812048,-1.997980,-8.667669,-8.156736,-9.600947,0.218468,4.955207,2.877861,-0.937116,-6.738115,-2.022365,8.857789,5.308368,0.876318,-8.046463,-8.893256,8.515840,4.147620,-6.766896,2.961283,-0.237517,0.987125,8.803182,-0.639854,5.841764,-6.268595,3.732703,-9.855195,1.135862,3.186401,-6.700206,-6.506201,3.750541,-8.538340,7.370636,-7.243987,-3.992095,3.732506,-0.583467,-6.872250,-3.366228,-3.391456,-0.876884,9.766762,-7.165954,4.956234,-7.927114,-9.162424,6.694946,-8.204500,-7.556915,1.077453,-6.528492,-5.979392,-0.619787,-7.897389,-1.386193,9.388215,1.036591,-5.412785,6.415155,-3.180903,3.812594,4.602567,8.911674,4.105022,0.133358,2.085540,0.463725,-3.658252,-3.573612,-1.802033,0.600834,8.995522,-2.640162,0.966140,6.875251,-4.139636,-5.022620,0.570385,3.804216,-1.607828,5.321682,-6.418985,3.022511,6.075531,9.135896,-4.740580,0.862686,9.905729,5.247159,3.786756,-0.027170,0.252624,-0.551259,1.079148,3.402314,-6.192695,9.277710,2.466102,9.357640,-1.125622,0.181466,-8.361358,-7.835664,-3.823545,-3.425864,-8.412901,0.861599,8.564385,-6.928412,5.648657,-3.491765,1.072372,-0.185818,4.872603,9.205736,-8.379725,-6.209507,3.346241,-7.365658,5.651378,0.876749,-7.664608,4.941242,-3.736164,-8.301179,-2.170675,8.962544,-9.830149,-9.106981,-2.149955,1.295308,-8.472333,9.319309,-1.193357,-9.462837,-8.989354,1.895098,-2.307105,-7.579800,-8.249415,1.698431,-2.583033,-4.866160,-4.612576,-9.683409,-3.564329,-0.531692,2.501980,-5.154527,3.201386,0.897986,3.816285,-9.432190,-6.901607,-0.841065,0.561661,0.987483,8.996774,-3.788590,-1.743219,-7.752685,-4.715389,-3.822237,-5.342384,9.365496,1.235454,4.877329,1.999864,-1.640052,-7.372958,6.541872,-9.367525,9.600854,-1.898672,-6.911287,-4.949230,-9.415388,6.937816,4.641895,0.475259,0.272471,9.981447,6.098053,8.023653,-0.800665,7.018457,7.378566,-4.348402,4.289564,2.644960,-4.900871,-1.622661,-3.429752,7.523076,3.023971,2.063797,9.814702,9.079284,5.159199,-1.330929,-6.682582,5.326466,-8.602263,3.349539,9.204050,1.504272,-5.762430,-2.353171,9.720719,-1.300790,-8.743170,5.765232,4.203444,6.634870,3.077500,-6.074369,3.485528,-2.286748,-7.615390,2.505960,-4.210735,1.442197,-1.396779,3.056770,9.949541,-5.231360,6.593810,3.751750,-9.734408,-8.960402,-3.232906,6.495683,-1.430234,8.432552,6.215261,-5.538829,0.698002,7.381597,4.003885,7.379258,-5.068651,4.146222,-4.333411,-8.175041,5.891267,-3.115395,-1.772295,2.066722,9.888550,4.978121,1.711067,-9.585713,6.213692,-0.614815,6.785219,7.999554,1.457526,4.232310,9.829930,-0.054923,-2.255390,-6.700806,-0.428239,-6.279759,7.676307,4.621502,2.151864,0.459250,3.468201,-2.519642,-0.128913,-9.975616,-8.925848,6.439304,-5.850115,-1.523092,-8.604321,9.795497,-2.186664,9.605114,5.164890,-2.851311,-3.870877,9.607070,2.183969,-9.111804,4.117062,4.119505,0.323735,5.558331,-9.584456,-3.439766,-6.525226,2.023319,1.977355,-7.161877,0.760616,-4.367220,3.926429,2.094696,6.673425,-8.393512,5.947065,-8.054492,-4.668506,-1.337072,4.605498,8.459352,-8.046694,-0.892544,4.808038,-9.551609,4.643547,5.296821,-9.591219,6.106227,-5.597798,-9.498782,4.175555,-1.122456,-5.621452,-6.344935,-4.047367,1.599834,-9.518881,-7.272096,4.030858,9.425460,1.476184,4.748657,7.621615,0.757504,-9.024621,1.790366,-1.528027,0.847219,-9.014009,-8.713581,9.275539,9.890895,0.061651,-3.615156,-3.255894,6.702699,-6.559188,5.913286,9.001954,4.260294,-8.428571,4.981606,0.268525,6.074863,-5.735049,-2.756563,-0.099667,-2.677560,5.534376,-5.727537,-3.045192,-3.158343,-5.965606,-5.631162,-7.193981,3.526924,3.127681,-8.225977,9.416530,-3.281132,6.803349,7.241757,5.463769,-4.242476,-1.708227,-8.956342,-4.683591,5.626505,0.267791,2.464542,-5.986930,-2.756062,2.037870,-0.949156,4.550486,7.912977,3.866134,-9.875561,-9.995019,2.365047,8.190334,7.703949,-7.634951,-1.366041,-1.062732,-3.271320,-2.697950,-7.905675,7.437241,-9.752638,-7.555059,8.696146,-1.659908,-2.514778,-4.338488,-1.698395,9.361310,-0.920259,-6.755162,5.597855,-6.058806,4.506468,3.446553,-8.887903,-7.779822,7.353304,-3.051908,-9.194568,-2.145102,7.116314,0.658961,-4.410881,7.270947,-5.049341,7.251094,2.075314,5.199597,-1.506836,-8.556505,3.098955,7.416473,5.357030,-1.510513,-4.831872,-7.593164,1.715495,7.854297,2.065804,-0.521861,9.579948,6.075484,2.405506,3.438241,1.529279,8.541459,4.128927,8.752308,-0.144517,-3.592540,-9.794928,3.025434,-0.111437,1.011129,6.119293,-9.642281,7.287606,9.711909,-1.641267,-4.103320,8.560811,4.020114,-8.233898,6.067826,-5.496087,-2.133855,4.207775,-0.951757,-4.035100,8.877645,-3.841037,-0.104070,3.116104,-7.478957,9.022510,-4.220624,-0.547525,5.619887,-5.173582,-2.058909,-0.295990,-4.335281,-8.544177,-0.081002,-2.615012,-9.501394,3.918531,7.022121,8.708754,-7.498507,-2.633931,2.409138,-0.397710,-6.546847,7.135378,2.641773,0.516699,6.930005,9.940371,-4.807025,9.287651,-6.730119,-8.660272,-6.489555,9.721277,-3.872386,6.643730,9.184628,-3.473067,-7.001287,-6.731973,8.965163,5.626002,7.527482,-3.488305,3.031800,-3.796074,-2.532028,6.084267,-7.544261,-7.040131,-1.973611,-9.281138,3.491481,3.092582,3.122264,-7.797078,8.865839,0.529103,-1.520343,7.983527,-2.247374,0.043858,-3.979571,6.844019,2.144440,6.468404,1.607065,7.191587,-3.114075,-1.101544,-9.798770,-6.275290,3.151561,-0.877953,-6.336459,6.776929,-2.458936,8.814307,4.981398,3.410359,-9.041475,-3.468747,4.834484,3.214031,3.550053,3.038459,-7.799649,1.394554,4.065253,0.208898,3.621393,-9.681217,3.423537,-1.316496,-5.385869,1.361635,-0.415989,-8.657386,-6.073314,7.264884,-8.845661,0.863390,6.934001,-0.983689,8.051610,-6.490718,-4.447739,-5.397663,-2.780606,-0.953479,-0.093855,-8.214038,7.613770,-9.927522,-5.406358,7.756985,-1.965324,2.568248,-0.761424,6.508910,1.398254,-3.326265,-9.071496,6.048339,-5.204314,-4.141576,7.366994,8.803833,3.538887,-4.914366,-5.419763,-7.278255,6.099093,-2.229769,1.087350,1.611165,4.073015,-8.500404,-0.603065,-3.055972,4.611137,8.824598,0.674746,-4.455211,3.558474,-3.808967,-4.538491,-3.637435,-1.701182,8.566529,-2.536681,-6.468738,9.399528,-0.273864,-8.584590,-7.327884,3.744427,8.927510,-5.699599,3.438336,-1.716291,0.039344,1.156554,-4.299551,-3.337273,4.715637,-8.889460,-7.360059,9.746743,4.784747,-2.847535,8.352497,-0.570397,-1.177528,-3.554663,-0.828732,-1.559953,-0.788147,1.888580,3.073007,-0.588058,6.487473,7.728574,-1.457570,-1.113264,-4.060816,3.282485,-9.797846,-5.269609,6.326014,-6.360136,-5.904553,1.196216,-1.733686,8.193138,0.582912,7.326386,5.112229,-5.416057,7.885482,9.920789,3.325632,7.921679,-6.225684,4.843405,6.635829,3.687610,-8.793672,-8.119053,-4.518563,-0.448131,5.915496,-7.763102,-2.561393,1.481967,8.990662,-6.878776,9.211003,-6.519839,5.831203,7.494344,2.763519,-8.342496,-9.461664,2.477987,5.918639,-4.636128,8.282914,2.666429,6.222373,1.733282,8.280298,-5.366688,0.801217,8.273633,-4.210070,9.188477,7.894773,5.982737,-4.419999,-2.704780,-4.033502,0.542712,5.345398,-0.064317,7.084200,7.688278,3.028946,6.143512,-3.701443,2.621479,-5.911369,5.802420,3.619211,3.480336,4.542424,5.270567,-1.752339,4.460737,0.172089,-4.882047,6.052583,0.053039,5.977525,0.683113,7.485471,-4.791875,-2.497004,-9.421038,-4.242779,8.206528,6.174015,-7.706357,0.725527,-7.247883,4.355058,1.387266,-9.853132,6.120770,-1.657657,-7.333977,1.258058,6.816809,-4.485740,0.290564,9.881356,-9.216182,9.089006,-5.516165,-4.677083,0.939815,3.065569,-7.040677,-4.396856,-7.992450,-1.848670,-7.177892,9.178561,8.096012,7.190188,9.958625,-5.906666,-5.202699,-6.520373,-2.887762,1.247693,-9.758261,4.108847,-4.140934,-7.658377,-4.586635,1.048925,-8.378106,-2.486240,-8.582936,3.430676,-7.175945,6.669104,2.447176,6.661134,-9.931059,-6.304528,7.191873,8.179708,9.413117,-0.524988,0.549200,-3.920350,0.777909,5.086895,1.323428,7.406184,-9.725541,-1.682132,-5.523229,-1.056997,-4.495961,9.879312,-3.461673,3.381554,-6.190152,1.355846,-1.133844,1.441108,-4.944349,8.183755,9.402705,5.927208,-3.753257,-4.973444,6.597660,1.192864,2.406513,3.014681,-4.474520,5.875782,6.612234,-1.779392,-0.697357,1.242738,-6.141343,-3.002396,3.333419,-1.382011,0.937218,-6.557714,0.650109,-2.871566,-0.972356,-6.220278,5.657083,2.581481,-3.307686,-2.692340,8.907430,0.244922,-3.778009,-1.849910,2.233785,2.558993,6.640104,9.062204,-0.748635,4.672059,7.417570,0.882387,6.715277], dtype = "float32")#candidate|8890|(1344,)|const|float32
const_8891 = relay.const([-9.333503,8.146750,9.151464,-0.712643,7.307016,-9.399194,-8.765443,-9.471633,-4.940963,-0.931691,0.769818,0.314871,-9.023670,6.804146,-8.566358,7.491502,-2.627972,-4.395293,-4.540516,8.358682,-8.354004,5.706294,8.417978,-3.482730,-7.901183,4.414311,3.325884,-6.023853,9.517086,3.430660,4.395756,-8.883483,-0.235020,4.300913,7.533329,-2.639470,8.558081,5.116489,-3.659651,-8.514645,-1.804445,-4.319903,2.478732,6.332096,6.066973,-2.920588,3.090164,-3.438847,-5.735948,-2.737123,-8.044518,8.344447,-1.745985,-3.172585,3.349235,8.221829,-0.037181,9.294049,-6.362661,-8.646949], dtype = "float32")#candidate|8891|(60,)|const|float32
call_8887 = relay.TupleGetItem(func_5218_call(relay.reshape(const_8888.astype('uint8'), [9, 10, 2]), relay.reshape(const_8888.astype('uint8'), [9, 10, 2]), relay.reshape(const_8889.astype('int64'), [768,]), relay.reshape(const_8890.astype('float32'), [1344,]), relay.reshape(const_8891.astype('float32'), [60,]), ), 5)
call_8892 = relay.TupleGetItem(func_5225_call(relay.reshape(const_8888.astype('uint8'), [9, 10, 2]), relay.reshape(const_8888.astype('uint8'), [9, 10, 2]), relay.reshape(const_8889.astype('int64'), [768,]), relay.reshape(const_8890.astype('float32'), [1344,]), relay.reshape(const_8891.astype('float32'), [60,]), ), 5)
output = relay.Tuple([call_8866,call_8870,var_8871,call_8882,var_8883,call_8887,const_8888,const_8889,const_8890,const_8891,])
output2 = relay.Tuple([call_8867,call_8872,var_8871,call_8884,var_8883,call_8892,const_8888,const_8889,const_8890,const_8891,])
func_8893 = relay.Function([var_8871,var_8883,], output)
mod['func_8893'] = func_8893
mod = relay.transform.InferType()(mod)
var_8894 = relay.var("var_8894", dtype = "uint32", shape = (1, 90))#candidate|8894|(1, 90)|var|uint32
var_8895 = relay.var("var_8895", dtype = "uint16", shape = (65,))#candidate|8895|(65,)|var|uint16
output = func_8893(var_8894,var_8895,)
func_8896 = relay.Function([var_8894,var_8895,], output)
mutated_mod['func_8896'] = func_8896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8798_call = mod.get_global_var('func_8798')
func_8799_call = mutated_mod.get_global_var('func_8799')
call_8898 = relay.TupleGetItem(func_8798_call(), 0)
call_8899 = relay.TupleGetItem(func_8799_call(), 0)
output = call_8898
output2 = call_8899
func_8916 = relay.Function([], output)
mod['func_8916'] = func_8916
mod = relay.transform.InferType()(mod)
mutated_mod['func_8916'] = func_8916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8916_call = mutated_mod.get_global_var('func_8916')
call_8917 = func_8916_call()
output = call_8917
func_8918 = relay.Function([], output)
mutated_mod['func_8918'] = func_8918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7098_call = mod.get_global_var('func_7098')
func_7099_call = mutated_mod.get_global_var('func_7099')
call_8970 = func_7098_call()
call_8971 = func_7098_call()
output = relay.Tuple([call_8970,])
output2 = relay.Tuple([call_8971,])
func_8974 = relay.Function([], output)
mod['func_8974'] = func_8974
mod = relay.transform.InferType()(mod)
mutated_mod['func_8974'] = func_8974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8974_call = mutated_mod.get_global_var('func_8974')
call_8975 = func_8974_call()
output = call_8975
func_8976 = relay.Function([], output)
mutated_mod['func_8976'] = func_8976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7993_call = mod.get_global_var('func_7993')
func_7994_call = mutated_mod.get_global_var('func_7994')
call_8977 = relay.TupleGetItem(func_7993_call(), 0)
call_8978 = relay.TupleGetItem(func_7994_call(), 0)
func_8517_call = mod.get_global_var('func_8517')
func_8521_call = mutated_mod.get_global_var('func_8521')
const_8995 = relay.const([-0.639717,-8.532396,-6.741917,-2.211931,8.244121,9.679269,8.260233,-1.698426,3.353583,2.907822,-4.941426,-8.528984,1.468579,5.797277,-8.463487,4.720027,0.281606,0.296620,8.922983,6.822385,-5.842685,-2.928191,-4.245903,5.392879,-3.244204,2.801002,-6.486520,8.304099,-1.826359,-3.522891,-7.515321,1.085904,-3.571336,2.363584,-0.555358,-9.875912,0.334410,9.898890,-6.101353,2.791397,7.111153,2.099502,-5.467962,8.668107,5.316561,6.578231,8.646454,-1.473025,-7.078914,8.386426,-1.384313,6.680035,-8.921283,0.050783,-0.732530,5.616214,4.583018,6.218611,-8.744031,-9.863796,-2.663073,5.896206,5.920972,0.221187,-1.545618,-2.618069,8.360194,-1.982068,-7.178044,-0.500543,1.224871,-0.633013,-0.183744,-1.475713,-1.914120,-8.886056,7.123237,3.435520,6.888715,-9.781129,1.751396,2.538631,-6.598201,0.351836,9.497376,5.997493,0.096475,-5.422202,2.957158,-4.593372,1.704530,2.588603,1.102111,4.821482,4.289796,-6.590547,1.759964,4.193766,7.030572,-1.003478,-3.833724,1.115374,-4.611732,1.485203,0.974856,3.026524,4.366738,2.370974,7.169238,1.474297,-5.335307,-6.481699,7.321543,7.038576,-8.345279,-4.111457,-7.339701,-1.623325,5.970161,-8.412456,-1.129245,1.291824,-0.983920,-3.494976,-6.973901,5.228979,3.914656,-2.499530,3.006896,0.846926,6.585126,0.817668,-7.958124,-8.115070,1.356251,-1.572736,2.349898,5.804963,-8.561989,6.943869,-7.536196,2.966120,-9.571001,-2.013612,0.741481,7.229658,0.443508,-0.706889,7.812925,1.138807,-9.775822,-4.111614,-8.675028,7.839683,0.550671,8.410900,3.134466,7.127411,-4.498320,-2.201466,9.245777,-0.199098,-4.794948,-1.108678,-3.173511,-6.114441,8.327331,-3.957589,1.557439,-9.533953,-3.060150,-7.462745,-2.032694,-3.984241,5.334931,7.171084,-9.556619,-3.748742,-1.893564,-7.327223,-4.357708,9.381988,2.561007,6.773281,-9.704474,3.171834,7.595136,-2.407608,8.493509,-4.516661,6.136147,-3.263183,-3.305665,-7.677774,7.865255,2.793678,-4.804552,-9.084839,-0.932265,-4.508396,1.723699,1.000970,9.140400,8.343159,-3.735862,4.711463,6.415279,-1.150616,-0.182568,-2.935622,3.375898,-4.249603,8.361421,-5.339588,-6.539650,-6.460517,-5.873506,3.793087,6.139641,1.354032,-7.448743,-7.500814,-9.631421,8.385876,4.062074,-9.933279,7.397217,-4.617677,8.778839,-6.576806,9.775938,-3.719793,4.841157,6.453289,-6.002416,-4.395853,-5.037866,-5.493973,6.715626,6.283169,3.301085,-9.449097,-9.584737,3.806026,9.703197,-1.892096,-1.794992,-3.268803,-5.276414,8.086653,-6.188674,1.630643,-8.824240,2.042757,-1.576017,-5.532741,6.602266,-1.727171,-9.180676,9.967389,-6.161480,-6.115530,-3.802079,-4.140051,7.844740,6.825482,1.342968,-4.407811,-7.221824,-7.510961,-7.968948,3.871346,8.092427,-3.195974,3.258659,2.227731,3.305444,1.656026,-7.675837,-8.839553,8.670135,-2.321654,-3.413842,-7.793327,-0.726072,3.441735,1.804817,-3.335123,1.325547,-9.000624,2.107551,-5.998060,-4.638249,-4.474092,5.032837,-5.691047,8.686506,0.257661,6.960709,-1.252030,-7.648288,-2.652792,-3.834999,-4.357817,2.680509,2.729613,-2.857688,7.954918,8.065573,-3.194278,-3.357752,5.990618,0.798670,-1.512490,-9.498726,-5.148337,-3.734502,-4.646751,-1.236458,-6.616725,-2.071096,-4.322950,7.312233,7.957227,0.729143,5.922993,-1.116509,1.220023,-2.628897,-7.536572,4.615634,1.239669,8.312958,-5.128996,9.808728,-7.840132,-9.940951,-4.263021,-9.721844,-0.565896,3.457340,-4.248479,-4.285154,5.748113,2.589292,7.958201,2.571050,-3.082891,0.385747,-0.376140,-7.465746,-3.026557,7.435147,-6.198316,-3.772936,5.180188,7.130024,3.172738,-6.506211,-4.531897,-4.458319,-4.050310,-1.712290,-1.267007,1.121556,-8.053081,1.200542,6.949188,-5.890918,3.196662,-1.012585,-3.848766,-8.587776,-2.053042,6.989419,-3.564265,-8.865414,5.328897,8.817402,-7.179813,-9.933600,-1.127096,7.497635,-9.819609,-6.400505,-1.194023,-5.365177,-2.201126,-4.774990,9.498940,2.216875,5.759174,-7.983611,-9.525169,0.195375,5.578450,-9.449281,0.686355,2.830517,4.666353,2.271289,-2.120962,-1.609298,-5.585835,4.476163,-2.912138,2.296893,9.752395,-1.871232,-9.965159,-9.287320,1.461191,4.175979,8.934498,-1.863943,-3.058246,-1.735129,-8.337763,7.201026,-6.628306,-4.364311,9.796891,-3.288333,-9.916791,3.112276,-1.137079,-2.722118,-5.862580,4.968849,-5.528362,-2.768101,1.116757,1.194685,8.849316,9.146278,-8.870672,6.348705,5.710974,-6.261873,-9.942120,-2.843079,8.708915,3.632453,3.399638,8.670201,-0.689808,-2.770886,5.319825,0.185271,6.121071,-7.478293,8.870763,8.720209,4.582970,-3.639996,0.706624,9.605590,4.843130,-5.148288,8.098755,-7.526460,0.922592,2.975074,-1.452880,-5.109183,2.428929,8.660989,-2.664112,-5.707718,-7.688120,9.671903,9.365396,3.115220,5.696671,6.880902,0.863582,3.650865,7.249891,0.270249,2.006241,0.571828,-2.007869,5.710508,3.708761,7.977266,-1.457451,-7.889026,8.067877,-8.795019,5.331504,7.685655,2.330994,-4.678045,5.263593,1.340231,3.313687,-6.027736,6.795281,-2.467599,6.167457,8.792567,-1.871532,9.898527,2.858426,5.734552,-5.667505,1.605456,7.365606,-2.965073,-3.186129,4.391689,-3.147569,8.416205,-6.069186,-5.134232,9.269252,2.831153,0.849602,0.045159,4.531514,-7.277468,0.315655,0.745583,0.336558,-5.879952,2.722752,2.756018,5.330673,-5.964592,-7.250182,0.008891,-4.068185,0.241340,6.818950,-7.244775,0.760669,-8.079386,-4.653051,5.666965,1.272829,6.563407,-1.474246,-0.129964,-5.496885,6.209442,-7.422648,-1.540482,8.506006,-1.188819,5.496959,2.745753,2.529212,1.237411,-2.216236,5.681704,-2.350263,-6.380724,6.400903,-8.678736,5.276974,-4.721167,-1.028607,-6.412963,3.241236,7.852423,1.323184,4.389958,-6.878702,5.416869,-7.090229,8.403922,9.779653,3.329426,-1.295178,-0.431954,5.314000,8.112908,-1.113808,3.889035,8.200055,-5.974964,-9.919850,6.898632,-7.006355,6.968049,-8.601996,-3.899719,-3.548116,-8.743701,7.693989,5.991796,-9.446288,0.116923,-5.523866,-7.975817,8.143040,0.962663,-5.006436,-3.491355,9.732565,8.391056,-1.154042,1.250433,0.618285,-2.111808,1.743086,2.593646,-2.272401,-2.465269,-6.270456,-5.988840,8.860881,8.591432,9.500968,-0.638959,4.815689,-0.738090,1.544845,-2.694698,1.282901,-8.750540,-9.733834,-0.636549,-2.697966,-9.537093,1.185898,-8.301352,-6.586519,6.838797,4.221901,-5.122998,1.621781,6.356736,-0.384390,-8.973512,-0.483202,-6.421841,-5.928145,7.522394,7.857609,0.936923,2.281808,6.664092,9.208927,8.769102,1.514729,4.660868,-1.932027,7.572587,4.127377,-2.376071,-7.390521,-3.228166,-3.866630,5.853123,3.443813,-3.552744,-9.857306,-5.157065,-8.830000,3.282271,0.474136,5.427385,0.638445,1.298095,-0.801791,-9.260220,-1.138822,9.685998,-9.252773,1.570689,-1.780105,-9.966791,9.131492,-4.060626,-8.624976,5.641895,8.486784,1.200835,-9.286559,8.438788,7.988086,8.753727,-4.384153,-1.509945,-1.511732,4.779706,7.217401,8.086722,-7.749598,0.728242,9.895058,4.928567,5.739479,0.977095,0.476036,-8.448329,-5.839309,-3.489856,-2.789464,-5.043828,-9.202195,0.320690,9.319525,4.467463,0.235480,0.236450,0.374499,7.819133,4.493555,-9.195641,0.207527,7.621539,1.330906,-3.365566,-0.524549,-7.397790,-5.102502,3.576501,-8.732737,-6.441521,3.371804,0.672911,-1.678813,5.369925,4.271171,-6.446356,-4.459937,5.051975,8.825403,8.729904,-5.412832,8.252609,-0.793230,-4.751427,2.338251,-3.236730,-0.675000,7.269627,-3.190902,8.180716,8.645957,-1.863682,1.836748,1.647631,1.093500,3.240460,-3.079339,9.240538,3.357203,8.777887,-4.386046,4.091163,9.221331,0.957308,8.879593,-1.549781,-4.274361,-2.402887,-8.457814,-5.624091,-1.898288,1.325714,-6.866622,7.640823,-7.611661,-5.655019,-9.964009,-7.809812,7.846245,7.119594,-7.363233,2.067078,-1.235741,-0.576046,0.741627,4.879838,-2.786016,-2.084868,6.553100,-9.647680,-4.008806,-1.811990,-1.770220,7.574482,-0.018643,-8.540796,-9.208898,4.182602,8.440300,5.830489,-6.343258,9.511794,9.801324,-9.607376,2.951343,-2.712191,6.673564,9.092420,4.780575,1.740859,8.601056,-2.715147,4.516819,1.390782,-3.725140,9.426591,9.073660,2.056053,-7.347507,3.452915,8.284881,-7.616142,-3.014545,-9.778772,-7.628891,1.920391,-9.280416,5.975937,0.598228,-0.442398,6.666114,-8.071194,-5.342092,9.622534,0.337582,6.975088,-4.875712,-5.157175,3.209720,8.624778,-4.871731,2.630700,-3.183532,7.993070,6.221209,2.923348,4.229938,9.335830,-3.054063,5.326977,2.756296,-7.271560,-3.320347,-6.425025,6.382591,4.101568,-3.510243,-7.217921,4.998452,-9.031737,-2.740693,5.950499,-9.625599,1.235433,0.094836,-9.609915,3.488884,-1.708111,1.223824,2.163906,-4.947170,2.845248,-8.287832,-4.029814,4.230123,-9.456951,-1.920664,5.790930,5.299782,1.049253,0.280516,1.698524,-2.178868,-0.782978,6.936800,1.309821,-5.303217,-9.298024,-8.552484,-4.039399,-5.122926,5.938775,-3.548686,9.642077,-6.753891,-2.905227,-7.072165,-9.951295,-9.877878,1.187839,2.807966,8.202620,9.567310,-7.574707,-6.374833,1.509154,4.725149,-9.662303,6.603930,3.700261,-5.048424,-1.806423,-2.262888,-5.483948,0.281887,-7.484650,-9.552751,5.339618,1.816351,1.555286,-5.484482,-6.228887,-7.258649,-0.059064,-3.067794,6.028954,1.729940,-2.332560,-6.009002,-8.551794,-8.068935,-7.106013,2.485161,-1.180094,2.388901,-3.580912,-5.515843,-6.756110,7.969580,-8.921272,-4.800379,3.386805,6.176879,3.809057,-4.574448,-8.303622,-3.990472,4.906905,-2.099105,2.777556,0.535125,2.975048,-4.136776,-7.674575,-1.881966,-3.096678,-4.805365,2.056054,5.550973,-5.061578,-1.638991,-9.886802,5.741495,-6.318902,9.067241,-4.693939,-0.983327,-2.797572,8.888546,-9.248940,9.547921,-0.026138,-7.844002,-6.079488,6.288193,1.769800,2.667171,-1.299614,1.339792,-4.441843,-1.295709,-9.538003,-0.804734,-1.862607,3.239511,-2.628980,0.580870,7.481184,-8.699960,1.648734,-3.869520,8.126002,-5.437802,-2.717071,3.861331,-7.375334,1.143236,-0.658790,8.324649,5.251182,0.696594,4.957292,8.949232,7.903608,-5.546096,9.447873,4.723331,-5.479888,-7.679685,-1.980654,6.699557,-6.116756,9.496875,6.753969,7.147932,6.185212,-7.659554,9.246972,0.969963,7.567625,3.976350,-0.945732,5.142957,-1.672432,-5.785017,4.893602,8.623640,-6.555829,-6.612635,6.792829,4.017482,8.862777,9.162756,2.290203,7.742197,3.194583,5.515831,9.041430,-1.739265,-6.185724,-7.872915,2.267863,1.219400,-5.137642,9.420732,9.051585,4.727371,-4.569935,8.197289,0.775573,-2.251532,6.758907,9.608655,-1.588920,-1.665254,-1.610752,7.637703,-0.473345,1.598554,-8.303304,-0.942703,5.267475,-5.773266,7.620759,4.864098,-5.377226,0.564986,8.279679,3.905853,-9.922725,7.657923,-5.886133,-2.466415,0.753370,-8.995556,-8.020217,-5.743996,-1.213581,0.323392,-7.585884,-7.982872,-8.465520,7.617860,-2.434214,-5.250843,-8.011228,1.386235,-3.295112,-6.353847,-2.760740,5.476006,8.945154,-7.004002,5.722229,4.872818,8.223865,-0.942902,9.085783,4.987514,-9.653523,9.905875,7.808283,-6.388743,-7.668499,-0.925842,9.397537,-1.139966,5.372476,-4.751329,-8.392019,-2.976803,2.221762,-3.330618,-0.276674,4.113923,6.588702,-6.238634,0.124303,-5.026753,3.430124,-7.532827,-1.425979,5.702289,-7.937866,-5.747354,-1.802016,-1.489647,-5.572575,-8.221839,-3.229075,5.903323,-6.445238,2.584034,-5.565912,-7.617687,-0.262223,-7.223795,7.898992,-6.775525,0.173830,-2.150340,9.554829,-4.842827,5.109216,7.949339,-1.605610,3.649789,-8.747525,-9.680208,-7.030298,-2.382235,-1.879150,-4.887923,-0.542125,5.577284,1.988375,3.013545,-9.224680,-5.756618,0.723925,2.300452,6.072089,-2.775980,4.053359,-3.444745,3.123186,-6.886226,-0.548187,0.780943,3.542198,-1.420588,9.245572,-0.135101,0.066154,2.948039,-8.080522,-5.666447,-2.767473,1.125064,-6.514902,4.552548,-3.003625,9.754364,-4.812069,9.744281,8.678614,2.822858,-4.891890,-6.283407,-1.891053,-3.934072,-8.817529,-8.415890,7.232199,7.206323,-6.615766,-8.704228,-3.480299,7.163774,-0.496350,9.754218,-2.394890,-6.654942,-8.001702,2.390242,5.541050,6.932088,-8.884970,-6.296380,1.394305,7.249940,-5.630087,-4.410398,7.132909,-6.659186,-6.372055,7.415328,-0.033741,9.826387,-1.927291,4.564773,-7.755823,-9.369873,5.140832,9.405499,-9.157335,-8.762382,-8.766437,8.169284,-3.873554,6.949409,3.726213,6.733219,4.109523,-5.248354,4.863260,3.662781,-8.039293,4.567083,-6.690791,-8.919101,5.179255,1.453338,1.496501,-2.380830,-4.156347,0.504212,-1.759254,5.554935,3.598975,-3.849598,-9.641920,2.850575,4.187874,-3.896417,3.863461,-8.713457,2.754920,-0.718308,-6.745409,-1.780446,-3.615049,5.436123,-9.202225,-5.271864,-0.037665,5.332304,-5.076148,-8.072777,6.916395,6.059703,7.545444,9.601660,-0.128033,-4.114735,-6.690338,6.739653,-1.867435,-6.512741,-4.794785,-1.941902,8.481967,8.969087,-8.495448,9.274703,-6.713583,-6.744934,-5.587027,-6.388058,8.229856,0.420489,4.798538,8.078744,2.677016,-9.921130,-1.095220,7.702818,-2.303532,-2.923970,-5.049777,-8.728818,-2.170515,-6.045579,9.537082,2.503435,8.332268,-2.763991,-6.478386,-4.750332,3.909509,0.818060,-7.336027,3.120148,5.649216,2.631866,0.280252,-5.592788,5.421258,-3.806696,0.734231,9.726196,9.146237,4.832302,3.698870,8.437207,-9.849894,4.798191,4.887144,-9.491219,-8.729553,-3.501340,7.595296,1.025424,-5.145166,4.934123,-3.966454,-8.079246,0.715113,5.202886,-7.041390,8.210613,9.439815,2.109018,-4.653226,5.230046,1.472502,-4.397445,-1.154422,5.835805,-8.774702,-0.058045,-2.720785,-6.854097,-9.835856,-7.025943,-5.066499,5.589886,-8.733162,8.964081,-3.908104,3.324030,-7.399164,6.418109,-8.054353,9.548783,7.676036,5.261524,8.164995,6.332455,5.615968,-7.652357,-7.392622,1.721789,-5.058873], dtype = "float32")#candidate|8995|(1365,)|const|float32
const_8996 = relay.const([-4.020383,-2.158864,-1.095717,5.118146,6.694319,0.096301,-7.981989,-5.665063,-1.811993,7.176739,-7.862867,-0.310085,0.058307,-5.610461,-3.161442,7.618027,6.810441,-9.147212,-7.454042,-3.269131,-0.070586,-4.372995,-8.570303,0.675373,-4.945602,7.041934,-2.720147,-4.560376,-3.757021,-3.591912,-3.678557,0.835167,5.598593,4.854161,4.707197,-4.058317,9.192862,-0.203215,3.082624,-1.222508,2.247463,-8.909102,-7.079493,3.823957,3.158824,9.727680,9.705605,-8.447402,-5.181034,7.818501,5.262077,9.659261,-4.069050,-6.621099,5.310983,-4.459944,-0.920526,-7.272503,6.772363,7.714045,7.243463,7.948067,1.165968,-1.361533,3.769276,-9.705217,6.420867,-7.158356,2.624048,5.478587,7.486778,4.456604,6.913566,-2.171292,5.250189,7.442926,-4.873782,-2.077839,-7.980324,9.248879,-4.485431,-5.400240,-8.392042,7.498960,1.705090,-4.270430,-7.439616,-8.206847,-5.677443,1.112195,-4.515819,-3.140025,7.287026,3.478782,1.859518,9.997208,-4.549805,7.652673,-4.847218,-2.812378,-8.478168,7.053937,2.505807,-2.489985,-6.268575,1.651790,-8.261973,-6.511691,-5.754582,-4.383099,-5.946112,3.120267,1.564716,8.783988,-8.771244,-5.643569,4.624182,5.557699,0.116350,-9.791191,2.089506,9.907497,5.105460,3.105349,3.617521,-1.988837,-4.941080,-8.380183,-7.526472,2.012525,1.126439,1.196228,7.598733,0.188097,-7.411276,8.281036,-8.564288,-7.657530,-7.972733,3.471005,6.706289,3.294621,-5.408818,5.080581,-9.104879,3.439333,-1.914467,-1.990832,7.143500,6.813313,9.303658,-5.489228,2.936707,5.256635,-0.684575,5.025041,-0.368515,9.427652,-9.268743,-5.499246,-7.048918,-5.138084,-1.559075,-6.620623,3.766586,-5.683833,-2.326568,-3.431513,6.559968,2.095241,-3.550755,6.170995,-7.604148,6.937554,5.473095,3.697735,7.858383,5.165422,-0.419149,-0.242902,7.124780,-6.994439,9.119529,0.422227,-6.542888,-8.119960,6.428753,-2.055436,4.016616,-6.019029,3.360297,-4.458043,2.557325,-6.855017,9.239426,0.357432,1.224444,6.029090,-4.540860,1.960259,4.245457,-1.661886,5.149789,-7.928722,-3.577804,-7.061731,-6.258345,4.480104,-0.087502,5.114735,-6.083064,-4.904335,-4.403845,-4.495246,-3.604124,-6.602737,6.909924,-2.665129,2.330493,5.668547,9.311784,1.454268,-3.498869,3.408008,-5.322069,0.965344,-2.947146,9.607261,5.172909,5.800170,9.550860,1.626644,-5.390934,-7.691939,5.345868,-0.505424,7.431384,-7.444342,-3.777803,-2.860155,1.921932,6.774557,4.948287,-0.455803,-1.914246,-7.221110,9.530729,-4.154438,6.781276,8.276135,9.186730,5.047064,8.092612,-8.973693,0.665166,8.001345,-7.710321,-0.653679,7.825238,-0.359936,9.243848,8.612230,7.374586,-7.837803,-4.422504,9.958264,4.546424,-4.801956,-6.084390,-5.308964,9.912924,-2.131994,-5.344229,9.372524,-2.323948,2.593532,-1.066606,-3.870966,9.632939,-0.567017,4.079458,5.175628,-0.887042,1.076287,-7.915342,3.940837,6.183098,-2.347160,-2.729714,6.868316,3.586825,-0.558621,-6.232408,1.302289,-6.550313,4.612477,5.028667,-4.647319,8.285048,7.006990,-0.177868,3.532027,-7.967380,3.837193,-1.605941,0.623029,-0.137537,9.286499,4.182852,-6.073229,3.031495,4.838153,-0.695459,-8.629484,7.315614,8.876884,-8.405851,-2.357004,-5.465103,-3.116997,-1.495072,7.796597,9.636193,2.336161,7.753958,-8.321133,-8.883882,-5.782935,-8.788314,-5.602947,-0.288679,2.468997,-2.580959,5.332526,9.757527,2.461173,-3.818599,-3.270180,-1.346811,-0.056712,7.304824,-3.253349,-5.886428,-2.077845,3.183287,-3.843129,5.869090,7.785033,9.232732,-3.215427,-6.085174,9.450741,-7.115078,-0.664418,1.091099,3.294967,-5.390245,-2.309984,-8.635742,6.152384,6.009666,6.192729,2.727333,6.491065,8.956469,9.551969,6.432816,-9.504184,4.897117,-5.731989,6.173775,6.871041,1.576888,-9.941271,4.026794,-4.981154,-0.287144,9.571357,-6.217166,-2.214041,-0.637279,5.473505,-0.563036,-8.181469,-9.514804,0.067326,-8.121838,1.740503,-7.887925,6.874130,2.501020,7.203425,1.171742,5.245421,0.320235,5.371818,-0.320715,7.331365,4.220764,-8.391823,0.007065,0.914050,-3.752334,8.972968,9.427151,-8.627663,-0.287053,-5.459389,-1.581447,0.456014,2.474706,-0.396433,2.151150,2.327038,0.218504,6.018157,8.665534,-5.833788,1.892933,-4.235747], dtype = "float32")#candidate|8996|(420,)|const|float32
call_8994 = relay.TupleGetItem(func_8517_call(relay.reshape(const_8995.astype('float32'), [455, 3]), relay.reshape(const_8996.astype('float32'), [420,]), ), 1)
call_8997 = relay.TupleGetItem(func_8521_call(relay.reshape(const_8995.astype('float32'), [455, 3]), relay.reshape(const_8996.astype('float32'), [420,]), ), 1)
uop_9007 = relay.cos(call_8994.astype('float32')) # shape=(455, 3)
uop_9009 = relay.cos(call_8997.astype('float32')) # shape=(455, 3)
uop_9011 = relay.sqrt(call_8994.astype('float64')) # shape=(455, 3)
uop_9013 = relay.sqrt(call_8997.astype('float64')) # shape=(455, 3)
output = relay.Tuple([call_8977,const_8995,const_8996,uop_9007,uop_9011,])
output2 = relay.Tuple([call_8978,const_8995,const_8996,uop_9009,uop_9013,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

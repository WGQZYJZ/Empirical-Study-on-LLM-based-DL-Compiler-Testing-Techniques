import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_5 = relay.var("var_5", dtype = "int16", shape = (6, 10))#candidate|5|(6, 10)|var|int16
const_6 = relay.const([[8,10,-5,1,5,10,5,5,-4,9],[-8,2,10,10,8,5,5,7,4,-3],[-5,-8,-6,-10,9,6,-10,3,-10,3],[-10,-1,4,5,10,-8,-3,-5,3,-7],[9,-2,-6,10,-10,1,3,-5,1,-6],[-9,6,-5,9,10,-10,1,-7,-9,-2]], dtype = "int16")#candidate|6|(6, 10)|const|int16
bop_7 = relay.less_equal(var_5.astype('bool'), relay.reshape(const_6.astype('bool'), relay.shape_of(var_5))) # shape=(6, 10)
output = bop_7
output2 = bop_7
func_37 = relay.Function([var_5,], output)
mod['func_37'] = func_37
mod = relay.transform.InferType()(mod)
var_38 = relay.var("var_38", dtype = "int16", shape = (6, 10))#candidate|38|(6, 10)|var|int16
output = func_37(var_38)
func_39 = relay.Function([var_38], output)
mutated_mod['func_39'] = func_39
mutated_mod = relay.transform.InferType()(mutated_mod)
var_51 = relay.var("var_51", dtype = "uint16", shape = (13, 12, 4))#candidate|51|(13, 12, 4)|var|uint16
var_52 = relay.var("var_52", dtype = "uint16", shape = (13, 12, 4))#candidate|52|(13, 12, 4)|var|uint16
bop_53 = relay.greater(var_51.astype('bool'), relay.reshape(var_52.astype('bool'), relay.shape_of(var_51))) # shape=(13, 12, 4)
output = bop_53
output2 = bop_53
func_58 = relay.Function([var_51,var_52,], output)
mod['func_58'] = func_58
mod = relay.transform.InferType()(mod)
var_59 = relay.var("var_59", dtype = "uint16", shape = (13, 12, 4))#candidate|59|(13, 12, 4)|var|uint16
var_60 = relay.var("var_60", dtype = "uint16", shape = (13, 12, 4))#candidate|60|(13, 12, 4)|var|uint16
output = func_58(var_59,var_60,)
func_61 = relay.Function([var_59,var_60,], output)
mutated_mod['func_61'] = func_61
mutated_mod = relay.transform.InferType()(mutated_mod)
var_540 = relay.var("var_540", dtype = "float32", shape = (7, 2, 16))#candidate|540|(7, 2, 16)|var|float32
var_541 = relay.var("var_541", dtype = "float32", shape = (7, 2, 16))#candidate|541|(7, 2, 16)|var|float32
bop_542 = relay.divide(var_540.astype('float32'), relay.reshape(var_541.astype('float32'), relay.shape_of(var_540))) # shape=(7, 2, 16)
bop_547 = relay.logical_and(var_540.astype('bool'), relay.reshape(bop_542.astype('bool'), relay.shape_of(var_540))) # shape=(7, 2, 16)
const_561 = relay.const([[[False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True],[False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False]],[[False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False],[True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False]],[[False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True],[True,True,False,True,True,False,True,False,True,False,True,True,False,False,False,False]],[[True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,False],[False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True]],[[True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False],[False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False]],[[True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True],[False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True]],[[False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,False],[True,False,False,False,False,False,True,False,False,False,False,False,False,False,True,False]]], dtype = "bool")#candidate|561|(7, 2, 16)|const|bool
bop_562 = relay.left_shift(bop_547.astype('int16'), relay.reshape(const_561.astype('int16'), relay.shape_of(bop_547))) # shape=(7, 2, 16)
bop_566 = relay.bitwise_and(bop_562.astype('int32'), relay.reshape(bop_542.astype('int32'), relay.shape_of(bop_562))) # shape=(7, 2, 16)
output = bop_566
output2 = bop_566
func_582 = relay.Function([var_540,var_541,], output)
mod['func_582'] = func_582
mod = relay.transform.InferType()(mod)
var_583 = relay.var("var_583", dtype = "float32", shape = (7, 2, 16))#candidate|583|(7, 2, 16)|var|float32
var_584 = relay.var("var_584", dtype = "float32", shape = (7, 2, 16))#candidate|584|(7, 2, 16)|var|float32
output = func_582(var_583,var_584,)
func_585 = relay.Function([var_583,var_584,], output)
mutated_mod['func_585'] = func_585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_596 = relay.var("var_596", dtype = "float32", shape = (1, 6, 3))#candidate|596|(1, 6, 3)|var|float32
uop_597 = relay.sin(var_596.astype('float32')) # shape=(1, 6, 3)
func_58_call = mod.get_global_var('func_58')
func_61_call = mutated_mod.get_global_var('func_61')
var_600 = relay.var("var_600", dtype = "uint16", shape = (24, 26))#candidate|600|(24, 26)|var|uint16
call_599 = func_58_call(relay.reshape(var_600.astype('uint16'), [13, 12, 4]), relay.reshape(var_600.astype('uint16'), [13, 12, 4]), )
call_601 = func_58_call(relay.reshape(var_600.astype('uint16'), [13, 12, 4]), relay.reshape(var_600.astype('uint16'), [13, 12, 4]), )
bop_602 = relay.multiply(var_600.astype('uint8'), relay.reshape(call_599.astype('uint8'), relay.shape_of(var_600))) # shape=(24, 26)
bop_605 = relay.multiply(var_600.astype('uint8'), relay.reshape(call_601.astype('uint8'), relay.shape_of(var_600))) # shape=(24, 26)
bop_608 = relay.logical_xor(uop_597.astype('int16'), relay.reshape(var_596.astype('int16'), relay.shape_of(uop_597))) # shape=(1, 6, 3)
func_58_call = mod.get_global_var('func_58')
func_61_call = mutated_mod.get_global_var('func_61')
call_617 = func_58_call(relay.reshape(var_600.astype('uint16'), [13, 12, 4]), relay.reshape(bop_602.astype('uint16'), [13, 12, 4]), )
call_618 = func_58_call(relay.reshape(var_600.astype('uint16'), [13, 12, 4]), relay.reshape(bop_602.astype('uint16'), [13, 12, 4]), )
bop_620 = relay.bitwise_xor(bop_608.astype('int8'), relay.reshape(uop_597.astype('int8'), relay.shape_of(bop_608))) # shape=(1, 6, 3)
uop_627 = relay.sigmoid(bop_620.astype('float64')) # shape=(1, 6, 3)
bop_633 = relay.multiply(uop_627.astype('uint16'), relay.reshape(bop_620.astype('uint16'), relay.shape_of(uop_627))) # shape=(1, 6, 3)
const_644 = relay.const([[[-3,5,-6],[-2,-7,-1],[-1,9,-2],[-5,-5,-4],[7,-2,10],[-4,-6,10]],[[2,-1,2],[-5,10,6],[-7,2,1],[-8,-4,1],[10,6,8],[2,-9,-8]],[[4,-5,-9],[8,-1,-9],[8,3,8],[5,-3,7],[-6,-9,1],[7,1,2]],[[2,6,-2],[-10,-2,2],[8,7,-8],[-3,1,-1],[-1,8,10],[-4,1,8]],[[6,-4,10],[6,5,1],[10,-8,-8],[-3,-7,3],[-2,2,8],[7,-7,-10]],[[-8,8,4],[9,-5,-4],[7,-4,-10],[-4,5,-6],[-5,4,-3],[-2,5,-6]],[[-9,-2,1],[-7,-5,5],[-7,8,4],[-4,-6,-2],[5,1,1],[-10,2,3]],[[7,-4,-1],[8,5,-2],[1,-7,-2],[-7,10,-8],[5,1,9],[-1,-6,-9]],[[-1,6,2],[-6,-2,9],[1,-5,-3],[-3,-1,6],[-2,6,-9],[6,-3,-7]],[[-10,7,7],[8,-3,-10],[-5,5,-9],[8,7,9],[1,7,8],[9,8,-10]],[[4,-2,2],[-5,4,3],[-10,-3,4],[-2,-9,-1],[4,5,-7],[-6,4,10]],[[-9,2,-3],[-5,5,2],[3,-6,-5],[-9,6,1],[-10,4,5],[1,9,7]],[[8,6,3],[-7,-4,-9],[2,9,4],[3,7,2],[-3,7,-6],[-3,8,10]],[[-9,-8,-1],[-3,-6,1],[2,-6,3],[-2,10,-8],[8,3,-1],[9,-1,7]],[[5,5,4],[-3,-1,-7],[8,-1,-3],[-7,10,-6],[4,-3,2],[6,-1,1]]], dtype = "uint16")#candidate|644|(15, 6, 3)|const|uint16
bop_645 = relay.bitwise_and(bop_633.astype('uint32'), const_644.astype('uint32')) # shape=(15, 6, 3)
func_37_call = mod.get_global_var('func_37')
func_39_call = mutated_mod.get_global_var('func_39')
const_649 = relay.const([-8,-4,6,10,3,5,-7,6,10,-4,-9,-1,4,8,-6,5,-3,-5,-5,2,-5,2,4,3,-10,-3,10,1,-1,-3,7,2,-1,8,-2,-5,-5,-10,-5,-3,1,-5,1,7,7,10,10,-4,9,-8,-10,9,-8,-6,-3,7,4,-5,9,8], dtype = "int16")#candidate|649|(60,)|const|int16
call_648 = func_37_call(relay.reshape(const_649.astype('int16'), [6, 10]))
call_650 = func_37_call(relay.reshape(const_649.astype('int16'), [6, 10]))
output = relay.Tuple([bop_602,call_617,bop_645,call_648,const_649,])
output2 = relay.Tuple([bop_605,call_618,bop_645,call_650,const_649,])
func_656 = relay.Function([var_596,var_600,], output)
mod['func_656'] = func_656
mod = relay.transform.InferType()(mod)
mutated_mod['func_656'] = func_656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_656_call = mutated_mod.get_global_var('func_656')
var_658 = relay.var("var_658", dtype = "float32", shape = (1, 6, 3))#candidate|658|(1, 6, 3)|var|float32
var_659 = relay.var("var_659", dtype = "uint16", shape = (24, 26))#candidate|659|(24, 26)|var|uint16
call_657 = func_656_call(var_658,var_659,)
output = call_657
func_660 = relay.Function([var_658,var_659,], output)
mutated_mod['func_660'] = func_660
mutated_mod = relay.transform.InferType()(mutated_mod)
var_780 = relay.var("var_780", dtype = "uint8", shape = (15, 12, 16))#candidate|780|(15, 12, 16)|var|uint8
const_781 = relay.const([[[3,-1,5,2,-6,-4,-1,2,10,-9,8,2,6,7,-3,9],[5,6,-8,1,-1,-2,-8,8,-6,2,-2,1,8,-2,-8,-9],[-9,-4,1,-2,-2,5,-1,-2,2,2,-8,-6,8,7,6,-3],[-1,1,6,-4,-10,-10,4,5,-6,1,-1,-10,2,-6,-5,5],[-8,6,2,2,-1,-10,-6,10,-3,8,10,4,7,-2,1,-8],[4,2,-6,-5,-9,-1,-1,9,-1,-9,-4,3,-2,-4,2,1],[10,1,8,-4,-4,-3,5,10,-6,-9,3,2,8,-10,9,-6],[5,-4,7,3,2,-6,-6,3,5,-4,3,-6,1,-1,7,1],[9,8,-3,7,7,-2,-8,-6,-8,-3,-6,4,-7,10,-6,-8],[6,1,9,7,-9,-8,8,4,-4,-9,-8,-8,9,8,8,-10],[-4,-6,-7,6,5,-7,-9,9,7,-4,8,-9,9,-2,-3,-3],[-1,1,-3,-8,-2,1,3,5,-5,-7,10,-2,3,-7,-4,5]],[[-1,-7,-5,5,9,7,4,-4,-10,4,4,10,-9,4,-9,-1],[7,-7,3,8,-7,-6,8,10,8,7,-1,9,-3,-5,6,-5],[6,-5,-5,2,9,-3,-5,-4,-8,-5,9,-8,1,-5,9,-7],[-3,5,5,-7,5,-3,2,3,2,8,-6,-2,-2,-1,8,-8],[-2,6,-10,4,-5,-6,-6,-9,-9,-10,5,-9,10,8,9,6],[8,-1,-8,-4,5,10,-8,-2,7,-9,1,-9,-9,-8,4,-2],[-7,-3,-9,8,6,5,-6,-1,6,-5,-10,-9,-3,9,-2,-2],[-3,4,9,-6,-1,-8,-10,1,-9,-5,1,9,-1,-3,-9,-2],[7,6,1,2,-5,-8,-9,10,-5,10,9,10,-8,-4,6,-1],[5,1,-9,7,-1,-10,-4,-2,-5,5,-10,5,9,-6,9,-10],[-3,10,1,-8,2,7,-8,5,9,-7,-6,-8,-6,-10,10,-9],[10,-6,9,-5,2,1,9,3,-7,-9,-7,-7,-1,-7,-8,5]],[[10,-9,7,-1,6,-1,9,2,-6,-8,8,-5,-4,-10,-9,-10],[-6,7,3,-4,-2,-3,-9,-7,-8,8,-4,-2,5,1,-7,-2],[-2,-8,-1,-3,5,5,10,1,-1,-3,1,-3,9,10,-7,-1],[-3,3,9,-6,1,-10,-5,1,1,-1,9,-9,-8,-4,-1,-5],[2,-6,-3,7,8,-4,-10,9,9,4,-3,-4,-1,-7,1,-5],[-9,6,-7,-5,2,-8,-6,-6,8,-1,-4,-4,-5,-5,3,1],[-3,4,-10,5,-10,-8,1,-1,5,-9,-9,2,-4,-10,7,6],[6,9,9,-10,8,-5,-4,-5,-8,-6,7,-1,-6,-5,10,-4],[3,4,9,3,4,4,4,-6,6,-1,1,2,-1,-10,-2,7],[10,-9,9,-6,-2,10,-2,10,10,8,3,9,-1,-5,3,-8],[5,-2,1,-7,8,1,-6,5,4,7,7,1,5,1,-8,-3],[-8,5,-2,-4,-2,8,8,5,-9,1,-8,-6,-6,5,5,7]],[[2,3,-6,4,-2,9,-8,-3,-7,-4,7,-2,-4,7,4,5],[7,1,6,3,-8,9,-7,2,9,10,4,10,-10,9,2,1],[-3,5,6,9,-10,-7,-5,10,-4,1,-4,-6,-2,8,9,5],[10,3,-8,9,3,5,-6,1,7,6,6,4,6,-2,-1,-9],[9,-8,-4,-4,-6,4,-6,-2,8,-4,1,-2,2,-6,-3,6],[8,-8,3,-1,3,-1,-2,-1,2,-5,-3,-1,-3,10,1,7],[-9,4,-6,-1,10,-7,-6,3,4,-2,-6,-4,10,-2,-9,2],[3,2,-1,-10,8,5,6,3,-7,8,9,-10,-7,2,3,-6],[2,-8,4,7,-5,-7,10,10,-4,-9,-10,2,3,-5,-1,-3],[-10,9,-8,7,9,-2,-3,-6,-1,-4,4,-8,1,5,4,-7],[8,-2,2,-10,3,-8,6,-7,-9,-8,6,-1,-1,1,6,-2],[3,3,-3,-4,6,-5,8,-1,-3,-1,9,8,-10,-5,-6,-1]],[[1,4,-6,2,-2,8,1,4,-10,-4,7,-9,2,3,3,9],[-7,-9,1,9,-8,-1,6,-4,-2,-7,2,-8,-10,-4,-3,8],[-6,-5,8,-2,8,-7,1,-3,10,4,4,8,-10,-8,7,-5],[2,-2,3,-9,7,7,7,-3,-8,1,-6,9,-3,-1,2,3],[-7,6,-9,10,1,6,-7,-7,5,-8,-6,10,-5,-10,-6,-3],[-8,-2,-6,-4,10,-4,-10,-2,8,-9,9,6,10,-1,8,1],[4,4,-6,6,-10,-2,3,9,-6,-8,10,10,-1,-6,6,-7],[-1,-10,-1,2,9,4,-8,3,-3,-10,4,-1,-1,-4,-8,-7],[1,-5,-6,-4,1,-6,2,2,10,-8,-9,1,-8,7,5,-5],[3,-1,-7,5,2,6,9,-9,9,3,-6,8,-9,-2,-10,5],[8,-6,8,2,1,5,-7,8,4,4,8,-8,8,5,6,3],[3,-9,-9,2,3,1,-6,6,4,1,-1,-1,8,8,6,-10]],[[-1,10,3,1,3,-6,2,-8,1,10,-10,-4,9,-4,3,1],[-6,3,5,7,-7,7,-6,-8,6,-10,1,5,-6,-2,-7,-3],[6,-4,10,-8,-6,-8,10,9,6,-10,-3,-6,8,-10,-2,7],[8,10,-5,-7,-3,-1,-3,-9,-10,-5,-6,4,10,8,-6,2],[8,-2,-10,2,-3,6,-1,-4,-6,6,9,-7,-5,-1,-9,4],[4,-10,4,8,5,5,3,-9,-6,2,-6,-4,-3,1,-7,9],[3,-6,1,6,1,4,-9,-10,7,-2,-10,-5,1,-5,2,-10],[5,-2,1,6,9,4,2,-5,-8,3,3,-1,5,5,-1,-2],[10,-7,-4,-2,3,-1,2,4,-2,9,5,2,-9,-9,1,-9],[7,-1,-10,-2,-1,-6,8,4,-6,-7,-5,1,5,6,-1,-6],[-2,-7,-2,-5,-3,-5,-10,-5,3,7,3,4,8,-4,5,-9],[-9,-9,-7,-3,7,5,8,-4,-2,-1,-1,-2,4,-1,-6,-8]],[[-7,5,3,-6,7,-8,1,-7,4,-9,4,-7,-7,-9,-7,9],[6,-7,3,9,-9,4,10,-5,9,3,-5,-4,-7,9,-10,7],[4,4,9,7,2,-8,-1,9,8,5,-2,-10,-2,10,-9,9],[-3,1,8,-2,9,5,4,2,-7,7,-8,6,-6,-3,5,8],[-8,-2,7,7,3,-6,7,8,6,3,2,3,8,-1,-1,3],[-10,-6,-6,-2,6,-7,-9,6,10,-9,-9,-10,-10,1,2,1],[-8,8,9,-4,-2,-7,-6,6,2,-10,-8,7,-3,-1,2,-6],[10,-6,-8,5,1,-10,-5,-3,-4,8,-3,-1,-5,1,8,-10],[5,-7,-6,4,-4,-2,-3,-6,8,-8,-2,7,-3,7,-6,-10],[-2,-6,1,6,4,-6,3,-3,-7,1,-10,-7,5,-8,10,5],[-7,10,1,-5,4,-2,-3,-7,6,10,-6,-2,-2,5,-8,-5],[1,5,1,-5,-1,-3,3,-5,-8,6,-3,-9,9,-8,-2,4]],[[-10,5,8,8,8,4,-1,-2,-5,5,7,4,7,4,6,-5],[6,-10,2,6,7,-3,10,-9,4,-2,9,-8,9,-6,-10,3],[-10,4,1,2,-1,-8,10,5,-3,-6,2,-9,-8,10,-7,-5],[8,-1,-1,-8,-7,3,-6,-3,5,1,5,-2,6,-10,5,-10],[-7,1,-3,2,5,-9,-6,-2,-4,-10,-3,-10,4,-2,7,1],[2,-4,3,6,3,-1,-10,2,5,10,4,-9,-10,-7,-4,3],[-4,-2,4,7,3,-10,10,-4,-4,7,4,8,10,3,6,1],[-4,7,10,7,1,-8,-9,-9,9,-5,-3,-9,8,6,-9,-6],[-9,10,4,-5,-5,7,5,9,2,-7,4,-8,7,8,1,8],[4,1,5,4,-7,4,-9,-4,-6,7,-4,-4,-1,6,6,-5],[-1,-2,-10,-8,9,7,-6,10,9,-10,6,-5,-6,-10,6,-5],[-10,5,5,-7,7,4,-4,-3,-6,7,9,-9,-4,9,4,8]],[[5,6,-9,6,-6,9,-7,-2,-7,4,-10,3,2,5,-10,-2],[8,-4,-10,5,3,5,-8,4,3,-3,1,-8,-10,10,5,6],[1,-4,-10,-8,-3,-2,7,8,4,-4,5,-9,-2,6,3,5],[-2,5,-6,-7,-6,-3,5,-3,-1,5,9,-3,-2,-10,-3,-9],[4,8,-8,10,-6,-7,4,-1,8,-3,9,-10,6,-8,-7,-5],[2,10,10,6,-4,-6,-6,3,4,-1,-1,8,2,-6,2,9],[-7,-7,-2,-3,-7,-5,8,7,6,-7,-10,4,-10,3,4,-9],[5,-9,9,3,1,-9,8,4,-3,-10,-7,-6,-7,-10,-5,3],[5,6,2,-9,7,-5,-1,10,-2,-6,-5,6,3,4,-5,5],[8,5,1,6,-2,-7,-10,9,-7,10,9,-5,-2,-10,5,8],[-9,3,4,9,10,1,3,1,6,2,-7,-10,6,-5,-5,2],[3,3,-5,-5,8,-5,7,3,-9,-1,-3,-7,-10,10,5,-9]],[[-9,8,-7,-9,3,8,-1,-5,7,9,8,-9,-8,6,-2,4],[9,5,6,-3,-7,-1,1,1,4,7,7,2,6,-1,-7,10],[-6,2,-9,3,5,6,-9,-7,8,7,-2,3,1,6,6,3],[-9,5,9,3,3,-3,8,-7,4,4,-7,3,8,3,5,7],[1,1,-2,-8,-6,1,-1,-2,4,-2,-2,8,-6,5,9,5],[-6,1,-5,-6,10,-4,-6,7,-4,-3,-3,8,6,-1,7,-6],[-6,-2,-6,9,4,8,-4,1,3,6,-7,-5,10,-7,-6,10],[9,-1,10,2,7,-5,-4,-9,-2,-3,9,-1,6,6,10,3],[9,6,-4,-3,-10,-2,-7,-1,7,-8,-6,5,-9,-3,8,10],[-10,7,5,-6,10,-9,-10,8,8,6,-6,-5,4,6,6,9],[2,-1,-8,2,-7,-7,-3,6,2,5,-3,-7,-8,10,10,-1],[5,-1,-1,3,4,-8,-6,8,8,-7,4,7,6,-8,-7,1]],[[3,7,3,-3,-9,-5,5,2,-7,-4,3,-4,1,7,1,1],[8,-7,5,9,10,8,9,9,-9,8,-6,-2,2,-6,5,-6],[-3,-5,10,-4,-8,-8,-2,-5,-1,2,-3,6,-4,-10,-8,-4],[-7,1,3,-10,8,9,4,-1,-5,4,-9,-5,3,-2,10,-5],[-2,-6,2,7,-5,-9,10,-4,5,3,8,-5,-3,-5,-2,10],[7,-1,6,-8,-6,-10,5,1,1,3,2,-4,6,8,10,-4],[-7,-5,-4,-4,9,5,5,5,-10,9,8,-8,3,-2,5,-1],[2,-5,-10,-7,2,-3,9,-5,6,-4,-7,9,-10,4,-9,-8],[-10,7,4,9,5,-3,9,5,1,-10,-2,8,-9,7,-7,7],[10,9,8,-9,9,-9,-9,-6,4,1,-4,-7,-1,-1,9,-8],[-3,-4,7,6,-5,-8,9,-7,9,-10,4,6,-2,-6,6,-4],[4,-10,3,-9,-10,5,9,4,-7,-3,-4,8,7,-10,1,1]],[[-4,-6,-6,-5,2,-6,9,10,-4,9,-1,5,3,10,9,-9],[2,-8,-2,3,-3,4,-8,-10,-9,-10,5,10,-9,4,-2,1],[-10,-2,-3,6,-3,10,7,2,8,-8,-7,1,-9,-6,-7,4],[-5,10,1,-4,6,-4,3,-1,-9,-1,7,4,6,6,-6,-5],[-7,7,-10,-2,2,-3,1,-3,5,7,-8,8,1,-1,8,-6],[-10,-3,-3,-9,1,9,8,-2,-9,-4,10,-3,8,7,-10,1],[7,10,-10,-4,-3,-3,-8,3,-4,6,-9,-4,-3,-4,-6,-2],[-10,-3,-3,1,4,6,-1,-1,8,-6,6,-5,-2,1,4,1],[6,-4,2,7,-3,10,-4,6,8,-8,-3,3,-1,-1,8,7],[-7,4,-10,5,-4,5,6,9,-3,-8,9,2,-6,5,7,1],[-4,-3,-6,6,-3,-9,4,5,-6,-4,4,4,-10,-7,10,-1],[3,-9,-4,2,-9,8,-10,1,-6,10,2,2,-3,-9,5,9]],[[7,10,6,9,-2,7,10,7,-2,5,-10,-5,4,-6,-7,-10],[5,-4,-9,-4,-9,-2,-10,4,5,-5,-6,8,6,10,10,-8],[7,4,6,-8,3,-6,10,-3,1,2,10,-7,3,-2,5,-8],[3,-10,-1,7,-10,-7,5,5,-9,1,-6,-8,6,-4,1,5],[3,4,-4,10,-4,-4,6,-4,8,-6,6,3,-3,4,8,-7],[-5,-7,-2,2,-3,-4,6,3,7,-8,3,-4,-8,-8,8,-7],[6,9,-10,-3,-7,-3,-9,9,-8,-7,-8,-7,1,-5,3,-9],[8,7,9,5,9,1,4,3,6,-3,3,5,5,1,3,-9],[8,-3,5,4,-3,3,-6,-9,6,-1,2,-3,7,9,5,-3],[1,1,3,2,-2,-5,-3,3,6,10,-9,9,8,5,3,6],[3,1,-1,-4,-2,-3,1,4,-9,9,7,3,-5,9,-8,3],[-10,-9,-1,-6,-10,-6,5,2,4,2,-1,-7,5,6,10,-7]],[[6,-5,-9,-10,2,-9,7,2,3,3,1,10,-7,-1,8,9],[-6,-2,7,-1,7,-5,3,6,-1,10,8,-2,-8,1,-3,-9],[5,1,3,-1,3,-5,-5,-2,9,-10,4,3,5,6,-4,-4],[-6,5,8,-2,-3,-7,9,3,-1,-6,-3,7,-2,-5,-9,9],[5,-5,-7,-3,-3,9,10,-1,-4,-6,-5,-6,-5,3,-9,9],[4,6,2,-4,-2,8,-4,2,3,7,-10,-5,4,-9,10,-9],[-4,8,6,1,-6,9,6,-9,1,9,1,-8,-1,9,7,-8],[5,-4,-9,-3,4,4,-5,-10,-9,8,2,4,-3,5,-3,10],[8,-2,-9,-1,-7,2,5,6,1,-5,-2,-4,-4,-6,9,-6],[9,3,3,10,8,1,4,-9,-5,-5,3,-3,-10,3,-2,8],[9,9,5,3,1,-7,5,-7,-2,7,-6,2,9,5,6,-3],[5,8,-1,-5,7,7,-10,4,1,-7,2,-2,5,-2,-3,4]],[[9,9,-5,4,6,5,6,-8,-1,-3,-4,-1,2,-8,10,-2],[5,3,-6,3,-10,8,8,-4,-10,-1,2,3,-7,1,-6,10],[-6,3,-2,4,5,-8,9,-1,7,-3,-3,-4,-9,10,8,7],[3,-6,8,-4,3,7,2,-10,1,-9,-2,-7,-6,8,-6,-7],[-7,-5,4,-10,-1,-8,-5,3,4,10,-5,-8,-3,6,-3,10],[10,7,-5,3,-1,1,1,-4,8,-2,-1,7,-1,5,7,-6],[-1,3,7,3,8,8,10,8,-5,2,-5,2,-1,7,-4,-5],[5,2,5,-2,1,-4,-1,8,3,2,8,-1,2,-7,3,1],[3,10,1,10,-3,3,-7,9,-3,-9,4,-2,-9,3,2,-2],[9,2,5,4,-6,-9,9,2,-9,-3,-10,1,3,-5,-10,-1],[-8,-9,-4,-8,-9,3,7,10,-6,-2,7,10,-9,-8,-10,8],[-1,-1,-1,5,-10,-7,-4,4,1,8,9,-1,-3,-5,-7,4]]], dtype = "uint8")#candidate|781|(15, 12, 16)|const|uint8
bop_782 = relay.add(var_780.astype('uint8'), relay.reshape(const_781.astype('uint8'), relay.shape_of(var_780))) # shape=(15, 12, 16)
func_37_call = mod.get_global_var('func_37')
func_39_call = mutated_mod.get_global_var('func_39')
const_786 = relay.const([1,-5,-10,5,-5,8,-5,-10,9,-8,3,5,6,-7,-9,-7,10,1,-4,-6,1,10,2,-10,9,-8,-3,2,-6,2,-7,6,-10,7,-1,4,8,-10,4,-3,-2,-5,-7,4,8,-9,-4,4,3,-9,-4,-8,7,-7,10,3,-5,6,-7,-3], dtype = "int16")#candidate|786|(60,)|const|int16
call_785 = func_37_call(relay.reshape(const_786.astype('int16'), [6, 10]))
call_787 = func_37_call(relay.reshape(const_786.astype('int16'), [6, 10]))
bop_795 = relay.subtract(bop_782.astype('int8'), relay.reshape(var_780.astype('int8'), relay.shape_of(bop_782))) # shape=(15, 12, 16)
output = relay.Tuple([call_785,const_786,bop_795,])
output2 = relay.Tuple([call_787,const_786,bop_795,])
func_817 = relay.Function([var_780,], output)
mod['func_817'] = func_817
mod = relay.transform.InferType()(mod)
var_818 = relay.var("var_818", dtype = "uint8", shape = (15, 12, 16))#candidate|818|(15, 12, 16)|var|uint8
output = func_817(var_818)
func_819 = relay.Function([var_818], output)
mutated_mod['func_819'] = func_819
mutated_mod = relay.transform.InferType()(mutated_mod)
const_897 = relay.const([[[-6,-10],[6,-8],[10,-5],[-3,9],[-10,9],[-10,10],[6,9],[-2,-6]],[[7,-1],[-7,9],[-2,-8],[5,6],[-8,-5],[-2,10],[-4,2],[7,4]],[[-5,6],[3,-9],[10,-10],[7,-10],[-1,-3],[7,-10],[4,7],[-1,5]],[[6,-6],[-7,-6],[6,-1],[3,10],[-6,4],[-8,-6],[-8,6],[-6,5]]], dtype = "uint64")#candidate|897|(4, 8, 2)|const|uint64
var_898 = relay.var("var_898", dtype = "uint64", shape = (4, 8, 2))#candidate|898|(4, 8, 2)|var|uint64
bop_899 = relay.not_equal(const_897.astype('bool'), relay.reshape(var_898.astype('bool'), relay.shape_of(const_897))) # shape=(4, 8, 2)
func_58_call = mod.get_global_var('func_58')
func_61_call = mutated_mod.get_global_var('func_61')
const_912 = relay.const([4,-7,1,3,4,10,-2,7,-7,-5,7,8,3,7,-8,2,-2,5,6,-7,-9,-2,-10,-8,-10,-5,-7,6,-1,-7,9,3,8,-7,3,5,-2,6,-3,-10,7,3,-10,-4,-4,-2,-10,-4,-10,-3,6,-8,4,-2,-8,2,-8,7,-4,3,-2,10,-1,-2,-7,7,-2,4,8,-3,-8,10,-1,-8,-10,4,-7,5,1,10,-10,-1,-1,-8,-3,-5,-9,-9,-4,7,9,5,6,-5,-5,4,3,10,2,-2,1,6,-10,2,3,7,1,-1,2,-3,-2,-4,4,-8,4,-1,-5,4,-3,1,-6,-1,2,3,7,-1,-6,-3,-1,-7,1,9,-7,1,-9,-10,-3,-1,3,9,3,1,6,-10,-7,1,4,-3,-5,5,-9,1,5,6,-8,-10,-4,-2,6,-9,-8,-10,2,-5,10,-1,4,2,3,-7,-3,-6,7,1,-8,6,-1,-8,10,8,-3,8,10,-7,7,6,1,1,9,-3,10,-3,-6,4,6,7,-2,7,6,-6,7,5,5,-8,-5,1,10,6,7,-5,5,-10,-8,10,-10,7,2,7,-7,10,-8,7,7,6,-5,-4,-3,-7,3,5,8,3,3,5,-5,-1,-8,-2,2,-6,9,9,-6,4,-8,3,2,-3,-5,6,5,-4,-6,9,-4,-6,7,-8,-6,2,-3,7,2,4,-10,7,8,10,6,1,-6,-5,-4,6,5,-3,7,-6,2,4,10,9,3,-9,1,-8,-9,-10,6,-5,7,9,-8,1,-5,-1,-6,-3,2,-7,2,-7,-10,3,4,7,6,5,3,3,1,-4,-6,6,-9,-8,8,-1,4,-4,-4,2,-7,1,3,9,-9,10,2,-3,9,-9,9,-5,5,-3,-10,-6,-2,-8,-4,8,2,1,6,-4,-7,1,-4,-9,8,8,7,-5,-5,-3,-2,2,-8,9,-7,8,7,-10,-8,9,-10,-3,3,5,3,-6,-8,-10,-1,2,-3,2,2,10,-10,7,6,-7,8,-6,8,5,-10,2,-5,1,-5,-7,-6,8,-7,-6,-4,3,-2,2,-3,-6,3,6,4,-7,2,-7,-2,4,9,2,10,-5,4,-4,6,10,10,7,-3,3,8,-4,5,10,8,7,-5,2,-10,6,8,5,-2,-2,-7,-10,6,-9,-2,7,1,9,6,7,8,4,-9,-6,3,6,4,7,2,3,5,5,3,3,-5,-7,-4,-1,-10,-4,4,3,7,-9,5,2,-1,-5,-3,4,-9,-3,2,7,-10,4,-2,3,6,8,-6,-3,-1,1,-9,10,-6,10,-6,9,-10,1,10,3,7,-1,-6,-2,-5,9,-10,1,-3,-3,7,-6,-6,1,2,-6,-7,-4,3,10,-8,1,9,5,2,2,1,8,-8,5,-5,10,10,-7,-9,1,5,7,-4,7,-10,7,10,1,6,-5,-1,-5,9,3,8,-7,-6,8,-9,-7,-7,-2,-2,2,-3,1,3,4,-9,-2,-3,-1,-5,10,-7,5,-3,-8,4,-5,6,-2,3,3,-4,-10,-5,-5,-1,6,-4,-9,-10,2,-6,2,10,-2,-9,-6,1,-8,-6,-7,-10,4,-6,8,9,-1,-4,10,4,-10,9,3,-3,-4,-6,7,-8,9,-5,9,9,-10], dtype = "uint16")#candidate|912|(624,)|const|uint16
call_911 = func_58_call(relay.reshape(const_912.astype('uint16'), [13, 12, 4]), relay.reshape(const_912.astype('uint16'), [13, 12, 4]), )
call_913 = func_58_call(relay.reshape(const_912.astype('uint16'), [13, 12, 4]), relay.reshape(const_912.astype('uint16'), [13, 12, 4]), )
output = relay.Tuple([bop_899,call_911,const_912,])
output2 = relay.Tuple([bop_899,call_913,const_912,])
func_926 = relay.Function([var_898,], output)
mod['func_926'] = func_926
mod = relay.transform.InferType()(mod)
var_927 = relay.var("var_927", dtype = "uint64", shape = (4, 8, 2))#candidate|927|(4, 8, 2)|var|uint64
output = func_926(var_927)
func_928 = relay.Function([var_927], output)
mutated_mod['func_928'] = func_928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_942 = relay.var("var_942", dtype = "float32", shape = (10, 9))#candidate|942|(10, 9)|var|float32
uop_943 = relay.sin(var_942.astype('float32')) # shape=(10, 9)
output = uop_943
output2 = uop_943
func_955 = relay.Function([var_942,], output)
mod['func_955'] = func_955
mod = relay.transform.InferType()(mod)
mutated_mod['func_955'] = func_955
mutated_mod = relay.transform.InferType()(mutated_mod)
var_956 = relay.var("var_956", dtype = "float32", shape = (10, 9))#candidate|956|(10, 9)|var|float32
func_955_call = mutated_mod.get_global_var('func_955')
call_957 = func_955_call(var_956)
output = call_957
func_958 = relay.Function([var_956], output)
mutated_mod['func_958'] = func_958
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1044 = relay.var("var_1044", dtype = "uint16", shape = (4, 4, 15))#candidate|1044|(4, 4, 15)|var|uint16
var_1045 = relay.var("var_1045", dtype = "uint16", shape = (4, 4, 15))#candidate|1045|(4, 4, 15)|var|uint16
bop_1046 = relay.bitwise_or(var_1044.astype('uint16'), relay.reshape(var_1045.astype('uint16'), relay.shape_of(var_1044))) # shape=(4, 4, 15)
func_58_call = mod.get_global_var('func_58')
func_61_call = mutated_mod.get_global_var('func_61')
const_1059 = relay.const([-3,-1,10,-4,-5,-4,-6,-6,-2,-8,8,-10,-9,-2,-3,9,1,6,-9,-8,7,-7,-9,-7,-8,10,10,-5,-3,3,8,-10,4,-10,8,-5,-10,-9,5,-9,-1,-9,1,2,-8,7,-7,-7,-5,-3,-3,-8,-1,1,5,9,1,8,9,-5,7,7,1,6,-8,-8,7,3,3,4,-6,-5,-8,-2,-5,7,10,-7,-5,6,-1,-6,10,-8,7,-10,-4,1,-8,-2,9,6,-3,-10,-7,4,1,-8,-1,-4,8,-1,-1,-6,-5,-3,-6,-8,3,7,-6,-9,1,10,4,10,1,6,-4,-2,-1,-7,-7,7,-3,-9,-5,6,6,10,1,3,9,-4,4,-4,-5,1,4,-2,-2,5,-1,-5,-8,-8,5,1,-3,-9,-4,-1,3,-1,-9,7,-5,-9,5,3,1,4,-5,3,3,6,-6,6,-10,-8,1,-10,-8,-3,5,8,-7,3,1,-3,-8,2,7,-3,5,6,7,-2,-3,9,9,5,4,-2,-3,-1,-6,-3,1,10,7,1,1,2,8,-3,3,-7,-5,-3,-3,-9,5,4,8,-1,-1,3,-8,6,-6,-3,9,7,-8,-2,5,2,1,-8,-9,6,-3,-1,-3,5,8,-10,7,-10,-8,-5,-4,-2,10,-6,7,10,2,-1,10,6,-5,6,-4,8,-1,-2,10,1,-2,-1,-2,10,-4,-9,-8,-4,-1,-6,1,4,7,-8,-10,6,-8,2,10,6,-3,-10,-1,-6,9,7,8,-1,-7,-1,-7,-8,6,7,-2,-1,7,9,-8,-10,9,-4,-9,1,3,5,-8,5,5,-9,-2,-3,4,8,-9,8,6,-4,-8,-2,-6,10,-4,-8,-6,5,7,-8,-1,2,5,-7,-3,-5,-7,-1,8,9,-8,-10,-1,-2,-6,-9,9,7,3,-4,-9,7,-7,-3,2,6,6,-4,-10,7,-1,3,10,-3,-7,9,-5,4,-9,-7,-6,2,-9,-10,7,5,6,7,1,10,4,-4,8,-10,-4,7,-10,-3,-7,7,2,1,3,5,5,-10,5,-9,1,-9,6,8,-6,4,5,7,-5,-5,-6,10,6,-4,5,3,3,-2,9,-5,-10,8,10,5,6,2,2,5,6,-6,-3,7,-10,-4,-1,-4,6,8,-1,-1,-3,-1,7,-1,-7,3,8,5,1,9,-6,4,-8,8,-5,8,-4,-5,9,3,4,8,-8,-4,-2,-2,7,-2,10,8,-1,-5,7,5,5,4,3,-3,-2,-9,-1,5,-7,-5,-9,2,9,-6,-7,-4,8,-2,-7,4,-4,-8,-4,-3,1,7,2,1,-9,10,7,-6,4,-6,7,-2,2,5,2,6,7,5,-7,1,-3,-9,6,3,-5,1,-8,-2,5,-6,-7,-2,10,-6,-4,-10,-7,-7,-6,3,1,5,10,-2,7,4,4,2,5,-10,2,-8,-1,-4,-7,-8,4,10,1,9,-1,5,10,9,3,4,1,6,9,9,-10,4,2,-6,-5,-4,9,-10,-5,2,-8,3,2,-3,3,7,-1,-7,-5,8,9,4,9,5,-5,-2,-7,4,8,10,-9,3,8,-3,-3,10,-2,10,-2,-7,-3,-10,8,10,1,-5,7,-10,-10,-7,-5,6,3,1,2,2,9,-8,10,-10], dtype = "uint16")#candidate|1059|(624,)|const|uint16
call_1058 = func_58_call(relay.reshape(const_1059.astype('uint16'), [13, 12, 4]), relay.reshape(const_1059.astype('uint16'), [13, 12, 4]), )
call_1060 = func_58_call(relay.reshape(const_1059.astype('uint16'), [13, 12, 4]), relay.reshape(const_1059.astype('uint16'), [13, 12, 4]), )
output = relay.Tuple([bop_1046,call_1058,const_1059,])
output2 = relay.Tuple([bop_1046,call_1060,const_1059,])
func_1068 = relay.Function([var_1044,var_1045,], output)
mod['func_1068'] = func_1068
mod = relay.transform.InferType()(mod)
var_1069 = relay.var("var_1069", dtype = "uint16", shape = (4, 4, 15))#candidate|1069|(4, 4, 15)|var|uint16
var_1070 = relay.var("var_1070", dtype = "uint16", shape = (4, 4, 15))#candidate|1070|(4, 4, 15)|var|uint16
output = func_1068(var_1069,var_1070,)
func_1071 = relay.Function([var_1069,var_1070,], output)
mutated_mod['func_1071'] = func_1071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1132 = relay.var("var_1132", dtype = "uint16", shape = ())#candidate|1132|()|var|uint16
var_1133 = relay.var("var_1133", dtype = "uint16", shape = (15, 1, 14))#candidate|1133|(15, 1, 14)|var|uint16
bop_1134 = relay.subtract(var_1132.astype('uint16'), var_1133.astype('uint16')) # shape=(15, 1, 14)
output = relay.Tuple([bop_1134,])
output2 = relay.Tuple([bop_1134,])
func_1137 = relay.Function([var_1132,var_1133,], output)
mod['func_1137'] = func_1137
mod = relay.transform.InferType()(mod)
var_1138 = relay.var("var_1138", dtype = "uint16", shape = ())#candidate|1138|()|var|uint16
var_1139 = relay.var("var_1139", dtype = "uint16", shape = (15, 1, 14))#candidate|1139|(15, 1, 14)|var|uint16
output = func_1137(var_1138,var_1139,)
func_1140 = relay.Function([var_1138,var_1139,], output)
mutated_mod['func_1140'] = func_1140
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1357 = relay.const([[[-9.712694,1.577943,0.263093,-6.877907,4.230112,4.840028,-7.233561,0.099720,0.033414,4.590564,8.304571,1.738496,-5.967558,5.844821,-9.250290,-5.727142],[6.272523,9.890889,-6.875720,2.309397,-3.568299,2.777152,5.923028,3.188930,-3.510461,-9.679023,-7.242029,8.281000,-2.827949,3.157676,1.815147,3.004765],[9.947006,5.676250,-8.884458,8.201000,2.900922,-1.701001,-5.213240,9.603477,-3.945155,-7.534709,-7.470543,0.093061,-1.953073,0.387197,-6.150158,-4.327208],[1.624567,-6.627312,-0.760063,-7.685304,-5.254596,-1.675164,-5.563185,5.546470,-2.014169,-3.132742,2.118753,1.621961,-6.704481,5.408230,-8.661215,7.854325],[8.698859,8.673926,3.900671,-3.966727,-5.315022,-3.217204,-7.420049,8.941992,7.602727,0.030315,-4.828700,-6.054768,7.276012,4.084600,-9.400358,0.662956]],[[-8.674067,0.708293,-7.604367,1.312897,2.361784,-2.919341,-0.770840,-4.710887,0.242280,-7.228192,-5.966197,-1.190659,6.004972,8.429901,-8.695251,0.064559],[-3.030555,8.557220,-4.858563,7.214760,-2.110425,-0.173133,-1.160472,7.122604,-5.070521,3.214707,-6.012376,6.254025,2.455940,0.820276,1.076660,9.811853],[-9.050663,9.550374,1.387979,-9.090938,-4.248496,-9.774810,5.456361,-3.810799,-1.438439,-4.760465,0.062252,-4.797759,3.814405,4.245098,-2.827157,-2.153642],[8.229092,-9.690615,-9.859924,-8.886948,1.363715,2.035111,-3.848267,-4.672095,8.299910,-6.471810,-9.598470,-1.389246,-5.544852,5.762325,-7.904566,7.816805],[3.276060,-1.155446,-2.273996,-1.573590,-0.498115,-5.449058,3.170580,0.368611,-6.018156,9.291507,-5.340205,-4.158001,4.798289,7.403467,8.424577,2.067932]],[[-2.463499,-9.145735,1.697561,-3.769992,1.214854,-6.612081,-7.811522,9.429203,5.408003,6.361345,-0.348156,4.271585,6.451116,8.186976,1.889538,2.671939],[3.031478,6.294068,-7.860094,-7.348996,-6.095538,-1.329483,-9.038399,9.984910,4.610364,8.526947,-3.158428,3.833611,9.593117,-9.152151,-8.939033,6.623755],[-2.341812,-1.942742,-3.511542,-4.381178,8.598789,3.458559,-1.384558,-1.878308,-2.475392,-4.406937,-1.405279,-1.486589,-0.094387,-5.897331,4.109620,-7.748540],[-9.328728,-7.463332,3.979616,-9.960455,-7.044759,-7.590250,-2.675088,-8.386248,-0.427512,-4.022222,-0.380165,8.029543,4.412657,9.438100,3.666913,-9.040569],[-9.114903,-1.654408,5.083264,6.119060,8.375199,9.151924,-6.649679,-3.488315,-2.659157,5.129801,1.924212,3.395943,-8.948592,9.414407,3.539473,-9.566360]],[[5.505235,7.432168,1.484205,-2.367040,2.515975,-0.649360,7.750096,-4.351171,1.224360,-1.089689,-4.913024,-4.768264,5.933436,-0.625920,8.198938,-9.699918],[-8.005634,-2.766431,-8.405020,-2.090656,-6.540140,1.932851,5.951303,1.738599,4.367358,4.394990,4.000643,3.353185,-9.747221,8.234303,-2.144831,-2.200625],[-3.826052,-8.961755,8.801925,-8.340303,3.348852,9.017140,9.302502,-8.805656,-0.900247,1.662118,9.629044,-3.526953,-6.658932,8.998011,-9.099146,8.874779],[-5.835721,8.815581,-7.354526,5.403573,-0.145640,-8.787679,6.240141,-9.236273,2.628969,-2.616412,-0.728408,-8.314606,-8.545754,2.662572,0.230685,0.674552],[-6.826527,3.009338,-4.324753,2.561264,9.715339,3.745698,-4.730001,-0.112143,4.753652,-6.365267,-7.807300,-1.605578,-2.561010,9.142518,7.725343,-2.467702]],[[5.990108,-5.840142,-7.375333,-7.216390,-5.165811,8.416830,-8.139090,-1.418966,-8.248730,7.254092,8.415552,9.142283,-0.310316,9.643209,-5.673868,8.744335],[4.344967,3.096112,7.652288,5.252070,7.060805,-3.975965,-7.667800,8.812750,2.629353,6.216858,4.202769,1.178165,3.139892,8.504024,-3.688164,-3.469040],[-1.117044,2.653122,1.031922,2.679133,8.403039,-6.777030,-3.854438,-9.435153,4.724243,-1.876793,8.483355,-6.152251,-5.710239,-2.036264,-4.931462,-6.712201],[-9.715398,3.106869,-4.587774,8.128245,-0.551631,-1.670636,0.860135,3.760907,-2.106657,9.449073,5.689817,1.633776,4.876800,-7.486592,-4.220178,5.129199],[-8.306003,-4.079580,7.446640,3.501552,-7.686766,6.206829,-7.299184,-1.646119,-5.157369,-5.597978,7.579966,-1.443069,6.301753,-7.526338,3.843273,0.236343]],[[-4.761633,8.650796,8.561992,-9.307587,-3.466390,4.939309,-9.311267,9.187835,-7.123356,-4.650796,4.160829,-4.194844,4.015869,-3.663430,-2.174980,-2.027470],[-9.144157,1.386919,-1.865633,0.189329,0.371401,-8.717115,-4.873937,-9.008257,2.702128,-1.887427,3.283013,-1.222440,5.962880,-8.272360,-9.262825,0.904320],[-4.143821,-0.748811,-6.171624,0.281650,-3.470531,7.957574,9.141989,9.578594,-3.156303,-2.456945,6.725990,-3.820671,5.325126,-7.433737,5.746431,-9.450393],[-6.730441,7.184523,-1.293758,-8.582419,-6.865317,4.969350,-9.321644,-6.929681,-2.619441,-3.182945,3.149876,8.301135,4.866057,-3.737880,7.701678,-4.688320],[1.154476,-6.778670,-4.373826,6.485352,-0.642301,4.828392,5.835619,8.830844,-2.125400,9.016144,-3.352405,-8.109890,8.210287,-4.222284,-3.868581,-5.253823]],[[-4.861871,8.443928,-6.461816,7.385476,-6.874258,7.154535,2.199248,8.189042,-4.946432,6.251232,9.310768,7.007705,5.922712,8.069186,-8.041374,4.116140],[-9.805467,-8.074233,2.995990,3.836249,-5.993250,-5.906142,8.331294,3.228296,-8.902546,-0.397072,-8.545711,-8.384218,-9.574765,7.341066,-4.038643,0.858872],[-6.418408,3.976074,-8.246169,9.942398,1.913379,-2.267171,5.137404,-6.444683,-1.957298,-6.816189,-3.923701,-2.478023,-3.048954,-4.030609,9.497141,-2.583125],[0.995944,9.453564,-7.293696,-8.889847,-0.727162,2.720472,-6.621000,-5.347121,-7.981918,0.008327,0.877551,1.473567,-4.639517,-4.388039,-1.436528,9.044179],[-5.765304,4.160128,3.185387,-2.008807,-8.362138,5.959972,-1.246144,1.322800,-4.720343,0.135385,7.536355,-1.951666,-3.145862,9.248995,6.985039,-0.629737]],[[5.610400,-6.487584,4.183133,9.721904,-6.266734,-2.268783,-1.907016,-2.629371,3.587766,-1.275126,-0.409031,-8.275726,-1.841618,2.489071,-6.671409,9.630242],[7.552987,-8.004453,3.927307,-7.071088,-7.810052,-2.425479,3.503836,-4.884010,-7.644703,0.989917,4.427185,-7.720617,1.135549,9.600885,4.383586,3.849355],[-0.031881,-4.242871,2.389420,-6.606568,1.667142,-3.522224,5.252447,3.526976,-0.778248,-6.221701,-0.619431,1.515189,2.697480,8.649307,8.693697,9.207763],[-5.621202,4.669060,8.563338,-2.953263,-8.271078,6.451571,5.843367,-7.558107,7.985674,7.289574,0.116828,2.296928,7.828085,3.029537,7.597978,-2.621981],[-9.017974,-9.330858,3.690241,3.765462,7.039790,1.759335,7.226057,-2.678265,4.994411,8.787447,-0.788958,9.517042,7.696297,5.796055,7.289246,1.105797]],[[8.731315,6.547101,-8.392045,9.904192,7.320317,-8.993836,-3.705901,1.882689,-6.649757,-1.058204,4.406878,-1.484510,-0.531988,-8.291026,8.428106,-4.223744],[6.930306,-2.149012,-8.855291,1.817675,-4.368045,-9.999361,1.909372,-7.733013,-5.146225,-7.348737,-7.569004,2.726143,-2.778359,0.829029,0.991951,6.556308],[1.530133,-1.160737,5.796344,-3.740659,7.940110,-0.033468,-4.387537,-4.950924,0.666838,3.982986,2.264219,-0.915224,-9.838194,2.910240,0.654518,-1.308275],[-5.888347,-1.235448,-0.118919,-6.853840,-1.568708,-7.328707,6.963370,8.303850,-2.674905,6.242259,8.217059,6.369151,7.300837,1.916663,0.092374,6.028646],[-7.611412,5.221688,-3.478655,-5.093879,-0.290679,-6.482629,7.275628,-8.713032,-4.825805,4.136614,-4.644440,5.449497,-4.164425,-2.614976,-8.241864,7.416631]]], dtype = "float32")#candidate|1357|(9, 5, 16)|const|float32
var_1358 = relay.var("var_1358", dtype = "float32", shape = (9, 5, 16))#candidate|1358|(9, 5, 16)|var|float32
bop_1359 = relay.greater_equal(const_1357.astype('bool'), relay.reshape(var_1358.astype('bool'), relay.shape_of(const_1357))) # shape=(9, 5, 16)
func_582_call = mod.get_global_var('func_582')
func_585_call = mutated_mod.get_global_var('func_585')
var_1365 = relay.var("var_1365", dtype = "float32", shape = (224,))#candidate|1365|(224,)|var|float32
call_1364 = func_582_call(relay.reshape(var_1365.astype('float32'), [7, 2, 16]), relay.reshape(var_1365.astype('float32'), [7, 2, 16]), )
call_1366 = func_582_call(relay.reshape(var_1365.astype('float32'), [7, 2, 16]), relay.reshape(var_1365.astype('float32'), [7, 2, 16]), )
func_582_call = mod.get_global_var('func_582')
func_585_call = mutated_mod.get_global_var('func_585')
call_1371 = func_582_call(relay.reshape(call_1364.astype('float32'), [7, 2, 16]), relay.reshape(var_1365.astype('float32'), [7, 2, 16]), )
call_1372 = func_582_call(relay.reshape(call_1364.astype('float32'), [7, 2, 16]), relay.reshape(var_1365.astype('float32'), [7, 2, 16]), )
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
var_1382 = relay.var("var_1382", dtype = "uint8", shape = (2880,))#candidate|1382|(2880,)|var|uint8
call_1381 = relay.TupleGetItem(func_817_call(relay.reshape(var_1382.astype('uint8'), [15, 12, 16])), 2)
call_1383 = relay.TupleGetItem(func_819_call(relay.reshape(var_1382.astype('uint8'), [15, 12, 16])), 2)
bop_1395 = relay.less_equal(call_1371.astype('bool'), relay.reshape(var_1365.astype('bool'), relay.shape_of(call_1371))) # shape=(7, 2, 16)
bop_1398 = relay.less_equal(call_1372.astype('bool'), relay.reshape(var_1365.astype('bool'), relay.shape_of(call_1372))) # shape=(7, 2, 16)
const_1403 = relay.const([-8,3,7,-10,-2,4,7,8,2,-2,8,-3,3,-9,2,3,2,-1,3,4,2,-9,-9,-6,1,-7,3,9,4,9,9,-5,-9,2,8,9,-5,-10,7,5,-1,7,4,2,-2,-5,-6,-6,7,-6,5,6,8,-2,9,5,2,5,-7,-8,-9,-4,5,7,7,6,3,-9,7,5,3,-5,-3,-4,7,-1,-5,1,-4,-4,6,-2,4,-9,5,7,4,-6,4,7,-10,-10,-3,6,1,-8,-2,3,2,-4,-6,8,5,-8,1,-10,6,-9,1,4,-7,-7,3,-2,-4,3,-9,3,-2,-5,-8,6,-5,1,-10,7,9,6,-6,8,-7,3,1,-2,-8,-6,1,8,-6,-1,-8,-4,2,1,-8,-1,10,-3,-1,4,3,6,1,-10,-5,-3,-1,1,7,-5,-3,-10,-2,3,-7,3,-8,-3,-4,-6,-8,-3,-8,-2,8,-9,-6,3,-1,1,5,9,-4,-2,7,-7,-9,-4,7,-1,5,-6,-1,7,7,-4,-4,6,5,-4,6,-7,-4,-1,7,5,-5,1,4,-10,7,-5,-6,7,-9,-4,-4,1,10,-8,5,6,-8,8,6,3,3,-2,-9,10,10,4,-3,-4,6,-9,-7,10,4,9,7,1,2,-7,-2,10,1,8,6,8,-3,-4,3,-10,-4,-7,1,-9,3,5,-4,-9,-6,10,8,5,-4,4,4,6,-10,-7,3,5,3,-3,-4,2,1,5,10,1,-10,-3,8,2,-4,-1,6,-5,8,6,2,6,-1,-5,3,-7,10,7,9,5,8,-2,-4,3,-9,-7,-10,6,-4,-2,-6,9,-9,3,-6,3,6,8,6,-5,-2,-6,3,-2,1,-3,-5,3,9,-1,-6,-6,-4,4,6,3,-10,-8,10,-10,-6,-10,-5,4,-10,-6,-3,-9,-9,-7,10,10,-8,5,-2,9,-9,-8,1,-8,-9,7,1,9,9,-2,5,-9,4,-2,-8,-4,-9,3,6,-3,10,-9,6,-10,3,3,5,2,7,-6,5,4,-2,-8,-8,5,10,8,9,2,9,-1,-9,-6,9,1,-1,9,-2,2,-7,10,1,5,6,-4,-3,1,-2,-6,10,4,-4,5,-10,-8,5,4,7,-8,5,10,-8,7,10,10,3,-1,7,-3,-4,3,8,-5,-5,8,4,-7,10,6,-1,2,-2,-1,9,-7,-6,10,6,-10,10,-2,-7,1,-6,9,-3,1,4,-6,9,-3,4,10,-3,-2,2,9,2,9,5,7,-9,-5,2,5,5,-8,-5,10,1,-1,5,-4,-8,-6,1,4,2,4,-1,7,6,6,6,-9,7,1,8,8,8,-2,7,-8,3,3,10,-1,-5,-8,-4,-9,-7,-2,4,2,6,-1,-7,-10,-1,-6,2,7,-8,-10,2,-5,8,5,-9,-5,10,-6,7,7,10,10,5,-1,2,5,-1,-4,-8,-4,-5,-2,7,2,-5,-3,-4,-8,10,-2,-3,10,-7,-4,3,-2,8,-3,-1,10,-4,4,6,9,-3,10,-5,-3,-5,7,-6,-8,2,-9,4,2,4,8,-8,-8,7,9,10,-6,9,-5,-2,-9,-4,-9,10,10,7,-6,4,-6,-5,3,-6,-2,-2,-2,-2,1,1,-8,-3,-5,-6,-5,-6,-3,7,6,-5,-10,7,-3,3,7,-6,-5,3,9,-2,2,-9,-8,-1,2,1,4,6,-7,3,-4,-8,8,-8,1,-5,-7,7,1,-8,-3,6,8,-7,10,-10,-1,-3,2,-7,-1,-5,7,6,10,-10,6,2,-8,1,-1,2,1,-2,-9,3,3,10,2,9,-1,-4,-7,-1,7,4,-2,1,-4,-6,2,-2,-9,-7,10,10,-9,8,-1,10,2,-8,-2,10,4,8,-7,-2,-3,-7,7,6,-4,-1,-7,4,6,-6,3,-4,-3,-2,3,7,5,2,-3,-9,5,1,10,1,-9,6,-4,8,3,8,-8,-3,-8,6,-3,8,2,8,-5,1,6,6,8,-7,-8,8,-9,6,5,-1,-4,6,6,-1,5,-5,-7,-2,6,7,-4,7,-5,-1,4,1,-8,-7,5,5,10,-2,10,-4,-3,10,6,-1,10,-3,3,-6,3,7,-1,-9,-4,-2,4,3,-8,5,10,-7,7,5,-4,-2,4,6,-4,10,5,-4,-7,8,-10,1,8,-10,-8,4,-8,10,8,1,10,-9,1,-3,2,6,-4,-4,5,-7,1,-4,10,2,1,-9,5,5,3,6,1,9,-1,8,-9,10,8,10,9,7,7,10,-4,-8,4,2,8,-1,-4,-8,5,2,5,3,-6,-5,-6,7,-9,-7,-8,8,-10,-8,7,-7,5,6,-3,-5,1,6,-4,-9,5,-8,5,-3,-5,1,-9,6,10,-6,-3,4,1,-3,-10,-10,8,-1,3,10,-5,4,9,-9,-2,-2,4,-10,5,-9,-6,1,8,7,-6,-1,-5,-4,-5,-3,-8,3,-10,-6,-6,1,8,4,-4,7,-7,10,5,6,6,6,-4,-5,-2,9,-10,8,2,1,-4,-5,-7,2,-8,-2,8,10,9,-6,8,6,8,5,-7,-6,-5,1,4,5,-2,8,-7,3,4,6,7,-10,-8,-4,1,8,-1,-9,-4,8,-3,7,-5,-5,-10,-10,3,-1,-5,5,-3,2,-4,8,7,-4,-2,-2,1,-5,10,-9,5,3,-3,6,5,-1,-2,7,-6,-2,3,-7,-1,7,-8,-4,4,-5,-8,-4,-2,2,-3,3,-9,8,-9,6,7,-1,10,2,-5,-3,-9,-7,-2,-6,7,4,6,-6,7,5,7,-1,-1,1,1,10,8,2,6,5,-7,7,-1,8,-7,3,9,1,8,-10,3,-10,5,3,10,-5,6,-10,-7,6,1,7,7,4,9,6,-3,-5,8,2,-5,-5,-6,-10,3,-6,9,-8,5,-2,7,-8,-6,-9,-2,-10,-7,-10,10,-8,7,-9,1,-3,-1,-1,-6,-9,6,5,-10,-5,-2,1,-6,-8,5,1,7,4,-2,-8,-6,9,6,9,2,2,10,9,6,-3,5,9,-2,9,8,10,-4,-7,6,-6,-2,2,6,10,-9,3,8,3,4,4,1,7,7,-8,10,9,4,5,-5,10,-7,5,4,7,-3,-10,-5,2,3,-4,3,6,-7,5,-4,-7,7,-10,1,9,-6,-10,5,4,-1,-10,2,-4,-7,-2,-6,-3,2,-6,-9,-8,-3,10,2,6,2,10,2,-2,2,9,4,3,-5,8,-1,1,-7,-1,-4,-4,3,-10,-7,3,10,-9,5,-10,-10,-6,-7,6,9,2,-4,-10,10,1,4,-9,7,-9,-2,5,-9,5,-8,-7,8,-10,6,9,-2,3,8,2,-4,10,-4,-7,5,-7,5,-2,5,-5,-6,7,9,-5,4,4,2,3,10,7,6,-10,1,-1,-8,7,5,1,4,2,-7,7,2,-5,3,-10,9,-7,-6,5,9,5,6,7,-5,-1,7,2,-9,4,1,1,3,-10,-6,-2,-7,-8,-4,6,-6,-2,6,-2,2,-6,-9,-5,-5,-3,10,-8,2,-3,-3,-8,5,-3,3,-5,-3,-10,-10,-7,1,-7,-7,9,3,8,2,-8,-5,7,8,4,5,-6,-10,1,6,2,5,1,-5,5,-4,-6,5,6,7,7,-4,8,-9,-5,7,6,-9,9,7,-1,8,-1,-1,6,-9,-2,7,8,7,3,-9,5,8,-3,-9,-10,-4,-9,10,-4,8,1,-6,-5,2,-8,-7,-10,8,-1,-10,3,10,10,7,8,-10,5,9,8,6,-4,-10,7,10,4,-7,-3,-10,8,6,3,6,-1,-7,-6,-6,7,5,-3,-2,-4,-5,7,-9,-3,2,1,3,2,-3,-5,1,5,4,10,5,4,-2,-7,7,-7,5,6,2,-8,-8,-1,4,4,4,-5,-9,-2,1,3,-7,-8,10,10,2,6,2,-1,-3,-6,1,7,2,3,9,3,8,-8,-5,-10,-10,-9,2,-9,-4,-6,-8,-7,2,-6,-7,9,-2,4,7,6,-8,10,-6,-9,-5,5,7,6,3,-2,-2,-8,10,-4,7,6,7,-7,6,3,-10,7,-4,9,-4,10,4,10,3,4,-6,-5,-8,-7,-8,-8,-3,-8,-5,-4,9,-4,-3,10,-10,6,-5,-10,3,7,-10,-4,9,9,10,-4,-9,-4,3,-10,8,-1,-7,4,-10,3,-8,-2,6,1,-7,5,-3,8,-4,-3,4,-5,-6,-9,2,6,-9,-6,-10,-1,4,-2,-8,5,9,-4,1,-4,-8,3,6,-9,8,10,-4,6,8,5,8,-7,9,2,1,-8,8,9,1,-7,-7,8,9,-9,1,4,-5,8,4,-7,3,-4,-7,5,4,8,10,-1,9,7,-6,-9,1,9,7,-8,1,5,6,-7,-3,-2,-10,-3,4,9,8,3,5,-5,-7,-7,9,-8,2,-7,-2,-10,-3,1,3,-9,8,-2,-5,-7,4,-1,-4,7,-4,-10,5,-1,3,8,-2,8,-1,2,9,-6,-5,-3,-6,6,-7,8,-8,-10,1,-8,-5,2,7,9,5,-7,6,9,2,-4,2,1,-3,1,-9,6,5,9,3,-8,-7,9,6,-5,-5,-9,1,9,3,7,-10,7,2,-5,-5,-3,9,4,-2,-6,-8,-6,-7,4,-4,3,7,-7,-5,3,-9,-10,2,2,5,-3,-2,-5,-3,-8,-3,10,10,-8,-2,-5,-1,7,-3,9,8,-2,-10,-1,9,9,2,-1,-7,-9,1,-1,-9,8,-9,9,-9,-10,-1,2,-2,-9,10,-7,10,-7,-10,-5,-7,10,-10,-7,-3,7,-8,1,2,4,-9,-1,7,-9,-6,-3,-7,-1,3,3,-5,-7,3,-2,-7,9,7,4,-9,8,-7,-10,-7,1,-1,5,7,10,1,7,10,5,-7,1,6,-3,2,7,-6,-9,-5,4,8,1,6,1,-3,3,-7,-8,-4,6,-6,-5,-3,1,9,-9,-9,-10,8,3,8,-3,-10,8,2,10,-8,4,9,1,-1,9,-3,-7,10,2,5,5,-4,9,-6,8,6,-9,-7,7,3,10,-6,-4,-4,-4,-2,4,1,-6,2,5,5,-3,6,-10,5,-2,-4,7,5,-9,-10,2,6,-10,-1,-6,-9,-9,-8,-4,9,-4,-4,-5,2,-5,8,-6,7,-5,-3,5,10,8,2,-3,-8,6,-7,3,4,2,7,-6,-3,3,2,7,1,-3,7,-4,2,7,10,9,-7,-5,8,-9,4,7,7,9,-9,-10,10,-1,5,-2,-7,-8,1,-9,7,-9,9,7,2,-5,-10,-7,-1,3,-8,1,-5,2,-2,-6,-8,-10,-1,-2,-6,-3,-1,7,1,-10,-6,-4,7,8,6,8,8,-10,6,-1,-10,9,5,5,-7,-4,-3,-3,-4,-2,4,6,-10,1,10,-8,-8,-2,-2,-8,-2,-1,3,-7,-6,7,9,-4,-10,4,-8,-10,9,9,1,-2,2,-7,-9,1,-3,9,-2,10,-9,3,9,6,-7,1,4,8,9,2,2,-7,-2,7,-9,-7,3,8,5,-2,-10,-10,-8,-2,-8,7,8,2,-8,5,8,-8,3,-5,-9,-5,-9,3,5,-4,-2,10,-5,-1,3,-2,9,6,-5,4,-7,3,4,-3,5,-4,2,-8,-8,2,6,-6,4,-9,-2,-3,4,5,3,-8,9,5,8,8,4,-9,4,7,7,8,-3,-8,-6,4,5,10,-4,5,10,-9,-3,-7,6,-6,-4,-4,-5,1,-7,3,-6,6,-9,3,-4,8,-1,-6,-10,1,7,8,-10,-3,3,9,-10,1,-7,3,-7,1,-5,-4,-9,1,-10,6,-10,-7,7,-2,4,-8,-10,-4,-9,4,4,-3,2,-9,-2,2,-5,5,-6,9,-2,1,-8,-6,4,5,7,10,-9,-2,5,-3,3,-10,-4,-9,6,8,-6,2,-4,9,2,-1,-10,4,-6,-4,4,8,-3,-4,-8,4,7,-6,-3,-4,-4,-8,7,10,8,2,7,7,6,10,4,-10,2,-3,8,-1,-2,9,-8,3,-2,-7,-7,-1,-8,9,-7,-2,-2,5,2,-6,-5,-4,-3,-9,1,4,-10,3,5,9,-8,4,-8,3,5,4,2,2,-4,10,7,-3,10,7,7,-9,9,-6,4,-8,-7,-10,-10,-6,-5,10,-2,-3,9,10,-5,3,-4,-2,-8,-7,3,-8,10,-9,-2,-9,2,-9,-1,10,-7,10,2,8,-10,-9,-4,10,-2,-1,8,1,1,4,8,-7,-5,-8,7,-10,-3,-4,7,1,2,4,-1,9,-6,5,7,10,-9,10,4,-6,9,4,-3,5,-4,-7,-3,-8,-1,2,-4,-7,-1,-8,-7,4,4,3,-10,7,5,-10,10,9,10,7,-6,-7,-3,5,-1,7,-4,7,9,9,-5,6,6,7,7,-10,-8,3,3,-3,-5,-2,-3,3,4,-7,9,-4,-7,1,-5,-8,-9,6,8,-8,2,-2,-2,8,-6,-5,-8,-2,-2,-10,5,1,10,-7,9,-1,-7,9,-7,3,1,8,7,-4,-2,-5,6,-2,3,5,3,6,-9,9,-1,-7,10,-2,7,5,4,-8,-6,-7,8,-5,-7,2,6,-2,-6,9,-6,5,9,-3,-10,3,9,-8,-9,-9,4,2,3,-6,5,-6,-6,-4,-1,-10,-6,-10,1,2,-9,-8,-2,-2,6,-5,3,2,4,-8,3,-9,-1,5,-7,3,8,10,6,7,1,-3,-7,8,2,-8,4,-5,-6,-10,-7,-10,6,7,3,-4,-9,-1,-3,-8,4,2,-5,6,5,-6,-9,-9,8,9,-3,-6,-1,9,-5,-10,4,7,-9,3,-9,8,5,4,-3,-5,-5,9,9,9,6,2,-3,9,4,-8,1,10,1,-9,9,3,6,-10,-9,-8,-10,4,1,-7,-7,7,-9,6,-5,6,-1,-5,-2,-2,6,7,2,1,-7,10,1,4,6,-10,4,-4,7,-2,6,10,-7,8,-8,-5,-5,-1,-2,-6,4,1,4,-3,-5,-9,-10,-3,-6,6,-9,-1,6,3,-10,6,5,-1,3,9,10,8,-7,-9,-1,-6,-8,7,10,1,6,-3,-7,1,10,-7,-8,-10,-6,-7,-4,9,10,5,5,2,-5,4,1,9,7,-4,1,-9,5,-5,-9,-10,-2,2,2,9,-1,7,-8,5,-4,-2,5,3,-7,8,5,-8,-4,4,-4,-3,-6,9,9,-9,5,8,-3,7,-9,10,2,1,-6,-3,-6,7,7,5,-10,-8,8,-4,-7,4,5,-10,-10,2,-3,-8,1,2,1,-3,6,9,-9,6,1,2,2,2,10,-1,9,6,5,10,-7,-1,6,6,3,1,-2,2,4,9,8,-9,-9,8,4,4,-1,-6,-4,-4,4,3,-10,-3,6,8,-10,-4,-3,5,-10,-1,-3,-2,9,6,-1,3,-1,-4,6,3,-1,9,1,3,2,-4,3,1,-2,-9,-5,4,9,-3,2,-5,6,8,5,-9,-9,1,1,-6,-1,5,9,2,-1,-5,4,7,1,7,1,4,-1,2,8,-4,-4,7,-10,1,7,-4,5,10,1,3,-3], dtype = "uint8")#candidate|1403|(2880,)|const|uint8
bop_1404 = relay.multiply(var_1382.astype('uint16'), relay.reshape(const_1403.astype('uint16'), relay.shape_of(var_1382))) # shape=(2880,)
uop_1414 = relay.atanh(bop_1359.astype('float32')) # shape=(9, 5, 16)
func_1068_call = mod.get_global_var('func_1068')
func_1071_call = mutated_mod.get_global_var('func_1071')
var_1450 = relay.var("var_1450", dtype = "uint16", shape = (240,))#candidate|1450|(240,)|var|uint16
call_1449 = relay.TupleGetItem(func_1068_call(relay.reshape(var_1450.astype('uint16'), [4, 4, 15]), relay.reshape(var_1450.astype('uint16'), [4, 4, 15]), ), 2)
call_1451 = relay.TupleGetItem(func_1071_call(relay.reshape(var_1450.astype('uint16'), [4, 4, 15]), relay.reshape(var_1450.astype('uint16'), [4, 4, 15]), ), 2)
bop_1454 = relay.equal(uop_1414.astype('bool'), relay.reshape(bop_1359.astype('bool'), relay.shape_of(uop_1414))) # shape=(9, 5, 16)
func_1068_call = mod.get_global_var('func_1068')
func_1071_call = mutated_mod.get_global_var('func_1071')
call_1458 = relay.TupleGetItem(func_1068_call(relay.reshape(var_1450.astype('uint16'), [4, 4, 15]), relay.reshape(var_1450.astype('uint16'), [4, 4, 15]), ), 1)
call_1459 = relay.TupleGetItem(func_1071_call(relay.reshape(var_1450.astype('uint16'), [4, 4, 15]), relay.reshape(var_1450.astype('uint16'), [4, 4, 15]), ), 1)
func_955_call = mod.get_global_var('func_955')
func_958_call = mutated_mod.get_global_var('func_958')
const_1469 = relay.const([-7.018192,3.569225,-5.134364,2.469706,-8.046727,0.124537,9.977201,2.277804,-5.544754,4.179046,9.218104,1.304899,-4.308205,6.422297,-2.934812,-7.190855,1.827876,2.078956,-8.434268,2.172972,-3.901260,7.308754,1.999595,8.256766,-8.569364,4.488688,9.718785,5.093624,-0.874803,8.117653,-9.222386,2.733599,3.077772,2.305996,0.243896,8.544380,-5.031764,6.226334,3.718825,0.738242,1.270834,8.900351,0.062570,-2.531221,8.807975,-9.979357,-5.422104,3.169704,9.676428,6.553520,7.609237,-6.408689,6.037388,-3.127002,-6.745036,9.996648,-8.245235,-3.120998,4.065887,3.247794,-9.286961,-1.140160,7.474242,0.746270,-9.239886,6.203404,2.148981,5.281042,3.480467,3.241013,6.970128,1.849598,-2.888674,9.088658,2.209419,-1.687035,3.811125,-2.360707,7.878006,4.522303,-9.846576,2.741093,-0.506846,-6.008647,-0.441708,-6.216541,-5.833054,-9.192818,2.287908,-2.264416], dtype = "float32")#candidate|1469|(90,)|const|float32
call_1468 = func_955_call(relay.reshape(const_1469.astype('float32'), [10, 9]))
call_1470 = func_955_call(relay.reshape(const_1469.astype('float32'), [10, 9]))
output = relay.Tuple([call_1364,call_1381,bop_1395,bop_1404,call_1449,var_1450,bop_1454,call_1458,call_1468,const_1469,])
output2 = relay.Tuple([call_1366,call_1383,bop_1398,bop_1404,call_1451,var_1450,bop_1454,call_1459,call_1470,const_1469,])
func_1472 = relay.Function([var_1358,var_1365,var_1382,var_1450,], output)
mod['func_1472'] = func_1472
mod = relay.transform.InferType()(mod)
mutated_mod['func_1472'] = func_1472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1472_call = mutated_mod.get_global_var('func_1472')
var_1474 = relay.var("var_1474", dtype = "float32", shape = (9, 5, 16))#candidate|1474|(9, 5, 16)|var|float32
var_1475 = relay.var("var_1475", dtype = "float32", shape = (224,))#candidate|1475|(224,)|var|float32
var_1476 = relay.var("var_1476", dtype = "uint8", shape = (2880,))#candidate|1476|(2880,)|var|uint8
var_1477 = relay.var("var_1477", dtype = "uint16", shape = (240,))#candidate|1477|(240,)|var|uint16
call_1473 = func_1472_call(var_1474,var_1475,var_1476,var_1477,)
output = call_1473
func_1478 = relay.Function([var_1474,var_1475,var_1476,var_1477,], output)
mutated_mod['func_1478'] = func_1478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1608 = relay.var("var_1608", dtype = "float32", shape = (16, 14, 13))#candidate|1608|(16, 14, 13)|var|float32
uop_1609 = relay.exp(var_1608.astype('float32')) # shape=(16, 14, 13)
var_1614 = relay.var("var_1614", dtype = "float32", shape = (16, 14, 13))#candidate|1614|(16, 14, 13)|var|float32
bop_1615 = relay.divide(uop_1609.astype('float32'), relay.reshape(var_1614.astype('float32'), relay.shape_of(uop_1609))) # shape=(16, 14, 13)
output = bop_1615
output2 = bop_1615
func_1618 = relay.Function([var_1608,var_1614,], output)
mod['func_1618'] = func_1618
mod = relay.transform.InferType()(mod)
mutated_mod['func_1618'] = func_1618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1618_call = mutated_mod.get_global_var('func_1618')
var_1620 = relay.var("var_1620", dtype = "float32", shape = (16, 14, 13))#candidate|1620|(16, 14, 13)|var|float32
var_1621 = relay.var("var_1621", dtype = "float32", shape = (16, 14, 13))#candidate|1621|(16, 14, 13)|var|float32
call_1619 = func_1618_call(var_1620,var_1621,)
output = call_1619
func_1622 = relay.Function([var_1620,var_1621,], output)
mutated_mod['func_1622'] = func_1622
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1882 = relay.const([[[-8.990101,-5.446780,-8.976168,-3.909294,-8.782837,-7.565006,-4.195614,-7.032754],[-1.916578,6.315059,1.820715,-1.453127,2.291954,0.356927,8.187054,-7.551787],[-3.490463,5.697390,-4.396605,1.742885,-8.149792,-7.289765,-3.736376,1.939189]],[[-8.028578,-2.581935,0.560954,4.998772,-9.472223,-7.258249,0.704790,2.546780],[-0.202822,-1.032964,0.853675,2.691728,-2.378711,-9.563425,5.645961,9.373273],[-4.932846,6.403834,-0.554896,-0.486533,8.588346,3.113686,0.591895,-5.722804]],[[4.404414,-0.948505,2.577134,-1.143024,9.590276,-2.733513,8.606001,8.484481],[8.709823,0.563118,6.464327,4.634668,-0.300825,7.276255,4.575900,2.464858],[5.020612,5.772170,-8.006250,-6.836339,-1.079872,-2.759124,-0.270666,7.496998]],[[-4.670569,-2.182130,-7.460497,8.344985,-8.897923,5.930609,-8.467336,-6.109027],[-8.576059,-7.137219,-6.514820,7.881500,2.248255,-5.032699,9.897664,-0.545163],[-5.685664,9.239182,-8.548492,8.170799,5.504509,-0.572928,-8.219118,7.098812]],[[1.075808,2.807524,-4.278707,-1.733257,-5.931394,-2.285574,6.164982,2.020673],[3.882983,-9.819179,5.351363,-8.503511,-9.386155,5.128928,6.865721,-5.574046],[-0.500790,-8.880261,-6.186320,6.602588,7.179380,-5.104191,-8.250673,-9.635402]],[[-1.595093,3.739490,1.113783,-3.370131,-9.471842,-2.206656,5.220150,-1.267781],[-1.039059,-2.699878,-5.510250,1.779757,4.253397,-9.768646,1.996446,9.974975],[4.794067,-5.117859,-4.435046,3.332324,-8.347595,5.910626,-6.169948,2.940964]],[[-5.233625,6.318860,0.197208,5.012744,-5.685367,-2.609703,-3.506698,1.515532],[-6.898663,-9.301463,-3.213921,-4.643614,3.296966,-1.652542,7.030639,-1.567997],[-6.005708,-0.063536,-5.689740,-3.850428,6.000947,5.601765,8.393033,-3.060157]]], dtype = "float64")#candidate|1882|(7, 3, 8)|const|float64
var_1883 = relay.var("var_1883", dtype = "float64", shape = (7, 3, 8))#candidate|1883|(7, 3, 8)|var|float64
bop_1884 = relay.add(const_1882.astype('float64'), relay.reshape(var_1883.astype('float64'), relay.shape_of(const_1882))) # shape=(7, 3, 8)
bop_1892 = relay.subtract(var_1883.astype('uint32'), relay.reshape(const_1882.astype('uint32'), relay.shape_of(var_1883))) # shape=(7, 3, 8)
func_582_call = mod.get_global_var('func_582')
func_585_call = mutated_mod.get_global_var('func_585')
var_1904 = relay.var("var_1904", dtype = "float32", shape = (8, 28))#candidate|1904|(8, 28)|var|float32
call_1903 = func_582_call(relay.reshape(var_1904.astype('float32'), [7, 2, 16]), relay.reshape(var_1904.astype('float32'), [7, 2, 16]), )
call_1905 = func_582_call(relay.reshape(var_1904.astype('float32'), [7, 2, 16]), relay.reshape(var_1904.astype('float32'), [7, 2, 16]), )
bop_1915 = relay.logical_xor(bop_1892.astype('uint32'), relay.reshape(const_1882.astype('uint32'), relay.shape_of(bop_1892))) # shape=(7, 3, 8)
func_1068_call = mod.get_global_var('func_1068')
func_1071_call = mutated_mod.get_global_var('func_1071')
var_1929 = relay.var("var_1929", dtype = "uint16", shape = (240,))#candidate|1929|(240,)|var|uint16
call_1928 = relay.TupleGetItem(func_1068_call(relay.reshape(var_1929.astype('uint16'), [4, 4, 15]), relay.reshape(var_1929.astype('uint16'), [4, 4, 15]), ), 0)
call_1930 = relay.TupleGetItem(func_1071_call(relay.reshape(var_1929.astype('uint16'), [4, 4, 15]), relay.reshape(var_1929.astype('uint16'), [4, 4, 15]), ), 0)
func_1472_call = mod.get_global_var('func_1472')
func_1478_call = mutated_mod.get_global_var('func_1478')
var_1937 = relay.var("var_1937", dtype = "float32", shape = (60, 12))#candidate|1937|(60, 12)|var|float32
var_1938 = relay.var("var_1938", dtype = "uint8", shape = (96, 30))#candidate|1938|(96, 30)|var|uint8
call_1936 = relay.TupleGetItem(func_1472_call(relay.reshape(var_1937.astype('float32'), [9, 5, 16]), relay.reshape(call_1903.astype('float32'), [224,]), relay.reshape(var_1938.astype('uint8'), [2880,]), relay.reshape(var_1929.astype('uint16'), [240,]), ), 1)
call_1939 = relay.TupleGetItem(func_1478_call(relay.reshape(var_1937.astype('float32'), [9, 5, 16]), relay.reshape(call_1903.astype('float32'), [224,]), relay.reshape(var_1938.astype('uint8'), [2880,]), relay.reshape(var_1929.astype('uint16'), [240,]), ), 1)
output = relay.Tuple([bop_1884,call_1903,var_1904,bop_1915,call_1928,var_1929,call_1936,var_1937,var_1938,])
output2 = relay.Tuple([bop_1884,call_1905,var_1904,bop_1915,call_1930,var_1929,call_1939,var_1937,var_1938,])
func_1953 = relay.Function([var_1883,var_1904,var_1929,var_1937,var_1938,], output)
mod['func_1953'] = func_1953
mod = relay.transform.InferType()(mod)
mutated_mod['func_1953'] = func_1953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1953_call = mutated_mod.get_global_var('func_1953')
var_1955 = relay.var("var_1955", dtype = "float64", shape = (7, 3, 8))#candidate|1955|(7, 3, 8)|var|float64
var_1956 = relay.var("var_1956", dtype = "float32", shape = (8, 28))#candidate|1956|(8, 28)|var|float32
var_1957 = relay.var("var_1957", dtype = "uint16", shape = (240,))#candidate|1957|(240,)|var|uint16
var_1958 = relay.var("var_1958", dtype = "float32", shape = (60, 12))#candidate|1958|(60, 12)|var|float32
var_1959 = relay.var("var_1959", dtype = "uint8", shape = (96, 30))#candidate|1959|(96, 30)|var|uint8
call_1954 = func_1953_call(var_1955,var_1956,var_1957,var_1958,var_1959,)
output = call_1954
func_1960 = relay.Function([var_1955,var_1956,var_1957,var_1958,var_1959,], output)
mutated_mod['func_1960'] = func_1960
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1993 = relay.const(-4, dtype = "uint8")#candidate|1993|()|const|uint8
var_1994 = relay.var("var_1994", dtype = "uint8", shape = (15, 9, 13))#candidate|1994|(15, 9, 13)|var|uint8
bop_1995 = relay.greater(const_1993.astype('bool'), var_1994.astype('bool')) # shape=(15, 9, 13)
output = bop_1995
output2 = bop_1995
func_1999 = relay.Function([var_1994,], output)
mod['func_1999'] = func_1999
mod = relay.transform.InferType()(mod)
var_2000 = relay.var("var_2000", dtype = "uint8", shape = (15, 9, 13))#candidate|2000|(15, 9, 13)|var|uint8
output = func_1999(var_2000)
func_2001 = relay.Function([var_2000], output)
mutated_mod['func_2001'] = func_2001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2034 = relay.var("var_2034", dtype = "int16", shape = (3, 9, 16))#candidate|2034|(3, 9, 16)|var|int16
var_2035 = relay.var("var_2035", dtype = "int16", shape = (3, 9, 16))#candidate|2035|(3, 9, 16)|var|int16
bop_2036 = relay.right_shift(var_2034.astype('int16'), relay.reshape(var_2035.astype('int16'), relay.shape_of(var_2034))) # shape=(3, 9, 16)
uop_2041 = relay.sqrt(var_2034.astype('float32')) # shape=(3, 9, 16)
func_1953_call = mod.get_global_var('func_1953')
func_1960_call = mutated_mod.get_global_var('func_1960')
const_2050 = relay.const([5.877702,-4.420054,6.542123,1.779401,9.604636,5.230125,0.380082,-7.421108,6.118867,-1.199696,-9.703871,7.503419,4.159527,-6.503028,-2.892586,4.515750,-5.258179,-5.123448,2.956644,-7.029948,-8.678050,-0.321362,-2.170204,-2.253040,5.885430,-8.979591,0.065227,-9.060220,0.729435,1.559482,-1.488401,4.349866,-9.138283,-2.612797,8.874933,-1.890843,2.289346,8.951869,9.532778,5.256107,-5.820701,-4.688389,0.111977,9.202390,-8.236587,2.788359,3.691989,3.938774,-0.229693,3.257977,5.977520,5.569988,-3.206371,-7.445742,-7.818117,3.480985,-4.423433,-2.135565,-8.650910,-6.307843,-6.716356,2.963491,-2.267953,7.526454,-6.531590,-6.999921,-9.982842,-8.253229,-4.674277,-1.651103,2.455237,-7.761494,-2.963896,6.759367,-2.805367,8.367034,8.084695,-0.899770,0.295099,-0.775353,7.978937,8.962766,-8.318671,-7.168407,0.837084,6.019763,-3.053342,-3.973427,-6.562937,9.782046,1.160007,7.741049,1.488250,-1.354694,5.827779,4.653878,2.884727,-0.060157,-3.019738,-6.350766,-2.296367,-2.936415,0.547237,1.167513,7.772561,-9.132889,3.207485,2.265448,-2.230488,0.976242,2.934939,-9.909292,-2.720394,-1.099324,2.508803,-8.524584,8.237772,1.888960,6.874576,-7.711160,6.964262,9.038895,4.731532,-7.937213,-9.279264,3.502081,-8.917722,-9.129871,7.406678,6.216138,3.887481,-6.032430,9.024898,-7.027859,-3.668396,3.218174,4.092689,-9.441151,9.205815,-6.371385,-9.411901,1.528599,3.188956,0.398024,5.718520,-9.225488,-7.605230,5.041567,-0.234698,-8.556124,-9.460636,-7.218914,-0.640796,-3.784051,2.592126,6.110189,5.895330,-4.784994,-4.429017,4.448606,5.993720,7.366586,-2.308168,0.531915,-6.095176,3.253257,1.547394,-3.941034], dtype = "float64")#candidate|2050|(168,)|const|float64
var_2051 = relay.var("var_2051", dtype = "float32", shape = (224,))#candidate|2051|(224,)|var|float32
var_2052 = relay.var("var_2052", dtype = "uint16", shape = (240,))#candidate|2052|(240,)|var|uint16
var_2053 = relay.var("var_2053", dtype = "float32", shape = (12, 60))#candidate|2053|(12, 60)|var|float32
var_2054 = relay.var("var_2054", dtype = "uint8", shape = (2880,))#candidate|2054|(2880,)|var|uint8
call_2049 = relay.TupleGetItem(func_1953_call(relay.reshape(const_2050.astype('float64'), [7, 3, 8]), relay.reshape(var_2051.astype('float32'), [8, 28]), relay.reshape(var_2052.astype('uint16'), [240,]), relay.reshape(var_2053.astype('float32'), [60, 12]), relay.reshape(var_2054.astype('uint8'), [96, 30]), ), 6)
call_2055 = relay.TupleGetItem(func_1960_call(relay.reshape(const_2050.astype('float64'), [7, 3, 8]), relay.reshape(var_2051.astype('float32'), [8, 28]), relay.reshape(var_2052.astype('uint16'), [240,]), relay.reshape(var_2053.astype('float32'), [60, 12]), relay.reshape(var_2054.astype('uint8'), [96, 30]), ), 6)
var_2067 = relay.var("var_2067", dtype = "float32", shape = (12, 60))#candidate|2067|(12, 60)|var|float32
bop_2068 = relay.logical_xor(var_2053.astype('uint64'), relay.reshape(var_2067.astype('uint64'), relay.shape_of(var_2053))) # shape=(12, 60)
func_926_call = mod.get_global_var('func_926')
func_928_call = mutated_mod.get_global_var('func_928')
var_2079 = relay.var("var_2079", dtype = "uint64", shape = (8, 8))#candidate|2079|(8, 8)|var|uint64
call_2078 = relay.TupleGetItem(func_926_call(relay.reshape(var_2079.astype('uint64'), [4, 8, 2])), 1)
call_2080 = relay.TupleGetItem(func_928_call(relay.reshape(var_2079.astype('uint64'), [4, 8, 2])), 1)
output = relay.Tuple([bop_2036,uop_2041,call_2049,const_2050,var_2051,var_2052,var_2054,bop_2068,call_2078,var_2079,])
output2 = relay.Tuple([bop_2036,uop_2041,call_2055,const_2050,var_2051,var_2052,var_2054,bop_2068,call_2080,var_2079,])
func_2085 = relay.Function([var_2034,var_2035,var_2051,var_2052,var_2053,var_2054,var_2067,var_2079,], output)
mod['func_2085'] = func_2085
mod = relay.transform.InferType()(mod)
mutated_mod['func_2085'] = func_2085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2085_call = mutated_mod.get_global_var('func_2085')
var_2087 = relay.var("var_2087", dtype = "int16", shape = (3, 9, 16))#candidate|2087|(3, 9, 16)|var|int16
var_2088 = relay.var("var_2088", dtype = "int16", shape = (3, 9, 16))#candidate|2088|(3, 9, 16)|var|int16
var_2089 = relay.var("var_2089", dtype = "float32", shape = (224,))#candidate|2089|(224,)|var|float32
var_2090 = relay.var("var_2090", dtype = "uint16", shape = (240,))#candidate|2090|(240,)|var|uint16
var_2091 = relay.var("var_2091", dtype = "float32", shape = (12, 60))#candidate|2091|(12, 60)|var|float32
var_2092 = relay.var("var_2092", dtype = "uint8", shape = (2880,))#candidate|2092|(2880,)|var|uint8
var_2093 = relay.var("var_2093", dtype = "float32", shape = (12, 60))#candidate|2093|(12, 60)|var|float32
var_2094 = relay.var("var_2094", dtype = "uint64", shape = (8, 8))#candidate|2094|(8, 8)|var|uint64
call_2086 = func_2085_call(var_2087,var_2088,var_2089,var_2090,var_2091,var_2092,var_2093,var_2094,)
output = call_2086
func_2095 = relay.Function([var_2087,var_2088,var_2089,var_2090,var_2091,var_2092,var_2093,var_2094,], output)
mutated_mod['func_2095'] = func_2095
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2154 = relay.var("var_2154", dtype = "float64", shape = (13, 3, 1))#candidate|2154|(13, 3, 1)|var|float64
const_2155 = relay.const([[[4.308032,9.817776],[4.488319,-7.458079],[2.371934,-2.921447]],[[-0.085670,-4.036178],[-3.228292,6.014560],[6.004923,-1.267993]],[[-3.923144,8.205836],[8.362496,7.229768],[-2.719606,2.165050]],[[-4.720933,9.454125],[1.240279,-1.357835],[6.396257,6.523868]],[[8.988814,7.996824],[4.144049,8.543454],[9.103074,-5.631182]],[[-9.398826,4.829427],[-3.977186,-9.157690],[4.278852,-0.645255]],[[-4.291885,-3.495006],[6.921149,9.602918],[-4.989611,2.238784]],[[-6.503737,2.720078],[6.357875,6.432257],[2.921371,-9.143133]],[[6.999645,-5.657916],[0.087870,3.030743],[-1.891140,9.840439]],[[3.865672,-9.703343],[8.071351,6.737659],[7.669012,1.630941]],[[-6.118521,-3.097671],[-5.324256,4.227931],[2.807323,-7.378987]],[[-0.049259,-7.506328],[5.698827,-2.804062],[9.348625,-8.193092]],[[2.979386,-5.188522],[8.846986,0.862323],[-6.909486,7.248447]]], dtype = "float64")#candidate|2155|(13, 3, 2)|const|float64
bop_2156 = relay.floor_divide(var_2154.astype('float64'), const_2155.astype('float64')) # shape=(13, 3, 2)
output = bop_2156
output2 = bop_2156
func_2180 = relay.Function([var_2154,], output)
mod['func_2180'] = func_2180
mod = relay.transform.InferType()(mod)
mutated_mod['func_2180'] = func_2180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2181 = relay.var("var_2181", dtype = "float64", shape = (13, 3, 1))#candidate|2181|(13, 3, 1)|var|float64
func_2180_call = mutated_mod.get_global_var('func_2180')
call_2182 = func_2180_call(var_2181)
output = call_2182
func_2183 = relay.Function([var_2181], output)
mutated_mod['func_2183'] = func_2183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2243 = relay.var("var_2243", dtype = "float64", shape = (12, 16, 1))#candidate|2243|(12, 16, 1)|var|float64
uop_2244 = relay.erf(var_2243.astype('float64')) # shape=(12, 16, 1)
func_1953_call = mod.get_global_var('func_1953')
func_1960_call = mutated_mod.get_global_var('func_1960')
var_2251 = relay.var("var_2251", dtype = "float64", shape = (168,))#candidate|2251|(168,)|var|float64
var_2252 = relay.var("var_2252", dtype = "float32", shape = (224,))#candidate|2252|(224,)|var|float32
const_2253 = relay.const([2,-5,-5,6,-9,1,6,4,-3,-4,-7,-5,-6,2,-5,-3,-3,8,9,4,-8,10,4,-7,7,5,-4,8,1,8,-3,5,-1,-3,-6,8,1,-7,4,-4,-5,-4,-1,-7,-2,-10,-9,-2,7,-1,-2,8,-1,-2,9,7,-7,3,3,2,-6,-2,-7,-5,2,9,9,9,2,-4,-7,7,1,-4,9,-4,8,9,-2,10,-2,-8,-8,-10,8,3,6,1,-9,4,9,-4,3,2,10,7,-3,-5,-4,3,-1,-7,-8,4,1,7,7,-9,-5,-6,-5,8,-10,10,10,-5,-10,7,1,7,-3,-4,-4,-1,-5,5,-1,-1,8,6,5,-8,-4,-4,8,10,4,2,-8,10,-1,5,-9,-7,-8,-4,4,9,-7,-6,-2,8,10,-5,-4,-4,-9,-1,5,-5,10,-5,1,6,-5,-7,-7,-5,7,-5,-7,8,-8,-6,6,4,-1,2,-3,2,-9,4,-3,4,1,3,-10,5,9,-1,-1,2,-5,5,-3,5,5,-9,-10,-8,-6,-8,1,6,-5,4,-3,-9,1,8,1,7,5,-4,-10,-6,5,-3,-9,8,-6,-9,1,9,4,-5,3,10,-7,-2,9,3,4,-2,-5,-5,5,9,-6,7], dtype = "uint16")#candidate|2253|(240,)|const|uint16
var_2254 = relay.var("var_2254", dtype = "float32", shape = (720,))#candidate|2254|(720,)|var|float32
var_2255 = relay.var("var_2255", dtype = "uint8", shape = (2880,))#candidate|2255|(2880,)|var|uint8
call_2250 = relay.TupleGetItem(func_1953_call(relay.reshape(var_2251.astype('float64'), [7, 3, 8]), relay.reshape(var_2252.astype('float32'), [8, 28]), relay.reshape(const_2253.astype('uint16'), [240,]), relay.reshape(var_2254.astype('float32'), [60, 12]), relay.reshape(var_2255.astype('uint8'), [96, 30]), ), 5)
call_2256 = relay.TupleGetItem(func_1960_call(relay.reshape(var_2251.astype('float64'), [7, 3, 8]), relay.reshape(var_2252.astype('float32'), [8, 28]), relay.reshape(const_2253.astype('uint16'), [240,]), relay.reshape(var_2254.astype('float32'), [60, 12]), relay.reshape(var_2255.astype('uint8'), [96, 30]), ), 5)
output = relay.Tuple([uop_2244,call_2250,var_2251,var_2252,const_2253,var_2254,var_2255,])
output2 = relay.Tuple([uop_2244,call_2256,var_2251,var_2252,const_2253,var_2254,var_2255,])
func_2257 = relay.Function([var_2243,var_2251,var_2252,var_2254,var_2255,], output)
mod['func_2257'] = func_2257
mod = relay.transform.InferType()(mod)
mutated_mod['func_2257'] = func_2257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2257_call = mutated_mod.get_global_var('func_2257')
var_2259 = relay.var("var_2259", dtype = "float64", shape = (12, 16, 1))#candidate|2259|(12, 16, 1)|var|float64
var_2260 = relay.var("var_2260", dtype = "float64", shape = (168,))#candidate|2260|(168,)|var|float64
var_2261 = relay.var("var_2261", dtype = "float32", shape = (224,))#candidate|2261|(224,)|var|float32
var_2262 = relay.var("var_2262", dtype = "float32", shape = (720,))#candidate|2262|(720,)|var|float32
var_2263 = relay.var("var_2263", dtype = "uint8", shape = (2880,))#candidate|2263|(2880,)|var|uint8
call_2258 = func_2257_call(var_2259,var_2260,var_2261,var_2262,var_2263,)
output = call_2258
func_2264 = relay.Function([var_2259,var_2260,var_2261,var_2262,var_2263,], output)
mutated_mod['func_2264'] = func_2264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2311 = relay.var("var_2311", dtype = "float64", shape = (9, 11, 2))#candidate|2311|(9, 11, 2)|var|float64
uop_2312 = relay.acos(var_2311.astype('float64')) # shape=(9, 11, 2)
output = relay.Tuple([uop_2312,])
output2 = relay.Tuple([uop_2312,])
func_2318 = relay.Function([var_2311,], output)
mod['func_2318'] = func_2318
mod = relay.transform.InferType()(mod)
var_2319 = relay.var("var_2319", dtype = "float64", shape = (9, 11, 2))#candidate|2319|(9, 11, 2)|var|float64
output = func_2318(var_2319)
func_2320 = relay.Function([var_2319], output)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2343 = relay.var("var_2343", dtype = "uint64", shape = ())#candidate|2343|()|var|uint64
const_2344 = relay.const([[[-10,4,-8,-3],[-5,9,-2,-2],[3,3,7,-9],[5,1,-6,3],[10,2,-10,1],[7,5,-10,-6],[4,-10,-3,10],[-1,-1,4,4],[3,3,2,1],[5,-7,-4,9],[4,-2,10,-4],[-1,-1,9,10],[-1,5,7,1],[3,-9,4,-6],[-9,5,10,-4]],[[2,-5,-1,5],[8,-5,8,-8],[-7,10,7,8],[-6,-9,2,-7],[-9,7,7,-1],[-4,9,4,2],[4,-1,-10,1],[3,10,3,2],[-10,-9,-1,-2],[-7,-6,8,-10],[-2,5,3,-7],[8,-2,7,-1],[2,-3,-2,-9],[-6,8,5,-8],[3,10,-1,-2]],[[4,-10,-7,7],[-2,-4,7,-1],[-10,-9,-1,3],[-10,9,10,10],[3,-7,2,-2],[6,9,9,8],[-3,6,2,7],[2,5,7,-8],[-7,3,-8,-6],[-10,10,6,-1],[-5,-2,-6,-10],[7,2,3,6],[-4,-3,-5,1],[-3,7,8,-8],[-2,-9,3,7]]], dtype = "uint64")#candidate|2344|(3, 15, 4)|const|uint64
bop_2345 = relay.left_shift(var_2343.astype('uint64'), const_2344.astype('uint64')) # shape=(3, 15, 4)
output = relay.Tuple([bop_2345,])
output2 = relay.Tuple([bop_2345,])
func_2353 = relay.Function([var_2343,], output)
mod['func_2353'] = func_2353
mod = relay.transform.InferType()(mod)
var_2354 = relay.var("var_2354", dtype = "uint64", shape = ())#candidate|2354|()|var|uint64
output = func_2353(var_2354)
func_2355 = relay.Function([var_2354], output)
mutated_mod['func_2355'] = func_2355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2384 = relay.var("var_2384", dtype = "float64", shape = (11, 4, 1))#candidate|2384|(11, 4, 1)|var|float64
uop_2385 = relay.atan(var_2384.astype('float64')) # shape=(11, 4, 1)
output = relay.Tuple([uop_2385,])
output2 = relay.Tuple([uop_2385,])
func_2397 = relay.Function([var_2384,], output)
mod['func_2397'] = func_2397
mod = relay.transform.InferType()(mod)
mutated_mod['func_2397'] = func_2397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2398 = relay.var("var_2398", dtype = "float64", shape = (11, 4, 1))#candidate|2398|(11, 4, 1)|var|float64
func_2397_call = mutated_mod.get_global_var('func_2397')
call_2399 = func_2397_call(var_2398)
output = call_2399
func_2400 = relay.Function([var_2398], output)
mutated_mod['func_2400'] = func_2400
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2447 = relay.const([[3.432342,-3.315574,-8.924303,7.458909,-0.698360],[-5.247073,-6.938246,-0.692641,-3.517095,-5.766546],[0.247052,3.847095,7.557625,5.576404,8.451281],[-3.491653,4.960110,3.270485,-8.560651,3.381358],[5.718834,9.348846,-7.587995,9.109312,0.544346]], dtype = "float64")#candidate|2447|(5, 5)|const|float64
const_2448 = relay.const([[6.839330,-0.406903,5.630128,9.739405,-8.967517],[0.736710,5.755134,-4.753540,6.291851,-0.454965],[7.673074,-2.360360,6.781811,-5.914316,7.672183],[-8.871598,1.357268,5.249583,-8.831051,0.054006],[9.604388,-1.390708,0.520945,-4.762939,-8.435955]], dtype = "float64")#candidate|2448|(5, 5)|const|float64
bop_2449 = relay.power(const_2447.astype('float64'), relay.reshape(const_2448.astype('float64'), relay.shape_of(const_2447))) # shape=(5, 5)
output = bop_2449
output2 = bop_2449
func_2458 = relay.Function([], output)
mod['func_2458'] = func_2458
mod = relay.transform.InferType()(mod)
mutated_mod['func_2458'] = func_2458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2458_call = mutated_mod.get_global_var('func_2458')
call_2459 = func_2458_call()
output = call_2459
func_2460 = relay.Function([], output)
mutated_mod['func_2460'] = func_2460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2458_call = mod.get_global_var('func_2458')
func_2460_call = mutated_mod.get_global_var('func_2460')
call_2472 = func_2458_call()
call_2473 = func_2458_call()
output = call_2472
output2 = call_2473
func_2480 = relay.Function([], output)
mod['func_2480'] = func_2480
mod = relay.transform.InferType()(mod)
output = func_2480()
func_2481 = relay.Function([], output)
mutated_mod['func_2481'] = func_2481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2458_call = mod.get_global_var('func_2458')
func_2460_call = mutated_mod.get_global_var('func_2460')
call_2543 = func_2458_call()
call_2544 = func_2458_call()
output = call_2543
output2 = call_2544
func_2546 = relay.Function([], output)
mod['func_2546'] = func_2546
mod = relay.transform.InferType()(mod)
output = func_2546()
func_2547 = relay.Function([], output)
mutated_mod['func_2547'] = func_2547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2546_call = mod.get_global_var('func_2546')
func_2547_call = mutated_mod.get_global_var('func_2547')
call_2566 = func_2546_call()
call_2567 = func_2546_call()
output = relay.Tuple([call_2566,])
output2 = relay.Tuple([call_2567,])
func_2581 = relay.Function([], output)
mod['func_2581'] = func_2581
mod = relay.transform.InferType()(mod)
mutated_mod['func_2581'] = func_2581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2581_call = mutated_mod.get_global_var('func_2581')
call_2582 = func_2581_call()
output = call_2582
func_2583 = relay.Function([], output)
mutated_mod['func_2583'] = func_2583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2481_call = mutated_mod.get_global_var('func_2481')
call_2655 = func_2480_call()
call_2656 = func_2480_call()
output = call_2655
output2 = call_2656
func_2670 = relay.Function([], output)
mod['func_2670'] = func_2670
mod = relay.transform.InferType()(mod)
output = func_2670()
func_2671 = relay.Function([], output)
mutated_mod['func_2671'] = func_2671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2670_call = mod.get_global_var('func_2670')
func_2671_call = mutated_mod.get_global_var('func_2671')
call_2672 = func_2670_call()
call_2673 = func_2670_call()
output = relay.Tuple([call_2672,])
output2 = relay.Tuple([call_2673,])
func_2674 = relay.Function([], output)
mod['func_2674'] = func_2674
mod = relay.transform.InferType()(mod)
output = func_2674()
func_2675 = relay.Function([], output)
mutated_mod['func_2675'] = func_2675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2674_call = mod.get_global_var('func_2674')
func_2675_call = mutated_mod.get_global_var('func_2675')
call_2739 = relay.TupleGetItem(func_2674_call(), 0)
call_2740 = relay.TupleGetItem(func_2675_call(), 0)
output = relay.Tuple([call_2739,])
output2 = relay.Tuple([call_2740,])
func_2743 = relay.Function([], output)
mod['func_2743'] = func_2743
mod = relay.transform.InferType()(mod)
output = func_2743()
func_2744 = relay.Function([], output)
mutated_mod['func_2744'] = func_2744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2745 = relay.var("var_2745", dtype = "float64", shape = (9, 7))#candidate|2745|(9, 7)|var|float64
uop_2746 = relay.cos(var_2745.astype('float64')) # shape=(9, 7)
func_1953_call = mod.get_global_var('func_1953')
func_1960_call = mutated_mod.get_global_var('func_1960')
const_2758 = relay.const([-4.077471,-2.498773,6.539476,5.235934,-6.059554,2.602292,3.170527,-3.008814,3.883443,3.452013,0.826134,6.105697,-1.689765,-4.775382,-9.742710,-1.637138,9.035283,4.636306,-4.825693,-8.565062,3.728589,-9.560177,3.373867,-8.870460,2.858907,3.378266,5.683071,-2.797643,-5.232866,7.879350,0.805447,-7.185011,-3.131739,-3.055414,-5.904017,-5.582740,-9.379172,-9.967019,5.060591,-6.613899,-5.555267,7.629773,-7.045038,0.690096,-3.215012,-5.253255,-8.885282,9.730166,-8.528948,-2.021037,-3.141558,-8.957667,0.558742,4.138846,-4.316357,4.883877,2.034313,-9.493933,-1.607136,4.017570,-3.653149,7.376268,-6.086280,-6.314091,-0.579042,1.616320,8.156929,9.820095,-6.508563,9.658243,5.888098,7.613012,6.885891,-6.133857,-1.359089,8.837282,1.970405,9.186613,0.772401,-9.989111,-4.037067,-9.215006,-9.861898,1.684223,-9.126137,1.157735,2.871043,5.115238,-5.840357,1.075486,5.996670,7.240358,1.443253,-0.597326,-9.334279,-5.055761,-0.757715,-9.094666,-0.924352,6.601357,-5.740594,-3.471263,2.330657,7.751661,-0.981974,-5.692603,3.858431,-9.588953,2.659213,0.145915,-5.279445,-3.426845,-5.924384,0.514843,-2.475280,-9.052103,3.183071,4.492539,-1.468736,-1.511652,9.237044,-7.172765,-3.451222,9.579528,6.776673,-8.249788,-7.341983,-1.560423,5.009555,2.828926,-6.497425,6.508230,7.737533,-8.163402,9.239142,-7.644946,-2.698100,2.613869,6.944791,-5.562607,4.809856,-1.743947,6.077597,-4.389988,-3.768190,4.821797,2.713988,-7.105205,6.608801,-6.985761,8.957849,3.113154,4.942129,4.551057,5.103029,9.708376,-9.245946,-0.674308,-9.311412,-4.920104,-0.471387,0.796626,-8.850463,-8.390263,2.893155,-9.132689,6.812384,-4.043404], dtype = "float64")#candidate|2758|(168,)|const|float64
var_2759 = relay.var("var_2759", dtype = "float32", shape = (224,))#candidate|2759|(224,)|var|float32
const_2760 = relay.const([5,4,-1,2,4,-7,5,-3,-10,-7,7,1,-6,-6,-1,3,-10,3,8,3,-7,2,-2,-8,-10,-5,8,-10,6,-9,2,3,1,-3,-1,2,7,-1,-1,-3,4,1,-4,10,-6,9,1,9,-9,-2,1,10,9,8,10,2,-1,-8,1,-7,9,4,9,3,-8,-2,-8,-8,6,9,-9,-2,2,-5,9,2,9,7,1,-8,6,9,-4,3,3,6,10,2,9,7,-9,-6,-4,6,5,-6,6,5,10,-8,7,-5,-3,3,4,9,-10,2,2,-1,4,7,3,-9,-9,8,-10,-7,1,4,9,-9,-2,2,2,10,1,7,-9,-6,3,8,-6,8,-4,-3,10,3,6,4,1,6,-1,-5,-9,-3,-7,-8,8,2,-10,7,8,2,7,4,9,-9,2,3,7,4,6,6,-9,8,-1,1,-6,5,-8,1,-6,-8,-4,-10,6,2,-7,6,7,7,-8,9,-1,7,-1,9,-9,-8,7,-4,3,4,6,-7,-3,-1,5,5,4,7,2,-5,-2,-4,10,-1,7,4,-5,-8,-7,7,9,-8,-6,10,-1,-9,-7,-10,-4,-9,-6,6,-4,-10,-3,3,-1,-7,-5,6,-10,-7,-1,-4,-9,8], dtype = "uint16")#candidate|2760|(240,)|const|uint16
var_2761 = relay.var("var_2761", dtype = "float32", shape = (720,))#candidate|2761|(720,)|var|float32
const_2762 = relay.const([-8,10,-5,3,3,-4,-5,-6,-7,-3,-1,-3,-10,8,-5,-7,-5,2,2,-8,5,5,2,8,4,8,-8,8,2,-3,4,-7,9,-8,7,5,-8,6,2,1,-5,5,-2,1,-10,10,-4,-2,-8,-3,-8,9,-1,-8,-8,10,10,7,8,-5,-10,-4,-1,9,-9,-4,-3,7,-9,6,5,-1,1,6,-3,10,3,-2,-10,-6,5,10,-5,9,-1,1,3,1,-9,-5,-6,-10,9,-5,-4,10,3,7,-6,-1,-3,2,-4,10,-8,8,2,-6,1,-9,-4,-6,8,2,4,-8,-6,5,-3,-5,-1,-8,-2,-1,-6,10,9,7,-1,-1,4,2,-2,-2,-3,10,10,7,2,7,-10,8,-4,9,5,10,1,-1,-10,-10,10,5,5,3,9,7,-8,-1,1,-10,9,-8,-4,3,-10,7,2,1,5,7,8,5,9,10,5,-6,2,5,3,-9,3,-4,-9,2,-2,8,-3,8,9,3,10,8,-5,7,5,10,4,-2,-2,-7,-7,4,9,1,-2,2,6,-3,7,9,-7,-1,-5,-6,-1,-1,1,8,9,-8,6,4,-3,2,-6,3,10,-4,9,1,-4,-8,-10,-5,-6,2,4,-3,-1,-7,8,2,-4,-4,-8,-4,-9,-9,9,-10,6,8,-7,7,7,-7,-3,-2,7,1,3,10,-10,-3,-3,-5,-6,-9,3,3,7,7,-10,9,7,3,-7,-3,3,7,10,3,6,-9,7,1,1,-5,8,-8,-6,-6,7,-2,-7,6,-3,-1,2,-10,-1,2,10,3,-1,-3,-6,-10,10,3,2,-5,8,-6,6,-9,6,9,9,3,4,7,-9,-5,10,6,-9,9,-9,-10,-10,1,10,-1,3,1,4,-9,6,1,4,-9,10,-10,10,3,-9,-7,6,8,-4,7,8,8,-10,1,6,-6,-6,7,-8,-8,-7,-6,3,-2,-4,4,5,-5,10,-8,5,-5,2,-9,-4,-5,-3,8,4,2,1,9,7,2,9,-6,-5,5,6,-8,-2,3,-4,3,1,6,-3,-7,-9,10,10,-2,8,2,3,4,3,-3,8,-6,1,-10,-9,5,-7,-5,10,10,7,3,2,-7,5,-1,-6,-2,9,1,9,5,10,1,-9,1,-4,10,-10,-8,-7,-7,-6,-7,-1,2,-4,-5,8,8,10,-5,-2,8,-2,-8,-7,-1,4,-5,-8,-4,-5,9,-7,-1,6,1,3,-1,-8,-5,2,6,-3,10,10,-6,-2,-8,-3,8,-7,7,-8,6,-5,-1,-4,-4,9,-10,5,4,2,10,3,7,7,-9,-2,3,5,-8,-10,-9,4,8,7,1,-5,5,9,7,7,2,-4,-9,-10,9,-9,1,-6,-5,2,-2,-6,-7,10,10,-2,9,9,5,6,3,10,1,2,1,-3,-3,4,2,3,-3,4,3,9,5,1,3,2,9,1,2,-5,-2,4,-4,8,6,-9,-7,6,-6,-2,10,2,-9,-3,8,5,-8,-8,10,10,-9,-4,9,-8,8,-5,-5,-10,-1,-7,-1,-1,-3,-1,-4,-6,4,-9,9,10,-9,-8,4,-1,10,-6,-10,2,-5,-6,-6,3,-4,2,10,-3,-7,-5,10,5,-4,1,-7,9,5,-4,10,10,-10,1,6,-2,6,3,-3,-4,-1,-1,9,2,-7,-5,-4,3,9,5,-8,8,4,10,2,-4,-2,-1,9,4,-10,3,4,-1,9,-8,-2,-3,-8,6,8,2,7,10,9,-1,3,-6,-7,-1,2,5,6,10,10,5,-8,-9,-2,-10,-1,1,-5,10,-1,-8,10,7,-1,9,5,-1,-5,-7,-9,10,-9,3,-8,-6,4,4,-9,-10,-1,4,-5,8,-7,-8,5,-6,1,-10,4,9,-2,-2,5,-3,-2,-2,-4,-8,-9,-7,6,-1,-5,-5,-7,-7,-9,-9,-2,1,-1,-5,-7,-8,-1,3,10,-4,4,-6,-4,-7,-3,-7,1,10,-3,7,-8,-6,-1,6,-2,-8,10,7,-6,-6,3,5,1,7,2,4,10,1,-1,-5,-9,-1,-7,-4,-3,4,-4,-1,6,-9,-2,2,-4,-3,4,-10,-1,4,7,2,8,7,7,-7,6,3,10,9,-10,9,-2,-7,-9,-10,-6,-8,10,-6,-3,-10,-8,6,8,-2,-10,2,-9,5,-7,4,-9,8,8,-4,7,-8,9,-3,-9,-7,7,1,6,5,10,9,-2,9,-2,-10,9,6,-4,-6,7,4,-3,-9,10,4,-3,-9,1,6,-3,4,6,1,-2,-5,-10,-10,-3,-4,3,2,3,3,-1,1,3,5,7,9,3,-8,-2,-8,7,5,1,8,-9,10,-7,-4,-8,2,-7,5,-7,-4,1,-4,-3,-10,8,-8,10,7,-1,-2,1,4,-6,-9,4,-4,7,-5,8,-7,-5,3,5,5,-10,4,-10,1,-9,-1,-4,-8,-2,3,10,6,5,3,7,7,-4,1,1,-1,2,5,-8,1,8,10,4,-3,5,-8,-3,-4,-7,-8,8,-1,1,10,-1,-9,-3,-4,9,5,-3,-6,9,1,6,-4,-1,5,-3,3,-6,-10,5,7,3,-8,4,-3,6,8,-7,4,-7,2,-4,1,-9,-10,-7,10,6,6,-2,4,3,9,4,8,2,1,-6,7,-5,4,1,-10,2,8,5,1,4,7,-3,9,-6,-1,-3,10,5,-8,7,-5,5,2,-7,-7,-3,1,1,1,-10,-2,1,1,-5,2,8,-1,-3,3,6,-3,6,2,1,5,-6,-6,-10,-4,-5,-8,-6,-10,-2,8,-4,-4,2,8,-1,-9,-1,-5,10,-5,-10,2,2,4,4,9,-3,-8,10,2,-10,-10,4,1,7,-10,9,-2,3,-4,-9,5,-7,-9,-3,-8,-10,4,-6,-7,-3,1,-1,4,8,-1,2,-1,2,-3,8,6,2,3,8,-10,-9,4,3,-3,5,-9,1,5,-9,6,2,7,-5,1,-2,-2,-3,10,4,8,-9,-8,9,4,4,5,-4,-1,3,-10,-4,-6,1,-4,3,-6,-10,-3,-10,7,8,9,6,-1,-1,-6,7,3,-1,-5,-8,9,5,-9,10,6,-1,10,-2,-8,3,-7,9,-8,-6,7,2,-6,-7,-4,2,-4,5,-10,-4,4,-6,8,3,-8,-7,-5,-10,-7,-3,-5,-3,7,5,-8,8,8,3,9,-2,-2,-3,-1,7,3,1,6,1,1,-3,-8,-9,4,4,5,-2,6,-8,-2,7,7,-5,9,8,-1,10,-1,6,10,-1,-8,6,10,-3,8,-8,-7,8,9,7,-7,1,-6,1,1,-5,-5,-4,-4,9,-8,-7,-2,-10,-10,-2,4,5,4,-7,10,-1,2,1,-4,-10,-7,-5,1,-1,4,10,-1,-9,-2,8,-10,-6,6,-2,8,-3,8,-6,-7,2,2,-1,-8,6,1,-2,4,-5,5,-5,9,2,7,-6,6,-8,-3,-1,-1,3,-4,-3,2,1,7,-4,3,4,1,8,2,-8,-5,8,-8,6,-5,-10,-8,6,-8,-4,4,5,-1,-5,-7,8,1,-7,-6,-1,-3,7,6,1,-4,7,4,-5,4,-8,4,4,3,-4,-6,9,10,3,9,-1,8,3,1,6,10,8,-9,7,6,10,-10,3,7,7,-1,-9,8,2,-9,-5,-10,1,7,-3,3,7,4,-7,-8,-7,5,-2,9,2,-10,-9,2,-4,-1,-4,-2,-10,-10,7,1,1,-1,1,-4,-8,-2,9,-8,-4,9,3,-8,-10,-8,-10,-1,5,1,2,8,2,-8,5,3,4,9,5,-8,8,2,-7,9,4,9,-7,-7,-9,1,10,-5,-8,-2,2,8,8,-5,2,8,-6,-2,-3,4,-4,8,-1,-10,7,-1,-2,6,8,6,9,-6,10,-8,8,9,-6,-6,9,-5,-8,5,7,1,-7,7,-2,9,-2,-8,-6,2,3,-9,6,9,2,5,5,7,6,8,-7,-1,-1,-9,6,-10,-1,-9,5,-2,-2,-8,-4,1,-1,7,3,8,7,-4,1,9,-5,1,-8,8,-2,7,5,8,-6,-3,3,6,1,4,-1,3,1,7,9,-9,4,-8,5,-5,1,1,-1,5,-4,3,-1,-3,-2,-4,-8,1,1,2,-5,9,7,1,7,-10,-4,10,9,10,6,10,6,-5,-3,3,2,-4,-3,6,1,-3,-9,4,8,7,7,5,1,2,-5,-3,-8,7,-4,-1,1,3,7,-7,-9,-9,4,-2,4,-10,-9,-7,2,6,8,-2,-1,10,10,3,4,6,5,-4,1,7,8,5,-9,5,-8,8,-2,7,8,1,-1,-9,-6,7,-6,7,10,4,-3,-9,-8,10,9,-9,-9,-8,-9,9,9,-3,2,-1,-2,-4,-5,-7,1,-10,7,7,2,-8,-4,8,-5,-10,-1,-9,-5,-7,5,-3,3,7,5,-6,9,1,1,9,-10,-2,2,-5,6,7,-8,-8,-6,-1,-6,1,8,-1,1,6,-8,4,2,7,3,-9,-6,2,-1,4,-7,-5,5,8,5,-9,2,3,5,2,-5,7,-8,-3,1,8,-2,-6,8,-5,8,6,-9,6,10,-10,-10,8,7,1,-1,-7,-2,10,-7,-3,-10,6,9,-1,-3,5,9,5,7,5,3,-8,5,6,-4,-8,9,2,-10,-8,8,-8,7,5,7,1,-2,-6,-7,-2,1,-5,-5,-8,-2,8,10,-8,-9,-2,-3,-8,-1,5,-7,9,6,-8,-3,-6,3,-6,1,-1,-7,9,-3,6,-3,2,-5,-10,6,-1,-6,-3,-4,1,3,8,-4,-7,-5,-1,-3,10,7,-10,-10,2,-10,5,4,-1,-8,6,-7,-9,7,1,-6,-9,-3,-7,-9,-8,-4,5,7,-6,5,8,-6,-4,-8,2,-8,-6,9,1,-2,9,2,-7,-1,5,-6,10,10,4,9,-4,8,-5,5,5,6,5,-9,8,-7,6,6,7,7,5,-9,2,-9,2,-6,-1,-2,-2,-1,1,-3,-3,-2,-6,2,-7,-10,-6,-10,5,7,8,-4,-2,-1,3,1,-3,-4,4,-8,-7,-1,-9,1,-7,-10,2,7,9,9,10,-5,5,-1,7,9,10,-7,3,3,-8,6,6,-6,-1,-6,6,-5,-3,9,6,4,-10,-4,-8,-2,9,8,3,-2,-10,-9,-10,-9,-9,-4,4,10,8,-6,1,7,-10,-7,1,-9,-6,1,-3,10,7,-8,2,7,-1,10,-3,-10,-2,-7,-6,5,-5,9,-7,9,-5,-6,-4,-10,-8,-7,-7,-5,3,3,-8,-3,-7,10,-3,7,-7,-6,-6,8,-7,4,-1,3,10,-5,-6,-1,3,6,-4,6,6,4,10,-7,-4,-3,1,-9,3,9,-2,-4,-6,3,-5,-1,2,-4,-5,1,3,4,-3,-5,9,-8,6,8,-4,10,-7,-10,-6,3,-9,-1,-10,4,-8,-10,3,-7,-1,1,-3,5,-3,3,1,-9,10,-3,-4,4,8,-10,3,1,2,9,2,9,9,5,6,2,-5,-8,4,3,-5,4,-10,-4,-7,-10,-7,6,-9,-7,4,-2,-6,8,-2,3,-5,7,-6,-8,4,-3,4,-6,-2,-9,4,-5,-2,2,7,-1,-6,8,9,-4,3,-1,-9,-4,-2,7,-4,6,-9,-8,-6,7,-5,-4,2,-7,-7,3,-7,-7,10,5,-8,10,1,-4,-6,1,-7,-8,-6,3,5,-1,5,-1,4,10,9,1,-9,9,5,9,-6,10,-1,-5,-1,9,6,2,6,-2,-4,-4,-8,-8,-2,5,-3,-2,-10,-1,3,8,9,-9,-3,-9,6,10,6,-8,-5,8,10,2,-7,10,2,1,-7,8,3,-9,-3,-4,-8,-9,7,-3,-5,4,2,4,-1,7,7,-10,-3,1,9,-6,10,-4,-3,4,5,-2,2,-1,2,3,-3,10,-3,3,8,2,7,7,-4,7,-8,6,-6,-5,5,8,2,-6,-2,-8,10,-2,-6,6,9,9,4,-9,2,-1,-5,-5,-10,1,-1,4,-7,-8,-3,-2,10,2,-7,-8,-9,8,-9,-9,5,1,-1,7,1,-2,2,9,-5,9,3,3,-6,6,-5,4,-6,-3,-2,-4,8,7,10,-3,8,9,9,5,-4,-3,-7,6,-4,10,-1,-6,2,10,-9,7,7,1,9,-3,7,9,-3,-7,5,-2,4,5,3,-8,-8,-2,-2,-1,8,-3,2,-9,6,-3,-3,-7,-4,5,-10,2,9,-3,6,3,1,-9,7,-9,3,-5,-8,-5,7,-2,4,-4,-5,-5,4,4,-3,10,10,4,3,10,-2,-6,5,-5,-1,4,-8,6,7,9,3,-2,9,6,5,-5,-1,5,10,-6,1,-8,9,2,6,-7,-3,3,7,5,-5,1,5,1,8,-8,-9,9,-10,5,-4,-4,5,10,7,4,-8,-8,-10,10,-8,6,-3,-7,-6,9,-9,9,-2,-4,6,1,-2,9,-7,10,7,3,3,-5,4,-10,-6,-7,-10,7,10,2,-6,3,-9,-7,3,8,-3,4,4,-10,-7,-1,9,-4,6,8,8,5,8,-4,3,-4,5,-4,4,-1,3,9,-2,9,-9,-9,-10,-4,8,9,10,-8,5,-3,-7,1,8,2,-3,7,-9,6,-3,-2,-10,10,6,6,1,-2,6,8,5,2,-2,7,5,5,-6,9,-7,8,9,7,-3,-8,-6,3,-8,-7,-3,-2,-10,8,-3,1,-6,-3,1,4,-1,-5,9,-8,2,-5,-10,3,5,7,8,8,-7,8,-3,3,3,2,-5,-8,6,10,-4,7,6,-9,-1,8,-8,-7,-7,6,10,3,-8,10,4,-1,5,-10,-3,-5,4,2,8,-4,2,6,-7,5,9,9,-7,4,10,5,2,10,3,-9,-1,-9,-2,7,5,-5,9,-10,6,-10,-9,-2,5,9,3,-1,3,-9,7,6,-8,-6,5,-5,3,9,-10,-5,2,5,3,10,-7,5,-7,-4,10,-3,-8,-7,-6,3,5,3,1,3,-3,2,-3,2,7,-6,7,-3,-2,4,-7,3,2,-9,3,8,6,6,6,1,5,2,1,-5,-6,-8,-5,-4,9,1,-9,8,9,-7,1,10,-9,7,10,10,2,-10,3,5,1,-1,-3,8,-2,-8,-4,10,3,-5,3,10,5,4,3,-7,-3,7,-9,9,9,-6,-8,-8,6,-3,-9,6,-2,-2,-8,-1,1,-9,10,-4,5,-2,8,3,5,5,-8,8,1,-7,10,2,-6,4,6,7,-7,2,10,1,1,9,-9,1,8,-1,-6,2,1,-9,3,6,-4,-7,-6,-10,-6,-10,8,7,9,-6,8,-10,5,3,5,8,-2,4,5,6,-6,10,-8,-2,4,6,8,-10,5,-9,-5,-10,3,-6,9,-2,8,1,-9,-5,-10,5,-6,9,8,-10,6,-1,-5,9,-9,-10,-5,5,1,6,-2,7,6,9,-5,-7,10,-10,-5,8,-2,-10,-7,-10,6,10,-9,-6,-5,10,-4,1,-7,9,-1,-5,-3,-9,-2,1,-9,6,9,4,6,6,-1,6,-9,9,9,-5,8,5,5,8,8,-1], dtype = "uint8")#candidate|2762|(2880,)|const|uint8
call_2757 = relay.TupleGetItem(func_1953_call(relay.reshape(const_2758.astype('float64'), [7, 3, 8]), relay.reshape(var_2759.astype('float32'), [8, 28]), relay.reshape(const_2760.astype('uint16'), [240,]), relay.reshape(var_2761.astype('float32'), [60, 12]), relay.reshape(const_2762.astype('uint8'), [96, 30]), ), 3)
call_2763 = relay.TupleGetItem(func_1960_call(relay.reshape(const_2758.astype('float64'), [7, 3, 8]), relay.reshape(var_2759.astype('float32'), [8, 28]), relay.reshape(const_2760.astype('uint16'), [240,]), relay.reshape(var_2761.astype('float32'), [60, 12]), relay.reshape(const_2762.astype('uint8'), [96, 30]), ), 3)
func_2743_call = mod.get_global_var('func_2743')
func_2744_call = mutated_mod.get_global_var('func_2744')
call_2769 = relay.TupleGetItem(func_2743_call(), 0)
call_2770 = relay.TupleGetItem(func_2744_call(), 0)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
call_2784 = relay.TupleGetItem(func_817_call(relay.reshape(const_2762.astype('uint8'), [15, 12, 16])), 2)
call_2785 = relay.TupleGetItem(func_819_call(relay.reshape(const_2762.astype('uint8'), [15, 12, 16])), 2)
output = relay.Tuple([uop_2746,call_2757,const_2758,var_2759,const_2760,var_2761,const_2762,call_2769,call_2784,])
output2 = relay.Tuple([uop_2746,call_2763,const_2758,var_2759,const_2760,var_2761,const_2762,call_2770,call_2785,])
func_2787 = relay.Function([var_2745,var_2759,var_2761,], output)
mod['func_2787'] = func_2787
mod = relay.transform.InferType()(mod)
mutated_mod['func_2787'] = func_2787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2787_call = mutated_mod.get_global_var('func_2787')
var_2789 = relay.var("var_2789", dtype = "float64", shape = (9, 7))#candidate|2789|(9, 7)|var|float64
var_2790 = relay.var("var_2790", dtype = "float32", shape = (224,))#candidate|2790|(224,)|var|float32
var_2791 = relay.var("var_2791", dtype = "float32", shape = (720,))#candidate|2791|(720,)|var|float32
call_2788 = func_2787_call(var_2789,var_2790,var_2791,)
output = call_2788
func_2792 = relay.Function([var_2789,var_2790,var_2791,], output)
mutated_mod['func_2792'] = func_2792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2458_call = mod.get_global_var('func_2458')
func_2460_call = mutated_mod.get_global_var('func_2460')
call_2824 = func_2458_call()
call_2825 = func_2458_call()
output = call_2824
output2 = call_2825
func_2859 = relay.Function([], output)
mod['func_2859'] = func_2859
mod = relay.transform.InferType()(mod)
output = func_2859()
func_2860 = relay.Function([], output)
mutated_mod['func_2860'] = func_2860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2481_call = mutated_mod.get_global_var('func_2481')
call_2884 = func_2480_call()
call_2885 = func_2480_call()
output = call_2884
output2 = call_2885
func_2888 = relay.Function([], output)
mod['func_2888'] = func_2888
mod = relay.transform.InferType()(mod)
mutated_mod['func_2888'] = func_2888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2888_call = mutated_mod.get_global_var('func_2888')
call_2889 = func_2888_call()
output = call_2889
func_2890 = relay.Function([], output)
mutated_mod['func_2890'] = func_2890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2743_call = mod.get_global_var('func_2743')
func_2744_call = mutated_mod.get_global_var('func_2744')
call_2924 = relay.TupleGetItem(func_2743_call(), 0)
call_2925 = relay.TupleGetItem(func_2744_call(), 0)
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
var_2929 = relay.var("var_2929", dtype = "float32", shape = (1, 18))#candidate|2929|(1, 18)|var|float32
var_2930 = relay.var("var_2930", dtype = "uint16", shape = (1, 624))#candidate|2930|(1, 624)|var|uint16
call_2928 = relay.TupleGetItem(func_656_call(relay.reshape(var_2929.astype('float32'), [1, 6, 3]), relay.reshape(var_2930.astype('uint16'), [24, 26]), ), 2)
call_2931 = relay.TupleGetItem(func_660_call(relay.reshape(var_2929.astype('float32'), [1, 6, 3]), relay.reshape(var_2930.astype('uint16'), [24, 26]), ), 2)
func_2670_call = mod.get_global_var('func_2670')
func_2671_call = mutated_mod.get_global_var('func_2671')
call_2953 = func_2670_call()
call_2954 = func_2670_call()
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
var_2959 = relay.var("var_2959", dtype = "float64", shape = (3, 66))#candidate|2959|(3, 66)|var|float64
call_2958 = relay.TupleGetItem(func_2318_call(relay.reshape(var_2959.astype('float64'), [9, 11, 2])), 0)
call_2960 = relay.TupleGetItem(func_2320_call(relay.reshape(var_2959.astype('float64'), [9, 11, 2])), 0)
output = relay.Tuple([call_2924,call_2928,var_2929,var_2930,call_2953,call_2958,var_2959,])
output2 = relay.Tuple([call_2925,call_2931,var_2929,var_2930,call_2954,call_2960,var_2959,])
func_2961 = relay.Function([var_2929,var_2930,var_2959,], output)
mod['func_2961'] = func_2961
mod = relay.transform.InferType()(mod)
var_2962 = relay.var("var_2962", dtype = "float32", shape = (1, 18))#candidate|2962|(1, 18)|var|float32
var_2963 = relay.var("var_2963", dtype = "uint16", shape = (1, 624))#candidate|2963|(1, 624)|var|uint16
var_2964 = relay.var("var_2964", dtype = "float64", shape = (3, 66))#candidate|2964|(3, 66)|var|float64
output = func_2961(var_2962,var_2963,var_2964,)
func_2965 = relay.Function([var_2962,var_2963,var_2964,], output)
mutated_mod['func_2965'] = func_2965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2546_call = mod.get_global_var('func_2546')
func_2547_call = mutated_mod.get_global_var('func_2547')
call_2975 = func_2546_call()
call_2976 = func_2546_call()
output = relay.Tuple([call_2975,])
output2 = relay.Tuple([call_2976,])
func_2985 = relay.Function([], output)
mod['func_2985'] = func_2985
mod = relay.transform.InferType()(mod)
mutated_mod['func_2985'] = func_2985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2985_call = mutated_mod.get_global_var('func_2985')
call_2986 = func_2985_call()
output = call_2986
func_2987 = relay.Function([], output)
mutated_mod['func_2987'] = func_2987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3008 = relay.var("var_3008", dtype = "uint16", shape = (5, 12, 12))#candidate|3008|(5, 12, 12)|var|uint16
var_3009 = relay.var("var_3009", dtype = "uint16", shape = (5, 12, 12))#candidate|3009|(5, 12, 12)|var|uint16
bop_3010 = relay.minimum(var_3008.astype('uint16'), relay.reshape(var_3009.astype('uint16'), relay.shape_of(var_3008))) # shape=(5, 12, 12)
func_1953_call = mod.get_global_var('func_1953')
func_1960_call = mutated_mod.get_global_var('func_1960')
var_3023 = relay.var("var_3023", dtype = "float64", shape = (168,))#candidate|3023|(168,)|var|float64
var_3024 = relay.var("var_3024", dtype = "float32", shape = (1, 224))#candidate|3024|(1, 224)|var|float32
var_3025 = relay.var("var_3025", dtype = "uint16", shape = (240,))#candidate|3025|(240,)|var|uint16
const_3026 = relay.const([-2,-2,-8,-9,-8,9,-8,-8,8,4,2,2,2,-7,5,4,-2,8,-1,10,7,-5,2,7,5,-8,1,3,3,6,-3,-5,-1,6,9,3,-7,2,4,-9,-3,5,10,-9,9,9,10,-10,9,4,4,-6,8,10,9,10,-10,-8,-3,1,6,8,6,-6,-6,2,10,10,-6,-1,-2,7,-5,10,3,4,3,-5,1,-3,4,6,-1,-1,7,-2,-2,-10,-3,7,-4,-7,-4,-6,-6,2,4,1,4,-4,3,-3,4,-3,6,7,10,8,6,1,-3,-9,10,-4,-5,9,-2,-4,6,5,7,3,-6,3,7,4,-6,-8,-7,5,9,-10,6,9,-1,-5,8,10,-9,6,7,-7,-4,-3,7,1,-2,9,4,10,-4,-8,3,6,10,-9,1,2,-2,4,-3,-5,7,2,4,1,-9,10,-4,5,8,3,-9,-5,-9,10,6,-8,-1,-6,-4,-3,-3,-6,-1,1,2,-1,8,-4,6,1,-1,-5,-1,7,6,-10,-5,8,-5,5,4,2,1,10,-10,-9,4,-5,-5,-10,-2,-1,-7,1,9,-3,2,-4,-9,-10,9,-4,-5,6,9,2,8,-8,-4,1,9,-4,-7,-5,5,9,-7,7,-10,-2,10,-4,-9,7,5,5,-2,-4,1,9,-5,2,-1,-1,-1,-4,7,1,-10,9,6,7,5,9,3,4,6,9,4,-10,5,5,-2,9,-3,-7,-2,-7,8,-5,-1,8,-4,5,-8,-10,-9,-6,1,2,4,3,8,5,3,8,8,1,2,7,-3,5,-3,-2,6,8,-7,-8,-8,-10,2,7,3,-1,8,-7,6,-2,4,-5,1,-2,4,-3,4,5,3,-5,4,3,3,-2,3,2,-7,8,8,-8,10,5,7,10,-6,6,1,9,-1,-7,-4,-10,5,10,-7,-6,-10,-3,-2,4,-7,7,2,-4,-8,5,-9,4,-4,7,-3,-10,-5,7,-5,-7,-3,-10,2,-6,-6,-4,-8,1,3,5,3,6,-8,9,-5,-6,5,-1,-4,9,8,7,10,-9,-7,8,10,2,-6,-3,-1,7,-7,-3,7,-10,-5,-2,6,9,-6,7,-10,5,-4,-7,7,1,6,4,-5,-8,-3,5,-4,7,9,7,5,-5,10,3,10,1,7,-7,2,-1,8,6,-8,5,9,9,3,4,-8,3,1,3,-1,-8,-8,8,5,-1,9,2,-7,1,-5,-5,1,10,-2,-10,5,-6,9,10,-1,8,-4,-7,9,1,4,8,6,9,-3,2,1,1,-5,-5,-10,4,1,-7,1,8,-5,-3,4,-10,-3,5,2,5,6,4,2,4,-1,-6,10,-10,-10,-8,6,-3,2,-4,-5,6,8,-9,-7,-4,1,-3,-5,8,7,-2,-5,2,7,6,7,-3,-9,5,-3,-6,-10,7,-1,3,-2,1,-1,5,-10,-10,-10,-2,-5,-6,-6,5,1,-9,9,-2,-6,8,-9,7,-3,-8,10,-3,5,-5,2,-6,4,-7,7,5,6,5,8,5,-1,-6,1,7,-1,-8,2,7,-9,-2,8,4,-3,-7,10,-4,-5,1,-2,-5,-1,-5,8,3,-10,8,4,-10,-10,10,1,1,4,3,2,-8,-2,8,-9,-9,-5,5,-8,6,3,8,-10,9,2,-10,3,-9,-3,7,7,-8,-5,-2,7,-1,-6,4,7,-9,-7,-5,-7,7,1,-1,-2,-5,-2,-1,6,9,8,-7,-7,6,-3,6,7,-1,9,-9,9,-9,-2,9,-10,-10,-10,-7,-3,-2,-6,-8,4,-3,9,6,-7,-8,7,5,-4,10,-1,-4,2,1,-6,10,8,5,-7,-5,9,-1,1,-4,2,2,10,10,-1,9,1,7,5,7,6,6,7,10,5,4,7,-5,-1,-9,7,10,-7,9,1,-4,2,-10,9,-9,-5,6,-1,1,7,4,7,-3,-1,8,2,8,-4,-3,10,9,-6,-9,5,9,-9,-7,-5,3,-7,-7,-3,-1,5,9,-5,-3,3,-8,-4,-4,7,1,4,-9,5,9,5,4,-3,7,3,-9,-4,7,-3,2,2,4,-7,8,3,9,-7,-7,-6,-8,-4,7,3,7,5,-6,3,5,-6,-4,-10,4,6,8,6,2,5,8,-3,6,2,-7,5,-7,-8,-10,5,-8,5,-4,-3,1,-6,-10,1,9,1,10,-1,-6,9,-7,-10,-5,10,8,-6,3,-7,4,-8,-3,10,-4,-4,8,-6,8,-10,5,-4,3,-5,3,7,1,-2,-6,-10,1,-3,-7,-6,7,2,5,-8,-6,-3,4,-8,-9,9,-1,8,-5,5,-9,1,-6,-1,-6,9,1,-3,-4,-10,-1,8,10,-6,-6,8,-1,-3,-9,9,-1,-9,10,7,-3,7,-8,6,3,-4,4,-4,1,5,10,-7,-10,-5,-10,-4,-1,-9,-8,-8,8,9,4,-8,-9,-4,4,-1,-8,7,-9,1,4,1,-6,4,-1,-5,-4,-9,-7,-3,-4,7,1,10,-9,-9,2,6,7,1,2,-2,-10,-1,-3,7,-1,9,-2,-9,1,-5,-8,-8,-10,-6,4,9,8,-10,6,-8,6,6,-6,9,5,-8,-7,-1,-7,9,4,5,10,4,-5,-3,-2,8,-6,-5,3,5,4,-6,2,10,5,-9,-3,1,7,-8,10,9,5,6,-9,-9,-8,2,2,7,1,10,-3,3,-4,-1,9,2,-3,-3,1,5,-8,-9,-3,6,6,-8,-9,-9,2,-9,7,4,-10,-2,10,10,4,-6,8,1,-2,-3,9,-5,-9,1,-8,7,3,-8,-7,-9,-8,10,-1,-9,9,5,3,1,6,9,-5,1,6,-1,6,3,-8,-1,5,1,4,-4,-8,9,4,-8,-6,9,8,4,1,-9,2,8,-2,3,-7,-2,-9,10,1,-6,-9,-9,-4,-3,2,-4,4,4,-2,-1,-2,-3,4,-8,-1,3,9,7,7,-10,3,-7,-7,10,-6,8,4,2,-7,4,-5,10,-3,9,6,-10,7,-6,8,6,7,-3,7,10,8,-2,4,-8,8,6,-9,4,6,2,6,-10,-2,-7,-10,3,-2,2,-6,3,-8,-9,-7,-4,-3,-9,-2,5,3,5,8,3,2,5,6,1,7,2,2,-9,2,-7,8,-2,-1,-6,2,8,7,-1,1,6,3,4,-5,4,2,4,3,-2,-1,-3,10,-9,5,7,-6,-4,2,-6,-10,4,2,-1,-4,-1,-3,-7,6,-9,8,6,10,2,-7,-9,-1,-8,-1,-9,-4,-9,5,-10,-4,3,-5,-5,-1,9,5,3,-10,-10,2,7,10,-2,2,7,9,7,8,-10,-6,7,6,-7,2,9,-7,-7,2,1,1,1,7,-5,7,6,-4,-7,2,9,3,8,-6,-8,-4,4,8,-5,-3,-2,8,6,-10,2,-8,7,-1,-5,10,5,4,-9,-7,9,-5,-10,10,4,-10,-3,-9,4,-5,-5,2,-9,3,1,2,-10,3,-1,8,5,4,-8,2,1,9,-4,-9,-9,3,-2,2,-4,-2,9,2,7,6,9,7,5,7,9,4,-8,-8,2,2,4,-2,-5,-9,-2,-10,-4,10,-3,9,-5,-9,-10,5,4,9,-3,-3,7,3,-10,10,-9,1,9,5,-5,-7,1,8,-1,-5,7,-5,3,-6,10,-5,8,1,10,-1,2,9,-10,-9,3,7,4,-6,7,-10,-10,6,-2,3,-4,-4,-2,8,-3,5,2,8,4,-5,-8,10,9,-5,-2,1,-3,-2,2,-1,8,-1,-9,-10,-2,4,9,9,-9,-7,3,6,-6,2,-10,-3,10,1,-2,2,4,-6,-9,1,7,8,-9,-5,5,-1,2,-1,7,-4,3,-2,2,-1,1,1,-9,8,-3,3,2,-1,7,9,-6,-2,8,7,2,-3,8,-10,2,7,3,-3,3,9,8,5,-2,-6,-10,2,-10,4,-8,-7,4,-6,-5,10,-3,-9,1,-8,10,5,4,4,4,-2,-2,-3,-6,-3,-7,8,-4,-2,2,9,-1,-3,-4,1,-5,-2,-3,-5,-5,-9,-9,-2,-5,-9,-4,10,-3,-2,-10,-4,-5,1,-3,-6,-3,9,-3,7,7,6,4,-7,-9,-3,2,-1,4,-5,-10,-3,8,-7,5,1,-1,5,3,10,3,-10,-1,-3,6,-3,-9,-9,10,-9,9,-9,9,6,6,-5,-9,3,7,-6,4,-7,-8,1,10,5,2,-2,7,-2,-3,-1,9,4,-2,8,2,10,-2,7,2,3,-5,-2,4,5,-8,-2,2,4,-10,9,-10,1,-1,3,-10,7,5,6,-3,7,-7,2,-6,-3,-1,-8,1,-10,-8,6,-3,-3,-2,8,-2,-9,-7,-6,5,1,2,-6,9,-5,-1,6,2,4,10,9,10,-9,-7,10,-6,10,10,-1,2,-7,7,-8,-3,-4,6,-5,1,3,-10,-2,4,6,-7,-3,7,3,3,2,4,1,9,-8,1,-10,4,1,5,-2,-8,-3,-4,6,10,5,6,-5,3,9,3,-7,1,-5,-7,1,9,-8,-2,2,4,7,-5,-9,6,-4,-7,-7,1,9,8,-3,5,2,6,1,-1,-4,-3,-7,-2,9,4,-2,-8,4,10,-3,-7,-4,8,6,6,-6,-6,-7,5,-10,1,-3,10,5,3,4,-2,6,6,9,-4,10,-7,-8,2,-1,-9,-2,-2,-8,-4,8,3,-5,-5,-10,7,-1,-6,9,7,10,6,5,-10,4,9,1,-5,-2,9,1,3,-4,-1,8,-5,-5,4,-9,-5,10,3,8,6,-8,4,-2,-1,8,1,1,-6,-5,6,-5,-6,-7,-6,7,-4,8,-4,3,-9,9,-6,-6,-7,-1,6,6,-10,-1,5,-10,-4,-5,1,6,-10,9,-7,8,-7,-9,-8,-5,5,7,-5,-10,-5,9,-6,5,-2,-4,1,-3,5,-1,6,-1,1,2,5,5,9,-6,-1,-3,-7,-3,8,-7,9,-6,-4,-5,-5,3,1,9,-3,8,-8,-6,7,3,5,-10,8,9,-3,8,-1,7,8,5,1,-5,2,3,-3,7,-8,2,1,7,6,-9,6,-3,1,8,-1,2,6,-3,4,7,-6,-8,-2,10,-2,-7,6,5,-7,-9,5,2,-7,-10,-6,10,10,9,-5,-10,-8,5,8,-1,-10,1,-2,-7,-9,-9,-8,5,1,9,-2,2,9,-4,-7,10,-5,-5,6,-7,2,10,-9,7,-10,3,-7,-10,4,1,-8,1,6,10,1,-8,3,5,6,1,8,6,1,-4,-1,-6,-8,2,-6,-7,-2,-2,-5,-9,8,-7,-4,-4,10,-7,2,3,4,-5,10,7,-7,6,-5,4,-5,-10,3,-1,3,-7,-5,7,6,8,-4,-7,-4,-6,10,-2,1,3,9,1,5,-9,8,8,9,-1,2,5,-3,-5,-3,9,1,1,9,2,-2,4,8,-4,-9,8,-5,7,6,-2,-9,4,-6,-1,-7,-8,-5,-6,4,8,9,5,10,1,-4,-6,5,-4,-3,5,-8,-8,5,6,8,-5,9,-8,-3,-7,-1,1,-3,6,-2,7,-5,-2,10,2,-1,2,10,-1,10,-10,-2,-8,10,4,-6,1,-7,2,3,3,2,4,-7,2,4,6,-7,-3,-10,-6,-8,-8,1,10,3,-8,9,4,8,1,10,-7,6,3,-7,-10,7,7,7,2,1,4,5,-7,-6,6,-10,4,-3,9,7,4,-9,-3,-8,-8,-6,-10,2,5,-6,5,-4,-1,5,6,1,-7,-10,-9,-5,9,3,4,7,-3,-8,10,-7,-10,2,6,7,6,-6,-8,-3,-6,-4,-2,-10,5,-3,-2,5,3,-8,-1,-4,2,1,3,-7,-10,9,-4,-7,9,-4,-10,-2,8,-4,7,-7,10,-1,4,9,-8,8,-7,1,-6,-6,-5,9,-2,-4,3,-8,-9,-3,6,9,-2,6,-3,-7,9,7,-6,9,1,5,-5,6,-3,-9,5,-2,8,-8,2,-1,-3,-7,7,6,-9,2,5,10,-9,8,-8,10,-6,-6,-6,-1,5,7,-6,-10,6,-1,-1,1,-9,-1,7,4,10,4,-8,4,-5,-7,-3,-7,8,10,-6,-9,-1,-5,-10,4,8,-5,-4,-10,-9,1,-2,3,-6,-1,-5,9,-1,-6,3,10,-9,6,3,4,10,7,4,4,-4,-2,7,7,-6,-8,1,10,4,-3,9,2,3,-3,-9,4,-6,-2,-10,1,-10,-6,-9,-2,2,10,3,3,9,-2,3,-2,6,1,3,-3,1,5,-6,2,4,-9,4,-4,6,-3,-6,9,9,8,-4,-4,-8,6,7,2,-10,10,-1,-10,2,9,8,-10,9,-10,8,-1,-4,10,5,-5,-3,10,9,2,-3,1,-8,-10,-8,-4,-4,-3,-10,-2,-7,9,-1,-5,-10,4,-7,-7,-8,5,-7,4,-2,4,2,-8,-2,-8,-7,-3,-9,10,-2,2,-4,-5,4,4,6,9,-3,-6,5,8,-6,-8,-10,10,5,-3,9,-2,9,2,-4,-3,7,4,5,5,-2,8,-3,-3,2,-9,-6,-5,-5,-8,9,7,-3,9,2,-9,7,8,6,10,9,-1,8,-8,5,5,-9,10,-5,10,-3,2,8,1,1,-4,-1,-3,-2,-6,-7,1,-3,-8,9,6,10,-3,-7,-4,8,-9,2,-7,-5,1,4,-7,-4,7,-4,-7,-10,5,-7,-6,-7,-3,8,-5,-5,-4,10,-7,-8,-8,-9,9,7,7,-2,-10,-1,-8,-5,4,1,10,-1,6,3,-4,-8,2,-6,1,3,7,-4,-2,9,-8,6,-2,5,6,1,-10,2,6,10,-8,-9,-6,-3,2,6,4,8,-9,-3,10,-3,-5,-2,-5,-10,-7,9,4,4,3,5,-4,-3,-5,5,4,-6,3,2,10,10,-1,-1,-10,-10,-6,2,8,-10,6,6,5,9,-10,7,-2,-9,7,-7,-6,-2,2,2,-3,-2,-10,-9,10,3,8,4,-7,5,7,-3,-1,-7,10,2,4,2,-2,-6,-8,6,9,8,-5,1,4,-6,10,-7,-5,-6,5,-10,9,-3,7,5,-1,1,5,-9,6,6,-9,8,6,-2,2,-9,-1,7,2,-3,4,-9,6,2,3,9,10,7,-9,-6,4,1,-8,3,-2,-10,-10,7,-5,9,-6,-10,-6,-4,-8,8,-6,7,-9,3,-5,-8,-2,-3,4,4,2,8,-5,-7,-5,-4,3,-4,-10,-4,9,-3,8,7,10,4,9,4,-6,-6,-5,1,-2,2,3,-10,-7,5,-9,-7,-8,-2,3,-1,-6,-10,-9,-9,-8,-4,5,5,-7,7,-3,-4,7,7,2,9,-7,9,9,-7,-6,-10,-7,7,5,9,-10,8,10,7,5,2,-6,8,-8,4,7,7,7,7,9,10,10,-9,7,-4,4,4,6,5,10,8,-3,3,-10,-2,8,-10,-1,-9,-7,-1,-9,-10,1,-9,-5,10,1,-8,4,1,1,10,-2,-2,-4,-9,10,-7,5,1,10,-7,-5,-3,-4,-2,-10,9,-5,-3,4,1,-3,2,-4,-9,-4,-9,-3,9,9,-4,-8,-2,-4,2], dtype = "uint8")#candidate|3026|(2880,)|const|uint8
call_3022 = relay.TupleGetItem(func_1953_call(relay.reshape(var_3023.astype('float64'), [7, 3, 8]), relay.reshape(var_3024.astype('float32'), [8, 28]), relay.reshape(var_3025.astype('uint16'), [240,]), relay.reshape(bop_3010.astype('float32'), [60, 12]), relay.reshape(const_3026.astype('uint8'), [96, 30]), ), 2)
call_3027 = relay.TupleGetItem(func_1960_call(relay.reshape(var_3023.astype('float64'), [7, 3, 8]), relay.reshape(var_3024.astype('float32'), [8, 28]), relay.reshape(var_3025.astype('uint16'), [240,]), relay.reshape(bop_3010.astype('float32'), [60, 12]), relay.reshape(const_3026.astype('uint8'), [96, 30]), ), 2)
func_1618_call = mod.get_global_var('func_1618')
func_1622_call = mutated_mod.get_global_var('func_1622')
const_3029 = relay.const([0.808070,-4.222895,-7.695053,7.695641,6.332213,-2.152635,-6.617112,3.133424,5.834992,-8.891369,-9.030439,-3.301382,9.033650,4.489091,-9.166836,2.333478,5.169303,1.171950,-5.642715,-4.574794,2.884281,-4.878763,3.938930,-8.431104,9.337608,-3.458921,-7.160477,9.792458,-3.632241,-1.536136,-1.871105,-5.713220,3.340565,7.709457,-1.682841,3.552787,-9.039290,7.832803,8.708765,0.139411,6.452019,1.826343,-9.338626,9.865040,8.300087,5.327693,-3.171107,5.573956,8.491619,7.505969,-0.229149,3.760559,-8.587724,-8.484401,-5.567332,8.293221,-9.719788,0.618887,1.856371,2.476527,-5.293650,-5.790681,-8.730727,-9.683635,-8.865465,-8.719933,4.437411,-5.190750,-3.220785,5.006873,-7.207796,-2.266382,8.741548,7.030554,0.415568,1.567620,3.550338,-1.154827,3.241344,8.290588,-7.589245,-0.402189,-3.304668,-0.717950,-1.126349,5.575105,-8.246496,3.509854,-5.440122,-1.693222,2.938058,6.313943,-2.271320,-2.140237,5.727988,6.109253,4.468032,2.297853,-1.984944,8.990963,4.172030,7.485723,-9.339951,-4.328278,2.743834,-8.053724,-8.340705,7.444521,5.153403,3.935501,-7.320362,5.352586,-8.375643,5.166692,-3.656779,5.943350,9.269282,6.683862,3.164266,-4.395660,-6.921360,9.855377,0.178484,3.678045,3.404714,8.932484,-8.825705,2.462168,8.492467,8.707004,1.942990,2.762144,-1.692725,8.854138,-3.382326,-1.820776,-7.198222,-2.835879,3.193522,7.181636,-9.819036,-9.577010,3.762304,5.068172,-5.418274,-2.782660,-9.952440,-0.802393,-3.972445,-2.271551,-1.424527,7.180791,6.290251,-6.789793,-8.175369,2.570126,-0.005668,0.946672,9.044379,-2.528232,1.529777,-2.117116,-7.232847,-2.901118,-7.673030,-1.750010,-3.826903,6.787200,9.616869,-6.762051,6.048977,-8.223077,7.405990,6.921243,-7.809023,-8.953385,-9.180861,9.593577,8.718376,9.553874,6.377071,-0.694898,-2.749786,9.588039,9.069794,7.950466,1.644026,-7.581911,2.656845,4.758263,8.157958,0.687949,-7.181967,8.052034,5.945857,6.946829,-4.264748,-9.473943,-2.383752,-5.498669,1.556770,-6.711515,2.926996,2.987817,6.629296,-5.741951,-4.008677,-0.898040,6.677785,-4.806527,5.302569,2.865273,-4.865278,-8.681413,7.363032,-1.960802,-2.889608,0.901944,-3.758719,-9.752240,2.963281,-6.503988,-3.170267,1.212882,-4.216382,-2.933890,5.028335,3.017751,4.029567,-4.458578,-1.809431,4.803118,-3.632474,-7.638448,8.337921,-1.186450,-7.005831,-5.440552,1.326929,-7.452319,-0.758281,0.327720,-6.351868,5.722972,-5.050751,-1.025982,-8.861079,6.528650,-8.618020,1.480748,-4.362511,-0.065579,9.373432,-5.206282,-7.164137,-9.368348,8.364411,2.062678,0.942106,-6.836861,-2.866187,-7.064352,-6.087921,8.515113,-3.331194,0.401533,-1.174818,3.996556,-5.483014,4.206784,-0.717755,6.276953,8.421184,5.487519,0.924272,3.466536,-6.289593,8.405349,1.649189,0.661289,5.905041,5.779073,-3.042688,0.161866,-1.513538,-6.740077,3.803347,-1.235612,-6.289154,0.164860,0.848744,8.345487,-7.752047,1.272208,-3.166326,3.662076,7.178566,5.781755,7.703723,-3.632674,7.140611,-6.307390,6.526818,-7.220336,-0.524495,9.321361,-1.513099,5.319244,4.858888,-9.255943,3.512696,-0.157333,-7.696126,8.398380,-7.827948,0.149958,-9.557597,-1.986046,5.142731,5.275072,-7.854066,1.357799,4.159578,-6.188540,3.414090,-7.543743,-1.375997,0.257387,5.714005,7.636546,9.883618,4.800820,-4.047773,0.391769,-9.524479,-4.631772,0.272773,2.373770,-7.730941,-4.304127,0.467411,6.845951,7.876546,-8.735381,1.032484,-1.943936,8.084544,-9.733338,-1.106347,6.205131,-4.081539,3.213018,3.194197,-4.790209,-4.914859,-8.696200,-4.342538,-1.882714,-5.925280,-1.913314,-6.663274,-8.469869,-4.981893,6.921386,-1.992525,-7.767907,-0.521197,4.955064,-1.701749,-6.967207,-5.617909,-2.717371,-3.668358,-6.741395,-7.055113,-7.442976,3.586895,-9.605935,6.074745,-6.484133,-2.142017,-8.780132,4.520332,-8.993585,9.157272,-5.814767,9.915416,-6.627322,0.428944,4.682193,2.546602,-3.243330,-8.003261,6.364226,6.990460,-5.953139,-0.289092,-1.448428,-1.365352,7.095661,9.794972,1.887207,0.716366,-5.229602,-5.579950,-0.180122,5.002645,-0.937897,7.818152,4.391076,-3.343254,-7.830948,-2.521634,-1.228366,5.258167,4.391803,5.634736,-5.027427,-8.823673,-3.424737,-5.624675,7.953835,6.923369,8.819212,4.961497,8.449834,-7.042422,-3.866960,0.278000,8.562882,-4.337428,0.992351,3.414750,-1.000389,0.024948,-0.043217,8.751319,2.317755,-7.212055,8.794152,-9.610973,2.801850,-9.636150,6.592394,-5.101515,3.204726,5.906162,-7.344125,-5.448176,1.391817,5.996689,5.499209,2.050450,-0.899324,2.860226,8.303254,-8.056879,1.921437,-1.515151,-5.315543,1.220897,3.605040,3.431628,-1.249616,0.996473,2.295190,3.710901,3.882653,0.003100,-7.287977,-0.945375,-0.860747,-3.335804,6.768227,8.523607,9.237954,4.037946,1.556004,8.966661,-3.827721,4.183895,0.421736,-1.766767,4.312408,-2.873476,8.907866,9.671802,-8.476967,5.681833,-7.128426,3.580728,8.849258,7.163777,7.116387,-4.189733,0.949560,4.938741,6.494017,7.242999,-3.135106,-4.423191,-7.813970,8.085722,-1.637083,5.530122,6.772621,-8.850817,9.223141,-2.527828,-1.279257,5.008049,-5.454253,0.571370,-1.896619,2.599017,-4.778867,-9.077394,3.666230,7.420477,-6.733744,9.229405,-9.755226,2.669006,9.536837,-7.534801,-6.881430,3.818772,5.958434,-1.179665,4.034789,-4.778955,-4.819231,7.686648,-2.840134,8.097222,0.742956,2.519020,-1.688543,8.990882,-1.467316,-3.338381,1.289346,3.233955,-8.625544,7.615347,7.573897,6.377478,-9.308529,-0.300441,-6.036940,-2.504837,-7.532290,5.744642,-9.293588,-7.119760,-1.146498,3.920629,-5.427994,-9.553633,0.817920,-1.208940,0.678313,-0.783047,-8.255568,1.256595,-4.593320,-5.989611,9.069828,4.021434,5.546667,-0.738646,-8.400231,0.981112,-4.968557,5.875545,3.029498,5.559004,-7.607328,0.954685,-0.901544,3.210027,-5.108546,7.297291,7.014093,1.739512,-6.717793,-6.107125,2.756854,2.663730,-6.779178,8.759127,-0.393924,-8.630161,-7.096969,-6.157904,-0.693506,8.107228,1.391690,-4.274602,-0.485567,6.044450,8.529466,1.521690,-2.438734,2.100751,-6.049161,-9.284397,3.909301,2.545302,-0.687567,-2.773127,4.280383,4.032393,-3.470009,5.083873,4.916457,8.677773,-8.477557,-3.594860,5.203158,4.279561,-0.417268,-2.382698,5.655572,-3.599274,4.507576,-2.455362,-6.489540,-3.359030,-3.638325,5.935772,-3.392266,-6.017381,-3.625656,2.237581,-5.521839,0.820587,6.842177,-1.988165,0.811812,-5.733763,6.534115,5.556515,3.528696,-1.114500,1.869419,7.729070,-3.799573,-2.555527,-1.776439,-1.830640,9.775002,-0.653294,-3.624359,6.008226,4.563024,-9.158514,-0.844174,-3.849383,9.219142,3.837800,7.660816,2.885219,9.739876,-1.226900,2.127622,-1.127210,-3.431768,1.430851,-5.676439,-0.258707,1.166255,-6.357222,-9.767492,6.898717,-8.147582,-7.068854,9.492672,9.233994,8.366690,8.853122,8.701213,9.879787,-7.055881,-2.407227,5.570563,-6.778787,5.633051,7.822227,0.918618,-0.955166,7.494314,4.868298,-2.513798,2.758088,-7.167855,-2.106203,5.789874,4.473558,3.205493,-3.251608,-1.392071,1.106168,3.473443,1.023967,3.142293,-2.485235,-2.863289,6.619223,2.355492,7.302273,9.359425,7.814199,6.353431,-1.607565,-1.390171,-5.248714,5.643773,-8.300268,-4.199907,-4.416787,5.574577,-4.143962,-9.557947,-1.556793,7.968095,-7.148298,-4.229828,4.280004,-1.864773,-9.641270,-1.162400,-0.934572,-5.065174,-3.435665,-1.233132,-2.825004,-2.105205,-4.593163,-3.867460,-1.473342,-4.153601,1.904981,-0.548470,-6.669045,-5.953268,9.959754,5.597227,4.512451,-4.694905,-3.650169,-0.534495,7.202621,-1.898075,6.757989,-1.479658,-7.167491,-9.050867,9.298168,-4.485704,-0.192628,-1.201029,6.591466,5.867987,1.322903,-3.014699,-3.556486,-8.751247,7.179314,8.551351,-8.223140,-4.637773,-2.230175,-8.799279,6.148088,-6.279124,4.258760,2.710570,-8.711410,5.219940,6.106447,-2.562771,-7.987959,8.645695,6.435357,7.585287,-7.945229,-4.286972,-3.022230,3.252388,5.441820,4.379435,-2.540797,5.065936,3.956459,9.165414,-8.602051,5.120485,-9.696756,7.808059,1.743517,0.553065,-5.218376,0.023164,-6.087037,7.720569,-3.938939,6.923296,3.571860,3.942288,1.667617,2.786478,-1.962660,8.076133,3.100747,-2.139871,0.354561,7.240081,4.622138,-4.087998,6.923098,0.943814,1.188885,-3.807647,6.935543,1.129526,-1.572528,4.455953,8.072130,-9.313599,1.612975,-6.831150,-5.573396,-3.361092,-8.971022,-3.360667,-5.746013,7.197668,-5.284243,8.674176,2.334496,-7.395118,0.464865,2.541996,-1.712936,-8.039970,-6.909507,-2.982918,-5.655634,6.350727,-2.003228,-1.267832,0.333348,-8.447444,4.490752,-7.563650,-4.029926,5.562174,-7.433217,6.271137,-1.633631,-0.236396,-5.124337,8.727020,5.252456,8.168252,-2.014649,2.575737,1.260476,5.042528,4.972978,2.279850,8.029442,1.502183,6.725344,-5.103544,-5.863342,1.995329,-1.113290,6.151355,8.210966,5.006506,-3.023781,5.457668,-3.729235,9.784692,-0.798744,3.515778,9.117362,0.009220,6.026953,-9.332702,-9.085260,-2.425610,-3.636358,0.372891,-1.062312,-8.501596,0.127803,-9.987414,-8.709716,3.142052,1.705866,-0.174667,7.949767,5.614828,-5.531814,1.462367,9.480950,5.723562,8.045289,9.182613,1.582043,8.294809,-4.969161,-5.848739,0.522489,9.568789,-8.341038,7.189368,-5.044953,2.850632,-1.124408,8.363974,-5.053630,4.592417,7.372993,-7.015993,-6.863481,5.518354,8.481792,-7.313518,2.448509,9.641770,5.451788,-8.020213,-6.860179,-3.816625,-3.603457,-8.674753,-3.760875,-1.862082,3.396912,-0.431997,-9.553115,-5.237259,6.650374,-5.712660,-3.328257,5.288486,-9.686732,8.745932,9.244046,4.310508,-0.471483,-9.667580,-2.742560,-9.770214,2.692289,7.156231,9.251648,-1.153188,-2.360967,6.840251,-7.852925,1.229853,-6.313734,7.290672,-4.333582,9.175434,5.254578,-5.028037,5.298951,6.763577,8.654162,-2.515437,-8.055285,-8.521922,-3.987884,2.388176,-6.701204,5.400029,-7.222577,-6.871437,-6.969606,3.532651,8.402349,6.811281,-2.862375,-7.550602,6.454309,-9.672737,9.874381,0.208612,8.820505,-7.354986,1.282593,-4.052743,6.597999,-8.908751,0.846279,9.596458,2.054767,2.416509,9.190096,-3.836850,-9.477853,-1.301118,6.061056,7.673495,-9.595213,-9.142639,-8.611026,9.592188,0.881759,7.312960,7.292073,1.129993,8.373767,7.855999,-7.076422,0.690223,-9.714668,-4.816796,0.237124,-3.949655,-9.739505,4.935265,-4.112275,-2.937475,2.818997,-7.063740,-2.232489,5.950546,-7.445393,-7.598397,-3.168461,9.173819,8.333328,-3.910173,-1.814286,-2.792790,4.375578,5.053116,4.343733,2.789974,8.496563,0.945086,-9.127494,2.368979,2.817822,9.918845,1.002615,8.171314,4.576605,-7.514675,-0.571293,-4.907584,-7.365402,1.858129,0.994168,-1.446268,-4.396512,-4.123519,6.737144,6.345959,2.670013,-5.275999,-0.308009,7.599117,-3.493961,1.428449,-1.205146,-2.039333,3.333888,-4.715780,8.481093,5.979316,6.663406,-2.788849,6.033059,9.323575,-1.155439,7.696367,3.666778,-3.353130,-8.361269,1.681593,4.333412,-0.006064,7.806938,4.202332,3.401522,1.706327,-7.355821,7.653905,6.819670,-9.436377,8.520465,-0.566996,-3.930779,-5.140991,-5.515351,-1.367435,5.655485,-2.765863,0.046075,0.533751,-7.933331,4.715636,-5.021901,-2.436350,-1.355657,-8.637192,2.185289,-0.473482,2.423019,-1.543897,-3.847479,-7.646974,1.970468,1.616613,-3.835368,-9.985226,6.910296,-9.182055,-9.482279,7.932188,4.760169,-1.377561,6.965161,7.617961,1.991236,-0.430133,-8.640096,-0.550865,-4.494164,-4.082329,-9.278419,2.393129,4.203507,-4.242017,6.222520,-3.128175,5.602697,9.135366,6.040049,4.168384,-6.388788,5.550343,-5.991558,7.745615,0.825564,-2.509666,-6.159386,1.377693,5.559064,1.252372,1.060359,3.983071,7.148010,4.002234,1.408256,3.142312,7.790688,-9.387567,-2.205898,-6.791422,-8.836438,-9.450349,-9.653698,-8.283818,7.940427,-9.812542,7.632676,6.363609,-4.245469,0.708464,4.356935,-5.803170,7.671155,9.260303,-2.071660,5.635515,-6.343977,1.663584,9.078175,-0.712756,5.540357,-3.223422,-5.644354,5.203600,-5.545049,9.775312,-7.847452,-5.269865,-8.797952,6.713232,6.583115,3.236866,-8.260379,6.866377,-4.417774,-3.008910,-2.668802,-2.752276,-0.120386,-8.153114,7.558196,1.623938,3.785635,8.559234,0.470895,-9.026850,-4.306327,-4.220610,-9.347294,-6.199381,4.951177,-1.175970,9.591367,-5.869436,8.770820,6.954401,-9.216279,-8.573396,-4.546853,-6.974913,-0.219811,0.633631,-8.249227,-2.706890,3.322363,-6.191528,5.701298,-4.444971,6.099516,6.033581,6.194330,3.813131,7.650710,5.909074,-3.910588,2.823745,-1.115414,2.840662,-9.664923,5.161169,-3.794771,-7.785154,0.951856,1.602659,8.368357,0.011340,7.448313,3.577954,-0.395004,-5.960870,-4.273267,2.933109,-1.345919,5.114037,-9.895152,-9.789119,-5.315946,7.002780,-9.744369,2.458321,8.492733,-2.036373,6.626070,5.979336,6.906896,-7.421474,0.058554,-5.161122,-8.986784,-4.759512,5.386843,-7.120075,5.345657,6.264258,-6.405073,5.811870,6.836640,-6.710417,6.280705,-4.803606,0.050224,-6.323972,-8.395550,8.120600,0.021330,-7.553440,-5.790180,-9.462816,-3.500615,1.693285,-7.572902,-5.293105,5.321639,2.293213,-3.731128,3.440753,-9.237788,-9.189287,-6.556371,-9.829390,6.069969,-1.558674,7.656750,4.038144,-4.038720,-9.321735,3.491549,-0.966947,0.534413,-4.339178,8.556450,8.211672,1.905871,8.608601,5.487984,4.320928,-0.464687,8.570839,0.227905,1.204704,4.406310,-0.846149,-8.990327,8.924894,-2.024352,3.305138,4.383046,-1.546480,-5.467053,9.874207,6.946576,-9.525788,-5.363768,3.611153,-7.261988,-9.257392,-7.209631,-6.375974,1.956812,-4.556791,1.972057,-9.723804,-3.564305,-8.454778,-1.831592,9.774193,-2.040803,8.355854,1.406744,-5.075488,5.933171,7.918164,-4.562805,-1.246440,-2.596805,8.160804,-8.031989,-2.557894,-8.073283,4.849664,-9.529992,-8.791943,-4.332036,-1.412217,-9.705488,7.502870,3.293992,8.764219,-6.881259,3.918271,-8.147796,7.099776,-4.498449,-4.615388,-9.014355,2.597658,-9.827679,2.341564,9.913185,-7.631134,6.586046,0.325441,-0.489399,-1.336727,-6.164254,6.613744,-0.291790,6.185445,7.831361,-6.003783,3.107658,-4.174828,1.705697,-1.651133,4.069336,6.444148,-9.014826,5.632587,9.907772,-0.144901,-2.785095,1.111462,-9.408264,8.466954,-7.870769,7.250374,-2.508664,6.382629,9.026596,-7.726318,-4.757493,4.201169,8.874583,2.728624,-8.568391,-0.147565,-5.135419,-4.332105,8.688997,-0.263398,8.474982,6.782109,1.181116,8.374727,4.480274,-2.668912,2.658957,-9.198476,-5.826020,-0.926441,7.816429,7.718791,-3.121171,-1.418601,-9.114654,1.654561,-4.064098,8.465112,4.988485,0.859555,-2.759573,-0.003618,6.314843,-8.954322,-9.168452,7.978917,-6.511134,6.914797,-1.117856,-3.434273,-7.865212,-5.812248,-9.671311,0.005464,-5.714459,-4.288026,-7.454444,0.690060,-3.083915,9.992412,-2.878067,-2.911067,-1.492600,0.319591,-4.061984,6.423804,0.094865,1.590055,9.104197,6.291144,0.902083,-6.597350,-1.769085,-3.430465,-9.790507,1.290173,-3.366837,6.174779,-6.249193,0.378843,-8.299877,7.627906,-1.562984,4.685337,3.195901,6.565095,9.303028,-3.372566,1.235509,-2.753557,6.617459,-6.149902,2.177833,-1.768275,-5.232085,-3.633150,-2.478420,-6.904491,6.972327,-4.456203,-7.039076,7.370970,9.970457,9.903253,-8.667454,-7.353839,-4.249295,3.239952,-9.349257,2.276297,2.549235,8.446840,3.226941,-2.806963,-4.400055,-0.834515,5.279949,-6.976976,4.631643,4.924326,8.902836,9.335134,2.467062,9.163694,-3.697012,-2.357795,2.758191,3.960496,-0.930580,7.217719,-0.478988,9.788863,1.546185,5.193234,-1.290464,7.247894,-4.227019,7.214422,9.839740,-3.008174,1.796931,-5.355554,-2.393555,3.152617,4.642515,2.544375,-5.975920,1.459076,-4.183647,7.792718,-8.904755,-3.144677,6.919601,-5.551270,5.650014,2.088449,2.384497,9.277852,3.200843,-6.183990,5.198381,5.905435,3.326479,9.232987,5.890984,-2.796323,8.270593,-2.430930,-1.215371,-0.976093,5.293133,-5.118430,7.815931,0.202479,-9.018067,7.985284,9.967200,-6.142574,-9.576407,9.782908,-0.743113,5.717695,-4.033321,-9.039737,-0.156013,-7.410999,-6.427459,-2.282523,-9.929016,2.289114,-8.469016,-2.248791,5.458764,-0.270905,5.160543,1.075545,5.832097,5.471010,-7.737908,-6.787906,-5.595887,5.756333,7.686332,-5.062426,7.145463,-2.037834,6.519512,7.800405,3.283431,-5.790577,4.730187,-6.716196,-0.563499,8.973023,-2.866148,4.117388,-5.893761,6.407770,-2.392085,-1.400330,7.181927,7.955524,1.617916,3.650602,-8.312581,3.469582,9.611344,-6.778080,-9.059716,7.536242,5.206324,3.890581,9.232068,2.365452,3.303373,8.047948,5.928735,7.191957,4.128363,5.380643,-4.727905,-6.564036,2.660059,7.859201,-8.625834,-6.337661,3.601485,3.078417,-1.770648,-0.716335,-5.997970,5.420314,2.814212,4.438136,6.339238,-0.834898,6.823501,-3.067107,-3.306113,-9.591721,-7.806488,-5.657493,8.338009,-0.952564,4.681109,2.260326,-8.992224,2.282498,2.009177,-8.732634,4.738442,-3.044435,8.573908,2.401317,-6.066348,-4.467076,-4.693090,-1.745313,1.253960,-8.434890,3.778562,-8.173736,-0.738273,8.209744,-5.048415,-7.406818,3.387443,1.207454,0.759404,-5.062023,-9.978667,-9.877755,9.601432,-3.543161,4.244500,3.337616,-2.002312,-0.883348,0.867706,-0.113492,-5.056242,-9.929042,0.310210,-2.208766,-2.890928,-6.093403,-2.209032,-4.155611,4.248847,-3.977771,1.185392,-5.871759,1.311233,-0.302145,-6.788244,8.969202,1.808528,-8.316088,8.371810,-7.547671,0.189907,-5.856061,5.697387,-5.295018,-3.939343,-6.961860,-4.136920,0.402177,3.618270,7.839937,0.589965,-1.142802,-3.926314,9.375834,-1.421534,0.975149,4.055837,9.796025,-2.745758,0.047140,-4.774205,-0.299278,-9.553247,-2.799056,2.767144,-7.815874,-5.884977,-6.995676,0.280646,-3.898721,0.005320,-8.674641,-8.925139,4.454598,8.213185,2.018440,-9.907747,-2.406647,2.314141,9.648105,-8.366164,4.082000,-1.863628,0.821742,-4.734590,3.190981,-3.218989,-3.072241,1.441320,2.296185,-0.097275,-2.145358,9.923676,-6.469945,-6.057307,6.705501,4.217895,8.937319,-1.632622,0.299892,4.435603,-5.134937,-2.577073,-8.624268,2.119234,-7.210945,-8.362888,-0.788862,-1.286924,-3.659721,-8.862953,3.187171,1.345997,-4.331481,-8.354565,-0.389003,-3.623279,9.374542,8.073585,0.989546,3.545584,-9.448118,-4.797660,7.438547,8.685405,1.566988,-7.504471,5.887822,-6.802141,6.968359,-7.250364,-4.102828,0.861602,2.989289,3.904700,2.203543,8.849028,-9.178643,-8.411870,-0.633915,1.255671,-8.938007,-6.780784,7.230198,4.371545,3.787532,-3.858877,-4.890086,3.801381,-5.658436,-9.774667,-0.095301,-3.920527,-8.426090,-9.527998,-1.438764,-2.840982,4.410887,8.303084,1.260821,-4.626905,-9.218313,-2.294860,-9.341816,-3.315306,-7.659472,-4.216288,-7.412549,5.788333,6.156814,1.480658,-6.428984,-4.055479,0.758653,-8.222262,-3.837142,4.306899,-6.244235,-1.756544,-8.702573,4.050826,0.768585,6.963189,-3.693509,-4.586220,-8.283647,-8.654658,-9.589983,6.377782,-3.515576,-7.057601,-6.661413,8.208039,-5.363637,4.559768,-6.625609,3.848549,-9.984809,-7.630074,-2.692559,-5.121633,-7.203706,9.264884,-1.682647,-3.237554,-7.687719,6.521263,2.892574,3.928162,-8.691995,-5.034474,-4.817974,6.769836,-2.619890,8.520177,-9.594450,1.653561,-7.619992,7.225168,3.523845,3.773005,1.547309,-4.469347,8.200758,-2.755001,-8.247904,7.938275,-9.203383,7.923440,-4.784305,2.930098,6.612655,8.130565,5.456382,-7.655437,4.231481,0.405228,-1.814264,2.184804,5.511834,-6.056511,-2.165877,-9.406767,-7.185855,3.293080,2.776824,4.838667,6.292568,-0.379827,-3.749128,-5.432757,0.878793,-0.004982,3.692238,7.098418,8.910358,3.813439,7.406741,-4.231861,1.679592,-3.239276,7.496097,1.444473,6.908730,4.571102,-0.667801,9.271332,4.011671,-5.800462,1.598954,-8.867911,9.240127,-4.194514,3.724519,-2.085628,-3.745630,9.113599,-0.487833,-9.173305,7.223973,3.998637,5.979827,5.310783,-8.762261,-7.801373,6.245361,-1.366406,-2.232799,-6.092553,-4.391412,-5.601161,1.525420,-8.007999,1.313078,3.813970,-1.747250,-0.884848,4.087359,4.288904,9.546479,1.719537,-1.753452,7.758168,-4.654091,-8.231554,-4.073421,5.774019,6.465572,-8.812592,7.141887,3.501942,-4.178675,4.105887,0.358098,-0.469651,-9.023620,1.288421,9.095821,1.696241,-4.427321,-1.506869,3.518918,5.496515,6.387774,8.828902,6.761320,2.736420,-9.265275,-3.382771,1.333506,4.358848,-6.448176,-5.982130,6.472683,-1.585309,0.237278,4.181212,-9.110950,8.307099,-0.737350,-5.087261,0.460344,5.234159,0.788331,1.482088,-8.075728,-2.800126,-0.200943,9.388512,5.259912,9.777309,-4.946428,9.289509,2.514655,1.417802,2.497527,-8.950672,7.982373,-2.664568,5.303624,2.300382,-7.682540,-1.577241,-6.586126,7.704859,1.750500,-6.604216,2.119155,8.930083,9.968373,-5.139495,-0.807032,7.873237,-3.534763,-0.006183,-1.827865,-3.528996,-2.573095,1.321271,-4.610544,-2.928050,0.911138,3.597767,-6.116765,-9.405902,8.897307,-1.183429,9.182234,7.896984,1.459931,9.791956,2.794912,9.886886,-0.080502,-3.980945,2.629168,1.513157,-3.770874,1.459588,0.749329,-6.937480,-7.128621,-5.217419,-4.985408,4.253514,-4.917040,2.585255,-3.422204,0.277590,5.420302,2.877830,-7.436046,-6.854598,-1.317658,4.457427,2.600337,-4.491094,-2.390026,7.657757,2.078493,-6.081000,6.875189,9.878595,-6.531016,-3.270178,5.723455,-4.372336,-6.501327,-6.729531,-5.799982,-2.995235,1.942159,1.620559,-1.671930,-8.064128,-4.942460,4.054141,9.591745,4.907033,7.095540,5.628597,-9.929150,-9.345062,-1.297291,8.127719,-6.163114,-2.082967,-0.621081,6.657461,-3.149789,-1.105332,-6.170574,-2.270648,3.813820,-5.554456,-1.217341,0.347108,3.182308,2.097847,-2.663072,4.509124,7.081436,-7.003670,6.019844,-0.034628,1.545859,-3.447441,-5.151673,3.037704,4.661177,-6.571770,-7.968311,-1.518885,9.634930,1.655266,-8.813948,-6.711273,3.899324,4.882809,-9.103742,-6.019033,5.651776,0.495261,-1.387209,5.662031,-6.202142,2.001677,8.454530,0.969045,6.493714,-3.377491,4.821323,3.243112,8.232547,0.716703,-7.064353,6.900538,8.910206,3.917229,-1.086433,3.451788,-0.502201,2.477510,-6.544157,-1.357694,0.136033,1.645182,8.381043,2.868887,4.680644,-6.432693,9.163060,7.937043,3.155207,-1.254928,6.362098,-0.087003,-7.218683,5.740228,-8.984433,-7.032876,-4.240087,-9.436900,0.993776,-4.461611,7.937683,-0.885644,6.620381,9.434399,4.335683,-1.424858,4.061406,-9.366415,-7.152767,-9.208907,-0.343293,-9.547124,-3.850712,-2.728685,9.769339,-2.505729,-9.110550,3.896035,7.445067,-0.984659,-8.474286,4.635449,0.542529,4.653103,-7.119967,9.911841,-3.467124,6.927523,-9.384726,-2.347334,1.494242,-2.405656,-4.089947,3.933641,-6.648009,-8.131822,-3.817632,-9.886173,7.762852,4.233722,2.966491,-2.745647,-5.454488,-9.103263,-6.848258,-3.902164,-1.095026,7.113581,-2.717571,-7.467047,-6.954405,6.208950,-6.492800,-0.198081,7.839384,3.100594,-0.617695,1.977671,-7.934647,-8.089783,-2.568694,-3.433469,5.130447,6.987910,-1.818504,6.857124,-8.131053,7.033039,-1.315705,3.017834,9.026615,3.264536,-9.414358,-4.389494,-7.984459,1.500692,-8.667271,2.002819,2.258578,1.178682,-4.644977,-5.695238,-4.518056,-6.137913,-6.673480,-4.463710,-8.310463,1.289010,-7.714756,1.663184,-1.565606,-3.863572,-7.358721,8.139165,-5.628233,3.927091,5.436471,-4.678589,4.341878,-4.777690,-2.361796,4.394216,-0.857565,8.307544,3.773203,-0.255096,-0.103519,-3.444611,-6.516277,-9.915628,-1.530619,-6.283896,-4.623883,5.637360,3.373753,3.122543,5.131894,-2.245022,0.231145,-1.073231,0.908840,2.837153,0.492013,-6.875321,2.698038,9.405672,6.954284,2.559692,-2.896713,0.044592,-4.483473,2.270543,-7.460147,-9.560148,4.454668,-0.542900,9.238864,-3.095489,5.191849,-9.728189,-1.875765,-8.556329,1.212197,9.517202,6.061246,8.273059,5.289982,3.704101,5.013469,7.561637,-3.409338,3.603489,0.603605,9.534913,-9.369300,5.094031,4.453130,-5.485425,9.044517,-2.535956,0.041120,4.462972,-4.744361,-8.406344,-2.067659,-4.934389,6.392785,-4.524433,-6.645687,9.306073,4.741704,4.569983,-2.981375,-6.374029,7.830487,-9.882119,-0.058248,9.073939,-5.621563,-0.519790,1.691675,-4.127196,-1.801567,-3.243495,-5.679533,-4.267692,-3.246901,-9.746769,8.755516,4.832308,1.827347,8.353727,0.423960,-5.074297,-0.295897,-2.359843,9.029045,-7.408420,4.515964,-6.949334,-2.340969,3.133771,-6.780040,-4.364997,-9.939251,-5.767843,1.855862,-8.881642,-3.452753,7.673439,1.867694,3.623498,-5.814733,8.843973,-9.555672,8.093786,-1.636425,7.731368,-2.673307,-0.179535,7.726659,-6.629637,6.036737,2.289168,6.239694,-7.922928,-6.038042,3.390081,-6.868434,-3.595074,9.684834,9.896806,9.918076,-5.461964,-3.076830,-7.233526,-3.134584,0.247226,4.640712,4.701425,3.328102,-3.179389,4.539871,-5.392899,-2.573438,-5.836567,-3.311660,7.928861,0.553070,0.097071,-3.030482,3.508832,-5.881189,-6.186576,-7.046503,-3.076459,-0.984242,7.770120,-6.710018,6.362095,7.392451,-9.171916,3.865148,4.198852,-7.541786,7.473304,-1.423782,6.586630,5.543441,8.371435,1.584236,5.289023,-6.042877,-0.588852,-1.170465,5.449864,4.613979,2.437761,7.000157,2.586166,8.109139,-2.789308,-8.697942,-0.626866,-1.706096,3.562156,2.393770,2.552057,4.389393,-5.889224,1.188343,6.141668,-1.348251,7.791963,3.218316,3.913321,2.711086,2.383997,5.640985,2.194173,3.823067,8.316215,0.472054,-7.363064,-4.979674,-2.226549,-3.371649,4.175844,-7.506441,-4.520532,5.183053,-1.975708,8.920812,-5.915725,0.123480,-2.397816,-0.737124,2.908508,-9.396101,7.571976,0.771901,-1.891478,4.511390,-2.749091,9.867258,-6.487263,-8.538132,2.594467,-0.178472,-1.955162,-7.289575,-2.917897,-1.321812,-2.222867,6.196522,-9.325943,-4.866393,-8.248646,-0.472237,3.237681,2.011792,-6.640276,8.886996,3.027889,-5.294166,2.545345,6.000441,1.191923,-7.788717,-0.766930,8.223358,-2.695155,-2.426892,-8.316269,4.375973,-5.713271,3.787816,-2.720116,-7.309151,-3.100211,5.816643,6.050092,6.900053,-6.419217,8.286767,9.213212,3.413132,-3.967863,-2.263475,-6.407882,-0.500330,-8.677504,-7.431908,-6.819717,-0.419223,0.247271,9.451990,-5.235846,6.728311,-7.135848,-8.945267,-2.467671,1.183109,2.497323,3.833478,3.264338,-9.057391,2.595553,-8.248404,7.373619,-8.608397,-4.357113,-9.698365,-2.943663,3.416203,-5.705227,-3.260468,-3.950353,7.233167,3.989417,1.368930,-3.789117,-3.624125,-6.142947,-5.209048,4.528157,-6.252265,-2.561734,4.951131,4.141893,6.126717,-4.123138,-1.482777,2.037080,-6.101202,-2.879092,6.144476,7.055671,-3.008079,-5.054766,3.711142,4.895060,6.192798,-7.569785,-7.672710,4.284043,1.176257,4.102266,-1.954781,7.789759,1.573444,7.600198,9.211980,-7.222453,-2.582829,-2.876927,-8.553997,-3.241260,4.444398,-2.246437,-8.163432,7.779313,8.523058,8.490745,0.225142,-0.313697,-1.744367,5.366391,-9.213250,7.675166,-7.626172,7.775157,2.477552,-4.161457,-3.073709,-1.896684,-7.962014,3.684288,-7.734167,-5.187934,1.663155,-7.759468,-0.922440,3.959715,2.711683,8.553699,-5.078507,-5.832861,-8.738364,-1.791972,-5.278967,2.096158,-7.572384,-4.263566,6.926344,-1.329865,-7.684606,-7.258049,-9.828709,1.362395,-9.319250,6.747055,9.392009,-6.885697,-9.185945,1.326696,9.119657,-0.662450,8.660146,-0.796397,6.589039,8.398452,3.783294,-6.391982,-7.527029,4.680127,-9.843334,0.459574,8.968951,-6.471432,6.814244,-8.562601,-5.901159,-3.351674,2.540804,9.861777,-5.587795,-3.475792,-1.172771,5.955658,2.840718,-1.767297,-2.695007,7.426898,4.284451,6.701362,6.376633,-4.006189,-2.396813,5.761976,3.405803,-3.756352,-9.366202,-3.177565,5.982535,6.170512,-4.471555,4.237668,9.428169,-2.619904,-1.891371,5.295336,3.341498,4.886738,3.369140,-2.080510,5.626998,-5.062937,3.073491,6.859791,-4.047307,5.820026,-1.035492,2.454598,-5.993893,-0.354111,-8.977645,-7.011292,3.327828,1.665901,0.551563,-5.686657,9.716553,-6.085950,3.821903,9.740685,-7.616406,-3.861299,8.992544,-3.980211,-9.331721,-0.967797,1.813698,-5.126349,9.560648,1.165011,3.493750,6.460707,-7.402685,-4.826686,0.737860,6.364532,-8.829704,-4.305679,-2.282082,4.361758,-5.423991,3.477430,4.519809,-7.209553,0.880173,1.294018,9.046963,3.342782,-8.437680,1.104287,-1.697079,3.803650,2.690908,-9.665368,-1.068909,-7.042846,-3.785075,-8.317386,3.777206,-7.214354,-8.462835,-5.958160,-7.914167,8.988821,3.819433,2.182855,-6.695320,-5.149459,-3.742569,0.513900,6.767160,2.185400,3.028075,2.694810,6.106738,1.894770,8.307685,6.168034,-9.470561,-6.478946,-6.457562,6.520496,-2.690453,-4.230484,-3.270453,3.564582,8.580332,6.883823,3.029012,9.447915,-2.273296,-6.441770,-7.567343,-0.987680,5.680649,-2.729135,-2.355407,-1.471199,-4.845563,1.994116,-2.311582,-7.024825,-8.016901,-9.635627,-3.115959,-0.025626,-4.936876,-6.636828,-5.437230,6.626921,7.218109,5.597844,3.019059,-8.296081,-1.009461,5.967563,-8.957526,-2.948080,7.887919,-0.673821,5.328270,7.285714,-7.403829,-6.031126,-7.884802,-8.277487,-4.221050,2.229957,5.222607,4.381555,8.099683,-2.115746,-7.602514,-0.647000,4.757095,4.088630,7.889309,-7.687408,-5.781829,2.933629,2.846602,-8.925540,4.789350,1.486206,9.740690,5.402823,9.008067,-2.952045,-7.094248,-3.875038,-3.196950,-1.366600,-1.430486,6.720693,-4.896252,8.977336,-7.395121,7.620781,8.885343,-7.503922,1.917374,6.692220,2.806702], dtype = "float32")#candidate|3029|(2912,)|const|float32
call_3028 = func_1618_call(relay.reshape(const_3029.astype('float32'), [16, 14, 13]), relay.reshape(const_3029.astype('float32'), [16, 14, 13]), )
call_3030 = func_1618_call(relay.reshape(const_3029.astype('float32'), [16, 14, 13]), relay.reshape(const_3029.astype('float32'), [16, 14, 13]), )
var_3035 = relay.var("var_3035", dtype = "float32", shape = (14, 224))#candidate|3035|(14, 224)|var|float32
bop_3036 = relay.bitwise_or(var_3024.astype('uint64'), var_3035.astype('uint64')) # shape=(14, 224)
var_3039 = relay.var("var_3039", dtype = "float32", shape = (14, 224))#candidate|3039|(14, 224)|var|float32
bop_3040 = relay.not_equal(var_3035.astype('bool'), relay.reshape(var_3039.astype('bool'), relay.shape_of(var_3035))) # shape=(14, 224)
bop_3047 = relay.left_shift(call_3022.astype('int64'), relay.reshape(var_3024.astype('int64'), relay.shape_of(call_3022))) # shape=(8, 28)
bop_3050 = relay.left_shift(call_3027.astype('int64'), relay.reshape(var_3024.astype('int64'), relay.shape_of(call_3027))) # shape=(8, 28)
output = relay.Tuple([bop_3010,var_3023,var_3025,const_3026,call_3028,const_3029,bop_3036,bop_3040,bop_3047,])
output2 = relay.Tuple([bop_3010,var_3023,var_3025,const_3026,call_3030,const_3029,bop_3036,bop_3040,bop_3050,])
func_3051 = relay.Function([var_3008,var_3009,var_3023,var_3024,var_3025,var_3035,var_3039,], output)
mod['func_3051'] = func_3051
mod = relay.transform.InferType()(mod)
var_3052 = relay.var("var_3052", dtype = "uint16", shape = (5, 12, 12))#candidate|3052|(5, 12, 12)|var|uint16
var_3053 = relay.var("var_3053", dtype = "uint16", shape = (5, 12, 12))#candidate|3053|(5, 12, 12)|var|uint16
var_3054 = relay.var("var_3054", dtype = "float64", shape = (168,))#candidate|3054|(168,)|var|float64
var_3055 = relay.var("var_3055", dtype = "float32", shape = (1, 224))#candidate|3055|(1, 224)|var|float32
var_3056 = relay.var("var_3056", dtype = "uint16", shape = (240,))#candidate|3056|(240,)|var|uint16
var_3057 = relay.var("var_3057", dtype = "float32", shape = (14, 224))#candidate|3057|(14, 224)|var|float32
var_3058 = relay.var("var_3058", dtype = "float32", shape = (14, 224))#candidate|3058|(14, 224)|var|float32
output = func_3051(var_3052,var_3053,var_3054,var_3055,var_3056,var_3057,var_3058,)
func_3059 = relay.Function([var_3052,var_3053,var_3054,var_3055,var_3056,var_3057,var_3058,], output)
mutated_mod['func_3059'] = func_3059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2743_call = mod.get_global_var('func_2743')
func_2744_call = mutated_mod.get_global_var('func_2744')
call_3074 = relay.TupleGetItem(func_2743_call(), 0)
call_3075 = relay.TupleGetItem(func_2744_call(), 0)
output = relay.Tuple([call_3074,])
output2 = relay.Tuple([call_3075,])
func_3078 = relay.Function([], output)
mod['func_3078'] = func_3078
mod = relay.transform.InferType()(mod)
output = func_3078()
func_3079 = relay.Function([], output)
mutated_mod['func_3079'] = func_3079
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3177 = relay.var("var_3177", dtype = "float64", shape = (13, 5, 16))#candidate|3177|(13, 5, 16)|var|float64
uop_3178 = relay.asin(var_3177.astype('float64')) # shape=(13, 5, 16)
output = uop_3178
output2 = uop_3178
func_3183 = relay.Function([var_3177,], output)
mod['func_3183'] = func_3183
mod = relay.transform.InferType()(mod)
mutated_mod['func_3183'] = func_3183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3184 = relay.var("var_3184", dtype = "float64", shape = (13, 5, 16))#candidate|3184|(13, 5, 16)|var|float64
func_3183_call = mutated_mod.get_global_var('func_3183')
call_3185 = func_3183_call(var_3184)
output = call_3185
func_3186 = relay.Function([var_3184], output)
mutated_mod['func_3186'] = func_3186
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3216 = relay.var("var_3216", dtype = "int64", shape = ())#candidate|3216|()|var|int64
var_3217 = relay.var("var_3217", dtype = "int64", shape = (10, 6, 13))#candidate|3217|(10, 6, 13)|var|int64
bop_3218 = relay.minimum(var_3216.astype('int64'), var_3217.astype('int64')) # shape=(10, 6, 13)
output = relay.Tuple([bop_3218,])
output2 = relay.Tuple([bop_3218,])
func_3236 = relay.Function([var_3216,var_3217,], output)
mod['func_3236'] = func_3236
mod = relay.transform.InferType()(mod)
var_3237 = relay.var("var_3237", dtype = "int64", shape = ())#candidate|3237|()|var|int64
var_3238 = relay.var("var_3238", dtype = "int64", shape = (10, 6, 13))#candidate|3238|(10, 6, 13)|var|int64
output = func_3236(var_3237,var_3238,)
func_3239 = relay.Function([var_3237,var_3238,], output)
mutated_mod['func_3239'] = func_3239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2670_call = mod.get_global_var('func_2670')
func_2671_call = mutated_mod.get_global_var('func_2671')
call_3264 = func_2670_call()
call_3265 = func_2670_call()
output = call_3264
output2 = call_3265
func_3280 = relay.Function([], output)
mod['func_3280'] = func_3280
mod = relay.transform.InferType()(mod)
output = func_3280()
func_3281 = relay.Function([], output)
mutated_mod['func_3281'] = func_3281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3298 = relay.var("var_3298", dtype = "float32", shape = (3, 12, 9))#candidate|3298|(3, 12, 9)|var|float32
uop_3299 = relay.sqrt(var_3298.astype('float32')) # shape=(3, 12, 9)
output = uop_3299
output2 = uop_3299
func_3301 = relay.Function([var_3298,], output)
mod['func_3301'] = func_3301
mod = relay.transform.InferType()(mod)
mutated_mod['func_3301'] = func_3301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3302 = relay.var("var_3302", dtype = "float32", shape = (3, 12, 9))#candidate|3302|(3, 12, 9)|var|float32
func_3301_call = mutated_mod.get_global_var('func_3301')
call_3303 = func_3301_call(var_3302)
output = call_3303
func_3304 = relay.Function([var_3302], output)
mutated_mod['func_3304'] = func_3304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2481_call = mutated_mod.get_global_var('func_2481')
call_3316 = func_2480_call()
call_3317 = func_2480_call()
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
const_3331 = relay.const([-4.281042,-4.618668,5.287129,-5.772181,7.460800,-4.184077,-9.197684,-5.157040,6.188610,1.365265,-9.261704,8.317360,3.964365,-0.817641,-5.655335,-1.652808,4.257077,8.157898,-8.764533,-6.738257,2.518341,-5.718789,-1.794987,-7.181472,-7.353829,-8.330991,6.724770,8.199976,-7.511943,4.774704,-9.108142,0.659905,-8.328137,-0.341455,-1.229424,-6.866677,-1.880028,4.704040,-6.220342,-6.224723,5.961709,7.976132,-3.609004,-0.840630,-9.256414,7.541610,7.489615,-5.251926,7.191217,3.443130,8.526244,3.234986,-5.247438,1.917188,2.812708,-2.062147,-4.818279,1.511102,-2.071379,5.139527,7.233539,-8.028381,-4.727347,-6.298944,1.228298,0.045053,2.701106,-1.392035,-7.070057,-4.183276,2.752411,-9.692284,-9.391524,-7.321840,6.804337,2.671226,-5.011651,-9.943788,-5.763258,5.265951,-7.800954,3.315766,7.846066,0.464799,5.157394,8.199103,-5.143279,-2.330761,0.347257,-2.150824,2.812199,6.735081,9.086666,-4.892416,-8.816075,1.634682,-3.574118,7.009090,6.858401,1.974409,-9.241609,7.391213,9.825878,-5.905403,7.051739,8.130278,-1.610754,-7.496500,-1.545107,-1.417372,-5.497404,4.041376,-7.913852,7.811086,-0.840724,-9.069079,2.958570,7.049762,8.580197,-9.237873,-3.688648,1.624410,-0.169711,-0.665121,-1.576046,-5.906376,9.048828,-4.173873,-6.761273,7.641279,-5.060441,7.241070,2.616712,-0.077361,-9.116081,2.520066,4.034318,-1.856772,0.350750,-2.309624,6.077311,-4.085593,7.425522,-1.262505,-7.200973,-9.235522,3.489286,3.682386,-8.723543,6.098233,-6.558625,-1.928537,-2.666192,9.670960,0.913523,1.242006,-3.336971,9.469443,-1.548967,8.759105,3.866531,-8.667877,-5.649289,-0.636179,9.337188,2.299512,-9.728376,2.744269,-2.416602,-5.785744,4.985478,-6.926183,-8.001880,2.504581,8.845040,4.907034,-4.721469,0.547186,1.249203,6.608895,-7.843799,-2.192906,-2.862996,9.265383,4.709110,3.176986,9.547806,-4.830998,1.667343,7.149117,2.138461,-0.127676,-3.573413,-3.071633,1.966907,-1.221902,-2.980831,-7.135780], dtype = "float64")#candidate|3331|(198,)|const|float64
call_3330 = relay.TupleGetItem(func_2318_call(relay.reshape(const_3331.astype('float64'), [9, 11, 2])), 0)
call_3332 = relay.TupleGetItem(func_2320_call(relay.reshape(const_3331.astype('float64'), [9, 11, 2])), 0)
output = relay.Tuple([call_3316,call_3330,const_3331,])
output2 = relay.Tuple([call_3317,call_3332,const_3331,])
func_3345 = relay.Function([], output)
mod['func_3345'] = func_3345
mod = relay.transform.InferType()(mod)
output = func_3345()
func_3346 = relay.Function([], output)
mutated_mod['func_3346'] = func_3346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2581_call = mod.get_global_var('func_2581')
func_2583_call = mutated_mod.get_global_var('func_2583')
call_3385 = relay.TupleGetItem(func_2581_call(), 0)
call_3386 = relay.TupleGetItem(func_2583_call(), 0)
output = relay.Tuple([call_3385,])
output2 = relay.Tuple([call_3386,])
func_3389 = relay.Function([], output)
mod['func_3389'] = func_3389
mod = relay.transform.InferType()(mod)
output = func_3389()
func_3390 = relay.Function([], output)
mutated_mod['func_3390'] = func_3390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2546_call = mod.get_global_var('func_2546')
func_2547_call = mutated_mod.get_global_var('func_2547')
call_3427 = func_2546_call()
call_3428 = func_2546_call()
output = call_3427
output2 = call_3428
func_3445 = relay.Function([], output)
mod['func_3445'] = func_3445
mod = relay.transform.InferType()(mod)
mutated_mod['func_3445'] = func_3445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mutated_mod.get_global_var('func_3445')
call_3446 = func_3445_call()
output = call_3446
func_3447 = relay.Function([], output)
mutated_mod['func_3447'] = func_3447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3078_call = mod.get_global_var('func_3078')
func_3079_call = mutated_mod.get_global_var('func_3079')
call_3455 = relay.TupleGetItem(func_3078_call(), 0)
call_3456 = relay.TupleGetItem(func_3079_call(), 0)
uop_3474 = relay.atanh(call_3455.astype('float64')) # shape=(5, 5)
uop_3476 = relay.atanh(call_3456.astype('float64')) # shape=(5, 5)
func_37_call = mod.get_global_var('func_37')
func_39_call = mutated_mod.get_global_var('func_39')
const_3479 = relay.const([-9,1,9,-7,-8,-7,-7,7,2,9,-10,2,-10,10,-4,-5,1,2,-6,9,4,-10,-1,-10,2,-2,-10,8,-7,-3,9,-1,-1,-4,-3,-2,7,7,9,-10,-9,-3,7,8,-2,-4,-8,-3,7,8,10,-9,10,-6,-3,9,-1,10,6,1], dtype = "int16")#candidate|3479|(60,)|const|int16
call_3478 = func_37_call(relay.reshape(const_3479.astype('int16'), [6, 10]))
call_3480 = func_37_call(relay.reshape(const_3479.astype('int16'), [6, 10]))
output = relay.Tuple([uop_3474,call_3478,const_3479,])
output2 = relay.Tuple([uop_3476,call_3480,const_3479,])
func_3485 = relay.Function([], output)
mod['func_3485'] = func_3485
mod = relay.transform.InferType()(mod)
mutated_mod['func_3485'] = func_3485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mutated_mod.get_global_var('func_3485')
call_3486 = func_3485_call()
output = call_3486
func_3487 = relay.Function([], output)
mutated_mod['func_3487'] = func_3487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3345_call = mod.get_global_var('func_3345')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_3519 = relay.TupleGetItem(func_3345_call(), 1)
call_3520 = relay.TupleGetItem(func_3346_call(), 1)
output = call_3519
output2 = call_3520
func_3522 = relay.Function([], output)
mod['func_3522'] = func_3522
mod = relay.transform.InferType()(mod)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3522_call = mutated_mod.get_global_var('func_3522')
call_3523 = func_3522_call()
output = call_3523
func_3524 = relay.Function([], output)
mutated_mod['func_3524'] = func_3524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2581_call = mod.get_global_var('func_2581')
func_2583_call = mutated_mod.get_global_var('func_2583')
call_3611 = relay.TupleGetItem(func_2581_call(), 0)
call_3612 = relay.TupleGetItem(func_2583_call(), 0)
output = call_3611
output2 = call_3612
func_3629 = relay.Function([], output)
mod['func_3629'] = func_3629
mod = relay.transform.InferType()(mod)
output = func_3629()
func_3630 = relay.Function([], output)
mutated_mod['func_3630'] = func_3630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3692 = relay.var("var_3692", dtype = "uint8", shape = (16, 7, 13))#candidate|3692|(16, 7, 13)|var|uint8
var_3693 = relay.var("var_3693", dtype = "uint8", shape = (16, 7, 13))#candidate|3693|(16, 7, 13)|var|uint8
bop_3694 = relay.bitwise_xor(var_3692.astype('uint8'), relay.reshape(var_3693.astype('uint8'), relay.shape_of(var_3692))) # shape=(16, 7, 13)
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
var_3706 = relay.var("var_3706", dtype = "float64", shape = (198,))#candidate|3706|(198,)|var|float64
call_3705 = relay.TupleGetItem(func_2318_call(relay.reshape(var_3706.astype('float64'), [9, 11, 2])), 0)
call_3707 = relay.TupleGetItem(func_2320_call(relay.reshape(var_3706.astype('float64'), [9, 11, 2])), 0)
output = relay.Tuple([bop_3694,call_3705,var_3706,])
output2 = relay.Tuple([bop_3694,call_3707,var_3706,])
func_3720 = relay.Function([var_3692,var_3693,var_3706,], output)
mod['func_3720'] = func_3720
mod = relay.transform.InferType()(mod)
var_3721 = relay.var("var_3721", dtype = "uint8", shape = (16, 7, 13))#candidate|3721|(16, 7, 13)|var|uint8
var_3722 = relay.var("var_3722", dtype = "uint8", shape = (16, 7, 13))#candidate|3722|(16, 7, 13)|var|uint8
var_3723 = relay.var("var_3723", dtype = "float64", shape = (198,))#candidate|3723|(198,)|var|float64
output = func_3720(var_3721,var_3722,var_3723,)
func_3724 = relay.Function([var_3721,var_3722,var_3723,], output)
mutated_mod['func_3724'] = func_3724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3770 = relay.var("var_3770", dtype = "float64", shape = (11, 6, 16))#candidate|3770|(11, 6, 16)|var|float64
var_3771 = relay.var("var_3771", dtype = "float64", shape = (11, 6, 16))#candidate|3771|(11, 6, 16)|var|float64
bop_3772 = relay.subtract(var_3770.astype('float64'), relay.reshape(var_3771.astype('float64'), relay.shape_of(var_3770))) # shape=(11, 6, 16)
uop_3776 = relay.log2(var_3770.astype('float64')) # shape=(11, 6, 16)
func_582_call = mod.get_global_var('func_582')
func_585_call = mutated_mod.get_global_var('func_585')
var_3779 = relay.var("var_3779", dtype = "float32", shape = (224,))#candidate|3779|(224,)|var|float32
call_3778 = func_582_call(relay.reshape(var_3779.astype('float32'), [7, 2, 16]), relay.reshape(var_3779.astype('float32'), [7, 2, 16]), )
call_3780 = func_582_call(relay.reshape(var_3779.astype('float32'), [7, 2, 16]), relay.reshape(var_3779.astype('float32'), [7, 2, 16]), )
uop_3786 = relay.cos(uop_3776.astype('float64')) # shape=(11, 6, 16)
var_3813 = relay.var("var_3813", dtype = "float64", shape = (11, 6, 16))#candidate|3813|(11, 6, 16)|var|float64
bop_3814 = relay.bitwise_or(uop_3776.astype('int8'), relay.reshape(var_3813.astype('int8'), relay.shape_of(uop_3776))) # shape=(11, 6, 16)
uop_3823 = relay.atan(call_3778.astype('float64')) # shape=(7, 2, 16)
uop_3825 = relay.atan(call_3780.astype('float64')) # shape=(7, 2, 16)
func_2670_call = mod.get_global_var('func_2670')
func_2671_call = mutated_mod.get_global_var('func_2671')
call_3827 = func_2670_call()
call_3828 = func_2670_call()
func_2859_call = mod.get_global_var('func_2859')
func_2860_call = mutated_mod.get_global_var('func_2860')
call_3836 = func_2859_call()
call_3837 = func_2859_call()
bop_3850 = relay.not_equal(uop_3786.astype('bool'), relay.reshape(var_3770.astype('bool'), relay.shape_of(uop_3786))) # shape=(11, 6, 16)
output = relay.Tuple([bop_3772,var_3779,bop_3814,uop_3823,call_3827,call_3836,bop_3850,])
output2 = relay.Tuple([bop_3772,var_3779,bop_3814,uop_3825,call_3828,call_3837,bop_3850,])
func_3861 = relay.Function([var_3770,var_3771,var_3779,var_3813,], output)
mod['func_3861'] = func_3861
mod = relay.transform.InferType()(mod)
mutated_mod['func_3861'] = func_3861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3861_call = mutated_mod.get_global_var('func_3861')
var_3863 = relay.var("var_3863", dtype = "float64", shape = (11, 6, 16))#candidate|3863|(11, 6, 16)|var|float64
var_3864 = relay.var("var_3864", dtype = "float64", shape = (11, 6, 16))#candidate|3864|(11, 6, 16)|var|float64
var_3865 = relay.var("var_3865", dtype = "float32", shape = (224,))#candidate|3865|(224,)|var|float32
var_3866 = relay.var("var_3866", dtype = "float64", shape = (11, 6, 16))#candidate|3866|(11, 6, 16)|var|float64
call_3862 = func_3861_call(var_3863,var_3864,var_3865,var_3866,)
output = call_3862
func_3867 = relay.Function([var_3863,var_3864,var_3865,var_3866,], output)
mutated_mod['func_3867'] = func_3867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_3872 = relay.TupleGetItem(func_3485_call(), 2)
call_3873 = relay.TupleGetItem(func_3487_call(), 2)
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
const_3875 = relay.const([3.678296,-3.465581,8.397561,8.255642,-2.717248,4.434629,9.434957,-8.913624,3.834949,6.456590,-7.383924,8.633805,2.972371,3.280758,-8.995663,-3.995896,0.338865,4.287977,-1.623980,9.254677,-5.517537,2.107943,6.685400,-6.196683,5.378975,9.396936,4.613854,8.444839,-2.776730,3.654177,-6.151034,-2.035283,1.044297,-8.772310,9.990008,-0.398544,-5.287462,3.851511,6.277840,2.979373,4.876976,-2.344905,8.863073,-7.736060,-5.439335,-0.478891,2.886999,-9.736954,-1.510571,-4.535900,-0.896160,0.082488,-7.851539,-3.070678,-2.408285,-6.454990,4.320168,7.347510,-0.653093,-5.630586,7.643228,4.477676,-9.508617,9.058324,-3.343426,-2.975089,-8.006593,-6.601048,-0.674047,-0.704509,-9.108270,-2.613787,1.720559,-9.592916,7.455353,-3.297141,9.270337,5.771511,0.993893,8.535607,-3.678925,8.579307,4.698484,-4.294871,-7.422802,6.909362,0.514982,-8.297343,3.446821,9.162063,-6.840872,1.194356,8.617255,5.324228,-0.982371,6.665451,-6.442099,0.253812,-7.817448,6.112818,4.562665,4.679815,-6.684022,4.915770,-0.794529,8.971868,0.448632,-2.619091,0.871150,4.525719,-9.217010,1.266746,3.720505,6.563079,-1.043708,1.602255,6.334121,-2.470116,-2.165097,9.731424,-0.703110,7.690495,2.069564,4.021967,3.347273,-8.465419,7.573104,-6.813531,2.224112,-5.843977,-8.074499,3.145839,-1.698421,-5.377430,1.026355,3.515827,-1.746380,1.730405,-3.413612,-0.870011,-6.441598,-9.275266,-0.163175,-0.519710,-3.507132,5.921141,-0.195345,-7.888016,4.775170,-3.082518,-3.640575,-8.313095,-8.290903,-0.359105,-9.951314,6.854017,-4.151998,-3.946036,-8.639213,-4.367775,6.382937,-7.960169,-9.928604,-1.291608,6.601409,-2.087490,-1.398967,-4.696422,8.091268,-9.735272,1.562983,-2.981641,8.250040,9.706001,8.555601,-6.848307,3.803371,2.982093,4.233569,4.782734,-4.665189,-1.804386,2.036420,7.377214,1.665592,-9.036211,6.063650,-0.231376,-5.934723,7.810932,7.600191,-0.491250,-5.837569,-3.090854,-5.715636,-4.638564,-2.179350,5.963795], dtype = "float64")#candidate|3875|(198,)|const|float64
call_3874 = relay.TupleGetItem(func_2318_call(relay.reshape(const_3875.astype('float64'), [9, 11, 2])), 0)
call_3876 = relay.TupleGetItem(func_2320_call(relay.reshape(const_3875.astype('float64'), [9, 11, 2])), 0)
output = relay.Tuple([call_3872,call_3874,const_3875,])
output2 = relay.Tuple([call_3873,call_3876,const_3875,])
func_3880 = relay.Function([], output)
mod['func_3880'] = func_3880
mod = relay.transform.InferType()(mod)
output = func_3880()
func_3881 = relay.Function([], output)
mutated_mod['func_3881'] = func_3881
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3952 = relay.var("var_3952", dtype = "float32", shape = (4, 2, 10))#candidate|3952|(4, 2, 10)|var|float32
uop_3953 = relay.tan(var_3952.astype('float32')) # shape=(4, 2, 10)
func_2257_call = mod.get_global_var('func_2257')
func_2264_call = mutated_mod.get_global_var('func_2264')
var_3961 = relay.var("var_3961", dtype = "float64", shape = (192,))#candidate|3961|(192,)|var|float64
var_3962 = relay.var("var_3962", dtype = "float64", shape = (168,))#candidate|3962|(168,)|var|float64
var_3963 = relay.var("var_3963", dtype = "float32", shape = (224,))#candidate|3963|(224,)|var|float32
var_3964 = relay.var("var_3964", dtype = "float32", shape = (720,))#candidate|3964|(720,)|var|float32
const_3965 = relay.const([6,1,8,-9,-8,-4,-10,-10,2,-10,7,-2,7,-10,5,-1,5,-8,3,1,-6,4,9,9,-7,4,3,7,-4,-5,4,-10,9,-1,-5,6,7,-9,3,10,5,3,1,-7,9,-2,9,-2,-9,-1,-5,-6,-6,-1,-3,10,-8,-7,3,2,8,-4,7,5,9,10,4,8,-1,10,3,-3,3,8,3,-9,-5,8,-9,7,1,-3,5,5,-2,9,7,6,1,-5,5,5,-6,-1,-8,-4,10,-1,7,-1,3,4,-2,-9,4,7,-9,-9,-7,-2,3,-1,-3,5,8,-1,-6,10,-5,10,4,-9,10,-10,10,-10,-7,-5,-3,2,-6,4,-8,-7,5,4,-5,-4,3,-1,-5,-6,-2,-5,-1,8,-8,7,-1,10,-4,-7,7,5,5,-3,-7,-5,1,-3,4,10,-8,-9,3,-2,4,-7,1,1,6,-8,-2,-1,10,-5,-7,-8,2,-1,9,-2,-5,1,9,-3,5,-7,2,-2,-1,-9,-4,3,-6,-10,10,-5,-1,2,-8,6,-6,-2,10,-3,3,-1,-10,-10,9,-9,-2,-3,-3,-2,1,6,-10,6,-4,-2,2,1,-10,-8,3,-7,6,-9,-6,-1,10,4,8,1,-10,9,10,8,5,6,-5,-4,-6,1,-5,-9,-2,8,-5,-3,3,9,-4,-1,2,4,4,-10,2,-2,-4,5,-4,-5,1,3,10,7,-10,-10,8,2,5,-2,-3,-7,7,-2,-4,-1,-7,-8,8,-10,6,3,-7,7,6,10,-6,-8,-6,6,-9,4,3,4,7,-2,-7,6,7,-5,-5,-4,-9,-3,-3,6,6,-10,2,-2,10,-4,6,-1,3,10,1,8,6,-9,-2,3,-5,-9,-8,7,-5,-5,1,8,1,4,9,6,-7,6,-9,9,3,4,1,9,2,-6,9,-1,-1,-6,8,8,6,5,5,1,4,-9,-7,-10,4,6,-2,-6,1,-3,-4,6,-7,5,-7,-9,-2,-7,-9,-1,-4,8,5,9,8,7,-5,1,-6,-5,5,-5,4,-9,10,8,9,8,-10,10,-8,-9,9,-6,-8,-9,5,-1,7,-4,10,-9,-7,-10,3,-4,-6,6,7,-10,3,8,-5,-8,9,-9,5,-9,-6,-9,9,-2,10,-2,-1,2,4,-3,10,-1,-7,-1,8,-5,9,3,-1,4,-4,8,9,-9,-9,1,-8,-10,5,-7,9,7,-8,-7,5,2,-8,-5,8,1,8,9,-6,-9,10,4,-10,9,-1,-8,-10,6,-9,-6,-4,-8,-8,-8,-8,5,-5,-9,-10,-4,7,-7,-2,-4,5,2,4,4,7,-8,1,10,4,2,10,-7,7,3,-9,2,6,3,-4,-5,9,3,-1,-5,-4,1,2,-2,-1,10,-3,-2,-6,2,2,-10,-1,8,-6,6,-9,-4,4,9,1,5,-4,5,-4,2,2,-6,3,-6,-8,-6,3,7,6,-5,5,-10,-1,-9,-2,10,2,-1,-1,-3,1,-5,9,-4,-7,-1,10,-1,8,5,-4,-6,-2,-1,-3,-3,4,-1,-9,-8,-3,-9,2,-4,-4,10,6,4,2,3,8,10,-6,-4,5,1,3,-2,4,7,7,-7,3,2,-5,-1,-3,-6,3,3,-4,-7,-8,3,-7,1,-8,-8,8,-6,-5,7,-7,8,-2,7,7,2,5,7,-4,5,-7,-10,-2,-1,3,-6,10,2,5,6,5,7,-1,-9,5,6,-6,-8,-5,7,6,2,-5,7,-4,-2,-1,9,3,9,-4,1,-3,10,9,-8,9,10,4,6,10,-9,6,7,5,-9,-2,9,-9,-5,-4,-3,5,-9,-3,-7,4,6,-3,1,-8,5,3,7,-10,-10,5,9,9,7,2,4,1,8,-2,1,1,2,-9,6,9,-6,-1,4,-3,-3,6,-3,-7,2,1,-3,-9,-6,6,-10,10,-1,10,-3,6,-8,-3,-1,1,2,-9,4,-2,8,4,2,3,7,7,-6,5,-5,-4,-9,-10,-7,-5,-6,-3,4,-2,1,8,-9,-7,-7,-7,-9,9,-6,-8,-9,-5,-2,1,6,-10,7,7,4,10,-6,-6,-8,2,5,10,-7,-10,5,-4,-3,10,-4,-7,-10,-10,4,3,10,-9,-7,10,3,-2,-1,1,-3,-7,9,5,-1,-8,-2,6,-6,8,3,9,10,-4,10,-7,8,7,-8,-7,-9,3,-5,3,3,7,1,-3,7,-6,-5,-9,-6,8,-9,2,-9,-9,-5,6,-8,-5,-8,2,6,-4,10,1,10,-2,4,10,1,10,4,6,-8,10,7,-5,1,-3,-3,-9,-4,5,-8,-3,-6,7,-10,1,3,-6,-5,-3,-10,-7,1,-9,8,-4,1,-7,2,-7,6,10,9,-10,-9,-9,9,4,-2,4,-9,6,8,6,-9,2,-9,7,-2,-10,-9,-10,5,-10,-8,-6,-5,-6,-8,-4,-5,4,-1,-2,5,-4,3,5,-9,-4,1,4,2,10,-2,7,-1,1,-10,-6,7,3,5,7,-5,1,-10,-4,4,-2,-6,-2,-2,8,-8,-8,6,4,-9,5,1,-2,10,-3,9,1,-6,4,-7,-1,9,-7,-3,4,1,8,7,3,7,4,-3,3,7,9,-10,-9,2,-3,7,6,9,2,-5,5,-2,8,-3,7,8,4,-8,8,10,-6,-1,7,-8,9,-5,-7,-3,-4,-6,6,9,-4,4,-9,-5,1,9,9,-6,-3,3,8,5,-2,-1,4,10,-8,-10,-9,4,-3,8,10,-10,-5,-3,9,-2,-6,9,4,-10,6,-3,-6,-4,10,1,-6,-3,4,-3,-1,-1,-8,8,2,6,7,2,4,2,-8,4,-4,6,-2,-8,-1,-1,-1,-3,-5,10,8,-5,8,8,10,1,-10,9,-5,4,-6,-7,4,-2,8,-2,4,9,-7,-5,9,-1,2,-1,-9,-4,-2,3,-10,-6,7,-5,9,2,-10,-5,4,8,-7,4,5,-10,1,-4,10,-1,2,-7,-9,1,5,-8,3,4,4,6,8,-10,-3,9,-8,10,6,3,8,5,-9,4,-9,-1,-8,6,-7,4,1,-3,6,9,5,-7,5,10,-5,5,5,-8,-7,1,-9,3,-10,8,-4,-10,-8,-1,3,6,-6,-1,-9,3,1,1,1,-1,2,1,-6,-4,9,9,9,-9,8,-5,9,4,-4,-2,-9,-7,2,-9,-10,3,10,-1,-7,3,2,-2,-10,5,-1,10,-1,3,7,-2,-4,-6,8,3,-10,3,-6,7,3,-9,-10,-4,-6,-4,6,-7,2,-5,3,-6,-4,-8,-5,-4,8,1,-10,9,-10,8,1,-8,-1,3,-9,-8,9,-1,1,-1,9,-7,8,7,-2,-6,2,-4,-5,8,8,-8,2,-9,7,1,5,6,-5,1,-8,8,1,5,-1,-3,-1,-5,-10,-5,6,4,-4,-5,3,-8,-3,3,10,-1,10,-1,-4,-3,1,-3,4,10,-8,-10,-3,2,-5,-1,2,10,-5,-3,7,3,-6,7,-6,9,-4,-4,7,2,-10,1,-2,-4,-1,-7,-6,6,-9,-1,2,8,1,10,6,4,-4,8,3,4,-2,10,-3,8,-9,-6,3,6,6,3,-9,-9,-1,8,10,8,5,10,4,2,8,-6,-4,6,10,1,8,10,-9,-1,-4,-3,-7,-7,-10,8,-6,1,-9,-9,6,-6,-10,-4,-9,-9,6,-10,-4,5,7,-2,-10,-3,9,5,2,2,10,-2,-10,9,-3,-8,7,1,-9,-7,7,5,3,-1,-1,-8,8,-9,-3,4,-7,-2,-6,-8,-5,1,6,8,-7,-4,-4,9,-4,-10,-7,2,-5,-10,-7,-5,3,4,3,7,-3,-10,5,6,-10,-8,-1,10,-5,6,-9,6,-8,-9,4,-4,-1,3,4,7,8,-10,8,-2,10,-6,-2,1,5,-2,8,-6,-10,6,10,7,-1,-6,7,-1,-9,-8,-9,10,8,3,-10,6,-1,4,-6,-1,8,-5,5,-3,-2,5,9,7,7,-5,10,5,-4,3,1,-6,-1,-5,-6,3,9,-1,-1,-6,-8,-3,2,10,-8,3,-6,8,1,-4,-2,-7,4,1,-6,-2,-8,5,-5,-6,-9,-4,-10,-4,6,8,-6,-10,2,-6,8,5,4,-8,6,-4,2,3,10,3,-7,5,7,-4,7,-1,7,-1,-7,-2,2,1,-3,6,-2,-1,-3,4,2,-2,7,3,9,-7,-4,3,-4,-10,9,-2,6,-1,2,8,5,-2,-3,-8,-3,-1,3,-3,-10,-6,10,1,-3,-4,10,-8,1,-7,9,9,8,8,-5,8,7,-6,2,-2,2,2,9,-6,2,-7,7,-4,5,8,-5,5,10,9,-9,-1,-9,2,2,8,-1,6,8,-3,-2,-3,7,8,-1,3,10,-2,4,-4,-4,-2,-7,3,10,10,-8,10,-3,5,7,-6,10,3,4,2,-2,-2,-5,-4,-10,-7,-7,6,-5,-6,8,7,-1,-4,10,2,-2,-10,-9,2,-9,10,3,-10,6,1,9,2,10,5,-3,1,3,-2,6,-6,10,4,1,-4,-9,8,2,-8,-9,-2,3,-10,7,-3,-6,9,-2,-1,-9,9,-9,6,9,6,10,-10,3,9,2,4,-10,3,-8,-4,-1,-4,10,-4,5,-6,-7,-8,-6,10,-1,-5,-7,-3,-5,1,2,10,5,-10,5,-5,-4,-5,-2,-8,1,-3,4,-5,-5,-6,-2,-8,2,7,-7,10,-7,-2,9,-3,-5,-9,2,-7,8,5,-2,7,4,1,-8,3,-3,-4,4,1,4,6,3,5,9,-3,7,-4,6,2,-6,9,7,4,-1,-1,-6,-10,-2,-2,7,3,7,-4,-5,-7,9,-2,9,10,-10,2,-9,5,-9,4,2,9,7,2,-2,-2,-3,9,-10,-2,3,-8,-6,6,2,3,-9,3,8,7,2,-10,6,9,-2,8,-4,-10,1,-8,-7,-7,3,-2,5,2,-1,-6,-4,2,-5,9,-1,2,4,7,2,10,5,-8,-3,8,3,-10,-9,10,7,5,-10,-1,10,-10,3,-8,3,-7,-6,-2,-10,-5,7,5,9,-3,1,-5,-4,-1,-6,5,7,-8,8,-2,-2,-7,4,-2,-2,-4,-1,-1,-6,9,-3,3,-6,-3,-9,-3,5,2,10,4,1,4,-7,-4,-9,-6,9,4,-8,-2,-5,-2,4,10,7,7,-2,-9,-6,-3,-10,-9,8,-8,2,7,-6,-6,10,6,1,-5,-4,1,9,-7,5,-10,1,3,-8,9,-7,4,-4,-7,6,8,-10,2,-5,10,6,4,8,1,8,-9,8,4,-6,6,7,-1,-3,4,-3,7,-4,9,10,7,-3,-5,-10,2,2,-9,2,-3,5,2,-4,9,1,8,-9,9,1,-4,3,-8,-6,3,7,2,3,-9,-2,-5,-8,4,9,-1,9,1,3,-8,-6,-6,7,6,9,-7,6,4,6,-3,-3,-3,-2,-4,-6,4,3,7,-10,-10,-8,2,10,8,-3,-10,7,-1,-2,6,9,-9,1,-2,9,-2,10,1,-9,7,1,-10,-5,-1,-6,-4,-8,7,9,2,3,4,-5,5,-5,-8,4,-7,9,-5,-5,-1,-1,2,-8,-1,6,6,2,9,-8,4,-5,10,-8,-10,-3,6,9,-8,-2,-10,4,-4,-9,-4,8,-6,10,8,2,-3,-6,3,-8,-4,9,9,-10,-2,5,-6,5,-9,-10,2,-2,-9,5,6,2,-2,-6,8,5,6,7,5,6,6,-1,-9,3,-5,-9,-2,3,-4,6,-4,4,-2,-2,3,-3,5,7,-8,10,-9,-4,-10,4,5,-7,-2,9,-2,-3,10,-3,-9,-6,1,8,-7,-2,7,-4,-7,-1,10,10,-4,6,-8,-8,-9,4,2,-1,-4,9,-8,-6,-4,1,1,-5,-6,-7,-1,-3,-9,2,1,-4,6,-8,6,9,-5,3,6,8,-10,10,10,-4,4,-2,-9,10,10,2,-6,-6,-5,-4,7,-5,-9,-2,10,-9,2,-9,-10,6,1,-5,-1,7,-10,-7,4,-7,8,-3,-5,-3,6,8,3,5,6,-10,-1,-10,-1,-9,10,-10,-5,-7,5,-7,-5,6,-3,-3,-1,3,-1,6,-2,7,-2,10,-9,-8,-8,7,4,-1,-4,-5,9,-10,4,2,-10,-10,5,-10,7,-1,4,10,1,6,-8,-10,-10,-5,6,-2,6,9,-10,-10,-6,3,8,10,7,-5,-7,-9,-7,1,4,10,-3,-3,-5,-1,-3,2,8,-3,8,-9,4,1,-2,5,-6,-6,-3,4,-4,-10,1,-10,-4,3,10,-4,-10,6,-9,-6,5,6,2,5,-6,3,-6,6,8,1,-3,-4,2,-3,-2,-8,2,6,-5,-10,-7,8,-9,-5,-6,-9,-3,-2,-5,-6,5,-8,9,2,7,4,-8,9,-9,-6,-3,3,-10,-9,-9,3,-2,-2,-5,2,6,-7,-8,-2,5,3,-5,-1,1,-9,8,6,-3,8,1,-1,6,3,-8,-3,5,8,4,4,-1,8,2,-7,2,-4,-5,-4,-5,-7,2,-4,7,6,3,-7,-2,4,-8,-1,-6,7,-10,-2,-6,7,-8,6,5,7,3,-4,10,8,-7,-10,4,4,-6,10,-3,1,-8,-1,10,-2,-3,-7,4,-10,-6,4,8,7,-4,8,-2,3,8,2,1,3,2,-4,7,7,-4,5,-9,-6,7,-2,-4,8,6,-2,-6,8,2,4,6,5,2,-2,2,6,3,-10,-3,-1,-2,6,7,-8,8,10,-1,5,-3,-4,6,-6,-8,-8,-7,-9,-1,7,-1,-6,-4,4,-9,9,-8,9,-5,-5,-3,5,3,7,9,1,-8,8,5,-9,2,8,-3,6,-4,-10,-5,5,8,-3,9,-6,2,10,5,2,7,9,-9,-7,-7,9,3,3,7,8,-9,4,-8,1,-4,-3,4,-3,9,5,-9,2,-8,3,1,3,6,3,2,7,6,-6,-2,-3,-9,6,1,-1,-3,6,4,3,-7,-3,-10,-2,10,9,9,2,-10,-9,6,-2,2,10,7,7,-10,10,1,-8,-4,-5,-7,-2,-5,10,8,-10,-9,-8,4,8,-8,-3,4,1,8,-10,1,4,4,-7,5,5,-8,10,-10,5,1,-6,3,1,-3,6,7,-2,-5,5,6,6,5,-5,8,-3,-2,-2,-8,4,-7,7,-2,3,8,9,-8,-8,-3,-7,5,-8,1,-1,6,-10,8,5,6,9,-7,-8,3,9,-8,-7,-8,-9,-6,8,6,4,-7,5,-8,9,-5,2,2,-6,-10,3,-9,-9,-3,-8,6,6,-1,-9,7,6,-5,-2,2,7,-10,-3,5,5,-8,-10,4,-10,-6,6,6,-5,-2,8,-4,9,-7,4,-2,-1,-1,9,-4,-2,9,-6,-2,8,8,10,-2,8,1,1,-1,8,-3,7,5,10,9,-8,6,5,-1,8,3,-3,7,2,6,10,-4,-9,-8,10,4,6,-4,-6,5,-6,-1,5,-5,-6,6,10,-2,-6,7,-6,5,-1,-3,2,2,-8,-1,10,1,-6,-1,4,5,-6,9,-5,5,1,-2,8,5,6,-1,9,-2,7,-1,-1,-3,3,8], dtype = "uint8")#candidate|3965|(2880,)|const|uint8
call_3960 = relay.TupleGetItem(func_2257_call(relay.reshape(var_3961.astype('float64'), [12, 16, 1]), relay.reshape(var_3962.astype('float64'), [168,]), relay.reshape(var_3963.astype('float32'), [224,]), relay.reshape(var_3964.astype('float32'), [720,]), relay.reshape(const_3965.astype('uint8'), [2880,]), ), 2)
call_3966 = relay.TupleGetItem(func_2264_call(relay.reshape(var_3961.astype('float64'), [12, 16, 1]), relay.reshape(var_3962.astype('float64'), [168,]), relay.reshape(var_3963.astype('float32'), [224,]), relay.reshape(var_3964.astype('float32'), [720,]), relay.reshape(const_3965.astype('uint8'), [2880,]), ), 2)
output = relay.Tuple([uop_3953,call_3960,var_3961,var_3962,var_3963,var_3964,const_3965,])
output2 = relay.Tuple([uop_3953,call_3966,var_3961,var_3962,var_3963,var_3964,const_3965,])
func_3976 = relay.Function([var_3952,var_3961,var_3962,var_3963,var_3964,], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
mutated_mod['func_3976'] = func_3976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mutated_mod.get_global_var('func_3976')
var_3978 = relay.var("var_3978", dtype = "float32", shape = (4, 2, 10))#candidate|3978|(4, 2, 10)|var|float32
var_3979 = relay.var("var_3979", dtype = "float64", shape = (192,))#candidate|3979|(192,)|var|float64
var_3980 = relay.var("var_3980", dtype = "float64", shape = (168,))#candidate|3980|(168,)|var|float64
var_3981 = relay.var("var_3981", dtype = "float32", shape = (224,))#candidate|3981|(224,)|var|float32
var_3982 = relay.var("var_3982", dtype = "float32", shape = (720,))#candidate|3982|(720,)|var|float32
call_3977 = func_3976_call(var_3978,var_3979,var_3980,var_3981,var_3982,)
output = call_3977
func_3983 = relay.Function([var_3978,var_3979,var_3980,var_3981,var_3982,], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_4013 = relay.TupleGetItem(func_3485_call(), 2)
call_4014 = relay.TupleGetItem(func_3487_call(), 2)
func_3522_call = mod.get_global_var('func_3522')
func_3524_call = mutated_mod.get_global_var('func_3524')
call_4020 = func_3522_call()
call_4021 = func_3522_call()
uop_4029 = relay.sin(call_4020.astype('float64')) # shape=(9, 11, 2)
uop_4031 = relay.sin(call_4021.astype('float64')) # shape=(9, 11, 2)
bop_4043 = relay.add(call_4020.astype('uint16'), relay.reshape(uop_4029.astype('uint16'), relay.shape_of(call_4020))) # shape=(9, 11, 2)
bop_4046 = relay.add(call_4021.astype('uint16'), relay.reshape(uop_4031.astype('uint16'), relay.shape_of(call_4021))) # shape=(9, 11, 2)
output = relay.Tuple([call_4013,bop_4043,])
output2 = relay.Tuple([call_4014,bop_4046,])
func_4052 = relay.Function([], output)
mod['func_4052'] = func_4052
mod = relay.transform.InferType()(mod)
mutated_mod['func_4052'] = func_4052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4052_call = mutated_mod.get_global_var('func_4052')
call_4053 = func_4052_call()
output = call_4053
func_4054 = relay.Function([], output)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2481_call = mutated_mod.get_global_var('func_2481')
call_4062 = func_2480_call()
call_4063 = func_2480_call()
func_3861_call = mod.get_global_var('func_3861')
func_3867_call = mutated_mod.get_global_var('func_3867')
var_4067 = relay.var("var_4067", dtype = "float64", shape = (1056,))#candidate|4067|(1056,)|var|float64
const_4068 = relay.const([2.014783,-2.795162,-7.141727,8.889422,8.030130,4.455476,6.955459,-2.271367,-6.903293,8.555898,-8.748349,-9.383553,-9.309550,-8.166249,4.888685,-7.266804,1.890836,9.868950,4.145991,3.636555,-5.086507,4.978319,5.036187,1.275066,1.656657,-9.606518,-9.346525,5.522975,-6.173054,6.309538,-8.724521,-8.998618,-9.149430,4.623875,-9.936608,9.277103,-5.386447,-7.514997,-3.547764,3.109873,9.288844,2.709347,-1.366571,-5.492856,-5.920242,1.562229,7.770966,-3.939021,8.718936,1.106190,-8.958188,0.964523,1.491103,1.095169,5.656638,3.307029,-1.009397,-0.679917,6.725163,1.172303,-6.186756,-4.604544,-3.103856,-1.150427,5.547893,9.419626,-3.004603,-4.668362,0.964193,3.411187,-3.746212,1.127273,0.068229,-0.331586,-4.684619,-4.695992,-6.249230,-9.352472,6.633529,-0.600480,-5.628125,6.141190,-8.335997,-3.966056,5.341596,-8.717078,-5.517884,-5.888368,-5.361894,-6.879530,-5.455563,5.891117,-2.225843,5.885041,-6.295754,-8.855150,3.938717,9.513203,3.298729,8.278061,6.251613,-2.336424,9.909990,1.121976,1.233079,-1.819315,-4.145246,-4.828459,3.706556,5.458290,-5.955975,-7.202813,7.318514,8.477929,2.010344,2.528231,5.048173,-8.253323,-1.042832,-6.061672,-3.549293,5.239016,-6.762083,3.768963,8.658355,-7.218439,-9.352849,5.766365,-9.178054,-9.168814,-2.163007,8.242573,8.154849,-2.466156,0.946746,-1.112065,-8.839037,9.871167,4.598792,-9.237080,2.611050,-7.516985,-1.407391,0.287519,8.139868,-5.441237,2.277673,3.849143,-0.924571,-2.702077,-9.614323,9.815341,-1.750095,0.842582,2.727813,-1.152947,-6.886931,-7.368899,-6.202185,-5.846865,6.151015,1.666299,-2.128060,4.714550,9.804223,-7.446698,-1.647004,-8.566435,-7.332288,6.717565,3.706309,-9.206070,-7.248333,-0.715725,-4.948964,-3.828341,-3.570029,-6.803971,-1.623619,2.270408,7.051946,9.356052,2.990804,-3.295874,-8.956721,9.665433,6.305094,3.786432,-3.208844,3.990262,-4.397709,-5.868711,3.118740,2.852542,-5.510543,7.782564,2.108386,-8.719719,-2.081611,-2.235135,-2.621245,3.036473,-8.776814,7.634941,-0.904537,6.287193,6.196149,2.380800,3.369272,-9.154761,2.671724,9.420538,8.231650,4.514225,1.722940,-9.390988,9.649711,9.871023,-2.603483,-1.044020,4.565592,-7.104164,9.457973,-8.943134], dtype = "float32")#candidate|4068|(224,)|const|float32
call_4066 = relay.TupleGetItem(func_3861_call(relay.reshape(var_4067.astype('float64'), [11, 6, 16]), relay.reshape(var_4067.astype('float64'), [11, 6, 16]), relay.reshape(const_4068.astype('float32'), [224,]), relay.reshape(var_4067.astype('float64'), [11, 6, 16]), ), 5)
call_4069 = relay.TupleGetItem(func_3867_call(relay.reshape(var_4067.astype('float64'), [11, 6, 16]), relay.reshape(var_4067.astype('float64'), [11, 6, 16]), relay.reshape(const_4068.astype('float32'), [224,]), relay.reshape(var_4067.astype('float64'), [11, 6, 16]), ), 5)
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
var_4075 = relay.var("var_4075", dtype = "uint8", shape = (1755,))#candidate|4075|(1755,)|var|uint8
call_4074 = func_1999_call(relay.reshape(var_4075.astype('uint8'), [15, 9, 13]))
call_4076 = func_1999_call(relay.reshape(var_4075.astype('uint8'), [15, 9, 13]))
uop_4085 = relay.exp(var_4075.astype('float32')) # shape=(1755,)
output = relay.Tuple([call_4062,call_4066,var_4067,const_4068,call_4074,uop_4085,])
output2 = relay.Tuple([call_4063,call_4069,var_4067,const_4068,call_4076,uop_4085,])
func_4089 = relay.Function([var_4067,var_4075,], output)
mod['func_4089'] = func_4089
mod = relay.transform.InferType()(mod)
var_4090 = relay.var("var_4090", dtype = "float64", shape = (1056,))#candidate|4090|(1056,)|var|float64
var_4091 = relay.var("var_4091", dtype = "uint8", shape = (1755,))#candidate|4091|(1755,)|var|uint8
output = func_4089(var_4090,var_4091,)
func_4092 = relay.Function([var_4090,var_4091,], output)
mutated_mod['func_4092'] = func_4092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2674_call = mod.get_global_var('func_2674')
func_2675_call = mutated_mod.get_global_var('func_2675')
call_4100 = relay.TupleGetItem(func_2674_call(), 0)
call_4101 = relay.TupleGetItem(func_2675_call(), 0)
func_582_call = mod.get_global_var('func_582')
func_585_call = mutated_mod.get_global_var('func_585')
const_4107 = relay.const([6.579391,-7.699955,4.808063,4.145281,-6.631070,4.424818,7.190212,-5.966794,0.380382,-5.621054,-8.621440,-0.851415,-6.671836,9.738020,5.162017,7.424516,0.276706,4.578241,1.894961,-9.122777,-1.764944,0.354924,3.802948,-1.696283,0.008267,-4.085079,-0.030793,-8.601506,4.505472,-9.661188,-2.562027,2.406164,5.139308,-0.609437,2.453917,-9.973040,6.482221,6.277938,-9.566208,8.912012,2.065637,9.683105,-1.559767,-1.234793,8.811225,-4.755747,-6.991627,-0.950425,8.627744,-1.589111,0.095290,-9.510872,5.809563,1.535907,4.123880,7.678048,-8.466999,-6.147981,-9.269408,-3.864986,8.797374,5.155350,-4.266241,-9.610613,0.870718,-0.513668,3.501400,9.821237,4.596747,-4.628000,2.383039,0.802784,-8.030808,0.208484,-0.477551,1.880643,-1.589625,-9.217212,-2.134659,-9.949060,6.153675,-9.145725,2.061678,1.918060,-0.532122,-7.591130,7.834574,4.127732,3.052495,-5.286551,-3.876924,-2.232531,6.318953,0.615705,8.712965,2.265493,-4.849962,1.195641,6.449913,-6.920266,6.170386,8.020101,-3.836327,-0.214828,4.759219,-6.465457,-8.931022,3.405153,4.896114,9.066525,-7.402773,3.376831,-4.865286,1.001984,-4.145620,4.334198,-5.092142,-5.167499,2.899759,-0.322272,-8.249677,-4.183869,1.745733,-6.240712,-2.662645,1.931570,-8.081870,-6.958561,-3.070689,-3.695129,0.203926,-9.750616,-1.185650,8.994589,6.638658,3.256208,-4.416105,4.058858,8.451499,-3.200613,3.911376,-5.010894,-8.292913,5.144278,-7.947754,7.757329,5.897005,2.366400,6.315722,-0.921541,9.403560,-9.412893,3.131411,5.676594,7.670024,2.053491,-3.089255,-4.104332,-5.141083,0.849324,5.705906,-6.691154,-4.069790,-0.151382,-9.523406,-7.261477,-2.185874,5.774201,-1.290042,-4.658818,-1.499104,7.085691,-9.639421,-4.643004,3.236247,2.246426,-4.529397,1.641044,-7.779235,-2.520040,-5.617448,-0.124957,9.185988,3.218556,-0.063610,4.177254,1.300466,9.255926,-5.085291,-4.818130,1.666401,-2.837137,2.910318,-0.455230,-8.693797,8.620159,-8.498287,4.970763,1.533165,6.624665,2.029692,7.239543,3.206085,-0.467044,-8.181260,9.921973,-1.992012,3.964160,-0.073738,8.619449,8.096371,9.291603,-0.203070,9.804959,9.765626,-4.657600,-5.344289,1.666981,-1.106793,4.488393,-4.165348,9.614898,5.686524,7.606277], dtype = "float32")#candidate|4107|(224,)|const|float32
call_4106 = func_582_call(relay.reshape(const_4107.astype('float32'), [7, 2, 16]), relay.reshape(const_4107.astype('float32'), [7, 2, 16]), )
call_4108 = func_582_call(relay.reshape(const_4107.astype('float32'), [7, 2, 16]), relay.reshape(const_4107.astype('float32'), [7, 2, 16]), )
output = relay.Tuple([call_4100,call_4106,const_4107,])
output2 = relay.Tuple([call_4101,call_4108,const_4107,])
func_4128 = relay.Function([], output)
mod['func_4128'] = func_4128
mod = relay.transform.InferType()(mod)
mutated_mod['func_4128'] = func_4128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4128_call = mutated_mod.get_global_var('func_4128')
call_4129 = func_4128_call()
output = call_4129
func_4130 = relay.Function([], output)
mutated_mod['func_4130'] = func_4130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3880_call = mod.get_global_var('func_3880')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_4146 = relay.TupleGetItem(func_3880_call(), 0)
call_4147 = relay.TupleGetItem(func_3881_call(), 0)
func_3629_call = mod.get_global_var('func_3629')
func_3630_call = mutated_mod.get_global_var('func_3630')
call_4179 = func_3629_call()
call_4180 = func_3629_call()
output = relay.Tuple([call_4146,call_4179,])
output2 = relay.Tuple([call_4147,call_4180,])
func_4183 = relay.Function([], output)
mod['func_4183'] = func_4183
mod = relay.transform.InferType()(mod)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4183_call = mutated_mod.get_global_var('func_4183')
call_4184 = func_4183_call()
output = call_4184
func_4185 = relay.Function([], output)
mutated_mod['func_4185'] = func_4185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2481_call = mutated_mod.get_global_var('func_2481')
call_4191 = func_2480_call()
call_4192 = func_2480_call()
func_582_call = mod.get_global_var('func_582')
func_585_call = mutated_mod.get_global_var('func_585')
var_4210 = relay.var("var_4210", dtype = "float32", shape = (224,))#candidate|4210|(224,)|var|float32
call_4209 = func_582_call(relay.reshape(var_4210.astype('float32'), [7, 2, 16]), relay.reshape(var_4210.astype('float32'), [7, 2, 16]), )
call_4211 = func_582_call(relay.reshape(var_4210.astype('float32'), [7, 2, 16]), relay.reshape(var_4210.astype('float32'), [7, 2, 16]), )
output = relay.Tuple([call_4191,call_4209,var_4210,])
output2 = relay.Tuple([call_4192,call_4211,var_4210,])
func_4216 = relay.Function([var_4210,], output)
mod['func_4216'] = func_4216
mod = relay.transform.InferType()(mod)
mutated_mod['func_4216'] = func_4216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4217 = relay.var("var_4217", dtype = "float32", shape = (224,))#candidate|4217|(224,)|var|float32
func_4216_call = mutated_mod.get_global_var('func_4216')
call_4218 = func_4216_call(var_4217)
output = call_4218
func_4219 = relay.Function([var_4217], output)
mutated_mod['func_4219'] = func_4219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2743_call = mod.get_global_var('func_2743')
func_2744_call = mutated_mod.get_global_var('func_2744')
call_4226 = relay.TupleGetItem(func_2743_call(), 0)
call_4227 = relay.TupleGetItem(func_2744_call(), 0)
func_2180_call = mod.get_global_var('func_2180')
func_2183_call = mutated_mod.get_global_var('func_2183')
const_4229 = relay.const([-7.772711,7.235513,-9.493184,8.573190,8.374439,-4.209450,-9.999428,-6.051732,-2.547038,5.339109,-9.111437,0.257227,0.791526,2.281554,1.964709,-2.877592,-3.619418,-1.446747,6.340033,3.009332,-4.907687,-7.733019,9.737473,9.258785,6.322316,6.319175,6.376586,-9.620414,9.138920,4.042679,-1.361205,-7.566010,4.242068,5.182851,1.050099,1.362466,-1.066598,-9.694144,-3.960450], dtype = "float64")#candidate|4229|(39,)|const|float64
call_4228 = func_2180_call(relay.reshape(const_4229.astype('float64'), [13, 3, 1]))
call_4230 = func_2180_call(relay.reshape(const_4229.astype('float64'), [13, 3, 1]))
var_4240 = relay.var("var_4240", dtype = "float64", shape = (39,))#candidate|4240|(39,)|var|float64
bop_4241 = relay.bitwise_xor(const_4229.astype('int8'), relay.reshape(var_4240.astype('int8'), relay.shape_of(const_4229))) # shape=(39,)
bop_4266 = relay.bitwise_or(const_4229.astype('int64'), relay.reshape(var_4240.astype('int64'), relay.shape_of(const_4229))) # shape=(39,)
output = relay.Tuple([call_4226,call_4228,bop_4241,bop_4266,])
output2 = relay.Tuple([call_4227,call_4230,bop_4241,bop_4266,])
func_4278 = relay.Function([var_4240,], output)
mod['func_4278'] = func_4278
mod = relay.transform.InferType()(mod)
var_4279 = relay.var("var_4279", dtype = "float64", shape = (39,))#candidate|4279|(39,)|var|float64
output = func_4278(var_4279)
func_4280 = relay.Function([var_4279], output)
mutated_mod['func_4280'] = func_4280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2859_call = mod.get_global_var('func_2859')
func_2860_call = mutated_mod.get_global_var('func_2860')
call_4379 = func_2859_call()
call_4380 = func_2859_call()
func_2670_call = mod.get_global_var('func_2670')
func_2671_call = mutated_mod.get_global_var('func_2671')
call_4386 = func_2670_call()
call_4387 = func_2670_call()
output = relay.Tuple([call_4379,call_4386,])
output2 = relay.Tuple([call_4380,call_4387,])
func_4389 = relay.Function([], output)
mod['func_4389'] = func_4389
mod = relay.transform.InferType()(mod)
mutated_mod['func_4389'] = func_4389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4389_call = mutated_mod.get_global_var('func_4389')
call_4390 = func_4389_call()
output = call_4390
func_4391 = relay.Function([], output)
mutated_mod['func_4391'] = func_4391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3078_call = mod.get_global_var('func_3078')
func_3079_call = mutated_mod.get_global_var('func_3079')
call_4415 = relay.TupleGetItem(func_3078_call(), 0)
call_4416 = relay.TupleGetItem(func_3079_call(), 0)
output = relay.Tuple([call_4415,])
output2 = relay.Tuple([call_4416,])
func_4424 = relay.Function([], output)
mod['func_4424'] = func_4424
mod = relay.transform.InferType()(mod)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4424_call = mutated_mod.get_global_var('func_4424')
call_4425 = func_4424_call()
output = call_4425
func_4426 = relay.Function([], output)
mutated_mod['func_4426'] = func_4426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4389_call = mod.get_global_var('func_4389')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_4442 = relay.TupleGetItem(func_4389_call(), 0)
call_4443 = relay.TupleGetItem(func_4391_call(), 0)
output = relay.Tuple([call_4442,])
output2 = relay.Tuple([call_4443,])
func_4458 = relay.Function([], output)
mod['func_4458'] = func_4458
mod = relay.transform.InferType()(mod)
output = func_4458()
func_4459 = relay.Function([], output)
mutated_mod['func_4459'] = func_4459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4052_call = mod.get_global_var('func_4052')
func_4054_call = mutated_mod.get_global_var('func_4054')
call_4463 = relay.TupleGetItem(func_4052_call(), 1)
call_4464 = relay.TupleGetItem(func_4054_call(), 1)
output = relay.Tuple([call_4463,])
output2 = relay.Tuple([call_4464,])
func_4471 = relay.Function([], output)
mod['func_4471'] = func_4471
mod = relay.transform.InferType()(mod)
mutated_mod['func_4471'] = func_4471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mutated_mod.get_global_var('func_4471')
call_4472 = func_4471_call()
output = call_4472
func_4473 = relay.Function([], output)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4486 = relay.var("var_4486", dtype = "int16", shape = (7, 12, 4))#candidate|4486|(7, 12, 4)|var|int16
const_4487 = relay.const([[[-1,3,-10,-8],[6,5,9,4],[5,-9,9,3],[-7,-9,-5,3],[1,10,8,-4],[-10,-2,-4,3],[2,-2,-10,-8],[-5,-6,-2,-8],[6,-6,-8,9],[-1,10,-1,-5],[-3,-3,-4,-1],[-2,9,7,8]],[[-5,-8,-5,2],[-9,-1,3,3],[-5,-10,1,-5],[-10,6,-4,-1],[-9,2,5,1],[-4,6,8,-5],[8,-1,-1,-2],[3,-10,-2,-5],[-1,6,1,-2],[2,6,7,-3],[1,4,2,-2],[-3,3,-7,-8]],[[-5,4,4,5],[-2,-5,4,-4],[4,4,-3,3],[3,1,2,6],[-4,7,6,3],[3,-9,-6,2],[10,-7,6,-8],[4,9,-1,-7],[-7,2,-6,-1],[2,8,2,1],[-7,6,-8,2],[-6,-10,-8,-1]],[[-9,8,9,-4],[9,3,1,-5],[10,-2,8,10],[7,-2,-7,9],[7,1,7,8],[-9,-9,-5,-1],[-6,3,6,-9],[-5,9,-3,6],[-6,-5,-4,10],[6,-6,-4,5],[-9,-5,6,-10],[-4,-1,-7,-6]],[[-5,5,5,-5],[-5,-3,-7,2],[-9,-2,10,5],[1,10,4,1],[8,-1,1,6],[-8,-8,7,2],[6,10,6,-1],[-3,4,-6,7],[1,7,-7,-10],[1,-9,-6,6],[-4,10,-4,-8],[-10,2,-7,10]],[[-10,-10,1,9],[7,-2,-10,-7],[-5,-6,-5,-3],[7,3,-8,-4],[3,5,-5,5],[4,-7,6,-1],[-8,-9,1,10],[-1,4,7,8],[-5,3,7,1],[7,-8,-1,-5],[7,-2,8,-8],[4,-10,1,2]],[[-1,7,-2,3],[-8,4,1,-6],[3,-7,-1,-2],[9,7,-2,-8],[-3,2,3,5],[-6,9,-10,6],[-5,6,9,3],[2,8,9,6],[8,7,5,3],[5,-3,-8,-8],[-3,9,4,2],[3,9,-5,-6]]], dtype = "int16")#candidate|4487|(7, 12, 4)|const|int16
bop_4488 = relay.greater(var_4486.astype('bool'), relay.reshape(const_4487.astype('bool'), relay.shape_of(var_4486))) # shape=(7, 12, 4)
func_926_call = mod.get_global_var('func_926')
func_928_call = mutated_mod.get_global_var('func_928')
const_4504 = relay.const([3,4,8,3,8,9,-1,-8,-7,-4,-4,-9,2,6,-7,-5,-4,4,4,-8,-9,10,3,10,3,-5,8,-7,-7,8,-1,-4,-2,9,-6,-10,-3,-4,-10,-6,-10,-9,-4,-9,-1,-7,-9,-9,1,-1,-6,1,1,4,2,4,3,-10,-2,-2,-5,-7,-9,-7], dtype = "uint64")#candidate|4504|(64,)|const|uint64
call_4503 = relay.TupleGetItem(func_926_call(relay.reshape(const_4504.astype('uint64'), [4, 8, 2])), 2)
call_4505 = relay.TupleGetItem(func_928_call(relay.reshape(const_4504.astype('uint64'), [4, 8, 2])), 2)
output = relay.Tuple([bop_4488,call_4503,const_4504,])
output2 = relay.Tuple([bop_4488,call_4505,const_4504,])
func_4507 = relay.Function([var_4486,], output)
mod['func_4507'] = func_4507
mod = relay.transform.InferType()(mod)
var_4508 = relay.var("var_4508", dtype = "int16", shape = (7, 12, 4))#candidate|4508|(7, 12, 4)|var|int16
output = func_4507(var_4508)
func_4509 = relay.Function([var_4508], output)
mutated_mod['func_4509'] = func_4509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3280_call = mod.get_global_var('func_3280')
func_3281_call = mutated_mod.get_global_var('func_3281')
call_4511 = func_3280_call()
call_4512 = func_3280_call()
output = call_4511
output2 = call_4512
func_4514 = relay.Function([], output)
mod['func_4514'] = func_4514
mod = relay.transform.InferType()(mod)
mutated_mod['func_4514'] = func_4514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4514_call = mutated_mod.get_global_var('func_4514')
call_4515 = func_4514_call()
output = call_4515
func_4516 = relay.Function([], output)
mutated_mod['func_4516'] = func_4516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2546_call = mod.get_global_var('func_2546')
func_2547_call = mutated_mod.get_global_var('func_2547')
call_4526 = func_2546_call()
call_4527 = func_2546_call()
func_2581_call = mod.get_global_var('func_2581')
func_2583_call = mutated_mod.get_global_var('func_2583')
call_4530 = relay.TupleGetItem(func_2581_call(), 0)
call_4531 = relay.TupleGetItem(func_2583_call(), 0)
func_58_call = mod.get_global_var('func_58')
func_61_call = mutated_mod.get_global_var('func_61')
const_4542 = relay.const([[3,-1,6,-1,4,7,-2,-1,-2,7,-7,-5,1,-2,7,5,4,7,5,6,-7,-9,1,-4,-8,-6,-1,8,6,5,9,-3,7,-2,-10,-2,-1,-6,2,-5,2,-9,-2,-6,-8,2,-4,10,-5,-2,9,1,-6,4,6,10,1,-2,-6,-3,-1,2,10,-7,-4,-9,4,3,-5,-9,8,-1,-1,-4,-3,-3,-2,10,-7,-6,-7,-4,-2,-2,-5,2,-2,-2,7,-2,-5,-7,-10,-8,3,7,-8,10,9,-1,-4,-8,5,1,-8,-4,-8,9,-7,6,-2,1,-6,-9,2,-1,-2,-3,1,-9,-7,-3,4,-4,10,1,2,1,3,-3,10,1,3,1,10,-4,-2,3,-10,7,4,1,7,4,-1,-5,10,-5,2,8,5,-10,-10,5,1,-7],[7,10,7,-4,-10,-9,6,3,9,1,-3,1,5,1,-5,10,-6,7,-4,-4,-3,5,7,7,-7,-10,-1,-6,-6,-4,-7,6,-9,-9,-6,-7,5,8,10,-8,6,-9,-8,7,2,-6,10,-4,-4,1,-5,-1,-2,2,6,1,9,-1,5,-2,3,-9,1,1,-4,7,1,-10,7,-7,4,-7,5,10,7,-10,2,-3,-1,-8,7,6,3,2,-10,3,4,4,7,3,8,4,3,10,-2,-2,-4,-8,8,5,9,-9,9,6,9,-1,5,6,-5,-5,-7,-9,-9,5,6,-3,-1,2,8,-5,-9,4,4,-5,8,-9,9,5,-4,3,-2,7,-9,-1,-10,3,-7,-5,-9,-3,10,-2,-9,-5,7,2,-4,-1,1,9,-2,-1,9,1,8,-7],[-5,7,7,-6,-10,4,-9,-7,10,-2,-8,1,-10,-7,6,7,2,5,6,6,2,-9,6,3,-4,8,9,9,-4,10,-8,-1,-8,2,10,9,-7,-2,8,10,-2,2,-10,3,-7,3,-9,-10,5,-3,9,4,4,-2,1,2,10,7,5,3,-4,-9,-3,1,10,-2,10,8,1,-6,-10,8,-4,-10,-4,1,9,10,-9,-1,-7,-8,6,10,-4,2,5,-5,-4,8,-8,-3,-10,-1,3,6,5,-6,-9,-10,1,10,1,-4,2,2,-2,-9,7,-9,-3,2,-10,1,-3,4,-5,3,-2,3,-1,-6,-10,-3,-6,-9,9,9,10,-1,-10,-10,-1,-3,9,7,-8,3,7,-7,10,3,9,-9,3,3,-6,8,-7,-10,-4,-8,-9,2,-9,-10],[5,8,-9,-3,8,-4,3,2,5,-6,-7,3,5,4,4,-3,-1,-3,2,1,-5,4,8,-6,6,-2,-8,2,2,-9,2,-5,5,-5,5,-6,-2,-8,6,3,-8,8,-4,1,-8,10,4,-5,5,-7,6,1,-6,8,5,-6,8,10,6,-8,4,4,-5,-1,9,-1,1,-2,-2,-1,-2,9,2,-4,3,-3,-1,-8,-8,-7,7,3,-1,-7,5,-10,-4,9,-10,-4,-8,-1,4,7,6,-10,-3,3,7,-7,-5,-9,3,4,-4,6,5,-1,7,-2,4,-8,-2,1,10,-2,-4,-3,-1,-2,-7,-7,6,-1,7,-7,-5,8,-5,-7,-8,1,9,8,-3,5,9,-2,9,9,7,7,-9,9,7,-1,4,6,6,-3,6,-8,-7,1,4,-2]], dtype = "uint16")#candidate|4542|(4, 156)|const|uint16
call_4541 = func_58_call(relay.reshape(const_4542.astype('uint16'), [13, 12, 4]), relay.reshape(const_4542.astype('uint16'), [13, 12, 4]), )
call_4543 = func_58_call(relay.reshape(const_4542.astype('uint16'), [13, 12, 4]), relay.reshape(const_4542.astype('uint16'), [13, 12, 4]), )
func_3345_call = mod.get_global_var('func_3345')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_4547 = relay.TupleGetItem(func_3345_call(), 1)
call_4548 = relay.TupleGetItem(func_3346_call(), 1)
output = relay.Tuple([call_4526,call_4530,call_4541,const_4542,call_4547,])
output2 = relay.Tuple([call_4527,call_4531,call_4543,const_4542,call_4548,])
func_4549 = relay.Function([], output)
mod['func_4549'] = func_4549
mod = relay.transform.InferType()(mod)
mutated_mod['func_4549'] = func_4549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4549_call = mutated_mod.get_global_var('func_4549')
call_4550 = func_4549_call()
output = call_4550
func_4551 = relay.Function([], output)
mutated_mod['func_4551'] = func_4551
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4564 = relay.const([[[0.558120,-6.145086,1.015337,-1.187469,-5.729336,-6.686679,-7.283618],[-6.194970,9.379813,5.780422,2.075582,-0.333016,7.946149,6.642384],[-9.954328,0.478033,3.685250,6.775414,-9.159779,-1.603588,-8.068373],[-2.686181,-1.842015,-1.309644,5.923632,3.955316,6.533271,-1.346180],[4.706563,6.079741,7.322756,0.037872,-9.649594,8.165199,-0.217339],[-7.683985,-5.082798,4.361117,4.891177,5.713849,7.960842,1.296978],[-9.533959,0.731831,3.975127,3.683764,-1.603771,-4.879293,0.425266],[0.113430,5.265617,2.191326,-8.393065,-9.730239,-2.982157,-4.614846],[2.955071,-8.142357,-3.991692,9.185061,-7.158692,-4.653994,1.987311],[-3.061836,-2.394706,-8.878337,0.798331,5.273342,-9.447825,4.746831]],[[1.262899,-6.310137,-0.005746,4.227976,8.929767,-6.619488,8.326224],[-8.941665,5.920765,-5.454539,-3.711019,1.942256,-5.223721,6.023056],[2.373682,5.763588,9.038179,5.794999,-5.180415,-2.174643,3.168916],[6.323468,3.034899,4.556685,-2.675153,-1.771845,-9.165266,-1.329810],[-3.086119,9.132800,2.961150,3.402107,-3.893086,-4.974952,0.316423],[-6.445510,7.403792,4.726956,6.084645,-9.607364,-3.516226,-0.573090],[-3.959597,1.981503,1.263581,-7.425806,3.472211,6.958161,-3.096541],[-1.726716,-9.327376,-1.119788,1.105612,-8.310235,-6.225807,-2.527401],[4.502282,9.767353,-2.716131,-3.779742,4.024583,-3.531794,-6.649945],[2.059689,2.811009,-6.535712,-3.300518,9.240305,7.162281,4.869979]],[[-7.761106,-0.393400,-1.962723,-4.783691,1.821646,-7.187515,2.831846],[7.661650,-2.620105,7.506526,8.849515,7.900655,-2.389602,0.614007],[-4.228598,-3.773932,-4.852893,-9.523653,-4.451647,6.082995,-3.207416],[2.749119,-4.785733,2.502746,1.895037,-4.239780,5.770682,-6.412936],[1.934381,3.656322,-8.467907,-9.045367,-9.080391,-1.232113,2.729879],[-4.288632,8.949403,-6.549178,9.510190,1.277479,-5.090112,2.673882],[5.859581,2.240949,7.404777,3.814471,-1.864037,-7.538617,-7.070078],[-1.348992,4.775661,3.623463,-5.729409,-4.517643,-5.619279,-6.117270],[-0.616139,-4.004189,8.874079,-2.100678,-7.364967,8.550548,2.488273],[7.683594,-5.964432,-2.450630,9.415502,-4.986223,1.246462,9.476188]],[[-3.758243,-7.011989,6.003631,0.373871,-8.597720,9.213113,9.332439],[-3.416671,-2.143666,-2.001866,7.056587,-8.577163,7.795457,-5.259054],[-7.372155,-9.013637,9.839644,9.604796,1.377585,1.474896,-9.319211],[-0.517408,7.469321,-8.948418,-2.963416,-7.630322,3.227263,-7.571270],[-5.673751,7.864587,-3.878171,5.622572,-8.680130,-6.875693,4.264343],[-8.733200,-7.222854,9.311144,6.856332,-1.957621,8.141858,4.695961],[5.877175,4.795182,-7.420387,-5.343317,-8.805567,-6.847879,-9.895225],[-9.595910,-5.073866,4.422661,8.073439,2.910881,5.970729,-7.248523],[-2.188189,7.180602,-0.109677,6.266706,-8.711843,1.162528,-3.266547],[7.905786,3.975609,-0.841672,-3.758817,-7.019205,3.232338,-1.627709]],[[0.898113,7.668926,-2.329808,-7.197715,8.768930,2.983506,5.208403],[-5.372968,-8.817345,7.083481,6.520180,-5.077928,9.187773,2.840183],[-0.275854,3.890191,-7.365982,3.827649,-4.852404,6.865450,-3.800731],[1.743467,-0.446579,4.802816,5.329929,-3.365318,-6.377913,7.189238],[7.829674,-8.066549,-6.731745,-2.694005,-1.854678,-8.791724,6.512935],[-7.650095,-4.590572,2.429324,5.912338,-5.782591,3.154553,3.674818],[8.518669,-2.516869,8.524707,-4.199753,-8.658241,9.238318,-7.811567],[4.795876,7.494134,4.624354,2.501530,-0.792655,6.497066,-3.975183],[7.382164,9.759177,-0.981560,-9.141632,-2.938331,7.819437,0.863741],[-8.429714,-5.823361,9.876581,6.256129,-5.499550,7.703782,-4.433414]],[[6.313560,-7.301754,-9.987718,0.215350,3.300850,6.398458,-3.744739],[-1.572401,5.042447,4.179466,6.717678,5.944614,-3.769980,1.925364],[3.788621,-3.356891,-6.232931,9.891551,-6.797089,8.664019,-9.081832],[-7.104672,-7.261813,-7.190574,9.086823,7.057934,-8.335203,5.915187],[-6.787100,4.944089,-7.051616,-8.390047,-4.003209,-0.569518,-8.262937],[-7.036984,-6.315844,3.328726,6.635479,-3.014829,-5.206167,1.329447],[-8.537610,1.819223,-7.951196,-9.749895,-2.074993,2.018154,7.629914],[-7.432529,-8.572477,-4.369129,1.303092,0.520554,-7.769770,1.533621],[7.553509,5.510967,3.732931,5.353151,2.828123,5.598804,-7.324380],[-5.359997,-3.706251,-1.016896,6.527099,0.752690,-7.810043,-7.302398]],[[-6.283653,4.520203,-3.927006,1.348953,6.477814,1.998796,6.176617],[4.287637,-7.842412,2.475474,-1.577385,6.103943,-8.952853,-0.154984],[8.122231,7.300766,-7.509827,6.310145,-8.796990,-4.091420,7.716627],[-2.738686,-7.128633,0.639356,-8.039892,5.008378,-6.844235,-3.411213],[1.622075,7.236832,4.310415,-2.357739,-9.177372,0.700770,6.251629],[-1.227382,9.249514,6.567930,-9.027880,-8.677872,2.023444,7.906855],[-5.384272,-8.168914,-0.166869,-6.899685,1.206455,1.975198,3.749677],[-9.599588,9.479640,7.172586,8.614483,-8.330267,2.816876,-4.397754],[9.282367,-2.255221,-3.744939,2.628708,6.909084,-5.015244,2.805137],[-2.130898,-7.983065,0.431257,8.012305,6.199072,9.856667,3.946070]],[[-3.624166,5.228937,9.377122,-2.855261,-7.826453,5.263553,3.117398],[-0.780287,9.114284,3.476112,6.045159,3.731841,-9.826941,-9.967457],[4.909565,-1.365520,6.332936,7.269621,-9.999899,-5.129566,5.583329],[-9.561303,-1.335396,9.700579,1.686846,1.250439,9.077828,1.007545],[2.121042,6.385608,7.835281,1.920684,1.487114,-5.576105,-2.427464],[7.704133,-8.654973,-6.527050,-1.448871,-4.547757,6.743508,3.136839],[3.619010,-3.672714,-9.757317,7.193613,2.393690,-1.816754,8.239441],[-9.687464,-9.481221,6.774526,9.723279,1.022715,-3.216071,8.847467],[2.948419,-3.208966,-6.094955,-2.593500,1.898199,-8.661716,-5.729471],[9.075434,5.737099,1.738451,5.694369,-4.955934,-5.700634,5.994635]],[[-8.773363,-0.464719,9.624232,-9.101789,5.817681,-8.968753,-6.013273],[-4.708931,3.910158,-9.483704,3.025085,-9.443283,-8.451993,-4.465400],[-3.176293,3.615741,-3.444654,6.243618,8.440129,8.085254,-6.294128],[5.621482,9.049510,8.114708,9.630561,5.703976,5.779842,-9.947681],[5.353360,-6.514672,-9.685058,-9.331653,-7.788878,-0.618997,2.857882],[-0.927064,6.037785,-8.051975,2.776904,1.997421,8.242141,-0.909387],[1.580893,-7.305677,5.502059,-7.034895,1.760117,-3.209507,-7.321663],[5.453789,8.670332,4.588607,6.752074,8.085124,2.082775,3.811725],[0.826167,1.871647,-5.228957,5.206624,7.707592,8.840452,-7.815072],[-4.637968,-3.715162,-2.542132,0.240621,-5.834293,7.768644,-0.647305]],[[4.014249,4.377992,5.040972,0.411846,0.666838,6.012444,-5.988003],[0.695891,-3.483180,-0.739813,4.100963,-0.389051,-8.176506,5.892612],[-3.109239,8.826385,0.839175,3.021769,1.641154,7.003688,8.200197],[3.831915,8.227452,1.283407,-4.283704,4.318869,-0.974835,3.522264],[-9.992250,7.944148,-4.277273,-0.158525,4.027736,-3.272041,-3.847064],[4.760871,-2.301932,-6.504779,3.566031,8.000252,4.421933,3.161882],[9.818856,-5.568391,0.567131,-2.205332,-3.526192,-5.747735,-3.417373],[3.431828,-8.009097,3.120996,0.115401,-3.466841,9.107874,7.848849],[-8.002983,-1.371443,1.409937,-3.348705,-8.690828,-2.832884,6.879077],[7.574160,6.521908,6.082939,7.950211,-2.065705,-8.143252,-1.269373]],[[-7.438272,-1.618587,-3.981447,-5.184390,0.847893,0.331192,-0.105863],[6.280958,-4.478245,2.226607,3.891227,3.219171,8.031183,9.483500],[-2.957998,0.152797,2.223214,-0.641307,7.594513,4.947563,7.781674],[-3.919041,-1.800616,3.712391,-0.339038,-9.670413,6.325490,9.242173],[0.400784,-0.770213,-6.831964,6.279086,0.852205,6.909973,-9.961588],[-4.729029,2.236052,3.058457,-2.281938,-9.623345,-1.443945,-2.131733],[-7.951051,-5.870115,-3.388599,-3.898109,1.077068,4.043695,8.568560],[7.047946,1.617930,6.765875,-9.499263,2.463983,6.986756,-1.947336],[-3.429957,-5.586579,-3.766587,3.888270,5.632419,1.568678,2.692179],[-8.702458,1.411470,-6.308976,8.043381,-9.024730,6.896432,-8.985247]],[[8.737428,-1.521224,5.366310,9.890028,5.405624,-5.417858,-6.227361],[9.755203,-3.217476,-7.699403,2.085412,7.577031,-9.919914,2.769886],[8.378371,-9.298386,-3.960094,-3.249550,8.497835,4.239973,-5.314200],[-4.777364,5.098539,-8.340092,6.454881,5.403535,-0.016238,5.076486],[-4.126520,-3.793635,-9.696194,9.903188,0.938437,-1.161174,9.637631],[1.449735,3.618735,-2.033777,-4.757024,1.531281,8.227503,-6.137691],[5.110864,-7.033825,-7.073260,8.778627,8.139445,0.316466,-1.305138],[-1.807476,8.977362,-3.476135,1.949339,7.178937,3.882109,3.006287],[-0.143927,-4.608821,2.622724,2.523191,9.970019,-2.271895,0.107765],[4.341349,0.080990,6.010986,-3.628661,1.110451,-2.130157,0.902932]],[[7.010809,-5.137578,-7.641721,1.787267,2.783615,-1.490634,8.354285],[-9.735484,-0.045999,4.044598,2.415921,5.103363,-1.419496,3.690213],[2.724180,-6.974319,1.896772,-4.215396,-7.695571,5.651730,1.312994],[-9.728578,-1.490002,4.999671,2.264754,-9.833910,-2.176421,-8.337557],[-7.661049,1.452278,-2.082762,5.846266,2.225992,6.420080,9.577735],[8.676838,-3.173476,-3.453044,-3.796606,-5.433858,-8.149103,-2.051756],[-3.580748,7.234603,-5.729514,-2.620678,-1.482890,-9.286487,-9.560401],[4.169797,-3.562464,-7.540569,7.544328,2.418561,-0.589536,8.423102],[-0.094586,7.256465,-7.276025,-8.193419,-8.112946,5.611036,-2.108538],[-4.521684,1.526924,-6.950312,-1.538738,4.325179,3.980542,-4.500555]],[[-1.268953,-5.651311,3.427104,3.351018,-2.619163,1.165483,-8.946420],[-2.447506,-8.230575,0.015713,-4.253111,-4.875774,-3.676666,-3.497353],[-3.904538,-0.332432,-2.200397,-5.163728,-2.967277,8.898155,1.243812],[3.168072,4.190338,-7.247124,-3.303296,-8.559683,1.406114,-4.544146],[-0.687873,-3.004756,3.629589,7.011666,8.201060,7.092143,7.612202],[8.236761,5.290202,-4.134068,-0.376368,4.903768,6.830596,8.466743],[-2.648952,-5.331975,3.760632,5.432270,7.269832,-1.983868,-5.469227],[3.971826,1.973075,-7.879166,6.380311,1.562635,3.822421,3.588265],[-6.393290,-1.647482,-0.530125,3.723746,3.871600,-1.546669,9.650296],[9.511815,-9.639142,7.274643,0.560446,4.228973,5.169228,-0.020924]]], dtype = "float32")#candidate|4564|(14, 10, 7)|const|float32
uop_4565 = relay.cos(const_4564.astype('float32')) # shape=(14, 10, 7)
const_4571 = relay.const([[[-0.746528,-0.209754,6.598695,-9.023654,0.586305,1.954183,-7.323599],[5.939984,-6.205291,1.560113,4.089607,3.860707,3.964524,1.426198],[-2.445926,0.578399,-5.707240,6.533944,-7.416196,-0.819300,-6.216618],[-0.887758,-5.522727,-0.861160,-2.442487,-0.575424,-9.602957,-7.904898],[-6.505570,-0.664420,-2.735608,4.448927,0.786201,-7.613696,-2.403068],[-0.913103,-0.420304,1.412975,-0.937990,9.082987,-8.130439,3.460731],[-8.703503,-0.416278,0.541879,2.807980,8.322583,-2.714835,2.134620],[-1.015237,-1.316417,-2.332782,5.767722,5.646817,6.584268,-5.475126],[-4.915141,-0.400711,-8.344720,1.047724,-8.570648,3.872320,-3.465177],[-4.937831,2.704982,7.662731,5.430900,-2.927636,-9.873812,9.942746]],[[3.683477,3.200954,5.394054,-7.247403,-5.473922,6.578511,-6.448643],[-8.943802,-4.189066,1.297646,2.329996,7.504529,-0.064989,-8.089337],[9.631810,4.276597,3.568621,-8.125430,-4.945955,-2.359407,5.385014],[5.734876,4.759973,-5.089489,1.821420,1.729575,-1.263996,9.111937],[-4.972610,6.899685,5.150388,-4.378980,9.696807,7.240552,0.657068],[9.293600,6.569052,9.431903,-0.540048,3.515569,2.883568,1.090366],[1.191675,-1.930085,-1.295192,-0.929465,-9.740308,-8.385840,3.615217],[-9.632123,-4.379519,4.441786,-9.708611,-9.940885,-5.347563,-2.033282],[-8.166623,-5.897390,0.377378,0.408031,-4.165158,2.529680,7.473355],[5.746837,-7.343005,4.275976,3.678444,-7.829985,2.784877,-8.971010]],[[-0.596303,4.059468,-0.853123,2.644004,0.085099,3.783834,-4.439629],[-1.411713,7.726171,-4.098901,8.650534,-7.835405,4.520356,8.655592],[1.863341,-3.639625,-2.714366,-2.301038,6.666879,-8.265223,-6.525221],[8.658660,6.160699,-8.492570,3.945283,-3.269750,1.995345,1.769216],[2.478641,7.596244,-1.808969,5.899006,-8.667872,-3.418361,5.828439],[-7.644275,-7.406531,-7.487957,3.763663,-9.508377,1.943947,-7.774615],[3.039594,1.897014,-0.809968,2.717965,1.329345,5.945536,-5.988800],[4.276953,8.488795,-7.345108,2.071318,3.469948,5.712439,8.334555],[-0.607471,0.441804,1.158779,-1.736833,-8.506370,4.117188,-2.642939],[8.809294,-4.108671,-7.017039,-1.625020,3.695967,1.783942,-7.695641]],[[9.929105,-4.190742,0.986226,8.059042,-6.074654,-7.642917,-8.909360],[-3.522763,8.359746,8.703781,7.756744,3.253345,-3.717659,7.491850],[9.937539,3.227163,-1.319688,-7.302814,6.705465,-1.178698,9.192096],[-5.222076,-0.104603,7.063319,-1.744310,1.475932,-8.600061,5.493197],[-9.991998,9.495724,6.413241,-1.181286,-9.384049,5.118500,-2.018357],[6.710347,9.306582,0.637551,3.814445,7.589071,-2.136941,3.606777],[8.090265,1.621423,2.644243,6.489177,2.970456,-7.654808,-7.802913],[-6.017256,-1.312401,-2.896328,1.824231,9.978939,-9.138616,5.826685],[-4.708434,-0.720966,6.564804,9.385702,-2.929017,2.214511,-0.318815],[8.132285,-8.830694,1.200185,3.907220,-4.940883,-6.017579,6.467118]],[[-6.073233,5.658183,7.345397,-2.049715,0.749039,-6.320519,-2.516719],[-8.660625,8.095664,8.418395,7.714260,-2.202711,-6.625117,9.402953],[7.590005,-9.617436,5.147622,-7.193078,6.573865,-0.523367,-3.792463],[-4.448689,-1.105025,1.111356,-8.640571,8.620714,0.777772,-8.722139],[-0.997892,-1.090851,1.112667,4.860787,-2.523374,9.484655,-4.516432],[3.408690,-8.639760,6.544963,-0.903912,5.331362,6.649709,-1.864989],[-3.949187,7.943079,-2.370309,-6.660888,-4.889199,5.076388,4.574166],[-9.153240,-0.650648,-6.953491,4.699032,4.013854,-2.602438,-9.282406],[-5.546386,7.831430,9.323242,1.180047,-5.495121,8.489662,-1.481133],[-1.254729,-0.863760,9.510477,-1.371961,8.595003,-1.958574,7.336537]],[[8.274807,-3.925629,-4.677464,1.379240,-7.518942,5.828528,-3.036264],[9.485652,8.303860,1.704752,-7.106983,-0.645817,-2.294126,-3.562944],[7.000623,-8.786153,5.413024,-1.655904,-6.786219,-2.840538,-4.569622],[7.348725,-9.129078,8.866550,-5.372087,7.469530,-4.795767,2.367193],[-6.627408,9.310317,4.002914,-8.445955,-1.212224,-4.987122,-3.043973],[-2.255901,8.589284,-5.461516,-5.111920,8.034996,-8.351470,-9.608695],[4.205841,0.355947,4.219164,0.518166,-7.428258,-4.555700,-2.584997],[2.161914,5.601168,1.421763,-5.200400,-9.173271,-5.885784,7.384640],[2.829556,4.305278,-2.526374,-4.216195,7.170662,-4.126558,0.351677],[-0.831383,-0.216509,5.025386,8.336403,-8.127240,-2.962632,4.749334]],[[-3.224323,1.752460,-5.693894,-7.639608,9.580945,-3.190474,-2.825545],[3.520237,7.370665,6.994431,9.618662,9.809046,-6.759400,-3.555873],[6.886954,2.579024,3.891112,9.147517,4.141723,-2.451704,-3.529153],[4.568176,0.517368,-1.505670,-7.917231,-4.382500,-9.460947,2.113966],[7.292668,7.688295,0.964179,2.483345,8.289142,-1.929831,-0.477097],[-8.297592,5.101251,-9.022657,-1.586292,-6.255108,-3.865276,-9.786191],[-6.740940,4.688980,-9.668492,-2.801146,6.687952,-1.195485,-8.848689],[0.591267,1.681553,6.696497,3.499138,3.895059,7.821731,6.253093],[7.454555,-7.269713,3.366661,2.049154,3.568672,2.755658,7.419817],[0.631902,-1.776246,6.205729,-8.199339,-8.344346,-0.819177,0.938081]],[[3.726261,8.555826,0.455308,0.884467,-1.863141,-0.140970,-9.852866],[-6.111051,2.563597,-5.291331,8.912295,6.492289,-4.443605,9.609027],[8.754439,-6.593238,2.991265,2.964265,-3.559863,7.897741,-8.104192],[-3.151085,6.225547,-4.978960,-2.360560,-0.193613,-6.451752,-7.335541],[-2.560389,4.415193,-3.926799,-8.328874,-0.061521,-1.051278,-0.666514],[8.219673,2.345780,-2.638530,-7.511052,1.939464,9.875387,-2.264024],[1.183246,-1.934938,5.110614,-2.187121,-9.919988,2.689929,-7.152683],[8.985560,-4.682233,4.229283,-2.765438,-2.751916,6.679244,2.189280],[-5.846592,-0.904654,-7.491950,4.809765,6.974544,-6.271966,-9.922738],[-9.326317,0.960681,-9.494884,-5.228025,-0.449072,6.266829,0.572054]],[[-6.830153,7.956782,1.266889,9.479556,-0.884772,2.566125,-2.558870],[7.618265,2.860420,5.880884,2.902741,-4.760654,-4.109011,-9.980436],[-9.172583,-0.233709,2.514026,4.774032,6.216945,-9.894705,1.550129],[8.743144,6.329186,-2.531554,-9.154428,-0.295894,0.047032,7.136260],[0.253133,2.532710,-8.570825,-7.763460,8.412687,-2.106495,-6.373134],[9.369361,-2.462374,1.032425,9.134547,-5.540094,-8.917421,-4.987989],[-5.917196,6.811357,8.594486,0.060620,-5.224654,8.448931,8.435241],[-8.755658,7.918093,0.798209,7.002062,7.683962,-9.956965,-6.739909],[-8.381808,9.781805,0.510363,-2.305084,1.428884,-1.507075,-5.337607],[-6.131863,0.091598,0.978960,-0.624845,-7.234405,-3.639025,-7.094467]],[[5.297133,9.324064,2.410720,-0.467744,1.906976,-7.787037,-7.342807],[-9.287101,-1.774456,-2.109351,2.904375,-6.434087,-5.031329,5.205965],[8.949370,-6.589698,3.005119,-0.018676,-8.658145,8.002895,-0.408015],[-4.329058,-9.039983,2.517312,0.107100,-7.225635,7.523751,-5.751503],[8.786262,-2.887376,-6.430174,9.631508,-7.811040,-4.893257,0.771020],[-5.909579,5.192249,-7.721053,4.501123,4.340986,-6.719402,-4.964901],[-7.991737,3.436518,-7.064986,-0.797370,-5.035405,-6.845389,-6.054779],[4.711672,-5.903084,5.069511,2.667892,1.916949,3.060862,1.747673],[-1.096452,1.496234,0.713406,-8.218881,3.598327,-1.671014,1.444612],[-8.849190,7.503948,5.448172,-5.439462,-0.084330,-0.245410,-5.193473]],[[-1.998435,9.268314,9.268610,9.363602,-0.506475,0.868113,3.753889],[9.681891,-5.436864,-9.181618,-3.800358,-2.863673,-8.337188,-3.953865],[-3.693422,-8.320904,-8.262604,-9.189590,-5.889108,-1.929405,4.433775],[-1.824576,9.202716,7.066531,-2.310382,-5.152614,9.800780,5.162455],[6.271435,8.263224,-7.869554,-0.357912,2.750924,1.921189,-9.160350],[-2.391536,9.026270,-0.553301,4.637835,-7.113208,9.480167,-5.992294],[5.035849,-3.807677,4.247578,1.104939,8.137333,-5.987936,-6.067590],[8.111804,-6.093402,-8.583129,-4.177328,-8.365648,9.910351,7.962396],[9.776473,0.135129,1.841575,5.803530,4.664395,9.477275,-9.377970],[-8.984997,3.134490,-5.988483,5.666351,4.555481,9.756705,9.625561]],[[-3.762690,-9.520399,-6.116984,4.269812,3.559753,-2.074710,8.400160],[-6.245016,-8.396543,-0.089203,-6.064086,7.143129,1.929723,6.049688],[-5.820250,4.619119,-6.576764,9.239117,-7.336058,-1.624994,3.431017],[-4.641148,-7.176978,5.808502,9.225211,-7.233476,-0.414706,-0.673789],[-6.999552,-5.309575,-9.091719,-5.143335,5.912903,-0.605963,-2.717343],[-7.875213,8.828530,-1.404573,2.188555,-4.740942,0.058958,-5.662382],[-3.289312,0.292057,-2.203763,-8.604038,-1.428075,2.910205,-7.345420],[3.652340,2.689263,-4.794466,-5.304240,-5.637156,-9.721839,3.005685],[-6.486038,3.962549,-4.634753,8.948731,6.000646,8.166665,-1.893146],[4.864371,-3.130545,0.885437,-6.413539,3.510189,-0.771453,-4.107567]],[[-4.969577,-6.235925,1.740313,-5.719991,4.014341,8.929498,4.475095],[-1.029609,3.391489,-3.421007,-3.308024,6.640099,4.070748,0.320438],[5.654425,8.346791,0.562386,-2.278933,8.260229,-1.197439,-3.733708],[0.759364,1.309685,-1.050195,-2.367302,-0.168322,-5.750432,5.372404],[-7.551300,-7.693544,6.711906,-8.067652,6.947194,2.072493,1.516213],[8.906223,0.346633,5.305218,-0.463878,-1.044182,-8.029919,2.130971],[-6.681403,-3.091051,-6.499432,-9.794480,-3.719979,-4.122889,4.406523],[8.704549,-3.071891,4.547227,5.298861,-1.524469,-9.290509,-3.381270],[7.087829,6.755011,8.741638,4.235472,-1.020623,9.229849,-1.476116],[5.997141,1.944588,-2.961850,3.357495,-1.035445,-7.951982,2.942802]],[[2.559782,3.276915,9.291123,-2.382338,-2.148544,-5.622670,-5.236121],[-6.427018,-6.974767,-2.014324,-4.542971,3.396487,-4.935792,-0.474722],[-6.564430,5.443193,-6.956933,-6.648846,-6.763131,-7.341847,-7.955479],[9.583539,-1.350812,4.375228,0.707421,-4.606614,-7.999736,-0.819113],[7.759534,6.219728,-4.445153,7.811751,2.711645,-0.800712,6.232704],[5.574645,-4.680583,-6.745228,-8.973362,8.070177,4.276525,6.714507],[7.005417,1.778238,-9.860569,-4.087585,7.381433,1.588048,9.005539],[-9.318777,-9.127435,6.487142,7.204622,3.566891,2.891025,0.326516],[5.512375,5.009287,-7.063388,1.840895,3.792333,5.133633,-6.808090],[-9.194929,3.924097,-6.497904,-0.092258,-5.590485,8.203858,7.808708]]], dtype = "float32")#candidate|4571|(14, 10, 7)|const|float32
bop_4572 = relay.right_shift(uop_4565.astype('int16'), relay.reshape(const_4571.astype('int16'), relay.shape_of(uop_4565))) # shape=(14, 10, 7)
bop_4584 = relay.maximum(const_4564.astype('float32'), relay.reshape(bop_4572.astype('float32'), relay.shape_of(const_4564))) # shape=(14, 10, 7)
output = relay.Tuple([bop_4584,])
output2 = relay.Tuple([bop_4584,])
func_4587 = relay.Function([], output)
mod['func_4587'] = func_4587
mod = relay.transform.InferType()(mod)
mutated_mod['func_4587'] = func_4587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4587_call = mutated_mod.get_global_var('func_4587')
call_4588 = func_4587_call()
output = call_4588
func_4589 = relay.Function([], output)
mutated_mod['func_4589'] = func_4589
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4636 = relay.const(-5.375062, dtype = "float64")#candidate|4636|()|const|float64
const_4637 = relay.constdtype = "float64")#candidate|4637|(14, 10, 14)|const|float64
bop_4638 = relay.maximum(const_4636.astype('float64'), const_4637.astype('float64')) # shape=(14, 10, 14)
uop_4644 = relay.asin(const_4637.astype('float64')) # shape=(14, 10, 14)
func_4471_call = mod.get_global_var('func_4471')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_4662 = relay.TupleGetItem(func_4471_call(), 0)
call_4663 = relay.TupleGetItem(func_4473_call(), 0)
output = relay.Tuple([bop_4638,uop_4644,call_4662,])
output2 = relay.Tuple([bop_4638,uop_4644,call_4663,])
func_4671 = relay.Function([], output)
mod['func_4671'] = func_4671
mod = relay.transform.InferType()(mod)
output = func_4671()
func_4672 = relay.Function([], output)
mutated_mod['func_4672'] = func_4672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2985_call = mod.get_global_var('func_2985')
func_2987_call = mutated_mod.get_global_var('func_2987')
call_4682 = relay.TupleGetItem(func_2985_call(), 0)
call_4683 = relay.TupleGetItem(func_2987_call(), 0)
output = relay.Tuple([call_4682,])
output2 = relay.Tuple([call_4683,])
func_4695 = relay.Function([], output)
mod['func_4695'] = func_4695
mod = relay.transform.InferType()(mod)
mutated_mod['func_4695'] = func_4695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4695_call = mutated_mod.get_global_var('func_4695')
call_4696 = func_4695_call()
output = call_4696
func_4697 = relay.Function([], output)
mutated_mod['func_4697'] = func_4697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4711 = relay.var("var_4711", dtype = "float64", shape = (6, 6, 15))#candidate|4711|(6, 6, 15)|var|float64
var_4712 = relay.var("var_4712", dtype = "float64", shape = (6, 6, 15))#candidate|4712|(6, 6, 15)|var|float64
bop_4713 = relay.floor_divide(var_4711.astype('float64'), relay.reshape(var_4712.astype('float64'), relay.shape_of(var_4711))) # shape=(6, 6, 15)
bop_4716 = relay.bitwise_or(bop_4713.astype('uint8'), relay.reshape(var_4712.astype('uint8'), relay.shape_of(bop_4713))) # shape=(6, 6, 15)
func_4424_call = mod.get_global_var('func_4424')
func_4426_call = mutated_mod.get_global_var('func_4426')
call_4722 = relay.TupleGetItem(func_4424_call(), 0)
call_4723 = relay.TupleGetItem(func_4426_call(), 0)
uop_4724 = relay.asin(var_4711.astype('float64')) # shape=(6, 6, 15)
bop_4733 = relay.minimum(bop_4716.astype('uint8'), relay.reshape(var_4711.astype('uint8'), relay.shape_of(bop_4716))) # shape=(6, 6, 15)
bop_4744 = relay.left_shift(uop_4724.astype('int64'), relay.reshape(bop_4733.astype('int64'), relay.shape_of(uop_4724))) # shape=(6, 6, 15)
bop_4757 = relay.floor_mod(bop_4744.astype('float32'), relay.reshape(var_4712.astype('float32'), relay.shape_of(bop_4744))) # shape=(6, 6, 15)
bop_4766 = relay.greater_equal(uop_4724.astype('bool'), relay.reshape(bop_4733.astype('bool'), relay.shape_of(uop_4724))) # shape=(6, 6, 15)
bop_4778 = relay.add(bop_4713.astype('uint16'), relay.reshape(bop_4757.astype('uint16'), relay.shape_of(bop_4713))) # shape=(6, 6, 15)
output = relay.Tuple([call_4722,bop_4766,bop_4778,])
output2 = relay.Tuple([call_4723,bop_4766,bop_4778,])
func_4782 = relay.Function([var_4711,var_4712,], output)
mod['func_4782'] = func_4782
mod = relay.transform.InferType()(mod)
mutated_mod['func_4782'] = func_4782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4782_call = mutated_mod.get_global_var('func_4782')
var_4784 = relay.var("var_4784", dtype = "float64", shape = (6, 6, 15))#candidate|4784|(6, 6, 15)|var|float64
var_4785 = relay.var("var_4785", dtype = "float64", shape = (6, 6, 15))#candidate|4785|(6, 6, 15)|var|float64
call_4783 = func_4782_call(var_4784,var_4785,)
output = call_4783
func_4786 = relay.Function([var_4784,var_4785,], output)
mutated_mod['func_4786'] = func_4786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_4791 = func_4514_call()
call_4792 = func_4514_call()
output = call_4791
output2 = call_4792
func_4807 = relay.Function([], output)
mod['func_4807'] = func_4807
mod = relay.transform.InferType()(mod)
output = func_4807()
func_4808 = relay.Function([], output)
mutated_mod['func_4808'] = func_4808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3078_call = mod.get_global_var('func_3078')
func_3079_call = mutated_mod.get_global_var('func_3079')
call_4824 = relay.TupleGetItem(func_3078_call(), 0)
call_4825 = relay.TupleGetItem(func_3079_call(), 0)
output = relay.Tuple([call_4824,])
output2 = relay.Tuple([call_4825,])
func_4828 = relay.Function([], output)
mod['func_4828'] = func_4828
mod = relay.transform.InferType()(mod)
mutated_mod['func_4828'] = func_4828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4828_call = mutated_mod.get_global_var('func_4828')
call_4829 = func_4828_call()
output = call_4829
func_4830 = relay.Function([], output)
mutated_mod['func_4830'] = func_4830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4587_call = mod.get_global_var('func_4587')
func_4589_call = mutated_mod.get_global_var('func_4589')
call_4871 = relay.TupleGetItem(func_4587_call(), 0)
call_4872 = relay.TupleGetItem(func_4589_call(), 0)
uop_4879 = relay.asinh(call_4871.astype('float64')) # shape=(14, 10, 7)
uop_4881 = relay.asinh(call_4872.astype('float64')) # shape=(14, 10, 7)
bop_4884 = relay.less(uop_4879.astype('bool'), relay.reshape(call_4871.astype('bool'), relay.shape_of(uop_4879))) # shape=(14, 10, 7)
bop_4887 = relay.less(uop_4881.astype('bool'), relay.reshape(call_4872.astype('bool'), relay.shape_of(uop_4881))) # shape=(14, 10, 7)
var_4894 = relay.var("var_4894", dtype = "float64", shape = (14, 10, 7))#candidate|4894|(14, 10, 7)|var|float64
bop_4895 = relay.logical_or(uop_4879.astype('bool'), relay.reshape(var_4894.astype('bool'), relay.shape_of(uop_4879))) # shape=(14, 10, 7)
bop_4898 = relay.logical_or(uop_4881.astype('bool'), relay.reshape(var_4894.astype('bool'), relay.shape_of(uop_4881))) # shape=(14, 10, 7)
uop_4907 = relay.cosh(bop_4895.astype('float32')) # shape=(14, 10, 7)
uop_4909 = relay.cosh(bop_4898.astype('float32')) # shape=(14, 10, 7)
output = relay.Tuple([bop_4884,uop_4907,])
output2 = relay.Tuple([bop_4887,uop_4909,])
func_4922 = relay.Function([var_4894,], output)
mod['func_4922'] = func_4922
mod = relay.transform.InferType()(mod)
var_4923 = relay.var("var_4923", dtype = "float64", shape = (14, 10, 7))#candidate|4923|(14, 10, 7)|var|float64
output = func_4922(var_4923)
func_4924 = relay.Function([var_4923], output)
mutated_mod['func_4924'] = func_4924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3078_call = mod.get_global_var('func_3078')
func_3079_call = mutated_mod.get_global_var('func_3079')
call_4970 = relay.TupleGetItem(func_3078_call(), 0)
call_4971 = relay.TupleGetItem(func_3079_call(), 0)
output = relay.Tuple([call_4970,])
output2 = relay.Tuple([call_4971,])
func_4979 = relay.Function([], output)
mod['func_4979'] = func_4979
mod = relay.transform.InferType()(mod)
mutated_mod['func_4979'] = func_4979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4979_call = mutated_mod.get_global_var('func_4979')
call_4980 = func_4979_call()
output = call_4980
func_4981 = relay.Function([], output)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2674_call = mod.get_global_var('func_2674')
func_2675_call = mutated_mod.get_global_var('func_2675')
call_4990 = relay.TupleGetItem(func_2674_call(), 0)
call_4991 = relay.TupleGetItem(func_2675_call(), 0)
output = relay.Tuple([call_4990,])
output2 = relay.Tuple([call_4991,])
func_4992 = relay.Function([], output)
mod['func_4992'] = func_4992
mod = relay.transform.InferType()(mod)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4992_call = mutated_mod.get_global_var('func_4992')
call_4993 = func_4992_call()
output = call_4993
func_4994 = relay.Function([], output)
mutated_mod['func_4994'] = func_4994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4997 = relay.var("var_4997", dtype = "int8", shape = (5, 2, 12))#candidate|4997|(5, 2, 12)|var|int8
var_4998 = relay.var("var_4998", dtype = "int8", shape = (5, 2, 12))#candidate|4998|(5, 2, 12)|var|int8
bop_4999 = relay.right_shift(var_4997.astype('int8'), relay.reshape(var_4998.astype('int8'), relay.shape_of(var_4997))) # shape=(5, 2, 12)
uop_5002 = relay.log2(var_4997.astype('float32')) # shape=(5, 2, 12)
output = relay.Tuple([bop_4999,uop_5002,])
output2 = relay.Tuple([bop_4999,uop_5002,])
func_5005 = relay.Function([var_4997,var_4998,], output)
mod['func_5005'] = func_5005
mod = relay.transform.InferType()(mod)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5005_call = mutated_mod.get_global_var('func_5005')
var_5007 = relay.var("var_5007", dtype = "int8", shape = (5, 2, 12))#candidate|5007|(5, 2, 12)|var|int8
var_5008 = relay.var("var_5008", dtype = "int8", shape = (5, 2, 12))#candidate|5008|(5, 2, 12)|var|int8
call_5006 = func_5005_call(var_5007,var_5008,)
output = call_5006
func_5009 = relay.Function([var_5007,var_5008,], output)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5124 = relay.var("var_5124", dtype = "int64", shape = (4, 15, 11))#candidate|5124|(4, 15, 11)|var|int64
const_5125 = relay.const([[[10,-8,6,-5,3,-10,3,7,5,-9,-4],[1,-10,-9,-8,4,-2,-2,-4,-1,9,9],[-3,7,4,2,-10,-6,-5,5,7,1,10],[6,-10,-4,-10,-10,-9,-1,-6,-1,-10,-7],[3,6,1,-9,-3,-8,4,4,5,7,3],[-7,4,5,6,-7,-4,-10,2,-8,4,10],[10,-2,-7,8,-8,9,4,4,-6,10,-5],[4,10,2,2,2,5,-4,2,4,-7,-1],[-9,-1,-7,-4,3,-10,2,7,-6,-5,-4],[5,10,-7,4,-10,-3,7,-3,-2,9,-9],[4,6,-8,4,9,-9,1,-8,4,-8,-10],[-6,-6,-9,-10,7,-8,-7,1,8,1,8],[3,-6,5,-3,9,-8,-10,1,9,6,-10],[-4,4,-10,1,-4,-8,-9,-6,-8,4,9],[6,3,-7,-5,-4,7,-2,3,-9,-8,-9]],[[9,-1,-8,6,-8,9,-10,-4,3,-5,-6],[-1,10,5,-6,7,8,4,-1,-7,-3,-2],[-3,7,4,10,8,-8,3,8,-8,7,-3],[3,-3,4,-7,10,-5,-9,8,-1,-3,7],[-4,5,2,-7,-7,10,1,8,2,-9,3],[-8,-7,9,9,6,-5,-3,-5,3,-3,1],[-6,-1,5,7,-7,-10,3,-2,7,6,-9],[10,-1,5,5,7,5,2,-9,-9,-4,-1],[-2,1,-3,3,8,-7,6,3,9,1,-10],[-3,1,-5,5,-4,-1,6,4,5,3,-8],[-3,8,-3,-6,-3,-1,-3,1,-4,-4,-2],[6,-2,-5,-10,-3,6,-5,-4,1,1,4],[-10,-3,2,9,10,9,6,-6,-8,9,2],[-4,-6,4,1,-1,-2,7,-2,7,2,1],[-1,4,7,5,9,6,8,-3,9,-10,-8]],[[5,3,-1,8,-1,-10,8,8,7,-7,-5],[6,-4,1,5,10,9,-2,8,-2,-8,-6],[10,-4,-5,1,-5,-5,-1,2,-8,-6,8],[7,9,-9,-10,5,-10,8,-9,-5,-7,3],[9,-3,-10,3,-6,-5,8,2,-10,-9,-8],[-8,-5,1,-3,9,10,8,9,-7,2,10],[8,9,2,10,4,-9,1,2,-6,6,2],[-5,7,-8,6,8,-3,-3,4,7,3,10],[9,8,4,-1,-9,-7,-10,3,4,-9,-8],[-2,-8,-4,-6,-5,-6,-10,6,-7,10,9],[-1,-4,-6,2,9,-8,-4,8,-7,-6,-5],[-3,8,5,-4,-7,-7,-1,-8,-6,-8,4],[7,5,6,-6,8,3,9,-3,2,-9,-3],[-1,3,5,-4,-5,-2,6,2,8,-3,-5],[9,-7,-7,10,-9,10,10,5,-6,-8,3]],[[-6,-6,-2,-5,1,-4,-5,-7,3,-5,7],[-10,-1,5,3,-3,-2,5,-8,-2,6,-9],[8,-3,-3,-4,6,-5,8,-6,9,-4,-8],[6,9,7,3,-4,6,-2,8,1,9,8],[-9,2,4,8,3,10,-1,7,6,5,-1],[-3,4,-2,2,-2,-6,9,-10,-4,5,7],[4,2,-7,2,-5,-6,10,1,10,5,10],[6,2,-3,5,-5,-3,-8,5,6,-6,-10],[-2,8,-6,8,6,-4,-5,7,6,-10,10],[-7,10,4,10,2,-5,-4,5,5,-5,2],[-7,-1,-3,-1,-8,8,4,6,6,-7,-10],[1,10,-7,-6,-6,-9,7,-7,5,-7,-5],[-4,6,-7,-10,4,2,-9,1,-7,-10,4],[-8,-4,-6,7,5,-10,-3,3,-6,5,3],[5,1,10,8,-9,-5,-1,-5,10,-10,-10]]], dtype = "int64")#candidate|5125|(4, 15, 11)|const|int64
bop_5126 = relay.right_shift(var_5124.astype('int64'), relay.reshape(const_5125.astype('int64'), relay.shape_of(var_5124))) # shape=(4, 15, 11)
output = bop_5126
output2 = bop_5126
func_5135 = relay.Function([var_5124,], output)
mod['func_5135'] = func_5135
mod = relay.transform.InferType()(mod)
mutated_mod['func_5135'] = func_5135
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5136 = relay.var("var_5136", dtype = "int64", shape = (4, 15, 11))#candidate|5136|(4, 15, 11)|var|int64
func_5135_call = mutated_mod.get_global_var('func_5135')
call_5137 = func_5135_call(var_5136)
output = call_5137
func_5138 = relay.Function([var_5136], output)
mutated_mod['func_5138'] = func_5138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4807_call = mod.get_global_var('func_4807')
func_4808_call = mutated_mod.get_global_var('func_4808')
call_5164 = func_4807_call()
call_5165 = func_4807_call()
output = call_5164
output2 = call_5165
func_5172 = relay.Function([], output)
mod['func_5172'] = func_5172
mod = relay.transform.InferType()(mod)
mutated_mod['func_5172'] = func_5172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5172_call = mutated_mod.get_global_var('func_5172')
call_5173 = func_5172_call()
output = call_5173
func_5174 = relay.Function([], output)
mutated_mod['func_5174'] = func_5174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2888_call = mod.get_global_var('func_2888')
func_2890_call = mutated_mod.get_global_var('func_2890')
call_5186 = func_2888_call()
call_5187 = func_2888_call()
func_2180_call = mod.get_global_var('func_2180')
func_2183_call = mutated_mod.get_global_var('func_2183')
var_5218 = relay.var("var_5218", dtype = "float64", shape = (39,))#candidate|5218|(39,)|var|float64
call_5217 = func_2180_call(relay.reshape(var_5218.astype('float64'), [13, 3, 1]))
call_5219 = func_2180_call(relay.reshape(var_5218.astype('float64'), [13, 3, 1]))
func_1618_call = mod.get_global_var('func_1618')
func_1622_call = mutated_mod.get_global_var('func_1622')
const_5224 = relay.const([7.695621,8.353469,-8.973827,-8.001217,-5.190506,-1.668975,9.166574,-5.529751,6.144163,6.294599,6.872390,-7.438188,-6.380168,-7.626228,-6.461461,-4.400442,-7.839699,-5.763511,3.466284,0.188056,5.011575,4.037641,-4.360402,7.569105,-5.643238,3.263897,-2.949073,8.336374,4.130475,-8.359086,-8.131443,4.357879,-6.513363,5.144626,9.878277,-4.599356,-9.176798,5.990686,1.288847,-0.319481,-4.097200,8.233472,1.135654,6.069890,3.650598,-5.094176,-8.606951,-7.562840,-7.551229,-5.237028,3.456677,-3.021375,7.653024,-4.827946,7.807436,-6.613085,-1.144267,-7.934260,7.355274,-9.880684,-6.695101,-9.236635,-4.528880,0.500477,-6.666002,-5.245062,-6.248900,6.287447,8.957148,-2.411975,5.693220,-7.144008,2.647061,3.579206,-5.706372,4.255049,9.398975,-1.553891,-2.388992,-6.256371,3.620976,-4.816843,6.709049,8.930318,8.448752,1.546617,5.668145,-9.912575,8.040026,7.499244,5.500582,-4.297487,-4.871755,1.095500,-9.157832,7.901825,-2.306534,-1.553726,1.489958,-0.554809,9.057877,8.631118,7.780362,6.596307,-8.467307,1.360565,2.593111,-7.861037,-3.836987,6.002123,3.474584,-0.897076,-6.169501,8.757296,3.657530,7.759306,-6.160683,9.438627,-1.582381,-4.805828,1.914622,2.497384,1.622276,-7.411111,2.736805,-2.694602,-6.246087,-5.393238,9.424785,-0.090675,-3.726704,-1.537349,7.998317,-2.293268,-2.299554,-3.618689,-6.105688,5.109976,4.532086,4.327457,9.452380,5.080712,1.455264,-4.910233,2.417190,3.096686,-3.762472,-3.627986,5.429437,-2.771440,4.551680,0.831723,-7.406907,1.623441,-3.320328,-1.173330,6.263988,4.545320,2.752062,6.356463,-6.172635,-8.518293,-1.276810,-3.566889,-1.108527,-1.286871,7.075423,5.054678,-8.787798,1.185767,-1.136382,-0.257637,9.145434,-7.786337,5.988261,-5.412175,-9.080466,2.143484,2.351947,-2.670382,-2.685970,-9.619268,-2.902271,0.831902,-6.942536,9.047001,-9.988580,-1.477461,9.162152,-6.099108,2.222713,-1.913870,-6.846476,-5.524953,-0.079875,8.119705,0.591762,-6.225726,7.650798,-6.018196,3.418008,-7.210327,7.339206,6.760364,2.337374,-5.281824,-1.776329,-6.728419,-6.698322,1.195199,9.213663,6.701291,-7.530944,-2.966213,0.684125,7.862361,-4.195678,-0.707536,9.943443,-9.621977,2.070543,4.369975,-9.210059,-9.006155,-4.801202,7.068541,-9.056336,0.369054,-7.994612,8.138198,-3.796848,-5.254016,-5.705676,6.875699,3.500112,2.381381,-2.699685,-3.007371,-6.064524,4.649709,-4.928552,4.353462,9.404875,7.533080,-9.206563,2.830253,-0.230581,-2.755093,-0.867855,-0.648600,8.940107,-8.825596,-5.890649,-0.745315,-1.565312,7.905284,-4.787333,8.188156,9.781308,-7.615089,5.225736,4.047023,0.712776,5.005323,2.973725,0.211375,0.896685,-4.340474,0.303965,-6.627015,-1.941148,-5.995415,-3.915783,-2.779290,8.139753,-9.872701,-2.786716,-7.991993,7.060734,9.585123,6.140162,5.529100,-5.225545,-3.804177,3.209083,3.406360,-3.131610,-0.890333,-2.153251,6.827469,2.876986,-6.673583,9.582215,-4.977846,-2.223772,2.125674,-2.586041,-3.250809,-5.103237,-5.393512,-3.870308,2.081339,-8.733339,2.355789,-8.821882,-1.147505,-7.467698,1.824482,1.323134,-5.316533,4.155355,4.432858,1.110270,-3.533619,-9.856131,7.126693,3.431423,2.316240,-0.562659,-6.437698,1.093153,7.187103,6.331290,3.736710,-5.592918,5.751699,7.748750,1.809163,-5.885413,-4.153740,0.985981,1.344744,-5.182266,-7.202432,-8.252446,6.141584,8.604380,2.571699,1.650194,2.588283,5.178604,4.164835,6.521384,9.972193,9.697738,-8.522894,1.819891,5.809852,-3.685951,-0.992744,-8.166680,0.820713,-6.196340,-7.012814,9.756748,0.979456,-1.699153,-8.155580,-7.124514,-8.551163,7.967821,-7.913691,-4.462239,2.276691,0.081190,6.511809,2.930834,7.830509,-1.371871,-5.218105,4.179898,-8.439847,-8.577173,9.255565,-6.575273,-0.524127,-7.343598,-9.504543,-1.888054,6.486556,2.546406,9.267000,5.355173,0.737075,5.097502,-0.928828,2.453231,-8.341304,2.148367,-3.012575,6.795809,6.512728,7.881866,1.775918,0.827878,5.008274,8.730940,-2.791915,1.481516,-3.694281,9.808974,5.055923,6.174635,-1.861615,1.524233,-1.646781,-7.484049,-6.392897,7.980656,5.896085,6.468337,-8.980844,-3.739855,4.169851,-0.112399,-7.513030,-7.813686,-4.126144,9.370846,-1.905718,-3.152452,-6.114761,0.129682,-8.846482,-1.668056,8.860709,7.961162,-4.842243,-3.998490,4.286438,-2.409264,-2.830424,-0.486236,-5.552083,-7.502085,-6.743730,-2.608851,6.714882,-4.854503,-0.103379,7.837741,-1.196238,0.411553,-8.774586,-3.430072,-0.910089,1.624847,-1.055973,-6.886469,-7.696374,0.895842,7.683736,3.413530,9.969508,-8.292622,-5.828256,-6.008418,-9.445091,9.303005,4.378688,9.467395,-8.030220,2.220613,-9.442172,-6.591244,-0.779029,5.510600,0.527921,-6.898855,-8.566310,-3.932402,-5.904219,4.236249,2.787422,-5.045378,5.955302,-4.935759,-3.825385,-9.241105,2.638316,6.874901,-8.174915,6.047156,6.028580,7.932229,1.263755,-6.801329,-6.371805,-8.017025,8.106030,-1.664036,-2.762429,-9.503645,-1.472365,6.563813,3.959370,2.393589,-2.062602,7.614009,-1.249505,0.581814,7.360478,-4.543399,-5.275732,4.326477,3.586051,-8.387244,-3.794563,-0.776608,0.395536,7.991842,9.472712,-9.494923,9.479938,6.554761,-0.327475,9.896884,2.410074,4.217927,6.229380,7.700587,1.822938,-7.729289,-8.092630,-6.570457,1.472851,1.454060,9.209673,-7.831852,1.164218,-6.282332,-4.051437,5.959110,7.657218,1.907337,2.936995,7.181055,-2.177150,0.997078,0.174482,-5.258520,2.423243,5.509289,-7.872446,7.523670,9.617365,0.910726,-2.782489,1.998062,-9.893477,-2.046893,3.148141,-4.859646,6.350996,7.472541,9.802215,0.687962,6.367655,8.453907,-3.173321,6.162171,7.510449,-2.059476,-4.509692,0.151044,-2.752921,-3.088522,-4.019014,-8.247415,-3.687459,-7.189548,9.504424,-4.273694,-0.352209,-8.076085,3.307474,-5.848732,8.800651,-1.175701,5.839754,-0.779277,9.246161,4.357753,7.190721,3.986666,7.145187,0.164161,-3.065175,3.675037,-9.440431,9.775464,-9.128367,-5.687457,-4.841147,1.444222,-2.476426,-3.886561,-9.707897,7.305277,0.859929,-0.329476,-6.669583,0.799229,4.591844,7.777589,0.619015,1.855087,6.113305,3.593718,-2.165830,3.076049,-5.157582,-4.616565,3.328672,-0.599476,0.404878,-8.945276,-2.152583,-5.220253,-4.806894,2.280058,-5.827454,3.941042,-7.470913,-6.837295,9.233695,-4.260453,6.346594,9.451958,-5.374660,9.545952,-8.371520,-9.826479,0.436432,-9.841914,-9.491381,5.198933,9.559586,-6.244998,6.955824,-0.611503,-8.597328,-5.836266,-2.858914,7.681376,5.954814,-3.025892,-9.769911,1.592730,9.507803,4.426757,8.078097,-0.537694,-8.449368,2.425633,3.580812,-4.769015,-6.460554,9.283169,-5.446842,9.906215,7.422253,8.535560,-2.971918,-8.192752,3.616801,-2.011488,-3.091315,5.111007,3.467177,4.816537,-8.131367,1.080907,-3.027748,9.334758,7.001252,7.328760,-3.880751,-4.040865,7.533413,-5.526295,-7.164227,7.607426,-7.041041,3.035747,8.871111,-0.071031,9.246161,-2.873166,8.902537,-5.723537,3.418225,9.294868,7.955528,-3.055380,-1.822611,7.493047,1.944804,-5.181381,9.066340,-4.878709,-9.831291,-5.499239,-2.419742,6.557483,1.309303,-1.325281,6.976679,-9.862390,0.169387,1.681188,-4.535751,-7.008176,-7.988954,1.955399,3.433410,-5.774631,-0.367175,7.507112,-6.904625,-4.083282,-7.924843,-0.536868,6.634841,-2.035207,2.291830,-0.509236,-0.379447,-6.354760,0.627452,-9.893260,4.468865,-4.188140,-8.367729,-1.982220,0.937864,-4.359831,1.180761,3.415844,2.603356,0.673642,-2.628357,-2.830982,-2.697362,7.082065,-9.701229,-3.287157,-9.727508,-9.743838,-5.655336,9.582757,8.083797,-9.915897,-3.693686,8.904187,2.903150,2.249135,1.319323,3.744624,-1.897334,9.135492,-2.225093,-7.012669,0.442426,6.220987,2.008012,9.826292,-0.791541,9.240879,3.426061,8.629189,8.445761,-1.117727,-8.953690,-0.268264,-9.579413,-1.117777,-9.863161,-4.037869,2.352151,1.398461,-9.583186,5.751389,-6.920689,-8.011276,-7.599146,8.396602,-2.429887,-4.316322,9.669683,2.598396,-2.279017,-1.337324,-5.954422,-9.627611,6.460213,-3.020951,-0.476889,-2.232822,-9.860207,8.013778,-0.836172,-6.114039,-5.441872,-2.953865,6.344907,-9.030070,3.253137,-8.529230,3.881717,9.306590,0.037779,-2.683986,5.865953,-8.774693,6.227887,-4.645353,-6.523066,-5.901358,4.417257,-4.492731,-4.902693,4.533679,-4.264736,3.152952,-6.914312,-8.110286,-1.779094,-3.648538,5.159866,7.194967,-2.829256,5.660220,-1.224290,7.214042,-7.910785,3.398851,-5.408875,-9.941532,-5.157504,-2.391800,-6.944792,-5.717611,-4.739380,-2.544593,-0.694927,-6.080879,-2.472266,7.973666,-9.693654,-5.993195,8.839006,6.162008,-4.588734,-6.792675,-4.891832,-1.191144,2.265085,6.355510,6.644240,8.431676,-9.039093,-3.996698,0.780956,6.219570,-8.643547,-3.312589,8.046418,-1.165319,2.533851,5.206506,6.578061,-9.099117,-2.376061,-0.852440,-0.566801,2.048081,-4.256521,2.445055,-4.980641,5.006432,-1.592264,-8.000214,7.235262,-1.895285,7.927936,-9.687024,0.986621,7.414317,4.044232,7.505433,4.639491,-9.200311,-5.498375,-5.498018,-0.783462,6.568468,6.426731,2.602795,-1.475110,-6.358268,4.260875,2.589782,5.395993,-2.829670,-1.691105,-4.359380,7.768332,3.414810,-6.771727,-9.661288,4.844494,-1.266408,6.175994,-1.940603,9.391074,9.802581,7.227378,0.242036,4.364132,2.438067,8.941456,2.671353,-1.121883,-8.501085,-8.490062,-2.987776,-2.108374,0.718183,-6.899885,-1.314745,-0.105089,-1.289064,-6.630136,-9.036630,3.832828,4.873164,-3.602523,9.235292,-2.629755,2.626100,-9.174235,-4.586623,-1.194588,-8.874968,1.693616,-4.427119,-1.873840,-4.269749,-9.367020,-3.673630,-7.572852,-5.974218,6.979105,-9.601118,7.480292,-9.532625,4.468518,9.851346,-1.634685,-5.416382,-2.987454,7.153274,8.088080,2.815118,1.898092,2.349874,4.426852,-2.002465,-0.714481,-4.584076,-7.308846,0.898333,-6.069420,-5.445666,3.697182,-0.797137,8.339789,-7.839118,9.314007,1.903574,-4.209296,3.549720,-9.103722,-2.219575,-1.134883,2.363826,7.608556,-9.245283,9.102945,4.256470,4.357854,-0.969076,5.509917,8.928444,-4.386154,8.965842,8.720223,-5.802939,-4.487216,-7.126503,-8.604495,-2.367187,3.262057,5.555523,7.529343,5.221201,-1.373920,7.621042,-6.434845,7.394836,9.536372,0.499281,8.000500,7.237534,-8.753137,-9.642172,0.344567,1.142598,7.121108,9.206241,3.050801,2.453745,-5.407478,3.968014,7.066922,5.005459,-9.135280,9.027270,-7.499975,8.564253,3.842099,6.672377,-1.036692,6.700723,1.150842,-4.441607,6.955022,4.797118,4.658916,-6.723125,6.695002,9.542733,1.159633,0.723316,0.772852,-7.527594,-5.874651,2.674858,-7.588198,-2.995281,6.462162,-7.073772,-6.541835,-7.044630,1.800898,-5.456636,-7.974403,-0.298800,-8.408870,-5.192703,-3.036450,-0.882008,-5.425076,-6.111779,-5.815850,4.203986,8.128448,-6.202788,4.798008,7.738534,-3.550419,3.647962,-9.511295,-2.375925,1.794045,-3.552598,1.193498,-9.919468,0.685179,5.131502,5.974611,2.639205,-8.991679,-3.056164,2.597979,-1.445997,3.282263,-9.786872,0.363570,-3.063701,7.550070,6.134510,-5.459057,5.234447,-5.645544,0.597902,5.484629,-8.714276,2.192441,0.258625,7.651686,-3.730470,3.675443,-5.069674,7.465891,8.295495,4.908098,0.139913,-5.687448,3.878108,4.393129,-1.337644,-5.688632,8.722801,3.726343,-2.879364,-0.031907,8.899944,7.418558,8.080021,-7.526226,-8.916583,6.471291,5.968432,-0.470045,-7.248997,-7.549430,-7.337275,4.336476,-1.953412,-7.579691,7.086998,4.628367,-1.139891,-2.453991,5.888800,-9.318599,5.266491,3.139538,7.730209,0.278881,-8.345692,-6.667291,-1.516771,-3.417976,-7.121909,1.265188,9.876879,-1.518172,-1.518009,2.551658,9.619094,3.624804,2.492728,-2.707133,-4.104143,-9.272435,0.028293,9.105019,1.987909,-0.040412,-7.917308,0.264449,-6.580360,0.441618,3.925236,-0.077538,-8.330338,3.843506,-2.888148,-5.665947,7.325661,9.844492,1.586293,1.144525,-8.003474,-8.843418,8.930670,1.384071,9.230024,-7.669248,7.746272,0.293098,-2.078387,-0.046346,-3.217352,6.018528,2.729386,-6.045381,0.107717,0.881183,0.352963,-8.450424,-1.308897,-4.200519,-7.850934,-8.688395,4.337191,4.850336,-9.963653,6.408432,-4.559601,-7.736406,4.480368,-2.231840,-8.421784,9.980798,1.637425,3.768031,2.864250,0.184136,-5.384921,2.931655,-4.338699,-0.923748,-9.597792,2.699188,-6.203721,3.327959,7.941339,8.152145,9.778631,6.117073,-3.198766,-9.406354,3.732543,-4.239024,1.956794,3.574075,-2.555366,-1.312234,0.183416,-5.839638,-5.838020,-4.554527,0.452113,8.525506,-5.930098,-8.518944,6.165220,-3.848733,-3.110198,1.369629,-8.210175,8.856005,-4.956461,-8.374162,-5.363102,0.902956,-9.704606,-8.607262,6.312954,-9.104690,-6.292599,2.904383,-4.154455,-5.520718,-9.106651,-0.255989,8.595794,8.767084,-1.403980,3.156358,-1.594371,9.623768,-4.442617,7.659396,3.601245,2.377829,-0.707376,-4.952696,-7.184123,2.334887,-3.842243,-4.512698,-9.628349,0.364228,2.512211,6.948290,0.013369,-0.728102,-9.837464,-0.842724,1.281757,9.748705,-1.465423,-1.112038,4.680488,3.435634,-2.650435,8.659121,0.092785,9.835421,0.899966,7.902615,3.245536,9.922596,6.228065,3.884589,3.348118,-7.044358,-0.925409,3.757457,-2.520074,1.530597,-6.327486,2.425584,5.537901,-7.997509,2.445028,-2.973884,2.880669,-8.976637,0.166383,5.976769,7.327162,-6.256083,2.992701,9.699723,-4.429953,-7.778787,7.232962,-1.024014,-7.730384,4.157768,-3.014762,-0.201051,5.896201,-5.837661,-0.907223,-6.903430,1.243154,-2.255749,-4.528933,2.217996,-2.463037,3.167146,5.878360,1.197996,-5.534135,-8.192719,-0.184601,-3.706628,7.673929,-1.145055,-1.783675,6.794432,3.205354,-0.156089,6.088063,-0.829893,6.360033,9.117171,9.156323,-0.744382,-1.038754,1.035246,0.229498,-5.567989,-1.923880,6.404028,7.925701,1.859164,-5.710092,-9.685739,0.481383,0.725957,-9.885222,4.171408,6.500277,7.313710,-0.716756,-4.108434,-1.224091,7.581422,3.523467,-1.955784,7.943448,4.883195,0.357515,-4.741610,-5.078340,-0.694041,-9.898777,8.539504,2.139883,8.418601,1.307463,-3.993972,5.415194,-3.970386,-6.424121,2.959671,-9.634397,2.482837,4.069653,-1.909255,1.699938,-5.197555,4.565120,-6.457076,8.546958,-3.340039,4.237587,-3.214855,-7.678718,-2.449911,1.397050,6.047425,-5.876117,-3.462847,-7.467843,-5.595639,9.707286,9.339268,-1.969323,5.927936,-6.740879,-1.209556,-3.791799,-3.648692,3.125158,0.603027,-7.337483,7.028486,1.631704,-5.055411,-5.956972,-8.430752,-4.905252,-5.015289,9.345282,-5.897252,-3.568602,5.752150,4.141602,5.203402,-1.253522,-5.651042,4.254954,-3.820780,5.936196,-6.001864,8.278794,9.850214,5.078057,-0.631062,1.844566,-3.361231,9.172223,4.449982,9.095309,1.522958,6.582650,-1.650204,9.900055,-5.452154,-8.020212,7.612050,2.574162,8.693488,-2.208402,4.890744,-3.990288,3.692430,8.717050,-7.103543,-1.482366,7.693737,7.668834,-4.399358,-7.813841,6.362129,-7.835763,-0.939248,0.183450,-4.222487,7.711202,-6.138218,2.354662,6.320203,-9.210022,2.743575,1.622117,-3.687227,-7.860749,-2.096297,7.787731,1.803079,-3.687383,4.129694,9.082600,8.767825,4.122217,-1.956221,-7.586646,-4.619734,-9.949397,0.769221,-2.339612,-8.029825,-9.016433,1.894626,2.287673,3.198960,-8.653445,8.323303,-7.973033,-1.151760,-1.945529,-2.163756,-5.852296,6.437038,-0.063428,-4.670595,0.651618,-4.048097,9.664549,5.521358,-6.534940,-5.685729,-0.158655,5.125462,7.137935,-2.310593,-2.519852,-3.652782,0.532170,1.443718,-8.125253,-9.077422,3.476271,8.124783,-8.609836,8.553922,-4.179421,0.830739,3.720820,1.398753,-3.105515,1.026752,5.730155,6.427924,7.494200,-8.863770,7.796614,3.356842,7.439256,5.337734,-9.503424,3.793673,6.967167,9.321836,1.625599,3.122850,-6.799836,-3.616119,-5.286696,7.057542,2.230758,6.431828,-1.000095,4.709574,7.759481,-2.548745,6.030983,-4.569684,-1.394590,6.303829,6.800662,-9.549089,0.083869,8.465980,-4.134859,-6.584757,-0.776500,-3.267557,-1.088565,2.212343,8.276247,6.292051,6.074863,4.484979,5.463552,3.905825,1.977387,0.208368,-8.742712,-8.626797,2.662691,-1.450987,-7.689259,-9.237574,-8.818201,-4.047907,9.771857,-1.676416,-6.677447,3.545560,8.220506,-9.517263,-3.506474,2.630710,-8.069076,9.821698,-3.355528,4.343748,0.290795,-6.064702,9.523770,3.835900,-5.836957,6.375003,9.279049,8.072387,9.247287,9.930847,7.957991,7.720323,-4.591898,8.462262,-5.994414,2.538792,-7.976228,-5.094586,-4.672727,2.341203,3.050204,5.539880,0.755077,2.452074,-6.248116,-6.642521,-7.308824,2.218904,-4.131923,7.663117,-1.079552,-0.767850,-4.669401,-0.515843,-1.879008,-7.950246,4.236464,-5.244152,-1.281041,0.745836,-8.301448,-8.809345,1.223415,8.055344,-0.324644,3.779010,2.452806,3.637962,-0.029147,1.044200,9.041571,-6.525559,8.860405,0.016525,3.613691,5.217346,-8.464879,-6.788951,4.253381,-2.638966,-7.039356,-4.695964,0.261989,-9.542980,-8.190163,7.747236,4.309071,-2.896511,-5.563293,-3.370500,-3.863435,-5.236597,5.657877,8.834408,-2.479008,-5.245256,5.167710,5.511211,-5.931448,-7.669505,7.009715,5.613601,3.962530,2.376893,8.808008,6.602893,6.562125,1.322602,-8.386588,-9.041366,-1.229338,-7.316570,2.187155,-7.514452,9.511055,-5.195676,-5.879726,2.189949,5.651429,-3.031320,-2.208286,9.401667,7.962248,-8.244227,2.586206,-2.640708,9.148058,2.514279,-6.090961,-1.366081,-5.549630,-0.189847,-3.995839,-6.604974,2.885991,4.726509,6.436133,7.554547,5.970313,-8.759857,-1.685829,-0.804399,3.597205,5.998950,3.137145,5.591000,-0.492434,9.139639,1.619647,6.532424,-8.192185,-6.027991,2.866564,-0.714752,7.738174,0.995644,8.147511,8.975603,8.002161,3.688758,0.964135,-1.251140,-9.297745,-8.674358,5.400882,-8.745021,-6.940578,4.676264,4.609479,-4.845926,0.681329,-8.737604,1.248453,0.299276,-6.166391,-8.582178,-9.484569,-7.176025,-9.402159,-2.099504,-8.653480,2.890930,-6.971205,-6.506035,-3.166269,-7.468167,-3.278698,-7.357886,2.262531,-4.169565,-6.569152,9.421843,4.858134,-6.869419,-6.235121,6.015937,3.442383,-4.277986,-8.334591,9.371931,5.175370,-2.949634,2.269767,-1.715158,-0.035014,-7.280396,2.884339,3.910045,0.418323,-9.774935,6.736725,-0.291295,-4.863775,-0.964405,0.320052,6.034761,6.073297,-5.160843,-3.066579,5.224768,9.857750,-5.991460,6.838479,9.313563,2.783194,4.926062,-7.686593,6.566650,-8.889061,5.731424,-7.949365,-1.361196,-7.984524,-7.645920,0.623233,2.327109,9.738998,5.953953,-4.493023,-0.088711,-7.946169,-7.219765,2.802071,4.229452,7.064042,-3.696485,2.212462,7.375379,4.812069,7.848610,-8.437861,-0.555434,-5.080393,-7.973755,-5.823458,-6.025984,-8.737227,9.834556,-4.952555,8.697601,4.054585,5.015074,9.563711,-0.652442,-5.241002,9.985865,2.092806,6.184112,-6.658388,-7.676969,-3.331412,4.698508,5.451746,-0.111563,-2.135957,1.572833,2.428646,-1.037005,8.300560,-1.830623,-5.068930,-9.848419,8.191477,2.327274,-4.165686,-2.275392,-0.594739,7.886570,6.806484,-3.385856,-7.782145,0.180937,-9.453642,-0.733326,6.523557,-6.806664,-4.954440,0.089442,-1.845587,5.110864,-0.882328,3.296698,-0.307576,-2.874594,-5.047421,8.571218,-5.690757,5.941200,-9.180040,-9.217320,-3.722827,-4.604948,-6.197824,-3.217717,-6.381199,9.934929,3.376849,-8.946754,3.888902,8.707950,5.276910,-6.150315,-5.268090,-2.665783,3.128854,-9.638491,3.769166,9.460860,-1.839061,-6.303133,8.622808,1.147436,-3.682448,-0.056273,-1.765728,-3.603685,-9.676641,4.633398,-7.499579,-4.822517,-7.207662,7.894680,0.985712,1.784568,-9.617346,-6.929523,6.975837,-8.271419,0.594380,-3.474607,5.276391,4.360168,1.701862,-7.477815,5.993261,-2.149555,0.827166,1.485840,-1.119586,-2.068209,3.018706,-5.982599,-4.105356,-2.274832,-9.683315,7.317520,6.878823,6.940019,9.639033,-1.750016,-3.620276,-6.848847,-0.702653,-1.577837,6.862541,9.324602,-2.434687,7.860105,0.728772,-7.337592,-4.917238,9.782812,2.050159,4.939782,-8.021464,0.424503,-2.899926,-4.895027,5.850175,4.046489,5.971275,6.367136,-2.904546,-8.344464,1.186827,6.451423,-1.818320,4.249155,-2.066111,-3.090209,9.598942,5.013271,2.706253,-5.388100,4.651269,0.343344,4.042508,-8.281256,-9.081855,6.700900,2.190940,8.655096,1.955660,2.636103,4.950169,-2.766957,3.521513,-4.078083,7.071670,-6.506144,-2.442027,7.132927,-6.457271,-7.757716,-2.235811,-9.196418,-4.992653,0.079142,1.349877,8.481283,-3.898582,7.606839,-3.132080,-7.363618,-3.689846,-7.946682,0.174781,-5.373582,9.706667,-7.427694,-1.591155,9.196097,-6.145376,-7.722425,-7.525849,0.333021,1.977292,-5.643827,-8.186287,5.302977,6.224470,-7.075009,2.410419,6.947513,3.787239,-8.254909,-9.690468,-9.627929,-8.498705,-0.756937,7.120719,1.863544,-6.331757,-5.402555,1.881473,-3.623349,2.953910,1.588561,9.640962,7.855567,-8.656893,7.862196,6.586336,5.295010,-0.883024,-3.341333,7.458728,6.414242,-3.051215,2.709632,9.229039,-1.980851,-2.896007,-2.190073,-9.078966,-2.557351,6.538892,-6.312049,8.883652,9.168939,5.557641,7.025854,0.330245,7.813346,-7.316641,2.972155,-2.423096,-6.558563,5.727708,-7.063029,-7.808534,-2.941464,-3.698108,8.266450,9.174286,-1.070218,-3.386659,9.967054,-9.575300,9.381819,2.381787,-8.507715,4.836193,-1.927283,3.309787,-6.527883,4.440927,-3.994347,4.650670,-0.486689,-3.146754,-6.516933,-1.150931,-1.729784,-1.240043,-8.282485,1.806829,3.151622,6.917325,6.456303,-2.179782,7.317977,0.678913,-1.644804,2.850694,9.196427,0.012131,-9.770563,8.805170,-1.057993,7.441547,-7.456961,5.451916,3.294835,5.503066,-1.720158,-8.069146,-6.116513,1.456973,7.814303,9.722654,-5.413578,-5.331917,-5.419351,1.734715,2.053588,2.922818,3.691188,4.604411,-4.225423,-9.364413,-5.269652,-3.707125,-6.911656,7.070769,-4.223133,-0.389485,8.861087,8.708252,-4.208164,-8.419139,3.538313,7.913694,0.417866,3.513087,-2.145106,-6.944006,0.630981,6.036748,-0.970443,8.309542,5.915190,7.461735,-1.573321,-8.872622,7.081083,-2.211755,2.794951,-1.936477,-1.049645,-4.733855,5.357328,1.279063,5.375028,-5.364494,-2.316291,-5.376909,8.262209,-0.926024,-6.744703,-3.382384,-7.500364,9.101458,9.363086,-6.409686,1.174421,-3.376654,4.102042,5.464994,-6.221967,-0.686974,3.679619,-3.858977,-0.533438,-8.008979,1.406039,-5.996255,8.145443,8.858935,7.255884,-9.304789,-7.547620,2.439681,4.302715,-3.824754,-3.628608,-6.380701,9.123304,-0.431185,8.631036,0.176603,-3.040641,-3.987023,8.778135,-6.268586,0.171418,4.108825,5.397362,7.456858,-4.373446,-5.499920,-4.443094,-7.144294,2.172070,9.826682,-9.435294,4.836502,1.942392,-0.663939,-9.733258,9.154730,-7.612165,3.683195,-6.089844,-0.518206,2.806300,3.375359,4.980096,1.258534,6.795692,5.828289,0.799720,-3.684060,3.266734,1.888510,3.130938,7.095461,-7.157313,1.902421,-0.629930,4.741208,-8.068488,5.351034,-1.203471,-1.789791,-2.288355,0.068196,-9.330611,-8.275105,4.842097,7.569330,-0.196730,-5.229508,-9.662894,5.112379,9.540251,-5.643885,-9.147212,0.462724,-8.176796,-2.932812,1.802566,9.415392,4.321810,0.342877,7.769577,8.085487,-6.599754,-8.141753,7.532202,3.449987,-8.133298,-9.775102,3.413239,-1.833295,0.940500,-7.673020,-0.175598,-1.741786,8.535436,-0.507272,3.726170,1.289348,8.706139,-1.251916,1.423406,9.202909,7.329433,-2.935382,0.770748,-9.768671,9.617963,-6.080034,-3.264433,9.093296,-9.325575,2.527443,2.513551,4.387531,-3.563181,2.092535,0.760763,-3.381403,-7.946970,-8.421407,0.491271,-0.396672,4.486786,-6.136885,-5.749586,-6.947886,-4.539088,-4.969601,-7.377756,-0.988232,7.426366,-9.152868,4.205910,1.016811,-9.177572,7.802589,-3.405454,-5.562035,-9.434320,-8.111097,6.881552,-3.329658,-2.515111,4.356190,-9.292533,5.115027,-1.863718,0.650173,-3.003401,5.420426,-1.357240,-9.806123,3.155258,-8.408762,-6.582821,-3.918090,5.269646,1.767057,2.064111,-0.722594,-0.613458,2.051014,-1.132477,-9.662926,0.224954,8.411154,2.312971,-1.104847,-9.143614,-3.290117,2.444158,-1.723082,9.640538,-9.890466,6.486099,3.799080,0.729210,-5.458985,1.568027,-7.775272,-8.085281,-2.787780,-4.319684,-7.533611,9.254936,0.043933,1.698035,-7.010079,2.893768,7.716031,4.313679,-6.185432,0.898505,-8.612438,-3.783112,2.178103,-8.812070,-8.357924,1.967432,-1.088470,7.615004,1.224253,5.942448,-6.608732,8.195470,2.245141,-1.476296,9.712605,-5.322859,-7.717868,-8.542895,-4.341114,6.590438,7.339924,7.399462,6.113597,7.941837,-9.129987,-5.547680,2.743845,-4.169267,8.891295,9.129847,3.564349,-4.452462,-3.206886,4.544285,-5.634549,6.277457,0.008392,7.574390,6.745092,-3.353546,4.146894,-3.415339,-3.517654,-9.554107,8.348981,-8.597298,1.444067,-9.747540,3.447541,-8.167826,-4.373740,-0.024430,5.798033,5.426452,-1.934660,-2.982385,-1.201585,8.381939,1.014270,-2.079162,8.429166,7.699094,-6.763691,-2.824686,-0.362295,6.031269,-0.111863,-0.645731,5.062819,-1.950606,2.443412,5.834996,-3.714336,-3.465587,-0.412821,-5.835865,5.715261,5.572835,-4.584273,-7.641762,-5.639570,7.773438,5.274758,-0.645289,6.475107,-7.869812,7.902843,7.895521,-3.277563,-3.872385,-8.004040,-4.917685,-3.717945,2.978468,3.215046,9.989560,9.278748,-9.439402,6.792578,6.617791,-2.154233,7.914779,-9.618456,2.018000,6.180969,9.713847,-9.746822,0.766649,4.501914,7.683016,-2.768829,3.275564,-1.384779,-2.352358,-5.473099,-6.791703,-4.835069,2.032104,-3.448100,8.703805,-0.771881,-5.103748,7.787290,2.296880,-7.111533,3.997818,-7.472121,6.660520,1.229297,-5.415668,6.856884,-9.151370,-8.640023,-3.283311,-9.595660,-1.088607,6.483861,2.581416,6.533194,1.370740,-1.160481,-4.979090,0.644965,3.098817,-0.509729,3.155619,-1.256838,4.531165,6.983999,-1.302983,0.220253,-5.478499,6.043414,6.944893,-3.141965,-9.601077,-8.548281,3.356469,-3.730895,-1.614839,-4.955529,7.304328,7.665179,-2.757158,-2.697121,-5.418975,0.385996,-4.638060,-4.922858,0.130599,9.166728,4.858888,7.440945,9.747073,2.148394,-9.013654,7.256503,5.219850,-9.586166,3.714607,-1.682539,-4.840368,-4.400772,-5.402686,2.005036,-3.931610,3.471374,-1.809107,-7.253775,1.892953,7.450951,-7.055946,0.992720,8.813642,3.554882,-6.942303,-6.260607,4.045145,-3.310678,8.398954,-2.816809,-0.898297,-0.486571,-3.658835,-2.457260,-6.580830,8.644005,7.303460,-2.223446,-5.393726,2.242552,2.823982,6.238815,0.111316,-5.948992,7.908344,-8.248090,2.849933,-9.400363,6.694422,6.924916,-0.630496,-7.741422,4.616456,-5.319975,-7.395420,-8.159972,4.641445,9.074755,1.925615,-9.673334,-1.917935,-3.258349,1.968656,1.736815,-0.408411,-4.177873,2.898660,-6.635869,-1.783672,-3.671203,-5.001240,-5.962343,-6.386464,-7.352824,-2.341300,5.103327,9.512463,-3.585004,-7.382889,-9.068823,-1.439153,-9.237390,9.925984,-1.444298,3.383342,8.445110,2.362520,-7.757832,3.178637,-0.901346,4.635954,-7.903389,4.080665,5.672760,-0.591941,-4.882038,-5.558954,-9.705986,4.712458,8.454846,1.038531,3.098105,9.044040,-1.557919,-8.515506,-7.149132,-8.448778,6.617179,3.967694,-2.532598,-4.950824,-3.209741,5.144670,-4.036976,4.409052,8.161340,-1.424342,2.432464,-1.917148,-6.869354,-2.121137,-4.309476,3.499664,3.865508,-3.388101,-9.314972,-5.767258,-6.865067,4.179115,5.032474,-1.075683,4.130892,9.946439,-3.847393,3.114555,-9.785435,1.419203,-2.089064,-8.507504,9.182424,2.203218,5.226890,-1.275289,0.891490,5.893768,-9.390960,-5.718591,-1.199517,6.368766,2.207792,-1.372460,-1.023593,7.845947,-2.334681,-3.814609,-0.290396,-5.024033,-3.101988,8.393992,-0.834053,-6.834715,0.005310,8.952178,-2.545552,-0.874924,0.065789,0.259725,0.037786,-5.699930,2.716789,2.346995,5.390779,8.207365,5.667631,6.394688,8.647145,-2.926297,-5.462720,1.090974,-6.417619,5.195144,-3.895860,-7.750165,0.817790,2.080963,9.070501,-3.399626,-6.793420,-4.094593,7.086690,-9.112470,1.169861,2.207612,-3.251713,-9.946779,-7.355853,-4.777966,2.351120,-0.354379,2.329913,2.193875,7.032693,4.392376,9.117009,4.938109,-9.529064,-3.951174,-7.955299,0.249321,-0.031867,-1.984728,6.581488,0.885204,7.230613,8.292363,0.914298,1.325229,7.697075,3.849200,4.876141,9.829366,-1.525520,7.141320,8.328328,9.884509,4.950261,-2.992915,-1.856490,4.867060,-9.572196,-3.335086,1.958412,-1.113302,8.801650,7.076058,-7.494398,-1.344350,-4.864486,4.716970,-5.843112,0.428604,-2.516686,2.521442,8.795414,-9.887716,5.807926,-8.457874,4.587464,2.858157,-5.496171,8.903795,8.333484,4.529927,2.010900,9.897508,4.805711,5.787848,9.742861,-1.214248,2.911744,-4.571549,4.471917,6.001311,3.978291,0.677373,-1.133422,-9.262886,-0.579276,3.034414,-7.175882,-9.513938,-5.437472,-9.737837,-1.646635,-9.490255,4.590236,-3.138196,4.119544,1.112931,9.453586,-4.937330,4.187283,8.105941,-5.103178,-2.236719,-2.204557,-2.947304,-1.261374,-7.375397,2.694910,2.834148,4.164878,-5.080446,5.851253,5.155074,-2.958813,-1.792272,-0.377881,-9.011504,9.480287,1.223505,7.797587,-1.465505,-7.048124,-9.179452,3.730827,7.743428,2.378007,-2.238139,6.393773,3.892224,3.912049,-3.626731,-9.213821,3.031781,0.513416,4.119985,-6.254633,-7.405989,-4.517068,8.180530,-2.202675,-9.831344,-6.477193,3.727833,-5.175677,8.736730,-5.538726,4.487985,-0.855147,-3.887757,1.804827,-1.375324,4.750156,4.364462,2.319911,-6.178151,3.289164,-9.590196,4.858475,3.469090,-3.070058,2.446730,-7.372118,4.877502], dtype = "float32")#candidate|5224|(2912,)|const|float32
call_5223 = func_1618_call(relay.reshape(const_5224.astype('float32'), [16, 14, 13]), relay.reshape(const_5224.astype('float32'), [16, 14, 13]), )
call_5225 = func_1618_call(relay.reshape(const_5224.astype('float32'), [16, 14, 13]), relay.reshape(const_5224.astype('float32'), [16, 14, 13]), )
func_3389_call = mod.get_global_var('func_3389')
func_3390_call = mutated_mod.get_global_var('func_3390')
call_5231 = relay.TupleGetItem(func_3389_call(), 0)
call_5232 = relay.TupleGetItem(func_3390_call(), 0)
func_2888_call = mod.get_global_var('func_2888')
func_2890_call = mutated_mod.get_global_var('func_2890')
call_5235 = func_2888_call()
call_5236 = func_2888_call()
output = relay.Tuple([call_5186,call_5217,var_5218,call_5223,const_5224,call_5231,call_5235,])
output2 = relay.Tuple([call_5187,call_5219,var_5218,call_5225,const_5224,call_5232,call_5236,])
func_5240 = relay.Function([var_5218,], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
var_5241 = relay.var("var_5241", dtype = "float64", shape = (39,))#candidate|5241|(39,)|var|float64
output = func_5240(var_5241)
func_5242 = relay.Function([var_5241], output)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mod.get_global_var('func_4471')
func_4473_call = mutated_mod.get_global_var('func_4473')
call_5303 = relay.TupleGetItem(func_4471_call(), 0)
call_5304 = relay.TupleGetItem(func_4473_call(), 0)
output = relay.Tuple([call_5303,])
output2 = relay.Tuple([call_5304,])
func_5314 = relay.Function([], output)
mod['func_5314'] = func_5314
mod = relay.transform.InferType()(mod)
output = func_5314()
func_5315 = relay.Function([], output)
mutated_mod['func_5315'] = func_5315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2743_call = mod.get_global_var('func_2743')
func_2744_call = mutated_mod.get_global_var('func_2744')
call_5411 = relay.TupleGetItem(func_2743_call(), 0)
call_5412 = relay.TupleGetItem(func_2744_call(), 0)
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
var_5417 = relay.var("var_5417", dtype = "uint8", shape = (5, 351))#candidate|5417|(5, 351)|var|uint8
call_5416 = func_1999_call(relay.reshape(var_5417.astype('uint8'), [15, 9, 13]))
call_5418 = func_1999_call(relay.reshape(var_5417.astype('uint8'), [15, 9, 13]))
bop_5429 = relay.greater_equal(var_5417.astype('bool'), relay.reshape(call_5416.astype('bool'), relay.shape_of(var_5417))) # shape=(5, 351)
bop_5432 = relay.greater_equal(var_5417.astype('bool'), relay.reshape(call_5418.astype('bool'), relay.shape_of(var_5417))) # shape=(5, 351)
uop_5436 = relay.sigmoid(bop_5429.astype('float64')) # shape=(5, 351)
uop_5438 = relay.sigmoid(bop_5432.astype('float64')) # shape=(5, 351)
uop_5448 = relay.log(uop_5436.astype('float32')) # shape=(5, 351)
uop_5450 = relay.log(uop_5438.astype('float32')) # shape=(5, 351)
output = relay.Tuple([call_5411,uop_5448,])
output2 = relay.Tuple([call_5412,uop_5450,])
func_5466 = relay.Function([var_5417,], output)
mod['func_5466'] = func_5466
mod = relay.transform.InferType()(mod)
var_5467 = relay.var("var_5467", dtype = "uint8", shape = (5, 351))#candidate|5467|(5, 351)|var|uint8
output = func_5466(var_5467)
func_5468 = relay.Function([var_5467], output)
mutated_mod['func_5468'] = func_5468
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5491 = relay.var("var_5491", dtype = "float64", shape = (16, 10, 3))#candidate|5491|(16, 10, 3)|var|float64
uop_5492 = relay.cos(var_5491.astype('float64')) # shape=(16, 10, 3)
bop_5495 = relay.floor_divide(var_5491.astype('float64'), relay.reshape(uop_5492.astype('float64'), relay.shape_of(var_5491))) # shape=(16, 10, 3)
bop_5498 = relay.bitwise_or(bop_5495.astype('uint16'), relay.reshape(uop_5492.astype('uint16'), relay.shape_of(bop_5495))) # shape=(16, 10, 3)
uop_5504 = relay.sinh(uop_5492.astype('float64')) # shape=(16, 10, 3)
output = relay.Tuple([bop_5498,uop_5504,])
output2 = relay.Tuple([bop_5498,uop_5504,])
func_5507 = relay.Function([var_5491,], output)
mod['func_5507'] = func_5507
mod = relay.transform.InferType()(mod)
var_5508 = relay.var("var_5508", dtype = "float64", shape = (16, 10, 3))#candidate|5508|(16, 10, 3)|var|float64
output = func_5507(var_5508)
func_5509 = relay.Function([var_5508], output)
mutated_mod['func_5509'] = func_5509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3345_call = mod.get_global_var('func_3345')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_5532 = relay.TupleGetItem(func_3345_call(), 1)
call_5533 = relay.TupleGetItem(func_3346_call(), 1)
output = relay.Tuple([call_5532,])
output2 = relay.Tuple([call_5533,])
func_5542 = relay.Function([], output)
mod['func_5542'] = func_5542
mod = relay.transform.InferType()(mod)
mutated_mod['func_5542'] = func_5542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5542_call = mutated_mod.get_global_var('func_5542')
call_5543 = func_5542_call()
output = call_5543
func_5544 = relay.Function([], output)
mutated_mod['func_5544'] = func_5544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2743_call = mod.get_global_var('func_2743')
func_2744_call = mutated_mod.get_global_var('func_2744')
call_5562 = relay.TupleGetItem(func_2743_call(), 0)
call_5563 = relay.TupleGetItem(func_2744_call(), 0)
func_2670_call = mod.get_global_var('func_2670')
func_2671_call = mutated_mod.get_global_var('func_2671')
call_5564 = func_2670_call()
call_5565 = func_2670_call()
output = relay.Tuple([call_5562,call_5564,])
output2 = relay.Tuple([call_5563,call_5565,])
func_5571 = relay.Function([], output)
mod['func_5571'] = func_5571
mod = relay.transform.InferType()(mod)
output = func_5571()
func_5572 = relay.Function([], output)
mutated_mod['func_5572'] = func_5572
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5578 = relay.var("var_5578", dtype = "float32", shape = (2, 2, 14))#candidate|5578|(2, 2, 14)|var|float32
uop_5579 = relay.erf(var_5578.astype('float32')) # shape=(2, 2, 14)
output = relay.Tuple([uop_5579,])
output2 = relay.Tuple([uop_5579,])
func_5587 = relay.Function([var_5578,], output)
mod['func_5587'] = func_5587
mod = relay.transform.InferType()(mod)
var_5588 = relay.var("var_5588", dtype = "float32", shape = (2, 2, 14))#candidate|5588|(2, 2, 14)|var|float32
output = func_5587(var_5588)
func_5589 = relay.Function([var_5588], output)
mutated_mod['func_5589'] = func_5589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4458_call = mod.get_global_var('func_4458')
func_4459_call = mutated_mod.get_global_var('func_4459')
call_5591 = relay.TupleGetItem(func_4458_call(), 0)
call_5592 = relay.TupleGetItem(func_4459_call(), 0)
func_2787_call = mod.get_global_var('func_2787')
func_2792_call = mutated_mod.get_global_var('func_2792')
const_5605 = relay.const([[-5.541021,8.484769,-1.674412,-7.325484,-1.394932,4.837510,4.063210,-4.297457,2.767634,1.753753,2.603675,-8.373878,-7.400471,4.160177,-7.456741,2.450906,7.141390,-7.085725,6.538527,-9.314462,-6.270105,2.391197,-0.741636,9.473104,0.306950,-8.367249,4.791730,-8.652939,-0.471654,-2.845450,-9.307290,8.859633,-0.161717,7.624943,-5.110406,7.053917,-5.514092,-7.125858,8.185623,-4.359810,7.205437,1.866450,-4.384894,-5.087415,-7.299797,7.371907,-3.122480,-5.314680,8.238554,4.568420,-1.932796,-6.790956,8.800729,2.133057,5.672076,9.233498,-3.293492,0.406325,6.087306,-4.243737,7.947495,-2.579965,-4.590127]], dtype = "float64")#candidate|5605|(1, 63)|const|float64
var_5606 = relay.var("var_5606", dtype = "float32", shape = (224,))#candidate|5606|(224,)|var|float32
var_5607 = relay.var("var_5607", dtype = "float32", shape = (720,))#candidate|5607|(720,)|var|float32
call_5604 = relay.TupleGetItem(func_2787_call(relay.reshape(const_5605.astype('float64'), [9, 7]), relay.reshape(var_5606.astype('float32'), [224,]), relay.reshape(var_5607.astype('float32'), [720,]), ), 0)
call_5608 = relay.TupleGetItem(func_2792_call(relay.reshape(const_5605.astype('float64'), [9, 7]), relay.reshape(var_5606.astype('float32'), [224,]), relay.reshape(var_5607.astype('float32'), [720,]), ), 0)
output = relay.Tuple([call_5591,call_5604,const_5605,var_5606,var_5607,])
output2 = relay.Tuple([call_5592,call_5608,const_5605,var_5606,var_5607,])
func_5613 = relay.Function([var_5606,var_5607,], output)
mod['func_5613'] = func_5613
mod = relay.transform.InferType()(mod)
mutated_mod['func_5613'] = func_5613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5613_call = mutated_mod.get_global_var('func_5613')
var_5615 = relay.var("var_5615", dtype = "float32", shape = (224,))#candidate|5615|(224,)|var|float32
var_5616 = relay.var("var_5616", dtype = "float32", shape = (720,))#candidate|5616|(720,)|var|float32
call_5614 = func_5613_call(var_5615,var_5616,)
output = call_5614
func_5617 = relay.Function([var_5615,var_5616,], output)
mutated_mod['func_5617'] = func_5617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4183_call = mod.get_global_var('func_4183')
func_4185_call = mutated_mod.get_global_var('func_4185')
call_5619 = relay.TupleGetItem(func_4183_call(), 0)
call_5620 = relay.TupleGetItem(func_4185_call(), 0)
func_5613_call = mod.get_global_var('func_5613')
func_5617_call = mutated_mod.get_global_var('func_5617')
const_5639 = relay.const([[-7.849773,9.443376,-2.260453,-1.971493,3.181423,3.897580,-6.614887,7.003574,0.136702,-5.671723,9.803682,-5.145887,-3.780230,-5.418154,-4.657357,-6.527997,-9.213923,7.147012,3.940691,2.964645,5.413319,-1.089560,1.978214,9.250240,-0.223336,4.289592,-1.581802,5.677925,2.191124,9.738252,1.324432,3.904163,-2.867287,-1.242273,-7.606538,-0.341818,-2.084064,-8.828239,-5.233210,-8.134330,5.853171,-3.502420,3.369329,-9.646316,-7.948808,-0.827439,0.119466,5.167210,7.307079,-2.648355,4.358350,4.961373,9.506845,5.447033,4.373851,1.328506,5.916093,6.425683,6.266010,-9.913040,1.545921,8.955164,-3.942922,-9.106118,-8.205718,2.132486,2.157989,4.874789,-6.474610,-3.624778,-2.173392,-0.272030,-6.092003,-0.444122,-5.301690,0.047386,-8.568349,-8.152044,6.791235,-5.777278,9.437789,6.400787,-1.605035,-9.804186,-5.802062,5.623624,-2.522453,-6.632023,9.064229,-4.974720,5.630049,5.479459,2.558240,-8.262344,0.685967,-3.525559,6.315077,1.362763,4.858358,-0.039252,6.968497,-5.207102,-3.911525,-8.697574,-5.559486,4.509380,-3.119851,1.606315,-8.384035,-9.242697,-8.565870,0.889356,-2.401146,4.007180,-6.696663,0.158993,3.148635,0.798505,7.059226,4.388910,-9.075230,4.417601,-1.202733,-2.053905,2.787436,-8.045746,-4.465558,2.589042,-3.581645,-5.026503,-4.208493,-3.934515,1.774626,8.212347,1.963371,-8.687542,2.694843,-8.910149,-3.718056,6.335613,1.216458,7.684768,8.188449,0.307235,-8.081632,-6.376496,4.577819,-5.875421,-5.290015,7.312520,5.870149,3.892294,-6.756885,-7.687312,2.805356,-5.054042,1.054840,-3.247115,-5.929684,-3.927957,2.832111,8.094634,-6.247528,5.384231,-0.920028,-7.553325,6.442627,-5.678391,-9.877449,-2.822125,-7.092264,-9.152636,6.388036,-4.263947,-1.126915,-1.136639,3.445507,3.354928,3.138363,-4.423371,2.574471,5.609294,0.066580,-2.104372,-6.431853,6.042140,2.833643,-0.194632,-8.357582,-7.930554,-1.001883,-0.917815,2.787309,9.774682,-7.832570,-8.176514,-8.142880,-5.997349,3.330447,6.673392,-9.222313,4.487597,7.206955,-2.310166,-7.824743,-5.528143,8.808777,4.675596,-0.203198,8.756248,-0.376076,1.752926,-4.686818,-5.429244,-6.435237,8.692656,-7.592949,7.611907,3.345157,3.436473,-8.577785,-4.049059,-0.095736,-4.237304]], dtype = "float32")#candidate|5639|(1, 224)|const|float32
var_5640 = relay.var("var_5640", dtype = "float32", shape = (1, 720))#candidate|5640|(1, 720)|var|float32
call_5638 = relay.TupleGetItem(func_5613_call(relay.reshape(const_5639.astype('float32'), [224,]), relay.reshape(var_5640.astype('float32'), [720,]), ), 4)
call_5641 = relay.TupleGetItem(func_5617_call(relay.reshape(const_5639.astype('float32'), [224,]), relay.reshape(var_5640.astype('float32'), [720,]), ), 4)
uop_5644 = relay.acos(var_5640.astype('float32')) # shape=(1, 720)
func_3301_call = mod.get_global_var('func_3301')
func_3304_call = mutated_mod.get_global_var('func_3304')
var_5656 = relay.var("var_5656", dtype = "float32", shape = (324, 1))#candidate|5656|(324, 1)|var|float32
call_5655 = func_3301_call(relay.reshape(var_5656.astype('float32'), [3, 12, 9]))
call_5657 = func_3301_call(relay.reshape(var_5656.astype('float32'), [3, 12, 9]))
output = relay.Tuple([call_5619,call_5638,const_5639,uop_5644,call_5655,var_5656,])
output2 = relay.Tuple([call_5620,call_5641,const_5639,uop_5644,call_5657,var_5656,])
func_5661 = relay.Function([var_5640,var_5656,], output)
mod['func_5661'] = func_5661
mod = relay.transform.InferType()(mod)
var_5662 = relay.var("var_5662", dtype = "float32", shape = (1, 720))#candidate|5662|(1, 720)|var|float32
var_5663 = relay.var("var_5663", dtype = "float32", shape = (324, 1))#candidate|5663|(324, 1)|var|float32
output = func_5661(var_5662,var_5663,)
func_5664 = relay.Function([var_5662,var_5663,], output)
mutated_mod['func_5664'] = func_5664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5314_call = mod.get_global_var('func_5314')
func_5315_call = mutated_mod.get_global_var('func_5315')
call_5693 = relay.TupleGetItem(func_5314_call(), 0)
call_5694 = relay.TupleGetItem(func_5315_call(), 0)
func_3861_call = mod.get_global_var('func_3861')
func_3867_call = mutated_mod.get_global_var('func_3867')
var_5698 = relay.var("var_5698", dtype = "float64", shape = (1056,))#candidate|5698|(1056,)|var|float64
const_5699 = relay.const([3.439856,2.311540,-7.584499,-2.377725,-6.007215,-4.588536,2.406626,-0.606483,-0.300252,0.021093,3.403984,-9.341202,9.893448,-1.781508,-0.191291,-9.210108,-1.312363,8.727781,6.740985,7.712417,-8.965894,-0.807141,6.758963,-9.793507,-3.158073,3.978808,4.965075,-6.861321,-9.465742,3.937009,0.618487,-5.035252,-0.761684,-1.501206,1.031940,9.045080,9.219817,4.132682,-2.949885,7.680371,3.213169,9.546256,-6.914401,2.890950,-3.678890,5.936225,2.272167,-5.326563,4.086390,0.190592,-7.523751,-5.266918,-3.440603,-4.047660,2.995952,2.744373,1.000482,2.625057,-2.443230,-1.669342,5.593880,-2.649270,6.538694,-6.644039,-7.075151,4.022857,-2.681769,-0.879014,-4.788102,-6.187093,-1.608216,-0.241314,-9.091816,9.859330,5.102619,7.070386,3.677827,4.486943,-0.678885,2.345443,0.480431,9.623139,-6.971918,-5.405539,4.925568,-4.444204,-5.634833,9.903710,-1.774013,2.806534,-2.469627,3.306641,0.396354,-0.586898,-5.700825,-6.316923,-9.988369,-4.223089,4.021815,4.164546,8.337704,8.381426,9.569655,-5.791022,5.848402,5.510048,-4.484046,-7.735142,2.832083,-4.842023,-2.082415,7.601545,-9.770637,-9.732346,-5.600993,-7.045991,7.221688,7.889384,-5.467317,0.842003,8.284709,0.429752,0.449142,4.644812,-2.333373,-4.277261,-3.046415,-4.037201,9.292884,0.757620,-7.307370,3.999455,4.787109,-6.686180,-7.725143,0.982099,-5.183552,-1.269061,-4.774014,-8.719089,0.383537,-1.951712,-1.497298,-2.436697,5.061859,7.244084,-8.433240,1.549286,0.457151,2.754756,7.097396,-5.731165,-3.987671,7.748461,-5.897450,6.657125,3.843931,-1.155089,-6.607643,0.126995,-9.063765,-0.286127,-4.769188,-7.179220,2.441330,6.968714,-5.203188,6.534323,-7.669043,-4.025513,-4.242828,-8.512422,7.826100,-5.509911,-8.491385,1.648575,-4.384201,5.269253,7.869046,9.476759,4.105090,-1.326222,-7.839424,-5.095110,-8.663175,5.925258,9.200458,-3.835111,-9.025338,-3.607072,8.962533,8.906637,7.130248,-1.702801,-2.561385,-7.214148,-1.366504,-8.715277,-3.713107,-4.091199,0.159124,7.901649,4.828357,2.234752,-7.453286,-3.905988,6.049822,-0.056588,-8.679947,6.001669,-0.037459,3.974735,-7.181829,5.403416,-9.794652,-3.303609,1.893269,-1.596523,6.640001,2.445541,-1.797247,4.495247,6.903240,-8.605588], dtype = "float32")#candidate|5699|(224,)|const|float32
call_5697 = relay.TupleGetItem(func_3861_call(relay.reshape(var_5698.astype('float64'), [11, 6, 16]), relay.reshape(var_5698.astype('float64'), [11, 6, 16]), relay.reshape(const_5699.astype('float32'), [224,]), relay.reshape(var_5698.astype('float64'), [11, 6, 16]), ), 1)
call_5700 = relay.TupleGetItem(func_3867_call(relay.reshape(var_5698.astype('float64'), [11, 6, 16]), relay.reshape(var_5698.astype('float64'), [11, 6, 16]), relay.reshape(const_5699.astype('float32'), [224,]), relay.reshape(var_5698.astype('float64'), [11, 6, 16]), ), 1)
uop_5705 = relay.exp(call_5693.astype('float32')) # shape=(9, 11, 2)
uop_5707 = relay.exp(call_5694.astype('float32')) # shape=(9, 11, 2)
var_5711 = relay.var("var_5711", dtype = "float32", shape = (9, 11, 2))#candidate|5711|(9, 11, 2)|var|float32
bop_5712 = relay.less_equal(uop_5705.astype('bool'), relay.reshape(var_5711.astype('bool'), relay.shape_of(uop_5705))) # shape=(9, 11, 2)
bop_5715 = relay.less_equal(uop_5707.astype('bool'), relay.reshape(var_5711.astype('bool'), relay.shape_of(uop_5707))) # shape=(9, 11, 2)
func_5314_call = mod.get_global_var('func_5314')
func_5315_call = mutated_mod.get_global_var('func_5315')
call_5718 = relay.TupleGetItem(func_5314_call(), 0)
call_5719 = relay.TupleGetItem(func_5315_call(), 0)
func_58_call = mod.get_global_var('func_58')
func_61_call = mutated_mod.get_global_var('func_61')
var_5723 = relay.var("var_5723", dtype = "uint16", shape = (4, 156))#candidate|5723|(4, 156)|var|uint16
call_5722 = func_58_call(relay.reshape(var_5723.astype('uint16'), [13, 12, 4]), relay.reshape(var_5723.astype('uint16'), [13, 12, 4]), )
call_5724 = func_58_call(relay.reshape(var_5723.astype('uint16'), [13, 12, 4]), relay.reshape(var_5723.astype('uint16'), [13, 12, 4]), )
func_656_call = mod.get_global_var('func_656')
func_660_call = mutated_mod.get_global_var('func_660')
const_5727 = relay.const([-6.920377,-0.320773,6.189424,6.518844,-5.802747,-5.094187,3.743213,0.837677,-7.959309,-6.188788,-0.186539,-3.154748,4.001693,-8.517544,-8.254764,7.903218,-0.930669,1.758301], dtype = "float32")#candidate|5727|(18,)|const|float32
call_5726 = relay.TupleGetItem(func_656_call(relay.reshape(const_5727.astype('float32'), [1, 6, 3]), relay.reshape(call_5722.astype('uint16'), [24, 26]), ), 0)
call_5728 = relay.TupleGetItem(func_660_call(relay.reshape(const_5727.astype('float32'), [1, 6, 3]), relay.reshape(call_5722.astype('uint16'), [24, 26]), ), 0)
func_4278_call = mod.get_global_var('func_4278')
func_4280_call = mutated_mod.get_global_var('func_4280')
var_5736 = relay.var("var_5736", dtype = "float64", shape = (39,))#candidate|5736|(39,)|var|float64
call_5735 = relay.TupleGetItem(func_4278_call(relay.reshape(var_5736.astype('float64'), [39,])), 1)
call_5737 = relay.TupleGetItem(func_4280_call(relay.reshape(var_5736.astype('float64'), [39,])), 1)
func_3078_call = mod.get_global_var('func_3078')
func_3079_call = mutated_mod.get_global_var('func_3079')
call_5745 = relay.TupleGetItem(func_3078_call(), 0)
call_5746 = relay.TupleGetItem(func_3079_call(), 0)
func_3976_call = mod.get_global_var('func_3976')
func_3983_call = mutated_mod.get_global_var('func_3983')
const_5758 = relay.const([6.200367,-8.227394,-5.090754,1.804780,-1.694638,-8.484070,1.032309,-5.063053,1.199011,1.876018,6.681246,3.067847,-6.294189,-8.744777,7.754497,3.436312,-1.348298,6.253935,4.151392,-9.186867,-3.950894,9.278195,3.807116,0.667604,3.128634,-0.586352,7.394034,8.007639,3.170503,9.672699,-0.807783,-6.050567,-6.390840,-5.399979,-0.148283,-1.407830,4.381217,-0.107048,0.668525,2.282363,-6.594091,8.015980,2.094365,9.767060,0.042047,-5.519072,2.968249,-4.950658,-4.630243,8.562243,2.276719,8.889288,8.071764,-7.907171,1.285213,-5.656784,6.151810,0.854274,-2.218640,-2.350079,-9.582024,-1.829685,4.112895,9.155938,6.460793,-2.196597,-9.178474,1.499219,3.339940,-7.288677,0.252687,1.768728,3.634868,-2.040856,6.358599,8.960011,9.474694,-7.631935,-7.029007,-7.460374], dtype = "float32")#candidate|5758|(80,)|const|float32
var_5759 = relay.var("var_5759", dtype = "float64", shape = (192,))#candidate|5759|(192,)|var|float64
var_5760 = relay.var("var_5760", dtype = "float64", shape = (168,))#candidate|5760|(168,)|var|float64
var_5761 = relay.var("var_5761", dtype = "float32", shape = (2, 360))#candidate|5761|(2, 360)|var|float32
call_5757 = relay.TupleGetItem(func_3976_call(relay.reshape(const_5758.astype('float32'), [4, 2, 10]), relay.reshape(var_5759.astype('float64'), [192,]), relay.reshape(var_5760.astype('float64'), [168,]), relay.reshape(call_5697.astype('float32'), [224,]), relay.reshape(var_5761.astype('float32'), [720,]), ), 5)
call_5762 = relay.TupleGetItem(func_3983_call(relay.reshape(const_5758.astype('float32'), [4, 2, 10]), relay.reshape(var_5759.astype('float64'), [192,]), relay.reshape(var_5760.astype('float64'), [168,]), relay.reshape(call_5697.astype('float32'), [224,]), relay.reshape(var_5761.astype('float32'), [720,]), ), 5)
func_5135_call = mod.get_global_var('func_5135')
func_5138_call = mutated_mod.get_global_var('func_5138')
const_5767 = relay.const([3,-3,1,-8,9,4,-2,10,5,1,-2,-5,-6,8,-10,-3,-8,-9,-8,-8,8,8,4,-9,-4,2,-9,-10,2,8,8,6,-10,7,-5,-7,-6,2,-7,-2,1,-8,3,-3,8,8,3,-4,-10,-2,-5,-5,-6,-4,9,-5,-9,9,2,8,5,8,9,-2,-2,-1,3,-9,-4,3,6,-4,-10,-9,-4,4,3,7,1,-3,2,-1,2,4,-10,1,-5,-5,5,9,8,-9,5,-5,5,-1,-3,-2,10,-3,4,-10,-9,4,-6,-5,8,9,2,-10,-3,-6,3,3,5,-6,2,-6,1,-6,4,-5,-7,-4,8,6,6,10,-9,3,-9,-2,8,-1,-9,8,-8,4,7,2,3,-9,-9,8,-1,1,1,8,-1,-10,6,4,3,7,9,7,9,-10,-6,6,1,-7,1,4,6,2,2,-6,-5,4,4,5,9,4,4,-5,7,9,-7,8,5,-5,-8,-1,-6,5,6,5,-5,-3,9,6,-9,-2,8,-2,-1,-9,8,10,-2,-3,-6,6,-9,4,4,-4,7,-1,-7,7,8,7,-5,-1,3,-7,-4,4,-1,-3,-10,-10,-4,-1,2,1,5,7,6,-1,3,9,3,3,2,9,-5,-9,9,-4,-10,-2,-2,7,6,6,-5,7,10,2,-7,4,-1,3,-2,3,-1,-7,4,2,1,1,4,-6,7,-4,10,-8,-10,-2,-7,6,-2,2,8,-7,-1,7,-4,8,2,8,2,2,9,6,-1,-6,7,8,-4,-4,-1,2,7,-1,-4,8,6,-9,6,-1,-8,-9,-8,10,-1,-9,-7,-10,-1,-3,1,-10,-3,-2,-4,7,1,-7,-4,1,1,-10,10,-5,2,-5,-9,-9,-4,1,-5,10,-6,-5,3,-10,7,-5,3,-8,-5,-9,8,7,1,9,-8,-2,-5,-9,-6,-1,8,-1,-5,7,2,4,-5,1,1,-2,7,5,2,10,-2,10,-8,-2,-2,3,-4,5,10,-5,-5,1,-10,6,10,-9,-7,-4,-2,6,-5,9,7,-9,9,9,-9,-6,9,-1,5,1,1,-7,-2,-8,-1,4,-10,-7,7,2,6,-6,-1,-4,-9,10,-2,6,7,1,-2,8,-10,-10,8,-2,4,-1,-7,1,2,7,-6,8,-8,3,-3,-1,-3,9,-4,10,-9,3,8,3,5,5,-2,9,3,-9,3,1,-10,1,-1,4,-2,7,8,1,9,-7,1,2,-7,10,10,10,-2,-8,2,5,6,5,4,-9,1,6,1,-6,1,-10,7,-3,-1,-4,-2,8,-2,3,-10,-9,-8,3,-4,-8,4,6,-8,-10,1,-1,-2,-10,-3,-10,-3,3,7,3,-4,-6,8,10,10,-2,-4,3,-1,2,-4,-6,3,-10,-5,2,3,6,8,9,5,-1,4,5,-7,-1,1,-7,5,5,-2,9,-2,9,10,2,-9,6,-6,-3,10,-3,-1,3,10,6,-4,-9,10,8,8,-7,2,-4,-6,3,-9,5,9,-6,10,2,8,10,-3,-2,-8,-10,4,-1,9,6,-10,-9,-3,-9,8,-6,-5,8,7,-9,-9,-7,10,-5,4,8,4,-3,2,-9,3,9,-4,-4,-7,7,-1,-10,4,2,7,-2,-7,10,-6,10,-6,7,-5,2,5,7,4,9,-3,6,2,4,4,9,-3,-1,-9,1,-3,-6,-2,8,-2,-6,9,6,-1,-1,4,-6,2,-8,-10,-4,1,3,5,-9], dtype = "int64")#candidate|5767|(660,)|const|int64
call_5766 = func_5135_call(relay.reshape(const_5767.astype('int64'), [4, 15, 11]))
call_5768 = func_5135_call(relay.reshape(const_5767.astype('int64'), [4, 15, 11]))
var_5769 = relay.var("var_5769", dtype = "float32", shape = (2, 360))#candidate|5769|(2, 360)|var|float32
bop_5770 = relay.greater_equal(var_5761.astype('bool'), relay.reshape(var_5769.astype('bool'), relay.shape_of(var_5761))) # shape=(2, 360)
var_5774 = relay.var("var_5774", dtype = "uint16", shape = (4, 156))#candidate|5774|(4, 156)|var|uint16
bop_5775 = relay.less(var_5723.astype('bool'), relay.reshape(var_5774.astype('bool'), relay.shape_of(var_5723))) # shape=(4, 156)
bop_5783 = relay.greater_equal(bop_5712.astype('bool'), relay.reshape(var_5711.astype('bool'), relay.shape_of(bop_5712))) # shape=(9, 11, 2)
bop_5786 = relay.greater_equal(bop_5715.astype('bool'), relay.reshape(var_5711.astype('bool'), relay.shape_of(bop_5715))) # shape=(9, 11, 2)
func_3629_call = mod.get_global_var('func_3629')
func_3630_call = mutated_mod.get_global_var('func_3630')
call_5788 = func_3629_call()
call_5789 = func_3629_call()
output = relay.Tuple([call_5697,var_5698,const_5699,call_5718,call_5722,call_5726,const_5727,call_5735,var_5736,call_5745,call_5757,const_5758,var_5759,var_5760,call_5766,const_5767,bop_5770,bop_5775,bop_5783,call_5788,])
output2 = relay.Tuple([call_5700,var_5698,const_5699,call_5719,call_5724,call_5728,const_5727,call_5737,var_5736,call_5746,call_5762,const_5758,var_5759,var_5760,call_5768,const_5767,bop_5770,bop_5775,bop_5786,call_5789,])
func_5790 = relay.Function([var_5698,var_5711,var_5723,var_5736,var_5759,var_5760,var_5761,var_5769,var_5774,], output)
mod['func_5790'] = func_5790
mod = relay.transform.InferType()(mod)
mutated_mod['func_5790'] = func_5790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5790_call = mutated_mod.get_global_var('func_5790')
var_5792 = relay.var("var_5792", dtype = "float64", shape = (1056,))#candidate|5792|(1056,)|var|float64
var_5793 = relay.var("var_5793", dtype = "float32", shape = (9, 11, 2))#candidate|5793|(9, 11, 2)|var|float32
var_5794 = relay.var("var_5794", dtype = "uint16", shape = (4, 156))#candidate|5794|(4, 156)|var|uint16
var_5795 = relay.var("var_5795", dtype = "float64", shape = (39,))#candidate|5795|(39,)|var|float64
var_5796 = relay.var("var_5796", dtype = "float64", shape = (192,))#candidate|5796|(192,)|var|float64
var_5797 = relay.var("var_5797", dtype = "float64", shape = (168,))#candidate|5797|(168,)|var|float64
var_5798 = relay.var("var_5798", dtype = "float32", shape = (2, 360))#candidate|5798|(2, 360)|var|float32
var_5799 = relay.var("var_5799", dtype = "float32", shape = (2, 360))#candidate|5799|(2, 360)|var|float32
var_5800 = relay.var("var_5800", dtype = "uint16", shape = (4, 156))#candidate|5800|(4, 156)|var|uint16
call_5791 = func_5790_call(var_5792,var_5793,var_5794,var_5795,var_5796,var_5797,var_5798,var_5799,var_5800,)
output = call_5791
func_5801 = relay.Function([var_5792,var_5793,var_5794,var_5795,var_5796,var_5797,var_5798,var_5799,var_5800,], output)
mutated_mod['func_5801'] = func_5801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5834 = relay.var("var_5834", dtype = "float32", shape = (5, 9, 11))#candidate|5834|(5, 9, 11)|var|float32
uop_5835 = relay.erf(var_5834.astype('float32')) # shape=(5, 9, 11)
output = uop_5835
output2 = uop_5835
func_5837 = relay.Function([var_5834,], output)
mod['func_5837'] = func_5837
mod = relay.transform.InferType()(mod)
var_5838 = relay.var("var_5838", dtype = "float32", shape = (5, 9, 11))#candidate|5838|(5, 9, 11)|var|float32
output = func_5837(var_5838)
func_5839 = relay.Function([var_5838], output)
mutated_mod['func_5839'] = func_5839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4458_call = mod.get_global_var('func_4458')
func_4459_call = mutated_mod.get_global_var('func_4459')
call_5841 = relay.TupleGetItem(func_4458_call(), 0)
call_5842 = relay.TupleGetItem(func_4459_call(), 0)
func_3485_call = mod.get_global_var('func_3485')
func_3487_call = mutated_mod.get_global_var('func_3487')
call_5848 = relay.TupleGetItem(func_3485_call(), 0)
call_5849 = relay.TupleGetItem(func_3487_call(), 0)
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_5856 = func_4514_call()
call_5857 = func_4514_call()
func_955_call = mod.get_global_var('func_955')
func_958_call = mutated_mod.get_global_var('func_958')
const_5859 = relay.const([6.049014,1.754166,1.184054,2.710063,-0.287229,-2.053256,9.672869,0.376462,-0.344681,8.111256,7.567429,5.706746,-6.695770,1.731887,-7.375385,0.837133,-5.361530,-4.248464,-0.807355,5.704942,4.591379,-8.116193,-0.457261,6.541576,-4.471014,6.370875,-7.612291,5.003147,1.286058,-2.603307,2.659376,1.806095,-5.026772,-9.153723,9.957668,9.657760,1.499162,-1.151187,-7.495159,4.489066,-2.485645,-3.855375,3.143996,7.467881,-7.411472,-1.620326,3.179437,-5.021607,0.538726,-3.716376,-1.318591,0.128933,4.945294,9.137451,-8.080016,8.385164,8.952307,9.811525,6.788023,1.172480,-6.010594,-4.567782,9.293424,9.004562,5.007428,-3.192832,7.858074,1.942279,3.184789,-1.919580,0.517746,-6.661540,-1.347010,-6.668376,5.465355,9.304247,3.079487,0.746825,-5.808640,-2.530422,8.122100,-2.186720,-6.971691,5.276423,-9.574647,0.442894,3.591402,3.884762,0.724015,-6.520599], dtype = "float32")#candidate|5859|(90,)|const|float32
call_5858 = func_955_call(relay.reshape(const_5859.astype('float32'), [10, 9]))
call_5860 = func_955_call(relay.reshape(const_5859.astype('float32'), [10, 9]))
output = relay.Tuple([call_5841,call_5848,call_5856,call_5858,const_5859,])
output2 = relay.Tuple([call_5842,call_5849,call_5857,call_5860,const_5859,])
func_5899 = relay.Function([], output)
mod['func_5899'] = func_5899
mod = relay.transform.InferType()(mod)
output = func_5899()
func_5900 = relay.Function([], output)
mutated_mod['func_5900'] = func_5900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3345_call = mod.get_global_var('func_3345')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_5906 = relay.TupleGetItem(func_3345_call(), 1)
call_5907 = relay.TupleGetItem(func_3346_call(), 1)
output = relay.Tuple([call_5906,])
output2 = relay.Tuple([call_5907,])
func_5927 = relay.Function([], output)
mod['func_5927'] = func_5927
mod = relay.transform.InferType()(mod)
output = func_5927()
func_5928 = relay.Function([], output)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5997 = relay.const([[[-9,-6,-6,5,2,-5,6,-7,-6,-7,-2,7,9,3,-3,5],[-1,-2,-4,10,-10,6,-1,-9,9,-3,6,-9,6,-2,-6,-10],[6,8,6,5,-3,4,-2,-2,10,4,-7,-2,6,9,-10,10],[8,7,6,-4,3,-2,2,7,-1,-1,-5,-9,-8,2,-7,6],[-10,1,-5,4,2,2,-2,-7,2,-1,-2,8,1,8,2,-3],[-4,-10,-1,4,10,9,-5,-7,6,-3,-2,-8,1,-1,7,7],[10,2,-2,5,4,-6,-10,-7,-4,-5,-3,7,9,9,2,9],[3,-5,10,7,-6,7,7,-4,-6,5,-2,-5,2,8,10,-8]],[[-1,-6,-5,-6,-5,8,-9,-2,3,-4,2,7,5,-8,3,8],[10,-6,8,-9,7,6,2,-10,-7,-10,-8,-3,-4,-6,8,2],[9,-7,2,-9,-3,-6,2,8,2,8,-8,-1,-1,-9,2,-9],[1,-5,1,-3,-8,7,-5,-1,6,-9,2,5,8,4,-9,-8],[-10,5,-6,6,-9,7,-10,5,10,10,-1,-7,1,8,6,-2],[8,8,10,-1,8,5,6,4,1,8,-9,2,6,-1,5,-9],[-3,-8,-2,1,4,-8,5,6,5,1,-9,-5,-2,-7,2,-1],[-4,9,5,6,8,-2,5,1,4,-6,-5,-7,-7,-4,-10,-5]],[[4,-8,4,10,7,4,-2,4,7,8,-8,8,7,6,9,-2],[5,-1,4,-2,-3,-5,-5,2,8,3,3,3,3,9,-1,2],[1,-9,-5,7,9,-7,-2,6,7,8,-1,3,-10,-8,3,9],[5,8,8,10,-9,4,5,1,-1,5,-10,6,1,3,3,-6],[9,-10,9,-6,6,10,-4,-5,-2,5,-9,3,6,-3,-7,9],[5,5,-9,4,3,-9,7,-1,6,-2,-8,6,3,7,10,-8],[-5,-1,-3,2,-9,4,6,-4,3,7,4,-7,5,-7,-10,-10],[-7,9,-5,8,1,7,-7,-10,-10,-4,-2,-9,5,-4,2,-9]],[[-6,-9,-9,-3,8,8,3,-8,6,-5,-2,-9,-2,-1,-6,3],[7,3,6,-6,5,2,3,9,1,-10,-10,-8,-2,7,7,2],[-10,2,8,-2,2,-1,3,4,5,5,-5,-8,-3,-4,6,6],[8,4,8,1,2,-4,-1,7,6,-1,-6,-7,5,1,7,9],[-5,-5,3,-2,-5,7,9,-2,-9,-4,-2,-6,-2,2,4,9],[8,-4,-10,-3,-5,1,-8,8,5,-4,5,-8,7,-8,-1,10],[-1,-10,1,5,6,9,-8,5,1,2,9,2,-8,-7,-7,8],[-9,10,2,5,1,5,-5,3,-10,-9,-3,-5,1,-1,8,10]],[[-8,7,-6,-1,10,-6,-6,10,-4,-5,10,-9,3,-3,9,-10],[4,10,-2,6,-7,-9,-1,-9,8,3,7,2,4,-2,-1,-2],[10,6,3,7,4,2,-5,-2,6,-2,9,-4,-1,6,9,-8],[1,2,-6,3,5,7,6,-2,3,9,9,-5,-10,-2,-10,-9],[-4,3,9,2,-1,1,-6,-2,-8,3,4,8,8,6,-4,-6],[-5,-10,7,8,1,-7,-4,-8,-2,10,8,4,1,3,-7,4],[10,-6,-6,-6,4,3,-6,10,1,-6,9,-4,-1,6,6,10],[3,-4,2,7,-5,6,3,-7,-6,-3,6,7,-4,7,-2,5]]], dtype = "int16")#candidate|5997|(5, 8, 16)|const|int16
const_5998 = relay.const([[[-8,8,5,-3,10,-8,2,3,6,-3,7,7,-7,4,-4,-9],[-10,-10,-2,9,-7,-9,9,-4,-1,-9,6,10,6,-9,9,-1],[-6,-3,5,2,-10,-8,-3,5,9,2,4,1,10,-8,-9,-7],[1,-3,1,-8,-6,-10,-1,1,-1,-9,9,-2,-1,7,1,-5],[1,1,-5,2,7,8,-7,2,-6,-10,1,3,2,2,-3,8],[-6,5,-9,-1,-9,6,2,1,-9,2,-2,-1,-4,-8,9,10],[-4,-5,3,9,8,5,3,7,-6,-1,-5,-5,-7,-7,-10,2],[-3,-8,6,6,3,2,-9,10,-10,-6,-5,-4,-3,-9,-6,-6]],[[9,-5,1,8,7,4,1,-1,-6,3,-7,6,-6,2,7,2],[4,-10,3,1,-8,-3,-8,9,5,-7,-7,-4,-7,6,8,9],[-9,7,9,-9,-2,7,1,3,-5,8,-3,-6,1,-4,4,-1],[6,-5,5,-1,8,-8,-3,-7,-3,-2,-7,7,-2,9,6,-1],[5,7,-9,8,8,8,-6,10,10,-6,-10,-9,5,2,-5,6],[-6,1,-5,5,-6,5,-10,1,-6,-8,-1,-3,-4,-10,6,10],[-2,7,1,-1,7,-9,10,8,9,4,-5,-8,10,8,7,7],[-9,5,10,-9,1,-5,-9,6,-1,10,7,-4,8,-4,10,-4]],[[-8,10,-6,-7,8,7,5,7,-4,-3,-9,-8,1,-3,3,-1],[-8,-1,2,1,-7,7,-2,1,5,6,3,10,6,-4,-3,-2],[-5,-7,-8,-7,9,-1,10,8,6,-7,8,2,3,4,10,-8],[6,2,-6,-1,2,-5,-1,-6,-6,5,-4,-7,2,4,-7,9],[-8,7,9,-8,-9,-3,-5,-9,-4,5,3,7,-3,-9,5,-4],[-8,-8,1,10,-8,-2,2,4,-10,-5,10,10,7,4,9,5],[-8,-6,9,-1,-7,-8,8,6,-10,1,-7,3,-10,3,4,-7],[-1,3,9,6,9,-4,7,-5,2,-7,6,-10,7,-8,-3,5]],[[-9,5,4,-3,-7,-10,-8,-3,10,9,10,-2,5,1,-6,6],[-5,-3,-2,4,1,6,-10,10,-9,-5,2,-7,9,7,-4,-1],[3,10,10,7,-7,-3,-1,4,-3,8,-6,2,-3,-3,1,-6],[7,2,-9,9,1,10,6,-10,4,-4,-3,8,-7,-4,4,-5],[-7,10,-7,1,-2,1,-4,-7,-1,1,-1,-1,-9,-9,7,5],[4,-10,-8,-8,-2,8,-10,-6,-10,-4,-5,9,1,8,3,-2],[3,-5,-4,1,4,6,6,4,1,7,2,-4,4,-1,-7,4],[-6,1,6,10,3,1,-9,7,4,8,2,8,-3,-4,3,-2]],[[-9,-1,-9,4,-8,-3,-1,-9,-6,10,8,-3,7,5,7,9],[4,-2,4,3,2,-8,-8,-7,-3,-2,7,6,-5,3,10,-10],[5,-7,10,10,-8,5,5,-10,-1,3,-2,-3,10,10,10,-4],[4,4,1,-5,2,5,-4,-8,-9,-4,-8,7,2,9,9,-9],[-5,8,6,-5,5,-6,6,5,-4,8,7,1,-5,3,2,-1],[-4,-4,-4,9,-10,-10,8,4,6,4,-9,3,3,-2,-8,3],[1,2,-6,-5,-5,-5,-10,-5,-2,10,-5,-7,-8,5,-9,-10],[6,6,-3,10,-5,3,5,2,8,-9,4,3,-5,10,7,-4]]], dtype = "int16")#candidate|5998|(5, 8, 16)|const|int16
bop_5999 = relay.bitwise_or(const_5997.astype('int16'), relay.reshape(const_5998.astype('int16'), relay.shape_of(const_5997))) # shape=(5, 8, 16)
var_6017 = relay.var("var_6017", dtype = "int16", shape = (5, 8, 16))#candidate|6017|(5, 8, 16)|var|int16
bop_6018 = relay.add(const_5998.astype('uint16'), relay.reshape(var_6017.astype('uint16'), relay.shape_of(const_5998))) # shape=(5, 8, 16)
output = relay.Tuple([bop_5999,bop_6018,])
output2 = relay.Tuple([bop_5999,bop_6018,])
func_6023 = relay.Function([var_6017,], output)
mod['func_6023'] = func_6023
mod = relay.transform.InferType()(mod)
var_6024 = relay.var("var_6024", dtype = "int16", shape = (5, 8, 16))#candidate|6024|(5, 8, 16)|var|int16
output = func_6023(var_6024)
func_6025 = relay.Function([var_6024], output)
mutated_mod['func_6025'] = func_6025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3880_call = mod.get_global_var('func_3880')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_6030 = relay.TupleGetItem(func_3880_call(), 0)
call_6031 = relay.TupleGetItem(func_3881_call(), 0)
output = call_6030
output2 = call_6031
func_6036 = relay.Function([], output)
mod['func_6036'] = func_6036
mod = relay.transform.InferType()(mod)
mutated_mod['func_6036'] = func_6036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6036_call = mutated_mod.get_global_var('func_6036')
call_6037 = func_6036_call()
output = call_6037
func_6038 = relay.Function([], output)
mutated_mod['func_6038'] = func_6038
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6044 = relay.var("var_6044", dtype = "int16", shape = (11, 2, 13))#candidate|6044|(11, 2, 13)|var|int16
var_6045 = relay.var("var_6045", dtype = "int16", shape = (11, 2, 13))#candidate|6045|(11, 2, 13)|var|int16
bop_6046 = relay.not_equal(var_6044.astype('bool'), relay.reshape(var_6045.astype('bool'), relay.shape_of(var_6044))) # shape=(11, 2, 13)
output = bop_6046
output2 = bop_6046
F = relay.Function([var_6044,var_6045,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6044,var_6045,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

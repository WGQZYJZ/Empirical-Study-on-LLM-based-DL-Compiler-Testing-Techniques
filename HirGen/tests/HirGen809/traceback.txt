==========mod==========
#[version = "0.0.5"]
def @func_1358(%var_1283: Tensor[(16, 13, 11), uint32]) -> (Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %1 = reshape(%0, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
  %3 = cast(meta[relay.Constant][2] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %4 = reshape(%2, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
  %5 = reshape(%3, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
  %6 = @func_1229(%4, %5) /* ty=(Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %7 = cast(meta[relay.Constant][3] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %8 = reshape(%7, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float32] */;
  %9 = @func_755(%8) /* ty=(Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %12 = reshape(%10, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
  %13 = reshape(%11, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
  %14 = @func_1229(%12, %13) /* ty=(Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %15 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 13, 11), uint32] */, dtype="uint32") /* ty=Tensor[(16, 13, 11), uint32] */;
  %16 = shape_of(%var_1283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%var_1283, dtype="uint32") /* ty=Tensor[(16, 13, 11), uint32] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %19 = bitwise_or(%17, %18) /* ty=Tensor[(16, 13, 11), uint32] */;
  %20 = cast(%19, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %21 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(16, 13, 11), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 13, 11), uint32] */, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %24 = @func_142(%1) /* ty=Tensor[(13, 3, 13), float64] */;
  %25 = %6.0;
  %26 = %9.0;
  %27 = %14.1;
  %28 = mod(%22, %23) /* ty=Tensor[(16, 13, 11), float64] */;
  (%24, meta[relay.Constant][0] /* ty=Tensor[(507), float64] */, %25, meta[relay.Constant][1] /* ty=Tensor[(7, 6), float32] */, meta[relay.Constant][2] /* ty=Tensor[(546), float32] */, %26, meta[relay.Constant][3] /* ty=Tensor[(6), float32] */, %27, %28)
}

def @func_11741() -> (Tensor[(8, 8, 1), float64],) {
  %29 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  (%29,)
}

def @func_10311() -> Tensor[(8, 8, 1), float64] {
  @func_10255() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_7098(%var_7084: Tensor[(2304), float32], %var_7085: Tensor[(42), float32]) -> (Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) {
  %30 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 1, 2), float32] */, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %31 = cast(%var_7084, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %32 = cast(%var_7085, dtype="float32") /* ty=Tensor[(42), float32] */;
  %33 = reshape(%31, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %34 = reshape(%32, newshape=[14, 3]) /* ty=Tensor[(14, 3), float32] */;
  %35 = @func_1854(%33, %34) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(13, 3, 13), float64], Tensor[(14, 3), float32], Tensor[(91, 6), float32]) */;
  %36 = log(%30) /* ty=Tensor[(12, 1, 2), float32] */;
  %37 = %35.3;
  (%36, %37, %var_7084, %var_7085)
}

def @func_15007() -> (Tensor[(8, 8, 1), float64],) {
  %38 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
  %39 = %38.1;
  (%39,)
}

def @func_15197() -> Tensor[(126), float32] {
  %40 = @func_14478() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(126), float32]) */;
  %40.1
}

def @func_12675() -> Tensor[(8, 8, 1), float64] {
  @func_11611() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_10704(%var_10682: Tensor[(99), float32], %var_10685: Tensor[(36), uint64]) -> (Tensor[(8, 8, 1), float64], Tensor[(11, ?, 9), float32], Tensor[(99), float32], Tensor[(2, 3, 6), uint64], Tensor[(36), uint64]) {
  %41 = cast(%var_10682, dtype="float32") /* ty=Tensor[(99), float32] */;
  %42 = reshape(%41, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
  %43 = cast(%var_10685, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %44 = cast(%var_10685, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %45 = reshape(%43, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), uint64] */;
  %46 = reshape(%44, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), uint64] */;
  %47 = @func_3994(%45, %46) /* ty=(Tensor[(2, 3, 6), uint64],) */;
  %48 = @func_10311() /* ty=Tensor[(8, 8, 1), float64] */;
  %49 = @func_3883(%42) /* ty=Tensor[(11, ?, 9), float32] */;
  %50 = %47.0;
  (%48, %49, %var_10682, %50, %var_10685)
}

def @func_12407(%var_12390: Tensor[(2288), uint32], %var_12397: Tensor[(99, 1), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(2, 3, 6), uint64], Tensor[(99, 1), float32], Tensor[(36), uint64]) {
  %51 = cast(%var_12390, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
  %52 = reshape(%51, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
  %53 = @func_1358(%52) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
  %54 = cast(%var_12397, dtype="float32") /* ty=Tensor[(99, 1), float32] */;
  %55 = cast(meta[relay.Constant][6] /* ty=Tensor[(36), uint64] */, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %56 = reshape(%54, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %57 = reshape(%55, newshape=[36]) /* ty=Tensor[(36), uint64] */;
  %58 = @func_10704(%56, %57) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(11, ?, 9), float32], Tensor[(99), float32], Tensor[(2, 3, 6), uint64], Tensor[(36), uint64]) */;
  %59 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
  %60 = %53.2;
  %61 = %58.3;
  (%59, %60, %var_12390, %61, %var_12397, meta[relay.Constant][6] /* ty=Tensor[(36), uint64] */)
}

def @func_8501(%var_8473: Tensor[(15, 2, 5), float32], %var_8490: Tensor[(507, 1), float64], %var_8491: int64, %var_8495: Tensor[(99), float32]) -> (Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) {
  %62 = cast(%var_8473, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
  %63 = cast(%var_8490, dtype="float64") /* ty=Tensor[(507, 1), float64] */;
  %64 = cast(%var_8491, dtype="int64") /* ty=int64 */;
  %65 = cast(%var_8490, dtype="float64") /* ty=Tensor[(507, 1), float64] */;
  %66 = reshape(%63, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %67 = reshape(%64, newshape=[]) /* ty=int64 */;
  %68 = reshape(%65, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %69 = @func_5342(%66, %67, %68) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
  %70 = cast(meta[relay.Constant][7] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %71 = cast(%var_8495, dtype="float32") /* ty=Tensor[(99), float32] */;
  %72 = reshape(%70, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), float64] */;
  %73 = reshape(%71, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %74 = @func_8109(%72, %73) /* ty=(Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) */;
  %75 = exp(%62) /* ty=Tensor[(15, 2, 5), float32] */;
  %76 = %69.1;
  %77 = %74.1;
  (%75, %76, %var_8490, %var_8491, %77, meta[relay.Constant][7] /* ty=Tensor[(160), float64] */, %var_8495)
}

def @func_1229(%var_1196: Tensor[(3, 1, 14), float32], %var_1197: Tensor[(3, 13, 14), float32]) -> (Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) {
  %78 = cast(%var_1196, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
  %79 = cast(%var_1197, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %80 = cast(meta[relay.Constant][8] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %81 = reshape(%80, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %82 = greater(%78, %79) /* ty=Tensor[(3, 13, 14), bool] */;
  %83 = @func_142(%81) /* ty=Tensor[(13, 3, 13), float64] */;
  (%82, %83, meta[relay.Constant][8] /* ty=Tensor[(507), float64] */)
}

def @func_10466() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) {
  %84 = @func_10255() /* ty=Tensor[(8, 8, 1), float64] */;
  %85 = @func_10255() /* ty=Tensor[(8, 8, 1), float64] */;
  (%84, %85)
}

def @func_13717() -> (Tensor[(8, 8, 1), float64],) {
  %86 = @func_12675() /* ty=Tensor[(8, 8, 1), float64] */;
  (%86,)
}

def @func_12208() -> Tensor[(8, 8, 1), float64] {
  @func_10641() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_5041(%var_5028: Tensor[(10, 14, 12), float64], %var_5032: Tensor[(6), float32]) -> (Tensor[(10, 14, 12), float64], Tensor[(507), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64]) {
  %87 = cast(%var_5028, dtype="float64") /* ty=Tensor[(10, 14, 12), float64] */;
  %88 = cast(%var_5032, dtype="float32") /* ty=Tensor[(6), float32] */;
  %89 = reshape(%88, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float32] */;
  %90 = @func_755(%89) /* ty=(Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %91 = %90.2;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(507), float64] */;
  %93 = reshape(%92, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %94 = erf(%87) /* ty=Tensor[(10, 14, 12), float64] */;
  %95 = @func_142(%93) /* ty=Tensor[(13, 3, 13), float64] */;
  (%94, %91, %var_5032, %95)
}

def @func_11335() -> (Tensor[(8, 8, 1), float64],) {
  %96 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  (%96,)
}

def @func_11585() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) {
  %97 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %98 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %99 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %100 = %97.0;
  %101 = %98.0;
  %102 = %99.1;
  (%100, %101, %102)
}

def @func_12374() -> (Tensor[(8, 8, 1), float64],) {
  %103 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  (%103,)
}

def @func_13675() -> (Tensor[(8, 8, 1), float64], Tensor[(99), float32]) {
  %104 = @func_11061() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %105 = %104.0;
  %106 = @func_12550() /* ty=Tensor[(99), float32] */;
  (%105, %106)
}

def @func_8314(%var_8215: Tensor[(12, 6, 12), float32], %var_8224: Tensor[(2304), float32], %var_8225: Tensor[(14, 3), float32], %var_8260: Tensor[(1680), float64], %var_8261: Tensor[(135), bool], %var_8297: Tensor[(12, 6, 12), uint32]) -> (Tensor[(42), float32], Tensor[(2304), float32], Tensor[(14, 3), float32], Tensor[(12, 6, 12), bool], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(7, 6), float32], Tensor[(8, 286), uint32], Tensor[(13, 3, 13), float64], Tensor[(12, 6, 12), int32]) {
  %107 = cast(%var_8224, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %108 = cast(%var_8225, dtype="float32") /* ty=Tensor[(14, 3), float32] */;
  %109 = reshape(%107, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %110 = reshape(%108, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %111 = @func_7098(%109, %110) /* ty=(Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %112 = cast(%var_8215, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
  %113 = log(%112) /* ty=Tensor[(12, 6, 12), float32] */;
  %114 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 6, 12), float32] */, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
  %115 = shape_of(%113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%113, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %118 = cast(meta[relay.Constant][10] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %119 = cast(meta[relay.Constant][10] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %120 = cast(%var_8260, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %121 = cast(%var_8261, dtype="bool") /* ty=Tensor[(135), bool] */;
  %122 = reshape(%118, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %123 = reshape(%119, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %124 = reshape(%120, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %125 = reshape(%121, newshape=[135]) /* ty=Tensor[(135), bool] */;
  %126 = @func_6152(%122, %123, %124, %125) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) */;
  %127 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 286), uint32] */, dtype="uint32") /* ty=Tensor[(8, 286), uint32] */;
  %128 = reshape(%127, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
  %129 = @func_1358(%128) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
  %130 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 286), uint32] */, dtype="uint32") /* ty=Tensor[(8, 286), uint32] */;
  %131 = reshape(%130, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
  %132 = @func_1358(%131) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
  %133 = cast(%var_8215, dtype="uint32") /* ty=Tensor[(12, 6, 12), uint32] */;
  %134 = shape_of(%113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%113, dtype="uint32") /* ty=Tensor[(12, 6, 12), uint32] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %137 = bitwise_or(%135, %136) /* ty=Tensor[(12, 6, 12), uint32] */;
  %138 = cast(%var_8297, dtype="int32") /* ty=Tensor[(12, 6, 12), int32] */;
  %139 = shape_of(%137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%137, dtype="int32") /* ty=Tensor[(12, 6, 12), int32] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %142 = %111.3;
  %143 = greater_equal(%116, %117) /* ty=Tensor[(12, 6, 12), bool] */;
  %144 = %126.4;
  %145 = %129.3;
  %146 = %132.0;
  %147 = bitwise_and(%140, %141) /* ty=Tensor[(12, 6, 12), int32] */;
  (%142, %var_8224, %var_8225, %143, %144, meta[relay.Constant][10] /* ty=Tensor[(1920), float64] */, %var_8260, %var_8261, %145, meta[relay.Constant][11] /* ty=Tensor[(8, 286), uint32] */, %146, %147)
}

def @func_7692(%var_7669: Tensor[(12, 2, 10), int8]) -> (Tensor[(12, 2, 10), int8], Tensor[(11, ?, 9), float32], Tensor[(99), float32]) {
  %148 = cast(%var_7669, dtype="int8") /* ty=Tensor[(12, 2, 10), int8] */;
  %149 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(12, 2, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 2, 10), int8] */, dtype="int8") /* ty=Tensor[(12, 2, 10), int8] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %152 = cast(meta[relay.Constant][13] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %153 = reshape(%152, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
  %154 = logical_xor(%150, %151) /* ty=Tensor[(12, 2, 10), int8] */;
  %155 = @func_3883(%153) /* ty=Tensor[(11, ?, 9), float32] */;
  (%154, %155, meta[relay.Constant][13] /* ty=Tensor[(99), float32] */)
}

def @func_11479() -> Tensor[(8, 8, 1), float32] {
  %156 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %156.0
}

def @func_13833() -> Tensor[(8, 8, 1), float64] {
  %157 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %157.0
}

def @func_13523() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) {
  %158 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
  %159 = @func_13025() /* ty=Tensor[(8, 8, 1), float64] */;
  %160 = %158.1;
  (%159, %160)
}

def @func_8840(%var_8823: Tensor[(3, 14, 3), float32]) -> (Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) {
  %161 = cast(%var_8823, dtype="float32") /* ty=Tensor[(3, 14, 3), float32] */;
  %162 = cast(meta[relay.Constant][14] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %163 = reshape(%162, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), int8] */;
  %164 = @func_7692(%163) /* ty=(Tensor[(12, 2, 10), int8], Tensor[(11, ?, 9), float32], Tensor[(99), float32]) */;
  %165 = cast(meta[relay.Constant][15] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %166 = reshape(%165, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %167 = atanh(%161) /* ty=Tensor[(3, 14, 3), float32] */;
  %168 = %164.0;
  %169 = @func_142(%166) /* ty=Tensor[(13, 3, 13), float64] */;
  (%167, %168, meta[relay.Constant][14] /* ty=Tensor[(240), int8] */, %169, meta[relay.Constant][15] /* ty=Tensor[(507), float64] */)
}

def @func_14459() -> (Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) {
  %170 = @func_13280() /* ty=(Tensor[(8, 8, 8), int16],) */;
  %171 = @func_12374() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %172 = %170.0;
  %173 = %171.0;
  (%172, %173)
}

def @func_1854(%var_1830: Tensor[(12, 12, 16), float32], %var_1844: Tensor[(14, 3), float32]) -> (Tensor[(12, 12, 16), float32], Tensor[(13, 3, 13), float64], Tensor[(14, 3), float32], Tensor[(91, 6), float32]) {
  %174 = cast(%var_1830, dtype="float32") /* ty=Tensor[(12, 12, 16), float32] */;
  %175 = cast(%var_1844, dtype="float32") /* ty=Tensor[(14, 3), float32] */;
  %176 = cast(meta[relay.Constant][16] /* ty=Tensor[(91, 6), float32] */, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
  %177 = reshape(%175, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
  %178 = reshape(%176, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
  %179 = @func_1229(%177, %178) /* ty=(Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %180 = acosh(%174) /* ty=Tensor[(12, 12, 16), float32] */;
  %181 = %179.1;
  (%180, %181, %var_1844, meta[relay.Constant][16] /* ty=Tensor[(91, 6), float32] */)
}

def @func_12932(%var_12916: Tensor[(3, 180), uint64]) -> (Tensor[(8, 8, 1), float64], Tensor[(3, 180), float32]) {
  %182 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %183 = @func_12658() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) */;
  %184 = %183.1;
  %185 = cast(%var_12916, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(2), int32] */;
  %187 = cast(%184, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %189 = %182.0;
  %190 = mod(%187, %188) /* ty=Tensor[(3, 180), float32] */;
  (%189, %190)
}

def @func_10604(%var_10598: Tensor[(8, 5, 1), float64]) -> Tensor[(8, 5, 1), float64] {
  %191 = cast(%var_10598, dtype="float64") /* ty=Tensor[(8, 5, 1), float64] */;
  exp(%191) /* ty=Tensor[(8, 5, 1), float64] */
}

def @func_13631() -> (Tensor[(8, 8, 1), float64],) {
  %192 = @func_11335() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %193 = %192.0;
  (%193,)
}

def @func_11149() -> (Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) {
  %194 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %195 = %194.0;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
  %197 = cast(meta[relay.Constant][17] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %198 = cast(meta[relay.Constant][18] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %199 = reshape(%197, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %200 = reshape(%198, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %201 = @func_7098(%199, %200) /* ty=(Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %202 = sinh(%196) /* ty=Tensor[(8, 8, 1), float32] */;
  %203 = %201.0;
  (%202, %203, meta[relay.Constant][17] /* ty=Tensor[(2304), float32] */, meta[relay.Constant][18] /* ty=Tensor[(42), float32] */)
}

def @func_12253(%var_12241: Tensor[(160, 1), float64], %var_12242: Tensor[(99), float32], %var_12247: Tensor[(507), float64]) -> (Tensor[(8, 8, 1), float64], Tensor[(99), float32], Tensor[(160, 1), float64], Tensor[(99), float32], int64, Tensor[(507), float64], Tensor[(135), bool]) {
  %204 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %205 = cast(%var_12241, dtype="float64") /* ty=Tensor[(160, 1), float64] */;
  %206 = cast(%var_12242, dtype="float32") /* ty=Tensor[(99), float32] */;
  %207 = reshape(%205, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), float64] */;
  %208 = reshape(%206, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %209 = @func_8109(%207, %208) /* ty=(Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) */;
  %210 = cast(%var_12247, dtype="float64") /* ty=Tensor[(507), float64] */;
  %211 = %209.4;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(99), float32] */;
  %213 = cast(meta[relay.Constant][19] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %214 = reshape(%210, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %215 = reshape(%212, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %216 = reshape(%213, newshape=[45, 3]) /* ty=Tensor[(45, 3), bool] */;
  %217 = @func_9993(%214, %215, %216) /* ty=(Tensor[(8, 8, 1), float32], Tensor[(3, 16, 99), float32], Tensor[(507), float64], int64, Tensor[(507), float64], Tensor[(972), float32], Tensor[(25, 6), float32], Tensor[(99), float32], Tensor[(10, 16, 12), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(45, 3), bool]) */;
  %218 = %204.0;
  %219 = %217.3;
  (%218, %211, %var_12241, %var_12242, %219, %var_12247, meta[relay.Constant][19] /* ty=Tensor[(135), bool] */)
}

def @func_9935() -> (Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) {
  %220 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  %221 = cast(%220, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
  %222 = cast(meta[relay.Constant][20] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %223 = reshape(%222, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %224 = sigmoid(%221) /* ty=Tensor[(8, 8, 1), float32] */;
  %225 = @func_7653(%223) /* ty=Tensor[(7, 2, 9), float32] */;
  (%224, %225, meta[relay.Constant][20] /* ty=Tensor[(126), float32] */)
}

def @func_14701() -> (Tensor[(2, 5, 3), float32], Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) {
  %226 = @func_14637() /* ty=(Tensor[(2, 5, 3), float32],) */;
  %227 = @func_13280() /* ty=(Tensor[(8, 8, 8), int16],) */;
  %228 = %226.0;
  %229 = %227.0;
  %230 = @func_11611() /* ty=Tensor[(8, 8, 1), float64] */;
  (%228, %229, %230)
}

def @func_11599() -> Tensor[(8, 8, 1), float64] {
  @func_9857() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_12608() -> (Tensor[(13, 3, 13), float64],) {
  %231 = @func_10586() /* ty=(Tensor[(7, 2, 9), float32], Tensor[(13, 3, 13), float64]) */;
  %232 = %231.1;
  (%232,)
}

def @func_14786(%var_14750: Tensor[(99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(36), uint64], Tensor[(2288), uint32], Tensor[(99), float32], Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(8, 8, 1), float64]) {
  %233 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
  %234 = cast(meta[relay.Constant][21] /* ty=Tensor[(2288), uint32] */, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
  %235 = cast(%var_14750, dtype="float32") /* ty=Tensor[(99), float32] */;
  %236 = reshape(%234, newshape=[2288]) /* ty=Tensor[(2288), uint32] */;
  %237 = reshape(%235, newshape=[99, 1]) /* ty=Tensor[(99, 1), float32] */;
  %238 = @func_12407(%236, %237) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(2, 3, 6), uint64], Tensor[(99, 1), float32], Tensor[(36), uint64]) */;
  %239 = cast(meta[relay.Constant][21] /* ty=Tensor[(2288), uint32] */, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
  %240 = reshape(%239, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
  %241 = @func_1358(%240) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
  %242 = %233.0;
  %243 = %238.5;
  %244 = @func_11944() /* ty=Tensor[(8, 8, 1), float64] */;
  %245 = %241.2;
  %246 = @func_13130() /* ty=Tensor[(8, 8, 1), float64] */;
  (%242, %243, meta[relay.Constant][21] /* ty=Tensor[(2288), uint32] */, %var_14750, %244, %245, %246)
}

def @func_10172(%var_10164: Tensor[(135), bool]) -> (Tensor[(7, 2, 9), uint8], Tensor[(5, 5, 10), int8], Tensor[(5, 50), int8], Tensor[(6, 1), float32], Tensor[(?, 9, 15), float32], Tensor[(135), bool]) {
  %247 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %248 = %247.1;
  %249 = cast(%248, dtype="float64") /* ty=Tensor[(7, 2, 9), float64] */;
  %250 = log2(%249) /* ty=Tensor[(7, 2, 9), float64] */;
  %251 = cast(%248, dtype="uint8") /* ty=Tensor[(7, 2, 9), uint8] */;
  %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%250, dtype="uint8") /* ty=Tensor[(7, 2, 9), uint8] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %255 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 50), int8] */, dtype="int8") /* ty=Tensor[(5, 50), int8] */;
  %256 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
  %257 = reshape(%255, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), int8] */;
  %258 = reshape(%256, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %259 = @func_5643(%257, %258) /* ty=(Tensor[(5, 5, 10), int8], Tensor[(6, ?, ?), float32], Tensor[(6), float32]) */;
  %260 = cast(%var_10164, dtype="bool") /* ty=Tensor[(135), bool] */;
  %261 = cast(%var_10164, dtype="bool") /* ty=Tensor[(135), bool] */;
  %262 = reshape(%260, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %263 = reshape(%261, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %264 = @func_6077(%262, %263) /* ty=(Tensor[(?, 9, 15), float32],) */;
  %265 = left_shift(%253, %254) /* ty=Tensor[(7, 2, 9), uint8] */;
  %266 = %259.0;
  %267 = %264.0;
  (%265, %266, meta[relay.Constant][22] /* ty=Tensor[(5, 50), int8] */, meta[relay.Constant][23] /* ty=Tensor[(6, 1), float32] */, %267, %var_10164)
}

def @main(%var_15383: Tensor[(8, 8, 14), float64], %var_15396: Tensor[(150), float32], %var_15399: Tensor[(99), float32], %var_15402: Tensor[(507), float64]) -> (Tensor[(8, 8, 14), bool], Tensor[(2, 4, 15), int64], Tensor[(150), float32], Tensor[(99), float32], Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(507), uint32]) {
  %268 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  %269 = cast(%268, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %270 = cast(%var_15383, dtype="bool") /* ty=Tensor[(8, 8, 14), bool] */;
  %271 = cast(%var_15396, dtype="float32") /* ty=Tensor[(150), float32] */;
  %272 = cast(meta[relay.Constant][24] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %273 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %274 = cast(%var_15399, dtype="float32") /* ty=Tensor[(99), float32] */;
  %275 = reshape(%271, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
  %276 = reshape(%272, newshape=[507, 1]) /* ty=Tensor[(507, 1), float64] */;
  %277 = reshape(%273, newshape=[]) /* ty=int64 */;
  %278 = reshape(%274, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %279 = @func_8501(%275, %276, %277, %278) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) */;
  %280 = cast(%var_15402, dtype="float64") /* ty=Tensor[(507), float64] */;
  %281 = reshape(%280, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %282 = cast(%var_15402, dtype="int32") /* ty=Tensor[(507), int32] */;
  %283 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(507), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %284 = cast(meta[relay.Constant][24] /* ty=Tensor[(507), float64] */, dtype="int32") /* ty=Tensor[(507), int32] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?), int32] */;
  %286 = maximum(%284, %285) /* ty=Tensor[(507), int32] */;
  %287 = cast(%286, dtype="float64") /* ty=Tensor[(507), float64] */;
  %288 = log10(%287) /* ty=Tensor[(507), float64] */;
  %289 = cast(%288, dtype="float64") /* ty=Tensor[(507), float64] */;
  %290 = acos(%289) /* ty=Tensor[(507), float64] */;
  %291 = cast(%290, dtype="uint32") /* ty=Tensor[(507), uint32] */;
  %292 = cast(-3 /* ty=int64 */, dtype="uint32") /* ty=uint32 */;
  %293 = logical_and(%269, %270) /* ty=Tensor[(8, 8, 14), bool] */;
  %294 = %279.1;
  %295 = @func_13923() /* ty=Tensor[(8, 8, 1), float64] */;
  %296 = @func_142(%281) /* ty=Tensor[(13, 3, 13), float64] */;
  %297 = add(%291, %292) /* ty=Tensor[(507), uint32] */;
  (%293, %294, %var_15396, %var_15399, %295, %296, %297)
}

def @func_14914(%var_14834: Tensor[(12, 16, 11), float32], %var_14855: Tensor[(150), float32], %var_14856: Tensor[(507, 1), float64], %var_14857: int64, %var_14859: Tensor[(252), float64]) -> (Tensor[(2, 5, 3), float32], Tensor[(8, 8, 150), float64], Tensor[(150), float32], Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(252), float64], Tensor[(12, 1, 2), float32], Tensor[(12, 16, 11), float32]) {
  %298 = @func_14637() /* ty=(Tensor[(2, 5, 3), float32],) */;
  %299 = cast(%var_14855, dtype="float32") /* ty=Tensor[(150), float32] */;
  %300 = cast(%var_14856, dtype="float64") /* ty=Tensor[(507, 1), float64] */;
  %301 = cast(%var_14857, dtype="int64") /* ty=int64 */;
  %302 = cast(meta[relay.Constant][25] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %303 = cast(%var_14859, dtype="float64") /* ty=Tensor[(252), float64] */;
  %304 = reshape(%299, newshape=[1, 150]) /* ty=Tensor[(1, 150), float32] */;
  %305 = reshape(%300, newshape=[507, 1]) /* ty=Tensor[(507, 1), float64] */;
  %306 = reshape(%301, newshape=[]) /* ty=int64 */;
  %307 = reshape(%302, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %308 = reshape(%303, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %309 = @func_11684(%304, %305, %306, %307, %308) /* ty=(int64, Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(8, 8, 150), float64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 2, 9), float32], Tensor[(7, 2, 9), float32]) */;
  %310 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %311 = cast(%var_14834, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  %312 = acos(%311) /* ty=Tensor[(12, 16, 11), float32] */;
  %313 = cast(%312, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  %314 = %298.0;
  %315 = %309.4;
  %316 = %310.1;
  %317 = asinh(%313) /* ty=Tensor[(12, 16, 11), float32] */;
  (%314, %315, %var_14855, %var_14856, %var_14857, meta[relay.Constant][25] /* ty=Tensor[(99), float32] */, %var_14859, %316, %317)
}

def @func_11364(%var_11349: Tensor[(40), float64], %var_11350: Tensor[(70), uint32]) -> (Tensor[(8, 8, 1), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70), uint32]) {
  %318 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %319 = cast(%var_11349, dtype="float64") /* ty=Tensor[(40), float64] */;
  %320 = cast(%var_11350, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %321 = reshape(%319, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %322 = reshape(%320, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %323 = @func_10987(%321, %322) /* ty=(Tensor[(8, 8, 1), float64], uint32, Tensor[(14, 5, ?), bool], Tensor[(13, 3, 13), float64], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(120, 1), int64], Tensor[(8, 8, 1), float64], Tensor[(8, 5, ?), bool], Tensor[(12, 2, 10), int8], Tensor[(240), int8]) */;
  %324 = %318.0;
  %325 = %323.6;
  (%324, %325, %var_11349, %var_11350)
}

def @func_14403() -> (Tensor[(99), float32], Tensor[(12, 1, 2), float64]) {
  %326 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %327 = %326.1;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
  %329 = @func_14302() /* ty=Tensor[(99), float32] */;
  %330 = sin(%328) /* ty=Tensor[(12, 1, 2), float64] */;
  (%329, %330)
}

def @func_10432() -> (Tensor[(8, 8, 1), float64],) {
  %331 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  (%331,)
}

def @func_2393(%var_2385: Tensor[(13, 15, 2), float64]) -> Tensor[(13, 15, 2), float64] {
  %332 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 15, 2), float64] */;
  %333 = shape_of(%var_2385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_2385, dtype="float64") /* ty=Tensor[(13, 15, 2), float64] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%334, %335) /* ty=Tensor[(13, 15, 2), float64] */
}

def @func_12774(%var_12763: int64) -> (Tensor[(8, 8, 1), float64], int64, Tensor[(8, 8, ?), bool], Tensor[(120, 507), float32]) {
  %336 = @func_12326() /* ty=(Tensor[(8, 8, ?), bool],) */;
  %337 = cast(meta[relay.Constant][27] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %338 = cast(%var_12763, dtype="int64") /* ty=int64 */;
  %339 = cast(meta[relay.Constant][27] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %340 = reshape(%337, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %341 = reshape(%338, newshape=[]) /* ty=int64 */;
  %342 = reshape(%339, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %343 = @func_5342(%340, %341, %342) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
  %344 = %343.3;
  %345 = cast(%344, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
  %346 = cast(meta[relay.Constant][27] /* ty=Tensor[(507), float64] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %347 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
  %348 = %336.0;
  %349 = power(%345, %346) /* ty=Tensor[(120, 507), float32] */;
  (%347, %var_12763, %348, %349)
}

def @func_11865() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(507), float64], Tensor[(126), float32]) {
  %350 = cast(meta[relay.Constant][28] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %351 = reshape(%350, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float32] */;
  %352 = @func_8840(%351) /* ty=(Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %353 = @func_10311() /* ty=Tensor[(8, 8, 1), float64] */;
  %354 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
  %355 = %352.4;
  (%353, %354, %355, meta[relay.Constant][28] /* ty=Tensor[(126), float32] */)
}

def @func_12494() -> (Tensor[(160), float64], Tensor[(99), float32], Tensor[(8, 8, 507), bool], Tensor[(8, 8, 507), uint8], Tensor[(99), float64]) {
  %356 = @func_12150() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %357 = %356.0;
  %358 = cast(meta[relay.Constant][31] /* ty=Tensor[(507), float64] */, dtype="bool") /* ty=Tensor[(507), bool] */;
  %359 = cast(%357, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %360 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %361 = cast(meta[relay.Constant][31] /* ty=Tensor[(507), float64] */, dtype="uint8") /* ty=Tensor[(507), uint8] */;
  %362 = cast(%360, dtype="uint8") /* ty=Tensor[(8, 8, 1), uint8] */;
  %363 = cast(meta[relay.Constant][29] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %364 = cast(meta[relay.Constant][30] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %365 = cast(meta[relay.Constant][31] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %366 = reshape(%363, newshape=[160, 1]) /* ty=Tensor[(160, 1), float64] */;
  %367 = reshape(%364, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %368 = reshape(%365, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %369 = @func_12253(%366, %367, %368) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(99), float32], Tensor[(160, 1), float64], Tensor[(99), float32], int64, Tensor[(507), float64], Tensor[(135), bool]) */;
  %370 = %369.1;
  %371 = cast(%370, dtype="float64") /* ty=Tensor[(99), float64] */;
  %372 = logical_or(%358, %359) /* ty=Tensor[(8, 8, 507), bool] */;
  %373 = maximum(%361, %362) /* ty=Tensor[(8, 8, 507), uint8] */;
  %374 = atan(%371) /* ty=Tensor[(99), float64] */;
  (meta[relay.Constant][29] /* ty=Tensor[(160), float64] */, meta[relay.Constant][30] /* ty=Tensor[(99), float32] */, %372, %373, %374)
}

def @func_12600(%var_12569: Tensor[(8, 8, 7), float32], %var_12588: Tensor[(25, 10), int8]) -> (Tensor[(8, 8, 7), bool], Tensor[(8, 8, 1), float32], Tensor[(8, 8, 1), float64], Tensor[(6, ?, ?), float32], Tensor[(25, 10), int8], Tensor[(6), float32], Tensor[(2, 5, 3), float32]) {
  %375 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %376 = %375.0;
  %377 = cast(%376, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %378 = cast(%var_12569, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
  %379 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %380 = @func_12150() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %381 = cast(%var_12588, dtype="int8") /* ty=Tensor[(25, 10), int8] */;
  %382 = cast(meta[relay.Constant][32] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %383 = reshape(%381, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), int8] */;
  %384 = reshape(%382, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %385 = @func_5643(%383, %384) /* ty=(Tensor[(5, 5, 10), int8], Tensor[(6, ?, ?), float32], Tensor[(6), float32]) */;
  %386 = @func_11188() /* ty=(Tensor[(2, 5, 3), float32],) */;
  %387 = logical_and(%377, %378) /* ty=Tensor[(8, 8, 7), bool] */;
  %388 = %379.0;
  %389 = %380.0;
  %390 = %385.1;
  %391 = %386.0;
  (%387, %388, %389, %390, %var_12588, meta[relay.Constant][32] /* ty=Tensor[(6), float32] */, %391)
}

def @func_13923() -> Tensor[(8, 8, 1), float64] {
  %392 = @func_11585() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) */;
  %392.1
}

def @func_3994(%var_3989: Tensor[(2, 3, 6), uint64], %var_3990: Tensor[(2, 3, 6), uint64]) -> (Tensor[(2, 3, 6), uint64],) {
  %393 = cast(%var_3990, dtype="uint64") /* ty=Tensor[(2, 3, 6), uint64] */;
  %394 = shape_of(%var_3989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%var_3989, dtype="uint64") /* ty=Tensor[(2, 3, 6), uint64] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %397 = right_shift(%395, %396) /* ty=Tensor[(2, 3, 6), uint64] */;
  (%397,)
}

def @func_9254(%var_9193: Tensor[(9, 12, 9), float32], %var_9215: Tensor[(150, 1), float32], %var_9216: Tensor[(507), float64], %var_9218: Tensor[(99), float32], %var_9221: Tensor[(9, 12, 9), float32]) -> (Tensor[(160), float64], Tensor[(507), float64], int64, Tensor[(9, 12, 9), float32], Tensor[(?, 9, 15), float32], Tensor[(1, 135), bool], Tensor[(150, 99), bool]) {
  %398 = cast(%var_9215, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %399 = cast(%var_9216, dtype="float64") /* ty=Tensor[(507), float64] */;
  %400 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %401 = cast(%var_9218, dtype="float32") /* ty=Tensor[(99), float32] */;
  %402 = reshape(%398, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
  %403 = reshape(%399, newshape=[507, 1]) /* ty=Tensor[(507, 1), float64] */;
  %404 = reshape(%400, newshape=[]) /* ty=int64 */;
  %405 = reshape(%401, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %406 = @func_8501(%402, %403, %404, %405) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) */;
  %407 = cast(%var_9193, dtype="float32") /* ty=Tensor[(9, 12, 9), float32] */;
  %408 = sqrt(%407) /* ty=Tensor[(9, 12, 9), float32] */;
  %409 = cast(%var_9221, dtype="float32") /* ty=Tensor[(9, 12, 9), float32] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%408, dtype="float32") /* ty=Tensor[(9, 12, 9), float32] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %413 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 135), bool] */, dtype="bool") /* ty=Tensor[(1, 135), bool] */;
  %414 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 135), bool] */, dtype="bool") /* ty=Tensor[(1, 135), bool] */;
  %415 = reshape(%413, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %416 = reshape(%414, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %417 = @func_6077(%415, %416) /* ty=(Tensor[(?, 9, 15), float32],) */;
  %418 = cast(%var_9218, dtype="bool") /* ty=Tensor[(99), bool] */;
  %419 = cast(%var_9215, dtype="bool") /* ty=Tensor[(150, 1), bool] */;
  %420 = %406.5;
  %421 = floor_divide(%411, %412) /* ty=Tensor[(9, 12, 9), float32] */;
  %422 = %417.0;
  %423 = logical_or(%418, %419) /* ty=Tensor[(150, 99), bool] */;
  (%420, %var_9216, 8 /* ty=int64 */, %421, %422, meta[relay.Constant][33] /* ty=Tensor[(1, 135), bool] */, %423)
}

def @func_11611() -> Tensor[(8, 8, 1), float64] {
  %424 = @func_11061() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %424.0
}

def @func_12631() -> (Tensor[(8, 8, 1), float64],) {
  %425 = @func_11061() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %426 = %425.0;
  (%426,)
}

def @func_7653(%var_7629: Tensor[(7, 2, 9), float32]) -> Tensor[(7, 2, 9), float32] {
  %427 = cast(%var_7629, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
  log10(%427) /* ty=Tensor[(7, 2, 9), float32] */
}

def @func_12947() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) {
  %428 = @func_11335() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %429 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %430 = %428.0;
  %431 = %429.0;
  (%430, %431)
}

def @func_13199(%var_13178: Tensor[(8, 8, 1), float64]) -> (Tensor[(8, 8, ?), int8], Tensor[(8, 8, ?), bool]) {
  %432 = @func_12631() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %433 = %432.0;
  %434 = cast(%var_13178, dtype="int8") /* ty=Tensor[(8, 8, 1), int8] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="int8") /* ty=Tensor[(8, 8, 1), int8] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %438 = cast(%433, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %439 = shape_of(%var_13178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%var_13178, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %442 = bitwise_and(%436, %437) /* ty=Tensor[(8, 8, ?), int8] */;
  %443 = less(%440, %441) /* ty=Tensor[(8, 8, ?), bool] */;
  (%442, %443)
}

def @func_5342(%var_5281: Tensor[(507), float64], %var_5285: int64, %var_5337: Tensor[(13, 3, 13), float64]) -> (Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) {
  %444 = cast(%var_5285, dtype="int64") /* ty=int64 */;
  %445 = cast(meta[relay.Constant][34] /* ty=Tensor[(120, 1), int64] */, dtype="int64") /* ty=Tensor[(120, 1), int64] */;
  %446 = cast(meta[relay.Constant][35] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %447 = reshape(%444, newshape=[]) /* ty=int64 */;
  %448 = reshape(%445, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), int64] */;
  %449 = reshape(%446, newshape=[11, 9]) /* ty=Tensor[(11, 9), float32] */;
  %450 = @func_5092(%447, %448, %449) /* ty=(Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) */;
  %451 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
  %452 = cosh(%451) /* ty=Tensor[(3, 16, 1), float32] */;
  %453 = cast(%452, dtype="int8") /* ty=Tensor[(3, 16, 1), int8] */;
  %454 = cast(meta[relay.Constant][35] /* ty=Tensor[(99), float32] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %455 = cast(%var_5285, dtype="int64") /* ty=int64 */;
  %456 = %450.0;
  %457 = cast(%456, dtype="int64") /* ty=Tensor[(2, 4, 15), int64] */;
  %458 = cast(meta[relay.Constant][35] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %459 = reshape(%455, newshape=[]) /* ty=int64 */;
  %460 = reshape(%457, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), int64] */;
  %461 = reshape(%458, newshape=[11, 9]) /* ty=Tensor[(11, 9), float32] */;
  %462 = @func_5092(%459, %460, %461) /* ty=(Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) */;
  %463 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
  %464 = cast(meta[relay.Constant][35] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %465 = cast(%var_5281, dtype="float64") /* ty=Tensor[(507), float64] */;
  %466 = reshape(%465, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %467 = @func_142(%466) /* ty=Tensor[(13, 3, 13), float64] */;
  %468 = cast(%var_5337, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%467, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %472 = add(%453, %454) /* ty=Tensor[(3, 16, 99), int8] */;
  %473 = %462.4;
  %474 = maximum(%463, %464) /* ty=Tensor[(3, 16, 99), float32] */;
  %475 = power(%470, %471) /* ty=Tensor[(13, 3, 13), float64] */;
  (%var_5281, %456, %var_5285, meta[relay.Constant][34] /* ty=Tensor[(120, 1), int64] */, %472, %473, %474, %475)
}

def @func_3883(%var_3872: Tensor[(11, 1, 9), float32]) -> Tensor[(11, ?, 9), float32] {
  %476 = cast(%var_3872, dtype="float32") /* ty=Tensor[(11, 1, 9), float32] */;
  %477 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(11, 1, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 9), float32] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%478, %479) /* ty=Tensor[(11, ?, 9), float32] */
}

def @func_11216(%var_11212: Tensor[(2304), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(135), bool]) {
  %480 = cast(meta[relay.Constant][38] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %481 = cast(%var_11212, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %482 = cast(meta[relay.Constant][39] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %483 = cast(meta[relay.Constant][39] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %484 = reshape(%480, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %485 = reshape(%481, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %486 = reshape(%482, newshape=[3, 45]) /* ty=Tensor[(3, 45), bool] */;
  %487 = reshape(%483, newshape=[3, 45]) /* ty=Tensor[(3, 45), bool] */;
  %488 = @func_10771(%484, %485, %486, %487) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(8, 8, 1680), bool], Tensor[(3, 14, 3), float32], Tensor[(126), float32], Tensor[(3, 45), int16]) */;
  %489 = @func_10255() /* ty=Tensor[(8, 8, 1), float64] */;
  %490 = %488.0;
  (%489, %490, meta[relay.Constant][38] /* ty=Tensor[(864), float32] */, %var_11212, meta[relay.Constant][39] /* ty=Tensor[(135), bool] */)
}

def @func_14302() -> Tensor[(99), float32] {
  @func_12550() /* ty=Tensor[(99), float32] */
}

def @func_11246() -> (Tensor[(8, 8, 1), float64],) {
  %491 = @func_10311() /* ty=Tensor[(8, 8, 1), float64] */;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  %493 = log2(%492) /* ty=Tensor[(8, 8, 1), float64] */;
  (%493,)
}

def @func_10987(%var_10901: Tensor[(40), float64], %var_10912: Tensor[(70), uint32]) -> (Tensor[(8, 8, 1), float64], uint32, Tensor[(14, 5, ?), bool], Tensor[(13, 3, 13), float64], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(120, 1), int64], Tensor[(8, 8, 1), float64], Tensor[(8, 5, ?), bool], Tensor[(12, 2, 10), int8], Tensor[(240), int8]) {
  %494 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %495 = cast(%var_10912, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %496 = reshape(%494, newshape=[]) /* ty=uint32 */;
  %497 = reshape(%495, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), uint32] */;
  %498 = @func_10296(%496, %497) /* ty=(Tensor[(14, 5, 1), uint32],) */;
  %499 = %498.0;
  %500 = cast(%var_10912, dtype="bool") /* ty=Tensor[(70), bool] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%499, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %504 = cast(meta[relay.Constant][41] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %505 = cast(meta[relay.Constant][42] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %506 = reshape(%504, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %507 = reshape(%505, newshape=[14, 3]) /* ty=Tensor[(14, 3), float32] */;
  %508 = @func_1854(%506, %507) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(13, 3, 13), float64], Tensor[(14, 3), float32], Tensor[(91, 6), float32]) */;
  %509 = %508.1;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %511 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="int64") /* ty=int64 */;
  %512 = cast(%509, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %513 = reshape(%510, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %514 = reshape(%511, newshape=[]) /* ty=int64 */;
  %515 = reshape(%512, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %516 = @func_5342(%513, %514, %515) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
  %517 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %518 = cast(%var_10901, dtype="float64") /* ty=Tensor[(40), float64] */;
  %519 = reshape(%518, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float64] */;
  %520 = @func_10604(%519) /* ty=Tensor[(8, 5, 1), float64] */;
  %521 = cast(%var_10901, dtype="bool") /* ty=Tensor[(40), bool] */;
  %522 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%520, dtype="bool") /* ty=Tensor[(8, 5, 1), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %525 = cast(meta[relay.Constant][43] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %526 = reshape(%525, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), int8] */;
  %527 = @func_7692(%526) /* ty=(Tensor[(12, 2, 10), int8], Tensor[(11, ?, 9), float32], Tensor[(99), float32]) */;
  %528 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  %529 = less(%502, %503) /* ty=Tensor[(14, 5, ?), bool] */;
  %530 = %516.3;
  %531 = %517.0;
  %532 = not_equal(%523, %524) /* ty=Tensor[(8, 5, ?), bool] */;
  %533 = %527.0;
  (%528, meta[relay.Constant][40] /* ty=uint32 */, %529, %509, meta[relay.Constant][41] /* ty=Tensor[(2304), float32] */, meta[relay.Constant][42] /* ty=Tensor[(42), float32] */, %530, %531, %532, %533, meta[relay.Constant][43] /* ty=Tensor[(240), int8] */)
}

def @func_13280() -> (Tensor[(8, 8, 8), int16],) {
  %534 = @func_11061() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %535 = %534.0;
  %536 = cast(%535, dtype="int16") /* ty=Tensor[(8, 8, 1), int16] */;
  %537 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 8, 8), float64] */, dtype="int16") /* ty=Tensor[(8, 8, 8), int16] */;
  %538 = minimum(%536, %537) /* ty=Tensor[(8, 8, 8), int16] */;
  (%538,)
}

def @func_6152(%var_6100: Tensor[(10, 16, 12), float64], %var_6101: Tensor[(10, 16, 12), float64], %var_6108: Tensor[(1680), float64], %var_6139: Tensor[(135), bool]) -> (Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) {
  %539 = cast(%var_6108, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %540 = cast(meta[relay.Constant][45] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %541 = reshape(%539, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), float64] */;
  %542 = reshape(%540, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %543 = @func_5041(%541, %542) /* ty=(Tensor[(10, 14, 12), float64], Tensor[(507), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64]) */;
  %544 = %543.3;
  %545 = cast(%544, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %546 = reshape(%545, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %547 = cast(%var_6139, dtype="bool") /* ty=Tensor[(135), bool] */;
  %548 = cast(%var_6139, dtype="bool") /* ty=Tensor[(135), bool] */;
  %549 = reshape(%547, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %550 = reshape(%548, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %551 = @func_6077(%549, %550) /* ty=(Tensor[(?, 9, 15), float32],) */;
  %552 = cast(%var_6101, dtype="float64") /* ty=Tensor[(10, 16, 12), float64] */;
  %553 = shape_of(%var_6100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%var_6100, dtype="float64") /* ty=Tensor[(10, 16, 12), float64] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %556 = divide(%554, %555) /* ty=Tensor[(10, 16, 12), float64] */;
  %557 = cast(%556, dtype="float32") /* ty=Tensor[(10, 16, 12), float32] */;
  %558 = @func_142(%546) /* ty=Tensor[(13, 3, 13), float64] */;
  %559 = %551.0;
  %560 = log10(%557) /* ty=Tensor[(10, 16, 12), float32] */;
  (%544, %var_6108, meta[relay.Constant][45] /* ty=Tensor[(6), float32] */, %558, %559, %var_6139, %560)
}

def @func_12550() -> Tensor[(99), float32] {
  %561 = @func_12494() /* ty=(Tensor[(160), float64], Tensor[(99), float32], Tensor[(8, 8, 507), bool], Tensor[(8, 8, 507), uint8], Tensor[(99), float64]) */;
  %561.1
}

def @func_14323() -> Tensor[(8, 8, 1), float64] {
  @func_13025() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_9993(%var_9968: Tensor[(507), float64], %var_9980: Tensor[(99), float32], %var_9985: Tensor[(45, 3), bool]) -> (Tensor[(8, 8, 1), float32], Tensor[(3, 16, 99), float32], Tensor[(507), float64], int64, Tensor[(507), float64], Tensor[(972), float32], Tensor[(25, 6), float32], Tensor[(99), float32], Tensor[(10, 16, 12), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(45, 3), bool]) {
  %562 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %563 = cast(%var_9968, dtype="float64") /* ty=Tensor[(507), float64] */;
  %564 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %565 = cast(%var_9968, dtype="float64") /* ty=Tensor[(507), float64] */;
  %566 = reshape(%563, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %567 = reshape(%564, newshape=[]) /* ty=int64 */;
  %568 = reshape(%565, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %569 = @func_5342(%566, %567, %568) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
  %570 = cast(meta[relay.Constant][46] /* ty=Tensor[(972), float32] */, dtype="float32") /* ty=Tensor[(972), float32] */;
  %571 = cast(meta[relay.Constant][47] /* ty=Tensor[(25, 6), float32] */, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %572 = cast(%var_9968, dtype="float64") /* ty=Tensor[(507), float64] */;
  %573 = cast(%var_9980, dtype="float32") /* ty=Tensor[(99), float32] */;
  %574 = cast(meta[relay.Constant][46] /* ty=Tensor[(972), float32] */, dtype="float32") /* ty=Tensor[(972), float32] */;
  %575 = reshape(%570, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), float32] */;
  %576 = reshape(%571, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %577 = reshape(%572, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %578 = reshape(%573, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %579 = reshape(%574, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), float32] */;
  %580 = @func_9254(%575, %576, %577, %578, %579) /* ty=(Tensor[(160), float64], Tensor[(507), float64], int64, Tensor[(9, 12, 9), float32], Tensor[(?, 9, 15), float32], Tensor[(1, 135), bool], Tensor[(150, 99), bool]) */;
  %581 = cast(meta[relay.Constant][48] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %582 = cast(meta[relay.Constant][48] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %583 = cast(meta[relay.Constant][49] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %584 = cast(%var_9985, dtype="bool") /* ty=Tensor[(45, 3), bool] */;
  %585 = reshape(%581, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %586 = reshape(%582, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %587 = reshape(%583, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %588 = reshape(%584, newshape=[135]) /* ty=Tensor[(135), bool] */;
  %589 = @func_6152(%585, %586, %587, %588) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) */;
  %590 = %562.0;
  %591 = %569.6;
  %592 = %580.1;
  %593 = %589.6;
  (%590, %591, %var_9968, 7 /* ty=int64 */, %592, meta[relay.Constant][46] /* ty=Tensor[(972), float32] */, meta[relay.Constant][47] /* ty=Tensor[(25, 6), float32] */, %var_9980, %593, meta[relay.Constant][48] /* ty=Tensor[(1920), float64] */, meta[relay.Constant][49] /* ty=Tensor[(1680), float64] */, %var_9985)
}

def @func_14663(%var_14658: Tensor[(2288), uint32], %var_14659: Tensor[(1, 99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(1, 99), float32]) {
  %594 = @func_14459() /* ty=(Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) */;
  %595 = cast(%var_14658, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
  %596 = cast(%var_14659, dtype="float32") /* ty=Tensor[(1, 99), float32] */;
  %597 = reshape(%595, newshape=[2288]) /* ty=Tensor[(2288), uint32] */;
  %598 = reshape(%596, newshape=[99, 1]) /* ty=Tensor[(99, 1), float32] */;
  %599 = @func_12407(%597, %598) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(2, 3, 6), uint64], Tensor[(99, 1), float32], Tensor[(36), uint64]) */;
  %600 = %594.1;
  %601 = %599.3;
  (%600, %601, %var_14658, %var_14659)
}

def @func_10515(%var_10510: Tensor[(126), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) {
  %602 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %603 = cast(%var_10510, dtype="float32") /* ty=Tensor[(126), float32] */;
  %604 = reshape(%603, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %605 = %602.0;
  %606 = @func_7653(%604) /* ty=Tensor[(7, 2, 9), float32] */;
  (%605, %606, %var_10510)
}

def @func_13025() -> Tensor[(8, 8, 1), float64] {
  @func_9857() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_14519() -> Tensor[(8, 8, 1), float64] {
  %607 = @func_11741() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %607.0
}

def @func_13099(%var_13062: Tensor[(15, 7, 5), int16], %var_13063: Tensor[(15, 7, 5), int16]) -> (Tensor[(8, 8, 1), float64], Tensor[(15, 7, 5), float64]) {
  %608 = @func_11741() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %609 = cast(%var_13063, dtype="int16") /* ty=Tensor[(15, 7, 5), int16] */;
  %610 = shape_of(%var_13062, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%var_13062, dtype="int16") /* ty=Tensor[(15, 7, 5), int16] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %613 = add(%611, %612) /* ty=Tensor[(15, 7, 5), int16] */;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
  %615 = erf(%614) /* ty=Tensor[(15, 7, 5), float32] */;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(15, 7, 5), float64] */;
  %617 = %608.0;
  %618 = log10(%616) /* ty=Tensor[(15, 7, 5), float64] */;
  (%617, %618)
}

def @func_12150() -> (Tensor[(8, 8, 1), float64],) {
  %619 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %620 = %619.0;
  (%620,)
}

def @func_15219() -> (Tensor[(8, 8, 1), float64],) {
  %621 = @func_11585() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) */;
  %622 = %621.0;
  (%622,)
}

def @func_3641(%var_3632: float64, %var_3633: Tensor[(7, 9, 4), float64]) -> Tensor[(7, 9, 4), float64] {
  %623 = cast(%var_3632, dtype="float64") /* ty=float64 */;
  %624 = cast(%var_3633, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  floor_divide(%623, %624) /* ty=Tensor[(7, 9, 4), float64] */
}

def @func_12843(%var_12838: Tensor[(8, 8, 14), float64]) -> Tensor[(8, 8, 14), int32] {
  %625 = @func_12675() /* ty=Tensor[(8, 8, 1), float64] */;
  %626 = cast(%625, dtype="int32") /* ty=Tensor[(8, 8, 1), int32] */;
  %627 = cast(%var_12838, dtype="int32") /* ty=Tensor[(8, 8, 14), int32] */;
  right_shift(%626, %627) /* ty=Tensor[(8, 8, 14), int32] */
}

def @func_10771(%var_10727: Tensor[(864), float32], %var_10728: Tensor[(2304), float32], %var_10731: Tensor[(3, 45), bool], %var_10764: Tensor[(3, 45), bool]) -> (Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(8, 8, 1680), bool], Tensor[(3, 14, 3), float32], Tensor[(126), float32], Tensor[(3, 45), int16]) {
  %628 = cast(%var_10727, dtype="float32") /* ty=Tensor[(864), float32] */;
  %629 = cast(%var_10728, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %630 = cast(meta[relay.Constant][50] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %631 = cast(meta[relay.Constant][51] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %632 = cast(%var_10731, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
  %633 = cast(%var_10727, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %634 = reshape(%628, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %635 = reshape(%629, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %636 = reshape(%630, newshape=[14, 3]) /* ty=Tensor[(14, 3), float32] */;
  %637 = reshape(%631, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %638 = reshape(%632, newshape=[135]) /* ty=Tensor[(135), bool] */;
  %639 = reshape(%633, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint32] */;
  %640 = @func_8314(%634, %635, %636, %637, %638, %639) /* ty=(Tensor[(42), float32], Tensor[(2304), float32], Tensor[(14, 3), float32], Tensor[(12, 6, 12), bool], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(7, 6), float32], Tensor[(8, 286), uint32], Tensor[(13, 3, 13), float64], Tensor[(12, 6, 12), int32]) */;
  %641 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %642 = cast(%641, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %643 = cast(meta[relay.Constant][51] /* ty=Tensor[(1680), float64] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %644 = cast(meta[relay.Constant][52] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %645 = reshape(%644, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float32] */;
  %646 = @func_8840(%645) /* ty=(Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %647 = cast(%var_10764, dtype="int16") /* ty=Tensor[(3, 45), int16] */;
  %648 = shape_of(%var_10731, dtype="int32") /* ty=Tensor[(2), int32] */;
  %649 = cast(%var_10731, dtype="int16") /* ty=Tensor[(3, 45), int16] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %651 = %640.10;
  %652 = less_equal(%642, %643) /* ty=Tensor[(8, 8, 1680), bool] */;
  %653 = %646.0;
  %654 = bitwise_or(%649, %650) /* ty=Tensor[(3, 45), int16] */;
  (%651, %var_10727, %var_10728, meta[relay.Constant][50] /* ty=Tensor[(42), float32] */, %652, %653, meta[relay.Constant][52] /* ty=Tensor[(126), float32] */, %654)
}

def @func_14027(%var_13990: Tensor[(42), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(42), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(13, 15, 2), float64], Tensor[(390), float64], Tensor[(7, 2, 9), float32]) {
  %655 = cast(meta[relay.Constant][53] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %656 = cast(%var_13990, dtype="float32") /* ty=Tensor[(42), float32] */;
  %657 = reshape(%655, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %658 = reshape(%656, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %659 = @func_7098(%657, %658) /* ty=(Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %660 = cast(meta[relay.Constant][54] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %661 = reshape(%660, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), float64] */;
  %662 = @func_10586() /* ty=(Tensor[(7, 2, 9), float32], Tensor[(13, 3, 13), float64]) */;
  %663 = @func_12208() /* ty=Tensor[(8, 8, 1), float64] */;
  %664 = %659.3;
  %665 = @func_2393(%661) /* ty=Tensor[(13, 15, 2), float64] */;
  %666 = %662.0;
  (%663, %664, meta[relay.Constant][53] /* ty=Tensor[(2304), float32] */, %var_13990, %665, meta[relay.Constant][54] /* ty=Tensor[(390), float64] */, %666)
}

def @func_13130() -> Tensor[(8, 8, 1), float64] {
  @func_10641() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_11944() -> Tensor[(8, 8, 1), float64] {
  %667 = @func_11741() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %667.0
}

def @func_12826() -> (Tensor[(8, 8, 1), float64],) {
  %668 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %669 = %668.0;
  (%669,)
}

def @func_9857() -> Tensor[(8, 8, 1), float64] {
  %670 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 8, 1), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  atan(%670) /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_10255() -> Tensor[(8, 8, 1), float64] {
  @func_9857() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_8352(%var_8343: Tensor[(12, 3, 15), int32], %var_8344: Tensor[(12, 3, 15), int32]) -> (Tensor[(12, 3, 15), int32],) {
  %671 = cast(%var_8344, dtype="int32") /* ty=Tensor[(12, 3, 15), int32] */;
  %672 = shape_of(%var_8343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%var_8343, dtype="int32") /* ty=Tensor[(12, 3, 15), int32] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %675 = left_shift(%673, %674) /* ty=Tensor[(12, 3, 15), int32] */;
  (%675,)
}

def @func_11188() -> (Tensor[(2, 5, 3), float32],) {
  %676 = cast(meta[relay.Constant][56] /* ty=Tensor[(2, 5, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 3), float32] */;
  %677 = sin(%676) /* ty=Tensor[(2, 5, 3), float32] */;
  (%677,)
}

def @func_12326() -> (Tensor[(8, 8, ?), bool],) {
  %678 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %679 = %678.0;
  %680 = cast(%679, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  %681 = log10(%680) /* ty=Tensor[(8, 8, 1), float64] */;
  %682 = cast(%679, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%681, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %686 = logical_or(%684, %685) /* ty=Tensor[(8, 8, ?), bool] */;
  (%686,)
}

def @func_10296(%var_10291: uint32, %var_10292: Tensor[(14, 5, 1), uint32]) -> (Tensor[(14, 5, 1), uint32],) {
  %687 = cast(%var_10291, dtype="uint32") /* ty=uint32 */;
  %688 = cast(%var_10292, dtype="uint32") /* ty=Tensor[(14, 5, 1), uint32] */;
  %689 = right_shift(%687, %688) /* ty=Tensor[(14, 5, 1), uint32] */;
  (%689,)
}

def @func_5092(%var_5069: int64, %var_5070: Tensor[(2, 4, 15), int64], %var_5084: Tensor[(11, 9), float32]) -> (Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) {
  %690 = cast(%var_5069, dtype="int64") /* ty=int64 */;
  %691 = cast(%var_5070, dtype="int64") /* ty=Tensor[(2, 4, 15), int64] */;
  %692 = cast(meta[relay.Constant][57] /* ty=Tensor[(2288), uint32] */, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
  %693 = reshape(%692, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
  %694 = @func_1358(%693) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
  %695 = cast(%var_5084, dtype="float32") /* ty=Tensor[(11, 9), float32] */;
  %696 = reshape(%695, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
  %697 = multiply(%690, %691) /* ty=Tensor[(2, 4, 15), int64] */;
  %698 = %694.2;
  %699 = @func_3883(%696) /* ty=Tensor[(11, ?, 9), float32] */;
  (%697, %698, meta[relay.Constant][57] /* ty=Tensor[(2288), uint32] */, %699, %var_5084)
}

def @func_10586() -> (Tensor[(7, 2, 9), float32], Tensor[(13, 3, 13), float64]) {
  %700 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %701 = %700.1;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
  %703 = reshape(%702, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float32] */;
  %704 = @func_8840(%703) /* ty=(Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %705 = %704.3;
  (%701, %705)
}

def @func_11802(%var_11799: Tensor[(40), float64], %var_11800: Tensor[(70, 1), uint32]) -> (Tensor[(8, 8, 1), float32], Tensor[(12, 3, 15), int32], Tensor[(54, 10), int32], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70, 1), uint32]) {
  %706 = cast(meta[relay.Constant][58] /* ty=Tensor[(54, 10), int32] */, dtype="int32") /* ty=Tensor[(54, 10), int32] */;
  %707 = cast(meta[relay.Constant][58] /* ty=Tensor[(54, 10), int32] */, dtype="int32") /* ty=Tensor[(54, 10), int32] */;
  %708 = reshape(%706, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %709 = reshape(%707, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %710 = @func_11040(%708, %709) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) */;
  %711 = cast(%var_11799, dtype="float64") /* ty=Tensor[(40), float64] */;
  %712 = cast(%var_11800, dtype="uint32") /* ty=Tensor[(70, 1), uint32] */;
  %713 = reshape(%711, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %714 = reshape(%712, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %715 = @func_11364(%713, %714) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70), uint32]) */;
  %716 = @func_11479() /* ty=Tensor[(8, 8, 1), float32] */;
  %717 = %710.1;
  %718 = %715.1;
  (%716, %717, meta[relay.Constant][58] /* ty=Tensor[(54, 10), int32] */, %718, %var_11799, %var_11800)
}

def @func_11066() -> (Tensor[(8, 8, 1), float64],) {
  %719 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
  %720 = %719.0;
  (%720,)
}

def @func_13116() -> (Tensor[(8, 8, 1), float64], Tensor[(18, 30), int32]) {
  %721 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %722 = @func_12658() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) */;
  %723 = %721.0;
  %724 = %722.2;
  (%723, %724)
}

def @func_14799() -> (Tensor[(8, 8, 1), float64],) {
  %725 = @func_11944() /* ty=Tensor[(8, 8, 1), float64] */;
  (%725,)
}

def @func_13881(%var_13876: Tensor[(160), float64], %var_13877: Tensor[(11, 9), float32]) -> (Tensor[(18, 30), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(16, 1, 10), float64], Tensor[(160), float64], Tensor[(11, 9), float32]) {
  %726 = @func_13116() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(18, 30), int32]) */;
  %727 = @func_11335() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %728 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %729 = cast(%var_13876, dtype="float64") /* ty=Tensor[(160), float64] */;
  %730 = cast(%var_13877, dtype="float32") /* ty=Tensor[(11, 9), float32] */;
  %731 = reshape(%729, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), float64] */;
  %732 = reshape(%730, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %733 = @func_8109(%731, %732) /* ty=(Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) */;
  %734 = %726.1;
  %735 = %727.0;
  %736 = %728.0;
  %737 = %733.0;
  (%734, %735, %736, %737, %var_13876, %var_13877)
}

def @func_13614(%var_13601: Tensor[(2304), float32], %var_13602: Tensor[(42), float32], %var_13603: Tensor[(1680), float64]) -> (Tensor[(3, 180), float32], Tensor[(?, 9, 15), float32], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(8, 8, 507), uint8]) {
  %738 = @func_12658() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) */;
  %739 = %738.1;
  %740 = cast(%739, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %741 = sigmoid(%740) /* ty=Tensor[(3, 180), float64] */;
  %742 = cast(%741, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %743 = cast(meta[relay.Constant][59] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %744 = cast(%var_13601, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %745 = cast(%var_13602, dtype="float32") /* ty=Tensor[(42), float32] */;
  %746 = cast(%var_13603, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %747 = cast(meta[relay.Constant][60] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %748 = cast(meta[relay.Constant][59] /* ty=Tensor[(864), float32] */, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %749 = reshape(%743, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %750 = reshape(%744, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %751 = reshape(%745, newshape=[14, 3]) /* ty=Tensor[(14, 3), float32] */;
  %752 = reshape(%746, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %753 = reshape(%747, newshape=[135]) /* ty=Tensor[(135), bool] */;
  %754 = reshape(%748, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint32] */;
  %755 = @func_8314(%749, %750, %751, %752, %753, %754) /* ty=(Tensor[(42), float32], Tensor[(2304), float32], Tensor[(14, 3), float32], Tensor[(12, 6, 12), bool], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(7, 6), float32], Tensor[(8, 286), uint32], Tensor[(13, 3, 13), float64], Tensor[(12, 6, 12), int32]) */;
  %756 = @func_12494() /* ty=(Tensor[(160), float64], Tensor[(99), float32], Tensor[(8, 8, 507), bool], Tensor[(8, 8, 507), uint8], Tensor[(99), float64]) */;
  %757 = asinh(%742) /* ty=Tensor[(3, 180), float32] */;
  %758 = %755.4;
  %759 = %756.3;
  (%757, %758, meta[relay.Constant][59] /* ty=Tensor[(864), float32] */, %var_13601, %var_13602, %var_13603, meta[relay.Constant][60] /* ty=Tensor[(135), bool] */, %759)
}

def @func_11684(%var_11654: Tensor[(1, 150), float32], %var_11655: Tensor[(507, 1), float64], %var_11656: int64, %var_11657: Tensor[(99), float32], %var_11665: Tensor[(252), float64]) -> (int64, Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(8, 8, 150), float64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 2, 9), float32], Tensor[(7, 2, 9), float32]) {
  %760 = cast(%var_11654, dtype="float32") /* ty=Tensor[(1, 150), float32] */;
  %761 = cast(%var_11655, dtype="float64") /* ty=Tensor[(507, 1), float64] */;
  %762 = cast(%var_11656, dtype="int64") /* ty=int64 */;
  %763 = cast(%var_11657, dtype="float32") /* ty=Tensor[(99), float32] */;
  %764 = reshape(%760, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
  %765 = reshape(%761, newshape=[507, 1]) /* ty=Tensor[(507, 1), float64] */;
  %766 = reshape(%762, newshape=[]) /* ty=int64 */;
  %767 = reshape(%763, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %768 = @func_8501(%764, %765, %766, %767) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) */;
  %769 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %770 = %769.0;
  %771 = cast(%770, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
  %772 = cosh(%771) /* ty=Tensor[(8, 8, 1), float32] */;
  %773 = cast(%772, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  %774 = cast(%var_11654, dtype="float64") /* ty=Tensor[(1, 150), float64] */;
  %775 = %768.3;
  %776 = cast(%775, dtype="float64") /* ty=float64 */;
  %777 = cast(%var_11665, dtype="float64") /* ty=Tensor[(252), float64] */;
  %778 = reshape(%776, newshape=[]) /* ty=float64 */;
  %779 = reshape(%777, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %780 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %781 = %780.1;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
  %783 = reshape(%782, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %784 = minimum(%773, %774) /* ty=Tensor[(8, 8, 150), float64] */;
  %785 = @func_3641(%778, %779) /* ty=Tensor[(7, 9, 4), float64] */;
  %786 = @func_7653(%783) /* ty=Tensor[(7, 2, 9), float32] */;
  (%775, %var_11655, %var_11656, %var_11657, %784, %785, %var_11665, %781, %786)
}

def @func_755(%var_731: Tensor[(6, 1, 1), float32]) -> (Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) {
  %787 = cast(%var_731, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
  %788 = acos(%787) /* ty=Tensor[(6, 1, 1), float32] */;
  %789 = cast(%788, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
  %790 = atanh(%789) /* ty=Tensor[(6, 1, 1), float32] */;
  %791 = cast(%788, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%790, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %795 = cast(meta[relay.Constant][61] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %796 = reshape(%795, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %797 = divide(%793, %794) /* ty=Tensor[(6, ?, ?), float32] */;
  %798 = @func_142(%796) /* ty=Tensor[(13, 3, 13), float64] */;
  (%797, %798, meta[relay.Constant][61] /* ty=Tensor[(507), float64] */)
}

def @func_12881() -> (Tensor[(2, 5, 3), float32],) {
  %799 = @func_11188() /* ty=(Tensor[(2, 5, 3), float32],) */;
  %800 = %799.0;
  (%800,)
}

def @func_11061() -> (Tensor[(8, 8, 1), float64],) {
  %801 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  (%801,)
}

def @func_13414(%var_13407: Tensor[(507), float64], %var_13408: Tensor[(99), float32]) -> (Tensor[(3, 180), uint64], Tensor[(540), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, ?, 2), float32], Tensor[(12, 7, 2), bool], Tensor[(10, 16, 12), float32], Tensor[(507), float64], Tensor[(99), float32], Tensor[(135), bool]) {
  %802 = cast(meta[relay.Constant][62] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %803 = cast(meta[relay.Constant][62] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %804 = reshape(%802, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %805 = reshape(%803, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %806 = @func_11040(%804, %805) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) */;
  %807 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %808 = @func_11585() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) */;
  %809 = %808.2;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %811 = sinh(%810) /* ty=Tensor[(12, 1, 2), float32] */;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
  %813 = sqrt(%812) /* ty=Tensor[(12, 1, 2), float64] */;
  %814 = cast(%813, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
  %815 = exp(%814) /* ty=Tensor[(12, 1, 2), float64] */;
  %816 = cast(%811, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
  %817 = shape_of(%809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%809, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %820 = minimum(%818, %819) /* ty=Tensor[(12, ?, 2), float64] */;
  %821 = cast(%815, dtype="bool") /* ty=Tensor[(12, 1, 2), bool] */;
  %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%820, dtype="bool") /* ty=Tensor[(12, ?, 2), bool] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %825 = logical_or(%823, %824) /* ty=Tensor[(12, ?, 2), bool] */;
  %826 = cast(%811, dtype="bool") /* ty=Tensor[(12, 1, 2), bool] */;
  %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%825, dtype="bool") /* ty=Tensor[(12, ?, 2), bool] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %830 = less_equal(%828, %829) /* ty=Tensor[(12, ?, 2), bool] */;
  %831 = cast(%830, dtype="float32") /* ty=Tensor[(12, ?, 2), float32] */;
  %832 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%815, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %835 = cast(%813, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %836 = log2(%835) /* ty=Tensor[(12, 1, 2), float32] */;
  %837 = cast(%836, dtype="bool") /* ty=Tensor[(12, 1, 2), bool] */;
  %838 = cast(meta[relay.Constant][63] /* ty=Tensor[(12, 7, 2), float32] */, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %839 = cast(%var_13407, dtype="float64") /* ty=Tensor[(507), float64] */;
  %840 = cast(%var_13408, dtype="float32") /* ty=Tensor[(99), float32] */;
  %841 = cast(meta[relay.Constant][64] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %842 = reshape(%839, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %843 = reshape(%840, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %844 = reshape(%841, newshape=[45, 3]) /* ty=Tensor[(45, 3), bool] */;
  %845 = @func_9993(%842, %843, %844) /* ty=(Tensor[(8, 8, 1), float32], Tensor[(3, 16, 99), float32], Tensor[(507), float64], int64, Tensor[(507), float64], Tensor[(972), float32], Tensor[(25, 6), float32], Tensor[(99), float32], Tensor[(10, 16, 12), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(45, 3), bool]) */;
  %846 = %806.2;
  %847 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %848 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
  %849 = %807.0;
  %850 = power(%833, %834) /* ty=Tensor[(12, ?, 2), float32] */;
  %851 = less_equal(%837, %838) /* ty=Tensor[(12, 7, 2), bool] */;
  %852 = %845.8;
  (%846, meta[relay.Constant][62] /* ty=Tensor[(540), int32] */, %847, %848, %849, %850, %851, %852, %var_13407, %var_13408, meta[relay.Constant][64] /* ty=Tensor[(135), bool] */)
}

def @func_10641() -> Tensor[(8, 8, 1), float64] {
  %853 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %853.0
}

def @func_11931(%var_11911: Tensor[(20, 2), float64]) -> (Tensor[(8, 8, 1), float64], Tensor[(8, 5, 1), float64], Tensor[(8, 8, 1), float32], Tensor[(20, 2), uint8]) {
  %854 = cast(%var_11911, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
  %855 = reshape(%854, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float64] */;
  %856 = cast(%var_11911, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %857 = log(%856) /* ty=Tensor[(20, 2), float32] */;
  %858 = cast(%var_11911, dtype="uint8") /* ty=Tensor[(20, 2), uint8] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(2), int32] */;
  %860 = cast(%857, dtype="uint8") /* ty=Tensor[(20, 2), uint8] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %862 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %863 = @func_10604(%855) /* ty=Tensor[(8, 5, 1), float64] */;
  %864 = @func_11479() /* ty=Tensor[(8, 8, 1), float32] */;
  %865 = left_shift(%860, %861) /* ty=Tensor[(20, 2), uint8] */;
  (%862, %863, %864, %865)
}

def @func_5643(%var_5628: Tensor[(5, 5, 10), int8], %var_5634: Tensor[(6), float32]) -> (Tensor[(5, 5, 10), int8], Tensor[(6, ?, ?), float32], Tensor[(6), float32]) {
  %866 = cast(%var_5628, dtype="int8") /* ty=Tensor[(5, 5, 10), int8] */;
  %867 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(5, 5, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %868 = cast(meta[relay.Constant][65] /* ty=Tensor[(5, 5, 10), int8] */, dtype="int8") /* ty=Tensor[(5, 5, 10), int8] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %870 = cast(%var_5634, dtype="float32") /* ty=Tensor[(6), float32] */;
  %871 = reshape(%870, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float32] */;
  %872 = @func_755(%871) /* ty=(Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %873 = bitwise_or(%868, %869) /* ty=Tensor[(5, 5, 10), int8] */;
  %874 = %872.0;
  (%873, %874, %var_5634)
}

def @func_14478() -> (Tensor[(8, 8, 1), float64], Tensor[(126), float32]) {
  %875 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %876 = @func_10255() /* ty=Tensor[(8, 8, 1), float64] */;
  %877 = %875.2;
  (%876, %877)
}

def @func_14120(%var_14061: int64, %var_14090: Tensor[(252), float64], %var_14115: Tensor[(99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(507), float64], int64, Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(540), int32], Tensor[(99), float32]) {
  %878 = @func_12826() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %879 = cast(meta[relay.Constant][66] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %880 = cast(%var_14061, dtype="int64") /* ty=int64 */;
  %881 = cast(meta[relay.Constant][66] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %882 = reshape(%879, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %883 = reshape(%880, newshape=[]) /* ty=int64 */;
  %884 = reshape(%881, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %885 = @func_5342(%882, %883, %884) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
  %886 = cast(%var_14061, dtype="float64") /* ty=float64 */;
  %887 = cast(%var_14090, dtype="float64") /* ty=Tensor[(252), float64] */;
  %888 = reshape(%886, newshape=[]) /* ty=float64 */;
  %889 = reshape(%887, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %890 = cast(meta[relay.Constant][66] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %891 = cast(%var_14115, dtype="float32") /* ty=Tensor[(99), float32] */;
  %892 = reshape(%890, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %893 = reshape(%891, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %894 = @func_13414(%892, %893) /* ty=(Tensor[(3, 180), uint64], Tensor[(540), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, ?, 2), float32], Tensor[(12, 7, 2), bool], Tensor[(10, 16, 12), float32], Tensor[(507), float64], Tensor[(99), float32], Tensor[(135), bool]) */;
  %895 = %878.0;
  %896 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %897 = %885.7;
  %898 = @func_3641(%888, %889) /* ty=Tensor[(7, 9, 4), float64] */;
  %899 = %894.1;
  (%895, %896, %897, meta[relay.Constant][66] /* ty=Tensor[(507), float64] */, %var_14061, %898, %var_14090, %899, %var_14115)
}

def @func_8109(%var_8081: Tensor[(16, 1, 10), float64], %var_8097: Tensor[(99), float32]) -> (Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) {
  %900 = cast(%var_8081, dtype="float64") /* ty=Tensor[(16, 1, 10), float64] */;
  %901 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %902 = cast(meta[relay.Constant][67] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %903 = cast(%var_8097, dtype="float32") /* ty=Tensor[(99), float32] */;
  %904 = reshape(%901, newshape=[]) /* ty=int64 */;
  %905 = reshape(%902, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), int64] */;
  %906 = reshape(%903, newshape=[11, 9]) /* ty=Tensor[(11, 9), float32] */;
  %907 = @func_5092(%904, %905, %906) /* ty=(Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) */;
  %908 = log10(%900) /* ty=Tensor[(16, 1, 10), float64] */;
  %909 = %907.2;
  (%908, %909, 3 /* ty=int64 */, meta[relay.Constant][67] /* ty=Tensor[(120), int64] */, %var_8097)
}

def @func_15049(%var_15020: Tensor[(8, 8, 3), float64]) -> (Tensor[(8, 8, 3), uint32], Tensor[(8, 8, 1), float64]) {
  %910 = @func_12947() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
  %911 = %910.0;
  %912 = cast(%911, dtype="uint32") /* ty=Tensor[(8, 8, 1), uint32] */;
  %913 = cast(%var_15020, dtype="uint32") /* ty=Tensor[(8, 8, 3), uint32] */;
  %914 = right_shift(%912, %913) /* ty=Tensor[(8, 8, 3), uint32] */;
  %915 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  (%914, %915)
}

def @func_15127(%var_15077: Tensor[(135), bool], %var_15102: uint32, %var_15125: Tensor[(99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(8, 8, 1), float32], Tensor[(250, 448), uint64], Tensor[(14, 5, 1), uint32], uint32, Tensor[(8, 8, 70), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(99), float32]) {
  %916 = @func_14701() /* ty=(Tensor[(2, 5, 3), float32], Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) */;
  %917 = cast(%var_15077, dtype="bool") /* ty=Tensor[(135), bool] */;
  %918 = cast(%var_15077, dtype="bool") /* ty=Tensor[(135), bool] */;
  %919 = reshape(%917, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %920 = reshape(%918, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %921 = @func_6077(%919, %920) /* ty=(Tensor[(?, 9, 15), float32],) */;
  %922 = cast(meta[relay.Constant][68] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %923 = cast(meta[relay.Constant][69] /* ty=Tensor[(250, 1), int8] */, dtype="int8") /* ty=Tensor[(250, 1), int8] */;
  %924 = reshape(%922, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float32] */;
  %925 = reshape(%923, newshape=[25, 10]) /* ty=Tensor[(25, 10), int8] */;
  %926 = @func_12600(%924, %925) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(8, 8, 1), float32], Tensor[(8, 8, 1), float64], Tensor[(6, ?, ?), float32], Tensor[(25, 10), int8], Tensor[(6), float32], Tensor[(2, 5, 3), float32]) */;
  %927 = cast(meta[relay.Constant][69] /* ty=Tensor[(250, 1), int8] */, dtype="uint64") /* ty=Tensor[(250, 1), uint64] */;
  %928 = cast(meta[relay.Constant][68] /* ty=Tensor[(448), float32] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %929 = cast(%var_15102, dtype="uint32") /* ty=uint32 */;
  %930 = cast(meta[relay.Constant][70] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %931 = reshape(%929, newshape=[]) /* ty=uint32 */;
  %932 = reshape(%930, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), uint32] */;
  %933 = @func_10296(%931, %932) /* ty=(Tensor[(14, 5, 1), uint32],) */;
  %934 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
  %935 = %934.1;
  %936 = cast(%935, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  %937 = cast(meta[relay.Constant][70] /* ty=Tensor[(70), uint32] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %938 = cast(meta[relay.Constant][71] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %939 = %933.0;
  %940 = cast(%939, dtype="uint32") /* ty=Tensor[(14, 5, 1), uint32] */;
  %941 = reshape(%938, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %942 = reshape(%940, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %943 = @func_11364(%941, %942) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70), uint32]) */;
  %944 = cast(meta[relay.Constant][72] /* ty=Tensor[(2288), uint32] */, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
  %945 = cast(%var_15125, dtype="float32") /* ty=Tensor[(99), float32] */;
  %946 = reshape(%944, newshape=[2288]) /* ty=Tensor[(2288), uint32] */;
  %947 = reshape(%945, newshape=[1, 99]) /* ty=Tensor[(1, 99), float32] */;
  %948 = @func_14663(%946, %947) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(1, 99), float32]) */;
  %949 = %916.2;
  %950 = %921.0;
  %951 = %926.1;
  %952 = bitwise_or(%927, %928) /* ty=Tensor[(250, 448), uint64] */;
  %953 = floor_divide(%936, %937) /* ty=Tensor[(8, 8, 70), float64] */;
  %954 = %943.1;
  %955 = %948.1;
  (%949, %950, %var_15077, %951, %952, %939, %var_15102, %953, %954, meta[relay.Constant][71] /* ty=Tensor[(40), float64] */, %955, meta[relay.Constant][72] /* ty=Tensor[(2288), uint32] */, %var_15125)
}

def @func_13532() -> (Tensor[(8, 8, 1), float64],) {
  %956 = @func_11335() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %957 = %956.0;
  (%957,)
}

def @func_14637() -> (Tensor[(2, 5, 3), float32],) {
  %958 = @func_11188() /* ty=(Tensor[(2, 5, 3), float32],) */;
  %959 = %958.0;
  (%959,)
}

def @func_14211(%var_14176: Tensor[(42), float32]) -> (Tensor[(8, 8, ?), uint16], Tensor[(3, 13, 14), bool], Tensor[(42), float32], Tensor[(546), float32], Tensor[(8, 8, 1), float32]) {
  %960 = @func_11741() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %961 = %960.0;
  %962 = cast(meta[relay.Constant][73] /* ty=Tensor[(8, 8, 1), float64] */, dtype="uint16") /* ty=Tensor[(8, 8, 1), uint16] */;
  %963 = shape_of(%961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%961, dtype="uint16") /* ty=Tensor[(8, 8, 1), uint16] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %966 = cast(%var_14176, dtype="float32") /* ty=Tensor[(42), float32] */;
  %967 = cast(meta[relay.Constant][74] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %968 = reshape(%966, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
  %969 = reshape(%967, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
  %970 = @func_1229(%968, %969) /* ty=(Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %971 = right_shift(%964, %965) /* ty=Tensor[(8, 8, ?), uint16] */;
  %972 = %970.0;
  %973 = @func_11479() /* ty=Tensor[(8, 8, 1), float32] */;
  (%971, %972, %var_14176, meta[relay.Constant][74] /* ty=Tensor[(546), float32] */, %973)
}

def @func_6077(%var_6048: Tensor[(1, 9, 15), bool], %var_6049: Tensor[(1, 9, 15), bool]) -> (Tensor[(?, 9, 15), float32],) {
  %974 = cast(%var_6049, dtype="bool") /* ty=Tensor[(1, 9, 15), bool] */;
  %975 = shape_of(%var_6048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%var_6048, dtype="bool") /* ty=Tensor[(1, 9, 15), bool] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %978 = logical_or(%976, %977) /* ty=Tensor[(?, 9, 15), bool] */;
  %979 = cast(%978, dtype="float64") /* ty=Tensor[(?, 9, 15), float64] */;
  %980 = shape_of(%var_6048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(%var_6048, dtype="float64") /* ty=Tensor[(1, 9, 15), float64] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %983 = floor_divide(%981, %982) /* ty=Tensor[(?, 9, 15), float64] */;
  %984 = cast(%983, dtype="float32") /* ty=Tensor[(?, 9, 15), float32] */;
  %985 = sigmoid(%984) /* ty=Tensor[(?, 9, 15), float32] */;
  (%985,)
}

def @func_12116(%var_12083: Tensor[(507), float64]) -> Tensor[(507), uint8] {
  %986 = @func_11865() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(507), float64], Tensor[(126), float32]) */;
  %987 = %986.2;
  %988 = cast(%987, dtype="float64") /* ty=Tensor[(507), float64] */;
  %989 = atan(%988) /* ty=Tensor[(507), float64] */;
  %990 = cast(%var_12083, dtype="bool") /* ty=Tensor[(507), bool] */;
  %991 = shape_of(%987, dtype="int32") /* ty=Tensor[(1), int32] */;
  %992 = cast(%987, dtype="bool") /* ty=Tensor[(507), bool] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?), bool] */;
  %994 = equal(%992, %993) /* ty=Tensor[(507), bool] */;
  %995 = cast(%994, dtype="uint8") /* ty=Tensor[(507), uint8] */;
  %996 = shape_of(%989, dtype="int32") /* ty=Tensor[(1), int32] */;
  %997 = cast(%989, dtype="uint8") /* ty=Tensor[(507), uint8] */;
  %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?), uint8] */;
  bitwise_and(%997, %998) /* ty=Tensor[(507), uint8] */
}

def @func_12658() -> (Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) {
  %999 = @func_12631() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %1000 = cast(meta[relay.Constant][75] /* ty=Tensor[(18, 30), int32] */, dtype="int32") /* ty=Tensor[(18, 30), int32] */;
  %1001 = cast(meta[relay.Constant][75] /* ty=Tensor[(18, 30), int32] */, dtype="int32") /* ty=Tensor[(18, 30), int32] */;
  %1002 = reshape(%1000, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %1003 = reshape(%1001, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %1004 = @func_11040(%1002, %1003) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) */;
  %1005 = %999.0;
  %1006 = %1004.2;
  (%1005, %1006, meta[relay.Constant][75] /* ty=Tensor[(18, 30), int32] */)
}

def @func_14358(%var_14333: Tensor[(960), float64]) -> (Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(960), float64], Tensor[(8, 8, 1), float64]) {
  %1007 = cast(%var_14333, dtype="float64") /* ty=Tensor[(960), float64] */;
  %1008 = reshape(%1007, newshape=[8, 8, 15]) /* ty=Tensor[(8, 8, 15), float64] */;
  %1009 = @func_10071(%1008) /* ty=(Tensor[(8, 8, 15), int8], Tensor[(13, 3, 13), float64], Tensor[(13, 39), float64]) */;
  %1010 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
  %1011 = %1009.1;
  %1012 = @func_12675() /* ty=Tensor[(8, 8, 1), float64] */;
  (%1010, %1011, %var_14333, %1012)
}

def @func_11040(%var_11030: Tensor[(3, 180), int32], %var_11032: Tensor[(3, 180), int32]) -> (Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) {
  %1013 = cast(%var_11030, dtype="int32") /* ty=Tensor[(3, 180), int32] */;
  %1014 = cast(%var_11030, dtype="int32") /* ty=Tensor[(3, 180), int32] */;
  %1015 = reshape(%1013, newshape=[12, 3, 15]) /* ty=Tensor[(12, 3, 15), int32] */;
  %1016 = reshape(%1014, newshape=[12, 3, 15]) /* ty=Tensor[(12, 3, 15), int32] */;
  %1017 = @func_8352(%1015, %1016) /* ty=(Tensor[(12, 3, 15), int32],) */;
  %1018 = cast(%var_11032, dtype="uint64") /* ty=Tensor[(3, 180), uint64] */;
  %1019 = shape_of(%var_11030, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1020 = cast(%var_11030, dtype="uint64") /* ty=Tensor[(3, 180), uint64] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1022 = cast(%var_11032, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %1023 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %1024 = %1017.0;
  %1025 = bitwise_or(%1020, %1021) /* ty=Tensor[(3, 180), uint64] */;
  %1026 = sinh(%1022) /* ty=Tensor[(3, 180), float64] */;
  (%1023, %1024, %1025, %1026)
}

def @func_15147() -> Tensor[(8, 8, 1), float64] {
  %1027 = @func_13532() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %1027.0
}

def @func_10071(%var_10048: Tensor[(8, 8, 15), float64]) -> (Tensor[(8, 8, 15), int8], Tensor[(13, 3, 13), float64], Tensor[(13, 39), float64]) {
  %1028 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  %1029 = cast(%1028, dtype="int8") /* ty=Tensor[(8, 8, 1), int8] */;
  %1030 = cast(%var_10048, dtype="int8") /* ty=Tensor[(8, 8, 15), int8] */;
  %1031 = cast(meta[relay.Constant][76] /* ty=Tensor[(13, 39), float64] */, dtype="float64") /* ty=Tensor[(13, 39), float64] */;
  %1032 = reshape(%1031, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %1033 = bitwise_xor(%1029, %1030) /* ty=Tensor[(8, 8, 15), int8] */;
  %1034 = @func_142(%1032) /* ty=Tensor[(13, 3, 13), float64] */;
  (%1033, %1034, meta[relay.Constant][76] /* ty=Tensor[(13, 39), float64] */)
}

def @func_13800(%var_13785: Tensor[(1680), float64], %var_13786: Tensor[(135), bool]) -> (Tensor[(8, 8, 1), float64], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(8, 8, 1), float64]) {
  %1035 = cast(meta[relay.Constant][77] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1036 = cast(meta[relay.Constant][77] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1037 = cast(%var_13785, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1038 = cast(%var_13786, dtype="bool") /* ty=Tensor[(135), bool] */;
  %1039 = reshape(%1035, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %1040 = reshape(%1036, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %1041 = reshape(%1037, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %1042 = reshape(%1038, newshape=[135]) /* ty=Tensor[(135), bool] */;
  %1043 = @func_6152(%1039, %1040, %1041, %1042) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) */;
  %1044 = @func_12208() /* ty=Tensor[(8, 8, 1), float64] */;
  %1045 = %1043.4;
  %1046 = @func_13130() /* ty=Tensor[(8, 8, 1), float64] */;
  (%1044, %1045, meta[relay.Constant][77] /* ty=Tensor[(1920), float64] */, %var_13785, %var_13786, %1046)
}

def @func_142(%var_128: Tensor[(13, 3, 13), float64]) -> Tensor[(13, 3, 13), float64] {
  %1047 = cast(%var_128, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  exp(%1047) /* ty=Tensor[(13, 3, 13), float64] */
}

def @func_11843(%var_11838: Tensor[(4, 11, 7), float64], %var_11839: Tensor[(4, 11, 7), float64]) -> (Tensor[(4, 11, 7), float64],) {
  %1048 = cast(%var_11839, dtype="float64") /* ty=Tensor[(4, 11, 7), float64] */;
  %1049 = shape_of(%var_11838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1050 = cast(%var_11838, dtype="float64") /* ty=Tensor[(4, 11, 7), float64] */;
  %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1052 = floor_mod(%1050, %1051) /* ty=Tensor[(4, 11, 7), float64] */;
  (%1052,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10641() -> Tensor[(8, 8, 1), float64] {
  %0 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %0.0
}

def @func_11480() -> Tensor[(8, 8, 1), float32] {
  %2 = fn () -> Tensor[(8, 8, 1), float32] {
    %1 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
    %1.0
  };
  %2() /* ty=Tensor[(8, 8, 1), float32] */
}

def @func_6081(%var_6079: Tensor[(1, 9, 15), bool], %var_6080: Tensor[(1, 9, 15), bool]) -> (Tensor[(?, 9, 15), float32],) {
  @func_6077(%var_6079, %var_6080) /* ty=(Tensor[(?, 9, 15), float32],) */
}

def @func_11867() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(507), float64], Tensor[(126), float32]) {
  @func_11865() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(507), float64], Tensor[(126), float32]) */
}

def @func_10312() -> Tensor[(8, 8, 1), float64] {
  %3 = fn () -> Tensor[(8, 8, 1), float64] {
    @func_10255() /* ty=Tensor[(8, 8, 1), float64] */
  };
  %3() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_12882() -> (Tensor[(2, 5, 3), float32],) {
  %6 = fn () -> (Tensor[(2, 5, 3), float32],) {
    %4 = @func_11188() /* ty=(Tensor[(2, 5, 3), float32],) */;
    %5 = %4.0;
    (%5,)
  };
  %6() /* ty=(Tensor[(2, 5, 3), float32],) */
}

def @func_14480() -> (Tensor[(8, 8, 1), float64], Tensor[(126), float32]) {
  @func_14478() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(126), float32]) */
}

def @func_7102(%var_7100: Tensor[(2304), float32], %var_7101: Tensor[(42), float32]) -> (Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) {
  @func_7098(%var_7100, %var_7101) /* ty=(Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) */
}

def @func_15132(%var_15129: Tensor[(135), bool], %var_15130: uint32, %var_15131: Tensor[(99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(8, 8, 1), float32], Tensor[(250, 448), uint64], Tensor[(14, 5, 1), uint32], uint32, Tensor[(8, 8, 70), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(99), float32]) {
  @func_15127(%var_15129, %var_15130, %var_15131) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(8, 8, 1), float32], Tensor[(250, 448), uint64], Tensor[(14, 5, 1), uint32], uint32, Tensor[(8, 8, 70), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(99), float32]) */
}

def @func_10588() -> (Tensor[(7, 2, 9), float32], Tensor[(13, 3, 13), float64]) {
  @func_10586() /* ty=(Tensor[(7, 2, 9), float32], Tensor[(13, 3, 13), float64]) */
}

def @func_1360(%var_1359: Tensor[(16, 13, 11), uint32]) -> (Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) {
  %36 = fn (%var_1283: Tensor[(16, 13, 11), uint32]) -> (Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) {
    %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
    %8 = reshape(%7, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
    %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
    %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %11 = reshape(%9, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
    %12 = reshape(%10, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
    %13 = @func_1229(%11, %12) /* ty=(Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
    %14 = cast(meta[relay.Constant][3] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
    %15 = reshape(%14, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float32] */;
    %16 = @func_755(%15) /* ty=(Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
    %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 6), float32] */;
    %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %19 = reshape(%17, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
    %20 = reshape(%18, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
    %21 = @func_1229(%19, %20) /* ty=(Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
    %22 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 13, 11), uint32] */, dtype="uint32") /* ty=Tensor[(16, 13, 11), uint32] */;
    %23 = shape_of(%var_1283, dtype="int32") /* ty=Tensor[(3), int32] */;
    %24 = cast(%var_1283, dtype="uint32") /* ty=Tensor[(16, 13, 11), uint32] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %26 = bitwise_or(%24, %25) /* ty=Tensor[(16, 13, 11), uint32] */;
    %27 = cast(%26, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
    %28 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(16, 13, 11), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %29 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 13, 11), uint32] */, dtype="float64") /* ty=Tensor[(16, 13, 11), float64] */;
    %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %31 = @func_142(%8) /* ty=Tensor[(13, 3, 13), float64] */;
    %32 = %13.0;
    %33 = %16.0;
    %34 = %21.1;
    %35 = mod(%29, %30) /* ty=Tensor[(16, 13, 11), float64] */;
    (%31, meta[relay.Constant][0] /* ty=Tensor[(507), float64] */, %32, meta[relay.Constant][1] /* ty=Tensor[(7, 6), float32] */, meta[relay.Constant][2] /* ty=Tensor[(546), float32] */, %33, meta[relay.Constant][3] /* ty=Tensor[(6), float32] */, %34, %35)
  };
  %36(%var_1359) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */
}

def @func_9998(%var_9995: Tensor[(507), float64], %var_9996: Tensor[(99), float32], %var_9997: Tensor[(45, 3), bool]) -> (Tensor[(8, 8, 1), float32], Tensor[(3, 16, 99), float32], Tensor[(507), float64], int64, Tensor[(507), float64], Tensor[(972), float32], Tensor[(25, 6), float32], Tensor[(99), float32], Tensor[(10, 16, 12), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(45, 3), bool]) {
  @func_9993(%var_9995, %var_9996, %var_9997) /* ty=(Tensor[(8, 8, 1), float32], Tensor[(3, 16, 99), float32], Tensor[(507), float64], int64, Tensor[(507), float64], Tensor[(972), float32], Tensor[(25, 6), float32], Tensor[(99), float32], Tensor[(10, 16, 12), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(45, 3), bool]) */
}

def @func_7098(%var_7084: Tensor[(2304), float32], %var_7085: Tensor[(42), float32]) -> (Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) {
  %37 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 1, 2), float32] */, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %38 = cast(%var_7084, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %39 = cast(%var_7085, dtype="float32") /* ty=Tensor[(42), float32] */;
  %40 = reshape(%38, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %41 = reshape(%39, newshape=[14, 3]) /* ty=Tensor[(14, 3), float32] */;
  %42 = @func_1854(%40, %41) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(13, 3, 13), float64], Tensor[(14, 3), float32], Tensor[(91, 6), float32]) */;
  %43 = log(%37) /* ty=Tensor[(12, 1, 2), float32] */;
  %44 = %42.3;
  (%43, %44, %var_7084, %var_7085)
}

def @func_10074(%var_10072: Tensor[(8, 8, 15), float64]) -> (Tensor[(8, 8, 15), int8], Tensor[(13, 3, 13), float64], Tensor[(13, 39), float64]) {
  @func_10071(%var_10072) /* ty=(Tensor[(8, 8, 15), int8], Tensor[(13, 3, 13), float64], Tensor[(13, 39), float64]) */
}

def @func_13718() -> (Tensor[(8, 8, 1), float64],) {
  %46 = fn () -> (Tensor[(8, 8, 1), float64],) {
    %45 = @func_12675() /* ty=Tensor[(8, 8, 1), float64] */;
    (%45,)
  };
  %46() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_14323() -> Tensor[(8, 8, 1), float64] {
  @func_13025() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_11219(%var_11217: Tensor[(2304), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(135), bool]) {
  @func_11216(%var_11217) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(135), bool]) */
}

def @func_7653(%var_7629: Tensor[(7, 2, 9), float32]) -> Tensor[(7, 2, 9), float32] {
  %47 = cast(%var_7629, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
  log10(%47) /* ty=Tensor[(7, 2, 9), float32] */
}

def @func_11945() -> Tensor[(8, 8, 1), float64] {
  %49 = fn () -> Tensor[(8, 8, 1), float64] {
    %48 = @func_11741() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %48.0
  };
  %49() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_14325() -> Tensor[(8, 8, 1), float64] {
  @func_14323() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_13524() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) {
  %53 = fn () -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) {
    %50 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
    %51 = @func_13025() /* ty=Tensor[(8, 8, 1), float64] */;
    %52 = %50.1;
    (%51, %52)
  };
  %53() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */
}

def @func_6077(%var_6048: Tensor[(1, 9, 15), bool], %var_6049: Tensor[(1, 9, 15), bool]) -> (Tensor[(?, 9, 15), float32],) {
  %54 = cast(%var_6049, dtype="bool") /* ty=Tensor[(1, 9, 15), bool] */;
  %55 = shape_of(%var_6048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%var_6048, dtype="bool") /* ty=Tensor[(1, 9, 15), bool] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %58 = logical_or(%56, %57) /* ty=Tensor[(?, 9, 15), bool] */;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(?, 9, 15), float64] */;
  %60 = shape_of(%var_6048, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%var_6048, dtype="float64") /* ty=Tensor[(1, 9, 15), float64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %63 = floor_divide(%61, %62) /* ty=Tensor[(?, 9, 15), float64] */;
  %64 = cast(%63, dtype="float32") /* ty=Tensor[(?, 9, 15), float32] */;
  %65 = sigmoid(%64) /* ty=Tensor[(?, 9, 15), float32] */;
  (%65,)
}

def @func_11613() -> Tensor[(8, 8, 1), float64] {
  @func_11611() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_13675() -> (Tensor[(8, 8, 1), float64], Tensor[(99), float32]) {
  %66 = @func_11061() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %67 = %66.0;
  %68 = @func_12550() /* ty=Tensor[(99), float32] */;
  (%67, %68)
}

def @func_10071(%var_10048: Tensor[(8, 8, 15), float64]) -> (Tensor[(8, 8, 15), int8], Tensor[(13, 3, 13), float64], Tensor[(13, 39), float64]) {
  %69 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  %70 = cast(%69, dtype="int8") /* ty=Tensor[(8, 8, 1), int8] */;
  %71 = cast(%var_10048, dtype="int8") /* ty=Tensor[(8, 8, 15), int8] */;
  %72 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 39), float64] */, dtype="float64") /* ty=Tensor[(13, 39), float64] */;
  %73 = reshape(%72, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %74 = bitwise_xor(%70, %71) /* ty=Tensor[(8, 8, 15), int8] */;
  %75 = @func_142(%73) /* ty=Tensor[(13, 3, 13), float64] */;
  (%74, %75, meta[relay.Constant][6] /* ty=Tensor[(13, 39), float64] */)
}

def @func_10434() -> (Tensor[(8, 8, 1), float64],) {
  @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_13418(%var_13416: Tensor[(507), float64], %var_13417: Tensor[(99), float32]) -> (Tensor[(3, 180), uint64], Tensor[(540), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, ?, 2), float32], Tensor[(12, 7, 2), bool], Tensor[(10, 16, 12), float32], Tensor[(507), float64], Tensor[(99), float32], Tensor[(135), bool]) {
  @func_13414(%var_13416, %var_13417) /* ty=(Tensor[(3, 180), uint64], Tensor[(540), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, ?, 2), float32], Tensor[(12, 7, 2), bool], Tensor[(10, 16, 12), float32], Tensor[(507), float64], Tensor[(99), float32], Tensor[(135), bool]) */
}

def @func_11336() -> (Tensor[(8, 8, 1), float64],) {
  %77 = fn () -> (Tensor[(8, 8, 1), float64],) {
    %76 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
    (%76,)
  };
  %77() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_11933(%var_11932: Tensor[(20, 2), float64]) -> (Tensor[(8, 8, 1), float64], Tensor[(8, 5, 1), float64], Tensor[(8, 8, 1), float32], Tensor[(20, 2), uint8]) {
  %90 = fn (%var_11911: Tensor[(20, 2), float64]) -> (Tensor[(8, 8, 1), float64], Tensor[(8, 5, 1), float64], Tensor[(8, 8, 1), float32], Tensor[(20, 2), uint8]) {
    %78 = cast(%var_11911, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
    %79 = reshape(%78, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float64] */;
    %80 = cast(%var_11911, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %81 = log(%80) /* ty=Tensor[(20, 2), float32] */;
    %82 = cast(%var_11911, dtype="uint8") /* ty=Tensor[(20, 2), uint8] */;
    %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(2), int32] */;
    %84 = cast(%81, dtype="uint8") /* ty=Tensor[(20, 2), uint8] */;
    %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %86 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
    %87 = @func_10604(%79) /* ty=Tensor[(8, 5, 1), float64] */;
    %88 = @func_11479() /* ty=Tensor[(8, 8, 1), float32] */;
    %89 = left_shift(%84, %85) /* ty=Tensor[(20, 2), uint8] */;
    (%86, %87, %88, %89)
  };
  %90(%var_11932) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 5, 1), float64], Tensor[(8, 8, 1), float32], Tensor[(20, 2), uint8]) */
}

def @func_10466() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) {
  %91 = @func_10255() /* ty=Tensor[(8, 8, 1), float64] */;
  %92 = @func_10255() /* ty=Tensor[(8, 8, 1), float64] */;
  (%91, %92)
}

def @func_11843(%var_11838: Tensor[(4, 11, 7), float64], %var_11839: Tensor[(4, 11, 7), float64]) -> (Tensor[(4, 11, 7), float64],) {
  %93 = cast(%var_11839, dtype="float64") /* ty=Tensor[(4, 11, 7), float64] */;
  %94 = shape_of(%var_11838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%var_11838, dtype="float64") /* ty=Tensor[(4, 11, 7), float64] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %97 = floor_mod(%95, %96) /* ty=Tensor[(4, 11, 7), float64] */;
  (%97,)
}

def @func_14360(%var_14359: Tensor[(960), float64]) -> (Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(960), float64], Tensor[(8, 8, 1), float64]) {
  %104 = fn (%var_14333: Tensor[(960), float64]) -> (Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(960), float64], Tensor[(8, 8, 1), float64]) {
    %98 = cast(%var_14333, dtype="float64") /* ty=Tensor[(960), float64] */;
    %99 = reshape(%98, newshape=[8, 8, 15]) /* ty=Tensor[(8, 8, 15), float64] */;
    %100 = @func_10071(%99) /* ty=(Tensor[(8, 8, 15), int8], Tensor[(13, 3, 13), float64], Tensor[(13, 39), float64]) */;
    %101 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
    %102 = %100.1;
    %103 = @func_12675() /* ty=Tensor[(8, 8, 1), float64] */;
    (%101, %102, %var_14333, %103)
  };
  %104(%var_14359) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(960), float64], Tensor[(8, 8, 1), float64]) */
}

def @func_12209() -> Tensor[(8, 8, 1), float64] {
  %105 = fn () -> Tensor[(8, 8, 1), float64] {
    @func_10641() /* ty=Tensor[(8, 8, 1), float64] */
  };
  %105() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_14459() -> (Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) {
  %106 = @func_13280() /* ty=(Tensor[(8, 8, 8), int16],) */;
  %107 = @func_12374() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %108 = %106.0;
  %109 = %107.0;
  (%108, %109)
}

def @func_13884(%var_13882: Tensor[(160), float64], %var_13883: Tensor[(11, 9), float32]) -> (Tensor[(18, 30), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(16, 1, 10), float64], Tensor[(160), float64], Tensor[(11, 9), float32]) {
  %122 = fn (%var_13876: Tensor[(160), float64], %var_13877: Tensor[(11, 9), float32]) -> (Tensor[(18, 30), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(16, 1, 10), float64], Tensor[(160), float64], Tensor[(11, 9), float32]) {
    %110 = @func_13116() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(18, 30), int32]) */;
    %111 = @func_11335() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %112 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %113 = cast(%var_13876, dtype="float64") /* ty=Tensor[(160), float64] */;
    %114 = cast(%var_13877, dtype="float32") /* ty=Tensor[(11, 9), float32] */;
    %115 = reshape(%113, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), float64] */;
    %116 = reshape(%114, newshape=[99]) /* ty=Tensor[(99), float32] */;
    %117 = @func_8109(%115, %116) /* ty=(Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) */;
    %118 = %110.1;
    %119 = %111.0;
    %120 = %112.0;
    %121 = %117.0;
    (%118, %119, %120, %121, %var_13876, %var_13877)
  };
  %122(%var_13882, %var_13883) /* ty=(Tensor[(18, 30), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(16, 1, 10), float64], Tensor[(160), float64], Tensor[(11, 9), float32]) */
}

def @func_13924() -> Tensor[(8, 8, 1), float64] {
  %124 = fn () -> Tensor[(8, 8, 1), float64] {
    %123 = @func_11585() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) */;
    %123.1
  };
  %124() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_12600(%var_12569: Tensor[(8, 8, 7), float32], %var_12588: Tensor[(25, 10), int8]) -> (Tensor[(8, 8, 7), bool], Tensor[(8, 8, 1), float32], Tensor[(8, 8, 1), float64], Tensor[(6, ?, ?), float32], Tensor[(25, 10), int8], Tensor[(6), float32], Tensor[(2, 5, 3), float32]) {
  %125 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %126 = %125.0;
  %127 = cast(%126, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %128 = cast(%var_12569, dtype="bool") /* ty=Tensor[(8, 8, 7), bool] */;
  %129 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %130 = @func_12150() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %131 = cast(%var_12588, dtype="int8") /* ty=Tensor[(25, 10), int8] */;
  %132 = cast(meta[relay.Constant][7] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %133 = reshape(%131, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), int8] */;
  %134 = reshape(%132, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %135 = @func_5643(%133, %134) /* ty=(Tensor[(5, 5, 10), int8], Tensor[(6, ?, ?), float32], Tensor[(6), float32]) */;
  %136 = @func_11188() /* ty=(Tensor[(2, 5, 3), float32],) */;
  %137 = logical_and(%127, %128) /* ty=Tensor[(8, 8, 7), bool] */;
  %138 = %129.0;
  %139 = %130.0;
  %140 = %135.1;
  %141 = %136.0;
  (%137, %138, %139, %140, %var_12588, meta[relay.Constant][7] /* ty=Tensor[(6), float32] */, %141)
}

def @func_13614(%var_13601: Tensor[(2304), float32], %var_13602: Tensor[(42), float32], %var_13603: Tensor[(1680), float64]) -> (Tensor[(3, 180), float32], Tensor[(?, 9, 15), float32], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(8, 8, 507), uint8]) {
  %142 = @func_12658() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) */;
  %143 = %142.1;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %145 = sigmoid(%144) /* ty=Tensor[(3, 180), float64] */;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %148 = cast(%var_13601, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %149 = cast(%var_13602, dtype="float32") /* ty=Tensor[(42), float32] */;
  %150 = cast(%var_13603, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %151 = cast(meta[relay.Constant][9] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %152 = cast(meta[relay.Constant][8] /* ty=Tensor[(864), float32] */, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %153 = reshape(%147, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %154 = reshape(%148, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %155 = reshape(%149, newshape=[14, 3]) /* ty=Tensor[(14, 3), float32] */;
  %156 = reshape(%150, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %157 = reshape(%151, newshape=[135]) /* ty=Tensor[(135), bool] */;
  %158 = reshape(%152, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint32] */;
  %159 = @func_8314(%153, %154, %155, %156, %157, %158) /* ty=(Tensor[(42), float32], Tensor[(2304), float32], Tensor[(14, 3), float32], Tensor[(12, 6, 12), bool], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(7, 6), float32], Tensor[(8, 286), uint32], Tensor[(13, 3, 13), float64], Tensor[(12, 6, 12), int32]) */;
  %160 = @func_12494() /* ty=(Tensor[(160), float64], Tensor[(99), float32], Tensor[(8, 8, 507), bool], Tensor[(8, 8, 507), uint8], Tensor[(99), float64]) */;
  %161 = asinh(%146) /* ty=Tensor[(3, 180), float32] */;
  %162 = %159.4;
  %163 = %160.3;
  (%161, %162, meta[relay.Constant][8] /* ty=Tensor[(864), float32] */, %var_13601, %var_13602, %var_13603, meta[relay.Constant][9] /* ty=Tensor[(135), bool] */, %163)
}

def @func_14461() -> (Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) {
  @func_14459() /* ty=(Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) */
}

def @func_13677() -> (Tensor[(8, 8, 1), float64], Tensor[(99), float32]) {
  @func_13675() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(99), float32]) */
}

def @func_14521() -> Tensor[(8, 8, 1), float64] {
  @func_14519() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_12494() -> (Tensor[(160), float64], Tensor[(99), float32], Tensor[(8, 8, 507), bool], Tensor[(8, 8, 507), uint8], Tensor[(99), float64]) {
  %164 = @func_12150() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %165 = %164.0;
  %166 = cast(meta[relay.Constant][12] /* ty=Tensor[(507), float64] */, dtype="bool") /* ty=Tensor[(507), bool] */;
  %167 = cast(%165, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %168 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %169 = cast(meta[relay.Constant][12] /* ty=Tensor[(507), float64] */, dtype="uint8") /* ty=Tensor[(507), uint8] */;
  %170 = cast(%168, dtype="uint8") /* ty=Tensor[(8, 8, 1), uint8] */;
  %171 = cast(meta[relay.Constant][10] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %172 = cast(meta[relay.Constant][11] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %173 = cast(meta[relay.Constant][12] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %174 = reshape(%171, newshape=[160, 1]) /* ty=Tensor[(160, 1), float64] */;
  %175 = reshape(%172, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %176 = reshape(%173, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %177 = @func_12253(%174, %175, %176) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(99), float32], Tensor[(160, 1), float64], Tensor[(99), float32], int64, Tensor[(507), float64], Tensor[(135), bool]) */;
  %178 = %177.1;
  %179 = cast(%178, dtype="float64") /* ty=Tensor[(99), float64] */;
  %180 = logical_or(%166, %167) /* ty=Tensor[(8, 8, 507), bool] */;
  %181 = maximum(%169, %170) /* ty=Tensor[(8, 8, 507), uint8] */;
  %182 = atan(%179) /* ty=Tensor[(99), float64] */;
  (meta[relay.Constant][10] /* ty=Tensor[(160), float64] */, meta[relay.Constant][11] /* ty=Tensor[(99), float32] */, %180, %181, %182)
}

def @func_14663(%var_14658: Tensor[(2288), uint32], %var_14659: Tensor[(1, 99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(1, 99), float32]) {
  %183 = @func_14459() /* ty=(Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) */;
  %184 = cast(%var_14658, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
  %185 = cast(%var_14659, dtype="float32") /* ty=Tensor[(1, 99), float32] */;
  %186 = reshape(%184, newshape=[2288]) /* ty=Tensor[(2288), uint32] */;
  %187 = reshape(%185, newshape=[99, 1]) /* ty=Tensor[(99, 1), float32] */;
  %188 = @func_12407(%186, %187) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(2, 3, 6), uint64], Tensor[(99, 1), float32], Tensor[(36), uint64]) */;
  %189 = %183.1;
  %190 = %188.3;
  (%189, %190, %var_14658, %var_14659)
}

def @func_12150() -> (Tensor[(8, 8, 1), float64],) {
  %191 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %192 = %191.0;
  (%192,)
}

def @func_9261(%var_9256: Tensor[(9, 12, 9), float32], %var_9257: Tensor[(150, 1), float32], %var_9258: Tensor[(507), float64], %var_9259: Tensor[(99), float32], %var_9260: Tensor[(9, 12, 9), float32]) -> (Tensor[(160), float64], Tensor[(507), float64], int64, Tensor[(9, 12, 9), float32], Tensor[(?, 9, 15), float32], Tensor[(1, 135), bool], Tensor[(150, 99), bool]) {
  @func_9254(%var_9256, %var_9257, %var_9258, %var_9259, %var_9260) /* ty=(Tensor[(160), float64], Tensor[(507), float64], int64, Tensor[(9, 12, 9), float32], Tensor[(?, 9, 15), float32], Tensor[(1, 135), bool], Tensor[(150, 99), bool]) */
}

def @func_11806(%var_11804: Tensor[(40), float64], %var_11805: Tensor[(70, 1), uint32]) -> (Tensor[(8, 8, 1), float32], Tensor[(12, 3, 15), int32], Tensor[(54, 10), int32], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70, 1), uint32]) {
  @func_11802(%var_11804, %var_11805) /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 3, 15), int32], Tensor[(54, 10), int32], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70, 1), uint32]) */
}

def @func_1232(%var_1230: Tensor[(3, 1, 14), float32], %var_1231: Tensor[(3, 13, 14), float32]) -> (Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) {
  %199 = fn (%var_1196: Tensor[(3, 1, 14), float32], %var_1197: Tensor[(3, 13, 14), float32]) -> (Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) {
    %193 = cast(%var_1196, dtype="bool") /* ty=Tensor[(3, 1, 14), bool] */;
    %194 = cast(%var_1197, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
    %195 = cast(meta[relay.Constant][13] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
    %196 = reshape(%195, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
    %197 = greater(%193, %194) /* ty=Tensor[(3, 13, 14), bool] */;
    %198 = @func_142(%196) /* ty=Tensor[(13, 3, 13), float64] */;
    (%197, %198, meta[relay.Constant][13] /* ty=Tensor[(507), float64] */)
  };
  %199(%var_1230, %var_1231) /* ty=(Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */
}

def @func_11189() -> (Tensor[(2, 5, 3), float32],) {
  %202 = fn () -> (Tensor[(2, 5, 3), float32],) {
    %200 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 5, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 3), float32] */;
    %201 = sin(%200) /* ty=Tensor[(2, 5, 3), float32] */;
    (%201,)
  };
  %202() /* ty=(Tensor[(2, 5, 3), float32],) */
}

def @func_14029(%var_14028: Tensor[(42), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(42), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(13, 15, 2), float64], Tensor[(390), float64], Tensor[(7, 2, 9), float32]) {
  %215 = fn (%var_13990: Tensor[(42), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(42), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(13, 15, 2), float64], Tensor[(390), float64], Tensor[(7, 2, 9), float32]) {
    %203 = cast(meta[relay.Constant][15] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %204 = cast(%var_13990, dtype="float32") /* ty=Tensor[(42), float32] */;
    %205 = reshape(%203, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
    %206 = reshape(%204, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %207 = @func_7098(%205, %206) /* ty=(Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
    %208 = cast(meta[relay.Constant][16] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
    %209 = reshape(%208, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), float64] */;
    %210 = @func_10586() /* ty=(Tensor[(7, 2, 9), float32], Tensor[(13, 3, 13), float64]) */;
    %211 = @func_12208() /* ty=Tensor[(8, 8, 1), float64] */;
    %212 = %207.3;
    %213 = @func_2393(%209) /* ty=Tensor[(13, 15, 2), float64] */;
    %214 = %210.0;
    (%211, %212, meta[relay.Constant][15] /* ty=Tensor[(2304), float32] */, %var_13990, %213, meta[relay.Constant][16] /* ty=Tensor[(390), float64] */, %214)
  };
  %215(%var_14028) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(42), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(13, 15, 2), float64], Tensor[(390), float64], Tensor[(7, 2, 9), float32]) */
}

def @func_14213(%var_14212: Tensor[(42), float32]) -> (Tensor[(8, 8, ?), uint16], Tensor[(3, 13, 14), bool], Tensor[(42), float32], Tensor[(546), float32], Tensor[(8, 8, 1), float32]) {
  %230 = fn (%var_14176: Tensor[(42), float32]) -> (Tensor[(8, 8, ?), uint16], Tensor[(3, 13, 14), bool], Tensor[(42), float32], Tensor[(546), float32], Tensor[(8, 8, 1), float32]) {
    %216 = @func_11741() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %217 = %216.0;
    %218 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 8, 1), float64] */, dtype="uint16") /* ty=Tensor[(8, 8, 1), uint16] */;
    %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(3), int32] */;
    %220 = cast(%217, dtype="uint16") /* ty=Tensor[(8, 8, 1), uint16] */;
    %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %222 = cast(%var_14176, dtype="float32") /* ty=Tensor[(42), float32] */;
    %223 = cast(meta[relay.Constant][18] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %224 = reshape(%222, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
    %225 = reshape(%223, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
    %226 = @func_1229(%224, %225) /* ty=(Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
    %227 = right_shift(%220, %221) /* ty=Tensor[(8, 8, ?), uint16] */;
    %228 = %226.0;
    %229 = @func_11479() /* ty=Tensor[(8, 8, 1), float32] */;
    (%227, %228, %var_14176, meta[relay.Constant][18] /* ty=Tensor[(546), float32] */, %229)
  };
  %230(%var_14212) /* ty=(Tensor[(8, 8, ?), uint16], Tensor[(3, 13, 14), bool], Tensor[(42), float32], Tensor[(546), float32], Tensor[(8, 8, 1), float32]) */
}

def @func_11040(%var_11030: Tensor[(3, 180), int32], %var_11032: Tensor[(3, 180), int32]) -> (Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) {
  %231 = cast(%var_11030, dtype="int32") /* ty=Tensor[(3, 180), int32] */;
  %232 = cast(%var_11030, dtype="int32") /* ty=Tensor[(3, 180), int32] */;
  %233 = reshape(%231, newshape=[12, 3, 15]) /* ty=Tensor[(12, 3, 15), int32] */;
  %234 = reshape(%232, newshape=[12, 3, 15]) /* ty=Tensor[(12, 3, 15), int32] */;
  %235 = @func_8352(%233, %234) /* ty=(Tensor[(12, 3, 15), int32],) */;
  %236 = cast(%var_11032, dtype="uint64") /* ty=Tensor[(3, 180), uint64] */;
  %237 = shape_of(%var_11030, dtype="int32") /* ty=Tensor[(2), int32] */;
  %238 = cast(%var_11030, dtype="uint64") /* ty=Tensor[(3, 180), uint64] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %240 = cast(%var_11032, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %241 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %242 = %235.0;
  %243 = bitwise_or(%238, %239) /* ty=Tensor[(3, 180), uint64] */;
  %244 = sinh(%240) /* ty=Tensor[(3, 180), float64] */;
  (%241, %242, %243, %244)
}

def @func_5643(%var_5628: Tensor[(5, 5, 10), int8], %var_5634: Tensor[(6), float32]) -> (Tensor[(5, 5, 10), int8], Tensor[(6, ?, ?), float32], Tensor[(6), float32]) {
  %245 = cast(%var_5628, dtype="int8") /* ty=Tensor[(5, 5, 10), int8] */;
  %246 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(5, 5, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 5, 10), int8] */, dtype="int8") /* ty=Tensor[(5, 5, 10), int8] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %249 = cast(%var_5634, dtype="float32") /* ty=Tensor[(6), float32] */;
  %250 = reshape(%249, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float32] */;
  %251 = @func_755(%250) /* ty=(Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %252 = bitwise_or(%247, %248) /* ty=Tensor[(5, 5, 10), int8] */;
  %253 = %251.0;
  (%252, %253, %var_5634)
}

def @func_11246() -> (Tensor[(8, 8, 1), float64],) {
  %254 = @func_10311() /* ty=Tensor[(8, 8, 1), float64] */;
  %255 = cast(%254, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  %256 = log2(%255) /* ty=Tensor[(8, 8, 1), float64] */;
  (%256,)
}

def @func_13533() -> (Tensor[(8, 8, 1), float64],) {
  %259 = fn () -> (Tensor[(8, 8, 1), float64],) {
    %257 = @func_11335() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %258 = %257.0;
    (%258,)
  };
  %259() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_12253(%var_12241: Tensor[(160, 1), float64], %var_12242: Tensor[(99), float32], %var_12247: Tensor[(507), float64]) -> (Tensor[(8, 8, 1), float64], Tensor[(99), float32], Tensor[(160, 1), float64], Tensor[(99), float32], int64, Tensor[(507), float64], Tensor[(135), bool]) {
  %260 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %261 = cast(%var_12241, dtype="float64") /* ty=Tensor[(160, 1), float64] */;
  %262 = cast(%var_12242, dtype="float32") /* ty=Tensor[(99), float32] */;
  %263 = reshape(%261, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), float64] */;
  %264 = reshape(%262, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %265 = @func_8109(%263, %264) /* ty=(Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) */;
  %266 = cast(%var_12247, dtype="float64") /* ty=Tensor[(507), float64] */;
  %267 = %265.4;
  %268 = cast(%267, dtype="float32") /* ty=Tensor[(99), float32] */;
  %269 = cast(meta[relay.Constant][20] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %270 = reshape(%266, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %271 = reshape(%268, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %272 = reshape(%269, newshape=[45, 3]) /* ty=Tensor[(45, 3), bool] */;
  %273 = @func_9993(%270, %271, %272) /* ty=(Tensor[(8, 8, 1), float32], Tensor[(3, 16, 99), float32], Tensor[(507), float64], int64, Tensor[(507), float64], Tensor[(972), float32], Tensor[(25, 6), float32], Tensor[(99), float32], Tensor[(10, 16, 12), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(45, 3), bool]) */;
  %274 = %260.0;
  %275 = %273.3;
  (%274, %267, %var_12241, %var_12242, %275, %var_12247, meta[relay.Constant][20] /* ty=Tensor[(135), bool] */)
}

def @func_12631() -> (Tensor[(8, 8, 1), float64],) {
  %276 = @func_11061() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %277 = %276.0;
  (%277,)
}

def @func_12374() -> (Tensor[(8, 8, 1), float64],) {
  %278 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  (%278,)
}

def @func_12935(%var_12933: Tensor[(3, 180), uint64]) -> (Tensor[(8, 8, 1), float64], Tensor[(3, 180), float32]) {
  @func_12932(%var_12933) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 180), float32]) */
}

def @func_2395(%var_2394: Tensor[(13, 15, 2), float64]) -> Tensor[(13, 15, 2), float64] {
  %283 = fn (%var_2385: Tensor[(13, 15, 2), float64]) -> Tensor[(13, 15, 2), float64] {
    %279 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 15, 2), float64] */;
    %280 = shape_of(%var_2385, dtype="int32") /* ty=Tensor[(3), int32] */;
    %281 = cast(%var_2385, dtype="float64") /* ty=Tensor[(13, 15, 2), float64] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%281, %282) /* ty=Tensor[(13, 15, 2), float64] */
  };
  %283(%var_2394) /* ty=Tensor[(13, 15, 2), float64] */
}

def @func_9254(%var_9193: Tensor[(9, 12, 9), float32], %var_9215: Tensor[(150, 1), float32], %var_9216: Tensor[(507), float64], %var_9218: Tensor[(99), float32], %var_9221: Tensor[(9, 12, 9), float32]) -> (Tensor[(160), float64], Tensor[(507), float64], int64, Tensor[(9, 12, 9), float32], Tensor[(?, 9, 15), float32], Tensor[(1, 135), bool], Tensor[(150, 99), bool]) {
  %284 = cast(%var_9215, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %285 = cast(%var_9216, dtype="float64") /* ty=Tensor[(507), float64] */;
  %286 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %287 = cast(%var_9218, dtype="float32") /* ty=Tensor[(99), float32] */;
  %288 = reshape(%284, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
  %289 = reshape(%285, newshape=[507, 1]) /* ty=Tensor[(507, 1), float64] */;
  %290 = reshape(%286, newshape=[]) /* ty=int64 */;
  %291 = reshape(%287, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %292 = @func_8501(%288, %289, %290, %291) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) */;
  %293 = cast(%var_9193, dtype="float32") /* ty=Tensor[(9, 12, 9), float32] */;
  %294 = sqrt(%293) /* ty=Tensor[(9, 12, 9), float32] */;
  %295 = cast(%var_9221, dtype="float32") /* ty=Tensor[(9, 12, 9), float32] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%294, dtype="float32") /* ty=Tensor[(9, 12, 9), float32] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %299 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 135), bool] */, dtype="bool") /* ty=Tensor[(1, 135), bool] */;
  %300 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 135), bool] */, dtype="bool") /* ty=Tensor[(1, 135), bool] */;
  %301 = reshape(%299, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %302 = reshape(%300, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %303 = @func_6077(%301, %302) /* ty=(Tensor[(?, 9, 15), float32],) */;
  %304 = cast(%var_9218, dtype="bool") /* ty=Tensor[(99), bool] */;
  %305 = cast(%var_9215, dtype="bool") /* ty=Tensor[(150, 1), bool] */;
  %306 = %292.5;
  %307 = floor_divide(%297, %298) /* ty=Tensor[(9, 12, 9), float32] */;
  %308 = %303.0;
  %309 = logical_or(%304, %305) /* ty=Tensor[(150, 99), bool] */;
  (%306, %var_9216, 8 /* ty=int64 */, %307, %308, meta[relay.Constant][22] /* ty=Tensor[(1, 135), bool] */, %309)
}

def @func_10643() -> Tensor[(8, 8, 1), float64] {
  @func_10641() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_3885(%var_3884: Tensor[(11, 1, 9), float32]) -> Tensor[(11, ?, 9), float32] {
  %314 = fn (%var_3872: Tensor[(11, 1, 9), float32]) -> Tensor[(11, ?, 9), float32] {
    %310 = cast(%var_3872, dtype="float32") /* ty=Tensor[(11, 1, 9), float32] */;
    %311 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(11, 1, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 9), float32] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%312, %313) /* ty=Tensor[(11, ?, 9), float32] */
  };
  %314(%var_3884) /* ty=Tensor[(11, ?, 9), float32] */
}

def @func_13131() -> Tensor[(8, 8, 1), float64] {
  %315 = fn () -> Tensor[(8, 8, 1), float64] {
    @func_10641() /* ty=Tensor[(8, 8, 1), float64] */
  };
  %315() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_12407(%var_12390: Tensor[(2288), uint32], %var_12397: Tensor[(99, 1), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(2, 3, 6), uint64], Tensor[(99, 1), float32], Tensor[(36), uint64]) {
  %316 = cast(%var_12390, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
  %317 = reshape(%316, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
  %318 = @func_1358(%317) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
  %319 = cast(%var_12397, dtype="float32") /* ty=Tensor[(99, 1), float32] */;
  %320 = cast(meta[relay.Constant][24] /* ty=Tensor[(36), uint64] */, dtype="uint64") /* ty=Tensor[(36), uint64] */;
  %321 = reshape(%319, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %322 = reshape(%320, newshape=[36]) /* ty=Tensor[(36), uint64] */;
  %323 = @func_10704(%321, %322) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(11, ?, 9), float32], Tensor[(99), float32], Tensor[(2, 3, 6), uint64], Tensor[(36), uint64]) */;
  %324 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
  %325 = %318.2;
  %326 = %323.3;
  (%324, %325, %var_12390, %326, %var_12397, meta[relay.Constant][24] /* ty=Tensor[(36), uint64] */)
}

def @func_13633() -> (Tensor[(8, 8, 1), float64],) {
  @func_13631() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_12932(%var_12916: Tensor[(3, 180), uint64]) -> (Tensor[(8, 8, 1), float64], Tensor[(3, 180), float32]) {
  %327 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %328 = @func_12658() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) */;
  %329 = %328.1;
  %330 = cast(%var_12916, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(2), int32] */;
  %332 = cast(%329, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %334 = %327.0;
  %335 = mod(%332, %333) /* ty=Tensor[(3, 180), float32] */;
  (%334, %335)
}

def @func_14304() -> Tensor[(99), float32] {
  @func_14302() /* ty=Tensor[(99), float32] */
}

def @func_6158(%var_6154: Tensor[(10, 16, 12), float64], %var_6155: Tensor[(10, 16, 12), float64], %var_6156: Tensor[(1680), float64], %var_6157: Tensor[(135), bool]) -> (Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) {
  @func_6152(%var_6154, %var_6155, %var_6156, %var_6157) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) */
}

def @func_12633() -> (Tensor[(8, 8, 1), float64],) {
  @func_12631() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_14125(%var_14122: int64, %var_14123: Tensor[(252), float64], %var_14124: Tensor[(99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(507), float64], int64, Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(540), int32], Tensor[(99), float32]) {
  @func_14120(%var_14122, %var_14123, %var_14124) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(507), float64], int64, Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(540), int32], Tensor[(99), float32]) */
}

def @func_9993(%var_9968: Tensor[(507), float64], %var_9980: Tensor[(99), float32], %var_9985: Tensor[(45, 3), bool]) -> (Tensor[(8, 8, 1), float32], Tensor[(3, 16, 99), float32], Tensor[(507), float64], int64, Tensor[(507), float64], Tensor[(972), float32], Tensor[(25, 6), float32], Tensor[(99), float32], Tensor[(10, 16, 12), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(45, 3), bool]) {
  %336 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %337 = cast(%var_9968, dtype="float64") /* ty=Tensor[(507), float64] */;
  %338 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %339 = cast(%var_9968, dtype="float64") /* ty=Tensor[(507), float64] */;
  %340 = reshape(%337, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %341 = reshape(%338, newshape=[]) /* ty=int64 */;
  %342 = reshape(%339, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %343 = @func_5342(%340, %341, %342) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
  %344 = cast(meta[relay.Constant][25] /* ty=Tensor[(972), float32] */, dtype="float32") /* ty=Tensor[(972), float32] */;
  %345 = cast(meta[relay.Constant][26] /* ty=Tensor[(25, 6), float32] */, dtype="float32") /* ty=Tensor[(25, 6), float32] */;
  %346 = cast(%var_9968, dtype="float64") /* ty=Tensor[(507), float64] */;
  %347 = cast(%var_9980, dtype="float32") /* ty=Tensor[(99), float32] */;
  %348 = cast(meta[relay.Constant][25] /* ty=Tensor[(972), float32] */, dtype="float32") /* ty=Tensor[(972), float32] */;
  %349 = reshape(%344, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), float32] */;
  %350 = reshape(%345, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %351 = reshape(%346, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %352 = reshape(%347, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %353 = reshape(%348, newshape=[9, 12, 9]) /* ty=Tensor[(9, 12, 9), float32] */;
  %354 = @func_9254(%349, %350, %351, %352, %353) /* ty=(Tensor[(160), float64], Tensor[(507), float64], int64, Tensor[(9, 12, 9), float32], Tensor[(?, 9, 15), float32], Tensor[(1, 135), bool], Tensor[(150, 99), bool]) */;
  %355 = cast(meta[relay.Constant][27] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %356 = cast(meta[relay.Constant][27] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %357 = cast(meta[relay.Constant][28] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %358 = cast(%var_9985, dtype="bool") /* ty=Tensor[(45, 3), bool] */;
  %359 = reshape(%355, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %360 = reshape(%356, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %361 = reshape(%357, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %362 = reshape(%358, newshape=[135]) /* ty=Tensor[(135), bool] */;
  %363 = @func_6152(%359, %360, %361, %362) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) */;
  %364 = %336.0;
  %365 = %343.6;
  %366 = %354.1;
  %367 = %363.6;
  (%364, %365, %var_9968, 7 /* ty=int64 */, %366, meta[relay.Constant][25] /* ty=Tensor[(972), float32] */, meta[relay.Constant][26] /* ty=Tensor[(25, 6), float32] */, %var_9980, %367, meta[relay.Constant][27] /* ty=Tensor[(1920), float64] */, meta[relay.Constant][28] /* ty=Tensor[(1680), float64] */, %var_9985)
}

def @func_11742() -> (Tensor[(8, 8, 1), float64],) {
  %369 = fn () -> (Tensor[(8, 8, 1), float64],) {
    %368 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
    (%368,)
  };
  %369() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_5096(%var_5093: int64, %var_5094: Tensor[(2, 4, 15), int64], %var_5095: Tensor[(11, 9), float32]) -> (Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) {
  %380 = fn (%var_5069: int64, %var_5070: Tensor[(2, 4, 15), int64], %var_5084: Tensor[(11, 9), float32]) -> (Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) {
    %370 = cast(%var_5069, dtype="int64") /* ty=int64 */;
    %371 = cast(%var_5070, dtype="int64") /* ty=Tensor[(2, 4, 15), int64] */;
    %372 = cast(meta[relay.Constant][29] /* ty=Tensor[(2288), uint32] */, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
    %373 = reshape(%372, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
    %374 = @func_1358(%373) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
    %375 = cast(%var_5084, dtype="float32") /* ty=Tensor[(11, 9), float32] */;
    %376 = reshape(%375, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
    %377 = multiply(%370, %371) /* ty=Tensor[(2, 4, 15), int64] */;
    %378 = %374.2;
    %379 = @func_3883(%376) /* ty=Tensor[(11, ?, 9), float32] */;
    (%377, %378, meta[relay.Constant][29] /* ty=Tensor[(2288), uint32] */, %379, %var_5084)
  };
  %380(%var_5093, %var_5094, %var_5095) /* ty=(Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) */
}

def @func_15219() -> (Tensor[(8, 8, 1), float64],) {
  %381 = @func_11585() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) */;
  %382 = %381.0;
  (%382,)
}

def @func_8506(%var_8502: Tensor[(15, 2, 5), float32], %var_8503: Tensor[(507, 1), float64], %var_8504: int64, %var_8505: Tensor[(99), float32]) -> (Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) {
  %399 = fn (%var_8473: Tensor[(15, 2, 5), float32], %var_8490: Tensor[(507, 1), float64], %var_8491: int64, %var_8495: Tensor[(99), float32]) -> (Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) {
    %383 = cast(%var_8473, dtype="float32") /* ty=Tensor[(15, 2, 5), float32] */;
    %384 = cast(%var_8490, dtype="float64") /* ty=Tensor[(507, 1), float64] */;
    %385 = cast(%var_8491, dtype="int64") /* ty=int64 */;
    %386 = cast(%var_8490, dtype="float64") /* ty=Tensor[(507, 1), float64] */;
    %387 = reshape(%384, newshape=[507]) /* ty=Tensor[(507), float64] */;
    %388 = reshape(%385, newshape=[]) /* ty=int64 */;
    %389 = reshape(%386, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
    %390 = @func_5342(%387, %388, %389) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
    %391 = cast(meta[relay.Constant][30] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %392 = cast(%var_8495, dtype="float32") /* ty=Tensor[(99), float32] */;
    %393 = reshape(%391, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), float64] */;
    %394 = reshape(%392, newshape=[99]) /* ty=Tensor[(99), float32] */;
    %395 = @func_8109(%393, %394) /* ty=(Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) */;
    %396 = exp(%383) /* ty=Tensor[(15, 2, 5), float32] */;
    %397 = %390.1;
    %398 = %395.1;
    (%396, %397, %var_8490, %var_8491, %398, meta[relay.Constant][30] /* ty=Tensor[(160), float64] */, %var_8495)
  };
  %399(%var_8502, %var_8503, %var_8504, %var_8505) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) */
}

def @func_11149() -> (Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) {
  %400 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %401 = %400.0;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
  %403 = cast(meta[relay.Constant][31] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %404 = cast(meta[relay.Constant][32] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %405 = reshape(%403, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %406 = reshape(%404, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %407 = @func_7098(%405, %406) /* ty=(Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %408 = sinh(%402) /* ty=Tensor[(8, 8, 1), float32] */;
  %409 = %407.0;
  (%408, %409, meta[relay.Constant][31] /* ty=Tensor[(2304), float32] */, meta[relay.Constant][32] /* ty=Tensor[(42), float32] */)
}

def @func_12411(%var_12409: Tensor[(2288), uint32], %var_12410: Tensor[(99, 1), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(2, 3, 6), uint64], Tensor[(99, 1), float32], Tensor[(36), uint64]) {
  @func_12407(%var_12409, %var_12410) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(2, 3, 6), uint64], Tensor[(99, 1), float32], Tensor[(36), uint64]) */
}

def @func_144(%var_143: Tensor[(13, 3, 13), float64]) -> Tensor[(13, 3, 13), float64] {
  %411 = fn (%var_128: Tensor[(13, 3, 13), float64]) -> Tensor[(13, 3, 13), float64] {
    %410 = cast(%var_128, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
    exp(%410) /* ty=Tensor[(13, 3, 13), float64] */
  };
  %411(%var_143) /* ty=Tensor[(13, 3, 13), float64] */
}

def @func_13803(%var_13801: Tensor[(1680), float64], %var_13802: Tensor[(135), bool]) -> (Tensor[(8, 8, 1), float64], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(8, 8, 1), float64]) {
  %424 = fn (%var_13785: Tensor[(1680), float64], %var_13786: Tensor[(135), bool]) -> (Tensor[(8, 8, 1), float64], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(8, 8, 1), float64]) {
    %412 = cast(meta[relay.Constant][33] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %413 = cast(meta[relay.Constant][33] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
    %414 = cast(%var_13785, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %415 = cast(%var_13786, dtype="bool") /* ty=Tensor[(135), bool] */;
    %416 = reshape(%412, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
    %417 = reshape(%413, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
    %418 = reshape(%414, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %419 = reshape(%415, newshape=[135]) /* ty=Tensor[(135), bool] */;
    %420 = @func_6152(%416, %417, %418, %419) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) */;
    %421 = @func_12208() /* ty=Tensor[(8, 8, 1), float64] */;
    %422 = %420.4;
    %423 = @func_13130() /* ty=Tensor[(8, 8, 1), float64] */;
    (%421, %422, meta[relay.Constant][33] /* ty=Tensor[(1920), float64] */, %var_13785, %var_13786, %423)
  };
  %424(%var_13801, %var_13802) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(8, 8, 1), float64]) */
}

def @func_13631() -> (Tensor[(8, 8, 1), float64],) {
  %425 = @func_11335() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %426 = %425.0;
  (%426,)
}

def @func_8356(%var_8354: Tensor[(12, 3, 15), int32], %var_8355: Tensor[(12, 3, 15), int32]) -> (Tensor[(12, 3, 15), int32],) {
  @func_8352(%var_8354, %var_8355) /* ty=(Tensor[(12, 3, 15), int32],) */
}

def @func_11066() -> (Tensor[(8, 8, 1), float64],) {
  %427 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
  %428 = %427.0;
  (%428,)
}

def @func_1857(%var_1855: Tensor[(12, 12, 16), float32], %var_1856: Tensor[(14, 3), float32]) -> (Tensor[(12, 12, 16), float32], Tensor[(13, 3, 13), float64], Tensor[(14, 3), float32], Tensor[(91, 6), float32]) {
  %437 = fn (%var_1830: Tensor[(12, 12, 16), float32], %var_1844: Tensor[(14, 3), float32]) -> (Tensor[(12, 12, 16), float32], Tensor[(13, 3, 13), float64], Tensor[(14, 3), float32], Tensor[(91, 6), float32]) {
    %429 = cast(%var_1830, dtype="float32") /* ty=Tensor[(12, 12, 16), float32] */;
    %430 = cast(%var_1844, dtype="float32") /* ty=Tensor[(14, 3), float32] */;
    %431 = cast(meta[relay.Constant][34] /* ty=Tensor[(91, 6), float32] */, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
    %432 = reshape(%430, newshape=[3, 1, 14]) /* ty=Tensor[(3, 1, 14), float32] */;
    %433 = reshape(%431, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float32] */;
    %434 = @func_1229(%432, %433) /* ty=(Tensor[(3, 13, 14), bool], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
    %435 = acosh(%429) /* ty=Tensor[(12, 12, 16), float32] */;
    %436 = %434.1;
    (%435, %436, %var_1844, meta[relay.Constant][34] /* ty=Tensor[(91, 6), float32] */)
  };
  %437(%var_1855, %var_1856) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(13, 3, 13), float64], Tensor[(14, 3), float32], Tensor[(91, 6), float32]) */
}

def @func_10468() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) {
  @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */
}

def @func_5647(%var_5645: Tensor[(5, 5, 10), int8], %var_5646: Tensor[(6), float32]) -> (Tensor[(5, 5, 10), int8], Tensor[(6, ?, ?), float32], Tensor[(6), float32]) {
  @func_5643(%var_5645, %var_5646) /* ty=(Tensor[(5, 5, 10), int8], Tensor[(6, ?, ?), float32], Tensor[(6), float32]) */
}

def @func_12327() -> (Tensor[(8, 8, ?), bool],) {
  %447 = fn () -> (Tensor[(8, 8, ?), bool],) {
    %438 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %439 = %438.0;
    %440 = cast(%439, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
    %441 = log10(%440) /* ty=Tensor[(8, 8, 1), float64] */;
    %442 = cast(%439, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
    %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
    %444 = cast(%441, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
    %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %446 = logical_or(%444, %445) /* ty=Tensor[(8, 8, ?), bool] */;
    (%446,)
  };
  %447() /* ty=(Tensor[(8, 8, ?), bool],) */
}

def @func_11865() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(507), float64], Tensor[(126), float32]) {
  %448 = cast(meta[relay.Constant][35] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %449 = reshape(%448, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float32] */;
  %450 = @func_8840(%449) /* ty=(Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %451 = @func_10311() /* ty=Tensor[(8, 8, 1), float64] */;
  %452 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
  %453 = %450.4;
  (%451, %452, %453, meta[relay.Constant][35] /* ty=Tensor[(126), float32] */)
}

def @func_11611() -> Tensor[(8, 8, 1), float64] {
  %454 = @func_11061() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %454.0
}

def @func_13027() -> Tensor[(8, 8, 1), float64] {
  @func_13025() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_8840(%var_8823: Tensor[(3, 14, 3), float32]) -> (Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) {
  %455 = cast(%var_8823, dtype="float32") /* ty=Tensor[(3, 14, 3), float32] */;
  %456 = cast(meta[relay.Constant][36] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
  %457 = reshape(%456, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), int8] */;
  %458 = @func_7692(%457) /* ty=(Tensor[(12, 2, 10), int8], Tensor[(11, ?, 9), float32], Tensor[(99), float32]) */;
  %459 = cast(meta[relay.Constant][37] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %460 = reshape(%459, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %461 = atanh(%455) /* ty=Tensor[(3, 14, 3), float32] */;
  %462 = %458.0;
  %463 = @func_142(%460) /* ty=Tensor[(13, 3, 13), float64] */;
  (%461, %462, meta[relay.Constant][36] /* ty=Tensor[(240), int8] */, %463, meta[relay.Constant][37] /* ty=Tensor[(507), float64] */)
}

def @func_10586() -> (Tensor[(7, 2, 9), float32], Tensor[(13, 3, 13), float64]) {
  %464 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %465 = %464.1;
  %466 = cast(%465, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
  %467 = reshape(%466, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float32] */;
  %468 = @func_8840(%467) /* ty=(Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %469 = %468.3;
  (%465, %469)
}

def @func_14701() -> (Tensor[(2, 5, 3), float32], Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) {
  %470 = @func_14637() /* ty=(Tensor[(2, 5, 3), float32],) */;
  %471 = @func_13280() /* ty=(Tensor[(8, 8, 8), int16],) */;
  %472 = %470.0;
  %473 = %471.0;
  %474 = @func_11611() /* ty=Tensor[(8, 8, 1), float64] */;
  (%472, %473, %474)
}

def @func_11802(%var_11799: Tensor[(40), float64], %var_11800: Tensor[(70, 1), uint32]) -> (Tensor[(8, 8, 1), float32], Tensor[(12, 3, 15), int32], Tensor[(54, 10), int32], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70, 1), uint32]) {
  %475 = cast(meta[relay.Constant][38] /* ty=Tensor[(54, 10), int32] */, dtype="int32") /* ty=Tensor[(54, 10), int32] */;
  %476 = cast(meta[relay.Constant][38] /* ty=Tensor[(54, 10), int32] */, dtype="int32") /* ty=Tensor[(54, 10), int32] */;
  %477 = reshape(%475, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %478 = reshape(%476, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %479 = @func_11040(%477, %478) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) */;
  %480 = cast(%var_11799, dtype="float64") /* ty=Tensor[(40), float64] */;
  %481 = cast(%var_11800, dtype="uint32") /* ty=Tensor[(70, 1), uint32] */;
  %482 = reshape(%480, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %483 = reshape(%481, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %484 = @func_11364(%482, %483) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70), uint32]) */;
  %485 = @func_11479() /* ty=Tensor[(8, 8, 1), float32] */;
  %486 = %479.1;
  %487 = %484.1;
  (%485, %486, meta[relay.Constant][38] /* ty=Tensor[(54, 10), int32] */, %487, %var_11799, %var_11800)
}

def @func_6152(%var_6100: Tensor[(10, 16, 12), float64], %var_6101: Tensor[(10, 16, 12), float64], %var_6108: Tensor[(1680), float64], %var_6139: Tensor[(135), bool]) -> (Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) {
  %488 = cast(%var_6108, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %489 = cast(meta[relay.Constant][39] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %490 = reshape(%488, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), float64] */;
  %491 = reshape(%489, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %492 = @func_5041(%490, %491) /* ty=(Tensor[(10, 14, 12), float64], Tensor[(507), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64]) */;
  %493 = %492.3;
  %494 = cast(%493, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %495 = reshape(%494, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %496 = cast(%var_6139, dtype="bool") /* ty=Tensor[(135), bool] */;
  %497 = cast(%var_6139, dtype="bool") /* ty=Tensor[(135), bool] */;
  %498 = reshape(%496, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %499 = reshape(%497, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %500 = @func_6077(%498, %499) /* ty=(Tensor[(?, 9, 15), float32],) */;
  %501 = cast(%var_6101, dtype="float64") /* ty=Tensor[(10, 16, 12), float64] */;
  %502 = shape_of(%var_6100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%var_6100, dtype="float64") /* ty=Tensor[(10, 16, 12), float64] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %505 = divide(%503, %504) /* ty=Tensor[(10, 16, 12), float64] */;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(10, 16, 12), float32] */;
  %507 = @func_142(%495) /* ty=Tensor[(13, 3, 13), float64] */;
  %508 = %500.0;
  %509 = log10(%506) /* ty=Tensor[(10, 16, 12), float32] */;
  (%493, %var_6108, meta[relay.Constant][39] /* ty=Tensor[(6), float32] */, %507, %508, %var_6139, %509)
}

def @func_10990(%var_10988: Tensor[(40), float64], %var_10989: Tensor[(70), uint32]) -> (Tensor[(8, 8, 1), float64], uint32, Tensor[(14, 5, ?), bool], Tensor[(13, 3, 13), float64], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(120, 1), int64], Tensor[(8, 8, 1), float64], Tensor[(8, 5, ?), bool], Tensor[(12, 2, 10), int8], Tensor[(240), int8]) {
  %550 = fn (%var_10901: Tensor[(40), float64], %var_10912: Tensor[(70), uint32]) -> (Tensor[(8, 8, 1), float64], uint32, Tensor[(14, 5, ?), bool], Tensor[(13, 3, 13), float64], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(120, 1), int64], Tensor[(8, 8, 1), float64], Tensor[(8, 5, ?), bool], Tensor[(12, 2, 10), int8], Tensor[(240), int8]) {
    %510 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %511 = cast(%var_10912, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %512 = reshape(%510, newshape=[]) /* ty=uint32 */;
    %513 = reshape(%511, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), uint32] */;
    %514 = @func_10296(%512, %513) /* ty=(Tensor[(14, 5, 1), uint32],) */;
    %515 = %514.0;
    %516 = cast(%var_10912, dtype="bool") /* ty=Tensor[(70), bool] */;
    %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(3), int32] */;
    %518 = cast(%515, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
    %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %520 = cast(meta[relay.Constant][41] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %521 = cast(meta[relay.Constant][42] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %522 = reshape(%520, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
    %523 = reshape(%521, newshape=[14, 3]) /* ty=Tensor[(14, 3), float32] */;
    %524 = @func_1854(%522, %523) /* ty=(Tensor[(12, 12, 16), float32], Tensor[(13, 3, 13), float64], Tensor[(14, 3), float32], Tensor[(91, 6), float32]) */;
    %525 = %524.1;
    %526 = cast(%525, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
    %527 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="int64") /* ty=int64 */;
    %528 = cast(%525, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
    %529 = reshape(%526, newshape=[507]) /* ty=Tensor[(507), float64] */;
    %530 = reshape(%527, newshape=[]) /* ty=int64 */;
    %531 = reshape(%528, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
    %532 = @func_5342(%529, %530, %531) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
    %533 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %534 = cast(%var_10901, dtype="float64") /* ty=Tensor[(40), float64] */;
    %535 = reshape(%534, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float64] */;
    %536 = @func_10604(%535) /* ty=Tensor[(8, 5, 1), float64] */;
    %537 = cast(%var_10901, dtype="bool") /* ty=Tensor[(40), bool] */;
    %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(3), int32] */;
    %539 = cast(%536, dtype="bool") /* ty=Tensor[(8, 5, 1), bool] */;
    %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %541 = cast(meta[relay.Constant][43] /* ty=Tensor[(240), int8] */, dtype="int8") /* ty=Tensor[(240), int8] */;
    %542 = reshape(%541, newshape=[12, 2, 10]) /* ty=Tensor[(12, 2, 10), int8] */;
    %543 = @func_7692(%542) /* ty=(Tensor[(12, 2, 10), int8], Tensor[(11, ?, 9), float32], Tensor[(99), float32]) */;
    %544 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
    %545 = less(%518, %519) /* ty=Tensor[(14, 5, ?), bool] */;
    %546 = %532.3;
    %547 = %533.0;
    %548 = not_equal(%539, %540) /* ty=Tensor[(8, 5, ?), bool] */;
    %549 = %543.0;
    (%544, meta[relay.Constant][40] /* ty=uint32 */, %545, %525, meta[relay.Constant][41] /* ty=Tensor[(2304), float32] */, meta[relay.Constant][42] /* ty=Tensor[(42), float32] */, %546, %547, %548, %549, meta[relay.Constant][43] /* ty=Tensor[(240), int8] */)
  };
  %550(%var_10988, %var_10989) /* ty=(Tensor[(8, 8, 1), float64], uint32, Tensor[(14, 5, ?), bool], Tensor[(13, 3, 13), float64], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(120, 1), int64], Tensor[(8, 8, 1), float64], Tensor[(8, 5, ?), bool], Tensor[(12, 2, 10), int8], Tensor[(240), int8]) */
}

def @func_11216(%var_11212: Tensor[(2304), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(135), bool]) {
  %551 = cast(meta[relay.Constant][44] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %552 = cast(%var_11212, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %553 = cast(meta[relay.Constant][45] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %554 = cast(meta[relay.Constant][45] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %555 = reshape(%551, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %556 = reshape(%552, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %557 = reshape(%553, newshape=[3, 45]) /* ty=Tensor[(3, 45), bool] */;
  %558 = reshape(%554, newshape=[3, 45]) /* ty=Tensor[(3, 45), bool] */;
  %559 = @func_10771(%555, %556, %557, %558) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(8, 8, 1680), bool], Tensor[(3, 14, 3), float32], Tensor[(126), float32], Tensor[(3, 45), int16]) */;
  %560 = @func_10255() /* ty=Tensor[(8, 8, 1), float64] */;
  %561 = %559.0;
  (%560, %561, meta[relay.Constant][44] /* ty=Tensor[(864), float32] */, %var_11212, meta[relay.Constant][45] /* ty=Tensor[(135), bool] */)
}

def @func_14801() -> (Tensor[(8, 8, 1), float64],) {
  @func_14799() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_10607(%var_10605: Tensor[(8, 5, 1), float64]) -> Tensor[(8, 5, 1), float64] {
  @func_10604(%var_10605) /* ty=Tensor[(8, 5, 1), float64] */
}

def @func_15148() -> Tensor[(8, 8, 1), float64] {
  %563 = fn () -> Tensor[(8, 8, 1), float64] {
    %562 = @func_13532() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %562.0
  };
  %563() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_13117() -> (Tensor[(8, 8, 1), float64], Tensor[(18, 30), int32]) {
  %568 = fn () -> (Tensor[(8, 8, 1), float64], Tensor[(18, 30), int32]) {
    %564 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %565 = @func_12658() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) */;
    %566 = %564.0;
    %567 = %565.2;
    (%566, %567)
  };
  %568() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(18, 30), int32]) */
}

def @func_14638() -> (Tensor[(2, 5, 3), float32],) {
  %571 = fn () -> (Tensor[(2, 5, 3), float32],) {
    %569 = @func_11188() /* ty=(Tensor[(2, 5, 3), float32],) */;
    %570 = %569.0;
    (%570,)
  };
  %571() /* ty=(Tensor[(2, 5, 3), float32],) */
}

def @func_5347(%var_5344: Tensor[(507), float64], %var_5345: int64, %var_5346: Tensor[(13, 3, 13), float64]) -> (Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) {
  @func_5342(%var_5344, %var_5345, %var_5346) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */
}

def @func_14799() -> (Tensor[(8, 8, 1), float64],) {
  %572 = @func_11944() /* ty=Tensor[(8, 8, 1), float64] */;
  (%572,)
}

def @func_10256() -> Tensor[(8, 8, 1), float64] {
  %573 = fn () -> Tensor[(8, 8, 1), float64] {
    @func_9857() /* ty=Tensor[(8, 8, 1), float64] */
  };
  %573() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_15051(%var_15050: Tensor[(8, 8, 3), float64]) -> (Tensor[(8, 8, 3), uint32], Tensor[(8, 8, 1), float64]) {
  %580 = fn (%var_15020: Tensor[(8, 8, 3), float64]) -> (Tensor[(8, 8, 3), uint32], Tensor[(8, 8, 1), float64]) {
    %574 = @func_12947() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
    %575 = %574.0;
    %576 = cast(%575, dtype="uint32") /* ty=Tensor[(8, 8, 1), uint32] */;
    %577 = cast(%var_15020, dtype="uint32") /* ty=Tensor[(8, 8, 3), uint32] */;
    %578 = right_shift(%576, %577) /* ty=Tensor[(8, 8, 3), uint32] */;
    %579 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
    (%578, %579)
  };
  %580(%var_15050) /* ty=(Tensor[(8, 8, 3), uint32], Tensor[(8, 8, 1), float64]) */
}

def @func_12948() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) {
  %585 = fn () -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) {
    %581 = @func_11335() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %582 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %583 = %581.0;
    %584 = %582.0;
    (%583, %584)
  };
  %585() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */
}

def @func_5041(%var_5028: Tensor[(10, 14, 12), float64], %var_5032: Tensor[(6), float32]) -> (Tensor[(10, 14, 12), float64], Tensor[(507), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64]) {
  %586 = cast(%var_5028, dtype="float64") /* ty=Tensor[(10, 14, 12), float64] */;
  %587 = cast(%var_5032, dtype="float32") /* ty=Tensor[(6), float32] */;
  %588 = reshape(%587, newshape=[6, 1, 1]) /* ty=Tensor[(6, 1, 1), float32] */;
  %589 = @func_755(%588) /* ty=(Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
  %590 = %589.2;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(507), float64] */;
  %592 = reshape(%591, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %593 = erf(%586) /* ty=Tensor[(10, 14, 12), float64] */;
  %594 = @func_142(%592) /* ty=Tensor[(13, 3, 13), float64] */;
  (%593, %590, %var_5032, %594)
}

def @func_9857() -> Tensor[(8, 8, 1), float64] {
  %595 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 8, 1), float64] */, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  atan(%595) /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_12828() -> (Tensor[(8, 8, 1), float64],) {
  @func_12826() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_14667(%var_14665: Tensor[(2288), uint32], %var_14666: Tensor[(1, 99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(1, 99), float32]) {
  @func_14663(%var_14665, %var_14666) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(1, 99), float32]) */
}

def @func_8843(%var_8841: Tensor[(3, 14, 3), float32]) -> (Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) {
  @func_8840(%var_8841) /* ty=(Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */
}

def @func_7656(%var_7654: Tensor[(7, 2, 9), float32]) -> Tensor[(7, 2, 9), float32] {
  @func_7653(%var_7654) /* ty=Tensor[(7, 2, 9), float32] */
}

def @func_15007() -> (Tensor[(8, 8, 1), float64],) {
  %596 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
  %597 = %596.1;
  (%597,)
}

def @func_14478() -> (Tensor[(8, 8, 1), float64], Tensor[(126), float32]) {
  %598 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
  %599 = @func_10255() /* ty=Tensor[(8, 8, 1), float64] */;
  %600 = %598.2;
  (%599, %600)
}

def @func_15009() -> (Tensor[(8, 8, 1), float64],) {
  @func_15007() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_10174(%var_10173: Tensor[(135), bool]) -> (Tensor[(7, 2, 9), uint8], Tensor[(5, 5, 10), int8], Tensor[(5, 50), int8], Tensor[(6, 1), float32], Tensor[(?, 9, 15), float32], Tensor[(135), bool]) {
  %622 = fn (%var_10164: Tensor[(135), bool]) -> (Tensor[(7, 2, 9), uint8], Tensor[(5, 5, 10), int8], Tensor[(5, 50), int8], Tensor[(6, 1), float32], Tensor[(?, 9, 15), float32], Tensor[(135), bool]) {
    %601 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
    %602 = %601.1;
    %603 = cast(%602, dtype="float64") /* ty=Tensor[(7, 2, 9), float64] */;
    %604 = log2(%603) /* ty=Tensor[(7, 2, 9), float64] */;
    %605 = cast(%602, dtype="uint8") /* ty=Tensor[(7, 2, 9), uint8] */;
    %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
    %607 = cast(%604, dtype="uint8") /* ty=Tensor[(7, 2, 9), uint8] */;
    %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %609 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 50), int8] */, dtype="int8") /* ty=Tensor[(5, 50), int8] */;
    %610 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
    %611 = reshape(%609, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), int8] */;
    %612 = reshape(%610, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %613 = @func_5643(%611, %612) /* ty=(Tensor[(5, 5, 10), int8], Tensor[(6, ?, ?), float32], Tensor[(6), float32]) */;
    %614 = cast(%var_10164, dtype="bool") /* ty=Tensor[(135), bool] */;
    %615 = cast(%var_10164, dtype="bool") /* ty=Tensor[(135), bool] */;
    %616 = reshape(%614, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
    %617 = reshape(%615, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
    %618 = @func_6077(%616, %617) /* ty=(Tensor[(?, 9, 15), float32],) */;
    %619 = left_shift(%607, %608) /* ty=Tensor[(7, 2, 9), uint8] */;
    %620 = %613.0;
    %621 = %618.0;
    (%619, %620, meta[relay.Constant][47] /* ty=Tensor[(5, 50), int8] */, meta[relay.Constant][48] /* ty=Tensor[(6, 1), float32] */, %621, %var_10164)
  };
  %622(%var_10173) /* ty=(Tensor[(7, 2, 9), uint8], Tensor[(5, 5, 10), int8], Tensor[(5, 50), int8], Tensor[(6, 1), float32], Tensor[(?, 9, 15), float32], Tensor[(135), bool]) */
}

def @func_11044(%var_11042: Tensor[(3, 180), int32], %var_11043: Tensor[(3, 180), int32]) -> (Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) {
  @func_11040(%var_11042, %var_11043) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) */
}

def @func_10776(%var_10772: Tensor[(864), float32], %var_10773: Tensor[(2304), float32], %var_10774: Tensor[(3, 45), bool], %var_10775: Tensor[(3, 45), bool]) -> (Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(8, 8, 1680), bool], Tensor[(3, 14, 3), float32], Tensor[(126), float32], Tensor[(3, 45), int16]) {
  %650 = fn (%var_10727: Tensor[(864), float32], %var_10728: Tensor[(2304), float32], %var_10731: Tensor[(3, 45), bool], %var_10764: Tensor[(3, 45), bool]) -> (Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(8, 8, 1680), bool], Tensor[(3, 14, 3), float32], Tensor[(126), float32], Tensor[(3, 45), int16]) {
    %623 = cast(%var_10727, dtype="float32") /* ty=Tensor[(864), float32] */;
    %624 = cast(%var_10728, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %625 = cast(meta[relay.Constant][49] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %626 = cast(meta[relay.Constant][50] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %627 = cast(%var_10731, dtype="bool") /* ty=Tensor[(3, 45), bool] */;
    %628 = cast(%var_10727, dtype="uint32") /* ty=Tensor[(864), uint32] */;
    %629 = reshape(%623, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
    %630 = reshape(%624, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
    %631 = reshape(%625, newshape=[14, 3]) /* ty=Tensor[(14, 3), float32] */;
    %632 = reshape(%626, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
    %633 = reshape(%627, newshape=[135]) /* ty=Tensor[(135), bool] */;
    %634 = reshape(%628, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), uint32] */;
    %635 = @func_8314(%629, %630, %631, %632, %633, %634) /* ty=(Tensor[(42), float32], Tensor[(2304), float32], Tensor[(14, 3), float32], Tensor[(12, 6, 12), bool], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(7, 6), float32], Tensor[(8, 286), uint32], Tensor[(13, 3, 13), float64], Tensor[(12, 6, 12), int32]) */;
    %636 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
    %637 = cast(%636, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
    %638 = cast(meta[relay.Constant][50] /* ty=Tensor[(1680), float64] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
    %639 = cast(meta[relay.Constant][51] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %640 = reshape(%639, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float32] */;
    %641 = @func_8840(%640) /* ty=(Tensor[(3, 14, 3), float32], Tensor[(12, 2, 10), int8], Tensor[(240), int8], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */;
    %642 = cast(%var_10764, dtype="int16") /* ty=Tensor[(3, 45), int16] */;
    %643 = shape_of(%var_10731, dtype="int32") /* ty=Tensor[(2), int32] */;
    %644 = cast(%var_10731, dtype="int16") /* ty=Tensor[(3, 45), int16] */;
    %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %646 = %635.10;
    %647 = less_equal(%637, %638) /* ty=Tensor[(8, 8, 1680), bool] */;
    %648 = %641.0;
    %649 = bitwise_or(%644, %645) /* ty=Tensor[(3, 45), int16] */;
    (%646, %var_10727, %var_10728, meta[relay.Constant][49] /* ty=Tensor[(42), float32] */, %647, %648, meta[relay.Constant][51] /* ty=Tensor[(126), float32] */, %649)
  };
  %650(%var_10772, %var_10773, %var_10774, %var_10775) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(8, 8, 1680), bool], Tensor[(3, 14, 3), float32], Tensor[(126), float32], Tensor[(3, 45), int16]) */
}

def @func_11600() -> Tensor[(8, 8, 1), float64] {
  %651 = fn () -> Tensor[(8, 8, 1), float64] {
    @func_9857() /* ty=Tensor[(8, 8, 1), float64] */
  };
  %651() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_12604(%var_12602: Tensor[(8, 8, 7), float32], %var_12603: Tensor[(25, 10), int8]) -> (Tensor[(8, 8, 7), bool], Tensor[(8, 8, 1), float32], Tensor[(8, 8, 1), float64], Tensor[(6, ?, ?), float32], Tensor[(25, 10), int8], Tensor[(6), float32], Tensor[(2, 5, 3), float32]) {
  @func_12600(%var_12602, %var_12603) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(8, 8, 1), float32], Tensor[(8, 8, 1), float64], Tensor[(6, ?, ?), float32], Tensor[(25, 10), int8], Tensor[(6), float32], Tensor[(2, 5, 3), float32]) */
}

def @func_12496() -> (Tensor[(160), float64], Tensor[(99), float32], Tensor[(8, 8, 507), bool], Tensor[(8, 8, 507), uint8], Tensor[(99), float64]) {
  @func_12494() /* ty=(Tensor[(160), float64], Tensor[(99), float32], Tensor[(8, 8, 507), bool], Tensor[(8, 8, 507), uint8], Tensor[(99), float64]) */
}

def @func_13282() -> (Tensor[(8, 8, 8), int16],) {
  @func_13280() /* ty=(Tensor[(8, 8, 8), int16],) */
}

def @func_12258(%var_12255: Tensor[(160, 1), float64], %var_12256: Tensor[(99), float32], %var_12257: Tensor[(507), float64]) -> (Tensor[(8, 8, 1), float64], Tensor[(99), float32], Tensor[(160, 1), float64], Tensor[(99), float32], int64, Tensor[(507), float64], Tensor[(135), bool]) {
  @func_12253(%var_12255, %var_12256, %var_12257) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(99), float32], Tensor[(160, 1), float64], Tensor[(99), float32], int64, Tensor[(507), float64], Tensor[(135), bool]) */
}

def @func_3997(%var_3995: Tensor[(2, 3, 6), uint64], %var_3996: Tensor[(2, 3, 6), uint64]) -> (Tensor[(2, 3, 6), uint64],) {
  %657 = fn (%var_3989: Tensor[(2, 3, 6), uint64], %var_3990: Tensor[(2, 3, 6), uint64]) -> (Tensor[(2, 3, 6), uint64],) {
    %652 = cast(%var_3990, dtype="uint64") /* ty=Tensor[(2, 3, 6), uint64] */;
    %653 = shape_of(%var_3989, dtype="int32") /* ty=Tensor[(3), int32] */;
    %654 = cast(%var_3989, dtype="uint64") /* ty=Tensor[(2, 3, 6), uint64] */;
    %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %656 = right_shift(%654, %655) /* ty=Tensor[(2, 3, 6), uint64] */;
    (%656,)
  };
  %657(%var_3995, %var_3996) /* ty=(Tensor[(2, 3, 6), uint64],) */
}

def @func_15221() -> (Tensor[(8, 8, 1), float64],) {
  @func_15219() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_11061() -> (Tensor[(8, 8, 1), float64],) {
  %658 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  (%658,)
}

def @func_13414(%var_13407: Tensor[(507), float64], %var_13408: Tensor[(99), float32]) -> (Tensor[(3, 180), uint64], Tensor[(540), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, ?, 2), float32], Tensor[(12, 7, 2), bool], Tensor[(10, 16, 12), float32], Tensor[(507), float64], Tensor[(99), float32], Tensor[(135), bool]) {
  %659 = cast(meta[relay.Constant][52] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %660 = cast(meta[relay.Constant][52] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %661 = reshape(%659, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %662 = reshape(%660, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
  %663 = @func_11040(%661, %662) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) */;
  %664 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %665 = @func_11585() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) */;
  %666 = %665.2;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %668 = sinh(%667) /* ty=Tensor[(12, 1, 2), float32] */;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
  %670 = sqrt(%669) /* ty=Tensor[(12, 1, 2), float64] */;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
  %672 = exp(%671) /* ty=Tensor[(12, 1, 2), float64] */;
  %673 = cast(%668, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
  %674 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(%666, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %677 = minimum(%675, %676) /* ty=Tensor[(12, ?, 2), float64] */;
  %678 = cast(%672, dtype="bool") /* ty=Tensor[(12, 1, 2), bool] */;
  %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%677, dtype="bool") /* ty=Tensor[(12, ?, 2), bool] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %682 = logical_or(%680, %681) /* ty=Tensor[(12, ?, 2), bool] */;
  %683 = cast(%668, dtype="bool") /* ty=Tensor[(12, 1, 2), bool] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="bool") /* ty=Tensor[(12, ?, 2), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %687 = less_equal(%685, %686) /* ty=Tensor[(12, ?, 2), bool] */;
  %688 = cast(%687, dtype="float32") /* ty=Tensor[(12, ?, 2), float32] */;
  %689 = shape_of(%672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%672, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %692 = cast(%670, dtype="float32") /* ty=Tensor[(12, 1, 2), float32] */;
  %693 = log2(%692) /* ty=Tensor[(12, 1, 2), float32] */;
  %694 = cast(%693, dtype="bool") /* ty=Tensor[(12, 1, 2), bool] */;
  %695 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 7, 2), float32] */, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %696 = cast(%var_13407, dtype="float64") /* ty=Tensor[(507), float64] */;
  %697 = cast(%var_13408, dtype="float32") /* ty=Tensor[(99), float32] */;
  %698 = cast(meta[relay.Constant][54] /* ty=Tensor[(135), bool] */, dtype="bool") /* ty=Tensor[(135), bool] */;
  %699 = reshape(%696, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %700 = reshape(%697, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %701 = reshape(%698, newshape=[45, 3]) /* ty=Tensor[(45, 3), bool] */;
  %702 = @func_9993(%699, %700, %701) /* ty=(Tensor[(8, 8, 1), float32], Tensor[(3, 16, 99), float32], Tensor[(507), float64], int64, Tensor[(507), float64], Tensor[(972), float32], Tensor[(25, 6), float32], Tensor[(99), float32], Tensor[(10, 16, 12), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(45, 3), bool]) */;
  %703 = %663.2;
  %704 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %705 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
  %706 = %664.0;
  %707 = power(%690, %691) /* ty=Tensor[(12, ?, 2), float32] */;
  %708 = less_equal(%694, %695) /* ty=Tensor[(12, 7, 2), bool] */;
  %709 = %702.8;
  (%703, meta[relay.Constant][52] /* ty=Tensor[(540), int32] */, %704, %705, %706, %707, %708, %709, %var_13407, %var_13408, meta[relay.Constant][54] /* ty=Tensor[(135), bool] */)
}

def @func_8109(%var_8081: Tensor[(16, 1, 10), float64], %var_8097: Tensor[(99), float32]) -> (Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) {
  %710 = cast(%var_8081, dtype="float64") /* ty=Tensor[(16, 1, 10), float64] */;
  %711 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %712 = cast(meta[relay.Constant][55] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %713 = cast(%var_8097, dtype="float32") /* ty=Tensor[(99), float32] */;
  %714 = reshape(%711, newshape=[]) /* ty=int64 */;
  %715 = reshape(%712, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), int64] */;
  %716 = reshape(%713, newshape=[11, 9]) /* ty=Tensor[(11, 9), float32] */;
  %717 = @func_5092(%714, %715, %716) /* ty=(Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) */;
  %718 = log10(%710) /* ty=Tensor[(16, 1, 10), float64] */;
  %719 = %717.2;
  (%718, %719, 3 /* ty=int64 */, meta[relay.Constant][55] /* ty=Tensor[(120), int64] */, %var_8097)
}

def @func_12776(%var_12775: int64) -> (Tensor[(8, 8, 1), float64], int64, Tensor[(8, 8, ?), bool], Tensor[(120, 507), float32]) {
  %734 = fn (%var_12763: int64) -> (Tensor[(8, 8, 1), float64], int64, Tensor[(8, 8, ?), bool], Tensor[(120, 507), float32]) {
    %720 = @func_12326() /* ty=(Tensor[(8, 8, ?), bool],) */;
    %721 = cast(meta[relay.Constant][56] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
    %722 = cast(%var_12763, dtype="int64") /* ty=int64 */;
    %723 = cast(meta[relay.Constant][56] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
    %724 = reshape(%721, newshape=[507]) /* ty=Tensor[(507), float64] */;
    %725 = reshape(%722, newshape=[]) /* ty=int64 */;
    %726 = reshape(%723, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
    %727 = @func_5342(%724, %725, %726) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
    %728 = %727.3;
    %729 = cast(%728, dtype="float32") /* ty=Tensor[(120, 1), float32] */;
    %730 = cast(meta[relay.Constant][56] /* ty=Tensor[(507), float64] */, dtype="float32") /* ty=Tensor[(507), float32] */;
    %731 = @func_11599() /* ty=Tensor[(8, 8, 1), float64] */;
    %732 = %720.0;
    %733 = power(%729, %730) /* ty=Tensor[(120, 507), float32] */;
    (%731, %var_12763, %732, %733)
  };
  %734(%var_12775) /* ty=(Tensor[(8, 8, 1), float64], int64, Tensor[(8, 8, ?), bool], Tensor[(120, 507), float32]) */
}

def @func_12845(%var_12844: Tensor[(8, 8, 14), float64]) -> Tensor[(8, 8, 14), int32] {
  %738 = fn (%var_12838: Tensor[(8, 8, 14), float64]) -> Tensor[(8, 8, 14), int32] {
    %735 = @func_12675() /* ty=Tensor[(8, 8, 1), float64] */;
    %736 = cast(%735, dtype="int32") /* ty=Tensor[(8, 8, 1), int32] */;
    %737 = cast(%var_12838, dtype="int32") /* ty=Tensor[(8, 8, 14), int32] */;
    right_shift(%736, %737) /* ty=Tensor[(8, 8, 14), int32] */
  };
  %738(%var_12844) /* ty=Tensor[(8, 8, 14), int32] */
}

def @func_12152() -> (Tensor[(8, 8, 1), float64],) {
  @func_12150() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_757(%var_756: Tensor[(6, 1, 1), float32]) -> (Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) {
  %751 = fn (%var_731: Tensor[(6, 1, 1), float32]) -> (Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) {
    %739 = cast(%var_731, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
    %740 = acos(%739) /* ty=Tensor[(6, 1, 1), float32] */;
    %741 = cast(%740, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
    %742 = atanh(%741) /* ty=Tensor[(6, 1, 1), float32] */;
    %743 = cast(%740, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
    %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
    %745 = cast(%742, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
    %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %747 = cast(meta[relay.Constant][57] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
    %748 = reshape(%747, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
    %749 = divide(%745, %746) /* ty=Tensor[(6, ?, ?), float32] */;
    %750 = @func_142(%748) /* ty=Tensor[(13, 3, 13), float64] */;
    (%749, %750, meta[relay.Constant][57] /* ty=Tensor[(507), float64] */)
  };
  %751(%var_756) /* ty=(Tensor[(6, ?, ?), float32], Tensor[(13, 3, 13), float64], Tensor[(507), float64]) */
}

def @func_13103(%var_13101: Tensor[(15, 7, 5), int16], %var_13102: Tensor[(15, 7, 5), int16]) -> (Tensor[(8, 8, 1), float64], Tensor[(15, 7, 5), float64]) {
  @func_13099(%var_13101, %var_13102) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(15, 7, 5), float64]) */
}

def @func_13619(%var_13616: Tensor[(2304), float32], %var_13617: Tensor[(42), float32], %var_13618: Tensor[(1680), float64]) -> (Tensor[(3, 180), float32], Tensor[(?, 9, 15), float32], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(8, 8, 507), uint8]) {
  @func_13614(%var_13616, %var_13617, %var_13618) /* ty=(Tensor[(3, 180), float32], Tensor[(?, 9, 15), float32], Tensor[(864), float32], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(8, 8, 507), uint8]) */
}

def @func_10432() -> (Tensor[(8, 8, 1), float64],) {
  %752 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  (%752,)
}

def @func_12677() -> Tensor[(8, 8, 1), float64] {
  @func_12675() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_5045(%var_5043: Tensor[(10, 14, 12), float64], %var_5044: Tensor[(6), float32]) -> (Tensor[(10, 14, 12), float64], Tensor[(507), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64]) {
  @func_5041(%var_5043, %var_5044) /* ty=(Tensor[(10, 14, 12), float64], Tensor[(507), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64]) */
}

def @func_11690(%var_11685: Tensor[(1, 150), float32], %var_11686: Tensor[(507, 1), float64], %var_11687: int64, %var_11688: Tensor[(99), float32], %var_11689: Tensor[(252), float64]) -> (int64, Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(8, 8, 150), float64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 2, 9), float32], Tensor[(7, 2, 9), float32]) {
  %780 = fn (%var_11654: Tensor[(1, 150), float32], %var_11655: Tensor[(507, 1), float64], %var_11656: int64, %var_11657: Tensor[(99), float32], %var_11665: Tensor[(252), float64]) -> (int64, Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(8, 8, 150), float64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 2, 9), float32], Tensor[(7, 2, 9), float32]) {
    %753 = cast(%var_11654, dtype="float32") /* ty=Tensor[(1, 150), float32] */;
    %754 = cast(%var_11655, dtype="float64") /* ty=Tensor[(507, 1), float64] */;
    %755 = cast(%var_11656, dtype="int64") /* ty=int64 */;
    %756 = cast(%var_11657, dtype="float32") /* ty=Tensor[(99), float32] */;
    %757 = reshape(%753, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
    %758 = reshape(%754, newshape=[507, 1]) /* ty=Tensor[(507, 1), float64] */;
    %759 = reshape(%755, newshape=[]) /* ty=int64 */;
    %760 = reshape(%756, newshape=[99]) /* ty=Tensor[(99), float32] */;
    %761 = @func_8501(%757, %758, %759, %760) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) */;
    %762 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %763 = %762.0;
    %764 = cast(%763, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
    %765 = cosh(%764) /* ty=Tensor[(8, 8, 1), float32] */;
    %766 = cast(%765, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
    %767 = cast(%var_11654, dtype="float64") /* ty=Tensor[(1, 150), float64] */;
    %768 = %761.3;
    %769 = cast(%768, dtype="float64") /* ty=float64 */;
    %770 = cast(%var_11665, dtype="float64") /* ty=Tensor[(252), float64] */;
    %771 = reshape(%769, newshape=[]) /* ty=float64 */;
    %772 = reshape(%770, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
    %773 = @func_9935() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */;
    %774 = %773.1;
    %775 = cast(%774, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
    %776 = reshape(%775, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
    %777 = minimum(%766, %767) /* ty=Tensor[(8, 8, 150), float64] */;
    %778 = @func_3641(%771, %772) /* ty=Tensor[(7, 9, 4), float64] */;
    %779 = @func_7653(%776) /* ty=Tensor[(7, 2, 9), float32] */;
    (%768, %var_11655, %var_11656, %var_11657, %777, %778, %var_11665, %774, %779)
  };
  %780(%var_11685, %var_11686, %var_11687, %var_11688, %var_11689) /* ty=(int64, Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(8, 8, 150), float64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 2, 9), float32], Tensor[(7, 2, 9), float32]) */
}

def @func_14519() -> Tensor[(8, 8, 1), float64] {
  %781 = @func_11741() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %781.0
}

def @main(%var_15383: Tensor[(8, 8, 14), float64], %var_15396: Tensor[(150), float32], %var_15399: Tensor[(99), float32], %var_15402: Tensor[(507), float64]) -> (Tensor[(8, 8, 14), bool], Tensor[(2, 4, 15), int64], Tensor[(150), float32], Tensor[(99), float32], Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(507), uint32]) {
  %782 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
  %783 = cast(%782, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %784 = cast(%var_15383, dtype="bool") /* ty=Tensor[(8, 8, 14), bool] */;
  %785 = cast(%var_15396, dtype="float32") /* ty=Tensor[(150), float32] */;
  %786 = cast(meta[relay.Constant][58] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %787 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %788 = cast(%var_15399, dtype="float32") /* ty=Tensor[(99), float32] */;
  %789 = reshape(%785, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), float32] */;
  %790 = reshape(%786, newshape=[507, 1]) /* ty=Tensor[(507, 1), float64] */;
  %791 = reshape(%787, newshape=[]) /* ty=int64 */;
  %792 = reshape(%788, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %793 = @func_8506(%789, %790, %791, %792) /* ty=(Tensor[(15, 2, 5), float32], Tensor[(2, 4, 15), int64], Tensor[(507, 1), float64], int64, Tensor[(2288), uint32], Tensor[(160), float64], Tensor[(99), float32]) */;
  %794 = cast(%var_15402, dtype="float64") /* ty=Tensor[(507), float64] */;
  %795 = reshape(%794, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %796 = cast(%var_15402, dtype="int32") /* ty=Tensor[(507), int32] */;
  %797 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(507), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %798 = cast(meta[relay.Constant][58] /* ty=Tensor[(507), float64] */, dtype="int32") /* ty=Tensor[(507), int32] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?), int32] */;
  %800 = maximum(%798, %799) /* ty=Tensor[(507), int32] */;
  %801 = cast(%800, dtype="float64") /* ty=Tensor[(507), float64] */;
  %802 = log10(%801) /* ty=Tensor[(507), float64] */;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(507), float64] */;
  %804 = acos(%803) /* ty=Tensor[(507), float64] */;
  %805 = cast(%804, dtype="uint32") /* ty=Tensor[(507), uint32] */;
  %806 = cast(-3 /* ty=int64 */, dtype="uint32") /* ty=uint32 */;
  %807 = logical_and(%783, %784) /* ty=Tensor[(8, 8, 14), bool] */;
  %808 = %793.1;
  %809 = @func_13923() /* ty=Tensor[(8, 8, 1), float64] */;
  %810 = @func_142(%795) /* ty=Tensor[(13, 3, 13), float64] */;
  %811 = add(%805, %806) /* ty=Tensor[(507), uint32] */;
  (%807, %808, %var_15396, %var_15399, %809, %810, %811)
}

def @func_7694(%var_7693: Tensor[(12, 2, 10), int8]) -> (Tensor[(12, 2, 10), int8], Tensor[(11, ?, 9), float32], Tensor[(99), float32]) {
  %820 = fn (%var_7669: Tensor[(12, 2, 10), int8]) -> (Tensor[(12, 2, 10), int8], Tensor[(11, ?, 9), float32], Tensor[(99), float32]) {
    %812 = cast(%var_7669, dtype="int8") /* ty=Tensor[(12, 2, 10), int8] */;
    %813 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(12, 2, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %814 = cast(meta[relay.Constant][59] /* ty=Tensor[(12, 2, 10), int8] */, dtype="int8") /* ty=Tensor[(12, 2, 10), int8] */;
    %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %816 = cast(meta[relay.Constant][60] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
    %817 = reshape(%816, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
    %818 = logical_xor(%814, %815) /* ty=Tensor[(12, 2, 10), int8] */;
    %819 = @func_3883(%817) /* ty=Tensor[(11, ?, 9), float32] */;
    (%818, %819, meta[relay.Constant][60] /* ty=Tensor[(99), float32] */)
  };
  %820(%var_7693) /* ty=(Tensor[(12, 2, 10), int8], Tensor[(11, ?, 9), float32], Tensor[(99), float32]) */
}

def @func_11847(%var_11845: Tensor[(4, 11, 7), float64], %var_11846: Tensor[(4, 11, 7), float64]) -> (Tensor[(4, 11, 7), float64],) {
  @func_11843(%var_11845, %var_11846) /* ty=(Tensor[(4, 11, 7), float64],) */
}

def @func_12376() -> (Tensor[(8, 8, 1), float64],) {
  @func_12374() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_13025() -> Tensor[(8, 8, 1), float64] {
  @func_9857() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_11151() -> (Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) {
  @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */
}

def @func_13835() -> Tensor[(8, 8, 1), float64] {
  @func_13833() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_12118(%var_12117: Tensor[(507), float64]) -> Tensor[(507), uint8] {
  %834 = fn (%var_12083: Tensor[(507), float64]) -> Tensor[(507), uint8] {
    %821 = @func_11865() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(507), float64], Tensor[(126), float32]) */;
    %822 = %821.2;
    %823 = cast(%822, dtype="float64") /* ty=Tensor[(507), float64] */;
    %824 = atan(%823) /* ty=Tensor[(507), float64] */;
    %825 = cast(%var_12083, dtype="bool") /* ty=Tensor[(507), bool] */;
    %826 = shape_of(%822, dtype="int32") /* ty=Tensor[(1), int32] */;
    %827 = cast(%822, dtype="bool") /* ty=Tensor[(507), bool] */;
    %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?), bool] */;
    %829 = equal(%827, %828) /* ty=Tensor[(507), bool] */;
    %830 = cast(%829, dtype="uint8") /* ty=Tensor[(507), uint8] */;
    %831 = shape_of(%824, dtype="int32") /* ty=Tensor[(1), int32] */;
    %832 = cast(%824, dtype="uint8") /* ty=Tensor[(507), uint8] */;
    %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?), uint8] */;
    bitwise_and(%832, %833) /* ty=Tensor[(507), uint8] */
  };
  %834(%var_12117) /* ty=Tensor[(507), uint8] */
}

def @func_5342(%var_5281: Tensor[(507), float64], %var_5285: int64, %var_5337: Tensor[(13, 3, 13), float64]) -> (Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) {
  %835 = cast(%var_5285, dtype="int64") /* ty=int64 */;
  %836 = cast(meta[relay.Constant][61] /* ty=Tensor[(120, 1), int64] */, dtype="int64") /* ty=Tensor[(120, 1), int64] */;
  %837 = cast(meta[relay.Constant][62] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %838 = reshape(%835, newshape=[]) /* ty=int64 */;
  %839 = reshape(%836, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), int64] */;
  %840 = reshape(%837, newshape=[11, 9]) /* ty=Tensor[(11, 9), float32] */;
  %841 = @func_5092(%838, %839, %840) /* ty=(Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) */;
  %842 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
  %843 = cosh(%842) /* ty=Tensor[(3, 16, 1), float32] */;
  %844 = cast(%843, dtype="int8") /* ty=Tensor[(3, 16, 1), int8] */;
  %845 = cast(meta[relay.Constant][62] /* ty=Tensor[(99), float32] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %846 = cast(%var_5285, dtype="int64") /* ty=int64 */;
  %847 = %841.0;
  %848 = cast(%847, dtype="int64") /* ty=Tensor[(2, 4, 15), int64] */;
  %849 = cast(meta[relay.Constant][62] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %850 = reshape(%846, newshape=[]) /* ty=int64 */;
  %851 = reshape(%848, newshape=[2, 4, 15]) /* ty=Tensor[(2, 4, 15), int64] */;
  %852 = reshape(%849, newshape=[11, 9]) /* ty=Tensor[(11, 9), float32] */;
  %853 = @func_5092(%850, %851, %852) /* ty=(Tensor[(2, 4, 15), int64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(11, ?, 9), float32], Tensor[(11, 9), float32]) */;
  %854 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
  %855 = cast(meta[relay.Constant][62] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %856 = cast(%var_5281, dtype="float64") /* ty=Tensor[(507), float64] */;
  %857 = reshape(%856, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %858 = @func_142(%857) /* ty=Tensor[(13, 3, 13), float64] */;
  %859 = cast(%var_5337, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %860 = shape_of(%858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%858, dtype="float64") /* ty=Tensor[(13, 3, 13), float64] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %863 = add(%844, %845) /* ty=Tensor[(3, 16, 99), int8] */;
  %864 = %853.4;
  %865 = maximum(%854, %855) /* ty=Tensor[(3, 16, 99), float32] */;
  %866 = power(%861, %862) /* ty=Tensor[(13, 3, 13), float64] */;
  (%var_5281, %847, %var_5285, meta[relay.Constant][61] /* ty=Tensor[(120, 1), int64] */, %863, %864, %865, %866)
}

def @func_12659() -> (Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) {
  %875 = fn () -> (Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) {
    %867 = @func_12631() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %868 = cast(meta[relay.Constant][64] /* ty=Tensor[(18, 30), int32] */, dtype="int32") /* ty=Tensor[(18, 30), int32] */;
    %869 = cast(meta[relay.Constant][64] /* ty=Tensor[(18, 30), int32] */, dtype="int32") /* ty=Tensor[(18, 30), int32] */;
    %870 = reshape(%868, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
    %871 = reshape(%869, newshape=[3, 180]) /* ty=Tensor[(3, 180), int32] */;
    %872 = @func_11040(%870, %871) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(12, 3, 15), int32], Tensor[(3, 180), uint64], Tensor[(3, 180), float64]) */;
    %873 = %867.0;
    %874 = %872.2;
    (%873, %874, meta[relay.Constant][64] /* ty=Tensor[(18, 30), int32] */)
  };
  %875() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 180), uint64], Tensor[(18, 30), int32]) */
}

def @func_10604(%var_10598: Tensor[(8, 5, 1), float64]) -> Tensor[(8, 5, 1), float64] {
  %876 = cast(%var_10598, dtype="float64") /* ty=Tensor[(8, 5, 1), float64] */;
  exp(%876) /* ty=Tensor[(8, 5, 1), float64] */
}

def @func_13201(%var_13200: Tensor[(8, 8, 1), float64]) -> (Tensor[(8, 8, ?), int8], Tensor[(8, 8, ?), bool]) {
  %889 = fn (%var_13178: Tensor[(8, 8, 1), float64]) -> (Tensor[(8, 8, ?), int8], Tensor[(8, 8, ?), bool]) {
    %877 = @func_12631() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %878 = %877.0;
    %879 = cast(%var_13178, dtype="int8") /* ty=Tensor[(8, 8, 1), int8] */;
    %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
    %881 = cast(%878, dtype="int8") /* ty=Tensor[(8, 8, 1), int8] */;
    %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %883 = cast(%878, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
    %884 = shape_of(%var_13178, dtype="int32") /* ty=Tensor[(3), int32] */;
    %885 = cast(%var_13178, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
    %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %887 = bitwise_and(%881, %882) /* ty=Tensor[(8, 8, ?), int8] */;
    %888 = less(%885, %886) /* ty=Tensor[(8, 8, ?), bool] */;
    (%887, %888)
  };
  %889(%var_13200) /* ty=(Tensor[(8, 8, ?), int8], Tensor[(8, 8, ?), bool]) */
}

def @func_13099(%var_13062: Tensor[(15, 7, 5), int16], %var_13063: Tensor[(15, 7, 5), int16]) -> (Tensor[(8, 8, 1), float64], Tensor[(15, 7, 5), float64]) {
  %890 = @func_11741() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %891 = cast(%var_13063, dtype="int16") /* ty=Tensor[(15, 7, 5), int16] */;
  %892 = shape_of(%var_13062, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%var_13062, dtype="int16") /* ty=Tensor[(15, 7, 5), int16] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %895 = add(%893, %894) /* ty=Tensor[(15, 7, 5), int16] */;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(15, 7, 5), float32] */;
  %897 = erf(%896) /* ty=Tensor[(15, 7, 5), float32] */;
  %898 = cast(%897, dtype="float64") /* ty=Tensor[(15, 7, 5), float64] */;
  %899 = %890.0;
  %900 = log10(%898) /* ty=Tensor[(15, 7, 5), float64] */;
  (%899, %900)
}

def @func_15127(%var_15077: Tensor[(135), bool], %var_15102: uint32, %var_15125: Tensor[(99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(8, 8, 1), float32], Tensor[(250, 448), uint64], Tensor[(14, 5, 1), uint32], uint32, Tensor[(8, 8, 70), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(99), float32]) {
  %901 = @func_14701() /* ty=(Tensor[(2, 5, 3), float32], Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) */;
  %902 = cast(%var_15077, dtype="bool") /* ty=Tensor[(135), bool] */;
  %903 = cast(%var_15077, dtype="bool") /* ty=Tensor[(135), bool] */;
  %904 = reshape(%902, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %905 = reshape(%903, newshape=[1, 9, 15]) /* ty=Tensor[(1, 9, 15), bool] */;
  %906 = @func_6077(%904, %905) /* ty=(Tensor[(?, 9, 15), float32],) */;
  %907 = cast(meta[relay.Constant][65] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %908 = cast(meta[relay.Constant][66] /* ty=Tensor[(250, 1), int8] */, dtype="int8") /* ty=Tensor[(250, 1), int8] */;
  %909 = reshape(%907, newshape=[8, 8, 7]) /* ty=Tensor[(8, 8, 7), float32] */;
  %910 = reshape(%908, newshape=[25, 10]) /* ty=Tensor[(25, 10), int8] */;
  %911 = @func_12600(%909, %910) /* ty=(Tensor[(8, 8, 7), bool], Tensor[(8, 8, 1), float32], Tensor[(8, 8, 1), float64], Tensor[(6, ?, ?), float32], Tensor[(25, 10), int8], Tensor[(6), float32], Tensor[(2, 5, 3), float32]) */;
  %912 = cast(meta[relay.Constant][66] /* ty=Tensor[(250, 1), int8] */, dtype="uint64") /* ty=Tensor[(250, 1), uint64] */;
  %913 = cast(meta[relay.Constant][65] /* ty=Tensor[(448), float32] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %914 = cast(%var_15102, dtype="uint32") /* ty=uint32 */;
  %915 = cast(meta[relay.Constant][67] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %916 = reshape(%914, newshape=[]) /* ty=uint32 */;
  %917 = reshape(%915, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), uint32] */;
  %918 = @func_10296(%916, %917) /* ty=(Tensor[(14, 5, 1), uint32],) */;
  %919 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
  %920 = %919.1;
  %921 = cast(%920, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  %922 = cast(meta[relay.Constant][67] /* ty=Tensor[(70), uint32] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %923 = cast(meta[relay.Constant][68] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %924 = %918.0;
  %925 = cast(%924, dtype="uint32") /* ty=Tensor[(14, 5, 1), uint32] */;
  %926 = reshape(%923, newshape=[40]) /* ty=Tensor[(40), float64] */;
  %927 = reshape(%925, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %928 = @func_11364(%926, %927) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70), uint32]) */;
  %929 = cast(meta[relay.Constant][69] /* ty=Tensor[(2288), uint32] */, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
  %930 = cast(%var_15125, dtype="float32") /* ty=Tensor[(99), float32] */;
  %931 = reshape(%929, newshape=[2288]) /* ty=Tensor[(2288), uint32] */;
  %932 = reshape(%930, newshape=[1, 99]) /* ty=Tensor[(1, 99), float32] */;
  %933 = @func_14663(%931, %932) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(2, 3, 6), uint64], Tensor[(2288), uint32], Tensor[(1, 99), float32]) */;
  %934 = %901.2;
  %935 = %906.0;
  %936 = %911.1;
  %937 = bitwise_or(%912, %913) /* ty=Tensor[(250, 448), uint64] */;
  %938 = floor_divide(%921, %922) /* ty=Tensor[(8, 8, 70), float64] */;
  %939 = %928.1;
  %940 = %933.1;
  (%934, %935, %var_15077, %936, %937, %924, %var_15102, %938, %939, meta[relay.Constant][68] /* ty=Tensor[(40), float64] */, %940, meta[relay.Constant][69] /* ty=Tensor[(2288), uint32] */, %var_15125)
}

def @func_8322(%var_8316: Tensor[(12, 6, 12), float32], %var_8317: Tensor[(2304), float32], %var_8318: Tensor[(14, 3), float32], %var_8319: Tensor[(1680), float64], %var_8320: Tensor[(135), bool], %var_8321: Tensor[(12, 6, 12), uint32]) -> (Tensor[(42), float32], Tensor[(2304), float32], Tensor[(14, 3), float32], Tensor[(12, 6, 12), bool], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(7, 6), float32], Tensor[(8, 286), uint32], Tensor[(13, 3, 13), float64], Tensor[(12, 6, 12), int32]) {
  @func_8314(%var_8316, %var_8317, %var_8318, %var_8319, %var_8320, %var_8321) /* ty=(Tensor[(42), float32], Tensor[(2304), float32], Tensor[(14, 3), float32], Tensor[(12, 6, 12), bool], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(7, 6), float32], Tensor[(8, 286), uint32], Tensor[(13, 3, 13), float64], Tensor[(12, 6, 12), int32]) */
}

def @func_12551() -> Tensor[(99), float32] {
  %942 = fn () -> Tensor[(99), float32] {
    %941 = @func_12494() /* ty=(Tensor[(160), float64], Tensor[(99), float32], Tensor[(8, 8, 507), bool], Tensor[(8, 8, 507), uint8], Tensor[(99), float64]) */;
    %941.1
  };
  %942() /* ty=Tensor[(99), float32] */
}

def @func_14703() -> (Tensor[(2, 5, 3), float32], Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) {
  @func_14701() /* ty=(Tensor[(2, 5, 3), float32], Tensor[(8, 8, 8), int16], Tensor[(8, 8, 1), float64]) */
}

def @func_15198() -> Tensor[(126), float32] {
  %944 = fn () -> Tensor[(126), float32] {
    %943 = @func_14478() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(126), float32]) */;
    %943.1
  };
  %944() /* ty=Tensor[(126), float32] */
}

def @func_14920(%var_14915: Tensor[(12, 16, 11), float32], %var_14916: Tensor[(150), float32], %var_14917: Tensor[(507, 1), float64], %var_14918: int64, %var_14919: Tensor[(252), float64]) -> (Tensor[(2, 5, 3), float32], Tensor[(8, 8, 150), float64], Tensor[(150), float32], Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(252), float64], Tensor[(12, 1, 2), float32], Tensor[(12, 16, 11), float32]) {
  %965 = fn (%var_14834: Tensor[(12, 16, 11), float32], %var_14855: Tensor[(150), float32], %var_14856: Tensor[(507, 1), float64], %var_14857: int64, %var_14859: Tensor[(252), float64]) -> (Tensor[(2, 5, 3), float32], Tensor[(8, 8, 150), float64], Tensor[(150), float32], Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(252), float64], Tensor[(12, 1, 2), float32], Tensor[(12, 16, 11), float32]) {
    %945 = @func_14637() /* ty=(Tensor[(2, 5, 3), float32],) */;
    %946 = cast(%var_14855, dtype="float32") /* ty=Tensor[(150), float32] */;
    %947 = cast(%var_14856, dtype="float64") /* ty=Tensor[(507, 1), float64] */;
    %948 = cast(%var_14857, dtype="int64") /* ty=int64 */;
    %949 = cast(meta[relay.Constant][70] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
    %950 = cast(%var_14859, dtype="float64") /* ty=Tensor[(252), float64] */;
    %951 = reshape(%946, newshape=[1, 150]) /* ty=Tensor[(1, 150), float32] */;
    %952 = reshape(%947, newshape=[507, 1]) /* ty=Tensor[(507, 1), float64] */;
    %953 = reshape(%948, newshape=[]) /* ty=int64 */;
    %954 = reshape(%949, newshape=[99]) /* ty=Tensor[(99), float32] */;
    %955 = reshape(%950, newshape=[252]) /* ty=Tensor[(252), float64] */;
    %956 = @func_11684(%951, %952, %953, %954, %955) /* ty=(int64, Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(8, 8, 150), float64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 2, 9), float32], Tensor[(7, 2, 9), float32]) */;
    %957 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
    %958 = cast(%var_14834, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
    %959 = acos(%958) /* ty=Tensor[(12, 16, 11), float32] */;
    %960 = cast(%959, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
    %961 = %945.0;
    %962 = %956.4;
    %963 = %957.1;
    %964 = asinh(%960) /* ty=Tensor[(12, 16, 11), float32] */;
    (%961, %962, %var_14855, %var_14856, %var_14857, meta[relay.Constant][70] /* ty=Tensor[(99), float32] */, %var_14859, %963, %964)
  };
  %965(%var_14915, %var_14916, %var_14917, %var_14918, %var_14919) /* ty=(Tensor[(2, 5, 3), float32], Tensor[(8, 8, 150), float64], Tensor[(150), float32], Tensor[(507, 1), float64], int64, Tensor[(99), float32], Tensor[(252), float64], Tensor[(12, 1, 2), float32], Tensor[(12, 16, 11), float32]) */
}

def @func_12826() -> (Tensor[(8, 8, 1), float64],) {
  %966 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %967 = %966.0;
  (%967,)
}

def @func_9936() -> (Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) {
  %974 = fn () -> (Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) {
    %968 = @func_9857() /* ty=Tensor[(8, 8, 1), float64] */;
    %969 = cast(%968, dtype="float32") /* ty=Tensor[(8, 8, 1), float32] */;
    %970 = cast(meta[relay.Constant][71] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %971 = reshape(%970, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
    %972 = sigmoid(%969) /* ty=Tensor[(8, 8, 1), float32] */;
    %973 = @func_7653(%971) /* ty=Tensor[(7, 2, 9), float32] */;
    (%972, %973, meta[relay.Constant][71] /* ty=Tensor[(126), float32] */)
  };
  %974() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */
}

def @func_11248() -> (Tensor[(8, 8, 1), float64],) {
  @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_12675() -> Tensor[(8, 8, 1), float64] {
  @func_11611() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_12609() -> (Tensor[(13, 3, 13), float64],) {
  %977 = fn () -> (Tensor[(13, 3, 13), float64],) {
    %975 = @func_10586() /* ty=(Tensor[(7, 2, 9), float32], Tensor[(13, 3, 13), float64]) */;
    %976 = %975.1;
    (%976,)
  };
  %977() /* ty=(Tensor[(13, 3, 13), float64],) */
}

def @func_11063() -> (Tensor[(8, 8, 1), float64],) {
  @func_11061() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_13833() -> Tensor[(8, 8, 1), float64] {
  %978 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %978.0
}

def @func_11586() -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) {
  %985 = fn () -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) {
    %979 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %980 = @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %981 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
    %982 = %979.0;
    %983 = %980.0;
    %984 = %981.1;
    (%982, %983, %984)
  };
  %985() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, 1, 2), float32]) */
}

def @func_10517(%var_10516: Tensor[(126), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) {
  %991 = fn (%var_10510: Tensor[(126), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) {
    %986 = @func_10432() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %987 = cast(%var_10510, dtype="float32") /* ty=Tensor[(126), float32] */;
    %988 = reshape(%987, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
    %989 = %986.0;
    %990 = @func_7653(%988) /* ty=Tensor[(7, 2, 9), float32] */;
    (%989, %990, %var_10510)
  };
  %991(%var_10516) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(7, 2, 9), float32], Tensor[(126), float32]) */
}

def @func_10299(%var_10297: uint32, %var_10298: Tensor[(14, 5, 1), uint32]) -> (Tensor[(14, 5, 1), uint32],) {
  %995 = fn (%var_10291: uint32, %var_10292: Tensor[(14, 5, 1), uint32]) -> (Tensor[(14, 5, 1), uint32],) {
    %992 = cast(%var_10291, dtype="uint32") /* ty=uint32 */;
    %993 = cast(%var_10292, dtype="uint32") /* ty=Tensor[(14, 5, 1), uint32] */;
    %994 = right_shift(%992, %993) /* ty=Tensor[(14, 5, 1), uint32] */;
    (%994,)
  };
  %995(%var_10297, %var_10298) /* ty=(Tensor[(14, 5, 1), uint32],) */
}

def @func_3644(%var_3642: float64, %var_3643: Tensor[(7, 9, 4), float64]) -> Tensor[(7, 9, 4), float64] {
  %998 = fn (%var_3632: float64, %var_3633: Tensor[(7, 9, 4), float64]) -> Tensor[(7, 9, 4), float64] {
    %996 = cast(%var_3632, dtype="float64") /* ty=float64 */;
    %997 = cast(%var_3633, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
    floor_divide(%996, %997) /* ty=Tensor[(7, 9, 4), float64] */
  };
  %998(%var_3642, %var_3643) /* ty=Tensor[(7, 9, 4), float64] */
}

def @func_14404() -> (Tensor[(99), float32], Tensor[(12, 1, 2), float64]) {
  %1004 = fn () -> (Tensor[(99), float32], Tensor[(12, 1, 2), float64]) {
    %999 = @func_11149() /* ty=(Tensor[(8, 8, 1), float32], Tensor[(12, 1, 2), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
    %1000 = %999.1;
    %1001 = cast(%1000, dtype="float64") /* ty=Tensor[(12, 1, 2), float64] */;
    %1002 = @func_14302() /* ty=Tensor[(99), float32] */;
    %1003 = sin(%1001) /* ty=Tensor[(12, 1, 2), float64] */;
    (%1002, %1003)
  };
  %1004() /* ty=(Tensor[(99), float32], Tensor[(12, 1, 2), float64]) */
}

def @func_8314(%var_8215: Tensor[(12, 6, 12), float32], %var_8224: Tensor[(2304), float32], %var_8225: Tensor[(14, 3), float32], %var_8260: Tensor[(1680), float64], %var_8261: Tensor[(135), bool], %var_8297: Tensor[(12, 6, 12), uint32]) -> (Tensor[(42), float32], Tensor[(2304), float32], Tensor[(14, 3), float32], Tensor[(12, 6, 12), bool], Tensor[(?, 9, 15), float32], Tensor[(1920), float64], Tensor[(1680), float64], Tensor[(135), bool], Tensor[(7, 6), float32], Tensor[(8, 286), uint32], Tensor[(13, 3, 13), float64], Tensor[(12, 6, 12), int32]) {
  %1005 = cast(%var_8224, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1006 = cast(%var_8225, dtype="float32") /* ty=Tensor[(14, 3), float32] */;
  %1007 = reshape(%1005, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %1008 = reshape(%1006, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %1009 = @func_7098(%1007, %1008) /* ty=(Tensor[(12, 1, 2), float32], Tensor[(91, 6), float32], Tensor[(2304), float32], Tensor[(42), float32]) */;
  %1010 = cast(%var_8215, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
  %1011 = log(%1010) /* ty=Tensor[(12, 6, 12), float32] */;
  %1012 = cast(meta[relay.Constant][72] /* ty=Tensor[(12, 6, 12), float32] */, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
  %1013 = shape_of(%1011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(%1011, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1016 = cast(meta[relay.Constant][73] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1017 = cast(meta[relay.Constant][73] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1018 = cast(%var_8260, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1019 = cast(%var_8261, dtype="bool") /* ty=Tensor[(135), bool] */;
  %1020 = reshape(%1016, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %1021 = reshape(%1017, newshape=[10, 16, 12]) /* ty=Tensor[(10, 16, 12), float64] */;
  %1022 = reshape(%1018, newshape=[1680]) /* ty=Tensor[(1680), float64] */;
  %1023 = reshape(%1019, newshape=[135]) /* ty=Tensor[(135), bool] */;
  %1024 = @func_6152(%1020, %1021, %1022, %1023) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(1680), float64], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(?, 9, 15), float32], Tensor[(135), bool], Tensor[(10, 16, 12), float32]) */;
  %1025 = cast(meta[relay.Constant][74] /* ty=Tensor[(8, 286), uint32] */, dtype="uint32") /* ty=Tensor[(8, 286), uint32] */;
  %1026 = reshape(%1025, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
  %1027 = @func_1358(%1026) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
  %1028 = cast(meta[relay.Constant][74] /* ty=Tensor[(8, 286), uint32] */, dtype="uint32") /* ty=Tensor[(8, 286), uint32] */;
  %1029 = reshape(%1028, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
  %1030 = @func_1358(%1029) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
  %1031 = cast(%var_8215, dtype="uint32") /* ty=Tensor[(12, 6, 12), uint32] */;
  %1032 = shape_of(%1011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1033 = cast(%1011, dtype="uint32") /* ty=Tensor[(12, 6, 12), uint32] */;
  %1034 = dyn.reshape(%1031, %1032, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1035 = bitwise_or(%1033, %1034) /* ty=Tensor[(12, 6, 12), uint32] */;
  %1036 = cast(%var_8297, dtype="int32") /* ty=Tensor[(12, 6, 12), int32] */;
  %1037 = shape_of(%1035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1038 = cast(%1035, dtype="int32") /* ty=Tensor[(12, 6, 12), int32] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1040 = %1009.3;
  %1041 = greater_equal(%1014, %1015) /* ty=Tensor[(12, 6, 12), bool] */;
  %1042 = %1024.4;
  %1043 = %1027.3;
  %1044 = %1030.0;
  %1045 = bitwise_and(%1038, %1039) /* ty=Tensor[(12, 6, 12), int32] */;
  (%1040, %var_8224, %var_8225, %1041, %1042, meta[relay.Constant][73] /* ty=Tensor[(1920), float64] */, %var_8260, %var_8261, %1043, meta[relay.Constant][74] /* ty=Tensor[(8, 286), uint32] */, %1044, %1045)
}

def @func_13280() -> (Tensor[(8, 8, 8), int16],) {
  %1046 = @func_11061() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %1047 = %1046.0;
  %1048 = cast(%1047, dtype="int16") /* ty=Tensor[(8, 8, 1), int16] */;
  %1049 = cast(meta[relay.Constant][75] /* ty=Tensor[(8, 8, 8), float64] */, dtype="int16") /* ty=Tensor[(8, 8, 8), int16] */;
  %1050 = minimum(%1048, %1049) /* ty=Tensor[(8, 8, 8), int16] */;
  (%1050,)
}

def @func_14788(%var_14787: Tensor[(99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(36), uint64], Tensor[(2288), uint32], Tensor[(99), float32], Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(8, 8, 1), float64]) {
  %1065 = fn (%var_14750: Tensor[(99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(36), uint64], Tensor[(2288), uint32], Tensor[(99), float32], Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(8, 8, 1), float64]) {
    %1051 = @func_10466() /* ty=(Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64]) */;
    %1052 = cast(meta[relay.Constant][76] /* ty=Tensor[(2288), uint32] */, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
    %1053 = cast(%var_14750, dtype="float32") /* ty=Tensor[(99), float32] */;
    %1054 = reshape(%1052, newshape=[2288]) /* ty=Tensor[(2288), uint32] */;
    %1055 = reshape(%1053, newshape=[99, 1]) /* ty=Tensor[(99, 1), float32] */;
    %1056 = @func_12407(%1054, %1055) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(2288), uint32], Tensor[(2, 3, 6), uint64], Tensor[(99, 1), float32], Tensor[(36), uint64]) */;
    %1057 = cast(meta[relay.Constant][76] /* ty=Tensor[(2288), uint32] */, dtype="uint32") /* ty=Tensor[(2288), uint32] */;
    %1058 = reshape(%1057, newshape=[16, 13, 11]) /* ty=Tensor[(16, 13, 11), uint32] */;
    %1059 = @func_1358(%1058) /* ty=(Tensor[(13, 3, 13), float64], Tensor[(507), float64], Tensor[(3, 13, 14), bool], Tensor[(7, 6), float32], Tensor[(546), float32], Tensor[(6, ?, ?), float32], Tensor[(6), float32], Tensor[(13, 3, 13), float64], Tensor[(16, 13, 11), float64]) */;
    %1060 = %1051.0;
    %1061 = %1056.5;
    %1062 = @func_11944() /* ty=Tensor[(8, 8, 1), float64] */;
    %1063 = %1059.2;
    %1064 = @func_13130() /* ty=Tensor[(8, 8, 1), float64] */;
    (%1060, %1061, meta[relay.Constant][76] /* ty=Tensor[(2288), uint32] */, %var_14750, %1062, %1063, %1064)
  };
  %1065(%var_14787) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(36), uint64], Tensor[(2288), uint32], Tensor[(99), float32], Tensor[(8, 8, 1), float64], Tensor[(3, 13, 14), bool], Tensor[(8, 8, 1), float64]) */
}

def @func_8352(%var_8343: Tensor[(12, 3, 15), int32], %var_8344: Tensor[(12, 3, 15), int32]) -> (Tensor[(12, 3, 15), int32],) {
  %1066 = cast(%var_8344, dtype="int32") /* ty=Tensor[(12, 3, 15), int32] */;
  %1067 = shape_of(%var_8343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1068 = cast(%var_8343, dtype="int32") /* ty=Tensor[(12, 3, 15), int32] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1070 = left_shift(%1068, %1069) /* ty=Tensor[(12, 3, 15), int32] */;
  (%1070,)
}

def @func_10707(%var_10705: Tensor[(99), float32], %var_10706: Tensor[(36), uint64]) -> (Tensor[(8, 8, 1), float64], Tensor[(11, ?, 9), float32], Tensor[(99), float32], Tensor[(2, 3, 6), uint64], Tensor[(36), uint64]) {
  %1081 = fn (%var_10682: Tensor[(99), float32], %var_10685: Tensor[(36), uint64]) -> (Tensor[(8, 8, 1), float64], Tensor[(11, ?, 9), float32], Tensor[(99), float32], Tensor[(2, 3, 6), uint64], Tensor[(36), uint64]) {
    %1071 = cast(%var_10682, dtype="float32") /* ty=Tensor[(99), float32] */;
    %1072 = reshape(%1071, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float32] */;
    %1073 = cast(%var_10685, dtype="uint64") /* ty=Tensor[(36), uint64] */;
    %1074 = cast(%var_10685, dtype="uint64") /* ty=Tensor[(36), uint64] */;
    %1075 = reshape(%1073, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), uint64] */;
    %1076 = reshape(%1074, newshape=[2, 3, 6]) /* ty=Tensor[(2, 3, 6), uint64] */;
    %1077 = @func_3994(%1075, %1076) /* ty=(Tensor[(2, 3, 6), uint64],) */;
    %1078 = @func_10311() /* ty=Tensor[(8, 8, 1), float64] */;
    %1079 = @func_3883(%1072) /* ty=Tensor[(11, ?, 9), float32] */;
    %1080 = %1077.0;
    (%1078, %1079, %var_10682, %1080, %var_10685)
  };
  %1081(%var_10705, %var_10706) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(11, ?, 9), float32], Tensor[(99), float32], Tensor[(2, 3, 6), uint64], Tensor[(36), uint64]) */
}

def @func_14120(%var_14061: int64, %var_14090: Tensor[(252), float64], %var_14115: Tensor[(99), float32]) -> (Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(13, 3, 13), float64], Tensor[(507), float64], int64, Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(540), int32], Tensor[(99), float32]) {
  %1082 = @func_12826() /* ty=(Tensor[(8, 8, 1), float64],) */;
  %1083 = cast(meta[relay.Constant][77] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %1084 = cast(%var_14061, dtype="int64") /* ty=int64 */;
  %1085 = cast(meta[relay.Constant][77] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %1086 = reshape(%1083, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %1087 = reshape(%1084, newshape=[]) /* ty=int64 */;
  %1088 = reshape(%1085, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), float64] */;
  %1089 = @func_5342(%1086, %1087, %1088) /* ty=(Tensor[(507), float64], Tensor[(2, 4, 15), int64], int64, Tensor[(120, 1), int64], Tensor[(3, 16, 99), int8], Tensor[(11, 9), float32], Tensor[(3, 16, 99), float32], Tensor[(13, 3, 13), float64]) */;
  %1090 = cast(%var_14061, dtype="float64") /* ty=float64 */;
  %1091 = cast(%var_14090, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1092 = reshape(%1090, newshape=[]) /* ty=float64 */;
  %1093 = reshape(%1091, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %1094 = cast(meta[relay.Constant][77] /* ty=Tensor[(507), float64] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %1095 = cast(%var_14115, dtype="float32") /* ty=Tensor[(99), float32] */;
  %1096 = reshape(%1094, newshape=[507]) /* ty=Tensor[(507), float64] */;
  %1097 = reshape(%1095, newshape=[99]) /* ty=Tensor[(99), float32] */;
  %1098 = @func_13414(%1096, %1097) /* ty=(Tensor[(3, 180), uint64], Tensor[(540), int32], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(8, 8, 1), float64], Tensor[(12, ?, 2), float32], Tensor[(12, 7, 2), bool], Tensor[(10, 16, 12), float32], Tensor[(507), float64], Tensor[(99), float32], Tensor[(135), bool]) */;
  %1099 = %1082.0;
  %1100 = @func_10641() /* ty=Tensor[(8, 8, 1), float64] */;
  %1101 = %1089.7;
  %1102 = @func_3641(%1092, %1093) /* ty=Tensor[(7, 9, 4), float64] */;
  %1103 = %1098.1;
  (%1099, %1100, %1101, meta[relay.Constant][77] /* ty=Tensor[(507), float64] */, %var_14061, %1102, %var_14090, %1103, %var_14115)
}

def @func_8113(%var_8111: Tensor[(16, 1, 10), float64], %var_8112: Tensor[(99), float32]) -> (Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) {
  @func_8109(%var_8111, %var_8112) /* ty=(Tensor[(16, 1, 10), float64], Tensor[(2288), uint32], int64, Tensor[(120), int64], Tensor[(99), float32]) */
}

def @func_11068() -> (Tensor[(8, 8, 1), float64],) {
  @func_11066() /* ty=(Tensor[(8, 8, 1), float64],) */
}

def @func_11367(%var_11365: Tensor[(40), float64], %var_11366: Tensor[(70), uint32]) -> (Tensor[(8, 8, 1), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70), uint32]) {
  %1112 = fn (%var_11349: Tensor[(40), float64], %var_11350: Tensor[(70), uint32]) -> (Tensor[(8, 8, 1), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70), uint32]) {
    %1104 = @func_11246() /* ty=(Tensor[(8, 8, 1), float64],) */;
    %1105 = cast(%var_11349, dtype="float64") /* ty=Tensor[(40), float64] */;
    %1106 = cast(%var_11350, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %1107 = reshape(%1105, newshape=[40]) /* ty=Tensor[(40), float64] */;
    %1108 = reshape(%1106, newshape=[70]) /* ty=Tensor[(70), uint32] */;
    %1109 = @func_10987(%1107, %1108) /* ty=(Tensor[(8, 8, 1), float64], uint32, Tensor[(14, 5, ?), bool], Tensor[(13, 3, 13), float64], Tensor[(2304), float32], Tensor[(42), float32], Tensor[(120, 1), int64], Tensor[(8, 8, 1), float64], Tensor[(8, 5, ?), bool], Tensor[(12, 2, 10), int8], Tensor[(240), int8]) */;
    %1110 = %1104.0;
    %1111 = %1109.6;
    (%1110, %1111, %var_11349, %var_11350)
  };
  %1112(%var_11365, %var_11366) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(120, 1), int64], Tensor[(40), float64], Tensor[(70), uint32]) */
}

def @func_9859() -> Tensor[(8, 8, 1), float64] {
  @func_9857() /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_14302() -> Tensor[(99), float32] {
  @func_12550() /* ty=Tensor[(99), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 0, found 1

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_128 = relay.var("var_128", dtype = "float64", shape = (13, 3, 13))#candidate|128|(13, 3, 13)|var|float64
uop_129 = relay.exp(var_128.astype('float64')) # shape=(13, 3, 13)
output = uop_129
output2 = uop_129
func_142 = relay.Function([var_128,], output)
mod['func_142'] = func_142
mod = relay.transform.InferType()(mod)
var_143 = relay.var("var_143", dtype = "float64", shape = (13, 3, 13))#candidate|143|(13, 3, 13)|var|float64
output = func_142(var_143)
func_144 = relay.Function([var_143], output)
mutated_mod['func_144'] = func_144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_731 = relay.var("var_731", dtype = "float32", shape = (6, 1, 1))#candidate|731|(6, 1, 1)|var|float32
uop_732 = relay.acos(var_731.astype('float32')) # shape=(6, 1, 1)
uop_734 = relay.atanh(uop_732.astype('float32')) # shape=(6, 1, 1)
bop_736 = relay.divide(uop_734.astype('float32'), relay.reshape(uop_732.astype('float32'), relay.shape_of(uop_734))) # shape=(6, 1, 1)
func_142_call = mod.get_global_var('func_142')
func_144_call = mutated_mod.get_global_var('func_144')
const_749 = relay.const([-6.145489,1.197446,8.198523,-9.130322,6.734757,-2.558161,7.362393,-0.617922,-0.770078,1.665542,-3.932614,-1.651767,8.145047,1.185615,8.262557,-4.577361,-1.130213,4.613326,-3.346639,-9.256162,-0.162995,6.637904,4.086372,-1.452723,5.771290,8.083289,4.161924,-6.993881,2.326128,-6.988625,-3.234947,-5.205855,-0.757954,-5.301829,5.927116,-9.495787,6.199317,0.947581,3.349145,4.700891,4.953640,-2.601518,-6.352801,3.314868,1.877486,0.594780,-4.960663,-4.497319,5.335527,5.281504,7.617949,-1.391008,0.184364,-9.645338,-0.490765,-3.178283,-9.135760,-9.925394,9.473694,-1.195177,6.950090,4.157548,2.346938,-5.557345,-8.562834,4.253878,1.578861,2.033170,7.072845,-3.103239,0.741749,-9.087706,3.786487,-5.874781,-5.182680,6.468196,-0.821862,-8.307600,-2.312336,-7.649649,-2.616846,0.647106,-8.816646,2.378612,-2.895383,9.007764,-1.321588,5.263431,-2.593114,-2.763816,-0.147291,4.404694,-3.788882,-9.590213,-8.289491,-4.985616,-4.085385,8.795247,-4.579510,-4.492158,-5.670512,-0.119876,9.438913,-1.677129,8.500813,6.572929,9.854645,5.857922,-4.033373,-8.803768,-8.123771,1.972654,-9.105548,6.132803,2.169084,3.620333,5.196950,-8.752096,9.906768,9.507914,-2.031820,-0.467779,3.735979,0.747653,7.840593,-9.082575,-1.194687,-8.344004,-0.526272,3.046210,-1.864722,2.680413,-8.141655,-2.814621,7.472517,4.883395,-3.742238,5.031860,7.021827,4.426447,-9.816365,-9.766092,-2.815817,-5.555656,6.143577,-9.804303,-5.800286,0.760034,-8.379651,4.536100,8.290961,7.070655,-7.110586,4.806055,9.097179,8.903899,4.231045,7.822227,-5.595558,-4.337053,9.094385,2.341442,8.420901,4.452906,7.333344,3.713783,8.075147,-4.176235,1.243206,9.060762,7.518422,-8.267472,-3.498312,-2.620658,9.359056,-0.799889,3.657450,7.317456,9.516806,-6.177019,2.971315,6.378353,-3.013513,-2.583508,-4.640146,5.830620,-3.722684,-9.779221,5.952565,-1.222902,1.033407,0.178608,-9.585803,3.802471,1.181510,-4.501249,4.316187,2.607319,-0.605002,7.323207,6.351799,-7.641841,6.375764,9.721641,2.829859,5.942059,-5.577435,0.835505,2.758359,-1.486730,0.554457,5.384461,4.394511,-7.651957,8.476906,-5.348241,-4.451516,-4.698625,6.838865,-8.130542,2.402201,9.443853,0.172396,1.671086,-6.338569,3.193003,-4.167435,-9.175046,-4.130425,7.240862,9.372081,-6.246699,-1.006966,9.836122,-0.728311,-4.242309,5.896969,-4.167334,6.450618,-6.680592,7.614657,8.117478,-2.360534,4.096818,-9.929154,-5.848275,-4.295032,-1.133924,-7.914251,-0.044848,4.611720,-6.640395,9.583455,1.402231,-5.617216,-3.082697,-7.059480,-8.966190,5.046270,5.956764,-6.084052,9.111769,-3.793890,-9.482403,2.249758,-6.278074,2.794969,-1.469413,0.631008,1.349092,7.479813,8.865378,7.288625,-2.599486,-6.454091,9.846055,-1.305943,5.476216,-6.239894,2.697181,6.335790,-8.273483,-2.241595,9.940059,5.504186,-6.544508,-2.343670,-5.948537,1.357106,-2.448466,-2.316171,-0.128850,7.127581,9.412286,1.340981,1.068377,-5.962049,-3.746522,-8.141893,-7.810651,-0.895429,-5.481117,6.666497,9.937416,-0.374563,-9.199918,0.773195,0.805911,-8.184030,-3.817876,7.460707,-2.591609,8.962781,-6.590018,-3.614384,6.754027,3.211713,3.404133,-6.827556,7.168298,4.548501,2.597880,3.810817,7.773453,-2.230357,4.851962,9.088546,6.642814,-5.647848,7.987202,7.940525,-2.029030,-7.234899,2.495440,-8.167099,9.359698,-3.005640,-3.952211,2.674013,7.876741,8.865316,7.681675,9.431792,9.006073,3.557217,-6.271480,-3.774201,2.189299,3.321120,2.916847,-0.577562,2.396648,-5.384483,-2.171692,6.898832,1.992896,-7.699133,1.173959,2.631342,-7.222210,9.517507,4.967131,2.001746,7.841348,4.244639,-5.764027,5.660144,-1.163277,6.864824,-0.662419,5.328250,9.769932,-5.607822,4.330531,8.643769,-1.517486,-9.077830,-4.445124,5.143867,-8.344203,9.037075,-5.702187,-4.916388,-8.815537,0.438700,-0.322103,-0.755219,-7.048853,3.716982,-1.777849,5.092011,1.482910,4.941604,9.776083,7.417598,8.561775,-0.685043,-8.136561,0.537486,-9.128682,5.536450,8.558866,-7.113481,-3.789877,8.918908,2.362746,-1.322992,-8.029246,-0.426839,-6.116684,-0.819334,-7.147781,2.378123,6.095025,8.445592,1.432442,2.257927,-4.921638,-7.839966,4.946997,-0.905948,2.982122,8.021483,-0.873273,8.499232,-2.594029,-0.478013,5.684629,4.123121,-5.513587,-3.817849,5.470887,-5.568697,-4.271144,-6.650058,-9.348852,-5.030334,0.284812,-4.854697,0.217222,-4.845865,2.908753,4.678511,-6.347966,5.870533,5.492856,-9.643897,7.780742,0.656012,-8.734623,5.851418,-7.215280,-5.990232,-6.771366,9.278683,-9.312872,6.913276,-5.933671,-9.131972,2.845525,-1.680898,-5.175579,7.710634,8.885479,6.339173,-9.099470,4.424443,-3.578255,3.313258,-1.654118,-1.592659,-9.625300,-9.940948,-4.176571,-1.876352,-1.464680,1.720047,4.530334,4.566528,4.710935,-8.446697,2.359354,-8.556748,0.532076,-7.531243,-8.773051,2.690346,-8.413572,3.455716,-0.126854,-5.320532,-2.010117,2.075907,-8.189508,9.716988,5.024737,-4.538503,2.770424,-0.950389,-3.149565,-9.373131,-9.443596,4.946587,4.610064,6.265971,-0.211472,-9.857772], dtype = "float64")#candidate|749|(507,)|const|float64
call_748 = func_142_call(relay.reshape(const_749.astype('float64'), [13, 3, 13]))
call_750 = func_142_call(relay.reshape(const_749.astype('float64'), [13, 3, 13]))
output = relay.Tuple([bop_736,call_748,const_749,])
output2 = relay.Tuple([bop_736,call_750,const_749,])
func_755 = relay.Function([var_731,], output)
mod['func_755'] = func_755
mod = relay.transform.InferType()(mod)
var_756 = relay.var("var_756", dtype = "float32", shape = (6, 1, 1))#candidate|756|(6, 1, 1)|var|float32
output = func_755(var_756)
func_757 = relay.Function([var_756], output)
mutated_mod['func_757'] = func_757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1196 = relay.var("var_1196", dtype = "float32", shape = (3, 1, 14))#candidate|1196|(3, 1, 14)|var|float32
var_1197 = relay.var("var_1197", dtype = "float32", shape = (3, 13, 14))#candidate|1197|(3, 13, 14)|var|float32
bop_1198 = relay.greater(var_1196.astype('bool'), var_1197.astype('bool')) # shape=(3, 13, 14)
func_142_call = mod.get_global_var('func_142')
func_144_call = mutated_mod.get_global_var('func_144')
const_1208 = relay.const([0.715264,-5.132338,-0.463610,-5.305769,-0.691819,5.277333,7.426023,-4.386156,-4.904150,-7.075338,-9.850516,9.677949,7.746435,-0.290452,5.655109,-5.948402,-7.115476,-5.010768,9.343558,-3.625276,-9.068264,5.895455,7.155140,-7.608408,9.851514,-3.808993,9.066763,6.365582,0.710887,-9.819842,4.142072,5.306253,2.869804,-5.274836,-4.628984,-4.019754,1.129716,-7.631599,5.850092,-1.832705,4.274078,-7.827138,-3.800468,6.644766,8.372179,-5.376501,-8.962978,-0.917899,3.767015,-5.315959,-2.431163,-0.678260,7.918922,-3.753418,-7.941461,0.394104,5.406252,-8.469836,9.851822,4.840586,4.751389,4.034292,8.052566,7.390335,-6.813954,-8.223600,-9.983044,-6.616017,1.610825,-5.385717,4.370516,-3.769443,-7.973053,-0.238535,-7.067081,-2.791099,-5.023907,-2.780379,-7.093423,-3.047085,0.644374,8.464862,-2.234256,5.149572,-7.978618,1.669105,7.432328,-9.427305,-1.881692,6.806166,9.752144,7.971583,3.883570,5.395597,9.116647,7.775590,9.276827,7.296657,-7.913235,0.624926,-3.660145,2.020118,-8.508335,4.479233,-0.379314,-1.674975,8.557729,6.461869,5.996361,-6.680143,4.816965,8.838646,-4.073491,-6.240414,-1.286184,7.129332,-8.130696,-2.128236,-3.151021,6.680781,3.222245,-0.170908,6.526069,5.098353,5.837348,-9.283372,4.949875,5.453803,-9.764828,4.606117,1.323379,8.057156,7.028195,4.790134,-4.210927,-4.946109,-0.699755,-6.313086,3.554670,-8.371439,8.667893,5.097900,-9.341411,-3.070439,-1.456331,5.810992,-1.496114,9.311696,3.330765,6.563423,4.959651,5.279083,0.044859,-2.127676,6.137267,5.400791,2.421533,-1.803886,4.768163,-3.044411,-2.561469,2.587423,-5.588015,-8.891314,6.525658,9.264965,6.841540,-5.950719,-9.763872,1.158522,8.854718,-1.164327,6.168467,9.581277,7.339576,-4.429493,5.054795,-0.498026,-5.557059,6.086303,2.646471,8.984384,7.505012,5.428560,-4.679543,-2.468009,7.627216,-8.765646,4.543852,8.081803,3.418947,-9.507970,2.605679,-4.546465,6.099480,-3.735760,3.090909,6.984380,4.999101,-3.210379,-5.913479,-7.140784,-8.843670,-7.911804,-4.488215,-7.373282,-5.133445,-1.544276,-7.908705,5.090317,2.539964,-8.747615,9.246188,3.965566,-8.092149,-1.040888,-9.903786,-2.024725,7.732758,-4.292256,-1.215341,8.776798,0.005437,-4.492689,8.818197,7.341615,8.542551,3.233748,-9.282049,-3.689762,-4.081222,9.813850,3.570807,5.765820,-5.328720,-5.020728,8.473458,6.256234,2.663579,-7.294025,-9.340308,1.737799,4.675291,-8.751608,-4.346518,-6.744044,-2.675586,5.791217,0.989709,-2.506846,8.456689,-7.248135,5.811613,1.924304,7.121988,2.896593,-9.277044,-1.705057,7.976435,8.436548,3.940565,-4.753223,4.706185,1.109571,3.932306,-1.840196,-1.687433,1.729176,9.744531,-7.401657,-6.348388,-5.862167,8.162066,-2.704193,8.096938,-3.548495,2.402733,-8.553400,-4.437512,5.607001,-2.541050,-5.564552,-0.999780,-0.943372,9.120773,-7.959866,-7.936173,-6.136952,8.141423,-2.780861,-3.783565,9.750810,9.698293,-7.072256,8.865552,4.814370,2.135209,-0.780047,1.212294,8.348582,-4.686788,-9.389795,-6.893936,-0.725036,9.559835,1.222055,0.344934,0.602896,-8.217513,-4.180775,9.422183,3.874741,-9.608586,-6.604133,-7.802840,-0.347706,-6.207660,2.908001,2.815492,-1.337515,-0.554744,-5.089295,4.979508,2.246197,3.037969,2.727054,4.434476,0.671207,9.521023,-8.284458,-0.831437,-7.631818,5.417261,6.873232,0.023367,-0.155531,4.317618,1.609984,-7.669557,4.235105,-8.587054,3.165841,7.261480,5.019828,-3.969548,1.368473,-1.084011,0.199085,1.534427,-5.200950,0.352479,8.127371,7.387619,3.357415,7.313902,8.201407,5.507181,7.427820,-7.660587,1.340127,-2.722474,8.760380,-2.961865,8.817105,0.087088,-7.268442,-5.051816,-9.749659,-7.438395,8.968472,-3.383530,-8.662452,2.411732,-7.798144,-2.002249,8.561825,-0.813206,-0.316940,4.272536,0.832159,8.518420,0.601308,2.460917,-2.209070,6.195256,6.103878,-4.056665,-6.259951,8.800867,0.543692,-5.531504,9.582573,5.886089,-0.302063,0.339102,-1.787897,2.134972,-1.432230,5.307832,4.726687,-6.435337,-9.222666,-2.255592,2.241352,0.971458,9.857601,0.003560,4.769935,-4.198601,5.741656,3.772478,6.302609,-5.828706,7.202730,-8.910460,-8.552279,0.666379,0.146096,2.394174,4.550092,-2.587859,6.138230,6.888843,-9.531425,-2.807203,9.692823,0.815920,-7.300682,-3.105869,4.564095,-3.112871,-9.565560,-8.375203,5.693280,-0.636840,5.243479,-1.876898,-7.765193,8.591200,5.947412,-9.891918,8.181359,7.295538,0.063540,7.474356,-9.123350,8.173359,0.355695,2.223223,9.447630,2.965597,-3.763080,2.566042,-8.880544,1.865101,-3.126149,-3.817763,-8.154269,-8.766603,-1.413773,-8.032988,5.427364,3.850269,-7.016595,-4.341113,-9.292102,-5.955611,5.170233,4.084923,-2.957282,7.084802,-5.301223,-7.885044,-2.079298,4.442986,-1.500219,2.279487,1.195830,-3.754339,6.796419,7.457964,-8.095165,-4.948096,-9.182121,0.965253,7.514025,8.631189,8.977776,-8.198854,-8.102933,-7.254972,1.590281,8.320111,-0.875820,-4.895913,-8.010405,9.001509,9.371927,-5.710363,4.877408,-1.602954,-6.286014,-5.723213,3.478137,5.292579,-4.369130,-6.710064], dtype = "float64")#candidate|1208|(507,)|const|float64
call_1207 = func_142_call(relay.reshape(const_1208.astype('float64'), [13, 3, 13]))
call_1209 = func_142_call(relay.reshape(const_1208.astype('float64'), [13, 3, 13]))
output = relay.Tuple([bop_1198,call_1207,const_1208,])
output2 = relay.Tuple([bop_1198,call_1209,const_1208,])
func_1229 = relay.Function([var_1196,var_1197,], output)
mod['func_1229'] = func_1229
mod = relay.transform.InferType()(mod)
var_1230 = relay.var("var_1230", dtype = "float32", shape = (3, 1, 14))#candidate|1230|(3, 1, 14)|var|float32
var_1231 = relay.var("var_1231", dtype = "float32", shape = (3, 13, 14))#candidate|1231|(3, 13, 14)|var|float32
output = func_1229(var_1230,var_1231,)
func_1232 = relay.Function([var_1230,var_1231,], output)
mutated_mod['func_1232'] = func_1232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1283 = relay.var("var_1283", dtype = "uint32", shape = (16, 13, 11))#candidate|1283|(16, 13, 11)|var|uint32
const_1284 = relay.const([[[-1,8,10,-1,-6,-8,2,-5,-8,-4,-7],[10,-2,-9,-6,-4,8,8,4,1,-8,7],[4,-4,-8,5,1,-9,4,7,1,-6,3],[-8,-5,1,10,1,9,-8,6,-4,1,-2],[-1,6,2,2,-5,-6,-9,-2,-4,-3,-2],[10,6,-7,-7,-1,-9,10,-8,1,-5,4],[4,3,2,-3,-8,-4,-8,1,-9,-4,1],[2,-8,-5,-9,-7,6,3,7,-4,-2,9],[-7,-5,-5,5,-5,-5,9,6,-8,1,4],[-4,3,-7,-6,4,1,10,-10,-1,-3,8],[6,-9,8,10,7,4,-4,4,-1,5,-8],[5,-1,3,-5,-5,-6,5,6,7,-3,-5],[3,-7,8,4,7,5,10,-4,-10,3,-7]],[[1,8,-9,8,8,-3,-6,6,-8,3,-5],[-5,5,-9,-1,-9,-10,-10,-7,-2,10,7],[6,-5,-10,-2,-9,-5,-10,5,1,-6,10],[-1,-4,10,-8,-7,-2,-1,-3,9,-9,8],[-9,3,-4,10,-6,-1,-3,2,9,8,-6],[-6,-3,2,-9,3,1,5,-6,-3,7,-3],[-4,6,8,5,-4,-2,-5,-10,3,10,9],[3,-4,10,-10,-6,7,6,-5,-9,1,5],[-6,-10,-8,4,10,5,-6,7,-7,8,4],[-1,-4,-7,2,9,-7,-6,1,-4,-1,-5],[5,1,-7,-8,-3,-10,-9,-2,-9,8,1],[-2,-8,-1,7,-6,-10,-6,7,5,-1,9],[-2,-1,-3,6,5,-4,4,1,-5,-6,5]],[[-9,-4,-4,-1,-6,-5,3,-6,-2,7,-3],[3,-2,1,3,-10,10,-9,10,1,-5,5],[-4,7,3,2,-4,-9,5,-4,10,1,7],[-6,9,5,4,2,-2,-6,2,10,-4,2],[-1,-6,-2,10,-6,-10,-4,1,-4,7,-3],[-8,10,-2,-7,4,5,-10,6,8,-8,6],[-3,1,-1,3,1,10,-1,8,1,9,-1],[-4,-1,-8,1,3,3,3,-4,10,10,-9],[-6,-1,6,-2,-1,3,-1,10,-4,-5,-7],[-1,-5,-6,-2,-7,9,-5,10,-3,6,-10],[4,-8,-3,7,3,10,-10,-2,1,-1,9],[-7,-3,-9,-6,-7,-9,9,10,-1,-6,1],[-7,-8,-4,9,5,2,6,-1,10,-3,3]],[[-2,-9,-3,4,-1,-9,-7,10,-6,-4,4],[-10,4,-1,1,-10,6,-6,4,-5,10,6],[6,-5,-2,1,-1,-1,10,-2,5,-4,3],[1,9,-4,9,8,7,-8,-4,-5,9,-10],[7,2,5,-4,-5,6,1,4,-2,-5,-8],[8,-1,7,-6,-9,-10,-6,6,-5,-4,-6],[1,-5,4,1,-1,6,-1,-2,-1,-3,-1],[-7,-8,-9,-3,7,8,-8,2,-6,10,4],[4,-10,8,-7,-2,-7,7,3,2,-6,2],[5,-3,8,1,-5,-10,2,-10,-7,3,3],[2,4,7,-6,-3,-4,2,-10,-6,9,-3],[1,2,-6,-4,7,-8,-1,10,-6,10,9],[-4,4,7,-3,4,4,4,1,2,5,10]],[[4,5,2,2,7,4,5,3,-2,3,-5],[7,-6,-5,-6,9,6,10,1,-1,7,8],[-7,-9,1,4,-1,-3,1,-10,-4,8,4],[8,-1,4,4,-1,4,-7,-4,-1,5,3],[-6,2,-1,2,10,3,-8,-9,-8,3,-10],[6,-5,-10,3,-6,-4,10,9,-3,1,10],[2,4,-10,9,-7,-6,4,-3,-9,7,-7],[1,9,7,-1,-1,-6,4,-4,-8,9,-5],[1,-9,7,6,-3,10,-4,-1,-3,9,-1],[-5,-5,6,-10,7,9,4,2,-9,-6,4],[-5,-4,-1,-10,-7,5,-10,5,2,-3,-8],[6,-6,2,4,-3,-2,9,-1,4,-6,9],[-2,7,-6,6,7,1,-6,5,-10,-9,5]],[[-8,9,-4,2,10,-8,9,-7,-8,-4,-8],[-4,10,-1,-10,9,5,-9,4,4,7,-10],[6,9,4,4,4,4,4,5,4,-2,-3],[-1,4,10,9,-8,-9,-10,-2,4,-2,2],[-4,10,10,-10,-2,-9,-8,10,10,4,-4],[-4,-1,-4,7,-1,-4,2,2,8,-4,-2],[5,10,9,7,-10,-2,9,6,-6,10,7],[-4,5,6,-9,2,10,3,7,5,-1,8],[6,10,10,-2,2,-9,7,6,4,4,-9],[-7,7,4,10,-9,-8,8,1,-7,5,-1],[1,-10,5,-3,3,1,-2,9,8,8,-9],[6,-4,4,-10,2,2,8,-10,-2,-1,-2],[-9,-4,-10,-5,-9,-8,3,-4,7,-6,-2]],[[6,7,4,2,-10,-8,8,-9,7,-3,2],[-1,8,-4,6,-1,7,-2,-6,8,5,-2],[-4,-5,10,-9,3,9,-7,8,-9,8,4],[7,-6,10,1,-4,5,-7,7,-7,6,-4],[1,8,8,5,8,4,7,5,5,2,-9],[5,4,8,8,-5,-1,-10,-9,-3,-7,10],[2,-3,-5,9,3,-9,5,-9,9,-3,-6],[-9,8,-1,10,2,-7,1,9,3,5,2],[-1,-5,4,-1,3,-5,-4,9,-8,-8,-5],[4,-8,-7,-10,2,-10,2,-9,4,2,4],[-4,2,3,4,10,1,6,10,4,9,-1],[8,3,3,-9,-3,-9,6,6,7,9,-3],[-5,-5,9,3,-5,1,2,5,-10,-6,-5]],[[10,-2,9,-4,-8,-7,7,7,7,10,-9],[-9,-4,3,7,-4,-9,-3,-8,3,7,-1],[8,-4,-9,1,7,-2,-9,4,-3,1,5],[-2,-1,10,-5,-2,-6,-7,3,5,-8,-4],[2,-2,-4,-10,-9,1,7,7,2,-6,8],[-7,1,-2,9,-5,1,7,-10,-6,9,-8],[1,-2,-7,-5,-2,-7,-2,-10,-2,-3,2],[-10,-7,1,4,-4,-7,9,-5,-10,-9,-9],[-5,-4,-4,1,5,6,6,9,7,6,-2],[-9,-1,3,7,3,-1,-10,-1,8,-2,1],[-4,-9,-6,6,-2,-4,-5,5,10,-5,-4],[-5,7,3,10,7,-4,8,3,-7,-2,-2],[-1,10,-6,10,1,4,-9,-5,-9,-6,9]],[[3,9,-9,-5,7,-7,-5,1,10,1,7],[-9,2,7,10,-1,7,5,10,-6,-3,-3],[3,-6,-5,7,8,6,-5,-7,8,10,-9],[-3,6,-5,10,9,-3,8,-3,-1,4,-2],[-10,-8,8,-6,-4,5,8,-10,1,4,6],[1,-1,-2,-2,6,5,10,1,-10,7,-6],[9,-3,-5,4,3,3,-10,8,1,-3,5],[10,1,2,9,-3,2,-7,-5,10,-6,1],[-8,-5,-3,5,-4,-6,9,3,6,4,-3],[6,-4,5,9,-6,-5,6,-1,-5,-8,-8],[-9,-2,-8,-2,9,-1,4,3,-4,-2,9],[-6,-9,-5,-2,-3,-5,-5,-3,-6,-4,-5],[2,4,6,4,4,-8,-3,-9,8,-5,6]],[[8,6,2,-10,8,7,-8,8,10,4,-4],[-1,-1,6,3,-7,-3,-6,4,-4,-8,6],[1,9,-3,-1,9,1,-2,7,9,8,-8],[-7,-8,7,-1,3,-7,5,-5,-7,8,-4],[5,6,7,5,8,-10,-4,-4,1,9,8],[-6,-8,-9,2,-9,-7,10,10,-1,-9,5],[-9,-10,-4,8,3,-7,8,-9,1,9,2],[-4,-7,1,10,-3,2,-1,2,-10,-3,6],[-3,4,-3,-4,4,-9,4,9,3,5,5],[2,3,-2,9,10,5,7,-8,-4,10,-5],[3,-10,-8,-2,1,2,-5,2,4,-7,-7],[6,-7,10,-6,-4,1,-7,-9,3,4,3],[10,7,-9,-3,-1,4,1,-5,-10,-10,-3]],[[1,-8,9,10,3,-7,-5,5,3,-7,3],[-2,9,-7,5,5,-9,2,7,10,-3,-2],[-5,6,-2,4,5,4,-8,-2,-9,8,-2],[-6,2,10,-4,6,9,7,7,7,-9,-3],[-9,9,5,-8,10,7,1,-9,-10,-4,7],[10,-5,3,5,-3,4,-4,3,-6,-3,5],[10,9,-9,1,-6,-9,6,-7,1,-7,3],[-1,-1,-9,10,10,-8,-2,-2,4,-3,-9],[8,-2,-5,3,10,6,1,-8,7,-2,7],[-5,-8,6,-3,-10,10,-9,1,-5,-6,-2],[4,9,-8,-10,7,-3,-4,4,-4,10,8],[-1,1,-2,6,-5,6,6,7,8,-1,6],[-9,-5,-7,-9,6,6,5,-8,1,-5,-7]],[[8,7,5,6,5,6,-10,-7,-9,-8,-2],[-10,8,-4,-8,-2,-5,2,-6,5,-8,3],[5,-7,-5,-1,2,9,-5,-2,6,-9,2],[-4,2,2,-10,9,7,4,-3,-10,8,-6],[4,6,-10,2,-8,4,6,1,-3,3,-6],[-1,-4,5,-4,-7,-7,-10,-9,10,-9,-7],[-10,-10,9,-2,-4,6,-8,2,-10,-10,-1],[5,-3,7,-1,6,5,6,-3,10,3,-5],[-7,-1,-5,5,9,6,-8,3,-9,3,-7],[9,7,-7,-5,9,1,-10,-1,2,6,-2],[-3,4,-6,-8,-5,-4,8,3,8,-7,4],[-5,2,-4,7,5,-5,-2,5,5,-8,-6],[-4,2,-3,-1,6,-3,-3,-9,5,10,2]],[[-10,-5,10,-5,10,5,1,10,-6,-8,-7],[6,-3,1,-2,7,-1,-8,-6,7,-4,9],[-2,-7,-9,9,-8,-3,7,-6,6,-10,8],[8,-3,-3,9,4,2,4,-10,7,-8,-1],[-4,-4,2,7,-4,-5,2,-7,1,4,5],[-7,1,-5,4,-5,-2,-9,5,-6,1,-7],[1,-3,5,6,-9,7,6,-10,7,-1,4],[-5,5,9,5,8,10,-8,3,7,8,-2],[7,9,7,6,9,2,5,10,7,-7,1],[2,-3,4,6,-10,-7,-8,8,-8,7,2],[1,-3,-2,-5,-6,-5,-9,-10,6,-9,-8],[7,-3,4,-7,10,-10,8,3,-3,4,8],[8,8,10,6,4,-6,10,-7,-8,-5,-1]],[[-10,-6,-3,-4,4,1,-7,1,10,9,-4],[-6,6,-7,-4,-3,1,9,2,7,7,-1],[-10,8,-8,6,7,-1,7,3,-6,-6,-10],[1,10,9,7,-2,2,6,10,-2,-5,-10],[-2,-4,1,-3,6,-4,-3,6,5,-6,-9],[-7,-4,5,-3,-4,8,-1,-7,-10,10,9],[-9,1,2,-10,-10,1,-5,5,-9,-3,6],[-6,8,-8,-9,2,-4,1,2,9,8,8],[-6,3,6,2,10,7,-5,-8,3,-2,5],[-3,5,-1,-3,8,5,-7,-7,-3,9,7],[-4,-8,-5,4,-6,-8,-10,-5,9,-4,-5],[5,2,-9,7,-4,-10,-10,7,-6,-2,5],[5,-6,-3,9,1,-2,-4,-3,8,4,2]],[[-5,-7,-1,7,-10,7,-7,4,10,1,-8],[2,6,9,-8,-3,9,5,-8,7,5,3],[4,-9,5,-6,-5,-4,-8,10,-3,10,2],[3,8,-7,4,4,-9,6,-4,-7,-3,-1],[-6,-7,-3,-3,2,6,-8,10,5,1,10],[-8,-10,-5,-5,-3,5,-10,-9,-5,10,9],[-4,-9,-7,-1,-8,3,-3,10,-3,9,-3],[10,5,-10,-5,-3,10,-6,-4,3,-7,1],[-5,7,4,-9,8,-8,3,8,-9,-6,6],[-7,10,-2,8,-6,4,10,9,4,9,10],[10,-1,-10,-9,1,-7,-7,8,4,-8,-7],[-6,-10,-6,10,2,-6,2,-1,2,-6,3],[-10,9,-6,2,-7,-2,9,-5,-3,-1,-1]],[[-5,-4,4,-8,5,9,1,3,1,-4,-7],[10,-1,1,2,-5,-2,-3,-10,5,-10,1],[2,-7,-4,-7,-3,2,-1,-6,-5,-9,-9],[-5,-5,4,5,-9,9,-1,8,-3,6,-2],[10,-2,-10,-2,-5,-10,7,8,-1,-8,-4],[3,-8,2,4,3,-4,1,-7,-5,-1,-5],[-10,8,-1,-2,-5,10,3,-7,7,-3,6],[7,6,-6,-8,3,5,7,-10,-4,6,-8],[5,8,-7,5,4,7,-5,-6,3,10,5],[-5,-8,9,10,-3,-5,8,-1,-7,6,-4],[6,-3,3,8,-3,-2,9,-3,9,5,8],[-5,-6,-3,-6,-3,-10,1,2,-3,2,5],[7,2,5,-9,3,-3,6,-1,-4,-5,3]]], dtype = "uint32")#candidate|1284|(16, 13, 11)|const|uint32
bop_1285 = relay.bitwise_or(var_1283.astype('uint32'), relay.reshape(const_1284.astype('uint32'), relay.shape_of(var_1283))) # shape=(16, 13, 11)
func_142_call = mod.get_global_var('func_142')
func_144_call = mutated_mod.get_global_var('func_144')
const_1304 = relay.const([6.210849,-0.137729,4.840055,-6.183190,3.429806,8.222543,5.462466,-0.918459,0.520356,-5.630528,9.969258,-4.830431,0.479457,-7.152907,9.297148,-7.951632,8.590398,-8.405658,9.601169,-5.487844,6.782620,-4.235547,-8.639209,-1.946706,-2.280993,-5.804318,0.301980,1.226666,-2.152566,6.813492,-6.121970,-6.132505,5.832633,-6.383058,4.383725,2.343284,9.433325,-3.449767,-8.716007,5.224780,0.328265,9.955651,3.383464,1.603811,-7.196026,2.166226,-2.961848,-3.481750,-4.815192,1.676449,1.974149,-1.426912,-3.130668,8.655748,-4.377787,7.051120,-6.429572,-7.785104,7.802703,6.654288,-5.030691,5.447548,-9.376670,-9.660122,-8.706553,-9.929785,-4.822460,-1.827300,4.031001,-0.342686,9.015502,-0.451890,-9.812400,9.419139,-6.874683,9.692095,8.975247,-5.109474,6.341441,-4.725432,-3.994795,3.031023,9.219972,3.365807,7.524442,-5.220824,1.447371,-1.428138,2.207824,1.427555,-7.098801,5.612761,8.469115,6.418742,-6.774056,0.646734,1.915713,-7.142790,-7.553233,6.677951,3.817040,-8.708465,-0.055280,-9.154318,-7.192308,-2.815838,-0.525083,-6.737337,5.549523,-6.066716,4.355945,-1.914489,6.172569,-0.357973,-7.818246,9.259395,7.638284,-9.221365,9.810100,-4.498159,-4.659329,-1.482001,-8.374340,5.966181,0.183012,7.261740,7.598280,8.381273,-9.232535,-9.129664,1.402805,-7.770129,-0.714029,4.176108,6.250221,4.951416,-8.105569,4.698468,6.689182,-7.078837,-2.244247,6.077338,1.994333,-3.412052,-9.740762,-4.492621,3.575864,5.382838,3.480439,5.215502,-4.202512,-3.326007,-0.903887,7.166143,-5.759972,-8.496224,3.335070,-0.937504,-8.683081,4.065999,-1.427531,3.421035,-7.757248,3.337421,5.709311,6.624016,3.148920,-4.228714,2.759578,4.200127,1.382835,-7.819595,-6.488260,3.218415,-4.297121,6.648836,-8.200259,-0.227543,6.535040,-6.904423,-1.883128,-4.864983,1.256217,3.431763,-9.489712,7.675095,5.023303,1.199536,-3.151673,-8.345626,2.689105,6.185385,-1.681894,-8.939421,5.490594,-6.769853,-5.228222,-3.802891,8.621978,-1.727122,-8.770401,8.224605,-3.009141,6.789341,5.291311,3.872776,-7.697394,-0.885077,-9.660748,-6.455647,7.145251,7.254457,-0.459383,-3.130498,3.784080,2.302737,-8.913492,8.398062,8.501204,1.011972,0.807882,1.210389,-3.411058,-6.228571,5.231114,-8.853960,-2.080651,-1.515626,4.218829,-8.370644,-3.816894,2.043415,4.847644,1.652096,1.125516,1.447311,4.345983,-5.874064,5.692543,-1.512360,-3.544222,3.047945,-7.067056,4.434472,-0.055809,-6.425466,0.481630,7.427529,1.577930,-5.996179,-8.312045,5.580083,-1.547988,7.009409,-2.618549,-7.261581,-8.968541,6.327017,-0.046951,6.170507,5.269032,1.446787,8.743905,9.612795,5.704017,8.602591,6.791168,0.058888,9.603920,6.031259,-0.863479,-9.102214,-6.530932,0.284104,-4.332560,3.037084,-3.178856,-5.720274,-8.274337,-5.973238,3.542941,6.693790,-1.808993,3.101740,8.962638,-2.356139,-6.608468,-4.643235,-1.916921,7.155333,-1.424889,-7.176349,5.956969,-8.027915,-5.527593,8.319613,6.420952,4.537092,7.429960,9.094980,0.081982,-2.666862,-6.762164,-0.472582,-9.030876,5.430138,0.366146,-6.186995,-9.198519,-4.577426,2.771499,8.877484,-8.544589,5.050050,8.253446,-5.373600,-6.283390,-9.105713,1.988715,4.109100,9.566721,0.409243,6.087236,6.407885,-7.032665,-5.961961,-8.410728,-7.818794,-9.089760,-9.254524,-4.048525,2.659847,-7.874974,0.718856,-1.019744,5.629292,7.927117,-8.390063,-8.461635,1.183011,5.850857,9.164641,2.345479,-4.467189,4.517331,1.540820,4.293105,-1.108977,-2.661527,-9.296734,-6.076198,-4.603265,-9.242582,-2.561069,7.094298,9.477664,-0.455680,-6.094835,8.952657,7.529662,7.444100,-6.393451,4.487820,-4.355884,8.647081,6.724952,4.285671,1.578552,-9.035926,-3.131272,2.363719,1.386272,-2.886803,2.561945,-4.613732,-0.057339,0.139923,0.682247,2.837261,1.477481,-3.314431,2.253667,-5.775728,4.541716,-7.528019,-9.862776,7.532467,9.970943,3.532004,4.639509,-9.898181,-5.626404,0.353852,-7.545618,2.226162,8.350010,-8.178919,1.587690,8.119358,-3.904860,4.379261,-2.606750,-9.620739,-8.266674,-4.832648,5.786322,-5.156492,8.732745,2.412624,-0.450988,1.897274,-8.018844,-1.128929,-7.466930,-0.075238,-1.766071,-1.398078,8.620777,-1.739142,-7.512659,4.670065,7.154389,2.672416,3.244359,0.423758,-6.920380,5.027609,-3.833318,-0.196886,-8.796478,3.558740,-7.744122,6.740599,-6.718568,-2.744435,-4.175334,6.967718,7.686779,-5.837010,9.320122,-8.651954,-2.594653,5.877680,-7.338905,-3.393027,-6.942326,7.342863,8.916908,-9.354847,-2.048630,-2.224726,7.796743,9.571029,1.574729,8.844223,3.018365,-8.406050,-2.751463,-3.590770,9.901913,1.987489,3.615326,6.864111,5.541574,-2.349290,-5.506772,-5.538531,-5.362248,-5.240954,-9.285265,1.348922,4.742081,5.376850,6.034360,-8.488937,-8.561766,-6.809521,-2.804685,-8.669959,-2.731578,-3.852397,-5.705774,-6.002649,-8.790306,-8.178320,-8.956410,-3.909296,5.240828,5.344621,7.473196,4.510026,4.620511,7.069831,2.883605,1.750523,9.700397,-6.422199,0.636704,-3.683520,3.816722,-6.719452,-1.643540,-1.924657,-1.210319,-0.108695,1.380738,-2.665161], dtype = "float64")#candidate|1304|(507,)|const|float64
call_1303 = func_142_call(relay.reshape(const_1304.astype('float64'), [13, 3, 13]))
call_1305 = func_142_call(relay.reshape(const_1304.astype('float64'), [13, 3, 13]))
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
const_1312 = relay.const([[-7.411605,-0.876413,8.866224,5.503939,5.867712,-9.077281],[-5.777393,-0.292831,-2.042177,3.325753,-5.895978,6.941445],[-6.276179,3.436447,3.193978,5.805807,-5.049402,-4.317433],[1.412259,8.967157,7.555070,-4.157707,-5.258008,3.010942],[-2.121341,-2.445520,3.102413,3.805821,-0.117480,4.045464],[-2.771935,9.223996,-3.011367,3.570180,-5.959606,-0.618988],[-5.014824,1.941610,-3.020884,4.340410,1.102607,2.158826]], dtype = "float32")#candidate|1312|(7, 6)|const|float32
const_1313 = relay.const([-5.214443,7.082979,8.771257,1.616211,-7.938964,2.220133,8.542777,-1.165077,1.111448,-7.150422,1.520167,-8.355075,-8.215020,2.270041,-6.196812,5.436395,2.526558,6.086250,-7.771676,-8.010978,9.712446,0.965761,-6.174934,-2.350751,2.652973,3.610272,-6.471531,-3.093982,2.667848,-3.751996,-3.332936,-2.183385,-9.823694,-8.737326,-0.945305,3.148775,-6.313242,-8.773135,9.322141,-2.897441,-6.885262,1.285480,2.085421,3.690571,1.730330,-2.335694,7.127321,-5.495714,5.347036,-8.115233,3.259681,6.536639,-2.741977,-8.468775,5.129383,2.880626,-4.503128,-3.681772,-2.069799,6.079628,-9.248100,6.172076,-0.460540,2.320781,-6.983356,-9.119901,-1.018616,2.871379,2.257270,-1.702750,9.629078,-9.870278,-0.415444,9.288898,-7.546493,-8.456888,1.973371,2.021892,2.166337,2.689029,-2.451946,-4.881979,6.306032,-2.449249,5.952330,8.297546,-7.141617,3.911109,6.935992,3.299623,9.214112,-5.769518,0.691062,-3.996441,-3.060381,-2.605048,9.278483,2.799318,-0.868198,-8.401383,-8.767769,-5.810286,1.559212,2.106894,2.757089,3.387404,6.629776,2.024177,0.180171,4.505605,8.649001,-4.494117,-0.543325,7.374849,4.328256,5.704421,-4.464489,-5.087568,2.004183,-0.361645,-1.642686,6.016697,1.261623,-7.993784,-5.381247,-1.180297,8.283451,3.522396,1.408267,0.208142,-5.648886,-7.806532,-7.469541,-7.013263,0.181055,-7.941848,-3.734716,6.447492,-7.378984,-8.094231,9.899817,-7.212215,-8.184400,6.619726,4.163009,-9.510790,5.150333,-0.567800,-3.190986,4.442855,8.550217,3.716870,5.401483,4.775850,2.214238,-7.907812,-7.182959,6.703492,-0.292396,-3.898090,3.335059,7.691831,-1.621440,4.754640,6.583255,-8.978819,-3.900153,-1.916236,-7.797998,-5.508094,-3.657336,-9.593444,6.623165,5.368376,-2.472764,5.326131,-3.960557,-5.942503,-6.123037,9.616277,-2.586855,-1.383640,-8.370520,-3.165030,-7.056643,-7.152078,-5.342557,-6.340042,-4.934270,4.281313,1.876965,3.046733,-5.314193,-5.525145,1.805101,-5.998597,1.086084,-7.675236,0.995992,-3.741077,0.060643,-4.454258,-8.144939,-2.403294,-6.540698,2.139201,-6.442593,-7.781624,0.990664,-8.287495,-7.279976,-9.948548,8.146864,7.085069,-2.927851,0.475986,-2.929633,8.108234,-7.530937,-4.429563,9.844569,-8.138573,-2.039387,-1.533248,-4.231493,-0.229983,4.633078,-0.445731,6.159083,-1.770584,-4.038685,-7.111299,5.578111,8.159931,2.626150,5.801939,3.112883,-0.989649,-1.923832,6.287083,8.589416,7.755522,3.452639,-0.879402,-1.737084,-5.867991,-7.669630,9.032423,-1.261761,2.273612,-9.019444,-6.343779,-6.108939,2.252619,-0.119783,1.630673,-2.493540,-0.425600,0.273948,6.769450,9.336348,-0.413915,-1.090680,-4.581289,-7.255143,-9.580647,-0.194527,-6.037044,1.451186,1.868307,1.883409,-0.440569,6.181632,6.060776,5.294850,-6.443862,-5.023938,-9.040677,9.519074,3.959634,-1.208060,-1.077902,-1.032426,0.885044,1.594227,7.710351,-4.267796,-4.438547,4.176413,-2.456573,-0.267202,2.647757,2.803412,5.719988,-5.965100,-1.817786,-2.375520,4.629789,2.329390,7.006858,0.964568,8.661580,-6.323751,-6.658568,9.134956,-0.853975,4.707765,-7.128021,5.884843,3.523394,-1.851044,-2.782892,0.278206,-0.374047,-5.429716,8.504639,-7.565808,8.201020,-0.789242,-7.918690,-7.821793,-6.099136,3.442430,-0.097355,-4.515867,-6.872282,6.438319,-3.444632,3.774603,-9.469609,-4.497637,2.814524,-3.267737,5.681690,-1.387531,4.951594,-2.364046,2.744028,-2.697713,-3.259644,4.039790,-9.115806,5.847337,6.785540,6.463260,-4.032769,2.150598,-1.045612,4.840932,4.110113,-4.915025,-6.668900,-2.342905,-7.306357,-7.536477,0.555577,8.682087,-0.871876,-2.713880,6.466988,4.448635,5.262577,-4.443874,9.421547,2.321528,1.994540,8.216185,-3.464620,8.531114,-3.310033,5.662149,-8.766876,7.049633,3.347298,-2.624392,1.411315,9.793261,6.337364,9.821030,3.807688,8.910716,-4.699847,-6.541008,-9.995352,5.046471,4.135281,-8.271475,1.616965,0.487822,-3.863718,-4.309465,3.931723,-0.609798,3.421070,5.575369,0.464344,9.163797,3.833559,-0.609309,-2.893533,3.688656,1.843774,9.786724,9.992426,1.302180,-4.850600,-2.240832,5.795021,-8.015359,-7.076355,1.314667,-6.796582,0.883473,8.551914,3.980788,3.943253,4.793348,8.406888,9.790947,6.507287,-2.498576,-5.954156,-5.633840,4.321023,-3.335420,-7.849676,6.327030,5.256880,4.506232,0.304516,-0.792089,5.540553,9.680880,-6.359353,9.293113,8.985330,5.911492,-5.022360,-7.065404,7.771582,8.520736,-9.702321,-3.143104,6.111311,-0.231747,7.316385,8.376929,8.313490,0.619028,-8.659613,2.490665,-7.627412,5.705430,-6.913003,-2.674484,1.659182,-1.165836,6.456919,1.978941,-2.437894,2.247932,-3.604732,-1.299721,3.095466,7.534672,-7.645771,7.057439,7.928605,-9.039901,-7.395125,6.265719,-2.279559,-8.256319,7.267633,8.085202,8.649783,9.877410,9.769597,0.675186,8.615917,-0.969748,-0.452588,-6.608104,1.089023,1.950077,2.204712,6.108816,-8.169339,2.958925,0.027794,3.962422,1.736084,-0.533432,-6.540598,4.012233,-6.794726,-3.711029,-7.859689,-3.163774,3.971764,9.932526,5.059995,-6.279396,-4.538533,8.802257,-4.138754,0.102426,4.521608,5.992935,1.706274,9.067006,-4.785787,-7.346483,-8.169053,-9.923161,4.647481,-7.574092,-7.961883,-4.495051,7.594003,-5.028731,4.220275,6.817953,3.476541,-8.984586,-3.758791,-4.292211,9.595339,4.999290,-6.089418,8.186873,0.551845,-6.665051,2.631439,1.333600,-5.583316,-0.307403,1.731161,-2.294069,-6.867001,1.104841,-8.159309,-2.850146,6.319163,7.600773,0.152537], dtype = "float32")#candidate|1313|(546,)|const|float32
call_1311 = relay.TupleGetItem(func_1229_call(relay.reshape(const_1312.astype('float32'), [3, 1, 14]), relay.reshape(const_1313.astype('float32'), [3, 13, 14]), ), 0)
call_1314 = relay.TupleGetItem(func_1232_call(relay.reshape(const_1312.astype('float32'), [3, 1, 14]), relay.reshape(const_1313.astype('float32'), [3, 13, 14]), ), 0)
func_755_call = mod.get_global_var('func_755')
func_757_call = mutated_mod.get_global_var('func_757')
const_1324 = relay.const([-4.860673,9.384600,-2.560293,-0.601023,9.302409,5.714413], dtype = "float32")#candidate|1324|(6,)|const|float32
call_1323 = relay.TupleGetItem(func_755_call(relay.reshape(const_1324.astype('float32'), [6, 1, 1])), 0)
call_1325 = relay.TupleGetItem(func_757_call(relay.reshape(const_1324.astype('float32'), [6, 1, 1])), 0)
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
call_1327 = relay.TupleGetItem(func_1229_call(relay.reshape(const_1312.astype('float32'), [3, 1, 14]), relay.reshape(const_1313.astype('float32'), [3, 13, 14]), ), 1)
call_1328 = relay.TupleGetItem(func_1232_call(relay.reshape(const_1312.astype('float32'), [3, 1, 14]), relay.reshape(const_1313.astype('float32'), [3, 13, 14]), ), 1)
bop_1331 = relay.mod(const_1284.astype('float64'), relay.reshape(bop_1285.astype('float64'), relay.shape_of(const_1284))) # shape=(16, 13, 11)
output = relay.Tuple([call_1303,const_1304,call_1311,const_1312,const_1313,call_1323,const_1324,call_1327,bop_1331,])
output2 = relay.Tuple([call_1305,const_1304,call_1314,const_1312,const_1313,call_1325,const_1324,call_1328,bop_1331,])
func_1358 = relay.Function([var_1283,], output)
mod['func_1358'] = func_1358
mod = relay.transform.InferType()(mod)
var_1359 = relay.var("var_1359", dtype = "uint32", shape = (16, 13, 11))#candidate|1359|(16, 13, 11)|var|uint32
output = func_1358(var_1359)
func_1360 = relay.Function([var_1359], output)
mutated_mod['func_1360'] = func_1360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1830 = relay.var("var_1830", dtype = "float32", shape = (12, 12, 16))#candidate|1830|(12, 12, 16)|var|float32
uop_1831 = relay.acosh(var_1830.astype('float32')) # shape=(12, 12, 16)
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
var_1844 = relay.var("var_1844", dtype = "float32", shape = (14, 3))#candidate|1844|(14, 3)|var|float32
const_1845 = relay.const([[-2.824653,-9.353406,8.683591,-2.434148,8.481890,-1.292861],[-0.337233,-5.299966,-9.768634,6.827026,1.477297,-3.343277],[-8.210475,1.034706,-8.062824,3.498057,-1.817633,1.538034],[-7.256531,3.620989,-7.567291,9.385224,-2.602087,8.366217],[7.326874,-8.128895,-6.153899,2.365382,-5.957615,3.494204],[-9.640051,2.317898,4.052687,-4.794072,-5.036892,4.832332],[-5.466765,-6.312192,8.385778,2.768897,-7.270370,8.797324],[-0.426213,4.267979,2.619397,0.340282,6.955753,-5.708409],[6.700650,-3.256870,0.875482,2.281013,-5.266493,-9.993572],[0.826059,3.870940,3.956315,-7.837108,9.119464,-2.966938],[-2.998885,-4.541357,-8.440694,-4.066139,-4.631665,-8.395762],[4.842447,2.797103,0.477066,3.047211,5.784174,-4.008489],[7.794343,-5.366038,-0.758325,0.768329,9.379269,-2.742791],[-2.199021,0.827812,9.618480,-0.994807,2.607875,-5.946116],[-9.910874,6.833864,-3.348619,-7.007459,-7.945573,9.802764],[-9.811990,-7.343361,-8.728478,8.440552,3.547074,0.367289],[-1.958940,9.192008,8.221760,-8.072278,0.107522,6.154172],[1.633503,6.904385,4.846735,-1.811617,0.849475,6.561156],[8.678770,4.323772,6.218421,0.437396,-2.269018,-9.417206],[6.143718,9.920113,-2.835040,-4.329995,2.132109,-0.775366],[-9.360425,-4.187485,4.890700,-4.058549,-5.255557,3.075654],[-5.373075,-4.294988,-5.010786,4.639997,1.934355,-8.309447],[1.335972,-3.287672,6.286210,9.974919,6.247966,1.775900],[2.204051,-8.692992,5.038323,-6.919941,-0.805012,0.400521],[9.664201,-2.625428,9.797286,-4.010694,-7.498667,1.071374],[6.834951,7.683850,-8.981352,5.128236,-4.828971,-7.074250],[-3.954163,-0.456748,4.687117,3.888449,-1.880681,1.492263],[-1.000800,-4.291424,-4.622614,-6.674291,2.158746,3.813710],[4.330218,0.948357,-2.567325,9.310017,-5.633553,2.749660],[1.269705,-6.241137,1.694391,-8.471444,-1.776727,-6.065797],[-6.203146,-3.625480,-1.759105,-6.208605,3.643580,-7.136760],[2.384503,-1.751902,8.753938,6.987055,-9.042668,-4.122788],[1.584661,1.125462,1.820484,0.654223,8.573079,9.716261],[7.446694,9.576040,-7.823750,-8.758571,2.665751,4.131051],[-7.375239,-0.718301,5.446964,-2.514990,8.294404,-3.687533],[2.168046,-8.950385,8.297687,0.951220,8.106592,7.299877],[-3.656309,3.694847,-1.117118,-2.211061,3.641563,6.103029],[7.927458,-5.978789,-6.153572,2.087668,-7.459871,-4.198737],[-4.868669,-8.991182,-6.004078,3.473833,0.428153,-3.226573],[4.249634,-5.909078,7.777625,7.298882,-8.785349,2.567013],[-6.102114,-8.510664,3.547406,6.983837,-0.898421,5.977777],[8.668749,2.933728,-1.879294,1.331715,-1.769092,-6.206084],[6.948060,-1.870795,7.829071,-0.851438,8.763861,-5.211270],[0.917845,-7.415600,6.822672,-5.135687,-9.123343,3.853454],[-7.290186,-6.831785,0.909383,-7.377558,6.361451,-0.224447],[2.150358,-9.335267,3.075950,7.674796,-2.162364,4.648254],[1.787760,9.940563,8.590880,-0.028639,6.731281,3.867151],[-8.234184,4.023484,-0.317823,-6.841897,3.858339,-8.008059],[-8.290950,5.803631,7.097653,-5.050401,2.782229,-1.927397],[2.380527,-4.108845,-6.846778,3.393289,4.693192,-0.861913],[-9.848058,3.503506,5.504552,-0.708591,8.508793,3.394791],[-0.951829,-7.243475,4.421971,4.786467,7.681441,6.805918],[4.817806,-4.475656,8.807381,-0.272452,-5.759002,0.546242],[-7.159497,0.412568,-6.748441,-8.010588,-7.089463,-9.734751],[-2.756122,-2.082568,6.815819,5.961268,-7.569555,0.960426],[-6.921859,5.797412,-4.941588,-2.590028,1.078865,-3.514763],[-4.214225,-5.597684,7.095465,-4.758493,-1.844502,-0.711803],[-7.499989,-6.938680,3.763305,7.672848,-2.632408,-6.508197],[7.182633,1.287148,-1.935900,-5.172466,-9.845405,-2.163602],[7.893866,5.593262,3.353316,6.953659,0.418101,9.209238],[-3.212085,-0.068502,1.670014,5.711389,-4.008441,0.907993],[-5.032801,8.368363,2.595508,5.986006,8.654560,-4.132369],[-9.586281,-0.521342,-8.098241,-3.664545,-6.157800,2.940697],[-0.143174,3.471870,9.119161,5.989390,-9.657053,-6.291004],[-7.145037,6.960954,2.719038,8.161389,6.123007,2.543210],[2.525758,-0.165523,6.214478,4.864760,-0.844645,-2.522645],[-1.388086,-2.794808,-1.143388,-4.538036,-5.237416,-6.203713],[4.723928,3.077763,-3.068549,-4.996836,-4.432541,4.716813],[-5.981817,4.716576,4.058702,-6.207172,-5.513754,3.146826],[-4.733194,0.286297,9.320761,-4.061639,2.322229,4.094388],[-6.844519,7.884146,6.502438,-3.550935,-1.947994,-6.914158],[0.556071,2.024948,4.490423,3.898428,-4.521456,-0.116644],[-8.847092,-2.124951,-4.891812,5.057045,-4.570710,-6.281042],[-2.535866,6.350876,-1.766386,-2.263841,2.812634,5.743424],[-3.123379,-7.257268,-4.281136,-5.514846,1.682544,-0.518632],[6.541332,-7.266016,2.979718,7.203075,-7.959985,-5.670788],[-5.847705,-3.319256,-7.809028,8.491053,-4.099495,5.386370],[-7.555761,-0.473599,-0.489660,-7.956236,-3.520406,1.108192],[4.927502,9.401547,-5.107709,-4.363394,6.549212,-0.468348],[9.341484,-8.206718,8.575438,-0.894504,-6.895037,7.152288],[8.064012,-9.061539,-5.684067,7.889682,-7.979117,3.368980],[-6.441673,9.078772,3.173548,2.535345,7.442146,-4.256763],[4.913942,0.002075,7.360439,0.895168,-7.367202,9.505887],[7.569726,-0.827159,3.348982,-8.128646,9.706089,8.617021],[4.787612,4.483013,8.784663,2.554687,-1.667276,-5.250026],[5.746418,0.081288,6.540669,7.273272,5.145076,-6.619539],[5.846754,3.454070,-7.946223,5.226488,2.251280,9.551023],[2.761434,-1.542742,1.440723,5.343146,-9.737544,-0.970213],[0.097295,-5.682052,1.716668,-9.810856,-4.676825,2.793813],[-4.544497,-9.470170,-7.102193,-5.522517,7.046092,4.161619],[3.386278,7.541968,5.447006,5.528141,9.013892,-0.996500]], dtype = "float32")#candidate|1845|(91, 6)|const|float32
call_1843 = relay.TupleGetItem(func_1229_call(relay.reshape(var_1844.astype('float32'), [3, 1, 14]), relay.reshape(const_1845.astype('float32'), [3, 13, 14]), ), 1)
call_1846 = relay.TupleGetItem(func_1232_call(relay.reshape(var_1844.astype('float32'), [3, 1, 14]), relay.reshape(const_1845.astype('float32'), [3, 13, 14]), ), 1)
output = relay.Tuple([uop_1831,call_1843,var_1844,const_1845,])
output2 = relay.Tuple([uop_1831,call_1846,var_1844,const_1845,])
func_1854 = relay.Function([var_1830,var_1844,], output)
mod['func_1854'] = func_1854
mod = relay.transform.InferType()(mod)
var_1855 = relay.var("var_1855", dtype = "float32", shape = (12, 12, 16))#candidate|1855|(12, 12, 16)|var|float32
var_1856 = relay.var("var_1856", dtype = "float32", shape = (14, 3))#candidate|1856|(14, 3)|var|float32
output = func_1854(var_1855,var_1856,)
func_1857 = relay.Function([var_1855,var_1856,], output)
mutated_mod['func_1857'] = func_1857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2385 = relay.var("var_2385", dtype = "float64", shape = (13, 15, 2))#candidate|2385|(13, 15, 2)|var|float64
const_2386 = relay.const([[[-6.582086,-5.984423],[2.900634,8.700584],[-3.483646,-2.822466],[8.496453,4.388739],[6.999577,7.743158],[-0.072214,-2.045215],[5.271202,-8.535167],[-8.088667,3.441558],[8.292134,8.302778],[9.350244,4.389623],[7.249907,7.715843],[7.668983,-0.684391],[9.435782,-7.719984],[-6.815321,5.053173],[-0.475283,-1.973182]],[[-5.890789,1.123421],[-4.526114,-3.376048],[1.049083,7.889592],[2.363773,7.434465],[1.814681,-3.905795],[-0.662212,-8.410220],[8.108466,-0.085499],[-9.643173,-1.906127],[-2.970907,-0.986517],[-2.506995,2.461814],[8.218959,-4.194695],[0.429291,5.186608],[1.846757,0.996873],[5.321848,4.148675],[-6.780926,-2.999655]],[[-4.801350,5.203160],[-5.103965,5.039432],[-7.853505,8.176896],[1.402395,-3.742481],[3.853616,-1.778028],[5.363464,-1.227220],[3.709433,8.816314],[0.125810,-7.797472],[-6.802880,2.561627],[-9.638268,-7.531998],[6.792905,-1.647837],[0.214338,5.832214],[-4.634996,-4.621702],[7.672634,-7.230299],[-6.024974,-2.435453]],[[4.169423,3.723288],[-4.275032,0.919121],[-4.248064,8.758606],[5.893035,-3.909878],[5.233424,7.731593],[2.808523,5.405329],[5.200012,-1.791973],[-9.188370,0.319876],[0.390543,1.055527],[1.484036,-5.620138],[-7.812614,9.683437],[9.345149,8.497418],[5.528883,7.260154],[-3.048535,-4.008001],[-5.175008,4.090409]],[[6.923336,2.327004],[3.587467,6.617936],[0.843785,-2.854035],[0.299680,9.309062],[-2.728666,1.301791],[5.809800,-4.102791],[-4.216233,1.331812],[9.628186,8.579907],[-8.316248,-7.897453],[9.797812,-6.095432],[0.827177,0.018103],[8.555217,-9.937801],[3.624361,8.202387],[-9.799040,-3.122490],[-2.809230,0.916588]],[[-3.531962,2.969960],[7.963570,-9.983296],[2.605176,9.307703],[-1.442959,0.682248],[8.386364,8.637696],[-7.816138,-9.915568],[-4.907455,2.006442],[-8.760938,3.634601],[9.663313,0.592782],[-2.071440,0.909202],[9.937956,-8.756874],[7.804175,2.050811],[5.603865,2.072847],[8.984038,-7.232075],[-7.679626,0.726505]],[[9.457010,2.807459],[6.462578,0.501682],[3.704735,3.454185],[-4.726587,-6.211840],[0.824439,-5.387970],[-9.786835,-7.416198],[3.679274,1.663941],[-3.003386,0.202167],[9.557429,-2.140239],[8.835056,-3.522592],[8.113460,8.575834],[-2.499814,6.709318],[6.447180,-0.471180],[-9.481609,-8.666282],[-0.231894,7.478345]],[[-7.073435,-7.577750],[-2.981012,-1.075321],[-6.074369,-6.969135],[-0.130893,6.985611],[0.886358,-7.102277],[1.510593,-5.256474],[-3.673733,7.296959],[-9.545725,9.601132],[7.279241,8.317094],[0.324874,-5.019904],[-3.438552,1.794150],[-5.900785,6.660877],[5.806691,0.991305],[9.077691,-7.973987],[-1.945545,-7.537302]],[[9.479731,7.344363],[2.156679,-8.029806],[-5.734139,-4.649066],[4.221851,4.405571],[9.321308,1.169020],[-1.271162,2.916154],[-0.250812,5.379982],[6.500494,5.000372],[-0.254935,-4.119119],[1.411355,-7.316603],[1.875769,2.990325],[-0.960217,-4.658356],[8.685540,-7.494825],[-7.135608,1.247759],[-0.317794,5.651421]],[[-9.347356,-1.209816],[3.243607,-8.465983],[6.447019,-5.685745],[-5.573720,1.718822],[-4.837892,-9.118936],[6.505329,-1.091136],[-0.834527,-3.868297],[-3.534731,-3.399463],[-3.688419,4.702683],[8.773807,6.134805],[-3.414783,6.277193],[9.893331,4.895525],[7.208862,3.369620],[5.198977,-6.987406],[-6.149214,-3.236620]],[[0.659246,3.848070],[9.907386,0.506462],[3.234394,7.901329],[5.417285,-9.097659],[3.091231,-6.611646],[8.467862,7.085884],[2.865228,-1.498859],[-3.412814,8.663159],[0.866961,8.670414],[6.012539,-4.574429],[3.049850,7.266524],[-9.145836,3.688915],[9.526345,-3.792282],[-7.184887,8.371068],[-4.033690,4.254565]],[[-5.937813,-6.665215],[3.592388,-9.094700],[-3.987317,8.929491],[-3.637198,-9.619092],[-1.864268,-5.447020],[-8.702184,-5.497174],[-3.083227,-3.103358],[5.865983,3.716588],[-9.633949,-1.462975],[-2.252687,6.109067],[6.496020,-9.385944],[3.756986,-9.068364],[9.827060,9.041548],[-1.797727,-4.576306],[-0.810461,4.562664]],[[-3.958056,6.556472],[-8.254205,-0.329882],[6.105522,6.186705],[3.936005,-9.498806],[7.814865,-7.323248],[-0.011131,-1.020768],[-0.724881,5.577694],[7.448433,-8.482370],[-5.079864,9.963086],[1.545915,0.163988],[6.872197,4.231838],[-6.095706,3.330644],[5.067268,-6.977428],[3.351652,-9.521541],[2.489252,-5.299319]]], dtype = "float64")#candidate|2386|(13, 15, 2)|const|float64
bop_2387 = relay.floor_divide(var_2385.astype('float64'), relay.reshape(const_2386.astype('float64'), relay.shape_of(var_2385))) # shape=(13, 15, 2)
output = bop_2387
output2 = bop_2387
func_2393 = relay.Function([var_2385,], output)
mod['func_2393'] = func_2393
mod = relay.transform.InferType()(mod)
var_2394 = relay.var("var_2394", dtype = "float64", shape = (13, 15, 2))#candidate|2394|(13, 15, 2)|var|float64
output = func_2393(var_2394)
func_2395 = relay.Function([var_2394], output)
mutated_mod['func_2395'] = func_2395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3632 = relay.var("var_3632", dtype = "float64", shape = ())#candidate|3632|()|var|float64
var_3633 = relay.var("var_3633", dtype = "float64", shape = (7, 9, 4))#candidate|3633|(7, 9, 4)|var|float64
bop_3634 = relay.floor_divide(var_3632.astype('float64'), var_3633.astype('float64')) # shape=(7, 9, 4)
output = bop_3634
output2 = bop_3634
func_3641 = relay.Function([var_3632,var_3633,], output)
mod['func_3641'] = func_3641
mod = relay.transform.InferType()(mod)
var_3642 = relay.var("var_3642", dtype = "float64", shape = ())#candidate|3642|()|var|float64
var_3643 = relay.var("var_3643", dtype = "float64", shape = (7, 9, 4))#candidate|3643|(7, 9, 4)|var|float64
output = func_3641(var_3642,var_3643,)
func_3644 = relay.Function([var_3642,var_3643,], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3871 = relay.const([[[7.118659,-5.094939,-1.753464,4.111078,6.684421,-5.622246,7.345307,-9.888458,9.198756]],[[-7.628135,7.590953,-2.546865,5.786347,-2.140197,5.602413,2.220589,7.765642,-7.275940]],[[-9.069512,6.683379,3.886603,-4.063058,-0.172334,3.804889,4.040394,-4.711739,-0.877889]],[[8.363857,-2.834132,-5.804041,6.521343,0.995327,1.870619,-2.693412,2.065369,-6.461436]],[[7.669229,-1.102602,1.325237,1.318321,4.995034,5.167800,7.370761,-3.583174,-7.899423]],[[1.040028,-4.614090,-7.956819,5.517221,5.857901,0.558509,1.655156,4.697210,-8.262309]],[[9.592103,4.420081,1.672581,-2.952377,-5.472551,3.577509,8.523623,-1.809683,6.373641]],[[5.922556,-3.546179,6.275526,-5.101164,-9.526039,-0.978915,-5.193593,1.126459,8.191796]],[[-2.147602,8.899324,-1.147547,8.375399,6.178961,0.872903,4.169149,1.357777,-8.246298]],[[6.817902,8.136628,-5.947281,-1.607234,9.544817,-8.670175,3.222407,-5.582641,6.826398]],[[8.483863,-0.290669,7.376293,9.793637,5.003991,-3.053558,9.654381,-3.503011,8.295080]]], dtype = "float32")#candidate|3871|(11, 1, 9)|const|float32
var_3872 = relay.var("var_3872", dtype = "float32", shape = (11, 1, 9))#candidate|3872|(11, 1, 9)|var|float32
bop_3873 = relay.floor_divide(const_3871.astype('float32'), relay.reshape(var_3872.astype('float32'), relay.shape_of(const_3871))) # shape=(11, 1, 9)
output = bop_3873
output2 = bop_3873
func_3883 = relay.Function([var_3872,], output)
mod['func_3883'] = func_3883
mod = relay.transform.InferType()(mod)
var_3884 = relay.var("var_3884", dtype = "float32", shape = (11, 1, 9))#candidate|3884|(11, 1, 9)|var|float32
output = func_3883(var_3884)
func_3885 = relay.Function([var_3884], output)
mutated_mod['func_3885'] = func_3885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3989 = relay.var("var_3989", dtype = "uint64", shape = (2, 3, 6))#candidate|3989|(2, 3, 6)|var|uint64
var_3990 = relay.var("var_3990", dtype = "uint64", shape = (2, 3, 6))#candidate|3990|(2, 3, 6)|var|uint64
bop_3991 = relay.right_shift(var_3989.astype('uint64'), relay.reshape(var_3990.astype('uint64'), relay.shape_of(var_3989))) # shape=(2, 3, 6)
output = relay.Tuple([bop_3991,])
output2 = relay.Tuple([bop_3991,])
func_3994 = relay.Function([var_3989,var_3990,], output)
mod['func_3994'] = func_3994
mod = relay.transform.InferType()(mod)
var_3995 = relay.var("var_3995", dtype = "uint64", shape = (2, 3, 6))#candidate|3995|(2, 3, 6)|var|uint64
var_3996 = relay.var("var_3996", dtype = "uint64", shape = (2, 3, 6))#candidate|3996|(2, 3, 6)|var|uint64
output = func_3994(var_3995,var_3996,)
func_3997 = relay.Function([var_3995,var_3996,], output)
mutated_mod['func_3997'] = func_3997
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5028 = relay.var("var_5028", dtype = "float64", shape = (10, 14, 12))#candidate|5028|(10, 14, 12)|var|float64
uop_5029 = relay.erf(var_5028.astype('float64')) # shape=(10, 14, 12)
func_755_call = mod.get_global_var('func_755')
func_757_call = mutated_mod.get_global_var('func_757')
var_5032 = relay.var("var_5032", dtype = "float32", shape = (6,))#candidate|5032|(6,)|var|float32
call_5031 = relay.TupleGetItem(func_755_call(relay.reshape(var_5032.astype('float32'), [6, 1, 1])), 2)
call_5033 = relay.TupleGetItem(func_757_call(relay.reshape(var_5032.astype('float32'), [6, 1, 1])), 2)
func_142_call = mod.get_global_var('func_142')
func_144_call = mutated_mod.get_global_var('func_144')
call_5034 = func_142_call(relay.reshape(call_5031.astype('float64'), [13, 3, 13]))
call_5035 = func_142_call(relay.reshape(call_5031.astype('float64'), [13, 3, 13]))
output = relay.Tuple([uop_5029,call_5031,var_5032,call_5034,])
output2 = relay.Tuple([uop_5029,call_5033,var_5032,call_5035,])
func_5041 = relay.Function([var_5028,var_5032,], output)
mod['func_5041'] = func_5041
mod = relay.transform.InferType()(mod)
mutated_mod['func_5041'] = func_5041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5041_call = mutated_mod.get_global_var('func_5041')
var_5043 = relay.var("var_5043", dtype = "float64", shape = (10, 14, 12))#candidate|5043|(10, 14, 12)|var|float64
var_5044 = relay.var("var_5044", dtype = "float32", shape = (6,))#candidate|5044|(6,)|var|float32
call_5042 = func_5041_call(var_5043,var_5044,)
output = call_5042
func_5045 = relay.Function([var_5043,var_5044,], output)
mutated_mod['func_5045'] = func_5045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5069 = relay.var("var_5069", dtype = "int64", shape = ())#candidate|5069|()|var|int64
var_5070 = relay.var("var_5070", dtype = "int64", shape = (2, 4, 15))#candidate|5070|(2, 4, 15)|var|int64
bop_5071 = relay.multiply(var_5069.astype('int64'), var_5070.astype('int64')) # shape=(2, 4, 15)
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
const_5075 = relay.const([3,2,5,8,-8,5,-5,-2,-8,2,7,-4,-2,-4,5,4,-5,5,-8,6,-5,-9,-9,-3,5,-10,5,3,-2,-6,8,-7,6,3,-7,2,-9,4,4,-4,3,1,9,-7,-9,-9,5,-2,-8,-5,-3,6,-7,-9,-8,-10,-8,-8,5,1,10,-2,8,6,-8,-2,7,2,-10,5,-5,-6,-5,1,4,5,4,9,-1,7,-5,2,-6,-5,7,-2,-4,5,-7,-9,-10,4,-4,-3,7,6,-6,-3,-5,9,-6,-4,1,10,-8,8,-5,-2,-5,-6,5,-4,10,-7,4,9,-7,10,2,6,1,10,6,7,-8,-4,4,-8,-7,-1,9,3,-3,-5,-5,9,-5,-5,2,2,4,-5,-6,-5,5,4,-8,-1,-1,7,7,3,-6,3,-8,-8,-1,-1,3,1,-1,-4,-1,-9,-1,-8,4,-10,-8,10,8,-10,-2,-7,8,5,-3,10,5,-8,-8,5,-8,6,-8,3,4,-4,-8,-1,10,-8,6,9,-7,-8,-3,-9,-7,-6,1,10,7,-4,-6,-1,-3,-9,5,10,7,7,10,1,-2,2,-8,-1,-6,-8,-9,7,6,-3,-8,-4,-1,-4,-8,-8,-2,4,-3,-3,-9,9,9,-2,-6,7,7,8,4,-1,-5,-3,-1,4,-5,3,7,-3,-10,1,-1,-9,-10,10,-6,-6,-2,-7,9,7,8,7,-1,-2,-7,-6,-1,-9,-9,7,-10,6,2,-4,-7,-5,2,2,4,4,-9,10,-5,-5,7,-2,2,8,-3,9,5,7,-7,1,-5,3,-7,-7,3,9,-1,1,-8,1,3,-3,3,-6,-1,2,-3,-3,1,1,10,-5,10,6,5,1,-7,-8,8,-1,-10,6,-9,4,-9,-5,4,1,6,-3,-7,10,-1,-4,-2,-8,9,8,3,9,6,2,-6,5,2,-4,4,-3,-4,-4,6,-3,-7,7,4,5,-10,1,8,7,-5,9,6,-4,2,9,3,-5,4,2,7,-7,4,4,-3,2,-3,7,6,2,-1,-6,-4,5,-2,-5,6,-8,1,2,5,1,-6,9,-2,-10,5,-7,10,8,-1,-2,6,-7,4,-10,5,8,2,7,-10,6,4,4,-3,7,7,3,1,-10,-1,-3,6,2,-1,-1,-6,6,-8,6,-3,9,2,3,4,-8,6,3,-5,9,4,6,-6,-3,-3,10,-2,7,-1,-5,6,9,-7,3,9,-7,-3,-4,7,7,-6,7,-8,-2,-3,-3,2,-10,-8,8,-8,-10,-10,-1,-4,7,5,-8,6,-1,8,-9,-10,7,5,-5,4,3,-2,1,3,7,-1,1,4,-8,10,3,10,7,-9,8,8,7,6,-7,3,-6,-9,-2,1,-7,9,2,-2,-5,-1,-4,4,10,-9,-8,-3,7,-3,6,2,6,5,-1,7,10,10,-9,-5,-6,-8,-7,1,4,6,10,5,-9,6,-9,-9,10,-1,4,10,10,-6,-10,2,3,-5,-6,-10,1,7,8,-9,5,-1,-7,1,-8,6,-6,-3,-8,1,-9,1,9,-9,3,-7,-7,-7,9,2,5,-7,-8,-9,7,10,-10,-5,6,6,-2,-8,-3,-5,-3,2,-5,-8,-1,9,6,5,8,-5,-6,6,5,-8,8,-5,-10,-8,7,-10,-4,8,6,-8,-1,-3,-7,6,-10,2,-8,9,-3,-5,-5,-1,-3,3,-10,8,-5,10,-7,-3,1,-6,-4,8,-4,-10,-1,-9,9,6,4,-3,-4,-10,1,9,-1,-2,-10,4,7,-4,-4,3,-7,-5,2,10,2,4,-5,5,7,-3,-10,-2,1,-3,9,10,-4,4,4,-9,-4,-2,-7,-7,6,5,6,-1,3,10,10,7,7,-10,-7,-9,-4,-2,-10,9,-10,10,-2,-1,-6,9,2,-2,9,-2,-10,9,-4,7,1,-9,-10,5,1,9,8,5,-3,-1,-6,-9,5,-10,-1,4,3,-3,4,7,5,-5,1,6,-7,-8,-1,-1,7,7,10,-9,9,-8,-1,8,-10,-10,-5,6,-3,-4,1,3,7,-5,-3,2,6,5,-4,3,8,-6,10,-4,8,7,5,9,-2,-1,-9,-7,4,10,6,3,-7,-8,2,-9,-2,-2,-8,9,5,5,4,9,-5,-5,2,-7,-8,5,-9,-2,3,-7,5,9,7,-6,-5,6,-3,2,-8,4,6,-8,6,-5,2,-7,8,-10,1,4,10,5,3,-1,-8,9,-6,8,-4,10,5,-4,-7,-7,-10,-2,1,4,-7,-6,-1,9,-9,9,10,-1,9,7,10,4,-5,10,6,-1,-10,7,10,-7,5,-4,7,1,9,-4,3,10,-6,5,4,-4,3,-4,-9,3,10,10,-1,7,-10,2,9,-1,-10,-7,-2,-9,-4,7,-7,-9,8,-4,10,-10,2,-2,-1,8,-1,8,-5,8,1,5,8,4,-5,6,2,4,7,7,-2,1,-9,7,-7,7,2,7,8,-7,-2,6,8,-7,9,5,8,-5,7,3,8,-4,-4,2,4,2,-2,-7,-2,5,8,-5,8,-5,3,-10,10,1,7,-3,-3,-7,7,5,-10,-5,2,7,1,6,-2,4,2,-5,3,2,-6,10,2,-5,8,3,9,8,3,-3,-10,-6,-4,-3,-8,-2,-3,8,-10,8,-2,-7,-2,-10,-9,-8,9,3,-5,-2,-3,-7,-1,-4,9,-8,-4,1,-10,-8,1,-9,-10,-8,3,9,-6,-4,1,-7,-9,-1,-2,8,-1,-2,-2,7,-5,8,4,-4,4,-5,-8,-7,-9,-2,1,2,6,-8,-5,2,-9,8,10,2,-3,-2,1,-8,10,-3,9,6,-1,4,9,-8,6,2,9,1,2,3,-3,-6,-10,-5,-6,4,5,-3,-2,5,-6,-6,-10,9,10,-9,-4,5,6,2,-1,7,-4,2,-1,6,3,-6,-10,-7,8,1,-3,-5,8,-8,4,7,-10,-4,6,-10,-3,-2,-3,3,-4,-5,-3,-5,6,10,-3,-7,-5,-3,10,-10,2,-6,-2,10,3,3,6,7,-3,3,5,6,1,-3,-5,-4,4,5,10,1,1,-9,4,-8,-6,-3,-10,-5,10,-2,10,1,-9,-1,2,-2,10,9,-1,10,-9,-10,-4,8,2,7,7,7,6,4,-2,2,-8,-5,-9,6,-10,7,-1,5,6,-7,-2,10,4,8,8,9,3,5,-1,-10,-5,-4,-1,-2,-3,-1,-3,4,4,-5,-2,-10,-10,-8,4,-1,-4,-9,-6,-3,8,-7,-6,-10,3,-5,-10,1,-10,1,7,-4,9,-8,-4,5,7,-5,-4,-3,10,3,3,-10,-7,6,2,-6,3,7,5,1,5,4,9,-6,7,1,-7,4,1,-7,10,-6,-7,2,7,5,9,1,9,9,1,10,8,-4,-4,5,-6,8,-6,-5,-6,-4,2,-3,7,8,9,-9,-10,7,6,7,-5,-5,-7,-3,-3,-8,-4,-5,-10,-10,1,-7,2,4,-7,10,-9,-2,-5,9,-2,2,-7,-7,-10,-9,8,-1,-1,-10,9,10,-7,2,7,-10,2,3,9,-10,10,-9,3,-3,-6,-3,-5,10,-7,-3,-8,1,7,1,5,4,-9,6,-2,8,-3,10,6,-9,-6,7,-5,4,-2,5,-4,-5,-1,-5,-1,8,4,2,-2,4,1,-2,8,8,8,-9,4,7,6,-8,-7,-3,-8,2,5,-8,5,-5,-3,-5,8,-5,-10,8,6,-5,4,-3,-4,-2,3,7,7,1,5,-3,9,-7,-2,-5,3,-1,-9,-9,3,1,-9,-2,-10,-8,-2,-10,-1,-10,-2,-3,-8,-1,-1,1,10,-10,2,-5,6,7,-4,-8,4,10,-6,10,-9,4,-1,-6,9,-10,-7,-3,-10,-2,9,-1,-2,10,8,-6,3,9,-5,5,-2,-2,1,5,-8,-8,-8,10,4,2,2,-8,-7,8,-3,-3,9,-5,3,-4,6,-7,-4,6,9,-1,7,-5,-8,6,8,-6,5,9,-1,8,-6,-2,2,-10,8,-1,1,-9,10,2,-5,7,2,-9,-1,-8,1,-7,8,5,9,10,1,10,-7,3,3,-1,8,-5,8,-5,-3,-4,-2,-8,-5,2,10,-1,-6,-8,-4,3,-10,10,2,-6,8,6,1,10,2,3,-5,10,9,-2,6,7,-2,1,2,10,1,7,-2,7,-10,8,5,9,-4,6,-4,6,-10,1,6,2,-9,-9,-8,5,-5,3,10,3,-3,-4,2,5,6,-5,-9,-2,-6,7,7,1,-4,-1,6,-8,3,-6,-3,10,-8,6,2,6,-8,1,7,-7,-6,-7,4,-3,-1,-3,-9,6,8,5,-9,-7,5,2,1,5,8,2,-9,-1,4,-5,-9,-2,-2,-8,-7,-7,4,-6,-9,-2,5,10,-1,-4,-5,9,9,-10,8,1,-2,10,8,-10,-9,5,-10,-9,4,-7,-4,2,8,6,1,-5,-8,10,3,2,-4,-7,9,-7,-1,3,-1,-1,-8,-6,6,3,-8,-7,-3,-4,-5,-1,-9,9,-3,7,7,4,5,-4,3,5,10,-2,-3,10,-9,4,1,8,-4,-7,-3,6,-1,10,-8,5,9,1,-6,-1,1,-1,-9,-6,5,3,4,-7,2,1,4,-7,5,-8,8,4,-5,4,5,6,-3,8,-2,6,-2,-3,-5,3,10,-3,-1,8,3,1,-1,-9,-7,6,4,3,-9,4,9,-5,7,7,-6,-5,8,10,2,-6,8,8,3,10,8,-7,-1,5,-2,-7,7,9,5,-7,-9,-6,4,-1,-5,-9,4,9,-10,-5,-7,1,4,1,9,6,10,7,8,-1,6,8,-7,5,-1,10,-3,-2,-10,8,-1,-9,8,5,1,-1,-7,9,5,-9,-6,-6,9,8,3,1,10,-6,-6,-6,-6,-6,-5,-7,10,-9,-5,5,-5,3,9,-3,-4,9,10,6,2,1,8,-8,-3,5,3,2,-3,7,1,-10,1,-4,5,-8,-4,6,6,2,-2,7,-9,5,-4,-3,-4,-9,-2,-5,4,6,2,-2,6,8,-3,5,-4,5,5,-4,-10,-4,-7,-1,-2,-9,-1,-3,-6,-6,5,-2,-4,-6,2,-7,-2,-7,10,10,-9,8,-9,-6,1,-4,7,-3,3,-7,-9,9,5,-2,6,-9,-8,-4,6,-2,5,-1,-3,1,-6,-1,3,8,-8,3,10,-8,6,5,-3,1,6,8,8,3,10,-9,-4,10,-5,5,-4,-4,-6,-4,-8,4,-7,-3,-4,7,10,4,10,5,9,-1,-4,3,5,-8,-2,-9,5,-2,-6,-2,4,10,1,1,7,1,6,1,1,6,-2,-2,5,-7,-2,9,4,-2,-7,5,5,-7,-9,-2,-8,6,3,8,-2,1,1,-2,9,9,8,-2,-9,-4,7,-3,-4,4,8,5,4,-6,6,-1,-3,-3,-6,4,1,-6,-3,3,7,-7,1,5,-10,2,10,-10,-8,3,-5,-9,-4,7,3,7,1,-5,7,-8,2,10,-5,-6,-1,-7,8,5,9,9,5,-4,-1,-7,-10,5,6,5,-8,-4,-9,-7,7,9,5,-9,-6,-7,3,-5,-10,6,-8,7,1,-4,4,-7,3,-8,4,1,10,6,1,-8,-6,6,7,-9,-9,-1,6,4,4,10,-9,9,-6,-5,-10,7,-9,-1,8,-5,5,-10,5,-2,7,-8,-2,8,-6,4,-5,-4,-6,1,5,3,-3,2,-6,-7,-6,-9,-6,6,-9,-7,-5,-1,6,-7,7,2,2,7,10,-2,1,-5,-8,8,-3,-4,-8,9,4,-4,5,-2,-1,6,-3,8,-10,10,3,-7,-2,3,5,-3,-8,-1,-2,2,4,-7,-6,2,5,6,-9,-4,-6,-1,9,-10,-9,-9,-6,8,-9,-8,7,3,-9,2,3,-8,-5,10,1,10,-2,2,-2,-7,-5,-5,4,-6,8,10,-6,-2,7,4,1,7,4,1,-2,-6,5,9,1,2,-5,-1,-3,1,-5,8,-10,-1,-6,2,-3,5,10,-7,1,-8,-4,-5,-6,-8,3,8,3,-10,2], dtype = "uint32")#candidate|5075|(2288,)|const|uint32
call_5074 = relay.TupleGetItem(func_1358_call(relay.reshape(const_5075.astype('uint32'), [16, 13, 11])), 2)
call_5076 = relay.TupleGetItem(func_1360_call(relay.reshape(const_5075.astype('uint32'), [16, 13, 11])), 2)
func_3883_call = mod.get_global_var('func_3883')
func_3885_call = mutated_mod.get_global_var('func_3885')
var_5084 = relay.var("var_5084", dtype = "float32", shape = (11, 9))#candidate|5084|(11, 9)|var|float32
call_5083 = func_3883_call(relay.reshape(var_5084.astype('float32'), [11, 1, 9]))
call_5085 = func_3883_call(relay.reshape(var_5084.astype('float32'), [11, 1, 9]))
output = relay.Tuple([bop_5071,call_5074,const_5075,call_5083,var_5084,])
output2 = relay.Tuple([bop_5071,call_5076,const_5075,call_5085,var_5084,])
func_5092 = relay.Function([var_5069,var_5070,var_5084,], output)
mod['func_5092'] = func_5092
mod = relay.transform.InferType()(mod)
var_5093 = relay.var("var_5093", dtype = "int64", shape = ())#candidate|5093|()|var|int64
var_5094 = relay.var("var_5094", dtype = "int64", shape = (2, 4, 15))#candidate|5094|(2, 4, 15)|var|int64
var_5095 = relay.var("var_5095", dtype = "float32", shape = (11, 9))#candidate|5095|(11, 9)|var|float32
output = func_5092(var_5093,var_5094,var_5095,)
func_5096 = relay.Function([var_5093,var_5094,var_5095,], output)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5274 = relay.const([[[-1.451173],[-4.096064],[3.835979],[-9.367133],[-6.954346],[8.128671],[-1.659010],[9.933193],[2.178630],[2.593626],[-1.311909],[9.757304],[-6.413951],[9.862296],[-8.360079],[-7.882978]],[[-7.883487],[-9.595666],[-5.394365],[-9.464180],[2.030807],[-5.650233],[1.666263],[7.232120],[9.664641],[-2.760681],[-2.625560],[3.179764],[0.088648],[-0.127264],[3.809131],[-4.529786]],[[8.553393],[0.913093],[-3.448845],[-3.881055],[-8.571089],[7.466397],[0.774670],[-2.974307],[9.048934],[-1.119528],[-5.340969],[-9.580677],[-1.784241],[3.692462],[6.941944],[9.566427]]], dtype = "float32")#candidate|5274|(3, 16, 1)|const|float32
uop_5275 = relay.cosh(const_5274.astype('float32')) # shape=(3, 16, 1)
func_142_call = mod.get_global_var('func_142')
func_144_call = mutated_mod.get_global_var('func_144')
var_5281 = relay.var("var_5281", dtype = "float64", shape = (507,))#candidate|5281|(507,)|var|float64
call_5280 = func_142_call(relay.reshape(var_5281.astype('float64'), [13, 3, 13]))
call_5282 = func_142_call(relay.reshape(var_5281.astype('float64'), [13, 3, 13]))
func_5092_call = mod.get_global_var('func_5092')
func_5096_call = mutated_mod.get_global_var('func_5096')
var_5285 = relay.var("var_5285", dtype = "int64", shape = ())#candidate|5285|()|var|int64
const_5286 = relay.const([[-6],[4],[9],[8],[10],[5],[7],[-5],[-8],[-10],[-7],[-8],[4],[8],[7],[-5],[-4],[-4],[5],[-5],[7],[-8],[-1],[-1],[5],[-4],[6],[5],[-5],[1],[6],[6],[7],[3],[1],[-8],[9],[7],[10],[9],[-9],[-8],[-6],[6],[6],[3],[5],[2],[-1],[-5],[-2],[-3],[2],[-10],[-9],[-10],[3],[3],[2],[1],[9],[2],[5],[-8],[-8],[1],[8],[4],[7],[4],[5],[4],[1],[1],[9],[1],[-8],[-1],[-6],[1],[2],[7],[-9],[1],[5],[2],[9],[-9],[-3],[4],[-2],[9],[-8],[7],[1],[-8],[-2],[-4],[6],[-7],[-3],[10],[-4],[4],[1],[1],[-3],[-7],[3],[2],[2],[7],[-7],[-6],[-6],[-1],[-1],[3],[-3],[-5]], dtype = "int64")#candidate|5286|(120, 1)|const|int64
const_5287 = relay.const([-5.656752,9.021119,-2.940105,-9.370877,-9.464346,-1.150584,9.970913,9.358548,1.795045,-0.188372,-9.350715,6.841939,-8.134491,-5.622563,-5.760188,4.179831,6.688526,-9.425124,6.115594,4.151222,5.568461,7.617364,-5.296370,4.658416,8.642388,-3.489653,2.629636,5.883338,4.367808,9.862883,-0.295739,-1.104850,2.303931,2.224967,-5.820859,-0.297413,8.963601,-0.101726,-4.162076,9.822528,9.514710,2.394786,0.419214,-9.276227,-3.658832,-0.011885,-4.395175,-3.480189,2.936510,-8.893303,-7.654336,-8.561976,9.263439,6.304796,-1.225874,0.696261,0.857393,-9.446364,-4.249265,9.851188,-5.062980,1.208074,5.285565,-4.193787,8.272940,-5.199765,7.059940,9.859510,3.642840,1.569327,4.490542,0.960793,2.177984,5.029813,-8.153145,9.397792,4.002450,0.969961,-7.493796,9.097511,6.473936,-0.769773,-9.026750,6.766970,-8.838539,-7.072673,4.774291,-1.339546,2.366466,-8.951316,2.488607,9.807135,-2.117805,8.487805,-9.389868,4.158453,-7.928965,8.773690,5.985174], dtype = "float32")#candidate|5287|(99,)|const|float32
call_5284 = relay.TupleGetItem(func_5092_call(relay.reshape(var_5285.astype('int64'), []), relay.reshape(const_5286.astype('int64'), [2, 4, 15]), relay.reshape(const_5287.astype('float32'), [11, 9]), ), 0)
call_5288 = relay.TupleGetItem(func_5096_call(relay.reshape(var_5285.astype('int64'), []), relay.reshape(const_5286.astype('int64'), [2, 4, 15]), relay.reshape(const_5287.astype('float32'), [11, 9]), ), 0)
bop_5309 = relay.add(uop_5275.astype('int8'), const_5287.astype('int8')) # shape=(3, 16, 99)
func_5092_call = mod.get_global_var('func_5092')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_5314 = relay.TupleGetItem(func_5092_call(relay.reshape(var_5285.astype('int64'), []), relay.reshape(call_5284.astype('int64'), [2, 4, 15]), relay.reshape(const_5287.astype('float32'), [11, 9]), ), 4)
call_5315 = relay.TupleGetItem(func_5096_call(relay.reshape(var_5285.astype('int64'), []), relay.reshape(call_5284.astype('int64'), [2, 4, 15]), relay.reshape(const_5287.astype('float32'), [11, 9]), ), 4)
bop_5333 = relay.maximum(const_5274.astype('float32'), const_5287.astype('float32')) # shape=(3, 16, 99)
var_5337 = relay.var("var_5337", dtype = "float64", shape = (13, 3, 13))#candidate|5337|(13, 3, 13)|var|float64
bop_5338 = relay.power(call_5280.astype('float64'), relay.reshape(var_5337.astype('float64'), relay.shape_of(call_5280))) # shape=(13, 3, 13)
bop_5341 = relay.power(call_5282.astype('float64'), relay.reshape(var_5337.astype('float64'), relay.shape_of(call_5282))) # shape=(13, 3, 13)
output = relay.Tuple([var_5281,call_5284,var_5285,const_5286,bop_5309,call_5314,bop_5333,bop_5338,])
output2 = relay.Tuple([var_5281,call_5288,var_5285,const_5286,bop_5309,call_5315,bop_5333,bop_5341,])
func_5342 = relay.Function([var_5281,var_5285,var_5337,], output)
mod['func_5342'] = func_5342
mod = relay.transform.InferType()(mod)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5342_call = mutated_mod.get_global_var('func_5342')
var_5344 = relay.var("var_5344", dtype = "float64", shape = (507,))#candidate|5344|(507,)|var|float64
var_5345 = relay.var("var_5345", dtype = "int64", shape = ())#candidate|5345|()|var|int64
var_5346 = relay.var("var_5346", dtype = "float64", shape = (13, 3, 13))#candidate|5346|(13, 3, 13)|var|float64
call_5343 = func_5342_call(var_5344,var_5345,var_5346,)
output = call_5343
func_5347 = relay.Function([var_5344,var_5345,var_5346,], output)
mutated_mod['func_5347'] = func_5347
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5627 = relay.const([[[6,6,-1,7,-8,-10,-9,-2,1,3],[1,-10,10,1,-3,-5,-7,7,1,1],[-4,-6,1,4,-9,1,2,2,5,7],[-4,-6,-5,-8,-8,-6,9,-7,-10,-2],[9,-3,-5,1,10,-9,-2,7,10,2]],[[4,10,9,-6,8,2,-1,6,-9,7],[7,-6,-1,-6,8,-8,-7,-8,8,9],[-1,-3,3,-10,10,-4,3,8,10,-4],[-4,-3,-3,-9,-4,-6,9,-7,1,-9],[-5,8,2,2,9,-2,-10,-4,-5,-3]],[[3,-2,-9,7,6,-10,8,9,-3,-3],[8,-5,-10,1,-6,-2,4,-3,5,-2],[7,-2,-10,-6,3,-5,-3,-3,-1,-8],[-9,-8,-6,-7,-5,4,8,7,-8,-3],[2,-3,-8,10,1,10,10,-4,-1,7]],[[-9,-7,6,7,7,-4,7,4,4,-7],[-1,8,5,8,-4,-1,8,9,4,-10],[5,-9,-3,-10,-8,5,-5,3,-4,7],[7,-10,8,3,-5,-2,-8,7,-6,10],[3,7,8,-10,-2,2,-7,-8,-2,-6]],[[1,1,10,3,-2,-4,-10,-5,-1,-5],[-1,4,-9,-4,1,-8,-9,4,-7,-9],[-1,4,-4,-2,-3,9,1,-4,6,-1],[-8,-3,-10,-8,5,-3,-10,8,7,10],[4,-8,3,-7,-7,-7,-9,-4,9,-3]]], dtype = "int8")#candidate|5627|(5, 5, 10)|const|int8
var_5628 = relay.var("var_5628", dtype = "int8", shape = (5, 5, 10))#candidate|5628|(5, 5, 10)|var|int8
bop_5629 = relay.bitwise_or(const_5627.astype('int8'), relay.reshape(var_5628.astype('int8'), relay.shape_of(const_5627))) # shape=(5, 5, 10)
func_755_call = mod.get_global_var('func_755')
func_757_call = mutated_mod.get_global_var('func_757')
var_5634 = relay.var("var_5634", dtype = "float32", shape = (6,))#candidate|5634|(6,)|var|float32
call_5633 = relay.TupleGetItem(func_755_call(relay.reshape(var_5634.astype('float32'), [6, 1, 1])), 0)
call_5635 = relay.TupleGetItem(func_757_call(relay.reshape(var_5634.astype('float32'), [6, 1, 1])), 0)
output = relay.Tuple([bop_5629,call_5633,var_5634,])
output2 = relay.Tuple([bop_5629,call_5635,var_5634,])
func_5643 = relay.Function([var_5628,var_5634,], output)
mod['func_5643'] = func_5643
mod = relay.transform.InferType()(mod)
mutated_mod['func_5643'] = func_5643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5643_call = mutated_mod.get_global_var('func_5643')
var_5645 = relay.var("var_5645", dtype = "int8", shape = (5, 5, 10))#candidate|5645|(5, 5, 10)|var|int8
var_5646 = relay.var("var_5646", dtype = "float32", shape = (6,))#candidate|5646|(6,)|var|float32
call_5644 = func_5643_call(var_5645,var_5646,)
output = call_5644
func_5647 = relay.Function([var_5645,var_5646,], output)
mutated_mod['func_5647'] = func_5647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6048 = relay.var("var_6048", dtype = "bool", shape = (1, 9, 15))#candidate|6048|(1, 9, 15)|var|bool
var_6049 = relay.var("var_6049", dtype = "bool", shape = (1, 9, 15))#candidate|6049|(1, 9, 15)|var|bool
bop_6050 = relay.logical_or(var_6048.astype('bool'), relay.reshape(var_6049.astype('bool'), relay.shape_of(var_6048))) # shape=(1, 9, 15)
bop_6058 = relay.floor_divide(var_6048.astype('float64'), relay.reshape(bop_6050.astype('float64'), relay.shape_of(var_6048))) # shape=(1, 9, 15)
uop_6075 = relay.sigmoid(bop_6058.astype('float32')) # shape=(1, 9, 15)
output = relay.Tuple([uop_6075,])
output2 = relay.Tuple([uop_6075,])
func_6077 = relay.Function([var_6048,var_6049,], output)
mod['func_6077'] = func_6077
mod = relay.transform.InferType()(mod)
mutated_mod['func_6077'] = func_6077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mutated_mod.get_global_var('func_6077')
var_6079 = relay.var("var_6079", dtype = "bool", shape = (1, 9, 15))#candidate|6079|(1, 9, 15)|var|bool
var_6080 = relay.var("var_6080", dtype = "bool", shape = (1, 9, 15))#candidate|6080|(1, 9, 15)|var|bool
call_6078 = func_6077_call(var_6079,var_6080,)
output = call_6078
func_6081 = relay.Function([var_6079,var_6080,], output)
mutated_mod['func_6081'] = func_6081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6100 = relay.var("var_6100", dtype = "float64", shape = (10, 16, 12))#candidate|6100|(10, 16, 12)|var|float64
var_6101 = relay.var("var_6101", dtype = "float64", shape = (10, 16, 12))#candidate|6101|(10, 16, 12)|var|float64
bop_6102 = relay.divide(var_6100.astype('float64'), relay.reshape(var_6101.astype('float64'), relay.shape_of(var_6100))) # shape=(10, 16, 12)
func_5041_call = mod.get_global_var('func_5041')
func_5045_call = mutated_mod.get_global_var('func_5045')
var_6108 = relay.var("var_6108", dtype = "float64", shape = (1680,))#candidate|6108|(1680,)|var|float64
const_6109 = relay.const([7.409318,5.218582,-1.853848,-4.191320,1.698158,5.344603], dtype = "float32")#candidate|6109|(6,)|const|float32
call_6107 = relay.TupleGetItem(func_5041_call(relay.reshape(var_6108.astype('float64'), [10, 14, 12]), relay.reshape(const_6109.astype('float32'), [6,]), ), 3)
call_6110 = relay.TupleGetItem(func_5045_call(relay.reshape(var_6108.astype('float64'), [10, 14, 12]), relay.reshape(const_6109.astype('float32'), [6,]), ), 3)
func_142_call = mod.get_global_var('func_142')
func_144_call = mutated_mod.get_global_var('func_144')
call_6128 = func_142_call(relay.reshape(call_6107.astype('float64'), [13, 3, 13]))
call_6129 = func_142_call(relay.reshape(call_6107.astype('float64'), [13, 3, 13]))
func_6077_call = mod.get_global_var('func_6077')
func_6081_call = mutated_mod.get_global_var('func_6081')
var_6139 = relay.var("var_6139", dtype = "bool", shape = (135,))#candidate|6139|(135,)|var|bool
call_6138 = relay.TupleGetItem(func_6077_call(relay.reshape(var_6139.astype('bool'), [1, 9, 15]), relay.reshape(var_6139.astype('bool'), [1, 9, 15]), ), 0)
call_6140 = relay.TupleGetItem(func_6081_call(relay.reshape(var_6139.astype('bool'), [1, 9, 15]), relay.reshape(var_6139.astype('bool'), [1, 9, 15]), ), 0)
uop_6142 = relay.log10(bop_6102.astype('float32')) # shape=(10, 16, 12)
output = relay.Tuple([call_6107,var_6108,const_6109,call_6128,call_6138,var_6139,uop_6142,])
output2 = relay.Tuple([call_6110,var_6108,const_6109,call_6129,call_6140,var_6139,uop_6142,])
func_6152 = relay.Function([var_6100,var_6101,var_6108,var_6139,], output)
mod['func_6152'] = func_6152
mod = relay.transform.InferType()(mod)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6152_call = mutated_mod.get_global_var('func_6152')
var_6154 = relay.var("var_6154", dtype = "float64", shape = (10, 16, 12))#candidate|6154|(10, 16, 12)|var|float64
var_6155 = relay.var("var_6155", dtype = "float64", shape = (10, 16, 12))#candidate|6155|(10, 16, 12)|var|float64
var_6156 = relay.var("var_6156", dtype = "float64", shape = (1680,))#candidate|6156|(1680,)|var|float64
var_6157 = relay.var("var_6157", dtype = "bool", shape = (135,))#candidate|6157|(135,)|var|bool
call_6153 = func_6152_call(var_6154,var_6155,var_6156,var_6157,)
output = call_6153
func_6158 = relay.Function([var_6154,var_6155,var_6156,var_6157,], output)
mutated_mod['func_6158'] = func_6158
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7078 = relay.const([[[-0.673785,1.855264]],[[8.698825,0.080658]],[[-4.052739,-4.122546]],[[-6.949936,-3.122638]],[[-0.711315,-0.829136]],[[-3.927367,-3.739066]],[[-3.810999,-7.288623]],[[5.953762,-9.315181]],[[8.425424,9.361654]],[[4.299242,2.719750]],[[-9.438324,-8.958780]],[[-9.654251,6.729972]]], dtype = "float32")#candidate|7078|(12, 1, 2)|const|float32
uop_7079 = relay.log(const_7078.astype('float32')) # shape=(12, 1, 2)
func_1854_call = mod.get_global_var('func_1854')
func_1857_call = mutated_mod.get_global_var('func_1857')
var_7084 = relay.var("var_7084", dtype = "float32", shape = (2304,))#candidate|7084|(2304,)|var|float32
var_7085 = relay.var("var_7085", dtype = "float32", shape = (42,))#candidate|7085|(42,)|var|float32
call_7083 = relay.TupleGetItem(func_1854_call(relay.reshape(var_7084.astype('float32'), [12, 12, 16]), relay.reshape(var_7085.astype('float32'), [14, 3]), ), 3)
call_7086 = relay.TupleGetItem(func_1857_call(relay.reshape(var_7084.astype('float32'), [12, 12, 16]), relay.reshape(var_7085.astype('float32'), [14, 3]), ), 3)
output = relay.Tuple([uop_7079,call_7083,var_7084,var_7085,])
output2 = relay.Tuple([uop_7079,call_7086,var_7084,var_7085,])
func_7098 = relay.Function([var_7084,var_7085,], output)
mod['func_7098'] = func_7098
mod = relay.transform.InferType()(mod)
mutated_mod['func_7098'] = func_7098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7098_call = mutated_mod.get_global_var('func_7098')
var_7100 = relay.var("var_7100", dtype = "float32", shape = (2304,))#candidate|7100|(2304,)|var|float32
var_7101 = relay.var("var_7101", dtype = "float32", shape = (42,))#candidate|7101|(42,)|var|float32
call_7099 = func_7098_call(var_7100,var_7101,)
output = call_7099
func_7102 = relay.Function([var_7100,var_7101,], output)
mutated_mod['func_7102'] = func_7102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7629 = relay.var("var_7629", dtype = "float32", shape = (7, 2, 9))#candidate|7629|(7, 2, 9)|var|float32
uop_7630 = relay.log10(var_7629.astype('float32')) # shape=(7, 2, 9)
output = uop_7630
output2 = uop_7630
func_7653 = relay.Function([var_7629,], output)
mod['func_7653'] = func_7653
mod = relay.transform.InferType()(mod)
mutated_mod['func_7653'] = func_7653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7654 = relay.var("var_7654", dtype = "float32", shape = (7, 2, 9))#candidate|7654|(7, 2, 9)|var|float32
func_7653_call = mutated_mod.get_global_var('func_7653')
call_7655 = func_7653_call(var_7654)
output = call_7655
func_7656 = relay.Function([var_7654], output)
mutated_mod['func_7656'] = func_7656
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7668 = relay.const([[[-6,4,-5,3,6,-6,1,-9,6,7],[-2,-5,-5,-3,-3,-4,-7,-10,-7,-6]],[[4,7,-3,-10,-4,2,-2,-2,1,7],[2,10,2,-10,5,-2,-9,6,-3,2]],[[5,-7,10,5,-7,-3,6,8,7,6],[3,3,-7,3,-7,-9,-6,-1,-8,-8]],[[-9,-3,6,2,9,-5,6,-4,7,2],[2,-10,10,7,-8,-2,-7,3,-8,9]],[[4,2,4,-4,-5,6,-10,10,-8,7],[-3,6,-5,5,7,-3,-10,3,-2,4]],[[5,-7,-6,4,-3,3,-1,-7,-7,2],[-6,5,1,-9,-6,2,-5,-6,-7,7]],[[1,-7,-9,9,-7,-2,-9,1,6,4],[-5,3,7,-2,-2,-6,1,5,6,-5]],[[-8,-7,5,-6,-10,-5,9,4,9,-10],[-7,4,-10,7,5,-10,-1,10,7,-9]],[[6,-1,-3,-3,-2,-5,-9,-6,-10,-4],[7,9,-3,3,5,-4,-7,-10,-1,-5]],[[3,-2,9,-3,1,3,3,5,3,3],[-2,-10,1,9,2,5,-4,-10,-4,-1]],[[10,2,-7,9,-7,-7,9,-7,-9,4],[-10,7,-5,8,-9,6,-2,5,7,9]],[[-6,2,8,-10,6,8,-3,4,3,-7],[9,-4,-2,-2,2,-3,-2,8,6,6]]], dtype = "int8")#candidate|7668|(12, 2, 10)|const|int8
var_7669 = relay.var("var_7669", dtype = "int8", shape = (12, 2, 10))#candidate|7669|(12, 2, 10)|var|int8
bop_7670 = relay.logical_xor(const_7668.astype('int8'), relay.reshape(var_7669.astype('int8'), relay.shape_of(const_7668))) # shape=(12, 2, 10)
func_3883_call = mod.get_global_var('func_3883')
func_3885_call = mutated_mod.get_global_var('func_3885')
const_7686 = relay.const([-1.782786,-9.911420,2.600169,4.756796,-3.701380,-0.091834,-6.209070,-0.808535,-8.774867,0.708931,-8.056158,2.557797,-7.897166,-2.506433,-2.693779,-7.369674,9.331056,8.651449,-3.910152,6.075000,-3.632573,5.489059,6.683869,0.568677,-8.548605,7.388850,-8.625347,-1.332716,-7.589725,-9.164928,-5.660293,3.911862,-1.831783,-4.584265,-0.399052,1.813752,9.035305,4.147748,-0.273189,-8.974716,4.434298,8.117879,-3.244665,-3.516772,-5.765983,3.810986,5.698589,-7.099766,0.589585,-2.846804,7.419206,-2.025472,3.936126,1.302306,-2.215691,-5.968102,4.377052,1.134832,5.239560,1.516965,-6.863876,-9.367439,6.240615,6.024764,8.339309,-7.389296,9.988835,5.278923,-0.114591,-7.616179,-6.591824,-4.046922,-2.105237,5.853732,9.947372,2.763471,6.369297,4.600846,7.321730,3.664673,5.935140,8.042728,-6.718068,6.412558,6.504100,5.942442,-6.662600,-4.963368,8.881254,1.103209,-2.472978,6.701419,-6.215067,-3.458705,0.508694,8.273547,-6.708950,-4.761756,7.829518], dtype = "float32")#candidate|7686|(99,)|const|float32
call_7685 = func_3883_call(relay.reshape(const_7686.astype('float32'), [11, 1, 9]))
call_7687 = func_3883_call(relay.reshape(const_7686.astype('float32'), [11, 1, 9]))
output = relay.Tuple([bop_7670,call_7685,const_7686,])
output2 = relay.Tuple([bop_7670,call_7687,const_7686,])
func_7692 = relay.Function([var_7669,], output)
mod['func_7692'] = func_7692
mod = relay.transform.InferType()(mod)
var_7693 = relay.var("var_7693", dtype = "int8", shape = (12, 2, 10))#candidate|7693|(12, 2, 10)|var|int8
output = func_7692(var_7693)
func_7694 = relay.Function([var_7693], output)
mutated_mod['func_7694'] = func_7694
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8081 = relay.var("var_8081", dtype = "float64", shape = (16, 1, 10))#candidate|8081|(16, 1, 10)|var|float64
uop_8082 = relay.log10(var_8081.astype('float64')) # shape=(16, 1, 10)
func_5092_call = mod.get_global_var('func_5092')
func_5096_call = mutated_mod.get_global_var('func_5096')
const_8095 = relay.const(3, dtype = "int64")#candidate|8095|()|const|int64
const_8096 = relay.const([-10,3,6,-5,7,-7,6,-8,-10,10,4,-7,-5,-5,6,-9,-3,-2,-8,8,-4,-2,10,-3,-10,6,-7,2,-1,2,5,4,6,8,7,-9,-10,-3,2,3,-7,7,1,7,8,-9,-1,-2,-1,10,8,-8,2,-1,7,6,10,-9,-5,-4,8,-6,8,-5,-10,-8,-4,-7,10,-3,-9,-3,4,-1,-10,2,8,-6,-7,7,6,4,-2,8,-8,-8,-2,7,3,-7,-4,-1,-8,-9,8,2,1,-5,8,4,-6,2,-3,8,-6,-1,5,-3,8,9,9,-9,-9,3,10,1,2,-8,2,-3], dtype = "int64")#candidate|8096|(120,)|const|int64
var_8097 = relay.var("var_8097", dtype = "float32", shape = (99,))#candidate|8097|(99,)|var|float32
call_8094 = relay.TupleGetItem(func_5092_call(relay.reshape(const_8095.astype('int64'), []), relay.reshape(const_8096.astype('int64'), [2, 4, 15]), relay.reshape(var_8097.astype('float32'), [11, 9]), ), 2)
call_8098 = relay.TupleGetItem(func_5096_call(relay.reshape(const_8095.astype('int64'), []), relay.reshape(const_8096.astype('int64'), [2, 4, 15]), relay.reshape(var_8097.astype('float32'), [11, 9]), ), 2)
output = relay.Tuple([uop_8082,call_8094,const_8095,const_8096,var_8097,])
output2 = relay.Tuple([uop_8082,call_8098,const_8095,const_8096,var_8097,])
func_8109 = relay.Function([var_8081,var_8097,], output)
mod['func_8109'] = func_8109
mod = relay.transform.InferType()(mod)
mutated_mod['func_8109'] = func_8109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8109_call = mutated_mod.get_global_var('func_8109')
var_8111 = relay.var("var_8111", dtype = "float64", shape = (16, 1, 10))#candidate|8111|(16, 1, 10)|var|float64
var_8112 = relay.var("var_8112", dtype = "float32", shape = (99,))#candidate|8112|(99,)|var|float32
call_8110 = func_8109_call(var_8111,var_8112,)
output = call_8110
func_8113 = relay.Function([var_8111,var_8112,], output)
mutated_mod['func_8113'] = func_8113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8215 = relay.var("var_8215", dtype = "float32", shape = (12, 6, 12))#candidate|8215|(12, 6, 12)|var|float32
uop_8216 = relay.log(var_8215.astype('float32')) # shape=(12, 6, 12)
func_7098_call = mod.get_global_var('func_7098')
func_7102_call = mutated_mod.get_global_var('func_7102')
var_8224 = relay.var("var_8224", dtype = "float32", shape = (2304,))#candidate|8224|(2304,)|var|float32
var_8225 = relay.var("var_8225", dtype = "float32", shape = (14, 3))#candidate|8225|(14, 3)|var|float32
call_8223 = relay.TupleGetItem(func_7098_call(relay.reshape(var_8224.astype('float32'), [2304,]), relay.reshape(var_8225.astype('float32'), [42,]), ), 3)
call_8226 = relay.TupleGetItem(func_7102_call(relay.reshape(var_8224.astype('float32'), [2304,]), relay.reshape(var_8225.astype('float32'), [42,]), ), 3)
const_8229 = relay.const([[[3.672503,9.668931,-4.611171,-1.992119,-5.634497,-7.826434,-8.009556,-1.819461,-6.969845,-5.652433,9.083968,0.657632],[-4.354067,-1.356750,-9.656380,-3.999634,9.527676,8.029842,-2.426341,3.334026,0.693441,9.730946,5.704153,-6.771171],[-7.005775,1.016360,1.458054,1.681367,-5.714187,-9.890700,6.339390,-0.944383,4.075802,0.329351,0.175771,-5.605569],[-5.318551,8.774898,7.627308,9.279524,-7.628389,5.260145,6.017966,5.298530,-8.763012,-7.413085,-5.984539,-8.732032],[-6.225033,1.925807,-3.075576,7.837133,5.021479,-2.373918,-7.281209,5.357640,0.950582,0.711214,9.486524,-0.154557],[-6.955099,5.071863,-0.582187,-3.073170,2.437919,-5.269996,3.400716,3.807796,-0.434216,4.162855,6.632544,-9.415533]],[[7.030966,-5.072727,-2.607224,-7.073319,4.796801,-4.535920,-8.827328,6.033727,-7.079184,9.337499,3.654242,3.991714],[9.889454,-8.072937,3.929229,0.407069,-7.192069,3.586037,-0.887095,-1.583420,4.519598,3.435784,0.215479,-8.625328],[1.811743,-4.569647,-6.677226,-8.828855,-9.009380,-7.955259,4.813138,2.191374,0.459085,9.756910,-3.475295,-7.721539],[-4.658939,0.251952,-9.939593,5.207658,-1.438356,-3.733133,9.837457,-9.709677,2.371094,2.244712,-3.181702,0.745209],[7.774207,6.290190,-6.752784,-8.474076,-4.292784,-3.158680,3.442304,-3.869797,6.277805,-2.568559,2.297501,7.860366],[5.998736,-2.407988,9.189711,-7.503143,-9.576895,-6.815876,9.348266,3.889796,6.110521,-1.008180,3.702567,-2.167795]],[[9.334605,-9.665004,6.613630,6.294544,-1.632676,-5.065450,9.246327,2.754308,-3.250088,-5.524952,-1.133419,1.149823],[-5.798526,-1.154755,-7.464051,-4.802046,7.982703,4.091802,-0.924711,1.453106,-5.371809,-9.389558,-3.346317,6.094412],[-3.815304,-2.932967,6.176765,-6.576182,9.687674,0.124171,4.343658,2.908974,-3.488045,2.585797,-9.820606,-7.216640],[-4.728433,-1.745256,-0.778397,4.426643,-6.319143,9.290602,-0.510681,4.718908,-6.158725,4.177638,-2.257246,-6.988202],[3.645076,-3.304760,-1.995290,-1.742831,0.482918,-7.464586,-7.166756,-7.659433,0.266747,-3.976184,1.628029,-7.486888],[4.727401,8.705308,-6.570161,-0.970075,2.412325,7.125372,5.757105,-2.560800,0.938818,-9.060989,4.502565,-1.571462]],[[-6.466644,-1.043670,-9.086046,8.171937,-9.423266,8.955410,-2.624401,4.188035,-9.715752,-1.723455,-0.652255,2.354391],[2.047252,-1.682489,-1.826997,7.033379,5.976065,9.868102,-3.448034,8.424514,7.674727,-1.828955,7.019727,-9.398472],[-8.269574,7.899748,9.805748,-5.701599,4.864503,4.951893,8.073887,-5.932228,-8.381208,-4.948051,7.091478,-3.025914],[1.591237,-7.564831,-9.946909,-5.576492,2.997876,8.766722,-1.131172,8.699406,-3.524333,-7.168520,-8.108610,5.875018],[-3.805514,4.044554,0.063221,-8.376476,-1.821221,2.831614,5.371647,-1.254240,-7.375003,-9.699385,7.709358,-5.580784],[-6.255891,-6.745903,0.663460,-5.436887,6.945494,8.982690,5.439455,3.588856,4.344036,-5.666056,4.898079,4.540972]],[[-2.351429,-4.498302,-8.574412,-4.935733,7.763921,2.713254,-8.428316,-4.525855,4.967634,-0.066850,-4.909440,8.064218],[6.195046,-5.866526,-3.035783,-6.943212,5.543885,-9.200868,2.541536,7.837344,8.602374,7.960095,-9.195747,-8.930570],[-9.214385,-6.647737,-7.428741,-2.995249,7.865995,-2.070355,-7.899092,-9.527612,-0.303397,5.903471,7.646129,-7.493085],[7.041291,-6.184943,-1.211344,-2.039520,-6.849071,0.405430,-9.202412,-2.643937,-4.493494,3.163983,9.882317,2.858648],[-2.265879,9.132415,4.518521,2.072804,2.815895,-7.195020,-0.610437,-4.155014,2.944218,1.167778,9.994769,1.513926],[6.082501,2.000887,-0.367557,-4.417838,5.665219,4.241475,9.782143,-2.321153,-6.461874,-2.751688,9.261080,5.767859]],[[-7.211098,-9.766370,-9.160271,-3.014189,-3.165134,-4.075846,-0.122123,1.102918,-6.671074,-7.306411,9.903015,1.474282],[6.437738,-4.753286,-7.972917,6.897658,4.854334,6.921904,6.294961,8.994375,5.222562,-3.218226,-9.581330,8.426400],[-0.941377,-5.183292,-1.849861,-1.888746,-3.122977,-0.238388,-5.979836,4.858609,0.658334,-7.312705,-7.189308,-4.939859],[9.541111,7.816348,6.835920,0.210566,-4.930563,7.067965,4.298117,-9.458471,8.982513,-9.204923,-3.410768,5.583234],[-5.691269,-6.120595,6.869767,-1.845792,-1.069506,-2.977277,3.551204,7.172325,2.959602,-1.488082,-3.919264,-1.996082],[-3.218237,-1.254015,8.656474,-4.816720,2.781112,-7.346180,-1.277601,8.895076,2.320594,-3.304436,0.754522,-8.959051]],[[-8.790358,4.936094,-6.316321,-6.219536,3.268844,1.596233,-8.196391,-2.432880,8.100090,-4.097772,-4.696238,-1.936332],[3.769276,-5.810574,-1.354701,-1.413081,2.295213,-5.929956,1.823017,-3.680513,9.198864,5.081234,-8.335922,3.531733],[0.292097,5.700108,7.471194,4.326102,-1.394066,-4.005991,-5.421023,9.762994,-1.364842,9.766079,0.221247,-9.099146],[-9.701022,-3.094008,-6.865846,-1.638256,-8.238349,7.766946,1.657777,-0.851879,-5.536197,-0.473667,8.070815,-8.679866],[4.413109,-0.878481,-5.561127,2.664970,-1.846449,6.084452,2.186637,-6.983558,4.238008,-4.434314,-0.980367,-7.781068],[1.698502,-0.012015,-8.909797,-8.663314,-8.290655,-4.028303,-6.355054,4.952941,-7.792532,1.258086,-9.955108,7.257681]],[[7.822597,-0.028164,-4.849271,-0.820934,-4.223327,1.374098,6.875773,-9.402090,-3.010953,-3.443526,4.249085,0.413525],[-9.449943,6.225991,1.100699,-8.989124,-7.509812,-9.537911,6.111269,-3.373773,2.224717,5.717307,-7.139481,6.926338],[-4.361766,1.620096,0.202613,7.585936,3.785549,8.352247,2.996340,1.200632,-2.703317,3.795787,-1.994996,5.868125],[7.157111,-8.228846,6.265620,-5.571158,-2.998238,4.313667,-1.949852,6.616999,3.448963,-1.759501,8.666725,1.008890],[-1.799696,6.375117,-7.744823,-3.381734,7.393166,2.714562,-2.462824,6.164734,1.276965,1.165912,4.233537,4.030403],[6.024388,-4.182764,8.574404,-4.643987,-1.455553,-3.568606,9.505572,-0.874608,-1.714217,7.618306,6.729091,1.881959]],[[9.209427,-3.968244,2.238136,1.622232,-1.820019,7.410083,9.013874,9.960355,-1.667538,8.462732,-0.560177,-3.435540],[1.710097,-4.969166,-0.425255,-0.355705,-5.010940,1.548831,-6.656429,-2.518043,-6.103437,2.055415,1.439329,4.742983],[-0.031597,7.442514,-6.480994,2.529809,5.608385,-7.907771,9.557005,9.528756,0.497625,-9.636945,-4.500717,-5.414047],[-0.817619,-8.233497,-7.650791,3.627470,-8.597712,-8.880518,6.608357,0.816260,5.563052,-4.954940,-6.165399,-0.575741],[-7.357529,6.201912,8.655723,8.293286,7.644916,1.166861,5.125353,8.888955,-1.587567,-8.532436,1.946092,-2.137183],[2.498281,-0.541048,4.187267,-9.560383,5.655440,-4.857947,7.785385,-7.368785,3.524049,4.337959,0.424451,3.634185]],[[-3.278642,6.486639,0.661556,-9.302454,-4.424199,-7.683190,4.978731,-2.888224,-4.919015,8.638279,-8.874334,2.962283],[4.874769,8.646130,4.134102,-3.040871,-3.228031,8.383110,-4.181587,4.335995,-7.285686,-1.134818,-0.217423,-7.627960],[8.964768,-8.602478,-6.542775,3.900539,-8.656039,-9.349302,8.668543,7.596498,-5.159188,0.138150,-5.061172,3.248545],[-2.958212,-2.339202,-8.497186,-8.059108,-1.859896,-7.348332,-7.758564,9.332041,-6.797482,-2.586796,-2.642181,5.089937],[-1.673563,7.329553,6.961145,-8.793290,-8.219268,-6.707846,7.413335,-0.912089,-0.730136,-5.911942,2.538067,0.321918],[3.990900,5.186689,-3.563935,-2.257040,-9.241577,2.912950,2.822542,5.578320,4.729419,-8.814281,-5.789557,-3.029373]],[[6.319326,3.548574,-7.902151,-8.296410,-2.262431,-1.658296,5.684197,-6.034405,-5.985649,0.993184,9.175893,-4.366180],[3.472286,1.332021,2.136114,-3.669601,5.053497,4.489809,-8.214799,7.154354,-0.126166,8.205589,7.330979,8.885906],[-5.543747,4.551547,9.264393,-0.619589,-5.578442,5.608323,8.418923,2.168170,1.465384,0.964409,-7.033804,4.435945],[-1.390801,-2.401085,-6.004332,9.827415,0.323488,-3.394027,-4.794949,6.156469,-2.498462,2.835876,-5.607838,-6.976260],[9.353283,7.117274,7.783480,-8.019859,-2.919675,3.922350,-4.195336,9.194362,2.464356,3.070808,-2.518107,-7.271520],[2.244415,-2.504244,-0.657405,0.582286,-9.824063,-7.504171,5.185364,1.213437,3.710191,-7.726195,-6.975629,9.820921]],[[7.182702,2.513108,2.605758,9.261888,1.954608,-9.294510,-6.145443,-8.146712,2.730798,-8.496833,6.426860,-2.421628],[-1.266001,0.045364,-1.819879,-2.636527,0.652743,6.633259,-0.223948,8.920238,-3.628502,3.033058,0.322893,-3.878645],[-3.170565,-7.461970,-1.272805,7.384202,7.671486,3.435857,7.712471,-2.707397,-7.023436,-3.676380,-1.799894,-8.693230],[7.774803,1.235546,1.057571,0.284141,0.168029,-1.386802,-7.542791,-0.725601,-3.121494,8.877937,-2.012751,-5.525768],[3.288515,1.363454,-1.282493,9.533349,5.599528,-2.388923,-6.282789,5.615731,8.552943,3.910083,3.967480,-6.148231],[-8.183100,9.844654,6.128853,9.000290,-0.202581,-2.123454,-0.831398,1.372459,-2.690336,6.761736,3.314589,-4.842857]]], dtype = "float32")#candidate|8229|(12, 6, 12)|const|float32
bop_8230 = relay.greater_equal(uop_8216.astype('bool'), relay.reshape(const_8229.astype('bool'), relay.shape_of(uop_8216))) # shape=(12, 6, 12)
bop_8254 = relay.bitwise_or(uop_8216.astype('uint32'), relay.reshape(var_8215.astype('uint32'), relay.shape_of(uop_8216))) # shape=(12, 6, 12)
func_6152_call = mod.get_global_var('func_6152')
func_6158_call = mutated_mod.get_global_var('func_6158')
const_8259 = relay.const([-6.499551,8.081333,9.296755,-7.496154,3.354902,8.610400,6.901107,7.069774,7.950351,2.054544,-1.697655,-7.649120,-4.989171,-6.175575,2.464882,7.135749,3.762507,1.022181,-4.871430,4.222052,8.955678,8.594814,5.424535,-5.120680,-2.581293,-2.621240,-3.836495,-1.873365,-4.413125,1.086035,5.534295,-1.004942,5.608492,-1.204304,4.722427,-6.427070,-8.348118,8.022884,-9.661622,-0.573420,1.948604,-7.508405,-8.086667,4.500036,3.405237,-9.700199,4.463016,8.469355,-1.085423,-2.683240,-1.742642,-8.063411,-3.824498,-9.586899,6.611965,4.706531,-8.428871,2.883901,-8.500382,8.487205,6.358936,0.113382,-4.404420,2.753561,-5.144417,5.925420,-8.770300,7.112405,1.320206,-5.926077,1.698574,-3.397019,7.660159,-1.761147,-6.159325,1.197591,6.183513,-8.020096,2.823055,-3.883893,-5.018645,-8.086579,3.125782,8.909778,-2.376517,3.767149,-8.777965,0.528513,2.642431,3.914021,6.121451,3.208969,5.809587,3.132655,-1.647486,-0.871331,7.452176,2.744949,4.583824,3.589397,-3.468078,9.080403,-8.930576,-9.228301,-0.110706,5.737436,-9.768070,-6.353900,3.015722,7.868265,4.541320,-0.159915,-9.001228,2.652176,-2.687110,0.362975,2.840271,2.374130,1.808068,-9.696872,-1.102542,-0.077823,-8.583986,-1.087490,-8.319924,6.859161,-5.186934,-5.440462,-5.008666,-0.785469,-6.944159,3.069877,-9.065584,-8.657938,6.178604,4.292492,-4.582548,-9.473093,-2.280895,-0.934091,-0.642686,-4.005677,2.895326,-3.775178,-7.045813,6.512739,-0.087880,-6.020187,0.594964,7.463735,4.904663,-2.303541,-3.668040,6.415127,-2.070751,5.812651,2.204355,5.338192,-2.085445,-1.520367,-2.525349,0.297555,6.469062,6.207978,-8.877552,7.968692,5.461643,-6.485095,-1.914653,-9.437613,4.619849,-3.286544,5.241123,-3.637672,8.014039,-1.505414,-6.357924,-5.023157,5.949961,-5.754646,-6.332478,-2.410916,-3.985646,7.057673,-1.386360,5.710726,8.523708,-1.809058,5.737289,-3.748096,-0.468005,-4.442882,6.695784,-8.804932,-0.133609,-6.380081,-0.474506,-7.599019,1.352838,5.846618,8.264128,-1.785695,-8.515355,6.857549,1.105910,-1.464283,-5.728340,-1.844889,-2.874192,-7.474048,4.646553,9.361794,5.661395,-3.304562,-1.878586,-6.021312,-7.853517,-7.781996,-4.839670,-5.740117,-4.139858,5.684024,9.216520,-1.410437,-6.350324,-5.472453,0.968220,0.272595,4.949473,-8.877365,7.389331,4.983814,5.642889,7.711151,6.053966,8.603065,-3.975951,-2.911682,-7.125854,0.678414,-7.186198,-7.581091,-1.251842,-0.281232,-2.478397,7.995897,-2.274489,8.464803,-1.597556,5.076684,9.233471,9.732900,1.684942,7.224609,-9.464425,-9.888081,6.136985,1.175006,-8.041003,2.590456,-3.833596,-7.858527,-8.298723,-4.145664,-4.361137,-5.141707,-7.486816,-6.982671,-6.389270,3.473834,-7.520146,0.317818,-1.595911,5.389152,-7.069090,3.592139,4.559620,3.646098,-5.738969,4.192625,5.756834,-6.496451,4.941391,5.600524,-8.202966,2.117910,-7.061289,-3.502050,0.813334,1.877741,2.880673,-9.031859,1.774445,-0.937611,0.684136,-0.139200,1.788010,-9.521482,4.482202,-5.812252,-5.181166,6.930490,-2.006908,2.839249,5.889348,-1.678161,-9.101210,-4.246679,-1.250579,0.887517,-7.658147,8.141068,-1.265458,-7.878548,4.017868,1.781285,-0.862407,1.604458,8.605544,-7.820145,0.489270,2.868133,4.797796,6.162595,-3.294386,5.204303,7.615752,-5.868649,-3.733127,3.227354,-1.866724,4.554324,1.863503,8.555622,-2.290376,-4.630624,-3.440217,2.106713,6.070042,-5.003060,4.954901,-4.226287,-3.313373,-0.774538,7.813738,-8.052815,-8.858791,5.835841,-1.388505,-5.882969,-5.736742,7.158385,-4.810137,7.200485,3.360479,2.136985,5.926955,3.385231,3.331108,8.945082,-9.338986,-2.921014,7.389025,-2.413727,-4.963759,-4.657770,8.037082,-0.178923,-0.924259,9.366718,9.500144,-2.851496,-0.987877,-1.571548,4.021595,5.343724,9.243132,5.850570,1.412081,5.191247,-5.975348,-4.669523,7.943454,-0.112585,-7.924766,7.748945,-7.267714,6.947794,-2.008251,-2.191819,5.942241,0.514649,2.821947,2.581979,-4.390109,4.277550,4.886432,6.020333,-2.504434,-5.459025,4.904533,-5.223349,-3.938695,3.983730,9.582147,-0.079312,1.543654,7.220981,-6.655579,5.548620,7.435336,-1.914237,-4.477040,2.481218,7.951791,-6.458242,-5.082068,-0.633968,-0.294399,0.536137,-2.878353,-5.669473,1.140171,-6.945163,-9.007044,-6.057135,-1.557947,-9.838006,-1.933122,7.287166,-5.387972,8.981765,-5.858016,6.794758,6.283975,-1.383722,-5.552439,7.457713,5.056545,-6.640421,2.477370,8.682247,2.181907,-1.202652,-4.953316,5.519439,0.504262,9.291496,-5.972720,-6.268990,2.469403,4.834612,2.761358,2.220169,9.838604,0.229689,-7.821266,-9.529693,-6.689246,-0.534494,0.596527,4.634978,-4.009397,-6.242050,7.576973,-0.023812,-0.178717,9.591595,-5.872041,-7.101210,-5.038318,-3.109239,-5.874527,-0.388587,1.597403,5.808546,-9.461466,-2.149906,7.804576,4.622008,0.294189,4.638067,-1.851402,-2.284212,8.373585,-3.486216,-0.932134,3.573902,2.280324,9.493872,-5.767881,1.112129,-6.627924,8.066303,6.056496,-6.250484,-6.164847,-9.372204,-8.407184,2.693417,3.021321,9.540907,-6.140331,-0.360900,-1.813709,-3.423795,1.583448,6.801323,6.998760,0.743442,-9.990921,-2.023785,-3.189744,0.001589,4.465933,-6.275062,-2.832208,-5.821473,-7.934728,-1.349956,-3.008201,3.340560,8.582376,8.564332,5.358502,3.515525,9.963027,-9.409211,-9.007407,-8.765042,-5.877763,-1.254182,7.902676,8.660010,0.792332,-5.387269,4.324296,3.851416,0.572914,6.436219,-1.396495,-6.225542,-0.977316,3.470700,-0.656390,-8.566093,-3.007230,3.247870,6.066765,-4.429492,-9.242957,4.994551,-8.029845,-9.035791,9.414832,1.125817,-2.083691,3.027148,-1.464568,6.715820,7.212003,-8.916080,-1.865461,3.053413,-6.118345,1.524470,-4.107844,-5.077723,3.095292,-2.704229,7.131952,-8.246248,4.194673,-2.404683,-2.095308,-4.838114,-8.235035,-5.667191,-9.254809,-3.569083,1.591566,-7.933075,-5.219081,-0.850538,3.550440,3.086174,-8.785166,3.985937,6.591445,-3.906576,0.266556,7.535992,7.994961,3.414741,7.759402,-6.183532,2.623061,6.495026,-8.530413,5.226258,-5.478389,-9.185352,9.076989,6.404003,9.597934,-5.303632,-7.907051,-6.607348,0.544045,-0.309688,-2.865868,4.728325,0.838019,9.854157,0.095607,0.676193,3.453736,-8.428585,7.966881,-3.389589,0.303608,-0.544762,-6.131086,7.386494,-4.911911,2.101498,2.503400,-6.302883,4.335295,-8.332145,-7.975820,-3.422940,6.364799,-7.629042,-7.702432,4.589802,-8.069079,-9.116615,6.071871,-9.055373,7.701697,-9.001573,3.067685,3.983826,-2.746933,5.805273,4.864676,6.137171,-4.152103,-7.868684,-6.005157,2.762082,9.067594,4.666053,2.784743,-1.492815,7.400685,8.856481,4.678743,2.345832,-4.976923,-5.499580,7.789993,-8.784850,-0.604163,-6.058389,5.527001,9.391414,7.208086,8.531728,-5.626080,7.829597,-7.158680,-0.297835,0.470360,3.984444,-7.129016,-6.924412,0.346437,-8.128668,3.974892,-5.003364,-1.419867,0.480139,9.290555,-4.648634,-1.216974,9.766617,5.782669,-4.712792,-3.015403,-8.156331,6.463885,-2.964158,-1.759073,-5.987319,4.068671,-6.597989,-1.730187,-4.039647,-5.819918,-9.239159,-9.455109,8.736524,5.547768,2.170144,5.123258,4.096226,-4.574624,-6.280686,-4.820350,-8.944723,9.176624,2.705691,-8.549961,9.601880,-1.124100,4.049466,-6.227803,-5.111572,-3.533385,9.764171,-7.128251,-1.328311,-8.443091,7.581355,-8.423896,-2.396895,-2.329687,7.689076,1.067052,1.578395,-5.435044,7.051758,2.315834,6.599670,5.912080,7.316186,5.422350,-1.656357,-4.184765,-7.735836,8.363307,9.695167,-7.155071,-7.884108,9.278725,3.747974,-9.742059,-3.040449,3.237994,1.586315,-5.754384,-8.766099,-2.745717,2.689673,-9.021921,9.306959,3.014004,6.273499,-4.098323,3.886707,9.710635,7.661500,6.842892,5.555041,0.869526,5.774327,8.593000,6.857374,-2.712309,0.892386,-5.898507,-6.528123,1.572321,5.726918,9.316214,6.106355,-8.338204,-6.712006,2.510708,-8.722457,-8.407991,-0.568148,7.372090,-5.937187,5.861219,-8.594049,-0.538411,6.345294,-6.624249,5.358529,9.940572,-4.089764,-4.437034,-6.750730,-8.072772,-3.217104,-5.640884,-4.508390,7.266583,-3.069918,-2.985946,-2.159036,9.567151,-7.574808,3.117838,-6.824750,4.333716,-7.244945,2.339572,0.505369,2.174289,8.083616,-4.535391,3.742698,-8.966762,-0.646319,-9.834389,3.916961,-9.721823,8.243664,-4.658696,7.874240,-4.361685,7.779559,-0.240390,9.324617,-4.825844,0.892274,-1.980330,-8.529372,-1.541662,-2.964057,-5.788063,9.768763,5.176912,-0.681060,-0.339281,9.808192,0.233674,-2.896037,1.369776,7.461630,-9.436154,8.488878,9.807418,7.239647,-9.987333,-7.156485,-1.949350,-1.119763,-9.929967,8.383493,-4.668298,8.175868,1.889752,3.197519,2.034013,-3.055732,5.452787,-0.837461,-6.838959,9.144790,8.112273,4.622599,3.063133,-7.882736,-3.647233,-7.988669,-3.582931,-7.746333,8.107354,5.926856,-2.891298,1.495853,3.116356,-7.930139,0.647969,-2.191190,2.416190,-2.279849,4.345385,-0.502010,-6.048702,-2.119439,-2.766742,-0.758682,-0.444833,-1.326718,-2.699282,2.026745,7.057044,9.733394,4.032489,-9.324502,3.594739,7.023500,5.639760,-8.319939,-2.497218,-7.647571,4.563875,-5.322955,-0.799049,-7.196026,-8.341918,-1.116117,4.426299,9.249585,-9.761035,8.096476,-8.936801,-2.721810,-7.864694,-6.763807,-7.241208,8.544512,1.353887,6.082281,-8.993988,-9.698534,5.297751,-3.288255,-9.767640,4.611390,1.274298,-8.878371,4.794132,0.219733,8.519433,-7.223695,7.562470,3.763801,-9.230432,-5.376933,-2.317592,7.849125,-0.812303,-6.814984,9.450605,3.830570,-8.468905,6.060445,-0.280299,7.710614,-3.475692,0.264606,6.550373,-0.541774,-1.606200,-1.668481,-8.485304,-3.770567,-0.895100,4.624319,6.428354,-5.737113,5.234888,1.478223,9.791262,2.223058,6.122904,5.353313,-5.483939,-0.972865,-6.795761,2.143678,-3.673891,8.350212,9.775408,9.156656,6.817517,-4.886153,8.042650,0.584936,8.233099,-7.410752,0.838140,7.373347,0.609652,-3.037348,8.813793,-5.798467,-5.522787,-9.242639,1.946665,-7.609842,4.624582,2.320278,-6.802224,3.536777,3.111654,-2.352688,2.736198,-5.828425,7.781820,1.643644,1.771370,3.468294,3.612463,8.840748,4.309652,-5.812319,-6.721286,6.585524,-1.927281,-4.623014,-3.862306,-0.958036,6.585343,-1.276347,-9.196115,1.510201,-9.693095,9.872219,-7.757108,-2.029651,-7.151852,-1.522767,-4.300360,0.370731,0.615019,-4.685963,5.129034,6.581927,-7.435093,6.305520,7.575471,-8.409376,0.577672,-4.175505,-6.951400,4.888471,2.114816,1.535014,6.533050,-2.139017,7.052304,-0.036840,1.726631,2.954964,-4.270223,-9.421739,0.850931,0.226061,-1.219419,-7.107131,-7.873772,4.494239,1.313710,6.593770,-0.233483,9.393315,-4.683269,-5.934684,-0.420659,2.440885,-0.556863,-7.806528,-4.047659,8.854645,7.293656,4.874836,0.314066,8.381909,-5.448630,-3.169553,-0.549369,-3.292549,2.773081,3.982638,-4.734542,-5.325154,-3.939602,-5.706046,-7.618381,-0.259206,2.638209,7.389621,-5.219719,8.970056,8.893750,1.847939,-4.610464,0.213452,-6.388967,6.654396,1.965096,-9.581766,-3.016035,8.752082,-2.101941,0.186461,7.439575,-2.956789,4.389352,-6.220139,0.602288,8.293790,3.553063,-4.596526,8.039781,-2.069764,1.923233,-5.203331,5.389888,4.068934,7.927398,7.892542,5.126755,8.274380,-7.611409,-2.701660,4.532032,2.537204,-2.340411,6.079005,9.675241,-6.482337,-3.815278,-3.630840,-2.013591,0.102694,-1.267615,3.260357,-0.980513,8.986633,-5.812502,1.189033,7.480210,7.958274,-8.207826,0.120322,-1.846903,-7.146353,-4.800614,9.440028,-8.209631,3.426292,5.631801,7.149544,3.333523,-8.009949,-4.555410,4.420745,-5.780615,4.080061,8.407879,-8.082371,-7.151670,-3.403716,-7.035929,-9.777033,-3.228505,2.802021,-2.648154,-3.333873,3.478306,4.231166,-8.232939,5.293964,4.309034,0.334026,9.857339,5.249690,-9.828520,7.848190,9.271468,-5.531366,0.882317,9.221320,-5.110067,2.575785,3.619092,7.977412,8.602693,-3.288715,4.370456,-6.204815,-9.321517,-0.424468,3.866985,4.493612,1.218788,4.877104,0.194696,-4.944283,-0.595859,-0.449654,0.356251,3.224548,-7.053716,5.178800,8.992485,6.537439,8.931858,-3.407669,1.142870,1.596912,7.775870,4.672024,-9.834261,-6.241367,6.402864,-8.907946,-8.094206,4.281222,9.677957,-9.481352,-0.705539,-1.492016,-0.667488,9.518676,-5.074536,-4.630070,7.883223,8.840991,-1.689654,-4.284641,-5.400478,-8.486343,-5.018042,6.897591,-5.517077,-4.757987,2.240997,5.699828,5.177887,8.267079,4.682009,-3.720477,6.942921,-9.120611,9.788635,7.725513,0.801926,8.812543,-6.666903,-0.984820,-9.796826,7.455463,5.555691,6.935917,5.614886,0.334412,8.456253,3.198560,5.630035,-6.627605,-4.269876,-3.460957,9.305467,3.918519,-6.115594,-9.110510,-8.162930,3.953967,-6.449540,7.518724,8.171588,7.581812,-0.086251,-5.854939,-2.549959,-3.859557,-3.310150,7.311326,-8.554465,8.651399,-1.949776,-2.125184,-8.999330,-3.836301,-8.125027,-7.388401,-5.361237,-0.723854,7.943145,-9.955942,3.666469,-7.360625,1.479403,3.690680,5.248666,9.442254,7.680062,-9.851402,3.038621,-9.988959,-3.562239,2.102863,-6.810450,5.084970,-7.524960,-7.117299,6.279435,-0.091050,-2.528704,-6.263102,-7.958157,8.590271,3.322057,5.127801,-7.502366,6.978161,1.844442,-8.450015,-6.889702,5.523596,8.128536,8.419679,-7.289778,-0.135730,3.097473,-7.446287,-1.143108,6.841543,-6.446024,-8.778564,8.320361,9.830813,-5.017813,-8.618833,-4.812844,-3.964125,2.477714,-3.475104,1.498457,-9.942856,7.961878,-4.112194,-2.235311,-8.866555,7.614750,-5.889943,-3.232679,9.173761,7.584123,2.230713,0.791307,8.688404,3.697222,-0.341103,-0.584220,-1.276817,-1.838163,5.080375,-9.385350,6.404028,-7.160218,-9.269017,6.146328,-1.782715,-8.147311,-0.581437,2.890592,-7.487040,2.376254,2.234479,-1.566362,-4.757972,-0.213208,6.391319,1.770301,-0.458303,-3.166613,-0.153163,-0.086274,-7.101636,-8.796705,-0.760702,7.819479,5.916233,-9.336804,-9.166517,-6.886968,0.839923,6.151046,9.099415,7.961384,-3.982698,3.419907,5.691677,9.501064,-1.172948,0.602520,3.540158,7.657395,5.787626,6.099304,-9.723482,-3.228517,3.321845,6.242756,-8.068711,-9.771157,-4.801772,4.022814,-4.731726,-2.095843,7.778710,5.913019,-7.085490,4.984556,-1.086630,5.643442,-2.934094,-8.092114,0.204451,-1.618265,-6.526187,9.754761,-9.641020,4.068933,1.721095,4.201879,2.730404,-2.132574,-8.434336,6.935935,-9.381555,3.317219,6.357260,-2.047415,3.190420,-5.097936,-4.649108,1.260211,9.282668,2.102580,-5.925496,5.438668,7.027838,8.601376,6.140168,9.058743,5.595314,-3.725298,-1.516863,-6.109568,3.019851,-0.701648,-4.832478,3.073917,-5.341796,-4.515705,9.445390,-0.336891,2.091837,-5.634059,-8.122060,7.828607,0.142469,-2.926465,-1.924731,1.038183,-3.014207,0.260954,9.226079,-0.722515,4.718497,-8.731178,-5.729653,-2.555606,-7.872857,-3.130451,-7.256897,2.378862,4.732542,8.342512,-6.553639,5.415826,-5.151942,7.326703,0.300984,0.783956,-1.062134,-3.281925,-7.031542,2.400944,2.998176,-8.928416,1.614738,6.683697,3.057823,-7.800106,-7.070738,-8.095277,8.004235,-7.377646,4.250851,3.145600,-0.354263,-5.475464,-3.969999,6.784468,4.923634,0.938760,6.703843,0.189395,-9.412501,-0.435493,-4.492124,3.936711,-6.696134,-3.050592,-2.774487,-9.470895,6.940693,1.371350,-9.087277,-6.233436,-8.333462,-4.904345,-3.713179,1.699280,1.136256,9.260504,-5.019678,7.678391,6.294335,3.750981,-7.197231,-7.284132,-2.757779,1.855466,-3.256741,2.264649,-9.923082,9.002406,7.501045,7.409898,-6.086857,-1.270616,1.549191,-5.187246,-8.580409,-9.267632,3.490714,-5.825230,5.749277,-4.107496,9.169769,-8.780162,4.398467,3.062882,-0.442690,0.377569,3.026437,-9.981070,-8.928753,1.446284,-0.578031,7.591947,-5.983484,9.246102,5.295411,-6.780187,7.768416,-7.221951,-3.064240,-8.613444,-5.142707,9.248777,9.461161,3.990937,-6.636115,-8.404110,-7.487661,-4.736310,-3.501510,-4.986744,5.113327,-5.610330,-0.223070,9.122154,-6.503019,6.728743,-6.962284,7.050251,-0.694222,2.346013,8.977106,7.758759,2.173424,0.503378,-6.695509,4.482581,-4.544395,-6.627460,3.976784,0.316149,9.136116,-8.720577,2.859389,-7.647433,-2.738184,2.014511,9.028730,-5.860728,-8.638861,-4.194083,2.830139,3.440778,-4.448328,-3.151669,4.545045,8.321890,6.555892,-0.139604,4.939655,-4.591139,-1.014142,-7.900894,4.104745,-9.513721,-0.618758,-2.786459,2.948825,6.817746,3.750376,7.418694,5.309736,-0.913926,-6.907473,2.445136,0.380383,-3.407297,1.106305,5.170779,1.370292,9.072871,2.858305,5.584625,6.196398,-8.351947,5.076417,6.478712,-4.757382,2.783667,5.843668,3.627399,-0.644395,-9.847401,-2.894300,-8.375522,-7.500473,6.486998,1.678607,-8.317759,3.826534,-4.403660,-2.976871,7.387251,3.994549,7.456901,5.822353,5.970433,-5.686167,-3.111588,1.646486,-7.876745,-6.452599,4.853565,0.081108,-1.436212,-2.718991,5.424292,-1.653764,-1.805504,3.352051,-4.715789,-9.466125,-0.996410,-6.837397,8.049262,-2.955857,7.160357,0.216134,-8.775284,-2.111023,4.811782,6.340012,6.067166,3.398644,4.375513,3.094976,5.709504,7.173326,2.182574,-9.244771,-5.169688,-8.360003,9.402994,-8.271209,-2.291363,-4.017062,-4.947765,-6.498251,-3.175859,4.219558,-1.182938,8.517106,-3.159626,-0.184132,-8.416951,-7.858222,8.291552,-4.733545,-5.833506,-9.351145,7.850757,-4.955912,5.349126,9.117891,-2.349102,4.365858,-4.076148,-1.113523,-9.515690,-6.042822,-3.475309,5.901869,7.956114,-6.031579,-5.992777,3.693157,-8.523376,2.613395,-3.681675,0.877293,4.536134,-8.794883,6.627964,-5.531563,2.004460,4.864055,2.522906,8.650996,-9.135968,-0.998399,-5.991762,7.792180,0.891645,-4.686952,1.452480,-7.769504,1.960008,-2.613912,-2.989770,-0.238882,1.595078,2.436810,-5.796605,-0.752364,-7.626226,8.455000,-9.987394,2.561764,-2.432828,3.013923,4.367412,-7.613067,-9.785493,-9.040994,-6.812451,-1.962022,-2.198935,-0.266894,-5.578666,3.555862,-9.495898,-7.155804,9.550616,-2.621126,8.958953,-7.523643,-3.836610,3.594885,2.860591,5.631034,-8.075890,-2.264556,0.576920,1.826178,9.255785,-9.346902,-5.369641,-8.688875,3.834120,4.456912,-5.543074,0.497417,-8.669590,-3.592852,-6.327514,5.129147,0.283946,5.292105,5.198349,2.701699,-1.874162,-7.218121,-9.762518,-9.605734,4.501835,-1.259450,7.690350,-7.913960,6.418054,-3.733459,-9.107185,-1.957640,8.761630,-7.325929,5.472993,2.702730,-1.621715,-9.712121,-2.138158,-9.118528,-9.520545,7.235089,-6.484099,4.690945,-0.370049,-3.558987,-7.147105,2.544504,-3.153141,-4.871546,0.289751,1.673196,5.290511,-6.133754,7.435509,5.215881,9.713327,9.923564,4.617005,1.647596,-5.674963,-2.549604,7.748929,-3.486773,-5.777217,8.683722,-7.675148,6.307042,-0.396550,5.882301,-8.088490,4.561369,-3.429620,8.412425,5.892043,2.634397,-0.075169,-5.571954,7.341063,-0.849034,6.244702,4.144648,-5.248586,4.919519,-9.433922,-8.217603,-8.788978,6.339789,2.115692,-5.165920,2.353829,-9.742806,2.498342,8.663493,-2.161407,-2.744562,3.024457,5.818199,-9.154000,-3.142592,-2.484392,0.349324,-1.479641,4.317488,-7.104645,2.212771,6.644735,0.489492,-4.358566,-9.611215,-9.199090,5.696260,-3.541618,-8.734000,9.978900,-8.211411,5.111616,-6.668889,-5.787136,1.569555,3.680560,-9.567257,3.274278,-6.093630,9.446094,-0.980251,8.242433,0.332495,-5.419311,7.274715,3.149714,3.132239,1.132408,-3.105071,5.172156,-9.595344,-3.440660,-0.704280], dtype = "float64")#candidate|8259|(1920,)|const|float64
var_8260 = relay.var("var_8260", dtype = "float64", shape = (1680,))#candidate|8260|(1680,)|var|float64
var_8261 = relay.var("var_8261", dtype = "bool", shape = (135,))#candidate|8261|(135,)|var|bool
call_8258 = relay.TupleGetItem(func_6152_call(relay.reshape(const_8259.astype('float64'), [10, 16, 12]), relay.reshape(const_8259.astype('float64'), [10, 16, 12]), relay.reshape(var_8260.astype('float64'), [1680,]), relay.reshape(var_8261.astype('bool'), [135,]), ), 4)
call_8262 = relay.TupleGetItem(func_6158_call(relay.reshape(const_8259.astype('float64'), [10, 16, 12]), relay.reshape(const_8259.astype('float64'), [10, 16, 12]), relay.reshape(var_8260.astype('float64'), [1680,]), relay.reshape(var_8261.astype('bool'), [135,]), ), 4)
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
const_8270 = relay.const([[1,-7,-8,1,-6,-10,-3,-6,1,-5,-10,-9,-5,-2,7,9,5,6,-8,1,1,9,-8,-4,10,4,-2,2,5,4,-6,-9,-8,6,4,-2,-1,-1,-5,9,-4,-9,7,-6,7,-4,2,4,10,5,-9,1,9,-8,4,-2,-10,5,-4,10,10,4,9,1,2,-3,5,1,-3,10,6,-8,-5,-4,5,-10,-7,-8,-6,6,-6,-7,5,7,-8,-7,-9,3,-9,2,-2,-10,9,-7,-8,-3,6,-5,7,-10,9,1,2,3,-2,7,9,5,5,5,7,-8,-7,3,-7,10,10,-3,5,6,-10,1,10,9,6,-9,-9,5,1,9,10,-1,1,3,-1,3,-1,1,8,7,6,-8,-4,-3,2,-3,1,1,10,-10,-2,-2,-5,6,-5,-1,8,5,4,-9,10,-7,5,-7,-3,-6,7,-9,1,8,-8,-8,-8,-10,-1,-9,10,5,7,10,8,6,-4,-10,10,-4,8,-7,-4,-9,8,9,-5,3,8,-1,-1,-4,1,3,-3,-4,-6,-7,9,-7,-5,5,1,-3,3,-5,-10,1,-2,-7,-9,4,-1,6,-7,9,7,4,-3,-7,1,-1,3,-4,-4,10,9,9,-4,-2,-9,-5,-6,-6,-7,3,7,1,-6,4,6,-5,7,7,-2,4,-1,-8,1,-3,-7,8,-4,5,-4,2,-3,6,-5,-5,1,6,10,8,6,-2,10,8,-9,-6,1,2,6,-8,-1,6,2,-6,6,4],[5,-6,5,3,-4,-6,6,1,-6,-3,-9,10,2,4,10,-1,-3,4,-8,2,3,-7,8,10,-6,-2,3,6,10,3,-9,6,1,2,6,-1,3,-9,5,-6,4,8,4,5,6,-1,-4,7,-7,-3,2,-4,-2,-8,4,-10,4,8,-1,-9,2,-2,-8,-10,-5,-10,6,3,-8,-5,-5,-3,-2,-4,-5,-2,4,3,-2,-9,-5,5,4,1,7,4,-10,8,7,9,-8,9,4,5,5,2,-6,3,-2,-10,10,-10,1,6,-3,-10,-5,-2,8,-2,3,3,10,-9,-10,-1,5,3,-1,-3,-4,-3,9,8,5,2,-6,7,-3,-8,5,5,3,5,-9,-8,1,-1,-9,10,9,-1,-7,10,-5,2,10,-2,-7,6,-7,-10,8,-9,-10,-8,-10,-3,7,8,-2,4,10,-4,4,3,-4,8,-4,-6,7,-3,-3,6,8,4,4,1,-5,-9,4,-10,6,-10,-6,-3,2,-2,2,9,-1,1,10,-7,6,-3,1,1,-1,8,-9,10,8,-10,-9,-2,9,-6,-7,5,-3,6,-10,-1,-7,-8,-9,10,2,8,9,2,3,-9,10,-4,2,7,6,-5,-5,9,-5,1,-1,9,-9,7,8,2,2,1,5,-8,-5,4,-7,-4,-4,-2,-6,-4,-1,-6,-7,-8,-6,2,8,2,2,1,-1,-4,2,1,-6,-4,5,9,-10,-10,-8,8,10,-7,-8,-4,7,-7,5,-8,4,-1,4,9],[-6,10,1,10,-10,4,7,-10,-7,3,6,4,-5,-8,-4,3,-6,-6,1,-8,4,10,3,8,-8,3,-4,5,-1,-8,-10,7,-2,-4,-10,5,-6,5,-6,9,-4,9,9,-7,6,7,6,1,8,2,-8,2,-3,-3,-2,6,-7,5,-8,-8,10,10,1,4,7,-7,-5,10,8,9,-8,-5,2,2,-6,6,-8,-2,8,-10,3,9,-6,8,-4,3,3,-8,-10,7,-1,-2,1,-9,3,3,7,-6,3,-9,2,-9,-2,4,-7,7,-5,-10,6,-5,-1,5,-2,-2,-4,4,-3,-4,9,-6,-8,6,-6,10,-8,-9,1,4,4,10,9,5,-6,6,7,-4,8,10,8,6,-3,2,8,1,6,-1,5,4,6,-9,-3,-10,4,-5,-10,-10,-5,-10,10,4,-3,8,2,9,3,1,-2,-9,4,1,-6,-8,-3,3,-10,-1,5,-10,3,-2,-9,6,-7,8,-10,5,9,-8,-4,10,-9,6,10,10,-9,-2,7,-2,3,-8,-10,-1,-6,3,-10,-3,-4,5,-9,7,-7,-6,7,1,-7,-4,-1,8,-6,9,-6,6,-3,1,-4,-10,5,7,6,-1,6,2,2,5,10,3,6,3,-10,3,-3,7,1,-2,-2,1,-10,-5,2,-10,6,8,3,-3,-10,-7,9,2,7,-8,9,-7,10,-3,4,7,-7,1,-8,2,-1,10,-4,2,10,-2,-9,10,-3,-4,-6,-6,-5,4,-3,1],[9,8,8,5,-1,-7,-6,-2,9,5,-6,-10,-9,-6,5,8,3,-7,7,-8,-1,-9,-3,-7,8,10,4,-6,-6,-7,10,-3,3,-3,-4,-7,6,-1,8,1,-1,-9,-1,-9,-7,-8,-2,-9,10,5,3,-8,-9,-9,-8,-2,-3,5,-6,-3,-1,-10,-1,-9,-1,7,-8,4,-4,6,-5,-3,1,-4,-2,-10,5,5,-10,-7,1,-4,8,6,-1,6,-1,6,-6,-9,-5,-1,-10,8,-3,1,-10,-2,-5,2,1,5,8,-3,10,-5,2,7,6,-6,-2,-4,-3,1,-5,7,-3,-7,4,7,2,10,2,10,3,-7,-4,-7,7,7,3,5,8,6,2,5,9,-1,-1,9,8,10,6,9,7,5,-1,3,2,1,-5,9,-10,-5,1,8,9,-1,7,-10,5,-2,8,8,-7,6,-3,-7,5,-5,-7,8,-3,3,-9,2,-10,2,4,-10,9,6,-10,7,5,4,7,10,-2,-7,7,5,-8,7,-7,4,10,-7,2,-8,8,-1,-5,-4,-3,8,-4,9,-9,5,-1,1,-10,-4,2,3,5,4,6,-6,9,-9,6,5,2,3,-1,-7,-3,-3,-2,-7,-10,-6,1,5,8,4,-2,1,-9,9,1,10,6,2,-10,6,2,-6,6,2,5,-7,-5,3,7,5,-10,1,-6,6,2,6,4,6,1,-3,3,5,10,-1,2,4,-1,-9,-10,3,-7,-5,-10,2,-10,-2,-4,-9],[5,-3,8,-10,-2,5,4,-3,10,-5,-10,6,9,-1,2,-9,-1,-5,-8,7,-4,2,-2,-2,-5,-5,-3,5,6,6,7,9,8,9,9,-7,-10,-4,6,-5,2,-3,10,6,5,3,9,-10,-6,-4,4,-1,-4,7,8,8,3,-2,1,-8,-1,-8,3,-9,6,-5,7,-7,10,1,-7,7,-2,2,10,-10,10,-1,-6,3,4,-6,-7,-3,6,-4,-3,-4,1,-6,7,2,-4,2,5,-3,7,-1,-2,-9,6,-3,6,4,5,-10,8,10,7,3,1,-1,7,3,6,-10,-7,3,-2,3,-9,-2,5,10,-5,-3,10,5,8,1,-9,-6,5,10,-6,-9,-5,1,-2,-1,-3,3,2,5,5,-4,6,-3,-9,10,-7,2,9,-2,-4,8,-1,3,1,3,-1,-4,-9,9,1,5,8,10,1,-8,8,4,-7,3,2,-5,5,9,-6,3,-8,5,-8,-5,8,-5,9,6,-4,-3,-8,-1,-8,8,9,-9,-2,6,1,8,-5,10,2,-8,-6,5,1,-9,-6,-1,8,5,8,9,-1,3,-4,9,-8,4,-10,-7,7,-8,-3,-10,-2,-3,4,-10,-3,-2,3,-2,-8,4,-5,7,-9,5,-7,-6,-9,9,-3,10,-1,10,2,4,8,8,-1,7,1,3,-6,6,8,-1,-2,4,3,-9,5,7,-3,7,9,3,6,7,-3,-9,8,-1,-3,6,-8,-3,8,6,-6,-3,-7,-6],[-4,-6,7,9,7,6,2,8,-6,-5,-2,4,-4,-4,5,5,-2,-6,8,6,5,7,-5,9,5,-6,5,-4,8,9,7,-5,-4,-10,8,8,-10,-1,8,-6,4,-2,3,7,4,-7,1,-10,4,-7,-7,-6,-10,4,8,2,4,-2,-10,10,-6,-4,10,-2,-7,-9,-4,3,-3,-1,-7,-5,-7,-7,8,8,6,-3,-8,-3,3,-9,-8,-10,-9,5,4,-6,9,-7,-3,-2,-8,7,9,-3,1,-1,4,3,-4,9,8,-10,-1,5,3,4,2,1,1,-8,-4,3,-2,-3,-5,-8,-10,-2,-7,-6,4,-6,-1,-10,9,-5,6,-2,4,-7,-8,4,3,-8,2,-3,-3,-5,-3,7,2,8,-7,8,-8,2,10,-5,-9,3,6,-10,-4,5,1,-1,1,-2,-10,2,7,-5,8,-10,-2,2,1,-8,6,-2,3,-1,5,-5,-8,-4,-10,4,8,9,-8,-7,-3,-4,6,8,-3,8,-6,6,1,-9,-10,3,6,7,2,-3,-7,-6,6,6,6,-7,8,-4,-3,2,-5,-1,-6,7,2,-5,-8,4,8,3,-6,6,-6,-5,-5,-4,3,-3,6,8,-1,-7,-7,-5,4,9,-10,6,-7,-9,-9,5,10,10,10,-6,-3,2,-5,-5,4,-1,-10,4,-9,4,-8,7,-8,6,4,-3,-4,-7,1,-1,9,-1,10,-8,8,4,-2,-6,7,10,-3,-10,-7,9,10,-3,2,8,1,9],[-10,7,-6,-4,-4,-6,-7,-5,3,2,-4,2,1,5,10,3,-9,-1,3,9,2,-6,10,-5,5,-6,-6,-4,10,9,7,9,-10,2,8,1,-5,-8,10,7,3,-6,-2,6,-2,-2,-6,-5,-1,-2,-8,-8,-1,7,-10,-7,-10,1,-3,-5,-1,4,-6,-6,5,6,10,-6,10,10,-10,4,10,-1,4,6,1,-5,-10,-5,-6,8,-5,-6,-8,7,-3,-7,6,-4,3,8,-1,-4,3,-5,10,-6,10,2,-10,7,9,6,1,6,3,2,8,-6,3,3,-7,-2,2,-6,-2,6,4,-7,-6,-10,10,3,-6,-10,-2,-6,-3,-5,-2,-7,-1,-8,-9,-1,9,-3,5,-8,7,-2,2,-6,-8,-9,-2,-9,-3,10,-3,4,4,2,3,10,7,-7,-4,3,5,-4,-10,2,9,5,4,-5,-9,8,4,-2,-4,9,5,9,6,7,-8,1,-2,1,-6,-4,3,6,2,10,10,-3,3,-5,7,5,2,3,2,7,10,2,-5,-1,-10,-4,-10,5,1,2,-1,-3,1,-4,4,1,-3,7,5,7,-1,-8,-8,-4,-1,8,3,3,-1,-9,8,-9,4,1,6,-7,-10,7,5,8,-8,-8,-10,-7,7,6,-5,-10,-10,10,-10,-10,3,-8,-9,-6,3,-9,4,5,-1,1,-5,5,-4,1,4,-6,-1,5,3,8,-5,10,-3,5,6,-10,-8,8,9,-8,3,10,-8,-3,-8,6],[9,7,1,-6,9,-9,10,-9,-7,4,10,-3,10,-1,8,-4,-5,9,-2,-4,2,7,1,2,2,-7,9,3,5,-10,3,-9,6,4,-2,8,-4,-5,1,-4,-3,-5,2,-6,4,-1,1,-5,8,4,2,4,-4,-2,8,8,-10,6,3,-10,-5,5,-10,2,2,8,5,-9,-2,-6,10,2,8,-1,-7,1,-3,-9,-9,-3,-6,-6,-4,1,-7,-6,2,-6,-3,3,-1,3,1,6,-2,10,9,-8,2,-9,-10,-7,-3,3,1,6,-2,-5,-1,-2,2,-1,-9,-4,-10,-9,9,3,10,-8,3,4,-4,-8,-4,8,-4,6,7,4,4,8,-1,5,-6,-6,-8,-6,-1,-7,-5,-8,-5,-4,-6,-2,4,-6,-2,8,-4,8,-5,4,9,1,-10,6,-5,2,7,-6,5,-7,2,4,2,-8,6,-6,-7,2,-8,-5,-7,6,10,-8,-3,1,-2,1,-6,-4,-3,9,7,-9,10,-8,10,4,8,-6,-6,-6,1,4,-6,-10,-9,9,2,9,-4,10,2,6,5,3,-9,2,6,-7,-4,-9,10,1,8,4,8,5,-10,-2,-5,8,5,3,-6,2,-1,-5,3,-1,-5,-2,-2,4,10,-9,-2,6,-7,-9,-3,-2,-5,5,4,-10,4,-3,9,-8,-5,3,-6,-7,1,-5,-8,-9,8,3,-10,1,5,10,-1,-4,-9,-4,-7,9,6,2,-3,-8,-5,-2,-6,-10,-7,6,1,6]], dtype = "uint32")#candidate|8270|(8, 286)|const|uint32
call_8269 = relay.TupleGetItem(func_1358_call(relay.reshape(const_8270.astype('uint32'), [16, 13, 11])), 3)
call_8271 = relay.TupleGetItem(func_1360_call(relay.reshape(const_8270.astype('uint32'), [16, 13, 11])), 3)
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
call_8276 = relay.TupleGetItem(func_1358_call(relay.reshape(const_8270.astype('uint32'), [16, 13, 11])), 0)
call_8277 = relay.TupleGetItem(func_1360_call(relay.reshape(const_8270.astype('uint32'), [16, 13, 11])), 0)
var_8297 = relay.var("var_8297", dtype = "uint32", shape = (12, 6, 12))#candidate|8297|(12, 6, 12)|var|uint32
bop_8298 = relay.bitwise_and(bop_8254.astype('int32'), relay.reshape(var_8297.astype('int32'), relay.shape_of(bop_8254))) # shape=(12, 6, 12)
output = relay.Tuple([call_8223,var_8224,var_8225,bop_8230,call_8258,const_8259,var_8260,var_8261,call_8269,const_8270,call_8276,bop_8298,])
output2 = relay.Tuple([call_8226,var_8224,var_8225,bop_8230,call_8262,const_8259,var_8260,var_8261,call_8271,const_8270,call_8277,bop_8298,])
func_8314 = relay.Function([var_8215,var_8224,var_8225,var_8260,var_8261,var_8297,], output)
mod['func_8314'] = func_8314
mod = relay.transform.InferType()(mod)
mutated_mod['func_8314'] = func_8314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8314_call = mutated_mod.get_global_var('func_8314')
var_8316 = relay.var("var_8316", dtype = "float32", shape = (12, 6, 12))#candidate|8316|(12, 6, 12)|var|float32
var_8317 = relay.var("var_8317", dtype = "float32", shape = (2304,))#candidate|8317|(2304,)|var|float32
var_8318 = relay.var("var_8318", dtype = "float32", shape = (14, 3))#candidate|8318|(14, 3)|var|float32
var_8319 = relay.var("var_8319", dtype = "float64", shape = (1680,))#candidate|8319|(1680,)|var|float64
var_8320 = relay.var("var_8320", dtype = "bool", shape = (135,))#candidate|8320|(135,)|var|bool
var_8321 = relay.var("var_8321", dtype = "uint32", shape = (12, 6, 12))#candidate|8321|(12, 6, 12)|var|uint32
call_8315 = func_8314_call(var_8316,var_8317,var_8318,var_8319,var_8320,var_8321,)
output = call_8315
func_8322 = relay.Function([var_8316,var_8317,var_8318,var_8319,var_8320,var_8321,], output)
mutated_mod['func_8322'] = func_8322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8343 = relay.var("var_8343", dtype = "int32", shape = (12, 3, 15))#candidate|8343|(12, 3, 15)|var|int32
var_8344 = relay.var("var_8344", dtype = "int32", shape = (12, 3, 15))#candidate|8344|(12, 3, 15)|var|int32
bop_8345 = relay.left_shift(var_8343.astype('int32'), relay.reshape(var_8344.astype('int32'), relay.shape_of(var_8343))) # shape=(12, 3, 15)
output = relay.Tuple([bop_8345,])
output2 = relay.Tuple([bop_8345,])
func_8352 = relay.Function([var_8343,var_8344,], output)
mod['func_8352'] = func_8352
mod = relay.transform.InferType()(mod)
mutated_mod['func_8352'] = func_8352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8352_call = mutated_mod.get_global_var('func_8352')
var_8354 = relay.var("var_8354", dtype = "int32", shape = (12, 3, 15))#candidate|8354|(12, 3, 15)|var|int32
var_8355 = relay.var("var_8355", dtype = "int32", shape = (12, 3, 15))#candidate|8355|(12, 3, 15)|var|int32
call_8353 = func_8352_call(var_8354,var_8355,)
output = call_8353
func_8356 = relay.Function([var_8354,var_8355,], output)
mutated_mod['func_8356'] = func_8356
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8473 = relay.var("var_8473", dtype = "float32", shape = (15, 2, 5))#candidate|8473|(15, 2, 5)|var|float32
uop_8474 = relay.exp(var_8473.astype('float32')) # shape=(15, 2, 5)
func_5342_call = mod.get_global_var('func_5342')
func_5347_call = mutated_mod.get_global_var('func_5347')
var_8490 = relay.var("var_8490", dtype = "float64", shape = (507, 1))#candidate|8490|(507, 1)|var|float64
var_8491 = relay.var("var_8491", dtype = "int64", shape = ())#candidate|8491|()|var|int64
call_8489 = relay.TupleGetItem(func_5342_call(relay.reshape(var_8490.astype('float64'), [507,]), relay.reshape(var_8491.astype('int64'), []), relay.reshape(var_8490.astype('float64'), [13, 3, 13]), ), 1)
call_8492 = relay.TupleGetItem(func_5347_call(relay.reshape(var_8490.astype('float64'), [507,]), relay.reshape(var_8491.astype('int64'), []), relay.reshape(var_8490.astype('float64'), [13, 3, 13]), ), 1)
func_8109_call = mod.get_global_var('func_8109')
func_8113_call = mutated_mod.get_global_var('func_8113')
const_8494 = relay.const([-2.875294,-6.540860,8.093210,2.254784,4.616254,2.932215,5.941266,3.772125,8.786638,0.093918,3.362877,-4.043383,-6.210463,-0.537183,4.592961,7.747555,8.903965,4.847414,8.767194,7.815747,-1.638594,-8.378968,-3.203306,8.202903,5.818060,5.168645,-5.615636,1.445686,0.443866,-4.646166,2.792282,-7.544733,1.126341,6.556973,2.573058,-8.437418,3.388144,0.627128,-4.229103,2.463252,0.945547,-9.241625,-3.989098,1.910071,6.848593,8.140951,6.420145,5.038549,9.888368,8.036767,8.119935,-6.446156,-8.878527,-2.818443,2.911599,-3.006642,5.578954,-5.256659,0.243485,8.550343,6.397659,9.109122,8.964318,0.623806,-7.282905,5.209943,-9.324496,-1.982023,3.661930,1.328200,1.877142,-6.256641,-5.197065,-9.043451,-7.132821,-1.759227,-2.820557,-6.265860,-7.648832,-0.837917,3.054291,-4.787203,-3.365609,-6.543256,-5.129940,-5.425780,-4.409296,-3.542637,0.381060,-1.819501,-0.551945,0.329229,-1.968645,-8.403457,5.249674,8.968399,-5.991779,6.699888,4.091101,1.754868,7.268233,5.711617,-7.951367,9.076184,-1.349697,6.167423,-3.221787,-8.077081,-4.961521,-3.342795,5.246331,-1.866901,2.889530,-2.717877,-0.710643,-4.715439,9.550564,5.701979,3.834740,9.530981,-6.896413,0.103023,3.093520,4.703317,-1.337635,-1.709330,-7.638823,-9.746182,-4.724730,-0.471618,-6.882465,-6.341918,-8.663485,4.822837,-3.841781,3.079071,7.877228,-6.228394,-8.568118,-1.843006,4.543655,2.015428,-1.042660,5.254614,-0.975120,9.617704,5.851022,8.066207,4.087624,5.442130,3.721297,-0.494553,3.083607,-6.074010,-0.266949,9.523128,5.193673,0.653215,-4.278825,-6.669636], dtype = "float64")#candidate|8494|(160,)|const|float64
var_8495 = relay.var("var_8495", dtype = "float32", shape = (99,))#candidate|8495|(99,)|var|float32
call_8493 = relay.TupleGetItem(func_8109_call(relay.reshape(const_8494.astype('float64'), [16, 1, 10]), relay.reshape(var_8495.astype('float32'), [99,]), ), 1)
call_8496 = relay.TupleGetItem(func_8113_call(relay.reshape(const_8494.astype('float64'), [16, 1, 10]), relay.reshape(var_8495.astype('float32'), [99,]), ), 1)
output = relay.Tuple([uop_8474,call_8489,var_8490,var_8491,call_8493,const_8494,var_8495,])
output2 = relay.Tuple([uop_8474,call_8492,var_8490,var_8491,call_8496,const_8494,var_8495,])
func_8501 = relay.Function([var_8473,var_8490,var_8491,var_8495,], output)
mod['func_8501'] = func_8501
mod = relay.transform.InferType()(mod)
var_8502 = relay.var("var_8502", dtype = "float32", shape = (15, 2, 5))#candidate|8502|(15, 2, 5)|var|float32
var_8503 = relay.var("var_8503", dtype = "float64", shape = (507, 1))#candidate|8503|(507, 1)|var|float64
var_8504 = relay.var("var_8504", dtype = "int64", shape = ())#candidate|8504|()|var|int64
var_8505 = relay.var("var_8505", dtype = "float32", shape = (99,))#candidate|8505|(99,)|var|float32
output = func_8501(var_8502,var_8503,var_8504,var_8505,)
func_8506 = relay.Function([var_8502,var_8503,var_8504,var_8505,], output)
mutated_mod['func_8506'] = func_8506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8823 = relay.var("var_8823", dtype = "float32", shape = (3, 14, 3))#candidate|8823|(3, 14, 3)|var|float32
uop_8824 = relay.atanh(var_8823.astype('float32')) # shape=(3, 14, 3)
func_7692_call = mod.get_global_var('func_7692')
func_7694_call = mutated_mod.get_global_var('func_7694')
const_8834 = relay.const([1,-10,-5,1,8,1,1,10,6,8,8,-10,-4,4,-10,-3,-10,-7,1,-6,3,-2,1,-10,3,-4,-10,4,5,-9,10,7,6,-2,-1,-6,6,-9,-4,-4,9,-6,6,2,-7,-8,5,-6,9,-10,6,5,3,-1,-4,-4,4,-3,-9,4,8,-10,5,-5,-3,5,10,3,5,-2,8,-2,-5,7,-2,7,-10,4,-2,10,-6,7,6,-1,2,9,-1,-6,-8,8,1,9,-4,-9,-3,-4,-7,-5,8,1,3,-2,3,-9,-1,2,-4,-5,5,5,-4,-7,7,-3,9,-7,-6,-5,6,-9,-4,-1,1,7,10,3,10,-7,1,-3,6,3,10,-8,-3,-5,7,5,2,3,5,-7,6,-3,-6,7,8,-1,-9,7,9,9,8,5,8,-1,5,-8,-2,8,-9,9,7,6,-2,-8,-4,6,-2,1,8,-3,-10,4,3,-1,10,-10,1,-3,-10,1,-9,-8,-7,-3,1,-7,-10,-10,-4,-3,-10,-9,10,3,4,-4,10,-6,-10,-1,8,1,-9,-8,3,-5,-6,-3,8,-8,9,-5,-5,7,9,-8,6,-4,-10,5,-6,4,5,-10,-5,-5,-2,5,-1,-3,-10,7,8,-10,4,2,6,-3], dtype = "int8")#candidate|8834|(240,)|const|int8
call_8833 = relay.TupleGetItem(func_7692_call(relay.reshape(const_8834.astype('int8'), [12, 2, 10])), 0)
call_8835 = relay.TupleGetItem(func_7694_call(relay.reshape(const_8834.astype('int8'), [12, 2, 10])), 0)
func_142_call = mod.get_global_var('func_142')
func_144_call = mutated_mod.get_global_var('func_144')
const_8838 = relay.const([5.289094,4.590808,-3.898856,4.987979,-8.363262,-7.188242,4.810858,9.668967,-6.368893,-9.150684,2.682889,-8.172972,2.611070,-3.838502,-7.199200,-6.151019,-5.590063,5.234063,5.662436,-7.579330,-7.196128,2.482488,-5.278225,-6.838453,-9.369267,0.121452,5.779325,-0.854205,-4.891501,8.158676,9.612075,-6.837809,-5.890464,-2.322060,2.969922,4.863755,8.738337,5.411121,0.852536,3.310598,-8.174138,7.408998,-4.759894,1.735637,-5.008264,7.792887,-4.393499,9.116764,4.711231,-4.727795,2.571935,-9.696152,0.034160,-9.218490,3.768812,-4.038703,2.216480,-1.273542,-4.135781,-8.494238,-2.052891,-3.520096,5.777090,0.061836,5.129751,4.327589,-3.866617,-0.999375,0.112204,-5.664397,-6.338003,5.068563,5.115733,2.832424,7.723419,-5.189669,2.444994,-0.462120,1.905620,8.916539,-5.216950,1.568225,-0.315636,-3.213334,-0.116983,-2.277150,4.913936,-2.112214,1.476962,-6.293994,9.076991,9.798334,8.280141,-6.539157,9.604387,-2.934950,-3.965437,-2.395551,6.702044,4.677257,-8.392308,-6.836928,6.429875,-1.311591,-6.272246,9.243783,9.266944,-8.763125,-2.537574,3.852024,-0.777631,7.009527,4.800542,8.138189,-8.280374,0.375255,-6.939093,9.760294,-1.391185,9.015706,-6.634813,8.192108,2.739643,1.105992,-8.344940,2.421321,-8.768777,9.444184,9.199429,-7.812996,1.280783,-9.247061,1.796548,2.533243,3.688232,-9.724945,1.569627,6.644132,4.175157,6.820798,-2.595720,-8.347358,6.703648,-7.325207,-5.954168,9.506425,-9.296532,1.514080,6.806684,-1.916833,2.478700,-7.414463,-6.828138,2.353356,-3.429808,2.318762,-1.323006,1.251314,5.470867,-1.141963,-1.428517,-3.654384,4.078230,-8.922293,-0.199619,7.284515,6.472594,2.144381,6.860902,9.971398,4.136412,-3.688831,-5.952267,1.559498,-9.731298,5.072406,1.480516,3.818964,-6.563046,9.088541,-6.944514,-9.569398,1.477665,9.395698,6.287745,-7.009874,9.037206,-2.769486,3.508316,-7.130982,9.975387,-7.490239,2.196261,1.541482,-0.767872,-6.521776,8.255824,-2.529183,-0.177870,0.062381,7.101554,-4.081079,0.044000,-7.084892,1.947295,-3.275722,6.674712,4.537351,-2.110536,-2.924671,-6.273569,-9.172970,9.733041,-1.515566,-3.824567,3.500279,1.610845,8.056296,-0.196069,2.108303,-6.906321,-8.277797,4.375322,-7.337761,-8.303387,-9.168553,9.790732,-4.292742,7.656137,8.251711,6.533399,3.607884,-2.599571,2.589850,4.624057,-3.584695,-2.623801,7.767787,1.243502,8.293198,-3.817133,-4.471194,-2.532423,-8.443726,1.407277,-6.740738,2.361999,0.753501,-6.035329,-9.148536,-5.306814,5.750679,-2.584920,-5.288613,-6.165218,8.587149,2.974498,-3.008818,2.112287,1.762124,-0.077992,1.700263,-4.994049,-3.585671,0.591927,-7.884019,0.767519,-3.044799,-0.303636,5.024592,-5.142712,0.616214,-4.386016,-7.746520,-9.406254,-2.941852,2.449567,-9.893760,4.265112,-5.722923,-7.211296,-7.249090,-1.494900,4.448755,3.619971,2.567002,1.115704,5.944792,-1.095324,9.610072,6.774729,-6.238416,5.695274,-9.834551,8.768873,0.242677,5.822048,6.672443,-0.049892,-2.313382,-9.761272,-5.832205,-3.862815,7.768053,8.250657,-9.282144,8.053322,4.777941,3.052522,6.625081,-9.890357,-0.979554,-0.523251,5.749202,-0.778218,-0.629545,7.567857,8.344737,-4.900953,-4.775837,1.282521,-1.126148,4.575207,-6.536509,-6.362352,6.387867,-6.990476,-4.943789,-3.593693,-0.847088,-8.866860,4.379832,8.897891,9.648081,8.321373,0.058281,-1.283792,3.738732,6.127236,4.743405,3.317539,-7.282766,-6.806783,-0.289873,-0.828629,-6.055066,3.539293,-1.550806,-8.674845,-1.405436,5.440559,-5.769773,-9.727400,-9.532229,8.259836,9.877552,-0.816392,5.576001,-1.915188,8.561383,-1.827746,0.112258,9.109768,-6.666152,-8.658808,-4.688321,-3.045264,9.327737,-8.443781,-6.348458,4.005200,5.483043,1.017369,7.106755,-4.694065,-2.651362,-1.472708,2.822267,0.220709,3.702394,-7.118620,3.030288,-2.617950,3.014997,-6.641362,2.996960,0.544171,-1.228182,8.178956,9.962086,-6.197016,-4.326590,0.582104,6.405227,0.312601,-5.836124,-5.191103,-6.340884,8.854771,2.893418,0.900166,1.150808,0.527239,2.316039,1.060383,8.718022,-1.372010,-1.901981,9.286038,-4.681707,-1.829523,-4.741922,-5.149572,-8.651402,6.853936,-2.168358,-4.263111,1.887652,9.048183,-7.695138,9.174421,-3.273097,5.412170,-3.843160,-9.090521,6.182674,3.979442,3.140064,-9.538728,7.621128,-6.988356,-8.125100,-2.105279,-3.806289,-7.803418,-5.441310,-2.980168,7.462415,-2.505398,-0.873751,-2.248305,3.705367,-2.580469,1.894748,-2.575035,-4.561674,-7.712073,5.591400,-4.209331,-6.601740,-5.231556,3.342394,-8.565129,-6.708101,-1.116112,8.897418,-4.932328,-6.965383,-2.119427,3.585831,7.086435,9.279985,-3.640204,-6.481461,-9.209626,2.457875,6.105796,-5.754338,6.542862,-6.539102,7.675723,-6.253531,6.481572,-7.355164,5.908011,-9.036091,1.080246,-8.114554,4.615561,9.397643,-1.173454,-9.414474,2.126582,0.054178,-3.846331,-5.493702,7.236021,2.724182,1.327805,-6.212474,-0.685913,3.088803,-2.951852,7.034934,-1.756483,-9.232080,-0.950445,4.705372,9.471403,-3.253897,-1.738035,5.665615,-7.269157,-2.263921,7.461993,-8.879765,-0.708815], dtype = "float64")#candidate|8838|(507,)|const|float64
call_8837 = func_142_call(relay.reshape(const_8838.astype('float64'), [13, 3, 13]))
call_8839 = func_142_call(relay.reshape(const_8838.astype('float64'), [13, 3, 13]))
output = relay.Tuple([uop_8824,call_8833,const_8834,call_8837,const_8838,])
output2 = relay.Tuple([uop_8824,call_8835,const_8834,call_8839,const_8838,])
func_8840 = relay.Function([var_8823,], output)
mod['func_8840'] = func_8840
mod = relay.transform.InferType()(mod)
mutated_mod['func_8840'] = func_8840
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8841 = relay.var("var_8841", dtype = "float32", shape = (3, 14, 3))#candidate|8841|(3, 14, 3)|var|float32
func_8840_call = mutated_mod.get_global_var('func_8840')
call_8842 = func_8840_call(var_8841)
output = call_8842
func_8843 = relay.Function([var_8841], output)
mutated_mod['func_8843'] = func_8843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9193 = relay.var("var_9193", dtype = "float32", shape = (9, 12, 9))#candidate|9193|(9, 12, 9)|var|float32
uop_9194 = relay.sqrt(var_9193.astype('float32')) # shape=(9, 12, 9)
func_8501_call = mod.get_global_var('func_8501')
func_8506_call = mutated_mod.get_global_var('func_8506')
var_9215 = relay.var("var_9215", dtype = "float32", shape = (150, 1))#candidate|9215|(150, 1)|var|float32
var_9216 = relay.var("var_9216", dtype = "float64", shape = (507,))#candidate|9216|(507,)|var|float64
const_9217 = relay.const(8, dtype = "int64")#candidate|9217|()|const|int64
var_9218 = relay.var("var_9218", dtype = "float32", shape = (99,))#candidate|9218|(99,)|var|float32
call_9214 = relay.TupleGetItem(func_8501_call(relay.reshape(var_9215.astype('float32'), [15, 2, 5]), relay.reshape(var_9216.astype('float64'), [507, 1]), relay.reshape(const_9217.astype('int64'), []), relay.reshape(var_9218.astype('float32'), [99,]), ), 5)
call_9219 = relay.TupleGetItem(func_8506_call(relay.reshape(var_9215.astype('float32'), [15, 2, 5]), relay.reshape(var_9216.astype('float64'), [507, 1]), relay.reshape(const_9217.astype('int64'), []), relay.reshape(var_9218.astype('float32'), [99,]), ), 5)
var_9221 = relay.var("var_9221", dtype = "float32", shape = (9, 12, 9))#candidate|9221|(9, 12, 9)|var|float32
bop_9222 = relay.floor_divide(uop_9194.astype('float32'), relay.reshape(var_9221.astype('float32'), relay.shape_of(uop_9194))) # shape=(9, 12, 9)
func_6077_call = mod.get_global_var('func_6077')
func_6081_call = mutated_mod.get_global_var('func_6081')
const_9228 = relay.const([[True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False]], dtype = "bool")#candidate|9228|(1, 135)|const|bool
call_9227 = relay.TupleGetItem(func_6077_call(relay.reshape(const_9228.astype('bool'), [1, 9, 15]), relay.reshape(const_9228.astype('bool'), [1, 9, 15]), ), 0)
call_9229 = relay.TupleGetItem(func_6081_call(relay.reshape(const_9228.astype('bool'), [1, 9, 15]), relay.reshape(const_9228.astype('bool'), [1, 9, 15]), ), 0)
bop_9240 = relay.logical_or(var_9218.astype('bool'), var_9215.astype('bool')) # shape=(150, 99)
output = relay.Tuple([call_9214,var_9216,const_9217,bop_9222,call_9227,const_9228,bop_9240,])
output2 = relay.Tuple([call_9219,var_9216,const_9217,bop_9222,call_9229,const_9228,bop_9240,])
func_9254 = relay.Function([var_9193,var_9215,var_9216,var_9218,var_9221,], output)
mod['func_9254'] = func_9254
mod = relay.transform.InferType()(mod)
mutated_mod['func_9254'] = func_9254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mutated_mod.get_global_var('func_9254')
var_9256 = relay.var("var_9256", dtype = "float32", shape = (9, 12, 9))#candidate|9256|(9, 12, 9)|var|float32
var_9257 = relay.var("var_9257", dtype = "float32", shape = (150, 1))#candidate|9257|(150, 1)|var|float32
var_9258 = relay.var("var_9258", dtype = "float64", shape = (507,))#candidate|9258|(507,)|var|float64
var_9259 = relay.var("var_9259", dtype = "float32", shape = (99,))#candidate|9259|(99,)|var|float32
var_9260 = relay.var("var_9260", dtype = "float32", shape = (9, 12, 9))#candidate|9260|(9, 12, 9)|var|float32
call_9255 = func_9254_call(var_9256,var_9257,var_9258,var_9259,var_9260,)
output = call_9255
func_9261 = relay.Function([var_9256,var_9257,var_9258,var_9259,var_9260,], output)
mutated_mod['func_9261'] = func_9261
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9849 = relay.const([[[1.416010],[2.700670],[7.182142],[-7.893099],[-2.727837],[-1.710717],[6.806197],[-1.227539]],[[-4.037581],[-8.414262],[-4.162683],[2.251786],[-0.210309],[-5.995125],[7.919054],[-5.209352]],[[-6.949595],[-4.694273],[8.061414],[1.556413],[-7.900745],[4.816928],[-4.606699],[7.174958]],[[1.582237],[-4.941636],[8.000781],[-1.577961],[5.093850],[2.676140],[-2.252543],[3.291159]],[[2.343129],[-2.112026],[-2.624869],[3.513199],[-2.542805],[-8.664686],[-2.980617],[1.529794]],[[7.250615],[-6.605186],[6.813303],[5.516708],[4.409385],[3.674764],[-1.172295],[-0.954467]],[[8.418780],[-5.334499],[9.731060],[-9.506242],[-5.963878],[-2.725935],[8.107990],[8.324579]],[[4.665616],[1.803833],[-4.543411],[1.393164],[0.660040],[-1.423099],[0.886191],[-8.965720]]], dtype = "float64")#candidate|9849|(8, 8, 1)|const|float64
uop_9850 = relay.atan(const_9849.astype('float64')) # shape=(8, 8, 1)
output = uop_9850
output2 = uop_9850
func_9857 = relay.Function([], output)
mod['func_9857'] = func_9857
mod = relay.transform.InferType()(mod)
mutated_mod['func_9857'] = func_9857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mutated_mod.get_global_var('func_9857')
call_9858 = func_9857_call()
output = call_9858
func_9859 = relay.Function([], output)
mutated_mod['func_9859'] = func_9859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_9913 = func_9857_call()
call_9914 = func_9857_call()
uop_9922 = relay.sigmoid(call_9913.astype('float32')) # shape=(8, 8, 1)
uop_9924 = relay.sigmoid(call_9914.astype('float32')) # shape=(8, 8, 1)
func_7653_call = mod.get_global_var('func_7653')
func_7656_call = mutated_mod.get_global_var('func_7656')
const_9931 = relay.const([7.288179,9.766312,0.064862,0.597670,4.359151,9.469586,-4.626172,-7.685989,4.190335,6.163901,-9.510626,6.135111,-7.933428,-0.343399,-1.841386,3.401371,1.843287,6.267553,9.340269,1.132963,-1.045982,-0.814518,5.464720,0.408703,2.999702,0.400145,3.895152,6.046355,-4.426557,8.592228,4.783598,-5.184036,5.202363,-5.760280,-3.467182,-0.494040,-7.820141,-0.053755,4.546172,-7.777178,-7.579088,-1.194033,-5.957525,0.749346,9.217353,7.424220,1.021021,2.529339,3.065611,-6.646803,5.718279,2.500355,4.446219,-0.500140,9.255064,0.703360,-1.535288,9.570996,0.869244,9.957980,0.338559,-0.013009,-2.749379,-6.732358,6.758285,-6.635413,2.135576,-3.622819,0.514414,6.336298,0.741203,-0.885462,0.064835,-9.639923,4.291947,9.954585,4.028082,4.780049,-4.267980,0.267966,-7.745365,-2.626711,9.786484,-1.710772,6.038793,2.201312,2.950287,-0.886782,8.258468,8.447053,-1.872166,-5.710014,-3.569514,-6.065533,4.086088,-9.300443,3.344186,2.805101,2.941161,7.940419,3.239107,9.556679,-9.322232,5.797643,3.100783,-7.494915,-3.734112,3.341911,7.668269,9.586824,3.634432,-2.235145,-3.077249,-5.799782,-1.362958,2.127753,-9.415976,-8.735057,-3.889926,7.552886,-4.934642,-7.823791,-2.833006,-6.388385,7.391460,-4.395406], dtype = "float32")#candidate|9931|(126,)|const|float32
call_9930 = func_7653_call(relay.reshape(const_9931.astype('float32'), [7, 2, 9]))
call_9932 = func_7653_call(relay.reshape(const_9931.astype('float32'), [7, 2, 9]))
output = relay.Tuple([uop_9922,call_9930,const_9931,])
output2 = relay.Tuple([uop_9924,call_9932,const_9931,])
func_9935 = relay.Function([], output)
mod['func_9935'] = func_9935
mod = relay.transform.InferType()(mod)
output = func_9935()
func_9936 = relay.Function([], output)
mutated_mod['func_9936'] = func_9936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9935_call = mod.get_global_var('func_9935')
func_9936_call = mutated_mod.get_global_var('func_9936')
call_9958 = relay.TupleGetItem(func_9935_call(), 0)
call_9959 = relay.TupleGetItem(func_9936_call(), 0)
func_5342_call = mod.get_global_var('func_5342')
func_5347_call = mutated_mod.get_global_var('func_5347')
var_9968 = relay.var("var_9968", dtype = "float64", shape = (507,))#candidate|9968|(507,)|var|float64
const_9969 = relay.const(7, dtype = "int64")#candidate|9969|()|const|int64
call_9967 = relay.TupleGetItem(func_5342_call(relay.reshape(var_9968.astype('float64'), [507,]), relay.reshape(const_9969.astype('int64'), []), relay.reshape(var_9968.astype('float64'), [13, 3, 13]), ), 6)
call_9970 = relay.TupleGetItem(func_5347_call(relay.reshape(var_9968.astype('float64'), [507,]), relay.reshape(const_9969.astype('int64'), []), relay.reshape(var_9968.astype('float64'), [13, 3, 13]), ), 6)
func_9254_call = mod.get_global_var('func_9254')
func_9261_call = mutated_mod.get_global_var('func_9261')
const_9978 = relay.const([1.472435,-3.963431,-2.271569,-8.528302,-0.483259,-3.149779,9.359950,9.044549,-9.666568,1.253525,-9.938595,-2.545232,5.268105,-1.879717,1.075985,-4.495658,3.698889,-7.678464,-8.107542,2.534556,-0.844815,9.314199,-9.595425,-0.265755,0.554776,-8.130308,-5.900614,3.609106,0.664978,1.833720,4.830568,7.005796,-0.655585,-4.546084,6.114745,7.481485,2.042884,2.681902,2.719102,4.492587,-1.023709,9.381425,-4.848458,-6.044733,-3.956354,-6.671776,6.414241,3.281542,0.999164,-7.298193,5.797500,-8.098526,8.933109,-8.233482,4.297732,5.987610,6.229527,-9.380525,3.774607,9.753765,-9.894992,2.399978,-8.186988,0.781040,7.775058,-1.310844,2.786552,7.137470,-5.935640,-2.952440,0.156387,1.329005,-0.742354,-4.690491,-4.296907,1.929219,9.849434,1.836912,1.156904,0.963220,-9.383034,7.598346,-6.882442,-7.305718,-3.320952,-8.118086,2.231137,1.233168,-0.876006,5.975757,7.086698,5.062778,-8.349755,-7.584915,-7.369835,-3.013654,1.620497,-7.354873,-6.175681,4.733136,4.111841,1.944687,6.837817,-2.899870,-1.907529,4.876335,8.124734,1.467510,3.461387,4.745026,9.808363,-6.202076,-8.068986,4.210397,-0.942613,7.814193,-6.914574,-7.427791,7.152693,2.771904,-0.101473,-0.212583,-3.573492,2.741472,9.159694,6.101300,-0.064345,-9.808982,-2.235360,-2.602438,-3.092467,6.512627,-8.450923,-2.112130,-3.990288,0.410337,-7.045270,-6.341531,2.333068,-8.634896,5.773533,-0.641965,-9.151720,-3.363250,-0.053804,8.907019,-9.754405,7.234979,-0.024317,8.520748,-8.079166,9.962477,-6.935959,4.025721,-3.204210,-1.459384,9.216977,8.317135,5.166149,-0.498105,-1.681497,-9.931090,-3.327268,3.124276,-8.966483,-3.558156,-1.443165,8.664382,3.882955,-8.199687,8.395949,4.151270,9.134249,-1.034295,-7.450976,-5.826794,-7.217590,-2.968198,0.769730,5.126387,-7.999199,-6.473489,2.175086,1.262261,-7.859889,-7.897582,-2.121448,-8.178792,1.258022,0.544126,7.291845,-9.942028,-4.763109,1.193324,3.679201,0.354515,-1.734565,-7.692837,-2.280270,-0.265971,8.486566,-3.649762,4.998649,-2.585465,3.646533,-7.225747,6.677649,-7.552153,1.004541,4.554167,-7.310263,-7.690686,-7.721671,-5.614406,-6.884959,1.974494,-3.678570,-7.842027,-0.575506,-2.843923,-7.160806,0.600764,6.557298,6.354826,5.179889,4.271520,-2.040813,-2.429074,-3.490068,6.515782,1.179523,6.775883,-6.463994,3.484081,-6.157992,-4.309254,0.659710,-9.320358,3.125903,2.170100,8.265370,-5.410027,9.469152,-0.894638,0.252296,-3.723285,8.578007,-6.823737,6.666450,-6.671550,6.663258,-3.356232,-1.145932,-8.903806,5.446444,-8.666396,-2.604050,-9.595225,5.467333,-6.447564,-6.285205,-1.246294,-6.431255,9.461108,-1.410413,9.518602,-0.632422,-5.787909,-9.805339,-9.261151,0.604257,-5.397047,3.220752,8.297619,-1.077913,6.132958,-3.063177,-9.178062,3.265896,6.694670,0.072932,1.709234,-3.290067,5.014219,-6.144082,-7.879898,-9.976857,-5.015214,4.392049,1.161455,5.863412,-0.883028,-7.561452,-6.004209,-7.402487,4.554148,-2.762546,2.364505,0.353398,2.886273,-9.529139,1.828347,3.222126,-3.539027,5.909049,-3.420274,8.882487,-2.242572,9.756250,0.708264,-7.447795,8.530782,6.892444,-1.038921,8.916324,1.077989,7.136666,8.162241,-2.052715,-7.533520,4.332043,-0.555383,0.118782,-0.046459,4.726123,2.325271,-8.746132,-3.963895,7.570623,-6.561688,-8.940138,8.305483,-6.653358,-0.736913,-4.220299,-4.559585,0.387512,-2.032221,-2.406717,5.732198,-1.588090,3.245564,-8.672110,7.232838,-4.359418,-7.287906,9.896732,0.982807,-2.699917,-8.290495,-8.543266,-0.968555,7.669441,-1.303319,6.867249,3.794672,-1.945476,5.936153,-2.934435,6.468726,-6.239107,9.949161,0.552934,-0.083188,2.281988,-7.712254,0.292370,0.705348,-0.646496,-6.671777,-1.485931,7.198770,0.739428,8.875484,4.376296,-8.489089,-2.166589,4.848899,-1.631410,-1.569592,-9.522623,7.020780,9.424365,-3.165366,8.356060,-7.676722,-2.694178,-7.612339,-2.725106,3.978112,-7.290643,0.600859,-8.246702,-0.809884,-7.081876,-0.442378,-2.063100,8.397758,-8.065564,6.898890,-5.006439,8.165547,4.107886,-8.252728,3.502479,-4.672040,-5.276178,5.842110,-2.849916,6.501746,-8.236538,-9.309716,-7.762406,-2.639233,5.439681,-5.290734,4.281097,8.094308,9.351736,-8.383187,2.863281,9.677095,6.189672,-6.724641,-1.890721,-6.414104,0.425788,8.545755,-0.138836,9.749541,5.913224,-9.083030,6.130070,-8.171984,5.085473,-5.669182,8.714479,-6.082763,-4.413822,-8.268382,0.817000,6.533541,8.048901,-0.294350,-2.254214,-2.656267,2.620984,8.227399,-7.192506,4.619227,-7.818176,-0.401529,7.815334,-9.385206,-4.725748,6.080663,-5.376834,-0.190659,0.217181,8.942677,-4.192786,-7.709676,-8.152595,0.990053,5.178506,9.310006,-6.915102,7.005927,-4.972735,2.107773,-7.864293,-0.033378,8.864688,1.464330,7.452897,-4.303020,-9.453734,5.030285,-4.391098,2.693102,-9.976836,-4.078728,-4.917379,-4.395250,3.475426,9.186471,-4.588417,-6.326635,6.715450,1.188588,1.220451,-0.751216,-7.673276,-3.566840,-9.286068,-3.661564,-7.605260,4.654974,-9.814720,-9.553389,0.944386,1.960884,5.685753,3.197627,4.101238,-2.731272,1.684418,-5.538317,-7.523980,-8.129197,-1.274957,6.510322,1.700900,-0.486390,9.766124,-5.906048,-8.910383,-2.979847,1.582566,-2.585202,-9.516613,1.717508,-2.865729,0.395008,8.641729,4.946309,-6.203215,-0.438519,-1.499839,5.454354,3.473989,-1.120283,-0.685639,-0.822063,4.871027,-0.528917,9.130848,9.053767,-4.542588,-1.463903,-0.049273,8.611895,2.066788,8.857484,-3.725859,5.473713,-7.932887,-4.340672,-4.605876,-7.813815,9.470228,-4.924332,5.207906,-6.936877,-8.671781,2.413661,1.828310,-0.090289,-0.512741,-6.052334,-9.619310,6.777293,9.523550,5.779650,-0.943434,6.742551,4.814384,-0.142382,2.462719,-9.584282,9.823390,8.092991,-7.403967,4.048522,9.959583,-2.997437,2.786274,-4.818354,1.410840,0.791254,1.152606,6.604590,-5.827046,2.573987,4.492815,5.015972,7.951704,0.716621,-2.425981,4.949889,-2.453226,-6.385593,1.129837,-7.922500,-7.642481,-0.135167,4.259052,-3.891624,8.639049,1.947834,3.775836,1.533716,3.557808,3.744090,-5.383082,1.179616,-3.670585,-5.913175,-7.532404,-5.347533,-3.676239,8.867869,-6.718168,2.094440,1.611716,-3.858597,-7.137610,-1.820605,-9.711650,5.150817,-1.493468,6.549796,-9.369118,-7.404410,3.270661,-2.705038,6.279384,6.026269,1.127169,7.465369,6.767030,-5.382283,5.263746,-5.174434,-6.752500,-6.194341,-1.236879,4.254953,-5.005543,-3.899168,-6.544076,3.196698,-1.160202,7.567963,-5.744256,-8.462019,6.175145,1.480024,2.640467,-2.905565,7.370930,-4.146949,6.085092,3.612440,9.364968,0.197619,-1.768390,1.075551,9.181197,-0.117376,9.548687,1.330017,3.129728,-7.201404,-9.288062,-1.621002,5.134976,-0.470301,-3.761974,-4.013357,1.575026,7.256278,8.955321,-4.859756,-4.890909,-1.609905,2.814801,-3.180966,-8.128307,-9.210574,9.038065,-4.136797,1.273831,8.360050,-3.102950,-2.707109,2.200158,6.660977,-2.937045,6.467395,4.428888,7.882765,-6.198370,9.618794,-7.500481,4.945070,6.338477,-7.416068,-5.839072,-4.890006,-6.649202,-5.903907,3.511729,-7.364085,8.173482,-6.738608,4.732264,-9.363901,9.717322,-8.233857,1.032024,7.283899,4.937048,1.465517,-0.777184,7.741468,-5.644047,-1.756731,6.279273,-9.560186,4.279270,0.268396,-2.551988,-2.303018,-1.643879,1.116053,-2.974462,-8.377590,-6.072023,-8.902380,4.908767,6.443424,1.958193,6.184205,-7.423340,-7.271275,-1.458986,-1.392778,2.510942,-5.746401,6.956190,1.712587,9.808414,-1.598160,0.420964,-1.903349,-2.768302,5.085273,6.453193,-6.861081,-7.104463,5.585870,5.662806,1.958298,-7.166756,-0.180314,4.181709,-8.195773,7.158215,-0.981337,1.037196,4.741664,4.806478,4.956452,-9.107351,-2.676360,-7.944092,5.815791,-7.635931,-8.537168,5.136154,-5.954344,-4.298753,6.755709,2.116076,9.937482,-2.109514,-7.564666,3.810502,-2.868864,-0.926310,-3.270706,0.317423,-2.236567,-0.026545,-8.958602,0.171105,-5.794468,8.813824,2.405838,3.449539,5.433094,6.103636,6.758117,-4.808085,-6.763617,0.819904,4.109931,6.554010,-3.788160,7.462564,5.119279,3.562570,-2.920497,0.494686,-4.342760,-7.163902,-2.723944,4.070999,-2.863765,1.983672,-8.843144,3.718527,1.144331,6.362091,-2.428846,1.309457,7.469974,6.787185,0.764065,4.767117,-5.032104,-5.423192,-7.202727,-9.479695,6.152875,6.596788,-1.093891,2.958447,0.353042,4.289219,8.257399,6.884259,-6.992759,3.632148,5.220315,0.507144,-3.279574,-6.097728,4.264708,-9.337177,0.413878,4.494010,-9.698948,3.785167,9.896006,-0.496997,0.782934,-8.789627,-7.025933,-9.658418,-3.547767,9.179819,2.943722,4.582045,6.997983,7.971218,-5.923278,-9.341508,5.129541,-7.619227,9.541771,-4.716615,4.113318,-2.383644,-8.896027,3.482553,-5.135139,1.068837,1.965995,-3.770816,-2.881893,4.855274,-3.098410,-5.649893,5.687511,0.348729,7.230139,-8.264078,-8.996537,-0.553395,8.462523,0.106261,2.180217,0.478868,-0.086675,0.161653,6.269372,7.800866,-2.032404,9.220793,-8.056332,-6.044478,-8.001050,-8.201951,7.461169,3.393673,9.565419,-4.736874,-3.532997,1.235446,-3.179670,5.520638,4.731264,1.584828,-0.898448,0.164979,5.727787,-2.656080,-6.655889,-4.064992,-1.343518,-2.628189,7.077870,-2.938615,-6.495082,-9.579413,-3.343720,-8.515248,-3.161919,6.113137,6.760585,2.289358,6.586001,-9.890798,3.239684,7.932030,2.956142,3.711997,8.810848,-5.505214,3.111653,-8.023981,-3.112330,0.154746,-9.876843,-7.842421,1.796406,1.114603,0.849475,2.493880,-5.701162,-6.463839,-2.825760,-9.904231,1.239882,-8.961701,8.805763,-2.649896,5.340153,-4.463883,7.729702,2.071494,5.504077,8.298144,9.111294,4.020587,6.488930,5.754375,8.739521,7.742948,-7.711549,5.775837,-3.232911,6.296057,4.047193,-4.064460,-5.040059,0.026176,-2.303340,5.062207,5.555514], dtype = "float32")#candidate|9978|(972,)|const|float32
const_9979 = relay.const([[0.400405,9.157592,-5.690858,8.893078,-3.244178,-0.753885],[7.068093,-0.912848,7.870580,5.402662,-7.782265,4.080362],[6.804852,5.952348,6.579478,5.529200,9.528322,-6.902160],[6.000008,0.529692,-2.354186,5.784031,-0.829201,-0.910972],[1.396622,2.746173,-1.420524,-0.083993,8.402708,0.138434],[-1.753964,5.177427,8.153776,8.072155,-9.616555,7.474691],[-4.817504,-1.711390,-9.114085,-4.542604,-6.555847,-1.400794],[-0.348065,-7.709899,-7.437616,-2.375370,-4.126357,-3.266282],[0.724596,-4.020900,-6.081548,7.680863,-1.880304,4.044355],[-4.343894,-4.272074,9.254130,8.798554,0.525934,-4.566531],[2.268787,-0.346202,-9.445655,-2.973678,-3.901500,5.323566],[-6.806245,-3.549742,-3.411859,9.888661,3.704622,2.676776],[-9.124645,7.669572,-2.152902,5.798297,-6.517427,8.899330],[9.925436,3.247511,-6.613126,-5.538018,1.635412,4.049881],[7.417727,-1.772039,2.796678,3.821238,-0.924099,1.658872],[-9.433063,-5.869031,3.141151,-0.793887,4.576648,-1.290059],[-7.284036,-7.256480,4.612922,-9.007563,2.179145,-5.649896],[-3.714300,-8.119761,-2.400714,-8.146044,6.946787,8.393522],[-7.815507,1.371434,9.229179,-7.805651,-8.692865,2.049631],[-2.128764,-7.460314,-0.129281,-5.497543,5.051797,8.751380],[9.869800,-9.359798,9.786037,2.028646,8.690179,3.916465],[-8.226756,7.763355,5.903186,5.585877,-0.548061,0.331178],[-0.722675,3.249250,-2.711943,2.019111,-8.647382,-6.203095],[1.963263,-1.471262,-0.484555,-2.514397,2.729629,-5.392195],[-4.157941,-7.304437,1.196389,-6.945359,-4.683957,6.159320]], dtype = "float32")#candidate|9979|(25, 6)|const|float32
var_9980 = relay.var("var_9980", dtype = "float32", shape = (99,))#candidate|9980|(99,)|var|float32
call_9977 = relay.TupleGetItem(func_9254_call(relay.reshape(const_9978.astype('float32'), [9, 12, 9]), relay.reshape(const_9979.astype('float32'), [150, 1]), relay.reshape(var_9968.astype('float64'), [507,]), relay.reshape(var_9980.astype('float32'), [99,]), relay.reshape(const_9978.astype('float32'), [9, 12, 9]), ), 1)
call_9981 = relay.TupleGetItem(func_9261_call(relay.reshape(const_9978.astype('float32'), [9, 12, 9]), relay.reshape(const_9979.astype('float32'), [150, 1]), relay.reshape(var_9968.astype('float64'), [507,]), relay.reshape(var_9980.astype('float32'), [99,]), relay.reshape(const_9978.astype('float32'), [9, 12, 9]), ), 1)
func_6152_call = mod.get_global_var('func_6152')
func_6158_call = mutated_mod.get_global_var('func_6158')
const_9983 = relay.const([7.497484,9.938866,-0.099462,3.173749,-3.663302,3.345682,-0.494055,-6.595478,-8.369643,-1.254990,0.502541,5.708160,5.378667,-4.642909,2.785973,-7.875799,4.433290,5.803077,7.116845,-5.210690,-7.782435,8.395416,-9.108844,9.767898,8.507880,9.783360,-5.886839,-5.411859,9.527559,-9.928162,-8.879141,5.349378,8.861423,-2.747743,1.315359,-7.574216,-3.273939,3.478641,-4.675863,6.459667,-8.950519,-6.093521,-1.799375,-2.656872,0.957524,-4.111902,-0.820534,6.958012,-0.684577,-6.733334,3.771654,4.236410,-4.091089,-7.583991,1.530857,1.858285,-4.289064,-7.276928,-9.370624,2.199315,-5.738888,6.984509,5.058574,-0.393107,-9.833884,-1.236561,4.680829,3.955013,-9.643502,-6.361580,-0.928374,4.104815,4.910298,0.774666,-9.111651,3.877036,-6.750226,2.367886,-3.681493,-5.584490,-0.402144,-3.453081,-7.435166,-8.488119,5.080412,5.301970,-9.403306,-3.604621,-4.426153,3.121137,-0.365403,9.529504,8.038493,8.788926,-2.191748,6.435401,-1.456267,3.020938,9.101709,1.832190,-1.645619,-3.484651,2.807711,0.472837,-1.004755,-2.970021,1.491890,-3.987089,6.063592,-7.200436,5.960616,-4.284512,0.153657,-8.569746,9.993406,5.549971,-3.572603,-1.844523,8.238801,-8.125547,-0.659583,-6.841609,-9.485653,4.428087,-2.610350,-0.648091,7.334128,4.029661,-0.117767,6.894628,2.093343,8.646253,6.564244,5.129633,9.552818,-1.148226,8.508376,-7.169681,1.447714,3.835132,7.137038,2.688755,-0.918664,-1.148674,7.478437,8.598008,-3.759476,-5.181726,-8.890571,-9.925834,0.020805,-7.384175,-4.834110,7.692690,-8.794021,1.918087,-8.789605,-7.957565,-2.824100,4.651917,-6.835552,-2.342384,3.094386,-5.599009,9.922894,-2.953523,-5.944522,6.694481,3.146846,-1.487104,2.542926,6.022094,4.759590,-2.597534,-2.220267,4.450728,-7.123181,-8.366647,-7.913232,-3.768201,5.822210,4.764454,4.790334,-4.124533,9.387532,-1.690678,2.364977,-0.159538,4.989379,-5.218131,-4.212193,-5.592929,5.205989,-2.366334,-9.133394,2.413644,1.344331,2.316040,5.462539,7.187365,-3.217391,0.538592,-9.223536,-2.179818,7.702006,3.222064,-0.844836,-6.083046,-0.568986,-6.835271,7.486263,6.725817,-3.013562,0.029039,-5.541013,-0.781001,-0.687821,-7.929958,9.967074,-4.634294,8.875024,-1.843146,-8.583499,-4.441708,5.062414,0.415398,-0.133187,-6.330308,8.187031,7.513093,-2.890096,-5.547368,1.683805,2.076877,-9.297194,0.226210,-6.488052,9.250766,1.597254,1.126793,-8.062592,5.671501,9.012148,5.026226,-0.901402,7.095509,-0.727591,6.511260,-8.882153,-4.436761,4.610339,2.712036,1.123803,-9.002408,-9.427113,-8.099657,-3.792492,9.207118,8.025649,-2.952297,5.748938,-9.282433,5.108828,-1.657592,3.539159,-3.293899,-1.113926,-1.523119,6.518893,-7.330231,-9.732239,-8.434723,6.300218,9.998151,6.289890,-3.095295,7.542357,-6.984475,-3.034822,-3.782815,-9.144850,-4.415262,-0.094925,-7.043594,9.258358,9.272261,7.775542,-6.531741,-2.824705,2.303381,6.874117,-6.792792,3.138552,-3.281534,7.580459,7.472008,4.578570,1.059980,-7.633162,8.463440,-4.339549,0.174984,8.027307,-1.499853,0.202293,0.837298,9.231134,8.931874,-7.475882,7.179292,9.628137,9.927898,-9.124691,-8.783500,2.006050,6.179065,5.992943,5.014029,-5.395461,-8.924122,-2.064914,1.382283,9.508904,-8.703822,-6.405919,-9.111925,-1.254239,-7.791755,-0.628184,4.505976,2.143820,7.363756,1.596481,0.154988,1.254903,-1.140545,4.623405,9.151132,-8.032122,-9.185570,7.956632,-0.825856,3.937403,8.063609,-4.134589,6.703594,9.049425,-9.893652,1.401999,-6.793422,5.882934,-5.502029,-8.392390,5.118787,4.477142,6.122256,-1.138508,-1.476191,6.473785,6.395093,-6.603558,3.336910,-0.325163,5.965219,8.483033,-0.300505,-4.658604,2.708051,-5.344224,4.260812,-9.095811,0.515967,1.654724,-9.259351,8.056752,-3.759560,-7.522302,2.769844,7.652509,4.808855,-5.417347,5.241577,-2.233195,-9.186589,0.698613,5.706586,-0.690290,8.922489,-7.935048,-3.079075,6.392276,-4.747198,-0.008823,-4.649166,-4.875677,-3.215900,8.806911,2.554052,-8.677578,7.734286,7.594873,-5.239965,3.565260,7.271772,8.295477,3.340042,-8.645030,1.551889,6.903760,-5.218532,6.441041,-5.864146,-8.838111,-3.064216,2.332933,0.045417,-9.290418,8.709671,0.479687,-1.082011,-0.422952,7.224538,0.981248,-5.416360,2.664705,-5.419182,1.794308,2.540619,-9.025915,0.382091,7.424061,-4.490938,-9.380379,0.316938,2.577377,-8.756184,3.218493,-5.966769,-8.023235,0.191343,-4.161068,-1.410304,1.513086,3.143550,-6.923853,1.342907,0.130775,1.388340,6.138673,5.029454,-8.497929,4.977095,-3.333236,-2.939429,-6.040168,-8.474619,1.455040,-7.843185,-2.016341,-1.926712,-4.420716,7.982233,-0.510944,6.832320,5.705203,-6.862895,9.648711,-0.941216,5.942369,-5.870893,-0.919618,-9.313651,-1.535940,-6.687725,0.630478,4.418927,1.003000,8.785098,4.488341,0.962738,-1.736258,1.777848,9.517831,8.157077,-2.676335,-9.125685,-1.285803,3.846737,-1.520327,9.220823,-3.563566,4.256650,4.872633,3.839111,-7.787305,-1.318302,-3.352532,-8.499098,5.902701,4.713801,5.852095,-2.935169,-8.811276,-0.649680,-5.248137,-8.700539,-6.761914,-4.415228,6.660456,2.533718,-9.535035,-4.747392,5.147268,3.821909,-9.618136,-6.572807,-6.282144,2.484122,-2.012602,8.654181,2.007465,-1.825831,-2.626646,-2.690998,-4.080297,4.419633,3.813922,-4.543908,-8.218162,4.464094,-7.315884,-5.403881,-5.727499,7.633451,-4.456296,3.563303,8.233055,9.801373,-0.457025,8.367700,1.256112,-8.323361,-6.702917,3.015091,-7.822805,8.732656,6.214711,6.118117,8.940508,-3.395209,-3.365996,2.847491,4.478684,6.782890,-0.421088,9.235923,2.006105,-9.604011,-6.838875,-7.594133,-2.718871,3.385528,4.792833,-9.696300,6.048723,-8.506166,-5.497837,7.284532,0.500515,-1.720072,9.598978,7.436405,4.358497,-8.729464,-9.954039,-1.808034,-0.629612,-6.511337,-8.895956,-5.964675,0.223433,0.918738,4.696755,-2.519905,1.397595,-6.138439,-2.479421,8.297468,-4.172431,5.291236,-6.217929,1.109153,8.522895,3.213177,-1.952683,0.459391,-4.172522,-8.308356,-1.840857,-1.888577,9.479472,-9.146635,9.150055,3.217793,-5.960876,-7.635705,-2.986451,2.176056,8.576313,3.947204,3.394856,8.686164,-5.988176,9.887060,-1.778800,-4.230969,-5.355363,2.554231,3.325745,7.733983,6.296903,-2.389436,-4.048000,8.164886,-9.349601,3.907801,-0.084450,-4.704695,-4.399974,5.652604,1.974838,-1.638728,-3.580599,3.433977,-5.072573,4.131488,-8.953486,3.984542,-2.061549,-3.680385,-7.679402,-9.220187,1.714566,6.520883,-4.209252,-5.061579,-1.372916,2.253985,2.501357,-8.099333,-1.687092,3.219051,-5.306181,5.296734,-2.629372,6.628813,5.688525,2.544687,-5.774209,6.320792,0.716314,9.553787,-2.461540,-9.250574,7.577940,-4.086134,1.739344,3.662621,-1.394272,-3.737651,-5.140068,9.507145,6.655345,-1.080000,3.638238,-8.438856,-4.466082,8.244046,-2.859151,-8.754919,-9.996494,3.604152,-1.964268,8.332636,9.107204,6.772468,-4.286709,-0.063991,9.785812,1.088366,-1.402469,7.096895,3.467429,5.199881,8.910176,-9.358024,-2.460892,9.048927,-5.111325,-8.358689,-2.738715,7.262785,-4.330874,-9.057057,4.868384,5.068434,0.209843,-5.046834,4.577451,-8.665198,5.700828,-2.638304,2.398404,-4.118633,2.389941,1.359455,7.744205,-6.619022,-4.837494,9.166757,-0.079853,2.748383,-6.992837,1.062039,-5.516802,-1.825807,-4.520291,4.410261,-4.041852,5.759556,-1.370361,1.132239,7.830221,-8.185686,-6.318826,7.557380,-6.604563,-1.101037,-3.509732,-0.855494,6.615963,-7.568561,6.838014,5.741367,-3.672708,7.295935,-8.542105,-9.372332,-5.717716,6.523802,-8.923851,-9.083233,-7.281037,9.915660,-9.417039,4.896168,-4.150850,3.584226,0.059371,1.374255,8.885715,1.253259,5.566510,0.254153,-5.201815,-1.627579,-8.647668,3.426239,8.033751,2.821281,-8.049183,-3.281125,4.206997,-2.812188,-0.019390,-6.117276,8.820718,2.196374,5.797360,-7.437947,-6.953793,-7.000320,6.995425,6.959824,7.457254,-9.632845,4.803322,-9.702860,-8.410696,4.733509,7.312514,-7.290885,9.854893,9.957355,2.294969,-9.447961,1.753675,-1.261467,-7.766954,0.251470,-8.211618,6.442810,-1.259254,-5.926449,2.676503,-3.604945,9.083283,4.262595,-2.199721,6.266955,-1.953512,1.355830,1.617282,3.165063,3.376488,0.660126,-8.537314,5.794135,-1.736581,-7.113755,-8.556927,-7.952454,3.705719,-2.772646,0.386709,0.158761,-8.163573,1.624436,-6.347642,8.500789,5.785190,-7.302027,-3.663930,8.027306,7.667920,-8.239678,-8.239723,-0.287629,-3.728555,3.426970,-8.282585,2.547938,-1.342520,-3.982356,7.865325,-0.472818,-4.409887,2.111290,7.929756,-1.426920,-5.108867,-1.728729,6.262866,-6.396455,7.915085,4.810362,9.880038,-7.321649,6.478754,-8.108629,6.036323,-8.368939,1.472668,-5.594348,-3.222811,-6.523274,6.596565,1.405939,8.138462,-0.254664,3.021071,-7.809274,-8.644776,-2.429312,-2.561561,2.769075,-1.409262,1.288955,8.441146,-0.760195,-0.649494,-5.616953,2.051325,1.055701,6.424104,0.604414,9.601853,9.043024,7.147809,-4.035683,5.345061,1.591933,8.940270,3.972860,-3.035026,-6.410044,-4.720645,-5.517155,-7.577657,-0.587612,7.838991,-3.373006,-6.245900,-9.732873,-2.763754,5.503671,-5.502065,3.245245,2.081528,-0.047195,-2.408450,0.359072,9.083506,-0.793062,1.516429,-0.858119,-6.232916,2.041689,-5.842611,-9.186905,-8.359103,-3.179270,-0.670262,-1.367299,7.574930,2.469614,9.316981,-4.379623,-4.371244,-4.223456,-2.332038,-7.600375,-7.817930,2.464693,-2.703406,3.324290,4.554063,9.933217,1.107139,0.124539,2.825530,-2.994299,3.771670,0.115779,8.216647,5.423734,-8.748616,-2.216981,-0.761289,-8.137674,-8.126933,4.456722,8.193694,6.113382,6.318600,9.714970,-9.338302,0.638547,9.723306,4.607470,5.188974,-3.384235,1.937756,-7.801926,-5.978667,-5.624298,-5.983744,-9.660739,-0.710658,-9.745964,-8.029951,-2.028450,2.695074,1.012593,1.416728,5.449966,9.255057,-9.835429,-6.362324,-3.874130,0.488566,1.394678,3.741265,-9.223947,-7.548909,5.364102,-3.673071,1.172045,6.784731,-5.755630,1.358597,2.665567,4.634088,5.464218,-9.247487,-4.801243,-3.666920,2.391581,2.048703,-4.735931,-4.932129,4.673964,1.064484,-0.750165,2.060990,7.452787,-4.884833,4.340346,5.419595,-8.542396,7.541638,6.919606,-0.505678,3.290939,-8.251263,0.571283,1.755601,-7.494890,7.081087,8.574120,5.406467,-9.884964,-8.161987,-9.505784,-9.421188,6.943641,2.348104,-5.787239,-8.465743,-1.163821,6.760078,2.574771,-1.313442,9.313107,9.245001,-3.862751,-4.076895,-9.282267,-2.209379,-4.919079,4.705357,-7.128305,-1.032145,0.679574,-1.423696,-3.059725,4.566988,-2.045986,6.532390,-5.428160,3.451493,2.287145,7.946129,-2.189723,-7.080129,-0.788444,-7.268320,7.912198,7.268116,7.908345,-5.655690,6.099571,-8.698474,0.397939,-8.239126,-4.537444,-9.746824,0.213801,9.448945,0.968566,-8.708373,-9.566841,0.542234,3.494729,-4.057122,-9.396526,-8.655167,-5.032173,-5.522639,-0.050352,6.836405,-6.470318,5.368780,1.619245,2.735487,-7.437934,5.227974,-2.885237,-9.781024,9.652082,3.508194,2.446703,-6.467577,-0.997073,4.627463,7.720781,1.808148,-1.537132,4.613372,6.155270,3.234442,-0.783027,-4.597423,8.824129,-2.208882,9.301713,-2.144437,-3.394036,9.493397,4.087437,2.021408,1.026479,-7.477460,0.740153,-4.979676,-7.077433,5.971046,-8.542640,-6.890278,-7.855567,-9.648605,-1.634320,5.948004,6.433722,2.591067,7.822414,3.666347,4.495748,9.998761,3.293657,4.465184,3.674172,-3.951094,9.943887,0.479408,-5.834865,8.037318,-2.485864,8.495812,9.983973,7.377422,2.604874,-3.064755,-5.477432,-6.713505,6.793974,-0.756736,-2.056677,-9.119187,0.432372,0.309774,5.305608,-5.977310,1.492041,-4.452849,-1.997563,-5.351088,-7.006635,-5.944808,-9.857650,3.810831,-0.390233,-2.666295,-9.048624,-3.193568,-3.326427,6.928140,7.329882,7.345786,1.668547,6.017990,7.938561,-2.314130,-2.767392,5.287447,8.930303,-9.406506,-4.102733,-0.005100,4.836601,-1.905099,-6.824183,-2.503961,6.162721,4.037397,7.431127,-6.672615,-6.711630,-1.052683,4.395483,3.592300,-3.341515,-2.628625,-3.259145,-2.725925,-0.493566,0.877309,-0.159076,-2.744418,0.167265,0.403669,-3.990268,-8.727547,-9.176857,-5.630738,-2.603064,-7.310986,0.505460,3.866383,8.652097,-3.196191,-5.145290,-0.074223,8.993367,-2.921923,-2.222032,9.578219,6.298856,4.082758,-5.026662,9.204624,8.321893,-1.043352,-6.816637,-0.514962,5.916362,5.063906,-1.497281,-9.374707,-7.329405,0.850025,-8.042938,-3.083797,-9.970409,2.869406,5.495840,1.637211,-3.039669,0.097718,4.498031,-2.157082,-1.644412,-7.337683,-5.664618,-0.830170,0.445788,6.535795,-2.131467,7.976582,-6.261618,-4.725283,7.300693,-8.605166,7.645821,-7.810216,-6.231941,8.728926,1.788928,9.958161,-5.099795,-4.036159,5.663261,-8.512661,4.261217,-2.561989,-0.308819,5.370888,-7.937489,-5.954147,-3.935652,-7.211750,7.483622,1.417938,7.745222,-1.393069,0.163070,1.225263,3.136253,-2.041719,8.432432,-5.072438,0.036904,6.509422,1.224416,5.191206,5.832220,-3.855273,4.859584,9.234546,9.401886,3.973084,-8.100713,6.354736,-8.588242,6.710109,1.870948,5.157709,7.697572,-8.448884,-2.455650,-3.084546,-4.392882,5.575265,4.113238,-3.882782,-6.832300,0.555618,8.517911,-3.325592,-6.778329,3.394569,2.759549,8.713617,-3.173413,-9.475304,1.543085,-5.629776,0.503490,-5.947640,-8.053923,3.902206,-4.590302,9.940938,-0.569399,0.354279,2.288068,-5.997050,8.402925,-0.575369,3.899700,7.167870,5.082119,-9.156970,5.950388,9.763021,-9.676096,-2.246476,2.052107,-4.873211,-9.203961,3.161286,-1.079523,-4.383514,9.087941,7.737682,7.478493,5.834464,-0.370562,-8.927350,-7.672121,6.790227,-7.193651,4.739653,-1.999642,1.682863,0.117543,-0.645200,-4.532471,-4.846406,8.383463,2.165471,-5.885784,-8.042966,-5.942027,-5.917972,-0.445651,3.514100,0.081979,0.031893,-2.441158,-4.223186,2.165642,-7.816944,-4.059796,8.129819,-7.453348,-6.929020,1.343227,-0.772267,8.341390,8.237154,-2.707794,6.895062,5.201085,5.695328,0.909273,-0.093190,7.961870,6.806468,1.176655,6.004795,6.769850,-2.205407,-1.137838,-0.497933,8.306922,-6.678277,1.550231,6.591239,-3.507321,-1.602809,7.742215,-4.507354,3.371259,-4.881047,-2.710050,8.173500,6.237815,-1.590590,-9.466855,-6.097644,-2.372036,3.042936,-1.465260,9.345944,-4.612277,-3.179632,-2.678449,-4.048566,-3.732035,-6.154770,-1.944489,-8.299729,2.930822,-7.071706,-8.889200,2.350703,8.280189,-4.973306,6.555450,-8.753419,1.022293,1.585820,4.189543,-2.156638,-4.505041,-9.895385,-7.061820,7.764926,4.668996,4.936325,-1.258872,3.624959,3.066392,5.993146,6.052326,-7.940803,-0.889777,-1.676563,0.788972,-3.525860,3.133102,2.375526,1.903547,7.216805,-1.511619,-8.903314,2.595406,-9.871343,6.827708,9.957767,7.037182,-9.230908,-6.142520,3.384271,6.787076,2.719154,-1.266507,-8.758349,8.402698,-0.032164,-0.752470,-1.550459,-8.102178,-7.194859,-8.837346,-6.705815,-0.980622,-4.690656,6.756673,-6.117401,5.103773,3.756432,-2.080549,2.640393,1.150753,8.006554,0.099147,0.380745,-2.262142,0.691692,-0.526740,-3.379595,-4.689464,2.763065,-9.567895,-0.558958,4.682487,2.302877,4.803986,-9.861438,1.571637,-2.663171,3.561882,-0.239937,-2.401099,1.357131,-6.787249,4.109618,-3.789357,-5.661166,-2.240779,-1.328160,7.786575,-5.320005,-8.090821,6.592833,-7.776694,-1.552497,-4.484524,-3.488320,7.302453,9.065553,1.970790,-0.836595,7.082859,8.528616,-7.331013,7.905255,1.910208,-8.441957,-4.096000,9.267070,-4.402888,0.847429,3.316663,2.932620,4.854499,-5.401451,9.442075,-9.261025,5.835336,-1.228843,1.282714,2.949903,3.618188,-6.764458,-6.737402,8.365935,-2.740088,4.857857,-6.258239,-4.569812,7.982101,-2.770539,6.228058,4.819489,-0.049468,-8.737667,4.336340,7.019305,-0.028212,7.747590,1.915536,8.425671,2.925798,7.006341,1.530872,2.706654,-8.235261,6.051411,-8.570092,7.743719,-9.301496,-8.397751,1.074703,4.254346,1.913335,-3.071878,2.721570,-0.935694,-2.777730,-8.685828,6.866445,-6.309892,6.482570,-3.498974,-7.060363,9.676655,0.802509,7.892692,4.814311,-9.777380,1.744505,2.475183,-6.628188,8.410761,-9.283627,-1.644455,3.367395,9.257358,-0.129061,-0.894895,7.586055,-9.591958,9.886380,-7.691957,-8.684861,8.393664,6.765679,-1.413110,6.175466,2.860494,8.472722,2.017370,-3.266221,1.045215,-3.751772,-9.177231,7.080871,2.935222,-2.367807,6.778570,-5.338717,-2.092514,-7.291038,-9.556785,-8.923263,1.400146,5.652145,-2.787137,3.699040,5.348937,8.076575,-4.284124,-6.281134,6.573625,9.018096,8.163318,0.283385,4.611307,-0.828157,5.560571,4.884957,-6.082418,-4.815003,3.633048,-8.569852,1.593161,-3.694440,6.981033,0.236612,8.452170,1.054404,2.856435,-9.366534,-2.057540,-9.686259,8.520525,-2.739545,-0.383841,-3.927849,7.013259,-8.526418,-7.017009,-2.095608,4.881840,-1.139811,-3.408947,6.822831,-3.307300,-8.892889,-8.322182,0.310605,7.425201,2.448670,-0.075934,0.329302,5.434981,-2.903293,-0.586120,6.641146,5.962803,-6.820000,6.365257,4.360328,4.750410,4.246669,-3.192450,6.772755,-3.595617,3.219358,-4.587857,-9.150590,6.540500,3.371303,2.865532,7.563089,-8.663720,-3.292457,-7.898989,6.435447,-4.343780,7.309067,9.074231,-7.940059,-7.574755,-2.854307,-7.201602,-1.783226,-2.097568,3.093460,-3.705368,-9.501577,-8.351242,-3.976807,-8.743681,-2.644529,-5.724370,6.454189,-1.871897,-4.272528,1.052162,1.122262,2.358344,6.616100,4.241700,-0.730481,-4.047754,-3.389131,1.696298,0.096789,-5.911699,-7.897923,2.587681,5.401219,5.177379,-9.591020,-8.195893,-3.400139,6.598359,5.721716,-9.514588,-8.218298,-1.984729,2.668198,-7.732213,1.406491,-8.712892,1.410952,0.545306,1.405738,-4.364299,-2.489897,7.802156,7.576122,-1.526070,0.942528,-3.973730,3.012666,-9.669896,-7.363527,4.176650,-2.311791,-8.546561,-3.292852,-4.442692,-5.957857,3.095436,7.048013,-2.060522,-0.344790,-4.864663,2.336651,6.947450,0.293357,-3.140516,-6.295306,-5.117781,9.484868,7.873747,-6.039527,-6.824852,-1.206515,2.635968,-7.770211,-7.130621,9.616798,1.558882,1.312199,0.692132,-3.648750,4.329763,-9.017188,3.604265,-1.502045,1.126044,-3.179769,3.524397,8.794601,4.041567,-6.872468,-4.513158,-5.163090,1.956135,2.821483,-7.126591,-2.370160,-7.439818,4.448045,-9.408166,-8.136923,2.540489,0.686631,-1.412225,9.766828,7.653179,9.831908,4.048305,5.495604,-1.789569,-6.386615,-2.285391,-1.069429,3.117710,5.309899,9.098157,9.772692,-1.330798,4.967940,8.866040,-8.419790,3.023418,1.274202,0.146908,0.336693,6.668883,0.229225,-8.441725,-4.363892,7.825054,0.822003,-9.737458,4.818217,-0.923062,5.425183,-4.385081,-8.355902,7.654942,-9.919385,-7.376528,-2.619176,4.469696,1.853452,2.238377,0.530984,1.504467,5.993193,8.844153,3.377053,-2.737955,-2.740076,-0.048314,-4.074877,-9.456506,1.191660,-8.869349,-4.787625,8.017144,2.845157,0.458544,4.787369,9.925681,-9.933646,-7.816317,-4.242138,-1.772414,4.076248,9.996614,7.105481,-6.578432,-9.636218,-0.090934,8.051685,6.302636,0.223317,7.033102,7.233427,8.090018,-4.498465,3.650822,-4.920646,4.316432,5.047984,6.354747,-1.434414,9.726055,-7.566526,2.478067,4.311003,-0.802770,7.686416,5.793795,0.511528,3.160242,-9.448059,-2.343886,-9.622317,-1.009634,1.146174,-9.071178,-3.956889,-7.869429,-5.471418,-5.388306,-9.594145,-2.942609,-0.605284,3.579342,-4.869585], dtype = "float64")#candidate|9983|(1920,)|const|float64
const_9984 = relay.const([3.113254,2.368716,-7.993972,-8.072493,3.881504,-9.330343,-4.321613,5.104257,4.603374,7.898113,-7.097679,5.866458,8.002706,1.229781,0.046347,-7.355270,4.155380,1.178419,-7.549776,-3.427444,-8.394267,0.299062,1.103521,-4.614338,-7.131102,-1.223729,-9.883760,0.640345,9.815389,-3.521653,-8.239912,8.213856,8.650545,-5.611677,5.505874,3.021106,7.667410,-5.851389,-5.823389,9.727934,-9.961337,6.883828,-0.894709,-7.136266,3.688132,-0.595216,-4.254367,5.233692,-3.014930,5.737666,-4.512353,6.762474,9.881166,-1.087946,-2.995124,-3.588713,-5.286113,1.073902,-3.623019,-3.660496,7.494659,-1.354623,-0.551677,4.924823,0.991850,-5.559663,5.813729,8.121197,-8.734105,-9.845667,7.750417,1.739661,-6.514895,-1.021724,9.359318,6.380959,7.452589,-0.792659,2.087924,-2.103283,-9.045177,9.282831,5.241811,-3.307044,-5.629584,-9.067465,4.854489,8.421184,1.067316,-3.778743,-4.450280,7.392797,4.107847,-0.714390,5.082918,6.668886,0.294753,6.720497,3.182419,-1.264234,4.420548,-2.587353,6.470381,-5.170349,4.052871,8.148523,-5.215145,-3.796296,-3.900776,7.041924,6.424793,9.381083,6.503232,4.070921,-7.748985,-9.959599,8.676654,-0.206954,1.573948,8.994843,0.520533,-8.333168,2.013606,-2.885763,8.379121,1.833420,-3.296078,-9.322291,9.799132,5.635999,5.726983,8.578704,-5.622609,4.825400,1.355889,-8.372351,9.559259,-9.846084,0.395280,-4.013938,-9.826788,-8.064440,-7.872965,-3.370994,-1.896921,0.031659,-8.188442,-0.259159,-2.736476,-7.068060,-7.271212,8.462482,2.457155,-3.194514,-9.828204,-0.481366,-5.523388,4.540885,1.057415,6.759194,1.022961,0.217538,1.913281,-7.527420,-0.242535,1.867069,-5.534094,-5.673909,2.401487,-9.160473,-2.950035,-7.501678,3.605341,6.448282,-0.818867,1.227282,-9.743373,8.970393,-3.728510,8.790480,-8.995225,-4.467230,4.092741,-6.981953,7.163786,-0.247602,3.905840,4.811846,3.841315,4.178843,0.742898,5.612937,-1.065372,5.704586,6.687876,5.667724,-2.853875,-0.455153,-8.514486,-3.832237,6.127756,3.344699,8.635569,-6.607083,-0.056488,-1.758813,-8.325293,7.023926,-2.272890,3.292435,2.775602,6.187661,-8.081761,-6.944208,9.205418,4.677468,5.199699,2.972174,3.107802,3.973943,-7.299037,3.998049,-4.099091,6.989512,3.296988,-4.913544,4.463339,-6.794185,0.954962,-3.893189,7.578580,5.595847,9.114627,-1.094048,-1.681862,-2.619873,0.336924,7.647029,-2.392829,6.479944,-9.501830,-9.513268,4.115750,4.216507,4.623353,1.946343,7.413838,-0.164557,-1.406866,9.271161,-6.149787,4.370991,7.909250,2.349834,0.166372,-3.720664,-9.199256,4.001392,1.209365,-6.779420,-8.106200,-4.025031,8.798607,-2.599070,6.220979,-8.648934,4.018616,6.120466,3.601873,-2.123090,5.297077,-3.598471,-4.140679,-3.806489,-3.417725,-9.382221,-5.280978,9.565322,8.288154,7.637043,3.235252,4.405569,7.308611,-2.882681,8.024388,0.018165,5.776844,7.808979,0.105745,8.008648,-7.206642,6.642180,-4.029012,-0.041430,-9.823115,-3.691645,-5.002393,5.100406,4.629178,-3.608758,-9.485465,3.132094,7.648146,6.376667,-0.401586,-3.197653,7.288317,-0.349800,-5.819749,7.440817,-7.506757,6.595061,0.299827,7.355829,-4.953389,-1.968180,0.976003,-5.796174,-5.783511,-9.683245,-8.389490,6.084647,-1.053357,-9.004202,1.960934,2.471127,4.731193,-6.747910,3.116860,5.679351,1.925487,7.029821,-7.901145,3.962551,0.001909,9.278743,-0.806839,1.048503,-9.590188,-0.831680,-5.670512,-3.955730,-2.594198,-9.541843,-0.241873,7.237230,3.859204,-2.089066,-7.336245,-2.019432,7.769380,7.942248,1.453721,-6.395709,-4.002392,0.366224,5.566057,2.005743,-6.626603,4.646605,8.489367,-1.426527,1.716589,-6.771223,-4.708948,-2.782329,4.556878,0.095709,-5.030758,-5.088644,-8.145219,3.876119,2.782302,9.619056,1.372060,-5.865165,5.799070,7.634157,-1.128006,-6.361358,1.330719,-9.044110,9.854830,6.919791,-8.401834,-1.544429,7.897476,-1.455719,-8.474670,-4.973887,-2.261151,4.143052,6.419381,5.776588,-8.361674,-6.536872,-9.744301,-3.338897,-3.427812,8.509252,-9.647421,-3.232461,-0.997142,-5.350734,-8.365394,-6.189577,-6.589018,9.245479,-8.195093,0.646395,-0.466796,-4.899031,-4.039141,-9.067102,-0.596631,0.318455,-2.432179,-8.718448,-1.900403,4.547300,4.555055,-2.396779,4.076965,5.797559,-9.163536,1.723635,-6.376344,8.524357,-9.425462,-2.270514,9.311741,0.823282,2.661928,-0.559979,8.746929,-5.556018,9.331436,-3.806673,-0.998676,7.984203,-6.864290,-4.051497,-8.549662,8.774572,4.669019,-2.350813,-9.477913,-5.638569,1.359747,7.798125,3.472161,-1.087020,-0.012777,6.509454,-4.287959,4.130037,0.351204,-0.671360,2.050045,2.118503,6.208953,-2.905108,5.436534,9.353351,8.453565,2.662681,-4.798094,-5.491247,-1.954358,-1.137416,-0.831957,0.148022,3.083731,1.043306,-4.901110,8.472064,-2.039654,0.478794,7.401800,6.916391,3.104575,2.313131,-9.528322,7.431857,9.594021,1.582444,8.468522,-0.999840,-9.499020,-8.777247,-2.897254,-2.479244,5.600700,-6.119818,-9.363129,9.060850,3.871081,-0.872435,-9.241330,-0.112717,8.880484,8.628198,9.730004,7.434132,-1.346789,-2.365452,7.123049,6.497154,-4.504561,6.110291,5.134636,-7.524544,9.505000,-1.098269,-2.601740,-0.761833,8.760600,0.446511,4.654860,-3.327434,-4.409922,-2.037804,-6.050726,-9.587244,7.264568,6.046322,-5.440407,5.768222,-1.664544,-5.066174,5.877934,-7.600747,-6.398515,9.967186,-6.516469,6.070401,-6.329781,8.206622,-8.443373,9.238749,4.490778,-6.550909,-4.543220,-9.946045,-4.729881,-4.922418,3.547153,-6.958233,-6.891267,2.858458,6.512174,6.582673,-6.908145,-9.860408,-0.165686,-9.447678,0.323490,9.250582,8.445315,-1.643350,-0.460557,2.131738,-7.847749,-0.133422,2.102782,9.320542,-5.891718,-9.238956,6.742539,1.830196,-8.767178,-9.077906,1.336332,7.981888,6.012517,-2.936260,-3.530057,6.758377,8.599558,5.939926,5.459752,0.258437,9.745750,-1.754043,2.344520,-6.545264,7.215606,9.084927,8.421718,0.637314,-5.350836,-5.634678,0.518329,5.189285,7.403483,8.859385,-9.694756,0.847914,-1.678463,-2.342436,5.285135,9.357392,2.322800,0.601815,-8.966072,6.166801,-8.042476,5.810545,5.504319,-9.739853,-2.922885,0.814643,3.621470,-4.920443,-4.181184,6.680579,-9.363359,0.789962,3.967700,-3.534281,3.988768,-9.952655,5.910304,-0.094944,2.844899,-9.622416,-6.219795,-0.752161,-3.894693,-5.767175,3.914004,-6.126216,-2.078795,-5.011340,6.263735,8.503211,-5.602386,-9.164540,-0.643479,5.248810,-3.508538,9.460805,5.485575,-3.677026,-3.976545,7.164591,-4.812956,3.978631,1.098763,-3.247340,-4.349074,4.393638,6.658650,2.622603,-5.356602,6.657786,-9.580104,-8.199708,-8.638602,9.307470,7.987610,5.121818,-2.786388,-5.418809,-4.987453,-3.751074,2.602897,9.943112,-5.836586,-4.741907,0.920890,0.198696,-7.063914,-4.686450,-9.045369,4.983419,-9.842428,0.565013,-1.811835,-6.374583,-9.721700,0.418957,-5.025686,-6.809909,2.485084,-5.585082,8.615723,-8.461934,0.516833,-9.811079,-7.506193,2.614900,-6.082240,-6.679534,-2.223218,0.775095,1.146146,-2.187326,-2.555940,-5.267615,1.835518,-7.476548,-5.346797,-8.733746,0.893990,3.821968,5.350383,-5.647435,6.279494,-8.886466,5.207222,-9.799943,-6.615342,2.090766,-2.021792,7.113713,-0.068624,-7.126781,-3.817786,-5.617279,3.593250,-7.445871,-7.099640,1.245040,0.901375,6.851262,0.247090,6.418752,2.769026,-5.261551,6.184151,3.023396,-8.383828,-5.467656,8.337938,-1.960481,7.935963,2.644663,-8.312205,5.516162,-5.629899,-6.805544,8.728180,4.736607,-9.998130,-8.201548,3.844065,9.980234,4.904080,8.151795,-8.511120,0.646119,-5.512564,2.165742,9.410190,-1.297184,-8.533173,-4.087451,-6.753126,-4.386577,2.295002,-9.830310,-8.399079,-5.233014,-4.484337,-5.440022,-9.365419,-9.299876,-8.618776,2.547203,-0.829511,9.799312,-7.081344,-2.448735,-6.773412,-8.765382,1.266184,-3.734849,-5.841603,2.806920,-8.647157,-6.418830,-6.254423,8.522984,-3.608528,-4.353436,-2.519188,8.005050,4.067387,-1.325978,-9.485598,-5.584286,4.232065,-4.731425,3.504536,-4.223590,1.241716,-0.593887,4.650608,0.801055,-0.860180,5.796835,1.202102,-5.775630,-7.777426,-0.939717,7.410560,2.882125,-5.957182,-5.544404,7.224477,4.776026,8.833983,-4.256775,-0.439241,3.361327,-6.064406,5.508642,3.812058,-0.345797,-0.426726,6.089407,4.393289,7.060365,-8.022117,-2.303017,-0.151718,-6.133059,9.424551,9.500429,-6.888902,8.237749,5.480148,1.885761,-2.134029,-7.673979,-7.699845,-6.173471,-9.715074,3.773483,6.906425,5.984961,-1.501764,-5.549079,-0.681704,0.501522,-1.633662,3.273842,6.040864,-2.477394,9.758870,5.641481,-1.765042,6.758009,6.884219,6.436216,-7.508107,-8.732088,5.014654,7.033374,-7.067510,-4.703501,3.527897,-2.714130,-4.960609,-2.869133,-9.301739,-0.754368,5.493346,6.190222,-9.041630,6.251186,6.295311,0.734995,-7.060999,5.653668,8.713618,0.913805,3.942740,-4.945668,9.027322,5.056873,-9.694636,-1.666599,-4.846895,-7.747419,9.982869,8.552361,1.218069,3.969267,1.426613,6.714268,-6.931921,1.072525,-0.766661,-4.168475,-2.843993,2.038689,4.041735,-0.087949,-1.241205,-4.330383,5.059884,-5.807641,0.167563,-6.655001,-7.409871,6.342643,6.556051,5.524483,-9.518222,2.838096,3.148846,0.830572,-5.934609,-6.180160,-0.968700,-9.781575,7.641501,7.062097,-0.194453,2.333184,5.230148,-0.813164,-9.977062,-7.314332,6.301792,9.784250,2.612181,6.375034,7.904348,-5.832229,-8.192449,7.662401,5.513649,-4.224228,-0.778135,1.874488,6.287183,-8.801042,5.568548,-2.316292,-4.372834,4.954287,6.759245,-7.143397,3.540570,-7.810029,7.334043,7.205302,-7.645965,2.307154,8.546717,-7.824336,-0.277152,-0.894240,-8.757735,-9.548951,5.074611,-5.598494,-4.487995,6.580874,3.480863,1.894523,4.135005,2.596860,5.795147,-5.488277,4.951101,4.520982,-6.994441,9.011306,-1.773203,0.956951,-0.434772,-7.958859,-4.753100,-8.989297,-1.474848,4.262182,-6.099495,9.873811,1.145346,-8.572733,9.800553,-1.943661,-9.908102,-5.747591,7.850208,-4.410927,8.063507,-3.938772,-4.864083,5.062632,-1.508446,-6.518038,8.509120,-4.870974,4.402757,-3.955108,-1.160562,-3.834455,-2.398815,-1.196430,2.426066,1.416476,0.797449,-8.734622,-8.941026,-1.177969,-7.860945,5.268697,8.860896,-4.772032,1.273309,6.763259,2.238491,-9.234583,-2.294909,5.512619,8.643399,-6.535701,-7.282789,-7.825164,-1.427934,-8.694263,5.670607,-7.355221,2.250608,6.425830,3.236723,0.115202,8.227424,7.764944,-2.342631,7.732847,2.562597,-6.463692,-8.693907,3.139183,-7.525062,-1.526491,1.800173,-8.588497,7.616501,5.362183,-3.410159,-5.292674,-2.562678,4.522829,-0.755110,-7.676032,-3.500573,-0.981187,4.519575,9.584174,0.883594,3.794911,-1.049748,2.535398,-4.185591,9.974792,3.498108,-7.502251,6.256995,-1.444909,-4.492835,4.391380,-3.512007,3.756312,0.388555,4.599674,-1.805643,-8.230601,-1.415952,6.883422,-3.303496,8.030987,-7.946199,-9.283790,8.563733,3.974866,2.813634,-4.383102,-9.698418,-6.860481,-6.645741,-3.475266,-0.180035,5.704338,2.198137,4.265458,0.323938,8.898405,-6.582319,5.024980,5.225197,3.857630,-1.437395,-0.753164,-0.564574,-7.277997,-2.967732,5.437201,5.332366,8.105500,7.738095,3.952912,4.928713,-3.087994,-2.308439,9.962930,0.327060,-2.345762,-4.415676,-8.055145,2.064671,4.734449,-4.432205,9.566907,5.100188,-6.635324,3.476008,-0.049080,-6.503822,5.007906,-7.934637,-7.535822,2.303087,9.984200,5.903717,-8.342368,7.731974,-6.808344,5.627570,7.916984,-2.360133,4.564046,5.677552,-1.125430,9.239429,-5.166379,-5.586242,7.724862,-7.583959,4.749234,-7.582818,-0.632049,6.097157,3.218725,-8.802632,-4.249517,-7.853074,7.601075,6.937471,-1.483626,6.256388,-0.674276,8.333614,7.111172,0.616839,-0.240330,3.452048,3.421394,4.764304,8.561911,7.971816,3.149317,4.922067,-6.509098,-7.601071,5.016297,3.477031,-6.665725,0.312529,-9.177498,-3.116997,9.575288,-7.236394,4.856859,8.009550,6.593662,-5.571500,8.922986,6.434010,-1.388550,-7.990217,7.181209,9.942029,-7.068914,-8.701666,1.934444,0.852279,-0.413463,6.332329,-6.344008,-3.824101,-2.200780,-1.589105,-5.674819,9.531903,3.213936,4.741549,5.553666,-8.657521,7.150116,5.692025,-2.433405,8.348656,-8.044191,-2.101013,-0.691517,-4.238868,0.376103,-3.246380,0.656136,-5.337060,6.404319,3.693070,-3.129051,-1.324521,-1.189427,4.109517,4.779815,7.431857,1.208160,-8.773096,-0.151846,-6.994809,1.108414,-9.197338,-4.477473,7.688492,-0.586267,2.890433,2.440917,-9.561314,9.771126,-0.983001,1.111849,-5.368550,3.105482,-9.189675,0.374884,8.559883,2.416069,5.280124,-1.618910,6.186079,-1.735668,1.303728,-5.700839,7.392370,5.189896,-5.915935,-4.117306,-4.570556,8.692962,4.474426,4.205772,8.439156,-7.448588,3.355615,-6.069648,6.631553,8.752242,-2.603854,7.557618,6.619670,8.254620,2.503259,-4.740433,9.783740,-3.486189,-0.272551,6.544108,-3.223881,6.271581,-6.484849,-2.566181,-6.446502,-3.293318,4.632856,-4.407755,5.482699,7.142568,6.766734,-7.918880,9.282946,-7.162192,-9.015892,-4.805396,7.707896,-6.279255,6.531141,-1.632073,-3.724440,-2.806003,-6.756070,-4.236232,-5.460050,-0.049131,4.113817,-2.048566,0.980635,2.088370,-5.313866,-7.831685,4.991847,8.239443,8.439021,-7.720051,-8.361995,4.008691,4.503992,-4.630712,1.884609,-9.772315,0.349499,-8.920064,2.054696,1.163519,7.732492,5.164047,-2.153218,4.191962,-1.355463,-7.413085,-6.409082,3.719379,8.033917,6.408851,-6.184041,-5.571920,-8.280890,-9.447133,-7.505198,1.510247,8.204085,-1.886950,5.258072,2.319306,5.695281,-6.022868,-9.930234,8.980986,-1.686813,-5.556338,-9.631899,-0.710413,6.141153,-2.659119,-4.088027,7.653533,2.932400,-4.140469,3.309543,-8.412035,5.819925,-2.411701,4.416466,4.341444,-6.330776,-7.292267,-6.648446,1.791240,-1.147398,2.298180,3.997869,-3.287366,-8.163819,9.669640,7.610066,-9.211194,3.595245,-3.869339,0.626738,-7.221893,3.160687,-4.331314,5.061498,-2.461236,-9.460913,0.451036,-0.883623,-9.905328,-1.209343,5.403569,0.985497,-0.763485,-9.126968,7.745230,-7.168042,-6.163037,1.192700,-5.485160,-9.252198,-3.371216,-6.638508,6.004325,5.778300,-0.160318,0.405753,4.523161,5.809724,5.676415,-6.491622,4.739311,-6.731559,8.444033,9.250525,7.880117,-5.644823,-9.358826,4.319555,8.016216,7.268840,-3.968027,5.308324,4.786551,0.327944,3.902392,-3.749565,-6.599471,-4.577023,-7.170417,8.680653,8.417751,8.439727,0.670582,1.279345,4.432745,-7.894976,-9.263942,-3.206668,-9.184163,-8.465026,7.521165,0.491839,-9.447089,9.474680,4.116833,-7.964531,-8.447072,-4.131791,-8.565074,6.159483,-5.220735,9.699184,1.496498,-1.159436,9.633346,0.333354,2.027204,-4.154931,-0.574112,-0.003359,1.556786,7.435900,-8.592438,0.330093,3.323856,2.697627,-1.288371,-6.574267,-9.654062,5.278223,-7.719198,-4.676396,1.518580,3.814466,6.404891,5.820379,-8.244872,-7.221276,-0.399460,9.909869,-0.509364,0.096925,7.230462,1.564527,5.868754,2.877610,8.361507,4.608634,-8.264799,7.381772,2.251889,-8.722241,0.016225,-8.439198,-9.979816,1.000847,-7.443603,2.689743,1.803854,2.371202,-1.288176,-8.547164,7.243983,-7.904506,-7.950975,6.287908,9.404218,9.490934,-4.255865,-6.882830,7.829144,-7.342450,3.497044,3.116617,-3.575774,7.839084,3.628268,-2.330023,4.268041,-8.162673,-7.729153,3.178438,-9.707220,-8.796886,0.501623,4.056867,1.891759,-3.495496,-2.740964,4.077934,6.118015,8.103389,-9.621149,8.178699,-2.430190,3.044159,6.381365,-6.601018,5.604876,-6.823477,-1.903511,8.622817,3.449776,-6.498693,6.632789,-4.821731,-1.603079,4.259630,-0.197204,-5.162878,-0.253187,7.802715,9.745802,2.265059,1.659757,5.987565,-0.783378,5.172450,-0.947961,0.724849,1.233818,-8.752123,0.026293,-6.165851,-5.899911,-4.870337,-3.912413,-2.719963,-2.856260,-8.358010,-6.088773,6.721222,-2.133191,-8.067980,-1.180067,-3.434313,-7.813344,4.748386,-3.457309,0.969524,-7.936821,4.376788,1.647767,-6.612101,-4.074567,1.636943,-8.590677,1.011953,5.609002,-5.059773,3.360336,4.741266,9.344976,6.389898,-4.577618,5.231627,-4.571257,8.947383,-0.476846,9.570405,-5.043852,0.981739,0.146947,4.044308,8.760932,-2.923215,-2.411796,-6.521155,-4.927398,9.258624,-7.252936,-6.611071,-9.596502,-4.154593,3.516106,7.812385,4.070705,0.177731,9.221252,1.776829,-4.125550,8.335681,-3.790708,-2.232685,3.968458,4.354484,-1.601879,-5.769908,-3.474194,-8.576233,0.450678,5.160153,-6.503270,1.408668,-2.561852,-2.736798,8.621203,3.094730,2.585183,-7.320816,-2.500186,-2.907080,3.494436,1.274405,-7.533944,-3.017392,4.728560,-0.515937,-7.116487,2.896508,-4.195340,4.396506,3.014188,7.974466,-4.301448,9.775633,-6.692941,-6.310238,-0.800263,6.430273,6.386470,-1.028818,3.956994,-5.214211,7.429908,-6.699938,-0.585412,4.554962,9.262403,-2.795430,-4.305228,-4.296767,-3.087977,1.284343,-3.120493,9.186815,-4.923789,-7.426182,-8.241972,6.767243,-6.370882,5.230220,5.284272], dtype = "float64")#candidate|9984|(1680,)|const|float64
var_9985 = relay.var("var_9985", dtype = "bool", shape = (45, 3))#candidate|9985|(45, 3)|var|bool
call_9982 = relay.TupleGetItem(func_6152_call(relay.reshape(const_9983.astype('float64'), [10, 16, 12]), relay.reshape(const_9983.astype('float64'), [10, 16, 12]), relay.reshape(const_9984.astype('float64'), [1680,]), relay.reshape(var_9985.astype('bool'), [135,]), ), 6)
call_9986 = relay.TupleGetItem(func_6158_call(relay.reshape(const_9983.astype('float64'), [10, 16, 12]), relay.reshape(const_9983.astype('float64'), [10, 16, 12]), relay.reshape(const_9984.astype('float64'), [1680,]), relay.reshape(var_9985.astype('bool'), [135,]), ), 6)
output = relay.Tuple([call_9958,call_9967,var_9968,const_9969,call_9977,const_9978,const_9979,var_9980,call_9982,const_9983,const_9984,var_9985,])
output2 = relay.Tuple([call_9959,call_9970,var_9968,const_9969,call_9981,const_9978,const_9979,var_9980,call_9986,const_9983,const_9984,var_9985,])
func_9993 = relay.Function([var_9968,var_9980,var_9985,], output)
mod['func_9993'] = func_9993
mod = relay.transform.InferType()(mod)
mutated_mod['func_9993'] = func_9993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9993_call = mutated_mod.get_global_var('func_9993')
var_9995 = relay.var("var_9995", dtype = "float64", shape = (507,))#candidate|9995|(507,)|var|float64
var_9996 = relay.var("var_9996", dtype = "float32", shape = (99,))#candidate|9996|(99,)|var|float32
var_9997 = relay.var("var_9997", dtype = "bool", shape = (45, 3))#candidate|9997|(45, 3)|var|bool
call_9994 = func_9993_call(var_9995,var_9996,var_9997,)
output = call_9994
func_9998 = relay.Function([var_9995,var_9996,var_9997,], output)
mutated_mod['func_9998'] = func_9998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_10008 = func_9857_call()
call_10009 = func_9857_call()
var_10048 = relay.var("var_10048", dtype = "float64", shape = (8, 8, 15))#candidate|10048|(8, 8, 15)|var|float64
bop_10049 = relay.bitwise_xor(call_10008.astype('int8'), var_10048.astype('int8')) # shape=(8, 8, 15)
bop_10052 = relay.bitwise_xor(call_10009.astype('int8'), var_10048.astype('int8')) # shape=(8, 8, 15)
func_142_call = mod.get_global_var('func_142')
func_144_call = mutated_mod.get_global_var('func_144')
const_10062 = relay.const([[5.748989,3.409012,-9.707646,-7.951141,6.897797,-8.610514,4.695939,4.151507,-8.702280,-3.348680,7.463817,-6.081237,9.863277,1.260650,-5.063628,-7.855616,-5.302396,-8.311688,7.073331,-8.460039,-7.161588,-2.387599,-3.739167,-8.129762,5.996251,1.203579,-2.694820,8.374665,6.288695,1.139343,-9.239663,-8.282032,0.104605,8.819035,7.659350,1.052122,-3.774472,6.725211,-5.713181],[6.453659,-8.443852,-7.896578,-4.907495,5.126544,-6.089335,8.856670,-9.913317,5.228211,-6.079063,-1.870765,-5.239949,1.100071,-2.200702,-7.353135,0.110198,-8.509945,-6.169059,-7.223158,-4.441377,4.090178,7.214041,9.997582,-5.532016,4.855492,1.247427,-8.582935,-6.915278,3.881274,-6.176667,9.911547,0.493104,-5.734865,-9.850145,9.757758,-7.831477,6.931820,2.736226,1.456377],[-1.114515,1.701373,-9.367316,1.080173,8.775560,6.265131,-7.653866,5.068122,8.925110,-5.165646,4.756609,-8.839670,-4.051264,7.967444,0.478144,4.245543,9.070477,6.241630,-0.637487,-4.590857,2.886846,9.320031,-4.193619,-6.928546,-1.891748,8.146725,-1.197539,4.686722,-9.863998,-7.183487,8.352463,1.981819,-4.220415,4.798702,6.971989,1.405618,6.025783,4.201660,2.048939],[6.707286,-7.085088,8.444671,9.339212,3.668324,4.225731,3.872865,6.328265,-1.595885,8.046399,-5.926298,5.236323,-1.153208,-0.889347,2.601469,5.121584,-4.160878,3.586257,-2.130415,-2.371429,-4.416028,4.934088,6.895230,-5.901556,9.017646,1.675322,7.155608,7.152137,7.184448,1.098517,1.999136,-9.724010,-6.944278,-5.251305,-2.557411,-8.878397,-8.097111,-8.930297,-8.894464],[3.870899,-6.946423,9.722763,-7.108209,0.313236,-1.730603,-7.121300,3.203056,0.462059,-5.998465,-3.908315,1.058673,-1.568543,7.005601,3.311740,7.240796,0.843564,0.871626,4.440809,3.984676,9.255494,1.446908,6.476862,-8.064958,-0.301972,-4.466500,5.253741,6.170771,-1.427437,-0.626362,-2.738632,-6.751065,-8.574264,-8.462123,3.428917,-7.419517,-3.451721,-6.248138,0.866809],[-9.530337,-1.410758,-0.035399,-2.784875,2.579266,-0.897615,-8.963905,0.770793,-0.329883,-0.893445,-0.430216,-5.880058,7.784993,-5.775682,8.340347,-1.814012,-1.897670,-6.105312,6.412323,-0.497112,5.158281,-9.835396,-9.541234,1.239278,0.702261,3.306765,7.910261,4.912988,-0.294227,3.394425,7.661641,-0.598088,-5.155749,-1.920697,1.540763,-8.336656,-7.059895,0.405778,-0.404057],[6.001745,-5.709164,7.854569,9.524772,-6.048348,4.875942,8.471183,-6.610736,-4.424879,-8.692849,-2.324788,3.306721,2.037109,3.348432,-6.175230,7.880369,-5.305903,5.583195,5.221990,-2.159400,-1.077006,5.694358,-6.294267,4.349090,-7.500288,2.927144,-9.546475,2.740126,-2.520186,-8.986412,0.331317,4.520920,3.977646,8.947222,5.727110,2.983340,1.312776,5.398557,-7.492484],[-1.390016,-9.683690,1.952046,2.722803,-3.803740,9.276409,-2.213215,-1.489935,-9.859235,-9.638369,4.692975,5.126119,-3.671457,7.016785,-3.418799,-5.980997,3.102748,7.218335,3.670966,4.774333,-1.220555,-7.152617,4.643628,-9.811167,3.177504,-7.743486,-1.655098,1.439707,-0.017492,-6.608283,-9.539815,-5.827138,-2.556732,-8.434348,-4.584233,9.176321,-3.340459,9.079974,6.415880],[-2.797246,3.284022,1.313864,-6.752397,-0.258318,3.517608,-5.312815,6.272275,5.715543,-0.374131,-9.970219,-4.452678,5.095283,6.097728,-5.939171,9.953730,6.176199,6.340803,-3.216439,7.802812,7.703094,-6.711350,-0.330076,-1.984914,3.608861,9.317339,5.589499,0.307663,4.967642,1.285176,9.746291,-3.821814,2.352060,7.754722,7.675554,-0.940698,-5.943842,-0.215068,6.700663],[-5.866568,5.605393,-5.079433,3.483392,-5.073643,-0.336702,5.076728,-7.872957,8.311209,5.973363,7.118508,1.215762,0.650041,-5.890764,9.765100,-2.772903,-1.810100,7.405298,-3.722927,2.780858,5.713541,3.909949,3.760062,-8.551090,7.925797,-0.440028,1.747320,1.696106,7.885398,-5.112245,3.217964,-8.636580,4.043076,-4.588150,5.370629,-0.934423,2.444261,4.688376,1.669171],[4.479326,1.899853,3.531624,-9.495235,-8.325489,1.080448,-6.399311,1.610394,-6.528140,-9.856543,6.863487,-3.332047,9.621297,8.938552,8.945672,-4.581032,7.879595,-9.085511,-5.338157,9.176154,-3.402721,-0.756128,8.477289,9.024329,-1.245993,-2.845581,4.116654,8.779362,3.606055,3.621385,2.086998,1.607257,-7.487492,6.002763,-2.487625,3.527674,0.596750,5.427540,6.160690],[5.599011,2.561712,4.762576,-5.932673,2.958467,2.079700,-1.350144,-0.227611,-5.650204,5.745973,-6.217506,-4.334845,-1.463832,9.526303,9.974777,1.277989,-5.252015,-8.411819,1.272700,-8.387729,-4.639580,-7.086073,-4.583620,7.553515,0.880966,-3.173254,-8.325494,5.053021,7.569064,5.802335,2.892030,2.929117,8.743102,-4.448111,-9.699351,3.801462,-9.691171,-1.132723,-2.763240],[4.067591,-7.396540,0.410633,6.121291,-8.154834,9.927892,5.403939,-6.933508,-8.691164,-2.876851,-8.954555,5.935214,-6.043142,3.942255,-4.362736,-2.491769,7.347427,-4.040970,6.751976,2.852295,-7.595681,9.864739,-1.043599,-9.604844,5.230654,3.761716,2.723255,8.728325,-5.822129,-1.378221,0.226548,7.627606,-5.218341,5.412211,7.424590,3.609895,-9.579427,4.682927,-2.043686]], dtype = "float64")#candidate|10062|(13, 39)|const|float64
call_10061 = func_142_call(relay.reshape(const_10062.astype('float64'), [13, 3, 13]))
call_10063 = func_142_call(relay.reshape(const_10062.astype('float64'), [13, 3, 13]))
output = relay.Tuple([bop_10049,call_10061,const_10062,])
output2 = relay.Tuple([bop_10052,call_10063,const_10062,])
func_10071 = relay.Function([var_10048,], output)
mod['func_10071'] = func_10071
mod = relay.transform.InferType()(mod)
mutated_mod['func_10071'] = func_10071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10072 = relay.var("var_10072", dtype = "float64", shape = (8, 8, 15))#candidate|10072|(8, 8, 15)|var|float64
func_10071_call = mutated_mod.get_global_var('func_10071')
call_10073 = func_10071_call(var_10072)
output = call_10073
func_10074 = relay.Function([var_10072], output)
mutated_mod['func_10074'] = func_10074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9935_call = mod.get_global_var('func_9935')
func_9936_call = mutated_mod.get_global_var('func_9936')
call_10100 = relay.TupleGetItem(func_9935_call(), 1)
call_10101 = relay.TupleGetItem(func_9936_call(), 1)
uop_10106 = relay.log2(call_10100.astype('float64')) # shape=(7, 2, 9)
uop_10108 = relay.log2(call_10101.astype('float64')) # shape=(7, 2, 9)
bop_10133 = relay.left_shift(uop_10106.astype('uint8'), relay.reshape(call_10100.astype('uint8'), relay.shape_of(uop_10106))) # shape=(7, 2, 9)
bop_10136 = relay.left_shift(uop_10108.astype('uint8'), relay.reshape(call_10101.astype('uint8'), relay.shape_of(uop_10108))) # shape=(7, 2, 9)
func_5643_call = mod.get_global_var('func_5643')
func_5647_call = mutated_mod.get_global_var('func_5647')
const_10145 = relay.const([[-10,1,1,4,-4,-8,3,5,-6,-3,-6,-5,-7,-4,7,-9,-1,9,-10,1,-10,-2,2,8,-10,5,2,-2,7,7,6,-4,-8,-8,-8,2,-7,-2,4,9,3,-1,-3,3,8,7,7,2,4,4],[10,-3,-2,6,-5,9,8,-2,-2,-3,6,-6,-1,10,10,-1,-2,7,-7,10,-7,-9,-1,-6,-7,-5,10,8,2,9,2,2,2,7,-2,1,-6,-4,3,-9,-2,-7,-8,2,-3,-3,10,-10,-5,-2],[-4,6,-5,-8,-2,-3,3,-7,-7,2,1,-6,1,3,-2,4,-10,-5,-3,-5,10,-1,10,-6,6,-8,3,8,-9,-1,6,5,6,-10,3,-5,-7,-5,-2,-5,-9,7,-6,-10,-4,6,-8,5,-2,-4],[2,7,-6,8,5,8,6,-8,8,7,-10,-3,5,2,-3,-2,6,6,-6,-1,8,7,-5,-6,4,9,8,10,-10,-3,-1,-9,6,8,-10,5,10,-1,8,2,-3,-5,2,6,-2,-6,6,9,-3,-6],[-7,2,-2,2,2,-3,4,-10,5,-8,-7,-7,10,-4,4,5,-10,7,-1,5,5,-10,6,-3,8,-8,-8,7,-5,-10,-1,-8,-3,7,6,-7,10,9,-9,-8,6,3,3,1,-1,6,-7,4,-1,-1]], dtype = "int8")#candidate|10145|(5, 50)|const|int8
const_10146 = relay.const([[-5.742404],[-7.527192],[-1.551080],[-4.511014],[-2.168984],[8.422757]], dtype = "float32")#candidate|10146|(6, 1)|const|float32
call_10144 = relay.TupleGetItem(func_5643_call(relay.reshape(const_10145.astype('int8'), [5, 5, 10]), relay.reshape(const_10146.astype('float32'), [6,]), ), 0)
call_10147 = relay.TupleGetItem(func_5647_call(relay.reshape(const_10145.astype('int8'), [5, 5, 10]), relay.reshape(const_10146.astype('float32'), [6,]), ), 0)
func_6077_call = mod.get_global_var('func_6077')
func_6081_call = mutated_mod.get_global_var('func_6081')
var_10164 = relay.var("var_10164", dtype = "bool", shape = (135,))#candidate|10164|(135,)|var|bool
call_10163 = relay.TupleGetItem(func_6077_call(relay.reshape(var_10164.astype('bool'), [1, 9, 15]), relay.reshape(var_10164.astype('bool'), [1, 9, 15]), ), 0)
call_10165 = relay.TupleGetItem(func_6081_call(relay.reshape(var_10164.astype('bool'), [1, 9, 15]), relay.reshape(var_10164.astype('bool'), [1, 9, 15]), ), 0)
output = relay.Tuple([bop_10133,call_10144,const_10145,const_10146,call_10163,var_10164,])
output2 = relay.Tuple([bop_10136,call_10147,const_10145,const_10146,call_10165,var_10164,])
func_10172 = relay.Function([var_10164,], output)
mod['func_10172'] = func_10172
mod = relay.transform.InferType()(mod)
var_10173 = relay.var("var_10173", dtype = "bool", shape = (135,))#candidate|10173|(135,)|var|bool
output = func_10172(var_10173)
func_10174 = relay.Function([var_10173], output)
mutated_mod['func_10174'] = func_10174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_10243 = func_9857_call()
call_10244 = func_9857_call()
output = call_10243
output2 = call_10244
func_10255 = relay.Function([], output)
mod['func_10255'] = func_10255
mod = relay.transform.InferType()(mod)
output = func_10255()
func_10256 = relay.Function([], output)
mutated_mod['func_10256'] = func_10256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10291 = relay.var("var_10291", dtype = "uint32", shape = ())#candidate|10291|()|var|uint32
var_10292 = relay.var("var_10292", dtype = "uint32", shape = (14, 5, 1))#candidate|10292|(14, 5, 1)|var|uint32
bop_10293 = relay.right_shift(var_10291.astype('uint32'), var_10292.astype('uint32')) # shape=(14, 5, 1)
output = relay.Tuple([bop_10293,])
output2 = relay.Tuple([bop_10293,])
func_10296 = relay.Function([var_10291,var_10292,], output)
mod['func_10296'] = func_10296
mod = relay.transform.InferType()(mod)
var_10297 = relay.var("var_10297", dtype = "uint32", shape = ())#candidate|10297|()|var|uint32
var_10298 = relay.var("var_10298", dtype = "uint32", shape = (14, 5, 1))#candidate|10298|(14, 5, 1)|var|uint32
output = func_10296(var_10297,var_10298,)
func_10299 = relay.Function([var_10297,var_10298,], output)
mutated_mod['func_10299'] = func_10299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10255_call = mod.get_global_var('func_10255')
func_10256_call = mutated_mod.get_global_var('func_10256')
call_10308 = func_10255_call()
call_10309 = func_10255_call()
output = call_10308
output2 = call_10309
func_10311 = relay.Function([], output)
mod['func_10311'] = func_10311
mod = relay.transform.InferType()(mod)
output = func_10311()
func_10312 = relay.Function([], output)
mutated_mod['func_10312'] = func_10312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_10386 = func_9857_call()
call_10387 = func_9857_call()
output = relay.Tuple([call_10386,])
output2 = relay.Tuple([call_10387,])
func_10432 = relay.Function([], output)
mod['func_10432'] = func_10432
mod = relay.transform.InferType()(mod)
mutated_mod['func_10432'] = func_10432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10432_call = mutated_mod.get_global_var('func_10432')
call_10433 = func_10432_call()
output = call_10433
func_10434 = relay.Function([], output)
mutated_mod['func_10434'] = func_10434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10255_call = mod.get_global_var('func_10255')
func_10256_call = mutated_mod.get_global_var('func_10256')
call_10446 = func_10255_call()
call_10447 = func_10255_call()
func_10255_call = mod.get_global_var('func_10255')
func_10256_call = mutated_mod.get_global_var('func_10256')
call_10456 = func_10255_call()
call_10457 = func_10255_call()
output = relay.Tuple([call_10446,call_10456,])
output2 = relay.Tuple([call_10447,call_10457,])
func_10466 = relay.Function([], output)
mod['func_10466'] = func_10466
mod = relay.transform.InferType()(mod)
mutated_mod['func_10466'] = func_10466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10466_call = mutated_mod.get_global_var('func_10466')
call_10467 = func_10466_call()
output = call_10467
func_10468 = relay.Function([], output)
mutated_mod['func_10468'] = func_10468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10432_call = mod.get_global_var('func_10432')
func_10434_call = mutated_mod.get_global_var('func_10434')
call_10495 = relay.TupleGetItem(func_10432_call(), 0)
call_10496 = relay.TupleGetItem(func_10434_call(), 0)
func_7653_call = mod.get_global_var('func_7653')
func_7656_call = mutated_mod.get_global_var('func_7656')
var_10510 = relay.var("var_10510", dtype = "float32", shape = (126,))#candidate|10510|(126,)|var|float32
call_10509 = func_7653_call(relay.reshape(var_10510.astype('float32'), [7, 2, 9]))
call_10511 = func_7653_call(relay.reshape(var_10510.astype('float32'), [7, 2, 9]))
output = relay.Tuple([call_10495,call_10509,var_10510,])
output2 = relay.Tuple([call_10496,call_10511,var_10510,])
func_10515 = relay.Function([var_10510,], output)
mod['func_10515'] = func_10515
mod = relay.transform.InferType()(mod)
var_10516 = relay.var("var_10516", dtype = "float32", shape = (126,))#candidate|10516|(126,)|var|float32
output = func_10515(var_10516)
func_10517 = relay.Function([var_10516], output)
mutated_mod['func_10517'] = func_10517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9935_call = mod.get_global_var('func_9935')
func_9936_call = mutated_mod.get_global_var('func_9936')
call_10543 = relay.TupleGetItem(func_9935_call(), 1)
call_10544 = relay.TupleGetItem(func_9936_call(), 1)
func_8840_call = mod.get_global_var('func_8840')
func_8843_call = mutated_mod.get_global_var('func_8843')
call_10580 = relay.TupleGetItem(func_8840_call(relay.reshape(call_10543.astype('float32'), [3, 14, 3])), 3)
call_10581 = relay.TupleGetItem(func_8843_call(relay.reshape(call_10543.astype('float32'), [3, 14, 3])), 3)
output = relay.Tuple([call_10543,call_10580,])
output2 = relay.Tuple([call_10544,call_10581,])
func_10586 = relay.Function([], output)
mod['func_10586'] = func_10586
mod = relay.transform.InferType()(mod)
mutated_mod['func_10586'] = func_10586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10586_call = mutated_mod.get_global_var('func_10586')
call_10587 = func_10586_call()
output = call_10587
func_10588 = relay.Function([], output)
mutated_mod['func_10588'] = func_10588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10598 = relay.var("var_10598", dtype = "float64", shape = (8, 5, 1))#candidate|10598|(8, 5, 1)|var|float64
uop_10599 = relay.exp(var_10598.astype('float64')) # shape=(8, 5, 1)
output = uop_10599
output2 = uop_10599
func_10604 = relay.Function([var_10598,], output)
mod['func_10604'] = func_10604
mod = relay.transform.InferType()(mod)
mutated_mod['func_10604'] = func_10604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10605 = relay.var("var_10605", dtype = "float64", shape = (8, 5, 1))#candidate|10605|(8, 5, 1)|var|float64
func_10604_call = mutated_mod.get_global_var('func_10604')
call_10606 = func_10604_call(var_10605)
output = call_10606
func_10607 = relay.Function([var_10605], output)
mutated_mod['func_10607'] = func_10607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10432_call = mod.get_global_var('func_10432')
func_10434_call = mutated_mod.get_global_var('func_10434')
call_10630 = relay.TupleGetItem(func_10432_call(), 0)
call_10631 = relay.TupleGetItem(func_10434_call(), 0)
output = call_10630
output2 = call_10631
func_10641 = relay.Function([], output)
mod['func_10641'] = func_10641
mod = relay.transform.InferType()(mod)
mutated_mod['func_10641'] = func_10641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mutated_mod.get_global_var('func_10641')
call_10642 = func_10641_call()
output = call_10642
func_10643 = relay.Function([], output)
mutated_mod['func_10643'] = func_10643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10311_call = mod.get_global_var('func_10311')
func_10312_call = mutated_mod.get_global_var('func_10312')
call_10664 = func_10311_call()
call_10665 = func_10311_call()
func_3883_call = mod.get_global_var('func_3883')
func_3885_call = mutated_mod.get_global_var('func_3885')
var_10682 = relay.var("var_10682", dtype = "float32", shape = (99,))#candidate|10682|(99,)|var|float32
call_10681 = func_3883_call(relay.reshape(var_10682.astype('float32'), [11, 1, 9]))
call_10683 = func_3883_call(relay.reshape(var_10682.astype('float32'), [11, 1, 9]))
func_3994_call = mod.get_global_var('func_3994')
func_3997_call = mutated_mod.get_global_var('func_3997')
var_10685 = relay.var("var_10685", dtype = "uint64", shape = (36,))#candidate|10685|(36,)|var|uint64
call_10684 = relay.TupleGetItem(func_3994_call(relay.reshape(var_10685.astype('uint64'), [2, 3, 6]), relay.reshape(var_10685.astype('uint64'), [2, 3, 6]), ), 0)
call_10686 = relay.TupleGetItem(func_3997_call(relay.reshape(var_10685.astype('uint64'), [2, 3, 6]), relay.reshape(var_10685.astype('uint64'), [2, 3, 6]), ), 0)
output = relay.Tuple([call_10664,call_10681,var_10682,call_10684,var_10685,])
output2 = relay.Tuple([call_10665,call_10683,var_10682,call_10686,var_10685,])
func_10704 = relay.Function([var_10682,var_10685,], output)
mod['func_10704'] = func_10704
mod = relay.transform.InferType()(mod)
var_10705 = relay.var("var_10705", dtype = "float32", shape = (99,))#candidate|10705|(99,)|var|float32
var_10706 = relay.var("var_10706", dtype = "uint64", shape = (36,))#candidate|10706|(36,)|var|uint64
output = func_10704(var_10705,var_10706,)
func_10707 = relay.Function([var_10705,var_10706,], output)
mutated_mod['func_10707'] = func_10707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_10711 = func_10641_call()
call_10712 = func_10641_call()
func_8314_call = mod.get_global_var('func_8314')
func_8322_call = mutated_mod.get_global_var('func_8322')
var_10727 = relay.var("var_10727", dtype = "float32", shape = (864,))#candidate|10727|(864,)|var|float32
var_10728 = relay.var("var_10728", dtype = "float32", shape = (2304,))#candidate|10728|(2304,)|var|float32
const_10729 = relay.const([-5.507008,-2.112811,-0.070609,6.090516,-0.266403,2.408588,1.736935,8.179865,0.759171,7.330532,8.345078,-4.299511,7.832821,-9.959610,-1.614285,-6.608285,-5.086009,8.785583,-2.919787,9.854087,9.087140,6.185497,-3.037437,-6.590613,-3.135688,1.406256,9.238794,8.834872,-4.595385,4.206343,-6.622414,9.990055,-8.950273,7.211518,5.460283,0.912180,-9.706264,-2.673277,2.779979,-8.709692,-8.847891,2.629723], dtype = "float32")#candidate|10729|(42,)|const|float32
const_10730 = relay.const([-8.827249,-6.565655,-0.022329,3.559145,-8.010327,-9.143185,5.462735,6.515016,-1.823743,-5.467247,-9.734502,5.122643,-9.462437,-0.874461,5.799863,8.231179,-3.705079,7.485023,-4.159359,4.947179,6.957776,-8.410934,-5.254520,-2.165286,3.480458,-0.732279,0.591347,9.101489,4.193823,9.033170,9.036161,-6.174834,1.327992,-9.638218,6.916635,-6.447309,8.283342,6.737152,-6.615252,1.299939,3.299017,-9.433415,1.516701,-2.541205,4.399589,-9.817218,3.881116,8.096376,-6.911491,-4.126385,0.227506,-4.004597,3.665195,-7.686258,-0.093147,-4.253866,-7.088264,-9.159772,-5.415068,-5.662106,4.099684,-7.846367,9.293406,8.598612,4.833624,2.603969,-7.414151,-7.324144,-6.283523,-5.553929,-9.788293,-4.947191,1.926812,-4.658786,7.572058,3.997490,2.847576,9.568399,4.529604,-0.085985,-5.005077,-1.753701,-8.163247,7.807083,7.272914,3.631799,-9.972385,-6.167828,-8.539622,6.584715,1.164380,-3.023915,-3.460935,-2.619155,-9.971847,-5.153507,-6.931141,-9.033820,0.490873,7.281406,2.537345,-9.202043,-2.172071,7.781345,-2.165199,0.088897,5.536687,-6.207505,8.653105,-6.504503,-6.131480,2.160484,2.514728,0.455535,4.614395,6.612135,1.552791,-0.336947,8.834294,-5.828932,-6.206299,4.463886,-1.396399,0.891571,-8.435996,0.048334,-9.161703,-3.076584,-8.070057,0.423608,-1.667606,-4.891483,-3.682435,-6.316538,-5.240559,5.164685,-8.346520,7.453583,3.022519,-3.722935,-3.716219,-6.607352,-4.184120,-2.074381,-8.294545,-8.280620,-2.196608,-7.364902,4.052258,-9.605810,8.125053,-3.362572,9.125229,-3.950851,-1.295786,-5.322897,4.451271,-7.990846,4.884159,-7.880601,-7.124600,5.181212,-4.667295,5.074870,-6.188425,0.601667,-1.828581,3.168127,0.994439,-1.866531,-5.530945,-1.824339,6.190845,-3.565986,9.196401,-8.871596,5.799357,0.395184,8.252093,-3.963980,-1.902022,8.222953,7.083578,-4.134402,4.226583,9.657052,-1.208735,3.151995,-8.610166,-1.245558,-4.150358,6.631631,-2.716705,2.326659,0.388931,3.847804,-0.467041,-4.010334,8.454014,-7.937387,6.777493,7.163441,-3.187669,4.118310,-0.475360,-5.542942,-5.541311,-0.567950,-7.139146,-9.863251,8.314879,-3.481872,4.783058,-0.237383,9.284338,3.598831,-7.651098,-4.937669,3.506472,6.887366,-7.352365,-0.689854,4.839467,4.842628,3.799622,1.778430,-2.801691,-8.849229,2.103792,-3.839656,4.353787,3.732022,-0.191404,-6.919268,-1.775814,7.678489,-3.548200,6.623397,5.296772,4.947021,1.887042,2.134403,-0.091036,8.147298,-2.663402,6.001479,1.774926,7.232310,-8.829787,8.209827,9.444775,7.242382,-9.267740,4.711384,-8.805918,-4.675133,-4.454402,9.312806,3.780786,-0.747115,-7.577102,-1.728522,-1.423450,-5.674524,9.989106,8.781388,-6.167655,-7.228931,-5.924025,-3.856596,2.760520,-1.139009,2.064510,-7.161301,-8.037683,-4.050624,-7.173820,-0.363862,6.014733,-7.476526,-0.594104,8.387322,-5.849183,3.193422,-5.486153,5.934843,7.535238,9.597304,2.479271,9.821664,-2.544569,1.712513,-4.796779,0.910501,-3.234876,3.214752,-0.760662,7.408823,-2.743306,5.065013,9.335876,-6.775573,-7.338796,3.493938,-7.690955,4.188192,-5.205860,3.740550,-9.614903,-8.909838,-5.739699,8.279323,6.119133,-8.048653,2.990922,-2.069247,-8.975977,1.595014,-9.545205,7.366889,-7.339844,0.938486,7.605242,7.495197,7.944495,-5.834449,7.020479,-1.183120,-3.957257,2.434639,-9.188103,-6.176132,-2.419037,0.335751,-8.783951,8.154529,9.092670,-3.156414,-3.864333,-7.190978,4.706694,9.390498,-4.187082,1.916059,-1.185446,8.603342,-9.113055,-6.708993,4.507130,5.208982,-6.344166,-0.371192,0.605649,-4.170037,6.160336,-3.674164,4.644306,8.225849,5.583708,-8.199132,7.365543,6.137325,-5.386294,8.975337,5.283005,1.102136,6.792128,-5.400562,-5.875054,-3.440019,9.111195,5.644863,1.905880,4.601555,0.668313,-7.393007,7.814245,2.231329,4.124073,4.132809,6.727844,-7.806721,3.610182,-4.201217,3.744455,4.489315,6.353354,3.755209,4.464124,5.935358,6.078027,-2.408327,8.944324,-6.473561,-7.929242,-7.707196,-0.473428,-5.952222,4.574654,-4.940032,-3.961543,5.560679,-0.930056,-4.744938,3.565109,-0.965219,0.088430,4.645788,-2.185872,-7.057059,-0.453805,0.135766,4.963807,-5.026862,-3.982100,-0.855798,-7.292312,-0.031872,-3.445100,-5.097953,-7.195919,-1.978516,2.897130,2.852858,3.067536,-5.968039,-8.729194,9.260344,-9.069790,-1.841360,-0.415041,6.302151,-2.226863,7.296943,-5.890270,0.772115,-5.916854,-9.400005,5.427928,-3.568671,6.579774,-3.103271,-0.459491,-2.465822,8.915284,7.830489,9.596991,-1.479884,-0.671600,-2.173159,-2.964058,6.590214,-3.673906,-1.101536,0.919359,-3.734665,-5.148050,-2.596360,-9.953630,1.175530,2.716030,1.838968,3.383643,7.125704,0.581997,-2.703645,7.938261,6.081151,9.048501,2.243888,-1.038995,-8.986448,6.873194,6.390112,4.218488,6.182666,7.571319,7.085669,7.904202,-2.132451,-7.748803,-6.089362,-5.292657,2.580273,6.510759,7.796646,6.293974,-6.086206,-2.356965,-9.268017,-6.811467,7.086141,4.564331,-1.397311,5.314844,3.539340,0.976652,9.093255,5.447819,-2.996242,3.463435,-0.786097,0.063705,4.011723,-0.580865,0.393059,-5.586339,-5.407485,8.008177,-9.924630,1.827117,-3.474715,2.420579,1.089144,3.519564,9.539249,5.226291,0.623074,2.269995,-2.964384,-3.462186,-1.656814,-8.416861,-9.089905,-7.706457,-5.039307,3.790610,-8.707200,-4.863919,2.000973,9.294474,7.524807,8.744453,4.945439,6.407871,-5.335750,7.235613,-2.718418,-5.544435,0.730523,9.492041,-0.187766,0.431067,2.642750,-0.272772,1.062252,-3.815120,-3.797273,4.211756,-9.191870,-8.616547,-6.279161,2.373694,6.659939,-9.910144,-7.650618,1.413876,-4.018739,-8.391521,-3.535187,-2.849757,-8.320197,-6.466315,-4.454079,4.536152,9.430294,-0.993123,0.045309,-8.779168,4.198359,-1.764792,8.270363,-7.619067,-0.617733,4.919796,-8.269378,-9.554469,-7.280693,2.401227,-6.004104,5.214978,-2.697425,9.030396,-8.181583,6.443590,-3.475767,6.847271,3.773179,4.097647,-2.391122,-8.733797,7.705331,-9.638384,-2.929937,-6.387036,-1.321255,-2.097363,2.154028,-8.493240,6.166984,3.234979,3.482154,8.192800,3.991340,-4.913593,-6.812848,-7.105289,3.296083,2.446268,-1.503493,-7.596025,-3.085945,-1.515334,1.770580,9.256217,-4.871288,-1.040915,4.697998,-8.498282,5.429853,1.633434,9.838405,5.918520,-0.701237,-5.174929,-1.094956,6.457460,9.467781,4.048180,-7.428531,-9.691155,9.479446,6.884805,-9.168801,1.638535,-9.320482,0.628707,-2.789326,8.079444,-0.732212,-7.076749,-8.407653,7.099125,9.319456,-8.302266,5.804867,-4.273304,-6.482085,3.919269,0.735718,-5.438145,6.755140,1.971418,-6.662028,-1.023485,8.174374,9.989465,-0.831020,5.458728,1.217991,-7.278774,-5.045080,-1.866969,-5.992046,-4.386814,-2.065120,4.791493,-8.422750,-6.719159,0.100676,0.810272,8.824378,0.822971,6.222522,7.522762,-7.873244,3.868898,-9.133945,1.470865,-2.080676,-9.697172,-1.512348,-9.909901,-2.025185,0.362335,-1.037745,-5.865109,-1.438916,4.445131,3.785943,-7.565130,-6.852129,-8.190824,2.155861,8.869939,0.178313,0.782542,-1.878209,7.902364,-1.368004,-5.013442,2.962750,-9.705291,-5.405691,-6.108011,-9.187421,-7.678928,-9.548140,8.935583,-0.266148,7.074929,-7.090764,-8.552408,3.175971,4.652947,-3.073544,-2.248873,3.380662,1.812046,-3.887520,4.441904,2.956045,-1.825533,-8.711063,7.544878,-0.329118,6.914549,1.893467,8.783786,3.417815,-9.703029,9.575622,3.957812,4.074061,-8.336132,-4.615064,-6.662441,6.468550,-9.172256,-4.449138,9.959672,-8.347444,4.139215,-2.470070,-5.058146,-2.933708,0.506793,7.577492,-1.396318,-3.763584,7.918514,-4.749789,-0.313933,-8.550331,8.621788,-5.550982,8.705034,6.020078,7.019318,-3.814950,6.001803,-4.939384,-8.775044,-3.484029,1.347976,9.970063,0.298532,-1.567659,-5.264129,-0.332868,-7.734929,-3.664849,-5.108876,-2.316019,9.654736,0.632267,7.671441,2.958775,-7.031589,-1.757231,-3.391071,-4.288856,0.420389,2.100222,9.834476,-5.510882,4.140357,6.601840,-9.726717,0.932141,-8.794051,6.728066,-4.512385,0.013450,-4.292110,-8.537488,-8.174783,-8.384706,-9.620474,3.080871,-6.335785,3.967130,-5.287195,8.291617,-6.221201,-1.425199,9.478169,7.669912,-7.664787,-8.580408,-9.567184,-1.887652,9.556712,6.094025,-1.578306,2.457028,-9.194549,-6.718824,-3.567655,0.674117,-9.608354,3.248531,2.448526,-1.825121,-7.884632,-8.061191,5.123214,3.478857,-9.645478,-2.745840,2.223045,5.881027,-0.511302,-4.499776,5.953861,-7.014248,5.749331,9.089833,-5.710645,-0.377959,4.051885,0.213659,7.809341,6.146086,6.755563,6.077717,-3.323596,-7.501616,-3.891403,9.160180,7.389844,-6.577129,6.927797,6.371248,3.827454,-2.300895,1.045033,2.361002,-7.324399,-1.488773,5.268009,-9.125359,-8.162399,-0.760881,4.670667,-3.812498,1.680463,9.447959,-8.607653,-6.132432,9.950923,-5.689934,4.925301,8.930801,2.677256,7.748640,2.200905,-1.318864,8.393250,2.993973,-1.454644,8.686894,-7.707305,-4.200884,8.504401,-4.142348,-7.571048,2.095800,-0.791057,4.402152,-4.649106,-3.087251,8.813624,2.499300,-7.397015,3.586819,-2.003350,-2.061566,-2.495531,-6.260564,-9.213720,-0.851161,5.676195,-2.984709,-4.320348,6.781858,-5.529206,9.029905,-2.218173,-7.375576,1.450327,1.874449,-1.197811,-9.341909,9.647161,3.902970,7.931684,-2.552745,0.384464,-9.161905,-5.124405,3.745677,-5.659822,-8.508546,2.042954,7.610147,1.568367,2.177099,-4.591265,-5.850288,-7.360131,2.017327,1.323040,-6.208830,-0.478309,-0.543771,8.074089,-0.165106,-3.379616,-3.103277,2.620526,-4.622446,4.653377,5.570965,6.375321,7.717387,6.023317,7.963895,-9.723222,2.787594,0.422995,0.171068,8.677533,-1.388671,4.684735,-5.154466,-6.833156,6.752841,-2.250663,8.025680,-3.967368,9.426159,-8.653845,-9.228578,-8.350498,0.026804,8.370595,-5.032659,-3.960338,7.250405,-7.870482,6.594792,-8.458122,-2.273803,9.418071,7.620803,-9.754959,1.600127,2.654877,8.875611,2.269208,1.558914,5.665878,-7.772846,-7.531108,2.454831,6.098660,3.847323,4.759926,-4.392084,-2.214423,-5.194952,-6.252056,8.683485,8.207704,5.069574,7.901110,-2.173429,6.371198,7.716611,-9.090184,-7.992827,2.167904,3.886910,8.157002,5.898712,2.178451,-7.465229,3.618382,-5.090702,-8.123742,0.745843,-6.197619,-6.176342,-9.159494,-6.076525,8.326527,-2.509949,-8.425395,8.439709,3.529840,4.424065,3.705047,-6.267119,7.251468,3.244979,0.448052,-3.323409,-6.761014,7.203698,-9.638621,2.582976,-4.384861,-5.078992,-6.599207,-4.692602,-0.838754,-6.592473,8.397775,-6.085660,1.190620,-1.262563,-1.307430,9.012655,6.863399,-8.553846,-9.871508,3.138557,1.777810,9.857012,-5.848827,-9.308607,-1.945075,-3.273216,8.516778,-6.085732,-9.429970,2.725976,2.151336,-1.660182,9.229996,-3.184789,-9.265897,-8.657090,2.887336,8.461947,3.506944,-2.622159,1.676167,6.860469,8.200331,6.079791,-7.739732,9.043377,8.746121,4.688699,-3.805232,-4.692758,7.306986,-2.644698,9.771991,-6.025386,1.534611,-6.489305,0.118028,-1.793526,2.966224,9.846062,-5.560044,-8.947430,-5.926470,7.713105,5.745714,6.951953,-9.128286,-8.048853,-7.461146,3.067632,9.758251,-5.761207,5.603854,-4.573182,-0.290109,9.149385,-9.255764,0.517676,3.853366,5.288705,-2.734520,6.591149,-8.350275,-8.129334,8.245836,1.279146,4.239561,9.028290,-6.011426,-4.974224,0.171376,8.507103,1.888986,-3.794851,3.819492,6.910597,3.668755,1.108275,-9.847545,-0.264286,1.429187,8.870992,2.302301,1.840932,-6.044086,-6.142136,8.958454,8.959398,-4.436797,9.574689,3.928616,-9.414482,-7.026254,-1.406629,5.604188,-0.760938,-8.191323,-7.837213,-9.469776,9.382907,0.672263,1.208540,-4.878091,5.882025,-4.288237,-2.561489,2.119163,-5.462281,-8.468415,1.962767,5.411936,-1.209479,5.945905,8.971518,5.685846,-9.535130,0.609723,8.840654,-3.280490,-9.919236,-8.320736,-3.080631,4.045140,0.699082,3.460979,-4.715760,-9.040993,1.083734,3.224880,1.398507,0.070632,1.268653,1.942295,-3.926681,8.548612,0.875255,-3.735995,5.248634,-7.760464,1.431063,9.471037,2.865439,9.476560,3.186387,1.212451,3.229480,-1.734127,6.886818,7.756002,1.760052,0.206606,-9.056560,-0.428509,4.139005,-9.421161,9.814793,-9.398921,8.703082,1.655556,-4.041225,-0.517105,7.428922,-6.463110,-3.178391,9.168892,-4.621090,-9.353130,-1.351331,2.068824,-7.530553,-3.135549,1.175375,-7.406165,-9.225206,-8.845247,-3.223817,-2.424750,6.191571,8.723428,4.851100,-2.409067,6.953097,-8.229331,1.209178,3.271821,-7.775483,4.245731,5.618201,-4.964344,6.259007,-2.964977,9.799022,-2.071943,-7.493693,1.912139,-8.176160,2.316222,-9.814029,2.805542,2.696158,9.513946,-2.286927,-3.224511,-9.604164,-9.000271,5.316304,-4.218696,7.567999,2.740920,-8.372410,5.782662,-8.936906,-2.212192,8.356694,4.129313,-9.402879,-0.274264,9.113765,-2.197135,9.616219,-1.320738,-8.739297,-4.474829,1.389774,8.339174,-5.417033,-7.566120,1.701008,6.404248,-7.994427,-5.538774,-7.954868,6.222478,0.099359,5.653881,-9.646702,1.307608,-7.346218,2.330287,0.205007,2.400574,6.423544,5.123878,-9.103645,8.030371,4.676219,-1.395514,-9.092641,9.279688,6.934861,3.889350,-4.476220,-3.291886,-0.933395,-7.168252,-2.447464,8.120154,6.304468,3.140797,6.089297,-5.171850,-4.860793,-9.457941,0.361860,-7.852899,3.695377,-2.018964,-3.282065,-5.044672,-9.751333,-8.626438,1.078253,7.690414,-9.075719,-7.300022,6.664162,-7.650289,4.117559,1.116246,8.783795,-4.357051,6.050899,-0.390918,8.444031,-3.806599,-2.688997,1.738744,-9.438825,-6.099439,1.650113,-5.815278,-9.272417,-8.793900,-7.223662,-1.462068,4.163540,-7.630243,9.436343,-3.489930,1.875189,6.853026,1.060704,6.506439,0.170282,0.265832,1.394131,8.807033,-8.798169,3.952569,1.320412,-9.610454,-5.969654,2.551117,-8.657378,4.405051,-5.182163,2.520537,8.708325,6.669257,-3.817390,7.703324,4.635229,1.405713,-6.824585,-8.454165,-7.422534,-2.898746,9.746947,7.792544,4.177890,5.012011,0.142938,1.144379,-2.721770,4.545637,7.682597,-9.153219,2.828792,0.045955,-1.636134,-5.866582,-4.656266,-1.602014,-1.456280,0.342868,-4.474213,-0.674233,7.264162,-6.032805,-0.878567,6.442668,-6.325286,-5.873042,4.780221,1.408960,8.632984,5.605399,-0.675028,4.282642,1.345713,-7.676114,-8.676632,2.347098,-2.523705,1.412504,9.511591,0.928288,-1.429738,8.968518,1.466184,3.274386,-0.032723,-6.738285,-7.014179,-9.337754,1.085289,6.475589,4.218433,4.223770,-8.137377,-1.619830,8.218189,8.306884,-1.933024,-3.510385,7.093115,-4.084412,-3.674328,-2.555106,1.232246,-0.399026,0.265209,-3.209995,-4.838584,8.765828,-6.809935,-3.684732,1.618622,0.661640,-2.937618,5.266029,0.149710,-1.158990,-3.659780,1.794998,9.043727,-9.002441,1.670276,9.212342,5.117854,4.653256,-7.043583,4.131752,9.219014,4.765044,-0.079066,-5.776921,6.056806,0.068056,6.052072,6.882554,-2.098569,-8.939932,-4.927652,9.224194,-5.755361,9.726049,-1.730537,-9.981624,0.161602,-8.826371,-0.839564,6.364430,3.504455,8.581582,6.451930,1.612080,0.737019,-7.006003,9.421639,8.133380,-2.417097,-2.241579,8.651507,-1.241232,0.136987,9.686421,3.383294,3.173518,8.499883,-3.367184,2.223708,9.385045,6.593926,-5.773025,1.501653,-4.992325,-6.444057,7.502725,9.287620,-5.848753,-4.616767,-1.981356,-9.204294,-8.397061,-7.648622,9.424934,-8.831599,-0.488313,-3.780684,-7.187491,-9.684271,7.659445,0.896927,2.583648,-5.904361,0.572589,0.725646,3.993429,6.973299,9.611963,-0.301326,8.166060,3.345895,-5.317149,-9.855915,-6.712330,2.120504,2.354581,-5.680667,6.566851,-2.227889,6.969145,-7.488850,-5.259804,-7.886626,6.191791,-7.735177,4.254424,5.784864,5.241707,-9.372013,-0.086257,3.932064,-5.363270,-2.798980,-4.635362,0.103515,-9.747747,-9.709373,5.529062,0.503713,7.239430,-6.669750,5.752281,-4.210722,2.382810,-4.746773,-5.043841,-5.667706,1.943723,-7.492010,5.655001,8.646097,9.230801,-8.510257,-7.180799,-2.195338,3.555138,-9.767760,-5.412328,5.258072,4.419766,6.442971,8.529562,0.704507,5.641027,6.058558,3.975106,-6.118068,-6.397896,6.892970,-1.187739,8.216495,-8.556128,6.229672,-6.743155,0.382761,-9.795230,-9.152363,-4.211956,2.111878,3.729398,-8.652134,4.341591,-4.154641,-4.371976,6.004097,7.138580,-7.214006,-3.069126,-2.845349,8.417679,5.548603,-0.270421,1.619654,9.715028,-9.299665,3.594713,5.970377,-9.108497,1.669134,0.274238,3.878550,5.314234,7.868830,1.519670,-8.913242,5.557087,1.103010,4.951071,-6.316369,3.262179,-3.915866,9.926265,8.632910,3.643230,-3.091726,7.877958,3.866677,-5.741821,4.598244,-8.483746,-8.989068,4.857971,0.239086,-2.126895,7.468288,8.005378,8.828186,9.004127,-6.262010,9.258064,0.596474,-4.957093,8.966208,3.166656,4.669277,-6.579986,2.764236,3.703476,2.213413,-4.125202,3.388708,-5.593528,4.314840,7.064754,-1.209227,-7.577095,-1.988878,-6.220240,7.423023,-5.429417,0.058808,-4.933143,-5.238107,0.766685,-1.943826,-4.462771,8.261906,-2.283044,-1.509431], dtype = "float64")#candidate|10730|(1680,)|const|float64
var_10731 = relay.var("var_10731", dtype = "bool", shape = (3, 45))#candidate|10731|(3, 45)|var|bool
call_10726 = relay.TupleGetItem(func_8314_call(relay.reshape(var_10727.astype('float32'), [12, 6, 12]), relay.reshape(var_10728.astype('float32'), [2304,]), relay.reshape(const_10729.astype('float32'), [14, 3]), relay.reshape(const_10730.astype('float64'), [1680,]), relay.reshape(var_10731.astype('bool'), [135,]), relay.reshape(var_10727.astype('uint32'), [12, 6, 12]), ), 10)
call_10732 = relay.TupleGetItem(func_8322_call(relay.reshape(var_10727.astype('float32'), [12, 6, 12]), relay.reshape(var_10728.astype('float32'), [2304,]), relay.reshape(const_10729.astype('float32'), [14, 3]), relay.reshape(const_10730.astype('float64'), [1680,]), relay.reshape(var_10731.astype('bool'), [135,]), relay.reshape(var_10727.astype('uint32'), [12, 6, 12]), ), 10)
bop_10733 = relay.less_equal(call_10711.astype('bool'), const_10730.astype('bool')) # shape=(8, 8, 1680)
bop_10736 = relay.less_equal(call_10712.astype('bool'), const_10730.astype('bool')) # shape=(8, 8, 1680)
func_8840_call = mod.get_global_var('func_8840')
func_8843_call = mutated_mod.get_global_var('func_8843')
const_10743 = relay.const([8.862848,-8.445699,-1.039388,0.938874,1.757038,7.175140,7.191117,-8.698294,6.313922,6.360495,9.388465,8.639016,0.885369,-6.035996,0.904457,1.535325,0.210602,6.447633,4.449145,-3.582267,-6.592156,-0.390919,4.859333,-3.883823,9.922997,-3.161173,0.768354,-0.209882,1.087268,2.020403,8.458004,5.274637,-6.560951,-4.434163,8.034105,-9.879191,-1.809405,4.902882,9.064002,5.341169,-5.933599,6.790733,4.848788,-5.155647,-6.741195,4.574777,-6.278616,-3.011782,2.845505,-8.868387,-9.190068,4.246752,-7.260038,-1.528412,-4.016367,-9.332133,1.359861,-3.603331,1.342361,0.712067,-5.289489,6.379749,7.232048,0.793038,0.869963,6.145224,-4.028637,-9.485940,-6.031556,-7.592913,-9.579488,5.306217,-8.689498,-6.402843,-3.336925,-1.942933,3.885282,-8.154605,4.176360,9.882066,4.888957,-9.821569,5.413091,-8.748591,5.574339,1.489789,3.722394,-4.833977,-9.898587,-4.739971,-9.412463,-6.870520,-4.150769,9.899970,-0.559167,-1.685528,5.066939,-2.649000,-8.658652,-8.718857,0.292831,5.122883,-3.921501,4.017721,3.407433,-6.293798,-1.751254,3.683747,6.017841,-2.132159,8.040014,0.600883,-0.020065,-0.958823,9.326028,-2.092083,-4.553733,6.398853,1.715908,6.570608,-0.853277,3.926750,-8.555834,-4.668015,0.113029,-1.407561], dtype = "float32")#candidate|10743|(126,)|const|float32
call_10742 = relay.TupleGetItem(func_8840_call(relay.reshape(const_10743.astype('float32'), [3, 14, 3])), 0)
call_10744 = relay.TupleGetItem(func_8843_call(relay.reshape(const_10743.astype('float32'), [3, 14, 3])), 0)
var_10764 = relay.var("var_10764", dtype = "bool", shape = (3, 45))#candidate|10764|(3, 45)|var|bool
bop_10765 = relay.bitwise_or(var_10731.astype('int16'), relay.reshape(var_10764.astype('int16'), relay.shape_of(var_10731))) # shape=(3, 45)
output = relay.Tuple([call_10726,var_10727,var_10728,const_10729,bop_10733,call_10742,const_10743,bop_10765,])
output2 = relay.Tuple([call_10732,var_10727,var_10728,const_10729,bop_10736,call_10744,const_10743,bop_10765,])
func_10771 = relay.Function([var_10727,var_10728,var_10731,var_10764,], output)
mod['func_10771'] = func_10771
mod = relay.transform.InferType()(mod)
var_10772 = relay.var("var_10772", dtype = "float32", shape = (864,))#candidate|10772|(864,)|var|float32
var_10773 = relay.var("var_10773", dtype = "float32", shape = (2304,))#candidate|10773|(2304,)|var|float32
var_10774 = relay.var("var_10774", dtype = "bool", shape = (3, 45))#candidate|10774|(3, 45)|var|bool
var_10775 = relay.var("var_10775", dtype = "bool", shape = (3, 45))#candidate|10775|(3, 45)|var|bool
output = func_10771(var_10772,var_10773,var_10774,var_10775,)
func_10776 = relay.Function([var_10772,var_10773,var_10774,var_10775,], output)
mutated_mod['func_10776'] = func_10776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_10894 = func_9857_call()
call_10895 = func_9857_call()
func_10604_call = mod.get_global_var('func_10604')
func_10607_call = mutated_mod.get_global_var('func_10607')
var_10901 = relay.var("var_10901", dtype = "float64", shape = (40,))#candidate|10901|(40,)|var|float64
call_10900 = func_10604_call(relay.reshape(var_10901.astype('float64'), [8, 5, 1]))
call_10902 = func_10604_call(relay.reshape(var_10901.astype('float64'), [8, 5, 1]))
func_10296_call = mod.get_global_var('func_10296')
func_10299_call = mutated_mod.get_global_var('func_10299')
const_10911 = relay.const(-9, dtype = "uint32")#candidate|10911|()|const|uint32
var_10912 = relay.var("var_10912", dtype = "uint32", shape = (70,))#candidate|10912|(70,)|var|uint32
call_10910 = relay.TupleGetItem(func_10296_call(relay.reshape(const_10911.astype('uint32'), []), relay.reshape(var_10912.astype('uint32'), [14, 5, 1]), ), 0)
call_10913 = relay.TupleGetItem(func_10299_call(relay.reshape(const_10911.astype('uint32'), []), relay.reshape(var_10912.astype('uint32'), [14, 5, 1]), ), 0)
bop_10915 = relay.less(call_10910.astype('bool'), relay.reshape(var_10912.astype('bool'), relay.shape_of(call_10910))) # shape=(14, 5, 1)
bop_10918 = relay.less(call_10913.astype('bool'), relay.reshape(var_10912.astype('bool'), relay.shape_of(call_10913))) # shape=(14, 5, 1)
func_1854_call = mod.get_global_var('func_1854')
func_1857_call = mutated_mod.get_global_var('func_1857')
const_10921 = relay.const([-8.944314,-3.484488,7.930832,-3.722509,-8.763120,-9.168572,-4.881448,-7.944642,-6.410141,-5.330258,8.362024,7.157089,-6.681811,-1.395922,-6.959325,-0.138494,-9.678398,0.668374,-4.824562,-7.548219,-1.952447,-4.357637,9.266038,-8.703362,4.821308,-6.368560,-0.061757,0.153036,5.227973,-0.796024,5.772776,-6.426486,7.760588,1.027733,-3.504068,-5.185668,-1.558276,7.894750,9.654516,7.996479,-9.732947,0.508892,9.670143,-1.074177,9.126181,3.927211,3.759686,-0.164045,6.743961,-6.529299,0.936758,8.101484,2.874959,6.919870,-2.811274,6.508443,-6.814146,1.984519,5.495105,-9.524426,-3.573432,5.013642,-8.176113,-2.962027,-9.639481,2.198271,0.176822,6.560270,2.581924,-7.059344,-9.505879,-6.555525,-3.584253,-0.313809,4.696042,-2.785510,-9.494796,-4.559710,-4.263484,1.843882,1.016072,-3.872734,6.698650,-4.576416,6.827102,-3.277649,-2.409657,-7.726808,-1.250834,4.861705,-2.319697,8.859274,3.714945,0.176193,-8.323681,-7.281761,3.509904,-4.342823,5.434246,9.853740,3.004848,-7.136400,-6.999177,0.834003,2.631403,9.283508,-1.830763,6.033363,-5.882175,3.568694,0.808750,-2.307187,6.403192,1.762181,2.682071,2.403757,-5.927725,3.058301,-1.953835,6.465279,8.468166,5.694878,5.444955,0.247655,3.643159,-7.760067,9.469760,3.981380,7.092296,1.452505,1.773260,-4.642737,-1.179256,5.897716,-5.964548,-0.771992,3.628149,1.080750,-1.476826,-2.727490,-0.164918,-0.458357,3.908058,-9.453327,-6.017385,-1.247432,-9.829128,4.205598,-2.456734,6.580495,9.535762,-5.545020,-0.434259,5.170526,-8.313353,-9.701127,-8.177255,-5.299708,3.898898,5.244419,-6.411916,1.683440,-1.964913,4.274916,5.746878,5.092310,8.099735,4.433521,2.663291,-9.490380,-1.397073,-6.701315,-8.817323,0.875877,6.531067,5.685915,-1.030992,-8.285605,-3.754932,5.802465,6.730239,-0.998165,-9.081130,-7.190879,6.071126,3.638761,8.414676,-8.119454,0.807196,2.952842,-0.398719,-6.350447,-5.716337,5.317653,8.994584,-8.297579,9.056448,7.153067,5.067501,-2.570161,-7.213582,-9.298523,3.411384,7.044683,-6.851064,-6.364146,-1.629948,4.702927,4.814296,6.938172,9.562123,2.895455,-1.584522,-4.172452,-9.085610,-3.358784,5.247083,3.157662,-0.509849,4.786066,6.855964,3.747426,-1.921081,-8.932772,-3.623801,-4.164760,-7.001870,-1.767074,-8.430662,-4.374511,6.798496,-4.225623,5.802015,-2.140098,-5.301084,7.142392,9.119766,0.846773,6.688917,0.420020,5.674952,-9.157910,-1.203310,3.216011,9.517441,3.652500,-2.341828,3.403803,9.570208,4.230160,8.336982,-9.050458,-3.752795,2.902970,5.743306,7.982361,-3.664992,-2.011534,-2.952751,-5.249280,4.750228,4.366186,5.458227,-8.072868,-9.347426,-9.518530,-0.894731,-8.923749,4.102544,-4.556895,-8.488621,4.678129,8.665331,8.716616,0.893098,-6.136301,-8.227602,1.105141,-2.596676,-3.548808,8.460425,7.996058,1.155559,-2.353863,6.914346,-8.414716,-3.858615,-3.483035,7.518310,-1.217349,9.745767,-6.586514,-7.193242,3.976372,6.740786,8.175121,4.744094,-4.835451,-0.821085,5.875634,6.434483,2.200138,1.523971,-1.347477,-0.152627,-8.611390,7.895604,9.056896,-5.415709,-7.298619,-7.067802,-9.652280,-6.550292,6.226095,-2.802829,-4.223906,-7.411342,0.921471,-2.693630,-9.028481,-1.413455,-5.412234,8.669615,1.284094,1.370756,7.671257,6.074855,7.397583,-9.468546,-0.015792,1.793091,9.365446,5.930890,6.441827,-1.470551,-5.047708,-5.331748,-3.570149,-5.194507,3.663424,2.063511,5.402119,4.121007,2.198750,4.330796,-8.789172,-4.083899,-1.538077,-1.228568,5.226525,-5.524072,-9.002693,4.443635,-7.464676,-6.586612,4.934351,7.055900,9.668794,9.093699,-7.013195,-8.652437,2.212328,-2.662630,-7.414792,1.251146,9.151569,7.124163,2.706857,-0.308562,-4.161604,8.182602,3.163147,4.078703,2.441543,0.339632,6.941303,-2.945603,-1.056542,7.787963,-9.994803,0.353569,-4.987687,8.399985,3.718785,4.634409,-5.642238,7.082399,7.549875,-2.818322,9.109373,4.927252,-6.802810,8.666448,-4.306051,8.238935,2.304526,6.892398,-7.655015,6.130300,-3.636691,4.639177,-6.294540,-7.963357,1.912493,-6.252120,-7.954573,-4.071530,-9.434009,-5.939214,-5.909451,7.402641,-6.136619,9.119836,9.246234,-9.094687,9.993595,-6.084679,-5.291465,-9.693909,-9.485326,-0.317050,-1.638752,0.960921,-1.726898,0.941259,8.488884,-7.392231,4.826348,-9.214706,4.955120,9.213161,9.408490,-2.828264,-0.466501,3.516214,5.853392,-1.952772,-0.866443,-1.885951,9.015180,4.496882,-6.577912,-2.096475,8.047312,-6.750478,9.637338,-5.382802,-4.286849,-8.788123,0.763759,6.513500,9.340983,-4.897307,5.267453,-5.853136,-3.362713,0.034312,4.141607,8.131024,7.786951,6.097747,4.141940,1.907994,-1.271440,-3.938803,4.226646,8.572691,1.495905,0.057598,-4.528951,0.283614,8.750961,-1.500678,-7.203083,-0.495887,8.588829,-2.128677,2.809437,-0.535553,4.546263,4.342924,-8.745734,2.148616,-0.796357,-0.451951,-2.371017,3.226136,0.299753,1.134336,4.863185,1.764969,5.738586,2.111507,2.481696,5.503483,7.007592,4.211945,1.905131,9.966872,4.667533,-5.587637,-1.186743,-9.793527,0.624652,5.069958,9.432055,-5.221826,8.249483,8.434734,4.788917,5.772149,7.868361,3.673302,-5.360666,-1.348559,-5.184009,9.457997,-0.924056,-5.315856,5.032347,6.975172,-8.956923,-0.691925,7.275101,-3.981515,-0.192321,7.415320,8.354630,-5.129238,-1.902016,9.759090,1.897418,0.979397,-8.127864,-3.011362,3.705753,-3.494856,0.178435,6.650185,-7.323443,6.372488,-7.027965,-8.041767,3.600320,6.861413,8.989652,5.075785,8.147862,2.948351,-4.002381,-7.913192,3.979280,-1.331619,9.958411,9.390486,4.870238,-7.146794,-7.709008,5.983923,3.772333,4.776007,-0.632983,0.507853,1.658512,7.915991,-6.691477,7.787268,7.179943,-0.651224,-8.625533,-9.439497,0.289291,2.984067,-9.027726,7.790022,7.387811,-1.773102,0.703398,0.971163,-4.619472,6.365760,-0.318730,-6.628306,-1.676410,-3.723786,7.411806,-5.580271,5.616194,-0.279306,0.016896,4.752580,-6.620599,-4.935161,-5.428839,-6.723570,-0.019898,1.615098,-7.208379,-9.770840,1.512188,1.274349,-7.042315,0.325252,4.043458,1.091629,0.660940,7.595559,-8.955608,-4.344620,-2.276496,-4.320666,-6.701684,2.135809,9.578265,8.292929,2.274560,2.741890,-3.239640,9.332145,-1.334173,-4.303552,-1.600085,9.513070,3.383670,6.065992,-3.206033,7.833396,4.535627,-3.560478,-0.793367,9.925741,-8.456709,7.949189,8.045229,6.084395,1.360802,-0.719964,0.963427,2.360247,8.465810,-7.432820,-4.328521,-3.547261,9.490962,-0.455997,-4.719013,7.831811,8.826624,7.709821,6.089664,-8.997830,8.160951,-1.538604,6.846527,8.258513,-8.984847,-5.677327,9.270444,3.151212,4.534337,4.671388,5.326883,1.556247,4.606895,-7.458490,0.951116,-8.045090,6.332604,0.485540,-1.688431,9.598321,2.649527,8.623388,-4.020898,2.909848,-8.575793,9.624167,4.635273,-9.135367,3.759413,2.436756,-5.834001,5.603701,7.372305,-6.097688,-8.624009,-1.210496,2.201891,-7.382505,-4.533162,-5.061392,-4.383164,1.790990,-3.843836,2.612820,-1.259553,-0.366528,-9.493452,-7.482134,-4.237482,1.260622,-8.689201,-0.105093,7.145755,6.870338,-9.161787,-9.229334,2.592057,-3.591862,-5.870383,6.214566,3.877802,0.704203,-3.704193,1.482042,-6.787330,7.557068,-3.853972,-2.732377,-4.362709,-0.729285,0.579531,-6.930361,-4.552730,-5.136395,-7.429235,7.794082,2.880734,3.987381,-7.942662,4.182275,5.219385,8.298434,-0.913810,3.062214,2.939685,-2.035287,-0.937016,7.491506,4.854059,2.362885,3.404596,8.314477,2.960830,-8.003431,9.220706,-0.866480,-1.296446,7.844502,-9.917055,-5.963122,-1.296810,-9.853514,5.999601,7.259614,-5.706399,-6.511317,7.400630,-9.619188,-1.467948,-7.591119,-3.918853,-8.001588,-1.562901,-1.898024,-8.877939,-0.462847,6.240110,8.990236,-3.504596,7.270335,-7.602740,-6.482565,-0.587087,-0.386198,-8.245684,-3.678813,-5.902571,3.221313,-6.135534,1.456692,-8.175359,7.098755,-4.088048,-1.763832,0.589246,8.459612,3.971395,6.494640,0.644614,-3.173151,-1.588526,-3.238608,8.844681,0.353572,1.135308,-9.399589,-1.613714,7.340919,3.898777,3.735296,-1.012029,-8.066112,1.518738,8.337899,8.718018,-5.792609,-1.433301,-3.440188,-6.790141,-0.971999,-6.214202,-9.642884,-8.974203,-6.463277,5.066581,5.250122,-8.222009,-5.493928,0.442662,-5.671194,0.568710,5.028749,-9.721382,-1.711570,4.056303,-1.886993,9.411738,0.800636,8.275874,5.613303,2.622537,-6.642153,-2.581100,3.148401,-9.949960,8.237889,-8.015643,3.180383,-6.401842,-3.026955,-9.888157,-7.020878,7.949165,-9.846667,1.122675,1.061188,-7.872022,-3.161469,-7.847005,-9.104720,-7.976543,0.776885,-7.030464,7.006007,-0.343047,5.827689,-3.779291,-0.726137,8.574296,-4.728422,1.057576,3.955210,9.572534,-8.936630,-4.293322,-1.781730,-4.904418,4.130763,4.316392,-4.845639,-1.487187,-1.314266,5.944353,-9.519000,7.900197,6.978459,1.562887,-0.246565,-6.049665,-6.020307,-8.972052,6.534741,-8.318738,6.178939,4.788005,7.763603,6.147819,3.802194,7.144983,5.508756,-9.292485,4.112281,-1.845346,8.899020,-5.999982,5.542649,-7.608451,-3.568804,4.578387,-4.715666,8.786398,3.532563,-7.376912,6.241314,-4.149400,-0.714269,6.446139,-1.390588,-3.505836,-5.602915,-5.828901,6.637427,6.804512,6.776526,6.703426,7.235768,-0.327827,-4.855287,6.381159,-9.768717,-2.251501,5.363753,-0.468083,5.788965,5.842492,8.664836,7.474535,-1.202660,-2.251362,-8.179680,-0.858964,-9.716694,-0.697096,4.389478,-4.544652,0.321704,-7.767240,-1.876322,5.836402,5.873178,-4.270887,-7.102256,0.858336,-1.736322,-5.596872,-0.076834,-7.372361,7.879705,9.770441,2.943975,-0.586400,-0.456849,2.242988,2.025227,9.362328,0.260088,-2.914485,6.391866,-0.395275,3.426014,-7.876443,7.036466,8.165161,5.294474,1.525066,-4.961708,-9.843825,3.217682,-7.713665,-1.142014,3.756280,3.848771,9.320782,-6.819885,-1.582918,-9.930023,8.246955,1.905568,4.516954,0.116132,9.472146,-9.809437,-7.653955,7.098585,7.769432,-8.885460,1.859940,-8.946081,1.004317,6.706221,-4.590022,-1.231198,9.291950,-7.602218,9.903733,-4.031430,-0.275485,-0.963584,-2.491762,2.229030,0.397896,-9.446896,5.119160,0.716975,4.310719,-5.980302,-8.832509,9.327188,-7.271975,-0.124364,8.511500,5.121945,-8.273808,6.110219,5.085712,-9.762246,-0.054130,-9.128742,5.268758,-8.478480,-4.771551,-6.784469,-6.274643,-7.778329,-3.396880,-6.349715,7.260392,2.562662,1.921518,-3.099365,9.102466,3.208159,-5.918027,0.377641,9.790887,-8.755559,-8.587114,-7.010809,6.002778,4.649843,-5.030733,4.668457,7.323810,7.116229,5.608711,-7.187597,-9.229549,0.576953,5.181164,-1.880069,-1.043005,-8.272734,8.798856,0.780560,4.718323,-5.062151,-3.326254,-5.344977,-0.044534,-7.935665,4.359303,-4.020451,-2.963567,-7.507711,-0.108456,-7.700446,-5.699410,9.253108,-7.830434,-0.223065,-8.385671,0.570786,-6.950443,-6.885317,7.500460,7.853141,7.777790,-7.945861,4.125903,7.230038,5.006496,-3.393752,-4.055458,7.877340,6.027961,1.974133,3.603222,-5.211535,-2.828956,-2.084692,-2.076285,-3.085929,-3.840676,7.229423,-3.373722,2.357482,7.109206,3.076768,-7.192922,-0.784112,-5.300475,8.909886,-7.075206,6.158371,-7.206886,-1.580926,4.600879,7.507004,7.181172,7.852219,6.143741,2.695389,2.659174,8.558095,5.116139,6.273849,4.651451,6.220267,-9.250223,-5.612770,4.598286,7.528458,9.153979,-7.537969,-4.127917,-3.704700,-3.810562,-7.692657,-7.987128,9.772069,9.309883,0.298515,0.661907,-4.175306,-7.325179,8.468762,7.054728,-2.058405,8.816081,6.623086,0.485998,6.068666,6.333373,3.883293,7.790615,1.659340,4.063427,1.159050,-8.817463,-3.700809,-4.867552,-7.855024,3.570366,7.867784,7.769311,-7.273260,-5.825212,-5.703130,3.374363,-3.935386,0.649708,1.140970,-6.133463,1.161784,-2.601135,7.057630,7.912493,-0.403326,9.109625,9.997323,-9.755025,6.928608,-0.042321,-0.916932,4.904589,-8.559370,-9.048223,5.289414,5.361881,4.885813,-0.722301,-8.410368,-1.737518,-7.279965,-3.604214,-8.716337,1.281125,-0.542450,-3.019654,0.934689,5.724383,-8.460841,4.667068,-3.679694,-5.615598,-1.034175,1.278577,1.609025,0.550272,5.528642,4.826531,-2.253045,4.733243,-3.782085,8.974386,5.409344,-1.505235,5.188933,7.859119,-4.651697,1.742591,-2.493814,3.901651,6.388611,-5.879693,6.820556,-1.656078,-7.281397,-5.593805,4.443210,0.836146,-6.599791,-5.937889,0.166872,0.420885,-6.685617,8.319890,1.104523,-3.059848,2.209884,3.473736,-3.879762,2.077514,4.066934,-4.101599,1.954623,8.997327,9.074844,7.227387,3.923447,-3.298540,-5.653129,7.427394,-4.733191,-4.797953,-7.956372,-3.163416,0.108015,0.292846,1.892467,-6.979089,6.375378,-9.185611,2.029444,-0.921989,1.582709,-7.373171,-9.189513,2.397023,7.201179,-5.434825,-6.193855,7.946876,-6.500434,-3.684057,-9.307887,8.098013,1.699792,-0.925772,4.640189,8.847421,4.401644,-4.819305,1.518712,-3.031717,3.797797,-3.256642,-6.230813,-3.206219,5.688004,-9.764579,1.505659,1.401587,-6.629457,8.886308,-7.562156,-2.628854,2.922183,7.799759,-6.570795,4.032113,5.304033,9.269018,9.413961,-1.961331,9.013660,-3.084428,-2.820568,2.101022,0.117058,1.056853,4.884314,8.975628,-9.655257,-8.079171,8.580680,3.851134,8.248736,-4.360021,-1.760358,6.608436,0.550496,-9.690728,-3.765208,-9.044886,-8.337002,6.724418,8.806639,-3.460476,-7.583458,7.052364,7.060600,-5.901403,6.026197,0.176357,4.792651,7.741776,0.895702,2.004241,7.196618,1.409523,6.429066,-8.864424,-0.683891,-5.428841,0.238414,-8.028894,-0.870717,8.624966,6.384998,1.575130,-6.626682,5.995207,-1.093259,1.243170,9.555988,-6.084018,6.053610,4.245467,8.588304,-2.977711,0.045717,3.561119,4.105646,-7.066777,-6.336723,-7.830305,-7.977813,-8.608737,-0.248318,5.114509,-1.244413,-4.853139,-4.491550,8.218888,1.769978,-0.924418,-9.694702,0.861044,-9.478208,-8.764871,4.561054,6.595046,9.370856,3.270959,2.608399,3.619397,-0.731389,-3.444446,1.195627,-5.095148,1.931752,-0.872962,8.844911,-0.171325,7.948414,-9.714290,6.863111,-7.151186,5.963990,-9.095171,-0.076204,-4.764974,9.095004,2.845384,2.888064,9.211574,-3.214413,-5.490610,9.715430,-3.574267,-8.293144,-9.831628,-0.860445,-6.731748,-1.487136,7.258113,-0.968026,9.918403,-6.937489,-9.919826,-5.856552,-7.061151,7.484728,-5.750737,2.736175,2.422059,2.246240,9.491164,3.800031,0.894856,-4.128243,-0.922546,3.621662,-5.105502,1.880586,1.825737,1.230111,-0.645955,-9.932498,2.925842,4.411359,9.689235,-8.319016,1.240846,-2.118830,6.959567,7.017173,8.848324,1.962001,-0.810077,2.286389,4.902607,7.406772,2.664905,-1.702050,-0.747847,-8.965103,1.920442,-4.807491,-9.986903,8.248635,-7.303487,9.301422,1.401444,2.704462,8.517691,4.857274,2.723918,9.956708,1.732739,-9.016845,6.593549,4.977169,5.488749,7.909915,6.072884,-2.886154,0.522194,5.737723,-0.571583,-8.627356,1.855476,-6.888944,2.988832,-7.107927,-3.138440,-1.627119,5.114846,-1.650816,0.526621,-0.233459,-3.677746,-2.855666,-2.109759,7.980757,2.455041,2.097134,3.033180,6.477714,4.892709,2.591155,-9.479131,0.285375,-5.855048,1.677050,-3.112356,-1.269001,-8.232334,-3.243342,-2.570897,8.814430,-1.874747,0.391765,3.296788,-1.932449,-5.918566,-1.158170,1.767266,-8.847679,0.540124,0.778630,8.665244,-9.308150,6.617452,-9.131363,-5.479689,8.141009,-1.440713,8.748986,8.454993,-2.263470,9.649571,6.219475,7.098638,-2.262375,3.631091,-3.240680,1.698208,-1.455758,1.668144,1.902911,-0.059381,-1.042468,6.833672,-1.668184,4.368635,-9.610482,1.634685,9.401170,0.744815,0.806769,-2.050405,9.562687,2.065793,-7.710240,-5.596395,-9.558397,-9.181618,-6.021852,-3.799973,-0.556958,8.893480,7.379345,-4.676540,9.699534,-8.640165,-1.615467,-6.048106,6.131273,9.914001,1.106206,7.581016,6.477793,-4.848895,1.763967,-5.324984,3.065767,-0.858436,1.839839,1.791330,-8.348371,4.192175,-2.913345,-5.038692,9.893864,4.494201,5.617634,4.651395,-5.877162,-7.035245,-6.952185,-2.929616,3.436439,-4.412991,2.407679,9.742029,-6.228382,3.146854,2.098651,-7.051890,4.284197,5.086561,-9.013770,1.378699,-1.476501,-6.320887,8.790635,-3.296000,5.303432,3.997677,4.896082,-7.322540,8.266678,-8.359265,1.388030,-8.921739,6.533728,2.676633,-3.387092,-3.709302,7.822594,6.517343,6.148926,6.277163,8.515846,-4.485149,2.169023,-1.492030,-3.142199,0.811039,8.010000,-2.622772,6.726791,-1.623870,5.240398,5.546683,8.139663,3.235816,-1.307075,7.268402,7.027768,-2.595977,-9.805579,8.683294,-7.673430,-8.176026,-8.127434,-6.522148,-5.955780,0.425094,4.759089,-7.337593,-4.039576,-3.504601,-1.321847,-6.351183,6.891966,4.374161,6.230210,-7.785173,8.944449,7.922581,1.130470,-5.901999,-3.557027,0.287260,-7.033238,-1.674038,3.884929,5.546026,-9.357918,5.033477,7.174947,9.019108,-6.146115,-6.384857,-6.155103,4.433914,4.761629,3.172121,-3.821578,5.779701,1.313749,4.111497,-1.687741,-1.457765,-6.695326,-8.338558,-7.079379,-0.466219,4.177791,5.927901,-9.064401,-6.104110,-5.371838,0.890253,-6.838491,1.317154,-2.207480,5.632561,9.565175,0.818119,9.748142,1.523485,7.670535,-0.878318,-5.862751,-6.037627,5.407943,-4.204334,-7.612398,-7.775485,8.640439,-9.080192,-1.063863,-9.214807,-6.915293,9.974282,-7.136991,4.982726,-7.125890,-8.926872,6.276975,4.990755,9.884771,-3.321253,5.668119,7.418333,-8.707048,-7.335959,4.885087,5.816774,-8.030983,0.754024,9.170569,-3.359588,1.607024,2.049705,0.481037,2.267259,-4.555978,-9.212573,-5.660291,-6.908770,-8.803090,6.774264,-2.907992,6.639414,3.112554,6.996281,7.293090,-2.714624,-8.618056,-2.079883,-8.018452,8.008250,0.156010,-2.979225,7.951207,3.394628,0.432207,0.433020,8.206517,-2.041280,4.963776,1.944038,2.465135,3.561219,1.204598,0.412556,1.335478,4.175847,-9.818856,-4.263650,-0.881544,5.687118,-2.871041,2.381955,7.637320,-8.489060,8.720407,-6.961868,5.487409,0.698720,7.363160,-4.786024,3.133492,9.080188,6.969159,7.840427,3.651186,6.230004,0.979835,5.008871,-3.991962,9.853421,-8.181677,-1.982500,-4.958114,-2.118100,-6.465186,-0.150582,-1.399789,-7.464248,-0.876858,-8.215151,-7.896503,2.413066,-5.358007,6.120955,9.215244,6.906219,-1.060907,1.636930,3.548107,-3.430094,9.976964,6.715961,-7.142953,4.385357,1.952395,1.224214,-6.179491,3.570063,8.246140,1.918306,7.018908,-9.161985,6.338235,-7.209825,-3.160127,-0.471787,-6.624447,0.855115,7.295043,1.903125,-7.067573,7.182401,4.320719,-4.233253,3.097384,8.955005,-1.993301,-0.173592,-1.432820,-0.389691,5.893946,-5.218416,-1.675083,-7.520565,-3.866081,-0.127166,-1.479453,3.862656,-9.434289,6.348307,-8.619656,-0.012528,-7.374606,-0.389060,-7.615890,8.942796,1.578007,9.436884,-9.335324,-3.082317,6.871002,5.492980,-0.666657,0.351260,-7.169541,-4.986808,-9.613156,1.127271,1.575302,1.935587,-0.652243,3.096863,-9.300210,4.977608,-0.130006,9.354100,-0.449444,-0.208267,-9.509706,8.798026,-7.453390,9.048337,1.207247,2.343785,-5.380142,-3.057048,-3.651242,-8.883605,-0.893746,8.752828,7.970237,-8.123566,8.606495,-2.918503,-7.612121,9.311055,3.274199,8.660990,4.757685,8.467890,9.847484,3.701587,1.373815,-2.614570,3.717309,8.074595,7.463730,4.109874,-1.968545,-7.013883,6.356347,6.215102,-3.399062,7.725836,1.202748,6.787881,-7.659246,-2.928618,-8.519070,7.834751,-9.592742,1.344587,-3.885080,4.941477,-9.614097,-6.786809,4.843513,0.692187,-3.445844,9.808877,5.857741,3.772012,4.846637,-1.815570,-2.307836,-9.497305,-8.910518,-7.174412,-0.452712,1.401932,7.044749,-0.957681,1.362717,-6.252206,8.997520,1.934147,-0.945231,-6.634266,1.037390,-0.758264,3.659822,-7.812663,-4.414805,-6.613605,-4.383980,7.067160,3.242264,-6.277231,8.171750,0.961368,1.921742,-5.664894,9.869201,7.748383,6.208139,-8.434599,-0.633570,-5.036726,-1.436310,8.416119,-6.756232,-5.293543,0.897527,-8.766846,-9.089995,6.220232,-1.904338,4.521773,-5.822894,-2.619771,-7.993255,-6.374500,-7.461009,7.720361,-9.962162,4.452840,-6.751331,-6.685479,8.919267,-1.374896,-2.283019,8.691297,6.437166,-5.724221,4.243390,5.432237,-7.267624,9.090463,-1.481276,9.798994,0.168894,3.884326,-2.633277,3.072385,-1.670649,2.992325,6.566317,-4.178737,-4.749407,3.658370,3.242221,0.496995,-3.940617,-5.537132,-5.038779,8.278921,9.109965,3.266327,0.995194,8.438111,-0.793375,-4.859097,3.397299,1.304016,-4.384738,2.187879,5.221328,7.988712,9.300327,7.463951,6.404035,-1.781753,0.212998,-5.704809,-0.406796,8.449334,7.920470,3.294783,-1.117508,-6.569345,7.362646,-6.830583,-3.303400,-5.123639,-5.459306,9.164954,0.271525,-4.763647,2.103603,2.712808,-5.230515,0.553961,-2.398833,-2.445047,9.233981,8.768777,-5.378591,6.541355,4.912273,3.088764,8.271551,1.090626,-1.983699,-4.461912,6.028684,2.141198,-3.417663,6.764202,9.874731,3.522530,-1.490373,6.113952,-7.325788,9.870254,7.986568,0.285710,-7.945698,4.094631,-2.798002,-6.301188,9.036148,5.262185,-6.772047,-5.507817,-1.052316,-7.011268,4.567411,-9.089986,0.508497,0.310415,-4.439826,8.452270,-4.610856,3.212770,-4.475726,-4.207877,1.224364,5.552167,-2.497580,-5.493060,2.126438,5.968007,-3.485410,8.687765,8.915186,-6.199776,7.177331,-9.527010,-3.012387,2.238584,-6.327450,-3.150648,9.061180,2.624079,-4.953412,1.993059,9.951741,-7.403724,-1.367669,3.590223,-8.111462,2.978691,9.852453,8.788739,7.786292,8.465759,-3.599224,8.149981,4.776009,7.526653,-7.342148,-2.255331,3.239652,-0.420858,-5.973500,-9.502327,9.954627,-0.773514,8.971225,0.860399,-7.412582,-8.576946,-5.324904,6.592435,3.166119,3.432717,6.133149,1.903721,-1.340059,-5.317839,1.695126,-1.735465,-8.293324,9.620773,-4.732365,-0.800952,2.037651,-1.793679,-2.975645,-9.736639,-2.678103,-8.754551,0.233546,9.149111,5.263215,-1.277192,-8.578440,6.425799,5.254567,-7.035403,4.113493,4.625862,-3.359716,2.346764,2.745661,-4.542467,1.588418,2.326553,-3.676313,4.454958,-1.172876,-4.264610,-0.616166,6.059729,-8.980944,4.315329,-1.777868,7.672569,-3.079768,4.263734,-0.552728,-8.908567,-3.364164,-8.687831,-2.854810,-7.592234,7.860380,1.831150,1.621460,9.452975,-7.861197,8.186811,5.796944,6.162194,1.891006,1.237477,-8.485766,-9.233458,2.302410,8.004474,-5.754460,-8.649388,-0.503773,3.544977,-3.572100,-3.613219,1.211287,1.507726,-9.146813,1.996377,-9.501960,5.931997,-4.900375,4.462528,-9.175587,2.953390,1.022680,-9.625538,5.088175,3.986328,-2.670354,-4.737664,1.702280,2.218026,9.779626,-1.955517,0.355325,-5.227941,1.935070,-9.793621,6.344214,-4.674899,4.395561,-9.276809,-8.926428,6.049559,2.927609,-3.502255,0.569536,-0.712767,-6.778298,-0.877226,-6.332962,5.059756,6.262003,3.135408,0.658147,6.314708,-7.438409,7.878254,4.978187,-6.085728,6.749658,5.994006,-5.363926,1.450128,-2.570077,-2.384343,-0.007490,-0.767617,4.128024,-7.678026,6.988078,-6.297021,-4.733004,-9.471723,-3.407424,-4.268797,-2.114147,-6.154508,-5.502881,9.018509,-4.108961,3.252728,-8.759789,-0.366469,-8.339718,-2.943720,-8.284122,9.502121,6.074296,-4.174753,-6.290595,8.606534,-0.086679,6.095330,5.492363,-4.242507,2.969834,-5.297411,8.507942,3.559258,-6.430939,-0.766697,-3.064926,3.942865], dtype = "float32")#candidate|10921|(2304,)|const|float32
const_10922 = relay.const([-9.402376,-6.276045,7.397967,2.792730,4.258306,-2.695491,-1.055768,-9.576703,7.389158,0.476032,2.829398,-0.399301,7.559624,0.887712,0.303483,8.675263,7.352868,-8.064546,1.343144,3.479629,9.759445,8.565106,8.360634,-2.768718,-5.228857,-2.634075,7.836140,5.562427,-6.107958,5.689294,-9.820948,4.622644,6.378722,-1.386939,-5.773319,4.521957,2.130441,9.975927,-6.787592,9.369488,1.750844,-2.218325], dtype = "float32")#candidate|10922|(42,)|const|float32
call_10920 = relay.TupleGetItem(func_1854_call(relay.reshape(const_10921.astype('float32'), [12, 12, 16]), relay.reshape(const_10922.astype('float32'), [14, 3]), ), 1)
call_10923 = relay.TupleGetItem(func_1857_call(relay.reshape(const_10921.astype('float32'), [12, 12, 16]), relay.reshape(const_10922.astype('float32'), [14, 3]), ), 1)
func_5342_call = mod.get_global_var('func_5342')
func_5347_call = mutated_mod.get_global_var('func_5347')
call_10934 = relay.TupleGetItem(func_5342_call(relay.reshape(call_10920.astype('float64'), [507,]), relay.reshape(const_10911.astype('int64'), []), relay.reshape(call_10920.astype('float64'), [13, 3, 13]), ), 3)
call_10935 = relay.TupleGetItem(func_5347_call(relay.reshape(call_10920.astype('float64'), [507,]), relay.reshape(const_10911.astype('int64'), []), relay.reshape(call_10920.astype('float64'), [13, 3, 13]), ), 3)
func_10432_call = mod.get_global_var('func_10432')
func_10434_call = mutated_mod.get_global_var('func_10434')
call_10943 = relay.TupleGetItem(func_10432_call(), 0)
call_10944 = relay.TupleGetItem(func_10434_call(), 0)
bop_10955 = relay.not_equal(call_10900.astype('bool'), relay.reshape(var_10901.astype('bool'), relay.shape_of(call_10900))) # shape=(8, 5, 1)
bop_10958 = relay.not_equal(call_10902.astype('bool'), relay.reshape(var_10901.astype('bool'), relay.shape_of(call_10902))) # shape=(8, 5, 1)
func_7692_call = mod.get_global_var('func_7692')
func_7694_call = mutated_mod.get_global_var('func_7694')
const_10979 = relay.const([-5,-2,5,2,-1,-5,-6,6,7,3,4,-7,2,-9,6,-7,-6,-1,-5,5,2,2,4,7,-2,3,10,-6,-2,5,8,-9,3,5,5,-5,-2,4,5,-7,4,4,-8,6,-7,7,3,10,-6,-3,7,-5,-6,-4,2,9,1,-8,6,-10,5,8,5,-5,5,9,7,-2,7,-4,-9,-5,-10,3,8,-9,-3,2,-7,9,4,-5,-6,-4,4,1,2,-6,-10,-8,-4,-3,6,-7,2,-6,-5,-5,-7,-1,-6,-4,8,-1,-1,-9,6,4,-5,4,8,-4,-10,-2,-8,5,7,4,-1,6,-4,5,-4,3,-1,-9,-8,1,-1,-4,-8,-5,-10,2,4,1,4,-1,6,-10,-2,5,-1,5,-9,-1,7,4,2,9,6,7,6,8,1,-1,8,-10,-2,1,5,-8,7,-2,-8,7,10,3,2,-10,-3,4,8,-2,-1,2,6,-8,4,2,-10,-5,2,8,3,-5,-10,-8,2,-9,-5,-9,-2,2,9,-7,2,1,2,-8,-7,1,-1,-8,-9,6,-9,-4,3,5,9,-1,4,7,-1,-10,7,8,10,-2,2,-4,-4,1,4,9,8,6,-10,-9,-7,9,-2,-1,4,3,1,6,6,3], dtype = "int8")#candidate|10979|(240,)|const|int8
call_10978 = relay.TupleGetItem(func_7692_call(relay.reshape(const_10979.astype('int8'), [12, 2, 10])), 0)
call_10980 = relay.TupleGetItem(func_7694_call(relay.reshape(const_10979.astype('int8'), [12, 2, 10])), 0)
output = relay.Tuple([call_10894,const_10911,bop_10915,call_10920,const_10921,const_10922,call_10934,call_10943,bop_10955,call_10978,const_10979,])
output2 = relay.Tuple([call_10895,const_10911,bop_10918,call_10923,const_10921,const_10922,call_10935,call_10944,bop_10958,call_10980,const_10979,])
func_10987 = relay.Function([var_10901,var_10912,], output)
mod['func_10987'] = func_10987
mod = relay.transform.InferType()(mod)
var_10988 = relay.var("var_10988", dtype = "float64", shape = (40,))#candidate|10988|(40,)|var|float64
var_10989 = relay.var("var_10989", dtype = "uint32", shape = (70,))#candidate|10989|(70,)|var|uint32
output = func_10987(var_10988,var_10989,)
func_10990 = relay.Function([var_10988,var_10989,], output)
mutated_mod['func_10990'] = func_10990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_11023 = func_10641_call()
call_11024 = func_10641_call()
func_8352_call = mod.get_global_var('func_8352')
func_8356_call = mutated_mod.get_global_var('func_8356')
var_11030 = relay.var("var_11030", dtype = "int32", shape = (3, 180))#candidate|11030|(3, 180)|var|int32
call_11029 = relay.TupleGetItem(func_8352_call(relay.reshape(var_11030.astype('int32'), [12, 3, 15]), relay.reshape(var_11030.astype('int32'), [12, 3, 15]), ), 0)
call_11031 = relay.TupleGetItem(func_8356_call(relay.reshape(var_11030.astype('int32'), [12, 3, 15]), relay.reshape(var_11030.astype('int32'), [12, 3, 15]), ), 0)
var_11032 = relay.var("var_11032", dtype = "int32", shape = (3, 180))#candidate|11032|(3, 180)|var|int32
bop_11033 = relay.bitwise_or(var_11030.astype('uint64'), relay.reshape(var_11032.astype('uint64'), relay.shape_of(var_11030))) # shape=(3, 180)
uop_11037 = relay.sinh(var_11032.astype('float64')) # shape=(3, 180)
output = relay.Tuple([call_11023,call_11029,bop_11033,uop_11037,])
output2 = relay.Tuple([call_11024,call_11031,bop_11033,uop_11037,])
func_11040 = relay.Function([var_11030,var_11032,], output)
mod['func_11040'] = func_11040
mod = relay.transform.InferType()(mod)
mutated_mod['func_11040'] = func_11040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11040_call = mutated_mod.get_global_var('func_11040')
var_11042 = relay.var("var_11042", dtype = "int32", shape = (3, 180))#candidate|11042|(3, 180)|var|int32
var_11043 = relay.var("var_11043", dtype = "int32", shape = (3, 180))#candidate|11043|(3, 180)|var|int32
call_11041 = func_11040_call(var_11042,var_11043,)
output = call_11041
func_11044 = relay.Function([var_11042,var_11043,], output)
mutated_mod['func_11044'] = func_11044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_11049 = func_10641_call()
call_11050 = func_10641_call()
output = relay.Tuple([call_11049,])
output2 = relay.Tuple([call_11050,])
func_11061 = relay.Function([], output)
mod['func_11061'] = func_11061
mod = relay.transform.InferType()(mod)
mutated_mod['func_11061'] = func_11061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11061_call = mutated_mod.get_global_var('func_11061')
call_11062 = func_11061_call()
output = call_11062
func_11063 = relay.Function([], output)
mutated_mod['func_11063'] = func_11063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10466_call = mod.get_global_var('func_10466')
func_10468_call = mutated_mod.get_global_var('func_10468')
call_11064 = relay.TupleGetItem(func_10466_call(), 0)
call_11065 = relay.TupleGetItem(func_10468_call(), 0)
output = relay.Tuple([call_11064,])
output2 = relay.Tuple([call_11065,])
func_11066 = relay.Function([], output)
mod['func_11066'] = func_11066
mod = relay.transform.InferType()(mod)
mutated_mod['func_11066'] = func_11066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11066_call = mutated_mod.get_global_var('func_11066')
call_11067 = func_11066_call()
output = call_11067
func_11068 = relay.Function([], output)
mutated_mod['func_11068'] = func_11068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10432_call = mod.get_global_var('func_10432')
func_10434_call = mutated_mod.get_global_var('func_10434')
call_11082 = relay.TupleGetItem(func_10432_call(), 0)
call_11083 = relay.TupleGetItem(func_10434_call(), 0)
uop_11128 = relay.sinh(call_11082.astype('float32')) # shape=(8, 8, 1)
uop_11130 = relay.sinh(call_11083.astype('float32')) # shape=(8, 8, 1)
func_7098_call = mod.get_global_var('func_7098')
func_7102_call = mutated_mod.get_global_var('func_7102')
const_11139 = relay.const([7.846518,-6.538662,3.429692,8.214409,-2.919474,1.799291,7.193775,6.288166,-6.574997,9.840912,-7.587394,-8.909524,8.891411,8.990910,-0.043623,-8.675523,7.614568,-3.582904,-1.343741,2.322056,3.407646,-7.822018,-5.940116,7.333827,-8.611313,3.757718,4.559570,9.069586,7.758820,5.310477,2.584233,-8.825983,-4.642157,0.703224,-3.290058,-8.938650,1.376152,9.860427,-2.535923,-1.465632,2.886361,6.367870,-5.526244,-8.750384,-2.017763,8.327760,7.446828,-1.068076,-0.606720,9.039188,6.933886,5.846988,-8.791201,-8.335215,4.873133,6.998712,-2.399319,3.195665,-9.410833,-5.249267,-4.951346,-4.414026,2.466992,2.704125,8.699792,3.236945,-8.561499,9.003800,4.798688,-4.403391,1.711181,7.391728,-9.095850,-9.348375,-2.793669,8.022810,-2.846718,8.391325,7.413139,8.154164,1.661170,3.993923,9.721279,-7.825577,-7.588345,0.524614,6.833884,6.434439,-5.558607,-3.804109,-2.199758,0.473277,1.130369,2.845489,7.269638,7.574542,6.288645,0.110600,-2.354804,7.713559,-0.874077,-6.977393,5.175711,8.336928,0.057982,6.429151,-0.909460,-3.225923,4.075238,-1.600433,-3.654861,5.965000,-4.387106,3.568699,-2.929773,5.203264,9.525029,-5.097267,8.479401,-1.522627,2.976509,-3.903182,-0.759026,-4.795632,-7.126438,3.129478,-2.003788,-2.448417,5.312062,9.110886,-2.949509,-0.455111,-0.221493,9.345156,-8.626394,-0.003022,3.812386,4.733729,1.860847,2.232869,-7.949613,8.280149,4.269460,1.342123,1.423993,-1.254070,0.746472,5.810731,-5.658365,4.575931,2.678511,-1.818914,4.686122,-1.802354,6.356869,-8.208699,-2.309805,4.167642,-2.016356,-7.817948,9.870597,5.326251,6.486553,9.432512,6.551298,7.697038,-5.970070,9.879003,0.433752,9.913707,7.968508,6.492405,7.630936,2.420667,3.865288,9.152277,6.597706,-3.216685,1.949993,-1.055089,-9.020757,9.393629,3.056327,-1.361748,0.953930,-2.791659,-7.690809,-5.215686,-4.915501,0.558997,-1.738839,-8.329447,4.810729,-6.018190,-6.215721,-1.513385,-0.486504,-9.696076,-2.248805,9.408043,-0.483324,5.371640,3.043137,-2.730453,4.326501,0.891837,-6.376338,2.160220,-5.055932,-4.067840,-5.002032,-9.616624,2.092454,4.578894,0.521305,6.135288,-5.799850,-2.934295,-6.779197,7.691907,-2.059926,9.940621,-7.763018,9.938777,5.290758,-5.891205,-9.459634,-2.743193,6.242100,5.555177,-3.438081,-4.615795,9.456046,-8.036002,9.232300,-7.310346,2.760545,-1.516665,-3.296094,-2.199403,1.152406,-2.946230,5.887169,2.161567,-8.937080,-0.418416,9.983690,9.506955,5.405948,9.952532,4.040580,4.986350,2.579841,-9.465062,9.702179,8.023150,5.558570,-6.706416,6.571543,9.364169,-3.411159,-5.184104,-4.454764,9.489395,-8.888895,-7.128852,-0.571328,-9.378717,1.144614,0.259582,6.424242,-8.475762,-5.361887,-6.156958,-2.361946,7.810943,7.690695,9.215191,6.834566,7.055596,1.550590,3.025222,4.237027,5.731204,3.363097,7.420104,-4.966043,0.550391,-2.926086,-7.887715,-0.582279,-5.999592,8.197148,3.453963,-0.458624,-6.074817,6.216264,8.967517,6.573164,1.436680,2.621770,-8.417497,-8.702115,8.337645,7.951890,-8.973388,8.246891,7.575791,-8.970211,-7.621071,8.850788,-5.162609,-8.519357,-6.901126,-8.006109,-3.109929,-6.593866,0.752177,0.665776,-5.619350,-7.945190,-3.002636,3.851397,7.509614,-3.026049,-2.124445,-7.069965,-3.322225,-7.726574,8.026345,5.453902,-3.072099,-3.521950,-3.460575,-4.458478,-3.232007,6.165034,4.611979,-0.896843,-3.857708,-8.777466,-4.349153,8.496150,8.951723,5.008371,4.383861,8.757355,1.517128,0.040385,6.143000,-9.591949,7.901671,-8.603081,-1.744438,8.653195,5.041490,1.449989,-5.271249,0.699536,-0.818305,-7.804465,0.222268,0.825282,8.599516,-3.788495,9.941161,-4.855378,2.723886,7.989560,7.002093,-4.980293,-6.101483,5.649827,2.194876,-1.288570,1.232602,3.834153,-2.450322,9.529846,1.011044,-1.433994,-8.452939,2.675237,8.843346,8.673812,8.171036,-3.622108,3.155295,4.267183,-6.893081,-9.884395,-2.003599,-1.452899,9.442278,8.668526,9.821317,8.487122,-5.491624,5.558895,4.133880,4.395995,5.147800,-5.526524,3.694841,3.717632,3.408474,0.067147,4.678437,0.099309,-1.320001,5.940012,-3.942456,5.424466,-2.675792,7.289660,-1.839691,-6.943438,-8.652455,-7.749768,-2.714455,8.084236,-6.114932,-5.947133,-7.668542,-1.680247,-8.763654,-7.297900,-6.121112,3.304281,6.597808,-5.010366,0.833386,0.628164,1.863408,0.296056,8.586593,3.211931,-8.344822,4.750238,1.296923,0.330661,8.304066,8.265269,0.290177,-9.733116,0.035949,-2.477631,-4.177676,-0.901112,-7.689221,7.591755,-3.042856,9.524730,-5.108707,9.910788,-3.557521,9.977888,-0.694490,2.180562,-8.694956,-8.898602,-0.348647,-1.319217,-5.900085,-7.787529,6.368291,-1.700919,-9.721584,-2.936902,-7.238371,9.011329,-4.242166,7.417407,7.688075,-9.435558,-4.887601,4.549906,-9.726675,0.850321,-9.613359,1.382573,-4.742995,4.150020,4.343996,0.584036,0.433431,-7.616771,-0.274424,-3.805012,-2.291168,8.903267,-5.695254,8.044820,-0.062815,0.510427,-1.343012,-2.056278,9.383382,1.399993,2.387990,-1.250531,7.565165,-9.575808,-5.665859,8.865978,-6.094896,-5.331232,9.526357,7.265058,-0.572823,-4.073559,9.334766,6.415575,-5.217076,6.625087,-1.451273,-4.086196,-0.828987,1.583262,-7.712761,0.128765,1.926381,5.283545,0.253422,-4.944449,4.803081,-9.454509,-2.211463,7.139646,-0.505314,-2.332549,0.959401,8.885393,-2.839154,-3.377820,9.376083,0.566364,9.059937,-6.639490,0.836734,4.865902,5.095397,1.086991,3.584693,1.569487,3.591551,-3.269109,-6.759515,-6.451540,-0.674166,8.863211,-0.567506,-9.149769,1.887472,-5.206227,-6.376366,-9.351953,0.850169,3.614813,-0.101021,-0.331928,-1.295053,-5.314272,-9.966015,8.694181,-1.606542,5.243750,5.065293,-8.275887,-0.332985,4.839262,-9.013400,-0.841272,5.046019,0.112968,-0.920999,1.382771,-8.043577,-5.212715,-6.962439,-6.845743,-3.975542,7.481623,6.686764,0.011645,-0.782661,-6.530165,-6.896614,-1.931136,-3.088300,2.218635,-0.007481,-2.109223,5.368315,5.147114,-6.473535,-6.900645,3.030983,1.368215,4.889434,-2.420195,7.658292,8.562525,-2.766860,-7.193084,2.815859,9.091808,-3.581459,-2.118497,-1.325951,-1.946875,0.778970,-9.753299,-4.912140,-6.534919,-9.047869,-5.290016,5.527914,7.935071,1.056514,1.826409,7.480788,-5.071361,-6.526417,2.973075,2.129187,3.273448,-7.381482,7.999613,1.853529,8.527954,6.623736,-5.202496,4.724290,-1.972725,2.133379,7.521086,-7.010583,-1.883904,-8.358851,-1.739297,0.306395,6.541694,4.232647,2.492598,-8.670049,-9.419857,-3.711314,-7.808835,-3.598119,-8.832063,-4.455041,-0.494431,-0.030283,4.035841,2.468861,-7.882610,-6.715493,-1.161454,-7.075053,-1.264509,-5.358521,-6.746757,9.942889,-4.697952,5.556868,4.902727,-6.402132,7.556400,4.322137,-9.542664,-7.018234,4.008476,-2.403717,-3.557339,7.307544,7.100465,0.012570,-4.588800,-0.851006,-0.466567,-9.845707,-0.431734,9.786859,3.540785,-1.913559,0.282945,-1.074568,1.387716,6.364279,2.480005,3.390749,-6.348149,4.781741,4.086791,-8.025938,2.081254,-7.381144,5.526854,4.384627,-7.222103,-1.434022,-9.427130,-9.579998,6.021027,3.447669,9.094920,2.998660,6.479770,-0.508600,3.015264,-0.239195,4.862609,-4.213318,0.921886,3.508719,3.697784,2.465997,-1.887050,-1.860243,2.342102,7.822789,-8.766007,3.608630,9.180374,-0.411300,-4.045766,1.726132,4.642549,-9.701970,-3.004464,-0.898517,-6.186362,1.525584,-8.178391,-7.188017,-5.058183,-4.146365,7.417062,-1.134679,7.006493,7.420191,-5.566701,-9.682852,-2.711778,-6.291833,-2.702294,-8.655475,-1.452183,-3.153881,2.543112,4.367340,-1.949755,-2.920946,9.363600,-4.993637,-7.328531,-9.995924,-5.180964,-1.655784,1.015861,8.766211,-2.983158,-1.520078,-9.427551,4.340120,-1.881599,5.878593,-5.461164,-2.360312,-8.719511,-4.502198,-7.142371,6.111181,7.622397,2.695900,-8.478612,2.301042,-7.626182,-5.896255,-0.895033,8.305822,-8.713560,3.042295,-5.773787,-6.715602,-0.260269,0.006614,5.789202,7.457044,0.242013,7.293645,-1.584362,-5.186925,1.882657,4.154156,-5.327179,-3.614053,4.364381,0.807685,5.563380,-1.946699,-8.802442,-8.051833,8.345987,7.465642,-7.557434,-0.329505,8.087043,3.840096,9.532552,-1.013501,5.369216,-2.826757,-7.832530,4.097536,4.323169,9.656160,5.274718,4.093558,1.185930,0.836422,-6.007374,-1.833008,-8.201218,-4.192134,-0.996726,8.134509,0.849586,-8.971252,6.582827,4.466965,-4.593194,5.041540,-7.647877,-4.174873,6.448098,1.619618,5.839719,7.949761,5.349083,-0.455240,-0.173636,-2.353276,3.152737,7.630424,-8.733022,-1.745427,1.435632,-7.200966,-4.577929,8.776503,1.817585,8.088866,7.421043,-1.970852,-1.100978,-9.914786,8.474280,-0.898986,-1.862512,4.962197,-6.003107,6.029636,2.940653,0.843720,-4.568477,2.978720,0.592713,-5.731472,5.888094,-3.466607,0.541772,-4.905965,1.260416,-0.374945,-9.458469,-4.104282,6.446559,-7.238187,3.714771,-2.763760,7.763841,9.918972,6.916803,0.572481,7.664097,-5.617242,-5.347595,0.372446,-7.518836,9.998677,8.514357,4.031755,6.939787,-8.203702,-4.520059,-1.584147,-6.011478,-0.201205,-8.076491,4.958953,1.940848,-5.080913,-9.142640,1.357508,7.183276,-1.173621,-4.831906,9.439427,7.207416,6.572469,7.397866,4.768045,9.836010,5.491250,6.370976,9.090385,-0.967448,3.990370,5.428774,0.570725,8.565962,-7.286957,-1.031842,-3.890332,6.864885,3.823241,7.050245,-5.638509,-1.774183,-4.677154,-4.871294,3.227120,-9.799729,-9.297230,2.736873,-6.131455,9.849383,7.387597,0.492558,0.277216,8.321262,4.119061,-5.581915,4.433062,6.062192,-7.964780,-2.496978,-0.847009,-6.047924,-6.153694,2.971827,9.602120,7.407492,-4.858162,-6.481044,6.991838,-8.422436,-9.962421,8.854881,3.412717,-8.054794,-5.334112,3.636667,5.308326,9.074387,-4.616533,-8.105068,3.299100,-2.458334,-1.928085,-9.855498,-0.011077,-9.505240,3.254732,-6.108612,-8.524951,-8.636267,1.066933,-8.953523,-4.695603,1.411956,-2.170697,-3.301360,3.406991,0.441848,1.389021,-2.383941,-3.079871,-2.474263,-1.458687,-8.163447,5.190692,9.966852,7.323868,6.425302,-5.001038,-4.469391,7.172625,-1.590215,4.763462,-8.632839,9.026127,-9.421293,-1.759137,5.161196,2.488619,1.218324,3.899764,-6.765887,-0.805600,-6.611652,-0.010786,9.535766,1.258696,-0.381468,2.893828,9.277527,7.486725,-1.743558,-6.418364,-1.655937,-9.561915,5.859110,9.609751,-5.954901,9.265140,-2.457357,3.131037,2.101369,7.133510,4.584396,1.628775,-3.852872,-1.649847,-4.543083,-3.729226,-5.739169,-5.253111,-0.242822,0.695708,-8.102346,8.311660,-5.563054,-3.750813,4.813955,-7.551882,2.437722,4.012948,-1.478679,-8.743461,5.600887,-5.924833,9.714576,4.448548,-2.806980,-8.686645,1.031586,7.104319,-7.649407,-0.242837,7.677351,-3.275350,-0.833600,-0.017054,4.839959,5.878007,-9.672408,2.953387,-4.850686,4.126794,4.158297,9.165268,-7.942498,0.784109,1.841407,-0.388857,-1.687702,0.497631,7.418870,6.561270,-7.146700,2.754720,-1.708603,1.637326,4.656936,5.516630,-1.325688,0.884380,9.086841,-7.580840,-1.430436,-7.772816,0.459937,4.961369,5.756672,-8.107102,1.030447,-0.845640,-7.780430,8.665785,0.519205,-1.886753,7.917292,-0.536258,-5.288684,5.632126,1.207797,0.292645,6.250080,1.026793,-4.001129,7.678546,8.088673,1.427172,5.164444,2.550554,-3.378936,-3.850653,-7.299595,-7.462410,3.924506,7.405305,0.894445,-6.965707,-8.745004,-5.470942,2.250505,-4.459096,4.656965,-1.801567,-8.628285,5.755749,2.933806,4.059767,-1.386939,5.476902,5.366963,0.746464,1.039461,-1.904183,9.802610,-6.828841,-4.489505,-1.788451,8.635284,-4.975917,-1.952430,-4.793578,5.846169,6.760942,0.826405,-2.410133,-7.327428,-8.659629,4.179755,1.580431,4.224588,5.186959,-0.414345,5.019346,-9.270774,-0.777107,-5.673008,-9.206783,-8.078444,1.003715,-6.737991,-0.644450,6.434570,0.483877,1.939123,-5.202274,-1.734381,-0.179597,2.154776,-9.952729,2.603139,-7.083550,0.589302,-7.212907,4.095361,-7.076831,6.830401,-6.593391,7.033708,4.860846,-2.581789,4.082117,3.623135,5.212717,2.608668,-9.686320,-1.261007,-6.322129,6.625506,8.800987,6.509575,8.279081,9.725563,5.947500,6.217695,5.769901,-8.649006,-2.701136,2.678332,-6.972396,-2.537290,1.976939,-4.820820,-5.124799,-6.818808,-3.286010,5.208746,-6.833180,3.383306,1.761605,-6.055552,-3.473604,6.544450,-6.040422,-8.293618,-0.506223,5.986683,-8.005414,0.737611,-5.864123,-3.044127,0.961014,-1.024021,-0.665358,-7.624574,-7.057097,3.039689,0.700860,5.124292,6.809438,5.943502,-7.233038,4.480083,-4.929577,-6.221358,6.513103,4.003341,-0.990045,-8.975877,9.348309,1.535564,-5.258763,-4.158801,1.360629,4.669547,3.049322,-1.428356,-8.722096,-3.610680,3.191854,1.307920,-3.989842,3.244138,-7.201675,8.627766,-7.344662,9.401594,7.793367,4.087792,7.387290,5.394012,7.114632,1.868731,-9.607472,-7.819649,-0.124091,-7.544394,-3.064450,1.393787,0.610477,-6.982938,7.555480,-3.233038,6.868798,-4.934383,1.060174,8.949064,9.289956,-3.523685,1.439168,4.716695,-2.145258,-4.996063,-9.662728,4.483587,-1.213473,8.174851,2.307950,5.083592,1.073195,9.000857,3.062999,9.965244,4.606064,-2.795881,-5.381799,-9.266735,8.846781,9.657926,6.289863,-2.303753,-3.536876,2.776543,0.784710,-4.639049,-0.967582,3.691093,9.873170,9.312998,-3.879748,7.351840,7.170464,9.862681,-8.723595,-1.065389,7.873912,0.077158,9.031549,2.060153,0.138832,4.685960,-6.999780,-2.177066,-0.597627,-3.094771,4.688038,9.369812,-5.862056,-2.326676,-0.504121,-4.462022,7.639413,4.626597,-9.160403,9.317422,6.422724,-4.475794,-7.746352,1.829662,-8.802940,7.183063,0.857610,-8.527179,-7.401001,-6.840892,-5.309447,-1.216688,-2.675589,-8.146093,8.358227,0.269893,-4.118015,-4.101810,-6.070991,6.596028,4.902926,-9.825576,-8.750157,-2.262072,3.278751,1.736027,5.957311,4.109353,0.467233,5.897484,-9.332606,7.706253,-2.447044,2.870659,9.891732,3.238727,3.793119,4.945645,-3.430966,-1.067900,-3.593225,7.936520,-3.365343,-1.647768,-8.041064,-6.144296,-5.980533,-7.878389,2.697026,7.401082,-3.036379,6.338427,-5.856246,6.339320,6.969854,4.949536,5.647987,6.756149,4.475580,-4.177610,3.726227,-3.891235,-1.148858,-3.717819,-6.335778,1.947446,-7.929586,2.354193,9.848898,-6.014358,-8.529121,1.379841,-9.435034,9.156649,-6.914754,-3.219657,-8.151618,1.969678,7.372727,-2.332821,3.781111,-2.681023,5.755111,-4.959891,4.458449,9.333663,-1.681540,4.255136,9.407535,4.384529,-5.408065,-6.785682,-4.946440,-8.742103,8.922481,-7.465370,-3.535369,4.015150,-3.519390,-5.097775,-9.440079,2.421691,-4.279570,7.168508,-9.986993,8.936347,-5.307063,5.165479,6.006659,-6.561760,2.393139,6.284336,-0.031351,8.660439,8.872814,-5.149971,9.756925,-6.770076,-5.034230,6.181863,-3.167374,-6.097916,-0.673094,-0.083244,7.900234,7.239063,1.180448,-7.768043,2.156213,-6.807055,1.867629,-0.533770,-4.251849,5.956550,-1.301947,3.202940,6.944621,-2.734050,-6.044853,-4.288132,3.864507,-1.242793,-5.738978,-4.410879,-6.471164,-4.812876,6.183100,-3.200851,-1.561228,1.324054,-4.976873,6.048390,-5.768447,-1.648660,-8.233578,-5.241458,-1.609697,-4.338876,2.597189,-5.930809,9.596487,3.876368,4.685771,7.301333,3.722495,-4.151211,4.511550,-2.323204,9.763191,-0.705903,5.561281,-8.582191,5.348836,-2.524832,0.977257,-6.424175,-4.335295,-3.730342,7.290189,9.344205,-2.923907,2.906724,8.543691,7.253975,-7.005362,6.520173,-8.881917,2.511026,-1.955666,-4.377915,-2.173407,7.632042,-1.860184,-8.980717,6.870453,9.009569,3.609616,5.845083,-6.440506,-5.596621,4.734172,-4.284747,5.589717,6.005217,2.317698,8.495701,5.041105,-0.311769,-2.887245,0.291533,-5.016901,5.253269,1.302464,2.275487,7.892097,-4.120865,6.370756,-0.207281,-4.929133,-8.169859,5.092884,1.025379,-7.177862,0.029097,-5.650348,-0.613801,8.461487,2.042832,8.848169,-1.444551,-1.382677,1.543045,0.754072,-9.002943,4.692737,7.509771,-0.711484,0.750815,8.441255,-6.963188,-8.790737,-9.258892,-6.316237,-8.829314,-8.479381,1.177955,-3.271303,-5.229462,-1.510864,9.767437,-5.419741,7.798264,-9.378647,7.745013,1.833436,5.727580,3.087680,3.442889,0.337056,6.817085,-4.474085,-5.472041,7.984781,-2.407323,6.828433,3.648281,-1.322356,3.272322,-9.103491,-1.021107,-9.861824,1.180262,-7.096919,2.613296,-6.686023,1.904918,2.952603,2.695492,7.563018,8.050147,-0.969085,-6.339096,3.583219,8.647300,-9.149545,1.227223,7.493125,-1.758573,2.478442,-4.271661,-0.158925,-5.429045,5.991349,-2.112911,9.944984,-6.170365,2.253368,-1.369967,-6.677545,-1.903530,-4.703618,9.162690,-0.953367,5.414929,3.168549,7.315569,4.713833,-5.972899,-3.273515,7.805363,-0.719402,6.227487,-7.374795,-1.533900,4.600989,-2.478020,-6.780113,6.164980,3.674591,-6.416703,-4.062252,2.234356,7.817988,0.939357,-5.081878,5.004707,-1.433246,-9.576857,-5.758373,8.208006,2.193709,0.288780,8.496012,-9.887228,0.005522,8.557209,1.715900,-3.228464,-7.523070,-6.473563,-2.249360,3.653977,-4.541527,-5.786158,-7.398779,-5.176395,4.830001,3.537543,-4.113464,4.786398,-3.089453,-8.046357,6.756597,-1.246101,-6.367842,1.438346,-3.444553,1.895252,-7.568702,-5.208096,6.959810,1.930397,-9.887065,7.282258,-2.727422,6.502529,5.705568,-8.453174,-7.228230,9.694041,8.832831,3.938285,9.251754,-9.496014,-5.377522,8.838311,3.330228,-9.446808,2.044617,9.536990,4.028412,6.376886,-8.239617,9.539458,-9.047952,3.463010,1.317384,-5.790682,8.873950,0.135622,1.062654,5.186938,7.069262,-3.755581,7.447475,-4.182057,-0.639341,1.340332,-0.679176,6.984374,6.636442,-1.786893,-3.427464,-2.683116,-5.868059,2.665334,-9.408406,-3.396597,4.641470,-9.456605,-6.461888,6.755330,-1.480442,6.484742,3.781623,-1.229007,2.497029,-1.612301,4.573212,1.331224,-5.733269,6.137562,4.299258,-8.210322,-4.847503,8.314463,6.540685,-2.102579,-6.363441,-3.800455,-6.434622,-2.970567,-9.099124,9.808000,8.611494,6.734471,-2.422513,-4.499448,-8.713166,-5.421529,-4.619252,-5.965331,-5.888781,7.826138,-0.391588,-7.929451,-8.161304,3.894159,6.922395,-7.349583,4.584502,-4.270725,-7.665724,-8.159789,6.697846,-3.856282,-9.512705,-6.516315,9.757182,4.828646,2.579095,-3.055708,7.987440,-1.646218,0.059311,4.724012,-4.042204,-6.038480,8.966086,-4.072878,9.049332,-0.012787,8.586155,-0.556516,-8.472715,-3.050074,7.235915,-0.605432,-5.715326,-5.430002,4.695142,7.916334,0.629352,7.737388,-8.442031,-5.516100,-4.754188,1.105177,2.041846,-5.505934,-5.131993,1.267135,3.487535,-3.547474,9.142770,1.799941,-8.187284,-0.544110,-8.783950,-1.910456,4.999618,-4.823875,7.538077,4.386037,1.617476,7.453040,7.728803,-5.074943,-2.941036,-0.598314,1.869868,-6.567185,-7.781694,0.145842,-9.512812,7.046222,-5.509721,7.287277,-3.605918,-5.786486,-4.076155,2.328475,5.225045,2.528904,-5.640740,1.023511,9.772616,9.115079,-8.902425,8.607996,0.601487,1.692420,-2.869450,8.301530,1.402493,8.845508,2.143425,8.789819,-8.813683,-5.895874,9.384211,-3.665544,-4.255671,-2.948131,-6.530538,6.430562,1.294838,-5.417198,-1.433931,-5.750623,0.125703,1.579300,-0.764964,7.065211,1.229583,0.706392,3.027940,-1.518339,7.271586,9.483229,-0.552979,3.214683,0.168060,9.767909,-5.652863,0.977788,1.642038,-9.511198,-9.949417,-5.122187,-9.749931,-2.524024,4.146615,5.454100,4.676366,5.882652,0.941701,0.522502,-1.508272,-9.381027,-5.913226,-6.112805,4.285492,8.191206,9.673695,5.290486,7.714792,8.742578,-5.320189,-2.410517,5.421790,0.390392,-8.593655,3.963161,-0.464421,3.875295,-2.645158,-8.334736,0.806449,7.358494,-6.412635,-3.527148,-5.175038,-9.181328,-9.145177,-0.424910,-5.998009,-6.355846,0.797144,3.625140,-8.645131,-1.513920,1.586600,-6.376337,7.552947,1.947662,-4.685244,0.476902,5.784470,-3.540224,-2.661416,-3.861136,-4.568139,-1.193933,-5.143023,0.942987,-6.238766,3.215122,7.487955,-4.983831,9.524862,-2.641077,5.245359,-8.126635,9.593505,-6.954058,-4.186677,2.166303,-7.197642,-3.366296,8.766950,0.901516,4.026303,6.427396,-8.108201,6.996217,4.314677,3.385501,-5.178311,-9.628832,-2.944041,9.445389,0.200428,-3.019322,-9.608603,-4.546011,-5.907370,-2.514674,5.107880,-2.135501,9.081279,8.864057,5.836504,-6.460401,3.086498,-6.145641,1.587887,-7.234300,-7.341805,-9.880118,8.941515,-5.738296,-8.249890,9.593413,0.049540,5.212756,-1.745863,6.843982,-2.240907,8.297351,-1.926060,7.272796,9.090152,-7.831642,-6.555161,0.783014,-1.080299,-6.299219,-3.637690,-3.370147,1.333810,-2.422965,-5.495049,-5.566103,5.032385,-7.813172,7.160069,-9.027296,6.143668,-0.494602,8.537913,4.819785,9.478371,3.690949,-0.636465,6.057541,3.782251,9.783948,-0.996102,-3.591964,7.929617,6.421934,8.537139,1.334368,1.718540,-3.468686,0.724104,-1.374376,0.703768,-0.642000,0.555063,-6.115742,-5.309199,-9.453416,3.565924,-8.763543,-6.696663,4.418092,6.384122,-4.890287,-0.688137,-1.009420,9.945647,-6.941742,-5.130085,-8.988634,9.071665,-7.570068,-2.364857,-9.350970,-0.962795,-1.031507,-7.415489,-5.045844,-9.275705,-3.849744,4.850441,1.944480,0.087110,-4.274421,-3.446249,3.141047,2.672919,0.026104,5.932641,6.956747,2.857882,-1.082141,1.343217,3.841236,2.941423,-7.706590,-8.117111,9.458353,2.413803,7.790030,-2.445554,7.823423,1.502335,1.104225,-8.304280,-6.118736,-9.174162,-0.476646,7.004841,-1.748923,0.236351,0.844113,-6.423748,-2.355210,-2.798230,7.764374,-9.501858,-5.682210,-9.092513,-2.982744,-4.439254,-1.331482,8.472058,-4.555969,-7.559583,-0.835531,6.601556,-2.742551,-9.322756,-5.983423,-7.116963,-6.714140,-7.192140,-5.024249,-1.874313,-9.081596,7.916475,-3.368047,9.122560,5.177342,0.678623,0.194941,-1.802997,-7.307587,-7.126067,4.175988,-6.053397,-1.711030,4.116736,9.480664,5.715314,-7.569725,-1.747120,-5.334475,-3.017655,-6.690393,4.474304,-6.135325,2.276051,-3.124073,5.083178,-6.712055,8.681853,0.976240,-8.354144,1.917962,-3.708316,-5.278585,-3.120695,-0.620406,8.893228,-2.988430,-5.820387,-4.197204,0.637651,-5.695531,-8.463396,-8.911860,5.617378,-7.544085,2.727021,5.657147,-5.371507,-0.111494,-8.123698,2.414706,9.276702,-3.763455,-3.484578,5.245801,-0.315228,6.086686,9.867403,-0.963785,0.056553,-5.544136,-1.529339,-8.419078,4.633030,1.931506,8.779209,1.414876,-2.704425,-2.615881,-3.130886,-7.599266,4.790244,-9.842406,-0.935255,0.821462,6.957471,-1.152172,-6.440128,-5.892897,0.823944,7.963601,-1.575173,-0.032702,8.278002,-5.882839,-7.243581,-8.713954,-8.498025,-2.685628,9.552649,-8.578496,4.288618,2.910426,0.661708,-2.800812,9.962713,2.418506,-9.464266,7.060514,-7.243681,-8.466332,-5.049691,0.540062,9.186381,1.062577,7.156940,2.938201,-5.200576,-8.796474,2.901905,1.219037,4.781059,-7.713211,-9.551081,3.026726,6.953555,2.319646,-9.350438,-3.777883,7.847027,-5.585465,8.686962,5.554638,-1.194117,5.857130,-6.624999,7.847683,0.489859,-1.001219,5.001398,8.872502,4.453626,-1.792852,5.113896,3.099074,5.281132,5.548581,0.896822,-5.872884,2.423818,7.963800,-5.286045,2.730530,5.292743,2.967712,7.525659,7.770197,-2.302164,-1.992004,1.824654,-9.606679,0.181663,8.343407,-4.190420,7.458179,-8.591462,-4.846229,4.589880,-3.521193,5.880663], dtype = "float32")#candidate|11139|(2304,)|const|float32
const_11140 = relay.const([3.627300,-0.267299,-7.504992,8.055898,-6.003678,7.310530,2.918892,-5.276457,3.187095,-4.739018,5.366187,0.375404,-9.264616,-7.658226,7.931059,-0.174868,8.095400,-1.562415,-8.537327,-0.467270,-3.036198,3.715228,7.607777,-4.973914,-5.106119,-9.073666,-5.995779,4.544476,-6.615542,-4.492470,2.751143,-6.748322,-5.393983,-1.217247,-4.757099,4.275935,-1.189919,2.569470,-8.928555,-5.061003,-5.484819,7.841670], dtype = "float32")#candidate|11140|(42,)|const|float32
call_11138 = relay.TupleGetItem(func_7098_call(relay.reshape(const_11139.astype('float32'), [2304,]), relay.reshape(const_11140.astype('float32'), [42,]), ), 0)
call_11141 = relay.TupleGetItem(func_7102_call(relay.reshape(const_11139.astype('float32'), [2304,]), relay.reshape(const_11140.astype('float32'), [42,]), ), 0)
output = relay.Tuple([uop_11128,call_11138,const_11139,const_11140,])
output2 = relay.Tuple([uop_11130,call_11141,const_11139,const_11140,])
func_11149 = relay.Function([], output)
mod['func_11149'] = func_11149
mod = relay.transform.InferType()(mod)
mutated_mod['func_11149'] = func_11149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11149_call = mutated_mod.get_global_var('func_11149')
call_11150 = func_11149_call()
output = call_11150
func_11151 = relay.Function([], output)
mutated_mod['func_11151'] = func_11151
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11181 = relay.const([[[3.300456,-9.618021,2.936383],[1.150809,-6.627516,6.885964],[-3.356796,7.489006,9.348223],[1.177585,-3.746214,-2.875499],[4.843492,6.410355,9.898622]],[[3.886096,-2.113410,2.906042],[5.443565,-4.138314,8.801408],[7.139816,-9.440981,-9.064376],[1.460398,-4.566901,3.319395],[0.837935,-0.878298,5.710349]]], dtype = "float32")#candidate|11181|(2, 5, 3)|const|float32
uop_11182 = relay.sin(const_11181.astype('float32')) # shape=(2, 5, 3)
output = relay.Tuple([uop_11182,])
output2 = relay.Tuple([uop_11182,])
func_11188 = relay.Function([], output)
mod['func_11188'] = func_11188
mod = relay.transform.InferType()(mod)
output = func_11188()
func_11189 = relay.Function([], output)
mutated_mod['func_11189'] = func_11189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10255_call = mod.get_global_var('func_10255')
func_10256_call = mutated_mod.get_global_var('func_10256')
call_11202 = func_10255_call()
call_11203 = func_10255_call()
func_10771_call = mod.get_global_var('func_10771')
func_10776_call = mutated_mod.get_global_var('func_10776')
const_11211 = relay.const([0.646718,-3.428100,4.206292,-0.017016,2.647921,-2.259022,5.935936,-2.118923,-0.428579,4.711378,5.950681,9.252663,4.195157,-1.590851,8.831065,-8.765110,2.269226,1.846581,-6.812021,3.754489,-4.740426,-0.345014,4.499319,6.873947,0.196307,0.364763,7.504453,-3.563965,6.167817,-3.057953,-7.778653,3.968315,3.532222,-9.763543,4.624486,9.862754,0.266982,0.533267,7.714860,8.885051,2.964449,1.599276,5.571163,6.982561,-2.101616,-8.582392,4.764899,-9.146197,-2.644938,-4.673242,6.023705,6.678233,2.138199,6.450478,-4.154884,9.414678,6.999649,-9.189402,-5.057968,-3.952273,3.126184,2.891378,-6.393311,3.009996,-4.919265,-6.789151,-0.828146,4.198567,-3.565661,-8.383106,0.976141,2.075556,-4.143305,3.271249,0.573154,-9.592179,-8.424548,3.518119,2.045299,8.412573,-9.135067,9.590275,-3.167006,-4.467964,-5.914936,8.553630,-4.193010,-6.076356,-4.801664,6.198224,9.427338,9.736896,0.843263,1.979269,3.223725,1.267898,-2.258457,-9.437431,8.172540,-8.788071,3.792704,1.771098,-2.940459,5.179298,1.560841,-4.179329,-3.602652,7.062329,2.369134,-4.257014,3.997126,-7.061150,6.063587,-3.703690,-1.410561,-7.300977,-3.604859,6.561511,0.587027,-4.599840,-1.081449,-7.654745,-1.692527,-4.312010,-9.956841,-4.401965,-0.685658,3.613812,-0.177156,-7.991776,-2.056309,-2.853600,-9.719496,9.411001,-9.499487,5.663354,7.934468,8.763251,6.381385,7.927765,3.314428,6.239866,-3.986737,8.646508,0.425662,9.362834,-3.350898,-8.211522,-3.841978,-6.871078,4.401603,3.859564,8.171672,-0.004541,-0.282310,-0.077879,-3.161837,-4.534816,2.134541,8.806461,6.126653,-2.899943,-2.047899,5.068282,1.776331,-4.664199,3.145699,2.337835,-7.322508,8.082904,0.417451,-6.963232,7.944588,-2.785812,-3.077526,5.825800,3.342240,2.478589,4.184359,-4.862017,5.030421,5.598287,-4.281801,3.246755,4.402808,7.139851,8.701780,-6.911156,-7.134210,4.992334,-5.203665,2.388713,-5.558011,6.520739,8.540120,-5.369300,-9.067598,4.544068,-0.565548,-7.407353,9.282107,-4.165823,0.231568,1.382232,-7.157694,4.373505,-5.856626,-0.920163,3.164944,-6.994404,5.579894,1.936005,-4.081336,-1.563225,-7.942528,-7.010865,-4.965167,-2.606306,4.658724,-4.801275,-6.324341,-1.887159,-8.299641,5.989948,3.828606,-3.655884,2.788508,-8.056109,-5.777023,-8.824701,7.946865,-2.574732,-3.039012,-7.154577,-8.155412,8.436176,-3.021685,6.087296,-1.938809,-7.941047,-9.295620,-8.463028,6.094079,-2.230188,8.157713,-0.306294,6.010796,-0.308411,6.959660,-9.975277,5.400081,-5.010722,7.460809,-8.777798,-4.572558,1.789279,7.255912,-4.395273,6.796175,-4.084408,-9.041961,5.359213,0.975572,9.250335,-2.837166,0.671910,4.410230,1.033838,7.277745,-8.937654,5.872506,7.227644,0.531629,0.020301,-8.890049,1.249369,-4.491754,-3.140366,-7.405364,-7.234241,1.920621,7.736980,4.047733,-7.187532,-0.916900,-4.910676,-7.129178,2.215589,-3.179354,-2.852484,-4.943446,9.948854,5.641555,1.827966,6.791004,-8.543659,0.374391,0.329924,4.344320,0.306403,-4.393790,5.926080,6.212991,-3.892152,6.917380,-4.291336,-0.669061,-6.245302,-5.098810,1.305761,2.621785,-1.235785,4.478751,1.417203,0.668845,9.353598,-9.994430,5.029521,6.647125,9.192306,-4.328234,-6.025700,3.078324,-4.986001,-9.207906,0.586395,-5.592821,-0.073263,4.595905,-7.592661,8.143487,-7.320685,-7.762797,7.350587,2.457545,-4.021980,1.010658,-9.308227,5.715337,-8.289306,7.736641,3.478711,8.995129,7.795607,6.884850,-9.814306,9.299375,-1.281744,-9.609991,5.783928,6.054069,0.503623,7.275677,8.887059,6.018163,-1.028197,-0.352089,-1.667952,-7.863198,-6.444766,8.813191,-7.221837,-0.011055,-4.499516,-5.524778,-2.720136,4.731716,-1.743404,-8.652085,8.746010,2.851471,-2.562434,2.487232,-5.342363,-5.445334,1.787706,3.617576,9.845427,-9.269601,-0.332042,1.046494,-4.275370,-1.514664,2.258949,1.139126,-2.587684,3.525984,-8.730555,3.908488,-8.943232,5.550684,5.000020,3.729076,-9.815894,-0.816572,-6.911489,-2.802450,-7.208747,-4.446680,8.542191,-7.575365,-4.049063,-0.035732,-6.076936,9.408136,8.427559,-3.662947,5.534955,9.108613,-7.007856,-3.560767,-7.334922,2.315709,-9.649199,-6.827356,8.519825,6.536723,-4.670281,-5.706033,-4.236916,5.167342,7.751408,-8.844779,3.460887,-3.546547,-4.831237,0.940567,6.274055,9.843818,-6.558189,3.002779,1.117279,5.543746,-4.695249,-1.208790,-9.247310,1.900699,-3.753927,-5.266484,7.758333,0.025572,-7.883893,-2.839004,2.106147,1.325001,-9.543335,-5.215323,1.131680,1.827545,6.123662,-1.808520,-4.566273,4.955914,-5.245532,-2.188402,0.636185,0.774685,-8.287622,7.608603,5.502557,6.104378,-7.201027,8.388470,-8.307246,0.110009,4.980707,0.415983,4.954468,-7.470934,-2.667544,-4.551405,-3.054858,8.969109,6.960398,-4.394467,9.212816,-5.930611,1.206375,-5.219664,2.799665,-3.476767,4.925966,-1.056962,-8.034236,-1.492669,9.869392,-5.571959,-7.965480,2.684605,2.835812,2.028867,6.614755,-2.961918,0.627759,-1.916232,-4.853775,9.332039,-7.355077,8.989763,-0.243766,-1.077602,-0.547817,6.041929,-8.348290,-3.861019,7.504453,6.856763,-2.376383,0.287075,-6.111381,-0.898261,-4.769311,-0.894510,2.444982,-4.183967,-4.659086,1.147435,9.386664,4.954019,7.051368,1.472731,8.185417,-3.445297,-3.601144,-1.686497,2.883272,-6.941395,-0.199888,6.397958,-2.279053,-2.894025,-2.476021,6.487713,-2.859398,3.211413,-7.077511,-9.101748,6.781863,9.421186,8.695462,-0.699081,-4.409881,-7.441401,-2.944602,-9.755642,5.818649,8.376162,1.378737,-9.293203,1.192924,0.255714,-0.550664,-3.169538,-4.420085,-6.043856,6.340940,1.807613,1.605448,-0.159509,0.415737,-5.204328,9.364964,-2.848326,-9.126668,8.290912,-9.921988,2.773609,-9.194475,9.945031,-8.967836,-9.923492,-2.491863,7.012349,-5.986237,2.989623,5.449435,-2.663676,2.241086,8.162765,4.037807,-5.628998,6.703283,9.989200,8.991757,3.983770,-9.969090,1.980913,5.599236,-3.130946,-3.113567,0.261623,8.945090,5.928045,-2.935589,-9.179625,8.226655,8.937988,-6.204470,-3.709205,2.510545,5.893054,-5.289538,5.859371,-8.943011,8.917656,3.019449,-4.253618,-6.561216,-0.965969,-0.371537,4.458125,1.345458,-5.090248,5.805055,4.576969,-9.479930,-6.895535,2.283402,-1.979228,5.271975,-9.102620,-3.473184,4.063269,-9.122773,9.080320,-2.939893,-6.109900,-7.042261,6.649208,-9.947168,-1.568033,-8.833682,3.965884,-8.427457,3.702028,5.437160,3.802285,-2.850957,-7.093695,-7.556843,7.114249,-2.907505,-3.076482,-2.437998,-7.301009,-9.487374,-7.536594,9.264361,-1.669339,6.398125,8.113426,9.616667,2.098219,6.111247,8.651735,2.698795,-7.524790,-3.246955,-5.062183,0.128916,4.605914,-7.702841,-3.846555,2.901733,5.550536,-3.379668,3.448427,1.846780,3.972492,7.776422,-7.039815,3.823375,-0.642683,8.473239,-1.625687,-7.407177,-7.633595,2.042678,-2.239505,4.968812,-0.664190,6.971173,-7.437482,-1.550115,7.987814,-7.941792,-4.884950,7.020145,7.430285,-2.286771,3.283239,-4.657135,2.446650,-9.179035,-4.490264,0.916399,7.330987,4.509420,-0.473183,1.100800,9.979514,5.409670,8.751956,-4.552034,-4.081621,-9.343222,2.125066,6.385427,9.603704,8.495958,-6.134272,-2.750862,2.212130,7.658792,3.676862,1.390865,-0.397103,-8.599840,9.445003,-8.457501,9.879960,2.738065,2.440173,1.468315,-5.780903,0.621166,-4.692911,-5.428308,8.943690,5.351814,-9.379844,4.908953,8.020625,-3.682865,-3.127046,-5.382149,-2.757435,7.709754,4.504855,-7.628221,2.318921,-2.146391,2.371897,9.406065,-2.547291,0.934768,6.456642,1.397172,-9.243383,-9.890192,-1.511306,9.961419,-6.036052,5.982324,5.275097,-5.594460,3.516930,-6.584383,7.865240,4.447672,-2.266840,6.661145,2.468714,3.151720,-8.895394,-3.747506,-3.434034,6.276468,-0.125435,-0.431091,-8.556478,-2.613688,6.711061,-5.356232,-6.389739,-1.129956,-7.434522,6.573197,-8.722024,-0.013479,-5.446467,-8.539698,-4.857160,9.534436,-8.014189,-3.424577,-2.733494,-9.257131,-7.417369,0.520164,-5.677900,9.098728,9.012289,-3.441952,5.887108,-2.078202,4.016557,4.195187,5.520441,9.428935,-9.894898,-2.792385,-5.733768,4.138829,-4.116424,-4.447788,-7.659132,3.008689,-2.159327,-8.766047,-9.894720,6.243596,7.686710,7.448053,3.680883,-2.058282,3.444707,5.682314,8.617952,-0.181909,9.088231,-6.844069,-7.794499,9.663025,4.300576,7.761407,-4.900495,0.145716,8.380291,-6.315834,2.734652,-4.361070,-5.123068,5.104979,-0.119996,3.899899,-3.884264,-0.405046,7.447755,1.328079,5.491821,1.739809,1.142342,7.348245,6.542927,0.861133,-2.001273,5.422763,9.281308,-2.773616,-2.255312,3.079783,1.282200,-9.140853,0.866240,8.338704,-7.794664,6.942968,9.234525,-8.354172,-0.443858,-3.695183,9.213899,6.765077], dtype = "float32")#candidate|11211|(864,)|const|float32
var_11212 = relay.var("var_11212", dtype = "float32", shape = (2304,))#candidate|11212|(2304,)|var|float32
const_11213 = relay.const([True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,True,True], dtype = "bool")#candidate|11213|(135,)|const|bool
call_11210 = relay.TupleGetItem(func_10771_call(relay.reshape(const_11211.astype('float32'), [864,]), relay.reshape(var_11212.astype('float32'), [2304,]), relay.reshape(const_11213.astype('bool'), [3, 45]), relay.reshape(const_11213.astype('bool'), [3, 45]), ), 0)
call_11214 = relay.TupleGetItem(func_10776_call(relay.reshape(const_11211.astype('float32'), [864,]), relay.reshape(var_11212.astype('float32'), [2304,]), relay.reshape(const_11213.astype('bool'), [3, 45]), relay.reshape(const_11213.astype('bool'), [3, 45]), ), 0)
output = relay.Tuple([call_11202,call_11210,const_11211,var_11212,const_11213,])
output2 = relay.Tuple([call_11203,call_11214,const_11211,var_11212,const_11213,])
func_11216 = relay.Function([var_11212,], output)
mod['func_11216'] = func_11216
mod = relay.transform.InferType()(mod)
mutated_mod['func_11216'] = func_11216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11217 = relay.var("var_11217", dtype = "float32", shape = (2304,))#candidate|11217|(2304,)|var|float32
func_11216_call = mutated_mod.get_global_var('func_11216')
call_11218 = func_11216_call(var_11217)
output = call_11218
func_11219 = relay.Function([var_11217], output)
mutated_mod['func_11219'] = func_11219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10311_call = mod.get_global_var('func_10311')
func_10312_call = mutated_mod.get_global_var('func_10312')
call_11235 = func_10311_call()
call_11236 = func_10311_call()
uop_11243 = relay.log2(call_11235.astype('float64')) # shape=(8, 8, 1)
uop_11245 = relay.log2(call_11236.astype('float64')) # shape=(8, 8, 1)
output = relay.Tuple([uop_11243,])
output2 = relay.Tuple([uop_11245,])
func_11246 = relay.Function([], output)
mod['func_11246'] = func_11246
mod = relay.transform.InferType()(mod)
mutated_mod['func_11246'] = func_11246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11246_call = mutated_mod.get_global_var('func_11246')
call_11247 = func_11246_call()
output = call_11247
func_11248 = relay.Function([], output)
mutated_mod['func_11248'] = func_11248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_11332 = func_10641_call()
call_11333 = func_10641_call()
output = relay.Tuple([call_11332,])
output2 = relay.Tuple([call_11333,])
func_11335 = relay.Function([], output)
mod['func_11335'] = func_11335
mod = relay.transform.InferType()(mod)
output = func_11335()
func_11336 = relay.Function([], output)
mutated_mod['func_11336'] = func_11336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11246_call = mod.get_global_var('func_11246')
func_11248_call = mutated_mod.get_global_var('func_11248')
call_11343 = relay.TupleGetItem(func_11246_call(), 0)
call_11344 = relay.TupleGetItem(func_11248_call(), 0)
func_10987_call = mod.get_global_var('func_10987')
func_10990_call = mutated_mod.get_global_var('func_10990')
var_11349 = relay.var("var_11349", dtype = "float64", shape = (40,))#candidate|11349|(40,)|var|float64
var_11350 = relay.var("var_11350", dtype = "uint32", shape = (70,))#candidate|11350|(70,)|var|uint32
call_11348 = relay.TupleGetItem(func_10987_call(relay.reshape(var_11349.astype('float64'), [40,]), relay.reshape(var_11350.astype('uint32'), [70,]), ), 6)
call_11351 = relay.TupleGetItem(func_10990_call(relay.reshape(var_11349.astype('float64'), [40,]), relay.reshape(var_11350.astype('uint32'), [70,]), ), 6)
output = relay.Tuple([call_11343,call_11348,var_11349,var_11350,])
output2 = relay.Tuple([call_11344,call_11351,var_11349,var_11350,])
func_11364 = relay.Function([var_11349,var_11350,], output)
mod['func_11364'] = func_11364
mod = relay.transform.InferType()(mod)
var_11365 = relay.var("var_11365", dtype = "float64", shape = (40,))#candidate|11365|(40,)|var|float64
var_11366 = relay.var("var_11366", dtype = "uint32", shape = (70,))#candidate|11366|(70,)|var|uint32
output = func_11364(var_11365,var_11366,)
func_11367 = relay.Function([var_11365,var_11366,], output)
mutated_mod['func_11367'] = func_11367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11149_call = mod.get_global_var('func_11149')
func_11151_call = mutated_mod.get_global_var('func_11151')
call_11476 = relay.TupleGetItem(func_11149_call(), 0)
call_11477 = relay.TupleGetItem(func_11151_call(), 0)
output = call_11476
output2 = call_11477
func_11479 = relay.Function([], output)
mod['func_11479'] = func_11479
mod = relay.transform.InferType()(mod)
output = func_11479()
func_11480 = relay.Function([], output)
mutated_mod['func_11480'] = func_11480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11066_call = mod.get_global_var('func_11066')
func_11068_call = mutated_mod.get_global_var('func_11068')
call_11548 = relay.TupleGetItem(func_11066_call(), 0)
call_11549 = relay.TupleGetItem(func_11068_call(), 0)
func_11066_call = mod.get_global_var('func_11066')
func_11068_call = mutated_mod.get_global_var('func_11068')
call_11573 = relay.TupleGetItem(func_11066_call(), 0)
call_11574 = relay.TupleGetItem(func_11068_call(), 0)
func_11149_call = mod.get_global_var('func_11149')
func_11151_call = mutated_mod.get_global_var('func_11151')
call_11578 = relay.TupleGetItem(func_11149_call(), 1)
call_11579 = relay.TupleGetItem(func_11151_call(), 1)
output = relay.Tuple([call_11548,call_11573,call_11578,])
output2 = relay.Tuple([call_11549,call_11574,call_11579,])
func_11585 = relay.Function([], output)
mod['func_11585'] = func_11585
mod = relay.transform.InferType()(mod)
output = func_11585()
func_11586 = relay.Function([], output)
mutated_mod['func_11586'] = func_11586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_11596 = func_9857_call()
call_11597 = func_9857_call()
output = call_11596
output2 = call_11597
func_11599 = relay.Function([], output)
mod['func_11599'] = func_11599
mod = relay.transform.InferType()(mod)
output = func_11599()
func_11600 = relay.Function([], output)
mutated_mod['func_11600'] = func_11600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11061_call = mod.get_global_var('func_11061')
func_11063_call = mutated_mod.get_global_var('func_11063')
call_11601 = relay.TupleGetItem(func_11061_call(), 0)
call_11602 = relay.TupleGetItem(func_11063_call(), 0)
output = call_11601
output2 = call_11602
func_11611 = relay.Function([], output)
mod['func_11611'] = func_11611
mod = relay.transform.InferType()(mod)
mutated_mod['func_11611'] = func_11611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11611_call = mutated_mod.get_global_var('func_11611')
call_11612 = func_11611_call()
output = call_11612
func_11613 = relay.Function([], output)
mutated_mod['func_11613'] = func_11613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11246_call = mod.get_global_var('func_11246')
func_11248_call = mutated_mod.get_global_var('func_11248')
call_11637 = relay.TupleGetItem(func_11246_call(), 0)
call_11638 = relay.TupleGetItem(func_11248_call(), 0)
uop_11649 = relay.cosh(call_11637.astype('float32')) # shape=(8, 8, 1)
uop_11651 = relay.cosh(call_11638.astype('float32')) # shape=(8, 8, 1)
func_8501_call = mod.get_global_var('func_8501')
func_8506_call = mutated_mod.get_global_var('func_8506')
var_11654 = relay.var("var_11654", dtype = "float32", shape = (1, 150))#candidate|11654|(1, 150)|var|float32
var_11655 = relay.var("var_11655", dtype = "float64", shape = (507, 1))#candidate|11655|(507, 1)|var|float64
var_11656 = relay.var("var_11656", dtype = "int64", shape = ())#candidate|11656|()|var|int64
var_11657 = relay.var("var_11657", dtype = "float32", shape = (99,))#candidate|11657|(99,)|var|float32
call_11653 = relay.TupleGetItem(func_8501_call(relay.reshape(var_11654.astype('float32'), [15, 2, 5]), relay.reshape(var_11655.astype('float64'), [507, 1]), relay.reshape(var_11656.astype('int64'), []), relay.reshape(var_11657.astype('float32'), [99,]), ), 3)
call_11658 = relay.TupleGetItem(func_8506_call(relay.reshape(var_11654.astype('float32'), [15, 2, 5]), relay.reshape(var_11655.astype('float64'), [507, 1]), relay.reshape(var_11656.astype('int64'), []), relay.reshape(var_11657.astype('float32'), [99,]), ), 3)
bop_11659 = relay.minimum(uop_11649.astype('float64'), var_11654.astype('float64')) # shape=(8, 8, 150)
bop_11662 = relay.minimum(uop_11651.astype('float64'), var_11654.astype('float64')) # shape=(8, 8, 150)
func_3641_call = mod.get_global_var('func_3641')
func_3644_call = mutated_mod.get_global_var('func_3644')
var_11665 = relay.var("var_11665", dtype = "float64", shape = (252,))#candidate|11665|(252,)|var|float64
call_11664 = func_3641_call(relay.reshape(call_11653.astype('float64'), []), relay.reshape(var_11665.astype('float64'), [7, 9, 4]), )
call_11666 = func_3641_call(relay.reshape(call_11653.astype('float64'), []), relay.reshape(var_11665.astype('float64'), [7, 9, 4]), )
func_9935_call = mod.get_global_var('func_9935')
func_9936_call = mutated_mod.get_global_var('func_9936')
call_11675 = relay.TupleGetItem(func_9935_call(), 1)
call_11676 = relay.TupleGetItem(func_9936_call(), 1)
func_7653_call = mod.get_global_var('func_7653')
func_7656_call = mutated_mod.get_global_var('func_7656')
call_11679 = func_7653_call(relay.reshape(call_11675.astype('float32'), [7, 2, 9]))
call_11680 = func_7653_call(relay.reshape(call_11675.astype('float32'), [7, 2, 9]))
output = relay.Tuple([call_11653,var_11655,var_11656,var_11657,bop_11659,call_11664,var_11665,call_11675,call_11679,])
output2 = relay.Tuple([call_11658,var_11655,var_11656,var_11657,bop_11662,call_11666,var_11665,call_11676,call_11680,])
func_11684 = relay.Function([var_11654,var_11655,var_11656,var_11657,var_11665,], output)
mod['func_11684'] = func_11684
mod = relay.transform.InferType()(mod)
var_11685 = relay.var("var_11685", dtype = "float32", shape = (1, 150))#candidate|11685|(1, 150)|var|float32
var_11686 = relay.var("var_11686", dtype = "float64", shape = (507, 1))#candidate|11686|(507, 1)|var|float64
var_11687 = relay.var("var_11687", dtype = "int64", shape = ())#candidate|11687|()|var|int64
var_11688 = relay.var("var_11688", dtype = "float32", shape = (99,))#candidate|11688|(99,)|var|float32
var_11689 = relay.var("var_11689", dtype = "float64", shape = (252,))#candidate|11689|(252,)|var|float64
output = func_11684(var_11685,var_11686,var_11687,var_11688,var_11689,)
func_11690 = relay.Function([var_11685,var_11686,var_11687,var_11688,var_11689,], output)
mutated_mod['func_11690'] = func_11690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_11707 = func_9857_call()
call_11708 = func_9857_call()
output = relay.Tuple([call_11707,])
output2 = relay.Tuple([call_11708,])
func_11741 = relay.Function([], output)
mod['func_11741'] = func_11741
mod = relay.transform.InferType()(mod)
output = func_11741()
func_11742 = relay.Function([], output)
mutated_mod['func_11742'] = func_11742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11479_call = mod.get_global_var('func_11479')
func_11480_call = mutated_mod.get_global_var('func_11480')
call_11772 = func_11479_call()
call_11773 = func_11479_call()
func_11040_call = mod.get_global_var('func_11040')
func_11044_call = mutated_mod.get_global_var('func_11044')
const_11781 = relay.const([[4,3,-5,-1,1,-2,3,5,-7,3],[-3,-6,-7,-2,7,-1,7,8,10,8],[1,-6,9,4,-4,-3,-9,2,6,-1],[7,3,6,3,-1,7,4,-6,-7,-7],[9,-9,-1,-2,-6,-9,5,-8,-5,6],[3,-2,1,10,-10,8,-6,-6,10,5],[1,9,-10,-8,10,-5,-9,10,4,-7],[-6,4,4,1,9,9,2,7,-7,-8],[-1,9,-7,8,-8,8,2,6,-1,9],[2,2,-6,-7,4,-9,8,4,7,-9],[-9,-7,-8,-8,-9,-8,6,7,9,-6],[-9,1,-1,3,9,2,-6,10,1,2],[6,1,4,-4,1,-7,3,8,-2,-3],[-2,8,4,-3,-5,-7,6,3,-7,2],[-4,-8,8,-4,-6,1,2,5,9,-2],[-2,-7,6,-10,-4,-1,-3,9,7,-4],[-10,1,8,7,6,2,-8,-8,-9,-9],[3,5,-1,9,-8,10,-2,10,-9,-7],[-8,-2,-10,-5,9,3,-6,-9,-3,-6],[3,-8,9,5,7,-2,3,-5,6,-3],[4,8,4,-8,6,-7,9,4,-5,5],[-2,-9,3,-9,4,6,6,9,-1,-7],[2,-4,9,-1,8,6,-5,5,9,-8],[4,2,-8,-1,9,-4,2,-3,7,-7],[10,-4,-10,-2,3,-3,-6,8,-5,2],[5,-6,5,9,-3,-8,-10,7,-3,9],[1,-2,7,8,7,10,8,-2,-5,-9],[-5,-1,-1,-5,7,10,-7,2,2,-8],[4,2,3,-6,-5,9,4,-7,6,9],[7,1,2,10,7,-3,-5,2,-9,8],[-5,-5,5,-2,-3,6,2,8,5,6],[-5,3,-5,9,5,-7,-4,-9,-4,2],[4,1,-7,10,6,-4,-6,-2,5,-5],[9,-3,4,-4,5,-8,-5,-4,10,6],[1,-7,-8,6,-10,-6,-2,-4,10,-7],[-5,3,7,-2,-3,-1,8,-1,-6,-2],[7,7,-6,10,-8,-1,3,3,-5,-7],[3,5,5,-2,5,9,-9,-3,-7,10],[-1,8,-7,6,-8,-2,-10,-4,3,9],[-9,1,-5,4,-9,-7,7,4,8,8],[10,9,-7,8,1,9,6,-10,6,10],[10,4,5,-3,-8,1,1,10,2,-9],[5,-3,-9,1,6,-9,-1,4,-2,10],[-8,-8,10,-8,-7,-5,6,-5,-10,-8],[-8,-5,-3,6,5,-5,-7,-3,-2,9],[-9,-6,-2,-8,7,-9,7,5,-2,-3],[-7,2,-1,10,8,-5,-4,10,1,-6],[-5,7,-10,2,-5,9,-5,-7,7,-2],[-7,-2,9,6,-1,2,1,10,2,-3],[10,1,4,4,3,8,4,-2,-3,4],[-3,4,6,5,-7,-6,-10,-2,5,8],[3,-10,8,-1,2,-7,-4,9,6,-9],[-2,-1,4,-5,-9,-6,8,9,-2,9],[8,9,6,3,3,6,-8,6,-10,2]], dtype = "int32")#candidate|11781|(54, 10)|const|int32
call_11780 = relay.TupleGetItem(func_11040_call(relay.reshape(const_11781.astype('int32'), [3, 180]), relay.reshape(const_11781.astype('int32'), [3, 180]), ), 1)
call_11782 = relay.TupleGetItem(func_11044_call(relay.reshape(const_11781.astype('int32'), [3, 180]), relay.reshape(const_11781.astype('int32'), [3, 180]), ), 1)
func_11364_call = mod.get_global_var('func_11364')
func_11367_call = mutated_mod.get_global_var('func_11367')
var_11799 = relay.var("var_11799", dtype = "float64", shape = (40,))#candidate|11799|(40,)|var|float64
var_11800 = relay.var("var_11800", dtype = "uint32", shape = (70, 1))#candidate|11800|(70, 1)|var|uint32
call_11798 = relay.TupleGetItem(func_11364_call(relay.reshape(var_11799.astype('float64'), [40,]), relay.reshape(var_11800.astype('uint32'), [70,]), ), 1)
call_11801 = relay.TupleGetItem(func_11367_call(relay.reshape(var_11799.astype('float64'), [40,]), relay.reshape(var_11800.astype('uint32'), [70,]), ), 1)
output = relay.Tuple([call_11772,call_11780,const_11781,call_11798,var_11799,var_11800,])
output2 = relay.Tuple([call_11773,call_11782,const_11781,call_11801,var_11799,var_11800,])
func_11802 = relay.Function([var_11799,var_11800,], output)
mod['func_11802'] = func_11802
mod = relay.transform.InferType()(mod)
mutated_mod['func_11802'] = func_11802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11802_call = mutated_mod.get_global_var('func_11802')
var_11804 = relay.var("var_11804", dtype = "float64", shape = (40,))#candidate|11804|(40,)|var|float64
var_11805 = relay.var("var_11805", dtype = "uint32", shape = (70, 1))#candidate|11805|(70, 1)|var|uint32
call_11803 = func_11802_call(var_11804,var_11805,)
output = call_11803
func_11806 = relay.Function([var_11804,var_11805,], output)
mutated_mod['func_11806'] = func_11806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11838 = relay.var("var_11838", dtype = "float64", shape = (4, 11, 7))#candidate|11838|(4, 11, 7)|var|float64
var_11839 = relay.var("var_11839", dtype = "float64", shape = (4, 11, 7))#candidate|11839|(4, 11, 7)|var|float64
bop_11840 = relay.floor_mod(var_11838.astype('float64'), relay.reshape(var_11839.astype('float64'), relay.shape_of(var_11838))) # shape=(4, 11, 7)
output = relay.Tuple([bop_11840,])
output2 = relay.Tuple([bop_11840,])
func_11843 = relay.Function([var_11838,var_11839,], output)
mod['func_11843'] = func_11843
mod = relay.transform.InferType()(mod)
mutated_mod['func_11843'] = func_11843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11843_call = mutated_mod.get_global_var('func_11843')
var_11845 = relay.var("var_11845", dtype = "float64", shape = (4, 11, 7))#candidate|11845|(4, 11, 7)|var|float64
var_11846 = relay.var("var_11846", dtype = "float64", shape = (4, 11, 7))#candidate|11846|(4, 11, 7)|var|float64
call_11844 = func_11843_call(var_11845,var_11846,)
output = call_11844
func_11847 = relay.Function([var_11845,var_11846,], output)
mutated_mod['func_11847'] = func_11847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10311_call = mod.get_global_var('func_10311')
func_10312_call = mutated_mod.get_global_var('func_10312')
call_11849 = func_10311_call()
call_11850 = func_10311_call()
func_11599_call = mod.get_global_var('func_11599')
func_11600_call = mutated_mod.get_global_var('func_11600')
call_11851 = func_11599_call()
call_11852 = func_11599_call()
func_8840_call = mod.get_global_var('func_8840')
func_8843_call = mutated_mod.get_global_var('func_8843')
const_11860 = relay.const([-0.784946,-1.535278,4.687262,-3.370223,-1.105185,0.876404,2.395378,0.201793,6.971633,-2.031127,-7.390806,3.388404,7.034931,-6.154512,8.641814,0.031610,-0.923891,1.450740,0.693511,8.110040,-3.127026,-0.466114,-6.854317,-9.785700,1.382678,5.873716,-3.846760,6.276117,9.692667,-6.571789,-7.467771,-7.428959,-1.877294,-0.164351,8.111800,7.426654,-9.971760,4.879886,7.583521,-0.536803,4.103120,6.566877,-3.896610,9.166052,-5.465771,-1.284549,0.476785,2.016250,1.777544,-3.891139,-4.147716,-3.404676,6.525038,4.316540,5.001785,7.619018,-1.961404,6.594591,5.201891,-2.069898,-3.408590,-6.755140,7.103003,7.643150,9.206722,-3.102947,0.289568,-2.264610,-0.345154,-8.469078,1.066558,-4.774033,-0.246710,-3.033251,-9.787545,8.932056,-7.133447,6.723259,-3.696047,-3.200110,-9.115172,4.343051,8.902556,-0.439012,5.179596,-1.169013,-4.999207,-5.938041,-1.072190,-2.918345,7.654922,2.482553,-6.849632,-4.881166,-4.991182,-6.304599,7.127469,-3.550772,-1.277086,-4.640167,6.747955,-7.022608,-2.403395,-8.014445,-2.770905,3.769071,8.256971,5.951080,2.273141,-8.760373,-3.758096,-7.366131,-8.832222,-4.284202,1.006358,-1.695196,9.763669,-8.904229,-7.953089,-8.547106,-0.791905,-5.853290,4.089074,0.040806,4.116316,-1.481731], dtype = "float32")#candidate|11860|(126,)|const|float32
call_11859 = relay.TupleGetItem(func_8840_call(relay.reshape(const_11860.astype('float32'), [3, 14, 3])), 4)
call_11861 = relay.TupleGetItem(func_8843_call(relay.reshape(const_11860.astype('float32'), [3, 14, 3])), 4)
output = relay.Tuple([call_11849,call_11851,call_11859,const_11860,])
output2 = relay.Tuple([call_11850,call_11852,call_11861,const_11860,])
func_11865 = relay.Function([], output)
mod['func_11865'] = func_11865
mod = relay.transform.InferType()(mod)
mutated_mod['func_11865'] = func_11865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11865_call = mutated_mod.get_global_var('func_11865')
call_11866 = func_11865_call()
output = call_11866
func_11867 = relay.Function([], output)
mutated_mod['func_11867'] = func_11867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_11892 = func_10641_call()
call_11893 = func_10641_call()
func_10604_call = mod.get_global_var('func_10604')
func_10607_call = mutated_mod.get_global_var('func_10607')
var_11911 = relay.var("var_11911", dtype = "float64", shape = (20, 2))#candidate|11911|(20, 2)|var|float64
call_11910 = func_10604_call(relay.reshape(var_11911.astype('float64'), [8, 5, 1]))
call_11912 = func_10604_call(relay.reshape(var_11911.astype('float64'), [8, 5, 1]))
func_11479_call = mod.get_global_var('func_11479')
func_11480_call = mutated_mod.get_global_var('func_11480')
call_11914 = func_11479_call()
call_11915 = func_11479_call()
uop_11916 = relay.log(var_11911.astype('float32')) # shape=(20, 2)
bop_11928 = relay.left_shift(uop_11916.astype('uint8'), relay.reshape(var_11911.astype('uint8'), relay.shape_of(uop_11916))) # shape=(20, 2)
output = relay.Tuple([call_11892,call_11910,call_11914,bop_11928,])
output2 = relay.Tuple([call_11893,call_11912,call_11915,bop_11928,])
func_11931 = relay.Function([var_11911,], output)
mod['func_11931'] = func_11931
mod = relay.transform.InferType()(mod)
var_11932 = relay.var("var_11932", dtype = "float64", shape = (20, 2))#candidate|11932|(20, 2)|var|float64
output = func_11931(var_11932)
func_11933 = relay.Function([var_11932], output)
mutated_mod['func_11933'] = func_11933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11741_call = mod.get_global_var('func_11741')
func_11742_call = mutated_mod.get_global_var('func_11742')
call_11942 = relay.TupleGetItem(func_11741_call(), 0)
call_11943 = relay.TupleGetItem(func_11742_call(), 0)
output = call_11942
output2 = call_11943
func_11944 = relay.Function([], output)
mod['func_11944'] = func_11944
mod = relay.transform.InferType()(mod)
output = func_11944()
func_11945 = relay.Function([], output)
mutated_mod['func_11945'] = func_11945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11865_call = mod.get_global_var('func_11865')
func_11867_call = mutated_mod.get_global_var('func_11867')
call_12053 = relay.TupleGetItem(func_11865_call(), 2)
call_12054 = relay.TupleGetItem(func_11867_call(), 2)
var_12083 = relay.var("var_12083", dtype = "float64", shape = (507,))#candidate|12083|(507,)|var|float64
bop_12084 = relay.equal(call_12053.astype('bool'), relay.reshape(var_12083.astype('bool'), relay.shape_of(call_12053))) # shape=(507,)
bop_12087 = relay.equal(call_12054.astype('bool'), relay.reshape(var_12083.astype('bool'), relay.shape_of(call_12054))) # shape=(507,)
uop_12101 = relay.atan(call_12053.astype('float64')) # shape=(507,)
uop_12103 = relay.atan(call_12054.astype('float64')) # shape=(507,)
bop_12110 = relay.bitwise_and(uop_12101.astype('uint8'), relay.reshape(bop_12084.astype('uint8'), relay.shape_of(uop_12101))) # shape=(507,)
bop_12113 = relay.bitwise_and(uop_12103.astype('uint8'), relay.reshape(bop_12087.astype('uint8'), relay.shape_of(uop_12103))) # shape=(507,)
output = bop_12110
output2 = bop_12113
func_12116 = relay.Function([var_12083,], output)
mod['func_12116'] = func_12116
mod = relay.transform.InferType()(mod)
var_12117 = relay.var("var_12117", dtype = "float64", shape = (507,))#candidate|12117|(507,)|var|float64
output = func_12116(var_12117)
func_12118 = relay.Function([var_12117], output)
mutated_mod['func_12118'] = func_12118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11066_call = mod.get_global_var('func_11066')
func_11068_call = mutated_mod.get_global_var('func_11068')
call_12140 = relay.TupleGetItem(func_11066_call(), 0)
call_12141 = relay.TupleGetItem(func_11068_call(), 0)
output = relay.Tuple([call_12140,])
output2 = relay.Tuple([call_12141,])
func_12150 = relay.Function([], output)
mod['func_12150'] = func_12150
mod = relay.transform.InferType()(mod)
mutated_mod['func_12150'] = func_12150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12150_call = mutated_mod.get_global_var('func_12150')
call_12151 = func_12150_call()
output = call_12151
func_12152 = relay.Function([], output)
mutated_mod['func_12152'] = func_12152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_12206 = func_10641_call()
call_12207 = func_10641_call()
output = call_12206
output2 = call_12207
func_12208 = relay.Function([], output)
mod['func_12208'] = func_12208
mod = relay.transform.InferType()(mod)
output = func_12208()
func_12209 = relay.Function([], output)
mutated_mod['func_12209'] = func_12209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11246_call = mod.get_global_var('func_11246')
func_11248_call = mutated_mod.get_global_var('func_11248')
call_12220 = relay.TupleGetItem(func_11246_call(), 0)
call_12221 = relay.TupleGetItem(func_11248_call(), 0)
func_8109_call = mod.get_global_var('func_8109')
func_8113_call = mutated_mod.get_global_var('func_8113')
var_12241 = relay.var("var_12241", dtype = "float64", shape = (160, 1))#candidate|12241|(160, 1)|var|float64
var_12242 = relay.var("var_12242", dtype = "float32", shape = (99,))#candidate|12242|(99,)|var|float32
call_12240 = relay.TupleGetItem(func_8109_call(relay.reshape(var_12241.astype('float64'), [16, 1, 10]), relay.reshape(var_12242.astype('float32'), [99,]), ), 4)
call_12243 = relay.TupleGetItem(func_8113_call(relay.reshape(var_12241.astype('float64'), [16, 1, 10]), relay.reshape(var_12242.astype('float32'), [99,]), ), 4)
func_9993_call = mod.get_global_var('func_9993')
func_9998_call = mutated_mod.get_global_var('func_9998')
var_12247 = relay.var("var_12247", dtype = "float64", shape = (507,))#candidate|12247|(507,)|var|float64
const_12248 = relay.const([False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False], dtype = "bool")#candidate|12248|(135,)|const|bool
call_12246 = relay.TupleGetItem(func_9993_call(relay.reshape(var_12247.astype('float64'), [507,]), relay.reshape(call_12240.astype('float32'), [99,]), relay.reshape(const_12248.astype('bool'), [45, 3]), ), 3)
call_12249 = relay.TupleGetItem(func_9998_call(relay.reshape(var_12247.astype('float64'), [507,]), relay.reshape(call_12240.astype('float32'), [99,]), relay.reshape(const_12248.astype('bool'), [45, 3]), ), 3)
output = relay.Tuple([call_12220,call_12240,var_12241,var_12242,call_12246,var_12247,const_12248,])
output2 = relay.Tuple([call_12221,call_12243,var_12241,var_12242,call_12249,var_12247,const_12248,])
func_12253 = relay.Function([var_12241,var_12242,var_12247,], output)
mod['func_12253'] = func_12253
mod = relay.transform.InferType()(mod)
mutated_mod['func_12253'] = func_12253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12253_call = mutated_mod.get_global_var('func_12253')
var_12255 = relay.var("var_12255", dtype = "float64", shape = (160, 1))#candidate|12255|(160, 1)|var|float64
var_12256 = relay.var("var_12256", dtype = "float32", shape = (99,))#candidate|12256|(99,)|var|float32
var_12257 = relay.var("var_12257", dtype = "float64", shape = (507,))#candidate|12257|(507,)|var|float64
call_12254 = func_12253_call(var_12255,var_12256,var_12257,)
output = call_12254
func_12258 = relay.Function([var_12255,var_12256,var_12257,], output)
mutated_mod['func_12258'] = func_12258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11066_call = mod.get_global_var('func_11066')
func_11068_call = mutated_mod.get_global_var('func_11068')
call_12304 = relay.TupleGetItem(func_11066_call(), 0)
call_12305 = relay.TupleGetItem(func_11068_call(), 0)
uop_12306 = relay.log10(call_12304.astype('float64')) # shape=(8, 8, 1)
uop_12308 = relay.log10(call_12305.astype('float64')) # shape=(8, 8, 1)
bop_12318 = relay.logical_or(uop_12306.astype('bool'), relay.reshape(call_12304.astype('bool'), relay.shape_of(uop_12306))) # shape=(8, 8, 1)
bop_12321 = relay.logical_or(uop_12308.astype('bool'), relay.reshape(call_12305.astype('bool'), relay.shape_of(uop_12308))) # shape=(8, 8, 1)
output = relay.Tuple([bop_12318,])
output2 = relay.Tuple([bop_12321,])
func_12326 = relay.Function([], output)
mod['func_12326'] = func_12326
mod = relay.transform.InferType()(mod)
output = func_12326()
func_12327 = relay.Function([], output)
mutated_mod['func_12327'] = func_12327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_12366 = func_9857_call()
call_12367 = func_9857_call()
output = relay.Tuple([call_12366,])
output2 = relay.Tuple([call_12367,])
func_12374 = relay.Function([], output)
mod['func_12374'] = func_12374
mod = relay.transform.InferType()(mod)
mutated_mod['func_12374'] = func_12374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12374_call = mutated_mod.get_global_var('func_12374')
call_12375 = func_12374_call()
output = call_12375
func_12376 = relay.Function([], output)
mutated_mod['func_12376'] = func_12376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11599_call = mod.get_global_var('func_11599')
func_11600_call = mutated_mod.get_global_var('func_11600')
call_12386 = func_11599_call()
call_12387 = func_11599_call()
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
var_12390 = relay.var("var_12390", dtype = "uint32", shape = (2288,))#candidate|12390|(2288,)|var|uint32
call_12389 = relay.TupleGetItem(func_1358_call(relay.reshape(var_12390.astype('uint32'), [16, 13, 11])), 2)
call_12391 = relay.TupleGetItem(func_1360_call(relay.reshape(var_12390.astype('uint32'), [16, 13, 11])), 2)
func_10704_call = mod.get_global_var('func_10704')
func_10707_call = mutated_mod.get_global_var('func_10707')
var_12397 = relay.var("var_12397", dtype = "float32", shape = (99, 1))#candidate|12397|(99, 1)|var|float32
const_12398 = relay.const([7,-2,7,-5,2,-1,-3,-9,-9,10,4,8,-2,7,3,-5,9,-5,9,-5,1,-5,-7,9,7,3,-9,-1,10,-10,-6,-3,-4,-3,10,6], dtype = "uint64")#candidate|12398|(36,)|const|uint64
call_12396 = relay.TupleGetItem(func_10704_call(relay.reshape(var_12397.astype('float32'), [99,]), relay.reshape(const_12398.astype('uint64'), [36,]), ), 3)
call_12399 = relay.TupleGetItem(func_10707_call(relay.reshape(var_12397.astype('float32'), [99,]), relay.reshape(const_12398.astype('uint64'), [36,]), ), 3)
output = relay.Tuple([call_12386,call_12389,var_12390,call_12396,var_12397,const_12398,])
output2 = relay.Tuple([call_12387,call_12391,var_12390,call_12399,var_12397,const_12398,])
func_12407 = relay.Function([var_12390,var_12397,], output)
mod['func_12407'] = func_12407
mod = relay.transform.InferType()(mod)
mutated_mod['func_12407'] = func_12407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12407_call = mutated_mod.get_global_var('func_12407')
var_12409 = relay.var("var_12409", dtype = "uint32", shape = (2288,))#candidate|12409|(2288,)|var|uint32
var_12410 = relay.var("var_12410", dtype = "float32", shape = (99, 1))#candidate|12410|(99, 1)|var|float32
call_12408 = func_12407_call(var_12409,var_12410,)
output = call_12408
func_12411 = relay.Function([var_12409,var_12410,], output)
mutated_mod['func_12411'] = func_12411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12150_call = mod.get_global_var('func_12150')
func_12152_call = mutated_mod.get_global_var('func_12152')
call_12431 = relay.TupleGetItem(func_12150_call(), 0)
call_12432 = relay.TupleGetItem(func_12152_call(), 0)
func_12253_call = mod.get_global_var('func_12253')
func_12258_call = mutated_mod.get_global_var('func_12258')
const_12435 = relay.const([-1.531278,2.709887,-4.694831,-6.871735,5.229667,0.002528,-4.911460,-8.105489,-2.215704,7.653365,-2.001045,-7.236001,-7.252278,-5.445988,2.227060,7.217852,7.702733,9.782821,8.225591,-7.408870,-6.619039,1.253207,1.553774,-2.455876,-8.708667,8.698315,-4.599098,4.637008,9.096738,-9.365115,6.116061,-9.558369,2.822732,-2.514412,8.484419,7.899523,-8.438244,-7.113821,1.151868,4.730823,4.937839,-5.996890,-4.856959,-1.710520,5.874147,-5.325511,-6.010265,-1.552315,4.264040,3.061302,9.392743,-0.026749,8.695417,0.698435,4.954493,-7.170245,8.614803,-9.155955,-6.625912,3.192291,4.857053,-7.220656,-6.661147,2.518169,1.873053,-3.545161,-0.227408,-1.645087,-1.847268,-4.987909,-5.231806,-4.714512,5.008185,7.222539,7.144391,2.728231,5.046939,-2.303421,-9.204426,7.562812,-3.940929,-9.901326,-0.885984,-7.046450,-1.505158,-2.182220,-8.336389,-0.014569,9.001037,0.325560,-2.982578,7.262158,8.121914,2.251841,-7.831549,8.338256,4.561459,6.824686,3.850602,-5.510271,-8.273031,-2.982982,3.653885,-5.510342,2.035665,7.981559,-5.456608,0.005644,-0.795523,-7.659764,3.599094,-2.346129,4.407471,-5.443538,5.331235,0.245893,0.592394,-4.780777,-3.496271,6.028436,5.050171,-5.539866,6.893136,5.065632,-6.599491,-8.296256,5.654384,-8.954754,-8.587927,4.158894,7.812523,8.956406,0.001210,8.113917,-1.555258,5.704672,0.231692,-0.653034,7.574453,0.910528,7.358882,4.079485,-2.252848,4.717625,-0.887007,-9.687314,4.782618,-8.811423,-2.562980,6.123800,-5.521959,-0.111042,-8.890478,-2.995302,-4.266202,8.092999,-8.584431,-9.024593,9.548528,5.067041], dtype = "float64")#candidate|12435|(160,)|const|float64
const_12436 = relay.const([-2.970681,5.904086,-3.183673,2.025275,2.088942,-2.553826,-2.831717,9.694740,-0.294876,-2.507346,9.274091,1.678945,7.900371,-3.741340,5.675487,4.472586,5.182140,-6.915964,1.895588,-0.403701,1.511305,-8.773988,8.647972,-7.262965,7.207759,-4.421741,1.283461,1.472313,7.308858,3.432633,6.883425,-1.261166,3.227494,-3.584385,-7.299111,8.997375,-2.916848,-4.640449,7.222248,7.936239,1.476375,6.392632,-3.717856,6.764704,-3.778273,-4.873574,-3.171107,-6.870958,0.263613,-2.283860,8.856708,6.452257,-7.372846,-6.974532,-5.122147,-7.329867,0.008617,-3.859337,-6.537008,8.810582,9.374169,-9.027565,-8.023625,4.913300,-7.438253,-2.205415,-6.645896,9.054890,6.091592,-8.411733,8.158228,0.951776,2.699756,-6.171599,-3.757755,-1.998919,5.756991,7.615736,-7.878498,6.869198,-2.332726,-5.538460,4.297819,2.034618,3.037756,-8.351246,-0.418295,-0.224569,-0.161737,3.674149,-5.414583,-4.355873,3.996928,-9.993575,-6.014408,-0.889650,2.004448,4.891248,-3.801590], dtype = "float32")#candidate|12436|(99,)|const|float32
const_12437 = relay.const([-9.022193,3.689889,6.698475,-5.258294,-1.602804,-1.769836,-1.751607,-6.609268,2.450236,6.518417,-2.244511,4.620472,8.162045,-9.116645,8.712125,2.124053,-3.100987,-4.058247,-8.369896,-8.305945,-3.948222,8.001638,-3.622013,9.626287,-0.963058,6.918924,4.148888,8.413714,-4.331800,9.904729,2.014133,-6.495128,0.533719,2.700029,2.704035,8.519758,-6.381127,-1.091972,-7.607258,8.599609,-1.861994,2.867930,9.607414,1.796695,1.977956,0.901643,0.148814,-3.477189,0.111953,-6.761481,7.592664,-4.528817,-3.985634,9.937364,-4.087276,4.780206,7.818679,-3.187851,2.698367,7.097272,-5.863678,9.979885,-2.144637,-6.034676,8.852891,-2.198580,-1.031528,9.330743,3.167660,-3.181177,8.954108,2.651814,-6.359511,9.644068,2.134318,-7.514603,2.959384,2.076689,6.764211,7.451341,-6.338626,-9.006112,-2.326278,1.956126,-4.453765,8.062620,5.717534,-3.106527,-0.635003,-1.804865,-3.354019,9.196313,-1.934019,3.888676,7.115740,3.201794,-5.023232,-5.790501,3.780909,7.401806,3.016055,7.656179,0.737815,8.068841,5.894982,5.122612,-4.581892,8.946622,4.701120,9.109715,-6.301398,-4.017503,-5.551438,9.865707,-9.263211,7.542041,-9.047875,-4.626033,-3.620160,3.271069,5.723129,-5.697544,-4.052412,6.175121,-6.114939,-7.383149,7.012914,-4.488899,4.871842,2.758925,-5.248705,-1.726614,2.795293,-4.451023,-3.099018,4.203163,-2.560487,3.198836,5.777203,-9.027028,1.333902,-1.601204,5.169107,-5.782739,7.737618,-8.181169,-3.447226,-4.258691,0.108277,-7.351348,-0.792388,-6.766941,1.233470,5.560832,-3.686053,-9.589957,-2.666413,-8.897645,9.335364,8.467686,-7.283176,-8.912754,-7.704538,-9.044059,8.033386,5.832881,-3.407252,-2.435412,7.571263,-6.522961,2.112026,-4.116017,-7.914456,4.816672,1.631359,-2.487205,-1.517555,0.709871,3.927653,6.251880,-4.210469,-1.874797,-6.989200,-2.234560,2.953014,0.590157,8.594161,-2.678603,-3.027257,-2.779068,-6.275317,1.148246,5.183548,8.283767,-8.624102,-4.097077,2.297223,4.433718,9.676994,-5.122838,-9.370991,-5.176882,0.480618,7.241157,-2.655612,2.557823,-1.744290,-7.496944,4.163550,-7.177256,-0.449286,-4.411872,-3.199334,2.354839,6.716957,-3.516107,2.902632,-1.771510,9.417558,-9.607890,3.156245,6.841243,-4.035293,6.782190,1.648555,1.399899,-9.644025,-1.110067,8.359610,4.695518,7.615510,-3.501540,-2.211494,3.995822,5.447890,6.137847,9.914179,-6.257838,-6.143379,-7.810810,-0.478575,6.783795,7.242209,7.497218,7.119997,-3.679922,-6.216393,2.792253,6.938231,-6.824020,-1.314803,3.090480,-7.862941,7.241258,8.523144,6.508079,5.180486,3.503816,-4.542557,9.831923,8.314211,-7.498795,7.378074,-3.636587,-0.999128,1.030146,-5.281720,-2.584754,-5.874384,-7.323148,3.980522,3.887978,-9.762375,-8.728146,1.791886,9.221165,9.761990,-5.494918,1.522110,3.477803,-7.478418,6.906987,6.952707,3.843116,3.374823,2.245013,4.500660,-7.445913,1.404434,-6.159047,-5.150239,4.714175,4.767076,-2.915495,-1.782877,-8.894906,-7.938576,-3.559565,-4.803383,-9.070498,7.935976,-4.420421,-4.004997,-0.919780,5.577587,0.202219,-9.850434,9.717740,-7.360245,6.627159,2.628412,0.955263,0.377339,3.772668,-8.346851,4.463880,-0.717991,-6.447600,-0.127107,-6.246666,-5.121696,-1.429535,3.940421,-4.643870,3.643779,-0.962214,-0.208517,9.708699,4.464030,1.025156,-6.197599,8.598572,-5.894182,2.819956,8.033861,5.217357,7.257715,-9.098177,2.368122,6.615865,-0.915464,-7.702749,2.968721,-4.591319,-2.000085,-4.454492,3.462724,5.309712,-1.261220,-2.158641,9.485690,2.661836,6.342506,1.074074,-1.840810,-9.015666,-6.642139,4.343116,-4.140583,6.166346,1.890517,0.367095,3.377278,2.369781,8.279741,5.976736,7.009561,-6.285564,1.171187,9.611608,-2.531194,-2.880043,-1.896605,-0.968978,-8.029530,-1.974339,-5.913607,-9.886878,-7.012454,4.906266,2.606232,-1.370698,6.588372,-3.121253,-9.793004,-5.567765,2.287767,-6.009905,8.857791,-8.491543,-7.948524,9.480492,-5.967097,-0.351784,9.602123,-0.990777,4.915461,1.429467,8.429753,5.679324,-9.273093,-0.308623,-7.368988,2.435348,-0.974634,8.507389,-5.830814,8.221103,-6.606820,-0.680279,2.422889,5.449928,3.807686,9.807290,-4.293579,9.838309,-8.461977,-2.016876,-3.190468,-7.918034,2.317909,5.138333,8.343505,-2.147905,-5.028015,5.317972,0.050165,-1.695247,-6.492123,-5.029992,-9.895216,0.118020,8.161394,-7.134327,9.340161,-8.614268,-2.567027,2.332164,-8.202813,-5.510384,-4.598127,-3.250972,-8.965062,-9.074204,-2.857188,0.860236,-3.019316,-0.639591,-6.307607,0.362649,6.441030,-4.280918,1.226624,4.823367,1.430642,6.390503,-4.281887,0.032194,-2.509185,8.615544,-7.333818,-9.312336,1.891141,0.977426,4.071995,0.723566,-5.448664,-2.687662,6.075341,-4.037983,7.017817,-2.748637,9.153213,-9.752531,-7.200982,3.542768,-4.512848,5.493064,-9.177654,8.315554,-7.954193,-3.028718,-9.029782,-0.576185,2.762081,-9.712362,-7.332966,-6.438831,3.820794,-4.810341,-6.558842,-8.539417,3.196009,-0.634565,-8.048888,3.459357,-3.681289,-0.383618,-0.720407,4.163178,3.705082,1.704037,-0.754565,1.454530,-8.231073,8.478911,1.426561], dtype = "float64")#candidate|12437|(507,)|const|float64
call_12434 = relay.TupleGetItem(func_12253_call(relay.reshape(const_12435.astype('float64'), [160, 1]), relay.reshape(const_12436.astype('float32'), [99,]), relay.reshape(const_12437.astype('float64'), [507,]), ), 1)
call_12438 = relay.TupleGetItem(func_12258_call(relay.reshape(const_12435.astype('float64'), [160, 1]), relay.reshape(const_12436.astype('float32'), [99,]), relay.reshape(const_12437.astype('float64'), [507,]), ), 1)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_12453 = func_10641_call()
call_12454 = func_10641_call()
bop_12463 = relay.logical_or(const_12437.astype('bool'), call_12431.astype('bool')) # shape=(8, 8, 507)
bop_12466 = relay.logical_or(const_12437.astype('bool'), call_12432.astype('bool')) # shape=(8, 8, 507)
bop_12474 = relay.maximum(const_12437.astype('uint8'), call_12453.astype('uint8')) # shape=(8, 8, 507)
bop_12477 = relay.maximum(const_12437.astype('uint8'), call_12454.astype('uint8')) # shape=(8, 8, 507)
uop_12479 = relay.atan(call_12434.astype('float64')) # shape=(99,)
uop_12481 = relay.atan(call_12438.astype('float64')) # shape=(99,)
output = relay.Tuple([const_12435,const_12436,bop_12463,bop_12474,uop_12479,])
output2 = relay.Tuple([const_12435,const_12436,bop_12466,bop_12477,uop_12481,])
func_12494 = relay.Function([], output)
mod['func_12494'] = func_12494
mod = relay.transform.InferType()(mod)
mutated_mod['func_12494'] = func_12494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12494_call = mutated_mod.get_global_var('func_12494')
call_12495 = func_12494_call()
output = call_12495
func_12496 = relay.Function([], output)
mutated_mod['func_12496'] = func_12496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12494_call = mod.get_global_var('func_12494')
func_12496_call = mutated_mod.get_global_var('func_12496')
call_12548 = relay.TupleGetItem(func_12494_call(), 1)
call_12549 = relay.TupleGetItem(func_12496_call(), 1)
output = call_12548
output2 = call_12549
func_12550 = relay.Function([], output)
mod['func_12550'] = func_12550
mod = relay.transform.InferType()(mod)
output = func_12550()
func_12551 = relay.Function([], output)
mutated_mod['func_12551'] = func_12551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11149_call = mod.get_global_var('func_11149')
func_11151_call = mutated_mod.get_global_var('func_11151')
call_12565 = relay.TupleGetItem(func_11149_call(), 0)
call_12566 = relay.TupleGetItem(func_11151_call(), 0)
var_12569 = relay.var("var_12569", dtype = "float32", shape = (8, 8, 7))#candidate|12569|(8, 8, 7)|var|float32
bop_12570 = relay.logical_and(call_12565.astype('bool'), var_12569.astype('bool')) # shape=(8, 8, 7)
bop_12573 = relay.logical_and(call_12566.astype('bool'), var_12569.astype('bool')) # shape=(8, 8, 7)
func_9935_call = mod.get_global_var('func_9935')
func_9936_call = mutated_mod.get_global_var('func_9936')
call_12574 = relay.TupleGetItem(func_9935_call(), 0)
call_12575 = relay.TupleGetItem(func_9936_call(), 0)
func_12150_call = mod.get_global_var('func_12150')
func_12152_call = mutated_mod.get_global_var('func_12152')
call_12577 = relay.TupleGetItem(func_12150_call(), 0)
call_12578 = relay.TupleGetItem(func_12152_call(), 0)
func_5643_call = mod.get_global_var('func_5643')
func_5647_call = mutated_mod.get_global_var('func_5647')
var_12588 = relay.var("var_12588", dtype = "int8", shape = (25, 10))#candidate|12588|(25, 10)|var|int8
const_12589 = relay.const([4.277357,2.215317,9.136075,-7.572064,6.980636,-7.610481], dtype = "float32")#candidate|12589|(6,)|const|float32
call_12587 = relay.TupleGetItem(func_5643_call(relay.reshape(var_12588.astype('int8'), [5, 5, 10]), relay.reshape(const_12589.astype('float32'), [6,]), ), 1)
call_12590 = relay.TupleGetItem(func_5647_call(relay.reshape(var_12588.astype('int8'), [5, 5, 10]), relay.reshape(const_12589.astype('float32'), [6,]), ), 1)
func_11188_call = mod.get_global_var('func_11188')
func_11189_call = mutated_mod.get_global_var('func_11189')
call_12591 = relay.TupleGetItem(func_11188_call(), 0)
call_12592 = relay.TupleGetItem(func_11189_call(), 0)
output = relay.Tuple([bop_12570,call_12574,call_12577,call_12587,var_12588,const_12589,call_12591,])
output2 = relay.Tuple([bop_12573,call_12575,call_12578,call_12590,var_12588,const_12589,call_12592,])
func_12600 = relay.Function([var_12569,var_12588,], output)
mod['func_12600'] = func_12600
mod = relay.transform.InferType()(mod)
mutated_mod['func_12600'] = func_12600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12600_call = mutated_mod.get_global_var('func_12600')
var_12602 = relay.var("var_12602", dtype = "float32", shape = (8, 8, 7))#candidate|12602|(8, 8, 7)|var|float32
var_12603 = relay.var("var_12603", dtype = "int8", shape = (25, 10))#candidate|12603|(25, 10)|var|int8
call_12601 = func_12600_call(var_12602,var_12603,)
output = call_12601
func_12604 = relay.Function([var_12602,var_12603,], output)
mutated_mod['func_12604'] = func_12604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10586_call = mod.get_global_var('func_10586')
func_10588_call = mutated_mod.get_global_var('func_10588')
call_12606 = relay.TupleGetItem(func_10586_call(), 1)
call_12607 = relay.TupleGetItem(func_10588_call(), 1)
output = relay.Tuple([call_12606,])
output2 = relay.Tuple([call_12607,])
func_12608 = relay.Function([], output)
mod['func_12608'] = func_12608
mod = relay.transform.InferType()(mod)
output = func_12608()
func_12609 = relay.Function([], output)
mutated_mod['func_12609'] = func_12609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11061_call = mod.get_global_var('func_11061')
func_11063_call = mutated_mod.get_global_var('func_11063')
call_12615 = relay.TupleGetItem(func_11061_call(), 0)
call_12616 = relay.TupleGetItem(func_11063_call(), 0)
output = relay.Tuple([call_12615,])
output2 = relay.Tuple([call_12616,])
func_12631 = relay.Function([], output)
mod['func_12631'] = func_12631
mod = relay.transform.InferType()(mod)
mutated_mod['func_12631'] = func_12631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12631_call = mutated_mod.get_global_var('func_12631')
call_12632 = func_12631_call()
output = call_12632
func_12633 = relay.Function([], output)
mutated_mod['func_12633'] = func_12633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12631_call = mod.get_global_var('func_12631')
func_12633_call = mutated_mod.get_global_var('func_12633')
call_12644 = relay.TupleGetItem(func_12631_call(), 0)
call_12645 = relay.TupleGetItem(func_12633_call(), 0)
func_11040_call = mod.get_global_var('func_11040')
func_11044_call = mutated_mod.get_global_var('func_11044')
const_12648 = relay.const([[-4,-6,-3,9,7,4,10,8,-1,2,-4,-2,10,-4,5,5,-4,-10,-3,8,-7,-1,6,-4,2,5,-4,10,-8,3],[8,-1,-1,1,9,6,-2,2,6,-4,-1,-6,-6,1,1,-5,3,1,-8,10,4,5,2,-1,-5,-9,-4,3,1,1],[-7,-1,6,-6,8,2,-1,7,6,4,-5,-8,-9,-6,-5,2,-7,4,-9,-6,6,9,6,-3,-6,-2,1,9,-10,-8],[-3,-7,-5,4,1,9,9,-5,7,-7,-6,-5,8,-6,-8,3,7,4,1,6,-9,9,4,-2,3,-4,-8,-3,3,-7],[6,-4,10,-4,7,4,4,3,7,-1,-7,-7,-3,3,2,9,-10,2,3,2,6,8,-9,-8,-8,-7,5,10,-8,6],[-3,-9,-9,4,5,-4,3,-10,2,-9,8,-5,-1,1,-8,-9,-1,5,-9,4,6,-8,-9,-1,8,-1,-5,-9,9,-8],[-8,-9,7,-1,-2,4,-2,-7,1,-1,-8,-5,-9,1,-8,-7,8,-7,10,3,4,10,-2,-8,4,1,-4,-5,5,-2],[-7,-9,-7,-9,-8,-10,2,8,-8,-4,-8,4,-3,4,5,9,7,6,-8,-10,7,-7,-2,10,3,-10,-1,2,3,10],[-4,-1,-10,-2,10,-5,3,-6,8,3,-10,-2,-7,-2,10,10,2,-4,8,1,9,-7,-7,-7,6,8,-5,8,-5,-4],[-4,-1,-6,9,1,4,-7,2,3,-10,-1,7,-9,10,5,2,-8,6,-6,-10,8,-6,-6,-8,2,-7,6,-9,-9,10],[-2,-5,-5,-6,7,-9,1,-9,-8,3,-3,-10,-4,-4,7,9,8,10,7,6,4,-1,3,-2,-5,8,5,6,9,6],[-6,7,-1,7,5,-1,9,3,-10,-10,10,-2,7,8,-2,4,-9,3,-10,-5,-6,-3,6,6,1,-2,5,7,4,10],[8,-5,4,9,2,8,-10,-2,7,4,-7,8,-2,4,10,3,9,-7,8,7,-9,8,8,-8,10,-4,10,-9,-8,-10],[8,-6,-1,-9,8,1,-5,-9,-8,9,-2,-7,6,5,-2,2,-8,6,-1,2,-5,1,1,2,-8,9,5,-2,-5,-4],[-4,4,7,3,9,9,8,1,-9,-9,5,5,-6,-2,4,6,4,-1,-4,-9,10,4,-10,-5,1,6,-2,5,-9,-10],[2,-2,8,7,6,4,4,3,-6,-2,4,10,-10,5,3,-2,-1,-3,-8,2,6,1,5,-3,4,-5,-3,4,1,3],[-5,1,9,-7,-4,-10,-7,10,5,-5,9,5,7,7,9,6,-5,9,10,-9,-7,7,-10,-9,2,-3,-6,-5,10,-2],[2,-10,-4,-8,-9,3,8,1,8,-6,-6,1,9,-4,10,5,-4,8,8,-4,-5,-2,-6,-4,4,3,8,1,-4,6]], dtype = "int32")#candidate|12648|(18, 30)|const|int32
call_12647 = relay.TupleGetItem(func_11040_call(relay.reshape(const_12648.astype('int32'), [3, 180]), relay.reshape(const_12648.astype('int32'), [3, 180]), ), 2)
call_12649 = relay.TupleGetItem(func_11044_call(relay.reshape(const_12648.astype('int32'), [3, 180]), relay.reshape(const_12648.astype('int32'), [3, 180]), ), 2)
output = relay.Tuple([call_12644,call_12647,const_12648,])
output2 = relay.Tuple([call_12645,call_12649,const_12648,])
func_12658 = relay.Function([], output)
mod['func_12658'] = func_12658
mod = relay.transform.InferType()(mod)
output = func_12658()
func_12659 = relay.Function([], output)
mutated_mod['func_12659'] = func_12659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11611_call = mod.get_global_var('func_11611')
func_11613_call = mutated_mod.get_global_var('func_11613')
call_12669 = func_11611_call()
call_12670 = func_11611_call()
output = call_12669
output2 = call_12670
func_12675 = relay.Function([], output)
mod['func_12675'] = func_12675
mod = relay.transform.InferType()(mod)
mutated_mod['func_12675'] = func_12675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12675_call = mutated_mod.get_global_var('func_12675')
call_12676 = func_12675_call()
output = call_12676
func_12677 = relay.Function([], output)
mutated_mod['func_12677'] = func_12677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11599_call = mod.get_global_var('func_11599')
func_11600_call = mutated_mod.get_global_var('func_11600')
call_12758 = func_11599_call()
call_12759 = func_11599_call()
func_5342_call = mod.get_global_var('func_5342')
func_5347_call = mutated_mod.get_global_var('func_5347')
const_12762 = relay.const([5.638847,8.320238,0.447498,6.419093,1.120530,-9.072763,-6.115550,-5.272881,6.681441,-8.127536,-2.051164,-4.744470,-7.676353,9.260970,3.393348,-6.739485,1.859827,-7.003493,8.737394,5.489814,3.024514,0.975535,-1.175663,1.393214,-5.535893,6.272346,2.213981,4.686031,3.312011,-7.119664,6.379856,0.370880,-2.052073,0.303249,9.249506,-5.481066,-2.802144,-9.067417,6.148581,-2.630699,2.945828,3.256340,6.467645,7.901022,3.654008,0.668348,-2.412592,8.552815,2.398187,0.736574,0.125429,3.614098,0.194663,5.292603,5.146790,-7.741641,0.807933,-7.940182,-3.702282,7.530590,6.344792,-3.555871,-5.152100,-0.258463,-1.060348,-1.816815,3.418053,8.084276,-2.109771,-9.327051,-9.892248,-7.507692,-9.655569,-8.457255,-8.657088,-4.460663,9.208797,-6.632412,-0.211913,6.193560,-0.156787,1.408867,0.625981,-2.081195,8.045045,7.091380,-8.600481,8.817038,-9.441253,7.162031,-2.083112,-5.539130,0.221221,1.906279,3.070889,-5.971311,-2.371954,-2.098556,3.095331,3.118975,0.327554,-6.783586,3.252839,-5.599846,-3.864736,-9.286896,8.005064,-5.546751,1.419333,-1.364831,-6.706196,-0.449441,-9.198924,-1.039750,-4.906516,-9.504744,-3.335447,6.033664,2.450170,-4.556179,1.509496,-9.902515,0.401550,2.898391,-1.642987,-7.903803,9.862352,9.959400,0.113238,8.669776,-4.014693,1.509173,-3.484530,-5.816709,-3.453245,2.440123,2.859614,-3.461675,-4.119063,-1.990685,8.972106,5.815261,3.529303,4.186098,-7.725471,-3.410196,-4.260772,-0.624355,-6.293365,-4.286511,9.796270,4.030580,0.659113,7.814608,6.140097,-7.860074,-3.308085,7.819087,4.440884,-7.195666,0.568293,-8.921764,-0.773670,7.930061,5.287761,3.781799,8.020090,1.053530,-9.129000,6.236933,-6.649270,3.587969,4.334758,9.973284,1.615835,6.684514,-1.885211,-2.158885,-2.490549,-1.301343,-1.127840,-3.486290,-8.267408,-0.146074,-4.679379,-9.368909,-7.866937,-8.699221,8.573798,-6.614680,9.205228,7.515081,5.016266,0.238022,0.509321,8.202328,4.818379,-9.855357,1.298237,5.516872,-1.008536,2.205873,2.331839,-3.397786,5.205261,2.093732,-4.442441,-7.959984,-7.053170,5.990819,1.484359,6.252224,-0.535389,-2.548305,5.977380,-9.012116,-7.245682,-9.082140,9.717804,-0.043652,8.318665,0.782826,-4.731987,5.709982,2.321449,0.636096,2.160921,-4.770550,-8.402050,8.775714,-7.357191,0.187976,1.089021,-5.987111,-4.366825,1.404855,-4.803366,-2.185711,2.723225,8.117620,-6.765954,5.421885,-0.771789,-6.318468,1.349168,-1.742855,8.538465,-3.941923,8.750099,2.033265,4.969058,9.472531,6.908511,-5.615051,8.462880,-4.641566,-8.027301,1.040312,6.614798,5.685118,3.880116,-4.725945,1.468858,-1.620536,8.431143,3.432892,-2.020889,-9.136313,-2.115771,-0.256288,-1.053973,5.908556,6.269414,8.605529,-2.957921,1.353069,-5.155851,-7.931584,-4.127609,-5.616828,-8.056996,-0.880337,-3.944788,5.395790,3.254355,-1.122775,-0.117196,3.499550,-1.263484,-8.353852,1.063586,2.444772,3.223066,-5.965637,-6.086084,9.932311,-1.693981,9.536757,-8.647636,1.470141,9.118085,8.154605,0.041319,1.522999,-4.544042,7.822183,3.745390,3.726076,-8.982526,-3.628113,4.539942,-3.241917,9.612949,-8.126006,-6.090680,2.576498,-3.727229,2.866758,0.710349,9.960938,-4.952653,-4.510489,1.685459,-5.983133,4.998950,-8.921243,-1.828619,-7.934116,9.787959,6.987618,-7.782230,8.081763,3.097039,-3.155165,3.306897,-5.089220,-0.115743,9.358248,1.481042,-6.464088,-4.424820,0.210409,7.584093,-3.597786,-0.404492,-0.314159,-7.375874,7.163781,-1.926754,8.922265,-4.012221,1.040682,-6.164002,-9.620083,-8.870806,-7.475046,-2.326835,4.406554,0.986157,-1.294750,0.326604,-5.319602,-2.849402,6.168209,0.049729,-3.023895,1.747739,2.524116,-6.032565,6.640266,-0.220914,1.575195,0.839375,-6.370882,-5.310582,-9.277187,7.298951,6.892485,7.321965,-7.463010,7.141653,-6.157692,-4.768157,-4.098136,5.172150,1.402372,7.676822,-7.754752,0.614060,6.286171,4.764897,4.645829,-0.931639,-2.131892,4.937151,6.521515,3.563819,5.646673,3.207663,-3.414643,2.098430,-8.516161,-2.464765,3.527528,8.975667,8.639337,2.369447,5.734139,-2.429236,5.598541,-8.564392,-3.981409,-5.876856,3.792551,-8.848790,-5.708101,4.490280,-3.991621,-8.420716,9.871942,1.759712,-7.423756,2.240146,-2.288415,-4.651285,7.971710,-5.677837,-8.261999,-9.380648,-8.013028,-7.302461,-3.129095,7.648542,0.826010,8.792008,1.815567,-6.626685,5.140607,9.299133,9.857183,3.574856,-6.871700,-6.279593,-7.409624,-7.967086,4.273826,2.884329,-9.741318,6.121896,-2.794551,-1.551794,3.867894,-1.925020,-6.000476,-5.954166,4.592658,7.230543,-6.273510,-8.190696,-1.625436,2.795587,1.254380,3.875290,-0.651552,-5.747145,0.350117,-8.995589,1.149069,9.185776,5.175145,4.285191,7.360836,-9.298238,-3.904680,-6.938835,-3.270470,3.230118,6.852113,2.604952,9.554868,-4.199046,2.057598,1.951594,9.674854,-4.087442,-4.962432,4.124992,-1.666512,8.892328,2.578918,8.233901,-7.203544,7.360500,-4.091215,0.957668,-6.326692,-0.464068,-9.267950,-8.485298,1.123727,-8.175357,-2.870931,2.839046,-7.444994,-1.924807,0.654937,9.706243], dtype = "float64")#candidate|12762|(507,)|const|float64
var_12763 = relay.var("var_12763", dtype = "int64", shape = ())#candidate|12763|()|var|int64
call_12761 = relay.TupleGetItem(func_5342_call(relay.reshape(const_12762.astype('float64'), [507,]), relay.reshape(var_12763.astype('int64'), []), relay.reshape(const_12762.astype('float64'), [13, 3, 13]), ), 3)
call_12764 = relay.TupleGetItem(func_5347_call(relay.reshape(const_12762.astype('float64'), [507,]), relay.reshape(var_12763.astype('int64'), []), relay.reshape(const_12762.astype('float64'), [13, 3, 13]), ), 3)
func_12326_call = mod.get_global_var('func_12326')
func_12327_call = mutated_mod.get_global_var('func_12327')
call_12767 = relay.TupleGetItem(func_12326_call(), 0)
call_12768 = relay.TupleGetItem(func_12327_call(), 0)
bop_12770 = relay.power(call_12761.astype('float32'), const_12762.astype('float32')) # shape=(120, 507)
bop_12773 = relay.power(call_12764.astype('float32'), const_12762.astype('float32')) # shape=(120, 507)
output = relay.Tuple([call_12758,var_12763,call_12767,bop_12770,])
output2 = relay.Tuple([call_12759,var_12763,call_12768,bop_12773,])
func_12774 = relay.Function([var_12763,], output)
mod['func_12774'] = func_12774
mod = relay.transform.InferType()(mod)
var_12775 = relay.var("var_12775", dtype = "int64", shape = ())#candidate|12775|()|var|int64
output = func_12774(var_12775)
func_12776 = relay.Function([var_12775], output)
mutated_mod['func_12776'] = func_12776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11066_call = mod.get_global_var('func_11066')
func_11068_call = mutated_mod.get_global_var('func_11068')
call_12824 = relay.TupleGetItem(func_11066_call(), 0)
call_12825 = relay.TupleGetItem(func_11068_call(), 0)
output = relay.Tuple([call_12824,])
output2 = relay.Tuple([call_12825,])
func_12826 = relay.Function([], output)
mod['func_12826'] = func_12826
mod = relay.transform.InferType()(mod)
mutated_mod['func_12826'] = func_12826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12826_call = mutated_mod.get_global_var('func_12826')
call_12827 = func_12826_call()
output = call_12827
func_12828 = relay.Function([], output)
mutated_mod['func_12828'] = func_12828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12675_call = mod.get_global_var('func_12675')
func_12677_call = mutated_mod.get_global_var('func_12677')
call_12829 = func_12675_call()
call_12830 = func_12675_call()
var_12838 = relay.var("var_12838", dtype = "float64", shape = (8, 8, 14))#candidate|12838|(8, 8, 14)|var|float64
bop_12839 = relay.right_shift(call_12829.astype('int32'), var_12838.astype('int32')) # shape=(8, 8, 14)
bop_12842 = relay.right_shift(call_12830.astype('int32'), var_12838.astype('int32')) # shape=(8, 8, 14)
output = bop_12839
output2 = bop_12842
func_12843 = relay.Function([var_12838,], output)
mod['func_12843'] = func_12843
mod = relay.transform.InferType()(mod)
var_12844 = relay.var("var_12844", dtype = "float64", shape = (8, 8, 14))#candidate|12844|(8, 8, 14)|var|float64
output = func_12843(var_12844)
func_12845 = relay.Function([var_12844], output)
mutated_mod['func_12845'] = func_12845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11188_call = mod.get_global_var('func_11188')
func_11189_call = mutated_mod.get_global_var('func_11189')
call_12852 = relay.TupleGetItem(func_11188_call(), 0)
call_12853 = relay.TupleGetItem(func_11189_call(), 0)
output = relay.Tuple([call_12852,])
output2 = relay.Tuple([call_12853,])
func_12881 = relay.Function([], output)
mod['func_12881'] = func_12881
mod = relay.transform.InferType()(mod)
output = func_12881()
func_12882 = relay.Function([], output)
mutated_mod['func_12882'] = func_12882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11246_call = mod.get_global_var('func_11246')
func_11248_call = mutated_mod.get_global_var('func_11248')
call_12906 = relay.TupleGetItem(func_11246_call(), 0)
call_12907 = relay.TupleGetItem(func_11248_call(), 0)
func_12658_call = mod.get_global_var('func_12658')
func_12659_call = mutated_mod.get_global_var('func_12659')
call_12908 = relay.TupleGetItem(func_12658_call(), 1)
call_12909 = relay.TupleGetItem(func_12659_call(), 1)
var_12916 = relay.var("var_12916", dtype = "uint64", shape = (3, 180))#candidate|12916|(3, 180)|var|uint64
bop_12917 = relay.mod(call_12908.astype('float32'), relay.reshape(var_12916.astype('float32'), relay.shape_of(call_12908))) # shape=(3, 180)
bop_12920 = relay.mod(call_12909.astype('float32'), relay.reshape(var_12916.astype('float32'), relay.shape_of(call_12909))) # shape=(3, 180)
output = relay.Tuple([call_12906,bop_12917,])
output2 = relay.Tuple([call_12907,bop_12920,])
func_12932 = relay.Function([var_12916,], output)
mod['func_12932'] = func_12932
mod = relay.transform.InferType()(mod)
mutated_mod['func_12932'] = func_12932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12933 = relay.var("var_12933", dtype = "uint64", shape = (3, 180))#candidate|12933|(3, 180)|var|uint64
func_12932_call = mutated_mod.get_global_var('func_12932')
call_12934 = func_12932_call(var_12933)
output = call_12934
func_12935 = relay.Function([var_12933], output)
mutated_mod['func_12935'] = func_12935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11335_call = mod.get_global_var('func_11335')
func_11336_call = mutated_mod.get_global_var('func_11336')
call_12937 = relay.TupleGetItem(func_11335_call(), 0)
call_12938 = relay.TupleGetItem(func_11336_call(), 0)
func_11246_call = mod.get_global_var('func_11246')
func_11248_call = mutated_mod.get_global_var('func_11248')
call_12939 = relay.TupleGetItem(func_11246_call(), 0)
call_12940 = relay.TupleGetItem(func_11248_call(), 0)
output = relay.Tuple([call_12937,call_12939,])
output2 = relay.Tuple([call_12938,call_12940,])
func_12947 = relay.Function([], output)
mod['func_12947'] = func_12947
mod = relay.transform.InferType()(mod)
output = func_12947()
func_12948 = relay.Function([], output)
mutated_mod['func_12948'] = func_12948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_13016 = func_9857_call()
call_13017 = func_9857_call()
output = call_13016
output2 = call_13017
func_13025 = relay.Function([], output)
mod['func_13025'] = func_13025
mod = relay.transform.InferType()(mod)
mutated_mod['func_13025'] = func_13025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13025_call = mutated_mod.get_global_var('func_13025')
call_13026 = func_13025_call()
output = call_13026
func_13027 = relay.Function([], output)
mutated_mod['func_13027'] = func_13027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13062 = relay.var("var_13062", dtype = "int16", shape = (15, 7, 5))#candidate|13062|(15, 7, 5)|var|int16
var_13063 = relay.var("var_13063", dtype = "int16", shape = (15, 7, 5))#candidate|13063|(15, 7, 5)|var|int16
bop_13064 = relay.add(var_13062.astype('int16'), relay.reshape(var_13063.astype('int16'), relay.shape_of(var_13062))) # shape=(15, 7, 5)
uop_13072 = relay.erf(bop_13064.astype('float32')) # shape=(15, 7, 5)
func_11741_call = mod.get_global_var('func_11741')
func_11742_call = mutated_mod.get_global_var('func_11742')
call_13085 = relay.TupleGetItem(func_11741_call(), 0)
call_13086 = relay.TupleGetItem(func_11742_call(), 0)
uop_13090 = relay.log10(uop_13072.astype('float64')) # shape=(15, 7, 5)
output = relay.Tuple([call_13085,uop_13090,])
output2 = relay.Tuple([call_13086,uop_13090,])
func_13099 = relay.Function([var_13062,var_13063,], output)
mod['func_13099'] = func_13099
mod = relay.transform.InferType()(mod)
mutated_mod['func_13099'] = func_13099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13099_call = mutated_mod.get_global_var('func_13099')
var_13101 = relay.var("var_13101", dtype = "int16", shape = (15, 7, 5))#candidate|13101|(15, 7, 5)|var|int16
var_13102 = relay.var("var_13102", dtype = "int16", shape = (15, 7, 5))#candidate|13102|(15, 7, 5)|var|int16
call_13100 = func_13099_call(var_13101,var_13102,)
output = call_13100
func_13103 = relay.Function([var_13101,var_13102,], output)
mutated_mod['func_13103'] = func_13103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10432_call = mod.get_global_var('func_10432')
func_10434_call = mutated_mod.get_global_var('func_10434')
call_13107 = relay.TupleGetItem(func_10432_call(), 0)
call_13108 = relay.TupleGetItem(func_10434_call(), 0)
func_12658_call = mod.get_global_var('func_12658')
func_12659_call = mutated_mod.get_global_var('func_12659')
call_13114 = relay.TupleGetItem(func_12658_call(), 2)
call_13115 = relay.TupleGetItem(func_12659_call(), 2)
output = relay.Tuple([call_13107,call_13114,])
output2 = relay.Tuple([call_13108,call_13115,])
func_13116 = relay.Function([], output)
mod['func_13116'] = func_13116
mod = relay.transform.InferType()(mod)
output = func_13116()
func_13117 = relay.Function([], output)
mutated_mod['func_13117'] = func_13117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_13118 = func_10641_call()
call_13119 = func_10641_call()
output = call_13118
output2 = call_13119
func_13130 = relay.Function([], output)
mod['func_13130'] = func_13130
mod = relay.transform.InferType()(mod)
output = func_13130()
func_13131 = relay.Function([], output)
mutated_mod['func_13131'] = func_13131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12631_call = mod.get_global_var('func_12631')
func_12633_call = mutated_mod.get_global_var('func_12633')
call_13174 = relay.TupleGetItem(func_12631_call(), 0)
call_13175 = relay.TupleGetItem(func_12633_call(), 0)
var_13178 = relay.var("var_13178", dtype = "float64", shape = (8, 8, 1))#candidate|13178|(8, 8, 1)|var|float64
bop_13179 = relay.bitwise_and(call_13174.astype('int8'), relay.reshape(var_13178.astype('int8'), relay.shape_of(call_13174))) # shape=(8, 8, 1)
bop_13182 = relay.bitwise_and(call_13175.astype('int8'), relay.reshape(var_13178.astype('int8'), relay.shape_of(call_13175))) # shape=(8, 8, 1)
bop_13185 = relay.less(var_13178.astype('bool'), relay.reshape(call_13174.astype('bool'), relay.shape_of(var_13178))) # shape=(8, 8, 1)
bop_13188 = relay.less(var_13178.astype('bool'), relay.reshape(call_13175.astype('bool'), relay.shape_of(var_13178))) # shape=(8, 8, 1)
output = relay.Tuple([bop_13179,bop_13185,])
output2 = relay.Tuple([bop_13182,bop_13188,])
func_13199 = relay.Function([var_13178,], output)
mod['func_13199'] = func_13199
mod = relay.transform.InferType()(mod)
var_13200 = relay.var("var_13200", dtype = "float64", shape = (8, 8, 1))#candidate|13200|(8, 8, 1)|var|float64
output = func_13199(var_13200)
func_13201 = relay.Function([var_13200], output)
mutated_mod['func_13201'] = func_13201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11061_call = mod.get_global_var('func_11061')
func_11063_call = mutated_mod.get_global_var('func_11063')
call_13267 = relay.TupleGetItem(func_11061_call(), 0)
call_13268 = relay.TupleGetItem(func_11063_call(), 0)
const_13274 = relay.const([[[-4.220594,4.788700,3.544153,-4.280360,-7.044877,6.209231,-1.161703,8.628257],[-5.218936,3.364268,1.210549,6.884519,6.913177,-5.078981,8.214556,1.127874],[7.010316,8.178158,-0.460893,2.767708,1.930718,-5.530387,-8.685179,3.776630],[8.130546,-0.739360,-2.256662,1.854612,7.175786,1.672099,9.058812,-8.968771],[3.819496,0.560593,-7.504100,6.925171,2.093674,9.840232,5.956850,-8.635313],[5.342279,4.715525,6.888717,8.421262,-6.586014,3.275953,-9.355710,-5.958799],[3.916485,3.260743,2.938146,8.013592,-7.325309,-5.083696,3.160716,8.975932],[-0.704787,-0.878017,2.964226,-3.120861,-0.970175,2.823046,-4.803601,8.834012]],[[1.800877,5.851988,6.708204,6.881375,1.610063,0.397566,4.997670,-2.043985],[-3.495338,5.528067,-6.175704,7.186268,7.837691,7.960574,7.905152,-5.549453],[-0.497535,2.444005,-8.351912,1.340483,-7.050002,0.244684,0.949094,9.264466],[-0.467389,7.418458,9.484571,-1.573195,6.463049,-4.634728,-2.001372,2.224079],[-9.913968,-9.827830,-9.094071,-1.509351,-5.611198,-4.705867,8.413093,8.064833],[-7.165834,5.435513,-4.989373,-5.338703,1.288280,-2.108111,9.652533,-8.323089],[-4.552120,0.445374,4.382669,1.476863,3.583296,8.076005,-1.753649,-6.712663],[-4.502382,-1.421995,9.666707,-8.295787,0.556585,-9.217508,6.566656,-1.116863]],[[2.233828,-8.491718,4.922414,3.599202,9.228449,-7.270287,2.079071,-1.110207],[-6.178911,-5.180698,6.208766,-6.273796,6.053141,-5.283980,-3.971412,-3.858211],[-9.647290,-1.023117,9.967394,-4.320847,-0.673806,-1.452504,2.870557,8.445001],[6.190916,-4.361413,6.452166,7.341635,5.267964,4.456945,-4.369274,-9.676778],[-2.428854,-0.519355,-2.986377,-5.183335,0.071681,-4.174124,9.802915,-2.359616],[-6.055941,2.910160,-3.164823,-2.107327,-7.767655,8.181340,-4.619892,3.274747],[-6.717018,-6.482917,-6.224930,6.912598,0.378620,8.478922,-4.384091,2.332911],[-7.071169,-2.089148,2.635385,-7.169589,-6.901619,-5.344349,2.474864,9.707118]],[[9.121688,-2.723812,-9.824194,-0.214454,-0.650964,-4.339180,9.516249,3.347654],[-3.600816,-8.795265,-4.521187,-3.130866,-5.690507,4.051395,-7.492152,6.511376],[-0.711320,-6.935409,-2.534650,-3.536334,-8.127673,9.622755,-5.900634,7.652976],[-2.552516,-1.919953,-4.010817,3.733978,4.529205,2.366203,9.153133,-1.945655],[-1.754679,-3.206195,3.768249,2.015773,0.709166,4.277281,9.464471,-9.386658],[1.214139,6.647840,6.289315,-6.320430,1.754486,1.967310,6.972331,9.847240],[-3.008944,-3.270671,-8.125566,1.415256,-1.909231,-7.222675,5.274604,2.339086],[7.536971,-5.243215,7.477652,-6.821179,-8.622402,8.204321,5.987600,-5.168403]],[[-4.695839,2.822060,-9.434584,-8.764484,9.126238,4.142822,5.034910,3.225214],[4.178312,-1.979146,4.854421,3.879498,-3.895936,1.102329,1.353624,1.924016],[-1.697695,5.982180,2.395601,3.431449,-0.128474,0.392160,4.087948,-5.598684],[-5.050385,9.528483,6.994585,-1.008471,2.577973,1.543750,3.547393,-5.825718],[5.386154,-4.284183,6.634897,-4.578964,-9.518667,4.818949,-6.941229,-8.984042],[-5.633820,-4.392743,0.986095,5.063763,-5.288637,9.943858,5.835118,4.796704],[7.092515,4.531899,2.789801,-8.525871,8.082714,8.977203,-5.524982,4.476378],[1.590729,-8.639125,-5.385783,3.119385,7.324939,-6.006647,-6.603383,8.004511]],[[8.827236,-1.560068,-2.594728,9.002566,5.681405,-2.768423,-5.521396,-4.207522],[4.969998,-8.446439,5.173011,8.152747,1.313075,1.962261,8.860786,0.442592],[-8.917065,-8.942474,2.876538,-4.194905,-7.558076,-7.366546,-7.805634,1.928815],[6.996530,5.967104,8.271797,9.189412,-8.327188,9.105250,-9.892630,5.663487],[-6.397778,3.364801,5.045571,-9.954849,-5.852541,-8.375917,-3.594641,8.745557],[-6.122262,-3.774150,7.622167,-4.419845,-5.888695,6.322323,-9.224459,7.170946],[-9.363841,-6.008638,3.982855,-8.245696,6.838726,-4.968328,-6.252278,-9.084103],[5.429044,-6.978642,-2.370279,-3.301421,-7.654813,0.232838,-5.081920,-9.602818]],[[-2.466814,-2.848926,6.435499,7.887966,-0.890323,-5.484209,0.078526,6.134156],[3.579473,2.551903,-0.572672,5.157030,-7.126377,2.337142,0.064301,0.073705],[4.173943,5.414620,-1.017853,8.568825,1.059990,6.804121,-2.465451,0.985607],[3.079973,-2.592561,-3.865474,-3.908434,-0.797996,-7.490936,4.120580,6.742355],[1.235955,-6.541826,-3.538387,-6.919654,1.729497,-2.512180,-8.327239,-7.716891],[1.843495,6.941373,-9.895949,-4.571233,-7.604064,-2.784966,-7.105332,-9.505647],[4.541303,-1.708040,-4.487464,4.688267,-9.789092,-6.956885,8.519747,-2.189077],[8.310590,-5.370491,-8.442401,-6.404224,9.661924,-2.195253,7.886510,-3.898752]],[[2.540083,-2.384898,6.473804,-2.128880,9.001620,0.099649,6.922041,3.174850],[7.186264,-6.552452,-3.433338,-6.431385,5.611978,-6.975100,1.550992,0.397798],[9.923996,7.599617,0.689738,-1.666365,-5.403818,7.772573,-4.503397,-5.013037],[7.632662,8.975220,3.421414,1.025803,-5.191916,3.825194,-4.743765,9.058605],[-5.702345,0.545454,-2.300706,0.104693,9.780868,-1.021916,8.957577,8.285398],[9.417954,1.377134,4.048551,1.903630,-8.205138,6.377947,-6.605894,-7.538690],[6.099701,-9.174913,9.763238,-6.727689,3.401931,-2.823841,3.820209,4.048350],[-4.578921,-8.805642,5.836096,-0.396263,-7.106935,8.887746,-9.607998,-3.641865]]], dtype = "float64")#candidate|13274|(8, 8, 8)|const|float64
bop_13275 = relay.minimum(call_13267.astype('int16'), const_13274.astype('int16')) # shape=(8, 8, 8)
bop_13278 = relay.minimum(call_13268.astype('int16'), const_13274.astype('int16')) # shape=(8, 8, 8)
output = relay.Tuple([bop_13275,])
output2 = relay.Tuple([bop_13278,])
func_13280 = relay.Function([], output)
mod['func_13280'] = func_13280
mod = relay.transform.InferType()(mod)
mutated_mod['func_13280'] = func_13280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13280_call = mutated_mod.get_global_var('func_13280')
call_13281 = func_13280_call()
output = call_13281
func_13282 = relay.Function([], output)
mutated_mod['func_13282'] = func_13282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11585_call = mod.get_global_var('func_11585')
func_11586_call = mutated_mod.get_global_var('func_11586')
call_13302 = relay.TupleGetItem(func_11585_call(), 2)
call_13303 = relay.TupleGetItem(func_11586_call(), 2)
uop_13310 = relay.sinh(call_13302.astype('float32')) # shape=(12, 1, 2)
uop_13312 = relay.sinh(call_13303.astype('float32')) # shape=(12, 1, 2)
uop_13320 = relay.sqrt(uop_13310.astype('float64')) # shape=(12, 1, 2)
uop_13322 = relay.sqrt(uop_13312.astype('float64')) # shape=(12, 1, 2)
bop_13325 = relay.minimum(call_13302.astype('float64'), relay.reshape(uop_13310.astype('float64'), relay.shape_of(call_13302))) # shape=(12, 1, 2)
bop_13328 = relay.minimum(call_13303.astype('float64'), relay.reshape(uop_13312.astype('float64'), relay.shape_of(call_13303))) # shape=(12, 1, 2)
func_11040_call = mod.get_global_var('func_11040')
func_11044_call = mutated_mod.get_global_var('func_11044')
const_13331 = relay.const([7,9,2,-5,1,-1,-7,4,-6,2,-2,6,2,-9,1,4,10,3,-9,2,-4,-7,-5,-4,3,2,6,-7,7,5,7,-8,-5,10,9,-3,5,3,-2,3,-2,-1,7,7,3,4,3,7,-4,1,-9,8,6,-5,8,-6,-5,9,4,-5,-7,-6,-2,-10,2,-2,8,6,-1,4,1,2,-6,7,8,-6,-5,-7,7,-5,-9,-1,-9,2,-8,-1,-6,-4,-5,-10,-6,-8,-1,8,-10,-7,10,-7,5,-8,4,3,-4,2,-9,-10,1,6,3,-9,8,4,-4,-6,-8,1,6,4,2,-9,8,-7,-7,10,8,-5,-3,-4,-1,5,7,-3,-1,-4,3,-5,-3,2,5,2,-9,-10,9,1,-4,-9,-4,5,1,10,3,7,-6,-7,-10,6,7,4,-10,6,-3,7,1,-5,-1,8,-8,9,-5,9,-7,-5,-1,-10,5,-8,-3,8,-9,6,-5,6,-1,-1,1,-10,-5,3,-5,8,1,2,1,7,10,1,-8,-3,2,-3,-4,-3,9,4,1,8,7,5,8,7,-7,-5,5,-4,-4,10,-4,-6,9,9,-5,1,4,10,-9,-2,-7,-1,-7,-9,-4,8,4,-10,-7,6,-5,3,-4,-1,-2,-9,-10,-3,-5,-7,-5,-6,-10,-5,-5,-8,-7,-10,-4,4,-4,6,3,-4,-6,-9,7,-2,-4,-5,-8,-1,-1,-6,4,2,-2,3,-10,6,-9,8,4,2,-9,-9,9,1,-3,-7,-6,-6,-7,-4,7,4,-8,-1,-6,-10,-1,1,-3,9,9,4,5,4,10,-1,-1,-10,-9,1,5,10,10,-5,4,-8,2,-10,1,-8,-5,7,-6,-7,9,10,-7,9,2,2,-10,2,-4,10,8,8,9,-3,4,7,6,-9,-8,4,-2,7,-9,-5,-1,2,-3,7,10,6,-10,7,-10,10,-5,-9,3,1,5,8,-3,7,3,-7,-4,6,5,1,-2,-7,-7,5,2,-3,4,-5,2,-2,-6,9,-3,5,8,5,-6,6,1,-3,-9,-2,-8,9,-8,6,-3,7,1,6,-7,1,5,7,1,9,-8,3,7,-9,-5,1,1,-4,10,-2,-10,10,-10,-1,1,-9,10,-7,5,4,-1,10,2,4,3,-9,-9,-8,8,-10,-9,7,2,-6,10,-9,-4,-4,-2,-10,-6,-7,10,6,7,8,-8,5,1,-8,-1,5,-5,-4,9,1,-5,-2,4,-4,7,-6,8,-4,-3,3,1,-1,-7,3,-9,1,3,-8,3,-9,-5,-5,6,-6,-4,-3,5,3,-7,7,-3,9,-4,-4,-8,-9,-7,9,-4,10,-4,-6,9,2,-10,-3,7,-10,8,8,-6,-10,-1,-4,-8,4,-1,2,2,5,10,4,9,-6,7,-2,1,5,5,-9,-8,-4,5,-9,9,-8], dtype = "int32")#candidate|13331|(540,)|const|int32
call_13330 = relay.TupleGetItem(func_11040_call(relay.reshape(const_13331.astype('int32'), [3, 180]), relay.reshape(const_13331.astype('int32'), [3, 180]), ), 2)
call_13332 = relay.TupleGetItem(func_11044_call(relay.reshape(const_13331.astype('int32'), [3, 180]), relay.reshape(const_13331.astype('int32'), [3, 180]), ), 2)
uop_13337 = relay.exp(uop_13320.astype('float64')) # shape=(12, 1, 2)
uop_13339 = relay.exp(uop_13322.astype('float64')) # shape=(12, 1, 2)
bop_13350 = relay.logical_or(bop_13325.astype('bool'), relay.reshape(uop_13337.astype('bool'), relay.shape_of(bop_13325))) # shape=(12, 1, 2)
bop_13353 = relay.logical_or(bop_13328.astype('bool'), relay.reshape(uop_13339.astype('bool'), relay.shape_of(bop_13328))) # shape=(12, 1, 2)
bop_13364 = relay.less_equal(bop_13350.astype('bool'), relay.reshape(uop_13310.astype('bool'), relay.shape_of(bop_13350))) # shape=(12, 1, 2)
bop_13367 = relay.less_equal(bop_13353.astype('bool'), relay.reshape(uop_13312.astype('bool'), relay.shape_of(bop_13353))) # shape=(12, 1, 2)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_13370 = func_10641_call()
call_13371 = func_10641_call()
func_11599_call = mod.get_global_var('func_11599')
func_11600_call = mutated_mod.get_global_var('func_11600')
call_13378 = func_11599_call()
call_13379 = func_11599_call()
uop_13382 = relay.log2(uop_13320.astype('float32')) # shape=(12, 1, 2)
uop_13384 = relay.log2(uop_13322.astype('float32')) # shape=(12, 1, 2)
func_11066_call = mod.get_global_var('func_11066')
func_11068_call = mutated_mod.get_global_var('func_11068')
call_13392 = relay.TupleGetItem(func_11066_call(), 0)
call_13393 = relay.TupleGetItem(func_11068_call(), 0)
bop_13397 = relay.power(uop_13337.astype('float32'), relay.reshape(bop_13364.astype('float32'), relay.shape_of(uop_13337))) # shape=(12, 1, 2)
bop_13400 = relay.power(uop_13339.astype('float32'), relay.reshape(bop_13367.astype('float32'), relay.shape_of(uop_13339))) # shape=(12, 1, 2)
const_13401 = relay.const([[[-8.228191,-3.689786],[-3.078049,4.053509],[-7.578587,0.580076],[-8.553510,1.001923],[-6.731563,4.277875],[5.449665,-3.035338],[5.162646,9.666416]],[[-7.551020,4.181872],[-9.741482,-5.746195],[-9.664076,-1.775645],[-9.746618,5.791722],[-4.070251,3.084973],[-8.200899,1.334563],[-8.623277,2.969639]],[[-8.996392,-2.714293],[3.340797,-7.910952],[3.086427,-0.310485],[-4.673485,-8.199440],[5.094866,9.029103],[3.604343,-3.453788],[2.914182,8.903491]],[[-6.327355,5.022217],[5.400384,9.237313],[1.037835,8.445284],[-3.589955,-1.745137],[-5.196658,-3.586366],[-5.470653,3.948695],[-0.442463,-8.639839]],[[1.633172,-1.081403],[-2.808952,7.605977],[6.984905,-8.410514],[-2.100189,-1.959690],[4.421482,4.577142],[3.836737,9.172477],[-0.792201,7.695185]],[[4.770135,-9.817423],[-9.987809,-0.147029],[3.618260,-6.611696],[-3.375263,1.665162],[-3.635543,2.738840],[3.547660,-6.153578],[-9.769316,-7.107042]],[[-2.691172,-5.672346],[5.871007,0.799708],[4.318067,-5.562649],[7.379579,1.040830],[9.598025,-9.370955],[-6.033925,-5.669280],[-7.258041,6.415472]],[[-0.977857,1.282602],[0.900553,-7.511014],[1.879243,-8.797470],[0.728923,0.379228],[-4.788064,-4.224836],[7.225067,8.320311],[4.244678,2.546004]],[[-8.116849,-6.179886],[2.325171,-6.267167],[5.636842,1.061597],[-2.250805,5.327593],[9.245156,-0.536421],[-5.529608,3.346682],[0.771694,3.098224]],[[-7.720279,-8.447637],[0.416821,-2.005200],[9.615995,-8.988012],[8.337083,6.739209],[6.371989,-8.897885],[0.626907,-9.211694],[9.823566,0.979625]],[[6.059548,1.584203],[-3.558675,-0.593382],[0.478610,-2.495435],[9.120169,0.502245],[-0.783746,-6.174821],[-9.084495,-7.965377],[4.485346,8.096039]],[[4.603780,4.947359],[2.715674,-2.240291],[2.166444,-9.731257],[0.520485,8.593616],[1.173545,-8.040666],[5.856678,2.512197],[2.130757,8.578853]]], dtype = "float32")#candidate|13401|(12, 7, 2)|const|float32
bop_13402 = relay.less_equal(uop_13382.astype('bool'), const_13401.astype('bool')) # shape=(12, 7, 2)
bop_13405 = relay.less_equal(uop_13384.astype('bool'), const_13401.astype('bool')) # shape=(12, 7, 2)
func_9993_call = mod.get_global_var('func_9993')
func_9998_call = mutated_mod.get_global_var('func_9998')
var_13407 = relay.var("var_13407", dtype = "float64", shape = (507,))#candidate|13407|(507,)|var|float64
var_13408 = relay.var("var_13408", dtype = "float32", shape = (99,))#candidate|13408|(99,)|var|float32
const_13409 = relay.const([True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True], dtype = "bool")#candidate|13409|(135,)|const|bool
call_13406 = relay.TupleGetItem(func_9993_call(relay.reshape(var_13407.astype('float64'), [507,]), relay.reshape(var_13408.astype('float32'), [99,]), relay.reshape(const_13409.astype('bool'), [45, 3]), ), 8)
call_13410 = relay.TupleGetItem(func_9998_call(relay.reshape(var_13407.astype('float64'), [507,]), relay.reshape(var_13408.astype('float32'), [99,]), relay.reshape(const_13409.astype('bool'), [45, 3]), ), 8)
output = relay.Tuple([call_13330,const_13331,call_13370,call_13378,call_13392,bop_13397,bop_13402,call_13406,var_13407,var_13408,const_13409,])
output2 = relay.Tuple([call_13332,const_13331,call_13371,call_13379,call_13393,bop_13400,bop_13405,call_13410,var_13407,var_13408,const_13409,])
func_13414 = relay.Function([var_13407,var_13408,], output)
mod['func_13414'] = func_13414
mod = relay.transform.InferType()(mod)
mutated_mod['func_13414'] = func_13414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13414_call = mutated_mod.get_global_var('func_13414')
var_13416 = relay.var("var_13416", dtype = "float64", shape = (507,))#candidate|13416|(507,)|var|float64
var_13417 = relay.var("var_13417", dtype = "float32", shape = (99,))#candidate|13417|(99,)|var|float32
call_13415 = func_13414_call(var_13416,var_13417,)
output = call_13415
func_13418 = relay.Function([var_13416,var_13417,], output)
mutated_mod['func_13418'] = func_13418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13025_call = mod.get_global_var('func_13025')
func_13027_call = mutated_mod.get_global_var('func_13027')
call_13505 = func_13025_call()
call_13506 = func_13025_call()
func_10466_call = mod.get_global_var('func_10466')
func_10468_call = mutated_mod.get_global_var('func_10468')
call_13516 = relay.TupleGetItem(func_10466_call(), 1)
call_13517 = relay.TupleGetItem(func_10468_call(), 1)
output = relay.Tuple([call_13505,call_13516,])
output2 = relay.Tuple([call_13506,call_13517,])
func_13523 = relay.Function([], output)
mod['func_13523'] = func_13523
mod = relay.transform.InferType()(mod)
output = func_13523()
func_13524 = relay.Function([], output)
mutated_mod['func_13524'] = func_13524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11335_call = mod.get_global_var('func_11335')
func_11336_call = mutated_mod.get_global_var('func_11336')
call_13527 = relay.TupleGetItem(func_11335_call(), 0)
call_13528 = relay.TupleGetItem(func_11336_call(), 0)
output = relay.Tuple([call_13527,])
output2 = relay.Tuple([call_13528,])
func_13532 = relay.Function([], output)
mod['func_13532'] = func_13532
mod = relay.transform.InferType()(mod)
output = func_13532()
func_13533 = relay.Function([], output)
mutated_mod['func_13533'] = func_13533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12658_call = mod.get_global_var('func_12658')
func_12659_call = mutated_mod.get_global_var('func_12659')
call_13576 = relay.TupleGetItem(func_12658_call(), 1)
call_13577 = relay.TupleGetItem(func_12659_call(), 1)
uop_13580 = relay.sigmoid(call_13576.astype('float64')) # shape=(3, 180)
uop_13582 = relay.sigmoid(call_13577.astype('float64')) # shape=(3, 180)
uop_13586 = relay.asinh(uop_13580.astype('float32')) # shape=(3, 180)
uop_13588 = relay.asinh(uop_13582.astype('float32')) # shape=(3, 180)
func_8314_call = mod.get_global_var('func_8314')
func_8322_call = mutated_mod.get_global_var('func_8322')
const_13600 = relay.const([-5.075093,-2.806343,-4.297440,1.468162,-9.892894,8.853018,5.758104,8.258444,-1.152553,-9.017228,6.862812,-0.774774,-7.459678,-2.938312,-3.762158,-5.990334,0.068434,-8.665341,-3.509902,-3.672334,7.877614,3.434094,-8.357759,-3.707459,0.002193,-7.463005,-9.541256,8.089310,-9.119790,-0.946393,7.418226,7.551300,0.509945,-5.169084,4.576653,-3.367391,5.265336,1.254369,1.458920,-0.697950,0.612473,2.287942,8.787733,-1.836460,5.081252,-2.474734,-4.992440,1.274709,9.392259,6.760281,-5.729785,3.542266,8.200828,9.163663,1.195804,3.809829,-2.546262,-8.861553,6.718041,6.252775,3.840483,-7.628115,-2.688787,-1.564259,1.125010,-0.910070,1.793637,8.250175,4.064019,0.657629,-5.655136,9.298120,-3.840202,-6.953792,-2.176853,-0.191526,9.429908,1.788503,-2.962959,-6.425895,0.665323,5.665987,-5.606867,0.293430,8.040728,-4.605907,-1.327341,-0.072687,8.311766,-1.256438,-2.577029,-7.252410,7.984949,2.125292,3.237704,-0.872609,3.151457,6.944690,-9.261609,5.996775,-1.055584,-0.318233,2.428743,6.588382,4.148243,-7.283822,-8.740682,-4.711105,7.989656,2.811763,8.522392,1.940200,2.696796,-0.559206,-5.111157,6.716262,-0.706323,9.681662,-9.304962,-2.518681,-6.107056,0.181199,3.120096,6.908340,-2.888855,1.282244,-7.712496,-9.068089,-8.697494,2.007860,-9.301591,3.059884,-9.774955,-9.067275,3.340092,7.712869,7.497676,-8.161567,-1.384067,8.562891,-7.125457,-7.902312,-3.481560,-9.908158,9.190282,1.989740,-8.340070,-0.664451,1.934820,7.599920,-4.888264,-2.095904,8.451304,-4.308451,-5.375887,-4.497366,9.547239,0.110406,3.015965,-1.501670,-3.227456,-0.896236,-6.552217,0.895392,4.056498,-3.592406,9.267208,-9.102518,4.531333,-6.992639,-4.239367,-5.581675,4.893832,2.195035,3.051756,-5.420352,0.338969,-3.979336,0.098419,1.473724,-9.802392,-7.899378,0.431665,-0.564521,-2.630034,-8.395191,-1.738806,-9.319497,0.018572,-8.892532,7.629322,-0.680160,-1.742911,-3.715141,-6.313481,-8.319376,8.668735,0.501439,0.345560,9.357604,-9.256436,7.312673,-1.458311,7.885448,3.786620,-0.849398,-7.074935,-2.435458,3.514288,-6.502338,-4.472089,-3.719424,-7.228922,-8.946107,0.543928,0.764984,-1.956345,-2.240386,-6.443110,-3.016331,-4.182202,-3.504155,0.474525,4.002541,9.763173,-9.889872,-6.082140,4.190843,-6.572615,5.190569,8.185435,-9.941288,5.682650,-5.921966,-1.831038,2.801740,1.159784,6.956661,-8.109507,8.347539,-1.434053,-5.298832,-6.106247,7.911276,8.269578,-1.712593,5.554619,-2.009720,-9.150275,-1.077041,5.738083,0.999061,2.792950,4.315002,2.073251,5.165847,1.805721,-1.718214,2.536400,-8.334147,-6.141704,2.146237,7.364250,-9.901877,-4.563351,-3.785140,2.205058,-2.891686,-5.935883,-4.614892,-9.506990,-8.671910,4.503229,9.140708,-6.379721,-6.060112,6.586968,9.847605,5.490251,-6.042613,-3.084859,-7.689633,-8.958327,5.789912,-5.052192,-2.787021,8.985683,-0.488187,3.391974,-7.612431,-4.083171,4.870295,-4.239207,-2.226614,-5.421030,-7.569074,-7.892568,-7.684629,3.107301,9.601915,-9.703933,9.297546,-0.418891,-7.834732,9.091342,-0.575360,1.530726,3.623373,-4.233659,-3.673635,-1.421281,5.759256,0.047521,2.000027,6.448403,-0.738519,-9.926004,-2.702815,-3.562832,3.357186,0.017458,6.249346,2.623165,-3.064335,-4.206468,-4.229838,4.173147,8.622145,-6.014435,-6.038020,-5.122364,1.534376,-6.008910,4.256517,-0.450946,-4.536161,-2.416163,1.087395,6.716789,5.563984,-9.576228,-5.426939,-2.635486,-6.807538,3.172469,-8.714065,0.314068,-7.872779,7.806874,-5.396187,-3.429963,3.154508,-9.775987,-0.392752,4.656428,-8.114879,-1.277684,3.017451,-6.280164,1.705250,-9.087688,8.328300,5.118682,4.124673,-6.813685,-9.453061,9.744804,5.070427,-2.182614,5.075686,-6.089939,7.392255,-9.761375,5.123308,-2.559160,-6.865864,-8.126602,9.931142,-4.378644,9.437726,-6.028876,1.007823,4.700234,-8.681792,3.192058,0.651036,6.839839,-9.254373,-1.682495,-1.681218,-3.015887,2.159957,0.235766,-9.150984,-5.177023,-6.260039,2.164813,-3.480299,-6.002786,1.497197,-5.986060,2.568404,2.462514,9.016387,6.987485,7.878094,1.707903,0.722625,4.509876,-8.553419,6.470151,-3.129499,-4.807980,3.569796,4.064698,-9.545997,-7.825193,9.939306,3.203817,3.631887,6.526206,-1.912659,1.321358,1.680398,5.462791,-1.625179,-1.637937,-9.891388,3.457009,5.147557,-4.918069,-0.439390,-2.055934,-2.160449,4.118407,-6.078649,-0.368549,2.524369,-4.170647,-8.054183,-2.900788,-9.283905,-9.205066,9.203975,6.468223,-3.666561,6.663594,-2.173806,5.612247,3.862770,-9.070764,3.668186,7.780008,-8.397392,1.835858,4.224952,-0.478159,-1.731544,-9.045834,-2.448712,-8.690242,7.199827,-2.822408,3.528879,8.356742,-0.667999,9.566960,-4.548068,-5.448255,-9.710516,-4.944645,9.677797,-5.695645,0.407915,4.879285,-0.372097,-5.461189,0.873818,5.625063,-5.528585,-1.780587,-1.325994,-9.214907,-0.587479,6.035870,-4.077135,-0.569556,-8.841851,4.752232,-2.880059,-9.218574,3.113390,-0.877413,9.720092,8.652731,-8.164197,-2.989100,0.435883,-2.694194,0.223344,2.687254,4.842238,9.779636,-5.318401,7.962148,9.927613,0.246876,-5.691138,-7.542324,9.057201,-0.848428,9.434314,-6.026599,8.921594,-2.724600,-4.580836,4.596897,4.545453,-3.873423,4.183085,-5.264355,4.301249,5.144854,-5.849907,2.695056,-6.546985,4.106181,-1.852662,-9.942598,-6.739415,-5.439368,-5.270596,-7.914076,-5.417441,2.786150,-1.072879,-1.340815,3.636997,-8.865245,3.238615,7.467388,0.188337,7.686298,-5.407224,2.812456,-0.703831,-7.368951,7.324037,0.472705,9.910939,-8.098415,-9.264937,4.244159,-2.771836,7.906340,3.462563,7.533395,-3.113286,-7.310228,9.116957,1.236367,3.383868,-8.698401,6.779934,-7.512251,7.787846,-0.838723,3.642681,5.463841,7.528165,-0.959362,-6.627543,0.682125,-5.113186,7.388138,-9.285570,-1.002110,-5.770818,-3.757727,-7.969415,-1.912956,0.166402,6.615469,-7.882221,3.107138,-8.710704,-0.297037,2.793304,0.708276,6.028282,7.378568,2.666624,7.618028,3.529041,2.521739,-2.062351,3.853678,7.280825,1.296374,8.225217,6.350373,-7.962228,-0.958430,-1.039348,1.500885,2.719256,1.374158,-8.343629,-8.324102,-4.239064,3.928251,-6.570796,2.152490,-4.475489,1.696335,2.543977,9.677663,9.875542,8.009611,8.653254,2.971034,-2.085920,2.980185,-8.586900,-2.435612,-1.115797,8.120445,-4.096058,-0.987617,8.750780,-3.555825,-8.720367,-3.509159,-5.418970,3.313297,8.573741,-5.289841,2.165681,-7.382148,4.471378,5.211672,5.480657,-3.298655,7.219242,-1.749114,9.023722,4.570539,-0.822352,5.967144,4.077231,-3.260746,0.807870,-8.093312,-7.483829,-1.959290,9.113140,5.826450,8.808431,-8.241149,-0.390616,9.623409,-6.748257,-8.685298,9.316477,8.999718,-1.326687,3.602254,-1.076761,6.896345,-9.847965,-5.432463,9.540372,-9.947167,-1.488420,5.866219,3.464867,-7.586174,7.708172,-3.518788,-2.405606,7.264612,0.112827,-1.642755,7.167100,9.950298,-3.555785,4.189832,5.245735,-0.304070,2.130879,8.123011,-9.027016,-9.395417,-2.793280,-3.733515,-9.176275,7.255827,-5.267783,3.007145,7.327795,-7.934301,-3.484316,0.604544,5.622332,2.550533,8.411598,-5.840163,-5.968749,8.905131,0.886037,1.047860,-4.588607,-9.958152,5.045144,-7.949667,-9.768160,-7.035161,-1.436723,-4.387713,7.267724,-4.006108,-4.211122,-4.605574,8.558964,9.243700,-0.177383,-6.249425,-4.036662,1.074878,-5.652540,-0.925228,-7.790394,-2.502234,3.520381,8.096692,-7.032162,6.504027,-8.098550,-5.855656,-6.063008,-7.561315,-3.080126,3.242073,5.532292,-8.259343,-3.549395,-2.886803,7.272289,6.427632,-4.986635,4.019935,9.838092,0.998915,7.789554,3.786024,-0.403854,-8.252885,3.538373,3.099298,-0.038822,-9.244294,-8.653204,-3.665295,0.317561,-5.399300,-8.232858,0.273224,6.715949,2.270015,-1.184438,-0.383108,-2.573812,6.704918,-4.396524,2.270470,9.625688,8.731650,-5.066297,1.699931,4.540312,4.911252,-0.242780,6.818058,-5.400485,-0.419020,-5.071188,1.534672,9.016951,-1.905615,8.086917,-8.640075,4.491209,-7.948278,6.488381,-9.255191,-2.782906,-2.199919,-7.415962,-6.172485,-7.827582,7.124863,1.218676,-5.800040,8.744539,-6.451575,-0.059295,3.639060,-3.636933,7.955285,-8.449150,-2.785594,-1.416758,1.214382,2.440796,4.827845,-1.897473,-4.449890,1.871030,-9.736999,5.606084,5.017304,6.215371,2.865078,-4.903241,-0.184129,-2.836914,5.425109,5.966638,4.892761,-5.404008,1.018947,8.823009,-3.151434,-6.897583,-0.145928,4.355340,1.937505,-9.486091,-0.727517,7.042545,3.118298,-0.977864,-8.580823,8.951789,-6.220235,-9.347027,-4.732303,9.462042,-6.718140,7.854327,7.820939,-2.433879,-8.690099,5.753678,-6.637189,7.398370,7.776523,-6.522003,1.640145,4.437669,-5.002822,2.102413,-2.592500,2.178468], dtype = "float32")#candidate|13600|(864,)|const|float32
var_13601 = relay.var("var_13601", dtype = "float32", shape = (2304,))#candidate|13601|(2304,)|var|float32
var_13602 = relay.var("var_13602", dtype = "float32", shape = (42,))#candidate|13602|(42,)|var|float32
var_13603 = relay.var("var_13603", dtype = "float64", shape = (1680,))#candidate|13603|(1680,)|var|float64
const_13604 = relay.const([True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,True,False,True], dtype = "bool")#candidate|13604|(135,)|const|bool
call_13599 = relay.TupleGetItem(func_8314_call(relay.reshape(const_13600.astype('float32'), [12, 6, 12]), relay.reshape(var_13601.astype('float32'), [2304,]), relay.reshape(var_13602.astype('float32'), [14, 3]), relay.reshape(var_13603.astype('float64'), [1680,]), relay.reshape(const_13604.astype('bool'), [135,]), relay.reshape(const_13600.astype('uint32'), [12, 6, 12]), ), 4)
call_13605 = relay.TupleGetItem(func_8322_call(relay.reshape(const_13600.astype('float32'), [12, 6, 12]), relay.reshape(var_13601.astype('float32'), [2304,]), relay.reshape(var_13602.astype('float32'), [14, 3]), relay.reshape(var_13603.astype('float64'), [1680,]), relay.reshape(const_13604.astype('bool'), [135,]), relay.reshape(const_13600.astype('uint32'), [12, 6, 12]), ), 4)
func_12494_call = mod.get_global_var('func_12494')
func_12496_call = mutated_mod.get_global_var('func_12496')
call_13609 = relay.TupleGetItem(func_12494_call(), 3)
call_13610 = relay.TupleGetItem(func_12496_call(), 3)
output = relay.Tuple([uop_13586,call_13599,const_13600,var_13601,var_13602,var_13603,const_13604,call_13609,])
output2 = relay.Tuple([uop_13588,call_13605,const_13600,var_13601,var_13602,var_13603,const_13604,call_13610,])
func_13614 = relay.Function([var_13601,var_13602,var_13603,], output)
mod['func_13614'] = func_13614
mod = relay.transform.InferType()(mod)
mutated_mod['func_13614'] = func_13614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13614_call = mutated_mod.get_global_var('func_13614')
var_13616 = relay.var("var_13616", dtype = "float32", shape = (2304,))#candidate|13616|(2304,)|var|float32
var_13617 = relay.var("var_13617", dtype = "float32", shape = (42,))#candidate|13617|(42,)|var|float32
var_13618 = relay.var("var_13618", dtype = "float64", shape = (1680,))#candidate|13618|(1680,)|var|float64
call_13615 = func_13614_call(var_13616,var_13617,var_13618,)
output = call_13615
func_13619 = relay.Function([var_13616,var_13617,var_13618,], output)
mutated_mod['func_13619'] = func_13619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11335_call = mod.get_global_var('func_11335')
func_11336_call = mutated_mod.get_global_var('func_11336')
call_13624 = relay.TupleGetItem(func_11335_call(), 0)
call_13625 = relay.TupleGetItem(func_11336_call(), 0)
output = relay.Tuple([call_13624,])
output2 = relay.Tuple([call_13625,])
func_13631 = relay.Function([], output)
mod['func_13631'] = func_13631
mod = relay.transform.InferType()(mod)
mutated_mod['func_13631'] = func_13631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13631_call = mutated_mod.get_global_var('func_13631')
call_13632 = func_13631_call()
output = call_13632
func_13633 = relay.Function([], output)
mutated_mod['func_13633'] = func_13633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11061_call = mod.get_global_var('func_11061')
func_11063_call = mutated_mod.get_global_var('func_11063')
call_13640 = relay.TupleGetItem(func_11061_call(), 0)
call_13641 = relay.TupleGetItem(func_11063_call(), 0)
func_12550_call = mod.get_global_var('func_12550')
func_12551_call = mutated_mod.get_global_var('func_12551')
call_13671 = func_12550_call()
call_13672 = func_12550_call()
output = relay.Tuple([call_13640,call_13671,])
output2 = relay.Tuple([call_13641,call_13672,])
func_13675 = relay.Function([], output)
mod['func_13675'] = func_13675
mod = relay.transform.InferType()(mod)
mutated_mod['func_13675'] = func_13675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13675_call = mutated_mod.get_global_var('func_13675')
call_13676 = func_13675_call()
output = call_13676
func_13677 = relay.Function([], output)
mutated_mod['func_13677'] = func_13677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12675_call = mod.get_global_var('func_12675')
func_12677_call = mutated_mod.get_global_var('func_12677')
call_13712 = func_12675_call()
call_13713 = func_12675_call()
output = relay.Tuple([call_13712,])
output2 = relay.Tuple([call_13713,])
func_13717 = relay.Function([], output)
mod['func_13717'] = func_13717
mod = relay.transform.InferType()(mod)
output = func_13717()
func_13718 = relay.Function([], output)
mutated_mod['func_13718'] = func_13718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12208_call = mod.get_global_var('func_12208')
func_12209_call = mutated_mod.get_global_var('func_12209')
call_13767 = func_12208_call()
call_13768 = func_12208_call()
func_6152_call = mod.get_global_var('func_6152')
func_6158_call = mutated_mod.get_global_var('func_6158')
const_13784 = relay.const([-3.556164,-9.426186,-2.376473,1.113132,-9.166226,-1.961403,1.478176,-4.610040,4.954770,-7.585383,1.607227,-9.990870,2.285400,3.764204,1.799449,-9.243234,-1.494014,-0.781561,7.088536,4.263540,5.782371,5.819762,-4.377642,-4.875203,7.970573,7.513911,-2.037683,2.524574,8.912824,5.868528,6.508915,-1.441859,-0.383009,-4.475659,7.580385,6.950669,5.351316,7.667102,2.467073,-5.453756,8.588597,4.631091,8.694831,7.582298,-5.885212,2.935404,-9.246292,9.752638,5.120937,2.827585,7.012566,6.095538,8.019126,-2.360016,-1.685075,4.044768,-7.319454,-3.399084,-4.647193,9.045284,-0.692707,-2.901594,-2.489207,4.561359,-4.973288,-1.968088,6.147229,-0.532068,0.365058,6.287540,1.892178,4.776351,-1.113029,0.983772,9.411345,9.170044,-3.861220,2.718248,0.090111,-0.659115,9.325441,0.845662,-9.420102,2.484449,-9.087479,-0.863432,-2.300091,0.056008,0.492054,2.070569,3.657248,-8.363585,-9.495462,0.762208,-6.681842,5.900716,-2.967467,-0.515220,5.707630,-0.558063,7.912661,8.677979,-4.571323,-0.717938,-9.829252,7.497358,-7.219644,0.914005,4.023655,-2.904142,-9.779861,4.866326,-9.942794,1.472539,8.419142,2.209428,-4.106274,-6.086666,4.718187,-9.772745,-7.623277,-1.225278,7.106662,-0.932101,-3.866185,-1.735315,-5.475141,5.409631,-1.098524,-3.304237,1.561603,-8.033344,4.582320,-4.453596,5.256438,-2.464465,-4.406409,-1.333665,-1.604703,-6.133886,2.685418,9.510130,-0.789613,-3.122919,0.589275,1.689186,-2.426346,7.838604,-1.563672,-2.431520,-7.693552,-6.147636,7.877768,8.441445,5.614854,-0.148360,-9.359932,-4.141111,7.333335,2.047343,-9.043383,2.966407,-0.139135,-7.486269,-8.302026,-1.402383,7.503769,-6.958953,6.590046,-0.271497,2.131596,8.971911,-1.666547,0.055485,-7.454336,-3.828835,5.290416,7.477166,-8.955808,-9.664138,7.332554,-1.621733,5.925112,9.131919,-0.240896,4.383619,5.865279,7.051232,8.345822,4.817136,-8.552554,-0.293500,8.347524,0.785475,7.773133,-8.416474,1.263798,3.305761,6.744542,1.057029,-0.017217,-6.361239,-0.850441,2.820207,-5.356456,8.089968,-3.697420,-1.964009,-8.374109,-5.504532,9.423598,-2.819365,9.485683,-9.010600,-4.113705,-6.179822,-5.955652,-9.845490,-0.451768,-7.807438,-7.705232,8.032027,8.862882,-0.729354,-9.537729,4.136157,-5.618532,-2.055714,5.503291,-4.704386,-7.093514,-5.951386,7.885836,5.710587,-6.330428,-0.479153,-4.931010,-3.560514,7.490885,5.503258,6.832803,-6.482237,-1.711388,9.100105,7.234992,8.840648,-6.376319,-9.510591,1.260561,4.857187,-9.472691,-4.408330,-4.714760,-0.488893,-0.393710,7.840030,4.371021,1.811389,-4.073405,1.167096,-2.089771,8.427798,5.279718,9.266416,-2.827419,-3.005559,-0.258140,5.653011,0.665738,1.324877,9.426910,6.534139,-0.538689,-3.185317,9.165563,-1.318151,-5.310809,-7.882063,9.315205,-2.512555,0.931404,-3.497331,-4.384108,-7.222980,-6.669417,3.870099,-5.166086,-0.896905,9.740040,6.732300,-2.330935,-5.076291,7.214911,-3.119364,-0.361049,-4.559099,-1.724855,-9.149751,-4.562384,-5.388092,-6.875060,-6.409120,7.180186,8.101490,0.577794,6.138588,-6.620755,1.723643,8.431641,-3.402251,-5.823195,0.727662,-4.431623,0.901355,-2.110224,1.896713,8.845243,4.383724,-1.134369,6.617783,1.539059,5.778373,2.407077,8.231383,9.841983,-2.153239,5.024069,-6.353569,7.484977,-5.057219,1.611146,-9.737995,-2.677390,9.711318,-0.600649,-3.194299,-6.104281,1.541155,-1.896597,-6.200456,1.501078,-3.056533,-1.280330,-9.703220,-2.996986,8.153431,-1.185930,7.958126,1.203440,6.164569,8.523938,8.041682,9.789451,5.574310,2.563627,6.089349,4.588189,5.000067,-4.585468,5.978649,1.386401,0.384969,2.477470,-2.764285,5.481197,-7.522239,9.548059,-0.556966,7.353912,3.895003,5.762701,3.971715,-8.033085,-1.166898,-6.808541,2.387284,-4.449344,8.948842,2.298718,-5.894678,6.422414,-4.870726,-2.877461,9.051358,-3.836591,8.294473,-7.794565,-7.311516,1.064738,4.898749,9.929690,0.314277,6.323065,2.633047,-3.509774,-4.920310,-9.173953,9.935654,4.516057,-1.495312,8.313510,-9.491066,-4.234675,-8.317780,5.690685,1.181969,-2.062793,3.860992,3.196163,4.744722,-2.442698,6.590222,-0.534096,-3.848335,-9.906927,6.795552,-8.936023,0.564609,3.847597,-7.567779,7.239998,3.165900,0.856050,-9.739848,1.701513,-4.011121,5.271945,-5.689203,-2.319596,5.181372,-6.811224,-9.773470,-2.224556,4.216794,2.391642,6.394086,-2.697465,0.970935,7.607613,-2.952779,1.914607,-6.193125,7.675768,-4.649352,1.500674,-0.990404,-7.082603,-5.127521,-6.174912,-7.573985,-3.574307,-7.423962,-5.019140,-4.926729,9.164676,-1.278715,4.869901,8.586714,-9.427975,3.607525,-2.608953,5.520174,-1.744593,9.082561,0.204498,2.578136,3.566158,-9.547301,8.464323,1.304699,-9.832575,7.676054,1.817061,-1.314538,-2.758158,6.411479,4.093321,0.115062,4.068045,-3.759232,7.816568,-0.889599,7.226351,-3.475910,2.186656,-8.729399,-3.727287,2.413401,-4.602411,0.332537,0.490141,4.430152,0.076992,0.113984,-2.210181,7.197708,1.667955,-5.211165,0.530907,5.400884,3.187469,-4.589303,8.014675,3.823478,7.561556,-7.414157,5.746014,8.964995,-2.349176,0.007010,-9.951185,-2.010440,-0.989414,-9.781110,-0.237445,-4.580987,3.461767,1.508174,5.088693,9.321821,0.504972,8.513598,4.623178,5.048682,2.930288,-2.531004,2.404430,0.146471,-1.564101,1.444055,9.954328,-6.731973,-8.675805,6.099265,-6.667448,-7.421428,-9.162475,-6.076406,-4.637989,-3.461760,0.995978,0.837027,7.594346,-0.510537,3.106244,-9.262080,-2.129078,4.166844,-3.285425,-8.235598,8.539285,-4.445937,-8.446576,-0.964196,-3.897650,0.415888,6.635111,8.882218,9.073590,-1.415492,1.050199,-4.580929,5.121225,8.496571,-6.047951,-3.754081,-9.228159,-7.806052,-3.068951,-1.444716,8.528889,-0.686728,-9.135392,6.575673,6.465990,-0.829975,4.078403,-6.005915,6.944639,-4.667589,0.422291,6.237017,-5.575017,9.327462,-6.682655,0.403548,0.164459,9.869696,2.131234,0.835875,-9.892384,-1.773061,-1.561162,9.983657,-1.095518,-0.927267,-0.281549,0.965701,5.182875,8.762242,-6.371285,0.111576,-3.133895,-7.602186,5.248554,2.461997,2.806398,0.756022,-1.536297,8.615142,2.198064,2.418936,-9.285495,-1.708905,7.800749,0.032942,-8.521770,7.346590,1.618834,7.317548,3.778282,0.231334,-4.449605,5.763759,5.296843,0.466538,-8.666953,-0.398841,5.234568,-8.882661,7.540891,6.028444,-9.791259,-2.418217,-9.052140,-3.482687,-4.180368,-4.210965,9.352893,-1.984617,1.204120,3.104290,-2.258003,-6.692227,-1.039874,-8.274883,-0.593526,1.929221,-8.044169,4.042724,8.962759,-0.997733,6.473304,-0.204120,-0.728164,2.750365,-8.220108,9.336609,-5.266304,1.783361,-8.666602,-2.068481,8.603446,1.240882,-0.006439,-4.451801,8.054535,5.423049,0.763995,7.776228,-8.491857,4.472129,8.259279,4.070006,-6.197557,-0.798165,-3.261623,-4.312616,-9.583323,0.147080,-6.767313,4.866065,5.513111,-2.361603,-8.195093,-4.405173,-0.712851,-3.183664,4.388272,8.799202,-5.205629,-7.054667,7.382148,-2.864677,2.840293,-5.094864,4.848413,0.152715,-2.935540,8.700113,6.062045,-6.766875,-3.631892,0.576561,-2.047073,4.627673,-2.408063,-1.912817,-6.791990,7.871996,-7.487991,5.002297,6.626895,-1.528517,-0.702173,8.995973,-0.970895,7.222886,-5.012358,-9.035236,-9.978558,2.468084,0.744948,-8.893192,-4.195589,1.884067,5.751219,-9.604103,5.268650,-5.152598,-0.881453,5.505255,7.646847,5.393256,0.429945,1.258791,-9.326074,-2.241275,-5.616393,6.254586,5.209880,1.144765,-5.069217,3.759006,5.286692,1.589923,2.402449,-6.903229,-5.390529,-3.869630,1.585017,0.199305,-2.078056,9.093990,-4.039120,3.678931,-4.058051,-7.726117,-0.677661,-2.929696,9.860289,-3.409142,6.043496,-2.500417,-5.359935,0.584311,-8.089578,4.884454,8.741264,1.805387,-2.247526,0.390044,2.023162,2.707935,1.567088,2.007440,6.368130,-9.564244,-9.812938,-8.150335,3.069587,-5.728331,-8.800782,4.240704,7.565089,3.073925,2.858840,-8.346485,-3.810137,1.146032,6.646420,4.553972,-7.541343,7.521303,-8.362827,1.285752,-8.478261,5.862512,-4.043250,-8.139997,1.320987,3.633778,-7.011417,7.879153,8.131280,-1.447030,-9.387136,1.366219,9.282953,8.659278,9.319026,-9.495984,2.266181,-0.916462,-1.617813,6.901334,5.565698,-3.811511,-9.266633,-0.084893,-6.805809,-8.868841,-4.433525,4.498863,0.084855,4.916448,-2.692036,-0.790542,2.505911,3.802606,8.772366,4.677508,7.971281,-8.284199,-2.983983,8.289637,9.624190,5.692494,8.464498,-6.319422,5.026387,6.971071,4.793120,4.680054,9.866129,-8.908556,3.600816,7.519285,3.533433,-9.095982,-0.220647,3.636729,-8.402054,-7.658498,7.218280,-2.730350,-8.904456,-0.509531,5.878021,7.863481,-3.978988,4.039110,2.090876,-6.223186,-9.591001,-8.060119,-8.531849,-4.536878,-4.155198,2.082144,1.966355,2.032004,0.183413,0.546078,6.390375,9.968582,-7.166514,-9.820100,6.955868,9.617418,4.043369,4.626724,8.267444,-2.380693,-8.037263,0.199437,5.207639,4.770633,9.580533,1.691341,8.092200,-2.474439,7.207675,-3.042911,-3.007705,-7.889297,5.611449,0.251315,-5.612262,6.389580,4.007601,-2.288322,1.073750,-0.624626,2.009906,0.328777,-6.921657,-3.035962,-5.211759,9.273217,-5.373597,3.796333,5.305704,-8.963996,-7.652429,-7.307545,1.805833,1.928472,-9.458942,5.904529,4.769028,9.491333,-6.725133,-5.183303,-7.468989,8.775313,2.610814,-3.133873,-2.401593,-5.214150,-0.926062,-2.166809,-7.539938,-8.533571,8.030385,-7.678003,2.716336,7.771950,3.378155,-7.534982,6.709279,8.479923,-0.498344,0.938725,-7.392032,-0.405027,-2.406429,-5.357318,-0.241059,4.576748,-8.562105,-9.995483,8.614500,-4.681375,1.525989,-7.396130,-4.718507,-8.345181,-3.890686,2.267818,6.261934,2.679012,5.806937,-0.387634,4.325513,5.244562,8.304203,5.747993,0.220735,-5.496159,-0.045771,9.013060,-2.510878,-8.808248,3.723224,5.493638,1.977633,-6.411564,8.797907,-4.719591,3.219886,-6.845445,2.112351,9.521549,4.545034,-2.987525,9.679279,5.095882,8.404679,-4.864750,2.965272,2.730338,-7.056896,7.262018,1.063735,-4.256531,-1.582158,8.022001,-5.281089,-1.838045,-4.887468,-8.142497,4.983436,8.746217,5.095412,3.706426,-2.498788,3.596171,5.891776,-0.601867,-8.282951,3.341449,8.540985,-5.961498,1.705074,-0.685134,4.036758,1.319196,-4.987562,1.093139,-5.634836,-4.819886,-4.269599,-1.941095,4.531713,-8.590257,9.611227,-4.849836,-3.655628,1.775054,4.528596,-1.327466,-8.006612,0.027601,-1.756103,-6.707522,-2.906496,7.255447,-0.937914,-7.875618,-9.171037,2.527634,-5.192054,0.427834,-4.279482,-4.907498,-5.097404,0.215364,2.208243,5.063233,7.003328,-7.278568,-2.276250,-7.228511,1.413201,-2.109774,1.866152,-1.831154,4.016444,0.128285,-3.933460,-9.659023,-4.395162,1.414839,-0.212338,6.193743,-1.779346,8.385621,-5.021850,9.408281,-4.027792,2.708003,0.163893,9.954615,1.318079,-4.470662,1.196493,-7.792671,-0.491307,9.698094,-2.581632,4.217546,-3.959634,-7.602966,-1.317467,9.083438,9.736547,8.347489,-6.832512,-8.731244,2.617633,0.061616,3.979925,-6.105427,6.686425,-6.533043,-5.528027,-0.270877,4.658519,7.894142,-5.507337,-1.732957,-9.946006,-9.008948,0.235843,-7.419586,1.674551,3.028230,-9.125991,8.696860,6.972780,5.214920,9.137508,-8.391094,-1.417570,-8.219891,-2.015347,0.958441,-1.167217,8.723388,-4.470887,-8.537550,4.059449,-8.520131,7.382737,6.251627,4.729332,3.766144,-7.654843,5.139835,6.599501,7.101698,6.447280,-5.740216,-5.223366,8.913009,-9.989424,0.580627,8.261160,9.058335,7.754288,6.860217,9.039751,0.963865,-6.731173,4.297152,-1.523562,-0.540797,2.864960,-6.964940,-7.598140,-0.180454,3.622884,0.950850,3.503645,-0.843953,2.183249,5.929313,-8.526092,1.555558,-2.815635,-1.914402,8.561862,-0.369235,-2.997171,2.349286,-1.667469,2.107180,3.127278,-8.341557,1.968155,0.324972,-6.218570,3.135156,0.321469,9.963229,6.721159,-1.172836,-9.684541,4.114020,6.680473,-1.879694,-6.576788,-5.877206,-6.947969,-8.291632,1.916278,-7.417080,0.375145,-2.100807,-1.637234,-3.340343,1.401317,8.280044,0.403081,-7.338424,9.334510,-8.143427,-1.473494,1.397854,7.595565,-1.382561,3.066840,-4.451780,4.637479,6.610418,-9.493337,4.559367,-0.262247,-7.891943,-9.884390,7.930452,1.837854,8.332774,-1.081562,-3.953806,1.323969,-9.769077,4.588782,2.118707,7.654139,8.644754,-6.632842,6.828025,8.411338,-8.170553,7.057714,9.508564,3.489279,-0.615308,3.565654,6.350172,-1.339966,4.234470,-8.497347,-8.625224,6.783635,7.093092,-3.532813,-4.833306,-6.780564,3.534084,-6.936631,-5.925586,-7.483611,8.056032,7.721797,-0.035225,-3.927241,-8.024456,-3.580568,-1.994718,-0.710563,5.007225,4.694635,-9.546672,-2.794605,1.245461,-0.188930,-7.945811,-5.974044,-3.781370,-1.631074,0.622609,-0.625991,5.376921,-5.983108,-9.611546,3.924335,-3.036658,6.462210,9.978430,-9.110877,5.874311,-4.581520,9.224114,2.661779,8.701347,-4.867744,0.121564,-3.900396,9.533714,-0.183057,3.229548,8.170405,-1.443795,-4.508022,-8.987924,-2.151729,3.880534,1.212266,-8.300360,-6.903827,-0.885051,-1.762253,6.013569,-7.633362,-6.017019,-1.767685,5.455776,4.509049,-8.855318,5.883521,-4.471809,-3.769492,-4.927058,3.372588,1.020658,-1.681871,-1.675695,8.521126,4.945017,5.907699,-9.557040,0.977509,5.238356,-6.057130,-9.179406,0.844518,1.867368,-5.153390,1.915786,-8.680869,8.444241,5.970841,-2.612192,4.916513,-3.155869,6.838564,-8.630905,-2.035755,1.118947,-1.646600,-4.374132,-5.058806,7.726163,-4.546768,-4.008732,1.079964,7.285934,-7.086247,4.194607,-9.906812,-4.140749,8.013923,-1.588620,-0.815627,-9.598123,-7.247166,-4.592898,-5.287104,4.180965,8.590349,-1.634237,-6.061276,5.349197,5.141923,-2.969376,-2.396831,4.251650,-3.975262,-2.615244,0.517439,6.191398,0.176084,-2.735532,1.242806,-5.351929,-1.686130,-7.067620,9.649445,4.286643,-2.724268,-2.004274,-4.270415,-6.419791,1.167093,5.019855,2.842737,-4.427789,4.396108,3.679027,6.843377,0.774774,-7.347054,-5.713664,8.421787,-4.520747,0.316177,-1.286067,-2.998124,-5.817518,5.697846,-1.989843,-4.381419,-4.498832,4.014991,7.410900,1.344982,-5.264736,-2.582572,9.012247,-5.547760,2.531715,-5.538627,0.238381,7.098632,3.697880,-9.885645,2.259803,-5.462290,-8.423550,0.016848,-7.696865,-8.588389,-9.764044,8.248929,-4.383263,5.782232,-3.423276,6.822439,-1.144418,2.800782,-4.714201,9.530879,6.670867,0.488183,-3.360916,0.961884,9.048427,7.715648,-9.305684,-8.129148,1.893896,-6.272753,8.118290,1.459369,-7.473242,5.801501,-2.138436,3.040392,4.327673,1.973666,7.805015,-1.169356,-5.762585,1.462194,9.051809,7.110683,5.176723,-8.345849,-0.269044,1.764811,-9.565840,0.441142,4.658715,-1.551965,3.519625,-3.070320,-3.085414,5.813017,0.009457,7.107246,-1.320425,2.475784,0.343549,3.437992,6.519637,-4.078985,8.006040,2.094309,-6.409039,1.515629,3.138912,6.666563,9.039790,8.981472,6.574764,5.926506,1.792579,5.644568,-4.568637,-5.488342,0.265745,9.417951,-1.694888,-5.057465,0.411057,-2.083898,2.088792,-2.360101,1.599430,6.472122,8.817998,-8.565972,1.312925,2.295002,-5.006305,-0.484444,-2.290225,9.850644,-0.945073,-9.406365,1.468793,-6.861589,-2.983612,4.084780,-0.349073,-8.246761,4.827789,6.693793,-6.541909,-8.360301,-7.172831,9.712222,5.091914,-5.475050,-3.669429,9.840209,2.669963,-4.483785,-0.235073,8.189046,1.008251,-6.397165,3.537686,3.509684,-4.095138,-0.489490,-5.357053,-1.804455,-4.491350,6.514790,8.448655,5.703397,6.721664,-0.334522,5.816934,-8.038970,9.531391,-6.356880,-8.100663,-4.464498,6.408564,-2.186090,-4.844190,6.926830,9.880954,7.069713,2.224584,7.900467,6.225243,0.473999,-1.146813,3.127408,-2.292569,-0.452435,6.941871,-4.583191,0.368950,7.783999,1.053270,4.331130,0.673202,8.999770,5.129134,1.694347,-5.979526,3.055153,6.744406,-2.376662,-8.929831,-1.962041,8.979820,8.243070,8.053564,1.110723,2.855727,8.966169,9.730757,-2.932187,-0.090164,9.117702,-5.841972,6.620356,4.557055,8.258006,-2.860979,-2.973165,-1.350160,-5.822914,-6.475588,-6.100259,-8.967001,-2.537301,-4.010123,-8.214523,7.939853,7.166049,9.174528,4.930149,-2.554171,-4.932857,-7.896969,7.826046,-8.200581,4.756821,7.352542,8.337741,6.933999,0.810705,-7.925330,-1.715539,-2.894318,8.493001,-9.056962,-2.344471,5.676631,8.893579,4.010698,0.964023,0.647879,-6.689855,-4.963591,-4.984864,-9.545320,-7.262992,-3.420000,-0.432747,-5.056007,-0.435092,-8.529368,-6.324563,2.989593,6.563497,-9.197098,3.116042,7.672093,-2.295812,7.663982,-4.214853,-3.302136,-4.287598,4.763041,5.676231,-2.589046,6.546451,5.992172,-5.074632,9.538371,8.929539,-2.466195,2.237269,5.668631,-6.763331,8.638028,-8.290273,8.911924,-1.619516,6.035863,-6.718924,0.934593,-4.949073,7.703314,5.951677,-2.825754,-5.621067,2.247845,9.541311,8.310525,5.906821,-4.666752,9.988001,-6.044064,-7.282505,9.956029,8.757606,-2.707592,2.692621,1.240027,9.329835,-7.558469,-7.777311,3.837460,-4.630148,2.717105,2.045852,1.661812,9.490811,-0.915696,7.663224,6.564929,-2.542846,-9.280363,5.514045,8.990645,2.209029,1.544850,9.609595,6.206428,3.317028,-0.766228,-1.727242,6.591449,9.785326,-5.575961,-6.325770,-1.201508,1.457419,-9.400865,-0.831466,1.231455,8.962675,0.251013,-4.950517,-6.150833,-5.086895,-5.849213,-4.301488,-8.318400,-1.946890,-7.550870,-3.882476,1.165359,2.803316,2.419466,8.620458,-9.126453,6.017681,-4.647321,-8.343485,9.254642,9.278379,-9.525101,-8.598638,4.742152,3.614351,3.051790,-6.619353,0.599124,-0.666688,8.342641,-9.606530,9.694043,-3.174224,1.438518,-0.080017,1.701300,-6.546414,-1.301188,-6.252790,5.790402,3.606563,-9.823199,-2.021596,-6.627327,-2.352957,-9.459859,2.650142,-4.732805,3.794492,-5.850619,-1.811242,8.962243,6.737983,5.729832,-1.349417,2.930403,4.587767,6.858784,-6.504988,1.519430,-1.467158,2.971111,9.457518,4.563291,7.547323,-6.976827,0.241861,-8.755059,6.549206,-7.690519,9.487290,-2.803041,9.590457,-5.305302,4.170275,-5.480003,8.102080,6.577796,0.302691,-3.525700,-9.811449,4.206895,-7.937786,0.444270,3.820024,7.723335,2.581439,-6.128013,-0.851447,-8.931231,-2.942615,3.932322,-9.394792,-5.636781,8.358761,-2.620301,6.495988,2.613499,-1.195275,-0.468177,-3.767091,-9.004466,0.875072,7.742326,0.897627,0.018656,-8.974135,4.553226,3.064894,2.970513,-7.935037,-5.571107,1.910397,-6.102227,-1.011589,7.316536,-9.846992,9.863856,-9.636537,5.024527,-5.107024,9.816139,4.696135,-9.198478,-1.555278,9.146160,9.185662,4.149243,5.090456,-1.995504,-4.244073,6.764387,2.348149,-9.629891,1.255278,3.296555,-8.134594,-5.293470,-9.553004,-0.925779,-3.417117,3.189487,2.657806,-6.151302,-2.049426,2.360351,8.112594,-5.282951,9.690374,-4.922319,-0.378034,-6.184125,3.042904,4.634850,6.918847,-6.104361,3.485998,-6.905145,-2.798533,-7.008672,7.061767,3.673278,-7.881846,-9.030212,-9.237883,-4.926497,-8.415609,9.225546,8.552234,2.555769,-1.051016,8.638298,-3.642680,5.413635,-6.675166,8.927067,9.198797,-9.267651,-6.430137,1.685689,-1.247518,-2.482827,-3.201325,-6.688875,-6.825272,4.008114,2.420609,-4.692781,-1.671528,9.681850,4.429327,-2.255457,7.949791,-1.021485,1.960466,6.166413,9.199299,8.110328,0.359856,-4.476265,1.710836,7.073825,-2.571265,-1.109569,1.030114,1.483969,7.035487,6.688051], dtype = "float64")#candidate|13784|(1920,)|const|float64
var_13785 = relay.var("var_13785", dtype = "float64", shape = (1680,))#candidate|13785|(1680,)|var|float64
var_13786 = relay.var("var_13786", dtype = "bool", shape = (135,))#candidate|13786|(135,)|var|bool
call_13783 = relay.TupleGetItem(func_6152_call(relay.reshape(const_13784.astype('float64'), [10, 16, 12]), relay.reshape(const_13784.astype('float64'), [10, 16, 12]), relay.reshape(var_13785.astype('float64'), [1680,]), relay.reshape(var_13786.astype('bool'), [135,]), ), 4)
call_13787 = relay.TupleGetItem(func_6158_call(relay.reshape(const_13784.astype('float64'), [10, 16, 12]), relay.reshape(const_13784.astype('float64'), [10, 16, 12]), relay.reshape(var_13785.astype('float64'), [1680,]), relay.reshape(var_13786.astype('bool'), [135,]), ), 4)
func_13130_call = mod.get_global_var('func_13130')
func_13131_call = mutated_mod.get_global_var('func_13131')
call_13795 = func_13130_call()
call_13796 = func_13130_call()
output = relay.Tuple([call_13767,call_13783,const_13784,var_13785,var_13786,call_13795,])
output2 = relay.Tuple([call_13768,call_13787,const_13784,var_13785,var_13786,call_13796,])
func_13800 = relay.Function([var_13785,var_13786,], output)
mod['func_13800'] = func_13800
mod = relay.transform.InferType()(mod)
var_13801 = relay.var("var_13801", dtype = "float64", shape = (1680,))#candidate|13801|(1680,)|var|float64
var_13802 = relay.var("var_13802", dtype = "bool", shape = (135,))#candidate|13802|(135,)|var|bool
output = func_13800(var_13801,var_13802,)
func_13803 = relay.Function([var_13801,var_13802,], output)
mutated_mod['func_13803'] = func_13803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10432_call = mod.get_global_var('func_10432')
func_10434_call = mutated_mod.get_global_var('func_10434')
call_13829 = relay.TupleGetItem(func_10432_call(), 0)
call_13830 = relay.TupleGetItem(func_10434_call(), 0)
output = call_13829
output2 = call_13830
func_13833 = relay.Function([], output)
mod['func_13833'] = func_13833
mod = relay.transform.InferType()(mod)
mutated_mod['func_13833'] = func_13833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13833_call = mutated_mod.get_global_var('func_13833')
call_13834 = func_13833_call()
output = call_13834
func_13835 = relay.Function([], output)
mutated_mod['func_13835'] = func_13835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13116_call = mod.get_global_var('func_13116')
func_13117_call = mutated_mod.get_global_var('func_13117')
call_13850 = relay.TupleGetItem(func_13116_call(), 1)
call_13851 = relay.TupleGetItem(func_13117_call(), 1)
func_11335_call = mod.get_global_var('func_11335')
func_11336_call = mutated_mod.get_global_var('func_11336')
call_13852 = relay.TupleGetItem(func_11335_call(), 0)
call_13853 = relay.TupleGetItem(func_11336_call(), 0)
func_10432_call = mod.get_global_var('func_10432')
func_10434_call = mutated_mod.get_global_var('func_10434')
call_13862 = relay.TupleGetItem(func_10432_call(), 0)
call_13863 = relay.TupleGetItem(func_10434_call(), 0)
func_8109_call = mod.get_global_var('func_8109')
func_8113_call = mutated_mod.get_global_var('func_8113')
var_13876 = relay.var("var_13876", dtype = "float64", shape = (160,))#candidate|13876|(160,)|var|float64
var_13877 = relay.var("var_13877", dtype = "float32", shape = (11, 9))#candidate|13877|(11, 9)|var|float32
call_13875 = relay.TupleGetItem(func_8109_call(relay.reshape(var_13876.astype('float64'), [16, 1, 10]), relay.reshape(var_13877.astype('float32'), [99,]), ), 0)
call_13878 = relay.TupleGetItem(func_8113_call(relay.reshape(var_13876.astype('float64'), [16, 1, 10]), relay.reshape(var_13877.astype('float32'), [99,]), ), 0)
output = relay.Tuple([call_13850,call_13852,call_13862,call_13875,var_13876,var_13877,])
output2 = relay.Tuple([call_13851,call_13853,call_13863,call_13878,var_13876,var_13877,])
func_13881 = relay.Function([var_13876,var_13877,], output)
mod['func_13881'] = func_13881
mod = relay.transform.InferType()(mod)
var_13882 = relay.var("var_13882", dtype = "float64", shape = (160,))#candidate|13882|(160,)|var|float64
var_13883 = relay.var("var_13883", dtype = "float32", shape = (11, 9))#candidate|13883|(11, 9)|var|float32
output = func_13881(var_13882,var_13883,)
func_13884 = relay.Function([var_13882,var_13883,], output)
mutated_mod['func_13884'] = func_13884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11585_call = mod.get_global_var('func_11585')
func_11586_call = mutated_mod.get_global_var('func_11586')
call_13911 = relay.TupleGetItem(func_11585_call(), 1)
call_13912 = relay.TupleGetItem(func_11586_call(), 1)
output = call_13911
output2 = call_13912
func_13923 = relay.Function([], output)
mod['func_13923'] = func_13923
mod = relay.transform.InferType()(mod)
output = func_13923()
func_13924 = relay.Function([], output)
mutated_mod['func_13924'] = func_13924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12208_call = mod.get_global_var('func_12208')
func_12209_call = mutated_mod.get_global_var('func_12209')
call_13979 = func_12208_call()
call_13980 = func_12208_call()
func_7098_call = mod.get_global_var('func_7098')
func_7102_call = mutated_mod.get_global_var('func_7102')
const_13989 = relay.const([1.702764,-1.170547,6.648324,4.227598,1.412108,-7.270032,5.319850,-5.554002,-1.859145,0.783903,2.640919,6.807656,2.619694,2.902763,-9.934245,-9.002752,-9.272189,-5.473513,6.300420,0.810490,-9.410799,-7.563461,1.621492,-3.096166,5.957205,1.240817,5.494466,-1.814277,-0.699054,4.431066,-6.082122,5.873199,6.424141,-2.036140,7.181589,4.719123,-0.298155,-9.157411,-5.570959,8.639151,-5.552129,-0.408082,7.204761,-3.274467,4.520957,-3.374044,-8.164400,-6.696962,-6.030994,-1.303596,9.097034,5.144041,7.990902,5.704264,-2.574454,4.552156,9.719666,4.974029,7.441495,7.966239,5.578825,-2.777637,1.166780,7.546590,-5.913490,8.147432,8.512738,0.440167,-0.017545,6.681500,3.867851,5.644151,-9.711378,3.736059,8.150499,-4.564509,8.134425,-3.095824,-0.212524,-9.527950,5.235394,-5.753815,-4.724452,6.471940,-3.495893,0.807720,9.430107,-5.855867,0.626525,8.202127,-4.434629,-9.112110,5.045156,-3.681499,-7.638352,-3.197358,1.923699,3.642814,-0.708615,-7.051180,4.872486,-2.920172,5.689318,-9.854538,-1.463403,5.317543,-9.343929,-4.184880,-7.682653,3.674192,7.325451,-0.978125,-4.055242,-6.924659,-4.391888,7.225275,8.173778,-8.231597,-4.033501,1.483846,0.613898,-2.979051,-4.292684,6.909577,0.705922,-4.281434,-5.959039,5.459750,-9.048793,3.131138,3.970680,-6.335704,-5.233407,7.856212,6.857224,3.426804,1.571949,-5.898897,5.151427,-5.272244,-8.593692,2.063122,5.021928,2.896132,9.706015,-7.334294,4.283485,6.052966,2.197836,3.121437,1.289390,9.214972,-2.288048,0.370763,9.742804,-1.240813,-4.039796,-4.661247,5.899149,2.360265,-2.138673,2.482282,-9.418960,1.605913,4.979854,-6.506153,-4.852963,7.688098,-3.615990,-0.271812,-2.683647,9.499605,-2.622578,-6.531824,-6.646477,-6.732288,9.741277,-2.456214,-1.084530,2.877930,-8.974525,7.382768,-1.271963,2.277582,0.937117,-9.354600,8.200413,-0.130535,-7.307658,6.429794,-6.957230,0.433292,0.615689,1.110858,-9.123240,7.182202,-1.566463,9.614978,1.061463,8.784163,-4.331414,-3.523416,-5.957979,2.170404,3.554469,8.333736,1.025931,4.534495,-7.784103,-8.591364,4.885299,-0.442268,-9.923991,-8.834719,-9.580104,-1.692041,-4.182168,-3.024027,9.691905,0.580941,-4.392077,-6.739098,5.086397,-0.984954,-3.000579,-3.211629,-6.753375,-0.017389,-8.243655,-6.098745,-2.899021,3.613520,0.997876,9.783807,-8.336447,5.172414,0.992526,-9.452876,7.379606,6.927563,3.777106,-4.241769,-6.828565,7.113637,0.960601,6.122707,-7.321478,-1.222079,2.837886,8.919199,-9.664335,-1.560495,-2.289810,7.202504,-2.883731,-5.289428,-1.231977,1.919906,3.053370,-6.542210,6.558692,-3.374940,-7.144652,7.827869,2.489514,5.074938,-0.253928,9.359506,-7.440183,-7.288363,5.996219,3.660923,3.803064,-4.212319,0.057760,-9.516061,8.103348,-1.935749,8.820146,6.632555,-2.727284,3.680565,-8.075764,-8.219908,4.391310,1.699733,8.611175,-8.539956,-0.929533,4.173106,1.126064,-7.818931,-9.570882,0.657570,-6.137514,-4.728701,3.098812,2.799374,8.131307,4.525122,0.652225,8.400344,1.146620,2.695614,9.880898,9.418853,-1.804101,8.560237,-5.101756,5.161742,3.923961,-5.046262,9.316264,-3.577547,7.803160,5.115306,9.075470,6.257061,-3.766690,-9.061959,6.103169,5.138558,5.528752,-7.983932,7.545577,-7.511269,-5.021524,3.960762,8.614037,-6.301007,8.024582,6.638196,-7.909918,6.421394,9.520099,-4.438294,0.755289,6.031147,-3.446627,1.949620,6.664060,-4.496590,-2.687959,8.304830,-4.046506,-0.453029,4.989254,-7.332017,-0.275863,-9.086278,8.159204,-0.735673,-9.944265,5.831183,8.637718,-0.985338,-4.755655,-4.467076,7.671666,-1.193640,6.100770,5.692748,-7.172423,2.096725,-0.921293,4.747861,-1.338029,-5.143788,0.795234,-7.547546,-3.029825,4.348675,5.625347,7.454450,1.660508,-4.506601,-3.434263,5.591014,0.978673,0.190240,-3.193390,8.611467,-5.850144,-4.736060,3.083991,8.421514,7.768338,9.293068,-0.060775,5.075941,-3.187311,4.351187,-3.187192,-1.208125,2.276547,4.201802,-1.055760,-6.307611,-3.197564,-7.508320,4.513514,-7.414532,-5.682629,-1.395386,-7.444419,-3.881702,7.757088,-6.053679,-6.057310,-1.514894,-3.157578,7.026481,-0.831484,-7.226394,-0.544827,0.220754,-8.982892,9.415557,7.454723,3.831867,8.923421,-0.618711,0.620224,-2.235305,1.509232,3.908952,-4.179300,-0.192678,8.369272,-0.652758,5.232198,0.201223,8.879692,-0.800061,-5.961349,-0.990618,8.819420,1.122955,1.468943,-5.579244,-3.653243,3.859989,1.617672,1.026929,-0.088131,-2.249512,1.134333,4.637054,-8.874802,1.518527,7.360972,5.618391,9.009964,-3.137425,-4.497954,0.416273,-1.720686,-5.385910,8.886451,-9.712775,4.593029,8.946681,5.800476,5.655170,4.464727,-7.484298,-4.410763,4.386780,-1.579934,2.071219,5.142573,4.311948,4.786179,8.395357,-5.178999,-8.825296,-7.899462,-1.234751,-0.425646,-1.046529,4.567256,-5.509145,-8.411378,7.586304,9.965784,3.435751,4.172423,6.941807,-3.034600,3.616722,-5.731505,-9.437468,-5.065928,-5.458661,-9.172859,-3.737127,-4.105056,-1.168074,-1.088365,1.831176,-4.474721,-9.970975,-3.905881,-9.661541,-5.774586,4.797069,3.550615,-9.164689,-1.496002,-5.939193,2.904920,-2.943814,5.898074,-6.850547,-5.602790,-3.828685,-8.078432,7.489283,-7.544623,-5.710620,3.923319,8.251505,7.647945,-4.673006,6.773577,5.635860,2.394490,-7.298065,-4.575516,8.484352,-8.575459,6.492936,-3.610777,7.630452,-2.079793,-9.472674,1.556709,-2.335629,6.631384,2.003700,8.351619,6.392362,-3.705411,9.601535,-1.792243,-2.892610,-6.625996,4.528379,-1.191873,4.231749,-1.511718,-4.636626,-5.319115,0.020740,-1.908351,-6.829052,2.382662,-8.678102,4.307092,-9.814868,-4.764696,-3.774551,-3.453499,-4.212720,0.694162,0.920199,8.539386,0.471754,-2.184822,4.250823,0.507207,-4.656766,7.588750,9.558998,-0.958804,-1.821176,-6.199693,-3.575548,-1.018850,6.167242,-9.892231,-1.037580,-7.525745,2.164402,-2.182464,2.583180,-9.470228,-8.041537,0.535212,-4.147045,5.151266,-9.429719,-2.022948,-3.855419,6.759415,-5.236916,-3.448163,2.586741,-7.578898,1.616440,4.674861,6.563443,-2.691630,0.340721,4.243686,5.467407,-5.289333,-8.094600,-4.073281,-0.567205,-0.009090,-9.366648,8.781389,8.657308,-2.767601,-2.769152,-8.038236,-2.134767,4.095949,-9.258521,5.210426,5.427493,8.736029,-5.808092,-3.565708,-0.956241,0.389897,9.463535,-6.952461,8.537245,4.746074,7.916046,0.044749,-4.630994,8.673361,5.865247,-0.551484,7.192315,-2.882619,-3.042487,-4.710364,6.979748,0.465444,-4.411007,3.037830,-3.606383,7.133565,-0.861028,0.058339,8.955436,9.399271,-6.575672,9.835415,-4.926292,9.794013,-3.554059,1.834421,-3.165612,-5.818534,-5.756175,-0.662971,-9.549002,-1.703515,-9.523288,0.440552,2.431310,-7.549181,-7.744380,1.413673,2.897157,6.474276,-1.905303,1.377821,5.622924,5.010642,9.734785,8.579650,3.284261,8.134013,1.708188,1.574955,7.489213,-0.387938,9.955849,-4.737746,1.400247,-9.739959,-7.552869,-9.654519,4.841179,-4.638988,3.507142,-1.988080,8.389006,-4.786688,-4.013443,4.937915,6.994493,4.088441,3.073339,6.150480,-9.983966,-6.639738,1.450141,-9.272653,-9.224726,8.555881,-9.602942,-0.582423,1.519063,2.284706,-9.470471,-7.338977,-0.711712,-5.020492,7.110900,-8.350202,1.581302,8.880439,1.609072,4.653742,-2.808002,9.637378,-4.170430,-4.625952,-6.675562,4.994645,5.344577,-5.404246,-0.153851,3.991157,-7.004713,0.395734,1.145041,-7.275619,-6.817921,-5.850878,4.272938,-5.151835,-6.822162,0.233079,-9.284132,5.127688,-9.569686,3.818317,5.079491,7.772542,9.100884,7.057106,1.978897,5.929353,-3.080569,-1.201906,-2.069150,1.213822,9.059114,4.149540,-2.542878,4.903217,1.231081,5.116760,-0.451508,-4.250904,1.340264,-6.492432,-7.156195,-9.975280,5.059243,-9.202879,4.881550,-4.189879,-6.314390,-9.336953,8.354384,-3.348878,6.648818,0.695432,-6.098491,2.985630,2.150986,-7.238516,1.260618,-6.630210,7.083297,-1.412563,6.705469,9.535266,7.909422,-2.672762,-5.502180,0.395852,-6.097929,9.637331,-9.902452,-1.998188,-7.692999,7.435139,3.957827,-0.399068,-1.354118,-0.491924,-2.942169,-8.220838,5.550215,-1.330490,1.316143,7.548295,-5.723351,-4.795998,2.358754,-3.911066,1.924943,-2.935698,-7.557099,6.311075,5.687735,-0.358067,7.998897,2.349105,0.145043,-1.862093,2.368647,-5.357833,-9.497210,5.422612,8.244751,8.195946,3.793647,0.053073,6.247944,8.195415,-4.582127,-0.772907,-9.792414,8.518121,8.553396,-4.610873,2.356155,-4.272570,8.279669,-5.911109,6.062011,5.533336,6.704076,-1.141747,5.679508,8.604554,7.019916,9.989730,-2.178650,9.340578,2.696844,-4.803141,-9.286645,-6.791008,-4.827527,-9.950029,9.901864,1.635513,5.578989,3.511387,7.143101,-2.237705,-0.757929,-1.820058,-9.682033,-4.048238,6.835837,1.315058,2.349341,0.800283,-4.762228,4.881808,4.400788,-5.258575,8.721791,8.673776,-0.927265,4.086334,6.637580,0.585286,-0.698021,9.530205,3.296628,7.375639,5.758134,-7.725051,1.783887,6.740042,-4.177337,4.367421,0.534525,-6.302405,-6.704908,-9.815412,7.075102,-9.120499,4.162494,0.102078,-6.232139,4.919071,7.967000,0.686124,4.504220,5.726024,-2.176229,3.793954,0.399340,5.031276,-9.968691,-2.906049,-3.269748,4.897126,-1.012162,-3.764455,7.801310,-7.489990,6.615696,3.342570,-6.497935,4.146782,3.550836,-6.784388,-6.495501,8.964457,0.353470,2.668622,-3.567658,6.371842,6.967058,9.871028,6.063778,-5.951969,7.001469,-0.334943,-4.291699,-4.065225,-7.158895,6.641985,-6.006884,2.650083,-5.355606,8.636318,4.836465,6.360238,-8.364861,-6.260511,9.690029,2.856307,-5.799280,-5.403508,3.741950,9.663470,-5.872394,-2.528150,1.487217,-7.059525,-7.175773,-3.146882,4.260298,9.057843,-6.530098,6.942458,-8.723761,-5.739097,-7.436209,0.599561,6.555576,-0.777999,7.796987,-3.548634,-6.698394,-4.336865,4.704698,4.105322,6.644421,-8.523024,-5.306030,7.180805,-2.061017,3.912648,-7.020953,-2.879489,8.451941,2.073342,-5.794423,1.793887,0.277456,8.228073,-9.758781,0.753506,5.510272,5.114579,5.669244,-9.813781,-9.774858,3.143456,5.795199,-0.590651,-8.113885,0.485325,-0.188638,7.127389,7.389215,-5.029149,8.240896,0.389534,3.282390,-8.190914,5.931495,3.631921,0.086454,-0.255421,-8.304069,8.220111,6.019734,7.190300,-7.405142,3.722719,-8.786789,0.731840,3.791233,-1.041838,-1.091245,1.066642,-2.876168,5.189270,0.760304,-0.692652,9.443414,-3.892881,-1.025609,-6.129611,7.579929,-4.354712,1.179681,8.240211,-5.745600,1.155119,8.217399,-0.493765,3.374609,7.552463,-3.306555,0.512354,0.060971,-4.041008,5.948925,-6.106305,-0.884608,-3.047239,0.710499,-1.011323,-9.020052,-7.857793,-8.883821,4.460792,-8.298725,5.483136,-8.554237,-6.275246,-5.531943,5.358248,7.634896,-8.599302,1.156757,9.744135,1.999364,-3.573360,-7.751078,2.819519,-0.409891,-1.784139,3.709701,8.293069,-7.803274,9.515072,-8.620016,8.726155,0.287725,7.142233,-5.879484,6.212513,-9.228166,7.366564,-0.467720,2.688297,9.009191,2.338445,6.063165,-1.731173,2.047059,2.752623,9.971977,8.403411,-4.464539,4.221228,-9.100461,-9.776607,-6.828316,1.531917,-8.540887,1.495640,-0.296655,-8.620684,9.371923,-5.011189,6.766840,-7.618912,-0.952802,7.568055,-7.051618,7.014756,6.869026,1.579953,-4.915160,-4.017217,-1.747802,-3.111980,-3.099638,-5.070838,-3.613318,-5.266795,-8.441998,-4.205171,7.692685,-2.734418,-3.657833,-5.784202,6.394902,6.685563,-1.965577,6.205482,-1.563974,2.475371,-9.069171,-5.699900,-9.359249,-0.953017,-4.263462,0.745188,-1.484020,1.564631,-1.553880,-4.028618,-8.147529,6.393333,9.688238,1.176373,-1.254898,9.751650,-5.498394,8.472579,-2.260707,-3.384749,-9.578919,-2.127031,1.618770,2.077295,1.606638,7.990762,-6.078619,-4.381552,5.416019,7.581060,1.905885,2.795830,-4.314009,-2.775974,-1.910863,6.699686,7.425593,-3.425918,-8.232978,-0.074744,5.967739,5.019809,-7.678958,-0.535243,0.026598,4.558160,-6.611855,-0.066465,-2.283014,9.810463,3.527239,9.521021,5.597150,4.594054,-9.636417,4.463908,-1.496701,0.987767,1.930507,-9.988394,1.945876,1.118720,-1.495137,-6.938835,-7.480275,-3.773693,5.826425,-6.975671,0.359366,-9.859119,8.067875,8.676364,-5.564759,-1.938646,-2.904919,-5.905476,2.498964,0.979358,2.000808,-3.883800,-5.783159,-2.138915,-7.342727,-3.327466,-5.439931,1.458411,-2.492707,1.894592,0.518329,-6.427538,6.541129,0.711025,-3.598233,-8.169696,5.437670,-9.986317,7.680633,8.107281,1.020795,5.429259,-2.770493,-4.917446,-3.973563,0.679999,4.685738,0.226661,-9.366969,8.329962,-8.884183,-9.802316,-7.442470,9.220124,2.708118,-1.267828,-4.305084,8.711685,-6.771936,4.137398,4.575450,5.305596,4.792907,7.666174,6.067814,-2.068962,8.662693,1.908419,8.299249,0.822651,2.976885,-4.501261,-5.073582,-9.347168,0.033503,9.175093,-5.477527,0.001875,1.748336,5.652299,-7.116315,-8.028313,0.323062,1.167266,-3.526548,1.812429,-4.719424,4.768608,4.215212,-6.532415,-2.039778,-0.295243,-2.954100,-2.693782,-0.907098,-5.981733,4.568250,-0.269943,3.278205,-7.247423,6.157921,7.564163,1.486172,-6.012505,9.767716,9.959609,-4.233875,-0.566821,0.697463,-2.152775,6.484192,-9.025555,-4.026149,3.864080,5.850651,4.881300,0.951333,-7.201205,-8.791655,-4.651743,6.910812,8.158970,0.546320,-6.768005,-9.884626,-2.613705,-3.287979,-3.161151,-4.726303,-1.387383,2.119494,-3.334836,-0.205283,5.708086,1.588137,-4.560464,9.079099,-7.129885,-9.535980,-8.836268,7.720947,-8.289475,4.839119,-2.629418,-2.135632,8.594290,8.673308,-3.707099,9.299172,-1.343368,5.998185,6.177013,-8.925392,9.572089,5.050845,8.388865,7.833531,-7.140012,-0.644578,-3.386807,5.061975,7.214947,1.280671,-9.346209,3.930089,0.824107,-3.210688,-9.675427,-6.760098,5.640350,2.746492,-6.097966,-3.612554,8.959521,-0.518282,8.063679,-2.837609,-0.244790,-4.328284,-2.141645,5.416833,9.590247,-8.948266,-2.058391,2.947523,-5.543298,-1.932702,2.487091,1.663014,8.487284,-8.483031,2.476206,7.145638,-3.011193,8.667024,-3.103677,-1.361398,-5.451672,4.747217,4.539121,-5.860574,5.328380,7.944049,4.064309,6.827717,-1.295461,8.611793,-9.582948,8.744728,-0.376934,6.430701,5.971049,-6.572543,8.588211,-8.753308,7.196343,-1.123162,5.963486,6.625084,9.593781,8.710067,0.100055,4.227374,-0.131955,-1.722718,5.882310,3.091813,-9.644806,-5.432229,5.048524,-3.099251,1.986854,1.863877,-3.825544,3.481973,2.661210,0.850386,3.457362,9.538647,1.821036,8.100927,2.399437,6.046871,-4.378088,9.283711,-8.731115,-3.477509,0.014169,-9.475386,1.813369,8.951296,8.515053,9.849529,2.671323,-1.582865,-5.971396,-4.923225,-9.593351,2.740990,5.311381,-3.214297,7.664772,-9.279882,-5.947415,-0.020222,-3.043324,-7.737511,8.548221,3.562129,-8.127884,6.579623,1.273016,1.666386,-1.271692,-4.684836,9.958154,3.003705,-4.413577,0.539714,1.201778,-5.808229,1.169460,8.338927,-8.799043,-2.155095,-4.915821,1.507126,7.764390,5.642504,-9.832390,2.193716,-6.887603,-6.641815,-1.053305,3.305954,2.320330,-2.448772,-1.289746,7.846871,-6.485447,-1.571880,-6.770862,-9.760296,-0.353025,1.264572,7.970596,-7.129946,8.431026,-6.277927,4.957868,7.609214,1.985406,9.673116,8.231899,-3.528705,-6.000890,-5.761648,6.796952,-1.895659,-9.893563,-9.042472,7.007158,5.951768,9.074296,-2.141671,5.895151,1.844034,3.711107,0.701924,-2.999476,-0.407319,-2.394386,7.117675,6.402683,7.946784,9.439288,-6.887911,-8.354190,4.521815,8.941761,-8.700918,-9.724374,-2.465052,4.623169,-0.380839,1.382041,-8.308612,-7.950651,1.920814,-7.006301,8.440115,-4.726243,-1.109254,-0.956531,-6.036758,8.208871,-9.214362,9.992576,-6.385772,-0.686378,-2.885081,1.950669,7.396703,-7.035243,-1.185276,0.614556,-9.619696,0.440025,2.039323,-8.474972,1.516929,-1.577457,8.219372,-8.596387,-6.384161,0.305169,5.350531,-8.026426,-2.248704,9.420899,9.456254,-4.992116,2.170443,-7.637184,4.282147,-6.575126,-0.785195,7.068776,-5.952984,6.148149,-1.326001,7.529536,-7.256075,8.597987,-3.289752,5.505637,7.516450,1.060610,2.837631,4.133882,2.066297,5.043067,8.724860,7.372266,7.551731,-4.628350,3.984981,2.909254,6.911214,-2.592044,3.560101,0.310915,-1.214863,4.596519,-2.616834,-0.062610,2.732774,-1.460086,-5.978806,-0.278949,-2.502099,-5.818333,2.850081,7.962577,-9.096800,-7.561172,3.352435,-8.138564,3.351487,9.634745,0.311144,6.003467,-4.067400,8.548519,9.724198,-3.011192,-9.033135,-2.915303,-1.248999,0.703034,9.022659,-4.251319,4.440652,-8.407283,8.367498,4.515214,-8.067150,2.702553,-2.668594,7.930344,-3.697319,0.748087,-9.405889,-8.430183,-5.595088,4.636863,-4.462840,-4.622056,2.825191,-9.229126,4.623979,4.040059,-4.439181,-2.205470,9.817627,-1.234653,3.566740,-8.164200,9.656670,-7.510675,-9.047297,-8.499237,2.250525,0.263413,8.738600,2.261781,3.676908,-8.363162,8.697252,-4.256916,0.919553,6.426930,-7.215717,-6.697079,-8.050320,8.628665,9.238255,6.288427,8.762822,0.186067,-2.137376,6.179384,3.107312,3.980161,-4.177121,3.470792,9.575578,-6.397423,-2.840146,9.128510,1.461357,-0.818949,-4.429544,9.647028,-0.777702,8.075636,-4.609204,-9.452068,-0.156072,-3.109670,1.457016,-4.682264,-1.736452,-4.252324,-7.917038,-0.612610,2.810680,-4.359475,-3.304364,4.878807,-9.329080,-0.586736,3.716772,-6.313283,-2.756849,-8.364750,-4.941101,-4.416538,3.577524,5.781247,3.221635,1.236507,-2.844320,-4.095780,8.576471,4.895661,-0.953268,-0.103976,-4.459006,-4.132109,-2.849127,-7.295484,5.452242,6.902895,-3.662964,-2.436155,-3.092487,-7.596695,7.307718,-2.116568,-7.017068,-2.325043,0.173759,-5.742137,4.349725,-4.259887,1.794477,-1.954032,-4.142236,6.474339,3.202644,-7.507500,3.005801,-3.080170,9.679908,7.863605,2.420574,1.949718,6.005130,-2.752332,-8.145899,-3.688070,-8.192014,-0.761584,-3.456350,9.537097,-0.289102,-6.753405,-0.417340,-2.778691,0.684936,2.920837,-3.943836,5.674503,-6.080839,-7.120525,-7.854558,-1.725996,-0.881599,4.930094,-9.084229,-0.878949,-2.204478,-7.938639,0.702731,9.055906,-4.821909,2.009777,6.496070,-5.289864,2.319333,-3.790902,2.954195,-8.628730,7.878010,0.497736,-6.203195,-4.541211,-1.853602,3.768701,-5.640283,-5.805872,5.131564,3.689926,-5.283511,-6.591383,-0.278364,0.189686,3.361896,7.315302,-1.085729,-6.936064,-3.363047,8.302786,8.693248,4.977230,2.827665,-1.466335,6.011230,6.862607,-1.111073,8.435764,-7.600873,-4.961411,-0.509658,1.762423,-4.657905,8.580696,-6.055633,7.375798,5.102810,8.442916,-7.272622,8.081775,2.648631,5.386084,-4.939498,1.432787,-9.268656,-9.657972,1.510798,3.644516,4.227307,1.536954,8.822251,0.836258,8.383263,-0.309212,6.305349,4.062539,-1.527801,-4.937681,-4.654291,-9.359020,1.954310,7.742783,-4.253706,3.054115,-4.802076,4.287300,8.801700,-8.664778,-0.928619,9.391841,3.495594,-0.893336,2.981450,-0.837965,-8.456657,-2.358389,-4.955780,9.239578,-2.651755,-1.358335,4.400011,4.690606,0.774276,5.536575,-5.398705,6.760809,8.977601,8.316234,-6.050603,-9.452884,-3.449497,-8.967492,0.029473,9.080165,-0.094869,-5.302107,-9.189642,4.817576,0.871571,5.921453,5.733952,0.008507,-8.193920,0.224816,2.715040,-2.734690,8.535737,-5.824847,-5.171532,-7.073143,1.936923,-0.710248,-2.565383,5.710137,-9.275079,9.905025,6.954909,-2.811585,-0.844016,-5.926777,-8.675287,5.435573,-3.869010,-4.337435,-0.131705,6.868522,5.418553,3.496391,7.119389,2.317430,7.788174,1.732289,-1.830861,-8.580226,-9.231996,-2.000394,4.295743,-6.929202,3.020198,-4.033089,1.389926,4.917101,1.671152,6.037635,-6.794171,-6.395539,9.041541,-8.336654,-0.902250,-7.910951,-0.534170,7.861875,7.651750,1.895733,-7.568035,-7.010281,2.336813,-0.718844,-9.817201,-3.147239,-8.865307,-4.698447,-0.989124,5.479853,1.327495,3.102995,-7.978107,-9.521116,-2.953472,-6.988273,4.092744,0.749696,0.571786,-4.616998,0.684884,-8.249515,5.768705,3.569783,9.537056,-1.798008,4.191056,-8.496087,-2.582959,7.826359,-3.592907,9.673570,-8.502955,8.283043,-7.471795,4.467927,-4.990781,-0.958064,-4.532438,5.537100,-0.516538,-1.441621,-3.288934,-5.360237,5.391504,3.421585,3.809579,-7.552379,1.418428,6.118045,0.640358,7.837145,-0.817361,5.013514,-8.368772,9.792511,6.344130,-3.747025,-4.197993,-6.535667,-6.661380,-6.954170,4.444896,8.647498,-8.555076,-4.731586,5.855931,5.981627,4.532586,-3.874521,4.629310,9.789076,7.854464,-2.270661,-7.644713,-8.016881,6.257987,-7.526760,6.527230,4.562702,0.725446,2.265129,-0.430041,-8.613859,3.983200,8.800592,-9.095409,5.552302,-0.931379,-5.705673,0.963363,9.928314,9.073748,3.316721,9.319333,-9.706901,-1.940935,1.061571,-0.076537,7.358640,-4.520469,-2.614260,2.800450,-8.614568,-4.772760,-5.570814,9.059212,-6.722224,2.697065,0.396687,-6.865139,8.004734,4.865787,1.740247,4.858924,-5.157557,3.338557,-8.244948,-9.322275,-4.242829,8.443730,-1.572563,-3.617956,5.317196,-0.417872,-9.849866,-9.626722,-4.029785,-6.302770,4.888572,-0.169676,8.258173,3.690427,-0.180260,5.647938,-2.597378,2.495501,8.746395,0.254851,2.540742,-3.579439,-0.943626,-0.943258,-2.662960,9.330286,-8.977019,1.189237,2.963240,9.976717,5.721183,1.811313,-5.133823,-6.526772,-5.690316,-2.443044,-6.027473,-5.297480,-8.271457,7.454540,3.629307,-6.823486,-8.273047,-6.468609,-3.459729,8.021656,-5.642502,7.345150,4.588977,-3.564444,2.539025,2.936242,8.684926,0.905195,-6.827124,3.103989,0.979043,6.183628,0.540735,4.275690,-8.231794,6.487226,1.947687,4.238785,0.396054,8.012781,-4.289948,-6.095349,-5.945839,8.014158,-7.649938,-9.803544,6.207343,9.944747,8.569142,-2.740708,1.837685,-4.708755,6.616677,5.296675,-2.093863,2.362505,9.679780,-5.647830,3.696915,3.829378,-1.355342,5.519906,2.558219,9.816744,-7.536490,-3.743531,2.057655,-8.358153,-2.899716,9.621567,-7.655765,-0.043571,-9.738938,4.087930,-6.477617,7.233188,9.280607,-8.417699,5.814567,3.826952,-6.874309,2.632235,5.705800,-7.751710,8.507444,-9.178133,-1.906191,-0.383586,4.747875,6.363148,-0.506791,4.552900,2.960975,-5.198333,7.735271,-2.909946,-6.355541,2.611120,-9.305614,8.655849,-2.482463,4.337597,-7.003462,9.937300,-8.910259,-1.921335,-7.837752,-6.887880,5.761138,-3.754163,-4.968415,-6.728042,7.457592,-9.620511,5.465383,0.519253,5.494566,2.169102,-8.385255,-9.590054,0.992147,2.524715,-4.353042,8.257964,5.754822,-3.825266,4.752210,-0.766019,-2.323766,-2.086478,-3.734598,0.309691,-5.184674,-0.015477,-4.354159,0.134785,6.718436,3.164984,-9.408553,6.075545,-1.379158,-7.419338,9.736112,-5.362911,2.730955,7.151909,8.613446,-6.418052,5.815052,-6.190397,7.656672,9.890612,7.481250,-8.934573,-9.407104,7.388361,9.804362,-7.240775,-6.595693,-9.915405,5.753310,8.879961,7.944907,-0.601087,-1.259640,-4.252568,1.062406,-4.883541,-0.371674,-5.288297,1.121159,5.635021,8.556281,8.711429,9.506010,-4.506024,4.268032,3.366241,8.197180,-2.599161,-8.453978,0.640050,-6.451428,-6.899747,-5.393964,8.360883,-3.914630,-3.147310,-9.019956,1.446265,6.103691,-6.996215,-5.500429,8.687864,-2.182129,2.985028,-9.888144,-5.684090,1.541523,2.175764,4.996982,3.096131,-3.942870,-4.689534,8.515648,-2.561284,6.694686,9.825489], dtype = "float32")#candidate|13989|(2304,)|const|float32
var_13990 = relay.var("var_13990", dtype = "float32", shape = (42,))#candidate|13990|(42,)|var|float32
call_13988 = relay.TupleGetItem(func_7098_call(relay.reshape(const_13989.astype('float32'), [2304,]), relay.reshape(var_13990.astype('float32'), [42,]), ), 3)
call_13991 = relay.TupleGetItem(func_7102_call(relay.reshape(const_13989.astype('float32'), [2304,]), relay.reshape(var_13990.astype('float32'), [42,]), ), 3)
func_2393_call = mod.get_global_var('func_2393')
func_2395_call = mutated_mod.get_global_var('func_2395')
const_14008 = relay.const([9.651423,3.533538,-2.783645,2.059624,7.406286,-3.565559,6.122124,-2.142375,4.648047,0.778885,-7.624985,0.744389,-5.332572,-3.748044,8.668488,2.479628,-2.615321,1.066333,-7.872841,6.326435,-5.943722,4.544511,-8.833701,4.616492,3.585868,-8.917446,-7.574868,-4.370417,2.120130,-0.508685,8.103483,2.823405,-5.246391,-4.540161,-8.177337,6.212504,-9.812918,-2.748018,-3.843255,-2.832377,-6.768966,6.348194,-6.318430,-1.344195,0.897793,3.444522,-5.571959,-9.515746,4.181913,6.771003,-3.229341,-0.269512,-1.115317,-9.547817,8.138218,-6.374118,9.925193,-4.222545,2.940564,-2.562465,0.326815,7.576017,-7.970730,8.913313,5.700284,0.354697,3.726394,-1.742009,9.413050,-7.974216,9.837784,-3.092314,-4.635942,-1.241516,0.180113,-9.192497,-8.766681,-0.728438,-0.390282,3.250189,2.482892,7.656010,-8.211397,-3.461022,-4.057536,-9.917577,7.001436,5.765341,4.823563,-6.616777,-6.875284,-6.001455,-6.891995,2.282386,-7.618653,-9.572977,-9.039189,-7.931374,0.001782,-2.014816,1.422109,2.812297,3.751645,-7.999040,3.029495,-5.340788,-7.599968,-7.458692,7.280235,7.794502,-2.738252,7.545743,5.602874,-3.728601,-3.085963,8.914980,6.882718,9.746204,4.830133,-1.008841,-6.540807,-0.266602,2.423912,3.191192,-5.767971,-0.397292,9.249397,3.192267,2.751755,9.973223,-7.424484,8.650006,-1.006431,1.466514,-3.923807,-1.124765,-3.424625,2.623309,3.352791,-0.028859,0.967540,6.792146,2.207515,-7.266029,-4.878290,-9.490041,-4.580125,-0.508973,-7.111895,-3.701981,8.368613,3.526503,8.455799,4.164684,-2.633319,-9.046422,-4.048891,-0.306097,1.063659,-0.448010,-1.208457,-8.371382,-8.424027,1.978277,-4.505767,-5.183300,-2.910956,0.084325,-6.111298,1.765590,2.273718,3.185619,4.119436,0.170101,-2.280166,-8.261842,-1.916738,4.604412,4.707490,-1.815443,-4.932699,-9.678848,-8.782328,-4.000762,-4.194595,8.633001,3.905850,-1.849926,-6.350609,8.371879,6.641371,-8.424924,8.072730,9.633356,-2.841188,-9.148943,-9.087864,-1.086998,3.383352,2.290869,-4.680475,8.609333,9.951852,-9.225129,7.297471,-8.929152,9.678206,-3.823801,-3.839265,8.264641,7.118659,3.337572,-1.658187,5.146459,-0.074229,-7.113325,2.862972,5.857962,7.976092,3.323223,2.475287,1.532809,-7.711158,0.361163,2.388263,7.554406,0.134828,-0.658894,-4.753112,3.418186,7.580219,9.507935,3.096031,4.975503,-0.827328,5.791158,7.982136,-0.998113,-5.573567,-8.318899,7.950750,2.220313,0.469679,-0.013695,8.334636,-7.583199,3.410230,8.132177,-1.088200,3.453692,0.563757,1.964784,-5.296291,-9.261904,5.981499,-4.593672,7.018272,5.253436,-1.848066,-5.968200,3.742295,-1.552518,2.732578,8.652861,-0.643496,-7.877340,2.379851,-2.935252,-0.831039,1.501369,-9.105174,-4.329368,6.412190,-7.229188,6.757322,3.356999,9.795432,-8.826635,4.826994,8.395508,-5.046857,-6.336821,7.805968,1.934943,9.749605,9.917708,3.441959,1.350748,-6.936162,-6.418288,6.956537,-2.038291,0.801095,9.976964,9.436029,-3.514543,-4.265746,5.456337,-7.454079,8.010394,1.011352,4.386179,-1.164387,2.594207,-8.545551,4.245877,2.245571,-2.440621,-3.783485,-3.128160,-1.177426,7.920451,5.303773,-6.558630,-6.193573,2.399569,0.959525,-9.373180,-3.021732,-2.849790,2.460558,-2.595443,7.406278,8.832260,-8.634291,8.153223,-9.992208,6.317662,-4.888675,5.102321,-2.321915,-1.254932,9.154390,4.681136,9.631405,-9.012251,7.424801,6.293175,-5.464411,-9.456206,-4.652950,3.759043,3.013889,-7.963048,2.733732,-7.992955,7.310014,8.985884,4.235117,-6.593603,-0.868915,9.224425,0.320102,-7.246067,4.028482,-5.746150,7.491321,-9.285303,-4.729762,-0.359101,1.767900,5.318746,5.330283,3.543429,-5.011515,5.862152,3.032562,-4.719133,-1.819772,-1.047160,-6.313857,3.165195,-4.326478,-4.599029,1.945610,-8.187689,0.634283,0.173340,-6.760892,7.228684,-3.633005,3.111398,5.950687,-0.499278,0.580381,5.586963,7.411675,1.753831,-3.586100,-7.611000], dtype = "float64")#candidate|14008|(390,)|const|float64
call_14007 = func_2393_call(relay.reshape(const_14008.astype('float64'), [13, 15, 2]))
call_14009 = func_2393_call(relay.reshape(const_14008.astype('float64'), [13, 15, 2]))
func_10586_call = mod.get_global_var('func_10586')
func_10588_call = mutated_mod.get_global_var('func_10588')
call_14017 = relay.TupleGetItem(func_10586_call(), 0)
call_14018 = relay.TupleGetItem(func_10588_call(), 0)
output = relay.Tuple([call_13979,call_13988,const_13989,var_13990,call_14007,const_14008,call_14017,])
output2 = relay.Tuple([call_13980,call_13991,const_13989,var_13990,call_14009,const_14008,call_14018,])
func_14027 = relay.Function([var_13990,], output)
mod['func_14027'] = func_14027
mod = relay.transform.InferType()(mod)
var_14028 = relay.var("var_14028", dtype = "float32", shape = (42,))#candidate|14028|(42,)|var|float32
output = func_14027(var_14028)
func_14029 = relay.Function([var_14028], output)
mutated_mod['func_14029'] = func_14029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12826_call = mod.get_global_var('func_12826')
func_12828_call = mutated_mod.get_global_var('func_12828')
call_14048 = relay.TupleGetItem(func_12826_call(), 0)
call_14049 = relay.TupleGetItem(func_12828_call(), 0)
func_10641_call = mod.get_global_var('func_10641')
func_10643_call = mutated_mod.get_global_var('func_10643')
call_14055 = func_10641_call()
call_14056 = func_10641_call()
func_5342_call = mod.get_global_var('func_5342')
func_5347_call = mutated_mod.get_global_var('func_5347')
const_14060 = relay.const([-6.847893,-0.242208,-2.867559,-0.102847,-7.961374,6.101523,0.026192,5.274682,5.538878,8.213637,-4.540516,2.870375,-2.936311,-4.746672,3.259233,-8.370965,0.233186,0.238469,-6.885457,-4.145701,-6.167603,-5.406915,1.629207,7.108472,-8.721196,8.217877,-0.223621,-1.262514,4.543141,4.539058,6.495345,-1.058376,-9.591398,4.167341,6.040012,-0.864975,2.514626,-9.359125,-6.048968,9.316717,-4.006344,7.162010,2.642293,8.473430,-8.506761,-9.476277,-3.193681,-8.713301,-4.724847,7.944809,-0.382447,9.770216,3.182687,-6.602798,1.794004,-4.666426,-4.870211,2.934013,4.253244,-5.274082,7.569027,0.335175,-1.896076,-7.149764,2.570856,-1.392905,3.144654,9.243580,4.054812,-3.888904,-1.493401,2.482893,-7.125688,-1.005670,4.857670,0.607428,4.490512,4.569581,5.542429,9.352388,4.665369,-9.912667,5.877224,3.693086,3.014152,-5.695506,-3.936359,-6.154120,-6.264876,-2.964227,-0.338862,-2.902730,9.029056,7.137355,8.717471,9.941974,-9.337929,-6.297736,-7.189558,4.679022,5.939475,1.116175,0.855754,2.071421,-4.326946,3.867387,6.061512,3.603330,4.675287,8.423837,5.605608,-9.983850,-2.124694,9.328711,-3.871958,-2.207200,-0.349684,-3.424118,-1.758342,2.878544,1.709957,6.578820,-0.244536,2.795814,8.159779,0.740566,-1.235428,-9.437299,-4.063394,9.291196,-8.764144,-6.394258,4.820401,-9.525594,-6.774343,-2.743731,0.115287,3.893785,-0.529266,2.984299,3.618393,-9.213998,-1.068232,6.934500,5.384996,-5.683063,-6.563994,-8.136024,4.706858,8.996556,2.997916,6.081183,4.313120,-5.359413,-8.043556,5.897056,-2.633990,8.653121,7.243993,8.529812,9.522262,-8.640548,2.770426,4.217136,-3.279413,-4.367500,-3.647993,-8.411818,-2.691285,-9.644221,-5.793960,0.806142,6.659619,-9.196663,6.907997,6.601700,9.622661,-9.729915,7.376933,5.483942,8.836112,5.444439,4.606977,6.776577,-6.050369,-5.142133,-2.947956,-1.039210,-9.992655,-5.161201,-0.419693,-6.178787,2.208235,-1.661173,-7.081714,-9.446376,-9.079328,-2.919881,9.068866,4.555244,6.812418,6.882930,1.202086,4.199237,-2.008414,0.960314,-7.604014,-9.127392,0.050808,-7.024178,-3.230492,9.040603,-5.160442,-2.459037,0.916504,0.312762,-6.732893,-5.180279,-8.460990,1.885958,9.942989,-8.483152,4.834787,-9.207220,5.764844,-3.047925,4.906896,-7.008276,4.406245,-5.681236,5.108894,4.375039,-3.235884,1.142382,-4.741308,9.659650,-2.045733,2.859583,-6.143056,-4.707533,-7.182620,3.495911,-1.953376,3.933248,-9.642673,-9.072544,3.481104,9.763322,-8.815205,2.691698,-4.874819,-8.288931,-5.176896,-3.902149,2.372089,-7.152451,7.745464,-1.366195,-5.405773,-2.066013,0.849525,-9.951711,-9.705983,-0.296644,-7.652617,0.722815,-8.349308,3.204941,3.601273,1.659837,-9.095945,-3.949510,6.364423,1.475318,-8.360550,-4.366653,3.128731,4.361351,9.367906,-0.060905,8.233454,-4.766067,1.338071,-4.869984,0.446005,-2.679460,2.212122,4.181433,9.655256,-4.237436,-1.969256,2.470729,7.797157,-7.282170,-9.662236,4.398020,-5.470632,6.966517,7.458844,9.641818,6.842592,2.852472,-8.594240,7.578731,4.301412,-9.302660,-2.815696,4.972499,-9.949587,-3.770860,-3.454768,-8.683782,7.011657,5.442630,2.979272,3.580632,-6.123124,4.702269,-0.565519,-8.895561,3.600616,3.827690,-4.053122,1.109650,-1.828062,8.129447,9.200289,-6.558048,9.040063,-7.134394,-3.877538,1.483222,-9.894608,6.142600,7.889688,-1.538829,-2.666544,-8.296610,2.823786,7.649160,-9.558292,-3.496900,-6.505022,-2.655587,-6.368891,-0.114777,5.255291,9.443013,7.961016,-3.146677,-5.853311,9.454036,-3.811514,2.785407,2.100241,-3.749748,2.195892,-9.127695,2.949254,7.703957,0.479201,-6.210940,3.752795,-7.520458,-7.086295,0.258041,8.570221,-7.778097,8.221629,3.456017,-5.388645,-2.063450,1.537687,-3.361480,1.484936,-9.503858,8.674190,6.591640,0.564140,7.031203,-0.053239,-8.796142,2.012119,-4.998306,3.633300,-9.521079,7.530803,6.276917,5.936017,8.588874,-6.090554,8.744436,-2.400644,-2.067620,-6.457864,5.656628,6.564196,-9.692343,-0.108509,4.174570,4.708362,-1.904352,-9.818410,0.739055,3.283238,-8.528449,-8.875691,3.644037,2.116461,-2.292468,-1.794149,-5.987053,-8.401010,-9.247539,0.684459,-0.192343,5.365674,8.001301,-2.148162,8.114636,7.583395,5.818422,5.182868,-1.887396,4.239858,-2.611237,5.955036,5.822558,-0.603751,-7.061919,1.291035,-7.264987,5.368388,-6.711759,-0.461785,6.997611,8.950163,3.282266,-3.979984,8.933425,5.844603,3.606579,1.721325,-6.225047,-4.118685,2.399058,9.496745,8.190903,-0.170759,-5.730404,3.025315,-5.472975,5.834611,-1.209086,-7.169693,6.866542,4.321096,-7.336087,9.359813,-1.549061,2.680629,8.748758,1.888273,-3.267021,-3.855557,-6.628678,-5.323094,-8.225707,4.221555,4.202043,5.902957,9.131656,1.435491,6.975136,-4.128364,5.064924,9.931220,-3.747896,2.140480,-7.348010,1.869901,3.853555,-9.808138,4.343997,-7.828062,6.777388,0.097381,1.829577,-3.308507,5.487382,-2.781963,-5.676650,9.986863,6.655475,9.284666,-6.577620,-4.319803,9.305587,-8.906853,-5.594507,8.155520,-0.977007,-3.639039,-9.769765,-1.486863,6.290067,-6.086858], dtype = "float64")#candidate|14060|(507,)|const|float64
var_14061 = relay.var("var_14061", dtype = "int64", shape = ())#candidate|14061|()|var|int64
call_14059 = relay.TupleGetItem(func_5342_call(relay.reshape(const_14060.astype('float64'), [507,]), relay.reshape(var_14061.astype('int64'), []), relay.reshape(const_14060.astype('float64'), [13, 3, 13]), ), 7)
call_14062 = relay.TupleGetItem(func_5347_call(relay.reshape(const_14060.astype('float64'), [507,]), relay.reshape(var_14061.astype('int64'), []), relay.reshape(const_14060.astype('float64'), [13, 3, 13]), ), 7)
func_3641_call = mod.get_global_var('func_3641')
func_3644_call = mutated_mod.get_global_var('func_3644')
var_14090 = relay.var("var_14090", dtype = "float64", shape = (252,))#candidate|14090|(252,)|var|float64
call_14089 = func_3641_call(relay.reshape(var_14061.astype('float64'), []), relay.reshape(var_14090.astype('float64'), [7, 9, 4]), )
call_14091 = func_3641_call(relay.reshape(var_14061.astype('float64'), []), relay.reshape(var_14090.astype('float64'), [7, 9, 4]), )
func_13414_call = mod.get_global_var('func_13414')
func_13418_call = mutated_mod.get_global_var('func_13418')
var_14115 = relay.var("var_14115", dtype = "float32", shape = (99,))#candidate|14115|(99,)|var|float32
call_14114 = relay.TupleGetItem(func_13414_call(relay.reshape(const_14060.astype('float64'), [507,]), relay.reshape(var_14115.astype('float32'), [99,]), ), 1)
call_14116 = relay.TupleGetItem(func_13418_call(relay.reshape(const_14060.astype('float64'), [507,]), relay.reshape(var_14115.astype('float32'), [99,]), ), 1)
output = relay.Tuple([call_14048,call_14055,call_14059,const_14060,var_14061,call_14089,var_14090,call_14114,var_14115,])
output2 = relay.Tuple([call_14049,call_14056,call_14062,const_14060,var_14061,call_14091,var_14090,call_14116,var_14115,])
func_14120 = relay.Function([var_14061,var_14090,var_14115,], output)
mod['func_14120'] = func_14120
mod = relay.transform.InferType()(mod)
mutated_mod['func_14120'] = func_14120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14120_call = mutated_mod.get_global_var('func_14120')
var_14122 = relay.var("var_14122", dtype = "int64", shape = ())#candidate|14122|()|var|int64
var_14123 = relay.var("var_14123", dtype = "float64", shape = (252,))#candidate|14123|(252,)|var|float64
var_14124 = relay.var("var_14124", dtype = "float32", shape = (99,))#candidate|14124|(99,)|var|float32
call_14121 = func_14120_call(var_14122,var_14123,var_14124,)
output = call_14121
func_14125 = relay.Function([var_14122,var_14123,var_14124,], output)
mutated_mod['func_14125'] = func_14125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11741_call = mod.get_global_var('func_11741')
func_11742_call = mutated_mod.get_global_var('func_11742')
call_14139 = relay.TupleGetItem(func_11741_call(), 0)
call_14140 = relay.TupleGetItem(func_11742_call(), 0)
const_14160 = relay.const([[[-2.915858],[1.689626],[9.183087],[-8.851896],[-5.114688],[-7.137348],[1.493655],[-3.945788]],[[4.886297],[1.569957],[-8.563038],[-9.121211],[9.001275],[-8.491613],[8.734278],[-1.020254]],[[7.407035],[-6.178666],[-3.491773],[7.987181],[0.647225],[3.038261],[8.322127],[2.202163]],[[3.263111],[-3.269432],[-4.290145],[-3.383295],[-7.678835],[-4.991903],[-2.501195],[4.842137]],[[-1.225388],[2.405537],[-4.242032],[-1.125087],[-7.239587],[-5.507661],[9.570384],[-2.464140]],[[0.428483],[-0.075958],[-8.413882],[9.591746],[6.374269],[-6.612067],[-1.207217],[0.846077]],[[4.946160],[-3.973389],[8.359730],[0.898213],[-3.334943],[-0.945391],[-6.588770],[2.892595]],[[2.771328],[1.486589],[-1.271562],[8.393872],[-2.800426],[-9.593025],[4.734504],[2.924478]]], dtype = "float64")#candidate|14160|(8, 8, 1)|const|float64
bop_14161 = relay.right_shift(call_14139.astype('uint16'), relay.reshape(const_14160.astype('uint16'), relay.shape_of(call_14139))) # shape=(8, 8, 1)
bop_14164 = relay.right_shift(call_14140.astype('uint16'), relay.reshape(const_14160.astype('uint16'), relay.shape_of(call_14140))) # shape=(8, 8, 1)
func_1229_call = mod.get_global_var('func_1229')
func_1232_call = mutated_mod.get_global_var('func_1232')
var_14176 = relay.var("var_14176", dtype = "float32", shape = (42,))#candidate|14176|(42,)|var|float32
const_14177 = relay.const([-0.248881,6.413482,-2.522417,0.544774,-0.491884,1.509758,-6.049151,-0.221416,9.897138,2.802768,9.006562,7.034691,-8.520588,-1.573939,0.418508,0.676036,-8.645817,9.913030,1.737088,8.970605,-8.723914,-8.168299,6.197801,-8.459006,6.333505,0.240294,8.056627,8.224802,5.097337,-1.862929,3.097006,-8.360809,-9.600726,-3.005323,7.443974,-0.444336,-0.711251,-7.873215,3.273586,-3.598396,-0.442997,7.984309,6.379613,3.944151,-6.868378,8.607477,-5.417845,-6.239705,8.269125,-7.181838,-8.156157,-6.932976,-9.193435,8.008407,2.171235,-5.886180,5.234893,-4.181211,-6.580778,-7.837433,7.954718,-9.152523,7.361681,-6.759359,7.915791,4.978973,4.038999,-9.534246,6.516986,6.150620,-6.376505,-7.134138,-2.979094,-6.021944,4.319344,6.283746,-7.765736,-4.495190,-1.645173,-1.727563,6.795129,-0.089593,-9.198416,-0.312841,-7.388186,-4.474070,-1.510061,-7.820032,1.628760,7.317229,1.321810,5.917981,0.425309,-5.623688,6.288262,3.260585,-2.277401,3.554301,9.291329,-0.889889,-3.253291,-6.499355,-4.084716,7.732768,5.781033,-4.165483,3.025371,-5.457736,8.952689,2.553879,6.346048,2.149792,-1.970204,-5.081188,3.984883,2.085959,-4.903855,-4.245756,-4.418394,-5.491227,-4.485206,3.888016,1.367156,-2.141390,-8.471569,6.090091,3.265696,2.410359,4.694148,7.558073,0.800417,-1.229230,-6.019840,-3.113971,-4.463207,-9.212992,3.732700,5.039201,8.808249,8.548985,0.842558,1.953752,2.488355,-5.748780,4.276568,4.815282,-5.334189,-4.439136,-0.067198,2.057572,9.624728,-2.093800,8.071734,1.949758,1.735890,-8.889834,7.433481,3.071343,2.230415,-2.837916,5.571393,5.738473,8.836802,-4.068727,-6.133151,6.685417,7.303767,-9.481325,8.441615,0.872129,-8.159270,6.339094,-8.831903,-2.800791,-8.889779,-4.735774,7.365554,5.786952,5.679334,-0.859875,6.821988,5.078394,9.452047,-6.929955,-7.451256,-0.721356,4.727367,-9.875861,-4.270062,5.864424,7.656758,3.812684,3.668070,-8.062556,-1.487149,-0.098162,-0.142692,6.334024,6.055174,-3.353221,6.087432,-3.042635,-8.446858,-6.476305,-9.564087,6.452602,9.563249,-2.959945,2.068832,9.116176,9.204093,3.542361,-1.944227,-8.535830,-8.764625,6.398808,6.897803,1.603171,-1.552730,-7.359249,6.370844,6.482340,-5.143095,-7.793659,-8.397115,-0.459994,3.516012,0.656567,-8.971466,-6.519637,-1.995187,-3.138236,1.571946,5.453658,-9.596658,-8.552675,3.319796,-9.374416,0.682109,4.373710,4.825562,-7.337829,2.598232,-6.425217,5.427485,5.724425,-4.611639,6.998128,3.026700,2.019750,-3.676213,8.337863,0.123265,-6.373508,-9.743398,-1.362061,2.559338,8.418104,-9.772963,-4.008270,-1.232081,6.518918,9.939833,-7.241942,1.419452,-1.544799,-0.259374,9.733407,-5.341685,-0.320346,5.056695,-0.774905,8.798521,-3.540911,4.756302,5.434392,-3.587740,-1.920208,7.304740,-1.747738,-7.882644,8.592012,-6.173846,8.087239,-8.612588,-0.211675,-9.362847,-2.257961,-9.511743,-7.209080,3.803013,1.722989,-7.998747,3.148304,-4.353959,3.893744,1.548053,3.043408,6.139950,-7.753873,3.874345,-1.364055,4.150148,9.949804,3.064086,2.409506,-4.247699,-4.164506,-4.542065,-7.318728,8.163851,3.429421,-8.449704,-9.904202,8.525705,0.482003,3.703930,8.614273,-4.207693,-7.149838,-7.766471,-7.175753,-7.115234,4.178183,4.996614,-6.082151,5.455849,4.550372,-3.115754,-9.300769,-2.574574,-2.794199,1.941639,-5.217629,9.232650,2.231608,-1.272530,-9.132826,-2.234612,4.253087,1.479840,-4.741240,5.661640,1.149017,0.367132,-4.398002,5.155228,-2.871137,-6.197646,7.732221,9.878857,0.928605,-8.813831,1.587632,8.196488,-3.857673,-9.132158,-2.870913,-2.480210,6.698115,8.233329,4.245000,8.129082,5.086912,-9.498238,8.186705,4.530206,9.055158,-3.377363,-2.090773,2.981430,-9.585719,8.860720,-7.004361,-5.405979,6.524188,2.980443,6.361917,-9.082351,-4.451341,9.185367,2.970313,-5.729585,-6.872748,9.807658,-3.544155,-1.589653,-1.223349,5.871441,4.463160,-0.015449,1.660141,-8.551906,-2.734067,8.970740,1.763452,-9.883732,8.605878,-3.542496,9.936981,-5.884997,-0.904378,9.291274,-2.524633,2.399624,-2.136191,7.491669,9.928902,-6.306544,-0.220358,-1.333929,-6.229304,-8.862594,3.623581,-5.744930,-9.556049,4.746195,8.932036,5.553082,5.751860,5.684218,9.850996,-4.689581,-8.050052,-1.481243,-0.359626,3.161652,-9.849448,4.011228,-7.424781,-8.551393,-4.106430,4.077776,-3.760555,-3.802470,-6.617056,-7.767363,-2.403040,-7.680014,5.046954,1.033148,-4.176313,0.721904,3.799545,-7.398068,-3.854321,-3.243485,-6.974797,-3.349819,1.351565,1.547598,-1.977573,1.127928,-2.763038,-0.135876,-3.821505,0.684451,-0.497482,9.468431,5.075514,9.658784,0.684020,4.658787,4.489639,-5.740818,-8.768893,-6.218840,8.504043,6.066937,-3.973143,-1.367125,3.370034,9.306557,-2.965203,6.440008,-7.341727,6.105075,2.623930,-1.484139,-5.117907,5.417046,-5.206840,4.496589,3.256955,2.467375,-0.160233,-8.113686,6.466508,1.805642,0.254374,-6.080274,6.977982,0.548881,-0.255626,-9.480115,-0.303844,1.638597,7.620970,4.492525,2.983916,-1.788539,-0.095005,5.491406,-9.160880,0.218499,-4.694025,-5.760845,3.715735,-0.708816,1.711952,-9.062709,-1.136155,-0.974343,-9.805361,-1.516969,-9.503200,-1.618399,1.454643,-1.548289,-8.939656,3.417827,8.116212,1.081639,5.896899,-0.223167,-2.152625,9.230910,-8.784226,-9.218649,6.260500,-0.747689,-0.805394,-5.349132,0.080264,4.474821,-9.731810,-2.566794,-8.024737,-3.445634,1.401929,-7.635079,3.374115,-5.434611,9.145562,-0.579907,3.741915], dtype = "float32")#candidate|14177|(546,)|const|float32
call_14175 = relay.TupleGetItem(func_1229_call(relay.reshape(var_14176.astype('float32'), [3, 1, 14]), relay.reshape(const_14177.astype('float32'), [3, 13, 14]), ), 0)
call_14178 = relay.TupleGetItem(func_1232_call(relay.reshape(var_14176.astype('float32'), [3, 1, 14]), relay.reshape(const_14177.astype('float32'), [3, 13, 14]), ), 0)
func_11479_call = mod.get_global_var('func_11479')
func_11480_call = mutated_mod.get_global_var('func_11480')
call_14184 = func_11479_call()
call_14185 = func_11479_call()
output = relay.Tuple([bop_14161,call_14175,var_14176,const_14177,call_14184,])
output2 = relay.Tuple([bop_14164,call_14178,var_14176,const_14177,call_14185,])
func_14211 = relay.Function([var_14176,], output)
mod['func_14211'] = func_14211
mod = relay.transform.InferType()(mod)
var_14212 = relay.var("var_14212", dtype = "float32", shape = (42,))#candidate|14212|(42,)|var|float32
output = func_14211(var_14212)
func_14213 = relay.Function([var_14212], output)
mutated_mod['func_14213'] = func_14213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12550_call = mod.get_global_var('func_12550')
func_12551_call = mutated_mod.get_global_var('func_12551')
call_14288 = func_12550_call()
call_14289 = func_12550_call()
output = call_14288
output2 = call_14289
func_14302 = relay.Function([], output)
mod['func_14302'] = func_14302
mod = relay.transform.InferType()(mod)
mutated_mod['func_14302'] = func_14302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14302_call = mutated_mod.get_global_var('func_14302')
call_14303 = func_14302_call()
output = call_14303
func_14304 = relay.Function([], output)
mutated_mod['func_14304'] = func_14304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13025_call = mod.get_global_var('func_13025')
func_13027_call = mutated_mod.get_global_var('func_13027')
call_14321 = func_13025_call()
call_14322 = func_13025_call()
output = call_14321
output2 = call_14322
func_14323 = relay.Function([], output)
mod['func_14323'] = func_14323
mod = relay.transform.InferType()(mod)
mutated_mod['func_14323'] = func_14323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14323_call = mutated_mod.get_global_var('func_14323')
call_14324 = func_14323_call()
output = call_14324
func_14325 = relay.Function([], output)
mutated_mod['func_14325'] = func_14325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11599_call = mod.get_global_var('func_11599')
func_11600_call = mutated_mod.get_global_var('func_11600')
call_14326 = func_11599_call()
call_14327 = func_11599_call()
func_10071_call = mod.get_global_var('func_10071')
func_10074_call = mutated_mod.get_global_var('func_10074')
var_14333 = relay.var("var_14333", dtype = "float64", shape = (960,))#candidate|14333|(960,)|var|float64
call_14332 = relay.TupleGetItem(func_10071_call(relay.reshape(var_14333.astype('float64'), [8, 8, 15])), 1)
call_14334 = relay.TupleGetItem(func_10074_call(relay.reshape(var_14333.astype('float64'), [8, 8, 15])), 1)
func_12675_call = mod.get_global_var('func_12675')
func_12677_call = mutated_mod.get_global_var('func_12677')
call_14356 = func_12675_call()
call_14357 = func_12675_call()
output = relay.Tuple([call_14326,call_14332,var_14333,call_14356,])
output2 = relay.Tuple([call_14327,call_14334,var_14333,call_14357,])
func_14358 = relay.Function([var_14333,], output)
mod['func_14358'] = func_14358
mod = relay.transform.InferType()(mod)
var_14359 = relay.var("var_14359", dtype = "float64", shape = (960,))#candidate|14359|(960,)|var|float64
output = func_14358(var_14359)
func_14360 = relay.Function([var_14359], output)
mutated_mod['func_14360'] = func_14360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14302_call = mod.get_global_var('func_14302')
func_14304_call = mutated_mod.get_global_var('func_14304')
call_14373 = func_14302_call()
call_14374 = func_14302_call()
func_11149_call = mod.get_global_var('func_11149')
func_11151_call = mutated_mod.get_global_var('func_11151')
call_14380 = relay.TupleGetItem(func_11149_call(), 1)
call_14381 = relay.TupleGetItem(func_11151_call(), 1)
uop_14397 = relay.sin(call_14380.astype('float64')) # shape=(12, 1, 2)
uop_14399 = relay.sin(call_14381.astype('float64')) # shape=(12, 1, 2)
output = relay.Tuple([call_14373,uop_14397,])
output2 = relay.Tuple([call_14374,uop_14399,])
func_14403 = relay.Function([], output)
mod['func_14403'] = func_14403
mod = relay.transform.InferType()(mod)
output = func_14403()
func_14404 = relay.Function([], output)
mutated_mod['func_14404'] = func_14404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13280_call = mod.get_global_var('func_13280')
func_13282_call = mutated_mod.get_global_var('func_13282')
call_14452 = relay.TupleGetItem(func_13280_call(), 0)
call_14453 = relay.TupleGetItem(func_13282_call(), 0)
func_12374_call = mod.get_global_var('func_12374')
func_12376_call = mutated_mod.get_global_var('func_12376')
call_14456 = relay.TupleGetItem(func_12374_call(), 0)
call_14457 = relay.TupleGetItem(func_12376_call(), 0)
output = relay.Tuple([call_14452,call_14456,])
output2 = relay.Tuple([call_14453,call_14457,])
func_14459 = relay.Function([], output)
mod['func_14459'] = func_14459
mod = relay.transform.InferType()(mod)
mutated_mod['func_14459'] = func_14459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14459_call = mutated_mod.get_global_var('func_14459')
call_14460 = func_14459_call()
output = call_14460
func_14461 = relay.Function([], output)
mutated_mod['func_14461'] = func_14461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10255_call = mod.get_global_var('func_10255')
func_10256_call = mutated_mod.get_global_var('func_10256')
call_14462 = func_10255_call()
call_14463 = func_10255_call()
func_9935_call = mod.get_global_var('func_9935')
func_9936_call = mutated_mod.get_global_var('func_9936')
call_14469 = relay.TupleGetItem(func_9935_call(), 2)
call_14470 = relay.TupleGetItem(func_9936_call(), 2)
output = relay.Tuple([call_14462,call_14469,])
output2 = relay.Tuple([call_14463,call_14470,])
func_14478 = relay.Function([], output)
mod['func_14478'] = func_14478
mod = relay.transform.InferType()(mod)
mutated_mod['func_14478'] = func_14478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14478_call = mutated_mod.get_global_var('func_14478')
call_14479 = func_14478_call()
output = call_14479
func_14480 = relay.Function([], output)
mutated_mod['func_14480'] = func_14480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11741_call = mod.get_global_var('func_11741')
func_11742_call = mutated_mod.get_global_var('func_11742')
call_14511 = relay.TupleGetItem(func_11741_call(), 0)
call_14512 = relay.TupleGetItem(func_11742_call(), 0)
output = call_14511
output2 = call_14512
func_14519 = relay.Function([], output)
mod['func_14519'] = func_14519
mod = relay.transform.InferType()(mod)
mutated_mod['func_14519'] = func_14519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14519_call = mutated_mod.get_global_var('func_14519')
call_14520 = func_14519_call()
output = call_14520
func_14521 = relay.Function([], output)
mutated_mod['func_14521'] = func_14521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11188_call = mod.get_global_var('func_11188')
func_11189_call = mutated_mod.get_global_var('func_11189')
call_14618 = relay.TupleGetItem(func_11188_call(), 0)
call_14619 = relay.TupleGetItem(func_11189_call(), 0)
output = relay.Tuple([call_14618,])
output2 = relay.Tuple([call_14619,])
func_14637 = relay.Function([], output)
mod['func_14637'] = func_14637
mod = relay.transform.InferType()(mod)
output = func_14637()
func_14638 = relay.Function([], output)
mutated_mod['func_14638'] = func_14638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14459_call = mod.get_global_var('func_14459')
func_14461_call = mutated_mod.get_global_var('func_14461')
call_14646 = relay.TupleGetItem(func_14459_call(), 1)
call_14647 = relay.TupleGetItem(func_14461_call(), 1)
func_12407_call = mod.get_global_var('func_12407')
func_12411_call = mutated_mod.get_global_var('func_12411')
var_14658 = relay.var("var_14658", dtype = "uint32", shape = (2288,))#candidate|14658|(2288,)|var|uint32
var_14659 = relay.var("var_14659", dtype = "float32", shape = (1, 99))#candidate|14659|(1, 99)|var|float32
call_14657 = relay.TupleGetItem(func_12407_call(relay.reshape(var_14658.astype('uint32'), [2288,]), relay.reshape(var_14659.astype('float32'), [99, 1]), ), 3)
call_14660 = relay.TupleGetItem(func_12411_call(relay.reshape(var_14658.astype('uint32'), [2288,]), relay.reshape(var_14659.astype('float32'), [99, 1]), ), 3)
output = relay.Tuple([call_14646,call_14657,var_14658,var_14659,])
output2 = relay.Tuple([call_14647,call_14660,var_14658,var_14659,])
func_14663 = relay.Function([var_14658,var_14659,], output)
mod['func_14663'] = func_14663
mod = relay.transform.InferType()(mod)
mutated_mod['func_14663'] = func_14663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14663_call = mutated_mod.get_global_var('func_14663')
var_14665 = relay.var("var_14665", dtype = "uint32", shape = (2288,))#candidate|14665|(2288,)|var|uint32
var_14666 = relay.var("var_14666", dtype = "float32", shape = (1, 99))#candidate|14666|(1, 99)|var|float32
call_14664 = func_14663_call(var_14665,var_14666,)
output = call_14664
func_14667 = relay.Function([var_14665,var_14666,], output)
mutated_mod['func_14667'] = func_14667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14637_call = mod.get_global_var('func_14637')
func_14638_call = mutated_mod.get_global_var('func_14638')
call_14669 = relay.TupleGetItem(func_14637_call(), 0)
call_14670 = relay.TupleGetItem(func_14638_call(), 0)
func_13280_call = mod.get_global_var('func_13280')
func_13282_call = mutated_mod.get_global_var('func_13282')
call_14688 = relay.TupleGetItem(func_13280_call(), 0)
call_14689 = relay.TupleGetItem(func_13282_call(), 0)
func_11611_call = mod.get_global_var('func_11611')
func_11613_call = mutated_mod.get_global_var('func_11613')
call_14699 = func_11611_call()
call_14700 = func_11611_call()
output = relay.Tuple([call_14669,call_14688,call_14699,])
output2 = relay.Tuple([call_14670,call_14689,call_14700,])
func_14701 = relay.Function([], output)
mod['func_14701'] = func_14701
mod = relay.transform.InferType()(mod)
mutated_mod['func_14701'] = func_14701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14701_call = mutated_mod.get_global_var('func_14701')
call_14702 = func_14701_call()
output = call_14702
func_14703 = relay.Function([], output)
mutated_mod['func_14703'] = func_14703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10466_call = mod.get_global_var('func_10466')
func_10468_call = mutated_mod.get_global_var('func_10468')
call_14734 = relay.TupleGetItem(func_10466_call(), 0)
call_14735 = relay.TupleGetItem(func_10468_call(), 0)
func_12407_call = mod.get_global_var('func_12407')
func_12411_call = mutated_mod.get_global_var('func_12411')
const_14749 = relay.const([3,-6,5,-10,1,-8,-3,3,-2,-10,-7,3,3,9,4,-2,1,-7,-7,5,-6,1,5,-1,-9,8,-10,-3,4,3,-6,-4,-2,5,2,5,3,5,2,-7,-7,-6,-7,7,1,-1,6,-5,-8,8,-10,-8,-1,-3,9,5,-4,-2,-9,4,3,-8,1,-7,-4,3,-10,-7,3,3,9,-1,-8,-7,4,-9,-9,7,-2,10,-1,-10,-3,-1,8,-2,3,-1,8,2,-1,10,7,9,4,-5,-4,8,-5,-8,5,1,3,3,-4,-3,5,5,3,-3,-5,5,-5,-9,-2,-5,-6,8,-2,1,5,9,1,4,-7,-2,5,-2,-8,1,7,-10,-4,-2,-1,-2,-1,8,6,4,9,6,3,4,-8,-5,3,-5,6,-5,2,-3,10,-5,-5,8,6,6,1,-1,5,3,1,-6,7,2,-1,-2,-8,7,-5,7,-10,-9,3,9,5,-9,-10,-3,-8,-4,-2,10,-3,-5,-2,10,-7,3,10,-9,4,3,-3,-8,-1,-10,1,7,6,4,6,2,-4,3,-8,3,10,-5,2,6,10,-8,-7,-6,-9,-3,-6,-6,3,-8,-2,5,7,-9,-5,-4,-10,-5,9,1,2,1,-10,-2,-6,6,-1,2,-8,9,-5,-8,5,-3,5,-2,-8,6,-10,5,-1,4,9,-2,-6,-2,-3,-5,4,-3,-1,-5,-8,1,1,3,-4,-4,6,1,6,-2,-4,7,8,4,-7,-10,-9,-2,-6,2,6,4,1,-4,9,-6,-7,-8,5,4,-10,-6,7,1,4,7,1,-2,9,1,-5,10,10,-7,-1,-8,7,-3,-1,-10,-10,-7,-8,-3,-8,-4,1,-5,3,7,-2,8,6,-6,6,4,-2,-6,3,-7,4,-3,7,-8,-9,6,-10,3,-6,5,-2,1,-1,4,8,6,-5,9,-7,4,-1,-7,7,-7,8,6,-2,-6,3,8,3,5,2,-2,10,5,8,-2,-4,7,-10,6,9,-6,3,-6,-7,6,7,-8,-4,10,-5,-7,3,2,9,7,9,-2,7,-9,-3,4,3,-8,-3,8,-3,8,1,1,-6,-7,10,-7,1,3,-1,3,9,10,2,-9,-5,10,6,3,8,9,1,-8,2,-6,6,-6,3,-6,-5,9,-3,3,8,1,8,-7,6,9,5,-2,7,8,5,2,-1,10,-9,1,-1,-5,-4,7,-8,-9,-4,-5,-10,-8,7,7,-2,-9,-3,8,7,-2,8,1,6,8,-1,-10,6,-8,-9,-8,-3,3,1,10,7,-7,1,-2,5,8,2,7,-5,10,9,8,7,7,-3,4,-9,8,8,-9,-9,-1,3,9,-4,-4,9,6,-3,3,-2,-7,-9,-10,-4,-2,-4,-4,-2,6,1,10,4,-7,-10,5,9,-2,-9,-7,-1,-4,1,-3,10,-8,3,-5,5,6,-2,5,4,-2,-2,-8,8,-10,-1,-2,4,3,10,-6,10,10,4,-5,-5,-3,-6,7,-2,-2,2,3,-8,5,4,2,-5,8,-8,-8,-10,7,2,3,-3,-7,1,-10,8,-6,9,6,8,3,-7,-8,-4,6,-9,1,3,6,2,2,3,2,-6,6,-4,-10,2,9,-3,1,1,-5,-4,10,-6,3,10,1,-6,10,8,1,9,5,5,5,9,-2,-8,-8,5,-6,-9,-1,-4,2,-2,-1,3,5,3,5,10,7,-2,-4,6,-1,7,-9,6,4,-6,-1,2,-8,5,-6,-3,-3,-8,1,7,1,8,6,1,2,-4,8,-8,-10,2,-8,-1,-9,9,4,-3,-1,-5,5,-6,5,9,-7,-10,9,-5,8,-9,-4,10,-4,5,4,-2,-7,-5,8,4,10,-2,-9,-6,-2,5,-3,6,-7,-5,-10,-1,7,9,-1,-1,-8,-2,10,3,2,8,4,5,4,4,8,2,3,-3,4,-7,-8,1,-6,-10,6,-6,-1,-10,2,2,1,-7,5,1,3,4,-7,-9,-1,5,-6,-6,3,-5,-1,-9,1,7,6,-5,-5,10,6,-9,8,-4,5,5,-7,-5,7,1,9,-4,-3,4,8,2,-3,10,-4,-8,-6,9,3,-2,-7,8,10,-3,-3,-2,10,4,6,-7,-10,-1,7,-10,3,3,-4,10,-3,8,7,-6,8,4,-7,4,7,-6,5,-7,7,-10,10,-6,10,-10,7,-8,9,-9,-5,6,6,8,-7,10,6,-6,2,3,9,1,-1,-1,2,-9,-10,-9,-8,-10,4,8,1,-6,7,5,3,9,6,6,-9,5,3,-8,10,5,-9,4,8,-5,9,8,9,-6,9,-4,-1,10,2,-5,5,6,3,-7,10,-6,3,1,-3,-8,-10,-3,-1,5,10,-6,9,2,-2,3,-1,10,-2,8,7,10,-8,2,-7,-3,-6,3,-10,7,3,5,10,-10,6,8,5,5,-2,-3,4,3,4,7,-10,-10,-6,-7,-2,-7,-6,-6,-4,4,-7,-2,-4,3,4,6,4,-6,-2,-7,3,-5,-10,10,1,9,-3,-3,7,-7,-7,4,8,4,-7,4,-6,9,-9,9,4,-2,-10,-8,-2,-9,-7,-10,4,-6,-4,3,1,-3,2,2,1,-7,-8,7,9,9,-8,-2,3,-5,10,7,1,-2,4,-1,8,6,-10,-8,-7,-4,5,9,-5,5,2,7,-3,-8,-2,2,4,10,10,-4,4,-4,-5,-7,7,8,-5,5,-3,-7,-2,9,-8,2,6,9,-4,-8,-7,-1,-10,-6,-3,5,5,-3,2,5,-10,9,2,5,-10,7,8,2,5,3,2,-4,-9,-6,-10,10,-7,-7,7,-5,2,2,7,10,-3,-2,2,-4,4,3,-10,-7,1,5,3,-5,-1,-9,-5,4,1,-5,-1,-3,8,2,-8,-4,-10,-9,9,2,-2,-10,-7,5,10,10,-8,10,-8,3,-9,6,-5,4,8,-4,6,-7,2,-2,3,-6,6,8,-10,9,7,-1,-10,-4,3,-1,6,4,2,-10,10,8,4,10,-5,3,6,-2,-1,7,8,4,5,-10,6,2,8,3,-5,5,-4,4,4,-8,-4,-8,-10,6,2,2,6,5,-5,-5,1,-2,10,-9,-2,9,2,10,-4,7,2,4,-5,-3,7,-1,-10,7,9,-6,3,-10,-7,-6,7,-6,5,9,1,2,-2,10,8,-5,3,9,-9,2,-9,6,4,-9,2,-10,-1,-2,-5,-6,8,-9,5,9,-7,9,-9,-6,-6,3,2,-10,-6,-6,5,-6,-5,5,3,3,5,9,-8,-7,9,-4,-5,-2,7,4,3,-4,-4,-8,3,10,7,3,4,10,2,-2,8,-10,5,-8,5,-5,-3,8,8,5,7,1,-10,3,-6,-10,1,1,5,2,-3,9,-2,5,6,5,10,3,6,-1,-2,-7,3,7,-9,-8,-8,2,5,-1,-7,-4,-2,-6,-4,-3,10,-9,9,-10,7,-3,-6,-4,-10,2,3,4,-5,-6,-7,-7,-8,-1,2,-5,9,1,-3,-6,2,-2,-8,-10,7,3,-2,5,7,-7,7,-6,-2,-2,4,9,8,10,-8,-8,-6,-2,-1,10,-3,7,-1,-6,9,-7,6,10,-7,-9,-3,-3,9,-9,10,-10,-8,-3,-9,-3,7,-3,6,-8,-6,-10,-5,9,-8,-4,-10,3,1,-9,5,1,2,6,9,-2,2,-5,-7,-8,-3,-5,-9,10,-4,-2,-1,-10,7,10,9,-3,4,-7,2,-5,-10,-5,9,-10,-4,-2,5,5,-10,-10,-7,-2,-10,-3,6,7,-10,-6,-8,4,1,5,9,-10,7,2,4,8,-2,-6,10,-4,-6,1,-9,5,2,7,-4,-2,8,6,7,4,6,8,5,-8,2,-4,6,-4,9,-10,8,-3,-8,-8,4,4,4,-6,6,10,5,1,-3,-8,6,-7,-3,-3,-3,6,3,-7,-4,7,-9,7,3,5,-5,-2,2,7,2,-6,1,2,4,2,-4,-9,8,-9,6,-8,-7,-1,-8,6,-8,-4,-6,2,8,9,5,-7,6,3,-7,4,-1,-5,-5,10,-3,4,-3,-1,-2,-2,-10,1,4,9,-5,7,10,-7,-3,10,-3,7,-1,-6,-9,-4,-9,5,9,7,7,-1,8,-3,5,8,8,-2,2,-5,-8,9,2,-1,8,-6,-3,-3,5,3,9,-7,-7,-9,-9,-1,1,-4,-4,5,-2,6,-6,-8,6,10,-3,4,6,-8,-6,-1,8,2,-8,-3,-6,8,9,4,7,1,-8,9,-8,8,5,3,-3,-7,-3,-3,-1,-2,1,8,-9,8,-5,3,4,-9,3,4,10,8,2,-2,-6,-7,-2,3,-5,-9,9,-6,-5,4,9,-3,9,-10,-5,-8,-9,-6,-10,-2,-3,7,-7,5,-8,-10,-4,5,4,-6,10,-10,7,-1,6,-3,-8,-8,-3,-7,-1,9,-9,9,-2,4,9,2,-1,-4,-10,-3,9,-1,6,3,-4,5,7,-9,-10,-10,9,4,8,-7,7,7,3,8,8,9,6,-5,9,-1,-9,8,6,7,2,-2,-6,-6,-9,-10,-8,8,4,-6,-9,2,9,-7,-3,-6,-10,7,9,5,-8,4,-8,9,-6,-5,-9,5,8,-2,10,-6,-8,8,-6,5,10,9,2,9,10,-4,-2,8,5,-9,-10,7,9,7,-10,9,-2,7,-8,-3,-2,-9,8,-2,-9,-9,-9,-9,2,4,-8,2,-5,5,7,2,-7,-4,10,9,1,10,-4,8,5,-8,7,3,8,5,-8,-7,-8,1,8,-9,9,9,-8,-1,-9,6,-8,-9,-6,4,-9,-8,-1,-5,10,8,-3,5,3,4,3,-9,-8,-7,-5,6,-1,1,3,3,-9,-5,9,6,5,4,-2,9,5,2,-9,4,-5,4,-2,-3,1,7,-7,-1,-3,-10,-10,-4,-7,5,-7,7,-7,-9,-9,1,-10,7,-1,8,3,-10,-9,10,-3,1,7,1,9,2,-2,-8,-3,-10,5,-2,-7,5,-9,9,1,1,8,-1,-9,4,6,-6,9,5,3,4,2,-6,-4,4,-7,-3,-4,-3,-7,-8,1,4,-9,5,8,4,9,-4,6,-10,10,9,10,-1,-9,10,3,9,4,-4,3,6,-7,-7,-8,-8,-10,4,-9,7,-4,-7,2,8,9,-10,-9,6,-7,-3,-10,3,7,2,-4,5,5,-6,-9,-4,-8,3,-1,5,4,2,8,3,-5,-5,-5,7,-6,8,-9,6,-7,5,9,-5,-10,6,2,-7,-6,6,-3,-1,7,-4,2,-4,-10,6,-2,4,-9,2,-2,10,1,1,-10,3,-4,4,9,-6,10,2,-4,-6,7,-6,-8,8,2,-3,2,10,5,3,-5,-6,-10,8,3,8,-3,10,1,-9,7,-5,-10,-4,-10,-2,5,-1,4,-10,-3,-10,1,8,-10,-4,10,6,6,-6,9,1,-6,1,-2,-1,-9,3,-1,-3,1,7,-7,-3,5,9,-9,-9,5,-5,3,3,-6,-6,-1,-9,-6,-6,-9,8,-10,9,-9,4,-2,-10,6,-9,-4,-9,-1,9,-5,2,4,10,-7,3,1,10,6,-8,-5,-5,9,-6,-4,-10,10,3,-4,-9,-3,-6,2,8,6,-10,-1,2,1,-4,4,2,-8,9,-9,2,5,-8,2,4,-2,-10,9,4,-3,5,-4,1,-3,5,-3,7,5,-2,1,-6,10,7,2,-9,2,2,10,-10,-6,-6,2,-6,9,5,-3,5,8,1,3,-3,-4,1,-10,7,-5,-4,6,-5,7,-7,10,-2,-3,-6,-4,1,6,4,-10,2,7,4,6,-8,-9,3,-6,8,9,6,-3,-3,-7,-4,1,-6,-2,2,10,-10,7,-10,8,2,2,-3,5,5,-5,2,-5,-4,9,-6,8,-9,9,7,7,-7,7,5,5,7,9,8,6,-2,10,3,3,-2,-3,-4,-8,3,-10,-9,-8,-7,-4,2,10,6,-3,-9,-2,3,-10,10,-7,-3,-9,3,9,-6,-6,-4,6,6,10,8,-6,9,-5,4,-2,-8,-7,10,-1], dtype = "uint32")#candidate|14749|(2288,)|const|uint32
var_14750 = relay.var("var_14750", dtype = "float32", shape = (99,))#candidate|14750|(99,)|var|float32
call_14748 = relay.TupleGetItem(func_12407_call(relay.reshape(const_14749.astype('uint32'), [2288,]), relay.reshape(var_14750.astype('float32'), [99, 1]), ), 5)
call_14751 = relay.TupleGetItem(func_12411_call(relay.reshape(const_14749.astype('uint32'), [2288,]), relay.reshape(var_14750.astype('float32'), [99, 1]), ), 5)
func_11944_call = mod.get_global_var('func_11944')
func_11945_call = mutated_mod.get_global_var('func_11945')
call_14754 = func_11944_call()
call_14755 = func_11944_call()
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
call_14757 = relay.TupleGetItem(func_1358_call(relay.reshape(const_14749.astype('uint32'), [16, 13, 11])), 2)
call_14758 = relay.TupleGetItem(func_1360_call(relay.reshape(const_14749.astype('uint32'), [16, 13, 11])), 2)
func_13130_call = mod.get_global_var('func_13130')
func_13131_call = mutated_mod.get_global_var('func_13131')
call_14766 = func_13130_call()
call_14767 = func_13130_call()
output = relay.Tuple([call_14734,call_14748,const_14749,var_14750,call_14754,call_14757,call_14766,])
output2 = relay.Tuple([call_14735,call_14751,const_14749,var_14750,call_14755,call_14758,call_14767,])
func_14786 = relay.Function([var_14750,], output)
mod['func_14786'] = func_14786
mod = relay.transform.InferType()(mod)
var_14787 = relay.var("var_14787", dtype = "float32", shape = (99,))#candidate|14787|(99,)|var|float32
output = func_14786(var_14787)
func_14788 = relay.Function([var_14787], output)
mutated_mod['func_14788'] = func_14788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11944_call = mod.get_global_var('func_11944')
func_11945_call = mutated_mod.get_global_var('func_11945')
call_14793 = func_11944_call()
call_14794 = func_11944_call()
output = relay.Tuple([call_14793,])
output2 = relay.Tuple([call_14794,])
func_14799 = relay.Function([], output)
mod['func_14799'] = func_14799
mod = relay.transform.InferType()(mod)
mutated_mod['func_14799'] = func_14799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14799_call = mutated_mod.get_global_var('func_14799')
call_14800 = func_14799_call()
output = call_14800
func_14801 = relay.Function([], output)
mutated_mod['func_14801'] = func_14801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14834 = relay.var("var_14834", dtype = "float32", shape = (12, 16, 11))#candidate|14834|(12, 16, 11)|var|float32
uop_14835 = relay.acos(var_14834.astype('float32')) # shape=(12, 16, 11)
func_14637_call = mod.get_global_var('func_14637')
func_14638_call = mutated_mod.get_global_var('func_14638')
call_14837 = relay.TupleGetItem(func_14637_call(), 0)
call_14838 = relay.TupleGetItem(func_14638_call(), 0)
func_11684_call = mod.get_global_var('func_11684')
func_11690_call = mutated_mod.get_global_var('func_11690')
var_14855 = relay.var("var_14855", dtype = "float32", shape = (150,))#candidate|14855|(150,)|var|float32
var_14856 = relay.var("var_14856", dtype = "float64", shape = (507, 1))#candidate|14856|(507, 1)|var|float64
var_14857 = relay.var("var_14857", dtype = "int64", shape = ())#candidate|14857|()|var|int64
const_14858 = relay.const([3.923017,7.678217,0.935997,-2.819632,8.672782,-0.804687,6.878480,3.359489,-0.373169,7.707806,-4.961206,6.927976,2.034293,3.448451,3.327345,-8.338861,-5.900081,-3.783332,9.528890,4.337161,0.677897,7.739605,-6.456421,-4.015393,3.957509,4.864744,9.032480,-7.401435,-6.273669,-4.549622,5.414390,3.388465,-9.386373,7.878979,-4.414531,-7.038278,7.448439,-5.299481,-2.341447,-4.503599,-5.133455,4.095343,-5.212608,1.106038,-7.614025,3.761260,-6.847104,1.125329,-5.274311,0.292599,3.522175,-1.600612,6.281796,1.156639,5.836817,6.935112,8.253154,-1.205669,-0.532447,7.615237,8.331483,-6.530992,6.959565,-3.573189,6.920611,-3.522396,4.551296,3.655883,3.628258,-0.850817,-4.029420,1.362728,-2.597377,-6.000785,1.736347,7.442350,-4.374603,-0.262278,-9.048830,7.579368,-8.849438,-4.208875,-2.424293,1.386089,-3.191296,-6.585720,6.822320,2.644760,3.431966,7.791915,9.474723,9.853921,-1.563141,8.518407,-6.304760,-0.413711,-4.664937,-9.962006,-2.543439], dtype = "float32")#candidate|14858|(99,)|const|float32
var_14859 = relay.var("var_14859", dtype = "float64", shape = (252,))#candidate|14859|(252,)|var|float64
call_14854 = relay.TupleGetItem(func_11684_call(relay.reshape(var_14855.astype('float32'), [1, 150]), relay.reshape(var_14856.astype('float64'), [507, 1]), relay.reshape(var_14857.astype('int64'), []), relay.reshape(const_14858.astype('float32'), [99,]), relay.reshape(var_14859.astype('float64'), [252,]), ), 4)
call_14860 = relay.TupleGetItem(func_11690_call(relay.reshape(var_14855.astype('float32'), [1, 150]), relay.reshape(var_14856.astype('float64'), [507, 1]), relay.reshape(var_14857.astype('int64'), []), relay.reshape(const_14858.astype('float32'), [99,]), relay.reshape(var_14859.astype('float64'), [252,]), ), 4)
func_11149_call = mod.get_global_var('func_11149')
func_11151_call = mutated_mod.get_global_var('func_11151')
call_14862 = relay.TupleGetItem(func_11149_call(), 1)
call_14863 = relay.TupleGetItem(func_11151_call(), 1)
uop_14883 = relay.asinh(uop_14835.astype('float32')) # shape=(12, 16, 11)
output = relay.Tuple([call_14837,call_14854,var_14855,var_14856,var_14857,const_14858,var_14859,call_14862,uop_14883,])
output2 = relay.Tuple([call_14838,call_14860,var_14855,var_14856,var_14857,const_14858,var_14859,call_14863,uop_14883,])
func_14914 = relay.Function([var_14834,var_14855,var_14856,var_14857,var_14859,], output)
mod['func_14914'] = func_14914
mod = relay.transform.InferType()(mod)
var_14915 = relay.var("var_14915", dtype = "float32", shape = (12, 16, 11))#candidate|14915|(12, 16, 11)|var|float32
var_14916 = relay.var("var_14916", dtype = "float32", shape = (150,))#candidate|14916|(150,)|var|float32
var_14917 = relay.var("var_14917", dtype = "float64", shape = (507, 1))#candidate|14917|(507, 1)|var|float64
var_14918 = relay.var("var_14918", dtype = "int64", shape = ())#candidate|14918|()|var|int64
var_14919 = relay.var("var_14919", dtype = "float64", shape = (252,))#candidate|14919|(252,)|var|float64
output = func_14914(var_14915,var_14916,var_14917,var_14918,var_14919,)
func_14920 = relay.Function([var_14915,var_14916,var_14917,var_14918,var_14919,], output)
mutated_mod['func_14920'] = func_14920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10466_call = mod.get_global_var('func_10466')
func_10468_call = mutated_mod.get_global_var('func_10468')
call_14999 = relay.TupleGetItem(func_10466_call(), 1)
call_15000 = relay.TupleGetItem(func_10468_call(), 1)
output = relay.Tuple([call_14999,])
output2 = relay.Tuple([call_15000,])
func_15007 = relay.Function([], output)
mod['func_15007'] = func_15007
mod = relay.transform.InferType()(mod)
mutated_mod['func_15007'] = func_15007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15007_call = mutated_mod.get_global_var('func_15007')
call_15008 = func_15007_call()
output = call_15008
func_15009 = relay.Function([], output)
mutated_mod['func_15009'] = func_15009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12947_call = mod.get_global_var('func_12947')
func_12948_call = mutated_mod.get_global_var('func_12948')
call_15014 = relay.TupleGetItem(func_12947_call(), 0)
call_15015 = relay.TupleGetItem(func_12948_call(), 0)
var_15020 = relay.var("var_15020", dtype = "float64", shape = (8, 8, 3))#candidate|15020|(8, 8, 3)|var|float64
bop_15021 = relay.right_shift(call_15014.astype('uint32'), var_15020.astype('uint32')) # shape=(8, 8, 3)
bop_15024 = relay.right_shift(call_15015.astype('uint32'), var_15020.astype('uint32')) # shape=(8, 8, 3)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_15044 = func_9857_call()
call_15045 = func_9857_call()
output = relay.Tuple([bop_15021,call_15044,])
output2 = relay.Tuple([bop_15024,call_15045,])
func_15049 = relay.Function([var_15020,], output)
mod['func_15049'] = func_15049
mod = relay.transform.InferType()(mod)
var_15050 = relay.var("var_15050", dtype = "float64", shape = (8, 8, 3))#candidate|15050|(8, 8, 3)|var|float64
output = func_15049(var_15050)
func_15051 = relay.Function([var_15050], output)
mutated_mod['func_15051'] = func_15051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14701_call = mod.get_global_var('func_14701')
func_14703_call = mutated_mod.get_global_var('func_14703')
call_15059 = relay.TupleGetItem(func_14701_call(), 2)
call_15060 = relay.TupleGetItem(func_14703_call(), 2)
func_10466_call = mod.get_global_var('func_10466')
func_10468_call = mutated_mod.get_global_var('func_10468')
call_15065 = relay.TupleGetItem(func_10466_call(), 1)
call_15066 = relay.TupleGetItem(func_10468_call(), 1)
func_6077_call = mod.get_global_var('func_6077')
func_6081_call = mutated_mod.get_global_var('func_6081')
var_15077 = relay.var("var_15077", dtype = "bool", shape = (135,))#candidate|15077|(135,)|var|bool
call_15076 = relay.TupleGetItem(func_6077_call(relay.reshape(var_15077.astype('bool'), [1, 9, 15]), relay.reshape(var_15077.astype('bool'), [1, 9, 15]), ), 0)
call_15078 = relay.TupleGetItem(func_6081_call(relay.reshape(var_15077.astype('bool'), [1, 9, 15]), relay.reshape(var_15077.astype('bool'), [1, 9, 15]), ), 0)
func_12600_call = mod.get_global_var('func_12600')
func_12604_call = mutated_mod.get_global_var('func_12604')
const_15081 = relay.const([6.219348,1.573693,-0.990582,5.837119,3.484686,1.596202,-6.483794,1.443842,-5.071205,-3.187694,-5.226463,9.909153,-2.890043,7.356604,-1.496659,-7.099496,0.766612,-4.440429,-2.108228,7.223631,-4.309369,9.147799,-3.329619,7.557996,6.711687,-1.362738,-7.406306,9.912021,8.441120,-2.839673,-3.798110,5.451011,-3.233820,-8.614957,9.321217,-1.162916,-1.229595,-5.841137,-7.874235,6.138279,-2.630525,0.296265,-6.955458,8.976136,3.547137,5.041105,-7.011001,2.657930,6.388972,0.493880,-8.282482,-2.918675,2.930171,8.205434,6.181089,2.360281,-7.686884,-3.651455,-1.939967,-1.563399,4.257267,5.179754,2.345303,-3.432268,-3.967686,7.739299,7.237820,3.855867,7.921317,-3.194959,-1.903299,-5.471744,-5.096321,4.041484,-5.071972,-8.814147,2.134192,6.939461,7.158450,0.418573,6.497063,-6.264695,1.525969,6.777502,-2.691206,4.840452,2.206934,6.089042,-0.839344,-6.326853,-9.265544,-9.461085,3.239537,-5.401392,3.842786,-1.794674,5.839528,7.553452,6.988946,5.041360,-2.063910,-5.858008,-2.998305,8.448080,-5.007366,3.167971,-3.895628,-4.045455,8.775397,-8.216912,1.105422,4.659378,5.372672,9.746808,2.331801,-9.950676,4.826278,9.912630,-1.437789,-1.792637,0.894233,-0.106751,5.040279,6.831307,9.689099,1.666148,-3.514977,4.329161,7.399422,-3.448218,9.924323,-2.564014,5.865352,-3.802881,-3.888815,-7.730644,-0.252736,8.942235,-6.188542,-3.571012,9.278848,-6.840316,-8.460854,8.916956,-2.246346,-8.301694,4.318899,-3.635135,5.201572,-6.377927,8.767282,2.719009,1.504736,3.918233,0.528877,-2.119958,7.726239,-6.948692,-8.756356,4.959804,-5.799817,2.514462,-4.179753,-8.565181,-0.216622,7.331787,-6.377137,-5.216417,7.164351,2.607896,6.135676,5.515608,-0.324876,1.672021,-4.895946,5.042667,-1.994818,-3.824120,-2.362410,-6.140723,8.118771,-7.410313,-0.209293,-3.799480,-9.308092,-6.284630,8.602578,-2.267668,-9.935117,-2.867470,-7.458942,4.107859,-2.522056,3.368722,-6.216369,-9.440479,7.550260,8.791810,9.759379,5.957052,6.003689,7.545904,-2.925897,-4.547146,3.516992,0.338707,-3.054346,7.317456,-2.229090,4.615727,-7.261411,-0.520936,-8.097034,-1.421189,7.629644,4.135640,4.190562,8.429520,-9.259847,-8.770933,9.392739,2.322163,-2.504619,-2.731671,7.572982,-5.788958,4.536176,5.511119,-5.386265,5.950458,-0.015351,6.782175,-7.842506,7.788652,-1.316594,-6.639051,6.817639,-1.553685,-1.437164,-7.810364,-5.373543,-6.961236,4.607564,-8.881736,9.680019,-7.673706,-8.272447,2.127733,-6.231297,-0.533243,1.665375,-1.664663,-7.319990,-3.998436,-2.706328,7.610281,1.936720,-4.632231,5.644783,6.886489,4.425907,-9.733881,0.349793,-8.208619,-8.301317,-2.127558,4.494772,-5.047845,3.998229,2.647131,1.636861,8.400728,-8.895298,-4.065800,-8.990507,-1.475822,0.593922,3.011299,-2.150296,-5.882372,-0.232847,-7.127428,-6.518238,-2.401151,-5.273213,7.468383,-2.611204,-4.757538,-7.936099,-5.445504,-5.874556,-9.097547,-6.618563,-5.175513,4.963709,3.364407,-4.675157,-5.138359,5.083270,-7.648233,-6.668481,3.585123,-7.790045,7.341443,-1.580046,8.754800,-6.307738,-4.989771,-4.055681,4.128173,-2.759106,7.906764,1.841632,5.437473,-6.818157,-4.519946,6.738102,8.205577,3.812177,-9.295027,6.009038,0.267983,-2.313263,-4.318779,-8.840959,-9.981149,-7.811788,7.101126,2.613009,-2.200860,9.678222,-7.304213,8.857411,-5.944145,-4.411107,-6.500049,2.402382,3.037990,-4.479110,-9.251705,-3.552148,1.424774,-9.131031,-6.296361,6.354651,-4.278257,1.859388,5.181045,-7.263127,1.731071,-4.412606,-2.858426,5.760359,4.196895,6.292430,1.957459,1.973159,3.152557,1.761741,5.409992,-1.037618,5.548662,4.898006,-8.172575,9.397804,-0.193167,-1.494805,6.797756,1.267097,0.622566,-0.183659,-1.734781,6.721806,2.728433,1.406928,2.123276,-8.198411,3.625754,3.732631,-0.193725,4.676316,-8.583785,8.333009,-9.687839,5.164403,-4.314105,-6.856082,4.306881,-5.554862,-9.906552,5.105765,7.151016,8.949341,6.019070,9.225458,7.040891,6.380444,-8.797497,1.639367,6.903700,-3.729112,-7.210292,-0.221141,-6.912795,-0.967031,-5.856417,-6.083463,-8.605828,-1.456374,-3.380564,0.247672,-5.141120,7.290164,6.490314,6.497989,1.861676,-7.657666,-9.843972,9.989910,8.649226,-0.448801,-4.352058,-7.765281,-4.052735,-3.973156,-7.766763,-8.800439,-4.832773,5.854598,-0.666912,-8.562941,-6.743210,1.544055,6.567498,1.554871,-2.722852,-3.678627,-7.775273,7.430733,4.318320,8.320042,6.855908,9.687376,6.006855,-0.371211,6.668752,-6.150127,6.645847], dtype = "float32")#candidate|15081|(448,)|const|float32
const_15082 = relay.const([[6],[7],[-1],[-4],[2],[4],[-1],[-7],[-2],[-5],[8],[-10],[6],[5],[3],[-4],[-7],[4],[9],[-1],[-5],[4],[-5],[-8],[-9],[-8],[9],[-9],[-9],[2],[4],[-8],[8],[-1],[9],[9],[-6],[-1],[3],[8],[4],[-10],[1],[-2],[2],[10],[-10],[10],[-2],[5],[2],[9],[-9],[9],[-2],[6],[2],[-3],[-5],[-5],[6],[6],[-6],[2],[-7],[1],[-10],[-9],[3],[-1],[-4],[2],[-2],[1],[9],[6],[-1],[-1],[-9],[7],[1],[5],[-10],[-10],[-10],[-7],[7],[4],[-4],[9],[-1],[1],[9],[1],[7],[2],[-5],[1],[9],[8],[2],[8],[5],[-1],[7],[4],[-6],[1],[9],[1],[-7],[-5],[-10],[-8],[8],[10],[1],[1],[10],[-7],[-1],[6],[-6],[-1],[7],[2],[-5],[-8],[5],[-3],[4],[-3],[1],[-1],[6],[-9],[-8],[4],[-2],[-10],[7],[4],[-1],[8],[-10],[9],[4],[9],[7],[-8],[9],[-10],[4],[1],[-9],[6],[-3],[9],[-5],[-9],[7],[1],[9],[-9],[-1],[9],[-8],[-6],[-1],[8],[-8],[-5],[5],[4],[-2],[-6],[-1],[2],[-6],[-8],[10],[8],[-6],[-10],[-1],[-6],[-1],[9],[-8],[7],[-8],[-7],[-8],[2],[-10],[3],[-8],[9],[3],[-1],[-8],[-3],[-2],[6],[-9],[-8],[-5],[-7],[3],[-9],[2],[6],[2],[3],[5],[-10],[-3],[-5],[-9],[-2],[5],[5],[-4],[5],[4],[4],[-5],[-5],[6],[-2],[2],[-5],[9],[9],[-10],[-4],[1],[-6],[-4],[6],[-4],[-3],[9],[-6],[5],[-7],[2],[-3],[1],[-8]], dtype = "int8")#candidate|15082|(250, 1)|const|int8
call_15080 = relay.TupleGetItem(func_12600_call(relay.reshape(const_15081.astype('float32'), [8, 8, 7]), relay.reshape(const_15082.astype('int8'), [25, 10]), ), 1)
call_15083 = relay.TupleGetItem(func_12604_call(relay.reshape(const_15081.astype('float32'), [8, 8, 7]), relay.reshape(const_15082.astype('int8'), [25, 10]), ), 1)
bop_15085 = relay.bitwise_or(const_15082.astype('uint64'), const_15081.astype('uint64')) # shape=(250, 448)
func_10296_call = mod.get_global_var('func_10296')
func_10299_call = mutated_mod.get_global_var('func_10299')
var_15102 = relay.var("var_15102", dtype = "uint32", shape = ())#candidate|15102|()|var|uint32
const_15103 = relay.const([8,-3,7,1,-6,-2,-10,-9,9,-10,-4,-9,-4,-10,4,7,3,4,-10,1,9,7,8,-10,9,-7,6,-8,3,-7,9,6,5,-2,-6,9,8,5,-3,-10,8,-5,-5,7,3,2,7,4,1,7,10,-3,3,4,-6,8,4,-8,-8,-7,-6,-3,-9,7,2,7,9,10,-9,-7], dtype = "uint32")#candidate|15103|(70,)|const|uint32
call_15101 = relay.TupleGetItem(func_10296_call(relay.reshape(var_15102.astype('uint32'), []), relay.reshape(const_15103.astype('uint32'), [14, 5, 1]), ), 0)
call_15104 = relay.TupleGetItem(func_10299_call(relay.reshape(var_15102.astype('uint32'), []), relay.reshape(const_15103.astype('uint32'), [14, 5, 1]), ), 0)
bop_15105 = relay.floor_divide(call_15065.astype('float64'), const_15103.astype('float64')) # shape=(8, 8, 70)
bop_15108 = relay.floor_divide(call_15066.astype('float64'), const_15103.astype('float64')) # shape=(8, 8, 70)
func_11364_call = mod.get_global_var('func_11364')
func_11367_call = mutated_mod.get_global_var('func_11367')
const_15118 = relay.const([-1.907260,5.221616,4.388077,-6.646025,0.332192,7.095497,-9.092980,-4.777504,-6.237094,3.111062,9.583757,-3.575799,-5.189111,1.843227,-3.602331,-9.091363,3.954107,-3.310213,2.081483,5.984474,-1.089631,0.944231,3.286116,-7.341344,-4.879265,-5.494104,-8.909256,-2.746434,1.131561,-1.918237,-4.031168,-6.140967,-9.713582,-9.606400,7.153531,-9.068082,-5.498435,-5.850152,0.067884,3.822059], dtype = "float64")#candidate|15118|(40,)|const|float64
call_15117 = relay.TupleGetItem(func_11364_call(relay.reshape(const_15118.astype('float64'), [40,]), relay.reshape(call_15101.astype('uint32'), [70,]), ), 1)
call_15119 = relay.TupleGetItem(func_11367_call(relay.reshape(const_15118.astype('float64'), [40,]), relay.reshape(call_15101.astype('uint32'), [70,]), ), 1)
func_14663_call = mod.get_global_var('func_14663')
func_14667_call = mutated_mod.get_global_var('func_14667')
const_15124 = relay.const([-6,6,7,7,-10,1,-9,-1,-2,-1,10,6,-4,6,-9,-3,-9,-10,-4,-2,-1,2,-2,10,1,-4,3,-10,-6,-1,3,-9,-3,-1,-9,1,-5,-1,7,10,3,10,-5,-2,-9,3,7,4,-4,-8,7,-4,4,9,5,1,7,-5,-4,-1,-2,-2,-10,-10,3,-9,7,3,7,5,5,-1,9,-3,4,5,2,-4,6,-7,2,-9,9,4,-6,-7,7,3,7,1,2,9,3,-6,-9,-6,-9,2,5,-2,-7,1,-1,1,10,1,-8,-6,6,-8,5,6,6,-1,-5,3,-4,-7,-9,-4,2,3,-8,9,-2,-8,10,2,3,-9,6,2,6,-6,-2,6,-10,4,-1,-1,-9,-2,5,2,-5,8,-3,-3,4,6,4,9,-2,-1,5,5,-4,-10,-1,7,-5,9,-7,-9,-4,6,6,1,6,8,-7,-5,2,-10,-10,-10,1,-7,2,9,10,5,1,-1,-1,8,5,-8,1,-9,4,9,9,-6,-1,-8,-10,-4,-10,-10,7,-6,3,9,-2,6,8,-3,-1,-9,-2,1,9,-5,-2,9,-2,10,-10,9,9,-10,-3,5,2,4,10,-7,1,-7,6,-2,2,-6,-3,6,2,-9,1,-9,-8,6,-8,-7,5,-4,2,1,-10,-8,-4,4,-4,-3,9,-7,-4,-4,-6,-3,-7,-5,-3,-4,-5,-5,-9,-7,6,-8,-1,-3,-8,7,-10,-6,-7,7,-7,-4,-3,1,2,5,-7,4,-7,-1,5,-8,8,3,5,9,1,2,4,8,-1,-3,-7,6,-5,-1,-5,-7,-3,2,2,-9,5,-9,-7,7,1,8,-7,3,1,4,3,3,-6,3,6,-1,5,2,-8,-2,8,-8,-4,1,-5,1,8,5,9,-2,-1,-8,4,10,10,10,2,5,8,-9,-10,-2,-4,-4,4,8,8,4,5,-3,-6,2,-2,-3,-4,-5,5,-5,-4,-2,5,-6,3,7,1,-2,5,-6,1,-9,-2,-1,4,3,-7,8,4,-6,-3,-4,3,5,10,-8,9,-7,-6,7,6,-9,5,-6,-3,-6,3,5,6,7,9,6,-3,-8,-3,8,-5,4,-6,10,1,8,-10,2,-2,1,-2,-1,3,-5,-6,-6,10,4,-8,-7,-2,3,-1,7,1,7,8,10,9,8,8,8,-3,6,-7,-10,-2,-1,7,-6,-10,4,3,9,-1,7,8,9,-8,-3,-10,3,8,-4,-4,5,-5,1,-5,10,-5,5,-4,7,9,-6,6,2,-5,-9,1,4,5,4,4,-9,-2,-6,-9,8,-4,-1,-4,-4,-3,10,9,10,7,-7,9,-4,10,-9,3,-1,2,9,4,8,10,-1,-10,-4,-6,-10,9,-10,-3,10,-6,5,2,7,1,3,-1,-10,-7,10,7,2,5,5,-1,-6,-5,-7,8,2,7,-9,-4,-1,-3,-8,-2,-8,-2,-7,-9,10,-7,-10,-8,2,-2,6,-8,-8,-10,3,5,-1,4,10,2,-9,6,1,4,1,-4,3,-4,5,7,5,9,1,-3,-7,2,3,-7,-1,-8,8,-7,-4,-4,-4,6,5,5,-9,8,3,-3,-5,3,-1,8,2,2,8,-4,-7,4,-4,-7,-9,-10,-4,-1,1,-4,-4,2,10,4,2,-10,10,10,-3,8,3,-4,-9,5,-8,2,3,-2,2,9,-5,2,5,9,10,-1,5,9,2,-6,4,4,6,10,-1,-1,-10,-2,-6,2,-10,10,-8,-3,-4,3,-1,-5,3,4,-4,2,7,-8,7,-8,3,-4,6,1,8,-9,-1,5,-2,9,3,2,3,2,8,-9,-9,-1,-2,-6,6,-7,-2,2,1,-1,-1,6,-1,-6,-10,9,7,4,-4,-10,-8,9,9,-3,3,7,-5,9,-3,4,-1,-3,-4,-8,9,-9,4,6,-9,8,-5,5,-9,-7,-1,-4,-7,-1,-5,-9,8,1,4,-7,-10,-5,9,-6,-4,9,-5,8,-1,3,9,-10,8,8,1,-6,-10,4,1,-8,-5,10,3,2,-6,-1,8,9,3,9,3,-2,8,-4,10,-4,10,-4,2,8,2,-3,1,6,1,7,-3,-7,-9,-10,3,-1,-7,-10,1,-9,7,5,7,-3,7,2,-9,2,2,-6,-7,-1,-1,5,9,9,7,-8,-3,3,-9,3,8,7,-9,-6,-9,3,8,-4,-2,-6,6,5,5,1,-3,-3,10,-10,4,-5,4,4,6,2,-2,-8,2,-8,-1,10,-3,-4,4,2,-1,10,-5,-7,4,-10,8,3,-1,-7,-9,-6,-10,5,-6,2,6,-3,6,-3,-1,-5,2,1,10,-6,4,1,-6,-10,7,-2,-1,5,6,6,-2,-10,-10,8,8,-10,9,8,10,-8,7,-2,-4,6,5,-1,4,3,-10,-5,-8,3,-8,1,-1,7,-10,8,3,5,-9,-9,6,8,-5,-8,-10,10,-4,-6,-1,-4,-1,2,8,6,-4,10,-8,-7,3,-6,8,9,-7,8,-9,7,-7,-3,-8,4,-3,3,-5,4,8,9,6,-10,4,-8,-2,-2,-8,8,6,-10,-6,-2,-5,-9,6,1,-7,-4,-8,-5,-1,-3,-3,-7,-3,-10,1,-2,-10,-1,10,-10,-2,-9,9,3,2,-9,7,4,2,-10,7,1,-2,4,2,-10,-8,-7,4,7,7,1,-3,-3,10,-9,-5,4,3,-1,4,9,2,-9,7,-4,-5,6,1,-4,-5,8,3,9,-2,1,4,7,8,-2,-5,7,1,-9,-7,3,-8,-1,-7,-9,1,-6,-1,-10,-3,6,-1,10,-10,-6,2,6,4,-2,-10,-9,-10,7,-8,-4,3,8,3,-8,9,-10,5,2,5,-10,5,-7,4,10,-3,4,-4,-10,2,-10,3,-1,-7,-10,9,9,-9,10,-10,-7,5,-9,-4,6,8,-9,7,1,-5,8,1,9,-4,1,-1,9,10,5,-6,1,10,-6,2,-2,-8,-2,-8,7,9,-5,6,6,-1,-9,-3,-2,-4,9,4,4,2,1,6,1,5,6,10,-7,-5,8,1,-3,8,1,-5,-6,-9,-6,-4,-10,3,-10,2,-1,-6,-6,-1,-1,3,3,-5,3,-5,-10,-8,-5,10,1,3,-8,-1,7,5,10,-10,-4,-1,2,9,-2,4,-5,5,6,-8,-10,-1,2,4,4,5,2,6,-2,8,10,-3,8,-1,-9,-9,9,-5,7,-4,-5,8,5,-5,-9,-2,7,-5,5,-9,6,-3,-9,-7,8,-7,10,-2,1,1,2,-10,1,4,-3,10,3,6,2,10,5,-2,-5,2,-6,8,8,-5,-5,-5,-1,10,10,8,9,1,7,1,-10,2,5,1,1,-2,-6,7,-2,3,-4,2,-1,9,6,4,4,3,-7,3,-2,-4,-2,8,-9,3,-2,-7,10,2,8,4,-3,1,3,8,1,-6,5,4,-2,7,4,10,-2,1,-10,1,-2,-1,-8,-10,1,1,-9,9,-6,7,10,3,10,1,-9,-3,-7,-7,5,6,-5,-1,-6,6,-7,-1,2,9,9,2,-4,-10,1,-8,7,4,2,4,8,-9,5,-3,3,-9,-4,10,-7,-9,-8,-7,-10,6,-6,2,-10,-8,1,2,-5,-8,-3,9,9,-10,-4,3,-6,9,-9,6,2,-6,5,-6,-8,-1,3,1,-7,-2,-8,8,5,-5,-8,6,5,2,-10,2,5,1,3,-3,-4,3,1,5,-9,-2,1,5,-10,6,7,1,3,-1,5,7,8,-1,-1,7,-5,5,7,-2,8,8,-7,-7,-1,9,2,-5,-5,-1,3,6,-7,3,-2,-10,2,6,-8,-2,-1,7,6,-6,-10,-9,3,10,6,-5,-8,-1,-4,10,1,-1,4,8,1,10,8,-4,-5,-2,-6,3,3,-4,10,9,7,-4,7,10,-5,-9,2,-6,8,1,-7,7,8,-7,7,-10,5,7,7,1,-2,6,6,2,-2,-7,7,10,-9,-4,4,-3,9,2,1,-9,-6,6,9,-7,1,3,-9,-5,-2,7,4,-5,-1,-10,-10,5,6,-9,1,5,9,-2,-2,9,8,10,-5,7,-1,10,10,9,-9,10,-2,2,4,2,-2,10,4,-6,-4,-6,-1,-6,2,-6,4,10,2,9,-5,2,1,-1,-1,-3,9,-1,6,3,5,-10,5,4,2,-3,-4,6,6,-10,4,3,-3,-4,-2,-8,6,3,-7,-9,10,-6,7,-10,1,10,-3,7,-5,-6,7,3,1,-5,5,-7,-5,1,-9,5,-1,3,7,-10,2,3,-2,-5,4,-3,-5,8,-5,4,-10,-4,-5,4,9,-8,2,2,-8,6,6,-5,-10,-3,-1,-1,-5,1,3,5,1,-5,-5,-6,-6,8,-10,5,5,-6,-4,-7,-5,-10,-6,-2,-8,-2,6,7,8,5,8,9,7,-10,-4,1,-5,-8,8,2,9,-1,9,6,-5,7,-3,9,-2,3,5,-5,-5,-3,-5,8,-6,8,9,5,6,-7,6,1,4,6,-7,10,-6,-4,-8,4,3,1,7,-6,-8,4,-9,-4,10,-2,10,9,-5,-8,9,-6,3,4,5,-5,-3,9,-5,-6,-2,1,2,-2,5,1,2,-6,-7,7,8,-5,2,-4,-6,1,3,-1,-10,-6,-1,-8,-6,-9,5,-7,9,-6,5,-7,2,-10,-8,2,4,-4,4,-9,6,-5,4,-4,5,4,-9,2,7,-8,3,-2,7,1,7,2,-5,-4,9,4,7,-4,6,-10,8,-9,-8,-5,6,4,5,9,-3,9,-9,3,-10,2,5,-3,10,3,3,-2,-5,4,-4,-7,4,-6,10,10,-8,-10,-6,5,2,-5,7,4,8,9,-1,-9,-6,-9,-8,-8,3,1,-8,-5,-6,5,-2,3,-9,3,1,-6,-9,-5,5,-5,-1,6,-5,-2,-5,-4,10,-8,2,-10,5,1,-2,-3,10,-3,-6,-2,4,-2,5,-6,5,-3,-7,-3,-10,6,-3,-8,7,-5,4,6,5,5,-5,-2,-6,1,-9,-6,9,10,-1,4,-4,2,8,4,-5,-1,1,-3,8,2,8,-6,-10,-8,7,-10,1,-8,10,-2,2,-7,9,-2,4,6,-2,9,-1,4,1,10,5,-2,-2,10,-10,-7,-7,-7,4,4,-6,-9,-2,-4,6,4,1,-4,2,7,1,10,6,8,1,-8,-5,-1,-2,9,-10,-9,10,-6,-9,6,-8,7,-4,-5,-7,1,2,8,-8,1,-1,-10,8,-5,10,9,10,3,-1,8,-1,-1,-2,6,7,9,-10,2,9,-6,-1,-9,1,4,10,1,2,6,-2,-5,10,8,6,-1,-7,4,-2,-8,6,-2,-5,-10,4,2,-6,4,4,-9,1,-5,-7,-8,-3,9,-8,6,5,-10,-1,4,9,7,-1,4,-4,-2,-2,-9,7,-4,8,-6,-7,-1,-9,10,-4,-1,-1,7,-6,8,9,2,-5,9,-8,8,3,8,6,-10,-4,5,8,5,-3,1,-2,6,-1,1,-1,-7,-10,-4,2,9,5,-3,10,-6,-1,-2,9,-8,-4,2,-2,10,5,-10,-10,-2,7,-7,-3,9,-1,5,-1,-10,6,2,10,-9,6,1,8,-10,-1,1,1,6,-3,1,5,-8,-5,8,2,10,5,-5,-7,2,-3,1,-5,7,-1,-9,-2,-7,7,2,-3,9,-4,-4,9,-10,-9,10,10,-1,6,7,-8,2,-2,-7,7,-2,10,3,-2,-4,3,-4,-1,-4,-4,4,-7,-9,3,3,-2,10,-1,-1,-3,3,-1,1,-1,-9,-7,-8,9,5,-5,-1,-3,9,3,6,-7,4,-3,7,1,10,-9,4,10,-2,-6,-2,-4,-3,-10,-3,-8,-4,3,7,-9,1,9,-8,3,-4,10,9,6,1,3,-3,-2,-3,8,8,-9,7,-4,-9,-4,-7,-6,10,-10,-7,6,3,-9,-2,6,-6,1,-5,6,-2,-6,5,-7,5,6,10,4,-10,10,1,6,-5,9,-1,-5,-7,2,-4,-9,-6,-2,8,10,10], dtype = "uint32")#candidate|15124|(2288,)|const|uint32
var_15125 = relay.var("var_15125", dtype = "float32", shape = (99,))#candidate|15125|(99,)|var|float32
call_15123 = relay.TupleGetItem(func_14663_call(relay.reshape(const_15124.astype('uint32'), [2288,]), relay.reshape(var_15125.astype('float32'), [1, 99]), ), 1)
call_15126 = relay.TupleGetItem(func_14667_call(relay.reshape(const_15124.astype('uint32'), [2288,]), relay.reshape(var_15125.astype('float32'), [1, 99]), ), 1)
output = relay.Tuple([call_15059,call_15076,var_15077,call_15080,bop_15085,call_15101,var_15102,bop_15105,call_15117,const_15118,call_15123,const_15124,var_15125,])
output2 = relay.Tuple([call_15060,call_15078,var_15077,call_15083,bop_15085,call_15104,var_15102,bop_15108,call_15119,const_15118,call_15126,const_15124,var_15125,])
func_15127 = relay.Function([var_15077,var_15102,var_15125,], output)
mod['func_15127'] = func_15127
mod = relay.transform.InferType()(mod)
mutated_mod['func_15127'] = func_15127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15127_call = mutated_mod.get_global_var('func_15127')
var_15129 = relay.var("var_15129", dtype = "bool", shape = (135,))#candidate|15129|(135,)|var|bool
var_15130 = relay.var("var_15130", dtype = "uint32", shape = ())#candidate|15130|()|var|uint32
var_15131 = relay.var("var_15131", dtype = "float32", shape = (99,))#candidate|15131|(99,)|var|float32
call_15128 = func_15127_call(var_15129,var_15130,var_15131,)
output = call_15128
func_15132 = relay.Function([var_15129,var_15130,var_15131,], output)
mutated_mod['func_15132'] = func_15132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13532_call = mod.get_global_var('func_13532')
func_13533_call = mutated_mod.get_global_var('func_13533')
call_15141 = relay.TupleGetItem(func_13532_call(), 0)
call_15142 = relay.TupleGetItem(func_13533_call(), 0)
output = call_15141
output2 = call_15142
func_15147 = relay.Function([], output)
mod['func_15147'] = func_15147
mod = relay.transform.InferType()(mod)
output = func_15147()
func_15148 = relay.Function([], output)
mutated_mod['func_15148'] = func_15148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14478_call = mod.get_global_var('func_14478')
func_14480_call = mutated_mod.get_global_var('func_14480')
call_15192 = relay.TupleGetItem(func_14478_call(), 1)
call_15193 = relay.TupleGetItem(func_14480_call(), 1)
output = call_15192
output2 = call_15193
func_15197 = relay.Function([], output)
mod['func_15197'] = func_15197
mod = relay.transform.InferType()(mod)
output = func_15197()
func_15198 = relay.Function([], output)
mutated_mod['func_15198'] = func_15198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11585_call = mod.get_global_var('func_11585')
func_11586_call = mutated_mod.get_global_var('func_11586')
call_15205 = relay.TupleGetItem(func_11585_call(), 0)
call_15206 = relay.TupleGetItem(func_11586_call(), 0)
output = relay.Tuple([call_15205,])
output2 = relay.Tuple([call_15206,])
func_15219 = relay.Function([], output)
mod['func_15219'] = func_15219
mod = relay.transform.InferType()(mod)
mutated_mod['func_15219'] = func_15219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15219_call = mutated_mod.get_global_var('func_15219')
call_15220 = func_15219_call()
output = call_15220
func_15221 = relay.Function([], output)
mutated_mod['func_15221'] = func_15221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9857_call = mod.get_global_var('func_9857')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_15375 = func_9857_call()
call_15376 = func_9857_call()
var_15383 = relay.var("var_15383", dtype = "float64", shape = (8, 8, 14))#candidate|15383|(8, 8, 14)|var|float64
bop_15384 = relay.logical_and(call_15375.astype('bool'), var_15383.astype('bool')) # shape=(8, 8, 14)
bop_15387 = relay.logical_and(call_15376.astype('bool'), var_15383.astype('bool')) # shape=(8, 8, 14)
func_8501_call = mod.get_global_var('func_8501')
func_8506_call = mutated_mod.get_global_var('func_8506')
var_15396 = relay.var("var_15396", dtype = "float32", shape = (150,))#candidate|15396|(150,)|var|float32
const_15397 = relay.const([-3.782581,9.778818,2.968699,-6.716101,9.574037,-8.568494,7.469170,9.861624,3.763992,3.963315,1.973995,-0.954641,5.101629,3.653476,-7.722181,-3.646475,9.844810,-8.080726,-5.621745,-2.875457,-0.962887,9.632292,-2.645395,8.847987,9.136597,1.585425,-2.333791,7.242673,-5.622829,-7.728943,5.060997,4.402625,-2.622432,6.197650,8.089703,-1.545551,-2.530906,3.830078,2.884871,-4.579168,8.993203,4.470288,-1.002720,-7.418023,7.605770,4.222823,7.966710,-3.971837,-6.313328,-8.607011,1.666540,-3.800881,-1.107385,8.522657,-5.327714,-7.055215,7.731136,0.439125,-3.646340,-3.374257,-0.993948,-7.324445,8.496561,9.037935,-8.808328,7.293709,8.723887,9.028836,8.821418,6.693981,5.626314,3.946703,0.345252,-5.439623,-7.242457,4.467423,-1.600755,-7.254162,-9.395959,0.218707,0.544387,5.428659,-7.569511,-9.284025,7.447513,-4.061427,-3.711795,8.797347,-4.341245,1.833300,5.317434,-5.076924,8.891171,8.107194,-8.853359,-8.989036,3.749160,-8.005022,9.545275,2.246979,-0.714653,5.480543,2.451868,-4.390932,-0.196443,5.171551,0.403607,5.090786,-3.930721,-9.790932,7.739020,9.960948,-9.087435,9.586326,-0.449382,-3.176075,-1.728862,7.622126,2.906009,9.216829,-8.380739,0.982184,-1.498607,-7.891213,4.888655,-6.534800,3.380460,1.484375,1.746032,9.977223,1.144969,0.740145,7.342290,8.565551,-8.685707,-2.687229,4.743774,-9.874708,-0.377514,5.791458,-6.205311,8.378986,8.393331,9.628539,0.635546,-9.972903,0.869994,-1.766889,7.694174,2.309658,-6.144084,-4.357498,0.475510,-8.959949,9.538738,3.786480,7.206839,5.553118,8.613869,0.487430,-6.893531,5.454043,4.100641,-7.976883,4.133449,5.648100,-7.815043,-9.140182,-4.006613,8.723673,-4.561634,8.593520,9.426503,-7.978350,-0.993310,8.583193,7.241366,-3.933577,-5.948587,5.785671,-7.341452,-0.535662,-5.338209,-2.171370,8.566958,-8.364873,-6.666113,0.358348,8.666971,-1.096030,8.046842,-5.039886,-9.212763,-4.532270,6.292169,-3.254932,-3.056236,-0.670384,0.724367,0.752740,1.012996,-1.909269,-9.717089,1.885509,9.834693,9.622633,-6.436352,-0.549919,-5.162087,6.382551,-5.881552,2.046219,-7.053764,-2.844647,-9.679496,-4.461332,6.076764,8.260527,-3.984842,1.851487,-4.902656,4.854450,-5.479584,5.654678,-0.789231,3.332671,-3.758825,3.081421,-0.432881,2.972785,5.792300,-1.977925,-6.720459,-2.810632,3.024570,6.233308,-2.940175,-7.358190,-5.308438,2.397853,-7.716087,9.874896,0.663086,-0.814319,-0.993884,-9.359575,2.834432,4.099427,-4.548150,2.965129,6.934381,7.336629,5.329034,2.903838,7.596190,-4.303817,8.883641,4.693628,-8.901828,-0.088786,0.376067,-4.881333,-1.346924,-3.653743,-3.648242,-2.562513,-9.410266,5.560494,3.553538,9.328508,-9.931333,-2.067343,-7.753515,-2.450937,9.072560,2.459110,-3.461079,-5.425910,5.749347,3.097799,-1.544995,-3.125733,-4.777068,-3.955293,-2.893318,-1.808859,9.195676,-7.978946,-6.526208,-1.051867,9.769275,-4.526454,7.300088,-6.137616,-2.902456,-9.280688,6.839474,5.287895,6.129857,1.713375,-3.014231,-7.173958,9.238397,4.928351,2.333888,2.237177,9.683575,-2.018998,-3.531540,-9.963557,4.149359,1.256718,3.821058,-6.762793,-1.850234,-3.388094,3.961041,-3.303010,4.314481,5.115108,2.637085,0.537250,-8.522348,-6.345561,5.212128,8.681833,4.126146,5.861939,-5.167204,6.772156,-3.628010,8.762852,-7.003728,-4.505335,5.046247,0.295150,-1.705051,7.644367,-5.743941,-8.514978,-4.312023,-4.254542,-1.145213,-0.040630,2.572071,-4.871325,0.188389,-8.724453,7.188037,5.971643,-7.010785,-4.025455,-2.896287,3.802431,7.254233,-9.619036,-1.572738,4.372428,-2.812221,9.820018,-7.701529,7.116271,4.831955,9.856671,-1.614702,5.817409,4.426404,-7.655102,5.294115,1.605547,6.831220,2.890076,-3.043323,-0.077619,-9.286189,0.112622,2.339839,4.259124,-8.183478,-9.315019,9.030675,3.102068,9.627891,-4.553209,3.949599,1.008175,1.366288,-0.920810,8.179551,6.043449,-2.141888,-6.933898,3.711319,-5.304790,3.521747,6.022301,-8.097608,8.164581,-9.420878,0.890453,3.372107,-7.940440,0.430297,0.584490,5.920210,-7.171156,1.671277,-1.736521,-0.056622,-8.561516,5.737405,4.702688,-8.339946,8.806847,-2.876388,-0.429313,0.266303,0.759452,-1.083881,9.542442,9.716680,5.566743,7.671904,0.007249,9.182025,6.807907,1.903816,-3.548982,8.090705,-6.979076,-0.681073,-7.941418,9.331111,-4.400616,-3.073404,-9.365615,-6.434529,-9.900290,4.464543,6.849819,1.715815,2.877353,6.280388,-0.846104,2.116897,0.502730,7.581502,4.618535,6.642851,-1.078030,5.930221,5.820287,2.760494,0.196647,1.095753,0.372482,3.161582,-9.478090,-3.880891,-0.144957,5.630005,-4.429847,3.820117,-5.692459,0.771517,-4.056703,2.339043,-4.115488,6.686586,7.959430,7.852732,9.725625,8.806767,2.199566,-8.532600,8.244243,1.993912,-4.294896,8.526543,9.529515,-8.196552,6.210937,7.009329,-8.709732,-8.983240,-4.056024,-8.355785,-9.902328,2.653572,1.219888,4.364244,3.551162,-0.213155,9.295036,-1.739146,6.596680,-2.715211,-9.703310,-5.132626,-8.480248,-7.726800,-6.651158,-8.622459,-8.447640,8.052267,4.020124,-2.837473], dtype = "float64")#candidate|15397|(507,)|const|float64
const_15398 = relay.const(-3, dtype = "int64")#candidate|15398|()|const|int64
var_15399 = relay.var("var_15399", dtype = "float32", shape = (99,))#candidate|15399|(99,)|var|float32
call_15395 = relay.TupleGetItem(func_8501_call(relay.reshape(var_15396.astype('float32'), [15, 2, 5]), relay.reshape(const_15397.astype('float64'), [507, 1]), relay.reshape(const_15398.astype('int64'), []), relay.reshape(var_15399.astype('float32'), [99,]), ), 1)
call_15400 = relay.TupleGetItem(func_8506_call(relay.reshape(var_15396.astype('float32'), [15, 2, 5]), relay.reshape(const_15397.astype('float64'), [507, 1]), relay.reshape(const_15398.astype('int64'), []), relay.reshape(var_15399.astype('float32'), [99,]), ), 1)
var_15402 = relay.var("var_15402", dtype = "float64", shape = (507,))#candidate|15402|(507,)|var|float64
bop_15403 = relay.maximum(const_15397.astype('int32'), relay.reshape(var_15402.astype('int32'), relay.shape_of(const_15397))) # shape=(507,)
func_13923_call = mod.get_global_var('func_13923')
func_13924_call = mutated_mod.get_global_var('func_13924')
call_15411 = func_13923_call()
call_15412 = func_13923_call()
func_142_call = mod.get_global_var('func_142')
func_144_call = mutated_mod.get_global_var('func_144')
call_15414 = func_142_call(relay.reshape(var_15402.astype('float64'), [13, 3, 13]))
call_15415 = func_142_call(relay.reshape(var_15402.astype('float64'), [13, 3, 13]))
uop_15435 = relay.log10(bop_15403.astype('float64')) # shape=(507,)
uop_15440 = relay.acos(uop_15435.astype('float64')) # shape=(507,)
bop_15448 = relay.add(uop_15440.astype('uint32'), const_15398.astype('uint32')) # shape=(507,)
output = relay.Tuple([bop_15384,call_15395,var_15396,var_15399,call_15411,call_15414,bop_15448,])
output2 = relay.Tuple([bop_15387,call_15400,var_15396,var_15399,call_15412,call_15415,bop_15448,])
F = relay.Function([var_15383,var_15396,var_15399,var_15402,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_15383,var_15396,var_15399,var_15402,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

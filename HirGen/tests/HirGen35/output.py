import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_6 = relay.var("var_6", dtype = "int64", shape = (2, 10, 10))#candidate|6|(2, 10, 10)|var|int64
var_7 = relay.var("var_7", dtype = "int64", shape = (2, 10, 10))#candidate|7|(2, 10, 10)|var|int64
bop_8 = relay.right_shift(var_6.astype('int64'), relay.reshape(var_7.astype('int64'), relay.shape_of(var_6))) # shape=(2, 10, 10)
uop_45 = relay.acosh(var_6.astype('float64')) # shape=(2, 10, 10)
bop_47 = relay.greater_equal(uop_45.astype('bool'), relay.reshape(bop_8.astype('bool'), relay.shape_of(uop_45))) # shape=(2, 10, 10)
output = bop_47
output2 = bop_47
func_51 = relay.Function([var_6,var_7,], output)
mod['func_51'] = func_51
mod = relay.transform.InferType()(mod)
mutated_mod['func_51'] = func_51
mutated_mod = relay.transform.InferType()(mutated_mod)
func_51_call = mutated_mod.get_global_var('func_51')
var_53 = relay.var("var_53", dtype = "int64", shape = (2, 10, 10))#candidate|53|(2, 10, 10)|var|int64
var_54 = relay.var("var_54", dtype = "int64", shape = (2, 10, 10))#candidate|54|(2, 10, 10)|var|int64
call_52 = func_51_call(var_53,var_54,)
output = call_52
func_55 = relay.Function([var_53,var_54,], output)
mutated_mod['func_55'] = func_55
mutated_mod = relay.transform.InferType()(mutated_mod)
var_141 = relay.var("var_141", dtype = "float32", shape = (2, 12, 16))#candidate|141|(2, 12, 16)|var|float32
uop_142 = relay.cos(var_141.astype('float32')) # shape=(2, 12, 16)
bop_155 = relay.equal(uop_142.astype('bool'), relay.reshape(var_141.astype('bool'), relay.shape_of(uop_142))) # shape=(2, 12, 16)
var_166 = relay.var("var_166", dtype = "float32", shape = (2, 12, 16))#candidate|166|(2, 12, 16)|var|float32
bop_167 = relay.right_shift(uop_142.astype('uint16'), relay.reshape(var_166.astype('uint16'), relay.shape_of(uop_142))) # shape=(2, 12, 16)
output = relay.Tuple([bop_155,bop_167,])
output2 = relay.Tuple([bop_155,bop_167,])
func_173 = relay.Function([var_141,var_166,], output)
mod['func_173'] = func_173
mod = relay.transform.InferType()(mod)
var_174 = relay.var("var_174", dtype = "float32", shape = (2, 12, 16))#candidate|174|(2, 12, 16)|var|float32
var_175 = relay.var("var_175", dtype = "float32", shape = (2, 12, 16))#candidate|175|(2, 12, 16)|var|float32
output = func_173(var_174,var_175,)
func_176 = relay.Function([var_174,var_175,], output)
mutated_mod['func_176'] = func_176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_416 = relay.var("var_416", dtype = "int64", shape = ())#candidate|416|()|var|int64
var_417 = relay.var("var_417", dtype = "int64", shape = (14, 4, 5))#candidate|417|(14, 4, 5)|var|int64
bop_418 = relay.maximum(var_416.astype('int64'), var_417.astype('int64')) # shape=(14, 4, 5)
func_51_call = mod.get_global_var('func_51')
func_55_call = mutated_mod.get_global_var('func_55')
const_422 = relay.const([-10,6,-8,1,4,-3,-4,2,-4,-1,-4,-9,10,4,-9,10,3,7,-2,9,4,6,6,9,10,-2,2,-5,-7,8,3,-7,-3,-8,-5,-1,-9,-7,7,-5,-6,3,10,-8,6,5,5,6,6,-3,2,-2,-10,-6,-4,4,-7,8,3,-6,-2,-8,1,-5,9,2,1,-10,2,8,6,6,6,-5,-9,-10,10,-10,-2,-1,-4,-2,-6,7,-8,-6,6,-10,-3,3,-5,-5,-1,-9,-9,-3,5,7,8,1,-9,-2,8,-9,-6,5,7,8,2,-10,10,-3,9,-6,5,4,-6,-3,8,-5,4,8,9,-9,3,-1,3,8,7,-10,3,10,-10,-4,-3,-1,-9,10,4,9,1,10,8,-7,-2,-9,2,-4,10,-9,9,2,8,5,3,1,8,7,9,-10,2,-8,9,-5,2,-4,5,-8,-9,-6,9,-6,9,4,9,1,-5,6,-10,3,-6,-10,2,-3,-3,3,8,-10,5,5,9,-7,-4,8,-5,-6,9,-3,6,-2], dtype = "int64")#candidate|422|(200,)|const|int64
call_421 = func_51_call(relay.reshape(const_422.astype('int64'), [2, 10, 10]), relay.reshape(const_422.astype('int64'), [2, 10, 10]), )
call_423 = func_51_call(relay.reshape(const_422.astype('int64'), [2, 10, 10]), relay.reshape(const_422.astype('int64'), [2, 10, 10]), )
output = relay.Tuple([bop_418,call_421,const_422,])
output2 = relay.Tuple([bop_418,call_423,const_422,])
func_437 = relay.Function([var_416,var_417,], output)
mod['func_437'] = func_437
mod = relay.transform.InferType()(mod)
mutated_mod['func_437'] = func_437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_437_call = mutated_mod.get_global_var('func_437')
var_439 = relay.var("var_439", dtype = "int64", shape = ())#candidate|439|()|var|int64
var_440 = relay.var("var_440", dtype = "int64", shape = (14, 4, 5))#candidate|440|(14, 4, 5)|var|int64
call_438 = func_437_call(var_439,var_440,)
output = call_438
func_441 = relay.Function([var_439,var_440,], output)
mutated_mod['func_441'] = func_441
mutated_mod = relay.transform.InferType()(mutated_mod)
var_552 = relay.var("var_552", dtype = "int8", shape = (3, 1, 6))#candidate|552|(3, 1, 6)|var|int8
const_553 = relay.const([[[-5,-3,4,-7,-2,-2],[-4,4,-10,9,-10,-3],[3,-8,1,1,8,6],[-7,3,-6,8,6,9],[5,-9,2,-5,-6,-5],[10,-4,1,-10,-7,-8],[8,4,-7,9,2,6],[-4,10,-4,8,1,2],[-3,10,7,-2,1,-8],[-10,10,-7,-7,-9,-10],[2,-9,-9,6,-5,-4]],[[2,7,4,4,4,-6],[-4,1,-10,8,-8,-6],[10,-1,-6,-7,-10,6],[10,6,5,7,4,5],[-9,-5,-2,6,-1,-6],[9,-9,-6,3,-4,1],[10,1,6,-8,-10,5],[-4,-1,7,3,-1,-7],[7,6,-6,3,7,-1],[-1,-9,2,3,5,4],[-3,10,-1,-4,6,10]],[[-9,9,8,-8,-9,-1],[2,-10,2,-1,-10,1],[-9,-8,7,6,-2,9],[-4,-10,-5,-5,-7,-6],[-6,-5,1,8,3,2],[5,-5,4,6,2,-3],[8,-5,-3,-5,-1,5],[-6,-9,-10,-8,-2,1],[-6,6,-6,-6,6,-1],[-4,8,-9,-7,-8,6],[9,3,7,-7,-3,-3]]], dtype = "int8")#candidate|553|(3, 11, 6)|const|int8
bop_554 = relay.equal(var_552.astype('bool'), const_553.astype('bool')) # shape=(3, 11, 6)
func_173_call = mod.get_global_var('func_173')
func_176_call = mutated_mod.get_global_var('func_176')
var_566 = relay.var("var_566", dtype = "float32", shape = (24, 16))#candidate|566|(24, 16)|var|float32
call_565 = relay.TupleGetItem(func_173_call(relay.reshape(var_566.astype('float32'), [2, 12, 16]), relay.reshape(var_566.astype('float32'), [2, 12, 16]), ), 1)
call_567 = relay.TupleGetItem(func_176_call(relay.reshape(var_566.astype('float32'), [2, 12, 16]), relay.reshape(var_566.astype('float32'), [2, 12, 16]), ), 1)
func_51_call = mod.get_global_var('func_51')
func_55_call = mutated_mod.get_global_var('func_55')
const_577 = relay.const([3,-1,2,-6,-8,-6,-1,-8,-2,10,3,-5,-3,10,-5,4,-4,3,-8,5,-5,2,-3,9,-7,1,8,-6,4,-9,-8,6,-8,8,-10,-4,3,3,4,-3,2,5,-9,-10,-5,-1,2,7,-8,9,-9,5,7,-9,-9,-6,-6,8,9,10,7,-1,1,-2,-4,-9,4,-6,-1,3,-9,10,9,-3,-7,6,-6,-6,4,8,-9,-2,10,-3,5,10,7,1,9,6,-7,-4,7,10,8,-9,2,7,9,2,7,10,-1,10,5,7,-10,4,1,-9,9,-3,1,-4,3,8,7,4,9,7,-1,3,-5,9,1,2,-9,-3,-8,-3,-3,1,-7,8,-10,-7,1,-4,-8,-2,-2,7,1,2,-8,-10,-5,1,-7,-7,5,-10,7,3,-9,-2,-9,-4,2,-2,2,1,7,9,-2,3,-4,2,-8,-9,-9,-10,4,1,-2,6,8,-1,-9,9,1,-9,-6,8,-5,3,-8,4,-6,7,9,2,-9,2,-3,1,2,9,-8,-2], dtype = "int64")#candidate|577|(200,)|const|int64
call_576 = func_51_call(relay.reshape(const_577.astype('int64'), [2, 10, 10]), relay.reshape(const_577.astype('int64'), [2, 10, 10]), )
call_578 = func_51_call(relay.reshape(const_577.astype('int64'), [2, 10, 10]), relay.reshape(const_577.astype('int64'), [2, 10, 10]), )
func_437_call = mod.get_global_var('func_437')
func_441_call = mutated_mod.get_global_var('func_441')
const_582 = relay.const(10, dtype = "int64")#candidate|582|()|const|int64
var_583 = relay.var("var_583", dtype = "int64", shape = (140, 2))#candidate|583|(140, 2)|var|int64
call_581 = relay.TupleGetItem(func_437_call(relay.reshape(const_582.astype('int64'), []), relay.reshape(var_583.astype('int64'), [14, 4, 5]), ), 0)
call_584 = relay.TupleGetItem(func_441_call(relay.reshape(const_582.astype('int64'), []), relay.reshape(var_583.astype('int64'), [14, 4, 5]), ), 0)
func_51_call = mod.get_global_var('func_51')
func_55_call = mutated_mod.get_global_var('func_55')
call_595 = func_51_call(relay.reshape(call_576.astype('int64'), [2, 10, 10]), relay.reshape(const_577.astype('int64'), [2, 10, 10]), )
call_596 = func_51_call(relay.reshape(call_576.astype('int64'), [2, 10, 10]), relay.reshape(const_577.astype('int64'), [2, 10, 10]), )
output = relay.Tuple([bop_554,call_565,var_566,call_576,const_577,call_581,const_582,var_583,call_595,])
output2 = relay.Tuple([bop_554,call_567,var_566,call_578,const_577,call_584,const_582,var_583,call_596,])
func_599 = relay.Function([var_552,var_566,var_583,], output)
mod['func_599'] = func_599
mod = relay.transform.InferType()(mod)
mutated_mod['func_599'] = func_599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_599_call = mutated_mod.get_global_var('func_599')
var_601 = relay.var("var_601", dtype = "int8", shape = (3, 1, 6))#candidate|601|(3, 1, 6)|var|int8
var_602 = relay.var("var_602", dtype = "float32", shape = (24, 16))#candidate|602|(24, 16)|var|float32
var_603 = relay.var("var_603", dtype = "int64", shape = (140, 2))#candidate|603|(140, 2)|var|int64
call_600 = func_599_call(var_601,var_602,var_603,)
output = call_600
func_604 = relay.Function([var_601,var_602,var_603,], output)
mutated_mod['func_604'] = func_604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_885 = relay.var("var_885", dtype = "float64", shape = (6, 4, 14))#candidate|885|(6, 4, 14)|var|float64
uop_886 = relay.sinh(var_885.astype('float64')) # shape=(6, 4, 14)
func_51_call = mod.get_global_var('func_51')
func_55_call = mutated_mod.get_global_var('func_55')
const_892 = relay.const([[1,-1,-6,-3,6,-1,-8,10,-6,-3,6,-9,-8,-10,4,10,-4,2,-5,-2],[9,-5,-10,10,1,10,-9,-10,-4,6,6,5,-7,10,2,-5,5,-9,-5,10],[-2,5,7,-2,8,1,4,-4,3,-4,-5,-7,9,7,4,-9,-8,-2,2,8],[-2,5,-6,-8,2,5,3,2,-5,5,8,10,10,1,-5,-3,-9,-6,7,4],[-8,-9,-1,2,-9,7,-10,-3,8,2,4,-4,-4,-8,4,10,-2,-4,9,-9],[2,-8,-3,-7,-5,-4,-6,2,9,-1,-3,-7,-2,-10,-7,-1,-4,-5,8,-6],[1,-1,-8,-7,2,-10,-10,4,7,5,2,5,5,-1,-2,-7,10,-1,1,-5],[-7,2,3,-3,9,-4,-6,-4,-1,-5,5,7,9,4,-8,-5,-6,-4,2,-9],[5,-9,-6,-1,10,-1,7,-8,6,8,-3,-8,-1,-9,-10,-5,6,6,-1,-9],[5,5,8,10,-7,7,-5,-10,9,-3,-8,6,4,-3,10,-5,-2,7,-6,-5]], dtype = "int64")#candidate|892|(10, 20)|const|int64
call_891 = func_51_call(relay.reshape(const_892.astype('int64'), [2, 10, 10]), relay.reshape(const_892.astype('int64'), [2, 10, 10]), )
call_893 = func_51_call(relay.reshape(const_892.astype('int64'), [2, 10, 10]), relay.reshape(const_892.astype('int64'), [2, 10, 10]), )
uop_909 = relay.atan(uop_886.astype('float64')) # shape=(6, 4, 14)
bop_920 = relay.logical_and(uop_909.astype('bool'), relay.reshape(uop_886.astype('bool'), relay.shape_of(uop_909))) # shape=(6, 4, 14)
var_934 = relay.var("var_934", dtype = "float64", shape = (6, 4, 14))#candidate|934|(6, 4, 14)|var|float64
bop_935 = relay.less_equal(uop_909.astype('bool'), relay.reshape(var_934.astype('bool'), relay.shape_of(uop_909))) # shape=(6, 4, 14)
output = relay.Tuple([call_891,const_892,bop_920,bop_935,])
output2 = relay.Tuple([call_893,const_892,bop_920,bop_935,])
func_946 = relay.Function([var_885,var_934,], output)
mod['func_946'] = func_946
mod = relay.transform.InferType()(mod)
mutated_mod['func_946'] = func_946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_946_call = mutated_mod.get_global_var('func_946')
var_948 = relay.var("var_948", dtype = "float64", shape = (6, 4, 14))#candidate|948|(6, 4, 14)|var|float64
var_949 = relay.var("var_949", dtype = "float64", shape = (6, 4, 14))#candidate|949|(6, 4, 14)|var|float64
call_947 = func_946_call(var_948,var_949,)
output = call_947
func_950 = relay.Function([var_948,var_949,], output)
mutated_mod['func_950'] = func_950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1495 = relay.var("var_1495", dtype = "float64", shape = (1, 3, 3))#candidate|1495|(1, 3, 3)|var|float64
uop_1496 = relay.log(var_1495.astype('float64')) # shape=(1, 3, 3)
uop_1515 = relay.exp(uop_1496.astype('float32')) # shape=(1, 3, 3)
func_599_call = mod.get_global_var('func_599')
func_604_call = mutated_mod.get_global_var('func_604')
const_1519 = relay.const([6,8,5,2,-7,1,1,6,10,3,-9,8,7,-6,-6,6,4,-7], dtype = "int8")#candidate|1519|(18,)|const|int8
const_1520 = relay.const([-2.675198,1.078521,-3.913929,7.913520,7.796070,-7.616476,1.728352,-1.534255,5.234715,8.305738,-3.917381,8.376228,6.167006,-6.986321,8.190388,-9.158272,-2.021269,9.605521,6.314296,8.697537,-4.249010,-5.348154,-1.452785,8.198624,-4.751706,4.020114,4.816329,5.405002,-1.064563,2.275204,3.442510,-4.794097,1.601981,-3.322534,-6.236577,5.301275,-0.714561,-9.780917,-6.287122,-2.652277,-5.944319,4.614436,-2.063779,3.486268,6.027223,-0.420200,-2.792626,-4.222914,-0.971158,-2.917674,2.407442,7.597858,8.436395,-6.405700,7.258684,4.308003,3.176299,2.127991,2.344808,-8.831335,7.179934,3.204820,8.043736,3.465701,-3.579791,-2.287179,5.122185,8.654369,-7.117204,-4.772876,-6.401563,0.505351,0.136322,-0.950852,7.562450,0.198250,7.548711,7.521944,-3.769010,8.794180,-2.706584,-3.386305,9.496944,9.599795,-4.368920,-7.268340,9.365172,-1.415090,-7.831013,0.851342,8.794857,8.614225,6.230434,-0.013477,9.599915,-9.655434,1.268569,-2.362246,7.244261,-3.081667,8.452001,-8.591822,5.620296,8.823457,9.179185,2.362954,2.533118,-7.102921,5.285219,6.287065,-2.229078,0.292799,-4.117573,-9.851451,5.583012,1.598671,3.705186,9.383814,-7.657749,0.682553,8.493275,6.329344,1.544181,5.172069,-0.497306,5.996130,-6.699980,-6.707940,-9.325580,-5.197458,-6.372458,9.370276,-4.152324,-1.946034,5.983768,-7.368550,-3.567015,-3.109889,3.422932,9.376650,-9.840487,-7.775236,6.580091,4.564917,-3.432120,3.772163,-3.837455,-4.582036,2.202492,9.624123,-3.126892,8.885086,1.040853,-5.839176,3.842742,-4.474544,1.957900,-9.152159,-7.017353,-4.822606,-2.806268,3.772473,-4.125202,5.643356,-5.039642,0.889237,-4.270683,4.098904,-3.491153,1.225245,9.796838,5.819934,-9.933874,3.518411,7.686358,5.465109,2.588149,-1.288457,9.645544,3.184432,1.819481,-2.517232,1.839465,4.900013,-7.784550,8.506777,2.977968,-6.437240,2.548518,-5.844195,3.465769,-7.267654,-7.899842,0.404506,-5.700709,9.971220,4.614435,6.297675,9.242431,-6.508157,1.307758,-2.383302,-9.539408,3.071704,-0.833195,-1.146209,9.977981,1.729731,-2.489734,2.489419,8.991839,-1.084364,3.492859,-7.569572,-0.155901,-6.400377,-0.095237,-0.029573,9.416466,-2.136392,0.504605,2.301976,4.021596,-4.942197,6.520640,-9.054531,-4.653723,6.179689,5.537273,2.457665,-9.038291,0.628867,-7.622670,3.941644,8.809113,6.252241,2.068407,-6.575238,2.283184,-2.378522,-1.894429,-6.886707,0.013772,-9.923231,2.253393,-8.807342,3.678523,-7.698032,-1.573129,1.560883,-4.167377,-5.623181,-8.838317,-9.262937,-7.120346,-2.627721,-9.452081,6.535923,4.271877,-9.298008,0.307958,-8.871853,-2.605788,-4.314864,5.039447,0.451227,5.787367,0.792118,-4.201191,8.830739,-0.726851,0.133741,-7.126217,-7.376470,3.608179,-5.212685,8.866048,9.465423,-6.197252,-3.023583,-2.713239,5.839371,-7.495003,5.243403,-7.516007,5.934643,-7.328332,0.525675,4.542593,-5.337202,-7.614420,-3.527169,-0.103555,-3.645802,0.802810,-0.333519,-0.411076,4.960559,-9.697459,4.325027,-6.200613,3.017613,3.799783,6.507419,-6.327861,6.964383,9.521578,-9.343317,-8.255467,-6.188227,-3.517139,7.840791,-1.665753,0.254238,8.714607,7.563576,8.648100,-2.340243,-7.739009,7.643375,-1.275194,1.320011,-8.765243,5.496818,-2.179200,3.741778,-6.792414,6.752541,9.060932,0.356714,0.345280,-8.916129,6.456063,-6.623654,6.507283,-5.616789,-0.468019,7.192219,8.909706,2.795490,-6.646356,-4.436005,3.279805,6.792741,-0.786367,5.767655,5.187434,-7.152199,3.720922,-6.227231,4.250240,-6.531940,9.789586,-6.028636,-6.060609,-9.683342,-3.378695,0.980866,1.682079,5.832398,9.778621,2.715571,-5.222500,2.837803,-3.346957,-0.900007,-5.266663,-9.371902,-2.269036,-1.615160,-5.473447,2.472424,-9.914371,3.504558,0.067903,4.961922,4.517655,-1.867399,3.178522,8.827785,9.954514,3.548947,-3.022932,2.290368], dtype = "float32")#candidate|1520|(384,)|const|float32
var_1521 = relay.var("var_1521", dtype = "int64", shape = (280,))#candidate|1521|(280,)|var|int64
call_1518 = relay.TupleGetItem(func_599_call(relay.reshape(const_1519.astype('int8'), [3, 1, 6]), relay.reshape(const_1520.astype('float32'), [24, 16]), relay.reshape(var_1521.astype('int64'), [140, 2]), ), 1)
call_1522 = relay.TupleGetItem(func_604_call(relay.reshape(const_1519.astype('int8'), [3, 1, 6]), relay.reshape(const_1520.astype('float32'), [24, 16]), relay.reshape(var_1521.astype('int64'), [140, 2]), ), 1)
func_946_call = mod.get_global_var('func_946')
func_950_call = mutated_mod.get_global_var('func_950')
const_1524 = relay.const([2.385065,8.328239,9.522159,4.568442,5.036581,9.213240,-3.622212,-8.957625,-7.420612,-1.174807,1.465315,4.058825,8.121029,3.060327,3.031131,8.513682,-8.524485,-9.677593,0.462257,-8.884346,0.266589,5.308747,-0.174790,6.318357,0.284423,-7.348066,9.801399,-8.443340,1.994010,5.508886,8.868618,5.250149,-4.729124,4.330041,-1.746621,-2.124530,0.525215,2.307006,9.290167,0.311792,-0.056194,4.208139,7.059153,-9.182532,-7.302182,6.269257,6.589170,2.557081,2.107771,4.920736,-1.761526,9.754443,-4.840308,7.988095,0.999905,-4.436463,8.272587,-2.698318,9.103876,6.248346,-5.478657,5.684645,9.344617,6.433016,8.818731,-9.160135,-1.214629,-0.108311,8.733346,-2.595962,-7.391915,-3.674358,5.512083,-9.875602,-0.769866,-1.506899,-2.005515,-6.023117,-5.002262,-8.550065,-9.250506,2.925844,-6.202012,9.678944,-9.226544,1.967006,-0.538459,-0.308382,-1.573130,-4.809436,-1.627491,9.142691,-9.555549,-1.496945,-5.680150,8.868149,-9.672895,9.911887,-7.457938,-8.905455,1.337287,4.491209,0.094780,0.339030,-6.874899,-7.545180,-8.377235,1.737562,9.849968,2.667485,8.962580,9.372335,7.739593,-3.059733,6.944886,-6.077497,-9.569790,6.049595,0.482586,0.273952,-2.184828,-4.575674,-6.573952,-3.443964,-7.186257,1.395370,-5.036747,7.403598,3.169341,1.429518,-3.834265,3.233863,7.746978,-2.733498,8.085362,-6.217828,-9.611563,-3.077871,-3.453657,-1.979229,-1.845889,-8.431935,-7.142603,0.692054,-6.140107,4.216283,-6.290839,6.641750,4.917685,6.193794,-9.663038,-6.552134,-8.250582,6.982219,0.660676,7.600025,4.376468,-0.329608,5.515287,7.945691,-4.906121,-3.403608,-6.211067,-6.137395,-1.808867,-9.645024,1.594589,7.970422,-0.304624,2.990018,-8.022712,4.634829,-4.169529,-9.251655,0.438084,5.672442,-6.829177,9.608067,-5.799089,-6.288586,9.554780,0.807695,7.671240,-5.996123,0.388894,-9.427242,6.443742,9.122652,8.795105,5.451785,5.974425,7.174044,9.240884,-1.570843,-6.363896,-6.855696,-3.258631,5.416837,-3.381740,2.366969,6.289768,6.189014,6.330499,-3.301571,-2.923794,-3.514521,7.786794,6.675630,-1.807508,-3.685195,-0.821310,-0.968341,-9.719667,3.874565,8.110804,-6.305837,-7.743242,8.291215,-3.816582,-9.638607,-7.732152,-3.560803,-5.861544,-4.659540,-3.030851,-7.182924,0.306847,3.197877,-1.245859,-6.556557,0.938328,-1.156739,-7.952391,2.226612,7.115259,-6.490761,-1.724604,4.993589,-1.107363,9.146450,-2.970675,-2.750611,-9.236372,0.300454,-1.588259,9.208683,-2.901600,9.410642,7.287050,9.636266,-5.382280,-9.186780,6.119855,-5.548979,0.619794,-4.927248,6.659883,8.431712,-9.588319,-4.155517,-0.239647,-0.818540,1.928130,-8.144074,-8.734117,2.640409,5.993785,-1.817745,-5.850068,-3.789575,-4.632156,0.040549,3.728446,-2.126336,-3.694736,-3.733588,-0.592001,3.704146,-9.105166,-2.483248,-3.455701,-3.793744,-5.774601,-3.307077,8.642007,-2.038660,1.401309,4.034749,0.653295,-4.093719,-0.926338,-9.584938,1.153133,-8.996082,6.775203,-6.550771,-4.661618,1.668696,9.615249,6.018755,0.858356,1.421940,-4.380630,8.510982,-7.305269,5.107878,1.959705,8.555705,8.105631,-4.070896,-7.148474,-5.811686,8.123528,0.902680,8.162812,6.183833,3.856052,5.041760,0.707475,8.251976,-3.818755,-5.031325,-9.056892,-5.262753,7.307512,6.916505,-4.920436,5.658565,7.516686,-6.521025,3.457850,1.239257,-4.859835,-9.106509,-1.437497,1.603409], dtype = "float64")#candidate|1524|(336,)|const|float64
call_1523 = relay.TupleGetItem(func_946_call(relay.reshape(const_1524.astype('float64'), [6, 4, 14]), relay.reshape(const_1524.astype('float64'), [6, 4, 14]), ), 0)
call_1525 = relay.TupleGetItem(func_950_call(relay.reshape(const_1524.astype('float64'), [6, 4, 14]), relay.reshape(const_1524.astype('float64'), [6, 4, 14]), ), 0)
var_1540 = relay.var("var_1540", dtype = "float64", shape = (5, 3, 3))#candidate|1540|(5, 3, 3)|var|float64
bop_1541 = relay.add(uop_1496.astype('int8'), var_1540.astype('int8')) # shape=(5, 3, 3)
output = relay.Tuple([uop_1515,call_1518,const_1519,const_1520,var_1521,call_1523,const_1524,bop_1541,])
output2 = relay.Tuple([uop_1515,call_1522,const_1519,const_1520,var_1521,call_1525,const_1524,bop_1541,])
func_1545 = relay.Function([var_1495,var_1521,var_1540,], output)
mod['func_1545'] = func_1545
mod = relay.transform.InferType()(mod)
mutated_mod['func_1545'] = func_1545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1545_call = mutated_mod.get_global_var('func_1545')
var_1547 = relay.var("var_1547", dtype = "float64", shape = (1, 3, 3))#candidate|1547|(1, 3, 3)|var|float64
var_1548 = relay.var("var_1548", dtype = "int64", shape = (280,))#candidate|1548|(280,)|var|int64
var_1549 = relay.var("var_1549", dtype = "float64", shape = (5, 3, 3))#candidate|1549|(5, 3, 3)|var|float64
call_1546 = func_1545_call(var_1547,var_1548,var_1549,)
output = call_1546
func_1550 = relay.Function([var_1547,var_1548,var_1549,], output)
mutated_mod['func_1550'] = func_1550
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1593 = relay.const([[[1.019328,-1.556952,-1.447771,4.909726,-8.552530,0.214691,0.315587,-2.536590,-1.496277,-5.283640,-9.985907,0.716887,-8.032216,-7.075088],[-1.707732,9.312833,7.750982,-2.531327,6.795644,9.980172,-7.301903,9.786860,2.101642,6.110108,1.277424,1.347494,-0.528686,3.980847],[6.800865,-0.164434,2.600959,9.498324,8.477104,-5.134730,7.796172,-4.793774,-4.726229,1.471780,-2.013273,-9.518001,-3.343904,8.844048],[-5.571904,8.015336,-6.247302,9.505738,-0.680600,-0.024335,5.867377,-2.024145,-2.360509,-5.371070,0.880180,6.731903,9.442364,1.666935],[8.027746,-3.788744,9.040395,8.643701,8.658785,8.723089,1.887508,-9.951700,-7.573250,5.424774,3.368736,-4.866300,4.895530,-1.147364],[0.772427,-3.309006,4.929654,-0.722635,-4.506094,-1.221629,-0.708737,3.488902,-1.975912,-0.749031,6.138780,9.301965,-1.486336,0.585394],[1.719957,-7.228914,9.380265,0.097753,7.147280,3.565722,8.101638,-4.242109,1.579767,4.405019,5.203308,-7.300482,8.579365,5.391275]]], dtype = "float32")#candidate|1593|(1, 7, 14)|const|float32
var_1594 = relay.var("var_1594", dtype = "float32", shape = (9, 7, 14))#candidate|1594|(9, 7, 14)|var|float32
bop_1595 = relay.divide(const_1593.astype('float32'), var_1594.astype('float32')) # shape=(9, 7, 14)
func_946_call = mod.get_global_var('func_946')
func_950_call = mutated_mod.get_global_var('func_950')
var_1612 = relay.var("var_1612", dtype = "float64", shape = (336,))#candidate|1612|(336,)|var|float64
call_1611 = relay.TupleGetItem(func_946_call(relay.reshape(var_1612.astype('float64'), [6, 4, 14]), relay.reshape(var_1612.astype('float64'), [6, 4, 14]), ), 3)
call_1613 = relay.TupleGetItem(func_950_call(relay.reshape(var_1612.astype('float64'), [6, 4, 14]), relay.reshape(var_1612.astype('float64'), [6, 4, 14]), ), 3)
var_1618 = relay.var("var_1618", dtype = "bool", shape = (6, 4, 14))#candidate|1618|(6, 4, 14)|var|bool
bop_1619 = relay.power(call_1611.astype('float32'), relay.reshape(var_1618.astype('float32'), relay.shape_of(call_1611))) # shape=(6, 4, 14)
bop_1622 = relay.power(call_1613.astype('float32'), relay.reshape(var_1618.astype('float32'), relay.shape_of(call_1613))) # shape=(6, 4, 14)
func_437_call = mod.get_global_var('func_437')
func_441_call = mutated_mod.get_global_var('func_441')
const_1636 = relay.const(-6, dtype = "int64")#candidate|1636|()|const|int64
const_1637 = relay.const([[-3,-6,5,-8,9,-7,7,4,6,-8,5,7,10,-8,5,-9,-10,-3,7,1,-5,6,2,-4,3,1,1,1,-3,4,-6,6,9,1,3,1,-10,-4,8,3,9,1,-3,3,-1,3,9,-3,1,4,6,3,-6,-8,-4,-8],[-4,-5,1,-2,5,2,-5,2,-9,-1,4,8,-1,-6,7,10,-3,10,-4,-6,8,-3,-1,10,-1,-4,4,-7,-8,2,7,9,-10,1,3,-3,3,5,-10,5,-7,8,-1,-10,8,-6,-5,-4,-6,-9,2,10,-7,-3,-2,-8],[-7,2,-1,-9,-4,3,-2,4,-4,6,4,-3,-3,-8,5,5,4,2,-2,4,7,-7,6,10,-4,-8,-4,-1,-9,1,-7,-8,8,8,-2,-7,-2,10,8,8,6,-2,8,7,-2,-1,-7,-2,10,4,-2,1,-5,-2,2,-5],[-7,-1,10,-10,8,-5,-2,-9,-9,-4,-4,-5,-7,4,-8,-2,-7,7,2,-2,-1,-5,-6,-5,9,-5,4,4,8,3,-8,-10,7,-2,7,9,-1,-2,3,1,5,-7,-8,10,-10,2,7,10,-1,5,6,-9,10,-3,9,5],[2,2,-2,5,-5,-7,-1,8,-1,4,-7,-6,4,-10,-7,-6,-4,6,3,7,8,-10,-2,3,-9,5,-1,3,-4,8,-7,-8,-3,6,-8,3,8,7,4,-7,8,-1,5,-4,-8,-8,-7,5,-5,-5,5,-8,-5,-4,6,2]], dtype = "int64")#candidate|1637|(5, 56)|const|int64
call_1635 = relay.TupleGetItem(func_437_call(relay.reshape(const_1636.astype('int64'), []), relay.reshape(const_1637.astype('int64'), [14, 4, 5]), ), 0)
call_1638 = relay.TupleGetItem(func_441_call(relay.reshape(const_1636.astype('int64'), []), relay.reshape(const_1637.astype('int64'), [14, 4, 5]), ), 0)
output = relay.Tuple([bop_1595,var_1612,bop_1619,call_1635,const_1636,const_1637,])
output2 = relay.Tuple([bop_1595,var_1612,bop_1622,call_1638,const_1636,const_1637,])
func_1640 = relay.Function([var_1594,var_1612,var_1618,], output)
mod['func_1640'] = func_1640
mod = relay.transform.InferType()(mod)
var_1641 = relay.var("var_1641", dtype = "float32", shape = (9, 7, 14))#candidate|1641|(9, 7, 14)|var|float32
var_1642 = relay.var("var_1642", dtype = "float64", shape = (336,))#candidate|1642|(336,)|var|float64
var_1643 = relay.var("var_1643", dtype = "bool", shape = (6, 4, 14))#candidate|1643|(6, 4, 14)|var|bool
output = func_1640(var_1641,var_1642,var_1643,)
func_1644 = relay.Function([var_1641,var_1642,var_1643,], output)
mutated_mod['func_1644'] = func_1644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1755 = relay.var("var_1755", dtype = "float64", shape = (11, 1, 15))#candidate|1755|(11, 1, 15)|var|float64
uop_1756 = relay.exp(var_1755.astype('float64')) # shape=(11, 1, 15)
uop_1758 = relay.sinh(uop_1756.astype('float32')) # shape=(11, 1, 15)
uop_1768 = relay.sin(var_1755.astype('float64')) # shape=(11, 1, 15)
bop_1776 = relay.greater_equal(uop_1768.astype('bool'), relay.reshape(uop_1758.astype('bool'), relay.shape_of(uop_1768))) # shape=(11, 1, 15)
bop_1779 = relay.minimum(uop_1756.astype('int64'), relay.reshape(var_1755.astype('int64'), relay.shape_of(uop_1756))) # shape=(11, 1, 15)
output = relay.Tuple([bop_1776,bop_1779,])
output2 = relay.Tuple([bop_1776,bop_1779,])
func_1782 = relay.Function([var_1755,], output)
mod['func_1782'] = func_1782
mod = relay.transform.InferType()(mod)
var_1783 = relay.var("var_1783", dtype = "float64", shape = (11, 1, 15))#candidate|1783|(11, 1, 15)|var|float64
output = func_1782(var_1783)
func_1784 = relay.Function([var_1783], output)
mutated_mod['func_1784'] = func_1784
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1871 = relay.var("var_1871", dtype = "bool", shape = (4, 4, 5))#candidate|1871|(4, 4, 5)|var|bool
var_1872 = relay.var("var_1872", dtype = "bool", shape = (4, 4, 5))#candidate|1872|(4, 4, 5)|var|bool
bop_1873 = relay.logical_or(var_1871.astype('bool'), relay.reshape(var_1872.astype('bool'), relay.shape_of(var_1871))) # shape=(4, 4, 5)
func_1782_call = mod.get_global_var('func_1782')
func_1784_call = mutated_mod.get_global_var('func_1784')
var_1884 = relay.var("var_1884", dtype = "float64", shape = (165,))#candidate|1884|(165,)|var|float64
call_1883 = relay.TupleGetItem(func_1782_call(relay.reshape(var_1884.astype('float64'), [11, 1, 15])), 0)
call_1885 = relay.TupleGetItem(func_1784_call(relay.reshape(var_1884.astype('float64'), [11, 1, 15])), 0)
bop_1888 = relay.multiply(call_1883.astype('float64'), relay.reshape(var_1884.astype('float64'), relay.shape_of(call_1883))) # shape=(11, 1, 15)
bop_1891 = relay.multiply(call_1885.astype('float64'), relay.reshape(var_1884.astype('float64'), relay.shape_of(call_1885))) # shape=(11, 1, 15)
output = relay.Tuple([bop_1873,bop_1888,])
output2 = relay.Tuple([bop_1873,bop_1891,])
func_1899 = relay.Function([var_1871,var_1872,var_1884,], output)
mod['func_1899'] = func_1899
mod = relay.transform.InferType()(mod)
var_1900 = relay.var("var_1900", dtype = "bool", shape = (4, 4, 5))#candidate|1900|(4, 4, 5)|var|bool
var_1901 = relay.var("var_1901", dtype = "bool", shape = (4, 4, 5))#candidate|1901|(4, 4, 5)|var|bool
var_1902 = relay.var("var_1902", dtype = "float64", shape = (165,))#candidate|1902|(165,)|var|float64
output = func_1899(var_1900,var_1901,var_1902,)
func_1903 = relay.Function([var_1900,var_1901,var_1902,], output)
mutated_mod['func_1903'] = func_1903
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1953 = relay.var("var_1953", dtype = "float64", shape = (12, 9, 13))#candidate|1953|(12, 9, 13)|var|float64
uop_1954 = relay.erf(var_1953.astype('float64')) # shape=(12, 9, 13)
output = relay.Tuple([uop_1954,])
output2 = relay.Tuple([uop_1954,])
func_1956 = relay.Function([var_1953,], output)
mod['func_1956'] = func_1956
mod = relay.transform.InferType()(mod)
mutated_mod['func_1956'] = func_1956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1957 = relay.var("var_1957", dtype = "float64", shape = (12, 9, 13))#candidate|1957|(12, 9, 13)|var|float64
func_1956_call = mutated_mod.get_global_var('func_1956')
call_1958 = func_1956_call(var_1957)
output = call_1958
func_1959 = relay.Function([var_1957], output)
mutated_mod['func_1959'] = func_1959
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2332 = relay.const([[[3.974373,8.360546,-9.467838,-6.630614,-0.518524,-0.704472,8.277840,-0.947252,9.342939],[2.382942,2.163062,-5.004753,3.229725,-8.824514,1.195426,3.727313,-2.864416,-5.287235],[8.303599,5.623059,-3.280238,5.882191,-6.189083,-4.597507,-0.029554,-8.433059,0.714802],[-4.291151,-1.951311,4.712988,-7.993694,4.287846,-7.293952,-9.905197,-9.453086,1.118418],[7.124411,8.780672,-8.348233,2.706243,1.754974,-5.942106,-2.320962,3.910378,-9.785400]],[[-1.143550,6.726622,0.659152,2.992704,2.177851,2.444376,6.628985,1.211432,-7.510107],[-3.112037,-4.440688,7.297419,3.205037,-4.620905,-3.653178,2.965328,1.822660,-6.723208],[-8.656896,-4.529260,-8.987177,5.381296,2.637077,-1.370904,-5.591637,8.619410,-5.832073],[-4.209880,6.427868,-6.720973,3.764036,-8.515123,-1.522480,7.552391,4.013967,-7.734317],[2.388498,3.360795,6.852039,-8.368223,-3.776361,-9.528241,-6.733581,-2.591461,2.054175]],[[2.782540,5.194120,-3.431904,0.586703,-2.246963,7.268186,-4.305755,-1.455474,8.784203],[1.337668,-8.693906,-6.397087,-6.189053,3.211876,-2.343777,0.699770,1.248499,4.102630],[-0.115224,4.876473,8.454366,6.518067,4.923452,7.180917,8.502170,-4.206763,7.371528],[2.761194,1.726890,-2.772817,1.619675,7.957223,-6.607348,-3.676319,1.924962,-9.315136],[9.515078,-2.908682,1.544471,7.256878,-0.471796,-2.760671,-8.169551,6.668909,-2.765431]],[[0.438458,5.818652,-7.966499,-2.907409,-0.854354,-8.720456,-6.401600,6.346196,-2.824291],[9.994943,6.843818,9.518119,3.796699,7.496153,2.393647,-3.861191,-0.283318,-3.952409],[-6.494450,7.463198,-2.023396,1.596423,3.069176,-3.731165,5.386734,-3.585996,0.206083],[2.565472,1.130984,-5.878093,-5.145314,-5.285047,-8.272356,-0.817769,1.003061,-9.583191],[3.480682,-6.496389,-0.074102,2.630141,-0.473164,-7.489828,5.923956,-7.462820,5.894350]],[[-0.455429,-1.725477,-1.290384,6.721762,3.690526,-7.233518,-0.864044,5.447621,3.153246],[7.574577,1.196019,-3.002538,-8.900184,3.869610,-8.062049,1.235541,0.294823,9.002962],[-2.134242,-3.788002,0.407425,3.554486,-4.210419,3.328586,-0.398166,-4.814483,-0.559591],[-2.446658,1.377768,-5.947354,-6.578516,-9.775004,6.369348,4.221257,-0.025955,8.246456],[-9.519726,1.374930,3.833465,-7.754814,-3.413032,6.835569,6.496370,6.662776,-0.212688]],[[2.406455,2.510978,-4.675108,2.973999,-6.470166,7.016969,-7.658596,7.738278,-8.556525],[-5.216794,-8.274032,-2.201806,9.738923,4.824956,-9.476856,-3.779420,-6.562199,7.550613],[-3.244376,-6.958298,-6.086049,-7.667085,-8.546431,-9.079207,-9.978039,4.164998,9.984412],[1.098067,-3.112582,1.377281,-0.077895,-3.134112,8.374314,9.238990,-2.111464,7.343664],[2.649628,5.738927,2.911691,-1.193343,-4.805271,-0.295624,2.333066,1.557150,3.111737]],[[-0.873903,-0.878054,-7.900799,-8.991886,-0.011082,-2.893383,9.527207,1.556523,0.313485],[4.758323,5.895670,9.159284,2.921609,2.780504,-5.239521,-8.471348,-8.089902,4.901758],[-8.944055,-9.392588,7.754199,-9.679009,-0.659974,9.651354,-8.341823,5.480194,8.270472],[-8.263738,-7.488428,0.145003,-2.753637,2.133826,-7.158597,4.206488,6.155083,7.798585],[-9.690143,2.159633,-8.694079,-7.196321,3.525024,-2.799471,6.664202,-2.479207,-7.897253]],[[-8.704420,3.865411,5.220629,0.180175,-8.093717,-0.552076,0.799162,-3.337934,5.022276],[8.504870,5.594867,0.586115,1.166400,-4.717293,-8.988696,0.264500,9.346210,3.749190],[0.541076,-0.028749,0.741451,3.549674,0.027272,2.630914,-9.679810,3.900773,-3.822491],[0.875343,4.752396,7.682302,-6.681102,-4.825874,4.189178,-7.130522,-1.605598,-5.419410],[6.431155,-0.811751,0.315767,8.052189,5.072569,-7.463830,-1.489115,6.287369,1.413461]],[[5.746734,-7.010276,-9.062451,4.311137,-2.754865,7.660778,0.639397,-4.597497,8.853005],[-5.822697,-3.405244,0.582060,0.545218,-4.745614,4.565944,1.705271,-4.931276,4.492118],[0.031888,8.223973,-4.149800,-6.085203,-3.760202,-9.419602,4.610920,-7.857276,-5.913551],[-9.660434,8.331296,-4.314737,-3.357085,-7.161221,9.108935,9.958017,-1.838274,-1.200045],[7.686813,1.934098,-9.460580,-2.841919,-5.884947,7.147094,-7.245300,-5.066257,-7.508884]],[[7.685651,-4.180139,3.530046,3.981907,-1.791572,-1.245656,-3.524429,8.151166,8.694769],[8.077791,8.900761,-5.905599,-0.142073,-7.777475,9.960396,-7.432711,-3.375691,-8.225308],[-9.656326,-7.133340,1.678375,-0.777933,3.723424,7.962411,5.687576,-0.347991,-4.779839],[3.873222,3.702550,5.340918,-2.697188,3.179480,-0.093553,1.787782,6.430484,0.659098],[-8.522611,0.558463,-8.008528,-6.314001,6.697414,-4.912056,1.541434,8.808364,-3.216160]],[[6.704275,-7.174231,3.169451,-8.143595,4.497701,-9.446629,2.275946,-5.439328,-5.478420],[4.193281,-7.878798,2.167771,0.397824,-7.898767,-1.564235,9.512574,-0.010031,-5.599047],[1.473805,-9.356030,6.490142,0.762211,2.570990,8.465452,-1.797696,-1.027151,4.729617],[-9.908577,-1.963078,2.552502,1.201978,3.887802,-0.135003,7.031983,-4.046177,1.517638],[-3.643273,-0.273986,-6.592205,-6.654545,5.076052,-1.281198,-4.551771,5.066238,0.643846]],[[0.363086,4.890976,-6.438838,5.904219,8.991513,0.841116,0.589804,-3.528958,3.781222],[2.108337,7.520240,-4.418151,7.274645,-0.424008,-6.681531,-7.104446,-5.975890,-5.281386],[5.277410,-0.861183,4.448828,6.582118,-0.854518,0.768550,2.660022,3.175961,4.535003],[-6.291573,-2.439100,8.694294,-3.263559,9.764849,8.388750,-5.062881,6.838607,-0.335522],[-1.223451,0.243636,5.948333,3.928717,3.434857,8.626234,-4.738875,8.133130,8.450299]],[[3.168162,-0.472113,-5.743883,-8.815063,0.061759,-0.668048,8.278222,9.860706,1.069993],[0.039476,4.481290,6.886687,9.575783,-2.263513,-7.161299,0.282120,-1.406156,-9.926149],[5.266198,8.069385,-6.489837,-7.501066,-1.389383,-2.346018,-9.737474,-4.054154,-5.401015],[4.977317,-4.117737,1.577999,5.545850,-8.702318,-6.327391,-0.545587,-6.732953,-9.664167],[5.281462,-2.193733,1.504079,2.774658,-9.215558,1.338608,2.632815,-0.694943,1.099277]],[[9.197249,-8.981454,-4.665436,-1.856231,-8.309688,-8.284313,-9.523926,-7.323053,4.303137],[3.115698,8.029837,7.967846,6.564042,3.890175,-8.077305,3.594176,2.552660,6.497841],[-6.710195,9.563160,-9.747955,-9.775011,6.949868,1.896434,-2.918786,-7.412865,-3.170603],[-7.787675,-6.413042,5.546194,-0.711516,-4.935362,-7.477747,8.469289,-4.934155,-1.174567],[-6.427422,0.705173,8.430453,0.568201,1.894162,3.130410,8.528173,0.661555,-8.602998]],[[-1.199629,9.375610,-0.085538,-3.029811,6.688944,-6.090396,-3.583338,-9.806779,3.291334],[-1.857536,6.014885,-5.977731,-2.515303,-0.385360,6.578585,-0.704670,-6.780600,4.917769],[-6.718558,-8.086435,-1.801188,1.045259,-3.173597,-0.165415,4.116279,-5.239420,-4.742761],[3.403385,-4.782885,5.781316,-5.163249,4.406375,6.056954,-3.257129,-5.416940,5.341115],[8.574992,8.787962,-5.103406,3.286909,9.881582,-6.143724,-3.423848,-3.238935,-5.963696]]], dtype = "float64")#candidate|2332|(15, 5, 9)|const|float64
uop_2333 = relay.acosh(const_2332.astype('float64')) # shape=(15, 5, 9)
var_2335 = relay.var("var_2335", dtype = "float64", shape = (15, 5, 9))#candidate|2335|(15, 5, 9)|var|float64
bop_2336 = relay.left_shift(uop_2333.astype('int64'), relay.reshape(var_2335.astype('int64'), relay.shape_of(uop_2333))) # shape=(15, 5, 9)
output = relay.Tuple([bop_2336,])
output2 = relay.Tuple([bop_2336,])
func_2342 = relay.Function([var_2335,], output)
mod['func_2342'] = func_2342
mod = relay.transform.InferType()(mod)
mutated_mod['func_2342'] = func_2342
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2343 = relay.var("var_2343", dtype = "float64", shape = (15, 5, 9))#candidate|2343|(15, 5, 9)|var|float64
func_2342_call = mutated_mod.get_global_var('func_2342')
call_2344 = func_2342_call(var_2343)
output = call_2344
func_2345 = relay.Function([var_2343], output)
mutated_mod['func_2345'] = func_2345
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2374 = relay.var("var_2374", dtype = "uint64", shape = (3, 1, 6))#candidate|2374|(3, 1, 6)|var|uint64
const_2375 = relay.const([[[-10,2,1,3,-4,-3],[-10,-1,-3,6,9,6],[3,-5,-1,-4,1,6],[-5,1,5,6,-7,8],[9,-7,8,-8,-7,9],[3,8,-9,-8,-5,-4],[3,8,8,1,1,-4],[1,9,-6,7,2,-5],[-10,-5,-4,-9,-8,-8],[-2,4,6,2,1,-7],[-2,6,10,4,6,6]],[[8,-6,10,-3,-2,-6],[6,-6,-1,-3,7,-8],[-3,-6,-2,1,-8,6],[-1,-10,7,-1,-6,-9],[-10,-2,4,-4,2,7],[2,4,5,8,9,8],[6,1,6,10,4,3],[-4,4,6,-10,9,8],[1,9,4,10,-9,-3],[-10,-3,7,-2,-4,6],[10,-8,-9,-3,2,2]],[[1,5,2,-7,1,9],[-9,-6,9,-4,-8,-6],[-1,-9,10,9,5,3],[2,-2,-1,8,1,-2],[-5,-9,-1,2,-5,4],[-2,7,7,-5,-10,-9],[-9,3,-10,-2,3,10],[8,7,10,-9,4,-2],[-7,-7,5,10,-2,3],[9,-9,-7,-8,10,8],[-9,-4,4,4,-4,-8]]], dtype = "uint64")#candidate|2375|(3, 11, 6)|const|uint64
bop_2376 = relay.left_shift(var_2374.astype('uint64'), const_2375.astype('uint64')) # shape=(3, 11, 6)
bop_2385 = relay.greater_equal(bop_2376.astype('bool'), var_2374.astype('bool')) # shape=(3, 11, 6)
output = bop_2385
output2 = bop_2385
func_2389 = relay.Function([var_2374,], output)
mod['func_2389'] = func_2389
mod = relay.transform.InferType()(mod)
var_2390 = relay.var("var_2390", dtype = "uint64", shape = (3, 1, 6))#candidate|2390|(3, 1, 6)|var|uint64
output = func_2389(var_2390)
func_2391 = relay.Function([var_2390], output)
mutated_mod['func_2391'] = func_2391
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2417 = relay.const([[[7.855089,3.387697,5.561170,-9.055716,7.443034,7.629367,6.077982,0.251880,-8.963247,2.165668],[-9.639825,7.089715,-7.906201,6.020878,-7.965518,1.419830,-4.568284,-2.292096,-6.607565,-5.472370],[-4.368174,6.283520,7.743380,-7.370422,0.932975,4.235572,-0.520273,9.785444,-3.340701,7.877795],[4.803517,-6.162269,3.055835,-9.410671,-0.407217,2.722007,-1.146674,-4.072994,-0.917386,-5.535074],[-9.686992,4.321854,-4.659025,1.097334,-1.984923,-7.045355,7.208194,1.681180,1.357225,-1.655442],[-8.274241,-5.023496,9.726543,-4.902249,-4.611835,9.817856,4.227756,9.756892,7.847727,-1.282302]],[[2.497815,-6.033022,-7.271060,-1.188091,8.351984,7.907439,-8.225033,-4.751295,-9.378011,4.089352],[1.853079,7.663225,-3.198626,3.842273,6.434017,8.100917,-2.979597,-9.402789,2.823624,-1.675095],[3.754410,5.078348,-1.624428,2.585843,-8.990795,7.929884,-7.216320,-3.582057,1.082198,-2.087803],[-0.732726,8.408571,8.316513,7.861044,-2.038027,9.461739,8.383908,-2.595528,6.649639,-5.697118],[-1.634201,0.191372,-9.246793,0.979139,8.266931,-1.224937,3.642878,-8.684904,4.276723,-0.527727],[-1.643687,-3.580338,-9.743839,3.280229,-0.997327,5.543954,2.146152,4.181520,1.614792,4.546442]]], dtype = "float64")#candidate|2417|(2, 6, 10)|const|float64
uop_2418 = relay.sqrt(const_2417.astype('float64')) # shape=(2, 6, 10)
output = uop_2418
output2 = uop_2418
func_2426 = relay.Function([], output)
mod['func_2426'] = func_2426
mod = relay.transform.InferType()(mod)
mutated_mod['func_2426'] = func_2426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2426_call = mutated_mod.get_global_var('func_2426')
call_2427 = func_2426_call()
output = call_2427
func_2428 = relay.Function([], output)
mutated_mod['func_2428'] = func_2428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2426_call = mod.get_global_var('func_2426')
func_2428_call = mutated_mod.get_global_var('func_2428')
call_2435 = func_2426_call()
call_2436 = func_2426_call()
const_2439 = relay.const([[[2.567616,-4.043662,7.372284,1.751887,-9.063937,2.262176,1.321947,-3.562059,2.223274,9.737558],[1.805471,-6.580344,6.040288,-0.300824,0.270861,9.250433,-4.711679,7.202425,-3.673213,-9.073923],[-0.028717,5.839962,9.611154,-7.671450,6.113743,6.466958,-6.580509,2.270877,3.161975,1.035124],[-6.919465,-6.335579,-4.677841,-3.967929,-4.695499,-7.388287,-7.037628,5.788883,9.725897,0.279909],[2.307016,5.999764,-0.236084,0.816046,-6.401026,-3.663295,8.892488,6.882588,6.171733,-8.407360],[9.500613,-0.103602,-5.022796,3.492470,3.996539,-0.176797,2.828875,6.270123,5.076848,4.374898]],[[7.065710,-4.892446,-0.881560,-7.178276,4.166398,-7.574031,5.980981,-9.766152,-4.640003,-2.782439],[-7.818740,-9.550852,-3.544395,0.081323,-0.457010,-8.112925,3.409207,-1.969134,-9.260585,0.584015],[3.021153,-7.005667,-7.841378,-1.783752,-6.002831,6.164030,2.084304,-3.059697,0.915423,4.585115],[5.078110,0.733133,-8.725219,-0.571021,-4.150285,-4.049144,1.661518,2.201260,-6.081553,-9.765742],[-2.422757,6.844943,1.308381,7.281487,-6.267948,-9.256442,-0.102811,-0.479721,0.414122,-6.842820],[-4.682410,4.441398,4.098144,2.745153,-1.702239,9.464276,5.514001,5.518305,-1.473523,6.451585]]], dtype = "float64")#candidate|2439|(2, 6, 10)|const|float64
bop_2440 = relay.logical_or(call_2435.astype('bool'), relay.reshape(const_2439.astype('bool'), relay.shape_of(call_2435))) # shape=(2, 6, 10)
bop_2443 = relay.logical_or(call_2436.astype('bool'), relay.reshape(const_2439.astype('bool'), relay.shape_of(call_2436))) # shape=(2, 6, 10)
output = bop_2440
output2 = bop_2443
func_2445 = relay.Function([], output)
mod['func_2445'] = func_2445
mod = relay.transform.InferType()(mod)
output = func_2445()
func_2446 = relay.Function([], output)
mutated_mod['func_2446'] = func_2446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2445_call = mod.get_global_var('func_2445')
func_2446_call = mutated_mod.get_global_var('func_2446')
call_2447 = func_2445_call()
call_2448 = func_2445_call()
output = call_2447
output2 = call_2448
func_2464 = relay.Function([], output)
mod['func_2464'] = func_2464
mod = relay.transform.InferType()(mod)
output = func_2464()
func_2465 = relay.Function([], output)
mutated_mod['func_2465'] = func_2465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2445_call = mod.get_global_var('func_2445')
func_2446_call = mutated_mod.get_global_var('func_2446')
call_2492 = func_2445_call()
call_2493 = func_2445_call()
output = call_2492
output2 = call_2493
func_2499 = relay.Function([], output)
mod['func_2499'] = func_2499
mod = relay.transform.InferType()(mod)
output = func_2499()
func_2500 = relay.Function([], output)
mutated_mod['func_2500'] = func_2500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_2536 = func_2464_call()
call_2537 = func_2464_call()
output = relay.Tuple([call_2536,])
output2 = relay.Tuple([call_2537,])
func_2581 = relay.Function([], output)
mod['func_2581'] = func_2581
mod = relay.transform.InferType()(mod)
output = func_2581()
func_2582 = relay.Function([], output)
mutated_mod['func_2582'] = func_2582
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2626 = relay.const([[[-3.926866,-6.408483,-6.865297,9.195441,-1.173606,8.674725,3.354115,-6.705324],[-6.557971,5.436843,-9.353794,-0.313880,7.093047,6.174064,5.335689,-1.454339],[-6.657714,-5.145482,3.078636,-7.730208,9.795972,-6.720293,-9.978646,6.647216],[-1.444821,6.877809,-9.169479,2.087903,6.776495,2.317095,9.192240,-1.516127],[-8.290368,-4.079887,-2.040208,-0.207524,8.946985,-7.666885,4.345754,-1.254124],[0.033158,-6.608140,0.763163,6.251046,-7.181205,5.512196,-0.646610,-9.116771],[-0.436569,8.256229,8.783216,-4.179596,-0.682464,-1.106972,-5.358983,5.226651],[-7.339784,1.658836,4.424910,-1.401177,8.892400,-7.266726,0.433374,9.311189],[2.420385,5.445387,-1.808493,3.980251,-6.490024,-2.492864,-1.636410,-7.893263],[-1.912966,-7.792093,-9.796172,8.379378,-3.394624,-3.158593,-1.889214,2.202939],[-8.017897,-5.983689,7.999959,2.080411,9.726501,-1.583749,-8.076816,-9.167874]],[[0.135899,-9.246102,2.920927,0.343565,1.170087,-4.309759,1.072239,-2.747652],[-4.657838,-5.950153,-3.548044,1.043357,-0.436527,-6.151958,4.889637,3.053786],[7.187986,-9.667678,9.638643,7.079563,3.813729,2.789927,9.928143,-1.856412],[-8.965785,7.559424,8.311729,1.717902,1.565480,-8.991857,-5.879112,1.984894],[5.508799,7.491267,1.632231,-1.102851,-0.349667,-7.276812,9.157837,0.748428],[0.489434,-8.037648,6.628024,-1.879921,0.051598,0.945671,-4.592278,-8.835726],[2.479579,7.922490,-9.383329,7.583126,4.459500,-2.195817,4.573977,-5.077371],[7.300543,9.734321,-5.194759,8.385503,-3.801750,-2.693735,4.226489,-3.559679],[-4.762248,2.291570,7.409568,1.430061,-5.227476,6.108738,3.012220,5.567980],[4.736192,1.834325,-1.326959,9.442540,-4.128521,-0.253566,-5.086408,-6.330138],[-3.716428,4.698855,-4.479261,-1.610229,9.800189,-3.083406,1.446519,9.422904]],[[-1.206084,9.165860,9.467228,3.624914,-9.064981,5.445712,9.497286,4.968027],[2.681915,9.269701,9.210300,4.542995,-8.089876,5.663681,4.012151,-6.203284],[0.648444,-5.489038,-0.583583,-6.051745,0.946168,-7.158289,3.241423,-3.361170],[-4.174680,7.831061,0.893116,-1.229338,-2.803579,-7.108088,-3.304197,-1.602378],[-2.529589,-7.425275,-6.070106,1.075889,-6.378440,-0.181426,2.003674,0.262948],[7.119874,7.539669,2.948091,-2.279044,4.609789,3.494632,2.465132,5.408993],[-8.400841,-3.005689,7.960440,0.182609,9.446710,1.902118,-8.386432,1.319068],[8.266394,2.208054,-1.451163,6.414962,-6.301987,-7.574074,-9.182418,7.154997],[7.941984,5.055389,5.093661,6.904858,0.366726,9.063971,6.932473,7.366550],[8.313224,6.199541,-4.420967,9.386972,8.569961,-4.167591,4.597066,-7.400578],[3.860779,5.706291,-2.663305,-5.810591,-2.728417,-0.496702,-5.106684,-1.023613]],[[-6.304995,0.094500,-8.549613,7.952486,-2.393575,0.822244,3.239637,1.730448],[-5.552840,2.335600,3.182784,-8.098698,2.479590,7.131784,-2.972423,6.757559],[6.243987,1.503155,4.768437,7.474470,-3.091227,7.471555,-0.573959,-0.980455],[-6.399141,-6.765672,5.170458,0.048605,8.947658,-0.220259,-1.177739,-2.700871],[2.285104,-5.496529,-6.301856,-0.785972,-7.717930,-0.173766,-9.197000,9.858607],[-1.923173,-1.008366,-0.342276,-8.362953,-3.604228,2.743861,-0.306043,-2.321692],[0.625443,-9.450891,-8.092266,-3.074559,-2.662488,-0.783006,-5.147122,7.177092],[9.757893,-7.880422,5.498717,6.444048,-2.411066,1.885279,-6.181486,-7.234346],[-6.191727,6.026183,9.445079,0.914328,-7.933290,5.983284,-6.799302,2.596844],[-5.689119,4.296392,-0.672113,-6.375182,-4.749529,5.862200,6.916986,-9.008284],[-9.289251,5.501305,-6.861477,4.176946,-0.794490,6.308889,-1.794916,-6.964707]],[[-6.862872,-1.101919,-6.263123,2.662728,-0.002005,0.563405,-2.153468,2.122713],[2.226325,7.020499,-2.088429,-9.489381,1.057629,6.634940,-1.276807,-7.401601],[6.315449,6.661596,4.123137,-2.987240,0.343494,-2.753781,-0.120454,-3.710670],[-9.479064,8.067901,-0.589734,6.542703,1.240727,0.451094,-3.806683,-6.487754],[6.964936,3.116521,6.913087,-9.856053,7.211209,-0.706994,6.163490,9.337867],[-8.943883,-3.428352,-8.515629,-0.521235,-7.152786,4.601644,-1.420371,-3.944096],[6.940027,-1.390468,-4.520922,4.490173,4.551859,5.048180,-7.606938,-0.970633],[3.339275,8.638043,-3.769176,4.792437,-9.924872,4.157288,-3.074307,-0.915668],[2.956380,-2.838991,5.336772,4.854713,-1.810804,0.176960,0.120575,4.567640],[-9.075443,-4.133053,6.227482,3.836608,-9.441414,-3.067548,0.618238,-0.140602],[8.102833,-1.333502,-2.635191,-0.361557,-5.867412,3.123951,7.251099,-7.127137]],[[-2.555263,7.872932,-3.271100,8.766509,3.854043,1.658450,-0.239749,-0.571993],[0.987055,-5.866355,-3.235241,-3.899312,4.628560,0.212732,-3.355500,-3.287373],[-7.907845,-2.781588,9.454193,-7.311050,5.284762,5.221691,2.310098,-8.011748],[-2.459113,6.993447,4.177896,6.774592,4.558365,9.458459,-4.948330,-3.313005],[5.107798,5.909371,-0.064688,-7.986094,0.652689,9.084272,1.994096,1.078974],[4.968316,-1.261713,-2.319569,9.795113,-2.136403,-8.866415,-6.925741,-1.135611],[5.220189,-6.766774,0.875294,-9.551483,-5.105090,5.108083,0.165076,1.927519],[8.155810,5.989066,1.359702,-0.963123,9.634573,-4.519007,5.381465,-4.413158],[-9.370584,4.945910,1.293799,3.422363,9.150889,4.409938,1.865302,2.976525],[-8.942660,7.556551,9.457316,-7.911388,-8.260452,8.445473,6.822934,-1.227927],[-1.097977,4.683868,1.416420,-1.666261,5.071403,0.900928,-8.507337,-9.680154]],[[8.930515,9.530946,1.683812,-5.035036,-2.847930,2.029116,9.647452,-7.043732],[2.895819,7.613846,-4.875429,-5.091412,6.457003,-7.389196,-1.826361,-9.845319],[-7.522077,1.177796,3.566980,1.789345,1.381615,4.946693,1.458829,-9.811126],[1.090352,9.931911,3.459703,-9.120005,-6.299488,8.669186,2.339653,-4.796349],[4.374114,8.398280,5.531743,-8.346862,9.352317,0.997277,1.298894,-8.329395],[1.932647,-9.092044,4.492960,2.196354,-0.084552,-7.648233,5.212585,6.380803],[-9.077744,3.005094,-8.375776,-8.943881,-7.538713,-5.079586,-5.037634,-8.975588],[-1.102162,-9.022881,6.687723,5.561562,-2.122609,8.075242,2.520820,-8.682437],[3.124708,6.563105,-4.986926,-1.464727,-4.168728,-4.355021,1.971038,-1.208232],[-7.726152,5.662963,6.838227,3.054084,-1.850817,9.377618,5.933100,-4.793199],[5.376546,-2.502008,0.868064,-5.150928,9.566322,-9.399486,-0.141252,6.140583]],[[-9.901243,-6.266793,1.288721,7.690581,4.028191,1.358661,4.007371,0.568616],[-7.520530,-0.618634,-0.964984,5.890678,7.106061,-1.166170,-0.900455,-5.373025],[-5.790270,-2.607532,-1.449791,-6.911573,-1.237047,9.177532,1.516479,5.441322],[-3.912530,7.824511,-2.519275,3.617787,3.006160,3.827244,2.217766,-9.923971],[2.357370,5.289545,-8.152850,0.003434,-4.920068,-9.591381,6.462433,1.549084],[4.341654,7.231179,8.461324,-0.303870,-3.590189,-0.248895,9.500969,-2.584315],[-2.669353,8.454720,1.583050,3.410162,0.372769,6.738613,3.138145,-8.402547],[5.218592,5.984876,-1.428785,5.258652,3.945748,-6.012977,-3.389123,8.138263],[4.037869,-4.075196,5.401651,-4.997275,4.161309,-2.860716,-8.289243,-1.820596],[-2.152160,-1.247099,0.689907,3.859602,2.278633,0.894310,-9.682989,-8.466824],[6.737615,-7.292316,3.275575,1.488752,-6.095001,8.433547,9.008950,6.076206]],[[2.214931,-9.615397,5.937348,-3.277957,-2.209061,9.493856,-6.676840,-6.569890],[-3.554454,6.963324,5.885278,-3.466461,-7.663427,-6.085696,5.370662,1.330344],[8.207258,6.040178,6.005893,2.268367,-1.584999,9.046909,6.095439,-5.632786],[-1.971879,7.497884,7.865743,-6.504494,9.821909,1.692331,-5.233185,-0.787159],[-9.698441,-9.354933,3.443964,9.406117,-4.689633,-5.111571,-5.496201,0.643781],[-9.769061,-9.395865,4.363521,0.336472,1.342816,0.952075,1.109019,7.797610],[-2.537250,-9.385387,-2.679235,0.914187,-1.231552,-1.516690,-8.227905,8.005397],[-9.677658,-9.701862,-5.195401,-0.829848,-8.403207,6.113454,7.307333,-5.745263],[4.278761,9.192399,-9.706755,-5.417273,8.982675,-5.171823,8.260495,-0.532671],[7.561740,9.942857,1.888966,-2.819687,2.391971,4.448162,-3.997826,-2.769994],[-1.271325,4.771640,-1.885098,2.854286,-6.940037,-4.032276,-6.501304,3.811190]],[[2.853393,3.076108,9.180727,4.132981,-8.772525,2.178967,-4.616460,-0.023131],[-7.539397,3.528882,5.781661,-9.465624,-1.376894,0.319501,6.075719,1.858158],[1.337618,8.899369,-5.239489,-8.242782,-2.903977,3.666554,9.196342,9.976103],[-2.081021,6.093494,-1.500807,0.967617,-8.389144,7.228022,-0.802135,-7.261863],[9.151262,-6.060891,-6.882018,-5.130069,-8.839686,5.352775,1.143516,8.115922],[-0.226340,-9.245161,-0.604432,4.488328,-0.989158,0.640260,5.136035,1.710195],[5.266353,-3.879237,-2.007694,-2.699580,3.954534,-3.101773,8.284573,-5.338400],[-6.329590,-9.503069,-9.486962,5.984466,-2.378362,9.753156,7.299665,-4.984988],[-7.460140,-7.802418,-3.877630,-7.258506,5.158172,-3.844567,-3.598820,-2.754106],[5.833011,-7.656465,-3.720027,6.835522,-7.994488,4.325226,2.477114,-6.985481],[-1.504016,-2.764140,-7.588437,-7.761768,4.917341,-9.380130,9.311132,5.211399]]], dtype = "float32")#candidate|2626|(10, 11, 8)|const|float32
uop_2627 = relay.acosh(const_2626.astype('float32')) # shape=(10, 11, 8)
bop_2631 = relay.power(uop_2627.astype('float64'), relay.reshape(const_2626.astype('float64'), relay.shape_of(uop_2627))) # shape=(10, 11, 8)
output = relay.Tuple([bop_2631,])
output2 = relay.Tuple([bop_2631,])
func_2636 = relay.Function([], output)
mod['func_2636'] = func_2636
mod = relay.transform.InferType()(mod)
mutated_mod['func_2636'] = func_2636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mutated_mod.get_global_var('func_2636')
call_2637 = func_2636_call()
output = call_2637
func_2638 = relay.Function([], output)
mutated_mod['func_2638'] = func_2638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_2645 = func_2464_call()
call_2646 = func_2464_call()
output = call_2645
output2 = call_2646
func_2652 = relay.Function([], output)
mod['func_2652'] = func_2652
mod = relay.transform.InferType()(mod)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mutated_mod.get_global_var('func_2652')
call_2653 = func_2652_call()
output = call_2653
func_2654 = relay.Function([], output)
mutated_mod['func_2654'] = func_2654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2663 = relay.var("var_2663", dtype = "float32", shape = (13, 8, 10))#candidate|2663|(13, 8, 10)|var|float32
uop_2664 = relay.tan(var_2663.astype('float32')) # shape=(13, 8, 10)
output = uop_2664
output2 = uop_2664
func_2667 = relay.Function([var_2663,], output)
mod['func_2667'] = func_2667
mod = relay.transform.InferType()(mod)
var_2668 = relay.var("var_2668", dtype = "float32", shape = (13, 8, 10))#candidate|2668|(13, 8, 10)|var|float32
output = func_2667(var_2668)
func_2669 = relay.Function([var_2668], output)
mutated_mod['func_2669'] = func_2669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_2750 = relay.TupleGetItem(func_2636_call(), 0)
call_2751 = relay.TupleGetItem(func_2638_call(), 0)
output = call_2750
output2 = call_2751
func_2755 = relay.Function([], output)
mod['func_2755'] = func_2755
mod = relay.transform.InferType()(mod)
output = func_2755()
func_2756 = relay.Function([], output)
mutated_mod['func_2756'] = func_2756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2788 = relay.var("var_2788", dtype = "int32", shape = ())#candidate|2788|()|var|int32
var_2789 = relay.var("var_2789", dtype = "int32", shape = (9, 13, 10))#candidate|2789|(9, 13, 10)|var|int32
bop_2790 = relay.subtract(var_2788.astype('int32'), var_2789.astype('int32')) # shape=(9, 13, 10)
const_2798 = relay.const([[[7,5,-9,-10,9,8,-8,8,5,-6],[1,-3,3,10,-2,-5,5,6,8,-2],[-9,-8,3,-9,-8,-5,2,-7,1,-10],[-8,-3,-6,-7,-6,1,1,-4,-7,-3],[7,-4,-6,-7,-10,-2,-3,3,4,6],[-9,9,10,6,-6,4,7,-6,1,-1],[-8,9,-8,3,-2,-3,-7,5,-6,7],[-10,-9,9,1,7,-10,3,-8,-4,4],[-1,-9,1,-6,-4,1,3,2,-3,1],[3,7,-3,-8,6,-4,-10,5,-6,-8],[-3,-6,-1,8,9,4,-5,9,-5,-6],[10,-6,-3,-4,2,-1,3,3,6,-7],[-3,9,3,-5,-7,-7,-10,-9,-6,2]],[[-5,6,10,3,1,1,5,1,7,6],[8,1,8,3,-3,5,9,9,1,5],[3,3,7,-6,1,-8,-5,8,-1,1],[-7,-3,10,-4,-5,10,-7,8,8,-8],[-5,-9,-7,8,-10,-3,7,-1,-9,7],[-6,-2,9,-6,-3,7,3,2,5,-10],[-1,1,-1,7,9,-6,1,7,7,9],[8,-1,4,-2,3,5,7,4,-8,9],[-4,-2,2,-7,5,-10,3,-5,-7,9],[9,4,10,5,8,7,9,-9,3,10],[3,2,-5,7,3,10,8,9,3,-7],[-8,-4,-6,-7,-10,-8,9,9,6,-6],[9,-5,1,8,10,8,2,4,-7,-8]],[[8,-10,-3,-2,4,-9,5,4,10,3],[-7,-5,-5,6,9,-8,7,7,8,8],[9,-9,-3,-2,4,2,-6,-8,-7,-2],[-8,5,-10,-5,4,-2,-3,7,3,3],[-5,-9,-4,-2,3,9,-6,-5,9,-7],[-5,5,-10,-8,-4,-2,-5,-9,-8,-10],[-5,-2,-5,7,9,8,3,-2,8,7],[10,-2,-10,2,2,-1,-2,9,-10,-5],[2,-2,9,-9,-5,-10,8,8,2,8],[-5,-2,1,-6,10,1,5,9,9,-2],[6,9,-3,-4,10,-9,-10,-2,4,2],[-1,6,-6,9,-2,-2,-2,-2,2,8],[-7,-7,-9,8,8,7,-2,-5,-9,8]],[[5,2,2,10,10,-4,-6,6,1,-9],[3,-8,1,5,-10,-1,-2,-2,-7,-8],[2,-7,-4,-4,-4,-4,8,-2,-9,-9],[2,4,3,10,-8,-8,-2,-9,-8,3],[-5,-9,-1,2,-9,-9,-2,-5,-8,-6],[5,9,9,-4,-2,-8,-6,-1,-9,-6],[-5,1,7,2,-3,2,-2,-5,-10,9],[8,8,-6,10,2,-8,-3,4,-5,5],[-5,-5,-9,-10,-1,-10,8,-2,5,-2],[10,-3,8,-10,4,-10,6,5,-8,-4],[-4,8,2,-6,2,5,-9,4,8,8],[-1,10,-6,3,-8,2,3,3,10,4],[9,-5,-10,4,4,7,-2,5,1,-3]],[[6,10,7,-5,-7,10,-10,4,5,5],[4,7,10,6,-9,-10,-6,6,-6,-10],[-2,8,-9,-10,-4,6,-9,-4,4,-8],[-2,-9,9,-2,6,9,-4,10,1,10],[6,-3,-8,2,8,-6,-10,-9,-2,-7],[4,-8,3,4,7,9,-7,-6,1,8],[2,2,-10,-3,1,-1,-6,-3,-7,4],[8,-7,8,-3,-3,-8,4,-9,10,-7],[3,-8,-4,-9,8,5,7,-5,5,-3],[7,-7,3,7,9,-6,9,3,-7,-6],[-6,-2,-3,7,5,8,3,-6,3,-2],[5,-7,4,-10,4,5,-9,4,-6,-1],[3,6,7,6,3,-2,-8,3,-9,-4]],[[-10,-5,-7,-10,10,-5,-1,10,-1,5],[4,2,-6,-5,-9,10,-7,-6,-3,-7],[-8,-7,1,6,-6,6,10,-4,-5,3],[-8,-3,9,-9,-8,7,-9,4,4,2],[10,-1,-7,9,6,6,-9,8,8,2],[6,-1,-8,2,2,-3,3,-7,9,-2],[9,8,7,-6,5,-1,1,-5,5,-10],[-3,-3,7,7,-5,-10,9,2,5,-10],[-8,-3,-3,6,6,-8,9,7,1,-1],[-5,1,-10,-7,-1,-7,-10,-7,-9,-2],[9,7,-1,-3,8,-7,4,4,-10,-10],[10,1,-10,-2,1,5,3,-7,4,-7],[5,-5,3,-4,-2,6,-2,9,-3,-10]],[[-4,6,6,-2,-5,-5,4,-9,1,9],[-6,5,-2,-7,-5,1,1,-7,-1,9],[9,-8,6,-9,1,-10,3,-4,-10,-1],[-9,6,-10,-8,3,8,-5,-4,-4,-6],[1,9,-1,-10,-7,6,3,-7,-7,3],[6,2,10,2,9,6,-6,-5,-1,8],[7,-3,7,3,-8,-2,2,6,1,3],[-6,1,5,6,2,1,9,-2,-5,-8],[3,-7,-5,-4,-9,-6,7,6,3,5],[8,-7,-9,1,3,-7,1,-3,5,1],[-6,10,4,5,-7,-7,6,2,-4,-1],[4,5,-2,-2,-8,4,9,7,-7,3],[1,-9,-3,-4,3,5,-5,-3,-9,-7]],[[-7,10,2,-1,10,-3,3,9,2,-4],[1,2,-10,-5,7,7,-1,-10,-4,2],[-5,4,8,8,9,4,-1,-5,1,-3],[10,-10,7,-5,-1,5,-3,-5,-4,-2],[-3,4,5,9,9,-4,-2,-3,-4,-1],[5,-10,7,-1,6,-8,4,-7,1,-6],[-9,-3,-7,-3,-3,6,10,-8,3,2],[5,-2,-1,-9,-6,5,7,8,4,-5],[-6,5,-8,5,-2,-3,-6,-7,4,9],[5,5,2,6,-5,-3,3,-6,-10,-4],[-7,-1,-2,8,-6,-5,-1,-3,-4,-10],[-9,9,-10,-4,-4,-5,7,-4,6,-6],[10,-1,4,5,2,-6,-8,-2,-9,-3]],[[7,6,5,5,-3,-4,-2,8,-9,-3],[-8,-2,3,-9,2,-7,-9,3,2,-3],[-8,-2,4,-6,2,-3,-10,9,3,-6],[-7,6,-6,9,-8,5,-1,-8,-4,7],[-6,8,-7,9,-4,-7,-10,8,3,-5],[10,-6,-8,4,-1,-10,1,-2,5,-10],[-10,2,9,7,-5,-2,-2,-6,5,4],[10,2,2,-2,7,5,-1,7,-5,10],[7,-5,-10,-1,2,10,9,-5,-8,-7],[-1,4,7,1,-8,-4,-3,-3,-9,-10],[2,-2,4,4,-6,-8,-3,-8,6,6],[10,-8,-8,-10,7,-9,1,-4,1,-8],[-8,6,9,-6,3,10,2,8,8,9]]], dtype = "int32")#candidate|2798|(9, 13, 10)|const|int32
bop_2799 = relay.maximum(var_2789.astype('int64'), relay.reshape(const_2798.astype('int64'), relay.shape_of(var_2789))) # shape=(9, 13, 10)
func_51_call = mod.get_global_var('func_51')
func_55_call = mutated_mod.get_global_var('func_55')
const_2810 = relay.const([-1,5,-2,-2,-5,1,-10,-6,5,-9,1,-3,-6,6,-6,9,7,-9,8,-1,2,4,5,8,-9,-10,-3,-9,-7,8,9,-3,3,5,-3,-6,-10,-8,8,6,5,8,-10,6,5,3,3,-10,7,-10,4,5,4,-1,-9,2,7,-1,-10,-4,-1,8,-4,10,6,2,-6,5,10,4,5,1,-9,-8,-9,3,3,4,2,9,-6,7,7,3,8,-7,5,-6,10,1,-8,9,-8,7,9,-5,8,-6,-1,-4,-6,3,-1,-4,-3,-10,1,-10,-2,-8,-4,5,-6,9,-2,8,4,-9,-2,-5,2,-6,7,-4,7,-2,-5,-5,10,8,-6,9,-10,6,3,-7,-1,8,2,-8,1,10,-9,-9,-8,10,-7,-8,7,-9,7,3,-10,7,2,1,-7,1,5,-4,1,8,3,5,2,-10,1,-9,4,-4,-1,-10,-5,6,-5,2,-6,-3,8,1,-3,9,4,-8,-3,-5,-7,-5,-5,4,-1,7,-9,-8,-10,7,8,9,5,10], dtype = "int64")#candidate|2810|(200,)|const|int64
call_2809 = func_51_call(relay.reshape(const_2810.astype('int64'), [2, 10, 10]), relay.reshape(const_2810.astype('int64'), [2, 10, 10]), )
call_2811 = func_51_call(relay.reshape(const_2810.astype('int64'), [2, 10, 10]), relay.reshape(const_2810.astype('int64'), [2, 10, 10]), )
bop_2816 = relay.not_equal(var_2788.astype('bool'), bop_2799.astype('bool')) # shape=(9, 13, 10)
func_2389_call = mod.get_global_var('func_2389')
func_2391_call = mutated_mod.get_global_var('func_2391')
var_2822 = relay.var("var_2822", dtype = "uint64", shape = (18,))#candidate|2822|(18,)|var|uint64
call_2821 = func_2389_call(relay.reshape(var_2822.astype('uint64'), [3, 1, 6]))
call_2823 = func_2389_call(relay.reshape(var_2822.astype('uint64'), [3, 1, 6]))
output = relay.Tuple([bop_2790,call_2809,const_2810,bop_2816,call_2821,var_2822,])
output2 = relay.Tuple([bop_2790,call_2811,const_2810,bop_2816,call_2823,var_2822,])
func_2826 = relay.Function([var_2788,var_2789,var_2822,], output)
mod['func_2826'] = func_2826
mod = relay.transform.InferType()(mod)
var_2827 = relay.var("var_2827", dtype = "int32", shape = ())#candidate|2827|()|var|int32
var_2828 = relay.var("var_2828", dtype = "int32", shape = (9, 13, 10))#candidate|2828|(9, 13, 10)|var|int32
var_2829 = relay.var("var_2829", dtype = "uint64", shape = (18,))#candidate|2829|(18,)|var|uint64
output = func_2826(var_2827,var_2828,var_2829,)
func_2830 = relay.Function([var_2827,var_2828,var_2829,], output)
mutated_mod['func_2830'] = func_2830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_2836 = relay.TupleGetItem(func_2636_call(), 0)
call_2837 = relay.TupleGetItem(func_2638_call(), 0)
func_2464_call = mod.get_global_var('func_2464')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_2844 = func_2464_call()
call_2845 = func_2464_call()
func_173_call = mod.get_global_var('func_173')
func_176_call = mutated_mod.get_global_var('func_176')
const_2849 = relay.const([-9.742761,-5.467458,6.146562,4.390638,-9.917855,-2.132513,9.962300,-5.501018,9.503640,-4.751033,-5.279097,0.899717,7.328323,-8.653003,0.547119,9.011210,9.291514,1.704786,-8.083595,2.084755,0.196291,3.930403,-6.450501,7.977447,-6.272785,-3.427172,1.401842,6.550921,6.320884,2.855711,6.957962,6.966797,-1.364227,-5.453644,1.845765,5.270815,4.085241,6.624882,7.884625,7.203851,4.622347,-0.817773,9.154160,3.528237,1.953614,6.968072,-4.406889,3.357827,0.961544,2.236619,-9.852117,7.801939,-0.846827,7.372330,9.545275,1.599082,9.717106,-2.719875,8.991796,4.279119,-0.983025,-4.708360,0.656762,-6.418429,2.938477,3.996036,-8.360105,1.426097,-3.574828,-5.229315,9.181666,-9.904793,9.573808,4.767995,-5.758107,0.621494,-8.504452,3.365734,-4.278000,-4.348239,-2.999274,1.591782,3.906166,5.469876,5.624539,4.322382,5.133195,7.175412,-7.589496,0.743206,-9.774101,-5.563209,-7.256477,-6.103015,2.650910,-4.213557,6.043241,-7.548264,-0.917233,-2.946251,-2.367055,-1.815133,8.977164,-8.538421,2.980516,-5.535180,3.636495,-8.780920,8.953378,-4.041636,3.048819,-0.189878,-9.318572,9.806931,-3.273423,-1.938662,-6.368516,-0.566963,8.408101,0.819446,-8.530297,-1.928688,-0.189842,-9.097137,6.873498,-0.837802,5.121027,0.032580,-3.074582,2.113135,-4.406306,0.504778,-2.112550,-9.373211,-6.702798,-7.768128,-7.369509,-2.819054,1.248351,-1.652485,6.234891,-0.500863,6.568022,-7.137126,-9.486761,-0.612624,-0.854472,9.018230,9.149791,-0.756571,-5.183429,-6.542957,2.398093,2.949791,8.459125,9.498807,2.430834,-7.721758,-9.765753,-6.585856,-0.408899,4.857099,-1.953857,7.378930,9.921900,7.758097,1.333593,-2.919376,9.587114,8.811435,7.757199,8.072236,-4.833192,7.416641,8.947678,-0.217462,-4.979259,-1.283800,-5.563180,-1.717580,6.233971,5.034038,4.411039,0.842043,-1.864785,-0.994069,2.715951,-0.269901,0.703065,-2.162976,3.903838,-7.118870,0.125001,-2.771483,-3.086393,6.731232,-9.791792,-4.512756,-3.698025,-6.590298,3.360142,-8.373297,2.962989,-4.593790,-9.752004,1.985293,2.223657,0.908854,-9.477194,7.869743,-9.854207,-4.108975,8.412864,-8.984819,-4.160343,-9.564718,5.878453,-9.603875,9.569996,0.472370,-9.820101,7.750942,-0.415007,-4.906571,-6.155032,-4.815003,-7.110174,-4.395790,7.652997,8.870995,0.801101,6.730569,-7.116750,3.404671,4.448267,9.569506,5.633614,6.474326,2.600791,-3.261651,7.020304,-4.262792,5.325064,-6.161109,8.984683,-8.099427,9.050217,-1.845298,-8.585154,-4.545020,-8.237335,4.821058,-1.260359,-2.337240,-5.124494,-0.602878,1.626299,9.908898,8.802109,4.586953,9.501910,8.194798,-5.402628,-1.837282,-7.159087,-5.380485,-7.859563,-2.284416,-2.747407,-8.962290,-6.330821,4.078526,0.453508,-3.343947,-2.080048,9.661276,-3.194004,-3.615339,-8.333943,0.289465,9.895360,-7.564410,2.798110,9.576684,7.161715,-4.736308,-5.798055,0.784501,-0.218974,-2.051869,3.116998,-1.411381,-7.976368,-5.722365,5.142450,7.491980,1.645282,-3.255069,3.144601,5.843323,6.568705,-3.467895,4.021138,0.101825,0.158034,-8.829756,7.748170,-0.479665,9.129241,1.141145,-3.080229,-3.087843,-9.315896,-8.637352,-3.665100,-6.148224,6.536316,1.578230,-5.459155,-6.512101,-2.852861,-2.654168,9.663026,3.302035,-3.755420,4.132429,-9.379328,-0.494809,-0.259672,-2.140680,-9.345408,-6.056206,9.850311,-5.443322,-9.547054,5.803636,0.396016,8.686009,5.260036,-3.258583,1.677930,-9.600981,5.832398,-0.763370,-7.186761,-1.812101,9.608364,-6.166913,-2.096947,-0.737458,-6.227379,5.188822,5.952795,-4.683883,8.335269,-3.571366,3.771365,-1.512726,-9.295730,-8.801844,2.461279,0.805673,-0.054699,2.757379,5.813306,0.279573,-6.778743,9.591997,7.104471,-9.465803,-9.384518,0.885164,9.243693,-8.834709,-3.922841,-2.569858,1.938321,-3.596732,-5.615357,-4.765655,9.412193,1.413379,-8.353583,-4.980082], dtype = "float32")#candidate|2849|(384,)|const|float32
call_2848 = relay.TupleGetItem(func_173_call(relay.reshape(const_2849.astype('float32'), [2, 12, 16]), relay.reshape(const_2849.astype('float32'), [2, 12, 16]), ), 1)
call_2850 = relay.TupleGetItem(func_176_call(relay.reshape(const_2849.astype('float32'), [2, 12, 16]), relay.reshape(const_2849.astype('float32'), [2, 12, 16]), ), 1)
uop_2851 = relay.acos(call_2844.astype('float64')) # shape=(2, 6, 10)
uop_2853 = relay.acos(call_2845.astype('float64')) # shape=(2, 6, 10)
output = relay.Tuple([call_2836,call_2848,const_2849,uop_2851,])
output2 = relay.Tuple([call_2837,call_2850,const_2849,uop_2853,])
func_2856 = relay.Function([], output)
mod['func_2856'] = func_2856
mod = relay.transform.InferType()(mod)
output = func_2856()
func_2857 = relay.Function([], output)
mutated_mod['func_2857'] = func_2857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2445_call = mod.get_global_var('func_2445')
func_2446_call = mutated_mod.get_global_var('func_2446')
call_2911 = func_2445_call()
call_2912 = func_2445_call()
var_2920 = relay.var("var_2920", dtype = "bool", shape = (2, 6, 10))#candidate|2920|(2, 6, 10)|var|bool
bop_2921 = relay.right_shift(call_2911.astype('int64'), relay.reshape(var_2920.astype('int64'), relay.shape_of(call_2911))) # shape=(2, 6, 10)
bop_2924 = relay.right_shift(call_2912.astype('int64'), relay.reshape(var_2920.astype('int64'), relay.shape_of(call_2912))) # shape=(2, 6, 10)
uop_2925 = relay.sinh(var_2920.astype('float32')) # shape=(2, 6, 10)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_2932 = relay.TupleGetItem(func_2636_call(), 0)
call_2933 = relay.TupleGetItem(func_2638_call(), 0)
bop_2941 = relay.subtract(uop_2925.astype('int8'), relay.reshape(bop_2921.astype('int8'), relay.shape_of(uop_2925))) # shape=(2, 6, 10)
bop_2944 = relay.subtract(uop_2925.astype('int8'), relay.reshape(bop_2924.astype('int8'), relay.shape_of(uop_2925))) # shape=(2, 6, 10)
func_946_call = mod.get_global_var('func_946')
func_950_call = mutated_mod.get_global_var('func_950')
var_2946 = relay.var("var_2946", dtype = "float64", shape = (336,))#candidate|2946|(336,)|var|float64
call_2945 = relay.TupleGetItem(func_946_call(relay.reshape(var_2946.astype('float64'), [6, 4, 14]), relay.reshape(var_2946.astype('float64'), [6, 4, 14]), ), 2)
call_2947 = relay.TupleGetItem(func_950_call(relay.reshape(var_2946.astype('float64'), [6, 4, 14]), relay.reshape(var_2946.astype('float64'), [6, 4, 14]), ), 2)
output = relay.Tuple([call_2932,bop_2941,call_2945,var_2946,])
output2 = relay.Tuple([call_2933,bop_2944,call_2947,var_2946,])
func_2959 = relay.Function([var_2920,var_2946,], output)
mod['func_2959'] = func_2959
mod = relay.transform.InferType()(mod)
var_2960 = relay.var("var_2960", dtype = "bool", shape = (2, 6, 10))#candidate|2960|(2, 6, 10)|var|bool
var_2961 = relay.var("var_2961", dtype = "float64", shape = (336,))#candidate|2961|(336,)|var|float64
output = func_2959(var_2960,var_2961,)
func_2962 = relay.Function([var_2960,var_2961,], output)
mutated_mod['func_2962'] = func_2962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2499_call = mod.get_global_var('func_2499')
func_2500_call = mutated_mod.get_global_var('func_2500')
call_2979 = func_2499_call()
call_2980 = func_2499_call()
output = relay.Tuple([call_2979,])
output2 = relay.Tuple([call_2980,])
func_2981 = relay.Function([], output)
mod['func_2981'] = func_2981
mod = relay.transform.InferType()(mod)
output = func_2981()
func_2982 = relay.Function([], output)
mutated_mod['func_2982'] = func_2982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_2983 = func_2464_call()
call_2984 = func_2464_call()
var_2996 = relay.var("var_2996", dtype = "bool", shape = (2, 6, 10))#candidate|2996|(2, 6, 10)|var|bool
bop_2997 = relay.power(call_2983.astype('float64'), relay.reshape(var_2996.astype('float64'), relay.shape_of(call_2983))) # shape=(2, 6, 10)
bop_3000 = relay.power(call_2984.astype('float64'), relay.reshape(var_2996.astype('float64'), relay.shape_of(call_2984))) # shape=(2, 6, 10)
var_3010 = relay.var("var_3010", dtype = "bool", shape = (2, 6, 10))#candidate|3010|(2, 6, 10)|var|bool
bop_3011 = relay.greater_equal(var_2996.astype('bool'), relay.reshape(var_3010.astype('bool'), relay.shape_of(var_2996))) # shape=(2, 6, 10)
output = relay.Tuple([bop_2997,bop_3011,])
output2 = relay.Tuple([bop_3000,bop_3011,])
func_3020 = relay.Function([var_2996,var_3010,], output)
mod['func_3020'] = func_3020
mod = relay.transform.InferType()(mod)
mutated_mod['func_3020'] = func_3020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3020_call = mutated_mod.get_global_var('func_3020')
var_3022 = relay.var("var_3022", dtype = "bool", shape = (2, 6, 10))#candidate|3022|(2, 6, 10)|var|bool
var_3023 = relay.var("var_3023", dtype = "bool", shape = (2, 6, 10))#candidate|3023|(2, 6, 10)|var|bool
call_3021 = func_3020_call(var_3022,var_3023,)
output = call_3021
func_3024 = relay.Function([var_3022,var_3023,], output)
mutated_mod['func_3024'] = func_3024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2581_call = mod.get_global_var('func_2581')
func_2582_call = mutated_mod.get_global_var('func_2582')
call_3026 = relay.TupleGetItem(func_2581_call(), 0)
call_3027 = relay.TupleGetItem(func_2582_call(), 0)
output = call_3026
output2 = call_3027
func_3032 = relay.Function([], output)
mod['func_3032'] = func_3032
mod = relay.transform.InferType()(mod)
output = func_3032()
func_3033 = relay.Function([], output)
mutated_mod['func_3033'] = func_3033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_3036 = func_2464_call()
call_3037 = func_2464_call()
func_1956_call = mod.get_global_var('func_1956')
func_1959_call = mutated_mod.get_global_var('func_1959')
const_3049 = relay.const([3.184571,-8.635986,-4.575277,-0.824155,-6.164178,0.209862,6.522800,8.162743,3.991572,1.981891,-1.082154,5.510135,-9.221492,2.041016,8.363749,9.939965,4.214033,0.575672,-3.268584,6.022256,4.029245,-5.977821,-1.836363,-3.044629,9.818395,9.811705,2.707021,4.665567,0.668732,8.879994,-7.043741,3.197564,-2.381135,-2.093467,-7.844011,4.203320,-7.250077,-6.764326,3.910290,6.239311,3.075464,2.323881,0.256401,-0.590249,0.978918,-8.868901,9.682788,9.922071,-6.743072,-5.449781,2.044379,-3.434831,9.902238,5.684464,-6.204271,-9.615758,4.071535,-8.759888,-4.644016,1.353247,-7.192775,-3.401531,1.008661,0.049804,9.160562,-3.233114,1.951766,-3.372229,-4.954115,-6.541064,-4.271846,-2.642142,-7.717727,3.507549,4.774336,-4.955319,-3.381697,6.945151,9.506719,0.199528,8.560346,1.329125,7.518609,9.390773,4.161710,-6.643452,-1.771784,-7.366081,0.042675,-3.818716,-2.705718,-0.865812,5.238990,0.124506,-5.989232,3.712232,-3.280879,-6.509622,-0.919076,1.093094,0.178195,-4.194194,-6.894653,-7.783899,-6.837806,1.502166,-6.958550,2.688688,5.411212,-5.203500,7.690650,7.052431,-0.744209,3.328864,-1.588383,6.611790,-4.171017,3.157331,-9.831677,-3.237956,-9.773984,3.789418,7.444692,-1.978012,6.389529,-9.685993,-2.090217,8.185656,-3.729838,-7.421324,1.147925,-6.597845,7.645348,5.432937,-3.335604,-5.504797,9.037709,6.758473,-9.924717,6.677511,-5.909490,-9.889544,-3.247605,1.130964,6.880577,5.754212,1.299818,-4.537566,7.137246,-7.380373,-2.368571,2.194657,8.940106,-7.049172,-7.111947,5.852211,-4.420893,-4.356357,3.462410,0.866539,5.069631,-0.644355,-4.174352,1.530600,-1.564171,3.987683,-2.308016,-2.229856,7.420522,4.450191,-5.846751,-3.035600,-4.736265,3.969458,5.610337,-4.742446,4.571188,3.906179,-5.131784,-4.859060,4.279042,6.292355,-5.990201,9.845190,-0.486011,0.391774,5.309419,4.389883,-6.398900,-5.825838,1.429500,-5.223824,4.403285,5.284229,-1.714143,-5.980058,9.640916,7.575975,4.108174,-9.738926,1.946352,-0.516388,3.791745,8.446848,4.309205,4.753891,-6.423368,9.769352,-3.934703,0.548153,-6.620950,-5.809587,9.410370,2.252310,-2.280586,7.759962,-0.156525,-2.116547,2.046307,1.690061,1.852654,-4.081139,3.807861,6.671033,-5.229218,-0.703217,-2.270523,-2.852333,7.568875,-5.678295,9.801501,4.949495,-8.238028,-7.787685,0.300386,-5.602186,-5.642674,9.303974,-8.114186,8.022416,6.050267,-1.283901,-0.767395,-5.947969,-8.434095,6.562062,-9.056581,4.676607,4.972743,-8.605916,-0.462821,8.962002,8.713251,-1.468046,-6.771577,-5.052259,2.744461,6.590878,-8.886041,1.309482,2.390697,-8.700171,-0.971197,-7.371290,4.246394,-2.741874,2.679542,2.037811,-8.135588,-8.395653,0.218637,3.078228,3.673115,2.597643,-2.754380,6.963883,5.173601,3.804602,6.693989,4.104129,-2.695572,-3.894408,-5.567743,5.464686,7.198362,8.729904,-4.271119,-6.556579,1.548942,1.483486,-7.071920,6.478565,9.683547,1.846096,-7.384624,3.137003,8.162300,-2.030812,7.608925,-7.312747,-3.209992,-4.919707,-3.618201,-7.042546,-3.866033,9.722972,-3.259457,-6.980999,2.791284,4.265188,5.764129,5.816456,-6.516293,-3.116433,9.796690,4.318367,-0.469599,-8.063001,-9.898829,-4.611791,2.667901,3.207890,3.147992,6.040198,-6.807432,-8.126570,0.476940,-0.175290,-0.251482,-3.144000,0.311825,5.219916,1.809414,7.293689,-7.303288,-1.111996,6.022025,-5.065211,0.521565,-6.247282,-1.359722,1.567859,-1.062727,0.485777,-1.706091,-6.775140,9.852932,3.901674,0.109946,-1.105137,5.567152,5.078619,7.067578,8.047461,3.726025,-5.967196,-3.492450,-6.875896,0.175579,0.464466,2.333667,3.345017,1.441318,6.192867,8.547365,5.925173,-7.904164,-2.912527,-6.554979,-1.187010,2.608211,9.972694,9.994920,-3.580874,0.958900,-0.287149,7.187002,-7.334655,3.192810,0.606843,4.355838,2.957259,-2.614256,0.836263,5.106842,-8.047510,-5.323422,-8.153463,7.130770,-7.515305,9.932223,9.769974,2.350897,0.178121,5.933159,9.870671,8.957774,-6.878453,-3.363337,-3.848521,-5.352956,-7.200635,-2.766639,-1.542082,5.268398,4.670890,0.748907,1.323146,-8.586968,5.582791,-5.517871,-7.069683,7.927752,9.429072,8.092232,6.518894,-2.829355,-3.915768,7.586232,3.077416,-6.062746,8.374033,8.711663,-0.185282,0.078633,-7.952098,-0.200436,-0.992373,1.847122,-7.109628,1.785725,-6.558215,0.737407,8.138934,3.099735,-9.217452,1.776302,-1.014254,-0.345146,-6.455252,-1.811706,9.255815,4.969745,3.498255,1.323163,5.023620,1.625150,6.980678,2.017007,9.106424,4.345305,-6.869184,1.149408,8.864262,0.168852,-1.836220,-2.200624,-9.045741,1.141181,2.123125,9.452867,4.456159,-5.154139,-7.210607,8.249406,2.530645,9.994179,6.024474,-4.383056,-7.623379,-4.007528,7.712563,4.163202,8.908904,2.964783,8.266097,7.877751,-8.001614,5.048596,2.527058,-9.577160,9.303189,-9.912371,4.292330,-1.216716,-5.688033,-4.887767,5.951328,-0.038979,-9.756358,1.253367,-4.667461,-8.594189,3.743023,1.063023,6.599150,1.020721,9.611027,9.432768,-9.066931,0.930016,7.505407,-5.530223,4.968330,9.684981,7.745099,6.460549,4.811962,-9.956469,-7.347415,-9.894425,2.262725,-9.434696,7.878463,4.967797,8.982200,8.661711,-2.679601,-7.357246,-0.907372,5.058703,-4.326900,7.786045,2.429270,-9.888276,-2.397338,5.036826,-5.480714,-2.568209,6.869121,7.806174,-3.136407,3.652677,2.217116,-8.874275,4.041908,4.932236,6.512860,-0.028565,-9.929621,-0.075516,2.989253,-4.878200,0.792205,6.400835,7.177379,-7.618721,7.714796,-9.684207,9.397120,-7.970565,9.730314,-4.217196,8.409647,3.364631,-6.098210,-3.251508,2.189051,4.152154,2.041641,2.605830,-5.851654,6.604481,-9.515827,-2.752967,-4.754730,-6.089153,-8.501534,-0.198790,4.850070,5.829135,0.582249,2.421337,-0.580485,-0.661805,-3.843709,-0.426718,7.674957,-8.446008,-3.927164,3.946768,-1.771365,-1.644994,-0.315117,-3.155504,-0.365222,8.100001,3.208028,-9.631903,-9.743840,8.287569,-6.695764,4.761263,2.966908,2.813317,-4.535473,1.492855,4.734017,0.114240,-4.985886,4.308934,8.859940,2.088218,-2.657712,-4.896091,-8.730467,0.157307,-6.068143,-4.098698,-3.857864,7.409344,-2.932985,7.751373,-7.735858,3.346626,-4.050595,7.366552,-9.920410,-4.698544,-4.871585,3.119896,4.310277,3.353482,6.664339,5.856758,-5.402228,-4.641641,6.643923,-2.485339,-3.555659,0.095653,-0.852294,-7.785044,6.479517,6.145170,9.959087,-6.622512,4.362340,-7.532825,8.522595,8.333946,-8.317935,-7.116231,8.231593,8.044644,-2.422974,3.279691,9.272599,5.371985,-9.698559,-4.834724,4.663940,-2.923937,9.287432,9.072157,7.974225,-8.446187,-5.334856,9.862270,9.521209,3.620095,6.265494,-1.766525,-5.331340,4.694818,8.434764,7.698088,-2.007151,1.691020,-3.317421,-3.070015,0.185983,-6.898223,9.303935,-4.783222,-4.247265,9.747220,-0.525311,2.173480,7.746772,7.758043,-0.710778,-2.114534,3.477390,-6.647200,-2.092839,4.482058,2.187073,-8.685889,7.970302,9.065480,-7.964327,-3.638521,9.768655,-2.521738,-0.083166,7.403255,-8.512370,-1.133451,6.932905,8.263492,5.694559,-1.787724,-8.018558,-2.031842,5.320077,-3.448245,-7.234457,-2.173860,-8.481339,-0.839943,-5.108761,1.540314,7.965577,-4.755987,3.074133,6.978026,-5.580212,4.640043,-8.468239,4.563279,-2.994420,8.401573,-8.880388,-6.678037,-2.918328,5.832074,-2.568803,0.398524,-4.411784,-2.954878,-0.590327,0.144863,5.495556,2.479370,-0.460288,8.379080,-5.981875,2.294418,-5.935915,1.997012,-0.046775,-5.855446,-0.094350,3.516584,3.073944,-5.103381,6.118674,9.083896,-2.608063,-0.673444,8.836609,2.390433,-1.648007,-9.345485,-6.417629,-2.807228,-0.492678,7.101016,-6.926441,-5.663290,7.074649,5.672227,-4.737114,1.403155,-9.416248,7.071686,-8.514979,9.627295,2.419873,9.146328,-3.281419,-3.171175,-6.734437,2.182685,-2.105066,4.784968,-5.579170,-2.057886,1.013877,1.476806,4.644932,3.765348,-7.461650,3.458894,-0.424805,8.971229,-5.643723,1.219661,-5.721104,1.053787,-0.144446,-3.122604,-1.619696,4.579278,-3.504484,9.680777,5.933079,4.988466,9.146602,9.806210,-8.997951,-0.673076,7.011682,3.742082,-3.152781,-7.011232,5.516573,8.021997,-3.223096,5.482848,-2.945580,-1.078125,6.940099,2.662981,-9.590557,-8.997928,5.968772,8.306250,8.301895,-5.041297,-2.725620,-9.467501,6.838446,0.562582,6.348362,0.496049,1.361117,8.852183,4.206355,3.136261,-6.065258,-2.539186,2.468112,-1.683077,8.698245,-7.844866,6.357202,1.970515,5.362804,-5.875486,-4.396733,-1.330900,-0.124297,-6.800222,-1.229905,5.913932,-5.116578,-2.595480,-9.918559,-6.993839,-1.697654,8.280544,4.220283,-9.220392,4.448981,8.765972,-6.451294,5.626216,-5.595558,0.110378,3.544327,7.997621,-5.871032,8.046398,-4.960012,-3.177292,9.777506,-8.815198,3.443276,1.316463,-3.588739,-7.560384,-8.186760,3.122352,6.025003,7.910877,8.241980,-3.906670,-1.292468,-8.545782,2.143014,9.607419,-1.150083,-3.892598,1.327335,-8.164262,-8.269577,-7.969847,-2.993736,8.359640,-6.302093,1.799533,4.099032,-6.422327,9.914578,-7.119252,4.210010,5.275519,-9.877140,2.687479,4.010644,8.708925,-1.857049,-7.270860,3.800520,2.712138,-1.060565,1.821949,-6.627574,-5.823089,3.175884,6.800914,-0.962814,-6.223702,-6.739715,-7.745323,-2.034404,8.094186,-6.821050,7.155180,-7.270460,4.800935,5.208597,-9.864694,-6.461492,-1.943323,-7.970332,1.713917,-7.703443,8.409190,7.520652,8.203539,5.560409,5.113626,-0.375661,6.262647,6.342118,-2.778829,0.603876,-8.726357,4.921573,4.011643,-4.310937,-0.169206,3.037752,3.984219,-9.638417,-7.913967,-8.704110,0.636494,-7.046803,8.920483,5.781892,2.625606,-8.927128,2.067612,-8.774415,8.236331,9.264882,7.335742,6.916085,9.442618,4.512639,5.452970,5.390019,5.941475,5.285974,9.138461,-1.035686,-7.953173,8.321069,-1.902102,-6.236310,-0.916874,5.599301,-9.273608,1.837182,-9.454108,8.358192,-6.370939,-0.617721,3.482070,-8.018369,8.809386,8.722051,0.988939,8.128029,-5.015422,-0.072187,0.934431,-7.589611,-0.836528,5.997441,0.088269,2.019298,-2.338093,5.842662,8.470845,-5.448569,-2.934990,-2.598579,-0.571229,0.804491,-5.561757,-0.303414,6.120745,8.327858,-3.405660,8.408387,-0.151645,1.178954,-5.729299,-7.613158,-0.909444,-3.067919,-1.044688,-9.340526,-5.732997,0.650899,7.157488,-8.784985,-0.869806,7.405022,6.011857,-0.856304,3.035963,-2.902070,-7.713820,5.217314,2.309822,1.367963,9.523388,6.294361,8.490144,-0.075721,-0.339108,-1.615152,-5.701709,2.296232,-5.059636,3.785255,9.919228,3.550496,-8.827934,-6.758139,7.427990,2.839607,3.548839,-2.192882,8.651074,-4.968386,-7.997262,3.339522,-3.095737,-0.561821,-0.199625,-3.406851,3.769013,-3.052223,-5.880213,9.835713,-8.499952,-5.482781,9.225642,1.880704,5.005336,-0.947859,-9.856539,0.141056,-6.614082,3.005062,2.539707,-0.301548,6.839014,0.860360,5.653370,6.338027,3.649189,-3.566066,5.652010,-1.528418,3.347344,-2.865839,-8.848504,-3.974193,1.155189,0.197387,8.132996,5.988090,-2.994751,-3.712327,6.931304,-0.967786,-7.179159,-7.023207,-4.035704,-4.702232,0.732587,1.702363,-2.288103,8.693989,2.898223,3.129978,-4.607390,1.716628,4.465497,6.410197,-6.095402,9.846253,-5.099943,-8.702491,-3.764338,-9.673095,2.282507,8.135531,7.464105,6.881113,-7.577445,1.828664,1.172004,5.992913,-5.959200,2.059624,-6.859221,1.330614,-4.149977,1.771494,2.776644,5.499564,4.064914,-3.719832,3.272286,5.472815,-3.641567,-2.208251,-6.663043,-9.688399,-9.141365,3.331225,0.939462,3.868113,-2.113493,-5.995777,-5.195766,-4.224944,3.550012,-5.548598,-8.768500,-1.244776,-3.162389,-7.605732,-1.299874,-8.846268,-2.443716,-9.454488,-3.626942,-8.827373,-9.102181,-2.637141,-9.368281,1.437814,-4.801192,-7.916709,5.302767,6.690113,5.875475,-8.176842,3.936766,1.599718,-5.299451,9.960892,5.968288,8.400442,-5.477537,6.321652,-3.375094,-7.449029,-8.045319,3.574762,0.815029,-8.495981,-3.200325,5.196071,0.617245,-5.765917,-1.538525,-3.936567,1.125121,2.809882,-5.930517,-4.511676,6.240528,3.444713,1.351535,-0.578917,5.975260,9.300718,3.013140,1.705236,6.497824,3.374218,8.636895,-0.961397,6.684082,7.624315,-1.580809,0.803855,-2.531289,7.532969,0.828633,4.470529,-4.816308,0.758156,0.742576,-5.756234,-5.516418,-6.966391,-4.416240,-5.504232,-6.695117,9.146115,2.374396,2.109199,0.156602,3.996252,-2.724399,6.860526,6.897869,-6.256443,-5.234955,-0.277140,-4.758750,-9.933836,1.956174,8.188765,-1.882599,-4.627299,2.350465,-1.558443,-3.067400,8.845342,-4.005424,-7.208495,8.355408,-9.424975,4.597132,-3.237882,5.024519,-8.073571,0.305602,-5.143153,-5.908643,0.227813,-3.600908,-6.455156,5.035569,0.074798,2.819756,-4.357981,9.749388,-0.684346,7.825836,-3.838717,7.114660,7.751789,-6.727810,8.299954,-3.877412,-3.225600,-2.724136,9.744245,5.064977,4.492042,-1.909198,6.153578,-2.667856,1.991510,9.237245,-2.949842,-0.085608,8.969861,2.811588,-3.580739,-8.036008,5.013601,5.707870,-3.789456,2.215085,8.336483,2.674295,1.645843,-8.507852,0.297805,8.482332,2.217028,5.632530,-0.387061,5.052011,-0.498781,-9.488800,-4.850426,6.138693,-4.343157,-8.535361,-5.725397,-4.662790,6.516688,-5.724573,-3.138671,-1.948670,-3.530910,1.714224,-3.810157,1.884543,-1.064391,-1.919940,8.330874,0.622765,1.230085,-7.410299,-5.340010,8.364383,4.603650,-4.606305,3.774273,4.479167,9.123760,7.112390,9.454783,-7.257653,-8.070007,-9.531743,-7.260868,0.815326,3.105213,-6.282859,-0.647396,0.642068,3.371228,-2.587890,-1.573719,-4.486030,-0.828810,-1.077573,-3.816793,3.586005,2.694385,2.007316,7.320895,4.956688,-2.936248,-7.069404,-6.566676,-3.369678,-9.546859,-7.314182,5.087147,-3.574090,-9.160643,4.293534,1.749192,1.329515,9.210036,0.987654,0.438474,5.854575,-2.427873,8.445110,-1.019303,-0.708748,-1.318120,4.087251,-0.842830,9.577355,-6.422947,2.854443,9.382757,1.735341,0.499711,4.867139,3.975521,-9.727030,3.414802,-5.975899,-6.772271,-7.240617,-3.937972,-0.986115,5.824283,3.666285,-1.332604,1.364582,-1.025161,-6.519804,2.481198,-1.174896,2.607625,-3.506942,-1.999758,-1.766140,-3.818709,2.974987,-6.511324], dtype = "float64")#candidate|3049|(1404,)|const|float64
call_3048 = relay.TupleGetItem(func_1956_call(relay.reshape(const_3049.astype('float64'), [12, 9, 13])), 0)
call_3050 = relay.TupleGetItem(func_1959_call(relay.reshape(const_3049.astype('float64'), [12, 9, 13])), 0)
output = relay.Tuple([call_3036,call_3048,const_3049,])
output2 = relay.Tuple([call_3037,call_3050,const_3049,])
func_3052 = relay.Function([], output)
mod['func_3052'] = func_3052
mod = relay.transform.InferType()(mod)
output = func_3052()
func_3053 = relay.Function([], output)
mutated_mod['func_3053'] = func_3053
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3054 = relay.var("var_3054", dtype = "uint8", shape = (5, 10, 14))#candidate|3054|(5, 10, 14)|var|uint8
var_3055 = relay.var("var_3055", dtype = "uint8", shape = (5, 10, 14))#candidate|3055|(5, 10, 14)|var|uint8
bop_3056 = relay.not_equal(var_3054.astype('bool'), relay.reshape(var_3055.astype('bool'), relay.shape_of(var_3054))) # shape=(5, 10, 14)
uop_3059 = relay.rsqrt(bop_3056.astype('float64')) # shape=(5, 10, 14)
func_2464_call = mod.get_global_var('func_2464')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_3067 = func_2464_call()
call_3068 = func_2464_call()
output = relay.Tuple([uop_3059,call_3067,])
output2 = relay.Tuple([uop_3059,call_3068,])
func_3069 = relay.Function([var_3054,var_3055,], output)
mod['func_3069'] = func_3069
mod = relay.transform.InferType()(mod)
var_3070 = relay.var("var_3070", dtype = "uint8", shape = (5, 10, 14))#candidate|3070|(5, 10, 14)|var|uint8
var_3071 = relay.var("var_3071", dtype = "uint8", shape = (5, 10, 14))#candidate|3071|(5, 10, 14)|var|uint8
output = func_3069(var_3070,var_3071,)
func_3072 = relay.Function([var_3070,var_3071,], output)
mutated_mod['func_3072'] = func_3072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_3087 = func_2464_call()
call_3088 = func_2464_call()
func_2464_call = mod.get_global_var('func_2464')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_3089 = func_2464_call()
call_3090 = func_2464_call()
output = relay.Tuple([call_3087,call_3089,])
output2 = relay.Tuple([call_3088,call_3090,])
func_3094 = relay.Function([], output)
mod['func_3094'] = func_3094
mod = relay.transform.InferType()(mod)
output = func_3094()
func_3095 = relay.Function([], output)
mutated_mod['func_3095'] = func_3095
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3110 = relay.var("var_3110", dtype = "int16", shape = ())#candidate|3110|()|var|int16
const_3111 = relay.const([[[-2,-9,6,-10,-8,9,2,10],[1,-5,-6,-8,-10,3,-4,7]],[[3,-10,8,6,-8,3,2,5],[1,-8,-4,-10,-9,-10,10,-8]],[[-5,-2,8,-10,4,8,7,1],[5,5,-6,-4,9,-8,3,-4]],[[2,-1,5,-7,-5,6,10,7],[7,-5,-8,9,-2,8,3,-2]],[[-9,7,4,-4,-1,-8,8,-4],[-9,9,7,5,-7,3,-5,6]],[[9,10,7,2,-4,9,-8,-8],[-2,-2,-9,8,-10,-5,-7,-8]],[[4,10,2,1,4,10,3,-7],[-9,5,8,3,6,2,10,-8]],[[8,8,-9,7,-7,5,7,6],[-3,-3,4,-10,5,-4,1,-9]],[[-1,10,6,-3,-4,-4,10,-4],[-10,-7,-2,-7,-8,2,-4,-2]],[[-10,4,10,2,8,3,-5,-3],[6,3,7,-5,-2,8,-1,-2]],[[-3,-8,6,6,-7,1,8,9],[4,-1,4,7,6,6,6,-8]],[[-6,1,-8,5,-8,7,2,9],[10,8,10,1,-1,-3,5,-5]],[[10,3,2,3,-6,-5,8,6],[-8,3,-2,-1,-1,7,6,5]],[[7,-3,-7,9,9,-4,10,5],[8,3,2,10,-10,7,10,-3]],[[-1,-8,-3,2,10,8,-7,7],[1,-5,6,4,4,-4,-3,-3]],[[-3,3,-7,9,2,-9,-10,-4],[6,2,7,-10,7,-7,-2,7]]], dtype = "int16")#candidate|3111|(16, 2, 8)|const|int16
bop_3112 = relay.bitwise_and(var_3110.astype('int16'), const_3111.astype('int16')) # shape=(16, 2, 8)
func_2581_call = mod.get_global_var('func_2581')
func_2582_call = mutated_mod.get_global_var('func_2582')
call_3116 = relay.TupleGetItem(func_2581_call(), 0)
call_3117 = relay.TupleGetItem(func_2582_call(), 0)
output = relay.Tuple([bop_3112,call_3116,])
output2 = relay.Tuple([bop_3112,call_3117,])
func_3129 = relay.Function([var_3110,], output)
mod['func_3129'] = func_3129
mod = relay.transform.InferType()(mod)
var_3130 = relay.var("var_3130", dtype = "int16", shape = ())#candidate|3130|()|var|int16
output = func_3129(var_3130)
func_3131 = relay.Function([var_3130], output)
mutated_mod['func_3131'] = func_3131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_3233 = relay.TupleGetItem(func_2856_call(), 3)
call_3234 = relay.TupleGetItem(func_2857_call(), 3)
output = call_3233
output2 = call_3234
func_3246 = relay.Function([], output)
mod['func_3246'] = func_3246
mod = relay.transform.InferType()(mod)
mutated_mod['func_3246'] = func_3246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mutated_mod.get_global_var('func_3246')
call_3247 = func_3246_call()
output = call_3247
func_3248 = relay.Function([], output)
mutated_mod['func_3248'] = func_3248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3309 = relay.TupleGetItem(func_2636_call(), 0)
call_3310 = relay.TupleGetItem(func_2638_call(), 0)
func_2581_call = mod.get_global_var('func_2581')
func_2582_call = mutated_mod.get_global_var('func_2582')
call_3313 = relay.TupleGetItem(func_2581_call(), 0)
call_3314 = relay.TupleGetItem(func_2582_call(), 0)
output = relay.Tuple([call_3309,call_3313,])
output2 = relay.Tuple([call_3310,call_3314,])
func_3328 = relay.Function([], output)
mod['func_3328'] = func_3328
mod = relay.transform.InferType()(mod)
output = func_3328()
func_3329 = relay.Function([], output)
mutated_mod['func_3329'] = func_3329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2499_call = mod.get_global_var('func_2499')
func_2500_call = mutated_mod.get_global_var('func_2500')
call_3339 = func_2499_call()
call_3340 = func_2499_call()
output = call_3339
output2 = call_3340
func_3353 = relay.Function([], output)
mod['func_3353'] = func_3353
mod = relay.transform.InferType()(mod)
mutated_mod['func_3353'] = func_3353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mutated_mod.get_global_var('func_3353')
call_3354 = func_3353_call()
output = call_3354
func_3355 = relay.Function([], output)
mutated_mod['func_3355'] = func_3355
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3360 = relay.const([[[9.973243],[4.438991],[-8.036090],[-4.293434],[6.393432]]], dtype = "float64")#candidate|3360|(1, 5, 1)|const|float64
uop_3361 = relay.log(const_3360.astype('float64')) # shape=(1, 5, 1)
output = uop_3361
output2 = uop_3361
func_3368 = relay.Function([], output)
mod['func_3368'] = func_3368
mod = relay.transform.InferType()(mod)
mutated_mod['func_3368'] = func_3368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3368_call = mutated_mod.get_global_var('func_3368')
call_3369 = func_3368_call()
output = call_3369
func_3370 = relay.Function([], output)
mutated_mod['func_3370'] = func_3370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3368_call = mod.get_global_var('func_3368')
func_3370_call = mutated_mod.get_global_var('func_3370')
call_3390 = func_3368_call()
call_3391 = func_3368_call()
var_3399 = relay.var("var_3399", dtype = "float64", shape = (4, 5, 11))#candidate|3399|(4, 5, 11)|var|float64
bop_3400 = relay.logical_and(call_3390.astype('bool'), var_3399.astype('bool')) # shape=(4, 5, 11)
bop_3403 = relay.logical_and(call_3391.astype('bool'), var_3399.astype('bool')) # shape=(4, 5, 11)
func_1899_call = mod.get_global_var('func_1899')
func_1903_call = mutated_mod.get_global_var('func_1903')
const_3410 = relay.const([False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False], dtype = "bool")#candidate|3410|(80,)|const|bool
var_3411 = relay.var("var_3411", dtype = "float64", shape = (165,))#candidate|3411|(165,)|var|float64
call_3409 = relay.TupleGetItem(func_1899_call(relay.reshape(const_3410.astype('bool'), [4, 4, 5]), relay.reshape(const_3410.astype('bool'), [4, 4, 5]), relay.reshape(var_3411.astype('float64'), [165,]), ), 1)
call_3412 = relay.TupleGetItem(func_1903_call(relay.reshape(const_3410.astype('bool'), [4, 4, 5]), relay.reshape(const_3410.astype('bool'), [4, 4, 5]), relay.reshape(var_3411.astype('float64'), [165,]), ), 1)
var_3413 = relay.var("var_3413", dtype = "float64", shape = (10, 5, 7))#candidate|3413|(10, 5, 7)|var|float64
bop_3414 = relay.left_shift(call_3390.astype('int8'), var_3413.astype('int8')) # shape=(10, 5, 7)
bop_3417 = relay.left_shift(call_3391.astype('int8'), var_3413.astype('int8')) # shape=(10, 5, 7)
func_3032_call = mod.get_global_var('func_3032')
func_3033_call = mutated_mod.get_global_var('func_3033')
call_3422 = func_3032_call()
call_3423 = func_3032_call()
const_3428 = relay.const([[[-2.801308,4.484985,3.973768,-5.247066,-2.630031,3.210599,3.678073,3.260118,2.746255,-6.055153,2.860225],[9.743413,-0.042964,-1.150466,-7.923700,-3.525770,-7.393446,-4.412261,-7.386516,-8.178482,-4.763105,3.412788],[1.716731,4.287858,9.405982,9.512133,-8.861911,5.425439,0.842438,-2.140595,-7.397691,-3.606027,-6.700094],[-7.081901,1.819521,4.635123,0.466805,8.869162,2.440648,0.044143,-1.176107,8.811176,3.798464,9.979397],[-4.941191,-0.136105,-1.137234,3.766979,-9.011661,-3.102014,-3.408018,9.679821,-6.680752,-4.056708,-5.382192]],[[-6.110014,8.784758,1.947295,-9.899382,1.621311,-3.156497,7.079794,-4.421978,4.758047,8.343571,-4.808487],[7.972523,9.694872,-6.137404,8.745229,4.819661,0.417410,7.239255,-8.546801,4.670147,-4.689355,6.586670],[-4.784651,1.718616,-3.407002,6.211600,-1.365468,1.769847,-6.408355,-2.649959,-5.395542,7.461949,-1.548272],[-4.276693,7.624663,-3.328830,3.935867,7.959055,4.725674,1.549525,3.649561,-5.240938,5.706065,5.985575],[5.810874,1.369485,-7.258077,3.459602,9.132025,6.401090,1.979351,-4.082727,0.376996,-4.909540,-4.131481]],[[2.963810,5.642486,-4.537939,4.624029,-2.396176,8.802194,-8.540555,7.297671,-5.133984,0.534438,3.271375],[9.217856,0.777151,3.668010,1.589626,3.501301,-6.502612,-8.055512,2.319771,-9.732255,-7.498948,6.561420],[6.960288,-3.524003,3.507641,4.605656,-0.155731,-6.574832,-4.717694,5.034115,-7.044330,-8.049244,9.266374],[1.420860,-0.724988,0.096024,3.965126,1.713963,0.637415,-7.953709,4.282788,7.666113,-6.316192,7.437112],[9.600478,-1.879668,9.736922,-7.684218,9.021880,4.676617,-1.415484,-2.477367,7.059584,-0.166720,2.163445]],[[9.811765,8.227127,-4.557985,-4.762225,-9.677767,-4.474190,2.706536,7.495658,4.472790,7.154224,-6.095949],[6.313065,4.326382,-1.597194,5.341015,-2.977802,-6.980585,1.048290,3.675191,-6.400302,6.747495,-0.185279],[-7.316545,4.308523,-5.341194,-1.337348,-9.873380,2.979567,-1.469155,3.044431,7.830803,-8.865299,1.553657],[-4.842068,4.423041,-7.658682,-0.956734,-8.265915,-5.044728,-1.476623,-7.536972,0.820950,-8.594864,2.981495],[-4.089300,-3.969261,-1.874905,6.942320,-2.190128,0.798086,-4.368159,-1.350743,-9.016138,8.693462,-0.709601]]], dtype = "float64")#candidate|3428|(4, 5, 11)|const|float64
bop_3429 = relay.bitwise_and(var_3399.astype('int16'), relay.reshape(const_3428.astype('int16'), relay.shape_of(var_3399))) # shape=(4, 5, 11)
func_3069_call = mod.get_global_var('func_3069')
func_3072_call = mutated_mod.get_global_var('func_3072')
var_3442 = relay.var("var_3442", dtype = "uint8", shape = (700, 1))#candidate|3442|(700, 1)|var|uint8
call_3441 = relay.TupleGetItem(func_3069_call(relay.reshape(var_3442.astype('uint8'), [5, 10, 14]), relay.reshape(var_3442.astype('uint8'), [5, 10, 14]), ), 1)
call_3443 = relay.TupleGetItem(func_3072_call(relay.reshape(var_3442.astype('uint8'), [5, 10, 14]), relay.reshape(var_3442.astype('uint8'), [5, 10, 14]), ), 1)
output = relay.Tuple([bop_3400,call_3409,const_3410,var_3411,bop_3414,call_3422,bop_3429,call_3441,var_3442,])
output2 = relay.Tuple([bop_3403,call_3412,const_3410,var_3411,bop_3417,call_3423,bop_3429,call_3443,var_3442,])
func_3450 = relay.Function([var_3399,var_3411,var_3413,var_3442,], output)
mod['func_3450'] = func_3450
mod = relay.transform.InferType()(mod)
mutated_mod['func_3450'] = func_3450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mutated_mod.get_global_var('func_3450')
var_3452 = relay.var("var_3452", dtype = "float64", shape = (4, 5, 11))#candidate|3452|(4, 5, 11)|var|float64
var_3453 = relay.var("var_3453", dtype = "float64", shape = (165,))#candidate|3453|(165,)|var|float64
var_3454 = relay.var("var_3454", dtype = "float64", shape = (10, 5, 7))#candidate|3454|(10, 5, 7)|var|float64
var_3455 = relay.var("var_3455", dtype = "uint8", shape = (700, 1))#candidate|3455|(700, 1)|var|uint8
call_3451 = func_3450_call(var_3452,var_3453,var_3454,var_3455,)
output = call_3451
func_3456 = relay.Function([var_3452,var_3453,var_3454,var_3455,], output)
mutated_mod['func_3456'] = func_3456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3032_call = mod.get_global_var('func_3032')
func_3033_call = mutated_mod.get_global_var('func_3033')
call_3467 = func_3032_call()
call_3468 = func_3032_call()
var_3469 = relay.var("var_3469", dtype = "bool", shape = (2, 6, 10))#candidate|3469|(2, 6, 10)|var|bool
bop_3470 = relay.bitwise_or(call_3467.astype('int64'), relay.reshape(var_3469.astype('int64'), relay.shape_of(call_3467))) # shape=(2, 6, 10)
bop_3473 = relay.bitwise_or(call_3468.astype('int64'), relay.reshape(var_3469.astype('int64'), relay.shape_of(call_3468))) # shape=(2, 6, 10)
uop_3477 = relay.atanh(bop_3470.astype('float32')) # shape=(2, 6, 10)
uop_3479 = relay.atanh(bop_3473.astype('float32')) # shape=(2, 6, 10)
const_3481 = relay.const([[[2.597470,-3.715124,-8.148299,-6.058918,7.556246,-8.963018,7.970614,7.286394,-0.262574,4.439703],[1.971432,7.626409,-6.913005,0.868818,-5.304598,2.028132,-1.117966,0.519504,-5.671615,7.401976],[7.959806,-8.040706,-6.376775,7.667723,4.884535,0.317286,5.603860,7.138694,9.341742,4.926934],[7.075403,-0.983227,-7.998984,1.704090,9.772315,-5.635908,-1.120048,-8.294797,-4.949511,6.740134],[-8.820294,-2.201851,7.229001,-6.539059,-7.538076,-6.183361,-0.991097,-5.144903,-1.809359,7.712484],[-4.045562,-3.982186,-8.427992,-9.499076,4.110833,-1.886780,-6.168734,9.776746,3.431499,5.101079]],[[9.553266,0.883886,-1.923400,-7.008415,3.953120,-1.761093,-4.430010,-7.129820,9.664416,8.651770],[-7.624641,7.939600,9.441055,-8.977679,-2.413665,-4.008774,5.195060,6.955358,0.177892,0.841398],[4.385075,9.373984,-0.067343,-8.236520,-4.450857,-0.719127,-9.381599,9.218469,-6.005140,-9.424761],[4.193563,-3.846374,-4.766162,-4.577558,-8.738589,1.762874,-6.860282,4.163343,-8.158649,-4.486548],[0.873648,-9.230849,-8.528887,3.643604,2.616899,7.477891,2.698615,-2.510632,3.991161,1.877518],[-6.137170,9.206012,2.426856,2.646073,0.356463,-6.255835,7.266380,-9.757797,3.445304,-9.482995]]], dtype = "float32")#candidate|3481|(2, 6, 10)|const|float32
bop_3482 = relay.divide(uop_3477.astype('float32'), relay.reshape(const_3481.astype('float32'), relay.shape_of(uop_3477))) # shape=(2, 6, 10)
bop_3485 = relay.divide(uop_3479.astype('float32'), relay.reshape(const_3481.astype('float32'), relay.shape_of(uop_3479))) # shape=(2, 6, 10)
bop_3493 = relay.floor_divide(var_3469.astype('float32'), relay.reshape(call_3467.astype('float32'), relay.shape_of(var_3469))) # shape=(2, 6, 10)
bop_3496 = relay.floor_divide(var_3469.astype('float32'), relay.reshape(call_3468.astype('float32'), relay.shape_of(var_3469))) # shape=(2, 6, 10)
func_51_call = mod.get_global_var('func_51')
func_55_call = mutated_mod.get_global_var('func_55')
var_3502 = relay.var("var_3502", dtype = "int64", shape = (1, 200))#candidate|3502|(1, 200)|var|int64
call_3501 = func_51_call(relay.reshape(var_3502.astype('int64'), [2, 10, 10]), relay.reshape(var_3502.astype('int64'), [2, 10, 10]), )
call_3503 = func_51_call(relay.reshape(var_3502.astype('int64'), [2, 10, 10]), relay.reshape(var_3502.astype('int64'), [2, 10, 10]), )
func_2342_call = mod.get_global_var('func_2342')
func_2345_call = mutated_mod.get_global_var('func_2345')
const_3515 = relay.const([6.787347,-0.591567,7.151092,-4.470894,5.981745,-0.571036,9.906532,9.523001,1.761573,1.596089,2.297635,-0.229659,6.421650,-8.345967,4.308735,8.979047,-2.272019,7.472437,-3.126987,-6.808564,-3.552214,3.897424,0.664914,3.988479,-0.586276,-4.613896,5.964476,-3.277459,6.633062,2.406609,5.099311,6.470583,-9.283108,2.875888,-8.531278,5.750294,-0.613968,-5.382552,0.160704,-2.497002,9.116657,2.620585,7.785664,7.978631,-4.396974,8.235613,-5.568100,-1.122482,2.876208,0.372786,6.598101,-6.573139,2.405193,0.956844,-6.298489,-1.739807,8.553464,-6.866828,2.704230,8.793937,9.694560,6.081986,6.830719,-5.614500,0.660111,7.119906,-1.194533,-6.260392,-7.750437,-1.568671,8.795808,-1.288300,-3.023555,9.462696,1.837919,-8.330315,0.552480,-4.122843,8.767724,3.161798,-4.801359,3.487906,-6.128894,9.987335,8.770431,-4.661085,-2.862278,8.837009,6.278952,2.454670,0.042824,9.718051,9.992173,-9.694310,6.751824,-6.122501,-4.348010,-7.179488,8.008954,2.282515,-8.409684,-0.097878,6.841429,8.225655,-3.778855,8.534322,-3.200161,3.769306,-2.851650,-6.769909,6.003600,1.043418,-2.706997,1.186433,0.546896,9.372717,-0.192962,2.538521,3.107937,-4.536802,0.802455,-1.206941,8.725459,2.223129,8.616828,9.875905,-0.560040,-2.572778,-7.779312,3.202244,-6.666831,7.902240,-9.356692,-5.713694,-7.456693,2.477674,-0.569348,4.451474,0.483199,9.853820,8.612165,-9.344518,-7.928317,-3.655540,-7.638353,-8.992963,-9.556347,8.432045,-0.334126,6.359894,-0.322079,-2.960861,-0.721971,-9.626391,5.087222,-2.091477,-5.087430,-8.863367,6.407759,-2.004246,-0.574656,-4.223865,-3.697562,5.237002,-5.311351,7.120827,-2.327896,7.800227,-5.405396,-3.768009,-2.901379,-3.433352,2.096009,0.266874,4.703413,-4.156194,-2.261460,4.237411,-3.504129,-4.125647,1.278010,-2.517344,7.485275,-3.040845,0.723054,6.841507,1.949328,5.124944,8.064862,2.082565,-6.532430,-5.835994,-9.845865,4.427002,9.338254,6.357987,-1.180906,-7.280195,-8.060334,4.203461,5.778707,8.056260,-6.961604,-8.941326,5.321350,-6.986275,9.931434,-6.022009,-2.212101,3.822598,9.504813,-1.188799,-5.508050,-8.097669,3.736517,-7.914340,-4.476354,0.806502,-7.173658,-7.785046,5.504522,4.966427,-0.586244,9.135427,-6.065383,-3.240564,2.427922,0.584067,6.378872,-9.070868,0.892480,7.516548,-4.833445,-9.425566,-8.927972,-9.534228,8.386215,2.592435,-1.390742,7.216662,4.719617,-3.978555,-2.754380,-4.399010,2.934438,8.324015,5.438614,2.262507,2.321943,5.936916,-8.401467,-2.899952,5.236934,8.015713,-7.628681,-0.509762,-2.185304,-7.073001,-7.826678,-3.752742,-0.809542,-4.134300,9.851193,1.573809,0.665398,-6.410765,3.611520,-8.281461,-4.707822,-6.240201,-9.557593,-9.742567,1.887494,1.093104,2.481175,-1.236703,1.451450,-8.633238,-2.060302,-5.389092,-2.321387,3.942708,6.433435,-7.091821,-2.041217,-0.907470,-4.822813,8.659267,2.360751,1.984156,7.851208,-2.379838,7.264423,7.238287,6.729750,6.767875,-2.059675,3.818909,-0.570661,-3.967680,-4.926092,3.259264,2.344011,-6.111292,-3.424598,-8.102466,3.192204,-4.203975,2.192331,-9.029999,6.890935,-6.377789,0.444505,1.097302,0.372186,-0.233104,-8.037561,-3.508436,-8.590032,6.692504,9.320341,-2.856907,-4.323321,7.160245,-8.448607,-6.533768,5.502315,-8.455896,-3.820980,9.597726,8.319304,5.495565,9.001731,8.236424,6.691868,-0.937812,-8.827768,5.939833,-5.895142,-5.027591,5.186745,-5.107873,9.388418,5.244575,1.707341,-0.524009,-9.898931,-8.884318,8.616589,3.290728,-1.416009,2.052285,9.742518,-1.242244,4.916373,-9.583706,2.918457,-7.624591,2.317924,9.818417,-4.942531,7.699320,0.498179,-9.765822,-4.155555,6.832602,-4.673400,6.524254,-8.921377,8.533741,9.591058,-8.158569,-0.400062,3.476550,-5.664264,-0.617910,-0.956953,9.831628,-5.969740,0.626919,4.037004,3.347704,3.895112,8.732580,-5.764117,-9.791108,2.579683,1.212928,8.311525,3.245961,3.776298,-9.857641,-9.800350,5.175398,9.781392,0.314453,-2.239156,-4.924441,4.902970,3.681806,-3.339806,4.401263,-2.415467,-8.064418,-5.690189,7.237945,2.264572,7.664022,1.638750,-0.791218,8.202996,7.966417,7.617963,-2.110322,-7.497967,-8.183721,9.508329,-5.876081,-5.454485,3.055639,-9.425268,-8.230577,-7.187496,7.735364,9.202447,-0.984635,7.335639,-3.578345,-8.450777,-0.188777,-5.575328,0.257514,-6.606041,8.447142,-8.447518,0.974412,0.370547,2.732264,-8.939587,1.669941,-0.490623,-2.410626,1.356107,-0.676057,9.087457,-5.923267,-1.695816,0.754913,9.164010,5.207604,9.216377,8.305336,9.542128,-3.355544,3.045299,8.039281,-3.217717,-5.080646,-0.932009,4.145775,4.276032,9.150488,6.002320,-2.301511,4.777604,1.211369,0.526863,5.534136,0.012160,-9.081557,3.224356,-9.912935,8.364542,0.602798,-6.987226,-2.489277,3.315737,0.607442,-2.531898,5.960215,6.806961,2.321794,5.254420,3.225321,-2.686700,-8.290314,8.684216,6.620600,6.712093,-5.601747,4.463177,5.295449,-5.026051,-5.872843,-6.124854,-9.042519,-7.693490,-6.018814,-9.694488,-6.475124,4.725738,-9.533380,6.394493,-6.894659,1.556116,-5.934872,5.497392,4.087912,-9.463883,-2.950951,5.221608,1.026802,-0.776631,-3.518836,9.910334,-6.633190,9.993447,-8.263681,-1.924087,9.272380,0.103748,7.979285,2.672883,4.612297,-2.564819,-0.467008,-9.024048,5.702035,-8.451564,-8.227276,-2.718219,-4.264843,5.944119,-4.837113,4.019056,0.155253,-4.804566,8.816166,9.186275,8.583547,2.477922,-7.080996,5.720271,-3.677574,7.603035,-4.770981,1.044853,5.591155,5.571175,3.591825,3.783237,3.439633,6.300550,2.366653,4.242773,-0.881763,-1.610236,2.291045,-2.051933,2.435706,-7.932889,6.585330,7.790983,-6.437643,-8.093097,6.304026,5.673499,6.449996,-6.692307,9.612551,-9.879969,-9.328699,-3.959977,-7.761768,3.056500,-5.541732,3.817463,-6.078020,-1.541306,3.904189,-3.933725,-5.476756,-6.672647,-0.124470,-9.504582,-9.659124,0.397261,-5.499460,-4.120218,-8.192189,-2.315696,9.232446,-6.694873,-0.969775,8.305325,2.244385,6.225650,0.166602,-8.320440,-6.438273,1.883355,3.702780,8.348194,7.475633,-6.874410,0.817729,-1.661136,2.046175,-2.152330,-7.601510,9.683592,0.616930,7.323993,-3.260205,-2.732972,9.118757,-7.549153,-6.829662,-1.427423,8.089934,1.005976,5.565830,-8.231403,-2.172252,5.814548,-1.252590,8.302454,3.624524,-5.690976,-7.519815,-4.871889,-3.083545,-9.391847,-0.934448,-2.297451,8.754452,-3.960758,-7.917290,0.379266,-4.200734,4.872110,-2.157958,-9.551035,2.302274,7.438173,-0.881941,0.629734,-9.984189,8.309117,-8.359924,7.604315,-2.207228,4.427391,-1.526259,7.712388,2.846027,7.766340,9.194139,6.535190,-4.720607,-9.136442,-0.832726,0.976667,9.020478,2.049466,0.254500,-7.696415,-4.202381,-5.144125,-7.408430,7.233515,-7.311252,9.864276,3.048062,-8.672844], dtype = "float64")#candidate|3515|(675,)|const|float64
call_3514 = relay.TupleGetItem(func_2342_call(relay.reshape(const_3515.astype('float64'), [15, 5, 9])), 0)
call_3516 = relay.TupleGetItem(func_2345_call(relay.reshape(const_3515.astype('float64'), [15, 5, 9])), 0)
uop_3522 = relay.asin(uop_3477.astype('float32')) # shape=(2, 6, 10)
uop_3524 = relay.asin(uop_3479.astype('float32')) # shape=(2, 6, 10)
func_437_call = mod.get_global_var('func_437')
func_441_call = mutated_mod.get_global_var('func_441')
var_3549 = relay.var("var_3549", dtype = "int64", shape = ())#candidate|3549|()|var|int64
var_3550 = relay.var("var_3550", dtype = "int64", shape = (280,))#candidate|3550|(280,)|var|int64
call_3548 = relay.TupleGetItem(func_437_call(relay.reshape(var_3549.astype('int64'), []), relay.reshape(var_3550.astype('int64'), [14, 4, 5]), ), 1)
call_3551 = relay.TupleGetItem(func_441_call(relay.reshape(var_3549.astype('int64'), []), relay.reshape(var_3550.astype('int64'), [14, 4, 5]), ), 1)
output = relay.Tuple([bop_3482,bop_3493,call_3501,var_3502,call_3514,const_3515,uop_3522,call_3548,var_3549,var_3550,])
output2 = relay.Tuple([bop_3485,bop_3496,call_3503,var_3502,call_3516,const_3515,uop_3524,call_3551,var_3549,var_3550,])
func_3553 = relay.Function([var_3469,var_3502,var_3549,var_3550,], output)
mod['func_3553'] = func_3553
mod = relay.transform.InferType()(mod)
var_3554 = relay.var("var_3554", dtype = "bool", shape = (2, 6, 10))#candidate|3554|(2, 6, 10)|var|bool
var_3555 = relay.var("var_3555", dtype = "int64", shape = (1, 200))#candidate|3555|(1, 200)|var|int64
var_3556 = relay.var("var_3556", dtype = "int64", shape = ())#candidate|3556|()|var|int64
var_3557 = relay.var("var_3557", dtype = "int64", shape = (280,))#candidate|3557|(280,)|var|int64
output = func_3553(var_3554,var_3555,var_3556,var_3557,)
func_3558 = relay.Function([var_3554,var_3555,var_3556,var_3557,], output)
mutated_mod['func_3558'] = func_3558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_3613 = relay.TupleGetItem(func_2636_call(), 0)
call_3614 = relay.TupleGetItem(func_2638_call(), 0)
func_3353_call = mod.get_global_var('func_3353')
func_3355_call = mutated_mod.get_global_var('func_3355')
call_3618 = func_3353_call()
call_3619 = func_3353_call()
func_2581_call = mod.get_global_var('func_2581')
func_2582_call = mutated_mod.get_global_var('func_2582')
call_3661 = relay.TupleGetItem(func_2581_call(), 0)
call_3662 = relay.TupleGetItem(func_2582_call(), 0)
func_1545_call = mod.get_global_var('func_1545')
func_1550_call = mutated_mod.get_global_var('func_1550')
const_3670 = relay.const([-7.803831,5.956097,-3.315190,-1.431404,-1.907079,-5.144998,0.250720,-8.748110,-6.257606], dtype = "float64")#candidate|3670|(9,)|const|float64
var_3671 = relay.var("var_3671", dtype = "int64", shape = (280,))#candidate|3671|(280,)|var|int64
const_3672 = relay.const([-2.495806,4.015487,-3.280010,1.039232,-9.938278,4.379626,6.334027,3.327134,4.071394,6.922022,-2.821535,6.800652,7.862491,-7.461904,2.835268,8.873184,7.503529,-3.940993,-2.993104,9.005754,4.876454,-7.623626,-0.841009,-7.936116,-3.404754,-0.319068,6.267418,4.305471,5.161603,7.169054,2.464545,-9.453779,2.391433,1.048567,-4.686837,7.280515,4.995445,-8.166870,0.522646,-6.331826,8.016482,8.049399,-9.177896,7.625575,-5.806707], dtype = "float64")#candidate|3672|(45,)|const|float64
call_3669 = relay.TupleGetItem(func_1545_call(relay.reshape(const_3670.astype('float64'), [1, 3, 3]), relay.reshape(var_3671.astype('int64'), [280,]), relay.reshape(const_3672.astype('float64'), [5, 3, 3]), ), 0)
call_3673 = relay.TupleGetItem(func_1550_call(relay.reshape(const_3670.astype('float64'), [1, 3, 3]), relay.reshape(var_3671.astype('int64'), [280,]), relay.reshape(const_3672.astype('float64'), [5, 3, 3]), ), 0)
output = relay.Tuple([call_3613,call_3618,call_3661,call_3669,const_3670,var_3671,const_3672,])
output2 = relay.Tuple([call_3614,call_3619,call_3662,call_3673,const_3670,var_3671,const_3672,])
func_3676 = relay.Function([var_3671,], output)
mod['func_3676'] = func_3676
mod = relay.transform.InferType()(mod)
var_3677 = relay.var("var_3677", dtype = "int64", shape = (280,))#candidate|3677|(280,)|var|int64
output = func_3676(var_3677)
func_3678 = relay.Function([var_3677], output)
mutated_mod['func_3678'] = func_3678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2445_call = mod.get_global_var('func_2445')
func_2446_call = mutated_mod.get_global_var('func_2446')
call_3778 = func_2445_call()
call_3779 = func_2445_call()
output = relay.Tuple([call_3778,])
output2 = relay.Tuple([call_3779,])
func_3780 = relay.Function([], output)
mod['func_3780'] = func_3780
mod = relay.transform.InferType()(mod)
mutated_mod['func_3780'] = func_3780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3780_call = mutated_mod.get_global_var('func_3780')
call_3781 = func_3780_call()
output = call_3781
func_3782 = relay.Function([], output)
mutated_mod['func_3782'] = func_3782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3032_call = mod.get_global_var('func_3032')
func_3033_call = mutated_mod.get_global_var('func_3033')
call_3792 = func_3032_call()
call_3793 = func_3032_call()
uop_3808 = relay.log(call_3792.astype('float64')) # shape=(2, 6, 10)
uop_3810 = relay.log(call_3793.astype('float64')) # shape=(2, 6, 10)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3811 = relay.TupleGetItem(func_2981_call(), 0)
call_3812 = relay.TupleGetItem(func_2982_call(), 0)
func_3328_call = mod.get_global_var('func_3328')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_3823 = relay.TupleGetItem(func_3328_call(), 1)
call_3824 = relay.TupleGetItem(func_3329_call(), 1)
output = relay.Tuple([uop_3808,call_3811,call_3823,])
output2 = relay.Tuple([uop_3810,call_3812,call_3824,])
func_3825 = relay.Function([], output)
mod['func_3825'] = func_3825
mod = relay.transform.InferType()(mod)
mutated_mod['func_3825'] = func_3825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3825_call = mutated_mod.get_global_var('func_3825')
call_3826 = func_3825_call()
output = call_3826
func_3827 = relay.Function([], output)
mutated_mod['func_3827'] = func_3827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3825_call = mod.get_global_var('func_3825')
func_3827_call = mutated_mod.get_global_var('func_3827')
call_3949 = relay.TupleGetItem(func_3825_call(), 1)
call_3950 = relay.TupleGetItem(func_3827_call(), 1)
func_1545_call = mod.get_global_var('func_1545')
func_1550_call = mutated_mod.get_global_var('func_1550')
const_3954 = relay.const([8.433324,5.666597,-8.980429,4.452792,-0.821837,-1.627926,-4.845803,9.503400,3.942837], dtype = "float64")#candidate|3954|(9,)|const|float64
const_3955 = relay.const([2,3,-9,8,10,-7,1,1,10,-9,1,-3,7,5,7,3,6,-5,6,7,9,-7,9,4,3,6,5,2,9,3,-1,-7,-4,-4,-8,-4,-6,-7,8,-6,-9,7,-4,-6,-8,8,9,6,10,2,2,6,7,-5,-9,8,-3,-1,-5,9,8,-3,-7,-8,9,-6,6,-1,7,9,-4,3,-3,-4,1,-2,-5,8,3,10,8,5,9,-8,-1,-4,4,-4,-2,-3,-4,-6,9,-2,9,-6,-7,2,8,-4,-7,-6,6,5,-10,2,5,-4,1,-9,-9,9,6,4,1,5,-4,6,2,-9,4,-6,-1,-3,8,5,5,-3,-5,-4,-5,-2,-9,1,2,6,5,-4,4,-9,9,10,-7,-6,-2,-7,-1,-7,9,-4,2,-8,-1,3,10,-10,5,-5,-4,5,3,-4,2,7,-1,-4,-10,-8,-5,-8,3,3,7,4,-9,7,2,-6,-5,8,3,-9,-6,-6,9,3,-4,-4,4,-2,7,-3,-3,5,-2,-3,7,-10,10,4,-1,-3,-3,4,5,10,-7,10,4,7,-8,-10,4,-8,5,-6,-8,1,-6,-1,-3,4,4,10,-9,3,-9,2,1,10,9,4,6,1,10,-4,2,5,-2,-5,3,-6,-9,8,8,7,5,-7,7,-5,-9,-2,-7,-9,3,9,2,-8,6,2,-5,1,10,-1,5,4,4,-7,4,-1,-1,-2,-6,5,-8,5,-8,3,4,7], dtype = "int64")#candidate|3955|(280,)|const|int64
const_3956 = relay.const([4.196409,2.667567,-3.893387,6.877298,-2.558974,8.290345,8.643909,4.899869,-8.111162,-3.576523,-5.798518,8.717147,8.267642,7.697930,-5.829626,-3.131520,3.900321,-2.868957,1.792343,8.726184,-2.232693,-5.556179,-6.901961,-8.674688,3.328207,-8.105395,5.919567,0.089932,-8.687243,3.124125,-4.937057,-0.652284,6.280580,2.114594,8.899250,6.456296,2.825004,6.629725,1.445102,-5.732294,-9.227263,-4.486747,-2.047868,9.075654,-5.525824], dtype = "float64")#candidate|3956|(45,)|const|float64
call_3953 = relay.TupleGetItem(func_1545_call(relay.reshape(const_3954.astype('float64'), [1, 3, 3]), relay.reshape(const_3955.astype('int64'), [280,]), relay.reshape(const_3956.astype('float64'), [5, 3, 3]), ), 0)
call_3957 = relay.TupleGetItem(func_1550_call(relay.reshape(const_3954.astype('float64'), [1, 3, 3]), relay.reshape(const_3955.astype('int64'), [280,]), relay.reshape(const_3956.astype('float64'), [5, 3, 3]), ), 0)
output = relay.Tuple([call_3949,call_3953,const_3954,const_3955,const_3956,])
output2 = relay.Tuple([call_3950,call_3957,const_3954,const_3955,const_3956,])
func_3966 = relay.Function([], output)
mod['func_3966'] = func_3966
mod = relay.transform.InferType()(mod)
output = func_3966()
func_3967 = relay.Function([], output)
mutated_mod['func_3967'] = func_3967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3982 = relay.var("var_3982", dtype = "float64", shape = (4, 16, 8))#candidate|3982|(4, 16, 8)|var|float64
var_3983 = relay.var("var_3983", dtype = "float64", shape = (4, 16, 8))#candidate|3983|(4, 16, 8)|var|float64
bop_3984 = relay.equal(var_3982.astype('bool'), relay.reshape(var_3983.astype('bool'), relay.shape_of(var_3982))) # shape=(4, 16, 8)
output = bop_3984
output2 = bop_3984
func_3994 = relay.Function([var_3982,var_3983,], output)
mod['func_3994'] = func_3994
mod = relay.transform.InferType()(mod)
var_3995 = relay.var("var_3995", dtype = "float64", shape = (4, 16, 8))#candidate|3995|(4, 16, 8)|var|float64
var_3996 = relay.var("var_3996", dtype = "float64", shape = (4, 16, 8))#candidate|3996|(4, 16, 8)|var|float64
output = func_3994(var_3995,var_3996,)
func_3997 = relay.Function([var_3995,var_3996,], output)
mutated_mod['func_3997'] = func_3997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2499_call = mod.get_global_var('func_2499')
func_2500_call = mutated_mod.get_global_var('func_2500')
call_3999 = func_2499_call()
call_4000 = func_2499_call()
output = relay.Tuple([call_3999,])
output2 = relay.Tuple([call_4000,])
func_4004 = relay.Function([], output)
mod['func_4004'] = func_4004
mod = relay.transform.InferType()(mod)
mutated_mod['func_4004'] = func_4004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4004_call = mutated_mod.get_global_var('func_4004')
call_4005 = func_4004_call()
output = call_4005
func_4006 = relay.Function([], output)
mutated_mod['func_4006'] = func_4006
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4025 = relay.var("var_4025", dtype = "float32", shape = ())#candidate|4025|()|var|float32
var_4026 = relay.var("var_4026", dtype = "float32", shape = (3, 11, 10))#candidate|4026|(3, 11, 10)|var|float32
bop_4027 = relay.power(var_4025.astype('float32'), var_4026.astype('float32')) # shape=(3, 11, 10)
output = relay.Tuple([bop_4027,])
output2 = relay.Tuple([bop_4027,])
func_4034 = relay.Function([var_4025,var_4026,], output)
mod['func_4034'] = func_4034
mod = relay.transform.InferType()(mod)
var_4035 = relay.var("var_4035", dtype = "float32", shape = ())#candidate|4035|()|var|float32
var_4036 = relay.var("var_4036", dtype = "float32", shape = (3, 11, 10))#candidate|4036|(3, 11, 10)|var|float32
output = func_4034(var_4035,var_4036,)
func_4037 = relay.Function([var_4035,var_4036,], output)
mutated_mod['func_4037'] = func_4037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3353_call = mod.get_global_var('func_3353')
func_3355_call = mutated_mod.get_global_var('func_3355')
call_4059 = func_3353_call()
call_4060 = func_3353_call()
output = call_4059
output2 = call_4060
func_4069 = relay.Function([], output)
mod['func_4069'] = func_4069
mod = relay.transform.InferType()(mod)
output = func_4069()
func_4070 = relay.Function([], output)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4093 = relay.var("var_4093", dtype = "float64", shape = (12, 9, 9))#candidate|4093|(12, 9, 9)|var|float64
const_4094 = relay.const([[[9.280203,8.819557,9.663639,3.657876,-6.961292,2.969243,2.876381,3.909639,3.167037],[-4.637294,1.295443,2.866100,-7.543514,-4.995954,-6.194114,6.266741,-4.050389,-7.249827],[8.667984,-9.974158,0.743676,-3.916554,1.263162,-7.931494,-2.419840,-9.073139,3.542095],[-4.825641,-5.060643,-0.866658,6.410644,-5.741210,-0.578744,7.838834,-9.331641,1.475987],[8.459024,-1.834752,2.772178,1.514919,2.601034,1.404387,9.860719,-1.069107,9.989947],[6.885553,7.317037,-5.054281,-9.588113,0.814492,-2.805206,-5.298098,-8.098443,-5.139643],[6.377909,-4.079920,4.430820,-5.721190,8.140481,-8.744136,8.281409,8.474005,-8.253269],[-9.502765,0.263294,1.175850,-5.910839,9.800155,4.949855,7.492895,3.165537,6.534660],[9.060148,-1.832125,9.628159,7.682004,-8.031912,0.268256,3.520662,6.986808,2.577617]],[[-9.882905,3.884364,5.117169,6.670570,8.181841,-7.836665,0.014431,-4.034153,-9.323808],[-3.645917,-7.678703,0.687485,7.237502,3.260402,9.693554,-8.963438,8.738925,-2.279658],[-2.714886,6.267634,-4.049189,-6.287005,8.511426,8.550623,-8.505465,-1.127599,-7.462692],[-4.248075,-2.418483,7.748884,2.440754,1.968453,0.277844,0.204235,8.296599,3.664686],[-7.305457,8.267297,5.687384,7.214727,-0.891888,-3.486789,0.285825,1.574369,2.789661],[-2.613504,-1.913162,1.774703,5.284704,8.957223,5.813906,-7.529569,-1.773701,0.313738],[3.741891,-2.441097,-6.823476,-6.367476,0.441732,0.303643,-7.061454,9.527245,9.658680],[-7.382146,8.647478,5.683966,1.718421,-0.905557,4.553929,8.543292,0.849821,1.262578],[-1.968010,4.173467,5.710201,-7.193220,-0.410540,-0.360122,-2.735290,-2.508870,-7.754383]],[[-1.584432,-7.682855,9.642870,0.815865,-0.816433,-2.779201,-6.382688,5.926116,6.183379],[6.797459,7.998736,6.354183,6.276849,-0.393170,-4.948285,-8.886144,-2.310261,0.178853],[-4.298804,-0.709573,2.195080,-7.825197,-2.744827,-3.865546,-9.993289,0.524648,6.073543],[3.311229,9.041638,9.415746,-1.118699,-8.844818,-8.788597,7.647729,-4.143942,2.735030],[-7.937020,-4.634411,1.428562,-3.069861,-5.636839,4.503893,9.209557,-7.722641,4.175352],[-6.852129,9.232472,-3.251779,-3.539869,5.422343,-5.033381,4.860874,-8.706880,0.669417],[-7.485937,-2.840155,0.690787,-2.819855,-0.698954,4.548822,-9.476428,-1.965831,5.178395],[0.360600,-6.039771,-5.029228,8.301401,8.577309,6.867517,-0.132025,4.400820,-8.020726],[-1.024591,6.364404,-4.739858,-8.022600,-5.005155,-8.834865,-3.699232,0.308331,-5.921499]],[[2.893903,8.762347,-5.562719,3.831928,-4.063641,2.699512,8.683845,-8.331409,-3.617728],[-4.975528,0.644195,7.177567,-0.105769,-9.187864,-8.796213,3.659049,-4.391921,5.073217],[-2.027254,3.749997,6.558488,1.991639,8.239099,0.061848,-4.386474,-6.119936,-6.489791],[-0.322008,2.310002,-0.998766,6.291415,1.435651,8.881414,-6.845736,2.519610,-3.160969],[-5.306775,-9.639399,0.185196,-8.569548,5.813362,-3.566394,-5.837697,-1.942298,0.506993],[-4.448949,-8.520614,-3.570649,-0.890566,9.682477,0.364214,-6.939107,-6.838444,4.391101],[-6.008404,5.928094,-3.885119,4.620141,-3.768701,4.968675,-5.499786,2.719711,3.266919],[-6.285605,-5.651278,-1.185209,-4.597330,-9.062098,7.794157,-5.567746,1.233976,5.144334],[7.665753,-7.635639,-2.106720,8.833589,6.264027,0.029054,4.104339,-2.449791,-0.232497]],[[8.623906,9.264161,0.213935,7.627652,-2.598196,1.076540,-2.971050,-3.904831,5.175983],[-4.207102,-0.190906,7.956355,8.660162,2.276440,-8.493599,-8.639972,-9.354730,8.631322],[-6.807458,-1.487918,7.278969,-7.892316,-7.265681,4.357507,3.704694,9.059674,1.662561],[9.037132,9.733204,7.820759,-4.380695,6.652951,0.564061,-2.463521,3.129260,3.188537],[8.976571,-2.995717,-2.296112,5.904291,-3.444229,9.570347,6.556877,-4.263759,-4.039133],[-6.758436,7.049173,3.428666,4.266719,-5.222845,-7.997438,0.958706,1.452302,-9.128561],[1.536144,7.317085,-9.679645,-0.643698,2.233569,-4.703627,-5.400083,1.007715,-1.087593],[-4.260184,-3.842349,-9.336395,-2.767651,-1.598661,0.440458,-8.043559,-3.696963,-8.887562],[-9.424465,-4.013836,1.680840,0.771953,-0.952310,3.754976,-1.149488,-6.549577,-7.811972]],[[7.949829,-3.634577,-8.809061,-7.709224,4.676389,-0.840046,1.088280,-9.259440,8.950474],[-7.635786,9.906851,6.830610,0.955326,-1.580907,-1.845575,-9.610642,-4.522436,-8.211145],[8.653990,7.537286,4.796743,-0.468376,-5.087041,4.475508,7.801530,4.317703,-4.900930],[4.619253,-1.468465,7.422628,6.794734,-6.598920,-7.689578,-3.124971,-5.067051,-8.816766],[-2.772437,-5.933707,8.379533,-8.972192,-5.510569,5.220189,-5.592795,-8.121089,0.492272],[1.895780,-5.031433,-7.266169,-4.675983,-7.452757,-0.141197,4.363550,8.556908,9.816446],[7.379640,7.167670,5.547644,-1.157058,-9.101930,-3.298337,-0.286619,-0.507704,-7.313683],[3.056825,2.784233,8.186944,6.178001,-2.821582,-7.291588,2.058717,3.770414,3.243017],[-9.869599,-8.179847,6.041595,-2.200079,3.178433,-2.727683,4.761206,-3.856827,4.719839]],[[-0.491173,-4.499449,3.827381,-2.593751,-7.363742,-1.903398,8.198691,1.408669,4.536633],[-7.969283,-2.512574,-8.002133,1.502447,5.100788,-3.631866,7.002770,0.744745,-1.593162],[6.382705,2.830259,-4.448782,2.679184,-9.287091,-3.911149,0.801978,9.183629,-3.653688],[-6.543180,0.563791,9.558373,-7.035612,-4.330322,6.422845,3.117455,-4.017988,-5.274024],[-9.102487,-3.123395,8.499745,-6.920054,7.817482,-8.477276,6.198116,-6.432674,-2.303300],[-7.001120,-4.940120,-4.912494,5.564482,-0.438078,0.925224,7.920642,4.903068,-5.034833],[-8.834428,7.826078,0.738697,6.497431,3.224614,5.690024,7.936267,-4.853860,3.399909],[8.492798,-1.585739,-4.747034,0.364641,2.536793,9.029473,7.846233,-8.619309,0.676194],[-0.956362,-1.268872,-8.148858,-5.966900,-4.573469,-7.062979,7.660751,-8.796986,8.357505]],[[4.699093,-4.738675,1.830352,1.924591,0.789893,-4.552762,6.449021,0.563445,-9.647601],[9.680335,-9.391360,3.306588,1.261032,-9.131637,1.558595,-8.119775,-9.279067,0.079136],[-0.536068,-7.623364,5.088384,1.147454,-1.976242,-8.856554,-1.869646,4.134916,0.884613],[9.843537,1.086319,6.866707,-0.071324,-7.861716,-6.395288,-6.537538,-6.105765,9.570510],[5.577818,-7.967381,0.095491,-1.641407,-8.734076,-0.496342,9.142552,6.862700,-6.449960],[8.637023,-8.071011,2.383627,7.172529,-3.058693,3.424585,2.910813,-8.898218,-0.469616],[8.827412,8.264505,-2.699334,6.124529,-0.284050,-0.611558,7.174750,1.247153,1.813574],[4.056057,-5.100673,-8.683452,6.378678,5.116844,2.806207,9.648243,-2.927277,3.577083],[8.572229,-2.267955,6.578178,-6.803341,-6.321663,-3.077035,-1.852734,2.235638,3.781872]],[[-8.081370,1.014433,-3.614097,3.259707,3.971785,3.713397,-1.846761,-1.281205,-6.570210],[-7.310184,-5.160441,-4.960773,-7.201159,-0.939875,7.241190,-8.078541,-2.860079,3.995779],[-7.817215,5.109013,1.575484,-3.848694,0.145600,-2.272545,-6.195309,-6.695359,-2.372327],[-1.697178,2.037967,-0.528995,-7.702499,3.705424,-5.273301,-0.990890,7.228619,2.594415],[-2.106674,0.194448,-7.787184,5.698849,-8.294170,7.865914,-5.900934,8.124639,0.213585],[-1.027112,-5.184759,-6.168128,5.476546,-4.338665,-3.885349,3.265289,6.853549,-6.524178],[-5.536470,0.293239,6.351302,2.987646,-9.735004,-6.232186,-0.784499,0.137565,-4.114270],[-2.767630,-1.584381,-1.932358,-9.887322,8.405655,-6.102230,6.114259,4.331312,4.214187],[5.682357,-7.859895,-6.341182,1.974745,-6.631271,2.780641,4.321307,-7.234535,-2.485159]],[[-9.866536,-9.749608,3.999587,-0.651845,1.389567,4.235775,-6.462308,-4.341108,-2.216551],[7.792488,9.022326,-3.288089,-1.043293,-1.667953,-8.272174,-2.885513,7.240224,-5.416279],[3.395071,7.590751,3.530532,-9.244557,-9.591518,-4.684979,9.162236,-7.209067,0.589720],[6.842688,-8.374256,-7.170642,9.885774,-7.764586,3.725250,8.521272,5.236296,-8.161115],[2.989794,-2.894374,4.138307,-8.614339,2.888605,6.417578,4.518384,-3.568827,8.666374],[-4.714395,2.915460,2.964738,-0.332635,-1.645770,-8.446916,-0.944053,6.875834,9.523550],[3.547921,5.553139,-0.686685,-0.496039,9.506306,-8.757657,9.369639,1.201456,6.916524],[-8.737858,2.951116,9.553330,3.471251,7.500107,-1.788612,3.912194,-5.545941,-1.633992],[7.875342,6.669654,-9.301565,2.368453,-2.320409,-0.975826,-0.311152,7.138310,5.580642]],[[4.865409,-5.519763,5.011273,5.668664,4.260475,3.836730,-4.807955,-0.147115,-2.523557],[0.294851,-7.306627,-3.186417,6.258432,3.549609,4.765123,4.558229,2.225708,7.466085],[5.286039,7.461458,9.573592,-5.096015,-3.350057,7.555308,7.552463,-9.939441,-2.402208],[2.044665,9.836196,6.038430,1.536068,5.458972,-9.123934,-9.394301,5.286691,-1.628127],[-7.185111,9.572896,5.742547,0.792374,5.994852,5.551564,7.979082,-2.918995,3.401201],[1.343063,-8.847423,-2.887853,5.434768,-3.280818,-5.063691,2.284997,-4.081272,5.663597],[4.527103,-7.069496,4.879365,9.375691,-5.396091,9.209311,0.110215,5.674221,-2.387715],[-2.737985,-8.622275,-4.631028,-8.234833,3.382670,-2.483286,-2.507771,-9.674066,6.859221],[-9.970182,-5.457316,-5.374888,5.849510,-7.709804,7.789251,-6.233458,-4.128514,2.604487]],[[8.138299,7.595994,-6.785248,-4.438076,0.974615,0.154665,-9.635380,7.640594,0.553559],[-0.166794,0.164623,0.023751,9.622249,4.526560,-8.698164,3.521438,-9.777553,-2.890518],[-4.450904,8.016963,0.287843,-3.551380,7.789968,-4.006223,3.269155,2.886083,4.571817],[-2.521123,-8.898188,8.267096,-5.766865,-8.112810,8.237223,5.931419,4.747502,4.592052],[0.095064,-2.095392,-3.473738,2.597286,-7.390833,-4.696906,3.135299,-0.354963,-8.725188],[-4.091267,-4.433843,2.550635,-8.340833,-4.749331,-8.177361,-9.137682,1.010645,-7.518155],[-9.969513,-4.639745,-9.286518,-5.498279,1.470340,6.367690,-1.348923,-1.802727,-3.658151],[-5.312744,-4.247135,8.628187,0.402438,-4.791614,-5.860242,-2.906758,1.468945,1.299604],[1.557473,4.670573,7.989987,0.678988,9.498429,-4.244733,0.148079,-0.321810,3.743959]]], dtype = "float64")#candidate|4094|(12, 9, 9)|const|float64
bop_4095 = relay.divide(var_4093.astype('float64'), relay.reshape(const_4094.astype('float64'), relay.shape_of(var_4093))) # shape=(12, 9, 9)
var_4099 = relay.var("var_4099", dtype = "float64", shape = (12, 9, 9))#candidate|4099|(12, 9, 9)|var|float64
bop_4100 = relay.greater(var_4093.astype('bool'), relay.reshape(var_4099.astype('bool'), relay.shape_of(var_4093))) # shape=(12, 9, 9)
var_4106 = relay.var("var_4106", dtype = "float64", shape = (12, 9, 9))#candidate|4106|(12, 9, 9)|var|float64
bop_4107 = relay.power(const_4094.astype('float32'), relay.reshape(var_4106.astype('float32'), relay.shape_of(const_4094))) # shape=(12, 9, 9)
uop_4124 = relay.sinh(var_4093.astype('float32')) # shape=(12, 9, 9)
const_4145 = relay.const([[[-3.445951,-7.185553,6.390683,9.781260,-9.205534,8.172602,-7.092426,-5.927018,-4.956178],[-2.532690,-4.692497,-5.938566,3.154426,7.483112,-0.710804,1.431155,6.868053,-0.743998],[7.381233,4.311161,-0.911461,-2.018345,-3.847484,3.147786,-5.562937,-5.866787,-0.341772],[2.409988,-0.212111,-6.167175,3.782475,-9.271208,-7.893711,-7.896363,-2.758442,5.036796],[-7.798155,9.738325,-7.689692,2.733496,2.052279,8.914437,-2.270082,2.555554,3.823307],[-1.066672,2.317579,-8.865876,5.512013,8.716792,-9.782999,-9.612982,-4.495565,3.394626],[-5.452064,9.322617,-7.606465,0.684050,5.927114,-0.979399,-5.932274,9.640790,3.937666],[6.045790,-7.260315,-0.430926,2.134770,8.698163,-1.018361,-4.428136,-3.710145,-1.714808],[-6.912846,4.998536,-6.898800,8.906202,-4.287208,-8.678251,-5.316803,-1.568104,-3.348376]],[[8.895656,4.055055,8.321734,-4.992180,-4.607840,0.943201,6.054912,-4.442444,8.888721],[-3.543389,-1.874071,-3.776325,-0.463379,-0.132112,6.575273,2.376920,6.179260,-5.534174],[0.717847,-7.096811,6.849356,-7.169124,-4.309066,7.090529,-8.719908,-1.422606,8.824176],[2.655417,0.227078,-4.735934,0.895787,8.168830,7.018364,7.742636,-0.046217,-8.630324],[-8.429080,6.574066,-2.368546,-4.410953,-4.929794,5.659066,0.268845,-1.539342,-5.042392],[-5.037305,-5.306324,-6.994725,7.900423,-4.037483,-7.305696,6.993986,-9.733318,3.777697],[7.268818,3.579616,-4.251884,5.744167,8.304748,-0.717168,3.388332,0.025073,-9.533588],[4.734220,-5.265679,-6.593567,-2.587534,0.558175,-2.462743,1.661833,-8.834583,3.611024],[4.605709,0.189017,-4.519316,3.404934,-3.075522,-8.913840,-6.597523,-5.034700,8.212843]],[[2.320406,-9.858765,-6.278087,6.270091,-9.722032,-3.739146,-8.525901,7.380713,6.937662],[0.853716,8.211959,4.296205,5.547632,7.178286,-7.787508,-8.604080,-6.397089,-4.412223],[4.627225,5.154775,-9.953032,1.225397,2.034398,-8.741209,7.741099,5.705325,9.750981],[-0.800622,7.844438,-7.564921,-2.799237,6.800351,7.679745,-7.941230,-5.833757,-9.988450],[8.081760,6.771109,-7.069508,0.932067,-9.844323,-4.016366,-1.800949,-3.838124,-5.593400],[0.097660,5.024711,-8.012841,3.361580,5.222271,-9.175299,-8.079535,1.651035,-4.385663],[1.394111,1.184303,9.543344,9.479447,-9.261635,8.629922,-5.567419,-7.966289,6.882885],[-0.577896,7.437920,-4.620685,8.083785,0.669326,5.132714,0.886657,-9.816459,-4.833768],[-4.937181,0.631640,0.369302,-1.218330,3.533078,4.085265,5.264722,7.387202,2.747946]],[[-7.292470,-8.082753,0.938522,0.907192,-4.617866,-9.433713,6.122969,-2.351660,0.862192],[1.900179,2.548992,-0.016407,-2.909829,-4.906419,-1.985458,1.823935,3.806554,1.069650],[0.859783,9.818336,-5.220435,-5.774580,-5.173251,-8.745909,-6.929676,1.900949,-5.615187],[-0.299599,6.634686,1.172686,-3.373104,-4.714431,-6.424647,8.159887,5.318485,-5.967560],[-5.212290,3.120841,2.787183,-0.378606,-1.995432,-4.478880,-1.019712,4.610455,2.407101],[0.469235,6.054576,5.935427,0.102697,-2.249080,0.857449,-6.176568,7.926518,9.524113],[9.017646,5.758295,0.339458,1.783206,-8.731481,-6.944319,3.031361,-2.778189,4.776311],[-8.020630,-9.185394,9.805124,7.681081,8.368451,-2.797627,-6.969914,-1.555243,4.651414],[2.649690,6.244545,4.145281,0.529740,-5.732192,0.564378,-2.077900,-4.579869,-4.453788]],[[-6.261643,-2.970361,1.961967,-0.187614,-4.602362,0.135511,9.075015,-4.973838,-7.107658],[-2.873235,-4.548369,3.562726,-8.862435,-5.510482,-3.889604,4.652559,-4.905759,-5.451970],[-4.202529,7.395641,-3.383965,-2.509511,3.931922,-8.482765,-8.172602,-9.891247,8.928129],[-6.411450,8.758934,8.657987,-7.975032,-0.829417,-3.628870,-7.687752,-5.946675,0.319632],[-1.088063,-1.759083,1.540489,4.127141,8.094667,-5.708155,-0.616866,-8.877251,0.055097],[8.342328,-2.687759,9.962249,1.206829,2.794965,9.282648,-2.016562,-0.039375,-7.098953],[7.013710,9.411303,9.994833,-3.517999,4.498129,2.985586,-1.524329,-0.926586,-0.031620],[5.254936,3.447403,6.989983,1.217494,-1.996236,-7.365844,4.983717,-8.812171,-3.187017],[4.311867,6.425537,-1.626456,2.196855,-6.800769,4.841129,8.247553,-3.195287,-3.755332]],[[-3.119125,1.535367,0.283921,1.661666,3.028681,-9.069334,5.290836,-3.272045,-3.704640],[3.599420,7.757089,2.906923,-9.803347,7.551923,0.654800,9.946501,-5.371940,-0.802194],[-9.779811,-5.912465,3.972943,-8.966620,-7.073959,-4.116815,3.401612,1.354135,2.611208],[7.343890,9.981193,-9.651185,-3.661012,-2.473693,-9.215466,1.105205,-6.192646,-8.589848],[-3.761148,-8.027014,-6.529546,3.207077,-4.647433,-8.998177,9.307384,-2.686650,0.520807],[3.800250,-2.681526,-5.017340,-3.987235,0.680456,3.567761,-0.743437,-5.884956,8.933732],[9.499069,-2.288428,0.652329,6.489736,1.217033,7.073698,-4.884542,-4.639239,9.201354],[0.998377,-5.087660,-9.459851,4.228163,3.664905,-6.015316,-1.802690,9.398790,7.102852],[4.933285,8.433440,-9.030053,1.469568,6.180404,7.828396,-0.064548,-5.273687,-7.502325]],[[9.630532,-2.040431,9.319539,8.651146,-8.653708,0.791939,7.090029,0.462751,4.149071],[1.166336,-8.615944,-2.690264,9.001270,4.256816,-0.722544,6.628571,2.392072,-2.117788],[-2.075412,-9.559090,7.641761,-5.700605,-1.445287,1.580840,-1.484776,5.683299,-3.554010],[-0.639512,-5.723814,8.093529,0.299808,-2.574371,-2.434480,-4.891909,-1.654420,-7.030742],[-9.708478,-0.045075,-2.289177,-0.963957,6.497475,5.522101,9.401738,1.531428,1.671316],[-4.969566,5.489328,5.831963,-8.402876,-4.546463,-3.673534,-8.384380,-7.670434,-1.471187],[-5.054188,7.411029,-5.889356,4.640238,-4.575832,9.893098,-0.637849,9.968545,9.438161],[7.740910,-7.972525,-5.001027,-7.164907,5.460366,-8.555791,6.322173,-2.212194,-6.584248],[-9.303854,-5.706887,-5.330656,-7.991294,-2.213519,6.873520,1.537795,9.917351,-5.863609]],[[-9.008605,-8.360720,1.867115,2.734807,2.063754,6.485511,-5.605083,-7.888532,2.458567],[5.677419,1.298270,6.008939,3.766736,0.092585,-7.111227,-8.525572,2.889778,-6.002910],[9.064694,1.220795,3.193570,-7.552431,-2.602365,-4.665512,-4.930867,-4.640304,4.016185],[-5.023554,-2.381251,6.065527,3.767248,5.392251,-0.071865,-5.060935,-3.419895,9.423670],[-1.786194,8.588720,-1.915712,-6.860099,6.839366,-9.916896,-4.084853,4.362061,-1.682525],[9.522927,8.936364,-3.101181,-9.321022,0.036036,3.830798,-4.461330,3.130646,-5.905163],[-1.098441,-3.454682,6.392612,-4.725427,7.725919,-3.496094,0.303168,1.862870,6.366377],[-6.460118,-1.826715,-4.619921,-8.833038,-2.481604,-7.283108,3.372328,0.190024,7.365349],[-6.820721,1.218866,4.851752,-4.910623,5.970993,7.356168,0.087127,2.248310,-0.046322]],[[4.295358,-2.730343,-5.666837,5.288825,6.395858,0.118997,3.066922,7.114503,5.090730],[5.399681,5.560902,5.026066,9.732263,-7.664399,2.070445,-7.417103,-2.695222,-6.558665],[8.833536,-7.359915,-9.503976,1.018203,-8.207288,-6.810839,-3.861606,2.136766,4.089692],[-4.534038,9.088437,0.239331,1.695632,-7.907511,-1.754603,-7.379571,-4.503698,3.020405],[-0.588440,-1.982485,3.703110,-7.106787,-5.806213,7.508229,4.565943,-7.670888,-8.209518],[1.386149,2.341990,0.062677,-0.764296,-2.625140,9.978183,7.241248,-6.468302,-3.544191],[0.137407,9.034578,-3.348259,0.319974,0.949530,-7.472900,7.056387,7.342899,0.595560],[-1.094874,5.137128,-1.554053,-2.592129,-3.933754,-0.667394,-1.779144,-8.658247,7.346611],[-1.378444,-6.628969,0.416076,-0.340638,-3.783428,1.202680,-8.607127,5.310150,-5.848749]],[[-9.650673,2.592549,-4.923406,3.719549,8.290819,-7.384182,-3.399992,3.574867,-6.042054],[-5.406837,9.413781,5.132476,-6.661199,2.087629,0.731539,-6.800536,-1.129025,-9.867649],[8.222452,-8.047921,8.777051,4.702877,7.984807,-6.269771,9.588822,-5.477934,8.030912],[-5.102100,-7.246300,0.365263,9.169148,4.072301,-0.656418,-7.686093,-4.973386,-5.990243],[-7.269499,9.255450,8.446814,8.813776,-9.836478,3.830286,3.357859,-4.096912,3.876865],[5.274176,5.185094,7.733658,4.760705,6.420860,-0.528247,0.691503,7.509296,-0.474526],[0.272542,-6.971289,-0.072827,5.660755,7.066890,1.099114,-4.796620,3.053271,7.042337],[8.675845,3.829726,-5.156794,-3.845416,-9.378211,8.134492,-9.540194,-6.871030,-8.440126],[0.760602,0.145529,7.236842,9.353602,1.637770,1.753712,3.091795,3.288482,1.789337]],[[-2.419255,-3.981249,-0.002725,-6.910009,-9.354429,7.521832,8.954739,-8.830324,3.331876],[7.785937,3.596505,2.850493,6.201684,2.493526,5.060594,8.239888,0.948013,-9.670859],[9.182486,-9.631775,-2.292008,-2.348239,-0.637738,-4.849466,3.509939,5.557913,-6.583193],[3.128813,3.714243,3.322856,-2.964985,0.885054,-8.202261,5.944245,-4.507322,2.342769],[7.427091,-2.051894,-4.127306,7.237929,-8.183489,6.942321,8.676169,-1.861820,4.349054],[-4.242710,-5.231564,8.947224,6.096029,-9.764541,6.518590,-0.454927,-3.583957,-7.649025],[7.892578,-0.485688,-8.358259,8.572057,-8.839656,3.773623,7.946025,9.529040,6.023712],[-8.995850,4.253039,-1.031340,-5.288886,9.994509,5.286702,8.174648,0.110769,-7.181492],[4.157948,-8.236032,7.196415,-4.974348,1.782060,5.433280,-8.829859,9.920368,-0.612376]],[[-3.743539,7.810969,2.730253,-7.204383,5.099571,-5.475740,3.281802,9.574453,-6.830310],[9.337302,7.603930,-5.690688,5.394435,-5.235946,4.913516,-7.265353,4.009666,2.852367],[-2.385639,-5.742082,-1.662026,8.916933,-9.474133,6.086035,-7.864477,0.801245,9.208217],[-0.261256,1.793122,4.456609,9.003685,-8.416115,2.828704,-0.128823,3.864499,-8.449612],[7.013698,-9.168344,-1.795759,-7.002155,-7.641874,9.509427,-0.974411,4.781314,-4.935779],[-9.513428,-1.667282,9.767557,-7.399459,-9.118127,-8.293127,5.090495,-2.126944,4.222795],[1.963618,1.752972,-1.945021,5.761117,-2.732549,-6.745295,-2.000827,3.532791,1.604521],[-6.971097,-6.843844,-7.789241,0.496971,-7.766836,5.828452,6.810271,-7.319298,-6.926205],[6.009525,8.510850,-3.934488,-9.890905,-8.937637,-0.713332,-2.940667,2.230308,7.707878]]], dtype = "float64")#candidate|4145|(12, 9, 9)|const|float64
bop_4146 = relay.bitwise_and(var_4093.astype('uint32'), relay.reshape(const_4145.astype('uint32'), relay.shape_of(var_4093))) # shape=(12, 9, 9)
uop_4150 = relay.atanh(uop_4124.astype('float32')) # shape=(12, 9, 9)
func_3069_call = mod.get_global_var('func_3069')
func_3072_call = mutated_mod.get_global_var('func_3072')
const_4153 = relay.const([7,-10,-7,-2,7,9,5,-3,-7,8,-6,8,-7,5,10,-8,10,-7,-6,1,-4,9,4,-6,5,-10,-6,-7,7,-1,-3,-4,-7,-9,-2,8,-3,-5,9,10,5,4,-10,-4,-2,4,2,-10,8,1,10,-6,-8,-9,-2,10,-9,-9,-7,6,8,7,-5,-10,-6,5,-2,-6,9,7,4,-9,4,-4,10,2,-7,9,-8,6,-2,8,1,-4,1,2,-1,-2,8,7,5,8,-10,7,8,10,4,3,5,-6,1,6,8,10,-6,-3,-8,-7,8,6,5,5,7,-7,-5,1,-2,9,-6,7,8,5,1,-4,-5,-6,-6,2,-8,6,-3,-1,-5,-6,-1,-5,2,-5,-3,3,-9,8,9,1,-8,-3,3,5,-6,10,-3,8,-6,-10,4,-5,-4,10,-3,-1,5,4,-7,9,2,-5,-4,-2,-8,9,6,6,-9,3,5,-4,7,-10,1,-2,-9,-9,1,-5,-4,2,-10,-1,-5,2,-8,10,-6,-2,2,-1,-10,-3,-2,2,3,-7,2,-4,2,-7,-4,-8,9,-7,-5,-1,-9,-7,-3,6,-3,-10,2,-4,-2,7,-9,-6,6,-9,-4,-5,5,3,-1,5,-3,-2,1,-9,8,8,-8,8,-8,4,-7,4,-3,9,5,9,-1,2,9,-6,5,4,8,9,9,7,-4,-10,-5,2,-5,7,4,-9,-9,9,8,-9,-7,10,4,6,8,7,-4,-3,-2,6,-10,-2,-9,4,6,2,6,1,-1,9,2,-3,7,-5,8,6,6,8,-8,-3,-10,10,-8,5,10,1,10,-8,1,5,-7,-7,10,8,-10,4,7,5,7,-7,3,-8,-3,9,2,-3,-4,3,6,4,4,7,2,-9,1,7,-5,7,3,-1,-8,5,-5,-8,2,10,-9,-7,8,-9,3,10,-1,7,-1,-1,5,4,4,4,3,-2,-8,3,-7,4,8,-2,-1,5,9,4,9,5,-10,-1,-10,5,-4,-5,-3,-2,3,2,-3,7,-2,-6,-8,6,10,1,10,10,-6,-4,-4,-10,10,-2,-8,7,-9,-10,-5,-7,4,5,-5,6,1,-10,8,-1,-1,-3,1,10,-4,9,7,-4,-5,4,5,-3,2,1,-3,-8,5,-7,3,8,-6,-7,-4,-5,-10,-9,1,-1,-5,-2,-5,7,2,-8,-9,-2,-5,9,10,10,-5,4,3,8,8,-8,-8,4,-7,5,-9,1,8,5,6,-9,-4,-4,10,5,-9,10,-6,-9,7,10,-3,-1,-3,-10,-2,7,-3,5,2,-1,2,10,6,-2,-5,8,-3,2,5,-2,-10,5,1,-7,9,-8,9,-1,-9,-7,-3,-4,-6,-2,-8,-10,-5,-4,-6,-1,-8,7,9,4,9,2,-8,10,-5,-5,-7,3,-1,-10,7,1,10,-5,-4,-7,-2,-6,-7,4,-9,5,3,1,3,10,-3,-7,7,-2,-5,-3,-9,-7,7,6,-10,5,-9,7,6,-3,-8,-1,-4,-5,3,-6,-1,7,-4,-6,-8,-10,-5,-8,-6,-9,-3,9,-5,-8,4,-1,7,-3,-4,5,-7,-6,4,3,-9,2,5,1,6,10,-5,5,10,-3,4,-4,-5,-3,-8,-8,-9,9,2,5,1,-7,8,-6,-7,-3,-1,2,-1,4,1,6,-2,5,-5,3,-8,10,-2,4,-7,2,6,-3,-9,4,-1,-10,-5,9,7,-6,2,-1,-4,6,2,1,-2,-4,-3,10,9,9,5,4,9,7,7,6,2,3,9,-3,10,3,4,-9,3,8,5,-10,-1,-6,2,10,-3,10,-8,-5,10,2,-1,-8,-9,2,8,8,6,8,5,4,2,2], dtype = "uint8")#candidate|4153|(700,)|const|uint8
call_4152 = relay.TupleGetItem(func_3069_call(relay.reshape(const_4153.astype('uint8'), [5, 10, 14]), relay.reshape(const_4153.astype('uint8'), [5, 10, 14]), ), 0)
call_4154 = relay.TupleGetItem(func_3072_call(relay.reshape(const_4153.astype('uint8'), [5, 10, 14]), relay.reshape(const_4153.astype('uint8'), [5, 10, 14]), ), 0)
uop_4156 = relay.asin(uop_4150.astype('float32')) # shape=(12, 9, 9)
uop_4160 = relay.exp(uop_4150.astype('float64')) # shape=(12, 9, 9)
uop_4169 = relay.sin(uop_4124.astype('float64')) # shape=(12, 9, 9)
output = relay.Tuple([bop_4095,bop_4100,bop_4107,bop_4146,call_4152,const_4153,uop_4156,uop_4160,uop_4169,])
output2 = relay.Tuple([bop_4095,bop_4100,bop_4107,bop_4146,call_4154,const_4153,uop_4156,uop_4160,uop_4169,])
func_4176 = relay.Function([var_4093,var_4099,var_4106,], output)
mod['func_4176'] = func_4176
mod = relay.transform.InferType()(mod)
mutated_mod['func_4176'] = func_4176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4176_call = mutated_mod.get_global_var('func_4176')
var_4178 = relay.var("var_4178", dtype = "float64", shape = (12, 9, 9))#candidate|4178|(12, 9, 9)|var|float64
var_4179 = relay.var("var_4179", dtype = "float64", shape = (12, 9, 9))#candidate|4179|(12, 9, 9)|var|float64
var_4180 = relay.var("var_4180", dtype = "float64", shape = (12, 9, 9))#candidate|4180|(12, 9, 9)|var|float64
call_4177 = func_4176_call(var_4178,var_4179,var_4180,)
output = call_4177
func_4181 = relay.Function([var_4178,var_4179,var_4180,], output)
mutated_mod['func_4181'] = func_4181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2445_call = mod.get_global_var('func_2445')
func_2446_call = mutated_mod.get_global_var('func_2446')
call_4185 = func_2445_call()
call_4186 = func_2445_call()
output = relay.Tuple([call_4185,])
output2 = relay.Tuple([call_4186,])
func_4189 = relay.Function([], output)
mod['func_4189'] = func_4189
mod = relay.transform.InferType()(mod)
output = func_4189()
func_4190 = relay.Function([], output)
mutated_mod['func_4190'] = func_4190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_4193 = func_2652_call()
call_4194 = func_2652_call()
func_2426_call = mod.get_global_var('func_2426')
func_2428_call = mutated_mod.get_global_var('func_2428')
call_4197 = func_2426_call()
call_4198 = func_2426_call()
output = relay.Tuple([call_4193,call_4197,])
output2 = relay.Tuple([call_4194,call_4198,])
func_4208 = relay.Function([], output)
mod['func_4208'] = func_4208
mod = relay.transform.InferType()(mod)
mutated_mod['func_4208'] = func_4208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4208_call = mutated_mod.get_global_var('func_4208')
call_4209 = func_4208_call()
output = call_4209
func_4210 = relay.Function([], output)
mutated_mod['func_4210'] = func_4210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3966_call = mod.get_global_var('func_3966')
func_3967_call = mutated_mod.get_global_var('func_3967')
call_4253 = relay.TupleGetItem(func_3966_call(), 2)
call_4254 = relay.TupleGetItem(func_3967_call(), 2)
output = call_4253
output2 = call_4254
func_4267 = relay.Function([], output)
mod['func_4267'] = func_4267
mod = relay.transform.InferType()(mod)
mutated_mod['func_4267'] = func_4267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4267_call = mutated_mod.get_global_var('func_4267')
call_4268 = func_4267_call()
output = call_4268
func_4269 = relay.Function([], output)
mutated_mod['func_4269'] = func_4269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3052_call = mod.get_global_var('func_3052')
func_3053_call = mutated_mod.get_global_var('func_3053')
call_4380 = relay.TupleGetItem(func_3052_call(), 0)
call_4381 = relay.TupleGetItem(func_3053_call(), 0)
func_946_call = mod.get_global_var('func_946')
func_950_call = mutated_mod.get_global_var('func_950')
var_4392 = relay.var("var_4392", dtype = "float64", shape = (336,))#candidate|4392|(336,)|var|float64
call_4391 = relay.TupleGetItem(func_946_call(relay.reshape(var_4392.astype('float64'), [6, 4, 14]), relay.reshape(var_4392.astype('float64'), [6, 4, 14]), ), 3)
call_4393 = relay.TupleGetItem(func_950_call(relay.reshape(var_4392.astype('float64'), [6, 4, 14]), relay.reshape(var_4392.astype('float64'), [6, 4, 14]), ), 3)
output = relay.Tuple([call_4380,call_4391,var_4392,])
output2 = relay.Tuple([call_4381,call_4393,var_4392,])
func_4394 = relay.Function([var_4392,], output)
mod['func_4394'] = func_4394
mod = relay.transform.InferType()(mod)
var_4395 = relay.var("var_4395", dtype = "float64", shape = (336,))#candidate|4395|(336,)|var|float64
output = func_4394(var_4395)
func_4396 = relay.Function([var_4395], output)
mutated_mod['func_4396'] = func_4396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3032_call = mod.get_global_var('func_3032')
func_3033_call = mutated_mod.get_global_var('func_3033')
call_4416 = func_3032_call()
call_4417 = func_3032_call()
output = relay.Tuple([call_4416,])
output2 = relay.Tuple([call_4417,])
func_4418 = relay.Function([], output)
mod['func_4418'] = func_4418
mod = relay.transform.InferType()(mod)
mutated_mod['func_4418'] = func_4418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4418_call = mutated_mod.get_global_var('func_4418')
call_4419 = func_4418_call()
output = call_4419
func_4420 = relay.Function([], output)
mutated_mod['func_4420'] = func_4420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_4525 = relay.TupleGetItem(func_2636_call(), 0)
call_4526 = relay.TupleGetItem(func_2638_call(), 0)
output = call_4525
output2 = call_4526
func_4527 = relay.Function([], output)
mod['func_4527'] = func_4527
mod = relay.transform.InferType()(mod)
mutated_mod['func_4527'] = func_4527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4527_call = mutated_mod.get_global_var('func_4527')
call_4528 = func_4527_call()
output = call_4528
func_4529 = relay.Function([], output)
mutated_mod['func_4529'] = func_4529
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4546 = relay.var("var_4546", dtype = "float64", shape = (12, 3, 13))#candidate|4546|(12, 3, 13)|var|float64
uop_4547 = relay.sinh(var_4546.astype('float64')) # shape=(12, 3, 13)
output = relay.Tuple([uop_4547,])
output2 = relay.Tuple([uop_4547,])
func_4549 = relay.Function([var_4546,], output)
mod['func_4549'] = func_4549
mod = relay.transform.InferType()(mod)
mutated_mod['func_4549'] = func_4549
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4550 = relay.var("var_4550", dtype = "float64", shape = (12, 3, 13))#candidate|4550|(12, 3, 13)|var|float64
func_4549_call = mutated_mod.get_global_var('func_4549')
call_4551 = func_4549_call(var_4550)
output = call_4551
func_4552 = relay.Function([var_4550], output)
mutated_mod['func_4552'] = func_4552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3052_call = mod.get_global_var('func_3052')
func_3053_call = mutated_mod.get_global_var('func_3053')
call_4615 = relay.TupleGetItem(func_3052_call(), 1)
call_4616 = relay.TupleGetItem(func_3053_call(), 1)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_4617 = func_2652_call()
call_4618 = func_2652_call()
output = relay.Tuple([call_4615,call_4617,])
output2 = relay.Tuple([call_4616,call_4618,])
func_4624 = relay.Function([], output)
mod['func_4624'] = func_4624
mod = relay.transform.InferType()(mod)
mutated_mod['func_4624'] = func_4624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4624_call = mutated_mod.get_global_var('func_4624')
call_4625 = func_4624_call()
output = call_4625
func_4626 = relay.Function([], output)
mutated_mod['func_4626'] = func_4626
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4642 = relay.var("var_4642", dtype = "float32", shape = (13, 15, 14))#candidate|4642|(13, 15, 14)|var|float32
var_4643 = relay.var("var_4643", dtype = "float32", shape = (13, 15, 14))#candidate|4643|(13, 15, 14)|var|float32
bop_4644 = relay.floor_mod(var_4642.astype('float32'), relay.reshape(var_4643.astype('float32'), relay.shape_of(var_4642))) # shape=(13, 15, 14)
output = relay.Tuple([bop_4644,])
output2 = relay.Tuple([bop_4644,])
func_4656 = relay.Function([var_4642,var_4643,], output)
mod['func_4656'] = func_4656
mod = relay.transform.InferType()(mod)
var_4657 = relay.var("var_4657", dtype = "float32", shape = (13, 15, 14))#candidate|4657|(13, 15, 14)|var|float32
var_4658 = relay.var("var_4658", dtype = "float32", shape = (13, 15, 14))#candidate|4658|(13, 15, 14)|var|float32
output = func_4656(var_4657,var_4658,)
func_4659 = relay.Function([var_4657,var_4658,], output)
mutated_mod['func_4659'] = func_4659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4267_call = mod.get_global_var('func_4267')
func_4269_call = mutated_mod.get_global_var('func_4269')
call_4677 = func_4267_call()
call_4678 = func_4267_call()
func_4394_call = mod.get_global_var('func_4394')
func_4396_call = mutated_mod.get_global_var('func_4396')
var_4704 = relay.var("var_4704", dtype = "float64", shape = (336,))#candidate|4704|(336,)|var|float64
call_4703 = relay.TupleGetItem(func_4394_call(relay.reshape(var_4704.astype('float64'), [336,])), 0)
call_4705 = relay.TupleGetItem(func_4396_call(relay.reshape(var_4704.astype('float64'), [336,])), 0)
func_2499_call = mod.get_global_var('func_2499')
func_2500_call = mutated_mod.get_global_var('func_2500')
call_4707 = func_2499_call()
call_4708 = func_2499_call()
func_3020_call = mod.get_global_var('func_3020')
func_3024_call = mutated_mod.get_global_var('func_3024')
call_4709 = relay.TupleGetItem(func_3020_call(relay.reshape(call_4703.astype('bool'), [2, 6, 10]), relay.reshape(call_4703.astype('bool'), [2, 6, 10]), ), 0)
call_4710 = relay.TupleGetItem(func_3024_call(relay.reshape(call_4703.astype('bool'), [2, 6, 10]), relay.reshape(call_4703.astype('bool'), [2, 6, 10]), ), 0)
uop_4711 = relay.acosh(call_4709.astype('float64')) # shape=(2, 6, 10)
uop_4713 = relay.acosh(call_4710.astype('float64')) # shape=(2, 6, 10)
func_599_call = mod.get_global_var('func_599')
func_604_call = mutated_mod.get_global_var('func_604')
var_4727 = relay.var("var_4727", dtype = "int8", shape = (6, 3))#candidate|4727|(6, 3)|var|int8
var_4728 = relay.var("var_4728", dtype = "float32", shape = (384,))#candidate|4728|(384,)|var|float32
var_4729 = relay.var("var_4729", dtype = "int64", shape = (280,))#candidate|4729|(280,)|var|int64
call_4726 = relay.TupleGetItem(func_599_call(relay.reshape(var_4727.astype('int8'), [3, 1, 6]), relay.reshape(var_4728.astype('float32'), [24, 16]), relay.reshape(var_4729.astype('int64'), [140, 2]), ), 6)
call_4730 = relay.TupleGetItem(func_604_call(relay.reshape(var_4727.astype('int8'), [3, 1, 6]), relay.reshape(var_4728.astype('float32'), [24, 16]), relay.reshape(var_4729.astype('int64'), [140, 2]), ), 6)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_4734 = relay.TupleGetItem(func_2636_call(), 0)
call_4735 = relay.TupleGetItem(func_2638_call(), 0)
output = relay.Tuple([call_4677,call_4703,var_4704,call_4707,uop_4711,call_4726,var_4727,var_4728,var_4729,call_4734,])
output2 = relay.Tuple([call_4678,call_4705,var_4704,call_4708,uop_4713,call_4730,var_4727,var_4728,var_4729,call_4735,])
func_4736 = relay.Function([var_4704,var_4727,var_4728,var_4729,], output)
mod['func_4736'] = func_4736
mod = relay.transform.InferType()(mod)
mutated_mod['func_4736'] = func_4736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mutated_mod.get_global_var('func_4736')
var_4738 = relay.var("var_4738", dtype = "float64", shape = (336,))#candidate|4738|(336,)|var|float64
var_4739 = relay.var("var_4739", dtype = "int8", shape = (6, 3))#candidate|4739|(6, 3)|var|int8
var_4740 = relay.var("var_4740", dtype = "float32", shape = (384,))#candidate|4740|(384,)|var|float32
var_4741 = relay.var("var_4741", dtype = "int64", shape = (280,))#candidate|4741|(280,)|var|int64
call_4737 = func_4736_call(var_4738,var_4739,var_4740,var_4741,)
output = call_4737
func_4742 = relay.Function([var_4738,var_4739,var_4740,var_4741,], output)
mutated_mod['func_4742'] = func_4742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3246_call = mod.get_global_var('func_3246')
func_3248_call = mutated_mod.get_global_var('func_3248')
call_4758 = func_3246_call()
call_4759 = func_3246_call()
func_4267_call = mod.get_global_var('func_4267')
func_4269_call = mutated_mod.get_global_var('func_4269')
call_4786 = func_4267_call()
call_4787 = func_4267_call()
output = relay.Tuple([call_4758,call_4786,])
output2 = relay.Tuple([call_4759,call_4787,])
func_4793 = relay.Function([], output)
mod['func_4793'] = func_4793
mod = relay.transform.InferType()(mod)
output = func_4793()
func_4794 = relay.Function([], output)
mutated_mod['func_4794'] = func_4794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2581_call = mod.get_global_var('func_2581')
func_2582_call = mutated_mod.get_global_var('func_2582')
call_4806 = relay.TupleGetItem(func_2581_call(), 0)
call_4807 = relay.TupleGetItem(func_2582_call(), 0)
output = call_4806
output2 = call_4807
func_4812 = relay.Function([], output)
mod['func_4812'] = func_4812
mod = relay.transform.InferType()(mod)
mutated_mod['func_4812'] = func_4812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4812_call = mutated_mod.get_global_var('func_4812')
call_4813 = func_4812_call()
output = call_4813
func_4814 = relay.Function([], output)
mutated_mod['func_4814'] = func_4814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4189_call = mod.get_global_var('func_4189')
func_4190_call = mutated_mod.get_global_var('func_4190')
call_4897 = relay.TupleGetItem(func_4189_call(), 0)
call_4898 = relay.TupleGetItem(func_4190_call(), 0)
func_3129_call = mod.get_global_var('func_3129')
func_3131_call = mutated_mod.get_global_var('func_3131')
const_4908 = relay.const(-10, dtype = "int16")#candidate|4908|()|const|int16
call_4907 = relay.TupleGetItem(func_3129_call(relay.reshape(const_4908.astype('int16'), [])), 0)
call_4909 = relay.TupleGetItem(func_3131_call(relay.reshape(const_4908.astype('int16'), [])), 0)
output = relay.Tuple([call_4897,call_4907,const_4908,])
output2 = relay.Tuple([call_4898,call_4909,const_4908,])
func_4920 = relay.Function([], output)
mod['func_4920'] = func_4920
mod = relay.transform.InferType()(mod)
output = func_4920()
func_4921 = relay.Function([], output)
mutated_mod['func_4921'] = func_4921
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4932 = relay.const([[[8.324310,9.994942,9.055834,-0.950235,8.912148,4.234298,-2.765932,1.984503,-4.728135,3.659210,5.795224,-6.380780,-6.999146],[-5.649257,-8.981334,-3.382233,4.378777,-4.204543,1.440582,-6.707641,7.463522,-0.843635,-3.371318,-2.482696,9.596086,0.431781],[0.140470,5.986553,-3.726563,-0.896644,5.407263,-6.001654,-8.776446,5.367237,-3.706035,-0.741687,-0.791387,2.016067,8.860748],[0.172755,9.268341,8.625460,-9.350952,3.802311,-8.790088,3.651457,-1.179596,1.099948,-3.543218,5.026446,-0.938437,-7.117049],[-1.504000,6.739075,0.432634,-0.068561,-0.681037,-0.628128,-3.851552,7.495855,0.511829,-7.770205,9.097279,-3.111402,-1.980623],[-3.113792,-3.000574,7.403874,-9.956881,-9.767368,5.754838,8.311528,-6.560652,5.315469,0.710772,7.691552,4.859268,-4.272012],[9.041786,1.282897,-0.039103,0.049560,-3.873675,5.219415,6.664383,1.358539,-6.879702,-0.594969,-1.956984,6.825266,7.531960],[-5.071739,-2.557210,3.625521,7.622932,-2.209245,-0.734692,-8.947644,-5.981575,2.159506,4.376524,2.404826,0.217220,-9.415500],[4.234886,7.686211,8.718780,7.835374,5.048174,4.497072,7.873298,-0.527472,7.815530,7.751838,2.105043,-6.415097,5.549511],[-0.822034,3.636523,-2.316750,0.094237,1.590524,7.263333,-2.300333,3.439599,6.699408,1.980107,-8.669974,5.459168,4.499702],[8.821911,2.867549,3.378147,8.332811,4.525880,1.141290,-3.654589,6.272219,3.535961,-4.632390,3.563707,-4.204385,3.556967],[-0.151297,-3.602529,1.820533,8.682112,-7.038042,4.876313,4.197942,1.648501,7.639406,-2.972900,7.576371,-8.582140,-9.283203],[5.181873,5.837845,-2.876613,4.785582,5.209163,-8.236130,-7.262713,6.925916,-9.449372,-8.171119,3.986912,1.881429,-9.710389],[5.585327,-7.096721,-0.635800,-2.074346,8.001752,5.846086,4.643902,5.701236,1.002733,-3.934303,5.285547,-7.516174,-1.901087]],[[2.692414,4.156478,-8.030331,5.881881,-7.319329,5.332286,7.345059,7.884845,5.352251,7.287728,-3.597413,-7.457122,4.043545],[-4.225627,1.688299,2.398595,-1.614478,-8.394933,9.498802,-9.741654,-0.250814,2.999623,-9.822561,-8.054374,5.530230,-9.872565],[0.063458,5.292340,9.971983,-1.800676,-8.850071,5.856600,-5.115908,-2.903474,8.962433,9.991688,-1.397108,8.795708,-1.691410],[-5.876604,9.768659,7.954217,-0.909877,5.391648,-5.772572,-3.812948,3.570731,-5.127640,-7.763028,-2.301619,6.221563,4.443442],[-3.782747,-0.101297,-8.693030,-4.429440,8.713750,-4.558516,-6.599217,3.196483,8.740274,-0.617384,-2.243047,-0.473732,0.364784],[-6.844184,9.226989,-4.991822,9.359508,-0.782816,7.003225,9.652506,-2.097134,-2.447529,-1.642325,-9.489439,-6.364709,-3.424615],[9.434278,8.822465,1.863408,1.840378,1.455071,-3.588222,-7.805611,-2.384824,-5.943195,-9.723060,-3.688107,7.041329,9.613189],[-5.334918,-6.326614,-1.153862,-5.348851,-4.112357,1.556974,-4.081450,0.438353,1.354153,8.597950,-9.475132,-7.487679,-6.654636],[5.749448,4.857468,7.820145,-7.886143,-5.201860,5.945129,-6.731928,6.344569,3.497118,-0.856136,-3.607495,-6.304238,-5.494582],[9.383245,-0.118600,5.218480,-3.774801,-2.018051,-2.627214,2.033947,9.290402,9.536436,8.897451,7.145246,-4.016971,3.885756],[-2.423462,-4.013178,-9.690011,7.097720,-0.614596,2.764353,9.928937,-6.263348,-4.746750,-6.916923,2.041571,-9.281848,-4.235369],[6.713132,8.091963,-7.779842,9.601215,-1.301636,-3.823099,-9.033815,-9.149781,8.047231,0.640893,-2.693076,-3.645864,8.129343],[-1.041890,-5.359422,1.457919,-2.727676,-6.819607,-1.948256,2.330473,-3.040712,-0.506403,-2.248084,-8.979488,-2.372363,-7.054779],[9.504056,-8.101719,-7.531959,-9.656986,1.663906,-0.043541,4.568883,-8.361120,-9.679495,-4.418644,-4.398450,0.222750,-0.124085]],[[-8.224649,4.416990,0.290082,7.152595,9.825128,-9.247769,-7.851076,-0.683430,6.356848,-8.562996,6.242988,-5.924649,2.236420],[2.851159,7.951950,-3.863892,-8.630145,-1.628836,-0.709805,5.205555,9.287575,-1.406800,-5.620355,0.370187,-5.412905,6.781163],[-0.994560,3.028240,-3.817175,9.199296,-9.685588,-9.989298,1.797141,-7.121045,-7.182579,-1.876693,-8.681461,-8.676062,6.556909],[-9.047975,2.316624,1.214614,6.504941,8.100225,5.602139,-3.180502,-9.190712,5.595572,5.156290,2.102210,6.229551,-4.291302],[-8.617937,-4.291272,-2.787295,8.333676,3.024337,4.047251,-7.661079,-8.101232,2.127022,2.667258,1.645202,-9.542798,7.083802],[5.330879,2.145316,-9.111821,-9.772052,1.878418,2.085212,-8.332799,1.987654,-4.774523,-8.285225,-0.596039,8.025646,4.047307],[-0.402676,3.362239,6.170417,-5.259834,-4.940690,1.150492,-7.646588,1.107003,1.352752,-3.900481,-0.502610,-2.113608,7.776124],[-6.362488,7.604796,-6.781022,5.589613,4.524552,-3.712852,4.785012,-9.596927,0.325571,3.939657,-4.740313,-0.218126,-8.076591],[5.434446,2.997855,4.838556,0.067508,7.336445,-2.423787,-3.588396,5.917532,9.454669,0.755812,0.352892,-3.890993,-8.264645],[-0.942412,9.473697,4.543204,8.984891,-5.656942,-0.172692,4.623478,3.546744,4.810677,6.936218,-7.830792,6.107955,-2.818848],[-6.497601,-0.265812,-1.538039,0.734986,1.940557,-3.745285,2.483662,2.237268,8.740905,9.188867,-4.268731,-8.634678,2.982103],[-4.043450,-0.830673,-4.422657,-0.120001,2.143593,0.051196,-1.642047,1.911963,3.230357,9.210534,4.443175,-8.055132,7.872811],[8.604576,-5.594358,-9.378843,2.712149,-6.280013,7.418648,-5.249830,8.698308,6.220239,-3.186137,-0.104346,6.238113,-3.643759],[-1.551359,2.896072,7.882523,3.127947,-1.751070,6.647984,4.503407,8.375099,-3.240770,6.076512,4.065209,2.740819,-7.945533]],[[5.543462,-1.096021,-3.490363,-6.568664,-7.907634,-1.383983,-0.744137,-5.197977,-7.108895,7.755730,-1.741509,-9.586302,7.775304],[2.579980,9.932108,-4.713269,9.598347,5.457937,-1.103519,-6.852721,6.691393,-3.868098,1.985025,6.710217,-8.538221,8.007242],[-4.966875,0.575277,9.798311,1.516512,-9.910851,9.450013,-4.830772,6.359535,9.218842,1.461861,-2.448514,-7.277746,-8.837238],[2.079849,-4.931118,-3.260845,-7.084453,-9.790343,-5.142079,3.913819,1.322233,-0.147967,9.500876,-0.418397,7.999475,2.117070],[-9.031701,7.564859,-8.844105,1.857174,7.000350,7.259124,6.963240,6.238933,2.999922,-7.634169,-1.595935,-2.922457,-3.841798],[-0.704718,4.102784,6.213750,9.047045,-8.830380,-6.872604,-1.817862,5.393992,8.494008,1.851802,-4.693062,3.180579,6.615654],[-4.551302,7.725359,1.745702,-4.843188,-7.609934,-9.095227,5.906166,2.382030,-6.472103,6.386654,5.255418,7.428130,-6.891646],[-6.648988,-3.149303,3.203369,1.890647,-0.137853,-6.893101,7.670171,-1.597881,-9.473258,3.932167,1.340515,2.487148,3.817268],[-4.025207,5.647283,8.574698,-1.907323,1.636648,-3.929798,1.644160,4.922216,8.988736,-7.746618,-4.320438,8.569702,-0.643149],[-2.913914,-3.554836,-8.030605,-3.254316,8.850182,8.615737,2.473946,5.914038,-5.043782,-1.667336,-6.775467,-2.679168,-8.901679],[6.345010,-1.571437,-3.079741,3.447061,0.875372,0.639411,1.393889,2.972152,4.352262,9.745246,-7.073865,7.614805,-4.560026],[-6.011475,-7.130383,4.630143,3.098873,2.271756,-8.932618,-0.860222,-0.131139,8.940254,-9.803455,2.654512,-2.175944,-3.204368],[-9.551722,4.474387,4.069427,2.663295,-0.366680,0.003955,2.909279,-3.587279,8.442340,0.866998,-3.618232,0.276459,6.404237],[-6.846445,4.309084,-5.618388,-6.873717,-4.997624,1.458107,6.428582,9.748297,4.032456,6.901108,-0.864468,-9.256124,9.443529]],[[9.828146,3.218831,2.466484,-9.737078,-2.409657,-3.093623,-3.643045,-7.813161,-4.677549,-0.794346,-2.214234,-4.238696,0.855768],[-2.999651,-7.124851,-2.290096,-1.227495,-7.599058,-8.925347,6.251639,8.591396,6.201651,-2.449174,-2.178554,-0.753331,-1.252205],[-9.264259,-0.405765,-2.216579,-8.684463,-1.101155,-3.100710,-9.825298,-0.781489,8.541225,-3.288587,2.094928,-5.747082,3.671135],[1.619326,0.483874,2.341138,-5.026953,0.105571,-5.931853,-9.356845,3.903442,-0.247052,7.749173,-0.961539,-2.362855,-5.003803],[-2.247668,8.643649,4.872388,0.046029,2.793623,-2.835337,7.230432,-9.629981,4.352760,-6.071610,4.384227,2.015325,-3.622383],[2.866037,-3.415663,-4.326706,-4.411307,-7.901072,-1.275766,8.700697,-3.495037,-5.537981,6.650791,-6.165535,6.307127,1.433524],[6.362044,0.922841,-9.547537,-4.633270,-6.827807,-5.704287,-8.492841,-1.078030,-1.779459,-5.358280,-9.726103,-4.642467,3.714203],[-7.942132,-6.726348,3.311448,-4.504938,1.897877,2.898522,2.724747,-4.193147,6.274540,9.532964,-4.871697,4.115919,-3.162374],[7.859888,2.995368,7.002829,5.398672,-2.684490,0.980239,9.510931,1.100228,-8.348494,7.845386,-9.977721,-4.603908,-1.114782],[-6.917471,6.697313,1.477390,3.935757,-3.790524,0.368922,-1.578801,-5.235403,-7.777356,-7.871833,9.910126,7.780948,-2.896273],[0.921497,9.995428,0.045876,2.034042,-0.930449,5.834774,8.381282,9.947738,1.733388,-1.514296,9.393196,0.824951,2.555970],[1.605235,9.150648,-9.689925,-1.441881,6.768075,9.163422,-7.524381,0.803831,-4.301740,2.131710,6.061372,3.609013,6.710003],[2.763742,8.011593,9.715794,5.810758,-9.872624,6.317984,4.566478,-0.847974,4.652237,-3.097480,-9.810155,0.445552,-9.779539],[-3.584401,5.577454,5.292704,-4.373202,3.869442,6.203146,6.590271,-6.656429,-2.223158,1.014833,5.436646,7.749121,1.772843]],[[-0.550600,-2.044087,-9.182476,-2.981762,-8.984468,-9.483899,-7.933355,-1.454308,-9.100330,1.497678,-0.483108,-8.352458,-8.916699],[-7.527556,2.482221,9.323880,-7.393456,3.204246,-4.534785,-5.406084,8.592802,-0.317228,-2.571838,5.045323,-6.869979,-0.684756],[-3.438718,-7.424977,-6.545790,-8.382134,-1.489033,0.029147,3.712884,4.209403,-5.817406,-9.815786,-6.108403,-2.312893,1.287868],[9.109534,-3.434840,-1.631918,-5.235817,-0.535834,9.076533,0.522875,-9.733541,0.691844,4.623120,-0.523301,-5.398861,9.343432],[4.813849,-8.950041,6.509744,-0.205242,1.175384,-7.518172,2.323737,-9.787830,6.956651,-5.574831,-5.964790,-6.231774,4.509062],[7.534869,4.373554,-3.140307,-7.737753,-1.137362,3.888311,-3.561765,0.937149,-5.759899,4.039892,-5.325239,-6.887655,-5.664584],[-4.564039,-9.884165,7.380404,7.343548,-0.598072,3.987179,-5.877103,-8.436868,-1.168072,-9.551040,0.553246,-2.310953,2.352295],[-4.545292,-7.205164,-8.788556,4.903729,-6.442814,8.653322,7.064847,9.193619,-7.920044,-2.200917,6.084420,7.351860,0.420176],[2.877835,7.549592,-6.320615,-0.308694,2.035632,7.125362,-9.030647,9.599797,3.632988,0.866897,-3.569919,4.201894,6.125051],[7.102110,-5.055884,8.763241,5.877618,1.950330,-4.065856,-9.688279,-8.679854,-2.945462,3.144762,-2.727066,9.011116,5.261605],[-3.126269,-7.852542,-1.489158,-2.368820,-3.689222,-9.378586,9.699123,8.164611,1.823248,2.003515,3.757374,-5.008862,9.227572],[-2.027505,0.018630,-4.104656,-8.407810,5.153720,5.577106,4.370675,5.426432,6.629038,3.671397,5.735116,-0.502901,0.040353],[-6.316450,-7.689393,-6.824389,-7.304414,-4.582677,3.173431,-3.005492,0.979025,2.727541,0.504649,-1.330862,2.030740,-9.325218],[7.135319,4.214885,-6.183894,-2.969097,6.811580,8.041411,-2.901425,3.215141,-9.438470,-7.514714,6.054513,7.987378,8.623021]],[[9.151573,7.424345,6.813123,-3.539923,2.252724,-5.996864,0.136535,3.391990,-7.044753,-0.521473,5.553502,0.247451,0.272717],[6.194334,7.062555,-8.383442,7.176240,-6.410571,-6.805947,9.312282,-8.588648,-8.799014,-0.718410,-0.291883,5.131507,-9.220127],[-8.479087,3.058460,-6.420584,-3.196658,4.595170,-2.445027,-9.255934,4.472881,8.153877,0.296445,-9.180795,3.106536,1.488534],[8.345040,-8.826668,7.779521,1.679280,-9.275347,-4.713608,-2.306951,-8.461569,-2.672525,2.792234,1.519872,8.353255,-3.977254],[-2.776065,-8.765694,-4.405267,2.520948,0.906352,1.451703,7.510502,-0.517324,-8.748449,9.638332,9.358029,0.165443,6.893025],[8.573798,7.095780,-9.156548,8.260758,7.398957,8.892134,-6.553350,-4.904999,3.837919,-2.243364,8.585467,-3.754926,3.766385],[-6.025042,9.370158,4.174388,-4.308830,-7.525602,4.979264,9.188107,7.248106,6.332505,9.248998,8.491103,5.042473,-7.724102],[-7.221856,9.207500,-2.739919,9.774410,6.953022,-4.219528,4.117868,-0.914439,-9.428062,-2.906404,-5.343336,-9.058342,1.398472],[6.180565,3.142043,2.452651,-3.605246,3.292044,-2.600463,-7.309867,4.592257,-1.472781,-5.034387,2.441534,-0.266682,-4.151264],[8.645620,4.603196,8.992110,8.847267,-8.854326,-1.955202,7.510331,-3.792923,-6.081172,0.594240,0.758500,8.430202,6.942872],[7.355840,-4.277466,-2.369014,-1.471176,-1.011656,-4.902937,-7.090692,-6.959183,-4.501496,-7.110623,1.221303,7.383632,-5.474985],[-6.850604,-5.456940,0.119198,-9.191039,-3.387079,8.452885,-9.276822,-5.687858,-5.552617,5.987859,3.752626,-3.046670,-4.341401],[9.399471,8.440525,3.423408,1.558836,7.986903,9.129343,-5.744902,-4.928673,-0.108627,3.790268,-7.430209,1.135315,-5.027035],[9.028718,-4.804859,-8.879277,4.080931,9.576132,-6.350061,3.263661,6.724894,0.866390,-7.636910,-1.780021,-5.536480,8.179046]],[[4.120398,-2.536325,7.028737,-0.747160,-2.573548,6.620969,-8.693615,-1.899083,9.927381,-8.977862,-3.652502,-5.830398,-9.810290],[6.079038,-7.218404,5.999340,0.398715,9.401103,4.249144,-2.797275,9.043001,0.690943,-6.936442,-3.343369,6.114478,1.216474],[-5.983343,-2.002793,-6.214524,2.786639,-9.382534,-1.811289,-9.099889,4.562781,2.191538,7.177126,6.348032,4.446013,-5.613273],[-0.986805,-0.300633,5.560720,4.299290,9.733559,5.195265,2.788405,8.802573,8.435805,0.399819,3.119786,-8.228028,4.289120],[-7.899649,-8.982511,-3.597941,-7.520911,-5.988285,9.374137,-7.241757,4.434502,2.574558,6.200476,-4.801608,6.579051,5.806818],[-7.306746,3.195349,-7.948612,-5.090000,0.842187,8.454390,-5.037418,3.978940,7.802990,-8.225899,-6.046791,7.498720,7.628180],[-9.352131,-8.332259,6.397308,-2.843757,-9.261984,-0.289317,6.565814,-1.496581,-2.629678,-3.004045,-3.130884,5.249897,-7.252714],[3.786937,1.571351,4.241033,3.210630,-6.908409,-5.109732,9.249792,0.136850,-7.727634,0.097252,2.579428,5.193196,-9.459355],[9.538036,-9.896930,7.002786,-0.106975,-1.172812,-7.554301,9.914580,9.970553,9.155831,-7.676207,-2.731472,5.812007,9.048121],[1.051642,-3.331361,2.387322,0.378479,8.608046,2.936618,-7.377639,2.486985,3.464839,9.985342,8.531518,4.685208,3.417813],[-9.823033,-0.763725,3.479985,-0.471333,0.037567,4.736744,4.000393,0.456175,-6.867971,0.509553,-6.888127,-3.185814,5.919032],[9.977053,-2.330752,-9.777544,5.901206,-3.912826,4.071869,1.186891,-8.822610,2.591756,0.792042,-9.813972,-8.226018,-0.581680],[-9.152996,-5.737546,-3.187595,9.206900,-7.929858,7.061161,-8.409660,-9.819285,-4.412337,-9.924638,5.275270,-1.782014,-0.037075],[-2.601039,-1.499452,3.904001,-7.939482,-5.548091,0.746397,2.625254,-7.379544,-7.281062,-9.121797,-6.946837,-9.111963,-7.276498]],[[-6.765996,-0.359171,5.711271,-7.111777,6.377163,6.025955,0.734342,-5.614448,3.432367,6.725048,-2.809663,-8.821623,-1.798172],[8.167445,5.876089,-7.045099,0.352919,-3.445132,-4.745172,-4.090857,-7.300479,9.210821,-7.953798,0.015909,3.519269,9.004966],[-6.033369,-3.859418,-8.522878,4.676750,3.162571,8.170566,-5.846193,-5.704259,-9.416871,2.416976,-0.300614,3.788966,-7.156426],[-8.765371,2.752896,-6.595359,4.495816,-9.752553,-3.235125,6.381599,-0.190867,-7.457197,-6.138448,5.594366,-4.350544,6.243364],[6.992016,1.539539,9.491784,7.918164,5.829518,-8.994054,-1.251495,-0.834159,-1.148489,2.518413,-0.004744,-1.498777,-4.197288],[-2.538138,-4.405407,8.356970,-0.949379,5.477063,-9.945474,-2.229559,-2.591539,-2.684213,8.746829,-0.888984,-0.525518,-7.892293],[2.761114,9.417623,-1.022566,-3.444298,4.393328,-5.843636,-5.273525,-6.707905,-4.886990,-6.383097,6.282955,-9.444336,1.574402],[0.489303,-2.973803,5.890307,-5.403358,1.208861,-4.543384,4.332552,9.384802,8.719654,2.991249,-3.016959,-4.810441,5.911853],[5.291394,-0.779712,-7.259634,-0.908393,-8.009247,-2.779994,-3.234605,6.947401,-6.321393,-6.718178,8.820033,9.943115,6.348446],[-0.900181,0.734096,-3.695620,1.092741,4.254591,-4.624134,-5.706662,8.956360,5.083351,-2.249031,-7.563118,3.673065,-6.366762],[-7.325665,7.500746,5.305936,4.363756,7.615311,6.187511,5.103590,-2.109140,-0.525315,-3.973546,-7.257355,0.316125,-3.870600],[0.245250,3.641665,-3.038160,5.495498,4.062548,-6.576145,6.171776,-5.083931,-8.072146,-9.275541,2.701054,-2.799660,-9.509233],[3.220773,5.975210,-5.677193,3.956084,0.952236,9.945259,-1.655181,0.005032,-0.953626,-5.863615,-4.896341,-6.892350,-2.085596],[7.435193,3.956709,4.405837,-2.392821,-5.583927,0.723442,-3.704221,-0.436515,4.310555,-6.764306,8.862444,-7.291651,-3.645513]],[[-8.879911,5.149489,-4.100839,6.466094,-5.414154,9.154040,-4.616686,8.448314,8.287884,-1.685985,-9.456089,-0.807974,-4.518566],[9.899575,-0.761266,6.250574,-5.006473,2.983841,-9.894230,-2.442471,9.251928,7.807938,7.951588,5.017887,-8.620825,-7.927956],[8.036637,9.930093,-2.802929,-0.835204,-3.480615,-9.303099,-6.364097,-5.391661,-4.786279,-8.496830,-1.878061,0.616340,-6.883644],[-9.332744,-3.238348,0.586566,-6.703870,-5.675574,9.165919,0.857999,-2.211591,-0.390683,9.486552,9.861458,2.623164,5.383489],[5.797738,-8.157807,6.635681,-7.317612,3.035554,5.819766,0.321019,0.451063,9.201601,-0.319948,-2.687316,-9.126198,2.547218],[6.543842,4.669585,-2.368088,-6.965107,3.026489,-3.768776,8.085759,4.155548,6.960035,-5.549613,-8.274207,3.324869,-7.534946],[5.964024,9.148136,-5.225885,-5.722918,4.460306,6.619390,7.064555,1.655356,-4.865600,3.721643,4.993731,-9.845444,8.230588],[7.169074,-2.780583,-2.039448,9.277387,-3.648501,4.332327,4.761833,-9.878449,-4.397884,9.669234,8.364296,-3.258356,-8.737154],[9.360707,-8.148556,9.849660,3.416192,3.629781,6.795877,5.301923,-4.941809,-3.102549,7.958328,-3.906916,-7.414146,4.161228],[-1.246881,3.711621,5.837214,2.639397,4.215592,-9.294357,-7.995345,8.121619,-6.540358,-6.337839,1.040309,-6.942506,1.061097],[-9.299984,3.884366,7.501196,9.732571,-3.265434,4.444861,-0.467224,-4.919380,9.261064,-2.601046,-1.045002,1.497535,-1.112447],[-0.759412,8.952293,2.851465,9.408707,2.891757,-2.172115,6.901870,4.183923,9.964804,-3.052780,-3.321554,-3.614804,-0.743250],[6.092796,7.803876,-3.487047,4.489166,4.733689,5.006643,2.848406,6.373500,8.675091,-4.002704,5.856986,5.183767,6.732596],[0.063044,-1.167142,-0.517426,3.993904,4.413499,3.995896,0.306743,-7.436857,-4.508950,1.928562,4.049959,-3.391370,-0.096171]],[[4.510742,0.433631,3.904273,2.182774,-6.872303,-5.351808,0.176345,6.466087,-9.707909,-5.277242,6.029283,-8.484542,-0.898063],[-4.299538,7.279116,3.459777,-4.855182,6.941098,7.262045,4.251030,-5.096918,-6.453638,-3.456256,9.897338,-0.227871,6.616406],[-1.307366,3.831070,3.543734,6.789745,-7.294857,-7.592146,-0.655371,-4.815796,-7.735512,0.895391,3.400194,-4.118773,-9.364083],[-4.138992,2.662733,-8.518042,6.168045,6.424290,3.861913,9.257343,7.075302,-5.327887,2.737961,8.568932,4.292729,3.857651],[-4.923630,-4.831985,4.576009,-2.520836,-4.862301,-2.662605,-8.227506,-4.975845,-6.349431,6.621999,0.964705,4.823250,-0.508121],[-7.385486,-1.018808,1.092581,-0.855168,4.239642,-1.517680,-4.127584,-5.628717,0.235969,-4.024721,8.648743,4.979909,-1.252280],[-3.593041,-9.763884,9.565776,-9.874204,-1.323794,-7.579080,5.395963,-2.637350,5.079020,-3.182512,2.766026,-8.079990,-0.046690],[-1.664650,-4.296127,-3.074488,2.210010,-9.895790,-2.121373,-2.527009,-6.995564,4.189216,-3.557979,6.488101,-8.734599,8.028764],[7.411387,-7.071800,5.470004,-2.997825,9.295117,4.654892,4.960522,2.026449,-0.385024,-8.160783,0.424676,6.043215,0.192673],[8.758711,-8.075778,5.817545,2.418295,3.370732,-4.840797,-1.566435,3.606781,-7.878848,2.066610,-7.980788,9.547875,-1.385058],[-5.169088,-6.342855,7.343542,6.231121,3.702259,5.686325,-8.401854,7.327745,-5.302319,5.131939,9.139316,-2.114437,8.473102],[9.999747,9.770087,8.592607,2.375480,8.605217,-4.670171,-8.382618,6.182925,-7.072582,2.643952,4.763197,3.696956,6.198210],[-1.426107,-1.158912,-9.335793,9.611065,4.821705,5.836415,-7.562437,2.558842,1.078064,-5.616783,-0.408888,7.760486,6.657041],[1.115110,5.431575,0.865614,3.370171,8.081327,6.582182,1.593613,-0.112748,9.261197,-4.238666,9.022227,4.253932,-1.107204]],[[-3.480214,8.334442,-5.538812,-0.490010,5.032017,-6.682724,7.515641,-6.875441,-6.562696,-4.531424,-3.682009,4.910338,-5.147818],[-9.247442,0.938454,7.891104,-5.306043,5.932574,-0.661224,-7.080920,4.798493,-9.303956,5.392846,-5.781098,-0.536795,-8.803850],[-4.245841,8.807435,-2.337082,-6.512265,6.158424,0.082425,-5.799377,-4.086340,-5.939282,-8.699719,4.841955,3.969644,5.028916],[-4.949514,-0.725546,-3.069025,5.748392,7.593363,-4.293453,1.356194,-8.021495,4.025302,9.280595,3.518045,0.175528,5.668954],[-7.757619,0.741471,-2.355110,9.433532,-9.154225,-6.378144,-5.560027,7.979845,7.062085,-0.432650,3.328732,1.829033,2.707690],[-1.676660,-3.533830,-2.704652,-6.663096,9.387944,7.199074,2.698116,-8.624956,6.268311,-2.078205,9.553037,7.288760,2.534938],[-7.737320,3.891873,3.850301,-5.257575,-4.598546,-1.577991,-9.808027,0.487382,-4.371892,8.379120,-2.003716,0.756660,0.611292],[2.877707,-8.985788,1.198375,5.462101,3.750878,-4.282441,-4.819166,-6.460827,-8.726145,-1.394318,-5.713251,-7.539271,-2.358024],[5.177150,3.486570,-8.850303,8.702137,2.977973,0.833593,-0.387416,9.975080,-8.098442,6.963154,-1.204898,7.226990,6.199103],[-4.883765,1.866394,9.988487,-2.644888,8.179798,1.462056,-5.821637,1.530872,4.588564,-2.063997,0.852783,-8.474705,3.413566],[-0.330953,-3.873911,-7.834645,7.683162,9.976306,-8.351701,-0.209075,-9.337501,2.571085,-9.971826,1.275107,-2.025343,8.897387],[-7.149575,-6.947410,-3.149144,6.637072,-4.881613,0.378680,5.105514,-7.475422,1.842090,-2.199648,-3.474013,-3.871702,-7.156746],[-7.587546,9.510467,-5.668928,-4.735790,8.646012,1.122103,5.427117,-0.105567,-0.368055,4.602306,-3.356552,8.388684,-6.699137],[-4.941369,-0.024851,-7.261313,8.987784,-5.639989,-9.128317,-0.928796,-7.515855,-5.209080,6.513456,-6.646301,-4.512572,6.610454]],[[-6.169622,9.706252,-6.460752,7.000993,7.561816,-8.996073,5.576472,-1.726562,4.285561,6.441099,6.776150,8.446680,8.002415],[-5.059203,3.954840,-1.785423,-5.094894,-1.542422,9.400707,1.770464,-4.165759,8.787221,6.562278,5.397313,-6.751244,-5.615558],[-2.203036,-6.527466,0.398666,7.228320,-7.114313,4.625934,-2.119543,-0.137947,9.228370,-1.281686,8.997419,-1.298588,6.774885],[6.893478,-7.656137,5.753215,8.974596,-9.988291,-8.335579,2.351368,6.966893,4.896714,-8.420024,8.776025,-3.562253,1.227428],[8.890357,-7.778142,5.004082,-4.191416,1.440740,-1.082899,-5.058849,2.881279,6.620172,0.602067,2.789301,-7.690881,-7.024641],[-2.805466,6.702687,-9.084397,9.119889,8.557583,-9.303663,-7.455995,-9.959481,-1.775276,-9.804042,3.886956,-5.676073,-7.637526],[-8.402088,-7.237343,5.396281,2.043876,-3.529992,9.439118,-4.349362,9.435465,3.838468,-2.662742,-5.373109,-6.437826,-0.345938],[-4.090647,-1.132543,9.035907,9.169829,-8.339835,-5.221438,9.950771,3.789750,-7.915578,-9.471939,6.320974,9.450929,6.118146],[-9.837747,-4.880378,9.224690,-9.255980,-7.357755,-3.469925,3.069854,-9.668142,-9.787245,-7.715983,-8.180809,5.438780,-0.149487],[-0.583539,-8.591160,-5.152750,3.331098,-7.983315,1.517335,2.187658,-4.510996,-0.699821,-2.920427,4.705175,-5.948631,-4.017596],[-0.181061,9.750730,-3.739565,-7.685313,1.405859,-5.369801,-2.540515,-7.959636,6.027881,3.705520,8.156759,1.266360,-9.309707],[6.348098,-7.248792,9.670899,8.120063,-2.373874,9.868687,9.900454,8.914149,5.598293,-1.750248,3.259589,4.806639,8.730779],[-5.962359,-4.525331,1.951054,-0.144708,-1.492158,-2.618344,-8.484343,4.632521,7.705480,4.526374,-1.440889,-3.140709,-8.283450],[-4.734208,-4.187122,-7.622885,-5.448558,0.648903,-7.747309,-3.158323,-9.297708,2.546724,0.131132,-8.866384,0.783889,5.420087]]], dtype = "float32")#candidate|4932|(13, 14, 13)|const|float32
var_4933 = relay.var("var_4933", dtype = "float32", shape = (13, 14, 13))#candidate|4933|(13, 14, 13)|var|float32
bop_4934 = relay.power(const_4932.astype('float32'), relay.reshape(var_4933.astype('float32'), relay.shape_of(const_4932))) # shape=(13, 14, 13)
bop_4943 = relay.less_equal(var_4933.astype('bool'), relay.reshape(bop_4934.astype('bool'), relay.shape_of(var_4933))) # shape=(13, 14, 13)
output = bop_4943
output2 = bop_4943
func_4951 = relay.Function([var_4933,], output)
mod['func_4951'] = func_4951
mod = relay.transform.InferType()(mod)
mutated_mod['func_4951'] = func_4951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4952 = relay.var("var_4952", dtype = "float32", shape = (13, 14, 13))#candidate|4952|(13, 14, 13)|var|float32
func_4951_call = mutated_mod.get_global_var('func_4951')
call_4953 = func_4951_call(var_4952)
output = call_4953
func_4954 = relay.Function([var_4952], output)
mutated_mod['func_4954'] = func_4954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_4980 = relay.TupleGetItem(func_2856_call(), 3)
call_4981 = relay.TupleGetItem(func_2857_call(), 3)
uop_4984 = relay.sin(call_4980.astype('float64')) # shape=(2, 6, 10)
uop_4986 = relay.sin(call_4981.astype('float64')) # shape=(2, 6, 10)
func_3994_call = mod.get_global_var('func_3994')
func_3997_call = mutated_mod.get_global_var('func_3997')
const_5016 = relay.const([[-9.682157,5.342970],[-0.514388,-8.666812],[7.440860,-9.306449],[-0.659384,-4.212772],[-7.026408,-1.521512],[-6.797816,-1.681685],[-3.014253,9.286539],[-7.023690,-5.501241],[-3.166764,-2.484995],[-3.605203,-2.731960],[-9.931844,-6.021638],[7.099396,-0.172563],[-0.359004,-7.757723],[-1.240649,-4.066623],[-6.954927,-4.494189],[-2.396204,-0.246951],[-1.863005,-3.975069],[4.036796,-5.891355],[1.304063,-9.329120],[5.692542,-1.362402],[-5.828257,9.848381],[-2.412401,3.589859],[8.846321,0.746449],[-3.298528,-3.801548],[-6.298543,0.371464],[1.640938,8.326955],[7.093087,6.152861],[-9.390102,-9.118477],[-2.336735,-4.401906],[7.212034,-9.992384],[3.235681,0.731649],[2.916501,-8.555526],[-3.826673,2.761617],[0.406527,-7.487741],[-3.433898,8.406237],[4.154334,7.770524],[3.148927,-9.580185],[-2.215525,-0.579617],[2.248987,3.316011],[5.203143,-5.670064],[-6.103464,-7.131529],[5.795631,-1.268714],[-5.558736,-7.022439],[5.797699,-1.720657],[2.856936,-1.318894],[8.331865,1.327226],[-8.373971,7.290508],[-2.185131,1.625137],[4.618617,-9.572499],[-1.838976,-7.051957],[7.445331,-6.583198],[3.424009,7.908119],[-1.963568,-9.697615],[-2.659460,-4.497366],[-3.681628,7.298938],[5.009318,3.480265],[-2.306985,3.638296],[-6.940523,1.245055],[1.035308,4.077403],[-2.470225,8.437780],[-8.520867,-3.671353],[-6.941549,6.263432],[-1.392813,2.123226],[7.727902,-8.863201],[5.692111,-0.474706],[-2.487193,1.505167],[6.018411,-8.501178],[3.931681,-7.993162],[9.351258,9.790526],[7.578866,-9.076024],[9.854775,-6.137435],[6.405276,-0.378856],[-7.999513,-3.273951],[-3.532692,-4.835831],[-5.522855,-3.394552],[2.338742,6.514428],[2.897012,-7.743369],[5.457181,1.840721],[-0.989697,3.620496],[-6.008475,-8.515320],[-0.052633,1.875993],[-2.523389,4.006578],[-1.337365,0.421466],[-8.016623,-0.570069],[6.241331,3.703510],[-2.783612,7.884617],[-2.087386,-3.488702],[-7.563285,1.674988],[3.433159,8.941469],[0.522683,0.379844],[-6.917606,1.156796],[5.434451,0.546028],[-7.574393,-7.325638],[5.509803,9.716480],[-5.975065,-3.238797],[8.411435,-0.422663],[7.939958,-7.410762],[-5.736658,-6.534851],[-4.136106,9.136826],[-8.308671,-1.318047],[1.108480,4.170423],[-1.348197,-2.541371],[-0.804466,8.882508],[6.230214,-8.623239],[-6.754468,7.237458],[-0.893306,7.731329],[8.999892,4.520932],[1.229502,-9.811701],[-2.235554,9.355737],[-0.305019,4.904481],[2.949353,-2.540310],[-5.381658,9.283761],[-2.266851,7.890897],[-0.414845,9.532627],[-8.897901,6.221390],[3.357055,-2.341072],[5.742666,-4.509954],[-0.366718,-9.920908],[5.568159,-7.222141],[-5.093823,-5.962457],[-1.027333,3.779921],[-4.599834,-5.723326],[3.409197,6.332136],[1.978018,-2.819449],[3.362021,-7.016437],[9.081351,8.198116],[-4.560488,-8.285196],[8.216309,0.224186],[4.270109,7.757433],[6.813522,-4.366794],[6.359867,3.266306],[8.604911,-0.350345],[3.702054,-2.176091],[3.157554,7.737675],[4.359487,-9.998175],[-9.928308,-5.190761],[9.198764,8.115571],[3.584998,8.339165],[4.520628,7.774850],[1.489762,-2.345460],[9.111529,1.177254],[-4.184939,-7.080513],[-8.877360,4.137016],[-2.673189,-0.991306],[8.203533,-7.020016],[0.601996,7.440452],[0.574527,-5.165322],[-2.949303,6.232019],[8.583379,1.102252],[3.794425,-9.759979],[-2.423979,-3.350696],[4.674494,-9.514984],[-2.737597,-2.092373],[2.176407,6.194716],[-8.577288,9.041065],[-0.471246,-3.086983],[0.556158,8.958545],[8.786265,-1.903878],[0.784212,-9.065821],[-1.166139,5.932128],[-4.124413,-2.938486],[-6.490433,-6.500895],[4.510076,2.804296],[-7.826631,-9.262299],[6.352543,-8.653769],[3.012479,1.002859],[0.618248,8.567634],[-9.740874,-1.910312],[-3.165446,-7.732055],[-2.403838,-8.134346],[-1.254226,4.723425],[8.248078,-6.292665],[-6.854764,-0.118095],[-3.244138,-6.666764],[9.612960,5.848672],[9.000761,-4.592074],[-1.752475,-5.796218],[5.262802,8.505488],[-3.526595,-4.037055],[-0.234823,6.811445],[4.946724,-3.316682],[3.885658,8.843052],[-9.608526,-2.156879],[6.099257,-9.970895],[-9.625780,-3.080845],[3.212519,2.594438],[9.126762,4.318267],[3.684618,-3.886987],[-7.058096,-9.810858],[2.509284,2.718322],[-0.123323,6.263048],[-6.171205,1.846762],[-1.480364,3.717808],[3.443717,-7.694642],[-8.030517,-4.038799],[-4.825094,3.393973],[5.244964,-7.832812],[5.275389,5.036111],[8.410284,4.748934],[-8.189854,-3.441119],[9.281057,-1.104927],[9.114182,4.084852],[-6.168018,1.933950],[-4.199894,-0.073409],[-4.136084,-2.184829],[-0.833245,2.834291],[6.489878,6.500965],[4.289842,-8.012314],[4.045483,-1.623306],[4.418604,8.137831],[5.449030,-9.085319],[9.872336,-0.982067],[5.839744,9.229114],[-1.414334,-6.772191],[-0.618955,2.970187],[1.289664,-3.131599],[-9.428831,3.800072],[-5.012965,0.146453],[0.059971,2.966722],[-2.846468,-9.139735],[-1.156305,2.822405],[-0.863033,-1.160860],[-2.240923,6.465406],[-2.377540,-1.367406],[-9.467912,-8.630453],[-5.014624,-8.953331],[-5.112190,-2.582742],[1.992405,-2.667215],[1.653659,-4.316122],[7.917311,-1.350256],[-7.944197,-1.956624],[4.900830,1.981793],[-1.995280,-8.244687],[-6.925028,5.035829],[-7.517913,9.613265],[-2.068785,7.033920],[-8.616851,-2.704477],[6.003490,4.388405],[-1.971905,-4.943410],[-3.623389,3.623719],[3.435807,-8.615485],[-7.804590,-2.621905],[0.703441,2.753247],[-3.782878,1.360572],[-2.956655,-6.734279],[-0.995187,-8.322216],[3.666697,-4.785485],[-6.540653,5.314646],[4.853089,9.605579],[0.794664,-4.448850],[-7.023018,-7.318180],[6.523610,3.403976],[5.051057,2.139315],[8.455664,-1.451200],[-0.081577,-2.282741],[-5.241298,-1.224322]], dtype = "float64")#candidate|5016|(256, 2)|const|float64
call_5015 = func_3994_call(relay.reshape(const_5016.astype('float64'), [4, 16, 8]), relay.reshape(const_5016.astype('float64'), [4, 16, 8]), )
call_5017 = func_3994_call(relay.reshape(const_5016.astype('float64'), [4, 16, 8]), relay.reshape(const_5016.astype('float64'), [4, 16, 8]), )
bop_5049 = relay.add(uop_4984.astype('float64'), relay.reshape(call_4980.astype('float64'), relay.shape_of(uop_4984))) # shape=(2, 6, 10)
bop_5052 = relay.add(uop_4986.astype('float64'), relay.reshape(call_4981.astype('float64'), relay.shape_of(uop_4986))) # shape=(2, 6, 10)
output = relay.Tuple([call_5015,const_5016,bop_5049,])
output2 = relay.Tuple([call_5017,const_5016,bop_5052,])
func_5085 = relay.Function([], output)
mod['func_5085'] = func_5085
mod = relay.transform.InferType()(mod)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mutated_mod.get_global_var('func_5085')
call_5086 = func_5085_call()
output = call_5086
func_5087 = relay.Function([], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5131 = relay.var("var_5131", dtype = "float32", shape = (5, 6, 13))#candidate|5131|(5, 6, 13)|var|float32
var_5132 = relay.var("var_5132", dtype = "float32", shape = (5, 6, 13))#candidate|5132|(5, 6, 13)|var|float32
bop_5133 = relay.less(var_5131.astype('bool'), relay.reshape(var_5132.astype('bool'), relay.shape_of(var_5131))) # shape=(5, 6, 13)
uop_5150 = relay.atanh(var_5132.astype('float64')) # shape=(5, 6, 13)
uop_5156 = relay.cosh(bop_5133.astype('float32')) # shape=(5, 6, 13)
func_2755_call = mod.get_global_var('func_2755')
func_2756_call = mutated_mod.get_global_var('func_2756')
call_5162 = func_2755_call()
call_5163 = func_2755_call()
uop_5164 = relay.log(uop_5156.astype('float32')) # shape=(5, 6, 13)
output = relay.Tuple([uop_5150,call_5162,uop_5164,])
output2 = relay.Tuple([uop_5150,call_5163,uop_5164,])
func_5166 = relay.Function([var_5131,var_5132,], output)
mod['func_5166'] = func_5166
mod = relay.transform.InferType()(mod)
mutated_mod['func_5166'] = func_5166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5166_call = mutated_mod.get_global_var('func_5166')
var_5168 = relay.var("var_5168", dtype = "float32", shape = (5, 6, 13))#candidate|5168|(5, 6, 13)|var|float32
var_5169 = relay.var("var_5169", dtype = "float32", shape = (5, 6, 13))#candidate|5169|(5, 6, 13)|var|float32
call_5167 = func_5166_call(var_5168,var_5169,)
output = call_5167
func_5170 = relay.Function([var_5168,var_5169,], output)
mutated_mod['func_5170'] = func_5170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4208_call = mod.get_global_var('func_4208')
func_4210_call = mutated_mod.get_global_var('func_4210')
call_5218 = relay.TupleGetItem(func_4208_call(), 1)
call_5219 = relay.TupleGetItem(func_4210_call(), 1)
output = relay.Tuple([call_5218,])
output2 = relay.Tuple([call_5219,])
func_5227 = relay.Function([], output)
mod['func_5227'] = func_5227
mod = relay.transform.InferType()(mod)
output = func_5227()
func_5228 = relay.Function([], output)
mutated_mod['func_5228'] = func_5228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2499_call = mod.get_global_var('func_2499')
func_2500_call = mutated_mod.get_global_var('func_2500')
call_5241 = func_2499_call()
call_5242 = func_2499_call()
output = relay.Tuple([call_5241,])
output2 = relay.Tuple([call_5242,])
func_5249 = relay.Function([], output)
mod['func_5249'] = func_5249
mod = relay.transform.InferType()(mod)
output = func_5249()
func_5250 = relay.Function([], output)
mutated_mod['func_5250'] = func_5250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_5254 = relay.TupleGetItem(func_2636_call(), 0)
call_5255 = relay.TupleGetItem(func_2638_call(), 0)
func_4189_call = mod.get_global_var('func_4189')
func_4190_call = mutated_mod.get_global_var('func_4190')
call_5256 = relay.TupleGetItem(func_4189_call(), 0)
call_5257 = relay.TupleGetItem(func_4190_call(), 0)
output = relay.Tuple([call_5254,call_5256,])
output2 = relay.Tuple([call_5255,call_5257,])
func_5266 = relay.Function([], output)
mod['func_5266'] = func_5266
mod = relay.transform.InferType()(mod)
output = func_5266()
func_5267 = relay.Function([], output)
mutated_mod['func_5267'] = func_5267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4267_call = mod.get_global_var('func_4267')
func_4269_call = mutated_mod.get_global_var('func_4269')
call_5290 = func_4267_call()
call_5291 = func_4267_call()
func_2959_call = mod.get_global_var('func_2959')
func_2962_call = mutated_mod.get_global_var('func_2962')
const_5309 = relay.const([False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False], dtype = "bool")#candidate|5309|(120,)|const|bool
const_5310 = relay.const([6.696587,-6.803610,-3.682582,-3.465736,0.115090,8.230428,-3.428618,-2.979946,-4.317188,-7.381079,-2.105362,7.411892,0.728688,-4.634899,-5.899357,-3.419873,-1.416842,-3.810384,-6.985031,-7.685065,-5.939660,-1.140355,-6.232168,-1.893634,5.650186,-3.670660,2.599020,2.467765,-9.517796,5.668250,-3.013346,-8.567038,-9.526012,2.498872,2.828393,0.964097,-3.566046,8.227830,-0.207683,3.515817,-0.471771,1.326471,6.856957,-9.662518,-9.303694,-7.553510,-6.888885,5.277494,-5.347019,3.075102,-9.726930,5.980452,-6.786505,4.175032,0.015991,0.355501,-2.821215,0.174202,8.327031,3.233587,4.036347,-4.120836,6.796293,1.061795,2.031716,4.013475,2.106015,-8.993302,9.204819,-3.250168,-8.476717,-7.467173,-4.327693,-1.161322,-9.699784,-5.680059,-1.946583,7.048035,-2.786536,3.085973,8.335406,-2.769899,2.420012,-4.958983,-7.148518,2.524431,-8.870624,-6.979403,3.314384,-5.802158,-3.170430,-7.651394,-0.890292,-8.280626,-6.304438,-2.179284,3.054491,-1.022234,5.496737,2.856954,3.846478,-6.050829,3.904090,-9.949473,4.224419,-0.893143,2.834167,-2.136244,-4.729807,5.539208,-4.740036,-9.114940,-3.441982,8.878346,7.874976,7.063061,7.010599,7.635557,-7.873074,-4.184323,-6.337804,-4.473356,1.947356,8.208362,7.252177,-0.112765,-7.958785,9.381935,1.873429,-3.096265,-0.086128,2.507488,1.380111,-2.223031,-2.436884,-9.497256,1.838542,8.612412,5.134609,-3.829549,6.297680,6.714853,2.188875,-8.595196,2.532021,1.606246,-6.514845,3.838385,8.249105,-6.271010,-8.624951,6.783975,6.085183,-8.104476,1.695053,5.817654,7.893602,7.744712,-3.979702,2.840077,-4.373467,6.500840,3.565775,5.099310,-3.854162,9.309121,-3.712584,-0.553622,3.014587,-0.421350,5.124444,2.174001,-5.226297,7.249817,-4.397904,-2.869403,3.989435,8.458792,0.750905,-1.828585,-2.826418,-2.318456,-8.612163,-4.393141,-4.216133,-3.245127,5.410358,-6.569146,-2.331349,-1.962239,3.227354,-0.753473,-8.767980,9.409881,-9.575347,7.723011,2.410436,2.771412,-7.613129,0.634502,-9.154785,-3.341633,8.561269,-1.685448,-9.724343,-3.677128,0.378940,-3.872686,5.809713,4.090623,8.300891,-3.237988,0.727272,-5.539063,-4.998716,-8.729044,-7.449379,-5.433362,2.612245,4.655891,1.644441,1.541599,-9.884626,-9.904376,-9.508598,9.781016,-0.257861,-9.109018,7.416392,5.827306,1.416406,1.275372,-4.284121,7.198417,-0.056569,5.462505,7.796028,-5.697347,-2.926500,9.294913,8.206374,7.612005,-0.969595,7.781487,-2.190718,3.266936,-8.565887,0.183154,-5.965932,-5.167224,-8.337711,-9.334730,0.202791,8.002980,3.207436,-2.919792,-8.453648,-9.401680,4.802959,-7.042828,-6.977834,4.373395,-4.839632,5.762525,-1.107078,7.163622,1.920686,-5.892507,3.161852,3.556559,-3.227538,8.687240,8.498079,2.986733,9.831560,-0.719293,-2.840452,-9.045828,9.063589,4.391867,3.151774,-4.646535,7.481637,5.722372,-1.109833,2.469973,-5.749403,7.809744,7.194418,4.220761,4.177986,-6.816520,0.068411,-1.718460,3.001761,-5.426411,6.474183,2.186486,9.389706,2.284198,8.442113,-0.212429,2.284483,3.327795,4.559199,2.324676,5.655680,-1.016770,-7.565860,6.190331,-1.935612,-2.563291,-9.291576,-8.047040,1.771692,3.404604,9.919093,-4.436509,-3.898341,0.464609,-8.839612,-5.465417,-8.482534,5.418661,8.161326,-5.344620,-9.398647,7.722886,8.261280,4.981793,5.301751,1.930837,-3.446444,8.548475,-8.860206,-5.289814], dtype = "float64")#candidate|5310|(336,)|const|float64
call_5308 = relay.TupleGetItem(func_2959_call(relay.reshape(const_5309.astype('bool'), [2, 6, 10]), relay.reshape(const_5310.astype('float64'), [336,]), ), 1)
call_5311 = relay.TupleGetItem(func_2962_call(relay.reshape(const_5309.astype('bool'), [2, 6, 10]), relay.reshape(const_5310.astype('float64'), [336,]), ), 1)
uop_5312 = relay.tan(call_5308.astype('float32')) # shape=(2, 6, 10)
uop_5314 = relay.tan(call_5311.astype('float32')) # shape=(2, 6, 10)
func_3246_call = mod.get_global_var('func_3246')
func_3248_call = mutated_mod.get_global_var('func_3248')
call_5315 = func_3246_call()
call_5316 = func_3246_call()
output = relay.Tuple([call_5290,const_5309,const_5310,uop_5312,call_5315,])
output2 = relay.Tuple([call_5291,const_5309,const_5310,uop_5314,call_5316,])
func_5317 = relay.Function([], output)
mod['func_5317'] = func_5317
mod = relay.transform.InferType()(mod)
output = func_5317()
func_5318 = relay.Function([], output)
mutated_mod['func_5318'] = func_5318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5266_call = mod.get_global_var('func_5266')
func_5267_call = mutated_mod.get_global_var('func_5267')
call_5358 = relay.TupleGetItem(func_5266_call(), 0)
call_5359 = relay.TupleGetItem(func_5267_call(), 0)
func_2426_call = mod.get_global_var('func_2426')
func_2428_call = mutated_mod.get_global_var('func_2428')
call_5384 = func_2426_call()
call_5385 = func_2426_call()
var_5418 = relay.var("var_5418", dtype = "float64", shape = (10, 11, 8))#candidate|5418|(10, 11, 8)|var|float64
bop_5419 = relay.right_shift(call_5358.astype('int8'), relay.reshape(var_5418.astype('int8'), relay.shape_of(call_5358))) # shape=(10, 11, 8)
bop_5422 = relay.right_shift(call_5359.astype('int8'), relay.reshape(var_5418.astype('int8'), relay.shape_of(call_5359))) # shape=(10, 11, 8)
output = relay.Tuple([call_5384,bop_5419,])
output2 = relay.Tuple([call_5385,bop_5422,])
func_5436 = relay.Function([var_5418,], output)
mod['func_5436'] = func_5436
mod = relay.transform.InferType()(mod)
mutated_mod['func_5436'] = func_5436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5437 = relay.var("var_5437", dtype = "float64", shape = (10, 11, 8))#candidate|5437|(10, 11, 8)|var|float64
func_5436_call = mutated_mod.get_global_var('func_5436')
call_5438 = func_5436_call(var_5437)
output = call_5438
func_5439 = relay.Function([var_5437], output)
mutated_mod['func_5439'] = func_5439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4418_call = mod.get_global_var('func_4418')
func_4420_call = mutated_mod.get_global_var('func_4420')
call_5454 = relay.TupleGetItem(func_4418_call(), 0)
call_5455 = relay.TupleGetItem(func_4420_call(), 0)
func_3069_call = mod.get_global_var('func_3069')
func_3072_call = mutated_mod.get_global_var('func_3072')
var_5471 = relay.var("var_5471", dtype = "uint8", shape = (700, 1))#candidate|5471|(700, 1)|var|uint8
call_5470 = relay.TupleGetItem(func_3069_call(relay.reshape(var_5471.astype('uint8'), [5, 10, 14]), relay.reshape(var_5471.astype('uint8'), [5, 10, 14]), ), 0)
call_5472 = relay.TupleGetItem(func_3072_call(relay.reshape(var_5471.astype('uint8'), [5, 10, 14]), relay.reshape(var_5471.astype('uint8'), [5, 10, 14]), ), 0)
func_4624_call = mod.get_global_var('func_4624')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_5496 = relay.TupleGetItem(func_4624_call(), 1)
call_5497 = relay.TupleGetItem(func_4626_call(), 1)
var_5499 = relay.var("var_5499", dtype = "bool", shape = (2, 6, 10))#candidate|5499|(2, 6, 10)|var|bool
bop_5500 = relay.minimum(call_5454.astype('float32'), relay.reshape(var_5499.astype('float32'), relay.shape_of(call_5454))) # shape=(2, 6, 10)
bop_5503 = relay.minimum(call_5455.astype('float32'), relay.reshape(var_5499.astype('float32'), relay.shape_of(call_5455))) # shape=(2, 6, 10)
uop_5514 = relay.atan(bop_5500.astype('float64')) # shape=(2, 6, 10)
uop_5516 = relay.atan(bop_5503.astype('float64')) # shape=(2, 6, 10)
bop_5528 = relay.minimum(var_5471.astype('float32'), relay.reshape(call_5470.astype('float32'), relay.shape_of(var_5471))) # shape=(700, 1)
bop_5531 = relay.minimum(var_5471.astype('float32'), relay.reshape(call_5472.astype('float32'), relay.shape_of(var_5471))) # shape=(700, 1)
bop_5535 = relay.maximum(bop_5528.astype('float64'), relay.reshape(var_5471.astype('float64'), relay.shape_of(bop_5528))) # shape=(700, 1)
bop_5538 = relay.maximum(bop_5531.astype('float64'), relay.reshape(var_5471.astype('float64'), relay.shape_of(bop_5531))) # shape=(700, 1)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5544 = relay.TupleGetItem(func_5085_call(), 1)
call_5545 = relay.TupleGetItem(func_5087_call(), 1)
output = relay.Tuple([call_5496,uop_5514,bop_5535,call_5544,])
output2 = relay.Tuple([call_5497,uop_5516,bop_5538,call_5545,])
func_5555 = relay.Function([var_5471,var_5499,], output)
mod['func_5555'] = func_5555
mod = relay.transform.InferType()(mod)
mutated_mod['func_5555'] = func_5555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mutated_mod.get_global_var('func_5555')
var_5557 = relay.var("var_5557", dtype = "uint8", shape = (700, 1))#candidate|5557|(700, 1)|var|uint8
var_5558 = relay.var("var_5558", dtype = "bool", shape = (2, 6, 10))#candidate|5558|(2, 6, 10)|var|bool
call_5556 = func_5555_call(var_5557,var_5558,)
output = call_5556
func_5559 = relay.Function([var_5557,var_5558,], output)
mutated_mod['func_5559'] = func_5559
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5653 = relay.const([[[-9.260974]],[[1.146223]],[[6.171481]],[[1.021279]],[[6.761696]],[[-5.664878]],[[5.629806]]], dtype = "float64")#candidate|5653|(7, 1, 1)|const|float64
uop_5654 = relay.sqrt(const_5653.astype('float64')) # shape=(7, 1, 1)
func_5555_call = mod.get_global_var('func_5555')
func_5559_call = mutated_mod.get_global_var('func_5559')
const_5657 = relay.const([9,6,4,-9,6,-6,4,-2,-9,-1,9,-8,-7,-3,6,-7,-9,-7,8,4,7,-4,-9,-5,9,5,-1,-8,-5,-5,7,6,-4,9,-6,-8,2,-6,-10,9,9,7,8,2,6,-2,7,9,10,5,-10,1,-7,-2,9,6,7,2,1,-9,-9,-8,-1,-10,-6,7,8,-7,-6,-1,4,5,-5,9,8,10,10,-6,6,2,-10,7,6,2,5,-6,-5,10,-7,3,-8,-7,-1,-7,-8,9,7,-6,10,-4,-3,3,3,-5,4,-10,-1,1,1,-10,-9,6,7,-9,-2,-3,7,-3,1,5,-6,-10,-3,2,10,-2,3,5,2,8,-10,8,-6,8,-9,-7,-7,3,-9,-3,-6,-6,-4,10,6,1,6,-1,-10,-2,-3,5,7,9,2,-2,8,-9,10,8,7,2,-9,-8,4,-10,-10,-7,3,-10,10,3,-4,8,-2,-10,6,-2,4,3,-9,-5,10,-5,-7,-7,-1,-3,-5,-8,7,-7,9,7,-9,-3,7,-9,-7,-9,-1,1,9,6,-7,2,-2,7,8,5,8,8,-6,-2,3,-9,-6,-8,-6,-10,9,-7,10,-2,-1,6,5,-7,-2,5,-8,4,7,-10,8,-8,-1,8,10,-10,7,2,-9,-4,-8,8,3,4,4,3,-4,-1,-5,-6,8,-7,1,6,10,3,-9,6,5,-2,-3,-2,-5,4,9,6,-8,-2,-4,-1,10,-4,6,-1,-9,-9,5,1,-2,1,-7,-1,-9,3,3,10,9,2,-4,-4,5,5,-5,-1,3,10,-8,4,6,-1,-3,-2,-4,6,9,-1,5,4,2,7,-7,5,10,3,7,4,-6,10,5,8,-8,-8,-2,-3,8,-2,-6,10,-6,-1,8,3,-6,-4,1,-4,-8,1,5,-8,3,7,9,-7,-2,-8,-8,4,5,4,1,-4,10,-1,-1,-7,-1,8,-4,4,7,-6,-4,8,10,5,10,10,-9,3,2,-6,6,2,1,4,10,3,-2,-3,-3,-4,2,-2,-7,-2,-7,-5,-4,-1,-4,3,6,-8,-8,-1,-1,-3,10,-3,2,-7,6,10,-8,-5,7,-6,5,-1,5,4,-6,-9,4,-3,-9,-3,-4,-5,7,5,-9,9,5,8,4,5,1,-8,8,-1,-4,2,-9,-10,-8,-2,-6,-4,3,-10,-6,-6,-9,-1,-8,5,-7,9,5,-4,-6,1,-5,4,7,-4,-9,9,7,-4,-2,-8,-8,-7,-8,-8,-7,-10,-4,-10,-8,-3,7,2,3,8,7,-6,-2,-7,-6,-7,-4,5,1,10,-10,-4,-4,-10,6,-2,-5,-9,-3,-9,3,-2,-5,6,4,5,8,2,8,9,-1,9,1,-3,6,5,-10,-6,-6,8,6,-4,5,-8,-10,-8,-10,-9,7,-9,-5,-2,-3,-7,1,-9,-3,3,10,10,8,3,9,1,3,10,-6,1,1,8,-7,8,1,5,-3,-3,7,9,5,3,-1,6,-7,5,-8,9,2,-3,-1,6,7,4,-5,-1,4,10,1,1,6,-6,-10,10,-4,-5,-3,-10,-10,8,7,8,5,5,6,4,3,-6,6,-5,9,7,10,-6,-2,-8,4,-10,-5,-7,-2,-5,-2,8,-7,8,2,9,5,-6,8,5,1,-2,-10,-9,9,-7,-5,9,-7,-9,6,-5,-3,-7,-5,2,-8,10,3,-10,3,5,2,1,5,-8,-10,-2,-4,-4,3,-4,-2,1,-6,-2,-8,-9,3,10,2,10,1,-4,1,5,-6,5,3,-5,-6,-8,-4,-5,-8,6,2,-1,10,-9,3,-4,-3,9,6,-5,-1,-7,9,-3,-8,9,6,3,5,-6,-8,-9], dtype = "uint8")#candidate|5657|(700,)|const|uint8
const_5658 = relay.const([True,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,False], dtype = "bool")#candidate|5658|(120,)|const|bool
call_5656 = relay.TupleGetItem(func_5555_call(relay.reshape(const_5657.astype('uint8'), [700, 1]), relay.reshape(const_5658.astype('bool'), [2, 6, 10]), ), 3)
call_5659 = relay.TupleGetItem(func_5559_call(relay.reshape(const_5657.astype('uint8'), [700, 1]), relay.reshape(const_5658.astype('bool'), [2, 6, 10]), ), 3)
func_4549_call = mod.get_global_var('func_4549')
func_4552_call = mutated_mod.get_global_var('func_4552')
const_5664 = relay.const([[-2.085395,-9.632227],[1.414795,-5.200439],[2.556517,-8.310319],[8.333703,-8.003080],[-9.498856,-3.820179],[-1.192899,1.017712],[-2.844263,3.209825],[8.148448,-4.639666],[9.782874,3.720698],[-8.911301,-2.317489],[2.658529,-7.476139],[7.582862,-3.778449],[-0.537196,-4.541273],[-6.920961,-5.585185],[-3.710478,0.178762],[7.968292,2.575035],[1.526978,6.738495],[0.319200,5.732258],[9.353770,6.305151],[-1.138788,-0.514586],[-0.243935,0.899471],[-0.024230,9.049497],[-3.321670,9.256549],[2.414697,-6.768767],[8.025688,-1.644288],[-7.160377,-2.516252],[9.176298,-2.380018],[7.608666,-8.487155],[-7.648862,-3.356440],[-7.530652,7.367179],[9.154777,-1.556088],[-2.518614,8.208782],[-4.699719,-4.057908],[7.087806,-6.736577],[-0.106173,-5.898565],[-1.399406,9.514393],[5.793605,2.824153],[7.499437,-6.716837],[2.558490,8.066555],[0.274660,-5.275985],[-1.804427,-1.687248],[0.580278,-0.323834],[-1.608623,4.242973],[-5.278397,8.422084],[-9.307777,9.146322],[7.339507,-9.616962],[-0.541599,-0.451665],[-7.616809,9.188769],[6.916603,-7.039929],[0.460369,-2.889138],[-6.737367,-6.445558],[-1.551163,-4.011648],[-8.747965,1.509575],[5.008921,6.861467],[8.102866,0.012850],[-4.875275,8.301226],[5.887794,-4.116113],[-0.501867,-7.015978],[-7.373625,9.237851],[-7.197389,8.494984],[0.451137,-5.678751],[9.284432,-3.133376],[-9.462925,-2.555003],[0.550369,-9.594656],[-0.014068,6.824483],[-0.185822,5.783653],[-1.939251,9.150143],[-1.163413,5.299487],[0.376236,-1.740852],[2.789294,-1.835419],[-1.818139,-7.034712],[-7.448189,-2.013494],[2.638338,6.825787],[5.976541,-3.884791],[-7.306759,-7.385173],[1.606947,-3.288246],[-5.045306,9.487491],[-3.381218,8.432022],[-6.981695,-6.687214],[-1.960265,8.719501],[-2.505926,7.999672],[7.368530,9.779824],[-0.613361,-0.502517],[7.331745,-8.678447],[2.802522,-0.823453],[6.533843,4.049220],[4.035836,-6.734853],[-4.863448,-0.101873],[3.349529,4.077129],[6.919497,-9.745058],[-5.256039,6.018805],[4.196051,6.595389],[1.196795,-8.274498],[6.726738,1.213158],[5.872952,0.133814],[2.508402,-5.494593],[6.698513,-6.539120],[-2.455188,-7.156225],[1.279468,4.633515],[-3.580496,-0.588276],[-5.107240,-2.550124],[-7.228845,-4.243285],[-2.648088,7.204699],[4.877523,-8.301048],[6.145863,-6.909328],[6.444838,7.370711],[-7.264033,4.801033],[0.023213,8.605933],[7.380609,-9.634274],[1.329460,8.452983],[-0.756540,0.013135],[1.256167,-9.918203],[-2.711792,-2.226799],[-9.102372,1.105699],[-3.732741,9.384702],[-8.814111,8.136335],[-9.504676,1.707283],[3.535917,9.990090],[4.646969,9.672302],[-3.245686,-2.279112],[-7.989998,-1.024889],[-1.240447,-1.639077],[9.283108,-1.498987],[-5.009885,3.780840],[2.959636,-7.872155],[3.078949,-7.397549],[-5.822135,2.544038],[-3.038429,-6.104693],[5.514926,4.975689],[-0.413763,-4.632740],[1.825875,2.140266],[9.290037,-6.801409],[0.884772,6.869336],[6.874374,7.816942],[4.727478,-4.713099],[-1.913098,8.463059],[-4.845798,7.619496],[-5.182712,-1.691099],[2.361226,7.121161],[-5.975983,1.723114],[-9.119023,-6.806688],[8.965750,7.007674],[5.140615,-6.384592],[-1.413156,6.101317],[-2.454093,9.507178],[-9.094548,-4.078404],[1.877619,-7.046850],[1.591587,1.528916],[-5.936617,4.028202],[-2.323401,5.354166],[4.749506,8.776556],[3.075824,-0.753950],[-8.225448,-0.240077],[4.706782,-1.246801],[-1.268445,-5.795824],[-9.244371,2.193821],[3.927397,-1.340431],[7.273146,5.475167],[7.124544,0.300313],[9.673907,-7.262691],[2.819542,9.777386],[8.149514,-1.826335],[-8.453156,-3.358376],[-6.506909,-0.839807],[-5.163958,5.443530],[-6.406909,-2.032272],[-2.745360,-1.462014],[2.448264,5.881506],[6.140965,5.781022],[-1.930849,-2.428003],[-3.781782,5.625543],[-7.414945,9.726168],[8.787316,-9.476778],[0.713280,6.951448],[-3.311358,-8.655981],[7.765465,0.086122],[-1.832485,0.886560],[-6.575659,6.864135],[-1.000637,5.065837],[-6.387408,-6.145955],[-4.778400,9.508657],[0.604671,9.008738],[-6.963819,-7.891965],[3.868261,-3.804630],[-9.498377,-7.412085],[0.638845,-5.121551],[-8.789583,-4.509581],[-8.387258,-5.901933],[-6.147520,-6.384085],[2.316064,0.748115],[3.086236,1.356875],[1.014885,-6.143364],[0.012356,-6.169053],[9.349817,8.617162],[4.863315,-5.048873],[-3.520348,-4.276980],[9.389012,-6.975504],[-9.613944,-7.081692],[0.113796,-3.969229],[-9.439061,3.159092],[0.323811,-0.377551],[-1.291138,-3.273237],[-0.353794,5.663700],[-4.969222,7.725385],[-4.365471,-4.702691],[5.394184,5.626645],[-4.873239,-4.134618],[-2.350715,-3.211595],[3.508489,-9.086343],[-5.510987,6.467347],[-8.304958,0.537824],[-6.523712,-5.643107],[9.556394,5.298717],[7.162327,4.793831],[-3.764962,-0.413127],[1.721704,-0.116666],[-2.858719,-1.124726],[-8.758524,1.034730],[-8.301504,7.865122],[0.068567,-3.689918],[-5.394015,1.924635],[-7.146206,9.789537],[-5.626431,6.771331],[-3.634409,8.658585],[1.481673,-9.863244],[6.389434,-0.454900],[-8.092389,1.018886],[3.302934,-9.163914],[2.986586,2.785921],[1.814296,3.643028],[3.578201,3.560700],[-8.576758,-4.214336],[2.456089,5.237289],[-2.829119,-4.006204]], dtype = "float64")#candidate|5664|(234, 2)|const|float64
call_5663 = relay.TupleGetItem(func_4549_call(relay.reshape(const_5664.astype('float64'), [12, 3, 13])), 0)
call_5665 = relay.TupleGetItem(func_4552_call(relay.reshape(const_5664.astype('float64'), [12, 3, 13])), 0)
output = relay.Tuple([uop_5654,call_5656,const_5657,const_5658,call_5663,const_5664,])
output2 = relay.Tuple([uop_5654,call_5659,const_5657,const_5658,call_5665,const_5664,])
func_5666 = relay.Function([], output)
mod['func_5666'] = func_5666
mod = relay.transform.InferType()(mod)
output = func_5666()
func_5667 = relay.Function([], output)
mutated_mod['func_5667'] = func_5667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_5673 = relay.TupleGetItem(func_3094_call(), 0)
call_5674 = relay.TupleGetItem(func_3095_call(), 0)
output = relay.Tuple([call_5673,])
output2 = relay.Tuple([call_5674,])
func_5675 = relay.Function([], output)
mod['func_5675'] = func_5675
mod = relay.transform.InferType()(mod)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mutated_mod.get_global_var('func_5675')
call_5676 = func_5675_call()
output = call_5676
func_5677 = relay.Function([], output)
mutated_mod['func_5677'] = func_5677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5683 = relay.TupleGetItem(func_5085_call(), 2)
call_5684 = relay.TupleGetItem(func_5087_call(), 2)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5709 = relay.TupleGetItem(func_5085_call(), 2)
call_5710 = relay.TupleGetItem(func_5087_call(), 2)
func_4549_call = mod.get_global_var('func_4549')
func_4552_call = mutated_mod.get_global_var('func_4552')
const_5719 = relay.const([-7.165823,-5.702606,6.085758,4.568020,3.617608,-7.029759,6.038241,-1.913045,-0.545399,-6.207143,-1.767024,1.973561,3.059011,8.837360,-2.547369,6.763430,0.963921,-4.461557,5.059469,-8.313292,-3.009748,-5.982771,7.015096,-8.030189,-6.360339,3.381927,-6.217372,7.569496,-9.396512,4.680977,9.183533,5.567764,-1.612197,9.209551,2.749064,-6.617683,6.573855,1.230210,8.955288,-0.640248,-6.912474,-1.001183,-2.570713,-0.746369,-6.750552,8.584158,9.932337,2.771583,-6.281327,2.156130,-9.767725,1.011515,9.243998,-0.349384,-5.923559,-6.159638,8.051712,8.922964,-1.617576,-4.669062,0.036327,-0.489479,4.550950,5.532819,4.467662,8.016227,-8.965631,9.929089,-3.724214,4.419686,-8.156556,7.771559,-6.984244,3.878908,1.978407,-3.323415,0.812953,8.766957,-7.607675,-9.224783,8.184993,6.244325,-7.054580,7.516041,7.384037,4.240242,1.552102,6.352868,6.360931,-1.498601,-6.789546,-7.064574,-9.041228,-0.784779,-9.736858,-6.134790,9.005926,2.619248,-8.690782,-9.033291,6.931222,7.603662,-3.082387,7.030788,3.110792,-3.006940,-0.525058,1.858484,-5.058484,9.366320,-1.357213,4.550724,8.402675,3.312136,7.092837,1.071145,3.068250,8.676428,3.454733,6.252327,2.220756,7.661010,-9.459715,-2.306775,-1.429675,2.662607,6.606984,-6.727058,-6.823724,-6.360972,5.117848,-3.254185,-3.504263,5.909908,-9.994580,-8.379970,-8.315741,8.658767,-0.700787,-6.658237,6.981594,8.957432,-2.105530,-2.797360,6.389061,-2.609361,-7.815656,6.799363,4.511281,6.776588,2.943091,7.979443,4.482859,7.197558,-0.414015,-7.068820,1.789031,-8.967312,-1.061921,-6.841118,6.651019,-2.357720,-8.793074,-9.874633,-0.902384,8.693660,9.961349,-5.017080,-7.945570,-7.714241,6.418039,-6.679703,-5.548136,-5.542079,8.251767,-3.749183,2.505152,0.099088,-6.919004,4.010344,3.527785,-9.994317,1.309793,9.566231,-4.690039,-2.481181,-8.953449,9.517466,3.946168,0.102891,-3.520835,8.643162,5.741032,5.048126,-0.175433,-4.276730,-8.523815,-8.523452,4.359503,7.852264,4.828112,2.886124,-5.106340,-6.992381,-0.457510,1.069850,0.493476,5.793988,2.910202,-3.577862,2.678511,8.527410,-5.981179,-0.571691,3.014047,0.809306,2.009326,-5.947191,3.184933,-3.573391,7.486475,7.233709,-9.882872,4.086516,7.976357,-0.314164,-5.982153,-2.829312,0.399795,9.639287,-3.694576,-1.070008,6.179875,-1.310211,7.958889,3.210038,-9.270230,-0.270751,7.025096,-9.439574,1.146663,5.731274,-9.495448,-5.687032,-7.521630,-6.319967,1.649031,4.834909,7.800001,8.247085,-0.103014,1.606177,7.584625,9.372220,7.934956,-0.411512,-8.769250,7.524493,9.793454,1.854023,9.307418,5.256423,-4.124153,2.366827,-5.606937,-4.759425,8.685162,0.107290,3.915583,9.136092,-4.465021,-5.744510,-7.437597,5.232269,6.774594,2.867212,-0.186921,8.452427,2.176128,-1.830586,-7.652798,-6.635141,0.764518,-8.718257,9.080701,9.740965,2.842708,-9.307331,3.450440,-2.684016,-3.833013,9.760808,-3.808663,0.081004,-3.473610,4.568873,4.022072,-2.078735,5.195735,2.759974,7.454590,-7.846333,-5.034647,-3.593719,-5.735826,0.039290,-4.104470,5.714383,2.391188,3.231411,-7.603157,-4.413543,-2.427828,-3.228900,-3.106496,-6.435055,4.981834,-9.197359,-0.698763,0.117022,6.707989,1.307214,-1.527571,-7.309261,-5.407103,6.826334,-9.386022,-6.208591,-2.143842,-1.612351,-2.118862,-9.442129,1.493711,-6.376952,1.872039,-1.355956,-9.332703,0.949435,-1.802395,-0.626434,8.953299,-1.552419,-2.093615,-0.447952,7.826001,3.344973,-9.105389,0.151578,-5.161802,4.097589,-8.404655,5.750200,3.814457,9.786410,-7.986496,-4.621587,4.332097,-8.734369,4.246152,-9.203723,5.043595,9.619465,-1.948067,-8.447439,-5.496665,-1.976767,3.642943,0.088789,-0.418961,0.293783,-2.916756,-9.180200,-6.724415,4.582921,-2.816242,-2.943914,5.044086,6.316808,8.076304,0.819974,7.258032,-1.280464,3.019318,5.960611,-1.087392,-6.476720,8.545200,-2.950451,0.829341,0.078652,3.355688,-0.169544,0.661870,-7.505021,7.049180,-4.373966,-9.107562,0.975330,-5.069430,1.010616,4.372303,-3.700285,6.829593,-8.872311,-1.256920,-5.674471,-4.552671,2.131527,-1.800932,-7.960753,3.639030,-3.829908,3.220806,8.169465,-4.336898,-0.437624,-3.260487,-3.283956,4.212680,0.863956,4.293326,5.763462,-1.003312,0.396785,6.540437,-0.818675,5.670877,-5.002760,-2.677545,-7.733551,-6.395076,3.173769,7.958876,-3.783918,-6.050759,7.744194,3.359213,9.457715,2.419303,-9.681657,-5.632882,1.362025,0.182271,-1.230133,7.688355,8.019323,1.538782,-7.894685,-6.655003,1.383864,-1.604250,-0.349136,-5.915387,3.025860,4.245798,-0.648866,-6.308571,9.933895,1.728781,-1.165500,-3.785177,-2.327241,-5.012191,8.093174,-2.884738,3.197067,4.945082,-3.844635], dtype = "float64")#candidate|5719|(468,)|const|float64
call_5718 = relay.TupleGetItem(func_4549_call(relay.reshape(const_5719.astype('float64'), [12, 3, 13])), 0)
call_5720 = relay.TupleGetItem(func_4552_call(relay.reshape(const_5719.astype('float64'), [12, 3, 13])), 0)
func_2755_call = mod.get_global_var('func_2755')
func_2756_call = mutated_mod.get_global_var('func_2756')
call_5725 = func_2755_call()
call_5726 = func_2755_call()
const_5739 = relay.const([1.399155,1.623404,2.038429,0.040118,-9.514419,1.134880,-0.373212,0.727970,-1.331745,7.991850,-3.808915,-8.831059,-9.199680,-9.123295,-6.921523,3.189555,-2.019919,9.002860,-8.134186,-3.520807,-7.794232,-2.992867,0.775520,1.450836,-9.866852,9.399237,-0.121330,4.307022,-7.339682,4.056594,0.281729,-0.081772,2.625010,-3.307506,-9.356443,-8.029051,-9.796811,0.990071,3.763655,9.382024,8.377139,-5.306826,2.188324,-8.839716,0.910023,-0.643167,-2.200589,0.628462,3.582822,-3.308023,-9.768224,-6.293469,1.002903,7.711342,-1.029520,-3.090182,9.580214,5.843524,6.251989,1.462453,4.958871,0.013817,-9.607921,2.212329,-4.994696,-0.411746,2.936819,-0.362047,-8.729945,6.879292,-8.256197,5.688588,-6.519921,-9.790437,-1.339653,1.153154,-5.121767,-1.749209,2.848664,-0.111152,8.273887,-3.173672,2.133592,6.491791,-0.324656,-9.580887,-3.190296,9.465003,-8.154808,-9.475416,5.366883,-8.931710,5.746185,-7.452653,-5.341954,-8.116219,0.993035,-3.100339,4.136927,7.194496,-7.120704,1.560458,2.436960,-6.114035,-4.880044,-9.821873,-2.014466,0.210914,8.106959,-9.561711,-5.771292,7.212997,1.917143,-9.359575,7.282203,0.689411,8.988264,5.653495,8.059151,-4.617418,-0.447200,5.558360,9.708757,-7.727205,-4.274703,8.922361,-4.139939,1.250610,-5.400876,-8.387940,7.153364,-1.507923,-1.174324,0.247909,4.392948,-9.490244,-5.562833,-9.032219,-7.946311,1.571992,2.200045,-0.581214,1.991403,8.132211,0.119323,-8.628271,8.309552,-9.206994,-0.871055,3.486334,6.163704,0.421900,6.293608,-1.191066,3.225049,6.263080,-2.438347,-6.184915,1.876678,3.148540,8.161564,1.897392,-9.032473,8.101129,6.876942,-9.547859,-9.097540,-9.448888,9.837526,1.666345,-7.409760,7.472645,-2.604167,9.299042,-0.140884,9.554778,-6.614389,-1.358164,-1.258920,2.725691,3.845298,-7.261892,9.787293,9.129261,5.404148,0.481448,3.138710,-1.953446,-4.589592,2.704557,4.119956,4.617577,9.042489,-8.310818,2.490230,1.003533,-0.439716,-2.790987,0.126020,-4.427194,-4.030873,-9.089501,4.476130,-0.779894,-7.198144,-5.887475,-4.237000,0.788705,8.283244,4.294920,3.897182,0.036068,-7.541811,-1.827764,-0.731268,9.511516,-8.150354,-9.804860,-8.106993,-4.806582,3.789626,-7.088627,-8.296016,8.513367,-5.703768,-3.697215,-8.327024,8.310428,7.410397,-9.830776,-9.795308,-4.243489,3.422229,-3.819857,3.132552,8.639241,9.447709,-3.925391,4.759328,-8.486542,-7.586611,-8.732540,-4.572758,-8.379796,8.360967,6.624244,-9.322639,-5.303777,8.765155,7.669661,1.199054,4.072362,1.028704,-2.694822,6.869473,-1.674743,0.069650,-2.296546,-4.713333,8.495714,8.999786,4.080680,7.628994,-4.331765,6.137523,6.357023,-4.406133,3.750406,8.759323,-7.081361,-2.647841,-8.085224,7.225919,-8.915257,9.592919,4.834228,-3.262309,-8.311659,6.797375,-9.591955,0.481105,0.079069,-5.668828,3.827230,2.996906,1.015982,-8.842593,1.937918,-0.160106,5.270664,-3.770795,8.348606,4.782253,-9.108463,-0.326142,4.948459,-8.777657,3.877137,-1.741792,-7.728690,-1.413288,8.477193,-7.006025,1.765723,-7.891169,-0.544089,6.302883,-4.454819,-4.770623,0.212115,8.723566,-4.028128,-4.511534,1.987770,-0.441940,-6.229851,5.523639,7.341435,-2.713373,-7.411082,8.287943,7.985266,-6.383031,5.182725,-4.270288,0.458192,-7.406611,-1.844811,4.226751,3.590364,2.249628,5.866735,0.326002,-5.710338,2.444218,4.232491,-6.571142,9.984829,-5.173035,6.291089,-9.758983,-8.834935,-2.891246,0.597555,-4.983028,0.778236,-0.799034,-3.216564,0.604022,8.275243,-2.272506,6.631818,-4.194786,3.629342,8.852748,8.799021,-0.313379,-9.890736,-1.236796,-2.508384,-9.299469,7.609833,-9.192245,4.583100,-5.035464,-4.020801,6.960474,3.290858,8.549471,-0.799855,3.281399,-8.244167,6.149456,-3.576666,-8.711402,5.601444,-9.102058,8.903148,-9.867542,-9.121966,1.555112,0.505430,-7.053475,-1.979591,-5.276667,6.605783,8.455055,3.889433,-5.405358,-5.024357,-9.038145,-4.519533,-7.753118,-2.744473,-6.702072,-4.817079,9.567039,-0.531006,-4.823103,5.474220,6.048669,3.227303,-8.553817,5.431630,-6.713858,6.886292,5.952470,-4.514639,7.517912,6.238669,6.219568,-1.585257,5.067716,4.701180,4.371508,-2.416863,1.212936,1.808538,-7.592956,-0.346618,3.720599,-6.053851,7.750410,-4.062459,0.979595,-2.055026,0.866943,2.326499,9.569154,7.309043,-5.330932,2.576658,2.652605,9.878529,-8.190525,-4.012689,-8.571289,-5.530236,6.923721,-0.179034,-6.074699,-6.439294,3.488445,3.872353,-7.616778,-8.207514,-5.748157,-2.768012,-0.610026,-5.314946,0.813307,-3.578758,3.686508,-5.899289,-5.749941,5.199406,9.429497,-1.683543,7.924920,-5.148567,-3.509953,-7.765858,-8.681920,-9.491077,4.607358,5.089244,-4.349243,-9.886417], dtype = "float64")#candidate|5739|(468,)|const|float64
bop_5740 = relay.less_equal(const_5719.astype('bool'), relay.reshape(const_5739.astype('bool'), relay.shape_of(const_5719))) # shape=(468,)
output = relay.Tuple([call_5683,call_5709,call_5718,call_5725,bop_5740,])
output2 = relay.Tuple([call_5684,call_5710,call_5720,call_5726,bop_5740,])
func_5749 = relay.Function([], output)
mod['func_5749'] = func_5749
mod = relay.transform.InferType()(mod)
output = func_5749()
func_5750 = relay.Function([], output)
mutated_mod['func_5750'] = func_5750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5666_call = mod.get_global_var('func_5666')
func_5667_call = mutated_mod.get_global_var('func_5667')
call_5790 = relay.TupleGetItem(func_5666_call(), 5)
call_5791 = relay.TupleGetItem(func_5667_call(), 5)
output = relay.Tuple([call_5790,])
output2 = relay.Tuple([call_5791,])
func_5796 = relay.Function([], output)
mod['func_5796'] = func_5796
mod = relay.transform.InferType()(mod)
output = func_5796()
func_5797 = relay.Function([], output)
mutated_mod['func_5797'] = func_5797
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5839 = relay.var("var_5839", dtype = "float32", shape = ())#candidate|5839|()|var|float32
var_5840 = relay.var("var_5840", dtype = "float32", shape = (1, 6, 4))#candidate|5840|(1, 6, 4)|var|float32
bop_5841 = relay.floor_divide(var_5839.astype('float32'), var_5840.astype('float32')) # shape=(1, 6, 4)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5857 = relay.TupleGetItem(func_5085_call(), 2)
call_5858 = relay.TupleGetItem(func_5087_call(), 2)
output = relay.Tuple([bop_5841,call_5857,])
output2 = relay.Tuple([bop_5841,call_5858,])
func_5859 = relay.Function([var_5839,var_5840,], output)
mod['func_5859'] = func_5859
mod = relay.transform.InferType()(mod)
mutated_mod['func_5859'] = func_5859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5859_call = mutated_mod.get_global_var('func_5859')
var_5861 = relay.var("var_5861", dtype = "float32", shape = ())#candidate|5861|()|var|float32
var_5862 = relay.var("var_5862", dtype = "float32", shape = (1, 6, 4))#candidate|5862|(1, 6, 4)|var|float32
call_5860 = func_5859_call(var_5861,var_5862,)
output = call_5860
func_5863 = relay.Function([var_5861,var_5862,], output)
mutated_mod['func_5863'] = func_5863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2581_call = mod.get_global_var('func_2581')
func_2582_call = mutated_mod.get_global_var('func_2582')
call_5877 = relay.TupleGetItem(func_2581_call(), 0)
call_5878 = relay.TupleGetItem(func_2582_call(), 0)
func_1956_call = mod.get_global_var('func_1956')
func_1959_call = mutated_mod.get_global_var('func_1959')
const_5887 = relay.const([[-8.797763,6.996392,-8.411118,-2.750941,3.943555,5.453593,0.710348,-1.583335,-5.570059,3.282238,6.713406,5.346331,6.336972,2.590366,-8.894399,-0.901518,-8.586201,-6.831017,-3.644977,-7.104714,2.425362,9.984676,5.264782,9.484028,-6.528944,-1.749673,-0.692499,-0.289158,-9.644225,8.986464,4.665770,7.004990,-0.393404,-0.298883,6.163710,-0.213337,0.202456,7.850068,6.412891,-7.173878,9.428752,4.914150,-1.253444,1.689957,0.478283,-9.962425,4.231193,4.642485,5.380021,-2.759886,-2.688606,-2.266199,9.398331,-9.076301,-6.497403,-4.103141,-3.008667,3.937732,0.042763,6.850608,-0.798461,-8.759216,-9.434490,3.831612,6.139052,-0.764734,-2.520241,1.394373,-8.369579,4.301441,-7.706406,7.147766,1.918838,-3.237543,0.716174,-7.720741,4.993495,3.593939,-3.719192,5.581700,1.197970,1.173944,-4.131544,3.749298,-4.622841,9.239512,-9.686377,0.848961,-7.493314,-7.800080,-1.654258,4.243757,6.493343,8.549585,1.564387,-6.921320,-9.370610,-4.463684,-7.554767,1.552495,-2.603516,-6.020665,4.824538,4.727083,9.598806,-5.764090,-0.163664,2.665354,-4.323135,7.901807,6.965573,-9.747919,8.261048,2.687072,-7.897106,-7.588109,9.010445,4.117365,2.128736,-7.059373,5.398708,-5.190023,-7.786168,3.576818,-3.158151,-3.161355,-5.975200,0.084363,-6.069208,-9.288568,5.027411,7.072005,9.520050,-5.217519,8.933052,1.649638,2.691440,-9.667656,0.250533,-4.923976,-3.027096,0.658379,-3.633839,-1.031877,4.003346,7.556240,-8.869569,-1.597034,-8.055434,-9.558531,7.958395,-3.387389,4.728221,5.781266,-9.362466,-2.064211],[-4.593622,-9.341883,-9.708878,8.423484,6.815786,-3.938386,-0.760921,9.428153,8.184148,-7.410980,7.336590,5.477409,-6.957690,6.275709,4.862062,9.226430,1.013887,-8.725393,4.228663,-0.174696,-8.083752,-1.483107,6.172129,8.002285,6.263151,2.617296,-6.579784,5.738037,7.731798,-2.567000,-7.553847,5.683600,3.197261,3.095267,9.640486,1.464343,-6.360744,-7.745026,8.522069,3.997081,-3.755818,7.544104,5.558905,3.143334,2.314911,9.522677,1.310134,5.505449,-9.022834,0.167814,-4.354573,-6.664895,-1.499179,-4.731718,-7.081062,-2.731898,6.482497,-7.067002,-6.969262,1.207596,9.180827,0.639059,2.188655,6.119899,1.103200,-5.109305,3.238585,7.370859,2.168273,6.558019,4.670682,-5.485554,2.940150,2.828987,-4.904667,5.784511,-4.184986,2.603113,8.404266,7.325715,9.430249,8.037643,-6.673055,5.339649,-8.127031,-4.698198,-9.774048,-3.946307,6.518110,-4.397654,4.774957,3.986343,-0.941343,2.612541,9.783533,7.920333,-2.352906,6.368322,9.913640,0.974525,6.078035,8.299376,-6.689121,0.369818,3.822884,-6.897377,0.148399,-8.275700,-8.689553,3.760840,1.436985,-5.855581,0.436429,-9.469883,-4.228910,9.331333,0.680108,-8.557794,-9.440352,4.850158,6.909558,-5.253891,7.926851,-2.876613,3.468731,3.037704,-7.658051,-8.076447,5.763929,-2.503064,-1.971625,4.242203,-8.401111,-9.172726,0.040796,0.726911,2.287557,5.502428,-9.786934,-2.371787,-3.318725,-9.323041,7.277121,-6.577440,-2.693227,8.729525,-3.844039,-8.026789,-2.214278,-5.258433,6.119156,-0.127711,4.374701,3.911943,6.428534,5.713570],[-6.766014,1.784344,6.252029,-7.428279,-4.139302,-5.748644,0.650536,-4.238407,5.041205,6.915142,-0.925665,0.524795,-3.047657,3.277043,-4.755635,0.393056,3.432245,6.887038,-3.446112,-1.926285,5.630969,-2.232097,3.195630,-6.811680,6.039602,6.139261,9.973560,1.880355,-4.466374,8.108038,-9.433225,0.644009,0.565663,-3.002020,-9.877901,0.252992,8.723660,-3.461401,-6.044098,-7.335201,1.606281,0.814105,-5.757777,-2.100096,4.883438,-5.009058,-6.146161,8.239192,-6.033568,4.870070,-8.643383,-0.468452,-6.676391,7.464468,6.598955,-2.083371,5.714593,7.459458,5.607415,-9.863622,0.276140,-8.336739,-3.057531,-9.624429,0.252270,-1.224408,-7.078954,3.281221,9.493553,1.428473,-7.057654,1.015220,5.510810,-8.332357,-8.486488,7.780922,0.912545,7.339300,-4.388493,-5.213893,-0.743905,6.953199,9.555784,0.425582,0.192764,7.782743,9.358069,-6.835290,2.312186,0.645821,8.795786,2.295717,-6.549642,9.850691,-2.973309,-1.501756,-2.952255,1.305496,-9.018850,-8.846052,2.638340,-1.364761,7.887714,5.233195,6.734788,-7.568093,-6.635799,4.103452,4.648158,5.408042,-6.121392,-9.885766,1.758897,-3.380965,-7.799954,-3.176790,-5.183676,-5.112141,2.036694,-1.085010,-9.538505,5.906396,-6.113847,9.959637,6.355673,-8.947980,-8.749196,-0.307788,-3.323756,-0.999399,-8.348441,2.283528,9.424860,-5.030322,8.886041,2.646682,2.149192,-2.695100,0.205774,2.234181,-5.560931,-3.978059,-2.370713,8.093426,5.373254,-5.610403,-4.783422,-8.848145,3.329037,-5.182138,9.526744,1.648695,-9.777497,-0.429833,3.400328,6.715525],[4.772901,5.923856,-1.763483,0.077114,-5.721046,8.310536,3.926028,-8.014795,-4.754803,7.295059,-0.583794,5.902943,9.322145,-1.823596,0.620847,-7.691597,7.280104,1.467914,-4.908744,5.528173,-8.977990,2.802533,-2.217190,-4.488923,-8.928751,-4.874810,-8.254210,-2.499308,2.473207,8.417382,-7.140333,-5.227268,6.479922,3.707648,-5.854910,-9.738690,-6.847054,-0.617792,5.302961,2.410567,-3.186314,-5.265919,4.859980,-6.844264,1.712776,-8.857410,-2.250686,3.658673,-2.008789,2.723604,8.158396,8.660450,-3.339268,-4.911866,-4.133510,5.992297,2.474872,-4.056775,-9.143128,5.967185,-0.253489,1.670666,-4.605344,-4.788663,-5.524842,8.785449,4.692281,3.801375,-0.966414,6.150255,6.227248,-7.105064,-9.481541,-9.248449,7.311721,-4.787819,4.439724,-0.089119,-2.242800,-5.069892,6.901165,-6.783541,-1.052849,-6.728809,0.372506,4.478426,-8.191307,0.783791,-4.283632,-7.135953,7.626057,8.732995,-0.204747,7.893001,-9.288482,0.983220,7.312914,-3.335503,2.547566,5.534074,-8.534669,-5.086867,-0.780311,0.232152,9.860904,-2.080616,-3.100493,1.684380,-7.845794,3.931378,-7.701510,-4.681808,-5.464286,3.456304,4.724071,-5.217593,0.682069,-6.231540,-5.744988,0.961881,5.226636,3.722592,9.767921,2.855763,4.965113,8.705424,0.839549,8.762477,-7.772823,-2.845038,3.319594,-7.529010,1.819171,-2.362432,-2.947708,0.831321,-1.902385,-9.915323,7.768886,9.376768,-3.406362,-4.579012,-6.079177,-9.779892,-8.233450,-0.031378,9.735677,-3.106600,6.677638,2.005909,-6.405702,-6.262849,9.690697,2.266945,-8.607810,5.837896],[1.006917,-9.040082,6.727111,-4.069521,4.796694,-5.623688,4.975848,4.580833,9.933449,1.006333,6.276512,-1.884264,-0.010424,0.315895,-6.722470,2.536145,-5.345155,7.422077,-7.837159,3.777249,-1.345093,9.568263,9.786966,8.904190,4.016416,-5.276773,-7.965702,5.364413,-6.172586,5.558883,9.408483,-7.559251,-6.656596,7.342276,-6.799997,9.692087,-6.813125,-0.781178,7.486081,6.346550,-8.670129,-0.313938,-7.842962,0.050068,-4.015096,-9.349356,-3.779123,-0.505715,-9.404526,4.041781,-7.646228,-6.650662,2.368491,-2.915630,-0.456016,0.867013,-3.521452,6.193754,6.143527,2.004702,3.278393,7.214363,6.671773,-8.213461,-7.700593,-0.062751,-9.713442,0.741242,9.347278,2.721441,6.833359,5.380710,-6.354437,5.341024,8.938255,3.334966,-2.060031,-1.528720,-6.214191,7.162941,0.834053,-2.391249,-3.142647,6.794897,0.710129,1.384671,-0.171188,-9.879091,7.401382,-5.441730,8.897906,4.971654,7.151435,4.699167,0.721665,-9.723268,-1.442729,-2.034640,-8.685047,-7.340195,-7.064164,5.657499,-6.895510,4.145586,3.432120,5.450219,-8.385570,-5.314821,-3.813092,8.509149,-1.190597,-5.776448,-2.143311,-1.616087,2.813577,9.442751,-1.160799,-1.754703,-0.896619,7.487302,9.139553,-7.972118,9.900169,2.109165,-3.572004,7.273663,-5.170117,1.178318,3.768532,-4.680860,1.659434,-6.213218,-2.494189,-2.770318,9.978774,-1.183121,-6.509106,-6.916352,5.395354,-9.397620,-7.561062,-3.402122,8.008772,-1.591208,3.381082,4.677502,-4.597383,2.042286,-2.630485,2.510796,2.737808,5.136035,7.581189,8.441480,3.360369,-6.691963],[-9.152161,4.763150,1.609343,-6.848365,-0.075296,3.901926,1.833860,6.371820,-9.487925,0.701859,-2.764482,-5.077052,-3.072304,-5.488865,3.759763,-3.584790,0.509781,0.046642,4.673236,-3.959641,-1.254836,-1.417934,-9.049016,3.597614,-5.900768,-2.946491,0.354721,-0.451369,-6.669138,-7.035695,-1.826901,2.923243,-5.063446,-6.963449,-9.559839,1.843961,-2.186474,6.842918,2.241399,7.978277,9.680154,-1.630070,-3.646461,2.701514,0.416810,-3.773679,-6.498335,1.256897,8.715782,-5.190139,-1.430354,-7.189896,4.893613,5.766430,-5.958801,-4.086387,-0.187356,5.015475,-3.552869,-9.122642,-9.181079,3.335682,-1.280233,0.240200,-7.880354,-0.731716,4.206146,6.613104,-6.299325,5.513693,6.320327,-8.236312,-4.289672,2.080910,-6.381265,-7.594079,-9.656804,5.912683,-7.845367,-4.587528,-7.272113,-7.143210,3.085882,-1.910714,-7.929573,9.221003,-1.256478,-4.141124,6.463930,1.801350,9.413431,-2.279382,8.132934,-7.888442,-2.208502,-2.629319,7.719762,-9.205957,-2.658145,-9.846146,-3.794977,-7.810923,-7.852446,4.648294,-4.363183,5.412114,-1.517643,-3.792574,-8.939526,3.558704,0.179282,2.295087,-2.690154,-5.317239,4.116979,-7.797795,-1.486606,-9.452494,3.576918,-3.426764,-8.638912,9.230761,0.778868,-5.226208,-2.773682,-2.290016,5.198949,8.382433,7.315984,-1.145192,-6.530283,-2.340568,2.492831,6.342879,-0.809894,6.756457,-7.989333,8.327338,-3.098618,8.886264,6.635010,-3.737055,1.869505,6.869347,5.293830,5.767347,-9.139054,-0.768501,-4.470904,-5.984092,5.995396,8.883177,-0.307340,3.908829,-5.688411,6.311270],[-1.742071,-4.427739,5.936193,-8.444881,9.025767,5.346373,3.483823,-1.823965,4.595937,-5.696731,-8.861392,-3.064130,-0.148704,9.730364,-9.141987,0.767657,-3.836252,3.331690,4.689852,8.699825,2.560379,-2.748204,-1.099707,6.102834,2.444471,2.887442,9.069830,-3.498426,2.686056,7.015179,-3.818739,4.620563,-8.837945,3.359763,-4.039748,6.309147,2.908769,3.036119,-2.883222,8.024326,-6.978253,1.413892,8.171418,-8.830295,9.119999,-6.900406,-5.092440,-9.587136,-3.187012,-0.713405,-7.943631,5.737311,2.569854,-7.999235,6.728024,0.253828,-6.370754,0.178304,-0.127655,-5.001935,2.308748,8.327864,-2.568630,3.647526,1.023133,-7.388873,8.316553,7.908814,-6.955170,-8.211763,-5.229012,8.799127,-0.608190,-1.708898,-0.990907,-0.347406,2.257753,0.350770,4.408277,9.747255,-3.265212,1.159371,2.598347,-0.796781,-2.640644,0.162081,-6.877117,3.195550,8.779064,4.290574,-6.455550,-0.699755,-8.555102,-6.331391,-7.690107,-8.794304,2.177525,-5.758809,3.035661,-3.085497,8.495964,-3.425614,-1.724999,-0.870969,0.474341,-2.422725,8.915156,4.981947,-7.519379,7.156802,9.056280,-8.505971,0.841182,1.631103,5.530099,-5.706297,6.230964,8.385519,-7.377064,-8.015041,6.322216,-7.856415,6.865010,-6.933542,3.110562,-9.368831,-2.415461,8.338907,0.632453,-9.012436,-3.439989,5.922536,5.843413,5.674992,-2.709677,3.000546,-8.172010,-0.190743,9.671326,-1.472921,-6.017090,-7.098502,6.440385,9.032344,-5.167988,8.873936,-3.391107,3.100439,4.138428,-3.830418,-9.948941,-8.800074,8.971244,-5.355445,3.474104,1.163738],[1.121379,-7.667828,0.207651,9.851733,4.658727,-6.247740,3.439977,4.226940,-1.578300,-6.806296,9.719312,-3.544811,0.606186,-8.446318,3.966383,-4.779536,3.604635,1.142616,-0.327830,-5.305795,4.655716,-7.040033,-9.057907,-4.349827,7.922036,9.647466,7.178599,4.030178,-5.613752,9.580103,6.473924,-2.206116,6.687566,0.270772,-7.333950,0.451748,-9.558192,-1.426228,-5.297471,1.237047,7.403860,-8.867839,-3.056512,2.910901,9.909912,-9.777860,1.654553,4.650880,-7.207465,-4.837317,7.085769,9.421796,2.368437,-6.061081,-1.747499,2.417917,9.193072,-2.881487,8.033664,-0.028966,-5.825380,5.424850,-8.568204,-2.787838,7.697763,6.562915,1.889031,-4.506295,0.808578,-4.741415,1.814123,9.784551,5.057012,-1.746933,-8.013368,-8.687795,-7.670351,-7.006781,-2.158811,5.194232,0.568182,-8.376243,9.947479,-1.650671,-9.214683,-2.384994,-6.314237,-1.793912,5.731333,7.190776,8.532334,5.671320,7.192477,-6.996558,-1.644149,-8.541035,2.485353,-8.404847,0.114204,9.293233,8.002844,2.285187,3.734512,-0.421486,0.850255,-2.211515,0.956715,-1.813861,5.349458,-4.702846,-3.888276,-0.234482,-2.539794,3.100540,1.185756,3.093842,-0.551166,-1.417233,-4.082583,6.655639,-7.802692,-5.897392,9.328087,8.945688,-0.699906,-1.409257,-9.410677,-9.467629,-7.722296,-7.575645,-4.851310,-1.669662,1.467013,-0.445261,9.084844,0.922315,-2.137919,4.805557,-3.432025,-0.303504,3.312277,0.315807,3.453969,-1.840379,9.778915,2.511623,-7.388331,0.635702,8.528218,1.904479,3.537167,-7.584508,-9.500913,9.494678,-8.261525,7.680000],[-9.011074,1.421361,-2.799168,9.707183,4.915844,4.417463,8.118215,0.999431,3.487533,2.773585,6.635714,-0.577574,-4.991063,-4.715073,8.019780,-2.666724,-6.888956,-0.324096,2.081937,7.105748,-1.416604,-2.583825,6.493736,-2.515465,-2.457432,7.304660,-8.381755,0.955220,5.715669,8.547966,-2.375015,-2.100338,-5.908855,0.710825,4.009655,-7.187421,-4.839255,6.193912,-3.915533,-3.930069,7.692234,-9.469050,5.706884,-4.351812,9.513642,3.905667,0.216569,-8.697606,-3.986389,5.145265,-6.089624,-3.186452,-2.480879,-9.704036,7.923908,7.345672,-7.768474,-7.837604,-0.697348,-7.857960,6.815181,0.206683,-8.046121,-9.077625,6.100317,-7.740570,5.771733,-3.076117,-4.265086,-4.524367,7.309596,-1.531694,5.257194,6.154185,-2.550224,6.568304,-1.282705,-5.796938,-2.143845,0.479751,1.069287,-5.925157,-5.399319,-1.702993,4.157233,6.955313,8.236366,8.614298,-3.150477,-2.397698,-1.916151,-3.780549,-2.834468,8.136216,8.684884,-5.441848,-1.398323,2.161126,-5.733429,8.921940,-9.303746,-5.502700,2.867289,-3.860523,6.701097,-3.450658,-4.177955,-8.485216,0.077833,-5.062940,-1.338664,8.646522,1.536229,-7.146367,2.712131,5.319672,-9.808079,1.870230,9.984935,9.899919,-7.460082,7.209769,0.781067,5.848734,8.379804,7.217495,-2.340790,8.541087,-0.705698,3.685493,8.220091,3.393609,5.046547,8.445167,9.792149,1.766564,-3.055124,-8.197205,-4.953863,7.315518,5.532652,7.585928,8.748208,1.036740,-5.571083,2.427006,-4.223516,6.434656,0.885293,-7.111474,-4.988237,-4.989267,-8.511688,-7.641601,-3.965126,7.434973]], dtype = "float64")#candidate|5887|(9, 156)|const|float64
call_5886 = relay.TupleGetItem(func_1956_call(relay.reshape(const_5887.astype('float64'), [12, 9, 13])), 0)
call_5888 = relay.TupleGetItem(func_1959_call(relay.reshape(const_5887.astype('float64'), [12, 9, 13])), 0)
uop_5891 = relay.rsqrt(call_5886.astype('float64')) # shape=(12, 9, 13)
uop_5893 = relay.rsqrt(call_5888.astype('float64')) # shape=(12, 9, 13)
uop_5904 = relay.log2(const_5887.astype('float64')) # shape=(9, 156)
bop_5909 = relay.equal(const_5887.astype('bool'), relay.reshape(uop_5891.astype('bool'), relay.shape_of(const_5887))) # shape=(9, 156)
bop_5912 = relay.equal(const_5887.astype('bool'), relay.reshape(uop_5893.astype('bool'), relay.shape_of(const_5887))) # shape=(9, 156)
output = relay.Tuple([call_5877,uop_5904,bop_5909,])
output2 = relay.Tuple([call_5878,uop_5904,bop_5912,])
func_5918 = relay.Function([], output)
mod['func_5918'] = func_5918
mod = relay.transform.InferType()(mod)
output = func_5918()
func_5919 = relay.Function([], output)
mutated_mod['func_5919'] = func_5919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5990 = relay.TupleGetItem(func_5085_call(), 1)
call_5991 = relay.TupleGetItem(func_5087_call(), 1)
var_5994 = relay.var("var_5994", dtype = "float64", shape = (256, 2))#candidate|5994|(256, 2)|var|float64
bop_5995 = relay.add(call_5990.astype('uint64'), relay.reshape(var_5994.astype('uint64'), relay.shape_of(call_5990))) # shape=(256, 2)
bop_5998 = relay.add(call_5991.astype('uint64'), relay.reshape(var_5994.astype('uint64'), relay.shape_of(call_5991))) # shape=(256, 2)
func_3069_call = mod.get_global_var('func_3069')
func_3072_call = mutated_mod.get_global_var('func_3072')
var_6003 = relay.var("var_6003", dtype = "uint8", shape = (700,))#candidate|6003|(700,)|var|uint8
call_6002 = relay.TupleGetItem(func_3069_call(relay.reshape(var_6003.astype('uint8'), [5, 10, 14]), relay.reshape(var_6003.astype('uint8'), [5, 10, 14]), ), 0)
call_6004 = relay.TupleGetItem(func_3072_call(relay.reshape(var_6003.astype('uint8'), [5, 10, 14]), relay.reshape(var_6003.astype('uint8'), [5, 10, 14]), ), 0)
output = relay.Tuple([bop_5995,call_6002,var_6003,])
output2 = relay.Tuple([bop_5998,call_6004,var_6003,])
func_6006 = relay.Function([var_5994,var_6003,], output)
mod['func_6006'] = func_6006
mod = relay.transform.InferType()(mod)
var_6007 = relay.var("var_6007", dtype = "float64", shape = (256, 2))#candidate|6007|(256, 2)|var|float64
var_6008 = relay.var("var_6008", dtype = "uint8", shape = (700,))#candidate|6008|(700,)|var|uint8
output = func_6006(var_6007,var_6008,)
func_6009 = relay.Function([var_6007,var_6008,], output)
mutated_mod['func_6009'] = func_6009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5666_call = mod.get_global_var('func_5666')
func_5667_call = mutated_mod.get_global_var('func_5667')
call_6121 = relay.TupleGetItem(func_5666_call(), 4)
call_6122 = relay.TupleGetItem(func_5667_call(), 4)
output = call_6121
output2 = call_6122
func_6129 = relay.Function([], output)
mod['func_6129'] = func_6129
mod = relay.transform.InferType()(mod)
mutated_mod['func_6129'] = func_6129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6129_call = mutated_mod.get_global_var('func_6129')
call_6130 = func_6129_call()
output = call_6130
func_6131 = relay.Function([], output)
mutated_mod['func_6131'] = func_6131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5796_call = mod.get_global_var('func_5796')
func_5797_call = mutated_mod.get_global_var('func_5797')
call_6289 = relay.TupleGetItem(func_5796_call(), 0)
call_6290 = relay.TupleGetItem(func_5797_call(), 0)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_6297 = relay.TupleGetItem(func_2981_call(), 0)
call_6298 = relay.TupleGetItem(func_2982_call(), 0)
output = relay.Tuple([call_6289,call_6297,])
output2 = relay.Tuple([call_6290,call_6298,])
func_6342 = relay.Function([], output)
mod['func_6342'] = func_6342
mod = relay.transform.InferType()(mod)
mutated_mod['func_6342'] = func_6342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6342_call = mutated_mod.get_global_var('func_6342')
call_6343 = func_6342_call()
output = call_6343
func_6344 = relay.Function([], output)
mutated_mod['func_6344'] = func_6344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2636_call = mod.get_global_var('func_2636')
func_2638_call = mutated_mod.get_global_var('func_2638')
call_6352 = relay.TupleGetItem(func_2636_call(), 0)
call_6353 = relay.TupleGetItem(func_2638_call(), 0)
const_6363 = relay.const([[[-0.926207,4.896656,0.466094,0.739960,2.829966,4.475749,9.988700,2.502124],[9.228153,-7.167850,3.666109,0.340121,3.424486,3.592029,5.075145,-8.009036],[-1.826398,9.124592,0.821191,9.503802,2.175425,-2.127534,6.859235,4.286890],[2.997757,-3.686882,0.806633,5.545608,6.537708,6.604991,0.986858,-5.232620],[8.790343,2.489818,5.534788,-8.052791,-9.636302,9.937923,-1.177364,-6.625281],[6.676790,-8.491709,-8.920980,7.469558,2.142416,1.930155,9.649772,-9.775557],[2.075630,0.084656,-4.156427,3.989230,-9.415220,-7.198485,3.846584,4.935186],[0.303110,-2.950310,1.591116,8.788957,-0.900139,1.439568,0.023867,7.453754],[-8.751297,5.883997,-8.461228,6.737495,0.472253,3.391240,-6.225048,1.569981],[-9.953808,-4.208534,-6.800133,-8.678781,-0.489490,-2.715497,6.288848,-5.350096],[-8.113969,-5.759354,-9.637213,6.379972,8.981969,-2.033420,2.783505,-3.413565]],[[1.911685,4.270341,-0.122113,9.998452,-9.171374,-7.743628,6.866147,2.769836],[-2.441614,-9.213756,6.973864,6.125898,-0.083874,-8.049718,0.610203,1.459337],[6.307254,-6.546720,8.511869,-5.988453,3.492725,4.385550,2.253851,-8.078367],[9.581566,-2.741345,4.590243,4.311728,-7.960287,7.931884,-9.961051,-7.336341],[-2.128917,-0.098971,-1.455418,8.686272,6.923313,-8.400424,2.980049,5.521264],[5.210053,7.139969,5.230114,-7.742189,-7.195691,0.182945,3.856501,3.453559],[0.274044,0.398802,-8.713043,7.808657,2.064920,9.704013,4.665630,5.552508],[-1.731654,9.026304,-2.435224,2.780343,3.746762,2.995597,8.908356,-4.199194],[-9.910117,-6.787193,-2.929976,5.967229,-2.456445,-8.772933,1.425349,-0.329682],[-6.869445,0.237048,-5.468139,-7.490475,8.488713,-9.787687,-3.959328,1.163982],[-7.506788,3.691335,-0.896838,-7.137104,0.774750,-6.714364,6.377936,9.267826]],[[-5.140604,-5.841499,0.753720,-0.900925,-1.576794,4.782043,-0.616994,-0.949923],[5.693484,1.999292,-8.823116,-8.501992,2.960375,-0.069658,7.997332,-5.811009],[-9.020102,-6.090003,9.999641,-0.174001,4.089457,-5.085892,4.681902,-6.776245],[9.929459,-8.685672,-7.439971,8.881134,8.414211,-9.296587,5.391545,-2.710157],[8.509709,-6.641950,0.849518,-1.990974,-1.229408,-3.715528,9.325239,-2.685396],[3.988541,-1.467173,5.620782,2.681328,6.720881,-6.926767,-3.052158,-4.898705],[1.584055,8.854323,-5.856826,-4.036766,-5.471135,-5.033721,8.390583,-3.032125],[2.851344,-1.164138,7.634448,0.865959,6.172886,4.185014,-0.297265,9.845910],[-0.156793,-9.670698,6.493181,-5.895830,-8.149235,4.365623,4.182834,-3.477207],[9.167400,-1.594073,-5.418527,4.130233,0.402218,9.929018,6.138748,1.878671],[6.206933,-8.685431,-1.963246,7.309869,8.876266,9.653403,-7.523773,5.582423]],[[-7.382484,-9.515910,8.420559,5.527094,7.239086,-5.979337,0.774857,-3.144727],[8.285756,3.072862,4.226996,-2.030029,-8.449467,-1.138266,3.635755,-7.296353],[6.971993,-1.363948,-0.320056,3.438248,9.174938,-2.948425,5.872602,8.228112],[0.495575,9.956580,1.287195,6.393993,0.412273,5.758922,5.632500,-3.448441],[-2.684253,7.932013,-1.131446,-4.995774,-5.990566,1.128469,-9.278416,5.044231],[9.912121,-0.935731,-6.254996,-6.775813,5.988817,2.348996,2.798216,9.925952],[-0.538074,0.219828,1.590722,-1.922213,-3.577117,-8.194452,1.307578,4.976713],[-0.050674,5.100877,2.251245,-7.502733,8.160331,-9.152369,2.196565,5.010381],[-0.711906,9.042430,-6.456846,-2.029858,3.784589,8.929863,-4.341729,8.995159],[8.903327,0.407286,2.018648,6.624910,7.847227,4.903973,-9.164387,6.836400],[7.116799,-7.798392,-2.602232,6.662616,8.907467,-0.510956,4.044993,-2.517061]],[[5.105782,4.782356,7.329930,5.386803,-1.295116,-4.892852,7.411427,-1.348347],[-0.898639,9.894052,2.977771,-6.724062,9.510806,-1.052644,-2.820235,3.650146],[-6.989106,-2.050845,-9.940040,7.648297,5.812060,5.558239,2.399883,7.980877],[-0.495445,-8.743432,7.814538,1.770732,-7.642200,1.174149,-1.949397,-6.136811],[-6.923793,3.369458,-8.462818,4.189165,-2.770732,0.739923,-1.700056,1.338077],[5.497423,-2.574810,-9.614423,2.800818,0.341949,4.330772,-3.421503,5.739682],[7.093954,1.438296,7.232947,9.293810,6.127838,0.362562,3.363410,-6.775559],[-9.782398,-5.435245,-6.270154,4.526280,-3.187198,-2.874825,-1.573122,7.685788],[-1.875716,-1.040648,-1.810851,1.174465,-4.025713,9.819404,8.711981,-0.555562],[7.640874,-4.776739,-3.040231,3.914478,-9.702180,0.919923,8.085798,-3.032335],[0.461855,3.272085,-4.667280,3.574466,0.378612,3.240938,8.282363,0.924167]],[[-7.692432,-5.340664,3.642323,2.270723,4.995447,4.600073,-5.262117,-1.190311],[-2.522567,3.156930,-2.583761,6.681803,2.728673,-6.783720,-1.116309,0.963383],[9.223939,2.711949,-6.910652,9.176625,-3.418370,-1.367254,-5.285111,-4.571800],[0.023760,-3.656093,6.799170,5.715394,-7.464305,8.256438,8.188030,7.059875],[-1.885078,-6.948701,2.085167,2.567826,-7.275778,-1.383687,-1.804004,0.554122],[-0.265510,-2.076414,3.926440,0.815114,7.080920,-2.775194,3.894782,-9.164692],[-6.159360,-8.665006,-6.380073,3.082457,-3.789348,0.050781,2.662646,-0.956279],[-0.775299,9.019729,-1.532376,6.454228,9.619383,0.078317,8.110154,-1.316325],[-9.895588,-4.479518,-1.541747,0.309492,5.290017,-4.216607,5.994144,2.035243],[2.741986,8.307562,4.327255,8.519401,-2.148621,8.683841,-9.745520,0.149196],[7.798602,4.050057,-6.380766,-6.833635,-9.560801,-4.398652,2.720105,8.406688]],[[-0.308717,-4.461349,-0.002779,-0.848067,-5.921314,-6.256193,1.412954,7.295520],[9.163060,9.323768,8.501733,-0.779956,-5.253490,9.879722,-3.127751,-5.287575],[5.972811,-9.495920,-6.990443,-1.674137,-5.341105,-7.162772,6.187829,-6.645214],[-2.169827,-0.794339,3.781021,5.997747,0.632889,1.999030,-7.115634,-4.705067],[5.257220,0.785548,0.994286,-1.276160,-0.869437,9.585560,7.027217,9.193368],[0.185321,4.220068,-1.356256,-7.670440,-0.645282,9.023032,6.016323,-9.447586],[-7.256488,4.961235,-7.704816,1.745340,-1.122429,-5.051630,5.545492,2.037978],[6.400557,7.913810,-0.817336,0.192889,-9.844517,6.974199,-2.841954,-4.296568],[5.281562,-2.825305,4.499558,-1.963683,-9.837796,5.986073,-7.837749,3.456562],[-0.596765,2.842749,-8.206151,6.154718,7.016154,4.240172,-4.517986,-1.180719],[7.244548,1.152405,7.158246,-5.567271,-7.084258,8.683863,-1.032968,-3.342170]],[[8.439360,8.091569,-1.804109,-4.666991,2.742270,6.796346,7.158970,1.229611],[-2.217233,-1.791260,7.430905,-9.151883,-2.538072,-3.821888,-3.440642,5.638516],[9.888075,4.157492,3.786776,3.641112,4.672694,1.398705,4.209102,8.546245],[1.012538,6.025969,-8.790557,7.964331,7.942893,-8.500313,-7.079186,7.063960],[-8.618917,-9.111582,2.074567,6.394897,-8.762706,2.353458,6.013260,-3.024573],[-3.655937,4.393835,2.731327,-2.653115,8.825905,-8.402728,-7.928726,7.731603],[-2.318234,0.849062,2.352470,0.359446,5.477126,3.862582,4.668930,2.725940],[2.481487,6.104006,4.188742,0.393851,-6.067775,9.157269,-1.290150,7.222358],[-9.449580,-0.862619,1.613674,6.473423,-7.615016,-0.903183,-9.850548,-5.901912],[-3.494685,-8.547318,3.529425,-5.297615,9.951624,-2.079715,-9.589687,5.397940],[-9.138257,7.005076,2.056482,-1.025797,8.653365,7.812719,1.971142,-6.404757]],[[0.863326,0.063422,-1.925452,-9.672064,8.110343,6.565008,7.684694,-4.973751],[-5.701313,8.563918,1.115816,-4.987343,-5.190789,-4.657584,4.181459,-7.922941],[-4.150407,7.100509,9.503137,-0.639873,-0.873639,8.845378,-6.052417,-6.025456],[1.923273,-9.363812,1.203273,7.163502,2.037266,6.679388,-9.790226,5.550177],[-8.371130,-2.026406,8.015939,-5.310784,-8.074331,1.112739,-3.520316,-8.158987],[1.072398,-2.763968,2.535747,5.032903,2.122878,3.387468,-8.532898,-0.128759],[4.026058,-2.543183,-9.367700,-9.634142,-4.223441,4.075011,9.623228,-5.582420],[6.733995,-5.956605,4.686221,6.963591,-0.017644,-4.196387,0.879599,5.020305],[3.983136,5.729190,5.025509,5.198153,1.957466,-6.108886,-6.764183,-3.325476],[4.112703,-1.102048,-0.886436,6.542594,-0.253871,7.466449,3.035203,-6.442354],[-7.421344,-0.807126,8.475137,-3.512420,-8.177449,-6.465213,3.827613,-7.900560]],[[2.784536,8.330780,-4.244463,-5.264047,4.228900,3.276048,7.999748,8.135478],[6.303986,1.971552,3.078821,-5.920697,-2.126859,-2.969506,0.318965,-0.978411],[2.502429,-0.786420,-7.858200,-7.017761,-9.123069,-4.523448,4.301906,4.850826],[2.511639,-8.343915,-4.170529,2.604076,4.977574,7.746285,-9.103456,7.314117],[8.175156,-2.098796,-5.029490,2.603681,-2.079743,-3.052967,-5.594043,-7.708573],[-4.097486,-2.799842,8.084227,4.834752,-6.543708,3.846146,-7.792924,-7.781526],[-3.491371,-5.882180,-1.200419,0.753558,6.300021,-9.197839,-7.204071,-7.043339],[1.648994,6.826106,-6.203367,3.821743,1.830858,0.814362,5.229388,-0.274078],[-6.720643,2.072448,-8.124708,6.061714,-6.912539,3.758112,3.347207,-5.627937],[3.665911,5.435754,-7.284889,-7.649633,-8.348049,-4.527912,7.002307,6.264123],[9.055544,-2.122629,-9.382009,1.010930,-0.993521,3.906314,-4.821423,-2.283414]]], dtype = "float64")#candidate|6363|(10, 11, 8)|const|float64
bop_6364 = relay.subtract(call_6352.astype('uint32'), relay.reshape(const_6363.astype('uint32'), relay.shape_of(call_6352))) # shape=(10, 11, 8)
bop_6367 = relay.subtract(call_6353.astype('uint32'), relay.reshape(const_6363.astype('uint32'), relay.shape_of(call_6353))) # shape=(10, 11, 8)
var_6369 = relay.var("var_6369", dtype = "float64", shape = (10, 11, 8))#candidate|6369|(10, 11, 8)|var|float64
bop_6370 = relay.left_shift(const_6363.astype('uint32'), relay.reshape(var_6369.astype('uint32'), relay.shape_of(const_6363))) # shape=(10, 11, 8)
var_6377 = relay.var("var_6377", dtype = "float64", shape = (10, 11, 8))#candidate|6377|(10, 11, 8)|var|float64
bop_6378 = relay.logical_or(const_6363.astype('bool'), relay.reshape(var_6377.astype('bool'), relay.shape_of(const_6363))) # shape=(10, 11, 8)
uop_6393 = relay.rsqrt(call_6352.astype('float64')) # shape=(10, 11, 8)
uop_6395 = relay.rsqrt(call_6353.astype('float64')) # shape=(10, 11, 8)
func_1899_call = mod.get_global_var('func_1899')
func_1903_call = mutated_mod.get_global_var('func_1903')
const_6397 = relay.const([False,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False], dtype = "bool")#candidate|6397|(80,)|const|bool
const_6398 = relay.const([7.108724,8.736053,8.197777,6.638286,7.346608,-9.772493,1.257984,-8.140609,-4.512850,-0.081277,6.858181,7.450278,1.606602,7.994484,-7.755690,-6.795161,9.192147,-5.846879,-7.371757,3.274824,-5.524361,-9.955993,-8.900689,-8.699587,1.204641,-8.480805,-2.661060,3.313007,4.268109,8.146921,-7.330426,4.010599,2.568901,2.343729,-2.211748,5.670797,-0.771562,-4.498354,-9.166513,4.368958,9.433557,6.174559,0.218361,-4.558037,1.678809,-1.200992,3.210710,7.043398,9.288226,-2.520580,-0.712447,-2.214319,-6.974096,5.203947,6.364562,-3.989297,-2.372624,8.921219,-9.218808,-3.873771,8.192984,-9.924533,4.953238,4.020392,-7.116550,-8.583301,3.655404,5.838186,5.487944,-4.935249,4.815821,-1.639065,-4.866426,6.912124,0.074661,-7.117405,-8.694411,9.799459,0.334491,-0.021021,1.671453,-4.063388,4.356452,-6.484505,-2.011220,-9.134505,9.642765,-0.931869,-9.958292,-5.196541,7.004734,-3.016540,5.293009,2.682260,-4.429053,-0.620902,-4.904131,-3.623198,-3.092349,3.500132,8.449468,-4.974575,-1.800552,4.482870,-2.425470,-1.331081,-2.137632,1.116510,-7.538243,-2.021672,-7.854049,-7.377907,4.456879,3.229882,3.599792,7.864820,-1.997486,7.958473,-3.646241,6.258026,5.211293,-1.398049,-4.374388,4.507886,8.945087,5.929977,2.518142,-0.527353,-2.184319,-9.275422,-0.049542,-2.798990,-5.139145,7.904385,-0.984991,9.793617,-9.047064,-3.553515,-6.277950,-3.779855,3.390769,2.319861,1.551561,-4.255153,7.742047,-1.477685,-3.301698,-0.533467,-8.720936,6.029684,-8.426104,-4.114324,-9.932707,8.993719,8.579147,-0.775278,7.324677,9.085573,-8.828621,-7.237278,-9.191002,9.722583,-5.763978,0.179099,-1.308764], dtype = "float64")#candidate|6398|(165,)|const|float64
call_6396 = relay.TupleGetItem(func_1899_call(relay.reshape(const_6397.astype('bool'), [4, 4, 5]), relay.reshape(const_6397.astype('bool'), [4, 4, 5]), relay.reshape(const_6398.astype('float64'), [165,]), ), 1)
call_6399 = relay.TupleGetItem(func_1903_call(relay.reshape(const_6397.astype('bool'), [4, 4, 5]), relay.reshape(const_6397.astype('bool'), [4, 4, 5]), relay.reshape(const_6398.astype('float64'), [165,]), ), 1)
uop_6408 = relay.sigmoid(uop_6393.astype('float32')) # shape=(10, 11, 8)
uop_6410 = relay.sigmoid(uop_6395.astype('float32')) # shape=(10, 11, 8)
output = relay.Tuple([bop_6364,bop_6370,bop_6378,call_6396,const_6397,const_6398,uop_6408,])
output2 = relay.Tuple([bop_6367,bop_6370,bop_6378,call_6399,const_6397,const_6398,uop_6410,])
func_6419 = relay.Function([var_6369,var_6377,], output)
mod['func_6419'] = func_6419
mod = relay.transform.InferType()(mod)
var_6420 = relay.var("var_6420", dtype = "float64", shape = (10, 11, 8))#candidate|6420|(10, 11, 8)|var|float64
var_6421 = relay.var("var_6421", dtype = "float64", shape = (10, 11, 8))#candidate|6421|(10, 11, 8)|var|float64
output = func_6419(var_6420,var_6421,)
func_6422 = relay.Function([var_6420,var_6421,], output)
mutated_mod['func_6422'] = func_6422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6443 = relay.var("var_6443", dtype = "float32", shape = (7, 15, 1))#candidate|6443|(7, 15, 1)|var|float32
var_6444 = relay.var("var_6444", dtype = "float32", shape = (7, 15, 1))#candidate|6444|(7, 15, 1)|var|float32
bop_6445 = relay.divide(var_6443.astype('float32'), relay.reshape(var_6444.astype('float32'), relay.shape_of(var_6443))) # shape=(7, 15, 1)
func_5266_call = mod.get_global_var('func_5266')
func_5267_call = mutated_mod.get_global_var('func_5267')
call_6448 = relay.TupleGetItem(func_5266_call(), 1)
call_6449 = relay.TupleGetItem(func_5267_call(), 1)
output = relay.Tuple([bop_6445,call_6448,])
output2 = relay.Tuple([bop_6445,call_6449,])
func_6452 = relay.Function([var_6443,var_6444,], output)
mod['func_6452'] = func_6452
mod = relay.transform.InferType()(mod)
mutated_mod['func_6452'] = func_6452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6452_call = mutated_mod.get_global_var('func_6452')
var_6454 = relay.var("var_6454", dtype = "float32", shape = (7, 15, 1))#candidate|6454|(7, 15, 1)|var|float32
var_6455 = relay.var("var_6455", dtype = "float32", shape = (7, 15, 1))#candidate|6455|(7, 15, 1)|var|float32
call_6453 = func_6452_call(var_6454,var_6455,)
output = call_6453
func_6456 = relay.Function([var_6454,var_6455,], output)
mutated_mod['func_6456'] = func_6456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6463 = relay.var("var_6463", dtype = "float32", shape = (9, 3, 14))#candidate|6463|(9, 3, 14)|var|float32
uop_6464 = relay.asin(var_6463.astype('float32')) # shape=(9, 3, 14)
uop_6466 = relay.cos(uop_6464.astype('float64')) # shape=(9, 3, 14)
uop_6471 = relay.tan(uop_6466.astype('float64')) # shape=(9, 3, 14)
output = uop_6471
output2 = uop_6471
F = relay.Function([var_6463,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6463,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_306 = relay.var("var_306", dtype = "int16", shape = (16, 9, 11))#candidate|306|(16, 9, 11)|var|int16
const_307 = relay.const([[[-9,9,-9,5,10,-9,-5,-2,2,-1,10],[-8,9,9,5,-7,8,-10,-4,4,6,9],[-6,10,-10,6,6,-3,4,-6,9,3,1],[4,-8,-1,6,8,4,-9,-2,6,-9,-10],[1,3,-3,-7,2,4,-4,6,7,-1,1],[-7,4,-10,2,-5,-8,-5,5,-9,-7,-6],[-6,-10,-6,5,-10,-2,-6,7,-2,3,3],[3,1,-6,5,-1,6,-5,4,-2,2,1],[6,-8,-4,-8,-2,-4,5,3,-4,10,-6]],[[2,6,-6,-8,8,7,-10,-8,6,3,5],[4,9,-2,7,5,8,5,-2,1,5,-8],[8,7,-8,-8,10,10,-9,8,10,7,-7],[-2,-5,8,2,7,2,8,6,-2,7,6],[2,-3,-9,10,5,2,-8,10,-8,4,4],[-1,-5,7,-5,-9,8,9,4,-1,5,7],[-6,5,-7,-4,-8,-1,8,-6,-10,-9,-7],[-6,-2,-8,-2,10,5,4,4,-4,4,7],[3,6,10,-4,6,8,6,-4,-4,-8,10]],[[2,1,8,1,-9,1,-10,3,-6,3,-6],[1,-9,6,3,-1,-2,10,2,-7,6,8],[-7,-1,7,-8,-4,7,-3,3,1,-10,10],[6,1,-3,-9,2,-10,-10,8,-4,-6,-6],[-5,6,6,-10,-8,-6,-8,-6,10,3,-3],[-10,1,-3,-4,8,9,5,10,2,4,4],[9,-10,-10,-2,8,-3,-4,5,-5,-9,-7],[-2,2,4,1,7,-10,2,10,2,-4,6],[-9,-9,-4,-1,-3,-7,-4,-2,-10,9,-5]],[[-1,-3,-4,8,-6,-1,-3,3,7,4,4],[6,7,4,8,-4,-6,-4,5,-8,-2,8],[-5,9,1,-7,-5,1,-1,-5,4,-9,-8],[9,-6,-8,8,-4,-1,5,10,6,-7,5],[-4,8,-4,6,-2,7,4,8,3,4,-7],[-5,3,10,10,9,-10,2,5,-5,-5,-9],[-10,-2,9,5,9,2,-3,3,2,7,-10],[-5,9,6,-4,4,1,5,3,5,1,-7],[2,8,-3,-5,4,-10,9,6,2,-7,7]],[[5,5,-4,-9,-1,-1,4,-3,-9,-6,9],[-6,1,6,-10,-2,-3,-5,3,9,5,-2],[4,-6,2,1,-9,8,-4,10,7,7,8],[8,5,5,7,-9,-3,-3,6,8,-2,7],[-3,8,-8,-2,10,-10,-7,-7,2,-5,-10],[10,4,-1,-6,-10,5,9,-6,10,8,1],[6,-8,-3,-3,-1,8,3,-10,8,-6,-10],[6,3,-2,-5,8,2,-10,-1,7,-8,-7],[-6,9,-1,-9,-9,6,1,7,-2,9,-1]],[[6,-4,5,-10,4,-1,10,-8,-4,-3,1],[10,-2,-4,-4,-2,8,5,-7,-6,-1,-3],[-1,-3,8,-5,2,8,8,6,7,-2,1],[8,6,-10,3,9,2,8,10,2,1,-5],[-4,-8,-9,5,2,10,9,5,3,7,8],[7,1,9,1,-10,4,-5,-2,3,-6,-2],[-4,9,2,5,1,7,3,-5,-9,9,-3],[-6,-5,-9,-3,7,7,-5,2,-9,3,-7],[2,-1,7,4,-4,-4,-9,-1,-5,10,-4]],[[1,4,-1,7,-3,7,2,4,3,6,7],[4,10,6,-1,6,8,-1,-8,4,7,-7],[-7,-5,-1,2,10,5,5,-1,-4,6,8],[-1,-6,-8,-10,2,-8,-10,1,4,-7,-3],[-2,7,-1,8,-2,6,5,1,-10,3,-3],[4,4,-5,-1,-5,3,9,-7,-5,-9,5],[6,-9,10,-4,-6,6,8,-5,10,-4,-10],[-10,1,5,8,-3,-5,-1,-8,-9,3,6],[-7,-2,9,-1,-8,-7,8,-8,2,-9,8]],[[4,-4,10,-6,-1,-7,9,1,-6,-3,-10],[7,-7,1,-5,-7,3,-4,1,9,-5,6],[-4,-6,-8,5,1,-5,-10,8,5,8,9],[1,2,-1,-8,-2,6,5,10,1,4,2],[2,3,5,5,1,-3,8,1,3,-10,-3],[4,-7,-7,-10,-6,10,10,-1,9,-3,-7],[6,-8,-3,-1,-5,2,-9,4,-9,-4,10],[-4,8,-2,-6,1,9,5,8,-10,1,5],[-2,-1,-9,-10,6,-1,7,-7,-4,-7,8]],[[5,-7,10,-7,-8,-6,-10,4,8,-3,-6],[4,-5,2,3,5,-9,-3,2,6,10,9],[-8,9,-4,-5,-5,6,9,-4,-9,2,-3],[8,6,-5,5,6,10,-9,8,-5,-3,2],[8,-6,-7,6,3,7,-8,-6,8,-8,7],[-3,3,7,10,10,7,8,4,4,-7,-7],[-3,2,6,2,-9,-10,6,8,1,5,-4],[10,6,-5,6,10,6,-3,-1,-8,1,-5],[-9,10,-3,-6,7,-4,1,-5,-1,6,-6]],[[10,3,2,-7,-10,9,6,6,-6,-9,7],[-2,-7,-9,10,4,-5,-7,-1,-1,3,-3],[-2,9,2,-10,8,-3,-5,-9,-8,-5,10],[-7,10,-3,9,-10,-5,-9,-6,7,-1,10],[1,-10,-2,1,1,-4,5,4,3,5,2],[4,10,-4,10,-8,-3,9,5,7,7,9],[-9,7,6,10,3,7,-5,-6,-7,7,5],[5,-7,8,-8,-7,-9,-10,6,2,-6,-5],[-2,-8,-5,8,5,10,8,6,-6,-4,9]],[[9,-4,5,1,-2,8,9,9,5,-1,-5],[-4,6,6,-2,-1,-10,-3,-6,-2,-5,-2],[-6,-2,-4,8,3,-2,10,8,-3,-5,6],[6,2,2,-10,4,5,9,-10,-9,-8,1],[-9,2,-9,-6,4,-9,-2,6,5,-8,-7],[-10,-3,-1,1,9,-2,-3,7,-6,-1,-9],[-5,-5,-6,-3,-1,9,3,6,-3,-4,-5],[6,6,3,8,-10,-5,-3,9,4,-10,-5],[7,9,-6,5,-1,1,2,5,-6,-2,2]],[[-3,-3,3,4,-8,-1,8,-1,-9,3,-8],[-6,6,-9,-4,-6,-6,-4,4,-8,8,9],[-9,1,1,-7,-1,-5,4,5,-9,-5,-8],[3,-8,4,4,-3,6,-8,8,-7,10,-5],[-7,2,-9,-10,-7,-1,-6,10,10,3,-7],[-2,-6,-3,-2,1,-7,5,2,-5,8,4],[10,-6,-9,-6,-9,1,-1,4,-3,5,9],[-7,5,4,7,1,-3,-10,5,-9,6,10],[4,-1,10,-6,5,-2,3,-6,-3,10,4]],[[-10,-5,3,-7,-9,6,8,5,5,-7,-2],[4,-3,-7,-4,-10,-9,-1,4,-7,1,-4],[-1,2,1,-4,10,-3,6,-5,-2,-5,7],[7,-8,-6,-8,-9,-9,5,-10,5,7,-4],[-9,-3,3,-5,-8,4,5,-4,-2,1,3],[3,5,7,7,4,10,8,9,-2,6,-2],[7,5,10,3,4,-1,4,-10,7,9,-5],[-1,-2,1,10,-2,-1,8,-5,-7,7,-5],[-5,-3,10,2,-9,-10,-5,-1,-6,3,10]],[[-1,2,-3,7,3,-2,4,8,-9,-6,-2],[-2,5,-5,-5,10,1,3,3,1,-2,2],[-9,2,9,-7,-1,3,-6,4,7,-7,-8],[-2,2,6,-8,-2,9,5,1,1,10,8],[4,9,-8,2,9,-4,9,7,-8,-6,-2],[-5,4,5,-1,2,-6,9,-7,9,-6,9],[5,-7,-6,10,-6,10,-2,-6,1,8,-10],[1,-9,5,5,3,9,-1,-2,2,-5,-10],[1,-9,5,-10,-6,2,3,-3,1,-6,-5]],[[-7,7,7,-4,-10,2,-5,-9,-1,8,-2],[-1,7,2,-6,10,6,-3,-1,7,-1,-1],[5,3,-4,-1,2,-3,6,2,-2,3,10],[-8,-4,2,-5,4,-2,-8,-10,5,1,-10],[-1,6,7,-1,9,9,6,1,-4,-1,-5],[-3,8,-8,-3,-5,-1,10,-4,4,-10,-7],[4,-6,-6,-5,8,6,7,6,-2,-6,1],[2,7,-9,1,-1,-5,-3,8,1,-9,3],[-3,-6,9,10,10,-7,10,-1,-1,5,-1]],[[-10,10,4,-10,-3,-7,10,3,-6,-3,-9],[9,3,-4,10,9,-6,-1,8,9,-6,2],[-10,9,-9,1,9,-2,1,-3,3,1,2],[-10,-5,2,3,1,-1,3,5,10,3,-6],[-9,-9,2,-2,4,-3,-2,2,8,-3,4],[-1,-8,-4,-2,-9,-1,3,-8,8,-10,-1],[-7,-10,-6,6,-6,2,-7,-7,9,9,-4],[-3,-9,2,-3,2,8,7,-4,8,7,6],[-6,-2,-10,-5,5,-5,-3,6,4,8,-1]]], dtype = "int16")#candidate|307|(16, 9, 11)|const|int16
bop_308 = relay.add(var_306.astype('int16'), relay.reshape(const_307.astype('int16'), relay.shape_of(var_306))) # shape=(16, 9, 11)
bop_333 = relay.multiply(const_307.astype('int16'), relay.reshape(var_306.astype('int16'), relay.shape_of(const_307))) # shape=(16, 9, 11)
uop_339 = relay.acosh(var_306.astype('float32')) # shape=(16, 9, 11)
output = relay.Tuple([bop_308,bop_333,uop_339,])
output2 = relay.Tuple([bop_308,bop_333,uop_339,])
func_342 = relay.Function([var_306,], output)
mod['func_342'] = func_342
mod = relay.transform.InferType()(mod)
mutated_mod['func_342'] = func_342
mutated_mod = relay.transform.InferType()(mutated_mod)
var_343 = relay.var("var_343", dtype = "int16", shape = (16, 9, 11))#candidate|343|(16, 9, 11)|var|int16
func_342_call = mutated_mod.get_global_var('func_342')
call_344 = func_342_call(var_343)
output = call_344
func_345 = relay.Function([var_343], output)
mutated_mod['func_345'] = func_345
mutated_mod = relay.transform.InferType()(mutated_mod)
const_448 = relay.const([[[-3.585273,-9.947319,0.040476,4.928575,-2.624206,8.101227,8.388051,-4.275855,-5.320591,4.394699,3.081692,0.838542],[-1.932098,-6.530585,-5.210580,2.997585,8.545664,-3.016641,1.079638,-2.091964,3.887383,3.391585,-5.369736,0.726477],[3.082813,1.840392,-4.450742,-3.969625,-6.269467,5.609979,4.418551,3.502121,9.883127,3.509556,4.848778,-1.170511],[3.656283,9.605001,-9.535572,-7.134538,8.273897,-3.119957,-0.148012,-6.552536,9.901425,9.402412,9.275295,0.732522],[-6.032047,8.787589,-6.316687,6.975090,4.970515,7.919577,4.339163,8.748457,1.403890,-4.570878,-4.603123,-0.875516],[-9.015758,-4.714108,0.070572,-3.883623,1.932208,5.840756,-0.121287,2.391625,-1.276694,7.951842,4.192653,-8.366679],[-8.285095,-6.979626,-1.455438,-9.252016,6.903917,-2.558934,-0.867372,-5.078773,-2.988731,2.469717,-5.554150,-0.500612],[2.413370,-1.323008,-8.724610,1.963077,9.609727,0.357308,5.988557,0.957736,9.758264,3.665182,-2.573875,1.732484],[1.939966,8.170826,3.805232,-0.494339,2.847208,0.278852,-5.720902,-1.818464,9.175643,4.001339,6.316278,5.294896],[-7.591173,-1.685604,-5.117405,8.808124,-1.289388,-7.092000,-4.583196,-3.275310,2.156080,6.574946,8.311605,-1.518856],[9.005381,7.958619,-7.314678,4.782060,3.047033,4.988358,6.678289,7.281434,-5.373835,-0.058445,3.623902,-5.561452]],[[-8.645137,-0.555222,-0.594848,-2.673323,-9.289608,-5.088662,-4.190260,4.067105,-0.951057,-1.368467,8.921127,6.778541],[7.525814,-4.930124,8.516621,6.793439,-4.339687,9.189875,-2.167200,-6.893729,5.037747,6.833923,6.889897,8.583700],[-3.642992,6.025119,9.338192,7.398524,-4.366190,8.028670,-0.019321,-3.534834,-6.787370,8.018300,5.097047,6.585506],[9.393559,0.181598,2.416246,-9.281040,-9.847245,4.613109,-2.490638,-9.686136,-7.225916,-8.316181,-3.386213,5.526610],[-4.021396,-2.578029,9.493717,-2.842792,-5.921805,9.399537,-5.124049,7.133278,3.036093,6.263095,8.791609,2.184469],[8.584790,2.959096,-5.840622,2.231386,4.309729,-3.081625,9.251948,9.086163,-1.856675,-2.160702,-3.957441,2.824149],[-8.101357,-9.884466,-5.745795,-7.938734,1.757669,-1.739068,-3.875332,2.046797,7.429233,-5.386138,-8.271936,-4.968443],[-7.374592,-0.712710,8.084858,2.458825,-8.908380,4.730534,4.465954,-6.444420,8.949876,-3.533716,-4.806433,-3.412037],[1.410358,1.195744,-3.579878,4.407830,-6.244776,-6.172457,9.693272,1.625158,7.093008,5.650910,-4.463305,4.723585],[-1.056374,-8.819310,8.768407,-4.227079,0.841646,1.791419,1.340350,6.009558,-7.854635,5.433589,8.483128,2.163121],[-3.302354,9.593962,-8.722511,-9.568962,-5.916017,-2.568774,5.651830,-7.275192,-5.737687,6.875661,-9.826116,3.717403]],[[-6.224203,0.630954,2.582734,-3.149006,9.448242,8.606306,-6.699853,-7.938216,-1.366102,6.627442,6.101113,-1.014383],[5.603642,6.214977,-8.864453,-8.302960,-3.167520,-4.951697,-5.784142,2.820197,-6.132469,3.961551,-3.058844,9.065793],[-5.411365,7.739932,9.568840,6.162779,9.020535,-4.091959,4.886846,-3.978366,-7.212845,-1.061962,3.680830,-5.906523],[-1.991597,-6.291109,7.078938,4.600968,-1.467049,7.056419,-5.654303,-5.756694,-7.096307,-6.834126,1.816980,0.936934],[4.939667,-1.093265,7.567965,8.092412,8.187367,-2.309646,7.059704,-3.069750,-7.572355,8.128047,2.842952,-4.652591],[7.256717,5.072403,5.216396,-1.920526,-2.945272,5.811406,-5.896787,1.233950,6.175237,-5.894355,0.789875,-6.692413],[2.639243,5.353575,-8.586468,-0.792183,-6.299565,-5.573308,-8.796197,-6.327995,-4.762569,-0.412050,-8.716370,-4.615079],[5.866997,4.297743,7.247698,2.586029,2.059062,0.571446,-6.773459,9.963047,-4.594335,2.051506,6.546325,9.789571],[3.919794,-3.113728,-7.691686,9.380280,9.160001,-5.558181,9.413960,4.610126,-8.864308,-6.526374,-9.610866,1.395894],[4.715708,3.678176,6.461881,-8.363619,-5.570393,-0.879052,7.661242,2.847808,-8.526675,-2.151045,7.098607,0.814829],[-1.203021,-4.072336,3.767041,7.747480,-2.654931,3.655857,-0.511426,2.342421,-9.823212,4.932024,9.295658,7.097429]],[[-2.243103,5.758414,7.804665,-5.627622,-3.205415,9.582311,-6.117950,8.884459,5.546078,-5.725485,-9.020288,1.911558],[-9.028783,6.210389,4.647700,9.615594,-8.603022,7.257510,2.754514,6.155472,-8.334434,-3.215450,-2.786290,-9.741220],[-8.135969,8.012308,-3.864716,-4.849076,9.136663,-2.414363,-6.262480,-7.632957,4.814938,-5.952399,5.485534,-0.983698],[-5.175025,0.501056,-1.139141,4.765799,-1.316644,-4.815644,4.127896,9.002612,-8.988109,8.177263,-1.549339,6.379426],[9.650650,-4.308892,8.174615,-2.759018,0.859431,-2.657595,8.671667,3.979313,-4.145564,-7.473412,-9.421733,-6.036338],[-3.413261,2.886512,-6.980613,-8.497197,-0.373097,-4.796653,0.138391,-4.494297,-9.893827,9.661545,-1.444389,-9.900181],[-9.909774,-8.635724,-2.175433,7.836859,-1.465552,3.716411,7.699582,-9.901930,4.254612,2.472683,5.671678,0.609678],[6.676901,-3.110204,9.438151,-1.430543,1.989893,-8.708611,-2.930453,-9.896889,-1.637208,5.392372,7.172554,-9.110605],[-3.371323,-5.790363,9.359433,-1.130521,-6.312828,-2.744689,9.512181,9.178371,2.975102,-9.573402,5.688893,-9.978988],[2.724796,0.147533,7.640582,7.015493,3.447694,9.880736,7.808523,5.396056,-7.720545,-8.639451,1.477433,8.052344],[5.860497,-3.370243,-5.767986,1.528180,-5.116446,7.014481,-0.668133,8.144520,-4.852662,-3.186092,-8.881815,6.269151]],[[3.556923,-7.111331,0.559631,5.924546,-1.677303,3.705877,-3.301734,-5.193237,5.093444,-3.941136,-9.551982,7.031477],[-3.293855,-6.029212,-6.358669,-0.936647,0.913260,-1.673635,-4.277950,-2.335550,1.260672,5.106524,-4.692735,-2.194311],[3.182639,2.456818,-7.679157,-7.781790,-9.397537,-7.983922,-3.957853,-3.138397,7.248222,-9.472130,-3.680759,-6.234410],[-9.529055,6.572839,4.713058,-5.859752,-2.962398,-9.984250,3.617382,7.632363,-7.653733,-8.580367,-9.647441,-3.854721],[2.946232,7.696062,8.141708,0.146776,-3.431754,-6.053553,-6.545165,-8.329809,-3.799375,2.706843,-2.870842,0.468060],[-6.703057,7.381568,-7.280359,2.401084,8.130017,4.895224,-5.272028,-9.458903,3.039646,3.929960,-7.152170,-7.451205],[-4.432914,-1.027379,5.333328,8.557412,5.311966,-4.913250,7.778090,8.060512,1.452600,8.170398,2.892409,-2.860730],[8.514398,-7.609162,9.659764,-3.172368,-5.008645,-1.794113,8.970620,-9.346917,0.615309,-1.422063,-1.789799,0.811947],[3.587117,4.106943,-9.221654,7.095870,0.364787,4.993421,4.809102,0.292533,-7.180382,1.457321,9.152738,-8.833623],[-1.801227,5.431524,-4.747769,-6.957511,-2.955948,-4.983853,9.749648,-9.158602,5.509741,-1.879794,3.590724,8.935542],[5.281896,6.171861,-7.199704,8.010477,9.339164,5.622654,2.710584,9.296653,2.705620,0.018677,4.559089,-9.154422]],[[2.429753,2.268707,-2.517354,5.866844,4.737773,-7.029602,-1.264817,7.884021,7.489372,-8.714963,-9.746447,-5.352883],[3.903535,7.422155,5.999825,-2.273369,-8.864990,2.630796,-5.479999,-1.781858,-3.512605,6.028328,7.482464,-6.503969],[7.944138,1.822317,-0.250035,4.322617,2.946427,-9.577312,-2.020949,-0.965358,8.147095,5.515911,-1.162625,7.397574],[6.925893,4.095508,9.862086,5.512066,-8.783234,2.293326,-4.091434,3.831064,3.719809,-2.091503,-9.604300,-2.143832],[-6.877040,8.642328,3.797109,0.002543,6.764961,2.633030,-3.471212,1.091078,-8.707787,7.150810,5.852136,-9.595332],[9.677190,4.629694,2.392896,7.650143,6.278313,-5.752558,6.090212,4.922158,1.293701,-8.895189,9.574945,-8.840080],[-8.786565,-1.526829,-8.377313,-2.520915,7.052165,5.311352,7.793733,4.777518,9.494717,7.770466,3.996113,3.965331],[-0.875264,0.955632,3.437260,4.965108,9.159055,-8.585925,-6.881311,0.108199,-5.028625,2.108677,9.668426,-0.162426],[-2.873229,-8.126991,8.748426,-2.488366,3.482797,9.250508,-8.627267,-9.325180,6.054835,3.008615,8.662341,0.257616],[-4.719388,5.506779,8.666712,-2.975927,9.857921,-4.584394,1.711174,-0.032063,-1.255893,3.948825,-3.003653,-6.253319],[-6.361606,-5.671473,8.559575,1.480786,-2.587227,5.257332,0.745243,7.125296,-5.979617,4.214374,2.253417,-6.644150]],[[2.335559,-3.659409,2.209827,0.429356,-4.276907,5.847113,-8.016301,3.895856,7.371961,-5.979639,4.026743,-8.008965],[7.827531,0.628777,9.904151,-8.409313,9.803167,4.733172,-6.400536,4.370336,-6.355741,-7.398463,3.400010,2.863135],[-2.579408,8.487418,4.296858,-0.750556,0.769231,5.985764,1.368271,-2.038117,-5.608629,-1.277759,-4.987619,-6.579959],[-1.603706,7.556504,-6.669240,3.294556,7.909997,-5.395739,-1.117247,1.111986,-3.607697,-7.803952,2.136295,1.348731],[-0.488510,-7.049386,9.434159,2.447279,0.533587,9.333584,9.887109,-0.990459,-3.223618,-1.810577,5.348869,-2.988154],[-7.002356,-9.359764,2.146278,-4.061931,2.367573,9.892111,4.945005,-7.364811,0.161191,-4.030938,-2.990006,9.307505],[-2.742014,5.942095,-1.924314,9.009067,6.530600,-8.681691,1.945080,-3.250870,8.282332,6.518268,6.733173,3.478416],[-6.086679,9.782979,-4.642285,4.325239,-7.316449,7.989510,-9.198890,-0.482328,-3.829441,6.704111,6.073764,-1.707897],[2.316945,8.905492,8.441311,0.607434,-0.726254,2.263268,-6.375574,8.627507,6.616009,0.579896,-9.864562,0.751147],[-4.670518,-6.040823,4.201907,-3.472004,1.665283,0.903938,-8.022451,-1.014953,9.927585,7.832737,-1.555943,9.994578],[6.659304,9.314945,-2.566931,-5.101303,0.365022,-3.158585,8.575881,5.220653,-1.690902,-4.067130,-8.112989,7.957141]],[[-7.829548,6.111696,-2.119633,-2.682247,6.903928,3.203041,2.539742,-3.924093,-9.293993,2.082258,1.247888,-6.893890],[4.071822,-1.785460,3.592328,8.942222,-0.434486,-8.801103,2.031232,9.402630,5.307112,-6.220793,-8.577766,9.698621],[9.188142,3.361790,-3.032791,-5.420463,-4.161785,4.871844,0.881087,4.873157,3.878409,-7.214178,-5.136511,0.915394],[-8.765795,-1.797455,-5.740249,5.788976,-8.321037,-1.348606,7.708836,-5.569695,4.135351,3.602978,7.531593,-6.933218],[0.511843,1.359655,-5.862194,1.023999,1.175341,-0.781632,2.548849,4.370603,-4.719443,-2.127804,4.482212,0.637951],[-1.112364,7.507738,5.996855,-5.484773,-7.082123,-2.908431,-9.736653,8.878226,-0.730527,0.676316,8.132139,1.023220],[-0.745420,3.318919,3.455902,-7.476822,-8.780378,0.816907,-8.093286,-3.614406,8.289170,8.996303,-1.253127,1.482490],[-2.346455,-5.503532,-8.099893,2.390410,-8.250938,-6.082608,8.094524,6.487542,-1.087791,2.652560,1.001953,0.171550],[8.850891,-6.260841,3.825411,-0.886635,1.436294,7.785763,-5.914496,-2.439005,-4.341466,-3.547864,-0.107288,5.866773],[-3.463078,1.349949,-1.431413,3.605201,3.518707,6.663557,2.588357,1.742956,-1.207749,-7.328123,6.085727,0.357598],[5.487085,-1.179050,-6.718655,-1.023938,-4.673027,-4.704817,-8.641783,-9.729673,9.342474,-0.886198,0.094999,3.954440]],[[7.007611,1.673227,2.166210,-7.163484,-6.055719,-6.481148,-9.108357,-8.180098,-7.106053,8.736145,-7.984023,-7.252144],[8.160360,-1.375646,-4.343120,-4.865965,-9.531735,0.560184,0.320120,-1.925483,-6.071280,-6.786484,-1.810141,3.918364],[6.040787,3.361301,4.434980,1.840882,4.517059,1.598514,-7.038394,9.491054,6.488671,-4.299357,-8.772511,2.530517],[4.681021,7.912369,-9.562920,-6.996886,7.760688,4.552528,3.932309,1.467447,-1.650304,5.971033,-2.265500,7.500102],[2.464800,-2.025693,7.199617,-3.415630,7.367231,-7.144992,-9.503603,5.408141,-4.293771,-1.803402,-4.023970,-3.162209],[0.736923,3.950949,-1.570241,2.094896,-1.213492,5.445333,3.446694,-9.896175,1.264564,-0.481767,4.810073,6.553919],[-9.087719,9.147023,4.332700,-3.236444,7.483266,8.266368,-0.401691,0.058026,-3.040037,-1.868933,-2.751598,0.526067],[9.636586,-2.329095,1.238814,9.111598,3.859135,-7.899734,-4.705178,3.393685,-2.224342,-4.253528,-5.938314,9.536862],[-6.529986,-9.990064,-7.089638,2.560534,-8.933336,-0.526447,7.477969,7.759989,3.347599,-1.598658,-1.467884,2.380703],[-7.586671,-7.645528,-8.668473,6.500786,1.848746,7.950212,0.653140,-1.329325,-6.459307,-9.125286,-1.134387,6.481509],[3.496919,8.874225,4.919888,3.143781,-8.619350,-3.751737,2.622448,-4.997520,-4.713418,8.524640,-8.514160,5.759976]],[[-9.487879,-6.049069,3.603010,-7.518719,8.479344,2.625121,4.721299,-3.898785,-4.218686,-6.322611,5.234308,-7.557145],[-4.558882,1.471235,0.942900,-3.202306,-4.311287,-6.056721,-5.337560,3.669724,3.919729,-0.943732,8.995631,-1.205501],[-7.264207,3.992123,0.677349,1.260801,4.604523,-3.839658,5.347875,7.469291,-5.211262,8.022137,-4.170864,-3.649577],[9.277612,-3.040093,-9.545420,-7.570473,5.651158,-7.434362,-5.733213,6.372084,-0.679539,-6.632472,-1.622777,-1.874980],[-0.144469,0.620300,-4.702821,-7.416732,-1.742074,-8.974467,8.658505,7.923395,-4.038062,-0.255702,5.914743,6.255104],[1.447754,3.382219,3.911511,-7.578922,-3.129613,-0.604994,-2.829259,-0.039855,-9.703076,8.682323,-1.998083,-5.357442],[-6.866730,1.137600,-3.395602,9.497661,-9.877816,0.604943,-7.772108,2.574228,6.792161,1.236593,-5.905813,1.075073],[-9.744573,0.573593,7.539124,-0.640843,-5.917200,-6.626166,-6.102155,-3.975281,-2.251065,-6.789457,-1.061598,4.008280],[8.393565,2.418413,4.115907,-7.944155,6.549963,-1.162299,-6.941837,-3.466879,-6.405691,5.861836,-6.237330,1.499980],[-2.036512,-0.568210,-4.793701,-8.493848,-3.703174,6.598100,-8.074961,-6.385398,5.189974,7.954355,3.972268,-8.173693],[-8.941996,-3.169225,-4.566344,7.692654,7.898210,4.459614,-1.699046,4.608504,5.573273,-8.251388,8.070356,5.750823]],[[1.660155,-6.690838,-7.306244,-1.220427,-8.029283,5.080326,-0.091635,2.608390,-7.524564,2.755291,2.992768,-0.944864],[-9.467250,-8.285958,4.412565,-0.021385,-4.203840,5.120065,-8.698294,3.790482,-0.074984,9.858649,-1.116213,-9.522762],[7.320627,6.981661,-3.184707,1.032790,-7.872021,-9.325308,3.674270,-1.555839,6.811788,-9.541946,8.268351,8.070248],[-2.564168,-3.689932,9.579603,-2.562582,4.568174,5.456802,7.701771,-7.910453,2.007331,7.660390,0.841816,-9.115881],[0.157337,-3.543045,7.393239,-1.419647,-2.162868,-9.276516,3.848550,-0.859227,-1.591038,-9.169426,-3.287202,9.741568],[-4.198388,-5.236424,-9.726942,-6.617015,9.396033,-9.537763,-0.684409,2.500526,7.139106,0.580733,-0.095982,5.342627],[9.662563,-3.785330,-0.946434,0.383417,-2.744232,4.894657,2.256111,-4.773629,-0.304999,7.831529,0.503313,-4.421625],[-3.867121,1.313982,1.900159,0.920072,-3.724635,1.400712,0.676706,5.697280,-5.555268,-3.132682,2.524076,1.002152],[3.185007,-8.589965,4.978859,1.430773,-6.395383,-7.914708,-8.201516,8.131498,2.090641,7.624837,2.539111,-1.414573],[2.468737,8.435383,5.547601,4.287326,6.411293,6.329635,-8.756444,-2.641134,0.878954,-4.532990,-7.702416,-9.608358],[-4.516139,-8.783190,2.882755,-8.534829,1.402405,6.053886,-1.712000,7.589797,-9.306304,-2.752627,-9.807234,-1.885138]],[[9.667389,7.333209,-9.451013,1.262922,6.207958,-6.010648,-3.810268,-7.238776,9.627529,-8.998024,-6.182282,4.686040],[-5.379279,1.153718,0.210580,-6.690115,-3.744040,-2.905951,1.668745,-1.230809,-3.793990,3.649354,6.913890,-9.784829],[2.075001,-9.700741,8.987883,9.384409,4.949987,-9.061799,-8.636140,9.475104,-0.320142,1.773682,3.649690,-9.182678],[-0.278962,-7.884660,1.162444,-9.674483,7.465461,-5.664080,3.820205,-6.367770,-2.710100,2.008865,6.579370,-5.993475],[-8.229950,1.876876,5.048702,1.068385,-7.376023,4.925941,0.920603,-3.242335,-9.755717,3.920052,-9.901377,-3.446991],[-1.354459,4.682147,-8.457516,0.606462,6.376439,-4.846755,-2.769545,7.718844,2.780926,0.353423,-1.763348,4.892373],[-4.750507,-0.085848,-9.989880,-3.793132,-4.874560,-6.110410,3.667311,-0.071330,-9.177657,9.026849,-9.210602,4.372111],[7.201493,-4.319036,1.575815,-6.829536,-6.022114,-1.019052,3.387442,5.265348,0.339637,-9.244409,1.521124,4.243005],[9.355064,2.158760,8.634626,6.799016,2.792416,6.066545,0.207304,-4.168807,-8.211402,-1.860403,1.160445,-6.284122],[7.006911,0.542711,2.338503,-5.826800,1.695117,-9.185374,1.144674,5.902182,-3.712671,4.580489,-6.232776,4.373056],[-5.550931,-1.923727,-4.365940,-4.141387,4.206441,-2.743769,5.147162,9.771943,-6.630341,1.206402,9.996674,-2.936731]],[[5.171199,9.260863,-9.795438,0.827997,-8.519631,-7.379126,-9.792510,-8.942397,9.777554,-8.662906,-5.625996,8.336363],[7.653166,-2.285295,-6.394043,-7.412224,-3.743449,5.495462,9.810011,0.103696,5.083606,-2.527674,7.119915,7.024144],[3.352779,1.958484,-1.379561,8.287234,0.643452,-9.036190,-6.910838,-8.185189,2.572956,6.513291,-1.195010,-8.865777],[0.780262,1.778296,-5.786016,8.581963,-8.437564,4.229889,4.681042,-8.902872,-4.444945,-5.097808,-3.305273,3.233366],[6.288751,-3.099710,3.766573,6.756300,7.477862,4.988479,6.005598,4.335347,7.885659,-5.526635,0.554904,-9.358725],[-9.811855,2.155546,3.125937,-1.296161,7.723709,-4.801912,6.147396,9.368083,-5.878891,-7.583876,2.892369,2.986686],[-7.100409,-1.069340,-5.168179,5.310396,1.674953,2.763020,4.648365,5.427312,-8.239240,-1.956815,2.284683,-2.457070],[-9.244831,-7.029367,9.506239,5.626170,1.508950,7.042804,-1.919049,-9.309958,9.726953,-4.162809,3.465337,-5.063427],[7.935046,-4.896163,-5.671726,-7.375215,5.923674,2.838314,-9.543595,0.027725,-2.831518,0.869389,8.363694,-5.243166],[-9.472188,-6.995567,7.006456,6.523083,8.956557,5.273561,7.340632,-7.865443,-2.123901,3.624634,-8.027149,6.895883],[7.446080,9.760757,-6.348410,-8.084174,-5.428591,9.466223,3.240327,-4.317204,-3.245740,-7.896923,0.024169,-1.474493]],[[-8.757113,-1.863992,-3.921828,1.490025,0.012937,5.034105,3.438563,-3.816745,-1.370794,4.028249,-5.645728,-0.817434],[1.034508,-3.791772,3.726777,6.664752,-8.523904,2.605981,4.480739,6.845325,1.621527,-0.733676,-1.428454,8.762735],[-0.051419,-5.098087,-5.524926,7.059617,3.140720,4.290491,0.259961,7.080405,-2.872107,-7.697305,2.333183,-4.758836],[-0.352833,5.861994,3.090489,3.804160,4.199604,0.826558,-1.542807,-9.454066,-6.713103,0.975151,-7.981810,-3.964643],[9.469813,-3.231713,-3.978244,0.082498,7.091392,5.207953,8.075255,3.137917,-3.501368,4.762526,7.373447,-9.004613],[3.148952,2.796516,-5.296534,-2.632413,9.153203,7.022815,-8.920706,-5.019219,6.428039,-0.611976,1.482981,-5.936551],[-0.125037,-0.351396,6.932527,-5.473314,-7.741162,-4.934507,0.492925,-8.388161,1.400954,-6.200950,8.039325,7.490297],[-0.746827,8.029878,5.117412,1.868290,2.625757,-6.385314,-3.825082,6.289690,-5.799257,-4.518313,0.341844,-8.560585],[-6.908669,-5.471421,-5.194175,-8.294400,2.192657,-7.576071,7.885525,5.041073,2.983459,5.548925,-2.999369,0.616593],[-4.215142,-4.594432,-5.592245,-2.773350,4.979435,-8.893703,7.841544,-3.369536,2.639252,7.481368,-4.468680,9.351038],[-8.035189,6.601778,-2.998047,-3.702822,-2.735944,-4.141171,0.791318,7.718749,1.479184,-9.072879,8.010071,8.775168]]], dtype = "float32")#candidate|448|(14, 11, 12)|const|float32
var_449 = relay.var("var_449", dtype = "float32", shape = (14, 11, 12))#candidate|449|(14, 11, 12)|var|float32
bop_450 = relay.mod(const_448.astype('float32'), relay.reshape(var_449.astype('float32'), relay.shape_of(const_448))) # shape=(14, 11, 12)
func_342_call = mod.get_global_var('func_342')
func_345_call = mutated_mod.get_global_var('func_345')
const_481 = relay.const([5,6,10,8,8,-10,7,-8,-9,-4,-6,2,-10,-1,2,-8,2,9,-8,5,-4,4,-8,8,7,8,1,-7,1,-5,-9,-8,-7,-10,-3,-4,-3,8,-1,9,-10,-3,8,-1,7,-4,1,7,8,-6,4,9,10,-9,6,1,8,9,6,-7,-8,-9,-2,10,4,4,-7,5,2,6,-5,-4,-3,-9,4,3,-8,2,1,-1,-7,-4,5,10,5,-7,-7,3,5,10,-1,-9,7,8,-3,-2,-3,-7,-8,-8,-6,-5,-6,-2,4,8,5,4,-1,10,3,-8,-10,7,-1,3,7,-10,-8,-4,4,-10,3,1,-8,2,6,-10,-5,6,-9,5,7,-3,-8,9,-10,3,5,-9,-6,6,1,8,-2,-3,-3,1,6,9,10,7,9,5,-5,-8,-7,5,-2,-5,-7,-7,9,-4,-9,-8,-1,9,5,3,-8,3,7,3,-10,4,-7,10,9,10,7,7,4,-9,9,1,4,1,9,-1,-2,-6,5,6,2,-2,-5,8,-4,-8,-8,8,-10,-3,5,-8,8,6,4,7,-8,-6,7,-2,-8,2,7,7,-1,8,4,-4,4,6,-2,5,-2,-4,-2,10,7,7,5,3,6,-3,1,-3,-7,-4,-3,-2,-9,-6,3,10,-1,3,-3,-4,-2,-7,4,10,2,4,-3,2,3,1,-7,5,10,-4,6,1,-6,-1,-10,-4,4,-8,2,-7,10,-2,-2,5,-5,-6,10,1,6,6,4,8,8,5,8,7,-1,-4,-6,-5,-1,-5,6,5,-9,-8,3,-1,2,2,-7,7,-8,10,-2,-6,-4,2,-7,2,9,1,5,-4,-9,6,-5,-3,-4,8,8,8,5,3,-10,9,4,1,1,8,-2,-5,9,-2,3,-10,-6,-2,-2,-4,-10,10,-3,5,8,4,-10,-9,-9,4,10,2,4,-8,8,7,-5,4,-1,1,-4,1,6,-3,-10,-8,2,-8,-5,-3,8,-3,-8,-8,7,8,6,5,9,6,6,-2,3,5,4,-1,5,-5,2,-1,5,-10,1,5,-5,1,-5,10,-1,-8,-10,-9,-4,9,10,-6,-3,7,4,-6,-5,10,8,-9,-6,5,-7,-4,-1,-10,-5,7,3,-2,8,-5,2,2,-7,10,10,-1,2,-2,8,-3,8,-1,-5,-7,-8,3,-8,-2,8,10,7,-6,7,-1,10,8,-1,-7,1,-9,-6,10,9,-1,-4,-6,-4,-2,-10,8,5,6,-6,-4,8,-5,-8,-8,-9,-6,10,5,-4,-5,-8,-4,8,2,-6,-10,-10,9,-1,6,6,2,4,9,4,6,-8,6,-2,-9,-7,-3,3,-6,8,2,-4,1,-2,9,6,-10,6,10,6,-8,-8,7,-4,-6,5,-8,4,10,-10,2,4,10,-7,10,10,4,9,-9,-6,-7,3,-3,-5,-3,-2,10,-6,-6,1,-6,-3,8,4,7,2,-3,1,4,-9,-10,-1,-6,1,1,7,-2,8,4,-7,1,7,4,10,-4,6,-9,-2,-5,-5,4,6,4,-4,-7,1,10,-4,6,6,-2,-1,9,-3,8,-3,-2,8,2,-6,5,-6,5,-3,5,-10,10,-7,-9,-3,10,9,2,8,9,4,-1,-1,2,7,1,-4,1,10,-10,6,7,-2,1,5,-5,-8,-1,3,2,1,-9,6,4,9,9,6,9,6,-1,3,-2,-2,-7,6,-7,5,-2,4,-7,2,8,-1,-9,8,10,5,2,6,-4,-1,1,-5,-6,-1,-5,8,-4,-2,-8,10,-4,9,-2,-5,9,-7,1,5,4,2,-10,3,-1,-4,5,-6,-9,-5,2,-9,-6,-1,-2,-8,-4,-6,-3,6,-3,-1,-6,-7,4,10,-2,6,7,6,-6,8,5,4,-2,-1,3,-3,-1,-6,4,8,4,3,3,-3,-6,-1,-4,8,-5,10,3,9,-8,6,2,6,-9,-1,10,3,4,6,7,3,3,4,-1,-9,-9,-10,8,-8,7,-9,-3,1,-6,-5,-1,9,-6,-1,5,5,-2,4,3,6,3,-4,-10,4,-2,-1,1,-8,-2,-1,6,8,3,9,-7,-5,-4,7,-6,10,-1,-2,2,9,-8,8,8,-3,9,8,-8,-6,-4,6,3,-7,-8,9,8,3,-10,-9,8,-1,5,-5,-4,5,4,-7,9,3,4,9,-2,7,5,2,7,2,-3,-7,8,5,5,-8,8,2,-5,-4,-5,-1,-7,4,6,-8,-3,-8,-6,10,8,6,9,-8,10,5,2,-6,9,-3,-5,6,5,-8,10,2,6,-2,7,1,-1,-3,-2,-10,-6,-8,3,1,-9,-8,-7,-6,10,9,-7,5,9,-1,-6,4,5,6,-7,7,-6,-4,7,7,8,-7,10,-5,1,-10,10,-10,7,6,-3,-9,-7,-1,4,4,-7,9,2,-6,3,-1,-1,9,-6,-1,5,7,2,-8,9,-10,-2,4,2,-8,-6,-7,9,5,10,-4,6,1,-1,-6,-3,-7,-5,3,-10,4,10,-5,9,6,-7,-6,-4,-3,-6,-7,7,-3,4,-2,7,-10,-9,-7,4,6,6,6,-9,-4,10,-1,5,1,-10,-2,9,5,9,-6,7,-6,-6,-10,-1,-7,6,-2,-3,-10,6,-1,8,-4,-10,-9,4,8,8,-4,-4,2,8,3,-6,4,9,-8,-3,-1,5,-2,5,-1,-9,2,6,5,9,-7,5,7,-9,8,-1,7,-10,7,10,-8,2,4,7,4,-9,1,2,-7,-4,5,7,3,2,3,-7,10,-3,9,-4,-6,-4,9,6,7,5,7,-3,-7,8,6,3,7,10,7,-9,-1,1,-8,-9,9,6,-6,-4,-5,-5,2,-9,-3,4,-5,3,7,7,3,10,-8,7,5,-6,-6,1,8,-6,1,1,7,1,1,9,1,-5,-6,-4,-6,3,-3,9,-6,-4,-8,-2,-2,1,10,7,-1,-4,-7,-10,-1,4,-7,7,1,-10,-8,-6,-7,4,-6,1,-3,4,5,10,7,2,-8,-9,2,-8,2,-3,-8,6,-5,-1,4,-8,-1,5,-2,-2,-7,9,-10,2,-8,3,-9,10,-8,4,-8,10,-3,-5,-1,-5,-8,8,1,4,-4,-5,-7,-10,-6,10,-9,1,-5,-6,5,-7,-8,-5,-4,8,7,2,8,1,-6,-8,-1,-4,-7,-7,4,7,10,10,-10,-3,-2,1,6,-4,4,9,4,6,-4,6,-8,9,-5,-1,5,-4,-8,7,-8,8,4,1,-1,-9,-1,-4,-10,-4,-9,-1,-8,5,9,-2,4,3,7,6,-1,2,2,9,-8,6,-10,6,-2,-6,3,-10,-7,-5,-6,-2,-9,-7,2,-2,2,2,7,-2,8,-1,-7,8,-5,6,-5,8,-5,-5,-2,-7,-7,8,6,-4,-9,5,-8,-10,7,4,-6,-4,-9,6,-7,6,2,7,-6,-2,6,1,-2,6,-6,-1,-5,1,-5,-5,-2,6,7,-3,6,7,7,-5,6,-8,6,-5,4,6,5,-4,4,-2,-5,3,-4,-5,-8,-8,6,7,7,4,1,3,-1,4,8,8,5,-7,4,8,4,6,-3,-1,-8,2,-5,5,3,-3,9,4,-7,-1,-5,-2,-6,-1,3,9,-9,1,7,1,-7,-9,-8,-10,-6,-5,-9,-1,9,-4,-4,-6,-4,-6,-4,1,3,-8,4,5,9,2,1,3,-7,-4,9,-5,-6,-4,-10,-2,4,4,-7,10,3,6,-9,-3,7,7,-7,9,-3,-4,7,-6,5,10,10,-10,4,-6,6,-9,-9,8,-9,7,-1,7,-6,-10,-2,5,-2,5,-2,1,10,-10,4,-5,7,7,3,-6,8,2,-10,-3,3,-8,-9,-6,9,-10,-5,8,-6,-8,10,10,3,9,10,-4,10,-1,-3,9,-2,-4,3,7,-8,10,2,-5,3,-6,4,7,6,-4,-2,2,10,-1,10,4,-4,6,-6,10,-5,-4,8,4,9,4,8,5,2,5,-5,-1,-3,4,-8,-1,-3,-1,-6,5,-2,7,7,-2,-10,-2,-3,-4,10,8,-2,-8,-1,6,-5,-3,1,8,1,-8,4,4,3,-8,5,10,4,-2,8,-2,-10,1,-4,1,9,-6,9,2,7,-6,5,-10,3,-4,2,3,3,-5,-3,2,-6,-4,-8,1,-6,8,1,10,1,-5], dtype = "int16")#candidate|481|(1584,)|const|int16
call_480 = relay.TupleGetItem(func_342_call(relay.reshape(const_481.astype('int16'), [16, 9, 11])), 2)
call_482 = relay.TupleGetItem(func_345_call(relay.reshape(const_481.astype('int16'), [16, 9, 11])), 2)
func_342_call = mod.get_global_var('func_342')
func_345_call = mutated_mod.get_global_var('func_345')
call_485 = relay.TupleGetItem(func_342_call(relay.reshape(const_481.astype('int16'), [16, 9, 11])), 1)
call_486 = relay.TupleGetItem(func_345_call(relay.reshape(const_481.astype('int16'), [16, 9, 11])), 1)
uop_487 = relay.sigmoid(bop_450.astype('float64')) # shape=(14, 11, 12)
output = relay.Tuple([call_480,const_481,call_485,uop_487,])
output2 = relay.Tuple([call_482,const_481,call_486,uop_487,])
func_502 = relay.Function([var_449,], output)
mod['func_502'] = func_502
mod = relay.transform.InferType()(mod)
var_503 = relay.var("var_503", dtype = "float32", shape = (14, 11, 12))#candidate|503|(14, 11, 12)|var|float32
output = func_502(var_503)
func_504 = relay.Function([var_503], output)
mutated_mod['func_504'] = func_504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_643 = relay.var("var_643", dtype = "uint32", shape = (7, 7, 8))#candidate|643|(7, 7, 8)|var|uint32
const_644 = relay.const([[[-10,6,5,9,-7,-2,-5,8],[-1,-1,7,-9,-2,-7,2,8],[-1,1,6,-1,-1,2,9,-7],[-5,3,8,10,-1,-3,-3,4],[-7,-1,9,8,6,5,-7,8],[-5,-3,3,2,-2,-8,8,-10],[-8,-10,4,-6,5,6,6,-6]],[[-4,-3,-6,-4,10,5,5,4],[8,-2,-9,1,-10,10,8,10],[-6,-1,-7,-1,9,6,-3,9],[4,2,-10,9,-7,-7,-6,-10],[-9,5,8,-5,-5,-10,3,8],[1,-3,2,-10,-1,-7,-3,9],[10,1,3,-6,9,5,-5,1]],[[4,4,6,-6,-2,-3,-1,-8],[8,10,5,8,-2,-8,-7,-3],[-3,-6,3,-5,8,-10,10,-2],[9,-8,8,10,10,-6,-9,7],[-8,-2,-6,5,-4,-2,5,3],[-8,10,-8,5,-10,-4,-2,2],[5,-2,-10,-4,6,-1,2,6]],[[-6,5,7,-5,-2,6,1,7],[-2,6,8,8,-7,-6,4,10],[-8,-7,6,-4,10,-4,7,-6],[2,3,-1,-3,-2,1,1,-8],[-6,-8,5,-3,-1,6,10,-9],[2,-2,2,5,-6,-10,6,8],[10,-6,-7,10,8,7,5,-10]],[[-7,4,-10,5,-5,-3,-2,-7],[-8,-9,-4,2,-6,1,5,10],[6,5,-5,1,7,3,6,6],[-2,8,6,5,-1,5,10,9],[-1,1,7,6,-8,7,-8,10],[8,4,-10,-7,-7,-8,-8,-10],[-5,5,-3,-8,-1,-6,8,6]],[[6,1,1,8,10,3,-4,9],[4,-1,-6,-1,-4,5,-3,-7],[3,4,7,9,9,-9,5,-2],[3,-9,4,7,6,-9,7,5],[-5,-1,2,-4,-2,-6,3,9],[3,7,7,-5,-8,-2,-2,2],[-10,4,4,5,-2,-4,-10,9]],[[2,-1,9,-4,4,-3,-4,6],[9,6,-9,-1,3,-4,-10,-6],[-10,-3,-5,-8,-4,-5,-8,-2],[2,-10,10,-2,7,-6,10,1],[-9,10,3,4,1,-6,2,-5],[8,7,-9,3,-6,6,10,-7],[2,-6,-7,10,10,8,6,10]]], dtype = "uint32")#candidate|644|(7, 7, 8)|const|uint32
bop_645 = relay.bitwise_and(var_643.astype('uint32'), relay.reshape(const_644.astype('uint32'), relay.shape_of(var_643))) # shape=(7, 7, 8)
output = bop_645
output2 = bop_645
func_653 = relay.Function([var_643,], output)
mod['func_653'] = func_653
mod = relay.transform.InferType()(mod)
var_654 = relay.var("var_654", dtype = "uint32", shape = (7, 7, 8))#candidate|654|(7, 7, 8)|var|uint32
output = func_653(var_654)
func_655 = relay.Function([var_654], output)
mutated_mod['func_655'] = func_655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_720 = relay.var("var_720", dtype = "uint64", shape = (5, 4, 6))#candidate|720|(5, 4, 6)|var|uint64
var_721 = relay.var("var_721", dtype = "uint64", shape = (5, 4, 6))#candidate|721|(5, 4, 6)|var|uint64
bop_722 = relay.not_equal(var_720.astype('bool'), relay.reshape(var_721.astype('bool'), relay.shape_of(var_720))) # shape=(5, 4, 6)
func_653_call = mod.get_global_var('func_653')
func_655_call = mutated_mod.get_global_var('func_655')
var_727 = relay.var("var_727", dtype = "uint32", shape = (392,))#candidate|727|(392,)|var|uint32
call_726 = func_653_call(relay.reshape(var_727.astype('uint32'), [7, 7, 8]))
call_728 = func_653_call(relay.reshape(var_727.astype('uint32'), [7, 7, 8]))
func_653_call = mod.get_global_var('func_653')
func_655_call = mutated_mod.get_global_var('func_655')
call_732 = func_653_call(relay.reshape(call_726.astype('uint32'), [7, 7, 8]))
call_733 = func_653_call(relay.reshape(call_726.astype('uint32'), [7, 7, 8]))
bop_736 = relay.logical_and(var_727.astype('bool'), relay.reshape(call_732.astype('bool'), relay.shape_of(var_727))) # shape=(392,)
bop_739 = relay.logical_and(var_727.astype('bool'), relay.reshape(call_733.astype('bool'), relay.shape_of(var_727))) # shape=(392,)
func_502_call = mod.get_global_var('func_502')
func_504_call = mutated_mod.get_global_var('func_504')
var_742 = relay.var("var_742", dtype = "float32", shape = (924, 2))#candidate|742|(924, 2)|var|float32
call_741 = relay.TupleGetItem(func_502_call(relay.reshape(var_742.astype('float32'), [14, 11, 12])), 0)
call_743 = relay.TupleGetItem(func_504_call(relay.reshape(var_742.astype('float32'), [14, 11, 12])), 0)
func_342_call = mod.get_global_var('func_342')
func_345_call = mutated_mod.get_global_var('func_345')
call_752 = relay.TupleGetItem(func_342_call(relay.reshape(call_741.astype('int16'), [16, 9, 11])), 1)
call_753 = relay.TupleGetItem(func_345_call(relay.reshape(call_741.astype('int16'), [16, 9, 11])), 1)
output = relay.Tuple([bop_722,call_726,bop_736,call_741,var_742,call_752,])
output2 = relay.Tuple([bop_722,call_728,bop_739,call_743,var_742,call_753,])
func_779 = relay.Function([var_720,var_721,var_727,var_742,], output)
mod['func_779'] = func_779
mod = relay.transform.InferType()(mod)
var_780 = relay.var("var_780", dtype = "uint64", shape = (5, 4, 6))#candidate|780|(5, 4, 6)|var|uint64
var_781 = relay.var("var_781", dtype = "uint64", shape = (5, 4, 6))#candidate|781|(5, 4, 6)|var|uint64
var_782 = relay.var("var_782", dtype = "uint32", shape = (392,))#candidate|782|(392,)|var|uint32
var_783 = relay.var("var_783", dtype = "float32", shape = (924, 2))#candidate|783|(924, 2)|var|float32
output = func_779(var_780,var_781,var_782,var_783,)
func_784 = relay.Function([var_780,var_781,var_782,var_783,], output)
mutated_mod['func_784'] = func_784
mutated_mod = relay.transform.InferType()(mutated_mod)
var_806 = relay.var("var_806", dtype = "float64", shape = (6, 14, 2))#candidate|806|(6, 14, 2)|var|float64
var_807 = relay.var("var_807", dtype = "float64", shape = (6, 14, 2))#candidate|807|(6, 14, 2)|var|float64
bop_808 = relay.floor_mod(var_806.astype('float64'), relay.reshape(var_807.astype('float64'), relay.shape_of(var_806))) # shape=(6, 14, 2)
bop_811 = relay.minimum(var_807.astype('uint32'), relay.reshape(bop_808.astype('uint32'), relay.shape_of(var_807))) # shape=(6, 14, 2)
var_814 = relay.var("var_814", dtype = "float64", shape = (6, 14, 2))#candidate|814|(6, 14, 2)|var|float64
bop_815 = relay.greater(bop_808.astype('bool'), relay.reshape(var_814.astype('bool'), relay.shape_of(bop_808))) # shape=(6, 14, 2)
output = relay.Tuple([bop_811,bop_815,])
output2 = relay.Tuple([bop_811,bop_815,])
func_828 = relay.Function([var_806,var_807,var_814,], output)
mod['func_828'] = func_828
mod = relay.transform.InferType()(mod)
mutated_mod['func_828'] = func_828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_828_call = mutated_mod.get_global_var('func_828')
var_830 = relay.var("var_830", dtype = "float64", shape = (6, 14, 2))#candidate|830|(6, 14, 2)|var|float64
var_831 = relay.var("var_831", dtype = "float64", shape = (6, 14, 2))#candidate|831|(6, 14, 2)|var|float64
var_832 = relay.var("var_832", dtype = "float64", shape = (6, 14, 2))#candidate|832|(6, 14, 2)|var|float64
call_829 = func_828_call(var_830,var_831,var_832,)
output = call_829
func_833 = relay.Function([var_830,var_831,var_832,], output)
mutated_mod['func_833'] = func_833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_868 = relay.var("var_868", dtype = "float32", shape = (2, 9, 7))#candidate|868|(2, 9, 7)|var|float32
uop_869 = relay.sinh(var_868.astype('float32')) # shape=(2, 9, 7)
func_779_call = mod.get_global_var('func_779')
func_784_call = mutated_mod.get_global_var('func_784')
const_880 = relay.const([8,1,2,10,4,-8,-2,10,-4,9,4,7,3,5,3,-5,1,2,10,1,-7,-10,3,-8,6,8,-5,7,-6,-9,4,9,-10,7,4,3,-9,2,-4,1,-2,-2,-4,6,-1,9,9,-1,3,-8,-5,10,-5,-6,-5,-8,5,-3,-9,1,3,7,9,10,5,-9,-10,-6,3,1,10,2,-1,6,-3,-4,-8,6,-1,1,6,-10,-1,9,-10,-2,4,-8,9,9,-5,-8,-5,2,3,-6,3,5,-4,-8,7,-9,-3,7,2,-6,8,2,10,-3,-7,-4,-5,-4,7,5,1,-6,10,-8], dtype = "uint64")#candidate|880|(120,)|const|uint64
const_881 = relay.const([-9,4,7,5,5,-8,1,-2,-6,-7,7,-6,-3,-9,-10,-8,-1,2,2,-1,-3,4,9,-6,-10,-3,-5,9,-1,4,3,10,-6,5,-10,-7,-7,10,6,10,9,5,4,9,-4,-7,-4,-2,9,-10,-4,-5,-7,-7,-9,1,10,-9,9,2,-10,10,-7,-6,-2,7,-1,-8,-7,3,2,3,9,-10,1,-2,2,7,-4,10,-9,-3,1,-9,6,2,6,-4,9,-3,-6,1,5,-1,-1,7,8,-2,-1,7,3,-7,-7,5,-3,-6,1,8,5,9,10,8,7,-9,1,6,-7,6,-2,-2,7,-5,-5,-8,-2,-8,4,10,-8,-10,5,4,8,8,10,6,-7,-8,4,5,-3,-8,-1,-8,5,7,-1,4,2,1,1,9,-10,4,-5,10,4,-4,-6,5,8,1,-4,1,6,-5,-1,9,-3,7,-2,5,5,-2,-2,2,10,3,10,-7,8,-7,10,2,9,-3,-6,-10,10,4,8,3,-1,1,2,10,-3,1,-3,7,2,-4,8,1,-5,-1,-1,2,-3,-5,-2,-5,10,-8,-8,-6,5,-3,3,3,9,2,10,-3,-8,8,-3,-4,-10,7,-9,10,-2,-9,7,4,7,9,1,-2,10,8,-4,8,7,4,8,-10,-9,5,2,-3,5,-6,-3,7,10,-9,-10,-10,4,-2,10,-5,2,4,-1,-3,-10,-5,9,6,-7,-6,4,5,2,2,-1,2,7,7,4,6,-9,6,-1,9,-9,-5,5,-3,-9,-10,10,-4,-7,-6,-1,6,1,1,-4,2,-7,8,-8,10,4,6,3,2,2,-2,10,6,10,5,-8,-1,5,9,-8,1,-3,9,-8,6,9,-5,-8,2,8,5,-8,1,4,9,2,-8,-8,9,-8,-7,4,7,5,-1,-9,-7,3,-10,-1,-2,8,6,-5,-1,-1,-1,2,-7,7,8,-6,-5,-6,-7,6,7,-7,8,-9,6,-7,3,3,6,9,10,-10,4,1,-2,9,9,-4,10,7,-1,3,4], dtype = "uint32")#candidate|881|(392,)|const|uint32
const_882 = relay.const([6.356165,-8.637185,-1.389742,-2.539832,-1.157993,9.720096,6.505361,6.496755,-5.581439,-2.169548,3.944531,3.900094,3.076273,6.337060,1.656205,3.692220,-6.271783,4.414844,-7.757287,3.956536,8.324814,4.130711,3.585284,9.026149,-3.471489,2.703419,-2.285423,5.799797,9.144049,-4.983157,0.133391,-0.166441,1.093122,-3.847870,7.006712,-3.684586,4.606507,-4.273455,7.766168,-3.657138,3.396248,0.905548,-5.231992,2.321316,-6.634538,0.967488,-1.723558,4.619539,9.278550,2.937836,3.923182,0.213235,3.657746,9.933967,0.699671,-0.930320,-7.568951,-1.742913,-7.814233,-2.648927,-6.085906,1.722436,7.728783,-8.701732,-7.643951,-8.632340,-6.934199,-7.937190,7.996955,-8.132070,6.827929,8.454469,-8.902000,8.935787,7.381917,9.018929,8.156831,-2.433562,3.597754,6.993443,0.356269,5.539157,2.413002,0.554327,-6.582526,2.173291,6.404638,0.134215,2.399662,-0.924263,-5.649681,-0.961186,-4.428966,7.034827,8.693089,-2.318210,-3.810772,-2.477028,0.150753,-9.877859,4.370765,-1.186834,-3.524692,6.921577,-9.500806,-9.873605,4.895302,-9.622763,-2.495538,-5.811609,-9.074780,-7.925336,-6.792913,-2.156418,-2.505246,0.507670,-2.214014,-9.051004,9.260766,-5.773531,-1.313753,0.071803,5.157626,2.498454,3.352454,-5.211632,-7.241082,-2.167900,1.198435,5.442513,7.676427,-8.166704,-5.020251,-7.800877,-4.800050,9.010853,7.084374,-9.351012,-3.642227,-6.626541,0.970010,8.591442,9.150161,8.398392,-4.450347,3.867576,4.691345,4.788359,-8.523692,-7.021055,2.166758,1.652710,-4.658851,0.177074,-7.983413,-9.566414,-9.729267,3.234132,3.736611,6.532367,8.035024,6.826844,-0.016118,-1.484087,-5.304061,6.720019,-3.981488,-0.336256,-2.650130,9.809540,-9.646698,6.111482,8.868234,-3.979965,5.991300,-5.010875,-5.759795,5.097983,4.238005,-6.302874,-1.718594,3.153125,-6.380323,7.274424,9.093268,5.143695,-2.478892,7.440151,-6.932598,-5.455655,0.714082,-0.707858,-1.310742,-5.623137,-3.797103,5.348663,-0.621425,1.935316,0.377397,7.004364,-8.584809,-1.465873,4.488740,-7.392915,1.197869,0.822193,-0.597694,9.207567,-8.310242,-1.254677,-1.851664,0.454215,-4.977588,0.885753,-6.439254,-4.646254,-2.390034,2.602018,-4.680672,3.555231,1.935893,-5.323442,-0.639704,-7.254806,4.243561,0.251610,4.256683,-5.687097,-2.838692,7.251076,9.135032,2.849761,-0.272961,4.467238,-4.701786,-4.065426,-9.265722,2.749397,-3.439297,2.097376,-4.641396,5.239220,1.113546,5.162481,-9.007761,-9.872466,2.307808,2.336528,3.075189,-9.924690,6.766683,6.162444,-8.085016,-6.401563,-0.965528,-9.333908,5.530954,-5.680410,-4.841449,-7.782706,-6.876248,-5.981653,-1.064239,0.559323,-8.903174,7.247596,3.048100,3.324791,-5.226395,-1.843369,3.003810,2.967823,8.513322,-0.082568,-7.817266,-6.067398,5.426529,-0.650695,-4.009742,9.858735,2.783239,-9.920237,7.036198,-8.023613,1.663501,3.508750,-3.115037,5.741921,-1.556606,2.620092,-3.242506,-7.193505,-5.992801,3.541265,-8.873059,1.786933,-8.388283,-7.264449,-8.536038,0.319503,-1.437573,-6.507599,2.976502,-2.838204,8.621922,-1.330464,6.498061,-9.947767,4.200728,-9.968682,-9.713563,-5.855566,2.556785,7.003452,0.921978,6.147687,0.805190,-9.750815,-3.864025,-4.243628,-0.652197,6.866857,2.667124,5.525846,-8.954402,8.182294,-3.208414,1.989870,-6.951661,1.006654,5.011936,5.350736,-7.160376,9.193211,-5.288502,5.016306,2.636791,-2.469399,-8.620010,9.435116,3.098595,2.757198,-9.235187,5.463073,9.378733,8.329427,-2.801192,0.170275,-9.672937,6.181439,5.562516,-0.358772,1.822941,6.731047,-2.232124,-5.991921,9.035553,9.374572,-5.122198,2.607090,4.208661,-8.312267,9.849562,2.580706,4.397993,0.909577,3.621975,7.582882,-7.590992,-8.565896,7.992102,4.712788,-5.141304,6.619265,9.682053,8.128528,8.506535,-5.279251,9.724124,-3.284613,-0.310943,6.117746,5.461067,6.070087,-4.158202,9.376781,-8.959257,-3.788842,1.852439,-2.393828,-1.965329,-2.679961,7.956590,4.348836,-4.281667,0.348721,2.897531,-8.474723,5.189546,-0.394429,2.082778,-1.026664,-0.081801,-9.493594,-2.244149,8.450016,-5.214003,-2.152994,-7.648662,4.081192,6.249815,-1.815453,8.810703,-9.687140,-3.832721,-0.677375,-7.637283,4.450935,-2.568761,-5.353533,-6.222703,1.764366,1.714946,5.066570,4.285697,-4.450556,1.983959,6.676063,7.823271,-5.690815,8.976495,9.564725,7.898995,-4.271558,0.326806,-9.551046,-9.473834,-4.936867,7.691008,-2.932236,-4.183224,7.064787,1.076657,0.267562,-7.900013,-3.631832,-1.727414,7.065778,-9.966280,0.955213,9.246019,-2.458546,-5.448677,8.459033,-0.732892,-2.062574,8.454265,-0.983379,4.048665,3.121386,6.998411,2.241219,-5.196312,9.073428,-0.976570,-2.594074,-8.177322,-4.177483,6.806466,-6.167827,5.115830,8.121011,1.779464,5.597744,3.407603,-9.470285,-3.048226,-9.815149,2.740901,8.709093,8.314602,9.600815,-2.402475,-0.110544,1.536336,5.054153,4.209165,6.003343,9.999474,6.034430,-9.282960,7.372472,4.019460,4.852442,-7.551049,8.344250,-6.967276,7.456982,-4.147283,-3.179034,6.417088,-1.017654,-6.748297,3.072687,-0.379344,-7.908514,-9.923198,1.700423,-1.942389,-0.277545,9.219710,-1.628075,-1.525383,6.161441,7.415409,2.987817,9.878174,7.570910,7.140517,8.578326,-3.788990,-9.873663,-5.359523,-5.506362,-6.207794,3.678427,-5.340309,7.165683,6.568473,0.905951,3.297238,5.172419,-5.927476,-0.655462,2.291224,0.917429,-7.265756,0.130286,7.395458,9.230976,-8.184567,-5.402640,-8.205966,-9.996277,-1.148619,-9.416693,-2.236705,-9.702176,-3.170511,-1.460142,4.161584,8.794295,-8.021683,-1.218182,3.771966,2.683611,-0.965726,-6.491945,-5.388109,-2.044404,7.632848,-9.561402,2.522852,-7.868511,7.528654,1.251293,9.128258,-5.095432,3.578537,5.563251,-3.055919,3.473076,-3.177608,0.271174,-0.633785,9.400402,-0.276715,8.763861,5.603537,-5.691146,-3.964078,4.547384,-2.585580,6.298302,-8.103511,-6.353696,-2.112889,6.666933,-5.704661,5.727964,-3.103903,-7.218713,-8.538289,-7.964531,9.746982,-7.346585,6.489333,9.207066,-5.959321,9.729468,-1.855005,1.370152,1.331769,7.169590,-7.219544,-3.902030,-2.380225,7.603503,-6.548664,-1.484878,-9.337211,-9.895788,-8.276836,-6.816768,-9.903032,9.464884,5.746683,2.909732,3.569167,-9.727338,3.680178,-3.362147,9.417198,-2.871857,-6.625661,-6.231195,-3.300171,-5.221082,-4.749553,4.334845,-4.765873,6.868686,6.283258,9.747187,-9.739908,-9.428172,-7.548334,9.723037,9.044343,-6.907826,-4.256371,-8.967579,6.510660,0.382900,5.198185,-0.478629,4.182699,-3.249917,2.931664,2.893653,7.669500,8.139887,-5.898886,-4.538841,3.258358,9.878188,6.031867,-2.707417,-0.365728,-9.160694,-6.197805,-9.557574,3.212611,-8.708471,-0.890189,-0.300536,-6.073035,2.002940,-7.197229,-1.756719,-6.123968,9.338362,8.643797,-7.766543,9.842844,-7.797244,-5.843695,0.227637,0.588184,-0.706816,9.661093,9.878278,-9.692070,-8.865607,-6.821559,-7.419109,2.559892,-8.099314,9.363141,-1.565079,-6.535092,-3.980724,5.803533,-7.870697,-0.829224,-2.655727,5.552555,7.439422,3.148728,-1.897078,-6.352398,-5.644564,-6.133675,-9.829693,-6.677076,-5.571169,1.557307,8.531202,-4.841528,6.342942,-1.378227,-5.372979,-3.446571,6.716016,4.559983,2.851648,2.438981,4.142687,7.224573,5.406705,4.566240,-2.913891,3.762205,2.145777,1.690103,-2.382572,7.187273,8.313831,-1.373643,5.811433,-5.480001,6.226158,-7.574882,2.261896,-7.959711,6.266151,-0.957909,5.259807,7.706284,7.685612,8.282966,-4.953713,-4.576488,-8.126629,8.543916,-2.693155,3.323743,9.597547,3.089534,5.799911,8.256909,3.810746,-7.821113,5.764906,9.064847,-7.158316,-2.018312,7.991455,-7.539821,8.566968,2.739728,0.284955,3.600917,3.583981,5.329366,1.862030,5.260840,-2.368709,2.369459,-1.622175,-8.669183,7.891509,1.035802,3.522624,0.750303,3.842225,-4.374470,7.280876,2.410147,-6.050545,8.124186,-1.445278,-5.083583,-6.716980,-9.978044,0.622607,5.868156,-7.265597,4.898767,-0.110748,-4.401623,-9.388401,-8.299435,2.513936,-3.313387,-8.312444,2.154051,-5.554644,2.616395,1.135115,1.242177,-2.876663,0.725010,-6.054600,-2.239024,8.019348,-1.413979,7.669956,0.333338,4.709827,0.940237,3.268681,-5.748633,-6.548994,-1.267352,3.394233,-1.557565,-0.649516,-1.877126,9.934190,3.733364,-9.336735,-7.705404,-8.853119,-7.097285,5.301141,7.557304,-0.926671,-7.680810,8.161713,-5.160586,7.806169,-4.356887,-7.532264,-5.457696,2.268036,1.953810,9.473979,-8.080107,1.315917,6.779214,-1.102223,-2.665983,-9.015270,2.960867,0.615601,6.024006,6.728720,3.149731,-6.238063,8.148912,7.116075,8.804563,-2.050091,6.527636,-1.234108,-1.079124,2.250911,9.942216,2.014502,-8.333225,-2.654211,1.375114,5.226789,-5.758063,-0.419313,-2.819242,-2.295024,6.970437,2.694151,-0.967613,5.472780,-3.054471,4.973190,9.265180,-2.732683,-0.056603,9.768006,-9.573564,-9.623418,-4.946022,-1.074742,-3.657641,5.488320,3.586923,-5.319647,-4.509817,-4.910099,3.596978,1.678189,5.583991,-4.432547,-7.086334,7.840844,-9.138902,5.365821,3.407088,4.891056,-9.412497,8.190230,9.256888,-5.978726,2.404053,-6.218160,-8.047673,0.791652,-1.753783,5.576668,1.997765,7.830345,-9.835990,6.720350,9.019150,-4.117695,4.620148,4.148640,6.413803,-4.601836,1.982728,0.891072,-6.638537,4.394852,-1.694264,-6.410281,4.168247,-8.720818,-2.219445,9.510420,-0.448170,-4.565511,7.826108,8.492471,8.689841,-8.944792,-1.105161,-7.772562,-7.797334,1.718714,3.866834,0.551151,-7.284409,-2.366964,1.743159,-1.946547,3.829224,0.778058,-9.439598,-9.033219,-5.411188,-6.105465,-5.601676,-3.148357,-2.165166,-6.715075,3.825094,4.278729,6.897999,-3.680414,7.897760,-6.679331,3.676642,-0.086078,-3.258266,8.938591,3.914518,-0.441473,5.911185,-7.543227,-2.432058,0.112226,-2.996482,2.040394,-0.351214,-2.251006,-0.190885,7.447190,-3.338366,-6.648604,-3.792121,-3.161046,8.631934,8.762602,6.595824,1.891527,-1.932551,1.138049,4.403956,-8.821425,-9.140519,7.241991,-8.415145,4.247288,-1.400486,7.111848,3.104092,-1.979846,-8.717184,1.495039,-1.487127,-3.399934,2.094548,5.309897,-5.131722,7.884331,5.268285,-5.304921,8.070539,-8.451920,0.528443,-9.794279,1.137187,8.122465,-7.536796,5.415836,1.252375,-9.034884,0.746580,7.308747,5.537433,1.044175,-1.989647,-9.836187,7.115256,0.454111,8.476962,7.300163,3.108148,-7.131592,-8.424910,-9.638203,1.531751,-2.405287,-3.401728,1.818040,-5.936607,-5.033083,-0.212176,-3.165743,-3.780909,-4.914404,3.164826,-5.080117,-0.891413,9.942773,2.471081,7.010589,-5.492631,7.890364,0.948781,-5.629140,0.840730,-0.510518,-5.463551,6.755374,6.902278,-4.790232,-6.988095,6.868398,7.023315,2.202007,-2.450314,-5.500101,-2.632687,2.233692,-7.991378,-7.314973,6.608988,7.898539,4.536268,-2.830052,-6.102042,-3.296420,4.829759,9.530240,-2.425810,3.742193,0.446456,3.072327,-7.402022,-1.617778,-2.410319,-3.524555,1.548500,4.431145,1.589150,0.742823,-8.136048,-1.151482,1.416933,3.684185,-5.323227,-7.547975,-2.742812,4.108374,3.719284,7.458384,-5.600337,9.655108,3.910256,5.307612,-0.778329,-9.800843,-2.535665,-2.558257,-2.451197,6.789559,3.303065,3.686174,7.442053,-3.306729,-1.433637,-8.307375,7.261844,-2.126939,2.783076,8.008663,3.757286,-0.211327,-9.311164,4.493581,-8.566243,4.615774,4.600894,2.121381,-2.422162,8.386360,1.222784,5.595618,0.025825,6.839197,1.323059,-4.737162,-5.598344,-2.354269,8.230038,-6.613352,-9.548421,1.814300,-6.938022,-4.116022,-6.362977,1.636060,-1.714302,1.158934,-5.921960,-5.638781,0.309109,-2.822762,1.679306,9.310334,8.487315,0.087973,4.832329,9.437229,1.290924,-9.352347,0.191153,-9.183974,2.112190,9.949294,-8.482041,1.462604,-2.730478,-8.478410,7.721004,-0.568818,0.177276,-5.096672,1.409448,-8.904677,-5.768037,-1.966430,-5.626578,7.522189,-0.124829,3.140432,-9.698519,5.137710,2.124652,-1.282103,2.686146,4.238484,-9.712917,5.482236,5.439460,4.965027,5.236709,7.736207,-1.111455,6.675316,7.915713,7.314606,4.582846,-0.172641,-2.197314,7.514809,7.838794,-3.506304,5.057890,6.318077,2.686921,-0.607195,5.092813,-4.323180,-4.169200,-2.646222,5.649003,8.007507,-5.714786,0.223467,-0.855957,-2.148041,9.771157,-5.567584,4.778624,1.059370,-6.697077,8.272137,2.953697,1.678748,4.989398,0.612605,0.212530,6.172152,-5.656477,8.514294,-4.024166,-9.222330,-5.434680,-3.940914,8.611430,4.856110,4.382193,6.794127,-2.189010,-7.962456,-0.140745,-9.468166,-0.113981,-0.136224,-7.386355,4.406963,2.063383,-1.091342,-4.579763,9.568530,-1.882088,5.288565,1.245801,-5.827885,3.552047,9.437594,-6.648136,-8.280195,-5.972163,8.648751,-2.451261,9.150931,6.964965,2.923439,-1.342052,5.637842,6.520126,-2.415938,8.704527,6.093199,1.870774,-6.016146,-1.172551,-1.463751,6.601373,-3.867891,-4.148369,-2.176175,1.033095,-9.093623,-5.019367,7.622376,-5.862767,4.029210,-3.911779,3.637467,7.048731,-7.930367,-4.907409,-1.101037,-7.461224,8.715793,-0.005383,-6.675563,3.458527,0.983869,-2.941534,-3.462956,-5.331188,-5.360701,-5.392500,-1.972850,-6.327416,0.435503,3.933124,-8.144432,-7.277070,2.979865,1.206137,9.780449,-8.871239,9.777424,4.788712,6.076075,4.771841,-2.353000,4.835763,1.327614,9.841242,-5.077715,3.633240,4.672706,-7.561198,-2.106351,-8.011344,3.442831,4.152980,-5.514004,-8.753860,-2.302673,6.526047,5.697878,-7.347575,-8.219898,5.506057,-9.467058,-9.209194,2.498703,-9.645879,-7.906456,8.590306,5.085079,-3.497527,6.899058,-7.811543,-0.344723,-6.825456,-4.736350,3.421455,5.682375,-7.142294,0.297005,6.951683,8.817927,-4.976256,-1.002001,6.701292,-2.307372,2.113069,-2.546863,-7.252883,-5.344380,-6.896281,8.602741,3.136208,9.105147,-5.746470,-9.146027,4.626443,-8.369723,-0.385417,8.389816,-3.816651,6.884001,0.256915,4.495296,2.887675,-0.433359,9.973600,6.309676,-1.013198,-2.941339,8.896926,-9.715072,-6.371420,-7.930514,-4.691855,5.862237,-0.061118,-6.425808,-8.246454,2.654159,2.472106,-9.555617,7.325233,-8.691452,-8.747277,-3.403229,2.130621,-2.210961,6.106830,-4.286084,-4.636314,6.243386,9.254241,-1.740073,8.030712,0.123444,5.525603,8.371876,9.557706,6.080509,-2.403443,5.405061,-2.631364,-6.464758,-1.202161,0.835793,-7.348948,8.197092,0.402239,2.370309,3.379559,4.222787,-0.550501,0.805865,-3.259127,7.451971,5.568952,6.496518,-1.265733,5.845291,-2.096774,0.333474,6.153637,-3.803418,-0.079785,-9.441638,-1.406899,8.563384,-9.503879,-6.220303,8.217224,-6.798256,-7.790435,-1.873216,1.413564,-8.765338,8.013276,-2.020874,-0.486396,4.753192,-0.614070,1.724207,3.561979,-9.459514,3.746803,0.844791,-4.725419,8.096550,3.979047,-9.849874,-5.124220,-4.730117,-7.701579,-3.626747,-2.425230,-1.399674,7.809633,2.448121,-2.611186,6.366281,2.584255,-9.279458,-4.351964,-2.780913,6.658027,-2.759142,2.006504,5.242312,3.578615,2.997186,8.444070,-2.838198,2.884225,-9.548233,0.033429,9.702574,-1.793765,6.716937,-1.114352,-5.421206,-7.761177,3.028939,9.764041,1.298745,-2.744374,-7.833964,-8.693577,1.500765,9.680712,5.465283,0.856578,7.580667,-1.479655,-9.234026,-1.469122,3.520884,0.092568,0.740732,2.905557,3.310237,2.240348,-4.520718,-1.019610,2.425445,7.149212,0.823271,4.573244,-8.486610,3.691025,-4.485427,5.968285,-6.834674,-7.498201,9.220480,-1.568537,-4.663060,5.666893,-8.228411,-1.058242,7.266133,-0.274708,-0.880723,6.177485,-0.053333,2.897988,-1.463207,-0.075415,2.792798,-3.776324,-7.973929,1.966317,-1.917368,5.256147,-4.797745,-3.170204,0.772422,-4.779776,8.875233,-8.369446,-9.734035,-9.964420,-4.931083,3.362364,-8.319399,7.302531,9.856509,6.662988,1.440338,-3.684386,-9.150910,7.543793,3.743033,1.787218,4.929869,-9.271551,0.164678,-9.650815,5.289562,9.576448,-2.229597,6.903488,2.591138,7.993107,1.774184,-1.889270,4.246282,-5.103766,-4.206167,9.232604,2.674282,3.896202,-6.535646,7.196227,-5.046144,1.856708,0.097570,-9.177654,1.894351,3.619626,8.424413,-1.157258,1.926865,5.652416,-7.445622,4.428166,6.812127,-4.431323,-6.180833,6.375456,-0.261102,2.725153,0.583560,-1.314379,-6.790913,-1.162813,-0.872285,-4.031914,0.812664,3.213435,-0.632917,3.484483,9.860311,4.701033,2.615621,-6.779115,-7.274749,7.600609,7.196540,-4.306159,5.406162,2.143017,-2.642438,2.018001,-2.387226,2.059062,3.181273,-0.964355,4.885505,5.081648,-4.877049,-4.196576,4.910529,8.306451,-2.673099,-9.686386,-3.622561,1.137530,5.050883,-9.228039,9.762590,-5.298908,-2.393544,8.373795,7.716694,1.775960,3.022786,-4.811771,2.172695,7.904257,7.019710,-6.445828,-6.594754,-8.743507,-4.428065,0.371781,1.501885,2.141831,-6.495712,4.151793,7.042307,1.344281,-0.451224,5.806524,8.796988,0.461020,4.941899,-1.215933,6.136322,3.708323,3.807472,4.306986,5.790777,1.602927,-0.836946,0.778524,6.368867,-6.195857,-3.119037,0.297264,-9.372421,-7.326838,-9.170943,7.006418,-6.395514,-9.612347,8.262100,-0.357214,-4.745008,-1.094529,-7.451763,-7.677897,8.891118,3.975610,-9.334525,2.493514,-7.535607,-8.012243,2.441604,-0.378468,7.020252,2.778130,4.304871,5.403215,3.890220,-2.785519,7.579568,4.208672,3.574669,-0.887526,-7.033186,-5.806038,0.221073,9.082795,2.348505,-5.208425,-5.723421,3.959345,6.310472,8.417254,2.436116,-4.470997,-1.107357,4.224953,0.414496,-9.457942,1.333130,-7.037762,7.159298,3.152479,0.031911,8.467457,-1.527833,6.270917,6.107302,-4.700414,-3.797763,1.962979,0.544125,-0.825308,-7.220865,-4.193426,-0.946749,1.205128,-1.448028,-1.772840,-6.961805,-3.138261,-4.504898,4.933319,-1.607642,-7.952996,-8.704599,-9.790425,-2.717476,-1.969091,2.650701,9.622215,9.081140,3.538558,8.763728,-3.559799,-5.012916,-4.741213,-1.293238,-5.675975,-4.975751,-2.452900,6.228683,-6.672402,3.827987,-5.378373,6.126700,-4.549983,-0.182355,-4.714893,2.281318,-1.980506,8.684785,4.131499,-0.447742,5.092523,-9.607835,2.758165,-2.144595,-7.260848,2.287549,-2.710016,-8.570174,5.351492,-3.918976,-7.725740,-8.110681,6.299311,-1.442079,-1.256865,4.994387,9.276781,7.098742,3.266134,-2.129923,5.205370,-0.156206,-1.644360,7.734794,-0.563938,9.473434,2.792098,7.607675,-3.988738,6.001336,-7.143879,-1.565001,4.480240,-9.573529,2.457085,-9.700769,-0.057148,-0.199371,0.370454,3.220167,2.429110,-3.898439,-5.668949,-4.156224,9.901018,9.618490,-3.798242,8.317305,3.668605,-5.657776,-4.807866,-7.791967,4.651870,2.132552,-1.222256,-3.729877,-5.357245,-3.934658,-3.771349,1.436687,6.335744,0.531169,-7.198911,2.545646,4.459446,-9.450557,-0.213745,-3.330415,8.942076,-2.131356], dtype = "float32")#candidate|882|(1848,)|const|float32
call_879 = relay.TupleGetItem(func_779_call(relay.reshape(const_880.astype('uint64'), [5, 4, 6]), relay.reshape(const_880.astype('uint64'), [5, 4, 6]), relay.reshape(const_881.astype('uint32'), [392,]), relay.reshape(const_882.astype('float32'), [924, 2]), ), 2)
call_883 = relay.TupleGetItem(func_784_call(relay.reshape(const_880.astype('uint64'), [5, 4, 6]), relay.reshape(const_880.astype('uint64'), [5, 4, 6]), relay.reshape(const_881.astype('uint32'), [392,]), relay.reshape(const_882.astype('float32'), [924, 2]), ), 2)
output = relay.Tuple([uop_869,call_879,const_880,const_881,const_882,])
output2 = relay.Tuple([uop_869,call_883,const_880,const_881,const_882,])
func_890 = relay.Function([var_868,], output)
mod['func_890'] = func_890
mod = relay.transform.InferType()(mod)
var_891 = relay.var("var_891", dtype = "float32", shape = (2, 9, 7))#candidate|891|(2, 9, 7)|var|float32
output = func_890(var_891)
func_892 = relay.Function([var_891], output)
mutated_mod['func_892'] = func_892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1179 = relay.var("var_1179", dtype = "float64", shape = (3, 2, 12))#candidate|1179|(3, 2, 12)|var|float64
var_1180 = relay.var("var_1180", dtype = "float64", shape = (3, 2, 12))#candidate|1180|(3, 2, 12)|var|float64
bop_1181 = relay.less_equal(var_1179.astype('bool'), relay.reshape(var_1180.astype('bool'), relay.shape_of(var_1179))) # shape=(3, 2, 12)
bop_1184 = relay.floor_divide(var_1179.astype('float64'), relay.reshape(var_1180.astype('float64'), relay.shape_of(var_1179))) # shape=(3, 2, 12)
bop_1189 = relay.mod(bop_1181.astype('float64'), relay.reshape(bop_1184.astype('float64'), relay.shape_of(bop_1181))) # shape=(3, 2, 12)
output = relay.Tuple([bop_1189,])
output2 = relay.Tuple([bop_1189,])
func_1203 = relay.Function([var_1179,var_1180,], output)
mod['func_1203'] = func_1203
mod = relay.transform.InferType()(mod)
var_1204 = relay.var("var_1204", dtype = "float64", shape = (3, 2, 12))#candidate|1204|(3, 2, 12)|var|float64
var_1205 = relay.var("var_1205", dtype = "float64", shape = (3, 2, 12))#candidate|1205|(3, 2, 12)|var|float64
output = func_1203(var_1204,var_1205,)
func_1206 = relay.Function([var_1204,var_1205,], output)
mutated_mod['func_1206'] = func_1206
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1292 = relay.var("var_1292", dtype = "float32", shape = (14, 13))#candidate|1292|(14, 13)|var|float32
uop_1293 = relay.log10(var_1292.astype('float32')) # shape=(14, 13)
output = relay.Tuple([uop_1293,])
output2 = relay.Tuple([uop_1293,])
func_1299 = relay.Function([var_1292,], output)
mod['func_1299'] = func_1299
mod = relay.transform.InferType()(mod)
mutated_mod['func_1299'] = func_1299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1300 = relay.var("var_1300", dtype = "float32", shape = (14, 13))#candidate|1300|(14, 13)|var|float32
func_1299_call = mutated_mod.get_global_var('func_1299')
call_1301 = func_1299_call(var_1300)
output = call_1301
func_1302 = relay.Function([var_1300], output)
mutated_mod['func_1302'] = func_1302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1505 = relay.var("var_1505", dtype = "float32", shape = (5, 13, 16))#candidate|1505|(5, 13, 16)|var|float32
uop_1506 = relay.erf(var_1505.astype('float32')) # shape=(5, 13, 16)
output = uop_1506
output2 = uop_1506
func_1515 = relay.Function([var_1505,], output)
mod['func_1515'] = func_1515
mod = relay.transform.InferType()(mod)
var_1516 = relay.var("var_1516", dtype = "float32", shape = (5, 13, 16))#candidate|1516|(5, 13, 16)|var|float32
output = func_1515(var_1516)
func_1517 = relay.Function([var_1516], output)
mutated_mod['func_1517'] = func_1517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1537 = relay.var("var_1537", dtype = "int64", shape = (8, 12, 15))#candidate|1537|(8, 12, 15)|var|int64
var_1538 = relay.var("var_1538", dtype = "int64", shape = (8, 12, 15))#candidate|1538|(8, 12, 15)|var|int64
bop_1539 = relay.right_shift(var_1537.astype('int64'), relay.reshape(var_1538.astype('int64'), relay.shape_of(var_1537))) # shape=(8, 12, 15)
func_342_call = mod.get_global_var('func_342')
func_345_call = mutated_mod.get_global_var('func_345')
const_1545 = relay.const([7,2,-3,-4,2,-2,-3,-6,-8,1,-3,-7,-2,3,8,-4,3,-6,4,7,-10,-8,-1,-9,3,1,10,-7,1,-10,8,-5,1,-7,3,-9,-5,7,3,5,8,2,-5,10,-8,4,4,9,3,10,-4,-1,6,-4,-4,5,-4,9,7,-5,2,3,1,3,1,-3,10,3,2,7,4,-7,10,-8,-9,-1,2,-7,7,-10,3,3,-7,-9,2,4,-7,-4,9,3,-5,-9,8,4,7,-4,-5,-2,-3,-1,9,1,-6,-5,9,3,2,-2,9,6,10,-4,8,7,-1,4,-4,7,4,-7,8,8,3,10,6,5,7,10,7,7,-8,7,-8,3,4,4,9,4,3,-3,-10,-6,-10,-4,-6,5,2,7,6,-1,-10,-6,8,-3,4,2,6,2,-6,5,5,-7,3,6,-4,2,3,-4,-8,4,1,-5,-5,3,1,-5,-7,3,6,1,-6,3,3,-2,4,-10,-3,-4,-9,-2,-4,-1,9,2,3,5,-8,-9,-8,9,-7,7,-3,-10,9,-7,9,5,-1,-5,-2,-4,-1,-1,-3,10,-1,-2,9,9,6,-2,-3,4,4,8,10,-8,2,1,-10,-7,-10,-7,3,-9,-1,5,-8,10,8,1,8,10,-9,-7,-2,9,-5,4,-2,4,-6,9,-8,7,5,-6,7,4,5,-2,8,-10,10,1,-7,-7,-6,6,-7,9,-2,6,-1,3,4,4,1,-6,-9,4,4,8,2,-3,10,-1,-9,2,-9,-7,-10,-6,-6,-3,1,-1,-3,-4,-7,-3,1,9,-3,9,6,7,-8,9,9,-10,-1,7,2,-10,10,-7,-9,8,-9,-6,-2,1,7,-5,3,-7,6,8,-7,6,2,-6,-2,-5,-1,6,-3,5,-10,-4,-6,7,7,10,6,9,1,-8,-2,-6,3,8,2,6,6,2,3,3,-7,-3,-9,10,8,5,-3,2,-4,2,6,5,-7,5,8,-1,-1,7,-7,-1,7,6,8,5,-10,7,6,9,1,-5,-2,-6,-1,2,-10,-2,9,-6,-7,9,10,5,-10,-9,-10,3,-1,4,2,9,-1,10,10,-6,-8,6,3,-2,-6,5,7,8,7,-1,10,-2,2,10,9,-1,-5,3,-8,2,-9,-10,4,-6,1,-7,-9,3,-2,-7,1,6,-7,-5,-5,9,-3,-2,-10,-6,-8,-4,-4,2,10,-5,-7,10,-1,9,1,1,8,8,2,8,7,-10,-9,-6,-2,-3,-1,3,7,7,-9,-9,-2,4,1,7,-4,-10,7,-5,5,8,-10,-10,-4,-6,-7,-9,-3,4,-4,3,-10,-4,-7,8,6,1,-8,4,8,-4,-6,4,7,-3,-3,-3,-7,9,-4,9,-2,8,9,-1,-2,4,9,7,-7,1,7,10,8,2,-6,-4,9,-8,3,-7,-4,5,8,3,2,-5,7,5,-7,-9,-7,-1,4,7,9,-2,-5,-10,9,-10,7,-2,-5,2,-5,6,6,8,-9,5,1,2,-4,-10,-6,-4,8,-9,-2,-6,4,8,-9,9,-3,5,2,9,2,7,-4,2,6,6,4,6,1,-9,-10,8,1,-7,-3,-6,-10,2,5,-5,-5,10,10,-9,-10,3,5,5,-9,10,1,-8,1,4,-3,-9,-9,-10,-5,-1,-7,4,10,-9,-2,-10,7,5,-5,5,7,8,3,6,-7,2,5,-8,-3,-1,-6,-9,8,-10,-2,-3,-1,6,1,3,-3,1,-10,3,6,10,7,-6,3,10,-10,-4,-5,6,-2,-5,-1,3,7,-5,-1,4,4,3,-5,1,-5,8,-5,8,-3,-2,-1,-6,-2,9,5,1,5,-7,6,-10,2,5,-4,5,-5,-2,4,3,8,-1,-9,-2,-6,-7,-6,-5,6,-8,-2,8,1,-6,-5,-3,4,5,6,-8,-6,-9,3,-5,-6,9,-5,7,-6,-1,5,5,-7,3,-10,10,-7,10,-4,10,7,8,-8,-8,-10,-7,-4,-4,-5,-6,7,2,-6,-5,9,-8,5,-10,3,-7,-6,9,1,1,-10,2,7,-1,-8,3,2,-6,7,9,-4,4,3,2,-7,-1,-3,4,6,-3,4,4,7,-4,-7,-6,-1,5,-4,-9,1,5,2,-4,-7,-5,-2,8,10,-6,2,10,-10,9,-3,4,8,-9,-1,9,1,8,6,3,-5,-4,10,-4,10,-4,-10,8,10,-8,-10,6,4,5,1,5,8,6,-3,8,-2,8,-1,-1,2,1,-10,-3,2,-2,7,-10,9,1,-4,7,1,9,-2,4,-2,7,-3,-4,-10,9,-8,-2,-3,-8,4,-5,1,-1,-6,10,-2,-10,9,10,-2,9,-6,-6,-6,7,10,-6,-8,5,-2,2,3,-8,5,4,-7,-7,3,-3,8,10,-6,8,-3,-5,-9,8,-8,6,4,-1,10,3,1,-6,-10,8,3,7,10,-3,-1,-3,-9,10,-7,-4,9,4,-7,-3,-7,2,-5,-5,3,6,-1,2,-9,3,5,5,-7,6,-9,1,-7,5,-4,-1,-2,-2,7,3,8,2,-3,9,-7,-6,-3,-2,1,-6,-2,1,-3,7,9,-8,5,-10,6,-10,4,9,2,2,3,-8,5,8,-2,-10,4,8,7,-8,9,5,-2,5,-8,-9,2,-7,-7,-7,-10,10,4,-3,-7,-1,9,-2,-2,6,3,-2,-1,4,-4,8,7,-7,-7,-9,3,5,-7,2,-5,1,4,-2,2,4,6,-9,-10,-3,1,5,3,-4,6,-2,-6,8,-6,-4,8,-4,10,9,-4,-8,6,6,1,10,10,10,-4,-6,1,-1,-8,5,-2,7,-9,-8,-8,6,6,9,-7,2,7,6,-7,-7,3,4,-8,-9,10,4,4,9,6,-8,9,8,7,6,-10,3,-6,-9,2,1,-7,-9,-7,-3,-6,-7,2,-3,-9,4,-1,-3,8,1,-9,-1,9,9,6,-8,4,1,3,4,-2,-1,9,-10,-3,-4,-5,-9,3,-2,-2,5,-8,-2,10,-2,6,7,-5,-10,-10,-3,9,1,1,-5,4,9,-8,-4,6,-1,9,-10,7,-5,4,1,-1,9,6,3,8,3,-2,4,-4,4,5,10,-2,8,-4,-3,-1,-6,-8,8,-2,2,9,4,1,7,-2,9,-5,-3,-5,-3,-1,-7,8,7,-6,6,4,-9,9,-2,-4,-4,7,-7,4,-3,10,5,3,10,8,-5,7,9,9,-7,-2,1,8,2,-1,-8,2,3,-5,7,10,-8,-5,2,-6,-8,-10,8,10,-4,4,3,5,-3,10,4,3,6,-8,-1,-9,-5,-7,-9,-2,7,-4,1,-8,-2,6,8,-7,-7,-7,1,7,-7,6,3,-8,3,-3,-3,-1,-9,10,-8,4,-6,-4,-6,-3,-7,-8,7,1,10,-4,-4,10,4,1,-1,-5,-5,-3,2,-4,3,1,8,1,7,4,2,3,6,-6,-8,-3,4,3,-10,-6,7,-6,-9,-6,2,-8,-4,8,6,8,-9,-4,-8,10,4,-2,3,-7,-5,-1,-2,9,1,-7,-5,8,9,8,10,5,4,-4,-5,9,3,7,8,-1,-5,-5,-7,-8,-6,-2,-4,2,-4,3,7,-1,2,4,-6,-1,7,-3,1,-9,-8,5,9,8,-4,-5,2,9,-6,6,-10,-2,2,-1,7,-10,-2,4,4,7,2,-7,9,-8,9,-6,-10,-7,-4,-5,-8,-5,-4,4,-1,-4,-2,-7,6,-6,9,7,-8,2,-5,-2,-6,5,-6,-7,-9,-9,-3,10,2,-8,7,10,2,-7,3,-1,-6,10,-5,-10,10,-5,-6,6,-2,8,-2,7,2,-2,-5,3,-9,-5,10,1,5,-6,-5,-10,9,-8,-8,-8,9,5,-2,5,-1,-10,-6,-4,-8,-3,-3,2,2,-6,3,3,3,-5,-8,10,1,-4,-10,-9,9,3,-4,5,-5,6,-4,-9,9,-3,6,-8,-3,3,1,4,-3,-3,4,-3,-10,6,-10,-2,-2,-5,8,3,-8,-5,-10,10,-7,-10,-2,9,-2,7,-3,10,-3,2,-10,5,5,10,2,-7,-4,10,-10,9,8,-1,-2,6,5,1,5,5,9,-3,7,9,-9,-9,-2,8,-2,-10,-1,4,-2,-1,-2,-5,4,-1,10,-4,1,-7,-2,10,5,10,6,-1,-8,5,1,-10,-2], dtype = "int16")#candidate|1545|(1584,)|const|int16
call_1544 = relay.TupleGetItem(func_342_call(relay.reshape(const_1545.astype('int16'), [16, 9, 11])), 0)
call_1546 = relay.TupleGetItem(func_345_call(relay.reshape(const_1545.astype('int16'), [16, 9, 11])), 0)
func_779_call = mod.get_global_var('func_779')
func_784_call = mutated_mod.get_global_var('func_784')
const_1550 = relay.const([[-1,-5,-8,-4,10,8,8,-4,-1,9,-4,4,-10,-6,3,4,-1,-2,8,7],[-3,-6,5,9,10,8,6,7,-3,6,5,1,-9,-2,-10,6,4,-2,5,-6],[9,8,-6,-1,8,-4,-7,6,7,-4,-8,10,-4,4,-6,-4,-2,2,7,-6],[1,5,-6,-4,2,-2,8,-4,-6,4,7,-7,-10,9,-2,-2,7,-3,-10,-8],[4,-5,-1,7,-7,7,10,-5,5,-10,8,-2,-1,8,1,-6,-5,9,9,-3],[-6,-10,-8,-7,-8,-2,8,1,-10,-1,-6,-7,-7,7,10,-2,-2,-3,7,3]], dtype = "uint64")#candidate|1550|(6, 20)|const|uint64
var_1551 = relay.var("var_1551", dtype = "uint32", shape = (392,))#candidate|1551|(392,)|var|uint32
const_1552 = relay.constdtype = "float32")#candidate|1552|(84, 22)|const|float32
call_1549 = relay.TupleGetItem(func_779_call(relay.reshape(const_1550.astype('uint64'), [5, 4, 6]), relay.reshape(const_1550.astype('uint64'), [5, 4, 6]), relay.reshape(var_1551.astype('uint32'), [392,]), relay.reshape(const_1552.astype('float32'), [924, 2]), ), 2)
call_1553 = relay.TupleGetItem(func_784_call(relay.reshape(const_1550.astype('uint64'), [5, 4, 6]), relay.reshape(const_1550.astype('uint64'), [5, 4, 6]), relay.reshape(var_1551.astype('uint32'), [392,]), relay.reshape(const_1552.astype('float32'), [924, 2]), ), 2)
func_653_call = mod.get_global_var('func_653')
func_655_call = mutated_mod.get_global_var('func_655')
call_1554 = func_653_call(relay.reshape(var_1551.astype('uint32'), [7, 7, 8]))
call_1555 = func_653_call(relay.reshape(var_1551.astype('uint32'), [7, 7, 8]))
func_1515_call = mod.get_global_var('func_1515')
func_1517_call = mutated_mod.get_global_var('func_1517')
var_1559 = relay.var("var_1559", dtype = "float32", shape = (1040,))#candidate|1559|(1040,)|var|float32
call_1558 = func_1515_call(relay.reshape(var_1559.astype('float32'), [5, 13, 16]))
call_1560 = func_1515_call(relay.reshape(var_1559.astype('float32'), [5, 13, 16]))
func_1515_call = mod.get_global_var('func_1515')
func_1517_call = mutated_mod.get_global_var('func_1517')
call_1567 = func_1515_call(relay.reshape(var_1559.astype('float32'), [5, 13, 16]))
call_1568 = func_1515_call(relay.reshape(var_1559.astype('float32'), [5, 13, 16]))
output = relay.Tuple([bop_1539,call_1544,const_1545,call_1549,const_1550,var_1551,const_1552,call_1554,call_1558,var_1559,call_1567,])
output2 = relay.Tuple([bop_1539,call_1546,const_1545,call_1553,const_1550,var_1551,const_1552,call_1555,call_1560,var_1559,call_1568,])
func_1572 = relay.Function([var_1537,var_1538,var_1551,var_1559,], output)
mod['func_1572'] = func_1572
mod = relay.transform.InferType()(mod)
var_1573 = relay.var("var_1573", dtype = "int64", shape = (8, 12, 15))#candidate|1573|(8, 12, 15)|var|int64
var_1574 = relay.var("var_1574", dtype = "int64", shape = (8, 12, 15))#candidate|1574|(8, 12, 15)|var|int64
var_1575 = relay.var("var_1575", dtype = "uint32", shape = (392,))#candidate|1575|(392,)|var|uint32
var_1576 = relay.var("var_1576", dtype = "float32", shape = (1040,))#candidate|1576|(1040,)|var|float32
output = func_1572(var_1573,var_1574,var_1575,var_1576,)
func_1577 = relay.Function([var_1573,var_1574,var_1575,var_1576,], output)
mutated_mod['func_1577'] = func_1577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1719 = relay.var("var_1719", dtype = "float64", shape = (10, 11, 4))#candidate|1719|(10, 11, 4)|var|float64
var_1720 = relay.var("var_1720", dtype = "float64", shape = (10, 11, 4))#candidate|1720|(10, 11, 4)|var|float64
bop_1721 = relay.multiply(var_1719.astype('float64'), relay.reshape(var_1720.astype('float64'), relay.shape_of(var_1719))) # shape=(10, 11, 4)
output = bop_1721
output2 = bop_1721
func_1729 = relay.Function([var_1719,var_1720,], output)
mod['func_1729'] = func_1729
mod = relay.transform.InferType()(mod)
mutated_mod['func_1729'] = func_1729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1729_call = mutated_mod.get_global_var('func_1729')
var_1731 = relay.var("var_1731", dtype = "float64", shape = (10, 11, 4))#candidate|1731|(10, 11, 4)|var|float64
var_1732 = relay.var("var_1732", dtype = "float64", shape = (10, 11, 4))#candidate|1732|(10, 11, 4)|var|float64
call_1730 = func_1729_call(var_1731,var_1732,)
output = call_1730
func_1733 = relay.Function([var_1731,var_1732,], output)
mutated_mod['func_1733'] = func_1733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1805 = relay.var("var_1805", dtype = "int64", shape = (6, 2, 1))#candidate|1805|(6, 2, 1)|var|int64
var_1806 = relay.var("var_1806", dtype = "int64", shape = (6, 2, 8))#candidate|1806|(6, 2, 8)|var|int64
bop_1807 = relay.bitwise_and(var_1805.astype('int64'), var_1806.astype('int64')) # shape=(6, 2, 8)
output = bop_1807
output2 = bop_1807
func_1810 = relay.Function([var_1805,var_1806,], output)
mod['func_1810'] = func_1810
mod = relay.transform.InferType()(mod)
var_1811 = relay.var("var_1811", dtype = "int64", shape = (6, 2, 1))#candidate|1811|(6, 2, 1)|var|int64
var_1812 = relay.var("var_1812", dtype = "int64", shape = (6, 2, 8))#candidate|1812|(6, 2, 8)|var|int64
output = func_1810(var_1811,var_1812,)
func_1813 = relay.Function([var_1811,var_1812,], output)
mutated_mod['func_1813'] = func_1813
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1877 = relay.var("var_1877", dtype = "float64", shape = (12, 5, 14))#candidate|1877|(12, 5, 14)|var|float64
var_1878 = relay.var("var_1878", dtype = "float64", shape = (12, 5, 14))#candidate|1878|(12, 5, 14)|var|float64
bop_1879 = relay.multiply(var_1877.astype('float64'), relay.reshape(var_1878.astype('float64'), relay.shape_of(var_1877))) # shape=(12, 5, 14)
output = relay.Tuple([bop_1879,])
output2 = relay.Tuple([bop_1879,])
func_1892 = relay.Function([var_1877,var_1878,], output)
mod['func_1892'] = func_1892
mod = relay.transform.InferType()(mod)
mutated_mod['func_1892'] = func_1892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1892_call = mutated_mod.get_global_var('func_1892')
var_1894 = relay.var("var_1894", dtype = "float64", shape = (12, 5, 14))#candidate|1894|(12, 5, 14)|var|float64
var_1895 = relay.var("var_1895", dtype = "float64", shape = (12, 5, 14))#candidate|1895|(12, 5, 14)|var|float64
call_1893 = func_1892_call(var_1894,var_1895,)
output = call_1893
func_1896 = relay.Function([var_1894,var_1895,], output)
mutated_mod['func_1896'] = func_1896
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1912 = relay.const([[[6.021635,7.933149,3.008518,-2.481469,9.830146,-7.342636,9.733547,6.777248,-9.274507],[5.714079,-1.145496,-0.744583,-7.205547,-8.627765,-3.734388,-1.786943,-0.783575,-4.979155],[-6.280619,8.330585,8.934977,4.109486,-6.370047,-3.968574,-2.025236,0.742508,3.672432],[-2.931992,4.201017,0.430090,-8.140219,6.693503,8.981483,9.991175,-1.869578,1.523578],[-3.977289,-0.347479,3.105493,6.246820,7.002713,-1.416936,-3.913745,-3.406942,-4.194587],[0.514621,-5.747018,2.795712,-2.788859,6.344286,4.632063,-6.620860,5.130501,-6.186323],[5.303013,-2.012968,-9.869929,7.411443,-1.783090,-8.305501,6.867799,2.388488,5.979278],[-5.045152,3.449647,-1.357412,-1.053696,-5.506279,-7.131919,9.655302,-7.769814,-2.288301],[-8.835113,-3.174872,8.445527,2.551464,-3.997538,-3.753073,1.424645,-7.711030,-8.602442]],[[8.705071,8.494255,-8.153726,1.208258,-6.182772,-7.689181,-5.194397,-1.692449,4.522932],[-7.126191,1.566963,9.308287,-6.565662,-1.830337,-6.903135,2.084738,6.453437,6.800975],[-7.786152,3.450190,9.175487,0.444656,2.722098,-0.443710,-0.836477,2.011620,6.507159],[5.205210,-5.541769,-4.244675,4.152971,-9.234215,8.834693,-8.704878,-7.774613,-0.584083],[1.174213,-8.540611,1.375906,0.666570,8.348413,0.943420,-5.752256,-1.972792,-9.190201],[4.711571,-5.678890,5.262026,3.528287,-1.800477,5.408240,9.127027,-8.560575,7.333405],[-6.190371,5.981924,-9.896608,6.526968,-0.441528,6.368705,-2.025562,-3.397927,-2.475165],[-1.264940,1.306326,-2.852672,9.470769,-3.855760,8.369738,-6.303877,-0.177953,5.377940],[-1.668253,2.851746,-2.154487,-6.324218,5.678572,9.725329,-8.987680,-7.831492,-6.994261]],[[-8.995933,-6.111566,-7.994673,9.931311,-2.137339,-6.173488,-1.109948,-3.667251,3.502121],[-7.817212,0.189739,-2.049765,1.179533,2.332602,6.223994,-7.042009,3.739122,-1.796020],[-4.088077,-0.934816,6.873731,-2.084311,-5.706979,-3.238692,2.028519,5.528035,-6.333681],[-3.008902,-6.728216,3.268071,6.806885,9.880296,3.496233,-4.644208,1.135381,-5.946834],[-4.597149,-5.594569,1.683764,-7.261220,0.282624,9.132111,-1.057074,-5.253078,8.887257],[-0.114905,8.789948,-5.998334,8.199512,4.868454,7.230736,0.131556,-6.059009,-1.475427],[-1.138926,9.111346,-8.079666,-5.060063,-1.091634,1.791458,-2.777953,-2.929845,-0.527366],[-2.917201,-3.834203,-3.991717,6.995392,5.218675,-0.838206,0.822758,-1.816028,-8.595643],[-4.464663,0.081410,4.235376,-5.176880,-5.542587,-4.722890,7.172348,-5.421560,-8.903040]],[[-4.100396,2.406538,5.940262,2.761897,-9.873292,7.166322,3.558809,3.299372,-1.877945],[4.000713,2.694632,-9.537831,-5.364406,-1.506185,6.273003,-6.469864,9.792777,2.718999],[3.503142,9.435281,-1.084905,-6.692434,-9.129920,0.845115,5.167187,-6.559482,-6.388500],[-5.014650,-2.176462,-8.015450,4.622223,2.862855,-5.176121,5.270859,-4.800105,6.793203],[-4.069926,-0.582619,-9.883304,6.625091,-3.656346,-3.249459,-7.215176,-6.808516,3.586274],[-8.452711,4.902286,3.367052,-1.634732,9.258593,-1.201895,-3.936329,-0.578876,6.101286],[-6.279268,-1.508217,-3.021382,4.860465,2.192323,-2.992270,-3.476188,4.704189,-6.595201],[5.369171,-5.754098,7.592004,-6.477630,8.811708,-0.980640,3.773664,1.971472,-7.443650],[-0.620256,8.911149,6.697856,-6.311527,-4.632477,0.123357,8.962401,-9.190247,8.677193]],[[-5.642901,8.042178,-3.479448,-7.423588,-7.972997,-3.783860,-3.364061,-8.097800,-9.588907],[5.231289,-5.611435,7.515979,-6.035949,-9.000463,-0.078272,6.039114,3.737835,-1.098911],[-9.046915,9.550537,-7.165468,8.578340,-0.249443,-2.416688,0.984499,-3.097018,-0.507180],[2.466455,-2.103748,6.567182,7.336058,1.330073,4.383253,9.200317,-8.360456,-4.635716],[-0.093396,5.897223,6.360400,4.624672,8.493389,-9.267442,4.950294,6.319949,-6.578118],[-3.761174,3.780365,-1.178815,9.040559,-1.988309,2.646671,4.494145,0.875133,-5.253123],[-4.313667,0.668616,1.412453,7.291697,-6.953728,-1.998122,0.482222,-1.496623,-9.549930],[7.100213,-8.879055,-5.206059,-1.925360,7.534603,-3.579833,2.824200,-9.164239,8.178749],[-8.015296,-4.523739,0.596862,6.917884,-9.396413,3.009331,7.036642,-7.558527,-4.833024]],[[0.240518,-0.651658,-9.336163,-0.143483,-1.466634,1.917934,9.438860,-5.119849,-2.709740],[-2.664199,9.361317,4.243411,-7.313043,7.002823,8.343764,3.127948,2.857810,1.800178],[-5.584041,4.751811,-2.601898,-1.724407,-4.780605,-3.273894,-5.430875,7.062341,2.431964],[-5.288869,6.712591,-8.878657,-9.436674,5.193954,-5.853830,1.688922,-0.510028,2.441634],[3.821901,-7.668912,-8.879921,-4.303761,-0.709428,-5.856064,3.327798,5.589477,8.654070],[3.261819,9.365842,2.909520,9.425039,-1.084360,4.381866,9.033902,-1.439868,-5.133980],[-5.111704,0.816007,-4.612641,-5.317355,0.669127,-5.633718,8.760196,-0.346832,-7.597939],[-4.918024,-4.631097,-2.240598,-4.611093,2.275223,0.047206,-3.349229,-4.655879,-4.633960],[4.446767,-6.315749,-5.926113,0.946025,-8.777519,-2.005740,4.521204,0.559167,-0.949608]],[[9.984708,5.422937,4.451565,7.975702,-5.816357,4.486865,-0.124994,0.590408,3.472161],[-1.154030,3.389208,-1.884736,8.217717,4.359767,-5.209341,-7.075152,-6.040710,-6.699116],[9.200186,4.930797,5.158822,-6.987327,-9.755718,4.271064,-2.300348,-8.285965,-8.046663],[4.301051,4.014319,-8.671428,-4.847119,9.928435,-9.707479,-2.160577,6.510963,3.904025],[8.779496,6.364578,3.748838,6.066342,-3.120392,-6.035425,5.249175,-0.569784,-1.641295],[-4.202622,-1.757007,6.602903,5.154531,-3.223116,-9.919470,8.349143,8.885739,2.904525],[4.066116,-7.810960,-1.339118,4.037733,7.769210,-2.334160,-2.876625,-5.449243,6.541544],[-2.033832,-5.251829,6.741419,-6.717341,-2.933057,6.876393,8.248201,-2.254028,-3.891514],[-3.968956,-6.250024,-2.274360,4.866942,2.392160,1.770366,0.935907,2.355654,-8.730260]],[[-1.769130,-8.417074,-7.615589,-8.351569,-6.152105,-4.524466,-1.077246,-9.351073,-2.384613],[5.275185,-0.083849,9.381416,2.483484,0.244948,-3.746367,-6.008283,-1.620139,4.647254],[-2.717333,-1.309059,6.236725,-1.290576,9.464071,-8.929291,6.326796,5.445991,7.409926],[5.328996,-4.064730,8.720727,-5.812496,2.722443,-2.492416,7.552113,7.148786,-0.577405],[-8.817633,-4.535113,5.736808,3.459354,-0.928449,-3.509316,-4.246598,7.516574,-0.109048],[2.947382,-0.872393,-1.025969,-8.825308,1.095038,6.342912,-0.029317,-2.474846,-6.636395],[3.687666,-8.940309,-5.440670,6.714779,-7.058633,9.034067,-3.846772,5.783072,-2.970445],[2.088666,-7.836153,-4.523370,-3.223281,3.315461,3.511521,8.430713,-5.420850,-0.987093],[-2.266962,0.870512,-9.461201,-0.210525,9.595646,5.508463,7.933316,-8.306070,-3.782609]],[[2.895453,6.295124,3.032927,-1.699221,-7.061049,1.767170,-0.668800,-5.243600,-2.617258],[-9.937986,1.701111,7.153990,6.532199,-1.336570,-4.514239,-2.913161,3.628562,-8.593051],[-1.599988,4.180327,7.454821,-8.688179,1.846363,0.239495,8.543121,-5.310234,-7.674845],[-6.678695,-6.850496,5.533540,9.593807,-7.817424,-2.121729,7.424305,-0.971974,3.963593],[8.140180,3.975924,-6.938510,1.776929,-0.099294,8.784015,6.125525,1.176120,-9.078998],[-7.389728,-3.404398,-5.349119,7.069840,-3.245163,4.780140,-9.932552,1.735306,0.748338],[-5.328549,4.853395,-8.951270,1.567106,-7.553135,0.438573,-9.468956,-5.308278,-0.068807],[4.566766,8.698640,8.805899,6.713025,1.953529,5.930955,-1.806620,1.588378,0.305266],[-6.029259,9.185468,7.470715,4.192798,-5.089970,-5.916625,3.459469,1.415535,6.509831]],[[6.863760,-6.378306,8.441465,9.916616,6.968084,-5.732209,-9.723021,-7.885891,9.182686],[-6.706368,6.066239,9.049917,5.876694,7.648681,2.951310,-0.861027,6.545304,3.103949],[-9.212903,-0.452550,-7.030068,-0.541960,-3.645355,-1.568716,-7.531465,-5.724108,-2.759413],[-6.349096,-3.561522,-9.130688,-0.657284,-8.334841,1.270348,8.843957,-6.698015,6.410381],[-1.228247,5.197676,-5.488224,-3.353606,-2.130500,-5.296289,-9.354622,5.265582,-8.193047],[-6.382185,-0.706799,-6.320497,2.872776,3.442918,-8.952760,-3.535212,0.689349,6.740035],[6.657617,-9.912196,-4.211710,-1.879202,0.318944,-9.472848,2.201150,1.832701,7.187085],[3.839893,9.504156,2.653828,-9.368226,-0.219827,0.958034,3.249530,3.566184,0.922541],[5.561891,1.401503,8.715169,-2.378587,-9.951746,-2.807007,-5.901104,-1.609179,-4.524293]],[[3.498777,0.370660,-0.624950,5.574574,-5.078737,-7.227449,-7.484036,4.064360,-6.044271],[7.301778,-8.453697,-0.386199,-8.894852,-0.529972,-1.662814,-4.894927,9.126038,8.083727],[-3.238667,-1.656638,-2.867650,-7.279465,-7.861836,-6.694369,-5.299587,5.972737,4.641158],[1.184189,-1.248690,2.229325,9.872828,-1.001951,0.725024,-8.338173,-6.459107,-8.020678],[6.256703,-4.034373,4.329685,1.547195,-3.545442,-7.927193,-1.659462,0.910241,6.363556],[-9.848780,-6.176688,-3.816032,-5.880665,-1.429906,0.764556,0.430436,1.666403,-5.908095],[-7.955928,2.692907,-5.307810,9.529714,9.825799,-2.148851,3.543755,7.698731,4.448506],[7.989062,2.913722,9.008175,1.398494,7.427270,-7.398945,9.089053,8.270450,9.013886],[-5.312095,1.522785,-7.970314,-9.059638,-9.920085,6.818446,7.302368,0.822612,-8.853242]],[[1.153235,-6.272923,4.371094,-6.058590,4.796331,8.245189,-3.940199,8.714836,3.567760],[6.001786,6.746513,-4.626128,0.092172,-7.315892,-7.491280,2.709602,-7.380987,-1.255004],[-8.393384,-6.098686,1.070927,2.291138,6.833632,1.810268,-9.519526,-8.318126,-1.048184],[-4.720850,6.756089,-6.457894,-2.063226,6.984169,7.737312,-3.961455,5.589244,-8.329682],[-9.530908,-8.537638,-3.428262,-7.127240,-1.636896,0.733278,6.419952,-4.490798,-8.672720],[-0.320252,4.844147,0.428430,-0.271696,-5.994444,-8.583925,-6.204326,-5.451501,-3.700554],[-4.092795,5.707108,3.248422,4.734965,8.198392,1.463573,-1.468225,-3.476604,-1.223548],[6.557358,0.829793,-2.434584,-2.933329,-1.626327,0.297259,0.044716,7.042745,-7.115017],[8.146343,-7.799723,5.741722,-8.843690,0.670907,5.309958,-7.383547,-6.039598,2.098802]],[[4.924681,9.659257,-4.160402,-5.352288,-7.912368,7.065802,7.185318,-4.990487,5.377766],[1.760672,-3.642722,-8.533481,-5.876831,-9.074771,-6.375532,3.424214,4.193194,6.726712],[4.842489,4.844388,5.596931,-5.613684,-7.269821,-5.049201,6.547331,1.884930,4.190611],[9.012616,6.369987,-3.381930,9.836105,7.220984,0.224974,8.908564,8.009233,-3.004885],[7.172603,2.952895,-9.649272,3.154181,6.706661,1.056559,-4.115730,5.731495,-4.044565],[1.207253,6.609422,-5.348277,4.082744,-9.628408,-0.882064,0.153041,2.621364,6.711220],[3.683716,0.367913,-5.844365,1.573544,-5.276866,-6.779996,-6.572392,-2.286823,-4.138605],[-9.494428,-4.567279,-7.840286,-6.112986,-9.350798,-4.179958,6.834661,-1.898164,2.724924],[6.802665,7.458990,2.026343,-8.181717,0.172804,2.497128,9.817995,6.506031,-7.464809]]], dtype = "float64")#candidate|1912|(13, 9, 9)|const|float64
uop_1913 = relay.asinh(const_1912.astype('float64')) # shape=(13, 9, 9)
output = uop_1913
output2 = uop_1913
func_1915 = relay.Function([], output)
mod['func_1915'] = func_1915
mod = relay.transform.InferType()(mod)
mutated_mod['func_1915'] = func_1915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mutated_mod.get_global_var('func_1915')
call_1916 = func_1915_call()
output = call_1916
func_1917 = relay.Function([], output)
mutated_mod['func_1917'] = func_1917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1940 = relay.var("var_1940", dtype = "float64", shape = (4, 3, 6))#candidate|1940|(4, 3, 6)|var|float64
uop_1941 = relay.sin(var_1940.astype('float64')) # shape=(4, 3, 6)
bop_1948 = relay.floor_mod(uop_1941.astype('float64'), relay.reshape(var_1940.astype('float64'), relay.shape_of(uop_1941))) # shape=(4, 3, 6)
uop_1951 = relay.sinh(var_1940.astype('float64')) # shape=(4, 3, 6)
func_1515_call = mod.get_global_var('func_1515')
func_1517_call = mutated_mod.get_global_var('func_1517')
var_1958 = relay.var("var_1958", dtype = "float32", shape = (1040,))#candidate|1958|(1040,)|var|float32
call_1957 = func_1515_call(relay.reshape(var_1958.astype('float32'), [5, 13, 16]))
call_1959 = func_1515_call(relay.reshape(var_1958.astype('float32'), [5, 13, 16]))
var_1985 = relay.var("var_1985", dtype = "float64", shape = (4, 3, 6))#candidate|1985|(4, 3, 6)|var|float64
bop_1986 = relay.left_shift(uop_1951.astype('uint32'), relay.reshape(var_1985.astype('uint32'), relay.shape_of(uop_1951))) # shape=(4, 3, 6)
uop_1989 = relay.rsqrt(bop_1986.astype('float32')) # shape=(4, 3, 6)
uop_1991 = relay.cos(uop_1951.astype('float64')) # shape=(4, 3, 6)
output = relay.Tuple([bop_1948,call_1957,var_1958,uop_1989,uop_1991,])
output2 = relay.Tuple([bop_1948,call_1959,var_1958,uop_1989,uop_1991,])
func_1997 = relay.Function([var_1940,var_1958,var_1985,], output)
mod['func_1997'] = func_1997
mod = relay.transform.InferType()(mod)
var_1998 = relay.var("var_1998", dtype = "float64", shape = (4, 3, 6))#candidate|1998|(4, 3, 6)|var|float64
var_1999 = relay.var("var_1999", dtype = "float32", shape = (1040,))#candidate|1999|(1040,)|var|float32
var_2000 = relay.var("var_2000", dtype = "float64", shape = (4, 3, 6))#candidate|2000|(4, 3, 6)|var|float64
output = func_1997(var_1998,var_1999,var_2000,)
func_2001 = relay.Function([var_1998,var_1999,var_2000,], output)
mutated_mod['func_2001'] = func_2001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mod.get_global_var('func_1915')
func_1917_call = mutated_mod.get_global_var('func_1917')
call_2023 = func_1915_call()
call_2024 = func_1915_call()
func_1572_call = mod.get_global_var('func_1572')
func_1577_call = mutated_mod.get_global_var('func_1577')
var_2042 = relay.var("var_2042", dtype = "int64", shape = (1440,))#candidate|2042|(1440,)|var|int64
var_2043 = relay.var("var_2043", dtype = "uint32", shape = (392,))#candidate|2043|(392,)|var|uint32
var_2044 = relay.var("var_2044", dtype = "float32", shape = (1040,))#candidate|2044|(1040,)|var|float32
call_2041 = relay.TupleGetItem(func_1572_call(relay.reshape(var_2042.astype('int64'), [8, 12, 15]), relay.reshape(var_2042.astype('int64'), [8, 12, 15]), relay.reshape(var_2043.astype('uint32'), [392,]), relay.reshape(var_2044.astype('float32'), [1040,]), ), 5)
call_2045 = relay.TupleGetItem(func_1577_call(relay.reshape(var_2042.astype('int64'), [8, 12, 15]), relay.reshape(var_2042.astype('int64'), [8, 12, 15]), relay.reshape(var_2043.astype('uint32'), [392,]), relay.reshape(var_2044.astype('float32'), [1040,]), ), 5)
output = relay.Tuple([call_2023,call_2041,var_2042,var_2043,var_2044,])
output2 = relay.Tuple([call_2024,call_2045,var_2042,var_2043,var_2044,])
func_2051 = relay.Function([var_2042,var_2043,var_2044,], output)
mod['func_2051'] = func_2051
mod = relay.transform.InferType()(mod)
mutated_mod['func_2051'] = func_2051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2051_call = mutated_mod.get_global_var('func_2051')
var_2053 = relay.var("var_2053", dtype = "int64", shape = (1440,))#candidate|2053|(1440,)|var|int64
var_2054 = relay.var("var_2054", dtype = "uint32", shape = (392,))#candidate|2054|(392,)|var|uint32
var_2055 = relay.var("var_2055", dtype = "float32", shape = (1040,))#candidate|2055|(1040,)|var|float32
call_2052 = func_2051_call(var_2053,var_2054,var_2055,)
output = call_2052
func_2056 = relay.Function([var_2053,var_2054,var_2055,], output)
mutated_mod['func_2056'] = func_2056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mod.get_global_var('func_1915')
func_1917_call = mutated_mod.get_global_var('func_1917')
call_2105 = func_1915_call()
call_2106 = func_1915_call()
uop_2107 = relay.acosh(call_2105.astype('float64')) # shape=(13, 9, 9)
uop_2109 = relay.acosh(call_2106.astype('float64')) # shape=(13, 9, 9)
bop_2110 = relay.logical_or(uop_2107.astype('bool'), relay.reshape(call_2105.astype('bool'), relay.shape_of(uop_2107))) # shape=(13, 9, 9)
bop_2113 = relay.logical_or(uop_2109.astype('bool'), relay.reshape(call_2106.astype('bool'), relay.shape_of(uop_2109))) # shape=(13, 9, 9)
func_1299_call = mod.get_global_var('func_1299')
func_1302_call = mutated_mod.get_global_var('func_1302')
var_2115 = relay.var("var_2115", dtype = "float32", shape = (26, 7))#candidate|2115|(26, 7)|var|float32
call_2114 = relay.TupleGetItem(func_1299_call(relay.reshape(var_2115.astype('float32'), [14, 13])), 0)
call_2116 = relay.TupleGetItem(func_1302_call(relay.reshape(var_2115.astype('float32'), [14, 13])), 0)
output = relay.Tuple([bop_2110,call_2114,var_2115,])
output2 = relay.Tuple([bop_2113,call_2116,var_2115,])
func_2120 = relay.Function([var_2115,], output)
mod['func_2120'] = func_2120
mod = relay.transform.InferType()(mod)
var_2121 = relay.var("var_2121", dtype = "float32", shape = (26, 7))#candidate|2121|(26, 7)|var|float32
output = func_2120(var_2121)
func_2122 = relay.Function([var_2121], output)
mutated_mod['func_2122'] = func_2122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2150 = relay.var("var_2150", dtype = "uint64", shape = ())#candidate|2150|()|var|uint64
var_2151 = relay.var("var_2151", dtype = "uint64", shape = (2, 1, 13))#candidate|2151|(2, 1, 13)|var|uint64
bop_2152 = relay.bitwise_xor(var_2150.astype('uint64'), var_2151.astype('uint64')) # shape=(2, 1, 13)
bop_2155 = relay.less_equal(bop_2152.astype('bool'), var_2150.astype('bool')) # shape=(2, 1, 13)
output = relay.Tuple([bop_2155,])
output2 = relay.Tuple([bop_2155,])
func_2165 = relay.Function([var_2150,var_2151,], output)
mod['func_2165'] = func_2165
mod = relay.transform.InferType()(mod)
var_2166 = relay.var("var_2166", dtype = "uint64", shape = ())#candidate|2166|()|var|uint64
var_2167 = relay.var("var_2167", dtype = "uint64", shape = (2, 1, 13))#candidate|2167|(2, 1, 13)|var|uint64
output = func_2165(var_2166,var_2167,)
func_2168 = relay.Function([var_2166,var_2167,], output)
mutated_mod['func_2168'] = func_2168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mod.get_global_var('func_1915')
func_1917_call = mutated_mod.get_global_var('func_1917')
call_2206 = func_1915_call()
call_2207 = func_1915_call()
uop_2214 = relay.cos(call_2206.astype('float32')) # shape=(13, 9, 9)
uop_2216 = relay.cos(call_2207.astype('float32')) # shape=(13, 9, 9)
output = relay.Tuple([uop_2214,])
output2 = relay.Tuple([uop_2216,])
func_2225 = relay.Function([], output)
mod['func_2225'] = func_2225
mod = relay.transform.InferType()(mod)
mutated_mod['func_2225'] = func_2225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mutated_mod.get_global_var('func_2225')
call_2226 = func_2225_call()
output = call_2226
func_2227 = relay.Function([], output)
mutated_mod['func_2227'] = func_2227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mod.get_global_var('func_1915')
func_1917_call = mutated_mod.get_global_var('func_1917')
call_2228 = func_1915_call()
call_2229 = func_1915_call()
func_779_call = mod.get_global_var('func_779')
func_784_call = mutated_mod.get_global_var('func_784')
const_2231 = relay.const([-1,-1,3,7,-10,9,6,-4,9,10,5,-6,-6,-10,3,7,2,2,-5,1,4,9,-1,2,-1,3,-2,-6,-5,7,8,3,-6,-3,-8,6,8,3,10,-9,-8,7,-1,-10,-9,-6,3,-7,6,7,6,-7,-1,-4,-8,2,-5,-7,1,-5,-4,-9,10,-3,-6,2,6,-8,10,7,-7,3,9,-10,-9,3,8,10,8,6,-8,9,8,10,-1,7,8,-2,1,-7,9,-4,2,4,-9,-5,7,-10,3,-4,-7,-2,10,-1,-6,-9,-8,1,-7,1,3,5,-2,-4,5,7,8,8,-5,-9], dtype = "uint64")#candidate|2231|(120,)|const|uint64
const_2232 = relay.const([7,7,7,8,-3,-9,5,9,-9,7,5,-2,4,2,-8,-2,-10,-10,8,3,1,6,-5,5,-3,-7,-10,3,-1,-10,1,5,-2,-10,-5,4,5,3,-6,6,-1,-8,-4,-7,-3,5,2,7,4,-4,2,-4,9,9,-6,-5,-9,-9,3,9,4,1,-1,10,8,6,-2,-7,8,6,-10,-2,-3,4,-7,-1,-5,9,-3,-3,2,2,-2,7,-6,5,-4,-7,-7,3,1,7,8,-4,-2,3,8,10,-6,-9,9,-10,-10,2,-5,-1,10,-4,3,-1,-7,-3,-2,5,7,2,-8,1,-7,-7,-9,-3,-8,9,-7,10,-7,-8,-5,8,-9,-10,-3,6,3,6,-4,10,6,-7,2,-8,10,9,-1,9,-9,6,9,6,7,-3,1,-7,5,-1,-3,5,6,-1,4,6,9,7,-6,-10,-7,8,-10,-6,-10,1,7,-7,1,10,5,9,8,2,1,8,6,-5,-2,-1,-9,4,-10,8,8,-7,2,9,-3,5,-4,3,1,-8,8,-5,-4,2,-1,-5,6,4,-9,-9,7,-10,7,2,-9,2,2,6,-6,1,-9,-8,10,5,6,-4,10,-3,7,-6,8,6,5,9,10,-1,-6,-6,-1,-8,8,10,-7,-4,8,1,-10,-7,10,-8,-6,1,-6,-10,9,3,-3,-5,6,5,1,-2,-6,8,7,-6,5,-6,-4,9,8,3,5,-4,-5,-6,6,9,-9,7,1,2,3,-8,-8,-2,-6,-8,3,3,10,6,7,9,10,-5,-1,8,5,-3,-2,-9,-2,-1,-8,2,-4,-5,4,1,2,-7,-3,9,3,-2,10,5,-10,-6,-3,-8,9,-1,9,-4,-8,-6,-8,-10,8,5,-5,2,9,4,8,-10,-5,-7,3,-5,-4,1,-5,-10,2,3,-6,-3,-2,-8,10,7,-8,-10,-8,1,6,-2,2,-6,-9,-2,-5,-1,-3,-9,-4,-8,3,-3,-5,-2,6,-3,-8,-3,-1,2,-1,5,10,8,-10,-8,6,-3,8,3,-9,-2], dtype = "uint32")#candidate|2232|(392,)|const|uint32
const_2233 = relay.const([-4.066831,-7.642446,9.923840,7.916666,-4.768402,0.204744,-0.748493,-7.399154,7.277327,9.483063,1.789899,2.557789,-1.089495,-7.670272,-8.269619,2.662609,-6.095882,7.096046,1.837923,-0.700526,1.625394,-6.700571,-2.029411,4.398766,9.162721,0.610664,-2.138917,-6.414075,-7.766016,9.600354,-0.555365,5.164673,-3.008764,-0.478400,3.030460,1.168523,8.985079,0.770784,0.098149,3.485368,4.683001,0.617856,9.361587,-6.340030,-4.136378,-2.394523,7.212581,3.033603,3.405271,6.401409,6.989765,3.964576,2.173803,-2.329308,6.533341,6.227172,-9.000534,7.130138,-7.147498,-2.751690,1.782861,1.075961,-1.661958,-0.954284,8.045990,2.023093,-8.768924,8.686150,8.917385,-4.155774,4.209627,9.311048,-6.499398,-9.193633,6.686349,-3.101120,1.783168,1.844139,-0.428588,0.978890,4.853798,-4.736537,8.379365,9.253651,-1.324595,-0.547177,4.942604,0.265251,-6.895706,0.578677,-3.021112,-6.075165,6.336770,-8.389321,2.179885,6.809132,-7.606582,-3.804130,8.132774,-1.504343,-0.230151,-4.345231,-9.386597,9.120108,3.640529,-9.409944,-2.727924,9.933776,-4.501358,-2.317150,-0.815763,7.856009,0.886465,-3.761491,5.289589,-8.825820,0.581577,-7.533185,2.189965,-1.814569,-9.497670,-2.843829,2.666640,-3.336704,3.685179,3.119822,2.602631,-4.883365,1.993326,1.783351,7.294441,-5.987646,-5.437687,6.665815,-6.070723,-0.445355,-1.170655,-9.343366,3.623386,-0.968595,8.771591,-9.700316,-0.599139,0.155360,7.861914,-5.875988,0.388758,-0.934381,3.500368,1.659404,9.968220,-3.340103,-0.285981,-3.530722,-7.701407,6.022253,-6.571300,-4.951551,-7.799129,-3.937626,-9.538741,5.390921,5.528358,-9.164187,8.720852,5.483329,8.955516,-8.748576,-4.525081,4.856472,8.399777,-3.140162,-0.120909,-3.108658,-5.092064,5.396390,-6.391270,-9.909387,-6.654933,-2.824650,-4.869266,-2.831129,-8.861603,-1.991596,8.497689,1.127180,-2.494598,1.013691,-6.571533,1.534590,-5.624311,3.546035,7.772474,7.201619,-3.776117,6.174967,6.988473,4.865131,1.286488,-1.776285,1.657303,4.720294,8.496321,4.326411,2.831315,-8.903858,3.951650,-8.494125,-7.535769,-1.698390,0.173313,6.281770,6.963685,-9.519270,-5.121873,-6.280570,-9.702037,9.592069,-3.798785,7.786978,-8.467663,2.601918,-2.240416,-6.732303,4.029777,2.341605,8.295505,4.674047,6.611794,7.949199,-6.329184,-3.826822,4.081751,-2.863127,-2.826467,0.542404,-6.177431,-3.175930,-6.784886,5.765666,0.045814,1.685437,9.406488,4.086825,-1.498841,1.922921,-8.984373,-6.377050,4.720160,5.769488,-6.596819,-4.754566,-6.210461,2.232832,-0.224522,-2.110868,-8.415325,-6.779717,8.084411,-7.031302,-0.195988,-8.884905,6.559213,-9.654362,-9.745748,-7.981756,8.518190,2.834517,3.710964,-0.137912,9.594358,9.927269,-4.448445,9.477478,-0.302379,-1.247976,0.535923,1.173227,5.715893,-5.503982,-0.831103,-3.775939,3.929319,6.451329,6.589547,-2.727302,-0.645273,-6.734776,3.468909,-6.712500,5.547516,-4.338822,-0.012956,-0.652427,-7.901687,9.444492,9.287056,-9.145420,6.045118,-6.035398,9.490727,3.574990,-7.991492,7.391047,6.496330,9.599143,-9.400166,-7.833536,-9.172604,-9.614382,7.185099,8.768771,9.356680,6.489556,0.502517,3.513309,2.666063,-7.317848,-1.791244,3.832584,-2.519973,2.161023,7.136664,8.994037,-2.015243,-1.856285,3.121363,-5.578541,7.036313,5.897018,8.024916,4.913335,6.457076,2.958265,9.474107,1.361886,2.887384,-9.061803,-2.135326,-2.300900,2.277941,-6.637867,-2.450124,-1.718209,4.304294,-4.830512,-1.632434,0.091697,-9.214789,-6.397339,7.201436,7.682692,-0.905594,2.378801,7.406255,7.289336,-7.476319,9.652010,-1.328435,-1.953099,3.259862,6.995481,7.303696,1.828954,4.942465,3.613044,3.070860,2.348840,7.142373,0.177806,5.808156,0.968118,-3.307647,-2.146658,-4.854463,-6.681284,-4.855423,-0.529564,-7.523819,6.572908,4.316269,9.143739,5.016765,-5.671986,2.894189,0.680111,-7.489309,5.769379,0.803691,9.838944,-5.361646,4.290714,7.979329,-2.448699,3.726171,7.792092,9.201562,4.083237,-6.180503,5.075041,5.109548,-2.555415,5.235066,0.908741,2.724581,0.951756,-7.776319,-6.104780,-3.038118,-3.464949,-1.512225,-6.192780,-7.788908,-8.715678,6.849361,-7.944418,-2.533891,-9.803062,-5.757270,-0.846447,-4.758996,-2.027673,-8.614911,8.258257,1.778587,-1.130157,5.039139,7.202181,2.198900,-2.947925,3.538565,6.444281,7.405927,-0.885390,1.522747,-3.024017,-1.661555,0.537480,3.999598,0.348504,-9.242897,6.351353,-8.088442,4.045664,-7.626277,-8.025960,-2.322833,-6.243905,9.494558,-7.641166,4.147141,-6.430222,0.913846,9.501360,-9.308997,3.083428,-5.321966,2.471500,-0.082733,-6.949616,-0.587823,-1.582326,6.077668,8.671461,4.853591,2.253105,-8.085612,-7.102092,1.136888,-2.000091,-5.175582,-9.773457,-7.490492,3.540625,-3.128157,-0.688252,-0.105477,-2.010987,7.308055,-1.937409,4.495422,2.881914,-1.614917,7.325678,1.687317,2.724991,4.476979,6.667111,3.372428,-8.728448,-3.955260,5.490384,-2.395779,-2.212499,5.661647,-7.136119,7.814744,-3.624630,-3.336242,6.075938,5.312894,4.523393,7.777258,9.241566,-3.358859,-3.714495,-3.240216,0.136752,6.028751,-7.636850,7.579264,1.676454,-9.579772,-0.396686,3.006734,1.608323,-5.099767,-8.389940,9.571296,9.744306,2.550518,-4.741184,6.760627,-2.989365,-5.639535,5.030556,-9.444304,-6.740431,-7.598563,1.267314,-5.310307,-5.526688,4.720930,-4.191639,-6.285871,-9.529310,-0.615962,5.374330,5.402121,-4.310510,-5.466756,9.770089,0.672147,-3.167700,-8.525875,9.054699,-8.075678,2.137137,-9.682419,-2.369390,1.908240,9.241458,7.919402,8.862686,-5.399274,-9.481774,8.573783,7.125650,2.677434,-8.912601,2.504579,6.585421,-9.482180,-2.538054,-8.637914,5.497563,5.680702,9.976232,-4.804968,9.801377,8.172038,6.752531,3.198354,3.024808,-8.050283,-5.612211,2.892546,6.140519,9.495364,4.120863,-5.179445,8.210390,2.892138,9.429253,-1.434681,-4.524355,-5.334861,-6.611592,4.092011,6.787268,-8.271296,6.477158,9.346921,7.133068,-3.848877,-0.663103,1.489943,3.173939,4.520620,-6.775014,0.150576,8.085132,8.353758,-1.120278,0.578137,-1.603996,9.461767,8.606184,5.330544,1.536473,9.892493,-4.830316,-2.895431,8.929054,-3.130530,6.098811,5.053646,-5.668372,-5.641726,2.608264,-8.804707,2.409468,7.687257,-7.558659,9.837831,9.279554,9.456965,-1.553480,8.837586,5.320944,5.693874,0.312926,0.258751,1.940237,-6.056207,8.415872,0.520377,8.364605,-4.324590,9.015363,6.283280,-9.075092,-4.380752,-0.563199,9.655813,-9.608403,-7.910570,8.898186,5.611174,-5.815330,7.020178,-3.293944,-5.044194,4.948164,6.546955,4.140582,6.658009,0.267386,-4.978131,7.294695,-5.345710,-0.260187,-0.230296,-2.606917,2.415098,8.131575,2.696121,8.903759,3.054747,-1.464669,3.182981,-8.610690,0.660535,-4.527246,4.898445,0.480379,5.805890,9.489319,8.643223,2.499820,-5.066016,9.708095,-8.595676,8.028783,-9.272192,-3.016979,9.448957,-2.478781,2.693855,-7.044032,9.961839,-4.571233,-5.515891,-6.945704,8.043848,-5.986181,-4.291872,5.104362,-9.429064,5.019763,-1.962807,-7.182785,-5.226269,2.479668,9.551383,-2.487153,5.666983,-5.993124,-4.474624,-7.621340,-9.511313,2.971074,-3.634271,-3.769183,-7.360653,8.109336,3.708171,-4.277586,6.167728,1.791336,-7.237439,0.827536,-2.398687,3.339383,-4.840589,4.907994,-3.413174,2.237876,4.023063,3.290394,1.383848,4.088406,-4.141240,-8.654584,1.877837,-8.012932,-8.360101,3.671294,8.636955,7.257590,-2.407008,4.206197,-5.217830,-4.643675,-8.119822,0.307389,-1.903778,-2.700544,-2.702496,-8.770838,2.630055,8.013625,-4.804220,-8.282031,1.343496,5.264411,-9.926234,-3.151614,-4.234006,0.841700,-2.282150,-9.171397,3.491037,7.299702,-0.555782,5.429645,6.338746,2.051665,6.608891,6.355475,2.933372,1.547414,6.374578,-3.316142,-5.417960,-9.216760,-3.887628,4.049805,-7.307762,-1.521258,4.402237,-9.571173,-2.340224,-6.306010,8.537266,2.514720,7.278733,0.506103,-7.085586,-6.119805,1.394697,-0.043009,0.426608,0.548826,-7.904987,-4.354787,0.766242,-7.826139,-6.898667,6.851862,2.415589,5.177945,6.902012,3.806517,-6.552049,-6.420907,2.776596,-1.168801,9.970525,-3.157371,9.685803,4.650357,2.246249,-3.497035,-0.248593,1.750439,-8.412402,-8.028353,4.994975,-5.237999,8.225226,6.365381,9.378262,-6.334344,9.185643,-5.165026,0.306502,8.770109,-0.625795,9.239696,-1.421525,-6.230784,6.488412,-3.430999,-5.420574,-5.615572,-2.313251,-7.070879,3.295763,-1.436692,1.906231,6.479051,-6.835461,9.899168,1.791516,7.913193,-1.643856,-4.842758,0.172555,-9.426941,5.847676,3.836951,0.884019,6.721635,-4.072347,0.395381,2.678586,2.603706,-7.244744,-7.413092,7.174133,7.511000,3.089025,7.031843,-6.766565,-7.274237,-3.620365,7.455460,-5.632717,3.731637,-6.628339,-5.212827,5.917528,3.508649,6.781989,9.163304,-3.225072,-8.935265,7.740731,-4.470006,1.575486,4.612246,-3.600543,3.973471,-5.985040,-1.413238,-4.196954,-3.076565,-8.682479,4.182851,3.229009,-1.443622,6.274496,5.851419,-9.302113,-9.054791,-4.071710,1.229859,3.817499,2.754218,6.064322,-2.873091,7.104667,-0.342702,7.875587,0.534406,-3.339311,-9.448738,-2.597160,-2.401020,3.826388,-6.240769,1.157634,-4.241333,5.642432,-4.364198,4.740566,-4.648383,2.925775,-6.698034,-2.468002,4.995115,8.038400,-8.792063,8.135914,-9.561358,6.155204,-0.672158,2.962585,7.051986,4.687451,6.289883,6.471064,0.737473,-3.320788,9.623314,0.427486,-1.041247,-0.465224,-8.882651,8.066561,-3.172034,3.388213,3.968173,6.866358,6.348536,-3.666920,-0.443062,-9.099562,-8.908474,6.928818,1.821103,-8.829471,-0.021841,-7.361126,-5.233067,2.059704,2.934962,-9.061736,6.851644,4.669404,-7.557402,-5.728501,2.795126,-1.623709,0.905729,7.725731,-0.063233,-4.965323,-1.954088,8.880787,5.056185,0.262309,9.159701,5.433688,-8.411367,-4.979224,1.181192,5.416717,8.292684,-6.237467,3.199427,-4.076922,-4.757765,-5.068558,3.549692,4.659388,7.925356,7.836733,-6.248256,3.838602,-2.617011,8.891549,-0.102976,-3.808564,-0.044746,0.955006,7.421846,5.351079,-6.222991,-7.785465,6.592253,-3.541602,5.805258,-2.645960,0.700918,-0.272745,6.410989,8.786537,-8.279259,6.929582,-7.563466,-2.452970,-7.458279,3.068568,-2.747824,9.712511,-7.857991,-3.221760,0.928552,7.848123,-4.766864,-6.790848,-5.040135,-0.561776,-1.209129,7.093049,-9.284558,-1.629906,-4.025280,6.119310,1.680020,-3.792699,3.993274,0.304001,7.181642,7.600566,-8.571404,0.753287,1.246552,5.376565,-0.555990,-9.130954,0.661229,0.058166,0.964925,-2.523290,5.552217,-4.653936,8.867420,-7.882066,-1.870790,-4.490587,0.780658,5.823313,1.196333,-0.293179,-6.540579,-5.344231,4.813056,9.712972,1.877673,-8.435967,-4.396199,9.367343,-7.476495,3.795975,0.147564,-4.462929,3.321228,1.408297,-1.479431,-3.600127,-9.792542,-1.783740,1.973276,-6.171490,6.214020,4.643219,7.572287,4.475930,-6.264713,9.825559,9.643113,7.230212,0.085673,2.139702,-2.894919,-8.589450,5.588628,8.756718,-0.167039,0.247331,-0.799114,-2.111491,7.708753,6.006948,-4.655147,6.556155,-5.488670,-5.475460,5.812196,-3.764261,-9.488744,-1.124693,7.871299,-6.546602,-2.171165,-6.785124,-1.103823,-9.732243,-3.806860,-4.452830,-7.432854,-4.507484,-0.250743,1.705550,7.077322,1.495036,-4.966086,0.270604,9.310047,-2.486978,5.091890,-8.902792,7.559979,5.136648,6.754577,-9.965081,3.950498,-7.328265,9.662127,2.289686,3.913101,-3.291103,-7.710867,-7.801133,3.902734,2.386131,1.469902,7.533294,8.880123,-5.297667,-1.825490,-5.028075,-0.410132,5.677085,-9.051534,-5.565524,1.569377,-4.676151,-8.292572,-8.480670,0.479662,-3.893724,3.659659,9.979963,-6.369060,6.139740,-5.976400,-7.669300,1.594718,-3.923341,-9.461230,7.253214,-4.058856,2.375057,-3.738982,-7.446122,-2.508782,-0.062793,-9.008908,-4.647739,-9.486449,5.811553,3.378650,8.175729,6.456853,5.969913,-8.459542,-1.777616,-0.644522,5.657697,3.653004,-7.523254,-1.091677,7.846860,-7.764004,8.318016,-0.261418,3.299757,-6.533789,-4.817186,-4.468437,8.671237,-8.224730,1.743413,3.423104,-5.126554,3.674924,-1.108135,0.140911,-7.267782,7.549421,-2.630011,8.676294,-9.192480,-1.377803,9.705592,-4.272214,1.305000,-1.670706,0.170426,9.165153,-8.059430,-9.855255,-0.653250,8.910976,0.246512,-9.312885,-2.048051,4.186595,8.498842,1.981299,-0.248203,2.380625,-3.880108,9.423203,-4.134004,9.663655,3.401941,1.309424,-8.768804,-2.059137,-1.815262,4.314045,-9.383827,9.568119,2.847077,8.899021,-4.620460,2.236657,-4.499857,-7.745274,-5.280444,-4.289674,7.349669,8.710117,-3.521667,7.481076,1.195309,2.951191,0.266747,4.687124,1.800314,-1.608000,-8.040390,-1.506743,-6.392631,4.089283,7.042317,-9.216133,9.303462,-4.993799,-7.462027,-0.601196,-2.000390,9.618213,-5.065169,-4.808479,0.771101,8.449324,2.787875,0.614909,-4.191991,-9.688059,-4.271099,-5.233652,-5.035612,8.709522,-7.564265,-8.200687,2.487803,-4.773297,7.083750,3.619556,-8.454349,-6.794048,-3.867662,8.133304,-7.024460,-6.786302,9.019198,-8.060763,3.725810,-3.923537,-1.345612,6.061645,-2.084781,3.026319,-1.161771,0.431159,-8.882156,-7.041583,4.127547,6.060562,0.646683,-3.099714,9.610210,1.036620,-6.866564,-0.556885,-7.225197,-0.747175,-3.651045,-1.004573,-7.395834,0.409443,5.119745,8.061372,3.188711,-2.532093,1.045936,0.201535,-4.731348,4.973262,-8.155587,0.931335,8.034961,-6.499542,3.527096,8.510118,-6.998074,-2.630133,-1.118938,-7.228588,2.985425,5.564133,4.875787,6.766264,7.933392,-9.147187,-8.599170,-5.903849,5.626126,2.728337,-2.809478,-3.835113,1.787625,-2.151545,-0.713192,-1.372949,-6.028447,-1.759713,-7.385391,1.375031,7.596171,-4.450923,2.652959,4.484501,5.778384,1.091613,8.284892,-4.488298,2.980711,6.999472,3.750780,6.594689,1.695115,1.112002,1.416220,9.536741,-0.392613,-2.190649,-1.777552,-3.193680,8.840389,0.097080,0.703119,3.946089,3.233966,-7.038967,-4.823355,-8.052502,-3.464344,-3.214880,-5.462121,-6.911859,7.337069,-5.156520,-4.689780,4.144469,-1.250829,4.750215,-2.064894,-3.625492,8.527909,-9.092171,-9.335891,8.903242,-4.288719,-7.611096,2.246310,9.087929,-5.595494,-9.907181,-3.069233,-0.114633,1.900882,-8.463100,-4.615643,8.917680,6.212375,-6.596587,-9.096505,-6.880232,5.896361,3.936334,3.435994,0.701097,-2.798894,2.772456,5.124831,5.442037,7.241655,-4.476519,2.210733,1.509331,3.340368,-1.684934,6.848528,-9.126475,-8.423391,2.649932,-6.476533,6.149405,-8.959812,4.345491,-4.517807,-6.194398,-9.237792,9.430268,-8.835227,-0.508176,-3.414993,0.612954,-8.144246,-5.051877,5.262690,-2.489265,-6.138136,-6.078994,-2.378514,-2.998324,8.074559,-9.908663,1.303350,8.918393,-1.448669,9.285439,-1.886597,-2.500637,-5.844726,0.532863,-6.798935,9.415832,1.401595,-8.733650,0.144183,-2.163918,7.940671,-5.780203,0.684324,5.885034,-7.968229,-3.371814,6.672923,5.314197,-8.784259,-8.061845,-9.422455,9.461449,4.109031,-8.624232,8.039187,1.992339,5.266003,0.654375,3.478802,2.898138,-5.322089,4.196133,-8.207808,2.825353,1.574738,-6.192137,-7.560716,-1.227374,9.976964,-1.069906,3.440295,2.280023,-9.040841,3.042546,2.549180,7.178222,6.187068,-2.658721,8.730356,-5.744337,9.236269,-6.159990,-6.525684,7.163871,2.538622,-6.823805,-0.242907,-9.486629,2.180487,-0.325300,-5.524977,-4.612544,-5.261102,9.902031,-1.124050,1.856981,-4.293639,8.508354,-3.028385,-4.581796,7.130437,-3.220186,4.027810,-9.496073,4.854506,3.057056,-7.316063,4.443620,-6.021156,-0.931775,-8.010294,-5.565486,0.999172,6.324993,4.048711,-2.976500,9.458356,-3.312167,4.110083,4.826754,2.082915,-5.967528,-3.239707,9.220356,-2.832498,3.744598,7.053154,-3.765895,-7.145023,-2.824329,3.543879,-3.468081,7.296175,2.720567,0.172309,5.745976,-2.492332,-8.401640,4.188774,2.726892,8.955470,-1.732907,0.839468,3.340583,5.974432,6.848992,-1.312053,4.053775,-2.157767,-1.708004,7.101355,-8.553360,7.458145,-2.478417,-8.854957,6.823353,-9.795855,-3.379177,-9.193825,4.327383,7.634534,-7.362682,-4.827433,-2.178637,6.570398,-5.238275,-7.513169,-3.884206,5.574359,4.000213,-9.631505,5.442039,-8.801938,-7.108528,-8.235007,-7.035587,-0.107021,6.162803,-1.776363,9.774730,6.781641,-4.481880,8.185740,1.362402,0.733893,-9.239316,0.298365,5.140262,-4.342203,-2.732497,0.855622,-5.981353,-3.962723,7.752373,1.461189,-2.242998,-0.261315,4.342046,5.278290,4.356155,3.478413,-1.124408,1.984115,-3.887129,-8.615079,-5.103114,-5.886113,8.023939,0.941250,6.283186,-8.586178,6.118735,9.481439,-2.727275,4.320155,8.838952,1.583199,-2.835437,7.616155,-6.060847,0.019296,-6.216103,-7.274817,-7.787956,-8.576281,-6.564590,3.512755,4.950079,-2.238539,4.285760,1.665032,-3.509047,1.114983,-2.470858,-7.284621,-0.208800,4.805495,3.359489,-8.949608,3.652111,5.284112,4.124014,4.994469,7.204878,-4.985457,-8.742024,-7.181764,6.416378,2.465523,-6.281697,-6.922868,7.712099,2.234008,9.350659,4.850416,-3.347796,7.824271,6.642842,6.402738,-8.053999,-7.071922,8.652627,-4.081201,-6.166930,-7.054910,3.110908,0.697104,1.944251,6.913685,-9.643327,7.145835,6.598650,0.154178,-3.595961,-7.292378,-0.647622,3.903371,8.725842,-3.777789,0.374552,-1.593082,-7.545714,2.793366,9.405350,-7.565808,1.451021,-1.622851,-1.005287,-5.219319,-2.033896,-4.564947,2.880687,7.950583,6.481844,-6.313852,-4.426936,4.394725,-3.347494,-4.322916,0.910712,4.877580,8.297345,2.012954,3.392396,-3.359087,-0.402662,8.621297,-1.617567,-0.757890,-9.494482,-1.669060,-5.068512,1.012331,-6.995622,-0.223801,5.775639,5.221662,4.052826,-2.541998,-3.349537,7.112819,8.151305,-0.970776,5.399349,5.008263,1.198656,-9.211459,8.726640,-1.616055,-8.634075,0.656920,-9.099998,-6.230797,-8.371377,2.877970,7.651884,0.518402,7.467246,-5.691177,5.736736,-4.843167,8.386650,-8.099576,4.169034,-9.720094,5.461484,0.371486,-8.536357,6.696784,-3.103005,4.663605,1.740169,6.031538,-3.000840,5.882165,1.879792,-6.669338,0.897495,-2.964215,7.081932,-7.648866,-4.336853,3.289727,5.613818,0.335703,5.471499,3.053977,-8.838416,1.299882,-4.038391,-9.781226,-9.067621,-2.246085,7.898234,-1.813708,3.718355,7.633428,-2.735282,9.573566,7.492845,-6.705800,9.257643,-7.146781,-8.263435,4.242594,-1.670285,-9.276085,-6.470571,-5.270226,1.667556,3.672599,4.227532,8.262494,6.027454,9.033801,4.328810,2.519770,7.513978,-1.519234,0.003750,-2.197878,6.494494,-2.541565,8.648091,8.335209,-6.861319,-5.574825,6.042100,1.320732,-8.395070,-3.859785,-0.764938,-6.910355,5.273484,6.700123,-1.979216,-8.463027,8.263617], dtype = "float32")#candidate|2233|(1848,)|const|float32
call_2230 = relay.TupleGetItem(func_779_call(relay.reshape(const_2231.astype('uint64'), [5, 4, 6]), relay.reshape(const_2231.astype('uint64'), [5, 4, 6]), relay.reshape(const_2232.astype('uint32'), [392,]), relay.reshape(const_2233.astype('float32'), [924, 2]), ), 1)
call_2234 = relay.TupleGetItem(func_784_call(relay.reshape(const_2231.astype('uint64'), [5, 4, 6]), relay.reshape(const_2231.astype('uint64'), [5, 4, 6]), relay.reshape(const_2232.astype('uint32'), [392,]), relay.reshape(const_2233.astype('float32'), [924, 2]), ), 1)
output = relay.Tuple([call_2228,call_2230,const_2231,const_2232,const_2233,])
output2 = relay.Tuple([call_2229,call_2234,const_2231,const_2232,const_2233,])
func_2236 = relay.Function([], output)
mod['func_2236'] = func_2236
mod = relay.transform.InferType()(mod)
mutated_mod['func_2236'] = func_2236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mutated_mod.get_global_var('func_2236')
call_2237 = func_2236_call()
output = call_2237
func_2238 = relay.Function([], output)
mutated_mod['func_2238'] = func_2238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2360 = relay.var("var_2360", dtype = "uint32", shape = ())#candidate|2360|()|var|uint32
var_2361 = relay.var("var_2361", dtype = "uint32", shape = (16, 1))#candidate|2361|(16, 1)|var|uint32
bop_2362 = relay.not_equal(var_2360.astype('bool'), var_2361.astype('bool')) # shape=(16, 1)
output = relay.Tuple([bop_2362,])
output2 = relay.Tuple([bop_2362,])
func_2366 = relay.Function([var_2360,var_2361,], output)
mod['func_2366'] = func_2366
mod = relay.transform.InferType()(mod)
mutated_mod['func_2366'] = func_2366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2366_call = mutated_mod.get_global_var('func_2366')
var_2368 = relay.var("var_2368", dtype = "uint32", shape = ())#candidate|2368|()|var|uint32
var_2369 = relay.var("var_2369", dtype = "uint32", shape = (16, 1))#candidate|2369|(16, 1)|var|uint32
call_2367 = func_2366_call(var_2368,var_2369,)
output = call_2367
func_2370 = relay.Function([var_2368,var_2369,], output)
mutated_mod['func_2370'] = func_2370
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2424 = relay.var("var_2424", dtype = "float32", shape = (16, 5, 6))#candidate|2424|(16, 5, 6)|var|float32
uop_2425 = relay.cos(var_2424.astype('float32')) # shape=(16, 5, 6)
output = uop_2425
output2 = uop_2425
func_2430 = relay.Function([var_2424,], output)
mod['func_2430'] = func_2430
mod = relay.transform.InferType()(mod)
var_2431 = relay.var("var_2431", dtype = "float32", shape = (16, 5, 6))#candidate|2431|(16, 5, 6)|var|float32
output = func_2430(var_2431)
func_2432 = relay.Function([var_2431], output)
mutated_mod['func_2432'] = func_2432
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2468 = relay.const([[[-0.729675,8.068647,-7.391248,-4.659077,-5.430014,-1.775951,8.469620,4.876670,7.223515,-4.095853,0.173373,1.198430],[-7.200081,0.012032,4.421411,1.259721,7.987804,-0.403316,-0.613853,-9.086718,3.554537,8.156464,-1.579395,-7.341275],[4.992617,-3.084326,-5.225695,9.382449,-5.912158,6.784567,6.183549,1.584109,-5.774217,7.237057,-3.227528,0.964901],[-0.385213,-9.718730,-9.137933,-9.131982,3.848707,-9.178665,-2.118997,5.836190,-9.840873,-2.064045,7.835937,-0.165928],[-0.307955,-0.253655,4.395166,-8.683545,7.599933,2.380167,0.545869,7.188001,-4.384750,-8.092854,1.873008,3.422861],[3.888984,5.487775,3.552978,-3.959475,6.604426,-3.504508,-8.340898,-7.243598,-3.543029,1.083310,4.519348,-9.256630],[-7.444185,-3.652863,-5.617781,2.617717,-6.949262,1.824435,-5.470124,3.855556,-1.775339,9.575822,-0.635519,-9.218360],[1.407889,-5.692309,-9.845915,-6.124183,-4.950552,-3.539536,-0.561972,-4.971714,3.633457,-3.639722,8.545956,4.993367],[5.368793,-8.014069,5.239818,-6.323990,7.298295,5.821081,-0.436516,-9.746128,6.402490,4.260928,2.572823,-2.590211],[0.909094,-5.874896,-0.580085,1.183763,-6.757532,6.383932,-5.598672,-5.469003,-5.327745,-5.003023,8.450573,2.092042],[3.628314,-3.081032,-8.697112,4.907819,8.110572,-2.252981,-0.737642,-3.745757,-4.548541,-1.091451,3.679433,-6.334988]],[[-7.250192,-7.140401,1.735303,-0.665480,7.355605,7.698193,6.440403,4.550046,2.658365,-0.976471,9.090859,-1.146858],[-7.976699,0.119934,-5.431902,-1.707358,-8.272285,-1.910910,-9.175681,-8.358282,-2.064391,-4.099166,7.177917,-0.002047],[2.076223,-4.033341,2.573904,-6.367734,3.699939,-6.299613,0.138908,-5.814839,7.348142,-1.456045,-5.170632,7.109131],[-3.074807,-9.184834,-5.382870,-0.631610,-8.177296,-4.830588,-2.030441,8.463347,-4.203290,4.680823,-0.164077,5.654811],[-6.036891,-1.241088,7.360383,0.444809,0.945297,9.490192,7.987610,3.251204,-1.659283,1.936286,5.711853,-5.870360],[-7.972821,9.929089,6.967208,7.250398,-6.178289,-7.887827,5.347706,-2.191165,-3.054143,-7.633125,1.045044,5.648745],[-8.649746,-2.926641,6.998517,7.493227,-1.608606,6.036740,-3.967264,-4.384138,-2.812874,-8.738024,-2.749366,-5.521216],[-4.412102,-8.432882,-3.271916,7.477295,3.142787,-4.482010,-8.288426,-2.169729,5.349977,-4.412431,-2.891336,-7.766866],[-6.238059,8.733479,1.152966,4.430583,-9.301527,-0.301874,9.739312,5.341584,7.899524,7.744474,-9.990576,8.397872],[6.929071,3.888762,-9.011360,-5.353748,-2.874008,2.159970,6.280133,6.522405,7.850002,4.936639,1.400824,2.849861],[-9.758977,-2.231507,-4.022103,-6.600920,6.590810,-1.137953,-1.883211,-2.354673,-3.414324,-9.502080,-6.309268,5.735341]],[[3.664068,-6.100662,-7.477869,-3.382931,1.157920,6.311372,-7.615228,5.799146,9.199242,0.733324,6.226346,-4.750034],[1.052702,7.851528,-6.314508,1.446444,8.776679,-5.721998,8.098238,0.132567,7.004489,3.303586,-6.892953,9.131712],[-5.212556,0.556755,9.893840,4.988485,6.957226,-9.135370,0.587192,2.347978,-5.971894,-5.214305,-2.823363,-3.525628],[-3.990657,0.850579,-3.495529,-8.868194,7.245486,-5.491278,8.213903,-5.200544,9.163257,-6.995756,-7.268889,9.086859],[7.541342,3.541772,6.237919,8.146562,6.434459,6.816553,-1.386569,-1.888980,5.442247,-4.439871,-0.242413,5.767402],[5.425728,-5.232732,-0.070359,-7.676997,-3.873331,9.587824,6.158938,2.394738,-2.097885,0.210193,4.782219,-0.193395],[-0.840746,0.082799,6.672765,-5.944493,7.502004,7.592968,1.363916,2.434630,7.062568,9.486955,-3.864507,2.978890],[6.037354,1.433096,-4.105030,-9.217378,-5.093423,3.848128,-1.924151,-7.742572,-3.242903,1.975499,-1.968138,6.780305],[-2.230927,-8.587514,-5.665629,2.504247,-0.821703,-8.142769,-5.046867,-5.221974,-3.074745,9.668345,5.131827,-8.442133],[9.871706,1.769495,5.142349,4.289548,-2.983176,-3.958681,4.754904,-3.369526,-3.459588,-8.761820,0.767385,7.485490],[-0.455431,8.069639,-2.342432,9.095595,3.648815,2.929085,-7.430639,-6.579222,1.572970,9.632692,-6.806057,-4.795881]]], dtype = "float32")#candidate|2468|(3, 11, 12)|const|float32
uop_2469 = relay.asin(const_2468.astype('float32')) # shape=(3, 11, 12)
func_1515_call = mod.get_global_var('func_1515')
func_1517_call = mutated_mod.get_global_var('func_1517')
const_2472 = relay.const([[0.214480,-6.028257,-9.776393,9.225018,-4.365072,7.371654,-3.089851,-4.256330,8.503810,9.566860,1.706809,9.233257,2.122826,-9.721246,7.018755,-7.632680,-6.078656,-8.231215,5.352518,0.047483,4.901585,7.534955,5.419577,1.513055,-7.463581,-5.140439,-7.431743,9.058629,6.878893,2.451344,-2.748951,8.347442,-9.948989,2.858476,6.470574,6.551038,-3.635047,-5.806244,-7.848194,-3.092520,-5.600053,-5.242850,-7.713171,-5.334002,4.668300,3.290230,2.873208,-4.370707,-4.359494,1.397764,9.390728,-2.737788,7.857792,5.753309,-0.536305,1.803614,9.551079,4.317302,7.705829,8.922874,7.152552,-8.082148,1.146512,-5.181060,-3.033559,2.847679,-1.971621,3.589747,-8.076582,6.309779,-1.730128,2.231406,-8.123110,-5.323887,-7.366628,-2.288635,-6.764086,-0.048730,-9.413055,0.455820,2.692404,-3.487897,-4.835900,2.428644,-6.278218,-8.507831,9.155071,-9.571839,-4.677499,8.380288,-7.658070,5.743284,-1.372621,-5.994598,-5.987745,-7.465355,-9.633506,-2.527153,-7.405787,4.322771,-9.612384,-2.309472,8.815926,-4.114196,2.107617,-3.946551,8.064731,-3.717369,-4.598625,-6.796932,-5.107621,-8.548534,3.550789,9.908644,-1.911812,5.230752,-0.240802,3.621286,-5.093175,-3.140219,4.531427,-4.396977,-2.787301,2.996340,3.850692,9.822263,-4.624264,6.828758,-5.427726,5.657646,0.322984,-5.660743,-1.109785,-9.799584,1.512490,-5.935013,9.495847,3.199525,1.596471,-7.978456,4.307875,-0.340908,8.617619,6.292431,4.252895,7.925165,1.419322,-2.814645,9.064290,0.965169,8.816235,8.783328,-8.477772,-5.949748,5.129470,-1.575524,4.045192,-3.758669,-7.982807,-0.225881,3.071067,2.573139,2.314389,-9.663416,-5.338807,6.020907,-9.182124,-8.887191,-6.328003,-3.310825,-9.421005,-1.405639,-6.157149,-2.684413,-9.123640,-9.247635,-3.570918,4.863066,3.200331,-2.100734,7.362713,-7.159634,4.442051,-1.662118,7.114978,0.771419,2.551836,7.032870,5.001027,5.237543,8.997329,1.393388,6.852334,8.060703,-6.125110,-3.230609,-9.435173,0.518516,7.137889,0.090561,9.599589,-4.425537,-5.620161,-7.619645,-2.466540,1.177971,1.124767,5.780515,9.706170,2.752504,2.686092,1.344125,-9.596182,4.244558,-1.884069,1.596613,3.077489,3.771117,0.739549,4.493005,0.850890,1.054268,4.350954,2.958105,-6.922682,3.798664,-8.186211,2.878184,6.271670,-0.958850,7.436981,2.534849,-5.776595,-4.617147,-1.749527,0.298682,-1.165513,-8.393523,0.449789,6.528837,3.508188,5.479356,9.510304,-8.147375,0.824501,9.394614,-7.987337,-6.219100,7.837360,1.683470,-1.787144,3.024492,4.141379,9.704391,5.075129,-6.268217,6.257517,-3.212209,-6.145906,6.715100],[3.627641,-1.305898,-0.752689,-3.789709,6.873565,2.288090,-9.985354,0.675007,3.903915,9.150789,6.723568,4.626110,8.739502,6.249560,-9.620775,-8.908366,1.472559,-1.567429,9.785041,8.068492,-2.499114,-8.449507,6.980653,-8.084345,-4.888409,4.899663,-6.832746,-8.437401,-2.940017,8.043136,8.755031,9.237836,9.531859,-5.717510,-2.855040,6.976312,-0.056972,-1.435857,1.226968,-1.897280,-3.559779,1.298628,-5.839699,-8.385310,-9.614692,-5.287908,0.081455,-9.775520,0.429698,6.961074,6.577346,-5.120384,7.432739,2.893626,0.892568,-7.978603,-0.193797,-9.763348,-4.583186,1.001924,6.564363,-6.796279,2.531796,2.994643,7.802757,2.963642,3.388844,-6.585257,-2.158454,-4.636933,-2.810939,6.987468,-7.683171,4.117250,-5.436321,9.189108,-0.585859,1.657874,9.251209,-8.122019,4.230950,3.374795,5.896308,6.420158,8.575061,-8.548337,5.284587,-1.620346,9.571792,-5.434513,8.243251,2.292069,1.204218,8.502214,0.064853,3.699219,0.974012,-2.204132,-1.078519,-2.494281,2.554508,4.073185,-1.371026,-1.945201,-1.934787,-7.609657,5.483816,0.807251,-7.210733,5.328147,2.741040,-7.767125,7.875719,4.842583,3.233852,8.119839,-6.860876,5.536180,2.119962,9.628740,-6.399454,2.635541,7.305877,-2.720260,7.433802,-0.463804,-4.258774,-3.879742,8.609306,8.563796,0.297295,9.210921,-8.688157,4.251152,-0.274488,1.768933,-6.484492,-3.911309,4.992223,6.207792,-7.631141,8.936697,-3.366118,-6.965294,-2.699154,-2.272258,4.577642,4.505986,-9.247032,4.819013,5.936732,1.441184,7.991021,-8.072464,-9.547153,9.470087,5.823083,5.435245,-4.747559,6.270385,-6.566979,9.150112,8.691959,8.984699,2.855956,-9.587810,1.153679,-0.107703,-0.418825,3.146503,-1.816926,7.735448,-2.690219,1.764197,7.557843,9.819178,8.651581,3.695370,9.302927,-6.788117,3.485260,-0.662615,4.188116,6.657951,1.938908,-3.576861,2.253217,7.092630,5.386695,5.278326,7.869443,-7.718643,4.742414,9.310353,-0.646923,7.026214,-9.194921,-9.658090,-0.423971,0.089278,-9.048307,3.321855,-4.814946,2.075467,7.839860,-3.427051,4.627349,9.962353,-2.832220,-9.995984,1.155365,-6.304924,3.591793,6.994019,-7.319330,6.109267,-0.718095,-3.749223,4.054620,-5.358650,-0.875358,9.524407,8.630336,-0.357658,7.063638,-0.301346,-0.819966,-3.232244,0.114508,7.453615,3.354907,5.256951,0.465926,-7.618557,6.716662,-1.760429,5.519700,-3.714384,-1.347602,-9.704989,5.160040,-1.380870,1.843038,3.633697,-9.068987,-8.855682,1.242792,-8.365205,3.930503,4.090298,0.414457,5.700968,9.492639,-6.649069,-5.174389,9.557719,7.071615,-0.948110,-9.723354,-1.874125],[-3.860220,-7.309824,-5.351663,4.342006,6.520628,-0.413433,-4.885251,7.913863,8.712926,6.313979,-4.931859,4.817301,4.873271,-6.729520,7.192785,-9.479189,4.633290,6.072732,6.449618,-6.895347,5.148035,-4.403900,-2.175486,7.850899,6.623913,9.690328,9.068392,7.114637,-9.762196,8.287315,-4.685174,-8.784250,-3.054620,2.821601,-1.008631,6.269517,0.035502,1.068468,2.173102,4.559529,0.006828,5.689303,-5.410716,2.104687,-3.654755,-4.381678,4.279375,2.762460,5.080730,5.837163,-8.776892,5.992478,-7.079773,0.831894,-3.099661,-6.032008,2.085147,-9.588291,5.396108,7.608126,-7.178175,-8.399026,-5.923750,-3.496867,1.486026,7.042147,-6.622051,4.243077,9.265258,-1.189469,1.910830,5.488813,-8.944144,-3.939128,-9.262241,-5.800088,-8.581408,-7.202872,-7.756169,-9.997709,-4.555352,0.209683,-0.768081,-0.374174,9.737095,7.371646,5.198705,1.250293,0.576207,0.996569,3.551640,-2.048490,6.763554,-0.338620,7.253560,0.098574,-4.712723,-3.652133,8.873349,-6.059868,-1.593905,2.436298,6.136197,8.753939,0.794635,-5.872579,-7.813277,-2.169226,5.825647,7.075816,6.177441,-1.535862,5.545400,-6.370369,1.242133,2.867702,2.405452,-6.595853,-0.560431,7.094898,-6.962385,-8.376511,-6.580572,-2.286384,-8.062643,6.168646,-5.585465,6.186206,-1.188505,-8.916160,5.962774,1.268401,0.039699,4.482519,-3.897455,8.775301,-7.049636,7.191876,-4.300338,-8.371824,-5.375498,-4.557810,4.261065,-7.372710,3.030963,-0.009563,7.996962,1.776857,5.978008,-9.796738,5.045291,-4.082812,0.762261,2.242833,-5.247644,-9.433498,2.842424,0.277770,3.364426,-5.020414,1.762606,4.857193,9.778097,6.933230,4.235639,-3.279712,9.447295,-9.614968,-8.535788,-2.181440,9.945640,3.065233,6.865026,3.789190,8.085553,9.671717,-1.791411,1.287376,-3.234409,-6.306121,-9.756817,-1.793925,-3.117619,-4.127073,-0.258301,4.473476,-1.932245,-4.185120,5.911698,-1.210047,-5.180290,4.996529,-8.284673,-2.116735,8.572865,-0.389927,5.198146,1.820623,8.051968,-1.512339,-1.871453,5.943695,3.538052,-6.937538,2.192339,5.136302,4.974719,8.210781,8.252635,-0.600531,-9.122408,-6.113214,8.011987,5.477684,5.910821,8.196323,8.973023,-6.654238,-6.474137,-0.892034,6.928365,3.094719,-6.823041,-9.359071,-2.252444,2.686707,2.679227,-4.790438,9.336468,5.616947,-3.789244,8.834417,3.484786,-6.069118,-4.230832,-5.465175,-8.421365,-1.193442,-7.104756,-6.930578,4.245160,0.795927,8.581826,-0.168208,-4.536585,3.734044,-4.340690,-4.586314,2.993280,3.968345,2.538583,5.043267,-7.728748,4.078612,6.310368,2.450594,1.866942,5.542595,6.426587,3.472855],[-9.441414,-0.587784,6.523030,-6.864944,7.993216,7.987810,5.086115,-6.934301,-2.976423,-4.071419,7.439259,8.158924,8.533816,1.300992,-9.398389,-7.350025,1.887213,4.504475,6.733272,9.336352,6.558287,-8.368529,-9.020410,-8.896747,-1.615762,-8.229516,2.000880,-7.313816,-6.886840,4.245516,-4.659949,6.852932,-0.352470,3.767831,4.375300,-1.480502,7.098197,2.592370,9.956783,-1.278673,3.545463,6.930469,-5.198272,3.515138,1.367859,3.411332,-1.332929,1.557760,7.703441,-1.173095,-7.507916,-8.738703,7.006535,6.354095,9.279974,-3.254688,-2.909125,3.154897,8.397590,2.721771,7.472733,8.662874,-5.894743,-0.139195,9.671525,-7.167304,2.361837,1.146617,-9.667385,2.936720,-4.063068,-0.047820,8.501120,-2.959277,-0.503500,8.982685,-4.058790,4.903161,-0.319827,3.540365,5.422187,8.634858,-4.954743,3.061043,9.458180,-6.082365,1.228384,-9.065484,5.549210,1.462994,-0.222525,3.459781,5.888048,8.758111,6.994676,8.761851,-2.635479,0.708180,7.414448,-8.440810,-0.007704,6.944989,8.677418,-1.926893,-4.325631,1.654086,0.359873,8.844822,5.757030,-4.345482,4.162505,5.084458,-6.008588,-3.057229,-2.037156,-8.310742,-1.887950,-9.748037,8.585574,-8.703432,-6.589744,-8.859934,-8.496141,4.343547,6.398155,-6.410362,8.357040,-5.884983,5.453900,-3.525552,7.158668,-4.309906,-1.646546,-7.305386,8.951140,6.494013,-4.720140,0.852617,3.540827,-7.926200,-4.735038,-7.729664,2.058941,5.953238,6.109548,-9.071447,-3.732428,-1.061435,4.934021,-4.963607,3.466788,-0.777046,-9.659445,9.277927,-4.459986,-8.975112,-8.308377,7.140223,7.665250,-9.181008,-9.131480,-0.449851,2.576844,6.078033,5.669056,-0.717987,9.234904,-7.827504,-5.361661,2.990384,7.285159,-4.201463,-1.462878,4.166617,-2.147656,0.360424,-7.292911,-8.453799,-8.172790,-2.352844,1.166567,4.814080,-0.978615,-1.075406,9.464244,9.157724,5.563914,-5.287871,6.790289,-1.219574,-5.790458,-6.496934,1.815572,-7.195645,-7.784808,4.466069,5.275008,-6.462204,-5.498986,4.867104,1.330098,-9.863799,-7.138733,-8.804490,6.122526,7.667040,-3.216530,-1.987390,-4.822563,-5.633483,-3.124621,6.824917,-9.557054,0.464428,-2.198578,-7.802133,9.860387,9.524466,5.307644,-8.962021,-6.502255,-6.094420,2.186143,-5.448985,-0.877710,7.927565,-9.718918,-4.516753,-7.900158,9.239010,-7.297928,-6.441658,-3.013338,5.286326,-2.623209,-9.901104,-9.342988,3.839470,-4.529303,0.126515,-6.984111,5.917622,6.479765,1.410725,1.233381,4.839225,-5.668672,8.092887,5.338089,1.759718,-1.973950,-0.263781,-8.509224,2.567815,5.130760,8.827169,1.843071,-1.309892,8.997947,-0.702094]], dtype = "float32")#candidate|2472|(4, 260)|const|float32
call_2471 = func_1515_call(relay.reshape(const_2472.astype('float32'), [5, 13, 16]))
call_2473 = func_1515_call(relay.reshape(const_2472.astype('float32'), [5, 13, 16]))
output = relay.Tuple([uop_2469,call_2471,const_2472,])
output2 = relay.Tuple([uop_2469,call_2473,const_2472,])
func_2482 = relay.Function([], output)
mod['func_2482'] = func_2482
mod = relay.transform.InferType()(mod)
output = func_2482()
func_2483 = relay.Function([], output)
mutated_mod['func_2483'] = func_2483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_2495 = relay.TupleGetItem(func_2225_call(), 0)
call_2496 = relay.TupleGetItem(func_2227_call(), 0)
func_2430_call = mod.get_global_var('func_2430')
func_2432_call = mutated_mod.get_global_var('func_2432')
var_2502 = relay.var("var_2502", dtype = "float32", shape = (480,))#candidate|2502|(480,)|var|float32
call_2501 = func_2430_call(relay.reshape(var_2502.astype('float32'), [16, 5, 6]))
call_2503 = func_2430_call(relay.reshape(var_2502.astype('float32'), [16, 5, 6]))
var_2507 = relay.var("var_2507", dtype = "float32", shape = (13, 9, 9))#candidate|2507|(13, 9, 9)|var|float32
bop_2508 = relay.greater_equal(call_2495.astype('bool'), relay.reshape(var_2507.astype('bool'), relay.shape_of(call_2495))) # shape=(13, 9, 9)
bop_2511 = relay.greater_equal(call_2496.astype('bool'), relay.reshape(var_2507.astype('bool'), relay.shape_of(call_2496))) # shape=(13, 9, 9)
output = relay.Tuple([call_2501,var_2502,bop_2508,])
output2 = relay.Tuple([call_2503,var_2502,bop_2511,])
func_2523 = relay.Function([var_2502,var_2507,], output)
mod['func_2523'] = func_2523
mod = relay.transform.InferType()(mod)
mutated_mod['func_2523'] = func_2523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2523_call = mutated_mod.get_global_var('func_2523')
var_2525 = relay.var("var_2525", dtype = "float32", shape = (480,))#candidate|2525|(480,)|var|float32
var_2526 = relay.var("var_2526", dtype = "float32", shape = (13, 9, 9))#candidate|2526|(13, 9, 9)|var|float32
call_2524 = func_2523_call(var_2525,var_2526,)
output = call_2524
func_2527 = relay.Function([var_2525,var_2526,], output)
mutated_mod['func_2527'] = func_2527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2482_call = mod.get_global_var('func_2482')
func_2483_call = mutated_mod.get_global_var('func_2483')
call_2559 = relay.TupleGetItem(func_2482_call(), 1)
call_2560 = relay.TupleGetItem(func_2483_call(), 1)
output = call_2559
output2 = call_2560
func_2585 = relay.Function([], output)
mod['func_2585'] = func_2585
mod = relay.transform.InferType()(mod)
mutated_mod['func_2585'] = func_2585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2585_call = mutated_mod.get_global_var('func_2585')
call_2586 = func_2585_call()
output = call_2586
func_2587 = relay.Function([], output)
mutated_mod['func_2587'] = func_2587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mod.get_global_var('func_1915')
func_1917_call = mutated_mod.get_global_var('func_1917')
call_2599 = func_1915_call()
call_2600 = func_1915_call()
uop_2607 = relay.log10(call_2599.astype('float64')) # shape=(13, 9, 9)
uop_2609 = relay.log10(call_2600.astype('float64')) # shape=(13, 9, 9)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_2610 = relay.TupleGetItem(func_2225_call(), 0)
call_2611 = relay.TupleGetItem(func_2227_call(), 0)
func_653_call = mod.get_global_var('func_653')
func_655_call = mutated_mod.get_global_var('func_655')
var_2618 = relay.var("var_2618", dtype = "uint32", shape = (392,))#candidate|2618|(392,)|var|uint32
call_2617 = func_653_call(relay.reshape(var_2618.astype('uint32'), [7, 7, 8]))
call_2619 = func_653_call(relay.reshape(var_2618.astype('uint32'), [7, 7, 8]))
uop_2635 = relay.log10(call_2617.astype('float64')) # shape=(7, 7, 8)
uop_2637 = relay.log10(call_2619.astype('float64')) # shape=(7, 7, 8)
output = relay.Tuple([uop_2607,call_2610,var_2618,uop_2635,])
output2 = relay.Tuple([uop_2609,call_2611,var_2618,uop_2637,])
func_2644 = relay.Function([var_2618,], output)
mod['func_2644'] = func_2644
mod = relay.transform.InferType()(mod)
var_2645 = relay.var("var_2645", dtype = "uint32", shape = (392,))#candidate|2645|(392,)|var|uint32
output = func_2644(var_2645)
func_2646 = relay.Function([var_2645], output)
mutated_mod['func_2646'] = func_2646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_2656 = relay.TupleGetItem(func_2236_call(), 0)
call_2657 = relay.TupleGetItem(func_2238_call(), 0)
output = call_2656
output2 = call_2657
func_2658 = relay.Function([], output)
mod['func_2658'] = func_2658
mod = relay.transform.InferType()(mod)
mutated_mod['func_2658'] = func_2658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2658_call = mutated_mod.get_global_var('func_2658')
call_2659 = func_2658_call()
output = call_2659
func_2660 = relay.Function([], output)
mutated_mod['func_2660'] = func_2660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mod.get_global_var('func_1915')
func_1917_call = mutated_mod.get_global_var('func_1917')
call_2667 = func_1915_call()
call_2668 = func_1915_call()
func_653_call = mod.get_global_var('func_653')
func_655_call = mutated_mod.get_global_var('func_655')
const_2670 = relay.const([-5,-2,8,-2,8,-1,3,-10,9,10,-4,10,8,7,-2,-4,1,-9,-5,7,2,2,9,-2,9,2,-8,9,-2,5,-1,1,5,3,1,-5,-2,-10,-9,9,4,-3,-8,6,1,3,2,-5,4,-7,10,9,1,2,10,9,-5,-6,-5,2,-6,9,9,-5,4,1,7,7,-9,-7,-2,-5,-1,1,-5,-3,8,-3,5,-3,1,2,-3,-6,-8,3,9,7,1,7,1,-1,9,-7,3,1,3,1,-2,8,10,-10,-1,1,2,-10,-6,-3,6,-9,-9,2,-6,8,2,8,9,-2,-4,4,9,-1,6,1,-4,-10,3,-5,-7,-8,8,10,3,-10,5,5,8,10,-9,-8,3,6,-10,-4,-3,-5,-8,2,8,-10,-6,8,10,9,-9,4,5,-8,10,-3,4,-6,4,4,10,5,-1,-1,1,2,-9,3,-8,-8,-3,-3,-8,9,-9,-3,1,6,-9,2,-6,-1,5,-8,7,1,-8,8,5,9,-2,-4,10,-4,-6,-10,-3,9,7,10,5,3,-8,-3,-8,-9,-5,-5,3,-4,6,-3,-7,8,10,-9,1,-2,4,-2,-8,-5,3,7,-7,-7,7,3,-2,9,1,9,-1,-9,-4,7,3,4,10,-2,-4,-2,-8,-4,-8,-10,-10,-8,-10,6,-9,8,5,-8,5,3,-8,8,-10,6,-7,6,7,-10,3,3,-9,2,4,8,-1,-9,-6,4,-9,-5,-9,6,6,-3,2,-9,-10,4,4,-3,2,3,-9,7,9,6,4,-4,-8,9,4,10,2,7,-5,-8,-2,-7,8,-1,-6,3,-1,-2,5,-10,9,2,-3,5,1,4,-4,6,-5,-9,8,-2,-10,-9,-6,-3,-8,-6,3,-8,7,-10,5,3,7,-10,3,-3,6,5,10,7,-2,-10,6,-1,-1,6,-1,3,-10,-2,-5,-5,6,3,9,-5,-4,-7,-2,-5,-1,9,9,-9,-5,1,5,-10,-9,8,-2,-8,9,-7,6,-4,-3,1,4,-3,1,10,-2,-9], dtype = "uint32")#candidate|2670|(392,)|const|uint32
call_2669 = func_653_call(relay.reshape(const_2670.astype('uint32'), [7, 7, 8]))
call_2671 = func_653_call(relay.reshape(const_2670.astype('uint32'), [7, 7, 8]))
func_828_call = mod.get_global_var('func_828')
func_833_call = mutated_mod.get_global_var('func_833')
const_2683 = relay.const([-0.586401,5.836891,-3.616856,4.579857,5.241987,-6.161272,-6.707886,-0.340410,2.368479,1.522813,5.219559,-6.096554,-1.699330,7.060062,-1.799272,6.026946,0.226773,4.059134,7.549145,-7.829192,-4.899277,6.049628,-6.346830,-8.950580,-1.681980,9.825786,-1.906176,-7.638925,-6.204223,-0.785925,0.155216,4.506010,-6.974729,-4.971099,-3.245504,-4.550152,-4.149873,9.327694,9.825295,-6.125327,1.952726,6.663472,-8.438988,7.890444,-6.810923,1.619731,1.680820,-9.014151,-7.380866,-9.307139,0.269640,2.914965,-8.261778,5.938239,-8.786636,-3.516997,6.355625,0.832293,3.570646,-1.462382,-5.708240,0.610502,-1.288859,5.647018,0.917005,1.349252,2.207414,-1.645937,-9.998448,6.642880,1.299835,-3.742439,-0.923837,-1.256181,-3.498425,1.753504,9.528215,0.203910,-8.203357,-6.737100,-2.018123,3.225526,-1.410324,2.679146,1.972692,0.723728,-5.309037,5.948755,6.860864,-0.496810,-2.830393,-2.749666,5.311801,4.675045,-0.837343,4.311828,-8.503533,-4.564476,-1.360157,6.363364,4.874165,-8.097722,-8.987842,-6.878925,-4.751143,-3.827001,-0.445614,-2.937113,-3.859335,3.206329,9.985025,6.484475,8.868839,-9.203111,2.474038,2.663437,-4.612714,8.349081,8.263925,-6.994137,-7.765859,-2.997475,2.383771,-7.035395,3.046196,-9.255049,-1.570223,-7.762255,-2.730534,4.403812,-5.999920,-7.390495,2.663420,2.909396,2.175978,-1.314712,-6.054810,-4.568023,9.829740,4.765571,-9.159971,8.235835,5.675430,2.831653,-5.718458,-2.943281,8.452369,9.291697,-6.509065,-6.961697,-3.093479,0.077111,2.297104,-1.551200,7.626264,4.192984,8.495461,-2.994271,-5.117247,-3.154644,9.403147,5.714278,8.519785,5.240479,-8.896152,7.535175,-7.854316,7.793677], dtype = "float64")#candidate|2683|(168,)|const|float64
call_2682 = relay.TupleGetItem(func_828_call(relay.reshape(const_2683.astype('float64'), [6, 14, 2]), relay.reshape(const_2683.astype('float64'), [6, 14, 2]), relay.reshape(const_2683.astype('float64'), [6, 14, 2]), ), 1)
call_2684 = relay.TupleGetItem(func_833_call(relay.reshape(const_2683.astype('float64'), [6, 14, 2]), relay.reshape(const_2683.astype('float64'), [6, 14, 2]), relay.reshape(const_2683.astype('float64'), [6, 14, 2]), ), 1)
func_1892_call = mod.get_global_var('func_1892')
func_1896_call = mutated_mod.get_global_var('func_1896')
const_2690 = relay.const([[-6.402171],[5.752304],[-3.640379],[9.894392],[-8.380089],[2.472405],[-2.001230],[4.514713],[7.384413],[0.474304],[2.012564],[4.192956],[-8.104941],[6.487172],[-1.429464],[-6.253959],[-3.665857],[-7.210882],[-7.538311],[-8.909963],[0.961459],[-6.627184],[0.056538],[2.429702],[0.243640],[-6.451433],[2.156433],[3.642839],[0.194389],[-0.423172],[1.294322],[-0.625666],[7.335842],[8.517798],[-0.443822],[-9.493230],[9.726466],[4.672830],[8.040962],[-0.747764],[1.350806],[3.543546],[-6.571402],[0.848890],[8.674300],[-1.680263],[-5.320831],[7.468776],[9.781567],[-6.845269],[-4.340135],[6.385163],[2.111488],[-0.691408],[3.138520],[1.937832],[1.727802],[-2.340233],[1.657454],[8.869033],[4.162066],[-0.060186],[-4.296193],[7.317745],[-1.838377],[5.234685],[0.184004],[-7.348638],[-4.023354],[8.543316],[5.806087],[-7.267402],[7.670610],[0.775654],[-8.934263],[4.522232],[-7.829521],[-7.477777],[0.142821],[-0.902136],[1.508278],[-3.543161],[8.734881],[2.096020],[2.874369],[7.128225],[1.091771],[-5.014574],[-5.307816],[-9.579926],[-8.330569],[0.965747],[5.282714],[-4.809300],[0.607540],[-3.297785],[-3.571625],[4.128928],[6.778302],[6.542817],[2.429866],[-3.963199],[9.078469],[9.188140],[-3.702232],[-9.535696],[-8.559876],[8.269222],[7.280618],[-0.279155],[-2.092875],[9.344815],[-2.336062],[-2.151878],[5.861210],[-3.295551],[2.067755],[-4.909170],[5.609905],[-9.428261],[0.984947],[7.916373],[-3.470942],[4.176370],[-2.727885],[8.963418],[-5.730362],[3.806321],[1.792533],[-8.815561],[-6.622423],[-8.829497],[7.028944],[-0.816653],[-1.343578],[-4.990235],[2.111225],[8.941530],[-7.809363],[-5.100444],[8.420150],[-9.274465],[-9.840102],[-5.155586],[4.993959],[2.272660],[5.428654],[1.232639],[-9.473867],[-9.477190],[9.223285],[-5.529019],[-7.966585],[-4.494719],[-0.213968],[5.649931],[-4.056073],[2.403336],[7.392825],[6.192453],[-9.164636],[-2.914604],[-6.811887],[4.882030],[4.168617],[4.620891],[-1.896227],[-5.280016],[-4.488054],[-2.084775],[6.599251],[-2.734489],[8.000105],[-7.572299],[4.061175],[8.266369],[-4.609671],[0.534858],[-5.496938],[5.993078],[-5.330487],[-6.761623],[-1.842041],[3.008000],[7.623838],[4.484944],[1.672881],[6.688716],[6.940204],[-5.195965],[1.583508],[7.204477],[9.589754],[-8.604024],[2.776271],[-5.750844],[-2.657136],[-2.510130],[1.308339],[5.954827],[8.909434],[7.356236],[-0.501229],[4.442405],[-3.230920],[-3.997474],[-8.220365],[-5.592630],[3.868184],[4.459439],[-5.968052],[-6.828513],[-1.991204],[-1.722995],[1.112451],[-5.845121],[-6.392573],[8.061910],[-1.162358],[7.117271],[-2.485657],[-7.185681],[4.612080],[8.312736],[8.468209],[0.931794],[-8.641559],[6.619129],[-7.769288],[-6.995259],[8.652769],[0.049836],[-4.169956],[0.614892],[9.435203],[9.035601],[-2.182166],[-2.947736],[-4.158510],[-5.253577],[-4.982281],[-4.688949],[-6.533453],[8.004050],[3.980560],[-9.634719],[1.491240],[-6.198608],[-1.276418],[-4.897820],[-9.461451],[-7.027301],[-6.021759],[-6.876993],[-6.192003],[-9.863261],[-3.143352],[5.710950],[-3.741540],[-5.820627],[-4.484163],[6.498881],[-0.454241],[4.997617],[3.868590],[-6.844491],[9.533458],[-2.949401],[-2.371157],[9.883830],[-2.161892],[6.353108],[-4.717341],[6.698127],[-2.284582],[-5.010034],[-7.896818],[-1.157419],[6.567787],[4.986231],[6.795852],[9.972257],[-6.233332],[-5.972543],[-6.706581],[7.177934],[-1.770044],[-3.465580],[7.327465],[6.296908],[8.202210],[-3.985278],[6.412814],[-9.616001],[-8.278983],[3.742609],[8.191665],[6.886996],[8.332534],[-6.452720],[2.293348],[-8.833250],[2.094309],[-8.831749],[-6.600085],[-5.761651],[2.612998],[2.618113],[4.655320],[6.781244],[6.945175],[9.906874],[9.276999],[1.333632],[5.016719],[6.756826],[3.781319],[-8.080280],[-7.852756],[-1.576325],[-0.852871],[-5.051849],[6.922936],[5.618704],[9.624625],[0.970298],[7.712145],[6.579809],[8.409809],[4.591463],[9.087067],[6.684140],[-9.868806],[4.946679],[-7.450158],[4.542160],[-1.535000],[-9.571034],[3.488804],[-1.411817],[-8.335290],[-5.245321],[-4.553180],[7.427841],[-8.503502],[-5.772526],[8.619951],[-9.713249],[1.861848],[-9.299192],[0.180997],[2.589020],[5.608886],[-3.522183],[6.305233],[0.238414],[-5.557050],[8.741686],[3.596885],[-3.586935],[-1.721614],[4.524493],[-9.415552],[1.806426],[0.202222],[3.417134],[-3.988771],[-6.895555],[-0.583911],[-6.348965],[8.627221],[5.423417],[1.575567],[5.381149],[9.090441],[-9.026663],[-9.308162],[2.887467],[-9.136072],[9.760546],[-2.111784],[-7.197617],[4.603884],[-0.277503],[0.854570],[7.032250],[-1.970836],[-5.102022],[8.786105],[0.735631],[3.564419],[-2.793757],[7.798568],[-7.246302],[6.863760],[-7.011506],[-6.788117],[-9.610943],[3.427273],[4.238694],[7.650268],[-2.226553],[-7.774910],[-5.810180],[-0.923161],[-7.705196],[3.536942],[5.803104],[0.429778],[-2.551189],[5.664272],[-4.273658],[-7.387904],[3.295123],[-6.917716],[-3.732330],[6.231503],[0.804239],[-7.360942],[-5.245559],[2.466142],[-9.793180],[6.118064],[-2.347945],[-1.451013],[4.670543],[3.331796],[8.341648],[-9.998045],[7.157715],[-1.103161],[4.682174],[-9.941119],[3.190322],[-7.402931],[1.215942],[-4.518730],[-7.758964],[-6.892002],[-4.266546],[-7.726818],[-0.053351],[-7.359946],[8.431646],[7.342999],[5.470444],[-8.601304],[5.781813],[7.273870],[8.403136],[-3.439639],[-8.836247],[6.317800],[9.189696],[9.957212],[-1.455240],[4.045128],[7.278239],[-6.432452],[7.635912],[8.667808],[0.430531],[5.207286],[6.362229],[8.864234],[-1.274927],[0.419361],[0.491053],[8.506522],[-5.090448],[-6.973903],[-8.493841],[-6.741386],[4.499346],[-1.525363],[-2.905269],[1.128544],[-9.727793],[-6.024735],[-5.384997],[-8.134595],[-9.219719],[7.342589],[-7.792952],[-7.400201],[0.427277],[9.459271],[-0.306520],[9.343189],[6.990775],[-8.760802],[2.271549],[6.506824],[-5.736595],[4.829916],[-7.045169],[0.567326],[-3.122983],[-4.204007],[-7.805313],[2.234539],[1.996015],[0.893184],[-9.051398],[-5.103756],[4.531954],[2.262119],[-9.046510],[-6.156261],[3.810651],[1.371690],[0.930018],[-8.658305],[5.117875],[3.697309],[0.491649],[5.197159],[6.694902],[-1.243807],[3.071448],[0.451894],[-0.900087],[-4.068316],[-5.656100],[1.872841],[-7.970104],[8.601018],[-0.998578],[5.519629],[-8.326613],[6.989202],[-6.575375],[-3.053549],[0.750428],[1.997124],[4.300527],[9.945068],[-1.447839],[2.182857],[-8.061840],[-4.028280],[7.729611],[5.156463],[9.261835],[-3.669817],[0.812330],[9.213920],[-5.650145],[3.273483],[-3.349431],[9.753168],[-0.497237],[3.882423],[-2.830049],[4.160052],[-6.985053],[2.168381],[5.189579],[4.017902],[-6.833381],[-3.248300],[1.591237],[5.852588],[1.473726],[5.603329],[8.899629],[-6.876059],[-0.607801],[-0.724424],[-6.304871],[1.875409],[9.269087],[-3.760261],[1.892664],[1.398940],[5.092631],[4.227500],[1.953273],[7.956849],[-5.157120],[4.870273],[6.466796],[4.331888],[0.156163],[-1.117886],[2.055235],[-1.706002],[-8.502586],[3.601571],[-1.037234],[7.428718],[-3.552619],[-8.631983],[5.923871],[-6.651887],[7.943844],[-5.043598],[7.747420],[-7.874712],[4.128269],[-0.532539],[-8.169883],[-4.696880],[-7.167448],[4.572985],[-3.473627],[-8.667841],[7.128053],[0.011444],[-7.513671],[-5.285314],[9.753851],[-3.094596],[-0.771506],[7.644705],[9.645962],[-7.184729],[0.470126],[8.452980],[-0.392979],[-4.483086],[6.412623],[2.168234],[-9.432565],[-7.652429],[4.330408],[-5.359672],[6.734036],[0.615396],[0.795947],[0.742043],[2.025377],[-6.979094],[-9.466506],[-3.716361],[-0.640307],[-2.156094],[0.122500],[2.309355],[-7.695797],[0.234131],[-1.286393],[-9.456539],[-8.604905],[-1.871606],[-6.136107],[4.268982],[8.025165],[-4.752553],[9.813873],[8.989143],[-4.125651],[4.204696],[2.902348],[1.845970],[-2.249401],[7.620205],[-3.908466],[-9.444817],[-8.849820],[-5.967150],[1.338298],[-7.426774],[3.654664],[-2.995107],[2.595704],[2.453334],[6.639479],[2.975993],[4.333612],[-0.471714],[7.326064],[-2.009757],[1.098808],[7.714036],[0.467437],[8.325311],[4.581597],[-4.507597],[-4.880923],[4.697025],[-3.827946],[9.776618],[4.603637],[-1.949755],[4.922065],[3.518838],[0.411698],[-5.452461],[-3.072949],[-7.285975],[2.553902],[-9.565363],[3.272698],[-8.759774],[-6.812677],[9.092149],[-9.676999],[-5.999272],[8.166350],[-5.604038],[-9.637319],[-4.598173],[0.446968],[-1.043469],[-7.443847],[-3.272936],[-3.141204],[-4.854016],[7.474329],[-0.523124],[-6.968675],[-4.673858],[-4.808319],[-0.274128],[6.040006],[9.770512],[-2.295299],[5.993031],[-6.952663],[-7.301694],[-5.057756],[0.904591],[9.677067],[-7.504523],[-5.761173],[-2.488526],[-8.672897],[3.133805],[-0.279775],[0.867341],[-7.160684],[9.086147],[-4.598488],[-9.353865],[-7.155828],[4.970921],[9.263088],[-9.132865],[-3.675182],[4.106581],[1.201276],[7.613657],[-7.443120],[-1.851921],[-1.217047],[6.105943],[-3.776198],[-4.283059],[3.482233],[-1.927076],[5.471385],[9.320701],[-5.168462],[9.220951],[-1.149925],[8.566258],[3.328177],[-9.611713],[9.658548],[-6.921162],[-9.544523],[-7.784139],[-8.249343],[3.725229],[3.771573],[9.550880],[4.682886],[-9.231404],[-8.831577],[-0.534317],[-9.058649],[-4.209084],[-1.798831],[-0.579821],[-9.552154],[3.102381],[-8.370504],[8.821911],[-6.670318],[-4.470688],[-1.351330],[-3.682932],[-8.356434],[6.886787],[9.649272],[-0.014583],[1.707756],[2.692762],[9.601758],[1.257252],[-0.209038],[-6.539116],[-3.100598],[2.452899],[-6.088447],[9.933449],[2.836689],[-3.290444],[-3.499376],[9.656992],[1.251722],[1.856659],[-6.567358],[-5.207356],[-7.111713],[8.868406],[-6.352716],[4.254721],[-0.498101],[-4.791379],[6.603752],[5.131278],[1.870649],[-4.521848],[-3.226422],[7.432980],[9.382256],[-1.411399],[4.195869],[9.113230],[1.355767],[-8.664092],[-3.871286],[-1.366315],[-1.242873],[6.239435],[-4.189428],[2.308320],[-7.838244],[6.385642],[3.981765],[-0.327452],[-3.124324],[-3.498547],[6.606956],[5.375149],[1.534446],[6.888823],[-4.455310]], dtype = "float64")#candidate|2690|(840, 1)|const|float64
call_2689 = relay.TupleGetItem(func_1892_call(relay.reshape(const_2690.astype('float64'), [12, 5, 14]), relay.reshape(const_2690.astype('float64'), [12, 5, 14]), ), 0)
call_2691 = relay.TupleGetItem(func_1896_call(relay.reshape(const_2690.astype('float64'), [12, 5, 14]), relay.reshape(const_2690.astype('float64'), [12, 5, 14]), ), 0)
output = relay.Tuple([call_2667,call_2669,const_2670,call_2682,const_2683,call_2689,const_2690,])
output2 = relay.Tuple([call_2668,call_2671,const_2670,call_2684,const_2683,call_2691,const_2690,])
func_2693 = relay.Function([], output)
mod['func_2693'] = func_2693
mod = relay.transform.InferType()(mod)
mutated_mod['func_2693'] = func_2693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2693_call = mutated_mod.get_global_var('func_2693')
call_2694 = func_2693_call()
output = call_2694
func_2695 = relay.Function([], output)
mutated_mod['func_2695'] = func_2695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2693_call = mod.get_global_var('func_2693')
func_2695_call = mutated_mod.get_global_var('func_2695')
call_2719 = relay.TupleGetItem(func_2693_call(), 3)
call_2720 = relay.TupleGetItem(func_2695_call(), 3)
output = call_2719
output2 = call_2720
func_2723 = relay.Function([], output)
mod['func_2723'] = func_2723
mod = relay.transform.InferType()(mod)
output = func_2723()
func_2724 = relay.Function([], output)
mutated_mod['func_2724'] = func_2724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2725 = relay.var("var_2725", dtype = "int64", shape = ())#candidate|2725|()|var|int64
var_2726 = relay.var("var_2726", dtype = "int64", shape = (2, 12, 16))#candidate|2726|(2, 12, 16)|var|int64
bop_2727 = relay.not_equal(var_2725.astype('bool'), var_2726.astype('bool')) # shape=(2, 12, 16)
output = bop_2727
output2 = bop_2727
func_2738 = relay.Function([var_2725,var_2726,], output)
mod['func_2738'] = func_2738
mod = relay.transform.InferType()(mod)
var_2739 = relay.var("var_2739", dtype = "int64", shape = ())#candidate|2739|()|var|int64
var_2740 = relay.var("var_2740", dtype = "int64", shape = (2, 12, 16))#candidate|2740|(2, 12, 16)|var|int64
output = func_2738(var_2739,var_2740,)
func_2741 = relay.Function([var_2739,var_2740,], output)
mutated_mod['func_2741'] = func_2741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2482_call = mod.get_global_var('func_2482')
func_2483_call = mutated_mod.get_global_var('func_2483')
call_2819 = relay.TupleGetItem(func_2482_call(), 0)
call_2820 = relay.TupleGetItem(func_2483_call(), 0)
func_1729_call = mod.get_global_var('func_1729')
func_1733_call = mutated_mod.get_global_var('func_1733')
var_2824 = relay.var("var_2824", dtype = "float64", shape = (440,))#candidate|2824|(440,)|var|float64
call_2823 = func_1729_call(relay.reshape(var_2824.astype('float64'), [10, 11, 4]), relay.reshape(var_2824.astype('float64'), [10, 11, 4]), )
call_2825 = func_1729_call(relay.reshape(var_2824.astype('float64'), [10, 11, 4]), relay.reshape(var_2824.astype('float64'), [10, 11, 4]), )
bop_2828 = relay.divide(call_2823.astype('float32'), relay.reshape(var_2824.astype('float32'), relay.shape_of(call_2823))) # shape=(10, 11, 4)
bop_2831 = relay.divide(call_2825.astype('float32'), relay.reshape(var_2824.astype('float32'), relay.shape_of(call_2825))) # shape=(10, 11, 4)
bop_2846 = relay.logical_or(var_2824.astype('bool'), relay.reshape(bop_2828.astype('bool'), relay.shape_of(var_2824))) # shape=(440,)
bop_2849 = relay.logical_or(var_2824.astype('bool'), relay.reshape(bop_2831.astype('bool'), relay.shape_of(var_2824))) # shape=(440,)
func_2585_call = mod.get_global_var('func_2585')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_2865 = func_2585_call()
call_2866 = func_2585_call()
output = relay.Tuple([call_2819,bop_2846,call_2865,])
output2 = relay.Tuple([call_2820,bop_2849,call_2866,])
func_2871 = relay.Function([var_2824,], output)
mod['func_2871'] = func_2871
mod = relay.transform.InferType()(mod)
var_2872 = relay.var("var_2872", dtype = "float64", shape = (440,))#candidate|2872|(440,)|var|float64
output = func_2871(var_2872)
func_2873 = relay.Function([var_2872], output)
mutated_mod['func_2873'] = func_2873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2482_call = mod.get_global_var('func_2482')
func_2483_call = mutated_mod.get_global_var('func_2483')
call_2875 = relay.TupleGetItem(func_2482_call(), 0)
call_2876 = relay.TupleGetItem(func_2483_call(), 0)
output = call_2875
output2 = call_2876
func_2895 = relay.Function([], output)
mod['func_2895'] = func_2895
mod = relay.transform.InferType()(mod)
output = func_2895()
func_2896 = relay.Function([], output)
mutated_mod['func_2896'] = func_2896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2956 = relay.var("var_2956", dtype = "float32", shape = (7, 8, 12))#candidate|2956|(7, 8, 12)|var|float32
var_2957 = relay.var("var_2957", dtype = "float32", shape = (7, 8, 12))#candidate|2957|(7, 8, 12)|var|float32
bop_2958 = relay.power(var_2956.astype('float32'), relay.reshape(var_2957.astype('float32'), relay.shape_of(var_2956))) # shape=(7, 8, 12)
output = relay.Tuple([bop_2958,])
output2 = relay.Tuple([bop_2958,])
func_2970 = relay.Function([var_2956,var_2957,], output)
mod['func_2970'] = func_2970
mod = relay.transform.InferType()(mod)
mutated_mod['func_2970'] = func_2970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2970_call = mutated_mod.get_global_var('func_2970')
var_2972 = relay.var("var_2972", dtype = "float32", shape = (7, 8, 12))#candidate|2972|(7, 8, 12)|var|float32
var_2973 = relay.var("var_2973", dtype = "float32", shape = (7, 8, 12))#candidate|2973|(7, 8, 12)|var|float32
call_2971 = func_2970_call(var_2972,var_2973,)
output = call_2971
func_2974 = relay.Function([var_2972,var_2973,], output)
mutated_mod['func_2974'] = func_2974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_3013 = relay.TupleGetItem(func_2236_call(), 4)
call_3014 = relay.TupleGetItem(func_2238_call(), 4)
var_3018 = relay.var("var_3018", dtype = "float32", shape = (1848,))#candidate|3018|(1848,)|var|float32
bop_3019 = relay.multiply(call_3013.astype('float32'), relay.reshape(var_3018.astype('float32'), relay.shape_of(call_3013))) # shape=(1848,)
bop_3022 = relay.multiply(call_3014.astype('float32'), relay.reshape(var_3018.astype('float32'), relay.shape_of(call_3014))) # shape=(1848,)
output = relay.Tuple([bop_3019,])
output2 = relay.Tuple([bop_3022,])
func_3023 = relay.Function([var_3018,], output)
mod['func_3023'] = func_3023
mod = relay.transform.InferType()(mod)
var_3024 = relay.var("var_3024", dtype = "float32", shape = (1848,))#candidate|3024|(1848,)|var|float32
output = func_3023(var_3024)
func_3025 = relay.Function([var_3024], output)
mutated_mod['func_3025'] = func_3025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_3030 = relay.TupleGetItem(func_2225_call(), 0)
call_3031 = relay.TupleGetItem(func_2227_call(), 0)
func_2165_call = mod.get_global_var('func_2165')
func_2168_call = mutated_mod.get_global_var('func_2168')
const_3034 = relay.const(-10, dtype = "uint64")#candidate|3034|()|const|uint64
const_3035 = relay.const([-3,5,-5,-6,4,4,-6,4,5,9,3,-7,2,-10,-3,7,6,-6,3,-7,-9,-6,2,-6,-8,-10], dtype = "uint64")#candidate|3035|(26,)|const|uint64
call_3033 = relay.TupleGetItem(func_2165_call(relay.reshape(const_3034.astype('uint64'), []), relay.reshape(const_3035.astype('uint64'), [2, 1, 13]), ), 0)
call_3036 = relay.TupleGetItem(func_2168_call(relay.reshape(const_3034.astype('uint64'), []), relay.reshape(const_3035.astype('uint64'), [2, 1, 13]), ), 0)
func_1729_call = mod.get_global_var('func_1729')
func_1733_call = mutated_mod.get_global_var('func_1733')
var_3046 = relay.var("var_3046", dtype = "float64", shape = (440,))#candidate|3046|(440,)|var|float64
call_3045 = func_1729_call(relay.reshape(var_3046.astype('float64'), [10, 11, 4]), relay.reshape(var_3046.astype('float64'), [10, 11, 4]), )
call_3047 = func_1729_call(relay.reshape(var_3046.astype('float64'), [10, 11, 4]), relay.reshape(var_3046.astype('float64'), [10, 11, 4]), )
func_342_call = mod.get_global_var('func_342')
func_345_call = mutated_mod.get_global_var('func_345')
const_3060 = relay.const([-8,4,7,-8,-5,1,5,5,-9,-5,10,-1,3,5,4,6,-3,1,-4,-10,-1,8,-9,8,-9,-2,4,7,-5,9,2,-1,-6,5,-1,-1,-8,-10,2,-4,-2,-2,-2,-6,-5,6,10,2,-2,-8,-4,9,9,-8,7,4,8,8,8,7,-8,-1,-4,8,10,3,6,7,-1,-8,6,-10,1,4,-1,-3,8,1,6,10,-5,3,2,9,-4,-2,1,5,-9,9,2,8,7,3,-9,1,-3,9,2,-1,-5,7,6,-7,-2,6,8,5,-5,9,1,-10,-4,-4,-7,5,1,-7,5,-3,-10,-3,2,6,-10,3,-6,-8,2,-9,8,-10,-7,5,10,-2,-6,1,-5,-7,-3,-6,3,-9,7,-1,-3,3,7,5,7,-10,-2,-5,7,4,2,8,6,-10,7,-10,-4,2,1,1,-5,-3,1,6,9,7,-3,-9,-4,4,2,-2,6,-10,-3,9,1,7,-9,1,4,-1,4,-6,9,-2,5,-9,-9,-10,-9,10,-10,-3,9,-6,3,10,7,10,7,1,5,2,9,6,-10,10,-3,-8,-1,7,-2,-3,-4,-9,4,-10,-7,1,-4,-6,3,-2,-10,-3,5,-7,9,-7,5,-2,3,-6,-6,-8,5,-5,-9,7,7,4,-9,10,3,1,-3,-4,8,-9,-8,5,1,2,-6,3,10,-7,8,-9,5,6,-4,4,-2,-4,-2,-4,10,-4,4,10,-5,-4,-4,-2,2,5,-10,-6,4,3,-1,-10,2,7,-1,1,-6,9,-8,7,10,-4,2,3,1,3,-4,5,7,5,1,-2,-2,4,-1,-8,4,-1,3,4,1,-6,-2,-4,-4,-7,-6,-9,9,8,6,-2,9,9,-7,-4,2,-5,2,3,10,-9,8,-7,-5,8,-3,4,-4,-2,5,1,-7,-4,-8,4,-9,-8,-3,6,10,-1,-6,4,7,-3,1,2,10,6,-6,-10,5,4,1,-8,-7,5,-6,-5,3,7,-2,4,6,-4,2,9,-9,7,-4,2,-6,3,6,-4,8,6,10,-3,-10,3,8,1,-5,-9,3,-8,-10,10,-1,-6,-6,8,-2,4,-6,6,-9,1,-5,-10,-4,9,1,10,4,10,10,-7,9,-8,8,-8,3,10,-4,8,1,9,-7,-4,9,-2,-2,-5,2,-5,-7,7,6,8,10,-5,-5,10,7,4,10,7,9,-2,-5,-1,-3,2,8,9,-10,-6,3,7,-2,8,-1,5,-6,10,5,4,10,9,-10,3,-5,2,-8,7,-4,-3,9,4,4,-9,-3,-9,2,10,-4,-9,5,6,2,3,-10,10,2,-9,8,-5,2,8,10,4,-3,5,-6,-1,-8,-4,-9,-10,-10,7,-6,1,-6,1,-6,-4,-2,9,1,6,-2,-10,7,-4,-8,5,5,3,4,9,-3,-1,1,-10,-9,4,7,4,3,-10,-1,8,-10,7,-6,-6,-9,-1,8,-3,-10,-10,-10,-2,4,-7,-5,-1,7,-1,-4,2,-5,-4,-6,9,3,-4,4,9,6,-3,10,-7,9,9,-6,-7,-6,3,-7,2,2,6,-2,3,10,10,-9,-6,-7,-4,-8,2,-1,9,-7,-1,-5,-4,1,-6,3,-2,4,-1,-4,2,5,9,-10,7,7,8,-6,-10,8,-9,-1,1,10,4,6,-10,-3,10,-5,-5,-6,6,-3,-8,-2,2,-9,-9,-7,-3,-3,8,1,-1,5,-9,-7,3,-1,1,-10,-9,7,8,-10,-7,-5,9,2,-2,-4,-8,-8,-10,-3,-4,-5,-4,8,-4,-2,-1,5,2,-10,4,5,-6,6,4,9,4,1,-4,-7,-9,-1,-5,2,4,2,-7,-4,10,1,9,1,1,3,-1,4,-1,-2,-1,-4,10,5,-2,2,-8,5,-2,5,10,-9,-8,3,-9,-6,3,9,5,-1,-4,-1,6,2,-4,-1,4,-5,4,10,5,8,-7,9,1,-10,-3,-9,-7,-4,7,5,-7,4,10,-7,-1,3,1,1,-4,-9,4,-5,-9,3,-8,9,-1,-7,8,-8,-10,-8,-6,7,2,8,-3,6,-6,8,-9,7,2,1,-7,-9,-1,-10,-10,7,-2,-7,-10,7,-3,-7,-3,-2,-6,5,1,4,4,1,2,5,2,1,8,5,-4,-4,7,-4,-1,10,-4,6,-8,-2,-4,4,-1,-8,-2,10,7,5,-2,-9,-7,-4,1,10,6,10,9,6,1,-6,-10,1,10,1,2,-4,-9,1,-8,-9,-3,2,5,1,-5,10,-5,3,6,9,6,-6,-2,4,8,-2,-4,-2,-6,6,-1,-7,9,2,-5,-1,4,7,6,6,5,-4,4,-8,10,2,-2,8,8,-5,2,-8,-5,6,6,-5,10,2,9,6,5,1,-6,9,2,1,-9,-2,-3,8,-10,4,4,8,5,-3,2,6,-6,6,-8,-1,7,3,-2,1,6,4,1,-5,5,-5,-3,-9,-5,-4,3,9,-9,-9,-5,-4,8,-1,9,-3,6,-1,8,-8,4,-5,-9,6,7,10,-8,3,4,2,1,-8,-3,8,1,-4,1,-4,2,-10,-5,-2,-7,-6,-2,4,6,-2,5,2,-7,-2,4,1,-4,-8,3,2,7,-3,-10,2,-1,7,-6,1,-3,-4,-9,-4,7,-3,-2,-2,-5,-7,2,-1,6,10,-4,7,-3,6,-7,-6,2,5,-4,-4,2,2,-3,-8,8,10,10,-1,8,7,-8,2,-2,-6,5,-3,-1,2,7,-2,-9,-9,10,2,-7,-5,-1,7,-5,-10,-2,9,10,-7,3,-2,-2,1,-10,1,-5,-4,-3,-2,3,1,6,1,3,-3,-9,-9,7,-2,7,6,-10,-8,1,-3,1,2,-6,-3,2,5,10,-2,-6,-4,10,4,-10,2,2,8,3,-1,4,8,-10,7,9,-7,-4,9,-10,-3,-5,2,2,3,1,-4,9,-8,7,9,5,-10,-8,4,-9,-10,3,4,-3,1,-10,-8,-9,8,-4,-9,-6,9,-7,3,9,2,7,-7,2,4,-5,3,-9,-9,1,-9,8,-2,-10,-2,-10,10,2,-8,5,10,-2,-5,7,1,5,-6,9,-9,3,-7,8,10,5,6,-8,2,-1,-1,3,4,-4,-9,8,-2,-9,-6,8,-7,-6,3,-9,-5,1,7,-10,10,-3,6,8,4,1,-6,-8,10,-6,-9,7,5,2,2,5,5,-10,1,3,5,7,-10,4,10,-4,-7,5,-1,-6,-8,-2,10,7,9,-9,3,8,3,-7,4,-4,-4,-2,7,-5,-8,-9,10,10,-8,-8,4,-6,9,-10,7,-3,6,-6,-3,9,10,2,5,-1,-10,4,6,1,-5,10,8,3,-3,6,-9,-9,-2,-1,2,10,3,-6,-7,-6,-9,-4,-4,-8,5,-2,6,3,2,-4,6,-4,1,-9,6,-1,-4,1,-2,-2,2,9,-7,7,6,2,7,-2,10,5,9,-1,10,10,1,-7,7,-1,10,-4,9,-10,-5,-5,8,-1,7,-9,-3,7,2,-7,1,5,-5,-10,6,3,4,4,-9,8,-6,2,-5,-3,4,8,-7,-7,-2,9,6,-9,9,2,-10,-3,-7,-8,-4,1,-3,3,2,4,-6,-3,-4,-3,-8,2,-5,-6,10,7,7,3,-5,-1,6,-2,-10,-3,7,-9,2,5,-8,2,-7,3,-4,-5,3,-7,-3,9,4,-10,-9,8,-4,-1,-3,10,1,-3,2,-8,-4,-3,-4,2,6,8,5,-9,8,9,4,-3,-7,-1,-4,5,4,9,-10,-5,-5,2,-9,-6,10,10,9,8,-10,6,-10,6,-6,-3,5,3,-10,-9,5,-8,3,8,1,-7,-6,9,-3,-1,9,5,1,6,-2,-10,2,-9,-8,-8,-4,-4,-9,8,7,1,3,-9,-4,6,2,1,6,9,-1,-6,4,-7,10,-3,7,2,9,-6,8,9,10,4,-1,3,-1,-7,7,-8,-9,6,6,-8,1,10,-8,1,-8,-5,1,-1,4,-7,-9,-10,7,-6,3,-10,10,8,-6,7,6,-2,-7,-9,-8,4,3,-8,9,3,-10,8,10,9,7,-1,7,9,-6,-6,7,4,3,8,7,-6,4,-8,-2,-4,4,-1,1,-4,-10,-3,-8,5,-10,3,-8,-6,-5,-9,-3,3,10,-8,-3,8,-3,-10], dtype = "int16")#candidate|3060|(1584,)|const|int16
call_3059 = relay.TupleGetItem(func_342_call(relay.reshape(const_3060.astype('int16'), [16, 9, 11])), 2)
call_3061 = relay.TupleGetItem(func_345_call(relay.reshape(const_3060.astype('int16'), [16, 9, 11])), 2)
func_1203_call = mod.get_global_var('func_1203')
func_1206_call = mutated_mod.get_global_var('func_1206')
var_3070 = relay.var("var_3070", dtype = "float64", shape = (72,))#candidate|3070|(72,)|var|float64
call_3069 = relay.TupleGetItem(func_1203_call(relay.reshape(var_3070.astype('float64'), [3, 2, 12]), relay.reshape(var_3070.astype('float64'), [3, 2, 12]), ), 0)
call_3071 = relay.TupleGetItem(func_1206_call(relay.reshape(var_3070.astype('float64'), [3, 2, 12]), relay.reshape(var_3070.astype('float64'), [3, 2, 12]), ), 0)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_3082 = relay.TupleGetItem(func_2225_call(), 0)
call_3083 = relay.TupleGetItem(func_2227_call(), 0)
func_502_call = mod.get_global_var('func_502')
func_504_call = mutated_mod.get_global_var('func_504')
const_3096 = relay.const([9.187233,-9.030472,-5.138713,-6.455321,-2.157446,8.126026,-0.637253,-8.322947,-1.797323,-3.550607,-6.844589,1.550123,9.931829,-5.412271,-2.096326,-6.331286,-2.333414,-1.061143,3.822001,-9.795664,6.449820,-9.733014,7.758886,-6.839204,7.308544,8.932991,-6.767470,5.885713,8.448708,7.371154,3.351696,-1.539544,-2.493700,7.866128,7.950382,3.543089,5.014226,-1.316790,-9.675753,-9.637867,3.100152,-7.996191,-7.643387,-4.199246,8.589363,-2.663713,9.109788,3.615840,4.583465,2.884188,-6.418305,1.644293,4.762389,-9.559666,-0.755646,5.417517,-0.491546,-1.684706,5.093388,-3.535364,-8.782895,-0.258927,9.423549,6.503541,-1.232195,6.340464,-6.259385,-0.595009,9.382135,2.307011,4.756130,6.751129,-4.681783,-0.706914,-3.907801,2.254497,1.914092,9.981755,1.431563,-6.903710,5.770351,-9.429884,-2.522581,7.058083,2.009676,-3.652841,-0.860020,-5.406433,6.811003,-2.156880,1.277786,-6.264387,8.492711,-3.433378,-6.111925,-5.670652,-7.436755,4.218072,4.382977,-1.246291,-4.498100,0.064231,3.875757,1.028153,6.827033,-4.135630,9.775127,3.170094,-7.755010,1.277099,-2.725675,0.862572,-5.986388,-8.394424,9.485719,-6.176869,1.922914,-4.024685,7.453720,2.843733,-6.839156,-3.201929,-9.362393,-0.989357,2.356955,5.887036,-5.766086,-8.010791,-2.927530,-8.876138,-9.159731,5.152134,7.182487,-9.772006,7.017009,8.781757,6.062255,-4.406927,4.382283,8.848017,-2.744326,6.260522,5.630538,-4.900887,-4.211057,9.901074,4.848907,-2.807210,4.394123,-8.030255,-1.644091,-8.663640,6.297684,0.641233,0.159852,1.971329,3.007246,-3.022169,-8.273697,-4.918786,-8.510000,1.023023,-3.800296,-0.077109,-6.558448,6.884471,-4.803830,5.020584,-1.803758,-2.250233,1.159880,7.806369,-6.386142,1.209062,-3.930758,5.634027,1.515333,0.773466,-3.038622,4.798460,-0.815216,0.197193,-8.151088,-5.359888,8.710756,6.814325,-9.432556,-2.498691,-3.538661,4.110606,2.291470,0.004705,-1.577866,4.763492,-7.314457,0.696441,2.143375,7.665108,2.619318,-6.345611,0.112035,0.223587,-0.189189,-4.453821,9.195295,-9.681858,4.170890,-9.111675,-1.327674,-6.230173,-6.130971,7.965616,8.617522,-2.156684,-2.388818,2.983499,-7.729212,9.988878,-3.052291,8.359988,2.898046,9.940935,-7.059738,-0.536120,6.289312,0.490876,2.458910,0.426824,-2.516880,3.242404,-7.404115,-5.043573,-0.329166,2.047442,9.102942,-8.137856,-2.426857,2.680147,7.038213,1.905023,6.118803,0.005612,7.008792,8.687247,-2.598193,-3.033677,5.687938,6.301128,-9.822750,4.657621,9.498791,3.141615,4.686356,-0.316344,-4.312770,0.673316,8.976221,-9.363704,6.220593,-6.237814,1.494955,-4.045924,0.821636,-2.417328,-3.633977,3.638083,7.428253,-7.247074,-3.434319,-7.064586,-6.182547,-6.648938,-7.206432,3.964399,-7.173390,0.336624,-6.216145,-4.353274,9.055304,-1.012420,-9.778026,9.164458,-2.376585,-8.393680,5.413618,2.908646,-9.041476,2.343283,0.578133,-1.592405,-8.002036,3.888516,0.220382,-0.226503,-9.560376,9.728102,-7.718672,-2.965207,-0.847212,0.962331,7.281365,1.467488,-8.840256,-5.066356,5.704459,6.620714,-4.216433,2.344185,3.132384,-9.047040,-4.245976,-0.684083,2.495530,6.641318,-0.315027,5.194003,6.164597,5.142838,5.074451,7.067193,7.113266,-0.513293,1.172833,4.952148,1.901846,-6.174996,3.585332,-5.909989,-4.540542,-3.648543,6.581846,-5.760014,6.152651,-3.060343,-5.684422,9.159358,1.870378,6.588208,2.242031,3.286548,4.364859,-1.090863,-9.842290,1.009371,-2.520314,3.337498,0.421116,6.621419,-4.454055,6.416885,1.458667,-3.097934,-0.647997,-2.997949,-0.729002,-5.810149,0.607809,4.272240,6.383182,-8.081245,-6.957657,0.853677,-9.648723,-9.062766,3.966113,2.436816,2.293245,2.505370,7.097517,5.242539,1.941004,7.703416,5.902099,-4.518273,7.039482,-5.613828,4.461898,9.836364,-1.298128,-0.494397,6.813107,6.187868,3.936572,-7.851866,-1.129354,-9.476747,8.966628,-3.253861,-5.986837,-8.583522,-8.954377,-3.054601,-9.424653,6.254667,4.389119,-1.897324,1.242001,7.923307,-3.822444,4.678368,-7.637777,-0.591596,-0.228887,-4.874987,-1.470585,-3.464687,0.576831,-4.948507,0.664631,1.644848,1.756600,9.115298,7.359612,7.858546,7.016867,-6.023050,-3.121624,2.033217,5.872236,-1.286871,-0.870935,-2.182037,2.162093,-0.762586,-6.473780,5.195659,7.966777,-8.203642,-1.247063,1.938663,8.931015,0.223018,-3.317620,-1.650743,-1.710402,7.036949,3.055201,-3.889263,-0.838470,5.319050,-8.826550,-1.612805,-9.797094,-3.461925,-9.392632,-5.466884,8.025881,-1.558522,-4.294416,-9.621276,4.383116,-6.323549,3.002519,0.006323,7.084149,7.907006,6.914885,9.245255,-5.818210,-9.192676,8.347545,-5.486523,-9.066687,5.878809,1.525663,4.752734,9.627867,-5.002884,8.304049,8.424495,-9.356783,-9.953372,-8.099049,4.009640,-4.377218,-2.842084,-1.117610,-8.519126,6.310192,-3.160446,6.891437,7.956447,7.917581,-5.019444,9.533475,8.347628,-5.835545,0.238021,6.736302,5.339948,0.764726,-4.008895,0.617047,-6.310072,-9.746379,5.854963,0.398537,-7.830758,-8.166113,0.819270,-2.256249,-3.218794,-5.679204,-0.283203,-3.226994,2.381471,9.784218,-9.309050,3.367375,7.273752,2.516094,4.205698,5.552131,9.353070,-1.837318,3.105969,1.794542,8.123622,8.148888,6.320477,-2.397463,7.740409,-5.454363,-3.775375,5.386199,0.765972,-8.177234,2.000495,4.776017,-2.735277,4.792307,-9.123416,9.328698,-6.853414,8.618266,-7.349832,8.755069,2.130566,8.897993,1.939429,0.884551,8.741955,8.455014,1.060550,7.398240,3.575180,3.293455,0.163405,5.340225,-2.691854,-4.531796,-5.981465,-9.122870,3.620104,7.193389,-5.947744,-7.173910,4.352805,-9.153790,-7.216513,-5.600735,-6.714004,6.397920,-8.300696,-5.662459,-5.427569,1.520914,-9.901550,-6.509166,-2.946267,-3.219781,3.058473,-1.659235,-6.540111,2.406339,4.322212,-8.425008,-3.583913,7.291403,6.141350,7.826413,-7.787607,-3.580609,-5.840948,0.790892,7.796882,-1.479178,-5.874800,5.478322,3.144897,0.397063,-4.943056,2.868545,7.618291,0.199743,-8.954028,-8.722677,7.104045,4.431696,-3.688138,-8.086736,-4.705217,-2.244661,-4.290388,9.074880,-2.251414,-3.538457,3.365676,6.493400,-1.936374,6.975667,4.635972,-1.179662,-0.371808,9.676637,-1.503150,-3.350786,-3.208888,9.562447,-2.640033,-3.051040,2.344005,8.371952,-7.736553,0.699746,0.665136,2.542389,7.448689,-7.560574,0.227842,-9.637116,5.569354,-7.306258,6.026294,-4.325093,3.063403,-5.752930,9.070622,2.389280,4.531488,2.277169,3.450939,2.026907,-1.215614,-0.266795,2.438088,8.851484,-9.723453,-1.543331,4.583037,7.713761,-3.511074,3.605513,-1.490263,5.950689,7.929563,-5.044070,-4.006616,2.790057,3.200070,-1.901566,-1.772457,-0.592724,-5.341107,-8.590521,0.002613,-8.447248,-9.644739,-2.191463,-5.331205,-2.947166,-8.793884,-4.252194,-5.096851,0.512040,5.842941,7.805561,3.168207,-0.437085,-6.324054,5.856922,7.646216,2.100026,7.414318,-5.692064,-5.488212,0.276452,2.841043,5.991344,-9.044169,-5.871614,-7.506058,3.925920,9.106682,7.151420,4.895977,7.249394,-2.988428,-8.538710,-5.778721,1.001730,7.525105,0.710866,-7.158219,-0.635957,3.763978,2.493512,-4.955308,7.535152,-3.785178,-4.490524,7.346421,-2.903043,-4.931154,3.055802,3.330473,9.679476,-9.993084,-1.222688,9.502357,5.696446,2.926275,7.317231,3.728553,8.149071,5.362216,9.181875,7.762526,0.197389,-5.361298,3.007178,5.691622,-2.856971,7.790003,8.359746,-8.082403,-1.197435,2.173116,4.228264,-0.770768,-7.867938,-9.491312,5.145756,-9.034707,-1.127465,4.025479,-1.428527,-9.134800,-7.914539,4.506292,3.360332,-2.350853,1.137305,4.861989,5.688454,8.846495,7.537841,4.005319,-8.199472,9.050325,5.882745,-3.978938,-5.188285,-3.659590,-1.192436,-1.792218,3.618030,9.787951,-5.604873,-2.402766,0.150739,1.353044,5.687796,5.098681,-3.129185,-9.096255,2.244159,-1.127122,-6.507482,5.599584,-7.611101,-1.238051,-9.974072,9.279704,-7.052805,-3.902713,6.090412,-7.581700,9.664162,-0.333173,3.551056,2.899933,4.300175,-3.077981,-6.960494,9.297317,8.539955,1.676669,1.188865,-6.719958,-3.537469,3.858030,-6.515593,-7.661356,8.298830,-4.367035,-9.088935,-8.806545,0.780898,5.116361,-4.983008,-7.368825,-0.793651,0.238735,-5.236867,5.185997,2.511767,1.042114,-8.678066,9.852482,-0.749162,-8.843159,2.132026,8.912050,0.945747,-2.275314,7.803649,3.011670,-4.635778,5.771645,-7.326025,9.833648,-0.065719,-6.464947,8.684500,-6.374979,7.459105,-5.900923,3.539348,4.325811,-0.272394,-2.624209,-2.631157,2.570488,2.250635,-9.461070,7.289079,4.919437,-3.732505,-4.017730,6.303627,6.610041,-4.026169,7.183058,0.689193,-7.352805,-8.060064,3.897700,3.245989,-9.461882,-4.178247,-1.418355,-4.413931,0.567495,9.290144,-6.317233,-5.405774,7.367692,5.690975,3.924320,7.337950,-6.204713,-4.288206,0.768574,-6.988905,-9.663767,-1.393516,-6.599244,-0.284783,3.971022,-7.045096,-5.982045,9.241984,7.768466,-7.387888,-3.567668,-8.432688,-9.940788,-2.541480,-9.208934,8.003229,6.937303,-1.732903,-3.294001,8.653430,-3.581185,-8.626128,6.316000,6.392550,-5.543877,5.914301,7.831254,-0.461577,-7.965077,3.632518,7.505025,-3.488285,-8.184431,9.841386,9.686865,-2.091234,-3.048178,0.889342,9.736836,-1.783715,-4.580127,-1.141934,3.020005,7.171833,2.573730,2.218353,8.249059,-6.344544,-9.642157,5.637797,-2.419165,0.549268,-2.295234,-2.175093,2.397163,7.225015,-3.130903,-2.553540,-7.150089,-4.229443,-1.231949,8.629626,6.333896,-2.574406,2.266273,2.138939,0.583787,-1.595699,1.650817,3.578327,3.702039,6.244891,-0.714178,1.377735,8.739903,5.161761,0.125622,-9.114836,-9.753000,-3.249392,-2.543828,7.853019,1.873200,7.379394,2.317434,0.434813,8.746097,-4.130625,-6.752180,6.792328,8.380842,-9.655798,2.621798,3.678294,8.676660,9.839281,-5.636082,8.747412,-1.507492,-0.046637,-7.491843,-1.932241,-2.501101,2.980248,-9.263834,9.742198,5.665683,6.297911,-6.794466,-0.051462,-5.932347,7.524751,1.373280,-8.318158,5.975811,0.225077,1.828256,2.116655,-6.224892,-0.332738,8.817640,9.741969,4.532835,7.105380,4.318997,6.182526,8.840125,-3.557488,-4.515866,-5.096235,-5.023913,6.964388,9.053143,3.394180,6.570970,4.346032,0.746891,-4.922007,1.993222,-0.061614,4.650700,-0.493183,-3.483246,4.095318,-7.505508,-8.282580,1.386057,-7.377125,4.029422,0.970116,2.048418,4.205783,0.908866,-0.932889,-2.731902,9.643585,-6.933684,-9.136238,7.247600,0.022644,-2.819053,-4.911635,1.071868,-4.705863,-6.162537,-4.774904,-7.092228,6.068808,6.199506,-7.784755,-2.320339,8.005789,-9.080874,-5.148443,-2.554238,6.150894,4.042054,-4.591947,-4.032205,5.719144,-3.507299,-8.752321,-4.269621,-9.454028,0.146472,7.442576,3.899390,0.779214,-0.856075,2.335589,0.321370,2.690019,-6.184900,-9.241124,2.563528,6.465068,0.077796,-5.169870,6.548741,7.272194,-5.206289,8.299229,6.914356,8.542609,-3.482275,-8.543287,0.609631,-5.412384,-7.244447,-9.391169,0.118767,0.017651,9.132704,-3.940876,1.144727,-0.834814,-1.185361,7.564652,-1.077698,3.311224,1.317681,-3.717100,-2.394399,-8.017493,4.073178,-4.144862,-7.908514,3.057968,6.450412,7.751455,2.571719,-9.997109,8.483226,-4.102922,-7.401261,-0.109187,4.004940,-0.140200,4.956292,-3.591133,0.847524,5.843899,2.307194,-6.266206,-0.112321,5.859838,1.188429,4.161473,4.803902,-9.005446,-8.690685,1.725128,4.161705,6.844957,-2.418745,-2.510021,-3.940755,1.623568,-9.105703,-1.180954,9.331919,9.467707,-7.492628,1.874949,-6.509939,5.745785,-9.518821,-6.334468,7.830707,2.446921,-5.959720,0.152501,6.120317,-3.788630,-6.676475,9.303860,-2.209366,-1.535766,1.560353,-1.623297,9.793707,-5.080588,-8.302131,-8.690124,-6.020076,3.557361,8.459739,0.323286,0.355523,-9.720330,4.623361,-9.160407,-8.987294,-1.235007,-2.624829,5.051406,-1.044003,-7.372478,1.342350,-6.882153,-5.652364,-9.723805,1.474453,-2.091281,9.793076,-7.596979,-6.725539,-1.574479,-0.746486,2.368869,7.164132,-6.269502,-2.259089,-6.929083,8.291437,-1.559837,-6.665504,4.086004,-0.078944,-6.332513,4.418374,-8.270811,0.496933,-5.311766,4.229521,3.547312,7.750606,9.343519,-0.577798,7.220163,-7.205951,5.584391,-2.192022,-6.647904,-7.941179,-1.737874,-8.689684,-9.877171,2.589866,8.770786,-7.213826,6.409637,-9.003963,9.400022,-5.352852,5.208551,-1.553383,8.521480,1.585700,-6.814531,-1.004426,7.507660,7.991762,8.389857,3.508893,-1.665110,3.980613,9.953727,-7.969550,-6.002081,4.559786,8.591223,-7.736826,-9.513622,6.376635,5.871764,0.088292,-3.820845,-9.563014,7.370209,-2.077085,8.245584,7.947826,6.748692,-3.071985,-7.183932,2.790636,1.116032,-8.111702,-2.144014,-0.587922,1.498130,-7.173479,8.356173,9.533467,-5.866703,-1.011445,3.328209,-3.026754,6.094364,-5.431561,-9.091821,3.731389,8.842303,1.223809,2.036970,-3.366878,4.049146,-4.482449,2.799825,3.686660,6.705376,-1.962685,4.692759,-8.249462,9.902483,-4.913835,-2.632566,0.828329,6.995939,7.738118,0.126104,-7.600213,6.465947,9.102760,-1.839635,-7.682191,-3.382633,6.769787,-3.707472,-8.063799,-3.873046,5.743337,-8.146256,1.566361,-6.540726,3.607716,-1.760101,-8.772284,-9.300182,-3.184462,9.550641,6.397405,7.519329,4.764022,-3.452721,9.712931,6.634849,4.386120,-9.360974,8.290193,-7.973449,-4.712020,-6.744579,-1.283681,-8.412144,-1.221199,5.414203,8.631401,-7.480197,-2.711949,-4.276371,1.646101,4.223236,3.546975,5.233162,-5.264790,3.580167,-3.079374,3.480529,5.222445,-8.468323,0.365368,1.146941,-0.216008,-2.776345,-1.011537,6.652180,-1.691334,-1.707359,-6.471613,-6.493716,7.602318,6.549003,-1.065832,-9.406174,-8.364204,8.483010,4.618232,-9.512851,-4.782618,-5.995826,2.101738,-4.968237,-7.379877,8.123642,4.164455,0.167389,-7.796036,-2.134511,-9.711527,-7.210480,8.384709,-3.016277,-8.626132,5.000124,0.787200,1.374772,4.560036,-8.593064,-2.344825,-8.387090,-4.479052,0.855049,-9.444614,3.323550,-4.036350,4.200493,9.737542,-3.604816,-4.243891,-0.865693,-2.085576,-7.987376,8.488044,4.084721,-1.083352,6.532523,-0.263095,6.905378,2.990600,6.580980,-9.367087,5.305424,-7.412361,3.294263,5.819633,8.474607,8.477975,8.288157,-4.001388,1.240870,-5.661352,6.926466,6.450962,0.145487,9.342998,-5.885222,1.818148,3.402665,-5.741634,-7.726183,-1.052984,1.540158,4.837721,1.464485,5.426897,6.844820,9.897471,-1.890670,3.826061,9.875580,-5.534473,5.578304,-1.892273,-4.403384,0.241365,-8.044806,-7.759787,-5.885750,1.641189,4.936182,-4.881836,-0.379953,-6.149966,-4.392110,7.049500,-1.773230,0.126802,0.034019,4.290377,-6.926926,5.585532,-5.239190,-9.076186,5.167077,-0.771482,6.067285,6.923114,7.988715,-5.895616,-5.874618,0.433626,-6.936345,-6.965811,-7.251245,9.528382,-9.364550,-5.284367,-9.794812,5.207789,-0.410386,-8.192321,-7.146031,5.189108,4.243636,1.933884,5.138134,4.660494,-6.206576,-3.325244,6.132110,8.751566,-6.508178,-2.245704,1.641176,-7.175333,-8.547722,2.395331,0.923498,-3.033929,-3.074511,-6.311855,-6.092222,2.914885,3.609862,-1.307202,6.857995,-8.560538,9.611715,-1.159670,5.998285,-2.468304,-2.394313,-6.333114,-3.544931,-6.644030,0.368870,2.938477,-2.155425,-3.550505,-1.526607,-7.411596,-2.070999,5.344677,-3.668036,-3.580757,-6.329313,5.332143,-3.966513,-6.026549,-5.267113,-1.592704,9.137280,5.964521,-6.317449,7.920246,-7.223523,2.791556,6.839034,-1.152986,-2.186483,0.840019,4.537656,9.210065,-5.591378,3.213095,7.914728,-8.498138,0.558593,-6.169609,4.073194,-4.208622,-0.409383,2.788335,-2.174733,4.113537,-2.398936,3.694622,9.241511,-5.912226,5.242309,-7.643453,7.895233,7.098803,-8.880811,-0.764125,-1.774485,-2.980481,-0.777504,-1.905577,2.524207,-3.864842,-1.104817,-0.867697,-5.838978,9.144493,-6.057341,-0.642518,7.804587,-1.491748,-6.956310,6.309472,3.468024,4.113535,3.704706,-0.658283,5.724786,4.287303,-7.424988,5.235798,-9.082255,-1.878028,-6.865273,-2.351549,9.297871,8.716771,2.933524,-1.938980,-6.091278,3.505627,1.483365,0.986023,-9.951951,-7.711739,-3.185698,8.782261,-9.946710,5.509526,5.587616,-3.912498,-6.083720,-6.709856,1.898953,-8.810963,-8.574938,9.804655,1.763931,-5.622930,5.616910,-8.941346,-8.106496,-9.870380,-2.160537,8.306344,1.652112,-2.562701,3.922155,-8.047563,6.268357,3.711895,-9.816802,1.798583,5.279713,9.952402,-7.122416,-3.208123,8.097131,3.020804,-2.223774,5.176044,2.683578,1.954538,-2.957647,0.529897,-0.636362,7.812070,6.644868,-7.672909,-0.926981,-7.156320,7.947370,1.913196,7.978039,-8.688971,3.533617,-9.283546,6.935160,-1.248643,9.115337,5.715627,-7.196446,-7.427917,0.958218,-4.595208,-7.731637,-7.257224,2.480798,-8.111982,3.518620,-7.311363,6.189211,6.428702,-0.235439,-4.614391,3.016490,4.584077,1.309386,0.291447,-1.438523,-5.906977,-3.436560,-4.659661,8.486657,4.809364,-0.083744,6.048278,-8.740640,-8.914394,-0.982097,-7.081498,5.899113,7.823521,5.160852,2.097551,-1.018456,-9.422136,4.593304,-4.377210,3.605990,2.940784,2.630901,4.578123,4.824001,-3.036907,1.182944,4.807800,-4.996366,2.816688,7.022283,2.630075,-9.417848,0.149663,1.809162,-5.791077,4.817855,-5.001165,5.606437,-3.385777,1.969623,-6.198512,6.337784,6.827108,1.423768,1.166864,-7.815585,-8.514861,-9.547434,-4.312564,-1.430137,-4.919126,-5.954159,-1.688130,2.887333,-5.053419,-1.018537,9.275416,-2.019313,7.470712,2.485172,-1.009201,-7.010428,-3.206342,-3.266831,-6.963016,-4.741724,-4.732121,8.311298,-9.334219,0.653742,0.930662,5.926852,6.274789,-3.885360,2.848017,3.916819,2.411764,2.779044,-9.865262,-7.289992,-8.386158,-4.242939,1.764254,3.335244,-6.697264,-5.692340,-7.724294,-9.354542,6.372332,7.774025,-3.415932,-6.039854,-9.570738,8.790617,-5.820951,7.931378,-3.137356,3.169623,1.592549,2.218237,-8.087848,8.075010,-7.759765,-8.653586,-6.723741,-8.246142,7.835672,-4.085055,-3.897954,-8.558740,3.785199,1.151908,3.888867,3.392597,-7.468910,-6.372514,-4.451373,5.689782,6.544999,-8.444764,3.808722,-5.477855,-9.024230,-6.010420,5.692820,6.853194,-1.308176,-3.695975,3.407087,-5.130699,3.496056,-0.805385,6.311424,-8.132979,-6.412755,-2.448638,4.778883,-4.791543,-6.174984,0.313844,2.771795,-5.699234,7.632042,-3.373837,9.164760,-5.758818,2.582267,-1.914996,0.804248,-0.436333,-9.304850,9.265815,1.980180,6.910262,3.398696,7.678841,4.347507,-6.111631,0.913324,1.922687,-4.820736,2.089932,3.628311,-9.652096,-6.618394,-8.181745,9.848835,-2.478084,9.991343,-5.134620,-1.307895,8.874556,-2.651070,1.536621,-2.128594,-5.872604,-2.913756,6.973097,3.950694,-6.843814,-2.373115,-3.901637,8.099467], dtype = "float32")#candidate|3096|(1848,)|const|float32
call_3095 = relay.TupleGetItem(func_502_call(relay.reshape(const_3096.astype('float32'), [14, 11, 12])), 2)
call_3097 = relay.TupleGetItem(func_504_call(relay.reshape(const_3096.astype('float32'), [14, 11, 12])), 2)
output = relay.Tuple([call_3030,call_3033,const_3034,const_3035,call_3045,var_3046,call_3059,const_3060,call_3069,var_3070,call_3082,call_3095,const_3096,])
output2 = relay.Tuple([call_3031,call_3036,const_3034,const_3035,call_3047,var_3046,call_3061,const_3060,call_3071,var_3070,call_3083,call_3097,const_3096,])
func_3108 = relay.Function([var_3046,var_3070,], output)
mod['func_3108'] = func_3108
mod = relay.transform.InferType()(mod)
var_3109 = relay.var("var_3109", dtype = "float64", shape = (440,))#candidate|3109|(440,)|var|float64
var_3110 = relay.var("var_3110", dtype = "float64", shape = (72,))#candidate|3110|(72,)|var|float64
output = func_3108(var_3109,var_3110,)
func_3111 = relay.Function([var_3109,var_3110,], output)
mutated_mod['func_3111'] = func_3111
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3152 = relay.const([[[-8.799850,1.264844,-9.600612,-7.921663,-8.912047,-3.379301,1.319866,5.610960,-1.759489],[8.506734,-6.083250,-6.134482,-1.736822,5.945932,-6.538111,2.915304,6.501878,1.152244],[3.432405,8.797802,9.237870,1.971888,4.591909,-6.311865,0.591361,3.482651,7.272802]],[[1.372147,1.338887,4.879779,8.862353,-3.389099,3.564128,-6.990471,1.305674,5.233826],[3.362123,8.579752,6.622487,-7.044763,0.074546,9.703513,-9.185079,-5.512120,2.301663],[3.675547,-1.736551,6.221160,8.281838,9.394582,6.099936,1.833208,2.421147,6.478062]],[[-1.866984,7.906354,3.086824,2.701206,7.013975,4.794586,7.907209,3.571501,-1.548845],[-3.023047,-5.061892,-6.953415,-9.566210,6.609837,-1.784958,-9.247700,-9.814752,-8.816615],[-8.263753,4.275712,3.523435,-3.244930,8.187440,4.984438,-7.150748,7.883905,7.218606]],[[-3.739284,4.019719,4.184935,-4.010763,6.128730,8.406704,-9.729114,0.293987,2.145885],[-8.099992,5.250269,9.205528,6.920455,-1.007874,-4.259500,-1.450290,8.865440,-4.987342],[2.753859,1.704521,-8.378193,-6.793057,-9.045020,-4.570776,9.695418,-1.101770,9.100053]],[[6.030811,5.703148,2.706675,2.897321,0.063651,-3.739476,5.557824,-6.573128,-0.161953],[7.439547,-0.082738,-0.579908,9.974353,4.848904,-1.469754,0.110126,-7.011268,-8.395874],[-7.774908,8.993320,-3.420478,-4.643239,-7.128239,-7.051787,7.056498,5.018961,-0.204374]],[[-6.431338,0.464594,1.755773,-0.685754,2.055517,3.680749,8.463208,8.002623,3.815896],[-1.315686,4.034400,4.087050,6.400646,4.361640,-1.256866,-4.342016,9.751966,-1.282739],[5.770160,9.450602,5.580647,-9.990558,5.743847,-7.726459,-8.972235,-1.625783,8.058072]],[[0.579823,-9.401415,4.996527,-9.040473,5.041137,-6.490836,-0.762512,0.199861,-7.990549],[0.326835,9.837312,7.640415,9.482599,-6.514960,6.197886,4.479974,-1.915304,-5.398360],[-7.154950,7.006173,-3.916336,-8.671916,9.478078,0.324512,-8.800815,6.754604,5.231193]],[[8.613738,-2.186929,-6.834358,5.617463,-0.294895,0.776702,-3.100527,-1.126585,3.540770],[0.049683,8.589857,5.512128,-1.560165,3.580944,0.197555,-6.499657,-1.119041,-8.656737],[1.176158,-8.470931,6.674791,-7.276708,-0.113083,3.174200,0.890848,1.875063,-2.928466]],[[4.649866,-8.544996,-5.486305,3.680250,9.537451,1.647587,-7.283132,2.965274,-0.530193],[-3.348487,-7.170630,2.401293,5.842466,-4.872417,-5.265094,9.133988,-3.926775,-6.114017],[-0.471703,4.268845,2.703688,7.965964,4.106814,6.455259,-1.858392,-5.905307,-8.641228]]], dtype = "float64")#candidate|3152|(9, 3, 9)|const|float64
uop_3153 = relay.log10(const_3152.astype('float64')) # shape=(9, 3, 9)
func_3023_call = mod.get_global_var('func_3023')
func_3025_call = mutated_mod.get_global_var('func_3025')
var_3157 = relay.var("var_3157", dtype = "float32", shape = (1848,))#candidate|3157|(1848,)|var|float32
call_3156 = relay.TupleGetItem(func_3023_call(relay.reshape(var_3157.astype('float32'), [1848,])), 0)
call_3158 = relay.TupleGetItem(func_3025_call(relay.reshape(var_3157.astype('float32'), [1848,])), 0)
uop_3162 = relay.acos(uop_3153.astype('float64')) # shape=(9, 3, 9)
bop_3174 = relay.bitwise_and(uop_3153.astype('int16'), relay.reshape(uop_3162.astype('int16'), relay.shape_of(uop_3153))) # shape=(9, 3, 9)
func_1729_call = mod.get_global_var('func_1729')
func_1733_call = mutated_mod.get_global_var('func_1733')
const_3192 = relay.const([-9.102596,-2.712846,9.672730,6.289120,-2.473435,-9.772056,-0.563436,-6.656616,4.258343,2.041673,-4.285006,-8.991494,-6.937089,3.927555,2.694095,-3.866906,7.101446,8.567755,6.010025,9.298039,2.058976,3.290187,-2.665346,8.939237,0.699100,9.440070,0.303258,1.113731,9.938553,3.875908,0.295293,-9.957509,-0.158657,-3.981333,6.204712,-7.738865,9.210642,-6.827266,9.323262,0.055322,-6.012861,-5.714525,-4.115975,1.549069,-1.472664,7.324267,6.837696,4.300205,0.462531,0.607851,3.973424,2.005356,0.703021,5.849452,-8.411196,1.129576,2.146080,-5.500038,9.175264,-1.820783,9.524365,-0.248407,4.033090,-2.261902,3.532714,1.187146,6.309119,4.226491,7.492534,2.319877,8.885873,-7.829897,7.484711,9.781392,4.066792,-4.907504,1.465549,3.160767,-2.624036,9.095226,4.885430,9.201508,-1.498992,7.735038,0.281297,7.216032,-5.879845,8.077742,-9.473523,-8.389263,-6.612096,-7.297253,1.414668,6.862540,-3.907975,9.117715,3.964845,-8.885340,1.161712,4.265971,1.171784,-1.771588,6.290576,7.848328,-1.834888,1.642073,-8.882991,-2.459178,6.532279,-8.383921,-8.579667,8.863892,-7.617052,9.888272,1.442552,-3.425726,0.050619,-4.122722,-9.629720,1.027767,-0.382477,-6.119464,-3.627743,-1.029264,-3.715451,4.275456,3.565269,-3.099490,9.338307,5.260483,8.885326,4.614187,-6.282957,4.839323,2.941260,4.791729,6.288141,-9.440320,-4.621637,6.727455,8.815051,-6.304677,6.828075,-0.162312,-7.098419,8.889613,5.920257,7.468268,6.207391,5.355201,8.005387,-5.094946,-7.341512,-4.591521,7.428126,5.932172,4.531051,9.357205,-7.397370,5.249299,-4.153719,-7.961106,0.696962,8.461230,-8.171943,1.896515,-7.842812,-8.008605,-6.512609,1.996687,-4.623704,5.344801,-8.795537,-0.557393,-1.112105,-8.952954,6.701625,1.910322,-9.038590,7.262616,0.245271,-5.464690,-2.548469,-9.022887,2.872336,-5.129025,-5.969538,0.724632,3.398233,7.875162,8.339600,-2.763993,3.898587,1.666335,-8.099298,-3.039390,6.415023,8.375247,-3.820242,5.291790,-7.574986,2.811951,2.808162,9.338923,2.127747,-4.235857,-3.624591,1.845058,-9.810822,8.500903,9.064213,-2.575689,-1.712526,-6.264930,5.854278,4.134961,6.112595,-9.192097,0.259605,2.028264,0.694142,-3.707801,-1.942350,8.413873,-7.850977,-8.450339,-7.768059,4.172894,-6.362882,4.068519,0.926527,9.992046,-3.932945,4.141307,-7.477259,-4.800549,-4.118674,5.228253,-6.145371,-7.714678,-7.048762,-6.292441,0.177983,6.054815,7.744862,-3.835401,0.018587,7.263876,7.929245,-5.527241,-4.115295,5.042228,0.768643,1.646903,3.920450,-0.785652,-5.921745,9.285998,-5.536317,-6.697919,1.484669,-7.932698,-8.191459,-3.697780,-3.907651,5.303104,6.438505,-9.786070,-0.946951,-7.821028,4.724111,1.633656,5.441376,4.215781,2.889563,0.515421,-4.029164,-5.933399,-0.041300,3.562486,2.441314,9.776669,7.142506,2.770724,1.479968,-6.320989,-4.491890,2.720252,-1.305283,-7.164221,-5.554594,-3.189124,3.443736,2.676606,-0.710170,6.254527,-0.145821,-0.722337,-1.884018,1.250856,-4.415728,-0.655115,8.741257,-0.279715,-3.492995,5.774671,8.345092,-7.322842,-9.216920,-6.642602,-9.584662,-0.528111,-1.529776,-6.168540,-1.688334,-6.869455,6.927850,-2.618811,-7.659886,-2.083357,7.934509,4.709025,-8.028164,1.266145,-7.087310,7.951973,4.194404,8.765607,-8.602189,-5.920926,7.034704,7.729224,6.292582,2.449302,4.731061,7.667904,3.105360,8.982857,-2.595364,6.004834,-6.595964,3.405687,-0.705215,4.235094,-4.758533,-2.336265,-6.211862,8.822993,8.873072,-1.774896,-2.556994,1.931885,-6.039375,8.272147,6.364229,7.693985,0.787480,-4.666637,3.842122,6.617238,4.236935,4.136884,3.234028,-4.493671,9.350004,4.757099,-8.973488,-9.877723,4.693044,3.837109,-3.242761,-9.040547,5.354367,7.610700,-2.287805,-8.195281,-0.510465,-0.084953,-8.101035,-9.502598,3.884846,-4.375790,-6.389781,-5.676673,-2.660309,1.776595,9.512823,3.315371,-7.094626,0.756161,2.123905,-5.285711,-0.741299,2.965945,5.734522,-6.238629,-0.362630,-7.175251,5.967954,-5.256288,-8.471542,-4.298341,-6.065773,-2.978904,1.172895,1.164412,-6.501827,-9.321193,-0.649876,4.946593,-0.526924,-1.118074,-2.859993,0.463852,-0.122100,-3.229446,5.664354,-8.535291,-5.808959,-7.864824,-9.203109,-8.166576,-3.157178,5.361898,-3.766467,-8.448317,0.963373,8.213029,-8.933230,1.355120,8.501120,9.854617,6.753136,-2.620242,9.859103,0.507790,-9.379904,-5.024921,-8.658354,-7.183981], dtype = "float64")#candidate|3192|(440,)|const|float64
call_3191 = func_1729_call(relay.reshape(const_3192.astype('float64'), [10, 11, 4]), relay.reshape(const_3192.astype('float64'), [10, 11, 4]), )
call_3193 = func_1729_call(relay.reshape(const_3192.astype('float64'), [10, 11, 4]), relay.reshape(const_3192.astype('float64'), [10, 11, 4]), )
func_1729_call = mod.get_global_var('func_1729')
func_1733_call = mutated_mod.get_global_var('func_1733')
call_3196 = func_1729_call(relay.reshape(const_3192.astype('float64'), [10, 11, 4]), relay.reshape(const_3192.astype('float64'), [10, 11, 4]), )
call_3197 = func_1729_call(relay.reshape(const_3192.astype('float64'), [10, 11, 4]), relay.reshape(const_3192.astype('float64'), [10, 11, 4]), )
uop_3202 = relay.asinh(uop_3153.astype('float64')) # shape=(9, 3, 9)
func_2693_call = mod.get_global_var('func_2693')
func_2695_call = mutated_mod.get_global_var('func_2695')
call_3214 = relay.TupleGetItem(func_2693_call(), 1)
call_3215 = relay.TupleGetItem(func_2695_call(), 1)
uop_3218 = relay.tan(bop_3174.astype('float32')) # shape=(9, 3, 9)
func_2585_call = mod.get_global_var('func_2585')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_3226 = func_2585_call()
call_3227 = func_2585_call()
func_653_call = mod.get_global_var('func_653')
func_655_call = mutated_mod.get_global_var('func_655')
call_3229 = func_653_call(relay.reshape(call_3214.astype('uint32'), [7, 7, 8]))
call_3230 = func_653_call(relay.reshape(call_3214.astype('uint32'), [7, 7, 8]))
bop_3236 = relay.less(uop_3218.astype('bool'), relay.reshape(uop_3162.astype('bool'), relay.shape_of(uop_3218))) # shape=(9, 3, 9)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_3240 = relay.TupleGetItem(func_2236_call(), 4)
call_3241 = relay.TupleGetItem(func_2238_call(), 4)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_3242 = func_2723_call()
call_3243 = func_2723_call()
uop_3251 = relay.cos(uop_3153.astype('float32')) # shape=(9, 3, 9)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_3265 = relay.TupleGetItem(func_2236_call(), 2)
call_3266 = relay.TupleGetItem(func_2238_call(), 2)
func_1892_call = mod.get_global_var('func_1892')
func_1896_call = mutated_mod.get_global_var('func_1896')
const_3284 = relay.const([4.904073,-3.349357,-2.654245,-3.219387,-3.206713,3.218527,-3.035463,-7.623661,3.711782,8.260035,4.708808,8.743184,7.078369,-8.731216,6.904241,-3.709780,0.869784,-7.945805,4.901826,2.798938,6.899269,-1.360543,0.375936,-7.117985,1.831187,3.562461,2.317375,3.951933,7.023525,8.477627,8.932294,3.596481,1.775701,-4.954989,2.878962,-3.544053,-5.056320,-5.894376,3.767906,-7.418930,-1.009527,4.272491,5.707030,-1.836671,-4.277237,7.811995,6.661731,2.131011,-5.526553,4.519299,9.323505,1.147406,-9.481528,8.118008,-5.539471,-9.447535,-7.125659,-1.568886,-4.139302,-1.007792,6.891174,7.494093,-3.993473,5.773861,-1.088579,-8.660299,-6.429683,-9.423635,-7.080506,-9.905659,7.523556,3.039599,-8.698005,4.241510,4.468408,2.090790,-1.104575,0.450712,1.585752,2.357098,-7.446447,1.153519,4.157363,5.986917,-3.068865,9.074405,6.632526,8.288214,-2.075917,-4.748232,-8.784571,-2.797959,-5.283513,8.401432,-0.661532,-0.700019,1.198302,1.604157,8.141120,-5.725837,-6.864527,6.572034,-3.719993,5.337118,-8.137819,-7.504165,-0.450901,1.173117,0.085679,-2.637674,1.157156,-6.912488,5.041579,-1.080265,-6.241876,-9.345779,-7.961280,-3.778431,-6.166289,4.287911,-0.570401,9.156324,6.527464,1.730096,6.358456,-3.135585,-0.665868,3.301387,8.341868,-4.131227,-8.980320,-4.557155,2.234966,-0.423470,0.572100,-8.356601,8.286461,-4.274053,-0.197629,0.308279,6.958957,-0.276165,-3.709601,8.281552,1.534860,-1.074070,-1.798573,-4.867167,4.728445,8.896144,0.231575,-6.815510,4.294099,8.242696,7.610452,-5.897859,-0.123575,-9.587598,-8.045514,-0.327773,-8.699953,-1.559675,-3.528155,-2.750067,7.801784,-0.042413,4.302115,2.183611,0.605394,-9.956729,-2.055927,2.586408,0.472439,5.733405,-7.895789,-1.208506,-4.378912,8.385493,2.006594,8.824008,-3.817996,6.803667,-5.839690,-8.211508,6.461612,-7.066273,5.369113,9.596392,-1.004690,9.325283,-3.752140,3.813222,-9.093812,6.137318,-7.634080,-5.113026,-2.705574,-2.616681,-6.852236,-2.413802,9.256386,8.320227,4.686354,5.620386,-2.926112,-8.360445,-3.489700,0.623176,-2.248864,2.759177,6.641604,6.868533,6.302149,3.264611,8.766542,-2.165330,-3.043339,4.004960,-3.660535,1.571581,3.397766,9.907586,1.880063,-8.539065,-5.531822,-8.474488,5.809256,9.153794,9.948688,0.834715,4.818816,6.170084,1.780845,5.418504,-3.406881,-0.161815,-3.134970,1.154453,0.805197,6.721568,8.515214,4.086051,-0.468884,-5.586770,7.234994,-5.192006,4.692813,7.376449,-7.210797,-5.303209,9.707557,1.422436,-6.909846,-6.227822,-6.997012,9.329298,2.296573,2.226560,-7.964655,-8.344261,3.057433,-6.165493,-4.940799,3.214330,-0.892515,9.087265,0.308092,0.669889,-7.038286,2.233993,8.872516,-6.200414,7.952202,-4.357860,8.986572,-8.757695,9.643240,2.042390,-7.902806,0.262292,-9.441119,-8.956956,4.988675,-8.180518,7.432286,-3.079094,-2.185339,-8.251270,-8.948906,6.848676,1.000647,-0.267212,-1.292521,-8.738590,2.408590,6.226006,0.724246,9.746372,2.710663,-1.007557,0.205984,-2.913110,4.376617,8.520787,2.725040,-4.460625,-5.785174,-2.226805,-7.080947,2.801434,-5.937660,-7.030341,3.602651,-9.224180,0.698868,4.483193,7.553726,-0.490055,-5.731898,3.725056,7.777085,-6.721830,-7.727963,-7.702477,-2.496042,-0.892090,3.369069,-0.897177,-1.952927,1.619116,3.769516,-5.191846,-8.917081,7.116236,0.082617,5.525273,-5.740615,-1.631415,-6.216073,-1.319290,2.204854,4.992280,3.525932,3.214145,-3.358503,9.282599,2.044708,-8.472155,-9.409256,6.773448,-2.761667,-5.373046,-5.824747,-0.430857,-2.568263,9.676093,1.808560,-5.262479,-1.912195,3.832263,-1.727704,-7.087063,-0.103004,-6.533067,6.265296,-6.537181,-7.230400,-6.710148,-4.906905,5.227388,3.083987,-8.519464,9.228099,0.436901,-3.177584,-7.672016,3.731249,-1.958472,2.373082,5.411248,-2.714443,7.128250,-3.685987,-1.508335,-4.601576,9.716618,-5.438204,-6.135731,-6.544914,-2.952560,-5.150672,-1.676068,4.938184,-9.281014,5.476189,7.813031,6.218451,-8.651219,0.941243,-5.437487,-0.441597,4.244989,2.635680,-1.954849,-5.466098,-7.633992,0.608177,-7.688703,-3.207333,1.866368,-0.972298,6.280073,3.054091,-2.712768,-3.357329,-5.167557,-8.576857,-7.117772,-2.839915,-2.386126,7.949795,7.762565,8.720139,5.151508,-1.229123,4.456032,-6.050299,8.390447,-5.848908,-8.651202,-5.640558,6.791472,-4.168173,6.966670,-5.172639,1.844072,-3.385920,-1.279056,2.391501,7.202046,-8.664727,-5.120475,-3.946589,7.650036,3.210889,0.900145,-9.080932,1.577271,-6.449850,1.291296,-7.035046,-7.097365,-4.743862,-4.356752,2.203427,2.820985,-7.495373,-2.602123,6.266483,9.245169,9.738820,0.709714,4.343455,-8.465858,2.688996,-7.015148,2.883043,-5.609650,8.580750,6.044712,4.388065,-2.551287,-4.538963,-5.597687,-7.588192,7.421301,-8.505378,-3.377538,4.902539,-2.171322,-0.916973,-0.480786,7.215294,7.777406,1.816077,7.755648,-4.735163,-0.450714,-2.971127,-5.067403,-7.692777,-8.681864,-4.321245,-2.564554,-8.023733,-2.851513,2.630947,-4.224741,-8.103820,2.096774,-8.995582,-6.557896,-9.391746,3.194107,3.737501,-9.772143,2.672717,-5.731504,1.225049,3.677066,8.133632,-8.958781,-3.255550,-4.837087,4.119529,-2.472463,-5.111383,-0.350132,0.682426,-1.210628,3.915354,-5.876072,6.170285,3.713749,1.579173,-6.713015,-1.126209,4.640119,0.058868,7.017991,9.346022,-6.101199,-1.811614,9.815105,4.327110,-5.713812,-6.536908,6.651371,-6.993272,-3.915699,-0.783379,-4.129765,4.317745,2.263789,9.063068,3.050472,4.775968,7.250225,-2.659205,6.147374,-6.006434,9.019349,6.610938,-6.465818,6.683949,7.937406,-8.998737,-3.913723,-6.501387,-9.285982,4.345484,-3.189016,-1.807289,-8.423008,-6.303193,-3.232874,-6.446150,9.667152,-6.542020,4.210116,-6.624813,8.391306,-7.836173,9.846007,-4.101422,5.818085,6.086295,-5.121264,9.351738,6.318278,-3.181543,-8.278273,1.390498,-0.697565,4.188553,6.674823,7.462760,-3.798850,-5.988495,-8.206522,-8.263606,-1.494402,6.560908,4.277130,-4.265865,6.993940,-1.527701,4.869438,9.506792,2.059819,1.933014,6.179397,-6.813485,-6.470834,4.254851,5.122300,-6.373339,5.957161,-4.963856,-1.013434,0.069993,3.022057,6.601782,3.019806,6.105701,-8.062794,0.476542,0.404035,2.196639,8.595418,-2.739915,-6.456917,-0.084068,-2.391884,-3.362383,5.325829,-6.690367,1.669433,9.719182,7.318025,-1.712675,2.599993,0.022929,0.611636,3.431782,0.978183,0.342477,-7.646056,6.034758,-1.900040,-2.842667,-0.906517,-7.956660,-8.386229,-7.600586,-1.465852,2.341614,9.073911,-5.441559,-3.667757,1.608807,4.465426,0.743684,-2.400934,4.599770,4.337302,3.243601,-8.620424,9.730760,4.188186,-8.701697,-4.456686,-2.715039,-3.474995,-3.242575,-1.704519,-3.621879,-8.322369,8.245381,0.586633,1.198730,-0.127296,-5.466039,7.557692,-7.216427,6.756627,-2.004426,-7.209582,6.621855,-8.969404,3.695802,9.869104,-7.133471,-0.133814,3.264161,-5.828312,-1.048539,3.202079,-3.563167,-7.863664,0.981635,1.722757,-3.447272,-1.557352,5.509810,6.652685,1.879040,-3.840435,1.334337,-6.490855,-8.227709,6.581341,4.234388,1.198820,0.691093,-5.160655,-1.377370,2.388534,-1.743806,-9.632689,-0.320167,-6.038705,7.362987,3.727682,6.590343,2.837562,6.348410,-5.162962,5.359506,-3.982890,-3.088286,2.051299,-7.032841,7.346346,9.663841,-1.615723,3.157646,6.929381,-0.207096,2.542363,-2.769932,8.981374,-5.545086,1.108512,-4.086070,-0.814502,-7.011407,9.882597,-8.402842,2.594753,-1.133368,2.743579,5.968415,-4.250247,-4.375459,9.234247,-8.651636,-9.244649,1.092674,-3.393960,7.485306,-6.629637,7.398786,-3.109090,-6.420839,4.247713,-7.721367,-1.583524,2.730868,8.471820,2.353886,6.076949,6.284003,-6.001841,5.890690,-9.990595,6.287316,-0.130987,-5.037256,7.546084,4.695759,-8.704013,3.206467,0.087174,1.328656,-6.471153,5.923922,1.385496,9.643389,0.172936,-8.607300,4.310005,-0.556909,-5.485609,0.246395,9.965919,-6.637988,-9.465778,0.033321,5.821024,-6.346998,0.888249,2.629988,-1.754221,-8.801568,6.087368,-0.834354,-8.749288,-8.025152,0.366948,-6.739887,-0.075217,-8.264177,9.325595,-8.217810,4.332708,-0.131208,2.443686,1.530898,1.435628,7.733880,-2.148354,4.002300,2.256033,-6.120880,8.232993,6.678261,1.136327,-6.345310,2.272335,3.257647,8.357998,8.206415,6.122716,0.817957,-0.727136,4.612906,-0.055206,-9.954872,8.560760,-2.753216,6.750130,-1.689384,-0.898948,5.883549,-6.348812,-6.563289,2.128027,-8.077301,-4.843386], dtype = "float64")#candidate|3284|(840,)|const|float64
call_3283 = relay.TupleGetItem(func_1892_call(relay.reshape(const_3284.astype('float64'), [12, 5, 14]), relay.reshape(const_3284.astype('float64'), [12, 5, 14]), ), 0)
call_3285 = relay.TupleGetItem(func_1896_call(relay.reshape(const_3284.astype('float64'), [12, 5, 14]), relay.reshape(const_3284.astype('float64'), [12, 5, 14]), ), 0)
var_3290 = relay.var("var_3290", dtype = "float64", shape = (9, 3, 9))#candidate|3290|(9, 3, 9)|var|float64
bop_3291 = relay.logical_or(uop_3153.astype('bool'), relay.reshape(var_3290.astype('bool'), relay.shape_of(uop_3153))) # shape=(9, 3, 9)
bop_3314 = relay.mod(bop_3174.astype('float32'), relay.reshape(uop_3153.astype('float32'), relay.shape_of(bop_3174))) # shape=(9, 3, 9)
func_1729_call = mod.get_global_var('func_1729')
func_1733_call = mutated_mod.get_global_var('func_1733')
call_3319 = func_1729_call(relay.reshape(const_3192.astype('float64'), [10, 11, 4]), relay.reshape(call_3191.astype('float64'), [10, 11, 4]), )
call_3320 = func_1729_call(relay.reshape(const_3192.astype('float64'), [10, 11, 4]), relay.reshape(call_3191.astype('float64'), [10, 11, 4]), )
bop_3331 = relay.subtract(bop_3236.astype('int64'), relay.reshape(uop_3251.astype('int64'), relay.shape_of(bop_3236))) # shape=(9, 3, 9)
func_2585_call = mod.get_global_var('func_2585')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_3341 = func_2585_call()
call_3342 = func_2585_call()
func_1915_call = mod.get_global_var('func_1915')
func_1917_call = mutated_mod.get_global_var('func_1917')
call_3345 = func_1915_call()
call_3346 = func_1915_call()
var_3367 = relay.var("var_3367", dtype = "bool", shape = (9, 3, 9))#candidate|3367|(9, 3, 9)|var|bool
bop_3368 = relay.logical_and(bop_3236.astype('bool'), relay.reshape(var_3367.astype('bool'), relay.shape_of(bop_3236))) # shape=(9, 3, 9)
output = relay.Tuple([call_3156,var_3157,call_3191,const_3192,call_3196,uop_3202,call_3214,call_3226,call_3229,call_3240,call_3242,call_3265,call_3283,const_3284,bop_3291,bop_3314,call_3319,bop_3331,call_3341,call_3345,bop_3368,])
output2 = relay.Tuple([call_3158,var_3157,call_3193,const_3192,call_3197,uop_3202,call_3215,call_3227,call_3230,call_3241,call_3243,call_3266,call_3285,const_3284,bop_3291,bop_3314,call_3320,bop_3331,call_3342,call_3346,bop_3368,])
func_3375 = relay.Function([var_3157,var_3290,var_3367,], output)
mod['func_3375'] = func_3375
mod = relay.transform.InferType()(mod)
mutated_mod['func_3375'] = func_3375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3375_call = mutated_mod.get_global_var('func_3375')
var_3377 = relay.var("var_3377", dtype = "float32", shape = (1848,))#candidate|3377|(1848,)|var|float32
var_3378 = relay.var("var_3378", dtype = "float64", shape = (9, 3, 9))#candidate|3378|(9, 3, 9)|var|float64
var_3379 = relay.var("var_3379", dtype = "bool", shape = (9, 3, 9))#candidate|3379|(9, 3, 9)|var|bool
call_3376 = func_3375_call(var_3377,var_3378,var_3379,)
output = call_3376
func_3380 = relay.Function([var_3377,var_3378,var_3379,], output)
mutated_mod['func_3380'] = func_3380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2585_call = mod.get_global_var('func_2585')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_3463 = func_2585_call()
call_3464 = func_2585_call()
output = call_3463
output2 = call_3464
func_3467 = relay.Function([], output)
mod['func_3467'] = func_3467
mod = relay.transform.InferType()(mod)
mutated_mod['func_3467'] = func_3467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3467_call = mutated_mod.get_global_var('func_3467')
call_3468 = func_3467_call()
output = call_3468
func_3469 = relay.Function([], output)
mutated_mod['func_3469'] = func_3469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_3532 = func_2723_call()
call_3533 = func_2723_call()
const_3551 = relay.const([[[True,True],[True,False],[True,True],[True,True],[True,False],[False,False],[True,False],[False,False],[True,True],[True,False],[False,False],[True,False],[True,True],[False,False]],[[False,False],[False,False],[True,True],[False,False],[False,True],[False,True],[False,False],[False,True],[False,False],[True,True],[True,False],[True,False],[False,False],[False,True]],[[True,True],[True,False],[True,True],[False,False],[False,False],[True,False],[True,True],[False,True],[True,False],[False,True],[False,True],[False,True],[True,True],[True,True]],[[True,False],[False,True],[True,True],[True,False],[False,True],[False,False],[True,True],[True,False],[False,True],[False,True],[True,False],[False,True],[False,False],[False,True]],[[True,False],[True,True],[False,True],[False,True],[True,True],[True,True],[False,True],[False,True],[True,True],[True,True],[False,True],[True,True],[False,True],[False,False]],[[False,False],[True,True],[False,False],[False,False],[False,False],[True,True],[True,False],[False,True],[False,False],[False,True],[True,False],[False,True],[True,True],[False,True]]], dtype = "bool")#candidate|3551|(6, 14, 2)|const|bool
bop_3552 = relay.floor_divide(call_3532.astype('float64'), relay.reshape(const_3551.astype('float64'), relay.shape_of(call_3532))) # shape=(6, 14, 2)
bop_3555 = relay.floor_divide(call_3533.astype('float64'), relay.reshape(const_3551.astype('float64'), relay.shape_of(call_3533))) # shape=(6, 14, 2)
output = bop_3552
output2 = bop_3555
func_3559 = relay.Function([], output)
mod['func_3559'] = func_3559
mod = relay.transform.InferType()(mod)
output = func_3559()
func_3560 = relay.Function([], output)
mutated_mod['func_3560'] = func_3560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3467_call = mod.get_global_var('func_3467')
func_3469_call = mutated_mod.get_global_var('func_3469')
call_3637 = func_3467_call()
call_3638 = func_3467_call()
output = relay.Tuple([call_3637,])
output2 = relay.Tuple([call_3638,])
func_3645 = relay.Function([], output)
mod['func_3645'] = func_3645
mod = relay.transform.InferType()(mod)
output = func_3645()
func_3646 = relay.Function([], output)
mutated_mod['func_3646'] = func_3646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_3732 = func_2895_call()
call_3733 = func_2895_call()
output = relay.Tuple([call_3732,])
output2 = relay.Tuple([call_3733,])
func_3737 = relay.Function([], output)
mod['func_3737'] = func_3737
mod = relay.transform.InferType()(mod)
mutated_mod['func_3737'] = func_3737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3737_call = mutated_mod.get_global_var('func_3737')
call_3738 = func_3737_call()
output = call_3738
func_3739 = relay.Function([], output)
mutated_mod['func_3739'] = func_3739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_3802 = relay.TupleGetItem(func_2236_call(), 1)
call_3803 = relay.TupleGetItem(func_2238_call(), 1)
uop_3815 = relay.rsqrt(call_3802.astype('float32')) # shape=(7, 7, 8)
uop_3817 = relay.rsqrt(call_3803.astype('float32')) # shape=(7, 7, 8)
uop_3836 = relay.sqrt(uop_3815.astype('float32')) # shape=(7, 7, 8)
uop_3838 = relay.sqrt(uop_3817.astype('float32')) # shape=(7, 7, 8)
output = uop_3836
output2 = uop_3838
func_3847 = relay.Function([], output)
mod['func_3847'] = func_3847
mod = relay.transform.InferType()(mod)
output = func_3847()
func_3848 = relay.Function([], output)
mutated_mod['func_3848'] = func_3848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_3880 = func_2895_call()
call_3881 = func_2895_call()
func_2585_call = mod.get_global_var('func_2585')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_3890 = func_2585_call()
call_3891 = func_2585_call()
output = relay.Tuple([call_3880,call_3890,])
output2 = relay.Tuple([call_3881,call_3891,])
func_3902 = relay.Function([], output)
mod['func_3902'] = func_3902
mod = relay.transform.InferType()(mod)
mutated_mod['func_3902'] = func_3902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3902_call = mutated_mod.get_global_var('func_3902')
call_3903 = func_3902_call()
output = call_3903
func_3904 = relay.Function([], output)
mutated_mod['func_3904'] = func_3904
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3925 = relay.const([[[0.421906,4.778904,-5.468555,3.404477,6.226867,6.379379,4.412995,-9.570275,-6.453574,-5.052458,1.805934,-4.623948,1.157301,-0.009489,1.365401],[8.465458,-6.890013,-0.766528,9.389381,8.756876,-9.369953,5.715594,4.717765,-2.614828,-7.392556,-8.485393,-2.787307,1.862695,-8.810390,-0.773085]],[[9.575805,-5.109484,8.846844,-0.120070,-1.957993,1.984343,-1.562262,4.046051,3.351379,-4.500972,-6.123722,0.669206,5.268608,-0.045188,5.154265],[7.756736,-8.222455,-5.591415,-7.404569,5.517430,-4.056913,1.456383,5.897915,-3.713005,3.692283,-3.647299,6.712959,-2.373225,-6.287016,-9.662721]],[[1.263644,-3.316086,-5.466905,3.922286,5.750307,5.781910,-2.959373,8.429436,0.719110,-7.316027,-7.827450,3.358186,-8.678010,-8.814158,-5.630826],[-3.296586,-5.878241,-4.091123,9.802439,2.750909,-6.100026,-3.599981,4.194644,-4.229336,1.686410,5.325121,2.007261,-9.574744,-6.777614,4.284223]],[[0.098400,7.627599,-2.656708,-6.382152,4.859384,5.717814,0.614382,-8.012208,4.027055,0.092581,4.432971,-8.286336,7.467007,2.447077,7.179314],[4.814576,-5.032889,-9.223363,-4.314878,0.399239,-2.524753,4.878019,-6.580336,-2.099912,-4.742809,2.853376,8.312556,-7.187854,-2.470106,-4.309714]],[[-2.625362,-1.930730,-9.638853,-2.366845,-9.138571,6.612792,-3.385932,-1.374558,-4.154263,-3.135512,-8.471459,8.079036,8.736295,5.352711,9.124048],[8.552486,0.349895,-3.484842,-5.163009,-3.838776,-2.788221,7.312220,-2.901954,-9.341480,-3.281657,8.788464,-5.474373,-6.104866,-8.171779,8.788551]],[[-3.570755,-6.756959,-7.617826,8.832778,7.521330,0.343330,0.047778,-5.402276,-9.084329,6.322448,7.808481,-8.782124,6.744643,4.309884,-2.997884],[7.595522,7.022492,-7.728743,-3.329592,-5.801427,1.367771,-5.228934,-4.167036,-1.910717,8.041827,5.653887,-5.859378,-2.837453,5.630311,9.724760]],[[-8.598726,-7.656912,-0.688516,8.155055,-6.574225,-6.118798,-9.678098,0.407105,3.896217,0.557327,5.940419,5.182582,-0.054790,6.825943,5.102130],[5.456358,6.418035,2.641045,-1.114968,-8.003860,-9.880401,-2.139469,7.923171,5.277670,5.005871,5.459368,-6.394026,-5.978260,-6.222086,-6.161492]],[[1.540322,3.132262,2.246111,-2.799995,-1.517291,-0.164863,-3.140785,2.802302,-6.072982,-5.395781,5.494281,-1.353168,4.096279,9.371647,-9.352471],[2.350099,0.610535,-8.615681,-4.825724,7.688139,-8.546995,5.094309,-1.949046,-4.554034,-9.022130,6.333605,6.911925,9.779614,-4.835834,-6.303313]],[[-0.218484,-1.708838,9.502930,-2.248229,-0.791570,-8.552014,5.604763,3.367476,-6.013373,8.976037,-2.811538,-2.253582,-7.396503,-8.906199,-9.968722],[-9.344467,5.122846,1.509962,6.886272,-7.491682,6.117083,-2.577323,-9.660744,-1.826923,-6.356279,0.512591,-3.153009,-8.668833,8.777840,-7.524880]],[[2.275601,-6.622739,3.996584,5.604570,7.853037,-9.391080,-8.588779,-6.703149,-5.891035,3.360435,-2.323742,-2.418762,5.440915,1.273866,8.678774],[-9.108170,-1.274416,2.106259,-5.669154,3.964062,-9.490725,-8.337555,-7.159896,-8.239881,-8.718040,2.367222,-9.986024,2.040833,-4.065742,5.258182]],[[-3.013052,9.055364,-7.290688,7.648889,1.631260,0.205041,-3.623465,7.815004,-9.658359,-9.245515,2.534894,5.781252,3.038627,8.908602,4.206510],[0.733453,4.810293,4.585050,-0.382748,-0.774004,6.038227,7.409989,-4.653117,-7.069145,-5.956704,9.161905,9.605096,-7.524574,0.447959,-8.483604]],[[-4.296149,1.264575,-5.591325,1.694330,3.580680,3.033921,1.684461,-6.182597,5.491163,-5.349684,8.613115,9.256357,-6.619472,0.852741,-4.827686],[0.117667,-0.887548,-2.433543,0.208168,2.010690,3.110868,3.526000,3.293632,-7.922988,-9.325457,5.723506,-7.023707,-5.395712,-4.000955,7.771166]],[[-3.531499,2.940934,7.080140,7.651487,5.833340,7.519217,6.681959,-2.000909,-7.981550,7.819424,4.519776,7.529689,-8.088065,5.825583,2.932589],[4.060437,1.503062,-9.678649,-2.201300,1.853115,-3.085976,-2.390964,5.098922,0.388587,-6.141792,-3.286369,7.897725,6.718297,-0.405039,-1.209865]],[[3.053451,0.825389,-0.924384,1.091932,2.466988,-3.862512,2.535752,-1.055725,6.921599,7.624426,-4.335826,-5.611231,8.959576,1.516484,-1.929540],[5.983633,8.619961,-6.185024,1.335005,-4.731354,-1.332967,-3.255473,-9.568928,-0.186617,-5.894324,9.030090,2.706353,-1.813651,8.212915,-1.654095]],[[0.863339,-2.089893,-6.089960,-1.186901,-8.624594,2.147629,-8.802285,6.293172,-5.500567,-4.865634,5.704224,6.326266,8.965640,8.400389,-1.783108],[-4.739083,6.183337,-3.424413,6.739666,0.565263,-0.461634,-6.096345,0.583359,9.764819,0.701493,-7.764028,2.005942,-8.217137,-0.089356,4.134339]]], dtype = "float32")#candidate|3925|(15, 2, 15)|const|float32
uop_3926 = relay.log(const_3925.astype('float32')) # shape=(15, 2, 15)
output = relay.Tuple([uop_3926,])
output2 = relay.Tuple([uop_3926,])
func_3929 = relay.Function([], output)
mod['func_3929'] = func_3929
mod = relay.transform.InferType()(mod)
output = func_3929()
func_3930 = relay.Function([], output)
mutated_mod['func_3930'] = func_3930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3467_call = mod.get_global_var('func_3467')
func_3469_call = mutated_mod.get_global_var('func_3469')
call_3933 = func_3467_call()
call_3934 = func_3467_call()
func_2430_call = mod.get_global_var('func_2430')
func_2432_call = mutated_mod.get_global_var('func_2432')
const_3943 = relay.const([-4.085832,8.262398,0.479193,8.103202,5.066925,5.254370,6.003535,7.949800,8.777837,-2.300377,-1.637692,-6.150106,-7.970116,6.431105,9.290032,-1.207116,6.668815,0.204668,4.996144,-8.451818,-4.286047,-3.478767,-5.173928,2.623901,7.941088,-7.860168,8.492862,7.364880,-8.796341,4.997101,-0.722608,4.751206,6.343529,-2.239177,6.752109,-8.501525,-4.007211,-9.647248,-8.593312,-4.636353,8.968921,6.148595,8.123696,-9.903930,3.370153,6.126772,9.393479,3.538084,-1.852551,8.261435,-5.451395,9.189234,1.133659,-1.804085,0.746522,2.805963,1.489039,1.463021,6.888016,-2.709014,0.329900,-9.069312,4.381543,1.297495,4.233528,9.122998,-4.223107,-9.507857,-9.154175,9.894482,-2.095358,-1.050564,3.168788,-0.075824,5.166072,5.368174,6.228690,3.379644,2.993256,-1.833061,-7.214124,3.290625,-1.192090,-5.130004,-3.753169,-0.977981,-9.576626,-8.152542,-0.295300,1.515741,-9.270192,-2.058271,-5.184764,-0.749718,-5.822182,7.582706,-0.619999,-3.048992,-9.825578,-0.565740,-4.783505,7.861773,5.049018,5.814756,2.376750,-4.636989,2.683410,1.060817,-2.811430,-3.438028,-0.902966,9.420355,-4.591776,4.603727,-1.117964,5.792422,-1.597905,-1.223279,-6.854283,7.509411,-4.310951,7.823357,-7.758634,7.834891,-0.271652,8.103542,0.411193,-6.231469,-2.305430,6.111345,0.532921,-2.787174,2.896360,3.583986,-1.916335,0.283289,-8.611049,-0.597763,3.652549,-9.677070,8.076167,-5.310676,-5.169453,-9.750023,-7.127070,-6.485833,-7.120125,8.259718,5.691149,-0.369296,7.029536,-4.260196,-1.784265,-5.290297,-5.470327,-2.348281,8.952750,6.622473,4.964593,-5.427995,6.056274,2.063110,4.829442,4.283518,1.439963,-9.736517,-5.619201,8.599601,-5.462931,-5.238977,-9.582854,-9.497740,-1.143151,1.249531,-9.769896,4.511569,-3.083866,0.018753,-6.555244,-6.287163,-2.467239,-9.853397,7.103739,-2.806198,-1.615792,5.584574,9.822212,-6.924291,7.858775,1.394201,7.577131,0.207864,6.248792,-4.099992,6.402592,8.473532,0.642649,-4.378306,1.089556,-7.357745,-2.254500,-0.693457,-6.116680,2.416555,9.047986,5.448447,5.110546,-6.094626,9.084846,-2.602791,-7.131275,4.308277,-1.648793,-9.455652,-9.901483,3.433167,-6.187599,-3.138629,-9.442766,-9.144172,-0.601457,-8.248717,-7.229754,-6.151543,7.136351,7.332362,-9.794450,-4.197361,-2.057354,5.844452,3.480965,0.087457,-3.950581,-3.994361,1.105431,-0.268052,-1.719436,-7.994399,-5.244483,8.257850,1.090224,2.370116,8.540952,-6.809604,-2.862194,-8.095188,-8.205662,-5.249305,6.283637,0.148431,7.751024,-7.808491,8.327709,7.576898,6.296975,8.205235,7.332254,-1.674667,-1.555048,-8.801685,-1.335250,8.361874,3.401748,-5.487939,-0.513721,8.488323,4.618652,-2.465444,-7.646462,-1.153311,-4.729269,6.410263,-3.456476,-1.033150,-2.037458,-0.959856,7.834827,-5.627261,3.697836,4.303835,-2.759793,6.664033,-3.370092,-3.615864,5.542368,-3.607459,3.995904,3.648752,1.376616,-9.297801,8.316205,6.112169,-9.390575,2.071062,-8.756142,-8.777982,8.802171,-0.284143,3.574844,6.265301,-9.386015,-1.551957,5.172939,5.010305,9.421736,-2.897345,-7.145168,4.731510,1.350095,-3.929618,5.235323,6.607001,8.492479,-6.047144,-5.131430,9.360930,6.579108,-2.276898,-7.706901,9.057178,-6.562637,-7.787226,7.240607,5.822956,-6.969982,-8.468627,-6.882386,-8.575076,-0.666640,-6.089713,-1.716411,3.507688,4.070779,-1.828664,7.287838,0.213301,-8.178058,9.284931,1.311269,-4.939147,-6.690488,9.948984,-0.029366,-5.594841,-1.077450,-5.392089,1.296405,-6.046497,5.091090,-0.584057,2.244582,-3.170647,2.589528,0.253894,2.011529,-8.664411,9.920981,-2.327966,1.316236,-8.058983,-8.682439,9.762701,-5.414841,-6.019738,-9.273179,-5.975032,2.805473,1.893070,-0.499267,3.265089,9.917559,-8.357766,-0.049959,-0.255530,0.858944,8.984733,3.362380,6.303116,6.480484,-6.305861,-5.206608,2.265588,9.579888,-5.665250,2.626682,7.942158,4.396827,8.795816,4.424267,-2.992303,-0.999593,-3.138087,-1.763195,8.102634,3.002216,9.438123,9.568655,2.718727,-7.726936,-9.192983,-5.983251,-6.240679,0.139430,7.838774,0.045754,-9.648549,0.182646,-0.782743,-0.180650,5.645716,6.556317,-6.517704,7.962654,4.803804,6.985241,-4.460942,-1.186573,-8.002366,-0.770502,-9.737479,3.158937,-6.815740,5.393265,-0.077560,-3.934136,9.515801,-4.225102,-1.033711,-5.378483,8.731951,-4.965636,9.389760,-2.219886,-3.826549,3.411820,6.469716,9.933210,7.047265,-2.196592,7.576751,-6.351363,-9.595935,-7.094288,-4.563623,-4.987157,-0.908180,9.571161,5.612856,6.214641,7.658617,-3.950234,7.764825,-8.250478,-9.887666,-9.552612,0.454420,3.520683,-8.149220,6.761401,-8.054635,-4.418666,-8.021692,-4.614025,-8.691862,2.218310,-3.769154,-0.056747,-3.320561,-5.786784,9.848332,-0.412323,8.062962,-6.233349,6.575735,6.989117,5.508361,-3.324990,2.381235,-0.294872,2.708419], dtype = "float32")#candidate|3943|(480,)|const|float32
call_3942 = func_2430_call(relay.reshape(const_3943.astype('float32'), [16, 5, 6]))
call_3944 = func_2430_call(relay.reshape(const_3943.astype('float32'), [16, 5, 6]))
output = relay.Tuple([call_3933,call_3942,const_3943,])
output2 = relay.Tuple([call_3934,call_3944,const_3943,])
func_3961 = relay.Function([], output)
mod['func_3961'] = func_3961
mod = relay.transform.InferType()(mod)
output = func_3961()
func_3962 = relay.Function([], output)
mutated_mod['func_3962'] = func_3962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2482_call = mod.get_global_var('func_2482')
func_2483_call = mutated_mod.get_global_var('func_2483')
call_3993 = relay.TupleGetItem(func_2482_call(), 0)
call_3994 = relay.TupleGetItem(func_2483_call(), 0)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_4002 = relay.TupleGetItem(func_2225_call(), 0)
call_4003 = relay.TupleGetItem(func_2227_call(), 0)
output = relay.Tuple([call_3993,call_4002,])
output2 = relay.Tuple([call_3994,call_4003,])
func_4004 = relay.Function([], output)
mod['func_4004'] = func_4004
mod = relay.transform.InferType()(mod)
mutated_mod['func_4004'] = func_4004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4004_call = mutated_mod.get_global_var('func_4004')
call_4005 = func_4004_call()
output = call_4005
func_4006 = relay.Function([], output)
mutated_mod['func_4006'] = func_4006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_4126 = relay.TupleGetItem(func_2236_call(), 3)
call_4127 = relay.TupleGetItem(func_2238_call(), 3)
func_653_call = mod.get_global_var('func_653')
func_655_call = mutated_mod.get_global_var('func_655')
call_4134 = func_653_call(relay.reshape(call_4126.astype('uint32'), [7, 7, 8]))
call_4135 = func_653_call(relay.reshape(call_4126.astype('uint32'), [7, 7, 8]))
uop_4138 = relay.log10(call_4126.astype('float64')) # shape=(392,)
uop_4140 = relay.log10(call_4127.astype('float64')) # shape=(392,)
func_2871_call = mod.get_global_var('func_2871')
func_2873_call = mutated_mod.get_global_var('func_2873')
const_4142 = relay.const([6.015900,-3.567998,-1.459165,6.620287,-2.989476,5.648942,9.199820,4.070617,8.776136,-1.882477,7.342746,-4.523843,-8.079348,-0.325356,-7.108995,-1.683939,-2.480868,7.046513,-8.461107,3.770376,-4.174097,-6.318167,-2.319523,1.214725,-9.633360,-3.416203,5.032838,3.483770,4.329829,-6.918662,-2.399425,-0.558684,6.539812,2.361530,-3.017918,-6.038419,2.377994,-7.011451,-3.100938,-2.520019,3.220806,0.270173,7.342241,2.027868,-7.807105,-1.956298,-7.485021,-2.025509,-8.469668,8.540347,-5.776624,-7.030149,-5.251373,6.191766,-6.904678,6.415684,3.206045,6.748865,-7.761506,2.978924,-0.655743,4.384301,-8.483175,-0.161037,8.171441,-3.554274,2.879478,-3.950145,0.362412,3.876103,2.625390,-5.066660,7.171421,1.153703,-2.932534,-9.493608,-5.463677,1.588224,6.799166,0.323492,8.293442,6.986696,-2.960628,2.045280,8.228215,-7.253023,3.161696,8.603621,-4.071510,-7.577461,-2.826865,1.357374,-7.108640,4.376828,-4.259979,8.909789,-5.093138,-1.812612,-8.115759,8.335274,-5.717959,-8.057512,-7.528853,-3.246635,-7.627932,2.413345,-4.078896,4.948021,7.670002,-1.467028,8.575871,7.328711,-1.171569,7.998553,0.806630,3.818926,-2.872100,-1.358168,4.224661,1.298097,6.067440,-1.282016,0.130318,8.516822,3.755726,-3.636249,2.090273,-1.693412,5.508840,-9.269805,-3.530923,6.120984,7.086848,8.286275,-3.518927,-7.004177,7.266130,5.234712,-0.890754,9.302486,6.368010,-2.003810,-0.407799,-3.566206,-9.590859,-2.291126,-5.173197,6.551972,8.929559,1.857589,2.639171,-2.635330,-6.405044,8.787237,-6.903940,-0.905594,-0.490090,-6.866239,-6.777040,5.194047,9.364507,9.598016,6.734349,3.309110,-2.438590,-0.252924,-3.996408,-1.119039,7.993410,0.036524,5.924721,9.375411,-2.065324,-8.230490,-1.585695,-9.739626,4.572207,-2.031067,-4.843086,-9.725664,-7.242691,1.355830,3.558852,0.936214,0.651343,-7.082442,3.679196,4.636079,0.766880,-0.569205,4.387774,8.348213,-5.978499,8.110431,0.492476,1.395199,-5.943726,-0.720017,7.491042,-5.745541,-0.123514,9.863207,-6.532085,8.354251,-3.886122,-9.394527,-2.122059,-9.376982,0.525533,-1.016909,6.484388,-7.045903,-1.570664,9.798091,-3.622408,-0.798068,-9.877390,-9.431622,-7.990554,-8.877563,2.679043,-9.721198,-3.152368,6.968140,-8.775228,-7.778907,8.151450,-6.878783,3.897966,2.157957,9.023076,-0.177476,5.890709,5.818815,1.418217,-1.556919,-4.493175,-1.068423,-1.328204,-7.317249,4.363775,-6.602251,3.399950,-8.811536,4.362714,-7.843328,-3.280002,-2.364299,-5.999994,5.414205,-6.732467,-6.698258,3.706734,1.680751,-1.833804,-5.030219,1.920524,1.186887,6.321389,7.986985,9.867249,-8.634956,7.623828,-0.665075,-1.574395,6.141828,3.725474,2.462117,-3.481378,-7.335609,-6.740402,6.964590,-0.638796,-6.860240,-1.510614,-2.680194,4.153453,6.776904,1.230752,-1.055760,-3.915840,-1.048259,-1.470296,-3.782213,1.786182,9.569012,2.465008,5.618071,3.924208,-9.245642,5.635232,-5.480598,8.187717,4.643328,2.666986,-1.454849,0.037391,8.079007,-8.689384,8.961547,5.605585,0.131871,4.937063,-8.616509,-2.297226,-9.079910,3.696661,-9.448033,4.027711,4.176104,-7.096614,-8.190731,5.488069,7.615531,6.557687,6.657440,5.409311,8.401238,3.557653,-7.137798,-5.475567,5.664121,4.477087,-3.469927,-7.419538,6.115357,3.466187,-4.330680,7.494321,-7.907452,-8.458844,5.483417,-1.711444,-2.258529,-6.544250,9.402618,-3.283051,-4.681907,0.197184,-5.863027,4.621048,-5.342182,0.748576,2.636656,-4.890225,9.673447,4.211158,-2.673714,8.876830,3.844354,4.339826,6.851462,6.681413,6.369316,-2.675795,-7.012738,8.947135,3.618626,-6.490037,-4.706609,-2.773353,9.927930,-1.228974,-1.329902,2.133304,-8.794322,-1.230866,-2.521155,2.116194,-1.942400,4.025708,1.516040,7.600684,7.107391,0.552215,-4.540940,7.981032,1.871103,-6.764777,9.915065,9.954387,-0.852789,7.339255,-6.922832,1.794426,9.545962,0.833509,0.797782,1.721379,-8.517364,-2.411700,-5.715401,1.269703,-0.588912,0.105815,2.315853,6.863600,1.824908,-0.706985,5.780276,-8.430485,-6.697167,-4.018621,8.258182,-5.244264,-2.376007,-1.011208,-9.533696,9.454966,8.115988,-6.082334,4.331782,8.501813,3.954912,-8.109547,4.656218,3.676263,5.328461,4.789482,3.122392,-5.581098,6.613235,-7.007755,-3.472975,-8.001543,9.676500,-1.988003,-1.061741,7.939373,1.925167,-7.395729,-1.468207,-9.777706,0.740306,-4.892381,6.972366,4.595923,-4.848117,-7.824794,6.559427], dtype = "float64")#candidate|4142|(440,)|const|float64
call_4141 = relay.TupleGetItem(func_2871_call(relay.reshape(const_4142.astype('float64'), [440,])), 2)
call_4143 = relay.TupleGetItem(func_2873_call(relay.reshape(const_4142.astype('float64'), [440,])), 2)
output = relay.Tuple([call_4134,uop_4138,call_4141,const_4142,])
output2 = relay.Tuple([call_4135,uop_4140,call_4143,const_4142,])
func_4149 = relay.Function([], output)
mod['func_4149'] = func_4149
mod = relay.transform.InferType()(mod)
output = func_4149()
func_4150 = relay.Function([], output)
mutated_mod['func_4150'] = func_4150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_4253 = relay.TupleGetItem(func_2225_call(), 0)
call_4254 = relay.TupleGetItem(func_2227_call(), 0)
uop_4276 = relay.cosh(call_4253.astype('float64')) # shape=(13, 9, 9)
uop_4278 = relay.cosh(call_4254.astype('float64')) # shape=(13, 9, 9)
const_4279 = relay.const([[[-9.943867,-1.170948,3.538849,9.986895,6.070068,-7.868995,-8.673707,6.449081,4.089034],[-3.413061,1.871050,6.658310,1.971332,6.092546,-0.188332,-5.866551,-2.139425,3.803088],[0.101501,8.910222,9.232285,2.268266,9.817167,5.423207,2.989934,2.530691,-2.829390],[6.323285,-5.319250,-6.563735,0.009160,5.871326,9.577969,-9.766523,2.918382,0.469677],[3.549220,-6.108323,-6.528744,4.149235,-0.197247,-7.491784,-8.255756,-8.880717,-0.693134],[7.888363,9.240576,6.433935,7.555670,7.556444,8.641048,8.495988,6.617284,8.593913],[-7.538065,-3.249023,3.248237,6.648113,-0.742086,-6.369822,-5.839800,-2.963567,-0.232241],[6.816055,0.454916,1.194280,4.394380,1.826670,-8.582946,-9.358327,-6.295380,1.142466],[8.612209,9.422187,-2.198441,-0.398723,2.579862,-2.452013,-3.897227,-0.488447,-7.756054]],[[-4.032765,-3.680446,9.522331,-7.713586,3.542890,-8.582939,-7.307020,-1.345146,3.793169],[7.518367,0.244464,-3.620593,9.246488,7.812659,5.301541,8.498919,-2.607214,2.848541],[-9.416200,4.019284,-6.159948,4.425234,-0.958463,-6.811228,-8.248223,6.462413,5.375037],[-9.409770,6.876791,-1.131739,1.300319,-3.543338,4.697469,4.425536,-2.311725,-1.419217],[-0.825620,0.392065,7.863527,-9.494056,-2.313105,9.212165,-1.571342,-8.427130,-7.188507],[-7.778483,-0.329239,0.252121,-7.497290,1.035413,2.604545,-6.242211,6.417190,-1.787588],[2.276489,0.176215,7.408107,4.403647,-5.664167,6.321522,-0.847978,-3.443679,-5.614069],[6.348835,9.501937,2.820532,-2.019427,-0.580216,-9.411830,-8.822519,-5.890228,0.597499],[-1.944112,3.941231,-8.967536,0.224243,-0.405416,7.260811,6.757796,9.613958,8.617429]],[[-0.305279,-9.366829,-1.445305,7.438652,1.115878,-7.023658,5.038438,4.322819,9.177874],[2.879228,4.000692,-6.806420,1.533037,3.515873,-0.176659,5.198097,-6.341131,-2.640892],[-7.923310,9.038743,9.152271,-1.789556,-4.171615,0.899885,3.051020,8.857970,-2.281317],[0.201273,6.382850,-1.370255,-2.086922,-8.154993,-0.733646,3.997589,5.118973,-4.471922],[-3.996434,6.920574,-5.968925,-4.171867,-7.169713,-1.291923,7.073540,-7.746187,-5.885087],[4.167961,-1.570157,4.966233,-8.584373,-6.693187,5.696103,-2.458619,5.850272,6.038296],[-8.031591,-3.390657,8.202233,4.112773,-3.472148,2.615623,-5.078854,9.837052,2.028557],[9.205820,8.576636,7.015387,-4.331939,-6.634559,4.900861,-9.483604,0.034862,-1.453821],[9.953453,-1.693062,7.011727,0.425653,-4.694566,3.690526,3.638219,8.755320,-3.889866]],[[-4.157659,-9.351505,-4.978187,-8.659059,2.052115,2.757485,-8.425834,8.896473,0.563723],[-7.552055,-3.546099,0.259961,-9.916345,3.663604,-3.325216,-8.005929,-1.518186,0.819620],[3.936832,1.120268,-8.337785,-1.165832,-9.649708,8.166032,1.057712,-2.482600,-3.399316],[3.570139,-1.274832,-8.704458,-1.738649,5.522884,0.921723,1.643939,-7.132947,8.944701],[-3.100901,6.533945,3.315518,-8.222607,4.578584,-0.559235,-5.243749,-0.296552,-4.688990],[4.096470,-5.245327,-7.011450,-0.520651,-9.338955,-8.605367,3.803846,4.576110,5.183234],[8.828956,5.978600,-0.529555,-5.332160,1.162362,-3.528433,2.907345,-1.437677,-8.266333],[6.123874,9.390726,-2.393782,0.996002,-6.304299,-1.443435,9.447607,9.081231,-2.567602],[-0.697073,-5.851827,-5.787008,-2.218413,4.271895,6.974348,6.804254,-4.452705,-2.027313]],[[-6.516201,-3.970681,-8.468554,3.277219,-9.737990,0.750782,-1.380352,9.575281,6.834596],[3.182811,6.606117,3.938110,9.601109,3.420342,1.527178,-5.358180,6.287478,-4.809478],[9.920073,7.832591,-8.443824,3.867235,-8.980100,8.281300,-9.502500,7.671317,6.818042],[-5.904958,2.162103,-7.522731,9.367471,7.971300,0.777502,-4.693072,4.091815,-9.748219],[-6.727561,-3.905628,-9.114556,7.152740,8.171711,-7.727252,2.928722,9.621426,-0.178027],[4.720183,-5.264836,-6.663428,-2.831307,-9.953750,-0.232615,8.656192,-5.994077,-4.708421],[0.202478,8.581393,-3.308299,-1.564076,-9.709986,1.354431,0.113150,-7.580881,6.074931],[-7.356320,-0.302337,6.581667,6.365799,7.525364,-9.567604,9.684086,5.472916,-2.288671],[-0.853582,5.063892,-9.771679,-0.409016,5.740045,4.083040,5.005471,-9.697613,7.154416]],[[9.827617,-0.372964,-1.389815,-7.990504,8.806184,6.375852,1.563550,-5.474200,-1.118162],[0.495772,-0.196369,-8.590043,2.987168,2.178821,4.863830,5.979982,-4.654492,9.853328],[0.478412,-8.855727,-9.158451,-2.407837,9.862202,-4.673533,-3.573307,-2.002702,5.291526],[-1.540792,0.674361,-7.241595,-7.815519,0.294930,-7.727035,-3.757849,-5.878155,-9.994924],[-0.413623,-7.255486,1.723080,6.983277,5.481318,-0.825739,-1.004690,4.369699,9.742392],[-6.286392,-1.415882,-2.151810,8.131058,-6.900457,5.436655,-9.298645,2.157325,1.723404],[7.339381,-0.281284,2.644580,9.067452,-4.440867,6.406979,3.193241,5.591437,1.049508],[-1.401476,-7.512046,-5.304752,2.907033,6.155214,1.555455,8.102881,-1.273477,8.371401],[-6.953781,4.610652,-6.253482,-8.430077,2.933128,0.516639,5.793114,0.785023,-9.122831]],[[0.262523,-9.883106,-4.904261,-4.263089,-3.146663,-0.517544,-1.492924,6.366579,7.205623],[-2.891752,5.092731,9.672846,-7.489368,-3.745080,4.521036,2.272909,-9.891173,0.133312],[3.715915,-2.114300,-2.602344,-5.232346,8.438897,6.107850,0.523170,9.776596,0.396728],[5.997602,9.753040,4.051108,-8.701657,-9.957660,-9.819692,9.138974,5.633537,9.612670],[-0.300272,-6.672309,0.320522,-2.903596,7.312560,4.688306,1.478624,-1.975841,-1.269705],[8.102830,-8.102006,6.148570,6.834309,-5.856095,-5.298869,8.668847,4.854349,7.595532],[0.210699,1.078830,9.751386,4.733819,4.912878,0.345213,4.575185,-7.403643,-7.290542],[-4.144137,8.354086,-6.402566,-7.702998,-2.935385,7.764199,0.884076,-7.524787,1.464610],[6.370941,-0.513234,-1.996039,2.384922,-9.009665,7.686927,3.474688,-5.316347,5.920719]],[[7.367953,-5.977589,2.178293,1.378594,-1.843635,-9.943010,0.841071,-4.569620,-2.524481],[1.218940,-0.938351,-1.389328,9.859258,4.356278,-2.735866,-7.944160,7.222012,8.764822],[1.884654,2.878933,-4.528241,9.234270,2.273874,7.960464,0.526464,5.341199,-1.147569],[0.702877,-3.436786,-3.390708,0.604596,-7.832418,2.836384,-1.374422,-4.307671,5.150168],[6.790073,-4.947883,-7.667748,-0.951694,-6.485289,-3.942697,2.886463,-2.541548,-5.371751],[-9.383103,-1.915515,-6.784272,1.999099,-3.679343,-5.086487,-2.723285,-4.059868,9.718084],[9.975872,-3.503353,7.710177,-3.812595,4.838152,-5.114409,8.105340,3.127293,7.475658],[-5.891633,-1.632312,-7.556915,-3.199146,-5.235601,5.653051,8.476296,-4.223758,0.647676],[-8.189860,-8.562872,-3.250961,-2.130320,-1.237810,6.626484,1.713389,-2.611705,-6.785640]],[[6.033130,8.550798,-8.282250,6.057053,2.313583,8.515148,8.849908,1.485745,5.061137],[2.279811,6.570800,-5.745813,8.061280,-6.221860,9.380482,7.693739,5.460797,3.069089],[3.468611,-1.133754,-0.858255,2.660291,8.840215,7.859234,9.924604,-5.310016,-7.515904],[5.494116,0.196330,5.402851,7.830385,4.473029,-6.967945,-5.745838,6.083567,-4.936644],[-9.191241,3.470583,-9.700268,0.082992,0.877980,3.702841,-8.589078,-6.360313,-6.792551],[-3.739951,-9.895575,6.963493,-0.973756,-4.702538,-0.417961,4.598714,1.741587,-4.745086],[-5.705783,1.217749,-7.636353,4.919161,3.692364,-5.332256,-5.400244,4.056716,-3.747765],[5.493672,-5.838645,-5.948558,-6.195813,-9.447867,-0.035326,-2.172423,-8.748729,1.104305],[-5.495996,2.934378,-9.129734,8.055838,-0.411478,6.985873,3.590678,-3.716148,-7.964758]],[[-1.557292,-3.458050,-3.879262,-5.314163,7.123325,-2.275217,5.123392,-7.627307,7.937571],[-1.361293,6.110459,7.750929,8.469419,9.090631,5.028128,-0.555464,-4.203619,-5.365490],[4.898220,8.363681,8.029243,4.065065,-4.926942,1.223098,-8.800296,3.884368,-0.786539],[-7.371825,8.905173,2.516461,-4.306700,0.897089,0.988867,1.738840,-4.151820,4.527237],[7.748880,-0.191787,-9.448391,8.223512,3.390132,-4.411667,0.378427,5.495191,-3.529245],[2.942003,-2.872070,-4.041705,-0.861417,-3.487783,-3.413578,-2.791295,7.931217,-2.569885],[-3.085910,-2.156108,-1.255639,-2.703291,-9.637125,-2.184071,-1.373230,8.180620,-8.304084],[-1.851703,4.072993,9.600389,4.767751,7.861989,-8.846638,-5.666196,9.531619,-5.245967],[-2.397168,-8.835196,-7.879574,3.071480,-2.143818,2.728784,-7.772234,-7.490091,2.665567]],[[-6.384026,4.647918,4.593902,9.095685,1.587202,-9.096475,-0.535567,-8.958887,5.707214],[1.033045,4.772430,8.619379,2.171409,5.125042,-8.339585,6.287787,3.741699,-7.615442],[0.718886,-1.401676,5.085322,-9.445381,4.168612,-1.698787,-0.512508,-4.596457,0.356320],[-0.218350,5.987475,-8.491380,-0.585378,-5.168867,3.136994,-7.736695,-4.108516,2.570944],[-4.841013,6.000631,-2.543251,-9.491280,-4.450003,-3.423690,3.174485,-8.031325,-0.102881],[-0.113609,-1.380271,-4.820055,4.120822,-6.543235,-0.194060,3.654188,-0.912240,-1.034205],[-9.320220,5.762477,3.454875,7.951093,-3.311295,-4.301733,-4.798224,-2.817155,7.405897],[-0.674215,8.627247,2.991099,-4.326966,-1.867410,5.052998,7.112590,-4.311278,-9.304980],[5.439691,-0.477196,4.676929,-0.619384,0.149886,2.884307,-8.921835,3.659585,-9.637529]],[[3.401510,-3.786625,2.029412,-7.980351,4.122204,4.584631,2.387809,8.599370,6.507434],[-4.168032,9.320964,-1.301594,-0.732985,-6.477202,-1.453038,-2.614634,-2.391635,-0.752101],[1.396075,-9.730186,2.330312,-0.718244,-0.145201,-2.157914,4.118097,-5.145568,-5.582677],[8.513223,4.661194,-2.469924,-2.708436,1.898098,6.571605,1.392159,-1.920931,-1.148469],[7.416686,-4.283549,-2.179378,9.780833,3.381895,-7.444273,-1.356284,7.135195,-8.229911],[-4.657979,-6.220963,2.804165,4.760812,-6.827612,-5.498703,0.504263,-5.842526,-2.343350],[-0.600067,-5.380740,1.703165,2.006801,-0.451774,4.642639,-8.822683,8.997562,5.448785],[5.422834,2.844499,-2.073699,-8.744433,-5.833537,-3.459145,6.787926,-8.980832,-0.798873],[8.246589,-9.627860,-7.390111,-7.777307,5.168304,-4.451651,-4.449387,0.312245,0.772067]],[[4.648755,6.074132,-0.514609,-5.048558,-6.567446,4.003769,-2.676685,-6.335187,-8.265224],[-4.822507,8.274287,2.854694,-1.140266,5.461165,8.225753,-4.223269,-8.315681,-3.792445],[2.086491,8.009535,-4.459505,-3.561139,5.762914,4.758508,-6.449011,-0.496597,3.877672],[3.560436,3.094136,2.694034,6.887861,4.800183,2.268480,0.819865,2.901560,-8.342683],[3.099802,-0.579880,9.255668,1.942192,-9.995763,0.414674,7.069651,7.486987,-5.225522],[0.379658,-7.386093,2.976874,2.241567,-3.626947,7.170135,-8.283392,-8.541827,3.247458],[-4.880560,5.556586,-0.735417,-4.023687,3.884874,-8.575856,-8.216503,2.558591,5.436189],[-7.398539,3.224780,5.921667,4.065281,-9.384643,-7.794555,9.302154,-1.261300,8.944459],[0.217510,-3.741812,-8.882761,-1.900390,-6.245312,3.176465,8.570143,-5.731023,8.001261]]], dtype = "float32")#candidate|4279|(13, 9, 9)|const|float32
bop_4280 = relay.logical_xor(call_4253.astype('uint32'), relay.reshape(const_4279.astype('uint32'), relay.shape_of(call_4253))) # shape=(13, 9, 9)
bop_4283 = relay.logical_xor(call_4254.astype('uint32'), relay.reshape(const_4279.astype('uint32'), relay.shape_of(call_4254))) # shape=(13, 9, 9)
func_3645_call = mod.get_global_var('func_3645')
func_3646_call = mutated_mod.get_global_var('func_3646')
call_4291 = relay.TupleGetItem(func_3645_call(), 0)
call_4292 = relay.TupleGetItem(func_3646_call(), 0)
const_4310 = relay.const([[[-0.762720,-8.827268,-7.387387,9.810238,6.604752,0.183910,-0.574064,6.548166,-8.661898],[7.593992,-2.659975,-8.080584,9.462608,4.892406,-8.096458,3.140168,3.486499,-5.990572],[3.922978,-8.679144,-0.894860,6.890554,2.773611,-1.430713,8.374689,-4.129941,8.685088],[2.807256,-4.331533,-4.832648,-3.901941,0.666660,3.902731,7.381760,-1.563827,3.859420],[0.626767,6.559441,-1.426296,-0.573941,-8.241861,8.333425,-0.179333,-9.126579,7.540651],[7.415817,-2.081429,-8.620215,-7.158210,-9.120541,0.240583,6.635825,7.011578,-7.551117],[-8.339957,8.438499,1.073655,-2.609305,-0.739395,-2.694118,-0.642227,8.145643,3.676341],[-8.310807,1.053602,-6.227061,2.064064,0.795219,-1.320103,-1.506052,-0.556322,9.266160],[-3.607429,7.964247,-1.821201,-2.844084,7.664148,0.086147,3.859789,-7.914598,0.085689]],[[-9.544449,9.312736,2.973455,3.767042,-0.290810,9.542374,7.736999,-2.966630,-3.752533],[-0.143955,8.922757,-3.228877,-9.005972,-3.240068,-5.066460,1.291591,-4.585098,-4.723415],[7.498544,0.286822,-8.752635,9.806007,-1.367752,-8.162581,3.265775,-9.248623,7.415200],[1.991080,-5.508214,-2.970559,8.438168,6.227417,-3.248048,9.479936,8.640544,-9.188870],[-3.092269,4.119200,0.628547,5.588473,9.771764,7.290181,9.946961,-0.964136,-7.275039],[-2.697086,6.989057,-3.175407,-7.411398,8.475094,-6.852124,0.415019,8.684941,-4.991727],[-4.280435,4.956518,1.734555,-6.877042,-4.486258,-0.635915,-4.529930,-7.292027,2.616005],[3.794657,3.436168,6.531493,-9.519739,-4.705140,-0.013216,-6.694896,-1.183353,-6.939283],[-1.073023,-0.667943,7.745091,-5.020795,-2.843283,2.919414,2.404222,9.519422,9.327943]],[[-3.990737,7.311871,-4.937881,8.920664,-2.347802,-1.985288,4.018812,-4.442170,4.276915],[3.238589,7.783264,7.575262,6.983566,6.992375,1.493459,2.792833,2.052256,-7.593474],[-4.742257,-5.359589,9.875321,4.317679,-3.133342,4.765057,-3.283363,0.963339,-8.827503],[-8.301484,6.526101,-3.214687,6.905542,-6.885541,-7.048622,-5.235342,1.372119,2.696950],[3.204860,8.984374,-1.138014,-1.323935,6.579352,-5.476094,-8.579320,9.201756,5.000763],[-4.187700,-9.827303,3.507217,8.444648,5.305093,-6.092271,4.590760,-8.749068,0.229081],[2.018404,7.175504,2.350892,-6.786592,-0.723501,6.716249,2.058402,-0.177344,3.166294],[-2.568867,5.810506,8.612374,9.181283,-3.275523,8.445950,-5.624500,0.215879,-6.378603],[-2.202512,-1.638099,-5.581257,-5.740106,7.826469,6.818412,-6.109376,3.864419,-4.138225]],[[2.502964,8.010224,3.349525,-7.737823,-2.005838,5.226880,-7.833340,4.419872,-8.469608],[9.636587,-4.187492,-2.915891,1.915785,9.705683,-9.674045,2.877775,0.696983,1.287094],[7.159212,0.435916,5.385781,-8.330606,-5.384186,-0.859104,-9.012796,2.343666,-5.558662],[-5.625406,-6.039290,-2.706309,4.201772,-5.177863,3.831797,3.354035,8.789298,-1.923694],[1.158668,8.372318,-4.417906,5.248670,5.676257,7.071231,-1.528166,9.724754,-4.584667],[5.406911,3.586802,-2.928818,-9.261979,9.079793,-3.810871,-0.816361,7.427908,7.189165],[-0.920747,-8.714838,6.222344,8.759987,7.874263,-0.651677,9.948315,-4.573872,-3.124603],[0.519031,-6.781875,-9.772412,-2.409995,8.151003,-1.096161,7.501120,9.814447,-7.184258],[-3.743807,-0.629733,-4.822112,1.384118,-4.609805,-4.537047,-6.191889,2.280578,3.020285]],[[-5.816595,7.737419,7.652051,-5.916572,-2.583520,-4.588220,8.063058,-8.368774,-8.763483],[-4.543317,-0.902162,0.503238,8.333791,-1.244460,7.966635,3.077622,0.733753,3.711459],[-8.282185,-1.487785,7.640416,-9.718874,8.295675,-5.432409,7.500505,4.390414,0.294228],[1.535628,-1.220313,-6.790864,1.225143,5.754167,-1.698743,4.045260,7.805600,8.314408],[-5.885894,9.833285,-9.500364,9.147021,-6.335107,-9.861450,-9.499274,7.303905,5.793258],[-8.430810,6.850472,-4.497397,-3.947714,-9.395929,5.802332,-6.408260,1.805507,6.651648],[5.154785,-3.053338,0.837069,4.445873,-1.050143,-2.301896,-1.956786,-6.438512,0.980897],[7.583143,-0.335873,8.929532,4.963043,0.214019,3.013467,4.710611,8.846186,-7.349511],[-1.761397,-0.202614,-8.017743,-3.864722,6.794145,-2.034125,3.463001,-4.106017,-9.859451]],[[0.124340,0.825334,-0.549019,0.790935,8.121886,7.887092,6.409512,-7.532823,-3.359533],[1.320634,3.904986,5.649319,3.468708,-2.773729,-6.960688,4.111406,-9.403631,-5.824482],[4.818713,-7.562244,2.429242,-2.251185,2.007170,-3.439583,-3.882409,5.766108,1.447474],[7.140805,8.931257,-5.681199,-6.577960,-9.416724,4.848247,-5.887668,-3.900562,4.120244],[-4.230661,6.145929,-4.339391,-7.285660,2.202598,7.167437,-1.886436,5.959561,-0.557378],[-9.052604,8.091349,0.625352,9.740175,5.765424,8.371062,9.985868,-9.196323,4.423789],[3.048626,8.122855,4.945560,5.610015,-9.795943,-7.198290,-4.443595,4.739881,7.684640],[-5.257332,-6.002913,-8.680091,0.889809,-6.462511,-8.347495,-8.295815,9.731311,-3.005177],[-0.120691,-9.644791,-9.723096,7.565956,8.500668,-1.631340,-2.996767,-4.652386,-7.565323]],[[-1.846669,-4.682909,-6.452839,-6.108265,-4.499410,-9.241725,5.592346,-6.873077,2.882979],[-4.762199,-5.252102,-7.177008,-2.365444,3.569831,5.893856,2.009622,2.633516,-0.815791],[4.358777,9.184952,-7.446037,-9.412532,-7.711346,-9.159048,-8.243619,5.489621,-1.913416],[3.126225,-0.607654,0.339507,5.921174,9.280019,2.853645,-6.189146,-6.206925,-9.768352],[0.233251,-0.792863,-0.643522,-0.120660,6.813787,6.720814,5.575627,-1.183595,0.047648],[4.475612,5.876952,-2.324050,9.768679,6.854632,-2.820994,-1.257061,-3.299545,5.008027],[0.718726,7.509694,0.489152,3.089592,-4.122406,-5.246966,7.557852,-6.301633,-6.859451],[1.401432,4.335386,-4.191174,2.247204,3.620289,4.908728,-7.143355,-1.565044,-8.584313],[-0.083824,-8.583040,7.075721,-7.980125,8.818174,1.146908,8.103025,9.674570,6.786597]],[[-3.954687,-1.181436,6.170164,6.932624,0.310798,4.548825,6.254262,0.474747,-1.822962],[0.919611,9.445631,4.547035,-9.615952,-0.303924,5.580363,5.182019,-2.355520,-4.366014],[-3.286962,9.408121,5.659055,9.644702,-3.635755,6.623439,3.853004,5.010423,8.243505],[-1.871010,-0.446686,7.568592,-1.227318,5.695035,-2.922215,-0.935818,6.671130,-6.839843],[3.315754,-8.919402,-8.681448,-4.628929,-6.442281,2.372949,7.489399,7.937713,-3.014378],[1.326442,-4.384517,7.626434,-5.810675,7.036852,6.706530,0.100434,5.676173,-3.850557],[0.966234,0.473027,-1.782280,3.371620,-6.517977,2.385223,0.389915,-2.626936,-8.681891],[-6.441120,4.347890,-2.035149,-1.103797,4.761280,7.751595,8.846306,1.333452,-5.716467],[9.734397,3.971184,6.181158,-0.753071,7.342747,-0.364009,-3.617017,2.482682,-2.731537]],[[-4.214151,6.022761,-4.321377,2.837905,0.013026,-2.843397,3.331850,9.596024,-5.363815],[9.979518,3.871546,5.188751,-5.423432,-7.255499,8.227187,-6.568528,9.743615,-7.944652],[-6.875995,-0.562585,-6.163545,-9.842471,-2.179886,-1.758373,-5.382361,-8.778805,-3.539672],[8.776090,4.248874,-5.757135,-9.833907,7.509662,-6.510352,7.484906,2.303122,-9.782545],[-9.902210,7.939920,-2.862190,1.058093,-8.466324,-6.500946,8.561433,8.446888,-0.667355],[-5.457003,-7.939030,-3.061888,6.681525,-9.576154,7.381974,-5.267121,3.942229,0.192092],[5.088337,-4.912587,-4.413159,-0.277122,-4.404805,-3.973120,-0.103367,9.053569,-3.639087],[5.884790,6.724912,2.604081,5.121774,-2.097793,1.297785,-9.221676,6.752024,-0.968038],[-1.641358,3.517901,9.155470,6.029049,-5.753484,-5.554514,-8.264151,-4.589591,8.378973]],[[5.449339,4.547251,8.486738,1.336814,6.424048,-4.195043,-3.822165,2.396678,9.869920],[2.971071,-8.877223,3.363593,4.443421,-8.117459,6.246923,0.872108,-9.777368,9.577447],[9.184701,-4.094031,3.819309,1.107881,7.677981,9.609135,1.629954,9.524712,3.926649],[-1.030547,-0.414493,-2.587658,6.593316,-4.698645,9.545371,3.354039,-2.764650,9.963541],[5.520278,1.259063,6.403438,4.279885,-3.268583,-3.300062,-0.298063,-0.203033,-5.851690],[-5.520775,-1.197694,6.978198,-4.241333,-4.172547,-4.026917,-0.832307,-2.397958,-0.682625],[6.865688,-8.117070,-0.746635,1.876083,-6.062519,-9.639130,-6.806616,-9.046209,3.531742],[-1.585563,-5.475678,6.220577,5.621276,-0.553235,6.578025,6.947169,9.668182,-5.018849],[2.297465,-6.566526,2.073915,-8.783110,5.135513,-4.373884,-6.967418,8.873282,-3.614351]],[[-6.140240,-3.980274,7.308681,8.523508,-7.177517,5.499844,4.925558,-3.523365,-2.415151],[-5.332943,-2.193635,2.894264,-2.588554,5.666447,-1.069538,-7.182022,5.720371,-7.989281],[5.158946,-9.688729,-3.365952,-2.504176,-8.357316,8.128644,4.799325,7.567388,4.787702],[-8.606397,-4.404971,2.857700,9.954490,3.089407,2.737361,-9.465994,-1.134941,-4.389379],[-0.308741,-1.180004,-6.830217,5.387502,4.165265,1.653662,6.323679,-1.755175,8.163104],[-1.790768,-9.185213,-5.286480,1.783844,-5.357478,1.083509,-2.670942,0.142441,-0.078476],[-3.913133,4.929653,-4.711906,7.389569,5.305207,9.900044,4.828417,8.478750,-2.357222],[4.838619,-1.453131,1.320778,5.587588,5.621005,-5.484080,-2.941815,1.771761,-0.576213],[-4.535224,2.191476,3.500426,-8.008936,8.560159,-8.884857,8.567712,4.542721,5.398386]],[[8.681737,6.835008,-6.351381,-0.819491,-5.153784,-9.371711,9.097263,-6.586262,-5.980245],[-8.701365,5.573185,5.044808,6.069092,5.400137,-1.505858,8.256022,2.482888,4.736567],[-1.129206,-8.353069,7.524436,6.191988,1.007162,-3.297387,3.982853,9.966210,-4.365207],[0.279907,9.175983,-6.109053,0.647267,-7.371854,-4.208193,-8.252029,3.669709,-7.691378],[-4.597062,-7.553436,7.217572,2.670446,5.219070,6.392829,7.343698,5.535001,-3.932853],[3.756796,6.188686,-8.570545,0.884610,-4.291538,-0.481487,7.925687,-9.882052,-3.571369],[-5.786052,-7.903556,-7.107610,5.767996,-6.635454,7.904820,9.773359,9.559121,-9.701646],[-9.516601,-1.699841,-5.796379,8.564211,8.273357,5.401758,-8.840931,-0.080185,1.886737],[-4.041018,-4.200693,6.504000,7.249908,-2.944579,2.598373,0.545784,-9.569432,-0.802391]],[[-2.368467,0.211535,6.918931,8.617582,-1.679274,0.558998,0.521880,4.433137,-7.692151],[5.563079,6.031708,-1.422213,-6.020959,-8.335876,-4.224644,9.852505,1.181751,-8.781101],[-4.849354,-3.225516,6.780021,-3.371969,3.842900,3.560115,1.754120,-3.963572,-6.515148],[5.383313,-8.778412,-4.779692,7.668274,8.576851,-7.419633,3.491688,6.406424,8.132271],[7.326390,6.664625,0.259564,5.844742,4.195840,5.473892,-4.509935,-0.205117,8.868793],[9.589110,2.446285,1.216860,1.716892,-6.139389,-8.349338,2.063254,8.842983,-6.634736],[2.277747,1.270005,8.399342,3.002290,-9.257034,-8.775128,-8.532818,-9.818783,-9.932077],[9.412086,-4.569531,6.289157,6.835739,8.612980,9.777882,-5.555830,0.347749,-5.830963],[-8.471518,-2.871927,7.035372,-0.644926,5.103213,0.682152,-5.996331,3.200179,-9.684718]]], dtype = "float64")#candidate|4310|(13, 9, 9)|const|float64
bop_4311 = relay.subtract(uop_4276.astype('uint16'), relay.reshape(const_4310.astype('uint16'), relay.shape_of(uop_4276))) # shape=(13, 9, 9)
bop_4314 = relay.subtract(uop_4278.astype('uint16'), relay.reshape(const_4310.astype('uint16'), relay.shape_of(uop_4278))) # shape=(13, 9, 9)
func_3467_call = mod.get_global_var('func_3467')
func_3469_call = mutated_mod.get_global_var('func_3469')
call_4336 = func_3467_call()
call_4337 = func_3467_call()
output = relay.Tuple([bop_4280,call_4291,bop_4311,call_4336,])
output2 = relay.Tuple([bop_4283,call_4292,bop_4314,call_4337,])
func_4344 = relay.Function([], output)
mod['func_4344'] = func_4344
mod = relay.transform.InferType()(mod)
output = func_4344()
func_4345 = relay.Function([], output)
mutated_mod['func_4345'] = func_4345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2585_call = mod.get_global_var('func_2585')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_4398 = func_2585_call()
call_4399 = func_2585_call()
const_4400 = relay.const([[[-1.352744,-1.357637,-5.062808,-8.940524,3.554988,-4.550578,-6.684142,-7.783305,1.195868,-1.222799,-2.673425,5.710760,1.651520,-0.615991,-4.795948,8.488567],[4.686859,9.958364,-3.603186,-6.058237,2.995258,-4.252820,8.573768,-3.106396,-3.644078,-2.009513,-6.595987,-6.150685,-8.351474,9.131314,-3.378600,-5.173910],[6.030619,-3.886479,0.565128,1.059947,3.766098,-7.987167,-4.922191,1.931890,-7.156518,8.611740,2.281572,-8.876723,9.515184,-0.647037,-4.003898,3.716757],[-3.172646,7.189224,-8.699655,-4.580912,-3.196064,9.780938,7.422591,6.588735,-1.421653,0.572168,9.736971,-9.987601,6.417375,-2.753806,8.903380,9.078575],[6.334747,9.966189,-8.731299,0.243257,6.674622,9.506536,-7.601319,-9.361986,-6.612174,-8.884136,9.347588,-7.538135,-1.883594,-4.585604,-2.698532,3.503994],[-8.610203,4.351131,8.609910,-0.918545,9.553517,3.947887,-3.240096,4.887277,8.499947,-0.012035,-3.719614,-1.963760,-8.750951,-4.919369,-7.817020,-3.775346],[-6.130790,3.755411,6.548790,-2.830136,-3.874171,-6.860033,8.906270,6.903278,4.227960,1.423376,-9.440895,-4.059687,-1.512490,0.629577,8.359599,-3.269055],[2.490073,0.336787,8.703355,-9.895836,8.841735,-0.920515,-2.093475,-7.962750,-6.339769,5.862581,5.368756,6.442084,-4.768249,-3.447189,-6.721026,6.818986],[3.453342,-0.376257,3.678518,-0.627654,8.985511,1.416608,-1.304183,-8.292767,-6.927584,0.980935,6.124936,6.333119,9.091903,8.739844,-0.005522,6.499523],[1.478488,-7.016690,-8.639848,-9.004553,-6.897529,9.135627,8.937615,4.333027,6.401975,4.661740,9.899771,-2.120530,-5.043099,-4.862072,5.435617,-4.449489],[-6.689750,4.661693,6.149091,-1.526304,7.304673,-9.332289,3.641866,-7.533003,-7.581295,-2.521816,9.101068,-2.666653,-8.796166,-3.439152,3.210886,2.316764],[-3.834859,-0.647748,-9.565953,9.460684,2.081519,-7.742546,7.679767,7.988176,-1.246372,7.151832,3.661509,7.287100,-0.353992,4.381345,2.305681,0.759831],[4.643544,2.297599,9.854198,1.051121,7.931685,5.892957,8.584461,-4.326502,-5.849524,3.737308,-0.883512,-3.242513,-2.260242,-2.052338,-4.833539,2.778795]],[[0.988100,1.260578,7.625374,7.149014,-2.988734,9.095190,-5.809698,5.130508,8.139682,-5.315268,2.917038,1.924905,-9.908633,6.769611,4.647644,-4.740993],[-6.393342,3.643028,-4.713513,-5.230464,-8.019837,-5.888007,6.318661,7.611569,-9.754520,-3.531822,-3.011293,-4.834217,2.935440,0.779754,-1.632201,-0.806805],[3.601909,7.890673,-9.023487,-0.938015,6.627807,0.510491,-0.959017,-6.583776,-5.370235,4.598273,-1.260427,2.424818,9.904375,-2.466569,-1.226797,-5.184487],[7.022545,-1.738616,5.343038,-8.720512,6.373430,-8.744219,-3.404042,4.307661,8.571899,-6.888338,-2.204284,-8.555394,-4.963424,7.245345,0.692102,9.282686],[5.883512,-2.543531,-2.896854,-5.853075,7.744194,-1.663241,4.694541,-3.054392,-6.628212,-2.033684,8.729071,-5.534692,1.859855,-3.435937,-2.297290,0.669306],[1.936000,-8.953293,-7.021021,-8.615468,5.103979,-5.007431,-4.465945,-2.452507,5.172048,6.254657,2.925715,-2.075958,3.793683,7.992839,-0.939813,-3.110707],[-5.752363,-2.130189,5.746682,-1.646198,8.081261,7.163953,-0.883421,-6.655539,-7.967947,-6.132109,5.671741,-5.344218,4.929779,-2.038239,9.111975,-6.969822],[-2.839782,-3.597087,5.147288,-4.711118,2.767050,-3.096093,0.168934,1.515256,-9.696053,4.358715,5.771663,-2.297908,2.860560,-7.748415,1.076901,6.335837],[0.640231,7.062676,-9.296105,4.460154,8.036149,4.764874,-4.407957,-8.747307,-7.834950,7.383973,-4.985602,9.503825,-1.535301,-4.603391,-7.104195,2.445074],[0.666614,-5.821557,3.326191,-0.304758,7.301164,9.967275,-5.583042,-6.707343,-7.538829,-3.061792,0.486189,-9.667253,-9.513489,-8.006031,-8.728711,-6.584932],[-4.134793,-8.708623,2.729302,2.064997,-4.268131,-5.086012,-5.931383,-2.684160,-6.559014,9.775108,-1.089168,-6.767893,-3.875747,8.508344,-9.657019,3.669401],[-1.582862,-1.687827,-4.050988,-7.436107,6.902957,7.161487,1.338640,-0.256024,4.379006,7.844949,6.016532,-4.294375,-1.434825,0.394571,8.091222,-5.067366],[-2.917653,2.191702,-7.507897,3.380655,2.260198,9.131228,-6.165586,-3.294881,-7.571193,9.626403,4.849699,9.139048,4.583450,0.673814,4.074803,-4.188342]],[[-4.005397,-5.839887,3.958203,-4.831380,9.227364,9.729386,6.800701,0.483156,-6.033799,-4.195280,-6.866832,1.322292,-8.904353,-9.595953,-7.412402,4.502857],[5.390713,1.021625,2.968378,6.885722,-8.918222,7.801877,-5.615161,8.574670,5.768610,3.770571,9.174221,-1.797402,6.449359,-2.439839,2.946206,-8.487017],[5.835819,-4.510453,-8.076803,2.401181,-8.483810,-5.514215,1.058868,0.599978,6.121521,-8.263770,-0.551582,-9.086979,-1.707757,7.719548,-5.815222,-1.211922],[-7.237766,1.946506,-9.068227,1.155590,7.965824,0.714919,3.142303,7.292320,6.868086,7.361118,-3.271308,8.857360,-6.880235,0.407505,2.296018,6.720482],[-6.632887,-9.915265,2.784906,2.638657,1.339435,-8.215572,-8.160712,-3.345214,9.598135,4.434537,1.221011,-0.050596,9.027602,7.250436,6.473285,-3.361734],[2.449884,-7.020002,-0.919070,5.293110,5.832804,-9.993434,5.710644,7.412851,0.878215,3.603290,-7.086691,-5.256050,3.235524,-6.866301,-2.391766,-5.153948],[0.227292,5.603732,-5.556269,4.482160,-9.396754,4.424776,-8.098655,-5.347580,4.340640,6.803488,-5.546648,-9.420114,0.706954,-9.362638,2.551766,8.542162],[-1.959897,8.814643,4.615227,-2.886878,-5.105540,1.189835,-8.221096,-5.208709,9.246707,5.825844,-4.424993,2.383369,-7.167200,9.759883,-3.930581,-0.562532],[5.743550,-9.234684,0.173014,-8.494872,-5.490167,-0.814214,-0.562621,5.313492,-5.044190,9.668166,-9.538674,-0.277915,-3.263578,-2.800027,-5.762928,2.421708],[-1.994066,-8.693632,-6.822660,-8.289295,0.989494,-1.761078,4.941361,1.052541,-7.575030,-1.102059,-8.530177,-9.402811,9.286398,3.180769,9.748540,8.036704],[-8.160293,0.295241,5.318672,-0.051334,4.045208,-4.472232,-4.677432,-1.044995,-6.232613,7.092647,-5.663304,6.022587,-5.014271,7.069451,-2.619223,-6.123935],[7.794235,0.742079,1.597321,6.948891,-2.946480,1.815376,1.696653,-0.052140,4.199903,-2.661512,9.990245,8.928534,9.873974,9.380898,8.921897,-0.628315],[-9.548324,5.037144,8.737647,-6.128756,-0.431631,-0.602692,6.779143,5.423257,-5.239141,-0.169479,-3.865151,-8.466936,7.918139,3.859124,7.608925,2.048186]],[[1.413405,4.384892,6.275641,6.325661,8.969167,6.984178,-1.770686,4.451448,0.042939,-0.182132,1.654093,1.269912,-8.579386,-2.887383,-7.746265,4.840274],[-6.131641,8.769547,-0.897534,-2.445948,-9.428230,0.952296,-7.145901,-0.538234,-9.516648,3.671119,0.805570,-2.459959,8.936195,0.688306,-5.355195,-8.521316],[2.990561,-0.132924,-6.532291,3.995793,9.933596,0.450827,-9.876883,4.368263,-8.354093,-5.935433,8.395989,7.571722,6.192867,-9.562196,-8.801766,0.655574],[-6.171348,0.258247,-7.234859,-9.840114,5.322706,1.370023,5.622853,9.945720,-2.811649,0.686316,-9.033550,-8.039429,4.988875,-4.503921,2.491079,1.608494],[0.242279,-2.734182,1.032601,1.492863,-9.569147,-4.806381,7.804744,3.370288,-8.460196,4.413540,-0.379310,-4.226448,6.843916,1.324978,-0.154009,-9.413006],[9.804653,4.879986,8.070819,-2.955112,-7.352632,5.601058,-7.797216,9.678402,2.825045,3.184167,-6.900710,8.196908,-6.716106,1.707926,8.178267,0.472908],[-4.493275,-0.190691,5.240167,-7.059116,8.064829,-2.361164,-1.453317,-7.811564,-9.870548,6.396119,-4.473662,-8.514462,4.042423,9.795059,-3.617291,-8.835844],[-2.971250,-0.823291,2.891411,3.592599,0.952149,-4.829157,5.061422,1.197013,-3.703437,-0.690738,-9.476383,-2.870044,-1.000255,-8.189112,-0.834645,-8.211222],[5.010284,-2.756526,8.395901,-1.570188,4.631626,-3.962122,5.759913,9.544866,3.427585,-9.361385,-8.219381,6.477534,4.227442,5.425889,-0.281577,-4.859035],[5.441604,-9.515610,-8.115816,9.702951,4.336916,-5.366288,8.248503,4.612203,1.297854,-5.638859,-4.652470,5.696599,-6.029911,8.830408,-5.111880,-8.585007],[-2.333842,-7.056970,7.416940,4.626493,7.774232,-1.339944,2.262388,3.341730,1.419047,-0.269756,-1.262571,3.907591,0.944872,6.433688,-8.871427,9.673991],[9.003632,6.255433,4.859764,9.793396,-7.921858,6.123344,4.009589,7.309465,7.816066,-8.576144,3.402173,-0.275811,-5.086380,-5.374636,7.374620,-8.558025],[9.985377,-8.952529,-7.457205,6.851639,6.815518,-4.587880,-4.778218,4.051536,5.864909,4.354410,-7.163804,8.248462,9.177005,5.182095,5.026500,0.654834]],[[-1.624427,2.509552,-9.746738,1.082863,-9.821866,-4.198354,5.853011,-7.124547,-8.561835,4.240306,7.451357,0.434778,-4.232308,1.609712,-7.356943,-9.083502],[-4.026265,1.832259,9.828638,-2.267019,-3.982762,-8.318036,8.741240,8.872536,-5.960456,-9.472323,6.725869,-1.325437,-0.775698,-3.996383,8.567186,7.236116],[-9.717427,-7.806287,-0.916368,4.174778,6.475648,-9.532803,-0.739697,-9.649548,6.665976,-6.883552,4.291168,-4.135124,5.411488,-1.009529,-0.264852,-4.759496],[1.672653,-4.889853,-1.480857,-1.686233,1.336539,-0.868299,-9.296961,-2.936953,5.214324,1.462353,5.047222,-1.822218,-9.537955,7.065249,4.366330,4.370770],[-6.106728,-8.874256,-7.924224,0.347715,9.263555,3.310607,-5.674886,0.443269,5.965864,-4.674845,9.614934,7.014593,-4.528168,-2.273414,-7.468101,-2.118637],[9.417819,1.902818,5.742627,4.593298,-2.609007,3.590546,-5.079922,-3.853354,7.305449,-9.117749,-9.459144,-7.159480,7.609430,-3.789184,-5.015625,-6.466560],[4.694130,1.300306,-3.306086,0.712348,-8.875430,-8.937539,-4.049217,-9.556913,0.427848,-1.760246,-6.091215,-5.677380,7.629802,2.073964,0.744223,6.361054],[-2.644542,-8.406047,6.608682,7.397669,-7.407843,-5.185634,2.855465,-1.343850,1.222309,-7.018966,3.701834,0.112690,3.584057,-2.785715,1.933102,7.753497],[4.871707,-2.281080,1.849753,-1.136625,4.756872,-5.419491,3.169852,-6.859615,2.209851,-8.704228,1.183300,8.726509,-9.003782,-8.273509,7.590538,1.578965],[7.970825,7.879367,-7.016163,-2.064243,-9.775114,-1.027016,5.969238,7.883742,0.569014,7.055373,7.705093,6.768440,-9.043945,7.829996,1.466691,-5.503526],[0.704369,8.454178,2.276922,3.523736,9.670307,1.609128,-1.857385,3.062571,-8.004795,3.059792,-2.077065,-0.390423,-4.490169,-4.640115,-9.924361,-3.296594],[6.291675,7.844014,1.085949,-2.924286,-1.351735,1.496082,-1.880015,-0.929594,5.131470,0.698697,-2.511326,-7.251734,4.813575,-9.794718,-5.719820,3.642948],[8.298248,-0.721402,-0.969383,6.224883,4.893849,5.457471,5.951600,-9.645183,0.615040,-6.042837,1.932374,-0.122931,-1.295608,2.932426,0.853044,-9.054216]]], dtype = "float32")#candidate|4400|(5, 13, 16)|const|float32
bop_4401 = relay.greater(call_4398.astype('bool'), relay.reshape(const_4400.astype('bool'), relay.shape_of(call_4398))) # shape=(5, 13, 16)
bop_4404 = relay.greater(call_4399.astype('bool'), relay.reshape(const_4400.astype('bool'), relay.shape_of(call_4399))) # shape=(5, 13, 16)
func_4149_call = mod.get_global_var('func_4149')
func_4150_call = mutated_mod.get_global_var('func_4150')
call_4406 = relay.TupleGetItem(func_4149_call(), 3)
call_4407 = relay.TupleGetItem(func_4150_call(), 3)
func_1515_call = mod.get_global_var('func_1515')
func_1517_call = mutated_mod.get_global_var('func_1517')
call_4408 = func_1515_call(relay.reshape(const_4400.astype('float32'), [5, 13, 16]))
call_4409 = func_1515_call(relay.reshape(const_4400.astype('float32'), [5, 13, 16]))
func_3467_call = mod.get_global_var('func_3467')
func_3469_call = mutated_mod.get_global_var('func_3469')
call_4410 = func_3467_call()
call_4411 = func_3467_call()
bop_4412 = relay.maximum(call_4398.astype('int16'), relay.reshape(call_4408.astype('int16'), relay.shape_of(call_4398))) # shape=(5, 13, 16)
bop_4415 = relay.maximum(call_4399.astype('int16'), relay.reshape(call_4409.astype('int16'), relay.shape_of(call_4399))) # shape=(5, 13, 16)
output = relay.Tuple([bop_4401,call_4406,call_4410,bop_4412,])
output2 = relay.Tuple([bop_4404,call_4407,call_4411,bop_4415,])
func_4422 = relay.Function([], output)
mod['func_4422'] = func_4422
mod = relay.transform.InferType()(mod)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4422_call = mutated_mod.get_global_var('func_4422')
call_4423 = func_4422_call()
output = call_4423
func_4424 = relay.Function([], output)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4439 = relay.var("var_4439", dtype = "int16", shape = ())#candidate|4439|()|var|int16
const_4440 = relay.const([[[8],[5],[-4],[5],[5],[7],[3],[3],[5],[-7]],[[-4],[-10],[-10],[-2],[-7],[-8],[8],[6],[6],[-3]]], dtype = "int16")#candidate|4440|(2, 10, 1)|const|int16
bop_4441 = relay.less_equal(var_4439.astype('bool'), const_4440.astype('bool')) # shape=(2, 10, 1)
bop_4444 = relay.floor_mod(bop_4441.astype('float64'), relay.reshape(const_4440.astype('float64'), relay.shape_of(bop_4441))) # shape=(2, 10, 1)
output = relay.Tuple([bop_4444,])
output2 = relay.Tuple([bop_4444,])
func_4449 = relay.Function([var_4439,], output)
mod['func_4449'] = func_4449
mod = relay.transform.InferType()(mod)
var_4450 = relay.var("var_4450", dtype = "int16", shape = ())#candidate|4450|()|var|int16
output = func_4449(var_4450)
func_4451 = relay.Function([var_4450], output)
mutated_mod['func_4451'] = func_4451
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4476 = relay.var("var_4476", dtype = "bool", shape = (4, 15, 15))#candidate|4476|(4, 15, 15)|var|bool
var_4477 = relay.var("var_4477", dtype = "bool", shape = (4, 15, 15))#candidate|4477|(4, 15, 15)|var|bool
bop_4478 = relay.logical_and(var_4476.astype('bool'), relay.reshape(var_4477.astype('bool'), relay.shape_of(var_4476))) # shape=(4, 15, 15)
const_4503 = relay.const([[[True,True,False,False,True,False,True,False,True,True,True,False,False,False,False],[True,False,True,False,True,False,True,True,False,False,True,False,True,True,True],[True,False,False,False,True,False,False,False,False,False,False,False,False,False,False],[False,True,False,True,True,False,False,False,True,False,False,False,False,True,False],[True,True,False,False,True,True,False,True,False,False,True,False,False,True,False],[False,True,False,True,True,True,True,True,False,False,True,False,False,False,False],[False,True,True,True,True,False,False,True,True,False,False,True,False,False,False],[True,True,False,True,False,True,False,True,False,False,True,True,True,True,True],[True,False,True,False,True,False,False,True,False,True,False,False,False,False,False],[True,True,True,True,False,True,False,True,False,False,True,True,True,False,True],[True,True,True,False,True,False,False,True,True,False,True,True,False,True,False],[True,False,True,False,True,False,False,True,True,False,True,False,False,True,True],[True,False,False,False,False,False,False,False,True,True,True,False,True,True,False],[True,False,False,False,True,False,False,True,True,True,True,True,False,True,False],[True,False,False,True,False,False,True,False,False,True,False,True,True,True,True]],[[True,False,True,False,False,False,False,True,True,True,False,True,False,False,False],[False,True,True,False,True,True,False,False,False,True,True,False,False,True,True],[True,False,True,True,False,True,True,False,False,True,False,True,False,False,True],[False,True,True,True,True,False,True,False,False,True,True,False,True,True,True],[False,True,True,True,False,False,False,True,False,True,False,False,False,False,True],[True,True,False,False,False,True,False,True,True,True,False,False,True,True,False],[False,True,True,True,False,True,True,True,False,False,False,True,False,False,True],[True,True,False,True,False,True,True,False,False,False,True,True,True,False,False],[True,False,False,False,False,False,True,True,True,True,True,True,False,False,True],[False,True,True,False,True,True,True,False,True,False,False,True,True,True,True],[True,False,False,True,False,False,False,True,True,True,True,True,True,True,True],[False,True,False,True,False,True,False,True,True,False,True,False,True,False,True],[False,False,False,False,True,False,False,True,False,False,True,True,True,False,False],[False,False,False,False,False,False,False,False,True,True,False,True,True,True,True],[True,False,True,True,False,True,True,True,False,True,True,True,False,False,True]],[[True,False,False,True,False,False,True,False,False,False,False,True,True,True,False],[True,False,False,False,True,True,True,True,False,False,False,True,True,True,True],[True,False,True,True,True,True,True,False,False,True,False,False,False,False,True],[True,True,False,True,True,True,False,True,False,False,True,True,True,False,False],[False,True,False,True,False,True,True,True,True,True,True,True,True,True,True],[False,False,False,False,False,False,False,False,True,False,True,False,True,False,False],[True,True,False,True,False,False,False,True,False,True,False,True,True,True,False],[False,False,True,True,False,True,True,False,True,False,True,False,False,False,True],[False,False,False,False,True,False,True,False,False,True,True,False,False,False,False],[False,True,False,True,False,False,False,True,True,False,True,False,False,True,False],[True,True,False,True,False,False,False,True,False,False,False,True,False,False,False],[False,False,True,False,False,True,True,False,False,False,False,True,False,True,False],[False,False,True,True,False,True,True,False,False,True,False,False,False,False,False],[False,True,True,True,True,True,False,False,True,False,False,False,True,False,True],[True,True,True,True,False,True,False,True,True,True,False,True,True,False,False]],[[False,True,True,True,False,False,False,True,True,True,True,True,True,True,False],[False,False,True,False,True,True,True,False,False,True,True,False,False,False,False],[False,False,True,True,True,False,False,True,True,True,True,False,False,False,True],[False,True,False,True,True,True,False,False,True,False,True,False,False,False,True],[True,False,True,False,False,True,False,False,False,True,True,True,False,True,False],[True,False,True,True,True,False,True,False,False,False,False,False,True,True,False],[False,False,False,True,False,False,False,True,False,True,False,True,False,False,True],[False,False,True,True,True,False,True,False,False,False,True,True,False,False,False],[False,False,False,False,True,False,True,False,True,True,True,False,True,True,False],[False,False,False,True,True,False,True,True,False,False,True,True,True,True,True],[True,True,True,True,True,True,True,False,True,True,False,False,True,True,True],[True,True,True,False,False,True,False,True,False,False,True,True,False,False,False],[True,True,True,True,False,False,False,False,True,True,True,True,True,False,False],[False,True,True,False,True,True,True,True,False,True,False,False,False,False,False],[False,True,False,True,False,False,True,False,False,False,True,True,True,False,True]]], dtype = "bool")#candidate|4503|(4, 15, 15)|const|bool
bop_4504 = relay.bitwise_xor(var_4477.astype('uint64'), relay.reshape(const_4503.astype('uint64'), relay.shape_of(var_4477))) # shape=(4, 15, 15)
uop_4511 = relay.atan(var_4476.astype('float32')) # shape=(4, 15, 15)
func_828_call = mod.get_global_var('func_828')
func_833_call = mutated_mod.get_global_var('func_833')
const_4514 = relay.const([6.873430,0.946591,-3.547923,-5.723924,1.018113,-4.383290,-9.388928,-6.267766,9.272891,7.661571,8.981318,-1.234495,-2.562971,9.192934,9.124236,1.541642,-5.733645,5.360703,6.751982,6.245558,8.578738,-9.056656,6.641643,-1.739723,-8.719232,4.441761,3.057698,-6.578690,4.665446,9.167999,-6.836219,6.919337,6.421274,0.457002,-6.363951,2.746653,-2.529336,1.964784,-2.963674,-9.061549,5.933977,8.679769,9.649039,5.834682,2.603903,2.511478,2.833124,-5.410342,4.699258,2.608483,8.256730,8.374833,-5.015494,7.947695,-9.135186,9.226368,6.783853,-3.110307,-9.485216,4.277098,-8.249370,2.119644,1.335198,-8.265597,6.735217,9.048396,-8.565247,-8.415669,8.905931,-2.833005,6.426064,-3.662207,-3.399541,1.780574,-8.017697,-8.863155,-5.025938,-3.114075,4.001262,-5.462017,6.355439,8.108252,2.964360,-4.257940,3.431880,-8.864345,6.187716,8.287897,-3.579218,-0.070881,1.106425,4.344694,2.349885,-0.586265,6.484887,5.516274,-7.605006,-0.580980,3.864880,-4.767557,7.618144,0.807163,6.578532,-4.762260,-6.865048,-9.536096,5.853356,3.485272,-1.277139,-0.294075,-4.813081,-1.185462,-7.258450,-2.636740,6.494527,0.207482,-6.490316,4.518465,5.431470,9.964064,9.668803,-7.483030,9.639397,5.761220,7.976417,1.152233,3.630296,-6.375086,4.237462,5.714430,3.821757,4.196254,-0.103967,-3.310351,6.752757,0.154925,1.019623,3.756370,3.572506,-7.743641,-7.699239,-1.345820,8.303706,-3.330104,-7.090130,-1.837306,-7.169136,5.830433,-1.737543,-7.255305,3.556129,-5.735849,7.631812,5.028670,-8.115161,3.693194,-0.580765,0.947959,-3.574552,-2.419943,1.092871,5.077859,-2.840726,-1.123810,-4.378661,-5.776732,-4.961030,-3.673808], dtype = "float64")#candidate|4514|(168,)|const|float64
call_4513 = relay.TupleGetItem(func_828_call(relay.reshape(const_4514.astype('float64'), [6, 14, 2]), relay.reshape(const_4514.astype('float64'), [6, 14, 2]), relay.reshape(const_4514.astype('float64'), [6, 14, 2]), ), 0)
call_4515 = relay.TupleGetItem(func_833_call(relay.reshape(const_4514.astype('float64'), [6, 14, 2]), relay.reshape(const_4514.astype('float64'), [6, 14, 2]), relay.reshape(const_4514.astype('float64'), [6, 14, 2]), ), 0)
output = relay.Tuple([bop_4478,bop_4504,uop_4511,call_4513,const_4514,])
output2 = relay.Tuple([bop_4478,bop_4504,uop_4511,call_4515,const_4514,])
func_4516 = relay.Function([var_4476,var_4477,], output)
mod['func_4516'] = func_4516
mod = relay.transform.InferType()(mod)
var_4517 = relay.var("var_4517", dtype = "bool", shape = (4, 15, 15))#candidate|4517|(4, 15, 15)|var|bool
var_4518 = relay.var("var_4518", dtype = "bool", shape = (4, 15, 15))#candidate|4518|(4, 15, 15)|var|bool
output = func_4516(var_4517,var_4518,)
func_4519 = relay.Function([var_4517,var_4518,], output)
mutated_mod['func_4519'] = func_4519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_4551 = relay.TupleGetItem(func_2225_call(), 0)
call_4552 = relay.TupleGetItem(func_2227_call(), 0)
var_4558 = relay.var("var_4558", dtype = "float32", shape = (13, 9, 9))#candidate|4558|(13, 9, 9)|var|float32
bop_4559 = relay.power(call_4551.astype('float32'), relay.reshape(var_4558.astype('float32'), relay.shape_of(call_4551))) # shape=(13, 9, 9)
bop_4562 = relay.power(call_4552.astype('float32'), relay.reshape(var_4558.astype('float32'), relay.shape_of(call_4552))) # shape=(13, 9, 9)
output = relay.Tuple([bop_4559,])
output2 = relay.Tuple([bop_4562,])
func_4572 = relay.Function([var_4558,], output)
mod['func_4572'] = func_4572
mod = relay.transform.InferType()(mod)
mutated_mod['func_4572'] = func_4572
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4573 = relay.var("var_4573", dtype = "float32", shape = (13, 9, 9))#candidate|4573|(13, 9, 9)|var|float32
func_4572_call = mutated_mod.get_global_var('func_4572')
call_4574 = func_4572_call(var_4573)
output = call_4574
func_4575 = relay.Function([var_4573], output)
mutated_mod['func_4575'] = func_4575
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4580 = relay.const([[[-7.853701,-5.979784,9.486681,-8.951589,-3.341501,-0.704890,0.874011,-8.805083,-1.547207,-7.114563,-1.153434,2.775565,-0.653810],[-5.432215,2.021222,6.977851,-0.218807,-5.722929,1.204348,-9.635307,-3.984782,-9.114771,-7.417017,6.008873,-0.291093,-0.223664],[9.249156,5.399358,3.620008,4.927946,5.425455,-6.270174,7.928788,-7.643175,9.547602,-0.763629,4.231421,9.534276,3.515622],[-8.203903,-6.133778,-2.525546,-4.335870,-9.397848,7.029725,-0.628027,-6.259989,-9.179746,-5.706104,-4.265115,3.542038,5.108866],[-6.177291,-5.223682,-4.552607,6.931353,-0.415398,-9.290969,0.173557,-0.131516,-7.457812,-8.501861,-0.363961,-5.978214,2.809511],[-6.606588,7.183250,7.257663,5.465576,3.540213,6.228946,-9.653907,2.283763,-5.573775,5.031612,9.026958,-3.043089,7.948143],[6.635413,6.018651,-6.894054,2.902812,4.789621,7.713723,6.907264,-5.298071,0.930753,-3.907035,5.907573,-8.816081,8.080508],[7.567197,9.102360,-8.532547,-5.627901,4.981385,-6.973780,6.697039,3.192451,-7.268494,0.882703,0.486686,4.995724,0.412502],[0.994237,-7.457891,-4.400789,-0.119342,-6.868116,-6.637122,-5.177545,8.256445,-8.228640,-5.730731,-3.671668,-6.928490,-5.326191],[-8.415161,6.082318,-9.467114,1.741500,-2.985943,-1.537061,6.927908,5.728811,-4.995596,2.605417,-8.116681,-9.120949,-8.773314],[8.176675,-0.451314,-0.852525,-9.898622,4.466831,-0.586719,5.160709,-5.340771,6.273559,-2.596963,3.588070,-4.350152,-7.956519],[-4.598811,-4.605918,5.635715,-7.477569,0.894615,3.690188,-2.203468,-6.844148,1.835904,9.497420,-7.827276,-9.183684,-0.116997],[9.609452,-0.728023,9.607032,-8.784940,9.806741,-1.902742,2.296003,0.266524,2.357419,1.773213,-7.040708,8.189137,-9.156783],[6.158200,-2.549077,-3.217373,-1.001404,0.390322,-8.637373,4.535855,-4.784314,6.763960,2.338809,-2.391703,-9.810000,5.719451]],[[-0.531423,5.071043,-8.391289,7.979565,-7.269006,-4.376562,2.421139,-9.663446,5.417483,0.697832,3.898328,3.033864,5.228951],[8.694481,-4.871215,1.424693,7.906404,1.359563,8.020081,-4.034129,9.950442,-5.714320,2.719194,-8.086108,6.822861,-2.281276],[-0.213640,2.726959,1.634438,7.446362,7.862628,-4.064789,1.134731,-4.963642,5.555355,-7.081725,5.814604,6.093332,-4.226382],[8.086360,1.639135,-3.690183,-8.167097,-1.300752,1.291609,8.503872,-0.621721,8.519643,9.400040,-2.529329,9.639310,6.182540],[0.281092,3.256189,-5.103640,2.641229,-5.177243,3.320369,-6.367489,-4.555362,-0.761719,-5.221533,9.314337,-7.997404,-3.105572],[5.219296,-9.596969,-1.284528,0.844954,1.533968,4.294713,-0.726084,-3.825035,-0.307093,0.564409,-4.958616,-0.108619,-1.739248],[8.223342,-6.454728,1.080951,9.527234,5.699266,0.356030,7.967551,-7.778892,-9.626620,-6.897209,7.584306,9.955659,8.097138],[-8.663637,-4.796031,3.368561,9.809319,1.090778,-0.735787,-6.166475,6.446399,-6.860425,-8.569344,0.954815,3.473517,-3.497630],[-6.191171,2.566091,0.422029,2.852593,-2.014166,5.460179,-4.529626,-4.969536,7.546401,-8.623512,5.286190,2.454694,-4.243576],[-4.186196,-6.734640,-9.010344,-6.494241,-1.174100,8.165433,7.811604,5.927761,5.060124,-4.208482,-6.224718,4.190048,-7.182450],[6.904819,-7.863332,-7.629450,-7.209422,2.959902,9.125553,-4.856568,-1.500441,7.367771,-6.650834,-3.014080,-6.016219,2.487035],[7.768250,-7.525971,8.159523,7.370152,8.251459,-8.516968,1.609718,-9.869202,4.996321,-5.851472,-4.827259,-1.580300,-3.579238],[-8.153833,7.072329,0.977306,-9.094156,-0.919177,-8.795717,-6.935955,4.760591,2.600456,-2.807645,7.291713,-3.101413,1.962259],[7.800535,3.339256,2.329804,-0.882879,-5.628546,5.249244,7.337986,-8.167359,4.800236,7.866539,-7.826322,6.689107,-5.475701]],[[-3.771119,2.039201,2.975786,3.812945,-4.931472,1.645449,5.596045,2.634943,-7.808283,-3.618439,-5.642483,4.275660,-7.077978],[-8.540480,9.720749,-5.981308,1.847067,8.156850,-3.263440,-6.943807,0.440732,-5.557517,3.720921,6.128851,-6.816702,-8.050503],[-0.454916,9.122997,2.440933,-8.892060,-9.697652,3.283670,-5.766270,6.662079,4.315543,-6.343829,9.497517,-5.228202,-4.589455],[-7.019896,3.486239,9.970997,5.421652,1.503621,-1.200616,5.348514,-2.954875,-4.883195,5.217890,-5.000057,9.636078,-2.596638],[4.224017,8.401545,-8.175083,-3.923132,5.861360,4.677030,-4.787635,8.509031,1.063079,-5.333258,7.777383,-2.345553,-7.931865],[-4.296894,9.190628,-2.970260,1.105653,-4.874320,6.342759,0.817975,-3.760611,0.553760,9.748845,2.826061,4.871116,1.670469],[3.756766,-0.501412,-4.605261,4.034156,3.589714,-1.167788,-1.493286,-1.318593,8.501232,-3.358386,5.684186,2.540859,-1.697644],[2.356921,-4.182735,1.126089,-0.746174,9.059752,-7.114487,1.314207,-6.554462,-2.800213,-0.657133,-8.368006,-8.470090,-3.366354],[3.460442,8.507726,-0.076353,3.974948,2.996652,-6.898138,-6.538949,-9.224328,2.137933,-9.928899,2.723304,-8.671938,-5.854734],[3.693063,4.804562,-5.891194,0.150424,-3.209532,-0.641283,-4.342727,-3.374982,1.504134,-0.612989,4.305093,9.114376,3.678181],[-6.387822,9.085224,5.135450,-3.972775,-2.604345,5.995360,-3.764934,3.196458,4.987989,-5.500368,7.097373,8.684489,7.265085],[7.446369,-0.878080,1.044452,-3.193442,9.040906,7.627800,-9.309965,-8.111715,-9.695152,7.518227,4.895571,9.669964,6.651577],[-0.001394,2.797692,4.815495,-8.434941,4.242397,4.966273,-0.484206,0.529357,-8.939024,6.080944,6.767034,9.725838,-9.566547],[-3.785677,-1.351432,-2.420317,-7.125323,-8.807793,-9.352843,4.157588,-6.444094,4.853666,-5.936654,-8.544437,-4.150609,4.223999]],[[8.789552,-7.201424,-6.083518,-0.480937,-5.120414,6.318651,-1.243568,6.889353,-2.974003,-1.842198,2.924712,-3.928080,4.452654],[-8.328139,-5.675215,2.088788,-8.212745,1.008254,-4.884290,4.761668,-3.583119,1.567444,-7.432743,2.559584,-1.662070,7.430410],[0.989302,6.366757,-1.342850,-5.478523,5.546199,7.796543,-1.121243,-5.765210,-2.698636,8.681822,-9.848583,6.485851,5.369997],[-5.147761,-8.627344,2.150820,0.190821,-0.613784,-5.287537,-5.278259,9.778583,1.060245,0.991899,-3.745948,2.420250,-2.938516],[5.609006,-0.861582,2.933995,-8.709226,-7.038421,0.604558,-5.921362,-0.687851,1.587808,-3.337351,-4.976978,-8.837053,-7.601321],[9.392732,-9.626311,5.687252,2.019220,4.602305,-2.466863,-3.100193,8.584296,-7.369715,-4.869328,4.949087,-1.038896,-9.127315],[8.659320,-6.164531,3.795087,-2.414317,4.904332,4.014551,0.358593,9.844680,-9.814700,3.667470,-7.143216,5.716304,-5.095230],[-0.789068,8.146559,2.864813,4.623124,-8.597026,1.299023,-7.192792,-6.512714,5.680542,-3.396110,-3.467856,-4.865458,3.143401],[5.557270,4.762442,2.587912,-2.625479,-8.122590,1.843167,6.477539,7.102770,-1.118969,-8.358287,0.167288,9.798923,-6.822845],[5.953270,1.168639,9.926228,0.457404,-8.076684,-4.171421,9.817321,-1.096320,-6.398338,-5.515457,-0.311934,-2.908911,-6.807632],[-3.923076,0.670413,9.523330,4.157822,3.865330,1.125894,-7.168650,1.917641,7.154976,8.085890,-5.191057,4.481146,2.051775],[5.124615,-6.479593,-8.947155,8.089519,-3.622332,-1.641940,1.418834,-1.847795,-3.586164,-1.074447,-6.243521,5.711678,8.642827],[0.227891,-5.523777,-7.632633,-0.240306,4.947641,5.170307,0.200999,3.196935,-8.925328,1.068972,-8.034742,4.822090,-0.543134],[-7.555663,1.802233,3.137015,-2.170889,-0.024373,4.618210,-3.012451,6.236834,-4.479346,5.587280,-7.527151,-3.032485,-7.873932]],[[3.962622,-8.775655,2.696067,4.315817,-3.479115,-9.467612,6.823632,-1.749842,7.386360,9.238574,-4.727473,8.878572,-9.248426],[2.072748,-4.895948,3.202182,1.211227,0.327046,-8.660587,-8.955803,3.121642,8.912132,1.280655,7.209646,-0.573629,2.773835],[-7.254764,-2.483961,-4.185988,-6.156456,-2.971911,-0.566426,7.311386,-9.262672,7.186968,-2.427073,2.560581,1.019308,7.484253],[-4.689776,3.614721,9.675330,-5.009336,-7.836975,3.468809,4.347829,-5.106829,-2.845004,2.690963,4.511810,8.852447,3.755806],[-9.104634,7.569903,-6.050066,2.755410,9.576688,5.394575,6.621464,-1.696936,-4.792065,-8.013375,3.534338,-4.817080,2.363137],[2.634083,-0.141977,-3.674444,8.713117,-8.402314,5.646352,-5.021735,-4.879718,-2.812504,7.035912,8.009873,2.344498,1.820513],[-6.819575,4.981427,5.344889,-9.406393,-4.395190,-8.059276,-3.073044,3.381941,1.119362,-1.845807,6.792136,6.912725,4.416558],[8.784304,-5.044975,2.202146,-4.302540,-6.206028,-2.325588,4.977866,4.284949,-3.085466,2.666720,6.576496,5.866396,-9.487421],[3.600167,-6.025245,-4.983507,9.967686,-7.565170,5.681228,2.804400,-5.846550,-0.216712,-3.545947,-3.165715,9.886251,-9.162151],[-4.082705,-8.819836,1.261730,-8.590153,-4.459339,0.815162,9.016261,5.041586,-6.443806,-6.003888,-9.440882,0.366614,0.707291],[6.430557,5.134167,6.075012,-5.555566,-7.393220,9.268378,2.219975,-0.336301,1.879355,-3.074011,-3.210170,-2.795369,4.215122],[-8.287031,0.475680,-4.765149,-3.914065,1.612844,4.999263,-9.511897,8.027356,-0.781293,1.927700,6.470453,-5.222638,5.057736],[-5.015111,-2.097514,-6.129084,-9.162440,-9.280454,2.454226,-4.068509,-7.579852,-4.138431,-4.432960,1.824399,-9.287120,7.904980],[2.724493,4.026941,-9.315750,-7.900366,4.841299,5.471040,3.867414,5.159506,0.337171,8.781771,8.291019,-7.390120,3.960263]],[[4.393433,-3.958506,1.163945,-2.783780,5.328541,-4.129538,8.216603,-6.715923,-6.480562,-0.346848,-6.627521,9.351364,-7.742445],[1.987903,-1.639330,-8.698442,-0.483812,-4.150006,-4.937017,-7.394027,-7.814198,-7.071815,0.665199,-7.080460,-7.466836,4.734801],[-6.470585,-9.504226,6.850749,5.738877,-0.037297,9.304816,2.867953,-7.849717,3.356461,5.083785,4.027601,4.087520,-6.857068],[-2.457738,2.993126,-8.790991,2.096984,-7.940688,-4.346134,-3.975507,0.239378,-7.152507,-7.038950,-0.318231,9.089976,8.238635],[6.343812,1.997789,-9.679530,-4.307413,6.238365,-2.694254,0.116142,-9.228032,-6.029651,-6.912229,-3.707281,-4.760215,9.276988],[-2.772612,-3.224182,-6.226466,2.679748,-8.445689,3.236448,1.357738,3.970159,9.675114,-3.002550,-9.621175,5.755933,-2.864733],[8.657419,-2.685041,1.596803,-1.575895,-0.375504,-6.426962,-6.128346,7.745935,1.022508,5.049600,-1.322375,-7.291463,-7.706630],[-1.348084,9.399834,5.379630,7.058484,-0.948712,9.516309,7.341821,4.290417,1.133372,-3.363860,5.364533,5.960834,-1.468155],[-3.861626,-4.028319,1.657970,-9.313441,3.431856,-8.115546,9.749423,2.706473,5.261959,-6.640134,-4.606616,-2.762143,-4.527845],[6.224614,-2.480295,-6.091701,-9.865535,9.250038,7.349285,-7.494147,-4.519219,1.967739,8.663420,-1.570032,9.534111,8.806119],[-1.271455,-9.413386,-4.113179,-7.839986,9.835042,2.363241,3.732268,-0.774456,-4.332913,8.747295,0.431978,-5.282495,9.642004],[9.449132,4.257799,5.238743,-4.829287,-8.818115,2.819433,-7.551042,6.856271,-7.320288,-3.836918,9.850032,5.696413,9.383254],[-0.106830,-8.431466,-4.608267,-8.219092,-0.094083,6.648310,-7.513980,4.037077,-8.471435,-1.676456,1.238369,-4.489993,8.951866],[-5.810931,-6.571842,6.787481,8.429305,8.885717,6.351135,8.006872,9.305396,0.464698,4.687867,5.957681,-6.291460,0.373966]]], dtype = "float64")#candidate|4580|(6, 14, 13)|const|float64
uop_4581 = relay.erf(const_4580.astype('float64')) # shape=(6, 14, 13)
output = relay.Tuple([uop_4581,])
output2 = relay.Tuple([uop_4581,])
func_4583 = relay.Function([], output)
mod['func_4583'] = func_4583
mod = relay.transform.InferType()(mod)
output = func_4583()
func_4584 = relay.Function([], output)
mutated_mod['func_4584'] = func_4584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3902_call = mod.get_global_var('func_3902')
func_3904_call = mutated_mod.get_global_var('func_3904')
call_4631 = relay.TupleGetItem(func_3902_call(), 0)
call_4632 = relay.TupleGetItem(func_3904_call(), 0)
output = call_4631
output2 = call_4632
func_4633 = relay.Function([], output)
mod['func_4633'] = func_4633
mod = relay.transform.InferType()(mod)
mutated_mod['func_4633'] = func_4633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4633_call = mutated_mod.get_global_var('func_4633')
call_4634 = func_4633_call()
output = call_4634
func_4635 = relay.Function([], output)
mutated_mod['func_4635'] = func_4635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3737_call = mod.get_global_var('func_3737')
func_3739_call = mutated_mod.get_global_var('func_3739')
call_4636 = relay.TupleGetItem(func_3737_call(), 0)
call_4637 = relay.TupleGetItem(func_3739_call(), 0)
output = relay.Tuple([call_4636,])
output2 = relay.Tuple([call_4637,])
func_4640 = relay.Function([], output)
mod['func_4640'] = func_4640
mod = relay.transform.InferType()(mod)
mutated_mod['func_4640'] = func_4640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4640_call = mutated_mod.get_global_var('func_4640')
call_4641 = func_4640_call()
output = call_4641
func_4642 = relay.Function([], output)
mutated_mod['func_4642'] = func_4642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_4684 = func_2723_call()
call_4685 = func_2723_call()
func_828_call = mod.get_global_var('func_828')
func_833_call = mutated_mod.get_global_var('func_833')
call_4686 = relay.TupleGetItem(func_828_call(relay.reshape(call_4684.astype('float64'), [6, 14, 2]), relay.reshape(call_4684.astype('float64'), [6, 14, 2]), relay.reshape(call_4684.astype('float64'), [6, 14, 2]), ), 0)
call_4687 = relay.TupleGetItem(func_833_call(relay.reshape(call_4684.astype('float64'), [6, 14, 2]), relay.reshape(call_4684.astype('float64'), [6, 14, 2]), relay.reshape(call_4684.astype('float64'), [6, 14, 2]), ), 0)
func_1203_call = mod.get_global_var('func_1203')
func_1206_call = mutated_mod.get_global_var('func_1206')
var_4689 = relay.var("var_4689", dtype = "float64", shape = (72,))#candidate|4689|(72,)|var|float64
call_4688 = relay.TupleGetItem(func_1203_call(relay.reshape(var_4689.astype('float64'), [3, 2, 12]), relay.reshape(var_4689.astype('float64'), [3, 2, 12]), ), 0)
call_4690 = relay.TupleGetItem(func_1206_call(relay.reshape(var_4689.astype('float64'), [3, 2, 12]), relay.reshape(var_4689.astype('float64'), [3, 2, 12]), ), 0)
func_3467_call = mod.get_global_var('func_3467')
func_3469_call = mutated_mod.get_global_var('func_3469')
call_4694 = func_3467_call()
call_4695 = func_3467_call()
func_1572_call = mod.get_global_var('func_1572')
func_1577_call = mutated_mod.get_global_var('func_1577')
var_4699 = relay.var("var_4699", dtype = "int64", shape = (1440,))#candidate|4699|(1440,)|var|int64
const_4700 = relay.const([3,-6,3,-6,2,5,7,-2,5,-3,-8,3,-7,2,-8,-5,6,2,5,-2,-1,7,-2,-1,1,-5,-6,2,9,-9,1,-8,7,6,-7,9,5,6,-4,-6,8,3,-2,-7,1,7,-2,-8,-4,-3,5,9,-7,-9,1,-6,-7,-4,6,-1,9,-8,3,-2,-2,-8,-6,-9,1,3,-3,10,10,10,-5,-2,9,7,-7,8,1,-8,-2,-9,-7,4,3,-10,10,-6,1,1,-9,-1,-5,-6,5,-5,-3,10,9,7,-10,5,-9,4,1,9,4,-6,6,-7,-6,-8,9,8,-1,-1,4,-8,-9,2,-8,9,8,10,7,-5,-2,-3,-10,-2,-6,4,1,2,6,9,2,7,1,-3,7,-1,-10,9,-5,-3,-3,10,8,-3,3,-10,8,-4,5,7,-5,10,-5,7,9,9,-4,-8,-1,7,-3,-9,-4,-9,-2,10,9,5,8,-1,2,1,-1,10,-9,5,6,2,1,-9,-2,-2,-7,-4,-1,-2,-7,10,-3,9,9,-6,2,-5,1,-5,10,-5,-8,-4,2,-3,2,-6,-4,-6,2,10,-10,-6,6,6,-1,-5,-8,8,-8,10,4,2,4,3,-10,10,5,-10,7,6,-7,-9,-1,-6,7,6,5,-9,8,4,4,-5,-8,-1,1,5,10,4,10,-10,-9,6,8,2,9,1,10,4,3,4,-3,-3,-4,4,-8,-1,-5,-10,4,9,7,-7,-8,-4,-6,-6,-1,2,5,-9,2,-9,-1,-2,-8,-10,-10,4,8,8,8,3,-2,-5,2,-9,8,-1,-4,3,3,9,-10,1,2,-6,-5,2,-5,-4,2,9,-1,10,5,-9,9,-2,-2,-9,-6,7,-3,9,-5,-4,6,9,-6,-5,2,-1,-6,10,-10,4,-5,5,7,7,-7,-9,4,10,-6,-3,1,-9,-1,-6,-1,6,9,-3,7,8,-9,-7,-4,-5,4,-1,5,3,-1,8,-7,-8,-8,-3,-1,7,8,6,-2,4,-8,2,-7,1,4,-1,-4,9,10,-4], dtype = "uint32")#candidate|4700|(392,)|const|uint32
call_4698 = relay.TupleGetItem(func_1572_call(relay.reshape(var_4699.astype('int64'), [8, 12, 15]), relay.reshape(var_4699.astype('int64'), [8, 12, 15]), relay.reshape(const_4700.astype('uint32'), [392,]), relay.reshape(call_4694.astype('float32'), [1040,]), ), 1)
call_4701 = relay.TupleGetItem(func_1577_call(relay.reshape(var_4699.astype('int64'), [8, 12, 15]), relay.reshape(var_4699.astype('int64'), [8, 12, 15]), relay.reshape(const_4700.astype('uint32'), [392,]), relay.reshape(call_4694.astype('float32'), [1040,]), ), 1)
func_3902_call = mod.get_global_var('func_3902')
func_3904_call = mutated_mod.get_global_var('func_3904')
call_4710 = relay.TupleGetItem(func_3902_call(), 1)
call_4711 = relay.TupleGetItem(func_3904_call(), 1)
output = relay.Tuple([call_4684,call_4686,call_4688,var_4689,call_4694,call_4698,var_4699,const_4700,call_4710,])
output2 = relay.Tuple([call_4685,call_4687,call_4690,var_4689,call_4695,call_4701,var_4699,const_4700,call_4711,])
func_4720 = relay.Function([var_4689,var_4699,], output)
mod['func_4720'] = func_4720
mod = relay.transform.InferType()(mod)
var_4721 = relay.var("var_4721", dtype = "float64", shape = (72,))#candidate|4721|(72,)|var|float64
var_4722 = relay.var("var_4722", dtype = "int64", shape = (1440,))#candidate|4722|(1440,)|var|int64
output = func_4720(var_4721,var_4722,)
func_4723 = relay.Function([var_4721,var_4722,], output)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2895_call = mod.get_global_var('func_2895')
func_2896_call = mutated_mod.get_global_var('func_2896')
call_4764 = func_2895_call()
call_4765 = func_2895_call()
output = call_4764
output2 = call_4765
func_4768 = relay.Function([], output)
mod['func_4768'] = func_4768
mod = relay.transform.InferType()(mod)
output = func_4768()
func_4769 = relay.Function([], output)
mutated_mod['func_4769'] = func_4769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3645_call = mod.get_global_var('func_3645')
func_3646_call = mutated_mod.get_global_var('func_3646')
call_4799 = relay.TupleGetItem(func_3645_call(), 0)
call_4800 = relay.TupleGetItem(func_3646_call(), 0)
func_3929_call = mod.get_global_var('func_3929')
func_3930_call = mutated_mod.get_global_var('func_3930')
call_4802 = relay.TupleGetItem(func_3929_call(), 0)
call_4803 = relay.TupleGetItem(func_3930_call(), 0)
var_4813 = relay.var("var_4813", dtype = "float32", shape = (5, 13, 16))#candidate|4813|(5, 13, 16)|var|float32
bop_4814 = relay.left_shift(call_4799.astype('uint16'), relay.reshape(var_4813.astype('uint16'), relay.shape_of(call_4799))) # shape=(5, 13, 16)
bop_4817 = relay.left_shift(call_4800.astype('uint16'), relay.reshape(var_4813.astype('uint16'), relay.shape_of(call_4800))) # shape=(5, 13, 16)
func_1810_call = mod.get_global_var('func_1810')
func_1813_call = mutated_mod.get_global_var('func_1813')
var_4820 = relay.var("var_4820", dtype = "int64", shape = (12,))#candidate|4820|(12,)|var|int64
var_4821 = relay.var("var_4821", dtype = "int64", shape = (4, 24))#candidate|4821|(4, 24)|var|int64
call_4819 = func_1810_call(relay.reshape(var_4820.astype('int64'), [6, 2, 1]), relay.reshape(var_4821.astype('int64'), [6, 2, 8]), )
call_4822 = func_1810_call(relay.reshape(var_4820.astype('int64'), [6, 2, 1]), relay.reshape(var_4821.astype('int64'), [6, 2, 8]), )
output = relay.Tuple([call_4802,bop_4814,call_4819,var_4820,var_4821,])
output2 = relay.Tuple([call_4803,bop_4817,call_4822,var_4820,var_4821,])
func_4823 = relay.Function([var_4813,var_4820,var_4821,], output)
mod['func_4823'] = func_4823
mod = relay.transform.InferType()(mod)
mutated_mod['func_4823'] = func_4823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4823_call = mutated_mod.get_global_var('func_4823')
var_4825 = relay.var("var_4825", dtype = "float32", shape = (5, 13, 16))#candidate|4825|(5, 13, 16)|var|float32
var_4826 = relay.var("var_4826", dtype = "int64", shape = (12,))#candidate|4826|(12,)|var|int64
var_4827 = relay.var("var_4827", dtype = "int64", shape = (4, 24))#candidate|4827|(4, 24)|var|int64
call_4824 = func_4823_call(var_4825,var_4826,var_4827,)
output = call_4824
func_4828 = relay.Function([var_4825,var_4826,var_4827,], output)
mutated_mod['func_4828'] = func_4828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2658_call = mod.get_global_var('func_2658')
func_2660_call = mutated_mod.get_global_var('func_2660')
call_4830 = func_2658_call()
call_4831 = func_2658_call()
var_4832 = relay.var("var_4832", dtype = "float64", shape = (13, 9, 9))#candidate|4832|(13, 9, 9)|var|float64
bop_4833 = relay.floor_divide(call_4830.astype('float64'), relay.reshape(var_4832.astype('float64'), relay.shape_of(call_4830))) # shape=(13, 9, 9)
bop_4836 = relay.floor_divide(call_4831.astype('float64'), relay.reshape(var_4832.astype('float64'), relay.shape_of(call_4831))) # shape=(13, 9, 9)
output = relay.Tuple([bop_4833,])
output2 = relay.Tuple([bop_4836,])
func_4839 = relay.Function([var_4832,], output)
mod['func_4839'] = func_4839
mod = relay.transform.InferType()(mod)
mutated_mod['func_4839'] = func_4839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4840 = relay.var("var_4840", dtype = "float64", shape = (13, 9, 9))#candidate|4840|(13, 9, 9)|var|float64
func_4839_call = mutated_mod.get_global_var('func_4839')
call_4841 = func_4839_call(var_4840)
output = call_4841
func_4842 = relay.Function([var_4840], output)
mutated_mod['func_4842'] = func_4842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_4869 = relay.TupleGetItem(func_2225_call(), 0)
call_4870 = relay.TupleGetItem(func_2227_call(), 0)
func_2366_call = mod.get_global_var('func_2366')
func_2370_call = mutated_mod.get_global_var('func_2370')
const_4878 = relay.const(10, dtype = "uint32")#candidate|4878|()|const|uint32
var_4879 = relay.var("var_4879", dtype = "uint32", shape = (16,))#candidate|4879|(16,)|var|uint32
call_4877 = relay.TupleGetItem(func_2366_call(relay.reshape(const_4878.astype('uint32'), []), relay.reshape(var_4879.astype('uint32'), [16, 1]), ), 0)
call_4880 = relay.TupleGetItem(func_2370_call(relay.reshape(const_4878.astype('uint32'), []), relay.reshape(var_4879.astype('uint32'), [16, 1]), ), 0)
output = relay.Tuple([call_4869,call_4877,const_4878,var_4879,])
output2 = relay.Tuple([call_4870,call_4880,const_4878,var_4879,])
func_4887 = relay.Function([var_4879,], output)
mod['func_4887'] = func_4887
mod = relay.transform.InferType()(mod)
var_4888 = relay.var("var_4888", dtype = "uint32", shape = (16,))#candidate|4888|(16,)|var|uint32
output = func_4887(var_4888)
func_4889 = relay.Function([var_4888], output)
mutated_mod['func_4889'] = func_4889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3847_call = mod.get_global_var('func_3847')
func_3848_call = mutated_mod.get_global_var('func_3848')
call_4920 = func_3847_call()
call_4921 = func_3847_call()
output = relay.Tuple([call_4920,])
output2 = relay.Tuple([call_4921,])
func_4924 = relay.Function([], output)
mod['func_4924'] = func_4924
mod = relay.transform.InferType()(mod)
mutated_mod['func_4924'] = func_4924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4924_call = mutated_mod.get_global_var('func_4924')
call_4925 = func_4924_call()
output = call_4925
func_4926 = relay.Function([], output)
mutated_mod['func_4926'] = func_4926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2693_call = mod.get_global_var('func_2693')
func_2695_call = mutated_mod.get_global_var('func_2695')
call_4995 = relay.TupleGetItem(func_2693_call(), 2)
call_4996 = relay.TupleGetItem(func_2695_call(), 2)
var_4999 = relay.var("var_4999", dtype = "uint32", shape = (392,))#candidate|4999|(392,)|var|uint32
bop_5000 = relay.mod(call_4995.astype('float32'), relay.reshape(var_4999.astype('float32'), relay.shape_of(call_4995))) # shape=(392,)
bop_5003 = relay.mod(call_4996.astype('float32'), relay.reshape(var_4999.astype('float32'), relay.shape_of(call_4996))) # shape=(392,)
var_5006 = relay.var("var_5006", dtype = "uint32", shape = (392,))#candidate|5006|(392,)|var|uint32
bop_5007 = relay.not_equal(call_4995.astype('bool'), relay.reshape(var_5006.astype('bool'), relay.shape_of(call_4995))) # shape=(392,)
bop_5010 = relay.not_equal(call_4996.astype('bool'), relay.reshape(var_5006.astype('bool'), relay.shape_of(call_4996))) # shape=(392,)
uop_5013 = relay.asin(var_5006.astype('float32')) # shape=(392,)
output = relay.Tuple([bop_5000,bop_5007,uop_5013,])
output2 = relay.Tuple([bop_5003,bop_5010,uop_5013,])
func_5028 = relay.Function([var_4999,var_5006,], output)
mod['func_5028'] = func_5028
mod = relay.transform.InferType()(mod)
var_5029 = relay.var("var_5029", dtype = "uint32", shape = (392,))#candidate|5029|(392,)|var|uint32
var_5030 = relay.var("var_5030", dtype = "uint32", shape = (392,))#candidate|5030|(392,)|var|uint32
output = func_5028(var_5029,var_5030,)
func_5031 = relay.Function([var_5029,var_5030,], output)
mutated_mod['func_5031'] = func_5031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5066 = relay.var("var_5066", dtype = "int16", shape = ())#candidate|5066|()|var|int16
const_5067 = relay.const([[[3],[2],[3],[10],[-2],[7],[-2],[-3]],[[4],[3],[-3],[-2],[-8],[9],[3],[-10]]], dtype = "int16")#candidate|5067|(2, 8, 1)|const|int16
bop_5068 = relay.right_shift(var_5066.astype('int16'), const_5067.astype('int16')) # shape=(2, 8, 1)
uop_5089 = relay.asinh(bop_5068.astype('float32')) # shape=(2, 8, 1)
output = relay.Tuple([uop_5089,])
output2 = relay.Tuple([uop_5089,])
func_5092 = relay.Function([var_5066,], output)
mod['func_5092'] = func_5092
mod = relay.transform.InferType()(mod)
mutated_mod['func_5092'] = func_5092
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5093 = relay.var("var_5093", dtype = "int16", shape = ())#candidate|5093|()|var|int16
func_5092_call = mutated_mod.get_global_var('func_5092')
call_5094 = func_5092_call(var_5093)
output = call_5094
func_5095 = relay.Function([var_5093], output)
mutated_mod['func_5095'] = func_5095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3961_call = mod.get_global_var('func_3961')
func_3962_call = mutated_mod.get_global_var('func_3962')
call_5131 = relay.TupleGetItem(func_3961_call(), 2)
call_5132 = relay.TupleGetItem(func_3962_call(), 2)
func_2523_call = mod.get_global_var('func_2523')
func_2527_call = mutated_mod.get_global_var('func_2527')
var_5153 = relay.var("var_5153", dtype = "float32", shape = (1053,))#candidate|5153|(1053,)|var|float32
call_5152 = relay.TupleGetItem(func_2523_call(relay.reshape(call_5131.astype('float32'), [480,]), relay.reshape(var_5153.astype('float32'), [13, 9, 9]), ), 0)
call_5154 = relay.TupleGetItem(func_2527_call(relay.reshape(call_5131.astype('float32'), [480,]), relay.reshape(var_5153.astype('float32'), [13, 9, 9]), ), 0)
output = relay.Tuple([call_5131,call_5152,var_5153,])
output2 = relay.Tuple([call_5132,call_5154,var_5153,])
func_5164 = relay.Function([var_5153,], output)
mod['func_5164'] = func_5164
mod = relay.transform.InferType()(mod)
mutated_mod['func_5164'] = func_5164
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5165 = relay.var("var_5165", dtype = "float32", shape = (1053,))#candidate|5165|(1053,)|var|float32
func_5164_call = mutated_mod.get_global_var('func_5164')
call_5166 = func_5164_call(var_5165)
output = call_5166
func_5167 = relay.Function([var_5165], output)
mutated_mod['func_5167'] = func_5167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4768_call = mod.get_global_var('func_4768')
func_4769_call = mutated_mod.get_global_var('func_4769')
call_5209 = func_4768_call()
call_5210 = func_4768_call()
func_502_call = mod.get_global_var('func_502')
func_504_call = mutated_mod.get_global_var('func_504')
var_5222 = relay.var("var_5222", dtype = "float32", shape = (1848,))#candidate|5222|(1848,)|var|float32
call_5221 = relay.TupleGetItem(func_502_call(relay.reshape(var_5222.astype('float32'), [14, 11, 12])), 1)
call_5223 = relay.TupleGetItem(func_504_call(relay.reshape(var_5222.astype('float32'), [14, 11, 12])), 1)
const_5229 = relay.const([9.615299,-8.525401,-6.782393,-2.555926,-2.562128,-0.308925,1.940146,-8.152696,-4.936243,-2.983783,-2.316548,1.965560,6.775716,-9.911494,1.104798,-7.124301,-7.305058,3.666388,8.209585,-7.404806,5.493069,5.639445,-1.388063,-6.858714,-6.755173,-3.446293,0.665182,-8.838648,-3.876120,-3.192499,0.381595,-5.722405,-3.877198,-2.966934,0.644738,3.758032,3.082068,1.465205,3.228713,-6.440468,-2.654048,-6.797621,-7.627643,-0.874386,3.123679,-6.701875,5.010341,-1.591683,-4.051355,6.327310,3.205518,-5.715704,0.850344,-9.080241,1.959764,-9.502850,-0.763055,-8.090836,-7.054721,0.639639,3.805700,-0.694077,-9.298907,-3.706634,2.217735,-7.182751,5.573354,-2.808123,-9.866980,8.679285,8.416838,0.125700,-9.673185,2.095217,7.910264,-0.210518,-6.098677,0.056375,-9.084187,-8.393458,-4.855944,-4.435921,2.881389,-1.871347,-2.549231,-2.926520,-5.366868,2.510833,2.509099,3.565298,3.432037,6.874108,-4.772285,-3.882208,0.292164,-7.386074,3.612063,9.729969,2.757005,-0.696014,8.087562,-9.520009,-9.957685,-1.502748,-2.680903,-9.883195,5.559872,2.350591,5.947878,-9.621162,-4.679361,-8.837333,-2.917219,7.693182,2.410043,3.450632,-8.923837,-5.559716,9.787797,-8.008821,-5.252611,1.208966,-5.379088,3.458987,-2.944312,-9.586844,6.054248,-7.206140,-0.935683,5.406639,1.077759,-1.782321,-5.840817,-3.564198,9.516131,9.150083,-0.445286,-5.142973,-3.920875,-9.056210,6.240667,1.201242,3.579736,-3.897903,5.007289,2.442548,-3.043175,-5.207941,5.976566,-6.399582,3.174414,-3.826480,-7.761483,1.861958,0.678570,0.198796,-1.293129,4.864321,-8.931581,-4.981842,4.765754,-3.098926,8.457492,0.421570,-6.228299,-2.215548,7.231976,6.686654,7.988774,-2.144373,-5.895216,5.988407,9.309233,-3.844212,4.093177,4.138031,-4.028020,-6.951545,1.079139,-9.085105,-9.741225,8.890832,-5.952430,3.956078,0.148337,-1.538372,-5.659540,3.412797,-8.735501,6.883508,-0.981767,-4.850886,4.319196,-6.580544,-2.156013,-5.400426,7.079077,9.579150,-6.678204,9.483148,-9.225372,6.936476,-4.549070,-3.407135,-1.153474,-9.127929,3.893287,5.572466,7.551225,5.459690,0.456004,-1.388331,5.675464,-8.449680,1.398806,-1.583474,9.734779,-3.092239,-9.063112,-1.483396,-8.471812,3.181441,4.755710,-3.765126,-9.622655,4.868547,4.189770,8.627070,7.097807,-3.100197,9.227339,-2.520640,-5.990328,-6.123613,-9.936768,8.311942,3.568644,-3.830047,-5.940259,-9.119232,-7.007460,-5.697652,3.122953,-7.607974,5.996561,7.618987,0.714102,8.663908,-4.015341,-2.080921,-3.510678,-9.978285,-4.105039,-3.655423,4.873871,-2.438013,-8.072881,-3.263122,-1.191285,-8.109309,0.019621,-5.604073,-3.864040,0.221985,-7.353118,4.362973,1.428707,-4.664469,-6.028896,-5.940311,2.552443,7.529741,5.939269,-0.322015,-0.961724,5.868462,-7.573755,4.414172,0.012889,-5.577865,-6.586797,-9.096248,8.314508,-4.918851,-2.788217,9.839014,6.573487,6.301461,-2.506234,-7.509114,3.602364,0.029328,0.415922,-3.504448,8.674830,-0.975148,-4.907123,9.764271,-1.210243,4.958229,5.270283,-9.778806,3.976290,3.516812,8.824313,-4.189656,-4.049747,9.966822,-0.633210,-4.155108,-5.753821,-5.343458,-8.276536,-5.104788,0.857109,6.103371,-6.200728,0.830398,7.117345,-4.158689,-7.194922,9.606383,-9.428534,-3.078226,-8.019773,-7.704494,-6.646930,7.565624,-2.411321,6.529452,9.879547,-3.536977,-7.255470,5.501929,9.754159,1.734245,4.938306,-4.808728,4.694524,-5.805639,9.291783,-9.142187,1.591949,-7.668600,8.407529,1.852833,-5.844849,-1.721277,1.186975,9.079109,9.335945,-4.242523,3.681786,-7.017724,-4.291703,4.222212,0.389676,9.654275,0.309080,2.080753,6.333562,-1.403514,-7.165916,-1.689494,-9.721995,-3.598019,-9.284647,-5.968330,1.522698,-6.368205,-8.105552,-3.584574,6.352031,-7.098598,6.001284,6.272373,5.049380,5.673548,4.096826,4.534949,8.831283,3.838383,6.493733,0.724027,3.625408,-8.547692,5.823594,3.522770,-5.718549,-1.537044,4.175974,-1.592192,7.046164,7.757168,6.983239,-0.128062,-8.378168,1.233493,-4.517355,3.649840,-7.371723,8.872501,-2.275712,9.901521,-8.024648,-6.113905,0.294371,-9.066614,-4.520328,3.233310,7.620609,-1.719062,-4.331345,7.699517,0.260401,-1.084178,-2.826972,8.025959,-5.595920,4.054488,-0.222038,6.022773,-1.361894,-5.347945,1.522839,-5.576160,-5.989091,-8.017588,-9.091939,9.409414,-9.866613,-3.594116,3.848492,1.099552,-2.426194,-2.572589,2.386665,-8.932303,-5.191536,-6.723889,2.222620,-8.985489,-6.499516,-7.540037,-7.907484,-8.638901,9.087776,3.523638,-6.652855,-5.799527,2.621722,-0.841058,-9.089502,-4.342377,4.930735,-5.770242,6.565939,-7.007032,-6.934484,5.418015,-9.060269,2.012505,-3.184493,-6.613518,-5.092529,2.892866,-5.441683,-3.223443,-2.636659,0.423856,6.071073,-5.753797,-9.354406,-9.738535,6.188167,8.943288,5.640376,8.441396,5.258122,7.242053,1.982404,9.684900,-5.754135,-5.006155,-9.274667,-6.115466,-6.874000,-3.974675,-2.755881,6.545733,-3.774791,7.021436,4.207181,2.146880,4.877869,-2.510398,0.066448,-3.858518,6.949699,2.982020,-6.407849,-4.243740,-4.420426,0.617852,5.136322,1.697403,4.760928,-4.824109,1.209224,3.322339,-0.162548,5.527299,9.586739,8.447925,8.347503,-4.500399,-9.355564,-0.013775,1.106777,8.119582,-0.387367,0.353830,-3.248132,-1.031298,2.353716,-9.502446,-1.388180,-0.144900,1.699271,-6.083767,-9.339322,-2.194456,0.968965,0.950838,-1.687383,-7.647756,8.760308,-3.111951,7.282821,-4.397144,-7.236474,-8.990220,-8.763602,-1.610306,-8.036799,-2.399055,7.282797,4.332057,4.678299,1.648338,-9.858984,-9.508276,7.463983,4.947002,-8.292226,-7.122841,-7.011734,9.874442,8.941842,-4.433902,-6.621791,-2.718930,7.706622,3.989568,-0.693735,-5.103181,-0.320427,6.209683,0.790963,-7.576590,-8.915258,-8.144662,0.344743,2.038062,1.722924,-5.657696,0.789298,1.683410,-1.044087,3.109576,0.559343,5.424318,2.146652,-0.914273,5.472675,-5.801612,0.755426,-8.552679,-6.061493,3.522529,2.092914,2.787307,-5.261508,3.257664,9.031444,1.097184,-2.722429,-0.862741,2.280187,-4.799616,3.932361,-2.468081,7.863515,7.543513,1.542235,1.192782,-8.093348,6.409111,7.913871,-3.008149,1.221462,-1.298552,-7.247908,3.793361,0.271009,6.074454,-5.739165,7.127603,-1.140906,6.465292,6.804591,4.147771,-6.215663,-8.393804,5.162426,-5.098884,-2.890961,1.002729,-8.703175,4.870155,-3.630020,-0.044217,-4.680672,8.350214,1.309455,-6.200317,5.839608,-9.534744,-9.148563,-1.051979,2.229185,6.953461,7.973370,6.200909,6.262993,0.642822,1.495218,4.685286,1.484986,-4.722722,8.181754,4.355504,-7.359149,-1.250554,-7.622976,9.728114,-6.264626,5.978496,5.950724,9.507225,4.940983,-3.266880,-4.264586,3.516105,-8.600834,-6.591940,-4.443301,8.297345,-2.949782,-1.748858,-5.393791,-6.662958,-1.329110,-0.782813,-0.810880,-3.125471,-7.360858,-9.837462,-6.761452,-6.467070,-3.635994,2.282605,-4.388024,2.631158,-5.777154,3.938409,8.095197,1.881768,1.689684,1.502855,0.604632,-1.509832,5.405453,1.278801,-0.374683,-5.110875,-6.042956,2.971750,-8.350310,1.373717,-4.956179,8.763173,8.968419,3.461427,-4.485703,-2.130691,9.463850,7.255276,-3.667496,-8.994132,-7.744463,4.431292,-2.243922,4.275436,0.014251,-2.762051,6.453197,-1.304528,-4.839086,-2.793162,-5.829646,4.176258,5.542809,-9.474215,8.875586,-0.520385,-3.875644,-5.359799,-9.804675,7.878116,3.751160,-5.496203,-1.685501,5.020805,-8.526000,6.165826,-7.807965,-0.880803,-2.010821,9.555991,-4.683180,5.242352,8.140586,6.898255,-7.053738,-5.150550,-5.907577,-1.649398,9.291289,-6.265305,8.403787,-6.382725,-5.117957,2.353772,-8.916695,-3.781609,-7.549693,9.982781,9.943926,-7.485447,3.150615,4.927488,7.112102,-5.167834,5.810340,-3.788022,3.661225,0.191884,-8.739729,-5.711070,4.275649,1.269034,-6.161828,-6.098173,9.015471,0.330788,7.978504,7.399449,4.183473,3.502853,-5.178880,2.090355,-9.407333,7.719010,-0.967844,2.652624,-8.933832,2.959688,7.052110,-9.439120,-7.093872,-6.100151,1.666479,-8.185025,2.480124,9.779080,-0.882835,1.710345,5.301899,4.027291,-7.184116,-1.751301,6.643446,-9.263375,8.088622,0.342177,-4.119076,2.140982,2.208865,-0.132130,4.143682,-5.432256,0.775671,-4.717818,-8.154144,-4.788529,9.382433,3.113369,-4.945418,4.358961,2.534851,-0.790160,-4.658233,2.461204,8.009356,4.966351,6.025626,-0.350785,5.626158,-0.676404,-5.875745,8.846545,6.799519,-2.321644,-3.063848,7.691764,9.587837,0.605599,8.969842,7.730889,2.844001,9.066733,8.802654,3.215083,-4.306128,-6.279174,-1.900957,-4.120391,7.198520,4.888801,0.954459,7.259576,-1.652366,-2.634942,7.515970,9.739350,-2.265174,8.894486,-7.926794,7.445578,-4.974119,-1.009574,9.860999,-8.141380,7.428098,-3.965825,-8.220693,4.976210,-3.626176,-3.212325,-1.715587,-3.996598,-5.090746,-6.284796,-5.792771,-2.923047,5.590563,8.598450,0.868787,7.948009,-6.344158,2.832227,1.253085,4.722402,2.379767,8.009888,9.012746,-7.719610,-9.546904,4.324158,-4.232292,5.999218,-0.779940,-3.082626,5.926783,-8.689118,3.621516,-1.931687,6.182276,9.520938,-6.746533,-6.775479,-7.391931,5.335491,4.521872,-1.766504,-9.917329,3.494573,-1.495926,7.344736,-8.082255,1.728663,1.920079,-1.870583,-8.568063,3.807313,0.339958,-3.591402,5.638214,-8.188912,-3.767179,-7.393072,-5.686072,7.102552,-9.659461,-8.240069,3.800452,-1.881060,-8.020885,3.026148,-2.531967,0.310585,-5.890208,-3.898492,0.062981,-8.596078,1.998380,1.740088,-3.648703,-7.118152,0.134455,7.820842,9.383837,8.500225,9.472922,-8.393773,-1.738375,5.357504,2.897597,-7.137365,-0.786985,4.544978,1.514446,2.552369,9.192869,-0.355971,9.717447,5.609353,-7.679180,-0.242903,6.822868,4.825741,-0.960177,-5.763562,-7.489342,-6.049782,6.450991,-9.251636,-6.270804,7.655188,-6.391154,-9.045808,3.456838,-4.115913,7.303360,8.092074,6.671953,-5.259855,8.958394,5.452640,1.648911,-8.977724,1.760910,2.091102,4.810217,-5.744926,7.660901,1.588430,-9.003278,-4.236148,-8.133108,9.960944,-9.296519,3.344096,-9.851475,-1.661411,-0.300261,9.458905,9.181227,-5.871925,4.683246,-8.476025,5.080761,3.616900,0.431037,4.310344,-2.071613,8.533184,-5.867701,-0.763057,-3.999190,-1.325687,-4.312580,-2.824967,3.220491,-2.619283,5.811238,4.493744,-6.820689,4.721672,-8.598031,3.700363,0.569618,8.712403,2.939195,-4.669817,-4.697926,-6.242168,-6.902302,4.072628,1.858116,-2.393792,-5.291505,-0.347580,0.427194,1.862966,-6.656270,-6.764272,9.002305,-7.079416,1.659534,-9.182182,6.049902,-4.369390,-6.909764,6.103993,2.675592,-7.158713,9.971922,-8.381080,-3.490411,-9.424963,-0.236730,-4.695368,9.907420,-6.712465,-2.193422,-4.971291,-6.935849,4.764837,-9.686853,-4.690494,0.421750,-9.404238,4.376483,1.199417,-6.952086,9.804538,-0.921725,-7.106603,-6.035716,-7.480390,-3.653240,-4.127655,-6.872191,7.750545,0.010008,-9.489314,-1.663992,6.447737,-3.098460,-2.003693,6.392762,8.868143,5.184344,1.597042,2.237399,-0.129477,-2.552287,-2.176440,2.556755,-2.000514,6.122978,6.146484,3.505079,-5.466007,0.861571,-0.221604,-1.684547,-9.922204,7.915569,9.460935,9.287554,-4.790706,-1.789327,-8.575951,-7.663902,-7.436026,-9.638116,-5.194936,8.162421,8.492443,8.079449,6.704485,7.090755,8.889601,1.788144,8.625233,7.032615,-2.431166,-5.798370,0.476220,7.870234,9.955740,9.426154,9.286941,-5.042276,8.630041,-4.661144,9.094579,-9.801268,5.006285,8.209796,-7.677516,-8.499273,-8.457001,-8.725787,-1.246511,-5.847023,8.085150,9.608371,-1.466722,4.469841,2.088164,-0.327777,3.909489,6.436996,-5.209915,-6.839574,1.535787,5.993536,5.651020,8.772421,-9.301867,9.944005,1.127318,-4.307174,-9.400655,9.486153,-0.574531,-1.770177,-3.971255,-7.342923,-0.679131,-0.792455,6.285808,-4.315716,1.779095,-2.365087,5.995063,8.996091,-1.453585,-2.635517,1.068772,-1.100071,2.057878,0.833105,9.524001,-7.052326,-5.710169,0.708845,-3.748338,6.876419,-6.773702,8.435489,2.169924,-3.401517,7.383940,6.997161,9.089802,-3.813132,-2.113190,-9.566247,3.345877,-6.108948,4.836380,1.368036,9.900092,6.969046,9.428476,7.197488,2.422127,-1.102799,-4.494256,3.038881,-3.726732,-2.773520,-9.691850,-6.601184,8.534784,6.198212,-5.800751,-2.393135,0.958382,7.354781,1.510531,-1.833096,4.663666,5.840033,-6.064592,2.829701,-1.675691,5.808832,-7.327315,-4.421026,-6.980469,7.495254,-2.767990,-1.166116,3.982687,-5.020420,-4.169767,-2.292176,-8.856806,5.858766,-3.084520,8.313030,-0.536782,1.775878,-6.106771,-8.756764,-5.796407,7.531532,-4.219469,-7.200937,-4.560374,-3.129285,8.585273,-8.298331,-1.637885,-7.126501,-3.681476,2.961654,6.157804,7.603850,-3.818099,-6.625720,4.318783,1.382995,-9.009832,-8.832667,8.663608,3.517425,5.293060,-6.469396,-7.759866,-6.757939,-3.020615,8.771535,5.138173,7.202625,5.059632,-2.388091,4.153203,-3.393602,9.646002,-9.836844,2.732363,-2.271958,9.543041,-7.739562,8.860001,-2.744750,-0.297848,8.157269,5.516928,4.590622,6.142144,7.919719,4.096254,-5.751829,-8.883777,5.552059,-6.207001,-1.722253,-9.809673,4.074485,-9.495410,5.889243,-6.666542,-9.782081,0.557710,-3.091051,3.139807,-4.343254,7.779698,8.676614,7.643987,5.434527,-3.166621,-4.625083,-8.623886,0.744156,4.136022,2.368660,7.060449,8.303178,2.049245,2.513281,-3.807875,8.057273,-6.201485,6.091448,-7.908964,-5.870089,1.862630,1.007752,-8.047534,-5.510504,-7.879683,6.116891,0.331466,-3.280928,-8.210657,4.478677,0.985429,-6.421916,8.701203,-0.977716,-6.658249,4.438963,2.204228,1.211903,0.006836,6.556098,8.365693,2.931727,-7.322625,6.607285,-3.535602,5.041329,-3.432139,5.232281,1.341358,0.706431,-5.808266,3.850046,6.530783,-4.509295,-6.785903,-4.165087,-0.300327,-6.415561,-4.830753,-6.960178,-4.272824,-7.394907,3.426265,2.426401,8.147749,7.291492,8.740769,2.749279,0.908738,3.441822,-6.445452,-6.800534,8.799327,5.746312,-3.360022,-3.423286,5.736713,4.549913,2.862167,7.489680,3.945382,-1.329988,-3.779582,-7.836217,6.433579,7.070306,4.317297,1.059183,9.164758,-6.506628,-9.105495,-7.734534,-9.591721,-7.174345,-5.900070,-3.883581,-6.429586,-6.788711,9.761067,9.779791,-9.418560,-8.098674,-8.505333,1.853589,-8.884551,7.908426,-7.778449,-4.815803,-7.775996,-1.782389,-8.163404,-7.835446,-3.104824,2.033687,3.806636,-4.372459,-1.765948,-3.952319,-9.810140,-3.594432,8.550498,8.161323,8.623644,-6.679783,3.573928,0.631826,-3.353456,-6.019948,-7.589368,-5.427252,-9.469975,-0.690003,2.244041,2.283950,-8.571716,-5.882870,-4.370163,2.794209,9.872756,0.202153,0.589201,-2.174013,-6.672818,-8.595833,5.052981,3.835437,2.144212,-1.074955,-0.485670,5.509675,0.334947,-1.846591,4.463577,2.993696,-7.621987,8.241746,7.349024,0.123541,0.390068,6.480074,-2.523189,-5.993478,-4.009440,-5.121466,1.521635,7.428117,4.335984,-5.461766,3.072912,5.333694,-6.235086,3.221220,-7.623721,3.064979,-1.729382,-3.035211,4.793965,0.536276,0.364785,-9.441450,3.282971,5.952367,-8.542379,3.261628,-6.919707,0.318367,-7.294625,-8.987847,2.677618,-8.498123,-6.048590,-7.718613,2.964464,1.478150,3.070901,9.812456,7.466857,9.252571,-9.947439,-8.204252,7.083919,4.013373,-5.117136,-5.376992,-9.641848,-1.035210,-4.401298,-6.708739,-4.968938,-1.340805,-8.603827,-3.968963,4.792756,3.309926,-7.891796,-4.068382,5.125203,0.383678,3.288553,6.748506,-7.782745,9.803882,-5.082405,0.006488,1.138686,-5.704455,4.304585,-6.795143,-4.770630,4.217630,0.740784,-0.431591,9.362503,-6.428893,5.284023,-5.903969,3.358250,-1.070690,-2.449772,-6.547475,-5.417988,2.809371,2.860098,-3.437922,4.085782,3.707422,3.160072,0.094554,6.870410,8.716156,9.453239,6.543966,6.521841,-5.258320,8.824404,-6.156776,3.565916,0.969001,7.123353,-2.898207,4.383198,5.350404,8.898647,-3.290694,-4.744955,0.492302,6.530477,0.548239,4.161466,-1.760496,-0.634876,-8.226293,-9.760534,7.378209,7.795624,-0.854226,8.507495,8.609765,-8.485746,0.178898,1.569092,-4.470954,0.442101,-2.014722,9.407908,7.657846,9.282302,6.330670,-7.083265,9.968161,-9.034039,-1.975235,4.075841,-8.568731,7.327392,-5.710024,0.567716,-5.395081,-1.547727,2.621120,0.639583,-2.542359,-9.703842,4.896777,-5.046493,-6.525344,-3.018557,-0.420460,-8.153126,-8.091014,-3.938173,-5.697765,4.487353,3.098314,1.389713,-0.766535,2.271066,0.686603,-7.155747,-3.566072,8.342563,-0.933965,-0.638051,2.430503,9.221593,-9.426858,9.482687,8.963893,2.296933,-6.081706,2.031794,-4.828678,5.920541,-4.432531,-0.055635,-5.344726,1.887364,3.707514,3.763610,-4.833163,-9.200114,3.082082,-2.895333,9.693501,4.674783,-6.819838,-0.790569,7.389089,6.275409,5.119707,2.290931,6.407267,-0.066203,-8.513327,-7.837475,9.103782,1.140641,-7.815014,6.036291,-1.994566,6.499704,-8.365777,1.354435,-5.343033,0.286030,-0.964450,5.215327,-1.293744,-6.595588,-6.944669,3.624845,-1.770158,-7.554158,-8.430332,-5.147551,-2.015515,-7.936125,6.530176,-5.407139,-5.695168,2.902068,-2.692105,-3.939864,2.613474,4.421018,0.721170,5.456789,-0.123752,-3.437496,8.933163,2.959204,1.655533,-0.037059,0.516383,-3.716224,5.025196,-1.193724,-6.086729,-1.872301,0.604675,6.755944,-2.629660,-8.676817,-5.326463,-2.678465,8.945860,8.067259,2.995017,5.759377,2.168472,-0.306199,-0.649742,-1.677618,9.535842,-0.094564,8.682363,-7.788249,-3.250443,-8.046407,1.605871,-2.337322,-2.822140,0.228456,-9.390620,-0.720687,-9.076146,-5.757095,5.589120,-2.756776,7.403935,7.428470,-7.544691,-9.319562,4.509377,-4.418545,1.816789,6.304557,-5.786033,6.710749,-8.592205,-7.117453,-7.128422,8.358698,-9.216605,6.140815,-0.144629,-1.557584,-8.668537,5.985212,7.600838,-5.471274,-8.052916,-9.702700,4.271032,3.038163,8.012537,-3.072376,-5.209193,6.402432,8.551464,-7.906771,1.667489,1.005820,-5.446417,3.212820,-6.981462,-2.306643,-4.990713,6.390615,6.957172,7.604949,8.925490,-4.858450,9.812249,-2.928331,-7.242761,-7.272136,8.334668,0.642692,-7.336107,8.692931,5.982895,6.686822,-3.565930,6.326132,-8.221227,-2.971554,-4.309414,8.643480,-1.044915,9.246675,6.242546,-9.223662,4.387598,-4.084731,5.696889,-5.662044,9.124022,-7.794252,-5.804430,3.237070,-0.234411,-0.846512,1.856258,-8.494621,0.432008,-2.563538,0.288866,7.561764,7.866242,-0.414945,8.761704,6.620954,-5.400765,-0.446814,7.040324,6.144872,2.650001,-4.808323,-9.971397,-5.193706,-2.638131,-5.924628,-7.397956,-7.092868,5.498647,-8.957898,5.890302,4.410732,4.354177,0.218396,-6.880783,-5.738549,-3.494213,-8.281178,0.648057,3.893413,5.775789,3.494784,2.289954,5.013090,-9.229977,-8.662993], dtype = "float32")#candidate|5229|(1848,)|const|float32
bop_5230 = relay.bitwise_and(var_5222.astype('uint32'), relay.reshape(const_5229.astype('uint32'), relay.shape_of(var_5222))) # shape=(1848,)
func_4720_call = mod.get_global_var('func_4720')
func_4723_call = mutated_mod.get_global_var('func_4723')
var_5234 = relay.var("var_5234", dtype = "float64", shape = (1, 72))#candidate|5234|(1, 72)|var|float64
const_5235 = relay.const([-6,-10,2,-4,-7,-7,-2,-6,-7,6,5,-4,-6,9,6,-5,10,3,-3,-6,2,5,8,-10,2,3,-8,6,-7,1,4,6,-5,-5,-9,-9,4,-4,5,7,2,9,-8,3,9,-9,-1,-6,-5,5,3,5,-7,-10,-1,-2,-7,-4,-5,2,-2,-8,7,9,6,-8,-7,-6,9,9,-1,4,3,6,-6,5,-1,-1,8,2,6,-2,-2,1,4,-3,10,-4,-7,2,-1,1,9,-2,-4,10,-6,-6,1,-10,-7,2,2,10,-6,-3,9,-1,-8,5,7,3,-8,-4,4,5,-8,-9,-3,-10,-3,-8,-8,1,1,-7,1,-6,7,-7,-3,-4,-1,1,-6,-5,-7,1,3,1,-8,-4,8,-8,-9,10,9,-3,1,-6,-9,5,-5,1,-8,2,5,-5,-6,-10,9,-7,7,1,-5,4,8,-10,-6,9,-5,2,-8,3,-1,9,6,-10,-7,3,-8,8,8,8,-8,10,9,5,2,-1,2,4,-7,5,7,-10,6,-10,-3,-10,5,-6,5,-10,-9,1,1,3,2,-6,5,2,1,8,10,6,-10,-10,6,-2,-10,-8,8,3,-9,-7,-4,-6,2,-10,1,-8,10,6,7,-1,-8,-2,-10,6,-3,-4,1,1,-5,6,8,-7,-1,4,-8,6,4,4,-2,-3,-1,-9,8,-8,10,-9,7,7,-8,7,-8,1,3,-5,-6,-10,-7,1,-1,-10,-4,-1,4,10,-1,-7,-4,-10,-4,1,-5,-8,2,-10,8,-5,-9,-3,6,-5,2,5,-10,2,2,-5,4,1,-3,-6,3,3,-8,4,-2,1,9,-10,1,-3,5,9,-1,3,5,5,1,-9,6,2,-2,-4,9,2,-7,-2,-4,2,-5,-1,4,-6,6,5,1,-2,2,-8,1,10,6,2,5,7,-9,-10,-4,10,-4,-2,4,-9,-1,7,6,1,1,2,-5,8,7,7,-4,1,-3,2,6,-6,-8,-8,10,6,3,7,-7,4,-3,-5,-7,5,-9,9,-10,-4,-6,3,-2,-9,-7,4,1,9,-10,-1,1,9,4,-7,1,-3,4,4,6,-4,2,-8,8,7,2,-5,3,-4,9,1,3,-8,-1,4,8,10,-7,-2,-4,1,6,-8,9,6,-3,10,1,4,4,9,7,-3,8,9,4,-9,-5,1,-10,4,6,-1,1,8,7,-7,-9,-9,6,10,-8,-2,7,-9,-2,10,4,-4,-9,2,2,-10,-2,9,-7,-9,1,7,5,-4,-6,3,-8,-7,-1,-2,-10,5,1,9,-4,-2,10,-2,-3,9,3,-1,1,7,-9,-5,3,-9,6,2,-6,5,-4,-10,5,8,3,8,-9,8,-4,-5,2,1,3,10,-10,7,3,-2,-7,6,-4,-8,9,-1,8,10,-1,10,6,5,-4,-1,10,-5,6,8,8,-2,-9,-10,8,-9,-2,-3,6,6,2,8,1,-8,-7,-8,2,3,-3,-10,-4,-10,-7,-7,-2,-4,-8,-6,-6,-7,-1,-9,3,6,-5,-6,5,-7,8,-5,7,-5,-2,4,-5,10,-4,-1,-10,-4,3,-8,-4,9,9,2,-3,-10,8,-2,5,-1,2,-7,-6,9,-8,8,-2,-8,10,8,9,-10,-10,-1,6,-3,1,1,10,7,-9,-2,1,-3,-9,8,-8,6,3,-4,-7,-7,6,8,-2,-6,9,3,7,2,-8,8,9,4,1,-10,5,-9,-9,-9,-1,1,4,-3,-9,-8,5,1,-2,-7,4,-1,7,2,-8,-5,5,-10,-10,-9,-8,-6,-7,-9,3,-9,-3,6,4,-6,-8,-1,6,3,6,5,-2,-9,9,7,-1,-8,9,-4,3,-3,-10,-5,10,4,-1,2,-9,4,8,-1,8,-3,5,-9,-7,9,-9,-4,4,4,7,3,-6,6,-8,3,8,2,3,-2,-4,-10,9,3,-1,3,5,-8,2,-5,10,-6,-3,-2,8,9,-6,6,-2,-1,5,5,-9,-1,4,1,1,4,6,10,-9,5,-7,-3,9,4,-7,4,-1,-6,2,-10,-5,-8,-8,4,-9,-7,9,7,-3,1,-9,3,-3,-4,-8,-7,9,-5,-6,-6,-7,1,-2,-3,-9,-4,-1,-8,-8,7,-7,1,2,4,-5,10,5,10,-10,-2,-9,-9,3,-5,10,-7,8,4,1,7,8,10,1,-1,-10,1,-9,-10,-8,5,8,-4,9,-6,5,8,3,9,5,6,-4,7,-9,-8,-3,-4,5,5,7,-6,-9,10,-2,7,-10,7,3,-7,-2,-1,10,-3,-5,-10,-4,-9,-3,-4,-7,-4,-7,8,6,4,4,10,1,8,-4,10,-7,8,7,4,-6,-8,-1,4,-6,5,2,-4,1,-8,-10,-10,7,-6,-3,-8,-1,3,-5,-1,-5,-10,6,-1,6,1,-8,-5,-2,-1,1,5,8,-6,-6,5,-7,-10,9,-9,9,-2,-2,5,-8,-8,-8,3,-10,-10,-7,-8,1,7,-9,4,-6,-8,3,-2,-10,2,-3,3,-3,2,7,4,9,-8,10,8,-10,6,-8,6,9,3,2,-7,-8,-5,-10,4,4,10,6,10,2,1,4,-7,5,7,7,-2,-7,-3,10,8,9,-6,6,3,3,10,-3,-2,-1,8,7,5,1,-10,-5,-4,6,3,7,-10,2,-10,8,-7,-3,7,7,3,-1,-10,1,3,4,-9,-4,3,-8,-2,5,5,6,-1,3,-2,6,1,4,5,1,-10,3,-10,-4,-7,-4,10,-2,3,-4,-10,-7,-8,-6,-10,6,-10,1,10,-4,6,-9,6,-7,9,-5,2,1,-2,4,1,-2,-9,-3,-10,-5,-5,-3,6,-1,3,-5,8,6,2,-2,10,-8,-8,-7,7,3,8,4,-7,-10,-1,-7,2,8,1,-9,-5,9,5,2,-2,6,2,-8,7,1,-5,-8,2,-1,6,-4,-4,-6,3,-2,2,6,10,-7,2,-6,8,3,9,-3,-1,-8,1,3,2,8,-5,-10,-8,3,-4,-6,4,2,-1,-10,1,-7,-6,6,-6,-1,-1,-8,-9,9,-2,6,2,3,1,8,-3,-4,-5,-6,7,2,10,6,-10,3,-8,2,-8,-7,-8,1,-10,-2,-7,6,8,9,7,-9,10,3,-2,-10,-9,9,2,1,-9,6,3,-8,-9,1,4,-7,4,2,4,-8,1,-2,-9,6,8,-2,6,-4,-8,-3,6,7,-9,-8,1,7,3,-6,4,10,3,-5,-3,4,-3,-4,-8,-1,-9,3,2,1,-1,8,8,9,10,-2,2,-4,6,6,-10,2,-3,-9,-5,10,9,1,-6,3,-4,-8,-3,-3,-2,-3,-3,2,-10,-1,-1,-10,3,-10,-2,6,7,4,8,-1,6,3,-10,5,3,-4,-1,7,-6,2,7,7,1,6,-9,-2,-10,4,9,10,7,8,-8,9,-1,5,-10,2,4,-3,-2,9,9,3,-3,1,9,-6,-4,3,10,3,-10,1,2,6,8,-7,-9,4,5,1,-5,-3,6,6,3,5,-4,-7,2,-2,1,9,10,-1,1,1,3,-6,-9,4,-2,7,-5,4,-10,-8,-6,10,-10,-2,-4,-6,-4,-5,-5,-7,8,-4,-8,8,3,-8,3,-4,8,-4,7,-1,-2,-6,-7,-5,4,-8,6,-2,-2,-7,-6,-7,-8,-9,1,-8,8,4,-6,8,8,4,-2,4,-5,-10,-5,9,10,-8,10,5,-9,-1,8,5,-7,-10,7,6,9,5,5,-5,2,5,9,-9,-9,-3,4,-10,9,2,6,-8,-6,-8,6,5,7,1,-9], dtype = "int64")#candidate|5235|(1440,)|const|int64
call_5233 = relay.TupleGetItem(func_4720_call(relay.reshape(var_5234.astype('float64'), [72,]), relay.reshape(const_5235.astype('int64'), [1440,]), ), 1)
call_5236 = relay.TupleGetItem(func_4723_call(relay.reshape(var_5234.astype('float64'), [72,]), relay.reshape(const_5235.astype('int64'), [1440,]), ), 1)
output = relay.Tuple([call_5209,call_5221,bop_5230,call_5233,var_5234,const_5235,])
output2 = relay.Tuple([call_5210,call_5223,bop_5230,call_5236,var_5234,const_5235,])
func_5257 = relay.Function([var_5222,var_5234,], output)
mod['func_5257'] = func_5257
mod = relay.transform.InferType()(mod)
var_5258 = relay.var("var_5258", dtype = "float32", shape = (1848,))#candidate|5258|(1848,)|var|float32
var_5259 = relay.var("var_5259", dtype = "float64", shape = (1, 72))#candidate|5259|(1, 72)|var|float64
output = func_5257(var_5258,var_5259,)
func_5260 = relay.Function([var_5258,var_5259,], output)
mutated_mod['func_5260'] = func_5260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2585_call = mod.get_global_var('func_2585')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_5299 = func_2585_call()
call_5300 = func_2585_call()
output = call_5299
output2 = call_5300
func_5306 = relay.Function([], output)
mod['func_5306'] = func_5306
mod = relay.transform.InferType()(mod)
output = func_5306()
func_5307 = relay.Function([], output)
mutated_mod['func_5307'] = func_5307
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5356 = relay.const([[[-8.690379]],[[-9.042550]],[[-7.829003]],[[-6.362851]],[[6.646009]],[[-2.945505]],[[-5.328235]],[[7.772027]],[[-9.661758]]], dtype = "float32")#candidate|5356|(9, 1, 1)|const|float32
uop_5357 = relay.acos(const_5356.astype('float32')) # shape=(9, 1, 1)
bop_5359 = relay.not_equal(uop_5357.astype('bool'), relay.reshape(const_5356.astype('bool'), relay.shape_of(uop_5357))) # shape=(9, 1, 1)
bop_5366 = relay.logical_xor(bop_5359.astype('int16'), relay.reshape(const_5356.astype('int16'), relay.shape_of(bop_5359))) # shape=(9, 1, 1)
func_1997_call = mod.get_global_var('func_1997')
func_2001_call = mutated_mod.get_global_var('func_2001')
const_5370 = relay.const([-3.163889,-1.213998,9.675938,-8.395621,-6.322876,7.992116,0.381205,-5.221340,-9.582180,-5.125829,-1.866151,1.162345,-8.254661,7.398036,7.281540,6.210907,-5.630735,9.857386,-8.750109,-8.891951,4.676400,-7.036348,-6.021660,-0.501691,-4.911904,-0.661826,-3.526855,-0.015854,-1.158048,-9.303543,-3.664726,7.086872,7.031371,-4.366464,1.058226,-8.755564,5.359204,2.439348,-6.299184,-2.808051,-5.184302,1.702929,-7.685653,7.049950,-2.048855,7.643474,0.840582,0.865512,6.506053,0.081426,-7.618791,-0.808312,-9.315558,2.080384,3.921685,-7.661101,9.883938,5.521975,7.149402,-5.156208,-3.693321,-5.191372,-4.965098,1.138572,-6.300836,-8.188998,-0.673167,-9.954541,-8.062650,8.519632,2.542706,5.547612], dtype = "float64")#candidate|5370|(72,)|const|float64
var_5371 = relay.var("var_5371", dtype = "float32", shape = (1040, 1))#candidate|5371|(1040, 1)|var|float32
call_5369 = relay.TupleGetItem(func_1997_call(relay.reshape(const_5370.astype('float64'), [4, 3, 6]), relay.reshape(var_5371.astype('float32'), [1040,]), relay.reshape(const_5370.astype('float64'), [4, 3, 6]), ), 1)
call_5372 = relay.TupleGetItem(func_2001_call(relay.reshape(const_5370.astype('float64'), [4, 3, 6]), relay.reshape(var_5371.astype('float32'), [1040,]), relay.reshape(const_5370.astype('float64'), [4, 3, 6]), ), 1)
bop_5389 = relay.logical_or(bop_5359.astype('bool'), var_5371.astype('bool')) # shape=(9, 1040, 1)
output = relay.Tuple([bop_5366,call_5369,const_5370,bop_5389,])
output2 = relay.Tuple([bop_5366,call_5372,const_5370,bop_5389,])
func_5392 = relay.Function([var_5371,], output)
mod['func_5392'] = func_5392
mod = relay.transform.InferType()(mod)
mutated_mod['func_5392'] = func_5392
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5393 = relay.var("var_5393", dtype = "float32", shape = (1040, 1))#candidate|5393|(1040, 1)|var|float32
func_5392_call = mutated_mod.get_global_var('func_5392')
call_5394 = func_5392_call(var_5393)
output = call_5394
func_5395 = relay.Function([var_5393], output)
mutated_mod['func_5395'] = func_5395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_5413 = relay.TupleGetItem(func_2225_call(), 0)
call_5414 = relay.TupleGetItem(func_2227_call(), 0)
output = relay.Tuple([call_5413,])
output2 = relay.Tuple([call_5414,])
func_5415 = relay.Function([], output)
mod['func_5415'] = func_5415
mod = relay.transform.InferType()(mod)
output = func_5415()
func_5416 = relay.Function([], output)
mutated_mod['func_5416'] = func_5416
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5426 = relay.var("var_5426", dtype = "float64", shape = (12, 14, 1))#candidate|5426|(12, 14, 1)|var|float64
uop_5427 = relay.cosh(var_5426.astype('float64')) # shape=(12, 14, 1)
output = relay.Tuple([uop_5427,])
output2 = relay.Tuple([uop_5427,])
func_5432 = relay.Function([var_5426,], output)
mod['func_5432'] = func_5432
mod = relay.transform.InferType()(mod)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5433 = relay.var("var_5433", dtype = "float64", shape = (12, 14, 1))#candidate|5433|(12, 14, 1)|var|float64
func_5432_call = mutated_mod.get_global_var('func_5432')
call_5434 = func_5432_call(var_5433)
output = call_5434
func_5435 = relay.Function([var_5433], output)
mutated_mod['func_5435'] = func_5435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2693_call = mod.get_global_var('func_2693')
func_2695_call = mutated_mod.get_global_var('func_2695')
call_5473 = relay.TupleGetItem(func_2693_call(), 6)
call_5474 = relay.TupleGetItem(func_2695_call(), 6)
uop_5477 = relay.log2(call_5473.astype('float32')) # shape=(840, 1)
uop_5479 = relay.log2(call_5474.astype('float32')) # shape=(840, 1)
func_2430_call = mod.get_global_var('func_2430')
func_2432_call = mutated_mod.get_global_var('func_2432')
const_5484 = relay.const([7.897980,-5.425022,7.802470,-4.357537,-7.385713,7.863975,2.598775,-2.851570,-9.299843,-5.555339,3.801035,3.067706,1.845360,-8.859099,-1.481634,8.008521,8.125079,-9.500259,-1.177226,-3.084676,-8.375635,-6.370080,3.253411,5.965772,-7.799407,-6.582980,-6.908014,-1.265306,5.677533,0.717024,9.360019,1.200606,-6.614819,4.369586,-4.787161,9.448229,3.773787,9.495153,-3.893615,-4.884399,-3.417265,-7.128300,-5.913214,-8.356422,1.276811,2.094340,1.166187,-1.724549,2.580705,-4.198698,2.316845,-3.688701,6.551353,4.173359,-1.408507,-9.652151,-3.591464,-6.743246,2.826992,1.672847,-4.663162,5.684019,8.651792,9.923019,-7.513358,8.475483,9.965748,-6.496704,5.216856,-1.519387,-1.401288,-3.912010,9.036922,2.721047,-0.302889,-8.238822,-7.933514,-9.088762,6.913691,-7.689141,0.052319,1.979930,8.374390,-3.210553,-6.054072,2.812829,8.589747,1.125892,-4.211839,-9.054547,9.349219,8.935167,-6.838015,-4.422327,1.410398,6.054602,-4.253376,5.005529,1.589298,-1.859369,-0.893949,-5.623535,2.741978,-4.943056,-4.150427,-2.163287,6.169320,0.872739,4.150465,5.149885,-6.672957,-5.992446,-4.529992,6.806671,9.915439,0.532908,5.614165,9.614677,2.357303,-1.100093,-8.225305,-9.573681,-1.363099,-1.134886,8.063828,-1.701921,-2.630358,-9.214480,-9.919947,-1.982858,6.191262,1.970609,2.611624,1.854314,-1.022238,8.104289,0.835051,9.713487,3.641492,4.008510,6.438042,4.927395,-6.199499,-6.981190,7.721766,-9.375957,-5.209424,7.821457,8.016204,0.344422,-4.758377,-4.768648,-8.756789,9.479905,4.969280,-6.134752,-3.300061,4.375788,0.045732,9.997925,-9.343643,2.092521,5.442668,7.956544,0.062829,-0.934949,5.274206,3.739189,-3.948530,4.785131,-5.890022,5.734940,7.212992,1.027481,-9.615109,5.450487,1.943123,-7.608657,7.636339,4.187068,-4.668139,-7.176163,-2.035988,2.891578,-9.611319,3.113279,-1.807458,7.106599,5.381082,-0.298302,0.887852,-0.618080,-6.544790,5.126881,-0.895888,-5.177982,4.403536,-7.472640,8.486720,-5.101826,8.410909,-9.246145,-8.434065,8.642070,-1.643281,-0.888320,-4.821445,-4.366202,0.698910,-9.873468,-9.327756,-7.119750,-5.320960,-6.535311,-2.165451,0.253994,-5.126252,2.007708,-4.817082,-3.507237,-5.909398,-3.044599,3.954833,1.730271,8.012956,3.394675,-2.475821,7.374982,-5.870392,-7.918179,-4.555317,-2.114741,1.225370,-5.703870,5.122145,2.842217,3.732234,-3.955186,-1.791338,2.455075,1.089409,-5.797333,-4.538345,-3.028418,3.578153,3.700139,8.538431,-0.840185,8.131853,-7.650788,4.683074,-8.295771,7.517328,1.258940,-1.313407,6.764096,3.330277,3.961473,5.601633,0.380794,5.943386,4.819373,-6.565343,5.517266,-2.355807,-6.492507,2.524565,-5.261405,6.849861,5.982465,-5.741670,-9.463865,-1.882826,6.668370,9.427445,-1.073297,6.061989,7.628418,9.763045,3.810292,-3.398656,7.706512,-1.244741,7.386725,5.694899,5.155790,5.012470,-4.516790,8.272268,-8.048932,-8.046962,9.931863,-7.545448,8.552822,-9.242381,2.902839,1.361784,-5.881341,-4.461114,1.766780,-9.413789,8.463039,-2.933469,2.893963,6.209988,8.795663,-1.024009,3.035139,2.226873,-5.286960,2.955453,5.006062,-1.736570,-8.297127,6.715089,8.311326,-6.048511,6.259688,-9.672549,-4.792483,-1.350150,2.076443,8.357598,8.171959,0.511036,-4.533391,0.808951,1.843420,3.266664,-2.837412,-0.737824,3.503136,-8.683693,1.399996,2.311485,-4.158057,8.426278,8.868169,-9.834056,-0.732697,-0.117152,-7.633830,-1.097536,-2.208377,5.128869,-3.007240,-6.453987,-4.750205,-3.441424,2.091734,-2.122728,-5.703890,3.097447,-9.302985,-4.371620,7.777929,2.869955,7.216573,-6.086916,1.451865,-0.197046,2.928089,6.906354,-3.860349,2.406174,-1.005028,3.454720,-1.606401,-4.788546,9.368966,6.713239,2.090217,-6.530650,-6.549120,-8.783051,5.139063,3.589048,5.710053,-4.575685,-1.756086,5.177711,4.584668,9.674631,9.824737,-1.653120,7.433001,-2.887341,-7.356654,5.364006,4.164702,9.959373,-2.810258,7.915162,8.349169,2.716887,0.816550,-4.394369,-9.121576,-6.943586,1.487330,-5.520153,-9.239529,-0.033475,1.859954,3.398099,5.612106,3.164206,8.174180,-1.858767,5.012470,6.458907,-2.970199,4.283559,0.400684,0.644649,6.121387,6.762834,-8.233596,-3.573073,3.443536,-8.365529,-2.507420,0.152113,-9.864041,0.484832,6.288027,-2.068666,-5.209743,-8.529729,-5.679513,9.352152,9.013468,8.706024,-4.843819,-0.731115,-2.599536,-5.696586,-8.051188,-3.364027,9.790444,-3.256656,-4.491102,6.487859,7.287429,7.416728,1.106776,0.471428,6.134771,-1.593818,-4.189002,-6.342115,4.478637,-7.549285,-7.160475,-1.158037,-4.874705,-7.859573,8.715391,6.387943,-6.603932,-8.106143,6.649988,-8.199399,4.975561,-3.960652,2.319581,-1.491761,-6.548787,3.579800,2.330031,-2.207657,-6.316216,9.025468,-4.945362,-9.489038,6.503487,-9.218657,-8.214876,2.840080,0.482183], dtype = "float32")#candidate|5484|(480,)|const|float32
call_5483 = func_2430_call(relay.reshape(const_5484.astype('float32'), [16, 5, 6]))
call_5485 = func_2430_call(relay.reshape(const_5484.astype('float32'), [16, 5, 6]))
uop_5490 = relay.acos(const_5484.astype('float32')) # shape=(480,)
bop_5497 = relay.greater_equal(uop_5477.astype('bool'), uop_5490.astype('bool')) # shape=(840, 480)
bop_5500 = relay.greater_equal(uop_5479.astype('bool'), uop_5490.astype('bool')) # shape=(840, 480)
func_3737_call = mod.get_global_var('func_3737')
func_3739_call = mutated_mod.get_global_var('func_3739')
call_5501 = relay.TupleGetItem(func_3737_call(), 0)
call_5502 = relay.TupleGetItem(func_3739_call(), 0)
bop_5503 = relay.power(bop_5497.astype('float64'), uop_5477.astype('float64')) # shape=(840, 480)
bop_5506 = relay.power(bop_5500.astype('float64'), uop_5479.astype('float64')) # shape=(840, 480)
uop_5509 = relay.exp(bop_5497.astype('float32')) # shape=(840, 480)
uop_5511 = relay.exp(bop_5500.astype('float32')) # shape=(840, 480)
output = relay.Tuple([call_5483,call_5501,bop_5503,uop_5509,])
output2 = relay.Tuple([call_5485,call_5502,bop_5506,uop_5511,])
func_5532 = relay.Function([], output)
mod['func_5532'] = func_5532
mod = relay.transform.InferType()(mod)
output = func_5532()
func_5533 = relay.Function([], output)
mutated_mod['func_5533'] = func_5533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3467_call = mod.get_global_var('func_3467')
func_3469_call = mutated_mod.get_global_var('func_3469')
call_5558 = func_3467_call()
call_5559 = func_3467_call()
output = relay.Tuple([call_5558,])
output2 = relay.Tuple([call_5559,])
func_5576 = relay.Function([], output)
mod['func_5576'] = func_5576
mod = relay.transform.InferType()(mod)
output = func_5576()
func_5577 = relay.Function([], output)
mutated_mod['func_5577'] = func_5577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3737_call = mod.get_global_var('func_3737')
func_3739_call = mutated_mod.get_global_var('func_3739')
call_5602 = relay.TupleGetItem(func_3737_call(), 0)
call_5603 = relay.TupleGetItem(func_3739_call(), 0)
var_5610 = relay.var("var_5610", dtype = "float32", shape = (3, 11, 12))#candidate|5610|(3, 11, 12)|var|float32
bop_5611 = relay.equal(call_5602.astype('bool'), relay.reshape(var_5610.astype('bool'), relay.shape_of(call_5602))) # shape=(3, 11, 12)
bop_5614 = relay.equal(call_5603.astype('bool'), relay.reshape(var_5610.astype('bool'), relay.shape_of(call_5603))) # shape=(3, 11, 12)
output = relay.Tuple([bop_5611,])
output2 = relay.Tuple([bop_5614,])
func_5615 = relay.Function([var_5610,], output)
mod['func_5615'] = func_5615
mod = relay.transform.InferType()(mod)
var_5616 = relay.var("var_5616", dtype = "float32", shape = (3, 11, 12))#candidate|5616|(3, 11, 12)|var|float32
output = func_5615(var_5616)
func_5617 = relay.Function([var_5616], output)
mutated_mod['func_5617'] = func_5617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3961_call = mod.get_global_var('func_3961')
func_3962_call = mutated_mod.get_global_var('func_3962')
call_5637 = relay.TupleGetItem(func_3961_call(), 2)
call_5638 = relay.TupleGetItem(func_3962_call(), 2)
func_3737_call = mod.get_global_var('func_3737')
func_3739_call = mutated_mod.get_global_var('func_3739')
call_5653 = relay.TupleGetItem(func_3737_call(), 0)
call_5654 = relay.TupleGetItem(func_3739_call(), 0)
func_5392_call = mod.get_global_var('func_5392')
func_5395_call = mutated_mod.get_global_var('func_5395')
var_5662 = relay.var("var_5662", dtype = "float32", shape = (40, 26))#candidate|5662|(40, 26)|var|float32
call_5661 = relay.TupleGetItem(func_5392_call(relay.reshape(var_5662.astype('float32'), [1040, 1])), 2)
call_5663 = relay.TupleGetItem(func_5395_call(relay.reshape(var_5662.astype('float32'), [1040, 1])), 2)
uop_5675 = relay.sin(var_5662.astype('float32')) # shape=(40, 26)
var_5685 = relay.var("var_5685", dtype = "float32", shape = (40, 26))#candidate|5685|(40, 26)|var|float32
bop_5686 = relay.add(uop_5675.astype('float32'), relay.reshape(var_5685.astype('float32'), relay.shape_of(uop_5675))) # shape=(40, 26)
output = relay.Tuple([call_5637,call_5653,call_5661,bop_5686,])
output2 = relay.Tuple([call_5638,call_5654,call_5663,bop_5686,])
func_5696 = relay.Function([var_5662,var_5685,], output)
mod['func_5696'] = func_5696
mod = relay.transform.InferType()(mod)
var_5697 = relay.var("var_5697", dtype = "float32", shape = (40, 26))#candidate|5697|(40, 26)|var|float32
var_5698 = relay.var("var_5698", dtype = "float32", shape = (40, 26))#candidate|5698|(40, 26)|var|float32
output = func_5696(var_5697,var_5698,)
func_5699 = relay.Function([var_5697,var_5698,], output)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4583_call = mod.get_global_var('func_4583')
func_4584_call = mutated_mod.get_global_var('func_4584')
call_5704 = relay.TupleGetItem(func_4583_call(), 0)
call_5705 = relay.TupleGetItem(func_4584_call(), 0)
func_1997_call = mod.get_global_var('func_1997')
func_2001_call = mutated_mod.get_global_var('func_2001')
var_5730 = relay.var("var_5730", dtype = "float64", shape = (72,))#candidate|5730|(72,)|var|float64
const_5731 = relay.const([-4.261580,9.033306,-3.981763,-2.940378,-6.950992,-1.795304,6.939574,4.788602,4.293692,7.051057,0.754626,1.508289,-6.683197,9.184791,9.710452,7.696239,-3.684752,0.955818,-5.707274,6.185128,9.560831,3.157170,6.133217,5.866935,0.622409,6.341758,-8.242976,-8.724965,-1.687428,-2.996497,9.508009,-3.457508,-3.282704,-9.564306,2.281341,3.060760,4.702392,2.119893,-4.898456,6.644587,7.177358,-5.792823,-5.488458,-9.791316,-3.057819,-8.677732,2.750125,8.586164,-3.257329,-8.165696,1.543747,-6.845795,0.416665,-7.211235,-4.551539,1.065684,-0.380203,-0.462395,4.428103,-6.668208,0.827475,1.302122,4.501527,7.763010,5.693261,8.148443,3.087617,6.876280,-9.872073,-9.921567,-4.390672,-7.074512,-2.810621,1.421726,-5.554161,5.440953,-9.132457,-7.314367,-1.064853,1.493889,7.596672,-7.159425,-4.537338,4.373617,6.542814,-1.995414,-1.760848,1.614101,5.161099,-5.215217,-3.861700,6.862972,-1.175413,-2.155622,9.422702,-1.965847,-3.653511,-1.972376,6.224707,5.316033,5.897232,-3.494649,5.536909,-9.321292,-6.095217,-1.000782,9.567662,4.208402,5.486898,-9.249105,6.139567,0.385327,8.201598,-6.678134,-2.079795,-5.538568,7.354385,5.184970,-2.458941,5.751627,-6.935097,2.692918,-9.551768,8.153834,-9.088571,-5.915226,0.207364,0.509069,5.993628,9.142561,-2.168963,-3.561215,-7.130320,-7.170772,6.425739,2.903539,2.487429,5.926025,6.135484,8.539722,-6.103039,5.235386,5.982695,9.031781,-8.054425,-8.123410,-6.166618,7.131379,-9.932865,9.483183,7.959289,0.888595,2.158299,-3.136427,-8.132373,-7.643844,-0.063949,-6.747080,-6.397631,-0.666098,-4.203522,7.308881,7.891593,7.825059,-5.502818,-4.497638,5.539783,-5.502367,-2.236721,3.495112,-1.741692,-5.101906,0.956146,5.318199,-0.476824,-8.430408,-3.843040,6.195383,-4.905284,-0.461216,1.963329,9.732971,-2.307764,4.708282,-9.030991,7.936134,-2.808293,3.682281,-4.311397,3.227558,3.496027,5.259320,-6.700669,5.984816,6.050106,1.410706,-2.744945,5.701322,5.699568,-9.259785,0.644712,-6.799380,8.342498,9.111065,-4.723012,-9.685094,3.779317,-9.846101,-9.388227,-9.969383,2.732995,-1.996419,-5.071364,-1.528336,-6.973908,-2.062292,6.857442,8.877446,-9.606036,-2.805418,6.834721,-3.922983,4.189556,-7.791438,4.255037,1.055763,4.615263,-1.187661,-7.748609,3.987641,8.817203,-9.326174,-5.541164,1.974418,4.131208,-7.451683,-7.451909,3.558397,2.224492,5.826785,-0.938652,0.822269,-9.395707,-2.064771,-6.711007,9.829627,2.606153,-6.616930,7.884834,-1.228340,-1.759011,-1.350379,-7.345602,-8.188787,5.916890,-0.764421,-8.519339,3.556837,9.349695,2.811199,9.163492,-3.530655,9.610809,4.905392,-3.422400,5.449901,-1.108315,-1.338400,5.402707,-3.780184,-4.097651,-6.097440,-4.692358,-1.204954,7.331796,4.565077,-3.522318,1.183093,3.031994,2.103652,8.502386,-7.626352,-3.738339,-4.506798,0.936034,-0.142478,4.888065,-6.509389,4.150451,4.373841,6.625813,9.117191,-6.966406,4.538538,9.371878,-4.656557,0.796136,-1.058660,9.064741,1.959514,6.822119,-9.822811,-4.171932,-4.911211,6.606942,2.767261,5.028397,8.754354,1.931093,4.179277,0.327205,0.088328,-1.489613,-7.393660,-1.754889,-0.898962,9.309808,-7.684508,3.605519,9.588406,5.762252,2.078537,-6.648361,-8.894032,8.000585,-5.717786,4.907728,4.608760,-6.559284,5.445587,0.592819,-7.498744,8.585876,4.648896,-4.405306,4.747580,7.725538,-5.754808,8.615180,9.268437,-4.774291,6.238258,-8.063324,9.284479,-7.408070,4.187974,-4.036464,5.478990,2.940362,-8.640338,3.462729,9.700589,1.003459,-9.596700,-5.330149,3.883187,-8.004035,2.980926,-0.047615,3.914403,7.719921,-3.687810,-0.155529,0.084726,-2.094269,9.302019,-0.651600,-2.952904,-3.401392,-0.154272,3.279853,5.448180,3.069658,-6.997762,2.488422,-4.609030,-3.902331,-3.420853,-3.732050,-4.924064,-5.041284,7.570284,-2.361022,-3.970509,-9.626288,-4.511622,-7.573910,3.317709,-3.528052,8.961487,5.242819,-2.881417,9.224290,3.976791,8.262696,-4.431659,4.934198,-9.363132,-6.086808,3.095486,2.497768,-1.928475,7.315275,3.177602,4.001765,-4.137918,0.255852,-7.279307,0.214697,-6.297880,-3.468601,-7.324576,-0.217505,4.304905,1.885992,-2.236361,-5.687445,9.746748,-0.838754,7.466847,0.559501,3.859990,8.367029,1.121167,4.971172,8.736512,8.422684,1.873281,-6.177974,-0.110580,0.283374,-5.863400,9.861643,-8.121931,8.571386,4.272042,5.893494,4.252224,-4.713184,4.526633,-1.999679,5.251813,4.526797,-8.550314,-8.015208,2.645425,4.088247,7.182272,8.892842,-8.094380,-6.476408,-5.423993,-1.650770,-8.552679,-1.953503,-2.505457,-3.652690,-9.981496,0.166613,5.532417,5.560218,4.771329,-6.471190,7.369843,-1.034152,-1.148072,3.690815,-8.456261,-5.525503,2.701305,2.503309,-7.198311,7.005130,8.395432,3.706286,-9.861820,4.240674,7.511811,7.190495,-2.015974,-3.713759,-6.468481,4.842526,-6.874786,1.327992,-5.348545,9.978520,-0.435298,-9.933975,0.793473,-3.959012,-3.135057,-2.089589,6.438191,2.700608,5.495022,7.429373,1.132530,7.619283,-0.617953,8.020523,6.695896,1.584545,-5.256125,9.327392,5.495982,6.663694,4.915002,9.211838,8.292156,-0.800949,4.021046,-3.628278,-2.620094,-3.824835,-3.681037,-2.435477,-8.326529,6.807001,6.267967,1.494638,-9.042292,-2.536097,-1.792994,2.757406,-0.417427,-1.632462,7.240270,2.518539,-6.866209,-3.452891,7.086707,-7.580836,1.862537,-6.357712,-7.776210,9.678462,7.886859,0.149828,-5.927499,6.487848,-8.044712,-8.025164,5.217425,-6.649034,9.749392,-4.198835,5.889898,-5.677931,1.208810,0.934368,-4.622008,-4.777229,-9.240123,8.598796,-4.837106,-8.400010,3.406487,-5.633159,-2.823600,-0.756946,-4.793913,-0.146221,-5.593900,-4.385947,-6.756524,3.754883,-7.720695,-7.306486,2.907226,0.870888,-6.358619,5.848749,-0.215405,-6.812276,-4.722285,-0.675791,-5.351028,-8.354090,-6.140649,-4.775644,-3.771269,0.688612,1.781174,8.201783,-2.850091,3.608013,-7.976390,-3.074435,-2.421520,4.656089,3.753929,9.664428,3.476706,-2.687179,-0.734643,-5.702736,7.440620,-9.713822,5.387056,8.912986,-9.024711,-4.705879,9.230763,-1.207657,-2.465186,-1.486259,7.586374,8.291679,2.131190,-9.079805,-4.096112,-1.163341,6.776665,-4.355715,8.991206,-2.097598,-4.054603,-4.025254,4.061243,-0.598951,3.584868,5.795570,-5.703161,0.592328,3.042125,-9.850593,-7.668187,5.103052,5.354272,-6.699018,9.352731,-8.250510,0.853062,-8.581586,3.665883,-9.784660,9.058743,-7.578137,-7.013325,-0.540128,8.048025,8.257725,4.775286,0.892921,8.074962,1.273606,-6.026805,-6.281614,7.537420,-1.896528,5.701087,3.064450,9.004054,0.933000,7.435875,7.751374,-9.235262,-7.740764,0.878485,-8.438953,9.602443,3.120687,8.346247,5.278433,-0.184630,-8.727321,6.188242,4.126860,6.403189,-5.487817,-2.547178,1.866814,8.648468,-4.587201,-1.566751,7.223016,6.643477,3.421041,-9.561112,2.469857,2.659671,4.043368,3.045471,4.323642,0.659649,4.291176,0.501940,-2.050956,-1.758647,3.356117,9.765987,-2.570800,0.198929,4.282922,-1.703837,7.013851,-7.223701,-4.436242,9.952426,-4.061035,-7.630799,-4.722857,7.832691,-5.113052,5.668436,-6.979564,-4.379730,6.108745,-4.350595,9.866179,5.942283,-2.124793,1.163636,2.169231,-4.689468,4.907193,8.573692,-1.486959,-2.687828,-2.785239,-2.729040,-0.448131,9.090979,1.266502,5.046283,9.786370,0.296631,-0.610304,-2.010290,8.715602,-9.700140,4.292485,-1.173852,-2.268702,-2.242010,-5.743708,8.358493,5.782889,8.915203,-9.130196,-7.050871,6.475897,-0.760988,-6.783933,-9.638144,2.451377,6.983186,-0.151694,6.389132,-7.789649,-4.832366,-4.984638,-5.048359,-6.340138,-4.930038,-3.982453,-0.996298,-2.965806,0.163011,-6.876303,-8.224809,-1.773871,-9.336288,9.373534,8.566811,-9.278563,4.180205,3.668983,-6.728747,7.680434,3.240473,5.141380,9.493202,-0.206112,4.421070,-0.830501,-8.921081,0.276126,-6.585864,-6.277672,-0.300970,0.179642,-7.265943,4.336165,-7.845090,3.316010,-3.785663,-1.920836,9.988405,9.792336,8.328577,-0.384287,-7.173222,-0.137774,3.286736,3.850534,8.450479,7.945721,2.980664,2.262479,3.511277,4.062030,3.387605,0.061515,-7.563102,9.414903,2.783096,-8.559316,8.295606,-7.359974,2.356702,9.369230,-5.188099,-1.526319,9.150126,3.689145,9.006801,6.861196,-1.548460,1.747064,3.222445,-6.362431,-0.492947,-4.768566,-2.044444,-4.631317,-0.425220,-9.812722,-7.089888,4.353890,-7.662559,-3.380108,9.766095,2.252613,7.949293,3.484413,8.426035,0.492951,-9.225200,-2.513154,-4.285448,-1.670187,-4.853744,8.334100,-6.019135,-7.935676,9.342120,-2.109007,-5.173325,4.811091,-1.640853,-1.956086,-2.783771,2.013117,-8.110359,9.537186,9.727412,1.973262,0.722483,-7.270282,6.121608,-2.213530,-7.033813,-5.071094,-3.941379,-1.068971,-8.289616,7.069529,-6.747689,3.250934,-6.516937,3.489934,-9.297742,8.110129,8.507638,2.122265,-1.569771,3.218509,-4.610981,-7.435248,0.495291,9.475029,3.247517,5.396916,-9.118037,-1.511432,4.309158,-3.866805,8.332481,8.319580,6.774289,3.895068,1.817303,-1.675505,-2.244646,-6.194818,1.886707,1.025540,-3.892033,-4.154712,3.624183,3.387845,-3.147836,6.824570,8.348557,-9.602631,8.479741,3.762029,1.858661,9.405452,-6.761981,1.893464,8.230427,-1.549627,5.020417,-8.896899,-7.159285,-0.982848,3.759413,-6.685400,-6.809086,-1.408324,-2.547629,-4.147109,1.007836,-9.888496,-2.466243,-9.528803,-5.450099,8.315254,9.532989,0.911169,-3.210625,1.470164,3.225569,-1.712959,-1.296262,9.063305,-6.296495,-4.397644,4.746010,5.454620,0.212457,-3.820250,4.757666,8.453407,5.214445,-5.423528,-1.302544,-7.839496,6.189855,-4.964326,6.843430,-2.137797,6.359400,5.583535,3.243159,-5.362616,-4.391169,5.849125,9.751182,5.689479,6.776246,-8.422614,2.678390,5.125073,6.181328,-2.000067,4.262651,8.616995,-6.032563,-3.388028,3.020849,-2.241570,6.138087,7.121542,-8.287991,8.551078,-3.381045,-2.131592,-5.812974,-5.825306,5.138869,-5.720681,-4.360217,1.715192,4.387464,-7.302244,0.694505,-2.771665,-2.465168,8.903810,-7.653983,-6.253738,-6.076098,-1.290044,-9.877561,-0.861286,-9.866367,9.174642,-6.557165,8.348020,-6.109931,7.157154,-8.838615,-5.590196,6.955498,5.812648,-1.689304,2.707064,-4.121707,-6.531363,-5.012284,-5.700194,8.457689,3.629509,4.747469,9.940895,7.256952,5.965197,6.580626,-7.575752,5.729188,-3.589633,-6.268354,-3.356019,-0.756273,2.501491,5.705696,1.645606,9.320254,7.043471,7.930975,-1.943212,5.080952,-9.906230,8.777129,2.692144,-1.117728], dtype = "float32")#candidate|5731|(1040,)|const|float32
call_5729 = relay.TupleGetItem(func_1997_call(relay.reshape(var_5730.astype('float64'), [4, 3, 6]), relay.reshape(const_5731.astype('float32'), [1040,]), relay.reshape(var_5730.astype('float64'), [4, 3, 6]), ), 3)
call_5732 = relay.TupleGetItem(func_2001_call(relay.reshape(var_5730.astype('float64'), [4, 3, 6]), relay.reshape(const_5731.astype('float32'), [1040,]), relay.reshape(var_5730.astype('float64'), [4, 3, 6]), ), 3)
output = relay.Tuple([call_5704,call_5729,var_5730,const_5731,])
output2 = relay.Tuple([call_5705,call_5732,var_5730,const_5731,])
func_5733 = relay.Function([var_5730,], output)
mod['func_5733'] = func_5733
mod = relay.transform.InferType()(mod)
var_5734 = relay.var("var_5734", dtype = "float64", shape = (72,))#candidate|5734|(72,)|var|float64
output = func_5733(var_5734)
func_5735 = relay.Function([var_5734], output)
mutated_mod['func_5735'] = func_5735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3467_call = mod.get_global_var('func_3467')
func_3469_call = mutated_mod.get_global_var('func_3469')
call_5780 = func_3467_call()
call_5781 = func_3467_call()
output = call_5780
output2 = call_5781
func_5784 = relay.Function([], output)
mod['func_5784'] = func_5784
mod = relay.transform.InferType()(mod)
output = func_5784()
func_5785 = relay.Function([], output)
mutated_mod['func_5785'] = func_5785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2658_call = mod.get_global_var('func_2658')
func_2660_call = mutated_mod.get_global_var('func_2660')
call_5834 = func_2658_call()
call_5835 = func_2658_call()
func_779_call = mod.get_global_var('func_779')
func_784_call = mutated_mod.get_global_var('func_784')
const_5854 = relay.const([6,2,4,-8,2,4,7,-6,-1,-8,-7,-2,-2,3,1,-6,8,2,1,-6,8,-8,-9,-5,-9,-7,-3,9,3,3,-10,10,-1,1,-2,7,-8,4,-1,-8,-4,-9,5,4,1,-2,8,-10,-4,-3,9,8,-6,7,-3,-10,-3,4,8,-7,-5,2,3,-4,-5,5,6,-3,6,-2,6,-6,10,8,7,-8,4,-8,4,-6,-1,-2,4,1,-5,1,-4,4,-8,-3,8,7,-3,-1,-1,7,7,10,3,5,4,-3,4,2,8,7,9,1,3,3,8,5,-7,1,6,-2,-2,9,-10,10], dtype = "uint64")#candidate|5854|(120,)|const|uint64
var_5855 = relay.var("var_5855", dtype = "uint32", shape = (392,))#candidate|5855|(392,)|var|uint32
var_5856 = relay.var("var_5856", dtype = "float32", shape = (1848,))#candidate|5856|(1848,)|var|float32
call_5853 = relay.TupleGetItem(func_779_call(relay.reshape(const_5854.astype('uint64'), [5, 4, 6]), relay.reshape(const_5854.astype('uint64'), [5, 4, 6]), relay.reshape(var_5855.astype('uint32'), [392,]), relay.reshape(var_5856.astype('float32'), [924, 2]), ), 4)
call_5857 = relay.TupleGetItem(func_784_call(relay.reshape(const_5854.astype('uint64'), [5, 4, 6]), relay.reshape(const_5854.astype('uint64'), [5, 4, 6]), relay.reshape(var_5855.astype('uint32'), [392,]), relay.reshape(var_5856.astype('float32'), [924, 2]), ), 4)
output = relay.Tuple([call_5834,call_5853,const_5854,var_5855,var_5856,])
output2 = relay.Tuple([call_5835,call_5857,const_5854,var_5855,var_5856,])
func_5860 = relay.Function([var_5855,var_5856,], output)
mod['func_5860'] = func_5860
mod = relay.transform.InferType()(mod)
mutated_mod['func_5860'] = func_5860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5860_call = mutated_mod.get_global_var('func_5860')
var_5862 = relay.var("var_5862", dtype = "uint32", shape = (392,))#candidate|5862|(392,)|var|uint32
var_5863 = relay.var("var_5863", dtype = "float32", shape = (1848,))#candidate|5863|(1848,)|var|float32
call_5861 = func_5860_call(var_5862,var_5863,)
output = call_5861
func_5864 = relay.Function([var_5862,var_5863,], output)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5306_call = mod.get_global_var('func_5306')
func_5307_call = mutated_mod.get_global_var('func_5307')
call_5937 = func_5306_call()
call_5938 = func_5306_call()
func_653_call = mod.get_global_var('func_653')
func_655_call = mutated_mod.get_global_var('func_655')
var_5948 = relay.var("var_5948", dtype = "uint32", shape = (392,))#candidate|5948|(392,)|var|uint32
call_5947 = func_653_call(relay.reshape(var_5948.astype('uint32'), [7, 7, 8]))
call_5949 = func_653_call(relay.reshape(var_5948.astype('uint32'), [7, 7, 8]))
bop_5950 = relay.right_shift(call_5947.astype('uint8'), relay.reshape(var_5948.astype('uint8'), relay.shape_of(call_5947))) # shape=(7, 7, 8)
bop_5953 = relay.right_shift(call_5949.astype('uint8'), relay.reshape(var_5948.astype('uint8'), relay.shape_of(call_5949))) # shape=(7, 7, 8)
bop_5960 = relay.less(call_5947.astype('bool'), relay.reshape(bop_5950.astype('bool'), relay.shape_of(call_5947))) # shape=(7, 7, 8)
bop_5963 = relay.less(call_5949.astype('bool'), relay.reshape(bop_5953.astype('bool'), relay.shape_of(call_5949))) # shape=(7, 7, 8)
bop_5965 = relay.mod(bop_5960.astype('float32'), relay.reshape(bop_5950.astype('float32'), relay.shape_of(bop_5960))) # shape=(7, 7, 8)
bop_5968 = relay.mod(bop_5963.astype('float32'), relay.reshape(bop_5953.astype('float32'), relay.shape_of(bop_5963))) # shape=(7, 7, 8)
output = relay.Tuple([call_5937,bop_5965,])
output2 = relay.Tuple([call_5938,bop_5968,])
func_5971 = relay.Function([var_5948,], output)
mod['func_5971'] = func_5971
mod = relay.transform.InferType()(mod)
mutated_mod['func_5971'] = func_5971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5972 = relay.var("var_5972", dtype = "uint32", shape = (392,))#candidate|5972|(392,)|var|uint32
func_5971_call = mutated_mod.get_global_var('func_5971')
call_5973 = func_5971_call(var_5972)
output = call_5973
func_5974 = relay.Function([var_5972], output)
mutated_mod['func_5974'] = func_5974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mod.get_global_var('func_1915')
func_1917_call = mutated_mod.get_global_var('func_1917')
call_5976 = func_1915_call()
call_5977 = func_1915_call()
var_5982 = relay.var("var_5982", dtype = "float64", shape = (13, 9, 9))#candidate|5982|(13, 9, 9)|var|float64
bop_5983 = relay.bitwise_or(call_5976.astype('int64'), relay.reshape(var_5982.astype('int64'), relay.shape_of(call_5976))) # shape=(13, 9, 9)
bop_5986 = relay.bitwise_or(call_5977.astype('int64'), relay.reshape(var_5982.astype('int64'), relay.shape_of(call_5977))) # shape=(13, 9, 9)
output = bop_5983
output2 = bop_5986
func_5987 = relay.Function([var_5982,], output)
mod['func_5987'] = func_5987
mod = relay.transform.InferType()(mod)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5988 = relay.var("var_5988", dtype = "float64", shape = (13, 9, 9))#candidate|5988|(13, 9, 9)|var|float64
func_5987_call = mutated_mod.get_global_var('func_5987')
call_5989 = func_5987_call(var_5988)
output = call_5989
func_5990 = relay.Function([var_5988], output)
mutated_mod['func_5990'] = func_5990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4768_call = mod.get_global_var('func_4768')
func_4769_call = mutated_mod.get_global_var('func_4769')
call_6011 = func_4768_call()
call_6012 = func_4768_call()
output = call_6011
output2 = call_6012
func_6016 = relay.Function([], output)
mod['func_6016'] = func_6016
mod = relay.transform.InferType()(mod)
output = func_6016()
func_6017 = relay.Function([], output)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6016_call = mod.get_global_var('func_6016')
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6098 = func_6016_call()
call_6099 = func_6016_call()
func_2658_call = mod.get_global_var('func_2658')
func_2660_call = mutated_mod.get_global_var('func_2660')
call_6116 = func_2658_call()
call_6117 = func_2658_call()
output = relay.Tuple([call_6098,call_6116,])
output2 = relay.Tuple([call_6099,call_6117,])
func_6120 = relay.Function([], output)
mod['func_6120'] = func_6120
mod = relay.transform.InferType()(mod)
output = func_6120()
func_6121 = relay.Function([], output)
mutated_mod['func_6121'] = func_6121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6125 = relay.var("var_6125", dtype = "float64", shape = (16, 1, 10))#candidate|6125|(16, 1, 10)|var|float64
uop_6126 = relay.sqrt(var_6125.astype('float64')) # shape=(16, 1, 10)
func_5532_call = mod.get_global_var('func_5532')
func_5533_call = mutated_mod.get_global_var('func_5533')
call_6134 = relay.TupleGetItem(func_5532_call(), 0)
call_6135 = relay.TupleGetItem(func_5533_call(), 0)
output = relay.Tuple([uop_6126,call_6134,])
output2 = relay.Tuple([uop_6126,call_6135,])
func_6138 = relay.Function([var_6125,], output)
mod['func_6138'] = func_6138
mod = relay.transform.InferType()(mod)
var_6139 = relay.var("var_6139", dtype = "float64", shape = (16, 1, 10))#candidate|6139|(16, 1, 10)|var|float64
output = func_6138(var_6139)
func_6140 = relay.Function([var_6139], output)
mutated_mod['func_6140'] = func_6140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3847_call = mod.get_global_var('func_3847')
func_3848_call = mutated_mod.get_global_var('func_3848')
call_6144 = func_3847_call()
call_6145 = func_3847_call()
func_828_call = mod.get_global_var('func_828')
func_833_call = mutated_mod.get_global_var('func_833')
const_6150 = relay.const([[-9.672023,7.647097],[6.344720,-2.974299],[-1.773897,4.788505],[7.958404,0.702242],[4.750535,4.756090],[3.914031,-5.367214],[1.213380,-1.820679],[-5.272121,-5.553812],[-8.203989,8.727729],[-7.624679,4.877718],[8.733442,-8.192907],[6.424959,-3.755024],[2.898631,-3.762367],[-9.969815,-6.348110],[-1.784160,5.738894],[-3.091486,2.460057],[7.320142,-6.163494],[-8.210351,-1.320298],[-6.900424,-2.142479],[-2.621581,-4.497930],[3.802713,-7.961574],[5.630595,7.955526],[-0.416938,7.915401],[-1.636616,5.606466],[9.830188,3.774972],[2.731544,5.124529],[3.333217,0.436669],[-1.481439,4.384303],[-0.535764,4.690652],[-3.456740,7.568098],[4.441207,6.779751],[0.678988,7.660729],[-2.405995,-4.270442],[-4.084860,-9.834163],[-0.904561,1.332725],[2.414478,-9.228813],[3.585195,-6.854181],[-5.845974,-6.844789],[-6.492363,3.025677],[-7.836561,-6.151909],[3.495547,5.274271],[5.639395,8.127046],[7.578415,-8.926948],[8.893334,8.865793],[8.280963,-3.914236],[3.929815,4.225168],[-4.735587,-1.480401],[-8.720244,-2.605937],[7.438387,9.832136],[4.685240,-2.840513],[-5.058246,4.172169],[1.125025,-8.604799],[-1.679468,-9.332142],[2.655491,3.625411],[-4.756581,-9.716458],[7.356082,5.686606],[-7.308907,3.564320],[2.991599,3.480864],[-3.523629,-3.921253],[2.167862,-2.645771],[6.497635,3.781365],[6.198559,4.391729],[-2.408470,-7.537571],[-9.852953,3.802435],[-3.199039,-0.312083],[-0.003018,8.679601],[-6.374456,9.287013],[-5.126140,-7.055003],[-6.911213,-0.038519],[-7.159878,-3.568580],[-7.361717,-1.346342],[-5.315141,7.165635],[-0.698799,-1.723318],[0.198030,-8.956782],[8.351336,3.888375],[7.253970,-7.375294],[-7.478026,6.936620],[-5.995230,9.895386],[-2.669083,7.310438],[5.749940,-4.013733],[-7.677042,8.688304],[-1.869153,0.430554],[3.483767,-1.596236],[-9.649908,-2.259753]], dtype = "float64")#candidate|6150|(84, 2)|const|float64
call_6149 = relay.TupleGetItem(func_828_call(relay.reshape(const_6150.astype('float64'), [6, 14, 2]), relay.reshape(const_6150.astype('float64'), [6, 14, 2]), relay.reshape(const_6150.astype('float64'), [6, 14, 2]), ), 1)
call_6151 = relay.TupleGetItem(func_833_call(relay.reshape(const_6150.astype('float64'), [6, 14, 2]), relay.reshape(const_6150.astype('float64'), [6, 14, 2]), relay.reshape(const_6150.astype('float64'), [6, 14, 2]), ), 1)
var_6152 = relay.var("var_6152", dtype = "float32", shape = (7, 7, 8))#candidate|6152|(7, 7, 8)|var|float32
bop_6153 = relay.logical_and(call_6144.astype('bool'), relay.reshape(var_6152.astype('bool'), relay.shape_of(call_6144))) # shape=(7, 7, 8)
bop_6156 = relay.logical_and(call_6145.astype('bool'), relay.reshape(var_6152.astype('bool'), relay.shape_of(call_6145))) # shape=(7, 7, 8)
func_5028_call = mod.get_global_var('func_5028')
func_5031_call = mutated_mod.get_global_var('func_5031')
call_6170 = relay.TupleGetItem(func_5028_call(relay.reshape(call_6144.astype('uint32'), [392,]), relay.reshape(call_6144.astype('uint32'), [392,]), ), 0)
call_6171 = relay.TupleGetItem(func_5031_call(relay.reshape(call_6144.astype('uint32'), [392,]), relay.reshape(call_6144.astype('uint32'), [392,]), ), 0)
func_1810_call = mod.get_global_var('func_1810')
func_1813_call = mutated_mod.get_global_var('func_1813')
var_6177 = relay.var("var_6177", dtype = "int64", shape = (12,))#candidate|6177|(12,)|var|int64
var_6178 = relay.var("var_6178", dtype = "int64", shape = (96,))#candidate|6178|(96,)|var|int64
call_6176 = func_1810_call(relay.reshape(var_6177.astype('int64'), [6, 2, 1]), relay.reshape(var_6178.astype('int64'), [6, 2, 8]), )
call_6179 = func_1810_call(relay.reshape(var_6177.astype('int64'), [6, 2, 1]), relay.reshape(var_6178.astype('int64'), [6, 2, 8]), )
func_5532_call = mod.get_global_var('func_5532')
func_5533_call = mutated_mod.get_global_var('func_5533')
call_6186 = relay.TupleGetItem(func_5532_call(), 2)
call_6187 = relay.TupleGetItem(func_5533_call(), 2)
output = relay.Tuple([call_6149,const_6150,bop_6153,call_6170,call_6176,var_6177,var_6178,call_6186,])
output2 = relay.Tuple([call_6151,const_6150,bop_6156,call_6171,call_6179,var_6177,var_6178,call_6187,])
func_6192 = relay.Function([var_6152,var_6177,var_6178,], output)
mod['func_6192'] = func_6192
mod = relay.transform.InferType()(mod)
mutated_mod['func_6192'] = func_6192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6192_call = mutated_mod.get_global_var('func_6192')
var_6194 = relay.var("var_6194", dtype = "float32", shape = (7, 7, 8))#candidate|6194|(7, 7, 8)|var|float32
var_6195 = relay.var("var_6195", dtype = "int64", shape = (12,))#candidate|6195|(12,)|var|int64
var_6196 = relay.var("var_6196", dtype = "int64", shape = (96,))#candidate|6196|(96,)|var|int64
call_6193 = func_6192_call(var_6194,var_6195,var_6196,)
output = call_6193
func_6197 = relay.Function([var_6194,var_6195,var_6196,], output)
mutated_mod['func_6197'] = func_6197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4004_call = mod.get_global_var('func_4004')
func_4006_call = mutated_mod.get_global_var('func_4006')
call_6199 = relay.TupleGetItem(func_4004_call(), 1)
call_6200 = relay.TupleGetItem(func_4006_call(), 1)
output = call_6199
output2 = call_6200
func_6204 = relay.Function([], output)
mod['func_6204'] = func_6204
mod = relay.transform.InferType()(mod)
output = func_6204()
func_6205 = relay.Function([], output)
mutated_mod['func_6205'] = func_6205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_6255 = relay.TupleGetItem(func_2236_call(), 0)
call_6256 = relay.TupleGetItem(func_2238_call(), 0)
func_2658_call = mod.get_global_var('func_2658')
func_2660_call = mutated_mod.get_global_var('func_2660')
call_6261 = func_2658_call()
call_6262 = func_2658_call()
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_6265 = relay.TupleGetItem(func_2236_call(), 0)
call_6266 = relay.TupleGetItem(func_2238_call(), 0)
output = relay.Tuple([call_6255,call_6261,call_6265,])
output2 = relay.Tuple([call_6256,call_6262,call_6266,])
func_6267 = relay.Function([], output)
mod['func_6267'] = func_6267
mod = relay.transform.InferType()(mod)
output = func_6267()
func_6268 = relay.Function([], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6277 = relay.var("var_6277", dtype = "float64", shape = (1, 4, 7))#candidate|6277|(1, 4, 7)|var|float64
uop_6278 = relay.cos(var_6277.astype('float64')) # shape=(1, 4, 7)
output = uop_6278
output2 = uop_6278
F = relay.Function([var_6277,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6277,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

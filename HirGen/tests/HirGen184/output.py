import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_2 = relay.var("var_2", dtype = "float64", shape = (14, 3, 7))#candidate|2|(14, 3, 7)|var|float64
var_3 = relay.var("var_3", dtype = "float64", shape = (14, 3, 7))#candidate|3|(14, 3, 7)|var|float64
bop_4 = relay.less(var_2.astype('bool'), relay.reshape(var_3.astype('bool'), relay.shape_of(var_2))) # shape=(14, 3, 7)
output = relay.Tuple([bop_4,])
output2 = relay.Tuple([bop_4,])
func_26 = relay.Function([var_2,var_3,], output)
mod['func_26'] = func_26
mod = relay.transform.InferType()(mod)
mutated_mod['func_26'] = func_26
mutated_mod = relay.transform.InferType()(mutated_mod)
func_26_call = mutated_mod.get_global_var('func_26')
var_28 = relay.var("var_28", dtype = "float64", shape = (14, 3, 7))#candidate|28|(14, 3, 7)|var|float64
var_29 = relay.var("var_29", dtype = "float64", shape = (14, 3, 7))#candidate|29|(14, 3, 7)|var|float64
call_27 = func_26_call(var_28,var_29,)
output = call_27
func_30 = relay.Function([var_28,var_29,], output)
mutated_mod['func_30'] = func_30
mutated_mod = relay.transform.InferType()(mutated_mod)
var_42 = relay.var("var_42", dtype = "float32", shape = (9, 9, 10))#candidate|42|(9, 9, 10)|var|float32
uop_43 = relay.atan(var_42.astype('float32')) # shape=(9, 9, 10)
func_26_call = mod.get_global_var('func_26')
func_30_call = mutated_mod.get_global_var('func_30')
var_50 = relay.var("var_50", dtype = "float64", shape = (294,))#candidate|50|(294,)|var|float64
call_49 = relay.TupleGetItem(func_26_call(relay.reshape(var_50.astype('float64'), [14, 3, 7]), relay.reshape(var_50.astype('float64'), [14, 3, 7]), ), 0)
call_51 = relay.TupleGetItem(func_30_call(relay.reshape(var_50.astype('float64'), [14, 3, 7]), relay.reshape(var_50.astype('float64'), [14, 3, 7]), ), 0)
func_26_call = mod.get_global_var('func_26')
func_30_call = mutated_mod.get_global_var('func_30')
call_58 = relay.TupleGetItem(func_26_call(relay.reshape(call_49.astype('float64'), [14, 3, 7]), relay.reshape(var_50.astype('float64'), [14, 3, 7]), ), 0)
call_59 = relay.TupleGetItem(func_30_call(relay.reshape(call_49.astype('float64'), [14, 3, 7]), relay.reshape(var_50.astype('float64'), [14, 3, 7]), ), 0)
func_26_call = mod.get_global_var('func_26')
func_30_call = mutated_mod.get_global_var('func_30')
call_64 = relay.TupleGetItem(func_26_call(relay.reshape(call_49.astype('float64'), [14, 3, 7]), relay.reshape(call_58.astype('float64'), [14, 3, 7]), ), 0)
call_65 = relay.TupleGetItem(func_30_call(relay.reshape(call_49.astype('float64'), [14, 3, 7]), relay.reshape(call_58.astype('float64'), [14, 3, 7]), ), 0)
func_26_call = mod.get_global_var('func_26')
func_30_call = mutated_mod.get_global_var('func_30')
call_69 = relay.TupleGetItem(func_26_call(relay.reshape(var_50.astype('float64'), [14, 3, 7]), relay.reshape(var_50.astype('float64'), [14, 3, 7]), ), 0)
call_70 = relay.TupleGetItem(func_30_call(relay.reshape(var_50.astype('float64'), [14, 3, 7]), relay.reshape(var_50.astype('float64'), [14, 3, 7]), ), 0)
output = relay.Tuple([uop_43,call_49,var_50,call_58,call_64,call_69,])
output2 = relay.Tuple([uop_43,call_51,var_50,call_59,call_65,call_70,])
func_71 = relay.Function([var_42,var_50,], output)
mod['func_71'] = func_71
mod = relay.transform.InferType()(mod)
mutated_mod['func_71'] = func_71
mutated_mod = relay.transform.InferType()(mutated_mod)
func_71_call = mutated_mod.get_global_var('func_71')
var_73 = relay.var("var_73", dtype = "float32", shape = (9, 9, 10))#candidate|73|(9, 9, 10)|var|float32
var_74 = relay.var("var_74", dtype = "float64", shape = (294,))#candidate|74|(294,)|var|float64
call_72 = func_71_call(var_73,var_74,)
output = call_72
func_75 = relay.Function([var_73,var_74,], output)
mutated_mod['func_75'] = func_75
mutated_mod = relay.transform.InferType()(mutated_mod)
const_199 = relay.const([[8,-6,1,-6,-2],[-6,-6,-6,9,-1],[5,-2,10,-9,4],[9,-1,-5,-4,5],[-6,1,-4,-6,-6],[-7,-8,7,-8,5],[4,4,-10,8,-9],[-2,-7,-9,-1,-1],[6,7,8,2,-10],[-10,2,10,4,-7]], dtype = "uint64")#candidate|199|(10, 5)|const|uint64
var_200 = relay.var("var_200", dtype = "uint64", shape = (10, 5))#candidate|200|(10, 5)|var|uint64
bop_201 = relay.right_shift(const_199.astype('uint64'), relay.reshape(var_200.astype('uint64'), relay.shape_of(const_199))) # shape=(10, 5)
output = relay.Tuple([bop_201,])
output2 = relay.Tuple([bop_201,])
func_204 = relay.Function([var_200,], output)
mod['func_204'] = func_204
mod = relay.transform.InferType()(mod)
mutated_mod['func_204'] = func_204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_205 = relay.var("var_205", dtype = "uint64", shape = (10, 5))#candidate|205|(10, 5)|var|uint64
func_204_call = mutated_mod.get_global_var('func_204')
call_206 = func_204_call(var_205)
output = call_206
func_207 = relay.Function([var_205], output)
mutated_mod['func_207'] = func_207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_526 = relay.var("var_526", dtype = "float32", shape = (10, 5, 12))#candidate|526|(10, 5, 12)|var|float32
uop_527 = relay.atanh(var_526.astype('float32')) # shape=(10, 5, 12)
func_71_call = mod.get_global_var('func_71')
func_75_call = mutated_mod.get_global_var('func_75')
var_535 = relay.var("var_535", dtype = "float32", shape = (810,))#candidate|535|(810,)|var|float32
var_536 = relay.var("var_536", dtype = "float64", shape = (294,))#candidate|536|(294,)|var|float64
call_534 = relay.TupleGetItem(func_71_call(relay.reshape(var_535.astype('float32'), [9, 9, 10]), relay.reshape(var_536.astype('float64'), [294,]), ), 2)
call_537 = relay.TupleGetItem(func_75_call(relay.reshape(var_535.astype('float32'), [9, 9, 10]), relay.reshape(var_536.astype('float64'), [294,]), ), 2)
bop_540 = relay.bitwise_or(var_526.astype('int16'), relay.reshape(uop_527.astype('int16'), relay.shape_of(var_526))) # shape=(10, 5, 12)
uop_543 = relay.asin(bop_540.astype('float64')) # shape=(10, 5, 12)
func_26_call = mod.get_global_var('func_26')
func_30_call = mutated_mod.get_global_var('func_30')
call_555 = relay.TupleGetItem(func_26_call(relay.reshape(call_534.astype('float64'), [14, 3, 7]), relay.reshape(call_534.astype('float64'), [14, 3, 7]), ), 0)
call_556 = relay.TupleGetItem(func_30_call(relay.reshape(call_534.astype('float64'), [14, 3, 7]), relay.reshape(call_534.astype('float64'), [14, 3, 7]), ), 0)
bop_560 = relay.bitwise_xor(uop_543.astype('uint16'), relay.reshape(var_526.astype('uint16'), relay.shape_of(uop_543))) # shape=(10, 5, 12)
uop_571 = relay.sinh(bop_560.astype('float32')) # shape=(10, 5, 12)
output = relay.Tuple([call_534,var_535,var_536,call_555,uop_571,])
output2 = relay.Tuple([call_537,var_535,var_536,call_556,uop_571,])
func_586 = relay.Function([var_526,var_535,var_536,], output)
mod['func_586'] = func_586
mod = relay.transform.InferType()(mod)
var_587 = relay.var("var_587", dtype = "float32", shape = (10, 5, 12))#candidate|587|(10, 5, 12)|var|float32
var_588 = relay.var("var_588", dtype = "float32", shape = (810,))#candidate|588|(810,)|var|float32
var_589 = relay.var("var_589", dtype = "float64", shape = (294,))#candidate|589|(294,)|var|float64
output = func_586(var_587,var_588,var_589,)
func_590 = relay.Function([var_587,var_588,var_589,], output)
mutated_mod['func_590'] = func_590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_618 = relay.var("var_618", dtype = "int32", shape = (10, 4, 1))#candidate|618|(10, 4, 1)|var|int32
var_619 = relay.var("var_619", dtype = "int32", shape = (10, 4, 13))#candidate|619|(10, 4, 13)|var|int32
bop_620 = relay.equal(var_618.astype('bool'), var_619.astype('bool')) # shape=(10, 4, 13)
const_623 = relay.const([[[-10,1],[-3,1],[4,-3],[5,8]],[[6,2],[8,-10],[-3,-1],[-10,4]],[[9,-5],[-6,6],[-4,-2],[9,-10]],[[-10,8],[10,-4],[-5,-9],[-3,-5]],[[10,-9],[-8,8],[-3,5],[-2,5]],[[-7,-9],[-1,1],[5,-10],[-5,-3]],[[5,-1],[6,-7],[4,1],[6,8]],[[-8,-10],[8,-4],[-3,5],[9,3]],[[1,-7],[7,-6],[-7,-7],[-10,6]],[[-1,-9],[-2,-6],[-1,-5],[9,2]]], dtype = "int32")#candidate|623|(10, 4, 2)|const|int32
bop_624 = relay.divide(var_618.astype('float64'), const_623.astype('float64')) # shape=(10, 4, 2)
func_71_call = mod.get_global_var('func_71')
func_75_call = mutated_mod.get_global_var('func_75')
var_631 = relay.var("var_631", dtype = "float32", shape = (810,))#candidate|631|(810,)|var|float32
var_632 = relay.var("var_632", dtype = "float64", shape = (294,))#candidate|632|(294,)|var|float64
call_630 = relay.TupleGetItem(func_71_call(relay.reshape(var_631.astype('float32'), [9, 9, 10]), relay.reshape(var_632.astype('float64'), [294,]), ), 2)
call_633 = relay.TupleGetItem(func_75_call(relay.reshape(var_631.astype('float32'), [9, 9, 10]), relay.reshape(var_632.astype('float64'), [294,]), ), 2)
uop_636 = relay.cos(call_630.astype('float64')) # shape=(294,)
uop_638 = relay.cos(call_633.astype('float64')) # shape=(294,)
uop_649 = relay.sqrt(bop_624.astype('float64')) # shape=(10, 4, 2)
output = relay.Tuple([bop_620,var_631,var_632,uop_636,uop_649,])
output2 = relay.Tuple([bop_620,var_631,var_632,uop_638,uop_649,])
func_651 = relay.Function([var_618,var_619,var_631,var_632,], output)
mod['func_651'] = func_651
mod = relay.transform.InferType()(mod)
mutated_mod['func_651'] = func_651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_651_call = mutated_mod.get_global_var('func_651')
var_653 = relay.var("var_653", dtype = "int32", shape = (10, 4, 1))#candidate|653|(10, 4, 1)|var|int32
var_654 = relay.var("var_654", dtype = "int32", shape = (10, 4, 13))#candidate|654|(10, 4, 13)|var|int32
var_655 = relay.var("var_655", dtype = "float32", shape = (810,))#candidate|655|(810,)|var|float32
var_656 = relay.var("var_656", dtype = "float64", shape = (294,))#candidate|656|(294,)|var|float64
call_652 = func_651_call(var_653,var_654,var_655,var_656,)
output = call_652
func_657 = relay.Function([var_653,var_654,var_655,var_656,], output)
mutated_mod['func_657'] = func_657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_922 = relay.var("var_922", dtype = "bool", shape = (2, 15, 6))#candidate|922|(2, 15, 6)|var|bool
var_923 = relay.var("var_923", dtype = "bool", shape = (2, 15, 6))#candidate|923|(2, 15, 6)|var|bool
bop_924 = relay.logical_and(var_922.astype('bool'), relay.reshape(var_923.astype('bool'), relay.shape_of(var_922))) # shape=(2, 15, 6)
uop_927 = relay.log2(bop_924.astype('float64')) # shape=(2, 15, 6)
func_71_call = mod.get_global_var('func_71')
func_75_call = mutated_mod.get_global_var('func_75')
var_940 = relay.var("var_940", dtype = "float32", shape = (810,))#candidate|940|(810,)|var|float32
var_941 = relay.var("var_941", dtype = "float64", shape = (294,))#candidate|941|(294,)|var|float64
call_939 = relay.TupleGetItem(func_71_call(relay.reshape(var_940.astype('float32'), [9, 9, 10]), relay.reshape(var_941.astype('float64'), [294,]), ), 0)
call_942 = relay.TupleGetItem(func_75_call(relay.reshape(var_940.astype('float32'), [9, 9, 10]), relay.reshape(var_941.astype('float64'), [294,]), ), 0)
bop_943 = relay.left_shift(uop_927.astype('uint8'), relay.reshape(bop_924.astype('uint8'), relay.shape_of(uop_927))) # shape=(2, 15, 6)
func_651_call = mod.get_global_var('func_651')
func_657_call = mutated_mod.get_global_var('func_657')
var_953 = relay.var("var_953", dtype = "int32", shape = (10, 4))#candidate|953|(10, 4)|var|int32
const_954 = relay.const([-4,4,8,-3,9,-2,-8,6,-9,-10,6,-5,-7,-1,9,-2,9,-10,-3,-5,-10,9,-10,-2,1,-9,-8,-8,-7,9,7,2,7,-4,6,5,6,6,2,7,9,-8,10,-3,-7,4,4,-9,-9,-5,2,-3,-5,8,-6,-9,-9,-4,-5,8,1,-5,8,-10,-6,-2,-3,1,-3,-5,2,-5,-3,9,-8,-9,9,-6,7,-5,-10,-3,1,3,1,-4,4,-3,8,4,-9,7,-6,-6,-8,5,-8,-3,2,-5,-1,-5,8,-1,-2,-2,-7,-10,1,-5,-8,9,3,-7,7,10,-2,-3,5,-9,-1,9,-2,-1,8,4,-10,-2,-6,-8,4,10,-2,-8,-9,5,10,9,2,4,8,6,2,1,-8,8,-6,7,3,7,4,3,-4,5,4,8,7,2,-3,-7,3,-4,-6,-8,-8,-3,5,-6,10,-8,1,6,1,7,-2,-6,10,3,1,-4,-4,-3,7,-1,3,1,7,-1,-7,2,-3,-4,8,-8,9,-10,-1,6,-4,-4,6,10,7,4,2,-5,6,-7,-9,7,-8,-10,2,8,-3,-3,-10,-4,4,10,4,10,-7,6,5,1,-10,4,-9,8,-7,-10,-3,3,-4,5,10,-10,4,2,-9,3,-6,-3,-9,6,1,-2,-4,-2,-10,6,4,-9,-4,-8,-4,4,7,-6,8,2,-9,4,9,-10,4,-1,6,7,-10,2,-5,5,-4,10,-2,1,-7,5,-10,-9,2,3,9,-7,4,-5,8,10,-1,-5,-3,6,-1,9,7,8,-7,9,-10,7,8,2,1,9,4,-9,-2,8,6,-5,-5,-2,5,-8,-8,10,4,3,5,9,7,8,-3,-3,4,-1,2,-3,7,-3,-6,-2,-4,-8,-6,-10,-7,4,-7,-8,-6,1,-4,-4,-6,5,-9,-2,1,-2,7,2,2,-3,-3,-9,-3,7,-5,-10,10,-10,-4,2,2,-2,7,4,-10,-8,9,-1,10,-10,9,-5,-7,7,-7,5,-4,8,-3,-1,-9,-7,8,3,-4,-2,-2,3,4,-1,9,-10,-4,-4,-3,1,6,2,-4,4,7,2,-5,-1,4,-9,9,-6,2,-4,-7,-6,-3,-8,5,-8,10,-6,-4,5,10,-3,-7,-3,-10,-1,2,-9,10,-3,-1,-7,-10,9,9,-1,2,-9,-4,-6,-9,-9,-8,5,10,-1,10,6,-3,3,-1,-3,10,-1,-4,7,6,4,8,2,-9,1,-2,-7,-9,7,7,-2,1,1,2,1,-8,4,4,4,-8,3,9,5,4,-10,1,10,-7,9,1,-7,-5,-4,8,6,-2,-6,-3,-1,-4,-8,2,8,8,-9,7,9,9,-5,-1,3,-10,-4,-1,-9,-5,9], dtype = "int32")#candidate|954|(520,)|const|int32
call_952 = relay.TupleGetItem(func_651_call(relay.reshape(var_953.astype('int32'), [10, 4, 1]), relay.reshape(const_954.astype('int32'), [10, 4, 13]), relay.reshape(call_939.astype('float32'), [810,]), relay.reshape(var_941.astype('float64'), [294,]), ), 4)
call_955 = relay.TupleGetItem(func_657_call(relay.reshape(var_953.astype('int32'), [10, 4, 1]), relay.reshape(const_954.astype('int32'), [10, 4, 13]), relay.reshape(call_939.astype('float32'), [810,]), relay.reshape(var_941.astype('float64'), [294,]), ), 4)
func_26_call = mod.get_global_var('func_26')
func_30_call = mutated_mod.get_global_var('func_30')
call_958 = relay.TupleGetItem(func_26_call(relay.reshape(var_941.astype('float64'), [14, 3, 7]), relay.reshape(var_941.astype('float64'), [14, 3, 7]), ), 0)
call_959 = relay.TupleGetItem(func_30_call(relay.reshape(var_941.astype('float64'), [14, 3, 7]), relay.reshape(var_941.astype('float64'), [14, 3, 7]), ), 0)
func_26_call = mod.get_global_var('func_26')
func_30_call = mutated_mod.get_global_var('func_30')
call_970 = relay.TupleGetItem(func_26_call(relay.reshape(var_941.astype('float64'), [14, 3, 7]), relay.reshape(call_958.astype('float64'), [14, 3, 7]), ), 0)
call_971 = relay.TupleGetItem(func_30_call(relay.reshape(var_941.astype('float64'), [14, 3, 7]), relay.reshape(call_958.astype('float64'), [14, 3, 7]), ), 0)
func_71_call = mod.get_global_var('func_71')
func_75_call = mutated_mod.get_global_var('func_75')
call_972 = relay.TupleGetItem(func_71_call(relay.reshape(call_939.astype('float32'), [9, 9, 10]), relay.reshape(var_941.astype('float64'), [294,]), ), 0)
call_973 = relay.TupleGetItem(func_75_call(relay.reshape(call_939.astype('float32'), [9, 9, 10]), relay.reshape(var_941.astype('float64'), [294,]), ), 0)
output = relay.Tuple([call_939,var_940,var_941,bop_943,call_952,var_953,const_954,call_958,call_970,call_972,])
output2 = relay.Tuple([call_942,var_940,var_941,bop_943,call_955,var_953,const_954,call_959,call_971,call_973,])
func_974 = relay.Function([var_922,var_923,var_940,var_941,var_953,], output)
mod['func_974'] = func_974
mod = relay.transform.InferType()(mod)
var_975 = relay.var("var_975", dtype = "bool", shape = (2, 15, 6))#candidate|975|(2, 15, 6)|var|bool
var_976 = relay.var("var_976", dtype = "bool", shape = (2, 15, 6))#candidate|976|(2, 15, 6)|var|bool
var_977 = relay.var("var_977", dtype = "float32", shape = (810,))#candidate|977|(810,)|var|float32
var_978 = relay.var("var_978", dtype = "float64", shape = (294,))#candidate|978|(294,)|var|float64
var_979 = relay.var("var_979", dtype = "int32", shape = (10, 4))#candidate|979|(10, 4)|var|int32
output = func_974(var_975,var_976,var_977,var_978,var_979,)
func_980 = relay.Function([var_975,var_976,var_977,var_978,var_979,], output)
mutated_mod['func_980'] = func_980
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1029 = relay.const([[[1,9,-1,3,3,-1,-3,-2,-3,6,-8,3,2,2,6],[-9,5,2,3,6,-3,10,7,-9,-5,-4,1,-8,-3,-3],[4,-7,2,-4,7,2,7,8,-4,-6,-3,1,8,-8,-10],[2,-3,-2,10,-1,-6,-1,-4,8,-7,6,7,-5,-9,-7],[-4,-10,10,3,7,-9,8,7,10,-8,10,-8,-3,1,5],[-8,9,-7,1,-8,-3,-1,-8,3,-4,8,4,10,-8,9],[10,-6,7,-7,3,-9,4,-7,8,2,-10,-7,-8,-4,-9],[4,10,10,1,-8,-3,-1,6,-9,10,8,4,6,2,10],[3,-3,-2,-2,8,-7,6,-8,-10,9,-8,9,2,-4,5],[8,-8,1,-1,4,3,-2,1,-3,5,-10,1,-5,-5,9],[-4,8,-5,-1,3,8,7,7,10,-9,-4,-7,8,-1,-2],[-5,-7,-6,3,1,-3,2,-8,7,10,2,7,-2,3,8],[-2,-2,5,1,5,5,-10,-7,-7,6,-4,-3,10,-6,7],[-8,8,-9,-8,-2,-2,-3,4,-3,-8,-10,9,-3,-9,2],[2,4,-8,4,3,8,-5,-10,-3,-1,3,-3,-3,1,-3]],[[7,-3,-9,5,-6,9,4,9,4,8,-2,5,3,-2,-1],[9,4,10,-2,5,3,-6,-10,2,6,7,1,5,-1,2],[4,1,-3,9,6,-5,-2,6,7,-5,-10,-5,8,6,-9],[-3,-10,-2,5,-8,7,-8,8,2,3,-10,-4,5,5,1],[-10,6,9,2,-9,-5,-8,7,8,-1,9,-6,-4,-4,2],[2,10,-3,8,-4,-10,5,-1,-1,-4,-2,2,7,-8,-5],[-6,4,7,-8,-7,-1,-9,-2,-9,-9,-7,-7,8,-7,4],[-9,-8,-8,-4,-7,-9,7,-5,8,4,-10,-8,-10,-10,5],[8,6,-8,-1,3,3,-8,-9,9,-8,3,-4,4,9,8],[10,9,1,4,-10,-2,8,3,-5,-5,5,-1,-10,2,1],[-5,-5,-10,-2,10,1,4,4,-9,2,-1,1,-6,9,2],[8,-4,2,3,8,7,-7,-3,10,9,-7,9,-6,-10,-2],[6,2,5,6,9,1,-5,6,-9,-1,8,-1,-7,9,2],[2,3,10,9,8,-9,-3,-9,-4,7,9,5,-10,6,10],[3,10,3,6,3,9,2,8,-4,2,-10,-7,-10,5,-8]]], dtype = "int64")#candidate|1029|(2, 15, 15)|const|int64
var_1030 = relay.var("var_1030", dtype = "int64", shape = (2, 15, 15))#candidate|1030|(2, 15, 15)|var|int64
bop_1031 = relay.add(const_1029.astype('int64'), relay.reshape(var_1030.astype('int64'), relay.shape_of(const_1029))) # shape=(2, 15, 15)
uop_1034 = relay.asinh(bop_1031.astype('float64')) # shape=(2, 15, 15)
func_651_call = mod.get_global_var('func_651')
func_657_call = mutated_mod.get_global_var('func_657')
var_1039 = relay.var("var_1039", dtype = "int32", shape = (40,))#candidate|1039|(40,)|var|int32
var_1040 = relay.var("var_1040", dtype = "int32", shape = (520,))#candidate|1040|(520,)|var|int32
const_1041 = relay.const([4.384797,-4.664833,-4.678974,-9.226690,-9.149172,-9.641232,-2.135607,1.046642,-0.659399,8.788139,9.020834,-9.949681,-2.520069,-2.576312,-8.404001,1.716770,-1.245102,-8.535676,6.945713,1.357750,8.252402,3.540688,-1.688218,6.049843,7.630192,0.551010,1.194920,2.572677,7.259093,5.240715,9.828370,0.774559,-0.620099,-8.903090,0.041906,5.019052,0.016038,-9.285663,-4.157113,-6.150988,9.361237,-2.903020,5.421060,-8.404378,5.206321,-7.057377,-9.161221,-7.025724,-3.132300,9.741047,-1.496216,-3.340211,7.665411,7.492889,0.065421,0.001692,9.215275,8.127675,0.613076,-0.995936,0.494215,8.386119,-3.102363,-6.786057,-4.837314,-7.951392,0.511074,-7.418548,-2.434621,-5.840434,2.266868,-1.444707,0.137475,8.380773,9.229158,1.395654,0.270388,0.241120,9.094781,-6.356920,3.610620,-4.519454,8.814183,0.111718,8.326563,2.055671,6.186601,7.915068,7.384884,-8.164759,-2.370423,8.055631,-5.735992,-9.946839,8.363253,-2.611065,5.884372,7.793820,8.394054,-5.799506,-0.695971,-1.162392,0.436719,-1.620923,-4.276126,-6.515337,-9.296179,-5.854039,-0.778023,-5.516836,3.404030,-5.708868,-5.795859,-4.797871,-9.262117,-7.565670,-8.707903,-6.998006,-0.461772,5.365580,6.248872,-1.185076,1.726851,6.341106,9.636410,9.076844,-4.047267,1.234870,9.296060,-8.650502,4.852033,-3.394316,2.737037,6.736316,2.262297,3.710749,-1.823703,0.706177,-4.315030,0.107599,-6.409991,0.313497,-9.880970,7.605343,-4.938673,0.223862,-3.430601,2.695223,0.343708,-7.477000,0.444712,4.681863,1.580832,-2.888407,0.596571,5.548034,-3.173573,-0.645462,7.439842,6.268871,-9.895468,9.530429,-6.017931,-8.746225,-6.433475,8.164489,-1.653967,8.445574,8.598228,-1.880493,-2.472079,-3.875430,-2.503692,2.411383,9.561542,4.229087,-7.133615,-4.822746,6.288591,-7.454980,2.069597,-1.668018,-0.251636,5.550239,9.279642,4.605588,4.208880,-8.375323,-4.866142,-9.821654,-1.902453,1.094451,-0.914569,-8.699768,7.370632,4.789486,-6.160858,-3.896685,-6.093430,-3.211508,5.860789,8.005227,0.628670,-2.261534,8.466739,5.387673,-1.628097,-9.879326,1.763905,5.087939,5.736143,1.265960,-4.476754,0.362085,-0.271676,-4.290436,1.271728,-4.752999,2.819912,-1.282240,8.431362,5.221539,4.801249,6.905535,-9.525830,6.529462,8.284073,0.697347,-3.823162,-8.664315,-1.722591,6.847930,-4.675302,-5.381338,-5.517785,9.865844,5.599359,-9.545085,-4.464163,4.848002,-4.648354,9.555731,8.111844,5.757314,8.947753,-5.709273,-7.900099,4.735055,-6.580857,-7.118415,-2.798784,-8.819528,-6.994709,-7.562245,-8.005152,6.381022,-0.758783,3.293242,7.376415,-1.298368,-7.697136,-9.382581,-3.790420,-0.374254,-9.098291,4.241802,-4.456530,-1.603321,-4.821321,9.386166,-7.901458,3.301026,2.047853,-0.499728,9.377633,0.672448,-2.190664,-1.673358,4.875241,2.140829,-6.473760,6.202367,-2.669290,7.566056,-6.920578,-5.616694,-6.681586,-3.465883,-1.456176,-5.096699,4.807643,5.980997,-1.169010,-6.317775,-9.780969,9.120282,-7.574233,9.843821,-6.994093,-7.797366,-6.101188,3.194552,-1.048611,-1.315903,-1.157101,7.555052,0.467525,5.983205,-9.004875,7.439590,0.998751,1.673153,5.434735,3.705903,-3.528386,6.307300,-3.120749,3.279269,-1.475812,8.487604,-9.050171,-9.253867,6.216276,3.657794,8.006166,3.167097,8.201504,-1.284736,3.998228,-5.334859,2.413639,-0.748385,-2.597113,3.638979,-0.602511,-3.421995,5.441348,-2.107839,-1.162988,-6.043714,-4.495369,9.768168,0.121638,4.205058,6.574659,-9.180175,7.212053,-0.870736,-0.072786,-8.146329,-9.604301,6.772389,8.315886,-7.172588,-1.459379,9.817607,-4.156779,-2.138866,-5.424332,1.742357,-9.001639,3.468206,-9.189255,5.112661,7.130461,8.416896,-9.249789,2.322547,-0.391883,-5.991951,-4.706257,-1.539159,-5.701625,-2.392983,-3.394680,-9.399806,6.056762,-6.953568,1.740467,-6.574932,7.494484,-8.304177,7.147183,8.727020,9.786421,-2.507459,9.393240,5.191739,5.057750,-8.875760,1.442466,-4.444925,-9.308202,-4.492621,0.354264,-1.642631,1.941098,-9.853836,-4.802092,-2.221880,9.634133,-0.531041,3.489057,-7.622587,5.448284,-9.336408,5.267744,-5.427013,7.364695,7.197274,1.609296,7.456612,-5.623377,4.579941,5.898614,9.935556,-4.373765,3.612891,3.422616,7.589061,4.021489,1.056733,-7.030534,-1.889343,-0.740479,-7.308775,-7.740461,-5.782332,-6.492583,1.366745,-7.176468,-7.615564,-8.398082,-1.758642,-9.160417,9.885027,-1.679172,-1.558841,-1.252678,-7.373854,1.603043,-3.497347,5.714901,-9.612391,1.520480,1.534593,-8.459337,-7.978789,-1.983929,-2.137518,-0.565176,-8.435631,-7.862399,-0.288450,4.374477,-5.272427,5.105101,-9.521045,0.562137,-8.983544,6.203695,-7.709090,-6.461221,-8.917221,-2.105680,9.931923,-5.423308,6.595447,-8.892262,4.324253,-7.991443,-3.160856,1.337868,-6.775305,-4.057680,1.346762,4.636857,0.997591,-0.088015,-9.615298,8.633713,-2.205752,6.871116,-5.735099,2.730418,0.624618,6.782738,3.608733,6.097380,-3.682866,0.999525,1.205962,7.707616,-3.786783,-3.833848,-5.747733,-4.429993,-5.468605,-0.743111,7.359050,-5.867661,-8.431010,2.935251,-5.186742,1.996290,-3.112028,-6.697056,4.470576,-8.759458,-0.798786,-2.464498,-7.368484,4.555409,-2.709110,-0.820137,4.082040,2.360688,-5.739777,2.880464,8.256346,8.405503,0.610051,7.748390,-7.872304,-8.581985,-9.915244,2.405765,1.580080,4.487803,3.362244,-1.177487,4.963785,-8.882021,-8.452207,-6.241614,-7.561635,5.492610,-2.823453,9.116008,-3.931800,0.340013,-9.664231,-0.324760,4.877316,-0.860007,6.414051,0.749514,-6.673279,-8.566594,7.314882,-8.467638,8.682095,-6.572974,-5.665508,-5.135239,5.129930,1.454865,-1.111075,-0.987844,-2.438328,-8.795083,4.821665,-7.591451,1.308096,-4.428559,9.526025,1.975666,-6.058511,-8.712507,4.758281,0.031825,-0.354048,-4.397352,-1.322882,-1.711075,9.355762,-1.261814,-5.733701,-5.237682,-6.454683,9.250397,6.456635,-1.231633,-2.959755,-0.959409,2.472433,-8.140116,4.337851,-2.259970,6.154581,-0.063687,-5.922569,2.346310,8.805605,-1.104037,-7.452136,2.159045,-9.730930,9.566925,7.755643,-4.551123,-5.156775,-5.142955,-4.507929,5.626868,-5.846387,-7.150418,6.091763,9.099066,-3.141929,-3.093419,0.316861,-3.083166,5.657535,-5.384953,-4.660963,9.749749,-8.442378,-0.471395,-7.008258,-9.596646,5.504918,5.535453,2.783818,6.932354,4.248514,-0.288671,7.515396,-3.716967,9.864477,7.104183,-1.508767,-1.236642,8.779108,6.362243,-1.372258,-8.132893,-4.361753,-5.635133,-8.745710,0.829407,1.628586,7.653056,1.182904,7.971989,-9.838610,-6.295897,7.532114,0.474008,7.129878,6.592511,2.889312,0.419067,2.745144,3.835624,6.295931,9.308974,-8.090479,5.541591,8.074623,-1.751383,-2.798230,-1.818201,5.680101,-2.686738,-4.121512,9.821231,7.273124,2.034607,-2.446758,-3.811947,-3.312193,3.100203,-2.512359,-2.287049,6.959034,-6.374012,1.727631,-2.346795,-1.199738,0.382947,-0.524770,-8.884468,7.195703,-9.600185,-3.765342,3.640587,2.630677,-5.595493,2.664699,8.311259,9.641601,-5.705873,-8.131883,-9.482231,4.604546,6.692777,-0.189402,0.356786,4.242735,5.947495,1.726831,-6.348861,2.219852,-3.093230,6.277133,-3.148884,1.800359,2.628235,2.324870,3.968076,9.602828,-7.278976,-5.449836,4.811256,5.766286,-7.541130,5.784364,1.398472,5.622677,-6.121011,7.329004,4.198856,1.751312,-0.405692,-6.405221,-3.049720,-4.593114,1.546702,-1.082587,9.109643,-3.717475,-5.495958,-9.892649,-6.140346,-2.539440,9.877008,3.579783,-7.000323,1.537823,1.896103,-8.383231,-8.020668,-4.300305,-5.774618,-6.104064,5.898573,7.883033,1.256739,5.119597,8.258547,-1.588977,-7.640031,5.669827,-3.445504,8.183504,5.269721,6.307927,5.104692,6.267116,3.153760,0.739121,-8.945928,-7.912188,-3.869317,-9.516485,8.164382,-5.579826,-9.782921,5.551574,3.186835,4.866750,-4.681998,-4.624182,-5.388227,5.094375,9.702869,-3.478430,3.046804,1.587672,5.995405,0.668501,-9.030835,-0.406876,-3.522023,-0.814308,-1.922995,-6.812018,-8.318517,-7.813066,-4.285018,-8.474692,-3.856115,-6.897477,-7.953222,-9.176283,7.354916,-1.610835,1.649078,-3.700407,-9.272038,0.753756,-0.615638,-1.552622,-0.233717,-6.202966,-8.778359,2.794735,4.752046,7.712224], dtype = "float32")#candidate|1041|(810,)|const|float32
const_1042 = relay.const([3.023572,2.879389,-8.489290,-0.456175,-3.263829,-1.591160,5.225715,1.451865,3.751729,0.150524,4.633771,8.554665,-1.362148,-0.868420,-2.854632,-1.667379,5.405955,-8.816167,3.577447,3.937434,3.260089,9.200940,-9.025504,-3.590072,-1.661780,9.663226,-1.277409,-2.520575,1.289149,7.630614,1.312385,-3.700272,5.141672,-6.423700,3.466768,-8.823136,8.606925,-4.911711,-7.075122,-2.968898,-3.356612,-5.646828,-3.965059,5.116475,4.546162,1.916727,-9.452428,-5.168757,-1.863044,-6.980863,-8.999310,-1.548320,-1.850529,2.759810,-5.568545,6.014002,7.338699,4.425509,3.333097,-6.988293,2.898231,0.252845,4.352566,5.885386,-4.598314,3.170351,-2.169267,5.539294,-3.503963,-2.814028,-6.182459,3.479256,2.477198,4.269369,1.630695,-3.651275,2.056444,-2.771038,5.871627,-1.971529,-3.249031,-8.523334,-5.091353,2.911889,-9.094854,8.727144,-4.339799,-1.127821,8.356403,-8.254470,6.639436,-4.618169,-1.449927,0.047033,-6.452113,4.718323,-6.680608,-5.657008,8.913852,0.243890,9.485457,-2.964089,-8.487011,2.368915,-9.099305,-0.937275,-1.058864,-3.322843,-1.319989,-4.196885,-1.753898,3.175254,5.727340,3.322902,7.960963,-2.155593,2.386401,-1.048164,-8.293776,8.019170,6.121253,-8.490341,-7.162171,-9.985412,2.102728,-8.904002,7.388026,-6.748220,4.814928,1.765540,-8.789557,9.762033,6.447199,0.185265,0.068384,-4.969928,2.841577,9.432642,-6.868010,-8.795119,-3.642942,0.844072,-4.421317,7.220272,4.310840,-4.112421,-0.549467,5.651125,-6.704287,8.175095,1.991005,-8.090075,4.702522,1.424516,-8.707576,4.817029,-8.338461,-4.826418,-0.422473,-2.247504,-3.011315,9.981135,-2.651746,-8.151904,-8.444526,-0.051607,-9.008818,-8.789853,-8.622504,2.179714,3.716077,-8.327327,8.143210,-6.897085,-1.870794,0.570900,8.426351,2.032310,5.210733,-7.631026,-2.865720,2.208774,-8.743874,-2.193545,1.307148,2.183637,-7.552798,-2.055551,-1.162350,5.734239,2.391864,0.050815,6.837309,-3.219460,4.985051,-4.221443,-8.130453,-5.508641,3.966169,2.487868,-4.490595,6.539296,-7.570418,-9.378089,-9.779142,1.563273,-5.080294,5.879743,-8.750733,-9.397583,-1.036445,6.511687,-5.440161,5.775394,-4.333223,9.323996,7.504286,1.878216,-2.629180,-5.334594,1.770139,5.413219,4.771192,1.898435,-1.640308,1.323070,6.882789,2.693579,-0.136989,5.980081,-3.972473,0.817671,-6.445185,3.747385,-2.076508,9.882383,-5.899984,6.185634,3.672628,3.057685,-6.464768,5.554795,2.563584,2.701209,4.650448,-5.339730,9.678659,-3.335456,-3.287394,9.976851,9.664448,-2.767997,2.998722,4.649715,-8.990653,-3.936838,6.522295,-8.469903,6.961348,-0.053400,8.154082,-2.480967,-6.463569,-0.257449,-2.143537,5.448889,-8.401923,3.916184,0.803000,6.344872,5.893867,-8.751538,8.306873,4.635977,1.268717,6.473531,-0.497347,8.152498,-2.441819,8.756628,3.378561,4.372500,-9.236378,5.851279,3.280463,-3.093232,0.503324,-5.029623,4.363775,6.758897,0.122835,2.353831,-7.898896,1.069359], dtype = "float64")#candidate|1042|(294,)|const|float64
call_1038 = relay.TupleGetItem(func_651_call(relay.reshape(var_1039.astype('int32'), [10, 4, 1]), relay.reshape(var_1040.astype('int32'), [10, 4, 13]), relay.reshape(const_1041.astype('float32'), [810,]), relay.reshape(const_1042.astype('float64'), [294,]), ), 4)
call_1043 = relay.TupleGetItem(func_657_call(relay.reshape(var_1039.astype('int32'), [10, 4, 1]), relay.reshape(var_1040.astype('int32'), [10, 4, 13]), relay.reshape(const_1041.astype('float32'), [810,]), relay.reshape(const_1042.astype('float64'), [294,]), ), 4)
output = relay.Tuple([uop_1034,call_1038,var_1039,var_1040,const_1041,const_1042,])
output2 = relay.Tuple([uop_1034,call_1043,var_1039,var_1040,const_1041,const_1042,])
func_1069 = relay.Function([var_1030,var_1039,var_1040,], output)
mod['func_1069'] = func_1069
mod = relay.transform.InferType()(mod)
var_1070 = relay.var("var_1070", dtype = "int64", shape = (2, 15, 15))#candidate|1070|(2, 15, 15)|var|int64
var_1071 = relay.var("var_1071", dtype = "int32", shape = (40,))#candidate|1071|(40,)|var|int32
var_1072 = relay.var("var_1072", dtype = "int32", shape = (520,))#candidate|1072|(520,)|var|int32
output = func_1069(var_1070,var_1071,var_1072,)
func_1073 = relay.Function([var_1070,var_1071,var_1072,], output)
mutated_mod['func_1073'] = func_1073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1240 = relay.var("var_1240", dtype = "uint16", shape = (13, 4, 15))#candidate|1240|(13, 4, 15)|var|uint16
var_1241 = relay.var("var_1241", dtype = "uint16", shape = (13, 4, 15))#candidate|1241|(13, 4, 15)|var|uint16
bop_1242 = relay.left_shift(var_1240.astype('uint16'), relay.reshape(var_1241.astype('uint16'), relay.shape_of(var_1240))) # shape=(13, 4, 15)
bop_1245 = relay.floor_divide(var_1240.astype('float32'), relay.reshape(var_1241.astype('float32'), relay.shape_of(var_1240))) # shape=(13, 4, 15)
func_586_call = mod.get_global_var('func_586')
func_590_call = mutated_mod.get_global_var('func_590')
var_1249 = relay.var("var_1249", dtype = "float32", shape = (600,))#candidate|1249|(600,)|var|float32
const_1250 = relay.const([-8.798418,-2.716667,8.601008,4.183457,1.083411,5.171909,0.750116,-2.657369,-9.299580,-1.359266,7.344600,1.373415,3.806548,0.056635,-3.293199,7.810293,0.431674,5.539383,-7.269825,5.573353,-4.736122,0.202473,6.786668,-9.941402,-7.972601,6.951474,-2.790039,8.850889,0.255978,-3.181730,-1.456134,4.463247,2.026708,-5.220282,3.684392,3.319429,6.491271,6.400100,5.694301,-8.700851,-3.394086,8.677459,-3.450682,7.123219,-2.551193,-1.868816,7.700137,-4.134619,-4.306167,-8.683233,-9.523033,1.985581,-7.324149,6.428677,2.900273,-9.440635,3.375759,-8.433362,-4.143275,-7.131599,4.657961,9.069175,-4.199328,-3.606255,2.386190,-7.268119,-8.903388,6.721140,-1.801658,-0.713511,-0.666544,4.500660,7.733490,-3.899555,1.245549,-7.992896,3.150360,0.995512,5.972140,-1.234571,-4.286366,5.655155,-5.416175,-4.702553,4.915688,-4.775559,9.012688,6.641724,4.284980,-4.805241,-6.779369,-2.621629,7.789242,5.669213,4.778259,1.997750,-8.706264,-4.944811,9.351073,0.791023,-4.682458,-5.067557,-5.532732,-2.768558,4.178983,-8.968797,4.909325,6.560345,3.823544,3.884844,-7.785476,-6.174437,7.426054,-9.825633,1.554841,0.415194,3.803922,1.018453,-5.586702,-2.009161,4.609009,2.157180,3.150408,1.606449,-1.454205,8.206771,5.040623,0.082287,-0.182039,8.708786,-7.389704,5.618777,-0.637174,6.883811,-9.901419,6.939762,-1.506474,-5.475972,7.280397,-4.835854,6.152335,6.814010,-6.485961,8.040746,-3.160394,-5.469274,-1.468184,-1.176953,8.753109,0.030172,0.397937,6.271989,4.549323,0.223240,3.253434,-9.346517,2.966006,2.622422,4.827496,9.641851,2.239381,-1.339793,5.648337,-5.529948,-5.052201,4.483854,-1.071269,5.166020,-8.760413,7.367426,6.792989,-7.306178,3.127513,-8.204046,8.547562,-4.479232,1.884898,-8.173165,3.060412,5.135120,-8.063899,-5.349228,2.956973,-8.416116,-7.564124,5.879898,-9.533339,4.802101,0.618737,-7.257724,8.247094,1.570275,4.523807,6.349899,6.286124,-4.093175,5.261989,-7.459973,-6.955496,8.697588,-4.775857,-6.365161,-5.906023,-3.270675,1.702328,-2.168241,2.410742,-3.433815,5.203417,-7.093399,-4.739936,-1.615606,9.610272,7.584685,-8.294949,-5.902804,1.585670,5.954540,-0.530459,-9.731634,-9.772035,-7.054474,-9.097980,-8.944342,8.492073,-8.415691,0.217300,3.716896,-0.925804,-2.807783,8.005564,3.087076,-2.121457,6.426334,9.500677,-8.570842,-5.017867,0.771131,3.167879,5.984186,-2.686994,7.211118,-6.486592,-5.791048,0.489386,6.960312,-0.155438,3.936763,6.066848,7.854081,-0.243856,-3.276742,4.871820,-9.343935,8.144380,5.702172,4.988576,6.671905,7.721533,-0.572374,1.906499,-7.813978,9.321470,-2.278496,-0.376583,8.524758,5.155210,9.327299,0.340921,-7.401764,4.966938,2.693841,-8.242384,5.667086,-1.559447,-4.480498,8.319678,7.818105,-5.288690,-1.844959,-5.077948,-0.251658,7.156772,-4.216497,5.875610,-8.852188,-2.318738,5.142251,-4.969172,-2.988837,4.754884,-4.207699,2.142362,1.906174,4.340814,-6.321675,2.799682,-7.504875,1.000967,8.255984,3.786676,8.404959,4.893049,-9.823274,2.054241,1.403612,3.210355,-3.817804,4.767745,-7.215205,5.260174,-7.634693,8.577312,7.720199,9.267527,8.152515,-7.232773,-4.919075,-2.399331,-5.633134,-2.086430,-9.298306,8.120407,-5.546002,-9.081585,-6.270532,-7.519478,-0.339360,7.071222,-2.285346,-6.016331,8.673158,-7.333704,0.618365,-5.253494,8.619801,0.765920,-7.228704,-7.481951,3.464731,7.152296,-7.326210,0.550161,-3.861196,-7.698822,8.671491,-7.008852,-7.792075,3.296042,5.237593,9.276099,-6.934986,-1.194197,5.710286,7.903333,8.361695,-6.249531,-1.216771,-1.736260,-7.904782,7.862157,-6.101809,-8.514691,9.664894,-0.738054,3.182418,1.590411,-5.942349,-2.675682,-6.763329,-2.007551,6.191269,8.558989,-5.610785,-9.177854,-5.404968,9.349100,3.750513,5.429787,5.179170,-1.445408,7.235315,-7.065206,8.521190,-9.215507,-4.906102,-8.283180,4.446886,-8.934665,6.546789,3.383776,-0.991385,-7.534836,-0.495411,-2.895023,5.560002,1.039072,-6.971837,-0.885645,-9.125340,4.456515,-1.756012,-9.786570,3.255694,3.367162,2.506489,9.479244,5.320157,-9.859866,5.911291,2.530146,1.808044,-1.187753,-8.483695,1.269632,9.056346,-2.388219,-0.662958,0.119617,1.114457,2.113536,3.931228,-9.570429,-6.317271,2.229188,-4.677645,8.811949,4.709714,2.582692,-9.209909,-2.148760,-5.982247,8.372114,-8.648809,-9.835102,-8.523106,-3.446655,-9.686369,-0.121592,0.991586,1.482450,7.362274,9.549060,-0.804089,-1.998118,-6.377596,-4.274383,7.928684,4.627586,-7.750823,1.999994,0.883031,3.426966,4.855138,0.898654,4.312349,-6.143879,5.728371,4.900884,-9.354225,-5.206427,-4.794257,9.521895,6.239041,5.220266,2.735634,-3.828162,6.880043,-7.821733,2.281558,9.520677,-5.618138,3.330861,-3.352134,2.535146,3.388986,3.668834,-6.319571,4.662284,1.402013,-2.640021,-2.270351,-1.481931,-5.226857,-3.313185,-2.189261,-5.136943,9.161694,-3.079261,-2.426095,-2.224739,9.239894,9.993479,3.572159,7.941527,-0.311709,8.166354,-3.651285,-6.397718,-2.079775,1.844766,-0.640524,-5.059980,3.459893,4.028948,-5.222902,8.402726,0.371635,-1.426577,-4.890053,-0.160269,9.906370,3.259290,0.681042,-2.556150,-7.015009,-4.526476,0.326004,-5.323880,7.685438,-9.123073,9.009500,2.458269,-0.745041,5.817482,-2.450333,6.659114,9.613428,0.546423,-2.105058,9.778700,9.561135,-6.688618,-4.446994,-8.105015,-7.258648,0.176405,-8.786622,5.701020,-6.359566,5.855930,-5.686924,-8.696961,0.657835,-0.411845,0.290105,-4.759794,8.093932,3.791431,5.346605,8.485940,-4.348317,-0.927120,5.835097,-4.876874,-9.692835,-0.565902,-7.217227,0.542851,0.985298,-8.688634,7.540112,9.945996,5.985908,-4.691872,-7.364650,-1.965482,-3.210901,-6.953157,-4.056936,-7.833613,-0.382567,2.123760,1.069633,2.113480,-6.089261,-4.656050,-4.418143,-8.503056,-5.363904,3.086763,-5.025487,-0.479766,-7.039074,8.223355,4.070224,3.997563,-7.784933,-0.687759,1.455370,-7.861399,6.758162,3.482533,1.552186,1.386687,-7.254859,-5.075444,5.812998,-3.691620,0.095420,-7.316345,0.868516,5.317764,5.658375,0.727288,2.099523,-4.311966,-7.126091,-0.500674,-8.690409,-9.576336,-4.048987,5.489285,9.183635,9.070341,8.523583,9.182238,-1.630656,7.878735,-2.620721,-8.096973,-4.722564,8.477168,4.718113,-0.851500,0.660601,-6.506865,-3.859271,9.651249,7.511827,-8.304166,1.021157,7.722810,-8.608736,6.315485,-7.838483,-5.008006,-3.338279,2.383390,-2.026726,4.321513,-0.732638,8.013416,-4.055417,-2.232726,-8.396544,-7.562816,-6.584386,6.035236,-4.149187,-3.399468,-4.109359,-6.918878,-2.446817,-6.075042,9.368250,-4.668799,-7.046091,-3.857357,1.556574,-8.499681,-7.166977,4.304456,4.373760,8.708209,0.402931,-8.009254,7.085594,-6.396644,-8.591014,-1.673357,4.816290,-5.554167,-3.933707,-8.699762,5.355279,8.644625,2.010246,8.474939,3.809456,9.184001,-4.844923,1.621402,-3.088368,7.098884,-3.788194,-6.821994,-7.492998,9.481801,-0.441539,-1.163505,3.247001,1.964350,-5.142227,3.769393,5.536145,-4.455890,-3.370730,9.653437,-7.947632,5.635724,-0.530352,-3.713455,-3.473722,-8.247864,4.435638,9.364777,-8.281993,1.904841,6.762997,1.466296,0.739183,-8.641908,3.809970,-0.663882,-3.352272,-8.936587,-7.626344,3.912178,5.408734,9.956665,4.000808,6.852639,2.035941,-7.171065,9.249703,5.596502,-2.807303,-7.152301,-6.523657,2.501863,-2.372915,3.137725,-1.095558,-6.986063,-4.728149,-9.950219,-4.309819,-2.072223,-8.384926,-6.058298,-0.510418,8.746289,2.541965,-8.385775,-8.818107,-6.404556,5.117923,9.685535,-8.317227,6.708264,4.205976,-9.167223,8.977686,7.331089,-5.268848,0.998430,-0.433543,7.559482,-6.334026,5.971415,2.596776,-4.679067,8.498099,-7.008596,0.250589,8.217565,6.351579,-5.241574,-6.150795,-4.679015,0.642122,9.340278,-0.793751,5.000168,-0.880445,-0.578039,-0.260722,-5.002714,-0.143436,7.585379,0.661475,5.445187,0.102174,0.746405,8.864766,-8.700606,-8.752257,-8.284754,-2.240835,4.438063,-6.251395,-3.808475,-5.240962,8.867550,2.355375,-3.500076,9.012958,2.210105,4.039323,-9.616042,-1.753445,3.559676,-1.289455,-7.277835,5.055475,4.499416,5.774960,-7.718183,-5.525717], dtype = "float32")#candidate|1250|(810,)|const|float32
var_1251 = relay.var("var_1251", dtype = "float64", shape = (294,))#candidate|1251|(294,)|var|float64
call_1248 = relay.TupleGetItem(func_586_call(relay.reshape(var_1249.astype('float32'), [10, 5, 12]), relay.reshape(const_1250.astype('float32'), [810,]), relay.reshape(var_1251.astype('float64'), [294,]), ), 2)
call_1252 = relay.TupleGetItem(func_590_call(relay.reshape(var_1249.astype('float32'), [10, 5, 12]), relay.reshape(const_1250.astype('float32'), [810,]), relay.reshape(var_1251.astype('float64'), [294,]), ), 2)
const_1260 = relay.const([0.568936,2.105866,-4.437790,4.850698,6.048576,7.936274,-0.077088,-6.880850,-6.203515,8.867939,0.027100,6.864598,-4.620035,-6.960959,-0.725969,-7.319473,2.339230,7.569099,7.260139,-3.632783,5.925204,-9.447100,-3.298588,0.976603,-7.496139,3.853155,-5.931493,-1.965616,6.789540,-4.329638,-8.311677,-0.049170,-8.162512,7.522899,-4.992989,8.019490,-3.130533,3.632911,-4.482463,4.103600,6.859297,7.657473,5.330867,-3.510612,-2.615424,-8.142710,3.385589,-1.248122,6.070219,4.227092,-9.418846,5.920308,-4.818239,8.713646,1.347361,3.532924,6.652121,5.500577,1.920312,0.683502,-0.263171,-0.635177,-1.121971,9.677964,1.278533,7.926845,1.361715,-5.228920,6.490686,9.749142,-6.189370,9.957192,5.224806,2.415961,-0.427767,-1.969100,-6.342711,-7.276128,-3.908479,-8.037862,-3.684072,1.179649,8.134135,6.010221,2.618124,6.546048,-7.074704,8.235717,0.246465,-0.736954,3.680378,-6.303702,0.971848,1.780131,4.749202,0.517381,0.861586,1.869368,-0.073920,-1.325675,1.253226,-8.344383,-8.552116,8.484643,-3.352700,-0.581163,3.256768,8.374602,8.614202,-3.714823,2.017845,7.259219,-4.122761,0.400899,1.227125,-9.992879,7.716568,-3.614966,-4.651034,-6.074811,0.036921,-1.948169,4.474975,-4.889854,-4.723378,5.574466,-6.694503,0.986210,-4.100030,-2.040503,-4.909290,-4.874917,4.757394,8.456292,4.368564,-6.602047,-8.614921,1.997568,-5.464365,0.686067,-5.845762,-1.119126,1.338088,2.300706,-8.609776,0.155974,-3.293422,4.814370,0.811431,3.284747,-9.369536,4.359954,-8.475767,-8.092740,-0.407072,-8.459120,3.427563,-1.823761,-6.229960,-4.112980,5.270631,3.617293,0.077123,8.944653,0.824055,0.994161,-0.704028,1.037627,8.554678,8.390014,0.006320,-2.369442,0.146415,9.491793,-3.211419,-6.985289,8.880927,8.796042,-5.273462,0.063413,3.444823,7.358188,-6.092928,0.938783,1.758465,3.346951,-0.435358,3.009433,-0.248262,0.605425,-7.544081,-8.678959,0.432211,-3.729227,-9.549585,1.679526,1.760359,0.225334,9.657630,9.304362,-2.956954,1.695755,4.422366,-2.568560,3.178973,-7.991694,8.191909,-6.058380,6.801133,3.481156,-8.024533,9.912565,2.945597,2.940772,0.694454,7.593206,-6.910900,-8.597964,4.260114,5.486821,-8.811971,-4.662840,8.316779,-0.946069,-7.802969,-8.230303,9.263437,-2.835271,7.206744,7.623537,-1.611051,-4.258585,-1.919877,-8.409613,7.200598,-2.770579,-0.947299,1.316212,9.710588,-2.405700,6.718130,2.520022,-0.408599,-0.549118,6.654246,4.766043,-1.114605,-8.796033,-7.110136,6.485087,4.018669,-9.978646,-7.822955,1.427330,1.953976,7.120563,-1.669299,1.360617,-2.692063,-8.769268,-9.946924,-8.659211,2.098567,8.763575,3.533607,8.944558,-5.901246,-2.436245,-2.168818,5.047250,9.516350,-9.785210,4.735371,4.628888,2.752735,1.046644,5.143778,6.691500,6.655687,-7.070693,3.208915,3.280810,4.809301,-5.279784,1.869566,-7.602514,1.055492,-9.272081,-1.512317,-2.230724,-7.507180,3.271763,4.180749,-1.663652], dtype = "float64")#candidate|1260|(294,)|const|float64
bop_1261 = relay.floor_divide(var_1251.astype('float32'), relay.reshape(const_1260.astype('float32'), relay.shape_of(var_1251))) # shape=(294,)
output = relay.Tuple([bop_1242,bop_1245,call_1248,var_1249,const_1250,bop_1261,])
output2 = relay.Tuple([bop_1242,bop_1245,call_1252,var_1249,const_1250,bop_1261,])
func_1264 = relay.Function([var_1240,var_1241,var_1249,var_1251,], output)
mod['func_1264'] = func_1264
mod = relay.transform.InferType()(mod)
mutated_mod['func_1264'] = func_1264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mutated_mod.get_global_var('func_1264')
var_1266 = relay.var("var_1266", dtype = "uint16", shape = (13, 4, 15))#candidate|1266|(13, 4, 15)|var|uint16
var_1267 = relay.var("var_1267", dtype = "uint16", shape = (13, 4, 15))#candidate|1267|(13, 4, 15)|var|uint16
var_1268 = relay.var("var_1268", dtype = "float32", shape = (600,))#candidate|1268|(600,)|var|float32
var_1269 = relay.var("var_1269", dtype = "float64", shape = (294,))#candidate|1269|(294,)|var|float64
call_1265 = func_1264_call(var_1266,var_1267,var_1268,var_1269,)
output = call_1265
func_1270 = relay.Function([var_1266,var_1267,var_1268,var_1269,], output)
mutated_mod['func_1270'] = func_1270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1353 = relay.var("var_1353", dtype = "float32", shape = (7, 15, 15))#candidate|1353|(7, 15, 15)|var|float32
uop_1354 = relay.rsqrt(var_1353.astype('float32')) # shape=(7, 15, 15)
bop_1357 = relay.equal(var_1353.astype('bool'), relay.reshape(uop_1354.astype('bool'), relay.shape_of(var_1353))) # shape=(7, 15, 15)
output = bop_1357
output2 = bop_1357
func_1360 = relay.Function([var_1353,], output)
mod['func_1360'] = func_1360
mod = relay.transform.InferType()(mod)
mutated_mod['func_1360'] = func_1360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1361 = relay.var("var_1361", dtype = "float32", shape = (7, 15, 15))#candidate|1361|(7, 15, 15)|var|float32
func_1360_call = mutated_mod.get_global_var('func_1360')
call_1362 = func_1360_call(var_1361)
output = call_1362
func_1363 = relay.Function([var_1361], output)
mutated_mod['func_1363'] = func_1363
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1649 = relay.var("var_1649", dtype = "int64", shape = ())#candidate|1649|()|var|int64
var_1650 = relay.var("var_1650", dtype = "int64", shape = (4, 3, 14))#candidate|1650|(4, 3, 14)|var|int64
bop_1651 = relay.less(var_1649.astype('bool'), var_1650.astype('bool')) # shape=(4, 3, 14)
output = bop_1651
output2 = bop_1651
func_1655 = relay.Function([var_1649,var_1650,], output)
mod['func_1655'] = func_1655
mod = relay.transform.InferType()(mod)
var_1656 = relay.var("var_1656", dtype = "int64", shape = ())#candidate|1656|()|var|int64
var_1657 = relay.var("var_1657", dtype = "int64", shape = (4, 3, 14))#candidate|1657|(4, 3, 14)|var|int64
output = func_1655(var_1656,var_1657,)
func_1658 = relay.Function([var_1656,var_1657,], output)
mutated_mod['func_1658'] = func_1658
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1801 = relay.const(8, dtype = "int8")#candidate|1801|()|const|int8
var_1802 = relay.var("var_1802", dtype = "int8", shape = (4, 3, 8))#candidate|1802|(4, 3, 8)|var|int8
bop_1803 = relay.greater(const_1801.astype('bool'), var_1802.astype('bool')) # shape=(4, 3, 8)
func_974_call = mod.get_global_var('func_974')
func_980_call = mutated_mod.get_global_var('func_980')
var_1814 = relay.var("var_1814", dtype = "bool", shape = (1, 180))#candidate|1814|(1, 180)|var|bool
var_1815 = relay.var("var_1815", dtype = "float32", shape = (810,))#candidate|1815|(810,)|var|float32
const_1816 = relay.const([4.700395,2.280311,-9.572617,7.550231,9.221206,-6.372875,3.182340,-6.302411,-5.990285,-0.561410,-3.448044,-9.661822,7.204200,2.780211,3.212217,-1.090357,2.608337,-7.995271,-4.109470,6.759555,-9.024796,9.830197,-5.732380,7.468898,6.659211,-0.914137,-2.623834,-6.846965,-8.206907,-8.961566,-3.987442,-4.237551,9.042375,4.077303,-5.363243,8.134695,-8.134925,-6.138063,-3.941482,-2.427816,-9.120523,-6.456713,2.490937,-6.082113,-6.893366,-2.261849,5.077886,-1.336002,8.713395,-6.996560,6.153012,-4.499903,-1.021988,-7.216978,-9.109075,-8.711963,5.436955,-3.744930,1.089756,-6.842739,4.666462,9.611742,8.898284,3.843091,3.261975,2.819083,-0.864687,4.447481,-1.143163,2.635379,-7.021941,2.562010,-7.473788,-7.511860,-8.776707,-6.095098,3.776379,-7.166761,5.832043,0.310597,0.436530,1.330920,-8.725369,1.236038,-3.220398,-8.496435,-5.794812,-6.158423,9.503375,3.785938,8.975771,7.454803,2.699004,-8.365995,-4.159809,7.540449,-1.843200,4.769530,2.183082,9.932817,3.369783,-1.180667,-5.654294,9.043079,-8.442373,2.382869,-3.312659,-6.319167,2.077531,-3.899311,9.824539,2.332632,2.220496,-0.199492,7.379755,-4.883074,3.262076,8.283268,-7.067583,7.796247,2.746377,-4.632488,-6.820835,5.140438,1.068837,4.898987,5.137127,-1.470403,3.334577,-5.280437,6.269892,9.399735,3.675058,-7.304620,0.482298,-6.860079,-3.626879,-4.100412,-1.022858,-2.606253,-7.917595,-4.349268,1.242763,-1.222553,4.358601,8.602227,9.145525,-4.084925,3.598863,-4.204509,-3.061229,3.357503,-5.031829,8.555838,5.855809,-3.711676,9.469559,-1.743033,-5.777588,8.654781,3.140000,-9.755089,-3.237273,4.365531,3.586883,-4.207241,1.165658,-7.373638,-9.271544,-6.572861,-9.173534,3.387371,5.436957,-1.426331,-7.104870,1.559823,-7.965777,-6.970758,-4.307850,1.762614,-3.154444,-6.912148,5.993730,1.374851,-1.137356,-4.502342,-2.470489,2.051161,1.589727,0.453822,8.065682,8.557844,-0.135992,-8.273914,8.398881,-0.852935,-2.481690,5.813012,-0.805800,1.833020,-6.404316,7.782428,1.121676,-0.573541,-7.869644,-9.889855,3.197869,8.707229,5.422007,-2.746927,7.289464,-4.346171,9.527845,-6.020148,-3.944095,8.179892,9.615516,-3.941440,8.193565,0.379848,-6.542585,8.981063,0.300974,-9.177847,1.749940,9.550627,0.201080,-3.393828,-7.980759,-6.737043,-0.507675,0.996534,-4.609301,-6.433581,6.196890,9.589867,7.242565,7.868027,-1.145743,4.600848,-1.296040,-7.030982,2.387848,8.614777,0.763437,-9.004227,5.949160,3.791967,5.259751,3.904147,7.149111,3.402567,1.840462,4.183638,-7.260026,2.083594,-7.765646,-1.041989,-6.405873,9.395882,-0.006710,1.399034,3.091524,9.966790,-8.649212,8.051756,-0.896092,-6.500606,6.408380,2.622383,0.269990,1.395181,-8.100874,7.733984,0.409105,7.488979,-2.044250,4.840530,5.896055,8.829301,8.767409,-1.456245,8.476013,5.410488,-4.679343,-1.010702,-6.456805,7.487393,2.689375,5.110851,9.188663,-3.434530,-7.666376,-6.473679], dtype = "float64")#candidate|1816|(294,)|const|float64
const_1817 = relay.const([-10,3,4,3,3,-3,-1,8,-1,-5,-1,-1,9,-7,10,-2,-2,10,-8,-6,-10,-10,1,2,-1,1,2,-4,5,3,-1,8,2,1,-10,3,-6,-10,10,-7], dtype = "int32")#candidate|1817|(40,)|const|int32
call_1813 = relay.TupleGetItem(func_974_call(relay.reshape(var_1814.astype('bool'), [2, 15, 6]), relay.reshape(var_1814.astype('bool'), [2, 15, 6]), relay.reshape(var_1815.astype('float32'), [810,]), relay.reshape(const_1816.astype('float64'), [294,]), relay.reshape(const_1817.astype('int32'), [10, 4]), ), 8)
call_1818 = relay.TupleGetItem(func_980_call(relay.reshape(var_1814.astype('bool'), [2, 15, 6]), relay.reshape(var_1814.astype('bool'), [2, 15, 6]), relay.reshape(var_1815.astype('float32'), [810,]), relay.reshape(const_1816.astype('float64'), [294,]), relay.reshape(const_1817.astype('int32'), [10, 4]), ), 8)
bop_1826 = relay.floor_mod(var_1815.astype('float32'), const_1801.astype('float32')) # shape=(810,)
const_1842 = relay.const([-0.861237,7.440556,-0.848238,-7.847573,-4.381066,7.070787,-8.528925,-7.010972,1.372108,9.895045,8.490226,-7.240682,0.948224,-1.300457,-8.581839,-2.141767,7.913572,-9.170138,-1.982740,5.140270,1.291173,-6.619584,4.561365,-3.830886,5.986524,6.605457,-4.171276,4.578683,3.266888,6.109315,-8.784883,9.882331,-3.427723,4.158955,-8.177645,8.488665,5.966156,6.400698,8.647093,2.044551,-2.235710,2.394109,5.719002,-8.249376,-1.258846,-1.170319,1.893849,4.903837,-6.307812,-2.981019,5.022013,-2.209646,-0.453564,-8.015802,-9.477504,-4.274960,-0.836173,0.961819,-0.200147,-8.277124,-9.470572,8.539643,-8.927816,3.100529,-6.127482,1.445281,0.890937,-8.778751,-5.262877,0.394608,1.251886,7.227623,7.099643,4.880612,-6.068005,4.349960,-2.932194,-1.567544,3.861036,3.655610,-8.978786,8.515605,3.457076,4.687220,-9.067759,-5.012557,-4.418052,6.233489,-8.056857,3.205799,9.213186,7.404929,-7.811865,-1.894170,2.392953,2.608943,5.476698,-0.237166,-8.974141,-7.973152,-1.568966,-9.593700,-2.026789,4.239460,-1.381346,2.672070,4.041322,-4.415403,-7.683339,4.260592,-4.595663,5.136060,0.797028,-4.058227,1.138713,9.416240,3.664554,-2.880253,9.747991,7.153349,0.130757,8.440173,3.114428,-9.387100,4.290083,-8.942088,-3.921355,9.635192,9.091201,7.604381,-4.565135,-6.043867,1.397051,0.430911,-9.059214,-2.082669,6.209634,-6.026448,9.020248,-2.470588,-2.262542,7.612583,0.245631,7.663858,-6.314369,3.119906,7.655095,9.926681,5.898235,4.811051,5.578894,3.309198,-4.663591,1.887650,-1.379440,-4.536294,-0.453925,0.804307,-3.829951,-9.708091,1.304522,3.319356,-2.440999,9.609076,6.098628,5.479078,9.996595,9.518006,6.667994,1.279177,-6.546528,-2.478480,9.206682,-9.823804,-0.732172,9.999583,2.036493,-4.375133,3.829079,5.378804,4.574779,0.408032,9.737286,-1.935178,3.933255,-6.010965,2.568507,6.501142,-9.938076,-3.535191,-4.667238,-8.034389,-6.914907,9.403150,0.479649,-2.902901,-8.382536,4.035121,-9.894094,-3.992043,9.683057,1.281004,9.054168,-0.197371,9.858445,6.845906,-5.054424,3.785413,-4.423963,-7.444189,9.147254,-0.740152,-5.353841,8.337553,3.438585,-9.302987,-7.491220,0.576606,-1.342389,0.686631,-4.069783,-1.257765,-6.509483,4.204815,-6.115188,-6.252699,-6.468490,0.107367,-1.991757,6.109034,-7.058430,5.986800,-1.029446,6.016098,-9.184186,-9.896403,1.212163,2.211287,-8.727380,-5.704738,-9.062868,-3.919062,-3.512988,9.956795,-4.313331,-5.892270,-8.982806,3.471472,5.455673,-8.782628,0.838831,-2.731117,1.296169,-2.651429,4.150217,-8.026917,-1.008233,-6.677072,4.194630,4.173660,8.296801,-6.810798,5.477408,-8.047005,-8.154452,-3.857172,0.950019,-0.215145,-5.955890,-5.902557,-8.258908,6.811242,5.026099,4.095750,3.347766,-6.218945,-5.437878,8.362858,-7.916614,-4.047464,-9.748147,-6.350995,-9.789944,-3.189899,5.127957,-9.394097,4.208635,-8.780099,6.134096,7.356349,4.678356,3.040459,9.931063,4.871044], dtype = "float64")#candidate|1842|(294,)|const|float64
bop_1843 = relay.logical_or(const_1816.astype('bool'), relay.reshape(const_1842.astype('bool'), relay.shape_of(const_1816))) # shape=(294,)
func_586_call = mod.get_global_var('func_586')
func_590_call = mutated_mod.get_global_var('func_590')
var_1859 = relay.var("var_1859", dtype = "float32", shape = (600,))#candidate|1859|(600,)|var|float32
call_1858 = relay.TupleGetItem(func_586_call(relay.reshape(var_1859.astype('float32'), [10, 5, 12]), relay.reshape(bop_1826.astype('float32'), [810,]), relay.reshape(call_1813.astype('float64'), [294,]), ), 0)
call_1860 = relay.TupleGetItem(func_590_call(relay.reshape(var_1859.astype('float32'), [10, 5, 12]), relay.reshape(bop_1826.astype('float32'), [810,]), relay.reshape(call_1813.astype('float64'), [294,]), ), 0)
output = relay.Tuple([bop_1803,call_1813,var_1814,const_1817,bop_1826,bop_1843,call_1858,var_1859,])
output2 = relay.Tuple([bop_1803,call_1818,var_1814,const_1817,bop_1826,bop_1843,call_1860,var_1859,])
func_1894 = relay.Function([var_1802,var_1814,var_1815,var_1859,], output)
mod['func_1894'] = func_1894
mod = relay.transform.InferType()(mod)
mutated_mod['func_1894'] = func_1894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1894_call = mutated_mod.get_global_var('func_1894')
var_1896 = relay.var("var_1896", dtype = "int8", shape = (4, 3, 8))#candidate|1896|(4, 3, 8)|var|int8
var_1897 = relay.var("var_1897", dtype = "bool", shape = (1, 180))#candidate|1897|(1, 180)|var|bool
var_1898 = relay.var("var_1898", dtype = "float32", shape = (810,))#candidate|1898|(810,)|var|float32
var_1899 = relay.var("var_1899", dtype = "float32", shape = (600,))#candidate|1899|(600,)|var|float32
call_1895 = func_1894_call(var_1896,var_1897,var_1898,var_1899,)
output = call_1895
func_1900 = relay.Function([var_1896,var_1897,var_1898,var_1899,], output)
mutated_mod['func_1900'] = func_1900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2032 = relay.var("var_2032", dtype = "uint64", shape = (16, 13, 7))#candidate|2032|(16, 13, 7)|var|uint64
var_2033 = relay.var("var_2033", dtype = "uint64", shape = (16, 13, 7))#candidate|2033|(16, 13, 7)|var|uint64
bop_2034 = relay.maximum(var_2032.astype('uint64'), relay.reshape(var_2033.astype('uint64'), relay.shape_of(var_2032))) # shape=(16, 13, 7)
output = relay.Tuple([bop_2034,])
output2 = relay.Tuple([bop_2034,])
func_2041 = relay.Function([var_2032,var_2033,], output)
mod['func_2041'] = func_2041
mod = relay.transform.InferType()(mod)
var_2042 = relay.var("var_2042", dtype = "uint64", shape = (16, 13, 7))#candidate|2042|(16, 13, 7)|var|uint64
var_2043 = relay.var("var_2043", dtype = "uint64", shape = (16, 13, 7))#candidate|2043|(16, 13, 7)|var|uint64
output = func_2041(var_2042,var_2043,)
func_2044 = relay.Function([var_2042,var_2043,], output)
mutated_mod['func_2044'] = func_2044
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2521 = relay.const([[[-4,7,-4,-8,-7,7],[4,4,-3,-5,-1,-7],[-5,-1,2,6,-10,10],[4,-2,6,6,-1,2],[-1,10,-6,-1,1,-6]],[[9,-1,-9,-7,-2,3],[-8,-8,1,-7,-8,4],[-4,-5,-9,8,-4,-9],[3,-7,2,-10,1,3],[9,6,-9,-9,5,7]],[[-6,-2,-5,3,-6,2],[-10,-10,4,5,-7,9],[1,-8,4,2,10,10],[6,5,6,10,4,1],[7,-1,6,10,-2,6]],[[4,7,4,1,-5,-4],[8,8,-5,-1,-4,-9],[-4,10,7,-3,-5,-7],[10,-1,-6,3,-8,-7],[-10,9,3,-4,7,5]],[[9,-7,8,5,1,10],[-2,3,-6,7,1,9],[2,-10,-9,-4,-3,-5],[4,1,-8,5,8,4],[-10,-1,4,2,-5,-6]],[[-9,3,3,7,9,-5],[10,1,-9,1,3,-10],[-4,-7,-7,3,5,-8],[-3,-6,-2,1,2,-10],[-4,-10,-5,-8,-3,7]],[[-7,-5,-4,9,-7,-2],[-5,-3,-7,-7,5,10],[10,-8,2,-2,-6,1],[8,-9,-6,-8,-6,-9],[-5,3,-6,2,2,8]],[[5,-3,4,1,4,1],[-3,-3,1,1,10,7],[-9,-1,-7,5,8,-3],[9,-4,-3,5,3,4],[-9,1,-1,5,-5,2]]], dtype = "uint8")#candidate|2521|(8, 5, 6)|const|uint8
var_2522 = relay.var("var_2522", dtype = "uint8", shape = (8, 5, 6))#candidate|2522|(8, 5, 6)|var|uint8
bop_2523 = relay.multiply(const_2521.astype('uint8'), relay.reshape(var_2522.astype('uint8'), relay.shape_of(const_2521))) # shape=(8, 5, 6)
func_974_call = mod.get_global_var('func_974')
func_980_call = mutated_mod.get_global_var('func_980')
var_2532 = relay.var("var_2532", dtype = "bool", shape = (180,))#candidate|2532|(180,)|var|bool
const_2533 = relay.const([-2.084820,-9.771216,-0.497989,-2.504694,4.683502,-6.620221,-6.317482,1.634036,-0.920175,0.116962,5.262663,2.657930,0.158239,-4.826485,-7.604243,8.147041,3.456445,1.887013,7.342146,-2.928003,-9.583046,4.981110,3.347170,4.025047,4.355343,-5.146075,-3.597141,9.624148,-5.698702,8.878917,4.878512,8.164785,-2.840507,-0.139445,7.345867,1.026866,9.849496,-4.306287,6.287929,8.112953,-6.571351,7.144778,5.516890,-8.518145,-3.766918,-9.485185,-7.992494,1.542216,-9.548831,-9.748255,-9.032632,9.005210,5.405842,8.256827,6.374503,9.665188,-0.859007,0.355717,0.367422,1.149622,5.302668,0.429817,2.577365,-6.319921,-2.272214,9.475611,-4.186761,-8.180866,-3.772544,-5.605928,-1.132758,-2.840478,-3.554501,-3.939331,9.385830,-1.635648,8.064950,2.152269,-6.733686,2.641635,-6.775605,6.646511,7.191410,-3.493992,6.741812,-5.091277,-4.626110,-9.860027,-5.793486,-1.941549,-5.105588,-2.927868,-2.477105,2.036793,4.745588,6.488640,9.076081,6.361272,3.306502,8.298845,-5.614689,-6.519627,-9.976074,-3.769082,-8.406551,-8.900816,1.352738,-2.860290,-5.419290,-7.329167,-7.220455,-8.621193,-8.329607,0.109173,9.635466,6.832982,-8.199442,5.961783,-3.911457,8.794472,-7.615814,-0.012093,-7.029522,-2.201690,-5.866213,-5.371018,-0.420620,-3.050993,-6.904326,-7.576496,-0.349736,-3.733603,-8.253031,7.289140,9.220866,2.069981,3.982999,9.405924,-2.917610,-6.029001,-4.624910,-4.041455,7.839589,8.218943,-9.257749,-0.384209,9.997627,3.899882,-5.674826,5.187204,5.955613,4.072828,-8.048239,-9.061213,-6.431000,0.637922,5.163290,-8.816671,-5.382849,0.315535,6.212103,-8.745020,-7.487071,-6.270890,-6.870061,-4.662449,-5.128160,-8.045734,-5.399863,-1.684034,-6.767417,8.949541,9.849357,-9.367184,5.701592,-4.675786,7.375497,-8.740647,-5.101081,-9.563527,-3.624291,-1.349916,0.056833,1.939789,5.836188,-4.942982,3.571025,3.302627,5.158626,-9.753533,0.226013,-6.671888,5.956187,-8.050076,8.166804,6.627737,2.523406,9.419788,-6.490450,-0.690887,-4.466792,2.045067,-6.232558,-6.828137,3.697565,3.224746,5.922281,4.975653,-1.657413,-7.768090,4.923153,6.504507,3.074500,1.633097,5.301446,0.068449,-6.753507,6.255013,0.928742,0.610111,-1.348496,-5.853659,-5.427072,1.282003,8.165806,-7.511986,9.377901,-9.822861,-4.369045,-1.971067,6.437935,3.977533,2.719089,8.467756,-8.711405,6.805078,7.641213,-8.235417,8.587982,-0.060333,2.189802,9.801174,-5.001006,2.577564,8.672575,-2.079567,2.175959,2.316622,-7.101765,-1.652680,1.796827,0.763432,8.621804,-3.419022,3.920652,0.911715,1.298813,6.387228,-0.129185,4.395021,5.686497,0.099990,6.166833,3.082774,4.752212,6.422600,5.492602,2.990212,-8.246906,3.725156,-9.734313,9.981834,-4.442891,2.981310,3.864591,-6.746148,-4.998268,-0.497544,-1.389080,7.772153,3.899632,-8.689662,7.565478,4.371869,9.096035,-5.612987,9.807496,-7.986158,-4.932160,1.962526,-4.315522,-0.737950,0.394429,-9.923081,-0.824549,0.565671,-4.287568,-6.255639,8.865059,-1.635380,0.068710,-6.340540,-9.646664,-2.264781,-4.863865,-3.130043,2.638806,4.531917,3.242696,1.657030,4.360382,1.350992,-8.222895,7.331227,0.963658,5.566497,-3.705563,-9.858009,-3.823398,-4.124604,-0.626743,1.159386,0.881414,-6.890536,-6.117089,6.944743,-7.211264,-6.038689,-6.491749,-9.938933,0.965050,-1.357077,9.774921,-7.158795,0.510769,-5.522974,2.037004,-5.637664,-4.051115,-4.393491,-0.480645,-0.230454,-9.186439,8.731097,-7.886989,9.674514,0.196845,-3.465986,-8.022729,-9.419995,6.120483,0.613630,-3.212297,1.797529,-5.511197,-2.774751,2.198436,9.600173,8.422114,7.442940,-8.099562,0.341892,-4.926516,-0.880174,-0.424137,4.113505,5.566856,-4.561542,-4.832031,-0.804673,8.534573,6.222486,4.022353,1.434778,5.681434,-0.106938,9.955393,-1.180562,0.908127,-5.324298,8.431697,2.416730,-3.645436,1.832620,-4.133597,5.774353,-5.411817,-1.037702,9.390594,-9.716052,-0.759106,-6.380899,-0.835058,-8.652660,7.039973,7.463404,-8.465257,0.549317,-2.299929,6.279635,-1.514137,2.938766,0.575475,-6.945210,1.289842,4.100050,6.660110,2.951862,-5.440830,-5.108314,-1.695706,1.067213,-0.161343,5.232248,5.950536,5.819186,4.212071,-6.672517,2.492892,3.859011,6.861556,-6.683481,-8.693151,-2.075286,4.742909,-7.387020,-6.471901,-0.185128,-5.248579,6.062256,-3.586008,5.528739,9.727944,-3.963829,-9.527248,1.553727,4.342507,-7.830759,1.102988,-7.075137,1.771189,-2.397403,-6.732317,1.380135,-6.938162,-1.810792,3.445725,-6.960611,7.949904,9.728916,-0.877004,6.970278,6.162666,1.443136,-7.592615,4.096392,-8.884988,6.777569,5.741566,5.879199,-4.857662,-9.018689,8.495898,-1.273036,-4.215305,-3.776048,8.829557,-1.003700,-8.642573,3.991290,4.882242,-7.125782,9.097271,4.121252,-3.009923,-9.446778,-8.285142,3.173960,-2.288355,7.370912,0.533136,9.680456,6.259910,1.978533,-8.342468,1.614101,-9.392932,8.616459,8.807723,-7.447841,-1.693259,-7.671516,1.560530,-3.309437,-1.922208,-7.817519,-8.620721,-9.842414,5.908157,5.497941,-1.681505,-0.805591,-6.785046,-6.947588,-1.215324,-9.393569,-5.937030,7.583502,-7.425583,3.957344,8.539245,-7.103527,9.707409,-2.236585,8.555012,-7.781041,-5.411979,-1.607965,6.531347,-6.306829,2.860788,-8.635348,-7.344841,3.629166,5.290770,5.552460,9.943907,-1.269093,-6.222031,9.693731,-8.732218,8.749345,-3.252965,-6.491021,2.688056,8.249709,9.052754,-6.037913,-5.836804,-5.650302,-0.278348,-4.047194,3.341350,-4.065109,2.851941,6.314757,-0.767709,-7.225394,-2.704483,-9.169355,-5.564193,-0.013128,4.903479,0.499226,4.302128,9.819585,9.460070,2.126595,8.849484,-1.600054,3.153374,-5.432193,-3.808594,1.856763,3.449467,-2.102646,5.984519,1.882285,7.237019,-1.852053,-2.076672,-1.489533,-2.578899,2.959959,-5.889132,-9.819955,6.578775,7.280341,-2.101330,4.799159,-6.267343,0.968182,-1.984070,-7.495543,1.461454,-6.442654,-1.719632,2.895198,-1.488980,-4.824599,-6.507905,8.761080,-5.374069,4.625485,4.573436,-9.205150,9.637876,2.737773,6.763597,9.447600,9.497526,-8.863071,5.670638,-3.747863,-1.306646,-2.410962,9.368307,3.632514,-6.059427,-7.435077,8.289177,0.030463,-1.107052,-8.487848,-9.230688,-4.992250,-1.360446,0.713079,-7.268275,8.249410,3.631934,9.159585,8.459870,-8.361994,-6.677100,8.048443,7.203380,-2.042511,-4.309983,6.442787,-1.958293,-5.124773,6.736336,-4.717377,2.208067,-9.121108,4.279894,9.213791,-2.849565,-0.966502,7.580076,-5.990293,-3.832869,-7.569728,-6.517283,3.735230,-5.774446,0.236348,-3.272193,6.534652,4.336943,-1.331813,-5.300593,-8.081716,9.608845,1.495587,-3.961795,2.825703,-3.894823,5.061175,-9.118753,5.112060,-5.999589,-2.695331,6.423872,-3.060053,9.098188,8.071879,3.311885,9.444152,4.827200,9.799560,-7.668304,-5.716316,-4.540129,7.883255,5.474909,8.817379,8.086125,-0.182251,-3.230405,-6.854173,1.312417,7.390584,4.672945,1.713418,2.557087,-2.252797,9.261592,-4.844512,2.021511,-3.208604,-0.035372,-3.336016,3.909465,-1.634306,-1.352650,-8.811707,2.450086,-8.534913,-7.431734,9.016933,-9.592885,1.775854,-7.627971,8.053033,-9.252240,-0.221018,-6.044267,-0.087588,1.252912,0.806377,4.400160,7.732823,7.048574,2.534965,1.218627,4.397559,4.047046,-9.811643,-7.664374,1.452590,0.418993,7.410691,-0.435922,-2.409002,2.342413,3.614625,6.723571,0.136841,-5.745880,-8.385458,9.119797,3.961188,-6.275920,-1.122132,-6.104951,0.560938,-3.166637,3.709769,6.703653,-9.566553,5.295229,9.295977,6.751795,9.956888,-4.384681,0.881494,1.497243,-4.204035,-3.138524,-6.804003,-7.323950,4.416006,-4.761176,4.307208,-5.882985,-4.068268,-0.987222,-2.665991,-3.314267,0.867723,5.130597,-1.354561,-3.388272,-3.976354,-6.076865,4.965690,3.798983,4.903059,2.099475,2.885550,-6.079612,5.421150,8.157478,-8.235094,4.573715,-0.815434,6.030389,6.164054,3.714735,-6.139650,-2.367856,-9.152880,-6.508247,2.325204,8.434575,5.339230,6.338243,-7.741069,-7.155154,-4.628825,-7.224048,-1.293963,-0.714399,1.447537,-9.755518,3.650497,1.560608,-8.317755,7.510316,5.531123,-1.367126,-2.578751,8.803125,-0.774849,-5.139936,7.231106,-2.526533,-8.537468], dtype = "float32")#candidate|2533|(810,)|const|float32
const_2534 = relay.const([1.077820,-1.819484,-3.773059,1.914957,9.422119,-6.048042,5.335040,5.665483,9.472961,1.807248,-6.409177,-2.765818,-5.587509,8.199642,1.478095,2.085326,9.266188,7.130364,-5.996803,9.137731,-7.024895,3.559255,2.501684,-9.151759,1.995171,-6.797488,8.467897,-6.819755,2.274815,0.090472,2.618875,3.543792,2.430216,-9.050286,9.190583,8.904606,6.967413,-9.677757,7.926184,8.628429,-2.128395,-5.960848,0.953139,3.365200,7.717845,3.016509,-0.477458,9.239397,5.237292,3.699432,-0.385576,-9.994613,-9.122412,-7.513722,-0.839378,-3.749870,7.086722,-8.664798,6.661727,3.417197,-2.095782,1.687635,5.185315,-6.492226,2.394563,-0.704679,-7.556741,8.055307,6.974070,-5.246319,-9.056627,-2.632344,-4.972134,-8.331002,-4.465842,-5.969677,-9.522175,8.675555,-4.172518,-0.843934,-2.250325,3.470037,-3.935108,5.265831,-1.317810,3.268168,-0.109436,-1.898195,-2.631853,-3.755127,-3.200883,4.329333,-4.744083,0.225129,1.245574,-8.224924,-2.039881,-4.169009,3.132522,-6.382691,-7.129506,-9.896939,1.208392,7.655962,5.948261,-5.680516,-6.497002,-4.110337,8.867861,4.616064,1.659204,-7.282819,-0.907663,-7.437050,-6.999964,7.069924,-6.865673,2.536580,9.318467,1.312597,-5.101773,-8.659697,-5.448926,7.976227,-3.947717,-2.037787,7.072629,8.271409,1.226091,6.257348,-3.144858,-6.809893,-7.928623,-0.574622,-6.852908,-0.977707,-2.633477,7.750233,7.708332,-9.941249,-5.395944,7.955078,5.141256,5.900586,1.834254,-7.103898,4.871878,-8.977729,-9.113633,2.702581,7.067595,8.510123,6.928010,-4.520700,0.434670,-8.200382,0.951905,7.981859,7.383566,5.824314,2.716013,-0.045659,6.114459,-1.415585,-2.696706,-9.354758,5.864806,6.918641,8.268661,7.793277,-7.173667,-6.753702,-3.680901,-2.447458,-0.083111,-5.687062,6.002701,-6.199993,2.108187,-8.095661,0.167086,4.158632,-5.208842,7.838554,-8.541874,-4.300935,-9.067755,-5.741403,5.118888,-1.987270,2.329114,7.369360,-8.612524,0.859537,9.902858,6.130946,-1.171652,2.201155,0.152302,-7.592621,-2.276027,-0.732729,8.535733,6.806784,8.171973,-1.227471,-7.881169,4.877030,-7.327997,-0.998896,-4.046550,-0.699169,1.251891,4.594675,-8.312874,-0.141773,-1.478406,0.458745,-1.359538,-8.142335,1.067322,-9.053347,0.988893,-8.050928,-7.451983,6.542797,-9.657340,7.434819,2.497671,-0.378772,9.922078,-7.980459,9.962074,4.923777,-0.247428,7.643296,8.719864,8.312451,0.718731,-3.393218,5.829128,-3.777838,1.909084,0.792391,-7.277095,-3.568683,-8.218699,6.800784,-3.237954,0.229418,3.053653,-0.137981,-1.612074,4.452896,3.725324,3.725786,8.688087,-8.997776,-5.666598,1.989907,9.866200,-7.539482,5.069026,3.626886,-7.371039,-6.566573,9.606188,-5.430269,3.539019,6.398159,8.840532,6.777692,-0.561565,0.232041,3.032931,5.861252,-0.271318,-7.682894,-8.783145,-6.984927,5.079866,-1.472193,3.550454,-3.932519,-2.518614,-5.144377,3.784854,-2.185586,2.062280,-4.718255,-9.996694,-4.159042,5.513548,-4.046086], dtype = "float64")#candidate|2534|(294,)|const|float64
var_2535 = relay.var("var_2535", dtype = "int32", shape = (40,))#candidate|2535|(40,)|var|int32
call_2531 = relay.TupleGetItem(func_974_call(relay.reshape(var_2532.astype('bool'), [2, 15, 6]), relay.reshape(var_2532.astype('bool'), [2, 15, 6]), relay.reshape(const_2533.astype('float32'), [810,]), relay.reshape(const_2534.astype('float64'), [294,]), relay.reshape(var_2535.astype('int32'), [10, 4]), ), 2)
call_2536 = relay.TupleGetItem(func_980_call(relay.reshape(var_2532.astype('bool'), [2, 15, 6]), relay.reshape(var_2532.astype('bool'), [2, 15, 6]), relay.reshape(const_2533.astype('float32'), [810,]), relay.reshape(const_2534.astype('float64'), [294,]), relay.reshape(var_2535.astype('int32'), [10, 4]), ), 2)
uop_2537 = relay.acosh(var_2522.astype('float64')) # shape=(8, 5, 6)
func_1360_call = mod.get_global_var('func_1360')
func_1363_call = mutated_mod.get_global_var('func_1363')
const_2544 = relay.const([-7.141815,-8.660028,0.697453,-6.677006,-5.300984,0.337039,6.897543,-1.360531,2.804880,0.494720,-9.822567,-7.734573,9.840686,8.731131,8.187429,2.518327,1.121964,-6.092753,-3.174321,3.102128,-9.297353,-6.112623,-0.417771,-0.451293,1.728500,5.791676,-1.085897,-1.284377,9.288072,2.186042,-5.408038,-1.992836,-2.120322,-5.121095,-8.916726,-7.084306,-2.080688,-1.278151,5.829333,0.428684,-4.853648,5.856297,-6.931277,-4.524343,1.913134,-4.573855,-6.744431,2.118819,7.335956,0.751656,9.983670,-4.287644,-3.845780,0.878909,-9.437615,-7.317991,1.260057,1.588808,5.945247,-1.849202,6.433214,1.765629,7.720555,3.934341,-7.636479,-1.826458,-4.623831,-0.622752,1.266058,-1.088696,-5.058434,-6.559902,-3.963855,3.563520,6.317170,-5.646272,5.531704,-2.267748,7.877618,3.928011,9.600887,6.510970,6.706023,-7.802073,2.238844,-5.758266,-1.540395,-7.147996,-5.343450,-4.344323,7.206753,0.205456,-5.209783,4.624170,9.660672,-3.273355,2.093229,-2.518088,2.197629,1.698295,3.537404,-3.296557,0.277435,8.587959,-0.833754,3.358794,-6.694319,-1.462195,5.008514,-0.945274,4.546012,6.173304,8.878025,6.032682,-2.149532,0.846211,-9.082666,1.752035,-6.274634,8.400208,8.299117,-1.969157,2.342664,-5.867840,3.757609,2.704934,9.476438,9.200663,-3.868205,9.184283,7.893738,7.502180,-1.990577,5.458783,2.741235,-6.945867,-2.991502,-4.793131,4.795460,-2.096816,-9.908421,0.391194,-7.418447,-5.382171,4.786344,5.041708,-0.354447,-7.026372,-1.983985,-6.159555,8.953777,-6.687941,3.678818,2.542013,4.327659,7.522641,-9.998919,-1.914217,3.545061,3.962318,-1.137344,-7.063191,8.460893,-7.570627,-7.341752,0.131515,8.313296,3.622233,2.163160,1.458598,-7.928448,-2.488760,-8.722856,4.226205,7.973203,-5.617532,-5.050168,-5.224578,-4.553129,8.558402,1.884289,-7.439346,-9.088576,-8.154077,-6.195216,-2.061006,-8.875490,3.915348,4.972912,4.855771,-9.648696,5.972120,-4.027686,-1.709656,-6.424018,0.773903,5.074079,-6.030836,-6.136741,5.873767,-5.907512,7.697276,-9.932344,1.453084,-4.977791,-3.917278,8.702307,8.696960,8.998370,-4.590391,4.397145,-3.708223,0.338340,-0.278190,0.541117,-2.491908,2.340829,-0.088550,8.159093,-0.894308,-0.882593,-7.602011,-2.288848,1.039733,0.772516,0.899279,-1.225433,2.249141,-2.922625,9.778098,7.229781,3.257745,6.665770,-6.994136,-2.411766,-7.301414,0.604431,-4.021639,-2.057131,-3.411122,0.736376,-5.745491,6.679529,3.507938,1.173221,0.455403,-4.040590,-4.755975,-6.577969,-5.555376,7.609857,-3.374910,6.872329,-0.819455,-0.635352,-4.053350,-1.606393,3.734867,-0.406059,7.488312,6.983894,8.298143,6.696836,-9.279610,-8.294270,-6.034372,7.809292,0.393158,3.542123,7.713066,-8.339310,1.234476,-0.969792,-2.713340,8.298269,7.696376,-8.720759,4.321242,-3.889187,8.496163,-4.607857,-2.330520,-8.097196,3.085662,5.283587,-0.665610,-7.186445,-3.871889,-2.105273,2.480266,-9.698117,0.924906,7.328050,-9.057922,-1.983772,6.611644,-9.246060,-2.498788,1.387748,-5.815066,-5.595368,-0.133182,8.886070,-2.524146,9.874974,6.433993,-7.298161,-9.235337,2.930398,2.775111,-3.355260,5.201409,-7.430008,-1.179616,2.171436,-7.265182,7.798302,-7.783898,5.971221,-0.129042,-1.115407,-0.167481,-8.871845,0.474615,3.000144,3.525644,7.332511,-6.286112,3.793756,6.758749,-9.163345,-7.857977,-2.085555,-5.335361,9.941521,-6.757047,-9.961345,-6.613773,9.123064,5.192075,-1.104099,-2.657693,4.341585,1.089270,6.176539,3.187519,-0.538908,3.050516,-0.383789,-5.086517,0.683776,8.340434,0.855949,-6.870714,6.384363,-2.381336,3.816075,3.394157,5.181322,2.937981,5.755415,-4.373246,-3.230065,-0.530471,6.419571,0.559851,2.450984,2.544322,-4.149575,7.682056,7.124492,-5.257370,6.522131,4.369098,-4.684571,1.460593,1.561271,-3.121340,-4.710494,-8.023785,2.591098,-3.105787,-1.725735,-8.754006,1.389868,2.238489,0.210930,3.497531,2.322768,1.581974,1.059380,-3.240496,0.048733,4.550980,6.202299,8.920660,3.757978,-1.736862,8.965552,-3.026673,-4.403524,7.254653,0.094042,-4.911503,6.424477,0.908742,5.608401,2.583364,-0.321882,-8.668202,-3.879467,-3.709867,8.729544,-4.541791,6.969455,3.594319,-0.709912,5.399900,-0.483222,-3.588455,-0.548198,-7.371741,9.887549,-6.686262,-4.453247,-1.804046,-5.369710,-7.982127,2.794959,6.400598,-1.913945,-9.385265,7.325216,-0.600523,-1.961929,-7.503738,-8.892700,-3.174791,-7.049875,3.574633,4.995920,-9.339827,0.131247,5.644875,4.361027,4.874032,8.221603,-6.641407,-1.677511,-2.774447,0.229973,5.267281,-3.279279,-3.821483,-0.080428,0.919819,1.762751,9.246772,6.075992,4.416955,0.215932,-8.825650,-5.124579,-7.600582,6.353174,7.223326,9.371512,4.009353,-4.305931,-6.042064,0.251001,-4.171114,3.458937,4.307584,-4.451169,1.280343,-9.232664,6.802038,-9.104362,0.674031,-6.179355,0.368591,5.761878,5.186681,-2.626487,-4.231185,-2.838018,-7.895720,-0.494448,-6.085675,-5.721789,0.550553,4.749137,6.743492,-0.206746,9.448650,-4.195398,-3.963326,9.603621,7.137775,0.084964,-8.188522,9.678802,-1.398770,-3.997814,-8.597802,-2.961621,5.424514,-6.546682,-5.780720,5.706627,-0.409762,-1.319121,9.775170,-6.092072,6.842625,-3.380329,5.973260,-3.015343,-7.132134,-3.877266,3.492223,-6.369240,-0.492895,3.885487,3.857280,8.118486,-1.837941,-2.684695,1.299949,5.686886,-8.531858,-6.498605,6.187907,7.907655,-7.281485,-2.115441,0.018445,-3.653312,-1.900834,-3.402573,4.368423,1.645890,7.086228,3.348342,-3.580915,6.218033,5.833785,9.973328,-6.331269,-9.458919,-3.051419,-4.848281,0.223558,-6.940986,-5.006528,9.390007,-8.865076,-5.070309,-2.273829,-4.448296,-9.950719,9.744209,-2.710893,-4.839236,-3.864124,6.613730,1.525127,-5.372330,-0.532298,-0.211530,2.963482,-1.596142,-3.752617,8.688906,0.776900,-7.350064,8.798994,9.081959,-3.012425,-4.721256,-4.524280,2.167844,0.754602,-0.286653,-1.026349,-9.768714,-9.969229,3.707947,1.440908,1.104056,8.198880,-0.497691,1.032015,-5.576168,2.479628,-5.732374,-4.934408,-9.133788,1.248894,2.687302,8.508188,1.388422,8.247941,9.173849,5.066399,7.530387,-8.921529,3.033731,8.620826,5.439040,-1.618519,-4.199802,5.609859,-3.016921,1.296747,8.166039,-3.199405,-0.251992,0.319786,-3.421230,-3.437888,6.765526,-0.861282,-1.684386,-2.276273,-7.223989,-5.787050,6.756030,5.545079,-0.771952,-4.797092,-1.152920,1.751561,-8.296297,-2.764277,9.084929,-9.499875,2.020611,-3.485307,-3.405080,6.741090,3.455611,3.996625,7.300562,5.136864,6.093241,6.454288,-4.316589,-8.926012,-4.977153,5.115203,8.023209,-1.615234,-7.585588,-8.377136,-2.808001,-2.377211,3.794660,-9.397811,-2.920885,0.690365,7.043740,5.366720,7.920883,-0.577572,-8.661304,9.668555,4.666651,-4.312642,-5.203388,-0.309949,-0.416655,1.720016,-1.013660,4.273227,3.599491,-5.478892,2.516482,-7.664831,2.472003,-5.460413,-7.167990,2.495682,-4.295785,-3.240233,7.436842,5.359061,4.324414,0.288142,-8.781448,-3.198921,8.481076,6.422811,0.455068,1.489574,-1.267448,-8.668943,-5.865408,6.912156,-4.965807,4.594020,-8.980547,6.087555,3.034715,-3.355882,8.118753,9.180091,7.881542,-6.737348,-3.519209,-9.870996,7.345274,-2.083738,-3.870723,-2.759128,8.861166,-6.389886,-3.221698,7.586614,6.834917,-9.213073,-4.801846,1.332104,-2.991060,-6.836312,-3.045609,4.338946,-5.040347,0.796645,7.420772,3.573704,9.316216,3.965761,5.007405,-1.246903,-7.744349,-7.718119,-5.195212,-9.895903,5.823008,-5.950427,3.714244,6.604917,5.191081,6.298636,6.755339,4.046588,-9.602020,-9.468978,7.919438,-3.603214,7.533612,-2.580329,8.129414,-3.244578,-1.321789,-2.559794,0.153757,1.359750,-8.409814,4.028631,5.623858,-6.019899,9.030358,1.071896,2.554959,-1.558558,-5.386725,1.788559,-6.483441,-4.783258,-0.643541,-3.104127,3.708220,-4.982180,-1.237922,0.565023,-5.944078,-5.435919,-5.238129,-1.659574,4.753271,9.069874,2.615516,4.124211,-5.702856,-9.808107,-5.685751,-1.884234,-2.501361,8.935946,7.700437,-4.785993,0.493919,3.064367,1.400713,8.203567,4.100444,-0.675811,5.132077,-3.428728,-8.780846,-4.444726,5.614851,-8.169899,3.275023,3.989935,-7.325892,-7.780902,-6.415158,2.040130,5.047197,-9.350480,6.362413,-0.222773,1.450429,5.564209,6.476694,-8.759174,-3.651570,5.623514,0.246822,-7.897631,-6.001990,1.543509,2.131963,-4.215545,5.466552,1.570858,-7.475642,-2.728597,-4.554284,9.414365,3.621167,-8.129859,-6.570402,-9.087119,-6.791393,3.426491,8.854450,5.968209,6.110078,-2.238091,2.782504,-1.221885,1.584925,5.422970,-5.894620,9.442569,-0.405265,4.023716,7.767704,-8.017688,1.808264,8.665480,-4.513527,5.434278,-7.466252,7.952351,2.509722,4.434429,-4.667431,-2.837451,4.953577,-9.618897,6.870018,-9.464503,2.198997,8.714696,-4.859236,-5.702097,5.725411,5.741937,3.769458,1.717915,-1.568481,4.425460,4.717041,3.293853,9.922638,1.593350,3.264978,-4.693426,-1.080854,3.799151,-6.900637,-2.255580,5.455758,7.475863,-3.120000,5.715092,-3.573557,7.592744,-3.425557,-2.449144,-6.916775,7.916128,-3.499842,8.002871,5.741677,4.515148,-2.999963,1.766974,4.309158,-3.851854,-5.840150,-9.101445,-9.588851,-5.163362,-1.246223,-1.234016,-6.259721,1.881478,7.986317,-3.197040,3.913406,-4.954465,1.666368,-0.791587,6.358536,-0.257712,-2.233571,-1.625418,-0.482882,-5.379398,0.659602,0.490855,-2.016963,-2.352271,2.363620,-2.290803,1.169927,-1.934181,-1.071325,2.581583,8.740003,3.252434,4.772678,-5.515437,7.930392,-4.374840,-4.250407,-1.548539,-0.460558,-0.887151,4.475556,0.882342,-0.912510,7.117418,-3.012464,-7.057825,-3.167922,6.624922,4.896856,9.557587,-4.714802,8.882960,-4.575856,3.865064,3.323944,-7.230159,-0.536928,0.665517,-7.176528,-5.392770,6.048690,-6.755623,-3.158033,7.822646,-3.456819,-9.198070,7.783663,5.275920,-1.856721,-4.489898,-6.984276,-7.059124,-2.030096,7.874389,6.473308,7.468659,-9.622861,-2.820304,-1.759859,-8.768228,7.425838,2.490371,8.355375,-5.195970,-9.624638,2.812023,1.735632,6.041766,6.083229,-1.952351,-0.303831,9.204602,-9.842346,-2.866889,-1.340791,9.441211,9.500084,-4.623791,1.035858,-4.373144,2.171154,-6.830264,-3.033853,1.681857,0.880654,-0.159528,2.214316,-8.295078,0.746751,-5.333680,-9.980785,2.684037,4.668060,-3.168211,-1.165326,-6.410089,-3.455018,5.465759,-8.202487,-1.921862,-8.226041,-0.035469,-0.480640,6.910137,7.312767,1.648914,2.314448,4.654375,-5.261732,2.316240,8.499360,6.710120,6.303056,-2.338080,3.094393,6.481498,5.479981,5.505127,-0.388135,7.550556,5.841059,3.887363,-2.312505,0.810309,-3.145740,4.969469,-8.098650,7.867328,6.622225,0.384165,-6.559142,8.733230,-6.837805,-9.384602,0.661431,-0.521560,-4.244461,-0.510925,6.568191,-2.233819,-0.925704,1.412515,-3.551541,-6.981129,-7.053297,-0.240507,-2.983996,-1.949211,-7.024011,-2.248786,-1.398145,-8.310888,-9.009843,9.140180,-1.811996,-8.366436,-8.416749,0.074972,-0.004878,-3.501530,-3.790553,-5.025344,-2.543000,5.660173,0.017881,3.837671,9.127397,-2.394936,-4.398154,3.644525,2.850119,8.746676,1.237618,-3.617891,9.985028,-3.281745,5.622660,-7.560553,1.660642,0.283116,2.862687,-7.570784,-6.732132,6.366760,0.526081,-6.075058,-9.350310,-9.908346,-6.920982,7.324125,0.900301,5.695176,-0.568956,1.344961,-8.785258,-1.774210,8.130411,-5.974056,-2.316346,-9.191931,-2.796101,-7.394169,-1.404254,-2.998725,-2.446645,-7.283980,3.348546,-0.565539,-0.924214,6.482075,-2.662302,-7.876881,-8.960657,-2.793681,-6.570757,-8.807483,6.544795,8.402635,6.886372,-2.041993,-3.249253,-0.881999,1.650754,9.659746,-3.849758,-2.050472,1.902442,-5.816194,5.535135,-0.558408,5.959476,-6.410467,3.123712,-9.073956,7.626712,-5.357276,-2.608817,7.252816,-4.869330,0.401982,7.051735,0.290999,-2.551316,-0.663462,-8.096139,-4.909088,-5.831420,-0.588527,-0.301499,-0.029883,-2.029383,8.082531,3.671612,-9.973313,-7.422906,-4.681885,2.571793,-3.385368,4.492435,9.542030,3.287324,1.294050,-4.482043,3.712301,0.307656,-5.606190,9.548561,-6.624693,-4.828618,-1.209979,-8.108279,-2.555264,-3.146244,6.072786,7.930392,-1.541508,-7.097016,-5.796465,2.076056,-8.194483,-9.768186,-0.517219,-7.446828,-5.675183,6.115267,5.794750,-6.190264,4.952788,-8.756058,-9.195299,2.139271,-8.457521,4.031011,-4.849263,6.014051,7.978461,3.561191,0.369907,-9.570995,-4.684141,-6.455238,9.536116,4.407328,3.543742,8.191846,-1.751529,-1.899434,5.445356,3.240192,0.549899,-3.009172,-3.282868,-8.701288,5.835868,-9.263418,4.760812,-6.177308,3.676597,9.878884,0.084092,-1.041862,-1.456281,9.179931,-1.991416,1.729525,9.322671,-8.457651,-5.035510,6.335681,2.502565,7.926840,-1.151111,0.142515,-8.392889,-9.527689,-9.287303,2.947926,-0.661108,-8.556863,2.970907,-4.453239,9.203151,2.576113,3.648420,6.079301,-0.898827,5.810945,-2.559948,-0.759159,-1.532341,0.653495,4.835190,7.250074,1.480651,8.507139,8.029108,3.537079,-6.434289,-2.141280,0.709430,5.668552,6.439174,-8.629094,0.765710,-6.506190,1.921454,-8.166554,-8.079698,-9.418328,7.089099,-7.610954,7.788045,5.031944,-4.030551,-2.771739,-5.603654,9.770172,-6.367480,2.229292,-7.939940,2.423927,3.502661,7.492110,3.589913,2.412879,4.174396,-1.109919,6.180164,-6.323893,4.901460,2.407012,-2.140451,4.411105,-1.045141,7.229114,-1.806883,9.772838,-7.303597,1.388252,-4.129893,9.381858,8.379533,7.341113,9.088431,-1.199610,-4.036091,-5.866161,9.207058,2.106329,5.163236,-8.264759,-1.929466,9.333184,-0.734788,-4.051111,-1.816018,-7.701431,4.341315,-2.907537,-4.190750,-4.558442,8.788831,7.968573,-7.903647,-9.122573,1.271209,-2.424789,-2.351138,7.764792,-3.260006,-0.229822,1.900569,-7.082371,-7.949432,6.364944,-9.175423,1.287095,4.061293,-3.260379,4.089687,5.675335,2.977582,-4.066575,3.253770,6.467036,-3.012499,-8.825980,-7.290911,-4.638320,-1.648804,5.053615,6.803019,-4.507789,-0.144098,3.804774,4.004385,-3.712863,-1.551523,9.681005,-1.500008,1.628472,-3.749186,-2.483205,4.322305,0.417561,5.365374,-2.402971,5.727668,6.992996,8.268296,1.562634,3.990511,7.167264,0.632495,2.013939,2.875236,-7.627687,6.417537,0.431983,0.030235,-3.369564,9.145994,-8.499634,9.059062,-9.410100,-9.892117,3.907929,-3.073214,1.358272,9.709653,4.217262,7.823487,-3.557495,4.122280,2.746345,-3.295751,2.383756,-2.993288,-4.936589,5.113935,-0.701254,3.599936,6.487466,2.142100,2.312441,1.129275,9.158908,-3.906465,7.699556,3.932084,-4.862175,-0.491305,-9.753191,1.246518,-3.440156,9.698078,-3.335113,6.192864,-5.168881,-1.236292,6.884510,0.057438,4.683281,4.562628,8.384366,1.693141,-4.310733,3.119784,7.983516,-7.280870,9.092226,-7.664815,-9.233534,5.380311,-2.539205,-7.344227,3.450741,1.030247,2.065828,-0.795416,7.898719,-3.660953,5.134306,-4.201786,4.434796,4.206751,6.038030,-9.146328,6.624645,-4.914486,-4.330551,8.643909,-3.436844,-7.600284,6.654014,-9.417897,-1.156480,3.100928,-8.369956,-4.304263,-6.607423,-1.583513,-4.556042,0.937511,-9.639369,5.600367,-0.886749,3.307809,1.800704,-1.586145,-1.274847,-3.838815,1.280119,-8.256602,1.127377,4.000785,-7.364858,9.672454,1.461048,-9.545144,4.829065,-5.761463,3.212655,-8.274805,9.492921,5.260957,-5.144821,-0.541901,8.897900,2.348202,-3.516995,-1.713038,7.169693,2.149025,-3.400165,-1.025519,5.784018,9.565513,-4.692593,-5.490323,-8.158112,0.179928,8.978690,0.763652,7.414918,0.005240,9.069607,-5.457290,-2.087938,6.954760,-4.065340,-3.773455,-7.694096,-4.994681,3.143798,-1.875677,-2.175450,-0.512561,-9.615309,8.443323,2.739917,5.078450,-4.050560,4.852974,1.967423,-9.550992,-2.149189,9.084818,-2.928414,-2.743539,-1.174294,-1.859746,-0.765422,-8.457138,-3.356349,-5.019866,9.148728,-4.151183,-7.205240,-5.532797,1.745137,5.877878,5.685741,-3.131436,-9.457098,7.264011,-2.162747,4.464379,4.811296], dtype = "float32")#candidate|2544|(1575,)|const|float32
call_2543 = func_1360_call(relay.reshape(const_2544.astype('float32'), [7, 15, 15]))
call_2545 = func_1360_call(relay.reshape(const_2544.astype('float32'), [7, 15, 15]))
uop_2560 = relay.asin(uop_2537.astype('float32')) # shape=(8, 5, 6)
uop_2564 = relay.acos(uop_2560.astype('float32')) # shape=(8, 5, 6)
func_26_call = mod.get_global_var('func_26')
func_30_call = mutated_mod.get_global_var('func_30')
call_2566 = relay.TupleGetItem(func_26_call(relay.reshape(call_2531.astype('float64'), [14, 3, 7]), relay.reshape(const_2534.astype('float64'), [14, 3, 7]), ), 0)
call_2567 = relay.TupleGetItem(func_30_call(relay.reshape(call_2531.astype('float64'), [14, 3, 7]), relay.reshape(const_2534.astype('float64'), [14, 3, 7]), ), 0)
output = relay.Tuple([bop_2523,call_2531,var_2532,const_2533,const_2534,var_2535,call_2543,const_2544,uop_2564,call_2566,])
output2 = relay.Tuple([bop_2523,call_2536,var_2532,const_2533,const_2534,var_2535,call_2545,const_2544,uop_2564,call_2567,])
func_2577 = relay.Function([var_2522,var_2532,var_2535,], output)
mod['func_2577'] = func_2577
mod = relay.transform.InferType()(mod)
mutated_mod['func_2577'] = func_2577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2577_call = mutated_mod.get_global_var('func_2577')
var_2579 = relay.var("var_2579", dtype = "uint8", shape = (8, 5, 6))#candidate|2579|(8, 5, 6)|var|uint8
var_2580 = relay.var("var_2580", dtype = "bool", shape = (180,))#candidate|2580|(180,)|var|bool
var_2581 = relay.var("var_2581", dtype = "int32", shape = (40,))#candidate|2581|(40,)|var|int32
call_2578 = func_2577_call(var_2579,var_2580,var_2581,)
output = call_2578
func_2582 = relay.Function([var_2579,var_2580,var_2581,], output)
mutated_mod['func_2582'] = func_2582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2706 = relay.var("var_2706", dtype = "int32", shape = ())#candidate|2706|()|var|int32
var_2707 = relay.var("var_2707", dtype = "int32", shape = (2, 1, 10))#candidate|2707|(2, 1, 10)|var|int32
bop_2708 = relay.bitwise_xor(var_2706.astype('int32'), var_2707.astype('int32')) # shape=(2, 1, 10)
const_2716 = relay.const([[[8,-2,-10,5,2,6,-7,10,-10,5],[1,-9,6,6,8,-3,-7,-7,7,-8],[-5,-4,-9,4,-1,5,-6,2,-4,-7],[-4,1,7,-10,-10,-3,5,7,-4,-5]],[[-1,-7,-7,-8,7,7,6,-5,-4,7],[-5,8,8,6,-8,6,-5,6,-2,-5],[10,2,-8,10,4,-9,-8,9,-4,-7],[-9,-4,6,6,-4,8,-3,-3,9,-6]]], dtype = "int32")#candidate|2716|(2, 4, 10)|const|int32
bop_2717 = relay.bitwise_xor(bop_2708.astype('int64'), const_2716.astype('int64')) # shape=(2, 4, 10)
output = bop_2717
output2 = bop_2717
func_2722 = relay.Function([var_2706,var_2707,], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
var_2723 = relay.var("var_2723", dtype = "int32", shape = ())#candidate|2723|()|var|int32
var_2724 = relay.var("var_2724", dtype = "int32", shape = (2, 1, 10))#candidate|2724|(2, 1, 10)|var|int32
output = func_2722(var_2723,var_2724,)
func_2725 = relay.Function([var_2723,var_2724,], output)
mutated_mod['func_2725'] = func_2725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2996 = relay.var("var_2996", dtype = "float32", shape = (6, 8, 13))#candidate|2996|(6, 8, 13)|var|float32
var_2997 = relay.var("var_2997", dtype = "float32", shape = (6, 8, 13))#candidate|2997|(6, 8, 13)|var|float32
bop_2998 = relay.equal(var_2996.astype('bool'), relay.reshape(var_2997.astype('bool'), relay.shape_of(var_2996))) # shape=(6, 8, 13)
var_3018 = relay.var("var_3018", dtype = "float32", shape = (6, 8, 13))#candidate|3018|(6, 8, 13)|var|float32
bop_3019 = relay.subtract(var_2996.astype('float64'), relay.reshape(var_3018.astype('float64'), relay.shape_of(var_2996))) # shape=(6, 8, 13)
output = relay.Tuple([bop_2998,bop_3019,])
output2 = relay.Tuple([bop_2998,bop_3019,])
func_3022 = relay.Function([var_2996,var_2997,var_3018,], output)
mod['func_3022'] = func_3022
mod = relay.transform.InferType()(mod)
mutated_mod['func_3022'] = func_3022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mutated_mod.get_global_var('func_3022')
var_3024 = relay.var("var_3024", dtype = "float32", shape = (6, 8, 13))#candidate|3024|(6, 8, 13)|var|float32
var_3025 = relay.var("var_3025", dtype = "float32", shape = (6, 8, 13))#candidate|3025|(6, 8, 13)|var|float32
var_3026 = relay.var("var_3026", dtype = "float32", shape = (6, 8, 13))#candidate|3026|(6, 8, 13)|var|float32
call_3023 = func_3022_call(var_3024,var_3025,var_3026,)
output = call_3023
func_3027 = relay.Function([var_3024,var_3025,var_3026,], output)
mutated_mod['func_3027'] = func_3027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3089 = relay.var("var_3089", dtype = "uint64", shape = (5, 15, 6))#candidate|3089|(5, 15, 6)|var|uint64
var_3090 = relay.var("var_3090", dtype = "uint64", shape = (5, 15, 6))#candidate|3090|(5, 15, 6)|var|uint64
bop_3091 = relay.minimum(var_3089.astype('uint64'), relay.reshape(var_3090.astype('uint64'), relay.shape_of(var_3089))) # shape=(5, 15, 6)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
const_3095 = relay.const([-2,3,-6,-6,1,7,-8,9,-4,10,9,-10,3,6,-10,6,-5,-8,7,-6,-9,-2,-7,-7,-6,-8,9,3,1,-1,-6,5,-3,-4,8,-1,-4,-5,8,4], dtype = "int32")#candidate|3095|(40,)|const|int32
const_3096 = relay.const([8,-2,-9,2,-6,-4,-10,5,-1,4,1,7,-1,-6,-6,8,10,-6,-5,-6,5,-3,10,8,2,-5,2,-8,4,9,-8,5,7,6,8,-4,-5,9,-4,9,1,-8,6,7,10,4,-4,-4,10,2,4,-2,-2,4,-8,-1,-7,-1,5,-4,5,-10,7,-2,8,7,-2,8,-10,10,-7,6,-2,-8,-4,-1,-2,-9,-9,-8,-5,-6,3,-8,10,10,1,-1,2,9,4,4,2,-7,-2,-5,-9,3,9,-5,-9,4,3,-4,-7,-1,-2,-8,-8,-3,-1,9,-3,2,-4,-9,-5,7,-2,-1,2,1,6,-8,6,9,4,-7,-10,9,9,-1,4,-10,-6,7,-4,-4,10,7,7,-5,-3,8,-3,-9,4,7,-7,4,10,1,-2,6,-9,9,-8,9,-9,7,3,-6,-8,-6,-2,8,4,7,6,-7,6,-3,2,-8,-8,-5,-2,1,-6,7,-9,-1,4,-10,-1,5,3,-2,1,-8,-4,1,5,-8,-9,2,-9,3,-1,4,-10,-1,-9,9,-4,9,1,-6,2,-9,10,-2,-4,-2,10,9,7,4,-7,-5,4,-1,-6,1,-4,10,10,2,-7,-9,10,-6,9,2,6,7,3,-3,6,6,4,3,-8,-8,-9,1,-6,-6,-8,3,8,-4,-9,-8,10,-6,-10,10,3,-2,-6,4,9,-9,10,10,3,9,-10,-8,2,7,-4,-1,-3,-1,-5,3,5,-10,-5,3,2,-9,-8,3,2,4,-4,-4,8,-8,-10,-7,-4,-2,-7,4,-8,10,-3,-7,-4,2,6,7,-3,10,-7,-10,6,-7,-8,10,7,1,-6,6,9,-6,-5,-2,-9,4,9,-4,-8,8,3,2,-10,9,-1,-6,4,-5,6,-9,-10,-10,9,-6,6,-2,3,-8,-7,1,-3,-6,10,7,-3,-2,3,3,-7,-8,-4,1,-2,-10,-7,7,-7,-6,-6,-4,1,-1,-7,6,-5,6,-3,-5,-7,6,-6,-1,-5,2,2,-2,2,-7,10,-3,-8,-2,-8,-5,-4,7,5,-4,7,-4,4,1,-1,-2,-4,6,6,2,-7,-6,-10,-10,3,5,-2,10,-7,9,-1,-1,-8,6,4,-7,-7,-1,-8,-1,-5,-10,7,10,-2,6,-3,-8,-3,-6,-4,-8,-6,7,-10,-4,7,1,-5,-10,1,10,-2,-5,-7,-1,-6,2,-10,5,-9,2,-2,-10,3,3,5,-7,2,-1,5,-9,-1,-2,-2,-10,5,-5,-4,-3,4,-2,-9,-7,5,1,-9,2,3,-2,10,-6,-3,-1,5,-7,-9,-9,10,-3,-5,4,7,6,9,-5,-10,-1,1,4,-7,6,-10,6,4,-4,4,-2,3,10,-8,8,-5,4], dtype = "int32")#candidate|3096|(520,)|const|int32
call_3094 = relay.TupleGetItem(func_1069_call(relay.reshape(bop_3091.astype('int64'), [2, 15, 15]), relay.reshape(const_3095.astype('int32'), [40,]), relay.reshape(const_3096.astype('int32'), [520,]), ), 2)
call_3097 = relay.TupleGetItem(func_1073_call(relay.reshape(bop_3091.astype('int64'), [2, 15, 15]), relay.reshape(const_3095.astype('int32'), [40,]), relay.reshape(const_3096.astype('int32'), [520,]), ), 2)
output = relay.Tuple([bop_3091,call_3094,const_3095,const_3096,])
output2 = relay.Tuple([bop_3091,call_3097,const_3095,const_3096,])
func_3099 = relay.Function([var_3089,var_3090,], output)
mod['func_3099'] = func_3099
mod = relay.transform.InferType()(mod)
var_3100 = relay.var("var_3100", dtype = "uint64", shape = (5, 15, 6))#candidate|3100|(5, 15, 6)|var|uint64
var_3101 = relay.var("var_3101", dtype = "uint64", shape = (5, 15, 6))#candidate|3101|(5, 15, 6)|var|uint64
output = func_3099(var_3100,var_3101,)
func_3102 = relay.Function([var_3100,var_3101,], output)
mutated_mod['func_3102'] = func_3102
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3156 = relay.const([[[0.759267,-8.337801,-4.259258,2.443218,-3.234383,-0.713123,9.329333,-4.758251,4.963006,-4.603678],[-7.907630,8.171321,-8.920885,-2.452482,3.493407,-5.235693,-0.412216,-7.946194,-4.207057,-7.998976],[8.536580,1.708562,0.399838,-7.299398,0.470348,3.134541,-7.791518,-5.991813,-6.184004,7.373624],[-9.012283,4.259191,-6.377712,-9.523177,6.678823,-5.488935,0.319390,7.270807,6.132081,-1.568124],[8.819143,2.857973,-8.167627,-0.877979,-2.565148,-9.939081,2.485645,3.700424,-0.066759,-9.464349],[3.050679,-1.487090,8.829447,7.294460,-8.144674,3.627244,-4.428033,6.087860,-7.570931,8.352920]],[[2.419745,1.252556,1.644711,-3.625918,-3.052193,-9.417825,5.038669,2.314865,-0.552110,-4.749043],[-6.216205,-8.458353,-2.590933,8.011080,-9.474200,6.970490,-5.272942,-2.184252,-2.902995,4.063241],[-3.970370,-5.151040,3.919422,-3.620554,-9.579420,-8.740108,-1.395266,5.391623,-1.195819,3.755254],[-7.317097,-3.011836,0.886623,-6.059236,9.499450,4.658555,1.565138,-0.160115,9.154565,5.193699],[5.506400,-0.345538,-4.960043,-3.704112,-8.141990,5.763401,-6.586136,0.311063,4.394607,3.659067],[-5.260779,-1.236961,-8.841131,-0.809371,9.191895,-2.342657,0.169551,-3.439431,-8.361121,-2.427431]],[[-8.728405,6.814361,1.194058,-0.086790,9.746223,0.621115,-2.370944,3.300755,-3.509996,-7.495935],[7.479864,-5.102323,9.063090,8.734474,4.276789,-9.135629,8.806034,0.165991,2.642918,9.180871],[1.760615,-7.898297,-4.774406,3.333538,3.296984,-3.992480,-1.769364,1.428793,1.811687,2.740298],[-0.774469,-8.802035,-1.205791,-5.077676,-2.180171,-8.871898,-6.299774,0.956511,-9.202240,-8.773618],[9.173320,6.603824,4.373683,2.476759,1.924562,-9.231335,1.956671,5.043203,-5.970477,2.943822],[-8.340894,-9.404200,-2.106036,2.339298,-6.809493,-6.206086,1.886142,3.804047,-6.788909,5.116168]],[[-5.340315,4.552736,2.510267,5.483558,-5.910351,-9.331567,-1.482874,6.290645,-6.606830,8.865411],[-9.121177,-7.114902,4.861857,0.587751,7.911287,0.374280,-5.750711,1.978379,-3.809031,3.662534],[6.261589,9.893215,-2.337231,-3.230426,3.461109,-2.990881,4.616324,8.494289,-9.911843,-8.859132],[-1.959571,5.172010,-6.669694,-8.438402,7.706311,5.869956,5.411562,-5.405810,9.015713,-1.387042],[2.030382,4.766078,-4.292504,3.421630,8.741126,-0.048245,-5.878384,-0.726062,-8.295440,3.350740],[-3.481969,-3.614632,3.097752,5.859032,5.201326,9.763328,-2.180866,0.245054,-5.599827,-1.820301]],[[-6.924159,1.094643,-1.374506,6.992030,-7.644577,1.213359,8.554554,-0.692505,-8.232389,5.168511],[8.281400,-4.236706,7.439668,-8.362843,0.033233,1.479304,1.007398,-4.481607,-6.343699,-7.093537],[-8.824110,5.981730,6.923936,-4.904949,-8.431484,6.910850,-9.889421,7.423636,4.226461,9.345397],[-0.475202,-9.746454,2.126239,-9.472936,-4.422899,-9.007996,-1.468053,-7.344368,6.460635,7.871693],[6.596871,-1.803270,5.866993,4.429993,1.298408,0.722913,-6.369920,-7.511675,-7.575858,9.900002],[8.309674,6.343591,-7.445372,-6.568921,-3.847449,5.893706,-1.979720,2.672300,2.644849,8.491605]],[[-7.175414,0.234123,-0.459811,-7.250249,-4.990099,-6.210940,-5.089238,1.398115,9.344676,-9.913420],[6.211108,8.206051,2.211611,2.567465,-7.818122,-3.071582,9.326250,4.991477,5.387651,-7.133235],[6.112029,9.415099,-8.311892,-5.097269,-9.384708,6.103484,-3.435524,-5.223841,-0.196310,6.867239],[-1.617527,7.372265,0.824615,8.199025,-8.154330,-3.418860,-6.234192,1.005839,-8.956563,0.302498],[5.681714,-4.316513,9.471673,3.227196,6.662223,-6.388817,-8.211816,8.135105,-9.955217,-4.445645],[1.714015,2.775701,5.918245,-4.536577,-7.613927,-7.004058,4.230308,-8.680367,1.644667,-7.028622]],[[-1.185887,-5.085890,-2.637074,-4.082262,5.733920,5.264741,8.821554,-3.154238,-7.800150,-7.137639],[-1.911525,-6.866782,6.778041,3.506431,-3.038166,8.076572,-8.599025,-6.539041,-8.120106,-3.809194],[8.813323,-6.144142,-6.902263,5.231398,1.269294,9.647823,0.594702,3.002344,-6.296215,6.397910],[-8.646288,1.525408,7.090223,2.561394,-9.403797,4.496445,-9.219335,-5.169000,-2.537832,6.410716],[1.370702,-2.272612,-8.498595,-0.622589,-5.798905,5.188260,-0.039267,2.972383,-7.425382,9.184243],[-4.196201,8.581421,-8.849697,4.534785,4.979515,2.383784,-4.059785,7.556133,1.307932,6.144589]],[[-1.439990,4.040395,-9.056316,-3.938091,9.384813,9.470436,-1.035456,-4.469023,9.191384,7.725798],[-3.540983,3.388999,-2.635563,9.193518,-4.272326,2.512749,-9.122945,-0.520850,-2.456539,6.118927],[-2.236578,2.269356,7.961011,-4.324342,-6.969433,-8.943084,-5.578746,5.315567,-6.998614,-5.367195],[6.236918,4.636384,-2.913918,-3.731359,-6.189466,0.419260,6.440466,7.725690,-0.881042,1.068487],[-6.798309,-6.609123,8.205601,0.105528,-6.590907,8.904828,-6.063985,2.220070,-3.909436,6.399669],[-2.547513,3.812567,5.953008,-4.944230,-4.145399,-0.373204,4.593597,4.149214,-2.997956,1.132568]]], dtype = "float64")#candidate|3156|(8, 6, 10)|const|float64
const_3157 = relay.const([[[4.926321,7.754754,-3.868032,-1.093032,0.809902,-4.345140,-1.137919,2.641628,-8.859739,-5.559141],[-2.710787,7.991906,8.375120,0.607345,-4.045789,2.991749,-1.940584,3.361570,-4.440667,-1.368228],[-5.945480,-1.218511,-1.933774,7.047148,-3.974008,-2.502278,-7.852102,-2.009575,2.111445,-1.970035],[-7.756132,1.935481,-5.093185,-4.182740,0.429203,-2.033958,9.761452,-5.154385,5.460349,-4.001280],[-2.853723,-7.381828,-7.650973,-0.534051,-8.650039,-2.871053,-3.300875,5.765148,-1.948701,9.499241],[-0.108508,4.723214,-6.883026,-4.356076,3.157797,8.319346,1.237150,-0.770351,5.340546,9.889781]],[[4.310768,-6.639886,-2.130333,1.231712,4.045754,-5.730614,-3.821829,-8.693448,8.149974,-1.645642],[0.686741,-7.861669,-1.326600,4.538660,6.804181,0.321380,-2.761245,-6.807138,-5.726345,8.265584],[-2.407368,4.799059,0.358656,-3.846752,-9.069290,3.474245,-6.460180,-0.134064,1.428975,-1.660986],[1.410732,1.586883,-4.656436,-2.971477,2.112357,-3.354067,6.585582,9.199869,8.656615,5.295858],[-3.287431,-7.916610,8.114511,7.348001,-0.210304,5.550872,-9.939796,4.986036,2.092250,8.147526],[4.892196,-3.849347,7.482274,1.572312,0.894796,3.461532,1.644024,3.665664,-0.987190,4.925139]],[[-2.559739,-8.574210,-1.866991,7.206095,1.073073,-1.531363,1.914570,0.723517,-4.254496,4.902777],[-2.892725,-5.395399,-1.751939,-4.781099,-2.257030,2.351798,-2.190271,7.276283,0.941825,-2.212673],[6.799164,2.386904,-4.719825,-2.366227,3.351808,-4.039300,-7.538869,-3.085001,-1.790324,3.465111],[-4.145363,-8.394810,4.521321,1.919698,-7.692610,3.390790,3.587348,-7.697137,-1.449034,-3.837299],[8.522052,4.027433,2.818106,-9.291424,-9.759826,7.261278,9.828253,8.176618,8.367904,4.217241],[1.802777,-1.508269,-9.806564,-9.129326,6.685380,-8.832685,2.129660,-8.245201,9.576822,2.798802]],[[-6.476220,8.062728,-4.311456,-1.330587,3.512554,8.585416,2.427519,7.830230,9.724994,-7.964891],[0.743952,3.670832,-5.324657,7.739359,-3.869645,3.066466,4.799432,-6.987565,9.430637,-5.999763],[4.985940,1.264629,0.171838,-4.961532,-5.878912,6.352532,0.110734,6.379717,-8.228142,-1.355328],[2.745561,3.548075,-9.485242,-6.569181,0.943442,-3.810472,-0.740666,7.873671,3.496216,-3.897512],[-8.325442,1.276310,-8.931653,3.961902,3.919649,-7.398827,5.312534,-6.248259,8.268003,4.112182],[3.124605,9.394256,-9.369907,6.463191,-7.062248,2.585577,2.447155,1.222513,4.495226,-4.480863]],[[-3.028405,0.491401,-1.338938,7.712452,-0.569182,-8.704804,-7.824585,-3.003944,-7.132470,-0.134496],[4.465410,1.942075,-1.074176,2.425788,3.130159,5.475395,-6.496021,5.801484,-9.529334,-2.282324],[-3.301740,-9.650770,0.706535,0.112085,-5.626864,-6.718825,4.689219,-1.148373,-3.191113,-0.562327],[1.412308,6.197779,-2.010681,-7.220687,0.072748,-7.462756,-3.551451,4.502895,5.625538,8.819282],[-9.945687,2.175230,-3.605321,-6.663297,7.796650,-7.896133,-2.993785,-6.909073,9.709620,2.254843],[-6.033288,-3.876730,-8.564075,-4.061670,-2.306681,4.560379,1.071228,-8.516009,-3.360879,0.443260]],[[4.413637,-8.772113,4.676380,1.524507,4.107554,-2.431536,-2.899380,-7.978303,-9.451518,-7.620434],[8.753032,5.113252,-2.672751,-7.489038,-0.257643,1.094496,2.263126,9.425111,-9.301962,6.923774],[5.071882,6.340911,-6.246202,-6.102982,-7.193658,0.624578,-4.727991,9.863964,1.969563,5.330407],[4.420769,5.861758,-8.468746,1.073988,9.658043,1.534821,-6.637083,-9.040325,-2.260192,5.495063],[3.478459,-1.299692,-8.482738,6.853232,7.889476,7.416079,0.044890,-9.347051,-1.560155,-9.265597],[-5.707636,-5.527442,4.665122,-9.431328,-6.052262,-9.747373,-5.373895,4.890685,-3.658934,-0.490509]],[[-0.617045,-4.714780,9.041539,4.961136,7.184853,1.228182,9.039183,-5.578452,7.752412,4.763295],[9.381141,5.617396,-5.179535,-6.319059,3.091815,9.721127,-5.180117,3.760354,-1.060271,8.005043],[9.130177,3.709244,1.964513,8.593468,-4.634114,-1.492727,-7.506630,-1.525160,-5.653832,-1.618444],[0.678394,1.573706,7.043142,5.853458,-5.359680,8.021127,-8.246928,-7.348285,8.689669,-1.013282],[-9.911513,0.946913,-0.398758,-2.290451,-6.432068,3.224979,-7.972759,0.523620,2.644728,3.886462],[-8.317393,3.042397,9.801223,-4.428935,5.765586,7.169467,7.756739,5.703353,-5.644480,-9.520481]],[[-5.495230,-4.991497,4.495702,-6.216563,8.636978,-1.968132,6.485739,-4.771634,5.856761,8.887886],[2.896090,3.660845,1.597890,-2.065790,-0.815950,-7.518900,-1.860187,5.268365,-1.593652,6.324830],[0.225846,7.922490,7.775693,0.544401,-2.858829,-6.698318,9.820272,-3.282460,-0.650969,-8.012402],[-7.644188,4.325194,-2.970444,-9.801568,-4.439671,-1.471104,0.735277,-9.755725,6.167085,8.073902],[-0.846426,0.601458,3.094673,-0.250141,-1.251107,-9.198273,1.479364,-4.731409,-5.907327,7.128886],[-6.295332,-9.862625,2.515727,-3.461186,4.351837,6.369549,2.297793,2.072240,-4.932992,-7.330424]]], dtype = "float64")#candidate|3157|(8, 6, 10)|const|float64
bop_3158 = relay.greater(const_3156.astype('bool'), relay.reshape(const_3157.astype('bool'), relay.shape_of(const_3156))) # shape=(8, 6, 10)
uop_3170 = relay.cosh(bop_3158.astype('float64')) # shape=(8, 6, 10)
output = relay.Tuple([uop_3170,])
output2 = relay.Tuple([uop_3170,])
func_3178 = relay.Function([], output)
mod['func_3178'] = func_3178
mod = relay.transform.InferType()(mod)
mutated_mod['func_3178'] = func_3178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3178_call = mutated_mod.get_global_var('func_3178')
call_3179 = func_3178_call()
output = call_3179
func_3180 = relay.Function([], output)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3236 = relay.const([[[0.561897,0.309198,-5.174059,9.321155,7.700268,-7.137550,1.118381],[9.178989,7.921804,7.138692,-0.544154,5.330376,4.551361,9.379466],[1.519788,7.284528,7.810788,2.563107,5.472385,-1.249421,8.578308],[-7.205400,1.995887,-7.352516,6.016303,-7.626804,7.657625,4.484276],[-4.027976,7.582189,9.464382,-0.490814,-9.572493,0.872867,-5.634299]],[[-7.130323,-2.350068,-6.179012,-7.553417,-5.309123,0.448721,5.115789],[-2.376869,7.579428,-2.978430,-4.981671,9.572740,-2.704094,-7.417570],[3.226475,4.837678,1.003863,-5.635804,-8.067505,-0.383201,-7.272443],[7.778809,6.248299,8.599751,-6.712647,3.051883,4.966504,7.316436],[-8.762281,2.863471,-7.826235,-4.220791,-4.357668,0.273176,8.758450]],[[3.647422,8.201624,-5.373297,7.237557,6.306226,2.929017,-6.952927],[-9.900348,-4.806728,-5.429069,-8.360363,3.458992,-8.239332,-6.781849],[-5.977812,1.152117,3.229196,-8.468949,9.655411,2.352300,6.860948],[-3.362512,-4.833914,0.914339,5.933213,-9.620401,-3.056525,-5.145791],[-8.302464,-4.051998,5.130745,-1.645239,6.884507,-7.645744,-5.331970]],[[8.908802,-9.880288,-3.275458,-2.181126,8.975523,9.370856,-0.209642],[9.478596,-7.285166,2.945766,-5.715775,-7.468024,0.109049,0.059835],[4.146820,-8.026913,1.639607,-8.579488,5.490064,3.354664,-4.450309],[-6.190781,-4.005805,-8.918091,6.028550,-7.574590,-1.579816,8.513767],[-8.968756,3.043062,-2.129450,-4.838000,-9.927276,9.549685,-4.811519]],[[-7.491674,4.374996,7.332878,1.622850,-1.448897,5.931033,-7.494685],[-5.679028,4.954336,7.618189,-5.795140,-5.337334,2.944204,8.703116],[-8.279051,-9.195061,-2.988119,-8.144958,2.412748,7.597270,-3.480335],[-1.491798,-1.595000,-8.764532,7.673175,-0.366697,-2.537147,9.129214],[0.494865,-8.462822,-4.396287,7.657424,5.074009,-8.665030,6.676752]],[[-7.889555,-5.086054,-2.746989,4.733201,-1.556438,-3.089618,-0.427672],[-8.852141,0.684122,-0.804678,4.782180,-9.709106,-0.787543,-9.904241],[-6.202312,-0.240985,-9.194703,-2.048389,-2.004998,0.664198,-4.480119],[9.814475,-3.569370,-4.760815,-7.605729,-7.576363,7.102992,-3.595966],[-1.938534,-5.843613,-4.509846,9.030413,3.905199,1.906552,-0.865688]],[[7.720151,8.298280,6.511468,-5.440236,1.788004,5.265327,-0.448523],[-5.004729,-9.622946,-8.135964,7.921125,9.489413,2.279988,-0.308344],[-3.695383,1.310533,-5.857676,8.192494,9.449715,2.588245,-5.416446],[-2.544737,-9.119658,9.674626,0.762063,8.942817,-6.011269,0.198550],[-5.693052,-2.336687,-0.458216,-0.886487,-8.329569,4.263319,7.287215]],[[-2.747240,2.756825,-6.003973,2.118480,-7.721184,9.413737,-9.428895],[-6.200813,5.441345,9.533849,-0.733336,-9.471064,-8.163912,-4.816779],[-6.994231,8.567700,8.576454,9.183857,-8.277207,3.399480,4.572841],[-8.699061,-1.660196,2.389283,1.522584,3.999839,3.856117,-8.166922],[3.489696,8.522327,-9.485853,-1.347798,4.685905,-2.051914,7.206215]],[[-3.443274,-6.571121,-6.061261,3.531585,0.192056,-0.066500,-9.828734],[-2.136517,-3.736899,6.906557,2.183736,-8.067498,7.478891,1.557110],[1.215667,6.161727,2.920305,-9.071754,-4.513682,0.732693,9.995678],[1.091525,5.634243,-3.200006,1.398286,0.753064,-4.967298,-5.748790],[8.745306,2.769278,-1.730220,-4.081446,-5.713495,4.103878,1.377184]]], dtype = "float64")#candidate|3236|(9, 5, 7)|const|float64
uop_3237 = relay.sinh(const_3236.astype('float64')) # shape=(9, 5, 7)
bop_3249 = relay.right_shift(const_3236.astype('int64'), relay.reshape(uop_3237.astype('int64'), relay.shape_of(const_3236))) # shape=(9, 5, 7)
output = relay.Tuple([bop_3249,])
output2 = relay.Tuple([bop_3249,])
func_3274 = relay.Function([], output)
mod['func_3274'] = func_3274
mod = relay.transform.InferType()(mod)
output = func_3274()
func_3275 = relay.Function([], output)
mutated_mod['func_3275'] = func_3275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3313 = relay.TupleGetItem(func_3274_call(), 0)
call_3314 = relay.TupleGetItem(func_3275_call(), 0)
var_3320 = relay.var("var_3320", dtype = "int64", shape = (9, 5, 7))#candidate|3320|(9, 5, 7)|var|int64
bop_3321 = relay.subtract(call_3313.astype('uint16'), relay.reshape(var_3320.astype('uint16'), relay.shape_of(call_3313))) # shape=(9, 5, 7)
bop_3324 = relay.subtract(call_3314.astype('uint16'), relay.reshape(var_3320.astype('uint16'), relay.shape_of(call_3314))) # shape=(9, 5, 7)
func_26_call = mod.get_global_var('func_26')
func_30_call = mutated_mod.get_global_var('func_30')
var_3339 = relay.var("var_3339", dtype = "float64", shape = (294,))#candidate|3339|(294,)|var|float64
call_3338 = relay.TupleGetItem(func_26_call(relay.reshape(var_3339.astype('float64'), [14, 3, 7]), relay.reshape(var_3339.astype('float64'), [14, 3, 7]), ), 0)
call_3340 = relay.TupleGetItem(func_30_call(relay.reshape(var_3339.astype('float64'), [14, 3, 7]), relay.reshape(var_3339.astype('float64'), [14, 3, 7]), ), 0)
uop_3347 = relay.log(var_3339.astype('float64')) # shape=(294,)
bop_3374 = relay.logical_and(uop_3347.astype('bool'), relay.reshape(call_3338.astype('bool'), relay.shape_of(uop_3347))) # shape=(294,)
bop_3377 = relay.logical_and(uop_3347.astype('bool'), relay.reshape(call_3340.astype('bool'), relay.shape_of(uop_3347))) # shape=(294,)
func_2722_call = mod.get_global_var('func_2722')
func_2725_call = mutated_mod.get_global_var('func_2725')
const_3383 = relay.const(4, dtype = "int32")#candidate|3383|()|const|int32
const_3384 = relay.const([-7,-5,9,3,-7,10,-10,6,2,3,-2,6,2,8,-1,-10,-5,1,3,5], dtype = "int32")#candidate|3384|(20,)|const|int32
call_3382 = func_2722_call(relay.reshape(const_3383.astype('int32'), []), relay.reshape(const_3384.astype('int32'), [2, 1, 10]), )
call_3385 = func_2722_call(relay.reshape(const_3383.astype('int32'), []), relay.reshape(const_3384.astype('int32'), [2, 1, 10]), )
func_974_call = mod.get_global_var('func_974')
func_980_call = mutated_mod.get_global_var('func_980')
var_3387 = relay.var("var_3387", dtype = "bool", shape = (180,))#candidate|3387|(180,)|var|bool
const_3388 = relay.const([-4.926784,1.687299,7.698124,2.358759,-4.417182,-7.541125,6.788233,-6.677454,5.955063,-7.701433,-4.010193,9.610084,4.095650,1.821391,-7.153232,-9.564316,8.235931,8.371928,-5.458093,8.560741,0.298901,6.008312,6.107507,9.164144,-9.479072,-7.268650,4.229904,5.215066,9.957318,3.015326,6.200460,-6.780375,0.758567,2.274237,-2.794417,2.006971,-9.537307,-5.987331,-7.606548,-0.520171,-5.751806,0.317482,3.306470,-1.157979,-5.017671,-8.609170,0.249852,-1.780331,-0.662508,3.662318,-9.191919,4.280638,5.174817,-6.416854,1.395074,-1.763430,-8.462800,8.029462,-5.433328,-0.661170,4.804843,-9.356556,4.647402,-6.637677,-4.966028,-4.663096,-5.006130,-1.580051,5.241755,1.738177,1.409085,-7.158572,7.905379,0.293763,-3.750705,-9.798764,2.519249,-6.533482,4.441447,-7.211703,-9.480998,-1.951595,-0.045341,-3.691170,-4.587026,6.581569,-0.899530,3.493224,3.751507,6.589011,-6.533698,-9.408622,1.687455,-3.510258,4.210411,-9.384836,8.577803,-3.351518,1.248137,1.940879,-7.090683,-4.905564,5.942015,-1.111560,-3.028914,-2.058606,-4.189047,-7.829180,7.679832,-3.808595,-3.908017,9.741338,-1.767623,7.413859,-2.021718,3.802381,9.454192,7.225622,6.407626,-3.424078,-7.729164,-2.511616,5.085878,-5.159793,8.883346,2.469322,2.276330,9.822045,-8.128050,-8.709881,7.257040,2.879341,6.032403,0.243888,-3.084795,-4.713756,-8.141029,9.531401,-1.888778,0.623712,6.997646,4.576073,4.063272,-0.134457,6.742334,-4.512622,-7.226899,-7.600046,0.517631,-8.488848,4.032676,-5.947964,2.272236,7.223935,3.961681,0.028073,4.532345,5.319696,7.547551,-1.334430,-1.279408,4.580553,-2.400379,-4.634736,-9.206163,0.240769,-7.414891,1.309577,-1.714524,2.666429,2.555750,-4.254336,1.568917,5.341389,7.172181,2.907326,5.799340,-1.201399,-3.064509,6.303359,2.966495,-9.923263,-3.307736,8.464559,-2.301204,-9.509759,4.628687,-9.632075,-4.850303,2.099000,6.894358,-2.412153,4.875574,-9.608987,7.596136,-9.819018,6.086575,-0.101816,4.317725,-1.975448,-8.270361,4.463144,0.160049,-1.271426,-9.510523,2.886129,8.515285,-6.706777,-5.766846,-1.140090,-5.981882,-6.508870,-0.237370,2.285423,-4.521193,6.483161,-1.221109,-7.294187,7.480628,4.779039,-7.962079,3.515299,-0.776458,-5.673449,2.284616,9.299360,-3.276962,1.450173,-1.496986,-4.903001,-1.027973,-8.435633,-3.775229,-3.104907,6.645779,0.925914,-8.827946,1.847239,-7.981728,5.654528,9.454674,1.132073,-7.334727,-4.744352,8.746979,6.783215,-7.589193,-2.631193,-7.218363,-8.639460,5.667859,7.739631,5.125336,-9.161829,-0.258284,9.099218,-2.421188,8.532640,2.393812,-7.008239,-0.147475,-7.334264,2.854940,-9.895887,5.548725,3.142192,-0.038809,-7.930905,-6.503155,-0.896991,-6.683058,-5.041793,-4.583816,9.143479,7.909848,8.115013,0.310782,-0.865650,-8.037564,-2.695706,-7.658513,-8.875803,-7.744082,-1.927226,-8.306553,3.113950,-1.244636,2.318491,-1.442232,-1.655250,-0.032776,5.368784,7.152970,-7.554001,-4.030051,6.581799,5.865826,-0.872742,-2.084925,-8.300142,8.734872,5.306782,4.553975,-8.664521,8.491863,2.568806,-0.716198,0.733416,-7.977483,-2.578290,-1.591231,8.190255,4.241451,1.018866,-0.214800,-1.478664,7.529338,4.533525,0.462978,-4.786859,-2.520365,-9.015663,1.447565,-5.534570,-1.987538,-2.280190,-6.124695,-4.605281,3.129900,2.870774,3.832507,0.916501,7.646870,6.353554,7.224400,5.160073,0.438682,-9.431176,8.602478,-5.966940,7.902661,-7.023439,5.579849,-1.915347,-5.337510,-4.025847,6.272490,3.854014,6.587816,9.472463,-8.771855,-9.498420,7.408587,-9.582500,-2.725086,-0.304269,-6.090308,3.800829,0.468416,-8.187256,-3.627935,0.049757,0.953000,-7.884075,7.664661,9.245948,6.588567,2.766906,-9.869788,1.375168,-2.533935,6.981204,0.508584,-3.443226,-9.362111,-1.441751,-2.663631,-9.368241,-3.237925,-5.544406,6.994502,-7.878545,7.803712,9.371855,5.443208,-6.700058,-3.214864,-2.888484,7.700902,-8.393009,-4.658299,-3.533123,-5.641830,-8.682935,9.599235,-9.649902,-1.861249,5.024237,-0.392593,0.595626,-6.107342,5.993902,4.837962,-5.241521,7.220971,-1.678541,2.214635,-6.463378,-4.909907,6.830015,9.599095,-0.189647,-5.389316,8.129984,-1.389051,-4.573286,3.045926,3.360107,-2.203990,1.103033,-5.288944,8.965229,-9.385105,2.387571,-1.571413,-7.761037,-2.547483,1.653989,0.588225,8.206230,5.694512,-3.981881,5.293471,-1.062404,0.751037,9.217929,7.152257,6.795803,-8.323700,-1.934233,5.788987,-7.663837,6.651394,-8.588778,7.961351,-9.936615,-1.127223,0.336720,-8.783620,3.135535,0.606830,1.279216,2.445927,-5.091146,9.319814,-4.823660,3.376181,-9.986426,-5.955563,7.156429,-6.401647,-5.138273,-7.837549,1.251263,1.820498,-0.944822,3.778483,-5.515027,8.449918,0.122659,9.496007,4.617891,-6.478947,-8.606719,5.654673,-0.604762,2.247852,-0.330209,-7.382574,8.608880,-3.674302,-0.496260,8.748700,-3.630380,5.503771,-1.148316,9.169622,-1.111865,4.013962,-6.023009,-0.011256,1.672073,7.962785,-6.390880,2.665503,-0.497165,2.357561,6.588258,7.752053,6.178162,6.637104,0.143602,-1.450878,4.138585,-2.465463,-1.447945,-5.803281,8.784298,9.365866,-2.600448,7.724142,-4.733380,6.097233,1.092039,3.542901,-7.682797,-4.711621,3.901706,9.998229,6.066411,-3.290399,-5.241460,0.390647,-8.813393,9.867384,1.506275,5.753881,-5.696097,3.464018,6.133174,-8.808375,-8.657548,-7.988167,1.000411,-9.521771,2.056291,-2.411959,0.488665,3.345057,-6.217202,-7.456101,5.171665,8.045628,2.415197,-8.255795,2.669148,-3.518973,6.926461,2.298417,-4.205793,5.270603,-5.730033,7.976489,4.014410,-8.740824,-4.795280,4.006377,-3.518511,2.536620,-3.746304,3.881202,-9.817431,3.866411,-6.744579,5.371606,-2.115277,-9.905530,-4.529190,-6.835318,2.846022,-6.975728,-6.053731,7.600080,-9.140725,-9.469058,-9.452041,1.175177,3.350414,0.934166,6.326764,-8.280738,7.612612,2.387875,-1.267383,-4.268210,-4.503650,7.263702,-7.977030,6.272524,3.452468,6.753962,3.810455,3.813609,9.207590,-9.196004,2.358600,-2.496199,-9.680325,-5.700167,-3.232824,-7.293141,1.586665,9.776731,-2.916208,9.972319,-8.858023,-5.301744,8.269178,-4.916699,-8.610143,0.299566,3.859101,-3.244318,2.135680,-2.344292,0.194373,-8.635079,9.088879,1.124935,3.253054,6.531325,4.090215,7.568626,2.743400,-9.677045,1.044499,4.801314,2.383989,-5.831115,0.968211,-9.939201,6.150020,9.976829,-2.107810,-5.394517,7.335054,1.942267,6.429328,7.965385,-1.304766,-4.004846,-2.684973,-3.289545,-2.159921,-6.289315,-9.595533,-6.553074,-7.062614,-5.658663,-3.079536,-2.112174,-2.316692,4.986107,-1.541930,9.159148,-4.959352,-4.081101,1.249545,-1.351969,6.471125,9.420634,-1.498528,1.740689,-2.070937,0.069367,8.659580,-2.189198,-2.386161,6.506391,5.238870,4.901981,4.331420,-1.325074,6.642133,-4.634664,8.362992,-6.981123,7.070844,-3.198735,5.130699,1.440360,6.236052,-2.197064,2.046126,6.682414,-3.713878,-0.540414,-6.254898,1.372065,1.524111,0.213940,3.138312,-7.147024,2.127496,-5.526294,5.529392,8.527885,-4.761141,-8.688271,-6.276127,-7.621854,-3.238909,-4.443021,2.111389,-6.397890,9.169668,7.471908,1.706489,8.612277,4.708841,5.665955,7.118124,9.571724,2.241016,7.906714,9.794933,-4.933003,-9.405361,1.076564,-2.566179,7.207993,9.249444,2.791760,-7.594005,6.163992,-9.576398,-9.100745,-3.001612,5.307677,6.229478,1.295693,-0.671125,9.755987,-3.732359,-7.435984,-6.128913,-4.542095,7.353584,8.017323,-6.091357,8.805585,8.317807,9.740935,1.074390,5.560785,8.569103,-7.889473,0.696680,7.215366,-9.586925,-3.379182,5.241229,-6.929634,-9.265216,-9.927100,-3.086019,-0.999892,-7.106740,8.780571,-8.346106,-2.782921,8.870490,-5.858062,-0.817033,-2.217183,4.548730,-8.067372,7.131878,9.078714,-4.028743,1.126214,1.786466,-3.360238,0.487488,-3.846029,0.788799,2.064057,2.907719,2.179844,8.017368,-9.388978,-4.653905,2.030058,3.076791,-8.998625,3.155510,-0.651309,1.884368,-5.041978,4.181730,-6.156220,7.686279,8.152848,5.811630,2.415576,6.207980,-5.395534,-9.118959,0.145973,-7.758259,7.952026,2.117893,9.926523,-0.183409,1.701960,-0.059457,-6.246650,-9.382393,-0.507577,-0.333197], dtype = "float32")#candidate|3388|(810,)|const|float32
const_3389 = relay.const([[9,-5,-3,-6,8,-5,-1,9,3,6,-7,-2,7,4,7,1,9,3,-4,10,-2,-3,1,-1,-8,-6,-5,-9,-10,2,-10,-5,10,10,-7,-7,7,-2,-10,3]], dtype = "int32")#candidate|3389|(1, 40)|const|int32
call_3386 = relay.TupleGetItem(func_974_call(relay.reshape(var_3387.astype('bool'), [2, 15, 6]), relay.reshape(var_3387.astype('bool'), [2, 15, 6]), relay.reshape(const_3388.astype('float32'), [810,]), relay.reshape(call_3338.astype('float64'), [294,]), relay.reshape(const_3389.astype('int32'), [10, 4]), ), 1)
call_3390 = relay.TupleGetItem(func_980_call(relay.reshape(var_3387.astype('bool'), [2, 15, 6]), relay.reshape(var_3387.astype('bool'), [2, 15, 6]), relay.reshape(const_3388.astype('float32'), [810,]), relay.reshape(call_3338.astype('float64'), [294,]), relay.reshape(const_3389.astype('int32'), [10, 4]), ), 1)
uop_3399 = relay.acosh(uop_3347.astype('float64')) # shape=(294,)
uop_3418 = relay.sin(uop_3347.astype('float64')) # shape=(294,)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
var_3422 = relay.var("var_3422", dtype = "int64", shape = (450,))#candidate|3422|(450,)|var|int64
const_3423 = relay.const([-9,4,2,7,9,-10,8,-3,-3,-2,-6,9,7,-10,-5,9,-3,-8,-8,-6,-4,-4,-8,-7,-7,-9,8,-4,1,5,6,-4,8,2,6,3,-4,6,-7,4,-4,5,-2,6,-1,-1,-5,-6,8,1,3,8,4,-9,9,-4,-6,-4,8,-2,-10,-7,-10,2,-10,4,8,1,5,2,5,6,5,-10,1,5,8,10,5,-6,4,8,-1,5,-1,10,5,9,-10,-4,-2,-4,-10,-8,4,-10,7,2,9,4,4,-7,-3,-8,5,4,10,-10,2,-7,-6,-7,-7,1,-4,-5,10,-7,8,8,7,3,-9,10,-10,8,-6,-9,3,8,-4,6,-4,-8,8,8,-7,-5,-3,-6,3,-9,8,-1,-5,-8,3,2,9,-2,8,-2,-8,-1,-3,-3,2,5,-1,3,-7,-4,7,8,10,10,-9,-2,1,-7,10,-1,6,-4,-4,3,-8,-2,7,-8,9,4,2,4,-9,8,-4,2,4,-7,3,-10,8,-3,-1,1,-10,-7,-1,8,5,-7,-6,9,7,8,5,-8,-7,8,-3,-7,4,-9,-8,-2,2,4,-2,-8,10,-6,4,-9,-6,-1,6,4,-6,4,10,9,-9,2,7,-8,-7,-3,10,-2,-1,-7,-2,8,6,2,-9,-7,-3,8,10,8,-4,-6,6,-1,4,-5,-1,-4,4,2,-8,-2,10,2,7,7,4,-8,-5,7,-8,-6,5,7,-8,3,-10,9,-6,-1,-3,-6,4,-5,-2,-8,5,1,-6,1,7,-1,8,8,1,7,-8,10,7,-2,-10,-1,-8,6,1,9,-1,7,-10,-5,4,4,-7,5,2,4,2,8,8,-2,-3,-10,-1,4,-2,2,-1,10,-3,-1,-4,8,10,4,1,-10,-8,7,-7,-1,-1,5,-9,1,1,8,7,-3,-1,-7,-6,-7,5,-6,-6,-1,9,-1,2,2,-4,-1,6,9,3,-2,-1,5,-4,10,5,-8,-9,7,-3,-7,1,7,3,7,-2,-7,9,-2,-3,2,6,-4,-9,6,-10,-8,-10,10,-2,1,7,10,-2,-6,5,-2,-8,-3,7,-8,2,-8,2,8,-5,10,9,-6,2,-5,-10,7,-3,-6,4,5,-1,-10,1,10,9,5,-2,10,-5,-1,1,-4,2,5,5,2,3,10,10,-9,10,10,7,5,6,-6,6,1,9,4,8,-1,-5,-6,-10,5,-10,-3,-6,10,4,9,7,10,8,1,7,6,2,-9,6,4,1,-7,-6,7,5,2,7,-2,-3,8,5,-1,5,-1,4,-1,3,-1,4,-8,5,-3,-9,7,7,1,-1,-1,2,1,7,4,9,8,-5,-4,-8,1,3,-1,-3,-2,-5,-3], dtype = "int32")#candidate|3423|(520,)|const|int32
call_3421 = relay.TupleGetItem(func_1069_call(relay.reshape(var_3422.astype('int64'), [2, 15, 15]), relay.reshape(const_3389.astype('int32'), [40,]), relay.reshape(const_3423.astype('int32'), [520,]), ), 0)
call_3424 = relay.TupleGetItem(func_1073_call(relay.reshape(var_3422.astype('int64'), [2, 15, 15]), relay.reshape(const_3389.astype('int32'), [40,]), relay.reshape(const_3423.astype('int32'), [520,]), ), 0)
bop_3433 = relay.minimum(uop_3399.astype('int64'), relay.reshape(call_3338.astype('int64'), relay.shape_of(uop_3399))) # shape=(294,)
bop_3436 = relay.minimum(uop_3399.astype('int64'), relay.reshape(call_3340.astype('int64'), relay.shape_of(uop_3399))) # shape=(294,)
output = relay.Tuple([bop_3321,bop_3374,call_3382,const_3383,const_3384,call_3386,var_3387,const_3388,const_3389,uop_3418,call_3421,var_3422,const_3423,bop_3433,])
output2 = relay.Tuple([bop_3324,bop_3377,call_3385,const_3383,const_3384,call_3390,var_3387,const_3388,const_3389,uop_3418,call_3424,var_3422,const_3423,bop_3436,])
func_3437 = relay.Function([var_3320,var_3339,var_3387,var_3422,], output)
mod['func_3437'] = func_3437
mod = relay.transform.InferType()(mod)
var_3438 = relay.var("var_3438", dtype = "int64", shape = (9, 5, 7))#candidate|3438|(9, 5, 7)|var|int64
var_3439 = relay.var("var_3439", dtype = "float64", shape = (294,))#candidate|3439|(294,)|var|float64
var_3440 = relay.var("var_3440", dtype = "bool", shape = (180,))#candidate|3440|(180,)|var|bool
var_3441 = relay.var("var_3441", dtype = "int64", shape = (450,))#candidate|3441|(450,)|var|int64
output = func_3437(var_3438,var_3439,var_3440,var_3441,)
func_3442 = relay.Function([var_3438,var_3439,var_3440,var_3441,], output)
mutated_mod['func_3442'] = func_3442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3178_call = mod.get_global_var('func_3178')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3456 = relay.TupleGetItem(func_3178_call(), 0)
call_3457 = relay.TupleGetItem(func_3180_call(), 0)
func_586_call = mod.get_global_var('func_586')
func_590_call = mutated_mod.get_global_var('func_590')
const_3463 = relay.const([[-4.054462],[-8.724113],[-2.556549],[3.350676],[4.201454],[3.295774],[0.790966],[-4.909412],[6.129579],[-4.701537],[2.824988],[-4.470321],[-2.126026],[-8.348630],[2.328688],[0.354065],[6.673646],[6.348711],[0.185704],[2.050013],[6.458496],[1.962644],[5.450672],[3.323115],[0.567902],[-2.853428],[-6.525680],[0.281419],[-7.939554],[9.773766],[-3.501330],[-6.250888],[-6.694921],[-6.731473],[-1.490305],[2.822699],[-3.067773],[-3.165110],[-4.973366],[-9.838980],[4.218977],[-7.208959],[3.066170],[-7.723790],[8.390171],[9.971966],[9.854954],[6.317912],[-6.390598],[2.925032],[-9.211986],[-4.025070],[-9.768081],[-6.964655],[5.476288],[-9.285755],[4.725036],[-3.503951],[-4.855729],[4.719831],[-2.837374],[-3.508632],[-0.396187],[9.438495],[2.798071],[2.538082],[9.812963],[-5.659981],[-4.284208],[-8.744962],[6.961575],[8.928646],[-2.015297],[0.434902],[-5.434652],[-4.271619],[-3.984846],[-4.795112],[8.876025],[6.749665],[2.216710],[-0.257300],[-0.469382],[-2.206554],[0.437717],[-8.179051],[9.278302],[-6.193167],[7.304872],[-9.205344],[-3.864336],[-5.269000],[9.942495],[7.951541],[7.206907],[7.966013],[8.638139],[9.538096],[-4.747574],[-4.901685],[2.455171],[-3.805114],[-2.191139],[-8.765801],[2.382000],[-0.429143],[4.587485],[-3.334586],[8.002898],[0.134247],[-4.569098],[3.385045],[-7.012662],[1.581909],[-1.798644],[4.119844],[5.473355],[-6.222695],[-3.476505],[6.380337],[-5.894035],[8.420723],[6.669464],[-4.522254],[2.034354],[4.773359],[4.039576],[2.288883],[3.995712],[-1.323758],[-1.750893],[7.900174],[-9.222645],[-0.894789],[-2.101096],[-8.375164],[5.897238],[1.524430],[4.830708],[3.026885],[7.234642],[-8.287223],[-5.540774],[8.777114],[-2.466132],[3.020758],[8.815747],[-9.302137],[8.001977],[-3.565167],[0.290024],[-2.100147],[-7.814364],[5.509044],[5.822218],[-7.476613],[2.444295],[8.490276],[-5.167259],[9.099965],[7.092261],[1.957721],[-2.517262],[-4.599201],[-4.648499],[0.645736],[1.905453],[-6.609588],[9.701963],[5.864906],[2.325232],[-0.367094],[-9.103761],[-8.555467],[-0.532946],[2.504037],[-3.294665],[-6.043249],[1.964695],[-2.133985],[3.585978],[9.137244],[4.867250],[-1.123638],[7.128741],[-2.841413],[0.561814],[0.948523],[-5.400651],[-6.248374],[4.728766],[-5.147990],[-2.298778],[-8.604076],[3.607144],[-8.470427],[7.713806],[9.879949],[7.236556],[4.683063],[1.303388],[4.021028],[-2.152613],[-2.145049],[-3.899254],[6.383461],[3.049166],[-6.772106],[-5.096211],[2.830965],[2.285272],[-1.954100],[0.756263],[-2.671253],[1.782970],[0.056085],[4.019746],[9.993441],[2.445709],[-3.948435],[-9.585502],[1.355948],[-0.021859],[-7.769124],[0.929965],[-4.905392],[3.492102],[1.519780],[9.808217],[6.905843],[8.170616],[0.192305],[-6.923821],[5.108679],[7.369661],[7.813882],[7.807594],[9.939212],[-4.563876],[5.217528],[1.885530],[7.886707],[-8.972114],[1.355505],[-1.145898],[3.726131],[0.338032],[-9.547243],[7.591107],[4.406935],[7.577432],[1.733333],[5.088923],[-6.643162],[-6.391371],[9.679910],[-4.549368],[-0.739287],[6.412314],[-4.210555],[-4.046041],[-2.991740],[-3.218130],[7.542667],[-6.374035],[-9.527540],[-6.613593],[-8.479471],[-3.031786],[5.916887],[-2.061454],[-0.226847],[9.379941],[-8.894434],[-3.792848],[-9.858612],[-4.658726],[-4.840395],[7.671773],[-7.017996],[-7.023879],[-9.807291],[-9.770259],[9.555624],[3.902279],[3.624314],[4.514404],[-4.797469],[-3.131310],[-7.445197],[2.194026],[-9.195240],[2.150790],[1.000946],[-0.397364],[-7.843944],[-6.919649],[9.048097],[8.909635],[-1.633481],[-3.545832],[0.916197],[8.691897],[-9.675592],[-3.688154],[6.349997],[-0.711217],[3.250146],[-7.959913],[-9.853605],[-7.421498],[-9.857454],[3.845346],[-1.029629],[-5.220285],[-2.562339],[-9.960286],[-0.736685],[0.857952],[-5.871422],[8.411617],[-2.772646],[1.242677],[1.890681],[-6.359733],[-9.317816],[-7.589733],[5.067219],[2.589980],[2.297814],[-3.539213],[-5.381368],[9.104878],[7.722272],[6.681019],[-6.116848],[0.835807],[-4.742070],[-1.268992],[-8.306704],[-8.234346],[7.319525],[9.315746],[-9.584378],[-3.657499],[-6.637747],[1.503714],[-3.687632],[-3.661674],[-2.096817],[2.023921],[-9.463217],[2.030505],[9.899666],[5.101072],[-2.454336],[-1.268708],[-9.283515],[-6.174868],[-0.622487],[-9.419002],[-3.076016],[3.374991],[-8.074247],[-5.920770],[-7.608439],[3.331322],[-7.580290],[2.322851],[-8.001873],[1.270027],[-2.618311],[5.477919],[-7.277682],[-9.607210],[-8.374638],[4.204565],[-8.353154],[6.735632],[-1.895855],[6.045350],[0.610746],[-9.230014],[8.145084],[5.523667],[-5.088798],[-5.013715],[6.276426],[3.302773],[-1.964780],[-9.801409],[1.723240],[4.452046],[9.320595],[-4.442924],[-5.104279],[-3.668469],[8.590852],[3.544072],[-2.055412],[-3.851400],[5.091497],[-4.404131],[-9.154110],[-0.997865],[8.159334],[-1.608148],[3.426049],[-1.515439],[-1.080006],[-5.200640],[7.728999],[2.281182],[9.056407],[9.254688],[2.371814],[-4.172465],[1.005898],[0.279393],[4.497537],[-0.573233],[5.556838],[8.758978],[-4.204580],[7.981729],[-5.343761],[1.065995],[-7.211142],[-1.638186],[8.777410],[2.586968],[-7.908108],[0.579876],[-7.861600],[4.987863],[2.672258],[-8.076253],[-3.734219],[8.754400],[-5.376103],[-9.793803],[-4.008107],[-5.750110],[-9.101127],[6.020173],[-0.158872],[-4.991909],[-9.963228],[-3.246132],[5.924385],[-9.771668],[3.783312],[0.780171],[-8.465827],[-7.664799],[1.507742],[-9.838217],[-6.204814],[-8.305023],[0.607842],[-1.221592],[-1.070446],[-6.944344],[7.038925],[-8.712935],[0.668526],[6.030098],[7.126706],[-4.123645],[2.269241],[-9.413470],[0.012136],[-0.236546],[8.039144],[-8.892427],[-5.798727],[1.688108],[-6.653969],[-2.526663],[-2.311505],[-2.286340],[7.703928],[2.536330],[-9.865686],[2.873442],[-1.312266],[-9.779565],[-1.770423],[-0.423879],[9.578858],[-4.893438],[1.715812],[-4.664577],[-0.817581],[5.895445],[8.018456],[-7.643616],[9.349899],[-8.450759],[7.143204],[5.162156],[5.827914],[-3.231157],[2.183687],[-5.412219],[6.151966],[-9.418878],[-4.713004],[-4.658587],[9.361346],[4.367360],[3.022196],[-5.054680],[4.228379],[-2.507366],[-9.506484],[4.554510],[3.583490],[6.253184],[-1.392219],[2.060555],[-7.087763],[-9.736758],[7.899687],[5.752713],[6.064504],[3.296159],[-7.614493],[4.615865],[-4.052320],[1.195023],[-9.896931],[3.926936],[-4.087792],[-6.868842],[-9.760884],[-8.530927],[3.206691],[9.810352],[-4.763981],[-8.395103],[2.268428],[-8.814316],[5.317982],[-3.741399],[-7.590553],[-4.464629],[-6.296114],[-4.743778],[-2.331005],[2.005249],[8.231164],[6.218825],[-9.414477],[8.011857],[-1.911028],[-9.953686],[5.002340],[4.793606],[8.879546],[7.916282],[4.941763],[-8.808340],[0.805067],[-6.145328],[3.464886],[-6.209726],[-6.248421],[5.841035],[-1.175402],[4.690967],[-8.357237],[-4.736561],[-5.094655],[-2.458590],[7.428462],[5.663386],[8.735196],[-4.433523],[5.156579],[-7.322704],[-9.647897],[9.440919],[8.859805],[-1.218054],[9.466138],[-5.730053],[7.024018],[1.922748],[-2.311654],[7.576732],[1.620349],[6.011791],[-3.623953],[3.039913],[-1.259657],[-6.708991],[-4.504276],[9.181898],[6.846609]], dtype = "float32")#candidate|3463|(600, 1)|const|float32
const_3464 = relay.const([-5.537966,7.869128,5.923496,-8.691083,3.908945,4.856701,-7.471297,4.749902,5.849113,-7.832118,-9.401958,0.932523,-4.314379,3.889198,0.432990,9.535145,-4.497411,-6.845885,-2.601928,-9.121161,-4.173037,-8.721947,-3.404294,1.465339,-5.482104,6.739327,-3.010636,-8.930183,5.759185,8.120300,9.985715,4.561019,9.491489,0.276551,-4.187970,9.993746,8.181101,9.296342,2.334716,-5.377379,-4.810934,2.867046,-3.517196,8.884945,7.153676,4.525916,5.457619,-5.858051,-4.493309,1.689101,-8.862206,9.075314,-5.674996,7.735594,0.381330,9.754956,5.782930,3.488947,1.242368,-8.862419,9.278882,5.576449,-4.230392,7.823250,1.405322,6.634416,5.377894,6.104079,2.497836,-1.695995,-6.719120,0.894788,-1.508506,-8.495434,3.163413,-3.841956,-5.440718,-2.292999,-8.867176,2.944817,-7.693030,5.657119,5.859963,5.934485,2.870587,-3.881501,-9.293430,6.415418,-5.785904,-4.246700,-2.211295,-7.337451,-1.759726,0.989219,-6.410783,-0.355759,4.940626,-0.537792,-4.878933,-6.527380,8.734436,-2.892430,-7.224186,-6.815845,0.791457,-1.358815,-0.870354,-4.770848,3.433005,9.555264,-1.347098,-3.463364,9.144747,-1.772431,7.727115,7.201135,0.584600,-0.782412,6.914910,-8.927648,7.999351,7.742418,9.663170,-4.886464,6.911261,-4.818608,8.914648,-2.531951,-9.781225,-9.642410,6.572328,-4.837533,8.505977,-5.945832,-4.774548,6.167823,0.782210,2.814680,-1.988850,-8.508792,4.710613,4.746317,3.225513,7.116487,9.443657,2.808524,4.120803,7.806224,-3.469053,0.949575,9.395179,-0.288754,0.940410,2.959705,8.468686,-0.949934,8.054934,2.858420,2.098205,-0.427679,9.879911,1.370072,5.734977,0.612936,-8.826953,-7.918459,-1.132677,-8.767790,-2.813509,4.102092,7.269457,-1.768811,-4.355452,-0.913213,-4.751548,-9.643627,-7.799844,-5.741807,-6.384902,-4.788440,3.260739,-0.041717,6.187376,9.431200,9.948279,-9.513747,-4.495898,1.050077,-5.187945,-7.532858,-3.998531,-4.355089,-8.225390,-1.554869,8.764704,2.140879,-1.675919,-7.692458,1.887519,9.843757,-0.509035,7.662128,0.329917,6.526878,-3.178978,-4.398765,-2.244235,-9.394309,-2.075775,-9.712283,5.713764,-4.084541,0.488300,6.262211,-6.453988,4.159605,-8.694195,-9.622408,4.423339,-6.561940,3.635764,-7.684882,9.095422,9.376756,-4.379075,1.217885,3.754255,9.701973,-4.825773,7.393964,6.187862,-0.965688,-6.263539,1.037956,-5.097483,0.133074,1.046884,-8.828299,-9.829591,-0.387580,1.567074,-2.913600,3.900391,9.190717,2.829727,-6.107081,-1.126830,-9.461780,7.571333,-8.104265,0.306401,-8.384493,-1.364815,-0.481740,-2.863283,3.008747,-3.699804,-7.310326,5.661356,-9.558228,0.966539,0.933343,3.299292,-9.835235,-6.857601,-6.989305,-8.992677,-4.945024,7.706305,-1.446666,7.453547,2.703345,7.181612,3.919783,-9.486144,5.680612,-1.334088,1.265816,1.457734,4.674372,-9.047195,4.686789,-2.524413,9.016396,-4.253133,0.322915,9.981641,-0.058464,-3.722428,8.222363,8.938232,-5.456110,-6.320161,9.254676,5.828626,2.046262,-6.841477,9.924509,-7.535594,2.255790,-3.128543,-0.522056,9.298050,-6.500779,-7.280812,-1.169291,4.323379,0.759926,-5.949443,2.663818,6.593980,-3.580282,9.970901,-8.062250,-3.010504,2.402067,-1.704223,5.029008,-2.412809,-3.771138,8.290101,-4.164710,8.831689,-4.744305,-2.084457,-4.736597,-7.563295,3.992197,-5.515590,9.204818,3.442023,4.667307,-9.020522,-2.509130,-7.884700,0.708726,9.776103,-4.578172,-0.153673,2.507129,-5.502411,-7.536814,-7.087913,7.060531,-5.494378,0.615311,5.422566,6.654123,2.679615,-8.139175,-3.104527,-9.953356,4.600822,9.225841,1.224645,-6.826782,-0.786639,2.542310,-3.735061,9.382947,0.657899,5.153675,8.782777,2.015976,-6.042296,-3.336648,6.126898,-3.153173,-9.628096,-4.560236,-1.349121,2.868697,-2.781093,9.588134,5.551725,5.510331,-4.958266,4.821047,7.882138,-3.067166,-9.554165,0.567666,7.379896,-9.513065,9.163957,-0.204405,4.577848,-6.808628,-0.647495,8.692442,-5.173336,-5.448618,1.679475,-1.074678,-3.142484,-5.997452,6.993556,2.984985,5.075019,-0.255126,-8.500626,5.471771,7.092235,4.576254,7.806604,0.277933,8.852341,-3.531831,-6.701693,-0.269742,-4.324830,8.870846,-4.724546,-4.500408,9.231948,-0.426103,6.392386,1.776716,9.586277,-9.187843,7.521223,-4.093191,-7.769719,3.337678,7.605927,9.923558,-9.086222,3.753512,7.743896,8.779657,2.890699,7.071645,1.324178,5.129976,6.947386,1.654430,3.573316,-3.702877,2.297834,-2.538721,8.786063,-5.557451,6.672146,-4.536119,9.708577,1.445830,6.890813,-4.288327,5.599848,4.087641,6.458513,-6.145877,-4.483821,-5.891000,-2.352844,-4.816022,8.936218,-9.902925,-6.612316,5.712318,-3.834944,-2.020922,1.259251,-1.990040,-8.502272,-3.881781,-6.929535,1.399967,7.468580,-6.604138,-8.583482,1.411401,1.905594,-2.003881,-9.653124,-7.936161,-8.094096,-0.802973,2.004659,6.846519,-7.637630,4.302641,-8.011268,7.406875,0.810246,1.965868,-6.055792,0.872163,-4.337853,0.802461,1.732404,1.973011,2.682646,-3.492796,-7.625731,-8.674272,8.081112,-8.801864,-0.696268,0.691302,7.393852,-6.121826,9.607534,-9.649713,9.222288,-9.234867,0.933029,9.920865,7.587173,1.503567,7.038016,-1.287484,8.492831,-6.495221,-8.214444,8.520812,-0.832634,8.441201,2.722610,-7.581848,5.416792,-8.630041,-6.905618,0.964143,1.779442,-6.734707,3.607623,1.188466,6.670774,-1.818733,4.870390,6.004737,1.188875,1.541754,-2.135322,-4.969968,-6.149238,-9.015127,-3.048518,-8.198587,-7.252888,-5.543995,5.285215,6.842000,5.758976,-5.389069,1.290055,-3.857828,-5.244756,-6.324344,7.874988,-7.086106,4.134031,4.277143,4.619236,7.872964,-4.845327,3.047225,3.763662,-0.420367,-2.635415,4.351114,-0.686854,4.758193,9.179964,-9.282646,-7.156087,-0.468475,1.180245,4.184466,3.006473,4.584242,-7.621758,1.002486,6.422833,-9.804162,-2.072828,9.235269,1.435913,7.480395,-8.031037,-7.851907,-7.623280,-0.072874,-9.018311,-0.834440,-6.895705,1.781731,-4.997379,-9.793719,-8.479862,-8.069256,-4.787116,0.728542,-5.093429,-9.836094,-8.388162,5.898100,7.920471,9.168596,1.592796,2.350737,4.743171,-9.264378,1.393094,2.207995,1.911746,-4.339953,9.758236,2.942121,-2.128057,1.752807,-1.653683,-5.237439,-9.760887,8.660612,5.483793,-5.475006,0.128022,4.046819,0.939160,-1.693993,-3.821328,7.367582,0.034446,4.584094,-4.255500,-6.853967,0.685360,4.372890,-1.564368,7.009146,3.977230,-3.796687,-2.781981,-0.185500,-4.234052,-2.457536,3.123135,4.648867,-1.546829,2.563776,3.622135,-8.774597,-5.068443,-3.740675,-2.792417,-4.765197,8.096281,9.985436,-5.890118,-1.202550,-6.497955,2.485728,-4.360354,-4.775653,3.516423,4.206162,-7.181160,9.385399,2.461679,3.603056,6.416088,-3.305881,1.480577,-4.869215,2.741707,-2.143534,7.665896,8.468046,-8.483535,7.342959,9.029740,-1.615129,-7.437552,-4.564985,-2.774541,5.831163,-3.088950,-8.571805,2.337320,1.449534,3.682208,2.426968,-1.996399,-0.900810,-2.550666,-0.167953,7.025381,3.667853,6.277720,6.373751,-7.541990,0.426640,-5.928969,-6.294920,1.114372,-3.613459,1.018126,9.744011,4.088842,3.573688,6.131987,2.299141,-4.366386,-6.857438,2.969867,6.891231,4.586155,-8.063651,6.844319,1.330138,-3.823969,0.440540,4.167525,8.146487,9.147904,3.782105,2.024815,8.030012,6.078085,9.558861,3.067814,-1.964152,7.845087,9.810280,1.834429,7.369339,-6.910666,-3.979282,-6.608829,-7.154228,-3.937008,-6.563512,3.430338,2.448250,-1.720263,3.742861,-5.079530,-2.159946,-4.546827,-8.323956,-7.633743,3.141872,-4.255517,5.484551,-4.447021,-7.664449,8.526197,-4.419617,-6.657017,2.735239,-4.814399,0.873850,1.309940,-1.634021,4.111766,7.033870,4.499239,-0.287922,-3.639659,-5.930124,-6.815820,0.948884,3.857718,-7.014613,-8.579588,-9.189962,-0.631187,1.840920,8.202101,2.704990,-7.750758,3.497959,4.950891,6.234794,4.290140,-0.253276,8.559018,1.178904,9.806061,-1.379609,6.339114,-2.902758,-1.948221,7.464893,-8.232539,-1.720302,-8.475803,-2.873010,-7.308318,1.333656,7.654098,6.388224,-8.374264,5.252460,-4.785805,4.832829,3.256658,1.951311,1.564473,8.221353,4.754973,-9.158726,8.842754,2.189848,-5.673789,1.198673,1.676261,-1.132464], dtype = "float32")#candidate|3464|(810,)|const|float32
const_3465 = relay.const([-0.519804,-8.353159,8.559150,2.577236,-9.791269,-2.287642,0.564417,3.113127,0.831768,-7.056350,-8.697201,5.873429,-5.073111,2.640440,1.054075,2.325277,2.955012,2.773354,1.796039,2.848510,-7.853002,3.506925,-9.221657,-1.552319,4.943301,7.294076,3.233953,0.935999,3.609952,4.515505,-8.720393,-1.040442,-2.742529,-7.706919,-5.771747,-8.655161,3.057957,-8.912018,-3.130399,2.301941,5.902023,3.335364,6.419740,-9.893280,8.978155,5.387336,-4.087202,5.655022,-5.474761,-9.705928,9.957221,4.774730,-2.146905,-9.102756,-3.716363,3.128314,3.952631,-7.708935,6.423337,7.418569,0.460158,-7.242436,-5.083685,-7.907194,8.565768,6.924942,2.376301,3.547191,9.666784,6.951784,6.981410,3.080378,6.090787,6.113662,2.314535,-9.034517,-3.288931,-3.981637,-0.730888,1.956745,-5.438883,0.234366,9.541868,2.520808,-9.971935,-4.444419,9.553429,-5.799285,-5.566131,-2.328279,-5.833246,-4.757690,1.769129,5.205494,5.642085,-3.962300,-8.203814,-4.106535,-8.528419,-4.514564,-8.242121,1.374118,-0.528983,-6.316286,5.267084,-8.747564,8.587970,-7.942864,-2.973948,8.087261,-1.086100,1.780570,0.328186,-4.686734,6.338464,-7.074709,-9.603051,-9.678445,-3.853766,2.352656,7.571169,4.322046,-6.433699,1.282447,-9.507487,-2.441874,-1.352389,2.870227,0.526827,-2.297334,-8.448551,-0.445029,-1.300797,6.244471,-3.521626,-9.510320,7.013148,-4.495251,-4.029279,-8.760544,-9.289199,9.840922,-7.538001,-2.032019,6.767303,-3.634908,-5.380005,-5.846829,5.160016,5.704419,-4.557707,6.973035,6.277630,5.308758,-4.037480,-5.290755,-2.930913,5.641673,-6.962640,5.814496,-6.347882,7.290327,-7.178702,3.486865,-6.959315,9.175413,7.101123,-3.140106,0.282028,-5.487173,9.241283,-4.532145,-1.698297,-0.775656,-3.655690,-8.529207,7.842906,8.014624,6.727216,-8.033787,9.309353,-6.793168,-5.135812,6.942533,-2.349618,2.587288,0.696275,-8.734212,-8.355646,-5.799769,-5.407817,4.254209,4.405171,1.924047,-5.024620,-8.286311,-4.770219,-3.781588,0.038015,-6.133770,5.627843,8.140909,0.294752,-7.267714,-5.432729,-1.751750,-9.898185,-7.968753,-4.070306,-9.351359,7.481936,-1.786052,-4.123554,6.826348,7.342323,9.995532,6.394423,6.561390,-3.138202,-1.329587,-7.364766,5.091009,2.924560,-5.275481,-8.917305,-0.482850,7.623211,7.801984,2.010268,5.257082,-1.615608,5.664590,0.682540,-0.214775,-4.013088,-8.862222,-4.145970,1.241004,-4.098855,8.322652,4.390770,-5.668386,6.671769,-7.705222,-1.438440,8.724868,-6.910127,3.633484,4.162505,-5.863668,-2.369121,-1.734206,-6.288402,-7.398305,-5.275985,9.493801,5.071158,-9.924345,9.300922,4.293875,4.736682,-2.290433,2.161733,2.865784,-3.828686,2.483192,9.700927,4.314125,5.964690,-5.728063,4.248231,5.586613,3.963249,6.872683,-6.089271,5.218757,1.732464,-8.297036,9.287557,4.894797,6.830819,-4.494011,5.500571,-6.638595,-6.096205,-8.460984,5.383941,-5.608405,5.392949,2.645383,8.987130,8.877708,0.871173,8.991058], dtype = "float64")#candidate|3465|(294,)|const|float64
call_3462 = relay.TupleGetItem(func_586_call(relay.reshape(const_3463.astype('float32'), [10, 5, 12]), relay.reshape(const_3464.astype('float32'), [810,]), relay.reshape(const_3465.astype('float64'), [294,]), ), 2)
call_3466 = relay.TupleGetItem(func_590_call(relay.reshape(const_3463.astype('float32'), [10, 5, 12]), relay.reshape(const_3464.astype('float32'), [810,]), relay.reshape(const_3465.astype('float64'), [294,]), ), 2)
func_2041_call = mod.get_global_var('func_2041')
func_2044_call = mutated_mod.get_global_var('func_2044')
var_3472 = relay.var("var_3472", dtype = "uint64", shape = (1456,))#candidate|3472|(1456,)|var|uint64
call_3471 = relay.TupleGetItem(func_2041_call(relay.reshape(var_3472.astype('uint64'), [16, 13, 7]), relay.reshape(var_3472.astype('uint64'), [16, 13, 7]), ), 0)
call_3473 = relay.TupleGetItem(func_2044_call(relay.reshape(var_3472.astype('uint64'), [16, 13, 7]), relay.reshape(var_3472.astype('uint64'), [16, 13, 7]), ), 0)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
var_3482 = relay.var("var_3482", dtype = "int64", shape = (450,))#candidate|3482|(450,)|var|int64
var_3483 = relay.var("var_3483", dtype = "int32", shape = (40,))#candidate|3483|(40,)|var|int32
var_3484 = relay.var("var_3484", dtype = "int32", shape = (520,))#candidate|3484|(520,)|var|int32
call_3481 = relay.TupleGetItem(func_1069_call(relay.reshape(var_3482.astype('int64'), [2, 15, 15]), relay.reshape(var_3483.astype('int32'), [40,]), relay.reshape(var_3484.astype('int32'), [520,]), ), 5)
call_3485 = relay.TupleGetItem(func_1073_call(relay.reshape(var_3482.astype('int64'), [2, 15, 15]), relay.reshape(var_3483.astype('int32'), [40,]), relay.reshape(var_3484.astype('int32'), [520,]), ), 5)
uop_3491 = relay.sinh(call_3481.astype('float32')) # shape=(294,)
uop_3493 = relay.sinh(call_3485.astype('float32')) # shape=(294,)
uop_3494 = relay.log10(uop_3491.astype('float64')) # shape=(294,)
uop_3496 = relay.log10(uop_3493.astype('float64')) # shape=(294,)
output = relay.Tuple([call_3456,call_3462,const_3463,const_3464,const_3465,call_3471,var_3472,var_3482,var_3483,var_3484,uop_3494,])
output2 = relay.Tuple([call_3457,call_3466,const_3463,const_3464,const_3465,call_3473,var_3472,var_3482,var_3483,var_3484,uop_3496,])
func_3507 = relay.Function([var_3472,var_3482,var_3483,var_3484,], output)
mod['func_3507'] = func_3507
mod = relay.transform.InferType()(mod)
var_3508 = relay.var("var_3508", dtype = "uint64", shape = (1456,))#candidate|3508|(1456,)|var|uint64
var_3509 = relay.var("var_3509", dtype = "int64", shape = (450,))#candidate|3509|(450,)|var|int64
var_3510 = relay.var("var_3510", dtype = "int32", shape = (40,))#candidate|3510|(40,)|var|int32
var_3511 = relay.var("var_3511", dtype = "int32", shape = (520,))#candidate|3511|(520,)|var|int32
output = func_3507(var_3508,var_3509,var_3510,var_3511,)
func_3512 = relay.Function([var_3508,var_3509,var_3510,var_3511,], output)
mutated_mod['func_3512'] = func_3512
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3514 = relay.constdtype = "float64")#candidate|3514|(12, 15, 11)|const|float64
var_3515 = relay.var("var_3515", dtype = "float64", shape = (12, 15, 11))#candidate|3515|(12, 15, 11)|var|float64
bop_3516 = relay.subtract(const_3514.astype('float64'), relay.reshape(var_3515.astype('float64'), relay.shape_of(const_3514))) # shape=(12, 15, 11)
bop_3519 = relay.maximum(const_3514.astype('int8'), relay.reshape(bop_3516.astype('int8'), relay.shape_of(const_3514))) # shape=(12, 15, 11)
output = relay.Tuple([bop_3519,])
output2 = relay.Tuple([bop_3519,])
func_3524 = relay.Function([var_3515,], output)
mod['func_3524'] = func_3524
mod = relay.transform.InferType()(mod)
mutated_mod['func_3524'] = func_3524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3525 = relay.var("var_3525", dtype = "float64", shape = (12, 15, 11))#candidate|3525|(12, 15, 11)|var|float64
func_3524_call = mutated_mod.get_global_var('func_3524')
call_3526 = func_3524_call(var_3525)
output = call_3526
func_3527 = relay.Function([var_3525], output)
mutated_mod['func_3527'] = func_3527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3542 = relay.TupleGetItem(func_3274_call(), 0)
call_3543 = relay.TupleGetItem(func_3275_call(), 0)
var_3548 = relay.var("var_3548", dtype = "int64", shape = (9, 5, 7))#candidate|3548|(9, 5, 7)|var|int64
bop_3549 = relay.power(call_3542.astype('float32'), relay.reshape(var_3548.astype('float32'), relay.shape_of(call_3542))) # shape=(9, 5, 7)
bop_3552 = relay.power(call_3543.astype('float32'), relay.reshape(var_3548.astype('float32'), relay.shape_of(call_3543))) # shape=(9, 5, 7)
output = relay.Tuple([bop_3549,])
output2 = relay.Tuple([bop_3552,])
func_3555 = relay.Function([var_3548,], output)
mod['func_3555'] = func_3555
mod = relay.transform.InferType()(mod)
var_3556 = relay.var("var_3556", dtype = "int64", shape = (9, 5, 7))#candidate|3556|(9, 5, 7)|var|int64
output = func_3555(var_3556)
func_3557 = relay.Function([var_3556], output)
mutated_mod['func_3557'] = func_3557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3618 = relay.TupleGetItem(func_3274_call(), 0)
call_3619 = relay.TupleGetItem(func_3275_call(), 0)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3631 = relay.TupleGetItem(func_3274_call(), 0)
call_3632 = relay.TupleGetItem(func_3275_call(), 0)
output = relay.Tuple([call_3618,call_3631,])
output2 = relay.Tuple([call_3619,call_3632,])
func_3642 = relay.Function([], output)
mod['func_3642'] = func_3642
mod = relay.transform.InferType()(mod)
mutated_mod['func_3642'] = func_3642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mutated_mod.get_global_var('func_3642')
call_3643 = func_3642_call()
output = call_3643
func_3644 = relay.Function([], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3672 = relay.TupleGetItem(func_3274_call(), 0)
call_3673 = relay.TupleGetItem(func_3275_call(), 0)
func_3555_call = mod.get_global_var('func_3555')
func_3557_call = mutated_mod.get_global_var('func_3557')
call_3675 = relay.TupleGetItem(func_3555_call(relay.reshape(call_3672.astype('int64'), [9, 5, 7])), 0)
call_3676 = relay.TupleGetItem(func_3557_call(relay.reshape(call_3672.astype('int64'), [9, 5, 7])), 0)
output = relay.Tuple([call_3672,call_3675,])
output2 = relay.Tuple([call_3673,call_3676,])
func_3679 = relay.Function([], output)
mod['func_3679'] = func_3679
mod = relay.transform.InferType()(mod)
output = func_3679()
func_3680 = relay.Function([], output)
mutated_mod['func_3680'] = func_3680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3701 = relay.TupleGetItem(func_3274_call(), 0)
call_3702 = relay.TupleGetItem(func_3275_call(), 0)
output = relay.Tuple([call_3701,])
output2 = relay.Tuple([call_3702,])
func_3713 = relay.Function([], output)
mod['func_3713'] = func_3713
mod = relay.transform.InferType()(mod)
output = func_3713()
func_3714 = relay.Function([], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3178_call = mod.get_global_var('func_3178')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3812 = relay.TupleGetItem(func_3178_call(), 0)
call_3813 = relay.TupleGetItem(func_3180_call(), 0)
var_3816 = relay.var("var_3816", dtype = "float64", shape = (8, 6, 10))#candidate|3816|(8, 6, 10)|var|float64
bop_3817 = relay.greater_equal(call_3812.astype('bool'), relay.reshape(var_3816.astype('bool'), relay.shape_of(call_3812))) # shape=(8, 6, 10)
bop_3820 = relay.greater_equal(call_3813.astype('bool'), relay.reshape(var_3816.astype('bool'), relay.shape_of(call_3813))) # shape=(8, 6, 10)
bop_3824 = relay.floor_mod(var_3816.astype('float32'), relay.reshape(call_3812.astype('float32'), relay.shape_of(var_3816))) # shape=(8, 6, 10)
bop_3827 = relay.floor_mod(var_3816.astype('float32'), relay.reshape(call_3813.astype('float32'), relay.shape_of(var_3816))) # shape=(8, 6, 10)
const_3831 = relay.const([[[3.848108,-1.641440,-5.248068,0.532630,9.099877,5.022994,-1.746653,8.180287,5.261134,6.720978],[-6.791525,2.718404,7.066930,7.929194,2.802842,3.388518,-4.935883,-9.766427,-3.809778,-9.598105],[0.893526,-5.049124,2.418391,5.062258,3.705177,1.269585,6.722658,-3.176205,2.806308,4.875843],[-6.395411,-1.564463,2.046644,-2.395367,-8.306462,2.002102,-2.311408,-4.116721,-1.460390,6.509133],[-9.636981,1.532293,3.488595,-2.183204,0.875659,0.393981,2.488996,6.060626,-2.437271,-3.536477],[-1.716683,8.590788,-9.975381,-5.841985,7.203064,-0.875314,-5.060281,8.180212,-4.122490,2.282040]],[[8.050453,5.144977,-9.877098,5.888851,-1.683912,1.296831,-7.423202,-8.631243,-6.307596,1.377519],[-3.708595,-5.633052,1.686214,-6.350992,1.093509,-3.195536,-3.933971,1.590030,-4.375491,5.805731],[9.956317,8.961143,6.092208,-6.678118,-2.183638,8.571558,9.874067,-3.137738,1.681820,-7.070979],[-8.703079,-4.412758,6.069666,0.913269,-2.221565,-3.182223,0.489677,3.091004,2.843822,0.763803],[2.833296,-1.718261,-7.106297,-4.986844,2.491576,-8.820452,7.362981,-0.229849,0.228260,-1.155642],[5.395219,4.509623,-2.380562,3.342847,-7.642074,8.799460,-6.533643,-9.207489,-8.225997,-2.913425]],[[-9.467378,7.288650,2.241935,-4.775231,8.403200,7.753986,8.726421,-8.376902,1.651558,-8.319494],[-7.651453,-3.540813,0.391540,1.947418,0.210169,-8.230738,-2.540483,8.262462,7.154367,-3.899218],[-5.515324,9.728951,-1.587203,2.219882,-4.041704,9.127093,1.178439,0.289911,6.800027,0.009801],[-3.044628,-2.655241,7.393973,9.212709,8.152567,-3.149782,5.599005,8.748437,4.389096,8.973771],[-5.450552,-5.422043,-5.488096,9.952317,-2.717155,-4.684028,-6.123497,2.969879,-0.412432,-1.629278],[9.309652,5.187770,4.320470,-9.194410,1.367097,-9.828522,0.953761,-0.776315,-9.563412,4.770719]],[[-2.263901,5.067711,-9.425482,-0.009885,9.368553,-8.333875,8.183512,9.899178,-5.135019,0.722287],[-5.805919,-4.083806,-7.611333,4.636122,-5.555098,2.483441,0.936360,8.387484,-8.322152,-6.893325],[-9.019335,-3.873088,7.820222,-3.002963,0.372519,8.209918,4.534526,5.989984,-8.086175,-8.872499],[7.379196,2.344897,5.747468,-4.089899,0.540031,9.854652,2.155143,9.952234,-3.555929,4.199024],[-9.289396,6.009041,-5.647159,6.917380,8.682620,2.291761,-2.737769,7.502314,1.947683,6.683961],[3.358114,-9.727256,-0.504588,2.344912,-0.794970,-7.463429,0.822878,-6.291764,7.598986,3.414624]],[[-2.286940,1.480360,8.751096,-9.215464,5.939926,7.006852,-5.359720,9.187908,-8.858167,6.594367],[3.145373,1.262958,5.672646,-4.299086,4.631660,-7.265596,-5.122800,-1.608469,-4.736913,-3.347876],[-6.651683,-6.503993,-2.674545,0.708123,-7.076143,7.132137,5.304190,0.713970,-1.603363,1.023331],[6.602917,6.325318,4.003774,3.805582,-7.131556,1.311771,-0.690798,-3.773564,-6.049095,5.900314],[-4.197697,-1.058595,4.093602,3.482210,-6.392731,0.119327,-8.013317,4.873866,8.319475,1.086864],[4.071668,-0.839036,7.206083,-9.542229,2.308511,-2.470957,-5.754113,8.081180,-4.141316,7.891174]],[[0.207351,-0.378886,-2.298321,5.115175,8.874928,4.982620,-4.671700,-9.182198,-8.742299,5.933320],[-3.880404,-0.155133,-5.738380,-8.617263,-0.880126,2.117864,-9.256254,1.178141,-4.939127,-6.001186],[9.224921,-5.335639,-1.913276,5.510073,1.652460,-5.000539,4.573433,-4.972953,-7.566554,-9.395111],[-2.709689,-9.564228,-2.361894,7.643586,-3.711091,-0.204175,-1.406981,3.998950,0.721479,5.553914],[4.624675,-5.686503,-5.678753,5.592354,8.213853,8.217416,3.577195,-4.213018,5.447010,-7.537543],[-1.390462,-1.987989,1.442530,7.562688,-3.183989,4.989753,-9.977546,-8.313579,-3.340081,0.871421]],[[-1.031877,-6.634417,-7.232655,1.968184,-6.236109,0.885222,-1.588230,7.080539,-7.326955,-4.398237],[-2.065565,-4.253556,1.423563,5.636792,-3.160076,9.229656,-2.555656,1.692763,-5.883950,-6.048728],[-1.120609,2.728084,6.528413,5.594582,7.548180,7.581072,1.810806,-0.346390,-0.395599,7.930396],[-3.994063,9.671836,-5.568029,3.653408,2.911212,8.037212,-4.220028,-3.212614,-3.586346,6.016962],[3.690425,0.182056,-3.182379,0.723394,8.436511,-9.268866,3.758416,-8.179871,-4.850844,7.961097],[-1.397045,1.701520,2.010984,-6.978738,0.359019,-7.425331,-0.041490,-0.235232,9.027338,-2.339945]],[[-6.459934,5.673774,-4.098273,7.433112,6.296912,5.798362,2.012311,-0.017788,-1.848754,-8.107330],[-5.557624,6.470599,-7.057009,-9.936315,2.460206,6.790749,5.406235,-7.922329,-3.147795,-4.953123],[-1.861302,7.438467,-8.681199,-3.853930,2.405500,1.654415,2.441652,-4.122530,-4.912067,-4.713880],[4.671181,8.930646,-5.647963,6.734081,1.978088,-8.062527,8.906189,7.644315,-7.048629,-5.411110],[3.361729,4.786408,-8.469152,-9.565535,-0.389144,1.695822,-4.360507,-2.008637,-5.219206,-9.627594],[0.808929,1.394853,-8.314943,2.420748,-8.643749,-1.695005,5.357428,1.948032,-3.731413,-4.895554]]], dtype = "float64")#candidate|3831|(8, 6, 10)|const|float64
bop_3832 = relay.bitwise_or(call_3812.astype('int16'), relay.reshape(const_3831.astype('int16'), relay.shape_of(call_3812))) # shape=(8, 6, 10)
bop_3835 = relay.bitwise_or(call_3813.astype('int16'), relay.reshape(const_3831.astype('int16'), relay.shape_of(call_3813))) # shape=(8, 6, 10)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3843 = relay.TupleGetItem(func_3274_call(), 0)
call_3844 = relay.TupleGetItem(func_3275_call(), 0)
func_974_call = mod.get_global_var('func_974')
func_980_call = mutated_mod.get_global_var('func_980')
var_3858 = relay.var("var_3858", dtype = "bool", shape = (180,))#candidate|3858|(180,)|var|bool
const_3859 = relay.const([0.959397,4.324639,-1.622860,-6.728791,8.266655,-8.580905,-6.581033,-8.983370,8.727821,5.871726,-2.179736,4.768760,-1.731971,1.392516,6.692521,3.725101,8.653426,3.418558,3.371689,-2.513654,1.226861,-5.849624,-4.476856,-8.748241,2.470535,0.054162,-4.307817,-2.193316,-3.356657,-1.006819,7.568915,4.647571,-2.852021,-4.119309,-6.720348,0.853451,6.101409,8.119742,-9.342347,7.862976,8.189239,5.495079,-0.396734,0.577751,0.338581,-2.470373,7.965304,1.405381,-1.424056,4.628211,-4.341531,-8.506364,4.480183,-2.093705,-1.961324,3.127020,-3.140332,6.255182,-6.969025,0.239469,-1.609014,-6.346822,5.648038,3.113635,3.546070,-0.155472,7.845547,3.541782,6.398350,-6.703879,-9.515407,0.789323,-4.264180,9.354397,6.469590,-4.761285,-4.740585,7.575839,1.634530,8.300755,-2.942990,-3.644984,8.160336,-5.963648,2.412944,-6.750243,-7.116395,-2.433740,-3.542596,7.812561,6.374512,6.044837,7.848992,0.769794,9.519534,9.301207,1.408293,-6.619606,-5.493984,6.647246,4.774591,5.055931,6.579049,6.997150,5.680301,-9.881464,-7.888976,-1.895494,-1.154320,-2.381953,-5.961520,6.988655,-9.706734,-7.597090,-4.328100,-0.271786,1.753697,0.574889,-7.551998,-2.276984,-5.658513,-6.977391,-3.056223,-2.753118,-3.866348,0.753314,-2.775988,-0.295640,-7.886140,9.164619,-7.090202,-1.058935,1.823961,0.544569,-9.648143,3.585070,-4.665544,-7.038301,-1.954385,0.096732,0.001503,-1.558267,-5.093397,-6.148984,8.669872,9.097117,-8.096202,-2.305562,-7.520450,1.696961,6.063312,2.192747,-2.298512,4.405219,-4.561063,8.823851,9.127712,3.370763,8.122175,-4.725741,-2.096825,-5.684367,8.252066,-4.042159,-0.084559,2.577039,4.545707,6.567473,-5.946330,-0.579167,-3.650856,-3.083799,7.850999,5.374926,-3.750800,-2.915082,2.402979,5.259947,2.814044,-6.210963,6.408509,8.954671,-5.954126,-3.078108,9.552942,1.600911,-8.818251,3.672107,-6.160411,-4.362121,-0.159396,1.874532,-9.805434,5.456101,-2.444679,2.006283,8.715377,-9.537377,-3.925974,-7.245348,-6.384168,7.897169,3.563455,-4.294068,4.842410,-9.030741,9.713645,5.222293,-4.069454,9.401947,6.462800,-6.014785,-2.147250,-4.883576,0.050393,-4.203303,8.743931,2.029198,9.002962,-6.972836,-4.897895,-7.073638,-6.552707,7.008581,-8.820236,5.025852,-0.238735,-3.905445,7.583022,0.594974,7.939644,-0.044033,3.675824,-5.739648,5.472262,5.438438,9.052548,-8.861825,6.899746,5.997282,-3.983762,4.586174,-5.149104,7.370435,9.688208,6.467022,1.442957,4.070804,8.110434,5.279733,-8.581182,-6.711507,-2.934923,3.690763,2.962151,-6.779133,9.465058,-8.381894,4.420204,2.961700,-8.218555,-9.084752,-4.271751,-8.517979,6.222858,2.267843,-9.695903,7.942712,-0.323891,-2.312140,4.075969,0.737018,5.967406,9.560346,-8.078079,7.369992,1.454094,-0.805617,1.466639,2.803563,-6.203468,-0.597078,-4.806811,0.520265,-3.658105,-4.462391,-7.435199,-0.460198,8.593437,3.841514,3.233096,-0.455311,-5.029704,-4.413349,3.290318,-1.640068,-0.728375,-2.085938,-7.116082,2.810607,-5.968057,8.333192,-7.231888,-9.023484,0.774082,1.453602,-5.650547,1.884286,-6.711927,-3.388758,4.775553,8.476378,1.069143,-0.015108,1.234863,-3.799134,-6.160993,8.011050,2.471338,-0.765289,8.337197,3.656730,-8.594255,-8.338163,7.938357,-5.138244,8.520645,-5.071787,-6.745657,-2.860545,8.495545,8.168306,-6.544073,-6.690445,-8.840018,-2.946653,-1.850095,2.241833,-6.221420,6.809894,-5.300149,-3.408895,8.523727,-7.892271,-1.090348,5.251173,7.041784,6.076641,4.100260,7.261880,-8.428195,0.558447,-2.555830,6.240944,-0.547456,-9.489222,9.787596,-4.219169,0.365680,-5.336639,-2.923490,0.133448,-0.322912,3.569351,-8.634458,9.404075,7.361748,6.420023,2.105628,-4.661371,4.583460,-6.127224,-6.993648,1.068556,7.541627,9.612816,-6.900749,3.208313,3.137192,-7.969433,0.585268,-6.670530,6.769972,-1.736150,1.399057,-4.944120,2.205430,4.804020,-5.616271,-6.574042,-3.941362,9.588687,-4.182360,6.083117,5.137208,-5.512380,9.434802,6.346065,-7.787271,3.140898,1.451080,3.485065,-7.792409,-5.072039,5.569406,-2.640303,-8.020112,-2.803970,-6.777062,-2.077287,-3.321324,-4.008237,8.843681,-2.738840,-6.637637,9.678333,1.106895,-5.891737,3.667229,-4.422624,7.880999,-6.270778,-0.341413,6.559126,-7.094150,2.959184,-0.773814,-2.224646,5.237423,4.864432,-3.088605,9.037449,0.261492,5.698615,-0.483270,-2.973162,-1.535722,4.958743,9.306038,8.631968,-4.296427,-6.241714,1.087853,4.029175,5.180454,-3.140420,7.076495,-6.650135,6.490572,-2.135430,0.597329,-0.983260,4.395402,0.957140,-0.879543,9.423198,0.195782,4.047450,-7.310445,9.405075,6.567185,-7.417451,-7.255041,-8.756287,-6.754344,2.582174,9.195424,-0.847661,-5.851702,1.758164,-7.779385,1.395860,8.567900,-5.760682,4.831403,3.027446,4.122798,-2.797154,-7.499926,-6.228258,5.779940,9.663940,4.391468,7.997410,8.531685,-8.854041,5.637766,6.043761,-8.388605,8.605854,4.305210,-0.370009,-8.972076,-2.272777,2.323860,8.275994,2.639549,2.683367,-5.238072,-2.685422,-6.925946,-0.511007,-4.840199,-9.342623,1.220919,8.160492,-9.939164,-4.332739,-3.523324,-0.506419,1.292122,-8.445827,-6.405990,4.571003,-4.707579,-4.432698,-3.560557,5.612929,-4.649294,4.311644,1.399033,-4.033772,-7.117093,-5.592433,-5.468624,3.344192,-5.161017,-6.147592,6.031103,-0.892135,0.060521,-3.963417,6.921849,-3.286809,0.494367,0.690654,-5.494814,9.156317,-4.383527,1.560414,-6.867436,-7.455481,-5.629079,6.349807,-9.879682,-3.298567,-5.383942,5.002813,-9.755240,1.064690,6.533920,-2.624490,-2.850739,0.886045,7.176155,8.343930,7.601455,-6.196105,-0.899292,8.035255,2.167486,-7.648365,0.401743,2.437893,-5.250250,4.651855,-9.061919,0.767779,4.744434,5.987287,-0.288185,-0.883248,7.296848,5.474472,-7.338301,-6.364296,-0.530507,3.760456,4.475066,2.601820,0.434182,0.366830,-7.383538,8.741837,7.856114,-2.173299,1.224024,1.583534,-2.015758,4.685630,-9.250652,-9.085523,-6.003300,-3.155997,1.279383,5.840534,-9.607355,-5.135492,-7.929624,6.070789,-1.712517,7.487045,-4.118817,-8.537151,8.873437,-1.109356,-3.417177,1.036241,-6.283645,-7.300424,3.674581,9.434474,-2.080853,5.096052,0.375576,9.088074,-9.485688,2.127095,6.812326,5.402416,8.940654,-1.094944,3.183107,6.163306,5.770616,0.741931,8.788075,8.036204,-1.736522,-7.418221,3.909396,4.401086,-3.985964,-9.329404,5.645937,9.322882,8.336646,-9.708250,3.780214,5.275272,7.420445,6.046572,6.578390,-4.634913,8.816050,3.473121,-7.378626,6.285758,4.153100,7.005814,2.227750,-8.677782,-3.522718,9.234723,-0.812688,7.663732,1.618414,-6.886555,9.210161,-0.832056,-2.372299,7.741570,0.916845,8.928506,-4.495277,8.957289,9.168724,3.311652,-6.174382,0.757256,8.502908,-3.551005,-3.702626,9.968194,6.752937,-8.149018,8.804241,8.368502,-2.768566,6.872892,0.063866,1.673778,-9.919094,-7.007521,5.159100,2.488661,-1.781744,-6.762427,2.157151,-6.470383,3.900308,-4.012163,-3.139596,0.802263,-8.150863,-3.745696,6.996596,5.337503,-0.170585,-7.015318,6.130164,-9.754616,1.568308,-8.585830,-6.942166,-1.288113,-6.959810,-1.163910,-8.433603,9.988050,-3.983297,-7.460633,3.917843,-2.689369,6.029119,-6.514774,-8.407682,1.573538,8.968364,-8.925707,-3.420882,9.085932,5.956117,-3.259821,-8.644040,5.680152,8.512623,-4.073742,3.400995,-0.354107,-0.911842,6.821537,9.767880,-1.818777,6.159490,-2.970128,8.074287,-5.025916,0.913748,-5.931074,-1.145642,-8.108897,1.822089,9.037138,4.232629,-0.752531,-2.970555,4.969088,-9.576668,-6.643891,-9.580699,7.226911,-8.997084,1.259557,-7.987843,4.404876,6.687295,-0.744423,5.700006,2.960118,7.717013,-3.759163,9.116361,4.663778,3.298922,8.849227,-9.559703,-3.581755,-4.392873,-5.943911,9.507380,-5.537095,-0.174051,-2.711022,-4.294870,-9.742140,7.896103,1.577118,-2.034751,-5.953005,-8.767381,-8.463839,-6.880709,8.134395,-8.958052,-9.834074,-9.796639,-7.236246,2.369546,-2.346551,-0.718284,-4.890732,4.321083,-9.968124,-6.161672,2.130527,8.125305,-5.922696,-8.183367,-8.193686,9.681716,6.144401,2.076816,-4.522333,-7.845306,-3.595988,-3.929656,-2.735519,-6.146915,0.595831], dtype = "float32")#candidate|3859|(810,)|const|float32
const_3860 = relay.const([-3.366891,-6.752655,-6.031285,5.868729,8.566660,9.342245,-3.849599,-9.556229,-4.491775,3.218232,5.406610,-0.765255,2.675440,-6.472269,-9.542830,8.889767,0.635364,-0.898698,-9.522893,-6.896597,-2.334831,3.768871,0.324435,6.774439,-6.413822,-4.109476,-9.408819,-6.497840,9.987061,-3.794854,-2.889773,-1.715157,9.524329,4.142598,8.143763,-2.315552,6.676241,-8.517008,8.901258,-5.779023,3.632229,6.988290,1.900840,0.195709,-7.820223,2.492234,8.722834,9.660524,-6.656665,-1.353805,-6.843562,4.527262,-9.043282,-6.971254,2.619917,-3.063960,-5.877343,-0.517142,9.308053,-6.538123,4.423356,-6.582036,9.642787,8.971628,7.974308,4.363287,-4.848461,0.273348,7.050683,-9.716738,0.909489,9.959079,-6.366821,3.528939,3.553817,-8.037975,4.216827,7.565535,-1.753689,-7.967068,-2.223227,4.178403,-8.449922,-5.938673,-7.581849,-2.715041,4.201967,0.663732,8.433615,8.628831,-7.695791,0.795507,-2.426481,3.530364,-7.670136,-1.817379,8.446552,9.087759,1.525949,0.395384,5.853562,9.044944,9.932203,-7.715574,3.022983,8.136796,4.403637,-9.716780,0.922352,-4.118333,7.618764,8.228686,-9.413361,1.555517,-0.291433,-6.925254,-3.980732,-7.293431,-0.730041,0.116531,-4.582703,-6.395818,1.344928,9.794662,-7.434039,-7.478366,9.415765,-9.616674,4.947705,9.761189,3.079717,9.287553,7.836256,2.337003,-3.521695,5.443295,-7.163682,6.886415,-6.710092,-2.268455,-7.987367,5.468627,-2.800274,-1.980301,0.038070,2.877708,7.835725,-4.930562,-0.570495,-9.509079,-1.054468,0.560879,7.732189,4.190396,-1.716973,-7.141839,-5.313549,-4.146532,-5.233734,-8.288668,-1.363475,-4.254183,-1.971077,-6.940031,-3.399093,-9.346646,-7.876536,3.638102,-1.060633,-8.150964,0.674632,0.469804,-9.817928,-4.422123,-3.011523,-5.599890,0.352816,-4.044299,3.974458,-7.944020,-9.884901,7.869206,7.154129,-2.335222,5.071919,-4.421897,-5.582518,-0.812122,2.305524,3.536744,-8.575946,-4.460391,-4.082328,0.609618,6.334769,5.857998,-5.583600,-4.214448,-3.409160,0.668081,1.081105,-0.892233,-4.458790,-5.610630,3.233163,9.899013,6.608262,1.068359,1.211253,-1.094171,8.458077,-3.143758,-5.016167,5.852454,4.384252,-7.845023,-1.990303,-9.664164,0.338081,-2.644856,-7.057194,-1.705520,4.861415,2.201252,4.690119,8.916215,-8.425317,-9.083724,-7.935712,6.520398,0.597066,4.695764,-9.849268,-0.211396,-2.434557,-8.620760,-4.027050,3.992375,6.575211,-9.018700,-5.076150,7.718972,7.480203,2.410039,0.615478,-5.684077,-6.006807,-2.526523,0.154456,-2.754540,8.223885,7.358584,-5.903585,4.038974,4.077963,-1.452921,0.366842,-6.284391,3.009583,-9.263070,-6.901203,8.578073,-1.031321,8.646698,-5.423625,-3.320320,7.803386,-4.173850,-8.881320,1.281163,8.123245,5.090727,1.879420,-2.109946,2.634599,0.958107,9.867253,-0.402329,-8.008469,2.272609,4.280225,-6.796409,7.599864,-2.695443,-1.424131,-3.477545,5.396701,-8.601397,6.110962,-0.957190,6.823662,6.580190,-1.349624,4.063687], dtype = "float64")#candidate|3860|(294,)|const|float64
const_3861 = relay.const([10,1,7,1,2,-9,-6,-7,9,-2,-8,5,-3,3,6,8,-10,-5,6,-3,7,-7,5,3,-10,5,4,-7,10,6,10,9,2,-10,-1,9,5,10,10,3], dtype = "int32")#candidate|3861|(40,)|const|int32
call_3857 = relay.TupleGetItem(func_974_call(relay.reshape(var_3858.astype('bool'), [2, 15, 6]), relay.reshape(var_3858.astype('bool'), [2, 15, 6]), relay.reshape(const_3859.astype('float32'), [810,]), relay.reshape(const_3860.astype('float64'), [294,]), relay.reshape(const_3861.astype('int32'), [10, 4]), ), 2)
call_3862 = relay.TupleGetItem(func_980_call(relay.reshape(var_3858.astype('bool'), [2, 15, 6]), relay.reshape(var_3858.astype('bool'), [2, 15, 6]), relay.reshape(const_3859.astype('float32'), [810,]), relay.reshape(const_3860.astype('float64'), [294,]), relay.reshape(const_3861.astype('int32'), [10, 4]), ), 2)
uop_3885 = relay.acos(bop_3817.astype('float32')) # shape=(8, 6, 10)
uop_3887 = relay.acos(bop_3820.astype('float32')) # shape=(8, 6, 10)
bop_3889 = relay.bitwise_and(uop_3885.astype('uint64'), relay.reshape(call_3812.astype('uint64'), relay.shape_of(uop_3885))) # shape=(8, 6, 10)
bop_3892 = relay.bitwise_and(uop_3887.astype('uint64'), relay.reshape(call_3813.astype('uint64'), relay.shape_of(uop_3887))) # shape=(8, 6, 10)
const_3912 = relay.const([[[-3.159935,6.447133,-9.731281,6.274532,-9.354709,2.454447,-0.217992,2.387653,-9.210813,-4.244063],[-4.230611,-9.418318,8.875413,5.059858,-3.357144,-5.438595,-5.585495,-9.334865,-8.630032,-8.202391],[-1.294764,7.040200,-4.530576,4.329994,-7.335874,-2.315399,-2.917063,7.517160,9.608224,7.408747],[0.785569,-0.211801,3.655115,-3.405500,-4.419173,0.378308,-6.567502,5.899035,2.429215,7.457565],[-2.712870,7.245917,-4.242606,3.664361,2.615859,2.980124,-3.670189,-4.863603,9.254991,-0.586941],[2.949366,-3.082385,-2.974727,-7.801746,-7.385502,6.362952,-3.313795,0.964715,0.698474,-1.278273]],[[4.743485,9.955196,1.845208,-6.368860,3.278034,-7.606687,-5.600075,-3.477679,9.982807,-3.471404],[8.774749,-8.234272,-5.633661,-7.032382,-5.054889,-5.826018,2.566825,-7.798576,2.979429,8.240246],[4.181528,-7.284623,-4.975847,-1.630875,1.541858,0.602584,-5.557288,-7.789647,-4.861335,9.874571],[2.838646,-3.433775,9.890517,1.181100,6.940076,6.792958,4.520650,-9.507965,4.214162,7.753241],[-0.404036,3.579837,-8.323135,0.649674,-6.537626,-4.721178,8.549027,-7.721046,0.072484,1.786688],[-4.768086,1.094139,-8.988418,7.633950,-9.362800,0.630894,-8.200468,8.962928,-6.826951,5.349235]],[[4.394765,1.140379,-7.489216,-1.769464,4.546370,1.108042,-0.803051,5.230441,-3.455175,-1.757978],[5.745201,5.451311,-1.297712,0.918213,-1.462870,-3.577815,-4.376425,-4.686103,9.774540,-9.345294],[-7.699561,0.380606,-8.960658,-5.548521,2.708956,4.898802,-8.227603,-2.741701,9.355888,7.954016],[-6.541884,-3.957824,4.670840,-8.385066,4.935191,-0.798131,-8.969201,-4.555361,-6.372993,9.894878],[-5.964211,4.066193,-5.411360,3.316187,7.641436,9.845936,-5.724990,-1.355095,-0.749149,7.718611],[3.333979,3.878981,5.011567,-6.555940,-2.178804,3.433215,-1.111108,0.394779,7.981659,-6.911323]],[[-3.261147,-2.974743,5.469267,-9.700395,6.199650,8.946487,7.171093,-5.119035,1.606161,2.867762],[1.137976,-2.379231,3.412236,-1.823852,-0.001478,9.749462,-8.888428,-7.596896,-5.192292,1.980974],[-1.234690,-0.312917,3.734612,-7.787760,8.902605,9.917992,-0.945541,-9.523999,0.532503,-1.438897],[7.725059,-9.511010,-4.009596,-1.455120,-2.290591,-2.878970,-1.456885,-6.170017,-8.727667,-5.468292],[-6.355728,-4.254401,5.000207,-1.626592,3.518252,5.315716,-2.816145,-7.062354,-4.989191,6.042205],[-5.797527,9.178276,-8.475218,-6.681253,-4.599007,-8.917694,-0.755529,2.840335,9.178216,7.332921]],[[9.111607,-4.747936,-9.194148,-2.236717,8.707204,3.080521,1.129757,-8.008060,1.527155,-9.641753],[-5.339020,-7.001758,6.232079,-1.509582,-1.453325,5.673731,-9.456488,2.195254,-2.388549,4.491539],[-0.638148,6.871059,9.081202,0.353312,3.227819,-5.916238,5.748368,-1.005873,3.647293,3.502659],[-1.458973,9.619742,-8.476784,-5.786740,-6.051920,-2.246488,-5.494441,-7.940076,-1.100124,-5.668233],[-0.092261,7.878527,-7.738709,-0.468799,-4.211458,4.365602,5.213666,-7.082563,2.737245,-9.707986],[-3.588742,-8.502747,9.015814,3.930017,6.323354,6.602872,-2.873478,7.167728,-9.524240,-9.238125]],[[2.312992,-3.705049,-7.163887,4.176864,5.155860,6.234324,-8.031284,-6.190404,6.324275,0.654537],[-7.143196,-4.208073,7.154916,4.182602,0.099744,5.216960,7.010225,2.532827,-9.906700,5.619275],[8.303349,7.315895,3.642210,5.243166,5.442833,7.718109,8.543551,4.038196,3.736945,-1.984383],[-2.823111,5.528351,4.426043,-8.985638,1.148438,9.803473,-3.634757,0.792376,4.037549,-6.022297],[9.632571,-0.542997,5.730206,-7.323309,-6.273293,-5.099671,-5.908899,-1.474155,-1.492309,1.285192],[-0.266656,-4.469586,2.305890,-6.056907,-8.006502,-8.568736,-7.261688,-7.429810,-5.692801,-5.267142]],[[-2.346364,5.260723,5.955661,-2.162929,-2.594616,9.127055,0.295613,-0.375863,5.980311,0.996879],[1.266321,-3.559011,-4.739108,-7.843553,1.269690,3.275488,1.127245,-5.799221,-1.633391,-7.750833],[-5.278001,3.467542,-6.908959,-6.855722,9.864739,8.831807,7.175026,-3.715259,6.158679,-7.388912],[-6.182642,-0.395311,0.801833,-4.542190,4.172727,-0.019064,-3.766117,1.306719,9.803885,5.223702],[4.468762,-8.010629,-6.742707,-3.820013,8.820137,-4.641376,-7.482307,2.903240,8.521670,1.875993],[-3.570461,-3.201634,-7.176694,8.390110,6.670160,-9.582400,-1.472616,-3.102208,4.366858,-0.128419]],[[3.993471,-7.945493,5.509760,0.211118,1.088807,4.905863,5.835570,3.023235,-0.433976,9.120653],[3.566969,-7.342330,-7.582026,-6.326963,-1.969752,-7.768211,2.700169,5.404968,-9.654745,8.074604],[-8.489276,-4.808688,-1.602511,4.441197,-5.398714,-8.829438,-9.469704,0.787293,0.178454,-9.771502],[-2.831099,-6.765684,-1.552192,-7.989483,-8.217158,-6.475760,9.860450,-7.016969,-0.881233,-9.043958],[9.703569,-7.457802,2.313594,-4.492780,2.271527,-7.018868,-5.261730,5.458834,7.790276,5.996171],[1.751856,-1.967900,-3.689812,-7.310254,-9.550726,-1.719711,-8.763093,4.338433,-4.616944,-2.506436]]], dtype = "float32")#candidate|3912|(8, 6, 10)|const|float32
bop_3913 = relay.left_shift(uop_3885.astype('int32'), relay.reshape(const_3912.astype('int32'), relay.shape_of(uop_3885))) # shape=(8, 6, 10)
bop_3916 = relay.left_shift(uop_3887.astype('int32'), relay.reshape(const_3912.astype('int32'), relay.shape_of(uop_3887))) # shape=(8, 6, 10)
output = relay.Tuple([bop_3824,bop_3832,call_3843,call_3857,var_3858,const_3859,const_3860,const_3861,bop_3889,bop_3913,])
output2 = relay.Tuple([bop_3827,bop_3835,call_3844,call_3862,var_3858,const_3859,const_3860,const_3861,bop_3892,bop_3916,])
func_3918 = relay.Function([var_3816,var_3858,], output)
mod['func_3918'] = func_3918
mod = relay.transform.InferType()(mod)
var_3919 = relay.var("var_3919", dtype = "float64", shape = (8, 6, 10))#candidate|3919|(8, 6, 10)|var|float64
var_3920 = relay.var("var_3920", dtype = "bool", shape = (180,))#candidate|3920|(180,)|var|bool
output = func_3918(var_3919,var_3920,)
func_3921 = relay.Function([var_3919,var_3920,], output)
mutated_mod['func_3921'] = func_3921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3178_call = mod.get_global_var('func_3178')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3925 = relay.TupleGetItem(func_3178_call(), 0)
call_3926 = relay.TupleGetItem(func_3180_call(), 0)
func_586_call = mod.get_global_var('func_586')
func_590_call = mutated_mod.get_global_var('func_590')
var_3945 = relay.var("var_3945", dtype = "float32", shape = (600,))#candidate|3945|(600,)|var|float32
const_3946 = relay.const([5.844463,-7.770196,4.762323,-0.035579,-6.556835,4.319950,-3.817280,-7.226759,-3.692647,-1.058248,-7.178292,-9.760708,-8.688605,-3.943208,5.104971,5.904061,7.099926,-5.350107,3.969709,-9.532160,-7.672916,9.401351,-8.322296,4.871737,2.188348,-2.823870,-0.450635,-4.170899,-5.321322,-1.109463,-3.094777,-9.179550,1.506084,-7.944751,4.549996,-7.035440,-1.803096,2.552362,-0.210388,7.576958,-7.912311,0.342112,-9.812628,-3.967257,-2.250093,9.261377,-1.442762,9.500465,-0.084242,4.401514,-1.089563,2.888074,5.390412,-6.740380,4.340035,9.809523,1.026499,-6.681436,-6.822266,-7.594330,4.841730,-4.602831,5.600863,3.872601,5.415875,7.877415,1.976767,9.490377,7.393710,-2.496925,0.588075,9.344389,-0.078828,4.417586,-3.091260,-6.887943,1.336352,5.836056,-6.262099,-7.874781,2.927804,2.210422,8.559930,-6.076750,-7.746505,7.494382,-0.558490,-9.902234,0.185089,-6.444855,3.399418,1.515993,9.673284,6.198375,-1.700641,4.422101,-3.091782,-8.040029,8.510396,-8.138679,1.742948,-9.396709,-7.209661,-6.093488,-5.942704,4.811282,8.131544,-2.977611,-6.235277,-9.627632,3.526624,-3.158140,5.348857,9.290347,8.422718,-1.834414,-0.146620,3.873851,-2.109962,-9.480168,-9.515777,-7.181452,-9.738069,-8.306187,3.922271,2.314166,-7.010235,-1.546489,-1.507262,1.840946,6.914831,-6.650804,-5.480134,2.886112,-6.888169,1.495249,4.416314,-4.623847,-5.526301,-2.803703,-8.611022,-3.052242,-3.575151,-6.679798,9.683047,-1.606409,7.335678,-9.826351,-5.446924,-0.426774,0.074105,1.264819,-4.485306,-3.108730,-5.342607,-8.490342,6.820765,-4.510337,4.819442,-6.906973,-7.612807,8.429239,-8.037953,5.380635,2.071574,4.102411,7.936745,-7.965779,-2.162633,-8.419408,9.971826,8.297211,1.841302,-8.608455,-2.655025,4.198458,-2.042525,5.198406,-7.191793,9.241224,-7.157646,-1.959961,-9.750696,2.106601,-0.566122,8.959958,-6.313543,-0.663104,-5.578183,-9.504855,9.529476,2.493167,1.544753,-6.136602,4.592389,1.099275,-8.014312,4.091600,-7.532896,-6.369862,-7.275773,2.508010,-2.592199,7.356385,-1.281997,-7.066413,5.299346,5.217439,-2.747732,8.377487,-1.326426,1.660669,-9.821273,7.041025,-8.771007,5.211606,9.352588,8.938863,-1.591880,3.294123,6.545236,3.127637,3.824844,1.932983,-6.432456,-7.998371,9.128030,-1.297666,-7.720592,1.516018,0.826939,-0.960881,6.792336,-3.481589,-7.340775,-3.882113,0.992295,-3.488520,1.983916,-0.291041,-2.326223,-7.978094,0.042789,-0.074509,-0.128659,-5.979084,-3.484768,-5.162412,-9.274648,-6.824029,-4.070419,-9.783496,-4.522493,9.974612,-8.436298,8.251158,-4.244409,3.610015,-0.442032,1.536699,7.897280,-3.184246,-8.075173,4.408712,-5.872953,7.559182,-2.907683,-4.357799,4.585571,-6.585125,-3.392856,-2.563873,3.181712,-8.695169,6.144321,-0.313320,2.867892,7.278371,-0.158138,-2.567354,-5.558703,7.700239,-7.264296,6.909952,7.656440,9.965451,2.234314,-3.287704,7.160549,9.654772,6.369780,5.268858,-1.804950,-5.569600,0.593054,6.826497,5.185313,9.359054,6.378228,3.049108,-4.305103,-9.059507,-9.497453,7.033719,0.059378,6.171608,-2.795495,3.316660,7.985459,4.094686,-3.672097,-5.460235,-9.961139,4.458740,-1.003583,-9.124569,-8.445888,-2.018013,-3.428931,-9.368341,-5.494074,-6.691992,9.430898,-0.511496,4.817038,2.426353,-5.639943,2.564703,8.032073,-2.806302,1.695304,0.734599,8.678859,0.164508,3.400401,3.443433,1.306984,-9.749379,0.447097,6.757136,4.340839,5.314112,-8.518705,-1.920385,1.409533,6.245497,3.626021,-4.147046,-8.620956,-0.960749,-9.034457,-5.390097,2.151101,-8.837398,9.137242,-4.099340,-5.133877,-6.921183,-1.886064,5.735705,-6.415928,2.684744,9.479805,-1.229031,3.156363,8.401118,7.857948,1.418416,-4.300262,4.602609,7.357017,-7.518325,8.045197,-3.389155,2.756886,-2.397026,-2.001922,-3.518815,9.751668,4.629776,9.103460,-0.602063,-4.704907,-2.651335,4.847944,-3.724296,4.066510,3.299478,-2.990196,-4.651554,1.098270,5.219042,-2.276892,5.409587,-0.351688,-4.394124,8.413453,-2.840226,-2.971091,-5.736742,3.287885,-7.721701,-6.076427,5.787615,6.849889,-2.577739,-4.861485,-6.541924,4.517299,7.259760,2.846351,-3.516863,-2.692849,-2.945778,8.616235,3.057419,-9.670136,3.454309,3.823566,7.966349,-3.605226,6.875436,9.272727,-2.588752,1.222212,-7.104239,6.605813,2.536402,-4.561526,7.392866,-8.781795,-4.259629,-0.770970,7.322941,-4.908241,0.304773,4.148545,-9.633824,-0.662815,4.788452,-6.421541,-6.867301,-8.691140,7.448355,-5.772396,-1.089529,1.905008,3.866814,-0.010280,9.873819,9.312847,-2.368673,2.493272,3.491966,5.031740,4.512900,-6.786782,4.522356,5.339224,6.742669,5.974885,1.013799,-0.942634,4.078766,5.922311,-0.923833,1.922181,4.288885,6.492449,-8.961336,-9.661903,-4.944399,-9.017850,0.187772,-1.134617,9.170472,3.176490,4.730959,4.659734,-0.163033,2.284614,7.362893,5.913950,-8.433741,5.164335,7.123885,-3.560650,-1.394634,-6.500660,0.064606,1.616459,-3.078329,0.483231,-1.407907,-7.443042,1.532746,0.776409,-8.395379,-8.212422,8.111642,-6.289302,2.430581,-1.884492,9.656876,5.099802,-0.065562,5.642403,3.107105,-4.812043,3.275564,7.164331,-6.342729,2.814906,1.152892,9.585586,0.890315,-4.422904,7.450346,-8.542959,4.605741,6.319203,-3.569787,-5.614569,1.470385,-5.516037,-1.299051,6.859131,-9.737520,0.887406,-3.667694,6.388499,-5.850116,-8.758826,-3.154582,-3.374020,8.011760,4.052738,-9.203693,3.061586,-5.917221,-3.083329,6.793739,-3.274622,-1.392289,-6.762093,-4.412478,-5.443234,7.944621,-9.452020,-7.012200,6.839623,-2.740201,6.888255,-8.768986,-9.384468,-6.240660,3.107194,5.029841,-8.662620,-1.810272,-2.711925,-1.784051,0.858929,-8.551052,8.156912,6.851077,-0.996729,-8.752084,-4.092169,-8.690379,8.705500,-1.666410,2.084307,-4.337156,8.164407,-6.711592,-7.851755,5.125817,-9.957603,1.197241,-8.183589,-4.901715,5.219290,-4.298758,1.818487,-6.505193,-0.602629,-9.613483,-5.332940,9.877604,0.853737,-8.341097,-0.465134,6.196031,4.824825,-7.034390,5.662379,-3.633220,6.765617,0.172952,0.568656,-2.430580,-0.470879,4.448135,3.031008,-2.105161,-4.346580,-7.566680,-0.374569,4.399452,4.539003,1.382243,-6.774727,8.162766,9.983435,8.530659,-5.608640,-1.199366,-4.268666,-7.341816,-6.459939,-7.245722,5.718974,1.349892,-8.420080,3.902428,-8.946699,1.570873,-1.173605,1.517989,7.831195,-4.449678,-5.418024,-4.143002,2.532057,-2.596386,7.428814,-4.920950,-2.221157,4.453589,6.387021,-4.765045,3.394352,-2.474274,-5.648743,4.632809,-9.088169,5.058465,-7.437386,6.380427,-2.442476,7.092455,-5.087264,-3.373971,7.543818,-1.566264,-5.014346,1.564330,-3.132909,4.360863,6.329244,-0.889067,5.052081,-5.646898,0.389101,8.698527,3.822708,0.778865,-4.090048,-9.940208,5.206507,-3.140623,2.570497,-2.869693,-7.017163,-7.643224,-2.919540,6.549829,1.693354,-5.547734,-5.516591,-4.912859,-6.606097,5.273673,-7.481441,3.054242,-8.380877,1.411935,6.353406,0.773174,-6.526794,5.539557,-3.973802,-7.532084,-4.039481,-7.633545,-6.534650,-2.237182,0.680819,8.245063,-4.364866,4.238876,9.110889,-8.494113,-8.344160,-0.622376,-6.926206,-2.574314,-8.966814,-4.876179,5.991796,1.436507,5.618990,-5.889915,-8.688857,-1.347518,-1.477924,1.163171,9.109348,-7.756309,-4.102028,-2.297438,-4.978715,6.189862,6.616083,0.706313,2.099661,-5.447871,4.030901,0.186891,-4.292116,-1.427469,7.391976,-9.599976,3.794065,6.321061,3.800256,-9.512651,-8.202472,3.328566,3.733601,-4.333470,4.914448,-6.364308,2.807772,-4.646134,8.761689,2.928354,7.234147,4.291828,-0.687975,-7.008410,-7.811002,-2.451211,-6.091475,-7.879636,-0.981278,-3.098007,4.966890,-6.355886,-9.100505,6.768829,0.858479,6.403831,-7.581832,-3.421539,3.499398,7.292324,0.735688,-4.864906,1.745406,-3.442445,5.449487,3.586259,8.237205,8.895271,8.211884,3.483627,8.677019,2.434860,-7.736953,0.416274,-7.804799,0.314153,-5.173335,9.864850,0.352375,6.418261,2.778105,4.768916,9.760046,-5.635992,8.046921,8.181423,-4.127866,1.393354,-8.012136,-9.674562,6.129900,8.197051,0.913554,2.017311,-3.442172,3.814505,6.741933,-3.494937,-8.443270,9.871334,-6.417163,-8.664864], dtype = "float32")#candidate|3946|(810,)|const|float32
const_3947 = relay.const([-7.264425,-7.117313,-0.454895,5.469949,9.033372,-3.018305,-2.686712,9.483722,-1.947374,-0.099826,-8.448083,0.645659,-9.981671,-5.501888,3.629825,-1.235388,1.254276,0.067990,-2.421513,-2.144166,8.265510,1.497315,-7.216400,1.083215,-6.645512,2.100439,-1.676325,7.523846,1.026336,-8.762315,-0.653528,-2.317723,-9.243632,2.610114,9.662820,-0.487336,-5.637423,-8.253982,-1.008209,0.883516,8.736085,5.702326,4.986868,-7.272390,-0.927834,1.966731,0.635996,3.420871,7.769154,-7.431353,-5.423609,7.370447,-1.551220,3.508826,-1.508399,1.364422,-3.459171,9.482948,-5.315665,-3.838265,-0.457960,7.362830,2.778281,8.145332,6.591370,3.932323,-7.284498,-1.268696,-7.065249,8.471443,-4.773628,-8.662863,-2.165079,8.777556,-3.868648,1.433083,0.923627,-7.701242,8.357071,-6.923891,-3.962436,-7.847454,-5.274441,2.160216,9.205774,2.666292,-0.016262,-2.155683,2.315882,0.562684,5.376694,6.622507,1.410151,9.315323,7.603738,2.564388,-4.218576,2.871241,-9.324980,4.329114,7.642813,3.371687,2.871422,-7.749003,6.375701,-6.828299,7.785876,-1.024427,2.360011,6.384267,4.334358,-9.512244,3.217545,-6.072791,6.272113,9.337868,3.237488,-6.133942,-2.589499,6.396542,-0.397757,-0.368272,8.887694,-9.489906,-0.178083,-0.415941,-7.029356,5.318819,-0.801807,7.178131,-6.249687,-2.180040,4.795830,-0.428380,-6.976664,-0.337711,4.916074,-9.549870,3.652134,0.864698,-5.561856,2.265754,8.405090,-6.310120,-4.854747,1.876342,-0.406017,-1.224742,-5.558809,0.650727,5.168842,9.404088,-5.081409,1.095165,-2.984211,-5.603256,-1.954990,7.362226,-3.633057,1.077775,0.104296,6.496912,0.646997,4.844102,-1.147738,-4.449196,-5.820303,-6.044219,7.632950,-2.838149,1.258761,-2.631799,-8.347993,1.975599,-6.284762,-5.727468,9.511884,0.611478,5.358268,-9.483132,-0.246842,2.943252,-1.969411,2.304878,-6.876623,4.186587,-5.242138,6.136308,8.757641,-0.334846,-5.668022,5.821260,-2.083026,-7.764210,1.551221,-7.683063,2.454173,4.378875,0.299846,2.926776,-5.950866,5.332965,-7.197720,-7.178745,3.007099,3.083272,7.400257,5.183476,-8.102697,2.328400,-4.199344,2.248664,-4.682276,6.465809,5.660068,8.472308,1.575834,1.147179,5.303394,7.734861,-5.806531,-1.658370,9.412491,8.718194,6.712090,-6.494285,-2.447986,0.246651,-6.191127,4.571491,0.566648,7.658461,4.256489,2.070514,-6.658025,-4.357530,0.568437,-7.393832,-8.612279,-7.809572,8.421833,-7.456205,-9.598041,-2.684540,-8.088314,5.090795,-0.156171,9.147737,0.365170,-8.167629,9.259703,-2.040682,-7.293043,-2.655860,-2.006129,-2.657891,6.071824,-5.653786,9.406301,-0.451996,-1.113417,9.290462,-8.707941,-1.064751,3.550414,-6.545504,0.993649,-3.864891,4.982181,4.146184,7.175632,1.535453,-1.707516,2.015185,-6.350032,3.103118,1.125716,7.213578,2.136712,8.486270,2.628993,-3.451833,-8.354435,-4.091930,0.730671,0.193061,2.770785,9.137448,-5.226061,2.991398,-4.950095,2.159279,-2.680226,5.687081], dtype = "float64")#candidate|3947|(294,)|const|float64
call_3944 = relay.TupleGetItem(func_586_call(relay.reshape(var_3945.astype('float32'), [10, 5, 12]), relay.reshape(const_3946.astype('float32'), [810,]), relay.reshape(const_3947.astype('float64'), [294,]), ), 3)
call_3948 = relay.TupleGetItem(func_590_call(relay.reshape(var_3945.astype('float32'), [10, 5, 12]), relay.reshape(const_3946.astype('float32'), [810,]), relay.reshape(const_3947.astype('float64'), [294,]), ), 3)
var_3968 = relay.var("var_3968", dtype = "float64", shape = (8, 6, 10))#candidate|3968|(8, 6, 10)|var|float64
bop_3969 = relay.power(call_3925.astype('float64'), relay.reshape(var_3968.astype('float64'), relay.shape_of(call_3925))) # shape=(8, 6, 10)
bop_3972 = relay.power(call_3926.astype('float64'), relay.reshape(var_3968.astype('float64'), relay.shape_of(call_3926))) # shape=(8, 6, 10)
output = relay.Tuple([call_3944,var_3945,const_3946,const_3947,bop_3969,])
output2 = relay.Tuple([call_3948,var_3945,const_3946,const_3947,bop_3972,])
func_3976 = relay.Function([var_3945,var_3968,], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
mutated_mod['func_3976'] = func_3976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mutated_mod.get_global_var('func_3976')
var_3978 = relay.var("var_3978", dtype = "float32", shape = (600,))#candidate|3978|(600,)|var|float32
var_3979 = relay.var("var_3979", dtype = "float64", shape = (8, 6, 10))#candidate|3979|(8, 6, 10)|var|float64
call_3977 = func_3976_call(var_3978,var_3979,)
output = call_3977
func_3980 = relay.Function([var_3978,var_3979,], output)
mutated_mod['func_3980'] = func_3980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3713_call = mod.get_global_var('func_3713')
func_3714_call = mutated_mod.get_global_var('func_3714')
call_4000 = relay.TupleGetItem(func_3713_call(), 0)
call_4001 = relay.TupleGetItem(func_3714_call(), 0)
func_3976_call = mod.get_global_var('func_3976')
func_3980_call = mutated_mod.get_global_var('func_3980')
var_4028 = relay.var("var_4028", dtype = "float32", shape = (6, 100))#candidate|4028|(6, 100)|var|float32
const_4029 = relay.const([9.335439,-9.051165,-5.765835,9.589925,-0.090077,8.061911,-8.670480,-4.952444,-2.016403,-1.631508,-5.447614,-4.475416,8.233157,0.876045,2.772422,3.639230,4.895046,-8.753813,-1.494756,-7.995959,-6.797407,6.881181,-4.752997,-9.752004,-0.891679,-4.779587,-5.419201,-5.005140,-6.305420,-4.081675,-3.898715,-7.553540,9.173453,1.824143,-6.413845,0.554873,8.750871,-0.669669,-3.655360,7.528648,2.575835,9.805414,-2.554449,-9.818401,-8.327422,-4.478093,-2.279199,-2.664382,2.807182,3.135241,1.459338,9.573045,8.766819,-5.672886,-3.772810,3.376169,7.299266,7.118000,-9.846180,-4.677299,-9.840334,9.723895,7.294416,4.052364,-2.779106,-7.851645,4.640362,-2.374490,8.056497,-0.991611,-5.037226,-2.675577,2.778820,7.089267,1.807941,-0.879454,4.562327,-7.809999,0.860220,8.842980,-4.326490,8.155225,1.110745,-2.360162,-0.680749,2.241368,-7.992511,-1.695776,3.652831,0.581062,6.859724,6.024559,-1.641158,6.521995,5.035492,9.115517,-3.140835,2.472887,-1.395252,9.585115,-9.100641,-4.250623,-7.525335,-8.987112,-1.570934,-0.079249,5.630168,-0.800920,4.173854,2.130090,6.714206,-7.649376,8.106038,3.049715,7.680614,-0.688310,5.074405,3.852068,3.690962,-9.179928,3.826810,8.361403,-2.293688,-6.309524,4.498314,-4.741390,-5.153143,1.460438,-5.750332,-2.059933,9.623437,8.758391,8.567084,-0.767934,4.590004,-6.425500,9.519311,0.312346,-6.283553,8.807102,-9.541050,-1.888739,-5.332677,-6.265755,-1.397258,-9.034027,-3.412293,9.280685,-4.543375,-8.499389,-8.375207,7.357056,4.075963,9.135639,-6.601982,5.607101,-2.301408,-9.413531,0.757277,9.953235,4.821844,6.529486,6.726869,9.829366,-3.900487,5.541302,-9.408865,-9.566026,-6.629189,1.486115,-3.847665,6.497140,-6.171144,7.872022,-4.204276,-0.884626,9.433459,5.690059,-6.295554,-1.709498,2.828269,5.449209,-6.343618,5.533583,9.901452,-3.251688,9.228327,-7.553092,6.826232,-8.540637,-9.509383,7.703435,-3.455651,-0.635532,7.148320,-2.649125,6.550650,-8.660342,9.122473,-1.369016,4.199197,5.813447,-8.610944,-6.731718,0.211235,8.897804,3.926715,2.618155,-7.853590,-1.409381,8.827332,-8.545207,-5.791741,-0.895355,-8.824855,-8.191788,1.975886,-5.424108,9.132113,7.727959,0.907713,-6.711406,1.340986,7.848244,-6.361849,5.062634,-1.293335,-6.889992,3.817604,-3.895987,9.994531,6.535730,-6.904382,-6.887344,-5.748467,4.403442,-7.405116,5.651435,3.732076,8.858355,-7.260372,7.944883,-8.872483,-5.485412,0.646757,0.920276,0.516147,5.909167,0.355504,-5.187144,-9.579555,0.756750,5.065533,-0.451957,3.856418,-8.223298,1.635387,-0.686867,9.031240,9.239859,-7.918964,3.842984,6.366675,8.788916,-3.506505,-8.491954,3.512031,-1.843415,-2.688884,-3.987260,-4.863929,-5.131509,-1.528342,-0.324464,3.084112,-3.175717,-2.432626,4.678492,4.522776,-3.117819,-1.377229,-1.042274,1.835342,0.370191,0.809225,1.581797,-5.394798,7.400585,4.115981,4.960858,2.151721,-9.009415,8.795853,9.377767,-8.863457,2.135546,8.529280,1.648258,-3.240335,-9.365975,-5.871328,9.393589,2.435678,0.448914,-0.048081,9.771251,9.916414,-1.962978,-0.931246,6.618493,2.641586,9.082048,-4.372356,0.727557,3.466842,-5.750627,-5.969760,3.285347,1.615895,-5.518383,0.799566,8.083152,6.719361,9.095186,-5.994521,-4.427820,9.243459,-4.223661,-8.419739,-0.507507,6.744717,7.670306,0.585677,-1.328841,-3.088930,-5.234343,-6.823206,-9.665591,2.916503,5.385346,-9.814887,-3.118927,-4.924003,9.908909,-1.021433,-7.393639,-0.125358,3.038834,-9.970917,-7.128781,-3.255398,-7.407101,4.540868,-1.488576,5.835267,-4.161478,-5.670861,5.618723,2.220328,3.569069,7.632554,0.581260,-9.848299,6.170718,-6.639634,7.865866,-6.693497,-2.572341,-6.971575,3.974492,-9.696258,9.336443,-1.933565,8.558965,4.070165,3.492553,4.535226,-5.675162,-7.809244,-5.944915,-5.303828,6.785187,-5.168469,-6.536255,7.282235,-2.005019,7.916864,-9.774342,-3.027145,6.392445,-6.402827,-6.514166,6.646210,7.665158,-1.432744,9.267862,6.828693,-4.997737,-2.087639,-3.807685,-9.873251,2.145080,-4.171621,9.257562,-7.453682,-1.633251,5.834430,-2.572341,-1.863143,-5.371477,2.123457,3.173490,7.029613,-5.784319,-7.598665,3.909118,9.739451,-5.401498,-2.807559,0.151582,-4.064344,4.033481,-7.705786,-0.822966,-0.412991,-2.273041,-1.513860,-0.780835,5.474149,8.144327,-6.849504,-3.609866,-3.646423,5.173617,-9.553451,5.127824,7.754554,-7.338778,-7.625557,-9.823314,-7.602706,-4.794316,-2.649814,-0.867754,-6.205395,1.852971,-5.512629,-2.489482,-1.724428,0.299493,-9.472032,6.790989,7.691753,-1.197198,-4.231884,-7.793077,3.699363,-6.345884,-7.521412,4.617992,-2.852024,8.257710,-0.395174,3.219059,5.897861,8.667682,6.629858,4.510852,-9.092285,-9.318536,-0.835290,9.118398,-3.255014,3.264876,-1.406489,6.229682,4.352899,1.864303,-4.182950,-3.775211], dtype = "float64")#candidate|4029|(480,)|const|float64
call_4027 = relay.TupleGetItem(func_3976_call(relay.reshape(var_4028.astype('float32'), [600,]), relay.reshape(const_4029.astype('float64'), [8, 6, 10]), ), 3)
call_4030 = relay.TupleGetItem(func_3980_call(relay.reshape(var_4028.astype('float32'), [600,]), relay.reshape(const_4029.astype('float64'), [8, 6, 10]), ), 3)
var_4031 = relay.var("var_4031", dtype = "float64", shape = (294,))#candidate|4031|(294,)|var|float64
bop_4032 = relay.less_equal(call_4027.astype('bool'), relay.reshape(var_4031.astype('bool'), relay.shape_of(call_4027))) # shape=(294,)
bop_4035 = relay.less_equal(call_4030.astype('bool'), relay.reshape(var_4031.astype('bool'), relay.shape_of(call_4030))) # shape=(294,)
uop_4048 = relay.rsqrt(call_4027.astype('float32')) # shape=(294,)
uop_4050 = relay.rsqrt(call_4030.astype('float32')) # shape=(294,)
uop_4051 = relay.cosh(call_4000.astype('float32')) # shape=(9, 5, 7)
uop_4053 = relay.cosh(call_4001.astype('float32')) # shape=(9, 5, 7)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_4057 = relay.TupleGetItem(func_3274_call(), 0)
call_4058 = relay.TupleGetItem(func_3275_call(), 0)
output = relay.Tuple([var_4028,const_4029,bop_4032,uop_4048,uop_4051,call_4057,])
output2 = relay.Tuple([var_4028,const_4029,bop_4035,uop_4050,uop_4053,call_4058,])
func_4060 = relay.Function([var_4028,var_4031,], output)
mod['func_4060'] = func_4060
mod = relay.transform.InferType()(mod)
var_4061 = relay.var("var_4061", dtype = "float32", shape = (6, 100))#candidate|4061|(6, 100)|var|float32
var_4062 = relay.var("var_4062", dtype = "float64", shape = (294,))#candidate|4062|(294,)|var|float64
output = func_4060(var_4061,var_4062,)
func_4063 = relay.Function([var_4061,var_4062,], output)
mutated_mod['func_4063'] = func_4063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3680_call = mutated_mod.get_global_var('func_3680')
call_4096 = relay.TupleGetItem(func_3679_call(), 1)
call_4097 = relay.TupleGetItem(func_3680_call(), 1)
output = call_4096
output2 = call_4097
func_4103 = relay.Function([], output)
mod['func_4103'] = func_4103
mod = relay.transform.InferType()(mod)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mutated_mod.get_global_var('func_4103')
call_4104 = func_4103_call()
output = call_4104
func_4105 = relay.Function([], output)
mutated_mod['func_4105'] = func_4105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_4121 = func_4103_call()
call_4122 = func_4103_call()
var_4133 = relay.var("var_4133", dtype = "float32", shape = (9, 5, 7))#candidate|4133|(9, 5, 7)|var|float32
bop_4134 = relay.bitwise_or(call_4121.astype('uint32'), relay.reshape(var_4133.astype('uint32'), relay.shape_of(call_4121))) # shape=(9, 5, 7)
bop_4137 = relay.bitwise_or(call_4122.astype('uint32'), relay.reshape(var_4133.astype('uint32'), relay.shape_of(call_4122))) # shape=(9, 5, 7)
var_4147 = relay.var("var_4147", dtype = "uint32", shape = (9, 5, 7))#candidate|4147|(9, 5, 7)|var|uint32
bop_4148 = relay.floor_mod(bop_4134.astype('float64'), relay.reshape(var_4147.astype('float64'), relay.shape_of(bop_4134))) # shape=(9, 5, 7)
bop_4151 = relay.floor_mod(bop_4137.astype('float64'), relay.reshape(var_4147.astype('float64'), relay.shape_of(bop_4137))) # shape=(9, 5, 7)
func_1264_call = mod.get_global_var('func_1264')
func_1270_call = mutated_mod.get_global_var('func_1270')
const_4159 = relay.const([[-7,6,2,2,1,-3],[4,1,-4,-2,7,-8],[-6,6,-9,10,1,-3],[-4,-4,-2,-3,5,-8],[6,4,3,4,-3,3],[3,5,1,-4,-6,-9],[7,5,-8,3,-7,7],[8,-1,-2,-10,-10,-6],[4,-6,-2,9,7,-3],[8,-8,4,-5,9,-5],[10,3,-2,-1,-10,-7],[1,2,-1,-2,-3,-4],[-6,-9,-6,-5,2,4],[-8,10,-1,-10,2,-10],[-9,2,3,-8,6,5],[4,8,-7,-7,9,-10],[-6,-5,-4,-3,-7,2],[-2,10,-10,2,4,-9],[4,5,5,4,-8,10],[-3,-3,-10,2,-7,-10],[9,10,-3,4,7,9],[-7,-1,-3,4,-6,8],[-4,-7,-5,8,10,9],[9,9,3,7,-4,-4],[1,-4,-7,-4,3,1],[-10,-3,-1,4,-6,-7],[2,8,2,2,9,4],[-8,-6,10,2,10,-10],[8,10,-6,4,1,-5],[-3,10,-3,-10,5,-4],[5,4,-3,-6,-8,-6],[7,4,1,3,-6,-8],[9,2,5,-6,-3,-8],[7,-7,4,1,3,-7],[5,-10,5,2,7,-6],[1,5,-6,-2,8,-8],[-5,2,-6,-4,-1,2],[4,9,-9,6,-1,-5],[3,-10,9,1,-8,-3],[2,-3,-4,10,-2,-9],[-6,-10,5,3,-5,9],[2,-9,3,-3,1,-9],[-5,-5,9,-6,9,3],[-3,2,-3,1,10,-4],[-4,-7,4,-2,-6,4],[10,-2,7,-3,-6,-8],[7,-2,9,-10,-4,-8],[5,-7,-6,10,-2,5],[10,4,6,-6,-1,-9],[-6,-5,-6,-9,4,5],[7,-6,-8,2,10,7],[-8,-8,-1,1,-6,8],[-9,4,-2,-3,-6,2],[1,-3,2,8,1,10],[3,-1,-8,-2,5,2],[6,-10,8,6,6,10],[-9,9,-4,-4,-10,7],[-4,-9,-4,-8,-10,-3],[-10,6,10,5,6,-9],[-1,-9,-6,1,5,10],[-2,-2,-7,-1,-5,5],[4,-5,4,-1,5,-7],[6,4,1,1,-2,-6],[-9,8,-3,-9,4,7],[6,-4,8,5,-1,-5],[2,-6,10,-3,-8,-5],[5,9,-8,7,2,8],[-3,4,-1,-6,9,-7],[-5,-10,-3,-5,-8,8],[-1,-1,-8,-3,-1,7],[-7,7,7,5,-4,7],[9,-6,6,-3,10,-10],[-3,1,1,8,-5,6],[-8,-5,5,10,4,2],[-9,-9,-9,7,-3,5],[-8,-1,-7,6,7,10],[3,-9,5,1,4,-4],[10,-4,2,6,-2,5],[-6,-9,-2,9,8,-6],[-7,10,6,6,-5,-8],[10,9,5,-3,6,-5],[10,8,10,-4,9,-2],[-8,-1,-9,-2,-7,2],[6,10,-7,4,9,-5],[4,-7,3,-7,8,-4],[1,7,-8,7,-4,7],[1,9,3,-10,5,-9],[-9,-9,-6,-5,10,4],[-2,-3,-9,-6,-4,-2],[-10,4,-10,-6,-9,7],[10,4,-7,-10,-1,-3],[-7,-3,-5,8,7,-3],[-6,7,3,-3,-7,5],[-7,-1,9,-9,5,7],[-6,7,8,-10,8,10],[-1,-4,-1,-4,-3,-7],[1,7,9,-9,-3,-8],[-6,-5,-6,-6,9,-7],[7,7,8,-2,-3,6],[5,6,-2,8,3,-4],[10,7,-10,-10,-6,8],[-4,-3,-1,6,6,3],[6,-8,9,-7,-2,10],[9,-2,8,10,-2,6],[6,9,-4,8,8,-9],[7,-5,2,-4,3,7],[8,3,4,3,-9,-2],[9,-5,7,1,9,7],[-9,-4,9,-6,-1,-6],[8,7,-6,-2,-8,-9],[10,8,-7,-3,-6,-1],[-8,-1,-7,8,-10,3],[-3,-8,-2,5,-10,3],[10,4,-3,-2,-3,2],[1,3,4,-7,1,-7],[4,-4,6,10,3,1],[-10,-7,-7,-10,8,10],[-9,8,-4,-2,-4,3],[-4,-6,-8,3,2,-8],[6,5,-3,-5,-4,4],[-7,-6,-7,-10,3,-9],[3,-8,9,-3,-6,-10],[-5,-3,9,7,-8,-6],[-4,-5,2,-10,4,-1],[-4,10,3,10,7,9],[5,-10,10,5,2,-3],[-3,-9,-10,2,5,5],[9,5,3,2,1,10],[-7,9,4,-6,-4,-6],[5,8,9,7,-1,6]], dtype = "uint16")#candidate|4159|(130, 6)|const|uint16
const_4160 = relay.const([3.247452,8.386616,-8.148496,5.920426,5.356364,3.203657,2.237226,3.641505,-8.288936,-9.219943,-7.508031,7.601962,3.486998,-8.519260,-7.861096,-0.821951,-6.244204,-4.754816,-2.951463,3.445356,-0.557444,-8.642215,5.556245,5.273942,-2.127033,-2.619353,-7.466301,-6.523643,-4.218715,-0.142131,-6.327997,-2.073698,-6.268075,5.866577,-4.565657,-0.646116,3.987218,-5.208907,5.581202,-4.347672,5.061591,-6.980132,-7.772170,-3.541873,9.539026,-4.947727,2.348809,9.305276,0.535866,-3.342171,9.131372,2.882440,8.480129,3.944315,1.626281,-2.854344,7.444901,-8.442989,2.238656,-3.421514,5.710418,-3.838786,9.357527,-8.172002,-2.815772,-7.484404,5.953343,-0.664679,4.537387,9.201220,5.662080,-7.843169,9.626053,5.871446,4.143328,3.763339,-8.847507,5.046004,1.117769,-8.288049,3.083801,4.536218,-3.111808,6.907982,-1.069549,-3.319482,2.601472,-6.962360,7.067205,0.407823,6.566777,3.665390,7.217938,4.605716,-8.443979,-1.276173,-0.287332,0.816274,-0.054204,-8.972823,1.837015,-0.738975,8.377706,7.321177,-5.834297,2.879387,-0.584364,6.424183,-9.435835,-8.326849,6.423150,-0.489235,4.595393,-5.350023,-4.065703,-2.306891,-2.091633,-8.202945,8.903922,-4.872606,8.976741,6.802829,5.922990,6.159093,7.304515,-3.500083,-0.725524,-7.335190,-7.262914,7.424337,4.057904,0.404223,5.286614,-8.736486,3.292276,-2.644621,-9.960956,-3.339870,7.385999,0.154109,-3.260423,5.434997,-6.599100,-8.017369,-4.756942,-9.746434,6.371704,1.718198,0.196938,5.301789,0.986002,8.637845,1.669627,7.573632,6.925695,0.865200,-2.943468,8.387200,-0.223049,-5.316701,6.966058,-3.288521,-8.628350,0.873835,0.681909,-1.046540,2.647231,1.399956,-2.794762,1.059191,7.504920,1.634016,9.153680,6.450238,-0.069439,-8.362183,-3.077904,-6.204280,3.548533,-1.740296,-4.377258,1.663606,2.474194,-4.014179,4.339493,9.859685,-6.085091,-0.081183,6.579799,5.487758,1.531241,-9.038100,-5.158159,-6.515210,-3.376297,6.292549,-6.098361,-7.437566,3.711056,2.566977,-7.950153,6.569355,4.391905,-4.741001,3.286172,-4.816591,-2.602478,-4.462641,9.881086,-8.890686,-1.984019,-8.466530,-3.611937,-3.328604,2.491546,-9.907923,-9.392435,-1.251924,9.763626,7.355289,-7.355661,-8.162948,-4.489132,6.465026,6.889968,1.711201,7.953922,-6.255279,8.001688,9.447417,-6.391455,-9.607955,-3.501273,-5.628951,-7.190844,-7.673334,2.270739,6.314394,-2.575629,7.874018,-6.116567,3.404416,-0.299450,2.352355,-0.174328,-4.522731,-8.120583,3.151750,3.908310,-7.552545,6.571704,-1.756815,3.406527,-9.918719,5.531782,-5.177779,4.029532,1.597690,4.842179,5.809368,-5.306047,5.067138,-4.333476,6.291642,-9.911145,3.948840,-8.757367,1.433668,5.666467,1.306322,3.436182,-4.665733,0.663661,8.464125,-0.119505,-8.125275,-2.568204,9.487241,7.126500,9.104178,5.638103,6.285537,-5.709813,0.596759,5.881652,-2.685974,-4.491958,0.460346,4.064517,9.815636,8.102188,-8.198461,7.637628,-9.400003,-6.706063,-3.940211,8.402322,0.618461,-0.137671,8.367434,-1.576591,2.431403,8.305765,-9.984021,6.583103,-5.492503,-2.090496,-7.294720,6.088287,-6.902054,-4.106354,5.724667,-8.092121,-6.195459,9.433652,-6.716249,0.644552,6.251600,-5.242942,8.339609,0.570871,-8.017241,-3.156098,9.782955,-5.795908,2.264410,-3.791757,-3.131485,-8.167570,-7.852663,-5.765642,9.448487,-8.288022,-6.124847,-5.992991,-5.805881,-9.092048,7.333101,7.591229,-1.845983,-1.874455,0.611137,-2.235512,-6.617112,-0.238906,-4.571941,9.718926,-7.025239,-8.365610,9.773761,7.955405,-6.310470,-4.730876,-8.481695,-2.113182,8.494008,7.424134,-2.695921,-0.682576,-5.117767,8.722353,-1.073021,-0.442682,-6.627706,7.450372,0.651366,8.241894,-0.649953,-8.102857,4.265986,7.875185,0.123607,8.109622,-0.173837,-1.558081,-8.703660,-1.612238,4.167939,-3.468170,3.641318,4.195926,-6.211987,9.160644,-0.539244,9.462974,-7.976206,9.349773,8.975083,6.605080,-6.694939,-0.127518,9.067777,2.646706,2.673678,-2.802369,-8.700935,-3.456649,-8.794944,6.459367,7.831710,9.729466,-5.047336,9.724462,1.480614,7.357761,3.250256,6.461914,-8.304664,7.664374,-0.977315,1.375605,6.450944,7.698709,0.666729,-1.342032,5.178085,-7.121425,-9.122993,-9.864844,6.019167,-4.945456,9.599023,6.926031,-2.743536,-8.872318,4.618062,4.294057,0.623957,-4.954617,-3.036900,5.972430,-1.483478,7.478441,3.508130,3.549881,3.429688,0.991312,8.394825,7.596933,5.923446,-7.920902,1.393354,2.782682,-3.795235,0.317560,8.409269,-4.950671,-8.020902,-6.262123,6.075176,-3.245974,3.523998,-3.449382,2.441656,8.098683,6.641123,3.603001,0.554499,4.248961,-4.546741,-7.104165,1.823602,-4.236358,-5.540118,0.832533,-7.238104,5.521957,-1.278465,-9.892954,4.143409,-6.364258,4.300137,8.016505,4.930553,-3.558705,4.550796,5.356529,6.689821,-6.417477,-6.097634,-1.437978,-0.577569,5.008620,9.703806,-3.414521,0.123495,5.238477,-9.256177,6.322227,5.412656,2.497232,8.473226,9.200508,-0.297072,-2.228265,7.002628,1.246528,-6.865911,-1.001166,-4.777747,-6.680412,-5.137964,-7.632966,-7.678309,-8.072316,3.016870,-0.039232,-7.011855,-4.626508,-9.259106,9.962667,2.732612,7.022531,8.734848,2.559904,-7.067084,2.366997,9.245099,4.736212,-4.876264,0.909596,5.834049,-1.104907,9.225053,2.775191,0.252461,4.232776,1.308725,5.875636,1.238163,2.022320,-1.292572,-9.873296,-6.232974,-3.363272,3.079079,7.097433,1.118644,-4.397186,-9.772563,-5.664984,-4.326274,-8.816562,-0.871667,3.999941,-9.608633,1.040490,2.341143,-8.469077,6.149641,-0.210468,-3.089447,-1.108339,8.913115,-1.525285,-5.828374,-1.324226,-4.444544,-4.660517,-6.439275,-4.160063,-3.669062,2.577902,8.097126,-3.407223,-6.855454,3.757367,-5.494567,2.911761,-9.813198,1.624053,-1.391002,-9.371135,-1.520934,-4.939459,-2.933644,5.554788,-7.901858,-0.263358,-2.457250,2.447663,-5.474597,9.003464,-7.903495,-2.353419,-1.038531,0.872988,5.347484,0.554404,-1.996709,-2.089765,9.834856,-6.819552,6.836252,5.139264,8.771292,-2.998881,-2.947301,-6.531279,-3.425886], dtype = "float32")#candidate|4160|(600,)|const|float32
const_4161 = relay.const([[-1.878275,4.598822,7.848227,6.346310,0.771602,-7.673155,1.987328,-5.126756,-4.816138,-5.352287,-7.882834,9.200890,0.704377,7.530310,3.283347,-8.911809,3.407550,6.921225,0.114718,9.364774,-4.086104,4.242349,-1.096014,-2.499160,1.277575,6.377837,2.174098,-8.089880,9.544810,-7.251551,0.272424,6.345719,-6.991957,8.562071,8.913368,-4.577295,4.985317,6.167168,2.218407,-8.392312,-2.821162,-4.705443],[7.349408,4.277008,-9.936884,7.653310,-2.564937,-9.982688,6.827627,-0.407444,1.073329,-9.264918,3.300990,-9.713406,9.843216,0.093097,-6.270773,4.232439,-1.229884,-9.139189,-2.353794,9.266350,-4.822380,1.819880,5.818771,9.241067,-6.545161,0.927157,9.088984,-2.793230,6.783756,1.333930,8.600553,3.961269,8.923145,-4.972795,9.196952,-2.517793,-1.195594,-1.609580,0.222901,-2.983118,2.724925,3.354407],[1.514335,-7.849506,6.945041,-3.511922,-0.925360,3.428038,2.085609,-7.731801,4.089622,4.926725,-6.480372,0.918857,4.604683,-1.289561,-7.036467,8.245745,3.680808,-0.211945,4.650650,-2.644426,-0.526264,6.841836,9.933244,-8.840522,-7.528242,-3.019180,9.013292,7.449612,2.406643,-8.147493,1.680734,2.275399,4.985331,-4.162684,-8.213843,-1.243204,-6.895044,7.257759,2.081546,-2.082902,0.025068,6.789644],[-3.154530,7.803431,-7.342612,3.190783,4.238703,-2.603879,-1.064477,-5.714066,5.327592,3.779720,-8.988494,-0.158562,2.053836,-3.391573,0.340181,1.930923,-3.160388,-9.593795,-1.120271,-3.584562,-4.545539,-8.594353,5.441611,-0.305691,-8.880360,-1.507210,-7.236041,-7.673840,8.758762,-2.751120,-0.340660,9.643704,-2.481717,4.533937,3.644697,-4.179720,9.867841,2.948679,8.082070,6.854702,3.282614,2.515366],[-7.585009,2.017420,-1.398988,5.634681,-8.121200,5.225807,-9.698675,8.399384,-8.334438,0.784902,1.041305,5.998330,-7.926547,-9.524093,-1.325000,0.040192,4.090297,2.447579,-5.674033,9.394960,8.959901,4.782039,4.259242,9.888220,5.383835,9.053999,8.741853,0.163254,-7.060427,-0.518747,5.122570,2.806229,-1.445605,-6.334349,8.483391,4.709295,-6.289162,-0.195714,-0.181886,-2.733141,2.181241,-7.924573],[-4.890440,-3.862198,6.701260,5.005648,2.090163,1.017550,2.666720,-5.872865,4.094079,9.343514,5.538033,-8.213045,-3.289531,1.506869,-6.421413,-9.492454,6.262128,0.463659,7.454186,-3.942083,-5.837733,2.364979,4.595163,-7.978419,8.303246,2.196745,-8.560038,-0.434301,-6.668911,-9.054247,3.046278,4.000274,6.039372,0.675175,6.840431,7.194124,-2.269020,-5.218646,8.583861,-5.202990,-2.861851,4.453573],[2.082113,7.717075,1.639765,6.906880,4.438564,8.826369,8.055566,8.034260,-3.350528,-0.773209,9.029691,9.812416,-4.227003,-8.201907,2.503079,9.909954,1.940098,-0.938122,-8.371665,-3.991658,-4.928365,-1.687981,-7.074322,-2.690281,5.146060,9.667825,8.014565,6.193950,9.423929,8.693490,4.797787,9.035534,6.064014,9.634419,1.053511,8.017875,8.933902,-0.659340,-1.146228,5.420838,7.870500,-8.152729]], dtype = "float64")#candidate|4161|(7, 42)|const|float64
call_4158 = relay.TupleGetItem(func_1264_call(relay.reshape(const_4159.astype('uint16'), [13, 4, 15]), relay.reshape(const_4159.astype('uint16'), [13, 4, 15]), relay.reshape(const_4160.astype('float32'), [600,]), relay.reshape(const_4161.astype('float64'), [294,]), ), 1)
call_4162 = relay.TupleGetItem(func_1270_call(relay.reshape(const_4159.astype('uint16'), [13, 4, 15]), relay.reshape(const_4159.astype('uint16'), [13, 4, 15]), relay.reshape(const_4160.astype('float32'), [600,]), relay.reshape(const_4161.astype('float64'), [294,]), ), 1)
output = relay.Tuple([bop_4148,call_4158,const_4159,const_4160,const_4161,])
output2 = relay.Tuple([bop_4151,call_4162,const_4159,const_4160,const_4161,])
func_4170 = relay.Function([var_4133,var_4147,], output)
mod['func_4170'] = func_4170
mod = relay.transform.InferType()(mod)
mutated_mod['func_4170'] = func_4170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4170_call = mutated_mod.get_global_var('func_4170')
var_4172 = relay.var("var_4172", dtype = "float32", shape = (9, 5, 7))#candidate|4172|(9, 5, 7)|var|float32
var_4173 = relay.var("var_4173", dtype = "uint32", shape = (9, 5, 7))#candidate|4173|(9, 5, 7)|var|uint32
call_4171 = func_4170_call(var_4172,var_4173,)
output = call_4171
func_4174 = relay.Function([var_4172,var_4173,], output)
mutated_mod['func_4174'] = func_4174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_4187 = func_4103_call()
call_4188 = func_4103_call()
uop_4189 = relay.exp(call_4187.astype('float32')) # shape=(9, 5, 7)
uop_4191 = relay.exp(call_4188.astype('float32')) # shape=(9, 5, 7)
output = relay.Tuple([uop_4189,])
output2 = relay.Tuple([uop_4191,])
func_4194 = relay.Function([], output)
mod['func_4194'] = func_4194
mod = relay.transform.InferType()(mod)
output = func_4194()
func_4195 = relay.Function([], output)
mutated_mod['func_4195'] = func_4195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mod.get_global_var('func_3642')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4311 = relay.TupleGetItem(func_3642_call(), 0)
call_4312 = relay.TupleGetItem(func_3644_call(), 0)
const_4315 = relay.const([[[-5,-6,-3,3,4,-10,-7],[-10,-5,-8,5,7,8,5],[10,-9,6,-7,-8,-1,-8],[-9,9,-9,2,-1,-7,-2],[6,7,7,-3,3,1,2]],[[-4,-3,7,-2,8,4,-10],[-10,9,10,-2,-4,-7,4],[-8,10,-9,7,-6,-4,5],[-6,10,7,-1,-7,-1,7],[8,8,2,-10,-4,8,-9]],[[6,10,-9,7,-2,-1,1],[-10,2,2,3,-1,-4,1],[-6,-6,-4,-4,9,-7,2],[-1,-1,-3,-6,6,-10,2],[1,8,6,2,10,-3,9]],[[-1,-9,4,-1,5,-4,9],[-8,-10,6,10,1,2,-8],[-10,6,-8,4,-6,-10,4],[-4,10,6,4,-7,6,4],[9,2,9,-3,-2,10,1]],[[1,-6,10,6,3,10,2],[-7,-3,-8,-6,-4,5,-5],[5,5,-5,8,6,-1,-4],[10,-6,-4,-3,-5,-1,-9],[4,1,2,-3,8,2,7]],[[-4,6,-9,-1,1,-5,-3],[5,3,6,7,2,6,-1],[-6,4,9,6,-2,9,10],[-2,-2,-5,-4,-1,-8,3],[4,4,2,2,6,9,4]],[[3,-4,7,2,3,10,9],[8,5,5,4,5,-1,5],[-1,10,2,-1,-1,10,10],[-9,-1,-2,9,-4,-7,8],[-2,-7,-1,-8,-2,4,1]],[[9,-6,-4,-7,3,-4,-8],[8,8,-8,-2,4,6,9],[1,-3,-3,1,6,-4,4],[6,10,8,3,-6,9,-4],[-6,-2,-5,9,4,7,-8]],[[8,10,3,-7,1,9,2],[-7,-10,1,4,-8,4,-3],[-3,2,4,-5,-4,-10,-10],[-4,6,1,6,1,-6,3],[3,10,10,5,-4,10,3]]], dtype = "int64")#candidate|4315|(9, 5, 7)|const|int64
bop_4316 = relay.mod(call_4311.astype('float64'), relay.reshape(const_4315.astype('float64'), relay.shape_of(call_4311))) # shape=(9, 5, 7)
bop_4319 = relay.mod(call_4312.astype('float64'), relay.reshape(const_4315.astype('float64'), relay.shape_of(call_4312))) # shape=(9, 5, 7)
output = relay.Tuple([bop_4316,])
output2 = relay.Tuple([bop_4319,])
func_4322 = relay.Function([], output)
mod['func_4322'] = func_4322
mod = relay.transform.InferType()(mod)
mutated_mod['func_4322'] = func_4322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4322_call = mutated_mod.get_global_var('func_4322')
call_4323 = func_4322_call()
output = call_4323
func_4324 = relay.Function([], output)
mutated_mod['func_4324'] = func_4324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3178_call = mod.get_global_var('func_3178')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_4365 = relay.TupleGetItem(func_3178_call(), 0)
call_4366 = relay.TupleGetItem(func_3180_call(), 0)
output = relay.Tuple([call_4365,])
output2 = relay.Tuple([call_4366,])
func_4373 = relay.Function([], output)
mod['func_4373'] = func_4373
mod = relay.transform.InferType()(mod)
output = func_4373()
func_4374 = relay.Function([], output)
mutated_mod['func_4374'] = func_4374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4385 = relay.var("var_4385", dtype = "int32", shape = (11, 14, 6))#candidate|4385|(11, 14, 6)|var|int32
var_4386 = relay.var("var_4386", dtype = "int32", shape = (11, 14, 6))#candidate|4386|(11, 14, 6)|var|int32
bop_4387 = relay.not_equal(var_4385.astype('bool'), relay.reshape(var_4386.astype('bool'), relay.shape_of(var_4385))) # shape=(11, 14, 6)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
const_4419 = relay.const([[10],[-5],[-2],[-5],[5],[2],[8],[6],[6],[5],[6],[-10],[-4],[-1],[-2],[1],[-7],[-1],[3],[-7],[-5],[8],[5],[-9],[-6],[10],[-2],[7],[7],[-8],[9],[1],[6],[-4],[1],[9],[-2],[-9],[-3],[-9],[3],[-2],[-2],[-2],[-7],[5],[10],[1],[-9],[6],[8],[-4],[-4],[-9],[-3],[7],[8],[10],[-10],[-8],[-3],[-2],[-1],[10],[8],[10],[3],[8],[8],[6],[6],[5],[7],[-5],[-8],[-4],[7],[5],[-9],[-8],[2],[2],[-9],[-5],[-8],[8],[8],[-7],[1],[-2],[4],[-1],[9],[9],[-10],[4],[-2],[-7],[7],[-1],[3],[-8],[-3],[6],[8],[4],[-1],[4],[-2],[10],[9],[-3],[-10],[-5],[-2],[-3],[-4],[-8],[7],[-2],[9],[10],[-2],[1],[-7],[-5],[5],[-7],[-10],[-6],[-9],[-9],[-2],[-1],[-10],[-6],[10],[8],[10],[5],[2],[-4],[-9],[6],[5],[6],[-10],[4],[-2],[3],[-7],[-1],[-6],[-8],[-10],[-4],[4],[9],[-8],[5],[-6],[-5],[5],[-10],[-6],[1],[3],[10],[-2],[-6],[1],[7],[7],[-9],[1],[-10],[4],[-5],[7],[-10],[-8],[8],[-4],[1],[-7],[10],[-8],[-3],[3],[1],[7],[-2],[9],[2],[3],[-10],[-2],[2],[-7],[5],[1],[-3],[-4],[-5],[-2],[2],[-10],[-2],[2],[-4],[7],[-5],[2],[-6],[2],[4],[7],[-2],[8],[8],[4],[9],[4],[2],[5],[-2],[3],[3],[5],[-6],[-3],[10],[-10],[10],[10],[7],[-10],[7],[-8],[-2],[8],[-7],[-1],[6],[-10],[-5],[-5],[-2],[5],[-2],[-4],[8],[-3],[-7],[-7],[-4],[-5],[6],[1],[-6],[-6],[-5],[-5],[-3],[-1],[-7],[4],[-8],[-2],[10],[6],[-6],[6],[10],[6],[8],[6],[3],[10],[-2],[-3],[-5],[-4],[-5],[-8],[8],[10],[-8],[6],[4],[4],[5],[5],[1],[-4],[-6],[2],[5],[6],[2],[7],[-1],[-4],[3],[-7],[-5],[9],[8],[8],[9],[2],[10],[-9],[-10],[6],[-1],[4],[2],[-9],[1],[2],[-6],[3],[-4],[5],[4],[9],[1],[-10],[-4],[-7],[-9],[-7],[10],[-6],[1],[-6],[-8],[10],[2],[5],[3],[10],[5],[7],[6],[4],[-4],[6],[6],[-4],[7],[-5],[8],[9],[3],[6],[10],[-1],[7],[2],[-3],[-9],[-9],[2],[7],[6],[5],[1],[7],[5],[-3],[-5],[10],[6],[6],[-3],[8],[6],[8],[-5],[-4],[-1],[10],[-6],[3],[8],[-4],[-9],[-1],[-6],[-4],[-5],[-2],[2],[-9],[-7],[5],[5],[9],[4],[-3],[-7],[9],[3],[-10],[-8],[7],[-9],[-6],[-9],[5],[9],[-3],[7],[4],[-5],[8],[-5],[-8],[7],[-9],[-4],[-8],[-7],[3],[9],[-3],[2],[-3],[-7],[4],[5],[4],[9],[10],[9],[10],[-8],[-8],[5],[1],[3],[-4],[-8],[-6],[5],[9],[-2],[-2]], dtype = "int64")#candidate|4419|(450, 1)|const|int64
var_4420 = relay.var("var_4420", dtype = "int32", shape = (40,))#candidate|4420|(40,)|var|int32
var_4421 = relay.var("var_4421", dtype = "int32", shape = (520,))#candidate|4421|(520,)|var|int32
call_4418 = relay.TupleGetItem(func_1069_call(relay.reshape(const_4419.astype('int64'), [2, 15, 15]), relay.reshape(var_4420.astype('int32'), [40,]), relay.reshape(var_4421.astype('int32'), [520,]), ), 3)
call_4422 = relay.TupleGetItem(func_1073_call(relay.reshape(const_4419.astype('int64'), [2, 15, 15]), relay.reshape(var_4420.astype('int32'), [40,]), relay.reshape(var_4421.astype('int32'), [520,]), ), 3)
output = relay.Tuple([bop_4387,call_4418,const_4419,var_4420,var_4421,])
output2 = relay.Tuple([bop_4387,call_4422,const_4419,var_4420,var_4421,])
func_4423 = relay.Function([var_4385,var_4386,var_4420,var_4421,], output)
mod['func_4423'] = func_4423
mod = relay.transform.InferType()(mod)
mutated_mod['func_4423'] = func_4423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mutated_mod.get_global_var('func_4423')
var_4425 = relay.var("var_4425", dtype = "int32", shape = (11, 14, 6))#candidate|4425|(11, 14, 6)|var|int32
var_4426 = relay.var("var_4426", dtype = "int32", shape = (11, 14, 6))#candidate|4426|(11, 14, 6)|var|int32
var_4427 = relay.var("var_4427", dtype = "int32", shape = (40,))#candidate|4427|(40,)|var|int32
var_4428 = relay.var("var_4428", dtype = "int32", shape = (520,))#candidate|4428|(520,)|var|int32
call_4424 = func_4423_call(var_4425,var_4426,var_4427,var_4428,)
output = call_4424
func_4429 = relay.Function([var_4425,var_4426,var_4427,var_4428,], output)
mutated_mod['func_4429'] = func_4429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3178_call = mod.get_global_var('func_3178')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_4455 = relay.TupleGetItem(func_3178_call(), 0)
call_4456 = relay.TupleGetItem(func_3180_call(), 0)
uop_4457 = relay.erf(call_4455.astype('float64')) # shape=(8, 6, 10)
uop_4459 = relay.erf(call_4456.astype('float64')) # shape=(8, 6, 10)
bop_4460 = relay.mod(call_4455.astype('float64'), relay.reshape(uop_4457.astype('float64'), relay.shape_of(call_4455))) # shape=(8, 6, 10)
bop_4463 = relay.mod(call_4456.astype('float64'), relay.reshape(uop_4459.astype('float64'), relay.shape_of(call_4456))) # shape=(8, 6, 10)
func_3507_call = mod.get_global_var('func_3507')
func_3512_call = mutated_mod.get_global_var('func_3512')
const_4467 = relay.const([-6,-4,5,-9,-5,8,-1,1,4,-2,7,-8,-1,3,5,-3,-5,5,-10,-8,1,2,5,-3,-9,10,1,4,-6,-3,3,10,-10,9,-1,6,-4,-6,-4,-10,6,-8,-9,-10,9,4,7,9,10,9,4,-7,-6,7,-4,2,6,-8,2,10,3,-3,-9,-10,-8,-4,4,1,8,1,-5,-3,-3,-8,1,6,1,4,2,2,-3,-4,-2,9,5,2,-3,2,6,-10,-7,2,-8,9,2,-1,2,6,-2,-3,-4,-8,-8,2,-10,4,3,-5,-4,-10,-10,5,-8,-7,5,9,3,-6,-10,6,5,9,-7,6,3,-10,-8,-4,-6,-7,10,-10,-5,-3,-7,9,2,7,-4,-3,-10,7,-9,-4,-3,4,9,6,10,-3,2,-8,-9,6,-9,-8,3,9,-10,7,-6,-9,-4,-2,-6,-3,6,5,-8,1,-9,10,-8,-1,4,2,-8,-6,7,9,3,-4,-3,8,-9,1,-8,7,10,4,8,3,-8,10,-6,-7,-1,2,9,7,7,-3,7,-10,-1,-10,-2,-7,-1,-4,-8,-10,3,4,9,7,7,2,-3,10,9,-5,10,-9,-8,10,5,4,-1,9,10,-8,9,1,-4,-6,-1,-4,-2,4,10,-6,5,3,10,9,-10,-5,9,-9,-8,-6,5,-10,6,6,1,1,4,3,5,-4,-9,4,-8,10,9,3,-9,2,8,-1,2,4,-5,-1,-10,-5,-7,-6,-1,9,4,5,-4,9,5,-10,10,-2,-4,5,-10,-3,-9,-10,-7,10,10,5,10,-9,-1,-1,-4,8,-6,1,3,-2,5,3,-2,3,8,-7,3,-5,-4,7,-9,-5,-6,-10,-2,-1,4,-9,7,-8,2,-7,-1,1,-9,5,-1,-1,-9,-8,-5,8,-5,8,10,8,3,-9,8,-2,-8,2,-9,10,8,-1,-9,2,7,-5,-6,-1,8,3,-1,2,-4,-3,-1,-1,1,10,10,-1,2,3,8,-4,7,-4,-4,10,-3,9,5,1,-1,-3,2,9,9,9,8,-6,3,-3,-6,-3,5,-1,3,6,2,6,-3,-6,-6,2,10,-9,7,10,-5,2,-6,-2,-4,6,8,-10,6,7,-4,-8,-8,9,-8,-9,-3,-7,-4,9,-7,-6,6,8,-5,-8,4,3,-2,7,9,-7,9,-3,-2,4,9,6,7,1,-9,-9,4,6,2,8,-1,6,-8,6,-3,-9,10,8,-9,7,8,2,-8,10,4,-3,-2,7,-10,-9,-3,5,-6,-1,4,5,-4,3,-7,-9,-10,6,-3,-5,-7,-6,-5,-4,-4,7,2,9,1,5,-5,-9,-1,1,9,5,-2,-6,1,-9,-6,-6,-2,-4,7,3,6,-10,-6,-10,-9,-8,-7,-8,-6,-7,5,1,-8,-10,-4,8,-4,8,-1,4,-5,-1,-9,-1,5,-7,1,8,3,-4,-3,-9,-3,7,-5,-6,-5,3,7,1,3,-4,8,-4,4,-7,2,-3,3,1,-3,8,-5,6,-4,3,6,4,1,-2,5,1,-5,10,-6,-6,7,9,-5,-3,-1,-8,6,-9,-9,-2,-2,10,7,5,-3,2,-5,4,-7,2,-3,-5,2,6,6,-6,2,6,-7,5,-2,-4,10,-8,6,5,10,-8,5,-4,3,1,-7,7,8,6,10,8,9,-7,7,4,-3,2,6,10,7,7,8,7,-7,-5,-4,-7,8,8,9,3,-4,-1,-10,-2,-4,-10,-4,-8,10,9,6,-5,-1,10,-4,-3,7,-9,-7,-5,-3,-3,1,-9,5,-3,4,-5,-10,7,9,2,-4,-4,-3,1,-5,-2,-6,-5,9,-9,-7,-7,9,-3,-4,4,-8,-10,-1,-9,-5,-3,2,-9,-8,-5,3,2,-6,10,-9,-9,-7,8,-9,-4,-7,-5,-5,-1,5,7,-8,1,3,-5,10,-7,-10,-4,-3,-5,-5,1,-7,2,8,1,8,3,5,-2,-1,-1,8,-2,-4,-9,-7,9,-3,-5,10,-1,8,-10,2,-6,-4,6,2,1,4,5,10,-5,-4,-6,-8,5,-10,7,-10,7,-1,4,-10,1,4,-5,-9,9,-5,-2,-3,7,3,-7,8,-4,4,6,2,-8,-5,-3,5,2,7,1,10,-3,-3,-5,-4,-3,7,-4,9,7,5,10,10,-10,-3,-6,10,-5,10,5,9,4,-7,6,8,-2,5,-5,-4,-3,5,-10,-7,-9,5,2,-9,-1,-3,-4,2,6,-6,2,3,8,5,4,-5,10,6,-5,8,-3,4,-2,3,-4,6,-10,-3,10,8,-9,-8,4,-3,-10,6,-10,3,9,-1,-9,-2,9,-9,3,-2,2,-3,3,-7,5,-8,-4,-10,-1,7,-9,10,4,4,7,-10,-7,5,-9,4,-6,10,7,4,-2,-7,9,8,7,9,-9,2,1,5,-10,5,-3,-5,-4,8,9,6,3,1,5,5,-10,9,4,3,-3,7,1,6,-8,-3,10,-5,5,-4,-6,4,5,7,-5,3,-7,4,10,-7,-4,7,2,-8,8,7,2,7,-5,7,5,10,8,-1,-3,1,9,-1,10,9,-3,9,8,-1,2,-4,7,8,7,-8,-6,-6,-6,9,6,3,4,5,10,6,-5,9,-6,9,-4,4,3,8,-8,-5,-3,-4,-10,1,-4,-2,-9,10,7,9,-4,3,4,9,8,-6,4,-10,-8,6,9,-2,-8,4,-2,7,7,-7,1,2,-2,10,8,-8,-10,10,-4,-10,7,-10,-8,-6,6,7,-9,-9,-5,5,-9,-2,1,10,6,-8,3,-1,4,7,3,1,1,5,7,1,-6,6,-7,-1,-4,6,-6,10,8,-3,-1,5,4,-10,-1,-8,-6,-4,-3,-5,-5,-6,-2,4,2,-3,4,5,-9,9,-7,-8,-3,7,-9,-3,-5,-9,5,-9,1,-10,-9,2,-3,7,-10,-5,9,-9,6,5,10,10,-7,4,10,-4,-2,-6,-7,-5,8,-10,-3,5,10,3,-4,-7,4,9,-7,3,-9,-2,-2,5,-8,6,3,-3,1,-5,10,4,-3,-10,-7,-8,1,-7,9,-4,-7,2,-10,-3,2,-6,9,-8,4,-3,-10,1,2,-8,-10,-2,1,-4,-9,-1,-4,3,6,4,-9,3,9,-5,-2,6,3,8,1,4,9,-3,4,-6,7,-2,-8,-8,-9,-10,3,-2,5,8,-3,8,-10,7,-6,6,-3,-10,3,10,8,-4,7,7,7,-9,-8,2,-5,3,2,-5,-6,-9,-2,5,-10,-2,7,10,5,-6,-6,2,-9,-5,2,7,-6,1,7,9,-4,-6,-2,-5,-8,1,-1,-5,8,1,-1,-2,-7,4,-8,3,8,3,8,9,8,9,-3,-10,-4,2,1,2,-8,2,-3,-6,-6,1,6,9,-7,5,-5,-2,-6,-6,-10,-5,-5,4,3,9,8,3,-9,10,-3,8,10,6,-6,-2,-1,5,-7,-5,9,-10,-3,3,-9,10,7,-1,9,2,-10,-2,-5,-8,-7,3,-5,5,9,-2,10,-2,9,4,1,-3,-4,1,-3,-2,-1,10,-9,6,2,8,-9,1,-2,-5,-4,-3,3,-10,2,-9,-8,-9,-4,6,-4,-10,-3,-10,-7,-9,3,-9,-7,-3,10,3,2,4,-8,6,3,4,8,-4,-9,5,-4,-8,-3,1,6,-1,6,6,4,-6,7,-6,4,-9,-2,6,-9,8,-9,5,-2,4,10,2,2,-2,7,-6,-7,-7,9,6,10,-8,-4,4,9,-6,8,2,7,2,5,9,1,2,9,-8,3,-10,10,5,-2,8,-10,-3,-8,2,-1,3,7,3,-5,-7,-10,-7,2,10,4,5,10], dtype = "uint64")#candidate|4467|(1456,)|const|uint64
var_4468 = relay.var("var_4468", dtype = "int64", shape = (1, 450))#candidate|4468|(1, 450)|var|int64
var_4469 = relay.var("var_4469", dtype = "int32", shape = (40, 1))#candidate|4469|(40, 1)|var|int32
const_4470 = relay.const([[-1,-3],[5,-4],[6,2],[4,6],[8,5],[-6,2],[8,-4],[-10,-10],[-1,7],[-8,-10],[-4,-10],[-6,8],[-4,5],[7,-6],[1,-7],[-10,2],[-2,7],[10,4],[-2,10],[5,-1],[-1,10],[4,-5],[6,8],[1,-9],[-6,4],[-4,10],[7,3],[10,-10],[2,10],[-6,3],[-7,9],[-10,2],[5,-2],[8,-4],[-3,-6],[2,-3],[4,10],[-6,-3],[3,-10],[10,-9],[-10,1],[-4,-3],[-5,8],[-3,-4],[4,-8],[-9,1],[2,-7],[5,-5],[-8,3],[3,-10],[4,-8],[9,-5],[-7,3],[-3,10],[-8,-8],[-2,10],[-9,-3],[-8,3],[-1,1],[4,-4],[1,7],[-2,1],[-1,-4],[2,-4],[-6,3],[9,8],[-8,1],[8,-5],[3,-5],[8,-8],[7,-3],[-6,7],[-5,8],[10,-4],[-8,2],[-2,-3],[8,3],[-5,4],[-3,-10],[5,2],[10,4],[7,-8],[-4,-9],[7,3],[-3,1],[9,2],[4,2],[-9,-7],[-6,7],[-10,-10],[-5,-3],[2,-6],[-4,5],[-2,-5],[8,6],[-2,4],[-4,3],[6,-8],[-2,-3],[-7,-1],[8,4],[4,-6],[7,-8],[5,-10],[3,-4],[-7,-9],[-5,5],[-1,-5],[-6,-9],[-8,-1],[-9,5],[10,-6],[9,3],[-4,6],[5,3],[10,7],[7,-6],[-2,-2],[-7,6],[4,-2],[2,10],[-8,-7],[-8,8],[-10,-3],[10,-4],[6,3],[6,-1],[-9,-5],[8,9],[4,6],[-6,-9],[9,3],[-1,4],[-6,-1],[6,3],[6,-8],[-5,-8],[-1,-10],[-3,5],[-1,3],[-7,1],[2,6],[-3,5],[8,4],[8,-4],[-10,-8],[-5,5],[3,-10],[-3,-4],[3,6],[10,7],[-3,-3],[5,-4],[2,-6],[-6,3],[-8,-10],[3,9],[5,-4],[-5,2],[2,-10],[5,-9],[-5,3],[7,1],[-10,8],[4,-9],[-1,5],[-2,5],[-4,-10],[-1,5],[-8,-9],[6,-10],[-8,8],[-6,-4],[-10,4],[-6,7],[-5,1],[7,-2],[-4,-8],[1,-5],[-6,5],[-1,-8],[6,2],[-10,5],[5,-1],[-2,5],[-4,-6],[-3,-5],[7,-3],[-7,-9],[3,-8],[-8,6],[7,-6],[-10,4],[-6,-10],[5,-9],[5,1],[3,6],[1,6],[-7,5],[-2,2],[1,-8],[10,7],[-5,-8],[-8,-6],[-8,6],[-6,-1],[7,-8],[6,-2],[8,8],[-10,-3],[-3,7],[1,4],[-6,1],[5,7],[-9,-10],[5,-3],[-2,2],[6,-8],[8,10],[-9,-9],[5,10],[-3,1],[-4,-4],[-4,3],[-10,9],[10,-2],[-3,8],[-9,8],[8,-5],[7,-10],[8,9],[2,10],[-8,-7],[6,-9],[-4,-2],[5,-8],[-10,-3],[-10,9],[8,9],[-1,-4],[-10,9],[10,7],[-4,-8],[3,-3],[10,1],[8,7],[-7,6],[9,-8],[8,-7],[5,4],[-4,-10],[2,-1],[9,4],[1,1],[-2,-7],[6,-10],[-3,5],[-10,9],[5,3],[5,10]], dtype = "int32")#candidate|4470|(260, 2)|const|int32
call_4466 = relay.TupleGetItem(func_3507_call(relay.reshape(const_4467.astype('uint64'), [1456,]), relay.reshape(var_4468.astype('int64'), [450,]), relay.reshape(var_4469.astype('int32'), [40,]), relay.reshape(const_4470.astype('int32'), [520,]), ), 2)
call_4471 = relay.TupleGetItem(func_3512_call(relay.reshape(const_4467.astype('uint64'), [1456,]), relay.reshape(var_4468.astype('int64'), [450,]), relay.reshape(var_4469.astype('int32'), [40,]), relay.reshape(const_4470.astype('int32'), [520,]), ), 2)
bop_4474 = relay.less(bop_4460.astype('bool'), relay.reshape(uop_4457.astype('bool'), relay.shape_of(bop_4460))) # shape=(8, 6, 10)
bop_4477 = relay.less(bop_4463.astype('bool'), relay.reshape(uop_4459.astype('bool'), relay.shape_of(bop_4463))) # shape=(8, 6, 10)
bop_4479 = relay.maximum(uop_4457.astype('uint32'), relay.reshape(bop_4460.astype('uint32'), relay.shape_of(uop_4457))) # shape=(8, 6, 10)
bop_4482 = relay.maximum(uop_4459.astype('uint32'), relay.reshape(bop_4463.astype('uint32'), relay.shape_of(uop_4459))) # shape=(8, 6, 10)
func_3642_call = mod.get_global_var('func_3642')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4490 = relay.TupleGetItem(func_3642_call(), 1)
call_4491 = relay.TupleGetItem(func_3644_call(), 1)
output = relay.Tuple([call_4466,const_4467,var_4468,var_4469,const_4470,bop_4474,bop_4479,call_4490,])
output2 = relay.Tuple([call_4471,const_4467,var_4468,var_4469,const_4470,bop_4477,bop_4482,call_4491,])
func_4495 = relay.Function([var_4468,var_4469,], output)
mod['func_4495'] = func_4495
mod = relay.transform.InferType()(mod)
mutated_mod['func_4495'] = func_4495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4495_call = mutated_mod.get_global_var('func_4495')
var_4497 = relay.var("var_4497", dtype = "int64", shape = (1, 450))#candidate|4497|(1, 450)|var|int64
var_4498 = relay.var("var_4498", dtype = "int32", shape = (40, 1))#candidate|4498|(40, 1)|var|int32
call_4496 = func_4495_call(var_4497,var_4498,)
output = call_4496
func_4499 = relay.Function([var_4497,var_4498,], output)
mutated_mod['func_4499'] = func_4499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4195_call = mutated_mod.get_global_var('func_4195')
call_4648 = relay.TupleGetItem(func_4194_call(), 0)
call_4649 = relay.TupleGetItem(func_4195_call(), 0)
func_3918_call = mod.get_global_var('func_3918')
func_3921_call = mutated_mod.get_global_var('func_3921')
const_4655 = relay.const([1.779057,0.273774,-6.470123,-6.579186,2.169240,-1.132247,-0.303488,-0.483795,5.202899,-2.487039,-1.024054,2.498226,-4.622329,-0.351203,5.571813,-3.001068,-3.877495,9.456511,7.066551,-8.006842,3.531953,7.587087,4.114095,-2.155862,5.736525,6.995717,-8.528640,6.530366,7.151127,-9.471298,-4.384872,1.930606,-5.277220,2.516334,-3.579245,8.395993,-3.809953,2.451735,-5.233135,5.738306,-0.532274,1.127756,4.468314,0.511161,-2.614633,1.546278,-1.388051,-2.628073,-0.930180,-6.271221,3.402620,-3.722265,8.514673,7.642019,5.954664,0.902308,6.647022,-4.623576,9.007596,-0.744535,-3.130815,-0.806421,-2.822455,9.358999,1.097276,-6.213795,5.345721,-9.578688,-0.235165,-3.619700,-0.700859,-3.442012,-3.445695,-2.333287,-9.617828,-9.915416,9.912277,-0.001815,5.008726,-7.134378,1.803022,9.428711,4.062487,9.911203,7.813217,4.090673,1.442440,-3.458555,-8.460180,3.648749,8.124190,1.244458,4.502996,-6.451594,-6.697471,3.232037,8.238912,-3.627432,-0.083759,9.225409,-0.649582,-6.547653,-8.038455,1.252574,6.778586,4.841754,-4.711661,4.172473,-6.075417,-0.987008,-8.512555,5.667999,-3.435915,-9.305401,8.475020,6.726950,-6.683617,-2.119677,-7.298123,-5.534268,-4.256840,-4.824293,-9.846380,-1.739374,5.219045,4.762959,-9.594074,-6.293777,5.533299,-3.430827,-9.252506,-2.985903,4.515932,0.718318,-5.539012,4.132248,2.073133,-9.689725,-8.858882,6.889440,6.575817,2.057833,5.742949,3.228446,5.171395,1.810012,7.692674,-6.058710,-6.897235,-1.363759,3.239911,-0.740106,9.635423,7.033268,7.203914,7.924431,5.281720,6.717367,-5.161615,1.248169,-6.680235,9.818527,-7.739360,-4.800787,7.572858,-0.518955,-2.986533,-7.028643,6.764940,3.636082,-8.669836,8.269961,-9.582378,-4.526593,6.951669,-7.531179,-4.478204,5.304289,5.005658,-7.100655,-8.157273,-1.322255,1.790740,-5.857087,-8.924914,7.382867,0.679443,-9.792263,9.600892,-5.956039,7.734945,-7.174402,0.883269,-6.238679,9.630620,0.696140,1.589288,8.552826,-8.258614,4.275520,7.455398,6.382405,-2.740230,-7.180938,-4.535679,-7.298313,4.353043,-9.474782,3.330136,-7.249593,7.834013,-8.045683,1.378211,4.992214,-4.787654,-5.645242,3.555353,-3.866060,7.377231,-1.068044,9.437494,0.442558,0.502219,1.219405,8.471766,-1.002170,-0.954428,1.285735,-7.791617,0.191679,-2.739481,-4.401141,-5.687793,9.845612,-3.466245,8.495703,-1.191155,-8.300288,-1.137527,-0.242933,6.953935,-0.949881,-7.128620,6.266552,-8.721321,9.612437,-7.598208,2.916895,-5.641815,8.221327,-7.134012,-9.093048,2.872738,-7.214829,0.206117,5.546065,6.211095,-7.763914,-7.433746,-2.679836,-1.493026,3.730332,-5.838864,4.830836,4.999291,6.690508,-4.879607,-4.152213,-6.250650,6.780719,-8.179918,1.393341,4.041842,2.659823,6.248857,-9.979854,5.194210,4.068627,-8.354211,-9.811643,2.573253,3.377474,0.463226,1.471043,4.188214,1.644675,-7.050761,9.794380,-3.654520,0.068592,7.021368,-3.063898,5.596385,-3.794904,-8.516245,5.732941,-3.701534,6.824359,-1.730034,3.328049,-7.145259,0.713032,2.737775,-2.613126,5.764957,-9.110705,3.886933,3.565728,-9.808158,0.760213,-0.174581,-5.933351,8.282067,1.904332,-4.455913,9.176653,9.882302,1.706386,-7.993021,4.864170,9.822479,-2.307371,-6.103047,0.411496,0.074275,3.712317,6.423551,-3.171673,-0.727094,8.111100,-3.199676,2.494268,2.970310,2.031877,-3.672374,-0.899141,-8.682219,-7.011461,-3.143479,4.431684,-6.386138,-8.592085,-6.297690,2.940779,-6.578757,7.981138,7.405343,-0.758891,-4.710650,-3.648553,-5.941012,-0.308974,0.822000,0.815199,5.825638,7.664942,-2.911020,3.433844,-8.122246,0.806693,7.669899,-0.813150,3.748554,-6.175495,-9.312651,-7.216340,7.211840,0.251319,5.166271,-3.234146,8.584106,3.753326,6.360482,-8.922432,1.173358,-0.827760,-3.763195,5.285759,-4.798208,9.076558,4.786922,4.247758,3.537350,2.269981,-0.193682,0.420943,-3.767458,6.703436,2.999283,1.412931,2.603482,-4.917083,-1.174492,6.969237,2.133965,2.810212,-3.031457,8.621304,4.952535,-4.673678,-8.441032,7.488197,-1.447143,3.903456,-1.187815,-7.672507,-8.108808,-4.880814,1.752822,3.273972,-2.125108,0.818468,-9.461628,-7.731339,7.887491,2.729277,-4.628942,-5.205695,5.550994,3.422996,0.258134,4.959963,-1.455177,-1.235174,3.926424,-2.424310,2.968303,-4.075979,-8.685842,9.171844,1.900286,6.692473,-9.066972,0.275659,6.830457,7.222391,-3.460163,8.346001,-3.368183,-3.726451,8.998440,-9.620495,-5.115360,-4.962754,4.259751,3.734374,-2.697530,8.719485,-9.274964,-7.822527,8.447487,-7.929932,-3.979682,-8.973774,-1.437353,-7.943424,0.306184,-0.372135,9.999245,-2.571824,-8.075962,-0.408890,-8.199997,9.054344,-0.295414,4.778688,-0.172096,2.509554,5.699144,3.747132,0.829953,2.428434,-7.565921,-7.593455,3.027817,6.494874,-2.241184,-9.893407,4.337723,-7.815898], dtype = "float64")#candidate|4655|(480,)|const|float64
var_4656 = relay.var("var_4656", dtype = "bool", shape = (180,))#candidate|4656|(180,)|var|bool
call_4654 = relay.TupleGetItem(func_3918_call(relay.reshape(const_4655.astype('float64'), [8, 6, 10]), relay.reshape(var_4656.astype('bool'), [180,]), ), 2)
call_4657 = relay.TupleGetItem(func_3921_call(relay.reshape(const_4655.astype('float64'), [8, 6, 10]), relay.reshape(var_4656.astype('bool'), [180,]), ), 2)
output = relay.Tuple([call_4648,call_4654,const_4655,var_4656,])
output2 = relay.Tuple([call_4649,call_4657,const_4655,var_4656,])
func_4658 = relay.Function([var_4656,], output)
mod['func_4658'] = func_4658
mod = relay.transform.InferType()(mod)
mutated_mod['func_4658'] = func_4658
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4659 = relay.var("var_4659", dtype = "bool", shape = (180,))#candidate|4659|(180,)|var|bool
func_4658_call = mutated_mod.get_global_var('func_4658')
call_4660 = func_4658_call(var_4659)
output = call_4660
func_4661 = relay.Function([var_4659], output)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_4699 = relay.TupleGetItem(func_3274_call(), 0)
call_4700 = relay.TupleGetItem(func_3275_call(), 0)
uop_4724 = relay.log10(call_4699.astype('float32')) # shape=(9, 5, 7)
uop_4726 = relay.log10(call_4700.astype('float32')) # shape=(9, 5, 7)
output = relay.Tuple([uop_4724,])
output2 = relay.Tuple([uop_4726,])
func_4736 = relay.Function([], output)
mod['func_4736'] = func_4736
mod = relay.transform.InferType()(mod)
mutated_mod['func_4736'] = func_4736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mutated_mod.get_global_var('func_4736')
call_4737 = func_4736_call()
output = call_4737
func_4738 = relay.Function([], output)
mutated_mod['func_4738'] = func_4738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mod.get_global_var('func_3642')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4752 = relay.TupleGetItem(func_3642_call(), 0)
call_4753 = relay.TupleGetItem(func_3644_call(), 0)
output = call_4752
output2 = call_4753
func_4754 = relay.Function([], output)
mod['func_4754'] = func_4754
mod = relay.transform.InferType()(mod)
mutated_mod['func_4754'] = func_4754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4754_call = mutated_mod.get_global_var('func_4754')
call_4755 = func_4754_call()
output = call_4755
func_4756 = relay.Function([], output)
mutated_mod['func_4756'] = func_4756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4754_call = mod.get_global_var('func_4754')
func_4756_call = mutated_mod.get_global_var('func_4756')
call_4784 = func_4754_call()
call_4785 = func_4754_call()
func_4736_call = mod.get_global_var('func_4736')
func_4738_call = mutated_mod.get_global_var('func_4738')
call_4786 = relay.TupleGetItem(func_4736_call(), 0)
call_4787 = relay.TupleGetItem(func_4738_call(), 0)
func_3679_call = mod.get_global_var('func_3679')
func_3680_call = mutated_mod.get_global_var('func_3680')
call_4788 = relay.TupleGetItem(func_3679_call(), 0)
call_4789 = relay.TupleGetItem(func_3680_call(), 0)
output = relay.Tuple([call_4784,call_4786,call_4788,])
output2 = relay.Tuple([call_4785,call_4787,call_4789,])
func_4791 = relay.Function([], output)
mod['func_4791'] = func_4791
mod = relay.transform.InferType()(mod)
mutated_mod['func_4791'] = func_4791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mutated_mod.get_global_var('func_4791')
call_4792 = func_4791_call()
output = call_4792
func_4793 = relay.Function([], output)
mutated_mod['func_4793'] = func_4793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_4794 = relay.TupleGetItem(func_3274_call(), 0)
call_4795 = relay.TupleGetItem(func_3275_call(), 0)
func_1894_call = mod.get_global_var('func_1894')
func_1900_call = mutated_mod.get_global_var('func_1900')
const_4800 = relay.const([[5,3,-9,10,-8,-7],[10,-10,-9,2,7,9],[-5,8,8,7,-9,7],[-1,-7,3,-5,3,4],[4,-6,-6,-8,-1,-7],[2,2,-6,-7,-5,-7],[-2,5,-10,7,-3,-6],[7,3,2,-7,-6,6],[-10,-1,1,7,-10,7],[9,5,-7,2,7,-2],[-7,-5,-1,-7,4,-8],[-3,8,-5,-5,-9,8],[-1,9,-8,-7,3,-10],[-1,-5,-2,-1,10,-10],[4,-1,6,-8,10,5],[10,2,3,6,-6,10]], dtype = "int8")#candidate|4800|(16, 6)|const|int8
var_4801 = relay.var("var_4801", dtype = "bool", shape = (180,))#candidate|4801|(180,)|var|bool
const_4802 = relay.const([4.038595,-8.729460,-7.686031,-4.520778,-3.419545,5.006074,-0.265606,2.897688,5.155500,1.413906,4.818911,-6.572597,8.680521,6.109507,-6.137238,0.553868,0.452938,2.885549,3.149697,2.119224,-3.642832,-2.886953,-5.367403,9.880078,6.899514,3.130146,-9.586800,-9.633611,5.864509,-3.064392,-7.796867,6.588595,0.359377,-2.609795,0.850122,9.311712,-5.412027,-0.007255,3.700774,-1.843929,-0.075782,1.122685,5.433298,4.791883,8.009765,-6.119133,9.450148,8.135587,-5.437446,7.277105,-5.814534,9.751588,-8.751798,5.167545,-5.324525,-9.590401,8.552844,9.814897,-9.661556,-2.245789,-3.561718,0.272065,-6.867804,-4.982584,-9.393111,-6.219640,-7.520037,4.429325,5.686487,8.874868,-2.344073,4.788108,3.297199,-8.194619,6.222080,-7.057943,0.371315,1.160227,-6.160235,8.356018,2.574574,2.101902,3.913654,-5.420235,3.811195,-9.161806,4.407402,-2.334992,-1.790203,-5.271869,9.114566,6.133756,4.768988,-5.222727,5.341852,-5.027042,-3.903412,-8.304836,0.355565,-3.592162,-5.581753,-2.209716,-4.394479,0.971341,-8.090683,-5.273390,-7.271450,-2.190622,-7.922379,0.795053,-8.164885,-0.073536,-6.080381,0.143906,5.073952,-2.298534,-9.348559,-9.562054,7.477361,-8.835871,0.207409,9.476443,-9.448372,7.449100,3.439518,-0.123305,6.754844,-9.276169,-8.354434,7.956251,8.329970,4.444635,-0.037605,5.470241,4.015860,6.625541,-7.635622,-7.058259,4.025353,-0.499412,4.295455,-8.673563,4.213249,-3.404568,-4.988615,-7.665196,8.512305,-8.849167,4.092116,-5.421726,2.787373,2.437836,-9.051600,-2.729989,-9.379586,-7.390545,-4.730421,-3.132141,7.287241,1.363897,-5.977445,-8.345915,3.558369,9.525200,-6.313634,-8.843994,-8.377806,6.841698,6.961523,-7.957614,-4.807819,1.205242,7.721613,4.174634,-6.222622,9.394975,-0.672617,4.223100,-6.152334,-0.649857,-6.868587,-2.286884,-2.214544,9.349288,8.640011,2.577425,0.479840,-7.219266,-3.518699,3.036593,-0.460694,2.609566,-1.123846,4.161600,-9.089282,9.466020,-4.570004,1.087323,-9.159974,-0.469691,-4.696991,5.949140,4.989980,-4.511874,5.891451,-9.611357,-6.625937,-5.603183,-0.794172,2.939622,9.134070,7.873040,-4.767033,8.045682,-9.083804,7.733503,2.827188,-4.213382,-2.833581,7.541529,-9.992669,-2.251941,0.498957,-2.870538,-1.803212,-1.869101,-2.186023,2.307013,-3.703539,9.254712,-7.693904,7.704675,-0.082841,-9.897706,8.285727,-0.975474,-5.477561,-1.034212,-3.159991,6.344317,6.331170,-8.509460,-2.224845,-9.879774,-8.619675,7.131088,-4.909256,6.146750,-5.281111,-4.671595,8.250044,3.962721,6.470194,5.472282,-5.224029,-9.956488,6.083002,-5.289467,-4.657429,-7.771591,-3.388149,5.922527,1.092960,8.566983,7.085894,0.308409,1.184731,-5.695704,-7.149153,-7.107434,-3.497186,-3.768228,5.816938,0.499934,-2.445688,1.071100,9.130399,2.044876,3.873256,-4.623210,-7.802902,1.230656,0.055518,-3.379575,3.110732,-4.660594,5.425406,7.088763,1.283877,-9.812188,6.853651,2.307997,7.714570,5.102535,0.338898,5.069048,7.255439,8.094647,-6.317883,-4.146251,-5.835477,0.796910,-7.761267,5.364957,-9.175030,9.224944,9.722679,-0.178034,4.767312,7.372172,-1.788272,9.071694,2.468063,-6.157647,-3.602849,1.227872,2.058965,3.513605,-7.818015,-1.376040,-5.200086,-2.399790,-9.883791,-3.132309,-8.917308,-3.262210,-6.722080,-8.817640,8.345164,5.272318,6.628853,-2.485191,-7.849202,-1.530276,-0.538663,2.220711,-4.147815,-1.258212,-3.651186,7.550110,-2.034942,4.323722,4.723143,-6.301957,-9.056163,-0.094602,4.106534,8.554879,-7.178015,-5.555669,-2.812138,-0.969836,5.425439,4.889695,5.209822,-5.944302,-8.414555,6.796305,2.117204,-8.645003,5.627249,1.442584,-1.513104,-8.100810,0.103608,7.281784,-5.335812,-2.745630,6.523943,-0.322776,-3.394491,-9.784271,-1.439754,-2.926603,-1.596861,-3.372376,-8.686924,-2.908379,-1.864452,8.151209,2.356300,5.902737,-2.488941,9.485578,7.658097,6.574247,-0.435585,-3.340389,2.807034,-4.286052,-1.622085,4.241738,-3.924219,4.114548,1.808021,-7.899522,4.792406,-4.252222,-6.943306,6.359667,4.033681,8.175170,4.584205,3.024106,1.309074,-3.479482,-7.838130,-7.300737,1.952693,1.437791,-3.026989,8.734200,8.097813,-6.401442,1.291278,4.831323,-0.937087,-4.117969,-2.452005,-0.439954,0.493541,8.050701,-5.575507,-2.434535,4.399230,-0.838698,-5.711003,-0.536148,-6.931707,0.005119,-4.528511,-5.722682,3.028952,-5.954071,-7.734978,2.080319,1.750529,7.387380,-0.646767,9.464436,6.603851,-7.515900,2.258833,0.947855,4.000819,0.323535,2.080069,-6.583013,-6.897315,5.868369,9.572180,-0.316072,1.121136,-6.092024,-5.016858,-6.134358,-5.552625,1.270884,0.628638,6.930786,0.406545,-1.334581,-9.913461,6.534114,-2.929854,-3.464136,-8.769402,-2.424466,-4.826752,2.432799,0.397202,2.712754,-8.106447,2.093895,5.677350,-4.841975,-8.920207,-5.261587,7.002425,4.442532,-8.027166,1.194100,0.093749,-6.095929,7.435617,-3.843160,0.206982,-3.640547,-3.197322,8.523973,-7.692102,-7.904772,6.716721,3.729268,-7.737117,-8.441391,-8.202871,3.538641,2.603202,-4.629018,-6.962844,7.248792,-8.309333,0.865290,-1.100667,-8.746189,0.781706,4.520801,5.688518,5.317134,9.032064,-1.150772,-2.287371,3.136227,-7.751208,-7.471978,-5.120136,-1.385645,6.223068,5.102525,7.748506,-8.812373,-3.377062,6.256924,-0.768517,-2.745535,-2.923535,-1.632147,-6.738115,-9.844973,4.058675,3.337449,0.735207,-2.470736,-9.392725,-6.637604,0.879255,-7.406750,-0.987950,-3.036218,-2.565351,-9.636920,9.747467,5.177234,8.226370,-9.991501,-3.294397,-6.021045,-9.451506,-2.734694,0.095252,-3.069886,1.816145,-4.498796,-9.465019,6.345451,0.952437,4.760865,-6.712635,3.521550,-8.400580,-4.333094,2.178946,-1.828969,8.503430,-6.468641,0.881744,6.029488,0.964913,-9.387057,-9.365911,7.456082,-8.454745,4.638051,3.365376,-0.280701,-5.164921,4.527498,4.209122,3.957826,-7.304929,7.853857,-6.723020,9.426173,8.339434,4.833569,5.172479,4.516053,2.540960,-1.492612,9.743786,1.838915,4.551283,-2.742074,-5.801048,9.501271,8.383383,7.880132,2.308410,-0.437206,-4.903588,2.613569,-1.025101,6.394716,9.773958,-4.442745,-1.528103,-3.919920,-2.571912,4.564780,2.289669,-6.283734,1.195621,-9.066587,-2.930254,0.366212,7.846458,-6.314683,-2.731663,0.427864,7.120767,-7.524729,9.252176,6.137624,1.270474,1.456021,2.384219,-3.857678,9.990614,5.631300,5.827505,-5.607373,9.607103,-6.189975,9.015936,0.099897,0.367070,-4.436427,2.582611,8.227350,-0.693413,9.090183,-8.372147,3.052603,-0.764210,6.329550,6.166252,-9.247383,-5.173434,-4.605160,0.290143,-4.954768,-4.348464,1.383738,-7.522808,-8.821122,9.583661,-6.755990,4.876203,8.615798,-3.774183,5.647130,6.926587,5.599498,-8.794255,3.879369,5.462983,7.484412,-4.126415,4.785364,8.699149,-4.989136,5.101463,-8.413939,-8.791283,9.227059,-5.726497,-6.802391,-4.233031,1.019060,-8.135449,-5.755746,-3.929624,2.938210,2.757743,9.067784,-1.012957,0.311460,-9.360824,4.642551,-5.316192,0.415838,4.679191,-1.552804,3.749233,6.394546,-6.637223,-3.718419,6.960008,1.060399,-2.404090,7.104812,-1.194913,0.161672,-0.160419,4.222612,8.317552,2.394274,4.225937,-9.237957,0.461485,-1.539983,-7.821578,-9.686023,-0.660588,-4.436059,-6.022162,8.766078,-5.320523,2.277950,9.895529,6.661998,3.222788,-0.240297,-5.648297,-3.510640,-7.372938,8.891111,2.802476,-8.568708,-4.824348,-6.716419,-2.053867,2.229607,-9.548497,7.157745,-2.978807,-2.572821,4.533772,-7.728806,-5.718872,2.886168,2.756704,6.325259,-2.410839,-6.604716,-8.305016,3.021924,-5.797220,4.977931,8.170813,0.564192,-6.466597,2.230860,-3.945229,1.764474,-7.222170,5.706086,-4.113555,-3.643034,-7.299787,4.921140,-3.092268,7.846117,4.103305,1.574921,8.348516,-4.232510,8.862529,1.575120,8.302982,-3.335026,7.000406,3.837217,-7.176648,-5.959518,-9.017146,9.288322,-6.509084,-0.481595,3.951370,-8.712638,-9.749872,-4.626124,-5.351473,6.855027,6.606840,-5.296738,0.314774,-4.607002,0.149171,-6.044820,-1.720089,-8.834278,-5.407855,-3.121000,1.649428,-8.115047,-6.168712,7.322713,-7.532597,-1.602369,-9.724896,-4.190500,1.285284,3.680515,2.895848,-8.229562,6.578880,-4.891808], dtype = "float32")#candidate|4802|(810,)|const|float32
const_4803 = relay.const([0.743520,-2.073107,1.745450,-6.706310,-1.369517,5.418916,6.594801,-5.991864,-8.450267,-3.734858,9.652327,2.692527,8.587312,-6.245654,-9.901962,3.883205,1.373508,0.389138,0.986826,-3.166006,1.245376,-9.170247,7.993167,8.781168,-5.121858,7.419862,-0.218694,-0.709590,-8.609486,7.041598,1.484851,-0.720437,-8.369378,6.842721,-7.403951,-2.120470,8.520998,-2.405868,7.246829,-7.894965,4.450312,-7.976649,-7.965199,-5.855329,3.855957,3.254839,-5.408270,-4.138871,-4.301423,3.521203,7.910846,-1.813862,-0.017875,-2.268445,-0.852461,-4.655345,-6.604467,0.724595,7.761638,-7.278678,4.258811,8.748099,3.416303,9.299237,9.204707,-6.207220,-8.500540,9.916279,-4.990761,-1.453742,-1.148512,-6.238187,5.975740,0.599219,6.499881,-1.874178,-9.777217,8.713326,7.025797,0.957881,7.608278,5.703970,-8.303283,-9.791340,-6.074757,2.274984,7.418117,-8.580731,1.358210,-4.614295,8.207506,-4.591408,-0.327590,7.248449,-3.945460,7.832286,5.982632,8.079000,7.279361,-0.566875,-1.881234,2.278562,5.830219,6.961993,4.209310,-4.568327,-5.728971,-8.503845,-6.854487,-9.798424,-8.032131,-0.106733,-5.823172,4.087301,4.581584,-8.935867,3.043814,-2.757875,7.021578,-2.387086,3.115744,1.429337,5.379431,-7.173857,9.014895,-6.251630,-1.506808,3.639093,-0.978317,0.319336,-7.708707,8.730552,3.896784,7.729383,2.683180,5.646201,-7.671968,-5.930475,7.436231,6.752903,5.808954,-9.243659,-1.114159,0.887057,8.941688,-3.620397,-2.730615,6.500477,1.622325,-7.641058,-9.539743,9.393720,-1.442860,-0.954977,3.422294,-6.030051,3.854901,-9.273306,2.672555,-1.450396,-7.078871,-8.621404,5.762877,-7.440027,-9.561007,8.230800,3.377507,7.729128,4.564667,7.711451,2.728910,5.810146,-1.644455,-4.420005,0.476398,-6.946250,-7.780078,-8.327389,5.405965,-2.482715,2.409171,-6.425004,6.160049,-0.911233,-8.627446,3.201544,-3.689756,-9.406819,-4.068704,-3.214491,-6.042545,-9.567968,2.432772,-7.476389,5.282042,9.556772,-8.999090,0.796909,8.828364,-9.350161,7.645216,-8.644926,6.532042,8.070983,2.381433,1.713144,-2.974722,-9.472422,3.822073,-3.652467,-6.721563,8.457191,-4.815512,-7.447586,4.682529,7.077559,-2.945477,-5.899833,-4.406299,8.166893,2.989936,8.463676,-4.618598,8.314805,-7.580249,1.501642,5.336012,-9.888471,6.092353,-8.643992,9.452202,-2.089748,5.305110,9.587156,-5.230181,1.942093,-8.971714,9.491587,3.789261,-5.410931,0.525804,-3.329837,-8.719482,-9.244764,5.957599,-7.216802,-8.845798,-4.368662,7.504862,3.592116,-4.397195,2.321598,-2.311426,-7.447403,-1.335958,2.871814,-9.404257,-6.879505,-9.947627,-2.399651,1.393585,4.429509,5.931334,2.742125,8.510875,-5.326822,-2.195241,-6.674702,9.307225,-9.772577,8.096124,9.215488,8.100152,9.912499,-9.959358,9.337838,-6.889053,1.842918,-1.788000,6.476481,8.150593,8.504875,8.770853,-1.415850,-7.950140,-6.187614,7.929525,1.499273,-8.614116,-7.523759,6.734592,-9.264652,-1.462246,3.833228,7.188711,5.970921,1.008492,-4.920374,-3.419256,9.586516,9.284077,2.773579,7.357139,4.615317,0.089056,-0.620402,2.330535,-4.913423,-1.623630,-0.958247,-6.257081,-6.365015,-1.916394,2.178476,-7.714187,-0.589788,-6.101597,-3.163065,-8.598505,5.634276,2.849380,-8.583676,8.486841,1.599512,6.556083,8.639979,8.691441,0.214267,-5.267964,-6.868135,3.147126,-5.346884,-4.618710,1.795787,-3.540799,-1.248981,-4.365248,-6.351349,-7.072230,8.712714,9.394041,4.961287,-7.529641,-9.949394,4.230182,1.840639,6.276342,9.387234,-7.943600,5.324254,5.555259,2.683439,-3.048265,5.043756,9.649309,-5.467173,8.869322,8.700494,-4.408153,-4.460932,-2.620953,-2.511216,0.749799,-5.234296,-5.496707,-8.957110,0.679479,4.580326,1.571012,-6.695526,6.068903,3.376962,8.144420,6.678273,4.961275,5.799380,2.563723,4.793755,5.273789,4.795673,2.683128,-2.206467,6.415978,7.645733,-3.640392,7.228652,-8.031464,6.799778,5.667301,-7.024735,-5.485227,-1.823506,1.915850,8.178783,1.718018,7.914564,-8.044607,-8.211452,3.239916,9.711845,7.223794,-0.969978,5.964845,7.904305,-6.071232,2.072905,-2.317921,-9.836175,-6.949072,-3.297222,-0.028977,-4.220582,9.458623,-4.484201,-5.512990,5.248439,-0.515452,-8.273570,5.820611,-8.725708,4.607804,-3.131556,-0.388659,7.624878,-0.264702,-6.765173,1.569294,-1.185696,8.938010,-4.729518,-5.849413,-6.508117,0.147415,-6.650661,-1.770786,-8.280308,5.706805,5.838823,7.309788,-2.625042,5.106874,7.654361,0.328939,1.936621,-7.266567,9.695972,9.140431,-3.882961,-0.204306,0.534945,6.287055,-3.101337,9.137204,-2.792458,-4.210724,-8.411443,-8.068104,8.676517,9.583496,-5.329158,-6.173651,-5.284824,2.041375,-5.874459,-0.425833,2.160070,5.830977,-8.519203,8.245016,3.611015,7.786387,8.618214,9.218722,3.079425,-8.341564,4.730478,0.436188,-5.381076,-8.854507,-1.325025,9.564955,-2.891337,3.770753,5.075540,-1.861612,3.974373,-2.735385,5.959576,1.891810,4.170462,-2.406388,-4.550519,-6.166645,5.676283,9.950990,7.310800,4.112464,4.982236,-9.473535,0.655830,4.627679,-4.685544,-1.209909,-6.435276,3.956962,5.699524,-5.202153,7.238858,-1.611582,5.324884,0.822801,-5.496689,-4.731848,8.169069,-7.500681,0.320371,2.453056,-3.009153,2.821756,5.886240,-6.397340,1.070794,-9.564296,7.559617,5.444258,-5.121398,-3.032439,2.881714,-6.477366,6.214684,2.695028,6.924067,8.148377,-6.849950,-4.065375,9.444260,-1.391422,8.250134,6.952422,-1.514262,1.664998,5.057883,2.057449,-6.389432,-2.058373,0.432771,5.612843,-9.468509,-5.315836,8.449080,5.075392,6.256684,9.436295,-9.495899,9.405461,6.833013,-6.635735,-1.521761,6.782835,9.396680,1.671259,-4.683362,0.543162,9.784246,3.781625,-5.293385,5.498330,0.774774,-9.461874,1.294282,-0.798124,-1.186773,-2.860894,-8.429368,-4.635750,1.998862,-3.705346,-6.631034,-7.472481,8.722776,-5.196861,-8.743531,3.885969,7.806682,-3.917043,-9.385507,4.665568,2.648013,6.695797,-5.158230,0.286086,1.614798,5.574575,-3.537699,9.559884,7.427340,1.258844,8.336361,3.322104,6.172473], dtype = "float32")#candidate|4803|(600,)|const|float32
call_4799 = relay.TupleGetItem(func_1894_call(relay.reshape(const_4800.astype('int8'), [4, 3, 8]), relay.reshape(var_4801.astype('bool'), [1, 180]), relay.reshape(const_4802.astype('float32'), [810,]), relay.reshape(const_4803.astype('float32'), [600,]), ), 0)
call_4804 = relay.TupleGetItem(func_1900_call(relay.reshape(const_4800.astype('int8'), [4, 3, 8]), relay.reshape(var_4801.astype('bool'), [1, 180]), relay.reshape(const_4802.astype('float32'), [810,]), relay.reshape(const_4803.astype('float32'), [600,]), ), 0)
func_3679_call = mod.get_global_var('func_3679')
func_3680_call = mutated_mod.get_global_var('func_3680')
call_4805 = relay.TupleGetItem(func_3679_call(), 1)
call_4806 = relay.TupleGetItem(func_3680_call(), 1)
output = relay.Tuple([call_4794,call_4799,const_4800,var_4801,const_4802,const_4803,call_4805,])
output2 = relay.Tuple([call_4795,call_4804,const_4800,var_4801,const_4802,const_4803,call_4806,])
func_4812 = relay.Function([var_4801,], output)
mod['func_4812'] = func_4812
mod = relay.transform.InferType()(mod)
mutated_mod['func_4812'] = func_4812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4813 = relay.var("var_4813", dtype = "bool", shape = (180,))#candidate|4813|(180,)|var|bool
func_4812_call = mutated_mod.get_global_var('func_4812')
call_4814 = func_4812_call(var_4813)
output = call_4814
func_4815 = relay.Function([var_4813], output)
mutated_mod['func_4815'] = func_4815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4373_call = mod.get_global_var('func_4373')
func_4374_call = mutated_mod.get_global_var('func_4374')
call_4836 = relay.TupleGetItem(func_4373_call(), 0)
call_4837 = relay.TupleGetItem(func_4374_call(), 0)
func_2041_call = mod.get_global_var('func_2041')
func_2044_call = mutated_mod.get_global_var('func_2044')
var_4867 = relay.var("var_4867", dtype = "uint64", shape = (1456, 1))#candidate|4867|(1456, 1)|var|uint64
call_4866 = relay.TupleGetItem(func_2041_call(relay.reshape(var_4867.astype('uint64'), [16, 13, 7]), relay.reshape(var_4867.astype('uint64'), [16, 13, 7]), ), 0)
call_4868 = relay.TupleGetItem(func_2044_call(relay.reshape(var_4867.astype('uint64'), [16, 13, 7]), relay.reshape(var_4867.astype('uint64'), [16, 13, 7]), ), 0)
uop_4876 = relay.atan(var_4867.astype('float32')) # shape=(1456, 1)
func_4322_call = mod.get_global_var('func_4322')
func_4324_call = mutated_mod.get_global_var('func_4324')
call_4878 = relay.TupleGetItem(func_4322_call(), 0)
call_4879 = relay.TupleGetItem(func_4324_call(), 0)
bop_4884 = relay.bitwise_or(uop_4876.astype('int8'), relay.reshape(var_4867.astype('int8'), relay.shape_of(uop_4876))) # shape=(1456, 1)
output = relay.Tuple([call_4836,call_4866,call_4878,bop_4884,])
output2 = relay.Tuple([call_4837,call_4868,call_4879,bop_4884,])
func_4903 = relay.Function([var_4867,], output)
mod['func_4903'] = func_4903
mod = relay.transform.InferType()(mod)
mutated_mod['func_4903'] = func_4903
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4904 = relay.var("var_4904", dtype = "uint64", shape = (1456, 1))#candidate|4904|(1456, 1)|var|uint64
func_4903_call = mutated_mod.get_global_var('func_4903')
call_4905 = func_4903_call(var_4904)
output = call_4905
func_4906 = relay.Function([var_4904], output)
mutated_mod['func_4906'] = func_4906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4754_call = mod.get_global_var('func_4754')
func_4756_call = mutated_mod.get_global_var('func_4756')
call_4946 = func_4754_call()
call_4947 = func_4754_call()
func_3679_call = mod.get_global_var('func_3679')
func_3680_call = mutated_mod.get_global_var('func_3680')
call_4968 = relay.TupleGetItem(func_3679_call(), 0)
call_4969 = relay.TupleGetItem(func_3680_call(), 0)
output = relay.Tuple([call_4946,call_4968,])
output2 = relay.Tuple([call_4947,call_4969,])
func_4970 = relay.Function([], output)
mod['func_4970'] = func_4970
mod = relay.transform.InferType()(mod)
output = func_4970()
func_4971 = relay.Function([], output)
mutated_mod['func_4971'] = func_4971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3713_call = mod.get_global_var('func_3713')
func_3714_call = mutated_mod.get_global_var('func_3714')
call_4991 = relay.TupleGetItem(func_3713_call(), 0)
call_4992 = relay.TupleGetItem(func_3714_call(), 0)
func_71_call = mod.get_global_var('func_71')
func_75_call = mutated_mod.get_global_var('func_75')
const_4998 = relay.const([0.977697,-9.435039,7.056190,0.366444,-0.382276,5.142944,-8.091633,0.371349,-7.688984,2.793430,-0.822875,4.000744,-0.849778,9.481690,6.416980,-2.529528,4.263615,8.628415,-9.664015,8.301011,-1.265900,-0.741713,5.744740,-2.700908,9.939459,-1.391008,7.951869,8.146275,0.208535,-9.687178,4.934670,3.451167,9.074807,4.740290,0.959980,0.154241,9.340070,-3.095129,5.084967,-4.286110,-3.443046,-6.304421,9.904946,-1.458293,-4.689668,2.188482,4.811071,-1.501278,1.543613,-8.841275,3.998617,-7.366489,-7.202261,9.532943,-1.089104,-5.654346,9.578338,-5.854528,-8.379024,0.327576,0.509778,-7.015741,3.110392,-5.875501,7.895587,4.122541,-0.108344,0.653044,-4.883276,-3.002514,6.494994,-5.436433,9.949807,5.803324,9.040474,-3.060705,0.107428,8.581193,-7.848404,5.603601,-5.650086,-8.493966,-1.366150,3.808073,-7.954993,7.721047,9.528316,-9.826026,2.749328,-0.701466,-2.477268,1.306455,-4.396089,-3.417429,-2.157455,-1.142364,-1.195228,5.267178,-6.407312,-4.777670,-5.667261,-0.241056,8.651667,-9.192299,-7.044318,4.704849,-9.858964,-8.106786,3.607416,5.926963,-0.663931,-0.660352,-5.088205,-6.160980,3.913026,9.562213,-2.149566,6.102300,3.381486,-2.282973,-1.565942,-0.337673,8.201405,7.062254,-1.560277,-3.876014,-1.252393,3.094176,4.032014,-5.303877,-7.544896,-6.883145,2.781218,-5.819028,-8.806765,0.475112,-5.899423,1.746994,-8.236840,-4.690512,5.010883,-1.595761,-0.652626,-2.704000,8.232448,-2.984601,-0.287638,-7.122274,-7.701803,-3.446423,-3.313946,5.487949,-9.339457,-6.857609,-6.364481,0.215564,7.109207,8.253317,4.850416,7.865037,-5.235693,3.787755,7.325396,5.929023,-9.578933,-4.123060,3.362774,-4.295498,-5.079689,-0.516139,1.682016,-9.886058,5.279590,-2.717128,5.771432,3.596146,7.591655,-9.647079,2.241617,-2.658283,-0.311450,-3.526026,5.988624,3.453421,2.166823,-8.847827,9.864168,8.497980,-3.627008,1.976291,-8.309211,-2.365990,8.261157,-8.161667,-6.011200,8.237480,2.941299,-2.525476,-3.269753,-6.544941,6.566740,-5.764401,0.701548,-1.748016,-1.330098,8.230543,-0.259727,-5.308320,-1.870293,-7.805360,-5.415721,7.505521,1.061720,-7.317475,2.111550,7.881750,9.953393,3.126781,-0.416857,-9.054213,-4.053448,9.868113,9.142932,-2.786480,-1.131573,-3.635423,-9.330472,-0.362552,0.595861,5.536404,2.271074,-9.328382,3.007787,0.263832,0.623951,-1.311834,2.873328,-2.155030,7.420152,-9.694071,-3.826920,-8.757609,7.066434,-6.130704,6.843962,7.252254,0.819113,3.392198,-8.605970,-8.001389,8.910259,8.651990,-2.084333,8.927594,-6.642285,8.371008,3.891059,-2.260736,-3.446392,1.081617,-8.114767,-7.133030,-6.092014,-0.294847,-1.372334,-8.404884,6.007836,-1.726957,-0.970103,-5.981818,1.603263,1.147814,5.463869,5.733197,-7.504276,-8.255662,-3.422910,-5.823443,-6.953979,2.849413,2.083612,-8.021922,6.966730,-4.521990,8.444345,-9.654085,-0.527475,2.596338,0.726555,8.497867,5.737446,7.297339,-1.701478,2.895599,-0.911604,4.750337,-0.980798,4.831201,-8.154293,6.509777,-1.383175,0.753730,0.719339,-6.937060,6.834034,4.206340,7.121221,-2.703032,-0.373016,5.140348,-1.385675,9.499623,-5.383442,-5.007872,-2.704041,-5.263525,-5.464736,-2.991300,-4.312659,-4.195427,-2.539825,8.390039,-3.204184,-8.717454,6.553908,-7.150305,-4.135371,-6.818655,-8.239389,-9.785450,7.324179,9.674178,-7.120093,5.643508,-8.081685,-8.317745,0.666780,5.630867,-8.513713,9.148117,4.828779,6.394841,2.230715,-4.239874,8.901550,-6.793503,-2.236009,-9.232887,6.706561,5.688491,7.129713,8.303174,6.735679,5.291889,-5.279078,2.891281,-3.256230,1.096653,2.735047,8.716229,-6.016950,8.133655,7.077126,7.881034,4.369587,-4.378641,0.453685,-2.006195,-6.938796,-5.225150,-1.784323,-5.386678,-1.676660,-3.778686,-8.491739,-4.251962,3.343674,5.727209,7.047975,-7.822083,5.249978,-0.512002,-4.984996,-2.360940,-1.655647,5.325121,-1.337743,7.407761,3.176723,-0.709205,2.744508,7.317800,-8.425711,9.571117,1.702960,1.485416,-2.825657,6.445168,-5.417184,-5.289456,-5.662466,6.806585,9.959436,-8.030542,-6.740659,-3.039767,4.843004,-3.692562,-8.236321,-2.719302,8.301521,5.924768,7.657434,-3.830520,-0.343848,-4.818052,-7.339816,6.237287,-0.545267,4.835174,2.446593,-9.318554,7.213372,-0.824074,-6.328313,5.624150,-1.898928,2.720468,-3.549677,3.365216,-2.657205,0.711888,4.733122,2.432051,-8.198054,-4.232783,-9.452722,2.880069,-0.060329,-9.336500,-0.629379,-0.959516,-6.043823,-0.226327,-4.498880,0.409071,8.032315,6.021463,9.656085,-3.164719,7.059451,8.487793,3.979432,7.507298,4.439170,-1.444084,-5.614164,-8.672978,-2.895545,4.297576,2.786562,-6.742718,9.267172,4.493713,-9.607259,5.194396,8.841231,5.655930,7.355002,-8.486256,-2.427926,-4.457558,5.131535,5.363262,1.239806,-1.914701,4.446290,0.768409,4.204547,-3.535590,-1.738576,9.187800,-7.085261,-7.858763,-9.349269,-0.649339,6.470606,5.966592,-3.272189,-8.478813,6.100624,-7.285011,9.080918,1.091702,-9.761253,-8.950209,4.711548,-1.164884,2.654964,8.412203,0.572508,-9.798137,-4.093386,-2.994077,8.029494,-7.138246,9.592341,3.119564,-7.240786,6.440185,-9.055722,4.685168,-7.421671,-2.537391,-3.174151,3.793169,3.926703,-6.474855,9.626215,-4.506104,-8.306871,2.022014,5.947095,-9.678607,1.637213,4.311799,-8.989887,-7.891249,-4.361832,-9.009691,-6.449373,3.342274,6.958275,-2.838076,-4.146434,3.581590,0.925579,-0.668488,-8.687450,3.307065,4.954577,2.484466,7.737659,-7.550660,-8.655649,0.922750,-4.700101,7.260383,-1.348560,-6.407847,-0.776571,7.434184,-1.140853,9.969540,7.373949,-6.344843,7.084347,-1.052578,6.697002,-0.961525,3.969059,6.361310,-0.943433,5.614660,-9.504301,1.570012,-7.462706,-9.638959,0.129901,9.721123,-9.323371,3.796880,8.176138,8.105455,-7.325469,4.870868,1.291876,8.951232,4.336317,-9.357870,-8.241122,-1.002487,8.031649,3.533047,-1.982837,6.182907,-4.925097,-6.705965,-2.063060,5.680628,-7.302072,-0.037645,9.836627,6.264580,-4.515486,-7.205901,-1.482483,9.339013,2.525935,-8.107282,1.116933,2.802644,-5.683176,-0.992724,3.098716,7.229638,-1.109443,4.676121,0.297753,-0.347715,-2.901261,-1.358972,7.398802,-8.414832,-0.816611,9.137839,-7.195816,8.371676,-1.447352,5.718066,3.993967,3.165025,-0.502752,8.401509,-9.504144,-3.734582,-2.930971,7.245471,-2.733791,1.135057,-7.240979,8.105135,7.558000,6.502601,-6.798419,6.757907,1.217844,6.166296,2.742424,6.320591,-4.724073,-6.037795,-8.901938,-2.726825,-7.360614,3.542766,-9.105599,1.583377,5.266366,-7.377850,-2.398239,-6.135414,-3.575263,0.637531,-8.299919,8.111675,-2.540981,-4.604622,6.830431,-0.996083,-2.852312,-6.177127,-8.416756,-1.729583,-7.893432,7.599224,-4.059148,-3.770882,8.510886,-4.529865,-4.966248,-6.218149,7.422842,2.170621,0.046181,-6.093135,8.020623,2.419686,0.383341,-3.510466,-6.201857,-2.101018,6.316327,5.357992,-4.082419,-1.616518,-1.689425,-9.612585,7.300232,-7.864296,0.478584,-3.942790,-9.194552,-4.399096,7.797092,8.915302,-9.168411,-8.459713,4.543961,-4.520121,4.205537,-4.700431,6.411579,-8.450368,4.366806,1.197991,3.641953,2.998758,3.460254,4.929121,-0.463596,-4.628494,-2.419716,-4.781804,4.207610,-9.100759,-1.058702,-3.512337,8.309252,-5.184483,3.484155,4.503897,-2.292651,-5.392915,-3.785362,-7.881194,6.290545,2.396101,-9.220782,6.814115,-4.907271,-2.763033,-3.218389,-1.193862,3.309496,-2.277050,-5.760782,-5.109297,7.224038,7.446816,-0.570362,-9.995928,-3.063950,-4.577175,-8.795218,-0.430253,4.285799,3.715686,7.857280,3.366862,-9.666610,-0.809635,1.152736,8.630933,1.407577,-7.807169,3.081605,9.226622,-4.770659,-4.663082,2.299005,7.833532,8.576580,7.851658,-4.422924,-8.219383,-8.987603,2.308526,6.327381,-8.294168,7.433939,-1.823160,-5.980050,8.538740,3.719660,2.360082,-5.807186,9.563892,3.667219,7.935145,0.685832,-8.511263,-3.657601,4.627626,9.133076,-2.239135,-6.656040,2.487201,6.492695,7.357988,-1.078220,2.411936,9.719551,-9.488472,8.142001,-9.336167,6.280491,8.794472,1.994419,3.533429,-0.725300,7.527237,4.099878,2.538358,8.149844,0.647029,0.720016,5.196571,-3.190831,5.876445], dtype = "float32")#candidate|4998|(810,)|const|float32
const_4999 = relay.const([[-0.129946,4.655972,6.971848,2.693026,-1.559119,4.269361,9.173734,8.256730,-9.370024,-7.044613,1.913439,2.083272,-6.695025,1.748575,-1.295866,-6.553771,7.005339,-2.699261,-0.530701,4.096791,-8.670572,-9.587690,-4.979948,7.302198,1.249898,-3.181815,-6.539310,3.004979,-5.031968,3.006695,6.114383,4.406831,7.419211,1.246981,6.799531,9.797051,1.473991,-8.349477,5.379626,-7.037979,0.436746,9.489165],[9.603732,-5.881719,1.651879,-5.642178,-2.265928,3.373768,2.961512,3.802073,-9.722137,0.426221,-6.137194,7.854676,0.917233,-0.078819,-3.316811,-7.803361,8.176786,9.628859,-9.043331,4.397007,8.355707,9.994613,-7.651477,1.546796,3.335179,-7.877764,-4.484078,7.752733,-1.544822,-8.091331,7.712228,-2.069960,-9.364459,-5.156431,4.242775,9.679911,-7.920461,2.261635,2.142225,8.621342,9.564022,-9.065773],[7.745500,1.630156,-1.739991,-2.805421,-7.416310,-2.734932,-7.830122,-8.559600,-4.777105,-1.408161,-6.681363,9.970682,5.675116,-1.087776,1.259369,-4.218604,-9.924196,-7.634322,-7.075080,-5.158907,1.424293,7.196958,8.860446,4.241376,7.291673,7.378748,2.758635,0.538454,8.896309,-0.097930,-5.780531,-2.356099,-3.523787,6.245528,3.964822,-8.144588,-1.543871,9.219287,3.254348,-2.520692,-1.599923,-9.299020],[-4.009361,-1.359302,7.711558,-6.353461,-8.384294,-7.188266,4.209770,5.782223,4.738904,1.290880,7.453181,-8.361951,6.688007,3.181174,-2.262315,-7.379766,3.596696,-9.339205,4.369708,-7.726355,6.556788,-8.567912,9.373880,-1.815738,5.234237,-8.312222,-5.884170,9.148319,4.264264,5.791040,-5.376973,3.407188,4.425539,-6.552040,-7.114649,-2.202874,3.988473,6.112480,-3.643913,-9.860920,0.934940,-2.970338],[8.021633,-4.866390,-7.072730,-8.587582,6.255785,-5.224204,5.626487,7.396549,0.810493,-0.653625,-4.353262,7.794775,7.260415,3.437176,4.759285,-2.652496,0.103427,8.394455,-5.941184,8.059643,5.333263,-5.404496,-2.944771,5.601388,0.113520,2.218895,3.824555,-0.394369,-3.610192,0.191067,7.007369,-0.322144,-0.283519,-5.259378,7.493075,-8.426571,4.071022,0.006816,-1.646929,-6.625616,-8.028566,-3.800629],[-2.462300,-9.812101,-1.955338,-4.454507,1.685735,-3.536723,6.866106,7.003579,-9.999403,5.416258,-3.628956,-7.312550,9.835908,5.418020,-9.427094,5.537399,-9.916733,5.507132,-4.460988,1.394513,-3.055701,5.945459,-2.178646,-5.792389,1.719847,0.637096,-0.508390,-4.586880,-7.537293,-3.628677,8.918950,5.736709,5.456924,-2.239132,4.460150,-0.954284,-6.637771,0.841233,-9.057436,2.797787,8.594784,7.081151],[-2.921399,-0.696179,9.769025,6.322062,-3.274517,1.668320,3.296138,5.360269,5.197000,-3.096951,-4.572534,-0.225566,6.662215,-7.661138,-6.716105,8.579628,8.704917,2.047183,-0.282869,-1.283854,-4.745525,-7.470262,8.662618,-7.455746,3.541434,-1.822996,-2.825750,-5.064677,7.154689,-4.626477,2.728713,-4.974701,4.548823,1.789783,2.484812,7.797357,0.600800,9.091393,7.105273,5.171619,1.428528,-6.017436]], dtype = "float64")#candidate|4999|(7, 42)|const|float64
call_4997 = relay.TupleGetItem(func_71_call(relay.reshape(const_4998.astype('float32'), [9, 9, 10]), relay.reshape(const_4999.astype('float64'), [294,]), ), 0)
call_5000 = relay.TupleGetItem(func_75_call(relay.reshape(const_4998.astype('float32'), [9, 9, 10]), relay.reshape(const_4999.astype('float64'), [294,]), ), 0)
func_3524_call = mod.get_global_var('func_3524')
func_3527_call = mutated_mod.get_global_var('func_3527')
const_5009 = relay.const([-6.163192,6.750380,-9.928437,2.926276,1.353198,0.830523,1.564040,-8.395875,-9.874334,-0.663115,-9.991814,-3.399877,-0.283814,8.205874,2.876902,-0.194231,1.998682,-1.038301,1.143041,-9.045453,6.545520,7.975353,4.493832,7.123080,1.718178,0.653552,-3.781924,9.453748,-1.269983,-7.218218,3.074817,1.453972,-9.454738,-8.107264,-3.488612,-9.685633,3.716848,-5.134369,0.635487,-2.062423,2.817870,-8.974869,1.913871,-6.262472,-2.531516,2.611884,6.291792,2.120174,-5.347449,-6.533471,-2.381244,9.418964,-1.727011,7.922086,6.200064,-1.415758,4.376529,-6.471894,-6.234037,-1.854030,-6.908641,-0.472320,-8.499493,1.325993,-0.268892,6.294352,4.165965,-4.515108,7.054618,9.699404,4.175002,7.347970,4.751323,-9.924246,5.585463,-7.380413,-3.324327,6.361887,-8.907941,-0.396591,-9.958921,-8.150886,-6.078768,7.930150,-8.161683,-1.764870,-3.253813,-0.891086,-1.610491,5.244443,8.839541,2.279666,0.377652,-5.431548,0.169538,-1.888200,2.935246,8.283008,1.319562,6.403083,-7.306455,7.060354,9.905596,-9.054158,-3.123977,8.295085,2.807964,-5.341846,-1.717578,0.148665,8.703794,5.531719,-2.804207,-5.896547,-3.379518,1.674576,0.239814,5.186490,-2.708967,-1.083407,-4.277841,-9.311636,-8.469869,-2.038842,8.152884,1.773736,5.689709,2.320473,1.495560,2.300154,6.220040,-8.209965,1.933230,-1.352038,3.875876,8.518988,-3.498479,-4.116323,-8.368764,5.717979,-3.445603,-3.114159,-0.811121,6.657873,4.431412,5.272429,6.577734,6.499590,8.787235,-5.514179,9.117008,-8.096792,2.196840,-8.866806,3.990251,5.136359,-5.084270,6.807678,-2.086681,2.725249,8.266231,-7.231945,-7.439025,-8.952375,8.376821,7.707851,-4.119652,0.370996,-7.104918,3.821370,7.022935,9.702459,-6.852714,-6.457726,2.528221,-5.941799,-6.104960,1.055812,-7.535707,6.726865,-0.859527,-2.152002,-5.949026,-4.485390,-8.119136,4.680760,-7.759215,4.450681,2.835082,1.358078,4.505950,-5.791806,3.070894,1.133891,9.154101,1.067943,7.747586,-6.425103,3.262532,-9.211089,-3.496247,-2.971718,-8.521439,0.431965,6.508621,-5.478001,-4.190105,7.005974,-5.602319,3.695301,0.299637,4.808675,6.475532,-8.685719,-8.137317,-0.103685,-3.484936,9.524840,-1.482200,4.186856,-8.817301,7.024566,-0.938656,-6.994531,3.040657,-2.063818,-2.650690,9.131658,7.812391,9.378803,-2.997290,-5.202881,-2.250566,8.519728,-1.840280,-2.653980,-8.768003,2.621219,-2.381631,1.504665,3.828900,-2.769731,2.099482,2.386632,-3.094295,-5.876157,-0.112849,2.424010,-3.923675,-1.135151,0.982145,1.783702,-4.027625,-8.852344,-6.507280,-2.435254,1.178052,-0.109051,-4.685701,5.913119,-0.658273,6.230826,-2.779234,6.114552,9.289109,0.865132,-5.488469,-3.022407,7.734114,-8.696731,-9.452655,-0.581014,0.544735,-6.532714,-0.834485,-4.151002,2.912784,-1.635130,0.936529,-3.401988,2.434243,1.632008,1.293635,-2.725463,7.229906,-0.631398,9.812331,5.481299,4.858781,-3.607707,-1.029804,-1.218576,-6.529822,8.073477,-2.537700,-7.869705,-3.461326,-9.760298,0.744829,-3.932291,2.469224,-9.839503,3.733283,9.556220,5.733623,5.860153,6.241554,5.574180,-5.471678,1.845759,-4.140850,-5.584408,8.731390,-8.811701,4.853925,1.441029,-0.160511,1.809480,-2.717250,-3.766197,-6.736996,4.480325,-8.823942,6.729547,6.100309,1.344091,-5.330236,-1.231618,-5.431173,-7.951334,-8.798864,-1.567910,1.513645,-2.453504,8.671655,6.289011,-6.337915,8.271042,6.801960,0.221830,5.829655,-9.585254,-8.916452,1.718848,-0.239743,-2.617234,-6.619486,1.236248,-7.634598,8.372485,-0.685302,2.299656,5.163691,2.571955,4.738743,9.843125,-6.117906,-8.319889,6.434462,9.355044,8.878248,-2.021478,4.073567,3.328071,3.801361,8.468811,9.848894,5.366545,9.380490,0.012891,2.660776,7.772561,5.498838,7.432554,8.543651,-1.090252,-5.396882,-0.917655,-2.065180,-9.805613,-4.798408,5.606069,-5.237558,-7.152206,-2.779552,6.881150,6.287321,0.449439,-2.506488,8.732437,9.207507,8.384464,-9.917834,8.660666,3.201346,-5.884682,5.511149,-3.225255,-1.303984,2.379298,-9.160009,5.922001,3.081048,-7.760018,6.231507,-6.238978,4.982459,-9.224733,4.164291,-9.504977,7.641522,1.331334,8.993700,3.004713,-3.614612,-8.010383,0.460933,-0.125469,-6.604398,-2.378220,-8.485333,-4.419178,-0.634340,5.902784,9.966711,4.018431,8.296243,3.047702,-2.499134,-2.397856,-1.680292,0.516473,-6.229008,-6.591833,8.262968,-7.571220,5.705552,2.083195,-0.575607,-8.765651,0.507060,-1.651184,-4.449971,9.795426,-1.824877,0.444598,-3.216302,-4.119837,3.230020,9.483974,-0.170835,-6.541240,-0.216039,7.861459,3.137123,-8.457144,1.907041,3.838222,9.721182,-0.317940,-5.678918,-2.007444,7.535253,-7.558560,5.668434,5.393032,6.862057,-6.803160,1.217891,-1.955060,4.417398,4.770382,-7.519981,-3.521554,1.536559,5.794882,-0.167101,-7.672286,8.434734,-5.761605,-1.106820,-4.892786,-2.440626,-9.369101,-9.383891,-5.404409,6.228413,7.907354,-4.832384,7.502650,-0.500865,1.088417,-7.741989,-9.897194,-3.803715,2.110427,-9.311780,7.283029,-2.471730,2.150023,-5.080937,-5.650262,1.447891,5.491217,0.807976,-8.176195,-5.705569,-0.545172,3.552807,-8.818654,-9.354099,0.769893,6.173931,5.005973,-6.381905,-1.419138,-2.050227,-1.458402,-8.302302,9.618936,7.238644,-0.330822,6.182804,-9.057378,6.359386,6.121003,-8.918103,4.570531,6.365035,6.319427,7.205934,-1.879712,-0.277734,8.528013,1.138534,-1.127480,-7.598975,-2.655287,-2.820625,4.393592,3.528034,6.915395,0.075280,5.949478,7.772639,-7.575440,-5.000934,-1.676770,1.104338,-8.093888,-3.272233,6.746077,1.876210,-8.269893,2.157981,2.924632,-8.429768,-8.303056,3.081187,-3.190251,6.976916,4.134365,-0.397747,-0.553033,-6.662156,-1.313312,-0.370854,8.214000,9.721966,2.468295,0.488232,3.253203,0.023241,0.173153,9.589491,2.831886,-0.235895,-8.778594,-9.339406,4.377929,0.830303,8.297818,5.848497,0.192843,-9.384666,0.409477,-1.817652,-4.963723,7.692316,-3.613670,7.684177,2.673629,3.424986,-6.471369,-6.188231,-2.471290,1.420374,4.700853,-6.991624,6.833764,9.590321,4.133829,1.306997,2.234497,5.534380,1.723235,9.685991,1.677189,0.501751,-3.191270,3.484068,7.394598,-3.302698,9.758490,-4.087113,-3.661036,-0.904332,0.552621,8.635269,-0.923268,-7.040893,1.118236,-3.654413,-9.711234,8.116007,6.796094,8.667845,3.970299,-2.594011,6.396777,-5.481692,-7.676687,2.444099,-3.394340,4.529023,9.408319,3.374937,7.284365,8.279276,1.545103,9.642322,5.489809,7.523956,-9.764719,-3.501207,-7.999413,7.027868,3.121367,-0.470122,6.739110,-6.349559,-6.734371,-5.521159,5.799088,8.895145,-0.045164,1.391501,-5.718666,-1.655851,-6.889712,-2.333479,0.077467,-0.352719,-2.351231,1.887399,-8.647599,-8.392356,4.706729,-9.969492,0.022360,6.408002,-0.063410,6.575884,4.726922,-3.042511,-2.656341,6.700608,-3.801986,-4.966341,-9.622496,1.448869,8.724460,1.674652,-1.514111,3.718984,-3.553513,6.264439,-6.581718,3.810017,-2.936940,0.439670,-5.060657,4.292534,-4.427503,6.402945,6.643244,2.495802,-7.754011,0.399033,7.367331,-3.611952,9.430851,-7.384038,7.803450,6.215885,6.486068,-4.263572,3.839813,3.970142,-8.097047,4.790205,8.475635,-8.038159,7.352223,-8.395798,6.581759,-4.773028,-6.218031,-5.241262,-4.752795,0.940324,-6.739237,3.997077,0.316585,-5.304274,8.629324,3.096738,-9.252416,4.389504,0.049255,-3.369582,-7.723100,5.654866,-5.333810,-3.834393,-8.052027,-4.647273,-7.087677,-4.346147,-6.377310,6.838257,-7.440257,-0.988062,-1.023962,1.604557,0.275448,-1.027976,-4.501653,-8.006609,3.326911,-7.338996,7.997707,2.676586,-8.566244,3.254096,-0.833317,4.201508,-7.915851,3.802932,2.389842,-0.166571,0.490661,-7.687888,7.905492,-1.287506,-8.226226,-8.576086,4.722670,4.105373,7.792578,1.921003,4.898807,6.991919,-7.838127,-8.114444,1.605773,1.515566,-7.192504,-7.738253,-3.465700,-7.108688,5.487044,-2.310136,-1.891458,2.156456,6.401259,3.027478,0.979498,-6.876131,-6.814404,7.949631,0.001800,-9.086378,-7.259650,6.549119,8.246154,4.412537,-5.355289,4.282128,8.429811,4.745314,7.405659,9.706034,7.618569,3.856870,9.644242,8.236564,1.240228,-9.755411,-3.572279,-5.942945,9.909335,4.608830,-9.682119,2.352888,0.306108,-2.996062,9.658980,9.378496,1.218372,-0.164131,6.006083,7.917437,5.221160,-5.935099,-8.426881,0.946499,2.476739,8.990816,-4.859999,1.142675,8.107657,-2.618660,-6.832014,4.001856,-7.001326,-2.002114,3.445828,-8.451907,4.716804,8.165235,-8.293485,0.456917,5.512365,4.980241,4.998621,4.824071,-0.362811,-8.442460,0.927287,-1.578063,4.070543,8.870263,-3.361665,-3.909618,-1.496862,8.024284,-7.195932,-4.842781,-5.577702,5.944360,6.875656,-7.997846,3.429563,-1.409857,8.190882,-4.135060,6.182612,4.662436,-1.779757,8.355901,5.957788,9.337285,7.329150,9.659489,0.963174,-6.621408,4.688102,-6.700478,7.437178,3.319239,3.067367,2.529127,0.793052,-4.239990,-5.510144,5.144651,0.342685,-6.162517,-0.282642,-8.167658,-6.915062,-0.229313,0.420049,-4.585348,6.089999,0.055972,-9.546563,0.615792,-9.357655,6.667322,9.928274,-8.541631,4.808020,-0.380598,0.472657,5.123827,1.441605,3.224774,-5.578973,5.763734,-6.988961,-9.149204,8.051093,-4.977158,2.422076,2.630262,-5.478705,9.678540,-0.811918,-6.420976,-6.250050,5.193360,7.906523,6.297142,5.998482,-4.840117,4.428698,-5.489821,-9.393386,-0.876321,-4.459185,2.758893,-7.866581,-2.296943,-5.658775,-1.809534,-0.203449,-9.706854,-3.785989,1.855491,-3.750783,1.295136,-4.708555,-0.340723,5.679685,-4.065641,-6.146436,-8.764650,7.080570,5.345641,6.934175,-8.895330,-1.630594,-5.872708,-6.814794,-8.853667,2.532572,8.420284,9.498930,-6.558150,-4.742264,-5.335700,-4.919649,0.685725,7.315520,1.874313,-7.935487,-9.042835,-4.588226,-2.652663,-6.048925,6.490681,-6.690405,0.404859,0.294381,-2.048271,-1.139751,-5.398435,-7.772067,-3.680323,3.736040,-5.104486,-1.331292,-3.265001,0.279565,3.896209,9.021917,3.019561,7.539583,4.525222,0.155214,2.018830,-5.609689,-4.307369,8.679149,-7.998076,2.569709,9.118164,7.871155,-4.523943,-0.430957,-9.398449,8.474136,5.928088,-3.862147,1.537604,0.777345,0.406650,-3.764847,-3.649773,2.644881,-2.654700,4.656489,-0.301432,0.479805,-1.542687,-9.267706,0.562635,-9.063460,7.862666,4.908073,-0.730319,5.212865,-3.779501,-0.601168,9.493117,4.640924,-6.107107,5.402118,4.442969,8.214896,-7.686269,-5.822206,6.809613,0.424817,4.286918,8.719780,3.429982,-4.357939,7.370792,-8.730022,-9.929801,-6.498415,-7.192008,4.070947,1.865447,8.889427,-2.409549,9.544613,4.637113,-3.135792,-7.592308,-8.355530,-0.814975,9.035611,3.022352,8.305124,-1.436360,-1.170854,5.184778,-2.292481,3.322319,1.611082,-1.732660,8.890235,6.965431,-7.086824,-6.206772,5.213274,0.478021,-3.197814,-3.539403,-2.472696,0.899289,6.559208,-8.805039,8.335507,-0.954900,-6.348684,-1.171004,-1.021845,2.245158,5.768027,4.499233,3.824748,1.623012,-7.635698,8.668431,-7.268934,1.280253,7.730467,-4.014664,5.318181,7.448744,2.983526,-5.565506,0.369923,-5.492281,9.926375,7.914003,7.573608,-1.616266,-3.602361,-5.969705,-1.017420,2.178338,-4.576872,6.781259,-2.004448,0.933195,-9.047812,8.244543,2.465927,-3.138349,6.417040,8.005508,-0.356515,-9.056223,4.067889,-8.931615,3.172385,-0.422278,2.861742,8.164119,-7.839197,8.999483,-6.794559,2.685693,-8.730326,-5.043415,1.824050,-4.556980,1.131928,3.944829,-0.832417,8.656551,0.760780,7.545864,3.017631,-9.085730,3.337183,-5.479186,-7.914991,3.197384,9.539400,-3.337143,-2.101769,-4.249459,-5.168906,-9.407371,3.635511,-7.259636,8.602974,6.715265,-5.113031,7.139318,4.881425,-2.486195,4.923136,4.747439,2.238931,5.336501,-6.391935,-9.201492,7.868094,9.304038,-8.083952,7.272966,8.569763,-3.963100,-1.322875,5.645372,8.427898,0.416888,-7.864126,9.542743,0.950545,5.656209,-2.060393,-9.909288,-9.460761,2.541036,6.090804,8.588389,3.234662,-9.578834,1.878133,-6.559184,8.096361,3.888899,-5.798272,-7.568187,4.437662,0.143038,9.943979,-9.969486,-9.372144,-4.042910,-8.540489,-6.706256,5.818914,-5.705766,7.815943,2.091420,-0.773679,-6.887641,2.085363,-9.746675,-8.088077,-9.811948,0.891866,8.393541,-3.483199,2.732014,8.540270,0.272243,7.707849,8.712892,-1.109110,8.719166,7.437423,4.101528,-1.652816,-0.219851,7.638667,-9.289415,9.881113,-4.040551,6.197614,-9.941664,-6.425699,8.516564,6.870644,-0.386294,0.262159,5.319591,7.472913,4.850249,-4.666010,-8.788600,8.366067,6.565950,-3.540053,-9.936102,8.913446,5.776972,-8.276242,7.494935,1.991204,3.535593,-3.608784,-6.535235,0.614197,6.708832,4.392445,-8.889665,6.079798,3.022334,1.729367,7.331550,-1.343945,-9.581171,-4.396098,9.211595,3.393112,-2.141216,6.142717,1.309059,2.041888,-3.472302,-0.979075,7.162822,-8.497601,-4.259975,-7.273966,5.309637,-1.199884,-4.671568,6.160143,-6.642476,-6.159879,-4.271290,6.690068,6.272650,0.894434,4.496475,-6.245641,0.454844,3.155869,-8.483498,6.544087,1.509432,-4.211272,-2.237456,5.518708,-1.401989,-8.913980,0.375345,8.359696,-8.343229,-6.351344,-3.755193,-5.957934,-6.790554,5.329939,3.051544,-5.562727,-7.628882,-0.310527,-3.189410,-1.487984,-1.024040,-5.208385,-7.071673,-3.185553,-9.585248,8.641198,4.912586,-6.043388,3.450869,-3.230074,-6.947590,6.552139,5.784660,-9.656580,5.852618,7.718365,0.514773,3.914366,2.831731,-2.183438,9.530776,-3.264716,1.911146,-7.096721,3.959353,1.390351,1.564808,-1.079530,6.278159,-2.701984,2.636477,-7.614265,9.024424,3.423517,3.131659,-9.247981,3.242697,5.583187,1.238441,6.092659,-9.097883,8.591060,-7.170683,5.582195,-6.742597,-0.748610,2.870928,-0.341998,6.096948,7.362007,7.881091,3.052799,-6.006297,5.895479,-6.591509,-4.828180,0.699146,-7.093077,-5.146301,6.909481,7.344018,-3.589078,-0.861085,-9.465344,-2.686722,-8.876922,7.616114,-0.962254,-4.371743,-4.112354,8.417266,-6.286085,-6.433023,-3.277368,-9.342341,0.589763,5.958368,-6.701873,-6.825625,5.613286,-5.360310,-9.257844,3.366645,6.219346,-5.495944,-4.757184,5.154599,-8.213764,7.659331,-0.226301,0.016185,-1.636737,3.212059,-4.527634,5.243751,6.563732,-5.444629,0.150688,-8.291066,0.113014,-1.899770,-6.354499,-2.775519,7.902888,2.272661,2.895761,9.266895,-3.999889,-8.557845,-0.338905,-0.277376,4.856418,3.178788,0.483030,-1.017770,-9.407755,-3.340354,-0.401733,-0.638896,2.011467,1.799408,-2.995082,-5.656615,7.765919,1.036770,-4.870442,8.862299,-4.512827,-1.714068,8.650456,4.505888,-9.361270,-6.472218,-9.058402,-5.943228,9.297166,0.181239,7.591665,-2.894876,-0.820263,-4.826534,9.210406,6.604747,6.755452,2.422977,-7.891791,-1.831658,7.664821,1.479322,3.877269,7.509487,4.115783,-6.874658,-8.224773,0.345004,9.416266,2.369801,-0.309394,-3.989164,-7.697694,-0.571603,-9.972100,0.347695,4.956204,-0.123452,9.990408,8.367978,-5.446232,7.646238,-6.778537,3.814695,-8.435842,9.977701,8.031056,-3.211168,3.320458,-8.304074,-3.899906,7.245668,-3.832372,-6.675161,4.549764,-8.494884,-0.839477,-3.003781,2.232114,-5.154876,-5.125142,-4.365070,0.981016,-4.568286,9.474415,3.305352,-6.145746,7.608841,-5.982188,-9.250360,-0.872644,3.627458,-8.746611,3.053008,3.869483,-4.351547,6.097692,-8.912509,3.086701,-9.606488,3.094571,-3.489385,-6.474860,8.422683,-1.797294,3.088149,-4.727023,6.483217,-4.882195,-3.664230,-2.967814,-5.124908,1.639153,-9.774916,5.384214,1.670311,-5.353323,-6.964102,-5.030339,8.961942,-6.478370,7.363075,7.322231,5.250761,5.025469,-9.099949,-9.359913,-2.404928,1.780961,5.720204,4.885233,0.333880,-3.535818,-4.842321,0.033634,3.184579,-4.504847,9.871151,6.615808,-5.037488,-9.785109,-6.025887,0.373466,2.542301,-9.814687,4.329368,1.233856,5.814165,-3.108662,-1.356634,-2.356504,0.225393,-5.505341,-9.527915,-0.848856,3.887980,3.768047,6.385278,-4.989569,6.074007,3.597835,-2.222908,-0.894022,7.608785,9.855426,-4.997272,0.715451,9.527780,-1.458543,-0.859446,-5.778886,-5.598139,6.769201,-6.094406,-3.660661,-8.711912,-4.465516,-6.031210,0.689642,4.499568,-0.799492,-1.551067,-6.959579,2.005126,7.798966,4.162292,3.164854,-1.432826,4.309843,-1.632767,-8.715751,-1.055257,3.829063,3.070541,-7.088816,-7.240377,7.443685,-6.616049,-0.067322,-3.780449,2.845251,8.772991,7.180121,-3.423429,-9.284356,-6.556760,3.628206,1.713203,-4.442917,0.455942,6.900627,8.760690,-6.736684,-5.445257,0.138760,1.943066,-8.684493,-5.083439,-9.352683,9.454607,3.563128,9.905179,-3.158599,-5.392553,-1.045398,0.761276,1.363128,-3.008040,-0.186064,-0.192827,1.757792,7.630902,-0.979373,-9.188814,-8.289316,8.293137,7.053278,-0.069979,4.770611,-4.129912,0.140011,4.326788,-1.507629,-8.065047,9.618126,8.822312,-4.789873,-3.390227,-7.483267,5.618014,-3.967456,-7.688259,-7.534447,0.194976,4.941156,1.959487,9.212602,0.982568,-1.640778,3.207828,-2.021244,-1.734877,5.692005,2.720457,7.946912,-6.364260,6.258952,-2.510173,5.736411,4.859382,3.785866,5.054521,-2.026625,8.446110,3.835198,-5.155250,7.481195,-5.934583,8.585201,-7.594086,1.374381,1.416753,8.990755,-6.283345,4.187177,-8.103105,-8.989321,-7.299506,-4.536204,0.923732,-2.798353,-7.721063,-8.911774,-4.039829,-9.244122,5.872846,7.469487,4.433480,-1.588346,2.201098,4.799807,-4.160975,-7.331938,-9.560710,-1.412992,-8.085968,0.697140,-8.669597,2.153701,-9.433733,1.738638,6.986266,-5.364899,-8.499496,-2.557024,-3.958392,3.706318,0.172155,1.081227,-8.713657,7.926487,-3.032473,9.498063,3.199245,4.226556,3.721102,9.465097,7.843603,7.751362,-9.150125,-7.430941,3.010252,7.972171,8.700199,9.369890,0.429847,-5.852109,5.021570,-9.527999,-8.736395,-9.554599,6.550838,3.907363,7.972350,-8.158765,-0.222068,0.320049,-4.577663,6.811557,3.140280,0.961710,1.308077,8.144476,-7.580926,3.449587,8.430972,-6.994348,0.643730,-7.680827,-5.099109,-3.751240,7.969559,-4.303387,3.402431,6.954985,-7.529298,6.748470,-5.289950,9.272601,-4.049255,3.870963,-0.481501,-3.340190,2.062882,6.012899,7.367587,1.673588,3.603957,-1.464285,6.913810,6.167912,3.797767,6.765395,4.173952,-7.000273,-9.283783,-9.000166,7.040318,-0.231010,5.044874,-9.690132,-0.689404,8.433713,1.356114,-6.871112,6.393529,1.306870,-2.353342,-1.183028,1.932900,1.572441,-1.495231,-9.530768,6.249540,4.744029,-9.735990,3.132838,5.748292,-3.765458,5.977609,3.245934,2.414188,9.820007,0.173204,6.217620,-9.871926,-7.315048,-3.981770,-2.443918,-4.724507,-0.270031,4.901584,1.647202,-3.699850,9.047522,-1.488189,-9.786745,6.176730,3.007538,6.641611,9.855941,6.594899,2.478844,7.301591,9.214976,2.217476,-8.589495,-7.609212,4.296793,-9.956009,-4.864366,9.256475,-7.480168,-2.075095,9.908251,-7.760018,4.530517,6.303934,-2.200053,-6.289385,-4.092815,7.735022,-7.931523,-5.345393,9.369985,-7.003169,6.081034,-9.435576,8.804941,6.097183,1.412128,4.514761,1.607262,4.724043,6.360055,-7.973661,4.924466,2.754917,9.366691,4.353470,-1.324673,-6.697615,1.903385,1.270433,7.904024,4.027447,-6.867884,0.863918,2.771435,4.311052,-7.802970,-8.190134,-5.613973,4.523533,0.211356,-4.118501,-6.767233,9.281335,9.500592,-5.029450,9.826326,9.204674,2.490038,-6.463547,4.642403,4.130226,1.546346,0.711288,2.023394,0.639161,6.686396,-0.075665,-8.839451,7.726000,-0.219287,-1.870333,-3.801019,-5.968041,-2.456580,-7.136346,-9.454816,3.523612,-1.019554,4.825551,6.327446,-0.461032,-2.832733,-5.879946,7.486432,7.101259,-6.367675,0.625143,3.341219,-9.258380,-0.866980,-1.248496,-5.601737,-3.405360,-4.971965,2.834757,-8.000831,7.007098,-6.598695,8.388177,0.504267,-7.474652,-3.267549,-1.771281,4.834610,3.000000,-6.113440,-1.547440,0.524106,0.764149,3.323697,4.699964,-5.207440,-8.518959,9.698234,-0.595184,-6.268084,-7.745085,0.020232,2.672545,4.784838,-5.279673,-8.036880,-8.857027,-5.069452,8.486696,-6.115894], dtype = "float64")#candidate|5009|(1980,)|const|float64
call_5008 = relay.TupleGetItem(func_3524_call(relay.reshape(const_5009.astype('float64'), [12, 15, 11])), 0)
call_5010 = relay.TupleGetItem(func_3527_call(relay.reshape(const_5009.astype('float64'), [12, 15, 11])), 0)
output = relay.Tuple([call_4991,call_4997,const_4998,const_4999,call_5008,const_5009,])
output2 = relay.Tuple([call_4992,call_5000,const_4998,const_4999,call_5010,const_5009,])
func_5013 = relay.Function([], output)
mod['func_5013'] = func_5013
mod = relay.transform.InferType()(mod)
output = func_5013()
func_5014 = relay.Function([], output)
mutated_mod['func_5014'] = func_5014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4754_call = mod.get_global_var('func_4754')
func_4756_call = mutated_mod.get_global_var('func_4756')
call_5090 = func_4754_call()
call_5091 = func_4754_call()
func_4812_call = mod.get_global_var('func_4812')
func_4815_call = mutated_mod.get_global_var('func_4815')
var_5096 = relay.var("var_5096", dtype = "bool", shape = (180,))#candidate|5096|(180,)|var|bool
call_5095 = relay.TupleGetItem(func_4812_call(relay.reshape(var_5096.astype('bool'), [180,])), 2)
call_5097 = relay.TupleGetItem(func_4815_call(relay.reshape(var_5096.astype('bool'), [180,])), 2)
output = relay.Tuple([call_5090,call_5095,var_5096,])
output2 = relay.Tuple([call_5091,call_5097,var_5096,])
func_5100 = relay.Function([var_5096,], output)
mod['func_5100'] = func_5100
mod = relay.transform.InferType()(mod)
mutated_mod['func_5100'] = func_5100
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5101 = relay.var("var_5101", dtype = "bool", shape = (180,))#candidate|5101|(180,)|var|bool
func_5100_call = mutated_mod.get_global_var('func_5100')
call_5102 = func_5100_call(var_5101)
output = call_5102
func_5103 = relay.Function([var_5101], output)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mod.get_global_var('func_4791')
func_4793_call = mutated_mod.get_global_var('func_4793')
call_5105 = relay.TupleGetItem(func_4791_call(), 0)
call_5106 = relay.TupleGetItem(func_4793_call(), 0)
func_4736_call = mod.get_global_var('func_4736')
func_4738_call = mutated_mod.get_global_var('func_4738')
call_5112 = relay.TupleGetItem(func_4736_call(), 0)
call_5113 = relay.TupleGetItem(func_4738_call(), 0)
uop_5119 = relay.tan(call_5105.astype('float32')) # shape=(9, 5, 7)
uop_5121 = relay.tan(call_5106.astype('float32')) # shape=(9, 5, 7)
func_3918_call = mod.get_global_var('func_3918')
func_3921_call = mutated_mod.get_global_var('func_3921')
const_5133 = relay.const([5.784683,-6.723722,5.634368,9.207058,-1.097943,7.082307,-5.268156,-7.018447,2.043849,-4.473374,-1.868856,7.229642,7.997826,-6.362119,0.290876,6.254904,-6.782415,-1.068658,-1.788013,-0.872729,-8.375431,-8.428611,-5.380196,-0.297483,6.205488,-4.503644,3.461579,-6.198127,-4.389101,7.718208,-6.528192,-8.670720,-8.816644,9.046285,7.035631,-5.553391,1.938787,-1.911227,2.403974,-5.793243,4.923043,-7.848061,-0.252237,5.012408,-8.508056,-8.321682,9.335152,6.446027,-5.626347,2.003809,-5.913991,6.806466,-6.781456,-4.422466,-9.765457,-1.986470,1.787348,3.464589,6.766715,-1.219101,6.852990,0.992108,-6.657015,8.173424,4.473913,-7.938393,-1.185851,3.835828,3.640582,-5.156307,-2.944884,5.941815,-3.535976,-8.630903,8.393127,0.369017,1.842090,-5.538888,4.776566,-5.256521,-4.995064,1.209828,1.178159,1.524621,-3.723358,-5.699677,-6.960646,-8.947737,-9.524502,-8.692003,0.440657,4.394407,-0.526723,-6.898210,6.208608,-1.517789,1.115830,-9.476249,8.842749,0.755866,7.020479,-4.038044,2.347505,-1.702357,9.878700,-8.103692,-9.386920,-5.100142,3.674687,7.750478,9.052482,-7.586105,6.839960,8.071843,-0.450304,-4.818528,6.004091,0.456258,1.776380,-5.394989,-1.240258,9.518151,-6.466938,-6.738627,2.811833,-1.386227,4.362788,1.823819,9.042992,7.974991,-0.295545,-8.866475,2.129347,-0.403423,5.057828,4.830493,9.852544,3.088631,-2.637121,9.100933,5.146149,6.633772,-7.680533,0.299129,5.565736,4.072237,-3.539053,6.460929,4.033910,-2.685760,9.406685,2.253859,-5.757413,-2.428214,-9.289790,-7.824884,-8.216088,-3.150478,1.077320,-9.339956,2.550402,-6.732923,1.226336,4.567292,3.476814,-7.586685,1.671241,-2.491001,-7.868526,9.515109,-2.598216,-2.806981,4.932655,-4.701526,-7.328980,0.598370,-7.125170,0.198338,-4.116166,7.087418,-6.254275,-1.017122,5.825131,7.007167,0.476765,-9.523615,2.873864,-9.199973,8.050382,1.285114,-9.967712,5.430930,-6.023273,-5.353912,8.781694,-0.220004,4.363800,-0.576799,6.464364,-3.779194,-1.914575,9.734458,4.205056,-2.956382,-9.616481,-7.999309,-1.962287,0.885269,-6.020169,1.188440,4.251050,1.573813,-3.589687,0.850539,-8.260269,9.193548,-4.375097,-3.133059,-6.702349,3.949586,-6.113287,0.237167,3.199989,0.682977,0.304499,-0.298804,-4.432874,2.689325,1.778843,0.198095,3.364536,-5.680106,4.225823,9.825938,1.948274,-5.978844,4.166751,-1.506155,-8.337238,-2.614347,9.004234,4.823265,0.088352,-0.424890,2.568326,-3.702728,-3.831937,5.885990,0.891588,-8.684746,9.404959,-6.305638,-4.561738,1.157397,-3.956455,-1.351301,-7.026690,5.201362,8.040691,-2.864997,5.311480,0.331599,8.080659,1.204921,9.062539,0.463808,-3.938480,8.880405,6.367591,-2.382203,2.071552,1.506772,-5.166668,2.593289,-6.777344,-7.756511,-5.484228,-6.043280,-7.870372,-5.997181,6.644308,-7.529086,5.445352,-8.348793,5.664821,-1.164884,-1.298879,-6.822142,-1.489684,-9.703421,-7.293924,7.446208,-3.406738,-1.742705,6.284567,-5.727361,2.776249,7.501427,2.443649,8.130452,-8.949894,0.517604,2.674499,0.959958,0.702004,-3.128088,-9.483836,-2.229576,7.678250,-8.900038,8.420206,9.072685,4.205115,7.251236,4.761118,3.847653,-4.246791,-7.778773,7.730084,2.226905,9.856301,-4.795124,2.614791,-4.863048,1.911195,-8.867671,5.519272,2.816390,-1.216584,1.823823,0.346678,8.985814,7.307538,1.722504,8.598362,3.835511,3.002274,-4.480305,-0.568008,1.401842,2.421838,-6.737370,-9.127428,-2.956259,-5.974184,-1.987581,-8.523770,3.401076,2.977545,-1.109737,-6.206017,0.125029,5.206731,-8.456382,-8.953654,-5.405383,3.081916,-3.579981,-1.242102,-0.847315,5.764713,7.269675,-3.035023,5.921613,8.606028,-3.498606,-0.239711,8.884340,-8.152854,2.232200,-3.149033,-5.604428,1.835114,4.912503,2.541665,-7.188015,-4.818599,5.743665,1.835988,-4.066718,-1.116063,-5.820051,-6.371423,9.560861,4.120995,6.959530,-8.043001,-1.811283,-7.236749,7.864104,3.419423,-1.901347,0.371810,7.055804,6.785887,-2.679543,-8.987314,-9.317829,-9.679890,8.829379,-4.593548,9.823607,1.960008,-2.377662,2.644011,6.182365,-8.990607,-4.072725,8.839281,-1.359961,3.985493,7.291564,4.681639,-4.265396,9.997739,1.074523,-2.189970,-1.483796,-5.753505,-1.571210,-3.353382,6.125465,6.600568,8.373532,3.690435,5.140231,-4.442260,-3.337855,-2.115451,8.805692,5.374447,-3.214346,-6.695535,7.893283,5.451467,-2.716899,2.841921,-8.687418,-8.380001,-5.449915,7.523642,-7.442805,-1.547278,5.955392,-6.920178,-8.338026,-8.491212,1.110305,5.901860,0.641605,-9.818045,-7.624346,3.839571,2.869586,-7.076434,4.427805,2.617691,1.060501,0.131881,0.506918,-5.785893,4.391540,-4.416043,3.969982,4.131362,-3.769038,-9.477387,7.206746,-6.858641,3.766007,-9.554504,-5.160831,5.246687,2.967024,8.649479,-8.983166,-1.422459,-4.095577,-2.692029,-1.930701], dtype = "float64")#candidate|5133|(480,)|const|float64
var_5134 = relay.var("var_5134", dtype = "bool", shape = (180,))#candidate|5134|(180,)|var|bool
call_5132 = relay.TupleGetItem(func_3918_call(relay.reshape(const_5133.astype('float64'), [8, 6, 10]), relay.reshape(var_5134.astype('bool'), [180,]), ), 8)
call_5135 = relay.TupleGetItem(func_3921_call(relay.reshape(const_5133.astype('float64'), [8, 6, 10]), relay.reshape(var_5134.astype('bool'), [180,]), ), 8)
func_3437_call = mod.get_global_var('func_3437')
func_3442_call = mutated_mod.get_global_var('func_3442')
const_5137 = relay.const([-2.516261,5.729968,-0.743278,9.270282,7.365533,0.341174,7.765827,6.692105,8.853098,-9.280045,-1.435616,-8.717244,6.471629,6.325327,5.016243,1.385286,-8.152617,1.973534,-9.799280,9.364767,-2.900870,6.956611,0.407891,-9.534421,-6.639715,-6.449448,-7.283930,8.156706,-5.618309,-1.973744,0.725464,8.763652,0.308689,-7.660101,5.353873,6.228507,1.238858,8.316131,-1.695579,3.884626,2.502949,1.052338,-8.839787,9.788615,6.828795,-5.408646,3.154814,-2.519377,6.187574,-1.993212,7.415695,-8.518882,-4.921413,1.052721,2.698908,-6.383884,-0.967140,-8.143252,-8.108612,3.054115,-5.032051,-5.368255,-6.592295,-7.761963,-9.219236,-2.718212,-4.657791,-2.381342,5.474136,2.821582,-3.921351,3.333016,8.169524,5.770525,6.612491,-5.389975,-5.331987,8.798700,8.263479,-3.324471,-9.147550,8.986492,-1.575552,2.890752,7.702781,-9.728809,-0.145555,-0.304174,-1.597706,-6.000970,7.233686,5.068619,6.246030,-3.242528,-8.874540,-7.810970,9.763102,9.654338,0.074477,0.600890,-6.271189,-8.601823,6.644203,-8.565532,-2.694135,5.149737,4.297890,-0.149233,5.404826,-0.789498,1.807463,-6.190048,-2.642066,-7.951979,8.401267,3.382222,-0.681528,-4.938149,-4.262086,9.489178,1.720179,-6.647426,1.757972,-4.251881,7.686542,-0.899012,3.244842,-3.582306,-7.605773,-5.504989,-6.326752,2.592253,4.417712,9.204521,7.914895,3.698180,6.889538,8.935409,-9.865029,-5.821391,-2.889500,-4.558701,5.850182,-1.022735,-7.073608,3.696881,-6.862656,7.832843,6.436332,7.999414,2.411528,0.947182,1.202561,6.133437,-4.024197,5.169876,-0.301021,3.234473,-6.443312,0.180652,-5.168351,-8.419035,-1.421873,-8.733394,-4.395665,-7.443116,-5.340675,-8.600418,-9.121794,5.444920,5.543870,-2.264075,2.326683,-3.841906,1.648374,-1.949512,-8.731375,-9.276784,-6.721274,-8.999455,-3.331532,-0.215326,6.601050,-1.768035,-3.249398,-0.750869,9.621989,1.069989,-7.612684,-3.996127,9.099853,4.792788,9.420261,-4.699208,9.298314,-0.669321,8.854117,-3.415624,-3.048296,8.867692,8.475607,-3.703028,-1.911588,7.266939,1.134368,-3.789084,-9.263998,2.409096,3.856405,9.753473,-9.439324,-6.249675,-1.091445,-2.119868,-0.914629,6.154548,-1.151291,-8.309718,0.242435,3.560140,2.615014,2.320029,-3.993908,-0.601640,7.636291,-5.112093,6.907700,0.552961,2.221069,-0.618816,8.883862,1.442441,-2.430709,-2.115352,6.177288,-1.972004,9.721670,-1.891611,-4.110944,7.627010,-8.327218,-8.629467,1.483611,1.222640,8.526778,-1.442031,5.826364,-0.550736,1.292489,1.232199,0.189074,5.084763,-8.867545,-9.210651,-2.184837,-5.712058,6.328307,0.827316,-7.889153,0.879216,-4.146653,9.802557,-7.217895,2.443879,-9.202117,-5.945005,0.910202,1.521692,-8.358786,-9.364567,5.955808,2.232626,3.755983,7.004943,-4.123020,-4.333322,-6.883219,-9.542717,7.339423,-9.172039,8.469226,1.006916,5.022870,-0.667461,-3.413738,-6.630529,6.272654,-7.145731,-5.171684,-3.158149,8.947482,-2.202717,-2.526309,-7.916867], dtype = "float64")#candidate|5137|(294,)|const|float64
var_5138 = relay.var("var_5138", dtype = "int64", shape = (450,))#candidate|5138|(450,)|var|int64
call_5136 = relay.TupleGetItem(func_3437_call(relay.reshape(call_5112.astype('int64'), [9, 5, 7]), relay.reshape(const_5137.astype('float64'), [294,]), relay.reshape(var_5134.astype('bool'), [180,]), relay.reshape(var_5138.astype('int64'), [450,]), ), 9)
call_5139 = relay.TupleGetItem(func_3442_call(relay.reshape(call_5112.astype('int64'), [9, 5, 7]), relay.reshape(const_5137.astype('float64'), [294,]), relay.reshape(var_5134.astype('bool'), [180,]), relay.reshape(var_5138.astype('int64'), [450,]), ), 9)
output = relay.Tuple([call_5112,uop_5119,call_5132,const_5133,var_5134,call_5136,const_5137,var_5138,])
output2 = relay.Tuple([call_5113,uop_5121,call_5135,const_5133,var_5134,call_5139,const_5137,var_5138,])
func_5158 = relay.Function([var_5134,var_5138,], output)
mod['func_5158'] = func_5158
mod = relay.transform.InferType()(mod)
mutated_mod['func_5158'] = func_5158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5158_call = mutated_mod.get_global_var('func_5158')
var_5160 = relay.var("var_5160", dtype = "bool", shape = (180,))#candidate|5160|(180,)|var|bool
var_5161 = relay.var("var_5161", dtype = "int64", shape = (450,))#candidate|5161|(450,)|var|int64
call_5159 = func_5158_call(var_5160,var_5161,)
output = call_5159
func_5162 = relay.Function([var_5160,var_5161,], output)
mutated_mod['func_5162'] = func_5162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3178_call = mod.get_global_var('func_3178')
func_3180_call = mutated_mod.get_global_var('func_3180')
call_5189 = relay.TupleGetItem(func_3178_call(), 0)
call_5190 = relay.TupleGetItem(func_3180_call(), 0)
output = call_5189
output2 = call_5190
func_5193 = relay.Function([], output)
mod['func_5193'] = func_5193
mod = relay.transform.InferType()(mod)
mutated_mod['func_5193'] = func_5193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5193_call = mutated_mod.get_global_var('func_5193')
call_5194 = func_5193_call()
output = call_5194
func_5195 = relay.Function([], output)
mutated_mod['func_5195'] = func_5195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5230 = relay.var("var_5230", dtype = "uint8", shape = (5, 1, 6))#candidate|5230|(5, 1, 6)|var|uint8
const_5231 = relay.const([[[-3,9,-2,-4,-8,8],[6,4,4,7,-6,6],[-7,-8,8,-1,1,-3],[-8,-8,7,-2,-2,1],[10,7,-8,-4,7,-6],[-5,8,-10,9,-9,-6],[-4,3,5,-3,9,-2],[2,4,1,-6,8,2],[-6,7,1,4,-2,-1],[-9,3,-4,-7,-3,8],[2,10,-10,7,5,-1],[-7,-2,-2,-7,9,10],[-5,10,9,-1,3,-10],[-4,-7,1,5,-5,-1]],[[2,-7,-6,-2,4,-8],[-1,-4,8,5,9,3],[2,-1,7,-3,8,7],[6,6,3,-3,-2,-1],[10,-4,-10,10,7,10],[-3,-10,-2,8,8,6],[-7,8,-7,-4,4,6],[7,7,-9,-7,-9,-5],[5,7,-7,-5,-5,8],[1,-8,9,1,2,-9],[5,5,-4,5,4,-3],[6,-7,-2,-2,6,7],[4,1,-6,-6,8,-6],[-2,2,-4,8,2,2]],[[10,-6,-4,2,-1,-5],[-5,9,-2,8,8,1],[4,4,5,-1,-10,1],[-9,3,6,-8,-10,-6],[2,8,3,-1,-7,6],[-1,-4,3,-6,-8,4],[-8,5,-1,-2,-5,4],[8,-7,-10,-4,10,-3],[-7,7,9,-9,6,-7],[-7,10,7,-9,9,9],[-7,-2,5,9,-6,7],[-10,4,-2,-2,2,-10],[8,-6,-5,8,-10,-10],[10,6,10,3,10,5]],[[-10,1,-1,-3,-2,5],[3,-3,6,7,5,-1],[-7,-4,-2,8,-5,6],[-2,4,7,3,-5,-5],[10,-8,-7,9,-3,-10],[-1,9,-9,-2,5,5],[7,3,4,4,2,-8],[-9,3,-1,9,1,-8],[6,-1,7,-2,-4,8],[-5,-2,2,-3,9,7],[1,2,5,-4,3,1],[-1,-6,-9,5,-7,-10],[8,-2,-1,9,-4,-4],[4,-9,1,-6,-4,-9]],[[7,9,-2,-2,2,9],[2,3,-10,6,-5,10],[-4,10,9,3,7,1],[-2,-2,-9,-8,-1,-9],[-10,-7,-10,2,-1,4],[-6,-7,2,2,1,8],[7,4,-9,-10,-10,5],[-2,-5,-1,-5,9,-10],[10,-3,-8,-2,7,6],[1,-4,-3,-10,-5,-1],[8,-3,-8,8,-7,-10],[3,3,-9,7,-4,-10],[1,-5,-7,-3,2,1],[-9,9,-1,-2,-10,6]]], dtype = "uint8")#candidate|5231|(5, 14, 6)|const|uint8
bop_5232 = relay.subtract(var_5230.astype('uint8'), const_5231.astype('uint8')) # shape=(5, 14, 6)
output = bop_5232
output2 = bop_5232
func_5250 = relay.Function([var_5230,], output)
mod['func_5250'] = func_5250
mod = relay.transform.InferType()(mod)
var_5251 = relay.var("var_5251", dtype = "uint8", shape = (5, 1, 6))#candidate|5251|(5, 1, 6)|var|uint8
output = func_5250(var_5251)
func_5252 = relay.Function([var_5251], output)
mutated_mod['func_5252'] = func_5252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mod.get_global_var('func_4791')
func_4793_call = mutated_mod.get_global_var('func_4793')
call_5257 = relay.TupleGetItem(func_4791_call(), 2)
call_5258 = relay.TupleGetItem(func_4793_call(), 2)
output = relay.Tuple([call_5257,])
output2 = relay.Tuple([call_5258,])
func_5277 = relay.Function([], output)
mod['func_5277'] = func_5277
mod = relay.transform.InferType()(mod)
output = func_5277()
func_5278 = relay.Function([], output)
mutated_mod['func_5278'] = func_5278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3680_call = mutated_mod.get_global_var('func_3680')
call_5293 = relay.TupleGetItem(func_3679_call(), 0)
call_5294 = relay.TupleGetItem(func_3680_call(), 0)
output = call_5293
output2 = call_5294
func_5300 = relay.Function([], output)
mod['func_5300'] = func_5300
mod = relay.transform.InferType()(mod)
mutated_mod['func_5300'] = func_5300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5300_call = mutated_mod.get_global_var('func_5300')
call_5301 = func_5300_call()
output = call_5301
func_5302 = relay.Function([], output)
mutated_mod['func_5302'] = func_5302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5315 = relay.var("var_5315", dtype = "float64", shape = (1, 5, 8))#candidate|5315|(1, 5, 8)|var|float64
uop_5316 = relay.acosh(var_5315.astype('float64')) # shape=(1, 5, 8)
output = relay.Tuple([uop_5316,])
output2 = relay.Tuple([uop_5316,])
func_5321 = relay.Function([var_5315,], output)
mod['func_5321'] = func_5321
mod = relay.transform.InferType()(mod)
var_5322 = relay.var("var_5322", dtype = "float64", shape = (1, 5, 8))#candidate|5322|(1, 5, 8)|var|float64
output = func_5321(var_5322)
func_5323 = relay.Function([var_5322], output)
mutated_mod['func_5323'] = func_5323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mod.get_global_var('func_4791')
func_4793_call = mutated_mod.get_global_var('func_4793')
call_5327 = relay.TupleGetItem(func_4791_call(), 1)
call_5328 = relay.TupleGetItem(func_4793_call(), 1)
func_4658_call = mod.get_global_var('func_4658')
func_4661_call = mutated_mod.get_global_var('func_4661')
const_5330 = relay.const([True,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False], dtype = "bool")#candidate|5330|(180,)|const|bool
call_5329 = relay.TupleGetItem(func_4658_call(relay.reshape(const_5330.astype('bool'), [180,])), 1)
call_5331 = relay.TupleGetItem(func_4661_call(relay.reshape(const_5330.astype('bool'), [180,])), 1)
func_2041_call = mod.get_global_var('func_2041')
func_2044_call = mutated_mod.get_global_var('func_2044')
var_5340 = relay.var("var_5340", dtype = "uint64", shape = (4, 364))#candidate|5340|(4, 364)|var|uint64
call_5339 = relay.TupleGetItem(func_2041_call(relay.reshape(var_5340.astype('uint64'), [16, 13, 7]), relay.reshape(var_5340.astype('uint64'), [16, 13, 7]), ), 0)
call_5341 = relay.TupleGetItem(func_2044_call(relay.reshape(var_5340.astype('uint64'), [16, 13, 7]), relay.reshape(var_5340.astype('uint64'), [16, 13, 7]), ), 0)
output = relay.Tuple([call_5327,call_5329,const_5330,call_5339,var_5340,])
output2 = relay.Tuple([call_5328,call_5331,const_5330,call_5341,var_5340,])
func_5365 = relay.Function([var_5340,], output)
mod['func_5365'] = func_5365
mod = relay.transform.InferType()(mod)
mutated_mod['func_5365'] = func_5365
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5366 = relay.var("var_5366", dtype = "uint64", shape = (4, 364))#candidate|5366|(4, 364)|var|uint64
func_5365_call = mutated_mod.get_global_var('func_5365')
call_5367 = func_5365_call(var_5366)
output = call_5367
func_5368 = relay.Function([var_5366], output)
mutated_mod['func_5368'] = func_5368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_5388 = func_4103_call()
call_5389 = func_4103_call()
uop_5390 = relay.atan(call_5388.astype('float64')) # shape=(9, 5, 7)
uop_5392 = relay.atan(call_5389.astype('float64')) # shape=(9, 5, 7)
func_4754_call = mod.get_global_var('func_4754')
func_4756_call = mutated_mod.get_global_var('func_4756')
call_5398 = func_4754_call()
call_5399 = func_4754_call()
output = relay.Tuple([uop_5390,call_5398,])
output2 = relay.Tuple([uop_5392,call_5399,])
func_5402 = relay.Function([], output)
mod['func_5402'] = func_5402
mod = relay.transform.InferType()(mod)
output = func_5402()
func_5403 = relay.Function([], output)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5411 = relay.var("var_5411", dtype = "int16", shape = (10, 16, 11))#candidate|5411|(10, 16, 11)|var|int16
var_5412 = relay.var("var_5412", dtype = "int16", shape = (10, 16, 11))#candidate|5412|(10, 16, 11)|var|int16
bop_5413 = relay.less(var_5411.astype('bool'), relay.reshape(var_5412.astype('bool'), relay.shape_of(var_5411))) # shape=(10, 16, 11)
output = relay.Tuple([bop_5413,])
output2 = relay.Tuple([bop_5413,])
func_5423 = relay.Function([var_5411,var_5412,], output)
mod['func_5423'] = func_5423
mod = relay.transform.InferType()(mod)
mutated_mod['func_5423'] = func_5423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5423_call = mutated_mod.get_global_var('func_5423')
var_5425 = relay.var("var_5425", dtype = "int16", shape = (10, 16, 11))#candidate|5425|(10, 16, 11)|var|int16
var_5426 = relay.var("var_5426", dtype = "int16", shape = (10, 16, 11))#candidate|5426|(10, 16, 11)|var|int16
call_5424 = func_5423_call(var_5425,var_5426,)
output = call_5424
func_5427 = relay.Function([var_5425,var_5426,], output)
mutated_mod['func_5427'] = func_5427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_5463 = func_4103_call()
call_5464 = func_4103_call()
output = relay.Tuple([call_5463,])
output2 = relay.Tuple([call_5464,])
func_5488 = relay.Function([], output)
mod['func_5488'] = func_5488
mod = relay.transform.InferType()(mod)
mutated_mod['func_5488'] = func_5488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5488_call = mutated_mod.get_global_var('func_5488')
call_5489 = func_5488_call()
output = call_5489
func_5490 = relay.Function([], output)
mutated_mod['func_5490'] = func_5490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4754_call = mod.get_global_var('func_4754')
func_4756_call = mutated_mod.get_global_var('func_4756')
call_5493 = func_4754_call()
call_5494 = func_4754_call()
output = call_5493
output2 = call_5494
func_5504 = relay.Function([], output)
mod['func_5504'] = func_5504
mod = relay.transform.InferType()(mod)
mutated_mod['func_5504'] = func_5504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5504_call = mutated_mod.get_global_var('func_5504')
call_5505 = func_5504_call()
output = call_5505
func_5506 = relay.Function([], output)
mutated_mod['func_5506'] = func_5506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mod.get_global_var('func_4736')
func_4738_call = mutated_mod.get_global_var('func_4738')
call_5542 = relay.TupleGetItem(func_4736_call(), 0)
call_5543 = relay.TupleGetItem(func_4738_call(), 0)
func_4373_call = mod.get_global_var('func_4373')
func_4374_call = mutated_mod.get_global_var('func_4374')
call_5566 = relay.TupleGetItem(func_4373_call(), 0)
call_5567 = relay.TupleGetItem(func_4374_call(), 0)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
const_5573 = relay.const([10,10,-4,-4,-5,7,6,7,1,1,6,3,-10,1,1,1,-9,7,-9,8,-9,-5,-1,4,8,9,-5,-7,1,6,-4,-5,6,-8,-4,-1,1,7,8,4,-7,4,-9,6,7,-2,-10,5,9,-3,2,-6,-7,5,-2,-5,-3,-2,8,-2,3,7,9,9,9,-10,3,-4,-7,-10,-7,2,2,4,-4,-6,-10,-10,6,6,-1,-6,2,-7,-6,-2,1,-7,-7,-2,9,10,10,-8,-9,-2,3,-5,8,6,10,-9,1,4,8,9,-4,7,-8,2,9,8,-4,7,-4,5,2,-4,1,10,-4,7,9,3,6,5,-9,-9,5,-4,10,4,3,-4,-4,4,-5,-5,2,2,-3,-5,-9,7,10,-2,3,4,-3,-10,3,6,-2,10,1,4,-8,-8,1,10,9,4,9,-7,6,-1,9,5,-8,-7,-9,-3,-8,-6,8,-2,2,-10,4,5,-5,7,2,7,-10,-9,5,-6,2,-6,9,-9,4,2,-5,9,3,-5,-9,5,9,10,5,-9,-9,-9,-2,9,-6,-5,-8,-10,-2,6,-9,3,-6,-10,-9,9,-3,-6,5,-3,6,3,-4,-7,-9,-8,-5,-4,3,1,6,-10,10,-6,-1,7,8,-5,2,9,-4,-10,7,9,2,2,4,7,-7,-9,9,-10,-6,9,7,-9,-4,-2,-7,-1,-3,-4,-4,-10,-1,1,-5,-9,6,-8,8,3,-8,-5,8,-1,10,7,-6,4,6,-9,6,9,-8,2,4,-7,2,9,-9,-10,-8,10,-6,1,-10,2,-8,6,9,1,-5,10,-2,7,9,-10,-4,3,9,-1,-4,-4,7,-8,10,-2,10,4,10,5,9,-8,-10,-3,5,-7,-1,3,3,-4,3,-1,5,6,7,5,-1,-8,-4,-9,9,9,-8,-5,6,-5,-5,-3,-2,-6,-2,-4,5,-3,7,9,-9,5,1,-8,9,-5,2,5,-8,-4,3,3,-3,7,8,3,2,-5,-8,-1,10,3,5,7,-2,-4,-10,1,5,3,-3,1,4,10,10,-3,7,-4,6,6,4,-3,8,10,-3,7,9,3,5,-7,5,9,6,4,5,-1,9,7,-7,1,10,-6,-7,4,2,-10,1,-9,-1,10,3,8,3,-1,2,2,1,3,-7,-1,8,6,-9,8,-7,9,-10,-2], dtype = "int64")#candidate|5573|(450,)|const|int64
var_5574 = relay.var("var_5574", dtype = "int32", shape = (40,))#candidate|5574|(40,)|var|int32
const_5575 = relay.const([7,10,-5,8,-2,1,-10,-1,1,10,-6,8,6,8,4,-6,-1,9,-9,-8,-5,1,9,4,-9,-9,-5,-2,-6,-1,-6,-3,3,-4,8,3,2,-9,-4,-10,9,-2,6,-7,8,5,7,2,-10,2,10,-3,9,-3,7,8,5,-10,7,7,7,1,10,6,2,9,-3,-4,4,-5,-5,7,-6,2,6,1,1,-9,-7,-2,3,1,-6,8,4,-1,10,-8,-4,-10,-10,-4,-2,4,8,-8,-9,-6,-4,5,2,7,-1,-6,7,-5,-8,-8,2,8,7,-10,7,-1,2,10,-1,4,4,-9,8,8,3,-6,5,2,2,-10,7,9,-9,-1,-6,4,-9,-2,7,2,-3,4,4,4,7,4,-5,-3,-4,7,-3,1,-6,-8,-3,2,1,-6,1,3,-3,-3,-2,5,3,5,6,6,8,-4,4,-9,-3,2,-6,-3,-3,-9,3,2,-7,1,-4,-5,1,-5,7,-2,8,6,10,-3,6,-8,6,-4,-7,-6,4,-5,-3,1,-2,-2,-8,4,-8,1,-9,-4,10,-7,4,8,-7,2,3,9,8,-6,10,2,-7,3,-1,10,-4,8,2,-4,1,8,1,7,-1,-6,3,10,-1,5,-7,-3,1,8,9,4,-10,-4,-2,-2,6,-5,-4,-10,-7,6,9,6,3,5,6,2,2,6,-6,8,-4,2,9,4,-8,-1,-2,-9,8,4,3,-9,1,8,6,9,10,-10,5,6,-6,10,-5,2,-5,7,-2,3,-4,3,9,-1,-5,-2,7,-4,7,3,-5,7,-1,5,3,-9,9,8,-5,-8,10,-1,-8,-3,10,-8,1,2,2,-7,5,3,-9,-3,7,-5,1,-7,-2,7,4,-7,-3,-7,6,9,10,-7,-10,-3,4,-8,-3,-6,-3,9,8,-4,-4,-5,5,-4,-5,-3,-3,-4,4,2,6,4,-10,-9,-6,-3,-6,-3,-2,5,9,-4,6,-1,-9,10,2,-7,7,-5,10,5,6,-6,-4,8,9,-10,-10,-5,-4,4,-9,10,-8,-8,1,-4,-1,5,-9,3,-5,-5,1,-1,5,3,-8,-9,-6,-5,-2,3,-7,-1,3,8,-6,-10,3,2,-9,-3,7,-3,2,-9,-7,10,-3,2,-4,2,3,6,3,5,4,1,1,4,2,-8,8,-4,-8,6,9,1,-2,-8,-9,-9,1,4,-3,-5,-10,7,8,8,8,-7,4,8,7,2,-7,8,-10,9,-1,-2,7,10,1,-1,-3,-7,-6,-4,-1,10,-7,7,3,3,-2,4,4,-5,1,5,2,-1,-7,5,1,-7,6,-6,-1,2,5,3,7,6,3,1,5,6,-7,1,10,4,3,-6,10,8], dtype = "int32")#candidate|5575|(520,)|const|int32
call_5572 = relay.TupleGetItem(func_1069_call(relay.reshape(const_5573.astype('int64'), [2, 15, 15]), relay.reshape(var_5574.astype('int32'), [40,]), relay.reshape(const_5575.astype('int32'), [520,]), ), 3)
call_5576 = relay.TupleGetItem(func_1073_call(relay.reshape(const_5573.astype('int64'), [2, 15, 15]), relay.reshape(var_5574.astype('int32'), [40,]), relay.reshape(const_5575.astype('int32'), [520,]), ), 3)
output = relay.Tuple([call_5542,call_5566,call_5572,const_5573,var_5574,const_5575,])
output2 = relay.Tuple([call_5543,call_5567,call_5576,const_5573,var_5574,const_5575,])
func_5597 = relay.Function([var_5574,], output)
mod['func_5597'] = func_5597
mod = relay.transform.InferType()(mod)
mutated_mod['func_5597'] = func_5597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5598 = relay.var("var_5598", dtype = "int32", shape = (40,))#candidate|5598|(40,)|var|int32
func_5597_call = mutated_mod.get_global_var('func_5597')
call_5599 = func_5597_call(var_5598)
output = call_5599
func_5600 = relay.Function([var_5598], output)
mutated_mod['func_5600'] = func_5600
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5605 = relay.const([[[-4.441921,-6.678091,-6.712613,4.365832,-2.259115,1.381076,-9.755202,-3.549656,-5.542778,7.388004,-1.519736,4.082702,5.177837]],[[-6.196989,2.839556,-9.657815,3.785109,-3.521440,3.476607,-4.954184,6.882585,4.725726,5.838004,0.376867,-9.612525,-8.048970]]], dtype = "float32")#candidate|5605|(2, 1, 13)|const|float32
uop_5606 = relay.atanh(const_5605.astype('float32')) # shape=(2, 1, 13)
func_1360_call = mod.get_global_var('func_1360')
func_1363_call = mutated_mod.get_global_var('func_1363')
const_5623 = relay.const([-2.830820,-5.647317,8.282939,7.207479,-1.927971,5.018917,-6.707728,-2.233135,6.776469,-5.661509,-5.982090,-1.334545,2.767719,-9.892672,-4.246955,0.596431,1.506580,4.021070,-9.453742,8.871264,5.159548,6.980309,-3.760106,5.749269,-3.439946,9.455605,-7.679281,-4.904695,-1.024486,-8.451519,-0.404479,0.952746,4.264357,-3.631678,2.228389,-5.157293,2.086766,-9.660118,9.765984,1.037130,-8.732539,9.322597,8.506396,-3.783587,-2.429883,-8.483836,3.620862,-2.273977,-6.195857,-3.351275,-2.365248,9.649124,-0.870313,-5.438301,9.751244,-3.002997,-9.426877,-2.685756,9.682952,4.667751,-1.082696,-6.102230,2.580346,-3.917981,0.645755,-2.310216,-1.770116,5.098686,9.778278,-7.503039,-9.240249,-1.916000,-1.646778,-6.451020,-7.307794,4.828394,6.220904,-0.759845,4.133511,8.803995,0.369937,-0.684611,9.517557,4.996976,9.953577,9.253803,-7.130448,7.018553,-8.686758,-9.750121,3.748712,0.515963,6.221444,-4.064878,0.985904,7.616852,0.196842,-3.222890,-2.377337,5.129071,7.033944,7.686993,7.410582,2.073657,-4.993910,-4.960275,7.845676,-9.457246,9.362331,2.207570,-1.832493,2.305690,1.567472,-1.197224,6.076254,1.775273,-9.798422,-9.094008,9.142658,-2.565251,6.142537,-1.404257,-2.153743,5.517901,1.518107,-1.816855,-1.439291,4.254375,7.131164,2.878008,5.816169,-4.406645,1.311952,5.406011,-1.944819,-6.610716,-5.697537,-0.792290,1.493054,-0.098775,0.064816,7.446035,6.445646,1.978593,-4.709244,5.214297,9.179393,-9.648232,7.693067,-1.967710,7.395248,2.236125,9.400157,-1.693633,-5.284030,1.633984,-4.972321,4.390339,5.277362,-0.978546,2.974626,4.776581,6.585726,1.657781,-4.417563,-8.410060,-7.331917,7.387862,-7.244706,-6.091764,1.813833,-7.723538,-9.756293,7.345451,-8.677465,-8.501501,2.986619,-6.354471,5.496356,1.627587,3.693322,7.818817,-1.697057,8.813462,-2.151176,2.168971,9.313153,1.517950,2.777869,1.358736,9.025411,2.139080,-4.334184,3.330083,1.445963,2.824292,5.488037,-0.899719,9.324281,-4.411558,2.942004,6.469120,7.887611,4.115639,1.616906,-4.216972,-2.803062,-6.842935,6.386146,-9.864079,-1.952373,-4.988226,-1.309048,5.375673,-3.858164,7.585139,9.927408,6.700817,-2.889150,0.823932,7.024081,-9.136078,8.252969,-2.896180,-5.995805,9.685823,-0.453434,-2.664761,-4.459434,9.035906,0.728674,5.091854,4.132818,4.319609,7.147618,-5.749170,-9.878127,-1.314386,2.736407,6.696006,1.697468,-5.788528,-5.247476,-5.035255,0.434334,4.633126,-7.426427,0.924977,6.667687,8.648091,-0.408753,-8.539017,-7.968946,-6.968916,0.553961,-4.494552,2.401967,9.978515,0.495868,-9.588683,5.761892,-9.927544,-8.024378,3.241816,-2.058780,-8.583574,-3.706906,-3.762497,9.656045,-5.056008,-7.603161,7.778710,-3.005709,2.190413,-7.242386,-8.047294,8.194185,-7.754658,-9.324973,-3.209815,-4.245428,9.984965,2.768999,-5.894935,4.528455,5.245236,8.198964,1.896030,2.265918,3.311865,-0.822446,6.062431,-2.332454,-8.112986,-8.488229,-6.564051,0.002654,7.455345,6.972068,-4.197209,3.350237,-8.537129,-7.616957,-0.734133,-5.282700,-5.157573,1.415558,-0.257650,8.231472,-5.993554,1.430729,-0.677388,8.805648,9.914166,7.643730,9.323643,-8.407182,8.068250,2.515792,-4.451440,-8.356136,-4.211437,9.683774,9.497740,6.285512,-3.509191,-6.866209,-0.740341,-3.293047,-9.180342,5.062667,-6.855461,8.276498,-6.787113,3.690710,-3.456597,1.802117,1.496110,-4.184687,1.054285,9.032552,-8.824472,5.503931,0.918485,5.842108,2.879046,8.867579,-0.999492,-3.559744,7.779135,8.581924,8.645444,-4.072847,0.430315,3.760350,8.444135,-3.326984,3.941332,-6.892077,-2.939070,-4.936883,-5.077091,8.832457,2.314112,5.088628,-0.187568,-7.484391,-8.708406,-0.894943,7.549424,-5.742379,-5.020975,6.922291,-6.776944,-2.920664,4.670133,5.945927,-6.786425,-8.132419,-0.834796,-4.795565,-8.318776,-7.822044,-0.841179,0.734114,-2.240234,-1.877979,-3.895525,-0.597287,8.514579,5.644811,-6.191584,-5.646906,-9.916609,-5.709983,-3.183668,7.205288,1.112327,4.593577,-6.906037,-2.794657,5.757038,-9.823601,-6.694087,-8.994723,4.656278,-0.860004,-4.873770,4.801258,5.226865,7.423091,-0.838551,-1.585761,-4.754544,2.957202,-4.401797,-9.052265,-2.427071,-6.782118,3.547632,-7.215372,-5.467035,-5.278524,4.397414,4.703818,8.707679,9.505320,4.444711,-9.568629,9.116892,5.157600,9.056687,8.297940,-3.744745,-6.322504,7.834498,-1.337739,6.684662,-7.987891,-2.620011,3.245242,7.529967,-1.448377,-2.806599,-7.544715,-5.373752,-6.554681,9.797536,-2.110887,6.799428,-4.971596,0.850305,-5.483071,1.683597,-4.399005,8.519450,-7.898539,-2.865757,8.651430,6.081920,-1.414929,9.779078,8.477619,5.156437,-3.464463,-6.446255,2.261217,-9.061008,-7.652030,-1.384657,4.922953,-4.442691,-2.123288,-6.417482,2.915034,-1.716820,-2.836873,-2.372011,-7.397097,5.290513,-4.774469,2.151914,0.271259,-9.854760,-7.520829,-5.728382,-2.123298,8.479871,8.397112,-1.127280,7.813185,5.312131,1.229153,4.558677,3.487222,-1.821793,-1.010666,9.483331,1.719255,9.650534,-1.770656,-8.067839,-4.980635,-2.700370,7.440261,-1.227009,3.098131,-1.794730,-3.009517,-8.653476,-0.102894,6.222894,3.986212,2.960622,-9.156956,-7.847054,-5.626347,0.299368,-8.606159,9.763101,8.524722,-1.879540,7.345243,2.017223,-3.626101,7.290221,-9.272530,5.660232,7.152421,4.199277,0.715994,-0.051968,-2.363640,-4.291776,4.067133,-4.566957,1.985448,0.293023,-6.267729,-0.092608,1.004670,0.624423,4.370711,9.218891,3.874290,-6.457155,-0.159144,7.366575,2.059957,4.229636,6.783768,2.074578,-9.907416,9.673476,5.940947,5.491121,6.218969,-3.893102,4.945581,9.585805,-7.754964,5.354952,-5.708623,9.032032,-9.501975,2.510724,0.046786,-3.336721,5.845649,-2.794611,-4.722481,4.662783,-3.267196,-7.287040,8.536528,5.323344,1.970044,-4.377616,4.171340,5.580249,-7.898180,0.923085,9.636768,1.081120,8.424583,8.418393,3.793003,2.121094,6.793415,8.792370,6.196866,-7.175966,8.749975,-9.540345,5.709616,-0.134838,-2.527540,2.070274,-9.056699,6.562814,-8.427246,4.701269,8.142238,2.194450,-4.396455,-5.675084,3.468993,-6.967149,6.130484,1.881892,8.380352,1.335208,8.037612,5.671542,4.067708,8.910317,-8.162038,-3.846193,1.792707,-4.066636,-7.184474,4.699473,0.422014,5.199625,0.723309,6.733915,-7.157892,-8.258471,6.084131,2.632809,-1.848534,-8.269038,7.326314,1.948278,9.763662,-8.716667,-0.552247,5.843528,-8.923546,-9.840953,-9.408920,-5.266624,-2.815626,-5.712711,-4.063356,6.514331,9.105049,0.467670,-7.226618,2.889314,-7.310087,3.492261,-8.665235,3.155974,6.275863,-4.700961,7.495271,2.108911,0.656937,-2.166607,7.858780,8.830315,5.562136,-9.336853,2.147253,4.270018,9.480554,-4.906943,-6.122158,-2.699131,8.600012,0.365080,7.617853,6.606668,-2.035197,8.133822,9.108385,-8.979515,5.431083,-1.152278,1.571571,8.656473,-1.534966,-9.143648,3.455726,7.345867,0.482926,0.315762,5.066396,2.692396,-5.816593,1.561304,8.925433,0.588853,-2.101444,0.234278,0.059020,7.630282,-8.032580,-5.050517,-2.740083,0.806151,-0.734942,3.627769,9.871131,-5.829891,6.055420,9.041655,3.524133,1.725013,-4.258051,7.177321,7.787000,1.100857,-3.277932,1.350754,6.694042,-7.546337,-3.019710,5.850369,9.864278,2.316782,-2.948558,6.269810,3.527255,3.044662,-4.013492,-8.005816,6.352538,7.039897,6.208295,4.555630,7.840218,8.187744,3.686178,3.783875,-5.520633,1.026458,4.459071,-9.361602,4.209786,-4.434669,0.190125,-7.876219,2.452538,-6.569939,-7.176165,2.374571,-6.582728,7.983857,-4.118731,-8.010847,-8.374019,4.691127,-8.903065,-2.934068,0.998332,6.663258,6.529153,-8.125080,-0.564260,-9.915715,-1.571273,-6.712159,-2.143107,-1.426871,5.603633,0.712023,-4.872501,9.739013,-2.302382,-4.544446,9.562996,-0.277660,3.380539,7.213930,-2.408603,7.276467,8.160179,8.965783,8.503656,-4.951487,-3.541861,-2.605580,-2.852056,0.058217,-7.041707,4.017586,-4.878123,-6.463314,-1.827944,3.733244,7.908025,9.704209,-0.878562,-9.344976,-9.777457,-8.578092,-8.515571,7.145813,5.382138,-4.397466,-1.255876,6.186176,0.667088,4.032227,8.171646,-4.735407,3.049410,4.349688,-7.442837,7.250996,0.236740,0.366830,7.104897,-1.918268,-4.958187,-1.933271,-9.451618,6.842923,8.004205,3.858852,8.515275,-4.171743,9.147287,-7.507179,1.761255,-6.092121,-7.439677,1.036726,-8.020822,-0.566699,-0.516211,-5.000917,-0.415026,-6.651668,-6.173670,-1.888869,-8.418662,-3.461387,-0.301391,8.872580,-4.279527,-5.626705,-3.561072,-4.369412,-7.601600,0.874666,2.160289,9.528348,0.854682,-3.299410,-4.651894,3.020472,2.475693,-0.656442,-3.168245,6.170769,-4.419824,0.467452,8.267095,9.943134,-1.137428,-6.051366,-5.094525,5.762914,-4.967869,4.041528,-5.616113,6.207709,-2.520444,-8.496532,8.874790,-6.105035,2.986993,-3.145343,9.944571,-4.533748,-4.586779,-2.058148,2.154603,-5.129234,8.597133,-9.925634,-9.003173,3.077143,1.455173,-4.764668,8.034517,-6.171201,-1.727626,-2.297923,5.927376,-0.022699,4.350403,-0.317363,-5.905163,-6.467568,8.244393,-0.972682,-8.068616,-1.067080,6.056941,8.043305,5.700192,9.713167,-7.734369,-7.382392,5.530894,-4.652179,7.402857,3.385466,5.038185,9.135943,-1.675840,7.247403,9.943348,-8.553415,-1.610082,3.462971,-0.274249,1.325541,-8.696542,-0.699497,-4.699587,0.163614,7.972600,-0.217943,-5.116565,2.641031,5.495469,-6.882655,5.700201,1.796981,-5.262436,7.524458,5.765823,4.220748,-2.739909,7.113348,-2.924312,-7.064472,2.122960,7.456189,-4.945433,-3.618050,0.035203,-5.190726,-2.603740,-5.769746,1.634052,3.512472,-5.775557,-4.029785,-6.855865,-9.625996,-5.574289,-3.913935,6.889938,-3.375117,7.014284,6.570993,0.021821,0.231999,3.321852,-1.254957,6.739617,6.670301,-3.306193,4.033772,-4.290550,-1.599957,-3.493550,-4.765310,-3.152601,-4.192037,-1.421135,-7.988423,7.955298,4.528477,5.587712,6.348812,6.517465,-5.975351,7.088578,-6.441612,1.472496,-6.237894,3.071656,5.931841,7.962990,7.444973,8.826361,5.199821,3.975679,1.765450,-0.715988,-1.635797,-5.257990,-1.663670,-8.869623,1.926743,1.507056,5.606533,-7.646369,-6.741822,-9.905019,2.010054,5.827039,4.452793,1.554816,7.162859,1.994703,7.745287,-4.493493,0.213596,-5.071027,2.790164,8.603753,3.921685,7.856827,0.083465,0.781810,-6.266725,-0.331332,-6.675430,-8.989514,9.960619,2.713977,7.817035,-0.692469,-6.560646,7.245173,-9.153815,-3.385397,5.215911,4.252435,-3.326333,3.709401,2.496017,-5.280884,-1.996104,6.437465,-5.052196,-6.329757,9.884623,4.668167,-3.631459,7.901492,7.993474,-2.609801,0.907278,5.125744,-1.516952,-3.819647,-9.506040,2.634953,-2.623487,4.445255,2.571241,-4.127064,-6.790117,-0.953573,9.903277,-6.484773,-1.805404,6.146845,-4.983783,5.765311,7.625989,3.391384,-8.401734,-7.894268,9.531570,5.291644,-6.486501,6.547519,9.631414,7.843611,8.568553,2.349548,-8.248877,-2.741174,-6.626995,1.900028,2.441840,8.812846,-3.356759,-4.571891,0.994493,-4.724327,-1.182682,5.463076,-4.023399,-0.331341,-9.609493,6.155020,-9.231997,7.158810,5.063252,-3.886248,8.716978,-6.054010,-8.425194,-9.248747,-8.103438,2.744456,-4.570167,3.441560,1.753337,7.510664,1.511227,-4.795810,-0.819477,-3.423639,-3.137976,-3.883107,5.049139,0.818184,-0.806714,3.929353,7.985264,5.807152,2.714302,-6.958897,-8.685329,-6.938779,-0.026303,4.560902,6.783298,-3.115165,-4.520141,5.077072,7.148370,6.898387,-2.379878,-7.889119,5.772506,-4.479805,-2.382721,6.352673,-5.981673,8.073911,-8.328211,7.617233,-1.661522,-8.460455,-1.504335,-1.946277,-1.340280,2.174776,1.960426,-5.291986,0.111933,1.279555,3.442049,-8.261620,0.724958,-0.254202,-5.515412,9.456260,1.495281,-5.285165,6.327844,5.366128,-4.031955,9.230565,9.871049,1.663995,-8.880135,-1.179158,5.269372,8.185798,-6.282273,1.772485,6.892692,-9.982604,-1.051616,-3.771441,6.585049,8.793123,9.532231,8.159042,1.184244,4.508209,-1.668068,4.920573,1.499652,-5.378203,9.932211,-3.346288,-6.053887,9.530353,7.041913,-9.464530,-0.085343,3.090534,-2.451468,-6.075118,8.250971,9.423655,8.547916,6.655577,6.109976,8.133832,0.350445,3.877763,-4.350749,-0.913955,6.975983,-1.559502,8.282802,4.614566,4.631342,5.642536,4.705395,-2.094974,8.342517,1.741076,9.171978,0.595118,8.614574,-1.416016,-9.841164,8.443756,6.868870,6.135039,7.305964,1.919781,-8.689197,1.809202,2.247545,-0.732716,-3.644371,-6.480440,-0.333812,-9.921914,-3.061466,2.348137,-3.841408,-9.706441,2.199619,-4.721675,-2.123880,8.097707,-4.239949,0.693230,-6.860524,-8.423859,1.774251,-0.861189,9.678707,7.514736,9.694825,-7.127456,-2.290042,6.773317,-0.672790,-1.363577,8.636108,5.216171,2.778548,-9.733993,-8.277875,-8.833256,4.266913,-4.644606,9.647974,-2.603907,-0.070934,-5.275334,-7.594379,-5.402429,6.801767,2.158050,-5.503034,-1.650797,2.241215,4.090308,-8.697194,-6.615285,-4.818974,-7.713633,-5.273868,-8.986399,5.426276,7.079867,7.084119,-7.644875,9.033520,4.072445,-8.637028,8.534235,-8.308277,5.295362,-2.064909,-5.780100,-6.109649,-4.684374,-3.508254,-3.442071,-7.281095,7.845037,5.277208,-5.517614,5.537638,7.646315,-1.432395,-6.883527,2.069080,2.723679,5.303623,8.716275,-9.452613,-2.784703,-5.768220,-3.092387,0.868616,-7.692545,3.055984,9.614682,2.561287,-2.271561,2.004000,-9.314928,-0.158004,-1.936494,-1.312126,-6.040414,3.122469,3.134715,0.926113,-2.137985,8.061639,5.956343,-4.550040,6.858761,9.916531,7.512903,-4.555114,-3.264757,4.579447,-6.446513,-2.498103,-6.198280,-7.324714,3.760836,8.273932,-0.507214,1.389584,6.287510,-0.540118,2.469067,-9.200421,-8.726070,-1.928594,6.687050,5.429353,8.398163,-0.452296,3.362315,1.004385,-0.196572,8.548893,8.632070,6.744862,-7.079138,-5.487869,0.857110,-1.072789,0.405651,-6.548901,-1.960583,5.137392,7.084926,8.726580,-6.482861,-1.124028,5.770132,3.287675,-8.274425,2.871125,-2.911882,-4.031887,-4.487969,9.929553,5.122916,-8.078041,1.128552,-6.962409,-0.112664,9.975263,-2.975590,6.850444,0.421719,8.706151,0.366412,-0.938399,-6.383395,-1.684986,9.515414,-5.131074,8.721378,-4.378434,-3.168026,-4.656780,-3.664145,8.276270,3.935064,-7.802909,7.095599,-7.626230,-5.730116,-9.200376,4.462712,5.148810,-3.246076,2.156804,9.246428,-5.162738,-7.041339,-8.436203,5.615619,-6.784229,-5.746308,6.783961,-5.393456,3.679708,2.751196,0.910905,-1.009322,3.094507,-7.915974,-9.396000,6.194517,-8.518516,8.325019,-9.032632,-9.365333,7.870210,-7.752544,1.938174,-1.351460,9.945680,-8.520450,-6.813508,-2.069496,-6.049240,1.420929,-9.245568,2.071497,-9.537368,2.318692,5.471667,7.228730,-2.650917,-4.540995,-6.423530,-1.825713,-8.221243,-0.313562,3.203845,-3.192685,-4.817100,9.842121,-8.089840,3.623879,7.407359,-3.692960,-2.477375,-1.207806,4.443683,-0.805219,9.663471,4.999077,-2.868500,6.414523,-4.896700,7.074189,0.700248,9.856637,3.172003,-5.774385,6.487214,-1.399159,2.980997,5.256627,2.146681,-5.952470,-9.521905,-8.091094,-4.298844,7.593161,7.557505,5.982901,3.962772,8.073506,8.210234,8.957192,-7.923171,-1.612187,-5.386711,-1.953490,-4.661994,9.879720,-7.106215,4.583250,0.014236,-5.609753,4.232541,9.500011,-0.169793,8.425478,-4.230474,3.751901,-1.730475,-3.317736,7.461591,-0.259560,-4.413939,-5.494912,5.053076,4.598174,-1.930495,-9.836334,1.231605,-4.284935,-4.466914,2.341865,0.242726,2.302577,-3.754658,-6.689041,-7.527289,7.113235,-3.426667,1.850731,5.516647,-1.741736,-1.654175,3.024327,-0.141881,-5.992103,-0.337531,-9.884577,-9.072797,4.036691,6.165189,-6.692657,0.760233,-3.347336,0.463410,6.567180,-3.845496,1.087840,-6.008143,-8.362599,-0.843806,4.055826,-8.000944,-5.239016,8.513218,-5.161530,-9.433665,-3.344268,-8.403097,4.278302,3.052358,2.047078,2.789666,-9.142606,6.455424,-0.321669,2.720047,-5.427500], dtype = "float32")#candidate|5623|(1575,)|const|float32
call_5622 = func_1360_call(relay.reshape(const_5623.astype('float32'), [7, 15, 15]))
call_5624 = func_1360_call(relay.reshape(const_5623.astype('float32'), [7, 15, 15]))
bop_5631 = relay.not_equal(uop_5606.astype('bool'), relay.reshape(const_5605.astype('bool'), relay.shape_of(uop_5606))) # shape=(2, 1, 13)
func_3274_call = mod.get_global_var('func_3274')
func_3275_call = mutated_mod.get_global_var('func_3275')
call_5636 = relay.TupleGetItem(func_3274_call(), 0)
call_5637 = relay.TupleGetItem(func_3275_call(), 0)
uop_5641 = relay.cos(uop_5606.astype('float32')) # shape=(2, 1, 13)
output = relay.Tuple([call_5622,const_5623,bop_5631,call_5636,uop_5641,])
output2 = relay.Tuple([call_5624,const_5623,bop_5631,call_5637,uop_5641,])
func_5649 = relay.Function([], output)
mod['func_5649'] = func_5649
mod = relay.transform.InferType()(mod)
mutated_mod['func_5649'] = func_5649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5649_call = mutated_mod.get_global_var('func_5649')
call_5650 = func_5649_call()
output = call_5650
func_5651 = relay.Function([], output)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5193_call = mod.get_global_var('func_5193')
func_5195_call = mutated_mod.get_global_var('func_5195')
call_5652 = func_5193_call()
call_5653 = func_5193_call()
var_5656 = relay.var("var_5656", dtype = "float64", shape = (8, 6, 10))#candidate|5656|(8, 6, 10)|var|float64
bop_5657 = relay.divide(call_5652.astype('float32'), relay.reshape(var_5656.astype('float32'), relay.shape_of(call_5652))) # shape=(8, 6, 10)
bop_5660 = relay.divide(call_5653.astype('float32'), relay.reshape(var_5656.astype('float32'), relay.shape_of(call_5653))) # shape=(8, 6, 10)
output = bop_5657
output2 = bop_5660
func_5665 = relay.Function([var_5656,], output)
mod['func_5665'] = func_5665
mod = relay.transform.InferType()(mod)
var_5666 = relay.var("var_5666", dtype = "float64", shape = (8, 6, 10))#candidate|5666|(8, 6, 10)|var|float64
output = func_5665(var_5666)
func_5667 = relay.Function([var_5666], output)
mutated_mod['func_5667'] = func_5667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5300_call = mod.get_global_var('func_5300')
func_5302_call = mutated_mod.get_global_var('func_5302')
call_5693 = func_5300_call()
call_5694 = func_5300_call()
uop_5697 = relay.atanh(call_5693.astype('float64')) # shape=(9, 5, 7)
uop_5699 = relay.atanh(call_5694.astype('float64')) # shape=(9, 5, 7)
output = relay.Tuple([uop_5697,])
output2 = relay.Tuple([uop_5699,])
func_5700 = relay.Function([], output)
mod['func_5700'] = func_5700
mod = relay.transform.InferType()(mod)
output = func_5700()
func_5701 = relay.Function([], output)
mutated_mod['func_5701'] = func_5701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mod.get_global_var('func_4736')
func_4738_call = mutated_mod.get_global_var('func_4738')
call_5721 = relay.TupleGetItem(func_4736_call(), 0)
call_5722 = relay.TupleGetItem(func_4738_call(), 0)
func_4060_call = mod.get_global_var('func_4060')
func_4063_call = mutated_mod.get_global_var('func_4063')
const_5738 = relay.const([-8.090785,2.199499,-3.571684,-6.133026,7.545768,4.569672,8.142566,5.474807,1.640759,-2.799023,-3.837817,0.978129,-7.569416,-3.651849,8.626536,-7.663941,-9.603951,-9.435707,8.541595,6.734473,-4.007088,-8.375302,6.087907,7.763145,7.883299,6.753784,8.169561,-7.121392,-8.838317,0.676545,-7.676139,0.008731,3.987438,6.352516,-4.513103,9.637092,6.006488,-3.106183,-1.341637,2.976229,-6.899903,5.209660,8.625524,5.311001,-9.307587,4.046465,-5.558782,4.441918,-4.507434,-1.339557,5.836754,5.980623,8.696173,4.925605,0.984751,9.527561,-3.229513,9.192163,-1.299187,9.413136,2.312445,6.911039,-9.140285,-0.778765,9.985509,2.005905,-5.010318,8.678246,3.561435,9.122912,2.169029,-1.116755,4.331628,2.547145,-8.162023,3.923268,6.115547,8.436994,6.934823,8.315371,2.416898,-6.191639,5.698401,3.824429,-0.020956,-0.638683,-8.402959,6.896319,-9.267000,1.929164,-0.901583,8.615871,-0.616649,3.271332,-0.807244,-9.933343,8.909583,6.778639,9.274510,8.573702,-7.874858,2.923589,-2.137295,-5.622258,-4.655192,9.094624,-0.532128,-8.126456,-9.495274,0.846096,-7.371437,-5.282357,-1.131068,3.965993,-1.625973,7.058437,-4.164837,5.513485,-1.668572,1.739083,-7.482667,1.443731,2.706191,4.839003,1.058680,-0.117178,-9.952232,8.133148,7.957615,-1.004835,-2.888899,-5.487559,2.144903,5.731325,6.478070,-1.032142,-7.405397,6.689506,0.901801,9.966318,0.781153,5.800627,-3.524410,-9.075481,2.494609,7.294955,-1.547227,-9.255417,-8.795823,4.224066,-5.425011,9.341540,6.050447,3.841644,4.288142,1.353859,-7.393408,-6.918287,-8.877919,-1.344557,-4.185985,1.576109,8.994940,-5.894101,3.442977,-9.666485,5.510171,-7.795944,-8.025581,5.588442,-5.610360,-8.616294,2.609589,8.296645,8.142495,1.345489,-9.879629,-6.429247,-6.123648,8.359592,2.087265,-9.911702,8.935029,0.833180,-3.277824,9.829834,-1.094004,7.419308,-0.444409,2.465381,9.085020,0.893509,5.655540,4.124044,-2.885306,7.867663,-4.208137,-4.145468,8.197283,2.527759,7.157474,-9.991296,-2.585215,0.326266,3.302450,-7.460255,-4.373521,-3.159269,-2.535616,7.937600,-3.763735,-6.869464,-8.288533,-3.146252,-6.705060,2.427580,-0.750041,0.605734,-6.312673,6.613538,1.648638,-4.119265,-1.537307,8.707607,-5.301732,3.135046,-6.416362,-6.684114,0.278607,-7.081065,-0.770341,8.480135,5.379410,-8.126750,7.280583,7.892016,1.982129,-0.703905,-9.759046,-0.300488,9.729239,2.495808,5.957213,-6.910545,-7.162995,0.705334,5.069726,0.355531,0.135466,-6.961212,-6.144225,-6.681132,9.914430,2.390146,-5.592235,-3.913584,9.818829,1.765995,2.507263,3.392868,-3.677723,0.046772,2.935398,3.452103,-2.100965,-4.423833,5.035649,-7.465114,5.062214,4.700791,-4.319726,0.095675,8.900773,-5.258632,9.822577,5.486501,-1.504310,6.167505,4.948979,0.039180,-9.368111,-0.333171,-1.203406,-1.587605,-4.234479,2.692554,9.684183,5.350025,-5.074394,-9.480339,0.498727,2.359318,-0.281953,-1.034656,9.273440,2.688754,0.369515,-5.231141,-2.906693,3.862303,-7.243273,9.240139,-5.716036,-9.847693,3.546612,-8.239601,-1.733268,-0.668309,-5.091856,4.986959,-9.980205,7.655813,-6.845665,8.326056,-6.112737,-0.638987,-8.374177,-1.917891,-1.184919,4.365319,0.525666,-5.445784,4.967190,-3.848397,5.594560,-1.997207,-3.817329,8.273222,4.957690,-0.197526,-5.796102,-2.426401,-2.185881,5.550025,1.383341,-1.197299,-0.757682,6.824787,-9.269081,3.963995,9.080564,6.636874,4.494975,-8.702333,-3.111665,-1.740034,9.506342,3.706067,3.555070,-8.641824,2.468528,-3.511329,-6.526511,4.852813,8.723226,-4.165861,-8.372490,9.752352,1.093333,-6.014538,-6.736171,-4.445134,4.645407,2.007570,-7.739402,-1.075250,0.792587,7.599533,-2.033685,-2.314697,1.437354,-5.897917,-4.244504,7.144578,4.822422,5.849605,-3.497333,-8.593808,8.068792,-3.011424,0.113722,1.171430,3.799787,-9.359430,-3.524212,-7.045664,-6.487812,0.026072,-0.732067,-1.096631,3.927724,5.083301,1.954724,5.492534,8.003460,-2.723074,-1.000682,5.496151,-1.674806,2.718203,-0.844143,-3.766757,-1.889728,-0.488286,-8.248752,2.093567,-7.905788,0.764515,-8.708860,3.683824,-8.399206,-9.266663,7.626394,9.005369,-4.839330,-8.590490,-1.979193,8.716967,8.768143,0.784839,-0.112739,0.906920,5.398919,-9.880848,7.584856,5.985877,9.257624,0.607334,-1.265107,-1.362482,2.392157,2.741104,1.537631,1.518137,-6.159214,-1.290255,0.546557,-4.981974,-3.393264,-2.152872,-4.263422,2.254714,1.499943,-8.707978,1.333305,-6.077984,-8.408070,-2.862416,-2.644273,-2.165106,-4.117788,2.298205,-6.493641,-1.917250,-4.957334,-1.794381,4.199182,-5.745285,-1.597348,-3.782302,1.621989,4.784428,-0.268264,6.621255,8.583504,-0.963832,-6.973153,4.594725,1.469804,4.660128,-7.082896,-0.544900,-6.979972,-1.164873,1.361174,-7.592665,-2.505985,-2.487353,-4.189143,0.758541,5.010534,9.363909,-6.850692,-6.169552,3.688069,5.834995,-5.389572,1.958206,3.424930,2.220124,-1.023984,0.440386,5.501617,1.138325,-1.949024,2.327478,-5.731127,8.950128,2.262479,-1.294170,-3.040268,-7.310195,4.640128,8.513002,-1.730986,-0.377963,-9.132837,3.735599,0.523576,2.788151,6.810213,-6.460158,-1.701317,-9.759723,4.468704,-5.035146,0.563292,-1.576565,-1.277912,3.859661,9.303794,3.291749,2.117552,8.900209,7.453476,-1.201017,-7.630763,2.374355,3.446920,-8.125833,-4.099864,-3.050219,-1.196472,5.687401,-4.585406,0.086091,-9.282098,3.664292,9.455504,-6.983417,-3.345558,3.598025,4.163246,9.432460,8.579911,-1.597985,-7.146238,1.019273,0.829471,2.526673,0.955347,8.613330,0.766867,1.957025,-0.916235,0.089578,7.679096,4.601571,0.626240,7.915531,-0.089369,3.755466,-6.758402,9.046891,7.230594,7.477244,7.138037,-2.109822,2.310109,6.630345,8.489075,-5.487551,-5.359447,-8.746385,-8.081263,-6.541675,7.681798,4.610419,-1.455252,9.454313,1.952406,-8.452226,-1.920108,8.421371,-2.504701,3.655696,-6.338744,-7.199787,3.884600,-2.797892,-3.303047,-9.723533,-9.939073,2.322432,4.774803,-8.528809,3.092281,5.785907,3.330676,-7.591672], dtype = "float32")#candidate|5738|(600,)|const|float32
var_5739 = relay.var("var_5739", dtype = "float64", shape = (147, 2))#candidate|5739|(147, 2)|var|float64
call_5737 = relay.TupleGetItem(func_4060_call(relay.reshape(const_5738.astype('float32'), [6, 100]), relay.reshape(var_5739.astype('float64'), [294,]), ), 1)
call_5740 = relay.TupleGetItem(func_4063_call(relay.reshape(const_5738.astype('float32'), [6, 100]), relay.reshape(var_5739.astype('float64'), [294,]), ), 1)
func_5277_call = mod.get_global_var('func_5277')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_5742 = relay.TupleGetItem(func_5277_call(), 0)
call_5743 = relay.TupleGetItem(func_5278_call(), 0)
func_3642_call = mod.get_global_var('func_3642')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_5758 = relay.TupleGetItem(func_3642_call(), 1)
call_5759 = relay.TupleGetItem(func_3644_call(), 1)
output = relay.Tuple([call_5721,call_5737,const_5738,var_5739,call_5742,call_5758,])
output2 = relay.Tuple([call_5722,call_5740,const_5738,var_5739,call_5743,call_5759,])
func_5760 = relay.Function([var_5739,], output)
mod['func_5760'] = func_5760
mod = relay.transform.InferType()(mod)
var_5761 = relay.var("var_5761", dtype = "float64", shape = (147, 2))#candidate|5761|(147, 2)|var|float64
output = func_5760(var_5761)
func_5762 = relay.Function([var_5761], output)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4970_call = mod.get_global_var('func_4970')
func_4971_call = mutated_mod.get_global_var('func_4971')
call_5778 = relay.TupleGetItem(func_4970_call(), 1)
call_5779 = relay.TupleGetItem(func_4971_call(), 1)
func_4060_call = mod.get_global_var('func_4060')
func_4063_call = mutated_mod.get_global_var('func_4063')
const_5783 = relay.const([[-2.223092,0.285806,3.323699,-2.876987,-3.561925,3.765782,3.793263,4.884048,-7.276687,5.464573,-1.264313,8.743334,8.890448,-2.000705,2.715144,-2.495495,8.301017,7.164490,7.854538,7.022255,-5.171118,-6.165062,0.243160,5.814766,-8.308859,-8.920864,-0.567314,7.935525,0.724093,4.976720,9.362774,-6.185327,3.208389,-0.135309,-8.407424,1.687390,-2.840903,-2.305638,6.878667,-5.231392,-8.511822,-5.465656,-0.743024,-9.113982,5.926819,-0.176757,2.147420,4.733983,-5.368069,-4.643873,0.115783,-1.808268,7.061621,5.137250,-9.918763,-7.432432,-7.556742,0.593594,-5.841734,-3.098784,5.428417,-4.903805,-1.031413,-3.697476,0.929433,4.660747,-5.878317,3.087796,-1.985872,-1.714802,-1.146538,2.796057,7.892704,2.924393,-7.097003,5.118908,3.592649,3.355259,7.626730,-4.530879,-2.801656,7.790521,8.178198,-1.887952,2.396774,-2.974749,2.711421,-4.387732,-1.903143,-6.138185,-2.420135,6.710253,1.546348,8.367266,-7.078633,-7.330726,1.835452,3.139985,-4.297884,-5.700367],[-5.295657,4.055134,-3.937900,-1.078088,3.144954,5.957971,-5.938430,6.262914,8.825167,-0.504686,5.179569,-5.966416,-2.910300,3.806893,5.908300,-9.556138,2.009164,5.697097,8.586394,-0.749538,-4.576512,-6.042286,-8.871539,3.543572,-7.286570,0.920059,-5.207409,-5.053905,6.028669,7.902998,3.617891,-7.032455,6.593489,-1.716544,3.378396,6.418078,7.761192,-7.814120,-9.305025,4.926933,7.253852,-7.953628,2.118585,-1.793660,-2.207734,6.941720,4.555550,-3.335175,-0.842177,-8.932503,-4.490642,9.774999,2.417856,6.634437,1.067739,3.023806,-3.557857,-1.608897,-9.192785,-5.251329,-4.796523,5.578337,-7.568570,-4.808062,-0.079431,-9.369106,6.981263,-6.855885,-0.120117,-4.934491,1.406026,-1.898419,9.870691,6.638888,-1.345872,-8.164358,5.639380,-9.872735,-7.237946,-9.331561,6.842256,7.661532,6.237872,-4.769674,3.965988,0.198593,-9.681996,-7.348086,2.782003,7.355752,-9.280070,-8.779559,9.517672,1.829329,-3.330804,3.399858,-8.566571,-3.726000,-9.289791,7.886013],[3.020742,-3.787007,6.625395,7.435187,-0.330401,-1.183204,-1.407860,7.202455,0.372418,1.621321,-6.102587,-2.752608,3.754531,-8.814395,9.179000,-6.152349,2.517854,-9.457495,3.824837,0.428361,-5.584500,-9.373763,-3.037154,5.652283,-0.935059,1.118440,9.166705,-6.123203,-0.131063,-1.076543,-7.965430,-3.752536,-5.584067,-0.494076,-5.278547,1.756413,6.875847,-2.577862,6.372420,-8.985525,-2.571581,0.061383,7.842588,8.855154,-3.342644,6.726315,-1.457029,-6.210003,-8.705392,-9.119628,-9.147808,9.380411,-3.181368,-6.714723,4.035254,9.472678,-5.441532,7.863494,-9.951293,-9.563519,5.013590,-2.998557,5.125122,-1.377339,7.285118,7.058066,-2.028754,-5.738886,-2.737783,7.731875,7.817709,2.637478,2.918468,9.844976,2.045407,-7.727070,9.004967,-8.033060,-1.468671,-3.089174,-2.393375,9.702444,-1.801229,1.599387,-4.851377,5.386989,4.462687,-5.240293,3.439268,5.557107,2.582666,7.845810,-4.157879,9.263780,-7.428351,-0.896719,0.771568,-2.123030,2.416170,-8.115193],[-2.978323,6.066859,2.528259,-0.611152,2.046746,7.774963,9.176745,4.376982,5.515397,-3.282523,-1.539246,-6.710313,1.411106,-9.869056,-1.272943,-4.902821,-9.762949,-7.852312,5.267190,-2.234508,-1.886190,7.882941,6.560418,4.994122,-7.806340,-0.049612,7.142511,-1.122795,2.411317,3.236338,-5.659148,-5.434757,-8.535046,-2.289385,9.987850,-2.737183,-9.111466,-6.564042,8.320511,-0.292446,6.565171,-2.584120,3.987715,3.355855,7.844787,-9.717014,2.032327,-6.339077,-2.224284,7.725763,-6.774175,2.120814,-2.991777,-8.428157,-6.474422,8.362338,4.105222,-7.040724,-3.919755,-7.171141,-1.540355,9.415264,5.727918,8.022919,-5.328782,-6.595964,9.724127,-2.681185,1.414762,2.794933,8.833991,2.107552,-6.150832,-8.313266,-7.582289,2.969199,3.303791,-1.307971,-0.105089,-4.832034,-6.591507,9.682392,0.498121,2.967082,-0.688953,-9.367793,5.904422,7.917962,5.716193,2.912558,-3.138912,-7.074252,1.914771,-5.116049,1.153855,9.359478,6.534981,7.571581,-8.613803,9.258553],[5.400471,-6.292668,-5.558100,-0.254627,7.375985,8.801885,-5.930851,-1.199579,-0.812672,-1.107309,4.298420,3.227197,-6.985406,4.378127,-9.817086,-6.466062,-1.810733,-8.322347,-1.117600,-4.523191,-0.129181,1.495860,-0.368982,2.285998,-4.819004,-8.351633,8.526582,2.461605,-9.256986,-1.675465,0.371416,-8.426369,6.534501,-7.982563,6.615558,-9.631723,-9.023950,8.935990,0.601890,0.455595,-1.330841,6.006079,-6.996769,4.760299,-9.830912,8.141859,-7.718278,0.535206,-5.556462,9.970739,5.605615,-2.804870,1.884129,-4.249273,-0.022305,8.089183,9.267919,-4.377748,8.719372,-3.558496,1.073479,3.875152,7.972821,9.938546,1.078585,9.318984,-2.375517,-0.548663,4.653254,-4.608362,2.008518,-1.483605,1.108148,-9.068385,2.073545,-8.743956,-3.305664,-0.646766,-6.620829,8.530945,7.596352,-6.278666,-9.650125,6.466874,8.981175,6.861976,6.700676,3.474591,-6.762345,8.732755,-1.448194,-5.733328,-5.605870,-9.663550,0.707123,-1.052748,6.561758,-0.766887,7.711070,7.460390],[-2.767529,9.685752,2.646768,-5.383611,-1.378995,1.844204,1.449295,6.662705,-5.118267,-8.942192,-1.147506,-5.614113,-3.885039,1.289444,9.965629,-6.184990,-6.161892,5.203207,8.153300,3.719510,-1.692167,-3.245101,8.947489,0.249945,-8.272908,8.103338,-3.501898,-2.403278,-8.391281,-4.278239,-6.655448,1.001367,9.603677,-3.604515,-6.932438,-5.861930,-1.848768,-7.720597,8.114153,-1.018302,-7.392988,-5.663434,4.205696,9.976226,-6.934347,2.188533,-7.286790,6.945785,-1.410788,-2.551938,-9.544166,5.266485,-6.020227,-5.496711,7.223738,1.230192,-0.846552,-0.721211,-5.954889,5.599498,8.261263,3.902717,-8.818075,1.245309,7.736564,7.344577,8.362393,-0.270290,5.357745,8.870195,9.326964,-0.032927,-7.055914,-0.104567,-0.493523,6.771905,-4.239410,2.552178,-6.575177,7.408721,6.223870,7.226609,6.417495,-8.872022,-6.530207,8.925858,-9.460956,7.016448,-3.367548,7.780347,3.737414,4.934109,8.732127,-9.171333,7.421054,0.930347,5.419419,4.204111,2.671207,4.459408]], dtype = "float32")#candidate|5783|(6, 100)|const|float32
const_5784 = relay.const([-0.329374,-9.062292,-8.399987,9.698453,8.751329,-6.060522,2.054564,-9.637069,-4.764739,8.778193,-0.164624,5.378802,-3.612215,3.226787,1.641095,5.602663,9.383091,3.141118,1.622837,6.873431,5.217304,-0.158625,2.254425,5.402306,-4.085296,2.481024,-0.867745,-6.275221,7.459278,-0.459398,3.102110,-2.344244,-9.374064,-3.555008,-2.245133,-1.577212,0.133086,-3.483387,1.544199,5.142484,3.904025,-8.605551,8.135812,-9.154326,-5.059657,7.194803,7.887129,-8.978939,1.775413,5.368260,-6.723111,2.176457,-8.755785,-3.226161,-7.318811,-7.409841,-2.805391,4.339642,4.526378,-3.648430,-0.765502,0.473197,6.783972,9.635676,2.948555,-5.037156,-2.944718,1.285091,-3.260731,-1.142859,2.494862,-1.841214,0.926910,2.144722,5.566250,-9.924798,-7.521213,2.071296,7.330642,-7.080652,-2.224421,3.544423,0.375824,0.507185,-6.711815,-2.652155,-9.896419,-7.545098,-3.483797,5.574441,6.055355,4.426140,8.224095,-8.985641,-3.581581,5.556738,0.620480,2.652833,-7.394360,-3.731785,9.288483,-6.374075,9.572514,8.866960,8.380561,-8.987264,2.840051,-1.980526,-6.615162,6.558151,2.970081,0.813388,0.072884,7.727800,-1.269392,9.811862,-8.840133,6.676035,-2.204600,3.233496,0.690740,-5.819298,-5.853524,-9.752717,5.698819,4.052982,-7.855476,-8.595454,8.969628,8.327977,6.612686,2.508595,0.135823,-1.730100,-1.474269,6.187493,0.621407,-2.801365,-9.936573,-2.528130,-7.305026,-7.886059,7.495540,6.967249,1.238902,-3.999450,3.454952,-5.763528,-1.546193,-4.355203,2.545022,6.858958,6.343708,-0.441359,-6.486410,-6.330286,-5.084016,5.502662,7.563295,-0.643119,-3.095836,1.081154,3.169657,-3.829785,-2.618611,-2.536322,-8.744752,-4.578004,9.882946,2.267039,-6.358959,-9.302458,-9.620132,-8.042171,-8.499588,-7.042279,3.925152,-0.844135,-4.235942,-6.519471,2.559131,-3.858899,-1.707515,-7.807535,7.484311,8.880470,7.721484,-7.021536,-9.168960,7.616299,7.943628,6.574190,4.481115,7.108378,-0.266561,1.451083,-8.241261,3.086046,-5.507675,-9.239625,5.812387,8.979609,-6.432543,-3.711635,-2.900912,6.711128,-1.884772,-8.335667,9.226298,5.849024,-3.609097,9.577272,-0.178878,3.099745,-3.856785,-9.618141,-9.296126,-7.556495,5.778850,2.021361,-3.990362,4.880852,4.435462,3.399096,-6.393552,-3.969246,0.663213,4.476543,-1.439498,-4.194162,3.802706,-5.234480,8.423958,-4.155940,4.798553,-6.744098,-6.513400,-9.788213,-7.706404,-6.278564,-0.669106,3.261705,1.117685,1.678611,5.168747,-8.054744,-3.235016,-2.630686,-7.518307,-2.179223,-4.465641,8.581513,5.744558,-8.470107,7.287309,-9.164598,9.595714,3.574632,-5.612704,-6.841598,1.182717,-6.398382,9.683386,4.852343,5.264740,-2.527861,-1.778055,5.776290,6.429125,6.040741,-7.279875,5.595735,8.669462,-0.306838,3.429836,-2.753023,-2.963118,5.075613,8.363160,7.402207,-7.229732,6.780819,3.354241,-8.187079,-6.827460,-0.859739,7.300047,3.304729,-2.768221,1.495457,-1.769808,-5.752035,-6.993822,7.551395], dtype = "float64")#candidate|5784|(294,)|const|float64
call_5782 = relay.TupleGetItem(func_4060_call(relay.reshape(const_5783.astype('float32'), [6, 100]), relay.reshape(const_5784.astype('float64'), [294,]), ), 3)
call_5785 = relay.TupleGetItem(func_4063_call(relay.reshape(const_5783.astype('float32'), [6, 100]), relay.reshape(const_5784.astype('float64'), [294,]), ), 3)
output = relay.Tuple([call_5778,call_5782,const_5783,const_5784,])
output2 = relay.Tuple([call_5779,call_5785,const_5783,const_5784,])
func_5796 = relay.Function([], output)
mod['func_5796'] = func_5796
mod = relay.transform.InferType()(mod)
mutated_mod['func_5796'] = func_5796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5796_call = mutated_mod.get_global_var('func_5796')
call_5797 = func_5796_call()
output = call_5797
func_5798 = relay.Function([], output)
mutated_mod['func_5798'] = func_5798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5013_call = mod.get_global_var('func_5013')
func_5014_call = mutated_mod.get_global_var('func_5014')
call_5831 = relay.TupleGetItem(func_5013_call(), 0)
call_5832 = relay.TupleGetItem(func_5014_call(), 0)
const_5833 = relay.const([[[-5,8,-6,-8,9,9,-10],[-5,10,5,-4,5,-2,-5],[-2,-8,1,1,-9,6,-8],[3,-1,-6,-6,4,9,-3],[6,9,-5,2,-4,-1,1]],[[-2,6,8,6,8,-6,-10],[-4,7,3,7,-2,-3,-2],[-1,4,4,9,-7,8,4],[10,1,9,3,4,9,8],[2,6,5,-7,2,-10,10]],[[6,4,-10,-1,10,10,-5],[10,10,-3,7,8,6,-9],[-1,-6,3,-3,4,-1,-10],[-10,1,-8,4,-9,1,5],[9,4,5,7,10,2,-5]],[[-8,-5,2,8,6,3,-5],[3,2,5,4,-5,-9,-4],[-1,-3,6,9,3,5,-1],[5,3,-7,-1,-10,-4,9],[-4,-4,2,3,-3,-3,10]],[[-6,-8,-9,10,-5,-10,-8],[-2,8,8,10,-9,-7,5],[-1,-9,8,-7,-10,2,-7],[-2,7,-2,1,-8,1,4],[-2,-7,6,9,3,8,4]],[[-9,-2,-8,7,7,1,1],[-3,-9,5,-7,1,-4,3],[-8,-4,7,-1,7,6,-8],[-1,8,-3,10,-2,1,-4],[-8,7,-5,-4,-6,-7,3]],[[-9,10,-9,6,5,3,5],[-1,-7,8,-6,4,5,-6],[-5,8,9,7,-6,3,-1],[1,10,-8,2,10,9,9],[-6,-6,4,-8,-2,3,10]],[[-3,4,-8,7,-1,2,-8],[-7,-2,-10,5,-4,6,-8],[8,-9,-8,7,7,-1,-5],[-10,-1,8,10,-4,3,-8],[6,10,-3,-4,-1,-6,-5]],[[5,-10,-10,1,-8,9,6],[2,1,-1,1,-9,4,4],[-8,-8,8,9,-3,-10,-3],[-3,-1,4,-10,-2,-8,5],[-2,-1,9,-3,-7,9,-5]]], dtype = "int64")#candidate|5833|(9, 5, 7)|const|int64
bop_5834 = relay.logical_xor(call_5831.astype('int16'), relay.reshape(const_5833.astype('int16'), relay.shape_of(call_5831))) # shape=(9, 5, 7)
bop_5837 = relay.logical_xor(call_5832.astype('int16'), relay.reshape(const_5833.astype('int16'), relay.shape_of(call_5832))) # shape=(9, 5, 7)
output = relay.Tuple([bop_5834,])
output2 = relay.Tuple([bop_5837,])
func_5841 = relay.Function([], output)
mod['func_5841'] = func_5841
mod = relay.transform.InferType()(mod)
output = func_5841()
func_5842 = relay.Function([], output)
mutated_mod['func_5842'] = func_5842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5883 = relay.var("var_5883", dtype = "float32", shape = (2, 14, 15))#candidate|5883|(2, 14, 15)|var|float32
uop_5884 = relay.log(var_5883.astype('float32')) # shape=(2, 14, 15)
func_5597_call = mod.get_global_var('func_5597')
func_5600_call = mutated_mod.get_global_var('func_5600')
var_5887 = relay.var("var_5887", dtype = "int32", shape = (40,))#candidate|5887|(40,)|var|int32
call_5886 = relay.TupleGetItem(func_5597_call(relay.reshape(var_5887.astype('int32'), [40,])), 0)
call_5888 = relay.TupleGetItem(func_5600_call(relay.reshape(var_5887.astype('int32'), [40,])), 0)
uop_5892 = relay.cosh(uop_5884.astype('float32')) # shape=(2, 14, 15)
func_3642_call = mod.get_global_var('func_3642')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_5895 = relay.TupleGetItem(func_3642_call(), 0)
call_5896 = relay.TupleGetItem(func_3644_call(), 0)
func_4736_call = mod.get_global_var('func_4736')
func_4738_call = mutated_mod.get_global_var('func_4738')
call_5897 = relay.TupleGetItem(func_4736_call(), 0)
call_5898 = relay.TupleGetItem(func_4738_call(), 0)
output = relay.Tuple([call_5886,var_5887,uop_5892,call_5895,call_5897,])
output2 = relay.Tuple([call_5888,var_5887,uop_5892,call_5896,call_5898,])
func_5899 = relay.Function([var_5883,var_5887,], output)
mod['func_5899'] = func_5899
mod = relay.transform.InferType()(mod)
var_5900 = relay.var("var_5900", dtype = "float32", shape = (2, 14, 15))#candidate|5900|(2, 14, 15)|var|float32
var_5901 = relay.var("var_5901", dtype = "int32", shape = (40,))#candidate|5901|(40,)|var|int32
output = func_5899(var_5900,var_5901,)
func_5902 = relay.Function([var_5900,var_5901,], output)
mutated_mod['func_5902'] = func_5902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mod.get_global_var('func_4791')
func_4793_call = mutated_mod.get_global_var('func_4793')
call_5930 = relay.TupleGetItem(func_4791_call(), 0)
call_5931 = relay.TupleGetItem(func_4793_call(), 0)
output = call_5930
output2 = call_5931
func_5935 = relay.Function([], output)
mod['func_5935'] = func_5935
mod = relay.transform.InferType()(mod)
mutated_mod['func_5935'] = func_5935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5935_call = mutated_mod.get_global_var('func_5935')
call_5936 = func_5935_call()
output = call_5936
func_5937 = relay.Function([], output)
mutated_mod['func_5937'] = func_5937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4970_call = mod.get_global_var('func_4970')
func_4971_call = mutated_mod.get_global_var('func_4971')
call_5973 = relay.TupleGetItem(func_4970_call(), 1)
call_5974 = relay.TupleGetItem(func_4971_call(), 1)
output = relay.Tuple([call_5973,])
output2 = relay.Tuple([call_5974,])
func_5977 = relay.Function([], output)
mod['func_5977'] = func_5977
mod = relay.transform.InferType()(mod)
mutated_mod['func_5977'] = func_5977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5977_call = mutated_mod.get_global_var('func_5977')
call_5978 = func_5977_call()
output = call_5978
func_5979 = relay.Function([], output)
mutated_mod['func_5979'] = func_5979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5998 = relay.var("var_5998", dtype = "int8", shape = (8, 16, 6))#candidate|5998|(8, 16, 6)|var|int8
var_5999 = relay.var("var_5999", dtype = "int8", shape = (8, 16, 6))#candidate|5999|(8, 16, 6)|var|int8
bop_6000 = relay.not_equal(var_5998.astype('bool'), relay.reshape(var_5999.astype('bool'), relay.shape_of(var_5998))) # shape=(8, 16, 6)
bop_6007 = relay.floor_mod(bop_6000.astype('float32'), relay.reshape(var_5999.astype('float32'), relay.shape_of(bop_6000))) # shape=(8, 16, 6)
func_71_call = mod.get_global_var('func_71')
func_75_call = mutated_mod.get_global_var('func_75')
const_6019 = relay.const([3.355737,-1.687610,1.143632,-2.561245,-8.893530,-3.744188,-6.252150,1.049143,2.540962,-6.387239,-2.814594,-4.237280,-9.546893,-6.574301,-9.904030,4.410938,-4.037779,1.815648,1.266127,-1.366599,-4.147530,4.201496,-7.921740,9.807654,5.420701,8.145366,9.154287,6.705907,-2.209123,-9.903177,3.527755,-1.140691,4.426190,2.202442,-9.071977,-8.357788,-6.696518,3.365035,-7.640480,-0.532117,8.302018,6.445733,1.481062,-9.569031,0.883010,-9.977503,-0.839633,-0.659222,9.401910,-3.516306,5.855968,-1.694318,4.719078,-1.687464,-5.667455,8.364832,-9.662358,-1.265915,1.455823,2.486037,9.223004,4.486867,5.233451,0.729857,-0.144297,-0.287989,-5.700461,8.633669,-4.918238,-5.009558,3.068097,-9.186828,-8.118973,5.768821,7.928068,-5.355744,2.473638,7.284580,4.319117,0.407732,-7.296162,8.841091,-7.023492,-8.324786,-8.875279,2.970572,-5.835825,4.337662,-7.162992,7.767850,-8.651426,9.674501,5.667048,-5.522951,2.495759,-6.026712,0.294792,9.171594,8.339734,-4.395483,-4.623026,0.016735,-1.046016,3.026172,0.201304,-1.295797,2.166670,4.596838,-0.411711,5.926181,9.409898,-6.240472,-1.209353,-0.848420,0.586094,1.134546,-1.508012,8.999955,-2.100137,-3.646406,0.469006,1.748348,-8.110221,9.067249,-0.180323,-0.503073,6.553896,-2.085586,-1.368404,5.868683,5.400267,9.760493,9.617592,-2.003605,-4.918230,1.795523,-3.796414,-9.407109,-8.277053,6.904286,-2.621438,-3.165458,-4.760050,1.420880,-2.919995,3.120529,-9.104476,9.792544,6.498564,8.810578,-0.529115,8.483735,4.681743,9.471470,0.730048,-0.551224,7.890382,1.583605,4.013042,-9.823959,0.404315,5.494650,1.673232,9.506695,6.179472,-8.636020,-3.548287,-1.012985,7.661910,3.699997,-4.266924,-6.413708,-0.253252,-5.848481,1.714071,4.371735,-8.089772,-0.431049,-4.722890,-6.866508,-8.426467,9.904313,-5.569852,-2.107306,-6.655484,-8.528337,5.510499,-8.943092,9.222880,5.484938,0.040258,7.017951,0.532656,3.318586,-3.703492,6.121550,-6.934945,9.788578,-0.402380,-7.260428,7.018525,-7.636270,-5.908466,-7.721468,6.290035,-2.506713,3.088548,-3.287620,4.173905,-5.470849,4.106755,-8.942679,-0.209415,-7.380037,3.054430,0.992571,9.395846,7.923371,-2.149149,8.583258,2.902116,5.407095,-2.167424,7.792884,5.248794,2.839252,-7.327290,8.038466,6.778761,3.586551,-3.747558,3.042035,-6.153392,9.704870,-0.885118,-7.609223,-7.331467,-4.046135,1.433050,-2.704889,0.189711,6.978527,8.898845,0.805713,-1.049959,9.754821,1.482251,4.908473,5.624877,4.539058,4.892993,4.512145,2.808830,-7.107335,-0.439877,9.670165,-2.480670,3.284556,3.903161,-6.143969,3.325660,7.486666,-4.683407,4.183986,2.634559,-3.963632,-3.122583,5.679941,7.547574,7.664996,-8.842917,-4.008419,0.906670,1.343590,-0.528316,8.148340,9.242949,-8.329008,5.020790,-6.335942,-5.631815,0.536281,-3.111039,-6.364388,2.751987,7.123110,1.689801,-6.658170,4.009280,1.189801,-4.491814,-6.100046,5.297948,5.015922,-3.143537,-3.288970,-7.658035,7.502736,-6.337829,7.739733,6.915669,5.601809,-6.522127,-8.878941,7.700504,9.323403,-6.852627,-7.056344,-5.319445,-8.492990,1.708870,-8.324650,-5.950804,-5.509071,7.105843,-7.437001,2.492852,0.546571,-7.666222,2.001597,-4.916710,6.551796,-8.860885,-1.760907,0.462987,5.477850,1.715069,2.957473,-6.444437,-8.076854,6.040258,-9.112584,1.397016,-7.054418,1.854379,9.097917,-7.610150,-8.404443,-5.341125,1.128566,6.951326,-1.605490,-0.252376,7.410594,-3.293998,0.326168,-7.076582,-9.634775,9.073920,6.803881,-2.480511,-1.156241,4.330964,-1.627488,-6.759587,-5.833687,-2.738525,-8.082100,-7.630650,6.082586,-7.916149,-4.053161,1.207629,-5.427684,2.719074,8.821211,-4.974226,-4.245610,7.568417,-6.437921,-4.182472,3.761037,7.850612,-4.836118,9.185305,-7.787199,-4.752076,1.019871,1.463162,-1.424514,9.279115,1.641442,-9.600821,-3.112837,-1.280112,1.488345,9.427886,7.670818,-5.993346,-9.677990,-7.313156,4.418649,7.928714,-8.858187,-7.438849,2.976793,-0.206757,-2.453118,-7.936796,-2.360790,5.587689,7.812130,4.166950,9.789945,-0.102590,5.060829,3.832704,5.901669,8.206444,9.745230,6.980607,-8.489046,6.154155,-3.742073,0.376050,-0.184734,-6.746782,6.341902,5.939988,4.933612,-3.180371,-9.707099,-1.541040,-2.430990,0.907244,1.244293,-9.520452,-2.359781,-5.685401,8.813258,-4.991851,-0.346847,7.543632,-7.196324,5.136232,8.339091,-0.811129,0.279756,9.762998,5.154066,1.300435,3.336279,-3.435917,-4.606620,-1.351086,-1.801060,9.913738,2.425386,-9.796749,9.756460,-9.796352,6.911080,-9.226775,8.395990,-7.420917,-6.280895,3.161943,3.635409,-6.446267,7.229978,3.305723,3.746296,-0.889003,6.506980,-7.959883,-4.882519,4.199464,9.608064,-3.969217,-4.005072,7.578382,5.055053,-8.543273,-6.954598,-6.342772,-1.395751,7.903752,-6.389888,-7.994350,-7.166913,5.530266,6.800808,-0.458324,-8.373419,1.436503,1.102865,-3.998343,-0.503202,7.609901,1.792440,-7.963782,1.603032,2.837436,5.965657,-8.294856,-1.635076,4.629293,-2.419657,-5.064898,-5.444395,0.856011,8.604463,-9.060740,3.972171,-8.849192,0.917649,-8.273615,4.005383,4.964463,1.821561,-7.729642,8.161881,-1.091692,-9.993156,-5.130594,-5.474605,-0.370239,1.152902,9.437272,2.495319,2.084589,-4.215591,0.508075,8.595162,7.250352,-8.459427,-1.758030,9.891765,-8.960831,-4.651356,-9.817166,-5.173528,-8.931519,-7.523184,-3.999606,2.741959,-7.683111,5.548262,5.598590,-9.098429,-2.047045,1.450982,-5.345012,2.008591,-2.069752,-7.503911,-9.175203,9.127675,-0.034806,2.935672,6.755833,5.628877,-9.703066,-1.906791,2.509540,-9.255150,0.017011,6.088942,-7.932504,-6.636594,-7.196756,-3.816101,-9.557940,9.304943,4.647522,2.571208,0.171408,-6.106773,-8.174982,-1.788248,-0.156642,7.368291,-9.880132,2.632483,7.625448,6.593707,-2.891138,-5.794994,0.141542,-5.108888,-2.882683,-7.978654,-7.021994,-9.429421,9.506025,-1.468179,0.469805,5.122343,-6.341162,8.693112,2.713288,0.301231,-2.112756,-4.389190,6.889208,-5.111252,-9.725802,-1.251651,5.487826,4.957607,9.072681,-6.757591,7.619349,-0.494883,9.255959,7.708130,-5.576588,-0.243017,8.696918,-2.196622,7.067977,-8.702804,4.837578,-8.688869,3.199584,5.438378,-0.723226,-9.342410,-5.181143,0.373759,-1.122074,-3.105380,-5.725043,2.279516,6.355495,-8.901251,-9.327557,-5.183539,0.125868,-4.868661,9.077131,9.798141,-9.224396,4.189343,-0.370118,-6.412720,-2.793051,9.995662,7.832107,-3.605309,5.004032,-0.096809,9.306549,5.517545,7.459775,-4.103242,-5.895416,-2.863945,5.874586,2.103428,7.345004,-3.838116,-2.815644,-5.880399,-7.513963,-3.529627,4.299127,0.955929,1.902497,-2.239305,-2.729593,4.069442,-8.433226,6.874637,-8.914530,-9.601068,-2.167280,5.768913,-4.134468,2.421458,-9.467066,-4.183793,-5.770844,-9.634003,7.086363,-4.842368,1.886615,-1.318199,-1.981410,2.827019,-5.432379,-0.840085,-2.459526,8.364385,7.076034,1.590017,-2.849116,9.855097,0.448734,-0.794238,-3.350686,8.531810,0.625200,-7.563414,7.079744,-3.077810,7.343294,8.759734,-0.915022,-9.995940,1.107292,1.363369,-1.434089,-1.956692,-2.153987,-5.551904,4.723459,9.171728,6.165111,-3.358372,0.405773,-2.060363,8.759660,8.225824,-8.413111,4.756037,6.596095,8.586961,-7.164143,-4.409089,-4.693659,8.606567,-4.781917,-6.072231,-2.130048,-6.263710,5.223807,-9.010876,-2.820420,-2.462060,-8.464630,-6.881151,-0.397528,1.966148,6.211814,-3.350994,-4.134296,-0.303397,-3.847695,-0.554203,3.862019,-7.152588,2.306595,-1.158471,-4.060999,-6.121188,-1.848174,1.001755,-7.500500,0.381153,-6.362842,6.891693,-6.883925,9.183961,0.126388,0.516800,-6.676660,7.274491,5.682659,-7.533462,5.299054,-9.192807,8.292430,-5.028535,-8.171262,-0.933634,9.498725,4.019817,4.784731,-7.246029,-4.838728,1.014358,-1.955552,-5.837955,-9.407218,8.937547,0.596395,-0.107768,5.319020,-6.108461,-3.132022,-3.597993,-5.162826,6.008815,-3.867908,-0.232378,-9.277001,-5.513102,1.470191,-3.135718,9.102883,2.049792,2.270344,1.936936,-5.816218,-0.066027,-2.892936,7.935110,-3.546534,-4.037240,-3.353448,3.964185,2.930300,8.904692,-2.905553,-1.281866,-1.898477,-5.158834,8.456858,-5.158096], dtype = "float32")#candidate|6019|(810,)|const|float32
const_6020 = relay.const([-6.595183,-4.843008,5.727866,2.867024,-4.418474,-6.012919,-4.355661,-5.393536,5.234621,-0.715495,-2.995905,3.863205,3.643475,4.940778,-4.832858,-2.633654,6.697514,9.315333,-5.351488,8.107048,3.396502,-2.247812,2.520254,-2.109273,2.817651,-7.822230,2.743263,-0.176966,-6.039449,3.994604,-1.861903,1.494347,6.627484,-1.124710,7.939249,-9.214512,-2.798415,1.001196,8.734919,-6.676369,-9.316279,-7.965012,9.363826,-2.349760,-4.349207,-8.841055,-8.730189,6.967326,8.991838,0.575808,7.218557,2.435410,-3.626046,5.501830,8.359042,-9.666671,5.484680,0.447634,8.470669,-8.469894,-4.261413,-3.879175,-4.809129,-4.422324,-2.582443,-2.876476,0.089876,2.021583,-5.398764,2.338590,-1.346694,-9.099338,-6.178033,-8.314133,5.251516,7.776554,-9.215153,-5.116617,8.984517,-2.361878,-6.811677,7.037021,-4.495156,9.622749,-1.104558,-8.698466,8.742738,-6.726162,9.234238,4.027305,8.763575,-6.987412,8.407152,-0.928708,8.961474,-7.014973,6.117960,1.352673,-0.238087,1.060974,1.835789,0.368075,-4.791585,-5.091929,6.499281,-5.403634,-3.618390,-3.423811,-3.397953,3.039568,6.933223,3.983487,0.397623,-9.105247,-8.408073,-9.547817,-2.410151,-2.512076,9.159624,-9.293666,-6.201715,6.343424,7.907132,-5.782259,-1.941707,9.004422,3.420268,5.613752,3.657785,-4.241170,1.546719,8.395542,2.872846,-6.255741,-0.618779,5.502961,3.620084,1.379997,-9.661304,-8.136375,6.560244,-1.803564,7.527536,-8.142918,4.247625,-7.861420,8.804009,-0.062599,7.390823,-8.220596,4.854750,-5.360305,-4.868639,3.259743,-4.294177,-9.947153,3.869649,-9.184464,-2.006716,0.741284,-7.591997,-2.009309,4.138489,-3.035287,2.146864,-4.525545,-1.785685,1.113266,9.827320,0.330331,8.605063,1.020283,-7.511730,1.645421,-9.342123,-0.843456,-4.275096,1.793474,-4.625056,-3.390611,-8.219724,-9.937277,8.959820,4.275684,7.323286,-0.989834,-1.833203,9.798056,-4.924615,1.287070,-1.134435,1.000385,-9.356776,-5.675675,-7.961574,-4.199568,-6.060144,8.976090,8.159318,-8.342114,4.083320,4.430632,-7.496172,-3.798138,8.308570,-0.778018,6.990091,-1.274091,-0.072467,-7.795588,7.672135,9.982409,-1.440758,0.119663,9.666190,-2.637953,3.884180,6.059252,-6.479748,-1.218306,5.585527,4.526717,-4.078306,8.160129,8.002821,1.712424,-6.603090,-8.509113,2.951131,-9.048746,6.353206,2.895655,-1.560568,-0.935870,-6.915453,-5.278711,9.318319,-9.622589,8.181545,-7.410230,-2.909202,0.046778,-0.271988,5.774467,-6.348445,1.625684,-9.187009,-1.355717,7.011985,5.678092,3.455396,4.506779,-6.734941,-9.993100,1.068732,-5.751967,-5.547252,8.136626,4.164176,-9.683197,-6.711690,0.639895,-5.153254,-4.672292,-1.537779,9.824200,5.751275,4.889915,-1.586908,-8.319974,-1.601544,2.780938,-2.865396,-2.137296,9.804977,6.467155,-4.684468,-8.424506,-0.888269,-7.712151,9.089830,-8.532726,-5.075871,-8.215991,7.605223,7.348826,7.371443,-2.287457,5.420418,3.168190,9.626201,-8.185039,2.094131,-0.253388], dtype = "float64")#candidate|6020|(294,)|const|float64
call_6018 = relay.TupleGetItem(func_71_call(relay.reshape(const_6019.astype('float32'), [9, 9, 10]), relay.reshape(const_6020.astype('float64'), [294,]), ), 5)
call_6021 = relay.TupleGetItem(func_75_call(relay.reshape(const_6019.astype('float32'), [9, 9, 10]), relay.reshape(const_6020.astype('float64'), [294,]), ), 5)
output = relay.Tuple([bop_6007,call_6018,const_6019,const_6020,])
output2 = relay.Tuple([bop_6007,call_6021,const_6019,const_6020,])
func_6023 = relay.Function([var_5998,var_5999,], output)
mod['func_6023'] = func_6023
mod = relay.transform.InferType()(mod)
var_6024 = relay.var("var_6024", dtype = "int8", shape = (8, 16, 6))#candidate|6024|(8, 16, 6)|var|int8
var_6025 = relay.var("var_6025", dtype = "int8", shape = (8, 16, 6))#candidate|6025|(8, 16, 6)|var|int8
output = func_6023(var_6024,var_6025,)
func_6026 = relay.Function([var_6024,var_6025,], output)
mutated_mod['func_6026'] = func_6026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4970_call = mod.get_global_var('func_4970')
func_4971_call = mutated_mod.get_global_var('func_4971')
call_6058 = relay.TupleGetItem(func_4970_call(), 1)
call_6059 = relay.TupleGetItem(func_4971_call(), 1)
output = relay.Tuple([call_6058,])
output2 = relay.Tuple([call_6059,])
func_6065 = relay.Function([], output)
mod['func_6065'] = func_6065
mod = relay.transform.InferType()(mod)
output = func_6065()
func_6066 = relay.Function([], output)
mutated_mod['func_6066'] = func_6066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5488_call = mod.get_global_var('func_5488')
func_5490_call = mutated_mod.get_global_var('func_5490')
call_6078 = relay.TupleGetItem(func_5488_call(), 0)
call_6079 = relay.TupleGetItem(func_5490_call(), 0)
output = call_6078
output2 = call_6079
func_6081 = relay.Function([], output)
mod['func_6081'] = func_6081
mod = relay.transform.InferType()(mod)
output = func_6081()
func_6082 = relay.Function([], output)
mutated_mod['func_6082'] = func_6082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mod.get_global_var('func_3642')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_6083 = relay.TupleGetItem(func_3642_call(), 1)
call_6084 = relay.TupleGetItem(func_3644_call(), 1)
output = call_6083
output2 = call_6084
func_6090 = relay.Function([], output)
mod['func_6090'] = func_6090
mod = relay.transform.InferType()(mod)
output = func_6090()
func_6091 = relay.Function([], output)
mutated_mod['func_6091'] = func_6091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4373_call = mod.get_global_var('func_4373')
func_4374_call = mutated_mod.get_global_var('func_4374')
call_6118 = relay.TupleGetItem(func_4373_call(), 0)
call_6119 = relay.TupleGetItem(func_4374_call(), 0)
output = relay.Tuple([call_6118,])
output2 = relay.Tuple([call_6119,])
func_6137 = relay.Function([], output)
mod['func_6137'] = func_6137
mod = relay.transform.InferType()(mod)
output = func_6137()
func_6138 = relay.Function([], output)
mutated_mod['func_6138'] = func_6138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6081_call = mod.get_global_var('func_6081')
func_6082_call = mutated_mod.get_global_var('func_6082')
call_6188 = func_6081_call()
call_6189 = func_6081_call()
var_6193 = relay.var("var_6193", dtype = "float32", shape = (9, 5, 7))#candidate|6193|(9, 5, 7)|var|float32
bop_6194 = relay.maximum(call_6188.astype('int16'), relay.reshape(var_6193.astype('int16'), relay.shape_of(call_6188))) # shape=(9, 5, 7)
bop_6197 = relay.maximum(call_6189.astype('int16'), relay.reshape(var_6193.astype('int16'), relay.shape_of(call_6189))) # shape=(9, 5, 7)
bop_6204 = relay.equal(bop_6194.astype('bool'), relay.reshape(var_6193.astype('bool'), relay.shape_of(bop_6194))) # shape=(9, 5, 7)
bop_6207 = relay.equal(bop_6197.astype('bool'), relay.reshape(var_6193.astype('bool'), relay.shape_of(bop_6197))) # shape=(9, 5, 7)
output = relay.Tuple([bop_6204,])
output2 = relay.Tuple([bop_6207,])
func_6212 = relay.Function([var_6193,], output)
mod['func_6212'] = func_6212
mod = relay.transform.InferType()(mod)
mutated_mod['func_6212'] = func_6212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6213 = relay.var("var_6213", dtype = "float32", shape = (9, 5, 7))#candidate|6213|(9, 5, 7)|var|float32
func_6212_call = mutated_mod.get_global_var('func_6212')
call_6214 = func_6212_call(var_6213)
output = call_6214
func_6215 = relay.Function([var_6213], output)
mutated_mod['func_6215'] = func_6215
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6288 = relay.const([[[-2.410068,-2.654931],[1.660567,9.142182],[-8.820494,0.761692],[-9.186127,-5.281075],[-3.653483,-3.491686],[5.077118,5.598909],[-7.005115,0.565844],[-2.968303,-7.028681],[2.938838,5.174905],[0.535019,-2.360209],[0.095565,-8.548120],[-0.361769,-7.953952],[-7.670026,6.552521],[8.658543,-2.391268],[9.811758,-7.606874]],[[-2.974097,0.198702],[8.294020,5.001025],[4.755573,0.454800],[5.651399,7.871206],[-6.062405,-2.757242],[-3.294692,5.281243],[-0.145899,8.174138],[1.593019,-0.671834],[3.840051,4.094761],[-4.052995,7.899835],[-5.024635,-5.665255],[-0.971509,4.930253],[4.618394,-5.876111],[3.963454,-2.286316],[0.754121,2.741784]],[[6.249628,5.211690],[5.080425,-3.962122],[6.375046,-1.707633],[-3.645145,0.472331],[-7.574582,6.856807],[2.188258,9.132535],[2.930541,-4.703840],[-8.622312,2.102781],[4.080216,-8.463184],[2.863161,5.988988],[-2.833906,-7.026390],[-9.150736,-9.918495],[-9.502524,8.750038],[1.544903,-6.897238],[-4.796527,7.351288]]], dtype = "float32")#candidate|6288|(3, 15, 2)|const|float32
var_6289 = relay.var("var_6289", dtype = "float32", shape = (3, 15, 2))#candidate|6289|(3, 15, 2)|var|float32
bop_6290 = relay.floor_mod(const_6288.astype('float32'), relay.reshape(var_6289.astype('float32'), relay.shape_of(const_6288))) # shape=(3, 15, 2)
func_5321_call = mod.get_global_var('func_5321')
func_5323_call = mutated_mod.get_global_var('func_5323')
var_6298 = relay.var("var_6298", dtype = "float64", shape = (40,))#candidate|6298|(40,)|var|float64
call_6297 = relay.TupleGetItem(func_5321_call(relay.reshape(var_6298.astype('float64'), [1, 5, 8])), 0)
call_6299 = relay.TupleGetItem(func_5323_call(relay.reshape(var_6298.astype('float64'), [1, 5, 8])), 0)
bop_6303 = relay.mod(const_6288.astype('float64'), relay.reshape(var_6289.astype('float64'), relay.shape_of(const_6288))) # shape=(3, 15, 2)
bop_6306 = relay.left_shift(bop_6290.astype('uint8'), relay.reshape(var_6289.astype('uint8'), relay.shape_of(bop_6290))) # shape=(3, 15, 2)
output = relay.Tuple([call_6297,var_6298,bop_6303,bop_6306,])
output2 = relay.Tuple([call_6299,var_6298,bop_6303,bop_6306,])
func_6315 = relay.Function([var_6289,var_6298,], output)
mod['func_6315'] = func_6315
mod = relay.transform.InferType()(mod)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6315_call = mutated_mod.get_global_var('func_6315')
var_6317 = relay.var("var_6317", dtype = "float32", shape = (3, 15, 2))#candidate|6317|(3, 15, 2)|var|float32
var_6318 = relay.var("var_6318", dtype = "float64", shape = (40,))#candidate|6318|(40,)|var|float64
call_6316 = func_6315_call(var_6317,var_6318,)
output = call_6316
func_6319 = relay.Function([var_6317,var_6318,], output)
mutated_mod['func_6319'] = func_6319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5488_call = mod.get_global_var('func_5488')
func_5490_call = mutated_mod.get_global_var('func_5490')
call_6392 = relay.TupleGetItem(func_5488_call(), 0)
call_6393 = relay.TupleGetItem(func_5490_call(), 0)
func_6315_call = mod.get_global_var('func_6315')
func_6319_call = mutated_mod.get_global_var('func_6319')
var_6420 = relay.var("var_6420", dtype = "float32", shape = (90,))#candidate|6420|(90,)|var|float32
const_6421 = relay.const([[-0.009328],[2.292461],[-2.059128],[-8.268765],[-5.317077],[8.887044],[6.105986],[9.301329],[9.818064],[-2.779415],[8.446783],[-8.802882],[-8.957647],[-6.500204],[9.713436],[-6.807363],[-9.419457],[-6.510849],[-4.256019],[6.229213],[1.320828],[2.042343],[7.849057],[7.611630],[6.669315],[1.610733],[-2.273451],[7.834858],[-7.465488],[3.183247],[6.241137],[8.424413],[3.230576],[-7.053388],[-4.727224],[-7.656168],[6.609631],[-7.111399],[3.858409],[9.856709]], dtype = "float64")#candidate|6421|(40, 1)|const|float64
call_6419 = relay.TupleGetItem(func_6315_call(relay.reshape(var_6420.astype('float32'), [3, 15, 2]), relay.reshape(const_6421.astype('float64'), [40,]), ), 0)
call_6422 = relay.TupleGetItem(func_6319_call(relay.reshape(var_6420.astype('float32'), [3, 15, 2]), relay.reshape(const_6421.astype('float64'), [40,]), ), 0)
uop_6430 = relay.exp(const_6421.astype('float32')) # shape=(40, 1)
func_3555_call = mod.get_global_var('func_3555')
func_3557_call = mutated_mod.get_global_var('func_3557')
call_6433 = relay.TupleGetItem(func_3555_call(relay.reshape(call_6392.astype('int64'), [9, 5, 7])), 0)
call_6434 = relay.TupleGetItem(func_3557_call(relay.reshape(call_6392.astype('int64'), [9, 5, 7])), 0)
output = relay.Tuple([call_6392,call_6419,var_6420,uop_6430,call_6433,])
output2 = relay.Tuple([call_6393,call_6422,var_6420,uop_6430,call_6434,])
func_6435 = relay.Function([var_6420,], output)
mod['func_6435'] = func_6435
mod = relay.transform.InferType()(mod)
var_6436 = relay.var("var_6436", dtype = "float32", shape = (90,))#candidate|6436|(90,)|var|float32
output = func_6435(var_6436)
func_6437 = relay.Function([var_6436], output)
mutated_mod['func_6437'] = func_6437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3713_call = mod.get_global_var('func_3713')
func_3714_call = mutated_mod.get_global_var('func_3714')
call_6445 = relay.TupleGetItem(func_3713_call(), 0)
call_6446 = relay.TupleGetItem(func_3714_call(), 0)
func_5665_call = mod.get_global_var('func_5665')
func_5667_call = mutated_mod.get_global_var('func_5667')
const_6468 = relay.const([[-3.980902,-0.856126,-4.229154,-5.396099],[3.088411,0.408459,4.803623,7.191117],[7.305099,-5.780628,-1.943991,-9.684538],[7.784318,8.328420,-2.458773,3.864876],[2.830987,4.841702,-5.244341,-4.829262],[-6.940957,-7.110267,-7.486571,2.706275],[5.314242,-6.369222,5.943207,4.873210],[7.709364,-7.887812,9.284650,-5.794126],[-0.095834,-6.490673,2.605101,-3.725955],[-5.418117,-6.057054,0.842679,-6.990387],[2.537013,-1.527442,7.644884,5.120427],[-2.541845,-8.841075,-0.042311,6.460167],[-9.649064,1.382995,-7.992503,8.424764],[-0.974427,2.660008,-2.381180,-2.490508],[9.458018,-7.266404,7.372349,0.377449],[1.252565,1.918024,-8.300532,-5.453796],[-2.609974,-6.506600,-5.623935,-3.749695],[1.465311,-8.168770,1.405009,-5.731253],[5.161029,-9.285884,-5.808436,7.177147],[6.713483,2.063096,3.190362,7.051844],[1.970545,-5.436548,3.536156,9.165039],[-1.555976,-5.230460,-8.413057,-7.425476],[7.708785,-1.339368,-3.264113,-7.036680],[-7.955139,9.194691,5.812678,-1.547376],[7.263544,-3.197660,0.081858,8.533693],[5.313384,6.024247,-9.912083,-1.732136],[-9.576277,-6.538347,-9.482498,9.942222],[-7.649281,-3.372082,2.910192,5.471746],[4.707672,5.835991,4.409631,-7.484056],[0.817643,-6.998502,-4.445196,5.498583],[-1.969231,1.596858,-4.100504,8.859685],[-6.549037,7.833458,-0.259517,-2.072587],[-7.832137,-0.098183,-1.937605,0.870535],[2.856878,-6.452130,-9.115003,-6.369475],[6.643300,9.026220,-8.181927,-7.787181],[-1.646344,-3.636915,-8.757620,-3.633011],[0.509763,-9.022170,6.272915,1.221675],[-8.132565,-3.065635,3.274961,5.564676],[5.720981,5.647039,6.825316,-3.599559],[2.293543,8.282594,1.966835,-4.725098],[-9.619099,-2.999743,-7.032420,-0.632970],[8.086818,8.846461,-7.815221,4.580673],[4.055468,4.200230,2.700338,-3.181500],[9.198439,-3.189230,1.752980,5.810881],[-4.528989,-1.778889,9.795517,4.484909],[7.723403,5.392257,1.068601,2.012773],[3.712120,0.110559,-2.066067,2.078284],[5.688633,-4.597764,2.618279,4.550013],[-0.578189,-2.656947,-3.873830,-9.411236],[3.637816,3.028663,0.394300,4.517736],[-8.521983,4.359329,7.982240,-2.054660],[-7.540464,6.178671,-5.508100,0.338445],[-8.790802,-4.515707,1.467188,6.739830],[-6.923046,0.421607,9.568190,3.855482],[-2.127397,3.889384,4.515974,-6.933605],[-1.726293,9.711830,-9.332271,2.524503],[6.397020,-3.094076,2.858966,8.367246],[-7.154599,4.689427,6.758364,3.260668],[3.217423,2.605509,-3.834281,-3.151970],[-2.458646,2.611281,8.604432,9.078313],[-4.678766,5.063195,5.985321,-1.087962],[-5.308030,-1.048965,-7.540094,5.355008],[-3.145167,-9.082734,-5.405786,2.572068],[7.412163,-7.204374,-4.606236,4.247693],[1.713304,-4.816004,9.980152,-5.607644],[-0.960954,9.490657,6.817345,-6.005854],[-9.506473,-4.412241,2.442132,1.621353],[7.927138,4.976235,7.221785,-5.902412],[-9.577546,-8.272980,4.578861,7.294929],[3.191996,-3.128253,5.191778,-4.823296],[-0.252206,-7.201803,-7.480503,-7.041957],[7.115886,8.619871,-4.694226,8.336384],[-9.247642,-5.193203,2.637967,3.977117],[-7.850234,7.081234,-3.047285,7.607860],[-3.005185,2.693988,0.959686,-8.892288],[7.250413,-6.157262,-6.125157,-9.488799],[0.238672,-1.575079,-1.224841,2.862093],[-2.396672,-2.555759,-7.089008,1.875324],[-4.426093,5.120788,-7.881362,-7.388390],[-5.976389,0.458443,4.918700,6.046199],[-4.213861,4.108915,-5.322672,8.894741],[6.086776,4.472301,-8.812541,-5.106628],[1.618928,-7.223722,-4.233514,-7.544365],[6.930584,6.071140,7.496434,1.524614],[-3.924298,5.078112,1.161533,2.339936],[-4.686954,-0.648954,5.116011,2.052766],[2.974423,-4.453866,5.364974,-9.150166],[-2.847626,5.910985,-6.014080,1.310917],[7.420139,6.869758,-0.067931,5.792390],[-3.715728,1.773793,-9.427174,-3.819341],[-6.858921,5.198620,0.456486,6.560545],[9.513442,-1.556074,7.223428,9.512402],[-3.785897,-0.333135,8.642877,9.656621],[5.205518,-7.122749,-1.444460,2.954018],[4.929140,-8.691070,-2.183357,7.689079],[-0.155486,-8.514887,2.896827,-9.553771],[-4.866001,-7.719665,-8.092443,7.253387],[-5.289377,3.200044,4.006040,-8.610628],[-7.034388,0.515970,-0.947624,-7.085850],[-3.429377,-5.225623,-6.177907,6.311959],[7.035859,4.324733,-0.954055,-5.299731],[-9.994235,5.983345,-0.056006,-8.591358],[-4.209063,-5.404415,-1.034535,4.068115],[3.977551,5.034933,-8.106778,-3.585460],[-7.093585,6.574054,9.956276,-3.477388],[7.769930,3.151385,6.507733,-2.040227],[3.602023,-3.427573,-2.408976,4.333246],[9.670347,3.307416,2.307960,-4.134697],[5.993139,-5.430765,3.710305,-3.010166],[-9.473755,-9.526900,-0.231893,7.069476],[0.656920,2.271301,0.615801,6.397624],[9.474907,-5.518736,6.327503,4.054990],[-1.297602,5.619191,-8.639180,3.108147],[1.367866,-3.552186,-6.719863,7.174507],[5.927692,6.083990,5.743430,6.829685],[-4.148523,-0.611447,-2.123701,-3.266023],[7.550339,-6.221210,-9.192375,6.958330],[-5.914552,2.318264,3.296665,-0.672311],[2.188644,-3.217906,0.209264,-7.820437],[2.508579,9.367551,-8.461880,4.245410]], dtype = "float64")#candidate|6468|(120, 4)|const|float64
call_6467 = func_5665_call(relay.reshape(const_6468.astype('float64'), [8, 6, 10]))
call_6469 = func_5665_call(relay.reshape(const_6468.astype('float64'), [8, 6, 10]))
output = relay.Tuple([call_6445,call_6467,const_6468,])
output2 = relay.Tuple([call_6446,call_6469,const_6468,])
func_6474 = relay.Function([], output)
mod['func_6474'] = func_6474
mod = relay.transform.InferType()(mod)
output = func_6474()
func_6475 = relay.Function([], output)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5402_call = mod.get_global_var('func_5402')
func_5403_call = mutated_mod.get_global_var('func_5403')
call_6567 = relay.TupleGetItem(func_5402_call(), 1)
call_6568 = relay.TupleGetItem(func_5403_call(), 1)
output = relay.Tuple([call_6567,])
output2 = relay.Tuple([call_6568,])
func_6573 = relay.Function([], output)
mod['func_6573'] = func_6573
mod = relay.transform.InferType()(mod)
output = func_6573()
func_6574 = relay.Function([], output)
mutated_mod['func_6574'] = func_6574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6474_call = mod.get_global_var('func_6474')
func_6475_call = mutated_mod.get_global_var('func_6475')
call_6608 = relay.TupleGetItem(func_6474_call(), 1)
call_6609 = relay.TupleGetItem(func_6475_call(), 1)
uop_6618 = relay.log2(call_6608.astype('float64')) # shape=(8, 6, 10)
uop_6620 = relay.log2(call_6609.astype('float64')) # shape=(8, 6, 10)
output = relay.Tuple([uop_6618,])
output2 = relay.Tuple([uop_6620,])
func_6638 = relay.Function([], output)
mod['func_6638'] = func_6638
mod = relay.transform.InferType()(mod)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6638_call = mutated_mod.get_global_var('func_6638')
call_6639 = func_6638_call()
output = call_6639
func_6640 = relay.Function([], output)
mutated_mod['func_6640'] = func_6640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5649_call = mod.get_global_var('func_5649')
func_5651_call = mutated_mod.get_global_var('func_5651')
call_6655 = relay.TupleGetItem(func_5649_call(), 2)
call_6656 = relay.TupleGetItem(func_5651_call(), 2)
func_586_call = mod.get_global_var('func_586')
func_590_call = mutated_mod.get_global_var('func_590')
const_6663 = relay.const([-0.227992,7.943857,-8.737412,5.313888,-4.616071,1.429185,-0.974206,2.930846,-1.934365,2.538521,-0.572644,1.419510,-5.173865,0.017270,-0.032934,4.723523,-1.236437,-6.394233,-2.584720,8.690735,1.049512,6.983689,0.044664,0.111592,-0.459368,-2.244746,-7.305950,-3.234013,-1.483575,-6.326698,8.915158,4.453742,6.326214,-1.384559,-1.397365,-9.443489,9.491103,2.859514,-6.774918,-0.233188,7.064098,3.218455,-3.306852,0.603735,3.098199,0.439274,4.178266,6.567219,3.992840,4.786619,5.074167,2.033233,1.378871,7.424484,7.069846,5.438996,6.388743,-8.201887,-7.026946,-2.139121,5.717134,-3.684691,-7.819385,9.432881,4.047669,6.942962,-3.996588,1.681794,9.353150,3.542759,-7.433663,-4.819345,8.174827,5.626073,-8.396185,-7.805169,-8.091924,-4.623071,-0.936223,-4.948988,-8.740472,-1.970673,-9.504054,6.774148,4.544525,-9.813707,2.882267,5.711282,7.357524,-3.880876,-1.551224,0.387543,2.099495,5.678502,-0.880374,0.141140,-9.569125,7.936036,-4.703932,-7.183359,-0.234009,4.359871,5.124249,-3.521167,-2.506809,-7.450852,9.347967,8.088474,-0.932416,-8.734618,-3.037574,8.510798,-3.160897,2.524022,5.661426,-9.574193,-5.368846,8.399881,-4.041938,-2.079658,-1.188553,0.288878,-7.838836,-8.509234,8.691974,3.218583,3.513470,-7.504740,-7.831222,-4.691075,-8.819306,0.419077,-6.856831,-7.717543,-5.787342,9.597010,-5.144266,9.087285,9.315438,3.431039,-8.923361,-1.300207,0.046991,5.379691,-4.737121,-5.115344,-6.093460,6.192306,-8.483172,3.021413,-2.127738,-0.570790,8.182144,-5.237784,9.703548,-6.626703,-6.066851,8.835126,7.240012,5.412247,-4.830468,-2.522615,1.538369,-9.200081,-7.896849,1.697175,-8.698717,3.741643,9.908122,5.142583,3.819618,-9.573518,-2.882531,3.676636,4.517037,-2.816526,-2.189106,-5.658617,-1.599709,-9.667289,5.372367,-2.243413,7.963446,3.181926,5.352272,6.730233,-1.271318,-8.956444,-4.421389,8.181145,0.272860,8.093904,-0.427059,0.205805,-5.078527,4.704183,8.160385,-4.800821,3.590927,7.426009,-1.178280,3.989754,4.353252,3.429648,-7.664873,9.773174,-4.397940,7.358651,-5.631081,-2.153908,-7.083600,-7.562772,5.753252,-6.517188,0.890974,5.133923,3.848215,-8.077794,-5.250974,-0.473605,-1.297309,-8.668974,-7.088181,-0.545207,6.893416,-7.755401,-4.279801,5.065170,4.440927,3.755883,-1.943151,-2.075279,8.318432,-1.298953,-0.476711,-8.348428,-1.469692,-3.268195,3.623194,9.315647,5.962383,-7.713154,3.357186,7.640989,-3.508369,5.511307,9.558002,-8.758677,-6.018189,-0.259918,4.937358,-0.621341,-3.165576,-4.685111,1.783749,-9.049338,6.263399,-4.988414,-1.911298,5.345078,-2.414324,4.292638,-5.139044,0.278311,-2.891802,-4.345979,-9.451513,3.537835,2.217585,-3.238845,-0.319226,8.628555,-5.430306,-7.470067,8.306790,9.296181,-7.083905,0.392003,-1.893642,4.182235,-5.254034,-2.232636,-5.051349,0.238277,9.339334,-5.290583,-3.199792,-0.644880,-2.243662,-0.129216,-8.751517,2.281654,-3.383758,-8.611425,4.241012,-5.911026,0.199862,2.314164,-2.511994,9.131794,-0.258880,4.550784,1.048850,7.145306,-1.370069,4.691629,1.970984,1.408881,2.246868,-6.021345,-3.112302,-4.374770,9.279177,1.627770,1.472085,-5.898194,8.110588,-4.730504,9.877142,-1.954986,0.377166,-5.662247,-2.633472,0.553971,5.852826,0.133640,-3.116972,9.766381,0.552864,4.283834,2.900520,-3.743219,-8.895620,2.854569,9.442283,2.279187,8.499246,5.112892,-5.234666,5.780000,0.511334,0.790021,0.766675,8.377321,4.492164,2.679942,-3.042422,0.505164,-4.427459,-4.953838,-4.412959,0.932530,-0.803460,-1.449555,3.744485,-7.815055,-1.786094,-3.435564,3.546571,-4.558633,-9.704774,6.109724,5.841965,5.790217,-6.963375,5.640920,-3.897166,-6.436799,-3.541409,1.128239,7.070271,-9.320864,9.613119,9.615324,-1.062202,7.085586,3.215999,-3.015080,-6.117553,-1.573341,6.447287,2.797147,-1.948609,-8.049522,-3.660135,-9.611029,-9.325514,6.012727,8.688005,-8.788671,-0.533342,7.903395,-4.092122,4.747157,6.095950,1.456296,3.465677,-1.188143,5.586571,-4.045474,-2.621811,4.455196,1.408630,-7.888006,8.358930,6.254675,8.785096,6.805968,-8.201301,-8.262491,-9.782685,-6.163935,-1.104277,-0.125291,-6.139895,-9.064694,0.013873,7.779855,-1.014036,-7.450190,-9.561324,-3.177391,-7.596732,3.263213,-4.361233,-7.347505,-9.387407,-0.293129,-8.799506,-7.177369,-6.038703,6.254195,-8.507160,-7.552568,3.310819,-9.355592,-2.869437,6.629516,-8.285854,7.040470,-5.774539,0.096907,9.447437,4.958285,-2.304466,-3.364638,-3.027912,0.152563,-0.252728,-1.418385,-9.765363,7.689335,3.870933,1.963525,5.232814,-4.021132,-6.032209,-2.624708,8.728399,3.788637,8.562483,-4.224927,-0.701575,-5.536901,-5.596257,-7.629216,9.774206,9.399793,-3.374918,-2.859033,-7.990201,3.123745,3.001895,-3.039362,8.372491,-2.532446,0.778061,7.707870,-0.061522,-3.662343,-7.982893,3.084730,-1.552748,-8.746949,6.678366,-6.817064,4.347477,3.100199,-5.646551,1.525056,3.757744,-4.174283,6.891819,-0.511059,-9.645643,-8.961668,0.295620,-2.352057,-4.007262,-1.103450,-7.275912,1.549419,-2.270036,-7.015162,-9.862800,3.123820,0.354109,-1.733829,1.584686,0.312258,0.403641,-9.271319,2.641178,-4.854694,0.409617,-5.143550,-5.740697,4.050651,-9.166588,2.363978,1.432683,-6.445356,-4.469574,5.490776,-7.522338,0.351761,-3.501530,-8.029861,3.136117,-8.989015,-3.617617,-1.834312,-7.148997,7.644855,1.630153,-6.339482,5.301949,1.395386,4.092566,6.462051,8.988601,-2.207380,-2.667786,-2.383249,7.901224,-8.785040,7.008226,-3.453910,-4.174130,-2.161484,-9.353174,8.616461,9.971074,-0.058229,4.791259,-9.024801,-2.205054,5.319522,-1.880465,-2.150721,-6.087195,3.719631,9.354451,1.753229,1.953736,9.413713,-5.162827,-3.842471,-3.078834,1.872346,-5.399649,-0.891802,-5.144599,-5.779238,1.222027,-8.092320,1.157070,5.358297,-4.012828,3.097051,-9.276668,8.050165,8.952158,1.563123,-3.372868,3.243215,-1.195569,-1.643835,4.602343,1.834336,4.387217,-2.714520,1.562393,-7.030627,6.078011,-3.812487,-6.199601,-3.214714,1.414110,4.487447], dtype = "float32")#candidate|6663|(600,)|const|float32
var_6664 = relay.var("var_6664", dtype = "float32", shape = (405, 2))#candidate|6664|(405, 2)|var|float32
const_6665 = relay.const([6.645514,3.590236,-5.905307,-0.838480,-5.411314,-9.791163,7.743280,-3.984483,-9.047016,9.760677,-3.633246,-9.460539,7.412689,5.214694,7.475493,8.032863,4.586165,-5.055203,-6.869884,-2.131689,-4.009208,8.416432,-7.290537,-9.851453,3.710401,-6.715719,4.006626,-6.529498,-1.686487,-4.910886,5.023963,7.209310,-6.806740,-1.945291,-7.581149,3.597052,7.678956,-3.523827,-9.657154,-6.836278,3.996721,1.169388,2.945654,2.105863,7.333989,6.212486,0.903030,-8.774916,2.862064,-1.463769,4.495717,-7.082107,-3.109760,-3.810100,8.940082,-4.520734,-4.773145,-5.953242,-6.662777,2.488722,0.292655,-7.469502,3.830950,-2.673213,0.671993,-0.436200,-9.417648,0.426147,-8.534435,1.520103,-4.507423,-7.555367,-9.752288,-2.997245,-7.843043,-3.247738,6.551299,-3.772904,7.881313,2.646374,-1.778113,-0.247470,-4.222526,5.821066,9.964881,8.717071,4.399129,-3.950512,-5.749365,-1.368650,9.014695,-9.761167,2.419306,5.996065,8.194398,1.498140,1.701293,-8.975376,8.033866,-9.138534,-9.780439,-5.075544,5.443250,5.498619,1.662078,-8.789646,3.884681,5.048285,6.962225,1.449369,5.226887,-5.208563,-2.513827,0.915047,7.141180,7.533006,3.888803,8.330736,-7.283924,-5.399655,-4.804749,-6.114018,7.628654,-2.633598,9.987524,1.111006,-8.448073,4.121552,-7.659827,-9.991352,-7.277352,3.606672,2.325251,-5.236415,-4.536090,6.299813,6.723770,-0.151124,-8.897539,5.915046,-3.511631,-3.242263,5.283374,-4.739636,-2.855690,2.746472,-5.043828,-3.309718,0.689258,8.094993,0.006098,-9.858544,8.157454,8.485524,3.859544,9.197294,9.143718,-4.652955,9.808582,-7.743201,1.703679,-3.269908,8.114139,4.211603,2.180718,-2.221778,9.602027,6.463186,3.318798,-0.109176,5.082982,-2.958189,-1.697199,9.538837,9.416143,1.899042,6.760285,-7.952484,4.457675,0.113160,0.535054,8.044921,-1.725863,2.184166,-0.489824,-5.130432,8.815843,-2.938331,6.157897,3.449601,-4.909285,0.954681,-0.508271,-8.598087,2.561107,-6.502185,8.798699,-5.233528,-6.538863,0.264142,7.102015,-8.083794,-3.659295,-2.987418,0.034331,8.533306,2.529140,7.329621,-1.517411,3.953872,-1.139483,-9.601255,8.032332,2.736834,-9.651021,-7.056732,7.388414,-1.642329,-3.820875,7.688745,-4.365688,9.754457,-6.930501,8.601470,-6.646970,-2.422341,-6.646042,-7.054888,8.084267,2.993942,-4.752841,-1.969292,4.934911,0.678920,4.165874,6.202587,0.487595,8.765484,6.898187,4.263406,9.045406,-5.456913,-6.574771,-3.703471,2.868260,-1.750976,6.634111,0.580213,0.664441,-0.836604,9.198259,9.578695,-5.975581,-1.776700,7.467057,5.439926,-9.689180,6.802127,-0.539425,-9.942970,4.145297,2.863225,0.322500,4.506339,-7.777264,-4.225210,5.489671,-8.022173,-3.744647,-0.389170,-4.242978,0.979637,0.645301,-3.156281,-3.260384,4.212253,3.496927,-8.386511,4.211887,0.394744,-6.641147,-2.146237,8.081544,8.353074,5.891194,-0.367886,-3.304687,-8.684841,-1.433897,7.589457,-4.444344,-8.074650,-0.147733,-6.668600], dtype = "float64")#candidate|6665|(294,)|const|float64
call_6662 = relay.TupleGetItem(func_586_call(relay.reshape(const_6663.astype('float32'), [10, 5, 12]), relay.reshape(var_6664.astype('float32'), [810,]), relay.reshape(const_6665.astype('float64'), [294,]), ), 4)
call_6666 = relay.TupleGetItem(func_590_call(relay.reshape(const_6663.astype('float32'), [10, 5, 12]), relay.reshape(var_6664.astype('float32'), [810,]), relay.reshape(const_6665.astype('float64'), [294,]), ), 4)
output = relay.Tuple([call_6655,call_6662,const_6663,var_6664,const_6665,])
output2 = relay.Tuple([call_6656,call_6666,const_6663,var_6664,const_6665,])
func_6691 = relay.Function([var_6664,], output)
mod['func_6691'] = func_6691
mod = relay.transform.InferType()(mod)
mutated_mod['func_6691'] = func_6691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6692 = relay.var("var_6692", dtype = "float32", shape = (405, 2))#candidate|6692|(405, 2)|var|float32
func_6691_call = mutated_mod.get_global_var('func_6691')
call_6693 = func_6691_call(var_6692)
output = call_6693
func_6694 = relay.Function([var_6692], output)
mutated_mod['func_6694'] = func_6694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5935_call = mod.get_global_var('func_5935')
func_5937_call = mutated_mod.get_global_var('func_5937')
call_6696 = func_5935_call()
call_6697 = func_5935_call()
output = call_6696
output2 = call_6697
func_6701 = relay.Function([], output)
mod['func_6701'] = func_6701
mod = relay.transform.InferType()(mod)
mutated_mod['func_6701'] = func_6701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6701_call = mutated_mod.get_global_var('func_6701')
call_6702 = func_6701_call()
output = call_6702
func_6703 = relay.Function([], output)
mutated_mod['func_6703'] = func_6703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3680_call = mutated_mod.get_global_var('func_3680')
call_6748 = relay.TupleGetItem(func_3679_call(), 1)
call_6749 = relay.TupleGetItem(func_3680_call(), 1)
func_4791_call = mod.get_global_var('func_4791')
func_4793_call = mutated_mod.get_global_var('func_4793')
call_6775 = relay.TupleGetItem(func_4791_call(), 1)
call_6776 = relay.TupleGetItem(func_4793_call(), 1)
bop_6777 = relay.multiply(call_6775.astype('int32'), relay.reshape(call_6748.astype('int32'), relay.shape_of(call_6775))) # shape=(9, 5, 7)
bop_6780 = relay.multiply(call_6776.astype('int32'), relay.reshape(call_6749.astype('int32'), relay.shape_of(call_6776))) # shape=(9, 5, 7)
output = bop_6777
output2 = bop_6780
func_6791 = relay.Function([], output)
mod['func_6791'] = func_6791
mod = relay.transform.InferType()(mod)
output = func_6791()
func_6792 = relay.Function([], output)
mutated_mod['func_6792'] = func_6792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4754_call = mod.get_global_var('func_4754')
func_4756_call = mutated_mod.get_global_var('func_4756')
call_6800 = func_4754_call()
call_6801 = func_4754_call()
func_3642_call = mod.get_global_var('func_3642')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_6810 = relay.TupleGetItem(func_3642_call(), 1)
call_6811 = relay.TupleGetItem(func_3644_call(), 1)
output = relay.Tuple([call_6800,call_6810,])
output2 = relay.Tuple([call_6801,call_6811,])
func_6816 = relay.Function([], output)
mod['func_6816'] = func_6816
mod = relay.transform.InferType()(mod)
mutated_mod['func_6816'] = func_6816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6816_call = mutated_mod.get_global_var('func_6816')
call_6817 = func_6816_call()
output = call_6817
func_6818 = relay.Function([], output)
mutated_mod['func_6818'] = func_6818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6065_call = mod.get_global_var('func_6065')
func_6066_call = mutated_mod.get_global_var('func_6066')
call_6954 = relay.TupleGetItem(func_6065_call(), 0)
call_6955 = relay.TupleGetItem(func_6066_call(), 0)
func_5365_call = mod.get_global_var('func_5365')
func_5368_call = mutated_mod.get_global_var('func_5368')
const_6963 = relay.const([[-1,4],[3,-7],[8,4],[5,-7],[-1,-9],[-7,9],[-5,9],[-5,5],[-6,-10],[-2,7],[-6,-7],[3,4],[-4,-6],[-1,-10],[-8,-10],[8,8],[6,-4],[7,-2],[4,-4],[3,1],[-2,2],[-2,10],[1,-2],[5,4],[-8,-4],[4,5],[-3,-5],[8,-4],[4,2],[8,3],[-1,-10],[-5,-2],[5,-5],[9,-6],[-1,-1],[-8,-7],[-2,-8],[2,10],[8,-2],[6,-3],[9,9],[10,-2],[-8,-9],[-7,9],[-5,10],[10,-1],[-1,9],[-8,-8],[4,4],[-5,-4],[1,-1],[8,-10],[7,-2],[-1,5],[-7,-7],[9,-1],[5,7],[-4,-4],[4,3],[-5,7],[-2,-1],[4,-5],[10,-4],[-9,2],[-2,3],[1,9],[1,7],[7,-8],[-5,-2],[-4,-9],[-10,3],[-10,3],[-7,-6],[-4,-2],[-10,-10],[7,6],[8,-10],[-6,7],[2,5],[-7,3],[-5,-2],[5,3],[-7,2],[5,-5],[-7,-5],[3,-1],[2,-8],[2,-4],[-2,5],[4,-5],[-3,2],[-7,10],[3,-9],[7,-3],[5,1],[5,-4],[4,8],[-9,9],[-2,-1],[10,-6],[-9,7],[-4,9],[4,-7],[-5,-7],[2,9],[10,5],[-8,4],[-10,-9],[5,8],[-8,9],[5,2],[6,-1],[7,-2],[-5,-3],[-7,-1],[7,-7],[5,2],[-2,-7],[6,9],[1,2],[9,6],[-5,6],[-8,-9],[6,7],[-3,7],[9,-2],[-3,7],[-10,-3],[5,2],[-10,9],[5,3],[6,-3],[9,6],[-5,-3],[9,4],[10,-10],[-9,-4],[1,9],[5,-9],[1,2],[3,-10],[-6,7],[-6,7],[-8,-3],[-9,8],[-4,10],[-8,-10],[3,1],[-2,4],[-5,-5],[4,6],[-9,1],[-6,8],[3,-9],[6,-1],[3,-5],[-4,-3],[2,9],[10,-7],[6,6],[6,-4],[-3,1],[-2,8],[-4,-2],[-6,7],[-3,-3],[6,9],[-10,4],[1,5],[8,-3],[10,-8],[8,3],[5,9],[10,10],[-6,6],[5,1],[7,-10],[-4,9],[-6,-8],[-9,6],[5,-1],[-1,-1],[-9,10],[8,-10],[9,-3],[-2,-7],[-9,3],[-8,-1],[8,7],[2,-6],[-6,5],[-10,-8],[4,10],[-4,-4],[-3,-3],[8,3],[-8,5],[10,-1],[10,10],[-2,6],[2,1],[4,8],[-4,8],[7,-10],[-4,4],[-8,10],[-2,5],[1,-9],[-9,6],[8,9],[-7,6],[10,8],[10,-8],[7,-4],[10,-3],[1,1],[-2,3],[5,2],[1,-7],[-3,-5],[-4,-3],[10,-10],[-9,1],[-4,-9],[-1,6],[6,-7],[5,10],[-6,-3],[5,-3],[-3,5],[-5,1],[-9,4],[7,-4],[-8,-2],[5,-3],[6,-3],[-1,-5],[-9,-8],[9,4],[2,-9],[-9,-1],[-6,-2],[-6,1],[-2,-10],[1,1],[10,-6],[9,-8],[-7,-9],[10,5],[-5,-6],[-5,-1],[-1,2],[-10,4],[2,-10],[10,-1],[5,-5],[-2,-2],[1,-7],[4,3],[-3,-9],[-10,3],[-5,-3],[1,3],[-4,4],[3,4],[-1,-10],[1,2],[10,6],[-4,-2],[-4,-5],[-8,4],[9,9],[-1,5],[6,-8],[-9,-10],[2,9],[-7,-7],[3,-7],[-10,-5],[6,-10],[9,-2],[1,1],[-10,8],[-10,-8],[-5,9],[6,-3],[8,5],[3,2],[3,10],[-4,5],[-3,6],[2,-2],[8,7],[9,2],[9,1],[5,8],[7,-5],[9,5],[-6,7],[2,5],[1,5],[3,7],[-5,3],[-4,-1],[9,2],[-7,-9],[-5,-1],[4,-10],[-9,6],[2,-3],[4,10],[-9,8],[8,-3],[8,-10],[-8,1],[-6,-8],[-6,8],[-10,7],[-8,-1],[-6,4],[-3,-1],[-1,-4],[-1,-3],[-8,3],[-5,-1],[1,-8],[-3,-8],[2,-4],[-1,5],[-3,2],[-6,2],[-6,-5],[5,6],[4,-5],[-5,-7],[-6,-1],[4,-10],[-5,-5],[-9,-2],[-10,-6],[2,1],[7,2],[-10,10],[-10,3],[-7,4],[-7,-2],[4,9],[-10,10],[-10,10],[8,1],[3,-6],[-4,-8],[1,-4],[9,-3],[9,-8],[1,-3],[-1,-8],[8,-9],[-3,-3],[-3,2],[3,4],[-4,-6],[3,4],[-3,2],[-1,-3],[2,-8],[-8,-5],[-4,-6],[-5,-2],[9,1],[-3,3],[1,10],[-8,9],[-6,6],[-1,-4],[8,-3],[-10,1],[4,-1],[-7,5],[-4,8],[-1,-3],[-5,10],[1,-1],[5,1],[1,-7],[4,-4],[-2,6],[7,9],[10,-4],[10,1],[9,10],[7,9],[3,-5],[-4,5],[9,4],[-7,5],[-5,-2],[-4,-6],[-4,6],[8,-9],[3,-8],[-2,-5],[-6,8],[-1,1],[-1,-1],[-8,7],[5,-5],[-1,6],[10,-3],[8,-5],[6,-8],[-8,3],[1,-6],[4,3],[9,4],[2,-5],[5,5],[5,-8],[5,8],[-4,-3],[-6,4],[-2,-1],[6,-2],[7,-1],[5,-6],[9,-1],[-9,-8],[-9,-9],[-1,7],[1,6],[-3,-6],[-8,-3],[-6,-3],[-4,-9],[-3,-7],[9,-9],[9,6],[6,-7],[-2,1],[9,-3],[4,10],[-10,2],[-8,-6],[-3,7],[-5,-1],[-7,-3],[-9,-1],[10,-5],[-1,4],[-6,7],[-3,10],[1,7],[-2,-8],[7,2],[-6,6],[6,-2],[-8,10],[-3,9],[9,-4],[-9,-6],[-1,4],[6,4],[6,9],[3,10],[-10,-9],[-7,-10],[8,-7],[-5,9],[-9,-6],[8,6],[1,-7],[9,-8],[-10,-1],[-5,-3],[3,9],[-5,7],[-3,9],[-2,5],[-2,-10],[2,7],[6,6],[7,4],[1,1],[4,-2],[-1,-8],[7,6],[8,8],[5,1],[-5,1],[-10,5],[10,9],[-4,-1],[-3,-5],[4,10],[9,-3],[7,-4],[-3,-6],[1,6],[5,-5],[8,1],[-7,-4],[10,-3],[3,-3],[-2,-3],[-3,-9],[8,6],[-9,-4],[9,8],[4,6],[-5,-4],[7,-1],[6,3],[2,-4],[5,6],[4,-3],[-5,-8],[-5,6],[-5,10],[-10,10],[-2,-5],[-7,7],[-2,-8],[-2,9],[3,8],[-4,-10],[7,-1],[-9,-2],[8,-7],[10,-6],[4,-9],[8,6],[5,-1],[-10,-8],[-9,3],[3,-8],[7,-5],[9,9],[9,10],[8,-9],[1,4],[9,6],[4,-5],[-7,8],[-10,10],[6,3],[-9,-1],[2,-10],[9,2],[-7,-7],[10,-5],[-7,-10],[8,8],[-9,-9],[7,-5],[-1,-2],[10,-8],[4,5],[-7,2],[7,-5],[-4,-9],[8,-3],[-10,-4],[3,1],[9,10],[5,7],[8,-8],[-1,-10],[-7,-10],[-8,10],[1,-7],[9,8],[7,1],[-3,-6],[8,-6],[8,-6],[6,10],[8,10],[-3,4],[6,1],[-7,-5],[-9,-1],[-4,7],[-4,7],[-10,-2],[6,-8],[10,2],[-3,9],[-5,2],[7,2],[2,-5],[2,-6],[8,1],[-1,-6],[10,-7],[3,4],[-4,2],[10,5],[3,8],[-2,10],[-4,8],[1,-8],[-4,-3],[-3,-2],[3,-8],[-8,-7],[-5,-8],[1,10],[10,-3],[-2,1],[6,-10],[3,5],[8,1],[6,-8],[-4,9],[6,-3],[5,-5],[-6,4],[2,-10],[8,3],[1,-3],[-3,-10],[-7,2],[-6,8],[-2,-10],[-1,2],[-10,10],[-2,-3],[6,-9],[-7,6],[6,7],[-5,-5],[10,-9],[2,6],[-8,8],[-9,10],[-9,6],[8,9],[-2,-7],[-1,-5],[-10,4],[8,3],[-6,5],[-4,-3],[-3,-8],[-3,-4],[3,-3],[6,3],[-4,7],[7,-7],[1,-10],[-6,9],[-4,-10],[-3,-3],[6,9],[3,7],[1,9],[-3,10],[-10,-8],[-5,-6],[5,-9],[10,5],[5,-7],[9,6],[-9,-7],[3,6],[-10,-10],[3,-8],[-9,7],[9,5],[-9,2],[10,8],[-5,2],[4,3],[-4,3],[-8,4],[-7,9],[6,-10],[8,-2],[2,-10],[9,-6],[9,9],[2,-9],[-2,-8],[-7,-5],[-10,-5],[-8,9],[-9,8],[-10,-10],[-4,2],[-2,4],[7,3],[10,-4],[-6,3],[10,-6],[2,8],[8,10],[-9,-6],[3,-5],[6,2],[-7,-8],[-9,-8],[4,7],[-8,5],[3,6],[8,-2],[-3,-1],[4,-7],[-4,-5],[6,2],[-7,-6],[-6,-9],[-8,10],[8,-1],[1,-10],[-7,-8],[-1,-6],[6,9],[-8,6],[-9,2],[1,-5],[6,-10],[8,-3],[-6,-10],[4,6],[-5,-3],[1,9],[-6,7],[-5,-6]], dtype = "uint64")#candidate|6963|(728, 2)|const|uint64
call_6962 = relay.TupleGetItem(func_5365_call(relay.reshape(const_6963.astype('uint64'), [4, 364])), 3)
call_6964 = relay.TupleGetItem(func_5368_call(relay.reshape(const_6963.astype('uint64'), [4, 364])), 3)
output = relay.Tuple([call_6954,call_6962,const_6963,])
output2 = relay.Tuple([call_6955,call_6964,const_6963,])
func_6971 = relay.Function([], output)
mod['func_6971'] = func_6971
mod = relay.transform.InferType()(mod)
mutated_mod['func_6971'] = func_6971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6971_call = mutated_mod.get_global_var('func_6971')
call_6972 = func_6971_call()
output = call_6972
func_6973 = relay.Function([], output)
mutated_mod['func_6973'] = func_6973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6081_call = mod.get_global_var('func_6081')
func_6082_call = mutated_mod.get_global_var('func_6082')
call_6986 = func_6081_call()
call_6987 = func_6081_call()
output = call_6986
output2 = call_6987
func_7001 = relay.Function([], output)
mod['func_7001'] = func_7001
mod = relay.transform.InferType()(mod)
mutated_mod['func_7001'] = func_7001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7001_call = mutated_mod.get_global_var('func_7001')
call_7002 = func_7001_call()
output = call_7002
func_7003 = relay.Function([], output)
mutated_mod['func_7003'] = func_7003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5402_call = mod.get_global_var('func_5402')
func_5403_call = mutated_mod.get_global_var('func_5403')
call_7016 = relay.TupleGetItem(func_5402_call(), 1)
call_7017 = relay.TupleGetItem(func_5403_call(), 1)
func_3918_call = mod.get_global_var('func_3918')
func_3921_call = mutated_mod.get_global_var('func_3921')
var_7019 = relay.var("var_7019", dtype = "float64", shape = (480,))#candidate|7019|(480,)|var|float64
const_7020 = relay.const([True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False], dtype = "bool")#candidate|7020|(180,)|const|bool
call_7018 = relay.TupleGetItem(func_3918_call(relay.reshape(var_7019.astype('float64'), [8, 6, 10]), relay.reshape(const_7020.astype('bool'), [180,]), ), 6)
call_7021 = relay.TupleGetItem(func_3921_call(relay.reshape(var_7019.astype('float64'), [8, 6, 10]), relay.reshape(const_7020.astype('bool'), [180,]), ), 6)
func_5977_call = mod.get_global_var('func_5977')
func_5979_call = mutated_mod.get_global_var('func_5979')
call_7028 = relay.TupleGetItem(func_5977_call(), 0)
call_7029 = relay.TupleGetItem(func_5979_call(), 0)
func_6435_call = mod.get_global_var('func_6435')
func_6437_call = mutated_mod.get_global_var('func_6437')
var_7062 = relay.var("var_7062", dtype = "float32", shape = (90,))#candidate|7062|(90,)|var|float32
call_7061 = relay.TupleGetItem(func_6435_call(relay.reshape(var_7062.astype('float32'), [90,])), 0)
call_7063 = relay.TupleGetItem(func_6437_call(relay.reshape(var_7062.astype('float32'), [90,])), 0)
const_7067 = relay.const([-7.489909,-4.910584,6.735850,-3.036814,7.072388,-2.823787,-2.415187,4.557795,2.870087,-2.018893,2.615975,-1.683005,-5.448377,-9.381529,-0.863134,6.758185,-4.934363,-6.599070,7.003783,0.172589,-1.284910,-8.108803,8.257045,-6.984715,8.705860,3.707188,4.183909,-6.948838,3.612798,-6.628048,-3.286107,-7.376219,5.658539,-7.299888,7.905902,1.932472,-9.235295,-9.324297,-5.822882,-4.170601,1.489759,-8.231846,9.332157,1.716616,2.028810,6.323909,8.671005,-9.324722,-9.793157,7.509721,0.631747,1.871031,6.497526,9.749158,-0.232201,9.693485,7.224291,-1.367351,-6.624793,8.149380,9.402300,6.685811,6.198427,5.888300,-7.514953,8.572017,-5.563589,7.681493,1.495678,8.200152,8.223092,7.716087,-4.452406,3.244789,5.117222,-3.788073,6.320432,5.668061,-5.264565,-1.517638,-7.692866,-7.066923,-7.037266,-2.533369,-9.002478,-3.823684,-3.682653,-9.999844,7.560062,8.495105,-9.969414,-9.151163,6.801898,-6.736365,-3.809823,-8.774019,4.269327,7.427769,9.081635,7.186164,9.784160,1.100791,1.067022,-8.429490,2.117662,-4.192621,-7.405420,-0.717488,-4.544222,4.694064,8.591564,2.935952,-9.826042,2.568032,-3.287551,0.062542,-1.531211,8.947433,-8.837050,-6.174129,9.897679,3.965938,9.078023,3.312315,4.595396,6.774935,2.404518,2.681722,5.933292,6.836836,4.563586,-0.608483,7.068077,7.276936,3.727271,7.224927,-0.949914,-6.458841,-3.543354,-4.120893,-7.858739,7.758623,-4.185245,3.464154,4.835465,-1.058365,2.590188,-7.232387,-4.244617,-1.653378,6.080247,6.471492,2.481577,-1.649056,0.442896,1.207326,-6.013583,0.395976,3.513511,-1.702710,5.186386,0.931177,7.338312,2.312191,1.051089,-5.544242,-9.931903,2.622318,3.991661,0.909409,-9.948773,6.834374,0.028390,1.740513,3.389083,6.952049,-2.736813,-3.999555,-1.761130,-4.877618,9.810582,3.338185,-0.874296,2.587141,-8.534134,-7.646555,4.671985,6.644987,9.353276,6.582304,-3.318476,8.217880,9.743670,2.384447,-4.279996,-8.354377,-3.450180,9.762648,-6.921558,-6.995620,1.011361,9.174475,-8.515948,-1.495244,8.880044,3.744916,-2.638657,5.096496,-0.514971,-3.716062,-5.526904,-1.170758,-7.070167,9.961963,9.315402,1.987745,-3.194627,8.782119,1.671106,-9.601861,-7.787909,-4.822129,8.250078,-1.376464,-9.258774,-4.878649,4.735802,9.328958,-4.885425,-0.666986,3.862818,-0.460452,-2.098326,-4.310052,9.895391,9.666251,-4.337243,9.420109,6.578054,0.601905,-0.285063,-0.988272,0.560863,3.588922,-6.758331,2.795033,2.600859,2.018072,3.276619,4.909811,1.469729,-6.574823,-4.643282,8.748426,-9.551374,-4.416494,-9.734665,-7.070944,-0.014336,5.475045,-9.837732,-4.195707,-0.650127,5.541305,-4.026871,1.775571,4.364768,5.332538,5.742578,0.055527,-9.900631,-3.897767,-9.326666,-0.905045,-0.198429,9.880363,-9.144459,-3.688184,-2.732827,-7.045943,-8.672373,-8.064200,-1.022848,6.953197,-0.844445,6.530794,-7.988132,2.283589,-2.143286,-1.199767,9.608266,6.045555,6.277263,-0.721803], dtype = "float64")#candidate|7067|(294,)|const|float64
bop_7068 = relay.less(call_7018.astype('bool'), relay.reshape(const_7067.astype('bool'), relay.shape_of(call_7018))) # shape=(294,)
bop_7071 = relay.less(call_7021.astype('bool'), relay.reshape(const_7067.astype('bool'), relay.shape_of(call_7021))) # shape=(294,)
func_651_call = mod.get_global_var('func_651')
func_657_call = mutated_mod.get_global_var('func_657')
const_7075 = relay.const([-3,-7,-3,-8,-10,-7,-6,5,5,1,2,6,-8,-6,3,-5,6,-5,10,6,-2,10,1,-10,-3,-8,-2,2,-7,-1,8,7,2,7,-3,-2,5,-5,-9,5], dtype = "int32")#candidate|7075|(40,)|const|int32
const_7076 = relay.const([-9,-9,-6,-9,-9,5,-5,5,-8,4,-5,4,-7,2,-7,7,5,6,4,-8,-6,-8,1,10,4,-9,-5,7,-6,-4,-10,-8,8,-6,-1,7,1,-6,-1,-2,-2,-3,4,9,-9,-4,5,-3,5,-7,-6,-4,2,-9,-10,-9,2,9,10,-7,-2,-9,2,-10,-3,-5,-5,-8,-3,-1,8,5,-2,5,4,-2,-2,1,-4,2,2,-10,10,-4,-7,-6,-5,-4,-7,10,2,6,-4,9,-2,7,10,-10,5,3,-9,6,10,-2,10,6,3,-7,3,-4,7,-8,1,7,-2,-8,7,-6,4,4,9,8,-4,-8,1,3,-7,4,10,4,10,-4,3,-6,1,3,-9,-3,-5,9,5,3,4,-10,9,-8,-3,7,-4,5,10,5,-10,-2,9,3,5,6,5,4,7,2,4,-7,2,-4,-9,-10,7,-4,-5,-10,4,10,1,1,5,9,-5,-10,6,7,-4,4,1,8,6,-4,6,-8,-7,-7,6,-6,2,-6,-9,-6,2,-4,10,6,-2,4,6,6,-5,-10,3,-10,9,5,-8,10,-3,-2,-8,6,-3,-7,4,-4,10,-8,9,8,-5,-7,6,-3,-4,9,-7,2,-7,9,-6,-2,7,9,-9,4,-2,7,8,4,-8,4,9,-3,6,-10,5,7,4,-7,-5,-9,2,2,7,-4,10,-10,3,-5,-7,1,9,-3,-6,-7,3,-7,-3,7,-6,5,-10,-4,8,1,-6,-7,-10,9,-5,6,-4,3,1,-7,2,4,-7,-4,-8,10,9,1,10,-5,10,-2,-6,2,-6,6,-1,9,-9,-2,-10,-2,-2,8,5,-6,9,-9,-5,-2,-10,-1,1,6,5,-6,10,5,3,3,-9,4,9,10,-6,6,-3,6,9,3,-10,10,-10,-4,-8,-2,-8,-4,-4,10,9,6,3,7,4,7,-10,5,-1,5,-8,8,-7,-4,7,1,-7,7,8,1,5,-7,-4,6,-5,-7,-8,-10,7,6,-7,-7,5,-6,9,9,7,8,-10,9,5,-10,-2,10,4,3,-6,-6,8,7,1,-1,2,10,-4,-9,8,6,10,9,-3,-7,-7,-1,7,2,6,8,3,-1,-8,7,-2,6,-10,-9,-1,3,1,1,-4,8,6,-9,4,5,-2,8,7,9,-10,10,5,9,9,-4,5,-4,-7,-10,-3,-5,-9,-1,6,4,6,-7,-9,-7,-6,-5,4,-2,2,-4,-6,2,-1,-2,10,-4,1,-1,8,1,10,7,-5,7,-2,4,7,3,-6,-4,10,7,9,-4,-6,5,10,10,-4,5,-7,1,-3,-3,-9,7,6,3,-2,4,-9,-1,-4,6,-9,1,-10,-9,7,3,-8,-7], dtype = "int32")#candidate|7076|(520,)|const|int32
var_7077 = relay.var("var_7077", dtype = "float32", shape = (810,))#candidate|7077|(810,)|var|float32
call_7074 = relay.TupleGetItem(func_651_call(relay.reshape(const_7075.astype('int32'), [10, 4, 1]), relay.reshape(const_7076.astype('int32'), [10, 4, 13]), relay.reshape(var_7077.astype('float32'), [810,]), relay.reshape(call_7018.astype('float64'), [294,]), ), 4)
call_7078 = relay.TupleGetItem(func_657_call(relay.reshape(const_7075.astype('int32'), [10, 4, 1]), relay.reshape(const_7076.astype('int32'), [10, 4, 13]), relay.reshape(var_7077.astype('float32'), [810,]), relay.reshape(call_7018.astype('float64'), [294,]), ), 4)
func_5935_call = mod.get_global_var('func_5935')
func_5937_call = mutated_mod.get_global_var('func_5937')
call_7081 = func_5935_call()
call_7082 = func_5935_call()
output = relay.Tuple([call_7016,var_7019,const_7020,call_7028,call_7061,var_7062,bop_7068,call_7074,const_7075,const_7076,var_7077,call_7081,])
output2 = relay.Tuple([call_7017,var_7019,const_7020,call_7029,call_7063,var_7062,bop_7071,call_7078,const_7075,const_7076,var_7077,call_7082,])
func_7094 = relay.Function([var_7019,var_7062,var_7077,], output)
mod['func_7094'] = func_7094
mod = relay.transform.InferType()(mod)
mutated_mod['func_7094'] = func_7094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7094_call = mutated_mod.get_global_var('func_7094')
var_7096 = relay.var("var_7096", dtype = "float64", shape = (480,))#candidate|7096|(480,)|var|float64
var_7097 = relay.var("var_7097", dtype = "float32", shape = (90,))#candidate|7097|(90,)|var|float32
var_7098 = relay.var("var_7098", dtype = "float32", shape = (810,))#candidate|7098|(810,)|var|float32
call_7095 = func_7094_call(var_7096,var_7097,var_7098,)
output = call_7095
func_7099 = relay.Function([var_7096,var_7097,var_7098,], output)
mutated_mod['func_7099'] = func_7099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5504_call = mod.get_global_var('func_5504')
func_5506_call = mutated_mod.get_global_var('func_5506')
call_7117 = func_5504_call()
call_7118 = func_5504_call()
var_7120 = relay.var("var_7120", dtype = "int64", shape = (9, 5, 7))#candidate|7120|(9, 5, 7)|var|int64
bop_7121 = relay.greater(call_7117.astype('bool'), relay.reshape(var_7120.astype('bool'), relay.shape_of(call_7117))) # shape=(9, 5, 7)
bop_7124 = relay.greater(call_7118.astype('bool'), relay.reshape(var_7120.astype('bool'), relay.shape_of(call_7118))) # shape=(9, 5, 7)
output = bop_7121
output2 = bop_7124
func_7129 = relay.Function([var_7120,], output)
mod['func_7129'] = func_7129
mod = relay.transform.InferType()(mod)
mutated_mod['func_7129'] = func_7129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7130 = relay.var("var_7130", dtype = "int64", shape = (9, 5, 7))#candidate|7130|(9, 5, 7)|var|int64
func_7129_call = mutated_mod.get_global_var('func_7129')
call_7131 = func_7129_call(var_7130)
output = call_7131
func_7132 = relay.Function([var_7130], output)
mutated_mod['func_7132'] = func_7132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4322_call = mod.get_global_var('func_4322')
func_4324_call = mutated_mod.get_global_var('func_4324')
call_7139 = relay.TupleGetItem(func_4322_call(), 0)
call_7140 = relay.TupleGetItem(func_4324_call(), 0)
func_4060_call = mod.get_global_var('func_4060')
func_4063_call = mutated_mod.get_global_var('func_4063')
var_7147 = relay.var("var_7147", dtype = "float32", shape = (600,))#candidate|7147|(600,)|var|float32
const_7148 = relay.const([-7.796269,8.432284,-2.351057,-5.268551,-9.743261,-8.617042,1.852679,-1.903124,5.530412,3.879452,3.071233,-9.322883,9.827971,-2.775306,5.767923,9.962200,8.219046,-1.102446,7.531653,-2.914091,6.247977,8.765906,-2.367306,6.478813,9.296618,7.189101,3.171621,-8.915596,-1.332845,9.123550,-5.107672,4.276234,-2.121148,6.101037,6.848474,3.132071,-0.517381,9.095835,-1.895055,2.729835,-3.575471,9.531085,-8.207156,-9.416526,-4.581761,8.521025,-2.836431,-6.941518,-1.713144,-9.777875,-7.268900,-4.607712,-2.405879,1.844385,0.136903,7.429611,5.071818,3.363093,-7.761962,-6.061172,8.870433,4.868547,-6.482728,-6.955682,-4.225387,-8.785057,5.676922,9.524714,7.166214,-5.384754,1.589662,-4.017406,-3.584866,0.262937,2.684613,-7.175720,4.972618,-8.935523,6.977530,-9.466765,-9.882388,-1.372861,-0.016891,0.218739,-8.188265,-0.792580,8.117477,-5.793009,-9.223239,3.011357,6.050290,-3.912414,3.733210,2.261317,-5.855400,-5.783418,-6.335167,-4.122829,8.457427,-9.939213,4.376344,9.475811,9.638457,6.039749,5.546382,6.176363,-1.141459,3.349560,8.485516,-7.374379,4.948952,-6.569247,-2.213756,-4.642286,-4.435969,6.012492,7.761096,1.117189,1.187990,-9.830269,4.078286,6.300051,6.559309,8.822292,1.149379,-3.716135,2.050206,2.276031,6.882702,0.660505,-3.484277,-0.892008,8.096167,3.384671,-2.502392,-4.786596,7.914975,5.863754,-0.891890,3.457167,-5.395020,-9.726046,-2.454457,4.728107,6.421933,-8.208711,-3.217139,1.197588,-8.729727,-3.607463,-3.662306,-5.996547,-4.704079,7.692864,-8.976074,0.433393,-6.553570,-9.838651,3.204372,8.305187,-3.257275,-1.419943,-6.814622,3.674923,-6.626141,6.556630,-5.472215,7.938402,1.061439,0.301795,1.623906,-1.273736,0.060774,5.097637,5.823860,2.833337,-9.474330,-7.283085,-6.090567,0.728662,3.523966,3.245193,-8.922517,-4.457534,0.289848,0.053645,-5.737331,9.870383,0.604039,-1.260274,5.670573,-9.238949,-9.107454,-0.719407,-5.397944,6.693691,-7.674396,4.549903,1.674160,-1.926434,-2.623263,-4.965665,4.041949,-1.447930,-1.438536,3.046354,-7.866067,8.949821,-2.733543,8.792165,1.661085,-5.600462,-5.953526,-9.267555,-8.292097,-9.073738,-2.155938,9.690844,-8.436337,-1.034417,6.962960,-2.933535,-6.415339,-9.637751,2.586187,4.922486,-9.307116,-3.723882,-9.108865,2.671062,5.728676,7.548540,-0.855814,-5.291492,-0.974826,3.020138,-7.997231,6.213588,0.852116,-3.531496,-8.111578,1.429270,7.814273,0.942525,-1.834508,-9.816632,-5.499669,8.758266,6.827177,-1.704197,9.409652,3.362963,1.656181,-0.439337,-3.136002,-9.422010,-5.930420,8.901791,3.746043,7.071170,2.382795,-7.368901,9.019143,-7.066080,5.270882,-3.783209,-9.876880,-2.772708,6.396123,-7.262056,0.051509,-9.925376,-4.065052,-7.162679,-8.745454,6.801635,6.760561,2.548937,-7.147345,3.643032,-5.906345,-0.581050,1.061672,8.115487,1.540688,-9.724770,-2.554528,-7.352668,6.413084,-4.517826,4.875336,1.702511,6.178980,5.200583], dtype = "float64")#candidate|7148|(294,)|const|float64
call_7146 = relay.TupleGetItem(func_4060_call(relay.reshape(var_7147.astype('float32'), [6, 100]), relay.reshape(const_7148.astype('float64'), [294,]), ), 1)
call_7149 = relay.TupleGetItem(func_4063_call(relay.reshape(var_7147.astype('float32'), [6, 100]), relay.reshape(const_7148.astype('float64'), [294,]), ), 1)
func_5250_call = mod.get_global_var('func_5250')
func_5252_call = mutated_mod.get_global_var('func_5252')
const_7163 = relay.const([2,1,-3,-2,-7,-1,-8,9,9,-8,-4,5,-7,10,2,5,7,1,-8,6,5,-10,2,-6,3,-10,-5,2,1,-4], dtype = "uint8")#candidate|7163|(30,)|const|uint8
call_7162 = func_5250_call(relay.reshape(const_7163.astype('uint8'), [5, 1, 6]))
call_7164 = func_5250_call(relay.reshape(const_7163.astype('uint8'), [5, 1, 6]))
output = relay.Tuple([call_7139,call_7146,var_7147,const_7148,call_7162,const_7163,])
output2 = relay.Tuple([call_7140,call_7149,var_7147,const_7148,call_7164,const_7163,])
func_7165 = relay.Function([var_7147,], output)
mod['func_7165'] = func_7165
mod = relay.transform.InferType()(mod)
var_7166 = relay.var("var_7166", dtype = "float32", shape = (600,))#candidate|7166|(600,)|var|float32
output = func_7165(var_7166)
func_7167 = relay.Function([var_7166], output)
mutated_mod['func_7167'] = func_7167
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7172 = relay.var("var_7172", dtype = "uint32", shape = ())#candidate|7172|()|var|uint32
var_7173 = relay.var("var_7173", dtype = "uint32", shape = (6, 5, 8))#candidate|7173|(6, 5, 8)|var|uint32
bop_7174 = relay.bitwise_xor(var_7172.astype('uint32'), var_7173.astype('uint32')) # shape=(6, 5, 8)
func_6701_call = mod.get_global_var('func_6701')
func_6703_call = mutated_mod.get_global_var('func_6703')
call_7177 = func_6701_call()
call_7178 = func_6701_call()
var_7181 = relay.var("var_7181", dtype = "uint32", shape = (6, 5, 8))#candidate|7181|(6, 5, 8)|var|uint32
bop_7182 = relay.maximum(bop_7174.astype('uint32'), relay.reshape(var_7181.astype('uint32'), relay.shape_of(bop_7174))) # shape=(6, 5, 8)
output = relay.Tuple([call_7177,bop_7182,])
output2 = relay.Tuple([call_7178,bop_7182,])
F = relay.Function([var_7172,var_7173,var_7181,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7172,var_7173,var_7181,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

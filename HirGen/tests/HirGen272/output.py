import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_245 = relay.var("var_245", dtype = "bool", shape = (7, 8, 13))#candidate|245|(7, 8, 13)|var|bool
var_246 = relay.var("var_246", dtype = "bool", shape = (7, 8, 13))#candidate|246|(7, 8, 13)|var|bool
bop_247 = relay.logical_and(var_245.astype('bool'), relay.reshape(var_246.astype('bool'), relay.shape_of(var_245))) # shape=(7, 8, 13)
output = relay.Tuple([bop_247,])
output2 = relay.Tuple([bop_247,])
func_256 = relay.Function([var_245,var_246,], output)
mod['func_256'] = func_256
mod = relay.transform.InferType()(mod)
mutated_mod['func_256'] = func_256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_256_call = mutated_mod.get_global_var('func_256')
var_258 = relay.var("var_258", dtype = "bool", shape = (7, 8, 13))#candidate|258|(7, 8, 13)|var|bool
var_259 = relay.var("var_259", dtype = "bool", shape = (7, 8, 13))#candidate|259|(7, 8, 13)|var|bool
call_257 = func_256_call(var_258,var_259,)
output = call_257
func_260 = relay.Function([var_258,var_259,], output)
mutated_mod['func_260'] = func_260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_271 = relay.var("var_271", dtype = "float64", shape = (5, 6, 7))#candidate|271|(5, 6, 7)|var|float64
uop_272 = relay.tan(var_271.astype('float64')) # shape=(5, 6, 7)
func_256_call = mod.get_global_var('func_256')
func_260_call = mutated_mod.get_global_var('func_260')
var_284 = relay.var("var_284", dtype = "bool", shape = (728,))#candidate|284|(728,)|var|bool
call_283 = relay.TupleGetItem(func_256_call(relay.reshape(var_284.astype('bool'), [7, 8, 13]), relay.reshape(var_284.astype('bool'), [7, 8, 13]), ), 0)
call_285 = relay.TupleGetItem(func_260_call(relay.reshape(var_284.astype('bool'), [7, 8, 13]), relay.reshape(var_284.astype('bool'), [7, 8, 13]), ), 0)
func_256_call = mod.get_global_var('func_256')
func_260_call = mutated_mod.get_global_var('func_260')
call_288 = relay.TupleGetItem(func_256_call(relay.reshape(var_284.astype('bool'), [7, 8, 13]), relay.reshape(var_284.astype('bool'), [7, 8, 13]), ), 0)
call_289 = relay.TupleGetItem(func_260_call(relay.reshape(var_284.astype('bool'), [7, 8, 13]), relay.reshape(var_284.astype('bool'), [7, 8, 13]), ), 0)
output = relay.Tuple([uop_272,call_283,var_284,call_288,])
output2 = relay.Tuple([uop_272,call_285,var_284,call_289,])
func_290 = relay.Function([var_271,var_284,], output)
mod['func_290'] = func_290
mod = relay.transform.InferType()(mod)
mutated_mod['func_290'] = func_290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_290_call = mutated_mod.get_global_var('func_290')
var_292 = relay.var("var_292", dtype = "float64", shape = (5, 6, 7))#candidate|292|(5, 6, 7)|var|float64
var_293 = relay.var("var_293", dtype = "bool", shape = (728,))#candidate|293|(728,)|var|bool
call_291 = func_290_call(var_292,var_293,)
output = call_291
func_294 = relay.Function([var_292,var_293,], output)
mutated_mod['func_294'] = func_294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_314 = relay.var("var_314", dtype = "float64", shape = (1, 13, 7))#candidate|314|(1, 13, 7)|var|float64
uop_315 = relay.acos(var_314.astype('float64')) # shape=(1, 13, 7)
uop_319 = relay.sinh(uop_315.astype('float64')) # shape=(1, 13, 7)
output = uop_319
output2 = uop_319
func_321 = relay.Function([var_314,], output)
mod['func_321'] = func_321
mod = relay.transform.InferType()(mod)
mutated_mod['func_321'] = func_321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_322 = relay.var("var_322", dtype = "float64", shape = (1, 13, 7))#candidate|322|(1, 13, 7)|var|float64
func_321_call = mutated_mod.get_global_var('func_321')
call_323 = func_321_call(var_322)
output = call_323
func_324 = relay.Function([var_322], output)
mutated_mod['func_324'] = func_324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_486 = relay.var("var_486", dtype = "float64", shape = (11, 9, 14))#candidate|486|(11, 9, 14)|var|float64
const_487 = relay.const([[[0.934214,9.035285,7.926193,9.096385,4.113326,-7.759549,-2.603623,1.260085,6.507583,6.293948,2.414647,-2.684379,6.112177,-8.113938],[4.343716,-7.624003,-6.485087,-8.465356,6.038347,-1.909663,2.991570,2.328807,-4.806804,6.327844,3.197869,2.205026,1.657267,0.112933],[-7.549159,-6.369040,-3.094202,9.908197,-0.460505,-8.518156,7.665603,8.687309,-7.593153,0.507766,4.758143,-6.775228,9.413955,3.190793],[6.448092,1.704516,-6.720821,3.031031,-0.341270,0.710958,-6.338846,-2.667856,-9.260222,6.904378,-5.056517,-6.501519,1.987015,6.715684],[-8.289636,7.751185,6.335067,-8.891392,0.088062,-8.725664,-3.544678,-8.933160,-1.659248,-9.088144,-7.794009,8.152779,-8.944046,4.192736],[-3.090473,3.986264,8.687913,-7.653061,0.854487,1.726823,-5.682523,3.261031,4.293560,8.748310,-0.193105,3.523303,4.682015,-3.004920],[-1.757469,8.320397,-0.277090,4.548835,-8.968986,-8.057216,-3.642130,-3.607064,-1.638048,0.139097,1.207079,6.799538,7.564849,4.809102],[7.918242,-5.019520,9.570929,-4.945420,-8.833706,3.955146,2.782525,7.231924,1.073832,-0.041051,1.591354,-3.407173,-3.885830,-3.731074],[-3.627437,5.178063,3.129626,9.859875,4.465196,-9.035958,1.145513,-1.898032,-6.817960,4.678551,8.992479,1.573062,5.494411,-8.013208]],[[8.304600,5.060215,-1.231224,3.741681,2.424481,-4.571913,-3.583744,-7.342120,-4.163915,-0.664338,-1.822579,7.040746,5.295867,-6.906123],[-7.617467,-3.595846,-1.121022,9.391621,-6.021171,-9.646696,5.249867,1.062519,-8.776318,6.694133,-0.184335,0.803312,0.564150,7.658281],[5.402775,-8.150915,-1.388646,0.936938,-0.891264,9.991878,3.377297,-7.319663,-3.695381,-0.721468,-3.960239,8.116808,3.794078,5.788394],[4.838670,7.022551,4.084696,-6.938383,-0.118003,-1.157917,-7.520952,-5.925067,1.090007,-7.742288,-8.547578,-9.166089,6.610824,1.998936],[-2.522572,4.170973,2.901035,-0.468116,-2.951118,-4.766000,-4.414197,-3.998049,-9.614847,-0.576432,7.876266,8.305222,2.311108,-8.350041],[-6.751861,0.736804,8.248514,-3.932189,5.677395,8.440962,-3.186504,5.969035,-0.148832,2.983506,-6.587863,-6.371790,8.754987,0.249232],[-8.093399,9.971099,2.654747,5.506088,6.722153,-7.522654,5.948675,0.492757,3.325676,-6.847959,-2.185718,2.925588,-4.965768,-1.974672],[2.617585,-8.697006,-7.918145,-2.360090,1.054244,-9.297719,-1.986601,0.214880,-4.897498,6.883786,6.268138,1.122020,7.418300,-3.986048],[-0.532742,6.212556,-8.410056,4.093762,5.904737,3.598265,-7.665441,-2.584761,-6.876755,-8.795194,-2.582436,-3.041135,9.364228,7.559072]],[[-0.710583,-1.018041,-7.385008,6.816369,-3.908699,5.186674,-4.076780,-2.982512,-5.321226,6.609866,-3.281522,1.239862,0.420581,5.505725],[0.108917,-1.820217,-4.911317,7.361388,-7.426459,-9.582435,3.829633,4.458574,-2.775154,-8.891053,-8.098883,3.638114,7.737038,0.673654],[-5.866926,-9.802851,0.711923,-3.828767,7.856056,-8.481974,-5.348560,-2.042935,6.430306,6.384836,2.685598,-0.023508,-0.980718,2.975140],[1.620945,-0.634183,2.079366,7.912348,1.690430,-7.654117,5.549609,3.760155,8.930926,-9.806592,5.471652,-9.397910,7.927953,-2.716234],[-0.497379,-8.052328,-5.730210,-7.653331,1.643017,-0.176352,6.404045,3.522035,8.746841,-4.807930,8.762427,4.430135,-5.871028,7.833447],[2.341387,7.352491,1.882819,4.656052,8.727152,4.552311,2.128288,1.048581,4.750981,-5.133007,3.335798,4.348429,1.292140,6.285059],[5.586733,1.516373,-3.318699,-9.559204,-7.771010,1.802151,3.229304,-8.849474,-3.423347,5.540716,5.347757,3.811446,-7.387495,7.072883],[3.784779,-1.802313,8.923877,7.466996,-9.856360,-5.654889,6.381182,-6.612037,-8.064755,-3.836118,7.432607,-0.930061,2.773714,9.548614],[8.489014,4.649825,-2.921519,9.448611,9.840304,2.055877,-5.788623,5.417009,-1.618742,2.821903,-7.130906,4.786302,7.685921,-3.003061]],[[5.564909,1.143482,-5.139382,-5.385043,-5.160154,1.571054,-4.100143,1.592419,-0.190149,0.204597,6.994743,9.576475,-2.435008,9.088203],[9.857935,-6.689900,7.653207,4.070241,-1.475161,-0.413466,7.641738,-3.541998,1.250082,-6.388680,-0.956553,-0.289315,-2.459405,-9.326909],[-2.244239,7.177392,8.079927,7.909867,5.594859,1.295482,-8.127548,-4.369582,4.546035,1.726042,-4.320909,-2.534465,7.519993,-3.208336],[-4.492844,-0.160348,-8.124072,-8.240738,4.413658,2.841706,-2.812904,-9.018160,-4.129138,-2.258597,-3.690010,-9.345668,-0.651713,2.957431],[9.837549,2.684299,-4.637067,9.435147,7.658956,2.947899,9.337840,2.154628,3.972938,-5.730467,-6.950309,8.246249,-6.012762,-6.358145],[-3.746736,1.379962,4.053273,6.739048,-0.302675,3.603215,0.436749,4.534136,2.122773,-3.638924,-7.385588,-3.358965,-2.093738,1.659982],[-8.879283,1.560518,-7.873995,-6.362806,9.824192,4.529380,-0.909499,-1.760297,0.968910,-7.375202,-7.282430,4.546287,5.288468,-7.884469],[1.492356,6.234530,1.185186,-7.511277,0.072273,7.011894,5.252367,-6.350605,4.117992,8.310999,-1.940058,1.235583,-2.532911,-3.408368],[2.031458,2.750506,-5.845612,-0.068921,3.164606,7.552018,1.727192,-9.823518,-0.203775,1.776237,6.031651,-9.301443,-2.752770,-2.288866]],[[1.182852,6.045553,1.755247,3.395683,1.137033,4.763064,9.593901,9.534188,-3.281780,4.583588,-3.768173,-5.361551,3.121111,-6.245777],[6.836656,-6.365003,3.326810,8.807043,7.761697,-5.407757,-0.310149,5.901055,4.573288,-1.631897,-6.387263,-9.148715,-1.707527,-3.122467],[6.493082,-7.779522,-3.314474,7.893239,-0.046147,-3.043455,-3.586497,-1.581612,7.877557,-7.986790,-4.394020,-2.588507,-8.946536,7.652488],[4.201823,-6.824843,-6.565100,4.208801,5.957119,-5.966047,9.060806,1.024170,-9.846495,-3.774474,-7.512993,-2.706484,-9.012125,2.442006],[6.516959,8.697284,8.401718,4.816752,-0.154637,-0.127131,-0.765796,4.934296,6.061423,0.150581,-2.451489,9.779232,-4.930689,1.701224],[-5.607520,6.718523,-6.517671,3.311441,-0.940830,4.995551,8.059298,-0.602784,4.677859,-0.756689,6.784901,-8.269672,2.492207,-2.440925],[6.735936,-7.498100,-6.862076,9.702498,6.089431,-0.574422,1.443815,-3.015600,4.383982,-6.661854,9.560942,-9.419150,-2.353481,-1.773929],[-4.311287,1.463217,5.565776,-5.509290,7.464922,-8.968493,-9.994855,-9.076043,-0.222643,-5.617183,-3.339660,-5.107904,2.677573,-2.992750],[1.085163,-1.756413,8.239099,7.106862,8.066384,-0.664089,8.800744,4.907058,-4.641964,-4.209441,8.688945,-9.658623,3.252637,2.426054]],[[3.447435,6.385822,-8.671118,3.043872,0.497834,-8.138214,-7.075370,-4.584615,2.972787,7.366664,7.387483,3.649659,-3.414164,-4.376966],[-2.358184,3.325500,9.543032,6.372645,-8.796090,3.442410,3.693341,-2.014578,1.517629,-8.028217,3.657811,-1.408175,8.858479,8.115644],[0.814618,0.776627,6.354133,-1.287904,4.182361,-4.693632,-4.493711,-7.113821,-5.765596,7.372388,7.919321,-8.752859,6.259341,8.039643],[-9.641273,-0.161087,9.680221,-2.162991,-5.075828,0.054287,-4.322587,7.439794,-0.055987,-8.893929,0.892430,-0.094921,1.908139,6.674271],[8.316873,7.335668,5.554814,7.615444,-8.964224,4.593266,-8.933775,-7.150673,-6.675712,1.636707,8.503247,1.918568,6.244611,5.136817],[6.113498,1.239121,-7.143069,-1.978983,6.835554,-6.262506,0.009074,-4.675446,-9.778229,-5.122471,9.714729,7.005793,-4.544178,9.712545],[-6.536494,-3.045878,8.836808,-0.262484,4.343410,6.377015,7.346514,-1.441465,2.251538,-3.062072,8.420808,-3.753115,2.416323,-0.735583],[8.100795,0.066413,-9.876571,7.107131,-6.654075,3.076908,-9.330465,-8.011085,-9.299473,2.819874,9.000575,-4.982635,-9.075184,9.474768],[-1.174013,9.046088,1.342905,-1.735253,3.235558,8.196955,9.725410,5.438986,8.219765,6.003938,-5.662395,6.118363,7.397320,-5.576943]],[[4.953681,1.295127,0.952538,6.730122,1.329278,7.748246,5.694691,-4.933450,1.320759,-2.975002,2.068814,5.570142,-7.803710,-1.972026],[-7.616679,-2.532459,-4.125271,0.158343,-3.220495,6.763557,-3.913924,-3.508844,2.198276,5.166037,-9.521713,-3.682208,6.074702,0.678911],[-3.462103,8.088372,0.003793,-4.894758,0.059774,1.947072,-6.007348,-7.111623,0.302358,-6.204078,1.984603,-5.717561,-3.264893,-0.480306],[-4.854207,8.334312,5.972900,4.521531,-4.963046,-5.888684,3.588706,-5.734320,-0.158646,5.485605,6.473092,2.576838,0.333082,6.006450],[-9.746759,9.014664,1.768166,6.287977,-9.704750,1.189517,6.691111,-9.460813,-8.925446,-0.878964,1.752681,-2.995667,-0.329171,-5.664340],[0.262611,9.969426,7.898437,-0.562174,0.857804,8.659879,-6.761636,4.813566,-9.011665,2.332998,-0.500104,-8.755100,8.870475,-4.581938],[-4.240358,5.888942,-6.754028,0.532301,0.981902,0.174136,4.547838,-1.807113,7.159599,1.554805,-5.729469,-5.461821,3.430479,-6.722405],[-3.950728,-5.747083,1.988500,-1.656304,-7.526154,1.871778,-1.396317,-8.770759,4.641500,1.902445,-1.597867,6.252041,4.559895,9.849321],[-5.089662,6.555934,9.031225,6.038296,4.773626,-6.407184,2.589889,-4.858586,-6.616270,1.961687,3.593758,3.966563,-1.576363,-8.876838]],[[-8.264388,-5.092266,-8.113345,7.632518,2.785378,-8.833678,1.852020,-7.260303,0.058709,-4.585603,8.164257,3.499537,-7.029453,7.154322],[9.042047,6.226770,7.042025,-8.968779,3.934319,0.808424,-1.696333,-9.141037,7.956645,-4.167355,8.316269,-3.310957,1.688644,2.918844],[-3.977953,-1.013112,9.050877,-7.032930,9.920862,-1.015970,-5.567941,0.572069,4.109056,-5.570439,-7.305218,3.603724,5.818756,-1.294301],[-8.100603,8.150778,-0.126270,-2.461323,4.677530,5.356611,-5.145770,8.236643,5.195308,3.011119,-1.932980,0.160703,0.108103,-4.398299],[0.444268,3.205158,2.462019,-2.072483,-9.428848,2.194141,2.062729,-0.827476,-5.799784,5.030797,-4.294902,-0.796181,-9.695850,7.761092],[1.493852,0.834395,-1.953028,-3.583193,0.051935,-6.398958,9.976376,9.481411,-8.520518,-3.771501,0.652991,-9.581197,2.340986,4.537500],[8.098115,3.102581,-7.042180,8.374536,6.117160,-5.100594,-1.395408,-0.276993,-7.129616,9.940636,0.024705,5.491030,6.676314,-6.804666],[9.194157,-7.276396,-0.563505,8.533504,-1.488564,7.527536,-2.553803,-4.176574,-3.363210,-0.226181,-3.904435,3.698216,-6.786300,7.753173],[0.042495,-0.669887,7.642889,5.011190,-8.375683,-6.860543,4.970059,-9.996484,-9.039050,-3.064860,1.878905,3.766837,-9.360940,0.202199]],[[-5.787575,-1.297763,-0.264771,-2.744079,-4.605824,7.741010,-4.469732,1.027580,8.699743,4.002653,5.638371,3.459215,-9.846535,-2.582448],[9.564017,7.447426,-7.521847,8.982402,-9.738398,-2.269308,6.418705,1.891346,-4.448248,0.318775,-5.703864,5.990488,4.499081,-5.476326],[2.261002,-0.489751,-5.181674,-3.174396,-7.042050,3.912367,0.837657,5.243270,7.435509,-4.170933,6.397299,-3.842121,-1.401765,4.706534],[-0.026771,-6.941219,2.720419,-4.991726,-7.501579,-0.374619,3.524999,-0.494454,-1.121681,5.571579,-3.420252,1.796758,-3.730678,-5.337999],[2.503498,-0.566507,0.148884,6.523680,6.146063,5.763683,0.635356,-3.528228,2.900645,0.721996,-2.329429,-1.993452,9.946356,2.527100],[2.648661,-1.729914,4.853598,-3.163640,8.850474,3.069557,4.166910,3.278662,7.325895,6.975629,-6.689496,-3.918066,-9.808022,2.968703],[-0.453833,7.562362,-5.614350,-0.801477,-6.956353,3.978710,-8.890078,-6.805498,4.809644,-4.846312,-6.275519,7.882743,9.130752,2.471938],[-8.335115,7.262437,7.113168,-3.418843,-5.418166,-8.189809,7.239686,3.359540,-5.636279,-6.666242,3.232566,-1.010604,-1.279437,-6.631905],[1.326187,9.871032,-6.572975,-6.032497,8.490042,-0.166694,0.009473,-9.791925,-4.647232,5.066864,-6.352279,-9.431317,-4.552254,4.473099]],[[-2.226492,-4.033311,5.263119,-0.812689,-2.933382,-3.993849,7.121531,-7.028692,1.363488,-1.931906,-2.335830,-6.865984,6.549508,-7.990166],[-1.231892,-0.601799,0.320695,-5.549428,9.721673,-3.284015,-6.188771,6.363877,1.731459,-1.666959,5.173983,-0.768110,-1.512107,-4.615080],[6.827001,-5.466811,-7.990655,0.292190,4.915762,-0.226750,-7.098422,3.794159,8.260549,-5.257893,-4.668181,7.689331,9.976968,9.400111],[3.252737,3.734680,-8.913161,-2.659198,2.290430,-9.566683,3.920533,2.856049,0.954839,-6.174846,5.313303,-5.739529,-1.487702,5.294649],[8.895772,7.016423,-5.493064,-6.550615,-6.790467,2.195472,-0.650862,3.643707,3.693239,0.479043,6.157481,0.110323,-8.344124,-3.094566],[-8.914871,4.320493,-2.227841,-9.662121,4.832011,6.451290,0.288364,2.235459,-9.114865,8.977403,1.614823,-4.266954,3.409520,-7.332540],[8.766109,-1.134585,-2.109996,-3.099398,-8.963763,-1.394469,5.730060,-4.766282,-1.038328,-2.457593,-7.958502,-5.447854,-9.915741,-1.033071],[5.805348,6.622247,1.384618,-9.100355,2.317931,-9.291874,8.686510,-5.172466,-5.903038,6.230419,-1.976351,4.004619,5.024389,5.014864],[-1.730835,0.445476,-0.845004,6.779096,-2.243164,6.114967,-7.408065,-0.710122,-3.532534,-1.725962,3.390786,-9.199638,6.467669,-0.545097]],[[6.193117,-1.984788,6.072144,7.018269,-7.425548,6.298353,-0.791655,7.257412,-0.682976,-8.327341,-3.660883,7.362987,-1.369470,3.625949],[4.911830,0.577913,5.690309,-8.989251,7.784330,-5.691441,-2.978402,3.112339,1.338831,9.996408,-7.651508,-0.260064,-2.068501,-5.719791],[6.383477,-8.230466,2.640202,-5.255005,6.462172,0.246252,-7.565707,4.672132,6.169635,-6.284994,2.561921,-0.923518,9.525832,-0.042933],[-7.035218,8.952907,-1.407982,-0.182276,7.516462,8.478860,3.395559,4.309984,-7.160949,4.404701,2.490796,-6.357678,5.536296,-4.377749],[-1.797607,9.168857,4.169009,-9.389339,-0.599912,9.389971,6.090177,9.131196,1.730079,8.593357,1.020928,4.869277,-9.196118,3.764819],[-4.720988,-9.589444,-7.939925,3.117961,-8.303091,7.026380,-3.464096,-4.312052,3.564813,4.407854,3.819268,9.259711,0.228561,5.067214],[-1.390892,8.637241,4.363979,7.786626,2.054140,1.908696,0.149911,7.606769,-4.153238,1.055049,6.051991,-6.319309,8.528328,5.167877],[1.413756,-0.203731,8.889028,-6.363465,-4.786264,-7.130250,5.561863,3.921506,-6.351736,-6.474141,5.460988,9.067187,-6.053103,4.753554],[3.146821,-0.925848,0.365664,-4.401681,8.565375,2.153630,0.726476,9.489644,-1.368127,5.624659,3.903799,0.618044,3.241370,9.012894]]], dtype = "float64")#candidate|487|(11, 9, 14)|const|float64
bop_488 = relay.mod(var_486.astype('float64'), relay.reshape(const_487.astype('float64'), relay.shape_of(var_486))) # shape=(11, 9, 14)
output = bop_488
output2 = bop_488
func_502 = relay.Function([var_486,], output)
mod['func_502'] = func_502
mod = relay.transform.InferType()(mod)
var_503 = relay.var("var_503", dtype = "float64", shape = (11, 9, 14))#candidate|503|(11, 9, 14)|var|float64
output = func_502(var_503)
func_504 = relay.Function([var_503], output)
mutated_mod['func_504'] = func_504
mutated_mod = relay.transform.InferType()(mutated_mod)
const_635 = relay.const([[[-6.926520,-1.143788,3.421731,-0.702041,6.466354,-6.567898,-1.202617,4.854718],[0.048019,4.975189,9.349845,5.592092,-3.987324,-3.816648,-8.043530,7.664267],[-0.392503,1.926067,-5.716591,3.097852,3.866520,2.266880,2.788819,-4.333702],[8.565823,-3.177942,5.352513,9.273132,-3.435248,-1.712988,2.016671,2.024248],[-7.265417,6.657377,-3.063957,-7.827600,-2.988085,-2.489830,9.577899,6.207867],[-1.631598,2.450073,0.368840,1.667574,-8.253615,-6.107177,-6.338863,-7.926122],[-5.069749,3.583818,-5.919264,8.522894,5.289369,-4.421318,-6.693422,-6.852446],[-1.056236,-2.590803,-2.390957,6.092544,0.043747,-3.532680,9.923519,-3.989231]],[[-5.906328,9.832070,-0.818173,-7.241383,-5.358893,-0.587485,-0.507627,4.609986],[-7.959477,-8.612207,6.513000,-5.880813,-7.734849,-0.216085,6.007586,4.753234],[-2.177190,-6.246469,0.346861,7.954639,6.692482,-4.989017,-4.521213,-8.278613],[9.186392,8.518854,-7.542685,-7.102329,-2.885453,6.018360,4.358994,2.785395],[1.147362,-3.603767,-7.864516,-0.711248,1.543111,2.580085,-0.860853,3.691793],[0.788602,-9.687935,-3.645560,-9.321913,-2.282906,-5.043688,-8.543602,1.428264],[0.491320,2.573013,4.994723,3.752007,-2.389845,-5.594052,2.513288,4.618641],[-3.738955,-1.120476,-8.529491,7.873197,-9.584875,-2.593265,-4.160181,-5.368048]],[[-0.934026,7.882051,3.036832,-0.349686,-2.174721,-8.633673,-4.294437,-6.733976],[-8.301529,3.720049,4.434287,5.976422,-0.452293,-2.759598,5.832241,-4.037715],[-7.130655,-6.613698,8.248445,-5.177203,2.520323,1.513348,-2.667730,2.743909],[-2.166197,8.619873,3.262549,-3.107516,-8.336183,-7.983144,3.544854,3.271153],[2.113870,-8.259498,2.682593,-2.476225,0.188110,-0.648624,4.412240,-8.181705],[7.748678,5.667719,-7.864441,-8.728798,-6.307362,8.690078,-5.129423,-3.970290],[-1.612058,-5.389888,6.158812,-7.438334,-8.177619,-4.930000,-3.916353,9.728656],[-9.550007,7.397184,-8.067609,5.768182,-9.152916,9.872442,-4.041560,-4.058423]],[[-9.368038,-5.280892,6.912578,-2.248434,8.223103,2.466682,-1.140942,2.722564],[3.829274,8.501753,8.278651,0.061316,8.696270,-9.718309,-7.413230,-6.130857],[0.905248,-4.734089,-7.188145,-6.733273,5.681385,9.525439,-6.439496,-0.935558],[6.065099,-1.171599,-0.656335,0.967596,-5.001593,8.078435,-3.558540,1.987518],[-4.659439,6.417997,-1.883627,7.717086,9.794131,8.929310,9.917034,-5.667167],[-1.248264,5.413811,-9.293837,-7.181869,-0.075514,4.383529,-8.374476,-7.245426],[-3.723626,5.561254,0.254502,-0.916552,8.598547,9.403786,0.397165,-5.606288],[-1.384060,-4.291522,-8.954685,2.890322,7.321207,2.144899,3.185440,-2.344072]],[[8.972800,-7.567727,-5.441698,-7.229142,4.915056,9.355598,5.200172,-4.307143],[5.485776,-7.592373,3.970946,9.362962,-4.797984,-6.830086,-4.313784,7.206810],[-3.182534,8.194380,-5.518733,6.523895,4.538273,-4.108182,-3.618524,-3.944224],[1.528186,5.177691,-7.048877,1.458423,3.996775,-5.552201,0.001143,-2.457746],[2.756484,-3.482682,7.848069,0.972497,-9.465838,0.937400,-2.065695,7.740050],[-5.637279,0.317919,7.510177,6.659179,-4.261412,-2.404949,2.530334,-3.145882],[-0.852480,-5.505453,-4.290600,-6.464949,1.991157,3.937912,5.800015,9.469677],[5.716628,-5.289666,-4.995883,6.365492,7.934575,-3.542319,-3.851285,-4.110710]],[[7.066705,-4.399324,-4.461540,2.202921,-2.818067,-4.570832,3.441611,2.990451],[-7.140644,8.791783,9.999867,6.469085,-9.403923,7.345443,-1.378124,-2.113190],[-8.220141,7.165632,1.237662,-6.959619,2.132853,-9.171092,0.838066,8.612203],[8.653410,-1.431618,-4.208906,-6.823557,8.341070,3.901039,1.654785,7.909444],[8.000904,-9.548362,4.455574,-3.112300,7.434322,3.221057,7.225693,-0.627155],[8.936286,1.875387,8.975494,5.277661,-5.773016,-6.151108,-1.440209,6.651778],[8.533175,-2.806014,9.660457,0.698999,4.407736,7.325749,-9.326732,-0.091826],[-8.601211,0.858878,2.373752,-4.573567,1.363264,1.984306,-4.183905,4.099855]],[[-4.769611,0.824340,8.121813,2.384076,2.542643,9.425851,-5.555256,-8.132426],[2.246337,-5.340977,-5.124287,-8.155158,-0.099051,1.459321,6.077909,-8.939670],[-5.249562,5.668950,-3.097099,2.892439,1.453946,9.741723,-2.483169,-5.862949],[9.025137,-7.535346,9.968908,-6.486910,-2.352998,-5.271429,-1.998171,8.695822],[-4.385913,-2.221770,1.292884,8.113690,-5.528163,4.371731,-8.344899,3.368506],[-7.857388,0.668254,-0.540095,7.568286,1.643261,-7.859762,-7.802492,-9.548971],[-7.542121,-6.294284,-8.382980,-2.996654,-2.541709,6.280896,0.035885,3.302277],[-7.500038,2.166688,-5.230640,7.176738,7.910274,5.771629,-3.282298,-8.038627]],[[8.608437,-3.115764,-5.796530,-2.009135,-0.881945,3.618300,-7.998780,-8.400322],[4.170304,-7.519346,-4.372663,5.829457,1.215169,-4.910296,8.614731,5.197385],[1.587372,-8.309675,-9.526163,-2.657179,7.188333,5.722556,-2.701691,-0.079757],[0.792501,2.267204,1.123205,3.883163,-2.327765,-3.244851,1.509671,-2.128307],[1.074249,-5.716825,0.287296,9.187547,4.833186,0.746063,-4.154617,2.455476],[-4.974107,8.959582,-6.014902,-5.061392,-9.561511,-9.355518,-0.492443,-8.024280],[0.993661,-8.473874,-0.228909,5.353407,-4.895022,6.325977,7.362130,-2.087445],[-0.036137,8.100467,6.819118,3.640082,-9.363076,8.174443,-9.892868,-6.079944]],[[-0.679788,-4.985043,-3.497865,-9.594482,-8.372216,2.045691,4.865543,6.468960],[-5.566578,-1.191937,4.221581,6.378376,4.862590,-1.256895,7.989746,1.489558],[1.858784,-2.175754,-3.610306,-7.098739,-7.449220,-7.838421,-0.344820,7.859334],[-6.067771,-5.075941,1.044574,2.597927,-0.226909,-8.515240,-3.396816,7.561216],[-0.989357,-6.796427,2.440161,1.442747,-3.755151,8.797938,-5.997951,4.139477],[-7.165338,-7.936178,-3.634314,-0.025638,5.409777,-1.287381,-4.127463,-2.598778],[3.784817,5.494113,0.757083,-3.539847,-3.577166,-1.418908,0.663984,0.296404],[8.019877,4.851598,7.089278,-1.085637,4.111054,7.622416,3.777953,-5.839078]],[[-6.948597,9.778519,-6.635281,1.363245,0.684203,3.945663,-4.483470,-8.895562],[-4.849889,9.540569,0.736034,0.511321,-2.313817,-2.854759,-6.528933,-2.471958],[4.338773,-6.986193,1.601415,-1.021257,-2.783105,6.188179,1.867606,-4.063451],[-5.285730,7.604296,-9.815637,-8.705048,3.875001,-9.128274,4.601261,-2.932092],[-3.281963,-1.860943,4.025937,-2.199996,0.275387,-2.738578,7.781628,-2.436338],[-3.315052,3.080088,-0.316385,8.124682,-1.077476,0.024443,-4.156763,-2.926206],[3.079393,-7.120038,-2.469274,-3.862689,4.148968,-6.595971,8.304108,-4.171813],[-8.598903,-9.600996,2.195072,9.080722,8.198201,6.845590,-5.139079,-5.269853]],[[-5.237382,-9.654233,7.548366,-8.734708,0.564678,5.073718,-6.309160,-0.581383],[6.939439,8.542994,-5.569178,6.259285,-0.825639,8.970634,-1.480983,-9.609501],[5.216005,9.285919,0.763679,5.922525,-3.015801,6.874995,-1.282727,-5.536423],[5.357972,-9.102379,-8.901333,9.673710,-3.778793,6.795424,7.102906,6.146974],[4.921139,6.651712,7.261677,6.675767,-5.044266,-8.187403,6.949878,-0.021837],[-2.141638,-5.353260,-9.141386,7.992563,7.487432,-7.781845,-3.717260,6.213363],[-7.450314,-0.678369,0.951456,-3.862854,2.835280,-5.924935,0.446611,9.938627],[9.515898,-8.559199,0.650846,-1.202329,-6.087870,8.399048,-2.719634,-1.529190]],[[-4.141292,-4.724487,3.644535,9.793871,1.644866,8.509129,-6.661081,5.262300],[-2.693364,-3.281102,6.565201,-2.283690,8.404774,1.883237,-8.898073,-0.051894],[-3.618435,-2.569352,2.786688,-9.219109,3.427490,0.821298,-2.349114,6.627980],[-8.174641,6.097596,-3.633535,-8.179734,3.297424,-9.460314,4.793988,-4.985612],[0.101605,5.227341,-9.639845,-8.410069,5.277477,-9.510778,-9.638491,3.574810],[8.128885,-8.773581,-2.178217,8.520348,-2.100063,-3.666484,-1.310112,-6.525434],[6.246435,1.716950,6.397968,-0.990443,3.681121,1.980526,-0.716781,2.697256],[8.684217,-8.913116,-8.112644,5.558918,1.167153,-1.478120,5.230014,1.856381]],[[9.495059,-2.509960,-2.539717,5.694867,8.400241,3.584633,9.157910,4.693119],[8.506319,1.907335,8.976203,-5.932891,-7.855373,4.393212,1.361103,-5.859941],[9.373771,-1.786547,5.163612,6.589684,-0.011029,7.089441,8.773884,-0.060675],[-4.047985,-8.929616,-9.506656,-6.557549,-5.845419,-3.699816,-3.563719,-0.055476],[-3.427592,-7.310118,-0.840064,-2.536610,-2.756086,6.900511,4.509243,-9.761435],[2.876175,6.813178,-9.970035,-4.380521,5.712971,-8.894820,5.047138,5.945910],[1.052171,-9.757616,-4.765828,-3.327176,-9.112723,-2.256005,5.803381,5.337082],[-4.533476,4.320290,-1.839896,8.345079,-9.455072,4.138620,-3.746100,9.382259]],[[-7.651871,9.906144,4.071919,-8.271638,3.481208,1.818514,2.633359,2.042212],[3.204813,-4.836862,-2.994384,-3.991775,-1.914104,0.605495,-1.254531,-7.695390],[-9.503904,3.490169,-8.049649,7.274107,6.456693,-4.096146,0.279838,-8.036484],[-1.241857,-1.518489,-2.080069,-9.401658,-4.438628,7.268209,-4.369490,-4.756701],[1.832823,-7.786480,6.256059,-3.076426,-1.473230,2.578820,-3.541915,0.075385],[2.488660,-5.104525,-9.029179,-8.525885,-4.046914,2.675165,8.515342,9.896752],[-1.212392,-8.200485,9.542780,-1.530850,-2.767019,6.733444,1.740511,8.388190],[-3.861095,-7.998593,-1.474074,2.598974,-7.531525,-5.056578,-1.182479,-4.970123]],[[0.502021,-7.098067,1.863718,2.232622,7.154675,6.104933,5.177512,7.864711],[-2.775397,-1.264093,-4.402638,4.636811,-5.245221,-7.004766,0.524868,5.871629],[-2.129780,9.025304,-2.000438,6.847089,0.407545,-1.438573,7.067977,-8.111821],[2.316113,1.369285,-7.995659,-9.738378,-0.819710,-2.606091,-3.015414,-1.173255],[0.806960,-5.047759,-1.494119,0.243343,-5.900063,-6.778872,0.848146,3.890260],[3.514234,-9.430210,2.446200,2.256934,-8.772430,7.565236,9.372971,8.991108],[5.616907,1.428802,4.287100,2.837746,-0.896027,4.890623,-1.463589,2.959255],[5.294583,-2.483982,-5.385402,-2.189104,7.604676,9.432908,-9.533968,1.777569]],[[5.448603,2.000179,-1.144449,-8.146058,0.372750,-5.882294,3.905056,9.467975],[-4.288630,1.200637,4.409294,7.522934,-0.274691,-4.013444,4.659873,-3.206785],[-6.914159,2.407051,0.296075,2.214021,3.155153,-3.349747,4.181334,-1.686799],[7.293624,2.487344,6.623042,6.728042,9.766356,-8.840585,-1.466454,4.712075],[8.495213,8.509083,6.704424,1.860189,-0.225724,1.224539,9.045463,2.880383],[1.746151,-2.192534,6.470160,-8.425297,2.914518,8.040041,-6.990064,-2.857581],[1.091564,-0.964022,-3.820297,-7.340561,9.411130,6.215676,6.796342,-2.691475],[0.773718,3.997648,-4.132154,2.252461,0.783438,3.296756,-7.327746,1.891902]]], dtype = "float32")#candidate|635|(16, 8, 8)|const|float32
uop_636 = relay.sinh(const_635.astype('float32')) # shape=(16, 8, 8)
bop_651 = relay.greater_equal(uop_636.astype('bool'), relay.reshape(const_635.astype('bool'), relay.shape_of(uop_636))) # shape=(16, 8, 8)
bop_657 = relay.add(const_635.astype('uint8'), relay.reshape(bop_651.astype('uint8'), relay.shape_of(const_635))) # shape=(16, 8, 8)
uop_661 = relay.log10(bop_657.astype('float64')) # shape=(16, 8, 8)
const_665 = relay.const([[[False,True,False,True,True,False,False,True],[True,False,False,False,False,True,True,True],[False,False,True,True,False,False,False,True],[True,False,False,False,True,True,True,True],[False,True,True,False,True,True,True,False],[False,False,False,False,True,True,True,True],[False,False,False,False,False,True,True,False],[True,False,False,False,True,True,True,True]],[[True,False,True,False,False,True,True,False],[True,True,False,False,True,True,False,True],[True,False,True,True,True,False,True,False],[False,False,False,True,True,False,True,False],[False,False,True,False,True,False,False,False],[True,False,True,False,True,True,True,False],[True,False,False,True,True,True,True,True],[True,False,True,True,False,False,True,False]],[[False,False,True,False,False,True,False,False],[False,True,False,True,False,False,False,False],[False,False,True,True,True,False,True,True],[False,False,False,False,False,True,True,False],[False,False,False,False,True,True,False,True],[False,True,True,True,True,True,True,True],[True,False,True,False,False,False,True,True],[False,True,True,False,True,False,False,True]],[[False,True,True,False,False,False,True,False],[True,False,True,False,True,False,True,False],[False,False,True,True,False,False,False,False],[False,True,False,True,False,True,False,False],[False,True,False,False,True,False,False,False],[False,False,False,False,False,False,False,True],[False,True,False,True,False,False,True,False],[True,False,True,True,True,True,False,True]],[[False,False,True,False,False,True,False,True],[True,True,True,False,True,True,True,True],[True,True,False,True,True,False,True,False],[False,False,False,True,True,False,False,True],[False,True,True,True,False,False,False,False],[True,True,False,False,False,True,True,True],[False,False,False,True,False,True,True,False],[True,True,True,False,True,True,False,False]],[[False,True,True,False,True,True,False,False],[False,False,False,False,True,False,False,True],[False,False,False,False,False,False,False,True],[True,True,False,True,False,False,True,False],[True,False,False,True,True,True,True,True],[True,False,True,True,False,True,False,False],[False,True,False,False,True,False,True,False],[True,True,True,True,True,False,True,True]],[[False,True,False,True,False,True,False,False],[True,False,True,True,True,True,True,True],[False,True,True,True,True,True,False,False],[False,True,True,False,False,False,True,False],[False,True,False,False,False,False,False,False],[False,True,True,False,True,True,True,True],[False,True,True,False,False,True,False,False],[False,False,False,False,False,True,True,False]],[[False,True,True,True,True,True,True,False],[True,False,False,False,True,True,True,False],[False,False,False,False,True,False,True,False],[False,True,False,True,True,True,True,True],[False,False,False,False,False,True,False,True],[False,False,True,True,True,False,True,False],[True,True,False,False,False,True,False,False],[True,True,True,False,False,True,True,True]],[[True,False,True,True,True,True,False,True],[True,True,True,False,False,False,False,True],[False,True,True,False,False,False,False,True],[True,False,True,True,True,True,False,False],[True,True,False,False,False,False,False,True],[False,True,False,False,True,False,True,True],[True,False,True,False,False,False,True,True],[False,True,True,True,False,True,True,True]],[[True,True,True,True,False,True,True,False],[False,True,False,False,True,True,True,True],[True,True,True,False,True,False,True,True],[True,False,False,True,False,True,False,True],[True,False,False,True,True,True,True,False],[False,True,False,False,False,True,True,True],[False,False,True,True,False,True,False,False],[True,False,True,True,False,False,False,True]],[[False,True,False,True,False,True,True,True],[False,True,True,False,True,False,True,True],[False,True,True,False,False,True,False,True],[False,False,True,False,False,True,True,False],[False,True,True,True,False,True,False,False],[False,True,False,True,True,True,True,True],[False,False,True,False,True,False,False,True],[False,True,True,False,False,False,False,True]],[[True,True,False,True,False,False,True,True],[True,True,False,False,True,True,True,True],[True,False,False,True,False,False,False,False],[True,False,False,True,False,False,False,False],[False,False,True,False,False,True,True,True],[False,False,True,True,True,False,True,True],[True,True,False,True,True,False,False,False],[False,False,True,True,True,False,True,True]],[[False,False,True,True,True,True,False,False],[True,False,True,False,False,False,True,True],[True,True,True,False,False,True,False,False],[True,False,True,False,False,False,True,False],[True,True,True,False,False,False,False,True],[False,False,True,False,False,True,False,False],[False,True,False,False,False,True,True,True],[True,False,False,True,True,True,True,False]],[[False,True,False,False,True,True,True,True],[True,True,True,True,False,True,True,False],[False,False,True,False,True,False,False,False],[False,False,True,True,True,False,True,False],[True,False,False,False,True,False,True,False],[True,True,True,True,False,True,True,True],[True,False,True,False,False,True,False,True],[True,True,False,True,True,False,True,True]],[[False,True,True,True,True,True,True,False],[False,False,True,False,True,True,True,False],[True,True,False,False,False,False,True,False],[True,True,True,True,True,False,False,True],[True,True,False,True,False,True,True,False],[False,True,True,True,False,False,False,True],[True,False,True,False,True,False,False,False],[False,True,True,True,True,True,True,False]],[[True,True,True,True,True,True,False,True],[False,True,False,False,True,False,True,True],[True,True,True,False,True,True,False,True],[False,False,True,True,True,False,True,False],[True,True,False,False,False,False,True,False],[True,False,False,False,False,True,True,True],[False,False,True,False,True,False,True,True],[False,False,False,True,False,False,False,False]]], dtype = "bool")#candidate|665|(16, 8, 8)|const|bool
bop_666 = relay.bitwise_and(bop_651.astype('uint16'), relay.reshape(const_665.astype('uint16'), relay.shape_of(bop_651))) # shape=(16, 8, 8)
output = relay.Tuple([uop_661,bop_666,])
output2 = relay.Tuple([uop_661,bop_666,])
func_685 = relay.Function([], output)
mod['func_685'] = func_685
mod = relay.transform.InferType()(mod)
mutated_mod['func_685'] = func_685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mutated_mod.get_global_var('func_685')
call_686 = func_685_call()
output = call_686
func_687 = relay.Function([], output)
mutated_mod['func_687'] = func_687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_697 = relay.TupleGetItem(func_685_call(), 0)
call_698 = relay.TupleGetItem(func_687_call(), 0)
output = relay.Tuple([call_697,])
output2 = relay.Tuple([call_698,])
func_699 = relay.Function([], output)
mod['func_699'] = func_699
mod = relay.transform.InferType()(mod)
mutated_mod['func_699'] = func_699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_699_call = mutated_mod.get_global_var('func_699')
call_700 = func_699_call()
output = call_700
func_701 = relay.Function([], output)
mutated_mod['func_701'] = func_701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_741 = relay.TupleGetItem(func_685_call(), 0)
call_742 = relay.TupleGetItem(func_687_call(), 0)
var_743 = relay.var("var_743", dtype = "float64", shape = (16, 8, 8))#candidate|743|(16, 8, 8)|var|float64
bop_744 = relay.not_equal(call_741.astype('bool'), relay.reshape(var_743.astype('bool'), relay.shape_of(call_741))) # shape=(16, 8, 8)
bop_747 = relay.not_equal(call_742.astype('bool'), relay.reshape(var_743.astype('bool'), relay.shape_of(call_742))) # shape=(16, 8, 8)
output = bop_744
output2 = bop_747
func_748 = relay.Function([var_743,], output)
mod['func_748'] = func_748
mod = relay.transform.InferType()(mod)
mutated_mod['func_748'] = func_748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_749 = relay.var("var_749", dtype = "float64", shape = (16, 8, 8))#candidate|749|(16, 8, 8)|var|float64
func_748_call = mutated_mod.get_global_var('func_748')
call_750 = func_748_call(var_749)
output = call_750
func_751 = relay.Function([var_749], output)
mutated_mod['func_751'] = func_751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_699_call = mod.get_global_var('func_699')
func_701_call = mutated_mod.get_global_var('func_701')
call_904 = relay.TupleGetItem(func_699_call(), 0)
call_905 = relay.TupleGetItem(func_701_call(), 0)
output = call_904
output2 = call_905
func_921 = relay.Function([], output)
mod['func_921'] = func_921
mod = relay.transform.InferType()(mod)
mutated_mod['func_921'] = func_921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mutated_mod.get_global_var('func_921')
call_922 = func_921_call()
output = call_922
func_923 = relay.Function([], output)
mutated_mod['func_923'] = func_923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_999 = relay.TupleGetItem(func_685_call(), 0)
call_1000 = relay.TupleGetItem(func_687_call(), 0)
output = call_999
output2 = call_1000
func_1003 = relay.Function([], output)
mod['func_1003'] = func_1003
mod = relay.transform.InferType()(mod)
output = func_1003()
func_1004 = relay.Function([], output)
mutated_mod['func_1004'] = func_1004
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1005 = relay.var("var_1005", dtype = "float64", shape = (8, 7, 12))#candidate|1005|(8, 7, 12)|var|float64
var_1006 = relay.var("var_1006", dtype = "float64", shape = (8, 7, 12))#candidate|1006|(8, 7, 12)|var|float64
bop_1007 = relay.floor_divide(var_1005.astype('float64'), relay.reshape(var_1006.astype('float64'), relay.shape_of(var_1005))) # shape=(8, 7, 12)
output = relay.Tuple([bop_1007,])
output2 = relay.Tuple([bop_1007,])
func_1011 = relay.Function([var_1005,var_1006,], output)
mod['func_1011'] = func_1011
mod = relay.transform.InferType()(mod)
var_1012 = relay.var("var_1012", dtype = "float64", shape = (8, 7, 12))#candidate|1012|(8, 7, 12)|var|float64
var_1013 = relay.var("var_1013", dtype = "float64", shape = (8, 7, 12))#candidate|1013|(8, 7, 12)|var|float64
output = func_1011(var_1012,var_1013,)
func_1014 = relay.Function([var_1012,var_1013,], output)
mutated_mod['func_1014'] = func_1014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_1043 = relay.TupleGetItem(func_685_call(), 1)
call_1044 = relay.TupleGetItem(func_687_call(), 1)
output = relay.Tuple([call_1043,])
output2 = relay.Tuple([call_1044,])
func_1068 = relay.Function([], output)
mod['func_1068'] = func_1068
mod = relay.transform.InferType()(mod)
output = func_1068()
func_1069 = relay.Function([], output)
mutated_mod['func_1069'] = func_1069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1068_call = mod.get_global_var('func_1068')
func_1069_call = mutated_mod.get_global_var('func_1069')
call_1107 = relay.TupleGetItem(func_1068_call(), 0)
call_1108 = relay.TupleGetItem(func_1069_call(), 0)
var_1115 = relay.var("var_1115", dtype = "uint16", shape = (16, 8, 8))#candidate|1115|(16, 8, 8)|var|uint16
bop_1116 = relay.left_shift(call_1107.astype('int16'), relay.reshape(var_1115.astype('int16'), relay.shape_of(call_1107))) # shape=(16, 8, 8)
bop_1119 = relay.left_shift(call_1108.astype('int16'), relay.reshape(var_1115.astype('int16'), relay.shape_of(call_1108))) # shape=(16, 8, 8)
output = bop_1116
output2 = bop_1119
func_1161 = relay.Function([var_1115,], output)
mod['func_1161'] = func_1161
mod = relay.transform.InferType()(mod)
mutated_mod['func_1161'] = func_1161
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1162 = relay.var("var_1162", dtype = "uint16", shape = (16, 8, 8))#candidate|1162|(16, 8, 8)|var|uint16
func_1161_call = mutated_mod.get_global_var('func_1161')
call_1163 = func_1161_call(var_1162)
output = call_1163
func_1164 = relay.Function([var_1162], output)
mutated_mod['func_1164'] = func_1164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1068_call = mod.get_global_var('func_1068')
func_1069_call = mutated_mod.get_global_var('func_1069')
call_1174 = relay.TupleGetItem(func_1068_call(), 0)
call_1175 = relay.TupleGetItem(func_1069_call(), 0)
var_1185 = relay.var("var_1185", dtype = "uint16", shape = (16, 8, 8))#candidate|1185|(16, 8, 8)|var|uint16
bop_1186 = relay.minimum(call_1174.astype('int8'), relay.reshape(var_1185.astype('int8'), relay.shape_of(call_1174))) # shape=(16, 8, 8)
bop_1189 = relay.minimum(call_1175.astype('int8'), relay.reshape(var_1185.astype('int8'), relay.shape_of(call_1175))) # shape=(16, 8, 8)
func_699_call = mod.get_global_var('func_699')
func_701_call = mutated_mod.get_global_var('func_701')
call_1191 = relay.TupleGetItem(func_699_call(), 0)
call_1192 = relay.TupleGetItem(func_701_call(), 0)
output = relay.Tuple([bop_1186,call_1191,])
output2 = relay.Tuple([bop_1189,call_1192,])
func_1230 = relay.Function([var_1185,], output)
mod['func_1230'] = func_1230
mod = relay.transform.InferType()(mod)
mutated_mod['func_1230'] = func_1230
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1231 = relay.var("var_1231", dtype = "uint16", shape = (16, 8, 8))#candidate|1231|(16, 8, 8)|var|uint16
func_1230_call = mutated_mod.get_global_var('func_1230')
call_1232 = func_1230_call(var_1231)
output = call_1232
func_1233 = relay.Function([var_1231], output)
mutated_mod['func_1233'] = func_1233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_699_call = mod.get_global_var('func_699')
func_701_call = mutated_mod.get_global_var('func_701')
call_1242 = relay.TupleGetItem(func_699_call(), 0)
call_1243 = relay.TupleGetItem(func_701_call(), 0)
output = relay.Tuple([call_1242,])
output2 = relay.Tuple([call_1243,])
func_1245 = relay.Function([], output)
mod['func_1245'] = func_1245
mod = relay.transform.InferType()(mod)
output = func_1245()
func_1246 = relay.Function([], output)
mutated_mod['func_1246'] = func_1246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_1254 = relay.TupleGetItem(func_685_call(), 1)
call_1255 = relay.TupleGetItem(func_687_call(), 1)
output = call_1254
output2 = call_1255
func_1256 = relay.Function([], output)
mod['func_1256'] = func_1256
mod = relay.transform.InferType()(mod)
mutated_mod['func_1256'] = func_1256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1256_call = mutated_mod.get_global_var('func_1256')
call_1257 = func_1256_call()
output = call_1257
func_1258 = relay.Function([], output)
mutated_mod['func_1258'] = func_1258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1284 = relay.var("var_1284", dtype = "int32", shape = (3, 1, 1))#candidate|1284|(3, 1, 1)|var|int32
const_1285 = relay.const([[[6,-5,3,-4,-3,3,-9,-7,6,-10,-10,9,10,9],[9,-9,-5,9,-10,-1,4,-2,-9,-8,10,1,-6,-5],[-2,-8,8,-6,-2,3,10,3,-9,6,6,4,9,8],[-8,4,5,-9,-9,-6,-9,-3,6,-2,-10,3,-2,6],[2,9,-4,10,-6,4,3,6,-10,3,-4,-1,5,4],[2,-1,1,6,2,9,-4,-5,3,-3,2,-1,2,3]],[[-7,-5,7,3,5,-5,5,8,5,6,-7,-4,-4,-7],[6,-6,-7,2,-6,-1,-6,9,-10,-1,-10,-6,-6,8],[-5,8,5,8,4,7,7,-2,-4,-4,-8,1,2,5],[-8,-9,7,8,-1,3,6,-5,8,6,8,8,5,-4],[-9,-4,-3,3,10,2,-8,7,5,-7,-1,6,-4,-5],[-8,-5,-1,5,4,6,1,-7,4,-3,8,-3,4,8]],[[8,7,6,4,-3,-3,-8,2,6,-8,-7,-1,-2,4],[6,6,-7,1,-6,-1,3,-7,3,-2,-3,9,-3,5],[-7,-3,-10,8,-5,1,3,2,7,8,-3,9,1,5],[10,-9,-8,-9,-5,-8,-5,2,4,-3,7,9,4,-5],[-7,6,2,-4,10,-1,-10,5,-9,-3,-3,3,10,10],[-1,-6,7,8,1,-2,-3,8,-3,9,10,-6,-8,10]]], dtype = "int32")#candidate|1285|(3, 6, 14)|const|int32
bop_1286 = relay.greater(var_1284.astype('bool'), const_1285.astype('bool')) # shape=(3, 6, 14)
var_1289 = relay.var("var_1289", dtype = "int32", shape = (3, 6, 14))#candidate|1289|(3, 6, 14)|var|int32
bop_1290 = relay.minimum(const_1285.astype('int64'), relay.reshape(var_1289.astype('int64'), relay.shape_of(const_1285))) # shape=(3, 6, 14)
output = relay.Tuple([bop_1286,bop_1290,])
output2 = relay.Tuple([bop_1286,bop_1290,])
func_1308 = relay.Function([var_1284,var_1289,], output)
mod['func_1308'] = func_1308
mod = relay.transform.InferType()(mod)
mutated_mod['func_1308'] = func_1308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1308_call = mutated_mod.get_global_var('func_1308')
var_1310 = relay.var("var_1310", dtype = "int32", shape = (3, 1, 1))#candidate|1310|(3, 1, 1)|var|int32
var_1311 = relay.var("var_1311", dtype = "int32", shape = (3, 6, 14))#candidate|1311|(3, 6, 14)|var|int32
call_1309 = func_1308_call(var_1310,var_1311,)
output = call_1309
func_1312 = relay.Function([var_1310,var_1311,], output)
mutated_mod['func_1312'] = func_1312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1256_call = mod.get_global_var('func_1256')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_1371 = func_1256_call()
call_1372 = func_1256_call()
var_1380 = relay.var("var_1380", dtype = "uint16", shape = (16, 8, 8))#candidate|1380|(16, 8, 8)|var|uint16
bop_1381 = relay.logical_and(call_1371.astype('bool'), relay.reshape(var_1380.astype('bool'), relay.shape_of(call_1371))) # shape=(16, 8, 8)
bop_1384 = relay.logical_and(call_1372.astype('bool'), relay.reshape(var_1380.astype('bool'), relay.shape_of(call_1372))) # shape=(16, 8, 8)
output = bop_1381
output2 = bop_1384
func_1386 = relay.Function([var_1380,], output)
mod['func_1386'] = func_1386
mod = relay.transform.InferType()(mod)
var_1387 = relay.var("var_1387", dtype = "uint16", shape = (16, 8, 8))#candidate|1387|(16, 8, 8)|var|uint16
output = func_1386(var_1387)
func_1388 = relay.Function([var_1387], output)
mutated_mod['func_1388'] = func_1388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_1400 = func_921_call()
call_1401 = func_921_call()
uop_1418 = relay.cosh(call_1400.astype('float64')) # shape=(16, 8, 8)
uop_1420 = relay.cosh(call_1401.astype('float64')) # shape=(16, 8, 8)
bop_1421 = relay.subtract(uop_1418.astype('int16'), relay.reshape(call_1400.astype('int16'), relay.shape_of(uop_1418))) # shape=(16, 8, 8)
bop_1424 = relay.subtract(uop_1420.astype('int16'), relay.reshape(call_1401.astype('int16'), relay.shape_of(uop_1420))) # shape=(16, 8, 8)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_1425 = relay.TupleGetItem(func_685_call(), 0)
call_1426 = relay.TupleGetItem(func_687_call(), 0)
func_1256_call = mod.get_global_var('func_1256')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_1430 = func_1256_call()
call_1431 = func_1256_call()
output = relay.Tuple([bop_1421,call_1425,call_1430,])
output2 = relay.Tuple([bop_1424,call_1426,call_1431,])
func_1432 = relay.Function([], output)
mod['func_1432'] = func_1432
mod = relay.transform.InferType()(mod)
output = func_1432()
func_1433 = relay.Function([], output)
mutated_mod['func_1433'] = func_1433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_699_call = mod.get_global_var('func_699')
func_701_call = mutated_mod.get_global_var('func_701')
call_1463 = relay.TupleGetItem(func_699_call(), 0)
call_1464 = relay.TupleGetItem(func_701_call(), 0)
output = relay.Tuple([call_1463,])
output2 = relay.Tuple([call_1464,])
func_1465 = relay.Function([], output)
mod['func_1465'] = func_1465
mod = relay.transform.InferType()(mod)
mutated_mod['func_1465'] = func_1465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1465_call = mutated_mod.get_global_var('func_1465')
call_1466 = func_1465_call()
output = call_1466
func_1467 = relay.Function([], output)
mutated_mod['func_1467'] = func_1467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1068_call = mod.get_global_var('func_1068')
func_1069_call = mutated_mod.get_global_var('func_1069')
call_1476 = relay.TupleGetItem(func_1068_call(), 0)
call_1477 = relay.TupleGetItem(func_1069_call(), 0)
func_748_call = mod.get_global_var('func_748')
func_751_call = mutated_mod.get_global_var('func_751')
call_1478 = func_748_call(relay.reshape(call_1476.astype('float64'), [16, 8, 8]))
call_1479 = func_748_call(relay.reshape(call_1476.astype('float64'), [16, 8, 8]))
func_1308_call = mod.get_global_var('func_1308')
func_1312_call = mutated_mod.get_global_var('func_1312')
var_1481 = relay.var("var_1481", dtype = "int32", shape = (3,))#candidate|1481|(3,)|var|int32
var_1482 = relay.var("var_1482", dtype = "int32", shape = (3, 84))#candidate|1482|(3, 84)|var|int32
call_1480 = relay.TupleGetItem(func_1308_call(relay.reshape(var_1481.astype('int32'), [3, 1, 1]), relay.reshape(var_1482.astype('int32'), [3, 6, 14]), ), 1)
call_1483 = relay.TupleGetItem(func_1312_call(relay.reshape(var_1481.astype('int32'), [3, 1, 1]), relay.reshape(var_1482.astype('int32'), [3, 6, 14]), ), 1)
var_1493 = relay.var("var_1493", dtype = "int32", shape = (3, 84))#candidate|1493|(3, 84)|var|int32
bop_1494 = relay.less_equal(var_1482.astype('bool'), relay.reshape(var_1493.astype('bool'), relay.shape_of(var_1482))) # shape=(3, 84)
output = relay.Tuple([call_1476,call_1478,call_1480,var_1481,bop_1494,])
output2 = relay.Tuple([call_1477,call_1479,call_1483,var_1481,bop_1494,])
func_1500 = relay.Function([var_1481,var_1482,var_1493,], output)
mod['func_1500'] = func_1500
mod = relay.transform.InferType()(mod)
mutated_mod['func_1500'] = func_1500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1500_call = mutated_mod.get_global_var('func_1500')
var_1502 = relay.var("var_1502", dtype = "int32", shape = (3,))#candidate|1502|(3,)|var|int32
var_1503 = relay.var("var_1503", dtype = "int32", shape = (3, 84))#candidate|1503|(3, 84)|var|int32
var_1504 = relay.var("var_1504", dtype = "int32", shape = (3, 84))#candidate|1504|(3, 84)|var|int32
call_1501 = func_1500_call(var_1502,var_1503,var_1504,)
output = call_1501
func_1505 = relay.Function([var_1502,var_1503,var_1504,], output)
mutated_mod['func_1505'] = func_1505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_1566 = relay.TupleGetItem(func_685_call(), 0)
call_1567 = relay.TupleGetItem(func_687_call(), 0)
output = call_1566
output2 = call_1567
func_1570 = relay.Function([], output)
mod['func_1570'] = func_1570
mod = relay.transform.InferType()(mod)
output = func_1570()
func_1571 = relay.Function([], output)
mutated_mod['func_1571'] = func_1571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1572 = relay.var("var_1572", dtype = "int64", shape = (5, 10, 14))#candidate|1572|(5, 10, 14)|var|int64
var_1573 = relay.var("var_1573", dtype = "int64", shape = (5, 10, 14))#candidate|1573|(5, 10, 14)|var|int64
bop_1574 = relay.logical_xor(var_1572.astype('int64'), relay.reshape(var_1573.astype('int64'), relay.shape_of(var_1572))) # shape=(5, 10, 14)
func_290_call = mod.get_global_var('func_290')
func_294_call = mutated_mod.get_global_var('func_294')
const_1583 = relay.const([[-5.599039,6.421375,-2.123465,-5.611640,5.547418,6.948995,2.610599,7.134973,0.411958,5.484212,9.511502,-5.310958,0.356590,2.724624,0.926122,-9.874531,-0.481442,3.253786,9.166413,8.441527,-6.067520,-5.870749,4.954882,-6.723377,4.196747,2.117927,-1.811708,3.156125,0.919243,1.091615,-0.939892,-0.256752,4.770533,-7.036694,9.669129,-5.714504,-2.427882,5.293289,-1.010859,2.772635,4.227290,-2.629822,-5.962774,6.460517,-6.836937,8.471483,4.880976,-2.510404,3.474072,0.092484,-4.285266,-5.337139,5.190123,8.196943,5.445818,3.384352,7.532478,-7.503548,-3.020003,6.739162,-2.748431,6.209829,4.655782,-2.765953,-2.872634,9.274039,9.175829,-7.406157,-3.782056,1.633022,-9.923271,-8.587144,-0.640615,8.821930,2.221665,-2.812591,0.722582,6.900647,4.305933,8.581245,1.597018,-2.040281,-9.702701,1.153784,-1.852774,-0.984373,-7.668724,-1.632644,2.304986,8.607402,0.584713,-4.187652,0.258159,0.738010,-0.673263,1.357315,5.111074,-5.583665,-5.931802,-4.828204,-5.266792,9.897203,-4.080349,-7.370082,6.954023,-8.753143,8.841176,-4.210536,-8.267948,7.007214,-4.432674,-4.204576,-1.729638,-5.234296,7.007144,-4.417531,7.850974,-2.656531,6.943278,-2.587380,-7.186826,5.665802,1.083158,-2.566491,0.228111,-1.676260,-2.118672,-7.605479,-3.471365,9.768422,4.775471,4.613084,3.150192,-1.025768,-5.685540,-9.930948,9.776693,-3.708325,9.849873,-8.083081,-8.384576,-9.989728,-2.319147,-0.583620,1.037887,-6.830558,9.074404,-7.833236,5.596330,1.691083,7.502440,-1.686450,-8.152499,5.012625,8.743185,-4.142447,4.263543,3.808733,2.899100,-7.522956,9.106145,-5.178115,-5.142114,-4.100453,8.138476,-8.874622,8.689510,-7.261638,5.487103,3.723954,5.303353,9.223497,-6.352810,-4.163782,-1.621028,5.871501,2.434722,-3.237184,-0.623500,9.482425,-6.691974,-1.090771,-5.713616,8.831463,-4.159738,3.744285,3.446229,-3.398216,9.016121,1.285616,1.353707,8.200024,-6.685944,6.968314,-1.491641,0.412127,-8.909253,-4.798755,-8.118116,-6.192681,-4.823542,-1.789862,-2.307514,-9.440661,-3.322742,6.246686,-5.237935,-0.470832,-9.796881,7.148030]], dtype = "float64")#candidate|1583|(1, 210)|const|float64
const_1584 = relay.const([[True,True,False,True],[True,False,True,False],[False,False,True,False],[True,True,True,True],[False,True,False,False],[False,True,True,True],[False,False,False,False],[False,True,True,False],[True,False,True,False],[False,True,False,False],[True,False,True,False],[True,False,True,False],[True,False,False,False],[True,True,True,False],[True,True,False,False],[True,False,False,False],[False,True,False,False],[False,True,False,True],[True,True,False,False],[False,True,False,True],[True,False,True,True],[True,False,True,True],[False,True,True,True],[True,True,True,True],[False,True,True,True],[False,False,False,True],[True,False,False,True],[False,False,True,True],[True,False,False,False],[True,True,True,True],[True,False,False,False],[True,True,False,False],[False,True,True,True],[True,True,False,True],[False,False,False,False],[True,True,True,False],[False,False,False,True],[True,False,False,False],[False,False,True,False],[True,True,False,True],[False,True,False,False],[False,True,True,False],[True,True,False,False],[True,False,False,True],[False,True,False,True],[True,False,False,True],[False,True,True,True],[False,True,False,False],[False,True,False,True],[False,True,True,True],[True,False,False,False],[False,False,True,False],[True,True,True,False],[True,True,False,True],[False,True,False,False],[True,False,True,True],[True,True,False,True],[True,False,True,False],[False,True,False,False],[True,True,False,True],[False,True,True,True],[True,True,False,True],[True,False,False,False],[False,True,True,False],[False,False,True,True],[False,False,True,False],[True,True,False,True],[False,False,False,False],[True,True,True,False],[True,True,False,False],[True,False,False,False],[True,True,False,True],[True,True,True,True],[False,False,True,True],[False,True,False,False],[True,False,True,True],[False,False,True,True],[False,True,True,True],[True,True,True,False],[False,True,False,False],[True,True,True,True],[True,True,False,True],[False,True,False,False],[True,True,True,True],[True,False,False,True],[False,True,True,True],[False,False,False,True],[False,False,True,True],[True,False,False,False],[True,False,False,False],[True,False,False,True],[True,True,False,False],[True,True,False,True],[False,True,True,True],[True,True,False,True],[True,True,False,False],[True,False,False,True],[True,False,True,False],[False,True,True,True],[False,False,False,True],[True,False,True,True],[True,False,False,False],[True,False,False,False],[True,False,False,True],[True,False,False,False],[True,True,False,True],[False,False,True,False],[False,True,True,True],[True,False,False,False],[False,True,False,True],[True,False,True,True],[True,True,False,False],[False,False,False,True],[True,False,False,True],[False,True,True,False],[False,False,True,True],[True,False,True,True],[True,False,True,False],[False,False,True,True],[False,True,True,False],[True,True,True,False],[False,True,True,False],[True,False,True,True],[True,False,True,False],[False,False,True,True],[False,False,False,True],[True,True,False,True],[True,False,True,False],[True,False,True,True],[True,False,False,False],[True,True,False,False],[True,True,False,False],[True,True,True,False],[False,True,True,True],[True,True,False,False],[True,True,False,True],[True,True,False,False],[False,False,True,True],[True,True,True,True],[False,True,True,True],[False,False,True,False],[False,False,True,True],[False,True,True,True],[False,True,False,True],[True,True,False,True],[True,True,False,True],[False,True,False,False],[False,True,True,False],[True,True,True,True],[True,False,False,True],[False,True,True,False],[True,True,False,False],[False,False,True,False],[True,True,True,True],[False,True,True,False],[False,False,False,True],[True,True,True,True],[False,True,False,False],[True,True,False,False],[True,False,False,True],[False,True,True,True],[False,False,False,False],[True,True,False,True],[False,False,True,True],[False,False,False,False],[True,True,False,False],[False,False,False,True],[True,False,True,True],[True,False,True,True],[True,True,True,False],[True,True,False,True],[False,True,False,False],[True,True,False,False],[False,False,True,False],[False,True,False,True],[False,True,True,True],[True,False,True,False],[True,False,True,False],[False,True,True,False],[False,False,False,True],[True,False,True,True],[False,False,True,False]], dtype = "bool")#candidate|1584|(182, 4)|const|bool
call_1582 = relay.TupleGetItem(func_290_call(relay.reshape(const_1583.astype('float64'), [5, 6, 7]), relay.reshape(const_1584.astype('bool'), [728,]), ), 2)
call_1585 = relay.TupleGetItem(func_294_call(relay.reshape(const_1583.astype('float64'), [5, 6, 7]), relay.reshape(const_1584.astype('bool'), [728,]), ), 2)
output = relay.Tuple([bop_1574,call_1582,const_1583,const_1584,])
output2 = relay.Tuple([bop_1574,call_1585,const_1583,const_1584,])
func_1586 = relay.Function([var_1572,var_1573,], output)
mod['func_1586'] = func_1586
mod = relay.transform.InferType()(mod)
var_1587 = relay.var("var_1587", dtype = "int64", shape = (5, 10, 14))#candidate|1587|(5, 10, 14)|var|int64
var_1588 = relay.var("var_1588", dtype = "int64", shape = (5, 10, 14))#candidate|1588|(5, 10, 14)|var|int64
output = func_1586(var_1587,var_1588,)
func_1589 = relay.Function([var_1587,var_1588,], output)
mutated_mod['func_1589'] = func_1589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_1607 = func_921_call()
call_1608 = func_921_call()
output = call_1607
output2 = call_1608
func_1611 = relay.Function([], output)
mod['func_1611'] = func_1611
mod = relay.transform.InferType()(mod)
output = func_1611()
func_1612 = relay.Function([], output)
mutated_mod['func_1612'] = func_1612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_1613 = relay.TupleGetItem(func_685_call(), 1)
call_1614 = relay.TupleGetItem(func_687_call(), 1)
func_321_call = mod.get_global_var('func_321')
func_324_call = mutated_mod.get_global_var('func_324')
var_1640 = relay.var("var_1640", dtype = "float64", shape = (13, 7))#candidate|1640|(13, 7)|var|float64
call_1639 = func_321_call(relay.reshape(var_1640.astype('float64'), [1, 13, 7]))
call_1641 = func_321_call(relay.reshape(var_1640.astype('float64'), [1, 13, 7]))
output = relay.Tuple([call_1613,call_1639,var_1640,])
output2 = relay.Tuple([call_1614,call_1641,var_1640,])
func_1663 = relay.Function([var_1640,], output)
mod['func_1663'] = func_1663
mod = relay.transform.InferType()(mod)
var_1664 = relay.var("var_1664", dtype = "float64", shape = (13, 7))#candidate|1664|(13, 7)|var|float64
output = func_1663(var_1664)
func_1665 = relay.Function([var_1664], output)
mutated_mod['func_1665'] = func_1665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_699_call = mod.get_global_var('func_699')
func_701_call = mutated_mod.get_global_var('func_701')
call_1667 = relay.TupleGetItem(func_699_call(), 0)
call_1668 = relay.TupleGetItem(func_701_call(), 0)
func_502_call = mod.get_global_var('func_502')
func_504_call = mutated_mod.get_global_var('func_504')
const_1682 = relay.const([9.899712,-0.490950,-1.421626,5.630626,-7.445549,8.599410,6.706531,-7.093442,-8.516277,0.325091,7.990381,5.576696,-3.647666,-2.800826,-1.278677,4.769372,9.037859,5.872380,-8.157038,-6.372482,-9.802141,2.760086,-1.293062,7.599955,-0.719096,-2.262799,1.116317,-7.669637,2.411700,7.800129,6.444319,-2.181588,5.885640,-4.485488,-5.852610,-8.719519,7.646056,-0.751160,4.592083,-8.429195,-9.873675,2.756231,-0.038857,-0.910349,6.215051,6.580103,-6.639864,1.836699,1.825710,-1.199868,-6.917174,-1.898195,-6.889619,8.744039,-3.012913,9.753294,-0.870810,-9.033137,-3.507590,2.516145,7.659771,0.487117,-1.605736,2.972308,-1.285337,0.224988,-4.256663,-7.844889,-4.136626,-1.303264,5.710279,9.614781,9.339396,-3.984735,-8.207234,7.908113,-0.720128,-0.405003,2.249980,-8.759656,3.039348,-4.916053,8.521704,-2.620157,-8.500169,9.090078,-3.468120,0.431348,-4.928037,3.504050,1.977225,-7.175012,6.256619,-8.051842,-7.631524,7.936577,-7.592517,8.910225,-8.052256,6.065109,5.995761,2.182245,-8.059916,1.686362,-9.902885,0.023456,1.850087,-8.164038,-4.238244,2.963452,2.984112,-1.706383,-2.400998,-4.928885,2.103020,4.342363,-9.773483,-1.638640,6.472041,1.725773,6.124321,-6.171532,4.250520,6.192033,6.846877,-8.363552,6.963235,0.232448,6.367597,2.569543,4.101690,0.956049,6.224115,-6.013044,4.185744,-4.579994,1.758754,2.836199,0.420131,-9.372506,1.900455,-7.192975,-1.019995,-4.233001,0.912564,-6.959334,-3.817963,-2.218883,-5.421445,-2.018216,-1.660576,-4.076292,7.904264,-4.276532,-7.404212,-6.639558,-8.826891,2.025277,-7.089600,-5.431663,6.266278,-1.173342,-5.791485,1.298746,-6.804762,-9.539244,-4.352795,-0.209730,-1.902307,6.976701,9.145325,-0.772843,-3.767100,-0.629088,2.232019,-2.587665,-3.073895,-3.959758,3.240067,4.964430,2.348827,-6.746749,-5.979866,-4.776054,-8.936717,9.341192,7.856335,4.018063,7.726283,-4.020810,-6.134970,2.682248,4.526427,8.267763,4.156507,-0.550629,-2.731267,8.500813,6.269414,8.994796,8.506431,-3.601647,-3.163727,-0.925664,0.447761,-4.669539,8.821173,-4.074077,9.794040,6.865295,-8.102393,5.671772,-9.513379,4.224762,-1.685682,9.642379,-5.490358,-8.323240,2.406481,-1.046187,9.322671,-0.922204,5.757739,-1.235446,-6.164027,8.141792,5.242082,5.211587,0.323704,-9.386608,6.368440,0.291685,5.906327,-3.160503,-7.844328,5.081684,9.531438,-8.792911,5.618789,1.595433,-0.072844,-9.795443,-5.122783,-5.573289,6.914599,4.750105,-6.572470,-0.362001,5.555389,7.043855,6.116099,2.595356,-6.166201,9.362702,-4.835126,-5.595633,-6.916874,9.031283,-4.242033,-5.942136,-0.989823,7.444609,3.460174,-0.765112,-3.144855,-5.692821,-1.918439,7.950952,-6.040664,-7.091084,9.064589,6.430264,-2.522835,-6.352087,-7.863784,-3.388861,6.881278,-0.787793,1.416961,3.863360,-1.647788,6.007982,4.062966,5.088401,-3.388038,8.755048,-0.263194,3.417736,8.078825,-6.000461,-3.010266,-8.399528,-3.567793,-4.703795,9.555043,2.647865,-8.843757,-4.269265,1.247600,8.734128,-7.522089,-4.726103,6.897899,2.993336,9.053293,8.956531,-3.178314,5.658197,-6.163243,-6.447559,3.694903,4.525930,-8.824204,-9.863467,8.407823,6.238716,-7.032586,2.581242,8.422569,-2.816533,-7.562448,8.299400,1.269145,7.035293,-1.365152,6.720773,0.388891,9.462114,-0.937631,-1.520382,2.403096,1.593552,4.736162,-0.611335,6.007062,6.492105,-1.270716,-3.562942,-9.204125,0.773696,5.195482,-9.577865,3.077100,7.835615,0.813331,5.974250,5.056684,-6.769488,0.282513,-0.735540,7.356120,-3.801360,-6.422238,7.630836,-1.903805,7.115064,5.007549,5.649506,-6.649253,7.693103,-0.369470,-4.012865,0.306989,-5.415870,2.806687,-0.627775,-6.355870,-0.344316,1.605805,0.189660,-7.677274,-8.123142,5.697357,-1.328817,-5.464977,1.704772,4.599819,-4.533375,5.012397,1.150893,7.771249,9.944088,7.972498,-7.673499,-1.464185,-1.939973,7.605401,-8.759559,-0.573122,-3.318833,-0.858883,0.015759,7.545240,0.979794,-3.153923,-3.634554,-5.974501,-4.495820,0.017644,-4.793309,-3.586752,5.303610,2.374671,-4.554441,-8.706311,-0.089671,3.782053,-5.889857,-1.564418,5.269797,8.878083,-7.717402,8.647463,0.947340,-2.692986,-9.385844,-3.121410,-2.777965,-2.112346,-7.381058,5.913255,8.342289,-6.548876,7.775473,4.456923,-6.823527,-7.150342,-2.222191,3.780819,5.692891,-9.142841,-1.402962,0.580342,-8.466678,-9.653429,-6.549442,-4.459310,-7.989634,-5.204838,1.741072,-9.731586,-4.796066,-6.142813,-5.666630,-1.485627,2.374638,-9.688617,4.182162,-6.492898,1.370215,-4.386664,-6.546390,4.708477,-1.280044,2.943327,-7.139124,1.201013,-0.276014,8.319930,9.565938,-9.360072,-5.321258,-2.873775,-4.055963,-4.148803,6.249358,-8.139122,4.939320,-6.807638,2.918320,9.612983,6.289677,-6.522183,-1.993146,7.244367,1.853425,1.579513,-8.192594,5.845605,-8.361145,-3.119391,1.695274,-2.650785,-8.073407,-6.161029,-7.767221,4.258158,-6.333880,4.460561,-7.189678,-6.969604,7.890046,2.501209,6.687737,-1.208718,-3.528909,-3.693501,1.517384,-2.670555,3.509153,9.404218,-9.335423,-3.587940,-5.092181,-3.191409,-6.954083,-4.646636,-3.581720,5.126999,9.364985,2.773732,-2.480891,2.734791,-6.908373,3.555127,-5.454900,6.518437,-9.466163,7.116941,-7.638331,6.249237,-7.283929,-4.991603,4.391835,-6.056502,3.172442,8.622023,3.560447,-5.436985,-0.439070,-2.964011,-1.078022,-1.264559,0.275122,-2.519551,8.196110,-3.090374,1.600488,-8.310079,-9.555666,6.400581,-5.150950,3.940476,1.170769,-9.922175,8.373935,-5.311320,-2.065495,-0.077678,-2.508717,5.899370,-3.340313,3.278370,-3.021265,6.904618,7.630614,2.902652,8.619852,7.474518,-9.496718,-3.183168,-2.071158,8.102627,9.294641,-9.266920,-2.052254,1.111156,5.289027,7.774667,-7.434538,-2.931102,7.997473,-8.807095,-9.088010,-4.427143,6.227980,5.064535,6.702036,-4.436501,-9.020986,2.786149,0.389400,-7.577796,4.976481,-0.842302,-0.460510,1.715429,-6.439935,-9.388641,-2.114196,0.457424,8.536567,1.074001,-1.792592,-0.115286,5.800523,1.930558,-2.727357,7.804569,3.098513,-9.494157,2.810889,-7.395826,4.059583,-0.153789,4.115085,7.575270,-1.692437,5.103105,-4.754605,-3.369572,0.312735,-6.111371,0.876094,-1.757833,-2.552258,-0.263445,-1.041801,0.972399,3.340636,6.191594,-4.445588,2.943594,-3.028934,7.797897,-4.202563,-2.515986,8.248247,-6.792231,-6.942716,-1.173978,1.478660,-9.390780,0.421677,5.048981,-3.924686,1.079940,8.269183,4.060007,2.879121,-0.365132,-3.941588,-4.690582,-8.896132,-2.004943,2.370684,5.121328,0.239895,-7.456276,0.495064,6.255427,2.704800,-6.973367,-7.984335,-4.997442,-0.254524,6.152405,6.536106,7.893842,-3.307703,-8.472659,-0.254465,-7.207133,-3.188329,-7.305789,-1.850300,4.987858,-2.312138,-2.329171,0.332084,-7.428877,-8.040751,5.710060,7.032439,4.846725,-6.051712,9.676231,4.728522,0.345901,6.348739,6.512105,3.816459,8.192557,6.716870,-0.639505,-3.091403,-1.638363,2.835973,-1.206569,-6.527119,-1.135937,6.170723,7.919522,-7.203330,-5.334052,-0.665943,9.370193,-9.138738,5.345985,7.147767,9.637478,7.043939,-8.644871,3.160966,5.031861,-9.986425,-0.830490,-7.231219,-2.801374,-8.349697,-5.482109,-5.575543,3.959927,-1.615782,-8.620152,-7.874422,0.914252,-3.482823,-6.634219,-1.083133,1.376987,-5.653981,-8.939662,-4.063487,3.008745,-6.465206,9.408031,7.732900,2.710663,-3.885036,3.622141,3.138315,-6.126871,-0.766447,2.495162,-0.504303,4.317207,9.017775,6.905721,-6.802468,-1.027472,-8.473512,-0.412430,-9.730621,4.896027,6.697960,-8.750725,2.267536,-7.683468,6.745578,-9.854307,2.352118,-4.621475,-6.545021,-7.725969,-5.123607,9.269535,-1.137373,5.779106,2.780495,9.594614,4.450287,-3.899745,-2.631526,4.963071,-0.278625,-7.832975,5.055082,-8.493998,-7.238055,0.608719,-0.915491,-9.735600,-3.614677,9.523840,-0.648388,-7.581630,-1.080228,2.491480,-2.475576,1.007119,-0.189517,-7.517414,-6.143476,4.961416,4.087175,-1.389422,3.763537,-2.462325,-4.921646,-8.927638,1.100513,-1.116606,9.248457,-8.582243,-4.534913,-5.553882,8.986476,4.980023,-9.908061,5.036890,1.955075,1.880851,-9.945957,-5.314520,8.059490,0.331661,5.459039,1.298692,0.014483,-8.194069,9.038298,4.165829,0.287523,-2.669904,5.793745,3.757651,9.595492,-4.233378,7.378930,-6.049408,6.012133,2.144235,-8.997740,4.592555,-5.343579,1.723369,-3.839608,9.470834,1.940027,2.628905,9.392229,3.619542,7.050479,-3.517976,-2.270346,-0.798576,-2.820820,5.422293,-3.870965,4.877967,-7.004236,-8.020198,2.313845,3.819108,9.636853,7.094369,3.754725,-4.869610,-8.432150,5.192582,6.805974,-5.573662,2.416299,-6.265010,-2.954315,5.112191,9.023438,-9.806753,1.731340,5.589875,-9.585072,5.949662,-0.261756,1.718344,-5.273605,7.111930,-0.810437,4.820487,5.252215,0.638848,8.987516,5.457437,-8.721743,5.737566,1.799527,-0.235168,-6.392570,1.433453,7.942703,4.279599,-8.719049,-2.717066,2.861925,-9.216275,4.945913,-5.273846,-9.128424,6.301520,6.359207,-6.239444,-5.934323,7.836981,-6.835469,1.220198,0.963833,1.976422,9.445211,-8.237449,-5.533038,-1.108039,-8.561166,-7.999566,-6.162722,1.201162,9.104559,-0.485362,-9.577171,-5.279413,-3.290546,4.579733,-1.018563,9.497158,-9.348115,-2.198508,6.259019,-3.832160,-7.112801,-8.258024,0.664811,-4.114181,-5.654032,-6.804699,-0.135257,6.405001,-5.030588,-9.154653,-2.899026,-7.855637,6.143672,2.910567,8.138771,-2.841285,-6.423056,-2.434471,-6.796226,-8.843770,1.672801,-3.489728,4.570838,3.699110,-0.180874,0.021979,0.949113,8.848729,-8.706957,7.127307,-2.582422,3.863557,7.911750,-6.505729,0.025206,-4.088007,0.505930,-5.020390,-2.157648,-0.688622,-1.275817,4.386933,-0.325021,-5.598882,9.391369,-8.589466,-4.429008,8.040590,-8.376259,7.348739,-5.255224,-4.946997,-4.684196,0.231831,-5.617441,0.621721,0.575616,4.055630,7.292278,-5.406409,5.250582,3.105867,7.111278,1.240347,-7.399366,0.673138,-1.288958,3.009366,-3.566825,-9.995825,-0.527386,1.660775,-7.594722,5.464273,6.234215,5.074836,1.876654,-4.739074,5.056475,-8.866673,-5.079288,-1.665180,4.796083,-6.931727,-4.908646,3.515675,-9.715560,-9.378897,5.994603,9.343414,-7.525170,4.669999,9.917640,-1.020014,-1.635993,-9.989329,-9.135855,4.953193,-0.624006,2.170016,-3.118745,-8.328116,-6.963332,-0.447609,-1.596983,-2.408911,-1.556066,-8.337238,7.509218,-5.758615,3.089643,-8.114993,4.712775,-1.735542,9.986687,9.613156,-4.838006,8.053831,-6.597857,-2.546146,2.384195,0.733590,-6.808203,4.889434,-6.070084,1.964917,-9.613355,9.508881,-4.950931,-5.469870,-0.091623,7.515146,8.499368,1.719231,-7.438913,-8.185938,-3.186837,6.601741,-9.474026,-0.671165,-5.577491,-6.215902,0.203188,4.096133,2.124490,-6.276829,4.470665,-9.113996,-0.671650,-9.830077,3.728242,-8.190905,4.719993,3.590884,-6.147227,-1.843429,1.564992,6.885972,3.818279,-8.130317,-5.181133,-5.465801,3.046773,-4.647827,-9.047061,-5.826291,-9.234291,7.887018,2.943651,8.509396,-4.448957,-7.522348,-0.183622,-7.206853,-7.909900,9.676041,4.328741,-1.137368,-0.372068,-2.462418,-2.491947,8.602038,3.946036,-8.079510,5.220568,-6.299679,9.321659,1.344439,6.716504,9.603974,7.474754,-1.222411,-2.381112,0.820344,-0.071708,2.682870,-6.341570,4.751716,4.869742,-9.257370,7.358669,-0.390012,-4.436957,-8.837452,-5.917602,7.455244,-9.671406,-7.963731,3.890632,-9.419913,-2.838245,-1.666883,-8.162837,-7.149866,2.995012,-9.432707,-3.122833,7.172504,-6.314308,-7.950679,-3.014429,-7.773506,9.796071,1.934114,-4.620637,-4.392145,-6.338557,-7.849636,-4.360512,-4.880172,0.534551,-7.567716,-8.031507,-0.027668,-8.676316,1.031469,9.498551,6.131228,-6.324025,4.080209,-6.094289,6.610785,-2.425018,9.056103,9.691651,-7.888947,-6.133619,-5.400194,-1.626014,-3.261253,3.009994,4.468046,9.287034,6.780662,-8.374983,9.627241,7.644958,7.408277,-8.115574,-0.382576,-6.789478,-1.216642,-6.170822,4.133232,-4.545048,7.119872,4.522794,-3.869639,7.827683,8.033104,-5.168393,7.271178,2.626288,4.917698,7.996091,4.038743,-5.218864,2.922473,-4.684224,2.359945,-3.715071,-5.701772,-9.834741,-3.987881,5.043686,7.741273,-5.351421,8.114823,5.823288,7.913505,-4.945060,-2.021417,6.813539,1.957614,5.180271,-5.350770,2.615873,0.171576,6.250358,-6.528155,1.558429,-5.047905,-7.341691,-3.168013,-6.808885,-1.073636,-9.236432,2.866415,-5.092136,-3.279083,0.439348,7.797520,5.955271,-5.779825,1.566759,1.911755,-8.300589,-5.696877,6.889808,-9.433695,4.926833,0.426442,-2.707935,6.465307,2.906688,-4.031612,-7.396871,-3.836925,-7.856810,-8.917359,8.418121,9.570396,7.246537,-0.885768,-0.379885,-5.950758,6.546238,4.817036,-6.945124,5.653906,-5.618295,-4.934430,8.965485,3.407552,-7.156445,9.353536,0.532317,8.383297,2.134704,-2.622233,4.042456,1.541684,-0.821922,-6.430922,9.279502,-4.189726,8.020881,-4.588176,2.292732,-8.890531,8.500323,6.134043,-2.189773,7.408966,-2.155450,7.524645,-2.450381,8.462775,-2.051589,8.304140,6.038224,9.873798,-2.528327,9.626033,3.530206,6.896327,-2.190846,-1.711169,-4.541158,-8.361796,0.277244,-6.045618,-5.183352,-7.922946,2.295186,-8.841178,3.165085,5.558807,2.974485,-0.970099,-3.294753,4.628376,-0.452398,-0.886779,3.300748,-6.787295,-2.892647,-3.017410,-5.441208,8.893119,-8.245123,-3.149710,-1.499753,0.457696,-2.476810,-2.020349,-9.262886,5.376551,0.241516,9.976165,-6.017688,7.443850,-8.309238,3.037162,-6.918978,-1.414340,-5.289182,4.877386,-5.523793,-9.469735,-4.269566,2.844076,-6.448696,4.616256,-6.125450,-8.532701,-3.349659,-0.744050,8.452116,9.239069,-3.720586,-1.940431,-1.269715,7.596167,4.115379,-5.990618,6.584265,-7.690745,-7.025171,7.212008,-8.196761,-5.709861,-8.558201,1.863863,-4.964873,0.647334,-2.253154,-5.773048,4.640269,2.287148,7.180819,-4.111873,0.225465,7.508184,7.929585,5.347105,-8.705482,-0.952378,-8.043387,0.697675,2.455314,7.949170,-1.773438,-3.660198,-9.689489,-3.095041,8.674126,-6.668297,6.304178], dtype = "float64")#candidate|1682|(1386,)|const|float64
call_1681 = func_502_call(relay.reshape(const_1682.astype('float64'), [11, 9, 14]))
call_1683 = func_502_call(relay.reshape(const_1682.astype('float64'), [11, 9, 14]))
uop_1685 = relay.acos(const_1682.astype('float64')) # shape=(1386,)
func_290_call = mod.get_global_var('func_290')
func_294_call = mutated_mod.get_global_var('func_294')
var_1695 = relay.var("var_1695", dtype = "float64", shape = (210,))#candidate|1695|(210,)|var|float64
const_1696 = relay.const([True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False], dtype = "bool")#candidate|1696|(728,)|const|bool
call_1694 = relay.TupleGetItem(func_290_call(relay.reshape(var_1695.astype('float64'), [5, 6, 7]), relay.reshape(const_1696.astype('bool'), [728,]), ), 3)
call_1697 = relay.TupleGetItem(func_294_call(relay.reshape(var_1695.astype('float64'), [5, 6, 7]), relay.reshape(const_1696.astype('bool'), [728,]), ), 3)
output = relay.Tuple([call_1667,call_1681,uop_1685,call_1694,var_1695,const_1696,])
output2 = relay.Tuple([call_1668,call_1683,uop_1685,call_1697,var_1695,const_1696,])
func_1698 = relay.Function([var_1695,], output)
mod['func_1698'] = func_1698
mod = relay.transform.InferType()(mod)
mutated_mod['func_1698'] = func_1698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1699 = relay.var("var_1699", dtype = "float64", shape = (210,))#candidate|1699|(210,)|var|float64
func_1698_call = mutated_mod.get_global_var('func_1698')
call_1700 = func_1698_call(var_1699)
output = call_1700
func_1701 = relay.Function([var_1699], output)
mutated_mod['func_1701'] = func_1701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_1788 = func_1003_call()
call_1789 = func_1003_call()
output = call_1788
output2 = call_1789
func_1795 = relay.Function([], output)
mod['func_1795'] = func_1795
mod = relay.transform.InferType()(mod)
mutated_mod['func_1795'] = func_1795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1795_call = mutated_mod.get_global_var('func_1795')
call_1796 = func_1795_call()
output = call_1796
func_1797 = relay.Function([], output)
mutated_mod['func_1797'] = func_1797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_1830 = relay.TupleGetItem(func_685_call(), 1)
call_1831 = relay.TupleGetItem(func_687_call(), 1)
output = relay.Tuple([call_1830,])
output2 = relay.Tuple([call_1831,])
func_1851 = relay.Function([], output)
mod['func_1851'] = func_1851
mod = relay.transform.InferType()(mod)
mutated_mod['func_1851'] = func_1851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1851_call = mutated_mod.get_global_var('func_1851')
call_1852 = func_1851_call()
output = call_1852
func_1853 = relay.Function([], output)
mutated_mod['func_1853'] = func_1853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1465_call = mod.get_global_var('func_1465')
func_1467_call = mutated_mod.get_global_var('func_1467')
call_1892 = relay.TupleGetItem(func_1465_call(), 0)
call_1893 = relay.TupleGetItem(func_1467_call(), 0)
func_1611_call = mod.get_global_var('func_1611')
func_1612_call = mutated_mod.get_global_var('func_1612')
call_1905 = func_1611_call()
call_1906 = func_1611_call()
func_1698_call = mod.get_global_var('func_1698')
func_1701_call = mutated_mod.get_global_var('func_1701')
const_1912 = relay.const([8.064691,-6.769277,-4.065101,3.403340,8.182515,9.353648,-1.340753,-6.076041,-4.946676,3.598122,-0.809773,-9.122031,-2.483281,-4.435666,3.997015,-5.857226,3.022505,9.427443,9.242520,-7.823118,-0.480186,3.618431,8.116976,7.787889,-0.564120,-8.835990,9.741264,-5.441349,-9.241997,4.184862,-2.316179,5.803939,-3.283719,7.757643,7.895644,-5.409516,2.812702,-4.444798,-0.882844,-6.090019,-6.688108,8.515008,5.138629,6.644641,-2.866206,8.187790,-0.395723,-9.533664,7.848153,-6.649774,-1.485292,9.853331,6.244230,-0.500759,5.787575,-1.463096,4.521421,-7.530286,7.075488,-6.832558,-0.510436,-9.886596,-2.301303,-2.749730,-4.888542,-3.946732,5.613283,-4.872756,9.457504,-9.327572,1.000269,-7.925277,7.435695,7.917130,-8.746835,-3.986414,8.315066,-1.098050,-5.901614,0.427403,1.145652,9.461851,3.304754,1.730420,-0.030838,-3.407908,-3.661472,-6.006813,4.029131,-7.031112,7.354689,-2.488820,4.674693,9.035936,1.229204,-7.467057,-6.585921,-6.739276,7.200915,4.338222,7.746434,2.468877,-9.953235,0.886477,8.437870,-3.835865,5.747488,1.409247,6.517608,-0.296094,-7.628400,0.584709,-8.937907,-3.336791,-1.690802,8.253137,0.482215,1.616843,-3.400325,4.838028,0.992120,-2.408277,4.549753,3.932136,-6.681465,6.527041,0.978683,-5.778463,-8.461532,0.261653,-1.575409,2.583162,-7.892042,1.942366,5.014781,-3.752511,-2.722084,0.675893,8.461967,-6.910677,-1.013250,-7.906807,5.143768,0.050426,7.205646,-0.126071,6.302599,-1.829882,-8.879382,-9.031439,-2.272363,-2.977769,-4.243024,-0.651421,9.804414,3.196553,2.469047,3.400409,-3.461856,-7.651865,3.827277,5.891035,-7.168017,-4.119069,-9.453578,1.323711,-0.109097,6.727727,5.763516,-6.314192,1.727243,4.026262,3.189920,2.791757,0.138168,8.899162,-3.868927,-6.386972,-8.539278,8.166076,9.228729,-1.908019,3.845314,-5.643083,3.912262,7.982429,9.742778,8.212061,2.375821,-1.249076,4.665394,9.604184,8.720818,-0.972331,9.372272,-9.383019,-1.112492,-7.602149,-2.521838,4.726005,9.897916,-7.979735,1.841203,2.530162,-0.610891,8.067493,5.850393,9.136939,-4.945946,1.104412], dtype = "float64")#candidate|1912|(210,)|const|float64
call_1911 = relay.TupleGetItem(func_1698_call(relay.reshape(const_1912.astype('float64'), [210,])), 0)
call_1913 = relay.TupleGetItem(func_1701_call(relay.reshape(const_1912.astype('float64'), [210,])), 0)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_1915 = func_921_call()
call_1916 = func_921_call()
func_1698_call = mod.get_global_var('func_1698')
func_1701_call = mutated_mod.get_global_var('func_1701')
call_1921 = relay.TupleGetItem(func_1698_call(relay.reshape(const_1912.astype('float64'), [210,])), 2)
call_1922 = relay.TupleGetItem(func_1701_call(relay.reshape(const_1912.astype('float64'), [210,])), 2)
output = relay.Tuple([call_1892,call_1905,call_1911,const_1912,call_1915,call_1921,])
output2 = relay.Tuple([call_1893,call_1906,call_1913,const_1912,call_1916,call_1922,])
func_1932 = relay.Function([], output)
mod['func_1932'] = func_1932
mod = relay.transform.InferType()(mod)
output = func_1932()
func_1933 = relay.Function([], output)
mutated_mod['func_1933'] = func_1933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1570_call = mod.get_global_var('func_1570')
func_1571_call = mutated_mod.get_global_var('func_1571')
call_1986 = func_1570_call()
call_1987 = func_1570_call()
var_2008 = relay.var("var_2008", dtype = "float64", shape = (16, 8, 8))#candidate|2008|(16, 8, 8)|var|float64
bop_2009 = relay.less_equal(call_1986.astype('bool'), relay.reshape(var_2008.astype('bool'), relay.shape_of(call_1986))) # shape=(16, 8, 8)
bop_2012 = relay.less_equal(call_1987.astype('bool'), relay.reshape(var_2008.astype('bool'), relay.shape_of(call_1987))) # shape=(16, 8, 8)
output = bop_2009
output2 = bop_2012
func_2013 = relay.Function([var_2008,], output)
mod['func_2013'] = func_2013
mod = relay.transform.InferType()(mod)
var_2014 = relay.var("var_2014", dtype = "float64", shape = (16, 8, 8))#candidate|2014|(16, 8, 8)|var|float64
output = func_2013(var_2014)
func_2015 = relay.Function([var_2014], output)
mutated_mod['func_2015'] = func_2015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_2017 = relay.TupleGetItem(func_1932_call(), 4)
call_2018 = relay.TupleGetItem(func_1933_call(), 4)
uop_2022 = relay.tan(call_2017.astype('float32')) # shape=(16, 8, 8)
uop_2024 = relay.tan(call_2018.astype('float32')) # shape=(16, 8, 8)
bop_2028 = relay.greater(uop_2022.astype('bool'), relay.reshape(call_2017.astype('bool'), relay.shape_of(uop_2022))) # shape=(16, 8, 8)
bop_2031 = relay.greater(uop_2024.astype('bool'), relay.reshape(call_2018.astype('bool'), relay.shape_of(uop_2024))) # shape=(16, 8, 8)
func_1586_call = mod.get_global_var('func_1586')
func_1589_call = mutated_mod.get_global_var('func_1589')
var_2036 = relay.var("var_2036", dtype = "int64", shape = (5, 140))#candidate|2036|(5, 140)|var|int64
call_2035 = relay.TupleGetItem(func_1586_call(relay.reshape(var_2036.astype('int64'), [5, 10, 14]), relay.reshape(var_2036.astype('int64'), [5, 10, 14]), ), 2)
call_2037 = relay.TupleGetItem(func_1589_call(relay.reshape(var_2036.astype('int64'), [5, 10, 14]), relay.reshape(var_2036.astype('int64'), [5, 10, 14]), ), 2)
bop_2044 = relay.equal(uop_2022.astype('bool'), relay.reshape(bop_2028.astype('bool'), relay.shape_of(uop_2022))) # shape=(16, 8, 8)
bop_2047 = relay.equal(uop_2024.astype('bool'), relay.reshape(bop_2031.astype('bool'), relay.shape_of(uop_2024))) # shape=(16, 8, 8)
func_321_call = mod.get_global_var('func_321')
func_324_call = mutated_mod.get_global_var('func_324')
var_2051 = relay.var("var_2051", dtype = "float64", shape = (1, 91))#candidate|2051|(1, 91)|var|float64
call_2050 = func_321_call(relay.reshape(var_2051.astype('float64'), [1, 13, 7]))
call_2052 = func_321_call(relay.reshape(var_2051.astype('float64'), [1, 13, 7]))
output = relay.Tuple([call_2035,var_2036,bop_2044,call_2050,var_2051,])
output2 = relay.Tuple([call_2037,var_2036,bop_2047,call_2052,var_2051,])
func_2053 = relay.Function([var_2036,var_2051,], output)
mod['func_2053'] = func_2053
mod = relay.transform.InferType()(mod)
mutated_mod['func_2053'] = func_2053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2053_call = mutated_mod.get_global_var('func_2053')
var_2055 = relay.var("var_2055", dtype = "int64", shape = (5, 140))#candidate|2055|(5, 140)|var|int64
var_2056 = relay.var("var_2056", dtype = "float64", shape = (1, 91))#candidate|2056|(1, 91)|var|float64
call_2054 = func_2053_call(var_2055,var_2056,)
output = call_2054
func_2057 = relay.Function([var_2055,var_2056,], output)
mutated_mod['func_2057'] = func_2057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1256_call = mod.get_global_var('func_1256')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_2078 = func_1256_call()
call_2079 = func_1256_call()
func_748_call = mod.get_global_var('func_748')
func_751_call = mutated_mod.get_global_var('func_751')
call_2080 = func_748_call(relay.reshape(call_2078.astype('float64'), [16, 8, 8]))
call_2081 = func_748_call(relay.reshape(call_2078.astype('float64'), [16, 8, 8]))
func_1256_call = mod.get_global_var('func_1256')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_2086 = func_1256_call()
call_2087 = func_1256_call()
func_699_call = mod.get_global_var('func_699')
func_701_call = mutated_mod.get_global_var('func_701')
call_2095 = relay.TupleGetItem(func_699_call(), 0)
call_2096 = relay.TupleGetItem(func_701_call(), 0)
func_1256_call = mod.get_global_var('func_1256')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_2107 = func_1256_call()
call_2108 = func_1256_call()
output = relay.Tuple([call_2078,call_2080,call_2086,call_2095,call_2107,])
output2 = relay.Tuple([call_2079,call_2081,call_2087,call_2096,call_2108,])
func_2152 = relay.Function([], output)
mod['func_2152'] = func_2152
mod = relay.transform.InferType()(mod)
mutated_mod['func_2152'] = func_2152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mutated_mod.get_global_var('func_2152')
call_2153 = func_2152_call()
output = call_2153
func_2154 = relay.Function([], output)
mutated_mod['func_2154'] = func_2154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1068_call = mod.get_global_var('func_1068')
func_1069_call = mutated_mod.get_global_var('func_1069')
call_2177 = relay.TupleGetItem(func_1068_call(), 0)
call_2178 = relay.TupleGetItem(func_1069_call(), 0)
func_1500_call = mod.get_global_var('func_1500')
func_1505_call = mutated_mod.get_global_var('func_1505')
var_2184 = relay.var("var_2184", dtype = "int32", shape = (3,))#candidate|2184|(3,)|var|int32
const_2185 = relay.const([7,3,-8,5,-6,9,4,1,10,-8,8,-2,1,-5,6,-8,-3,-2,-5,-8,-3,-10,6,3,-1,2,8,-8,-5,-3,-8,-3,-1,-3,-1,5,7,-1,7,1,-6,7,-9,5,7,-7,1,5,5,6,8,-8,-1,10,-2,7,-1,3,1,-6,-10,-3,-2,-2,-6,-3,-2,-1,-9,-2,-9,-2,-3,-2,5,-3,10,-5,-6,-1,5,-9,6,-1,-1,7,-2,-10,-4,-1,10,-5,2,7,6,2,-4,2,3,5,6,1,1,-5,4,7,2,8,-1,-3,5,-2,-6,-8,-8,2,7,4,-5,-6,-4,6,-4,-9,-1,3,8,6,-8,5,-9,1,-10,-7,-1,7,5,-1,-10,-3,-5,-9,-2,8,-1,-7,10,8,3,5,8,1,-5,-10,5,6,-10,2,9,-3,3,-1,-7,2,-4,-4,-9,8,7,1,-1,-3,-1,4,-7,10,-6,2,2,3,-1,10,2,-5,6,-3,2,-2,3,5,-3,-9,-8,4,2,-5,4,4,3,-5,7,6,5,4,-3,5,4,7,-4,-1,8,-1,1,-8,-5,3,-2,1,8,5,-4,9,4,-9,7,-5,6,-9,1,1,-2,-8,-5,4,-4,-5,9,6,10,-4,-7,-3,-6,10,-10,3,-7,-8,10,4,-3,4], dtype = "int32")#candidate|2185|(252,)|const|int32
call_2183 = relay.TupleGetItem(func_1500_call(relay.reshape(var_2184.astype('int32'), [3,]), relay.reshape(const_2185.astype('int32'), [3, 84]), relay.reshape(const_2185.astype('int32'), [3, 84]), ), 2)
call_2186 = relay.TupleGetItem(func_1505_call(relay.reshape(var_2184.astype('int32'), [3,]), relay.reshape(const_2185.astype('int32'), [3, 84]), relay.reshape(const_2185.astype('int32'), [3, 84]), ), 2)
output = relay.Tuple([call_2177,call_2183,var_2184,const_2185,])
output2 = relay.Tuple([call_2178,call_2186,var_2184,const_2185,])
func_2191 = relay.Function([var_2184,], output)
mod['func_2191'] = func_2191
mod = relay.transform.InferType()(mod)
var_2192 = relay.var("var_2192", dtype = "int32", shape = (3,))#candidate|2192|(3,)|var|int32
output = func_2191(var_2192)
func_2193 = relay.Function([var_2192], output)
mutated_mod['func_2193'] = func_2193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mod.get_global_var('func_2152')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_2231 = relay.TupleGetItem(func_2152_call(), 1)
call_2232 = relay.TupleGetItem(func_2154_call(), 1)
func_1245_call = mod.get_global_var('func_1245')
func_1246_call = mutated_mod.get_global_var('func_1246')
call_2234 = relay.TupleGetItem(func_1245_call(), 0)
call_2235 = relay.TupleGetItem(func_1246_call(), 0)
func_748_call = mod.get_global_var('func_748')
func_751_call = mutated_mod.get_global_var('func_751')
call_2238 = func_748_call(relay.reshape(call_2231.astype('float64'), [16, 8, 8]))
call_2239 = func_748_call(relay.reshape(call_2231.astype('float64'), [16, 8, 8]))
output = relay.Tuple([call_2231,call_2234,call_2238,])
output2 = relay.Tuple([call_2232,call_2235,call_2239,])
func_2242 = relay.Function([], output)
mod['func_2242'] = func_2242
mod = relay.transform.InferType()(mod)
mutated_mod['func_2242'] = func_2242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2242_call = mutated_mod.get_global_var('func_2242')
call_2243 = func_2242_call()
output = call_2243
func_2244 = relay.Function([], output)
mutated_mod['func_2244'] = func_2244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1851_call = mod.get_global_var('func_1851')
func_1853_call = mutated_mod.get_global_var('func_1853')
call_2245 = relay.TupleGetItem(func_1851_call(), 0)
call_2246 = relay.TupleGetItem(func_1853_call(), 0)
output = relay.Tuple([call_2245,])
output2 = relay.Tuple([call_2246,])
func_2257 = relay.Function([], output)
mod['func_2257'] = func_2257
mod = relay.transform.InferType()(mod)
output = func_2257()
func_2258 = relay.Function([], output)
mutated_mod['func_2258'] = func_2258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_2269 = func_921_call()
call_2270 = func_921_call()
func_1851_call = mod.get_global_var('func_1851')
func_1853_call = mutated_mod.get_global_var('func_1853')
call_2275 = relay.TupleGetItem(func_1851_call(), 0)
call_2276 = relay.TupleGetItem(func_1853_call(), 0)
func_2242_call = mod.get_global_var('func_2242')
func_2244_call = mutated_mod.get_global_var('func_2244')
call_2279 = relay.TupleGetItem(func_2242_call(), 2)
call_2280 = relay.TupleGetItem(func_2244_call(), 2)
output = relay.Tuple([call_2269,call_2275,call_2279,])
output2 = relay.Tuple([call_2270,call_2276,call_2280,])
func_2293 = relay.Function([], output)
mod['func_2293'] = func_2293
mod = relay.transform.InferType()(mod)
mutated_mod['func_2293'] = func_2293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2293_call = mutated_mod.get_global_var('func_2293')
call_2294 = func_2293_call()
output = call_2294
func_2295 = relay.Function([], output)
mutated_mod['func_2295'] = func_2295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1795_call = mod.get_global_var('func_1795')
func_1797_call = mutated_mod.get_global_var('func_1797')
call_2313 = func_1795_call()
call_2314 = func_1795_call()
output = call_2313
output2 = call_2314
func_2316 = relay.Function([], output)
mod['func_2316'] = func_2316
mod = relay.transform.InferType()(mod)
mutated_mod['func_2316'] = func_2316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2316_call = mutated_mod.get_global_var('func_2316')
call_2317 = func_2316_call()
output = call_2317
func_2318 = relay.Function([], output)
mutated_mod['func_2318'] = func_2318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_2332 = func_921_call()
call_2333 = func_921_call()
output = relay.Tuple([call_2332,])
output2 = relay.Tuple([call_2333,])
func_2338 = relay.Function([], output)
mod['func_2338'] = func_2338
mod = relay.transform.InferType()(mod)
output = func_2338()
func_2339 = relay.Function([], output)
mutated_mod['func_2339'] = func_2339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2293_call = mod.get_global_var('func_2293')
func_2295_call = mutated_mod.get_global_var('func_2295')
call_2359 = relay.TupleGetItem(func_2293_call(), 2)
call_2360 = relay.TupleGetItem(func_2295_call(), 2)
uop_2410 = relay.asin(call_2359.astype('float64')) # shape=(16, 8, 8)
uop_2412 = relay.asin(call_2360.astype('float64')) # shape=(16, 8, 8)
uop_2446 = relay.acosh(uop_2410.astype('float32')) # shape=(16, 8, 8)
uop_2448 = relay.acosh(uop_2412.astype('float32')) # shape=(16, 8, 8)
output = uop_2446
output2 = uop_2448
func_2452 = relay.Function([], output)
mod['func_2452'] = func_2452
mod = relay.transform.InferType()(mod)
mutated_mod['func_2452'] = func_2452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mutated_mod.get_global_var('func_2452')
call_2453 = func_2452_call()
output = call_2453
func_2454 = relay.Function([], output)
mutated_mod['func_2454'] = func_2454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_2488 = func_2316_call()
call_2489 = func_2316_call()
output = call_2488
output2 = call_2489
func_2493 = relay.Function([], output)
mod['func_2493'] = func_2493
mod = relay.transform.InferType()(mod)
output = func_2493()
func_2494 = relay.Function([], output)
mutated_mod['func_2494'] = func_2494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_2555 = func_2316_call()
call_2556 = func_2316_call()
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
call_2560 = func_921_call()
call_2561 = func_921_call()
func_321_call = mod.get_global_var('func_321')
func_324_call = mutated_mod.get_global_var('func_324')
const_2564 = relay.const([[-2.497893,-5.640922,-2.021147,-4.845798,7.005629,-0.294542,8.090886,-6.376911,-9.492280,-6.789471,0.741191,-7.226498,-9.020845,1.523579,0.300698,3.366825,8.062792,3.280581,5.530103,-3.666829,-2.809614,-2.946865,5.188487,2.720031,6.004043,-5.317064,3.771952,-1.850013,5.145428,-3.110011,7.095611,-9.103525,0.890178,2.240472,0.889755,-5.528602,-0.247124,2.751713,8.503146,2.696877,1.076692,9.104864,-2.981733,-6.451089,-5.764525,-5.883393,-8.282227,-5.773459,-7.819898,2.020192,4.305996,-2.115786,-7.143589,6.803140,-5.613596,-1.479779,9.273445,-2.178141,-6.503643,9.113070,9.651486,-5.358371,-0.652606,-6.055470,-2.282859,-5.330879,1.952121,-1.390393,6.302638,1.528956,-0.433015,9.278586,-9.167109,-6.949611,-5.259474,1.932685,6.003500,-2.345956,-5.794134,4.818707,-0.617780,-7.631247,-7.524520,3.162347,-5.953805,4.791207,-5.779381,-5.905072,-7.515245,4.775949,-4.666831]], dtype = "float64")#candidate|2564|(1, 91)|const|float64
call_2563 = func_321_call(relay.reshape(const_2564.astype('float64'), [1, 13, 7]))
call_2565 = func_321_call(relay.reshape(const_2564.astype('float64'), [1, 13, 7]))
func_2053_call = mod.get_global_var('func_2053')
func_2057_call = mutated_mod.get_global_var('func_2057')
const_2567 = relay.const([1,9,4,5,-4,-5,-3,-8,7,-10,-5,-2,8,-10,-4,-6,-3,-6,-10,8,-9,-7,-1,5,1,6,2,7,-2,9,-7,10,1,6,8,-9,6,-1,-5,6,-2,1,4,5,8,1,-10,7,8,7,7,3,4,-2,-10,4,-5,-7,-7,-5,6,-10,9,-10,-1,3,10,3,1,2,6,-5,-1,9,5,-2,-4,-9,-10,-1,3,8,9,-9,7,-2,-7,3,9,7,10,9,2,6,-7,2,1,5,-1,2,6,-10,-1,3,7,-6,-7,-10,2,-10,4,-1,10,-7,-2,9,-3,5,4,-3,-7,-9,-5,3,6,10,-5,-7,9,-8,-10,-3,5,-6,5,9,2,6,6,9,-5,4,-10,-9,-2,3,3,7,-5,9,4,-2,6,6,-1,8,3,-8,-2,3,-3,9,6,3,9,-1,-10,1,-3,1,-1,-10,10,7,-4,-7,-1,-2,-2,-8,7,-6,-4,-6,-6,-3,-6,1,-2,2,-1,4,7,8,-10,-10,6,7,-7,-9,10,7,-4,3,-7,1,-4,-1,-10,10,-7,-9,10,-5,9,-7,-3,-4,-5,2,-4,3,9,-10,-4,10,-3,-6,-7,10,-4,-4,5,3,-8,5,7,1,3,6,-2,-1,-7,7,-10,9,-6,-9,4,-1,9,4,4,-4,5,-4,-6,3,4,7,-7,-5,1,3,8,-8,10,2,7,10,-8,10,-9,-7,-3,6,1,4,-7,-9,-1,-1,9,4,1,-10,10,3,5,4,-4,-9,-2,-9,7,2,-5,10,8,1,-10,10,-3,9,3,-7,2,2,-8,-10,6,-5,-9,-6,9,-8,-8,-6,9,2,-7,-9,-4,4,1,-7,10,-10,4,-5,3,1,10,-4,-3,3,5,10,2,-1,9,-9,-9,7,-5,8,6,9,7,6,-2,-9,-2,6,4,-6,7,-4,-6,-2,3,-9,9,4,-3,-5,9,2,4,5,7,-1,-9,-3,-5,-6,-4,7,2,1,-10,-10,10,-10,4,-2,-7,7,9,-10,2,-3,10,-2,-1,-6,9,2,10,6,9,6,3,3,1,6,-9,4,3,2,10,5,-5,-1,-8,10,-6,-5,-10,-1,-2,-8,10,-10,7,4,-9,-7,7,1,6,5,8,1,6,10,-10,9,-10,2,-3,5,9,-8,3,-2,-1,-10,-6,-8,4,-10,-6,-6,-2,-6,-9,6,-6,-4,4,-7,-4,-3,-10,3,-8,-10,-4,3,-9,8,1,-7,10,3,7,8,-6,2,-1,10,7,-6,-8,-6,7,4,10,2,-3,4,4,3,-5,4,9,-5,-3,9,9,6,-3,-3,-2,-5,-1,-6,2,-5,-4,3,2,-2,-1,6,-10,6,-5,-6,-6,-3,-1,2,-8,-10,-5,-6,3,3,2,-3,-4,-6,10,7,5,6,8,-9,6,-9,-2,-9,-4,6,4,6,10,8,-4,-9,4,4,3,10,-1,-2,3,-8,6,1,-5,7,-1,-9,-9,-3,-4,-6,-10,-6,-5,-6,10,3,1,-5,5,4,-6,-10,-1,-7,-1,2,9,-4,8,3,5,-5,4,-3,-1,-2,1,-3,6,-7,-5,10,-1,-10,-6,1,1,-10,-6,-1,-1,4,-6,4,7,2,-4,-7,9,-6,-10,-8,2,5,2,-5,-2,7,-7,1,4,-7,-8,-5,-2,3,9,3,1,1,4,8,-6,4,-6,9,-10,2,1,-4,10,4,-1,1,3,-7,8,4,10,7,-7,-10,3,5,-7,6,10,-7,7,3,1,-8,5,3,10,-3,-8,-3,3,6,1,-9,4,-2,-5,-10,4,5,7,-5,2,5,-1,1,-8,-5,-3,-10,2,7], dtype = "int64")#candidate|2567|(700,)|const|int64
call_2566 = relay.TupleGetItem(func_2053_call(relay.reshape(const_2567.astype('int64'), [5, 140]), relay.reshape(call_2563.astype('float64'), [1, 91]), ), 0)
call_2568 = relay.TupleGetItem(func_2057_call(relay.reshape(const_2567.astype('int64'), [5, 140]), relay.reshape(call_2563.astype('float64'), [1, 91]), ), 0)
var_2570 = relay.var("var_2570", dtype = "float64", shape = (12, 210))#candidate|2570|(12, 210)|var|float64
bop_2571 = relay.floor_mod(call_2566.astype('float64'), var_2570.astype('float64')) # shape=(12, 210)
bop_2574 = relay.floor_mod(call_2568.astype('float64'), var_2570.astype('float64')) # shape=(12, 210)
uop_2581 = relay.atanh(call_2560.astype('float64')) # shape=(16, 8, 8)
uop_2583 = relay.atanh(call_2561.astype('float64')) # shape=(16, 8, 8)
output = relay.Tuple([call_2555,call_2563,const_2564,const_2567,bop_2571,uop_2581,])
output2 = relay.Tuple([call_2556,call_2565,const_2564,const_2567,bop_2574,uop_2583,])
func_2586 = relay.Function([var_2570,], output)
mod['func_2586'] = func_2586
mod = relay.transform.InferType()(mod)
mutated_mod['func_2586'] = func_2586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2587 = relay.var("var_2587", dtype = "float64", shape = (12, 210))#candidate|2587|(12, 210)|var|float64
func_2586_call = mutated_mod.get_global_var('func_2586')
call_2588 = func_2586_call(var_2587)
output = call_2588
func_2589 = relay.Function([var_2587], output)
mutated_mod['func_2589'] = func_2589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1256_call = mod.get_global_var('func_1256')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_2718 = func_1256_call()
call_2719 = func_1256_call()
func_1698_call = mod.get_global_var('func_1698')
func_1701_call = mutated_mod.get_global_var('func_1701')
const_2728 = relay.const([-6.493015,-4.977635,-6.253041,4.898703,4.240429,2.073148,-3.644392,3.147536,8.065500,-2.444859,9.246233,9.625578,-6.142079,3.731893,-7.458923,-4.701979,5.278591,3.867629,4.282854,8.511376,7.295224,-2.040194,8.797323,-3.998658,1.247518,-4.390529,4.071586,8.328422,-5.441455,0.878054,7.047374,7.232073,-4.920601,-1.753325,1.309038,-0.216224,9.331444,-8.076371,-6.662666,5.497293,6.318703,-0.177595,9.847220,-5.596740,-2.598532,-6.144513,-1.764744,-6.305130,-0.278512,-4.329915,-3.279433,5.032970,2.375405,-7.217235,-2.977673,-8.976940,8.348427,9.016508,-2.549366,-3.229607,4.640128,-0.699940,0.332662,5.519956,-8.321857,9.079116,-3.570440,-2.458574,5.017138,-1.862818,-8.441194,9.479740,4.062016,0.746584,1.705147,6.906708,-3.768525,-8.509320,-7.138954,-4.538448,5.053211,-8.879616,-4.844961,5.476144,6.749848,3.632412,-0.925928,-1.279730,5.388159,-7.596206,5.069273,-8.770598,5.985117,4.591567,-8.162045,-5.594430,-1.505495,4.074161,5.040739,-9.284849,-9.337218,2.102512,-9.359203,2.386296,3.737796,-0.514484,0.714727,-8.786084,3.765852,-1.581968,6.749475,7.381419,3.255062,-6.359115,-2.324819,-8.851442,5.808126,6.956951,7.873772,4.785805,-6.227222,5.706056,-6.270802,3.888086,-2.235487,0.147372,-1.350020,6.424557,-2.125970,0.591944,-2.586175,3.025944,2.678271,7.294028,4.382498,7.590479,5.518980,2.699328,-3.422625,4.466394,2.476768,4.844675,-9.775012,9.931491,-0.385296,9.804893,-6.931403,-0.354039,3.456127,-0.252603,4.621630,7.555893,1.201952,-3.787776,9.691516,-5.670670,4.684838,-0.387324,-2.642750,-1.534328,-8.430896,1.844874,-2.258506,-1.913390,4.591278,9.112141,-7.862852,2.734940,2.993494,-6.552382,-6.458340,2.691927,-3.273553,0.501292,-4.849106,7.124856,1.889689,1.269069,1.414487,1.773232,9.393955,1.288724,4.394488,2.509599,-9.647602,9.835672,-6.699154,-5.582852,4.998416,2.442791,3.086763,-2.486191,7.931603,2.349412,-3.541111,0.273892,7.282354,0.466391,-6.923526,4.726667,-1.439131,5.527242,-3.597057,6.150224,9.656513,5.250448,-8.873603,5.692150,9.205260,-2.744750], dtype = "float64")#candidate|2728|(210,)|const|float64
call_2727 = relay.TupleGetItem(func_1698_call(relay.reshape(const_2728.astype('float64'), [210,])), 0)
call_2729 = relay.TupleGetItem(func_1701_call(relay.reshape(const_2728.astype('float64'), [210,])), 0)
const_2730 = relay.const([[[-9.272162,-2.803815,5.175102,-3.523868,-7.904200,2.612929,-4.937030,-2.784512],[8.231625,2.668526,5.565355,1.500306,3.784939,-5.300241,-8.302132,6.600605],[-7.636488,9.426508,5.224032,-6.287515,7.259781,-0.825460,-0.756698,6.259093],[2.670266,-6.668105,-7.095638,-6.692185,5.121583,-6.004662,1.129665,4.017198],[-3.264563,4.737654,-2.662512,0.309598,8.907057,9.246978,4.645688,-1.940898],[1.726936,9.215398,-1.472517,-5.052531,-4.729977,3.486391,-8.662268,1.240387],[4.494468,-7.862760,-0.246033,2.221591,-6.480003,2.972549,-7.843998,-4.175494],[-7.854725,7.520903,-6.131012,5.907460,-8.584619,-8.624525,5.648288,0.824349]],[[-0.975103,-7.227656,-2.215217,-8.562016,9.010845,-0.507584,8.625051,3.197194],[-7.426163,6.437418,-6.266293,0.941239,5.671765,4.382818,5.247558,-7.836104],[1.182659,-3.111754,-0.068893,-3.603479,-3.368033,1.451029,9.804374,8.890029],[3.912046,-7.544859,2.030048,6.533592,2.694645,7.954597,9.464296,-7.255874],[1.459129,-6.872264,-0.227434,5.045791,8.416412,-1.812362,2.213588,-4.505299],[-5.333500,8.750968,-0.931935,2.970653,3.037616,-7.151103,-4.961283,1.966777],[0.917649,2.769059,-1.811777,-0.534320,-3.041298,2.150969,2.239435,-1.172365],[-7.192352,3.825178,-9.705184,3.799304,-3.632256,7.277499,-3.668266,-6.218102]],[[-5.202007,9.579306,-8.599098,9.420892,3.958369,-4.285763,-4.367500,-3.381788],[-1.061730,-3.271474,-2.677536,2.406504,9.216284,5.557444,9.981363,-4.058717],[-8.643575,5.271922,0.034862,0.134483,3.807831,6.925040,-3.143777,-7.491145],[-2.292170,-9.174220,-0.222027,5.909552,-0.358315,-3.324008,-4.904938,0.613362],[-7.610894,7.218907,1.945920,-6.300803,-5.597027,1.571916,-9.246420,-7.347808],[-4.057732,1.151447,-3.365451,-8.787994,-4.013927,-7.652088,4.343693,1.741719],[-8.689405,-8.826776,9.828369,-8.304414,-6.287525,-1.829194,-5.587728,6.985528],[4.885834,3.216829,6.944959,-3.231205,-9.870085,-7.224511,5.874245,-1.558240]],[[-9.479885,4.971004,0.378746,-4.761975,0.878348,-3.235444,7.108135,-4.050777],[0.014134,-1.737656,-6.001940,-1.061081,6.104922,-2.832129,-1.543686,4.224133],[5.083787,-6.430176,-3.600157,9.791244,1.236894,9.162512,8.150863,-7.775971],[-2.345967,-2.331026,9.450111,4.948775,0.165923,5.910385,-6.680761,3.524334],[-2.674823,2.575376,-5.430301,-5.623774,-1.743236,-7.055767,-3.735369,-2.096730],[4.565755,3.321346,6.445552,5.481750,-0.563318,-3.282407,5.101446,3.515309],[4.687402,0.856856,2.118940,-7.991602,6.179497,9.426435,2.414561,-7.212829],[-2.562146,5.371883,6.298302,8.895774,-7.819683,-0.709284,0.931025,4.225163]],[[-2.081216,-2.080768,-4.169159,-8.014203,6.071890,3.481368,1.489525,1.079192],[9.651851,-6.076488,5.000277,7.960695,7.962448,-2.562482,7.727192,-8.764088],[-7.478086,6.222060,8.496971,-5.353638,6.869983,4.740992,-2.027049,1.550147],[1.297653,-6.661202,0.896837,-4.233549,4.571985,1.554747,-8.198045,4.693638],[-8.758140,-9.487256,-5.494978,-9.715508,-1.106056,-7.575601,-6.276565,9.681544],[6.615117,-8.644474,7.186100,-8.663317,3.083321,1.356674,6.858291,-2.925230],[4.706091,9.174959,-0.178226,3.763955,0.755001,9.787028,2.418608,5.891127],[-0.755372,6.285588,2.191442,-5.658047,4.583910,-5.840270,-9.183690,-5.482339]],[[3.186546,0.163828,1.679322,1.154417,9.137520,-9.072268,0.197622,0.672952],[-4.265852,1.939081,-8.223344,-3.067321,3.101977,-4.421670,-3.444288,6.324884],[-3.875329,7.450358,1.958479,-6.906615,3.002413,-1.388777,3.973568,-9.910838],[-6.685192,5.946154,4.761867,2.231482,-2.093497,8.263304,-7.204821,8.576512],[3.919430,8.058743,5.761671,8.077671,-5.814532,6.703549,-6.705092,2.103192],[2.112014,2.663396,1.872772,7.871597,7.706295,-2.055547,2.454335,-7.433451],[-2.311373,3.639214,-8.158108,-3.516697,-9.757566,-8.512457,7.573646,-9.149355],[-6.900974,1.091995,-2.660772,8.954993,4.778297,3.764696,5.904611,-9.713650]],[[2.503051,4.784394,-8.665931,8.990453,6.226146,3.158368,0.876932,0.923374],[-6.680375,1.059849,6.929105,-1.084459,-9.884643,8.267609,5.416655,7.796990],[-9.617023,-2.651597,-4.669324,2.719649,1.149448,-1.123401,-1.274359,-1.834790],[2.056515,8.296261,6.275748,6.288435,-6.287270,3.649185,-1.843658,-0.122817],[-0.350290,-9.457127,-3.244224,-0.733661,-7.463123,4.329198,9.372836,5.715353],[2.289964,6.533737,-0.047127,2.393453,-9.673479,5.992493,8.314106,9.785375],[-0.092058,6.836881,6.076397,7.639761,-6.517173,5.338556,-3.930270,-3.065679],[0.066100,-7.617235,6.960534,-9.500172,3.716363,-4.167830,-7.561590,-7.116266]],[[6.888751,0.428052,9.173767,9.725078,4.467291,8.706904,1.081501,-5.620972],[-3.501804,6.450280,-2.243531,6.242206,8.454317,-2.118931,0.583667,-9.033026],[-0.796544,8.007889,-3.979895,-0.281576,9.283086,-0.521329,6.611813,-3.918443],[3.047728,8.171117,9.753247,2.976256,2.803416,-5.672397,-1.207414,5.197772],[7.081894,1.826838,1.364914,8.669423,7.060854,-3.625515,-9.206422,-5.670476],[-7.629735,8.098293,-8.820007,-9.576464,2.476349,-8.231968,5.709216,-9.601623],[6.373456,7.830797,3.813775,2.252325,-8.898590,-8.897805,-1.214768,-9.858469],[-2.493176,1.530126,2.539036,-7.948718,-0.153261,-7.907416,5.330426,-7.959113]],[[-7.757185,2.429181,7.311056,2.302150,-6.093019,-8.858090,-0.478663,2.472241],[6.181796,-5.523156,-4.188116,9.836852,8.441930,0.971175,-4.663891,3.853054],[9.859187,2.943396,-1.270334,-3.143495,-2.003172,0.686727,6.814334,6.263998],[2.910669,7.500792,6.309611,1.651786,7.741923,4.892750,-5.891422,-8.632660],[2.162401,-9.736712,-3.425766,2.081354,-2.128356,-7.077020,6.071300,-6.620105],[2.238256,6.602159,-4.414691,3.849450,1.362236,4.969550,-2.713136,9.028625],[7.345482,0.311719,-9.954946,-3.071657,7.874177,-6.594194,3.436022,-8.678603],[1.893441,5.718746,-9.328359,7.859359,2.703635,2.463543,-0.041019,0.348482]],[[3.689632,-2.778813,4.480693,-1.442023,4.901069,-7.968843,1.078303,1.243174],[-6.293034,-9.608587,4.691779,-9.669184,-0.695293,-5.204847,-1.082107,8.132768],[-8.953872,3.866331,-5.384841,0.188505,-3.893435,-4.039128,-0.472412,-1.045972],[-0.865969,6.174288,-8.450665,-3.320582,7.039693,-9.457616,0.727407,6.457119],[2.754789,1.559939,-9.550052,2.303543,-0.419877,-3.678522,3.644588,5.246596],[7.590361,3.149986,-0.232924,6.808784,2.932662,1.901935,5.844620,-2.586870],[2.805485,-4.235189,-5.061773,3.430530,-8.655218,8.022284,-8.819976,6.745701],[1.557628,-1.325971,7.028258,-5.616172,4.510489,6.140606,-6.170330,3.542118]],[[7.868729,-7.215600,8.952477,5.595926,6.471086,1.741748,5.515244,-1.880778],[1.875169,8.817848,-0.694702,2.620505,3.484146,-1.791351,0.174747,-5.433101],[5.602163,-5.113770,-4.985422,-7.484172,4.780471,4.917223,7.518708,5.220989],[-7.828850,1.392553,-4.275672,-2.497470,1.738504,-6.913367,-5.906024,6.295468],[9.199223,-9.339677,2.408846,3.202690,-4.997727,-1.272812,-7.642957,5.633817],[-8.327912,3.247922,4.244104,-7.502012,-9.052266,4.081458,2.795555,6.337944],[0.021782,-6.434892,-8.175594,2.151556,4.129969,-7.313490,2.312722,-2.555568],[-4.280285,5.862405,-0.908645,-5.849998,-2.570809,0.826881,0.301080,-1.812152]],[[7.512597,5.703907,-5.446622,-4.628131,-8.971124,-7.372381,-5.978902,3.666979],[-5.099821,6.728274,1.146169,-4.907192,6.686373,7.533896,-5.310240,3.808846],[6.256970,1.209446,3.705983,7.016239,7.178529,-6.019931,-2.077468,-9.041250],[-7.123756,0.424273,-9.024824,8.404533,-9.275920,-3.956513,-5.094025,-2.711048],[-8.264162,4.334799,3.473150,-2.941567,-1.443949,5.841498,-9.449415,-1.030600],[0.436560,-5.263821,6.766263,2.726536,4.931199,-3.181239,-3.519455,5.755076],[-4.605957,-2.965616,7.544624,-2.213604,9.926732,-3.909246,-3.551606,-8.735888],[5.330516,6.345309,-3.576276,-6.198934,-3.635488,5.514090,6.263002,1.511610]],[[-3.837171,1.427346,-8.940266,0.205687,1.794617,-1.249842,-0.068147,4.483628],[5.908134,-9.636482,-8.946792,9.154884,3.204757,0.490412,2.479812,3.236051],[-0.775507,2.753556,-1.534963,7.372335,8.424201,9.160211,-0.546870,7.773477],[7.657651,-2.286551,-4.321730,-8.802496,-7.877717,-5.734220,7.949348,1.165941],[-5.059547,-1.752562,-7.640129,8.523651,2.318934,1.961323,3.159652,-9.230020],[2.097879,-8.512413,-5.867849,2.810640,-9.697187,7.100569,0.260099,-3.905664],[3.523618,2.608610,-1.213631,2.108978,5.751016,6.363546,7.477495,-3.571555],[-1.208267,-6.236483,8.203690,-4.591571,9.763345,5.776020,-4.472701,5.487562]],[[4.907020,6.760643,4.478350,8.051091,-3.921848,7.653391,-4.601622,-4.596411],[6.469580,-8.431773,-1.574836,-8.425953,-0.591430,9.172760,3.135236,-0.526690],[1.184603,-4.435928,3.765225,4.202439,9.117709,2.108349,-0.089923,-9.691929],[4.614784,9.725962,0.026306,9.864207,4.230261,8.980252,5.363391,0.775993],[4.890382,1.288140,-9.203815,-0.218521,-7.910951,9.343042,4.324360,-5.638080],[-8.269845,7.116961,3.139534,4.283064,5.523967,-1.746638,3.103155,8.538390],[0.273620,1.241014,8.712425,9.680564,3.447838,4.495934,2.152783,9.005239],[8.452362,5.794683,-4.850946,5.873851,6.467195,-7.298594,-2.144996,-8.841347]],[[2.868519,8.232109,1.935047,-7.162166,9.104250,-2.419201,2.557105,0.581076],[-0.636760,8.350747,5.816838,-1.448308,-5.515051,5.127344,-1.647510,1.415609],[2.137404,-5.956416,0.360438,-8.037946,-8.312112,1.487706,-7.977913,-6.635672],[-1.701321,5.185321,9.440923,-9.259465,8.185383,-5.465167,5.697720,4.607641],[-3.631380,-2.332668,-8.097499,-2.401908,3.324457,-2.795078,-1.839261,-1.284334],[-6.348658,7.841983,4.705037,-1.587835,8.779775,-1.483459,-0.926351,-8.067781],[4.349902,-8.111746,7.696614,0.581239,6.796740,-8.767250,-7.251667,-4.969273],[1.113472,-6.526934,3.621232,6.770670,2.732761,-8.252344,0.329515,-7.296124]],[[5.242473,-6.817058,-7.346905,8.620362,6.828267,7.944379,-9.367961,-6.966406],[8.522649,-8.575721,5.575004,-8.415394,3.909382,-3.533005,3.402720,3.525266],[-5.182082,0.973210,9.837254,-0.290657,-3.500302,3.098541,9.104937,-6.047875],[-4.534215,3.535859,-1.112656,0.910744,-9.897397,-4.718017,-3.779034,-3.043245],[2.087307,7.813654,-8.122123,2.341118,-8.335513,7.484508,1.948105,-0.431253],[-7.689806,8.812013,0.056052,-6.141094,3.325160,0.145807,0.591278,-4.321422],[0.039997,9.703751,8.612269,6.481062,6.437486,7.963669,-5.161052,7.491857],[0.565952,-4.737176,7.614831,7.182621,4.189432,-9.423424,-9.126487,-1.812384]]], dtype = "float64")#candidate|2730|(16, 8, 8)|const|float64
bop_2731 = relay.divide(call_2727.astype('float64'), relay.reshape(const_2730.astype('float64'), relay.shape_of(call_2727))) # shape=(16, 8, 8)
bop_2734 = relay.divide(call_2729.astype('float64'), relay.reshape(const_2730.astype('float64'), relay.shape_of(call_2729))) # shape=(16, 8, 8)
func_2493_call = mod.get_global_var('func_2493')
func_2494_call = mutated_mod.get_global_var('func_2494')
call_2738 = func_2493_call()
call_2739 = func_2493_call()
output = relay.Tuple([call_2718,const_2728,bop_2731,call_2738,])
output2 = relay.Tuple([call_2719,const_2728,bop_2734,call_2739,])
func_2741 = relay.Function([], output)
mod['func_2741'] = func_2741
mod = relay.transform.InferType()(mod)
mutated_mod['func_2741'] = func_2741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2741_call = mutated_mod.get_global_var('func_2741')
call_2742 = func_2741_call()
output = call_2742
func_2743 = relay.Function([], output)
mutated_mod['func_2743'] = func_2743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2293_call = mod.get_global_var('func_2293')
func_2295_call = mutated_mod.get_global_var('func_2295')
call_2750 = relay.TupleGetItem(func_2293_call(), 1)
call_2751 = relay.TupleGetItem(func_2295_call(), 1)
output = call_2750
output2 = call_2751
func_2753 = relay.Function([], output)
mod['func_2753'] = func_2753
mod = relay.transform.InferType()(mod)
output = func_2753()
func_2754 = relay.Function([], output)
mutated_mod['func_2754'] = func_2754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2242_call = mod.get_global_var('func_2242')
func_2244_call = mutated_mod.get_global_var('func_2244')
call_2792 = relay.TupleGetItem(func_2242_call(), 0)
call_2793 = relay.TupleGetItem(func_2244_call(), 0)
output = call_2792
output2 = call_2793
func_2804 = relay.Function([], output)
mod['func_2804'] = func_2804
mod = relay.transform.InferType()(mod)
output = func_2804()
func_2805 = relay.Function([], output)
mutated_mod['func_2805'] = func_2805
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2817 = relay.var("var_2817", dtype = "float64", shape = (12, 2, 12))#candidate|2817|(12, 2, 12)|var|float64
var_2818 = relay.var("var_2818", dtype = "float64", shape = (12, 2, 12))#candidate|2818|(12, 2, 12)|var|float64
bop_2819 = relay.multiply(var_2817.astype('float64'), relay.reshape(var_2818.astype('float64'), relay.shape_of(var_2817))) # shape=(12, 2, 12)
uop_2824 = relay.asin(var_2817.astype('float64')) # shape=(12, 2, 12)
var_2832 = relay.var("var_2832", dtype = "float64", shape = (12, 2, 12))#candidate|2832|(12, 2, 12)|var|float64
bop_2833 = relay.less(uop_2824.astype('bool'), relay.reshape(var_2832.astype('bool'), relay.shape_of(uop_2824))) # shape=(12, 2, 12)
bop_2837 = relay.subtract(bop_2833.astype('int16'), relay.reshape(var_2817.astype('int16'), relay.shape_of(bop_2833))) # shape=(12, 2, 12)
output = relay.Tuple([bop_2819,bop_2837,])
output2 = relay.Tuple([bop_2819,bop_2837,])
func_2842 = relay.Function([var_2817,var_2818,var_2832,], output)
mod['func_2842'] = func_2842
mod = relay.transform.InferType()(mod)
var_2843 = relay.var("var_2843", dtype = "float64", shape = (12, 2, 12))#candidate|2843|(12, 2, 12)|var|float64
var_2844 = relay.var("var_2844", dtype = "float64", shape = (12, 2, 12))#candidate|2844|(12, 2, 12)|var|float64
var_2845 = relay.var("var_2845", dtype = "float64", shape = (12, 2, 12))#candidate|2845|(12, 2, 12)|var|float64
output = func_2842(var_2843,var_2844,var_2845,)
func_2846 = relay.Function([var_2843,var_2844,var_2845,], output)
mutated_mod['func_2846'] = func_2846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2242_call = mod.get_global_var('func_2242')
func_2244_call = mutated_mod.get_global_var('func_2244')
call_2884 = relay.TupleGetItem(func_2242_call(), 2)
call_2885 = relay.TupleGetItem(func_2244_call(), 2)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2886 = func_2013_call(relay.reshape(call_2884.astype('float64'), [16, 8, 8]))
call_2887 = func_2013_call(relay.reshape(call_2884.astype('float64'), [16, 8, 8]))
output = relay.Tuple([call_2884,call_2886,])
output2 = relay.Tuple([call_2885,call_2887,])
func_2888 = relay.Function([], output)
mod['func_2888'] = func_2888
mod = relay.transform.InferType()(mod)
mutated_mod['func_2888'] = func_2888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2888_call = mutated_mod.get_global_var('func_2888')
call_2889 = func_2888_call()
output = call_2889
func_2890 = relay.Function([], output)
mutated_mod['func_2890'] = func_2890
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2894 = relay.var("var_2894", dtype = "float32", shape = (3, 11, 13))#candidate|2894|(3, 11, 13)|var|float32
var_2895 = relay.var("var_2895", dtype = "float32", shape = (3, 11, 13))#candidate|2895|(3, 11, 13)|var|float32
bop_2896 = relay.floor_mod(var_2894.astype('float32'), relay.reshape(var_2895.astype('float32'), relay.shape_of(var_2894))) # shape=(3, 11, 13)
const_2903 = relay.const([[[-9.379538,3.738592,8.991350,-9.531856,7.681957,-0.811404,-9.149876,4.389286,-9.260123,0.830521,-7.672550,1.666548,-4.737377],[-7.391402,-1.109101,6.223648,0.767183,5.370715,-6.825905,-4.009063,9.160520,7.167728,0.102147,-8.839072,0.514028,8.150308],[8.891706,4.278354,3.233660,-0.619514,0.714101,-8.218293,-1.178668,3.410069,0.829399,9.557302,-5.803981,-9.480672,1.379720],[-1.972745,5.075573,-2.974936,-8.353096,-8.895864,5.933002,2.597653,8.598351,3.695999,5.828051,-8.736172,-8.470583,-2.190711],[-8.500894,-9.984083,7.054748,0.098053,4.819407,7.355232,0.580167,3.927637,-0.928775,-0.019343,-7.837875,-3.437539,-8.994291],[-7.689911,-3.656024,-6.092973,5.890251,-3.506958,0.706257,1.059717,9.117430,-3.261573,8.858228,-0.439353,6.351246,0.212660],[-0.811790,1.215186,-9.842051,-9.243090,-0.070562,-4.650381,9.601366,7.500158,-4.530821,4.807829,0.699442,-2.466509,0.888199],[0.489024,6.552522,-6.246712,-8.188955,3.818209,5.240540,9.701244,-8.595379,-5.462359,-3.643205,-8.407480,-6.111848,-5.193594],[3.736304,-7.208471,9.489786,8.035905,-0.419478,7.070830,-9.298415,-9.971869,-7.750884,9.340326,4.854011,-1.544615,3.861818],[-5.335418,5.237653,-5.654081,2.565468,0.358054,-1.791436,-1.918039,4.155160,2.595751,-4.252174,8.926860,2.740638,5.492277],[-8.826580,-5.272964,-4.906544,-4.995244,7.127443,-9.248312,0.013322,-4.347097,3.726007,8.661992,-5.188589,-2.292005,-9.258583]],[[4.513710,-6.477623,-4.966980,-3.721447,3.850843,4.742102,-3.638781,-9.885772,8.430303,6.174882,0.276580,-8.139011,6.798422],[7.673723,3.219464,4.380265,0.106953,2.954628,3.313483,-3.084793,-7.379810,-0.245647,-9.802611,-8.784558,-9.406616,6.258330],[-9.669943,-1.758278,-2.850664,4.265905,2.073785,-6.752784,-5.140405,-8.130912,-7.139239,-5.026154,-3.374167,2.297552,4.726129],[2.012769,4.118556,7.147296,-5.954684,4.709405,7.916907,8.620384,-0.315064,5.963855,5.256749,-0.926709,-2.889171,8.302107],[8.020221,-3.489791,-2.958104,-3.406540,-9.754171,4.222570,-3.046667,-6.346046,9.398698,-8.733431,2.491622,-9.606324,-6.558292],[-0.933686,-2.220945,6.685073,0.795696,-9.552647,5.259407,9.727847,1.176509,2.267492,-2.511855,8.480441,4.232853,6.788117],[-4.293273,4.048381,-6.450519,6.846733,1.318389,-4.248226,-0.289168,-6.883765,5.374063,-8.722532,-8.076277,-2.660755,6.707706],[-4.871947,-4.937117,8.679217,-6.258832,2.733783,5.057403,7.148442,5.090827,9.552273,-2.281525,-2.313670,1.917838,-0.853429],[-9.697195,-1.045044,5.330528,-9.971786,-4.317759,-9.213746,-6.938541,3.480004,-4.481514,8.267967,-1.520336,-5.228065,-0.901028],[2.179080,7.188481,-9.267217,-2.414112,8.900582,9.651791,1.635200,8.026457,-9.916615,5.623826,8.763298,-1.702570,-8.344713],[6.721439,-3.957823,1.973869,-7.966708,4.444001,-2.462992,3.675858,4.786488,7.238694,1.915648,-6.900448,-2.874720,9.341889]],[[-6.092658,-7.536718,1.911774,3.112324,-7.029656,4.603898,3.911234,4.000182,-8.515810,2.964222,6.442719,7.508040,4.726240],[6.014604,7.437550,-7.068620,-3.419929,-7.340777,-3.721031,9.234842,-7.725958,0.583140,-4.873311,9.440679,-4.265695,-0.060505],[1.293933,-2.302335,-6.459195,7.253414,-0.637336,3.281883,-0.633588,-9.744394,0.093825,9.132024,-7.678898,7.293167,4.148781],[-0.770179,7.536818,-5.510874,-8.836757,3.428718,-0.559559,-4.807329,-9.088815,9.385081,-8.456435,-9.411184,-8.790516,2.444602],[-0.904032,6.461227,-6.920093,1.678119,-1.936480,-7.320186,-0.458860,4.984008,-0.082041,-6.702258,9.591025,-0.582913,9.397440],[9.014849,-1.205686,9.831475,8.977058,6.110512,-7.399213,3.118974,-1.924819,6.914259,-0.425811,7.496778,-9.062257,4.051954],[5.994860,4.615592,-2.668501,-9.245206,-1.181409,-1.470410,-0.735200,7.017342,-3.954608,-6.736579,-8.953033,-9.559181,-5.149270],[-2.081557,5.549512,5.808815,3.760037,8.854918,1.402823,-5.569949,4.541869,-1.802054,-2.514263,-5.992484,-2.754351,4.024070],[-2.156633,9.572606,9.233410,-0.736141,-6.612330,-3.457884,-2.416945,8.323445,6.679627,2.017708,-6.714977,1.258310,4.709972],[-2.046983,-7.930441,2.115685,7.757891,9.189662,-3.816762,2.598523,3.683819,-4.429795,9.897333,-0.328627,1.491543,-2.778798],[3.618836,7.755904,2.815378,-5.961223,6.106436,0.012738,2.140187,-6.369894,-8.632801,-0.492421,8.023971,8.039388,-4.089013]]], dtype = "float32")#candidate|2903|(3, 11, 13)|const|float32
bop_2904 = relay.logical_or(bop_2896.astype('bool'), relay.reshape(const_2903.astype('bool'), relay.shape_of(bop_2896))) # shape=(3, 11, 13)
func_2888_call = mod.get_global_var('func_2888')
func_2890_call = mutated_mod.get_global_var('func_2890')
call_2907 = relay.TupleGetItem(func_2888_call(), 0)
call_2908 = relay.TupleGetItem(func_2890_call(), 0)
var_2911 = relay.var("var_2911", dtype = "bool", shape = (16, 8, 8))#candidate|2911|(16, 8, 8)|var|bool
bop_2912 = relay.multiply(call_2907.astype('int8'), relay.reshape(var_2911.astype('int8'), relay.shape_of(call_2907))) # shape=(16, 8, 8)
bop_2915 = relay.multiply(call_2908.astype('int8'), relay.reshape(var_2911.astype('int8'), relay.shape_of(call_2908))) # shape=(16, 8, 8)
uop_2918 = relay.asinh(const_2903.astype('float32')) # shape=(3, 11, 13)
output = relay.Tuple([bop_2904,bop_2912,uop_2918,])
output2 = relay.Tuple([bop_2904,bop_2915,uop_2918,])
func_2929 = relay.Function([var_2894,var_2895,var_2911,], output)
mod['func_2929'] = func_2929
mod = relay.transform.InferType()(mod)
mutated_mod['func_2929'] = func_2929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2929_call = mutated_mod.get_global_var('func_2929')
var_2931 = relay.var("var_2931", dtype = "float32", shape = (3, 11, 13))#candidate|2931|(3, 11, 13)|var|float32
var_2932 = relay.var("var_2932", dtype = "float32", shape = (3, 11, 13))#candidate|2932|(3, 11, 13)|var|float32
var_2933 = relay.var("var_2933", dtype = "bool", shape = (16, 8, 8))#candidate|2933|(16, 8, 8)|var|bool
call_2930 = func_2929_call(var_2931,var_2932,var_2933,)
output = call_2930
func_2934 = relay.Function([var_2931,var_2932,var_2933,], output)
mutated_mod['func_2934'] = func_2934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_2967 = func_1003_call()
call_2968 = func_1003_call()
uop_2973 = relay.asinh(call_2967.astype('float64')) # shape=(16, 8, 8)
uop_2975 = relay.asinh(call_2968.astype('float64')) # shape=(16, 8, 8)
output = relay.Tuple([uop_2973,])
output2 = relay.Tuple([uop_2975,])
func_2977 = relay.Function([], output)
mod['func_2977'] = func_2977
mod = relay.transform.InferType()(mod)
mutated_mod['func_2977'] = func_2977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mutated_mod.get_global_var('func_2977')
call_2978 = func_2977_call()
output = call_2978
func_2979 = relay.Function([], output)
mutated_mod['func_2979'] = func_2979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2293_call = mod.get_global_var('func_2293')
func_2295_call = mutated_mod.get_global_var('func_2295')
call_2983 = relay.TupleGetItem(func_2293_call(), 0)
call_2984 = relay.TupleGetItem(func_2295_call(), 0)
func_699_call = mod.get_global_var('func_699')
func_701_call = mutated_mod.get_global_var('func_701')
call_3036 = relay.TupleGetItem(func_699_call(), 0)
call_3037 = relay.TupleGetItem(func_701_call(), 0)
output = relay.Tuple([call_2983,call_3036,])
output2 = relay.Tuple([call_2984,call_3037,])
func_3038 = relay.Function([], output)
mod['func_3038'] = func_3038
mod = relay.transform.InferType()(mod)
mutated_mod['func_3038'] = func_3038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3038_call = mutated_mod.get_global_var('func_3038')
call_3039 = func_3038_call()
output = call_3039
func_3040 = relay.Function([], output)
mutated_mod['func_3040'] = func_3040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2888_call = mod.get_global_var('func_2888')
func_2890_call = mutated_mod.get_global_var('func_2890')
call_3054 = relay.TupleGetItem(func_2888_call(), 1)
call_3055 = relay.TupleGetItem(func_2890_call(), 1)
uop_3077 = relay.erf(call_3054.astype('float32')) # shape=(16, 8, 8)
uop_3079 = relay.erf(call_3055.astype('float32')) # shape=(16, 8, 8)
output = uop_3077
output2 = uop_3079
func_3085 = relay.Function([], output)
mod['func_3085'] = func_3085
mod = relay.transform.InferType()(mod)
mutated_mod['func_3085'] = func_3085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3085_call = mutated_mod.get_global_var('func_3085')
call_3086 = func_3085_call()
output = call_3086
func_3087 = relay.Function([], output)
mutated_mod['func_3087'] = func_3087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1068_call = mod.get_global_var('func_1068')
func_1069_call = mutated_mod.get_global_var('func_1069')
call_3107 = relay.TupleGetItem(func_1068_call(), 0)
call_3108 = relay.TupleGetItem(func_1069_call(), 0)
func_2888_call = mod.get_global_var('func_2888')
func_2890_call = mutated_mod.get_global_var('func_2890')
call_3119 = relay.TupleGetItem(func_2888_call(), 0)
call_3120 = relay.TupleGetItem(func_2890_call(), 0)
output = relay.Tuple([call_3107,call_3119,])
output2 = relay.Tuple([call_3108,call_3120,])
func_3121 = relay.Function([], output)
mod['func_3121'] = func_3121
mod = relay.transform.InferType()(mod)
output = func_3121()
func_3122 = relay.Function([], output)
mutated_mod['func_3122'] = func_3122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3129 = relay.var("var_3129", dtype = "float32", shape = (16, 3, 2))#candidate|3129|(16, 3, 2)|var|float32
uop_3130 = relay.sinh(var_3129.astype('float32')) # shape=(16, 3, 2)
func_1432_call = mod.get_global_var('func_1432')
func_1433_call = mutated_mod.get_global_var('func_1433')
call_3134 = relay.TupleGetItem(func_1432_call(), 1)
call_3135 = relay.TupleGetItem(func_1433_call(), 1)
uop_3144 = relay.atan(uop_3130.astype('float32')) # shape=(16, 3, 2)
output = relay.Tuple([call_3134,uop_3144,])
output2 = relay.Tuple([call_3135,uop_3144,])
func_3152 = relay.Function([var_3129,], output)
mod['func_3152'] = func_3152
mod = relay.transform.InferType()(mod)
mutated_mod['func_3152'] = func_3152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3153 = relay.var("var_3153", dtype = "float32", shape = (16, 3, 2))#candidate|3153|(16, 3, 2)|var|float32
func_3152_call = mutated_mod.get_global_var('func_3152')
call_3154 = func_3152_call(var_3153)
output = call_3154
func_3155 = relay.Function([var_3153], output)
mutated_mod['func_3155'] = func_3155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_699_call = mod.get_global_var('func_699')
func_701_call = mutated_mod.get_global_var('func_701')
call_3232 = relay.TupleGetItem(func_699_call(), 0)
call_3233 = relay.TupleGetItem(func_701_call(), 0)
uop_3270 = relay.atan(call_3232.astype('float32')) # shape=(16, 8, 8)
uop_3272 = relay.atan(call_3233.astype('float32')) # shape=(16, 8, 8)
uop_3275 = relay.sqrt(call_3232.astype('float64')) # shape=(16, 8, 8)
uop_3277 = relay.sqrt(call_3233.astype('float64')) # shape=(16, 8, 8)
output = relay.Tuple([uop_3270,uop_3275,])
output2 = relay.Tuple([uop_3272,uop_3277,])
func_3287 = relay.Function([], output)
mod['func_3287'] = func_3287
mod = relay.transform.InferType()(mod)
mutated_mod['func_3287'] = func_3287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3287_call = mutated_mod.get_global_var('func_3287')
call_3288 = func_3287_call()
output = call_3288
func_3289 = relay.Function([], output)
mutated_mod['func_3289'] = func_3289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2493_call = mod.get_global_var('func_2493')
func_2494_call = mutated_mod.get_global_var('func_2494')
call_3322 = func_2493_call()
call_3323 = func_2493_call()
func_3287_call = mod.get_global_var('func_3287')
func_3289_call = mutated_mod.get_global_var('func_3289')
call_3334 = relay.TupleGetItem(func_3287_call(), 1)
call_3335 = relay.TupleGetItem(func_3289_call(), 1)
output = relay.Tuple([call_3322,call_3334,])
output2 = relay.Tuple([call_3323,call_3335,])
func_3338 = relay.Function([], output)
mod['func_3338'] = func_3338
mod = relay.transform.InferType()(mod)
mutated_mod['func_3338'] = func_3338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3338_call = mutated_mod.get_global_var('func_3338')
call_3339 = func_3338_call()
output = call_3339
func_3340 = relay.Function([], output)
mutated_mod['func_3340'] = func_3340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3384 = relay.var("var_3384", dtype = "float64", shape = (5, 10, 16))#candidate|3384|(5, 10, 16)|var|float64
var_3385 = relay.var("var_3385", dtype = "float64", shape = (5, 10, 16))#candidate|3385|(5, 10, 16)|var|float64
bop_3386 = relay.mod(var_3384.astype('float64'), relay.reshape(var_3385.astype('float64'), relay.shape_of(var_3384))) # shape=(5, 10, 16)
uop_3395 = relay.asinh(bop_3386.astype('float32')) # shape=(5, 10, 16)
output = relay.Tuple([uop_3395,])
output2 = relay.Tuple([uop_3395,])
func_3397 = relay.Function([var_3384,var_3385,], output)
mod['func_3397'] = func_3397
mod = relay.transform.InferType()(mod)
mutated_mod['func_3397'] = func_3397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3397_call = mutated_mod.get_global_var('func_3397')
var_3399 = relay.var("var_3399", dtype = "float64", shape = (5, 10, 16))#candidate|3399|(5, 10, 16)|var|float64
var_3400 = relay.var("var_3400", dtype = "float64", shape = (5, 10, 16))#candidate|3400|(5, 10, 16)|var|float64
call_3398 = func_3397_call(var_3399,var_3400,)
output = call_3398
func_3401 = relay.Function([var_3399,var_3400,], output)
mutated_mod['func_3401'] = func_3401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3406 = relay.var("var_3406", dtype = "float32", shape = (9, 5, 13))#candidate|3406|(9, 5, 13)|var|float32
uop_3407 = relay.rsqrt(var_3406.astype('float32')) # shape=(9, 5, 13)
bop_3424 = relay.floor_mod(uop_3407.astype('float32'), relay.reshape(var_3406.astype('float32'), relay.shape_of(uop_3407))) # shape=(9, 5, 13)
output = bop_3424
output2 = bop_3424
func_3427 = relay.Function([var_3406,], output)
mod['func_3427'] = func_3427
mod = relay.transform.InferType()(mod)
mutated_mod['func_3427'] = func_3427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3428 = relay.var("var_3428", dtype = "float32", shape = (9, 5, 13))#candidate|3428|(9, 5, 13)|var|float32
func_3427_call = mutated_mod.get_global_var('func_3427')
call_3429 = func_3427_call(var_3428)
output = call_3429
func_3430 = relay.Function([var_3428], output)
mutated_mod['func_3430'] = func_3430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3287_call = mod.get_global_var('func_3287')
func_3289_call = mutated_mod.get_global_var('func_3289')
call_3448 = relay.TupleGetItem(func_3287_call(), 0)
call_3449 = relay.TupleGetItem(func_3289_call(), 0)
output = call_3448
output2 = call_3449
func_3450 = relay.Function([], output)
mod['func_3450'] = func_3450
mod = relay.transform.InferType()(mod)
output = func_3450()
func_3451 = relay.Function([], output)
mutated_mod['func_3451'] = func_3451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_3477 = func_2316_call()
call_3478 = func_2316_call()
const_3500 = relay.const([[[1.588766,-2.840639,4.822365,5.004901,-3.723929,5.145043,-5.214563,-4.240960],[3.488704,-2.669957,-9.893290,2.173151,4.847234,7.236848,-0.312051,4.630731],[8.824852,-5.948453,4.383252,-3.885568,-1.797748,3.345936,-5.204626,6.137723],[2.363548,1.204298,9.026491,4.942533,-0.774544,9.619688,9.676425,-0.604349],[0.485057,4.005383,-1.859222,-4.298830,-7.753366,3.865638,-2.771287,-4.118810],[-1.912594,7.515523,-9.961959,7.581981,6.822990,0.391606,9.304709,2.592063],[4.377142,5.167420,8.075691,-9.618930,-8.686837,-4.566004,1.897321,-0.206672],[-2.314980,8.407812,-0.114389,7.403784,6.215586,5.686213,-4.550358,5.676718]],[[3.418259,-7.492033,4.557166,-8.098448,-2.227047,-1.853502,-2.944132,-4.749382],[-0.866013,9.453570,-2.797663,8.216086,-0.984500,-3.400772,7.699574,-5.908484],[3.000461,1.214342,9.173186,-1.684317,-6.382515,2.709563,6.211129,-3.293458],[8.220081,8.927561,-9.739676,-3.954805,2.194386,-8.345834,-7.221709,3.753846],[4.497931,-3.357902,0.777678,-2.805349,6.056691,-0.578421,7.935264,5.685520],[-3.867534,-2.387745,4.667179,5.042165,-5.881009,3.845852,-9.623992,-7.792454],[-4.275339,3.348523,8.659251,5.927432,0.600835,3.767485,-3.486490,-7.040450],[3.549798,-9.052224,1.928507,0.277579,5.585176,-2.957145,-5.020008,9.887658]],[[-9.914945,-9.956779,-1.728663,-4.041021,8.324362,9.797125,-5.084974,-1.533405],[-3.490190,-2.402334,8.281964,4.175990,8.143084,-6.278455,-6.300167,-2.571336],[-5.449369,-8.673095,-3.094029,8.370657,6.205759,-9.190869,-3.880982,1.551841],[0.142376,-0.253752,-7.451413,0.598626,7.593995,9.441922,4.062085,-4.166570],[-7.311905,-5.977488,-9.700409,-2.139118,-8.946579,9.204068,0.758823,-0.942706],[5.001202,4.068733,-2.067057,0.215040,5.267194,-2.289296,-4.055342,-3.925477],[6.938278,7.489079,-3.490943,4.327338,-5.042566,2.834875,-6.383675,-1.906133],[-4.585772,9.259310,-9.423015,5.621969,8.379702,-0.942511,-9.315987,-0.285387]],[[-4.975196,4.500119,0.051960,9.741474,-8.404382,5.114132,-9.080803,-9.002848],[-8.650754,-3.896434,-8.085467,-1.267686,3.062108,8.128882,1.227185,9.316681],[2.186586,5.894287,-4.156292,3.356523,1.660320,4.233353,-5.145283,0.375261],[1.082019,-0.083522,5.939939,6.766725,5.392788,-6.471490,-9.125225,-9.210010],[2.037219,-8.766007,2.650777,-4.010300,-1.398360,-3.492665,2.412402,2.844487],[4.869133,-8.268734,-5.987299,2.692067,-8.197506,9.075749,-6.564563,-5.682385],[0.202406,2.687658,-0.812865,4.267170,0.837829,-3.659553,1.904027,0.593018],[8.335056,4.080003,3.310758,8.987644,0.193683,-1.857816,0.142652,9.914299]],[[8.377436,7.021205,-9.687147,-5.316372,-1.020198,-3.902112,1.237768,1.130540],[8.419911,-9.498736,3.585922,-0.032279,-9.680244,-7.793402,5.532964,-2.273715],[-2.994695,1.350129,6.330787,-9.018335,-6.603017,0.057680,-6.399488,-8.729490],[-5.211922,-0.883463,-5.491030,-2.850078,2.774788,-6.027920,-3.919338,7.846963],[-6.009991,6.392827,6.264465,-6.970054,-0.302067,5.008834,-1.305680,-1.034120],[-2.952079,-6.986914,7.880475,-0.670977,-7.828010,4.825020,0.242825,6.946845],[6.493182,9.348754,4.514130,-5.249512,-5.368375,-7.167074,7.258868,2.556813],[-5.613004,1.660393,-9.157047,-8.466457,-6.385664,4.639135,0.786982,-9.682072]],[[2.123245,0.103357,6.727291,-4.545439,1.079045,-8.945779,6.750980,-8.736489],[9.163887,3.370875,7.202259,-4.296961,9.968238,-8.796164,9.788094,-3.007423],[-2.126907,2.053435,3.315680,1.409573,-2.122958,-1.681756,5.168401,1.635345],[-4.887300,-0.815120,9.810675,1.149592,-2.862006,0.983554,-1.542645,-5.870119],[1.502297,-7.297305,0.681776,2.941651,8.980731,3.669779,-0.792291,-4.953537],[3.349921,7.551666,6.227454,-2.974358,-6.143498,4.288624,2.546288,2.881128],[1.404252,0.056454,-3.147475,2.866176,-0.715804,-4.144709,4.484779,5.002829],[-4.812635,0.738279,-6.120443,5.287429,3.111643,3.369479,7.064497,3.633885]],[[5.860239,7.502426,1.806379,9.812084,-3.899745,0.819985,-4.893811,-1.577686],[2.957627,6.259470,9.447609,-8.990822,7.015174,9.096219,-8.683113,-1.469373],[-1.708018,5.273014,-9.631492,2.115243,8.964411,-3.600078,-0.459999,-4.310241],[5.785263,9.399881,-3.308650,6.384134,1.017605,-0.710846,-5.362304,3.642019],[7.161378,-3.459918,-5.464448,-7.021467,-5.206827,9.430435,6.050135,-8.301680],[4.361114,-2.604988,0.786512,-2.187519,-3.866019,6.809939,1.123655,0.318086],[5.753658,-1.767225,-8.454265,6.647407,1.204256,0.064122,-5.414561,3.522472],[1.394190,-6.599263,-1.454512,5.005276,7.493902,6.338219,-4.458558,0.335382]],[[-3.597892,0.712064,-1.532173,-2.248455,4.586037,5.189115,5.157321,-5.636389],[-8.039218,-9.703779,4.326704,3.533130,-3.164917,9.632554,-3.479828,-8.595090],[-7.987914,8.449214,4.993558,-3.278757,8.578094,-2.689323,3.818881,8.840721],[6.633158,-6.648690,6.523743,-4.702301,-8.897048,-7.513512,-7.641533,8.451678],[-3.917410,-5.338500,-3.159521,3.945508,-8.824634,4.592917,-5.774601,2.902711],[-9.043078,-3.635967,2.718492,2.632067,-5.950031,-8.956987,-8.781835,2.377528],[-5.521940,-1.246082,-2.550301,-3.326806,-8.334941,-6.961089,-6.917505,-9.053429],[1.914514,3.998728,4.516325,-5.964604,-3.672465,5.262640,8.321526,-5.457056]],[[-6.359848,-4.662059,-1.298463,6.181419,-2.069461,1.374770,4.024246,0.566042],[-7.221233,9.198799,7.119788,0.802676,6.511263,5.232326,5.117604,-9.154636],[-8.456943,-4.352373,-4.197243,4.519003,-8.168048,7.996859,4.490643,-2.508287],[7.063787,6.709977,-7.535148,8.386275,8.504817,-1.269044,-7.561110,-5.282934],[6.899601,1.556937,-6.481779,5.611770,3.529066,-4.976914,0.237735,-0.240062],[1.578516,-8.690089,-4.093641,3.754307,-4.611687,-7.933961,-0.308542,3.901226],[6.962381,3.744374,-0.291847,-4.282104,-0.946981,-6.709442,-7.988770,-3.076627],[-1.590986,4.195204,-6.738607,1.417109,-0.846873,8.173963,-7.266796,-8.280744]],[[1.105060,-1.754307,-8.557872,8.767211,6.090187,8.744562,-1.410300,0.315722],[-9.234677,4.027307,7.335197,0.923352,-5.958697,3.649035,7.947659,6.338084],[1.212620,-4.273203,-2.524048,-7.273805,6.474882,0.321974,-1.571243,9.054331],[9.421338,2.519994,0.866501,-0.934617,-8.253221,-2.428291,-2.430931,-9.422929],[1.227598,6.523264,3.416665,-8.496034,6.051857,-7.169078,-9.551341,-1.387598],[8.144690,9.117621,-0.988211,-4.117141,4.962097,2.847418,-4.656523,9.938594],[-1.523424,-3.187045,1.271695,2.959814,-2.680939,-7.034042,8.609535,0.949389],[-2.031024,7.956873,-5.618533,3.580323,-7.293362,7.031618,9.971655,5.586192]],[[-3.804117,4.788225,-6.794445,-9.943602,-3.480113,7.558983,-4.276865,-4.532177],[8.663154,2.436613,-7.804448,3.187028,0.234354,9.582936,-3.460606,2.192949],[-7.959979,-1.733402,7.677409,-1.229276,2.961010,1.695498,-3.046952,-4.822390],[6.933253,1.599083,1.193587,-3.393952,-2.955322,6.138740,-0.676443,8.608325],[8.829887,4.909170,-8.060614,-8.596429,-2.158409,4.989536,-4.057229,-4.736891],[-2.628262,1.287490,6.082647,-4.298937,3.608171,-0.206852,-0.953166,9.566462],[6.799512,-1.267245,-0.634067,0.358355,-1.411608,9.661874,-6.054111,-4.001706],[8.489379,-2.932459,-1.097932,-8.649093,-1.126875,1.375452,-5.180469,-9.812435]],[[-5.921586,-0.410574,-1.255207,8.249176,-9.184439,9.878098,-3.780185,8.484517],[7.231997,-0.465805,8.867846,7.747927,2.848217,-4.067547,0.240763,8.143722],[-7.130559,-7.088487,0.081266,8.550974,-5.441272,1.636746,1.555031,1.888341],[-3.877058,-5.032432,-4.382184,-1.524712,-0.348930,-6.285229,9.108769,2.304073],[7.246946,-6.830161,4.041134,-0.978682,-9.773415,9.935036,2.838201,-2.543898],[-4.974265,5.238943,1.691655,6.856895,-7.719159,5.112414,2.923321,3.140527],[7.543980,-9.164114,-5.832984,-6.027078,-9.285941,-5.635875,-4.013505,2.967258],[4.139879,-4.704648,-2.281854,-5.570878,5.951236,0.377465,9.069508,9.902920]],[[-1.299267,5.258375,-9.827294,-8.527882,7.703602,-9.415774,1.705716,1.147242],[-6.182532,1.628508,1.023314,-8.808254,-0.608498,3.032675,-6.638321,-8.237744],[-5.705975,2.329202,1.540672,9.258987,-0.119034,4.697509,-6.980678,-2.568224],[-6.912637,0.979958,-8.841270,-5.712625,1.104709,-9.110060,-3.708750,4.009426],[-7.988615,7.333152,-2.788252,9.854626,8.320786,-3.403914,7.494072,-9.715879],[0.232390,8.032875,9.802112,-0.256372,7.294579,6.923805,1.545156,7.610063],[1.046878,8.114790,2.349519,3.663361,3.208586,-0.649589,-1.153696,-9.680660],[8.597721,8.450479,7.801316,4.242770,-0.210051,-9.702176,7.488236,-6.062860]],[[4.253458,-0.118708,-8.830639,2.680854,-3.554708,-0.148914,-8.356755,-6.015545],[-2.433345,8.171544,4.059068,-9.460693,6.970752,4.271568,-5.845600,9.430327],[7.525003,2.378334,8.158730,-6.774918,-1.293380,4.653258,3.804871,-0.754362],[6.201350,-7.617903,9.034118,3.072270,6.874833,9.674720,-2.777086,9.499600],[8.568213,5.788575,1.458764,-4.718069,-1.090650,7.831583,4.677198,5.791480],[8.019432,6.118747,-7.492955,2.145197,5.561775,-6.441377,7.872651,2.746058],[-2.200616,-9.498181,-3.256545,2.779115,-4.329420,8.902642,0.006290,-8.704597],[-9.719142,2.128754,-4.838161,-8.796803,9.583983,9.180367,9.310839,1.575882]],[[9.380481,8.458691,-9.249742,-9.467955,1.371547,-6.978348,-6.030096,3.335849],[-9.974609,-0.230821,4.086218,-1.062638,1.937508,-0.619842,7.213162,-8.530711],[5.054617,-2.652351,-5.603787,-3.696804,-6.921942,-0.273714,8.907898,1.051105],[-9.430092,8.578876,5.429666,5.840595,2.886936,8.017195,5.117731,-5.373309],[3.629348,5.417926,5.593020,-3.495373,-2.430637,8.637015,-7.294572,-1.671139],[-8.359913,4.028766,4.846599,-9.233934,-4.338741,7.015356,0.049585,-2.003184],[7.079574,-0.455707,4.573284,-9.593409,-7.871465,6.084017,1.502155,8.322714],[2.586338,5.618851,7.163067,-8.215386,3.954083,-5.412407,2.229747,5.440622]],[[-4.671579,9.327778,-6.739906,3.104660,8.639949,-0.759809,-4.583791,-8.938308],[-5.154502,1.131106,6.126503,7.170971,1.310981,2.396716,-6.923814,0.413577],[9.459891,-9.315701,6.185879,-2.251249,-1.787598,6.970580,-9.382610,2.569398],[5.036486,4.798334,-9.463745,3.150318,-8.848083,-3.261764,0.318567,0.155170],[-1.193587,6.808296,9.281432,9.908471,-1.935008,5.070306,-7.582488,5.514860],[8.945464,8.827925,9.403576,4.943489,6.399683,-5.755461,-9.712067,5.928050],[8.154132,-8.610822,-5.767465,-2.861379,-9.437300,-1.534785,-1.582150,-4.654326],[-6.636887,9.833225,-7.728293,5.502852,-4.219986,-6.763174,6.930708,-1.717679]]], dtype = "float64")#candidate|3500|(16, 8, 8)|const|float64
bop_3501 = relay.logical_or(call_3477.astype('bool'), relay.reshape(const_3500.astype('bool'), relay.shape_of(call_3477))) # shape=(16, 8, 8)
bop_3504 = relay.logical_or(call_3478.astype('bool'), relay.reshape(const_3500.astype('bool'), relay.shape_of(call_3478))) # shape=(16, 8, 8)
func_2152_call = mod.get_global_var('func_2152')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_3519 = relay.TupleGetItem(func_2152_call(), 4)
call_3520 = relay.TupleGetItem(func_2154_call(), 4)
output = relay.Tuple([bop_3501,call_3519,])
output2 = relay.Tuple([bop_3504,call_3520,])
func_3538 = relay.Function([], output)
mod['func_3538'] = func_3538
mod = relay.transform.InferType()(mod)
output = func_3538()
func_3539 = relay.Function([], output)
mutated_mod['func_3539'] = func_3539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mod.get_global_var('func_3538')
func_3539_call = mutated_mod.get_global_var('func_3539')
call_3560 = relay.TupleGetItem(func_3538_call(), 1)
call_3561 = relay.TupleGetItem(func_3539_call(), 1)
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_3578 = func_2452_call()
call_3579 = func_2452_call()
func_2929_call = mod.get_global_var('func_2929')
func_2934_call = mutated_mod.get_global_var('func_2934')
var_3583 = relay.var("var_3583", dtype = "float32", shape = (429,))#candidate|3583|(429,)|var|float32
call_3582 = relay.TupleGetItem(func_2929_call(relay.reshape(var_3583.astype('float32'), [3, 11, 13]), relay.reshape(var_3583.astype('float32'), [3, 11, 13]), relay.reshape(call_3578.astype('bool'), [16, 8, 8]), ), 2)
call_3584 = relay.TupleGetItem(func_2934_call(relay.reshape(var_3583.astype('float32'), [3, 11, 13]), relay.reshape(var_3583.astype('float32'), [3, 11, 13]), relay.reshape(call_3578.astype('bool'), [16, 8, 8]), ), 2)
uop_3586 = relay.exp(var_3583.astype('float32')) # shape=(429,)
output = relay.Tuple([call_3560,call_3578,call_3582,uop_3586,])
output2 = relay.Tuple([call_3561,call_3579,call_3584,uop_3586,])
func_3589 = relay.Function([var_3583,], output)
mod['func_3589'] = func_3589
mod = relay.transform.InferType()(mod)
mutated_mod['func_3589'] = func_3589
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3590 = relay.var("var_3590", dtype = "float32", shape = (429,))#candidate|3590|(429,)|var|float32
func_3589_call = mutated_mod.get_global_var('func_3589')
call_3591 = func_3589_call(var_3590)
output = call_3591
func_3592 = relay.Function([var_3590], output)
mutated_mod['func_3592'] = func_3592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3596 = relay.var("var_3596", dtype = "float64", shape = (3, 8, 10))#candidate|3596|(3, 8, 10)|var|float64
uop_3597 = relay.sinh(var_3596.astype('float64')) # shape=(3, 8, 10)
func_3427_call = mod.get_global_var('func_3427')
func_3430_call = mutated_mod.get_global_var('func_3430')
const_3604 = relay.const([-6.187336,0.462698,-6.554244,-3.717516,-5.644623,4.398900,3.528872,-6.108743,-8.069920,1.549407,-9.303327,1.532263,2.009239,-3.262342,-9.049961,-5.499915,-1.539181,-6.965470,0.738747,-2.860592,-8.417689,-8.437996,5.390762,5.128786,0.834431,-3.307081,-8.551809,0.183798,-8.988445,-2.370285,1.293834,7.264520,-9.697862,5.736047,-4.425038,-4.942797,5.381192,-9.859058,8.334897,-3.316715,5.574903,-3.805749,-3.953452,5.458805,0.982718,-4.322803,-5.957859,-0.019609,2.430613,-6.636375,-6.007612,6.845295,8.409782,-8.607873,4.175763,-7.111391,-3.922428,-5.719238,-6.512702,9.537759,9.906279,5.765229,-9.490038,4.508101,2.035559,4.601688,-8.462129,0.545493,8.873865,-0.489527,-4.970530,1.150651,9.416282,-0.835840,0.221750,-3.277680,6.305393,1.774151,4.248331,9.448314,-0.731937,-5.877612,4.226111,9.613279,-6.752657,-6.082574,-5.324412,7.889394,1.160301,8.508582,8.405251,-0.175904,4.863241,-1.611878,-0.049978,1.834157,6.838621,2.248128,9.941002,0.740952,-9.754148,6.530809,5.032088,-8.804563,-9.959534,9.926090,8.189217,-7.380596,8.147374,-9.710174,-9.099835,1.486502,1.088019,9.940931,4.412750,-6.701091,-3.672247,-9.263155,-5.749825,-7.911817,-8.118384,1.293647,8.395382,5.269450,-2.083088,-5.879223,0.490728,-0.283214,-6.612860,-6.427761,-9.548016,9.749607,-1.436932,-7.356505,5.499251,7.779950,7.946572,1.525136,-9.590002,6.380422,-4.529790,1.800007,6.010574,3.295301,2.112218,5.740879,-5.483133,-1.533581,-3.189792,-3.798014,-8.923466,-5.653550,-4.348164,-0.549348,-4.943720,4.212635,-9.780646,-2.095962,9.277247,0.474781,8.119823,-8.585242,-0.528958,-8.268232,-9.501893,-8.117469,-4.610838,-2.275732,-3.472876,8.174713,-1.506054,-9.548911,-6.266235,1.308888,-5.320281,-5.036733,2.844732,4.484963,-3.894862,0.371696,-7.255331,8.675738,-6.285237,2.542477,-9.244609,9.178589,-6.255272,0.659365,-0.582558,-4.214763,-4.154034,4.097324,3.358902,7.247958,-2.302110,-8.757184,-6.372058,-9.267083,9.219225,3.157602,-7.559527,2.564841,-9.755400,0.126146,2.778487,1.935301,0.879053,9.792491,-0.336891,-5.460195,6.993081,2.578287,-8.458947,-1.956826,-0.249431,6.122019,-0.583483,7.082626,-3.213500,-7.928515,-9.348599,3.376677,-8.902379,-0.030144,1.026258,0.149170,-2.977168,-5.093652,-9.948728,-3.942886,-7.032847,-3.062724,-7.405865,-9.117053,-3.185598,-0.151594,-4.106262,-7.164084,5.112904,1.474803,8.038708,4.717886,-8.045274,-1.027884,7.206857,7.976684,8.911512,-2.999260,2.938494,-6.704437,9.161700,-9.964501,-2.570247,-7.675532,1.425526,-9.936503,2.413030,-0.042794,8.979470,-2.239362,-9.367304,-7.047794,7.371630,7.969844,1.060254,6.716264,2.578926,5.793523,-3.626949,7.612414,6.678009,3.189267,1.519727,-1.679603,-8.931459,1.934640,-3.516083,-0.934881,3.460583,-9.230322,2.874386,7.553774,8.077953,-6.547631,1.170834,-2.224952,9.414208,7.141670,4.641299,0.549702,-1.981882,-3.432249,3.397358,9.889999,9.100662,3.515996,1.419075,1.467888,7.274405,-2.272910,6.003047,-9.934432,-0.687477,8.490234,3.768754,-8.833270,-4.908315,0.962251,0.597548,-4.000357,-1.902234,-5.578802,-7.557685,7.191859,8.948042,-6.978213,-6.648892,-9.014484,-6.399435,-4.054042,-7.967193,-4.895769,-5.523320,-9.958403,-0.884218,-5.197112,0.887296,-5.513679,-7.008955,7.161358,8.939802,-9.535812,-2.436734,5.055055,-7.581440,0.026192,-2.123559,3.846641,1.894625,-5.351924,-8.668146,-4.240199,7.048355,-5.167311,-0.032962,-9.974063,9.618970,3.611687,4.576567,7.399138,4.782479,-4.286192,-2.010862,-2.977015,-0.341047,8.599123,1.607428,-2.918312,-9.873179,-7.783646,-5.187158,-2.855957,5.978826,-4.669390,-1.114610,-7.458789,-8.853500,6.035014,6.219015,-3.595585,2.456137,-3.856857,8.901533,1.990681,8.055798,9.670078,-2.896377,-0.787957,0.784370,-4.051311,-6.966829,3.970898,-0.259422,8.387209,-8.568810,3.413087,7.598915,-5.127421,-0.620289,-8.577395,1.031316,2.760893,4.940485,8.624203,-2.821028,4.787942,6.188783,8.032162,2.915769,0.318960,-7.087200,4.235859,-1.586173,2.327416,-2.729285,6.822913,3.572282,7.653610,-5.926419,1.789354,7.530053,8.754455,-5.194959,-2.771080,9.425136,6.822059,-5.110217,5.333422,2.070148,6.844717,-0.587123,8.142812,2.010534,-9.522287,-7.564044,7.910057,-4.457796,-9.948954,1.665472,5.343388,-9.540411,8.935420,4.394979,0.196100,2.562040,-8.514371,1.444181,2.508372,4.129139,-9.606158,4.289317,4.974822,-2.554595,-5.839384,-1.206111,-0.971082,1.121146,0.194824,-2.053885,9.170750,0.015363,6.474998,9.708187,2.059628,0.331374,-1.400488,9.180990,-1.896751,1.980306,-4.040563,-6.786020,-1.144339,-4.508026,7.415010,8.197864,-8.928358,-5.795286,4.021993,-3.118725,-9.168423,9.745358,-1.728942,-9.488614,-2.485791,-2.131488,8.332672,-6.026615,-3.954681,8.345274,5.034560,-8.763188,8.449192,-1.379154,-4.251731,-6.751848,-9.188692,-9.790547,-4.738375,9.508923,-6.101866,5.685468,8.214147,-1.557594,-3.093810,3.251631,-0.976374,9.908867,-5.125030,-2.922173,-8.895861,-8.925301,-1.374550,-4.384443,1.141345,-2.723809,6.995190,-9.817089,2.984467,-4.064985,-4.005454,3.801613,7.497229,6.214483,-5.263162,-2.289541,-6.707313,5.063513,4.229966,6.140996,-4.515710,2.522292,-4.881379,-2.058421,-0.835832,1.760089,-9.009896,0.300391,-1.308409,7.993081,-1.559291,6.856837,-8.963413,-4.089034,-8.497390,1.019734,7.607771,-9.070014,-0.502571,7.437505,4.040163,2.026497,6.505862,2.247903,6.543516,6.745504,5.952601,-1.284850,5.483816,8.938402,7.178994,-1.307494,3.969353,-5.816473,6.265901,-2.898817,-4.948489,-0.908358,-2.779267,9.189849,1.537075,-6.012967,-0.551088,-5.534727,5.878082,2.465738,-6.980228,9.896147,8.296454,8.735447,3.229733,5.197025,-0.336745,1.832407,-6.979212,-9.579162,2.922912,-4.879331,-6.963603,-9.639665,-2.747579,-6.114728,6.366465,0.907037,6.874664,-5.745690], dtype = "float32")#candidate|3604|(585,)|const|float32
call_3603 = func_3427_call(relay.reshape(const_3604.astype('float32'), [9, 5, 13]))
call_3605 = func_3427_call(relay.reshape(const_3604.astype('float32'), [9, 5, 13]))
output = relay.Tuple([uop_3597,call_3603,const_3604,])
output2 = relay.Tuple([uop_3597,call_3605,const_3604,])
func_3606 = relay.Function([var_3596,], output)
mod['func_3606'] = func_3606
mod = relay.transform.InferType()(mod)
var_3607 = relay.var("var_3607", dtype = "float64", shape = (3, 8, 10))#candidate|3607|(3, 8, 10)|var|float64
output = func_3606(var_3607)
func_3608 = relay.Function([var_3607], output)
mutated_mod['func_3608'] = func_3608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2338_call = mod.get_global_var('func_2338')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_3610 = relay.TupleGetItem(func_2338_call(), 0)
call_3611 = relay.TupleGetItem(func_2339_call(), 0)
output = call_3610
output2 = call_3611
func_3629 = relay.Function([], output)
mod['func_3629'] = func_3629
mod = relay.transform.InferType()(mod)
output = func_3629()
func_3630 = relay.Function([], output)
mutated_mod['func_3630'] = func_3630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1245_call = mod.get_global_var('func_1245')
func_1246_call = mutated_mod.get_global_var('func_1246')
call_3639 = relay.TupleGetItem(func_1245_call(), 0)
call_3640 = relay.TupleGetItem(func_1246_call(), 0)
func_2293_call = mod.get_global_var('func_2293')
func_2295_call = mutated_mod.get_global_var('func_2295')
call_3655 = relay.TupleGetItem(func_2293_call(), 0)
call_3656 = relay.TupleGetItem(func_2295_call(), 0)
output = relay.Tuple([call_3639,call_3655,])
output2 = relay.Tuple([call_3640,call_3656,])
func_3658 = relay.Function([], output)
mod['func_3658'] = func_3658
mod = relay.transform.InferType()(mod)
output = func_3658()
func_3659 = relay.Function([], output)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3038_call = mod.get_global_var('func_3038')
func_3040_call = mutated_mod.get_global_var('func_3040')
call_3699 = relay.TupleGetItem(func_3038_call(), 0)
call_3700 = relay.TupleGetItem(func_3040_call(), 0)
func_3085_call = mod.get_global_var('func_3085')
func_3087_call = mutated_mod.get_global_var('func_3087')
call_3702 = func_3085_call()
call_3703 = func_3085_call()
func_1230_call = mod.get_global_var('func_1230')
func_1233_call = mutated_mod.get_global_var('func_1233')
call_3710 = relay.TupleGetItem(func_1230_call(relay.reshape(call_3702.astype('uint16'), [16, 8, 8])), 1)
call_3711 = relay.TupleGetItem(func_1233_call(relay.reshape(call_3702.astype('uint16'), [16, 8, 8])), 1)
bop_3712 = relay.bitwise_xor(call_3699.astype('uint32'), relay.reshape(call_3710.astype('uint32'), relay.shape_of(call_3699))) # shape=(16, 8, 8)
bop_3715 = relay.bitwise_xor(call_3700.astype('uint32'), relay.reshape(call_3711.astype('uint32'), relay.shape_of(call_3700))) # shape=(16, 8, 8)
output = relay.Tuple([call_3702,bop_3712,])
output2 = relay.Tuple([call_3703,bop_3715,])
func_3751 = relay.Function([], output)
mod['func_3751'] = func_3751
mod = relay.transform.InferType()(mod)
output = func_3751()
func_3752 = relay.Function([], output)
mutated_mod['func_3752'] = func_3752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mod.get_global_var('func_3538')
func_3539_call = mutated_mod.get_global_var('func_3539')
call_3787 = relay.TupleGetItem(func_3538_call(), 0)
call_3788 = relay.TupleGetItem(func_3539_call(), 0)
output = relay.Tuple([call_3787,])
output2 = relay.Tuple([call_3788,])
func_3797 = relay.Function([], output)
mod['func_3797'] = func_3797
mod = relay.transform.InferType()(mod)
mutated_mod['func_3797'] = func_3797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3797_call = mutated_mod.get_global_var('func_3797')
call_3798 = func_3797_call()
output = call_3798
func_3799 = relay.Function([], output)
mutated_mod['func_3799'] = func_3799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1256_call = mod.get_global_var('func_1256')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_3807 = func_1256_call()
call_3808 = func_1256_call()
output = relay.Tuple([call_3807,])
output2 = relay.Tuple([call_3808,])
func_3813 = relay.Function([], output)
mod['func_3813'] = func_3813
mod = relay.transform.InferType()(mod)
output = func_3813()
func_3814 = relay.Function([], output)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1465_call = mod.get_global_var('func_1465')
func_1467_call = mutated_mod.get_global_var('func_1467')
call_4004 = relay.TupleGetItem(func_1465_call(), 0)
call_4005 = relay.TupleGetItem(func_1467_call(), 0)
output = call_4004
output2 = call_4005
func_4006 = relay.Function([], output)
mod['func_4006'] = func_4006
mod = relay.transform.InferType()(mod)
mutated_mod['func_4006'] = func_4006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4006_call = mutated_mod.get_global_var('func_4006')
call_4007 = func_4006_call()
output = call_4007
func_4008 = relay.Function([], output)
mutated_mod['func_4008'] = func_4008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3813_call = mod.get_global_var('func_3813')
func_3814_call = mutated_mod.get_global_var('func_3814')
call_4033 = relay.TupleGetItem(func_3813_call(), 0)
call_4034 = relay.TupleGetItem(func_3814_call(), 0)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_4036 = relay.TupleGetItem(func_3658_call(), 1)
call_4037 = relay.TupleGetItem(func_3659_call(), 1)
output = relay.Tuple([call_4033,call_4036,])
output2 = relay.Tuple([call_4034,call_4037,])
func_4038 = relay.Function([], output)
mod['func_4038'] = func_4038
mod = relay.transform.InferType()(mod)
mutated_mod['func_4038'] = func_4038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4038_call = mutated_mod.get_global_var('func_4038')
call_4039 = func_4038_call()
output = call_4039
func_4040 = relay.Function([], output)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_4060 = func_2452_call()
call_4061 = func_2452_call()
output = call_4060
output2 = call_4061
func_4071 = relay.Function([], output)
mod['func_4071'] = func_4071
mod = relay.transform.InferType()(mod)
mutated_mod['func_4071'] = func_4071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4071_call = mutated_mod.get_global_var('func_4071')
call_4072 = func_4071_call()
output = call_4072
func_4073 = relay.Function([], output)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1611_call = mod.get_global_var('func_1611')
func_1612_call = mutated_mod.get_global_var('func_1612')
call_4145 = func_1611_call()
call_4146 = func_1611_call()
func_3152_call = mod.get_global_var('func_3152')
func_3155_call = mutated_mod.get_global_var('func_3155')
const_4175 = relay.const([1.994149,4.885768,-9.038167,-2.176960,-4.057299,8.645332,-1.414817,-7.205999,4.781611,-9.542730,-9.767708,4.649168,6.540389,-6.019856,-8.788019,-8.129662,7.921125,1.777855,-2.593339,6.851677,6.839289,2.446466,-7.878937,-6.250019,9.134190,8.044368,-9.777967,4.048648,-4.090305,5.076115,8.879041,-4.030599,0.687497,-7.917930,2.604112,-9.863092,7.769126,-7.238414,-7.085697,6.986712,-3.322275,4.856983,8.940761,-1.015773,1.901782,-0.246144,-3.277799,6.103039,-9.627787,0.835635,3.018699,3.765800,3.477140,-8.977158,-0.159814,-3.663080,-3.734156,8.418582,-7.796916,2.064180,7.946141,-7.505927,-7.588991,-1.095207,3.591563,4.997989,4.593292,1.849439,-8.940761,-8.215182,9.922622,1.448109,8.753415,3.502867,5.213134,7.233537,0.108029,-3.772449,0.324515,-7.425024,-3.523203,0.024281,-1.740502,6.031382,-1.000296,1.617066,-4.353668,8.426223,-7.380746,5.518241,-9.010249,-2.770898,-9.953523,5.510518,8.752480,-8.117897], dtype = "float32")#candidate|4175|(96,)|const|float32
call_4174 = relay.TupleGetItem(func_3152_call(relay.reshape(const_4175.astype('float32'), [16, 3, 2])), 0)
call_4176 = relay.TupleGetItem(func_3155_call(relay.reshape(const_4175.astype('float32'), [16, 3, 2])), 0)
output = relay.Tuple([call_4145,call_4174,const_4175,])
output2 = relay.Tuple([call_4146,call_4176,const_4175,])
func_4186 = relay.Function([], output)
mod['func_4186'] = func_4186
mod = relay.transform.InferType()(mod)
output = func_4186()
func_4187 = relay.Function([], output)
mutated_mod['func_4187'] = func_4187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3751_call = mod.get_global_var('func_3751')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_4267 = relay.TupleGetItem(func_3751_call(), 0)
call_4268 = relay.TupleGetItem(func_3752_call(), 0)
func_4038_call = mod.get_global_var('func_4038')
func_4040_call = mutated_mod.get_global_var('func_4040')
call_4276 = relay.TupleGetItem(func_4038_call(), 0)
call_4277 = relay.TupleGetItem(func_4040_call(), 0)
output = relay.Tuple([call_4267,call_4276,])
output2 = relay.Tuple([call_4268,call_4277,])
func_4288 = relay.Function([], output)
mod['func_4288'] = func_4288
mod = relay.transform.InferType()(mod)
mutated_mod['func_4288'] = func_4288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4288_call = mutated_mod.get_global_var('func_4288')
call_4289 = func_4288_call()
output = call_4289
func_4290 = relay.Function([], output)
mutated_mod['func_4290'] = func_4290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4309 = relay.var("var_4309", dtype = "float32", shape = (15, 5, 11))#candidate|4309|(15, 5, 11)|var|float32
uop_4310 = relay.sinh(var_4309.astype('float32')) # shape=(15, 5, 11)
func_1230_call = mod.get_global_var('func_1230')
func_1233_call = mutated_mod.get_global_var('func_1233')
const_4313 = relay.const([2,-6,-8,7,-7,6,-1,8,-8,10,-9,-7,5,8,-3,-9,4,9,6,9,3,9,4,3,-4,-7,2,-9,-5,2,-9,-10,-6,-5,5,8,-1,3,4,7,-8,5,6,8,9,7,1,-1,6,-1,-1,-8,-6,6,-6,-10,-7,8,-6,-7,8,-3,3,6,-1,10,-6,2,1,9,-5,4,3,7,8,-4,-8,-5,-2,-10,-10,5,-1,5,9,1,-5,5,-9,-5,4,3,-6,-3,-1,-1,3,4,-5,8,-5,5,8,-7,-2,-1,-2,10,-5,8,8,-7,-5,9,-4,-3,7,-10,-8,9,-1,-8,-9,3,-3,-1,10,4,-1,-5,-9,3,-8,3,9,-8,6,-5,6,8,9,-10,5,6,8,-2,-2,5,7,-6,3,9,1,2,-10,-7,-10,-9,3,-3,-7,-8,-10,-8,2,-3,1,-2,-4,10,-7,-6,-3,1,10,-5,-7,-7,5,-3,-1,-1,8,3,-10,-7,-9,1,8,8,-6,-5,7,1,7,-10,-10,-9,4,10,6,-10,-8,6,3,-4,-10,-1,2,10,3,8,-1,-2,10,1,-9,10,2,-5,-2,3,9,9,-5,3,-9,3,-7,-4,-7,2,6,3,-7,-2,-9,-1,8,-2,-8,-10,5,6,-10,-10,5,-3,3,8,6,9,4,6,1,-4,-4,-8,10,2,4,5,3,10,-5,5,10,-9,-3,6,-4,5,-7,-4,4,-6,-9,10,10,7,2,-9,6,-7,-4,3,5,3,-10,8,-4,-4,5,6,-6,3,6,10,-1,-3,2,-2,-5,-9,-1,-8,-1,-1,-6,4,-1,-2,8,-1,9,-3,-9,7,7,8,3,6,-8,-2,1,8,2,8,-4,-6,-2,-3,3,4,6,-9,-6,6,-9,8,-4,-3,10,6,-10,-6,-3,-3,1,-6,9,-9,-10,1,-3,1,-9,4,8,1,2,2,10,-2,5,9,3,3,3,3,4,3,-10,3,7,-8,3,6,7,6,6,-8,-5,4,-6,4,-3,-3,6,-1,-2,-3,8,10,-7,-7,-2,-4,7,-5,-5,3,7,-10,-4,5,-7,2,-6,-1,1,-8,3,9,9,3,2,1,1,-2,2,2,-6,7,9,6,7,2,-5,-2,-3,-10,8,-6,-5,-6,8,8,-4,-5,-6,2,7,3,-3,6,-9,-2,-10,-10,7,-3,5,8,-10,-10,-5,8,-6,-4,10,-4,-8,8,3,4,5,4,1,-7,6,-5,-10,3,-8,5,-6,-6,3,4,-1,7,-6,-6,-6,7,-10,3,7,-8,-2,2,-1,-4,-10,2,7,-9,-4,-9,8,10,-10,10,8,4,-10,-10,3,-5,2,-6,9,-1,2,1,10,10,6,-9,9,-6,8,-9,-2,5,4,-5,9,-3,-10,5,-8,9,-6,-10,-2,3,4,2,-8,4,-10,-2,8,2,-2,7,-3,-5,5,-1,4,8,9,8,6,-9,2,5,-9,-6,-5,2,-9,4,-4,10,2,8,7,7,9,-10,-9,8,4,-8,9,5,-1,-2,8,5,-2,-9,10,-4,4,-7,-9,-1,-3,1,1,9,-7,-6,-5,-4,3,-7,1,-9,5,10,-3,6,9,7,3,1,9,4,-6,4,-2,-2,2,10,9,9,8,-7,3,7,2,-6,3,6,8,1,-10,-3,-6,8,-2,9,-6,-6,-2,5,-1,6,10,-5,3,8,-1,-6,5,-6,4,-8,-2,7,9,2,2,-4,-2,-1,-7,8,2,-6,-9,6,8,2,-10,7,-3,-7,-7,-5,2,-5,5,-6,9,-5,-6,2,5,-5,-4,-4,1,2,-4,10,3,4,3,6,-6,10,2,-8,-7,1,7,-10,9,-8,-7,9,-6,-1,-5,-10,-7,-2,6,7,-5,7,-6,-10,-7,7,9,-5,1,5,-2,-8,7,10,-2,-7,7,-8,-8,-5,-9,10,-10,-4,-2,8,3,-7,-10,6,-5,-10,6,3,-8,-1,-1,-6,8,4,10,8,-2,6,1,3,-4,6,10,-5,8,-5,9,-3,-3,10,1,-9,-10,-4,-8,7,-9,-3,2,7,-6,-2,8,-5,-10,-4,-3,-3,-7,-6,-3,6,-7,3,9,-3,4,1,9,-3,-10,-2,-10,-8,4,-2,8,-1,9,6,5,2,-5,1,8,4,1,-5,-5,-9,-8,7,9,2,-3,-5,-10,-10,-9,-10,5,8,-2,-8,-7,-7,8,-10,-6,-6,-5,-9,-7,1,-10,-6,6,2,7,6,-6,9,-7,-2,5,3,-8,-4,-9,-2,7,3,-2,-1,6,-4,-8,-8,-6,-9,-10,-9,-3,5,10,-3,7,-10,1,-1,7,-1,10,2,-2,5,1,2,10,8,-7,9,-6,-7,10,-6,-5,4,8,1,6,2,3,5,-1,5,3,6,-5,-8,2,2,3,-3,3,-1,-2,-10,6,8,8,7,-7,5,-5,7,-9,5,6,-10,-1,-9,3,6,7,-7,7,-8,-7,8,-6,-9,3,-6,1,-9,-9,3,-2,-9,3,3,10,-6,-4,8,9,-6,3,-5,-10,-7,7,-8,9,5,5,-3,9,1,8,-5,1,1,-5,-8,-3,1,5,6,-7,7,8,7,1,-3,9,8,-1,-6,7,1,-9,7,-2,-7,5,2,-3,-1,9,5,-1,-10,2,-9,9,9,10,1,1,2,-3,-9,5,3,3,-4,3,-7,1,3], dtype = "uint16")#candidate|4313|(1024,)|const|uint16
call_4312 = relay.TupleGetItem(func_1230_call(relay.reshape(const_4313.astype('uint16'), [16, 8, 8])), 0)
call_4314 = relay.TupleGetItem(func_1233_call(relay.reshape(const_4313.astype('uint16'), [16, 8, 8])), 0)
func_2804_call = mod.get_global_var('func_2804')
func_2805_call = mutated_mod.get_global_var('func_2805')
call_4323 = func_2804_call()
call_4324 = func_2804_call()
uop_4329 = relay.cosh(uop_4310.astype('float32')) # shape=(15, 5, 11)
output = relay.Tuple([call_4312,const_4313,call_4323,uop_4329,])
output2 = relay.Tuple([call_4314,const_4313,call_4324,uop_4329,])
func_4351 = relay.Function([var_4309,], output)
mod['func_4351'] = func_4351
mod = relay.transform.InferType()(mod)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4352 = relay.var("var_4352", dtype = "float32", shape = (15, 5, 11))#candidate|4352|(15, 5, 11)|var|float32
func_4351_call = mutated_mod.get_global_var('func_4351')
call_4353 = func_4351_call(var_4352)
output = call_4353
func_4354 = relay.Function([var_4352], output)
mutated_mod['func_4354'] = func_4354
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4356 = relay.const([[[1.695592,-6.184935,-6.547794,5.058015,6.456064,-8.184960,0.288663,6.097450,-1.070804,5.769813,-9.605074],[-4.073030,-2.433153,-2.805050,-2.895197,9.616394,1.807311,-7.305646,2.834283,-8.393369,5.564779,6.513545],[9.736033,-1.208026,-8.500201,-1.616346,4.014689,5.811156,-3.502343,3.462790,-8.915077,7.147761,-4.394071],[5.821066,0.889847,1.824531,-3.717142,9.338054,5.874524,-1.082448,-8.350753,-3.953607,3.577514,5.422052],[-3.297263,-3.778729,9.518779,-3.984642,6.078811,-8.679735,0.809087,-0.234812,-3.220816,2.107679,2.432067],[1.251267,-8.248959,9.703008,6.624723,-0.013431,0.932768,-5.311983,-0.809849,-2.708245,0.314330,-7.628751],[-3.000135,-0.447774,-4.520718,-8.110319,0.495313,7.575824,-9.856431,9.748278,-6.035333,0.700089,-6.961102],[-7.000495,-1.329754,3.432404,0.970004,-2.474565,-6.888758,-6.095977,1.244530,-4.415468,-9.720891,-4.626560],[-9.490821,1.511734,8.132359,-2.129981,-1.183653,-3.911364,9.296785,-7.053708,4.547697,1.698712,-0.693159],[2.037934,-7.206074,-6.544192,2.851447,3.336685,9.650625,-9.382371,0.616635,-7.039633,-4.071114,-5.590220],[-7.345296,-2.249418,-8.416998,0.492836,-7.384109,-3.446200,-9.225319,3.949055,0.158107,0.426430,1.397782],[-7.175725,-7.466765,1.266266,6.991725,3.002367,-3.460386,-0.968660,8.747477,9.897862,-3.070804,-4.151875],[9.814966,-2.524150,8.062414,0.330511,-9.411632,0.819170,-4.488117,4.366051,0.040520,-8.632046,-8.435663],[-9.153086,-8.950463,9.576415,9.609939,-0.342911,-6.603931,2.120099,-8.501750,-7.781999,-5.879890,-1.352009],[-3.750040,1.430262,-3.983699,-0.915922,-9.081892,-2.423231,-9.264595,0.180174,3.960979,-5.155833,-7.957236]],[[7.709659,-9.377739,2.286583,-9.127426,-8.597989,8.327126,-5.699201,7.366524,5.396432,8.610888,-2.845148],[8.673038,0.981649,0.045174,-7.188421,8.691328,2.254013,-9.141123,5.626084,-2.225624,4.059950,8.023609],[1.706653,-2.334162,-6.149088,-1.412142,-5.615951,-0.926796,-7.812931,9.336201,6.603933,8.292753,2.022996],[-1.429396,-8.714237,-2.396089,-5.075938,7.764603,-7.410231,-2.698677,8.084256,9.550678,6.707150,6.818457],[-4.305331,-8.158949,2.218873,-6.007636,1.281950,5.433788,3.415379,-8.478072,1.280759,2.074553,4.668062],[-9.881402,-7.769969,-1.342702,4.546601,5.246383,3.953021,-2.806321,3.115601,4.275573,6.567731,-1.775638],[-9.211881,-6.557690,-3.145503,3.875068,-4.220640,-8.144761,8.681688,-4.335398,-3.284160,-4.583355,0.456715],[8.046080,1.126662,-3.551760,6.797592,4.936003,3.296467,-2.445715,0.375999,0.667054,9.909660,-0.061259],[0.545279,-2.828988,7.803207,8.299694,8.366811,3.074368,6.995610,6.736132,1.984999,-6.302679,-7.005703],[-9.175163,-1.107254,9.168777,-1.617367,-7.901912,-0.725533,9.644820,-3.902537,2.652946,1.842087,-1.240766],[-9.950452,-7.446969,8.339554,-7.298044,2.775559,7.790736,-6.602578,0.845662,5.064564,-1.225326,-3.802707],[8.425805,-0.254631,-3.277842,4.631616,-3.783667,-4.306205,4.786431,7.165116,-3.381561,2.146898,-8.083604],[-8.855058,-8.967122,-1.390043,-2.691073,-7.238044,5.284459,-3.112683,2.755817,-4.486788,4.596107,-2.739522],[-6.662830,-4.235354,-1.650958,9.416428,6.067592,-1.001753,5.819526,6.500601,-2.438706,5.752227,-6.336451],[1.019772,3.376210,-5.408895,3.020205,-4.466923,-0.850963,-1.915408,-9.486604,-6.125356,6.940735,3.215452]]], dtype = "float32")#candidate|4356|(2, 15, 11)|const|float32
uop_4357 = relay.sqrt(const_4356.astype('float32')) # shape=(2, 15, 11)
output = relay.Tuple([uop_4357,])
output2 = relay.Tuple([uop_4357,])
func_4365 = relay.Function([], output)
mod['func_4365'] = func_4365
mod = relay.transform.InferType()(mod)
mutated_mod['func_4365'] = func_4365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mutated_mod.get_global_var('func_4365')
call_4366 = func_4365_call()
output = call_4366
func_4367 = relay.Function([], output)
mutated_mod['func_4367'] = func_4367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3287_call = mod.get_global_var('func_3287')
func_3289_call = mutated_mod.get_global_var('func_3289')
call_4418 = relay.TupleGetItem(func_3287_call(), 1)
call_4419 = relay.TupleGetItem(func_3289_call(), 1)
const_4422 = relay.const([[[9.629336,-4.170859,8.737269,4.921851,4.586680,6.066028,-7.102283,6.713467],[8.613610,-3.098094,0.765458,-2.073976,3.414786,9.659633,-8.967953,-4.959754],[0.573648,-0.868939,-2.592247,-3.077646,-3.195384,-7.053086,1.774655,-6.633590],[8.051501,7.726430,-4.527966,-8.425651,-0.823779,-8.689691,-6.294323,-2.537770],[3.403927,-3.942099,6.575509,8.653662,8.065292,-8.497742,-5.363496,4.575868],[4.806147,-5.965739,-0.077862,4.510944,-6.842572,6.241535,-3.372273,9.782047],[1.176818,1.895283,-7.181327,-7.482989,7.604312,-0.472249,5.741547,8.899627],[-3.145458,-7.411359,-4.837777,-1.425626,-2.482705,-9.637935,6.787999,-3.082480]],[[5.114863,4.031711,5.808895,9.103730,-8.386562,-3.580774,7.912870,-3.501929],[9.787830,6.780856,-5.156240,2.316784,5.832621,-6.697625,2.564786,2.921947],[-9.643492,-0.665593,-7.858359,-2.119437,-5.178641,-2.576362,-5.779061,8.682386],[-1.661565,-4.378827,-6.194949,9.627007,0.851655,5.429902,-4.884906,2.995179],[9.708841,-2.736733,-7.257705,4.988731,2.071076,-0.820648,-4.722927,-2.689305],[-0.581164,-2.525396,-4.929989,0.610325,1.927211,-6.278793,7.696711,-8.299734],[4.360383,1.372848,-2.684417,-9.405852,-0.050782,4.745918,1.891741,4.775919],[-2.932825,-4.394453,9.849500,-7.626266,-7.751503,8.330468,3.716901,7.680890]],[[-8.141030,-2.877424,3.080034,3.942948,0.234480,-2.380005,-1.632237,4.581693],[1.678808,2.819304,9.023171,0.189115,-4.840037,2.824199,9.950331,-3.501509],[0.662165,-8.032587,-5.427820,2.402549,-2.597739,-4.578189,2.930639,-0.844531],[0.277402,-3.924003,5.999527,4.058808,-2.885527,6.286565,7.817173,1.606222],[-2.979993,9.412562,9.292506,0.860863,-9.910264,-4.807355,2.667884,2.461992],[-7.637217,8.580234,2.654561,4.639568,6.453599,1.528044,5.079628,-5.679556],[-0.025057,-9.618401,-1.393656,-6.438786,8.630216,-0.149271,6.534948,0.340871],[0.395415,9.975138,5.911497,-9.842864,-1.132333,1.843953,0.404945,1.398773]],[[1.466214,7.907737,9.680657,0.623823,1.368137,6.804597,5.246581,-8.335756],[6.506207,6.394518,2.459886,-7.374226,-9.201524,1.894419,2.633819,4.646701],[-6.696337,-7.680920,-2.998506,-0.054377,5.275667,-3.944427,-3.683573,-7.867306],[1.354802,2.635142,5.402117,-2.731012,4.106099,4.370972,-6.229550,-7.950320],[-4.531145,2.872547,-6.670606,-8.514774,8.079055,-1.270869,5.342015,-1.853008],[-9.787357,0.283608,1.816865,4.249885,7.837143,8.768903,-7.643667,-4.951180],[-9.449119,2.132417,8.894338,-9.847812,3.181488,3.524306,2.295072,9.045852],[5.165504,-5.932760,-8.204771,2.137012,-7.350082,2.945920,-5.362314,8.737769]],[[4.575982,7.334011,-5.388969,-0.628298,-9.977715,7.093662,5.197188,-6.823764],[2.828251,0.835678,-0.065753,-1.489480,9.289617,1.389805,6.355018,-7.717470],[-0.239863,-6.787309,9.724693,-4.831531,-0.163408,-8.510452,-6.809327,-0.870756],[4.874547,9.432148,-6.997975,-3.399496,1.540029,-6.119499,4.623790,-7.625236],[-1.205186,-5.560183,5.850385,-9.945288,-1.501679,8.146417,7.789465,8.822580],[9.983806,-3.806671,-6.611721,2.825115,3.963708,-4.584949,-8.991099,-7.920958],[7.756689,-4.734688,1.121819,-9.426456,3.256802,-2.788657,1.570815,3.428433],[-8.061337,1.095756,3.489194,-6.405336,-1.384205,4.543410,1.312321,1.405821]],[[-0.665637,8.605391,-9.564797,-0.376108,1.192675,-6.065467,-1.057693,3.846962],[-5.164057,3.337350,8.099924,-8.688240,-5.640617,-5.688359,2.361276,3.126740],[-6.676746,2.409753,-8.078417,-8.815479,-9.923638,4.622310,3.006845,0.735594],[6.719782,0.981644,-1.777770,-7.411782,5.611748,2.236858,-9.171435,-1.341065],[8.950694,-9.781842,6.312600,-4.653490,2.704054,-7.403969,-1.680844,-4.559272],[-9.616128,3.326677,4.795072,-8.725864,-3.491438,2.262408,-6.376133,9.108600],[0.495581,9.303016,8.176570,-6.981754,2.291499,5.403297,-0.956889,3.041053],[6.358407,-7.296691,-4.259740,3.002800,-0.315529,-3.483918,-8.230249,-4.394809]],[[6.075057,8.244615,4.287754,6.274286,-8.684664,8.514704,2.242243,-2.208121],[7.084660,4.820145,0.529092,-0.126020,-0.365658,-2.403439,9.612898,-1.315957],[-8.258309,3.138857,-0.591837,1.913129,2.200483,4.736470,8.015740,0.027730],[-2.192254,7.455543,4.781735,0.318881,-1.618734,-3.615653,2.440139,-0.148731],[-8.955860,8.331641,-3.481665,-4.591474,8.606831,-2.094808,2.523404,6.128482],[8.079935,5.143189,6.841796,-8.858438,-2.506501,6.716140,7.519220,7.567165],[2.195129,-3.413159,8.677867,9.825693,3.130361,-3.118452,0.744944,-8.650181],[-8.618076,0.856706,5.716492,4.948823,-4.720150,7.575652,-6.129989,-7.307245]],[[9.174826,6.779060,2.908109,-6.001877,5.379795,3.524416,-8.432367,8.771002],[5.786528,-7.979311,-7.504608,-7.852322,-7.357522,-2.284239,-4.852702,-5.542905],[-1.918119,0.376369,-4.630679,-8.421150,-9.249248,-4.998932,5.614593,0.231742],[-4.832314,2.213612,7.783395,-8.570558,9.609984,-8.963521,1.735080,-3.225174],[-8.797237,3.046928,4.215193,-7.009575,3.008185,-3.198242,-5.202658,3.438704],[-5.359258,7.700664,-7.442066,4.138951,8.943242,7.311776,7.067025,-3.281434],[4.026766,-7.376908,1.374260,-4.663204,-6.311907,9.950881,-1.061550,0.893541],[-2.574348,-2.489089,-8.151417,-3.044236,9.209252,-7.879852,5.185933,6.458473]],[[-0.574264,1.087307,-2.276290,-8.260020,0.524571,-3.214626,-5.840842,-8.366811],[-1.622778,5.152306,-4.680526,-5.821346,-2.514816,-7.586876,5.577201,-7.096949],[-9.426868,9.795685,-9.214701,8.958498,-0.652648,1.149511,8.183815,1.914251],[8.547418,2.039798,-5.021885,6.115299,-3.574850,6.039636,4.700655,-6.913970],[6.218668,0.379380,4.713193,7.583753,-9.755526,0.835814,-0.791489,0.258532],[6.197160,-3.924567,9.751177,-6.189106,9.362424,7.230352,-4.862317,-7.972597],[-4.906485,6.312265,-9.637064,9.725357,5.693579,9.451068,0.380726,2.041928],[7.348110,-7.009994,-7.205342,-7.658215,-4.320005,-7.920349,7.347536,1.515975]],[[-7.473010,-0.671362,0.303236,7.577932,-9.899855,2.962958,-6.406773,-6.018489],[-7.219626,-7.048085,-2.960567,-6.357956,-3.013093,2.679996,-0.163072,8.015439],[7.694606,4.696074,8.003194,3.112022,2.478138,9.771077,-1.760496,0.493444],[2.481361,0.508401,3.178206,-2.825191,-9.697553,7.971879,-1.830923,-7.180425],[-4.649733,1.174238,-6.203877,5.384667,2.964189,2.566987,8.442304,-9.722019],[-6.727485,-4.024235,1.064450,-3.447707,-8.987407,-5.679898,-3.036959,-4.994560],[5.496273,0.916179,-3.906225,4.499163,5.107986,2.762142,-9.347728,9.981869],[2.028632,-5.421679,5.033038,3.302155,-7.930538,-4.493606,-3.666673,-3.541044]],[[-7.750910,0.623964,-7.843067,-2.991183,-0.995576,-9.177351,0.310468,5.171340],[3.000499,-0.407312,-4.842161,-6.044520,9.913588,-2.423416,9.294051,3.180302],[-3.840193,4.212219,-9.812457,-9.614708,1.358631,9.261225,2.424045,-0.673541],[-4.981279,2.618311,-0.122602,6.324028,-3.112919,1.159803,-2.147775,-9.326620],[3.534444,-9.650726,2.304493,-0.724330,0.918946,-0.405076,3.395863,-5.559276],[9.029940,-3.702640,7.743069,7.189788,8.367367,-7.873687,-8.670539,-0.731217],[-0.727895,8.700123,-1.726650,-4.027569,5.601438,-0.482397,0.449155,-1.743755],[-7.862860,-4.957219,-4.152819,0.886792,-9.774335,-5.680947,-9.838805,3.803470]],[[6.205300,8.853918,-0.717738,1.837968,-4.670280,-8.477102,-6.080531,-4.204680],[-5.547239,3.222733,-1.111187,-6.494283,-1.912008,0.591380,-6.769598,6.941825],[6.654914,3.962281,-3.622145,3.310706,-4.578853,2.292251,-8.347968,7.327841],[-3.573369,-1.692785,8.211509,-1.011505,3.821808,4.803744,-1.404098,6.191314],[4.887459,7.104877,1.408419,-5.193067,3.670268,7.060288,6.043813,-0.723786],[4.503273,-5.817163,4.391766,-7.658448,2.276809,-3.756784,-2.335975,9.856491],[-7.844488,3.491475,-9.982059,2.820638,0.154039,6.861074,2.649300,6.092714],[-2.903131,-6.415058,-2.382116,-9.883487,-2.816260,6.069981,-1.871639,-9.085554]],[[0.679857,5.384214,2.790425,1.685572,6.407461,9.035010,-0.675376,6.302676],[-7.592300,1.578376,-8.029235,-5.183197,-1.413709,3.207781,6.014342,-5.216099],[9.096326,-0.561376,-5.720834,-4.703307,-4.107501,8.744936,-6.660912,-0.554025],[-0.899016,5.379618,9.398796,5.590380,5.671278,8.678038,-5.652681,6.161401],[9.494372,-8.134663,-0.448562,8.477385,-0.558017,0.767850,9.960189,6.106753],[3.521457,-7.715028,3.233957,5.434520,-9.604422,4.857420,-7.997486,-8.232714],[-2.836667,2.420602,1.368794,0.858865,3.387828,-6.008476,-5.501451,-1.048918],[-2.375728,4.897509,-0.858897,-9.736866,3.123533,1.189418,2.320520,8.625982]],[[-7.590291,-6.796649,1.025381,4.800880,-3.687380,0.104391,-1.492278,7.329911],[-2.457175,-8.026236,0.047373,4.342362,-0.314167,-8.852001,-8.299181,5.344308],[-3.609058,5.378570,8.619230,0.098680,-6.218338,4.418549,-9.954646,-7.045327],[2.338305,-2.916735,4.275182,4.345310,-3.649990,0.642346,1.346834,-6.405893],[-9.535696,5.990661,-1.891617,-9.930315,8.372130,0.452922,-6.230267,-1.397589],[-1.120137,-0.423872,-4.202160,1.022104,0.872157,3.530361,6.776867,-6.486813],[7.117498,-7.619863,-3.715604,2.445851,-7.231171,-3.158297,-3.871167,-9.740923],[2.782821,-4.822655,-5.156624,-3.283812,8.464353,-3.725055,2.441880,-9.710672]],[[-5.946475,2.229583,1.044882,-8.783994,5.041905,-5.135900,8.118319,7.791162],[8.977533,-5.720992,2.922242,1.917962,-2.830248,-9.424178,5.184521,4.292033],[8.673184,-0.666846,9.883439,-2.093704,6.778407,-8.789169,9.538331,5.396234],[1.863582,-9.309479,5.917487,3.067500,3.285821,1.591652,1.544932,-5.989879],[5.749018,4.739921,7.272137,-6.449696,7.700134,6.325231,-5.272066,2.300277],[-2.099477,-0.315775,-4.335333,8.857525,2.235945,-5.093357,5.361559,6.016843],[8.187306,8.982432,-7.565061,-0.145833,-7.771097,-7.608220,-7.496675,4.021714],[0.254447,-4.305106,3.026129,7.562356,0.378496,3.235778,-4.420965,8.460253]],[[-4.377131,-6.809741,-1.392425,-7.668795,-2.707469,6.266255,-9.993635,1.042119],[3.528533,6.548734,-4.995843,3.330409,-5.415003,-7.736454,-9.343963,8.133025],[2.139364,0.893932,-2.711844,-7.539695,9.102736,3.592620,-6.321016,5.262881],[2.030955,8.254960,-8.641833,0.341797,8.743735,7.405075,1.368364,-9.252217],[9.813592,3.933437,1.850535,-4.658066,4.825388,6.101280,4.517285,8.151226],[9.415846,-3.330521,-2.099040,7.175630,0.402110,5.190004,6.655655,2.712618],[3.422022,-0.101721,0.457966,9.383863,-3.133856,-7.847108,-1.445515,-3.655199],[-3.763969,6.416403,-8.884381,8.943736,1.239672,1.343711,-5.256514,3.207302]]], dtype = "float64")#candidate|4422|(16, 8, 8)|const|float64
bop_4423 = relay.floor_mod(call_4418.astype('float64'), relay.reshape(const_4422.astype('float64'), relay.shape_of(call_4418))) # shape=(16, 8, 8)
bop_4426 = relay.floor_mod(call_4419.astype('float64'), relay.reshape(const_4422.astype('float64'), relay.shape_of(call_4419))) # shape=(16, 8, 8)
uop_4427 = relay.sin(call_4418.astype('float64')) # shape=(16, 8, 8)
uop_4429 = relay.sin(call_4419.astype('float64')) # shape=(16, 8, 8)
func_3751_call = mod.get_global_var('func_3751')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_4431 = relay.TupleGetItem(func_3751_call(), 0)
call_4432 = relay.TupleGetItem(func_3752_call(), 0)
output = relay.Tuple([bop_4423,uop_4427,call_4431,])
output2 = relay.Tuple([bop_4426,uop_4429,call_4432,])
func_4435 = relay.Function([], output)
mod['func_4435'] = func_4435
mod = relay.transform.InferType()(mod)
mutated_mod['func_4435'] = func_4435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4435_call = mutated_mod.get_global_var('func_4435')
call_4436 = func_4435_call()
output = call_4436
func_4437 = relay.Function([], output)
mutated_mod['func_4437'] = func_4437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mod.get_global_var('func_2977')
func_2979_call = mutated_mod.get_global_var('func_2979')
call_4448 = relay.TupleGetItem(func_2977_call(), 0)
call_4449 = relay.TupleGetItem(func_2979_call(), 0)
var_4478 = relay.var("var_4478", dtype = "float64", shape = (16, 8, 8))#candidate|4478|(16, 8, 8)|var|float64
bop_4479 = relay.right_shift(call_4448.astype('uint8'), relay.reshape(var_4478.astype('uint8'), relay.shape_of(call_4448))) # shape=(16, 8, 8)
bop_4482 = relay.right_shift(call_4449.astype('uint8'), relay.reshape(var_4478.astype('uint8'), relay.shape_of(call_4449))) # shape=(16, 8, 8)
func_1308_call = mod.get_global_var('func_1308')
func_1312_call = mutated_mod.get_global_var('func_1312')
const_4493 = relay.const([-2,-1,-9], dtype = "int32")#candidate|4493|(3,)|const|int32
const_4494 = relay.const([10,8,-9,-1,10,-4,1,2,-1,-3,-5,10,-5,8,3,-1,9,8,-2,8,10,-8,-7,-3,3,5,-10,-5,7,-10,3,1,3,-2,10,-8,4,-9,8,-9,-8,1,9,-3,-3,7,8,-10,9,7,-3,-10,-1,-10,-1,-2,-5,-6,-8,1,4,9,-5,-3,2,2,7,4,10,-8,3,1,10,-2,-8,2,-2,4,-10,2,8,-9,7,-4,-9,10,-10,-10,10,-3,-7,-10,5,-8,2,-9,5,7,3,-9,-2,4,1,4,-8,-2,1,-5,6,3,3,-8,2,-10,-7,-7,9,-2,-5,-6,5,-9,-7,-5,8,-1,-2,1,6,-6,10,1,5,2,10,-5,3,3,6,5,6,7,8,-1,-9,5,-2,-1,-10,7,10,-6,5,6,-7,-7,8,-10,-2,-1,8,10,-4,7,3,-7,7,7,3,3,-4,-3,-4,1,4,7,-9,1,8,-9,-3,6,-10,-2,-8,-2,-7,7,6,7,1,3,3,-3,-4,-3,-9,-7,-4,1,-7,-6,-6,6,-10,-3,9,1,9,-2,-4,-10,-6,1,9,3,3,-10,2,-2,-3,3,2,-5,-8,6,3,-7,4,-10,10,-8,-3,-5,-8,-7,-3,-2,-6,5,-5,-6,-6,7,2,2,-1,6,-9,-8,7,8], dtype = "int32")#candidate|4494|(252,)|const|int32
call_4492 = relay.TupleGetItem(func_1308_call(relay.reshape(const_4493.astype('int32'), [3, 1, 1]), relay.reshape(const_4494.astype('int32'), [3, 6, 14]), ), 1)
call_4495 = relay.TupleGetItem(func_1312_call(relay.reshape(const_4493.astype('int32'), [3, 1, 1]), relay.reshape(const_4494.astype('int32'), [3, 6, 14]), ), 1)
func_4006_call = mod.get_global_var('func_4006')
func_4008_call = mutated_mod.get_global_var('func_4008')
call_4498 = func_4006_call()
call_4499 = func_4006_call()
uop_4507 = relay.cos(call_4492.astype('float64')) # shape=(3, 6, 14)
uop_4509 = relay.cos(call_4495.astype('float64')) # shape=(3, 6, 14)
output = relay.Tuple([bop_4479,const_4493,const_4494,call_4498,uop_4507,])
output2 = relay.Tuple([bop_4482,const_4493,const_4494,call_4499,uop_4509,])
func_4510 = relay.Function([var_4478,], output)
mod['func_4510'] = func_4510
mod = relay.transform.InferType()(mod)
var_4511 = relay.var("var_4511", dtype = "float64", shape = (16, 8, 8))#candidate|4511|(16, 8, 8)|var|float64
output = func_4510(var_4511)
func_4512 = relay.Function([var_4511], output)
mutated_mod['func_4512'] = func_4512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_4535 = relay.TupleGetItem(func_4365_call(), 0)
call_4536 = relay.TupleGetItem(func_4367_call(), 0)
output = relay.Tuple([call_4535,])
output2 = relay.Tuple([call_4536,])
func_4551 = relay.Function([], output)
mod['func_4551'] = func_4551
mod = relay.transform.InferType()(mod)
mutated_mod['func_4551'] = func_4551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4551_call = mutated_mod.get_global_var('func_4551')
call_4552 = func_4551_call()
output = call_4552
func_4553 = relay.Function([], output)
mutated_mod['func_4553'] = func_4553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1465_call = mod.get_global_var('func_1465')
func_1467_call = mutated_mod.get_global_var('func_1467')
call_4584 = relay.TupleGetItem(func_1465_call(), 0)
call_4585 = relay.TupleGetItem(func_1467_call(), 0)
func_2191_call = mod.get_global_var('func_2191')
func_2193_call = mutated_mod.get_global_var('func_2193')
var_4587 = relay.var("var_4587", dtype = "int32", shape = (3,))#candidate|4587|(3,)|var|int32
call_4586 = relay.TupleGetItem(func_2191_call(relay.reshape(var_4587.astype('int32'), [3,])), 0)
call_4588 = relay.TupleGetItem(func_2193_call(relay.reshape(var_4587.astype('int32'), [3,])), 0)
output = relay.Tuple([call_4584,call_4586,var_4587,])
output2 = relay.Tuple([call_4585,call_4588,var_4587,])
func_4593 = relay.Function([var_4587,], output)
mod['func_4593'] = func_4593
mod = relay.transform.InferType()(mod)
var_4594 = relay.var("var_4594", dtype = "int32", shape = (3,))#candidate|4594|(3,)|var|int32
output = func_4593(var_4594)
func_4595 = relay.Function([var_4594], output)
mutated_mod['func_4595'] = func_4595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1003_call = mod.get_global_var('func_1003')
func_1004_call = mutated_mod.get_global_var('func_1004')
call_4602 = func_1003_call()
call_4603 = func_1003_call()
output = relay.Tuple([call_4602,])
output2 = relay.Tuple([call_4603,])
func_4608 = relay.Function([], output)
mod['func_4608'] = func_4608
mod = relay.transform.InferType()(mod)
mutated_mod['func_4608'] = func_4608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4608_call = mutated_mod.get_global_var('func_4608')
call_4609 = func_4608_call()
output = call_4609
func_4610 = relay.Function([], output)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2741_call = mod.get_global_var('func_2741')
func_2743_call = mutated_mod.get_global_var('func_2743')
call_4611 = relay.TupleGetItem(func_2741_call(), 2)
call_4612 = relay.TupleGetItem(func_2743_call(), 2)
func_3629_call = mod.get_global_var('func_3629')
func_3630_call = mutated_mod.get_global_var('func_3630')
call_4634 = func_3629_call()
call_4635 = func_3629_call()
func_256_call = mod.get_global_var('func_256')
func_260_call = mutated_mod.get_global_var('func_260')
var_4643 = relay.var("var_4643", dtype = "bool", shape = (728,))#candidate|4643|(728,)|var|bool
call_4642 = relay.TupleGetItem(func_256_call(relay.reshape(var_4643.astype('bool'), [7, 8, 13]), relay.reshape(var_4643.astype('bool'), [7, 8, 13]), ), 0)
call_4644 = relay.TupleGetItem(func_260_call(relay.reshape(var_4643.astype('bool'), [7, 8, 13]), relay.reshape(var_4643.astype('bool'), [7, 8, 13]), ), 0)
output = relay.Tuple([call_4611,call_4634,call_4642,var_4643,])
output2 = relay.Tuple([call_4612,call_4635,call_4644,var_4643,])
func_4651 = relay.Function([var_4643,], output)
mod['func_4651'] = func_4651
mod = relay.transform.InferType()(mod)
mutated_mod['func_4651'] = func_4651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4652 = relay.var("var_4652", dtype = "bool", shape = (728,))#candidate|4652|(728,)|var|bool
func_4651_call = mutated_mod.get_global_var('func_4651')
call_4653 = func_4651_call(var_4652)
output = call_4653
func_4654 = relay.Function([var_4652], output)
mutated_mod['func_4654'] = func_4654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_4785 = relay.TupleGetItem(func_3338_call(), 0)
call_4786 = relay.TupleGetItem(func_3340_call(), 0)
output = relay.Tuple([call_4785,])
output2 = relay.Tuple([call_4786,])
func_4814 = relay.Function([], output)
mod['func_4814'] = func_4814
mod = relay.transform.InferType()(mod)
mutated_mod['func_4814'] = func_4814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4814_call = mutated_mod.get_global_var('func_4814')
call_4815 = func_4814_call()
output = call_4815
func_4816 = relay.Function([], output)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4865 = relay.var("var_4865", dtype = "int64", shape = (8, 2, 5))#candidate|4865|(8, 2, 5)|var|int64
const_4866 = relay.const([[[-9,7,-2,-10,1],[-10,-6,-5,3,-5]],[[-1,-6,6,10,-7],[7,7,-7,-9,7]],[[-7,-3,10,-1,9],[10,4,-2,8,-4]],[[2,3,5,8,9],[4,-10,8,-4,-3]],[[-6,-4,8,1,-10],[3,8,1,7,5]],[[-5,-1,-5,-5,9],[3,-2,8,-5,-8]],[[-5,8,6,-5,9],[1,1,8,-1,7]],[[2,9,-9,4,5],[-10,2,4,-7,2]]], dtype = "int64")#candidate|4866|(8, 2, 5)|const|int64
bop_4867 = relay.bitwise_xor(var_4865.astype('int64'), relay.reshape(const_4866.astype('int64'), relay.shape_of(var_4865))) # shape=(8, 2, 5)
var_4873 = relay.var("var_4873", dtype = "int64", shape = (8, 2, 5))#candidate|4873|(8, 2, 5)|var|int64
bop_4874 = relay.less(bop_4867.astype('bool'), relay.reshape(var_4873.astype('bool'), relay.shape_of(bop_4867))) # shape=(8, 2, 5)
output = relay.Tuple([bop_4874,])
output2 = relay.Tuple([bop_4874,])
func_4889 = relay.Function([var_4865,var_4873,], output)
mod['func_4889'] = func_4889
mod = relay.transform.InferType()(mod)
var_4890 = relay.var("var_4890", dtype = "int64", shape = (8, 2, 5))#candidate|4890|(8, 2, 5)|var|int64
var_4891 = relay.var("var_4891", dtype = "int64", shape = (8, 2, 5))#candidate|4891|(8, 2, 5)|var|int64
output = func_4889(var_4890,var_4891,)
func_4892 = relay.Function([var_4890,var_4891,], output)
mutated_mod['func_4892'] = func_4892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_4915 = relay.TupleGetItem(func_1932_call(), 4)
call_4916 = relay.TupleGetItem(func_1933_call(), 4)
func_4006_call = mod.get_global_var('func_4006')
func_4008_call = mutated_mod.get_global_var('func_4008')
call_4917 = func_4006_call()
call_4918 = func_4006_call()
func_3589_call = mod.get_global_var('func_3589')
func_3592_call = mutated_mod.get_global_var('func_3592')
const_4932 = relay.const([[-9.669566,-5.950569,7.632563,6.339435,-2.995208,5.407323,8.353284,3.710796,7.332597,-4.956501,5.633653],[-0.295566,7.712775,0.829549,9.792614,3.390104,-1.730180,5.738504,1.000458,3.855994,1.834972,-6.495300],[2.407123,-0.097120,0.294312,1.075727,-8.781088,-8.727371,0.460798,0.907338,-3.148427,-1.474459,-5.911340],[-2.617135,-3.448702,-2.308073,1.588074,-6.567235,-1.417395,9.163109,3.452106,-4.662438,4.970890,5.207812],[5.831565,6.125989,2.647964,-9.538979,5.138744,1.911485,-4.728323,-5.694024,-7.345668,6.358251,8.782122],[7.431338,5.184077,-7.081966,-8.487995,9.025482,3.605107,4.424085,-1.679387,-3.965557,-8.702252,0.343167],[7.065424,-8.441064,-9.782562,3.020467,0.647595,3.237638,-4.454859,5.164867,1.252152,-2.585560,9.288411],[-0.489239,-0.329680,-3.166098,-0.821706,1.300561,1.458224,-7.020711,1.826821,9.392567,-2.856098,1.903093],[1.756109,1.809415,4.275855,9.155105,4.235465,-9.806341,-8.549209,-5.240944,-7.324958,2.202272,-8.372079],[-1.695847,7.837498,-6.335701,-6.832194,-8.832976,-5.119151,-8.039078,-6.038704,-9.970796,6.849474,2.350977],[5.645583,9.996418,2.230568,7.161896,-2.402043,-3.804261,-7.565596,5.371222,-1.080775,-5.937665,1.672314],[6.424279,-5.011606,9.382949,-7.324429,6.608137,-2.781328,-1.959739,4.285183,7.654717,4.906086,1.314462],[-2.547496,-4.131396,9.773689,3.424351,2.773762,-7.808798,6.628215,-0.587161,-2.672635,0.828689,-0.213046],[-3.156538,-6.038692,6.539510,5.172763,6.143316,6.960216,5.795285,-1.405481,6.636043,0.425175,0.277617],[0.419248,-0.671432,6.994068,-7.326126,6.378360,-4.563710,7.408364,9.958781,-1.515583,-5.372230,-0.392709],[-6.955622,6.167608,8.067153,7.343204,3.756930,-7.601690,-6.271270,9.231104,9.359176,-1.316090,-8.008270],[4.173335,-0.118545,-8.099442,4.227641,-3.403313,0.214303,2.726466,-3.658161,9.495661,7.915860,-4.180617],[-0.627114,-4.208039,-7.261814,5.799354,-4.559793,6.051199,-1.396690,-7.232050,-0.239447,-9.592026,-8.787937],[-8.393688,-0.489618,-9.143236,3.218061,-8.044332,-2.964197,1.526937,1.390094,-3.358908,9.681448,-1.508176],[8.536872,9.126161,-2.510122,-8.539800,3.897984,9.139026,-0.911546,0.740578,-4.981609,6.691664,0.375594],[-8.093503,6.149635,-6.260687,-1.616497,9.398218,0.055926,3.564515,-2.077609,-9.217554,8.609292,4.834946],[3.607737,5.287317,-3.338597,5.863995,-9.791396,-7.609200,-3.667221,-2.946313,-5.074752,-7.171316,0.204062],[4.161554,7.171131,5.799771,4.586175,0.573465,-9.289594,4.166118,2.321039,-0.871637,-0.512205,-7.642160],[1.516998,0.703737,-5.937901,-9.800411,9.776015,4.076440,4.604817,2.171966,6.320118,-1.603434,-2.894783],[2.540272,-5.347690,7.526490,-0.620214,1.535016,-8.712712,5.589553,-5.978197,-5.911267,5.992047,8.690027],[0.946985,-2.981497,8.255729,-2.660056,-6.931028,0.507589,0.504655,5.264167,-8.542424,3.828670,9.428770],[8.195429,-8.675887,5.190662,7.315974,9.922419,-8.271267,-9.743174,-9.989860,0.216953,-2.009889,7.651480],[6.891179,5.892472,1.710401,-8.500575,-3.586166,-2.716089,-0.014264,-2.156763,-3.726950,-6.750892,2.027245],[-2.427268,1.141748,-7.285994,8.095318,2.939034,-8.438929,-7.565147,4.251864,-1.823113,5.309395,4.699631],[6.883451,6.566433,0.952401,-9.199451,-2.538237,-6.653163,-0.127116,7.646120,-9.501104,-9.436548,-3.488426],[-1.405924,0.808616,8.027334,7.014368,-5.865090,-6.202806,9.726776,8.282993,8.340372,-3.172141,8.436343],[-0.601263,-2.575664,9.527468,-5.724009,-2.044866,-3.964801,7.900561,-4.703839,-3.536129,9.880350,-1.142978],[-3.819538,-9.457362,-8.678200,0.089966,3.499154,-2.665462,-6.797446,-7.777298,6.981800,1.021848,4.753125],[1.397570,3.387963,-3.552954,0.671990,1.405555,7.165698,2.609913,7.755537,6.051811,-1.767918,-0.526168],[-1.126649,0.686766,2.445916,1.584620,-6.531028,-2.950281,-3.931991,-7.944016,-1.385642,7.758695,-2.241384],[8.045042,2.776690,-0.422074,-0.572982,-7.217496,-8.489417,9.755754,-3.484291,-6.666011,8.293362,-0.483290],[7.572915,6.010560,5.064258,5.752855,4.160812,8.293549,-6.425319,1.284355,-9.537506,2.949929,5.726962],[1.360557,9.865654,-5.012373,-5.664478,-2.567362,-6.403522,3.424566,-2.199762,9.526899,0.603793,-3.652530],[-7.227588,2.962022,1.083842,0.395258,0.152449,-1.793387,-9.444818,9.625684,1.972735,6.618177,-4.861132]], dtype = "float32")#candidate|4932|(39, 11)|const|float32
call_4931 = relay.TupleGetItem(func_3589_call(relay.reshape(const_4932.astype('float32'), [429,])), 2)
call_4933 = relay.TupleGetItem(func_3592_call(relay.reshape(const_4932.astype('float32'), [429,])), 2)
func_1500_call = mod.get_global_var('func_1500')
func_1505_call = mutated_mod.get_global_var('func_1505')
const_4935 = relay.const([[-3],[7],[-8]], dtype = "int32")#candidate|4935|(3, 1)|const|int32
var_4936 = relay.var("var_4936", dtype = "int32", shape = (252,))#candidate|4936|(252,)|var|int32
call_4934 = relay.TupleGetItem(func_1500_call(relay.reshape(const_4935.astype('int32'), [3,]), relay.reshape(var_4936.astype('int32'), [3, 84]), relay.reshape(var_4936.astype('int32'), [3, 84]), ), 4)
call_4937 = relay.TupleGetItem(func_1505_call(relay.reshape(const_4935.astype('int32'), [3,]), relay.reshape(var_4936.astype('int32'), [3, 84]), relay.reshape(var_4936.astype('int32'), [3, 84]), ), 4)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_4940 = func_2013_call(relay.reshape(call_4917.astype('float64'), [16, 8, 8]))
call_4941 = func_2013_call(relay.reshape(call_4917.astype('float64'), [16, 8, 8]))
const_4945 = relay.const([[[6.130871,6.530411,-0.850110,-2.781379,-8.493021,-9.931499,-7.024891,-9.550415,-3.592414,-7.034097,-8.141742,-7.877894,1.776643],[-5.399842,0.406258,6.924071,-0.830609,-9.551154,-8.312435,-3.127410,-0.924030,-9.667483,4.170120,-3.482038,-3.876164,2.302484],[-3.429607,-0.855815,-6.279407,-7.371965,-5.771406,5.061207,4.188636,-8.631199,-0.172085,-2.961949,3.033343,2.893650,5.522784],[-4.420245,6.088566,-5.537851,-5.003556,9.308440,-6.298735,-9.810249,1.867360,0.086923,3.009253,-8.808983,-5.277990,-4.523282],[9.507544,-0.780069,5.444177,-8.116313,-6.710307,-3.055028,-5.962276,5.182276,-1.582660,0.264993,4.145790,-3.080649,-2.498020],[6.688600,6.462306,1.377618,8.569244,-5.700005,-1.797614,6.720919,6.488242,4.627452,4.307801,-4.511331,6.016002,0.530769],[-8.880660,3.633086,-0.250122,6.492996,4.619699,-5.975560,-2.583159,2.055176,-0.447308,7.959056,3.459138,0.277619,-6.434594],[-5.166314,2.419956,-3.183683,7.077275,4.341427,-7.689004,0.908857,6.837709,7.383480,-1.123655,-4.512562,3.163023,3.153142],[6.325008,-0.764845,-4.157424,4.166858,-8.929468,-5.148576,7.795004,-8.045621,-9.489915,1.785594,4.363214,-3.444799,-4.369665],[-9.730487,-9.453725,-8.381651,-8.159090,5.596193,3.501209,7.483841,2.282423,3.856830,7.517086,-7.207125,8.019288,1.086063],[-7.890529,3.506727,-8.425621,0.326753,5.998051,-0.986462,-0.498916,-8.449381,-7.814602,3.087433,5.202607,7.120003,-4.501944]],[[1.033720,7.765832,6.583789,-3.710328,-6.166050,-7.612179,7.528757,3.094691,-6.751006,-2.206224,0.951655,-1.879547,-7.931255],[7.264737,-5.211099,6.605819,-8.324310,-4.927498,8.582307,-9.141955,5.570672,6.043362,-6.610012,1.461849,-9.561953,6.371658],[-3.333074,-6.912090,-6.476535,-8.039603,-0.112064,-1.461126,2.159999,-7.598012,0.613825,-0.719418,5.420058,5.012225,6.348863],[-6.556715,-5.072599,0.134011,6.746658,3.753322,-7.329179,-5.145118,-5.782969,5.251320,5.163174,-7.297487,-0.126419,-2.543862],[-7.020145,0.748888,-4.950270,0.138172,7.484419,4.621069,-4.564746,-0.972486,6.917911,9.449320,9.206211,0.866329,-8.854215],[9.714628,-2.715234,0.187407,-8.545318,-2.116377,-3.689529,9.197183,0.194454,2.830184,-0.243680,-2.533034,-5.696705,1.821199],[-9.702177,2.248046,-5.557883,5.714894,-5.755079,8.190081,4.627171,0.348457,0.982053,3.777741,9.704646,-3.493946,8.917453],[5.011158,9.714729,4.941768,2.942305,-7.712097,-8.861175,6.294045,-2.455416,0.398907,-2.869304,-1.222511,5.603942,-1.605267],[-1.911520,-7.251904,3.686131,1.853997,-7.011758,-3.460083,4.258489,7.948279,-6.258191,-8.968947,9.049522,-6.406767,-5.866559],[6.771135,6.029289,2.379900,2.225098,4.524597,0.756583,8.989578,0.332335,-2.603992,-8.465486,-4.257558,-2.330855,-2.884384],[-3.833638,7.979848,8.310138,3.905647,8.317311,-5.006632,-8.476472,0.557883,-3.760329,-3.945053,6.765601,5.493364,-7.225960]],[[-7.782272,-9.549575,2.059673,-8.264094,-9.840412,4.006325,-1.333971,-3.406269,5.158929,-4.978836,-2.245054,1.449132,-6.000461],[8.969607,1.839177,-5.131060,-8.738464,-6.570840,9.542751,4.076720,-5.778867,7.045541,7.505603,8.246558,6.130608,0.764337],[-2.440163,-7.094577,5.828790,-8.377100,3.448184,1.417695,-4.467968,5.962870,-4.571300,7.167109,-6.823232,3.838780,-2.285634],[-5.919716,-9.543402,3.971808,1.756338,3.407650,-7.632847,5.243734,-0.196413,9.480185,-9.370648,1.849468,3.677269,5.933857],[0.894308,3.921623,8.484791,8.639613,-2.163959,-7.810423,-5.980552,-8.047615,-6.516098,5.536070,-4.220902,3.918191,3.879838],[9.954511,4.448735,-9.850051,3.513347,-1.047564,-3.383844,-3.876553,-8.394969,-4.575306,0.279668,6.021724,-8.669711,-1.869412],[-9.125196,9.116252,-6.614923,-5.426956,1.855511,5.895053,8.877108,3.561094,1.219149,-5.462991,-4.406335,0.977516,2.050451],[0.221015,8.167114,2.757929,3.955840,6.270690,1.939576,9.287260,1.428971,-4.750416,-6.352697,-4.562006,6.414141,-0.539071],[7.465491,3.212038,-8.091638,-0.201017,2.897107,7.021033,-8.084441,-0.387272,1.555330,-2.646121,-7.426330,5.330491,-0.517116],[2.268154,-7.399403,5.351643,1.716261,-2.563603,-8.570532,2.102545,-4.646245,-6.301976,0.008250,4.418830,4.647855,1.749987],[-7.279911,-0.645905,-6.733770,-5.914002,0.505304,-0.119615,6.112788,7.821232,6.654374,4.386666,3.854302,-7.189276,-8.832877]]], dtype = "float32")#candidate|4945|(3, 11, 13)|const|float32
bop_4946 = relay.equal(call_4931.astype('bool'), relay.reshape(const_4945.astype('bool'), relay.shape_of(call_4931))) # shape=(3, 11, 13)
bop_4949 = relay.equal(call_4933.astype('bool'), relay.reshape(const_4945.astype('bool'), relay.shape_of(call_4933))) # shape=(3, 11, 13)
bop_4953 = relay.floor_divide(const_4935.astype('float64'), call_4934.astype('float64')) # shape=(3, 84)
bop_4956 = relay.floor_divide(const_4935.astype('float64'), call_4937.astype('float64')) # shape=(3, 84)
func_1465_call = mod.get_global_var('func_1465')
func_1467_call = mutated_mod.get_global_var('func_1467')
call_4960 = relay.TupleGetItem(func_1465_call(), 0)
call_4961 = relay.TupleGetItem(func_1467_call(), 0)
func_4608_call = mod.get_global_var('func_4608')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_4971 = relay.TupleGetItem(func_4608_call(), 0)
call_4972 = relay.TupleGetItem(func_4610_call(), 0)
output = relay.Tuple([call_4915,call_4917,const_4932,var_4936,call_4940,bop_4946,bop_4953,call_4960,call_4971,])
output2 = relay.Tuple([call_4916,call_4918,const_4932,var_4936,call_4941,bop_4949,bop_4956,call_4961,call_4972,])
func_4988 = relay.Function([var_4936,], output)
mod['func_4988'] = func_4988
mod = relay.transform.InferType()(mod)
mutated_mod['func_4988'] = func_4988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4989 = relay.var("var_4989", dtype = "int32", shape = (252,))#candidate|4989|(252,)|var|int32
func_4988_call = mutated_mod.get_global_var('func_4988')
call_4990 = func_4988_call(var_4989)
output = call_4990
func_4991 = relay.Function([var_4989], output)
mutated_mod['func_4991'] = func_4991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1256_call = mod.get_global_var('func_1256')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_5102 = func_1256_call()
call_5103 = func_1256_call()
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_5104 = relay.TupleGetItem(func_3338_call(), 1)
call_5105 = relay.TupleGetItem(func_3340_call(), 1)
func_4006_call = mod.get_global_var('func_4006')
func_4008_call = mutated_mod.get_global_var('func_4008')
call_5114 = func_4006_call()
call_5115 = func_4006_call()
output = relay.Tuple([call_5102,call_5104,call_5114,])
output2 = relay.Tuple([call_5103,call_5105,call_5115,])
func_5118 = relay.Function([], output)
mod['func_5118'] = func_5118
mod = relay.transform.InferType()(mod)
output = func_5118()
func_5119 = relay.Function([], output)
mutated_mod['func_5119'] = func_5119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_5165 = relay.TupleGetItem(func_2257_call(), 0)
call_5166 = relay.TupleGetItem(func_2258_call(), 0)
output = call_5165
output2 = call_5166
func_5168 = relay.Function([], output)
mod['func_5168'] = func_5168
mod = relay.transform.InferType()(mod)
output = func_5168()
func_5169 = relay.Function([], output)
mutated_mod['func_5169'] = func_5169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4551_call = mod.get_global_var('func_4551')
func_4553_call = mutated_mod.get_global_var('func_4553')
call_5174 = relay.TupleGetItem(func_4551_call(), 0)
call_5175 = relay.TupleGetItem(func_4553_call(), 0)
output = call_5174
output2 = call_5175
func_5176 = relay.Function([], output)
mod['func_5176'] = func_5176
mod = relay.transform.InferType()(mod)
mutated_mod['func_5176'] = func_5176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5176_call = mutated_mod.get_global_var('func_5176')
call_5177 = func_5176_call()
output = call_5177
func_5178 = relay.Function([], output)
mutated_mod['func_5178'] = func_5178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_5243 = func_2452_call()
call_5244 = func_2452_call()
func_2053_call = mod.get_global_var('func_2053')
func_2057_call = mutated_mod.get_global_var('func_2057')
var_5256 = relay.var("var_5256", dtype = "int64", shape = (700,))#candidate|5256|(700,)|var|int64
const_5257 = relay.const([-2.034318,-6.825164,6.499506,5.305046,-1.140993,2.708390,-6.867614,8.326349,9.143182,-1.310034,6.148541,-4.722849,8.128514,-1.502502,5.601882,1.460413,9.492106,0.425044,9.310927,-0.998231,-3.605389,-5.782198,-4.075484,-0.970550,-8.453564,-9.926814,3.778458,-5.621964,7.079839,0.394212,-2.664977,-9.643072,-9.016093,-3.701183,-9.831582,6.297147,-6.521318,-3.907962,6.204802,-1.933706,1.748408,-5.175368,-6.960285,-0.871180,3.795083,-1.170551,-1.039949,3.889985,-4.869378,-1.762519,-6.500112,1.477188,-0.151503,-4.168691,-4.906684,0.147811,4.761644,-9.494492,-5.765015,6.594008,7.447320,-1.702826,-0.986779,-7.937052,8.329535,-3.863528,2.402282,2.273498,0.954898,0.846785,-9.492482,8.966766,-4.290313,9.366746,-2.809018,-4.751686,-8.284137,-0.158558,-1.950440,4.845489,0.531801,-3.895454,-6.212532,-0.835302,4.061419,4.503951,1.780507,0.668911,0.145175,-1.154843,9.642214], dtype = "float64")#candidate|5257|(91,)|const|float64
call_5255 = relay.TupleGetItem(func_2053_call(relay.reshape(var_5256.astype('int64'), [5, 140]), relay.reshape(const_5257.astype('float64'), [1, 91]), ), 4)
call_5258 = relay.TupleGetItem(func_2057_call(relay.reshape(var_5256.astype('int64'), [5, 140]), relay.reshape(const_5257.astype('float64'), [1, 91]), ), 4)
var_5261 = relay.var("var_5261", dtype = "float64", shape = (4, 91))#candidate|5261|(4, 91)|var|float64
bop_5262 = relay.less(call_5255.astype('bool'), var_5261.astype('bool')) # shape=(4, 91)
bop_5265 = relay.less(call_5258.astype('bool'), var_5261.astype('bool')) # shape=(4, 91)
func_4351_call = mod.get_global_var('func_4351')
func_4354_call = mutated_mod.get_global_var('func_4354')
var_5284 = relay.var("var_5284", dtype = "float32", shape = (825,))#candidate|5284|(825,)|var|float32
call_5283 = relay.TupleGetItem(func_4351_call(relay.reshape(var_5284.astype('float32'), [15, 5, 11])), 0)
call_5285 = relay.TupleGetItem(func_4354_call(relay.reshape(var_5284.astype('float32'), [15, 5, 11])), 0)
func_321_call = mod.get_global_var('func_321')
func_324_call = mutated_mod.get_global_var('func_324')
call_5290 = func_321_call(relay.reshape(const_5257.astype('float64'), [1, 13, 7]))
call_5291 = func_321_call(relay.reshape(const_5257.astype('float64'), [1, 13, 7]))
func_2053_call = mod.get_global_var('func_2053')
func_2057_call = mutated_mod.get_global_var('func_2057')
call_5292 = relay.TupleGetItem(func_2053_call(relay.reshape(var_5256.astype('int64'), [5, 140]), relay.reshape(call_5255.astype('float64'), [1, 91]), ), 1)
call_5293 = relay.TupleGetItem(func_2057_call(relay.reshape(var_5256.astype('int64'), [5, 140]), relay.reshape(call_5255.astype('float64'), [1, 91]), ), 1)
func_3629_call = mod.get_global_var('func_3629')
func_3630_call = mutated_mod.get_global_var('func_3630')
call_5297 = func_3629_call()
call_5298 = func_3629_call()
func_4288_call = mod.get_global_var('func_4288')
func_4290_call = mutated_mod.get_global_var('func_4290')
call_5300 = relay.TupleGetItem(func_4288_call(), 1)
call_5301 = relay.TupleGetItem(func_4290_call(), 1)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_5302 = relay.TupleGetItem(func_4365_call(), 0)
call_5303 = relay.TupleGetItem(func_4367_call(), 0)
output = relay.Tuple([call_5243,var_5256,const_5257,bop_5262,call_5283,var_5284,call_5290,call_5292,call_5297,call_5300,call_5302,])
output2 = relay.Tuple([call_5244,var_5256,const_5257,bop_5265,call_5285,var_5284,call_5291,call_5293,call_5298,call_5301,call_5303,])
func_5304 = relay.Function([var_5256,var_5261,var_5284,], output)
mod['func_5304'] = func_5304
mod = relay.transform.InferType()(mod)
var_5305 = relay.var("var_5305", dtype = "int64", shape = (700,))#candidate|5305|(700,)|var|int64
var_5306 = relay.var("var_5306", dtype = "float64", shape = (4, 91))#candidate|5306|(4, 91)|var|float64
var_5307 = relay.var("var_5307", dtype = "float32", shape = (825,))#candidate|5307|(825,)|var|float32
output = func_5304(var_5305,var_5306,var_5307,)
func_5308 = relay.Function([var_5305,var_5306,var_5307,], output)
mutated_mod['func_5308'] = func_5308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_5313 = relay.TupleGetItem(func_685_call(), 0)
call_5314 = relay.TupleGetItem(func_687_call(), 0)
func_3606_call = mod.get_global_var('func_3606')
func_3608_call = mutated_mod.get_global_var('func_3608')
const_5323 = relay.const([-2.493845,-2.504555,-5.737636,-5.555392,-1.745779,-7.921491,-4.698325,7.272238,3.452917,-9.295468,2.554170,-6.110870,3.731430,2.118393,-0.417441,6.026311,7.191786,9.496827,3.176027,9.817606,-0.110463,-5.561717,-6.547001,4.629021,-2.580816,-7.386325,-3.696668,-8.467665,0.036914,-7.891033,-6.663076,-6.675091,9.635988,2.853938,3.678620,-7.596339,0.923412,6.552223,-6.836415,6.220640,-0.106203,-7.168203,9.611122,-9.351946,3.278247,-1.703982,-0.823341,0.525286,-6.877796,3.739354,-0.480087,0.619486,-1.899727,7.628288,1.073621,7.248130,2.519037,-9.301645,7.731860,3.588064,-8.669196,-3.190874,-5.434897,-7.086752,-8.409843,3.682008,-5.072597,-6.588353,4.269369,9.163141,0.343600,-0.182684,0.565997,0.147879,7.003203,9.264869,-9.327393,4.187742,4.618402,-7.830893,0.186363,-6.254166,-4.061117,-0.667793,4.337224,5.436110,6.701697,3.957190,-6.840696,5.206730,7.371832,5.699957,-3.506317,-8.475376,7.544652,4.075120,-1.353687,-0.664166,2.283859,-7.333496,-3.663264,5.022646,5.942420,-9.874405,0.902833,-0.170278,-5.569695,-3.482828,-9.653936,1.290441,1.481482,-6.342004,-6.078295,2.049273,4.245607,-4.363865,7.930377,9.059192,-7.124239,-8.145708,9.978683,-6.381592,2.251705,-9.901340,-4.207255,8.840064,6.427560,5.039123,-4.035766,6.627005,5.183687,2.433779,9.135692,1.318431,3.973135,4.907850,-5.732841,-8.202478,-2.420658,4.641866,-2.943209,7.781665,-0.975191,-0.380684,9.887069,7.930656,5.437141,6.632207,3.709039,0.948672,-7.197962,-9.152276,-5.525727,-2.965340,1.515326,1.994878,-4.737251,9.335678,-6.035585,8.760932,1.274031,-7.180646,-2.694816,4.329612,-3.172999,-6.566019,3.191246,-4.418986,1.344671,1.837478,-3.717701,5.075279,7.333511,-2.242079,-1.439081,5.748876,-0.019322,-6.053912,5.886322,-4.451643,-2.825052,-3.112761,2.167580,-6.389206,-3.647201,-5.607509,-6.097439,8.058237,-3.665274,1.115620,-5.146338,3.914230,-0.873868,4.034998,9.958308,-8.298195,-0.020899,-3.004352,3.176536,-1.896608,-9.033841,-8.731715,-3.379492,-9.347480,6.733680,3.659048,-6.820532,-2.667487,2.258955,-6.724138,-8.931462,-6.426326,4.211564,-0.594451,4.687124,-5.495964,9.044443,8.957939,5.592963,3.770214,2.463517,-2.072188,0.662096,7.257270,-5.979273,6.448501,-5.876308,9.794550,-5.748959,-3.874261,-3.081258,9.552716,7.701365,-3.865265,-3.469110,-0.555197,-1.498083,5.347786,8.575133,-0.258481], dtype = "float64")#candidate|5323|(240,)|const|float64
call_5322 = relay.TupleGetItem(func_3606_call(relay.reshape(const_5323.astype('float64'), [3, 8, 10])), 2)
call_5324 = relay.TupleGetItem(func_3608_call(relay.reshape(const_5323.astype('float64'), [3, 8, 10])), 2)
output = relay.Tuple([call_5313,call_5322,const_5323,])
output2 = relay.Tuple([call_5314,call_5324,const_5323,])
func_5329 = relay.Function([], output)
mod['func_5329'] = func_5329
mod = relay.transform.InferType()(mod)
output = func_5329()
func_5330 = relay.Function([], output)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4608_call = mod.get_global_var('func_4608')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_5345 = relay.TupleGetItem(func_4608_call(), 0)
call_5346 = relay.TupleGetItem(func_4610_call(), 0)
func_1500_call = mod.get_global_var('func_1500')
func_1505_call = mutated_mod.get_global_var('func_1505')
const_5360 = relay.const([3,-7,1], dtype = "int32")#candidate|5360|(3,)|const|int32
var_5361 = relay.var("var_5361", dtype = "int32", shape = (252,))#candidate|5361|(252,)|var|int32
call_5359 = relay.TupleGetItem(func_1500_call(relay.reshape(const_5360.astype('int32'), [3,]), relay.reshape(var_5361.astype('int32'), [3, 84]), relay.reshape(var_5361.astype('int32'), [3, 84]), ), 3)
call_5362 = relay.TupleGetItem(func_1505_call(relay.reshape(const_5360.astype('int32'), [3,]), relay.reshape(var_5361.astype('int32'), [3, 84]), relay.reshape(var_5361.astype('int32'), [3, 84]), ), 3)
output = relay.Tuple([call_5345,call_5359,const_5360,var_5361,])
output2 = relay.Tuple([call_5346,call_5362,const_5360,var_5361,])
func_5377 = relay.Function([var_5361,], output)
mod['func_5377'] = func_5377
mod = relay.transform.InferType()(mod)
var_5378 = relay.var("var_5378", dtype = "int32", shape = (252,))#candidate|5378|(252,)|var|int32
output = func_5377(var_5378)
func_5379 = relay.Function([var_5378], output)
mutated_mod['func_5379'] = func_5379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1245_call = mod.get_global_var('func_1245')
func_1246_call = mutated_mod.get_global_var('func_1246')
call_5381 = relay.TupleGetItem(func_1245_call(), 0)
call_5382 = relay.TupleGetItem(func_1246_call(), 0)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_5390 = relay.TupleGetItem(func_3658_call(), 0)
call_5391 = relay.TupleGetItem(func_3659_call(), 0)
output = relay.Tuple([call_5381,call_5390,])
output2 = relay.Tuple([call_5382,call_5391,])
func_5417 = relay.Function([], output)
mod['func_5417'] = func_5417
mod = relay.transform.InferType()(mod)
mutated_mod['func_5417'] = func_5417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5417_call = mutated_mod.get_global_var('func_5417')
call_5418 = func_5417_call()
output = call_5418
func_5419 = relay.Function([], output)
mutated_mod['func_5419'] = func_5419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1611_call = mod.get_global_var('func_1611')
func_1612_call = mutated_mod.get_global_var('func_1612')
call_5444 = func_1611_call()
call_5445 = func_1611_call()
func_1851_call = mod.get_global_var('func_1851')
func_1853_call = mutated_mod.get_global_var('func_1853')
call_5451 = relay.TupleGetItem(func_1851_call(), 0)
call_5452 = relay.TupleGetItem(func_1853_call(), 0)
func_2293_call = mod.get_global_var('func_2293')
func_2295_call = mutated_mod.get_global_var('func_2295')
call_5465 = relay.TupleGetItem(func_2293_call(), 2)
call_5466 = relay.TupleGetItem(func_2295_call(), 2)
output = relay.Tuple([call_5444,call_5451,call_5465,])
output2 = relay.Tuple([call_5445,call_5452,call_5466,])
func_5467 = relay.Function([], output)
mod['func_5467'] = func_5467
mod = relay.transform.InferType()(mod)
output = func_5467()
func_5468 = relay.Function([], output)
mutated_mod['func_5468'] = func_5468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_5472 = func_2452_call()
call_5473 = func_2452_call()
var_5481 = relay.var("var_5481", dtype = "float32", shape = (16, 8, 8))#candidate|5481|(16, 8, 8)|var|float32
bop_5482 = relay.maximum(call_5472.astype('int32'), relay.reshape(var_5481.astype('int32'), relay.shape_of(call_5472))) # shape=(16, 8, 8)
bop_5485 = relay.maximum(call_5473.astype('int32'), relay.reshape(var_5481.astype('int32'), relay.shape_of(call_5473))) # shape=(16, 8, 8)
output = bop_5482
output2 = bop_5485
func_5492 = relay.Function([var_5481,], output)
mod['func_5492'] = func_5492
mod = relay.transform.InferType()(mod)
mutated_mod['func_5492'] = func_5492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5493 = relay.var("var_5493", dtype = "float32", shape = (16, 8, 8))#candidate|5493|(16, 8, 8)|var|float32
func_5492_call = mutated_mod.get_global_var('func_5492')
call_5494 = func_5492_call(var_5493)
output = call_5494
func_5495 = relay.Function([var_5493], output)
mutated_mod['func_5495'] = func_5495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1245_call = mod.get_global_var('func_1245')
func_1246_call = mutated_mod.get_global_var('func_1246')
call_5514 = relay.TupleGetItem(func_1245_call(), 0)
call_5515 = relay.TupleGetItem(func_1246_call(), 0)
output = relay.Tuple([call_5514,])
output2 = relay.Tuple([call_5515,])
func_5533 = relay.Function([], output)
mod['func_5533'] = func_5533
mod = relay.transform.InferType()(mod)
output = func_5533()
func_5534 = relay.Function([], output)
mutated_mod['func_5534'] = func_5534
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5583 = relay.var("var_5583", dtype = "uint64", shape = (5, 5, 7))#candidate|5583|(5, 5, 7)|var|uint64
var_5584 = relay.var("var_5584", dtype = "uint64", shape = (5, 5, 7))#candidate|5584|(5, 5, 7)|var|uint64
bop_5585 = relay.right_shift(var_5583.astype('uint64'), relay.reshape(var_5584.astype('uint64'), relay.shape_of(var_5583))) # shape=(5, 5, 7)
bop_5593 = relay.logical_and(var_5583.astype('bool'), relay.reshape(var_5584.astype('bool'), relay.shape_of(var_5583))) # shape=(5, 5, 7)
var_5596 = relay.var("var_5596", dtype = "uint64", shape = (5, 5, 7))#candidate|5596|(5, 5, 7)|var|uint64
bop_5597 = relay.subtract(bop_5585.astype('uint16'), relay.reshape(var_5596.astype('uint16'), relay.shape_of(bop_5585))) # shape=(5, 5, 7)
func_4351_call = mod.get_global_var('func_4351')
func_4354_call = mutated_mod.get_global_var('func_4354')
var_5608 = relay.var("var_5608", dtype = "float32", shape = (5, 165))#candidate|5608|(5, 165)|var|float32
call_5607 = relay.TupleGetItem(func_4351_call(relay.reshape(var_5608.astype('float32'), [15, 5, 11])), 3)
call_5609 = relay.TupleGetItem(func_4354_call(relay.reshape(var_5608.astype('float32'), [15, 5, 11])), 3)
output = relay.Tuple([bop_5593,bop_5597,call_5607,var_5608,])
output2 = relay.Tuple([bop_5593,bop_5597,call_5609,var_5608,])
func_5619 = relay.Function([var_5583,var_5584,var_5596,var_5608,], output)
mod['func_5619'] = func_5619
mod = relay.transform.InferType()(mod)
mutated_mod['func_5619'] = func_5619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5619_call = mutated_mod.get_global_var('func_5619')
var_5621 = relay.var("var_5621", dtype = "uint64", shape = (5, 5, 7))#candidate|5621|(5, 5, 7)|var|uint64
var_5622 = relay.var("var_5622", dtype = "uint64", shape = (5, 5, 7))#candidate|5622|(5, 5, 7)|var|uint64
var_5623 = relay.var("var_5623", dtype = "uint64", shape = (5, 5, 7))#candidate|5623|(5, 5, 7)|var|uint64
var_5624 = relay.var("var_5624", dtype = "float32", shape = (5, 165))#candidate|5624|(5, 165)|var|float32
call_5620 = func_5619_call(var_5621,var_5622,var_5623,var_5624,)
output = call_5620
func_5625 = relay.Function([var_5621,var_5622,var_5623,var_5624,], output)
mutated_mod['func_5625'] = func_5625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5168_call = mod.get_global_var('func_5168')
func_5169_call = mutated_mod.get_global_var('func_5169')
call_5652 = func_5168_call()
call_5653 = func_5168_call()
output = call_5652
output2 = call_5653
func_5659 = relay.Function([], output)
mod['func_5659'] = func_5659
mod = relay.transform.InferType()(mod)
output = func_5659()
func_5660 = relay.Function([], output)
mutated_mod['func_5660'] = func_5660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4038_call = mod.get_global_var('func_4038')
func_4040_call = mutated_mod.get_global_var('func_4040')
call_5694 = relay.TupleGetItem(func_4038_call(), 1)
call_5695 = relay.TupleGetItem(func_4040_call(), 1)
func_4988_call = mod.get_global_var('func_4988')
func_4991_call = mutated_mod.get_global_var('func_4991')
const_5714 = relay.const([[-2,-6],[9,5],[5,3],[-1,-8],[2,-10],[-9,1],[7,-6],[3,-2],[-5,3],[6,-4],[-8,-1],[-6,9],[-4,-5],[10,-8],[-3,9],[10,-10],[2,9],[-3,-8],[-3,-9],[-7,7],[9,-2],[-7,5],[-5,-5],[-8,10],[-10,5],[-5,6],[2,-7],[8,-8],[-5,8],[-1,3],[9,-2],[6,-4],[-4,-2],[4,7],[5,-4],[-9,10],[5,9],[2,3],[-1,-6],[-9,-5],[-9,-2],[-7,10],[-6,-5],[-7,10],[-4,7],[10,-7],[6,-9],[-4,-10],[3,10],[2,2],[-2,-4],[3,-2],[-2,4],[10,-4],[-7,-3],[-7,-7],[-4,10],[5,-5],[-8,-8],[2,9],[1,-3],[-7,7],[-2,-6],[-3,1],[8,-5],[-3,1],[-9,2],[1,3],[-5,10],[7,-5],[-10,-8],[-3,-10],[8,5],[-6,-3],[-5,8],[4,-7],[10,-2],[-7,-6],[7,-7],[10,-1],[-3,-2],[-3,7],[9,6],[-7,-4],[-10,-3],[-3,-1],[-2,-9],[8,-3],[-6,-3],[1,9],[-3,5],[9,6],[6,-6],[10,-9],[8,7],[10,8],[-6,-7],[10,6],[4,-5],[1,-10],[-5,-7],[-6,9],[4,9],[-5,-10],[-1,-9],[4,6],[7,10],[-5,6],[-9,-4],[9,8],[-7,-7],[-5,5],[-5,-6],[-10,-6],[-6,-6],[9,10],[6,10],[7,-9],[6,-9],[5,6],[8,9],[-8,6],[3,6],[5,7],[-2,-9],[8,5]], dtype = "int32")#candidate|5714|(126, 2)|const|int32
call_5713 = relay.TupleGetItem(func_4988_call(relay.reshape(const_5714.astype('int32'), [252,])), 6)
call_5715 = relay.TupleGetItem(func_4991_call(relay.reshape(const_5714.astype('int32'), [252,])), 6)
func_2753_call = mod.get_global_var('func_2753')
func_2754_call = mutated_mod.get_global_var('func_2754')
call_5721 = func_2753_call()
call_5722 = func_2753_call()
uop_5724 = relay.exp(call_5713.astype('float32')) # shape=(3, 84)
uop_5726 = relay.exp(call_5715.astype('float32')) # shape=(3, 84)
output = relay.Tuple([call_5694,const_5714,call_5721,uop_5724,])
output2 = relay.Tuple([call_5695,const_5714,call_5722,uop_5726,])
func_5737 = relay.Function([], output)
mod['func_5737'] = func_5737
mod = relay.transform.InferType()(mod)
output = func_5737()
func_5738 = relay.Function([], output)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2493_call = mod.get_global_var('func_2493')
func_2494_call = mutated_mod.get_global_var('func_2494')
call_5747 = func_2493_call()
call_5748 = func_2493_call()
func_3427_call = mod.get_global_var('func_3427')
func_3430_call = mutated_mod.get_global_var('func_3430')
const_5754 = relay.const([[-2.438112],[3.651450],[5.931552],[-7.202648],[0.531592],[7.502978],[8.393246],[3.080590],[5.377509],[6.538810],[-5.295082],[-6.274410],[2.788544],[5.717271],[7.092270],[-0.254155],[-0.207105],[-5.452165],[2.774093],[-0.285309],[8.765535],[-2.237313],[-6.832197],[4.554083],[2.290951],[1.999510],[-7.419398],[0.229232],[0.117942],[6.197208],[8.881105],[7.602977],[4.559993],[-6.040920],[-2.947345],[2.279812],[-1.386168],[-5.800230],[-3.034085],[-9.669051],[-1.504144],[9.059188],[8.844171],[-9.962650],[-1.743177],[3.485539],[8.937201],[7.419773],[3.415452],[-5.953354],[-0.253128],[5.293127],[5.999209],[0.252724],[3.453414],[9.306677],[1.802450],[-1.637264],[-0.589920],[-9.525022],[9.059004],[-7.618975],[-6.477422],[0.979247],[3.434459],[3.716096],[-3.125381],[-4.850432],[-8.096742],[2.450746],[3.243988],[8.050601],[4.258841],[2.589581],[3.918967],[-3.232858],[-7.082605],[0.169156],[7.395040],[-1.635599],[-4.401453],[-5.114609],[-5.891769],[7.609945],[3.391710],[2.276209],[4.887821],[9.993845],[-8.212003],[-8.958911],[-8.774141],[-8.434103],[-5.153434],[2.776944],[7.575419],[-4.872648],[7.987095],[-6.946043],[-8.165719],[-6.032676],[-0.909068],[-5.893567],[0.247752],[-2.263115],[2.941797],[8.414095],[-4.886810],[-6.397538],[8.530662],[-7.468369],[8.250673],[1.933519],[2.804738],[-1.573610],[6.858658],[6.580351],[-6.719221],[2.230162],[-0.926706],[-5.569760],[1.799969],[2.722389],[0.171113],[-6.316849],[-3.619308],[2.158136],[0.753913],[-2.185520],[-7.833235],[-2.780596],[-8.184161],[8.848147],[-7.108204],[-1.786399],[7.565303],[-1.532105],[-6.999868],[-8.460226],[7.773214],[-7.232082],[1.012853],[2.748287],[-6.786937],[5.609353],[-0.267301],[-8.768879],[-3.182566],[-1.554532],[4.058617],[3.916468],[4.253376],[6.190624],[8.842451],[8.564119],[-4.274520],[-0.379388],[-8.032553],[-1.820302],[-9.337091],[9.776157],[-3.371898],[0.689410],[-2.673515],[3.304240],[-8.573875],[-9.062566],[-0.244417],[9.433298],[6.425822],[-0.073816],[-0.542321],[2.526140],[-8.429752],[-3.189719],[2.029711],[1.030101],[5.777828],[-1.978327],[-8.926657],[8.229939],[-9.822526],[-9.465285],[4.736859],[3.456689],[2.615418],[-8.344374],[-3.457625],[-6.052253],[-3.189796],[1.370389],[-6.800847],[7.767988],[4.874770],[0.917064],[8.836689],[-5.721562],[-4.754416],[-8.349306],[-9.828651],[-4.245008],[5.571378],[-9.987013],[-4.882230],[-7.771106],[1.838885],[0.102498],[-1.921672],[8.840439],[-3.986878],[-6.009492],[-3.134341],[-8.621920],[6.911353],[-2.904095],[-2.878504],[6.949553],[-1.670758],[9.360277],[-4.962410],[0.772728],[-2.920486],[-2.834463],[8.406920],[-8.882604],[-2.200639],[6.353223],[-8.975500],[-5.402924],[-7.831912],[6.584693],[1.872938],[-3.386811],[-7.160430],[9.575559],[4.378772],[-8.427943],[7.779631],[-5.823806],[3.083614],[-2.843631],[3.970776],[-5.826629],[8.770995],[-0.740475],[2.915293],[-9.241809],[-9.887345],[-5.764740],[8.846866],[-0.070590],[-6.239629],[-7.575061],[0.528819],[-3.382733],[1.032245],[-7.779295],[-7.398049],[-2.160090],[4.278245],[9.193390],[6.350697],[-9.938895],[-0.101422],[-0.883893],[-6.916893],[-5.584697],[-0.902492],[-1.226663],[-7.931921],[-3.163348],[0.171157],[-2.716966],[9.770505],[-5.480347],[1.016527],[0.433881],[6.013196],[1.518350],[1.523072],[3.873078],[-6.674483],[-0.115152],[-6.547622],[-1.852930],[-4.496172],[6.172599],[9.283001],[5.288524],[-2.070546],[-8.240845],[-8.973014],[-2.802876],[6.027473],[1.301513],[-0.598100],[-6.956630],[4.579992],[2.878896],[7.565908],[-4.322193],[-7.219614],[1.226526],[5.534182],[-4.681822],[-8.587522],[-8.559829],[-3.855328],[0.814484],[-9.524425],[-7.842379],[7.753704],[7.346003],[-2.944018],[8.370567],[-0.085058],[0.225758],[3.554929],[-8.082493],[7.047682],[-9.940067],[9.766731],[-8.420600],[-3.961521],[2.558673],[8.920000],[5.076133],[-3.014749],[7.948571],[3.550753],[-8.297443],[-3.847532],[-8.188370],[2.069155],[-8.573784],[1.358544],[-7.922323],[7.106932],[-4.467572],[-0.130827],[-0.168349],[-0.651131],[4.725421],[-3.487475],[0.285399],[5.792132],[7.016543],[8.013624],[1.048446],[8.886101],[0.754555],[-6.861301],[9.298650],[4.158387],[5.761021],[-9.058943],[8.443522],[8.085349],[2.899481],[2.963607],[3.807132],[1.860123],[-8.980275],[-3.994289],[8.772371],[2.595354],[-0.355586],[-4.057196],[-6.978519],[-5.896968],[-3.681822],[5.702734],[2.014426],[-4.395075],[3.435550],[5.200735],[-3.327663],[1.794836],[6.923036],[-7.379023],[4.530019],[3.254629],[0.589387],[-6.284224],[8.383627],[-6.799456],[6.182725],[3.521231],[-1.445111],[0.999454],[7.023082],[7.559734],[9.501968],[-2.976362],[-6.250070],[2.841556],[3.466972],[-6.240757],[9.842538],[-5.182916],[6.968081],[-5.123693],[-6.092592],[3.933412],[6.135081],[-4.790171],[0.134904],[-9.941028],[3.829033],[9.524227],[9.967589],[9.732385],[7.268138],[9.803663],[-7.915768],[-3.570307],[-5.174379],[-4.447932],[-3.226998],[-2.611332],[6.197172],[0.458882],[-7.344105],[6.739665],[-0.160129],[7.019397],[-5.441432],[-3.208158],[-5.475382],[-5.277257],[2.039102],[-0.334580],[1.154306],[0.273917],[-6.717492],[4.601069],[-3.759356],[-7.437352],[-2.995334],[-1.033697],[-4.009707],[-2.955031],[7.681561],[3.095253],[-0.449542],[-0.789601],[-6.448835],[-3.016922],[-4.816868],[7.418130],[6.107732],[-7.297003],[5.790465],[-2.442412],[-3.901608],[1.588299],[-0.135667],[5.882923],[-7.233402],[-5.386278],[-1.494951],[0.543346],[2.735171],[-6.289988],[9.148050],[7.406904],[-4.791662],[-0.524440],[-3.340615],[6.355246],[-5.417094],[-5.702584],[-6.825843],[-3.119540],[-6.332540],[-8.892091],[6.775563],[5.842109],[3.316132],[-6.817947],[0.386695],[5.861516],[8.523462],[-6.359367],[-7.063894],[0.091079],[-8.339140],[5.598757],[0.563174],[3.448369],[-3.791802],[7.227726],[6.467919],[7.419039],[-2.189619],[5.490227],[4.703875],[-8.329614],[7.628335],[-8.190762],[-1.760934],[-3.489692],[3.371384],[-1.015157],[2.911443],[-9.307400],[3.579659],[7.790534],[-1.177892],[1.453944],[3.162589],[7.135722],[3.510797],[5.524047],[-5.545280],[-2.018906],[9.414167],[1.197041],[-0.874113],[-5.608527],[6.427576],[-1.983929],[-6.898801],[-9.987363],[-8.655520],[6.551398],[-8.148405],[-8.740111],[-2.469131],[-3.720510],[1.078474],[-4.909342],[2.475039],[-3.767241],[6.747423],[2.826802],[6.036006],[6.290192],[-7.659541],[8.193110],[6.611050],[-2.264942],[6.214513],[2.028238],[-0.520809],[-5.715499],[-8.111969],[2.936286],[-0.340357],[5.201011],[-3.739497],[-1.381462],[-3.618598],[1.763626],[0.291029],[1.923360],[5.510763],[7.062892],[-2.031580],[5.780399],[-4.502402],[7.909944],[-5.376868],[7.579596],[-6.415432],[-5.872801],[7.109493],[-8.363995],[-0.284707],[-4.788662],[-6.912185],[-7.605905],[6.093431],[-3.253395],[-3.208843],[7.193983],[4.206990],[8.182648],[6.619574],[-8.853777],[5.174440],[-3.183672],[-2.288638],[5.227356],[-9.956705],[-9.062361]], dtype = "float32")#candidate|5754|(585, 1)|const|float32
call_5753 = func_3427_call(relay.reshape(const_5754.astype('float32'), [9, 5, 13]))
call_5755 = func_3427_call(relay.reshape(const_5754.astype('float32'), [9, 5, 13]))
bop_5756 = relay.less(const_5754.astype('bool'), relay.reshape(call_5753.astype('bool'), relay.shape_of(const_5754))) # shape=(585, 1)
bop_5759 = relay.less(const_5754.astype('bool'), relay.reshape(call_5755.astype('bool'), relay.shape_of(const_5754))) # shape=(585, 1)
bop_5770 = relay.less_equal(call_5753.astype('bool'), relay.reshape(bop_5756.astype('bool'), relay.shape_of(call_5753))) # shape=(9, 5, 13)
bop_5773 = relay.less_equal(call_5755.astype('bool'), relay.reshape(bop_5759.astype('bool'), relay.shape_of(call_5755))) # shape=(9, 5, 13)
func_1500_call = mod.get_global_var('func_1500')
func_1505_call = mutated_mod.get_global_var('func_1505')
var_5788 = relay.var("var_5788", dtype = "int32", shape = (3,))#candidate|5788|(3,)|var|int32
const_5789 = relay.const([[3,-5,9,-4,-3,3,-10,-3,-6,-7,-8,7,6,-10,2,-8,-1,-3,-4,-1,1,-1,5,-4,-10,-3,6,10,-8,4,6,4,-5,-10,-1,8,-7,4,4,-4,-1,-5,-8,8,5,7,-6,-9,-7,3,-1,3,1,9,-7,10,-9,6,1,-5,-10,10,-7,-8,-9,4,2,-8,-7,6,10,-4,2,8,6,2,10,-1,-2,-1,7,-2,5,2],[9,-7,-6,9,3,-5,-3,-6,-10,7,-5,2,-6,-1,-6,-4,-2,3,-4,-10,-10,-7,-2,3,9,2,10,5,10,-8,10,-1,-3,-2,7,-3,5,-7,2,-8,1,4,-6,9,5,-2,9,9,6,-10,-3,9,4,6,-7,8,2,1,-9,4,10,-10,9,-1,-1,9,6,4,5,6,2,-2,-6,-4,5,-8,4,-4,-7,10,-7,-2,7,3],[-3,4,4,10,10,2,2,10,10,-10,10,5,-9,10,-2,-7,-1,2,8,-3,8,4,7,-7,-10,4,-9,7,7,-5,10,7,5,-9,3,-1,-1,-2,-9,-7,-8,-8,1,6,-5,-8,4,-10,-5,2,-3,9,-6,-4,2,3,-4,10,8,-3,6,10,5,9,-9,7,3,-7,9,-3,3,-4,9,-2,9,-10,7,4,-9,1,3,-1,-6,-5]], dtype = "int32")#candidate|5789|(3, 84)|const|int32
call_5787 = relay.TupleGetItem(func_1500_call(relay.reshape(var_5788.astype('int32'), [3,]), relay.reshape(const_5789.astype('int32'), [3, 84]), relay.reshape(const_5789.astype('int32'), [3, 84]), ), 3)
call_5790 = relay.TupleGetItem(func_1505_call(relay.reshape(var_5788.astype('int32'), [3,]), relay.reshape(const_5789.astype('int32'), [3, 84]), relay.reshape(const_5789.astype('int32'), [3, 84]), ), 3)
output = relay.Tuple([call_5747,bop_5770,call_5787,var_5788,const_5789,])
output2 = relay.Tuple([call_5748,bop_5773,call_5790,var_5788,const_5789,])
func_5798 = relay.Function([var_5788,], output)
mod['func_5798'] = func_5798
mod = relay.transform.InferType()(mod)
mutated_mod['func_5798'] = func_5798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5799 = relay.var("var_5799", dtype = "int32", shape = (3,))#candidate|5799|(3,)|var|int32
func_5798_call = mutated_mod.get_global_var('func_5798')
call_5800 = func_5798_call(var_5799)
output = call_5800
func_5801 = relay.Function([var_5799], output)
mutated_mod['func_5801'] = func_5801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1245_call = mod.get_global_var('func_1245')
func_1246_call = mutated_mod.get_global_var('func_1246')
call_5828 = relay.TupleGetItem(func_1245_call(), 0)
call_5829 = relay.TupleGetItem(func_1246_call(), 0)
func_5619_call = mod.get_global_var('func_5619')
func_5625_call = mutated_mod.get_global_var('func_5625')
const_5835 = relay.const([-1,-7,-2,7,-1,1,-5,-10,-9,-2,-8,8,7,6,-6,-9,-7,-9,1,6,8,-3,-8,-9,7,-7,-2,-6,9,-7,1,1,4,-9,-9,6,-2,10,1,8,-5,-4,-8,-7,4,-1,4,5,3,1,-2,-9,8,-6,-3,9,-9,-8,-5,5,1,-6,-9,2,-8,-6,-2,5,-8,-8,-3,-10,4,-1,-3,10,-2,10,9,5,-5,-8,-6,6,1,-5,-3,-1,3,5,8,-3,-2,-2,-4,-8,8,5,-8,7,5,8,-9,4,-10,-9,4,9,-4,9,-7,-7,5,-8,5,4,7,9,-10,-7,1,9,7,-3,8,-9,1,2,9,8,-5,-5,8,-8,8,1,1,-5,7,-1,2,-3,-5,-6,5,10,10,-4,-9,9,8,-7,9,9,-3,-4,-8,5,-4,-10,7,-10,-5,-7,7,-4,-5,5,-6,-1,-3,-2,-4,8,8], dtype = "uint64")#candidate|5835|(175,)|const|uint64
var_5836 = relay.var("var_5836", dtype = "float32", shape = (825,))#candidate|5836|(825,)|var|float32
call_5834 = relay.TupleGetItem(func_5619_call(relay.reshape(const_5835.astype('uint64'), [5, 5, 7]), relay.reshape(const_5835.astype('uint64'), [5, 5, 7]), relay.reshape(const_5835.astype('uint64'), [5, 5, 7]), relay.reshape(var_5836.astype('float32'), [5, 165]), ), 2)
call_5837 = relay.TupleGetItem(func_5625_call(relay.reshape(const_5835.astype('uint64'), [5, 5, 7]), relay.reshape(const_5835.astype('uint64'), [5, 5, 7]), relay.reshape(const_5835.astype('uint64'), [5, 5, 7]), relay.reshape(var_5836.astype('float32'), [5, 165]), ), 2)
bop_5842 = relay.minimum(var_5836.astype('int16'), relay.reshape(call_5834.astype('int16'), relay.shape_of(var_5836))) # shape=(825,)
bop_5845 = relay.minimum(var_5836.astype('int16'), relay.reshape(call_5837.astype('int16'), relay.shape_of(var_5836))) # shape=(825,)
output = relay.Tuple([call_5828,const_5835,bop_5842,])
output2 = relay.Tuple([call_5829,const_5835,bop_5845,])
func_5848 = relay.Function([var_5836,], output)
mod['func_5848'] = func_5848
mod = relay.transform.InferType()(mod)
mutated_mod['func_5848'] = func_5848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5849 = relay.var("var_5849", dtype = "float32", shape = (825,))#candidate|5849|(825,)|var|float32
func_5848_call = mutated_mod.get_global_var('func_5848')
call_5850 = func_5848_call(var_5849)
output = call_5850
func_5851 = relay.Function([var_5849], output)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5952 = relay.var("var_5952", dtype = "int64", shape = (4, 8, 3))#candidate|5952|(4, 8, 3)|var|int64
const_5953 = relay.const([[[-2,-10,7],[-8,-5,8],[-8,1,7],[-6,-10,6],[10,-4,-7],[-6,-4,-10],[10,9,6],[7,10,8]],[[1,6,3],[-9,1,-9],[2,7,-2],[10,8,-7],[-7,-8,4],[6,-10,-7],[4,5,-9],[6,-10,1]],[[10,3,-9],[2,-5,-6],[-6,4,-5],[-8,5,6],[8,7,-3],[-9,8,-2],[-2,-4,7],[-8,2,-9]],[[-3,6,8],[1,-2,-3],[5,-9,-6],[1,-7,7],[-4,-7,8],[-3,-2,-8],[1,-6,10],[-9,1,-9]]], dtype = "int64")#candidate|5953|(4, 8, 3)|const|int64
bop_5954 = relay.equal(var_5952.astype('bool'), relay.reshape(const_5953.astype('bool'), relay.shape_of(var_5952))) # shape=(4, 8, 3)
output = bop_5954
output2 = bop_5954
func_5963 = relay.Function([var_5952,], output)
mod['func_5963'] = func_5963
mod = relay.transform.InferType()(mod)
mutated_mod['func_5963'] = func_5963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5964 = relay.var("var_5964", dtype = "int64", shape = (4, 8, 3))#candidate|5964|(4, 8, 3)|var|int64
func_5963_call = mutated_mod.get_global_var('func_5963')
call_5965 = func_5963_call(var_5964)
output = call_5965
func_5966 = relay.Function([var_5964], output)
mutated_mod['func_5966'] = func_5966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_685_call = mod.get_global_var('func_685')
func_687_call = mutated_mod.get_global_var('func_687')
call_5991 = relay.TupleGetItem(func_685_call(), 0)
call_5992 = relay.TupleGetItem(func_687_call(), 0)
output = call_5991
output2 = call_5992
func_5995 = relay.Function([], output)
mod['func_5995'] = func_5995
mod = relay.transform.InferType()(mod)
mutated_mod['func_5995'] = func_5995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5995_call = mutated_mod.get_global_var('func_5995')
call_5996 = func_5995_call()
output = call_5996
func_5997 = relay.Function([], output)
mutated_mod['func_5997'] = func_5997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mod.get_global_var('func_3538')
func_3539_call = mutated_mod.get_global_var('func_3539')
call_6004 = relay.TupleGetItem(func_3538_call(), 0)
call_6005 = relay.TupleGetItem(func_3539_call(), 0)
func_4889_call = mod.get_global_var('func_4889')
func_4892_call = mutated_mod.get_global_var('func_4892')
var_6054 = relay.var("var_6054", dtype = "int64", shape = (40, 2))#candidate|6054|(40, 2)|var|int64
call_6053 = relay.TupleGetItem(func_4889_call(relay.reshape(var_6054.astype('int64'), [8, 2, 5]), relay.reshape(var_6054.astype('int64'), [8, 2, 5]), ), 0)
call_6055 = relay.TupleGetItem(func_4892_call(relay.reshape(var_6054.astype('int64'), [8, 2, 5]), relay.reshape(var_6054.astype('int64'), [8, 2, 5]), ), 0)
output = relay.Tuple([call_6004,call_6053,var_6054,])
output2 = relay.Tuple([call_6005,call_6055,var_6054,])
func_6073 = relay.Function([var_6054,], output)
mod['func_6073'] = func_6073
mod = relay.transform.InferType()(mod)
mutated_mod['func_6073'] = func_6073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6074 = relay.var("var_6074", dtype = "int64", shape = (40, 2))#candidate|6074|(40, 2)|var|int64
func_6073_call = mutated_mod.get_global_var('func_6073')
call_6075 = func_6073_call(var_6074)
output = call_6075
func_6076 = relay.Function([var_6074], output)
mutated_mod['func_6076'] = func_6076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5417_call = mod.get_global_var('func_5417')
func_5419_call = mutated_mod.get_global_var('func_5419')
call_6097 = relay.TupleGetItem(func_5417_call(), 0)
call_6098 = relay.TupleGetItem(func_5419_call(), 0)
output = call_6097
output2 = call_6098
func_6102 = relay.Function([], output)
mod['func_6102'] = func_6102
mod = relay.transform.InferType()(mod)
output = func_6102()
func_6103 = relay.Function([], output)
mutated_mod['func_6103'] = func_6103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_6146 = relay.TupleGetItem(func_4365_call(), 0)
call_6147 = relay.TupleGetItem(func_4367_call(), 0)
var_6151 = relay.var("var_6151", dtype = "float32", shape = (2, 15, 11))#candidate|6151|(2, 15, 11)|var|float32
bop_6152 = relay.greater(call_6146.astype('bool'), relay.reshape(var_6151.astype('bool'), relay.shape_of(call_6146))) # shape=(2, 15, 11)
bop_6155 = relay.greater(call_6147.astype('bool'), relay.reshape(var_6151.astype('bool'), relay.shape_of(call_6147))) # shape=(2, 15, 11)
output = bop_6152
output2 = bop_6155
func_6167 = relay.Function([var_6151,], output)
mod['func_6167'] = func_6167
mod = relay.transform.InferType()(mod)
mutated_mod['func_6167'] = func_6167
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6168 = relay.var("var_6168", dtype = "float32", shape = (2, 15, 11))#candidate|6168|(2, 15, 11)|var|float32
func_6167_call = mutated_mod.get_global_var('func_6167')
call_6169 = func_6167_call(var_6168)
output = call_6169
func_6170 = relay.Function([var_6168], output)
mutated_mod['func_6170'] = func_6170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1256_call = mod.get_global_var('func_1256')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_6197 = func_1256_call()
call_6198 = func_1256_call()
output = call_6197
output2 = call_6198
func_6209 = relay.Function([], output)
mod['func_6209'] = func_6209
mod = relay.transform.InferType()(mod)
mutated_mod['func_6209'] = func_6209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6209_call = mutated_mod.get_global_var('func_6209')
call_6210 = func_6209_call()
output = call_6210
func_6211 = relay.Function([], output)
mutated_mod['func_6211'] = func_6211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1851_call = mod.get_global_var('func_1851')
func_1853_call = mutated_mod.get_global_var('func_1853')
call_6217 = relay.TupleGetItem(func_1851_call(), 0)
call_6218 = relay.TupleGetItem(func_1853_call(), 0)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
call_6224 = relay.TupleGetItem(func_4435_call(), 0)
call_6225 = relay.TupleGetItem(func_4437_call(), 0)
func_5304_call = mod.get_global_var('func_5304')
func_5308_call = mutated_mod.get_global_var('func_5308')
var_6228 = relay.var("var_6228", dtype = "int64", shape = (700,))#candidate|6228|(700,)|var|int64
const_6229 = relay.const([-6.832487,7.301553,7.121482,-0.403106,-2.583001,0.801248,-5.117823,1.158030,-8.912033,-6.769376,-6.675093,-4.956692,6.172603,9.169779,-5.189748,-9.565634,-3.624320,-5.478647,9.374839,8.465412,-4.991837,-1.103887,-7.913050,-1.677336,4.779937,-2.187779,-1.198965,-9.564331,-4.565647,-0.311943,-5.529316,-2.106352,1.774666,-9.156454,4.709763,-1.921064,-6.487027,-6.166451,2.639576,4.469059,2.337048,-9.000908,-5.371824,-3.513032,-4.779106,-6.082025,3.396149,9.153721,6.984159,-0.403970,7.416002,2.552454,0.497418,-2.509226,-3.666145,2.219754,7.066334,9.734297,-1.215417,5.091848,6.367859,-2.751496,-6.934269,7.437412,5.666125,-4.235623,-4.787419,2.391483,4.681245,-4.194999,4.091218,2.246372,6.310328,1.887534,-2.694667,-2.439216,-8.139273,7.896309,-8.330972,-8.828157,-6.306437,-8.284151,-5.347932,-3.713957,-9.084885,-6.465860,-4.050074,-6.305668,-8.033054,3.285682,-6.995388,-4.223425,-9.800559,4.583809,-5.176758,7.739990,-3.010376,-0.739800,5.906537,-0.784682,6.610413,4.610600,9.729161,-5.887591,0.664759,-2.952584,4.138772,-9.219066,-2.412248,2.156273,-4.744406,6.684263,-2.127908,8.180580,-2.549412,5.226793,-6.479934,0.113860,9.884007,-5.095234,-2.651575,-3.115680,1.446675,6.606297,8.843969,3.783971,7.208763,-8.173812,-1.953025,1.141933,-0.011060,-7.875606,-9.887031,-2.700985,0.100238,-0.057300,2.164364,-7.364898,-4.417843,6.244341,-8.221458,6.068906,3.729798,4.307725,0.040533,1.695981,-4.314615,6.866617,7.416500,-4.762672,-8.543068,-3.427780,2.448758,-8.590320,7.889713,5.749952,-2.030953,3.532618,5.258971,6.735354,-9.250980,-2.190850,3.043752,4.128275,3.811685,4.653972,-8.366453,9.447865,-1.212246,6.527122,5.705466,5.146915,7.464750,-3.752265,-7.124125,-7.562839,-6.784663,3.826822,-6.448398,-2.653914,-2.827710,8.078509,-5.296242,-0.169136,-4.110253,-1.631695,8.684517,-3.335600,-0.033443,5.285752,-4.306538,5.875831,-1.459046,-2.982705,4.997927,-8.141511,4.360447,2.944331,-9.740115,-6.695701,3.036477,2.002053,5.726348,-8.863001,-9.735090,-0.018503,4.074359,5.272318,-4.612451,-3.089553,-8.046732,5.493004,-0.204751,3.746233,-7.230237,2.321217,-2.941097,-6.681030,-9.001815,-5.765944,-3.452204,-6.306141,-7.544191,8.287198,7.201286,2.697321,-3.766254,4.221385,0.636598,-1.063262,0.554052,1.205594,-1.420287,0.142321,-8.421443,3.292012,-2.249642,-1.517352,8.431873,9.026471,2.946430,-9.732988,1.949177,-0.068385,1.682562,-7.635585,1.481753,-8.416268,-5.733725,-0.140899,0.306635,1.228760,3.519766,9.427769,-6.875524,-9.087245,0.427543,1.709265,-3.225958,4.738555,-7.556753,-6.093019,2.929888,1.568334,-0.786477,8.499632,6.353637,0.167541,-1.569445,1.825575,2.373761,6.560076,4.567412,1.935859,-5.704106,7.735624,2.232290,-5.656083,-9.881880,-9.689911,-9.965961,4.381651,-3.207853,-2.590678,8.467921,6.573016,0.253626,4.468580,-4.717478,7.042888,7.893529,6.188069,-7.306440,4.349100,-4.725824,-5.190784,7.658996,-5.556638,-8.904925,4.268906,4.264690,5.323121,7.163291,2.194439,2.276951,-7.069741,8.272651,2.877289,-4.670962,-9.533317,-0.784201,7.011253,-1.201313,-4.930598,-6.038031,-0.514570,-4.409472,4.231419,-3.878110,0.165621,2.499000,-7.684191,-4.191893,-3.490194,0.042144,3.580261,8.310711,5.409746,-2.518054,6.700291,4.270898,-8.384517,2.997174,8.256427,-3.754545,3.332409,9.088337,-7.849140,-8.961063,-5.416197,-4.514955,7.308547,-0.697408,3.261664,-0.041021,1.161293,2.888521,-0.249384,8.497340,-5.895621,-4.585267,9.665202,-1.188776,7.218046,7.719842,-4.210860,4.457433,0.369016,-7.398005,3.282054,6.263912,0.353763,-4.704014,8.777908], dtype = "float64")#candidate|6229|(364,)|const|float64
const_6230 = relay.const([-5.782293,1.518611,2.690058,2.233346,-9.888666,-4.493467,1.346908,1.794512,8.242841,8.001941,-2.325060,1.190018,-9.973735,-6.490935,-1.675966,1.994568,7.646487,0.691337,-4.631084,4.197104,-6.211700,-1.046460,4.918323,-5.941057,-2.303285,-3.005156,-9.369388,-8.542376,-4.232029,-4.464579,5.168575,2.395661,3.878375,1.399614,7.275908,-8.235485,5.753276,-9.140695,6.846966,3.757692,-0.377535,-2.034575,3.214472,4.547727,3.573212,-7.608942,1.647911,9.174164,8.583529,-9.413605,5.465778,-6.696099,-5.930205,-2.173889,2.386731,4.180467,1.356739,-3.325055,-7.891710,-0.111605,-5.944064,-2.778926,6.464124,-3.059601,1.629012,5.391016,3.473360,9.941969,-5.026852,0.903127,8.301354,4.807213,-3.135092,5.262644,9.048952,9.209680,-7.429002,-4.350019,5.325103,-3.337570,5.539311,-3.214208,-2.100895,-5.471878,3.118472,-0.422762,5.210554,7.541517,-3.746560,-2.299440,-4.663230,7.699801,-9.269045,-3.386807,-4.636713,-9.072124,7.710208,-4.823864,-4.411112,-1.514528,7.898188,-0.682830,2.825094,-9.473770,-3.950664,9.485290,-4.183902,1.902169,-0.575072,0.193803,9.692350,7.327848,-2.326539,-7.999163,-3.670981,-3.260439,2.623574,-5.514268,-0.204980,-1.551939,-1.365257,7.522538,-2.468683,7.534709,4.461533,8.918131,-9.173291,5.354446,7.912011,1.015491,-4.719460,9.944188,-7.007088,-3.141854,-0.099291,5.738753,4.332875,-5.699243,5.774901,-6.863691,-3.356020,9.709838,-3.409433,7.340860,-9.318718,-9.148762,-4.436075,5.651276,7.614540,5.581461,-6.394897,-4.109132,7.425680,-7.640103,-5.489661,6.073374,-8.770814,3.406027,4.906003,-3.582175,3.461885,6.157957,-1.767929,-7.701369,-8.528598,-1.399740,-6.043392,-6.415725,3.283524,9.310210,-9.389194,-1.939626,1.332278,0.506647,-4.518081,1.927133,-3.412636,6.279989,1.025851,5.469439,9.363803,-6.592062,-2.402136,4.947727,0.119943,-2.659266,-8.062897,7.989770,-7.816759,-1.681629,-8.432617,1.711857,-1.027534,-3.550950,-9.649316,-3.659447,0.872642,-1.880579,2.655285,0.987259,-3.671167,-0.619178,-1.973047,-3.149516,5.316054,9.842074,-7.725567,-8.192826,8.252714,-7.267702,-0.648066,3.492179,-4.339286,-9.133755,4.933539,-2.389060,8.487624,-3.068880,-6.462192,-6.606690,-5.636703,-5.621563,-0.766002,2.459363,1.363799,-1.519752,-3.244717,8.983130,2.527948,4.378232,9.472165,-3.494066,-1.912721,-7.429114,9.752563,-6.181541,-1.707457,5.364318,-9.378602,-4.974402,-6.231169,9.272736,-7.730359,8.191185,-5.909066,-0.567556,0.082576,-1.413271,-2.847657,-3.238132,-4.499332,9.299434,5.052928,6.980175,8.117391,4.293158,-3.070739,2.441507,5.133566,-6.131276,3.552186,6.281100,1.465952,-9.479958,-8.574750,-4.980452,-9.100659,5.801544,-1.577739,6.339455,-8.417695,7.951935,9.076338,1.927695,-0.531818,7.683341,1.112971,-7.046954,-7.587082,-5.144395,3.421940,0.353848,-9.845099,-4.836898,-0.778574,-2.518542,-1.714436,1.691699,-9.136240,6.014736,3.278324,-2.808285,2.380225,7.900646,-5.326429,8.777219,-8.186481,8.867629,6.580318,3.654073,7.383817,0.972781,-6.357135,8.619461,5.248494,6.237197,8.720388,3.787776,-0.193692,4.567927,-1.710005,-5.971440,8.405176,5.537501,1.235296,-8.811678,5.059641,1.633050,8.886836,-0.520904,9.544016,1.528379,-6.275571,4.510293,7.933155,1.286345,2.945596,4.348363,1.650616,-6.652645,4.878563,3.008141,-2.685267,-5.892530,8.451287,-1.274402,-0.869018,-3.471990,2.416912,2.054188,-4.059899,-1.396758,2.870128,-3.086844,1.865221,4.730633,-9.564494,7.294908,7.592198,-9.065789,-0.938063,1.230399,-8.543620,4.482958,-8.924049,-1.415735,7.755973,-3.409479,-7.994831,1.229585,5.378614,2.084827,6.910154,-6.543689,-5.405371,-0.664160,-9.516212,-7.843405,6.718166,-9.583662,-6.630690,-2.379774,6.024210,-7.607563,0.029491,7.333714,5.872077,-9.264992,2.654155,5.131316,3.425870,1.518878,-3.573400,-5.548440,1.250345,9.676391,-2.873869,-8.312051,-1.182181,8.779807,-8.023568,5.268013,9.386591,7.820120,-5.852797,8.332389,-2.859596,3.456184,-2.978281,-5.518040,-9.258616,0.282355,0.468051,8.980898,9.855202,2.112080,9.888256,2.839808,7.031478,-5.476462,5.153253,3.185796,-5.331620,-1.567292,8.033769,-4.429852,-8.424501,-0.752311,9.086231,-1.833586,-3.366721,1.721849,-0.399091,0.612665,9.215275,1.727564,9.485544,-7.435566,-7.407254,-7.802484,7.136922,1.898356,-1.445099,3.154808,4.665717,-8.423166,2.761938,-5.804846,-4.290613,0.609487,1.551821,3.985603,-3.169098,-7.979690,-0.651214,-6.242490,8.478538,-3.563325,5.906156,-0.330740,3.058397,-1.836018,-0.219931,-6.249490,-6.306703,-3.795511,-5.172153,-6.178387,5.812784,1.263018,4.940500,7.561150,-2.613108,5.497660,4.000303,-6.224968,-2.843691,7.790896,2.801925,-2.597211,-2.198071,2.077096,-5.444323,3.477387,-7.801617,9.959521,-1.894226,3.988857,-8.108270,-8.799315,-6.775290,-8.739197,3.260419,2.996726,2.943627,1.719587,-9.379131,7.408099,-9.265028,-8.136356,3.273289,2.869401,-7.335327,-6.379945,1.204019,-0.890653,-4.228247,-9.355692,-3.233225,-6.872912,0.050628,2.450074,6.071965,-8.215435,8.480582,-0.839896,1.799016,-6.208090,-6.265785,-5.105032,4.803185,7.066377,-6.558157,-1.540433,7.442817,-2.794036,-5.931017,-4.100902,-5.769601,2.854083,7.972121,9.934485,1.100056,-5.766530,-1.782064,4.076807,1.084193,3.657372,9.655199,5.422377,9.775955,8.662021,7.161206,8.353216,2.203250,-7.996830,-9.887997,8.204669,6.980299,-0.044120,-2.926729,-1.046065,-2.480652,8.585832,3.319807,3.813423,2.978392,-4.333874,-6.426724,-2.275894,-7.163542,3.729586,-6.554332,4.550389,-7.455662,-0.352618,8.755886,2.605758,-3.840926,4.324800,2.220613,-0.982644,-7.194746,9.276959,-3.006252,-0.399919,-5.933843,-0.698946,-3.767653,9.419062,6.571145,8.340132,-0.641574,-7.124818,-3.773174,-5.633592,-4.471271,-6.204341,1.883515,-0.427841,4.534978,-1.522505,-3.168384,7.267278,-9.798518,5.194598,-6.835949,0.586869,0.149707,6.855174,1.449175,8.878545,3.912490,-7.629320,-8.746779,-9.228932,3.964508,4.683082,2.871638,-8.027852,4.756994,7.987564,8.918653,-2.235701,1.371879,-4.912298,6.632795,-4.907173,9.132847,7.055483,3.821049,9.377548,5.999810,-1.605043,7.947920,-6.155024,9.558330,-6.371406,-3.341790,7.859281,9.179884,0.708809,-6.597768,9.507988,-2.580406,4.201557,-7.128720,8.335546,3.311514,6.686160,-7.561135,-3.289269,2.082419,-4.674941,7.480996,1.296367,4.359158,-9.642119,1.813016,7.613979,-2.140499,3.311762,-4.860727,-5.986463,5.132951,-4.227020,-1.890050,8.899148,-4.112743,9.778091,7.952176,-4.048659,5.140731,-4.697252,-1.835709,6.717065,-5.837993,8.011306,7.221144,7.845226,7.815790,-7.038295,-2.503372,-9.666867,-6.115052,-6.970526,-3.750230,-6.776202,0.757557,-6.219706,7.383823,6.825808,6.912798,-9.883184,-8.565839,9.466752,9.034884,8.443693,2.488933,-1.142341,-2.953210,7.613712,9.695685,-7.241774,8.606608,-4.050044,-8.141642,-1.480807,7.750363,-7.624729,-1.116835,8.047551,-8.808486,1.945948,-1.172778,6.278913,4.921219,-7.352842,-6.851681,0.967393,1.068996,-8.509566,4.443140,0.257626,4.214445,3.573132,1.313995,-5.105313,7.252452,4.243250,4.201706,-3.543331,-9.103864,-5.808898,-4.949467,-8.985324,6.668050,0.825037,5.040144,6.847263,0.532352,3.048803,-0.036534,-4.693644,9.689729,2.169907,-2.778250,5.181389,-8.275485,7.364257,-3.607297,9.253259,1.767827,-5.885177,1.290249,7.834744,-3.710966,-7.404287,-2.599952,7.421730,-9.827395,0.959058,-3.893930,7.057637,-3.534450,7.934274,-5.588130,-7.212679,-4.188652,2.709777,6.676965,-8.577766,7.467981,-1.297943,8.660107,9.912984,-2.868761,-4.551130,-6.233479,-9.645026,-4.643088,7.047081,-9.335627,-9.279107,-8.617493,-1.895831,4.946980,-9.662167,9.381756,-4.829191,-8.658556,6.391715,-2.626840,3.922363,9.631247,8.378056,-4.459779,8.038448,7.025871,6.834290,0.832955,0.129546,-2.254235,3.234868,-4.564377,-0.500383,3.198102,3.910766,9.164315,-6.763850,-2.661098,-4.512558,-5.621938,0.244584,-0.656082,-2.356345,0.415396,-5.910508,8.954460,2.080229,6.398458,-5.066869,5.844694,2.207519,-9.982792,-5.058496,3.976534,8.072195,-4.016395,6.725010,7.388271,-1.403437,8.633245,-5.566215,-6.759746,-6.987987,4.018406,-5.288791,9.904782,2.499025,-8.650230,-3.901129,4.772624,3.188995,0.663684], dtype = "float32")#candidate|6230|(825,)|const|float32
call_6227 = relay.TupleGetItem(func_5304_call(relay.reshape(var_6228.astype('int64'), [700,]), relay.reshape(const_6229.astype('float64'), [4, 91]), relay.reshape(const_6230.astype('float32'), [825,]), ), 0)
call_6231 = relay.TupleGetItem(func_5308_call(relay.reshape(var_6228.astype('int64'), [700,]), relay.reshape(const_6229.astype('float64'), [4, 91]), relay.reshape(const_6230.astype('float32'), [825,]), ), 0)
output = relay.Tuple([call_6217,call_6224,call_6227,var_6228,const_6229,const_6230,])
output2 = relay.Tuple([call_6218,call_6225,call_6231,var_6228,const_6229,const_6230,])
func_6236 = relay.Function([var_6228,], output)
mod['func_6236'] = func_6236
mod = relay.transform.InferType()(mod)
var_6237 = relay.var("var_6237", dtype = "int64", shape = (700,))#candidate|6237|(700,)|var|int64
output = func_6236(var_6237)
func_6238 = relay.Function([var_6237], output)
mutated_mod['func_6238'] = func_6238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mod.get_global_var('func_2977')
func_2979_call = mutated_mod.get_global_var('func_2979')
call_6256 = relay.TupleGetItem(func_2977_call(), 0)
call_6257 = relay.TupleGetItem(func_2979_call(), 0)
func_3629_call = mod.get_global_var('func_3629')
func_3630_call = mutated_mod.get_global_var('func_3630')
call_6281 = func_3629_call()
call_6282 = func_3629_call()
func_1465_call = mod.get_global_var('func_1465')
func_1467_call = mutated_mod.get_global_var('func_1467')
call_6284 = relay.TupleGetItem(func_1465_call(), 0)
call_6285 = relay.TupleGetItem(func_1467_call(), 0)
output = relay.Tuple([call_6256,call_6281,call_6284,])
output2 = relay.Tuple([call_6257,call_6282,call_6285,])
func_6287 = relay.Function([], output)
mod['func_6287'] = func_6287
mod = relay.transform.InferType()(mod)
mutated_mod['func_6287'] = func_6287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6287_call = mutated_mod.get_global_var('func_6287')
call_6288 = func_6287_call()
output = call_6288
func_6289 = relay.Function([], output)
mutated_mod['func_6289'] = func_6289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2338_call = mod.get_global_var('func_2338')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_6321 = relay.TupleGetItem(func_2338_call(), 0)
call_6322 = relay.TupleGetItem(func_2339_call(), 0)
func_5737_call = mod.get_global_var('func_5737')
func_5738_call = mutated_mod.get_global_var('func_5738')
call_6330 = relay.TupleGetItem(func_5737_call(), 0)
call_6331 = relay.TupleGetItem(func_5738_call(), 0)
output = relay.Tuple([call_6321,call_6330,])
output2 = relay.Tuple([call_6322,call_6331,])
func_6337 = relay.Function([], output)
mod['func_6337'] = func_6337
mod = relay.transform.InferType()(mod)
output = func_6337()
func_6338 = relay.Function([], output)
mutated_mod['func_6338'] = func_6338
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6362 = relay.const([[[-6.131874,2.540411,-3.757410,-7.931972,-6.415637,1.730139,-4.029833,1.548116]],[[-6.522280,5.405223,1.267271,-8.495921,7.808109,-4.232567,1.899003,2.832692]],[[-7.487328,9.795288,-4.675041,5.798482,-0.437073,4.235645,-2.908488,1.473106]],[[-9.402628,-7.505340,8.419988,4.475643,-0.867546,-6.154323,8.053488,-5.487826]],[[-8.741864,6.083289,3.085385,-3.745186,2.916650,-1.655282,-9.673481,-5.218613]],[[-5.496418,-6.465495,6.798354,-0.904245,4.295970,6.651775,7.217578,4.731988]],[[-6.017849,-5.917147,2.681013,2.991076,-8.549505,-0.620317,0.319186,-1.837858]],[[-7.589096,6.746408,-7.176908,9.240725,9.950867,5.262804,-2.753480,-3.194540]]], dtype = "float64")#candidate|6362|(8, 1, 8)|const|float64
var_6363 = relay.var("var_6363", dtype = "float64", shape = (8, 9, 8))#candidate|6363|(8, 9, 8)|var|float64
bop_6364 = relay.floor_mod(const_6362.astype('float64'), var_6363.astype('float64')) # shape=(8, 9, 8)
output = bop_6364
output2 = bop_6364
func_6369 = relay.Function([var_6363,], output)
mod['func_6369'] = func_6369
mod = relay.transform.InferType()(mod)
mutated_mod['func_6369'] = func_6369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6370 = relay.var("var_6370", dtype = "float64", shape = (8, 9, 8))#candidate|6370|(8, 9, 8)|var|float64
func_6369_call = mutated_mod.get_global_var('func_6369')
call_6371 = func_6369_call(var_6370)
output = call_6371
func_6372 = relay.Function([var_6370], output)
mutated_mod['func_6372'] = func_6372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3287_call = mod.get_global_var('func_3287')
func_3289_call = mutated_mod.get_global_var('func_3289')
call_6387 = relay.TupleGetItem(func_3287_call(), 1)
call_6388 = relay.TupleGetItem(func_3289_call(), 1)
uop_6391 = relay.exp(call_6387.astype('float64')) # shape=(16, 8, 8)
uop_6393 = relay.exp(call_6388.astype('float64')) # shape=(16, 8, 8)
func_4006_call = mod.get_global_var('func_4006')
func_4008_call = mutated_mod.get_global_var('func_4008')
call_6394 = func_4006_call()
call_6395 = func_4006_call()
output = relay.Tuple([uop_6391,call_6394,])
output2 = relay.Tuple([uop_6393,call_6395,])
func_6397 = relay.Function([], output)
mod['func_6397'] = func_6397
mod = relay.transform.InferType()(mod)
mutated_mod['func_6397'] = func_6397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6397_call = mutated_mod.get_global_var('func_6397')
call_6398 = func_6397_call()
output = call_6398
func_6399 = relay.Function([], output)
mutated_mod['func_6399'] = func_6399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5737_call = mod.get_global_var('func_5737')
func_5738_call = mutated_mod.get_global_var('func_5738')
call_6408 = relay.TupleGetItem(func_5737_call(), 0)
call_6409 = relay.TupleGetItem(func_5738_call(), 0)
output = call_6408
output2 = call_6409
func_6437 = relay.Function([], output)
mod['func_6437'] = func_6437
mod = relay.transform.InferType()(mod)
mutated_mod['func_6437'] = func_6437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6437_call = mutated_mod.get_global_var('func_6437')
call_6438 = func_6437_call()
output = call_6438
func_6439 = relay.Function([], output)
mutated_mod['func_6439'] = func_6439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mod.get_global_var('func_3450')
func_3451_call = mutated_mod.get_global_var('func_3451')
call_6478 = func_3450_call()
call_6479 = func_3450_call()
output = relay.Tuple([call_6478,])
output2 = relay.Tuple([call_6479,])
func_6486 = relay.Function([], output)
mod['func_6486'] = func_6486
mod = relay.transform.InferType()(mod)
mutated_mod['func_6486'] = func_6486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6486_call = mutated_mod.get_global_var('func_6486')
call_6487 = func_6486_call()
output = call_6487
func_6488 = relay.Function([], output)
mutated_mod['func_6488'] = func_6488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_6639 = func_2452_call()
call_6640 = func_2452_call()
func_2493_call = mod.get_global_var('func_2493')
func_2494_call = mutated_mod.get_global_var('func_2494')
call_6655 = func_2493_call()
call_6656 = func_2493_call()
func_6236_call = mod.get_global_var('func_6236')
func_6238_call = mutated_mod.get_global_var('func_6238')
const_6662 = relay.const([10,2,5,-9,-7,7,10,-5,2,-7,9,-7,-10,9,7,-3,6,-7,1,-3,-9,-4,-4,4,-10,2,-4,6,7,-3,-1,-1,2,-10,-4,-1,-5,1,-6,5,5,5,6,5,-9,10,-3,-9,-1,-9,-1,-7,5,-6,-5,7,8,-1,-5,8,3,4,-8,-4,-1,3,1,-8,10,-9,5,-6,2,-5,-4,-1,-10,-4,9,7,-10,1,2,10,-3,8,-7,-1,4,5,9,-6,2,-7,-9,-10,5,-10,1,9,-1,4,-3,-6,-2,-6,9,-10,-3,10,3,3,-1,7,5,10,4,3,-8,6,-1,1,-6,9,-1,-3,10,4,-9,5,-8,-9,8,2,2,-8,-2,-1,1,10,-2,8,-9,3,-3,1,3,4,3,-9,-5,7,7,8,9,-2,4,-3,10,2,-4,7,-4,-1,8,-1,-9,2,6,4,1,6,-3,8,-5,-9,5,10,-6,6,3,8,-4,7,-4,5,6,1,-2,-5,9,-10,9,-4,1,10,5,-5,10,-1,1,-10,-9,6,-9,-10,4,-5,-10,-9,-6,2,-9,-4,-8,-5,-1,8,7,-3,5,-7,3,-2,-10,1,-8,-9,1,7,-6,-10,7,-9,2,-3,5,-3,-1,-9,-6,6,7,-2,-9,-10,1,-6,-6,3,4,4,-5,8,-4,6,9,-3,-1,7,-3,-7,-6,3,7,-1,-3,2,2,3,-7,5,4,4,-2,-5,7,1,6,-7,-1,6,1,-1,8,-8,-6,-2,-10,4,-9,-1,3,-2,-8,-4,7,-3,7,-1,2,9,4,-6,2,-8,-3,9,-1,-6,2,-7,9,-9,-6,1,-2,5,4,2,-3,8,9,1,10,8,5,-3,5,-1,2,10,6,2,7,7,6,6,-1,-7,2,5,9,6,-1,7,-10,-9,-10,-6,7,-7,-7,10,9,2,-3,1,-6,7,5,-1,9,-1,3,8,-3,6,-7,9,-6,-7,10,10,-8,-5,9,8,-8,-10,6,-4,4,-10,-6,9,2,10,8,9,-7,7,-10,7,-3,8,7,-10,-2,6,-9,-2,2,4,4,-6,-6,8,-7,4,3,1,6,5,-2,-7,-5,-4,5,-7,-1,-9,-5,3,-5,3,-10,2,-8,3,-5,2,1,6,-6,-4,-5,4,-3,1,-3,-6,1,-7,4,-2,2,10,2,1,9,4,10,4,-4,-1,-3,10,-6,6,8,-8,2,6,-6,-3,-2,-10,5,-6,-3,6,6,2,4,2,4,2,10,9,7,-2,8,-3,-8,-2,8,6,5,-5,-4,10,-7,-3,10,-2,1,-8,-5,-2,10,3,3,1,5,-8,1,6,-10,-6,10,-9,-1,10,6,9,5,5,9,-7,-1,5,2,-1,-2,-3,2,-3,-9,-1,4,-4,-1,-10,-4,-7,3,7,5,8,-3,-10,-4,-10,-6,9,-10,-3,-1,-1,10,-10,-10,-6,2,-4,4,-10,7,-1,-10,6,-5,-8,10,1,-7,-2,-5,4,2,-2,2,-7,3,-5,-10,4,-8,2,-4,-9,-4,-10,9,8,-3,-10,-6,7,6,-4,-3,-2,1,-10,-6,7,-9,-1,-10,2,1,10,10,9,-9,2,1,2,7,8,10,3,2,-10,3,8,7,-3,7,-2,-5,8,-8,10,2,-7,3,4,6,-10,9,4,7,-10,1,1,-8,-4,7,10,-3,-4,10,4,5,4,-3,7,-8,-4,-10,-5,-4,-5,-4,-4,5,-5,-7,9,-6,-3,3,-9,-8,-10,-10,7,5,-6,-8,-7,-8,5,5,5,-9,10,-10,-3,-4,9,1,9,-9,-6,-5,9,7,-9,8,-4,4,-10,-3,-5,9,2], dtype = "int64")#candidate|6662|(700,)|const|int64
call_6661 = relay.TupleGetItem(func_6236_call(relay.reshape(const_6662.astype('int64'), [700,])), 1)
call_6663 = relay.TupleGetItem(func_6238_call(relay.reshape(const_6662.astype('int64'), [700,])), 1)
output = relay.Tuple([call_6639,call_6655,call_6661,const_6662,])
output2 = relay.Tuple([call_6640,call_6656,call_6663,const_6662,])
func_6694 = relay.Function([], output)
mod['func_6694'] = func_6694
mod = relay.transform.InferType()(mod)
mutated_mod['func_6694'] = func_6694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6694_call = mutated_mod.get_global_var('func_6694')
call_6695 = func_6694_call()
output = call_6695
func_6696 = relay.Function([], output)
mutated_mod['func_6696'] = func_6696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mod.get_global_var('func_3538')
func_3539_call = mutated_mod.get_global_var('func_3539')
call_6713 = relay.TupleGetItem(func_3538_call(), 0)
call_6714 = relay.TupleGetItem(func_3539_call(), 0)
func_1795_call = mod.get_global_var('func_1795')
func_1797_call = mutated_mod.get_global_var('func_1797')
call_6716 = func_1795_call()
call_6717 = func_1795_call()
output = relay.Tuple([call_6713,call_6716,])
output2 = relay.Tuple([call_6714,call_6717,])
func_6729 = relay.Function([], output)
mod['func_6729'] = func_6729
mod = relay.transform.InferType()(mod)
mutated_mod['func_6729'] = func_6729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6729_call = mutated_mod.get_global_var('func_6729')
call_6730 = func_6729_call()
output = call_6730
func_6731 = relay.Function([], output)
mutated_mod['func_6731'] = func_6731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6732 = relay.var("var_6732", dtype = "float64", shape = (9, 16, 12))#candidate|6732|(9, 16, 12)|var|float64
const_6733 = relay.constdtype = "float64")#candidate|6733|(9, 16, 12)|const|float64
bop_6734 = relay.power(var_6732.astype('float64'), relay.reshape(const_6733.astype('float64'), relay.shape_of(var_6732))) # shape=(9, 16, 12)
func_1795_call = mod.get_global_var('func_1795')
func_1797_call = mutated_mod.get_global_var('func_1797')
call_6741 = func_1795_call()
call_6742 = func_1795_call()
output = relay.Tuple([bop_6734,call_6741,])
output2 = relay.Tuple([bop_6734,call_6742,])
func_6770 = relay.Function([var_6732,], output)
mod['func_6770'] = func_6770
mod = relay.transform.InferType()(mod)
mutated_mod['func_6770'] = func_6770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6771 = relay.var("var_6771", dtype = "float64", shape = (9, 16, 12))#candidate|6771|(9, 16, 12)|var|float64
func_6770_call = mutated_mod.get_global_var('func_6770')
call_6772 = func_6770_call(var_6771)
output = call_6772
func_6773 = relay.Function([var_6771], output)
mutated_mod['func_6773'] = func_6773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4288_call = mod.get_global_var('func_4288')
func_4290_call = mutated_mod.get_global_var('func_4290')
call_6799 = relay.TupleGetItem(func_4288_call(), 1)
call_6800 = relay.TupleGetItem(func_4290_call(), 1)
func_5533_call = mod.get_global_var('func_5533')
func_5534_call = mutated_mod.get_global_var('func_5534')
call_6809 = relay.TupleGetItem(func_5533_call(), 0)
call_6810 = relay.TupleGetItem(func_5534_call(), 0)
output = relay.Tuple([call_6799,call_6809,])
output2 = relay.Tuple([call_6800,call_6810,])
func_6812 = relay.Function([], output)
mod['func_6812'] = func_6812
mod = relay.transform.InferType()(mod)
output = func_6812()
func_6813 = relay.Function([], output)
mutated_mod['func_6813'] = func_6813
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6814 = relay.const([[[-4.536133,-4.357371,1.930141,-5.347480,-8.914406],[2.586035,-9.733039,-9.030449,7.652581,0.255048],[9.355758,-6.089791,0.200179,3.966216,-5.319586],[-7.622303,-2.056137,0.244029,9.757471,2.569435],[9.444278,-0.130280,2.998442,-5.871589,-2.091226]],[[-4.292014,-8.330358,-0.389637,-0.855778,-2.344083],[-4.506818,7.061455,0.943245,6.404228,-1.220129],[7.828648,1.036040,6.605415,-9.049545,-2.956620],[0.898073,-7.187582,9.778565,-3.082686,-0.030428],[-4.138895,0.825858,-7.972815,-5.372651,9.238420]],[[-7.385009,-7.052282,-4.980310,4.049165,9.080167],[-4.377370,-7.496453,-6.251895,9.749350,8.046943],[2.123094,-3.146605,5.855408,-2.250907,-5.082665],[3.657753,-1.788271,4.027523,3.313989,8.142678],[-0.312015,-7.058037,-1.096401,-9.494082,7.102108]],[[-4.625813,4.813776,8.876473,8.843979,-3.025277],[-1.893735,-5.016341,5.670947,0.963597,-9.996665],[1.643790,-7.164202,3.940839,6.890288,-2.218692],[9.769162,2.109914,-5.092659,-2.228210,-7.695590],[2.078282,-2.708919,3.576145,2.928016,-9.392856]],[[6.065247,-6.566417,6.837592,3.283878,6.398803],[3.469760,-8.079725,5.539359,-4.283175,-0.213351],[-2.136751,1.467931,3.397020,-8.103491,9.784855],[2.327229,9.339220,7.274368,9.978066,2.056227],[-5.778392,-2.293726,1.982519,4.402031,5.706625]],[[0.362380,-2.750178,-9.285764,0.621291,-0.245411],[5.640408,-1.826344,-4.191512,-0.150200,-0.902398],[-7.491995,-0.299162,3.770568,6.915819,1.290923],[-7.120468,-6.360751,7.870074,-6.015371,-3.036900],[-7.856617,-0.500308,-1.698442,-9.624596,1.362982]],[[-6.855275,7.826323,-9.859409,-7.867593,-6.968909],[-2.234022,-9.984549,9.190202,4.286843,8.522319],[-9.642694,6.890224,-5.324156,2.366398,-9.145219],[6.023561,4.281536,-6.899305,8.887844,8.690648],[-6.109647,-1.487835,-3.173955,1.076055,6.188943]],[[4.384822,-5.766590,4.178785,-9.239812,6.081503],[6.152467,1.593160,3.928516,-4.520925,6.961913],[-6.327168,3.936382,-4.096449,-7.223476,1.819424],[-0.444012,-4.441504,2.314347,3.668380,-5.408034],[8.136407,5.227494,-0.937932,-0.820693,5.531342]],[[-0.759835,0.417261,-7.343219,-7.650028,9.837916],[3.637499,-9.141926,-2.294739,3.835053,-9.005524],[-8.158688,4.548090,-9.430826,6.367698,-1.252930],[-6.954795,-7.386775,-9.459404,-2.834991,-2.178507],[-3.266433,1.068891,8.204963,-7.635057,-0.505343]],[[-0.070714,-1.388368,-1.690442,-0.489826,4.032521],[5.989764,0.058125,-8.261926,-6.160878,-0.620009],[-3.079358,-8.270168,-2.040362,-9.526810,-4.309724],[7.682987,9.830477,-7.584471,-3.214206,2.924674],[1.295772,-4.736491,7.734139,-7.143315,9.552640]],[[-0.343397,9.056552,9.535609,-8.921211,1.734403],[-0.195859,0.451336,-0.576920,-2.176720,-3.175710],[3.036534,-3.735500,0.825433,-8.201852,7.330595],[-3.379909,4.400785,9.409857,6.282985,-8.482197],[-5.594376,7.535919,5.761310,-3.964481,1.552989]],[[7.436339,-6.838067,-8.842160,9.231276,-2.155797],[-2.074806,-0.050194,-3.401221,-7.089228,1.403256],[-0.274061,-3.561787,-5.812534,-3.656023,5.362207],[1.342363,-2.429775,-2.931975,8.358995,1.141307],[-3.040938,5.484086,4.520506,-7.774886,2.163347]],[[9.974632,-3.787700,-7.986692,1.646945,6.968312],[-7.921176,6.280638,-4.636646,3.009129,-8.444815],[9.518662,-7.124021,1.543838,4.725889,7.976791],[-6.531365,-3.032069,-0.382864,8.532007,4.679314],[-5.286306,4.561474,-6.642074,6.881720,-3.603357]],[[-3.012930,8.073355,-9.065353,1.574315,-7.926979],[-6.307246,0.793396,8.901562,9.609512,8.468754],[6.446367,-4.111352,3.557239,0.490879,-5.252936],[-9.614231,5.522684,1.025897,2.948906,0.063716],[-4.069225,-9.359651,5.227299,0.062466,-2.778157]]], dtype = "float64")#candidate|6814|(14, 5, 5)|const|float64
var_6815 = relay.var("var_6815", dtype = "float64", shape = (14, 5, 5))#candidate|6815|(14, 5, 5)|var|float64
bop_6816 = relay.power(const_6814.astype('float64'), relay.reshape(var_6815.astype('float64'), relay.shape_of(const_6814))) # shape=(14, 5, 5)
uop_6824 = relay.log10(const_6814.astype('float64')) # shape=(14, 5, 5)
output = relay.Tuple([bop_6816,uop_6824,])
output2 = relay.Tuple([bop_6816,uop_6824,])
func_6829 = relay.Function([var_6815,], output)
mod['func_6829'] = func_6829
mod = relay.transform.InferType()(mod)
mutated_mod['func_6829'] = func_6829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6830 = relay.var("var_6830", dtype = "float64", shape = (14, 5, 5))#candidate|6830|(14, 5, 5)|var|float64
func_6829_call = mutated_mod.get_global_var('func_6829')
call_6831 = func_6829_call(var_6830)
output = call_6831
func_6832 = relay.Function([var_6830], output)
mutated_mod['func_6832'] = func_6832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2977_call = mod.get_global_var('func_2977')
func_2979_call = mutated_mod.get_global_var('func_2979')
call_6872 = relay.TupleGetItem(func_2977_call(), 0)
call_6873 = relay.TupleGetItem(func_2979_call(), 0)
output = call_6872
output2 = call_6873
func_6932 = relay.Function([], output)
mod['func_6932'] = func_6932
mod = relay.transform.InferType()(mod)
output = func_6932()
func_6933 = relay.Function([], output)
mutated_mod['func_6933'] = func_6933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5995_call = mod.get_global_var('func_5995')
func_5997_call = mutated_mod.get_global_var('func_5997')
call_6944 = func_5995_call()
call_6945 = func_5995_call()
func_4814_call = mod.get_global_var('func_4814')
func_4816_call = mutated_mod.get_global_var('func_4816')
call_6946 = relay.TupleGetItem(func_4814_call(), 0)
call_6947 = relay.TupleGetItem(func_4816_call(), 0)
output = relay.Tuple([call_6944,call_6946,])
output2 = relay.Tuple([call_6945,call_6947,])
func_6951 = relay.Function([], output)
mod['func_6951'] = func_6951
mod = relay.transform.InferType()(mod)
mutated_mod['func_6951'] = func_6951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6951_call = mutated_mod.get_global_var('func_6951')
call_6952 = func_6951_call()
output = call_6952
func_6953 = relay.Function([], output)
mutated_mod['func_6953'] = func_6953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6397_call = mod.get_global_var('func_6397')
func_6399_call = mutated_mod.get_global_var('func_6399')
call_6969 = relay.TupleGetItem(func_6397_call(), 1)
call_6970 = relay.TupleGetItem(func_6399_call(), 1)
output = call_6969
output2 = call_6970
func_6975 = relay.Function([], output)
mod['func_6975'] = func_6975
mod = relay.transform.InferType()(mod)
output = func_6975()
func_6976 = relay.Function([], output)
mutated_mod['func_6976'] = func_6976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6995 = relay.var("var_6995", dtype = "float64", shape = (6, 8, 14))#candidate|6995|(6, 8, 14)|var|float64
uop_6996 = relay.log2(var_6995.astype('float64')) # shape=(6, 8, 14)
output = relay.Tuple([uop_6996,])
output2 = relay.Tuple([uop_6996,])
func_7016 = relay.Function([var_6995,], output)
mod['func_7016'] = func_7016
mod = relay.transform.InferType()(mod)
var_7017 = relay.var("var_7017", dtype = "float64", shape = (6, 8, 14))#candidate|7017|(6, 8, 14)|var|float64
output = func_7016(var_7017)
func_7018 = relay.Function([var_7017], output)
mutated_mod['func_7018'] = func_7018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1795_call = mod.get_global_var('func_1795')
func_1797_call = mutated_mod.get_global_var('func_1797')
call_7052 = func_1795_call()
call_7053 = func_1795_call()
func_4551_call = mod.get_global_var('func_4551')
func_4553_call = mutated_mod.get_global_var('func_4553')
call_7065 = relay.TupleGetItem(func_4551_call(), 0)
call_7066 = relay.TupleGetItem(func_4553_call(), 0)
output = relay.Tuple([call_7052,call_7065,])
output2 = relay.Tuple([call_7053,call_7066,])
func_7083 = relay.Function([], output)
mod['func_7083'] = func_7083
mod = relay.transform.InferType()(mod)
output = func_7083()
func_7084 = relay.Function([], output)
mutated_mod['func_7084'] = func_7084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4186_call = mod.get_global_var('func_4186')
func_4187_call = mutated_mod.get_global_var('func_4187')
call_7149 = relay.TupleGetItem(func_4186_call(), 1)
call_7150 = relay.TupleGetItem(func_4187_call(), 1)
func_6167_call = mod.get_global_var('func_6167')
func_6170_call = mutated_mod.get_global_var('func_6170')
const_7152 = relay.const([2.853831,8.288069,-2.595665,-3.096950,-9.195686,8.239248,2.058468,2.472458,-2.714683,-5.396568,-6.641655,-0.565411,0.872618,-5.848066,5.551884,1.466894,6.260939,2.856761,-1.891029,-2.740902,-4.341005,1.218019,-7.826486,9.006242,0.445390,-1.791214,-7.862984,-6.851369,-8.058810,-7.822842,8.992328,-5.789090,0.702638,-0.452720,8.946704,-9.462824,-1.699216,-3.153438,-1.194503,-6.353335,4.447662,4.968482,9.826300,0.581014,-8.987860,1.512169,-4.870277,8.777504,0.078299,2.488709,-2.700092,-6.723552,6.606184,5.321341,-0.092412,2.511395,8.185519,4.069968,9.778294,-3.128266,6.600804,6.297390,2.532944,0.708286,-6.914242,-5.851014,-9.082368,-2.917244,9.472595,6.593231,4.966845,2.889999,3.574512,1.572247,2.853100,-4.782009,2.938093,-8.805323,-4.201383,4.593136,-0.228198,-2.216213,-8.175702,5.277746,-3.247823,7.751924,3.807723,-0.014594,-7.336866,9.027190,7.547655,-1.457652,8.862223,-9.387705,-7.242309,1.315890,5.561520,1.251450,-0.912471,0.991663,3.535230,-9.174791,4.910412,2.919725,-4.906636,4.744571,-6.952968,-5.525552,3.730737,-6.681994,-0.212817,-4.018641,7.559650,6.050423,-6.635571,-0.396744,4.494361,4.570867,-5.227752,-6.549536,5.009127,-7.818810,7.433058,-8.103299,5.298995,-3.832823,-6.120666,0.928267,-5.759989,3.871260,1.707974,-8.165346,-7.772471,4.737935,-4.922914,8.238709,-1.332263,-2.251038,-6.253680,-4.750082,8.364979,7.888113,4.589665,7.894418,0.766788,3.763942,-9.388903,9.922018,0.907984,7.617990,3.904746,4.038832,7.386021,5.124420,-7.627132,9.669351,5.273440,1.516937,-5.188392,-1.498261,5.733416,-6.028806,-6.370573,-1.752109,3.066235,5.197361,-2.903887,-8.357336,-6.562460,8.126755,8.631183,-1.000250,4.387921,9.569527,-6.466094,0.361173,2.948082,-3.930916,-3.555007,0.626174,-4.478542,-3.136109,-2.078467,-8.570613,-9.916059,2.472362,3.657066,-1.766333,-4.756703,-0.805013,-1.994558,-6.210896,5.004305,5.917386,-2.647729,8.974387,1.260498,3.301679,-0.245923,8.863388,-7.419585,-8.686982,-8.647887,-2.760151,7.525001,-4.862352,4.202961,3.263036,1.120554,-1.330124,-0.801506,-7.899871,3.633695,1.264452,-7.134458,-5.004304,1.104011,-2.537191,-8.315160,-8.679356,4.069303,1.041612,-2.187650,8.398163,6.607192,6.602606,-6.144029,0.211050,5.971304,0.251447,1.579494,-9.103976,6.152559,2.386730,-5.757991,9.860051,-3.268707,-2.163895,1.445277,-6.233065,2.214353,-5.224627,8.116346,9.654718,-2.511484,-5.527276,-7.697599,7.749178,0.567083,2.382748,-1.583037,7.457489,7.168461,2.424814,-6.622788,8.756743,7.547678,6.897170,-1.174568,-9.396284,3.764494,-1.518683,7.555051,8.308268,-6.798635,-8.772210,7.899940,2.989844,4.025322,-9.847462,-5.165829,3.244707,5.782265,0.364428,2.440364,0.565487,-6.527488,1.728712,7.091934,6.957161,1.519408,-7.559962,5.920186,-9.730842,4.478564,-1.549593,-5.014312,9.236965,-2.778170,8.327282,-6.857062,7.456349,9.357703,2.203688,8.828335,-9.013069,-0.621446,-6.294209,8.587967,7.524958,0.011298,-1.234649,7.540552,4.501587,-5.426518,-6.527299,2.281968,-1.268568,-7.600696,3.976597,-1.260345,-8.183640,7.465207,-7.357116,4.951179,0.576746,-5.147861,9.893131,9.363628,0.079835,6.055272,6.731459,6.338180,0.229480,4.496518,-0.949076,4.129693,-8.224267,6.400408,7.897098], dtype = "float32")#candidate|7152|(330,)|const|float32
call_7151 = func_6167_call(relay.reshape(const_7152.astype('float32'), [2, 15, 11]))
call_7153 = func_6167_call(relay.reshape(const_7152.astype('float32'), [2, 15, 11]))
uop_7155 = relay.cosh(call_7151.astype('float32')) # shape=(2, 15, 11)
uop_7157 = relay.cosh(call_7153.astype('float32')) # shape=(2, 15, 11)
var_7158 = relay.var("var_7158", dtype = "float32", shape = (2, 15, 11))#candidate|7158|(2, 15, 11)|var|float32
bop_7159 = relay.logical_xor(uop_7155.astype('uint32'), relay.reshape(var_7158.astype('uint32'), relay.shape_of(uop_7155))) # shape=(2, 15, 11)
bop_7162 = relay.logical_xor(uop_7157.astype('uint32'), relay.reshape(var_7158.astype('uint32'), relay.shape_of(uop_7157))) # shape=(2, 15, 11)
func_3658_call = mod.get_global_var('func_3658')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_7170 = relay.TupleGetItem(func_3658_call(), 1)
call_7171 = relay.TupleGetItem(func_3659_call(), 1)
func_7083_call = mod.get_global_var('func_7083')
func_7084_call = mutated_mod.get_global_var('func_7084')
call_7180 = relay.TupleGetItem(func_7083_call(), 1)
call_7181 = relay.TupleGetItem(func_7084_call(), 1)
bop_7182 = relay.left_shift(uop_7155.astype('int64'), relay.reshape(const_7152.astype('int64'), relay.shape_of(uop_7155))) # shape=(2, 15, 11)
bop_7185 = relay.left_shift(uop_7157.astype('int64'), relay.reshape(const_7152.astype('int64'), relay.shape_of(uop_7157))) # shape=(2, 15, 11)
func_6729_call = mod.get_global_var('func_6729')
func_6731_call = mutated_mod.get_global_var('func_6731')
call_7188 = relay.TupleGetItem(func_6729_call(), 1)
call_7189 = relay.TupleGetItem(func_6731_call(), 1)
func_6829_call = mod.get_global_var('func_6829')
func_6832_call = mutated_mod.get_global_var('func_6832')
const_7195 = relay.const([[1.985799,-3.903320,8.961234,-5.523629,-8.587657,-6.025026,7.888303,4.486484,2.758329,4.785918,-5.541144,9.377659,-6.956998,6.065415,1.568747,-0.309528,-9.519565,1.574674,-0.710829,0.162371,-5.761767,8.278198,1.792464,-0.009800,-3.009979,9.207575,-3.689662,-2.790568,0.283722,8.679951,4.519675,-1.347979,8.984338,0.068585,7.475553,-1.384378,-0.950094,6.061592,-2.900456,-6.561377,2.424509,8.983831,3.464829,-8.803223,-9.672728,6.219798,7.048322,9.800997,7.079134,8.512460,2.817533,4.163380,1.964362,0.367681,-8.083899,2.516550,-0.753537,8.322076,-9.066645,-8.473391,-8.036513,-4.224691,0.976945,-6.375723,-0.766689,3.016455,7.998737,-0.679716,8.096823,4.784716],[8.939129,5.672258,8.494072,3.518672,3.130685,-8.149203,-5.391994,7.078597,-0.816661,-7.376367,8.051381,-7.673905,-2.767375,-6.924813,6.801531,7.616268,-5.589948,-4.663469,-3.318977,5.991947,5.783972,4.171513,9.491892,-1.341168,-8.516567,-9.911790,-6.104212,-2.625451,2.550695,3.459016,-7.587567,-1.154810,7.874247,4.449470,-9.196924,2.064284,-6.528829,1.104438,-7.654344,-1.334778,6.608720,-9.356260,3.460500,-4.678429,0.852940,2.143875,5.956840,-8.030967,-7.818688,-0.284991,9.837567,2.363715,-5.330660,7.004378,-9.230443,4.441836,-2.033660,3.677146,-7.360331,9.971681,3.668189,-1.367886,-4.478712,-3.007980,-9.076381,7.607347,-4.937288,9.917731,-2.926142,2.301952],[-6.402420,-5.386046,8.220989,2.903775,5.505625,0.653637,8.459398,7.016075,1.329936,7.929206,-1.952885,5.071824,9.778950,4.169559,2.423550,-5.852050,1.774075,-1.818616,-2.194234,9.782461,-8.489860,6.760415,-4.241644,4.330485,-6.606729,6.568921,-2.251209,3.641885,1.573119,4.131341,-7.003944,2.104601,-3.584104,-3.172352,5.464020,-5.785061,-7.798884,8.278986,8.509015,-1.868022,6.819587,-7.400504,-7.901675,0.449542,8.993984,-3.675332,-1.148828,2.548341,-3.182960,-5.695885,6.991112,6.499905,-5.483132,-3.152351,-9.717202,1.002459,-9.150247,1.869746,8.324702,0.001774,8.715542,-8.243880,7.434867,-2.523939,9.519142,9.089857,6.240677,2.040610,4.004623,2.345369],[-9.490550,-1.138715,6.535944,-2.352238,-7.895567,5.228919,2.374992,-6.786989,5.920931,-3.091383,5.874019,-1.739710,5.843823,-3.377716,8.388011,-2.812327,-7.619776,7.092486,-6.001321,-0.403789,4.440039,-5.893728,-5.310167,8.022894,5.385966,-9.178363,3.133787,5.942437,-6.664550,5.477446,-2.843041,-4.340715,-9.461805,-1.363211,4.914442,-7.539205,-8.777840,8.621575,1.851191,-3.294099,1.629732,0.030041,6.008471,9.992839,-2.528500,-8.047649,-5.973392,1.533257,-8.894877,6.649514,-9.348878,-9.124931,-6.841659,1.903738,-9.111785,-0.542279,0.469899,-9.767743,-3.803338,-2.346175,-0.465410,7.084975,7.732265,-7.685511,-4.365947,9.927763,0.025722,6.159520,-9.238690,0.350145],[1.896841,-9.458949,0.428359,1.122042,-2.229916,-2.347693,-3.003162,7.272064,-5.349439,0.951396,0.128145,6.252923,-4.146706,-7.680823,-1.798866,3.353588,2.228526,-2.389338,-1.075141,-5.662996,2.682177,-3.655258,6.551206,-1.970914,7.405214,-3.204807,-6.957696,5.559336,4.087477,4.064195,1.666855,5.921303,-8.749219,6.032023,9.152229,7.342706,-9.823096,0.969373,5.800180,9.781374,6.750635,6.311972,8.374946,8.861727,-2.434989,-8.272886,9.979875,-8.410677,4.986910,2.507795,-7.119522,-2.200765,-6.490581,-8.868444,6.186590,-3.514970,8.072266,-8.568275,-3.101905,2.967195,8.929626,-5.307329,6.794091,-4.325946,-9.042665,-9.518513,3.253092,9.301282,-8.653830,7.585580]], dtype = "float64")#candidate|7195|(5, 70)|const|float64
call_7194 = relay.TupleGetItem(func_6829_call(relay.reshape(const_7195.astype('float64'), [14, 5, 5])), 0)
call_7196 = relay.TupleGetItem(func_6832_call(relay.reshape(const_7195.astype('float64'), [14, 5, 5])), 0)
func_5798_call = mod.get_global_var('func_5798')
func_5801_call = mutated_mod.get_global_var('func_5801')
var_7212 = relay.var("var_7212", dtype = "int32", shape = (3,))#candidate|7212|(3,)|var|int32
call_7211 = relay.TupleGetItem(func_5798_call(relay.reshape(var_7212.astype('int32'), [3,])), 1)
call_7213 = relay.TupleGetItem(func_5801_call(relay.reshape(var_7212.astype('int32'), [3,])), 1)
uop_7216 = relay.atan(bop_7182.astype('float32')) # shape=(2, 15, 11)
uop_7218 = relay.atan(bop_7185.astype('float32')) # shape=(2, 15, 11)
var_7227 = relay.var("var_7227", dtype = "float32", shape = (2, 15, 11))#candidate|7227|(2, 15, 11)|var|float32
bop_7228 = relay.add(uop_7216.astype('float64'), relay.reshape(var_7227.astype('float64'), relay.shape_of(uop_7216))) # shape=(2, 15, 11)
bop_7231 = relay.add(uop_7218.astype('float64'), relay.reshape(var_7227.astype('float64'), relay.shape_of(uop_7218))) # shape=(2, 15, 11)
output = relay.Tuple([call_7149,bop_7159,call_7170,call_7180,call_7188,call_7194,const_7195,call_7211,var_7212,bop_7228,])
output2 = relay.Tuple([call_7150,bop_7162,call_7171,call_7181,call_7189,call_7196,const_7195,call_7213,var_7212,bop_7231,])
func_7252 = relay.Function([var_7158,var_7212,var_7227,], output)
mod['func_7252'] = func_7252
mod = relay.transform.InferType()(mod)
var_7253 = relay.var("var_7253", dtype = "float32", shape = (2, 15, 11))#candidate|7253|(2, 15, 11)|var|float32
var_7254 = relay.var("var_7254", dtype = "int32", shape = (3,))#candidate|7254|(3,)|var|int32
var_7255 = relay.var("var_7255", dtype = "float32", shape = (2, 15, 11))#candidate|7255|(2, 15, 11)|var|float32
output = func_7252(var_7253,var_7254,var_7255,)
func_7256 = relay.Function([var_7253,var_7254,var_7255,], output)
mutated_mod['func_7256'] = func_7256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6932_call = mod.get_global_var('func_6932')
func_6933_call = mutated_mod.get_global_var('func_6933')
call_7322 = func_6932_call()
call_7323 = func_6932_call()
output = call_7322
output2 = call_7323
func_7358 = relay.Function([], output)
mod['func_7358'] = func_7358
mod = relay.transform.InferType()(mod)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mutated_mod.get_global_var('func_7358')
call_7359 = func_7358_call()
output = call_7359
func_7360 = relay.Function([], output)
mutated_mod['func_7360'] = func_7360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5737_call = mod.get_global_var('func_5737')
func_5738_call = mutated_mod.get_global_var('func_5738')
call_7366 = relay.TupleGetItem(func_5737_call(), 0)
call_7367 = relay.TupleGetItem(func_5738_call(), 0)
func_4071_call = mod.get_global_var('func_4071')
func_4073_call = mutated_mod.get_global_var('func_4073')
call_7370 = func_4071_call()
call_7371 = func_4071_call()
func_6729_call = mod.get_global_var('func_6729')
func_6731_call = mutated_mod.get_global_var('func_6731')
call_7376 = relay.TupleGetItem(func_6729_call(), 1)
call_7377 = relay.TupleGetItem(func_6731_call(), 1)
func_4006_call = mod.get_global_var('func_4006')
func_4008_call = mutated_mod.get_global_var('func_4008')
call_7403 = func_4006_call()
call_7404 = func_4006_call()
output = relay.Tuple([call_7366,call_7370,call_7376,call_7403,])
output2 = relay.Tuple([call_7367,call_7371,call_7377,call_7404,])
func_7409 = relay.Function([], output)
mod['func_7409'] = func_7409
mod = relay.transform.InferType()(mod)
mutated_mod['func_7409'] = func_7409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7409_call = mutated_mod.get_global_var('func_7409')
call_7410 = func_7409_call()
output = call_7410
func_7411 = relay.Function([], output)
mutated_mod['func_7411'] = func_7411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3813_call = mod.get_global_var('func_3813')
func_3814_call = mutated_mod.get_global_var('func_3814')
call_7442 = relay.TupleGetItem(func_3813_call(), 0)
call_7443 = relay.TupleGetItem(func_3814_call(), 0)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_7454 = relay.TupleGetItem(func_3338_call(), 0)
call_7455 = relay.TupleGetItem(func_3340_call(), 0)
func_7252_call = mod.get_global_var('func_7252')
func_7256_call = mutated_mod.get_global_var('func_7256')
const_7466 = relay.const([-5.047832,6.411692,0.859213,-5.264906,-2.707298,6.560596,4.439923,-9.103998,-9.504194,-6.942586,1.780313,-4.649075,2.378392,-2.258426,2.890375,-6.619803,6.507463,-0.005856,-2.168935,-7.584510,-9.266804,-7.305774,1.130073,-1.149335,3.029536,-2.824369,-5.203370,-5.593132,5.890652,-0.494931,-4.347644,-3.464155,8.168311,-5.609839,4.183397,-0.944631,-3.350152,-9.881900,-3.934719,-5.768859,8.236696,-0.395058,4.461327,-7.564216,7.854920,0.104790,7.133528,-6.786137,-5.729100,-6.354282,9.573820,0.825255,-7.119502,-7.888320,-2.661097,-5.265575,6.255503,5.804521,-8.949757,2.956943,1.584954,9.467813,-1.205714,2.831557,9.690307,0.055601,-3.135767,-4.836529,-6.043830,5.882379,5.882154,-1.435231,3.522413,8.957369,7.386431,3.663699,6.910923,2.640561,-5.621523,-6.166329,4.578577,5.158339,-9.098774,-5.858902,-8.684157,-5.277028,7.943703,-1.198212,-7.349249,-7.683554,0.925958,-4.142960,7.283066,-1.120184,-7.484248,5.852690,-5.129593,-0.573076,-2.330911,7.421165,-1.306762,7.416757,3.046988,-1.732685,4.042852,8.477227,9.689182,-3.267327,-9.373143,-6.237599,0.449824,-3.401300,-4.206770,5.344068,1.865670,0.348136,-7.982837,2.855569,5.235164,4.794563,8.496219,9.000436,8.281929,0.122935,-1.426318,-0.587366,1.798601,-1.697199,1.632526,-7.011320,-8.449868,5.974636,-4.910605,-8.594791,-3.652546,9.714179,1.203526,-7.181120,-5.906905,-1.030364,-6.875440,-1.644527,4.149512,5.469940,-7.375853,7.155472,-2.935627,4.219277,6.653340,-2.745866,-0.901163,4.065496,-0.070104,-3.657583,7.777436,0.613975,1.331526,7.364613,-7.434701,-3.353535,2.531971,-2.852282,-0.393999,-8.017654,0.081384,5.527127,-5.101906,9.998853,1.188438,2.424527,-6.499870,-2.117890,9.743866,-9.587334,-1.779599,-2.552267,-1.866903,0.521296,6.528252,5.902067,-8.553381,-5.037818,6.626296,7.279885,8.460547,-4.699532,-8.221416,8.237062,-4.810782,7.715731,-0.036691,-1.776970,-1.007504,0.391458,-1.620209,6.153386,-0.488625,0.088141,4.885099,-2.327928,-0.737797,3.331930,1.460871,-3.174055,-0.293059,-8.293473,4.244834,-1.658534,5.680942,3.762476,-9.750513,-3.161153,-6.750692,-3.696628,2.836835,-6.631783,4.214744,-1.829457,0.023130,1.249988,-5.906037,-3.814619,-2.131738,-3.593400,3.425237,2.018763,-3.850799,-9.631998,-9.467680,-4.055908,7.170939,1.395051,-2.864509,1.610975,-7.672381,-0.443743,-5.343998,-1.486671,8.051399,-8.323275,7.081874,-5.196606,-4.091104,-1.134164,8.465624,-4.783273,-6.726742,-1.438407,2.196735,-1.188967,-5.266804,-7.449309,8.323924,9.178941,4.643955,6.041135,-9.070202,-1.077601,-6.683369,9.167227,-4.241432,-7.678174,4.896960,3.106888,-1.772276,-6.624942,-5.667634,-5.889647,6.450110,-8.515863,0.008861,3.948959,1.976148,-4.444695,1.132411,-5.461780,0.386997,-4.010174,0.408065,3.285077,2.897881,-9.542572,0.115775,4.765900,-3.284464,8.542143,-5.218313,7.811219,9.155382,2.797590,6.223306,-1.800408,2.492530,1.146614,-2.322291,-4.381149,-8.643595,-6.115057,5.849217,3.652214,8.099811,-2.711484,2.528012,-9.127271,8.598456,6.414822,3.512607,-9.526756,-1.535152,7.306170,-4.356139,-8.720981,-6.089483,-6.035985,3.866755,1.601754,5.618299,-5.823821,-9.166504,6.654348,-2.914265,-3.077293,-1.247367,-8.062381,3.723287,2.175879,-5.095928,-7.253534,-3.263397,-0.329460], dtype = "float32")#candidate|7466|(330,)|const|float32
var_7467 = relay.var("var_7467", dtype = "int32", shape = (3,))#candidate|7467|(3,)|var|int32
call_7465 = relay.TupleGetItem(func_7252_call(relay.reshape(const_7466.astype('float32'), [2, 15, 11]), relay.reshape(var_7467.astype('int32'), [3,]), relay.reshape(const_7466.astype('float32'), [2, 15, 11]), ), 2)
call_7468 = relay.TupleGetItem(func_7256_call(relay.reshape(const_7466.astype('float32'), [2, 15, 11]), relay.reshape(var_7467.astype('int32'), [3,]), relay.reshape(const_7466.astype('float32'), [2, 15, 11]), ), 2)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_7469 = relay.TupleGetItem(func_2257_call(), 0)
call_7470 = relay.TupleGetItem(func_2258_call(), 0)
func_2053_call = mod.get_global_var('func_2053')
func_2057_call = mutated_mod.get_global_var('func_2057')
var_7478 = relay.var("var_7478", dtype = "int64", shape = (700,))#candidate|7478|(700,)|var|int64
const_7479 = relay.const([0.956406,-9.835353,-4.890097,9.009579,-2.509034,9.664079,-9.752979,-0.595211,-7.190338,6.398430,-9.964873,6.988602,9.107540,7.591405,6.006482,-9.804223,-4.761528,4.507301,4.251320,-6.327665,0.472740,0.947202,-5.545278,5.890026,7.340354,-7.464666,-4.041785,0.932270,1.307128,-6.001454,-2.668901,2.236556,0.332621,2.320519,9.423191,-2.534612,7.018385,4.280955,-3.940670,-2.524147,3.475395,6.286088,-6.557918,3.969345,4.711862,-0.145370,-0.053340,-4.839259,4.785900,-9.560117,5.738019,0.139026,-2.413696,4.704531,-2.825868,9.411285,-0.925266,0.835467,6.728164,-8.073468,6.232738,-2.920915,7.294494,6.122707,6.713398,7.214815,6.056905,2.553250,1.858036,-7.703660,6.148551,2.769389,-0.007798,-3.838399,0.336245,-8.733805,-3.539143,5.728624,3.887612,-1.353213,-5.363836,8.729138,-7.157010,-7.380517,3.427871,0.649844,-8.769290,6.093078,-3.384958,-4.840684,-4.134438], dtype = "float64")#candidate|7479|(91,)|const|float64
call_7477 = relay.TupleGetItem(func_2053_call(relay.reshape(var_7478.astype('int64'), [5, 140]), relay.reshape(const_7479.astype('float64'), [1, 91]), ), 4)
call_7480 = relay.TupleGetItem(func_2057_call(relay.reshape(var_7478.astype('int64'), [5, 140]), relay.reshape(const_7479.astype('float64'), [1, 91]), ), 4)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_7484 = relay.TupleGetItem(func_3338_call(), 0)
call_7485 = relay.TupleGetItem(func_3340_call(), 0)
output = relay.Tuple([call_7442,call_7454,call_7465,const_7466,var_7467,call_7469,call_7477,var_7478,const_7479,call_7484,])
output2 = relay.Tuple([call_7443,call_7455,call_7468,const_7466,var_7467,call_7470,call_7480,var_7478,const_7479,call_7485,])
func_7496 = relay.Function([var_7467,var_7478,], output)
mod['func_7496'] = func_7496
mod = relay.transform.InferType()(mod)
var_7497 = relay.var("var_7497", dtype = "int32", shape = (3,))#candidate|7497|(3,)|var|int32
var_7498 = relay.var("var_7498", dtype = "int64", shape = (700,))#candidate|7498|(700,)|var|int64
output = func_7496(var_7497,var_7498,)
func_7499 = relay.Function([var_7497,var_7498,], output)
mutated_mod['func_7499'] = func_7499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5533_call = mod.get_global_var('func_5533')
func_5534_call = mutated_mod.get_global_var('func_5534')
call_7527 = relay.TupleGetItem(func_5533_call(), 0)
call_7528 = relay.TupleGetItem(func_5534_call(), 0)
func_4186_call = mod.get_global_var('func_4186')
func_4187_call = mutated_mod.get_global_var('func_4187')
call_7550 = relay.TupleGetItem(func_4186_call(), 0)
call_7551 = relay.TupleGetItem(func_4187_call(), 0)
func_5168_call = mod.get_global_var('func_5168')
func_5169_call = mutated_mod.get_global_var('func_5169')
call_7590 = func_5168_call()
call_7591 = func_5168_call()
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_7617 = relay.TupleGetItem(func_2257_call(), 0)
call_7618 = relay.TupleGetItem(func_2258_call(), 0)
output = relay.Tuple([call_7527,call_7550,call_7590,call_7617,])
output2 = relay.Tuple([call_7528,call_7551,call_7591,call_7618,])
func_7637 = relay.Function([], output)
mod['func_7637'] = func_7637
mod = relay.transform.InferType()(mod)
output = func_7637()
func_7638 = relay.Function([], output)
mutated_mod['func_7638'] = func_7638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3038_call = mod.get_global_var('func_3038')
func_3040_call = mutated_mod.get_global_var('func_3040')
call_7641 = relay.TupleGetItem(func_3038_call(), 1)
call_7642 = relay.TupleGetItem(func_3040_call(), 1)
output = call_7641
output2 = call_7642
func_7658 = relay.Function([], output)
mod['func_7658'] = func_7658
mod = relay.transform.InferType()(mod)
mutated_mod['func_7658'] = func_7658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7658_call = mutated_mod.get_global_var('func_7658')
call_7659 = func_7658_call()
output = call_7659
func_7660 = relay.Function([], output)
mutated_mod['func_7660'] = func_7660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_7703 = relay.TupleGetItem(func_4365_call(), 0)
call_7704 = relay.TupleGetItem(func_4367_call(), 0)
func_2741_call = mod.get_global_var('func_2741')
func_2743_call = mutated_mod.get_global_var('func_2743')
call_7707 = relay.TupleGetItem(func_2741_call(), 0)
call_7708 = relay.TupleGetItem(func_2743_call(), 0)
output = relay.Tuple([call_7703,call_7707,])
output2 = relay.Tuple([call_7704,call_7708,])
func_7711 = relay.Function([], output)
mod['func_7711'] = func_7711
mod = relay.transform.InferType()(mod)
output = func_7711()
func_7712 = relay.Function([], output)
mutated_mod['func_7712'] = func_7712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5467_call = mod.get_global_var('func_5467')
func_5468_call = mutated_mod.get_global_var('func_5468')
call_7713 = relay.TupleGetItem(func_5467_call(), 1)
call_7714 = relay.TupleGetItem(func_5468_call(), 1)
func_6729_call = mod.get_global_var('func_6729')
func_6731_call = mutated_mod.get_global_var('func_6731')
call_7739 = relay.TupleGetItem(func_6729_call(), 1)
call_7740 = relay.TupleGetItem(func_6731_call(), 1)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_7743 = func_2316_call()
call_7744 = func_2316_call()
func_4006_call = mod.get_global_var('func_4006')
func_4008_call = mutated_mod.get_global_var('func_4008')
call_7760 = func_4006_call()
call_7761 = func_4006_call()
func_290_call = mod.get_global_var('func_290')
func_294_call = mutated_mod.get_global_var('func_294')
const_7775 = relay.const([-8.533246,-5.681519,6.060624,-5.380470,-5.023961,-3.825052,9.004402,-4.810007,9.767132,-2.515347,-3.012506,-9.382092,0.448627,3.861245,3.566727,7.299254,-6.177290,-9.590392,-7.692187,-3.632272,4.182067,-7.579490,7.925986,-3.650597,-8.293984,9.962727,2.659295,-4.380512,-3.130005,0.670499,-7.137088,-7.089681,-4.254404,-2.247457,7.187893,2.164135,9.097623,4.017070,1.062478,-0.622337,-7.060334,-3.330627,5.305742,-2.919459,-0.177501,-9.823862,2.267221,-5.279808,9.526321,-9.102128,2.652381,9.016921,0.675651,9.569701,-8.826702,-9.619903,9.040606,-6.663830,9.489706,5.352703,7.374182,-3.235643,-6.437800,-2.338636,8.555836,-8.487924,7.120634,-8.778688,5.530350,2.631505,6.433940,-1.048073,-9.614756,2.113690,-1.597983,6.528974,-0.270418,-2.414043,-9.972327,-8.232730,3.127765,-7.957507,7.229768,3.037809,-7.956348,-0.605923,-9.753010,7.832314,-4.316250,-5.372353,6.327859,-0.988539,6.500073,-9.457140,3.028880,0.314218,7.299078,0.752421,-6.051353,5.350699,0.679736,-6.924055,6.994368,-2.916575,0.487602,-3.326829,2.756073,-7.622621,9.029053,-8.222116,-2.721625,2.423715,-5.021636,-2.065512,6.593830,3.130818,2.438503,-6.660559,3.451364,-2.697224,1.434546,9.774935,1.191042,0.936372,-4.432034,-1.250328,4.429809,9.032513,-9.304259,9.514224,2.053129,2.979103,-3.476260,0.858416,-0.082638,-1.181281,-2.238744,-7.319954,-1.879333,-2.982606,-0.967720,5.147717,-1.583133,4.931648,-3.191314,-8.568045,3.370045,-7.043803,1.888742,-7.001390,-7.940737,8.412284,-9.218116,-2.698935,9.011487,-0.292787,3.587437,-5.855464,-5.217354,5.654144,-7.713144,-4.467421,5.631580,2.081613,6.653607,-4.025859,5.376636,-9.709565,-2.402631,-2.833779,-8.595145,8.227791,-6.271652,8.429050,3.421871,3.810095,0.651220,5.503014,-8.701788,8.389226,-4.083726,4.088536,-7.624820,-5.524985,9.249860,-4.882219,1.901036,9.734751,2.601664,-1.691167,5.534777,-5.737259,0.388153,0.782244,4.752176,8.612727,7.552113,6.448874,8.407046,-6.329661,-5.830600,-7.447299,-9.700908,8.531885,-4.258333,-6.210638,0.192654,-2.885091,-7.226373,-0.004318], dtype = "float64")#candidate|7775|(210,)|const|float64
const_7776 = relay.const([[True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True],[True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False],[True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True],[True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False],[True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False],[False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True],[True,False,True,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True],[True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False],[True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False],[False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False],[False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False],[True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False],[True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False],[False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True]], dtype = "bool")#candidate|7776|(14, 52)|const|bool
call_7774 = relay.TupleGetItem(func_290_call(relay.reshape(const_7775.astype('float64'), [5, 6, 7]), relay.reshape(const_7776.astype('bool'), [728,]), ), 1)
call_7777 = relay.TupleGetItem(func_294_call(relay.reshape(const_7775.astype('float64'), [5, 6, 7]), relay.reshape(const_7776.astype('bool'), [728,]), ), 1)
output = relay.Tuple([call_7713,call_7739,call_7743,call_7760,call_7774,const_7775,const_7776,])
output2 = relay.Tuple([call_7714,call_7740,call_7744,call_7761,call_7777,const_7775,const_7776,])
func_7779 = relay.Function([], output)
mod['func_7779'] = func_7779
mod = relay.transform.InferType()(mod)
mutated_mod['func_7779'] = func_7779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7779_call = mutated_mod.get_global_var('func_7779')
call_7780 = func_7779_call()
output = call_7780
func_7781 = relay.Function([], output)
mutated_mod['func_7781'] = func_7781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3813_call = mod.get_global_var('func_3813')
func_3814_call = mutated_mod.get_global_var('func_3814')
call_7875 = relay.TupleGetItem(func_3813_call(), 0)
call_7876 = relay.TupleGetItem(func_3814_call(), 0)
output = call_7875
output2 = call_7876
func_7883 = relay.Function([], output)
mod['func_7883'] = func_7883
mod = relay.transform.InferType()(mod)
mutated_mod['func_7883'] = func_7883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7883_call = mutated_mod.get_global_var('func_7883')
call_7884 = func_7883_call()
output = call_7884
func_7885 = relay.Function([], output)
mutated_mod['func_7885'] = func_7885
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7893 = relay.const(-1.867551, dtype = "float64")#candidate|7893|()|const|float64
var_7894 = relay.var("var_7894", dtype = "float64", shape = (2, 7, 6))#candidate|7894|(2, 7, 6)|var|float64
bop_7895 = relay.less_equal(const_7893.astype('bool'), var_7894.astype('bool')) # shape=(2, 7, 6)
output = relay.Tuple([bop_7895,])
output2 = relay.Tuple([bop_7895,])
func_7908 = relay.Function([var_7894,], output)
mod['func_7908'] = func_7908
mod = relay.transform.InferType()(mod)
var_7909 = relay.var("var_7909", dtype = "float64", shape = (2, 7, 6))#candidate|7909|(2, 7, 6)|var|float64
output = func_7908(var_7909)
func_7910 = relay.Function([var_7909], output)
mutated_mod['func_7910'] = func_7910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6102_call = mod.get_global_var('func_6102')
func_6103_call = mutated_mod.get_global_var('func_6103')
call_7925 = func_6102_call()
call_7926 = func_6102_call()
output = call_7925
output2 = call_7926
func_7938 = relay.Function([], output)
mod['func_7938'] = func_7938
mod = relay.transform.InferType()(mod)
output = func_7938()
func_7939 = relay.Function([], output)
mutated_mod['func_7939'] = func_7939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3538_call = mod.get_global_var('func_3538')
func_3539_call = mutated_mod.get_global_var('func_3539')
call_7943 = relay.TupleGetItem(func_3538_call(), 1)
call_7944 = relay.TupleGetItem(func_3539_call(), 1)
func_4365_call = mod.get_global_var('func_4365')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_7948 = relay.TupleGetItem(func_4365_call(), 0)
call_7949 = relay.TupleGetItem(func_4367_call(), 0)
output = relay.Tuple([call_7943,call_7948,])
output2 = relay.Tuple([call_7944,call_7949,])
func_7958 = relay.Function([], output)
mod['func_7958'] = func_7958
mod = relay.transform.InferType()(mod)
output = func_7958()
func_7959 = relay.Function([], output)
mutated_mod['func_7959'] = func_7959
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7983 = relay.var("var_7983", dtype = "uint16", shape = (11, 10, 1))#candidate|7983|(11, 10, 1)|var|uint16
var_7984 = relay.var("var_7984", dtype = "uint16", shape = (11, 10, 16))#candidate|7984|(11, 10, 16)|var|uint16
bop_7985 = relay.right_shift(var_7983.astype('uint16'), var_7984.astype('uint16')) # shape=(11, 10, 16)
func_1500_call = mod.get_global_var('func_1500')
func_1505_call = mutated_mod.get_global_var('func_1505')
var_7996 = relay.var("var_7996", dtype = "int32", shape = (3,))#candidate|7996|(3,)|var|int32
var_7997 = relay.var("var_7997", dtype = "int32", shape = (252,))#candidate|7997|(252,)|var|int32
call_7995 = relay.TupleGetItem(func_1500_call(relay.reshape(var_7996.astype('int32'), [3,]), relay.reshape(var_7997.astype('int32'), [3, 84]), relay.reshape(var_7997.astype('int32'), [3, 84]), ), 1)
call_7998 = relay.TupleGetItem(func_1505_call(relay.reshape(var_7996.astype('int32'), [3,]), relay.reshape(var_7997.astype('int32'), [3, 84]), relay.reshape(var_7997.astype('int32'), [3, 84]), ), 1)
bop_8009 = relay.logical_xor(var_7996.astype('uint32'), var_7983.astype('uint32')) # shape=(11, 10, 3)
func_6167_call = mod.get_global_var('func_6167')
func_6170_call = mutated_mod.get_global_var('func_6170')
call_8029 = func_6167_call(relay.reshape(bop_8009.astype('float32'), [2, 15, 11]))
call_8030 = func_6167_call(relay.reshape(bop_8009.astype('float32'), [2, 15, 11]))
func_5798_call = mod.get_global_var('func_5798')
func_5801_call = mutated_mod.get_global_var('func_5801')
call_8033 = relay.TupleGetItem(func_5798_call(relay.reshape(var_7996.astype('int32'), [3,])), 2)
call_8034 = relay.TupleGetItem(func_5801_call(relay.reshape(var_7996.astype('int32'), [3,])), 2)
func_6287_call = mod.get_global_var('func_6287')
func_6289_call = mutated_mod.get_global_var('func_6289')
call_8039 = relay.TupleGetItem(func_6287_call(), 0)
call_8040 = relay.TupleGetItem(func_6289_call(), 0)
func_4608_call = mod.get_global_var('func_4608')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_8059 = relay.TupleGetItem(func_4608_call(), 0)
call_8060 = relay.TupleGetItem(func_4610_call(), 0)
func_5118_call = mod.get_global_var('func_5118')
func_5119_call = mutated_mod.get_global_var('func_5119')
call_8062 = relay.TupleGetItem(func_5118_call(), 2)
call_8063 = relay.TupleGetItem(func_5119_call(), 2)
output = relay.Tuple([bop_7985,call_7995,var_7997,bop_8009,call_8029,call_8033,call_8039,call_8059,call_8062,])
output2 = relay.Tuple([bop_7985,call_7998,var_7997,bop_8009,call_8030,call_8034,call_8040,call_8060,call_8063,])
func_8064 = relay.Function([var_7983,var_7984,var_7996,var_7997,], output)
mod['func_8064'] = func_8064
mod = relay.transform.InferType()(mod)
mutated_mod['func_8064'] = func_8064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8064_call = mutated_mod.get_global_var('func_8064')
var_8066 = relay.var("var_8066", dtype = "uint16", shape = (11, 10, 1))#candidate|8066|(11, 10, 1)|var|uint16
var_8067 = relay.var("var_8067", dtype = "uint16", shape = (11, 10, 16))#candidate|8067|(11, 10, 16)|var|uint16
var_8068 = relay.var("var_8068", dtype = "int32", shape = (3,))#candidate|8068|(3,)|var|int32
var_8069 = relay.var("var_8069", dtype = "int32", shape = (252,))#candidate|8069|(252,)|var|int32
call_8065 = func_8064_call(var_8066,var_8067,var_8068,var_8069,)
output = call_8065
func_8070 = relay.Function([var_8066,var_8067,var_8068,var_8069,], output)
mutated_mod['func_8070'] = func_8070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1932_call = mod.get_global_var('func_1932')
func_1933_call = mutated_mod.get_global_var('func_1933')
call_8075 = relay.TupleGetItem(func_1932_call(), 5)
call_8076 = relay.TupleGetItem(func_1933_call(), 5)
var_8079 = relay.var("var_8079", dtype = "float64", shape = (1386,))#candidate|8079|(1386,)|var|float64
bop_8080 = relay.logical_or(call_8075.astype('bool'), relay.reshape(var_8079.astype('bool'), relay.shape_of(call_8075))) # shape=(1386,)
bop_8083 = relay.logical_or(call_8076.astype('bool'), relay.reshape(var_8079.astype('bool'), relay.shape_of(call_8076))) # shape=(1386,)
output = bop_8080
output2 = bop_8083
func_8085 = relay.Function([var_8079,], output)
mod['func_8085'] = func_8085
mod = relay.transform.InferType()(mod)
var_8086 = relay.var("var_8086", dtype = "float64", shape = (1386,))#candidate|8086|(1386,)|var|float64
output = func_8085(var_8086)
func_8087 = relay.Function([var_8086], output)
mutated_mod['func_8087'] = func_8087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3797_call = mod.get_global_var('func_3797')
func_3799_call = mutated_mod.get_global_var('func_3799')
call_8162 = relay.TupleGetItem(func_3797_call(), 0)
call_8163 = relay.TupleGetItem(func_3799_call(), 0)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_8165 = relay.TupleGetItem(func_3338_call(), 0)
call_8166 = relay.TupleGetItem(func_3340_call(), 0)
output = relay.Tuple([call_8162,call_8165,])
output2 = relay.Tuple([call_8163,call_8166,])
func_8167 = relay.Function([], output)
mod['func_8167'] = func_8167
mod = relay.transform.InferType()(mod)
mutated_mod['func_8167'] = func_8167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8167_call = mutated_mod.get_global_var('func_8167')
call_8168 = func_8167_call()
output = call_8168
func_8169 = relay.Function([], output)
mutated_mod['func_8169'] = func_8169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8206 = relay.var("var_8206", dtype = "float32", shape = (8, 1, 11))#candidate|8206|(8, 1, 11)|var|float32
uop_8207 = relay.cos(var_8206.astype('float32')) # shape=(8, 1, 11)
func_6729_call = mod.get_global_var('func_6729')
func_6731_call = mutated_mod.get_global_var('func_6731')
call_8230 = relay.TupleGetItem(func_6729_call(), 1)
call_8231 = relay.TupleGetItem(func_6731_call(), 1)
var_8252 = relay.var("var_8252", dtype = "float32", shape = (8, 7, 11))#candidate|8252|(8, 7, 11)|var|float32
bop_8253 = relay.bitwise_xor(uop_8207.astype('uint64'), var_8252.astype('uint64')) # shape=(8, 7, 11)
uop_8261 = relay.acosh(uop_8207.astype('float32')) # shape=(8, 1, 11)
func_3797_call = mod.get_global_var('func_3797')
func_3799_call = mutated_mod.get_global_var('func_3799')
call_8267 = relay.TupleGetItem(func_3797_call(), 0)
call_8268 = relay.TupleGetItem(func_3799_call(), 0)
output = relay.Tuple([call_8230,bop_8253,uop_8261,call_8267,])
output2 = relay.Tuple([call_8231,bop_8253,uop_8261,call_8268,])
func_8270 = relay.Function([var_8206,var_8252,], output)
mod['func_8270'] = func_8270
mod = relay.transform.InferType()(mod)
var_8271 = relay.var("var_8271", dtype = "float32", shape = (8, 1, 11))#candidate|8271|(8, 1, 11)|var|float32
var_8272 = relay.var("var_8272", dtype = "float32", shape = (8, 7, 11))#candidate|8272|(8, 7, 11)|var|float32
output = func_8270(var_8271,var_8272,)
func_8273 = relay.Function([var_8271,var_8272,], output)
mutated_mod['func_8273'] = func_8273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5659_call = mod.get_global_var('func_5659')
func_5660_call = mutated_mod.get_global_var('func_5660')
call_8285 = func_5659_call()
call_8286 = func_5659_call()
func_5329_call = mod.get_global_var('func_5329')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_8301 = relay.TupleGetItem(func_5329_call(), 0)
call_8302 = relay.TupleGetItem(func_5330_call(), 0)
func_1586_call = mod.get_global_var('func_1586')
func_1589_call = mutated_mod.get_global_var('func_1589')
var_8304 = relay.var("var_8304", dtype = "int64", shape = (700,))#candidate|8304|(700,)|var|int64
call_8303 = relay.TupleGetItem(func_1586_call(relay.reshape(var_8304.astype('int64'), [5, 10, 14]), relay.reshape(var_8304.astype('int64'), [5, 10, 14]), ), 1)
call_8305 = relay.TupleGetItem(func_1589_call(relay.reshape(var_8304.astype('int64'), [5, 10, 14]), relay.reshape(var_8304.astype('int64'), [5, 10, 14]), ), 1)
func_7358_call = mod.get_global_var('func_7358')
func_7360_call = mutated_mod.get_global_var('func_7360')
call_8312 = func_7358_call()
call_8313 = func_7358_call()
output = relay.Tuple([call_8285,call_8301,call_8303,var_8304,call_8312,])
output2 = relay.Tuple([call_8286,call_8302,call_8305,var_8304,call_8313,])
func_8319 = relay.Function([var_8304,], output)
mod['func_8319'] = func_8319
mod = relay.transform.InferType()(mod)
var_8320 = relay.var("var_8320", dtype = "int64", shape = (700,))#candidate|8320|(700,)|var|int64
output = func_8319(var_8320)
func_8321 = relay.Function([var_8320], output)
mutated_mod['func_8321'] = func_8321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5467_call = mod.get_global_var('func_5467')
func_5468_call = mutated_mod.get_global_var('func_5468')
call_8352 = relay.TupleGetItem(func_5467_call(), 1)
call_8353 = relay.TupleGetItem(func_5468_call(), 1)
output = call_8352
output2 = call_8353
func_8356 = relay.Function([], output)
mod['func_8356'] = func_8356
mod = relay.transform.InferType()(mod)
output = func_8356()
func_8357 = relay.Function([], output)
mutated_mod['func_8357'] = func_8357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2316_call = mod.get_global_var('func_2316')
func_2318_call = mutated_mod.get_global_var('func_2318')
call_8390 = func_2316_call()
call_8391 = func_2316_call()
func_7252_call = mod.get_global_var('func_7252')
func_7256_call = mutated_mod.get_global_var('func_7256')
const_8397 = relay.const([0.957648,-1.261051,0.229836,1.704256,1.449199,-4.160029,-0.280483,-5.357812,-7.527732,5.516824,-9.211475,3.938956,-3.165348,-7.407193,1.195778,-9.546646,-6.416019,-4.162760,-0.515160,0.559264,-6.109646,-1.136705,8.968104,1.812096,9.739653,-8.172908,-9.503220,2.981618,-5.581960,5.552915,-8.541776,-8.399201,-3.894558,-7.208888,-2.494593,4.649966,8.114998,7.464725,-4.804312,-3.953415,2.298727,6.785690,-4.152923,-0.174326,5.798477,-8.060955,-5.384957,-9.045700,6.970561,2.075942,9.402188,2.546756,-2.152545,3.706173,8.194514,9.650212,2.973657,5.259807,2.408462,-5.569618,8.544341,-2.763312,5.510620,-1.615346,2.758517,1.488250,-4.519717,4.188947,7.459728,5.511124,5.973174,-5.811033,-5.228323,-9.647079,5.818450,-5.135527,-9.870478,-1.009818,6.077777,-9.414879,6.796682,4.517671,-2.684339,-9.944783,-4.584420,1.855767,-5.585266,-8.657826,7.101265,7.207189,1.044558,9.585747,-4.362569,1.510157,-8.062859,1.244293,5.155261,-5.674311,6.082706,-8.221359,-0.012883,4.063211,2.389483,6.135093,6.415175,5.901967,-4.158546,-3.992010,2.489592,3.127278,8.130525,6.943469,3.051129,6.880188,-8.137551,-1.472756,0.800138,-2.509991,7.244746,6.652919,-6.193128,8.139113,6.064117,9.146750,-1.430976,-1.015835,0.563651,-0.990117,9.391131,-6.538625,8.942614,3.350594,-8.335364,2.288314,6.842503,-2.248345,-8.388586,8.557981,1.838064,-9.196791,9.704582,-0.599692,-2.709908,4.929678,-7.301433,7.118556,7.837287,-6.116783,-5.171306,7.136316,-8.112618,9.907384,-9.668117,-8.299557,-0.889020,1.263047,2.355781,-2.386104,-2.782132,-3.751643,6.357691,0.413004,-8.607938,7.170748,4.953221,-6.441137,-3.701274,-7.652825,-6.280974,3.641390,5.544195,-4.730774,-4.526618,-1.708632,2.796471,3.223969,9.324483,1.376749,-8.474828,-5.950163,7.218868,8.848556,8.470350,-3.976092,-9.844915,-1.912022,-1.834391,-4.763399,8.136697,-2.625707,9.114778,-5.885673,-8.035277,-5.270317,-1.915196,-1.044386,-8.646345,6.617885,-6.049808,6.639208,9.634587,-7.518163,3.934189,-9.539346,-4.873817,2.343326,-5.060675,-3.650939,9.522001,7.516985,0.327260,5.601466,5.875190,8.650370,4.585244,-0.070884,-2.192750,-9.120932,-7.150244,8.147226,0.368455,-1.795141,-4.657555,-1.389073,-6.613274,5.806477,-7.491333,3.743317,2.861777,2.789933,8.928818,-6.333339,-8.464484,6.832666,9.262786,9.837747,4.677605,5.532351,-0.356507,0.053402,1.819597,3.776194,-9.602413,-6.811753,8.880229,-0.524180,6.628366,1.463613,5.704436,-2.844402,9.477821,-9.479216,-8.443860,-5.554486,3.577315,2.745682,-9.253660,-3.342916,5.563425,-4.588006,-0.792084,7.426593,6.888314,-1.511237,-4.558272,-2.544216,-9.671017,-9.407511,-6.734578,-9.904449,0.826523,-7.077199,-7.631799,-1.519390,7.124734,-6.457906,3.533099,-4.773900,-2.827127,9.844535,1.385617,-4.576912,-7.362311,-7.637313,6.917852,0.158490,-0.738144,-6.042066,-5.200802,-5.623654,-5.946908,-2.018164,5.097371,-4.377427,0.114035,-3.496118,3.703434,-3.817941,0.790561,-2.934893,8.057580,7.414185,-0.498952,-1.376382,-7.134537,-0.555459,-9.740507,-3.423589,5.765379,0.600184,3.813898,-0.270391,7.075103,-7.871917,2.058704,5.956396,-0.504185,8.560413,6.806935,-7.056871,-0.035011,-8.020000,4.854078,-8.121934,5.136245,9.721167,8.068368,-4.194573,-2.051413,-1.881822], dtype = "float32")#candidate|8397|(330,)|const|float32
const_8398 = relay.const([-10,-10,4], dtype = "int32")#candidate|8398|(3,)|const|int32
call_8396 = relay.TupleGetItem(func_7252_call(relay.reshape(const_8397.astype('float32'), [2, 15, 11]), relay.reshape(const_8398.astype('int32'), [3,]), relay.reshape(const_8397.astype('float32'), [2, 15, 11]), ), 1)
call_8399 = relay.TupleGetItem(func_7256_call(relay.reshape(const_8397.astype('float32'), [2, 15, 11]), relay.reshape(const_8398.astype('int32'), [3,]), relay.reshape(const_8397.astype('float32'), [2, 15, 11]), ), 1)
output = relay.Tuple([call_8390,call_8396,const_8397,const_8398,])
output2 = relay.Tuple([call_8391,call_8399,const_8397,const_8398,])
func_8400 = relay.Function([], output)
mod['func_8400'] = func_8400
mod = relay.transform.InferType()(mod)
output = func_8400()
func_8401 = relay.Function([], output)
mutated_mod['func_8401'] = func_8401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6729_call = mod.get_global_var('func_6729')
func_6731_call = mutated_mod.get_global_var('func_6731')
call_8415 = relay.TupleGetItem(func_6729_call(), 1)
call_8416 = relay.TupleGetItem(func_6731_call(), 1)
output = call_8415
output2 = call_8416
func_8419 = relay.Function([], output)
mod['func_8419'] = func_8419
mod = relay.transform.InferType()(mod)
mutated_mod['func_8419'] = func_8419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8419_call = mutated_mod.get_global_var('func_8419')
call_8420 = func_8419_call()
output = call_8420
func_8421 = relay.Function([], output)
mutated_mod['func_8421'] = func_8421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8478 = relay.var("var_8478", dtype = "float32", shape = (6, 1, 13))#candidate|8478|(6, 1, 13)|var|float32
var_8479 = relay.var("var_8479", dtype = "float32", shape = (6, 7, 13))#candidate|8479|(6, 7, 13)|var|float32
bop_8480 = relay.power(var_8478.astype('float32'), var_8479.astype('float32')) # shape=(6, 7, 13)
uop_8483 = relay.log2(var_8478.astype('float64')) # shape=(6, 1, 13)
uop_8495 = relay.sin(uop_8483.astype('float64')) # shape=(6, 1, 13)
uop_8497 = relay.sqrt(uop_8483.astype('float64')) # shape=(6, 1, 13)
uop_8499 = relay.tan(uop_8495.astype('float32')) # shape=(6, 1, 13)
output = relay.Tuple([bop_8480,uop_8497,uop_8499,])
output2 = relay.Tuple([bop_8480,uop_8497,uop_8499,])
func_8502 = relay.Function([var_8478,var_8479,], output)
mod['func_8502'] = func_8502
mod = relay.transform.InferType()(mod)
var_8503 = relay.var("var_8503", dtype = "float32", shape = (6, 1, 13))#candidate|8503|(6, 1, 13)|var|float32
var_8504 = relay.var("var_8504", dtype = "float32", shape = (6, 7, 13))#candidate|8504|(6, 7, 13)|var|float32
output = func_8502(var_8503,var_8504,)
func_8505 = relay.Function([var_8503,var_8504,], output)
mutated_mod['func_8505'] = func_8505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8509 = relay.var("var_8509", dtype = "uint64", shape = ())#candidate|8509|()|var|uint64
const_8510 = relay.const([[[-2,-10,5,-8,7,-6,-2,-9,-4,-10],[9,9,2,2,-9,-7,-1,6,2,-7],[-1,9,-7,2,-1,-6,-4,2,1,5],[10,-5,-9,-7,4,4,-6,9,-3,-5],[-3,5,-8,-3,-10,-8,-2,-3,3,4]],[[3,5,2,3,2,10,-10,7,1,-4],[-8,-5,-5,-1,-8,8,-6,-1,4,4],[5,-5,8,-3,-2,1,-1,-2,5,-7],[-10,-4,-7,-5,-2,-8,4,2,-5,-4],[-1,-7,-1,3,2,-1,-6,-9,4,5]]], dtype = "uint64")#candidate|8510|(2, 5, 10)|const|uint64
bop_8511 = relay.logical_xor(var_8509.astype('uint64'), const_8510.astype('uint64')) # shape=(2, 5, 10)
uop_8514 = relay.erf(bop_8511.astype('float64')) # shape=(2, 5, 10)
output = uop_8514
output2 = uop_8514
F = relay.Function([var_8509,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8509,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

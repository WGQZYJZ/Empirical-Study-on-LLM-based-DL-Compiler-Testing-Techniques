==========mod==========
#[version = "0.0.5"]
def @func_16345() -> Tensor[(96), uint64] {
  %0 = @func_12731() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) */;
  %0.0
}

def @func_21268() -> (Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float32]) {
  %1 = @func_16228() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(2, 11, 7), int64]) */;
  %2 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %3 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %4 = %1.1;
  %5 = %2.1;
  %6 = %3.1;
  (%4, %5, %6)
}

def @func_6723() -> (Tensor[(15, 13, 11), uint32],) {
  %7 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %8 = %7.1;
  (%8,)
}

def @func_22138() -> (Tensor[(15, 13, 11), uint32], Tensor[(16, ?, 9), int32]) {
  %9 = @func_14383() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 72), float64] */, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %11 = reshape(%10, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), float64] */;
  %12 = @func_19650(%11) /* ty=Tensor[(16, 1, 9), float64] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 72), float64] */, dtype="int32") /* ty=Tensor[(2, 72), int32] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%12, dtype="int32") /* ty=Tensor[(16, 1, 9), int32] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %17 = %9.0;
  %18 = maximum(%15, %16) /* ty=Tensor[(16, ?, 9), int32] */;
  (%17, %18)
}

def @func_5097() -> Tensor[(96), uint64] {
  %19 = @func_3027() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %19.1
}

def @func_5394() -> Tensor[(15, 13, 11), uint32] {
  @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_3696(%var_3671: Tensor[(2, 11, 7), int64], %var_3672: Tensor[(2, 11, 7), int64]) -> (Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32]) {
  %20 = cast(%var_3672, dtype="int64") /* ty=Tensor[(2, 11, 7), int64] */;
  %21 = shape_of(%var_3671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%var_3671, dtype="int64") /* ty=Tensor[(2, 11, 7), int64] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %24 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %25 = bitwise_and(%22, %23) /* ty=Tensor[(2, 11, 7), int64] */;
  %26 = %24.1;
  (%25, %26)
}

def @func_7317() -> (Tensor[(14, 16, 5), float64],) {
  %27 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  (%27,)
}

def @func_13358() -> (Tensor[(15, 13, 11), uint32],) {
  %28 = @func_9128() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %29 = %28.1;
  (%29,)
}

def @func_5319() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %30 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %31 = %30.1;
  %32 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  (%31, %32)
}

def @func_4710() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
  %33 = @func_3076() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %34 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %35 = %33.0;
  (%34, %35)
}

def @func_5365() -> Tensor[(15, 13, 11), uint32] {
  %36 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %36.0
}

def @func_8997() -> (Tensor[(14, 16, 5), float32],) {
  %37 = @func_5535() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %38 = %37.0;
  (%38,)
}

def @func_8633() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %39 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %40 = @func_6709() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %41 = %39.0;
  %42 = %40.0;
  (%41, %42)
}

def @func_6643() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) {
  %43 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %44 = @func_2914() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %45 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
  %46 = %45.0;
  %47 = cast(%46, dtype="float32") /* ty=Tensor[(14, 16, 5), float32] */;
  %48 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
  %49 = %43.0;
  %50 = %44.0;
  %51 = asinh(%47) /* ty=Tensor[(14, 16, 5), float32] */;
  %52 = %48.0;
  %53 = @func_4729() /* ty=Tensor[(14, 16, 5), float32] */;
  (%49, %50, %51, %52, %53)
}

def @func_5802() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) {
  %54 = @func_5535() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %55 = %54.0;
  %56 = cast(%55, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %57 = reshape(%56, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %58 = @func_2627(%57) /* ty=(Tensor[(14, 16, 5), uint32],) */;
  %59 = %58.0;
  (%55, %59)
}

def @func_21366() -> (Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) {
  %60 = @func_5071() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
  %61 = @func_18467() /* ty=Tensor[(96), uint64] */;
  %62 = @func_5097() /* ty=Tensor[(96), uint64] */;
  %63 = %60.3;
  (%61, %62, %63)
}

def @func_6361() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %64 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %65 = %64.0;
  %66 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  (%65, %66)
}

def @func_8926() -> Tensor[(14, 16, 5), float64] {
  @func_5273() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_18314() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) {
  %67 = @func_15990() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %68 = cast(meta[relay.Constant][1] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %69 = reshape(%68, newshape=[143, 15]) /* ty=Tensor[(143, 15), int32] */;
  %70 = @func_13451(%69) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(143, 15), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %71 = @func_12415() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(2145), int32]) */;
  %72 = %67.1;
  %73 = %70.0;
  %74 = %71.2;
  (%72, %73, meta[relay.Constant][1] /* ty=Tensor[(2145), int32] */, %74)
}

def @func_16750(%var_16711: Tensor[(400), uint16]) -> (Tensor[(14, 16, 5), float32], Tensor[(5, 10, 8), float64]) {
  %75 = @func_9948() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %76 = cast(%var_16711, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %77 = reshape(%76, newshape=[5, 10, 8]) /* ty=Tensor[(5, 10, 8), uint16] */;
  %78 = @func_14760(%77) /* ty=Tensor[(5, 10, 8), uint16] */;
  %79 = cast(%var_16711, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%78, dtype="uint16") /* ty=Tensor[(5, 10, 8), uint16] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %83 = bitwise_xor(%81, %82) /* ty=Tensor[(5, 10, 8), uint16] */;
  %84 = cast(%83, dtype="float64") /* ty=Tensor[(5, 10, 8), float64] */;
  %85 = %75.2;
  %86 = sqrt(%84) /* ty=Tensor[(5, 10, 8), float64] */;
  (%85, %86)
}

def @func_4807(%var_4776: Tensor[(10, 6, 1), int8], %var_4777: Tensor[(10, 6, 14), int8]) -> (Tensor[(10, 6, 14), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  %87 = cast(%var_4776, dtype="int8") /* ty=Tensor[(10, 6, 1), int8] */;
  %88 = cast(%var_4777, dtype="int8") /* ty=Tensor[(10, 6, 14), int8] */;
  %89 = left_shift(%87, %88) /* ty=Tensor[(10, 6, 14), int8] */;
  %90 = cast(%89, dtype="float32") /* ty=Tensor[(10, 6, 14), float32] */;
  %91 = shape_of(%var_4777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%var_4777, dtype="float32") /* ty=Tensor[(10, 6, 14), float32] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %94 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
  %95 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %96 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
  %97 = maximum(%92, %93) /* ty=Tensor[(10, 6, 14), float32] */;
  %98 = %94.0;
  %99 = %95.0;
  %100 = %96.3;
  (%97, %98, %99, %100)
}

def @func_15182() -> (Tensor[(15, 13, 11), uint32],) {
  %101 = @func_11586() /* ty=(Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), uint32]) */;
  %102 = %101.2;
  (%102,)
}

def @func_2994() -> (Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) {
  %103 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %104 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %105 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %106 = @func_1290() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %107 = %103.3;
  %108 = %104.2;
  %109 = %105.1;
  %110 = %106.1;
  (%107, %108, %109, %110)
}

def @func_1127(%var_1093: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %111 = cast(%var_1093, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %112 = reshape(%111, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %113 = @func_844(%112) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
  %114 = %113.5;
  %115 = cast(%114, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
  %116 = cast(%var_1093, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %117 = reshape(%116, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %118 = @func_697(%117) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %119 = %118.0;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %121 = cast(%114, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %122 = reshape(%120, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %123 = reshape(%121, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %124 = @func_1046(%122, %123) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %125 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  %126 = exp(%115) /* ty=Tensor[(15, 13, 11), float32] */;
  %127 = %124.0;
  (%125, %var_1093, %126, %119, %127)
}

def @func_2185() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) {
  %128 = @func_1182() /* ty=(Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) */;
  %129 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %130 = cast(meta[relay.Constant][2] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %131 = reshape(%130, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %132 = @func_912(%131) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
  %133 = %128.1;
  %134 = %129.0;
  %135 = %132.2;
  (%133, %134, %135, meta[relay.Constant][2] /* ty=Tensor[(96), uint64] */)
}

def @func_12862() -> (Tensor[(2145), bool], Tensor[(14, 16, 5), float64]) {
  %136 = @func_9440() /* ty=(Tensor[(2145), bool], Tensor[(14, 16, 5), float32]) */;
  %137 = @func_9677() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %138 = %136.0;
  %139 = %137.0;
  (%138, %139)
}

def @func_2045() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %140 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %141 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %142 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %143 = %140.1;
  (%141, %142, %143)
}

def @func_5141(%var_5134: Tensor[(1, 7, 8), float32]) -> (Tensor[(1, 7, 8), float32],) {
  %144 = cast(%var_5134, dtype="float32") /* ty=Tensor[(1, 7, 8), float32] */;
  %145 = asin(%144) /* ty=Tensor[(1, 7, 8), float32] */;
  (%145,)
}

def @func_17686() -> (Tensor[(16, 6), uint64], Tensor[(1, 7, 8), float32], Tensor[(28, 2), float32], Tensor[(15, 13, 11), uint32]) {
  %146 = cast(meta[relay.Constant][3] /* ty=Tensor[(28, 2), float32] */, dtype="float32") /* ty=Tensor[(28, 2), float32] */;
  %147 = reshape(%146, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), float32] */;
  %148 = @func_5141(%147) /* ty=(Tensor[(1, 7, 8), float32],) */;
  %149 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %150 = @func_5466() /* ty=Tensor[(16, 6), uint64] */;
  %151 = %148.0;
  %152 = %149.0;
  (%150, %151, meta[relay.Constant][3] /* ty=Tensor[(28, 2), float32] */, %152)
}

def @func_15096() -> Tensor[(4, 4, 4), int8] {
  @func_13893() /* ty=Tensor[(4, 4, 4), int8] */
}

def @func_4845() -> (Tensor[(15, 13, 11), uint32],) {
  %153 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %154 = %153.0;
  (%154,)
}

def @func_13099() -> (Tensor[(14, 16, 5), float64],) {
  %155 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  (%155,)
}

def @func_18525() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %156 = @func_17520() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) */;
  %157 = %156.2;
  %158 = @func_9623() /* ty=Tensor[(96), uint64] */;
  (%157, %158)
}

def @func_11141() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) {
  %159 = @func_10179() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %160 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %161 = @func_6043() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %162 = cast(meta[relay.Constant][4] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %163 = reshape(%162, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %164 = @func_6435(%163) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) */;
  %165 = %159.1;
  %166 = %160.2;
  %167 = %161.2;
  %168 = %164.1;
  (%165, %166, %167, %168, meta[relay.Constant][4] /* ty=Tensor[(18), float32] */)
}

def @func_15704() -> (Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %169 = @func_14160() /* ty=(Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) */;
  %170 = @func_6809() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %171 = %169.0;
  %172 = %170.0;
  (%171, %172)
}

def @func_15903(%var_15895: Tensor[(10, 14, 7), float64]) -> Tensor[(10, 14, 7), float64] {
  %173 = cast(%var_15895, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  asin(%173) /* ty=Tensor[(10, 14, 7), float64] */
}

def @func_7898(%var_7872: Tensor[(15, 4, 13), float64], %var_7875: Tensor[(15, 4, 13), float64], %var_7885: Tensor[(64), float32]) -> (Tensor[(15, 4, 13), bool], Tensor[(4, 4, 4), int8], Tensor[(64), float32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64]) {
  %174 = cast(%var_7872, dtype="float64") /* ty=Tensor[(15, 4, 13), float64] */;
  %175 = asin(%174) /* ty=Tensor[(15, 4, 13), float64] */;
  %176 = cast(%var_7875, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%175, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %180 = cast(%var_7885, dtype="float32") /* ty=Tensor[(64), float32] */;
  %181 = cast(%var_7885, dtype="float32") /* ty=Tensor[(64), float32] */;
  %182 = reshape(%180, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %183 = reshape(%181, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %184 = @func_7866(%182, %183) /* ty=(Tensor[(4, 4, 4), int8],) */;
  %185 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %186 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %187 = logical_or(%178, %179) /* ty=Tensor[(15, 4, 13), bool] */;
  %188 = %184.0;
  %189 = %185.0;
  %190 = %186.0;
  (%187, %188, %var_7885, %189, %190)
}

def @func_2870() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
  %191 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %192 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %193 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %194 = %191.0;
  %195 = %192.1;
  (%193, %194, %195)
}

def @func_8028(%var_7960: Tensor[(15, 13, 11), uint32]) -> (Tensor[(15, 13, 11), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %196 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %197 = %196.1;
  %198 = cast(%var_7960, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %199 = shape_of(%197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%197, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %202 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %203 = floor_divide(%200, %201) /* ty=Tensor[(15, 13, 11), float64] */;
  %204 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
  %205 = %202.1;
  %206 = @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%203, %204, %205, %206)
}

def @func_1046(%var_1016: Tensor[(14, 16, 5), float64], %var_1022: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) {
  %207 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %208 = cast(%var_1016, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%207, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %212 = cast(%var_1022, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %213 = cast(%var_1022, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %214 = reshape(%212, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %215 = reshape(%213, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %216 = @func_182(%214, %215) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %217 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %218 = floor_divide(%210, %211) /* ty=Tensor[(14, 16, 5), float64] */;
  %219 = %216.0;
  %220 = %217.2;
  (%218, %219, %var_1022, %220)
}

def @func_16642() -> (Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %221 = @func_15479() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %222 = @func_3537() /* ty=Tensor[(2145), int32] */;
  %223 = %221.0;
  (%222, %223)
}

def @func_13930() -> Tensor[(96), uint64] {
  %224 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %224.0
}

def @func_22918() -> (Tensor[(14, 16, 5), float64],) {
  %225 = @func_22029() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %226 = %225.1;
  (%226,)
}

def @func_7796(%var_7793: Tensor[(15, 9, 10), float64]) -> Tensor[(15, 9, 10), float64] {
  %227 = cast(%var_7793, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  log(%227) /* ty=Tensor[(15, 9, 10), float64] */
}

def @func_13015() -> (Tensor[(14, 16, 5), float64],) {
  %228 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
  %229 = %228.3;
  (%229,)
}

def @func_3424() -> (Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %230 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %231 = %230.0;
  %232 = cast(%231, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %233 = cast(%231, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %234 = reshape(%232, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %235 = reshape(%233, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %236 = @func_182(%234, %235) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %237 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %238 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %239 = %238.1;
  %240 = cast(%239, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %241 = %236.0;
  %242 = %237.2;
  %243 = sigmoid(%240) /* ty=Tensor[(14, 16, 5), float64] */;
  (%231, %241, %242, %243)
}

def @func_14473() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %244 = @func_8886() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %245 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
  %246 = %244.0;
  %247 = @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */;
  %248 = %245.3;
  (%246, %247, %248)
}

def @func_1710() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %249 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %250 = %249.1;
  %251 = @func_1516() /* ty=Tensor[(14, 16, 5), float32] */;
  (%250, %251)
}

def @func_5425() -> Tensor[(15, 13, 11), uint32] {
  %252 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %252.0
}

def @func_18690() -> (Tensor[(14, 16, 5), float64],) {
  %253 = @func_13015() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %254 = %253.0;
  (%254,)
}

def @func_6809() -> (Tensor[(15, 13, 11), uint32],) {
  %255 = @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%255,)
}

def @func_15079(%var_15042: Tensor[(4, 11, 2), int32]) -> (Tensor[(4, 11, 2), int32], Tensor[(4, ?, 2), bool]) {
  %256 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 1, 2), int32] */, dtype="int32") /* ty=Tensor[(4, 1, 2), int32] */;
  %257 = cast(%var_15042, dtype="int32") /* ty=Tensor[(4, 11, 2), int32] */;
  %258 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 1, 2), int32] */, dtype="float64") /* ty=Tensor[(4, 1, 2), float64] */;
  %259 = erf(%258) /* ty=Tensor[(4, 1, 2), float64] */;
  %260 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 1, 2), int32] */, dtype="bool") /* ty=Tensor[(4, 1, 2), bool] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(%259, dtype="bool") /* ty=Tensor[(4, 1, 2), bool] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %264 = logical_xor(%256, %257) /* ty=Tensor[(4, 11, 2), int32] */;
  %265 = less_equal(%262, %263) /* ty=Tensor[(4, ?, 2), bool] */;
  (%264, %265)
}

def @func_2914() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %266 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %267 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %268 = %266.0;
  %269 = %267.3;
  (%268, %269)
}

def @func_13548() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %270 = @func_5911() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %271 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %272 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
  %273 = %270.0;
  %274 = %271.1;
  (%272, %273, %274)
}

def @func_15122(%var_15116: Tensor[(9, 13, 2), int8], %var_15117: Tensor[(9, 13, 2), int8]) -> (Tensor[(9, 13, 2), int8],) {
  %275 = cast(%var_15117, dtype="int8") /* ty=Tensor[(9, 13, 2), int8] */;
  %276 = shape_of(%var_15116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%var_15116, dtype="int8") /* ty=Tensor[(9, 13, 2), int8] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %279 = left_shift(%277, %278) /* ty=Tensor[(9, 13, 2), int8] */;
  (%279,)
}

def @func_14210() -> (Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %280 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
  %281 = @func_7631() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %282 = %280.3;
  %283 = %281.0;
  (%282, %283)
}

def @func_12229() -> (Tensor[(14, 16, 5), float64],) {
  %284 = @func_7317() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %285 = %284.0;
  (%285,)
}

def @func_19650(%var_19634: Tensor[(16, 1, 9), float64]) -> Tensor[(16, 1, 9), float64] {
  %286 = cast(%var_19634, dtype="float64") /* ty=Tensor[(16, 1, 9), float64] */;
  erf(%286) /* ty=Tensor[(16, 1, 9), float64] */
}

def @func_9785() -> Tensor[(15, 13, 11), uint32] {
  %287 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %287.0
}

def @func_4472() -> (Tensor[(96), uint64],) {
  %288 = @func_2684() /* ty=(Tensor[(96), uint64],) */;
  %289 = %288.0;
  (%289,)
}

def @func_6507() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) {
  %290 = @func_3027() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %291 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %292 = %290.0;
  %293 = %291.1;
  (%292, %293)
}

def @func_3076() -> (Tensor[(14, 16, 5), float32],) {
  %294 = @func_2994() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) */;
  %295 = %294.3;
  %296 = cast(%295, dtype="float32") /* ty=Tensor[(14, 16, 5), float32] */;
  %297 = sinh(%296) /* ty=Tensor[(14, 16, 5), float32] */;
  (%297,)
}

def @func_15745() -> (Tensor[(15, 13, 11), uint32],) {
  %298 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %299 = %298.0;
  (%299,)
}

def @func_12780() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) {
  %300 = @func_11586() /* ty=(Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), uint32]) */;
  %301 = @func_10254() /* ty=Tensor[(14, 16, 5), float32] */;
  %302 = %300.0;
  (%301, %302)
}

def @func_18902() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %303 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
  %304 = @func_11747() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32]) */;
  %305 = @func_9623() /* ty=Tensor[(96), uint64] */;
  %306 = %303.4;
  %307 = %304.2;
  (%305, %306, %307)
}

def @func_14179(%var_14174: Tensor[(5, 7, 2), float64]) -> Tensor[(5, 7, 2), float64] {
  %308 = cast(%var_14174, dtype="float64") /* ty=Tensor[(5, 7, 2), float64] */;
  rsqrt(%308) /* ty=Tensor[(5, 7, 2), float64] */
}

def @func_1586() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %309 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %310 = cast(%309, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %311 = reshape(%310, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %312 = @func_697(%311) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %313 = %312.2;
  %314 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  (%309, %313, %314)
}

def @func_10996() -> Tensor[(14, 16, 5), float64] {
  %315 = @func_7317() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %315.0
}

def @func_1549(%var_1540: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), int32]) {
  %316 = cast(%var_1540, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %317 = reshape(%316, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %318 = @func_844(%317) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
  %319 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  %320 = %318.4;
  (%319, %320, %var_1540)
}

def @func_9215() -> Tensor[(15, 13, 11), uint32] {
  @func_3836() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_12021() -> (Tensor[(15, 13, 11), uint32],) {
  %321 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%321,)
}

def @func_6739() -> Tensor[(15, 13, 11), uint32] {
  %322 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %322.1
}

def @func_11965() -> (Tensor[(15, 13, 11), uint32],) {
  %323 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
  %324 = %323.1;
  (%324,)
}

def @func_7425() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %325 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %326 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %327 = %325.0;
  %328 = %326.0;
  (%327, %328)
}

def @func_2270() -> (Tensor[(15, 13, 11), uint32],) {
  %329 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %330 = %329.0;
  (%330,)
}

def @func_14732() -> Tensor[(15, 13, 11), uint32] {
  %331 = @func_6709() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %331.0
}

def @func_16309(%var_16304: Tensor[(675, 2), float64]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 9, 10), float64], Tensor[(675, 2), float64]) {
  %332 = @func_4295() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %333 = cast(%var_16304, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %334 = reshape(%333, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %335 = %332.1;
  %336 = @func_7796(%334) /* ty=Tensor[(15, 9, 10), float64] */;
  (%335, %336, %var_16304)
}

def @func_12823() -> (Tensor[(13, 2, 10), uint8], Tensor[(15, 13, 11), uint32], Tensor[(1056), uint64], Tensor[(11, 96), float32]) {
  %337 = @func_8394() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
  %338 = @func_5071() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
  %339 = %338.6;
  %340 = cast(%339, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %341 = cast(meta[relay.Constant][6] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
  %342 = reshape(%340, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float64] */;
  %343 = reshape(%341, newshape=[11, 96]) /* ty=Tensor[(11, 96), uint64] */;
  %344 = @func_7851(%342, %343) /* ty=(Tensor[(11, 96), uint64], Tensor[(18), float32], Tensor[(15, 13, 11), bool], Tensor[(11, 96), bool]) */;
  %345 = %344.3;
  %346 = cast(%345, dtype="float32") /* ty=Tensor[(11, 96), float32] */;
  %347 = %337.1;
  %348 = log2(%346) /* ty=Tensor[(11, 96), float32] */;
  (%347, %339, meta[relay.Constant][6] /* ty=Tensor[(1056), uint64] */, %348)
}

def @func_5606() -> (Tensor[(96), uint64],) {
  %349 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %350 = %349.1;
  (%350,)
}

def @func_16497(%var_16445: Tensor[(1, 780), float64]) -> (Tensor[(96), uint64], Tensor[(64), float32], Tensor[(64), float32], Tensor[(2, 32), float32], Tensor[(3, 780), int64]) {
  %351 = @func_4472() /* ty=(Tensor[(96), uint64],) */;
  %352 = cast(%var_16445, dtype="float64") /* ty=Tensor[(1, 780), float64] */;
  %353 = cast(%var_16445, dtype="float64") /* ty=Tensor[(1, 780), float64] */;
  %354 = cast(meta[relay.Constant][7] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %355 = reshape(%352, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float64] */;
  %356 = reshape(%353, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float64] */;
  %357 = reshape(%354, newshape=[64]) /* ty=Tensor[(64), float32] */;
  %358 = @func_7898(%355, %356, %357) /* ty=(Tensor[(15, 4, 13), bool], Tensor[(4, 4, 4), int8], Tensor[(64), float32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64]) */;
  %359 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
  %360 = cast(%var_16445, dtype="int64") /* ty=Tensor[(1, 780), int64] */;
  %361 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 780), float64] */, dtype="int64") /* ty=Tensor[(3, 780), int64] */;
  %362 = %351.0;
  %363 = %358.2;
  %364 = %359.2;
  %365 = bitwise_and(%360, %361) /* ty=Tensor[(3, 780), int64] */;
  (%362, %363, meta[relay.Constant][7] /* ty=Tensor[(64), float32] */, %364, %365)
}

def @func_22987() -> (Tensor[(15, 13, 11), uint32],) {
  %366 = @func_3439() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%366,)
}

def @func_8766() -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) {
  %367 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
  %368 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %369 = %367.0;
  %370 = %368.1;
  (%369, %370)
}

def @func_23337() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %371 = @func_12318() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %372 = %371.0;
  %373 = cast(%372, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %374 = cast(%372, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %375 = reshape(%373, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %376 = reshape(%374, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %377 = @func_182(%375, %376) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %378 = @func_18024() /* ty=Tensor[(96), uint64] */;
  %379 = %377.0;
  (%378, %372, %379)
}

def @func_4585(%var_4575: Tensor[(6, 2, 15), bool], %var_4576: Tensor[(6, 2, 15), bool]) -> (Tensor[(6, 2, 15), bool],) {
  %380 = cast(%var_4576, dtype="bool") /* ty=Tensor[(6, 2, 15), bool] */;
  %381 = shape_of(%var_4575, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_4575, dtype="bool") /* ty=Tensor[(6, 2, 15), bool] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %384 = logical_or(%382, %383) /* ty=Tensor[(6, 2, 15), bool] */;
  (%384,)
}

def @func_16841() -> (Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  %385 = @func_7425() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %386 = %385.0;
  %387 = @func_3537() /* ty=Tensor[(2145), int32] */;
  (%386, %387)
}

def @func_1755() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  %388 = cast(meta[relay.Constant][9] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %389 = reshape(%388, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %390 = @func_912(%389) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
  %391 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  %392 = %390.0;
  (%391, %392, meta[relay.Constant][9] /* ty=Tensor[(96), uint64] */)
}

def @func_3092() -> (Tensor[(96), uint64],) {
  %393 = @func_2994() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) */;
  %394 = %393.1;
  (%394,)
}

def @func_1664() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %395 = @func_1290() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %396 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %397 = %395.1;
  %398 = %396.0;
  (%397, %398)
}

def @func_697(%var_683: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
  %399 = cast(%var_683, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %400 = cast(%var_683, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %401 = cast(%var_683, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %402 = reshape(%400, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %403 = reshape(%401, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %404 = @func_182(%402, %403) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %405 = %404.0;
  %406 = cast(%405, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %407 = reshape(%399, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %408 = reshape(%406, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %409 = @func_182(%407, %408) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %410 = cast(%405, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
  %411 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %412 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %413 = %409.0;
  %414 = log2(%410) /* ty=Tensor[(15, 13, 11), float32] */;
  (%411, %var_683, %412, %413, %414)
}

def @func_21590() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) {
  %415 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %416 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %417 = %415.0;
  %418 = %416.2;
  (%417, %418)
}

def @func_18101() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) {
  %419 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
  %420 = @func_14160() /* ty=(Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) */;
  %421 = %419.3;
  %422 = %420.1;
  %423 = @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%421, %422, %423)
}

def @func_15841() -> Tensor[(15, 13, 11), uint32] {
  %424 = @func_12446() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %424.0
}

def @func_12538() -> (Tensor[(6, 2, 9), bool], Tensor[(96), uint64]) {
  %425 = @func_11851() /* ty=(Tensor[(6, 2, 9), bool],) */;
  %426 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %427 = %425.0;
  %428 = %426.0;
  (%427, %428)
}

def @func_6308(%var_6287: Tensor[(4, 15, 8), float32]) -> Tensor[(4, 15, 8), float32] {
  %429 = cast(%var_6287, dtype="float32") /* ty=Tensor[(4, 15, 8), float32] */;
  tan(%429) /* ty=Tensor[(4, 15, 8), float32] */
}

def @func_20372(%var_20347: Tensor[(16, 10, 10), int32], %var_20348: Tensor[(16, 10, 10), int32]) -> Tensor[(16, 10, 10), bool] {
  %430 = cast(%var_20348, dtype="bool") /* ty=Tensor[(16, 10, 10), bool] */;
  %431 = shape_of(%var_20347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%var_20347, dtype="bool") /* ty=Tensor[(16, 10, 10), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%432, %433) /* ty=Tensor[(16, 10, 10), bool] */
}

def @func_14585() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %434 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %435 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
  %436 = %434.2;
  (%435, %436)
}

def @func_19415(%var_19400: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), float32]) {
  %437 = @func_12862() /* ty=(Tensor[(2145), bool], Tensor[(14, 16, 5), float64]) */;
  %438 = @func_14238() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %439 = @func_3337() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %440 = %439.1;
  %441 = cast(%var_19400, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(1), int32] */;
  %443 = cast(%440, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?), float32] */;
  %445 = %437.1;
  %446 = %438.1;
  %447 = mod(%443, %444) /* ty=Tensor[(2145), float32] */;
  (%445, %446, %447)
}

def @func_2660() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) {
  %448 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %449 = %448.0;
  %450 = cast(%449, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %451 = reshape(%450, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %452 = @func_844(%451) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
  %453 = %452.5;
  (%449, %453)
}

def @func_3736() -> (Tensor[(15, 13, 11), uint32],) {
  %454 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %455 = %454.0;
  (%455,)
}

def @func_17977(%var_17967: Tensor[(1, 6, 6), uint8], %var_17968: Tensor[(13, 6, 6), uint8]) -> (Tensor[(13, 6, 6), bool], Tensor[(96), uint64]) {
  %456 = cast(%var_17967, dtype="bool") /* ty=Tensor[(1, 6, 6), bool] */;
  %457 = cast(%var_17968, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %458 = @func_17520() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) */;
  %459 = greater_equal(%456, %457) /* ty=Tensor[(13, 6, 6), bool] */;
  %460 = %458.0;
  (%459, %460)
}

def @func_5940() -> (Tensor[(15, 13, 11), uint32],) {
  %461 = @func_5365() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%461,)
}

def @func_12905() -> Tensor[(14, 16, 5), float32] {
  %462 = @func_6507() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */;
  %462.1
}

def @func_5356() -> (Tensor[(96), uint64], Tensor[(96), uint64]) {
  %463 = @func_4691() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */;
  %464 = %463.0;
  %465 = cast(%464, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %466 = reshape(%465, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %467 = @func_3514(%466) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %468 = %467.4;
  (%464, %468)
}

def @func_7851(%var_7828: Tensor[(15, 13, 11), float64], %var_7843: Tensor[(11, 96), uint64]) -> (Tensor[(11, 96), uint64], Tensor[(18), float32], Tensor[(15, 13, 11), bool], Tensor[(11, 96), bool]) {
  %469 = @func_4385() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) */;
  %470 = %469.4;
  %471 = cast(%470, dtype="uint64") /* ty=Tensor[(1, 96), uint64] */;
  %472 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 96), uint64] */, dtype="uint64") /* ty=Tensor[(11, 96), uint64] */;
  %473 = cast(meta[relay.Constant][11] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %474 = reshape(%473, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %475 = @func_6435(%474) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) */;
  %476 = %475.1;
  %477 = cast(%var_7828, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%476, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %481 = cast(%var_7843, dtype="bool") /* ty=Tensor[(11, 96), bool] */;
  %482 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(11, 96), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %483 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 96), uint64] */, dtype="bool") /* ty=Tensor[(11, 96), bool] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %485 = bitwise_and(%471, %472) /* ty=Tensor[(11, 96), uint64] */;
  %486 = greater(%479, %480) /* ty=Tensor[(15, 13, 11), bool] */;
  %487 = less_equal(%483, %484) /* ty=Tensor[(11, 96), bool] */;
  (%485, meta[relay.Constant][11] /* ty=Tensor[(18), float32] */, %486, %487)
}

def @func_2012() -> Tensor[(15, 13, 11), uint32] {
  @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_5474() -> Tensor[(96), uint64] {
  %488 = @func_5356() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %488.0
}

def @func_21614() -> Tensor[(96), uint64] {
  %489 = @func_15660() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %489.0
}

def @func_9305(%var_9296: Tensor[(12, 13, 13), float32]) -> Tensor[(12, 13, 13), float32] {
  %490 = cast(%var_9296, dtype="float32") /* ty=Tensor[(12, 13, 13), float32] */;
  acos(%490) /* ty=Tensor[(12, 13, 13), float32] */
}

def @func_11212() -> (Tensor[(15, 13, 11), bool],) {
  %491 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %492 = %491.1;
  (%492,)
}

def @func_20605() -> (Tensor[(2145), int32],) {
  %493 = @func_2429() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), int64]) */;
  %494 = %493.1;
  (%494,)
}

def @func_6866() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %495 = @func_5394() /* ty=Tensor[(15, 13, 11), uint32] */;
  %496 = @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%495, %496)
}

def @func_17869() -> (Tensor[(14, 16, 5), float64],) {
  %497 = @func_9644() /* ty=Tensor[(14, 16, 5), float64] */;
  (%497,)
}

def @func_5466() -> Tensor[(16, 6), uint64] {
  @func_5297() /* ty=Tensor[(16, 6), uint64] */
}

def @func_11464(%var_11459: Tensor[(96), uint64]) -> (Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64]) {
  %498 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %499 = cast(%var_11459, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %500 = cast(%var_11459, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %501 = reshape(%499, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %502 = reshape(%500, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %503 = %498.0;
  %504 = @func_518(%501, %502) /* ty=Tensor[(4, 2, 12), float64] */;
  (%503, %504, %var_11459)
}

def @func_17597(%var_17584: Tensor[(3, 1, 1), uint8]) -> (Tensor[(3, 1, 4), uint8],) {
  %505 = cast(%var_17584, dtype="uint8") /* ty=Tensor[(3, 1, 1), uint8] */;
  %506 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 1, 4), uint8] */, dtype="uint8") /* ty=Tensor[(3, 1, 4), uint8] */;
  %507 = left_shift(%505, %506) /* ty=Tensor[(3, 1, 4), uint8] */;
  (%507,)
}

def @func_9948() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
  %508 = @func_3027() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %509 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %510 = @func_8997() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %511 = %508.0;
  %512 = %509.0;
  %513 = %510.0;
  (%511, %512, %513)
}

def @func_19205() -> (Tensor[(14, 16, 5), float32],) {
  %514 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %515 = %514.1;
  (%515,)
}

def @func_10679() -> (Tensor[(14, 16, 5), float32], Tensor[(1, 96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  %516 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %517 = @func_4385() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) */;
  %518 = @func_2220() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %519 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %520 = %516.0;
  %521 = %517.4;
  %522 = %518.1;
  %523 = %519.0;
  %524 = @func_9623() /* ty=Tensor[(96), uint64] */;
  (%520, %521, %522, %523, %524)
}

def @func_1719() -> (Tensor[(15, 13, 11), uint32],) {
  %525 = @func_1182() /* ty=(Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) */;
  %526 = %525.1;
  (%526,)
}

def @func_10254() -> Tensor[(14, 16, 5), float32] {
  %527 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
  %527.2
}

def @func_5535() -> (Tensor[(14, 16, 5), float32],) {
  %528 = @func_3950() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %529 = %528.0;
  (%529,)
}

def @func_4162() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %530 = @func_3076() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %531 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %532 = %530.0;
  (%531, %532)
}

def @func_12731() -> (Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) {
  %533 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %534 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 64), float32] */, dtype="float32") /* ty=Tensor[(1, 64), float32] */;
  %535 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 64), float32] */, dtype="float32") /* ty=Tensor[(1, 64), float32] */;
  %536 = reshape(%534, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %537 = reshape(%535, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %538 = @func_7866(%536, %537) /* ty=(Tensor[(4, 4, 4), int8],) */;
  %539 = @func_2503() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %540 = %533.2;
  %541 = %538.0;
  %542 = %539.1;
  (%540, %541, meta[relay.Constant][13] /* ty=Tensor[(1, 64), float32] */, %542)
}

def @func_23174() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %543 = @func_6723() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %544 = @func_14680() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %545 = %543.0;
  %546 = @func_12112() /* ty=Tensor[(15, 13, 11), uint32] */;
  %547 = %544.1;
  %548 = @func_7738() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%545, %546, %547, %548)
}

def @func_13451(%var_13418: Tensor[(143, 15), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(143, 15), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %549 = @func_13099() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %552 = cast(%var_13418, dtype="int32") /* ty=Tensor[(143, 15), int32] */;
  %553 = reshape(%551, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %554 = reshape(%552, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %555 = @func_1046(%553, %554) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %556 = @func_8766() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %557 = %555.3;
  %558 = %556.0;
  %559 = @func_5365() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%550, %557, %var_13418, %558, %559)
}

def @func_2108() -> (Tensor[(15, 13, 11), float32],) {
  %560 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %561 = %560.0;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
  %563 = rsqrt(%562) /* ty=Tensor[(15, 13, 11), float32] */;
  (%563,)
}

def @func_9340() -> Tensor[(96), uint64] {
  %564 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
  %564.0
}

def @func_17103(%var_17078: Tensor[(12, 64), float64]) -> (Tensor[(2145), int32], Tensor[(?, 64), float64], Tensor[(12, 64), bool], Tensor[(6, 2, 15), bool], Tensor[(180), bool], Tensor[(2145), bool]) {
  %565 = @func_15850() /* ty=(Tensor[(2145), int32],) */;
  %566 = @func_12731() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) */;
  %567 = %566.2;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(1, 64), float64] */;
  %569 = erf(%568) /* ty=Tensor[(1, 64), float64] */;
  %570 = cast(%567, dtype="float64") /* ty=Tensor[(1, 64), float64] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(2), int32] */;
  %572 = cast(%569, dtype="float64") /* ty=Tensor[(1, 64), float64] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %574 = cast(%569, dtype="bool") /* ty=Tensor[(1, 64), bool] */;
  %575 = cast(%var_17078, dtype="bool") /* ty=Tensor[(12, 64), bool] */;
  %576 = cast(meta[relay.Constant][14] /* ty=Tensor[(180), bool] */, dtype="bool") /* ty=Tensor[(180), bool] */;
  %577 = reshape(%576, newshape=[180, 1]) /* ty=Tensor[(180, 1), bool] */;
  %578 = @func_9821(%577) /* ty=(Tensor[(14, 16, 5), float32], Tensor[(6, 2, 15), bool], Tensor[(180, 1), float64]) */;
  %579 = %565.0;
  %580 = floor_divide(%572, %573) /* ty=Tensor[(?, 64), float64] */;
  %581 = logical_and(%574, %575) /* ty=Tensor[(12, 64), bool] */;
  %582 = %578.1;
  %583 = @func_16262() /* ty=Tensor[(2145), bool] */;
  (%579, %580, %581, %582, meta[relay.Constant][14] /* ty=Tensor[(180), bool] */, %583)
}

def @func_13290(%var_13281: Tensor[(2, 15, 12), uint16]) -> (Tensor[(2, 15, 12), uint16], Tensor[(12, 13, 13), float32], Tensor[(1014, 2), float32]) {
  %584 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 15, 12), uint16] */, dtype="uint16") /* ty=Tensor[(2, 15, 12), uint16] */;
  %585 = shape_of(%var_13281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%var_13281, dtype="uint16") /* ty=Tensor[(2, 15, 12), uint16] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %588 = cast(meta[relay.Constant][16] /* ty=Tensor[(1014, 2), float32] */, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %589 = reshape(%588, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float32] */;
  %590 = right_shift(%586, %587) /* ty=Tensor[(2, 15, 12), uint16] */;
  %591 = @func_9305(%589) /* ty=Tensor[(12, 13, 13), float32] */;
  (%590, %591, meta[relay.Constant][16] /* ty=Tensor[(1014, 2), float32] */)
}

def @func_3439() -> Tensor[(15, 13, 11), uint32] {
  @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_12446() -> (Tensor[(15, 13, 11), uint32],) {
  %592 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %593 = %592.1;
  (%593,)
}

def @func_22029() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %594 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %595 = @func_15516() /* ty=Tensor[(15, 13, 11), uint32] */;
  %596 = %594.3;
  (%595, %596)
}

def @func_20496() -> (Tensor[(15, 13, 11), uint32],) {
  %597 = @func_15182() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %598 = %597.0;
  (%598,)
}

def @func_20573() -> (Tensor[(96), uint64],) {
  %599 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
  %600 = %599.0;
  (%600,)
}

def @func_18376(%var_18361: Tensor[(5, 11, 15), float32]) -> (Tensor[(5, 11, 15), float32], Tensor[(14, 16, 5), uint32], Tensor[(1120), float64]) {
  %601 = cast(%var_18361, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %602 = cast(meta[relay.Constant][17] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %603 = reshape(%602, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %604 = @func_2627(%603) /* ty=(Tensor[(14, 16, 5), uint32],) */;
  %605 = acosh(%601) /* ty=Tensor[(5, 11, 15), float32] */;
  %606 = %604.0;
  (%605, %606, meta[relay.Constant][17] /* ty=Tensor[(1120), float64] */)
}

def @func_13956() -> Tensor[(2, 32), float64] {
  %607 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
  %608 = %607.2;
  %609 = cast(%608, dtype="float64") /* ty=Tensor[(2, 32), float64] */;
  sinh(%609) /* ty=Tensor[(2, 32), float64] */
}

def @func_13488() -> Tensor[(14, 16, 5), float64] {
  %610 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %610.4
}

def @func_22327(%var_22314: Tensor[(13, 4, 1), float64], %var_22315: Tensor[(13, 4, 1), float64]) -> Tensor[(13, 4, ?), float64] {
  %611 = cast(%var_22315, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
  %612 = shape_of(%var_22314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%var_22314, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%613, %614) /* ty=Tensor[(13, 4, ?), float64] */
}

def @func_22548() -> (Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) {
  %615 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %616 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %617 = %615.0;
  %618 = %616.1;
  (%617, %618)
}

def @func_20451() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint8]) {
  %619 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %620 = @func_8766() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %621 = %620.0;
  %622 = @func_12780() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) */;
  %623 = %622.1;
  %624 = cast(%623, dtype="uint8") /* ty=Tensor[(14, 16, 5), uint8] */;
  %625 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%621, dtype="uint8") /* ty=Tensor[(14, 16, 5), uint8] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %628 = %619.1;
  %629 = logical_xor(%626, %627) /* ty=Tensor[(14, 16, 5), uint8] */;
  (%628, %629)
}

def @func_15850() -> (Tensor[(2145), int32],) {
  %630 = @func_3537() /* ty=Tensor[(2145), int32] */;
  (%630,)
}

def @func_4924() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %631 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
  %632 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  %633 = %631.0;
  (%632, %633)
}

def @func_5857() -> Tensor[(15, 13, 11), uint32] {
  @func_3836() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_13840() -> (Tensor[(96), uint64],) {
  %634 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %635 = %634.1;
  (%635,)
}

def @func_12299() -> (Tensor[(15, 13, 11), uint32], Tensor[(13, 7, 1), float32], Tensor[(13, 7), float32], Tensor[(15, 13, 11), uint32]) {
  %636 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %637 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 7), float32] */, dtype="float32") /* ty=Tensor[(13, 7), float32] */;
  %638 = reshape(%637, newshape=[13, 7, 1]) /* ty=Tensor[(13, 7, 1), float32] */;
  %639 = @func_9551(%638) /* ty=(Tensor[(13, 7, 1), float32], Tensor[(14, 16, 5), float32]) */;
  %640 = @func_9128() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %641 = %636.1;
  %642 = %639.0;
  %643 = %640.1;
  (%641, %642, meta[relay.Constant][18] /* ty=Tensor[(13, 7), float32] */, %643)
}

def @func_7536(%var_7509: Tensor[(224), int8]) -> (Tensor[(15, 13, 11), uint32], Tensor[(7, 8, 4), int8], Tensor[(224), int8], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %644 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %645 = cast(%var_7509, dtype="int8") /* ty=Tensor[(224), int8] */;
  %646 = reshape(%645, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int8] */;
  %647 = @func_2577(%646) /* ty=(Tensor[(7, 8, 4), int8], Tensor[(15, 13, 11), uint32]) */;
  %648 = @func_7425() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %649 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %650 = %644.0;
  %651 = %647.0;
  %652 = %648.0;
  %653 = @func_5425() /* ty=Tensor[(15, 13, 11), uint32] */;
  %654 = %649.0;
  (%650, %651, %var_7509, %652, %653, %654)
}

def @func_15892() -> (Tensor[(14, 16, 5), float64],) {
  %655 = @func_10996() /* ty=Tensor[(14, 16, 5), float64] */;
  (%655,)
}

def @func_8481() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) {
  %656 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %657 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %658 = @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */;
  %659 = %656.1;
  %660 = %657.0;
  (%658, %659, %660)
}

def @func_1516() -> Tensor[(14, 16, 5), float32] {
  %661 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %662 = cast(%661, dtype="float32") /* ty=Tensor[(14, 16, 5), float32] */;
  exp(%662) /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_2577(%var_2545: Tensor[(7, 8, 4), int8]) -> (Tensor[(7, 8, 4), int8], Tensor[(15, 13, 11), uint32]) {
  %663 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 8, 4), int8] */, dtype="int8") /* ty=Tensor[(7, 8, 4), int8] */;
  %664 = shape_of(%var_2545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%var_2545, dtype="int8") /* ty=Tensor[(7, 8, 4), int8] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %667 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %668 = subtract(%665, %666) /* ty=Tensor[(7, 8, 4), int8] */;
  %669 = %667.2;
  (%668, %669)
}

def @func_18795(%var_18762: Tensor[(3, 60), bool]) -> (Tensor[(15, 13, 11), uint32], Tensor[(6, 2, 15), bool], Tensor[(3, 60), bool], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
  %670 = @func_1719() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %671 = cast(%var_18762, dtype="bool") /* ty=Tensor[(3, 60), bool] */;
  %672 = cast(%var_18762, dtype="bool") /* ty=Tensor[(3, 60), bool] */;
  %673 = reshape(%671, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), bool] */;
  %674 = reshape(%672, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), bool] */;
  %675 = @func_4585(%673, %674) /* ty=(Tensor[(6, 2, 15), bool],) */;
  %676 = @func_14903() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %677 = @func_15660() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %678 = %670.0;
  %679 = %675.0;
  %680 = %676.2;
  %681 = %677.1;
  (%678, %679, %var_18762, %680, %681)
}

def @func_16262() -> Tensor[(2145), bool] {
  %682 = @func_9440() /* ty=(Tensor[(2145), bool], Tensor[(14, 16, 5), float32]) */;
  %682.0
}

def @func_9077() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %683 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %684 = @func_4522() /* ty=Tensor[(96), uint64] */;
  %685 = %683.0;
  (%684, %685)
}

def @func_20190(%var_20185: Tensor[(4, 7, 14), int64], %var_20186: Tensor[(4, 7, 14), int64]) -> (Tensor[(4, 7, 14), int64],) {
  %686 = cast(%var_20186, dtype="int64") /* ty=Tensor[(4, 7, 14), int64] */;
  %687 = shape_of(%var_20185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%var_20185, dtype="int64") /* ty=Tensor[(4, 7, 14), int64] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %690 = left_shift(%688, %689) /* ty=Tensor[(4, 7, 14), int64] */;
  (%690,)
}

def @func_19846(%var_19812: int8, %var_19813: Tensor[(1, 4, 15), int8]) -> (Tensor[(1, 4, 15), bool], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %691 = cast(%var_19812, dtype="bool") /* ty=bool */;
  %692 = cast(%var_19813, dtype="bool") /* ty=Tensor[(1, 4, 15), bool] */;
  %693 = @func_17869() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %694 = not_equal(%691, %692) /* ty=Tensor[(1, 4, 15), bool] */;
  %695 = @func_12905() /* ty=Tensor[(14, 16, 5), float32] */;
  %696 = %693.0;
  (%694, %695, %696)
}

def @func_16253() -> (Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), float32]) {
  %697 = @func_15011() /* ty=(Tensor[(14, 16, 5), bool],) */;
  %698 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %699 = %697.0;
  %700 = %698.1;
  (%699, %700)
}

def @func_20028() -> (Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(14, 16, 5), float64]) {
  %701 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %702 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %703 = @func_17007() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %704 = @func_12229() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %705 = %701.1;
  %706 = %702.0;
  %707 = %703.2;
  %708 = %704.0;
  (%705, %706, %707, %708)
}

def @func_14296() -> Tensor[(15, 13, 11), uint32] {
  %709 = @func_5911() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %709.0
}

def @func_18673() -> (Tensor[(15, 13, 11), uint32],) {
  %710 = @func_13548() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %711 = %710.0;
  (%711,)
}

def @func_18258(%var_18244: Tensor[(10, 15, 12), float64]) -> (Tensor[(10, 15, 12), float32],) {
  %712 = cast(%var_18244, dtype="float64") /* ty=Tensor[(10, 15, 12), float64] */;
  %713 = rsqrt(%712) /* ty=Tensor[(10, 15, 12), float64] */;
  %714 = cast(%713, dtype="float32") /* ty=Tensor[(10, 15, 12), float32] */;
  %715 = erf(%714) /* ty=Tensor[(10, 15, 12), float32] */;
  %716 = cast(%715, dtype="float32") /* ty=Tensor[(10, 15, 12), float32] */;
  %717 = log(%716) /* ty=Tensor[(10, 15, 12), float32] */;
  (%717,)
}

def @func_22660() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %718 = @func_21882() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %719 = @func_7425() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %720 = @func_20531() /* ty=Tensor[(96), uint64] */;
  %721 = %718.1;
  %722 = %719.1;
  (%720, %721, %722)
}

def @func_21986() -> (Tensor[(15, 13, 11), int64], Tensor[(14, 16, 5), float64]) {
  %723 = @func_8596() /* ty=Tensor[(15, 13, 11), int64] */;
  %724 = cast(%723, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %725 = reshape(%724, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %726 = @func_19415(%725) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), float32]) */;
  %727 = %726.0;
  (%723, %727)
}

def @func_4522() -> Tensor[(96), uint64] {
  %728 = @func_4295() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %728.2
}

def @func_11586() -> (Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), uint32]) {
  %729 = @func_5071() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
  %730 = %729.4;
  %731 = @func_10804() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) */;
  %732 = %731.1;
  %733 = cast(%732, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
  %734 = shape_of(%730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%730, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %737 = @func_4385() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) */;
  %738 = %737.1;
  %739 = cast(%730, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
  %740 = shape_of(%738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%738, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %743 = @func_8808() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %744 = equal(%735, %736) /* ty=Tensor[(14, 16, 5), bool] */;
  %745 = not_equal(%741, %742) /* ty=Tensor[(14, 16, 5), bool] */;
  %746 = %743.1;
  (%744, %745, %746)
}

def @func_19867() -> Tensor[(14, 16, 5), float64] {
  %747 = @func_14473() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %747.2
}

def @func_2684() -> (Tensor[(96), uint64],) {
  %748 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %749 = %748.2;
  (%749,)
}

def @func_20531() -> Tensor[(96), uint64] {
  %750 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %750.1
}

def @func_1182() -> (Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) {
  %751 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %752 = %751.2;
  %753 = cast(%752, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %754 = log2(%753) /* ty=Tensor[(2145), float64] */;
  %755 = cast(%754, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %756 = cast(%754, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %757 = reshape(%755, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %758 = reshape(%756, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %759 = @func_182(%757, %758) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %760 = %759.0;
  (%754, %760)
}

def @func_14217() -> Tensor[(14, 16, 5), float32] {
  %761 = @func_3076() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %761.0
}

def @func_23090() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %762 = @func_13099() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %763 = %762.0;
  %764 = @func_13488() /* ty=Tensor[(14, 16, 5), float64] */;
  (%763, %764)
}

def @func_6957() -> Tensor[(15, 13, 11), uint32] {
  %765 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %765.0
}

def @func_18948() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %766 = @func_17228() /* ty=Tensor[(14, 16, 5), float64] */;
  %767 = @func_9644() /* ty=Tensor[(14, 16, 5), float64] */;
  (%766, %767)
}

def @func_8516() -> Tensor[(14, 16, 5), float64] {
  %768 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %768.1
}

def @func_23120() -> (Tensor[(96), uint64],) {
  %769 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %770 = %769.1;
  (%770,)
}

def @main(%var_23429: Tensor[(2, 32), float64]) -> Tensor[(2, 32), bool] {
  %771 = @func_19043() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(2, 32), float64]) */;
  %772 = %771.3;
  %773 = cast(%var_23429, dtype="bool") /* ty=Tensor[(2, 32), bool] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(2), int32] */;
  %775 = cast(%772, dtype="bool") /* ty=Tensor[(2, 32), bool] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  equal(%775, %776) /* ty=Tensor[(2, 32), bool] */
}

def @func_2503() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
  %777 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %778 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  %779 = %777.1;
  (%778, %779)
}

def @func_1295() -> Tensor[(15, 13, 11), uint32] {
  %780 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %780.1
}

def @func_13044() -> (Tensor[(14, 16, 5), float64],) {
  %781 = @func_4691() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */;
  %782 = %781.1;
  (%782,)
}

def @func_6435(%var_6402: Tensor[(6, 3, 1), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) {
  %783 = cast(%var_6402, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
  %784 = @func_2503() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %785 = %784.1;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %787 = asinh(%783) /* ty=Tensor[(6, 3, 1), float32] */;
  %788 = erf(%786) /* ty=Tensor[(15, 13, 11), float64] */;
  (%787, %788)
}

def @func_17851() -> (Tensor[(15, 13, 11), int64],) {
  %789 = @func_8596() /* ty=Tensor[(15, 13, 11), int64] */;
  (%789,)
}

def @func_6709() -> (Tensor[(15, 13, 11), uint32],) {
  %790 = @func_5394() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%790,)
}

def @func_9440() -> (Tensor[(2145), bool], Tensor[(14, 16, 5), float32]) {
  %791 = @func_3337() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %792 = %791.2;
  %793 = cast(meta[relay.Constant][20] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(1), int32] */;
  %795 = cast(%792, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?), int32] */;
  %797 = subtract(%795, %796) /* ty=Tensor[(2145), int32] */;
  %798 = cast(%797, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %799 = shape_of(%792, dtype="int32") /* ty=Tensor[(1), int32] */;
  %800 = cast(%792, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?), bool] */;
  %802 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %803 = logical_and(%800, %801) /* ty=Tensor[(2145), bool] */;
  %804 = %802.0;
  (%803, %804)
}

def @func_22076() -> (Tensor[(6, 2, 9), bool],) {
  %805 = @func_11851() /* ty=(Tensor[(6, 2, 9), bool],) */;
  %806 = %805.0;
  (%806,)
}

def @func_5674() -> (Tensor[(11, 5, 7), float32],) {
  %807 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
  %808 = sin(%807) /* ty=Tensor[(11, 5, 7), float32] */;
  (%808,)
}

def @func_9128() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %809 = @func_6957() /* ty=Tensor[(15, 13, 11), uint32] */;
  %810 = @func_6957() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%809, %810)
}

def @func_2429() -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), int64]) {
  %811 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %812 = %811.2;
  %813 = cast(%812, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %814 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %815 = cast(%814, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %816 = reshape(%813, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %817 = reshape(%815, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %818 = @func_1046(%816, %817) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %819 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %820 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %821 = %820.0;
  %822 = cast(%814, dtype="int64") /* ty=Tensor[(15, 13, 11), int64] */;
  %823 = shape_of(%821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(%821, dtype="int64") /* ty=Tensor[(15, 13, 11), int64] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %826 = %818.3;
  %827 = %819.1;
  %828 = add(%824, %825) /* ty=Tensor[(15, 13, 11), int64] */;
  (%812, %826, %827, %828)
}

def @func_18346() -> (Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  %829 = @func_5273() /* ty=Tensor[(14, 16, 5), float64] */;
  %830 = @func_16345() /* ty=Tensor[(96), uint64] */;
  (%829, %830)
}

def @func_20682() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %831 = @func_15479() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %832 = @func_18346() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %833 = %831.0;
  %834 = %832.1;
  (%833, %834)
}

def @func_21031() -> Tensor[(96), uint64] {
  %835 = @func_10625() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) */;
  %835.0
}

def @func_22891() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %836 = @func_15745() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %837 = @func_9637() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %838 = %836.0;
  %839 = %837.0;
  %840 = @func_17256() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%838, %839, %840)
}

def @func_18197() -> (Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) {
  %841 = @func_2914() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %842 = @func_11600() /* ty=Tensor[(14, 16, 5), float32] */;
  %843 = %841.1;
  (%842, %843)
}

def @func_21960() -> Tensor[(14, 16, 5), float64] {
  %844 = @func_7317() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %844.0
}

def @func_14996(%var_14948: Tensor[(180), bool]) -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(180), bool], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %845 = @func_8808() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %846 = cast(%var_14948, dtype="bool") /* ty=Tensor[(180), bool] */;
  %847 = reshape(%846, newshape=[180, 1]) /* ty=Tensor[(180, 1), bool] */;
  %848 = @func_9821(%847) /* ty=(Tensor[(14, 16, 5), float32], Tensor[(6, 2, 15), bool], Tensor[(180, 1), float64]) */;
  %849 = %845.0;
  %850 = %848.0;
  %851 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  %852 = @func_14732() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%849, %850, %var_14948, %851, %852)
}

def @func_19043() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(2, 32), float64]) {
  %853 = cast(meta[relay.Constant][22] /* ty=Tensor[(224), int8] */, dtype="int8") /* ty=Tensor[(224), int8] */;
  %854 = reshape(%853, newshape=[224]) /* ty=Tensor[(224), int8] */;
  %855 = @func_7536(%854) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(7, 8, 4), int8], Tensor[(224), int8], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %856 = @func_3439() /* ty=Tensor[(15, 13, 11), uint32] */;
  %857 = %855.3;
  %858 = @func_13956() /* ty=Tensor[(2, 32), float64] */;
  (%856, %857, meta[relay.Constant][22] /* ty=Tensor[(224), int8] */, %858)
}

def @func_3908(%var_3891: Tensor[(11, 2, 16), float32]) -> Tensor[(11, 2, 16), float32] {
  %859 = cast(%var_3891, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %860 = erf(%859) /* ty=Tensor[(11, 2, 16), float32] */;
  %861 = cast(%860, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  asin(%861) /* ty=Tensor[(11, 2, 16), float32] */
}

def @func_14760(%var_14750: Tensor[(5, 10, 8), uint16]) -> Tensor[(5, 10, 8), uint16] {
  %862 = cast(meta[relay.Constant][23] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %863 = cast(%var_14750, dtype="uint16") /* ty=Tensor[(5, 10, 8), uint16] */;
  bitwise_or(%862, %863) /* ty=Tensor[(5, 10, 8), uint16] */
}

def @func_19160() -> (Tensor[(96), uint64],) {
  %864 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
  %865 = %864.0;
  (%865,)
}

def @func_22019(%var_22007: Tensor[(8, 12, 8), float32]) -> (Tensor[(8, 12, 8), float32], Tensor[(96), uint64]) {
  %866 = cast(%var_22007, dtype="float32") /* ty=Tensor[(8, 12, 8), float32] */;
  %867 = @func_15990() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %868 = acosh(%866) /* ty=Tensor[(8, 12, 8), float32] */;
  %869 = %867.1;
  (%868, %869)
}

def @func_3514(%var_3510: Tensor[(96), uint64]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(96), uint64]) {
  %870 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %871 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %872 = %871.0;
  %873 = cast(%872, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %874 = reshape(%873, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %875 = @func_1549(%874) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), int32]) */;
  %876 = cast(%var_3510, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %877 = reshape(%876, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %878 = @func_912(%877) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
  %879 = %870.2;
  %880 = %875.2;
  %881 = %878.2;
  (%879, %872, %880, %881, %var_3510)
}

def @func_3027() -> (Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) {
  %882 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %883 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %884 = %882.1;
  %885 = %883.2;
  (%884, %885)
}

def @func_15953() -> (Tensor[(14, 16, 5), float32],) {
  %886 = @func_11600() /* ty=Tensor[(14, 16, 5), float32] */;
  (%886,)
}

def @func_3273() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %887 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %888 = @func_3027() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %889 = %887.0;
  %890 = %888.0;
  (%889, %890)
}

def @func_9644() -> Tensor[(14, 16, 5), float64] {
  @func_1083() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_7596() -> (Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(352), float32]) {
  %891 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %892 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %893 = cast(meta[relay.Constant][24] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %894 = reshape(%893, newshape=[176, 2]) /* ty=Tensor[(176, 2), float32] */;
  %895 = @func_6007(%894) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */;
  %896 = %891.0;
  %897 = %892.2;
  %898 = %895.0;
  (%896, %897, %898, meta[relay.Constant][24] /* ty=Tensor[(352), float32] */)
}

def @func_22223() -> Tensor[(15, 13, 11), uint32] {
  @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_5911() -> (Tensor[(15, 13, 11), uint32],) {
  %899 = @func_3836() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%899,)
}

def @func_20875() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %900 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %901 = @func_16133() /* ty=Tensor[(15, 13, 11), uint32] */;
  %902 = %900.1;
  (%901, %902)
}

def @func_10040(%var_9992: Tensor[(22, 7), int64]) -> (Tensor[(15, 13, 11), uint32], Tensor[(2, 11, 7), int64], Tensor[(22, 7), int64]) {
  %903 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %904 = cast(%var_9992, dtype="int64") /* ty=Tensor[(22, 7), int64] */;
  %905 = cast(%var_9992, dtype="int64") /* ty=Tensor[(22, 7), int64] */;
  %906 = reshape(%904, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int64] */;
  %907 = reshape(%905, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int64] */;
  %908 = @func_3696(%906, %907) /* ty=(Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32]) */;
  %909 = %903.0;
  %910 = %908.0;
  (%909, %910, %var_9992)
}

def @func_2256() -> (Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %911 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %912 = cast(%911, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %913 = reshape(%912, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %914 = @func_844(%913) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
  %915 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %916 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %917 = %914.4;
  %918 = %915.2;
  %919 = %916.5;
  (%911, %917, %918, %919)
}

def @func_5666() -> (Tensor[(14, 16, 5), float64],) {
  %920 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
  (%920,)
}

def @func_16083() -> (Tensor[(14, 16, 5), float64], Tensor[(6, 2, 9), float64]) {
  %921 = @func_11851() /* ty=(Tensor[(6, 2, 9), bool],) */;
  %922 = %921.0;
  %923 = cast(%922, dtype="float64") /* ty=Tensor[(6, 2, 9), float64] */;
  %924 = @func_8926() /* ty=Tensor[(14, 16, 5), float64] */;
  %925 = tan(%923) /* ty=Tensor[(6, 2, 9), float64] */;
  (%924, %925)
}

def @func_6043() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %926 = @func_2503() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %927 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %928 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %929 = @func_5365() /* ty=Tensor[(15, 13, 11), uint32] */;
  %930 = %926.1;
  %931 = %927.2;
  %932 = %928.0;
  (%929, %930, %931, %932)
}

def @func_14804() -> Tensor[(15, 13, 11), uint32] {
  %933 = @func_6809() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %933.0
}

def @func_6653(%var_6648: Tensor[(13, 2, 10), uint8]) -> Tensor[(13, 2, 10), uint8] {
  %934 = cast(%var_6648, dtype="uint8") /* ty=Tensor[(13, 2, 10), uint8] */;
  %935 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(13, 2, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %936 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 2, 10), uint8] */, dtype="uint8") /* ty=Tensor[(13, 2, 10), uint8] */;
  %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%936, %937) /* ty=Tensor[(13, 2, 10), uint8] */
}

def @func_4729() -> Tensor[(14, 16, 5), float32] {
  @func_1516() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_7866(%var_7857: Tensor[(4, 4, 4), float32], %var_7858: Tensor[(4, 4, 4), float32]) -> (Tensor[(4, 4, 4), int8],) {
  %938 = cast(%var_7858, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
  %939 = shape_of(%var_7857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%var_7857, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %942 = mod(%940, %941) /* ty=Tensor[(4, 4, 4), float32] */;
  %943 = cast(%942, dtype="int8") /* ty=Tensor[(4, 4, 4), int8] */;
  %944 = shape_of(%var_7858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%var_7858, dtype="int8") /* ty=Tensor[(4, 4, 4), int8] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %947 = maximum(%945, %946) /* ty=Tensor[(4, 4, 4), int8] */;
  (%947,)
}

def @func_15479() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %948 = @func_14680() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %949 = @func_13475() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %950 = %948.1;
  %951 = %949.2;
  (%950, %951)
}

def @func_16566() -> (Tensor[(14, 16, 5), float64],) {
  %952 = @func_8083() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32], Tensor[(14, 16, 5), float64]) */;
  %953 = %952.1;
  (%953,)
}

def @func_1083() -> Tensor[(14, 16, 5), float64] {
  @func_670() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_7738() -> Tensor[(15, 13, 11), uint32] {
  %954 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %954.1
}

def @func_17256() -> Tensor[(15, 13, 11), uint32] {
  %955 = @func_8718() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %955.0
}

def @func_20476() -> (Tensor[(14, 16, 5), float32],) {
  %956 = @func_10804() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) */;
  %957 = %956.1;
  (%957,)
}

def @func_912(%var_870: Tensor[(96), uint64]) -> (Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) {
  %958 = cast(%var_870, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %959 = cast(%var_870, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %960 = reshape(%958, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %961 = reshape(%959, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %962 = cast(%var_870, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %963 = @func_518(%960, %961) /* ty=Tensor[(4, 2, 12), float64] */;
  %964 = cast(%963, dtype="uint64") /* ty=Tensor[(4, 2, 12), uint64] */;
  %965 = reshape(%962, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %966 = reshape(%964, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %967 = cast(meta[relay.Constant][26] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %968 = reshape(%967, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %969 = @func_844(%968) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
  %970 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %971 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %972 = @func_518(%965, %966) /* ty=Tensor[(4, 2, 12), float64] */;
  %973 = %969.2;
  (%970, %963, %var_870, %971, %972, %973, meta[relay.Constant][26] /* ty=Tensor[(2145), int32] */)
}

def @func_21757() -> (Tensor[(16, 6), uint64], Tensor[(5, 7, 2), float64], Tensor[(70), float64], Tensor[(14, 16, 5), float64], Tensor[(260), uint8], Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %974 = @func_8766() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %975 = cast(meta[relay.Constant][27] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %976 = reshape(%975, newshape=[5, 7, 2]) /* ty=Tensor[(5, 7, 2), float64] */;
  %977 = @func_18948() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %978 = @func_10364() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) */;
  %979 = @func_6723() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %980 = @func_12505() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32]) */;
  %981 = @func_12538() /* ty=(Tensor[(6, 2, 9), bool], Tensor[(96), uint64]) */;
  %982 = @func_18645() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */;
  %983 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %984 = %974.1;
  %985 = @func_14179(%976) /* ty=Tensor[(5, 7, 2), float64] */;
  %986 = %977.0;
  %987 = %978.1;
  %988 = @func_21227() /* ty=Tensor[(15, 13, 11), uint32] */;
  %989 = @func_5466() /* ty=Tensor[(16, 6), uint64] */;
  %990 = %979.0;
  %991 = %980.0;
  %992 = %981.1;
  %993 = %982.0;
  %994 = %983.0;
  (%984, %985, meta[relay.Constant][27] /* ty=Tensor[(70), float64] */, %986, %987, %988, %989, %990, %991, %992, %993, %994)
}

def @func_5770(%var_5757: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  %995 = @func_5319() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %996 = %995.1;
  %997 = cast(%996, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %998 = cast(%var_5757, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %999 = reshape(%997, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %1000 = reshape(%998, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1001 = @func_1046(%999, %1000) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1002 = %1001.1;
  (%996, %1002, %var_5757)
}

def @func_14522() -> (Tensor[(15, 13, 11), float32],) {
  %1003 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_22479() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %1005 = @func_1719() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1006 = @func_12229() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1007 = %1005.0;
  %1008 = %1006.0;
  (%1007, %1008)
}

def @func_23395() -> (Tensor[(15, 13, 11), uint32],) {
  %1009 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %1010 = %1009.0;
  (%1010,)
}

def @func_19765() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32], Tensor[(810), int32]) {
  %1011 = cast(meta[relay.Constant][28] /* ty=Tensor[(810), int32] */, dtype="int32") /* ty=Tensor[(810), int32] */;
  %1012 = cast(meta[relay.Constant][28] /* ty=Tensor[(810), int32] */, dtype="int32") /* ty=Tensor[(810), int32] */;
  %1013 = reshape(%1011, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int32] */;
  %1014 = reshape(%1012, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int32] */;
  %1015 = @func_6341(%1013, %1014) /* ty=(Tensor[(15, 6, 9), int32], Tensor[(14, 16, 5), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1016 = @func_16133() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1017 = %1015.1;
  (%1016, %1017, meta[relay.Constant][28] /* ty=Tensor[(810), int32] */)
}

def @func_19227() -> Tensor[(15, 13, 11), uint32] {
  %1018 = @func_11965() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1018.0
}

def @func_23283() -> (Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %1019 = @func_18645() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */;
  %1020 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
  %1021 = %1019.1;
  %1022 = %1020.0;
  %1023 = @func_6938() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1021, %1022, %1023)
}

def @func_2627(%var_2618: Tensor[(14, 16, 5), float64]) -> (Tensor[(14, 16, 5), uint32],) {
  %1024 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %1025 = %1024.0;
  %1026 = cast(%var_2618, dtype="uint32") /* ty=Tensor[(14, 16, 5), uint32] */;
  %1027 = shape_of(%1025, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1028 = cast(%1025, dtype="uint32") /* ty=Tensor[(14, 16, 5), uint32] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1030 = subtract(%1028, %1029) /* ty=Tensor[(14, 16, 5), uint32] */;
  (%1030,)
}

def @func_18985(%var_18965: Tensor[(5, 1, 5), int64]) -> (Tensor[(96), uint64], Tensor[(5, 1, 5), float64]) {
  %1031 = @func_10547() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1032 = cast(6 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %1033 = cast(%var_18965, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
  %1034 = equal(%1032, %1033) /* ty=Tensor[(5, 1, 5), bool] */;
  %1035 = cast(%1034, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %1036 = %1031.2;
  %1037 = log10(%1035) /* ty=Tensor[(5, 1, 5), float64] */;
  (%1036, %1037)
}

def @func_1998() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %1038 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1039 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1040 = %1038.1;
  %1041 = cast(%1040, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1042 = reshape(%1041, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1043 = @func_1127(%1042) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1044 = @func_1516() /* ty=Tensor[(14, 16, 5), float32] */;
  %1045 = %1039.5;
  %1046 = %1043.4;
  (%1040, %1044, %1045, %1046)
}

def @func_6341(%var_6319: Tensor[(15, 6, 9), int32], %var_6320: Tensor[(15, 6, 9), int32]) -> (Tensor[(15, 6, 9), int32], Tensor[(14, 16, 5), uint32], Tensor[(15, 13, 11), uint32]) {
  %1047 = cast(%var_6320, dtype="int32") /* ty=Tensor[(15, 6, 9), int32] */;
  %1048 = shape_of(%var_6319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1049 = cast(%var_6319, dtype="int32") /* ty=Tensor[(15, 6, 9), int32] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1051 = @func_5802() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) */;
  %1052 = minimum(%1049, %1050) /* ty=Tensor[(15, 6, 9), int32] */;
  %1053 = %1051.1;
  %1054 = @func_3836() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1052, %1053, %1054)
}

def @func_13981() -> Tensor[(15, 13, 11), uint32] {
  %1055 = @func_13358() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1055.0
}

def @func_8886() -> (Tensor[(15, 13, 11), uint32],) {
  %1056 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1057 = %1056.0;
  (%1057,)
}

def @func_988() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  %1058 = cast(meta[relay.Constant][29] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1059 = cast(meta[relay.Constant][29] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1060 = reshape(%1058, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %1061 = reshape(%1059, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %1062 = @func_182(%1060, %1061) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1063 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %1064 = %1062.0;
  (%1063, %1064, meta[relay.Constant][29] /* ty=Tensor[(2145), int32] */)
}

def @func_14238() -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) {
  %1065 = @func_10996() /* ty=Tensor[(14, 16, 5), float64] */;
  %1066 = @func_5297() /* ty=Tensor[(16, 6), uint64] */;
  (%1065, %1066)
}

def @func_7476() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %1067 = @func_2914() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1068 = @func_5097() /* ty=Tensor[(96), uint64] */;
  %1069 = %1067.0;
  (%1068, %1069)
}

def @func_9709() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %1070 = @func_5535() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1071 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1072 = %1070.0;
  %1073 = %1071.1;
  (%1072, %1073)
}

def @func_182(%var_138: Tensor[(15, 13, 11), int32], %var_139: Tensor[(15, 13, 11), int32]) -> (Tensor[(15, 13, 11), uint32],) {
  %1074 = cast(%var_139, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1075 = shape_of(%var_138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%var_138, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1078 = bitwise_xor(%1076, %1077) /* ty=Tensor[(15, 13, 11), int32] */;
  %1079 = cast(%1078, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %1080 = log10(%1079) /* ty=Tensor[(15, 13, 11), float64] */;
  %1081 = cast(%var_139, dtype="uint32") /* ty=Tensor[(15, 13, 11), uint32] */;
  %1082 = shape_of(%1080, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1083 = cast(%1080, dtype="uint32") /* ty=Tensor[(15, 13, 11), uint32] */;
  %1084 = dyn.reshape(%1081, %1082, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1085 = logical_xor(%1083, %1084) /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1085,)
}

def @func_11747() -> (Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32]) {
  %1086 = @func_3076() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1087 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1088 = @func_9128() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1089 = %1086.0;
  %1090 = cast(%1089, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %1091 = reshape(%1090, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %1092 = @func_2627(%1091) /* ty=(Tensor[(14, 16, 5), uint32],) */;
  %1093 = %1087.1;
  %1094 = %1088.1;
  %1095 = %1092.0;
  (%1089, %1093, %1094, %1095)
}

def @func_5297() -> Tensor[(16, 6), uint64] {
  %1096 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %1096.1
}

def @func_670() -> Tensor[(14, 16, 5), float64] {
  %1097 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 16, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %1098 = tan(%1097) /* ty=Tensor[(14, 16, 5), float64] */;
  %1099 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 16, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %1100 = shape_of(%1098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1101 = cast(%1098, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%1101, %1102) /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_3836() -> Tensor[(15, 13, 11), uint32] {
  %1103 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1103.0
}

def @func_12369() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %1104 = @func_6866() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1105 = %1104.0;
  %1106 = @func_9905() /* ty=Tensor[(14, 16, 5), float32] */;
  (%1105, %1106)
}

def @func_9821(%var_9808: Tensor[(180, 1), bool]) -> (Tensor[(14, 16, 5), float32], Tensor[(6, 2, 15), bool], Tensor[(180, 1), float64]) {
  %1107 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %1108 = cast(%var_9808, dtype="bool") /* ty=Tensor[(180, 1), bool] */;
  %1109 = cast(%var_9808, dtype="bool") /* ty=Tensor[(180, 1), bool] */;
  %1110 = reshape(%1108, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), bool] */;
  %1111 = reshape(%1109, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), bool] */;
  %1112 = @func_4585(%1110, %1111) /* ty=(Tensor[(6, 2, 15), bool],) */;
  %1113 = cast(%var_9808, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %1114 = %1107.1;
  %1115 = %1112.0;
  %1116 = tan(%1113) /* ty=Tensor[(180, 1), float64] */;
  (%1114, %1115, %1116)
}

def @func_10179() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1117 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1118 = @func_8886() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1119 = %1117.1;
  %1120 = %1118.0;
  (%1119, %1120)
}

def @func_13273() -> (Tensor[(96), uint64],) {
  %1121 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
  %1122 = %1121.0;
  (%1122,)
}

def @func_13347(%var_13335: Tensor[(4, 5, 6), bool]) -> (Tensor[(4, 5, 6), bool],) {
  %1123 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 5, 1), bool] */, dtype="bool") /* ty=Tensor[(4, 5, 1), bool] */;
  %1124 = cast(%var_13335, dtype="bool") /* ty=Tensor[(4, 5, 6), bool] */;
  %1125 = logical_or(%1123, %1124) /* ty=Tensor[(4, 5, 6), bool] */;
  (%1125,)
}

def @func_15516() -> Tensor[(15, 13, 11), uint32] {
  @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_9677() -> (Tensor[(14, 16, 5), float64],) {
  %1126 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1126,)
}

def @func_23360() -> (Tensor[(14, 16, 5), float32],) {
  %1127 = @func_14217() /* ty=Tensor[(14, 16, 5), float32] */;
  (%1127,)
}

def @func_12155() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1128 = @func_10179() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1129 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
  %1130 = %1128.1;
  %1131 = %1129.1;
  (%1130, %1131)
}

def @func_7631() -> (Tensor[(15, 13, 11), uint32],) {
  %1132 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1132,)
}

def @func_8582() -> (Tensor[(14, 16, 5), float64],) {
  %1133 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1134 = %1133.3;
  (%1134,)
}

def @func_15660() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
  %1135 = @func_4472() /* ty=(Tensor[(96), uint64],) */;
  %1136 = @func_12505() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32]) */;
  %1137 = %1136.1;
  %1138 = cast(%1137, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1139 = reshape(%1138, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1140 = @func_5770(%1139) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1141 = @func_5535() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1142 = %1135.0;
  %1143 = %1140.0;
  %1144 = %1141.0;
  (%1142, %1137, %1143, %1144)
}

def @func_7374() -> (Tensor[(14, 16, 5), float32],) {
  %1145 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1146 = %1145.1;
  (%1146,)
}

def @func_10420(%var_10401: Tensor[(60), int8], %var_10402: Tensor[(420, 2), int8]) -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(60), int8], Tensor[(420, 2), int8]) {
  %1147 = cast(%var_10401, dtype="int8") /* ty=Tensor[(60), int8] */;
  %1148 = cast(%var_10402, dtype="int8") /* ty=Tensor[(420, 2), int8] */;
  %1149 = reshape(%1147, newshape=[10, 6, 1]) /* ty=Tensor[(10, 6, 1), int8] */;
  %1150 = reshape(%1148, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), int8] */;
  %1151 = @func_4807(%1149, %1150) /* ty=(Tensor[(10, 6, 14), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1152 = @func_1516() /* ty=Tensor[(14, 16, 5), float32] */;
  %1153 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  %1154 = %1151.2;
  (%1152, %1153, %1154, %var_10401, %var_10402)
}

def @func_2087() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %1155 = @func_1182() /* ty=(Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) */;
  %1156 = @func_1290() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1157 = %1156.1;
  %1158 = cast(%1157, dtype="float32") /* ty=Tensor[(14, 16, 5), float32] */;
  %1159 = %1155.1;
  %1160 = rsqrt(%1158) /* ty=Tensor[(14, 16, 5), float32] */;
  (%1159, %1160)
}

def @func_17520() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) {
  %1161 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1162 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1163 = %1161.3;
  %1164 = %1162.0;
  %1165 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1163, %1164, %1165)
}

def @func_1390() -> (Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %1166 = cast(meta[relay.Constant][33] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1167 = cast(meta[relay.Constant][33] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1168 = reshape(%1166, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %1169 = reshape(%1167, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %1170 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1171 = cast(%1170, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1172 = reshape(%1171, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1173 = @func_697(%1172) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %1174 = @func_518(%1168, %1169) /* ty=Tensor[(4, 2, 12), float64] */;
  %1175 = cast(%1174, dtype="uint64") /* ty=Tensor[(4, 2, 12), uint64] */;
  %1176 = reshape(%1175, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %1177 = @func_912(%1176) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
  %1178 = @func_1182() /* ty=(Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) */;
  %1179 = %1173.2;
  %1180 = %1177.5;
  %1181 = %1178.1;
  (%1170, %1174, meta[relay.Constant][33] /* ty=Tensor[(96), uint64] */, %1179, %1180, %1181)
}

def @func_2220() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %1182 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1183 = %1182.0;
  %1184 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1183, %1184)
}

def @func_10364() -> (Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) {
  %1185 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1186 = @func_10269() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) */;
  %1187 = %1185.1;
  %1188 = %1186.1;
  (%1187, %1188)
}

def @func_12505() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), float32]) {
  %1189 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %1190 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %1191 = %1189.2;
  %1192 = %1190.1;
  (%1191, %1192)
}

def @func_22439() -> (Tensor[(14, 16, 5), float64],) {
  %1193 = @func_13663() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1194 = %1193.0;
  (%1194,)
}

def @func_14383() -> (Tensor[(15, 13, 11), uint32],) {
  %1195 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %1196 = %1195.0;
  (%1196,)
}

def @func_18645() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) {
  %1197 = @func_15953() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1198 = @func_14217() /* ty=Tensor[(14, 16, 5), float32] */;
  %1199 = %1197.0;
  (%1198, %1199)
}

def @func_16816() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1200 = @func_14383() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1201 = @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1202 = %1200.0;
  (%1201, %1202)
}

def @func_18828() -> Tensor[(14, 16, 5), float64] {
  %1203 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %1203.1
}

def @func_844(%var_762: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) {
  %1204 = cast(%var_762, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1205 = reshape(%1204, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1206 = @func_697(%1205) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %1207 = %1206.3;
  %1208 = cast(%1207, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1209 = reshape(%1208, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1210 = @func_697(%1209) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %1211 = %1210.4;
  %1212 = cast(%1211, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %1213 = shape_of(%1207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1214 = cast(%1207, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %1215 = dyn.reshape(%1212, %1213, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1216 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 6), uint64] */, dtype="uint64") /* ty=Tensor[(16, 6), uint64] */;
  %1217 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 6), uint64] */, dtype="uint64") /* ty=Tensor[(16, 6), uint64] */;
  %1218 = reshape(%1216, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %1219 = reshape(%1217, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %1220 = @func_518(%1218, %1219) /* ty=Tensor[(4, 2, 12), float64] */;
  %1221 = cast(%1220, dtype="float64") /* ty=Tensor[(4, 2, 12), float64] */;
  %1222 = sin(%1221) /* ty=Tensor[(4, 2, 12), float64] */;
  %1223 = cast(%1220, dtype="bool") /* ty=Tensor[(4, 2, 12), bool] */;
  %1224 = shape_of(%1222, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1225 = cast(%1222, dtype="bool") /* ty=Tensor[(4, 2, 12), bool] */;
  %1226 = dyn.reshape(%1223, %1224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1227 = greater_equal(%1225, %1226) /* ty=Tensor[(4, 2, 12), bool] */;
  %1228 = cast(%1227, dtype="float64") /* ty=Tensor[(4, 2, 12), float64] */;
  %1229 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %1230 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %1231 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %1232 = less_equal(%1214, %1215) /* ty=Tensor[(15, 13, 11), bool] */;
  %1233 = sinh(%1228) /* ty=Tensor[(4, 2, 12), float64] */;
  (%1229, %var_762, %1230, %1231, meta[relay.Constant][34] /* ty=Tensor[(16, 6), uint64] */, %1232, %1233)
}

def @func_20645() -> (Tensor[(15, 13, 11), uint32],) {
  %1234 = @func_16918() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1234,)
}

def @func_6007(%var_6002: Tensor[(176, 2), float32]) -> (Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) {
  %1235 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1236 = cast(%var_6002, dtype="float32") /* ty=Tensor[(176, 2), float32] */;
  %1237 = reshape(%1236, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), float32] */;
  %1238 = %1235.0;
  %1239 = @func_3908(%1237) /* ty=Tensor[(11, 2, 16), float32] */;
  (%1238, %1239, %var_6002)
}

def @func_14680() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %1240 = @func_4691() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */;
  %1241 = @func_8394() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
  %1242 = %1240.1;
  %1243 = %1241.0;
  (%1242, %1243)
}

def @func_14903() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %1244 = @func_12629() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1245 = @func_5319() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1246 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
  %1247 = %1244.0;
  %1248 = %1245.1;
  %1249 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1250 = %1246.0;
  (%1247, %1248, %1249, %1250)
}

def @func_13893() -> Tensor[(4, 4, 4), int8] {
  %1251 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
  %1251.1
}

def @func_9036() -> (Tensor[(96), uint64],) {
  %1252 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1253 = %1252.1;
  (%1253,)
}

def @func_18909() -> (Tensor[(16, 6), uint64], Tensor[(96), uint64]) {
  %1254 = @func_16873() /* ty=(Tensor[(16, 6), uint64],) */;
  %1255 = @func_18902() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %1256 = %1254.0;
  %1257 = %1255.0;
  (%1256, %1257)
}

def @func_8284(%var_8250: Tensor[(18), float32]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) {
  %1258 = @func_4691() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */;
  %1259 = cast(%var_8250, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1260 = reshape(%1259, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %1261 = @func_6435(%1260) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) */;
  %1262 = %1258.1;
  %1263 = %1261.1;
  (%1262, %1263, %var_8250)
}

def @func_20292() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %1264 = @func_18690() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1265 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1266 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1267 = %1264.0;
  %1268 = %1265.0;
  %1269 = @func_14127() /* ty=Tensor[(96), uint64] */;
  %1270 = %1266.1;
  (%1267, %1268, %1269, %1270)
}

def @func_3950() -> (Tensor[(14, 16, 5), float32],) {
  %1271 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1272 = %1271.1;
  (%1272,)
}

def @func_3132() -> Tensor[(14, 16, 5), float64] {
  %1273 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1273.0
}

def @func_1290() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %1274 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1275 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1276 = %1274.1;
  %1277 = %1275.0;
  (%1276, %1277)
}

def @func_16918() -> Tensor[(15, 13, 11), uint32] {
  %1278 = @func_15182() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1278.0
}

def @func_16873() -> (Tensor[(16, 6), uint64],) {
  %1279 = @func_14238() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %1280 = %1279.1;
  (%1280,)
}

def @func_9485() -> (Tensor[(96), uint64],) {
  %1281 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
  %1282 = %1281.0;
  (%1282,)
}

def @func_12949(%var_12940: Tensor[(1120, 1), float64]) -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32], Tensor[(1120, 1), float64], Tensor[(14, 16, 5), float64]) {
  %1283 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
  %1284 = cast(%var_12940, dtype="float64") /* ty=Tensor[(1120, 1), float64] */;
  %1285 = reshape(%1284, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %1286 = @func_2627(%1285) /* ty=(Tensor[(14, 16, 5), uint32],) */;
  %1287 = %1283.1;
  %1288 = %1286.0;
  %1289 = @func_8516() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1287, %1288, %var_12940, %1289)
}

def @func_16133() -> Tensor[(15, 13, 11), uint32] {
  @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_5201() -> (Tensor[(96), uint64], Tensor[(96), uint64]) {
  %1290 = @func_4472() /* ty=(Tensor[(96), uint64],) */;
  %1291 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %1292 = %1290.0;
  %1293 = %1291.2;
  (%1292, %1293)
}

def @func_8197() -> Tensor[(15, 13, 11), uint32] {
  %1294 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %1294.3
}

def @func_12112() -> Tensor[(15, 13, 11), uint32] {
  %1295 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1295.0
}

def @func_8394() -> (Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %1296 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %1297 = cast(meta[relay.Constant][35] /* ty=Tensor[(260), uint8] */, dtype="uint8") /* ty=Tensor[(260), uint8] */;
  %1298 = reshape(%1297, newshape=[13, 2, 10]) /* ty=Tensor[(13, 2, 10), uint8] */;
  %1299 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1300 = %1296.0;
  %1301 = @func_6653(%1298) /* ty=Tensor[(13, 2, 10), uint8] */;
  %1302 = %1299.0;
  %1303 = @func_3537() /* ty=Tensor[(2145), int32] */;
  %1304 = @func_7738() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1300, %1301, meta[relay.Constant][35] /* ty=Tensor[(260), uint8] */, %1302, %1303, %1304)
}

def @func_13871() -> Tensor[(15, 13, 11), uint32] {
  @func_7738() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_13580() -> (Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %1305 = @func_4710() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %1306 = %1305.1;
  %1307 = @func_9785() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1306, %1307)
}

def @func_10765() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %1308 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
  %1309 = %1308.0;
  %1310 = @func_8197() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1309, %1310)
}

def @func_8083() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32], Tensor[(14, 16, 5), float64]) {
  %1311 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1312 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1313 = cast(meta[relay.Constant][36] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1314 = reshape(%1313, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %1315 = @func_6435(%1314) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) */;
  %1316 = %1315.1;
  %1317 = cast(%1316, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1318 = reshape(%1317, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1319 = @func_1127(%1318) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1320 = %1311.1;
  %1321 = %1312.1;
  %1322 = %1319.0;
  (%1320, %1321, %1316, meta[relay.Constant][36] /* ty=Tensor[(18), float32] */, %1322)
}

def @func_3337() -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) {
  %1323 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %1324 = cast(meta[relay.Constant][37] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1325 = reshape(%1324, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1326 = @func_697(%1325) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %1327 = %1323.1;
  %1328 = %1326.1;
  (%1327, %1328, meta[relay.Constant][37] /* ty=Tensor[(2145), int32] */)
}

def @func_17956(%var_17951: Tensor[(56), float32]) -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(1, 7, 8), float32], Tensor[(56), float32]) {
  %1329 = cast(%var_17951, dtype="float32") /* ty=Tensor[(56), float32] */;
  %1330 = reshape(%1329, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), float32] */;
  %1331 = @func_5141(%1330) /* ty=(Tensor[(1, 7, 8), float32],) */;
  %1332 = @func_6938() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1333 = @func_10254() /* ty=Tensor[(14, 16, 5), float32] */;
  %1334 = @func_9644() /* ty=Tensor[(14, 16, 5), float64] */;
  %1335 = %1331.0;
  (%1332, %1333, %1334, %1335, %var_17951)
}

def @func_15011() -> (Tensor[(14, 16, 5), bool],) {
  %1336 = @func_12780() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) */;
  %1337 = %1336.1;
  (%1337,)
}

def @func_10625() -> (Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) {
  %1338 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1339 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
  %1340 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 2145), int32] */, dtype="int32") /* ty=Tensor[(1, 2145), int32] */;
  %1341 = reshape(%1340, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1342 = @func_1127(%1341) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1343 = @func_5097() /* ty=Tensor[(96), uint64] */;
  %1344 = %1338.1;
  %1345 = %1339.0;
  %1346 = %1342.4;
  (%1343, %1344, %1345, %1346, meta[relay.Constant][38] /* ty=Tensor[(1, 2145), int32] */)
}

def @func_23225() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(4, 7, 14), int64], Tensor[(392), int64]) {
  %1347 = @func_9128() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1348 = cast(meta[relay.Constant][39] /* ty=Tensor[(392), int64] */, dtype="int64") /* ty=Tensor[(392), int64] */;
  %1349 = cast(meta[relay.Constant][39] /* ty=Tensor[(392), int64] */, dtype="int64") /* ty=Tensor[(392), int64] */;
  %1350 = reshape(%1348, newshape=[4, 7, 14]) /* ty=Tensor[(4, 7, 14), int64] */;
  %1351 = reshape(%1349, newshape=[4, 7, 14]) /* ty=Tensor[(4, 7, 14), int64] */;
  %1352 = @func_20190(%1350, %1351) /* ty=(Tensor[(4, 7, 14), int64],) */;
  %1353 = %1347.0;
  %1354 = @func_5394() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1355 = %1352.0;
  (%1353, %1354, %1355, meta[relay.Constant][39] /* ty=Tensor[(392), int64] */)
}

def @func_20046() -> Tensor[(15, 13, 11), uint32] {
  @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_17007() -> (Tensor[(14, 16, 5), float32], Tensor[(2145), int32], Tensor[(2145), int32]) {
  %1356 = @func_5802() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) */;
  %1357 = cast(meta[relay.Constant][40] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1358 = reshape(%1357, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1359 = @func_1549(%1358) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), int32]) */;
  %1360 = %1356.0;
  %1361 = %1359.2;
  (%1360, %1361, meta[relay.Constant][40] /* ty=Tensor[(2145), int32] */)
}

def @func_5071() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %1362 = @func_4710() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %1363 = @func_4385() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) */;
  %1364 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1365 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1366 = cast(meta[relay.Constant][41] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1367 = reshape(%1366, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1368 = @func_1127(%1367) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1369 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1370 = %1362.0;
  %1371 = %1363.1;
  %1372 = %1364.0;
  %1373 = %1365.1;
  %1374 = %1368.3;
  %1375 = %1369.1;
  (%1370, %1371, %1372, %1373, %1374, meta[relay.Constant][41] /* ty=Tensor[(2145), int32] */, %1375)
}

def @func_15803() -> Tensor[(15, 13, 11), uint32] {
  %1376 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1376.0
}

def @func_12415() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(2145), int32]) {
  %1377 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1378 = @func_10625() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) */;
  %1379 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
  %1380 = @func_11808() /* ty=(Tensor[(2145), int32],) */;
  %1381 = %1377.0;
  %1382 = %1378.3;
  %1383 = %1379.0;
  %1384 = %1380.0;
  (%1381, %1382, %1383, %1384)
}

def @func_11808() -> (Tensor[(2145), int32],) {
  %1385 = @func_3337() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1386 = %1385.1;
  (%1386,)
}

def @func_4691() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) {
  %1387 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1388 = %1387.3;
  %1389 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1388, %1389)
}

def @func_10476() -> Tensor[(15, 13, 11), uint32] {
  %1390 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1390.1
}

def @func_11930() -> (Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %1391 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1392 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %1393 = @func_5666() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1394 = @func_4522() /* ty=Tensor[(96), uint64] */;
  %1395 = %1391.2;
  %1396 = %1392.2;
  %1397 = %1393.0;
  (%1394, %1395, %1396, %1397)
}

def @func_8596() -> Tensor[(15, 13, 11), int64] {
  %1398 = @func_2429() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), int64]) */;
  %1398.3
}

def @func_20721() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %1399 = @func_19205() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1400 = @func_12229() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1401 = %1399.0;
  %1402 = %1400.0;
  (%1401, %1402)
}

def @func_20792() -> (Tensor[(15, 13, 11), uint32],) {
  %1403 = @func_7738() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1403,)
}

def @func_11600() -> Tensor[(14, 16, 5), float32] {
  %1404 = @func_5802() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) */;
  %1404.0
}

def @func_14547() -> (Tensor[(15, 13, 11), uint32],) {
  %1405 = @func_10179() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1406 = %1405.1;
  (%1406,)
}

def @func_22847() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %1407 = @func_21882() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1408 = @func_7631() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1409 = @func_20292() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1410 = @func_8886() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1411 = @func_12780() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) */;
  %1412 = %1407.0;
  %1413 = %1408.0;
  %1414 = %1409.3;
  %1415 = %1410.0;
  %1416 = %1411.0;
  (%1412, %1413, %1414, %1415, %1416)
}

def @func_10547() -> (Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %1417 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1418 = @func_6723() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1419 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %1420 = %1417.0;
  %1421 = %1418.0;
  %1422 = %1419.2;
  (%1420, %1421, %1422)
}

def @func_2522() -> (Tensor[(14, 16, 5), float64],) {
  %1423 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1423,)
}

def @func_17228() -> Tensor[(14, 16, 5), float64] {
  @func_3132() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_13663() -> (Tensor[(14, 16, 5), float64],) {
  %1424 = @func_8516() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1424,)
}

def @func_11851() -> (Tensor[(6, 2, 9), bool],) {
  %1425 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 2, 9), float64] */;
  %1426 = sqrt(%1425) /* ty=Tensor[(6, 2, 9), float64] */;
  %1427 = cast(%1426, dtype="bool") /* ty=Tensor[(6, 2, 9), bool] */;
  %1428 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(6, 2, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1429 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 2, 9), float64] */, dtype="bool") /* ty=Tensor[(6, 2, 9), bool] */;
  %1430 = dyn.reshape(%1427, %1428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1431 = greater(%1429, %1430) /* ty=Tensor[(6, 2, 9), bool] */;
  (%1431,)
}

def @func_3599() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) {
  %1432 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1433 = @func_2684() /* ty=(Tensor[(96), uint64],) */;
  %1434 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
  %1435 = cast(%1434, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %1436 = %1432.1;
  %1437 = cast(%1436, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1438 = reshape(%1435, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %1439 = reshape(%1437, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1440 = @func_1046(%1438, %1439) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1441 = %1433.0;
  %1442 = %1440.2;
  %1443 = @func_1516() /* ty=Tensor[(14, 16, 5), float32] */;
  (%1434, %1436, %1441, %1442, %1443)
}

def @func_22271() -> Tensor[(15, 13, 11), float32] {
  %1444 = @func_14522() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1444.0
}

def @func_20974() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %1445 = @func_12155() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1446 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  %1447 = %1445.0;
  (%1446, %1447)
}

def @func_2468() -> Tensor[(15, 13, 11), uint32] {
  @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_4295() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  %1448 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1449 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
  %1450 = %1448.0;
  %1451 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %1452 = %1449.2;
  (%1450, %1451, %1452)
}

def @func_9637() -> (Tensor[(15, 13, 11), uint32],) {
  %1453 = @func_7631() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1454 = %1453.0;
  (%1454,)
}

def @func_22716(%var_22697: Tensor[(56), float32]) -> (Tensor[(15, 13, 11), uint32], Tensor[(1, 7, 8), float32], Tensor[(56), float32], Tensor[(15, 13, 11), uint32]) {
  %1455 = @func_10547() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1456 = cast(%var_22697, dtype="float32") /* ty=Tensor[(56), float32] */;
  %1457 = reshape(%1456, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %1458 = @func_17956(%1457) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(1, 7, 8), float32], Tensor[(56), float32]) */;
  %1459 = %1455.1;
  %1460 = %1458.3;
  %1461 = @func_22223() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1459, %1460, %var_22697, %1461)
}

def @func_9517() -> Tensor[(15, 13, 11), uint32] {
  %1462 = @func_2503() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %1462.0
}

def @func_18590() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(91), float32]) {
  %1463 = @func_8808() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1464 = cast(meta[relay.Constant][43] /* ty=Tensor[(91), float32] */, dtype="float32") /* ty=Tensor[(91), float32] */;
  %1465 = reshape(%1464, newshape=[13, 7, 1]) /* ty=Tensor[(13, 7, 1), float32] */;
  %1466 = @func_9551(%1465) /* ty=(Tensor[(13, 7, 1), float32], Tensor[(14, 16, 5), float32]) */;
  %1467 = %1463.2;
  %1468 = %1466.1;
  (%1467, %1468, meta[relay.Constant][43] /* ty=Tensor[(91), float32] */)
}

def @func_20946() -> Tensor[(14, 16, 5), float32] {
  @func_11600() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_3822() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %1469 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1470 = @func_2684() /* ty=(Tensor[(96), uint64],) */;
  %1471 = %1469.0;
  %1472 = %1470.0;
  (%1471, %1472)
}

def @func_12629() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %1473 = @func_8718() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1474 = @func_11046() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1475 = %1473.2;
  %1476 = %1474.0;
  (%1475, %1476)
}

def @func_518(%var_490: Tensor[(4, 2, 12), uint64], %var_491: Tensor[(4, 2, 12), uint64]) -> Tensor[(4, 2, 12), float64] {
  %1477 = cast(%var_491, dtype="bool") /* ty=Tensor[(4, 2, 12), bool] */;
  %1478 = shape_of(%var_490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1479 = cast(%var_490, dtype="bool") /* ty=Tensor[(4, 2, 12), bool] */;
  %1480 = dyn.reshape(%1477, %1478, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1481 = greater(%1479, %1480) /* ty=Tensor[(4, 2, 12), bool] */;
  %1482 = cast(%1481, dtype="float64") /* ty=Tensor[(4, 2, 12), float64] */;
  exp(%1482) /* ty=Tensor[(4, 2, 12), float64] */
}

def @func_4385() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) {
  %1483 = @func_3950() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1484 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1485 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1486 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 96), uint64] */, dtype="uint64") /* ty=Tensor[(1, 96), uint64] */;
  %1487 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 96), uint64] */, dtype="uint64") /* ty=Tensor[(1, 96), uint64] */;
  %1488 = reshape(%1486, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %1489 = reshape(%1487, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %1490 = %1483.0;
  %1491 = %1484.1;
  %1492 = %1485.0;
  %1493 = @func_518(%1488, %1489) /* ty=Tensor[(4, 2, 12), float64] */;
  (%1490, %1491, %1492, %1493, meta[relay.Constant][44] /* ty=Tensor[(1, 96), uint64] */)
}

def @func_9861() -> (Tensor[(15, 13, 11), uint32],) {
  %1494 = @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1494,)
}

def @func_9623() -> Tensor[(96), uint64] {
  %1495 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
  %1495.0
}

def @func_14160() -> (Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) {
  %1496 = @func_11808() /* ty=(Tensor[(2145), int32],) */;
  %1497 = @func_10804() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) */;
  %1498 = %1496.0;
  %1499 = %1497.0;
  (%1498, %1499)
}

def @func_13124() -> (Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) {
  %1500 = @func_2994() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) */;
  %1501 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 32), float32] */, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
  %1502 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 32), float32] */, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
  %1503 = reshape(%1501, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %1504 = reshape(%1502, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %1505 = @func_7866(%1503, %1504) /* ty=(Tensor[(4, 4, 4), int8],) */;
  %1506 = %1500.0;
  %1507 = %1505.0;
  (%1506, %1507, meta[relay.Constant][45] /* ty=Tensor[(2, 32), float32] */)
}

def @func_8718() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1508 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1509 = @func_5365() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1510 = @func_4522() /* ty=Tensor[(96), uint64] */;
  %1511 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1512 = %1508.0;
  (%1509, %1510, %1511, %1512)
}

def @func_10269() -> (Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) {
  %1513 = @func_8394() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
  %1514 = @func_9215() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1515 = %1513.2;
  (%1514, %1515)
}

def @func_13475() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %1516 = @func_10625() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) */;
  %1517 = @func_13358() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1518 = %1516.0;
  %1519 = %1517.0;
  %1520 = @func_5273() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1518, %1519, %1520)
}

def @func_9551(%var_9522: Tensor[(13, 7, 1), float32]) -> (Tensor[(13, 7, 1), float32], Tensor[(14, 16, 5), float32]) {
  %1521 = cast(%var_9522, dtype="float32") /* ty=Tensor[(13, 7, 1), float32] */;
  %1522 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1523 = cosh(%1521) /* ty=Tensor[(13, 7, 1), float32] */;
  %1524 = %1522.0;
  (%1523, %1524)
}

def @func_20230() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
  %1525 = @func_6043() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %1526 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %1527 = %1525.2;
  (%1526, %1527)
}

def @func_20845() -> (Tensor[(96), uint64], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) {
  %1528 = cast(meta[relay.Constant][46] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1529 = reshape(%1528, newshape=[176, 2]) /* ty=Tensor[(176, 2), float32] */;
  %1530 = @func_6007(%1529) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */;
  %1531 = @func_14127() /* ty=Tensor[(96), uint64] */;
  %1532 = %1530.1;
  (%1531, %1532, meta[relay.Constant][46] /* ty=Tensor[(352), float32] */)
}

def @func_10951(%var_10927: Tensor[(176, 2), float32]) -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) {
  %1533 = @func_8633() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1534 = @func_7245() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1535 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1536 = @func_10547() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1537 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1538 = @func_5319() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1539 = cast(%var_10927, dtype="float32") /* ty=Tensor[(176, 2), float32] */;
  %1540 = reshape(%1539, newshape=[176, 2]) /* ty=Tensor[(176, 2), float32] */;
  %1541 = @func_6007(%1540) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */;
  %1542 = %1533.0;
  %1543 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1544 = %1534.3;
  %1545 = %1535.0;
  %1546 = %1536.0;
  %1547 = %1537.0;
  %1548 = %1538.1;
  %1549 = %1541.1;
  (%1542, %1543, %1544, %1545, %1546, %1547, %1548, %1549, %var_10927)
}

def @func_6087() -> Tensor[(15, 13, 11), float32] {
  %1550 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1551 = %1550.0;
  %1552 = cast(%1551, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
  asin(%1552) /* ty=Tensor[(15, 13, 11), float32] */
}

def @func_7245() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1553 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1554 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %1555 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1556 = @func_5802() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) */;
  %1557 = %1554.1;
  %1558 = cast(%1557, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1559 = %1555.0;
  %1560 = cast(%1559, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1561 = reshape(%1558, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %1562 = reshape(%1560, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %1563 = @func_182(%1561, %1562) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1564 = %1553.1;
  %1565 = %1556.0;
  %1566 = %1563.0;
  %1567 = @func_6739() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1564, %1557, %1559, %1565, %1566, %1567)
}

def @func_5259(%var_5204: uint32, %var_5205: Tensor[(15, 1, 16), uint32], %var_5212: Tensor[(2145), int32]) -> (Tensor[(1120), float64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 1, 16), float64], Tensor[(2145), uint32]) {
  %1568 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1569 = cast(%var_5204, dtype="uint32") /* ty=uint32 */;
  %1570 = cast(%var_5205, dtype="uint32") /* ty=Tensor[(15, 1, 16), uint32] */;
  %1571 = logical_xor(%1569, %1570) /* ty=Tensor[(15, 1, 16), uint32] */;
  %1572 = cast(%1571, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %1573 = cast(%var_5204, dtype="float64") /* ty=float64 */;
  %1574 = cast(meta[relay.Constant][47] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %1575 = cast(%var_5212, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1576 = reshape(%1574, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %1577 = reshape(%1575, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1578 = @func_1046(%1576, %1577) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1579 = %1578.2;
  %1580 = cast(%1579, dtype="uint32") /* ty=Tensor[(2145), uint32] */;
  %1581 = cast(%var_5204, dtype="uint32") /* ty=uint32 */;
  %1582 = %1568.2;
  %1583 = add(%1572, %1573) /* ty=Tensor[(15, 1, 16), float64] */;
  %1584 = bitwise_and(%1580, %1581) /* ty=Tensor[(2145), uint32] */;
  (meta[relay.Constant][47] /* ty=Tensor[(1120), float64] */, %var_5212, %1582, %1583, %1584)
}

def @func_21780() -> (Tensor[(2145), int32],) {
  %1585 = @func_15850() /* ty=(Tensor[(2145), int32],) */;
  %1586 = %1585.0;
  (%1586,)
}

def @func_22312() -> (Tensor[(2145), int32], Tensor[(14, 16, 5), bool]) {
  %1587 = @func_21780() /* ty=(Tensor[(2145), int32],) */;
  %1588 = @func_15011() /* ty=(Tensor[(14, 16, 5), bool],) */;
  %1589 = %1587.0;
  %1590 = %1588.0;
  (%1589, %1590)
}

def @func_10804() -> (Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) {
  %1591 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
  %1592 = @func_9948() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %1593 = %1591.1;
  %1594 = %1592.0;
  (%1593, %1594)
}

def @func_11321(%var_11250: Tensor[(224), int8]) -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(14, 16, 5), float32], Tensor[(352), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1595 = @func_6809() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1596 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %1597 = cast(%var_11250, dtype="int8") /* ty=Tensor[(224), int8] */;
  %1598 = reshape(%1597, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int8] */;
  %1599 = @func_2577(%1598) /* ty=(Tensor[(7, 8, 4), int8], Tensor[(15, 13, 11), uint32]) */;
  %1600 = @func_6507() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */;
  %1601 = @func_7596() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(352), float32]) */;
  %1602 = @func_6723() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1603 = @func_7425() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1604 = %1595.0;
  %1605 = %1596.3;
  %1606 = %1599.1;
  %1607 = %1600.1;
  %1608 = %1601.3;
  %1609 = %1602.0;
  %1610 = %1603.0;
  (%1604, %1605, %1606, %var_11250, %1607, %1608, %1609, %1610)
}

def @func_5273() -> Tensor[(14, 16, 5), float64] {
  %1611 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1611.3
}

def @func_13523() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %1612 = @func_9623() /* ty=Tensor[(96), uint64] */;
  %1613 = @func_6957() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1612, %1613)
}

def @func_15341() -> (Tensor[(16, 6), uint64],) {
  %1614 = @func_8766() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %1615 = %1614.1;
  (%1615,)
}

def @func_6677() -> Tensor[(15, 13, 11), uint32] {
  %1616 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1616.0
}

def @func_21882() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %1617 = @func_9709() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
  %1618 = @func_17869() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1619 = %1617.1;
  %1620 = %1618.0;
  (%1619, %1620)
}

def @func_18024() -> Tensor[(96), uint64] {
  @func_5097() /* ty=Tensor[(96), uint64] */
}

def @func_9905() -> Tensor[(14, 16, 5), float32] {
  @func_1516() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_13623() -> Tensor[(15, 13, 11), uint32] {
  %1621 = @func_8718() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1621.0
}

def @func_2284() -> (Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) {
  %1622 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1623 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1624 = %1622.0;
  %1625 = %1623.0;
  (%1624, %1625)
}

def @func_15990() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %1626 = @func_10179() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1627 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1628 = %1626.1;
  %1629 = %1627.2;
  (%1628, %1629)
}

def @func_21227() -> Tensor[(15, 13, 11), uint32] {
  @func_14296() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_16531() -> (Tensor[(6, 2, 9), float32],) {
  %1630 = @func_11851() /* ty=(Tensor[(6, 2, 9), bool],) */;
  %1631 = %1630.0;
  %1632 = cast(%1631, dtype="float32") /* ty=Tensor[(6, 2, 9), float32] */;
  %1633 = log2(%1632) /* ty=Tensor[(6, 2, 9), float32] */;
  (%1633,)
}

def @func_6938() -> Tensor[(15, 13, 11), uint32] {
  %1634 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1634.0
}

def @func_17418() -> (Tensor[(14, 16, 5), float64], Tensor[(11, 5, 7), float32], Tensor[(15, 13, 11), uint32], Tensor[(1, 64), float32]) {
  %1635 = @func_5674() /* ty=(Tensor[(11, 5, 7), float32],) */;
  %1636 = @func_12731() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) */;
  %1637 = @func_17228() /* ty=Tensor[(14, 16, 5), float64] */;
  %1638 = %1635.0;
  %1639 = @func_12112() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1640 = %1636.2;
  (%1637, %1638, %1639, %1640)
}

def @func_6206(%var_6177: Tensor[(2145), int32], %var_6180: Tensor[(2145), int32]) -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(2145), int16]) {
  %1641 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1642 = cast(%var_6177, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1643 = reshape(%1642, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1644 = @func_1127(%1643) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1645 = cast(%var_6180, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %1646 = shape_of(%var_6177, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1647 = cast(%var_6177, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %1648 = dyn.reshape(%1645, %1646, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1649 = %1641.3;
  %1650 = %1644.3;
  %1651 = minimum(%1647, %1648) /* ty=Tensor[(2145), int16] */;
  (%1649, %1650, %1651)
}

def @func_11046() -> (Tensor[(14, 16, 5), float32],) {
  %1652 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1653 = %1652.1;
  (%1653,)
}

def @func_8808() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1654 = @func_8633() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1655 = @func_6709() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1656 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1657 = %1654.1;
  %1658 = %1655.0;
  %1659 = %1656.0;
  (%1657, %1658, %1659)
}

def @func_17172() -> (Tensor[(15, 13, 11), uint32],) {
  %1660 = @func_13981() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1660,)
}

def @func_15289() -> (Tensor[(14, 16, 5), float64], Tensor[(2, 11, 7), int64], Tensor[(154), int64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %1661 = @func_13015() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1662 = cast(meta[relay.Constant][48] /* ty=Tensor[(154), int64] */, dtype="int64") /* ty=Tensor[(154), int64] */;
  %1663 = cast(meta[relay.Constant][48] /* ty=Tensor[(154), int64] */, dtype="int64") /* ty=Tensor[(154), int64] */;
  %1664 = reshape(%1662, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int64] */;
  %1665 = reshape(%1663, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int64] */;
  %1666 = @func_3696(%1664, %1665) /* ty=(Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32]) */;
  %1667 = cast(meta[relay.Constant][49] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1668 = reshape(%1667, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %1669 = @func_912(%1668) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
  %1670 = @func_14547() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1671 = %1661.0;
  %1672 = %1666.0;
  %1673 = %1669.6;
  %1674 = %1670.0;
  (%1671, %1672, meta[relay.Constant][48] /* ty=Tensor[(154), int64] */, %1673, meta[relay.Constant][49] /* ty=Tensor[(96), uint64] */, %1674)
}

def @func_12318() -> (Tensor[(15, 13, 11), uint32],) {
  %1675 = @func_6739() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1675,)
}

def @func_21565() -> (Tensor[(2, 11, 7), float32], Tensor[(96), uint64]) {
  %1676 = @func_15289() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2, 11, 7), int64], Tensor[(154), int64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1677 = %1676.1;
  %1678 = cast(%1677, dtype="float32") /* ty=Tensor[(2, 11, 7), float32] */;
  %1679 = @func_8633() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1680 = log10(%1678) /* ty=Tensor[(2, 11, 7), float32] */;
  %1681 = %1679.0;
  (%1680, %1681)
}

def @func_21474() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(176, 2), bool]) {
  %1682 = @func_20845() /* ty=(Tensor[(96), uint64], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) */;
  %1683 = cast(meta[relay.Constant][50] /* ty=Tensor[(16, 22), float32] */, dtype="float32") /* ty=Tensor[(16, 22), float32] */;
  %1684 = reshape(%1683, newshape=[176, 2]) /* ty=Tensor[(176, 2), float32] */;
  %1685 = @func_10951(%1684) /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */;
  %1686 = %1685.8;
  %1687 = cast(meta[relay.Constant][50] /* ty=Tensor[(16, 22), float32] */, dtype="bool") /* ty=Tensor[(16, 22), bool] */;
  %1688 = shape_of(%1686, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1689 = cast(%1686, dtype="bool") /* ty=Tensor[(176, 2), bool] */;
  %1690 = dyn.reshape(%1687, %1688, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1691 = less(%1689, %1690) /* ty=Tensor[(176, 2), bool] */;
  %1692 = cast(%1691, dtype="bool") /* ty=Tensor[(176, 2), bool] */;
  %1693 = shape_of(%1686, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1694 = cast(%1686, dtype="bool") /* ty=Tensor[(176, 2), bool] */;
  %1695 = dyn.reshape(%1692, %1693, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1696 = @func_8516() /* ty=Tensor[(14, 16, 5), float64] */;
  %1697 = @func_13623() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1698 = %1682.0;
  %1699 = logical_or(%1694, %1695) /* ty=Tensor[(176, 2), bool] */;
  (%1696, %1697, %1698, %1699)
}

def @func_18467() -> Tensor[(96), uint64] {
  %1700 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1700.1
}

def @func_20115() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) {
  %1701 = @func_2220() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1702 = @func_5097() /* ty=Tensor[(96), uint64] */;
  %1703 = %1701.0;
  (%1702, %1703)
}

def @func_16964() -> (Tensor[(14, 16, 5), float32],) {
  %1704 = @func_9905() /* ty=Tensor[(14, 16, 5), float32] */;
  (%1704,)
}

def @func_19137() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %1705 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %1706 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
  %1707 = %1705.0;
  %1708 = %1706.0;
  (%1707, %1708)
}

def @func_3537() -> Tensor[(2145), int32] {
  %1709 = @func_3337() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1709.1
}

def @func_22291() -> Tensor[(96), uint64] {
  %1710 = @func_21114() /* ty=(Tensor[(18), float32], Tensor[(96), uint64]) */;
  %1710.1
}

def @func_14127() -> Tensor[(96), uint64] {
  %1711 = @func_11141() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) */;
  %1711.1
}

def @func_16228() -> (Tensor[(14, 16, 5), float32], Tensor[(2, 11, 7), int64]) {
  %1712 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1713 = @func_15289() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2, 11, 7), int64], Tensor[(154), int64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1714 = %1712.0;
  %1715 = %1713.1;
  (%1714, %1715)
}

def @func_21114() -> (Tensor[(18), float32], Tensor[(96), uint64]) {
  %1716 = @func_8083() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32], Tensor[(14, 16, 5), float64]) */;
  %1717 = %1716.3;
  %1718 = @func_13930() /* ty=Tensor[(96), uint64] */;
  (%1717, %1718)
}

def @func_6153() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %1719 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
  %1720 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1719, %1720)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_18316() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) {
  @func_18314() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) */
}

def @func_1721() -> (Tensor[(15, 13, 11), uint32],) {
  @func_1719() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_9861() -> (Tensor[(15, 13, 11), uint32],) {
  %0 = @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%0,)
}

def @func_7427() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_7425() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_5275() -> Tensor[(14, 16, 5), float64] {
  @func_5273() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_14905() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  @func_14903() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_4692() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) {
  %4 = fn () -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) {
    %1 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %2 = %1.3;
    %3 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */
}

def @func_21116() -> (Tensor[(18), float32], Tensor[(96), uint64]) {
  @func_21114() /* ty=(Tensor[(18), float32], Tensor[(96), uint64]) */
}

def @func_5476() -> Tensor[(96), uint64] {
  @func_5474() /* ty=Tensor[(96), uint64] */
}

def @func_11747() -> (Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32]) {
  %5 = @func_3076() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %6 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %7 = @func_9128() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %8 = %5.0;
  %9 = cast(%8, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %10 = reshape(%9, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %11 = @func_2627(%10) /* ty=(Tensor[(14, 16, 5), uint32],) */;
  %12 = %6.1;
  %13 = %7.1;
  %14 = %11.0;
  (%8, %12, %13, %14)
}

def @func_16566() -> (Tensor[(14, 16, 5), float64],) {
  %15 = @func_8083() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32], Tensor[(14, 16, 5), float64]) */;
  %16 = %15.1;
  (%16,)
}

def @func_4522() -> Tensor[(96), uint64] {
  %17 = @func_4295() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %17.2
}

def @func_22019(%var_22007: Tensor[(8, 12, 8), float32]) -> (Tensor[(8, 12, 8), float32], Tensor[(96), uint64]) {
  %18 = cast(%var_22007, dtype="float32") /* ty=Tensor[(8, 12, 8), float32] */;
  %19 = @func_15990() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %20 = acosh(%18) /* ty=Tensor[(8, 12, 8), float32] */;
  %21 = %19.1;
  (%20, %21)
}

def @func_12905() -> Tensor[(14, 16, 5), float32] {
  %22 = @func_6507() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */;
  %22.1
}

def @func_21884() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  @func_21882() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */
}

def @func_3339() -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) {
  @func_3337() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) */
}

def @func_2222() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  @func_2220() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */
}

def @func_16873() -> (Tensor[(16, 6), uint64],) {
  %23 = @func_14238() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %24 = %23.1;
  (%24,)
}

def @func_9646() -> Tensor[(14, 16, 5), float64] {
  @func_9644() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_20047() -> Tensor[(15, 13, 11), uint32] {
  %25 = fn () -> Tensor[(15, 13, 11), uint32] {
    @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */
  };
  %25() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_5099() -> Tensor[(96), uint64] {
  @func_5097() /* ty=Tensor[(96), uint64] */
}

def @func_13451(%var_13418: Tensor[(143, 15), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(143, 15), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %26 = @func_13099() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %27 = %26.0;
  %28 = cast(%27, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %29 = cast(%var_13418, dtype="int32") /* ty=Tensor[(143, 15), int32] */;
  %30 = reshape(%28, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %31 = reshape(%29, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %32 = @func_1046(%30, %31) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %33 = @func_8766() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %34 = %32.3;
  %35 = %33.0;
  %36 = @func_5365() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%27, %34, %var_13418, %35, %36)
}

def @func_19850(%var_19848: int8, %var_19849: Tensor[(1, 4, 15), int8]) -> (Tensor[(1, 4, 15), bool], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  @func_19846(%var_19848, %var_19849) /* ty=(Tensor[(1, 4, 15), bool], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */
}

def @func_21781() -> (Tensor[(2145), int32],) {
  %39 = fn () -> (Tensor[(2145), int32],) {
    %37 = @func_15850() /* ty=(Tensor[(2145), int32],) */;
    %38 = %37.0;
    (%38,)
  };
  %39() /* ty=(Tensor[(2145), int32],) */
}

def @func_12156() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %44 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
    %40 = @func_10179() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %41 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
    %42 = %40.1;
    %43 = %41.1;
    (%42, %43)
  };
  %44() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_19867() -> Tensor[(14, 16, 5), float64] {
  %45 = @func_14473() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %45.2
}

def @func_1391() -> (Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %62 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
    %46 = cast(meta[relay.Constant][0] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %47 = cast(meta[relay.Constant][0] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %48 = reshape(%46, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
    %49 = reshape(%47, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
    %50 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
    %51 = cast(%50, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %52 = reshape(%51, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %53 = @func_697(%52) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
    %54 = @func_518(%48, %49) /* ty=Tensor[(4, 2, 12), float64] */;
    %55 = cast(%54, dtype="uint64") /* ty=Tensor[(4, 2, 12), uint64] */;
    %56 = reshape(%55, newshape=[96]) /* ty=Tensor[(96), uint64] */;
    %57 = @func_912(%56) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
    %58 = @func_1182() /* ty=(Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) */;
    %59 = %53.2;
    %60 = %57.5;
    %61 = %58.1;
    (%50, %54, meta[relay.Constant][0] /* ty=Tensor[(96), uint64] */, %59, %60, %61)
  };
  %62() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */
}

def @func_21567() -> (Tensor[(2, 11, 7), float32], Tensor[(96), uint64]) {
  @func_21565() /* ty=(Tensor[(2, 11, 7), float32], Tensor[(96), uint64]) */
}

def @func_9638() -> (Tensor[(15, 13, 11), uint32],) {
  %65 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %63 = @func_7631() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %64 = %63.0;
    (%64,)
  };
  %65() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_18469() -> Tensor[(96), uint64] {
  @func_18467() /* ty=Tensor[(96), uint64] */
}

def @func_5667() -> (Tensor[(14, 16, 5), float64],) {
  %67 = fn () -> (Tensor[(14, 16, 5), float64],) {
    %66 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
    (%66,)
  };
  %67() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_10043(%var_10041: Tensor[(22, 7), int64]) -> (Tensor[(15, 13, 11), uint32], Tensor[(2, 11, 7), int64], Tensor[(22, 7), int64]) {
  @func_10040(%var_10041) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(2, 11, 7), int64], Tensor[(22, 7), int64]) */
}

def @func_17977(%var_17967: Tensor[(1, 6, 6), uint8], %var_17968: Tensor[(13, 6, 6), uint8]) -> (Tensor[(13, 6, 6), bool], Tensor[(96), uint64]) {
  %68 = cast(%var_17967, dtype="bool") /* ty=Tensor[(1, 6, 6), bool] */;
  %69 = cast(%var_17968, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %70 = @func_17520() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) */;
  %71 = greater_equal(%68, %69) /* ty=Tensor[(13, 6, 6), bool] */;
  %72 = %70.0;
  (%71, %72)
}

def @func_2684() -> (Tensor[(96), uint64],) {
  %73 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %74 = %73.2;
  (%74,)
}

def @func_14182(%var_14180: Tensor[(5, 7, 2), float64]) -> Tensor[(5, 7, 2), float64] {
  @func_14179(%var_14180) /* ty=Tensor[(5, 7, 2), float64] */
}

def @func_6644() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) {
  %86 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) {
    %75 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
    %76 = @func_2914() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
    %77 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
    %78 = %77.0;
    %79 = cast(%78, dtype="float32") /* ty=Tensor[(14, 16, 5), float32] */;
    %80 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
    %81 = %75.0;
    %82 = %76.0;
    %83 = asinh(%79) /* ty=Tensor[(14, 16, 5), float32] */;
    %84 = %80.0;
    %85 = @func_4729() /* ty=Tensor[(14, 16, 5), float32] */;
    (%81, %82, %83, %84, %85)
  };
  %86() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */
}

def @func_4926() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_7425() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %87 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %88 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %89 = %87.0;
  %90 = %88.0;
  (%89, %90)
}

def @func_13663() -> (Tensor[(14, 16, 5), float64],) {
  %91 = @func_8516() /* ty=Tensor[(14, 16, 5), float64] */;
  (%91,)
}

def @func_18798(%var_18796: Tensor[(3, 60), bool]) -> (Tensor[(15, 13, 11), uint32], Tensor[(6, 2, 15), bool], Tensor[(3, 60), bool], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
  @func_18795(%var_18796) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(6, 2, 15), bool], Tensor[(3, 60), bool], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */
}

def @func_4162() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %92 = @func_3076() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %93 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %94 = %92.0;
  (%93, %94)
}

def @func_15479() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %95 = @func_14680() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %96 = @func_13475() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %97 = %95.1;
  %98 = %96.2;
  (%97, %98)
}

def @func_18026() -> Tensor[(96), uint64] {
  @func_18024() /* ty=Tensor[(96), uint64] */
}

def @func_6045() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  @func_6043() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_14903() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %99 = @func_12629() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %100 = @func_5319() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %101 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
  %102 = %99.0;
  %103 = %100.1;
  %104 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  %105 = %101.0;
  (%102, %103, %104, %105)
}

def @func_1292() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  @func_1290() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_2523() -> (Tensor[(14, 16, 5), float64],) {
  %107 = fn () -> (Tensor[(14, 16, 5), float64],) {
    %106 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
    (%106,)
  };
  %107() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_10996() -> Tensor[(14, 16, 5), float64] {
  %108 = @func_7317() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %108.0
}

def @func_6866() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %109 = @func_5394() /* ty=Tensor[(15, 13, 11), uint32] */;
  %110 = @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%109, %110)
}

def @func_21960() -> Tensor[(14, 16, 5), float64] {
  %111 = @func_7317() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %111.0
}

def @func_10476() -> Tensor[(15, 13, 11), uint32] {
  %112 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %112.1
}

def @func_21114() -> (Tensor[(18), float32], Tensor[(96), uint64]) {
  %113 = @func_8083() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32], Tensor[(14, 16, 5), float64]) */;
  %114 = %113.3;
  %115 = @func_13930() /* ty=Tensor[(96), uint64] */;
  (%114, %115)
}

def @func_22920() -> (Tensor[(14, 16, 5), float64],) {
  @func_22918() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_9787() -> Tensor[(15, 13, 11), uint32] {
  @func_9785() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_17688() -> (Tensor[(16, 6), uint64], Tensor[(1, 7, 8), float32], Tensor[(28, 2), float32], Tensor[(15, 13, 11), uint32]) {
  @func_17686() /* ty=(Tensor[(16, 6), uint64], Tensor[(1, 7, 8), float32], Tensor[(28, 2), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_13665() -> (Tensor[(14, 16, 5), float64],) {
  @func_13663() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_12782() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) {
  @func_12780() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) */
}

def @func_9678() -> (Tensor[(14, 16, 5), float64],) {
  %117 = fn () -> (Tensor[(14, 16, 5), float64],) {
    %116 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
    (%116,)
  };
  %117() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_20496() -> (Tensor[(15, 13, 11), uint32],) {
  %118 = @func_15182() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %119 = %118.0;
  (%119,)
}

def @func_19162() -> (Tensor[(96), uint64],) {
  @func_19160() /* ty=(Tensor[(96), uint64],) */
}

def @func_13932() -> Tensor[(96), uint64] {
  @func_13930() /* ty=Tensor[(96), uint64] */
}

def @func_9038() -> (Tensor[(96), uint64],) {
  @func_9036() /* ty=(Tensor[(96), uint64],) */
}

def @func_988() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  %120 = cast(meta[relay.Constant][1] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %121 = cast(meta[relay.Constant][1] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %122 = reshape(%120, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %123 = reshape(%121, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %124 = @func_182(%122, %123) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %125 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %126 = %124.0;
  (%125, %126, meta[relay.Constant][1] /* ty=Tensor[(2145), int32] */)
}

def @func_2013() -> Tensor[(15, 13, 11), uint32] {
  %127 = fn () -> Tensor[(15, 13, 11), uint32] {
    @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */
  };
  %127() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_16264() -> Tensor[(2145), bool] {
  @func_16262() /* ty=Tensor[(2145), bool] */
}

def @func_19418(%var_19416: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), float32]) {
  @func_19415(%var_19416) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), float32]) */
}

def @func_5073() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  @func_5071() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */
}

def @func_990() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */
}

def @func_9711() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  @func_9709() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */
}

def @func_14179(%var_14174: Tensor[(5, 7, 2), float64]) -> Tensor[(5, 7, 2), float64] {
  %128 = cast(%var_14174, dtype="float64") /* ty=Tensor[(5, 7, 2), float64] */;
  rsqrt(%128) /* ty=Tensor[(5, 7, 2), float64] */
}

def @func_4296() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  %134 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
    %129 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
    %130 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
    %131 = %129.0;
    %132 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
    %133 = %130.2;
    (%131, %132, %133)
  };
  %134() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */
}

def @func_5802() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) {
  %135 = @func_5535() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %136 = %135.0;
  %137 = cast(%136, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %138 = reshape(%137, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %139 = @func_2627(%138) /* ty=(Tensor[(14, 16, 5), uint32],) */;
  %140 = %139.0;
  (%136, %140)
}

def @func_13895() -> Tensor[(4, 4, 4), int8] {
  @func_13893() /* ty=Tensor[(4, 4, 4), int8] */
}

def @func_23176() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_23174() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_6809() -> (Tensor[(15, 13, 11), uint32],) {
  %141 = @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%141,)
}

def @func_8396() -> (Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  @func_8394() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */
}

def @func_14217() -> Tensor[(14, 16, 5), float32] {
  %142 = @func_3076() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %142.0
}

def @func_17852() -> (Tensor[(15, 13, 11), int64],) {
  %144 = fn () -> (Tensor[(15, 13, 11), int64],) {
    %143 = @func_8596() /* ty=Tensor[(15, 13, 11), int64] */;
    (%143,)
  };
  %144() /* ty=(Tensor[(15, 13, 11), int64],) */
}

def @func_23091() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %148 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
    %145 = @func_13099() /* ty=(Tensor[(14, 16, 5), float64],) */;
    %146 = %145.0;
    %147 = @func_13488() /* ty=Tensor[(14, 16, 5), float64] */;
    (%146, %147)
  };
  %148() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */
}

def @func_11466(%var_11465: Tensor[(96), uint64]) -> (Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64]) {
  %156 = fn (%var_11459: Tensor[(96), uint64]) -> (Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64]) {
    %149 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %150 = cast(%var_11459, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %151 = cast(%var_11459, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %152 = reshape(%150, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
    %153 = reshape(%151, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
    %154 = %149.0;
    %155 = @func_518(%152, %153) /* ty=Tensor[(4, 2, 12), float64] */;
    (%154, %155, %var_11459)
  };
  %156(%var_11465) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64]) */
}

def @func_18647() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) {
  @func_18645() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */
}

def @func_2088() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %163 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
    %157 = @func_1182() /* ty=(Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) */;
    %158 = @func_1290() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %159 = %158.1;
    %160 = cast(%159, dtype="float32") /* ty=Tensor[(14, 16, 5), float32] */;
    %161 = %157.1;
    %162 = rsqrt(%160) /* ty=Tensor[(14, 16, 5), float32] */;
    (%161, %162)
  };
  %163() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */
}

def @func_5536() -> (Tensor[(14, 16, 5), float32],) {
  %166 = fn () -> (Tensor[(14, 16, 5), float32],) {
    %164 = @func_3950() /* ty=(Tensor[(14, 16, 5), float32],) */;
    %165 = %164.0;
    (%165,)
  };
  %166() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_9487() -> (Tensor[(96), uint64],) {
  @func_9485() /* ty=(Tensor[(96), uint64],) */
}

def @func_13582() -> (Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  @func_13580() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_3440() -> Tensor[(15, 13, 11), uint32] {
  %167 = fn () -> Tensor[(15, 13, 11), uint32] {
    @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */
  };
  %167() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_5942() -> (Tensor[(15, 13, 11), uint32],) {
  @func_5940() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_8888() -> (Tensor[(15, 13, 11), uint32],) {
  @func_8886() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_22441() -> (Tensor[(14, 16, 5), float64],) {
  @func_22439() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_1588() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */
}

def @func_5071() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %168 = @func_4710() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %169 = @func_4385() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) */;
  %170 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %171 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %172 = cast(meta[relay.Constant][2] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %173 = reshape(%172, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %174 = @func_1127(%173) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %175 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %176 = %168.0;
  %177 = %169.1;
  %178 = %170.0;
  %179 = %171.1;
  %180 = %174.3;
  %181 = %175.1;
  (%176, %177, %178, %179, %180, meta[relay.Constant][2] /* ty=Tensor[(2145), int32] */, %181)
}

def @func_14297() -> Tensor[(15, 13, 11), uint32] {
  %183 = fn () -> Tensor[(15, 13, 11), uint32] {
    %182 = @func_5911() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %182.0
  };
  %183() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_5804() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) {
  @func_5802() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) */
}

def @func_16875() -> (Tensor[(16, 6), uint64],) {
  @func_16873() /* ty=(Tensor[(16, 6), uint64],) */
}

def @func_23339() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_23337() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_21033() -> Tensor[(96), uint64] {
  @func_21031() /* ty=Tensor[(96), uint64] */
}

def @func_17230() -> Tensor[(14, 16, 5), float64] {
  @func_17228() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_17870() -> (Tensor[(14, 16, 5), float64],) {
  %185 = fn () -> (Tensor[(14, 16, 5), float64],) {
    %184 = @func_9644() /* ty=Tensor[(14, 16, 5), float64] */;
    (%184,)
  };
  %185() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_1297() -> Tensor[(15, 13, 11), uint32] {
  @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_13273() -> (Tensor[(96), uint64],) {
  %186 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
  %187 = %186.0;
  (%187,)
}

def @func_15481() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  @func_15479() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_15906(%var_15904: Tensor[(10, 14, 7), float64]) -> Tensor[(10, 14, 7), float64] {
  @func_15903(%var_15904) /* ty=Tensor[(10, 14, 7), float64] */
}

def @func_12824() -> (Tensor[(13, 2, 10), uint8], Tensor[(15, 13, 11), uint32], Tensor[(1056), uint64], Tensor[(11, 96), float32]) {
  %200 = fn () -> (Tensor[(13, 2, 10), uint8], Tensor[(15, 13, 11), uint32], Tensor[(1056), uint64], Tensor[(11, 96), float32]) {
    %188 = @func_8394() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
    %189 = @func_5071() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
    %190 = %189.6;
    %191 = cast(%190, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
    %192 = cast(meta[relay.Constant][3] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
    %193 = reshape(%191, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), float64] */;
    %194 = reshape(%192, newshape=[11, 96]) /* ty=Tensor[(11, 96), uint64] */;
    %195 = @func_7851(%193, %194) /* ty=(Tensor[(11, 96), uint64], Tensor[(18), float32], Tensor[(15, 13, 11), bool], Tensor[(11, 96), bool]) */;
    %196 = %195.3;
    %197 = cast(%196, dtype="float32") /* ty=Tensor[(11, 96), float32] */;
    %198 = %188.1;
    %199 = log2(%197) /* ty=Tensor[(11, 96), float32] */;
    (%198, %190, meta[relay.Constant][3] /* ty=Tensor[(1056), uint64] */, %199)
  };
  %200() /* ty=(Tensor[(13, 2, 10), uint8], Tensor[(15, 13, 11), uint32], Tensor[(1056), uint64], Tensor[(11, 96), float32]) */
}

def @func_9305(%var_9296: Tensor[(12, 13, 13), float32]) -> Tensor[(12, 13, 13), float32] {
  %201 = cast(%var_9296, dtype="float32") /* ty=Tensor[(12, 13, 13), float32] */;
  acos(%201) /* ty=Tensor[(12, 13, 13), float32] */
}

def @func_6725() -> (Tensor[(15, 13, 11), uint32],) {
  @func_6723() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_12448() -> (Tensor[(15, 13, 11), uint32],) {
  @func_12446() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_17686() -> (Tensor[(16, 6), uint64], Tensor[(1, 7, 8), float32], Tensor[(28, 2), float32], Tensor[(15, 13, 11), uint32]) {
  %202 = cast(meta[relay.Constant][4] /* ty=Tensor[(28, 2), float32] */, dtype="float32") /* ty=Tensor[(28, 2), float32] */;
  %203 = reshape(%202, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), float32] */;
  %204 = @func_5141(%203) /* ty=(Tensor[(1, 7, 8), float32],) */;
  %205 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %206 = @func_5466() /* ty=Tensor[(16, 6), uint64] */;
  %207 = %204.0;
  %208 = %205.0;
  (%206, %207, meta[relay.Constant][4] /* ty=Tensor[(28, 2), float32] */, %208)
}

def @func_3911(%var_3909: Tensor[(11, 2, 16), float32]) -> Tensor[(11, 2, 16), float32] {
  @func_3908(%var_3909) /* ty=Tensor[(11, 2, 16), float32] */
}

def @func_4731() -> Tensor[(14, 16, 5), float32] {
  @func_4729() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_20498() -> (Tensor[(15, 13, 11), uint32],) {
  @func_20496() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_21565() -> (Tensor[(2, 11, 7), float32], Tensor[(96), uint64]) {
  %209 = @func_15289() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2, 11, 7), int64], Tensor[(154), int64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %210 = %209.1;
  %211 = cast(%210, dtype="float32") /* ty=Tensor[(2, 11, 7), float32] */;
  %212 = @func_8633() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %213 = log10(%211) /* ty=Tensor[(2, 11, 7), float32] */;
  %214 = %212.0;
  (%213, %214)
}

def @func_2220() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %215 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %216 = %215.0;
  %217 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  (%216, %217)
}

def @func_2257() -> (Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %227 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
    %218 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
    %219 = cast(%218, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %220 = reshape(%219, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %221 = @func_844(%220) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
    %222 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %223 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
    %224 = %221.4;
    %225 = %222.2;
    %226 = %223.5;
    (%218, %224, %225, %226)
  };
  %227() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_13524() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %230 = fn () -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
    %228 = @func_9623() /* ty=Tensor[(96), uint64] */;
    %229 = @func_6957() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%228, %229)
  };
  %230() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */
}

def @func_16499(%var_16498: Tensor[(1, 780), float64]) -> (Tensor[(96), uint64], Tensor[(64), float32], Tensor[(64), float32], Tensor[(2, 32), float32], Tensor[(3, 780), int64]) {
  %246 = fn (%var_16445: Tensor[(1, 780), float64]) -> (Tensor[(96), uint64], Tensor[(64), float32], Tensor[(64), float32], Tensor[(2, 32), float32], Tensor[(3, 780), int64]) {
    %231 = @func_4472() /* ty=(Tensor[(96), uint64],) */;
    %232 = cast(%var_16445, dtype="float64") /* ty=Tensor[(1, 780), float64] */;
    %233 = cast(%var_16445, dtype="float64") /* ty=Tensor[(1, 780), float64] */;
    %234 = cast(meta[relay.Constant][5] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
    %235 = reshape(%232, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float64] */;
    %236 = reshape(%233, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float64] */;
    %237 = reshape(%234, newshape=[64]) /* ty=Tensor[(64), float32] */;
    %238 = @func_7898(%235, %236, %237) /* ty=(Tensor[(15, 4, 13), bool], Tensor[(4, 4, 4), int8], Tensor[(64), float32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64]) */;
    %239 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
    %240 = cast(%var_16445, dtype="int64") /* ty=Tensor[(1, 780), int64] */;
    %241 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 780), float64] */, dtype="int64") /* ty=Tensor[(3, 780), int64] */;
    %242 = %231.0;
    %243 = %238.2;
    %244 = %239.2;
    %245 = bitwise_and(%240, %241) /* ty=Tensor[(3, 780), int64] */;
    (%242, %243, meta[relay.Constant][5] /* ty=Tensor[(64), float32] */, %244, %245)
  };
  %246(%var_16498) /* ty=(Tensor[(96), uint64], Tensor[(64), float32], Tensor[(64), float32], Tensor[(2, 32), float32], Tensor[(3, 780), int64]) */
}

def @func_7376() -> (Tensor[(14, 16, 5), float32],) {
  @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_3952() -> (Tensor[(14, 16, 5), float32],) {
  @func_3950() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_8583() -> (Tensor[(14, 16, 5), float64],) {
  %249 = fn () -> (Tensor[(14, 16, 5), float64],) {
    %247 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %248 = %247.3;
    (%248,)
  };
  %249() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_11323(%var_11322: Tensor[(224), int8]) -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(14, 16, 5), float32], Tensor[(352), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %266 = fn (%var_11250: Tensor[(224), int8]) -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(14, 16, 5), float32], Tensor[(352), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
    %250 = @func_6809() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %251 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
    %252 = cast(%var_11250, dtype="int8") /* ty=Tensor[(224), int8] */;
    %253 = reshape(%252, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int8] */;
    %254 = @func_2577(%253) /* ty=(Tensor[(7, 8, 4), int8], Tensor[(15, 13, 11), uint32]) */;
    %255 = @func_6507() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */;
    %256 = @func_7596() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(352), float32]) */;
    %257 = @func_6723() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %258 = @func_7425() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %259 = %250.0;
    %260 = %251.3;
    %261 = %254.1;
    %262 = %255.1;
    %263 = %256.3;
    %264 = %257.0;
    %265 = %258.0;
    (%259, %260, %261, %var_11250, %262, %263, %264, %265)
  };
  %266(%var_11322) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(14, 16, 5), float32], Tensor[(352), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_19846(%var_19812: int8, %var_19813: Tensor[(1, 4, 15), int8]) -> (Tensor[(1, 4, 15), bool], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %267 = cast(%var_19812, dtype="bool") /* ty=bool */;
  %268 = cast(%var_19813, dtype="bool") /* ty=Tensor[(1, 4, 15), bool] */;
  %269 = @func_17869() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %270 = not_equal(%267, %268) /* ty=Tensor[(1, 4, 15), bool] */;
  %271 = @func_12905() /* ty=Tensor[(14, 16, 5), float32] */;
  %272 = %269.0;
  (%270, %271, %272)
}

def @func_12862() -> (Tensor[(2145), bool], Tensor[(14, 16, 5), float64]) {
  %273 = @func_9440() /* ty=(Tensor[(2145), bool], Tensor[(14, 16, 5), float32]) */;
  %274 = @func_9677() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %275 = %273.0;
  %276 = %274.0;
  (%275, %276)
}

def @func_13930() -> Tensor[(96), uint64] {
  %277 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %277.0
}

def @func_16643() -> (Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %281 = fn () -> (Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
    %278 = @func_15479() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %279 = @func_3537() /* ty=Tensor[(2145), int32] */;
    %280 = %278.0;
    (%279, %280)
  };
  %281() /* ty=(Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */
}

def @func_14548() -> (Tensor[(15, 13, 11), uint32],) {
  %284 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %282 = @func_10179() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %283 = %282.1;
    (%283,)
  };
  %284() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_20294() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  @func_20292() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */
}

def @func_16262() -> Tensor[(2145), bool] {
  %285 = @func_9440() /* ty=(Tensor[(2145), bool], Tensor[(14, 16, 5), float32]) */;
  %285.0
}

def @func_10040(%var_9992: Tensor[(22, 7), int64]) -> (Tensor[(15, 13, 11), uint32], Tensor[(2, 11, 7), int64], Tensor[(22, 7), int64]) {
  %286 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %287 = cast(%var_9992, dtype="int64") /* ty=Tensor[(22, 7), int64] */;
  %288 = cast(%var_9992, dtype="int64") /* ty=Tensor[(22, 7), int64] */;
  %289 = reshape(%287, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int64] */;
  %290 = reshape(%288, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int64] */;
  %291 = @func_3696(%289, %290) /* ty=(Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32]) */;
  %292 = %286.0;
  %293 = %291.0;
  (%292, %293, %var_9992)
}

def @func_20645() -> (Tensor[(15, 13, 11), uint32],) {
  %294 = @func_16918() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%294,)
}

def @func_12021() -> (Tensor[(15, 13, 11), uint32],) {
  %295 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%295,)
}

def @func_9215() -> Tensor[(15, 13, 11), uint32] {
  @func_3836() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_6209(%var_6207: Tensor[(2145), int32], %var_6208: Tensor[(2145), int32]) -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(2145), int16]) {
  %307 = fn (%var_6177: Tensor[(2145), int32], %var_6180: Tensor[(2145), int32]) -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(2145), int16]) {
    %296 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %297 = cast(%var_6177, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %298 = reshape(%297, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %299 = @func_1127(%298) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
    %300 = cast(%var_6180, dtype="int16") /* ty=Tensor[(2145), int16] */;
    %301 = shape_of(%var_6177, dtype="int32") /* ty=Tensor[(1), int32] */;
    %302 = cast(%var_6177, dtype="int16") /* ty=Tensor[(2145), int16] */;
    %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?), int16] */;
    %304 = %296.3;
    %305 = %299.3;
    %306 = minimum(%302, %303) /* ty=Tensor[(2145), int16] */;
    (%304, %305, %306)
  };
  %307(%var_6207, %var_6208) /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(2145), int16]) */
}

def @func_10680() -> (Tensor[(14, 16, 5), float32], Tensor[(1, 96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  %317 = fn () -> (Tensor[(14, 16, 5), float32], Tensor[(1, 96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
    %308 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
    %309 = @func_4385() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) */;
    %310 = @func_2220() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
    %311 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
    %312 = %308.0;
    %313 = %309.4;
    %314 = %310.1;
    %315 = %311.0;
    %316 = @func_9623() /* ty=Tensor[(96), uint64] */;
    (%312, %313, %314, %315, %316)
  };
  %317() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(1, 96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */
}

def @func_12231() -> (Tensor[(14, 16, 5), float64],) {
  @func_12229() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_7633() -> (Tensor[(15, 13, 11), uint32],) {
  @func_7631() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_20376(%var_20374: Tensor[(16, 10, 10), int32], %var_20375: Tensor[(16, 10, 10), int32]) -> Tensor[(16, 10, 10), bool] {
  @func_20372(%var_20374, %var_20375) /* ty=Tensor[(16, 10, 10), bool] */
}

def @func_7245() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %318 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %319 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %320 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %321 = @func_5802() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) */;
  %322 = %319.1;
  %323 = cast(%322, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %324 = %320.0;
  %325 = cast(%324, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %326 = reshape(%323, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %327 = reshape(%325, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %328 = @func_182(%326, %327) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %329 = %318.1;
  %330 = %321.0;
  %331 = %328.0;
  %332 = @func_6739() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%329, %322, %324, %330, %331, %332)
}

def @func_9442() -> (Tensor[(2145), bool], Tensor[(14, 16, 5), float32]) {
  @func_9440() /* ty=(Tensor[(2145), bool], Tensor[(14, 16, 5), float32]) */
}

def @func_2110() -> (Tensor[(15, 13, 11), float32],) {
  @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */
}

def @func_12369() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %333 = @func_6866() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %334 = %333.0;
  %335 = @func_9905() /* ty=Tensor[(14, 16, 5), float32] */;
  (%334, %335)
}

def @func_14211() -> (Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %340 = fn () -> (Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
    %336 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
    %337 = @func_7631() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %338 = %336.3;
    %339 = %337.0;
    (%338, %339)
  };
  %340() /* ty=(Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */
}

def @func_16841() -> (Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  %341 = @func_7425() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %342 = %341.0;
  %343 = @func_3537() /* ty=Tensor[(2145), int32] */;
  (%342, %343)
}

def @func_12780() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) {
  %344 = @func_11586() /* ty=(Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), uint32]) */;
  %345 = @func_10254() /* ty=Tensor[(14, 16, 5), float32] */;
  %346 = %344.0;
  (%345, %346)
}

def @func_5366() -> Tensor[(15, 13, 11), uint32] {
  %348 = fn () -> Tensor[(15, 13, 11), uint32] {
    %347 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %347.0
  };
  %348() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_8482() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) {
  %354 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) {
    %349 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %350 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
    %351 = @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */;
    %352 = %349.1;
    %353 = %350.0;
    (%351, %352, %353)
  };
  %354() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */
}

def @func_1755() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  %355 = cast(meta[relay.Constant][7] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %356 = reshape(%355, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %357 = @func_912(%356) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
  %358 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  %359 = %357.0;
  (%358, %359, meta[relay.Constant][7] /* ty=Tensor[(96), uint64] */)
}

def @func_9518() -> Tensor[(15, 13, 11), uint32] {
  %361 = fn () -> Tensor[(15, 13, 11), uint32] {
    %360 = @func_2503() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
    %360.0
  };
  %361() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_13359() -> (Tensor[(15, 13, 11), uint32],) {
  %364 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %362 = @func_9128() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %363 = %362.1;
    (%363,)
  };
  %364() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_3425() -> (Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %379 = fn () -> (Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
    %365 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
    %366 = %365.0;
    %367 = cast(%366, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %368 = cast(%366, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %369 = reshape(%367, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
    %370 = reshape(%368, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
    %371 = @func_182(%369, %370) /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %372 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %373 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %374 = %373.1;
    %375 = cast(%374, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
    %376 = %371.0;
    %377 = %372.2;
    %378 = sigmoid(%375) /* ty=Tensor[(14, 16, 5), float64] */;
    (%366, %376, %377, %378)
  };
  %379() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */
}

def @func_17981(%var_17979: Tensor[(1, 6, 6), uint8], %var_17980: Tensor[(13, 6, 6), uint8]) -> (Tensor[(13, 6, 6), bool], Tensor[(96), uint64]) {
  @func_17977(%var_17979, %var_17980) /* ty=(Tensor[(13, 6, 6), bool], Tensor[(96), uint64]) */
}

def @func_21227() -> Tensor[(15, 13, 11), uint32] {
  @func_14296() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_18102() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) {
  %385 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) {
    %380 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
    %381 = @func_14160() /* ty=(Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) */;
    %382 = %380.3;
    %383 = %381.1;
    %384 = @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%382, %383, %384)
  };
  %385() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_12112() -> Tensor[(15, 13, 11), uint32] {
  %386 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %386.0
}

def @func_6868() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_6866() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_14523() -> (Tensor[(15, 13, 11), float32],) {
  %389 = fn () -> (Tensor[(15, 13, 11), float32],) {
    %387 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
    %388 = %387.0;
    (%388,)
  };
  %389() /* ty=(Tensor[(15, 13, 11), float32],) */
}

def @func_20876() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %393 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
    %390 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
    %391 = @func_16133() /* ty=Tensor[(15, 13, 11), uint32] */;
    %392 = %390.1;
    (%391, %392)
  };
  %393() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_8394() -> (Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %394 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %395 = cast(meta[relay.Constant][8] /* ty=Tensor[(260), uint8] */, dtype="uint8") /* ty=Tensor[(260), uint8] */;
  %396 = reshape(%395, newshape=[13, 2, 10]) /* ty=Tensor[(13, 2, 10), uint8] */;
  %397 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %398 = %394.0;
  %399 = @func_6653(%396) /* ty=Tensor[(13, 2, 10), uint8] */;
  %400 = %397.0;
  %401 = @func_3537() /* ty=Tensor[(2145), int32] */;
  %402 = @func_7738() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%398, %399, meta[relay.Constant][8] /* ty=Tensor[(260), uint8] */, %400, %401, %402)
}

def @func_14733() -> Tensor[(15, 13, 11), uint32] {
  %404 = fn () -> Tensor[(15, 13, 11), uint32] {
    %403 = @func_6709() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %403.0
  };
  %404() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_15991() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %409 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
    %405 = @func_10179() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %406 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %407 = %405.1;
    %408 = %406.2;
    (%407, %408)
  };
  %409() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_1757() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */
}

def @func_915(%var_913: Tensor[(96), uint64]) -> (Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) {
  @func_912(%var_913) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */
}

def @func_1719() -> (Tensor[(15, 13, 11), uint32],) {
  %410 = @func_1182() /* ty=(Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) */;
  %411 = %410.1;
  (%411,)
}

def @func_4164() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */
}

def @func_13489() -> Tensor[(14, 16, 5), float64] {
  %413 = fn () -> Tensor[(14, 16, 5), float64] {
    %412 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
    %412.4
  };
  %413() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_9036() -> (Tensor[(96), uint64],) {
  %414 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %415 = %414.1;
  (%415,)
}

def @func_16533() -> (Tensor[(6, 2, 9), float32],) {
  @func_16531() /* ty=(Tensor[(6, 2, 9), float32],) */
}

def @func_3950() -> (Tensor[(14, 16, 5), float32],) {
  %416 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %417 = %416.1;
  (%417,)
}

def @func_18675() -> (Tensor[(15, 13, 11), uint32],) {
  @func_18673() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_15903(%var_15895: Tensor[(10, 14, 7), float64]) -> Tensor[(10, 14, 7), float64] {
  %418 = cast(%var_15895, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  asin(%418) /* ty=Tensor[(10, 14, 7), float64] */
}

def @func_22330(%var_22328: Tensor[(13, 4, 1), float64], %var_22329: Tensor[(13, 4, 1), float64]) -> Tensor[(13, 4, ?), float64] {
  %423 = fn (%var_22314: Tensor[(13, 4, 1), float64], %var_22315: Tensor[(13, 4, 1), float64]) -> Tensor[(13, 4, ?), float64] {
    %419 = cast(%var_22315, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
    %420 = shape_of(%var_22314, dtype="int32") /* ty=Tensor[(3), int32] */;
    %421 = cast(%var_22314, dtype="float64") /* ty=Tensor[(13, 4, 1), float64] */;
    %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%421, %422) /* ty=Tensor[(13, 4, ?), float64] */
  };
  %423(%var_22328, %var_22329) /* ty=Tensor[(13, 4, ?), float64] */
}

def @func_22987() -> (Tensor[(15, 13, 11), uint32],) {
  %424 = @func_3439() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%424,)
}

def @func_9554(%var_9552: Tensor[(13, 7, 1), float32]) -> (Tensor[(13, 7, 1), float32], Tensor[(14, 16, 5), float32]) {
  @func_9551(%var_9552) /* ty=(Tensor[(13, 7, 1), float32], Tensor[(14, 16, 5), float32]) */
}

def @func_1290() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %425 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %426 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %427 = %425.1;
  %428 = %426.0;
  (%427, %428)
}

def @func_22225() -> Tensor[(15, 13, 11), uint32] {
  @func_22223() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_6311(%var_6309: Tensor[(4, 15, 8), float32]) -> Tensor[(4, 15, 8), float32] {
  @func_6308(%var_6309) /* ty=Tensor[(4, 15, 8), float32] */
}

def @func_23396() -> (Tensor[(15, 13, 11), uint32],) {
  %431 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %429 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
    %430 = %429.0;
    (%430,)
  };
  %431() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_8084() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32], Tensor[(14, 16, 5), float64]) {
  %444 = fn () -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32], Tensor[(14, 16, 5), float64]) {
    %432 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %433 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %434 = cast(meta[relay.Constant][9] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
    %435 = reshape(%434, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
    %436 = @func_6435(%435) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) */;
    %437 = %436.1;
    %438 = cast(%437, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %439 = reshape(%438, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %440 = @func_1127(%439) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
    %441 = %432.1;
    %442 = %433.1;
    %443 = %440.0;
    (%441, %442, %437, meta[relay.Constant][9] /* ty=Tensor[(18), float32] */, %443)
  };
  %444() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32], Tensor[(14, 16, 5), float64]) */
}

def @func_1295() -> Tensor[(15, 13, 11), uint32] {
  %445 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %445.1
}

def @func_6957() -> Tensor[(15, 13, 11), uint32] {
  %446 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %446.0
}

def @func_12229() -> (Tensor[(14, 16, 5), float64],) {
  %447 = @func_7317() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %448 = %447.0;
  (%448,)
}

def @func_10420(%var_10401: Tensor[(60), int8], %var_10402: Tensor[(420, 2), int8]) -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(60), int8], Tensor[(420, 2), int8]) {
  %449 = cast(%var_10401, dtype="int8") /* ty=Tensor[(60), int8] */;
  %450 = cast(%var_10402, dtype="int8") /* ty=Tensor[(420, 2), int8] */;
  %451 = reshape(%449, newshape=[10, 6, 1]) /* ty=Tensor[(10, 6, 1), int8] */;
  %452 = reshape(%450, newshape=[10, 6, 14]) /* ty=Tensor[(10, 6, 14), int8] */;
  %453 = @func_4807(%451, %452) /* ty=(Tensor[(10, 6, 14), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %454 = @func_1516() /* ty=Tensor[(14, 16, 5), float32] */;
  %455 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  %456 = %453.2;
  (%454, %455, %456, %var_10401, %var_10402)
}

def @func_16083() -> (Tensor[(14, 16, 5), float64], Tensor[(6, 2, 9), float64]) {
  %457 = @func_11851() /* ty=(Tensor[(6, 2, 9), bool],) */;
  %458 = %457.0;
  %459 = cast(%458, dtype="float64") /* ty=Tensor[(6, 2, 9), float64] */;
  %460 = @func_8926() /* ty=Tensor[(14, 16, 5), float64] */;
  %461 = tan(%459) /* ty=Tensor[(6, 2, 9), float64] */;
  (%460, %461)
}

def @func_12415() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(2145), int32]) {
  %462 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %463 = @func_10625() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) */;
  %464 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
  %465 = @func_11808() /* ty=(Tensor[(2145), int32],) */;
  %466 = %462.0;
  %467 = %463.3;
  %468 = %464.0;
  %469 = %465.0;
  (%466, %467, %468, %469)
}

def @func_18950() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  @func_18948() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */
}

def @func_17600(%var_17598: Tensor[(3, 1, 1), uint8]) -> (Tensor[(3, 1, 4), uint8],) {
  @func_17597(%var_17598) /* ty=(Tensor[(3, 1, 4), uint8],) */
}

def @func_18673() -> (Tensor[(15, 13, 11), uint32],) {
  %470 = @func_13548() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %471 = %470.0;
  (%471,)
}

def @func_18198() -> (Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) {
  %475 = fn () -> (Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) {
    %472 = @func_2914() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
    %473 = @func_11600() /* ty=Tensor[(14, 16, 5), float32] */;
    %474 = %472.1;
    (%473, %474)
  };
  %475() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */
}

def @func_19160() -> (Tensor[(96), uint64],) {
  %476 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
  %477 = %476.0;
  (%477,)
}

def @func_7476() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %478 = @func_2914() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %479 = @func_5097() /* ty=Tensor[(96), uint64] */;
  %480 = %478.0;
  (%479, %480)
}

def @func_21987() -> (Tensor[(15, 13, 11), int64], Tensor[(14, 16, 5), float64]) {
  %486 = fn () -> (Tensor[(15, 13, 11), int64], Tensor[(14, 16, 5), float64]) {
    %481 = @func_8596() /* ty=Tensor[(15, 13, 11), int64] */;
    %482 = cast(%481, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %483 = reshape(%482, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %484 = @func_19415(%483) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), float32]) */;
    %485 = %484.0;
    (%481, %485)
  };
  %486() /* ty=(Tensor[(15, 13, 11), int64], Tensor[(14, 16, 5), float64]) */
}

def @func_8928() -> Tensor[(14, 16, 5), float64] {
  @func_8926() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_16843() -> (Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  @func_16841() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */
}

def @func_5426() -> Tensor[(15, 13, 11), uint32] {
  %488 = fn () -> Tensor[(15, 13, 11), uint32] {
    %487 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %487.0
  };
  %488() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_1050(%var_1048: Tensor[(14, 16, 5), float64], %var_1049: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) {
  @func_1046(%var_1048, %var_1049) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */
}

def @func_9130() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_9128() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_7855(%var_7853: Tensor[(15, 13, 11), float64], %var_7854: Tensor[(11, 96), uint64]) -> (Tensor[(11, 96), uint64], Tensor[(18), float32], Tensor[(15, 13, 11), bool], Tensor[(11, 96), bool]) {
  @func_7851(%var_7853, %var_7854) /* ty=(Tensor[(11, 96), uint64], Tensor[(18), float32], Tensor[(15, 13, 11), bool], Tensor[(11, 96), bool]) */
}

def @func_3028() -> (Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) {
  %493 = fn () -> (Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) {
    %489 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %490 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
    %491 = %489.1;
    %492 = %490.2;
    (%491, %492)
  };
  %493() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */
}

def @func_10424(%var_10422: Tensor[(60), int8], %var_10423: Tensor[(420, 2), int8]) -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(60), int8], Tensor[(420, 2), int8]) {
  @func_10420(%var_10422, %var_10423) /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(60), int8], Tensor[(420, 2), int8]) */
}

def @func_8598() -> Tensor[(15, 13, 11), int64] {
  @func_8596() /* ty=Tensor[(15, 13, 11), int64] */
}

def @func_8198() -> Tensor[(15, 13, 11), uint32] {
  %495 = fn () -> Tensor[(15, 13, 11), uint32] {
    %494 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
    %494.3
  };
  %495() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_14127() -> Tensor[(96), uint64] {
  %496 = @func_11141() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) */;
  %496.1
}

def @func_8886() -> (Tensor[(15, 13, 11), uint32],) {
  %497 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %498 = %497.0;
  (%498,)
}

def @func_7317() -> (Tensor[(14, 16, 5), float64],) {
  %499 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  (%499,)
}

def @func_186(%var_184: Tensor[(15, 13, 11), int32], %var_185: Tensor[(15, 13, 11), int32]) -> (Tensor[(15, 13, 11), uint32],) {
  @func_182(%var_184, %var_185) /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_844(%var_762: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) {
  %500 = cast(%var_762, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %501 = reshape(%500, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %502 = @func_697(%501) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %503 = %502.3;
  %504 = cast(%503, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %505 = reshape(%504, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %506 = @func_697(%505) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %507 = %506.4;
  %508 = cast(%507, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %509 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%503, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 6), uint64] */, dtype="uint64") /* ty=Tensor[(16, 6), uint64] */;
  %513 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 6), uint64] */, dtype="uint64") /* ty=Tensor[(16, 6), uint64] */;
  %514 = reshape(%512, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %515 = reshape(%513, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %516 = @func_518(%514, %515) /* ty=Tensor[(4, 2, 12), float64] */;
  %517 = cast(%516, dtype="float64") /* ty=Tensor[(4, 2, 12), float64] */;
  %518 = sin(%517) /* ty=Tensor[(4, 2, 12), float64] */;
  %519 = cast(%516, dtype="bool") /* ty=Tensor[(4, 2, 12), bool] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%518, dtype="bool") /* ty=Tensor[(4, 2, 12), bool] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %523 = greater_equal(%521, %522) /* ty=Tensor[(4, 2, 12), bool] */;
  %524 = cast(%523, dtype="float64") /* ty=Tensor[(4, 2, 12), float64] */;
  %525 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %526 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %527 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %528 = less_equal(%510, %511) /* ty=Tensor[(15, 13, 11), bool] */;
  %529 = sinh(%524) /* ty=Tensor[(4, 2, 12), float64] */;
  (%525, %var_762, %526, %527, meta[relay.Constant][10] /* ty=Tensor[(16, 6), uint64] */, %528, %529)
}

def @func_20452() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint8]) {
  %541 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint8]) {
    %530 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
    %531 = @func_8766() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
    %532 = %531.0;
    %533 = @func_12780() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) */;
    %534 = %533.1;
    %535 = cast(%534, dtype="uint8") /* ty=Tensor[(14, 16, 5), uint8] */;
    %536 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
    %537 = cast(%532, dtype="uint8") /* ty=Tensor[(14, 16, 5), uint8] */;
    %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %539 = %530.1;
    %540 = logical_xor(%537, %538) /* ty=Tensor[(14, 16, 5), uint8] */;
    (%539, %540)
  };
  %541() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint8]) */
}

def @func_18904() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  @func_18902() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_18590() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(91), float32]) {
  %542 = @func_8808() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %543 = cast(meta[relay.Constant][11] /* ty=Tensor[(91), float32] */, dtype="float32") /* ty=Tensor[(91), float32] */;
  %544 = reshape(%543, newshape=[13, 7, 1]) /* ty=Tensor[(13, 7, 1), float32] */;
  %545 = @func_9551(%544) /* ty=(Tensor[(13, 7, 1), float32], Tensor[(14, 16, 5), float32]) */;
  %546 = %542.2;
  %547 = %545.1;
  (%546, %547, meta[relay.Constant][11] /* ty=Tensor[(91), float32] */)
}

def @func_22273() -> Tensor[(15, 13, 11), float32] {
  @func_22271() /* ty=Tensor[(15, 13, 11), float32] */
}

def @func_7870(%var_7868: Tensor[(4, 4, 4), float32], %var_7869: Tensor[(4, 4, 4), float32]) -> (Tensor[(4, 4, 4), int8],) {
  @func_7866(%var_7868, %var_7869) /* ty=(Tensor[(4, 4, 4), int8],) */
}

def @func_16254() -> (Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), float32]) {
  %552 = fn () -> (Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), float32]) {
    %548 = @func_15011() /* ty=(Tensor[(14, 16, 5), bool],) */;
    %549 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %550 = %548.0;
    %551 = %549.1;
    (%550, %551)
  };
  %552() /* ty=(Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), float32]) */
}

def @func_16345() -> Tensor[(96), uint64] {
  %553 = @func_12731() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) */;
  %553.0
}

def @func_13840() -> (Tensor[(96), uint64],) {
  %554 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %555 = %554.1;
  (%555,)
}

def @func_17256() -> Tensor[(15, 13, 11), uint32] {
  %556 = @func_8718() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %556.0
}

def @func_1085() -> Tensor[(14, 16, 5), float64] {
  @func_1083() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_2271() -> (Tensor[(15, 13, 11), uint32],) {
  %559 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %557 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %558 = %557.0;
    (%558,)
  };
  %559() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_16966() -> (Tensor[(14, 16, 5), float32],) {
  @func_16964() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_8635() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  @func_8633() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */
}

def @func_16752(%var_16751: Tensor[(400), uint16]) -> (Tensor[(14, 16, 5), float32], Tensor[(5, 10, 8), float64]) {
  %572 = fn (%var_16711: Tensor[(400), uint16]) -> (Tensor[(14, 16, 5), float32], Tensor[(5, 10, 8), float64]) {
    %560 = @func_9948() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
    %561 = cast(%var_16711, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %562 = reshape(%561, newshape=[5, 10, 8]) /* ty=Tensor[(5, 10, 8), uint16] */;
    %563 = @func_14760(%562) /* ty=Tensor[(5, 10, 8), uint16] */;
    %564 = cast(%var_16711, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
    %566 = cast(%563, dtype="uint16") /* ty=Tensor[(5, 10, 8), uint16] */;
    %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %568 = bitwise_xor(%566, %567) /* ty=Tensor[(5, 10, 8), uint16] */;
    %569 = cast(%568, dtype="float64") /* ty=Tensor[(5, 10, 8), float64] */;
    %570 = %560.2;
    %571 = sqrt(%569) /* ty=Tensor[(5, 10, 8), float64] */;
    (%570, %571)
  };
  %572(%var_16751) /* ty=(Tensor[(14, 16, 5), float32], Tensor[(5, 10, 8), float64]) */
}

def @func_699(%var_698: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
  %589 = fn (%var_683: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
    %573 = cast(%var_683, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %574 = cast(%var_683, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %575 = cast(%var_683, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %576 = reshape(%574, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
    %577 = reshape(%575, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
    %578 = @func_182(%576, %577) /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %579 = %578.0;
    %580 = cast(%579, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %581 = reshape(%573, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
    %582 = reshape(%580, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
    %583 = @func_182(%581, %582) /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %584 = cast(%579, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
    %585 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
    %586 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
    %587 = %583.0;
    %588 = log2(%584) /* ty=Tensor[(15, 13, 11), float32] */;
    (%585, %var_683, %586, %587, %588)
  };
  %589(%var_698) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */
}

def @func_12371() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  @func_12369() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */
}

def @func_18258(%var_18244: Tensor[(10, 15, 12), float64]) -> (Tensor[(10, 15, 12), float32],) {
  %590 = cast(%var_18244, dtype="float64") /* ty=Tensor[(10, 15, 12), float64] */;
  %591 = rsqrt(%590) /* ty=Tensor[(10, 15, 12), float64] */;
  %592 = cast(%591, dtype="float32") /* ty=Tensor[(10, 15, 12), float32] */;
  %593 = erf(%592) /* ty=Tensor[(10, 15, 12), float32] */;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(10, 15, 12), float32] */;
  %595 = log(%594) /* ty=Tensor[(10, 15, 12), float32] */;
  (%595,)
}

def @func_21592() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) {
  @func_21590() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */
}

def @func_23337() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %596 = @func_12318() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %597 = %596.0;
  %598 = cast(%597, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %599 = cast(%597, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %600 = reshape(%598, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %601 = reshape(%599, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %602 = @func_182(%600, %601) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %603 = @func_18024() /* ty=Tensor[(96), uint64] */;
  %604 = %602.0;
  (%603, %597, %604)
}

def @func_13842() -> (Tensor[(96), uint64],) {
  @func_13840() /* ty=(Tensor[(96), uint64],) */
}

def @func_2187() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) {
  @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */
}

def @func_20476() -> (Tensor[(14, 16, 5), float32],) {
  %605 = @func_10804() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) */;
  %606 = %605.1;
  (%606,)
}

def @func_16312(%var_16310: Tensor[(675, 2), float64]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 9, 10), float64], Tensor[(675, 2), float64]) {
  @func_16309(%var_16310) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 9, 10), float64], Tensor[(675, 2), float64]) */
}

def @func_18909() -> (Tensor[(16, 6), uint64], Tensor[(96), uint64]) {
  %607 = @func_16873() /* ty=(Tensor[(16, 6), uint64],) */;
  %608 = @func_18902() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %609 = %607.0;
  %610 = %608.0;
  (%609, %610)
}

def @func_6741() -> Tensor[(15, 13, 11), uint32] {
  @func_6739() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_22313() -> (Tensor[(2145), int32], Tensor[(14, 16, 5), bool]) {
  %615 = fn () -> (Tensor[(2145), int32], Tensor[(14, 16, 5), bool]) {
    %611 = @func_21780() /* ty=(Tensor[(2145), int32],) */;
    %612 = @func_15011() /* ty=(Tensor[(14, 16, 5), bool],) */;
    %613 = %611.0;
    %614 = %612.0;
    (%613, %614)
  };
  %615() /* ty=(Tensor[(2145), int32], Tensor[(14, 16, 5), bool]) */
}

def @func_10998() -> Tensor[(14, 16, 5), float64] {
  @func_10996() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_8596() -> Tensor[(15, 13, 11), int64] {
  %616 = @func_2429() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), int64]) */;
  %616.3
}

def @func_22480() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %621 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
    %617 = @func_1719() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %618 = @func_12229() /* ty=(Tensor[(14, 16, 5), float64],) */;
    %619 = %617.0;
    %620 = %618.0;
    (%619, %620)
  };
  %621() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_5466() -> Tensor[(16, 6), uint64] {
  @func_5297() /* ty=Tensor[(16, 6), uint64] */
}

def @func_12952(%var_12950: Tensor[(1120, 1), float64]) -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32], Tensor[(1120, 1), float64], Tensor[(14, 16, 5), float64]) {
  @func_12949(%var_12950) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32], Tensor[(1120, 1), float64], Tensor[(14, 16, 5), float64]) */
}

def @func_18829() -> Tensor[(14, 16, 5), float64] {
  %623 = fn () -> Tensor[(14, 16, 5), float64] {
    %622 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
    %622.1
  };
  %623() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_18526() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %627 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
    %624 = @func_17520() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) */;
    %625 = %624.2;
    %626 = @func_9623() /* ty=Tensor[(96), uint64] */;
    (%625, %626)
  };
  %627() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_4387() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) {
  @func_4385() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) */
}

def @func_6940() -> Tensor[(15, 13, 11), uint32] {
  @func_6938() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_10766() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %631 = fn () -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
    %628 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
    %629 = %628.0;
    %630 = @func_8197() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%629, %630)
  };
  %631() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */
}

def @func_1129(%var_1128: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %649 = fn (%var_1093: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
    %632 = cast(%var_1093, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %633 = reshape(%632, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %634 = @func_844(%633) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
    %635 = %634.5;
    %636 = cast(%635, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
    %637 = cast(%var_1093, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %638 = reshape(%637, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %639 = @func_697(%638) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
    %640 = %639.0;
    %641 = cast(%640, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
    %642 = cast(%635, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %643 = reshape(%641, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
    %644 = reshape(%642, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %645 = @func_1046(%643, %644) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
    %646 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
    %647 = exp(%636) /* ty=Tensor[(15, 13, 11), float32] */;
    %648 = %645.0;
    (%646, %var_1093, %647, %640, %648)
  };
  %649(%var_1128) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */
}

def @func_2629(%var_2628: Tensor[(14, 16, 5), float64]) -> (Tensor[(14, 16, 5), uint32],) {
  %657 = fn (%var_2618: Tensor[(14, 16, 5), float64]) -> (Tensor[(14, 16, 5), uint32],) {
    %650 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
    %651 = %650.0;
    %652 = cast(%var_2618, dtype="uint32") /* ty=Tensor[(14, 16, 5), uint32] */;
    %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
    %654 = cast(%651, dtype="uint32") /* ty=Tensor[(14, 16, 5), uint32] */;
    %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %656 = subtract(%654, %655) /* ty=Tensor[(14, 16, 5), uint32] */;
    (%656,)
  };
  %657(%var_2628) /* ty=(Tensor[(14, 16, 5), uint32],) */
}

def @func_20606() -> (Tensor[(2145), int32],) {
  %660 = fn () -> (Tensor[(2145), int32],) {
    %658 = @func_2429() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), int64]) */;
    %659 = %658.1;
    (%659,)
  };
  %660() /* ty=(Tensor[(2145), int32],) */
}

def @func_16531() -> (Tensor[(6, 2, 9), float32],) {
  %661 = @func_11851() /* ty=(Tensor[(6, 2, 9), bool],) */;
  %662 = %661.0;
  %663 = cast(%662, dtype="float32") /* ty=Tensor[(6, 2, 9), float32] */;
  %664 = log2(%663) /* ty=Tensor[(6, 2, 9), float32] */;
  (%664,)
}

def @func_21614() -> Tensor[(96), uint64] {
  %665 = @func_15660() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %665.0
}

def @func_21269() -> (Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float32]) {
  %672 = fn () -> (Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float32]) {
    %666 = @func_16228() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(2, 11, 7), int64]) */;
    %667 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %668 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
    %669 = %666.1;
    %670 = %667.1;
    %671 = %668.1;
    (%669, %670, %671)
  };
  %672() /* ty=(Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float32]) */
}

def @func_3822() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %673 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %674 = @func_2684() /* ty=(Tensor[(96), uint64],) */;
  %675 = %673.0;
  %676 = %674.0;
  (%675, %676)
}

def @func_847(%var_845: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) {
  @func_844(%var_845) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */
}

def @func_182(%var_138: Tensor[(15, 13, 11), int32], %var_139: Tensor[(15, 13, 11), int32]) -> (Tensor[(15, 13, 11), uint32],) {
  %677 = cast(%var_139, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %678 = shape_of(%var_138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%var_138, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %681 = bitwise_xor(%679, %680) /* ty=Tensor[(15, 13, 11), int32] */;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %683 = log10(%682) /* ty=Tensor[(15, 13, 11), float64] */;
  %684 = cast(%var_139, dtype="uint32") /* ty=Tensor[(15, 13, 11), uint32] */;
  %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%683, dtype="uint32") /* ty=Tensor[(15, 13, 11), uint32] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %688 = logical_xor(%686, %687) /* ty=Tensor[(15, 13, 11), uint32] */;
  (%688,)
}

def @func_2469() -> Tensor[(15, 13, 11), uint32] {
  %689 = fn () -> Tensor[(15, 13, 11), uint32] {
    @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */
  };
  %689() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_2108() -> (Tensor[(15, 13, 11), float32],) {
  %690 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %691 = %690.0;
  %692 = cast(%691, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
  %693 = rsqrt(%692) /* ty=Tensor[(15, 13, 11), float32] */;
  (%693,)
}

def @func_8718() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %694 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %695 = @func_5365() /* ty=Tensor[(15, 13, 11), uint32] */;
  %696 = @func_4522() /* ty=Tensor[(96), uint64] */;
  %697 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
  %698 = %694.0;
  (%695, %696, %697, %698)
}

def @func_7799(%var_7797: Tensor[(15, 9, 10), float64]) -> Tensor[(15, 9, 10), float64] {
  @func_7796(%var_7797) /* ty=Tensor[(15, 9, 10), float64] */
}

def @func_8633() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %699 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %700 = @func_6709() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %701 = %699.0;
  %702 = %700.0;
  (%701, %702)
}

def @func_15803() -> Tensor[(15, 13, 11), uint32] {
  %703 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %703.0
}

def @func_9551(%var_9522: Tensor[(13, 7, 1), float32]) -> (Tensor[(13, 7, 1), float32], Tensor[(14, 16, 5), float32]) {
  %704 = cast(%var_9522, dtype="float32") /* ty=Tensor[(13, 7, 1), float32] */;
  %705 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %706 = cosh(%704) /* ty=Tensor[(13, 7, 1), float32] */;
  %707 = %705.0;
  (%706, %707)
}

def @func_6363() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_10180() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %712 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
    %708 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
    %709 = @func_8886() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %710 = %708.1;
    %711 = %709.0;
    (%710, %711)
  };
  %712() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_20948() -> Tensor[(14, 16, 5), float32] {
  @func_20946() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_1518() -> Tensor[(14, 16, 5), float32] {
  @func_1516() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_5297() -> Tensor[(16, 6), uint64] {
  %713 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %713.1
}

def @func_670() -> Tensor[(14, 16, 5), float64] {
  %714 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 16, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %715 = tan(%714) /* ty=Tensor[(14, 16, 5), float64] */;
  %716 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 16, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %717 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%715, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%718, %719) /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_8926() -> Tensor[(14, 16, 5), float64] {
  @func_5273() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_11930() -> (Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %720 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %721 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %722 = @func_5666() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %723 = @func_4522() /* ty=Tensor[(96), uint64] */;
  %724 = %720.2;
  %725 = %721.2;
  %726 = %722.0;
  (%723, %724, %725, %726)
}

def @func_12864() -> (Tensor[(2145), bool], Tensor[(14, 16, 5), float64]) {
  @func_12862() /* ty=(Tensor[(2145), bool], Tensor[(14, 16, 5), float64]) */
}

def @func_4472() -> (Tensor[(96), uint64],) {
  %727 = @func_2684() /* ty=(Tensor[(96), uint64],) */;
  %728 = %727.0;
  (%728,)
}

def @func_5474() -> Tensor[(96), uint64] {
  %729 = @func_5356() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %729.0
}

def @func_13624() -> Tensor[(15, 13, 11), uint32] {
  %731 = fn () -> Tensor[(15, 13, 11), uint32] {
    %730 = @func_8718() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %730.0
  };
  %731() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_20292() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %732 = @func_18690() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %733 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %734 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %735 = %732.0;
  %736 = %733.0;
  %737 = @func_14127() /* ty=Tensor[(96), uint64] */;
  %738 = %734.1;
  (%735, %736, %737, %738)
}

def @func_9623() -> Tensor[(96), uint64] {
  %739 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
  %739.0
}

def @func_13293(%var_13291: Tensor[(2, 15, 12), uint16]) -> (Tensor[(2, 15, 12), uint16], Tensor[(12, 13, 13), float32], Tensor[(1014, 2), float32]) {
  @func_13290(%var_13291) /* ty=(Tensor[(2, 15, 12), uint16], Tensor[(12, 13, 13), float32], Tensor[(1014, 2), float32]) */
}

def @func_9128() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %740 = @func_6957() /* ty=Tensor[(15, 13, 11), uint32] */;
  %741 = @func_6957() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%740, %741)
}

def @func_20533() -> Tensor[(96), uint64] {
  @func_20531() /* ty=Tensor[(96), uint64] */
}

def @func_15851() -> (Tensor[(2145), int32],) {
  %743 = fn () -> (Tensor[(2145), int32],) {
    %742 = @func_3537() /* ty=Tensor[(2145), int32] */;
    (%742,)
  };
  %743() /* ty=(Tensor[(2145), int32],) */
}

def @func_7851(%var_7828: Tensor[(15, 13, 11), float64], %var_7843: Tensor[(11, 96), uint64]) -> (Tensor[(11, 96), uint64], Tensor[(18), float32], Tensor[(15, 13, 11), bool], Tensor[(11, 96), bool]) {
  %744 = @func_4385() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) */;
  %745 = %744.4;
  %746 = cast(%745, dtype="uint64") /* ty=Tensor[(1, 96), uint64] */;
  %747 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 96), uint64] */, dtype="uint64") /* ty=Tensor[(11, 96), uint64] */;
  %748 = cast(meta[relay.Constant][15] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %749 = reshape(%748, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
  %750 = @func_6435(%749) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) */;
  %751 = %750.1;
  %752 = cast(%var_7828, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%751, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %756 = cast(%var_7843, dtype="bool") /* ty=Tensor[(11, 96), bool] */;
  %757 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(11, 96), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %758 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 96), uint64] */, dtype="bool") /* ty=Tensor[(11, 96), bool] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %760 = bitwise_and(%746, %747) /* ty=Tensor[(11, 96), uint64] */;
  %761 = greater(%754, %755) /* ty=Tensor[(15, 13, 11), bool] */;
  %762 = less_equal(%758, %759) /* ty=Tensor[(11, 96), bool] */;
  (%760, meta[relay.Constant][15] /* ty=Tensor[(18), float32] */, %761, %762)
}

def @func_15745() -> (Tensor[(15, 13, 11), uint32],) {
  %763 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %764 = %763.0;
  (%764,)
}

def @func_14763(%var_14761: Tensor[(5, 10, 8), uint16]) -> Tensor[(5, 10, 8), uint16] {
  @func_14760(%var_14761) /* ty=Tensor[(5, 10, 8), uint16] */
}

def @func_5203() -> (Tensor[(96), uint64], Tensor[(96), uint64]) {
  @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */
}

def @func_19766() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32], Tensor[(810), int32]) {
  %772 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32], Tensor[(810), int32]) {
    %765 = cast(meta[relay.Constant][16] /* ty=Tensor[(810), int32] */, dtype="int32") /* ty=Tensor[(810), int32] */;
    %766 = cast(meta[relay.Constant][16] /* ty=Tensor[(810), int32] */, dtype="int32") /* ty=Tensor[(810), int32] */;
    %767 = reshape(%765, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int32] */;
    %768 = reshape(%766, newshape=[15, 6, 9]) /* ty=Tensor[(15, 6, 9), int32] */;
    %769 = @func_6341(%767, %768) /* ty=(Tensor[(15, 6, 9), int32], Tensor[(14, 16, 5), uint32], Tensor[(15, 13, 11), uint32]) */;
    %770 = @func_16133() /* ty=Tensor[(15, 13, 11), uint32] */;
    %771 = %769.1;
    (%770, %771, meta[relay.Constant][16] /* ty=Tensor[(810), int32] */)
  };
  %772() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32], Tensor[(810), int32]) */
}

def @func_6345(%var_6343: Tensor[(15, 6, 9), int32], %var_6344: Tensor[(15, 6, 9), int32]) -> (Tensor[(15, 6, 9), int32], Tensor[(14, 16, 5), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_6341(%var_6343, %var_6344) /* ty=(Tensor[(15, 6, 9), int32], Tensor[(14, 16, 5), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_15122(%var_15116: Tensor[(9, 13, 2), int8], %var_15117: Tensor[(9, 13, 2), int8]) -> (Tensor[(9, 13, 2), int8],) {
  %773 = cast(%var_15117, dtype="int8") /* ty=Tensor[(9, 13, 2), int8] */;
  %774 = shape_of(%var_15116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%var_15116, dtype="int8") /* ty=Tensor[(9, 13, 2), int8] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %777 = left_shift(%775, %776) /* ty=Tensor[(9, 13, 2), int8] */;
  (%777,)
}

def @func_11142() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) {
  %788 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) {
    %778 = @func_10179() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %779 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
    %780 = @func_6043() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
    %781 = cast(meta[relay.Constant][17] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
    %782 = reshape(%781, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
    %783 = @func_6435(%782) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) */;
    %784 = %778.1;
    %785 = %779.2;
    %786 = %780.2;
    %787 = %783.1;
    (%784, %785, %786, %787, meta[relay.Constant][17] /* ty=Tensor[(18), float32] */)
  };
  %788() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) */
}

def @func_5676() -> (Tensor[(11, 5, 7), float32],) {
  @func_5674() /* ty=(Tensor[(11, 5, 7), float32],) */
}

def @func_14383() -> (Tensor[(15, 13, 11), uint32],) {
  %789 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %790 = %789.0;
  (%790,)
}

def @func_3077() -> (Tensor[(14, 16, 5), float32],) {
  %795 = fn () -> (Tensor[(14, 16, 5), float32],) {
    %791 = @func_2994() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) */;
    %792 = %791.3;
    %793 = cast(%792, dtype="float32") /* ty=Tensor[(14, 16, 5), float32] */;
    %794 = sinh(%793) /* ty=Tensor[(14, 16, 5), float32] */;
    (%794,)
  };
  %795() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_7478() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */
}

def @func_14999(%var_14997: Tensor[(180), bool]) -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(180), bool], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_14996(%var_14997) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(180), bool], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_3133() -> Tensor[(14, 16, 5), float64] {
  %797 = fn () -> Tensor[(14, 16, 5), float64] {
    %796 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
    %796.0
  };
  %797() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_17228() -> Tensor[(14, 16, 5), float64] {
  @func_3132() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_12319() -> (Tensor[(15, 13, 11), uint32],) {
  %799 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %798 = @func_6739() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%798,)
  };
  %799() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_20232() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
  @func_20230() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */
}

def @func_14239() -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) {
  %802 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) {
    %800 = @func_10996() /* ty=Tensor[(14, 16, 5), float64] */;
    %801 = @func_5297() /* ty=Tensor[(16, 6), uint64] */;
    (%800, %801)
  };
  %802() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */
}

def @func_2686() -> (Tensor[(96), uint64],) {
  @func_2684() /* ty=(Tensor[(96), uint64],) */
}

def @func_7597() -> (Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(352), float32]) {
  %811 = fn () -> (Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(352), float32]) {
    %803 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
    %804 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %805 = cast(meta[relay.Constant][18] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
    %806 = reshape(%805, newshape=[176, 2]) /* ty=Tensor[(176, 2), float32] */;
    %807 = @func_6007(%806) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */;
    %808 = %803.0;
    %809 = %804.2;
    %810 = %807.0;
    (%808, %809, %810, meta[relay.Constant][18] /* ty=Tensor[(352), float32] */)
  };
  %811() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(352), float32]) */
}

def @func_15013() -> (Tensor[(14, 16, 5), bool],) {
  @func_15011() /* ty=(Tensor[(14, 16, 5), bool],) */
}

def @func_19869() -> Tensor[(14, 16, 5), float64] {
  @func_19867() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_16568() -> (Tensor[(14, 16, 5), float64],) {
  @func_16566() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_5940() -> (Tensor[(15, 13, 11), uint32],) {
  %812 = @func_5365() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%812,)
}

def @func_7740() -> Tensor[(15, 13, 11), uint32] {
  @func_7738() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_13580() -> (Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %813 = @func_4710() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %814 = %813.1;
  %815 = @func_9785() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%814, %815)
}

def @func_18346() -> (Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  %816 = @func_5273() /* ty=Tensor[(14, 16, 5), float64] */;
  %817 = @func_16345() /* ty=Tensor[(96), uint64] */;
  (%816, %817)
}

def @func_7374() -> (Tensor[(14, 16, 5), float32],) {
  %818 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %819 = %818.1;
  (%819,)
}

def @func_4474() -> (Tensor[(96), uint64],) {
  @func_4472() /* ty=(Tensor[(96), uint64],) */
}

def @func_6341(%var_6319: Tensor[(15, 6, 9), int32], %var_6320: Tensor[(15, 6, 9), int32]) -> (Tensor[(15, 6, 9), int32], Tensor[(14, 16, 5), uint32], Tensor[(15, 13, 11), uint32]) {
  %820 = cast(%var_6320, dtype="int32") /* ty=Tensor[(15, 6, 9), int32] */;
  %821 = shape_of(%var_6319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %822 = cast(%var_6319, dtype="int32") /* ty=Tensor[(15, 6, 9), int32] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %824 = @func_5802() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) */;
  %825 = minimum(%822, %823) /* ty=Tensor[(15, 6, 9), int32] */;
  %826 = %824.1;
  %827 = @func_3836() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%825, %826, %827)
}

def @func_9308(%var_9306: Tensor[(12, 13, 13), float32]) -> Tensor[(12, 13, 13), float32] {
  @func_9305(%var_9306) /* ty=Tensor[(12, 13, 13), float32] */
}

def @func_6959() -> Tensor[(15, 13, 11), uint32] {
  @func_6957() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_6361() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %828 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %829 = %828.0;
  %830 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  (%829, %830)
}

def @func_6656(%var_6654: Tensor[(13, 2, 10), uint8]) -> Tensor[(13, 2, 10), uint8] {
  @func_6653(%var_6654) /* ty=Tensor[(13, 2, 10), uint8] */
}

def @func_12732() -> (Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) {
  %841 = fn () -> (Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) {
    %831 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
    %832 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 64), float32] */, dtype="float32") /* ty=Tensor[(1, 64), float32] */;
    %833 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 64), float32] */, dtype="float32") /* ty=Tensor[(1, 64), float32] */;
    %834 = reshape(%832, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %835 = reshape(%833, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %836 = @func_7866(%834, %835) /* ty=(Tensor[(4, 4, 4), int8],) */;
    %837 = @func_2503() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
    %838 = %831.2;
    %839 = %836.0;
    %840 = %837.1;
    (%838, %839, meta[relay.Constant][19] /* ty=Tensor[(1, 64), float32] */, %840)
  };
  %841() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) */
}

def @func_22550() -> (Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) {
  @func_22548() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) */
}

def @func_17173() -> (Tensor[(15, 13, 11), uint32],) {
  %843 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %842 = @func_13981() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%842,)
  };
  %843() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_2871() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
  %849 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
    %844 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %845 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %846 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
    %847 = %844.0;
    %848 = %845.1;
    (%846, %847, %848)
  };
  %849() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */
}

def @func_6437(%var_6436: Tensor[(6, 3, 1), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) {
  %856 = fn (%var_6402: Tensor[(6, 3, 1), float32]) -> (Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) {
    %850 = cast(%var_6402, dtype="float32") /* ty=Tensor[(6, 3, 1), float32] */;
    %851 = @func_2503() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
    %852 = %851.1;
    %853 = cast(%852, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
    %854 = asinh(%850) /* ty=Tensor[(6, 3, 1), float32] */;
    %855 = erf(%853) /* ty=Tensor[(15, 13, 11), float64] */;
    (%854, %855)
  };
  %856(%var_6436) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) */
}

def @func_15894() -> (Tensor[(14, 16, 5), float64],) {
  @func_15892() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_3600() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) {
  %869 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) {
    %857 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %858 = @func_2684() /* ty=(Tensor[(96), uint64],) */;
    %859 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
    %860 = cast(%859, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
    %861 = %857.1;
    %862 = cast(%861, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %863 = reshape(%860, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
    %864 = reshape(%862, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %865 = @func_1046(%863, %864) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
    %866 = %858.0;
    %867 = %865.2;
    %868 = @func_1516() /* ty=Tensor[(14, 16, 5), float32] */;
    (%859, %861, %866, %867, %868)
  };
  %869() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */
}

def @func_912(%var_870: Tensor[(96), uint64]) -> (Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) {
  %870 = cast(%var_870, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %871 = cast(%var_870, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %872 = reshape(%870, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %873 = reshape(%871, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %874 = cast(%var_870, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %875 = @func_518(%872, %873) /* ty=Tensor[(4, 2, 12), float64] */;
  %876 = cast(%875, dtype="uint64") /* ty=Tensor[(4, 2, 12), uint64] */;
  %877 = reshape(%874, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %878 = reshape(%876, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %879 = cast(meta[relay.Constant][20] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %880 = reshape(%879, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %881 = @func_844(%880) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
  %882 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %883 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %884 = @func_518(%877, %878) /* ty=Tensor[(4, 2, 12), float64] */;
  %885 = %881.2;
  (%882, %875, %var_870, %883, %884, %885, meta[relay.Constant][20] /* ty=Tensor[(2145), int32] */)
}

def @func_19207() -> (Tensor[(14, 16, 5), float32],) {
  @func_19205() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_13981() -> Tensor[(15, 13, 11), uint32] {
  %886 = @func_13358() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %886.0
}

def @func_5264(%var_5261: uint32, %var_5262: Tensor[(15, 1, 16), uint32], %var_5263: Tensor[(2145), int32]) -> (Tensor[(1120), float64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 1, 16), float64], Tensor[(2145), uint32]) {
  @func_5259(%var_5261, %var_5262, %var_5263) /* ty=(Tensor[(1120), float64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 1, 16), float64], Tensor[(2145), uint32]) */
}

def @func_16818() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_16816() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_17105(%var_17104: Tensor[(12, 64), float64]) -> (Tensor[(2145), int32], Tensor[(?, 64), float64], Tensor[(12, 64), bool], Tensor[(6, 2, 15), bool], Tensor[(180), bool], Tensor[(2145), bool]) {
  %906 = fn (%var_17078: Tensor[(12, 64), float64]) -> (Tensor[(2145), int32], Tensor[(?, 64), float64], Tensor[(12, 64), bool], Tensor[(6, 2, 15), bool], Tensor[(180), bool], Tensor[(2145), bool]) {
    %887 = @func_15850() /* ty=(Tensor[(2145), int32],) */;
    %888 = @func_12731() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) */;
    %889 = %888.2;
    %890 = cast(%889, dtype="float64") /* ty=Tensor[(1, 64), float64] */;
    %891 = erf(%890) /* ty=Tensor[(1, 64), float64] */;
    %892 = cast(%889, dtype="float64") /* ty=Tensor[(1, 64), float64] */;
    %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(2), int32] */;
    %894 = cast(%891, dtype="float64") /* ty=Tensor[(1, 64), float64] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %896 = cast(%891, dtype="bool") /* ty=Tensor[(1, 64), bool] */;
    %897 = cast(%var_17078, dtype="bool") /* ty=Tensor[(12, 64), bool] */;
    %898 = cast(meta[relay.Constant][21] /* ty=Tensor[(180), bool] */, dtype="bool") /* ty=Tensor[(180), bool] */;
    %899 = reshape(%898, newshape=[180, 1]) /* ty=Tensor[(180, 1), bool] */;
    %900 = @func_9821(%899) /* ty=(Tensor[(14, 16, 5), float32], Tensor[(6, 2, 15), bool], Tensor[(180, 1), float64]) */;
    %901 = %887.0;
    %902 = floor_divide(%894, %895) /* ty=Tensor[(?, 64), float64] */;
    %903 = logical_and(%896, %897) /* ty=Tensor[(12, 64), bool] */;
    %904 = %900.1;
    %905 = @func_16262() /* ty=Tensor[(2145), bool] */;
    (%901, %902, %903, %904, meta[relay.Constant][21] /* ty=Tensor[(180), bool] */, %905)
  };
  %906(%var_17104) /* ty=(Tensor[(2145), int32], Tensor[(?, 64), float64], Tensor[(12, 64), bool], Tensor[(6, 2, 15), bool], Tensor[(180), bool], Tensor[(2145), bool]) */
}

def @func_8031(%var_8029: Tensor[(15, 13, 11), uint32]) -> (Tensor[(15, 13, 11), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_8028(%var_8029) /* ty=(Tensor[(15, 13, 11), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_15747() -> (Tensor[(15, 13, 11), uint32],) {
  @func_15745() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_18592() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(91), float32]) {
  @func_18590() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(91), float32]) */
}

def @func_21368() -> (Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) {
  @func_21366() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */
}

def @func_15954() -> (Tensor[(14, 16, 5), float32],) {
  %908 = fn () -> (Tensor[(14, 16, 5), float32],) {
    %907 = @func_11600() /* ty=Tensor[(14, 16, 5), float32] */;
    (%907,)
  };
  %908() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_14996(%var_14948: Tensor[(180), bool]) -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(180), bool], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %909 = @func_8808() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %910 = cast(%var_14948, dtype="bool") /* ty=Tensor[(180), bool] */;
  %911 = reshape(%910, newshape=[180, 1]) /* ty=Tensor[(180, 1), bool] */;
  %912 = @func_9821(%911) /* ty=(Tensor[(14, 16, 5), float32], Tensor[(6, 2, 15), bool], Tensor[(180, 1), float64]) */;
  %913 = %909.0;
  %914 = %912.0;
  %915 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  %916 = @func_14732() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%913, %914, %var_14948, %915, %916)
}

def @func_21882() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %917 = @func_9709() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
  %918 = @func_17869() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %919 = %917.1;
  %920 = %918.0;
  (%919, %920)
}

def @func_1046(%var_1016: Tensor[(14, 16, 5), float64], %var_1022: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) {
  %921 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %922 = cast(%var_1016, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%921, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %926 = cast(%var_1022, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %927 = cast(%var_1022, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %928 = reshape(%926, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %929 = reshape(%927, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
  %930 = @func_182(%928, %929) /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %931 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %932 = floor_divide(%924, %925) /* ty=Tensor[(14, 16, 5), float64] */;
  %933 = %930.0;
  %934 = %931.2;
  (%932, %933, %var_1022, %934)
}

def @func_21759() -> (Tensor[(16, 6), uint64], Tensor[(5, 7, 2), float64], Tensor[(70), float64], Tensor[(14, 16, 5), float64], Tensor[(260), uint8], Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  @func_21757() /* ty=(Tensor[(16, 6), uint64], Tensor[(5, 7, 2), float64], Tensor[(70), float64], Tensor[(14, 16, 5), float64], Tensor[(260), uint8], Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_3538() -> Tensor[(2145), int32] {
  %936 = fn () -> Tensor[(2145), int32] {
    %935 = @func_3337() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) */;
    %935.1
  };
  %936() /* ty=Tensor[(2145), int32] */
}

def @func_13100() -> (Tensor[(14, 16, 5), float64],) {
  %938 = fn () -> (Tensor[(14, 16, 5), float64],) {
    %937 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
    (%937,)
  };
  %938() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_1711() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %942 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
    %939 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
    %940 = %939.1;
    %941 = @func_1516() /* ty=Tensor[(14, 16, 5), float32] */;
    (%940, %941)
  };
  %942() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */
}

def @func_4385() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) {
  %943 = @func_3950() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %944 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %945 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %946 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 96), uint64] */, dtype="uint64") /* ty=Tensor[(1, 96), uint64] */;
  %947 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 96), uint64] */, dtype="uint64") /* ty=Tensor[(1, 96), uint64] */;
  %948 = reshape(%946, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %949 = reshape(%947, newshape=[4, 2, 12]) /* ty=Tensor[(4, 2, 12), uint64] */;
  %950 = %943.0;
  %951 = %944.1;
  %952 = %945.0;
  %953 = @func_518(%948, %949) /* ty=Tensor[(4, 2, 12), float64] */;
  (%950, %951, %952, %953, meta[relay.Constant][22] /* ty=Tensor[(1, 96), uint64] */)
}

def @func_14474() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %959 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
    %954 = @func_8886() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %955 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
    %956 = %954.0;
    %957 = @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */;
    %958 = %955.3;
    (%956, %957, %958)
  };
  %959() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_16309(%var_16304: Tensor[(675, 2), float64]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 9, 10), float64], Tensor[(675, 2), float64]) {
  %960 = @func_4295() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %961 = cast(%var_16304, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %962 = reshape(%961, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %963 = %960.1;
  %964 = @func_7796(%962) /* ty=Tensor[(15, 9, 10), float64] */;
  (%963, %964, %var_16304)
}

def @func_13045() -> (Tensor[(14, 16, 5), float64],) {
  %967 = fn () -> (Tensor[(14, 16, 5), float64],) {
    %965 = @func_4691() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */;
    %966 = %965.1;
    (%966,)
  };
  %967() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_22847() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %968 = @func_21882() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %969 = @func_7631() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %970 = @func_20292() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %971 = @func_8886() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %972 = @func_12780() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) */;
  %973 = %968.0;
  %974 = %969.0;
  %975 = %970.3;
  %976 = %971.0;
  %977 = %972.0;
  (%973, %974, %975, %976, %977)
}

def @func_5773(%var_5771: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  @func_5770(%var_5771) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */
}

def @func_3736() -> (Tensor[(15, 13, 11), uint32],) {
  %978 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %979 = %978.0;
  (%979,)
}

def @func_2662() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) {
  @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */
}

def @func_16816() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %980 = @func_14383() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %981 = @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */;
  %982 = %980.0;
  (%981, %982)
}

def @func_13872() -> Tensor[(15, 13, 11), uint32] {
  %983 = fn () -> Tensor[(15, 13, 11), uint32] {
    @func_7738() /* ty=Tensor[(15, 13, 11), uint32] */
  };
  %983() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_11214() -> (Tensor[(15, 13, 11), bool],) {
  @func_11212() /* ty=(Tensor[(15, 13, 11), bool],) */
}

def @func_22849() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  @func_22847() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */
}

def @func_20683() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %988 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
    %984 = @func_15479() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %985 = @func_18346() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
    %986 = %984.0;
    %987 = %985.1;
    (%986, %987)
  };
  %988() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_12417() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(2145), int32]) {
  @func_12415() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(2145), int32]) */
}

def @func_16347() -> Tensor[(96), uint64] {
  @func_16345() /* ty=Tensor[(96), uint64] */
}

def @func_20847() -> (Tensor[(96), uint64], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) {
  @func_20845() /* ty=(Tensor[(96), uint64], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) */
}

def @func_6088() -> Tensor[(15, 13, 11), float32] {
  %992 = fn () -> Tensor[(15, 13, 11), float32] {
    %989 = @func_4162() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %990 = %989.0;
    %991 = cast(%990, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
    asin(%991) /* ty=Tensor[(15, 13, 11), float32] */
  };
  %992() /* ty=Tensor[(15, 13, 11), float32] */
}

def @func_6653(%var_6648: Tensor[(13, 2, 10), uint8]) -> Tensor[(13, 2, 10), uint8] {
  %993 = cast(%var_6648, dtype="uint8") /* ty=Tensor[(13, 2, 10), uint8] */;
  %994 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(13, 2, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 2, 10), uint8] */, dtype="uint8") /* ty=Tensor[(13, 2, 10), uint8] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%995, %996) /* ty=Tensor[(13, 2, 10), uint8] */
}

def @func_7902(%var_7899: Tensor[(15, 4, 13), float64], %var_7900: Tensor[(15, 4, 13), float64], %var_7901: Tensor[(64), float32]) -> (Tensor[(15, 4, 13), bool], Tensor[(4, 4, 4), int8], Tensor[(64), float32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64]) {
  %1014 = fn (%var_7872: Tensor[(15, 4, 13), float64], %var_7875: Tensor[(15, 4, 13), float64], %var_7885: Tensor[(64), float32]) -> (Tensor[(15, 4, 13), bool], Tensor[(4, 4, 4), int8], Tensor[(64), float32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64]) {
    %997 = cast(%var_7872, dtype="float64") /* ty=Tensor[(15, 4, 13), float64] */;
    %998 = asin(%997) /* ty=Tensor[(15, 4, 13), float64] */;
    %999 = cast(%var_7875, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
    %1000 = shape_of(%998, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1001 = cast(%998, dtype="bool") /* ty=Tensor[(15, 4, 13), bool] */;
    %1002 = dyn.reshape(%999, %1000, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1003 = cast(%var_7885, dtype="float32") /* ty=Tensor[(64), float32] */;
    %1004 = cast(%var_7885, dtype="float32") /* ty=Tensor[(64), float32] */;
    %1005 = reshape(%1003, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %1006 = reshape(%1004, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %1007 = @func_7866(%1005, %1006) /* ty=(Tensor[(4, 4, 4), int8],) */;
    %1008 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
    %1009 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %1010 = logical_or(%1001, %1002) /* ty=Tensor[(15, 4, 13), bool] */;
    %1011 = %1007.0;
    %1012 = %1008.0;
    %1013 = %1009.0;
    (%1010, %1011, %var_7885, %1012, %1013)
  };
  %1014(%var_7899, %var_7900, %var_7901) /* ty=(Tensor[(15, 4, 13), bool], Tensor[(4, 4, 4), int8], Tensor[(64), float32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64]) */
}

def @func_13290(%var_13281: Tensor[(2, 15, 12), uint16]) -> (Tensor[(2, 15, 12), uint16], Tensor[(12, 13, 13), float32], Tensor[(1014, 2), float32]) {
  %1015 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 15, 12), uint16] */, dtype="uint16") /* ty=Tensor[(2, 15, 12), uint16] */;
  %1016 = shape_of(%var_13281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%var_13281, dtype="uint16") /* ty=Tensor[(2, 15, 12), uint16] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1019 = cast(meta[relay.Constant][25] /* ty=Tensor[(1014, 2), float32] */, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %1020 = reshape(%1019, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float32] */;
  %1021 = right_shift(%1017, %1018) /* ty=Tensor[(2, 15, 12), uint16] */;
  %1022 = @func_9305(%1020) /* ty=Tensor[(12, 13, 13), float32] */;
  (%1021, %1022, meta[relay.Constant][25] /* ty=Tensor[(1014, 2), float32] */)
}

def @func_10255() -> Tensor[(14, 16, 5), float32] {
  %1024 = fn () -> Tensor[(14, 16, 5), float32] {
    %1023 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
    %1023.2
  };
  %1024() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_5319() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %1025 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1026 = %1025.1;
  %1027 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1026, %1027)
}

def @func_10626() -> (Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) {
  %1037 = fn () -> (Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) {
    %1028 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %1029 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
    %1030 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 2145), int32] */, dtype="int32") /* ty=Tensor[(1, 2145), int32] */;
    %1031 = reshape(%1030, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %1032 = @func_1127(%1031) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
    %1033 = @func_5097() /* ty=Tensor[(96), uint64] */;
    %1034 = %1028.1;
    %1035 = %1029.0;
    %1036 = %1032.4;
    (%1033, %1034, %1035, %1036, meta[relay.Constant][26] /* ty=Tensor[(1, 2145), int32] */)
  };
  %1037() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) */
}

def @func_20793() -> (Tensor[(15, 13, 11), uint32],) {
  %1039 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %1038 = @func_7738() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_13893() -> Tensor[(4, 4, 4), int8] {
  %1040 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
  %1040.1
}

def @func_5607() -> (Tensor[(96), uint64],) {
  %1043 = fn () -> (Tensor[(96), uint64],) {
    %1041 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
    %1042 = %1041.1;
    (%1042,)
  };
  %1043() /* ty=(Tensor[(96), uint64],) */
}

def @func_8767() -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) {
  %1048 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) {
    %1044 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
    %1045 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
    %1046 = %1044.0;
    %1047 = %1045.1;
    (%1046, %1047)
  };
  %1048() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */
}

def @func_1586() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %1049 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1050 = cast(%1049, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1051 = reshape(%1050, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1052 = @func_697(%1051) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %1053 = %1052.2;
  %1054 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1049, %1053, %1054)
}

def @func_12446() -> (Tensor[(15, 13, 11), uint32],) {
  %1055 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1056 = %1055.1;
  (%1056,)
}

def @func_6508() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) {
  %1061 = fn () -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) {
    %1057 = @func_3027() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
    %1058 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %1059 = %1057.0;
    %1060 = %1058.1;
    (%1059, %1060)
  };
  %1061() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */
}

def @func_13350(%var_13348: Tensor[(4, 5, 6), bool]) -> (Tensor[(4, 5, 6), bool],) {
  @func_13347(%var_13348) /* ty=(Tensor[(4, 5, 6), bool],) */
}

def @func_20116() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) {
  %1065 = fn () -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) {
    %1062 = @func_2220() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
    %1063 = @func_5097() /* ty=Tensor[(96), uint64] */;
    %1064 = %1062.0;
    (%1063, %1064)
  };
  %1065() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */
}

def @func_11966() -> (Tensor[(15, 13, 11), uint32],) {
  %1068 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %1066 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
    %1067 = %1066.1;
    (%1067,)
  };
  %1068() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_13017() -> (Tensor[(14, 16, 5), float64],) {
  @func_13015() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_16964() -> (Tensor[(14, 16, 5), float32],) {
  %1069 = @func_9905() /* ty=Tensor[(14, 16, 5), float32] */;
  (%1069,)
}

def @func_15892() -> (Tensor[(14, 16, 5), float64],) {
  %1070 = @func_10996() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1070,)
}

def @func_17258() -> Tensor[(15, 13, 11), uint32] {
  @func_17256() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_13126() -> (Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) {
  @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */
}

def @func_18314() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) {
  %1071 = @func_15990() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1072 = cast(meta[relay.Constant][27] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1073 = reshape(%1072, newshape=[143, 15]) /* ty=Tensor[(143, 15), int32] */;
  %1074 = @func_13451(%1073) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(143, 15), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1075 = @func_12415() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(2145), int32]) */;
  %1076 = %1071.1;
  %1077 = %1074.0;
  %1078 = %1075.2;
  (%1076, %1077, meta[relay.Constant][27] /* ty=Tensor[(2145), int32] */, %1078)
}

def @func_5394() -> Tensor[(15, 13, 11), uint32] {
  @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_5468() -> Tensor[(16, 6), uint64] {
  @func_5466() /* ty=Tensor[(16, 6), uint64] */
}

def @func_9078() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %1082 = fn () -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
    %1079 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
    %1080 = @func_4522() /* ty=Tensor[(96), uint64] */;
    %1081 = %1079.0;
    (%1080, %1081)
  };
  %1082() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */
}

def @func_6153() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %1083 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
  %1084 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1083, %1084)
}

def @func_18024() -> Tensor[(96), uint64] {
  @func_5097() /* ty=Tensor[(96), uint64] */
}

def @func_22022(%var_22020: Tensor[(8, 12, 8), float32]) -> (Tensor[(8, 12, 8), float32], Tensor[(96), uint64]) {
  @func_22019(%var_22020) /* ty=(Tensor[(8, 12, 8), float32], Tensor[(96), uint64]) */
}

def @func_5396() -> Tensor[(15, 13, 11), uint32] {
  @func_5394() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_23121() -> (Tensor[(96), uint64],) {
  %1087 = fn () -> (Tensor[(96), uint64],) {
    %1085 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
    %1086 = %1085.1;
    (%1086,)
  };
  %1087() /* ty=(Tensor[(96), uint64],) */
}

def @func_4711() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
  %1091 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
    %1088 = @func_3076() /* ty=(Tensor[(14, 16, 5), float32],) */;
    %1089 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
    %1090 = %1088.0;
    (%1089, %1090)
  };
  %1091() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */
}

def @func_10953(%var_10952: Tensor[(176, 2), float32]) -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) {
  %1109 = fn (%var_10927: Tensor[(176, 2), float32]) -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) {
    %1092 = @func_8633() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
    %1093 = @func_7245() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %1094 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %1095 = @func_10547() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
    %1096 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
    %1097 = @func_5319() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %1098 = cast(%var_10927, dtype="float32") /* ty=Tensor[(176, 2), float32] */;
    %1099 = reshape(%1098, newshape=[176, 2]) /* ty=Tensor[(176, 2), float32] */;
    %1100 = @func_6007(%1099) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */;
    %1101 = %1092.0;
    %1102 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
    %1103 = %1093.3;
    %1104 = %1094.0;
    %1105 = %1095.0;
    %1106 = %1096.0;
    %1107 = %1097.1;
    %1108 = %1100.1;
    (%1101, %1102, %1103, %1104, %1105, %1106, %1107, %1108, %var_10927)
  };
  %1109(%var_10952) /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */
}

def @func_18988(%var_18986: Tensor[(5, 1, 5), int64]) -> (Tensor[(96), uint64], Tensor[(5, 1, 5), float64]) {
  @func_18985(%var_18986) /* ty=(Tensor[(96), uint64], Tensor[(5, 1, 5), float64]) */
}

def @func_3337() -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) {
  %1110 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %1111 = cast(meta[relay.Constant][28] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1112 = reshape(%1111, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1113 = @func_697(%1112) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %1114 = %1110.1;
  %1115 = %1113.1;
  (%1114, %1115, meta[relay.Constant][28] /* ty=Tensor[(2145), int32] */)
}

def @func_12538() -> (Tensor[(6, 2, 9), bool], Tensor[(96), uint64]) {
  %1116 = @func_11851() /* ty=(Tensor[(6, 2, 9), bool],) */;
  %1117 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1118 = %1116.0;
  %1119 = %1117.0;
  (%1118, %1119)
}

def @func_672() -> Tensor[(14, 16, 5), float64] {
  @func_670() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_15081(%var_15080: Tensor[(4, 11, 2), int32]) -> (Tensor[(4, 11, 2), int32], Tensor[(4, ?, 2), bool]) {
  %1130 = fn (%var_15042: Tensor[(4, 11, 2), int32]) -> (Tensor[(4, 11, 2), int32], Tensor[(4, ?, 2), bool]) {
    %1120 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 1, 2), int32] */, dtype="int32") /* ty=Tensor[(4, 1, 2), int32] */;
    %1121 = cast(%var_15042, dtype="int32") /* ty=Tensor[(4, 11, 2), int32] */;
    %1122 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 1, 2), int32] */, dtype="float64") /* ty=Tensor[(4, 1, 2), float64] */;
    %1123 = erf(%1122) /* ty=Tensor[(4, 1, 2), float64] */;
    %1124 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 1, 2), int32] */, dtype="bool") /* ty=Tensor[(4, 1, 2), bool] */;
    %1125 = shape_of(%1123, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1126 = cast(%1123, dtype="bool") /* ty=Tensor[(4, 1, 2), bool] */;
    %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1128 = logical_xor(%1120, %1121) /* ty=Tensor[(4, 11, 2), int32] */;
    %1129 = less_equal(%1126, %1127) /* ty=Tensor[(4, ?, 2), bool] */;
    (%1128, %1129)
  };
  %1130(%var_15080) /* ty=(Tensor[(4, 11, 2), int32], Tensor[(4, ?, 2), bool]) */
}

def @func_6308(%var_6287: Tensor[(4, 15, 8), float32]) -> Tensor[(4, 15, 8), float32] {
  %1131 = cast(%var_6287, dtype="float32") /* ty=Tensor[(4, 15, 8), float32] */;
  tan(%1131) /* ty=Tensor[(4, 15, 8), float32] */
}

def @func_9863() -> (Tensor[(15, 13, 11), uint32],) {
  @func_9861() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_3274() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %1136 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
    %1132 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
    %1133 = @func_3027() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
    %1134 = %1132.0;
    %1135 = %1133.0;
    (%1134, %1135)
  };
  %1136() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */
}

def @func_14805() -> Tensor[(15, 13, 11), uint32] {
  %1138 = fn () -> Tensor[(15, 13, 11), uint32] {
    %1137 = @func_6809() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1137.0
  };
  %1138() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_2996() -> (Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) {
  @func_2994() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) */
}

def @func_7631() -> (Tensor[(15, 13, 11), uint32],) {
  %1139 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1139,)
}

def @func_18467() -> Tensor[(96), uint64] {
  %1140 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1140.1
}

def @func_22223() -> Tensor[(15, 13, 11), uint32] {
  @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_17959(%var_17957: Tensor[(56), float32]) -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(1, 7, 8), float32], Tensor[(56), float32]) {
  @func_17956(%var_17957) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(1, 7, 8), float32], Tensor[(56), float32]) */
}

def @func_19043() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(2, 32), float64]) {
  %1141 = cast(meta[relay.Constant][30] /* ty=Tensor[(224), int8] */, dtype="int8") /* ty=Tensor[(224), int8] */;
  %1142 = reshape(%1141, newshape=[224]) /* ty=Tensor[(224), int8] */;
  %1143 = @func_7536(%1142) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(7, 8, 4), int8], Tensor[(224), int8], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1144 = @func_3439() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1145 = %1143.3;
  %1146 = @func_13956() /* ty=Tensor[(2, 32), float64] */;
  (%1144, %1145, meta[relay.Constant][30] /* ty=Tensor[(224), int8] */, %1146)
}

def @func_6739() -> Tensor[(15, 13, 11), uint32] {
  %1147 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1147.1
}

def @func_9644() -> Tensor[(14, 16, 5), float64] {
  @func_1083() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_3516(%var_3515: Tensor[(96), uint64]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(96), uint64]) {
  %1160 = fn (%var_3510: Tensor[(96), uint64]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(96), uint64]) {
    %1148 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
    %1149 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %1150 = %1149.0;
    %1151 = cast(%1150, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %1152 = reshape(%1151, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %1153 = @func_1549(%1152) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), int32]) */;
    %1154 = cast(%var_3510, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %1155 = reshape(%1154, newshape=[96]) /* ty=Tensor[(96), uint64] */;
    %1156 = @func_912(%1155) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
    %1157 = %1148.2;
    %1158 = %1153.2;
    %1159 = %1156.2;
    (%1157, %1150, %1158, %1159, %var_3510)
  };
  %1160(%var_3515) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(96), uint64]) */
}

def @func_9440() -> (Tensor[(2145), bool], Tensor[(14, 16, 5), float32]) {
  %1161 = @func_3337() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1162 = %1161.2;
  %1163 = cast(meta[relay.Constant][31] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1164 = shape_of(%1162, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1165 = cast(%1162, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1167 = subtract(%1165, %1166) /* ty=Tensor[(2145), int32] */;
  %1168 = cast(%1167, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1169 = shape_of(%1162, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1170 = cast(%1162, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1172 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1173 = logical_and(%1170, %1171) /* ty=Tensor[(2145), bool] */;
  %1174 = %1172.0;
  (%1173, %1174)
}

def @func_13549() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1180 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
    %1175 = @func_5911() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1176 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
    %1177 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
    %1178 = %1175.0;
    %1179 = %1176.1;
    (%1177, %1178, %1179)
  };
  %1180() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_7536(%var_7509: Tensor[(224), int8]) -> (Tensor[(15, 13, 11), uint32], Tensor[(7, 8, 4), int8], Tensor[(224), int8], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %1181 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1182 = cast(%var_7509, dtype="int8") /* ty=Tensor[(224), int8] */;
  %1183 = reshape(%1182, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int8] */;
  %1184 = @func_2577(%1183) /* ty=(Tensor[(7, 8, 4), int8], Tensor[(15, 13, 11), uint32]) */;
  %1185 = @func_7425() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1186 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1187 = %1181.0;
  %1188 = %1184.0;
  %1189 = %1185.0;
  %1190 = @func_5425() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1191 = %1186.0;
  (%1187, %1188, %var_7509, %1189, %1190, %1191)
}

def @func_20190(%var_20185: Tensor[(4, 7, 14), int64], %var_20186: Tensor[(4, 7, 14), int64]) -> (Tensor[(4, 7, 14), int64],) {
  %1192 = cast(%var_20186, dtype="int64") /* ty=Tensor[(4, 7, 14), int64] */;
  %1193 = shape_of(%var_20185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1194 = cast(%var_20185, dtype="int64") /* ty=Tensor[(4, 7, 14), int64] */;
  %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1196 = left_shift(%1194, %1195) /* ty=Tensor[(4, 7, 14), int64] */;
  (%1196,)
}

def @func_21229() -> Tensor[(15, 13, 11), uint32] {
  @func_21227() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_7796(%var_7793: Tensor[(15, 9, 10), float64]) -> Tensor[(15, 9, 10), float64] {
  %1197 = cast(%var_7793, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  log(%1197) /* ty=Tensor[(15, 9, 10), float64] */
}

def @func_12540() -> (Tensor[(6, 2, 9), bool], Tensor[(96), uint64]) {
  @func_12538() /* ty=(Tensor[(6, 2, 9), bool], Tensor[(96), uint64]) */
}

def @func_3908(%var_3891: Tensor[(11, 2, 16), float32]) -> Tensor[(11, 2, 16), float32] {
  %1198 = cast(%var_3891, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %1199 = erf(%1198) /* ty=Tensor[(11, 2, 16), float32] */;
  %1200 = cast(%1199, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  asin(%1200) /* ty=Tensor[(11, 2, 16), float32] */
}

def @func_14219() -> Tensor[(14, 16, 5), float32] {
  @func_14217() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_14760(%var_14750: Tensor[(5, 10, 8), uint16]) -> Tensor[(5, 10, 8), uint16] {
  %1201 = cast(meta[relay.Constant][32] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1202 = cast(%var_14750, dtype="uint16") /* ty=Tensor[(5, 10, 8), uint16] */;
  bitwise_or(%1201, %1202) /* ty=Tensor[(5, 10, 8), uint16] */
}

def @func_6155() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  @func_6153() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */
}

def @func_6710() -> (Tensor[(15, 13, 11), uint32],) {
  %1204 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %1203 = @func_5394() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%1203,)
  };
  %1204() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_10270() -> (Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) {
  %1208 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) {
    %1205 = @func_8394() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
    %1206 = @func_9215() /* ty=Tensor[(15, 13, 11), uint32] */;
    %1207 = %1205.2;
    (%1206, %1207)
  };
  %1208() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) */
}

def @func_20946() -> Tensor[(14, 16, 5), float32] {
  @func_11600() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_8517() -> Tensor[(14, 16, 5), float64] {
  %1210 = fn () -> Tensor[(14, 16, 5), float64] {
    %1209 = @func_6361() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %1209.1
  };
  %1210() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_9824(%var_9822: Tensor[(180, 1), bool]) -> (Tensor[(14, 16, 5), float32], Tensor[(6, 2, 15), bool], Tensor[(180, 1), float64]) {
  @func_9821(%var_9822) /* ty=(Tensor[(14, 16, 5), float32], Tensor[(6, 2, 15), bool], Tensor[(180, 1), float64]) */
}

def @func_20372(%var_20347: Tensor[(16, 10, 10), int32], %var_20348: Tensor[(16, 10, 10), int32]) -> Tensor[(16, 10, 10), bool] {
  %1211 = cast(%var_20348, dtype="bool") /* ty=Tensor[(16, 10, 10), bool] */;
  %1212 = shape_of(%var_20347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1213 = cast(%var_20347, dtype="bool") /* ty=Tensor[(16, 10, 10), bool] */;
  %1214 = dyn.reshape(%1211, %1212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1213, %1214) /* ty=Tensor[(16, 10, 10), bool] */
}

def @func_12299() -> (Tensor[(15, 13, 11), uint32], Tensor[(13, 7, 1), float32], Tensor[(13, 7), float32], Tensor[(15, 13, 11), uint32]) {
  %1215 = @func_10765() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1216 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 7), float32] */, dtype="float32") /* ty=Tensor[(13, 7), float32] */;
  %1217 = reshape(%1216, newshape=[13, 7, 1]) /* ty=Tensor[(13, 7, 1), float32] */;
  %1218 = @func_9551(%1217) /* ty=(Tensor[(13, 7, 1), float32], Tensor[(14, 16, 5), float32]) */;
  %1219 = @func_9128() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1220 = %1215.1;
  %1221 = %1218.0;
  %1222 = %1219.1;
  (%1220, %1221, meta[relay.Constant][33] /* ty=Tensor[(13, 7), float32] */, %1222)
}

def @func_2915() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %1227 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
    %1223 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %1224 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %1225 = %1223.0;
    %1226 = %1224.3;
    (%1225, %1226)
  };
  %1227() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_18348() -> (Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) {
  @func_18346() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */
}

def @func_9341() -> Tensor[(96), uint64] {
  %1229 = fn () -> Tensor[(96), uint64] {
    %1228 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
    %1228.0
  };
  %1229() /* ty=Tensor[(96), uint64] */
}

def @func_12023() -> (Tensor[(15, 13, 11), uint32],) {
  @func_12021() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_20574() -> (Tensor[(96), uint64],) {
  %1232 = fn () -> (Tensor[(96), uint64],) {
    %1230 = @func_9036() /* ty=(Tensor[(96), uint64],) */;
    %1231 = %1230.0;
    (%1231,)
  };
  %1232() /* ty=(Tensor[(96), uint64],) */
}

def @func_5273() -> Tensor[(14, 16, 5), float64] {
  %1233 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1233.3
}

def @func_9949() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
  %1240 = fn () -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
    %1234 = @func_3027() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
    %1235 = @func_2522() /* ty=(Tensor[(14, 16, 5), float64],) */;
    %1236 = @func_8997() /* ty=(Tensor[(14, 16, 5), float32],) */;
    %1237 = %1234.0;
    %1238 = %1235.0;
    %1239 = %1236.0;
    (%1237, %1238, %1239)
  };
  %1240() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */
}

def @func_18985(%var_18965: Tensor[(5, 1, 5), int64]) -> (Tensor[(96), uint64], Tensor[(5, 1, 5), float64]) {
  %1241 = @func_10547() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1242 = cast(6 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %1243 = cast(%var_18965, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
  %1244 = equal(%1242, %1243) /* ty=Tensor[(5, 1, 5), bool] */;
  %1245 = cast(%1244, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %1246 = %1241.2;
  %1247 = log10(%1245) /* ty=Tensor[(5, 1, 5), float64] */;
  (%1246, %1247)
}

def @func_20194(%var_20192: Tensor[(4, 7, 14), int64], %var_20193: Tensor[(4, 7, 14), int64]) -> (Tensor[(4, 7, 14), int64],) {
  @func_20190(%var_20192, %var_20193) /* ty=(Tensor[(4, 7, 14), int64],) */
}

def @func_11047() -> (Tensor[(14, 16, 5), float32],) {
  %1250 = fn () -> (Tensor[(14, 16, 5), float32],) {
    %1248 = @func_2087() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %1249 = %1248.1;
    (%1249,)
  };
  %1250() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_22076() -> (Tensor[(6, 2, 9), bool],) {
  %1251 = @func_11851() /* ty=(Tensor[(6, 2, 9), bool],) */;
  %1252 = %1251.0;
  (%1252,)
}

def @func_9906() -> Tensor[(14, 16, 5), float32] {
  %1253 = fn () -> Tensor[(14, 16, 5), float32] {
    @func_1516() /* ty=Tensor[(14, 16, 5), float32] */
  };
  %1253() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_11601() -> Tensor[(14, 16, 5), float32] {
  %1255 = fn () -> Tensor[(14, 16, 5), float32] {
    %1254 = @func_5802() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) */;
    %1254.0
  };
  %1255() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_20028() -> (Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(14, 16, 5), float64]) {
  %1256 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %1257 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1258 = @func_17007() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1259 = @func_12229() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1260 = %1256.1;
  %1261 = %1257.0;
  %1262 = %1258.2;
  %1263 = %1259.0;
  (%1260, %1261, %1262, %1263)
}

def @func_20478() -> (Tensor[(14, 16, 5), float32],) {
  @func_20476() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_22030() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %1267 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
    %1264 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
    %1265 = @func_15516() /* ty=Tensor[(15, 13, 11), uint32] */;
    %1266 = %1264.3;
    (%1265, %1266)
  };
  %1267() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_5358() -> (Tensor[(96), uint64], Tensor[(96), uint64]) {
  @func_5356() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */
}

def @func_13275() -> (Tensor[(96), uint64],) {
  @func_13273() /* ty=(Tensor[(96), uint64],) */
}

def @func_2994() -> (Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) {
  %1268 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1269 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %1270 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %1271 = @func_1290() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1272 = %1268.3;
  %1273 = %1269.2;
  %1274 = %1270.1;
  %1275 = %1271.1;
  (%1272, %1273, %1274, %1275)
}

def @func_1183() -> (Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) {
  %1286 = fn () -> (Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) {
    %1276 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
    %1277 = %1276.2;
    %1278 = cast(%1277, dtype="float64") /* ty=Tensor[(2145), float64] */;
    %1279 = log2(%1278) /* ty=Tensor[(2145), float64] */;
    %1280 = cast(%1279, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %1281 = cast(%1279, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %1282 = reshape(%1280, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
    %1283 = reshape(%1281, newshape=[15, 13, 11]) /* ty=Tensor[(15, 13, 11), int32] */;
    %1284 = @func_182(%1282, %1283) /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1285 = %1284.0;
    (%1279, %1285)
  };
  %1286() /* ty=(Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) */
}

def @func_20230() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
  %1287 = @func_6043() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %1288 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %1289 = %1287.2;
  (%1288, %1289)
}

def @func_15291() -> (Tensor[(14, 16, 5), float64], Tensor[(2, 11, 7), int64], Tensor[(154), int64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  @func_15289() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2, 11, 7), int64], Tensor[(154), int64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */
}

def @func_18645() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) {
  %1290 = @func_15953() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1291 = @func_14217() /* ty=Tensor[(14, 16, 5), float32] */;
  %1292 = %1290.0;
  (%1291, %1292)
}

def @func_9485() -> (Tensor[(96), uint64],) {
  %1293 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
  %1294 = %1293.0;
  (%1294,)
}

def @func_18795(%var_18762: Tensor[(3, 60), bool]) -> (Tensor[(15, 13, 11), uint32], Tensor[(6, 2, 15), bool], Tensor[(3, 60), bool], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
  %1295 = @func_1719() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1296 = cast(%var_18762, dtype="bool") /* ty=Tensor[(3, 60), bool] */;
  %1297 = cast(%var_18762, dtype="bool") /* ty=Tensor[(3, 60), bool] */;
  %1298 = reshape(%1296, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), bool] */;
  %1299 = reshape(%1297, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), bool] */;
  %1300 = @func_4585(%1298, %1299) /* ty=(Tensor[(6, 2, 15), bool],) */;
  %1301 = @func_14903() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1302 = @func_15660() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
  %1303 = %1295.0;
  %1304 = %1300.0;
  %1305 = %1301.2;
  %1306 = %1302.1;
  (%1303, %1304, %var_18762, %1305, %1306)
}

def @func_1999() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %1316 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
    %1307 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
    %1308 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
    %1309 = %1307.1;
    %1310 = cast(%1309, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %1311 = reshape(%1310, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %1312 = @func_1127(%1311) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
    %1313 = @func_1516() /* ty=Tensor[(14, 16, 5), float32] */;
    %1314 = %1308.5;
    %1315 = %1312.4;
    (%1309, %1313, %1314, %1315)
  };
  %1316() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_9217() -> Tensor[(15, 13, 11), uint32] {
  @func_9215() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_15842() -> Tensor[(15, 13, 11), uint32] {
  %1318 = fn () -> Tensor[(15, 13, 11), uint32] {
    %1317 = @func_12446() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1317.0
  };
  %1318() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_20723() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  @func_20721() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */
}

def @func_4847() -> (Tensor[(15, 13, 11), uint32],) {
  @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_18902() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %1319 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
  %1320 = @func_11747() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32]) */;
  %1321 = @func_9623() /* ty=Tensor[(96), uint64] */;
  %1322 = %1319.4;
  %1323 = %1320.2;
  (%1321, %1322, %1323)
}

def @func_21474() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(176, 2), bool]) {
  %1324 = @func_20845() /* ty=(Tensor[(96), uint64], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) */;
  %1325 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 22), float32] */, dtype="float32") /* ty=Tensor[(16, 22), float32] */;
  %1326 = reshape(%1325, newshape=[176, 2]) /* ty=Tensor[(176, 2), float32] */;
  %1327 = @func_10951(%1326) /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */;
  %1328 = %1327.8;
  %1329 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 22), float32] */, dtype="bool") /* ty=Tensor[(16, 22), bool] */;
  %1330 = shape_of(%1328, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1331 = cast(%1328, dtype="bool") /* ty=Tensor[(176, 2), bool] */;
  %1332 = dyn.reshape(%1329, %1330, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1333 = less(%1331, %1332) /* ty=Tensor[(176, 2), bool] */;
  %1334 = cast(%1333, dtype="bool") /* ty=Tensor[(176, 2), bool] */;
  %1335 = shape_of(%1328, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1336 = cast(%1328, dtype="bool") /* ty=Tensor[(176, 2), bool] */;
  %1337 = dyn.reshape(%1334, %1335, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1338 = @func_8516() /* ty=Tensor[(14, 16, 5), float64] */;
  %1339 = @func_13623() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1340 = %1324.0;
  %1341 = logical_or(%1336, %1337) /* ty=Tensor[(176, 2), bool] */;
  (%1338, %1339, %1340, %1341)
}

def @func_17597(%var_17584: Tensor[(3, 1, 1), uint8]) -> (Tensor[(3, 1, 4), uint8],) {
  %1342 = cast(%var_17584, dtype="uint8") /* ty=Tensor[(3, 1, 1), uint8] */;
  %1343 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 1, 4), uint8] */, dtype="uint8") /* ty=Tensor[(3, 1, 4), uint8] */;
  %1344 = left_shift(%1342, %1343) /* ty=Tensor[(3, 1, 4), uint8] */;
  (%1344,)
}

def @func_11809() -> (Tensor[(2145), int32],) {
  %1347 = fn () -> (Tensor[(2145), int32],) {
    %1345 = @func_3337() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) */;
    %1346 = %1345.1;
    (%1346,)
  };
  %1347() /* ty=(Tensor[(2145), int32],) */
}

def @func_13454(%var_13452: Tensor[(143, 15), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(143, 15), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  @func_13451(%var_13452) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(143, 15), int32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */
}

def @func_22548() -> (Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) {
  %1348 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
  %1349 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1350 = %1348.0;
  %1351 = %1349.1;
  (%1350, %1351)
}

def @func_10547() -> (Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %1352 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1353 = @func_6723() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1354 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %1355 = %1352.0;
  %1356 = %1353.0;
  %1357 = %1354.2;
  (%1355, %1356, %1357)
}

def @func_5299() -> Tensor[(16, 6), uint64] {
  @func_5297() /* ty=Tensor[(16, 6), uint64] */
}

def @func_19205() -> (Tensor[(14, 16, 5), float32],) {
  %1358 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1359 = %1358.1;
  (%1359,)
}

def @func_2579(%var_2578: Tensor[(7, 8, 4), int8]) -> (Tensor[(7, 8, 4), int8], Tensor[(15, 13, 11), uint32]) {
  %1367 = fn (%var_2545: Tensor[(7, 8, 4), int8]) -> (Tensor[(7, 8, 4), int8], Tensor[(15, 13, 11), uint32]) {
    %1360 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 8, 4), int8] */, dtype="int8") /* ty=Tensor[(7, 8, 4), int8] */;
    %1361 = shape_of(%var_2545, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1362 = cast(%var_2545, dtype="int8") /* ty=Tensor[(7, 8, 4), int8] */;
    %1363 = dyn.reshape(%1360, %1361, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1364 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %1365 = subtract(%1362, %1363) /* ty=Tensor[(7, 8, 4), int8] */;
    %1366 = %1364.2;
    (%1365, %1366)
  };
  %1367(%var_2578) /* ty=(Tensor[(7, 8, 4), int8], Tensor[(15, 13, 11), uint32]) */
}

def @func_22139() -> (Tensor[(15, 13, 11), uint32], Tensor[(16, ?, 9), int32]) {
  %1378 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(16, ?, 9), int32]) {
    %1368 = @func_14383() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1369 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 72), float64] */, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
    %1370 = reshape(%1369, newshape=[16, 1, 9]) /* ty=Tensor[(16, 1, 9), float64] */;
    %1371 = @func_19650(%1370) /* ty=Tensor[(16, 1, 9), float64] */;
    %1372 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 72), float64] */, dtype="int32") /* ty=Tensor[(2, 72), int32] */;
    %1373 = shape_of(%1371, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1374 = cast(%1371, dtype="int32") /* ty=Tensor[(16, 1, 9), int32] */;
    %1375 = dyn.reshape(%1372, %1373, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1376 = %1368.0;
    %1377 = maximum(%1374, %1375) /* ty=Tensor[(16, ?, 9), int32] */;
    (%1376, %1377)
  };
  %1378() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, ?, 9), int32]) */
}

def @func_8720() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_8718() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_4845() -> (Tensor[(15, 13, 11), uint32],) {
  %1379 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1380 = %1379.0;
  (%1380,)
}

def @func_9709() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %1381 = @func_5535() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1382 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1383 = %1381.0;
  %1384 = %1382.1;
  (%1383, %1384)
}

def @func_7319() -> (Tensor[(14, 16, 5), float64],) {
  @func_7317() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_16134() -> Tensor[(15, 13, 11), uint32] {
  %1385 = fn () -> Tensor[(15, 13, 11), uint32] {
    @func_5857() /* ty=Tensor[(15, 13, 11), uint32] */
  };
  %1385() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_17521() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) {
  %1391 = fn () -> (Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) {
    %1386 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %1387 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
    %1388 = %1386.3;
    %1389 = %1387.0;
    %1390 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%1388, %1389, %1390)
  };
  %1391() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_2429() -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), int64]) {
  %1392 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1393 = %1392.2;
  %1394 = cast(%1393, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %1395 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1396 = cast(%1395, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1397 = reshape(%1394, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %1398 = reshape(%1396, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1399 = @func_1046(%1397, %1398) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1400 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1401 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1402 = %1401.0;
  %1403 = cast(%1395, dtype="int64") /* ty=Tensor[(15, 13, 11), int64] */;
  %1404 = shape_of(%1402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1405 = cast(%1402, dtype="int64") /* ty=Tensor[(15, 13, 11), int64] */;
  %1406 = dyn.reshape(%1403, %1404, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1407 = %1399.3;
  %1408 = %1400.1;
  %1409 = add(%1405, %1406) /* ty=Tensor[(15, 13, 11), int64] */;
  (%1393, %1407, %1408, %1409)
}

def @func_15661() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
  %1420 = fn () -> (Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) {
    %1410 = @func_4472() /* ty=(Tensor[(96), uint64],) */;
    %1411 = @func_12505() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32]) */;
    %1412 = %1411.1;
    %1413 = cast(%1412, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
    %1414 = reshape(%1413, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %1415 = @func_5770(%1414) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
    %1416 = @func_5535() /* ty=(Tensor[(14, 16, 5), float32],) */;
    %1417 = %1410.0;
    %1418 = %1415.0;
    %1419 = %1416.0;
    (%1417, %1412, %1418, %1419)
  };
  %1420() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */
}

def @func_19652(%var_19651: Tensor[(16, 1, 9), float64]) -> Tensor[(16, 1, 9), float64] {
  %1422 = fn (%var_19634: Tensor[(16, 1, 9), float64]) -> Tensor[(16, 1, 9), float64] {
    %1421 = cast(%var_19634, dtype="float64") /* ty=Tensor[(16, 1, 9), float64] */;
    erf(%1421) /* ty=Tensor[(16, 1, 9), float64] */
  };
  %1422(%var_19651) /* ty=Tensor[(16, 1, 9), float64] */
}

def @func_5097() -> Tensor[(96), uint64] {
  %1423 = @func_3027() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %1423.1
}

def @func_6938() -> Tensor[(15, 13, 11), uint32] {
  %1424 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1424.0
}

def @func_18911() -> (Tensor[(16, 6), uint64], Tensor[(96), uint64]) {
  @func_18909() /* ty=(Tensor[(16, 6), uint64], Tensor[(96), uint64]) */
}

def @func_2504() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
  %1428 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) {
    %1425 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
    %1426 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
    %1427 = %1425.1;
    (%1426, %1427)
  };
  %1428() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */
}

def @func_21031() -> Tensor[(96), uint64] {
  %1429 = @func_10625() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) */;
  %1429.0
}

def @func_23284() -> (Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %1435 = fn () -> (Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
    %1430 = @func_18645() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */;
    %1431 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
    %1432 = %1430.1;
    %1433 = %1431.0;
    %1434 = @func_6938() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%1432, %1433, %1434)
  };
  %1435() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */
}

def @func_2185() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) {
  %1436 = @func_1182() /* ty=(Tensor[(2145), float64], Tensor[(15, 13, 11), uint32]) */;
  %1437 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1438 = cast(meta[relay.Constant][38] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1439 = reshape(%1438, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %1440 = @func_912(%1439) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
  %1441 = %1436.1;
  %1442 = %1437.0;
  %1443 = %1440.2;
  (%1441, %1442, %1443, meta[relay.Constant][38] /* ty=Tensor[(96), uint64] */)
}

def @func_15011() -> (Tensor[(14, 16, 5), bool],) {
  %1444 = @func_12780() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), bool]) */;
  %1445 = %1444.1;
  (%1445,)
}

def @func_22892() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1451 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
    %1446 = @func_15745() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1447 = @func_9637() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1448 = %1446.0;
    %1449 = %1447.0;
    %1450 = @func_17256() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%1448, %1449, %1450)
  };
  %1451() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_12629() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %1452 = @func_8718() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
  %1453 = @func_11046() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1454 = %1452.2;
  %1455 = %1453.0;
  (%1454, %1455)
}

def @func_17008() -> (Tensor[(14, 16, 5), float32], Tensor[(2145), int32], Tensor[(2145), int32]) {
  %1462 = fn () -> (Tensor[(14, 16, 5), float32], Tensor[(2145), int32], Tensor[(2145), int32]) {
    %1456 = @func_5802() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), uint32]) */;
    %1457 = cast(meta[relay.Constant][39] /* ty=Tensor[(2145), int32] */, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %1458 = reshape(%1457, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %1459 = @func_1549(%1458) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), int32]) */;
    %1460 = %1456.0;
    %1461 = %1459.2;
    (%1460, %1461, meta[relay.Constant][39] /* ty=Tensor[(2145), int32] */)
  };
  %1462() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(2145), int32], Tensor[(2145), int32]) */
}

def @func_9625() -> Tensor[(96), uint64] {
  @func_9623() /* ty=Tensor[(96), uint64] */
}

def @func_2660() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) {
  %1463 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1464 = %1463.0;
  %1465 = cast(%1464, dtype="int32") /* ty=Tensor[(15, 13, 11), int32] */;
  %1466 = reshape(%1465, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1467 = @func_844(%1466) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
  %1468 = %1467.5;
  (%1464, %1468)
}

def @func_8809() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1475 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
    %1469 = @func_8633() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
    %1470 = @func_6709() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1471 = @func_2270() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1472 = %1469.1;
    %1473 = %1470.0;
    %1474 = %1471.0;
    (%1472, %1473, %1474)
  };
  %1475() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_13983() -> Tensor[(15, 13, 11), uint32] {
  @func_13981() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_5858() -> Tensor[(15, 13, 11), uint32] {
  %1476 = fn () -> Tensor[(15, 13, 11), uint32] {
    @func_3836() /* ty=Tensor[(15, 13, 11), uint32] */
  };
  %1476() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_6043() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %1477 = @func_2503() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32]) */;
  %1478 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1479 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1480 = @func_5365() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1481 = %1477.1;
  %1482 = %1478.2;
  %1483 = %1479.0;
  (%1480, %1481, %1482, %1483)
}

def @func_521(%var_519: Tensor[(4, 2, 12), uint64], %var_520: Tensor[(4, 2, 12), uint64]) -> Tensor[(4, 2, 12), float64] {
  %1490 = fn (%var_490: Tensor[(4, 2, 12), uint64], %var_491: Tensor[(4, 2, 12), uint64]) -> Tensor[(4, 2, 12), float64] {
    %1484 = cast(%var_491, dtype="bool") /* ty=Tensor[(4, 2, 12), bool] */;
    %1485 = shape_of(%var_490, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1486 = cast(%var_490, dtype="bool") /* ty=Tensor[(4, 2, 12), bool] */;
    %1487 = dyn.reshape(%1484, %1485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1488 = greater(%1486, %1487) /* ty=Tensor[(4, 2, 12), bool] */;
    %1489 = cast(%1488, dtype="float64") /* ty=Tensor[(4, 2, 12), float64] */;
    exp(%1489) /* ty=Tensor[(4, 2, 12), float64] */
  };
  %1490(%var_519, %var_520) /* ty=Tensor[(4, 2, 12), float64] */
}

def @func_17956(%var_17951: Tensor[(56), float32]) -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(1, 7, 8), float32], Tensor[(56), float32]) {
  %1491 = cast(%var_17951, dtype="float32") /* ty=Tensor[(56), float32] */;
  %1492 = reshape(%1491, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), float32] */;
  %1493 = @func_5141(%1492) /* ty=(Tensor[(1, 7, 8), float32],) */;
  %1494 = @func_6938() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1495 = @func_10254() /* ty=Tensor[(14, 16, 5), float32] */;
  %1496 = @func_9644() /* ty=Tensor[(14, 16, 5), float64] */;
  %1497 = %1493.0;
  (%1494, %1495, %1496, %1497, %var_17951)
}

def @func_12949(%var_12940: Tensor[(1120, 1), float64]) -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32], Tensor[(1120, 1), float64], Tensor[(14, 16, 5), float64]) {
  %1498 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
  %1499 = cast(%var_12940, dtype="float64") /* ty=Tensor[(1120, 1), float64] */;
  %1500 = reshape(%1499, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %1501 = @func_2627(%1500) /* ty=(Tensor[(14, 16, 5), uint32],) */;
  %1502 = %1498.1;
  %1503 = %1501.0;
  %1504 = @func_8516() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1502, %1503, %var_12940, %1504)
}

def @func_6678() -> Tensor[(15, 13, 11), uint32] {
  %1506 = fn () -> Tensor[(15, 13, 11), uint32] {
    %1505 = @func_4924() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
    %1505.0
  };
  %1506() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_13124() -> (Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) {
  %1507 = @func_2994() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) */;
  %1508 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 32), float32] */, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
  %1509 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 32), float32] */, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
  %1510 = reshape(%1508, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %1511 = reshape(%1509, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %1512 = @func_7866(%1510, %1511) /* ty=(Tensor[(4, 4, 4), int8],) */;
  %1513 = %1507.0;
  %1514 = %1512.0;
  (%1513, %1514, meta[relay.Constant][40] /* ty=Tensor[(2, 32), float32] */)
}

def @func_10478() -> Tensor[(15, 13, 11), uint32] {
  @func_10476() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_14129() -> Tensor[(96), uint64] {
  @func_14127() /* ty=Tensor[(96), uint64] */
}

def @func_13957() -> Tensor[(2, 32), float64] {
  %1518 = fn () -> Tensor[(2, 32), float64] {
    %1515 = @func_13124() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(2, 32), float32]) */;
    %1516 = %1515.2;
    %1517 = cast(%1516, dtype="float64") /* ty=Tensor[(2, 32), float64] */;
    sinh(%1517) /* ty=Tensor[(2, 32), float64] */
  };
  %1518() /* ty=Tensor[(2, 32), float64] */
}

def @func_23361() -> (Tensor[(14, 16, 5), float32],) {
  %1520 = fn () -> (Tensor[(14, 16, 5), float32],) {
    %1519 = @func_14217() /* ty=Tensor[(14, 16, 5), float32] */;
    (%1519,)
  };
  %1520() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_3699(%var_3697: Tensor[(2, 11, 7), int64], %var_3698: Tensor[(2, 11, 7), int64]) -> (Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32]) {
  %1528 = fn (%var_3671: Tensor[(2, 11, 7), int64], %var_3672: Tensor[(2, 11, 7), int64]) -> (Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32]) {
    %1521 = cast(%var_3672, dtype="int64") /* ty=Tensor[(2, 11, 7), int64] */;
    %1522 = shape_of(%var_3671, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1523 = cast(%var_3671, dtype="int64") /* ty=Tensor[(2, 11, 7), int64] */;
    %1524 = dyn.reshape(%1521, %1522, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1525 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %1526 = bitwise_and(%1523, %1524) /* ty=Tensor[(2, 11, 7), int64] */;
    %1527 = %1525.1;
    (%1526, %1527)
  };
  %1528(%var_3697, %var_3698) /* ty=(Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32]) */
}

def @func_5356() -> (Tensor[(96), uint64], Tensor[(96), uint64]) {
  %1529 = @func_4691() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */;
  %1530 = %1529.0;
  %1531 = cast(%1530, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1532 = reshape(%1531, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %1533 = @func_3514(%1532) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1534 = %1533.4;
  (%1530, %1534)
}

def @func_4810(%var_4808: Tensor[(10, 6, 1), int8], %var_4809: Tensor[(10, 6, 14), int8]) -> (Tensor[(10, 6, 14), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  %1549 = fn (%var_4776: Tensor[(10, 6, 1), int8], %var_4777: Tensor[(10, 6, 14), int8]) -> (Tensor[(10, 6, 14), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
    %1535 = cast(%var_4776, dtype="int8") /* ty=Tensor[(10, 6, 1), int8] */;
    %1536 = cast(%var_4777, dtype="int8") /* ty=Tensor[(10, 6, 14), int8] */;
    %1537 = left_shift(%1535, %1536) /* ty=Tensor[(10, 6, 14), int8] */;
    %1538 = cast(%1537, dtype="float32") /* ty=Tensor[(10, 6, 14), float32] */;
    %1539 = shape_of(%var_4777, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1540 = cast(%var_4777, dtype="float32") /* ty=Tensor[(10, 6, 14), float32] */;
    %1541 = dyn.reshape(%1538, %1539, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1542 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
    %1543 = @func_1998() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %1544 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
    %1545 = maximum(%1540, %1541) /* ty=Tensor[(10, 6, 14), float32] */;
    %1546 = %1542.0;
    %1547 = %1543.0;
    %1548 = %1544.3;
    (%1545, %1546, %1547, %1548)
  };
  %1549(%var_4808, %var_4809) /* ty=(Tensor[(10, 6, 14), float32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */
}

def @func_22918() -> (Tensor[(14, 16, 5), float64],) {
  %1550 = @func_22029() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1551 = %1550.1;
  (%1551,)
}

def @func_23174() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1552 = @func_6723() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1553 = @func_14680() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1554 = %1552.0;
  %1555 = @func_12112() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1556 = %1553.1;
  %1557 = @func_7738() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1554, %1555, %1556, %1557)
}

def @func_11587() -> (Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), uint32]) {
  %1576 = fn () -> (Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), uint32]) {
    %1558 = @func_5071() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
    %1559 = %1558.4;
    %1560 = @func_10804() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) */;
    %1561 = %1560.1;
    %1562 = cast(%1561, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
    %1563 = shape_of(%1559, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1564 = cast(%1559, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
    %1565 = dyn.reshape(%1562, %1563, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1566 = @func_4385() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(1, 96), uint64]) */;
    %1567 = %1566.1;
    %1568 = cast(%1559, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
    %1569 = shape_of(%1567, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1570 = cast(%1567, dtype="bool") /* ty=Tensor[(14, 16, 5), bool] */;
    %1571 = dyn.reshape(%1568, %1569, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1572 = @func_8808() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %1573 = equal(%1564, %1565) /* ty=Tensor[(14, 16, 5), bool] */;
    %1574 = not_equal(%1570, %1571) /* ty=Tensor[(14, 16, 5), bool] */;
    %1575 = %1572.1;
    (%1573, %1574, %1575)
  };
  %1576() /* ty=(Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), uint32]) */
}

def @func_5201() -> (Tensor[(96), uint64], Tensor[(96), uint64]) {
  %1577 = @func_4472() /* ty=(Tensor[(96), uint64],) */;
  %1578 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
  %1579 = %1577.0;
  %1580 = %1578.2;
  (%1579, %1580)
}

def @func_16919() -> Tensor[(15, 13, 11), uint32] {
  %1582 = fn () -> Tensor[(15, 13, 11), uint32] {
    %1581 = @func_15182() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1581.0
  };
  %1582() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_8998() -> (Tensor[(14, 16, 5), float32],) {
  %1585 = fn () -> (Tensor[(14, 16, 5), float32],) {
    %1583 = @func_5535() /* ty=(Tensor[(14, 16, 5), float32],) */;
    %1584 = %1583.0;
    (%1584,)
  };
  %1585() /* ty=(Tensor[(14, 16, 5), float32],) */
}

def @func_17420() -> (Tensor[(14, 16, 5), float64], Tensor[(11, 5, 7), float32], Tensor[(15, 13, 11), uint32], Tensor[(1, 64), float32]) {
  @func_17418() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(11, 5, 7), float32], Tensor[(15, 13, 11), uint32], Tensor[(1, 64), float32]) */
}

def @func_20030() -> (Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(14, 16, 5), float64]) {
  @func_20028() /* ty=(Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(14, 16, 5), float64]) */
}

def @func_6723() -> (Tensor[(15, 13, 11), uint32],) {
  %1586 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1587 = %1586.1;
  (%1587,)
}

def @func_14385() -> (Tensor[(15, 13, 11), uint32],) {
  @func_14383() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_11932() -> (Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  @func_11930() /* ty=(Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */
}

def @func_15805() -> Tensor[(15, 13, 11), uint32] {
  @func_15803() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_14586() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %1591 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
    %1588 = @func_2185() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(96), uint64]) */;
    %1589 = @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */;
    %1590 = %1588.2;
    (%1589, %1590)
  };
  %1591() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_21366() -> (Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) {
  %1592 = @func_5071() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
  %1593 = @func_18467() /* ty=Tensor[(96), uint64] */;
  %1594 = @func_5097() /* ty=Tensor[(96), uint64] */;
  %1595 = %1592.3;
  (%1593, %1594, %1595)
}

def @func_5321() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  @func_5319() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_15705() -> (Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
  %1600 = fn () -> (Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) {
    %1596 = @func_14160() /* ty=(Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) */;
    %1597 = @func_6809() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1598 = %1596.0;
    %1599 = %1597.0;
    (%1598, %1599)
  };
  %1600() /* ty=(Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */
}

def @func_7247() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  @func_7245() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), bool], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */
}

def @func_1083() -> Tensor[(14, 16, 5), float64] {
  @func_670() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_13347(%var_13335: Tensor[(4, 5, 6), bool]) -> (Tensor[(4, 5, 6), bool],) {
  %1601 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 5, 1), bool] */, dtype="bool") /* ty=Tensor[(4, 5, 1), bool] */;
  %1602 = cast(%var_13335, dtype="bool") /* ty=Tensor[(4, 5, 6), bool] */;
  %1603 = logical_or(%1601, %1602) /* ty=Tensor[(4, 5, 6), bool] */;
  (%1603,)
}

def @func_19228() -> Tensor[(15, 13, 11), uint32] {
  %1605 = fn () -> Tensor[(15, 13, 11), uint32] {
    %1604 = @func_11965() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1604.0
  };
  %1605() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_4924() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  %1606 = @func_3092() /* ty=(Tensor[(96), uint64],) */;
  %1607 = @func_2468() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1608 = %1606.0;
  (%1607, %1608)
}

def @func_19138() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %1613 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
    %1609 = @func_1755() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(96), uint64]) */;
    %1610 = @func_6643() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) */;
    %1611 = %1609.0;
    %1612 = %1610.0;
    (%1611, %1612)
  };
  %1613() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */
}

def @func_16229() -> (Tensor[(14, 16, 5), float32], Tensor[(2, 11, 7), int64]) {
  %1618 = fn () -> (Tensor[(14, 16, 5), float32], Tensor[(2, 11, 7), int64]) {
    %1614 = @func_7374() /* ty=(Tensor[(14, 16, 5), float32],) */;
    %1615 = @func_15289() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2, 11, 7), int64], Tensor[(154), int64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
    %1616 = %1614.0;
    %1617 = %1615.1;
    (%1616, %1617)
  };
  %1618() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(2, 11, 7), int64]) */
}

def @func_9821(%var_9808: Tensor[(180, 1), bool]) -> (Tensor[(14, 16, 5), float32], Tensor[(6, 2, 15), bool], Tensor[(180, 1), float64]) {
  %1619 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
  %1620 = cast(%var_9808, dtype="bool") /* ty=Tensor[(180, 1), bool] */;
  %1621 = cast(%var_9808, dtype="bool") /* ty=Tensor[(180, 1), bool] */;
  %1622 = reshape(%1620, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), bool] */;
  %1623 = reshape(%1621, newshape=[6, 2, 15]) /* ty=Tensor[(6, 2, 15), bool] */;
  %1624 = @func_4585(%1622, %1623) /* ty=(Tensor[(6, 2, 15), bool],) */;
  %1625 = cast(%var_9808, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %1626 = %1619.1;
  %1627 = %1624.0;
  %1628 = tan(%1625) /* ty=Tensor[(180, 1), float64] */;
  (%1626, %1627, %1628)
}

def @func_19045() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(2, 32), float64]) {
  @func_19043() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(2, 32), float64]) */
}

def @func_20647() -> (Tensor[(15, 13, 11), uint32],) {
  @func_20645() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_12114() -> Tensor[(15, 13, 11), uint32] {
  @func_12112() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @main(%var_23429: Tensor[(2, 32), float64]) -> Tensor[(2, 32), bool] {
  %1629 = @func_19045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(224), int8], Tensor[(2, 32), float64]) */;
  %1630 = %1629.3;
  %1631 = cast(%var_23429, dtype="bool") /* ty=Tensor[(2, 32), bool] */;
  %1632 = shape_of(%1630, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1633 = cast(%1630, dtype="bool") /* ty=Tensor[(2, 32), bool] */;
  %1634 = dyn.reshape(%1631, %1632, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  equal(%1633, %1634) /* ty=Tensor[(2, 32), bool] */
}

def @func_6811() -> (Tensor[(15, 13, 11), uint32],) {
  @func_6809() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_1551(%var_1550: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), int32]) {
  %1640 = fn (%var_1540: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), int32]) {
    %1635 = cast(%var_1540, dtype="int32") /* ty=Tensor[(2145), int32] */;
    %1636 = reshape(%1635, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
    %1637 = @func_844(%1636) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), bool], Tensor[(4, 2, 12), float64]) */;
    %1638 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
    %1639 = %1637.4;
    (%1638, %1639, %var_1540)
  };
  %1640(%var_1550) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), int32]) */
}

def @func_14681() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %1645 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
    %1641 = @func_4691() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */;
    %1642 = @func_8394() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(13, 2, 10), uint8], Tensor[(260), uint8], Tensor[(15, 13, 11), float32], Tensor[(2145), int32], Tensor[(15, 13, 11), uint32]) */;
    %1643 = %1641.1;
    %1644 = %1642.0;
    (%1643, %1644)
  };
  %1645() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */
}

def @func_21476() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(176, 2), bool]) {
  @func_21474() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(176, 2), bool]) */
}

def @func_2046() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  %1650 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
    %1646 = @func_1710() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %1647 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
    %1648 = @func_1295() /* ty=Tensor[(15, 13, 11), uint32] */;
    %1649 = %1646.1;
    (%1647, %1648, %1649)
  };
  %1650() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */
}

def @func_5674() -> (Tensor[(11, 5, 7), float32],) {
  %1651 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 5, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
  %1652 = sin(%1651) /* ty=Tensor[(11, 5, 7), float32] */;
  (%1652,)
}

def @func_5912() -> (Tensor[(15, 13, 11), uint32],) {
  %1654 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %1653 = @func_3836() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%1653,)
  };
  %1654() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_11212() -> (Tensor[(15, 13, 11), bool],) {
  %1655 = @func_2660() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), bool]) */;
  %1656 = %1655.1;
  (%1656,)
}

def @func_3093() -> (Tensor[(96), uint64],) {
  %1659 = fn () -> (Tensor[(96), uint64],) {
    %1657 = @func_2994() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float64]) */;
    %1658 = %1657.1;
    (%1658,)
  };
  %1659() /* ty=(Tensor[(96), uint64],) */
}

def @func_4588(%var_4586: Tensor[(6, 2, 15), bool], %var_4587: Tensor[(6, 2, 15), bool]) -> (Tensor[(6, 2, 15), bool],) {
  %1665 = fn (%var_4575: Tensor[(6, 2, 15), bool], %var_4576: Tensor[(6, 2, 15), bool]) -> (Tensor[(6, 2, 15), bool],) {
    %1660 = cast(%var_4576, dtype="bool") /* ty=Tensor[(6, 2, 15), bool] */;
    %1661 = shape_of(%var_4575, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1662 = cast(%var_4575, dtype="bool") /* ty=Tensor[(6, 2, 15), bool] */;
    %1663 = dyn.reshape(%1660, %1661, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1664 = logical_or(%1662, %1663) /* ty=Tensor[(6, 2, 15), bool] */;
    (%1664,)
  };
  %1665(%var_4586, %var_4587) /* ty=(Tensor[(6, 2, 15), bool],) */
}

def @func_12301() -> (Tensor[(15, 13, 11), uint32], Tensor[(13, 7, 1), float32], Tensor[(13, 7), float32], Tensor[(15, 13, 11), uint32]) {
  @func_12299() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(13, 7, 1), float32], Tensor[(13, 7), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_8286(%var_8285: Tensor[(18), float32]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) {
  %1672 = fn (%var_8250: Tensor[(18), float32]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) {
    %1666 = @func_4691() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64]) */;
    %1667 = cast(%var_8250, dtype="float32") /* ty=Tensor[(18), float32] */;
    %1668 = reshape(%1667, newshape=[6, 3, 1]) /* ty=Tensor[(6, 3, 1), float32] */;
    %1669 = @func_6435(%1668) /* ty=(Tensor[(6, 3, 1), float32], Tensor[(15, 13, 11), float64]) */;
    %1670 = %1666.1;
    %1671 = %1669.1;
    (%1670, %1671, %var_8250)
  };
  %1672(%var_8285) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float64], Tensor[(18), float32]) */
}

def @func_22661() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %1678 = fn () -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
    %1673 = @func_21882() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
    %1674 = @func_7425() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %1675 = @func_20531() /* ty=Tensor[(96), uint64] */;
    %1676 = %1673.1;
    %1677 = %1674.1;
    (%1675, %1676, %1677)
  };
  %1678() /* ty=(Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */
}

def @func_4729() -> Tensor[(14, 16, 5), float32] {
  @func_1516() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_3738() -> (Tensor[(15, 13, 11), uint32],) {
  @func_3736() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_15289() -> (Tensor[(14, 16, 5), float64], Tensor[(2, 11, 7), int64], Tensor[(154), int64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) {
  %1679 = @func_13015() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1680 = cast(meta[relay.Constant][43] /* ty=Tensor[(154), int64] */, dtype="int64") /* ty=Tensor[(154), int64] */;
  %1681 = cast(meta[relay.Constant][43] /* ty=Tensor[(154), int64] */, dtype="int64") /* ty=Tensor[(154), int64] */;
  %1682 = reshape(%1680, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int64] */;
  %1683 = reshape(%1681, newshape=[2, 11, 7]) /* ty=Tensor[(2, 11, 7), int64] */;
  %1684 = @func_3696(%1682, %1683) /* ty=(Tensor[(2, 11, 7), int64], Tensor[(14, 16, 5), float32]) */;
  %1685 = cast(meta[relay.Constant][44] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1686 = reshape(%1685, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %1687 = @func_912(%1686) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(4, 2, 12), float64], Tensor[(14, 16, 5), float64], Tensor[(2145), int32]) */;
  %1688 = @func_14547() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1689 = %1679.0;
  %1690 = %1684.0;
  %1691 = %1687.6;
  %1692 = %1688.0;
  (%1689, %1690, meta[relay.Constant][43] /* ty=Tensor[(154), int64] */, %1691, meta[relay.Constant][44] /* ty=Tensor[(96), uint64] */, %1692)
}

def @func_5259(%var_5204: uint32, %var_5205: Tensor[(15, 1, 16), uint32], %var_5212: Tensor[(2145), int32]) -> (Tensor[(1120), float64], Tensor[(2145), int32], Tensor[(96), uint64], Tensor[(15, 1, 16), float64], Tensor[(2145), uint32]) {
  %1693 = @func_1390() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(4, 2, 12), float64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
  %1694 = cast(%var_5204, dtype="uint32") /* ty=uint32 */;
  %1695 = cast(%var_5205, dtype="uint32") /* ty=Tensor[(15, 1, 16), uint32] */;
  %1696 = logical_xor(%1694, %1695) /* ty=Tensor[(15, 1, 16), uint32] */;
  %1697 = cast(%1696, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %1698 = cast(%var_5204, dtype="float64") /* ty=float64 */;
  %1699 = cast(meta[relay.Constant][45] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %1700 = cast(%var_5212, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1701 = reshape(%1699, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %1702 = reshape(%1700, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1703 = @func_1046(%1701, %1702) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1704 = %1703.2;
  %1705 = cast(%1704, dtype="uint32") /* ty=Tensor[(2145), uint32] */;
  %1706 = cast(%var_5204, dtype="uint32") /* ty=uint32 */;
  %1707 = %1693.2;
  %1708 = add(%1697, %1698) /* ty=Tensor[(15, 1, 16), float64] */;
  %1709 = bitwise_and(%1705, %1706) /* ty=Tensor[(2145), uint32] */;
  (meta[relay.Constant][45] /* ty=Tensor[(1120), float64] */, %var_5212, %1707, %1708, %1709)
}

def @func_14160() -> (Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) {
  %1710 = @func_11808() /* ty=(Tensor[(2145), int32],) */;
  %1711 = @func_10804() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) */;
  %1712 = %1710.0;
  %1713 = %1711.0;
  (%1712, %1713)
}

def @func_18691() -> (Tensor[(14, 16, 5), float64],) {
  %1716 = fn () -> (Tensor[(14, 16, 5), float64],) {
    %1714 = @func_13015() /* ty=(Tensor[(14, 16, 5), float64],) */;
    %1715 = %1714.0;
    (%1715,)
  };
  %1716() /* ty=(Tensor[(14, 16, 5), float64],) */
}

def @func_7539(%var_7537: Tensor[(224), int8]) -> (Tensor[(15, 13, 11), uint32], Tensor[(7, 8, 4), int8], Tensor[(224), int8], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  @func_7536(%var_7537) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(7, 8, 4), int8], Tensor[(224), int8], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_21590() -> (Tensor[(96), uint64], Tensor[(14, 16, 5), float32]) {
  %1717 = @func_5201() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64]) */;
  %1718 = @func_2256() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) */;
  %1719 = %1717.0;
  %1720 = %1718.2;
  (%1719, %1720)
}

def @func_10365() -> (Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) {
  %1725 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) {
    %1721 = @func_1664() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */;
    %1722 = @func_10269() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) */;
    %1723 = %1721.1;
    %1724 = %1722.1;
    (%1723, %1724)
  };
  %1725() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) */
}

def @func_20975() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %1729 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
    %1726 = @func_12155() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %1727 = @func_1083() /* ty=Tensor[(14, 16, 5), float64] */;
    %1728 = %1726.0;
    (%1727, %1728)
  };
  %1729() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */
}

def @func_12631() -> (Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) {
  @func_12629() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */
}

def @func_8028(%var_7960: Tensor[(15, 13, 11), uint32]) -> (Tensor[(15, 13, 11), float64], Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) {
  %1730 = @func_988() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) */;
  %1731 = %1730.1;
  %1732 = cast(%var_7960, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %1733 = shape_of(%1731, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1734 = cast(%1731, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %1735 = dyn.reshape(%1732, %1733, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1736 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1737 = floor_divide(%1734, %1735) /* ty=Tensor[(15, 13, 11), float64] */;
  %1738 = @func_3132() /* ty=Tensor[(14, 16, 5), float64] */;
  %1739 = %1736.1;
  %1740 = @func_2012() /* ty=Tensor[(15, 13, 11), uint32] */;
  (%1737, %1738, %1739, %1740)
}

def @func_20531() -> Tensor[(96), uint64] {
  %1741 = @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
  %1741.1
}

def @func_22291() -> Tensor[(96), uint64] {
  %1742 = @func_21114() /* ty=(Tensor[(18), float32], Tensor[(96), uint64]) */;
  %1742.1
}

def @func_3824() -> (Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  @func_3822() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_2285() -> (Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) {
  %1747 = fn () -> (Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) {
    %1743 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
    %1744 = @func_2108() /* ty=(Tensor[(15, 13, 11), float32],) */;
    %1745 = %1743.0;
    %1746 = %1744.0;
    (%1745, %1746)
  };
  %1747() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */
}

def @func_12506() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), float32]) {
  %1752 = fn () -> (Tensor[(96), uint64], Tensor[(15, 13, 11), float32]) {
    %1748 = @func_8481() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(96), uint64]) */;
    %1749 = @func_2284() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), float32]) */;
    %1750 = %1748.2;
    %1751 = %1749.1;
    (%1750, %1751)
  };
  %1752() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32]) */
}

def @func_4524() -> Tensor[(96), uint64] {
  @func_4522() /* ty=Tensor[(96), uint64] */
}

def @func_11749() -> (Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32]) {
  @func_11747() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), uint32]) */
}

def @func_20845() -> (Tensor[(96), uint64], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) {
  %1753 = cast(meta[relay.Constant][46] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1754 = reshape(%1753, newshape=[176, 2]) /* ty=Tensor[(176, 2), float32] */;
  %1755 = @func_6007(%1754) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */;
  %1756 = @func_14127() /* ty=Tensor[(96), uint64] */;
  %1757 = %1755.1;
  (%1756, %1757, meta[relay.Constant][46] /* ty=Tensor[(352), float32] */)
}

def @func_23226() -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(4, 7, 14), int64], Tensor[(392), int64]) {
  %1767 = fn () -> (Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(4, 7, 14), int64], Tensor[(392), int64]) {
    %1758 = @func_9128() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32]) */;
    %1759 = cast(meta[relay.Constant][47] /* ty=Tensor[(392), int64] */, dtype="int64") /* ty=Tensor[(392), int64] */;
    %1760 = cast(meta[relay.Constant][47] /* ty=Tensor[(392), int64] */, dtype="int64") /* ty=Tensor[(392), int64] */;
    %1761 = reshape(%1759, newshape=[4, 7, 14]) /* ty=Tensor[(4, 7, 14), int64] */;
    %1762 = reshape(%1760, newshape=[4, 7, 14]) /* ty=Tensor[(4, 7, 14), int64] */;
    %1763 = @func_20190(%1761, %1762) /* ty=(Tensor[(4, 7, 14), int64],) */;
    %1764 = %1758.0;
    %1765 = @func_5394() /* ty=Tensor[(15, 13, 11), uint32] */;
    %1766 = %1763.0;
    (%1764, %1765, %1766, meta[relay.Constant][47] /* ty=Tensor[(392), int64] */)
  };
  %1767() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(4, 7, 14), int64], Tensor[(392), int64]) */
}

def @func_22271() -> Tensor[(15, 13, 11), float32] {
  %1768 = @func_14522() /* ty=(Tensor[(15, 13, 11), float32],) */;
  %1768.0
}

def @func_18948() -> (Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) {
  %1769 = @func_17228() /* ty=Tensor[(14, 16, 5), float64] */;
  %1770 = @func_9644() /* ty=Tensor[(14, 16, 5), float64] */;
  (%1769, %1770)
}

def @func_10805() -> (Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) {
  %1775 = fn () -> (Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) {
    %1771 = @func_3599() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), float32], Tensor[(96), uint64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32]) */;
    %1772 = @func_9948() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float32]) */;
    %1773 = %1771.1;
    %1774 = %1772.0;
    (%1773, %1774)
  };
  %1775() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(14, 16, 5), float32]) */
}

def @func_6009(%var_6008: Tensor[(176, 2), float32]) -> (Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) {
  %1781 = fn (%var_6002: Tensor[(176, 2), float32]) -> (Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) {
    %1776 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1777 = cast(%var_6002, dtype="float32") /* ty=Tensor[(176, 2), float32] */;
    %1778 = reshape(%1777, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), float32] */;
    %1779 = %1776.0;
    %1780 = @func_3908(%1778) /* ty=Tensor[(11, 2, 16), float32] */;
    (%1779, %1780, %var_6002)
  };
  %1781(%var_6008) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(11, 2, 16), float32], Tensor[(176, 2), float32]) */
}

def @func_9785() -> Tensor[(15, 13, 11), uint32] {
  %1782 = @func_4845() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1782.0
}

def @func_22718(%var_22717: Tensor[(56), float32]) -> (Tensor[(15, 13, 11), uint32], Tensor[(1, 7, 8), float32], Tensor[(56), float32], Tensor[(15, 13, 11), uint32]) {
  %1790 = fn (%var_22697: Tensor[(56), float32]) -> (Tensor[(15, 13, 11), uint32], Tensor[(1, 7, 8), float32], Tensor[(56), float32], Tensor[(15, 13, 11), uint32]) {
    %1783 = @func_10547() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */;
    %1784 = cast(%var_22697, dtype="float32") /* ty=Tensor[(56), float32] */;
    %1785 = reshape(%1784, newshape=[56]) /* ty=Tensor[(56), float32] */;
    %1786 = @func_17956(%1785) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64], Tensor[(1, 7, 8), float32], Tensor[(56), float32]) */;
    %1787 = %1783.1;
    %1788 = %1786.3;
    %1789 = @func_22223() /* ty=Tensor[(15, 13, 11), uint32] */;
    (%1787, %1788, %var_22697, %1789)
  };
  %1790(%var_22717) /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(1, 7, 8), float32], Tensor[(56), float32], Tensor[(15, 13, 11), uint32]) */
}

def @func_1665() -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
  %1795 = fn () -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) {
    %1791 = @func_1290() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
    %1792 = @func_1586() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
    %1793 = %1791.1;
    %1794 = %1792.0;
    (%1793, %1794)
  };
  %1795() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32]) */
}

def @func_2431() -> (Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), int64]) {
  @func_2429() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), int64]) */
}

def @func_14162() -> (Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) {
  @func_14160() /* ty=(Tensor[(2145), int32], Tensor[(15, 13, 11), float32]) */
}

def @func_17418() -> (Tensor[(14, 16, 5), float64], Tensor[(11, 5, 7), float32], Tensor[(15, 13, 11), uint32], Tensor[(1, 64), float32]) {
  %1796 = @func_5674() /* ty=(Tensor[(11, 5, 7), float32],) */;
  %1797 = @func_12731() /* ty=(Tensor[(96), uint64], Tensor[(4, 4, 4), int8], Tensor[(1, 64), float32], Tensor[(15, 13, 11), float32]) */;
  %1798 = @func_17228() /* ty=Tensor[(14, 16, 5), float64] */;
  %1799 = %1796.0;
  %1800 = @func_12112() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1801 = %1797.2;
  (%1798, %1799, %1800, %1801)
}

def @func_7738() -> Tensor[(15, 13, 11), uint32] {
  %1802 = @func_7476() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32]) */;
  %1802.1
}

def @func_20721() -> (Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) {
  %1803 = @func_19205() /* ty=(Tensor[(14, 16, 5), float32],) */;
  %1804 = @func_12229() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1805 = %1803.0;
  %1806 = %1804.0;
  (%1805, %1806)
}

def @func_5770(%var_5757: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32]) {
  %1807 = @func_5319() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */;
  %1808 = %1807.1;
  %1809 = cast(%1808, dtype="float64") /* ty=Tensor[(14, 16, 5), float64] */;
  %1810 = cast(%var_5757, dtype="int32") /* ty=Tensor[(2145), int32] */;
  %1811 = reshape(%1809, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
  %1812 = reshape(%1810, newshape=[2145]) /* ty=Tensor[(2145), int32] */;
  %1813 = @func_1046(%1811, %1812) /* ty=(Tensor[(14, 16, 5), float64], Tensor[(15, 13, 11), uint32], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1814 = %1813.1;
  (%1808, %1814, %var_5757)
}

def @func_22439() -> (Tensor[(14, 16, 5), float64],) {
  %1815 = @func_13663() /* ty=(Tensor[(14, 16, 5), float64],) */;
  %1816 = %1815.0;
  (%1816,)
}

def @func_13015() -> (Tensor[(14, 16, 5), float64],) {
  %1817 = @func_3424() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float64]) */;
  %1818 = %1817.3;
  (%1818,)
}

def @func_10549() -> (Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) {
  @func_10547() /* ty=(Tensor[(15, 13, 11), float32], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64]) */
}

def @func_12907() -> Tensor[(14, 16, 5), float32] {
  @func_12905() /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_5143(%var_5142: Tensor[(1, 7, 8), float32]) -> (Tensor[(1, 7, 8), float32],) {
  %1821 = fn (%var_5134: Tensor[(1, 7, 8), float32]) -> (Tensor[(1, 7, 8), float32],) {
    %1819 = cast(%var_5134, dtype="float32") /* ty=Tensor[(1, 7, 8), float32] */;
    %1820 = asin(%1819) /* ty=Tensor[(1, 7, 8), float32] */;
    (%1820,)
  };
  %1821(%var_5142) /* ty=(Tensor[(1, 7, 8), float32],) */
}

def @func_18378(%var_18377: Tensor[(5, 11, 15), float32]) -> (Tensor[(5, 11, 15), float32], Tensor[(14, 16, 5), uint32], Tensor[(1120), float64]) {
  %1828 = fn (%var_18361: Tensor[(5, 11, 15), float32]) -> (Tensor[(5, 11, 15), float32], Tensor[(14, 16, 5), uint32], Tensor[(1120), float64]) {
    %1822 = cast(%var_18361, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
    %1823 = cast(meta[relay.Constant][48] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %1824 = reshape(%1823, newshape=[14, 16, 5]) /* ty=Tensor[(14, 16, 5), float64] */;
    %1825 = @func_2627(%1824) /* ty=(Tensor[(14, 16, 5), uint32],) */;
    %1826 = acosh(%1822) /* ty=Tensor[(5, 11, 15), float32] */;
    %1827 = %1825.0;
    (%1826, %1827, meta[relay.Constant][48] /* ty=Tensor[(1120), float64] */)
  };
  %1828(%var_18377) /* ty=(Tensor[(5, 11, 15), float32], Tensor[(14, 16, 5), uint32], Tensor[(1120), float64]) */
}

def @func_11852() -> (Tensor[(6, 2, 9), bool],) {
  %1836 = fn () -> (Tensor[(6, 2, 9), bool],) {
    %1829 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 2, 9), float64] */;
    %1830 = sqrt(%1829) /* ty=Tensor[(6, 2, 9), float64] */;
    %1831 = cast(%1830, dtype="bool") /* ty=Tensor[(6, 2, 9), bool] */;
    %1832 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(6, 2, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1833 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 2, 9), float64] */, dtype="bool") /* ty=Tensor[(6, 2, 9), bool] */;
    %1834 = dyn.reshape(%1831, %1832, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1835 = greater(%1833, %1834) /* ty=Tensor[(6, 2, 9), bool] */;
    (%1835,)
  };
  %1836() /* ty=(Tensor[(6, 2, 9), bool],) */
}

def @func_13476() -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
  %1842 = fn () -> (Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) {
    %1837 = @func_10625() /* ty=(Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float64], Tensor[(1, 2145), int32]) */;
    %1838 = @func_13358() /* ty=(Tensor[(15, 13, 11), uint32],) */;
    %1839 = %1837.0;
    %1840 = %1838.0;
    %1841 = @func_5273() /* ty=Tensor[(14, 16, 5), float64] */;
    (%1839, %1840, %1841)
  };
  %1842() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float64]) */
}

def @func_18261(%var_18259: Tensor[(10, 15, 12), float64]) -> (Tensor[(10, 15, 12), float32],) {
  @func_18258(%var_18259) /* ty=(Tensor[(10, 15, 12), float32],) */
}

def @func_7866(%var_7857: Tensor[(4, 4, 4), float32], %var_7858: Tensor[(4, 4, 4), float32]) -> (Tensor[(4, 4, 4), int8],) {
  %1843 = cast(%var_7858, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
  %1844 = shape_of(%var_7857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1845 = cast(%var_7857, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
  %1846 = dyn.reshape(%1843, %1844, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1847 = mod(%1845, %1846) /* ty=Tensor[(4, 4, 4), float32] */;
  %1848 = cast(%1847, dtype="int8") /* ty=Tensor[(4, 4, 4), int8] */;
  %1849 = shape_of(%var_7858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1850 = cast(%var_7858, dtype="int8") /* ty=Tensor[(4, 4, 4), int8] */;
  %1851 = dyn.reshape(%1848, %1849, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1852 = maximum(%1850, %1851) /* ty=Tensor[(4, 4, 4), int8] */;
  (%1852,)
}

def @func_22293() -> Tensor[(96), uint64] {
  @func_22291() /* ty=Tensor[(96), uint64] */
}

def @func_22989() -> (Tensor[(15, 13, 11), uint32],) {
  @func_22987() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

def @func_22078() -> (Tensor[(6, 2, 9), bool],) {
  @func_22076() /* ty=(Tensor[(6, 2, 9), bool],) */
}

def @func_15097() -> Tensor[(4, 4, 4), int8] {
  %1853 = fn () -> Tensor[(4, 4, 4), int8] {
    @func_13893() /* ty=Tensor[(4, 4, 4), int8] */
  };
  %1853() /* ty=Tensor[(4, 4, 4), int8] */
}

def @func_15342() -> (Tensor[(16, 6), uint64],) {
  %1856 = fn () -> (Tensor[(16, 6), uint64],) {
    %1854 = @func_8766() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
    %1855 = %1854.1;
    (%1855,)
  };
  %1856() /* ty=(Tensor[(16, 6), uint64],) */
}

def @func_16085() -> (Tensor[(14, 16, 5), float64], Tensor[(6, 2, 9), float64]) {
  @func_16083() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(6, 2, 9), float64]) */
}

def @func_15517() -> Tensor[(15, 13, 11), uint32] {
  %1857 = fn () -> Tensor[(15, 13, 11), uint32] {
    @func_6677() /* ty=Tensor[(15, 13, 11), uint32] */
  };
  %1857() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_15126(%var_15124: Tensor[(9, 13, 2), int8], %var_15125: Tensor[(9, 13, 2), int8]) -> (Tensor[(9, 13, 2), int8],) {
  @func_15122(%var_15124, %var_15125) /* ty=(Tensor[(9, 13, 2), int8],) */
}

def @func_21962() -> Tensor[(14, 16, 5), float64] {
  @func_21960() /* ty=Tensor[(14, 16, 5), float64] */
}

def @func_19415(%var_19400: Tensor[(2145), int32]) -> (Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64], Tensor[(2145), float32]) {
  %1858 = @func_12862() /* ty=(Tensor[(2145), bool], Tensor[(14, 16, 5), float64]) */;
  %1859 = @func_14238() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %1860 = @func_3337() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(2145), int32], Tensor[(2145), int32]) */;
  %1861 = %1860.1;
  %1862 = cast(%var_19400, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %1863 = shape_of(%1861, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1864 = cast(%1861, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %1865 = dyn.reshape(%1862, %1863, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1866 = %1858.1;
  %1867 = %1859.1;
  %1868 = mod(%1864, %1865) /* ty=Tensor[(2145), float32] */;
  (%1866, %1867, %1868)
}

def @func_1516() -> Tensor[(14, 16, 5), float32] {
  %1869 = @func_670() /* ty=Tensor[(14, 16, 5), float64] */;
  %1870 = cast(%1869, dtype="float32") /* ty=Tensor[(14, 16, 5), float32] */;
  exp(%1870) /* ty=Tensor[(14, 16, 5), float32] */
}

def @func_21757() -> (Tensor[(16, 6), uint64], Tensor[(5, 7, 2), float64], Tensor[(70), float64], Tensor[(14, 16, 5), float64], Tensor[(260), uint8], Tensor[(15, 13, 11), uint32], Tensor[(16, 6), uint64], Tensor[(15, 13, 11), uint32], Tensor[(96), uint64], Tensor[(96), uint64], Tensor[(14, 16, 5), float32], Tensor[(15, 13, 11), uint32]) {
  %1871 = @func_8766() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(16, 6), uint64]) */;
  %1872 = cast(meta[relay.Constant][50] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %1873 = reshape(%1872, newshape=[5, 7, 2]) /* ty=Tensor[(5, 7, 2), float64] */;
  %1874 = @func_18948() /* ty=(Tensor[(14, 16, 5), float64], Tensor[(14, 16, 5), float64]) */;
  %1875 = @func_10364() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(260), uint8]) */;
  %1876 = @func_6723() /* ty=(Tensor[(15, 13, 11), uint32],) */;
  %1877 = @func_12505() /* ty=(Tensor[(96), uint64], Tensor[(15, 13, 11), float32]) */;
  %1878 = @func_12538() /* ty=(Tensor[(6, 2, 9), bool], Tensor[(96), uint64]) */;
  %1879 = @func_18645() /* ty=(Tensor[(14, 16, 5), float32], Tensor[(14, 16, 5), float32]) */;
  %1880 = @func_3273() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
  %1881 = %1871.1;
  %1882 = @func_14179(%1873) /* ty=Tensor[(5, 7, 2), float64] */;
  %1883 = %1874.0;
  %1884 = %1875.1;
  %1885 = @func_21227() /* ty=Tensor[(15, 13, 11), uint32] */;
  %1886 = @func_5466() /* ty=Tensor[(16, 6), uint64] */;
  %1887 = %1876.0;
  %1888 = %1877.0;
  %1889 = %1878.1;
  %1890 = %1879.0;
  %1891 = %1880.0;
  (%1881, %1882, meta[relay.Constant][50] /* ty=Tensor[(70), float64] */, %1883, %1884, %1885, %1886, %1887, %1888, %1889, %1890, %1891)
}

def @func_21616() -> Tensor[(96), uint64] {
  @func_21614() /* ty=Tensor[(96), uint64] */
}

def @func_3837() -> Tensor[(15, 13, 11), uint32] {
  %1893 = fn () -> Tensor[(15, 13, 11), uint32] {
    %1892 = @func_2045() /* ty=(Tensor[(15, 13, 11), uint32], Tensor[(15, 13, 11), uint32], Tensor[(14, 16, 5), float32]) */;
    %1892.0
  };
  %1893() /* ty=Tensor[(15, 13, 11), uint32] */
}

def @func_15183() -> (Tensor[(15, 13, 11), uint32],) {
  %1896 = fn () -> (Tensor[(15, 13, 11), uint32],) {
    %1894 = @func_11586() /* ty=(Tensor[(14, 16, 5), bool], Tensor[(14, 16, 5), bool], Tensor[(15, 13, 11), uint32]) */;
    %1895 = %1894.2;
    (%1895,)
  };
  %1896() /* ty=(Tensor[(15, 13, 11), uint32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen831/build/output.py", line 7557, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:23:16] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


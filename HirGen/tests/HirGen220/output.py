import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_192 = relay.var("var_192", dtype = "float32", shape = (3, 10, 6))#candidate|192|(3, 10, 6)|var|float32
uop_193 = relay.atan(var_192.astype('float32')) # shape=(3, 10, 6)
output = relay.Tuple([uop_193,])
output2 = relay.Tuple([uop_193,])
func_195 = relay.Function([var_192,], output)
mod['func_195'] = func_195
mod = relay.transform.InferType()(mod)
var_196 = relay.var("var_196", dtype = "float32", shape = (3, 10, 6))#candidate|196|(3, 10, 6)|var|float32
output = func_195(var_196)
func_197 = relay.Function([var_196], output)
mutated_mod['func_197'] = func_197
mutated_mod = relay.transform.InferType()(mutated_mod)
var_245 = relay.var("var_245", dtype = "int64", shape = (4, 12, 4))#candidate|245|(4, 12, 4)|var|int64
var_246 = relay.var("var_246", dtype = "int64", shape = (4, 12, 4))#candidate|246|(4, 12, 4)|var|int64
bop_247 = relay.minimum(var_245.astype('int64'), relay.reshape(var_246.astype('int64'), relay.shape_of(var_245))) # shape=(4, 12, 4)
func_195_call = mod.get_global_var('func_195')
func_197_call = mutated_mod.get_global_var('func_197')
const_251 = relay.const([[5.060484,4.520353,3.278428,-0.642984,-3.077706,-7.447562,5.295225,9.265463,-1.179815,4.608043,4.079249,-9.684598,-7.077160,-7.242371,-0.661609,2.506158,-6.865300,-0.865888,-4.533790,-9.778602,0.565180,7.603932,-7.019994,7.958353,-2.772850,-0.267356,-9.411283,4.794554,-4.144174,4.254603],[5.817657,1.366765,3.971955,9.415664,-9.858343,-0.213550,4.955270,-0.016360,0.704324,-5.602321,-0.924598,7.422124,5.084353,7.918325,-3.815271,-6.283604,2.538740,1.647950,9.381050,-7.140727,-8.518652,1.282837,-9.288135,3.668516,-6.897208,-6.802840,2.854781,5.111590,-8.384623,-1.943634],[3.836960,1.418130,-5.024056,6.655416,3.831835,3.245421,4.045426,5.788282,2.442282,0.718553,-9.439142,-8.546462,5.200991,1.555276,2.852115,-2.357089,-5.240997,8.329462,-6.588542,7.058978,1.037064,-3.670429,9.036990,-1.994326,-1.062571,-7.349744,1.484719,-8.575815,-4.089127,3.368189],[-3.937041,-7.203381,7.594796,5.269660,6.963653,5.548733,-6.614418,5.237386,-6.902413,-4.742255,9.637992,8.473231,7.367875,7.924411,2.973420,8.134393,-6.044073,0.354569,-0.019433,5.883887,3.429212,-6.704491,-0.470820,3.274087,6.127079,-8.641384,7.053757,-1.663620,2.655354,-3.209983],[-4.611984,-9.667284,-9.716184,-4.874443,5.669469,-7.699905,-8.708790,-3.012508,-1.805440,4.047834,3.216136,-8.779001,-3.657217,3.203264,-7.292337,-7.264583,-8.704541,8.892756,-9.269935,2.439665,9.691450,-3.101771,-2.885478,5.873348,1.069458,-7.950123,-5.631018,3.485206,8.801445,-5.969567],[-8.525700,-6.491198,-1.202757,8.049599,3.206109,-4.373293,-4.303533,5.666486,4.501324,9.616769,1.843368,0.446683,-2.684671,-6.251327,5.073752,0.776575,-7.792381,-1.724425,7.085266,9.756689,-7.341285,-1.689208,1.212816,2.858765,-7.088138,9.287748,0.614982,6.288454,8.241983,1.572500]], dtype = "float32")#candidate|251|(6, 30)|const|float32
call_250 = relay.TupleGetItem(func_195_call(relay.reshape(const_251.astype('float32'), [3, 10, 6])), 0)
call_252 = relay.TupleGetItem(func_197_call(relay.reshape(const_251.astype('float32'), [3, 10, 6])), 0)
func_195_call = mod.get_global_var('func_195')
func_197_call = mutated_mod.get_global_var('func_197')
call_256 = relay.TupleGetItem(func_195_call(relay.reshape(call_250.astype('float32'), [3, 10, 6])), 0)
call_257 = relay.TupleGetItem(func_197_call(relay.reshape(call_250.astype('float32'), [3, 10, 6])), 0)
uop_261 = relay.sin(var_246.astype('float64')) # shape=(4, 12, 4)
bop_265 = relay.logical_and(uop_261.astype('bool'), relay.reshape(bop_247.astype('bool'), relay.shape_of(uop_261))) # shape=(4, 12, 4)
func_195_call = mod.get_global_var('func_195')
func_197_call = mutated_mod.get_global_var('func_197')
call_278 = relay.TupleGetItem(func_195_call(relay.reshape(call_250.astype('float32'), [3, 10, 6])), 0)
call_279 = relay.TupleGetItem(func_197_call(relay.reshape(call_250.astype('float32'), [3, 10, 6])), 0)
func_195_call = mod.get_global_var('func_195')
func_197_call = mutated_mod.get_global_var('func_197')
call_282 = relay.TupleGetItem(func_195_call(relay.reshape(call_278.astype('float32'), [3, 10, 6])), 0)
call_283 = relay.TupleGetItem(func_197_call(relay.reshape(call_278.astype('float32'), [3, 10, 6])), 0)
output = relay.Tuple([call_250,const_251,call_256,bop_265,call_278,call_282,])
output2 = relay.Tuple([call_252,const_251,call_257,bop_265,call_279,call_283,])
func_284 = relay.Function([var_245,var_246,], output)
mod['func_284'] = func_284
mod = relay.transform.InferType()(mod)
mutated_mod['func_284'] = func_284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_284_call = mutated_mod.get_global_var('func_284')
var_286 = relay.var("var_286", dtype = "int64", shape = (4, 12, 4))#candidate|286|(4, 12, 4)|var|int64
var_287 = relay.var("var_287", dtype = "int64", shape = (4, 12, 4))#candidate|287|(4, 12, 4)|var|int64
call_285 = func_284_call(var_286,var_287,)
output = call_285
func_288 = relay.Function([var_286,var_287,], output)
mutated_mod['func_288'] = func_288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_385 = relay.var("var_385", dtype = "float32", shape = (16, 10, 3))#candidate|385|(16, 10, 3)|var|float32
uop_386 = relay.exp(var_385.astype('float32')) # shape=(16, 10, 3)
output = relay.Tuple([uop_386,])
output2 = relay.Tuple([uop_386,])
func_393 = relay.Function([var_385,], output)
mod['func_393'] = func_393
mod = relay.transform.InferType()(mod)
mutated_mod['func_393'] = func_393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_394 = relay.var("var_394", dtype = "float32", shape = (16, 10, 3))#candidate|394|(16, 10, 3)|var|float32
func_393_call = mutated_mod.get_global_var('func_393')
call_395 = func_393_call(var_394)
output = call_395
func_396 = relay.Function([var_394], output)
mutated_mod['func_396'] = func_396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_613 = relay.var("var_613", dtype = "float64", shape = (1, 13, 6))#candidate|613|(1, 13, 6)|var|float64
uop_614 = relay.rsqrt(var_613.astype('float64')) # shape=(1, 13, 6)
output = uop_614
output2 = uop_614
func_636 = relay.Function([var_613,], output)
mod['func_636'] = func_636
mod = relay.transform.InferType()(mod)
var_637 = relay.var("var_637", dtype = "float64", shape = (1, 13, 6))#candidate|637|(1, 13, 6)|var|float64
output = func_636(var_637)
func_638 = relay.Function([var_637], output)
mutated_mod['func_638'] = func_638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_689 = relay.var("var_689", dtype = "float64", shape = ())#candidate|689|()|var|float64
var_690 = relay.var("var_690", dtype = "float64", shape = (15, 12, 9))#candidate|690|(15, 12, 9)|var|float64
bop_691 = relay.minimum(var_689.astype('float64'), var_690.astype('float64')) # shape=(15, 12, 9)
func_284_call = mod.get_global_var('func_284')
func_288_call = mutated_mod.get_global_var('func_288')
var_704 = relay.var("var_704", dtype = "int64", shape = (192,))#candidate|704|(192,)|var|int64
call_703 = relay.TupleGetItem(func_284_call(relay.reshape(var_704.astype('int64'), [4, 12, 4]), relay.reshape(var_704.astype('int64'), [4, 12, 4]), ), 1)
call_705 = relay.TupleGetItem(func_288_call(relay.reshape(var_704.astype('int64'), [4, 12, 4]), relay.reshape(var_704.astype('int64'), [4, 12, 4]), ), 1)
bop_707 = relay.equal(call_703.astype('bool'), var_689.astype('bool')) # shape=(6, 30)
bop_710 = relay.equal(call_705.astype('bool'), var_689.astype('bool')) # shape=(6, 30)
output = relay.Tuple([bop_691,var_704,bop_707,])
output2 = relay.Tuple([bop_691,var_704,bop_710,])
func_730 = relay.Function([var_689,var_690,var_704,], output)
mod['func_730'] = func_730
mod = relay.transform.InferType()(mod)
mutated_mod['func_730'] = func_730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_730_call = mutated_mod.get_global_var('func_730')
var_732 = relay.var("var_732", dtype = "float64", shape = ())#candidate|732|()|var|float64
var_733 = relay.var("var_733", dtype = "float64", shape = (15, 12, 9))#candidate|733|(15, 12, 9)|var|float64
var_734 = relay.var("var_734", dtype = "int64", shape = (192,))#candidate|734|(192,)|var|int64
call_731 = func_730_call(var_732,var_733,var_734,)
output = call_731
func_735 = relay.Function([var_732,var_733,var_734,], output)
mutated_mod['func_735'] = func_735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_859 = relay.var("var_859", dtype = "float64", shape = (14, 6, 1))#candidate|859|(14, 6, 1)|var|float64
uop_860 = relay.acos(var_859.astype('float64')) # shape=(14, 6, 1)
uop_866 = relay.cos(var_859.astype('float32')) # shape=(14, 6, 1)
uop_880 = relay.sinh(uop_866.astype('float32')) # shape=(14, 6, 1)
bop_884 = relay.right_shift(uop_860.astype('int8'), relay.reshape(uop_880.astype('int8'), relay.shape_of(uop_860))) # shape=(14, 6, 1)
func_284_call = mod.get_global_var('func_284')
func_288_call = mutated_mod.get_global_var('func_288')
var_889 = relay.var("var_889", dtype = "int64", shape = (192,))#candidate|889|(192,)|var|int64
call_888 = relay.TupleGetItem(func_284_call(relay.reshape(var_889.astype('int64'), [4, 12, 4]), relay.reshape(var_889.astype('int64'), [4, 12, 4]), ), 4)
call_890 = relay.TupleGetItem(func_288_call(relay.reshape(var_889.astype('int64'), [4, 12, 4]), relay.reshape(var_889.astype('int64'), [4, 12, 4]), ), 4)
bop_899 = relay.floor_mod(uop_860.astype('float64'), relay.reshape(uop_880.astype('float64'), relay.shape_of(uop_860))) # shape=(14, 6, 1)
bop_903 = relay.less(uop_880.astype('bool'), relay.reshape(bop_884.astype('bool'), relay.shape_of(uop_880))) # shape=(14, 6, 1)
uop_914 = relay.asin(uop_866.astype('float64')) # shape=(14, 6, 1)
func_195_call = mod.get_global_var('func_195')
func_197_call = mutated_mod.get_global_var('func_197')
call_923 = relay.TupleGetItem(func_195_call(relay.reshape(call_888.astype('float32'), [3, 10, 6])), 0)
call_924 = relay.TupleGetItem(func_197_call(relay.reshape(call_888.astype('float32'), [3, 10, 6])), 0)
bop_926 = relay.subtract(uop_914.astype('uint16'), relay.reshape(bop_903.astype('uint16'), relay.shape_of(uop_914))) # shape=(14, 6, 1)
func_730_call = mod.get_global_var('func_730')
func_735_call = mutated_mod.get_global_var('func_735')
const_930 = relay.const(-7.330867, dtype = "float64")#candidate|930|()|const|float64
const_931 = relay.const([-7.037645,-3.422624,-2.493873,-2.141217,7.429362,8.685828,1.039523,-4.420207,-9.403826,-5.484675,-9.078109,-9.608052,4.887982,6.463561,-4.429831,3.291028,-1.883691,-0.089600,3.575135,5.817274,3.042387,3.200182,0.883582,9.013066,-5.093635,5.791340,9.016187,-6.235519,9.513270,1.608530,-9.298440,-8.234304,-1.939497,4.813450,-6.234761,-9.554577,-1.878216,-3.609261,-6.774259,0.680813,6.110364,9.258826,-6.415263,-9.881622,9.328068,3.738829,-5.239755,-7.937498,-9.044861,-7.581742,2.700735,0.343320,-3.205818,9.502822,7.148190,-8.635706,0.214603,8.549247,4.920503,4.519592,8.148091,1.095428,7.782371,3.555475,1.840528,-9.858607,-9.161443,-8.375659,9.635780,0.922342,6.320099,9.561087,1.461963,-5.720400,-9.815393,2.062819,8.857884,-2.683385,3.418839,-6.959256,4.462522,4.623797,-3.817940,4.871166,4.947571,-8.998108,-4.246837,5.403332,-5.505795,-8.028829,-0.735506,1.714428,-6.491026,-4.458069,4.521446,6.200524,7.060406,-4.226724,-2.519656,3.247449,6.158572,-9.921565,1.077192,1.116194,-2.279598,4.026663,-9.988769,-0.514569,-6.650385,-3.437267,2.296459,-8.888364,-6.619178,1.847365,-3.027147,-8.758092,-3.061661,7.651395,-6.956718,-6.516235,3.211672,5.255323,-6.742983,-5.657165,-5.786541,-7.175438,-4.961625,-6.461247,8.504832,-1.347353,-6.461972,2.306295,4.052450,4.095789,-2.654322,-1.379410,2.015049,4.335248,7.204293,-3.847632,-4.968246,-0.361289,2.906086,2.000546,-6.711909,5.061249,-4.612548,9.340767,0.572272,9.162324,-7.706581,8.739559,-5.040414,4.145683,2.938258,7.336413,-8.632170,-0.810287,8.140030,8.546547,2.783714,-8.074210,7.296990,-1.163850,-1.008746,-2.345411,4.583911,-9.941783,-7.113455,-8.164019,1.714095,7.635258,5.326817,-9.651552,2.845275,-0.026500,-0.890743,-5.432247,-3.856654,-9.772420,4.466659,-7.440492,6.116836,-6.681320,-3.262760,3.882379,-4.160186,-8.334366,-5.743562,-7.452146,-4.368630,3.292675,-3.407391,-7.877804,-6.418566,5.290670,-4.539165,-6.925754,7.498197,6.814096,2.248382,1.427097,-6.436496,2.629035,-2.818306,-1.083035,-9.331346,5.057869,-6.455381,-5.216925,4.808516,-4.897895,9.063044,7.048959,4.862693,-7.103592,9.355167,-0.728917,1.415927,-2.393409,-6.922328,-9.206642,-5.284389,4.030351,-4.178246,4.829695,6.800680,6.337132,4.669176,4.363456,4.598461,4.177315,-0.422844,-3.004419,-5.514367,1.394755,-3.130429,9.983296,-4.069735,3.815621,-6.047064,-4.747072,-9.065135,-8.963216,-9.250935,-7.174551,-0.918911,-8.316017,1.420359,-1.405219,6.966145,-4.200304,-0.082643,8.940701,-9.459372,4.927656,2.502331,3.023192,9.272481,4.013757,6.522424,8.739152,-2.361369,-4.568354,7.915287,6.890479,3.234579,-6.005570,0.940245,-8.799574,-9.696165,1.521056,1.495838,6.409191,-4.234371,-3.160544,-7.986715,6.401648,3.280695,-9.707523,1.848319,5.565435,-1.459273,-1.754153,3.652911,4.747491,-6.818837,-2.107646,2.094942,-0.755059,-0.937679,-7.513662,-2.016303,9.048535,9.316867,-0.096481,0.951673,8.658569,8.487687,-4.905601,-7.123486,-4.811568,-2.739904,-4.484634,-2.610339,7.188389,0.685852,8.868159,-1.070552,5.854672,8.503611,-6.843911,-0.696152,-6.389269,2.282338,-1.130115,-7.673737,-7.810474,0.622786,2.658404,3.860339,3.649814,-4.606857,-6.278222,7.256508,-0.701011,-2.623566,-4.503267,2.567904,-8.322387,9.125291,-5.811433,-9.106923,-5.623737,-4.518958,0.921197,-5.296798,-6.683180,-6.639825,0.824012,1.611694,-3.779708,-7.144551,-1.594901,9.346476,-2.904441,5.001369,-6.152192,0.355551,-7.095890,-7.278377,6.467583,-5.169747,7.680715,9.006462,-3.113601,2.355148,-6.826284,0.677377,8.962126,6.640294,8.272590,-3.222080,-6.645492,-1.288596,2.296808,9.102792,-3.993838,6.171591,-2.025284,-5.406787,0.765596,0.959515,-0.705647,-5.912939,3.326431,1.569263,-9.297389,-8.624345,-9.270024,1.876106,-3.593665,-1.476999,-3.300841,-3.761285,-2.196987,-8.421853,-2.372366,6.004457,-4.047774,-9.447536,-0.306061,8.565296,-2.852428,3.655405,-6.985145,-5.424588,0.882119,2.140131,-9.321312,-0.477118,0.038397,-2.507837,-8.893226,-4.691919,7.782969,-2.024768,-2.406670,4.156227,-9.346486,8.534290,0.044469,2.672905,9.217433,7.495923,-7.105645,-3.023517,-9.181960,-9.761809,3.343899,2.210231,0.693300,-7.391056,0.910725,-5.023783,-3.179082,0.659848,-1.754850,8.038653,9.820639,3.362782,-1.637260,6.948725,7.443269,-5.297238,-6.373855,6.373527,6.918213,-5.305746,7.284208,-7.893331,-7.064307,-1.492389,-5.951956,-9.341506,-2.313888,-4.863004,-5.790052,1.810950,4.864645,-3.891619,0.120491,0.554320,9.590329,-3.713033,1.547509,-5.198959,-6.526026,-8.045778,-9.552586,-3.827503,-0.464122,-8.251058,0.125592,-5.333551,5.893871,-4.327203,0.795044,0.465125,6.563642,1.879280,2.485910,6.282818,-8.840951,-6.310072,-5.690599,1.468720,1.881546,8.078335,9.197364,2.350792,-8.733282,-7.521756,-6.995313,-6.292877,5.021562,-7.385787,-7.689349,-3.595644,8.716610,4.379592,9.983111,-3.481509,-7.278224,5.924217,-7.099937,-6.268928,3.768643,-5.753100,0.979066,0.518907,-0.784263,7.983081,3.344944,-2.222268,-5.245692,1.202353,-0.065981,5.541832,2.372951,0.225491,3.357166,0.931518,-7.720314,-3.721003,-2.365402,-6.223987,1.755141,0.155065,9.031405,0.282525,-2.413410,1.068908,4.613292,0.663270,-7.676825,-8.472157,8.715592,-1.237711,8.677122,3.299508,-3.735771,-4.894836,3.317521,8.614109,0.870895,-5.201182,0.967444,4.404053,-3.645489,8.287171,4.709961,3.085270,6.624687,-3.142820,-1.828133,0.550171,8.849970,1.358922,3.761713,8.826837,9.126415,-2.069444,7.103109,6.011434,2.692657,-5.949530,-6.406082,8.786351,5.902413,-4.660214,7.545461,6.489717,-3.972770,4.319210,9.666496,-1.065689,-1.717989,9.709284,-3.494337,-8.329185,3.907589,-7.357162,-9.056964,-9.528316,4.587007,3.297177,-4.648805,6.428536,7.556232,-0.343429,0.124926,-5.122720,-9.887877,-4.867402,-9.351433,-0.744723,3.971860,-7.300743,-1.341613,-3.009534,2.754800,-1.125096,-7.021620,-7.889621,-0.810983,-2.587869,-8.837209,0.244267,-7.289845,9.494232,-4.403584,-7.777391,1.228981,1.558180,8.049194,0.085839,-3.349671,-0.878642,-1.535842,-7.544670,-8.634907,-7.423056,0.051968,3.899820,3.158295,2.399026,-6.550377,-3.058459,-8.432213,1.986914,8.653820,-5.661285,-5.397496,-0.134221,-2.326331,7.922134,4.862135,9.676579,4.715630,-9.139119,2.769312,1.524374,7.390670,6.898754,4.530945,-5.866536,-4.335570,-9.368046,5.114961,3.033457,-3.460489,-9.030045,-2.556536,-2.092380,-1.226637,8.941923,-7.707616,3.173042,-1.700489,4.650948,7.041296,-0.358939,4.743152,-3.864205,1.636987,-3.190515,-4.204199,3.656374,-4.386412,7.152368,-6.620616,-9.429994,0.747817,-4.076736,2.989112,9.965349,2.069211,-0.719926,0.166251,-8.413219,-7.513312,-0.352061,7.705042,7.207508,1.511300,8.683430,6.211914,9.516093,4.896311,-9.439426,8.128937,-5.694588,3.673269,8.752299,4.061314,9.478531,-1.434168,9.876104,7.048784,3.066876,4.834553,-0.302260,7.979699,7.631199,-2.569897,7.798734,2.088577,-0.629227,-9.968723,0.382139,5.554222,9.245152,-7.072067,-6.812929,7.618609,6.430756,-4.054857,-9.759234,3.075247,-2.636147,4.214788,8.339329,1.397186,-1.640721,-9.995816,-1.641982,-2.055370,8.757729,-5.985332,7.247411,-5.243604,-7.662165,-9.243136,-2.905930,-3.242004,7.198017,-5.690626,-1.808187,6.118622,1.836300,8.248396,8.613272,3.658404,-5.281446,-7.319398,7.469584,-5.881664,7.717095,-2.423172,-3.996678,1.177237,8.750396,0.726034,5.024136,-8.872355,-8.989355,-9.023275,1.276056,-5.700130,7.440035,7.296806,8.820048,-8.039959,1.118594,-7.192265,2.141627,8.932707,5.428154,5.988107,9.843718,5.753837,7.226300,-1.065748,4.053478,-2.486846,1.981687,-6.335879,-9.535148,-0.339278,7.364289,0.818149,-0.705388,8.604566,3.296748,-7.279515,-4.009004,-1.949712,-7.947647,9.085163,-7.778586,-1.054915,3.846970,-4.502516,-4.885487,8.954462,-0.361854,-2.837221,-3.122786,-2.429697,-1.669511,-7.866984,5.129780,-9.494459,1.392608,7.865241,-3.088976,-6.877541,-9.559285,8.035187,5.610118,8.149417,1.131501,-4.314810,9.982205,-1.899575,6.803332,6.037752,8.392260,-4.038283,9.461429,-6.433827,-7.451243,8.992522,-3.536173,2.075159,-5.599601,3.446620,-3.022895,9.026208,-8.031792,-8.690277,-3.707210,-1.290996,7.065503,9.596425,2.691937,-1.187151,-7.397553,-4.566252,-8.676948,-3.921782,-5.862569,2.816765,0.165468,7.168248,-1.506226,6.842621,3.270449,-2.634561,2.739090,0.652725,-3.889848,-3.866823,8.653227,4.247355,-8.762386,-1.272005,8.875483,7.603354,-4.734054,-6.880464,-8.713075,-7.075378,-6.803875,1.624031,-9.661818,-8.469318,-3.112072,0.903864,7.792711,-9.573307,-2.669942,9.726989,-5.434479,-3.017450,4.561616,0.175778,-7.194218,3.306207,-7.042172,-6.539883,5.578308,1.064822,9.513194,0.504938,5.548003,-2.004809,8.443996,2.424729,2.464624,-3.029899,5.988259,-6.356028,9.237587,-3.475024,-1.762068,-6.076301,8.144391,-7.867522,-1.147225,0.560321,5.095661,2.337815,2.973970,-4.235703,-1.593297,1.694495,-1.560981,-2.745180,6.939629,9.345970,4.569078,9.096053,-5.119508,-1.117761,-1.943493,-0.357997,1.801318,-0.586007,6.964586,2.465502,8.355173,2.085620,6.191598,-0.600744,-1.488307,-7.091313,2.206112,-2.799872,2.737515,1.218795,-8.749188,1.268868,1.672772,7.320036,-1.146163,1.430843,8.135806,1.615461,-6.566828,-1.999692,-0.026627,-5.756558,-4.527305,9.472532,3.518599,9.264173,-0.590829,-0.764670,-1.457909,-8.622251,-0.265059,8.516952,-9.435130,-2.623086,-0.616648,5.343465,-4.126711,-5.817577,-4.193972,-2.776155,-9.773252,-0.694570,1.829165,2.055030,-9.615035,-0.869687,6.924241,-0.699534,8.543424,-6.603912,0.629653,-7.637391,9.501121,7.019138,-5.145079,-0.261008,4.540007,7.722984,4.157733,5.162732,4.091529,-1.146807,1.927684,-4.477099,-9.494394,-7.050466,0.367442,6.666672,6.435534,-2.632824,-2.538261,7.375235,9.432691,-3.087131,5.432261,-9.883291,-4.695170,1.230262,-9.368996,-3.717762,-8.172092,-4.007206,7.938694,-2.242019,-8.748220,-2.789402,0.406617,0.692508,-0.375917,8.221139,0.133502,-5.715835,0.942326,6.043098,-8.598921,-8.642573,-2.827220,-3.870821,-2.433742,-6.015868,3.840260,2.619574,-9.231919,-6.732665,6.001655,-5.635903,6.114684,-3.398315,-6.052389,-0.652688,8.268815,6.274154,-0.412581,1.699412,5.944853,1.810008,-3.912176,3.797891,0.841306,8.978121,-4.332529,6.405409,6.421093,-8.770892,1.774851,-8.411568,9.195806,-5.523811,0.203229,-3.327622,-9.365563,5.907447,-9.471220,1.171729,-4.157174,-9.835640,0.343622,2.314789,5.508537,-4.138659,-8.142684,8.701068,3.061577,2.061078,1.792443,5.340661,-1.159887,-9.606268,0.129598,-5.593524,6.189195,-2.051189,2.283221,2.452060,8.489010,8.714686,-1.770819,7.258372,8.717423,-3.376195,-4.871323,-9.347770,-8.807659,-5.379738,-4.575521,-5.960553,6.040280,-6.221133,-6.200585,-5.030513,-5.899199,6.757901,-7.790725,-9.343287,-4.524720,1.778787,-1.269796,2.997003,-1.631233,-8.035829,-9.001949,-2.716473,-8.854871,-3.644989,-1.136731,-0.190423,1.121727,6.453399,7.981830,0.866836,-3.186883,-2.436559,-6.551452,-5.202574,9.213221,9.450665,9.167614,-2.777146,6.107908,-8.451625,5.698269,-6.484648,-1.411446,-4.336400,2.141905,9.367668,-6.187336,-6.538491,4.261135,-1.975134,1.996196,4.833151,5.861213,-9.614662,-6.075990,2.314528,-9.201566,-8.981362,0.737485,-8.573471,-4.879895,6.230362,8.297507,4.179856,-3.820886,-1.036411,-9.017587,-0.388900,4.497472,-6.326268,8.991877,7.715072,5.548380,-0.782089,-1.423273,4.899971,7.130276,-1.576286,-6.478782,2.868748,1.002274,-0.799468,5.468917,6.430956,-6.374399,7.316102,9.939459,5.906874,-4.875775,-3.956367,-8.116167,-3.802320,-5.863535,-2.565158,-8.782187,1.226663,2.684368,5.599845,-0.735934,7.433807,-9.634705,-0.493514,4.697455,-2.987219,3.855901,5.927289,-6.711751,2.713832,-9.419311,4.610231,-9.414095,-9.346070,0.714261,-8.521801,-1.383332,-5.472679,-7.185998,5.320678,-0.511798,-4.578255,-4.264070,0.230488,6.728266,8.054416,-3.248817,-2.966432,4.331961,2.566957,5.354520,-0.212769,4.964738,-1.175075,4.218419,-6.749183,-5.786253,3.408481,-8.485728,2.344833,-2.566849,9.715363,-5.221570,4.384684,-9.444533,-5.959999,-7.951119,2.061320,0.792783,-2.854135,8.846367,-2.597066,5.485697,-2.266255,-6.393964,1.297065,-8.147959,8.823220,-0.991589,-4.388455,9.730184,-8.535877,5.722760,-5.263474,-4.179542,0.784131,7.034658,0.752376,-2.730640,-2.620334,9.656938,7.270610,-5.855146,-8.160958,3.208916,2.330580,5.634528,-2.186462,7.446608,7.039232,8.653720,-0.860841,-1.072132,9.793938,2.764329,3.593493,0.204322,2.236175,-6.702498,1.253152,-0.464352,-2.159128,-7.505366,3.081472,9.342924,1.222873,1.405002,8.956186,1.147875,-3.966892,-0.688935,-7.835419,-9.148593,4.952789,4.747577,-3.719320,0.307614,-7.171636,-4.868991,-2.211824,-5.438045,-5.069044,3.755636,-6.256039,0.838068,6.450679,-0.100325,4.203743,7.241717,3.738203,0.494340,9.245913,5.411588,3.360872,3.854446,9.593257,7.062897,2.210866,-0.148597,-2.405353,9.167222,5.171521,9.940599,-4.907601,-2.512990,5.869012,-5.965143,-1.635735,-0.968706,8.594765,9.490809,-8.806455,-2.414883,7.714923,8.933805,-5.836281,-5.032939,-6.008975,8.184652,-9.637643,6.201379,9.925916,-7.506620,8.656504,2.942514,-5.004867,0.679257,-6.161732,6.552013,-4.601735,0.470449,5.530818,7.789776,1.754600,-4.792635,-4.156484,1.846726,8.389960,1.444465,9.243625,2.212641,-4.809200,-0.280552,4.592974,-2.333618,-3.409228,-0.421357,3.783869,2.364639,-5.341351,3.596291,7.067442,7.421935,-2.061042,0.168856,4.738654,-2.174902,-7.125267,-1.430879,-1.024241,4.402616,-1.056369,-7.005937,0.651101,-4.054369,2.089111,-2.822114,6.219063,-5.314146,3.391968,9.649462,-6.528793,-4.441898,-1.302901,-7.179042,8.169510,0.280378,-8.726753,-6.095695,3.087694,5.633692,-6.355623,-6.193358,0.333636,3.024096,-9.381770,-4.745358,-1.519678,2.478911,2.686438,0.151270,-7.193321,6.545845,-5.058956,-7.814497,-4.449127,2.950223,-5.829949,-3.886980,-7.864914,-5.017190,-4.241971,2.629497,0.864194,8.461705,2.589765,9.792220,4.939212,-5.853591,-7.491873,-5.456933,-2.294102,4.057507,7.435737,2.869799,-5.890085,-7.623336,-3.579619,4.066145,2.763943,-8.389800,-8.843899,-7.402766,-5.118014,2.542531,9.837573,-8.821664,3.938242,-7.677274,1.557402,-8.402429,8.871357,1.165165,0.365931,6.639684,6.549991,0.198334,-0.213430,-0.787457,-1.630664,1.707305,2.091798,4.494880,-5.243986,6.369937,7.197186,4.691784,-4.487861,-1.338027,5.743391,-3.047771,-0.882321,-1.403121,6.955358,3.233183,8.239930,-4.435752,-4.243846,1.871712,1.285324,2.899065,1.364985,-4.369854,4.738946,2.925901,-2.836517,3.747028,0.812249,9.574754,-1.234730,-4.401243,-0.494234,-1.256493,-1.258139,9.734728,-6.132670,4.346372,3.296862,-7.204895,-6.590232,7.255411,9.780198,0.003588,5.567491,-4.556739,-9.976310,4.311584,0.995305,4.491903,9.141806,9.761885,8.393506,0.977120,-1.021209,5.124182,2.820118,-9.041268,-8.752307,9.604119,-6.729125,2.653435,-6.135426,4.291889,1.780861,-4.861953,9.969240,-5.826040,-1.470081,8.471103,1.035223,2.633582,-6.518779,-5.302250,-4.846553,-6.860814,0.249382,5.568447,-5.776317,3.631409,4.892841,-3.013588,3.957441,-6.622115,3.494966,0.865576,-5.287680,6.608754,-2.182604,8.066426,-2.987003,9.504597,-0.067817,5.384880,-5.222394,-9.959301,-0.263920,-3.261256,4.252278,0.457968,7.056176,-9.771459,-6.710032,-0.425099,1.503214,1.986881,6.687428,2.247613,9.730149,-7.381697,0.872212,1.836701,4.045765,4.256189,-1.527867,7.290059,0.093291,-0.567695,-4.564456,-1.385667,-8.312247,5.560052,0.719029,6.249856,8.199647,-7.084189,-7.325960,8.616467,6.384964,7.307858,0.464447,0.230809,-9.456655,-2.236002,-3.735528,-3.729019,-8.397091,-9.096576,-6.007877,-0.585722,0.164012,-4.576183,7.937890,-7.070962,-5.749528,-9.439967,-6.507288,3.430100,0.904300,7.408303,-1.220312,1.230769,4.591344,-8.563381,2.814815,-5.799956,7.225701,3.971382,-1.816089,-6.930749,0.261809,-2.445230,-2.257324,-7.019023,-0.654312,-3.609161,2.876849,6.670537,3.932194,-4.752712,0.552202,-6.215984,4.568109,4.114916,0.050351,-6.670294,-3.067621,-6.840039,-6.737256,0.717620,5.804775], dtype = "float64")#candidate|931|(1620,)|const|float64
call_929 = relay.TupleGetItem(func_730_call(relay.reshape(const_930.astype('float64'), []), relay.reshape(const_931.astype('float64'), [15, 12, 9]), relay.reshape(var_889.astype('int64'), [192,]), ), 1)
call_932 = relay.TupleGetItem(func_735_call(relay.reshape(const_930.astype('float64'), []), relay.reshape(const_931.astype('float64'), [15, 12, 9]), relay.reshape(var_889.astype('int64'), [192,]), ), 1)
output = relay.Tuple([call_888,var_889,bop_899,call_923,bop_926,call_929,const_930,const_931,])
output2 = relay.Tuple([call_890,var_889,bop_899,call_924,bop_926,call_932,const_930,const_931,])
func_937 = relay.Function([var_859,var_889,], output)
mod['func_937'] = func_937
mod = relay.transform.InferType()(mod)
mutated_mod['func_937'] = func_937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_937_call = mutated_mod.get_global_var('func_937')
var_939 = relay.var("var_939", dtype = "float64", shape = (14, 6, 1))#candidate|939|(14, 6, 1)|var|float64
var_940 = relay.var("var_940", dtype = "int64", shape = (192,))#candidate|940|(192,)|var|int64
call_938 = func_937_call(var_939,var_940,)
output = call_938
func_941 = relay.Function([var_939,var_940,], output)
mutated_mod['func_941'] = func_941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1014 = relay.var("var_1014", dtype = "uint8", shape = ())#candidate|1014|()|var|uint8
const_1015 = relay.const([[[10,3,10,-4,2],[6,9,-4,-2,-5],[-8,7,10,-8,4],[8,9,-7,-1,-6],[2,9,-4,2,-9],[-3,7,-5,-9,-7],[4,8,-1,10,10],[3,8,1,6,-7],[4,4,-9,-8,1],[3,5,9,-8,7],[7,-10,-3,-8,-6]]], dtype = "uint8")#candidate|1015|(1, 11, 5)|const|uint8
bop_1016 = relay.minimum(var_1014.astype('uint8'), const_1015.astype('uint8')) # shape=(1, 11, 5)
func_730_call = mod.get_global_var('func_730')
func_735_call = mutated_mod.get_global_var('func_735')
const_1026 = relay.const([-5.351348,-9.080266,8.796121,4.474314,-7.686796,7.652385,6.371984,3.505729,8.194089,-1.584465,-2.553847,2.173854,2.919081,0.580287,-3.479972,9.978302,9.518519,-6.782885,-3.075174,6.812149,-6.000221,-4.667345,1.156708,8.022733,5.660228,-3.748855,0.792154,-5.977925,7.724661,-2.892821,-7.161329,-2.132883,1.908178,1.329534,8.329262,-0.265288,2.507606,5.555037,-8.985004,0.482288,-4.644817,4.781147,8.484890,-0.612767,-2.536910,-7.820956,-3.045060,-1.458345,-1.980662,1.380961,-5.163176,0.144169,-9.685368,4.297039,-4.513294,-1.537730,-6.261158,-2.419873,7.250035,-1.568661,4.558491,5.798509,-3.460652,5.880549,5.360174,-4.791437,0.219814,4.720195,-0.811459,-4.158338,-3.975492,3.921379,9.256171,-8.581420,-4.005471,-3.776365,-7.124777,3.874034,3.123379,3.900471,1.324374,7.847097,8.333030,-8.884396,2.665193,-3.866014,-4.611304,-6.818545,-3.889838,-5.407188,2.493394,-1.942917,-9.621692,-2.873599,6.381326,-4.285791,3.837350,8.832071,6.879705,-2.298259,-5.151354,-9.912745,-8.595534,-7.994842,8.398381,5.413086,2.877671,-8.945720,3.482834,-7.394621,-0.233035,4.014974,-7.991720,8.325379,7.194454,-4.840275,-4.937162,-0.875262,0.842401,1.112882,7.724207,1.084320,5.038930,6.786192,8.035268,2.568753,-7.490061,9.611392,1.955932,-9.873355,5.134225,-1.825580,3.889266,-4.075204,-2.416665,-9.596004,7.866369,-3.707337,8.451745,0.038109,4.218641,1.048314,-8.730110,-1.917409,3.648996,-5.006390,0.195019,-8.150974,6.986451,6.839777,7.740662,7.685430,-5.434088,4.529595,3.061376,-1.223699,2.511635,1.210373,-7.615404,7.562938,-0.821932,-9.863025,-4.760303,3.773954,-7.103526,1.596919,-3.133155,-1.072922,0.414390,-7.188234,-0.922796,7.418290,-2.468959,7.999614,7.384586,-7.203288,-1.459424,1.482522,-0.116878,-7.341283,-2.956864,-5.899202,7.877754,1.067369,-7.562608,3.691066,-8.654219,-6.814062,6.158958,9.624188,-1.785412,9.090134,8.644530,5.334906,5.740065,-3.479925,-8.477182,-9.095268,8.207324,-8.205249,5.474139,-9.261673,-9.706287,5.149878,1.843755,-0.450787,-2.427749,-1.080713,1.138028,9.811539,-1.199883,-8.369452,-6.621929,-4.210690,-4.229820,3.720351,-4.802537,5.180446,-4.013353,8.280281,6.643159,1.068050,7.481342,1.353760,-9.349399,9.192280,-0.635854,0.295488,-5.950820,-6.696452,-7.873140,-0.243339,-2.792756,1.335967,-7.541253,-8.702611,0.819911,-5.056407,5.363439,0.553817,-7.031802,-7.805962,-6.158759,-9.275182,0.398665,1.104191,-1.144569,4.637626,1.460668,-0.402390,7.513805,1.672512,-2.919418,0.524183,-8.889176,9.107109,0.572814,6.303089,5.982945,-3.383394,0.682265,-6.880541,5.644521,-4.294270,1.992793,2.722071,5.770192,1.182221,-8.266673,1.787265,4.424475,7.812385,3.822572,-8.940267,-3.955405,2.483994,-9.528257,-5.669391,7.345458,-0.886384,0.982398,5.599008,-4.848335,-6.366289,7.008146,7.706348,4.691880,2.078998,-7.524178,2.345623,-2.738121,-8.109409,0.050212,7.879687,6.873167,4.912369,4.484820,6.812967,0.947925,-9.824963,8.354533,1.068280,-7.089945,9.681631,-8.369759,-1.323870,-3.034450,5.832951,7.503687,-2.587740,-2.059376,8.694185,1.682382,6.396166,-1.038204,0.795368,-4.064252,-1.886847,-5.289035,3.159049,1.296206,0.272768,-6.252158,7.970078,0.565582,-6.267898,4.883059,0.799285,-3.310348,2.798355,-3.416893,-3.533806,9.909549,-4.186290,9.780995,-9.227475,5.901883,-8.753165,-8.017845,7.327040,1.369076,5.991085,1.412996,2.595231,3.261626,-1.976344,-3.712920,-1.081954,-4.362167,9.902791,-3.204282,-9.447831,4.545114,7.107092,-3.331408,-9.468654,-5.116460,-7.881753,-8.351736,7.404584,-1.238039,-4.267181,0.416891,-6.918169,2.598607,9.048946,5.956417,8.993065,-3.976900,-1.893452,5.203444,-5.355019,-4.566757,3.202781,9.979302,-5.519661,-0.077341,-7.722662,-0.908735,8.984418,-1.171767,2.766624,-4.831779,-8.263188,-8.527941,2.548097,6.316499,1.224810,-5.500185,1.903338,-9.474618,4.976954,-9.933610,-6.247208,-4.144653,-5.450616,-3.432941,-3.493981,-1.656716,3.154482,9.529715,-6.089230,-7.015455,-5.389844,-2.544017,-6.448467,-0.838100,4.475024,4.798845,5.738050,-2.220444,-6.776382,2.727041,2.705523,-8.223884,-8.883420,-9.201099,-1.554104,7.336895,8.129121,-5.712008,-0.047913,-6.888609,1.829805,4.445015,1.449370,-7.172533,-3.568722,5.053496,0.650361,-7.889912,9.086142,-6.456800,9.992372,7.605973,4.366057,4.341270,-6.273137,-0.510423,7.964307,-6.256493,0.502354,8.835727,-7.835630,7.026902,-2.646248,-5.833665,-9.699654,5.531216,-6.108802,7.721977,3.145142,8.689842,-0.046642,2.872724,5.182384,-5.842417,2.927509,-9.205686,-0.851680,2.439227,6.730862,3.725655,5.290813,8.482394,9.375324,7.579407,9.615169,-2.593580,-4.032362,-5.665580,6.627722,-2.751110,-3.042509,-6.922745,2.031344,2.123718,2.706337,-4.873295,4.708099,-1.068755,-1.406296,0.742065,-0.231769,0.915394,-7.068482,-4.580840,7.942781,-6.042111,1.580098,-0.376183,-0.840234,4.915548,-1.404044,-5.548283,-5.875228,-2.252351,7.099473,-5.287749,0.837154,-8.930877,2.066739,7.841542,-6.315414,-4.456363,6.069868,-1.262139,-4.580779,1.103552,9.638329,9.437661,6.545665,4.355175,8.276733,-5.688184,3.551930,-0.495515,-9.382785,0.307813,2.337459,-2.410563,8.950191,9.087329,1.983037,-4.279951,-4.173219,-4.063721,-5.985069,-9.105494,7.996763,-2.625490,-2.833133,-7.711687,1.952108,8.245338,7.048569,5.141822,-6.042905,8.178298,4.204567,-2.851111,7.013852,5.168453,-9.771476,8.951714,4.153562,8.055276,7.364095,-0.114622,7.868665,5.885743,3.110838,8.098100,0.594529,3.638014,3.945564,7.152386,-9.934878,-7.536463,-9.249592,8.631250,1.502845,0.662882,-9.965905,7.620088,1.226355,-0.771958,1.385873,-7.763677,-6.569315,-3.202064,-7.617161,-9.021915,-2.285376,8.865210,8.333477,-1.579486,0.307898,2.918464,3.995482,-0.141958,0.686729,-4.539970,-0.473834,-4.916156,-2.629212,-7.671752,-7.934678,-4.487561,1.533047,5.156391,-9.347020,-8.413139,-5.183649,2.113369,-2.403493,-3.585339,-3.830066,4.767750,-3.867532,-5.797436,-9.688041,5.798929,5.059650,6.401116,8.475205,4.869675,1.728348,-4.700634,0.730380,4.218460,8.751016,-8.494722,-7.170730,-6.403180,2.811217,-8.691740,-5.116238,-6.797369,6.846524,-0.546692,-4.743083,-8.849426,6.612804,9.254046,-1.507240,0.505147,6.520145,5.803599,8.989236,-2.253475,-4.391030,-4.330378,-3.789260,7.810589,-9.782040,-3.298088,4.440612,-1.908971,6.277948,-2.859332,3.697406,3.177658,6.052776,-1.639610,1.553021,1.327366,7.573136,-8.176320,-7.927738,1.830868,5.730222,1.109184,-5.351154,-8.754605,-7.136098,8.517178,-3.898530,-8.658427,-1.937505,-8.441661,9.142808,3.725258,2.625442,-8.889633,5.594416,-4.140486,4.048994,-9.405710,-0.481975,-5.869061,0.339559,-8.117392,-5.140035,2.878144,1.404466,-8.057059,2.497541,-3.155258,5.151888,-4.663889,-7.126980,-1.668059,-6.539842,-8.841104,5.436487,3.685776,-4.869753,-0.571958,-8.157862,3.257031,8.227891,-0.676893,-3.117051,0.837109,7.449593,-5.719730,-6.176621,-8.502118,5.100174,1.699715,5.672504,1.915851,-5.130981,-1.241984,4.500086,9.314101,-1.193361,3.225948,-6.451001,-4.951232,-2.215266,8.774956,2.664542,-8.444240,-9.156891,4.387133,-0.310970,-0.173087,-8.240807,-0.107272,-1.939004,-2.102828,0.652807,3.985922,-6.868160,-0.768432,4.243542,-7.559285,5.226103,2.495108,-8.932422,9.543759,-1.751484,-9.672365,-2.366332,-5.278430,-6.264565,5.637559,7.527550,1.259432,6.732352,-6.723053,5.236970,1.659574,7.591572,5.250691,-1.353856,5.993153,-3.548399,6.486172,-2.250530,0.649620,3.203186,-9.576628,-9.601867,-5.219297,7.800053,-4.159158,7.862450,9.486394,-8.734111,7.417216,0.767996,3.684777,-8.044700,0.023455,5.111220,8.596268,4.730499,5.504963,7.963944,5.548454,-0.632658,1.659589,-5.167562,7.537336,0.582678,7.716856,6.000483,-9.025688,3.824523,-0.916246,0.011452,0.509102,7.547871,-7.500394,1.837486,-3.340866,8.020660,6.379441,-2.083538,-7.282743,0.406198,8.441587,7.599125,-9.565227,0.112826,2.151968,-7.788220,2.975343,6.922693,-3.088571,-2.882382,-4.223005,5.856393,6.406874,-1.547282,5.823757,8.801590,-5.560293,6.085340,4.382291,7.999393,2.467058,-7.986109,-8.337380,-9.468768,-9.099164,9.255253,-0.232989,-2.490044,-0.878083,0.193270,0.528567,-8.808800,0.355950,-9.284277,-2.982912,5.588853,-4.406988,9.424228,4.595874,8.841049,-5.731868,7.766989,5.751857,-2.139047,-6.769773,-1.615243,-5.524729,-6.785195,-4.202537,-3.188199,-5.863005,-1.896843,9.022529,9.944924,8.252646,-8.954078,8.230508,-0.866426,-2.906193,2.819862,-4.199190,-4.867293,-2.373764,4.708373,0.033060,-6.708022,9.830824,-8.154037,-1.800573,-3.892821,0.341044,0.937923,-8.080137,4.978461,-4.754610,9.308164,-8.623430,1.582254,-4.340276,9.959914,-7.064434,-7.103107,-0.337409,1.079871,-2.930702,-8.432211,-7.175393,3.895650,7.277405,2.722393,3.329266,5.632999,-7.776244,-4.601896,2.226284,3.909370,7.348143,7.463602,-3.934958,-8.592462,-0.329678,-2.116550,-4.414859,6.609072,3.301477,8.459262,-5.407558,-9.990091,6.746625,3.982266,0.559365,5.535132,-8.480797,-3.630980,2.637570,-6.304153,-6.780712,-0.203967,-3.950063,-4.886422,6.630197,-0.126741,-8.396808,-8.958428,7.358884,-9.001445,-9.665633,-7.725095,3.970602,-2.574820,3.856391,-2.593019,0.422008,6.528391,8.140227,2.230871,6.752289,-1.589658,9.498164,-8.416991,-0.088318,6.456735,-1.434055,-3.078823,-9.580646,-7.179902,1.094170,7.470824,7.311785,-7.146227,6.244420,7.478654,1.252106,-2.818759,6.662203,7.572596,-0.533649,-8.678367,-7.718438,-7.271581,3.763653,1.278555,6.103903,-0.650329,2.452828,3.613389,-1.000937,9.202595,-8.231279,-2.386963,-5.192538,-9.824432,-4.263526,7.313783,3.561420,-5.874035,-7.396600,3.718240,-0.283592,3.936348,-8.807137,-7.056071,9.539014,-8.857413,-6.058927,5.233487,-0.758789,4.682056,2.229541,-8.060893,-3.775956,0.724160,-5.108712,-9.647871,-0.550745,-0.781278,5.055256,-3.985984,-8.301983,-7.009852,9.093726,-7.282519,5.105681,1.901914,-1.251405,9.148958,-1.152886,-3.804561,6.853421,5.213074,-5.547946,-5.503813,5.603880,-0.408641,4.416225,-5.804229,7.588235,9.610591,-3.814546,9.541710,-3.151936,4.360444,2.067468,9.420385,-2.825880,0.778616,-1.951455,-0.733146,-8.978780,2.238240,-7.314033,-3.603353,-3.404009,-2.112417,-1.855194,-8.237506,7.148048,0.619413,2.808593,6.247458,-2.560198,-8.356661,0.885127,-7.835654,9.579860,0.329447,1.421439,7.868574,9.318968,-7.958936,3.818779,-7.795522,-6.777381,-2.101846,-4.803912,1.211143,-4.098047,9.108832,1.315075,0.847020,-5.902492,-7.126640,-4.079556,5.262630,6.738172,-5.460378,-1.723374,6.135244,-9.415047,-2.041298,-8.811078,5.049988,2.615185,-3.364117,-8.110071,-8.077269,-4.619358,-4.535002,-8.921818,4.027130,5.342340,4.715393,-2.826302,-1.215789,-0.582347,-1.402420,3.455371,3.093360,-4.842026,4.986241,0.894170,0.365242,-8.659563,-5.427230,-3.065125,-4.609787,7.684354,4.425913,4.438412,9.593169,6.636588,-7.894171,5.921762,0.143445,7.539912,1.896242,-0.750999,-6.809679,-6.812365,-8.542295,-5.154583,8.144490,-8.900133,-9.987251,-2.502918,8.098653,4.086061,-6.547081,4.607932,-7.330598,-8.499998,7.298194,9.038323,7.401923,-4.658724,-8.451822,5.614324,7.220387,-3.669959,1.947522,3.370772,-8.229334,-0.594267,7.652695,1.584444,-5.515926,8.553798,-2.316576,5.285126,8.945283,3.767585,9.386678,7.276347,-2.947683,-8.953849,-3.472297,-8.694085,-0.643931,-7.948895,-0.448407,1.886837,9.632332,-8.901204,5.152169,-3.901230,-7.093888,-5.050232,-8.240188,-0.552839,-0.515298,-4.065528,-8.833758,7.948509,7.464912,-5.320631,8.881204,-0.731605,7.564984,2.225745,-3.543440,9.768396,0.581811,-6.618340,9.108917,1.496537,7.016533,-9.229163,-2.160773,-5.202049,0.655445,-4.202758,8.201533,-2.425787,1.893144,6.772645,9.266165,-7.115788,6.925613,-5.878120,2.100243,-5.686837,8.199803,-9.125317,-1.972952,9.256058,-3.921686,1.160613,-5.390988,-7.268920,2.125006,4.933922,-6.905672,2.391700,7.109787,-2.846609,1.997056,5.016556,0.387447,9.412584,8.011968,-2.535687,-9.973746,3.027781,3.104391,-0.048194,4.212840,5.450270,-8.375749,5.425623,-5.204947,-3.551944,-3.481221,-8.082124,-1.320912,-5.343473,-4.042051,2.310643,-2.264364,5.369504,-1.397659,-9.250759,8.038109,4.835415,-6.832761,8.913122,-5.299159,4.721276,-7.886542,-7.295001,2.913137,-6.973941,8.811887,-5.499479,-9.501846,5.266022,8.667932,-3.432977,0.065049,-5.783137,1.726702,-3.581463,-5.475210,-4.569321,3.178660,8.427421,0.893259,-7.363150,7.161545,-7.396777,-9.216610,-8.957096,8.061770,5.911861,-6.736771,0.749326,5.592696,4.855968,3.621105,-5.512295,-6.492509,4.498770,0.416247,0.864927,-8.811811,-1.603152,5.134778,-6.832230,-2.359819,-3.997111,-8.622166,-0.413536,6.491215,3.372996,1.098174,-8.238015,8.184334,-9.825534,8.600007,0.450702,6.977972,2.795960,-5.393400,-6.919450,6.860159,8.240996,-8.759948,7.999210,6.744206,-2.540652,7.049187,-1.239376,-4.799314,7.451621,-8.249644,5.290609,9.561798,4.908979,-8.223126,-2.553157,-7.282221,0.202050,4.022071,-7.802434,1.336156,0.066206,9.900203,3.549649,-5.991207,-6.369762,1.201636,5.042996,-2.562070,-3.040057,-5.537385,-4.792119,-7.589696,8.938622,-6.864394,-4.073843,-6.153974,-4.764435,-1.012597,4.171066,0.776366,8.461359,3.224312,2.367477,7.875951,-7.372391,-4.563469,-1.633108,9.328945,-7.252622,-5.434408,5.265405,-9.542615,-8.462005,-2.559574,-8.833937,2.432166,-5.516986,-1.039259,-4.859349,-0.189864,1.212402,3.083839,1.255734,5.258020,4.684194,0.093447,-7.802314,-7.913644,-7.834394,-3.393244,-5.682578,-8.861799,-3.158875,-4.734553,0.021407,3.312222,0.121254,-1.028025,9.058567,-3.871612,6.099457,-5.094273,-9.339206,0.645457,9.112916,5.011192,0.204977,-8.160085,-0.162250,9.106896,8.556064,-2.791983,6.727626,-0.997206,-2.765932,8.540484,-6.058460,5.853770,7.984766,7.809943,-1.252851,-0.222837,-4.682005,5.582779,-0.777330,-1.341842,1.621963,-3.322372,-1.166816,-8.721337,-4.205355,-2.006497,5.485033,2.917963,-3.524770,3.307799,0.289633,3.763116,-8.088178,-8.378385,1.412510,4.521702,8.277865,6.999404,-9.248657,-8.249216,-9.300999,3.189901,-6.497996,-6.163379,8.447756,7.362499,7.065858,-5.373020,6.666633,-0.502209,-3.897359,0.774165,-1.848986,2.586289,-1.851905,0.706987,-7.520993,-6.426366,7.756017,-7.102805,-2.468286,5.413047,-9.309051,-4.642815,-5.177956,-6.993410,-1.655235,-0.274064,-7.953644,6.973688,5.431259,7.771961,8.146511,-1.722824,-2.593818,3.525323,-9.598312,2.922300,-2.540981,-4.784335,-4.124941,4.043718,-9.677070,0.921696,0.349975,-4.501393,8.644953,6.614338,3.571733,0.683673,-9.160805,5.305908,8.951707,6.606347,-5.957897,-4.007086,-6.744577,8.813405,8.252202,7.340376,0.844393,6.767367,-7.672030,8.258909,-2.146207,3.779684,2.034147,0.873485,6.374102,-0.711800,-4.476736,0.637238,4.832472,-6.068509,6.248754,3.237986,2.820242,-0.905362,2.499951,0.463011,-5.983476,-0.442707,7.344787,0.596584,-1.000250,-8.761398,-5.627654,6.654822,-4.551149,0.364607,-8.663000,-4.830305,3.156065,4.462885,-3.679487,5.849383,9.750251,-8.385619,0.791753,-7.415042,-9.702627,8.098592,-9.446977,-9.263124,-2.003975,-8.697158,-2.676187,-5.880638,2.018288,1.619343,-0.726606,3.303503,-8.698237,9.710839,9.592357,-9.976811,-8.074028,-6.768646,-5.794729,-6.445882,-5.247149,7.930074,2.334466,3.886583,0.913182,7.204417,2.804930,-0.032292,-2.839005,3.289854,0.833102,3.439263,0.141959,-6.008177,-8.991227,-6.885151,3.453394,-3.335904,1.299426,-0.143660,-2.855452,4.669444,-3.613666,2.750199,3.783788,-9.730205,-7.880211,-7.269605,8.733978,-4.049922,8.009703,7.453328,-2.921370,-5.858280,5.790403,8.505329,-8.603347,1.609377,-5.079952,1.854484,9.226517,-2.763250,-7.668453,-1.411144,7.098747,2.802471,0.663337,3.669743,-1.476976,-4.926677,-6.177232,0.018754,-0.198000,8.720603,-8.046368,-7.968732,-7.486614,8.883180,8.551901,3.330843,-7.876816,-3.175365,3.446479,-0.895302,0.501746,5.194924,-6.834985,-4.490712,3.766891,5.765668,-3.022923,3.204988,-7.937831,1.071343,-3.845822,-4.545103,-5.717777,1.761863,-6.902405,7.380695,-2.087887,-4.939785,-6.046983,4.458986,-3.771061,2.694634], dtype = "float64")#candidate|1026|(1620,)|const|float64
var_1027 = relay.var("var_1027", dtype = "int64", shape = (96, 2))#candidate|1027|(96, 2)|var|int64
call_1025 = relay.TupleGetItem(func_730_call(relay.reshape(var_1014.astype('float64'), []), relay.reshape(const_1026.astype('float64'), [15, 12, 9]), relay.reshape(var_1027.astype('int64'), [192,]), ), 2)
call_1028 = relay.TupleGetItem(func_735_call(relay.reshape(var_1014.astype('float64'), []), relay.reshape(const_1026.astype('float64'), [15, 12, 9]), relay.reshape(var_1027.astype('int64'), [192,]), ), 2)
output = relay.Tuple([bop_1016,call_1025,const_1026,var_1027,])
output2 = relay.Tuple([bop_1016,call_1028,const_1026,var_1027,])
func_1039 = relay.Function([var_1014,var_1027,], output)
mod['func_1039'] = func_1039
mod = relay.transform.InferType()(mod)
mutated_mod['func_1039'] = func_1039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1039_call = mutated_mod.get_global_var('func_1039')
var_1041 = relay.var("var_1041", dtype = "uint8", shape = ())#candidate|1041|()|var|uint8
var_1042 = relay.var("var_1042", dtype = "int64", shape = (96, 2))#candidate|1042|(96, 2)|var|int64
call_1040 = func_1039_call(var_1041,var_1042,)
output = call_1040
func_1043 = relay.Function([var_1041,var_1042,], output)
mutated_mod['func_1043'] = func_1043
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1065 = relay.var("var_1065", dtype = "float32", shape = (6, 1, 11))#candidate|1065|(6, 1, 11)|var|float32
uop_1066 = relay.log(var_1065.astype('float32')) # shape=(6, 1, 11)
bop_1079 = relay.bitwise_xor(uop_1066.astype('int8'), relay.reshape(var_1065.astype('int8'), relay.shape_of(uop_1066))) # shape=(6, 1, 11)
uop_1087 = relay.log2(bop_1079.astype('float64')) # shape=(6, 1, 11)
func_937_call = mod.get_global_var('func_937')
func_941_call = mutated_mod.get_global_var('func_941')
const_1091 = relay.const([-4.318981,-5.815401,-1.163855,-6.376962,-6.038540,-7.769048,-5.575315,9.593903,-4.791242,-5.780732,2.702070,-5.892872,-6.771671,-6.534486,-0.377788,2.857771,9.734970,-3.526061,-8.604983,3.885935,-4.406882,7.599082,-3.615598,4.528326,-3.872116,7.259170,1.022991,4.336838,-2.039695,3.999333,6.235409,9.441756,-4.815055,-1.089031,-8.948407,7.834396,3.375228,-5.976105,-4.525580,2.549880,3.579995,-7.428180,-9.245242,6.741967,4.238891,5.609744,3.105107,-4.529651,1.548975,-5.089830,-3.087276,-1.981636,-8.880946,6.687986,-5.298679,4.937712,0.483758,-1.897661,6.142329,1.977414,7.735648,3.649574,4.738881,-6.448294,-8.097193,7.010682,0.306914,8.867987,-2.548636,-9.217835,2.538645,-9.186613,8.209807,-2.577853,-4.467912,-9.261136,-0.858539,-1.796645,5.522714,-4.247735,6.499875,-0.885358,-6.432653,-3.233473], dtype = "float64")#candidate|1091|(84,)|const|float64
var_1092 = relay.var("var_1092", dtype = "int64", shape = (192,))#candidate|1092|(192,)|var|int64
call_1090 = relay.TupleGetItem(func_937_call(relay.reshape(const_1091.astype('float64'), [14, 6, 1]), relay.reshape(var_1092.astype('int64'), [192,]), ), 3)
call_1093 = relay.TupleGetItem(func_941_call(relay.reshape(const_1091.astype('float64'), [14, 6, 1]), relay.reshape(var_1092.astype('int64'), [192,]), ), 3)
bop_1102 = relay.multiply(uop_1087.astype('uint32'), relay.reshape(var_1065.astype('uint32'), relay.shape_of(uop_1087))) # shape=(6, 1, 11)
output = relay.Tuple([call_1090,const_1091,var_1092,bop_1102,])
output2 = relay.Tuple([call_1093,const_1091,var_1092,bop_1102,])
func_1107 = relay.Function([var_1065,var_1092,], output)
mod['func_1107'] = func_1107
mod = relay.transform.InferType()(mod)
mutated_mod['func_1107'] = func_1107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1107_call = mutated_mod.get_global_var('func_1107')
var_1109 = relay.var("var_1109", dtype = "float32", shape = (6, 1, 11))#candidate|1109|(6, 1, 11)|var|float32
var_1110 = relay.var("var_1110", dtype = "int64", shape = (192,))#candidate|1110|(192,)|var|int64
call_1108 = func_1107_call(var_1109,var_1110,)
output = call_1108
func_1111 = relay.Function([var_1109,var_1110,], output)
mutated_mod['func_1111'] = func_1111
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1119 = relay.const([[[-2.518789,4.711479,6.824461,-4.915070,8.589749,-1.902556,0.229780,9.938485,6.723183,4.182052],[9.208299,5.971445,3.374434,-3.708253,5.207527,6.535714,-1.093793,-3.836039,-0.049970,8.054859],[-8.477723,-5.228230,-8.528524,5.003332,1.815817,-6.882919,-2.625523,8.019592,4.518593,6.788076],[-2.151910,-5.434941,-7.362713,-1.366580,-0.072594,-8.058869,-0.880214,-6.225335,-9.614431,-3.329333],[9.366575,9.797345,-6.843670,4.932531,-7.319164,6.922675,8.897842,-4.842152,-2.556666,-1.131130],[-4.566566,9.458892,-3.758779,1.387667,4.335362,-5.012454,-3.884468,-7.641059,-9.073692,3.651872],[3.212502,7.704005,-1.804673,-8.595227,9.494791,9.480608,5.741671,-4.037004,0.774745,-9.816048],[5.026169,8.404971,-0.275788,0.316378,7.455016,-2.447119,5.146376,-6.558272,1.114263,-9.256871],[8.899798,-3.972699,3.223125,-1.331801,-3.686598,7.495929,7.699166,-2.589238,2.510659,7.969260],[-3.294708,1.605666,5.123153,9.171238,-3.862674,3.545365,-9.528357,-6.385223,-8.814669,-9.709386]],[[3.069352,2.381554,-9.706751,7.985617,6.843523,-3.171337,-7.317940,9.548409,7.706599,-5.389111],[-3.023690,-1.859461,0.677073,-6.659508,0.666356,-9.943029,2.341112,-2.013321,8.234172,1.546851],[-5.301350,-5.546775,1.327345,-7.541627,0.872524,-2.029843,2.406702,-3.510563,4.279656,-7.530037],[9.147250,7.074791,-9.968401,-4.977726,8.919386,-7.095839,5.669347,-7.200165,-5.621699,-8.305069],[8.520566,-0.310913,6.175157,1.706246,8.230907,0.061113,7.774345,6.055335,-7.676051,2.348181],[2.988424,6.722291,3.807623,0.086965,0.887481,3.406853,-9.389613,3.086119,-7.563571,-9.374142],[-4.371002,-5.497328,8.487669,-7.889078,8.864290,4.910593,7.987979,7.258668,7.446794,9.014717],[-8.368652,5.072839,-2.784055,-0.229182,-5.362147,-9.990927,0.581733,-4.535118,5.459236,-8.989408],[-3.490235,2.784553,9.504596,-1.676996,-8.382071,2.693056,-6.272466,0.640628,4.093777,5.432779],[6.544765,-3.136513,-3.419752,5.474657,7.014760,-7.377481,5.995084,-2.276925,9.029462,6.671540]],[[-9.223008,-2.834905,-1.500790,6.675811,-8.372022,5.521685,-5.564159,-9.056135,-5.733536,-9.073960],[2.104912,5.346335,4.348573,5.234664,2.524941,-7.729124,1.457128,-1.308968,-8.529945,1.900966],[6.690445,-8.126155,5.370780,-9.175044,-7.803661,5.677655,-0.082007,2.355637,-8.933351,-5.578859],[6.872909,3.201736,3.238753,-5.075659,0.495947,-9.548481,-6.894533,6.828710,2.698249,7.313281],[-5.687593,-1.588171,-9.034468,-6.208650,-0.917304,-5.728202,8.574078,3.263771,0.057409,7.033582],[1.786440,5.053839,-2.308230,8.521190,9.001811,-8.044486,-0.397259,-2.626911,-2.263718,7.741194],[0.307697,-3.457859,-4.604359,2.272255,-7.212764,-1.796937,2.334005,0.534837,-1.466014,5.642092],[-3.152668,-8.065980,-5.420955,9.623563,3.106045,-3.680924,-1.555665,-6.045946,-7.925360,-1.739993],[-5.995369,-3.743379,2.525267,1.590557,8.947614,1.207026,-3.902350,-6.249183,-1.942989,3.986721],[-5.066797,-5.715075,6.557467,9.863511,-0.666324,-0.294395,6.661904,-3.482017,-4.311252,-5.991832]],[[5.580282,7.222730,6.363606,-1.905450,9.243492,-4.866148,4.776020,-2.541691,3.861040,-4.285678],[-3.897034,-1.421778,-9.185393,-7.838700,-9.499713,-9.544957,-0.894520,-2.142453,2.112044,6.715208],[-5.884350,-0.945001,-5.181165,-0.942885,1.508424,7.847571,0.507800,0.455135,2.048032,9.407623],[-8.686985,6.389721,9.126042,5.148986,-1.879282,-8.282603,-2.210591,8.683945,9.297894,-4.464199],[-1.500832,-1.325874,6.987557,8.709496,1.097110,-9.355537,-4.579413,-2.595723,0.278693,-6.829955],[-0.191660,4.543026,-4.298311,5.459319,-5.833755,-9.414926,-1.349505,1.478419,-8.624258,-9.290091],[9.478896,6.379116,-2.258620,4.319703,6.661626,0.251749,-1.398743,-7.669907,5.435707,7.166788],[2.744072,4.260480,-3.659784,9.929467,0.294321,4.149812,9.823515,9.115368,-6.555361,9.082250],[-5.075906,-3.722419,9.941403,0.676437,-9.189923,5.559910,-1.903392,1.665133,7.563031,3.879888],[-6.897614,6.394799,-1.549409,0.377699,2.602735,-1.011711,-9.355632,2.817178,-8.151895,-8.005197]],[[4.338868,-5.955700,-3.552888,-8.626683,4.211278,6.712154,-3.608825,5.313987,8.198048,-0.526130],[2.451266,-8.086410,9.313792,-6.921560,3.756927,-3.157641,-4.146334,-3.033969,0.754003,-5.315489],[9.600202,-7.951995,-2.908175,-0.358515,7.089251,-9.993272,9.406137,-8.984229,-9.909281,-6.398443],[9.833332,-3.455672,-8.740677,7.104384,-8.922062,-6.729859,1.989589,1.151123,-7.437381,8.432293],[-4.405676,-6.541623,-6.265870,-5.263596,3.569539,-7.228470,-7.262902,-7.392670,-1.864354,-4.552115],[8.838185,-7.111486,0.912007,-7.531536,1.461665,0.742926,-7.123322,7.721941,-1.732260,3.479510],[4.662110,1.919219,8.204403,-1.058570,1.557469,-1.808544,2.241202,1.238432,-6.462682,-5.096629],[9.969915,-4.818696,4.617282,-3.703236,8.955574,-3.409670,-1.362568,-1.759694,3.677905,9.399946],[0.421833,-8.101126,-5.153014,-4.874148,1.861406,-7.486294,-0.132629,-8.466493,-6.765133,-3.950697],[9.580397,-0.321953,-8.418927,2.845943,5.663011,-5.091302,-4.512787,7.974042,-1.301659,7.654775]],[[-9.574365,-6.851477,-6.704928,9.367512,0.835079,7.076827,-2.674890,-7.933836,-7.142599,-2.158252],[-4.424695,4.103793,5.007746,6.434921,-1.314341,-8.140768,-0.396694,5.921668,6.205361,-3.579650],[-8.972461,5.073302,7.405934,9.379058,8.019924,-0.474509,-1.706692,-0.711549,-7.663632,4.396095],[6.077981,-4.825042,-7.468747,-0.505988,-5.288801,1.048710,-6.160704,9.843556,-7.717839,-6.611146],[-6.032632,-7.501928,-3.433759,8.441522,-3.173955,0.781859,-0.993678,-4.461857,2.648623,-5.522430],[2.080607,1.754067,8.121982,4.832849,4.042379,4.978249,-5.323629,6.079655,7.528708,-9.791252],[9.870638,9.114145,5.097986,6.870882,-3.866957,-0.478440,2.883173,-0.921602,-6.435923,-3.575930],[0.288103,6.170541,2.330224,-1.034909,9.630801,1.676308,-7.135015,-7.973392,-4.984905,-4.964373],[-1.232050,-3.803663,-6.793066,-6.977486,-0.268065,2.749656,-0.420223,-8.959232,4.857392,-2.710978],[6.774616,7.011926,-9.786151,6.877304,9.580575,-8.363134,-6.734072,6.986755,0.342550,1.554691]],[[2.737013,7.429447,6.377970,2.169154,-4.472014,-2.453476,0.287144,0.771348,8.614202,-2.522135],[-1.807707,-1.233559,8.494241,-1.278209,2.635276,9.424167,-0.921499,5.145454,-1.534136,-8.317372],[-7.900843,-2.205414,-3.418377,-2.559935,-5.704690,9.544515,5.676519,0.034880,0.313800,3.894530],[0.651632,3.078597,0.400408,7.784428,-3.641891,-7.057256,-0.824947,-9.104888,-7.938421,0.073797],[-0.178945,1.690741,-8.185953,-7.280772,-1.914565,6.013547,-1.882323,4.689795,7.695949,2.259257],[-3.544513,-3.179990,-1.782162,-1.616355,7.888220,8.993644,-4.984451,9.467499,4.706516,-0.415216],[4.038966,4.403784,1.739402,1.455015,-3.925677,-0.622641,-9.113299,9.569417,1.068934,3.194823],[9.462360,-4.614177,-0.466361,1.027500,-0.745554,8.400072,2.275534,7.843033,-9.958565,3.426970],[-8.831802,3.641375,-1.820291,3.560953,-0.579248,9.549850,-8.126000,3.699197,3.784852,-4.711638],[7.281451,-6.082084,5.450225,6.210825,-0.391874,-2.085763,-3.047231,-1.669435,-0.922578,-7.278040]],[[-9.872665,9.229741,-2.047498,8.579379,3.664360,9.964231,-0.918013,5.850377,5.788902,8.351076],[2.853559,-0.108362,2.691800,-8.137845,5.084448,2.769517,-2.504181,-3.687885,7.212685,7.743698],[2.980215,6.812712,-7.650379,0.444802,7.863204,0.412827,-6.066540,-9.377938,-4.960045,-8.830193],[-5.067002,-1.506398,-9.298964,8.983661,-8.007874,-0.564089,7.262476,8.174029,-9.166953,6.986890],[5.673864,-6.027333,6.837876,-6.978068,0.259551,4.851133,-4.801217,0.312427,-4.290328,-5.446975],[0.196288,-4.047572,5.081159,-1.444372,2.370803,9.818685,-8.337745,-6.925357,6.505559,-8.341114],[8.823391,-7.874507,8.355037,-6.142706,-2.520320,-3.623074,8.307622,-1.492594,4.383003,-9.498008],[-6.695605,2.628903,3.731990,-8.406401,-0.908591,-5.080651,-0.332942,5.095431,-0.419353,4.983668],[2.294387,-8.091941,0.270764,7.671192,1.592298,5.847779,4.062616,-6.591931,-1.256617,0.225815],[2.687452,2.224719,-9.749460,5.308354,-3.933718,5.896844,4.602599,2.359315,-2.727328,2.085529]],[[-0.046378,-4.794665,8.299694,1.375399,7.256368,5.275328,-8.998025,6.846686,8.796310,1.635812],[5.991978,9.026191,-6.546806,5.580838,5.605695,-0.357307,7.464466,-8.988582,8.925090,2.551654],[-3.490135,-0.667057,0.905293,-0.907411,-7.501535,-6.742930,-0.756791,-6.229123,-7.683895,-0.868102],[-8.424697,-4.754849,1.402177,9.414762,-8.753317,4.575155,1.407504,1.903609,6.010148,7.149172],[8.676556,-1.448845,-1.248058,-7.554390,-6.705312,-3.156764,2.076978,9.460348,9.986791,4.071932],[0.915958,0.088935,-9.118686,3.288164,-6.249586,-4.603961,-4.368517,6.985133,4.890774,-6.225416],[-3.856069,7.762222,6.612647,-3.324355,9.506639,-2.500387,6.131199,2.798151,-8.761057,9.847925],[3.542560,-4.962633,-8.961946,-1.581052,9.617311,-7.578846,-0.161027,9.676956,-9.257778,-1.880155],[6.110506,-3.291343,-1.545367,8.521523,-4.327526,7.445177,-4.702685,9.084645,-5.252912,-5.358583],[-1.676787,7.165398,-1.690762,-3.329748,6.714401,-0.420934,8.188358,2.628755,-8.226749,-3.488532]],[[6.764175,2.660316,9.889799,8.104372,-4.594039,7.279932,-0.133913,8.780083,9.350676,0.969942],[0.657950,-9.064379,-1.372093,-0.095945,-0.803819,2.767514,2.434149,1.588895,3.998923,-6.481198],[-9.790373,4.218886,-0.655941,-8.172030,-7.458914,-5.636883,3.833880,7.230828,-1.035693,4.536989],[-0.854201,1.614895,7.587820,8.308855,3.541357,-3.068398,1.293751,-5.281371,4.842789,-2.166369],[-7.136678,9.888658,0.351518,0.781502,-6.916316,-6.184153,1.558954,-5.248803,-5.204348,8.587035],[1.725480,6.864682,3.821950,3.019997,-6.896928,9.245719,-0.131088,6.818633,0.270527,-2.285514],[7.725715,-6.762119,-7.245547,3.947574,-7.885815,-7.239816,-0.492539,6.362114,2.266386,-6.597140],[-7.223880,-2.865243,-7.116770,-9.971314,-9.464053,-8.093398,0.435372,-8.702365,1.365170,-0.944984],[-8.367882,-4.980413,-5.308339,6.459951,-3.856651,-3.584776,1.595478,9.303777,-2.791014,2.741771],[-3.876985,-6.444883,-5.017531,4.086350,-1.337561,-2.384249,-3.423091,0.802657,-0.549994,-7.020738]],[[3.374650,9.099511,8.775865,-6.013052,-1.193622,-2.232751,6.124935,-9.305676,6.764505,-3.971511],[2.087773,5.505929,1.690182,-4.237473,0.989619,-9.854830,5.727614,4.337244,-3.659230,-7.161095],[6.921173,-0.483069,7.238301,-9.841704,-2.240882,-2.361631,3.047763,-6.704496,7.809058,-1.378899],[3.496915,1.033259,-6.046037,-4.319205,-6.966213,6.731407,6.980628,2.322287,-5.780368,-9.374694],[-8.220178,-1.885210,-9.497895,-4.656006,-2.410220,-5.378832,7.937414,-6.564373,-6.540859,-1.568143],[-9.455945,-1.114657,9.814422,-4.709096,7.168898,6.262167,-8.234519,-9.573686,-1.440880,-4.462069],[1.025226,-1.289857,-7.158575,5.445967,2.212897,3.866204,8.052239,-5.643509,5.392125,7.843705],[2.169513,-6.127341,-8.368237,-0.759476,6.919092,9.713610,5.465736,5.000620,0.424651,-0.943793],[4.923842,-5.719211,4.291551,7.299034,8.281996,4.194195,6.358249,-6.317650,-1.548717,-4.565982],[8.533403,8.530290,-7.001455,-0.571529,1.062106,-9.761406,5.026965,0.017824,0.031405,9.452480]],[[0.428300,0.819941,1.606692,5.848618,-0.434714,2.789137,4.389541,-4.495324,-5.652633,2.356146],[4.968081,-6.130596,-4.248789,9.771801,-2.909689,9.056265,-1.474979,3.504642,-9.218053,7.595836],[-7.424536,4.764775,0.983181,5.021404,-8.950330,0.612566,1.692528,-3.270893,-5.525434,5.557197],[8.744863,-9.894907,-6.035167,1.142322,-6.895714,8.646325,8.576037,0.685247,5.161810,-4.755275],[6.604623,2.036526,6.958638,5.613679,-7.421852,4.812991,5.966328,9.358513,3.176129,-6.612574],[9.584855,-9.024536,-9.947176,-6.005430,2.929698,-3.852233,-2.577241,8.321098,1.437039,9.907613],[0.002042,3.441894,9.221451,-0.114654,7.821617,-1.417726,8.841343,-4.720795,-5.641192,9.890569],[7.638759,3.614645,4.418066,-0.276404,8.833106,-1.306134,-3.596113,5.019068,-1.055828,-4.524820],[-6.549072,4.954232,1.509257,-4.766097,-4.893949,6.377206,4.814460,3.965097,6.028540,2.249952],[-4.362514,-9.765591,-3.667435,-6.380670,3.835995,-8.612779,2.207125,2.277763,3.197215,5.734383]],[[4.888901,-2.520955,7.418045,-3.808428,3.060413,8.648422,1.340132,-7.472692,3.198878,1.870255],[1.551078,-8.012131,3.220094,6.968368,3.620939,-3.183064,-7.903799,7.191742,-9.966335,-6.384132],[-4.976059,5.739864,1.598891,3.693258,-8.672975,-0.664873,-2.384278,9.292034,-8.758723,5.622334],[4.814684,5.348159,-1.777603,0.010605,-0.492902,-6.709147,5.410150,-9.300797,6.056823,3.348189],[-6.861764,1.033142,-4.842118,-0.487520,4.774931,0.988643,1.565543,-1.635018,8.575689,8.972592],[-8.673135,-5.829349,9.946574,-2.461344,-8.051033,0.668335,9.730088,-4.803037,9.088071,3.388086],[-2.910948,9.371120,1.871600,5.510679,4.100657,-2.013733,-0.133176,3.794740,3.340464,-4.231614],[3.901574,9.959866,-5.985414,-4.469828,-7.173772,-5.609425,-4.009945,0.630852,-2.232298,1.599355],[6.453454,2.752948,-2.948681,2.083400,-7.342876,-5.730157,4.132308,6.682315,8.415931,8.350384],[8.931765,-9.828225,4.510627,9.785065,-6.104838,7.840644,-0.641217,6.656613,7.399116,-4.711992]]], dtype = "float32")#candidate|1119|(13, 10, 10)|const|float32
var_1120 = relay.var("var_1120", dtype = "float32", shape = (13, 10, 10))#candidate|1120|(13, 10, 10)|var|float32
bop_1121 = relay.divide(const_1119.astype('float32'), relay.reshape(var_1120.astype('float32'), relay.shape_of(const_1119))) # shape=(13, 10, 10)
var_1141 = relay.var("var_1141", dtype = "float32", shape = (13, 10, 10))#candidate|1141|(13, 10, 10)|var|float32
bop_1142 = relay.greater(bop_1121.astype('bool'), relay.reshape(var_1141.astype('bool'), relay.shape_of(bop_1121))) # shape=(13, 10, 10)
output = bop_1142
output2 = bop_1142
func_1152 = relay.Function([var_1120,var_1141,], output)
mod['func_1152'] = func_1152
mod = relay.transform.InferType()(mod)
mutated_mod['func_1152'] = func_1152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1152_call = mutated_mod.get_global_var('func_1152')
var_1154 = relay.var("var_1154", dtype = "float32", shape = (13, 10, 10))#candidate|1154|(13, 10, 10)|var|float32
var_1155 = relay.var("var_1155", dtype = "float32", shape = (13, 10, 10))#candidate|1155|(13, 10, 10)|var|float32
call_1153 = func_1152_call(var_1154,var_1155,)
output = call_1153
func_1156 = relay.Function([var_1154,var_1155,], output)
mutated_mod['func_1156'] = func_1156
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1498 = relay.const([[[1,-6,-8,-7,-3,-2,-4,-8,3,-10,-6],[-1,1,-1,2,-5,-8,9,10,-10,2,1],[7,5,-5,-4,9,9,5,-9,3,-9,6]],[[7,-3,8,1,3,1,9,2,-6,-3,1],[4,-3,3,-10,-2,-5,-7,2,2,-7,-5],[8,2,-8,-10,2,-8,-3,-9,-10,-1,7]],[[7,6,-7,2,-9,-9,4,-5,6,-8,-2],[-5,-5,1,-1,-6,10,-6,4,10,6,-6],[7,-5,-9,-7,-8,-2,-9,-3,-5,-9,-10]],[[1,2,-1,1,1,9,2,2,10,4,-5],[7,5,6,7,10,-1,-9,3,2,-7,3],[-10,1,-5,2,-9,-7,-2,-2,-8,-7,5]]], dtype = "uint32")#candidate|1498|(4, 3, 11)|const|uint32
var_1499 = relay.var("var_1499", dtype = "uint32", shape = (4, 3, 11))#candidate|1499|(4, 3, 11)|var|uint32
bop_1500 = relay.less_equal(const_1498.astype('bool'), relay.reshape(var_1499.astype('bool'), relay.shape_of(const_1498))) # shape=(4, 3, 11)
func_1152_call = mod.get_global_var('func_1152')
func_1156_call = mutated_mod.get_global_var('func_1156')
var_1509 = relay.var("var_1509", dtype = "float32", shape = (1300,))#candidate|1509|(1300,)|var|float32
call_1508 = func_1152_call(relay.reshape(var_1509.astype('float32'), [13, 10, 10]), relay.reshape(var_1509.astype('float32'), [13, 10, 10]), )
call_1510 = func_1152_call(relay.reshape(var_1509.astype('float32'), [13, 10, 10]), relay.reshape(var_1509.astype('float32'), [13, 10, 10]), )
const_1511 = relay.const([-9.199464,7.111890,0.727515,-0.900748,4.166636,-1.295899,-8.356020,6.174718,-8.027641,-7.428128,-8.714563,-3.357052,3.861139,-5.577212,4.175698,3.458484,1.079322,4.703459,-7.794222,-3.573185,6.465441,8.917359,9.054084,2.286664,-9.323121,-1.327640,-5.099817,-0.093511,-9.207201,-1.096749,-9.289647,9.134503,8.528135,-4.836175,-4.865876,4.451175,-4.685874,2.828077,5.085211,3.450029,-8.018573,5.367335,-9.399710,-1.160030,-1.362216,4.439183,-9.709364,-7.650913,7.444180,-8.222474,0.546697,9.541546,-7.327138,-5.206682,-1.741162,-7.919633,6.251370,5.752536,2.309990,-4.535804,-4.492266,-2.362172,-0.104143,-6.945418,-9.191658,-2.300120,6.804399,7.575548,-5.778927,4.269222,9.499588,-0.249329,3.216737,-0.587844,4.732812,-1.245869,-1.441473,1.680019,-5.826856,9.792801,-1.839121,-9.677742,6.846729,1.793971,3.757481,-2.929869,-5.543650,-1.806870,-5.424711,-3.491883,8.540469,-4.728528,-8.014580,4.688690,9.732473,0.102071,-0.406477,1.320464,6.891374,9.901355,-9.759481,1.451269,-6.771958,-0.830908,-4.486171,6.733119,-4.250315,-4.862230,6.302672,1.788476,-9.195306,-2.374589,-0.390448,-1.368115,-3.798940,3.333662,-3.104672,-2.654822,-8.685425,4.674327,3.401720,-9.729797,-7.368868,-1.967979,-1.604576,0.690443,-1.753571,1.969008,3.820548,-1.944737,-4.377418,-4.510931,-7.552479,2.560759,-9.210689,-7.715993,4.105197,9.712166,9.780990,4.688436,4.677842,-8.948490,-1.979477,-8.348466,8.229300,-4.200841,-8.110418,-8.575031,6.591209,3.250920,0.413311,3.261083,2.628463,-8.495804,2.820022,-6.841402,-1.482882,-2.100921,6.401195,3.410677,-4.980375,-2.501414,-9.297675,6.724331,-8.668801,2.035058,-9.056333,1.392593,4.290923,-1.225949,1.022102,5.257844,8.164947,7.778620,7.517887,-0.518348,-9.394358,-3.057520,4.474038,-1.407798,6.323821,8.326084,-7.249326,5.222272,1.341098,-7.758048,-1.888621,-6.845454,-1.251087,-7.371435,-1.001323,5.643379,6.329294,-6.934268,8.478518,6.541436,-9.843280,9.891393,2.980378,0.605195,-6.199953,7.015904,0.792375,8.211436,4.601107,7.610173,-1.783281,-6.434915,3.043402,-7.083567,5.586255,7.787124,2.986112,4.621655,6.051800,2.857098,-0.989383,-4.005333,-1.098116,5.076943,-4.871730,-0.158951,8.649225,-6.165633,5.799927,-7.420043,-2.182354,-5.832820,-6.564583,-0.365186,-9.532418,9.333851,4.492592,8.477308,3.796025,6.720007,5.578542,-7.362288,9.625132,9.808434,-4.844627,6.153714,9.637467,-2.399013,2.930091,8.600253,-3.830015,2.903047,2.898002,2.113430,2.298422,-6.293241,-5.192073,-1.179000,6.646639,-9.377217,1.411133,4.024571,-6.461940,-1.794217,-2.222412,8.828985,-0.794141,-2.517326,3.831539,6.061507,0.713571,-0.528144,-1.780867,0.510980,-2.632346,5.461841,9.545112,5.960889,-0.626350,-8.050181,6.036286,7.547236,-0.201011,0.671722,-5.105310,-8.665629,-9.864931,6.480434,5.361396,4.983120,6.554672,7.589555,0.549379,-9.517048,-3.888415,-3.246200,-7.757853,-8.315465,-9.039886,1.614321,-6.889018,-6.890389,-3.818684,7.440821,-9.944290,8.331034,-2.110402,-4.380097,7.907819,8.692961,8.795170,-6.738736,-0.280597,-8.263587,-2.666779,8.656698,-8.880364,-7.342021,1.452655,-4.327724,-7.368897,8.834357,2.204726,-1.031689,-6.208128,-3.170198,7.431107,-7.225013,6.543486,-7.220624,-0.767220,-3.144535,3.591881,5.479473,8.756786,-9.669216,4.325511,-6.259152,-2.188235,-0.354821,-8.935582,-8.528586,5.621809,5.177630,-6.641581,-3.272888,3.051011,8.121661,9.701967,-2.462829,-8.271226,-8.207118,-1.671587,-8.426582,5.871720,-0.242746,-5.491795,-9.798310,6.347178,-6.755618,2.042124,-8.479541,-4.656554,-9.509512,-2.957429,-3.224138,2.170738,-2.189212,3.253133,-2.061312,7.726070,-9.769274,-3.639757,3.256266,7.612095,1.332436,9.589442,1.734557,3.882525,1.892053,-4.977038,-3.362675,2.349808,-8.323511,-0.505683,0.448878,6.369033,6.815262,-3.672140,1.982503,-1.958499,2.266538,-4.484116,4.092822,-0.890302,4.576195,-2.353103,-9.146687,-0.084880,-6.395250,-4.666790,2.948519,-0.736458,9.805528,2.093369,-4.032700,0.518999,9.524050,-2.907192,5.612145,-6.481068,-5.894466,-3.778081,-9.500382,0.178149,1.635881,-4.055537,3.396125,2.719059,-1.452448,1.931488,5.947699,-0.755673,-8.787981,9.718692,3.447196,-6.070220,3.609930,-4.922144,9.835600,-4.394417,1.552251,5.530884,6.252684,9.654102,-4.941941,-5.591012,1.150274,-2.170281,-6.178082,1.097022,5.426017,2.249345,9.644635,-4.043305,4.701532,3.133421,-8.762543,2.276042,-0.025742,3.133699,4.088967,-0.032181,-1.734245,-1.181177,-0.035840,-9.230842,2.907106,-5.475249,4.350888,1.767094,-9.890361,-5.531298,-1.965649,-9.590470,-8.999604,3.904750,-9.304447,1.019516,-4.093130,1.575650,3.899429,8.152938,6.750516,3.432341,-7.501401,5.252511,-9.246281,0.621901,2.869137,8.291407,5.164370,4.508264,-5.561668,-1.951832,-7.163828,1.173426,7.728318,-5.472729,0.824485,-7.310421,-3.687916,-9.164898,7.851810,3.531699,6.860385,-6.439340,6.081736,-5.421855,-4.523855,6.608467,-9.606477,5.179991,2.788452,-5.720459,6.065824,-0.916473,-3.225546,-7.328964,9.742657,-9.393243,-3.373363,0.497345,-8.011200,4.594607,8.272114,1.185847,-2.034237,0.079286,-3.293427,-7.086106,-3.570342,-7.246340,3.513663,-5.152330,-6.201288,1.945039,-9.062999,1.526861,5.769651,8.513797,2.383845,-4.594071,7.647094,9.559381,-4.404460,-0.093224,-1.107992,6.410600,7.915151,-1.075489,7.712682,2.887790,4.750485,-1.696508,0.832509,4.867631,9.129870,-7.842685,6.759488,-4.480114,6.583174,4.481802,4.978957,9.903434,-8.636256,2.714337,-3.468625,8.890540,2.741528,-9.455396,-5.502031,3.360743,9.439670,-4.369242,6.319507,-6.051104,4.658005,-6.405333,0.948981,-8.598813,-2.627150,7.687099,-6.116922,-2.618014,-6.987254,-3.520373,-9.197959,-1.457540,-4.595571,-0.094450,-4.267482,-2.264544,-4.227511,-1.503170,4.437668,-5.152060,-1.358678,-2.944500,-0.043675,-6.386562,3.943151,7.725423,-8.485377,6.889754,0.211867,-4.334509,6.157808,6.993098,-5.078967,5.685660,-4.477103,4.319648,4.440824,6.134586,-2.226507,-2.955424,2.098622,8.852877,-0.746920,-6.554261,-0.165931,1.146031,7.269192,-6.640569,-7.295415,5.792266,2.266308,-0.295278,-8.408924,-4.033794,5.568656,-5.421494,7.911809,1.709242,0.957582,3.987909,-0.567954,1.765889,4.584844,9.059301,9.386494,9.882107,7.458877,2.359593,8.668990,-9.438243,-7.243793,7.006398,-7.187359,3.523698,-7.617031,-5.971599,4.147185,4.361612,8.113144,5.122566,3.126876,1.421195,-1.571210,0.344627,-8.592200,-6.119239,-3.489427,-5.161813,-8.360136,-6.753786,-5.692652,-2.049220,-2.747663,1.644239,-8.083778,-1.125206,0.413463,1.394715,-6.643175,0.565280,-1.111793,-6.109112,-8.056662,-5.809686,-2.588568,8.039343,1.308326,9.023920,4.806076,9.764475,3.426152,-5.997567,5.475689,-0.807797,-7.568035,-3.709493,7.950815,0.721437,-1.742437,6.958806,1.703305,2.615738,-5.236239,-0.703041,9.064971,2.752163,-9.047381,9.431719,6.429745,0.082420,-7.127264,4.994914,-3.399332,8.448113,-8.251691,-5.437282,0.361966,-7.953152,-7.215909,-0.624836,-7.764572,-1.457176,3.867765,-8.600610,0.361639,-2.041283,4.922070,7.851371,-0.810020,-5.983801,9.638964,-0.918762,6.930225,-0.304065,-2.749099,8.462637,8.931836,2.708924,-5.014608,4.857446,5.474705,9.465556,9.206544,1.447714,3.568950,-4.620007,-5.266543,0.625963,0.787983,2.051784,-3.463750,-4.548858,-4.777302,-6.869898,2.697113,-4.269034,4.653831,-4.767841,-6.623444,3.521488,1.550636,9.650702,-6.879805,0.867845,-7.373223,5.840639,-5.453874,-3.873066,9.502563,9.610133,5.299189,-7.953705,7.946554,2.734812,-7.460649,5.619194,2.446078,1.058815,9.700019,1.870222,1.577450,3.766002,1.637371,-6.498010,-6.231534,6.830513,0.235635,8.572697,-6.490919,-9.264553,7.153049,2.739316,-3.222681,-4.732048,5.321261,-8.400331,7.931256,-2.746247,9.598169,0.892645,-2.955111,3.290140,-8.014076,-6.803383,-9.257837,2.010539,-6.987804,-6.686285,1.139214,6.073177,-0.481561,9.715396,0.219623,-5.923765,-8.471122,-5.852405,1.121049,-1.531056,-2.426071,-0.680551,-0.709270,-0.034972,-7.578184,6.337636,-7.681404,6.967429,-1.220291,-9.089919,-0.573082,4.064805,-6.241444,-0.713724,4.397931,-5.429674,8.608703,-0.936651,-7.007415,1.994655,4.643683,8.075028,9.586483,7.519295,9.539183,7.325825,-1.797336,8.773280,-3.080738,-5.819549,-6.358465,-2.570353,-7.678472,4.143841,7.833279,6.480248,-5.596181,-3.504243,4.746364,8.071834,9.271700,0.263788,1.165442,7.539117,-3.889647,-8.005420,-5.526969,-1.983887,1.205469,3.756611,-8.428667,-2.027604,9.625681,-7.243376,-4.831160,-9.147614,-3.981864,7.611993,-6.441496,-6.125380,2.153554,5.110852,6.383396,-1.346224,-2.334739,1.008235,-9.914581,9.809564,5.556599,4.146300,5.665032,3.099741,7.849814,-3.010461,0.425851,-3.530901,7.987557,-8.241274,9.766803,7.194875,3.178136,1.814263,-5.032023,5.857708,-0.678057,8.094941,-7.016076,-1.409834,-4.914170,7.416164,7.745720,-7.684749,-3.781256,5.130611,9.510090,8.526417,0.709678,-8.623669,7.669765,8.301516,-0.797833,5.137640,-0.265106,-5.948098,-4.707240,-9.360981,7.346358,-3.592182,-2.384552,-8.193038,7.897455,-5.642467,-0.273554,-3.643474,-3.226477,5.771665,3.198361,-1.452271,-0.005301,-9.126699,-8.891166,-6.196007,6.956693,3.486856,-0.951519,7.175371,6.465234,2.120868,-1.009608,2.161285,6.368618,-7.280253,-7.684696,-0.227949,4.465413,7.032144,-9.886151,-6.939245,7.957100,2.371725,2.212441,0.851423,-8.506169,-7.527623,-8.013528,4.048771,-3.066259,-8.566497,-3.931280,-7.248143,4.728260,-6.827956,9.029233,3.307606,-2.794304,2.063699,6.440772,1.634789,6.545887,4.171713,6.487583,3.430309,-8.050414,-8.443149,7.218419,-3.060836,7.954486,-6.985686,0.692792,0.257380,-5.006535,2.657580,2.296326,8.645196,-1.396840,-9.284161,5.182438,-3.283103,-1.865806,0.319375,0.132217,-7.594409,-2.792572,4.120814,0.266291,9.793974,4.950162,8.440340,3.072294,4.556725,3.188040,-9.090688,-6.314998,-0.784935,1.468748,-5.136880,-2.591064,3.643455,2.118443,-5.477690,8.490061,-2.374198,8.029063,9.802291,-5.609614,-7.021227,5.030548,-6.333033,2.765572,-2.396898,-3.312811,2.426087,6.450204,0.370143,-5.303135,6.158469,-7.229259,-6.300672,-4.140092,-2.923163,2.498419,-7.056241,3.171367,-0.460686,-4.095947,-7.739422,7.113699,1.736526,-0.247846,8.869112,-7.650787,0.883974,-3.139785,-1.261587,8.215607,6.299362,-5.052744,4.460253,-1.439829,-5.540056,-8.113747,-7.335293,0.284771,2.145606,-7.524607,-2.652887,6.273725,9.253311,3.259981,-7.108622,1.140533,1.277803,-3.320991,4.502533,-7.872251,2.186367,-1.787202,-9.188219,0.661801,-6.665022,-1.653567,-6.346943,-3.983788,4.059647,-7.982437,-2.369927,3.282313,8.831840,1.855508,1.431040,-7.485333,-9.501289,-2.812108,-8.619290,-8.911996,9.964259,9.067636,8.384996,-6.622157,-4.966894,-8.238769,-1.773810,-7.782536,3.193722,-1.568430,-6.766886,0.031891,-7.216497,8.866623,0.930040,2.831294,8.460327,7.905148,-3.837686,5.142670,-3.589945,3.734632,-6.638648,-2.957519,8.828134,-0.451413,0.849709,5.349138,6.920435,2.140161,-1.069678,4.313624,8.002299,-9.337153,-4.564346,-7.206505,-9.126975,1.991821,-8.729077,-2.302044,6.140539,1.187432,6.510707,-3.539334,1.383243,3.889143,-7.006171,2.575289,8.278911,3.365494,-9.053818,-1.651113,7.615620,0.998725,9.119031,-5.414625,-6.455035,-2.774238,-6.085863,-1.842138,-7.139765,2.179076,-6.840863,-3.721365,9.362587,-9.124060,-5.768837,-2.150423,-1.741559,8.174683,4.941740,-3.055432,9.293247,7.643264,3.812627,3.255063,-9.443321,-8.849680,-6.083304,-8.792015,-4.304016,2.458114,-3.993524,9.978855,3.119569,-1.070730,-1.126015,-9.741005,4.387169,5.978362,9.904367,-8.490268,4.000316,-5.097916,-5.118154,2.685320,6.604944,8.868442,-0.769791,6.380428,0.691615,7.415892,-3.419515,5.217239,2.143904,0.805671,0.505361,-2.469575,-3.886303,-1.622324,-4.576093,-1.184963,-2.963538,1.941666,-5.452971,-9.180145,-2.469922,5.157743,0.347196,8.499701,3.548510,7.959613,-0.942185,6.649139,9.355049,2.123237,-6.607772,4.103270,3.277576,1.869731,7.467328,5.296876,2.271370,7.281768,6.870003,-9.333882,2.232463,-7.899907,4.088711,-1.916499,3.102465,-4.327922,3.544196,1.110841,-1.448831,-6.271725,-9.006999,-8.096452,-7.915806,6.103837,-7.497316,-0.972383,7.797583,5.693150,0.011917,1.986625,-9.125441,-8.119531,-6.287602,-1.117008,-5.637104,-7.963559,3.082619,5.661148,-6.957209,8.835946,-9.834259,-4.912216,-1.530060,-3.881651,-3.856844,9.193069,-7.427304,-4.718253,7.921463,5.260847,-7.124285,-4.524587,-8.125514,2.310503,-3.008207,9.101755,7.752649,4.475573,-6.485985,9.756195,9.778497,7.193350,-8.345025,-6.050472,-1.596824,1.941880,-4.008019,-9.283312,5.159558,6.641061,9.787225,-3.168994,0.357507,-7.302983,-3.035710,-2.521028,-8.937030,5.406760,5.277050,-3.582300,4.006757,-1.019046,-4.023520,2.128591,1.878611,9.934269,6.857597,6.763549,7.718105,-8.050484,4.879478,-5.479117,-8.663385,-5.584724,7.445083,-0.145847,-7.015326,-1.107141], dtype = "float32")#candidate|1511|(1300,)|const|float32
bop_1512 = relay.subtract(var_1509.astype('float64'), relay.reshape(const_1511.astype('float64'), relay.shape_of(var_1509))) # shape=(1300,)
var_1516 = relay.var("var_1516", dtype = "bool", shape = (13, 10, 10))#candidate|1516|(13, 10, 10)|var|bool
bop_1517 = relay.minimum(call_1508.astype('int16'), relay.reshape(var_1516.astype('int16'), relay.shape_of(call_1508))) # shape=(13, 10, 10)
bop_1520 = relay.minimum(call_1510.astype('int16'), relay.reshape(var_1516.astype('int16'), relay.shape_of(call_1510))) # shape=(13, 10, 10)
output = relay.Tuple([bop_1500,bop_1512,bop_1517,])
output2 = relay.Tuple([bop_1500,bop_1512,bop_1520,])
func_1521 = relay.Function([var_1499,var_1509,var_1516,], output)
mod['func_1521'] = func_1521
mod = relay.transform.InferType()(mod)
var_1522 = relay.var("var_1522", dtype = "uint32", shape = (4, 3, 11))#candidate|1522|(4, 3, 11)|var|uint32
var_1523 = relay.var("var_1523", dtype = "float32", shape = (1300,))#candidate|1523|(1300,)|var|float32
var_1524 = relay.var("var_1524", dtype = "bool", shape = (13, 10, 10))#candidate|1524|(13, 10, 10)|var|bool
output = func_1521(var_1522,var_1523,var_1524,)
func_1525 = relay.Function([var_1522,var_1523,var_1524,], output)
mutated_mod['func_1525'] = func_1525
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1615 = relay.const([[[-1,3,-8,-4,-5,3,-4,-7,2,-10,-3,-9,-4,-1,-10,-2],[3,-6,10,-7,5,-1,6,-6,6,-3,3,-1,7,-1,-4,-7],[-10,10,-7,5,7,-2,5,-1,4,-1,8,-5,7,-3,10,-10],[6,-2,-4,-6,-4,2,-6,10,9,-6,-3,-5,8,-1,-1,-1],[-10,-2,2,3,-4,-3,2,-10,-5,9,9,8,3,6,-2,-10],[1,-5,8,9,7,-4,-5,1,3,8,5,1,-9,1,-5,-4],[-3,-9,8,-4,-10,-5,7,7,-7,1,-2,1,9,-3,-3,1],[5,-8,8,2,-4,-4,-5,10,9,6,-6,-5,9,9,4,-9],[-10,3,-10,-7,-4,-5,6,-10,7,-6,-1,7,-8,3,8,2],[10,7,2,6,7,-2,-7,5,6,-6,-2,-8,-1,2,-2,7],[-10,4,8,-8,1,7,-2,-1,-4,9,10,-6,-8,-10,3,-2],[4,4,6,-9,2,3,10,6,3,-2,3,-3,8,-1,3,-3]],[[1,-8,-1,-4,-5,-9,-2,-1,-10,-7,-10,-4,-8,-9,-2,7],[-2,-10,4,-6,-10,-5,3,7,-6,-8,9,-5,9,-7,6,4],[-10,1,-6,-6,5,9,5,1,2,-10,-3,9,10,-5,-1,6],[-3,7,7,8,-5,10,-4,-1,-2,9,-5,9,4,4,3,9],[9,7,-1,8,1,6,-8,-2,-8,-8,-9,10,3,1,6,-3],[-9,-2,5,-6,7,10,9,-8,2,9,4,-7,5,-2,1,7],[8,-10,-9,-7,-8,-2,10,-1,-5,-6,-4,-6,4,-2,-5,-4],[-8,4,-9,-4,10,4,-5,2,9,-10,2,2,6,-8,-2,-4],[7,10,10,4,1,2,5,7,-4,7,-3,-2,2,1,-2,-6],[2,-6,-3,6,8,-9,6,9,5,5,-2,8,-7,-7,4,10],[3,-2,-6,-10,8,9,7,1,-1,-1,-3,8,8,9,-3,9],[4,-2,-10,7,2,-10,-4,-3,1,-2,3,-4,-7,4,-3,6]],[[4,10,-10,2,2,5,6,3,-1,2,4,8,1,1,-5,-3],[-7,-5,-9,1,8,7,3,1,-2,-10,9,8,-10,-7,-8,-7],[3,-1,8,6,-9,2,-3,-8,4,-1,-7,-4,-10,5,-1,-10],[-4,-1,-5,10,7,8,3,-5,5,3,-7,-3,9,-4,2,-7],[6,-1,-4,-7,-1,1,8,-4,-5,6,-3,10,7,-4,-9,5],[10,8,-7,5,7,-5,-5,9,5,2,6,-1,4,-2,-6,-10],[-5,10,-1,-1,2,-5,-4,-5,-10,8,-8,9,-2,-7,-1,5],[-3,-9,2,5,5,-1,4,9,-2,2,-4,2,-3,6,-5,-10],[-8,5,9,3,7,5,9,-7,-1,-3,-9,2,-5,4,3,-8],[-10,-2,2,5,9,-3,5,3,7,2,-10,-8,7,5,-5,-1],[-8,4,-10,1,8,-10,-2,-9,-9,-6,7,6,-5,2,-5,-3],[-7,3,7,-7,-8,7,9,10,7,9,-10,-8,7,5,4,-7]],[[6,-8,-5,-9,3,-4,2,-2,-2,6,7,8,-5,-8,-10,2],[8,-10,-7,8,5,-2,-6,9,-5,-3,-9,8,4,3,-2,4],[6,-5,-5,3,-4,8,-1,-9,1,1,-3,-2,-5,-4,1,-9],[2,-10,-6,8,9,-10,-4,-7,3,3,-6,-6,3,10,-8,10],[4,8,2,9,-1,-4,-10,-9,10,10,8,-9,-3,-4,-9,-10],[4,-10,-3,10,10,8,4,2,9,9,7,10,-8,-3,-9,-7],[-3,9,-10,10,4,7,-3,-3,-2,-2,10,-2,-4,-5,-10,-6],[-1,-6,8,10,-4,-10,-7,-1,-5,1,3,-4,-8,2,3,-8],[-4,7,10,2,4,3,6,2,5,9,-5,-8,3,-1,-7,1],[3,3,-5,9,10,-1,-6,-10,-4,-10,1,4,-10,-10,-3,-10],[1,2,-2,-3,3,-1,-7,-1,-9,2,10,5,4,-7,-8,-5],[-4,-5,8,-9,4,-1,10,-1,-2,6,-10,4,-8,-1,9,5]],[[3,-10,-2,3,8,4,-5,-4,8,10,2,-4,-4,5,2,-7],[-4,5,5,-9,-3,8,7,-6,-1,-7,-10,-3,7,-8,-10,4],[-3,9,9,8,2,-10,7,6,-2,-2,3,7,-3,-6,3,8],[-9,1,-6,1,-8,-9,-9,-4,7,5,3,-9,-10,-1,5,8],[-8,-5,1,-4,-9,3,-7,2,5,5,1,4,9,6,-7,-1],[3,-1,3,1,-8,1,1,3,-3,6,2,-7,7,6,-6,-1],[2,3,-9,7,-1,5,4,-10,4,-10,7,-9,9,-10,-4,-5],[-5,4,-7,1,1,-1,-2,3,8,4,1,2,1,-6,-3,3],[-1,1,-8,-7,-6,6,-1,6,2,-7,-5,4,10,-3,5,10],[3,-6,-2,1,-1,-8,8,4,-5,-7,-1,-8,-3,4,7,3],[-5,-10,-2,-7,-2,5,-8,-1,3,3,1,5,-2,-1,2,8],[3,-6,-3,-7,-7,-6,-5,-8,-7,2,-4,-9,5,7,5,7]],[[-7,4,8,-6,6,-10,9,9,2,-1,10,5,1,5,1,-6],[6,10,-1,-7,-6,-8,-8,10,-10,-6,-2,-6,-5,3,-4,4],[-8,2,-1,-8,9,-2,7,-6,-5,-7,-3,4,-5,-4,5,-9],[-4,-4,-3,10,10,-8,7,4,-6,1,-6,-9,-3,10,-3,-2],[-1,10,1,-7,-3,6,8,-2,-10,6,-1,9,-8,-3,-9,5],[-1,5,4,-3,-6,7,-10,8,5,8,-9,-1,5,5,8,5],[5,-3,1,-6,-4,8,-5,6,2,-5,10,-7,7,-10,-2,-6],[2,-5,-5,9,-7,5,-5,1,4,10,1,8,9,-5,-2,9],[-10,6,-9,-7,4,-8,1,-8,-5,-9,-8,-6,-7,-2,-4,3],[-7,-1,6,3,-10,-8,-8,5,9,-2,3,7,-3,-8,-10,-2],[10,1,3,-5,-5,-1,-3,8,4,-10,2,-8,-4,9,-7,-9],[6,2,-6,-10,10,-5,2,5,-5,-3,-10,-9,7,-8,-1,-9]],[[1,-6,-8,7,2,3,5,-7,4,-7,-3,1,-6,-4,8,-6],[7,-5,2,7,3,-5,-9,-9,4,-9,4,-7,-1,-9,-4,-5],[9,-8,-1,5,4,-10,-4,-7,-7,-7,6,-9,-5,-5,3,2],[9,5,2,4,9,8,-5,2,-1,10,5,4,8,-10,9,-5],[1,-8,9,6,6,-9,-9,10,2,-7,9,-8,1,2,-10,-8],[-8,-2,8,2,6,-4,4,6,6,-4,7,6,10,7,4,10],[2,8,4,6,1,4,6,5,3,10,1,-7,-3,-2,-8,10],[4,1,-6,-7,-9,-6,1,8,3,4,-2,-7,-3,-4,1,4],[10,3,-2,-6,-1,5,-6,-4,1,-2,-8,9,-10,-6,-5,-6],[6,2,10,-9,10,1,-9,4,-4,4,-7,-5,8,-6,2,9],[-1,-3,8,-10,-8,-6,-7,-8,9,2,6,1,-1,-6,-10,10],[-7,2,7,-8,2,-3,-4,-9,4,9,3,4,8,6,7,9]],[[8,-9,-3,1,1,-6,6,10,-7,8,8,3,-1,3,-6,2],[-6,-1,10,-8,-8,7,-8,-2,3,-6,-3,6,9,-2,6,8],[-8,4,-1,-8,5,-10,2,1,-3,8,-7,10,8,10,7,-7],[-9,3,-3,8,8,-4,-4,-8,1,3,-2,5,-4,-3,5,7],[1,5,-3,-6,2,1,-5,3,5,-8,-6,7,10,-4,-8,-10],[-1,6,7,-4,4,-5,6,-6,3,-10,-7,-10,4,3,-2,-4],[-7,8,-4,4,-2,6,-6,-1,-8,-7,-7,-3,8,-7,-10,-7],[3,2,-2,5,7,1,6,4,4,-3,8,-6,-4,9,5,-3],[-3,-8,-3,-6,6,4,3,10,-9,10,8,6,-10,8,-2,6],[7,-10,-8,-9,-6,-10,10,8,-2,-9,-4,-4,1,-10,4,8],[-9,-10,-5,-3,3,-3,1,4,-8,6,9,6,2,1,-3,7],[-7,9,5,6,3,-3,-9,-10,2,-10,-5,-1,4,5,2,9]],[[9,3,10,-6,-9,9,-7,-6,6,2,-4,-10,-4,8,-9,7],[-5,-3,-2,-9,-7,-8,9,5,-1,9,-7,-6,4,-9,10,-10],[-6,1,-4,-8,1,7,-3,-7,7,-10,5,-7,7,-9,-4,2],[-3,-10,5,8,-6,-8,-5,-3,-1,9,8,-2,-4,4,1,9],[-8,1,-7,-9,-1,-5,-2,-1,1,8,5,-6,4,-6,5,8],[-4,-9,7,-7,-5,-7,1,1,-9,3,8,3,-1,-6,6,-4],[-3,3,-2,-8,-1,5,4,-5,-2,7,10,-3,-10,-9,-3,5],[7,5,8,-6,10,-2,7,7,6,3,-5,6,5,10,-10,7],[-4,-7,-8,3,6,4,1,-7,7,-2,6,8,5,3,-6,5],[3,-4,6,-10,-1,8,-8,-8,4,-7,-9,-2,-6,2,-5,2],[8,8,-3,6,3,-7,-8,-5,-6,3,-1,10,1,-7,-10,4],[-5,1,3,2,-3,6,-6,6,-5,-9,-3,4,-2,8,-2,-9]]], dtype = "uint16")#candidate|1615|(9, 12, 16)|const|uint16
var_1616 = relay.var("var_1616", dtype = "uint16", shape = (9, 12, 16))#candidate|1616|(9, 12, 16)|var|uint16
bop_1617 = relay.bitwise_or(const_1615.astype('uint16'), relay.reshape(var_1616.astype('uint16'), relay.shape_of(const_1615))) # shape=(9, 12, 16)
uop_1620 = relay.rsqrt(var_1616.astype('float64')) # shape=(9, 12, 16)
output = relay.Tuple([bop_1617,uop_1620,])
output2 = relay.Tuple([bop_1617,uop_1620,])
func_1624 = relay.Function([var_1616,], output)
mod['func_1624'] = func_1624
mod = relay.transform.InferType()(mod)
var_1625 = relay.var("var_1625", dtype = "uint16", shape = (9, 12, 16))#candidate|1625|(9, 12, 16)|var|uint16
output = func_1624(var_1625)
func_1626 = relay.Function([var_1625], output)
mutated_mod['func_1626'] = func_1626
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1636 = relay.const([[[10,-4]],[[10,-8]],[[9,-3]],[[-10,-2]],[[8,10]],[[7,1]],[[6,-6]],[[-6,2]],[[4,6]],[[10,-1]],[[3,-5]],[[-1,-10]],[[10,-10]]], dtype = "int32")#candidate|1636|(13, 1, 2)|const|int32
var_1637 = relay.var("var_1637", dtype = "int32", shape = (13, 9, 2))#candidate|1637|(13, 9, 2)|var|int32
bop_1638 = relay.bitwise_and(const_1636.astype('int32'), var_1637.astype('int32')) # shape=(13, 9, 2)
uop_1652 = relay.sqrt(bop_1638.astype('float64')) # shape=(13, 9, 2)
output = relay.Tuple([uop_1652,])
output2 = relay.Tuple([uop_1652,])
func_1654 = relay.Function([var_1637,], output)
mod['func_1654'] = func_1654
mod = relay.transform.InferType()(mod)
var_1655 = relay.var("var_1655", dtype = "int32", shape = (13, 9, 2))#candidate|1655|(13, 9, 2)|var|int32
output = func_1654(var_1655)
func_1656 = relay.Function([var_1655], output)
mutated_mod['func_1656'] = func_1656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1730 = relay.var("var_1730", dtype = "float32", shape = (4, 2, 15))#candidate|1730|(4, 2, 15)|var|float32
uop_1731 = relay.rsqrt(var_1730.astype('float32')) # shape=(4, 2, 15)
output = relay.Tuple([uop_1731,])
output2 = relay.Tuple([uop_1731,])
func_1739 = relay.Function([var_1730,], output)
mod['func_1739'] = func_1739
mod = relay.transform.InferType()(mod)
mutated_mod['func_1739'] = func_1739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1740 = relay.var("var_1740", dtype = "float32", shape = (4, 2, 15))#candidate|1740|(4, 2, 15)|var|float32
func_1739_call = mutated_mod.get_global_var('func_1739')
call_1741 = func_1739_call(var_1740)
output = call_1741
func_1742 = relay.Function([var_1740], output)
mutated_mod['func_1742'] = func_1742
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1970 = relay.var("var_1970", dtype = "float64", shape = (5, 11, 13))#candidate|1970|(5, 11, 13)|var|float64
uop_1971 = relay.sinh(var_1970.astype('float64')) # shape=(5, 11, 13)
func_1654_call = mod.get_global_var('func_1654')
func_1656_call = mutated_mod.get_global_var('func_1656')
var_1978 = relay.var("var_1978", dtype = "int32", shape = (234,))#candidate|1978|(234,)|var|int32
call_1977 = relay.TupleGetItem(func_1654_call(relay.reshape(var_1978.astype('int32'), [13, 9, 2])), 0)
call_1979 = relay.TupleGetItem(func_1656_call(relay.reshape(var_1978.astype('int32'), [13, 9, 2])), 0)
func_1654_call = mod.get_global_var('func_1654')
func_1656_call = mutated_mod.get_global_var('func_1656')
call_1983 = relay.TupleGetItem(func_1654_call(relay.reshape(call_1977.astype('int32'), [13, 9, 2])), 0)
call_1984 = relay.TupleGetItem(func_1656_call(relay.reshape(call_1977.astype('int32'), [13, 9, 2])), 0)
func_1039_call = mod.get_global_var('func_1039')
func_1043_call = mutated_mod.get_global_var('func_1043')
const_1995 = relay.const(-2, dtype = "uint8")#candidate|1995|()|const|uint8
const_1996 = relay.const([[-4,2,-4,-2,8,8,-7,-7,1,-8,-8,3,1,-8,-1,-5,-9,2,3,-6,-9,8,-1,8],[1,-6,-5,7,-8,2,-9,-6,-6,-2,6,10,4,-3,5,6,7,2,-10,-9,-6,-10,10,3],[-6,-4,5,-10,-4,-8,4,4,6,3,-7,-6,5,-7,-4,10,-7,4,10,5,-7,-4,6,10],[6,-10,8,-7,2,10,6,7,6,-9,5,2,-8,-3,-6,6,10,6,-2,3,-9,-1,4,-2],[9,-7,-7,8,-9,10,6,9,2,4,-8,-7,9,-4,3,-3,9,-9,-1,2,10,5,-7,-3],[-10,2,-3,9,-6,5,10,6,-8,-6,3,-10,9,10,2,7,-2,3,10,9,4,-7,-2,4],[5,-2,7,3,9,-1,7,-6,9,-6,1,2,9,-2,10,2,7,8,-6,-9,4,-10,10,-2],[5,-5,-1,-4,8,-3,3,6,9,-3,4,-4,3,-1,-9,-1,1,3,-3,-4,4,-9,-1,4]], dtype = "int64")#candidate|1996|(8, 24)|const|int64
call_1994 = relay.TupleGetItem(func_1039_call(relay.reshape(const_1995.astype('uint8'), []), relay.reshape(const_1996.astype('int64'), [96, 2]), ), 0)
call_1997 = relay.TupleGetItem(func_1043_call(relay.reshape(const_1995.astype('uint8'), []), relay.reshape(const_1996.astype('int64'), [96, 2]), ), 0)
bop_2010 = relay.equal(uop_1971.astype('bool'), relay.reshape(var_1970.astype('bool'), relay.shape_of(uop_1971))) # shape=(5, 11, 13)
func_195_call = mod.get_global_var('func_195')
func_197_call = mutated_mod.get_global_var('func_197')
const_2022 = relay.const([-7.862877,7.022008,-5.368307,5.669895,-9.398440,-1.604749,3.348460,-6.379061,2.225732,-3.222379,-5.542307,-6.344810,-7.238218,-3.171873,-2.976252,-0.721131,3.293475,8.710576,-2.924202,-7.729851,-3.819265,-6.586915,2.712010,-6.535185,4.733194,-9.126127,2.167185,7.613622,4.997195,6.999701,4.665214,-2.666491,9.646196,-8.848860,8.052656,-1.539790,-8.471998,0.142506,6.282936,-6.534071,-6.754186,-8.761228,-1.362707,8.575177,5.843445,8.920866,6.494359,4.563528,0.977920,-8.615916,2.247889,-5.463073,7.944069,9.625261,-9.351011,-3.235922,-7.667799,-6.860327,-9.651784,-0.074391,-4.314039,-9.335362,0.841150,-7.389559,-2.193442,9.360857,0.730335,3.190107,-3.057840,8.182662,-3.284974,1.796363,7.112394,0.899307,-9.095876,0.017376,-8.675304,-3.823042,-0.515362,-4.425769,9.819159,-2.259493,-4.548357,-1.440958,-2.799750,2.036661,6.936113,1.558550,-1.131546,-2.401101,-0.825406,4.103254,1.678291,-2.247423,-9.731778,-6.459093,3.931841,-6.519634,-5.486382,-4.425650,-9.453945,-8.054890,-4.840993,-7.292194,-2.543918,4.211093,7.214036,6.758607,-0.200910,-3.150893,5.363421,7.295832,8.085414,-2.316520,-3.502595,-4.013264,-7.543698,-6.601222,-2.411071,3.969254,3.876088,4.079151,1.202711,4.023478,-8.855151,-3.829406,3.704788,-2.998466,8.152413,-1.825059,2.387443,-1.095808,1.737264,2.399130,-5.193560,6.071198,4.005677,-1.244701,3.661753,3.464089,6.187741,8.781112,9.860620,8.831217,-3.062287,-4.869037,-6.360513,3.825702,2.319624,7.811319,0.808626,2.515115,8.482494,7.525808,3.382355,-9.313541,-5.036291,1.456077,-9.263268,-5.606493,1.338698,-2.348203,-8.245776,3.901935,-7.526514,4.979927,1.586575,5.590756,-9.695308,-3.600116,3.987437,-2.599418,-2.718384,5.306647,-1.483577,-2.549353,-0.646531,7.573325,-7.043009,-4.512260], dtype = "float32")#candidate|2022|(180,)|const|float32
call_2021 = relay.TupleGetItem(func_195_call(relay.reshape(const_2022.astype('float32'), [3, 10, 6])), 0)
call_2023 = relay.TupleGetItem(func_197_call(relay.reshape(const_2022.astype('float32'), [3, 10, 6])), 0)
output = relay.Tuple([call_1977,var_1978,call_1983,call_1994,const_1995,const_1996,bop_2010,call_2021,const_2022,])
output2 = relay.Tuple([call_1979,var_1978,call_1984,call_1997,const_1995,const_1996,bop_2010,call_2023,const_2022,])
func_2037 = relay.Function([var_1970,var_1978,], output)
mod['func_2037'] = func_2037
mod = relay.transform.InferType()(mod)
var_2038 = relay.var("var_2038", dtype = "float64", shape = (5, 11, 13))#candidate|2038|(5, 11, 13)|var|float64
var_2039 = relay.var("var_2039", dtype = "int32", shape = (234,))#candidate|2039|(234,)|var|int32
output = func_2037(var_2038,var_2039,)
func_2040 = relay.Function([var_2038,var_2039,], output)
mutated_mod['func_2040'] = func_2040
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2204 = relay.var("var_2204", dtype = "float64", shape = (15, 10, 8))#candidate|2204|(15, 10, 8)|var|float64
uop_2205 = relay.sqrt(var_2204.astype('float64')) # shape=(15, 10, 8)
bop_2225 = relay.minimum(uop_2205.astype('uint8'), relay.reshape(var_2204.astype('uint8'), relay.shape_of(uop_2205))) # shape=(15, 10, 8)
uop_2229 = relay.log(var_2204.astype('float32')) # shape=(15, 10, 8)
output = relay.Tuple([bop_2225,uop_2229,])
output2 = relay.Tuple([bop_2225,uop_2229,])
func_2231 = relay.Function([var_2204,], output)
mod['func_2231'] = func_2231
mod = relay.transform.InferType()(mod)
var_2232 = relay.var("var_2232", dtype = "float64", shape = (15, 10, 8))#candidate|2232|(15, 10, 8)|var|float64
output = func_2231(var_2232)
func_2233 = relay.Function([var_2232], output)
mutated_mod['func_2233'] = func_2233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2330 = relay.var("var_2330", dtype = "float32", shape = (3, 8, 6))#candidate|2330|(3, 8, 6)|var|float32
var_2331 = relay.var("var_2331", dtype = "float32", shape = (3, 8, 6))#candidate|2331|(3, 8, 6)|var|float32
bop_2332 = relay.minimum(var_2330.astype('float32'), relay.reshape(var_2331.astype('float32'), relay.shape_of(var_2330))) # shape=(3, 8, 6)
func_1521_call = mod.get_global_var('func_1521')
func_1525_call = mutated_mod.get_global_var('func_1525')
var_2355 = relay.var("var_2355", dtype = "uint32", shape = (33, 4))#candidate|2355|(33, 4)|var|uint32
var_2356 = relay.var("var_2356", dtype = "float32", shape = (1300,))#candidate|2356|(1300,)|var|float32
call_2354 = relay.TupleGetItem(func_1521_call(relay.reshape(var_2355.astype('uint32'), [4, 3, 11]), relay.reshape(var_2356.astype('float32'), [1300,]), relay.reshape(var_2356.astype('bool'), [13, 10, 10]), ), 1)
call_2357 = relay.TupleGetItem(func_1525_call(relay.reshape(var_2355.astype('uint32'), [4, 3, 11]), relay.reshape(var_2356.astype('float32'), [1300,]), relay.reshape(var_2356.astype('bool'), [13, 10, 10]), ), 1)
uop_2360 = relay.asin(bop_2332.astype('float32')) # shape=(3, 8, 6)
func_1152_call = mod.get_global_var('func_1152')
func_1156_call = mutated_mod.get_global_var('func_1156')
call_2369 = func_1152_call(relay.reshape(var_2356.astype('float32'), [13, 10, 10]), relay.reshape(var_2356.astype('float32'), [13, 10, 10]), )
call_2370 = func_1152_call(relay.reshape(var_2356.astype('float32'), [13, 10, 10]), relay.reshape(var_2356.astype('float32'), [13, 10, 10]), )
func_1654_call = mod.get_global_var('func_1654')
func_1656_call = mutated_mod.get_global_var('func_1656')
const_2374 = relay.const([-7,2,2,-8,1,-8,-9,-10,-7,-10,1,7,10,5,6,-2,-8,7,-2,-7,-9,7,1,-8,-2,-1,10,6,-5,3,-3,-8,-9,-9,4,-4,-2,-10,-8,3,7,-3,-1,-6,-2,-10,1,-3,5,-5,-9,-9,-10,4,-5,8,-9,8,1,-8,2,7,-6,-6,-4,7,10,2,4,7,-3,3,7,-3,5,3,-9,-1,-3,-7,9,-10,-1,10,10,-7,2,6,1,-8,-1,6,-1,7,5,1,-8,-3,-5,6,-10,-8,-5,4,4,-4,4,4,-6,-1,5,-5,3,3,2,-3,2,-9,-6,5,-8,2,9,-9,-9,6,-4,-8,-10,7,10,-6,-1,-1,7,-4,3,9,4,-6,10,-6,2,3,4,-4,10,-9,3,8,6,-7,2,10,3,8,8,8,-9,-2,1,-7,3,1,-6,10,-1,-10,10,-8,9,-6,3,9,-5,4,6,-6,-9,-9,-6,-8,3,-1,-9,-5,8,-5,7,2,4,7,-9,-1,2,5,6,-8,-1,-3,9,-1,1,-9,-10,10,8,6,-4,6,-6,5,-6,10,-1,10,-10,8,-6,2,7,2,1,3,-6,1,-1,3,-9,-5,-7,-4,-5,-10], dtype = "int32")#candidate|2374|(234,)|const|int32
call_2373 = relay.TupleGetItem(func_1654_call(relay.reshape(const_2374.astype('int32'), [13, 9, 2])), 0)
call_2375 = relay.TupleGetItem(func_1656_call(relay.reshape(const_2374.astype('int32'), [13, 9, 2])), 0)
uop_2384 = relay.sin(uop_2360.astype('float32')) # shape=(3, 8, 6)
bop_2388 = relay.power(var_2331.astype('float32'), relay.reshape(var_2330.astype('float32'), relay.shape_of(var_2331))) # shape=(3, 8, 6)
func_1152_call = mod.get_global_var('func_1152')
func_1156_call = mutated_mod.get_global_var('func_1156')
call_2404 = func_1152_call(relay.reshape(var_2356.astype('float32'), [13, 10, 10]), relay.reshape(call_2354.astype('float32'), [13, 10, 10]), )
call_2405 = func_1152_call(relay.reshape(var_2356.astype('float32'), [13, 10, 10]), relay.reshape(call_2354.astype('float32'), [13, 10, 10]), )
func_636_call = mod.get_global_var('func_636')
func_638_call = mutated_mod.get_global_var('func_638')
var_2413 = relay.var("var_2413", dtype = "float64", shape = (78,))#candidate|2413|(78,)|var|float64
call_2412 = func_636_call(relay.reshape(var_2413.astype('float64'), [1, 13, 6]))
call_2414 = func_636_call(relay.reshape(var_2413.astype('float64'), [1, 13, 6]))
output = relay.Tuple([call_2354,var_2355,var_2356,call_2369,call_2373,const_2374,uop_2384,bop_2388,call_2404,call_2412,var_2413,])
output2 = relay.Tuple([call_2357,var_2355,var_2356,call_2370,call_2375,const_2374,uop_2384,bop_2388,call_2405,call_2414,var_2413,])
func_2433 = relay.Function([var_2330,var_2331,var_2355,var_2356,var_2413,], output)
mod['func_2433'] = func_2433
mod = relay.transform.InferType()(mod)
mutated_mod['func_2433'] = func_2433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2433_call = mutated_mod.get_global_var('func_2433')
var_2435 = relay.var("var_2435", dtype = "float32", shape = (3, 8, 6))#candidate|2435|(3, 8, 6)|var|float32
var_2436 = relay.var("var_2436", dtype = "float32", shape = (3, 8, 6))#candidate|2436|(3, 8, 6)|var|float32
var_2437 = relay.var("var_2437", dtype = "uint32", shape = (33, 4))#candidate|2437|(33, 4)|var|uint32
var_2438 = relay.var("var_2438", dtype = "float32", shape = (1300,))#candidate|2438|(1300,)|var|float32
var_2439 = relay.var("var_2439", dtype = "float64", shape = (78,))#candidate|2439|(78,)|var|float64
call_2434 = func_2433_call(var_2435,var_2436,var_2437,var_2438,var_2439,)
output = call_2434
func_2440 = relay.Function([var_2435,var_2436,var_2437,var_2438,var_2439,], output)
mutated_mod['func_2440'] = func_2440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2471 = relay.var("var_2471", dtype = "float64", shape = (1, 12, 11))#candidate|2471|(1, 12, 11)|var|float64
var_2472 = relay.var("var_2472", dtype = "float64", shape = (1, 12, 11))#candidate|2472|(1, 12, 11)|var|float64
bop_2473 = relay.minimum(var_2471.astype('float64'), relay.reshape(var_2472.astype('float64'), relay.shape_of(var_2471))) # shape=(1, 12, 11)
bop_2482 = relay.mod(bop_2473.astype('float32'), relay.reshape(var_2471.astype('float32'), relay.shape_of(bop_2473))) # shape=(1, 12, 11)
func_1521_call = mod.get_global_var('func_1521')
func_1525_call = mutated_mod.get_global_var('func_1525')
const_2488 = relay.const([[9.044895],[-6.167114],[-7.046670],[-6.460335],[7.998978],[-1.454956],[9.256097],[-9.158519],[1.905873],[8.220336],[-7.624328],[8.580032],[-4.572957],[-7.613327],[6.053126],[-0.837682],[8.211253],[9.576150],[-9.241604],[2.355637],[6.738544],[-9.927701],[0.272027],[-0.488823],[2.263323],[-1.390309],[-8.094432],[3.611022],[-0.601788],[-9.121103],[-9.202033],[-0.014485],[1.180164],[-2.855381],[-0.770612],[-4.894399],[8.433784],[-8.664510],[7.255922],[6.235835],[-3.616198],[-4.186753],[3.850905],[-0.400210],[6.363673],[-3.679250],[2.290244],[4.234153],[-7.878049],[1.924142],[0.364258],[-5.397527],[-6.807782],[-4.887428],[6.731446],[-6.244392],[1.230827],[-3.317947],[-4.327084],[8.859568],[4.716320],[-5.092844],[-5.871967],[-8.044586],[8.033337],[9.247130],[5.918589],[5.882669],[3.587680],[0.268989],[0.213834],[-0.788546],[-8.831933],[6.780627],[6.537213],[-8.924450],[-2.021912],[-6.222762],[-7.841817],[1.137130],[-5.945648],[-1.560885],[-5.747841],[7.789501],[4.380848],[-3.791137],[5.191760],[-8.829525],[-7.248008],[-6.218834],[-5.053130],[-1.085108],[5.246689],[9.466097],[2.306663],[0.193811],[-9.779518],[4.035547],[3.913947],[-6.518916],[9.526472],[2.064148],[4.330576],[-9.243760],[-1.192754],[-0.198051],[0.173257],[8.217231],[5.873405],[-9.470074],[-7.940589],[-7.846910],[-6.118025],[3.621653],[-6.066049],[-3.106176],[8.725197],[-9.446326],[9.810791],[-3.270478],[-1.610476],[-9.221876],[6.121495],[-0.348469],[2.232259],[-1.857805],[0.037931],[-8.406379],[-0.572279],[2.331749],[9.397143],[1.680456],[-6.595406],[2.542278],[-8.965990],[5.015199],[-7.332618],[2.599036],[5.325697],[-5.332514],[-8.330845],[-8.244443],[7.449140],[7.042751],[5.699072],[0.908170],[2.428376],[4.071152],[-3.095379],[1.641509],[-2.438002],[7.237507],[4.832289],[-4.647890],[4.286924],[9.652419],[4.458381],[9.806100],[-0.256733],[0.428039],[4.066476],[-9.475626],[0.016361],[-7.285760],[-2.137168],[-6.610950],[-3.966091],[-7.216647],[-2.536940],[5.814473],[8.005778],[-4.004164],[-8.854624],[-6.948418],[-6.951459],[-3.997747],[-7.640937],[-9.669509],[-0.675591],[7.989173],[2.096820],[4.392822],[-9.925345],[1.727393],[0.016697],[-7.712484],[3.231158],[2.637610],[-3.686747],[-8.921975],[3.082769],[-0.724822],[0.649642],[2.869758],[-8.795687],[-7.369538],[6.461829],[5.189282],[4.842874],[-0.127560],[9.687590],[-0.526403],[8.373220],[6.812930],[4.022337],[4.552201],[-5.859525],[-6.880658],[-2.011679],[-5.464368],[-6.642764],[-7.478119],[-0.021616],[4.174081],[-2.694208],[-6.099967],[-1.108637],[-8.816726],[9.160701],[9.847722],[8.116253],[9.877581],[3.802940],[4.978013],[-1.426266],[-5.728589],[6.670023],[-0.746049],[-9.910362],[3.043237],[4.561224],[7.452388],[-8.624013],[-3.480940],[9.992397],[-4.214877],[-8.955270],[-7.207656],[5.930126],[5.851148],[4.831291],[0.200510],[6.446065],[0.382926],[7.907290],[-5.565419],[-5.107143],[7.911076],[-1.553113],[-3.403976],[6.640779],[-2.564086],[1.044799],[9.182393],[0.580870],[-6.313150],[-1.675489],[4.776079],[3.324053],[-9.583730],[2.816400],[9.365584],[-7.679138],[0.241964],[-7.858453],[-2.869699],[-4.916588],[2.542984],[2.344233],[1.031140],[-9.381490],[-2.265129],[5.679723],[-6.428150],[-5.667070],[8.268854],[0.371993],[5.056948],[8.108699],[-0.075915],[9.897751],[-6.643153],[-7.055058],[5.954191],[-8.273638],[-1.890265],[-8.463163],[-0.938636],[-4.595846],[-3.205893],[5.709473],[-7.963875],[-3.454614],[-0.992146],[-2.062651],[-0.769868],[9.266823],[-2.089431],[-7.162718],[8.447330],[-3.404575],[5.192006],[-3.955132],[-7.346868],[-4.576820],[0.890199],[-6.299606],[1.289768],[-7.386270],[3.624113],[-1.446320],[-3.827401],[-5.377197],[2.968810],[-7.199862],[9.814343],[-6.837486],[8.862765],[-2.535523],[4.907650],[-9.504260],[-9.436864],[5.415035],[4.407953],[2.358234],[-5.911014],[-8.222374],[6.461633],[9.031076],[-2.503986],[-5.810518],[-5.992218],[-1.787320],[5.481577],[8.466734],[-4.225871],[-6.880389],[5.161037],[-1.308612],[0.841016],[4.805198],[2.331066],[-2.173366],[-8.292123],[-1.074831],[1.005052],[-2.000012],[4.901602],[3.596013],[-0.786143],[-9.419750],[-5.886235],[4.882983],[-7.343765],[-4.833418],[-6.684247],[6.341439],[-0.843009],[-4.947855],[-3.150832],[3.363416],[9.976696],[0.551172],[-6.294502],[-7.283887],[-1.948868],[5.734599],[1.686009],[-4.449931],[-2.181703],[8.325344],[-8.777302],[8.415326],[-9.380777],[9.946300],[-7.429788],[-8.562444],[-0.009574],[-7.231936],[-6.457407],[4.976016],[4.534379],[8.729275],[-2.763462],[-9.844871],[-6.976680],[4.944030],[0.646184],[4.577040],[-5.293034],[-6.980663],[9.202704],[8.525940],[-4.171000],[2.514639],[-8.553488],[6.226375],[0.533846],[-3.958868],[-1.637483],[5.709083],[-3.061187],[7.445520],[4.298060],[8.398667],[5.805889],[-9.628540],[-2.818426],[7.942176],[2.135027],[0.011518],[6.617955],[-9.999567],[9.842234],[-5.519256],[6.884741],[-2.828182],[-2.744925],[7.517364],[5.222306],[-1.941933],[-9.951565],[0.093751],[-4.914002],[-4.503811],[4.883315],[6.296403],[-7.261860],[-7.405663],[-1.304279],[-8.068856],[-3.138042],[1.141503],[-7.787333],[-3.352807],[6.355409],[0.315242],[0.933987],[-4.788325],[4.543348],[4.330264],[-8.666679],[0.938526],[-7.496738],[-6.097725],[0.948717],[5.870431],[4.219855],[-7.994170],[4.667453],[1.466699],[4.671872],[8.379185],[-5.913805],[-1.479563],[-9.866910],[-3.096021],[-6.374718],[4.721788],[1.729341],[6.271291],[-2.948671],[-8.213767],[7.504449],[-7.918840],[3.193372],[7.743540],[-7.677653],[1.414955],[-8.888708],[-4.427246],[-5.230905],[7.515941],[-9.783852],[1.395660],[-7.284025],[-2.440760],[6.440455],[7.817471],[-8.665583],[-5.175024],[0.650577],[-2.782744],[-6.896795],[-0.615254],[-3.708483],[3.029486],[-2.146607],[5.065823],[9.346847],[-8.539389],[-2.114384],[3.188434],[-0.204599],[-9.286635],[-6.515614],[-7.533054],[8.956190],[3.805925],[3.867617],[-7.821316],[-7.603225],[-7.011245],[6.049296],[1.484598],[-5.268420],[-3.699976],[7.914227],[4.498801],[-5.072577],[-0.259404],[-2.654034],[2.761482],[7.976130],[1.609718],[-7.952046],[-3.280435],[4.121066],[3.500771],[5.554735],[9.412714],[6.357348],[-7.367744],[8.136788],[-6.074069],[1.792059],[-1.277394],[6.266011],[3.053205],[-2.256582],[6.425651],[0.329018],[4.926265],[-2.257597],[9.099140],[-1.478008],[-8.901245],[-3.486627],[-0.795179],[-5.732050],[-3.920561],[5.903575],[3.902748],[-0.027993],[5.104769],[5.551541],[1.202782],[2.953604],[1.609540],[-8.188176],[8.285532],[4.958204],[-5.957216],[-3.711874],[-3.676349],[5.059950],[-1.843974],[3.577183],[9.652050],[1.119986],[6.248730],[-4.413476],[5.571292],[2.205262],[1.372718],[9.352505],[-7.045739],[-7.287115],[-0.736271],[4.808031],[5.533866],[4.972504],[8.974680],[4.191768],[-0.524695],[-7.166227],[0.317848],[1.721738],[-0.644124],[2.095749],[-8.766681],[-0.137405],[-7.364319],[8.491163],[2.876202],[9.305643],[6.967319],[-5.665073],[8.341658],[0.026744],[-0.362916],[1.432840],[-8.586795],[-7.125944],[-1.687990],[4.789663],[-4.666747],[9.915782],[-6.253337],[-5.375836],[-0.744794],[7.915722],[-2.646552],[-3.067493],[1.975317],[-8.728698],[4.368408],[-6.058722],[-1.632038],[-9.139435],[-8.065308],[4.731625],[0.598637],[8.959744],[2.660967],[8.706227],[7.825847],[4.815967],[9.982037],[-0.633488],[3.581923],[-2.235665],[-8.700110],[9.590446],[-3.651317],[4.048315],[8.387219],[9.058166],[-6.296382],[-8.643511],[-5.775349],[7.929107],[-8.535412],[-2.840135],[-7.694927],[2.650531],[7.431376],[8.545418],[-3.474988],[-5.291617],[-3.475427],[6.656926],[-5.079502],[3.030260],[-4.034620],[-5.896229],[2.517007],[-8.098678],[-6.811482],[2.286987],[5.144592],[-3.641672],[1.812844],[3.921990],[-9.581988],[-5.002923],[4.264289],[-8.576982],[-1.574609],[-8.163356],[-3.526724],[-7.278489],[-8.671164],[3.637062],[7.719506],[-9.155726],[3.053205],[2.509676],[-2.817076],[-2.215604],[-7.303774],[3.496270],[6.046210],[6.595834],[1.168418],[-2.625812],[-5.361949],[-6.795804],[2.513832],[8.364541],[-8.671118],[-4.256127],[-5.605607],[-5.623639],[-1.182151],[-3.039601],[0.745663],[-5.495909],[5.020748],[2.286794],[-3.423797],[-0.652619],[-8.369361],[5.063044],[8.041444],[-0.520685],[-9.015193],[6.531379],[-2.177966],[3.053954],[3.807438],[7.661414],[-9.554461],[8.610477],[2.389062],[-9.825876],[-9.924409],[-9.134455],[4.425581],[-6.054364],[-2.298702],[5.339779],[5.827338],[3.599116],[-9.127503],[-9.171981],[-6.542379],[6.223829],[-6.023018],[8.233718],[4.883341],[7.344840],[-8.459887],[-1.130148],[9.061225],[-1.008607],[5.289407],[9.886843],[1.179194],[-3.989757],[6.156691],[2.299137],[-8.729816],[-7.387747],[8.444487],[-9.045535],[-4.247578],[-0.952694],[8.001937],[-7.083633],[2.869605],[-5.234805],[-0.578589],[-4.388873],[-6.421778],[-1.640263],[7.488355],[-5.317237],[-3.229557],[-7.934597],[-9.389150],[-6.561738],[-2.722269],[6.669831],[0.894816],[2.518080],[0.322112],[5.610617],[6.226113],[7.823337],[-3.913728],[1.297241],[3.652772],[2.523355],[7.943480],[8.922794],[-4.653666],[-3.310019],[-6.553645],[-7.968146],[4.450712],[-9.078381],[0.102619],[9.948614],[6.296611],[-8.826875],[-7.616617],[-3.228812],[9.601853],[1.603865],[7.305512],[-3.717869],[-7.729721],[8.645074],[6.519707],[-8.973073],[8.067057],[5.416842],[-7.131532],[1.633760],[7.829242],[1.310828],[4.550392],[7.532392],[0.105468],[8.130266],[6.671661],[-2.411212],[-7.985104],[-4.187512],[9.498469],[7.867031],[8.916930],[8.437024],[6.992436],[-9.159013],[-3.436868],[-0.037539],[8.285621],[6.703209],[-4.400890],[3.344993],[-4.537398],[0.093216],[7.486118],[-6.090543],[-5.916345],[1.458812],[-1.788097],[7.679288],[3.117639],[-1.407303],[5.993765],[-4.808740],[-0.486097],[1.133831],[-1.095807],[-7.763593],[-5.091121],[-4.162899],[8.673560],[-0.780458],[-3.166597],[-0.449657],[-6.130299],[-4.342143],[6.510777],[5.223065],[4.726838],[5.309934],[1.978813],[-6.243515],[4.604520],[1.599136],[-3.931229],[-0.503802],[-9.417991],[6.717520],[-7.010555],[-1.131261],[6.224359],[3.601860],[0.414227],[5.728250],[-6.485100],[3.883340],[3.364861],[6.940416],[-9.961797],[-7.292007],[-8.119914],[4.982861],[0.969610],[9.689306],[-7.782199],[-9.765280],[-7.845870],[-7.000344],[-8.347812],[-7.010332],[-2.750654],[2.001618],[3.517662],[-0.006949],[7.644108],[-3.186529],[9.494199],[-1.864323],[-2.064007],[0.453245],[0.032075],[-3.956405],[3.819155],[-6.807780],[-4.681968],[-7.630698],[-5.098574],[-8.806514],[-2.247256],[8.130141],[6.475753],[-1.391905],[0.218804],[7.518679],[-0.698715],[-8.794592],[-6.787631],[-5.462931],[9.811776],[-0.282736],[3.754156],[-0.750954],[-6.046323],[-6.113146],[-0.736312],[-9.610394],[8.306905],[-4.248879],[0.485113],[6.396071],[-0.940666],[-2.974553],[-3.305328],[-0.466053],[9.638423],[-8.633173],[3.691550],[-0.897258],[0.803367],[8.870873],[-9.705339],[-3.865783],[-3.430680],[6.734553],[-9.374630],[8.229601],[-9.075259],[-5.035729],[-1.312650],[5.559623],[9.119049],[7.267923],[-4.319563],[-4.995241],[-3.015761],[8.087615],[2.872697],[-3.813049],[4.987004],[3.987931],[-5.580185],[-0.381025],[-7.672916],[-1.490003],[-8.594044],[-8.710163],[8.772392],[-8.754536],[2.257198],[7.913951],[-0.822759],[1.786647],[-4.033571],[4.541088],[2.825139],[-8.538467],[-1.787861],[-1.354400],[7.698999],[7.932991],[-0.726163],[7.771111],[9.228654],[-2.447369],[-5.713704],[-6.998207],[-7.719519],[-9.459832],[-4.383500],[-4.390191],[-5.564576],[4.126189],[-5.009257],[-9.858738],[-3.647119],[0.295874],[2.230131],[-9.109006],[-8.511377],[-7.332569],[0.749974],[-0.082639],[-0.701187],[-4.433368],[-2.631822],[-4.951570],[9.924177],[3.408310],[3.854301],[7.170198],[-3.880749],[1.923819],[5.914535],[-6.845592],[-1.373363],[-2.269124],[-1.789052],[5.886135],[0.729536],[8.629868],[0.525069],[1.904626],[5.595812],[-4.886382],[-0.955241],[3.272157],[-6.217524],[-5.416836],[-5.335054],[5.815609],[2.377206],[-9.483766],[-3.140880],[-9.272929],[-4.180769],[-5.745867],[7.984518],[-8.785311],[-6.677166],[-5.425452],[2.958345],[2.471857],[-6.441720],[7.195878],[8.669057],[0.561273],[6.379342],[-8.418277],[6.614315],[7.866202],[-7.635232],[8.107125],[5.667914],[-7.430556],[-4.590780],[-9.426412],[-0.002577],[6.921746],[-0.602882],[-3.632893],[-4.994504],[-6.399064],[7.744706],[3.834422],[-3.131846],[-8.392658],[-6.512266],[-1.481643],[-3.472611],[-9.438754],[2.314457],[-6.997325],[-6.116128],[-3.129411],[-9.339067],[-7.125703],[-3.816655],[-4.687660],[3.529623],[9.174143],[5.604054],[-4.261176],[5.554704],[1.709298],[-7.525043],[9.002935],[2.060851],[9.538585],[7.269224],[-5.337215],[-5.506036],[-6.895933],[0.442979],[3.208814],[0.999837],[-5.182060],[-4.838548],[-2.379689],[-5.523049],[5.877292],[7.482067],[-3.765067],[-1.143943],[2.696781],[-9.428983],[-2.649239],[-3.983379],[9.398103],[4.603487],[5.305493],[0.352064],[0.600742],[-9.327249],[-4.147360],[-0.977630],[0.840550],[-7.834654],[-1.281880],[-4.421497],[-1.713811],[4.345750],[7.434709],[-1.428568],[8.967489],[2.705874],[-0.729218],[7.942036],[4.007842],[6.002955],[-2.785217],[0.366839],[-7.807262],[7.159904],[9.868257],[-1.465130],[-9.240673],[-1.883878],[7.865523],[9.547113],[-5.601370],[1.072455],[4.445593],[5.376464],[7.548501],[-3.435225],[-3.930593],[0.877707],[6.412585],[6.117202],[-5.408816],[2.037046],[0.510866],[3.181158],[-1.607047],[4.628806],[0.900919],[1.410914],[9.504604],[1.827810],[1.155003],[-1.177234],[-2.786465],[-1.141399],[6.701186],[-0.415967],[7.229973],[-8.175929],[5.855419],[-5.693147],[-0.755825],[-6.794768],[-9.535665],[0.486608],[-7.588612],[-2.367097],[-8.700634],[6.145432],[4.224233],[7.622174],[2.298246],[-8.919077],[9.774143],[6.152544],[-0.858682],[-8.575013],[-4.198882],[3.941862],[-2.757643],[-1.330258],[2.421072],[-3.940857],[-6.801094],[-2.252843],[-1.025557],[-4.389630],[0.766269],[-6.175706],[2.099917],[9.818722],[7.568933],[4.741049],[9.461926],[7.827084],[3.021461],[-8.873326],[-5.198273],[-2.099533],[2.164767],[-1.272658],[-6.340970],[8.414144],[-4.914239],[-7.122812],[-1.022803],[2.043788],[0.386968],[0.275896],[7.081701],[-1.948950],[-6.863285],[-9.286248],[-4.891769],[1.299364],[7.184455],[4.778819],[-5.929340],[-7.624462],[-3.326937],[6.130061],[-4.799072],[1.841614],[8.975110],[-5.810235],[7.809273],[1.391752],[-8.673695],[-6.485426],[-7.820003],[-6.775231],[-6.035257],[-0.354541],[-7.362846],[6.903603],[4.156699],[3.627622],[3.415383],[-8.730703],[4.712717],[-8.573962],[1.250289],[1.423395],[7.080274],[-4.657787],[6.558880],[3.022120],[-5.633271],[8.511078],[-3.735628],[-6.059545],[6.536515],[-6.478059],[-6.120758],[8.360517],[6.402937],[-4.101467],[4.663960],[-6.846528],[9.426547],[-0.741779],[0.411255],[-4.794778],[2.060572],[0.107026],[-9.783030],[-5.949763],[0.091896],[4.441778],[7.898301],[-5.982571],[-1.077582],[0.193331],[-7.023536],[-8.863040],[1.649594],[-5.275118],[-3.343318],[-7.112242],[-1.631907],[-9.412199],[6.411859],[-2.190372],[6.979764],[-9.218247],[-9.545266],[9.058585],[4.261602],[-4.577227],[1.984826],[-6.235645],[-8.308374],[6.758390],[7.846358],[-2.092122],[5.408979],[0.577793],[9.939327],[-7.145523],[6.621688],[8.968516],[9.071199],[-0.383747],[-8.665072],[-2.118622],[7.639632],[-6.754384],[2.111342],[-0.763485],[3.673109],[5.035977],[0.951391]], dtype = "float32")#candidate|2488|(1300, 1)|const|float32
call_2487 = relay.TupleGetItem(func_1521_call(relay.reshape(var_2471.astype('uint32'), [4, 3, 11]), relay.reshape(const_2488.astype('float32'), [1300,]), relay.reshape(const_2488.astype('bool'), [13, 10, 10]), ), 2)
call_2489 = relay.TupleGetItem(func_1525_call(relay.reshape(var_2471.astype('uint32'), [4, 3, 11]), relay.reshape(const_2488.astype('float32'), [1300,]), relay.reshape(const_2488.astype('bool'), [13, 10, 10]), ), 2)
uop_2492 = relay.tan(const_2488.astype('float32')) # shape=(1300, 1)
output = relay.Tuple([bop_2482,call_2487,uop_2492,])
output2 = relay.Tuple([bop_2482,call_2489,uop_2492,])
func_2496 = relay.Function([var_2471,var_2472,], output)
mod['func_2496'] = func_2496
mod = relay.transform.InferType()(mod)
mutated_mod['func_2496'] = func_2496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2496_call = mutated_mod.get_global_var('func_2496')
var_2498 = relay.var("var_2498", dtype = "float64", shape = (1, 12, 11))#candidate|2498|(1, 12, 11)|var|float64
var_2499 = relay.var("var_2499", dtype = "float64", shape = (1, 12, 11))#candidate|2499|(1, 12, 11)|var|float64
call_2497 = func_2496_call(var_2498,var_2499,)
output = call_2497
func_2500 = relay.Function([var_2498,var_2499,], output)
mutated_mod['func_2500'] = func_2500
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2568 = relay.const(-9, dtype = "uint32")#candidate|2568|()|const|uint32
const_2569 = relay.const([[[3,-4,8,-9,-7,-7,-10],[-2,-5,-3,-10,-10,8,5],[5,1,-9,-6,10,-9,8],[4,10,-2,10,3,-4,2],[-3,5,8,7,9,-6,1],[-8,3,8,9,10,3,-9],[6,-8,-8,-10,7,8,3],[8,1,-2,1,-8,7,-2],[-1,7,2,-8,-8,-1,-6],[-4,-2,2,8,8,3,2],[5,-10,4,-6,5,-9,4],[10,10,8,6,-7,-3,6],[2,6,1,-4,5,1,5],[5,-1,-9,8,-3,9,-9],[-5,-8,2,-4,10,-7,-9],[-9,10,6,-8,2,-4,10]],[[-5,6,3,-4,-8,7,-8],[6,-5,-4,8,6,-4,-4],[1,4,3,5,5,-3,10],[2,-6,-5,-3,6,8,-7],[-8,5,-5,7,-8,-5,4],[6,2,1,-6,1,-7,1],[8,-10,-1,10,-1,-5,1],[-3,-10,8,5,-9,8,-10],[-6,-10,1,3,-2,-7,9],[-3,-3,-3,5,4,3,-3],[-5,5,6,-6,-5,8,-1],[2,8,-8,2,-4,7,7],[3,-2,-4,10,2,6,6],[-3,-10,6,-10,7,-10,-1],[8,6,9,-10,4,-3,-7],[-2,-5,-9,-1,1,1,-7]],[[8,5,-7,7,-8,-9,6],[-7,-2,-5,7,10,-1,1],[-8,3,6,1,-9,-1,3],[9,3,2,6,-4,5,1],[6,8,-2,-1,-8,-4,-9],[6,-7,3,3,-9,5,4],[-7,6,10,-9,-4,3,-3],[1,-3,5,-3,4,-6,-9],[-4,10,9,-9,1,-1,8],[-9,2,2,6,-9,-6,7],[4,4,8,-3,2,-7,-8],[8,-4,-7,-6,6,-6,4],[-6,5,-6,9,-5,-4,2],[1,-2,8,-5,-6,3,4],[-7,-1,-9,2,-7,3,3],[10,9,-7,-10,8,-9,-6]],[[-8,-2,-9,7,-1,-5,-2],[-10,-6,-10,2,7,-4,7],[1,8,4,-4,2,2,2],[10,6,9,-2,8,-8,-6],[-9,-8,4,2,3,-4,-7],[6,6,3,10,5,-1,-6],[7,3,-2,-8,4,-8,-6],[-2,9,-2,6,6,-9,5],[-5,1,2,-7,5,-3,-5],[-6,3,4,5,-6,3,-6],[4,-4,-4,-10,9,1,3],[2,6,9,-5,-1,8,3],[9,6,1,-4,-7,1,4],[-1,-7,6,-3,3,7,10],[1,-9,-3,6,6,-8,8],[10,-1,-10,-4,-6,-3,-4]],[[-2,10,-10,-6,5,-4,5],[6,1,-5,5,-5,-6,-5],[-9,-3,-5,-6,1,7,-5],[-9,-3,4,-8,-10,-8,3],[5,5,9,5,-9,1,3],[6,-1,10,9,-9,5,-4],[-4,9,7,1,1,1,9],[2,2,-1,4,-6,-5,3],[-4,-5,6,-8,-9,10,-7],[2,5,-9,3,-9,-1,-3],[1,10,-7,-8,10,-5,-4],[-9,-5,8,-6,-8,-5,9],[5,-4,-9,4,9,8,-7],[-8,-9,-4,7,-6,-9,3],[3,-1,3,-5,-2,-8,-2],[-2,-1,-9,-7,-5,-7,9]],[[-5,-1,4,5,9,-10,10],[6,6,10,-8,6,-4,-4],[-1,-8,-7,5,10,7,-1],[-2,4,-2,6,8,2,3],[-6,-8,10,-3,6,-6,-7],[8,1,8,10,8,3,1],[-1,-1,1,-3,-7,8,4],[2,9,9,1,-7,-9,-10],[2,-8,-8,-9,-10,10,1],[-1,-1,6,2,-2,-5,6],[6,6,7,-1,5,-4,2],[-2,-9,8,5,-2,9,10],[2,10,1,-4,-2,-5,-4],[-1,2,-9,-6,3,-1,6],[6,6,3,-4,1,-5,4],[1,-9,-4,8,2,-10,-3]],[[9,-1,-7,-2,2,-5,7],[-8,-9,9,-3,-7,-10,-5],[5,1,9,-8,10,9,10],[-7,-3,8,-5,-10,-3,9],[9,4,-2,-7,-9,-9,6],[1,1,3,-2,-8,9,5],[-6,-3,-8,8,-4,-3,1],[-1,8,-3,9,-3,-6,-10],[-10,6,1,2,8,3,6],[-4,6,3,7,-4,-1,-1],[-9,-1,8,-4,9,-10,7],[-9,-9,-7,-6,10,-6,2],[-3,-4,4,3,5,2,-3],[-10,-8,-3,-2,2,1,-3],[-8,4,-10,6,-6,-7,-6],[2,1,-2,-1,-6,7,10]],[[1,7,-10,3,-1,-3,7],[5,-9,5,-9,1,-3,-2],[4,-8,-5,4,-6,-3,-5],[-4,-8,-8,-8,-1,1,8],[10,4,-9,-8,-7,-10,-1],[-2,3,1,-4,10,-3,8],[4,1,3,-7,8,-1,-2],[-10,5,-9,5,-10,10,-1],[-3,-10,5,1,5,-4,-5],[-9,-5,-10,-10,-7,-1,-6],[-8,-6,7,8,-7,4,8],[6,3,2,6,-8,-3,1],[-5,6,5,-4,8,-6,10],[-7,-10,-4,10,-2,-8,-3],[9,-4,1,6,2,8,-2],[4,-8,4,6,10,-4,4]],[[-5,2,1,8,5,-7,4],[4,-4,1,1,-8,3,-5],[-2,-6,4,-3,-3,-6,-5],[-5,10,8,-10,-4,4,6],[-1,2,-9,-2,-8,9,-6],[-2,-8,1,-6,2,5,5],[-9,7,-3,3,7,5,10],[9,-9,-6,-5,6,3,-7],[5,10,-4,-6,-5,-9,4],[-10,-9,2,-9,6,-3,-7],[-2,5,-8,-3,-1,7,8],[8,1,-10,-6,-8,-9,1],[7,-8,-2,-10,9,3,2],[6,8,-6,4,7,8,-5],[10,-9,-3,9,4,-8,-3],[-3,-2,7,-4,7,10,-8]],[[-1,-5,8,-9,-3,-10,6],[-9,10,-5,2,-2,-6,-6],[5,5,6,7,4,-9,-2],[3,9,-6,6,9,5,6],[-10,-8,-6,-3,2,10,-5],[4,-8,-7,1,-5,-7,6],[-6,3,-9,-5,3,9,7],[3,10,9,-6,-6,2,-7],[6,10,8,-9,2,1,-1],[3,4,10,-3,2,7,-8],[7,-7,9,-4,1,-5,9],[-8,-10,6,7,6,5,1],[5,-1,7,5,7,6,-5],[1,-8,-2,-2,-10,4,-10],[3,-3,3,1,3,-7,-5],[6,-3,-4,6,7,8,-6]]], dtype = "uint32")#candidate|2569|(10, 16, 7)|const|uint32
bop_2570 = relay.minimum(const_2568.astype('uint32'), const_2569.astype('uint32')) # shape=(10, 16, 7)
func_1521_call = mod.get_global_var('func_1521')
func_1525_call = mutated_mod.get_global_var('func_1525')
const_2583 = relay.const([3,2,-10,7,-3,10,-10,-10,9,-6,4,-4,-7,-8,-5,-2,-1,-4,9,10,-6,2,9,8,-2,6,8,-10,-8,7,1,4,4,-5,-9,8,7,-1,4,4,-6,3,10,-9,2,-4,7,-9,3,-7,10,8,-5,-6,10,4,8,-10,-1,-7,-8,9,8,-10,1,3,-5,1,-2,1,-4,-8,2,-3,10,9,-2,5,4,8,5,9,4,1,6,8,7,-4,-5,-4,-8,4,1,9,7,5,1,-5,3,-1,-6,-10,-6,-1,-3,7,-2,-3,-10,-10,-10,-2,-6,-7,3,-9,8,1,6,-6,-1,-2,4,5,8,3,-8,-2,-2,-7,-9,-3], dtype = "uint32")#candidate|2583|(132,)|const|uint32
var_2584 = relay.var("var_2584", dtype = "float32", shape = (1300,))#candidate|2584|(1300,)|var|float32
call_2582 = relay.TupleGetItem(func_1521_call(relay.reshape(const_2583.astype('uint32'), [4, 3, 11]), relay.reshape(var_2584.astype('float32'), [1300,]), relay.reshape(var_2584.astype('bool'), [13, 10, 10]), ), 2)
call_2585 = relay.TupleGetItem(func_1525_call(relay.reshape(const_2583.astype('uint32'), [4, 3, 11]), relay.reshape(var_2584.astype('float32'), [1300,]), relay.reshape(var_2584.astype('bool'), [13, 10, 10]), ), 2)
uop_2592 = relay.atan(bop_2570.astype('float64')) # shape=(10, 16, 7)
output = relay.Tuple([call_2582,const_2583,var_2584,uop_2592,])
output2 = relay.Tuple([call_2585,const_2583,var_2584,uop_2592,])
func_2595 = relay.Function([var_2584,], output)
mod['func_2595'] = func_2595
mod = relay.transform.InferType()(mod)
mutated_mod['func_2595'] = func_2595
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2596 = relay.var("var_2596", dtype = "float32", shape = (1300,))#candidate|2596|(1300,)|var|float32
func_2595_call = mutated_mod.get_global_var('func_2595')
call_2597 = func_2595_call(var_2596)
output = call_2597
func_2598 = relay.Function([var_2596], output)
mutated_mod['func_2598'] = func_2598
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2684 = relay.const([[[-8.907572,2.192155,4.698288,-2.606529,6.565349],[4.137706,-8.056849,4.049576,-7.006723,-5.495153]],[[2.059943,5.860330,-8.023636,-8.387000,8.966304],[7.989793,5.748825,-7.959094,3.266843,-5.400770]],[[4.805206,-6.034545,0.318013,5.461208,6.960049],[-1.259343,-4.143964,-5.109720,1.464291,1.777451]],[[-5.797903,-6.413679,4.553241,-3.077626,4.485396],[-8.017970,2.619211,2.126230,-4.944970,-7.539048]],[[-1.574479,2.069353,-9.990799,6.681324,-7.322976],[-6.898704,-5.300335,-5.184551,5.647073,-2.489567]],[[-4.897627,-6.772990,7.995433,-7.041968,-4.211434],[8.917364,6.630311,8.675047,5.393995,2.358011]],[[7.743995,-9.921369,8.576744,-6.357653,-2.010428],[3.244140,4.837268,-1.042240,6.165183,-7.160979]],[[0.678843,3.629824,-6.258061,-6.156718,0.442820],[-5.670583,7.637558,-5.204149,1.579594,1.323019]],[[-3.226756,-3.402546,-9.217007,-6.656337,-5.580935],[0.923726,4.611867,-5.752520,-9.317668,7.380512]],[[7.210110,-2.618261,-1.545111,2.471480,8.423707],[7.418575,2.622540,0.695398,-2.617443,-4.378300]],[[8.760636,-6.813963,-6.717391,-5.211229,5.509166],[-8.192959,1.261279,1.627484,-9.630685,-4.185860]],[[-9.272657,0.902213,6.185405,2.469798,-3.193234],[-3.465678,-4.229039,-0.592779,-0.295538,8.960945]],[[-3.843957,-8.669141,-6.376415,-4.072851,-0.035805],[0.541270,-4.900535,-6.495202,0.928184,-6.579968]],[[9.603255,7.164708,9.201078,-7.703508,7.774482],[-6.219687,-1.597103,0.674444,-8.990471,1.565161]],[[-4.516719,4.475600,8.998159,0.429975,-3.321816],[-4.335203,-7.189071,6.729880,-3.948429,6.812068]],[[3.613472,4.261869,-9.921842,-0.034066,-2.052463],[0.674073,-0.061961,-3.969623,8.405171,2.440577]]], dtype = "float64")#candidate|2684|(16, 2, 5)|const|float64
uop_2685 = relay.sin(const_2684.astype('float64')) # shape=(16, 2, 5)
output = uop_2685
output2 = uop_2685
func_2691 = relay.Function([], output)
mod['func_2691'] = func_2691
mod = relay.transform.InferType()(mod)
mutated_mod['func_2691'] = func_2691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2691_call = mutated_mod.get_global_var('func_2691')
call_2692 = func_2691_call()
output = call_2692
func_2693 = relay.Function([], output)
mutated_mod['func_2693'] = func_2693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2699 = relay.var("var_2699", dtype = "float64", shape = (9, 5, 12))#candidate|2699|(9, 5, 12)|var|float64
uop_2700 = relay.erf(var_2699.astype('float64')) # shape=(9, 5, 12)
output = uop_2700
output2 = uop_2700
func_2714 = relay.Function([var_2699,], output)
mod['func_2714'] = func_2714
mod = relay.transform.InferType()(mod)
var_2715 = relay.var("var_2715", dtype = "float64", shape = (9, 5, 12))#candidate|2715|(9, 5, 12)|var|float64
output = func_2714(var_2715)
func_2716 = relay.Function([var_2715], output)
mutated_mod['func_2716'] = func_2716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2691_call = mod.get_global_var('func_2691')
func_2693_call = mutated_mod.get_global_var('func_2693')
call_2738 = func_2691_call()
call_2739 = func_2691_call()
uop_2742 = relay.atan(call_2738.astype('float64')) # shape=(16, 2, 5)
uop_2744 = relay.atan(call_2739.astype('float64')) # shape=(16, 2, 5)
bop_2746 = relay.bitwise_and(call_2738.astype('uint16'), relay.reshape(uop_2742.astype('uint16'), relay.shape_of(call_2738))) # shape=(16, 2, 5)
bop_2749 = relay.bitwise_and(call_2739.astype('uint16'), relay.reshape(uop_2744.astype('uint16'), relay.shape_of(call_2739))) # shape=(16, 2, 5)
output = relay.Tuple([bop_2746,])
output2 = relay.Tuple([bop_2749,])
func_2763 = relay.Function([], output)
mod['func_2763'] = func_2763
mod = relay.transform.InferType()(mod)
mutated_mod['func_2763'] = func_2763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mutated_mod.get_global_var('func_2763')
call_2764 = func_2763_call()
output = call_2764
func_2765 = relay.Function([], output)
mutated_mod['func_2765'] = func_2765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mod.get_global_var('func_2763')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_2792 = relay.TupleGetItem(func_2763_call(), 0)
call_2793 = relay.TupleGetItem(func_2765_call(), 0)
output = call_2792
output2 = call_2793
func_2794 = relay.Function([], output)
mod['func_2794'] = func_2794
mod = relay.transform.InferType()(mod)
output = func_2794()
func_2795 = relay.Function([], output)
mutated_mod['func_2795'] = func_2795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mod.get_global_var('func_2763')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_2845 = relay.TupleGetItem(func_2763_call(), 0)
call_2846 = relay.TupleGetItem(func_2765_call(), 0)
var_2851 = relay.var("var_2851", dtype = "uint16", shape = (16, 2, 5))#candidate|2851|(16, 2, 5)|var|uint16
bop_2852 = relay.less_equal(call_2845.astype('bool'), relay.reshape(var_2851.astype('bool'), relay.shape_of(call_2845))) # shape=(16, 2, 5)
bop_2855 = relay.less_equal(call_2846.astype('bool'), relay.reshape(var_2851.astype('bool'), relay.shape_of(call_2846))) # shape=(16, 2, 5)
uop_2858 = relay.exp(call_2845.astype('float32')) # shape=(16, 2, 5)
uop_2860 = relay.exp(call_2846.astype('float32')) # shape=(16, 2, 5)
uop_2878 = relay.asin(var_2851.astype('float32')) # shape=(16, 2, 5)
var_2893 = relay.var("var_2893", dtype = "float32", shape = (16, 2, 5))#candidate|2893|(16, 2, 5)|var|float32
bop_2894 = relay.divide(uop_2878.astype('float32'), relay.reshape(var_2893.astype('float32'), relay.shape_of(uop_2878))) # shape=(16, 2, 5)
output = relay.Tuple([bop_2852,uop_2858,bop_2894,])
output2 = relay.Tuple([bop_2855,uop_2860,bop_2894,])
func_2910 = relay.Function([var_2851,var_2893,], output)
mod['func_2910'] = func_2910
mod = relay.transform.InferType()(mod)
mutated_mod['func_2910'] = func_2910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2910_call = mutated_mod.get_global_var('func_2910')
var_2912 = relay.var("var_2912", dtype = "uint16", shape = (16, 2, 5))#candidate|2912|(16, 2, 5)|var|uint16
var_2913 = relay.var("var_2913", dtype = "float32", shape = (16, 2, 5))#candidate|2913|(16, 2, 5)|var|float32
call_2911 = func_2910_call(var_2912,var_2913,)
output = call_2911
func_2914 = relay.Function([var_2912,var_2913,], output)
mutated_mod['func_2914'] = func_2914
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2945 = relay.const([[[1.896486],[3.996915],[-3.608908],[2.657188]],[[0.638417],[-7.528005],[-6.036862],[-3.332762]],[[-5.649882],[-6.093354],[-9.205411],[-2.122587]],[[-7.756116],[7.349023],[4.157182],[-0.208592]],[[8.147697],[-7.368048],[-0.994820],[8.662239]],[[4.284968],[-4.659048],[6.710041],[-0.938784]],[[-6.585496],[-2.679150],[0.420710],[7.027122]],[[1.857774],[2.006110],[6.810039],[4.298395]],[[5.674849],[-1.680674],[8.520934],[-1.927721]],[[-9.846422],[1.281305],[1.341945],[9.926229]]], dtype = "float64")#candidate|2945|(10, 4, 1)|const|float64
const_2946 = relay.const([[[-4.079725,6.241684,2.673991,3.427037,4.775516,-7.881281,-9.059019,-3.085405,-4.930926,-6.432711,-0.712187,0.865584,-4.682791,9.556138,-3.010048,-7.880839],[9.688375,-2.683868,5.427545,6.709046,1.468271,8.079768,9.560107,4.529982,-9.768836,-1.382289,2.572477,7.386175,-9.596547,-0.362626,6.013313,4.263256],[4.679096,5.134803,8.049115,3.616481,-0.234263,-7.325645,-3.981228,-5.635374,-7.865581,5.387768,-4.085412,0.225889,3.536517,2.133966,-1.934884,4.027944],[-7.436298,-2.511232,-4.272629,-3.796997,6.200731,-3.611109,0.117434,-7.641437,4.040827,2.351654,-5.397047,-9.502205,1.471352,-9.684202,-8.106278,3.877566]],[[4.403153,4.115238,0.601217,-9.397607,-1.343794,-9.441537,9.711020,2.554207,5.102975,-8.921221,3.007338,1.061956,-2.429273,4.060115,-3.379917,-4.528809],[-3.795161,2.373479,0.818291,-6.111584,-8.747668,2.487394,-2.218538,-6.966695,-6.292442,0.389807,2.326740,-7.464576,7.879254,-4.562634,-1.664105,0.540687],[-2.007686,-8.755848,-9.855848,-1.892010,5.601386,6.284898,-1.412531,1.935348,-6.603171,5.092211,-7.093391,-6.818183,6.104467,2.223447,1.209220,-7.687275],[7.152497,1.754398,-3.212016,-7.094545,-7.517019,7.305744,9.131102,7.244892,7.342926,7.392223,-2.459825,8.128959,-9.049749,7.256268,0.489243,-8.594984]],[[-5.858119,2.800350,5.540227,-4.271475,4.410861,-0.928974,1.716487,-2.772280,-2.895129,-4.130825,6.992453,-9.038238,-5.675539,6.834649,-5.766798,-7.974674],[-3.065552,0.975718,2.349334,2.368706,7.096614,5.120883,9.016963,7.727968,8.338116,-6.160382,-0.854127,-8.671325,-8.886926,-9.479247,7.624138,9.895814],[-8.583984,7.961923,-4.718713,-4.575969,7.940982,-5.287438,-8.960573,-1.067592,7.856217,-7.320762,-0.266430,-0.580492,4.006116,1.834636,2.399165,-2.360793],[4.930541,8.772241,-8.839933,4.754767,0.495095,-5.513802,3.263577,6.613338,7.129831,-4.541565,0.138632,-3.587200,-1.636814,1.774537,-8.578766,5.687372]],[[-7.268821,7.547963,1.214323,-9.366590,8.270310,-7.022314,3.593435,9.404442,4.612525,-3.049215,8.138426,8.364313,-6.299890,2.439116,-8.553331,-4.797719],[-9.848666,6.670409,-7.598573,-6.188318,-7.340800,3.046523,0.230810,-9.256247,-3.806287,3.591593,0.302213,2.983988,0.359151,-4.890890,-0.556350,-7.148874],[2.389139,-8.224445,1.606875,1.878093,6.367101,-5.869769,1.715596,1.824263,7.319246,6.854931,-6.537362,4.715067,-0.995766,7.823891,-7.837474,7.110273],[-2.214225,-6.909217,-1.336391,7.294689,-2.630383,-6.098346,8.333361,0.344663,-8.925875,7.459327,-6.596042,6.509824,5.317239,7.575701,-6.526171,5.335757]],[[-4.969992,5.506907,1.857772,-2.612298,-6.228824,8.061346,-8.289498,-9.441008,-7.350129,9.166501,-5.908707,9.212968,-6.337219,-4.056194,4.288711,6.661013],[0.073758,-7.535259,3.420370,-0.263443,-2.871548,2.664540,-0.514819,9.035191,-6.094259,7.386935,3.280948,-7.435573,9.236695,9.111846,-7.204675,-0.474926],[8.621329,-4.798695,0.239330,-3.123439,-7.405339,3.005445,3.598911,5.537059,2.570840,8.644026,5.689592,-4.851672,-6.084087,2.182449,-2.454253,-2.817814],[4.709217,9.832011,3.971423,-3.824052,6.275501,-1.955981,-0.811265,-1.263338,3.176064,4.357862,9.091325,4.007487,1.817188,-6.219654,1.102675,7.038996]],[[0.365099,1.016264,-1.875643,5.428721,9.358121,-3.595207,1.172313,-8.174426,-1.375346,-9.161720,6.699571,9.153697,-5.938942,9.798197,-7.850337,-5.753351],[3.635515,-3.404022,0.441574,7.051548,-2.528780,9.484427,6.177499,-9.582776,2.466625,3.996402,-2.641271,3.425321,5.908317,-9.219875,0.147668,0.878652],[6.697382,-0.355034,2.489851,8.308618,9.540918,-1.503655,-9.869606,1.101398,9.286666,1.504302,7.844813,-1.307839,1.135935,8.450234,-6.887359,2.466337],[-6.451299,-1.603083,7.666666,9.375674,-2.660861,7.999720,-5.775284,-9.845243,-8.953687,-7.591789,-8.543862,-8.105087,1.773774,-2.136878,-8.443069,8.208274]],[[3.103526,3.671120,-9.606242,-6.284583,-4.335790,8.018346,-1.073023,-9.139826,2.930968,-8.395171,4.967742,8.048214,-7.274197,-9.340141,5.523112,-8.190315],[-7.802365,-2.182654,-8.197095,2.531125,-0.319827,-5.261486,7.168950,3.508027,1.237240,-3.962591,-8.169638,4.949641,-4.443385,-0.338240,-1.505248,-0.725508],[-3.674410,2.628131,2.903778,1.892743,8.878955,-8.425397,-9.157674,-1.247589,-9.210571,-4.301832,-3.932188,4.963629,-9.550978,4.077710,-3.523849,3.526544],[-5.331138,-1.291485,0.381234,5.319630,6.396368,8.414028,-0.910459,5.103638,5.052397,3.161439,9.064337,-8.215584,-5.894982,-3.486666,4.583667,7.637966]],[[-8.032653,-0.272979,8.162799,9.783777,4.982401,-0.830208,-7.773073,-7.926457,-0.868359,6.054136,5.580980,6.247602,1.075218,-8.545588,8.494127,-3.633657],[7.069608,1.425753,0.685587,7.934896,-2.188128,-5.776103,6.666737,-1.439825,-1.956003,-9.939314,4.350767,-9.566751,9.824300,5.380642,-6.096875,3.137940],[-8.986561,6.550493,2.689211,1.582769,-0.741265,-3.484392,-3.431048,3.721901,-3.224712,-2.033125,8.377570,1.589358,-4.393446,5.375717,-3.989462,-5.269912],[-6.678848,-4.681293,9.122678,1.695561,4.960068,7.642517,-4.416159,8.447966,-6.072720,-9.837529,-7.477651,6.976563,-0.991826,0.476608,4.321431,-5.892804]],[[3.343684,6.896764,-4.617846,8.551755,-7.142945,6.606748,5.190609,6.076876,6.860602,-6.301910,6.524660,-3.167842,-0.509106,6.135710,5.470167,1.477135],[-9.773049,2.721348,4.526005,3.336766,-9.551745,-3.095620,2.004348,3.320989,7.163537,-8.373604,4.655432,5.994299,-1.370002,7.637807,-2.344711,3.395578],[7.319409,5.929588,6.822964,-3.790226,3.846721,2.243311,3.886768,7.851734,-9.964804,6.952120,-7.514543,-9.325246,8.005108,8.508883,-8.611630,3.916075],[8.257031,6.715933,9.904151,-5.439299,-1.692521,2.337742,1.039624,0.656618,-0.038043,1.414227,1.922003,8.629896,-4.175979,-3.864040,8.328142,-6.387808]],[[-5.972302,3.852795,-3.620397,-7.763411,-3.613273,-0.709387,9.521285,1.457103,-3.845991,-0.539203,-0.910076,7.331768,-6.194252,-9.085841,9.089140,5.477820],[-9.930154,0.746795,-4.490969,5.757548,0.351539,-0.044040,9.646642,-2.007614,3.478868,4.875180,-2.844912,-8.779474,-6.575984,3.145017,6.657270,5.657280],[2.167010,-1.915079,0.121220,-2.001819,9.786638,7.785907,9.094661,2.325607,-3.834712,-1.003571,5.368745,-0.138846,1.100330,3.048769,-5.672499,-9.735018],[3.027355,1.655293,5.867010,8.183443,6.493152,2.783640,-9.364856,3.748611,-9.196170,6.539750,-3.766656,1.998158,9.664345,-5.239730,-9.315063,-2.469086]]], dtype = "float64")#candidate|2946|(10, 4, 16)|const|float64
bop_2947 = relay.floor_mod(const_2945.astype('float64'), const_2946.astype('float64')) # shape=(10, 4, 16)
bop_2951 = relay.logical_or(bop_2947.astype('bool'), relay.reshape(const_2946.astype('bool'), relay.shape_of(bop_2947))) # shape=(10, 4, 16)
output = relay.Tuple([bop_2951,])
output2 = relay.Tuple([bop_2951,])
func_2954 = relay.Function([], output)
mod['func_2954'] = func_2954
mod = relay.transform.InferType()(mod)
output = func_2954()
func_2955 = relay.Function([], output)
mutated_mod['func_2955'] = func_2955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2794_call = mod.get_global_var('func_2794')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_2967 = func_2794_call()
call_2968 = func_2794_call()
func_2595_call = mod.get_global_var('func_2595')
func_2598_call = mutated_mod.get_global_var('func_2598')
var_2986 = relay.var("var_2986", dtype = "float32", shape = (1300,))#candidate|2986|(1300,)|var|float32
call_2985 = relay.TupleGetItem(func_2595_call(relay.reshape(var_2986.astype('float32'), [1300,])), 0)
call_2987 = relay.TupleGetItem(func_2598_call(relay.reshape(var_2986.astype('float32'), [1300,])), 0)
uop_2988 = relay.sinh(var_2986.astype('float32')) # shape=(1300,)
uop_2997 = relay.asinh(call_2967.astype('float64')) # shape=(16, 2, 5)
uop_2999 = relay.asinh(call_2968.astype('float64')) # shape=(16, 2, 5)
output = relay.Tuple([call_2985,uop_2988,uop_2997,])
output2 = relay.Tuple([call_2987,uop_2988,uop_2999,])
func_3005 = relay.Function([var_2986,], output)
mod['func_3005'] = func_3005
mod = relay.transform.InferType()(mod)
mutated_mod['func_3005'] = func_3005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3006 = relay.var("var_3006", dtype = "float32", shape = (1300,))#candidate|3006|(1300,)|var|float32
func_3005_call = mutated_mod.get_global_var('func_3005')
call_3007 = func_3005_call(var_3006)
output = call_3007
func_3008 = relay.Function([var_3006], output)
mutated_mod['func_3008'] = func_3008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2794_call = mod.get_global_var('func_2794')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_3144 = func_2794_call()
call_3145 = func_2794_call()
output = call_3144
output2 = call_3145
func_3161 = relay.Function([], output)
mod['func_3161'] = func_3161
mod = relay.transform.InferType()(mod)
output = func_3161()
func_3162 = relay.Function([], output)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3172 = relay.var("var_3172", dtype = "uint64", shape = (5, 12, 3))#candidate|3172|(5, 12, 3)|var|uint64
var_3173 = relay.var("var_3173", dtype = "uint64", shape = (5, 12, 3))#candidate|3173|(5, 12, 3)|var|uint64
bop_3174 = relay.greater(var_3172.astype('bool'), relay.reshape(var_3173.astype('bool'), relay.shape_of(var_3172))) # shape=(5, 12, 3)
func_1039_call = mod.get_global_var('func_1039')
func_1043_call = mutated_mod.get_global_var('func_1043')
var_3182 = relay.var("var_3182", dtype = "uint8", shape = ())#candidate|3182|()|var|uint8
const_3183 = relay.const([7,-6,-7,-5,-5,5,-8,-6,6,4,10,8,-8,-8,-9,-2,7,7,-8,2,3,-7,-6,2,8,-3,-3,4,5,-6,7,3,6,9,6,9,1,-8,10,-8,-8,-7,-1,4,5,2,-8,7,5,-7,-9,10,-4,-6,10,3,4,-1,-4,-3,-5,-10,-10,-4,-5,5,9,4,4,10,-4,4,-4,5,1,7,-2,6,6,-4,5,6,7,-7,-2,6,1,-5,6,5,7,3,8,9,1,6,-7,10,-2,2,6,-9,-8,4,-2,1,-10,9,4,-2,3,1,-10,-1,-9,-4,3,-4,8,6,4,1,4,1,-8,-2,-3,-1,5,-3,7,1,-3,-2,10,10,7,-9,-1,-8,-5,10,-7,-1,2,-7,5,8,3,-8,-8,-9,2,-6,8,2,6,3,4,6,-10,-5,-2,-3,-5,-6,-1,-9,-2,-6,1,-6,-3,-10,3,-2,-10,-9,2,-5,-5,1,7,9,-7,10,4,-6,-4,-3,-4,-3], dtype = "int64")#candidate|3183|(192,)|const|int64
call_3181 = relay.TupleGetItem(func_1039_call(relay.reshape(var_3182.astype('uint8'), []), relay.reshape(const_3183.astype('int64'), [96, 2]), ), 1)
call_3184 = relay.TupleGetItem(func_1043_call(relay.reshape(var_3182.astype('uint8'), []), relay.reshape(const_3183.astype('int64'), [96, 2]), ), 1)
uop_3192 = relay.sinh(call_3181.astype('float64')) # shape=(6, 30)
uop_3194 = relay.sinh(call_3184.astype('float64')) # shape=(6, 30)
func_2231_call = mod.get_global_var('func_2231')
func_2233_call = mutated_mod.get_global_var('func_2233')
var_3196 = relay.var("var_3196", dtype = "float64", shape = (1200,))#candidate|3196|(1200,)|var|float64
call_3195 = relay.TupleGetItem(func_2231_call(relay.reshape(var_3196.astype('float64'), [15, 10, 8])), 1)
call_3197 = relay.TupleGetItem(func_2233_call(relay.reshape(var_3196.astype('float64'), [15, 10, 8])), 1)
func_284_call = mod.get_global_var('func_284')
func_288_call = mutated_mod.get_global_var('func_288')
call_3200 = relay.TupleGetItem(func_284_call(relay.reshape(const_3183.astype('int64'), [4, 12, 4]), relay.reshape(const_3183.astype('int64'), [4, 12, 4]), ), 5)
call_3201 = relay.TupleGetItem(func_288_call(relay.reshape(const_3183.astype('int64'), [4, 12, 4]), relay.reshape(const_3183.astype('int64'), [4, 12, 4]), ), 5)
output = relay.Tuple([bop_3174,var_3182,const_3183,uop_3192,call_3195,var_3196,call_3200,])
output2 = relay.Tuple([bop_3174,var_3182,const_3183,uop_3194,call_3197,var_3196,call_3201,])
func_3207 = relay.Function([var_3172,var_3173,var_3182,var_3196,], output)
mod['func_3207'] = func_3207
mod = relay.transform.InferType()(mod)
var_3208 = relay.var("var_3208", dtype = "uint64", shape = (5, 12, 3))#candidate|3208|(5, 12, 3)|var|uint64
var_3209 = relay.var("var_3209", dtype = "uint64", shape = (5, 12, 3))#candidate|3209|(5, 12, 3)|var|uint64
var_3210 = relay.var("var_3210", dtype = "uint8", shape = ())#candidate|3210|()|var|uint8
var_3211 = relay.var("var_3211", dtype = "float64", shape = (1200,))#candidate|3211|(1200,)|var|float64
output = func_3207(var_3208,var_3209,var_3210,var_3211,)
func_3212 = relay.Function([var_3208,var_3209,var_3210,var_3211,], output)
mutated_mod['func_3212'] = func_3212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3217 = relay.var("var_3217", dtype = "float64", shape = (13, 16, 9))#candidate|3217|(13, 16, 9)|var|float64
var_3218 = relay.var("var_3218", dtype = "float64", shape = (13, 16, 9))#candidate|3218|(13, 16, 9)|var|float64
bop_3219 = relay.power(var_3217.astype('float64'), relay.reshape(var_3218.astype('float64'), relay.shape_of(var_3217))) # shape=(13, 16, 9)
uop_3224 = relay.acosh(bop_3219.astype('float64')) # shape=(13, 16, 9)
output = uop_3224
output2 = uop_3224
func_3228 = relay.Function([var_3217,var_3218,], output)
mod['func_3228'] = func_3228
mod = relay.transform.InferType()(mod)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3228_call = mutated_mod.get_global_var('func_3228')
var_3230 = relay.var("var_3230", dtype = "float64", shape = (13, 16, 9))#candidate|3230|(13, 16, 9)|var|float64
var_3231 = relay.var("var_3231", dtype = "float64", shape = (13, 16, 9))#candidate|3231|(13, 16, 9)|var|float64
call_3229 = func_3228_call(var_3230,var_3231,)
output = call_3229
func_3232 = relay.Function([var_3230,var_3231,], output)
mutated_mod['func_3232'] = func_3232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3246 = relay.var("var_3246", dtype = "uint8", shape = (9, 2, 12))#candidate|3246|(9, 2, 12)|var|uint8
var_3247 = relay.var("var_3247", dtype = "uint8", shape = (9, 2, 12))#candidate|3247|(9, 2, 12)|var|uint8
bop_3248 = relay.bitwise_xor(var_3246.astype('uint8'), relay.reshape(var_3247.astype('uint8'), relay.shape_of(var_3246))) # shape=(9, 2, 12)
func_3207_call = mod.get_global_var('func_3207')
func_3212_call = mutated_mod.get_global_var('func_3212')
var_3256 = relay.var("var_3256", dtype = "uint64", shape = (6, 30))#candidate|3256|(6, 30)|var|uint64
const_3257 = relay.const(-1, dtype = "uint8")#candidate|3257|()|const|uint8
const_3258 = relay.const([-5.782752,1.802395,-4.485745,-6.820660,6.850436,6.079851,-8.237857,-0.421446,1.793303,-2.661091,-2.147073,2.674487,3.682113,-7.770396,-6.271282,0.606002,2.223303,8.788861,-1.756753,9.957266,7.265895,9.795969,-2.889806,-8.062143,-1.812614,-0.565716,8.212367,-9.016906,-5.543384,6.540814,-3.038614,7.076429,-9.575717,5.348389,-7.920057,-4.209076,6.466841,-5.721876,5.127688,-0.529741,0.044148,5.029698,-9.626177,-4.080717,-2.284839,0.506604,-2.310273,-1.179264,5.143135,6.264426,-3.547536,3.107734,-9.740354,-8.439122,-6.004737,5.492847,9.519505,-3.010133,-2.107298,-4.856876,9.932989,1.665879,0.229637,-6.116882,2.470510,-2.246573,2.335469,-8.915231,7.449365,0.502090,2.769824,-8.391517,8.305933,-0.729572,7.663362,-1.234792,-9.914435,-9.214508,-0.933738,-5.732118,0.923803,1.344087,-7.286732,-5.611377,-4.550728,2.384715,-3.199081,8.656574,8.741399,4.617505,-3.853732,1.765972,-4.527467,-0.091553,-9.654931,-1.908703,-4.742286,-6.229699,4.588198,-8.273812,-4.584092,6.914340,4.786025,6.576208,-4.271509,7.763650,-9.782684,1.743550,2.455703,8.470002,-5.226932,9.126971,-8.253161,5.614373,-7.735554,2.368225,-0.299207,5.704247,1.895114,-6.835427,8.924422,0.910135,-9.375868,-8.401758,-9.431987,7.080585,-1.623321,6.410498,-8.552603,-4.470339,9.998031,1.212068,6.405013,6.797916,1.410366,-4.652789,-7.118223,6.408917,4.966783,-4.768548,9.413640,-9.333054,-8.180980,-2.217087,4.088778,5.038792,9.990812,-0.866952,9.882752,2.965873,3.954507,4.859588,3.923537,-1.033587,2.800668,2.787381,-5.972017,-4.936864,9.738112,0.382782,1.450976,1.810373,2.045368,5.933997,-7.172254,-7.004411,3.703923,9.198048,-7.755363,3.015383,-7.668994,-3.706642,-0.041257,0.463476,-9.295474,-0.629893,7.146907,-0.154271,6.268650,0.626447,-7.137122,6.196490,2.881511,2.795790,-7.670567,8.408582,6.931980,8.230474,-6.904499,4.513165,5.272036,4.620092,-2.972142,-3.497776,1.938028,8.415829,6.947277,1.097645,8.884960,-9.834743,1.465184,-3.334630,5.375861,3.967338,-9.392166,-7.253500,-8.107232,-6.626399,9.887622,8.580249,-3.050083,8.927963,0.928211,-0.322906,4.804609,9.596414,8.982599,6.702724,5.907417,-0.286040,7.964658,-5.072629,-1.332049,-4.874458,2.472685,7.498986,-2.033953,0.014881,8.484673,-6.495068,-3.203383,-8.212287,8.878160,-6.665621,-5.087338,-2.841191,-2.049400,5.571086,0.125301,-1.455222,9.535727,-5.946596,-3.646373,-9.144597,-1.597621,-6.619595,-8.684745,-9.397929,-8.501001,-6.492580,6.944011,2.331356,0.138938,5.714569,-1.512358,9.418701,9.348233,-6.506976,7.944919,1.063757,6.235877,-5.687515,-2.879283,-5.202345,-6.445645,6.408219,2.807646,7.473544,-6.622109,-6.743801,-2.271317,-5.218477,7.329438,-3.270354,2.538279,-8.600611,5.183959,-0.290122,9.171652,6.816568,-9.760903,-8.231215,7.947019,-6.297998,-0.852461,-7.524221,9.577531,-2.471190,3.486224,3.089678,-4.115738,-0.813432,2.083877,-6.136086,2.435392,-3.689508,-8.667079,0.725233,-4.734664,3.595791,-6.249823,7.208447,9.679648,6.291411,-6.116705,0.934500,-2.346297,4.182113,2.626677,4.719736,2.320512,-7.420176,-5.538099,3.345167,4.834381,9.550975,-9.586614,0.210154,-7.798277,3.344510,-6.209307,0.667359,-4.046782,-1.543421,-0.457407,-2.205496,2.065310,-0.004014,-8.909260,-1.008570,-2.878664,-1.363219,-4.340266,-2.360608,-7.389291,-8.799943,4.321754,3.042411,-2.228026,2.954886,3.380598,-5.502475,-9.114179,-0.812398,-5.605360,-3.635955,-9.925043,5.535927,6.478860,4.654757,6.046302,-3.274790,-6.066280,-4.285607,4.640925,2.171843,0.858134,1.649709,-4.582029,1.220053,-0.546551,-7.470372,-6.464653,0.505340,3.164522,7.975137,-7.704000,2.875623,8.718373,3.645756,6.636790,-7.437465,-5.847958,-5.157605,3.329524,6.131868,-2.440585,3.093913,-6.731014,-9.798905,0.911922,-1.462882,3.574800,-9.350557,-9.304433,0.040089,3.901999,-6.347878,2.521728,-3.048993,-9.531527,-1.938200,7.068947,2.114915,-9.474240,-6.728321,4.221489,-3.865079,-3.379844,-5.547590,-3.342892,1.570189,8.950717,-6.796207,-4.617075,5.440684,-3.750533,6.639846,7.685581,8.339484,-4.898547,-9.700887,2.928759,-8.293118,3.058343,-4.448709,-4.096797,9.047638,7.935031,-3.215410,9.781336,2.269453,2.175596,3.833961,5.710874,0.152129,-2.124719,-7.618755,-6.571367,-7.867514,6.198407,1.448618,-6.569961,1.770660,-2.252621,1.890429,0.017184,-0.860685,-6.359628,-2.691672,-7.125998,1.822222,0.491179,-7.825819,6.194693,4.978458,7.138330,-9.425552,-2.513107,-7.449527,-2.236825,-0.961371,-2.392407,-2.287588,-8.283858,-7.973491,-0.514950,-5.670548,6.843231,1.245544,9.802332,8.488425,-8.757264,-5.604457,8.565979,7.657120,-0.471423,-1.983444,-8.457143,0.795603,0.962374,-2.674415,-4.806725,1.257014,0.135586,-0.370476,6.869781,-3.702280,9.633185,-6.279517,8.054619,-4.194101,7.957094,-4.123603,-9.655131,2.599235,4.194639,9.831393,-7.769563,-4.474668,-8.425581,-8.158386,-8.991936,5.010845,1.809386,7.835083,0.300176,-6.189811,-7.161786,8.104701,5.174468,-1.577749,-3.826736,-3.162182,-7.343560,-1.954694,6.690639,-1.670270,1.387658,4.934744,-6.551374,4.551296,9.998109,-7.786359,-9.885429,-1.881948,-1.980181,6.774297,-6.280528,9.609291,-4.903373,6.393547,-1.365606,7.507363,4.828565,-0.912233,4.023078,-9.482246,-4.121698,-3.632738,-5.152497,-8.047780,4.817897,9.471098,9.846172,-3.093764,-2.814400,3.214127,-5.900875,9.953138,7.816246,0.048915,9.182329,2.677109,-8.625614,8.808898,-2.267049,-3.439431,8.925839,-3.824750,-6.741019,-6.250710,-7.128231,-3.071176,-9.296686,6.104216,1.674717,0.228789,-5.365486,-3.606734,-8.681038,7.848652,2.265650,0.683692,0.555272,8.167155,-1.583980,-9.428984,7.181276,1.775375,-8.938220,-9.184604,7.185812,6.568455,-0.203312,5.841360,2.974309,-8.740602,-6.699489,7.129020,8.390211,9.230460,-2.849701,-8.663981,-6.956113,3.126879,-7.588443,5.483841,5.603493,2.714697,-7.584296,7.754352,1.500270,5.974561,7.520869,1.883398,7.492643,-6.580775,8.865086,-8.767998,9.254822,-6.617561,5.819719,0.904915,-5.197193,-4.559423,2.447285,-3.655943,4.016255,-1.193855,-3.903031,1.188517,7.852141,2.442975,9.715552,-0.034775,-7.456926,-4.977056,-8.681181,-7.232306,2.586250,-3.855635,-8.509055,0.321689,-4.906932,-8.398525,-5.545607,-3.006340,-2.846020,-2.538237,1.370815,-3.906520,2.661306,1.890787,-7.875925,0.217308,1.776915,8.296559,-3.220329,5.031699,-0.683065,-7.640656,-7.390586,-4.239585,-4.070867,-9.485797,-0.919440,5.762014,2.644857,3.469564,4.131993,8.568039,-1.624378,-0.157388,-6.397819,4.159256,-5.998271,5.754752,6.788907,7.201713,-1.962561,9.319357,-9.047331,-8.411388,-9.706426,5.281550,-5.253925,-1.826395,3.712272,-5.177501,-0.374951,4.259417,3.307109,2.899385,-7.626349,-2.936945,-9.939151,3.586934,8.820676,3.637129,-7.429297,7.957636,4.219156,4.098314,-1.594220,-4.577030,-9.773435,0.584963,-2.967068,-6.230016,1.942089,1.996867,-7.127294,-6.169918,3.597840,4.839496,8.921520,-1.511036,-3.478387,9.911886,5.385653,-1.363847,0.995893,2.418994,-4.270493,5.326958,6.267349,-3.043760,2.410662,8.191754,-3.708967,-1.657493,3.697915,-4.799615,8.740986,-1.940075,-5.782032,-3.291468,1.684820,1.246344,8.900320,6.611410,-2.763048,-7.482172,2.302921,-5.062938,5.758841,1.115519,5.704414,-7.884933,8.025212,-6.584358,1.228858,-3.982424,-9.002099,1.374046,-1.270780,-1.969378,-6.120485,-3.126906,-1.124182,8.633705,-4.600932,-8.683422,-8.939343,-5.563146,-8.793240,6.500643,5.197718,-5.335017,-1.322842,3.526818,-4.276334,9.882491,-0.067743,-5.798516,-5.824574,-8.147596,-6.119384,-5.136622,-8.327744,7.376665,9.607230,-8.798422,-0.805867,3.736761,-8.885945,9.893135,-3.590384,7.537787,-3.459258,-2.930675,3.405123,4.314548,1.135243,0.286673,-9.594932,-1.448164,5.242095,-5.475783,3.512608,-0.303612,-7.881464,5.199404,-1.822828,-1.896427,-9.867524,0.050450,4.126686,-7.258651,9.704578,-9.383897,-6.388227,5.392634,-8.100320,7.866248,9.017674,0.030575,2.192979,6.259581,-7.757050,-0.669311,-9.879466,-7.574927,1.150002,-3.554464,-6.522714,-3.816396,-9.974556,5.760884,-8.248360,-1.399429,-7.405858,9.247017,-4.928301,-9.512568,-9.858750,-6.264867,-6.862312,1.583826,2.212562,-3.364321,-8.913158,-8.557641,4.456639,9.704940,-4.451093,6.152126,-5.366326,-9.087027,9.939206,7.587232,6.716133,-9.636511,-1.664453,3.087740,-9.442668,-8.831025,5.196426,3.916761,-7.508843,-8.108571,-2.333259,4.406725,-3.598176,-1.968106,-8.021636,-9.993549,8.830707,-3.387045,-2.119429,5.490757,6.086651,7.894236,-1.291681,9.810515,-0.832018,6.170287,-7.583495,7.247574,-2.846812,-8.485479,6.615572,-8.447059,-3.817560,-3.944625,8.260021,2.134730,5.666256,6.422389,3.887018,-4.359572,-4.424776,-4.088172,1.483823,5.287416,4.073140,-4.465703,-7.486906,1.803360,6.941555,6.359687,0.179696,-1.552532,-7.035228,-8.361161,-5.804252,3.390814,-2.605133,1.011115,3.545146,2.924179,8.850311,1.451317,8.516821,-6.431276,-7.959658,9.837471,-2.140769,9.438275,1.284616,-4.361441,-6.855966,-5.054764,1.138827,-1.050233,-2.376447,-0.499696,-3.102289,-3.541256,-3.817803,-1.339653,-3.704954,7.181468,0.480612,0.881209,-6.984935,6.216411,0.754963,-5.893790,5.498047,5.616742,-0.462211,7.288008,6.042475,-5.202689,-6.679359,4.870665,-7.865026,8.876142,8.638735,-9.746933,-7.648393,-3.716870,5.680769,8.624107,-0.649740,6.834463,-6.409893,1.659355,-7.680808,6.689786,-6.608847,2.211253,6.751038,8.140920,-4.688725,9.072547,6.118041,-0.225170,-3.283664,4.294660,2.225496,1.826521,-8.248550,0.648608,5.143205,2.555139,1.046129,-7.723527,-9.580110,9.951710,-5.711640,3.165515,4.660848,-2.854393,6.201110,-1.614356,-7.864618,-1.865896,-9.440967,7.700891,5.627754,6.214918,-8.147659,3.890086,2.734951,7.862247,7.184629,7.006187,-3.015806,-0.321876,-1.536394,-1.423063,6.617065,9.551476,4.989989,4.578601,8.828762,0.960532,-4.794019,-8.318120,-6.619873,3.694035,3.203787,-3.982068,2.051997,6.227514,4.046846,-8.477997,5.176699,-3.766367,2.386036,7.061134,-7.326026,-0.354028,5.954415,0.427489,-4.401427,-8.829279,6.155851,2.146955,7.757498,-7.900421,6.857131,5.196667,-4.968020,2.571203,1.462185,7.902863,8.491138,5.010173,-4.047442,-6.254614,8.888661,-4.079790,4.020703,2.870498,2.454141,6.869132,9.081827,6.487854,-3.051335,9.565712,8.012839,-0.924552,-7.485869,8.430920,-0.800738,5.961195,-9.311608,-3.158968,8.267549,3.774416,-6.579940,7.191581,3.291016,9.226733,3.786542,-7.525180,3.026554,-6.987085,-0.911506,6.232251,3.375860,-7.502734,-9.488630,-0.778032,8.501470,-0.989874,-9.320621,1.187294,-8.278170,-7.028163,3.416438,-8.551464,0.055465,-5.315656,4.902950,-4.366080,-5.215416,-6.594395,8.079200,-9.241834,-9.219779,-4.971330,1.912837,0.547385,1.664298,9.291558,-1.250049,5.331576,-9.198531,8.428246,5.529906,8.035689,-8.260565,2.588737,-8.700485,-7.857607,-1.036609,8.332956,-6.153577,-8.610390,-4.764083,-9.788801,4.619082,-5.422606,3.643769,7.803692,7.942432,-7.599082,3.040525,-5.063207,-7.061227,-8.136100,8.480262,-0.927382,-5.827317,4.796616,-7.537706,4.690492,-8.361227,-3.609808,4.537803,-2.127479,-7.924654,8.427638,-7.244502,9.355625,-9.447201,-5.196563,4.425793,-3.581071,9.878324,4.440673,7.523235,1.187982,-4.999954,-9.943890,-1.114536,1.506571,7.973762,-5.741997,-7.960452,-9.523914,5.459042,-1.521990,6.484552,1.886691,8.267238,3.867055,9.279579,-0.708019,-7.367430,-2.446858,0.703497,7.893518,-9.912488,3.463862,7.412733,9.302166,-2.558983,9.976060,-7.988452,-9.411599,0.496235,1.578864,-5.769549,6.093110,-6.864462,0.828753,3.555283,-3.720456,-2.065618,-9.770538,-8.534557,0.648674,7.731729,-6.532252,3.966685,1.813769,-3.880748,3.147812,-2.154497,5.434392,-4.013335,7.189443,1.235886,5.880094,7.220554,6.459752,-7.825296,-5.783960,-2.040067,1.090302,9.191745,-4.569064,2.654575,-1.974045,-5.377891,-1.315180,8.488691,-0.933326,-1.660897,-1.589141,1.832667,2.875650,-6.914003,-3.984609], dtype = "float64")#candidate|3258|(1200,)|const|float64
call_3255 = relay.TupleGetItem(func_3207_call(relay.reshape(var_3256.astype('uint64'), [5, 12, 3]), relay.reshape(var_3256.astype('uint64'), [5, 12, 3]), relay.reshape(const_3257.astype('uint8'), []), relay.reshape(const_3258.astype('float64'), [1200,]), ), 6)
call_3259 = relay.TupleGetItem(func_3212_call(relay.reshape(var_3256.astype('uint64'), [5, 12, 3]), relay.reshape(var_3256.astype('uint64'), [5, 12, 3]), relay.reshape(const_3257.astype('uint8'), []), relay.reshape(const_3258.astype('float64'), [1200,]), ), 6)
output = relay.Tuple([bop_3248,call_3255,var_3256,const_3257,const_3258,])
output2 = relay.Tuple([bop_3248,call_3259,var_3256,const_3257,const_3258,])
func_3264 = relay.Function([var_3246,var_3247,var_3256,], output)
mod['func_3264'] = func_3264
mod = relay.transform.InferType()(mod)
var_3265 = relay.var("var_3265", dtype = "uint8", shape = (9, 2, 12))#candidate|3265|(9, 2, 12)|var|uint8
var_3266 = relay.var("var_3266", dtype = "uint8", shape = (9, 2, 12))#candidate|3266|(9, 2, 12)|var|uint8
var_3267 = relay.var("var_3267", dtype = "uint64", shape = (6, 30))#candidate|3267|(6, 30)|var|uint64
output = func_3264(var_3265,var_3266,var_3267,)
func_3268 = relay.Function([var_3265,var_3266,var_3267,], output)
mutated_mod['func_3268'] = func_3268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2691_call = mod.get_global_var('func_2691')
func_2693_call = mutated_mod.get_global_var('func_2693')
call_3318 = func_2691_call()
call_3319 = func_2691_call()
func_1107_call = mod.get_global_var('func_1107')
func_1111_call = mutated_mod.get_global_var('func_1111')
const_3331 = relay.const([8.398127,8.901398,9.967324,1.694888,-6.837887,-8.220154,9.879598,-7.210064,2.215853,-3.463148,-5.763482,4.913415,7.502988,1.129986,-4.022266,-3.438981,-6.153807,9.422511,8.957509,2.016517,-3.502031,-6.872170,-8.215551,-6.596378,2.573719,-7.192750,6.344286,-7.977876,-5.362558,9.670374,0.726786,4.246602,9.466580,5.915151,7.525682,-8.375436,2.097071,-1.768072,-9.650972,1.797510,2.392191,7.231633,0.639960,-8.869338,-5.339791,-4.379391,4.905163,6.123513,7.171158,2.183016,1.758033,-0.299904,-0.420351,-5.949033,0.611546,-7.855793,-2.138415,6.929655,3.213078,0.082112,0.962097,1.153726,3.633456,5.464916,-5.711221,-2.387766], dtype = "float32")#candidate|3331|(66,)|const|float32
const_3332 = relay.const([[-2,-9,-9,-3,-8,-6,-6,-1],[-10,7,1,5,-10,4,6,9],[3,4,1,-8,-4,2,-3,-8],[-2,-10,9,-2,-6,4,-2,-9],[-2,-6,-10,6,1,8,8,6],[-3,4,-4,10,5,-9,8,2],[10,-5,-2,-8,6,6,-2,-6],[1,-4,6,-4,-9,-8,2,6],[-7,4,-1,-2,-8,1,-3,4],[6,-8,3,3,-4,8,-2,7],[5,-1,-6,3,3,6,2,-9],[-10,-1,8,5,-7,-7,-5,-8],[-6,7,2,-9,-4,1,5,-4],[-7,-5,9,7,3,4,-8,10],[-9,-7,-7,-4,-1,8,-4,-8],[7,8,-7,1,8,-10,6,-2],[7,6,8,-4,4,3,-4,9],[-8,7,-1,-5,-4,7,5,4],[1,-5,-9,-5,10,-1,3,-6],[-8,-8,1,-9,-8,-4,-8,-4],[-8,7,7,2,-2,-4,4,7],[2,2,9,-8,-10,10,1,-8],[-1,8,-6,5,-3,6,10,-1],[1,8,5,-8,8,-4,10,-8]], dtype = "int64")#candidate|3332|(24, 8)|const|int64
call_3330 = relay.TupleGetItem(func_1107_call(relay.reshape(const_3331.astype('float32'), [6, 1, 11]), relay.reshape(const_3332.astype('int64'), [192,]), ), 0)
call_3333 = relay.TupleGetItem(func_1111_call(relay.reshape(const_3331.astype('float32'), [6, 1, 11]), relay.reshape(const_3332.astype('int64'), [192,]), ), 0)
output = relay.Tuple([call_3318,call_3330,const_3331,const_3332,])
output2 = relay.Tuple([call_3319,call_3333,const_3331,const_3332,])
func_3336 = relay.Function([], output)
mod['func_3336'] = func_3336
mod = relay.transform.InferType()(mod)
output = func_3336()
func_3337 = relay.Function([], output)
mutated_mod['func_3337'] = func_3337
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3341 = relay.const([[[7.781438,-3.427598,1.558008,2.003466,7.182841,-1.151954,-4.501551,3.427928,8.736005],[-9.362136,0.505041,-2.013499,-3.202395,-8.615508,-8.400635,-6.452775,-6.419090,6.176929],[-2.310764,-7.886462,8.917999,6.853966,-7.562263,1.952322,1.270069,2.144371,-7.186430]],[[7.615421,8.965211,-2.316408,7.706163,6.374943,1.559878,2.061316,5.868365,-3.586413],[0.622361,-2.236383,-7.803832,3.792594,-7.541218,-6.499090,-0.051246,4.107002,9.819332],[9.746530,-1.087507,-1.911889,2.148336,-9.174669,-8.356839,4.073880,-5.426654,5.247144]],[[7.704957,-2.755383,-1.640948,-5.908423,-0.310480,-7.529136,2.451704,-4.369510,0.169470],[-2.252191,1.394801,7.660618,5.074413,4.467781,0.186638,-3.189233,3.358697,-3.589410],[-0.607513,-7.881379,-5.916366,-6.667478,-2.461127,9.059581,-4.167794,-7.682014,-4.184077]],[[1.588566,-9.310483,-0.355009,2.988841,-0.004314,4.341276,-5.568038,7.624583,9.753387],[-7.093791,9.950979,-0.448243,-6.301381,-5.254442,-9.530862,-1.789686,-1.547089,-7.217653],[-7.439834,-7.931847,-2.606575,9.836286,4.259702,4.816449,-2.350361,-6.230046,-8.611491]],[[9.993807,6.984613,6.925277,-9.653208,6.430498,-3.185898,1.636061,-7.832380,6.438258],[-0.588083,1.475687,1.498070,-4.444256,-6.141484,-7.698482,4.613236,8.349641,2.551961],[7.109387,3.813057,5.541612,-7.000993,-5.459309,-5.884602,-2.468666,0.906639,-2.935856]],[[-1.731774,-3.461109,1.278455,-9.116516,-6.087674,-6.833518,-7.259174,-0.672425,-8.907083],[-3.850728,-3.840956,1.668725,-2.793171,4.494364,-8.956199,6.074537,-1.830787,7.490622],[-3.662008,7.306223,-6.614027,-5.720040,6.124036,-0.530474,-9.538500,-6.762039,1.372295]],[[3.062889,5.871291,9.317454,-9.368195,2.673741,5.514787,5.625643,-4.449638,-5.685331],[-7.279392,2.903111,1.629463,8.155640,-8.036936,5.146182,-5.226579,-9.193416,6.551432],[3.868014,-5.474730,9.533386,8.139061,8.162371,7.859873,-5.981981,-1.591508,0.067288]],[[8.774029,-0.738818,-6.879354,-9.994078,-5.749235,3.662239,-9.137361,-6.699417,5.452387],[-8.092661,-5.574898,-0.666699,-2.051623,8.031395,-0.699989,-0.077474,6.369875,-2.584373],[-9.765048,-3.133669,7.662604,5.612893,-9.639003,-8.795622,8.118468,6.664127,-9.372008]],[[0.006130,-8.782910,5.125233,8.225392,2.627484,-6.363584,-1.671580,-3.662239,-5.090055],[-6.589484,4.841995,3.677424,-4.399608,5.509488,-2.939732,1.364434,-1.189722,-3.349088],[5.515206,0.618236,-7.862521,-8.129490,9.113943,-9.847193,-6.803598,2.980095,4.674347]],[[6.376115,3.286997,4.390193,-6.051506,6.702588,7.696917,-9.660152,4.934931,9.083757],[-2.174707,-6.980203,-5.598046,1.036886,-7.497561,-2.646886,5.250293,7.709940,-3.349010],[-1.396202,-1.974913,2.316422,6.593349,-5.010570,-9.808903,-1.119935,4.850216,-5.093889]],[[5.845696,-7.021070,-9.591075,-6.817058,-0.817774,-7.725731,-8.175489,2.450453,-0.727882],[-1.262224,-2.575131,-4.306378,-3.205775,2.653575,6.567090,5.276702,2.107000,-7.401307],[3.164616,4.599517,2.494759,-1.608986,-9.536716,-9.302850,2.393005,-7.420254,1.969095]]], dtype = "float32")#candidate|3341|(11, 3, 9)|const|float32
uop_3342 = relay.acosh(const_3341.astype('float32')) # shape=(11, 3, 9)
uop_3346 = relay.tan(uop_3342.astype('float32')) # shape=(11, 3, 9)
const_3370 = relay.const([[[-8.106108,7.234227,6.621782,5.287884,0.273561,-1.456238,-9.701679,7.748260,3.393279],[8.825977,-4.087739,-0.222760,3.406992,2.588289,-1.276991,5.974029,-0.973466,-1.888702],[-5.984810,-4.003182,-6.235221,-4.179469,-5.617447,7.233397,0.485841,0.818481,-7.950192]],[[-6.342261,6.159013,6.999021,-4.332026,1.692231,-6.425415,-6.104254,4.108263,-9.563068],[2.854060,6.872122,6.648803,7.694075,5.990075,-7.691086,-3.400602,9.298953,-8.150078],[1.831898,-6.017042,-9.854205,-1.690339,0.596594,7.987912,7.009931,-0.288436,-2.382779]],[[2.670346,2.270471,1.099505,1.552973,-9.684810,2.905767,9.880800,1.962710,8.637865],[-4.603082,-6.450474,-9.940189,-3.614553,-3.711869,-7.369071,-7.505782,5.800886,-6.835526],[9.112671,-3.243387,-0.149832,-2.082300,4.778818,8.268132,5.906091,-4.568323,-4.873556]],[[-0.001730,4.234317,6.757908,7.586450,1.583085,8.153882,8.307622,7.472215,-4.641025],[-3.134929,-8.668048,-2.662948,-4.023610,6.974557,2.199870,4.514555,-3.342893,2.386471],[-3.151660,9.709189,0.679857,9.000336,3.813310,-7.958777,3.648216,8.633615,-4.562781]],[[5.046090,0.251003,-2.916231,-5.235682,-7.920261,-1.490078,4.631340,3.769585,-5.468862],[0.867202,3.324208,6.877644,3.311827,-4.834659,-4.129310,-3.969179,-2.024265,-9.496963],[8.519205,-7.864045,-8.361986,1.467233,-7.257954,-4.149465,4.973837,-7.092093,3.508017]],[[-0.788568,-0.223091,1.244537,-7.054655,0.284541,7.485125,4.459861,-5.688647,7.047904],[-4.869111,-8.830770,6.709242,5.614894,2.551364,9.422459,5.746592,5.970771,5.342686],[-7.904407,-3.500151,-6.074371,-3.434552,-9.501514,3.570320,4.104608,-9.690487,-1.699948]],[[-2.283427,-5.575070,-5.113122,-8.142606,-2.581037,7.587925,-1.694019,4.096901,1.322880],[7.156442,7.104477,5.671870,3.465098,-7.276049,-6.722820,4.133433,-1.900785,-0.862074],[6.895597,5.412288,-6.125156,5.686106,-7.432576,-6.452576,-3.429093,2.640558,2.925557]],[[7.517204,4.166744,2.563429,-6.022719,7.032118,-0.097926,1.688694,-6.285373,9.411741],[-5.659550,-4.982899,7.195096,-6.702443,-1.800393,9.662483,-0.399318,-4.532429,-6.526425],[-6.756100,-4.078408,-0.805664,1.053591,-5.901175,-6.437295,7.435488,8.434864,0.231532]],[[-9.406480,-8.993090,-4.792651,-0.616991,-0.337040,-9.679129,-8.071765,-1.278218,-9.985819],[-3.944425,-4.940127,-2.806059,-5.194534,4.103176,0.036203,1.329572,2.401463,-3.607676],[5.573356,-4.770207,7.577454,6.183956,9.424303,-4.915498,-9.683502,-2.023991,5.745061]],[[1.006062,-2.930971,1.173130,1.711529,1.706429,8.208202,-0.207387,-0.071003,-3.365781],[-2.354894,-6.591399,3.776004,4.074789,3.204296,3.990726,-7.405580,-7.849708,2.375699],[-2.091116,-3.985857,4.288055,3.181142,6.951710,5.801835,1.232798,3.812678,4.137267]],[[-4.866807,-7.478121,-4.899558,1.455027,-8.052913,6.532095,0.207788,-9.228129,6.921594],[2.455857,-9.040892,9.502966,7.518641,8.296328,-3.454425,5.346733,6.689566,-4.187042],[4.331520,8.358176,0.682669,-6.726216,-2.525710,6.612789,-9.823627,2.245305,8.796471]]], dtype = "float32")#candidate|3370|(11, 3, 9)|const|float32
bop_3371 = relay.multiply(uop_3346.astype('float32'), relay.reshape(const_3370.astype('float32'), relay.shape_of(uop_3346))) # shape=(11, 3, 9)
output = relay.Tuple([bop_3371,])
output2 = relay.Tuple([bop_3371,])
func_3392 = relay.Function([], output)
mod['func_3392'] = func_3392
mod = relay.transform.InferType()(mod)
mutated_mod['func_3392'] = func_3392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3392_call = mutated_mod.get_global_var('func_3392')
call_3393 = func_3392_call()
output = call_3393
func_3394 = relay.Function([], output)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3161_call = mod.get_global_var('func_3161')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_3412 = func_3161_call()
call_3413 = func_3161_call()
output = call_3412
output2 = call_3413
func_3425 = relay.Function([], output)
mod['func_3425'] = func_3425
mod = relay.transform.InferType()(mod)
mutated_mod['func_3425'] = func_3425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mutated_mod.get_global_var('func_3425')
call_3426 = func_3425_call()
output = call_3426
func_3427 = relay.Function([], output)
mutated_mod['func_3427'] = func_3427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3161_call = mod.get_global_var('func_3161')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_3431 = func_3161_call()
call_3432 = func_3161_call()
output = call_3431
output2 = call_3432
func_3450 = relay.Function([], output)
mod['func_3450'] = func_3450
mod = relay.transform.InferType()(mod)
output = func_3450()
func_3451 = relay.Function([], output)
mutated_mod['func_3451'] = func_3451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2954_call = mod.get_global_var('func_2954')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_3501 = relay.TupleGetItem(func_2954_call(), 0)
call_3502 = relay.TupleGetItem(func_2955_call(), 0)
func_2910_call = mod.get_global_var('func_2910')
func_2914_call = mutated_mod.get_global_var('func_2914')
var_3512 = relay.var("var_3512", dtype = "uint16", shape = (160,))#candidate|3512|(160,)|var|uint16
call_3511 = relay.TupleGetItem(func_2910_call(relay.reshape(var_3512.astype('uint16'), [16, 2, 5]), relay.reshape(var_3512.astype('float32'), [16, 2, 5]), ), 1)
call_3513 = relay.TupleGetItem(func_2914_call(relay.reshape(var_3512.astype('uint16'), [16, 2, 5]), relay.reshape(var_3512.astype('float32'), [16, 2, 5]), ), 1)
func_195_call = mod.get_global_var('func_195')
func_197_call = mutated_mod.get_global_var('func_197')
const_3522 = relay.const([7.603036,-9.643166,-8.102955,-8.287583,8.580753,-3.637564,-2.428153,5.091263,-9.807223,7.219653,3.339420,-2.259727,-3.225349,-0.686150,0.411258,-0.048717,5.861169,9.897370,2.675209,3.333333,-7.411019,-9.142351,1.876196,-3.441272,1.263598,8.011765,-5.746110,9.106014,-1.963629,-3.125434,8.267841,-5.676330,9.924074,8.722022,7.845118,2.228003,-6.184764,-3.023325,4.490192,4.511218,-5.156476,1.602731,-4.933408,8.281309,-6.754798,-8.815773,-9.403622,-9.082868,6.592837,1.816594,2.536019,-9.933302,-4.441394,3.631723,8.553462,3.227927,5.278364,-3.304873,3.140812,-8.326212,-5.550743,-9.880023,0.437174,-3.690902,-0.391386,3.706169,2.603325,3.949139,-3.987004,7.372683,-1.091458,-9.948436,-3.856917,0.811417,-8.341925,9.695691,4.787614,-6.116370,4.153555,7.004634,-1.052461,4.475362,-1.307402,4.471981,5.841173,9.831301,2.963096,-1.928549,-1.124116,-2.026462,4.006848,4.884398,7.112039,-9.919059,0.774306,-0.124112,-7.116833,7.396883,-6.357476,-1.858463,8.805286,5.442666,9.131904,-4.303591,-6.231588,-5.515739,6.900554,-1.308499,9.716091,9.341255,-4.610141,-2.706502,7.249391,9.964383,5.570430,0.874590,8.949628,6.922251,-2.402298,8.936028,-0.110795,2.322118,3.645786,-6.812424,-2.007171,5.285875,8.764353,2.109399,9.847689,9.599425,-0.802134,-1.054932,7.005276,-6.793680,0.797742,-2.996405,-6.033615,0.491875,4.501648,-2.433616,5.664833,-2.765855,-2.886149,8.647117,5.133042,-6.646361,-2.758189,3.716317,-2.963678,1.795155,8.589976,-8.887416,5.256973,-2.964613,7.212954,-2.769626,-4.539315,-1.592936,1.059920,2.831959,-3.146556,-3.213580,-7.983133,-4.239816,-9.173259,-1.939495,-6.523691,5.397742,7.354922,-7.358768,-0.517009,6.270023,-7.766172,4.988779,-6.784869,-2.448054,-3.540786,7.682421,-1.687358,-3.400363], dtype = "float32")#candidate|3522|(180,)|const|float32
call_3521 = relay.TupleGetItem(func_195_call(relay.reshape(const_3522.astype('float32'), [3, 10, 6])), 0)
call_3523 = relay.TupleGetItem(func_197_call(relay.reshape(const_3522.astype('float32'), [3, 10, 6])), 0)
var_3526 = relay.var("var_3526", dtype = "float32", shape = (16, 2, 5))#candidate|3526|(16, 2, 5)|var|float32
bop_3527 = relay.minimum(call_3511.astype('int16'), relay.reshape(var_3526.astype('int16'), relay.shape_of(call_3511))) # shape=(16, 2, 5)
bop_3530 = relay.minimum(call_3513.astype('int16'), relay.reshape(var_3526.astype('int16'), relay.shape_of(call_3513))) # shape=(16, 2, 5)
func_2954_call = mod.get_global_var('func_2954')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_3552 = relay.TupleGetItem(func_2954_call(), 0)
call_3553 = relay.TupleGetItem(func_2955_call(), 0)
func_1739_call = mod.get_global_var('func_1739')
func_1742_call = mutated_mod.get_global_var('func_1742')
var_3556 = relay.var("var_3556", dtype = "float32", shape = (1, 120))#candidate|3556|(1, 120)|var|float32
call_3555 = relay.TupleGetItem(func_1739_call(relay.reshape(var_3556.astype('float32'), [4, 2, 15])), 0)
call_3557 = relay.TupleGetItem(func_1742_call(relay.reshape(var_3556.astype('float32'), [4, 2, 15])), 0)
bop_3558 = relay.divide(var_3512.astype('float64'), relay.reshape(call_3511.astype('float64'), relay.shape_of(var_3512))) # shape=(160,)
bop_3561 = relay.divide(var_3512.astype('float64'), relay.reshape(call_3513.astype('float64'), relay.shape_of(var_3512))) # shape=(160,)
output = relay.Tuple([call_3501,call_3521,const_3522,bop_3527,call_3552,call_3555,var_3556,bop_3558,])
output2 = relay.Tuple([call_3502,call_3523,const_3522,bop_3530,call_3553,call_3557,var_3556,bop_3561,])
func_3570 = relay.Function([var_3512,var_3526,var_3556,], output)
mod['func_3570'] = func_3570
mod = relay.transform.InferType()(mod)
var_3571 = relay.var("var_3571", dtype = "uint16", shape = (160,))#candidate|3571|(160,)|var|uint16
var_3572 = relay.var("var_3572", dtype = "float32", shape = (16, 2, 5))#candidate|3572|(16, 2, 5)|var|float32
var_3573 = relay.var("var_3573", dtype = "float32", shape = (1, 120))#candidate|3573|(1, 120)|var|float32
output = func_3570(var_3571,var_3572,var_3573,)
func_3574 = relay.Function([var_3571,var_3572,var_3573,], output)
mutated_mod['func_3574'] = func_3574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2954_call = mod.get_global_var('func_2954')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_3597 = relay.TupleGetItem(func_2954_call(), 0)
call_3598 = relay.TupleGetItem(func_2955_call(), 0)
var_3602 = relay.var("var_3602", dtype = "bool", shape = (10, 4, 16))#candidate|3602|(10, 4, 16)|var|bool
bop_3603 = relay.floor_divide(call_3597.astype('float32'), relay.reshape(var_3602.astype('float32'), relay.shape_of(call_3597))) # shape=(10, 4, 16)
bop_3606 = relay.floor_divide(call_3598.astype('float32'), relay.reshape(var_3602.astype('float32'), relay.shape_of(call_3598))) # shape=(10, 4, 16)
output = relay.Tuple([bop_3603,])
output2 = relay.Tuple([bop_3606,])
func_3613 = relay.Function([var_3602,], output)
mod['func_3613'] = func_3613
mod = relay.transform.InferType()(mod)
var_3614 = relay.var("var_3614", dtype = "bool", shape = (10, 4, 16))#candidate|3614|(10, 4, 16)|var|bool
output = func_3613(var_3614)
func_3615 = relay.Function([var_3614], output)
mutated_mod['func_3615'] = func_3615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mod.get_global_var('func_3425')
func_3427_call = mutated_mod.get_global_var('func_3427')
call_3646 = func_3425_call()
call_3647 = func_3425_call()
output = call_3646
output2 = call_3647
func_3649 = relay.Function([], output)
mod['func_3649'] = func_3649
mod = relay.transform.InferType()(mod)
output = func_3649()
func_3650 = relay.Function([], output)
mutated_mod['func_3650'] = func_3650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2691_call = mod.get_global_var('func_2691')
func_2693_call = mutated_mod.get_global_var('func_2693')
call_3775 = func_2691_call()
call_3776 = func_2691_call()
func_3425_call = mod.get_global_var('func_3425')
func_3427_call = mutated_mod.get_global_var('func_3427')
call_3797 = func_3425_call()
call_3798 = func_3425_call()
output = relay.Tuple([call_3775,call_3797,])
output2 = relay.Tuple([call_3776,call_3798,])
func_3818 = relay.Function([], output)
mod['func_3818'] = func_3818
mod = relay.transform.InferType()(mod)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mutated_mod.get_global_var('func_3818')
call_3819 = func_3818_call()
output = call_3819
func_3820 = relay.Function([], output)
mutated_mod['func_3820'] = func_3820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3161_call = mod.get_global_var('func_3161')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_3847 = func_3161_call()
call_3848 = func_3161_call()
output = relay.Tuple([call_3847,])
output2 = relay.Tuple([call_3848,])
func_3849 = relay.Function([], output)
mod['func_3849'] = func_3849
mod = relay.transform.InferType()(mod)
output = func_3849()
func_3850 = relay.Function([], output)
mutated_mod['func_3850'] = func_3850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2691_call = mod.get_global_var('func_2691')
func_2693_call = mutated_mod.get_global_var('func_2693')
call_3854 = func_2691_call()
call_3855 = func_2691_call()
func_2763_call = mod.get_global_var('func_2763')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_3883 = relay.TupleGetItem(func_2763_call(), 0)
call_3884 = relay.TupleGetItem(func_2765_call(), 0)
func_1521_call = mod.get_global_var('func_1521')
func_1525_call = mutated_mod.get_global_var('func_1525')
const_3897 = relay.const([2,-2,2,-3,7,6,3,2,10,-2,10,7,-8,7,9,-9,-5,-6,-1,9,-6,-8,9,-10,-6,5,8,3,-4,2,-8,4,2,-8,8,-10,4,-3,10,6,-6,9,3,-1,-4,-10,-6,4,4,-2,1,7,10,10,5,-5,7,4,7,6,-10,2,1,-7,-9,-1,1,-8,10,-10,-6,-6,8,-4,7,6,8,-7,-5,-6,-1,7,-5,-4,6,9,-8,6,5,3,-2,1,-7,9,-1,8,-1,6,3,10,4,1,6,-2,-9,-5,1,1,4,-10,4,-9,-5,1,-4,7,-2,-4,8,-9,8,-10,-10,9,-2,9,8,-10,-4,1,4,10], dtype = "uint32")#candidate|3897|(132,)|const|uint32
var_3898 = relay.var("var_3898", dtype = "float32", shape = (1300,))#candidate|3898|(1300,)|var|float32
call_3896 = relay.TupleGetItem(func_1521_call(relay.reshape(const_3897.astype('uint32'), [4, 3, 11]), relay.reshape(var_3898.astype('float32'), [1300,]), relay.reshape(var_3898.astype('bool'), [13, 10, 10]), ), 0)
call_3899 = relay.TupleGetItem(func_1525_call(relay.reshape(const_3897.astype('uint32'), [4, 3, 11]), relay.reshape(var_3898.astype('float32'), [1300,]), relay.reshape(var_3898.astype('bool'), [13, 10, 10]), ), 0)
uop_3903 = relay.sigmoid(call_3896.astype('float64')) # shape=(4, 3, 11)
uop_3905 = relay.sigmoid(call_3899.astype('float64')) # shape=(4, 3, 11)
output = relay.Tuple([call_3854,call_3883,const_3897,var_3898,uop_3903,])
output2 = relay.Tuple([call_3855,call_3884,const_3897,var_3898,uop_3905,])
func_3909 = relay.Function([var_3898,], output)
mod['func_3909'] = func_3909
mod = relay.transform.InferType()(mod)
var_3910 = relay.var("var_3910", dtype = "float32", shape = (1300,))#candidate|3910|(1300,)|var|float32
output = func_3909(var_3910)
func_3911 = relay.Function([var_3910], output)
mutated_mod['func_3911'] = func_3911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2794_call = mod.get_global_var('func_2794')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_3915 = func_2794_call()
call_3916 = func_2794_call()
func_3336_call = mod.get_global_var('func_3336')
func_3337_call = mutated_mod.get_global_var('func_3337')
call_3921 = relay.TupleGetItem(func_3336_call(), 1)
call_3922 = relay.TupleGetItem(func_3337_call(), 1)
var_3932 = relay.var("var_3932", dtype = "float32", shape = (3, 10, 6))#candidate|3932|(3, 10, 6)|var|float32
bop_3933 = relay.bitwise_or(call_3921.astype('uint8'), relay.reshape(var_3932.astype('uint8'), relay.shape_of(call_3921))) # shape=(3, 10, 6)
bop_3936 = relay.bitwise_or(call_3922.astype('uint8'), relay.reshape(var_3932.astype('uint8'), relay.shape_of(call_3922))) # shape=(3, 10, 6)
uop_3946 = relay.rsqrt(call_3915.astype('float64')) # shape=(16, 2, 5)
uop_3948 = relay.rsqrt(call_3916.astype('float64')) # shape=(16, 2, 5)
func_284_call = mod.get_global_var('func_284')
func_288_call = mutated_mod.get_global_var('func_288')
var_3951 = relay.var("var_3951", dtype = "int64", shape = (96, 2))#candidate|3951|(96, 2)|var|int64
call_3950 = relay.TupleGetItem(func_284_call(relay.reshape(var_3951.astype('int64'), [4, 12, 4]), relay.reshape(var_3951.astype('int64'), [4, 12, 4]), ), 3)
call_3952 = relay.TupleGetItem(func_288_call(relay.reshape(var_3951.astype('int64'), [4, 12, 4]), relay.reshape(var_3951.astype('int64'), [4, 12, 4]), ), 3)
func_1654_call = mod.get_global_var('func_1654')
func_1656_call = mutated_mod.get_global_var('func_1656')
const_3966 = relay.const([[6,3,-4,-3,-6,-7],[7,-7,-9,1,8,-5],[9,-6,9,9,-9,5],[3,-4,-8,-6,-8,1],[3,-7,-6,-6,2,-7],[-10,-8,-9,4,10,10],[10,-4,-10,6,-9,-6],[7,-1,6,10,4,-6],[-1,-6,-8,-1,-4,-7],[-10,-10,7,-5,8,3],[-5,1,-3,4,-7,8],[-7,-4,-4,5,-5,4],[-1,-8,8,-4,-6,-4],[-3,-4,-1,6,1,-10],[2,-10,10,-8,-6,1],[-8,9,-1,-3,-3,5],[-9,-5,2,5,1,-8],[3,4,-2,3,10,-4],[-5,7,5,-6,-4,5],[6,-7,-9,-8,3,-10],[-6,5,-3,9,5,7],[-8,6,-4,6,-3,5],[-10,-4,6,7,7,8],[-10,-9,10,7,-9,-8],[4,-2,-8,10,-1,-10],[8,-9,-9,4,-3,-6],[-1,1,-6,4,2,8],[5,8,10,-5,5,-3],[10,-4,4,-5,3,-6],[4,8,8,-6,3,8],[-1,-4,-8,1,-6,-2],[4,-5,3,5,-3,-5],[-8,1,2,5,-4,-10],[-5,10,-5,-2,-10,-8],[-10,2,6,2,8,-5],[7,-4,8,3,4,-5],[-8,9,-5,2,-10,9],[-2,1,-8,-10,8,-6],[-9,-10,-4,5,-5,9]], dtype = "int32")#candidate|3966|(39, 6)|const|int32
call_3965 = relay.TupleGetItem(func_1654_call(relay.reshape(const_3966.astype('int32'), [13, 9, 2])), 0)
call_3967 = relay.TupleGetItem(func_1656_call(relay.reshape(const_3966.astype('int32'), [13, 9, 2])), 0)
output = relay.Tuple([bop_3933,uop_3946,call_3950,var_3951,call_3965,const_3966,])
output2 = relay.Tuple([bop_3936,uop_3948,call_3952,var_3951,call_3967,const_3966,])
func_3970 = relay.Function([var_3932,var_3951,], output)
mod['func_3970'] = func_3970
mod = relay.transform.InferType()(mod)
var_3971 = relay.var("var_3971", dtype = "float32", shape = (3, 10, 6))#candidate|3971|(3, 10, 6)|var|float32
var_3972 = relay.var("var_3972", dtype = "int64", shape = (96, 2))#candidate|3972|(96, 2)|var|int64
output = func_3970(var_3971,var_3972,)
func_3973 = relay.Function([var_3971,var_3972,], output)
mutated_mod['func_3973'] = func_3973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mod.get_global_var('func_2763')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_3996 = relay.TupleGetItem(func_2763_call(), 0)
call_3997 = relay.TupleGetItem(func_2765_call(), 0)
output = call_3996
output2 = call_3997
func_4002 = relay.Function([], output)
mod['func_4002'] = func_4002
mod = relay.transform.InferType()(mod)
output = func_4002()
func_4003 = relay.Function([], output)
mutated_mod['func_4003'] = func_4003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2794_call = mod.get_global_var('func_2794')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_4011 = func_2794_call()
call_4012 = func_2794_call()
func_2595_call = mod.get_global_var('func_2595')
func_2598_call = mutated_mod.get_global_var('func_2598')
var_4023 = relay.var("var_4023", dtype = "float32", shape = (1300,))#candidate|4023|(1300,)|var|float32
call_4022 = relay.TupleGetItem(func_2595_call(relay.reshape(var_4023.astype('float32'), [1300,])), 2)
call_4024 = relay.TupleGetItem(func_2598_call(relay.reshape(var_4023.astype('float32'), [1300,])), 2)
func_3005_call = mod.get_global_var('func_3005')
func_3008_call = mutated_mod.get_global_var('func_3008')
call_4029 = relay.TupleGetItem(func_3005_call(relay.reshape(call_4022.astype('float32'), [1300,])), 0)
call_4030 = relay.TupleGetItem(func_3008_call(relay.reshape(call_4022.astype('float32'), [1300,])), 0)
output = relay.Tuple([call_4011,call_4022,var_4023,call_4029,])
output2 = relay.Tuple([call_4012,call_4024,var_4023,call_4030,])
func_4033 = relay.Function([var_4023,], output)
mod['func_4033'] = func_4033
mod = relay.transform.InferType()(mod)
mutated_mod['func_4033'] = func_4033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4034 = relay.var("var_4034", dtype = "float32", shape = (1300,))#candidate|4034|(1300,)|var|float32
func_4033_call = mutated_mod.get_global_var('func_4033')
call_4035 = func_4033_call(var_4034)
output = call_4035
func_4036 = relay.Function([var_4034], output)
mutated_mod['func_4036'] = func_4036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mod.get_global_var('func_2763')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_4086 = relay.TupleGetItem(func_2763_call(), 0)
call_4087 = relay.TupleGetItem(func_2765_call(), 0)
func_1152_call = mod.get_global_var('func_1152')
func_1156_call = mutated_mod.get_global_var('func_1156')
var_4089 = relay.var("var_4089", dtype = "float32", shape = (1300,))#candidate|4089|(1300,)|var|float32
call_4088 = func_1152_call(relay.reshape(var_4089.astype('float32'), [13, 10, 10]), relay.reshape(var_4089.astype('float32'), [13, 10, 10]), )
call_4090 = func_1152_call(relay.reshape(var_4089.astype('float32'), [13, 10, 10]), relay.reshape(var_4089.astype('float32'), [13, 10, 10]), )
bop_4093 = relay.multiply(call_4088.astype('int8'), relay.reshape(var_4089.astype('int8'), relay.shape_of(call_4088))) # shape=(13, 10, 10)
bop_4096 = relay.multiply(call_4090.astype('int8'), relay.reshape(var_4089.astype('int8'), relay.shape_of(call_4090))) # shape=(13, 10, 10)
func_937_call = mod.get_global_var('func_937')
func_941_call = mutated_mod.get_global_var('func_941')
const_4098 = relay.const([[8.692337],[-1.002445],[5.855015],[0.290470],[5.999972],[-1.532187],[-8.274827],[-2.324116],[-7.290092],[-0.356157],[-6.091797],[-7.177852],[-9.768928],[0.770784],[-8.218050],[-9.344706],[-0.774923],[1.918269],[0.493878],[-3.596152],[-2.768831],[-7.278985],[-8.799343],[7.454691],[2.510879],[2.364556],[-9.451209],[-9.601603],[2.067819],[5.457726],[-7.211611],[-8.412486],[-7.063774],[-7.321926],[-9.203651],[-7.545041],[8.554117],[-5.429671],[-3.313311],[-4.675801],[0.552870],[7.339699],[8.500272],[-1.305099],[3.303335],[-7.743501],[6.935652],[-9.956284],[-5.790539],[3.918662],[-3.038582],[7.824808],[-1.264357],[5.885445],[8.508598],[7.580307],[5.988281],[-5.854343],[-7.867752],[-4.483370],[-6.858237],[7.369696],[1.929541],[5.294697],[-4.913017],[-3.432377],[4.882556],[-4.882858],[8.864989],[-6.621948],[9.899388],[9.334258],[-3.437146],[-2.732489],[-2.302828],[-8.305233],[8.574163],[-7.643684],[-3.591176],[6.072708],[0.813924],[2.467149],[1.844224],[-7.914045]], dtype = "float64")#candidate|4098|(84, 1)|const|float64
const_4099 = relay.const([-2,5,5,3,-7,10,9,-6,9,1,1,-6,-7,-2,-10,7,7,8,-1,-1,4,-10,-3,1,2,-1,4,-5,-8,5,2,-8,6,-1,8,5,3,5,2,10,-8,7,8,-2,1,-2,9,-1,5,2,-6,-5,4,9,-6,8,-9,7,-6,-4,6,9,-6,-2,6,4,3,-3,1,-3,-10,-2,-7,-8,8,2,-8,9,5,4,-5,3,10,-7,9,-8,2,-10,1,-1,-10,2,6,-1,-3,2,3,-8,-3,-4,6,1,-3,4,-9,-2,-10,6,-6,-8,-1,-8,6,-9,-2,3,-6,5,-5,5,6,4,2,3,-8,6,1,-6,-4,8,-8,6,-5,-3,-10,6,-4,3,4,-5,-6,4,6,6,4,8,7,4,-4,2,-3,-9,3,-4,-7,1,-1,3,-4,-7,-5,8,6,-3,9,4,8,-1,-7,-9,-6,-10,-3,4,3,4,6,-9,-4,-5,-2,4,-4,10,-2,6,7,-6,-10,-10,2,1], dtype = "int64")#candidate|4099|(192,)|const|int64
call_4097 = relay.TupleGetItem(func_937_call(relay.reshape(const_4098.astype('float64'), [14, 6, 1]), relay.reshape(const_4099.astype('int64'), [192,]), ), 4)
call_4100 = relay.TupleGetItem(func_941_call(relay.reshape(const_4098.astype('float64'), [14, 6, 1]), relay.reshape(const_4099.astype('int64'), [192,]), ), 4)
uop_4110 = relay.tan(const_4099.astype('float32')) # shape=(192,)
func_1521_call = mod.get_global_var('func_1521')
func_1525_call = mutated_mod.get_global_var('func_1525')
var_4113 = relay.var("var_4113", dtype = "uint32", shape = (132,))#candidate|4113|(132,)|var|uint32
call_4112 = relay.TupleGetItem(func_1521_call(relay.reshape(var_4113.astype('uint32'), [4, 3, 11]), relay.reshape(call_4088.astype('float32'), [1300,]), relay.reshape(bop_4093.astype('bool'), [13, 10, 10]), ), 2)
call_4114 = relay.TupleGetItem(func_1525_call(relay.reshape(var_4113.astype('uint32'), [4, 3, 11]), relay.reshape(call_4088.astype('float32'), [1300,]), relay.reshape(bop_4093.astype('bool'), [13, 10, 10]), ), 2)
func_3450_call = mod.get_global_var('func_3450')
func_3451_call = mutated_mod.get_global_var('func_3451')
call_4123 = func_3450_call()
call_4124 = func_3450_call()
output = relay.Tuple([call_4086,bop_4093,call_4097,const_4098,uop_4110,call_4112,var_4113,call_4123,])
output2 = relay.Tuple([call_4087,bop_4096,call_4100,const_4098,uop_4110,call_4114,var_4113,call_4124,])
func_4128 = relay.Function([var_4089,var_4113,], output)
mod['func_4128'] = func_4128
mod = relay.transform.InferType()(mod)
var_4129 = relay.var("var_4129", dtype = "float32", shape = (1300,))#candidate|4129|(1300,)|var|float32
var_4130 = relay.var("var_4130", dtype = "uint32", shape = (132,))#candidate|4130|(132,)|var|uint32
output = func_4128(var_4129,var_4130,)
func_4131 = relay.Function([var_4129,var_4130,], output)
mutated_mod['func_4131'] = func_4131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4182 = relay.var("var_4182", dtype = "float64", shape = (4, 9, 8))#candidate|4182|(4, 9, 8)|var|float64
uop_4183 = relay.atanh(var_4182.astype('float64')) # shape=(4, 9, 8)
uop_4190 = relay.log2(uop_4183.astype('float32')) # shape=(4, 9, 8)
bop_4193 = relay.mod(uop_4190.astype('float64'), relay.reshape(uop_4183.astype('float64'), relay.shape_of(uop_4190))) # shape=(4, 9, 8)
output = bop_4193
output2 = bop_4193
func_4196 = relay.Function([var_4182,], output)
mod['func_4196'] = func_4196
mod = relay.transform.InferType()(mod)
var_4197 = relay.var("var_4197", dtype = "float64", shape = (4, 9, 8))#candidate|4197|(4, 9, 8)|var|float64
output = func_4196(var_4197)
func_4198 = relay.Function([var_4197], output)
mutated_mod['func_4198'] = func_4198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3392_call = mod.get_global_var('func_3392')
func_3394_call = mutated_mod.get_global_var('func_3394')
call_4238 = relay.TupleGetItem(func_3392_call(), 0)
call_4239 = relay.TupleGetItem(func_3394_call(), 0)
uop_4263 = relay.cosh(call_4238.astype('float32')) # shape=(11, 3, 9)
uop_4265 = relay.cosh(call_4239.astype('float32')) # shape=(11, 3, 9)
func_3849_call = mod.get_global_var('func_3849')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_4270 = relay.TupleGetItem(func_3849_call(), 0)
call_4271 = relay.TupleGetItem(func_3850_call(), 0)
func_1152_call = mod.get_global_var('func_1152')
func_1156_call = mutated_mod.get_global_var('func_1156')
const_4295 = relay.const([1.969179,-5.793067,-9.046643,-3.290224,-6.285088,0.581517,7.414142,-6.762990,-3.494458,2.011806,7.655549,2.042290,0.612001,7.739675,-0.365288,8.756941,-8.596384,4.892559,4.523432,-1.377370,6.401824,-0.040121,3.235269,5.517314,-8.258934,3.023137,-5.467097,-3.162627,2.521210,2.713483,5.548027,-4.053299,-4.057754,-6.772996,6.327668,7.030914,2.068383,-9.641096,7.216425,-1.813007,-6.855227,2.820237,-6.818712,-8.928981,-0.726432,2.780097,-6.972146,6.160759,2.195101,-4.073416,-8.177911,7.631987,8.178835,9.117141,7.119852,-2.964998,3.958350,4.525835,-0.252103,-1.088890,5.540065,-8.011529,3.875461,-5.235397,0.641049,5.713534,0.714843,3.703470,-4.088815,8.216915,-2.387277,-7.390763,4.949433,-4.172702,4.555357,-1.612643,-0.681768,0.268912,2.829039,8.022183,-0.449995,-6.878499,3.923074,0.055315,-3.813731,-8.888830,-7.583481,0.939231,-8.125846,8.805817,-5.170051,-5.190379,-8.374093,-2.503202,9.869841,3.745216,-2.693740,1.830758,5.139066,-3.026575,4.803607,4.436290,9.414903,-0.609539,-9.091497,4.794698,6.385918,6.277315,6.027928,4.317543,8.127314,1.986433,8.271612,-7.921500,1.303858,-9.247739,1.773645,-0.866241,-7.079263,-7.352082,8.697952,8.485823,9.359353,-0.354212,-7.264540,2.421759,-7.436645,-9.326263,-6.433855,3.372175,2.468083,-0.457802,3.308785,7.409986,0.216564,-6.312872,3.657939,-7.208580,-8.628024,-9.225752,-9.373379,3.006078,-5.515759,-1.676111,-3.198563,-1.910422,-3.296119,-0.647196,3.062609,3.886064,7.140058,3.038631,-3.063547,1.381730,6.568093,1.982842,9.523194,-6.791845,-2.115975,-8.366180,-6.779941,-0.076519,-8.090111,-3.610464,-5.590425,-2.330033,5.999301,6.636345,7.039941,0.406113,-6.798096,8.842258,8.355241,5.514224,-2.142555,-8.716848,-8.793418,1.281041,2.484228,-4.189793,-4.104640,5.012852,2.495604,9.793576,9.258994,9.179143,4.709442,0.416908,-1.428668,9.615434,9.748527,-5.082096,-5.161148,-7.235512,1.518857,-9.160845,8.324436,-5.155903,-4.708089,-6.650877,-2.160198,0.756377,-6.062777,-9.391469,1.086571,5.980878,0.443063,-0.229383,-6.645055,3.908081,1.514597,7.408367,7.111079,3.308976,1.970953,6.460367,4.369029,2.021840,4.079397,4.938856,5.503426,6.292492,-1.470663,7.009632,-2.201344,-6.361675,-9.145452,6.433911,8.438560,2.678175,-3.781038,-9.183588,1.614722,6.028025,5.718131,9.479262,3.877976,5.674065,-2.423451,-1.767295,2.814587,-6.500168,-3.566763,8.551421,2.173383,-8.882459,3.521649,6.778657,4.657539,-6.619232,1.099488,0.217707,-5.628765,-3.804500,2.315289,-7.263373,-5.443043,-9.316117,-2.093198,-9.130647,-7.262290,6.717481,-1.356203,-9.235847,4.902886,-9.678562,-3.092456,3.171911,7.928464,3.046905,4.342346,9.733120,5.153362,-6.133828,-2.917828,9.779575,-2.645485,-7.321357,1.167440,-8.119512,3.107675,-8.859515,-2.727366,2.282425,7.516149,2.997370,-8.084312,-5.540369,-7.742325,0.545265,-2.120517,-6.750928,7.875279,0.466159,6.313767,6.333585,-7.604629,8.489387,2.274926,-6.107213,4.396114,6.965987,7.405149,8.022612,1.144577,-8.579762,9.811917,-7.757988,7.923039,-3.677545,1.525660,-1.166423,6.846656,-4.515485,-6.538443,3.119255,-6.780752,3.248585,0.962896,-0.458638,6.925159,-1.333019,3.507584,3.424090,-8.794541,4.417025,2.268768,8.184768,2.286465,5.803516,8.540325,-0.190932,-8.549259,5.999095,-6.206284,-1.000398,-5.452608,4.283262,4.999739,-4.530077,-7.389937,5.551823,9.271835,-5.457708,-0.786267,-3.767427,-8.438657,-4.866349,-2.266534,-4.465328,2.336322,-1.876462,6.339170,4.690143,-4.667460,-7.013002,1.263654,-7.126336,5.908887,-0.260326,5.847392,9.432334,6.051559,-5.270565,7.864842,-8.411630,7.668937,-7.254787,-9.533523,0.106918,9.313506,1.072033,9.366316,-2.769127,-4.746271,-1.486944,0.480771,-1.491381,8.356390,3.841003,2.740362,3.246872,-5.754415,-1.473796,5.501321,-4.404384,1.751613,-3.864395,1.193253,3.226579,7.693055,9.042010,2.598645,5.723963,-7.133109,6.348799,-1.182315,-1.185965,-9.959090,-3.369355,-4.377267,7.643685,-0.119162,-5.458092,-4.066918,-4.917285,-5.713570,-3.961636,0.787822,-5.766685,-9.980143,2.921524,7.965069,-4.250764,-5.800475,1.668018,3.917054,7.269730,-2.294801,7.627296,6.466258,-4.784708,-2.332798,-8.009777,-2.149560,5.585447,-7.628996,-1.365471,1.170474,-5.040382,2.943783,-1.220220,-6.849561,-5.903969,-5.165797,1.088682,0.033793,1.437036,-9.178873,0.008713,-4.521456,-8.592897,-2.642936,-9.070091,5.551047,2.264560,3.813536,1.453608,0.924385,-8.950908,1.554277,-3.807905,-5.190124,-1.549765,9.819327,9.217102,1.065493,-1.225353,-1.421817,7.706481,4.271438,-0.654370,-2.372803,-6.429173,-0.993048,6.798913,-8.240675,-6.464915,7.013696,-4.412173,0.275919,3.980844,3.145485,-1.065761,-2.538400,5.241333,-9.306359,-9.124142,7.711237,7.270058,-9.522524,3.262587,-4.222825,8.785956,2.356700,-2.518252,2.807759,2.471127,3.678480,6.377071,0.208608,-7.435982,-4.088931,-9.314142,8.733473,0.994868,5.249460,4.129123,3.191019,7.821954,-8.610012,4.224875,6.330708,-1.308990,-0.276549,2.716116,-8.986321,2.421778,-4.769227,-0.607670,9.653138,7.920143,-4.528952,-2.378900,8.063457,-2.769643,2.669032,-4.359622,-9.414643,-8.251367,-7.649282,-8.033727,5.003044,1.269022,-8.509668,4.892137,-0.910645,-2.906082,2.645232,-1.077765,-6.269314,-2.217516,-5.461502,7.259768,3.842753,5.216483,6.931057,-5.424381,9.033292,-7.899544,1.534790,-9.831507,7.678016,7.911633,3.525532,0.712832,-5.400544,-8.697915,-3.884378,-5.642662,8.891155,1.732762,9.224790,9.172474,-7.081397,-9.376632,8.211699,8.529682,2.434136,-3.321329,-0.048672,2.587678,3.634003,1.966215,8.418146,-5.275329,8.687062,7.220256,6.531284,2.623818,-1.140157,-4.245525,-0.442904,-6.302023,-5.684959,9.889723,7.988415,7.371181,-7.847780,-9.304251,-7.755782,-2.864733,9.689865,3.045876,-5.369730,-3.123195,-1.197480,-0.665837,-0.521764,8.281060,2.370091,5.565847,3.413066,-5.617427,1.078122,3.788889,6.446611,9.525528,8.953132,4.213861,2.950065,-8.029287,-6.114246,0.164840,-4.471949,9.036078,5.265027,-2.018381,-9.858335,-7.450928,5.876501,6.277636,6.522495,9.890005,3.328135,-3.896012,-8.683909,2.053201,3.788344,2.045559,2.271930,-1.064931,6.537770,0.971520,6.068975,2.316177,7.010633,8.576159,7.711320,7.149011,5.951932,-4.935549,-1.033072,6.628447,-0.272081,9.463617,6.904039,-1.634914,-3.809700,-0.954696,0.307120,5.792243,3.433022,8.957439,1.118039,0.016430,-9.870430,8.916237,9.611075,-7.767834,6.509715,4.441630,5.298749,-2.800872,4.227933,8.161308,-4.416922,8.434098,1.118058,2.610378,1.849677,-8.033858,-3.184760,4.679523,-9.363817,1.606492,7.432546,-2.901496,-2.969891,1.790805,-2.583515,-2.627997,5.068153,-0.700808,-0.220203,0.251492,-5.519495,8.919966,7.794552,5.269818,-7.910727,-8.762696,3.495274,1.993476,2.967945,-9.052300,6.151952,-5.303000,-6.122461,-4.177705,-5.263171,3.293581,0.175806,6.161610,1.847918,-6.927835,8.099807,1.981254,1.687930,-3.692882,5.174062,-6.213639,7.641555,7.449690,3.357021,-8.989598,-5.494611,9.680447,-9.839443,-1.462162,4.397053,-2.765290,0.238690,0.644103,-9.056403,4.490746,-1.331323,-1.244828,4.961833,-2.151457,0.271034,-5.358607,-9.366417,5.639039,4.030007,-6.075283,-8.509198,9.449446,-2.027747,1.224015,5.079603,3.586702,-7.492639,9.816322,4.880245,9.895038,7.320891,-2.460487,3.706201,-1.302478,-3.695094,3.920758,0.483149,-8.493618,3.046654,-3.973281,9.272484,8.721550,-8.857784,2.678325,-8.157709,-0.526145,-4.043808,6.239856,7.031443,-8.435737,-1.915334,-3.221413,0.194401,2.470494,-9.759014,7.424254,1.744872,-2.360423,7.676240,-3.123244,-8.427541,7.738187,6.888976,-5.569549,0.980540,-5.579691,-3.911864,4.608756,-3.774607,-3.686111,0.736848,-8.522678,-1.412659,-2.469933,-7.499343,9.330907,5.530172,6.343512,9.225601,6.257359,9.742321,-7.163189,9.620670,6.570083,3.332099,-9.619882,3.420088,3.740009,6.358301,6.099193,-4.234584,-8.754194,-6.064748,3.875487,5.566547,-5.273521,-7.086592,-1.685437,-2.049895,3.624105,-9.632752,-5.383939,-1.765895,1.079017,0.446427,6.779998,-1.847643,-2.630037,-6.810012,-2.780590,-2.804038,-5.618181,-6.710636,-6.326288,-1.348101,-5.641217,-9.491381,-5.063451,-5.463393,-7.297483,-8.717291,-4.472336,-6.567270,7.704450,-5.411791,-1.812846,-4.590288,7.696758,-5.507499,-1.689506,-9.434463,8.129825,9.192171,3.377905,3.078027,-5.049362,-9.071469,-3.122258,7.875744,8.798136,-4.229743,-1.739140,-3.194524,2.569957,-1.084492,9.634847,-7.343593,0.577576,-3.420573,0.807507,-8.408840,3.330750,-5.721383,0.173463,-7.269516,5.730783,0.351257,5.113628,-1.020535,-1.960064,-4.298863,0.987990,-2.540944,1.104263,5.768250,-7.829368,-8.436642,-1.842294,-3.259772,-2.491715,-5.042695,7.794259,3.282682,4.487425,8.716732,-3.840302,8.656532,-5.775498,-7.543423,-0.453243,-6.464487,-9.008865,1.276282,-8.335135,-2.589313,-2.958073,-7.817497,-2.810143,-3.711865,3.550636,2.535598,-2.830194,8.279954,-0.497091,-1.387558,-8.876204,-5.784493,1.225478,9.866749,0.086991,-2.059518,1.600526,1.517315,-1.489949,4.182521,4.508680,-3.286532,-9.361788,-8.692193,1.464879,1.082750,5.752798,-3.962417,4.631719,-1.847522,-2.316600,-3.623934,-6.980167,7.653298,-0.333195,-6.308839,-7.120061,3.593481,5.329493,7.486684,-5.116178,-9.868351,-1.450438,-8.887230,-4.706686,-2.613115,3.200781,-5.637696,-3.947410,-0.261830,2.001835,-4.124145,4.758177,-1.921247,6.380630,-5.796822,-7.597833,-3.206405,4.194949,5.512574,7.538137,-7.753473,-4.598947,-4.430645,8.298665,0.037206,-6.209988,-8.950172,8.918419,-5.932021,-0.388242,-3.257443,4.588549,-3.462384,1.648348,-1.024417,5.354631,7.876112,-6.929015,7.100525,3.168986,-5.062048,-5.709441,3.246440,9.869057,5.356248,-2.114263,-8.990776,-4.992473,0.336420,-6.107876,-8.017423,-7.194908,-5.068413,-0.244899,-4.245330,-9.993155,9.410440,5.178998,3.618869,-7.600320,0.396650,-1.603229,-0.405251,-2.306611,9.641760,5.359214,-0.532605,2.564927,-4.398391,-8.601319,6.344870,6.559307,-8.363346,-9.088245,9.482161,-5.641015,9.354196,0.958190,2.205127,3.764136,-2.676885,-8.439467,6.835716,6.486078,3.846899,-1.109187,8.276248,5.752407,4.716175,2.690340,-8.495576,1.198238,-7.325955,4.109204,-4.495593,-9.422171,-1.540631,0.334774,9.344555,5.423309,8.424881,8.319723,-5.923937,-0.057257,-0.139977,-0.656545,6.851972,7.371708,-5.248847,5.732994,0.640165,-6.647164,-0.554866,5.124330,-6.976767,9.728275,4.761585,-2.089294,4.750169,0.326925,-8.984277,0.663423,1.707292,-7.144998,5.264635,-0.071118,4.142020,-3.798635,-1.626431,1.560043,2.565111,-3.948801,-0.451458,-3.271159,2.195252,4.040266,9.182026,4.064153,9.711937,9.527390,2.073626,-4.383501,-3.539604,9.904504,-5.104191,3.336798,2.904436,-9.116942,4.063400,9.201686,-6.205810,-9.759778,6.690041,-4.609952,2.947898,-0.078311,5.043121,-5.604778,1.190651,5.335623,-5.449835,7.111976,-2.193239,5.382034,-2.567087,8.308536,-9.451518,6.153790,6.797767,-0.475461,0.956372,-9.197193,9.591508,-2.851059,-3.312202,3.026756,-1.312330,-5.931736,-8.195602,-7.284592,-7.206216,-2.715019,-7.163842,9.510532,3.517302,-6.258628,-2.076208,-5.313559,0.725160,-6.769330,-4.446046,4.704151,4.778060,4.637003,4.282262,-9.294315,1.842362,-6.361288,-4.761698,-6.823569,-5.701638,-0.680522,8.049416,-0.624451,9.606137,-8.314318,-6.203437,0.555673,3.640756,-2.867926,-1.421210,-4.263722,7.688644,6.170287,-3.531769,6.077181,8.956868,2.104924,-1.141624,8.065715,3.006749,7.892184,5.101200,6.917907,-0.982903,-7.632589,-9.314473,-0.847188,8.112984,-1.609429,7.316751,-4.749761,5.198650,2.883835,-5.121958,-5.475016,-2.074896,2.880377,-9.749890,-1.154212,-3.384108,7.430815,-3.630081,-3.772819,-4.088515,8.928147,6.748264,-0.029134,-0.272963,-1.650702,-3.830614,-0.068401,3.549924,8.209216,-7.468804,-0.846918,-6.189943,3.548881,9.268629,-7.650965,-6.675440,-1.883574,-1.735765,7.867280,-1.689803,4.206352,-7.183404,-7.128120,8.422017,1.374889,1.816684,5.726659,6.303527,-6.329296,-7.020124,-4.374715,3.589066,-4.455065,6.359791,-7.578425,-6.289705,2.591209,5.809812,-3.799072,5.885856,-7.798855,5.860600,-4.122733,-9.836995,5.187447,1.914968,-3.790719,-5.181443,-5.845337,-0.545798,-2.444812,-1.212382,4.571074,0.248989,9.283338,4.181196,8.116500,7.593725,8.413901,1.306172,-6.830948,7.109130,6.615566,-6.230594,4.695791,-7.874136,2.752111,1.359224,-5.902465,-5.713168,1.917305,0.869684,-0.880361,-7.092063,-9.977133,-6.471625,8.305651,3.068743,-1.465590,-9.125538,-1.503838,4.201757,-9.050582,-7.882771,6.244936,-6.736374,-9.337828,2.205015,-8.109936,2.057630,6.858820,7.251859,4.604222,5.145058,-8.582388,4.728306,-4.473801,-3.646899,-8.386795,8.191949,8.653551,-7.011974,5.260984,-2.531894,-3.545583,9.141776,-0.221039,-3.026153,9.894042,0.395231,5.011566,8.354314,0.514037,-7.587611,-5.638242,7.417090,8.764886,-4.483667,3.734987,-3.092370,-0.688300,-6.802096,7.720025], dtype = "float32")#candidate|4295|(1300,)|const|float32
call_4294 = func_1152_call(relay.reshape(const_4295.astype('float32'), [13, 10, 10]), relay.reshape(const_4295.astype('float32'), [13, 10, 10]), )
call_4296 = func_1152_call(relay.reshape(const_4295.astype('float32'), [13, 10, 10]), relay.reshape(const_4295.astype('float32'), [13, 10, 10]), )
func_393_call = mod.get_global_var('func_393')
func_396_call = mutated_mod.get_global_var('func_396')
const_4312 = relay.const([-2.980396,8.845839,1.744214,-9.123366,-7.533025,-6.675000,1.540219,-3.128787,8.529705,-3.232040,-8.737968,-0.474731,3.070087,8.721411,0.382603,-9.769391,-6.916335,7.289792,-5.059019,0.637820,2.548886,2.594806,9.757383,6.450474,-9.077788,-1.861688,-6.570439,-2.419658,3.282487,-3.215986,1.593218,-8.407286,7.875303,5.660890,4.762930,-8.131392,-8.885851,9.192783,8.299324,-8.856030,-4.957167,-0.639105,-4.734095,-0.953039,6.523417,-8.476902,6.723246,-3.651208,0.249996,9.562120,-2.969350,2.457445,2.326593,-4.663262,1.825803,1.733339,5.082152,-5.986176,-0.497987,1.433010,-0.874501,7.404339,-7.273650,-1.281837,6.154779,-8.859284,2.776110,1.681440,5.073548,8.371411,-8.720829,-9.550032,3.040302,1.696691,-4.601658,2.407987,4.266557,-4.208322,-8.851008,5.144509,-5.524966,2.297437,4.651813,9.491603,-7.375998,-2.325354,1.186206,-8.686552,5.794767,-6.263022,-0.707101,-3.175083,-6.964729,9.641900,8.729336,5.445046,-4.387192,9.812046,6.512384,-3.498557,-2.631766,-2.346473,-4.573705,-8.808842,4.605540,5.602369,-2.135612,7.616066,-0.756636,8.290478,2.434811,-6.024925,1.455317,9.958617,-0.922415,-7.571904,-7.570528,-8.803787,6.189726,9.977332,6.849453,-6.750460,-7.892610,9.575756,-6.112903,1.921813,5.919719,4.966234,4.847615,1.380603,2.172098,-7.523256,-9.859232,-3.387141,3.397802,-0.996827,-1.532421,-5.616515,-7.111912,0.338251,-7.892302,-6.187063,-1.466960,-6.028898,6.718644,7.562640,5.563046,-6.597780,-7.606100,0.629700,-9.589934,3.549661,-6.993246,-8.876154,3.525971,7.891328,-5.938422,2.771073,-8.983480,-5.575535,9.534771,-6.312227,-9.051644,-4.091779,7.113028,-7.617530,-4.602086,-2.033207,-4.388015,7.304250,-9.613263,3.431423,4.544407,-3.259880,7.983704,8.142219,-2.232603,5.156059,-1.660762,-6.318222,-5.501083,-0.650741,-9.284458,6.811961,9.421671,-7.362195,-1.715529,-2.126230,-8.385765,3.367269,0.930713,-2.037565,-1.960065,-9.974602,2.319966,-5.005083,-8.215585,-2.268932,7.127565,8.601646,1.087833,-4.095176,2.018869,5.911074,6.765885,5.510131,0.130348,0.137251,-5.363713,-2.331569,-0.784066,5.964073,7.057260,8.052134,6.052147,4.494289,-4.987484,-9.360287,-4.467102,6.972161,-6.635592,1.926206,-6.368829,7.672937,-5.109570,-4.703353,-9.008672,0.404878,-9.885720,-3.652591,9.798378,-6.382792,-1.339139,-4.516259,-0.345960,-7.868250,-2.630769,-2.700470,-3.609900,0.599724,9.901228,5.785212,2.328260,-6.555843,7.153154,-2.486258,-8.882933,-3.940829,3.433622,-2.301299,-5.211438,4.126399,-4.315227,6.394280,8.562472,3.466410,5.584672,5.619413,-9.118892,-7.318142,-6.737322,-4.784387,4.894910,4.352230,1.903533,-6.114089,2.534871,0.243413,1.082231,-9.299612,3.630756,6.063329,8.691013,-7.903460,-9.133870,9.978604,0.860050,-9.976034,0.838799,5.880048,5.710022,-0.973920,9.792719,-6.371267,1.429009,-0.299973,-1.171515,5.538189,-6.248344,3.589262,-7.029065,4.997945,2.648578,-8.820474,-4.896505,3.111912,4.197916,-7.060698,4.449840,5.629764,6.282381,-9.030751,1.665726,7.179516,4.083021,7.748949,-7.591646,5.721506,-2.186137,-0.401046,8.724519,-1.999278,9.833506,-4.887651,3.841414,9.673944,6.400024,-7.563604,0.560737,-2.132846,5.434814,-6.706753,-2.905983,4.521545,8.851406,2.918158,4.977590,6.728797,-3.777697,-5.308783,3.422453,1.588072,0.374918,-2.350105,5.577563,6.355235,-3.514444,-9.999254,6.711199,4.645737,6.045805,6.264509,-8.476988,-2.788384,-0.923218,-2.943050,-0.297200,-9.906010,6.068582,7.526119,7.787940,4.350133,-8.983046,3.190096,0.831041,9.362971,2.220305,-8.895812,9.206196,4.732004,6.879365,-3.956580,6.740585,5.293522,2.895352,0.989697,2.940623,-0.113236,9.910452,5.891358,-3.877356,9.426116,6.605310,1.377031,-6.254933,9.801711,-1.072851,-4.535915,-2.562832,-3.628251,-6.296570,9.290334,9.744935,2.766742,2.263189,4.950523,5.003413,3.766455,-1.133120,-2.372763,4.851287,-2.396588,1.922210,0.194010,-8.124427,2.155942,-2.553483,-7.115244,-7.296700,-6.554842,-2.318322,7.883398,-3.588927,4.631830,9.703043,-7.413469,7.913651,-3.914773,0.588282,-0.967923,5.876220,-0.669527,-7.637130,3.947369,-9.152367,-2.945539,-4.736739,1.546093,8.475205,8.275490,-4.105160,6.387816,7.828239,-6.449822,-3.040774,-8.167521,-1.218457,5.086210,-5.405806,8.171002,-8.545540,6.724758,6.278219,9.767947,2.584871,0.682401,-6.503038,7.308891,-6.889447,-1.466919,8.230553,-6.490505,6.897200,-7.399236,2.778024,2.028796,-9.795715,-6.703493,3.353508,-4.785371,-6.208719,-2.357529,-9.472937,-5.520038,3.565839,1.058011,-1.508240,-8.410454,6.129849,7.981304,-7.219900,-7.435693,1.675175,-8.987149,3.060661,-3.827601,-9.281574,-3.967187,-4.906152,0.529121,-4.333657,-1.454291,-8.065317,-3.062182,-6.633367,-2.475746,-9.938173,7.473957,0.279473,-7.098916], dtype = "float32")#candidate|4312|(480,)|const|float32
call_4311 = relay.TupleGetItem(func_393_call(relay.reshape(const_4312.astype('float32'), [16, 10, 3])), 0)
call_4313 = relay.TupleGetItem(func_396_call(relay.reshape(const_4312.astype('float32'), [16, 10, 3])), 0)
func_4128_call = mod.get_global_var('func_4128')
func_4131_call = mutated_mod.get_global_var('func_4131')
var_4316 = relay.var("var_4316", dtype = "uint32", shape = (33, 4))#candidate|4316|(33, 4)|var|uint32
call_4315 = relay.TupleGetItem(func_4128_call(relay.reshape(const_4295.astype('float32'), [1300,]), relay.reshape(var_4316.astype('uint32'), [132,]), ), 1)
call_4317 = relay.TupleGetItem(func_4131_call(relay.reshape(const_4295.astype('float32'), [1300,]), relay.reshape(var_4316.astype('uint32'), [132,]), ), 1)
output = relay.Tuple([uop_4263,call_4270,call_4294,const_4295,call_4311,const_4312,call_4315,var_4316,])
output2 = relay.Tuple([uop_4265,call_4271,call_4296,const_4295,call_4313,const_4312,call_4317,var_4316,])
func_4335 = relay.Function([var_4316,], output)
mod['func_4335'] = func_4335
mod = relay.transform.InferType()(mod)
var_4336 = relay.var("var_4336", dtype = "uint32", shape = (33, 4))#candidate|4336|(33, 4)|var|uint32
output = func_4335(var_4336)
func_4337 = relay.Function([var_4336], output)
mutated_mod['func_4337'] = func_4337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4345 = relay.var("var_4345", dtype = "float32", shape = (9, 5, 6))#candidate|4345|(9, 5, 6)|var|float32
uop_4346 = relay.sigmoid(var_4345.astype('float32')) # shape=(9, 5, 6)
var_4355 = relay.var("var_4355", dtype = "float32", shape = (9, 5, 6))#candidate|4355|(9, 5, 6)|var|float32
bop_4356 = relay.floor_mod(uop_4346.astype('float64'), relay.reshape(var_4355.astype('float64'), relay.shape_of(uop_4346))) # shape=(9, 5, 6)
output = bop_4356
output2 = bop_4356
func_4359 = relay.Function([var_4345,var_4355,], output)
mod['func_4359'] = func_4359
mod = relay.transform.InferType()(mod)
mutated_mod['func_4359'] = func_4359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4359_call = mutated_mod.get_global_var('func_4359')
var_4361 = relay.var("var_4361", dtype = "float32", shape = (9, 5, 6))#candidate|4361|(9, 5, 6)|var|float32
var_4362 = relay.var("var_4362", dtype = "float32", shape = (9, 5, 6))#candidate|4362|(9, 5, 6)|var|float32
call_4360 = func_4359_call(var_4361,var_4362,)
output = call_4360
func_4363 = relay.Function([var_4361,var_4362,], output)
mutated_mod['func_4363'] = func_4363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mod.get_global_var('func_2763')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_4455 = relay.TupleGetItem(func_2763_call(), 0)
call_4456 = relay.TupleGetItem(func_2765_call(), 0)
func_2037_call = mod.get_global_var('func_2037')
func_2040_call = mutated_mod.get_global_var('func_2040')
const_4460 = relay.const([1.778418,-7.116227,-3.269976,6.712384,-7.284692,-4.579618,2.653315,-8.195453,-2.800912,3.999149,-4.780091,7.883955,-0.880954,2.580242,6.659274,9.586939,-9.711483,-2.073104,-3.190404,-7.639430,-4.982547,3.531249,-3.829384,-0.285591,-8.408655,-3.021628,4.686056,7.957032,-3.682577,9.184747,7.574406,-1.684899,4.437903,-3.138176,-6.300924,-3.152210,0.759415,4.643733,4.593223,-4.683077,2.949630,-4.943973,-7.721377,4.970154,-6.062899,-7.487778,1.707821,1.686752,5.936190,-5.767617,-0.354265,-2.443515,-3.334084,-2.269932,-6.257218,6.195365,5.911472,-4.456572,1.863094,-8.123657,9.615587,8.834635,-5.421542,6.427876,-3.359956,9.450268,-2.339383,-0.640332,9.733327,-5.762284,6.538548,-7.136552,-8.152282,-4.207733,-8.745903,7.366528,5.524844,-0.790734,-0.101738,5.979417,4.189232,2.566024,-2.853054,-5.461192,-3.495260,0.015584,-7.824395,-8.503037,2.428984,-0.124826,-8.642666,5.340851,-5.789501,3.892664,1.050881,4.821179,2.616852,-8.607891,-7.283820,-4.593868,9.362363,-4.674682,1.848758,-7.725375,3.539021,-8.174571,1.242408,0.458840,8.637136,-3.297616,6.644004,3.528925,-8.827909,-4.285739,-8.063310,-0.133589,3.052536,6.537892,3.057551,2.213758,-7.433396,-4.006011,7.679317,4.685651,-9.419456,1.161633,0.210491,4.086285,-8.607451,-8.216389,-6.664022,-3.765023,8.125469,-8.746525,-4.435507,1.121668,4.195024,-4.905221,1.451272,0.321400,7.416206,0.221348,9.219609,-4.546081,-1.759735,-5.576007,3.537216,-4.525333,-6.888222,-7.420874,-2.492495,0.919906,4.874886,-9.909558,8.972036,5.757091,-7.440807,7.490176,3.893124,6.357914,-4.128151,-8.336801,2.732288,-2.882567,9.419944,-6.474490,-5.282333,3.522778,6.277326,-1.382718,6.599785,4.668051,-6.432896,7.353821,-5.333902,3.194553,-2.731454,0.474329,6.286400,7.332674,-4.336910,-6.320841,8.786174,-3.877927,-3.866040,3.379534,-2.465448,2.586400,6.176689,-2.572586,-1.592775,-8.256306,3.283343,-5.071017,1.167799,7.030144,9.042388,-9.059660,0.006056,9.770556,3.688660,0.320681,0.892767,-7.818931,3.422024,-4.249349,-2.555762,-4.137987,-1.784621,-0.838083,-6.536845,8.167417,-5.819702,-6.003911,9.856956,1.839354,-1.868175,-9.954232,2.456875,-6.753397,-8.415708,-7.780088,5.508654,-9.300090,3.312075,4.000414,0.713899,1.683974,-3.548281,4.717613,3.075769,-8.578895,-1.643698,7.754410,4.781213,-2.604088,6.667732,4.333865,-5.206150,-4.557117,-4.128403,6.582690,7.064138,7.812398,4.569493,6.785257,4.762325,-4.085601,-0.368919,-2.607704,-1.686849,2.246969,7.788655,-0.834066,1.827665,-5.951937,5.413081,8.291845,-4.272630,-3.125440,2.366889,0.549204,-1.043097,-2.088024,6.616863,-3.961356,-3.276466,8.562083,-3.863412,8.874799,8.714421,-6.598323,7.411679,9.316069,-1.373420,0.583043,6.186401,0.981169,9.588572,-1.725668,-0.528280,-0.438745,3.958541,-9.811782,2.128434,7.245827,2.728072,5.773020,5.546012,2.187371,0.348098,9.883548,5.019912,-6.249089,6.523996,9.096196,6.372072,-0.161150,-3.886535,0.012942,-4.697695,-9.739331,-4.252049,-8.991050,-2.415309,1.642568,0.502514,-6.309888,8.236140,6.587683,6.368812,-0.277213,-6.760223,2.109389,-1.401104,-8.030084,9.931243,-2.959091,4.735883,9.911851,-4.807495,2.179885,-6.509304,-4.664469,-3.803958,-1.642243,6.267159,-8.181053,0.063889,-3.754791,-6.162702,-4.601902,5.568542,5.153394,6.406653,-4.472231,-8.526853,7.193626,1.117320,-4.530940,5.759180,2.512949,-8.020476,-1.296106,-6.871373,4.465218,-8.807929,-8.858542,-1.922535,-5.006543,5.622758,-1.685435,-2.665402,-0.165343,5.082880,5.680129,5.957928,8.559821,-4.628026,8.965301,-1.108968,-5.267136,-7.431335,-7.685982,-2.180593,-8.148603,7.554303,3.271672,4.335068,6.541733,9.640338,5.569874,-6.188132,-2.656394,8.759285,3.776952,-9.905671,-7.409730,-6.290184,7.938086,0.720212,-6.197227,-3.113021,-4.890974,4.691896,6.336845,-1.776337,9.965017,2.735730,7.259193,6.345185,6.735081,-8.166014,-2.501958,-0.869364,-0.215861,-6.697712,1.089753,-2.063880,-1.004623,0.552684,-4.086209,-7.698280,-5.637581,8.566803,-3.550180,-4.417422,-9.210792,3.616114,-7.132328,2.955749,2.765408,4.624675,-0.414599,-6.571240,-0.427453,-2.968799,4.116748,-2.363614,4.750738,-3.615562,4.966512,5.188402,9.113260,-5.450821,-3.544049,-2.814446,1.293856,-0.992043,-2.837125,-8.564439,5.441386,4.840671,-1.180302,-5.603408,-9.153445,2.660416,-5.821053,6.182383,-8.679231,4.638298,2.115706,-0.917211,0.950002,4.645934,-2.534579,-9.482527,-9.232277,-5.443260,-6.536487,-9.066305,1.718022,-7.859219,-8.335908,-1.078307,6.938372,-7.866733,0.430877,-8.758340,2.145552,-3.577937,6.092974,3.550653,7.737621,-5.040049,8.584839,-9.828680,4.071553,-9.456085,-5.523140,-6.908246,-5.631527,9.134437,8.367951,-9.572690,8.970555,-0.107813,-9.527656,-3.099561,-1.727872,5.549106,-6.311916,-8.354623,-7.244007,7.061982,7.306786,-4.412083,-7.585695,-0.379182,0.124982,4.422867,0.278985,-3.620604,8.005189,7.378823,9.124850,5.557175,-8.112575,2.897645,-0.180049,-8.566285,-4.013851,0.219997,-4.279721,5.049922,8.830476,-4.684406,-8.250167,-6.803762,8.375213,1.192706,-1.340499,-7.860213,7.575226,4.802770,4.200271,8.909278,-9.629956,-6.092537,-6.590195,6.736030,-6.752034,3.789831,-0.541571,9.746265,6.395977,-5.382597,6.154465,0.156632,9.516071,1.724473,-3.316511,-2.651164,2.000785,9.239878,-1.351904,8.936225,-2.775936,-0.474293,-6.368042,-2.253076,-6.344644,5.116113,-6.475233,-6.686654,2.051049,-7.495624,3.825361,8.269770,5.735460,-2.519779,5.550978,3.993498,-6.138832,-3.588663,5.833856,1.048096,9.445750,3.335364,6.340456,5.892711,3.751050,-3.314064,2.104577,-0.749015,-6.660145,-1.110663,-1.478432,3.905346,7.479532,-3.595938,-6.714882,3.111068,-0.246375,8.407169,-2.434754,6.717982,-8.868360,-1.061638,4.255281,1.792043,-0.602871,1.670193,9.018332,7.484547,-4.311901,1.436626,3.956073,-6.268657,9.849782,3.193841,4.631237,-3.632937,-6.309492,1.792667,8.004389,9.384894,-2.338555,-3.181491,8.192092,4.900288,3.624951,7.690667,2.265275,1.108633,3.339678,-5.848733,3.742616,4.249623,-4.781669,4.055291,6.548720,7.418355,0.219718,1.585714,1.115500,-0.131683,4.175008,-4.923580,4.426389,8.857831,-7.251291,2.349336,-0.809080,-2.515232,9.126900,-6.631027,-9.833835,9.609325,-5.493710,3.622943,5.198900,-4.423899,1.966270,4.170361,-1.700135,4.641455,-3.227530,-8.088910,9.493291,5.956600,-3.144462,3.079371,4.231001,-2.202530,3.229371,-9.373618,9.205871,0.385790,5.804854,-4.251324,-9.431780,-6.131648,-9.743478,0.803702,1.427201,9.991910,5.372328,6.854455,7.699478,-5.309409,7.480731,4.309407,6.273766,4.309401,0.110830,8.782844,3.387399,-0.169344,-1.112145,-4.524064,7.471535,-0.712787,-3.521163,6.429362,8.774920,9.231816,-8.229519,-0.521288,1.028536,-8.244511,5.509627,-6.576066,-5.284543,-8.034686,9.510218,-6.327688,-5.627450,7.109303,-3.987717,-5.662222,-1.105389,-7.895207,-6.114502,-7.060823,-6.545958,-9.637424,-2.034548,6.032217,-8.201024,-3.475814,-6.554067,-1.050644,3.226899,7.081244,-6.857145,2.733804,8.326543,-0.457561,-7.397559,-0.832577,8.922207,-2.372788,9.189493,-9.835719], dtype = "float64")#candidate|4460|(715,)|const|float64
var_4461 = relay.var("var_4461", dtype = "int32", shape = (234,))#candidate|4461|(234,)|var|int32
call_4459 = relay.TupleGetItem(func_2037_call(relay.reshape(const_4460.astype('float64'), [5, 11, 13]), relay.reshape(var_4461.astype('int32'), [234,]), ), 3)
call_4462 = relay.TupleGetItem(func_2040_call(relay.reshape(const_4460.astype('float64'), [5, 11, 13]), relay.reshape(var_4461.astype('int32'), [234,]), ), 3)
output = relay.Tuple([call_4455,call_4459,const_4460,var_4461,])
output2 = relay.Tuple([call_4456,call_4462,const_4460,var_4461,])
func_4465 = relay.Function([var_4461,], output)
mod['func_4465'] = func_4465
mod = relay.transform.InferType()(mod)
var_4466 = relay.var("var_4466", dtype = "int32", shape = (234,))#candidate|4466|(234,)|var|int32
output = func_4465(var_4466)
func_4467 = relay.Function([var_4466], output)
mutated_mod['func_4467'] = func_4467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3161_call = mod.get_global_var('func_3161')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_4491 = func_3161_call()
call_4492 = func_3161_call()
output = call_4491
output2 = call_4492
func_4495 = relay.Function([], output)
mod['func_4495'] = func_4495
mod = relay.transform.InferType()(mod)
mutated_mod['func_4495'] = func_4495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4495_call = mutated_mod.get_global_var('func_4495')
call_4496 = func_4495_call()
output = call_4496
func_4497 = relay.Function([], output)
mutated_mod['func_4497'] = func_4497
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4511 = relay.const([[[7,-10,-2,10,-4],[3,-10,7,7,-6],[-9,7,-1,2,-3],[-6,10,-5,-4,-10],[10,6,-8,-8,2],[1,2,-1,4,5],[-8,-8,-8,-1,-9],[-5,-6,1,-3,8]],[[-4,-9,8,-1,5],[8,8,-2,-2,-1],[7,2,-6,-7,3],[-8,-4,-3,-9,5],[-2,-5,-10,9,3],[-4,5,-4,-2,-3],[8,-4,-8,-5,3],[1,2,8,-7,7]],[[-4,-10,9,-3,7],[-6,7,9,8,4],[-5,-9,-3,10,-1],[-9,8,-7,3,7],[-3,-7,6,-6,10],[-6,-5,2,1,7],[1,-8,-3,-7,4],[-10,-1,-7,-3,-1]],[[-7,7,-1,1,5],[3,-1,-6,-5,-5],[-8,-6,-10,-6,-10],[-7,2,-8,-7,5],[4,-7,-7,3,3],[-1,-1,-10,1,-7],[10,5,-7,7,1],[-5,7,2,-2,-8]],[[-3,8,5,8,-3],[-7,6,-7,7,9],[3,3,-4,6,9],[3,-2,-7,-10,-4],[-7,-7,5,8,-7],[9,10,2,6,2],[-1,-9,-7,-3,-9],[-1,8,-1,-2,-6]],[[-5,3,-5,-9,-4],[-8,5,9,2,-10],[-8,9,-7,-10,9],[-1,9,2,-8,8],[-2,-6,-2,1,-6],[-8,10,-2,-8,-9],[8,-5,-2,4,-6],[2,9,-6,-3,-6]],[[6,5,3,-4,-2],[2,-2,1,-2,4],[7,7,-5,6,10],[9,10,-3,-3,-6],[9,-7,2,5,-4],[3,6,-7,5,-9],[9,-2,-5,-2,3],[3,5,-2,-9,1]],[[7,-5,6,-6,-9],[-7,-6,-9,-5,7],[-10,-9,-4,10,-8],[-7,6,2,7,-4],[-2,9,9,8,1],[-9,8,4,9,-5],[6,5,-7,-6,2],[3,9,3,9,2]],[[-7,-1,-1,6,10],[8,-7,-1,-10,1],[5,10,-7,3,-4],[-6,-8,-7,1,-10],[9,10,-2,10,-6],[-6,6,-6,-8,-7],[-6,7,-1,4,10],[-4,5,-4,-2,1]],[[-5,10,4,2,-5],[-6,5,6,8,7],[-5,6,4,-8,-4],[6,-7,-1,-2,-5],[-6,-9,-6,5,2],[-3,-3,-8,-1,-3],[7,-6,-8,7,4],[9,5,-10,-1,-7]],[[9,2,3,10,8],[10,-5,-10,-5,-2],[-7,10,-7,2,-9],[2,1,1,6,7],[-7,7,-3,-4,2],[-9,5,2,2,-1],[-3,9,7,-5,3],[6,8,9,-10,2]]], dtype = "uint16")#candidate|4511|(11, 8, 5)|const|uint16
var_4512 = relay.var("var_4512", dtype = "uint16", shape = (11, 8, 5))#candidate|4512|(11, 8, 5)|var|uint16
bop_4513 = relay.greater(const_4511.astype('bool'), relay.reshape(var_4512.astype('bool'), relay.shape_of(const_4511))) # shape=(11, 8, 5)
func_4033_call = mod.get_global_var('func_4033')
func_4036_call = mutated_mod.get_global_var('func_4036')
var_4523 = relay.var("var_4523", dtype = "float32", shape = (1300,))#candidate|4523|(1300,)|var|float32
call_4522 = relay.TupleGetItem(func_4033_call(relay.reshape(var_4523.astype('float32'), [1300,])), 0)
call_4524 = relay.TupleGetItem(func_4036_call(relay.reshape(var_4523.astype('float32'), [1300,])), 0)
func_1152_call = mod.get_global_var('func_1152')
func_1156_call = mutated_mod.get_global_var('func_1156')
call_4529 = func_1152_call(relay.reshape(var_4523.astype('float32'), [13, 10, 10]), relay.reshape(var_4523.astype('float32'), [13, 10, 10]), )
call_4530 = func_1152_call(relay.reshape(var_4523.astype('float32'), [13, 10, 10]), relay.reshape(var_4523.astype('float32'), [13, 10, 10]), )
bop_4533 = relay.right_shift(call_4529.astype('int16'), relay.reshape(var_4523.astype('int16'), relay.shape_of(call_4529))) # shape=(13, 10, 10)
bop_4536 = relay.right_shift(call_4530.astype('int16'), relay.reshape(var_4523.astype('int16'), relay.shape_of(call_4530))) # shape=(13, 10, 10)
output = relay.Tuple([bop_4513,call_4522,bop_4533,])
output2 = relay.Tuple([bop_4513,call_4524,bop_4536,])
func_4537 = relay.Function([var_4512,var_4523,], output)
mod['func_4537'] = func_4537
mod = relay.transform.InferType()(mod)
mutated_mod['func_4537'] = func_4537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4537_call = mutated_mod.get_global_var('func_4537')
var_4539 = relay.var("var_4539", dtype = "uint16", shape = (11, 8, 5))#candidate|4539|(11, 8, 5)|var|uint16
var_4540 = relay.var("var_4540", dtype = "float32", shape = (1300,))#candidate|4540|(1300,)|var|float32
call_4538 = func_4537_call(var_4539,var_4540,)
output = call_4538
func_4541 = relay.Function([var_4539,var_4540,], output)
mutated_mod['func_4541'] = func_4541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mod.get_global_var('func_3818')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_4602 = relay.TupleGetItem(func_3818_call(), 0)
call_4603 = relay.TupleGetItem(func_3820_call(), 0)
output = relay.Tuple([call_4602,])
output2 = relay.Tuple([call_4603,])
func_4615 = relay.Function([], output)
mod['func_4615'] = func_4615
mod = relay.transform.InferType()(mod)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4615_call = mutated_mod.get_global_var('func_4615')
call_4616 = func_4615_call()
output = call_4616
func_4617 = relay.Function([], output)
mutated_mod['func_4617'] = func_4617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3649_call = mod.get_global_var('func_3649')
func_3650_call = mutated_mod.get_global_var('func_3650')
call_4620 = func_3649_call()
call_4621 = func_3649_call()
output = call_4620
output2 = call_4621
func_4625 = relay.Function([], output)
mod['func_4625'] = func_4625
mod = relay.transform.InferType()(mod)
output = func_4625()
func_4626 = relay.Function([], output)
mutated_mod['func_4626'] = func_4626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4495_call = mod.get_global_var('func_4495')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_4636 = func_4495_call()
call_4637 = func_4495_call()
output = call_4636
output2 = call_4637
func_4656 = relay.Function([], output)
mod['func_4656'] = func_4656
mod = relay.transform.InferType()(mod)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mutated_mod.get_global_var('func_4656')
call_4657 = func_4656_call()
output = call_4657
func_4658 = relay.Function([], output)
mutated_mod['func_4658'] = func_4658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2691_call = mod.get_global_var('func_2691')
func_2693_call = mutated_mod.get_global_var('func_2693')
call_4685 = func_2691_call()
call_4686 = func_2691_call()
func_284_call = mod.get_global_var('func_284')
func_288_call = mutated_mod.get_global_var('func_288')
var_4694 = relay.var("var_4694", dtype = "int64", shape = (192,))#candidate|4694|(192,)|var|int64
call_4693 = relay.TupleGetItem(func_284_call(relay.reshape(var_4694.astype('int64'), [4, 12, 4]), relay.reshape(var_4694.astype('int64'), [4, 12, 4]), ), 5)
call_4695 = relay.TupleGetItem(func_288_call(relay.reshape(var_4694.astype('int64'), [4, 12, 4]), relay.reshape(var_4694.astype('int64'), [4, 12, 4]), ), 5)
output = relay.Tuple([call_4685,call_4693,var_4694,])
output2 = relay.Tuple([call_4686,call_4695,var_4694,])
func_4697 = relay.Function([var_4694,], output)
mod['func_4697'] = func_4697
mod = relay.transform.InferType()(mod)
mutated_mod['func_4697'] = func_4697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4698 = relay.var("var_4698", dtype = "int64", shape = (192,))#candidate|4698|(192,)|var|int64
func_4697_call = mutated_mod.get_global_var('func_4697')
call_4699 = func_4697_call(var_4698)
output = call_4699
func_4700 = relay.Function([var_4698], output)
mutated_mod['func_4700'] = func_4700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mod.get_global_var('func_3425')
func_3427_call = mutated_mod.get_global_var('func_3427')
call_4739 = func_3425_call()
call_4740 = func_3425_call()
uop_4766 = relay.atanh(call_4739.astype('float64')) # shape=(16, 2, 5)
uop_4768 = relay.atanh(call_4740.astype('float64')) # shape=(16, 2, 5)
output = relay.Tuple([uop_4766,])
output2 = relay.Tuple([uop_4768,])
func_4771 = relay.Function([], output)
mod['func_4771'] = func_4771
mod = relay.transform.InferType()(mod)
mutated_mod['func_4771'] = func_4771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4771_call = mutated_mod.get_global_var('func_4771')
call_4772 = func_4771_call()
output = call_4772
func_4773 = relay.Function([], output)
mutated_mod['func_4773'] = func_4773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mod.get_global_var('func_2763')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_4793 = relay.TupleGetItem(func_2763_call(), 0)
call_4794 = relay.TupleGetItem(func_2765_call(), 0)
output = relay.Tuple([call_4793,])
output2 = relay.Tuple([call_4794,])
func_4809 = relay.Function([], output)
mod['func_4809'] = func_4809
mod = relay.transform.InferType()(mod)
output = func_4809()
func_4810 = relay.Function([], output)
mutated_mod['func_4810'] = func_4810
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4855 = relay.var("var_4855", dtype = "float64", shape = ())#candidate|4855|()|var|float64
var_4856 = relay.var("var_4856", dtype = "float64", shape = (3, 1, 16))#candidate|4856|(3, 1, 16)|var|float64
bop_4857 = relay.less_equal(var_4855.astype('bool'), var_4856.astype('bool')) # shape=(3, 1, 16)
func_2794_call = mod.get_global_var('func_2794')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_4870 = func_2794_call()
call_4871 = func_2794_call()
output = relay.Tuple([bop_4857,call_4870,])
output2 = relay.Tuple([bop_4857,call_4871,])
func_4873 = relay.Function([var_4855,var_4856,], output)
mod['func_4873'] = func_4873
mod = relay.transform.InferType()(mod)
mutated_mod['func_4873'] = func_4873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4873_call = mutated_mod.get_global_var('func_4873')
var_4875 = relay.var("var_4875", dtype = "float64", shape = ())#candidate|4875|()|var|float64
var_4876 = relay.var("var_4876", dtype = "float64", shape = (3, 1, 16))#candidate|4876|(3, 1, 16)|var|float64
call_4874 = func_4873_call(var_4875,var_4876,)
output = call_4874
func_4877 = relay.Function([var_4875,var_4876,], output)
mutated_mod['func_4877'] = func_4877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2794_call = mod.get_global_var('func_2794')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_4905 = func_2794_call()
call_4906 = func_2794_call()
output = call_4905
output2 = call_4906
func_4920 = relay.Function([], output)
mod['func_4920'] = func_4920
mod = relay.transform.InferType()(mod)
output = func_4920()
func_4921 = relay.Function([], output)
mutated_mod['func_4921'] = func_4921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2954_call = mod.get_global_var('func_2954')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_4929 = relay.TupleGetItem(func_2954_call(), 0)
call_4930 = relay.TupleGetItem(func_2955_call(), 0)
func_2763_call = mod.get_global_var('func_2763')
func_2765_call = mutated_mod.get_global_var('func_2765')
call_4952 = relay.TupleGetItem(func_2763_call(), 0)
call_4953 = relay.TupleGetItem(func_2765_call(), 0)
var_4960 = relay.var("var_4960", dtype = "uint16", shape = (16, 2, 5))#candidate|4960|(16, 2, 5)|var|uint16
bop_4961 = relay.not_equal(call_4952.astype('bool'), relay.reshape(var_4960.astype('bool'), relay.shape_of(call_4952))) # shape=(16, 2, 5)
bop_4964 = relay.not_equal(call_4953.astype('bool'), relay.reshape(var_4960.astype('bool'), relay.shape_of(call_4953))) # shape=(16, 2, 5)
uop_4969 = relay.cos(var_4960.astype('float64')) # shape=(16, 2, 5)
func_3450_call = mod.get_global_var('func_3450')
func_3451_call = mutated_mod.get_global_var('func_3451')
call_4974 = func_3450_call()
call_4975 = func_3450_call()
func_3570_call = mod.get_global_var('func_3570')
func_3574_call = mutated_mod.get_global_var('func_3574')
const_4977 = relay.const([-8.199265,0.260712,-9.334394,2.679728,3.543726,3.971526,5.419760,-1.715595,7.874124,-1.266957,-5.156414,8.553525,7.386611,4.189823,-2.526138,0.733742,-0.865996,-0.260118,-8.792108,5.680082,-6.317629,5.466135,-4.937127,-8.508059,-6.376539,-8.778224,-6.162533,-1.823930,-2.165130,9.731533,-3.441730,4.758305,4.923968,-3.453735,7.871107,4.671838,-3.955964,-5.807611,-1.708306,-0.762319,8.096975,9.835396,-8.484455,6.379152,-5.029458,3.617187,5.754660,3.844488,-1.393024,-7.503783,0.364150,1.187777,-6.692825,7.862673,0.371761,-6.091114,-9.550674,-2.593946,2.967636,-7.230107,-5.915433,7.709633,-0.816714,-9.370842,-0.506597,6.585586,6.354495,5.201120,-4.315801,-0.505776,-3.537321,-9.114180,5.150173,-4.224192,0.026290,-2.869944,-9.254830,2.688836,-4.608334,-0.016105,3.851416,-4.895116,-6.847987,-4.273424,-9.157686,-4.423492,2.814542,-4.256594,-5.202718,-3.864649,0.667338,1.412565,-8.577598,-3.767602,9.938656,1.263130,-3.528886,9.794239,2.761622,0.657778,-9.239224,-5.217411,7.873948,-4.638539,7.303863,0.562386,7.880612,5.228950,4.425506,-3.397219,-4.219650,2.272734,-5.886490,6.240938,5.828220,5.467691,3.201111,6.564913,-8.093173,-8.889600], dtype = "float32")#candidate|4977|(120,)|const|float32
call_4976 = relay.TupleGetItem(func_3570_call(relay.reshape(uop_4969.astype('uint16'), [160,]), relay.reshape(call_4952.astype('float32'), [16, 2, 5]), relay.reshape(const_4977.astype('float32'), [1, 120]), ), 6)
call_4978 = relay.TupleGetItem(func_3574_call(relay.reshape(uop_4969.astype('uint16'), [160,]), relay.reshape(call_4952.astype('float32'), [16, 2, 5]), relay.reshape(const_4977.astype('float32'), [1, 120]), ), 6)
output = relay.Tuple([call_4929,bop_4961,uop_4969,call_4974,call_4976,const_4977,])
output2 = relay.Tuple([call_4930,bop_4964,uop_4969,call_4975,call_4978,const_4977,])
func_4982 = relay.Function([var_4960,], output)
mod['func_4982'] = func_4982
mod = relay.transform.InferType()(mod)
var_4983 = relay.var("var_4983", dtype = "uint16", shape = (16, 2, 5))#candidate|4983|(16, 2, 5)|var|uint16
output = func_4982(var_4983)
func_4984 = relay.Function([var_4983], output)
mutated_mod['func_4984'] = func_4984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4920_call = mod.get_global_var('func_4920')
func_4921_call = mutated_mod.get_global_var('func_4921')
call_5014 = func_4920_call()
call_5015 = func_4920_call()
func_3207_call = mod.get_global_var('func_3207')
func_3212_call = mutated_mod.get_global_var('func_3212')
var_5026 = relay.var("var_5026", dtype = "uint64", shape = (180,))#candidate|5026|(180,)|var|uint64
var_5027 = relay.var("var_5027", dtype = "uint8", shape = ())#candidate|5027|()|var|uint8
var_5028 = relay.var("var_5028", dtype = "float64", shape = (1200,))#candidate|5028|(1200,)|var|float64
call_5025 = relay.TupleGetItem(func_3207_call(relay.reshape(var_5026.astype('uint64'), [5, 12, 3]), relay.reshape(var_5026.astype('uint64'), [5, 12, 3]), relay.reshape(var_5027.astype('uint8'), []), relay.reshape(var_5028.astype('float64'), [1200,]), ), 6)
call_5029 = relay.TupleGetItem(func_3212_call(relay.reshape(var_5026.astype('uint64'), [5, 12, 3]), relay.reshape(var_5026.astype('uint64'), [5, 12, 3]), relay.reshape(var_5027.astype('uint8'), []), relay.reshape(var_5028.astype('float64'), [1200,]), ), 6)
func_4697_call = mod.get_global_var('func_4697')
func_4700_call = mutated_mod.get_global_var('func_4700')
const_5035 = relay.const([-1,-2,-3,10,-10,-9,3,9,-1,9,8,8,1,-8,-2,-6,1,-6,8,-6,-8,-9,-10,-1,1,-9,-3,9,-10,10,-9,-4,6,-7,-7,3,7,-6,-2,6,-8,-4,-3,-3,-1,-4,1,3,10,-2,-2,-4,-8,-5,-9,6,7,10,-3,4,8,-4,-8,6,6,6,-2,-6,3,5,-4,3,10,-1,6,7,-5,-5,-10,4,-1,-6,3,5,5,1,-10,-1,8,5,9,-10,-5,-1,7,4,6,-3,6,-8,-8,10,-1,-8,5,5,-5,10,1,6,-7,-8,-2,5,-8,9,-1,-6,2,-3,9,-2,-2,-6,-6,-1,-5,-9,9,-7,6,-5,-6,9,-4,8,-8,-8,5,-3,6,-5,2,-10,-7,-10,-4,7,-3,-10,9,-8,8,-7,-10,5,4,-9,-5,9,-7,-6,3,10,2,-3,-8,7,-9,-9,5,-6,-6,-7,-5,5,-3,-4,-4,2,-4,6,6,-10,-8,-5,-4,3,-6,-3,5,7], dtype = "int64")#candidate|5035|(192,)|const|int64
call_5034 = relay.TupleGetItem(func_4697_call(relay.reshape(const_5035.astype('int64'), [192,])), 1)
call_5036 = relay.TupleGetItem(func_4700_call(relay.reshape(const_5035.astype('int64'), [192,])), 1)
output = relay.Tuple([call_5014,call_5025,var_5026,var_5027,var_5028,call_5034,const_5035,])
output2 = relay.Tuple([call_5015,call_5029,var_5026,var_5027,var_5028,call_5036,const_5035,])
func_5037 = relay.Function([var_5026,var_5027,var_5028,], output)
mod['func_5037'] = func_5037
mod = relay.transform.InferType()(mod)
var_5038 = relay.var("var_5038", dtype = "uint64", shape = (180,))#candidate|5038|(180,)|var|uint64
var_5039 = relay.var("var_5039", dtype = "uint8", shape = ())#candidate|5039|()|var|uint8
var_5040 = relay.var("var_5040", dtype = "float64", shape = (1200,))#candidate|5040|(1200,)|var|float64
output = func_5037(var_5038,var_5039,var_5040,)
func_5041 = relay.Function([var_5038,var_5039,var_5040,], output)
mutated_mod['func_5041'] = func_5041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4771_call = mod.get_global_var('func_4771')
func_4773_call = mutated_mod.get_global_var('func_4773')
call_5057 = relay.TupleGetItem(func_4771_call(), 0)
call_5058 = relay.TupleGetItem(func_4773_call(), 0)
output = call_5057
output2 = call_5058
func_5071 = relay.Function([], output)
mod['func_5071'] = func_5071
mod = relay.transform.InferType()(mod)
output = func_5071()
func_5072 = relay.Function([], output)
mutated_mod['func_5072'] = func_5072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3849_call = mod.get_global_var('func_3849')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_5089 = relay.TupleGetItem(func_3849_call(), 0)
call_5090 = relay.TupleGetItem(func_3850_call(), 0)
output = call_5089
output2 = call_5090
func_5095 = relay.Function([], output)
mod['func_5095'] = func_5095
mod = relay.transform.InferType()(mod)
output = func_5095()
func_5096 = relay.Function([], output)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5105 = relay.const([[-7,2,-8],[2,-6,-2],[-7,3,5],[-9,-6,4],[-9,2,-2],[-10,1,-7],[-4,5,-10],[-2,-1,4],[-2,-4,5]], dtype = "uint16")#candidate|5105|(9, 3)|const|uint16
var_5106 = relay.var("var_5106", dtype = "uint16", shape = (9, 3))#candidate|5106|(9, 3)|var|uint16
bop_5107 = relay.less_equal(const_5105.astype('bool'), relay.reshape(var_5106.astype('bool'), relay.shape_of(const_5105))) # shape=(9, 3)
output = bop_5107
output2 = bop_5107
func_5126 = relay.Function([var_5106,], output)
mod['func_5126'] = func_5126
mod = relay.transform.InferType()(mod)
var_5127 = relay.var("var_5127", dtype = "uint16", shape = (9, 3))#candidate|5127|(9, 3)|var|uint16
output = func_5126(var_5127)
func_5128 = relay.Function([var_5127], output)
mutated_mod['func_5128'] = func_5128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5181 = relay.var("var_5181", dtype = "float32", shape = (5, 14, 9))#candidate|5181|(5, 14, 9)|var|float32
uop_5182 = relay.exp(var_5181.astype('float32')) # shape=(5, 14, 9)
func_4771_call = mod.get_global_var('func_4771')
func_4773_call = mutated_mod.get_global_var('func_4773')
call_5185 = relay.TupleGetItem(func_4771_call(), 0)
call_5186 = relay.TupleGetItem(func_4773_call(), 0)
output = relay.Tuple([uop_5182,call_5185,])
output2 = relay.Tuple([uop_5182,call_5186,])
func_5198 = relay.Function([var_5181,], output)
mod['func_5198'] = func_5198
mod = relay.transform.InferType()(mod)
var_5199 = relay.var("var_5199", dtype = "float32", shape = (5, 14, 9))#candidate|5199|(5, 14, 9)|var|float32
output = func_5198(var_5199)
func_5200 = relay.Function([var_5199], output)
mutated_mod['func_5200'] = func_5200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4771_call = mod.get_global_var('func_4771')
func_4773_call = mutated_mod.get_global_var('func_4773')
call_5211 = relay.TupleGetItem(func_4771_call(), 0)
call_5212 = relay.TupleGetItem(func_4773_call(), 0)
func_4537_call = mod.get_global_var('func_4537')
func_4541_call = mutated_mod.get_global_var('func_4541')
var_5214 = relay.var("var_5214", dtype = "uint16", shape = (220, 2))#candidate|5214|(220, 2)|var|uint16
const_5215 = relay.const([[0.136624,5.572989],[9.458414,6.137984],[-4.444051,8.671045],[-5.024447,3.901601],[8.191067,-0.227963],[-1.815146,-0.065053],[-6.571584,-2.232587],[3.012036,-0.964357],[-0.677700,-7.358995],[-5.641220,-6.840748],[4.079388,-0.597020],[-5.466965,9.697696],[5.409145,-9.326063],[-0.866378,1.528080],[-5.240544,-0.560251],[3.975919,-8.828027],[-3.411500,-1.295082],[-0.551637,0.691597],[-7.228499,5.831118],[1.685380,-1.722763],[-7.662786,-9.563875],[4.327104,6.435171],[4.124443,3.792617],[2.237736,-0.723603],[-5.556674,-5.071350],[-0.454132,-4.513501],[0.170196,6.453585],[-7.870140,9.494281],[-0.296242,-0.014918],[-1.465641,-2.105326],[3.517721,-8.888657],[6.829327,-5.279293],[7.245555,0.145861],[-9.702607,-2.860374],[4.657501,-5.153478],[7.342512,0.123296],[3.967098,3.618285],[2.908130,3.334849],[3.081013,7.161839],[5.671376,-6.242045],[-4.841210,-4.452592],[2.953605,9.059770],[-7.228500,1.594115],[5.437815,-2.850959],[-6.462450,-7.293723],[8.167662,-3.529202],[-0.275703,5.197008],[6.744084,-2.052843],[2.535002,-4.320027],[-9.112597,-4.294520],[0.247789,-7.070087],[-5.496079,9.576679],[1.861361,-6.951091],[5.645243,1.381157],[6.752007,4.030728],[1.419202,-4.283568],[-9.966112,7.701921],[-9.119301,-7.133519],[5.763671,9.891771],[6.701868,-4.002976],[-9.451549,8.047471],[2.917519,0.015351],[7.279312,5.289360],[8.111990,-1.622389],[-7.687880,-1.552290],[2.631264,-8.387611],[2.109351,-9.831547],[-5.223527,9.509952],[7.094443,1.483949],[-0.376476,6.724535],[3.430251,-9.880875],[9.102376,9.983650],[-5.468064,-1.421879],[-7.472640,0.306803],[-3.437528,-3.288727],[-0.416678,-0.569474],[-1.469647,5.919155],[-9.029227,-0.752614],[4.300717,-1.309141],[3.572111,1.127691],[0.700929,9.797862],[-3.063199,-0.908698],[-0.662663,-3.532798],[-0.278793,1.842012],[-7.467262,4.523285],[0.430350,-8.301638],[-1.481168,7.718796],[-2.108408,-5.220868],[0.828272,7.765839],[-3.977440,-0.672861],[-3.598363,9.086600],[4.141209,9.939091],[1.732545,0.941848],[6.691453,-1.292897],[-5.046621,1.048455],[-6.516194,8.124614],[-2.436921,5.763558],[-7.679286,1.306493],[-9.444287,1.097316],[1.198389,1.970394],[-4.971638,-0.744118],[2.711780,8.702349],[-9.958141,-2.466180],[-3.369214,-1.307271],[1.400313,7.902307],[-8.062607,-7.753997],[-7.605616,-7.272281],[7.589107,-6.343851],[-4.452559,8.215167],[3.188521,-2.566679],[0.707216,-5.876688],[-1.746838,-2.794157],[6.974133,3.228806],[1.510741,-4.919863],[9.221510,9.824512],[7.825776,-2.785379],[-2.495236,7.823189],[1.098534,-1.181575],[-6.530169,-8.802256],[3.066271,-3.922393],[1.198012,-7.499965],[-0.121229,-2.726742],[-6.502240,-3.097422],[4.889733,4.845632],[-7.248355,-8.193519],[-6.615358,-2.822830],[5.424152,9.560743],[-3.931024,0.416230],[0.439046,-6.023627],[9.457328,-4.279056],[-4.576843,3.210883],[7.712580,-2.369389],[4.700282,5.745592],[3.035885,-3.909435],[0.206035,1.885906],[-5.723073,4.625655],[9.636786,1.564546],[-8.174777,-4.198433],[-7.945436,-4.845562],[-8.411782,2.621132],[1.599552,-5.992026],[-8.318876,-1.045904],[-2.443740,9.848902],[-1.988650,1.612053],[-3.999925,-0.227464],[-2.966555,-9.486135],[-8.349501,-9.758347],[5.466341,-8.594160],[1.298169,3.588782],[-1.217823,6.740806],[4.369194,1.043961],[0.707901,9.741919],[5.898736,-5.167668],[-5.126339,-8.328788],[4.524072,-1.310905],[-7.562111,-7.242192],[0.855576,6.042463],[3.774414,-8.379225],[-2.642770,-4.472016],[-3.938814,2.563141],[-5.388879,1.855184],[-6.516792,8.131336],[9.895444,-0.949685],[7.372498,3.362827],[-2.243821,-7.835497],[2.196872,8.874238],[-1.067125,6.146670],[6.764173,-5.641505],[-7.274637,5.717824],[2.389102,-3.573192],[-6.212181,-6.659389],[4.596229,-8.607989],[-0.737791,4.943432],[0.285874,5.680003],[5.461370,1.231219],[-9.106265,-3.897571],[7.360525,6.223263],[-2.660284,2.000348],[0.637588,-1.052113],[9.875719,-3.221404],[0.488296,3.874569],[-6.222615,-0.186321],[0.851184,1.204437],[1.861911,-2.344629],[7.789472,2.142398],[-8.039688,-3.329025],[-9.766401,-7.777805],[9.393177,-8.446585],[2.834726,4.225469],[-7.547526,4.919767],[5.480879,9.983135],[-8.838619,-2.436201],[-0.825212,8.030283],[-0.465404,-0.944337],[1.365931,6.509772],[2.435972,8.302286],[6.220243,4.119471],[8.251070,-5.532731],[8.363787,0.736414],[8.474759,3.447196],[-1.869160,-0.686787],[-4.917854,6.257031],[-0.022515,-3.077999],[-4.712267,-5.115453],[-8.802836,-1.652735],[-2.400861,1.799713],[-6.591543,0.170411],[-7.089152,8.607452],[6.687079,2.516551],[-7.426377,1.936544],[6.211152,1.249713],[-9.282897,-4.815778],[2.592340,-2.660844],[5.667759,9.546107],[-9.677114,3.121572],[5.978868,2.234188],[7.111861,-5.090738],[-2.620673,-4.522902],[9.589283,8.263129],[7.020102,-4.055962],[-7.633578,-2.134941],[-0.779388,-2.135720],[-5.487540,1.069148],[-6.605157,-4.264352],[-7.935256,-9.577922],[7.921633,-4.338072],[-9.803477,-0.661566],[0.208000,-8.627020],[0.703253,5.952123],[-2.973450,-4.191739],[-6.183076,-2.966945],[8.468601,-7.868181],[0.835683,-7.637892],[4.627515,7.627440],[-9.264459,6.335318],[-4.201775,-0.571177],[-4.368856,-9.400305],[2.105341,1.341879],[-4.928524,-1.263473],[-7.621412,3.458116],[0.400976,-9.078593],[0.165500,-0.934831],[4.908243,3.116102],[4.557965,2.579859],[-4.094698,-4.927948],[0.135436,3.814162],[1.512389,5.473154],[-9.975810,5.999516],[-6.198597,-6.651009],[9.983148,8.377825],[-9.948784,1.728586],[-2.617701,6.372711],[-0.376211,-8.616672],[5.095453,5.262094],[-5.802137,-7.841466],[-8.748983,-0.491707],[-3.875054,-6.236705],[-1.521767,-9.000741],[-9.311715,-4.969312],[1.777469,5.473026],[-7.988149,9.386569],[3.393552,-0.876784],[3.674342,-5.515038],[1.366197,-6.921155],[8.895882,5.919056],[-8.133794,-6.121336],[8.374754,-2.850901],[-4.358057,-9.572494],[7.855482,-2.652931],[7.820255,-5.560441],[-0.217253,-0.876997],[-2.452366,4.785252],[2.987586,5.810814],[-2.857410,-7.426528],[-8.320607,-8.376165],[7.283277,6.308726],[-6.699333,2.490874],[4.731389,-5.467749],[2.998567,6.725673],[9.401485,0.662272],[2.588460,3.084309],[1.672953,-0.826262],[-5.362200,-7.740416],[4.151624,-6.154468],[-7.098310,3.249149],[-0.129805,8.959394],[-7.673021,2.959196],[9.399706,-1.134082],[6.000944,-0.419684],[-3.181448,-3.445048],[-0.034957,-1.290941],[7.929763,1.028979],[-5.839897,0.958388],[3.679016,-1.005044],[9.950955,3.970407],[8.740155,2.634173],[6.654804,6.347956],[-5.726290,-5.327162],[-6.252533,2.477557],[-9.721402,0.725688],[8.695632,9.735103],[2.644694,9.036773],[2.215491,6.790609],[-4.088130,4.370914],[1.134049,2.609207],[-7.174370,-7.564692],[-4.466080,-2.636563],[-1.742503,-7.174458],[-3.645755,-9.659252],[4.303822,-8.480240],[2.382025,6.449144],[1.526679,5.955157],[4.890824,-1.875836],[4.580061,1.931531],[-3.809304,-8.539728],[2.352575,2.704849],[-6.169063,-0.128755],[3.508386,-1.941262],[-6.091602,-1.372927],[-8.682855,-1.518620],[8.899488,4.230340],[4.096892,-8.655189],[2.862569,0.976791],[6.364658,-8.884485],[-0.275901,-1.685636],[-2.540638,-4.924268],[-5.410584,-9.920795],[7.501064,2.772084],[0.103344,3.130309],[2.901288,3.363880],[-9.762974,2.906531],[3.434357,5.303557],[-1.333168,0.438830],[-6.103715,-5.434883],[-4.098084,7.806847],[4.466210,-7.304301],[9.737280,-2.388098],[-4.122585,7.351350],[-3.224467,-4.982528],[0.835562,7.320386],[4.715906,-5.887132],[3.459201,8.124326],[7.567040,7.478241],[3.188960,2.732998],[7.543740,4.724322],[0.459170,-7.658267],[2.779484,8.911472],[-8.758625,3.333696],[8.718354,3.159759],[-7.322527,0.357749],[7.621171,-7.812729],[-2.577414,2.390348],[4.812712,1.992003],[-2.333930,-9.657631],[9.492949,-0.511031],[6.618999,8.075283],[6.048952,6.985687],[3.816471,4.059290],[2.048631,9.344059],[3.694741,3.002387],[8.378145,-1.047086],[-3.000959,-5.123750],[-5.138472,6.209968],[-0.096450,0.417856],[9.659294,1.960797],[4.435819,3.084756],[-5.685382,-2.027088],[4.716067,2.673990],[4.111366,-4.504299],[-5.720462,9.127582],[5.771319,-1.330809],[7.970124,4.784111],[-5.132765,-5.916314],[3.263553,-2.672656],[-7.977848,-9.765697],[-0.934511,8.500540],[3.672223,3.841170],[-4.019826,-4.233027],[0.281698,0.020376],[-5.249809,4.219949],[4.520431,-9.689743],[3.795737,-3.539021],[-2.709477,-1.128888],[-8.928957,-5.225175],[8.769961,-6.887400],[-0.685064,-1.031996],[7.615872,-7.471768],[-2.959353,3.469139],[1.465495,8.852761],[-9.589379,1.450184],[-8.567050,-5.244539],[5.247397,-0.669309],[-1.040817,-7.481073],[0.972420,6.425006],[-8.118645,8.775364],[0.646469,-3.356336],[-4.629814,-6.897056],[8.295413,2.511683],[4.916873,4.705151],[-1.481090,8.060314],[-2.001988,7.032905],[-7.180023,-5.766351],[1.783438,-1.983193],[-7.873319,4.237655],[-2.855681,-7.206560],[4.551989,0.917333],[2.626703,2.107295],[-0.431688,-2.337501],[-7.479597,-3.414774],[-8.445758,9.048930],[-0.642039,9.965465],[-6.663466,-2.667996],[-3.093978,6.946677],[-8.186927,-5.028982],[7.732579,-5.511423],[-7.189186,-5.587262],[-2.851042,-0.691393],[5.477813,-3.407590],[8.742518,8.280212],[8.668772,-1.824722],[-2.826983,2.520602],[-2.245063,-8.634275],[-0.310755,8.267974],[8.961684,4.696912],[-5.361836,9.030918],[-4.192446,-5.358961],[9.316135,2.649144],[4.592783,-0.108721],[3.744034,-0.086005],[7.693880,5.217873],[6.908684,-5.074507],[-2.130398,7.280360],[0.730876,9.940024],[-7.909539,7.337708],[9.918437,-8.024914],[-6.355791,-9.001989],[0.148880,3.179056],[1.581273,-8.175110],[0.937213,0.982992],[-2.729634,6.964632],[5.758593,1.812019],[-3.790492,8.751440],[-5.432538,-9.135124],[-9.450718,-6.129839],[6.963464,-2.824231],[9.386418,-4.586679],[-5.696161,-7.791539],[-8.424896,-2.692816],[-2.834680,0.211641],[5.351523,-8.674353],[2.160435,-3.484264],[1.736449,8.722248],[4.476252,1.244882],[-2.440686,5.770222],[-7.418094,7.367331],[4.060874,-8.043345],[-5.153136,-5.366561],[5.145783,0.170003],[4.800797,-7.742103],[-3.636117,-9.945770],[-2.826979,-8.393847],[1.035021,1.550899],[-0.034343,-5.917060],[-7.342553,5.074612],[-2.893698,-0.415511],[1.454276,-2.342919],[-0.543106,1.721450],[-6.209850,-1.387178],[-3.542925,7.940056],[-3.802367,4.326691],[-8.068253,3.515915],[-7.856633,8.958644],[-5.784684,-0.794134],[5.456243,0.765214],[-0.858831,-7.186070],[-8.101184,6.321769],[-0.802818,-3.869664],[0.006280,5.766927],[8.821231,-4.443499],[9.199648,-4.190446],[-5.644839,8.583600],[-3.036505,1.876954],[-2.668096,3.355643],[-7.860597,5.532407],[-6.083209,7.436773],[1.597121,4.903677],[9.056567,-2.029425],[2.064374,9.323443],[-0.875513,0.421634],[8.957142,2.656685],[-6.769664,-5.030057],[8.204097,7.174429],[3.676759,5.272885],[8.061555,1.183183],[-3.117149,-9.197083],[-7.891728,1.009127],[-8.072820,4.733380],[1.461795,4.240911],[-5.607221,-1.382883],[7.811853,4.366215],[9.655795,7.177438],[5.607930,6.722217],[0.510360,2.890858],[7.259081,-0.663011],[2.199949,8.195959],[-3.442995,-3.825275],[-7.464171,-7.974698],[6.458748,-5.422573],[-6.367926,4.244169],[-3.313746,2.591724],[-1.981783,-5.989738],[-4.527576,-1.318429],[-9.990997,-7.109875],[-7.314870,1.083282],[-1.694038,5.347469],[4.628854,-9.119722],[7.724668,9.217798],[-2.144328,8.038012],[6.024201,6.322358],[-1.039522,2.318913],[2.957537,3.300542],[6.499479,2.937249],[-7.838432,9.803876],[-3.021451,8.199247],[2.427555,-3.086105],[-3.733155,3.972237],[4.127235,9.519739],[-6.770185,-8.948071],[-9.312633,5.060283],[3.673679,9.512178],[9.129571,3.280072],[-2.001487,-1.104984],[-9.022063,-1.153447],[-1.440858,-9.140106],[-0.346622,-1.827355],[9.681255,-8.620561],[-7.560866,9.850935],[-0.714464,-9.396985],[9.486704,-1.115012],[-5.452665,3.798482],[9.425535,3.660080],[0.796197,7.626097],[1.327784,-7.570738],[-3.087674,3.570671],[3.968384,-2.426151],[3.219754,1.325073],[9.611666,4.951700],[-6.966605,-8.654159],[-9.138002,-7.744768],[7.341024,8.443491],[4.632773,8.590214],[-3.139221,-5.400701],[3.981820,-0.037208],[2.379923,0.112827],[7.900969,9.436414],[-0.178921,9.624050],[2.039658,-0.929355],[6.708779,-2.350667],[-2.543044,-7.781351],[-2.076957,-7.731972],[-2.749217,-6.307549],[-5.433402,-7.288611],[-4.258085,-5.961123],[3.143821,0.729453],[0.612675,7.741995],[9.265984,4.379592],[-8.445850,8.765218],[-8.889055,-6.608890],[-8.059933,0.536786],[0.979683,-4.610271],[8.694964,-1.501649],[-9.206246,1.315920],[7.072406,-2.084831],[-2.367477,-2.276074],[2.824955,5.064823],[3.064047,-8.549245],[5.079462,1.188844],[9.201558,-1.784072],[-3.887451,1.570744],[1.061166,-0.327089],[-5.394471,3.810231],[-6.085184,5.168531],[8.201686,4.100992],[-5.552020,-6.332684],[8.964126,-3.611922],[4.410135,5.906176],[9.095943,-2.519955],[-0.759297,-5.855007],[9.971247,8.277612],[7.010486,-7.717132],[-2.418736,-6.565795],[1.598738,-6.872901],[-6.174547,-8.454945],[3.891158,8.458108],[-5.558923,1.127663],[-6.100351,1.805627],[-1.772877,7.551811],[5.590385,-0.817886],[6.254977,2.800345],[-1.254530,-8.150614],[-4.556715,-8.495976],[-0.423954,1.431679],[-3.526367,8.546273],[-4.012323,-7.206042],[-3.583633,-3.590052],[6.772484,6.076870],[9.237323,-5.513653],[-8.867997,-8.320470],[0.759311,-3.571974],[-1.308143,-6.817171],[8.917867,9.614701],[6.624540,-4.929006],[5.311656,3.981283],[7.046162,-5.826467],[6.947028,-7.114414],[3.422924,1.345722],[-8.288756,-1.083211],[1.853982,6.908021],[7.056404,-5.165605],[-8.536570,-3.433328],[9.146926,2.560350],[-6.362513,-9.646951],[-0.939052,3.892915],[1.656330,-3.020795],[-0.618550,8.563217],[6.486206,-6.425374],[3.325716,1.549858],[2.062281,-7.995566],[-3.988717,-3.543188],[7.697655,-9.170910],[6.926480,4.459359],[-6.790765,-4.250352],[-4.586200,-6.428384],[-8.387035,-9.659240],[0.610529,-7.226556],[3.196069,-5.863554],[-0.983053,-6.796022],[1.996799,9.968364],[-8.720887,9.005098],[-0.236023,-3.720896],[5.728956,-0.889792],[0.132944,-2.031683],[0.200791,-6.617266],[1.444821,-9.973072],[8.134943,6.198798],[1.595426,5.731448],[2.637347,6.320114],[6.426770,-3.070654],[-1.105399,-0.770629],[-8.281535,2.121655]], dtype = "float32")#candidate|5215|(650, 2)|const|float32
call_5213 = relay.TupleGetItem(func_4537_call(relay.reshape(var_5214.astype('uint16'), [11, 8, 5]), relay.reshape(const_5215.astype('float32'), [1300,]), ), 1)
call_5216 = relay.TupleGetItem(func_4541_call(relay.reshape(var_5214.astype('uint16'), [11, 8, 5]), relay.reshape(const_5215.astype('float32'), [1300,]), ), 1)
output = relay.Tuple([call_5211,call_5213,var_5214,const_5215,])
output2 = relay.Tuple([call_5212,call_5216,var_5214,const_5215,])
func_5228 = relay.Function([var_5214,], output)
mod['func_5228'] = func_5228
mod = relay.transform.InferType()(mod)
mutated_mod['func_5228'] = func_5228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5229 = relay.var("var_5229", dtype = "uint16", shape = (220, 2))#candidate|5229|(220, 2)|var|uint16
func_5228_call = mutated_mod.get_global_var('func_5228')
call_5230 = func_5228_call(var_5229)
output = call_5230
func_5231 = relay.Function([var_5229], output)
mutated_mod['func_5231'] = func_5231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4495_call = mod.get_global_var('func_4495')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_5297 = func_4495_call()
call_5298 = func_4495_call()
func_730_call = mod.get_global_var('func_730')
func_735_call = mutated_mod.get_global_var('func_735')
var_5309 = relay.var("var_5309", dtype = "float64", shape = ())#candidate|5309|()|var|float64
const_5310 = relay.const([[8.749389,1.460445,7.400437,8.824619,-9.048783,6.532802,2.715010,6.235347,1.821154,-5.545388,-5.790193,-4.332252,-3.889520,-0.229855,4.379642,0.406254,9.531109,-0.878920,2.965184,-7.661175,7.412854,-4.306098,-1.022184,1.522151,8.533777,-9.215650,1.828738,6.636394,-9.548807,1.155698,7.331507,-1.779473,8.656571,-1.955394,-1.143484,-9.385541,-1.869272,-6.420922,-8.022758,-5.800979,-3.567308,-0.919129,4.444400,7.457184,1.292787,5.108437,8.179160,1.659527,-9.610208,3.762184,-9.384115,-1.207638,-8.368899,3.793330,-3.937543,6.622328,-3.801596,3.923499,4.798644,6.166264,2.561010,7.968539,-9.425534,9.350017,-1.815479,2.253297,2.655714,2.438904,9.069261,-2.875822,-3.662244,-0.649455,5.042391,-4.156567,-2.292305,4.325352,-5.500375,-3.540543,-4.197327,9.859670,-4.277411,5.988166,1.334942,-3.523281,-8.130890,-2.057997,-8.896214,3.493084,-2.815398,-2.858796,-6.059918,-8.524094,-0.667464,8.558299,9.715234,-9.930401,-2.642004,4.508680,-3.450593,-2.655330,-7.963677,-9.464482,7.373822,6.793596,2.220304,-4.777492,5.030400,9.656858,7.595180,-0.905623,8.619290,-2.326929,9.378768,4.279520,6.564078,-8.166084,9.210186,-0.248279,-9.116595,-2.493466,3.830689,2.060460,-0.367527,5.889842,-6.971633,-3.717379,-2.289085,3.341149,-0.722108,1.108450,-2.822221,9.783629,-7.175851,-9.043312,6.684857,1.974761,8.505019,-1.979973,7.878215,6.128710,5.214547,7.173951,-0.706383,5.276858,-6.345192,9.636237,-5.014991,-6.934129,-1.746558,-0.758340,6.007330,4.019264,-1.997220,-5.641580,3.542794,8.393862,1.692300,-6.925008,4.721013,-2.053261,-6.724218,-4.667301,7.855839,-0.949443,3.508513,4.233727,-5.417322,5.646707,-8.113477,-6.190342,0.678704,1.448183,-7.238130,3.667469,6.883408,3.553605,8.032918,1.239237,-9.495491,-7.400839,-9.918444,1.379217,-4.162728,5.008062,-5.024946,-2.935107,-9.640298,1.797754,9.157033,-6.288900,-4.214135,3.971831,-5.845991,-5.805332,-1.327423,-8.568479,9.405709,5.153347,8.218145,-4.670564,-3.546088,5.859659,-5.954323,9.809028,6.323877,2.506943,-3.735871,0.018449,1.589804,4.707835,0.854282,-2.089762,2.225803,-7.448882,-5.419817,5.415413,-1.499738,3.603970,7.472962,-8.621537,5.011775,-9.437963,-9.028722,-4.479713,-0.902566,3.334307,8.735050,-7.138551,3.437875,1.761737,0.831467,-7.268193,-3.409622,8.267908,6.415609,-2.200622,9.700500,-3.949232,0.700886,5.859172,-7.753784,3.050608,-4.906598,1.914840,-2.742423,1.386877,9.358933,2.135074,-9.908823,2.696925,5.837649,-9.791753,-2.254503,-0.159509,7.623285,7.464292,3.841108,7.506659,-1.886285,4.651372,-8.183716,4.792697,0.056974,4.280338,3.291153,5.670960,-0.652313,1.695161,-4.314688,-8.656196,9.540001,4.857663,-1.587061,-6.381283,2.103865,-8.417840,-4.394241,5.829946,-5.817403,5.845349,0.940110,-4.454468,-0.791108,0.664430,-3.577051,-5.490245,8.707730,-1.424699,0.610375,3.041954,-4.644399,-9.319168,7.892664,-6.868590,-7.397062,3.224470,-0.443040,1.276622,0.101506,4.101516,4.604304,0.160638,-4.308758,-8.652611,-1.333264,-1.630226,2.588924,9.125878,5.448213,2.977253,-3.173941,1.847687,-3.464001,6.350706,2.807584,6.809218,5.820050,-8.031938,-8.868235,9.918369,-9.898585,-9.028295,-5.860868,-7.299717,0.957240,4.294010,-7.825179,0.552743,8.869451,-1.043123,1.812898,8.650135,-2.581194,-7.370252,7.896028,4.522890,-2.272171,4.032880,7.227965,-2.891622,5.862157,-4.585703,-8.968380,5.788274,1.452019,0.926445,3.052270,2.678408,-7.170560,2.104436,1.973641,3.012837,-9.812827,-7.692694,-8.906887,-0.175441,-3.650381,7.926654,-4.219305,-3.766493,-7.785421,5.415156,3.445453,3.133130,-2.652447,4.921620,3.679983,9.950842,4.289996,4.749755,-0.001588,-9.294525,8.818602,-9.398063,-7.607544,4.553935,-5.662051,-3.653698,6.915528,6.866673,-4.522747,6.400518,6.783511,6.718550,-6.877824,-8.519149,6.486338,8.832119,-9.754940,-3.026322,-1.097949,4.366680,-8.090967,-9.221363,8.089666,-0.701463,-1.862735,5.370906,-0.065956,9.982442,5.691165,-1.125044,-0.754240,8.485493,3.911695,4.156040,6.309129,-7.637135,-1.005398,0.655705,-3.336189,-5.193946,6.066067,-5.456380,-8.404113,-5.630427,5.086814,-6.976907,-3.980863,-2.139966,-8.090634,-1.853611,-9.901560,2.147860,3.523608,-0.576112,-6.448348,5.027127,-1.731801,-7.060327,1.343483,-3.628175,2.547459,-0.890912,4.049430,5.220651,-1.194715,6.531687,-5.013044,1.550099,-2.288834,3.686060,-6.052473,-8.253137,-7.382873,-1.022022,-2.709262,-6.425851,5.345789,3.428552,4.828471,-0.190399,-8.190160,-2.882834,9.769310,0.307690,3.405137,-4.626290,4.293252,-6.042357,3.176584,0.773980,5.273183,6.443105,-3.503375,8.227278,8.821588,0.997795,-9.494822,-7.844174,6.723337,0.381616,-6.217411,6.402123,-2.186453,4.302868,-5.070734,4.107977,-7.920956,-5.206772,-4.446719,-9.385229,-6.934917,0.468029,7.295396,-7.488258,4.231040,2.977034,7.012122,7.605597,-2.691049,-9.287244,8.937428,6.493057,-2.756901,-2.374293,3.319898,3.190636,-2.235562,-9.972281,-0.205190,0.884830,-4.302898,-8.349246,9.431891,-9.033950,-9.400634,-2.394275,-5.564239,-3.819169,7.536043,5.034205,9.675048,-6.321160,-3.980634,-9.401804,2.920776,-3.203182,-8.411531,-6.855290,3.111913,-9.313404,7.073223,4.482023,-8.023131,-8.386173,7.790370,-5.588889,-4.222454,-4.248071,-1.287804,-7.806789,-3.090478,0.602366,2.476878,-6.796584,-5.995802,-6.242797,5.788307,-3.187604,0.704443,-7.015131,-5.078600,-1.649968,5.674920,5.946297,7.120172,-8.458681,1.132967,-4.968250,7.348746,6.243447,3.458454,5.309509,5.825698,-0.286617,-2.941937,5.815418,-5.262040,-3.615994,5.332519,5.420076,7.578197,-9.549804,2.886944,2.629686,-7.805855,2.200832,-0.343431,-8.957017,-0.871732,6.689556,6.809392,4.677367,-9.908696,-7.947744,-0.094336,-7.539361,0.711151,-4.938805,1.010512,4.042780,-1.404818,-3.516686,8.111198,-5.313933,8.172654,-6.470953,6.996335,-5.869682,5.815322,5.584001,-0.365103,8.011105,-8.058758,7.445424,7.353651,1.264255,4.679458,0.857268,1.162708,-5.190066,0.596435,0.766514,-2.819758,-5.335880,-8.252077,9.288531,3.637010,-3.711453,-5.015472,5.516875,-8.431033,6.255068,-7.225091,-0.345517,7.584326,9.248899,-1.108298,4.535693,-1.821334,-4.087427,6.897798,-9.619274,0.030804,-1.817615,-4.875738,0.549816,5.925486,-1.029650,1.794222,7.219666,6.304849,0.691129,0.422146,-1.858936,-3.059736,9.817885,3.529599,-8.313538,-9.236163,-8.646308,6.406175,-2.152036,6.741637,-4.918612,5.388561,5.360534,-9.240128,-8.228564,4.384255,-5.894664,-6.984078,5.505218,8.093654,-9.069870,-0.648033,-3.647855,-3.541715,-6.595769,1.602508,5.592364,-1.411244,7.052585,2.712124,8.152230,-8.339421,8.512448,9.858260,-0.306161,-3.440677,-5.286067,-8.140957,-3.879011,3.308051,-4.005450,-7.870931,-7.471767,-8.262124,1.031645,2.803920,-3.418652,-6.149611,-4.918429,-3.449087,-4.243402,1.288931,5.163219,6.777641,9.736092,0.359726,7.241841,3.751773,-1.255242,8.080752,5.690315,-6.297471,3.900362,6.179876,-7.813356,-7.789981,8.226655,-9.786814,6.381076,-3.167895,-7.075480,-0.742278,2.721865,1.682486,1.660627,-8.067137,-2.859075,-7.187377,0.092090,0.206203,8.849317,4.232703,-6.562478,-7.639139,7.975244,-4.286958,-5.208955,-0.746663,-3.525204,1.166784,-3.220798,-0.904342,5.841931,-9.018441,7.771106,-9.176572,-9.331719,4.390388,0.448667,-8.691795,-0.681775,0.859785,-8.403288,1.064363,0.574695,-4.613137,-9.361779,-4.518643,-0.370532,-1.174526,2.100798,-4.590149,-0.735742,-8.121444,6.448104,7.716397,2.039674,-0.508015,-8.589894,-4.822883,6.775086,4.237663,3.397643,4.651136,2.287046,4.259984,-1.980410,-8.162900,4.100995,2.948748,0.298291,1.355625,8.715293,-9.364820,3.575621,7.549027,-5.880478,-4.736987,7.709057,7.780962,2.442600,0.633174,-6.584978,3.167613,-5.599715,4.130078,8.509584,-1.478597,-4.512282,-8.056713,4.817668,-1.862514,-7.601729,0.843172,-8.478039,-5.637833,-5.191503,-9.993676,2.958922,-0.141057,-9.866119,-3.836862,-7.677961,-3.411148,3.613496,-3.937375,-1.082415,-8.364792,9.611567,-5.878065,-3.139657,-3.553909,-4.279874,-8.749119,-7.331199,3.516847,-3.402528,-7.387604,-7.465839,4.509396,5.718167,-4.642095,6.831955,-3.337352,3.927527,-1.115417,-6.932387,-2.648169,0.814807,-8.509105,5.678565,-5.878328,7.883655,9.472479,0.444982,-7.019978,-4.161961,4.329477,2.262857,6.623596,-8.523811,4.008809,-6.019337,-2.040790,-4.590546,0.609735,-1.640514,3.954657,-5.121375,-4.923706,0.073651,-7.347045,0.551516,6.687280,5.671985,0.496639,7.664501,-4.595377,-6.312054,7.262086,-2.794609,9.135772,2.559241,-3.815619,2.385839,5.784861,9.708413,-2.738393,5.879722,-5.382122,-8.877057,2.612327,-4.840878,5.981603,-3.989819,3.225483,6.315591,8.523646,5.366178,-0.588287,-4.854490,2.370242,3.694525,9.610855,-2.645572,-6.455203,4.722596,-8.088892,1.612945,5.676553,-6.534793,-5.030801,5.867231,-7.233644,-6.161967,3.874495,6.334909,-0.490630,-4.513034,7.501820,6.334769,-9.759749,0.056861,-0.907969,-5.625577,-0.177596,-2.985921,2.218305,8.206815,-1.478060,-8.984026,-4.865066,4.934496,4.027964,-9.415725,-3.567743,-5.713650,6.425593,4.875219,-7.658491,8.532608,-8.170279,-7.601311,4.618850,-5.005060,8.498497,8.551058,-4.020084,-0.453481,-1.037926,-7.243506,0.229616,1.731338,4.109268,-1.750806,6.152028,-4.891387,-4.886758,2.168957,-5.278189,9.121633,-1.420299,-6.324672,4.458452,-9.776169,3.562168,-7.294638,8.693037,6.697682,-9.462000,1.455873,1.579268,-3.277057,-4.162187,3.409042,9.622991,-8.676888,8.609232,-9.209861,4.486964,7.258016,8.086934,3.861992,9.339769,2.195877,6.878655,4.224319,3.446856,-9.725936,1.821753,-6.066857,-8.489480,6.443957,1.300965,2.449538,-8.264306,-7.479487,-6.293960,1.474912,-1.160303,-4.210089,8.418089,4.307343,4.982754,-1.610453,6.750433,0.147085,5.258182,-6.949013,-3.787735,8.487956,-9.284805,-5.400055,-7.813050,-6.479247,8.061837,-4.070049,2.414090,4.638265,7.726753,5.177734,-7.974734,-4.278181,9.894504,8.184737,-6.723498,5.575601,-2.849166,-3.543289,3.488666,2.011125,8.285966,0.747399,7.801415,1.480535,-0.583616,-9.400640,8.465442,-8.278311,8.208776,-8.852001,-8.545866,-1.589868,5.293746,3.342192,3.817134,6.026179,-4.635960,6.252662,9.890110,-8.014729,-0.389034,9.529766,-3.748648,-1.519771,4.147451,8.778774,-7.643545,-0.530748,-0.325336,-6.898446,-0.438499,-1.323268,-7.323965,7.127649,-9.950138,4.894991,-1.131131,-2.309583,-2.842805,-6.944800,5.061636,-6.583838,4.351477,-1.435012,-0.023563,2.967723,-0.050164,-1.076253,-7.124320,7.306652,1.903802,6.973600,3.127971,-5.387703,-8.954477,5.217236,8.857975,-0.278961,-8.894105,-1.396345,3.255186,5.537968,-1.600452,7.957753,1.780753,6.928150,2.380659,-6.983097,6.807923,1.536270,3.726360,0.869488,-7.284427,4.841896,-7.962956,3.554720,-5.131201,-3.493237,-1.389356,9.194220,-6.785892,0.338453,4.482178,-3.013675,-8.182788,-8.297360,-0.299325,-0.062136,0.867570,2.423327,-3.191817,-3.423970,1.723102,2.573974,-3.521547,-0.255709,9.750244,-2.670564,3.512820,7.677806,-1.562444,-1.590062,-5.669533,7.596360,-4.479607,5.741278,-2.448528,4.561171,-5.256024,2.560457,1.971516,9.222114,1.867363,2.369860,-3.934345,3.095250,9.329010,0.359476,-3.342944,6.143919,7.227805,1.571715,-5.605267,-3.475051,8.946312,8.237584,3.791428,-6.283383,0.708838,5.480370,-4.428456,-3.190687,-3.537334,5.319655,8.728996,-0.174885,-0.151281,-0.929922,-6.420200,0.541847,-0.077218,1.978409,-3.534176,5.903156,9.411831,2.007408,8.211184,5.820297,-8.264038,-7.068591,-8.880283,-0.644510,1.734131,1.834599,6.962444,5.799456,-0.496030,5.331598,-3.329129,-2.611876,-0.282331,-4.466369,1.238583,1.522116,-0.170681,4.768889,-6.595854,4.042433,-3.626767,-6.400704,-5.022872,-4.981560,-0.251604,7.459835,-0.541890,-6.650685,9.470530,-6.940973,5.466083,-0.366860,7.206147,-5.220932,-8.396951,4.726131,-2.408398,-0.368707,-5.285871,5.789592,9.900296,4.773647,-9.106747,-6.881782,-9.768434,5.260661,-1.599623,-0.731856,9.493907,-5.325272,-0.898876,5.924777,3.087714,9.942063,-6.212490,-7.453265,4.831537,2.498176,2.634869,-3.312959,-4.140300,4.449903,0.080903,-4.950389,-6.651279,-0.875596,5.226447,-2.982153,-0.426884,-2.835805,-9.102615,-5.343077,-7.974579,-3.378919,2.725060,-2.252742,-4.111728,-8.494795,6.345702,-3.669665,2.666122,-1.604968,-9.920863,3.695418,9.963005,4.633287,-4.219246,5.584494,1.235177,2.314675,-1.665073,-2.235043,4.861397,2.598266,-7.415548,0.016937,-6.023282,-1.997792,-4.210648,7.335027,0.695110,2.618930,-4.102760,-8.918757,-7.940728,-4.251436,0.285286,5.275503,-6.079985,1.227861,6.516276,-8.539494,5.429044,-7.836910,1.092194,6.606913,6.139466,-3.023908,7.476373,7.947096,-5.413402,5.187929,2.744599,7.781203,6.997443,-9.408112,0.178452,-0.526382,8.148883,-7.948199,0.642226,2.206820,-2.812603,-3.631704,-2.608356,-4.609947,-6.321365,4.396869,-0.412986,6.907615,6.638104,-6.429488,-6.027275,3.713622,-5.991903,-5.697873,4.062369,-1.178700,-8.092282,-1.140428,-0.844809,3.728860,-5.417815,-0.308375,1.067181,-0.919802,4.225029,8.999541,8.421138,8.455016,-5.830589,8.715550,2.819753,-3.444030,3.102008,2.932803,1.015545,-1.591019,1.137987,-7.891057,-0.558235,4.251095,-9.882201,0.372436,-9.209143,0.155124,1.773890,-8.084096,-6.956428,-1.458134,1.322119,8.292265,-5.794293,-0.884371,8.376762,0.184855,6.615629,9.267393,0.131101,-6.569393,-5.623345,0.826660,-6.075534,-8.524586,-1.022754,-4.625548,-4.001558,-5.127616,9.231651,-1.701903,1.219459,-6.818218,7.962489,-8.646717,2.788679,-0.058684,-5.709068,8.439991,4.583476,0.057305,-7.488634,-4.848606,-1.835738,4.440336,3.363195,-1.808969,6.569526,-1.488057,-9.758725,-1.912333,9.907543,9.781102,-4.084091,-1.603544,8.600318,5.790691,-6.605100,-7.646543,-7.110099,-7.772981,-1.740706,-8.592079,-1.256123,-1.938124,-7.310823,-9.728050,7.047091,6.972295,-8.792589,0.641037,-9.509721,4.289884,-0.649573,7.980707,0.284134,2.603174,-9.785281,-8.678209,-1.580218,4.013494,5.317071,-6.594469,-2.222577,-2.910442,2.244377,-1.141389,-2.776073,-4.843375,8.689082,0.944477,-4.509692,-0.155587,-0.043239,6.634951,4.151103,2.549695,-0.506966,1.334370,-0.555302,7.972483,-0.967907,6.744006,8.554879,9.008128,2.792049,7.983859,2.249187,-5.552367,-2.291792,-4.094309,-3.248403,-7.813491,2.970737,7.914347,2.389096,-5.166869,-7.213164,-4.728180,3.784415,0.012377,-9.684880,-6.214484,-9.597996,-1.286200,-5.512828,3.821984,-0.014315,1.715906,4.934403,0.064773,0.274987,-9.555096,3.422524,8.062506,7.808106,4.162544,-7.677078,7.798485,-6.451827,1.443216,0.171326,-3.242673,6.186453,5.964619,-5.826817,7.535033,-4.969248,-6.009402,2.189537,0.654387,-5.144678,-1.633393,-0.352348,2.522073,4.968769,-2.765577,6.519032,2.402019,-9.405708,-8.639011,8.306180,1.533735,8.724044,-2.783727,5.135765,8.259400,-0.026521,-7.591280,-1.058329,-2.330862,8.967228,-8.518113,8.012584,0.882429,-0.085209,-5.065012,4.781356,-0.586610,8.492122,6.672048,-2.723490,-0.640484,1.202873,8.858734,1.241339,5.070825,-0.948657,4.829452,6.645857,-8.203848,-1.681847,-0.437262,-7.140464,6.083488,2.317024,-0.463152,8.568611,-8.372977,-4.671722,-1.032316,9.534130,-9.184017,0.855033,6.252302,-8.090916,9.296419,5.031996,-8.303917,-1.611376,3.579426,6.942408,7.748243,5.553248,5.983260,3.225939,4.133512,5.681652,5.409089,4.685542,-8.526193,-5.617052,9.832334,9.569466,0.509842,5.860940,0.116639,-5.758017,9.857837,-0.823573,0.551253,0.052165,5.831001,-4.561172,4.197527,6.387909,2.126852,6.407764,9.308996,9.714895,-2.236132,-9.415351,2.403647,-0.362030,-4.062047,0.998222,8.128001,-5.405847,8.211656,9.722053,-8.910957,-3.705223,-2.351298,-4.922189,-5.590958,-3.764455,-9.914751,-1.505729,9.957264,2.344383,-6.885508,-3.405708,5.329775,-8.382172,0.315974,7.358568,-0.643313,-3.051395,-7.007776,6.472268,-0.416434,9.093208,-7.008286,-3.634651,3.130813,3.944632,-6.064094,6.038015,-9.249514,-6.807050,7.694505,7.058254,-0.383109,-5.693505,3.408654,7.086455,7.825515,-9.361772,3.323832,1.864237,-5.358492,-5.450592,-0.703595,-9.975307,6.714975,7.790046,9.327890]], dtype = "float64")#candidate|5310|(1, 1620)|const|float64
var_5311 = relay.var("var_5311", dtype = "int64", shape = (8, 24))#candidate|5311|(8, 24)|var|int64
call_5308 = relay.TupleGetItem(func_730_call(relay.reshape(var_5309.astype('float64'), []), relay.reshape(const_5310.astype('float64'), [15, 12, 9]), relay.reshape(var_5311.astype('int64'), [192,]), ), 1)
call_5312 = relay.TupleGetItem(func_735_call(relay.reshape(var_5309.astype('float64'), []), relay.reshape(const_5310.astype('float64'), [15, 12, 9]), relay.reshape(var_5311.astype('int64'), [192,]), ), 1)
output = relay.Tuple([call_5297,call_5308,var_5309,const_5310,var_5311,])
output2 = relay.Tuple([call_5298,call_5312,var_5309,const_5310,var_5311,])
func_5314 = relay.Function([var_5309,var_5311,], output)
mod['func_5314'] = func_5314
mod = relay.transform.InferType()(mod)
mutated_mod['func_5314'] = func_5314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5314_call = mutated_mod.get_global_var('func_5314')
var_5316 = relay.var("var_5316", dtype = "float64", shape = ())#candidate|5316|()|var|float64
var_5317 = relay.var("var_5317", dtype = "int64", shape = (8, 24))#candidate|5317|(8, 24)|var|int64
call_5315 = func_5314_call(var_5316,var_5317,)
output = call_5315
func_5318 = relay.Function([var_5316,var_5317,], output)
mutated_mod['func_5318'] = func_5318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mod.get_global_var('func_3450')
func_3451_call = mutated_mod.get_global_var('func_3451')
call_5339 = func_3450_call()
call_5340 = func_3450_call()
func_2714_call = mod.get_global_var('func_2714')
func_2716_call = mutated_mod.get_global_var('func_2716')
const_5395 = relay.const([[-0.104710,9.746622],[9.499755,1.938913],[-2.995254,8.583528],[-0.140306,2.743174],[2.543433,-9.818434],[-1.180818,5.918439],[9.685145,-8.475617],[-8.242219,-1.553355],[-3.936193,6.666522],[-5.398024,-1.780725],[8.491687,-2.811905],[-6.051789,-5.669049],[2.534647,1.786440],[6.694252,-8.880495],[6.229070,-6.663494],[-4.754994,-2.875840],[6.015990,-7.734438],[-8.422308,-8.175670],[-3.433489,-7.628856],[-5.020292,-7.257630],[1.938445,9.411136],[4.241520,-0.141353],[-5.570135,-8.231468],[3.458834,-1.615588],[-4.280398,-7.635828],[8.445251,-2.756193],[1.735724,-1.451971],[4.600585,-4.847715],[-0.882836,-8.489487],[5.627621,-4.276722],[1.350812,-8.701046],[-8.010445,6.842214],[0.082474,5.586880],[-7.868745,4.455395],[-8.948443,-2.124330],[-3.384019,0.792427],[-7.087035,-2.938177],[-9.899209,-8.993203],[4.513169,-0.808298],[8.099764,2.091082],[9.956499,9.065774],[-8.867339,-0.389115],[5.325508,7.258989],[2.713341,-1.411356],[-1.537237,7.445078],[-9.498680,-0.501381],[-3.357883,0.657185],[2.040946,-0.818071],[5.486612,-3.554034],[-9.196725,1.148175],[8.336883,-1.119480],[9.359725,9.384825],[5.792230,-3.840644],[-2.182448,-5.476750],[2.901548,-6.473946],[-3.822580,2.414897],[-9.464241,8.257468],[-5.409005,-5.732134],[7.382764,-8.248835],[-9.778642,-4.658091],[-6.660461,1.604198],[-3.401937,6.482536],[9.518549,-4.557563],[1.814414,4.040894],[0.529294,-6.895570],[0.973022,-7.008375],[1.769072,9.804894],[-9.377947,-5.390161],[-9.004057,9.382777],[2.280342,-7.822130],[-3.239843,-2.226393],[2.531272,2.933251],[-7.544209,-9.277912],[0.735067,9.402373],[-4.474085,-5.660176],[-0.538231,7.414026],[-9.345360,2.082956],[-6.907789,-8.866549],[-7.069198,-9.303729],[-9.681364,4.899392],[4.659032,2.859088],[-3.121369,-5.428097],[1.073882,9.994193],[8.773534,9.649540],[5.532507,1.332434],[-4.461873,-2.841129],[-3.629553,-6.242837],[-8.719492,0.281186],[-9.955215,-7.690308],[3.553786,3.476652],[6.535783,1.985920],[7.132183,-5.963954],[4.037121,-7.359897],[8.329547,9.714347],[0.101491,3.235829],[2.370782,-2.947240],[0.590920,-8.228449],[6.712027,1.643771],[-1.430923,6.883365],[6.028175,-1.935751],[6.394346,0.317707],[8.917528,-9.346226],[-3.689574,-3.459652],[-4.566002,7.018076],[-9.689646,2.497056],[1.442039,-9.985367],[1.378525,-3.019696],[-2.744846,0.933588],[0.999167,-9.916562],[3.836305,-3.212605],[-1.099869,2.219711],[3.331596,-7.459791],[-2.193620,9.617169],[1.051707,0.905983],[4.695476,5.082976],[-5.727198,1.808352],[6.855409,-1.438863],[-9.767390,0.662443],[-4.256428,8.822723],[0.252413,1.296757],[4.853876,-3.075862],[-1.183249,6.050545],[9.022488,0.823236],[-6.499983,4.921080],[4.943084,-7.049760],[-1.261931,-4.629866],[9.543693,-3.988526],[-8.606406,-0.488757],[-0.191892,-4.070074],[0.756875,-8.760225],[-6.594070,-9.013301],[-5.600487,8.811513],[-4.570866,7.947193],[9.688646,4.340803],[-6.730634,8.587358],[4.334078,-9.002318],[-3.288966,-9.931971],[0.195438,-3.685020],[5.958232,-4.588755],[6.226801,7.323282],[5.526297,-5.198881],[-0.098965,7.586465],[-0.302701,9.907125],[8.733024,3.117635],[-5.241627,0.967003],[3.127182,-4.113187],[-5.858638,-2.203369],[-9.466229,5.133622],[1.199707,-3.457585],[1.437752,-7.082182],[-0.122523,6.470927],[6.752094,-6.166948],[4.940954,0.155901],[9.108282,3.967409],[-6.600327,2.515024],[6.819758,2.562618],[6.636986,-2.986031],[9.182520,-6.417893],[0.739423,3.688734],[-5.246239,-6.189967],[0.123044,-9.879055],[6.825748,8.956868],[-1.966527,-2.922883],[2.373083,-2.671890],[6.364063,-0.621840],[5.250086,0.611115],[-4.782079,8.368049],[-1.415424,-4.639547],[-1.494147,-8.261537],[-9.744578,3.619590],[8.671592,-5.308649],[1.284034,2.484942],[-7.494181,-6.039943],[-0.306771,-6.771471],[-3.779417,2.992019],[2.240908,3.511146],[4.902991,-5.327099],[3.885041,-6.008314],[5.282494,0.453113],[8.730050,-7.740526],[-1.325702,9.267573],[-3.757864,-5.148645],[9.414630,9.710513],[7.455290,-5.801910],[-7.374169,8.494837],[5.878799,-3.868530],[-5.725471,1.888073],[-9.403620,5.783723],[-5.678320,1.340270],[-5.214740,-9.355669],[-0.789757,8.489079],[-2.534491,-0.965246],[-3.750103,-5.682044],[7.344495,-1.491989],[-6.490459,3.662686],[7.690282,-6.040025],[4.706019,-8.978409],[1.370212,7.062504],[-3.198173,1.697750],[7.526969,-2.157943],[9.851299,6.046735],[6.935233,3.071311],[3.013034,3.200315],[1.166378,1.901250],[7.367534,4.827818],[-9.595965,-5.131537],[4.776603,2.486401],[2.818453,-8.301668],[-9.559541,9.637666],[3.389577,5.754242],[6.280406,-0.123874],[-4.483480,9.428719],[0.879750,-3.886268],[-2.203150,9.020948],[5.829863,-5.691727],[-2.106707,0.083523],[-8.424819,-6.811215],[5.733361,-0.363779],[-0.776733,-3.345573],[-5.314176,6.683002],[-8.751074,2.764000],[-6.053998,-2.001879],[5.012017,5.979262],[4.372112,-8.290179],[5.398998,8.008045],[6.829578,-8.484839],[-9.639731,-1.216198],[-3.877543,9.136342],[-4.771310,4.275863],[8.758259,-7.120606],[-8.473079,-3.844391],[-6.795441,8.925712],[8.098420,8.332194],[1.427150,6.433729],[-7.770325,-2.859455],[0.070087,6.861283],[2.975517,-2.145987],[-3.659177,9.608636],[-5.345252,-1.740528],[0.451093,6.425634],[-8.155417,1.541960],[-6.187443,-8.819985],[-5.759670,1.923404],[-4.880216,8.868947],[-8.175907,-1.864951],[-1.980658,3.514428],[8.304933,-9.925818],[-1.100571,9.465436],[-7.134102,-4.237042],[6.959794,3.510944],[0.447262,3.986141],[7.220476,0.007567],[1.275630,-1.317870],[-8.598054,-0.887062],[2.552274,-4.203085],[-2.292213,-9.577587],[-9.030504,2.996925],[4.795438,6.732295],[-2.257994,-3.974632],[-8.397025,6.564535],[6.091737,5.527823],[6.208639,8.061101],[-0.002011,-2.795752],[-7.848383,2.662828],[7.434603,-2.515128],[5.500205,-6.648951],[3.079461,2.464135],[-9.228578,1.302163],[-6.778412,4.345878],[-4.902525,-6.871192]], dtype = "float64")#candidate|5395|(270, 2)|const|float64
call_5394 = func_2714_call(relay.reshape(const_5395.astype('float64'), [9, 5, 12]))
call_5396 = func_2714_call(relay.reshape(const_5395.astype('float64'), [9, 5, 12]))
func_2037_call = mod.get_global_var('func_2037')
func_2040_call = mutated_mod.get_global_var('func_2040')
const_5401 = relay.const([7.152489,7.253100,0.865014,8.198358,-0.699979,-4.913263,-2.849793,-8.671802,3.313177,-1.945128,2.179708,1.162209,5.758349,6.168389,-0.066500,-5.809622,5.139793,-1.576725,-5.058814,3.978836,-2.449322,2.006599,8.339034,0.097901,8.196003,1.450310,8.954767,8.574260,-3.892396,-6.391615,0.771468,-9.232245,-9.737074,-3.793074,-7.061131,-0.799026,2.546882,8.801892,1.887210,-3.953489,4.848703,-3.055465,-9.293585,7.423694,-9.389332,-7.964091,-7.706888,-5.420083,1.006583,8.417183,-0.082688,-4.084549,-8.028790,-8.720964,-5.344426,-9.556960,5.707353,1.950148,-2.319097,-1.562026,-9.010012,7.194413,7.305319,0.363943,-7.115190,-5.819002,-1.392885,-6.814773,4.271207,8.398367,8.379849,8.743191,-5.948656,7.008343,5.835463,5.415517,-7.468874,-5.395326,-0.264663,-8.106936,-7.808161,6.597487,0.505188,4.603815,8.447001,7.736544,-1.112269,9.032474,5.832500,-7.625280,-4.522083,-8.498591,-6.713159,-9.184651,-7.975124,0.976188,9.498164,-4.196495,-7.165321,4.811222,-6.051621,9.736142,5.161581,4.424940,2.256829,1.168552,3.998194,-0.742313,-2.713636,-9.577930,0.306241,-7.354765,-7.825799,4.240366,-3.024371,-3.304819,2.119461,-0.581041,-2.550714,3.995631,0.978867,5.116233,-4.319986,-5.389877,-1.152342,-9.210872,-7.452843,4.803507,2.908891,8.874795,2.886380,-5.457184,7.045366,-0.772221,-8.683167,4.940716,-6.552599,-3.517234,-2.471353,-1.507044,9.499823,-9.420058,4.760242,-1.159504,6.894446,-7.457426,-7.732972,2.394882,9.351975,0.316531,-5.973971,4.095567,-2.244047,9.961885,-3.680833,4.220870,-8.880372,8.367451,7.982764,-2.944983,-7.376210,-7.198071,0.407654,-4.893586,1.542654,-2.211277,8.382931,-6.575960,3.514485,-7.579378,4.552962,9.085159,-7.465770,8.845499,8.799137,-9.817294,3.405411,-5.932190,-0.822125,8.699440,-8.030799,5.060336,-7.624115,9.368023,-6.161941,8.876608,-1.093313,2.845457,-6.993187,-1.860075,0.587248,8.970903,2.354725,9.635811,-3.405378,5.060118,6.242279,-8.085398,6.998701,8.991690,-6.077911,8.156797,-5.189619,4.720767,-3.812026,-6.701511,-4.189887,-8.893335,7.349605,8.593783,-7.343473,-0.467070,-9.757216,6.328115,1.536206,7.737749,-7.859079,-6.027775,7.669108,5.829222,0.146533,5.951816,8.137604,-8.549429,-8.089258,-0.971868,-5.304254,-0.684573,-9.620069,-5.534867,-3.356026,9.609994,8.683824,1.663810,2.251314,-6.062837,-1.244632,-3.685566,5.575436,-2.252214,-7.869466,-0.560454,-5.060546,4.224353,4.673876,-5.467358,2.634121,-9.525903,9.637039,-4.156711,-4.672115,0.810007,-5.451106,-2.020971,-5.982588,8.680679,5.407295,-3.209337,-7.617475,-4.847431,0.480331,-5.307181,-3.331821,6.247159,-7.072834,-4.687067,-3.725817,-2.596376,7.191969,-9.803873,3.945574,6.231578,-9.471369,-7.634186,4.820270,-4.752685,2.905153,-8.884384,3.075286,6.956390,5.065009,-1.029369,-1.446201,-7.198571,0.043802,6.270923,9.454922,8.617425,-5.946957,-5.178971,8.226481,1.397876,1.811685,-8.713810,4.765116,5.739544,-7.627055,6.151810,-6.080850,-1.771515,-9.206312,-6.582345,-8.383489,3.586628,-9.362567,0.472042,-7.757083,-8.415607,-9.615385,-4.600100,4.354781,-7.340948,7.671610,-8.067246,0.271254,1.221704,-1.480977,2.374050,-9.626683,-8.499624,2.793453,-9.465224,-2.262620,0.304349,6.087250,-2.262171,1.025755,-1.406417,-8.636304,-1.153594,-1.636617,-4.936762,-9.523511,3.673972,-5.913228,7.594280,1.275370,-0.110803,-6.502174,-5.245187,5.466484,-1.785185,4.314708,-3.005321,6.207578,-3.311656,-5.948262,8.594690,-6.617380,1.973111,-3.654861,-8.508110,-4.291884,6.105564,0.272247,0.699356,-9.735492,1.992838,-7.255973,-5.398862,1.326029,3.343697,6.159239,-2.574103,-4.826985,-3.124141,-3.875326,-2.151615,0.531699,0.225649,-1.127652,-0.686888,9.103023,-9.763961,4.494466,0.682288,7.248639,-9.331479,2.875423,4.168485,1.321032,-1.468989,-3.003241,-1.710660,-2.333422,-6.409147,-9.245303,-2.607427,9.889695,-6.774773,3.403187,4.212385,-8.629063,2.710085,-9.168670,0.443059,-5.456865,4.254782,2.445585,3.343052,4.731104,-9.289870,-7.523270,0.568154,2.998393,-4.374608,-4.946755,-5.664285,4.090881,-6.977765,-3.851561,1.905466,-3.474243,2.416553,4.521890,1.854858,9.994341,-5.812108,-2.918337,8.114178,5.019332,-7.977582,1.566216,6.800475,-8.660102,-5.105233,8.049149,-3.254058,-1.876001,1.050577,-8.568856,-3.936885,-1.587115,7.708745,3.607479,5.019775,-7.759465,-4.116204,-9.537785,-1.304483,0.901187,3.356260,8.429843,-4.334836,5.269425,6.814461,8.417634,7.218253,-1.830629,-8.769474,3.111876,5.034420,-5.762408,6.943669,0.910308,9.401770,-4.387993,9.142987,-4.611176,0.238286,-2.085420,3.362276,7.292290,8.506410,2.391580,4.734385,8.298567,-7.261855,-0.349648,-2.805231,-8.212813,-3.394521,-7.551560,-1.442255,-3.036396,1.353667,-0.112295,-9.009898,2.150584,1.759255,5.362575,-7.278891,3.186376,-6.212744,-8.180357,4.185801,5.804274,-3.148211,-3.144561,-4.528370,-6.846640,0.212502,3.563001,-2.899948,5.681194,5.846410,-7.659170,-4.725860,1.913440,6.346624,7.897029,-1.040668,3.872773,8.108353,3.529681,-8.461880,4.690247,-5.981848,3.809015,8.096396,-9.326681,8.316182,-8.716839,0.831353,9.035048,-1.594122,3.169125,3.340047,6.663822,-0.956585,-0.791460,-3.771593,-1.332529,-3.241109,-6.566721,4.495788,4.779221,6.396770,-3.575671,6.483916,-7.833746,-0.480239,-1.641887,-8.533897,-7.077960,-3.381799,3.009877,-4.273271,3.946228,4.882467,6.764644,-1.035174,2.218951,-7.530484,-8.812227,5.247305,8.709997,2.177322,5.748887,9.378392,-6.509756,3.763616,6.808289,-2.188716,-3.703410,-3.115996,-5.893664,-0.228573,-0.524378,7.151361,-6.849275,8.594473,-2.704723,0.495827,-5.640314,-0.996777,-4.257704,-0.391441,2.214165,-1.971388,-8.368656,2.815790,-9.364280,8.416710,4.714620,1.619026,4.714400,0.028924,1.715792,-4.879751,-6.786484,3.317487,-4.181313,-8.213427,-7.318285,5.896539,7.249398,7.669263,6.602237,-9.231147,7.326610,-4.868437,2.562860,-6.860331,3.627393,-2.663303,5.139338,-3.090357,-1.750605,-7.228788,-7.462114,9.457798,-6.778852,6.249184,4.732820,-7.832753,5.998111,-1.687178,3.864424,-8.839154,4.579115,-5.408403,-8.628306,-7.166741,4.472527,1.514053,-2.935710,3.708298,7.997448,-7.905347,-6.045890,0.057732,-8.037593,-1.137222,-0.024470,-3.530231,-1.801450,3.032655,3.428374,3.948675,-7.879354,-1.472246,5.425663,3.563403,-7.902929,-2.939424,0.407240,1.201295,8.743664,6.741229,-9.027940,9.119666,-0.422112,0.015830,-8.380632,-0.132428,4.913555,1.373634,-4.831970,1.706665,3.661721,0.178447,2.769856,-5.557310,3.207660,-4.440661,8.843711,-4.617464,-2.280603,8.157408,-5.574658,9.498004,5.828291,-4.783891,-1.019037,-4.603901,6.746365,-0.134475,-3.662169,5.660527,-8.829615,3.885399,3.496992,0.539548,4.716021,-5.090622,-9.003433,4.179912,1.636883,8.889725,0.734132,6.353509,4.110176,1.149729,-6.583980,4.024929,8.542354,-9.295221,-5.578954,-0.191990,-9.950342,3.126433,4.919183,-2.705747,5.481742,-1.342268,-5.272641,4.268145,0.615030,8.838133,-5.442771,-7.126592,-1.934526,-7.188245,-8.230721,-0.952268,-0.822164,9.512045,3.640080,-7.280673,8.597466,2.170505,-2.168765,4.542971,-8.712168], dtype = "float64")#candidate|5401|(715,)|const|float64
const_5402 = relay.const([-2,9,-1,3,-8,-4,-2,7,1,6,-8,9,4,10,-8,6,-1,2,-9,-1,-6,4,-6,-6,2,6,-7,-5,-9,-6,7,9,-7,2,-5,-3,-10,1,-7,10,-8,-3,-3,8,1,-1,4,-8,8,-6,-3,-4,-3,-8,1,-2,-6,4,1,-3,3,-3,-1,-9,9,2,2,6,10,-8,3,9,-6,1,4,2,-6,-8,5,8,1,-7,-5,-10,6,7,9,9,9,-5,-3,-2,-1,8,8,-10,-5,3,8,6,-3,-3,8,-10,-1,-2,1,5,-6,7,-10,-4,2,6,1,5,-6,-6,10,3,-10,-8,-1,-2,10,1,-6,5,-2,-9,-5,-7,-5,-7,-1,-6,7,2,1,-3,5,10,-10,-1,-8,-3,7,7,-5,6,-7,6,8,-10,-4,-9,10,2,4,10,6,-8,5,4,10,-5,2,-10,9,-9,-6,4,8,4,9,-8,9,-7,-9,-6,9,-5,3,1,-7,5,-1,-9,-4,4,9,10,8,-4,-6,-6,-2,-8,-8,6,-3,1,1,6,-5,1,-2,3,8,-7,-8,3,-5,4,2,-3,3,1,-5,9,7,5,-3,-1,6,7,-2,3,-9,-5,6,-8,-1,3], dtype = "int32")#candidate|5402|(234,)|const|int32
call_5400 = relay.TupleGetItem(func_2037_call(relay.reshape(const_5401.astype('float64'), [5, 11, 13]), relay.reshape(const_5402.astype('int32'), [234,]), ), 0)
call_5403 = relay.TupleGetItem(func_2040_call(relay.reshape(const_5401.astype('float64'), [5, 11, 13]), relay.reshape(const_5402.astype('int32'), [234,]), ), 0)
output = relay.Tuple([call_5339,call_5394,const_5395,call_5400,const_5401,const_5402,])
output2 = relay.Tuple([call_5340,call_5396,const_5395,call_5403,const_5401,const_5402,])
func_5409 = relay.Function([], output)
mod['func_5409'] = func_5409
mod = relay.transform.InferType()(mod)
output = func_5409()
func_5410 = relay.Function([], output)
mutated_mod['func_5410'] = func_5410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5447 = relay.var("var_5447", dtype = "uint8", shape = (15, 11, 11))#candidate|5447|(15, 11, 11)|var|uint8
var_5448 = relay.var("var_5448", dtype = "uint8", shape = (15, 11, 11))#candidate|5448|(15, 11, 11)|var|uint8
bop_5449 = relay.less(var_5447.astype('bool'), relay.reshape(var_5448.astype('bool'), relay.shape_of(var_5447))) # shape=(15, 11, 11)
uop_5464 = relay.log10(bop_5449.astype('float32')) # shape=(15, 11, 11)
output = uop_5464
output2 = uop_5464
func_5466 = relay.Function([var_5447,var_5448,], output)
mod['func_5466'] = func_5466
mod = relay.transform.InferType()(mod)
var_5467 = relay.var("var_5467", dtype = "uint8", shape = (15, 11, 11))#candidate|5467|(15, 11, 11)|var|uint8
var_5468 = relay.var("var_5468", dtype = "uint8", shape = (15, 11, 11))#candidate|5468|(15, 11, 11)|var|uint8
output = func_5466(var_5467,var_5468,)
func_5469 = relay.Function([var_5467,var_5468,], output)
mutated_mod['func_5469'] = func_5469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2691_call = mod.get_global_var('func_2691')
func_2693_call = mutated_mod.get_global_var('func_2693')
call_5481 = func_2691_call()
call_5482 = func_2691_call()
uop_5483 = relay.acos(call_5481.astype('float64')) # shape=(16, 2, 5)
uop_5485 = relay.acos(call_5482.astype('float64')) # shape=(16, 2, 5)
output = relay.Tuple([uop_5483,])
output2 = relay.Tuple([uop_5485,])
func_5496 = relay.Function([], output)
mod['func_5496'] = func_5496
mod = relay.transform.InferType()(mod)
mutated_mod['func_5496'] = func_5496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5496_call = mutated_mod.get_global_var('func_5496')
call_5497 = func_5496_call()
output = call_5497
func_5498 = relay.Function([], output)
mutated_mod['func_5498'] = func_5498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5499 = relay.var("var_5499", dtype = "float64", shape = ())#candidate|5499|()|var|float64
var_5500 = relay.var("var_5500", dtype = "float64", shape = (15, 1, 4))#candidate|5500|(15, 1, 4)|var|float64
bop_5501 = relay.divide(var_5499.astype('float64'), var_5500.astype('float64')) # shape=(15, 1, 4)
output = bop_5501
output2 = bop_5501
func_5505 = relay.Function([var_5499,var_5500,], output)
mod['func_5505'] = func_5505
mod = relay.transform.InferType()(mod)
var_5506 = relay.var("var_5506", dtype = "float64", shape = ())#candidate|5506|()|var|float64
var_5507 = relay.var("var_5507", dtype = "float64", shape = (15, 1, 4))#candidate|5507|(15, 1, 4)|var|float64
output = func_5505(var_5506,var_5507,)
func_5508 = relay.Function([var_5506,var_5507,], output)
mutated_mod['func_5508'] = func_5508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mod.get_global_var('func_3818')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_5566 = relay.TupleGetItem(func_3818_call(), 0)
call_5567 = relay.TupleGetItem(func_3820_call(), 0)
func_4335_call = mod.get_global_var('func_4335')
func_4337_call = mutated_mod.get_global_var('func_4337')
var_5585 = relay.var("var_5585", dtype = "uint32", shape = (132,))#candidate|5585|(132,)|var|uint32
call_5584 = relay.TupleGetItem(func_4335_call(relay.reshape(var_5585.astype('uint32'), [33, 4])), 5)
call_5586 = relay.TupleGetItem(func_4337_call(relay.reshape(var_5585.astype('uint32'), [33, 4])), 5)
output = relay.Tuple([call_5566,call_5584,var_5585,])
output2 = relay.Tuple([call_5567,call_5586,var_5585,])
func_5593 = relay.Function([var_5585,], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5594 = relay.var("var_5594", dtype = "uint32", shape = (132,))#candidate|5594|(132,)|var|uint32
func_5593_call = mutated_mod.get_global_var('func_5593')
call_5595 = func_5593_call(var_5594)
output = call_5595
func_5596 = relay.Function([var_5594], output)
mutated_mod['func_5596'] = func_5596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3425_call = mod.get_global_var('func_3425')
func_3427_call = mutated_mod.get_global_var('func_3427')
call_5615 = func_3425_call()
call_5616 = func_3425_call()
output = call_5615
output2 = call_5616
func_5619 = relay.Function([], output)
mod['func_5619'] = func_5619
mod = relay.transform.InferType()(mod)
output = func_5619()
func_5620 = relay.Function([], output)
mutated_mod['func_5620'] = func_5620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3649_call = mod.get_global_var('func_3649')
func_3650_call = mutated_mod.get_global_var('func_3650')
call_5621 = func_3649_call()
call_5622 = func_3649_call()
func_5466_call = mod.get_global_var('func_5466')
func_5469_call = mutated_mod.get_global_var('func_5469')
var_5633 = relay.var("var_5633", dtype = "uint8", shape = (605, 3))#candidate|5633|(605, 3)|var|uint8
call_5632 = func_5466_call(relay.reshape(var_5633.astype('uint8'), [15, 11, 11]), relay.reshape(var_5633.astype('uint8'), [15, 11, 11]), )
call_5634 = func_5466_call(relay.reshape(var_5633.astype('uint8'), [15, 11, 11]), relay.reshape(var_5633.astype('uint8'), [15, 11, 11]), )
func_393_call = mod.get_global_var('func_393')
func_396_call = mutated_mod.get_global_var('func_396')
var_5645 = relay.var("var_5645", dtype = "float32", shape = (480,))#candidate|5645|(480,)|var|float32
call_5644 = relay.TupleGetItem(func_393_call(relay.reshape(var_5645.astype('float32'), [16, 10, 3])), 0)
call_5646 = relay.TupleGetItem(func_396_call(relay.reshape(var_5645.astype('float32'), [16, 10, 3])), 0)
var_5661 = relay.var("var_5661", dtype = "uint8", shape = (605, 3))#candidate|5661|(605, 3)|var|uint8
bop_5662 = relay.left_shift(var_5633.astype('uint32'), relay.reshape(var_5661.astype('uint32'), relay.shape_of(var_5633))) # shape=(605, 3)
output = relay.Tuple([call_5621,call_5632,call_5644,var_5645,bop_5662,])
output2 = relay.Tuple([call_5622,call_5634,call_5646,var_5645,bop_5662,])
func_5678 = relay.Function([var_5633,var_5645,var_5661,], output)
mod['func_5678'] = func_5678
mod = relay.transform.InferType()(mod)
var_5679 = relay.var("var_5679", dtype = "uint8", shape = (605, 3))#candidate|5679|(605, 3)|var|uint8
var_5680 = relay.var("var_5680", dtype = "float32", shape = (480,))#candidate|5680|(480,)|var|float32
var_5681 = relay.var("var_5681", dtype = "uint8", shape = (605, 3))#candidate|5681|(605, 3)|var|uint8
output = func_5678(var_5679,var_5680,var_5681,)
func_5682 = relay.Function([var_5679,var_5680,var_5681,], output)
mutated_mod['func_5682'] = func_5682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5686 = relay.var("var_5686", dtype = "float64", shape = (10, 1, 11))#candidate|5686|(10, 1, 11)|var|float64
const_5687 = relay.const([[[-1.806100,-1.839584,6.670711,-5.200858,-3.500151,9.215543,2.950507,9.670149,5.675473,-5.226084,9.227569],[-4.925014,2.767940,6.485374,-8.589979,-9.398843,7.566810,5.540174,-0.982052,-7.507030,8.419109,8.137093],[-5.730706,4.271516,-1.391601,1.545182,-1.568196,6.152786,-5.014137,-7.700969,3.575708,-8.192726,0.037242],[7.330189,1.737975,5.488156,7.866457,7.469266,6.566798,9.052289,-3.590603,4.110996,-2.910613,-5.349389],[0.853751,4.290579,7.685901,5.156624,2.016375,-8.567896,8.722301,3.198328,-3.539673,-5.770272,-4.344615],[-7.810933,5.116221,9.968647,-4.609025,-2.578374,-1.444108,-5.150654,6.108596,8.071134,-1.134518,0.542055],[0.439586,-9.172614,-1.966749,5.598703,-0.868581,4.367538,-6.596885,7.015670,3.306228,-1.067667,0.259810],[8.414526,7.930088,-5.907530,9.273075,2.677893,-4.500029,-4.772925,-1.849556,1.772017,2.859934,-9.780836],[4.424468,-6.687023,-2.543756,5.274890,6.127372,-5.324013,0.688558,-8.564773,8.308177,5.081048,3.835282]],[[-6.705204,7.197646,-1.135337,-8.797042,-6.198392,-3.259105,-0.416548,-5.286785,9.420612,6.746829,-3.596003],[-1.774698,5.820635,-1.574427,5.789090,-3.359670,5.568483,-0.859030,7.781184,1.692373,-3.016636,-3.169396],[-8.900592,-1.823500,1.086543,7.928934,-2.476716,-7.969380,8.614186,-6.770085,1.059152,-9.799503,7.777698],[-7.621589,-3.652949,-7.679462,-9.903651,5.058335,0.861697,-5.149969,4.415840,-7.983042,8.004918,2.932860],[3.061808,3.398161,9.405940,-9.207195,-5.850704,3.544012,-0.435705,-0.545722,-5.345271,0.561171,4.187732],[-5.744367,6.285147,2.484193,-4.043242,-4.435965,-4.220300,-8.118710,1.905709,-7.575411,3.236398,-4.430138],[-5.366569,-3.737558,3.834571,-6.437383,8.486212,6.346215,-6.368038,0.623625,-7.916671,-9.625965,-7.952194],[-3.165896,8.185190,1.831791,-0.083456,-9.287450,-9.670076,8.860690,-0.669119,8.614151,1.717714,7.414697],[1.684962,-2.225787,-0.295758,-0.855710,1.780873,-1.563439,-7.509053,7.540683,-3.782232,3.262647,4.285393]],[[-3.579611,-3.082101,4.825923,-6.573321,7.065237,-9.541883,6.481799,6.892862,9.164183,-0.968244,6.894480],[5.202615,0.340474,6.118549,5.072340,-5.281678,-5.452653,9.246671,-8.640933,-0.991687,1.546676,5.660120],[7.154462,-5.517279,1.399147,6.159793,9.661172,4.548761,-5.439783,2.174548,1.944509,4.766213,7.822695],[-1.447877,-8.504231,1.823603,3.191420,5.285826,3.533010,9.323332,-9.566441,-6.246627,7.853909,3.469467],[-3.591941,1.026323,-1.096821,2.868635,6.561556,5.077239,1.236301,9.959871,3.000872,9.631853,4.873788],[9.241320,0.824235,0.586771,4.782464,-1.446231,-9.397853,-6.126740,-6.494108,-9.620339,4.373354,-6.538454],[-5.033450,5.000594,-1.726828,8.778902,6.241892,6.988976,-9.660828,9.246969,9.374398,8.654962,-5.949321],[-3.774622,5.074494,-2.095216,-4.075124,3.380532,6.665630,-0.672096,-3.551937,9.363194,-3.514769,-0.428961],[8.844573,0.391593,-6.650688,-8.288647,-9.812461,4.651198,6.562909,-7.390815,-7.031487,3.548723,-5.971398]],[[9.744619,9.862009,-2.651906,-0.176141,-1.072845,-3.799346,-1.053383,-7.608596,7.104660,-5.791151,-6.234556],[2.355174,6.900858,2.897401,9.833165,0.133503,-1.404458,6.125928,-7.091213,4.886050,4.227094,-1.521776],[-5.513223,8.206004,9.018019,1.837557,0.865936,-4.696239,-5.974072,8.594656,3.575138,9.283689,1.502437],[-1.372186,-5.278052,-9.418733,-8.298612,9.279077,5.945618,-6.031718,-8.651511,4.302783,-2.980018,8.551164],[4.853909,-5.539185,4.062904,-8.744224,-8.103243,-3.377169,-0.805685,5.181917,-8.593815,-8.970454,9.881080],[-8.006015,-9.919753,9.485825,-5.158248,4.161005,-7.196019,-6.075501,7.655084,-8.143875,-1.747363,-9.952000],[-9.802645,8.094516,8.285810,-7.250140,-0.380260,-4.101574,-5.328895,-1.105463,-2.920064,-4.841431,2.458103],[-5.231267,9.215992,3.815140,-6.324549,7.699432,8.082949,1.017280,-0.236911,0.622123,-2.882155,7.286552],[7.376709,5.729462,1.082102,-3.145988,8.576121,-1.837821,-2.319812,-3.098125,9.587507,5.790256,-3.898480]],[[9.314353,-7.277544,4.985193,8.548001,-0.512327,-8.136001,-5.418078,7.675607,5.346327,-9.143291,-5.770413],[4.792295,6.822114,-7.696250,9.523371,6.189978,6.884699,2.179423,-4.003979,1.118466,8.559013,0.922381],[5.252449,3.049645,1.748691,-0.801008,-3.196835,-0.438913,3.597547,-0.903694,9.198433,4.701059,9.528790],[8.344568,9.224216,-8.594589,8.623527,1.551142,3.255048,3.532850,-3.492742,-9.869479,3.710733,-8.243794],[1.199690,4.263542,-0.765760,7.655065,0.704336,8.109237,7.622330,9.361634,9.406727,1.628245,2.166276],[4.567304,7.896834,-0.003952,-0.718365,0.904077,6.566629,-3.325204,5.894472,-1.447045,1.278044,-7.495731],[8.963684,9.086445,-5.391286,0.849329,3.155624,0.078157,-9.282420,4.807986,-7.348819,-9.117441,8.023897],[2.547077,-8.709426,9.324345,8.293746,-4.667295,7.934010,-9.319184,1.730840,-8.116978,-6.470502,4.909001],[9.684477,-8.938823,0.814127,-8.784754,8.309352,2.811550,6.563893,8.127531,-1.973005,0.154331,3.468084]],[[7.146692,-7.673902,3.343821,7.026660,6.982836,8.849693,-9.709555,1.103250,9.307049,-4.714653,-4.548725],[5.748665,8.054497,-1.023239,-3.353483,-3.031181,-9.863417,8.320368,0.687167,-2.257714,2.061411,-7.384583],[-2.220413,-9.919920,5.984091,-7.380803,-9.510644,6.857465,-3.704911,9.789940,-0.842871,-0.094057,-7.985872],[-4.448983,4.820366,-8.862640,0.290628,-6.826516,-2.291470,4.578840,-1.288373,-1.364270,-3.852174,-1.295806],[4.018475,9.013543,8.558928,-9.306576,1.856506,4.773727,2.997055,5.069941,9.289838,-7.477542,4.086544],[6.900371,1.706426,-7.607370,8.649252,-2.902818,-7.025716,-6.884617,-7.672505,4.137732,-7.852981,-6.283725],[2.028053,-7.821670,2.654151,-4.787933,-4.098570,-4.412555,9.701562,3.607481,8.273886,4.306460,6.198752],[4.288339,-7.985153,5.929908,-5.090555,-0.297082,-6.732611,-5.239235,3.997348,-9.986408,-8.730274,-5.264181],[4.008890,-6.697586,9.926875,2.274534,-7.245789,-2.404657,8.382761,4.793595,9.735550,0.267909,-8.607498]],[[-7.187902,8.219547,7.311960,8.525028,5.726986,-9.232744,-0.699659,-3.636153,-5.920488,-9.240818,2.475027],[8.575821,0.046579,4.393903,-5.305714,-9.584261,8.525029,3.645787,3.909555,-8.925604,3.526499,2.213051],[7.830313,5.706364,-1.576541,-9.835076,-7.120200,-3.502037,6.178727,-5.772606,8.640544,-3.243540,-4.786128],[7.165272,-4.577590,1.833036,-0.324156,2.083847,-8.796378,-8.206987,7.477286,-6.706192,-3.051082,8.266662],[-2.497771,0.799935,1.101122,0.197787,6.046874,2.910665,-2.299111,7.204102,6.038989,-1.255002,-1.060357],[-2.581717,-3.754431,2.366201,5.840738,-6.614608,-3.172959,0.545577,5.752757,-1.046400,-1.718284,-0.827874],[-8.997527,9.678353,0.438678,1.561835,-6.997842,3.574578,-1.340430,5.059098,5.219738,-1.992801,5.237504],[0.153289,-2.032389,2.130078,-1.225870,6.388131,-5.333991,-7.608834,7.153501,5.295203,-4.566089,-6.427490],[3.176160,-3.158278,8.906166,-8.906865,5.426496,0.139518,6.547971,-2.842242,-5.325516,-5.442520,-1.003825]],[[-2.960282,-2.335104,-1.488369,-9.443698,-5.755859,-3.788015,2.774054,9.669294,7.918926,9.549168,-5.718117],[1.368581,-8.700430,-5.428568,-1.977548,-4.145289,-3.626446,-0.846880,7.509241,7.136829,-8.536975,-4.457381],[3.292940,-4.993712,-2.117891,6.726603,-1.736107,8.583124,2.977442,-5.153969,9.134715,-0.706684,0.016620],[-1.424135,-3.989603,-4.771929,8.823898,-9.533230,-3.535331,2.545389,-6.611679,2.864296,-4.273459,-9.309304],[0.954376,9.666870,4.935428,-9.686014,0.955887,2.848249,4.755517,-5.572469,-9.813907,8.670898,1.770583],[-5.864878,-1.797288,0.267282,-5.830136,-9.452471,-8.942486,-4.718333,5.078941,-3.449294,1.375644,-3.584287],[-2.930361,-4.632001,5.891846,2.758525,-0.041437,0.446812,-7.124433,9.961090,-1.553846,-1.532999,-7.789244],[-9.682165,7.136209,-9.965100,-5.174681,7.168142,7.547886,9.360567,-2.199421,-2.777314,-0.566919,9.269085],[-9.752003,-3.441471,-6.481325,7.603809,0.512278,-0.711808,-7.723326,-5.480469,-6.985728,3.307313,9.129853]],[[-4.818402,-7.921486,-9.256974,-3.222764,2.899822,6.346415,8.240505,-0.468220,-8.441196,-5.666499,-0.846308],[3.552927,6.351691,0.235416,0.910599,-6.383268,-3.717664,-7.382018,0.751056,-4.978361,6.720318,-6.384312],[9.414498,5.309492,7.660375,-7.453917,2.629741,-0.126995,7.682316,8.548450,-2.816234,2.672906,-5.466184],[0.481158,-5.849225,-9.419487,1.472320,4.971972,2.469656,-5.032827,-9.749582,3.133861,-3.975435,5.702319],[0.482911,0.604754,-0.089943,-1.701482,-0.713619,-8.356113,1.799856,8.474613,-2.003138,3.574039,3.474378],[-8.447200,-3.460351,1.455838,1.501775,3.615289,-7.431007,-4.676125,7.775137,0.162307,-9.935735,-2.032059],[4.014950,1.232773,-7.677172,6.039110,-0.532128,-0.419411,1.875373,-5.425928,-9.728445,1.499833,-0.507490],[9.081171,-0.532956,2.170344,-4.663764,-7.228194,2.309414,8.422222,-5.223447,-7.525892,-4.301583,-2.536107],[-1.079685,-9.063399,-0.324162,9.839682,0.638000,-1.546898,-6.679050,2.834132,2.676503,-7.899927,6.655553]],[[0.570821,-2.038111,-9.085274,-9.050081,8.935856,0.788193,6.341876,6.992074,-2.377299,5.680564,8.376443],[3.356046,-9.835278,-3.484447,8.410115,7.879294,-1.906236,-6.901889,-6.674580,3.790590,-9.348908,-5.394763],[-1.724384,-1.168915,-7.398972,9.888495,1.230827,-8.564165,4.253582,-5.581530,-7.143082,8.473424,-0.345808],[-1.196731,-0.741543,-8.457036,-3.203117,-0.538674,-5.516626,-2.648069,-7.887540,-4.126651,-4.860615,-8.939687],[-2.976710,-8.602030,-6.138829,0.424711,-9.502913,5.199172,4.580561,7.377304,-6.960442,-4.522183,-3.771635],[-7.084498,-9.483571,4.483842,7.646372,-3.134569,-7.685067,9.510900,3.133934,7.662287,-6.017412,-8.241910],[-7.103563,3.167311,-1.503491,-9.221590,-8.549446,6.824914,1.231999,9.841534,-4.957784,-6.572369,7.732329],[0.300268,-8.376528,-5.387115,-5.769708,-4.829305,-6.771189,9.846599,8.814548,3.455364,-0.760366,-8.281070],[9.963455,1.765802,-2.502207,1.371644,3.436771,-3.016619,2.732810,-2.745468,2.512386,8.027201,-5.217574]]], dtype = "float64")#candidate|5687|(10, 9, 11)|const|float64
bop_5688 = relay.divide(var_5686.astype('float64'), const_5687.astype('float64')) # shape=(10, 9, 11)
output = bop_5688
output2 = bop_5688
func_5699 = relay.Function([var_5686,], output)
mod['func_5699'] = func_5699
mod = relay.transform.InferType()(mod)
var_5700 = relay.var("var_5700", dtype = "float64", shape = (10, 1, 11))#candidate|5700|(10, 1, 11)|var|float64
output = func_5699(var_5700)
func_5701 = relay.Function([var_5700], output)
mutated_mod['func_5701'] = func_5701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4002_call = mod.get_global_var('func_4002')
func_4003_call = mutated_mod.get_global_var('func_4003')
call_5727 = func_4002_call()
call_5728 = func_4002_call()
func_2231_call = mod.get_global_var('func_2231')
func_2233_call = mutated_mod.get_global_var('func_2233')
const_5730 = relay.const([7.620215,5.000153,-2.460843,7.830213,-0.774301,3.994135,-3.541205,-9.151887,-6.926363,-0.298815,-1.998545,-8.383480,-3.776142,5.060314,-3.942457,9.873943,-0.646459,3.457039,-0.944028,6.716492,8.082137,8.851749,7.534088,8.471708,-5.918312,5.266858,9.817688,-0.267219,-5.041938,-0.413603,-5.636814,-9.542770,-0.645617,6.898115,-1.870606,-4.263663,3.590952,1.767259,7.350082,-9.461039,-4.335065,3.737499,9.630011,-8.384931,6.995241,5.509872,-7.863309,-3.374168,9.823829,0.673531,2.554539,8.939894,-3.276212,3.016026,2.831615,2.197008,6.763168,-7.385619,-4.352809,-3.909438,0.200297,4.624398,6.714322,-6.150815,-6.776157,-7.370200,7.440758,-6.680041,-1.882152,-5.524106,-2.902832,5.667865,-0.785706,-6.357786,-0.987581,-5.476368,-6.744709,-8.706474,8.715602,-9.757813,-9.353316,4.305696,8.041196,1.859251,3.038900,8.899453,1.747051,5.885207,-9.519567,-8.048616,-3.903307,-3.350940,2.393012,-4.002592,-6.443523,-4.805844,1.942683,-7.644769,6.024616,-9.646643,5.227737,-7.057376,3.263591,-0.080166,-2.149608,-1.074199,4.904033,1.953404,3.282422,-6.607569,9.786071,6.846897,-5.709835,1.226639,4.959685,0.401636,4.129314,-4.851649,6.002917,0.217761,5.418553,2.227833,-0.109300,5.266506,-1.850498,2.505246,-1.193998,7.739649,6.604898,9.011921,-4.790032,9.730752,-4.119303,-0.931947,8.571176,8.495380,-7.544251,0.994652,-7.217585,-3.983214,-2.431107,-0.377073,-0.441827,-6.038585,-3.266163,8.213209,-1.094637,-1.782685,-1.765975,-7.967033,-0.972946,-2.150026,-9.252908,-7.903122,6.817488,-1.515173,-9.214933,-2.674635,-6.699067,-4.223897,-8.235780,4.394332,5.819779,-7.025308,6.028257,9.701380,-5.312675,-6.075574,3.682628,2.033664,3.677992,8.305293,-5.608195,4.227261,-3.870331,4.974855,0.615609,6.984978,8.734279,-6.256488,-7.467692,-4.041908,8.819703,-6.977347,8.670675,4.707423,2.014335,7.372339,2.589128,-7.665814,-2.592692,-5.165099,-7.731464,-1.490723,4.592745,-9.636143,-5.059896,0.743423,7.640323,0.183938,0.494378,-9.679244,5.065697,6.027101,-9.760495,-2.432597,2.284531,-5.899758,-6.451692,6.865491,0.675018,5.691947,6.655247,6.464636,-0.777165,5.197256,-3.371312,-7.618521,9.484271,-9.244812,4.972662,2.113767,0.686559,4.095058,-9.994729,-3.179451,-2.535693,-7.448820,-6.130156,2.880714,-1.554624,-6.463384,-9.874804,-0.287916,-3.090092,3.384988,8.361782,1.893161,-5.602016,-0.760017,2.917782,-0.632824,-6.288623,7.020735,-7.791460,-5.282167,-8.273024,2.031944,6.783281,-3.389869,-0.153805,-3.354155,-0.557488,4.910057,-6.900310,-8.691676,-9.548555,4.061634,0.826790,2.170270,1.682630,-6.009222,-8.743696,-4.886119,4.222055,-6.596601,-7.552498,0.108617,-7.600746,2.797351,-1.542963,-9.690236,-8.143568,0.252909,2.385152,-3.167975,-0.772900,-3.610299,-8.665586,3.362885,3.943074,-0.171933,-1.388787,2.156887,-2.261316,1.568123,-4.830529,3.218099,4.348699,-5.981873,0.554515,-6.149517,9.324651,-0.122107,0.346999,6.425614,0.335024,3.830622,3.307687,-0.601400,1.331375,-8.245479,-3.926900,4.000070,-1.111862,-6.769009,-2.712335,-3.987304,3.910781,1.408938,-8.174196,0.099480,-4.627504,9.549906,2.590029,2.924323,6.800169,-0.507407,7.569090,5.667141,9.185947,0.151874,-1.497303,4.896249,0.735543,9.774292,8.127656,6.818248,0.917983,0.676786,0.622107,2.888124,-4.525929,-3.340527,1.356356,-7.020325,8.883203,-9.894120,1.261201,2.345015,2.233875,-6.475323,4.116692,-2.445417,-1.356771,-1.288577,4.602602,-7.973803,4.453884,5.518985,-6.944390,-0.902262,-2.707946,-0.225036,-7.360769,-4.661147,-7.649101,1.535271,-9.293534,-8.774407,9.461263,-4.710767,-6.806244,3.723929,0.586481,5.786309,-6.767283,1.965135,-1.656325,-9.747572,0.776573,-3.500433,2.197419,-6.907665,-1.653459,-2.836988,6.643565,-9.548069,6.236534,1.548260,-3.904287,-9.411275,-4.317002,1.796367,2.080321,-5.069824,-2.106386,-6.104106,-8.320320,-3.953417,9.468656,-1.945189,0.059948,5.868488,-5.481598,-6.868066,1.808607,7.801148,-6.868867,-2.782886,-1.690237,4.563869,-9.854816,-9.023748,-1.991999,3.019491,5.152768,-1.411069,-7.102603,1.475105,-2.138855,3.165005,4.659905,-7.673306,-2.727832,3.237065,6.466145,6.111768,3.577005,-0.411982,-8.679822,5.876733,4.574800,5.934380,1.340299,1.723724,-8.829405,2.203157,1.307120,8.381834,2.029001,2.363703,2.433802,-6.152544,-6.797712,-6.213537,-3.949576,0.564358,4.533839,8.085859,5.259182,4.113362,9.068201,1.786396,-3.139385,-4.827324,-9.403674,-0.338185,1.659735,-8.742756,3.390533,-6.039486,-0.384655,2.790758,-1.973439,6.685031,5.515295,0.110483,8.652012,-7.405355,-7.742524,5.986420,-7.982400,-6.344734,-4.364347,4.076994,-4.903148,5.568392,3.834356,-1.576097,7.620218,-0.739774,-6.089953,-9.474641,-9.248194,0.743941,3.940081,3.376838,-2.371253,2.875603,-9.052015,-9.424417,7.497964,-2.569123,2.429001,-5.451286,-8.956195,9.513536,8.340245,-5.562457,-5.307505,-0.809319,8.456232,6.336437,9.427860,-0.707280,-0.332069,-3.047538,2.528021,-9.256170,-2.211459,9.484450,4.521968,3.818678,-9.952119,8.540260,-7.111366,8.913833,3.580947,6.633538,1.900002,8.330987,6.297167,2.092328,-5.892726,3.514178,5.364289,8.116525,5.013989,3.634790,-6.970621,4.585893,-0.073866,-5.673015,1.233447,-7.021041,-3.478347,-2.643993,-9.039889,-0.173210,-7.601843,1.260616,-5.261744,-7.573082,3.317480,-1.106656,-1.014345,-1.368109,-9.811328,4.159404,4.091053,-2.558841,6.179988,1.680102,4.225525,-9.652378,9.722184,6.118923,-1.958266,0.437367,1.615740,8.363429,1.768998,-1.852313,3.932501,-1.982279,2.245475,-0.075382,1.849169,-1.278043,0.804340,-4.377065,-4.552240,-8.771490,-7.583353,8.213157,1.797842,6.445202,-8.957944,-9.880409,1.130554,-5.280269,-0.075391,6.318175,-2.921495,-7.826021,-4.539222,-0.445541,-8.540471,9.912660,6.141370,-9.341701,-8.650897,6.678347,7.272199,-6.363724,-5.427272,5.400123,4.108176,1.094449,9.322477,6.699829,-5.811762,-8.979612,-5.650759,0.879633,-1.311649,3.499915,-0.290895,-9.239627,-6.234710,-8.420694,3.447469,8.406125,2.490823,8.470864,-7.984682,-9.479275,-8.012765,7.697672,3.797522,-8.464798,-4.175270,-6.607283,0.086008,-9.630219,9.978344,-0.870798,1.146397,4.916091,-3.500309,1.977835,2.964435,-0.790379,-0.431112,-6.569672,-7.137047,-1.922008,-4.948945,9.614413,9.718104,-3.652964,4.010552,8.354869,-6.462105,2.222825,0.852964,-2.392160,-8.865128,2.035210,-4.838285,-9.956574,-2.903799,-3.304651,6.129026,-6.674419,4.854015,4.593432,-6.732490,4.204454,5.947513,4.115775,9.492906,1.339022,-0.042413,9.382514,8.770031,-4.628183,-9.164940,-6.283190,-7.963846,-2.696327,2.387383,-5.692867,-3.436639,3.992415,-7.070675,8.989806,-6.260964,-2.187987,8.550010,1.070782,7.297281,-3.684286,-3.875742,-5.752336,-5.335582,5.359474,-2.875195,7.810482,7.911986,9.172557,0.105732,-7.096086,5.900538,2.271643,-3.544273,7.742820,-0.602900,5.416076,9.985102,1.955564,-4.055853,0.626699,1.420286,1.322976,3.641364,-7.430769,0.783736,-8.019589,4.730339,0.076642,2.446614,-5.705312,3.237382,-0.767966,2.565977,-4.409531,-2.629755,-7.580381,-5.738626,5.698177,-0.746681,-2.541988,-6.736436,0.253268,-5.500754,5.942414,5.823718,9.199032,5.868988,1.072499,-5.133676,-0.038541,-5.667768,-3.138006,-3.190365,-6.358581,2.075003,1.924649,-3.083696,-1.681008,7.767759,-4.248492,1.251779,0.401135,7.537793,5.674890,-8.711456,0.149279,-3.765507,6.058058,7.678264,-2.478778,5.379271,-1.549095,-1.397398,-3.378274,-0.197105,-4.564874,8.683796,-4.764209,9.432355,-4.394123,9.793268,-9.962803,8.125173,-1.947659,2.269998,0.317845,-4.700447,-1.438110,-6.229607,6.768675,9.698008,-5.528477,5.898760,-7.218968,-9.740565,6.903937,-8.426813,-4.240311,6.608456,-0.547457,4.143827,1.037017,5.400734,-6.192274,1.072585,-0.181177,3.710206,2.374550,0.879107,4.223652,-5.535267,1.951848,-8.158495,-4.598575,-2.986361,4.367982,-0.665097,-0.407510,-5.439634,-3.059741,-9.305593,1.800001,9.442771,-0.774002,-0.311408,5.450623,-1.365644,3.951946,-9.709327,1.151733,-6.556067,-9.622611,6.295238,-1.534561,1.565791,6.896568,8.486285,7.864983,0.650871,5.777350,-3.150714,-0.230818,4.644825,4.209040,2.935230,-8.408902,9.434188,1.926340,5.985868,6.582925,-3.888826,-2.467810,6.390655,-6.006621,-7.727186,-8.788269,-4.597606,5.108635,-0.643148,7.040087,2.592681,7.415066,-4.095569,-8.389019,-7.735474,-1.138756,-8.627910,-0.728172,1.877019,8.027120,-8.532061,-1.960553,-6.147261,-7.922811,-6.930183,2.854349,8.890291,7.632564,8.941009,-8.959315,6.652692,-5.841696,6.817786,4.896981,4.070843,-6.843544,-1.690808,3.336821,1.176096,4.261609,4.564724,8.894846,1.044763,4.983021,-5.359402,-1.018192,-5.937847,-7.565187,0.712498,-3.553818,-3.799581,-7.207453,5.045451,1.199943,1.813123,7.585492,7.115493,2.518890,5.749388,9.373022,-5.635142,5.824976,-5.040962,9.358329,2.469836,1.723856,-0.554589,-4.070087,2.071974,-6.167373,-0.637915,5.954867,4.779190,-2.214685,2.612146,-8.775483,7.939062,9.483505,7.876068,8.414394,-6.278456,-2.360786,-5.825998,1.272201,8.330050,-5.392655,4.981020,9.838676,-5.856221,4.478797,-0.852416,-3.457947,6.785885,6.399308,-7.493164,7.935247,7.094868,8.320954,-0.057357,4.789466,5.539319,1.772344,-4.208267,9.921856,-3.200577,-1.290740,-5.881449,-1.992205,-8.323102,7.107958,-0.953952,-4.996582,-2.198690,7.391638,-4.177885,-6.101049,-8.575340,-9.473037,6.776518,2.770091,-0.394590,-5.257366,-7.875768,-6.281562,-6.590100,7.114417,-2.270393,1.232928,-6.317567,3.152418,1.094867,-8.593792,7.790485,-7.939077,-5.629090,-9.685140,-8.274095,9.807174,6.135459,2.303703,1.822422,-7.991999,-4.319881,3.236998,-7.392058,8.604394,-0.243057,4.000697,-9.214673,-0.642743,6.761591,4.721102,9.916078,4.832701,-6.685317,3.217128,6.545140,7.116875,5.840804,-1.480622,0.569302,9.398569,2.381265,2.159628,7.883434,-0.216068,-9.273216,-2.375602,8.223879,-5.861729,-2.203123,6.585654,9.761468,-7.443937,3.837929,-4.013405,-7.841300,4.739034,-4.215817,-6.353313,-9.659533,5.326932,-9.399854,3.183982,7.448660,-4.269501,8.795766,0.972903,-3.081016,7.866179,9.017674,8.353591,2.239789,0.813898,0.648780,4.452526,3.124030,3.652306,-7.228059,0.514274,-1.456402,-4.432257,8.879607,5.865074,3.672829,-1.574243,-9.697802,-9.550374,-5.878977,-0.780681,5.174385,1.182586,-1.633864,2.059113,8.353315,-2.983308,-4.920695,2.294725,-5.676709,7.522482,5.773401,-5.126127,8.844239,-3.292589,7.553896,-3.780622,-7.360830,4.627159,-9.286713,-1.023323,0.259377,3.827822,8.269416,6.753839,8.893287,9.083988,-0.659490,2.476428,-8.365022,9.247641,-3.504528,4.126727,-0.837267,1.923600,4.995392,-1.003609,-1.689375,-2.342041,4.924276,1.641301,-8.394987,7.021416,9.118142,4.586864,-3.146869,9.182253,-2.097495,-3.572575,8.600451,5.874094,7.703822,3.398528,2.182118,1.267025,6.225011,-6.220777,1.232274,1.483169,-2.827538,-7.572081,3.214890,2.991368,-0.026788,-8.444816,9.963313,-0.883008,-4.626668,-8.540074,9.070076,-9.778996,-2.255413,8.505428,-1.522157,-1.025794,6.801757,-6.683026,-3.215086,-6.548929,4.450996,-4.615610,-5.862158,7.921086,-9.858034,-8.400917,5.901942,8.148074,1.159388,4.313156,6.469334,-0.121136,-8.038990,6.477685,-3.953507,-8.927805,3.136575,-8.474403,9.617487,-2.107343,7.969332,-2.906815,6.099545,4.328779,-6.110528,-8.401906,-3.354031,-5.499053,0.016857,-7.467918,3.673819,1.439759,9.275217,-9.796896,6.045496,3.099266,5.332291,2.769193,1.899913,-8.786630,6.672881,8.627953,0.152644,2.455968,0.949858,6.060119,-4.984356,5.625010,-2.952883,-6.305920,-4.692923,6.372109,3.904246,-5.859177,1.022041,-1.819396,-7.832959,-4.789859,2.371328,-3.466530,9.758099,3.348001,4.483812,-0.028550,-3.100238,1.733038,-9.653017,9.646890,-8.563041,-4.627497,-9.621997,-2.926608,-3.854634,-5.101003,-7.979132,-6.103194,-9.137434,3.754892,6.039203,-4.218471,4.713465,-8.505648,-1.369227,3.639960,-6.752516,-0.598484,0.422998,1.729591], dtype = "float64")#candidate|5730|(1200,)|const|float64
call_5729 = relay.TupleGetItem(func_2231_call(relay.reshape(const_5730.astype('float64'), [15, 10, 8])), 1)
call_5731 = relay.TupleGetItem(func_2233_call(relay.reshape(const_5730.astype('float64'), [15, 10, 8])), 1)
bop_5740 = relay.less(call_5729.astype('bool'), relay.reshape(const_5730.astype('bool'), relay.shape_of(call_5729))) # shape=(15, 10, 8)
bop_5743 = relay.less(call_5731.astype('bool'), relay.reshape(const_5730.astype('bool'), relay.shape_of(call_5731))) # shape=(15, 10, 8)
func_3207_call = mod.get_global_var('func_3207')
func_3212_call = mutated_mod.get_global_var('func_3212')
const_5745 = relay.const([6,4,-10,7,-2,9,-8,5,-6,-7,-9,4,5,-2,-3,7,-8,-3,-3,8,-3,1,1,3,4,-8,4,6,-4,-2,-5,8,1,-6,10,-10,-2,4,6,3,-1,5,-4,3,-3,-5,-7,4,4,2,5,-7,-2,10,-10,10,-3,5,7,-5,6,-9,-5,-10,-4,-3,2,-5,2,-2,6,4,-8,9,10,6,-8,-8,9,-9,10,-1,3,9,-1,6,5,-1,10,8,5,-3,-8,-5,-10,-1,8,3,10,-5,-2,-10,-2,2,10,9,4,10,6,1,2,6,-6,1,10,-6,-8,3,-7,1,5,-7,-5,-4,-4,5,-9,-4,-10,8,1,-6,10,1,2,-9,4,-7,2,-10,-8,-2,7,-9,-1,9,-3,-2,-4,-2,-5,-5,-6,-9,-6,5,-5,-9,3,1,7,9,-7,-4,-4,-9,-7,1,9,-2,-1,10,-3,8,9,1,1,7,-1,-1], dtype = "uint64")#candidate|5745|(180,)|const|uint64
const_5746 = relay.const(-7, dtype = "uint8")#candidate|5746|()|const|uint8
call_5744 = relay.TupleGetItem(func_3207_call(relay.reshape(const_5745.astype('uint64'), [5, 12, 3]), relay.reshape(const_5745.astype('uint64'), [5, 12, 3]), relay.reshape(const_5746.astype('uint8'), []), relay.reshape(call_5729.astype('float64'), [1200,]), ), 4)
call_5747 = relay.TupleGetItem(func_3212_call(relay.reshape(const_5745.astype('uint64'), [5, 12, 3]), relay.reshape(const_5745.astype('uint64'), [5, 12, 3]), relay.reshape(const_5746.astype('uint8'), []), relay.reshape(call_5729.astype('float64'), [1200,]), ), 4)
func_5037_call = mod.get_global_var('func_5037')
func_5041_call = mutated_mod.get_global_var('func_5041')
call_5760 = relay.TupleGetItem(func_5037_call(relay.reshape(const_5745.astype('uint64'), [180,]), relay.reshape(const_5746.astype('uint8'), []), relay.reshape(const_5730.astype('float64'), [1200,]), ), 2)
call_5761 = relay.TupleGetItem(func_5041_call(relay.reshape(const_5745.astype('uint64'), [180,]), relay.reshape(const_5746.astype('uint8'), []), relay.reshape(const_5730.astype('float64'), [1200,]), ), 2)
var_5764 = relay.var("var_5764", dtype = "float32", shape = (15, 10, 8))#candidate|5764|(15, 10, 8)|var|float32
bop_5765 = relay.logical_and(call_5729.astype('bool'), relay.reshape(var_5764.astype('bool'), relay.shape_of(call_5729))) # shape=(15, 10, 8)
bop_5768 = relay.logical_and(call_5731.astype('bool'), relay.reshape(var_5764.astype('bool'), relay.shape_of(call_5731))) # shape=(15, 10, 8)
bop_5771 = relay.floor_mod(var_5764.astype('float32'), relay.reshape(call_5729.astype('float32'), relay.shape_of(var_5764))) # shape=(15, 10, 8)
bop_5774 = relay.floor_mod(var_5764.astype('float32'), relay.reshape(call_5731.astype('float32'), relay.shape_of(var_5764))) # shape=(15, 10, 8)
output = relay.Tuple([call_5727,bop_5740,call_5744,const_5745,const_5746,call_5760,bop_5765,bop_5771,])
output2 = relay.Tuple([call_5728,bop_5743,call_5747,const_5745,const_5746,call_5761,bop_5768,bop_5774,])
func_5776 = relay.Function([var_5764,], output)
mod['func_5776'] = func_5776
mod = relay.transform.InferType()(mod)
var_5777 = relay.var("var_5777", dtype = "float32", shape = (15, 10, 8))#candidate|5777|(15, 10, 8)|var|float32
output = func_5776(var_5777)
func_5778 = relay.Function([var_5777], output)
mutated_mod['func_5778'] = func_5778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_5786 = func_5095_call()
call_5787 = func_5095_call()
func_4771_call = mod.get_global_var('func_4771')
func_4773_call = mutated_mod.get_global_var('func_4773')
call_5788 = relay.TupleGetItem(func_4771_call(), 0)
call_5789 = relay.TupleGetItem(func_4773_call(), 0)
output = relay.Tuple([call_5786,call_5788,])
output2 = relay.Tuple([call_5787,call_5789,])
func_5790 = relay.Function([], output)
mod['func_5790'] = func_5790
mod = relay.transform.InferType()(mod)
mutated_mod['func_5790'] = func_5790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5790_call = mutated_mod.get_global_var('func_5790')
call_5791 = func_5790_call()
output = call_5791
func_5792 = relay.Function([], output)
mutated_mod['func_5792'] = func_5792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5790_call = mod.get_global_var('func_5790')
func_5792_call = mutated_mod.get_global_var('func_5792')
call_5805 = relay.TupleGetItem(func_5790_call(), 1)
call_5806 = relay.TupleGetItem(func_5792_call(), 1)
func_3613_call = mod.get_global_var('func_3613')
func_3615_call = mutated_mod.get_global_var('func_3615')
const_5814 = relay.const([[True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True],[True,False,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,True,False,True],[True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False],[False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False],[True,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False],[True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,True,False,True],[True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False],[True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False],[False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False],[False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True]], dtype = "bool")#candidate|5814|(10, 64)|const|bool
call_5813 = relay.TupleGetItem(func_3613_call(relay.reshape(const_5814.astype('bool'), [10, 4, 16])), 0)
call_5815 = relay.TupleGetItem(func_3615_call(relay.reshape(const_5814.astype('bool'), [10, 4, 16])), 0)
const_5824 = relay.const([[[-2.773450,0.935844,-5.020251,-6.068596,-5.229775,-1.598640,9.480823,0.130924,-6.345928,-0.849432,1.577852,-3.247128,3.296512,-2.776937,-1.815010,8.542392],[-7.897987,-6.034396,1.920413,7.182337,-5.332282,-0.817762,7.147047,-2.616834,-2.497475,7.328405,2.279854,-4.281672,3.199863,-9.772758,7.583070,-4.457054],[-9.572963,-3.478525,5.128419,-7.377499,3.945352,2.412700,-4.683021,-9.083715,5.824602,-4.872138,-7.196837,8.702137,5.538620,4.880381,2.542625,-6.644893],[-5.499326,-0.392387,-2.470064,-7.500974,6.676064,5.643850,8.638265,-7.231839,1.985952,-3.134864,8.187240,4.033376,7.445202,6.948347,0.106085,-3.889058]],[[-1.346586,5.557769,2.386231,9.872345,-3.463848,-3.340127,-4.177505,-6.257717,8.658132,1.499238,-1.068005,-4.734146,1.402196,-9.137170,8.338766,2.983298],[3.766675,2.522174,-6.725136,1.734222,2.145792,-7.974103,-1.581017,4.855045,5.094786,7.592766,0.821803,4.744528,1.047770,9.658417,2.276580,6.922740],[-7.402775,4.830302,8.263015,7.189770,3.204700,-4.066686,-6.530247,3.506874,3.303254,3.678145,-2.618401,2.591752,-7.210043,3.096067,9.645624,5.539639],[9.764007,-6.366248,1.781804,5.578103,-0.180265,9.886751,2.925098,-4.587896,4.619719,1.130982,0.754975,5.083806,-0.859115,0.382934,0.966976,4.949081]],[[6.711331,1.776375,6.833634,4.621571,0.046457,-8.260509,-9.779225,3.978602,-3.803076,6.240077,1.753604,6.327856,2.872493,-4.143712,5.603627,3.166263],[6.422176,-2.192098,8.438155,-4.979516,-0.635378,9.430748,-9.044282,-9.584484,-7.601915,-9.049608,-0.854730,0.448268,-7.651156,8.546637,5.225526,-8.114824],[3.735700,8.038787,5.285178,2.467320,-3.945240,-8.924421,6.282434,0.835173,-8.448956,-4.911318,9.600386,3.873752,1.519242,-4.951268,9.965230,9.560478],[4.850849,-9.564685,7.385452,-8.043346,-2.440548,-3.596613,8.786183,6.638091,0.881378,-8.900780,9.786995,-7.451259,-8.749261,2.063941,4.100959,6.512942]],[[8.362676,7.353968,0.752912,-3.408092,-7.507310,-6.304866,-9.064016,-4.479757,9.751721,1.392647,-3.076901,6.973198,-5.993533,-6.666948,6.611637,-7.236705],[8.942765,4.202370,7.693712,6.044399,-2.106644,3.584816,5.183161,-9.189683,-8.271913,-5.071151,1.596373,-7.954878,-2.910222,-8.782422,-8.215550,1.517192],[-5.847383,-4.922230,-7.391615,-0.909190,2.939663,-4.629022,3.767419,2.166807,-4.977732,-0.866644,1.395242,4.264353,1.508853,-0.040151,-0.655570,-9.032502],[-2.019424,-0.973445,-5.591026,-2.432521,-2.913529,-6.493852,1.203743,7.302194,4.396526,-2.166292,-9.977598,0.721488,9.271459,9.065984,8.184581,-1.033053]],[[9.689879,-6.405466,3.553791,7.055107,0.213185,7.138167,-4.890967,-2.518351,-3.334503,-4.229223,-2.508870,1.391282,6.419756,2.837873,-4.057491,1.578990],[-9.681381,5.930578,-0.020210,1.765313,-4.246856,-3.454962,-5.972820,1.874282,6.136421,1.986172,0.595197,9.721559,-3.831022,1.945994,5.998204,-6.461205],[-3.930998,3.114338,-7.344435,3.615768,-0.720938,9.572244,-1.588586,1.102307,0.333389,-3.558142,4.618095,0.686129,-9.947428,-1.242165,5.461165,-3.795583],[-3.574045,-4.148966,-8.040712,-8.969391,-5.675992,9.832551,-4.375768,-2.751306,-1.492144,-5.747688,6.304511,6.132324,-1.331528,9.588599,-5.826839,7.472945]],[[6.178655,0.059608,2.225726,-4.768130,-5.139237,4.329819,9.009006,-9.085056,-6.943882,8.058852,-7.519135,7.949077,3.737917,0.358312,-2.329192,-8.754518],[-6.451624,-8.852833,2.410436,6.374497,-6.254788,-8.420996,9.673038,4.045069,9.829768,1.302276,5.365113,-8.013654,4.642663,-3.078957,2.201164,3.175795],[1.625236,2.362197,3.574304,-4.444873,3.276633,4.361705,3.873465,-9.002181,8.483551,-4.479985,4.155436,5.469798,-1.772828,-8.935613,1.665395,-2.554714],[7.142110,6.073175,-1.701162,5.021409,9.615576,-7.074666,8.230266,5.851986,-7.007402,-8.894932,2.350448,-7.356366,7.435653,9.255240,9.880387,1.801109]],[[5.899346,6.997164,-7.841655,-9.961161,5.397138,-1.296020,5.163960,5.763445,-4.314890,8.918623,-7.205971,7.881884,3.449301,-4.719737,-5.011107,0.238959],[-5.958336,-5.787860,3.987492,-1.575396,8.457575,-9.995846,3.435517,9.738207,7.579644,4.310199,-5.321463,7.038389,2.952879,-7.602760,-7.282070,4.162885],[-0.161378,9.808791,-7.657616,-7.685422,9.465551,6.004437,5.984467,-7.609639,5.372449,-7.112767,-6.200112,8.077063,2.185319,-1.915059,-2.965327,-6.766837],[3.617557,-4.035248,-5.778606,4.961588,8.528229,-2.037334,2.857055,1.816382,-6.423727,4.004038,-7.954557,-7.031430,-9.780836,9.931905,-2.541361,-2.033748]],[[1.580534,-5.774611,1.705900,7.410821,-2.674949,8.065107,-6.167609,-9.546902,-3.123000,-8.687661,8.509563,-1.176904,6.457386,-8.848945,-5.454232,5.389033],[7.125715,5.082450,1.039423,-3.872250,-6.666949,-8.445176,-4.973578,6.006012,-0.379729,9.011728,-8.746549,7.752447,8.607359,8.266555,-7.305071,-9.775966],[-7.589547,9.513543,-8.975979,2.660906,9.163441,-0.497943,7.891521,7.199049,7.265280,3.359267,-5.385569,2.237118,-4.494441,6.034952,6.261105,-3.868385],[6.144828,0.687431,9.901348,-3.191422,-9.516588,7.797354,-7.633124,6.325717,3.487751,0.273678,-6.914350,-7.992739,-9.798348,1.176617,6.524299,8.065846]],[[8.315281,-0.180725,-7.334100,-2.652214,0.939338,-9.140755,-3.035887,0.543831,-6.166666,5.005083,8.360532,3.272286,-4.053383,2.040617,-4.358680,-9.398466],[-5.118069,3.338021,-3.504616,0.659041,8.667297,4.704369,-9.478426,1.804686,-6.932275,9.157054,-0.434347,7.215158,7.028294,-5.237378,5.294444,-7.482035],[-3.853943,-9.478007,2.741366,-6.345490,3.604008,-5.315980,3.196427,-2.508989,-5.930656,5.692579,-2.847325,3.787541,-4.009637,-4.585310,5.014031,9.240766],[-2.571106,-1.546624,7.436615,-4.191887,-1.717463,-4.943270,-0.732922,3.637031,-0.106788,-6.181316,9.789313,1.426759,3.748228,-1.948420,-6.279632,-9.648097]],[[6.893242,-9.741185,-7.152231,-4.416267,6.077088,-3.771741,4.361790,-4.946802,-3.296216,9.608340,5.071509,6.006720,-2.213090,2.937398,9.355437,9.287809],[-6.562471,-8.877565,-1.687902,5.378793,7.022066,7.595519,-4.808333,8.380416,-5.752075,-6.058844,7.418886,7.061346,1.105086,-3.762824,-7.215486,-2.823188],[4.502038,4.896593,2.727214,4.453190,-2.188758,9.087357,-8.522145,-0.076530,1.421502,-1.845353,-8.316402,-2.005971,-9.825935,6.710495,-8.515064,4.422439],[-9.428170,2.677272,-2.974371,-7.622266,-2.738378,1.700592,-9.098582,0.819770,-6.660278,-2.756731,5.789105,3.033911,3.763007,0.033753,-4.508588,6.766187]]], dtype = "float32")#candidate|5824|(10, 4, 16)|const|float32
bop_5825 = relay.less_equal(call_5813.astype('bool'), relay.reshape(const_5824.astype('bool'), relay.shape_of(call_5813))) # shape=(10, 4, 16)
bop_5828 = relay.less_equal(call_5815.astype('bool'), relay.reshape(const_5824.astype('bool'), relay.shape_of(call_5815))) # shape=(10, 4, 16)
uop_5842 = relay.acos(const_5814.astype('float64')) # shape=(10, 64)
output = relay.Tuple([call_5805,bop_5825,uop_5842,])
output2 = relay.Tuple([call_5806,bop_5828,uop_5842,])
func_5856 = relay.Function([], output)
mod['func_5856'] = func_5856
mod = relay.transform.InferType()(mod)
mutated_mod['func_5856'] = func_5856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5856_call = mutated_mod.get_global_var('func_5856')
call_5857 = func_5856_call()
output = call_5857
func_5858 = relay.Function([], output)
mutated_mod['func_5858'] = func_5858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3849_call = mod.get_global_var('func_3849')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_5879 = relay.TupleGetItem(func_3849_call(), 0)
call_5880 = relay.TupleGetItem(func_3850_call(), 0)
var_5884 = relay.var("var_5884", dtype = "uint16", shape = (16, 2, 5))#candidate|5884|(16, 2, 5)|var|uint16
bop_5885 = relay.greater(call_5879.astype('bool'), relay.reshape(var_5884.astype('bool'), relay.shape_of(call_5879))) # shape=(16, 2, 5)
bop_5888 = relay.greater(call_5880.astype('bool'), relay.reshape(var_5884.astype('bool'), relay.shape_of(call_5880))) # shape=(16, 2, 5)
func_4625_call = mod.get_global_var('func_4625')
func_4626_call = mutated_mod.get_global_var('func_4626')
call_5889 = func_4625_call()
call_5890 = func_4625_call()
bop_5895 = relay.maximum(bop_5885.astype('float32'), relay.reshape(call_5889.astype('float32'), relay.shape_of(bop_5885))) # shape=(16, 2, 5)
bop_5898 = relay.maximum(bop_5888.astype('float32'), relay.reshape(call_5890.astype('float32'), relay.shape_of(bop_5888))) # shape=(16, 2, 5)
output = relay.Tuple([bop_5895,])
output2 = relay.Tuple([bop_5898,])
F = relay.Function([var_5884,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5884,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

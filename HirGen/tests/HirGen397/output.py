import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_55 = relay.var("var_55", dtype = "uint32", shape = ())#candidate|55|()|var|uint32
var_56 = relay.var("var_56", dtype = "uint32", shape = (1, 10, 11))#candidate|56|(1, 10, 11)|var|uint32
bop_57 = relay.left_shift(var_55.astype('uint32'), var_56.astype('uint32')) # shape=(1, 10, 11)
output = relay.Tuple([bop_57,])
output2 = relay.Tuple([bop_57,])
func_71 = relay.Function([var_55,var_56,], output)
mod['func_71'] = func_71
mod = relay.transform.InferType()(mod)
mutated_mod['func_71'] = func_71
mutated_mod = relay.transform.InferType()(mutated_mod)
func_71_call = mutated_mod.get_global_var('func_71')
var_73 = relay.var("var_73", dtype = "uint32", shape = ())#candidate|73|()|var|uint32
var_74 = relay.var("var_74", dtype = "uint32", shape = (1, 10, 11))#candidate|74|(1, 10, 11)|var|uint32
call_72 = func_71_call(var_73,var_74,)
output = call_72
func_75 = relay.Function([var_73,var_74,], output)
mutated_mod['func_75'] = func_75
mutated_mod = relay.transform.InferType()(mutated_mod)
var_568 = relay.var("var_568", dtype = "float32", shape = (8, 6, 15))#candidate|568|(8, 6, 15)|var|float32
uop_569 = relay.cosh(var_568.astype('float32')) # shape=(8, 6, 15)
output = uop_569
output2 = uop_569
func_575 = relay.Function([var_568,], output)
mod['func_575'] = func_575
mod = relay.transform.InferType()(mod)
var_576 = relay.var("var_576", dtype = "float32", shape = (8, 6, 15))#candidate|576|(8, 6, 15)|var|float32
output = func_575(var_576)
func_577 = relay.Function([var_576], output)
mutated_mod['func_577'] = func_577
mutated_mod = relay.transform.InferType()(mutated_mod)
const_723 = relay.const([[[8.566811,4.576251,9.433324,-6.226813,1.338550,-6.549060,5.501081,-1.545017,-4.973643,1.349508,-9.706896,7.035050,-6.562624,-6.923329,-0.562275,-7.896821],[-2.841342,5.024243,7.816746,-6.439838,-9.312856,0.676340,9.050443,-1.520949,4.337361,-2.744237,6.689727,1.960826,-2.802501,4.360229,4.445355,-9.826198],[6.556663,-1.944749,1.119734,7.038445,5.594311,5.283838,-1.808127,7.110171,0.571258,2.488410,9.628224,3.741763,2.411990,-4.451499,-9.053054,-7.311486],[5.332695,-7.036980,0.394659,-8.995068,-5.225478,2.485698,6.545707,7.997761,-0.911654,0.872226,3.316271,3.577180,9.278266,-7.312889,8.378041,-2.142880],[2.433397,7.245216,-3.723533,1.619835,-1.415444,-5.131962,6.292280,-2.844414,-7.657898,6.351806,-6.277836,-7.907914,4.832660,-0.837600,4.252558,5.138800]],[[6.772581,-9.295307,-2.083673,2.491468,-6.499129,-6.075311,9.036019,-8.768470,-2.036236,2.755917,-5.563627,4.059716,-8.417493,-8.928792,-2.160744,-2.290621],[4.689896,2.704787,9.397734,-8.247445,-4.979873,3.035623,2.501850,-8.758904,-7.742255,6.426513,5.805547,-1.355207,-4.375444,-7.443360,-1.877697,-7.265103],[4.059344,5.921267,-4.219786,-8.696517,-0.998993,-2.884748,2.581043,7.999823,0.505541,3.438191,0.023844,-3.528763,-1.917381,-9.222475,-7.364471,-5.705157],[1.628883,-5.729777,1.630863,-6.505456,-9.164138,-6.888675,7.281114,1.690626,-9.028567,-1.547874,-1.224713,0.164605,3.613452,3.347482,-5.082935,8.450186],[6.681447,-8.403953,-8.299728,-2.420247,3.802369,7.662177,0.809666,8.994743,1.786438,7.532239,4.563254,-7.029303,0.479365,-9.116070,-0.827418,3.096486]],[[2.916782,-8.350951,-2.346479,-8.580048,8.575462,2.109737,5.005359,-4.095302,-5.458550,-0.496279,-6.540865,-5.467240,1.574120,-0.632939,-5.086244,2.444754],[8.125994,2.694836,1.210526,8.061788,1.949744,5.042399,-3.272091,0.382809,5.076621,-1.757077,4.763281,4.221454,6.480046,-7.690572,6.127571,8.908306],[0.412874,9.974488,-9.581316,-7.306051,3.570787,-9.700412,0.291511,-2.628421,-4.260330,9.173972,8.485480,-2.045218,-3.841949,-0.739119,-8.400946,-5.039436],[-9.338587,-2.302117,-6.905490,3.745345,-7.109967,3.944524,8.724263,9.524648,-9.616642,6.449191,0.302455,-5.240456,-0.525474,-2.528946,-2.970202,3.331772],[-1.815991,-0.309644,-8.331845,-7.044090,8.685952,-0.161073,6.542655,-3.985499,-6.201592,4.812134,3.499627,4.335071,-5.953977,1.461949,-7.947345,7.231198]],[[-2.161610,-4.247533,7.801050,-4.956973,-2.749028,-2.933891,-4.079723,-9.700256,-0.304102,-3.182258,1.257792,-3.943150,4.848443,1.799794,-1.390315,-2.970018],[-4.639053,2.197364,1.816051,-9.440060,-5.513859,2.732489,-2.936196,-7.238587,0.936493,-3.429876,-8.824836,-7.229227,-6.440309,-1.110163,6.076056,-3.561087],[5.465921,9.599027,5.106646,-1.172649,-0.081134,-8.158216,6.016985,-3.785868,5.672355,-7.392915,7.511479,-5.040647,-6.543431,-4.965426,4.835983,8.557238],[-5.119902,-8.359029,-3.229960,5.048790,-7.564558,6.274768,-2.558642,6.125595,4.513362,-4.729502,-7.585917,-2.378443,8.450502,-4.060441,6.207556,9.288989],[4.010836,7.780969,-3.679755,-9.228173,-8.472991,1.437804,8.353340,9.867639,-3.433107,1.649216,-0.606286,7.437621,-5.751514,-3.101978,8.631466,5.779644]],[[9.317651,-0.189126,-0.774285,4.428392,2.569281,9.362564,8.634598,9.269588,-1.066247,-0.363976,-8.948969,-6.182673,-9.253683,3.302319,-7.618023,-1.355627],[7.004251,-0.637932,5.538491,1.692790,-3.825066,-6.109924,6.374975,1.744059,-9.652270,-4.807931,9.296591,-2.523830,3.864217,4.034275,-0.505941,-1.763653],[-8.771458,0.556674,-4.299059,-5.654007,-2.312422,-0.776404,-5.934300,5.562809,3.909774,-0.461363,2.767339,-9.205557,-5.345792,-8.178467,8.129982,-4.756237],[0.240772,-3.713193,-8.835910,-4.858508,0.386669,-9.998342,-3.329135,-0.808529,5.026449,-7.136652,5.475651,-4.686004,-1.447000,6.651151,9.661511,-9.882314],[6.578841,-0.367803,1.567749,-5.743491,7.621320,1.573218,2.073352,7.282007,-0.023213,2.048989,0.641911,1.329118,-6.275571,4.682195,-6.318483,7.671151]],[[-9.985672,-7.772375,-2.939089,-7.616126,9.702000,-7.201241,-7.336934,-1.944759,6.312457,-9.575250,8.145156,7.000349,-7.262956,0.855940,-8.589357,5.379858],[-7.020591,-7.024167,-4.985093,-5.772521,-3.457102,-2.677636,-3.580627,2.295265,-2.815194,-6.313419,7.567593,-2.739097,7.584141,6.583839,-2.600505,-1.862036],[-0.247356,8.958845,-9.567276,-7.021741,-0.328498,9.557675,9.945285,2.180430,-0.805046,0.657126,1.965254,-6.364747,6.722040,-3.492372,-2.950491,-8.951989],[2.924988,4.029456,7.451712,0.003176,6.964956,3.730537,0.159241,-0.451887,-2.580590,-6.858762,0.988340,-9.339925,-4.132459,-5.082774,-7.843893,7.593053],[5.431978,9.425105,-6.866898,-2.903832,5.834998,1.211350,-0.882202,-5.973969,5.627017,-7.458507,6.952801,-7.110805,3.254986,-3.429257,0.720340,-7.667951]],[[5.750118,-1.643419,-6.714994,3.209062,-1.728865,-1.505626,-1.735324,7.383160,9.838091,8.206398,3.238137,-1.964132,-7.857195,-2.791443,-9.699994,-8.047527],[-9.211791,-3.466088,-7.610412,-6.292070,-7.045264,8.379556,5.164439,-7.689849,9.853921,-1.877735,1.533819,0.074591,6.059393,-0.227697,-3.914111,0.913820],[9.791485,6.549602,9.550696,-0.317528,6.321067,2.940265,-0.025705,4.326381,5.479653,-9.208757,3.298219,-5.076324,7.742337,-9.109942,-1.903063,-4.630278],[4.470772,1.284892,1.548939,-3.807910,5.171087,-9.578919,-5.486140,7.975539,1.731094,-4.462990,-3.832012,0.559398,3.504079,2.005036,-4.476341,7.343638],[-0.319551,-0.610842,-0.134204,-8.881121,-7.777480,-1.421870,-7.151262,-2.423589,1.461033,-9.429437,-4.525777,-9.749236,-8.512220,6.552591,7.464895,-8.248293]],[[1.045357,-4.660638,-4.624369,4.537718,5.047763,0.416694,-2.828780,1.294457,-7.783177,5.964396,9.488764,1.408369,9.816477,-2.059572,4.787872,-1.585169],[-5.148528,4.847296,0.863497,5.887411,-6.342934,8.669442,5.746413,-9.088958,-7.950332,-8.511037,5.510636,7.021473,-8.312311,-4.349272,9.887431,-0.661788],[0.524184,-6.212654,-1.443645,7.102928,-1.681858,8.793187,0.744463,9.666302,4.167677,7.115601,8.355962,-2.038746,2.564907,-5.213441,5.747475,-8.028405],[-3.582660,-8.562704,-7.251506,1.959539,-3.684296,-0.449005,-4.620169,6.447500,8.504384,0.375567,-7.936134,-3.048703,-9.922603,-9.161136,7.564598,-5.630635],[5.842436,5.647962,-3.757510,-0.114168,9.588390,-4.868486,-3.406431,-1.926297,-9.189723,9.586086,7.653995,-0.264735,-6.199827,8.400476,2.621150,5.268896]],[[-8.121703,5.306993,6.983698,0.317768,-9.711227,-0.318290,-7.498966,8.189248,-7.641598,9.428819,-2.136346,5.311684,-7.633448,4.997007,-8.754920,-2.538545],[4.316181,5.107345,4.859107,8.567664,-5.884718,-6.656865,-1.526709,-9.978360,-2.024869,-1.880262,6.603721,1.118042,3.770363,-1.287557,2.757137,-2.825503],[-8.859272,7.082949,1.010508,6.058204,6.546000,-5.597361,0.258124,-6.712598,-6.728715,0.266036,6.557205,0.838007,6.547264,-3.201742,-3.284729,0.399159],[2.619550,-0.503768,2.448352,-2.967103,7.730715,5.923482,2.737422,0.429591,-2.132074,-4.619854,3.593657,-9.403103,5.954443,-7.961614,-3.009109,-2.146166],[-4.940932,-8.927902,-5.109331,-4.128724,0.082141,2.175940,-7.587696,-2.907369,3.445451,-4.152201,-1.651758,1.459512,4.137753,9.995330,9.572508,0.394123]],[[-9.106325,0.383926,2.459971,-8.330155,0.595480,8.392597,-3.134831,2.340452,-4.243467,7.930292,-7.082649,-7.615874,-2.798812,9.440904,5.901038,5.045501],[-5.017473,1.711952,0.161277,-9.375208,0.762296,-3.477558,4.427678,9.868071,0.981921,-1.301524,4.544091,0.216574,-5.134401,1.683700,-3.923349,0.885482],[1.930256,-7.201060,7.885695,-7.067770,-1.317441,-5.012468,-8.539740,-4.886737,-5.488660,7.122942,8.144397,5.909334,-2.913081,-0.281702,-8.110686,1.560355],[-7.143522,-6.821444,7.333679,-3.175776,0.360504,2.278196,-6.588688,4.731326,4.082436,-0.523165,9.992447,-6.332108,-0.353638,-9.173892,8.388118,-5.879969],[0.844484,4.160880,9.620121,1.649434,-8.267577,-4.929041,-2.021216,-9.371368,0.577934,-4.355287,-1.674757,-7.349602,2.571984,2.136748,-3.051197,-0.025413]],[[-3.573012,-1.458189,9.509985,-9.920698,3.788638,-3.935682,-8.717908,2.945022,0.158139,4.938323,-5.462073,-8.230026,-8.499798,-2.833844,-0.034864,3.723414],[-5.689793,-8.239833,5.310944,-5.351826,-1.495762,-8.284634,0.265960,-4.050003,0.938380,-8.844998,9.534379,-9.603417,4.398971,-1.634652,7.169124,-4.399485],[-7.450003,-6.037707,-3.769660,-2.453325,5.924784,1.438441,-6.351560,-0.392882,5.655742,0.848746,8.008025,8.961668,7.182837,-6.034121,1.541580,-3.592606],[-9.259805,3.917038,3.450778,0.188236,-7.550409,0.648311,-6.901394,-9.662166,1.086636,-4.655911,0.776743,7.253348,7.338424,-3.471030,-7.915650,-5.961751],[6.641181,6.694049,9.076435,5.164592,-2.999174,-9.955641,-2.621030,-6.716340,2.555648,3.087455,-2.673285,7.380112,-8.203577,-6.280822,-8.218046,6.188199]],[[-1.077765,5.426891,9.648865,4.594680,1.164134,-8.144060,1.101692,5.427483,4.004213,6.038949,5.855262,-5.476041,-6.159119,4.678703,8.464341,-1.806457],[4.785168,-2.027461,9.242132,-3.927976,1.284696,-9.894034,-7.782234,2.379332,-6.242892,1.458228,7.248272,-2.120642,0.086703,2.958640,-3.626938,-7.158891],[6.330522,6.260452,7.000957,3.507233,-7.385657,8.152207,-4.788049,7.221416,9.277835,-7.504730,-5.127363,5.464875,-5.547882,-5.016898,-0.819586,2.350390],[2.694004,-2.284040,-6.988892,-6.597777,-0.628325,8.694479,-5.584634,8.466000,-3.935544,2.335390,-1.347189,-9.198170,2.822375,-5.324086,2.080481,1.366580],[-7.428610,8.187804,3.100463,0.794370,9.395920,-5.376663,4.181023,-3.222477,-9.269881,-5.946662,-9.658334,3.406261,-1.917016,6.668200,3.284991,-9.396647]],[[3.268967,0.331129,8.953225,-3.842198,8.297523,6.189920,-9.185480,-3.950810,1.576732,-1.641760,6.330800,1.192281,1.333631,-9.984445,8.639883,-8.930165],[-7.598952,9.632995,-6.928480,9.550415,3.822337,0.627921,-6.707157,-9.593749,-7.874265,4.901192,-6.960886,9.984138,5.717583,7.535663,3.639411,4.407745],[6.991010,7.515529,-8.548014,9.753636,0.484598,-4.918882,1.352358,8.980276,6.965059,0.235529,1.591239,0.723922,-6.152835,4.771752,-1.852209,-6.215167],[-5.835543,3.764135,-1.278186,-7.129869,6.071994,1.107128,8.366907,4.024048,0.665524,-1.062836,8.897588,2.603963,-2.339373,6.017676,-9.354522,-9.226712],[-9.059522,7.577142,9.894311,-1.935137,-3.734483,6.535405,0.434992,-5.859637,8.686986,3.824514,-7.630487,1.360818,-2.625238,8.204250,-5.616630,9.064748]]], dtype = "float32")#candidate|723|(13, 5, 16)|const|float32
uop_724 = relay.log(const_723.astype('float32')) # shape=(13, 5, 16)
output = relay.Tuple([uop_724,])
output2 = relay.Tuple([uop_724,])
func_735 = relay.Function([], output)
mod['func_735'] = func_735
mod = relay.transform.InferType()(mod)
output = func_735()
func_736 = relay.Function([], output)
mutated_mod['func_736'] = func_736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_780 = relay.TupleGetItem(func_735_call(), 0)
call_781 = relay.TupleGetItem(func_736_call(), 0)
output = call_780
output2 = call_781
func_788 = relay.Function([], output)
mod['func_788'] = func_788
mod = relay.transform.InferType()(mod)
output = func_788()
func_789 = relay.Function([], output)
mutated_mod['func_789'] = func_789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_792 = relay.var("var_792", dtype = "float32", shape = (1, 16, 9))#candidate|792|(1, 16, 9)|var|float32
uop_793 = relay.tan(var_792.astype('float32')) # shape=(1, 16, 9)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_796 = relay.TupleGetItem(func_735_call(), 0)
call_797 = relay.TupleGetItem(func_736_call(), 0)
func_71_call = mod.get_global_var('func_71')
func_75_call = mutated_mod.get_global_var('func_75')
const_808 = relay.const(1, dtype = "uint32")#candidate|808|()|const|uint32
var_809 = relay.var("var_809", dtype = "uint32", shape = (22, 5))#candidate|809|(22, 5)|var|uint32
call_807 = relay.TupleGetItem(func_71_call(relay.reshape(const_808.astype('uint32'), []), relay.reshape(var_809.astype('uint32'), [1, 10, 11]), ), 0)
call_810 = relay.TupleGetItem(func_75_call(relay.reshape(const_808.astype('uint32'), []), relay.reshape(var_809.astype('uint32'), [1, 10, 11]), ), 0)
output = relay.Tuple([uop_793,call_796,call_807,const_808,var_809,])
output2 = relay.Tuple([uop_793,call_797,call_810,const_808,var_809,])
func_811 = relay.Function([var_792,var_809,], output)
mod['func_811'] = func_811
mod = relay.transform.InferType()(mod)
var_812 = relay.var("var_812", dtype = "float32", shape = (1, 16, 9))#candidate|812|(1, 16, 9)|var|float32
var_813 = relay.var("var_813", dtype = "uint32", shape = (22, 5))#candidate|813|(22, 5)|var|uint32
output = func_811(var_812,var_813,)
func_814 = relay.Function([var_812,var_813,], output)
mutated_mod['func_814'] = func_814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_788_call = mod.get_global_var('func_788')
func_789_call = mutated_mod.get_global_var('func_789')
call_816 = func_788_call()
call_817 = func_788_call()
output = call_816
output2 = call_817
func_818 = relay.Function([], output)
mod['func_818'] = func_818
mod = relay.transform.InferType()(mod)
mutated_mod['func_818'] = func_818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_818_call = mutated_mod.get_global_var('func_818')
call_819 = func_818_call()
output = call_819
func_820 = relay.Function([], output)
mutated_mod['func_820'] = func_820
mutated_mod = relay.transform.InferType()(mutated_mod)
var_900 = relay.var("var_900", dtype = "int64", shape = (6, 6, 11))#candidate|900|(6, 6, 11)|var|int64
var_901 = relay.var("var_901", dtype = "int64", shape = (6, 6, 11))#candidate|901|(6, 6, 11)|var|int64
bop_902 = relay.add(var_900.astype('int64'), relay.reshape(var_901.astype('int64'), relay.shape_of(var_900))) # shape=(6, 6, 11)
bop_905 = relay.less_equal(bop_902.astype('bool'), relay.reshape(var_901.astype('bool'), relay.shape_of(bop_902))) # shape=(6, 6, 11)
output = bop_905
output2 = bop_905
func_915 = relay.Function([var_900,var_901,], output)
mod['func_915'] = func_915
mod = relay.transform.InferType()(mod)
var_916 = relay.var("var_916", dtype = "int64", shape = (6, 6, 11))#candidate|916|(6, 6, 11)|var|int64
var_917 = relay.var("var_917", dtype = "int64", shape = (6, 6, 11))#candidate|917|(6, 6, 11)|var|int64
output = func_915(var_916,var_917,)
func_918 = relay.Function([var_916,var_917,], output)
mutated_mod['func_918'] = func_918
mutated_mod = relay.transform.InferType()(mutated_mod)
var_948 = relay.var("var_948", dtype = "uint64", shape = ())#candidate|948|()|var|uint64
var_949 = relay.var("var_949", dtype = "uint64", shape = (6, 6, 1))#candidate|949|(6, 6, 1)|var|uint64
bop_950 = relay.bitwise_and(var_948.astype('uint64'), var_949.astype('uint64')) # shape=(6, 6, 1)
func_915_call = mod.get_global_var('func_915')
func_918_call = mutated_mod.get_global_var('func_918')
var_955 = relay.var("var_955", dtype = "int64", shape = (396,))#candidate|955|(396,)|var|int64
call_954 = func_915_call(relay.reshape(var_955.astype('int64'), [6, 6, 11]), relay.reshape(var_955.astype('int64'), [6, 6, 11]), )
call_956 = func_915_call(relay.reshape(var_955.astype('int64'), [6, 6, 11]), relay.reshape(var_955.astype('int64'), [6, 6, 11]), )
bop_961 = relay.multiply(var_948.astype('float32'), bop_950.astype('float32')) # shape=(6, 6, 1)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_964 = relay.TupleGetItem(func_735_call(), 0)
call_965 = relay.TupleGetItem(func_736_call(), 0)
output = relay.Tuple([call_954,var_955,bop_961,call_964,])
output2 = relay.Tuple([call_956,var_955,bop_961,call_965,])
func_972 = relay.Function([var_948,var_949,var_955,], output)
mod['func_972'] = func_972
mod = relay.transform.InferType()(mod)
var_973 = relay.var("var_973", dtype = "uint64", shape = ())#candidate|973|()|var|uint64
var_974 = relay.var("var_974", dtype = "uint64", shape = (6, 6, 1))#candidate|974|(6, 6, 1)|var|uint64
var_975 = relay.var("var_975", dtype = "int64", shape = (396,))#candidate|975|(396,)|var|int64
output = func_972(var_973,var_974,var_975,)
func_976 = relay.Function([var_973,var_974,var_975,], output)
mutated_mod['func_976'] = func_976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_995 = func_818_call()
call_996 = func_818_call()
uop_1023 = relay.rsqrt(call_995.astype('float64')) # shape=(13, 5, 16)
uop_1025 = relay.rsqrt(call_996.astype('float64')) # shape=(13, 5, 16)
var_1032 = relay.var("var_1032", dtype = "float64", shape = (13, 5, 16))#candidate|1032|(13, 5, 16)|var|float64
bop_1033 = relay.less_equal(uop_1023.astype('bool'), relay.reshape(var_1032.astype('bool'), relay.shape_of(uop_1023))) # shape=(13, 5, 16)
bop_1036 = relay.less_equal(uop_1025.astype('bool'), relay.reshape(var_1032.astype('bool'), relay.shape_of(uop_1025))) # shape=(13, 5, 16)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_1049 = func_818_call()
call_1050 = func_818_call()
output = relay.Tuple([bop_1033,call_1049,])
output2 = relay.Tuple([bop_1036,call_1050,])
func_1063 = relay.Function([var_1032,], output)
mod['func_1063'] = func_1063
mod = relay.transform.InferType()(mod)
mutated_mod['func_1063'] = func_1063
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1064 = relay.var("var_1064", dtype = "float64", shape = (13, 5, 16))#candidate|1064|(13, 5, 16)|var|float64
func_1063_call = mutated_mod.get_global_var('func_1063')
call_1065 = func_1063_call(var_1064)
output = call_1065
func_1066 = relay.Function([var_1064], output)
mutated_mod['func_1066'] = func_1066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_1132 = relay.TupleGetItem(func_735_call(), 0)
call_1133 = relay.TupleGetItem(func_736_call(), 0)
const_1138 = relay.const([[[-9.821430,-9.017234,-8.128373,-4.912242,8.853435,4.980065,-0.265084,-8.614575,-3.935698,-8.491866,-9.951082,-2.528742,6.494562,-7.019727,8.365540,-0.892581],[7.757158,3.251740,-9.650758,1.563907,-2.835756,0.762370,-8.368438,-2.353701,8.583437,8.648039,1.187037,5.825727,5.543849,7.343122,7.130231,-7.729482],[-0.402152,2.685157,3.345359,1.610811,2.366893,-3.474180,-5.540383,-1.210775,5.647147,-6.634779,5.851257,5.436047,5.875104,3.683265,-1.276242,-9.119030],[-4.942435,4.825541,-6.028160,5.246248,-5.935001,-8.024661,4.075741,-2.961365,-5.922843,5.572125,-1.211065,4.908946,9.946994,8.790514,-4.276142,7.070104],[6.758553,0.470361,4.254050,2.792770,-9.511174,-3.314923,-0.668776,6.537381,7.985250,4.349515,7.080150,-9.958787,4.263045,7.742583,6.809750,-2.251859]],[[3.629448,-9.115827,0.703231,-5.507097,5.598077,9.479740,-8.488125,5.435567,3.046075,4.039268,4.837281,-9.995849,7.275164,-4.196715,-5.218759,6.756537],[-1.087365,-2.096792,4.166800,-1.109291,5.504259,7.679736,-1.770797,-8.618892,7.855847,-9.783134,5.212528,6.479423,-6.766788,2.342622,5.196924,4.150524],[-2.191784,1.148050,-8.612915,6.376909,5.954062,1.131215,5.620934,3.706028,-2.516733,2.001413,-7.043441,-4.785101,-0.839476,3.608406,4.817472,-1.361555],[-6.590714,0.166887,5.159290,3.596404,1.122920,-1.157717,-7.156774,9.064794,6.261850,-5.453379,-3.857271,2.663885,-3.053050,-9.737447,2.234731,6.583193],[-4.976789,-4.708929,3.261093,-2.674953,3.466223,2.315941,-6.200728,-5.956962,0.810892,-3.523340,7.733504,7.518241,-5.314657,7.029875,-0.668528,-7.749007]],[[-9.814085,-2.543694,-1.435593,-2.769577,6.655672,1.995678,1.512494,4.572088,-0.869434,-3.874591,7.614264,9.393864,7.509924,7.316934,0.672116,-8.484207],[0.602122,-6.821703,7.590530,3.609874,-7.092776,-1.900609,-2.569935,9.111885,5.821088,-5.598399,6.821175,2.050595,8.098791,-0.590232,-6.940829,-8.517086],[4.857166,3.970166,9.497560,9.902909,0.117838,8.701245,3.653521,-2.885133,-1.839155,-5.990628,-5.297053,-3.118699,-5.167963,-6.374927,0.327677,-8.605810],[5.521456,9.170025,-9.120719,8.300824,8.648915,5.266049,7.233419,7.949708,0.346435,8.056805,7.861280,5.508176,-3.201153,-2.862228,-6.990436,-3.959825],[-2.655046,-9.839215,-8.537972,-0.974297,7.137111,-1.151815,8.988804,-7.421676,3.007413,-4.956740,-9.506662,2.455791,-4.250011,-3.786955,-0.022638,-6.398788]],[[8.540950,-1.931271,-2.842109,3.262784,-8.959290,-0.597610,1.732859,-5.950496,-5.773753,-4.722603,-0.680751,3.419293,6.726865,7.675207,-1.320454,9.722927],[4.965672,6.157167,-6.440209,8.204745,5.182004,9.115989,-5.578988,3.141345,-7.247358,7.988877,1.087052,6.453997,4.392403,0.149138,3.418432,7.874263],[-4.678654,-9.272960,5.806836,2.763386,-7.964349,1.425242,8.863550,8.394560,-0.024829,-5.671338,-8.457880,6.088544,2.088379,2.684874,5.480982,8.585268],[-7.675443,-6.751887,2.809232,-2.682710,-7.009798,-9.470019,-5.363196,-7.189390,5.966959,1.507812,-3.082777,4.261756,1.643222,-8.443126,3.360692,-8.786450],[-0.039886,8.205397,-5.631906,5.355677,1.184723,-2.751863,7.297399,6.419218,-1.175839,-1.306191,0.146326,-4.248506,5.450029,5.244488,-3.170192,-6.353431]],[[-9.674625,-4.392764,3.102071,-0.892288,5.019153,-1.597344,6.461296,0.601482,-7.958669,-8.693705,3.687174,-4.411468,-4.746405,0.649314,2.657126,9.937972],[8.126012,2.141094,8.193297,-7.206082,-3.625319,9.108151,-1.030378,5.278111,3.813709,-5.785964,-4.950426,0.088980,-9.503027,1.758361,-6.315835,4.235296],[-5.254190,-7.706693,-6.555492,2.926633,2.153789,-7.705167,7.056029,3.682072,-8.695766,-6.587230,-1.632788,1.053694,-4.600661,3.721636,8.566029,5.657819],[9.482853,0.234405,-0.521496,-7.033049,9.967660,8.227025,0.784331,8.988268,-0.540681,-4.367346,9.331378,6.638797,2.688452,-5.950966,4.464923,-9.338559],[9.904595,3.042164,-3.545368,-4.209488,-8.317337,1.652792,-0.898782,0.853773,-2.192108,6.734946,8.140251,5.341898,2.839633,1.872920,6.300445,2.138916]],[[1.354956,-9.737768,1.775204,-7.803727,-9.176510,9.954293,-9.823388,0.128563,-2.478601,3.224310,6.128974,-3.601168,-9.643682,-9.941926,-0.156389,6.690916],[-5.645833,3.392648,-0.009186,1.557033,2.438963,4.966204,-2.909229,-9.101826,3.331794,-4.153919,9.763356,-9.215612,2.934611,0.777901,-8.463761,1.085808],[8.414687,-4.565249,-5.101771,-6.726120,-6.894032,-1.047015,9.906408,-0.451756,-5.694181,1.166348,2.263978,5.349100,-4.243632,-9.667126,7.693238,0.127545],[0.179080,-6.182240,-1.738490,9.181885,-0.181731,3.086053,4.815791,4.643307,-6.467706,3.761538,-7.610189,-4.188312,6.621358,0.384167,5.519469,8.762849],[7.696578,-2.342621,1.553989,-6.082166,7.812122,4.550044,6.049644,-2.127934,8.167526,-5.679573,7.798800,3.420561,1.412412,7.482516,0.982731,4.243535]],[[1.876094,-1.355909,-5.946702,-1.132187,-9.621320,-4.125661,-7.726588,-1.593185,-0.760191,4.790335,3.268394,-0.481503,-9.468187,2.811745,1.734703,-6.912957],[1.475507,4.200111,8.298565,5.200785,4.236551,-5.471535,2.493769,1.785575,2.371583,6.280330,5.435254,9.318239,2.176365,-5.409010,-4.200657,2.253108],[1.003596,4.309028,3.859062,4.190841,-8.425594,-2.336250,-2.330776,6.628349,6.219810,-2.103551,-7.179885,-5.991394,4.169418,-3.291566,0.269391,1.992770],[-7.387620,3.187164,0.346377,-4.076177,-5.292172,2.239216,6.083777,-9.275429,7.086513,2.903271,7.735806,-7.889548,-8.232500,-8.563710,-9.901182,7.137060],[-8.187883,-3.553404,1.200939,3.843315,-6.955043,-3.780676,6.233417,-4.397418,0.959467,-8.924946,0.390869,8.009509,-8.592514,5.715124,3.398576,7.991745]],[[8.469660,-3.232469,1.601136,4.803371,-7.035944,1.549466,-6.088405,3.917679,8.757091,-0.574749,-8.873775,5.501430,7.381203,1.179977,1.413154,-4.951005],[7.129656,9.386741,-0.279691,-3.702613,-1.821703,-4.574420,2.151272,-8.740002,-2.635577,4.959022,9.797901,2.003979,3.899355,8.413358,1.024990,8.359402],[-3.731156,6.362047,5.359353,-8.616779,9.871286,0.147410,-2.853120,-2.912768,-1.635041,0.939573,-0.424016,1.508137,7.846589,-1.183643,-3.785073,9.630937],[-2.926872,-4.747772,-3.110302,0.021212,2.519809,-8.623319,-3.688637,-0.565334,-9.391356,-3.347149,-7.786504,-0.723833,6.780624,2.845988,0.926431,-2.206395],[7.566846,0.125072,7.955849,-3.534349,7.159869,-6.618596,2.516119,2.821451,-6.972190,-9.922655,4.767091,7.221060,2.056790,-9.446328,5.641594,-8.844791]],[[2.494911,1.225303,-0.539653,-2.424810,-1.923101,6.003142,5.440813,-7.708194,3.572270,7.320183,4.255848,9.234588,8.668507,5.843785,-1.319940,0.893885],[-1.390009,5.100990,-8.312794,-1.962487,-0.341480,-8.403680,-6.036935,-1.438686,6.607709,-6.274916,-5.780104,5.782723,-1.735259,-0.663392,-2.579918,-3.089631],[-3.232167,9.000456,9.111504,-9.021182,-2.420942,-8.277741,9.284634,-4.349005,-6.332881,2.694302,-6.328432,-7.842524,-4.554452,0.940350,-5.043820,1.969376],[5.395097,-2.647517,-4.621583,9.143521,4.279036,-4.027827,-9.944699,-4.930722,9.014996,7.093765,-8.473114,-5.079711,-8.552628,-2.775728,-4.294064,-8.562314],[-8.351306,-0.231740,1.203698,4.245953,4.461032,4.582303,-0.745364,-2.046572,5.326448,3.235111,8.376498,-9.861446,-0.073362,1.853084,-3.446619,-3.507448]],[[-3.629166,-6.687457,-0.919512,-1.014698,7.977573,9.527517,8.339235,5.177161,0.675405,6.491678,8.384930,8.309199,-2.941482,-6.392940,-0.208115,7.155689],[5.899447,-0.384549,-9.447652,-4.103801,-1.215273,1.792745,0.148452,-9.875654,-7.067411,-5.411674,-0.304984,2.661025,-8.342984,2.030478,-6.909133,6.625771],[-3.577878,-6.097993,-2.220570,-1.050425,-8.393134,6.544778,6.562840,6.052237,4.723669,0.658158,0.113022,-5.402141,-4.791829,-2.470095,-2.187791,-2.327081],[5.312473,0.076277,2.230338,-2.392845,-2.442198,-9.984109,8.130620,1.845095,0.455147,-1.169846,2.169990,-1.625487,0.971744,-5.881988,-3.033093,-5.445638],[0.053751,8.942346,-3.031045,0.229766,1.921887,-7.404482,1.263780,7.982364,-9.406494,5.056691,-6.349543,9.635315,-6.264237,-1.223642,-1.303171,-6.535875]],[[-1.010500,3.657170,5.993390,9.368954,-8.136580,5.551684,6.589493,-1.454643,0.388242,2.799309,9.303985,0.276604,2.547779,-9.314423,-8.217187,6.945933],[-4.297947,0.696488,6.233049,5.263867,-2.634130,0.898896,5.474553,1.042649,8.032048,3.836460,9.953920,-3.315567,-5.237614,7.721129,1.406655,1.548817],[1.994987,6.700993,-2.631487,-1.774737,-8.158244,-6.320116,3.999401,-7.117885,6.952415,2.612486,-0.636905,5.310362,-5.091006,2.996495,0.865110,1.425507],[-8.549814,-4.654121,6.713519,0.774636,-8.831378,-2.386773,-4.091331,5.781111,-5.477035,-0.884231,-7.548762,2.895644,-3.763664,4.610740,4.262370,-3.024520],[8.996539,-2.761394,1.137401,-3.776091,-3.090926,6.754863,4.786997,-9.048064,3.574041,-0.703454,-3.310775,-3.131530,0.874031,-6.055390,5.787034,-8.822257]],[[2.544828,2.529859,-1.147717,9.108891,-0.195317,8.885010,0.898493,3.980545,0.185759,-9.205995,0.955829,-2.945357,-7.305281,-0.916575,-9.578260,7.902627],[8.328946,-1.637328,-6.530539,-2.876858,9.510666,3.807492,1.451077,7.785110,-9.652228,-4.715581,5.384809,-6.713428,-4.190273,5.568056,9.654314,-4.116345],[6.471309,3.511862,-8.645852,1.808889,2.109405,-9.577730,2.708740,7.599218,-7.687806,-6.591684,6.987606,6.905542,9.792458,-0.143335,6.776304,9.538252],[6.561940,8.760410,6.909931,1.327832,5.907420,1.883805,-7.124581,-3.970380,2.030229,-1.838323,-9.701780,-6.886030,-4.234829,-6.590619,9.722764,-0.045132],[-2.578071,8.942383,-4.492233,1.174317,-2.289840,5.983972,4.727185,7.998125,-9.160093,3.405589,-4.445421,-8.860098,-4.948295,-4.741223,-5.550100,1.977536]],[[-2.244183,-3.241317,7.962591,-0.875254,6.505396,-3.810471,-2.266854,6.912670,2.059511,0.867151,-8.928797,-6.054348,-0.550481,-0.420518,-4.894393,-8.839825],[-8.914119,5.016720,-1.245707,-8.395605,2.455571,-8.261295,-3.433673,-1.541620,2.604590,3.103675,5.085127,-9.989469,1.360553,6.543748,-7.973262,-9.600607],[-2.724887,4.547471,-5.777204,-0.352321,-4.585477,2.850866,-6.225368,7.149140,3.876786,2.620007,-0.285603,-5.525393,1.255826,7.064108,3.365716,-0.026009],[-2.059377,-4.940053,8.506862,-7.884175,-4.227791,4.354280,-2.536372,-0.683210,0.729710,-8.116708,5.571846,9.696205,-4.518404,5.279155,5.271859,-1.384832],[0.956902,-7.061650,9.968237,-3.545055,-1.489356,4.155607,-8.637589,-1.813229,9.199807,-7.974804,0.539438,5.032411,-8.223752,-1.766334,3.200251,4.098312]]], dtype = "float32")#candidate|1138|(13, 5, 16)|const|float32
bop_1139 = relay.greater(call_1132.astype('bool'), relay.reshape(const_1138.astype('bool'), relay.shape_of(call_1132))) # shape=(13, 5, 16)
bop_1142 = relay.greater(call_1133.astype('bool'), relay.reshape(const_1138.astype('bool'), relay.shape_of(call_1133))) # shape=(13, 5, 16)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_1150 = relay.TupleGetItem(func_735_call(), 0)
call_1151 = relay.TupleGetItem(func_736_call(), 0)
output = relay.Tuple([bop_1139,call_1150,])
output2 = relay.Tuple([bop_1142,call_1151,])
func_1156 = relay.Function([], output)
mod['func_1156'] = func_1156
mod = relay.transform.InferType()(mod)
mutated_mod['func_1156'] = func_1156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mutated_mod.get_global_var('func_1156')
call_1157 = func_1156_call()
output = call_1157
func_1158 = relay.Function([], output)
mutated_mod['func_1158'] = func_1158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_1199 = relay.TupleGetItem(func_735_call(), 0)
call_1200 = relay.TupleGetItem(func_736_call(), 0)
func_972_call = mod.get_global_var('func_972')
func_976_call = mutated_mod.get_global_var('func_976')
var_1237 = relay.var("var_1237", dtype = "uint64", shape = ())#candidate|1237|()|var|uint64
var_1238 = relay.var("var_1238", dtype = "uint64", shape = (36,))#candidate|1238|(36,)|var|uint64
const_1239 = relay.const([8,5,1,4,10,-7,-9,6,9,-6,-10,5,9,-6,-6,2,-2,9,10,7,3,4,7,6,9,6,-2,-7,-9,-6,10,8,2,5,3,3,-6,-5,-6,8,3,-7,4,-8,8,9,9,-8,-7,4,-7,-5,5,-5,-3,8,-8,10,10,-7,1,4,3,2,9,9,2,-8,-4,-10,9,-2,3,-2,-2,-1,5,3,-1,10,-1,-5,-3,-4,9,3,-9,4,-8,7,5,1,5,-2,10,-6,10,-8,8,1,3,5,10,-6,-8,-8,-2,5,-4,-6,8,9,-5,3,8,-1,2,7,-5,-2,-7,-6,-9,6,9,-10,-4,-4,-6,2,-5,-7,9,10,-6,-9,-5,1,9,7,-9,-2,8,4,7,9,1,10,1,-5,4,-1,-2,-3,2,-6,1,-6,6,-4,-7,4,1,7,-5,1,8,-8,-6,1,5,1,-5,-2,6,-5,-8,-1,2,3,10,-7,-5,1,8,-1,9,-8,8,9,-7,-9,3,6,-5,3,2,-8,-6,10,10,8,3,8,-5,7,1,-7,-3,-10,-9,-8,2,9,2,4,1,3,-8,-7,-8,-5,8,3,-4,-4,3,-5,5,-7,-3,2,4,10,-8,5,1,5,3,-3,-1,9,6,-1,9,-1,-8,8,8,-4,-7,2,-10,-7,7,9,6,1,5,2,-9,-6,-4,1,-6,-10,-5,-3,3,9,2,7,-9,10,2,5,5,-10,-10,2,-5,1,7,4,-7,-10,-2,-7,-5,2,8,-1,-1,-3,4,-8,-10,-9,-4,8,8,10,-5,1,-3,9,4,-6,3,-7,7,-5,2,-7,-9,-8,1,8,-3,7,-4,9,8,-5,5,7,-7,10,-6,-8,9,3,1,7,-2,2,-3,-6,-8,-2,-2,6,3,9,-2,6,2,-3,-1,-9,-7,1,-3,8,7,-4,-1,10,-6,-3,7,-2,-9,2,-7,4,-1,1,1,7,3,9,-4,8,-8,-10,2,-2,7,2,-4,-8,-1,-10,10,10,-1,-7,-8,6,-8,8,8,-1,-3,-9], dtype = "int64")#candidate|1239|(396,)|const|int64
call_1236 = relay.TupleGetItem(func_972_call(relay.reshape(var_1237.astype('uint64'), []), relay.reshape(var_1238.astype('uint64'), [6, 6, 1]), relay.reshape(const_1239.astype('int64'), [396,]), ), 0)
call_1240 = relay.TupleGetItem(func_976_call(relay.reshape(var_1237.astype('uint64'), []), relay.reshape(var_1238.astype('uint64'), [6, 6, 1]), relay.reshape(const_1239.astype('int64'), [396,]), ), 0)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_1251 = relay.TupleGetItem(func_735_call(), 0)
call_1252 = relay.TupleGetItem(func_736_call(), 0)
bop_1254 = relay.maximum(call_1199.astype('int64'), relay.reshape(call_1251.astype('int64'), relay.shape_of(call_1199))) # shape=(13, 5, 16)
bop_1257 = relay.maximum(call_1200.astype('int64'), relay.reshape(call_1252.astype('int64'), relay.shape_of(call_1200))) # shape=(13, 5, 16)
output = relay.Tuple([call_1236,var_1237,var_1238,const_1239,bop_1254,])
output2 = relay.Tuple([call_1240,var_1237,var_1238,const_1239,bop_1257,])
func_1263 = relay.Function([var_1237,var_1238,], output)
mod['func_1263'] = func_1263
mod = relay.transform.InferType()(mod)
mutated_mod['func_1263'] = func_1263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1263_call = mutated_mod.get_global_var('func_1263')
var_1265 = relay.var("var_1265", dtype = "uint64", shape = ())#candidate|1265|()|var|uint64
var_1266 = relay.var("var_1266", dtype = "uint64", shape = (36,))#candidate|1266|(36,)|var|uint64
call_1264 = func_1263_call(var_1265,var_1266,)
output = call_1264
func_1267 = relay.Function([var_1265,var_1266,], output)
mutated_mod['func_1267'] = func_1267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_1289 = relay.TupleGetItem(func_1156_call(), 0)
call_1290 = relay.TupleGetItem(func_1158_call(), 0)
var_1311 = relay.var("var_1311", dtype = "bool", shape = (13, 5, 16))#candidate|1311|(13, 5, 16)|var|bool
bop_1312 = relay.minimum(call_1289.astype('uint64'), relay.reshape(var_1311.astype('uint64'), relay.shape_of(call_1289))) # shape=(13, 5, 16)
bop_1315 = relay.minimum(call_1290.astype('uint64'), relay.reshape(var_1311.astype('uint64'), relay.shape_of(call_1290))) # shape=(13, 5, 16)
uop_1330 = relay.cosh(bop_1312.astype('float64')) # shape=(13, 5, 16)
uop_1332 = relay.cosh(bop_1315.astype('float64')) # shape=(13, 5, 16)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_1334 = func_818_call()
call_1335 = func_818_call()
func_1156_call = mod.get_global_var('func_1156')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_1339 = relay.TupleGetItem(func_1156_call(), 1)
call_1340 = relay.TupleGetItem(func_1158_call(), 1)
func_915_call = mod.get_global_var('func_915')
func_918_call = mutated_mod.get_global_var('func_918')
const_1344 = relay.const([10,5,-5,-1,-9,-9,1,7,4,6,3,-6,-10,-4,-7,-10,-2,-2,-10,-9,6,-3,1,-4,10,-2,4,7,-10,-2,-3,-3,-9,-9,2,10,-5,4,3,-10,10,5,1,1,-3,10,7,-1,2,5,-6,-9,-8,-7,-3,-3,1,8,-3,5,1,-2,-1,-3,2,5,7,-1,9,7,4,-6,1,9,2,-10,9,9,6,1,4,-6,-3,5,4,5,-3,5,4,5,-7,-7,8,4,-10,10,4,4,-2,1,-2,-5,9,6,-3,-7,8,7,-2,8,8,7,-3,-1,-1,-4,-1,7,-1,1,-5,-4,-4,7,-2,9,4,-1,-8,-3,-5,3,5,5,-2,10,7,-10,-7,-9,5,-10,-6,5,3,5,4,3,-8,5,-5,1,1,4,-10,8,3,-4,6,4,-5,9,-1,-1,1,10,1,7,-3,-1,-4,-10,-6,7,-4,-3,-2,-10,-5,1,-7,9,4,-1,6,4,2,6,-10,9,-4,5,-5,10,-6,-5,5,2,-9,-6,8,5,-4,7,2,8,-10,-3,-7,-6,-5,7,-4,-9,5,-8,-7,-4,-1,-7,-9,-10,-7,6,7,9,3,-4,-7,10,10,7,-8,-10,-4,-4,1,3,-7,2,-1,8,6,-10,4,-7,7,-4,6,6,3,2,1,2,4,-4,6,10,-1,-5,2,1,-7,-4,9,3,-9,-5,-10,-10,2,1,3,10,-2,1,8,-3,7,9,9,-9,9,-9,-3,-5,-3,3,-8,4,-7,-5,-6,-9,10,-10,-2,-7,3,1,-7,8,-3,-7,-3,2,-3,2,-9,-4,-1,-8,-1,3,1,9,10,-7,10,5,-3,1,8,-9,6,-6,6,-7,6,-3,4,4,-1,7,5,3,3,-5,-9,7,-8,10,4,-2,-7,-9,7,5,4,-9,7,6,8,-8,8,10,-8,-1,-10,-5,10,-8,-9,6,6,-2,-7,-1,-2,2,6,-7,2,7,2,9,-9,-8,-1,-2,10,-9,2,2,1,-1,5,1,5,1,3,-9,8,-1,-4,5], dtype = "int64")#candidate|1344|(396,)|const|int64
call_1343 = func_915_call(relay.reshape(const_1344.astype('int64'), [6, 6, 11]), relay.reshape(const_1344.astype('int64'), [6, 6, 11]), )
call_1345 = func_915_call(relay.reshape(const_1344.astype('int64'), [6, 6, 11]), relay.reshape(const_1344.astype('int64'), [6, 6, 11]), )
func_575_call = mod.get_global_var('func_575')
func_577_call = mutated_mod.get_global_var('func_577')
const_1352 = relay.const([-2.048970,5.327195,9.787920,9.529278,8.230363,-6.956527,0.569381,1.086847,7.742214,-3.605445,-9.039772,7.821280,9.501946,1.650850,-4.413658,5.181543,-7.821526,6.608850,5.328009,2.876445,-4.011517,2.859207,6.033532,1.289466,7.398840,3.668021,4.367098,-5.859904,-1.970193,7.480758,6.055621,2.614881,-7.899343,0.207455,-5.426496,-4.369624,-6.718743,-0.922807,-2.076036,-4.330781,0.139223,6.527546,0.329681,-5.316044,0.320004,-0.616308,-6.579939,-5.922014,-1.296989,-5.173140,5.795408,3.789543,-7.566312,0.595792,8.049044,-4.285067,1.084534,2.999576,-6.205196,-0.955864,-7.850734,-6.896333,7.049674,5.038666,-6.856436,-9.505269,-1.976721,3.096033,9.589802,0.929302,-8.864147,2.467339,-5.463998,-1.188434,-9.199444,-8.056990,7.142282,7.404252,-5.911580,-4.052295,-6.097038,-5.930703,-0.409323,-7.670593,-1.997314,3.153874,2.782673,1.182689,2.716012,-6.986327,-2.665519,-5.776032,2.117622,-4.595688,-0.238373,-5.283941,7.490924,3.308446,-1.480268,6.351188,-9.980072,-5.183222,-4.722827,8.252605,3.189845,6.965322,-3.902442,-7.067898,-8.943736,9.800557,5.959906,4.908658,-6.806852,3.703993,-5.862007,-6.914515,4.806250,3.162641,-9.387904,1.243933,-6.760568,8.943459,4.931301,8.518555,7.832551,-7.661750,-5.295740,5.003357,2.917978,-3.705177,-6.801000,-6.279625,9.041254,2.400688,-4.478957,4.941535,6.063035,7.558495,-8.077662,-3.302531,-4.893925,1.921221,0.724725,5.006953,9.431401,-4.230722,-5.742395,7.489560,-4.852555,8.356487,4.361953,-9.019612,-3.187121,5.099357,-4.519597,-4.772956,6.355417,1.746941,-8.064904,6.160147,-8.788250,2.905915,-9.601262,-0.109255,0.613048,1.944984,9.848469,-5.437982,5.872140,-4.693201,6.367957,-6.509533,-8.966719,2.358849,8.799496,-7.139922,4.723720,-5.847361,-0.965607,-5.788768,2.435528,4.645450,2.400361,-4.967209,1.922350,-0.450878,7.635485,9.829545,8.627921,-0.094934,3.755562,-3.229905,7.255177,-5.865351,-5.557381,3.602354,-5.895698,-4.954269,-5.076586,8.342151,2.983791,3.735720,-1.249663,9.446456,3.474856,-3.479193,-8.547394,8.926688,-8.444489,-2.630603,8.351505,-6.687929,-9.919741,4.717441,7.009499,-3.358818,9.746216,6.988806,6.399985,3.021201,-5.820816,6.277336,-7.822694,-8.825931,6.750088,5.099332,1.973963,-7.803916,-8.172268,-3.166488,-5.383440,5.071628,-4.007019,-1.893380,8.380770,7.120224,2.412024,-1.842811,2.452244,-0.609060,7.414561,6.859667,9.226073,-2.947606,-5.392055,7.691618,-4.982057,-6.180909,7.371083,-4.369077,-4.477522,0.784022,-4.875926,0.769506,-0.814923,-0.208516,-8.205666,-0.336581,-0.303979,4.136614,-1.641930,4.153907,0.820293,0.311757,-4.553664,7.672284,9.038913,0.077547,7.337199,-5.445919,-1.618183,7.446200,-4.734319,4.104127,5.442397,0.097925,0.290031,-8.508408,-1.194634,-2.089496,0.537829,1.222688,-7.624154,-9.275589,-9.331790,8.825900,-9.932928,6.016307,0.080359,7.910888,2.931210,-7.944606,9.113314,-4.842999,-1.043251,8.348218,-2.783271,2.119619,0.410318,-0.607820,-9.964514,-4.860353,0.200605,6.266198,-2.114147,6.049761,-1.896046,0.830916,-0.863864,4.204405,-7.794474,-2.747796,-6.819810,4.964391,6.846768,3.680654,4.905704,-3.115353,6.031388,9.431950,-3.527549,4.330660,-5.219242,4.214155,-9.196305,-1.111325,6.245236,-1.454755,-3.287841,3.372058,3.705862,0.656838,-0.029977,3.893044,3.290916,-6.187799,9.636063,-4.244713,-2.468437,-5.906923,7.034650,0.612022,1.719126,-1.298646,2.715289,-0.677851,-5.175458,4.513146,5.185080,-2.855522,-5.678079,6.835511,-1.978186,9.931296,5.843619,-1.393141,-0.152257,3.060436,9.471611,1.877956,0.030675,9.025058,8.169676,-5.335479,-2.273747,-3.093324,2.254046,-7.542715,5.609982,-5.956473,-8.906372,0.056127,-0.760855,-9.373020,-2.395200,-3.524243,2.046539,0.308461,4.353132,-8.370251,-2.926579,-0.149662,-9.587039,-5.000435,-5.503959,-0.211372,9.575587,-4.398654,-0.659047,2.741911,-8.660876,-9.755070,2.391937,3.683223,3.466269,-2.474519,-6.062827,-9.057815,-5.186320,-1.887826,3.425324,2.781236,5.727416,2.413440,-9.231399,-7.255296,-1.752949,5.498901,9.200083,-7.245334,-5.843428,-1.511943,7.012881,1.007073,2.150294,0.334811,-2.548162,2.703598,-3.640457,0.258055,9.364654,6.716513,-5.505085,-8.364340,7.574999,-2.306801,4.659493,-5.091038,3.753918,-7.584838,-6.543159,-0.061936,-6.487911,-0.496551,-2.206137,-5.096320,1.116371,2.559105,-1.294369,9.028331,5.936934,4.028688,6.739493,0.695805,4.922530,0.376726,8.526843,-7.938290,-2.303107,-1.354912,-6.514441,-4.150018,6.329983,5.709817,3.240293,4.031394,-0.653494,-4.101173,8.389156,9.871120,3.861616,-6.449671,-3.120504,2.125806,8.707843,1.087469,-1.285371,8.683359,2.311753,0.081719,-9.649915,9.600836,2.935388,-7.055772,-7.636998,9.948429,-1.075218,-2.766056,-7.920218,7.104651,-0.396407,3.049705,6.809515,-2.543436,2.807149,4.318425,-2.442661,-4.553275,-2.518339,-6.252155,-2.172782,2.805505,4.154590,6.034724,0.923764,6.987143,7.518078,-8.569587,-8.172918,-6.324819,-1.332481,9.890127,-9.317519,-9.872750,-0.157865,6.716658,-2.237884,6.818838,9.370920,0.139582,-3.515300,-1.702479,8.840177,-6.422369,3.350806,0.887070,-3.402293,-4.353490,-3.314213,-1.353625,-7.505449,-1.370680,-7.922124,-1.726038,-7.074482,-5.510151,0.028114,1.832238,6.388069,-3.295886,-8.380982,-6.910616,-6.649492,0.529498,1.196198,4.049011,-0.840342,-7.380271,5.109565,-2.610413,-4.274282,-5.391125,2.009058,-3.669757,4.259766,3.864896,-5.809586,2.187244,-3.861012,8.901548,-4.122527,8.972496,-6.226608,0.952252,0.365283,-8.220188,-1.712880,8.925138,-0.996128,-9.743834,-1.778447,0.857214,2.324966,6.748950,8.916771,4.274799,1.231439,-2.798302,-4.218536,0.595454,4.517415,5.472258,2.227711,3.646704,-4.729363,5.220691,5.215421,1.864133,8.828180,3.807158,0.835085,-2.885707,2.732353,4.935505,-6.144513,0.232030,-3.409578,9.036676,0.592931,3.847672,-1.626672,-5.306761,0.566481,-8.427476,-9.020043,2.576676,-8.296384,-8.833584,2.979773,7.560524,3.930150,1.285013,7.455962,7.455499,-0.704020,-8.303820,5.018472,-7.160936,-5.338837,-5.565279,-1.650089,3.928679,4.116036,5.616932,8.150614,8.895658,1.660297,-9.109345,6.441541,-2.833041,-1.454527,3.193761,4.034359,-4.431739,-8.192967,3.227687,-7.070158,-3.715767,-5.522308,-6.513915,-3.874240,-0.954925,5.353102,7.953362,-8.816357,-2.006390,-0.739489,7.139847,5.571171,-7.376935,-4.035422,9.154926,-8.139609,-7.902268,7.862937,-9.459397,-9.737177,4.997176,0.213484,8.641878,-0.561969,-7.268553,6.547851,9.625603,3.186254,-5.066463,8.881233,-6.654277,8.690461,-7.521912,-0.822609,0.588315,-5.788523,-6.255598,3.168633,3.807911,7.909419,-9.026987,1.244604,3.315735,8.797372,-4.314549,8.116456,-9.185701,-3.027778,6.650924,0.739969,7.877024,-5.952824,5.896424,5.652428,8.877919,-4.390285,7.156208,7.731690,-9.845941,3.265038,7.771371,-7.932250,9.350763,9.072781,5.414340,3.136583,-8.296399,-3.578483,1.038953,-3.484257,-3.692723,6.712923,0.438906,-4.320917,7.494592,-5.436438,8.018190,2.188839,1.964097,9.794825,8.317533,-1.964076,-4.572557,-5.260872,-5.302845,5.742102,6.196411,5.936720,4.816580,8.716294,0.666145,-3.366355,-1.031643], dtype = "float32")#candidate|1352|(720,)|const|float32
call_1351 = func_575_call(relay.reshape(const_1352.astype('float32'), [8, 6, 15]))
call_1353 = func_575_call(relay.reshape(const_1352.astype('float32'), [8, 6, 15]))
output = relay.Tuple([uop_1330,call_1334,call_1339,call_1343,const_1344,call_1351,const_1352,])
output2 = relay.Tuple([uop_1332,call_1335,call_1340,call_1345,const_1344,call_1353,const_1352,])
func_1361 = relay.Function([var_1311,], output)
mod['func_1361'] = func_1361
mod = relay.transform.InferType()(mod)
mutated_mod['func_1361'] = func_1361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1362 = relay.var("var_1362", dtype = "bool", shape = (13, 5, 16))#candidate|1362|(13, 5, 16)|var|bool
func_1361_call = mutated_mod.get_global_var('func_1361')
call_1363 = func_1361_call(var_1362)
output = call_1363
func_1364 = relay.Function([var_1362], output)
mutated_mod['func_1364'] = func_1364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_788_call = mod.get_global_var('func_788')
func_789_call = mutated_mod.get_global_var('func_789')
call_1380 = func_788_call()
call_1381 = func_788_call()
output = call_1380
output2 = call_1381
func_1384 = relay.Function([], output)
mod['func_1384'] = func_1384
mod = relay.transform.InferType()(mod)
output = func_1384()
func_1385 = relay.Function([], output)
mutated_mod['func_1385'] = func_1385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_1390 = func_818_call()
call_1391 = func_818_call()
func_1063_call = mod.get_global_var('func_1063')
func_1066_call = mutated_mod.get_global_var('func_1066')
call_1399 = relay.TupleGetItem(func_1063_call(relay.reshape(call_1390.astype('float64'), [13, 5, 16])), 0)
call_1400 = relay.TupleGetItem(func_1066_call(relay.reshape(call_1390.astype('float64'), [13, 5, 16])), 0)
output = relay.Tuple([call_1390,call_1399,])
output2 = relay.Tuple([call_1391,call_1400,])
func_1407 = relay.Function([], output)
mod['func_1407'] = func_1407
mod = relay.transform.InferType()(mod)
mutated_mod['func_1407'] = func_1407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1407_call = mutated_mod.get_global_var('func_1407')
call_1408 = func_1407_call()
output = call_1408
func_1409 = relay.Function([], output)
mutated_mod['func_1409'] = func_1409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_1448 = func_1384_call()
call_1449 = func_1384_call()
func_915_call = mod.get_global_var('func_915')
func_918_call = mutated_mod.get_global_var('func_918')
const_1454 = relay.const([2,-1,8,4,4,4,1,1,2,-1,-4,1,9,5,-7,-5,-10,4,8,-4,1,-2,-8,10,1,-1,6,-2,5,10,8,2,4,8,4,-4,-1,-9,1,1,3,-6,-5,3,-8,1,-8,5,-1,-4,6,1,-6,8,-2,-1,2,-5,8,6,-10,-3,4,-2,3,-9,4,8,-2,9,-7,8,-8,6,-10,-3,1,-1,-3,9,9,-5,-10,4,1,-6,4,10,9,-9,10,3,7,8,9,4,-9,-10,1,-1,-9,-1,-4,-4,-8,-4,-6,-2,1,1,-9,-5,-3,7,2,8,-8,-4,-1,3,-3,6,2,-10,-7,-2,-5,5,3,-2,4,6,-1,2,9,9,-4,1,2,10,4,8,-8,-7,-6,8,1,2,4,-1,-1,7,5,1,1,9,-3,5,1,-4,3,9,-8,5,4,9,6,1,5,-9,5,-4,-6,-2,2,-5,2,10,-6,-1,1,-6,-5,-6,-8,9,-2,2,5,-6,1,-4,7,2,9,4,5,-4,-4,3,5,5,-6,-7,2,9,-7,6,-7,5,-4,-3,-8,1,7,-4,-7,-2,-8,5,-2,-3,5,3,10,7,9,-4,9,9,-9,-10,1,-9,-1,-9,9,2,-5,-8,-2,-10,-7,8,-10,-3,9,3,-5,1,9,9,-3,-3,-5,-3,8,-10,8,2,-4,-4,8,2,-4,-7,2,10,-8,-4,-6,4,2,8,3,-7,2,-7,-1,-2,-2,9,-9,-3,-3,-4,6,2,1,8,-7,10,-6,-2,9,-5,4,-7,2,2,7,-6,-3,2,6,9,-5,-5,-9,2,-10,9,9,-9,-7,8,-6,-8,-1,-4,-8,-2,-3,6,5,-9,2,-3,5,-4,4,6,-6,-10,5,-8,6,-8,9,10,-9,-3,9,4,7,-4,-1,2,7,6,5,-6,4,-3,-5,10,-3,7,-6,-4,8,-3,-2,-8,-6,-10,-8,5,10,8,-10,1,1,5,-8,10,9,-7,-10,-10,9,1,-6,-9,4,-2,-6,-10,-1,-4,-6,-5,2,7,-6,10], dtype = "int64")#candidate|1454|(396,)|const|int64
call_1453 = func_915_call(relay.reshape(const_1454.astype('int64'), [6, 6, 11]), relay.reshape(const_1454.astype('int64'), [6, 6, 11]), )
call_1455 = func_915_call(relay.reshape(const_1454.astype('int64'), [6, 6, 11]), relay.reshape(const_1454.astype('int64'), [6, 6, 11]), )
output = relay.Tuple([call_1448,call_1453,const_1454,])
output2 = relay.Tuple([call_1449,call_1455,const_1454,])
func_1458 = relay.Function([], output)
mod['func_1458'] = func_1458
mod = relay.transform.InferType()(mod)
mutated_mod['func_1458'] = func_1458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1458_call = mutated_mod.get_global_var('func_1458')
call_1459 = func_1458_call()
output = call_1459
func_1460 = relay.Function([], output)
mutated_mod['func_1460'] = func_1460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_1519 = relay.TupleGetItem(func_1458_call(), 0)
call_1520 = relay.TupleGetItem(func_1460_call(), 0)
func_1361_call = mod.get_global_var('func_1361')
func_1364_call = mutated_mod.get_global_var('func_1364')
call_1540 = relay.TupleGetItem(func_1361_call(relay.reshape(call_1519.astype('bool'), [13, 5, 16])), 5)
call_1541 = relay.TupleGetItem(func_1364_call(relay.reshape(call_1519.astype('bool'), [13, 5, 16])), 5)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_1555 = func_818_call()
call_1556 = func_818_call()
output = relay.Tuple([call_1519,call_1540,call_1555,])
output2 = relay.Tuple([call_1520,call_1541,call_1556,])
func_1558 = relay.Function([], output)
mod['func_1558'] = func_1558
mod = relay.transform.InferType()(mod)
mutated_mod['func_1558'] = func_1558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mutated_mod.get_global_var('func_1558')
call_1559 = func_1558_call()
output = call_1559
func_1560 = relay.Function([], output)
mutated_mod['func_1560'] = func_1560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_1616 = func_1384_call()
call_1617 = func_1384_call()
func_915_call = mod.get_global_var('func_915')
func_918_call = mutated_mod.get_global_var('func_918')
const_1629 = relay.const([[-7,1,-1,5,2,-2,-4,-3,8,2,-9,5,5,10,3,1,-5,1,-5,-4,10,7,2,10,-7,7,9,4,3,6,-4,-3,-1,6,3,-2,8,1,-1,-2,-3,-4,5,4,10,2,-9,4,3,8,2,1,9,-3,-4,9,-4,-8,9,-6,6,-4,7,6,9,-8],[-4,-4,2,5,10,3,-5,4,-7,-4,8,-5,-7,7,-5,-7,-3,-3,-6,-10,10,-2,-6,-10,7,-3,5,2,-1,6,-1,6,-5,10,7,10,5,6,-8,-4,2,2,5,9,-2,-5,-9,-8,2,-6,9,-8,-7,8,3,-4,7,-4,9,-2,10,5,-8,6,4,1],[-9,10,5,3,7,-5,-3,-9,-2,-5,-8,-4,5,8,-1,3,-8,-5,-8,-1,8,-9,4,-3,-1,-1,-1,7,6,-5,2,6,-10,3,3,-3,9,-4,-4,-1,7,5,-8,4,-8,2,7,-10,-1,5,6,-7,-1,-7,-7,-9,-2,-2,9,-6,-3,6,6,-6,-8,3],[8,8,10,-6,4,1,2,-6,-9,5,-1,-3,7,-4,-10,-9,-6,2,2,2,3,-4,9,5,4,-2,-1,2,6,-4,-2,9,-10,3,-6,10,10,-4,5,9,-1,4,9,1,9,-4,-8,8,-3,-2,8,8,-7,9,4,-9,2,-7,7,-6,5,9,2,-3,-8,4],[8,-6,-6,7,4,5,9,-6,-3,-7,4,-2,-3,1,-4,9,-9,-7,9,-5,1,-8,-3,9,9,-2,1,-9,-3,-8,-7,8,-2,-9,10,6,3,2,-2,-9,8,-4,-9,5,-3,-6,-10,6,-1,4,10,-1,-6,8,3,-9,-1,1,-5,-10,9,-1,-2,2,-4,3],[8,7,-6,-4,-4,-1,5,5,-8,10,-2,-6,-10,10,-7,-7,8,1,-1,-4,-9,8,-8,-5,7,-6,8,7,-2,-1,-9,-4,-4,-10,1,8,10,-3,10,-7,-5,9,-6,-3,-1,-7,-5,-7,5,6,3,5,1,-4,-10,-1,5,-10,4,9,-10,-10,-5,-7,-6,8]], dtype = "int64")#candidate|1629|(6, 66)|const|int64
call_1628 = func_915_call(relay.reshape(const_1629.astype('int64'), [6, 6, 11]), relay.reshape(const_1629.astype('int64'), [6, 6, 11]), )
call_1630 = func_915_call(relay.reshape(const_1629.astype('int64'), [6, 6, 11]), relay.reshape(const_1629.astype('int64'), [6, 6, 11]), )
output = relay.Tuple([call_1616,call_1628,const_1629,])
output2 = relay.Tuple([call_1617,call_1630,const_1629,])
func_1639 = relay.Function([], output)
mod['func_1639'] = func_1639
mod = relay.transform.InferType()(mod)
mutated_mod['func_1639'] = func_1639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mutated_mod.get_global_var('func_1639')
call_1640 = func_1639_call()
output = call_1640
func_1641 = relay.Function([], output)
mutated_mod['func_1641'] = func_1641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_1686 = relay.TupleGetItem(func_735_call(), 0)
call_1687 = relay.TupleGetItem(func_736_call(), 0)
output = relay.Tuple([call_1686,])
output2 = relay.Tuple([call_1687,])
func_1695 = relay.Function([], output)
mod['func_1695'] = func_1695
mod = relay.transform.InferType()(mod)
mutated_mod['func_1695'] = func_1695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mutated_mod.get_global_var('func_1695')
call_1696 = func_1695_call()
output = call_1696
func_1697 = relay.Function([], output)
mutated_mod['func_1697'] = func_1697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1723 = relay.var("var_1723", dtype = "uint64", shape = (15, 5, 8))#candidate|1723|(15, 5, 8)|var|uint64
var_1724 = relay.var("var_1724", dtype = "uint64", shape = (15, 5, 8))#candidate|1724|(15, 5, 8)|var|uint64
bop_1725 = relay.greater(var_1723.astype('bool'), relay.reshape(var_1724.astype('bool'), relay.shape_of(var_1723))) # shape=(15, 5, 8)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_1732 = func_818_call()
call_1733 = func_818_call()
output = relay.Tuple([bop_1725,call_1732,])
output2 = relay.Tuple([bop_1725,call_1733,])
func_1742 = relay.Function([var_1723,var_1724,], output)
mod['func_1742'] = func_1742
mod = relay.transform.InferType()(mod)
var_1743 = relay.var("var_1743", dtype = "uint64", shape = (15, 5, 8))#candidate|1743|(15, 5, 8)|var|uint64
var_1744 = relay.var("var_1744", dtype = "uint64", shape = (15, 5, 8))#candidate|1744|(15, 5, 8)|var|uint64
output = func_1742(var_1743,var_1744,)
func_1745 = relay.Function([var_1743,var_1744,], output)
mutated_mod['func_1745'] = func_1745
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1803 = relay.var("var_1803", dtype = "float32", shape = (10, 6, 4))#candidate|1803|(10, 6, 4)|var|float32
uop_1804 = relay.cos(var_1803.astype('float32')) # shape=(10, 6, 4)
output = relay.Tuple([uop_1804,])
output2 = relay.Tuple([uop_1804,])
func_1809 = relay.Function([var_1803,], output)
mod['func_1809'] = func_1809
mod = relay.transform.InferType()(mod)
var_1810 = relay.var("var_1810", dtype = "float32", shape = (10, 6, 4))#candidate|1810|(10, 6, 4)|var|float32
output = func_1809(var_1810)
func_1811 = relay.Function([var_1810], output)
mutated_mod['func_1811'] = func_1811
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1836 = relay.var("var_1836", dtype = "uint64", shape = (7, 9, 3))#candidate|1836|(7, 9, 3)|var|uint64
var_1837 = relay.var("var_1837", dtype = "uint64", shape = (7, 9, 3))#candidate|1837|(7, 9, 3)|var|uint64
bop_1838 = relay.subtract(var_1836.astype('uint64'), relay.reshape(var_1837.astype('uint64'), relay.shape_of(var_1836))) # shape=(7, 9, 3)
func_915_call = mod.get_global_var('func_915')
func_918_call = mutated_mod.get_global_var('func_918')
const_1848 = relay.const([-9,1,-4,7,-2,10,4,-2,8,-3,1,-2,-2,2,-6,-1,9,-4,-6,-10,-6,4,-2,6,-10,-3,-7,-5,-5,-9,8,-5,4,2,2,10,-2,-1,-1,-2,-6,-1,10,-1,3,-6,-10,7,-2,-5,1,-6,10,-7,2,9,6,10,5,3,-1,-8,1,8,6,-10,9,-2,-1,9,10,-3,9,4,-9,4,5,-3,-9,10,4,-4,5,-3,7,-4,-1,5,4,-8,6,3,3,-10,6,-10,1,5,-2,-6,10,5,-9,-5,-10,4,-2,1,-2,10,2,-10,5,-1,-4,5,-9,7,-1,-10,3,8,10,5,-10,-2,6,-5,7,-10,-5,3,5,1,-4,6,-7,-5,2,1,-6,2,4,6,5,10,-1,5,5,-2,9,8,-2,2,-4,6,7,1,9,-3,-3,6,10,-2,1,5,3,7,4,-1,-4,8,9,3,9,2,-10,8,4,-4,5,7,3,-3,-3,5,3,7,5,10,7,-7,-4,7,-4,-3,2,-7,3,-2,-6,2,-2,-1,-10,-2,5,-3,4,-7,5,-7,1,2,4,8,2,-9,-8,3,1,4,5,-3,9,9,-1,1,-10,3,8,2,-1,4,1,-9,3,8,-3,8,10,-8,-4,2,3,-8,7,10,-10,7,-4,-4,10,-6,5,-6,5,-8,4,-3,-3,7,10,8,-4,5,-3,-4,3,7,7,-2,7,1,10,-8,6,3,-3,-8,-7,-4,4,-3,-1,4,6,-10,6,6,-7,8,-10,-9,-3,-1,-2,1,4,-2,8,4,-1,-7,-8,-10,-7,-8,1,-1,6,7,8,3,-5,8,-10,7,9,-8,-9,1,9,3,5,-6,-8,9,10,10,9,-9,2,-2,-10,-5,-1,4,-6,-9,3,-1,8,-6,4,-4,-4,3,6,7,6,-6,-10,6,-7,6,2,-10,-9,-9,-2,7,-5,-2,-8,9,-2,-2,5,-8,-4,-4,-2,-5,3,-6,-6,-1,-5,-1,3,-8,7,7,9,6,-10,10,-7,4,10,4,-3,6,-7,1], dtype = "int64")#candidate|1848|(396,)|const|int64
call_1847 = func_915_call(relay.reshape(const_1848.astype('int64'), [6, 6, 11]), relay.reshape(const_1848.astype('int64'), [6, 6, 11]), )
call_1849 = func_915_call(relay.reshape(const_1848.astype('int64'), [6, 6, 11]), relay.reshape(const_1848.astype('int64'), [6, 6, 11]), )
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_1853 = func_818_call()
call_1854 = func_818_call()
output = relay.Tuple([bop_1838,call_1847,const_1848,call_1853,])
output2 = relay.Tuple([bop_1838,call_1849,const_1848,call_1854,])
func_1857 = relay.Function([var_1836,var_1837,], output)
mod['func_1857'] = func_1857
mod = relay.transform.InferType()(mod)
mutated_mod['func_1857'] = func_1857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1857_call = mutated_mod.get_global_var('func_1857')
var_1859 = relay.var("var_1859", dtype = "uint64", shape = (7, 9, 3))#candidate|1859|(7, 9, 3)|var|uint64
var_1860 = relay.var("var_1860", dtype = "uint64", shape = (7, 9, 3))#candidate|1860|(7, 9, 3)|var|uint64
call_1858 = func_1857_call(var_1859,var_1860,)
output = call_1858
func_1861 = relay.Function([var_1859,var_1860,], output)
mutated_mod['func_1861'] = func_1861
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1869 = relay.var("var_1869", dtype = "uint64", shape = (11, 11, 10))#candidate|1869|(11, 11, 10)|var|uint64
const_1870 = relay.const([[[5,6,-4,-8,-9,5,-3,-8,4,10],[-10,-1,-9,10,-8,-7,-10,9,-8,-4],[-3,-4,-8,3,-2,-5,7,3,-3,-6],[-9,3,6,3,1,2,8,10,-10,-9],[-8,-7,2,-5,-2,5,-5,-1,2,-8],[3,7,-8,9,-10,10,-7,-4,-4,-4],[-9,-8,-9,7,6,4,-5,-1,8,1],[-10,-5,-8,4,8,-8,8,3,-8,-9],[-6,-4,-2,4,-4,-9,7,-9,-4,7],[-4,-1,3,-10,-4,5,-9,-1,-3,2],[-1,10,-4,-3,4,2,-4,-10,7,-10]],[[-10,9,6,-2,-4,-4,5,2,-5,-10],[2,-8,-5,5,-2,-10,-2,2,8,4],[-10,6,-4,-7,-3,1,8,-4,-2,4],[-4,4,5,3,-2,7,7,7,4,-4],[2,-2,7,-5,5,-2,-4,-4,-6,2],[5,-8,-3,-4,1,-1,5,3,-1,2],[-6,4,3,-6,-6,7,-8,-4,9,7],[7,-3,3,-4,-4,10,-1,1,4,-4],[-8,4,5,-4,-7,6,-8,4,-5,-8],[5,1,2,-1,-1,-9,-6,-2,10,-5],[8,-10,-10,-10,5,6,-5,9,8,4]],[[-6,6,-5,-1,6,-1,-7,3,-7,2],[10,-3,4,-2,3,2,10,-9,8,-9],[8,-1,3,4,-6,4,-4,-2,-1,1],[-2,-1,-4,-7,-2,1,8,-7,-5,-1],[-7,10,3,10,-8,-6,-7,-5,9,5],[8,-1,5,5,9,4,2,7,-6,9],[-9,6,-4,-7,3,-4,8,-7,-5,5],[-10,-10,-3,-10,-6,-2,-4,1,9,10],[-1,-3,2,-4,-4,-1,-7,9,-9,-8],[-7,-10,-9,10,-2,-10,-7,-4,4,-5],[6,-3,8,5,-2,-4,3,2,6,8]],[[2,-1,-2,9,-2,2,-2,-2,-10,10],[10,-3,-8,5,-6,-2,-2,7,-9,-9],[1,-10,8,-5,-9,-2,-1,-3,9,4],[4,2,-10,-1,-5,1,-10,1,3,6],[-5,2,-3,-6,5,-8,6,7,10,7],[6,5,9,6,4,-3,-10,6,1,8],[1,-5,5,-7,7,4,1,1,-5,-3],[9,-9,-2,4,6,9,7,8,-7,-1],[-8,10,-4,1,-6,-10,4,-5,6,-2],[-1,-2,7,10,-5,-10,6,2,1,-9],[10,1,1,-2,5,-9,-5,5,-1,5]],[[8,8,-3,3,-6,10,-4,-1,9,9],[-5,2,-9,1,-4,7,2,-5,6,1],[-2,7,4,-8,1,-8,-6,-6,9,-7],[6,4,-9,-2,-1,-6,-4,7,-3,2],[4,10,-2,7,6,4,-7,-7,-1,3],[4,3,4,-5,-8,-1,-8,-2,-9,-4],[2,6,-8,8,-4,1,4,-5,5,5],[8,6,9,8,7,-3,-10,10,2,7],[-3,-5,2,5,-1,-3,-8,-6,-8,-3],[4,6,4,2,-6,-3,7,3,-9,9],[9,-10,-2,4,-9,-5,-4,7,-6,4]],[[-9,-8,5,10,-10,-6,2,7,-10,-3],[7,-4,-8,-9,-1,4,-9,8,6,10],[8,4,-1,3,-2,-2,4,-2,-6,-7],[-1,9,-5,-4,7,-6,1,5,3,-5],[6,-5,-3,5,5,8,-6,6,6,-4],[-5,1,4,-7,-6,1,-10,-4,-3,-2],[-4,-4,9,-4,1,9,-10,-1,-6,1],[-3,-6,9,5,3,-10,-10,-9,-6,4],[-1,-3,-5,5,-7,5,-7,2,-3,9],[6,4,6,5,-6,-9,-1,-10,-1,8],[-9,7,-6,-5,-7,8,6,1,5,5]],[[-4,10,9,2,3,7,6,10,-2,-2],[9,-6,10,-6,3,8,-8,-5,-8,-8],[-8,7,-8,6,1,-10,-6,5,6,-4],[-5,-8,-3,-9,-9,-6,-1,-3,-7,8],[6,8,6,9,9,3,-8,-6,-6,-3],[-3,4,-9,2,5,-6,1,5,9,1],[7,-1,-7,-5,-5,7,-5,-1,-9,2],[6,7,4,-7,5,-3,4,-9,-3,5],[3,6,-5,6,-4,10,-6,9,8,-5],[6,7,-1,4,-1,2,10,-5,4,1],[-8,8,-7,-6,-3,-9,-10,-2,3,7]],[[-2,9,6,9,3,-10,10,-9,-4,-3],[7,-9,-10,-9,4,6,-6,10,-9,4],[6,5,3,-4,-10,-6,-10,-5,6,3],[10,6,4,-8,4,7,7,7,-7,-8],[7,-3,9,-9,-1,-6,2,9,-9,-1],[2,-4,-1,8,1,4,-10,-7,4,-5],[-8,10,-3,8,-7,-7,-6,-7,-10,-4],[10,9,4,10,-3,6,6,-3,-4,-2],[-7,-9,10,1,-10,-10,-2,10,-8,5],[5,-3,5,1,5,2,4,7,7,3],[3,-10,4,-1,10,4,-5,-8,4,-2]],[[7,-3,5,-5,9,4,3,7,3,2],[3,-9,-4,1,-8,-7,6,6,-1,8],[8,4,-3,1,-10,-9,8,3,9,-9],[6,-2,5,6,8,8,5,1,6,5],[-4,10,6,-3,-7,2,8,8,1,-1],[-9,8,4,3,1,5,6,-7,-1,7],[-5,-3,-2,-8,4,-5,10,-6,-5,4],[1,-1,-7,9,-3,7,-5,2,-9,10],[10,4,-1,6,-1,1,-10,-9,3,6],[-4,3,-1,-7,-5,-2,4,-9,-8,10],[5,-3,4,-3,-2,2,-2,-5,1,-3]],[[-1,-5,5,-2,7,4,1,-7,9,-1],[-1,-7,9,-7,-6,-9,7,3,-8,-5],[-7,6,-6,3,7,4,-9,10,-3,-10],[-9,-7,5,-8,-7,7,-2,1,8,-3],[10,-2,8,-8,-10,1,9,6,8,-6],[-7,-8,-6,8,5,-10,7,-5,-5,-8],[-1,-6,7,-4,-6,-1,-3,-5,-7,4],[2,-6,-7,6,4,-9,-2,-7,7,-3],[2,-9,10,4,6,-1,2,-1,-10,1],[10,-1,4,-1,-9,-7,6,-4,9,6],[-5,-6,-4,-8,-4,8,-10,6,7,9]],[[2,5,-2,-6,8,-6,9,-4,9,-9],[2,6,-6,-9,10,1,4,1,6,6],[-1,6,6,-5,3,-7,1,10,6,2],[-7,-9,8,8,-7,-7,9,-8,-5,-10],[-7,3,10,7,3,1,2,-1,-2,-4],[3,9,5,9,-2,-6,7,7,5,3],[-3,7,6,6,9,9,9,6,-7,4],[5,10,-1,1,-3,5,-1,-1,-2,-9],[5,5,-7,-10,7,4,3,-7,-1,2],[3,9,-2,4,-7,7,10,8,4,-2],[9,4,-9,8,-7,3,-10,7,3,5]]], dtype = "uint64")#candidate|1870|(11, 11, 10)|const|uint64
bop_1871 = relay.logical_xor(var_1869.astype('uint64'), relay.reshape(const_1870.astype('uint64'), relay.shape_of(var_1869))) # shape=(11, 11, 10)
bop_1875 = relay.greater(const_1870.astype('bool'), relay.reshape(var_1869.astype('bool'), relay.shape_of(const_1870))) # shape=(11, 11, 10)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_1887 = relay.TupleGetItem(func_1558_call(), 1)
call_1888 = relay.TupleGetItem(func_1560_call(), 1)
uop_1901 = relay.acos(call_1887.astype('float64')) # shape=(8, 6, 15)
uop_1903 = relay.acos(call_1888.astype('float64')) # shape=(8, 6, 15)
func_1857_call = mod.get_global_var('func_1857')
func_1861_call = mutated_mod.get_global_var('func_1861')
const_1908 = relay.const([4,5,1,3,-2,-3,7,4,4,7,-4,-1,5,1,2,3,8,-9,2,10,-6,9,-2,5,2,-9,5,5,3,-9,2,10,10,8,1,7,2,3,6,-1,8,-5,7,4,8,4,5,-9,-5,-8,6,4,-1,3,4,6,-3,8,-2,9,-6,-7,8,8,4,8,3,-9,10,10,7,10,8,9,10,10,-4,-9,-5,-6,6,1,7,-2,2,-4,1,-9,2,6,10,2,-5,4,9,-8,-5,2,9,-10,-9,1,6,6,-10,4,10,-1,6,-4,-7,-9,1,4,-7,-10,7,-6,-3,-5,-9,-2,4,4,1,4,-2,10,-4,3,7,10,5,8,-10,-1,-9,-8,6,-2,1,5,-9,-5,7,6,1,9,4,6,-8,1,-9,2,-10,-4,-2,-4,-4,-6,9,7,10,8,1,5,2,-1,-6,8,-1,9,-1,-4,2,-6,-4,10,8,5,3,-1,10,8,8,4,-10,1,-5], dtype = "uint64")#candidate|1908|(189,)|const|uint64
call_1907 = relay.TupleGetItem(func_1857_call(relay.reshape(const_1908.astype('uint64'), [7, 9, 3]), relay.reshape(const_1908.astype('uint64'), [7, 9, 3]), ), 1)
call_1909 = relay.TupleGetItem(func_1861_call(relay.reshape(const_1908.astype('uint64'), [7, 9, 3]), relay.reshape(const_1908.astype('uint64'), [7, 9, 3]), ), 1)
var_1911 = relay.var("var_1911", dtype = "uint64", shape = (11, 11, 10))#candidate|1911|(11, 11, 10)|var|uint64
bop_1912 = relay.power(var_1869.astype('float64'), relay.reshape(var_1911.astype('float64'), relay.shape_of(var_1869))) # shape=(11, 11, 10)
output = relay.Tuple([bop_1871,bop_1875,uop_1901,call_1907,const_1908,bop_1912,])
output2 = relay.Tuple([bop_1871,bop_1875,uop_1903,call_1909,const_1908,bop_1912,])
func_1918 = relay.Function([var_1869,var_1911,], output)
mod['func_1918'] = func_1918
mod = relay.transform.InferType()(mod)
var_1919 = relay.var("var_1919", dtype = "uint64", shape = (11, 11, 10))#candidate|1919|(11, 11, 10)|var|uint64
var_1920 = relay.var("var_1920", dtype = "uint64", shape = (11, 11, 10))#candidate|1920|(11, 11, 10)|var|uint64
output = func_1918(var_1919,var_1920,)
func_1921 = relay.Function([var_1919,var_1920,], output)
mutated_mod['func_1921'] = func_1921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_1938 = relay.TupleGetItem(func_1695_call(), 0)
call_1939 = relay.TupleGetItem(func_1697_call(), 0)
output = call_1938
output2 = call_1939
func_1946 = relay.Function([], output)
mod['func_1946'] = func_1946
mod = relay.transform.InferType()(mod)
mutated_mod['func_1946'] = func_1946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1946_call = mutated_mod.get_global_var('func_1946')
call_1947 = func_1946_call()
output = call_1947
func_1948 = relay.Function([], output)
mutated_mod['func_1948'] = func_1948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_1951 = func_818_call()
call_1952 = func_818_call()
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_1990 = relay.TupleGetItem(func_1458_call(), 2)
call_1991 = relay.TupleGetItem(func_1460_call(), 2)
uop_2012 = relay.log10(call_1951.astype('float32')) # shape=(13, 5, 16)
uop_2014 = relay.log10(call_1952.astype('float32')) # shape=(13, 5, 16)
output = relay.Tuple([call_1990,uop_2012,])
output2 = relay.Tuple([call_1991,uop_2014,])
func_2031 = relay.Function([], output)
mod['func_2031'] = func_2031
mod = relay.transform.InferType()(mod)
output = func_2031()
func_2032 = relay.Function([], output)
mutated_mod['func_2032'] = func_2032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_2087 = relay.TupleGetItem(func_735_call(), 0)
call_2088 = relay.TupleGetItem(func_736_call(), 0)
func_1857_call = mod.get_global_var('func_1857')
func_1861_call = mutated_mod.get_global_var('func_1861')
var_2107 = relay.var("var_2107", dtype = "uint64", shape = (189,))#candidate|2107|(189,)|var|uint64
call_2106 = relay.TupleGetItem(func_1857_call(relay.reshape(var_2107.astype('uint64'), [7, 9, 3]), relay.reshape(var_2107.astype('uint64'), [7, 9, 3]), ), 3)
call_2108 = relay.TupleGetItem(func_1861_call(relay.reshape(var_2107.astype('uint64'), [7, 9, 3]), relay.reshape(var_2107.astype('uint64'), [7, 9, 3]), ), 3)
bop_2115 = relay.greater_equal(call_2087.astype('bool'), relay.reshape(call_2106.astype('bool'), relay.shape_of(call_2087))) # shape=(13, 5, 16)
bop_2118 = relay.greater_equal(call_2088.astype('bool'), relay.reshape(call_2108.astype('bool'), relay.shape_of(call_2088))) # shape=(13, 5, 16)
func_1156_call = mod.get_global_var('func_1156')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_2125 = relay.TupleGetItem(func_1156_call(), 0)
call_2126 = relay.TupleGetItem(func_1158_call(), 0)
var_2127 = relay.var("var_2127", dtype = "uint64", shape = (189,))#candidate|2127|(189,)|var|uint64
bop_2128 = relay.greater(var_2107.astype('bool'), relay.reshape(var_2127.astype('bool'), relay.shape_of(var_2107))) # shape=(189,)
output = relay.Tuple([bop_2115,call_2125,bop_2128,])
output2 = relay.Tuple([bop_2118,call_2126,bop_2128,])
func_2139 = relay.Function([var_2107,var_2127,], output)
mod['func_2139'] = func_2139
mod = relay.transform.InferType()(mod)
mutated_mod['func_2139'] = func_2139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2139_call = mutated_mod.get_global_var('func_2139')
var_2141 = relay.var("var_2141", dtype = "uint64", shape = (189,))#candidate|2141|(189,)|var|uint64
var_2142 = relay.var("var_2142", dtype = "uint64", shape = (189,))#candidate|2142|(189,)|var|uint64
call_2140 = func_2139_call(var_2141,var_2142,)
output = call_2140
func_2143 = relay.Function([var_2141,var_2142,], output)
mutated_mod['func_2143'] = func_2143
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2181 = relay.const([[[True,True,True,False,True,True,True,True,True,False,True,True,True],[False,True,False,False,False,False,True,False,True,False,True,False,False]],[[True,True,False,True,False,True,False,True,True,True,True,True,True],[False,True,False,True,True,False,False,True,False,False,True,True,True]],[[False,True,False,True,False,True,False,False,False,False,True,False,False],[False,False,True,True,True,True,True,True,False,False,False,False,True]],[[False,True,False,False,False,False,True,False,True,True,False,False,True],[False,False,False,True,False,True,True,True,False,False,False,True,True]],[[False,True,True,True,False,False,False,False,False,False,True,True,False],[False,True,False,False,False,True,True,True,False,True,False,True,True]],[[False,True,True,False,False,False,True,False,True,False,False,True,False],[False,True,True,True,True,False,False,False,False,True,True,True,False]],[[True,True,False,False,False,False,True,True,False,True,True,False,True],[False,False,True,True,False,True,False,False,True,False,False,True,False]],[[False,False,True,False,False,False,True,False,False,True,True,True,False],[True,False,False,True,False,False,True,True,False,False,True,False,False]]], dtype = "bool")#candidate|2181|(8, 2, 13)|const|bool
var_2182 = relay.var("var_2182", dtype = "bool", shape = (8, 2, 13))#candidate|2182|(8, 2, 13)|var|bool
bop_2183 = relay.logical_and(const_2181.astype('bool'), relay.reshape(var_2182.astype('bool'), relay.shape_of(const_2181))) # shape=(8, 2, 13)
uop_2204 = relay.sigmoid(bop_2183.astype('float64')) # shape=(8, 2, 13)
output = uop_2204
output2 = uop_2204
func_2206 = relay.Function([var_2182,], output)
mod['func_2206'] = func_2206
mod = relay.transform.InferType()(mod)
var_2207 = relay.var("var_2207", dtype = "bool", shape = (8, 2, 13))#candidate|2207|(8, 2, 13)|var|bool
output = func_2206(var_2207)
func_2208 = relay.Function([var_2207], output)
mutated_mod['func_2208'] = func_2208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_788_call = mod.get_global_var('func_788')
func_789_call = mutated_mod.get_global_var('func_789')
call_2259 = func_788_call()
call_2260 = func_788_call()
output = call_2259
output2 = call_2260
func_2271 = relay.Function([], output)
mod['func_2271'] = func_2271
mod = relay.transform.InferType()(mod)
mutated_mod['func_2271'] = func_2271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mutated_mod.get_global_var('func_2271')
call_2272 = func_2271_call()
output = call_2272
func_2273 = relay.Function([], output)
mutated_mod['func_2273'] = func_2273
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2277 = relay.var("var_2277", dtype = "uint8", shape = ())#candidate|2277|()|var|uint8
const_2278 = relay.const([[[-10,7,6,-9,2,2,7,2,1,3,-9,-1,-2,1,5,-3]],[[2,8,8,6,-5,3,-6,3,-6,-3,7,-9,-9,10,-4,10]],[[-2,3,6,-1,8,5,6,-3,-6,-7,-8,-3,-9,-2,-5,8]],[[-1,-7,-10,9,2,-4,-4,3,1,3,8,-8,-1,1,-3,1]],[[-2,2,-7,-2,7,-9,2,10,-2,5,-1,9,3,7,-9,-9]],[[-9,4,4,-6,1,1,-5,-9,6,-9,8,10,-7,9,-7,8]],[[-1,-1,6,7,3,3,1,-7,9,-7,-5,10,5,-10,10,-8]],[[10,-8,-9,6,-3,1,2,-2,-5,9,5,2,9,-2,-9,1]],[[-2,-6,6,-2,-2,2,3,4,-2,-10,2,-6,-3,1,-9,-1]],[[-3,-1,-8,9,-7,3,-4,10,2,2,-1,7,7,7,-10,6]]], dtype = "uint8")#candidate|2278|(10, 1, 16)|const|uint8
bop_2279 = relay.right_shift(var_2277.astype('uint8'), const_2278.astype('uint8')) # shape=(10, 1, 16)
output = relay.Tuple([bop_2279,])
output2 = relay.Tuple([bop_2279,])
func_2282 = relay.Function([var_2277,], output)
mod['func_2282'] = func_2282
mod = relay.transform.InferType()(mod)
mutated_mod['func_2282'] = func_2282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2283 = relay.var("var_2283", dtype = "uint8", shape = ())#candidate|2283|()|var|uint8
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2284 = func_2282_call(var_2283)
output = call_2284
func_2285 = relay.Function([var_2283], output)
mutated_mod['func_2285'] = func_2285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_2321 = relay.TupleGetItem(func_1156_call(), 0)
call_2322 = relay.TupleGetItem(func_1158_call(), 0)
var_2348 = relay.var("var_2348", dtype = "bool", shape = (13, 5, 16))#candidate|2348|(13, 5, 16)|var|bool
bop_2349 = relay.not_equal(call_2321.astype('bool'), relay.reshape(var_2348.astype('bool'), relay.shape_of(call_2321))) # shape=(13, 5, 16)
bop_2352 = relay.not_equal(call_2322.astype('bool'), relay.reshape(var_2348.astype('bool'), relay.shape_of(call_2322))) # shape=(13, 5, 16)
func_1384_call = mod.get_global_var('func_1384')
func_1385_call = mutated_mod.get_global_var('func_1385')
call_2353 = func_1384_call()
call_2354 = func_1384_call()
bop_2360 = relay.logical_or(call_2353.astype('bool'), relay.reshape(var_2348.astype('bool'), relay.shape_of(call_2353))) # shape=(13, 5, 16)
bop_2363 = relay.logical_or(call_2354.astype('bool'), relay.reshape(var_2348.astype('bool'), relay.shape_of(call_2354))) # shape=(13, 5, 16)
bop_2366 = relay.logical_and(call_2353.astype('bool'), relay.reshape(var_2348.astype('bool'), relay.shape_of(call_2353))) # shape=(13, 5, 16)
bop_2369 = relay.logical_and(call_2354.astype('bool'), relay.reshape(var_2348.astype('bool'), relay.shape_of(call_2354))) # shape=(13, 5, 16)
output = relay.Tuple([bop_2349,bop_2360,bop_2366,])
output2 = relay.Tuple([bop_2352,bop_2363,bop_2369,])
func_2370 = relay.Function([var_2348,], output)
mod['func_2370'] = func_2370
mod = relay.transform.InferType()(mod)
var_2371 = relay.var("var_2371", dtype = "bool", shape = (13, 5, 16))#candidate|2371|(13, 5, 16)|var|bool
output = func_2370(var_2371)
func_2372 = relay.Function([var_2371], output)
mutated_mod['func_2372'] = func_2372
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2401 = relay.const([[[-10,-3,10,-1,5,-9],[-7,5,3,6,-7,-5],[1,3,3,-8,-10,10],[-5,10,-5,6,-5,-5],[-9,2,-3,4,6,-6],[7,-2,8,-6,6,-3],[-4,-6,-2,-9,-1,8],[10,6,1,7,-7,-4],[4,6,-5,-3,-9,-10],[-10,-3,-10,3,-5,7],[2,-6,6,3,-2,-2],[-9,-8,5,-9,-6,8],[-3,7,-1,-6,2,-1],[3,-10,3,2,8,8],[7,-10,10,-1,8,-1]],[[-4,-1,8,-5,-4,-6],[9,-8,-7,2,-6,6],[-2,-8,-5,-9,-7,-5],[4,8,7,6,-1,2],[-3,-3,-7,-6,8,-9],[-5,1,-3,-7,-10,-5],[-8,-4,-5,8,-1,8],[1,-6,10,-9,-6,-8],[-1,-5,1,-8,1,7],[-8,-6,7,-6,-8,7],[-10,6,9,6,-9,10],[9,9,2,7,-5,1],[-5,-10,1,-4,4,-8],[3,4,5,2,-6,5],[8,-1,5,5,-9,4]],[[4,3,-9,4,7,4],[4,7,8,9,5,1],[10,-1,-4,-10,-4,-8],[-4,-5,-10,2,-6,3],[4,-1,2,1,9,2],[7,-2,3,-6,-2,-7],[-9,-6,9,-8,-3,-3],[1,8,4,-3,-2,-3],[-5,-5,9,9,10,-4],[5,3,3,5,-10,3],[-5,-6,-1,3,2,-3],[9,-1,-5,1,7,2],[-9,-5,9,4,6,10],[-3,-3,2,-5,6,-1],[1,5,-5,-9,1,7]]], dtype = "uint64")#candidate|2401|(3, 15, 6)|const|uint64
var_2402 = relay.var("var_2402", dtype = "uint64", shape = (3, 15, 6))#candidate|2402|(3, 15, 6)|var|uint64
bop_2403 = relay.greater_equal(const_2401.astype('bool'), relay.reshape(var_2402.astype('bool'), relay.shape_of(const_2401))) # shape=(3, 15, 6)
func_1263_call = mod.get_global_var('func_1263')
func_1267_call = mutated_mod.get_global_var('func_1267')
var_2412 = relay.var("var_2412", dtype = "uint64", shape = ())#candidate|2412|()|var|uint64
const_2413 = relay.const([[-10,-6,-1,6,-5,-1,4,-6,9,-10,-10,-7,10,-8,5,5,5,2,-6,-9,-1,-3,-4,-3,-5,-10,-1,-9,-3,9,-10,-3,6,1,6,-3]], dtype = "uint64")#candidate|2413|(1, 36)|const|uint64
call_2411 = relay.TupleGetItem(func_1263_call(relay.reshape(var_2412.astype('uint64'), []), relay.reshape(const_2413.astype('uint64'), [36,]), ), 4)
call_2414 = relay.TupleGetItem(func_1267_call(relay.reshape(var_2412.astype('uint64'), []), relay.reshape(const_2413.astype('uint64'), [36,]), ), 4)
output = relay.Tuple([bop_2403,call_2411,var_2412,const_2413,])
output2 = relay.Tuple([bop_2403,call_2414,var_2412,const_2413,])
func_2420 = relay.Function([var_2402,var_2412,], output)
mod['func_2420'] = func_2420
mod = relay.transform.InferType()(mod)
mutated_mod['func_2420'] = func_2420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2420_call = mutated_mod.get_global_var('func_2420')
var_2422 = relay.var("var_2422", dtype = "uint64", shape = (3, 15, 6))#candidate|2422|(3, 15, 6)|var|uint64
var_2423 = relay.var("var_2423", dtype = "uint64", shape = ())#candidate|2423|()|var|uint64
call_2421 = func_2420_call(var_2422,var_2423,)
output = call_2421
func_2424 = relay.Function([var_2422,var_2423,], output)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_788_call = mod.get_global_var('func_788')
func_789_call = mutated_mod.get_global_var('func_789')
call_2533 = func_788_call()
call_2534 = func_788_call()
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_2540 = relay.TupleGetItem(func_735_call(), 0)
call_2541 = relay.TupleGetItem(func_736_call(), 0)
func_575_call = mod.get_global_var('func_575')
func_577_call = mutated_mod.get_global_var('func_577')
var_2543 = relay.var("var_2543", dtype = "float32", shape = (60, 12))#candidate|2543|(60, 12)|var|float32
call_2542 = func_575_call(relay.reshape(var_2543.astype('float32'), [8, 6, 15]))
call_2544 = func_575_call(relay.reshape(var_2543.astype('float32'), [8, 6, 15]))
output = relay.Tuple([call_2533,call_2540,call_2542,var_2543,])
output2 = relay.Tuple([call_2534,call_2541,call_2544,var_2543,])
func_2548 = relay.Function([var_2543,], output)
mod['func_2548'] = func_2548
mod = relay.transform.InferType()(mod)
var_2549 = relay.var("var_2549", dtype = "float32", shape = (60, 12))#candidate|2549|(60, 12)|var|float32
output = func_2548(var_2549)
func_2550 = relay.Function([var_2549], output)
mutated_mod['func_2550'] = func_2550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2559 = relay.var("var_2559", dtype = "float64", shape = (12, 14, 3))#candidate|2559|(12, 14, 3)|var|float64
uop_2560 = relay.sin(var_2559.astype('float64')) # shape=(12, 14, 3)
bop_2582 = relay.bitwise_or(var_2559.astype('int8'), relay.reshape(uop_2560.astype('int8'), relay.shape_of(var_2559))) # shape=(12, 14, 3)
output = relay.Tuple([bop_2582,])
output2 = relay.Tuple([bop_2582,])
func_2588 = relay.Function([var_2559,], output)
mod['func_2588'] = func_2588
mod = relay.transform.InferType()(mod)
var_2589 = relay.var("var_2589", dtype = "float64", shape = (12, 14, 3))#candidate|2589|(12, 14, 3)|var|float64
output = func_2588(var_2589)
func_2590 = relay.Function([var_2589], output)
mutated_mod['func_2590'] = func_2590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1946_call = mod.get_global_var('func_1946')
func_1948_call = mutated_mod.get_global_var('func_1948')
call_2651 = func_1946_call()
call_2652 = func_1946_call()
func_1263_call = mod.get_global_var('func_1263')
func_1267_call = mutated_mod.get_global_var('func_1267')
const_2677 = relay.const(10, dtype = "uint64")#candidate|2677|()|const|uint64
const_2678 = relay.const([[-4,-10,-5,-8],[-4,3,6,6],[8,8,-1,-9],[2,-5,-2,5],[6,-10,8,7],[10,-9,5,-4],[1,-8,-1,-7],[8,1,-5,-5],[4,1,5,6]], dtype = "uint64")#candidate|2678|(9, 4)|const|uint64
call_2676 = relay.TupleGetItem(func_1263_call(relay.reshape(const_2677.astype('uint64'), []), relay.reshape(const_2678.astype('uint64'), [36,]), ), 1)
call_2679 = relay.TupleGetItem(func_1267_call(relay.reshape(const_2677.astype('uint64'), []), relay.reshape(const_2678.astype('uint64'), [36,]), ), 1)
func_1946_call = mod.get_global_var('func_1946')
func_1948_call = mutated_mod.get_global_var('func_1948')
call_2682 = func_1946_call()
call_2683 = func_1946_call()
bop_2706 = relay.multiply(call_2682.astype('uint64'), relay.reshape(call_2651.astype('uint64'), relay.shape_of(call_2682))) # shape=(13, 5, 16)
bop_2709 = relay.multiply(call_2683.astype('uint64'), relay.reshape(call_2652.astype('uint64'), relay.shape_of(call_2683))) # shape=(13, 5, 16)
output = relay.Tuple([call_2676,const_2677,const_2678,bop_2706,])
output2 = relay.Tuple([call_2679,const_2677,const_2678,bop_2709,])
func_2720 = relay.Function([], output)
mod['func_2720'] = func_2720
mod = relay.transform.InferType()(mod)
mutated_mod['func_2720'] = func_2720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2720_call = mutated_mod.get_global_var('func_2720')
call_2721 = func_2720_call()
output = call_2721
func_2722 = relay.Function([], output)
mutated_mod['func_2722'] = func_2722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_2826 = func_818_call()
call_2827 = func_818_call()
output = call_2826
output2 = call_2827
func_2842 = relay.Function([], output)
mod['func_2842'] = func_2842
mod = relay.transform.InferType()(mod)
mutated_mod['func_2842'] = func_2842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mutated_mod.get_global_var('func_2842')
call_2843 = func_2842_call()
output = call_2843
func_2844 = relay.Function([], output)
mutated_mod['func_2844'] = func_2844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2273_call = mutated_mod.get_global_var('func_2273')
call_2907 = func_2271_call()
call_2908 = func_2271_call()
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_2913 = relay.TupleGetItem(func_1458_call(), 1)
call_2914 = relay.TupleGetItem(func_1460_call(), 1)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_2938 = relay.TupleGetItem(func_1458_call(), 1)
call_2939 = relay.TupleGetItem(func_1460_call(), 1)
func_575_call = mod.get_global_var('func_575')
func_577_call = mutated_mod.get_global_var('func_577')
var_2942 = relay.var("var_2942", dtype = "float32", shape = (720,))#candidate|2942|(720,)|var|float32
call_2941 = func_575_call(relay.reshape(var_2942.astype('float32'), [8, 6, 15]))
call_2943 = func_575_call(relay.reshape(var_2942.astype('float32'), [8, 6, 15]))
func_2271_call = mod.get_global_var('func_2271')
func_2273_call = mutated_mod.get_global_var('func_2273')
call_2950 = func_2271_call()
call_2951 = func_2271_call()
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_2963 = relay.TupleGetItem(func_1639_call(), 0)
call_2964 = relay.TupleGetItem(func_1641_call(), 0)
output = relay.Tuple([call_2907,call_2913,call_2938,call_2941,var_2942,call_2950,call_2963,])
output2 = relay.Tuple([call_2908,call_2914,call_2939,call_2943,var_2942,call_2951,call_2964,])
func_2966 = relay.Function([var_2942,], output)
mod['func_2966'] = func_2966
mod = relay.transform.InferType()(mod)
mutated_mod['func_2966'] = func_2966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2967 = relay.var("var_2967", dtype = "float32", shape = (720,))#candidate|2967|(720,)|var|float32
func_2966_call = mutated_mod.get_global_var('func_2966')
call_2968 = func_2966_call(var_2967)
output = call_2968
func_2969 = relay.Function([var_2967], output)
mutated_mod['func_2969'] = func_2969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2720_call = mod.get_global_var('func_2720')
func_2722_call = mutated_mod.get_global_var('func_2722')
call_2973 = relay.TupleGetItem(func_2720_call(), 3)
call_2974 = relay.TupleGetItem(func_2722_call(), 3)
func_972_call = mod.get_global_var('func_972')
func_976_call = mutated_mod.get_global_var('func_976')
const_2976 = relay.const(-6, dtype = "uint64")#candidate|2976|()|const|uint64
const_2977 = relay.const([10,9,5,3,-4,-5,5,-6,6,-5,-4,-10,-10,2,-7,-6,-4,-3,2,4,-1,4,4,-10,-5,-9,-3,-1,-8,-1,-9,-2,-2,6,8,-10], dtype = "uint64")#candidate|2977|(36,)|const|uint64
const_2978 = relay.const([-4,6,-9,-10,-2,-9,-8,-6,-2,7,-2,6,5,-5,5,-10,3,5,-9,-2,8,3,-8,8,-6,3,-6,-3,5,7,-2,-10,-7,6,-10,8,-10,7,-10,8,-9,-3,10,-7,5,-6,3,1,3,-5,-6,2,-3,-5,-3,8,-4,9,8,10,10,-2,3,4,-1,-8,3,4,-10,-9,-2,5,10,9,-9,-1,8,-3,-7,7,-7,4,7,-4,-6,10,-1,-3,10,-7,4,10,-1,3,10,-5,-4,-7,-8,-10,5,4,6,7,1,4,5,-7,7,-4,9,5,10,-8,4,-7,-7,-5,8,6,-9,7,6,-10,-4,-1,-6,10,-10,-6,-6,3,4,4,-3,3,3,-6,4,4,-10,2,-5,4,1,-10,-3,-10,-3,10,5,8,3,-10,9,4,-1,7,-1,9,-9,8,-4,-10,3,2,3,-7,-3,-5,1,4,-8,-7,-2,-2,7,-4,10,-7,3,-10,-1,-5,6,-9,-1,-10,-5,-9,-5,-7,-1,-5,-4,4,4,-6,-5,-1,10,9,-6,10,9,-8,10,-9,8,-4,8,10,3,9,8,8,-4,9,9,-1,1,-1,7,-4,3,7,-5,5,4,6,6,8,-1,9,-8,-6,-2,-10,8,1,-1,7,5,3,-6,1,-3,9,8,3,8,7,-10,-8,2,-4,-10,-8,-2,6,10,-7,8,8,-6,4,-2,-6,7,-5,-5,-1,-7,-10,1,-7,3,5,-4,7,-4,7,-9,10,-7,6,-3,7,-7,-1,2,9,-1,-7,7,-6,3,9,-6,-2,6,-7,5,1,10,10,9,7,4,-7,-8,-2,-6,-4,1,-5,2,-6,-5,-10,-8,-9,10,6,-2,6,6,10,10,4,8,8,3,-10,10,5,10,2,-4,5,3,-7,-1,1,-10,3,-6,1,-5,-8,-1,-3,-1,-3,5,-2,-9,-7,5,-2,-5,-7,7,2,9,9,5,10,-6,10,1,10,-10,-2,7,1,2,4,-6,-1,6,-2,1,8,7,1,-9,-1,7,5,-9,7,6,1,8,6], dtype = "int64")#candidate|2978|(396,)|const|int64
call_2975 = relay.TupleGetItem(func_972_call(relay.reshape(const_2976.astype('uint64'), []), relay.reshape(const_2977.astype('uint64'), [6, 6, 1]), relay.reshape(const_2978.astype('int64'), [396,]), ), 2)
call_2979 = relay.TupleGetItem(func_976_call(relay.reshape(const_2976.astype('uint64'), []), relay.reshape(const_2977.astype('uint64'), [6, 6, 1]), relay.reshape(const_2978.astype('int64'), [396,]), ), 2)
output = relay.Tuple([call_2973,call_2975,const_2976,const_2977,const_2978,])
output2 = relay.Tuple([call_2974,call_2979,const_2976,const_2977,const_2978,])
func_2997 = relay.Function([], output)
mod['func_2997'] = func_2997
mod = relay.transform.InferType()(mod)
output = func_2997()
func_2998 = relay.Function([], output)
mutated_mod['func_2998'] = func_2998
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2999 = relay.var("var_2999", dtype = "int16", shape = (15, 1, 2))#candidate|2999|(15, 1, 2)|var|int16
var_3000 = relay.var("var_3000", dtype = "int16", shape = (15, 4, 2))#candidate|3000|(15, 4, 2)|var|int16
bop_3001 = relay.left_shift(var_2999.astype('int16'), var_3000.astype('int16')) # shape=(15, 4, 2)
var_3018 = relay.var("var_3018", dtype = "int16", shape = (15, 6, 2))#candidate|3018|(15, 6, 2)|var|int16
bop_3019 = relay.bitwise_and(var_2999.astype('uint16'), var_3018.astype('uint16')) # shape=(15, 6, 2)
func_1063_call = mod.get_global_var('func_1063')
func_1066_call = mutated_mod.get_global_var('func_1066')
const_3024 = relay.const([7.675473,3.538496,5.310577,-4.637596,4.673851,-8.767264,8.980644,8.391993,1.956855,6.474613,5.742122,-5.115364,6.066888,-4.598149,-0.078852,7.430617,-7.164105,3.300039,-4.035225,-2.754623,3.386302,1.049958,-2.579995,6.563776,-0.412991,-9.962754,9.599723,-5.275977,-2.268989,8.138687,-6.876088,7.447301,8.760167,-6.815611,-8.331934,-3.716617,-8.973711,-3.279534,-6.908176,-7.914388,-6.665432,8.912521,-3.140740,-5.289112,-9.023459,8.824039,-0.042927,-0.689332,-2.983192,-9.101526,7.328202,-5.679066,-5.971931,-8.356819,-4.562494,4.182248,-8.546264,-6.907539,-3.919748,1.598109,-4.620663,0.018620,8.765637,7.165397,-7.338914,-7.788370,-4.357997,7.427498,3.062732,7.518453,4.648072,-5.512666,2.453249,-2.960173,6.735467,3.347160,-2.785224,4.520762,-5.356924,1.837591,-1.986782,-7.832762,5.330786,0.132367,-7.358470,-0.278455,0.617544,8.487256,-8.073579,-6.312924,8.596307,1.157698,-0.332790,-0.888355,2.947566,2.705669,0.968750,-2.714903,-7.710612,-8.902477,3.896970,-6.164388,4.434889,1.165275,0.037515,-6.352821,6.648929,-1.055482,-6.068221,-6.140619,2.925415,3.382307,-3.032828,8.366787,0.395053,3.983853,-6.490693,6.158224,3.631995,6.104252,-9.750004,1.897278,-3.165200,5.178022,-6.663177,-9.380297,9.736433,1.617885,-3.450263,-8.101450,-5.601825,-4.320202,2.097510,-5.935945,-1.615939,9.770684,9.324688,1.824847,7.232966,-1.324471,-5.997575,0.411618,-7.949305,8.520974,7.154069,-0.279440,3.527420,-8.750065,-0.215431,9.830143,0.362636,4.151741,-9.058489,-6.309369,9.409157,8.160303,5.227459,-0.212527,0.842241,-7.157060,7.256180,-2.426077,5.015302,-0.708684,-3.280396,6.392638,-0.171744,-2.917028,7.542449,-2.811716,-7.343682,-1.178009,-0.838123,6.010245,3.484232,-5.821304,7.762712,9.958664,-8.777019,-6.515621,-7.779613,-7.252969,8.689787,1.802161,4.812091,5.278433,1.334858,0.888975,-3.827148,-4.479283,7.263597,8.704198,5.474042,6.270646,-6.630820,-7.994581,1.418862,5.577515,-4.331681,0.907082,9.706617,5.806459,3.889247,-3.346580,1.016120,8.540399,-8.754466,1.840198,6.733607,4.819189,3.414443,-1.742372,-6.295041,7.457894,-9.400950,-9.702982,8.566698,3.994768,-6.476376,8.121991,-6.405523,-3.002366,8.762771,-4.174970,2.445103,-6.553849,-9.874978,1.063555,-3.653312,4.805030,-3.053050,-1.600286,0.205651,-6.352412,-6.999500,1.790504,-3.415238,5.154273,-7.602342,-0.537691,7.954661,-5.743254,-8.422312,-7.028668,-1.625164,2.828087,8.935241,-8.580634,5.805280,-9.601524,-2.728236,-1.782490,-3.018527,-9.816501,-6.578437,-2.925328,9.176273,7.929918,-1.346814,1.421948,6.844049,6.052816,-4.780377,9.086457,-8.388339,5.179932,2.348023,0.090548,8.491844,-5.111747,3.792075,5.124909,9.831639,-1.241566,-1.676277,-9.967425,-2.369582,-6.578971,-5.241122,0.739934,-6.281062,6.371469,-9.028612,2.156379,0.219028,8.100849,-4.558550,0.616351,2.162784,9.962966,9.726663,2.237521,-3.015136,8.464899,4.848939,7.692760,6.735073,-3.181406,-8.702283,-8.137219,4.550123,-0.786404,-3.805678,-4.816504,9.070662,-0.715773,9.206400,-5.234733,1.213258,-1.572760,-0.350644,-0.732040,9.504629,-5.851777,-8.086806,5.240653,-5.407481,5.994139,6.013134,0.003154,-5.729764,-7.077243,7.228153,7.053375,-1.772349,-8.374877,4.258531,-1.486866,5.459329,-5.950925,9.138977,5.379289,9.725972,5.575682,-9.984520,4.624514,-1.169417,1.464450,0.105963,-5.383495,-4.475570,-7.280447,-0.607541,-2.920719,4.184036,3.361683,-5.404802,5.311977,-8.564796,1.771740,3.336720,6.051942,-9.759246,0.858332,4.986042,4.230613,-0.818885,9.672740,-8.747097,-3.537952,7.809338,0.312556,7.652336,2.441600,8.654809,-7.472506,-3.444784,-0.932291,-4.841196,-4.975061,6.095968,-0.336728,9.515097,-9.770885,7.371601,-7.586678,6.677926,6.552232,-3.847091,-9.561854,9.571647,-0.178342,-9.972566,-3.691658,-6.582640,-0.586101,-9.045457,-9.762506,-4.972462,2.087252,3.003297,-8.699918,5.214866,7.154486,4.107009,0.550422,3.855646,-3.173032,-7.478863,-4.891255,5.170026,9.271359,2.949816,7.917276,-6.191935,-5.335575,-8.051829,-1.778889,-7.723354,4.333635,1.485686,-4.983104,-8.570412,-5.219913,0.606396,-6.031105,2.134485,-4.984954,0.651291,2.222202,-6.663052,4.486386,-0.499097,9.436836,-0.621319,-1.389509,5.024930,-5.987568,4.138848,3.649356,8.295823,9.388063,2.602169,-2.649702,-4.272047,-2.901134,4.767076,2.094610,-5.979355,-5.954604,-0.476048,-4.885615,1.886312,1.336598,-1.076591,3.881899,-0.808808,-1.634776,-8.094815,-0.523068,-9.323305,4.886534,5.748746,-8.048741,6.273730,-1.653603,5.596543,-0.808056,2.708791,-7.340569,-9.285069,8.568656,-2.096581,-8.110406,-3.693454,9.490877,7.285572,-6.211948,-4.571328,-2.264434,0.737819,1.495080,-9.228758,1.368130,9.202796,7.067815,5.012466,0.445071,-5.065070,-3.080630,-7.969820,-6.137437,9.949109,-5.110189,4.369565,7.474162,7.651880,9.947413,-6.682474,4.483467,-2.126904,6.612493,-8.327250,-9.554872,-9.466297,7.916768,-6.371228,0.710307,0.680873,2.440897,-6.759132,5.986214,1.421422,6.947030,-3.768540,-4.707669,4.092264,-3.877450,-3.577846,5.331264,-8.067418,5.171835,-0.800831,-9.176828,3.016582,-1.193965,-0.731219,2.276021,-5.083353,-3.683151,-4.431351,-6.878244,-0.265288,9.251099,6.987150,-7.326855,7.973238,-0.776142,-8.524320,6.226274,6.012926,1.911702,-2.371891,3.220829,-4.345818,6.402139,-9.123732,-4.756298,-6.991484,4.531844,-4.030107,3.640116,-3.265819,2.563776,-2.224748,-8.184407,-8.127191,-5.216640,-9.216884,-2.176474,5.072826,1.873144,2.599648,-3.825935,8.987056,1.341864,0.802636,-8.438292,-6.641134,-1.877904,-7.003932,-5.569027,6.025083,9.631967,3.704984,-0.762545,2.747990,-4.732164,6.936122,2.654959,5.234871,8.083762,3.633206,-3.421955,4.894024,8.050093,4.624557,5.303256,-6.805926,-0.121613,-2.920226,-3.613059,7.780725,-4.200982,5.992123,9.950529,-9.414134,-4.441379,-7.350083,5.357119,5.026817,-3.440604,5.725650,8.706749,-9.308841,3.910346,-7.531950,2.640420,-9.741567,6.790278,7.431916,-2.437764,5.858147,3.201145,1.285437,4.327688,0.325458,1.548938,1.242303,-8.939900,5.701368,-5.801879,6.851857,1.624987,4.177325,-4.957254,1.109054,-1.614671,8.935698,5.915650,1.950535,6.128095,-4.973581,2.624753,-0.228789,7.793564,7.235032,7.017994,6.765000,-7.173865,1.479334,1.087916,-5.807179,8.537770,-9.265476,-3.345355,-6.605386,-4.817197,0.016790,-0.927692,-3.570585,5.443660,-8.720157,-4.723843,5.826292,-1.585785,0.711153,5.480613,-1.257177,7.507138,1.028024,-5.706994,-7.289060,-0.149999,-0.752992,1.140388,3.284079,-9.263237,2.463311,8.626132,9.682087,-9.895572,-7.763641,-1.295185,-9.801949,3.279984,-6.633040,6.759195,-1.608232,-3.126654,3.911494,2.486948,-7.588370,-6.548738,1.185656,-1.617370,5.699776,4.671420,-2.402379,-2.214263,-7.795466,7.266906,6.129608,6.228181,-0.065773,-3.051795,3.620164,-8.182732,0.518139,4.786752,7.178433,-5.915652,-5.534823,-3.125528,1.867035,-8.442013,-1.439488,-4.028849,-9.819356,6.456542,6.318906,-2.851340,-6.319025,-2.736962,5.548533,-0.315613,0.629142,-1.043759,-4.187728,1.328699,1.308902,0.479288,2.873571,-7.015036,3.306585,-4.208566,2.824311,4.670541,-7.777545,-4.171717,-4.019565,-6.004533,5.150256,3.182398,1.988224,0.450241,-4.197300,-1.140702,4.531442,-3.618324,-4.668457,7.859810,5.949812,6.417730,8.204804,-2.895327,-6.010199,3.637995,6.218426,-9.940736,3.770577,2.764943,-7.040953,7.696894,-5.540307,1.023217,2.143130,7.285975,1.167678,-1.532536,-0.046110,-9.824699,3.535425,-1.926943,8.896802,5.882043,-6.664677,-2.153139,-5.331951,-4.389390,7.676561,6.537501,3.268127,-6.962740,-9.425258,3.814487,5.615207,0.425764,3.664523,1.321875,-7.857676,-7.649802,0.950793,-6.998714,-8.008074,3.180844,-3.214510,-5.530714,1.363521,-4.849737,4.586621,-8.643336,-8.607570,4.233203,4.289432,-6.994744,9.895229,-6.703890,0.049666,-5.100511,-5.907954,-0.836625,8.739566,-5.953268,7.477288,-2.255252,-5.819329,2.731010,-2.868883,-5.653591,1.122552,-1.402638,6.599823,6.399507,5.466861,4.219010,8.594534,-9.422530,-5.729974,1.993822,0.791851,2.759412,-6.293297,-7.571355,2.180399,-3.271125,7.961786,-2.268855,-5.193407,-8.292514,9.277155,9.084472,8.382786,6.000742,-5.004539,9.066970,-0.159258,3.536768,1.139358,-8.728038,-7.204145,5.054074,5.834966,7.209663,9.979540,4.825135,8.885303,-6.545404,-9.261629,-0.475802,-5.924361,-1.481121,-5.773301,-2.433927,-4.892663,3.369068,0.377669,-7.419018,-8.888373,-0.371541,3.988237,-1.428263,-0.806025,8.560559,9.097702,2.246763,0.756707,-4.421421,1.529277,3.200723,1.777543,5.981711,4.421968,0.708709,4.849996,-9.444986,2.734014,5.126986,2.583431,-8.250670,-5.560040,-8.942330,-5.589991,-8.096409,7.485931,0.165871,-6.744681,-2.562002,-6.091008,2.001516,9.391650,5.572319,-5.212887,1.123218,2.496269,-3.667554,2.551844,-4.724925,-0.526992,-3.762014,-6.637682,-7.594511,-0.647751,7.327069,0.856137,-8.054822,-9.964250,4.877289,-8.722977,-8.557076,6.768376,8.748053,0.855832,-9.940316,-7.311349,-4.219357,-3.519085,1.720048,7.187951,0.345642,3.107633,4.238423,5.716654,9.691350,7.341889,-8.898951,-5.229693,-1.355667,0.850792,9.651791,1.957225,-3.143288,8.022886,-9.176195,-1.968317,0.329508,2.934500,0.934699,7.890930,-8.361201,-7.713928,9.647404,-1.678899,2.249202,-0.277672,-2.736340,-3.855703,0.028787,-5.250687,-1.097264,-2.488252,0.215547,-8.120848,-4.809043,8.677964,5.229044,3.079063,-5.086497,-4.855346,3.026231,6.518793,-3.287942,7.237796,0.294508,6.890027,-8.182192,7.795588,3.674566,6.552457,9.792985,-0.491625,-9.586104,-0.533304,8.783272,-4.849337,8.011740,-5.463013,7.737729,-8.068987,-1.266966,-9.197438,2.437181,-2.553952,-3.897417,-4.366001,-3.376046,-9.396765,5.841623,8.546372,4.595056,4.916970,0.066014,-5.589835,0.172343,4.854520,-0.805531,2.817084,9.131845,-3.203130,8.105288,-2.494994,9.651141,-3.799034,8.363292,6.856134,-2.154694,0.715557,7.684658,-6.610060,-7.510051,-0.365869,-7.463944,-7.474961,1.596100,2.331286,-1.936859,-5.241650,-9.347529,-6.043674,-9.930675,-4.149892,-5.731677,1.190611,0.635122,8.007418,0.557212,-3.104824,9.661536,-4.425936,9.522862,0.979720,3.426700,7.850805,-1.068462,8.447503,6.332906,7.374593,0.671274,4.536707,7.742040,3.345276,-7.570609,-8.899400,-6.189513,-3.986401,-6.273610,6.486830,6.658396,4.727274,-3.597688], dtype = "float64")#candidate|3024|(1040,)|const|float64
call_3023 = relay.TupleGetItem(func_1063_call(relay.reshape(const_3024.astype('float64'), [13, 5, 16])), 0)
call_3025 = relay.TupleGetItem(func_1066_call(relay.reshape(const_3024.astype('float64'), [13, 5, 16])), 0)
output = relay.Tuple([bop_3001,bop_3019,call_3023,const_3024,])
output2 = relay.Tuple([bop_3001,bop_3019,call_3025,const_3024,])
func_3031 = relay.Function([var_2999,var_3000,var_3018,], output)
mod['func_3031'] = func_3031
mod = relay.transform.InferType()(mod)
var_3032 = relay.var("var_3032", dtype = "int16", shape = (15, 1, 2))#candidate|3032|(15, 1, 2)|var|int16
var_3033 = relay.var("var_3033", dtype = "int16", shape = (15, 4, 2))#candidate|3033|(15, 4, 2)|var|int16
var_3034 = relay.var("var_3034", dtype = "int16", shape = (15, 6, 2))#candidate|3034|(15, 6, 2)|var|int16
output = func_3031(var_3032,var_3033,var_3034,)
func_3035 = relay.Function([var_3032,var_3033,var_3034,], output)
mutated_mod['func_3035'] = func_3035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mod.get_global_var('func_2031')
func_2032_call = mutated_mod.get_global_var('func_2032')
call_3042 = relay.TupleGetItem(func_2031_call(), 1)
call_3043 = relay.TupleGetItem(func_2032_call(), 1)
func_1156_call = mod.get_global_var('func_1156')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_3069 = relay.TupleGetItem(func_1156_call(), 1)
call_3070 = relay.TupleGetItem(func_1158_call(), 1)
func_71_call = mod.get_global_var('func_71')
func_75_call = mutated_mod.get_global_var('func_75')
const_3073 = relay.const(-7, dtype = "uint32")#candidate|3073|()|const|uint32
var_3074 = relay.var("var_3074", dtype = "uint32", shape = (110,))#candidate|3074|(110,)|var|uint32
call_3072 = relay.TupleGetItem(func_71_call(relay.reshape(const_3073.astype('uint32'), []), relay.reshape(var_3074.astype('uint32'), [1, 10, 11]), ), 0)
call_3075 = relay.TupleGetItem(func_75_call(relay.reshape(const_3073.astype('uint32'), []), relay.reshape(var_3074.astype('uint32'), [1, 10, 11]), ), 0)
output = relay.Tuple([call_3042,call_3069,call_3072,const_3073,var_3074,])
output2 = relay.Tuple([call_3043,call_3070,call_3075,const_3073,var_3074,])
func_3078 = relay.Function([var_3074,], output)
mod['func_3078'] = func_3078
mod = relay.transform.InferType()(mod)
mutated_mod['func_3078'] = func_3078
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3079 = relay.var("var_3079", dtype = "uint32", shape = (110,))#candidate|3079|(110,)|var|uint32
func_3078_call = mutated_mod.get_global_var('func_3078')
call_3080 = func_3078_call(var_3079)
output = call_3080
func_3081 = relay.Function([var_3079], output)
mutated_mod['func_3081'] = func_3081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3086 = relay.var("var_3086", dtype = "int32", shape = (3, 16, 7))#candidate|3086|(3, 16, 7)|var|int32
const_3087 = relay.const([[[9,-2,9,4,9,-9,-2],[9,-9,-3,7,3,9,-7],[-7,-10,-5,9,4,1,-3],[-10,-9,2,6,-9,1,10],[-5,-1,-8,-1,5,6,-7],[5,-9,-5,-5,-6,-4,-6],[7,7,7,-6,-10,5,-1],[9,7,-8,-10,-5,-1,10],[6,-2,-1,4,-10,-10,-9],[8,-5,-8,2,1,10,-8],[4,8,-3,-2,-3,2,-9],[4,9,-8,10,1,3,-3],[-5,-3,1,1,-6,-8,-3],[2,5,10,7,-2,-5,8],[-2,-10,-4,-8,-8,8,-5],[-3,-9,10,9,9,9,5]],[[-2,-3,-6,3,-8,4,1],[-10,-10,-3,-5,2,3,4],[-1,-10,-5,-1,-8,10,5],[-3,-10,3,5,-7,-8,-6],[10,-5,-10,8,-9,-6,-1],[-2,4,3,8,2,-3,-4],[9,4,-2,2,5,9,7],[9,-2,6,-8,-8,6,-10],[10,-10,5,-8,-4,-1,10],[-2,-3,-7,-4,3,-2,8],[4,9,-3,-2,-4,5,5],[-6,4,-4,-1,-6,-3,-6],[-3,-5,4,10,4,6,-4],[-5,-7,-4,10,-1,-8,-3],[7,8,-6,4,6,7,-6],[7,4,-1,-4,1,4,3]],[[9,2,7,-4,2,5,4],[9,5,-1,7,-7,10,3],[9,5,3,-2,7,5,5],[-9,-2,-10,4,3,5,2],[-7,1,-2,2,4,-10,-1],[2,5,-7,-10,3,8,7],[5,1,6,-7,-8,6,6],[-5,-10,-5,2,1,8,-8],[-9,2,-4,-7,-6,-1,-7],[8,-2,10,-2,7,6,-8],[2,-3,-10,-7,9,-7,10],[9,4,1,-10,5,6,8],[10,8,-1,-6,-3,7,9],[-7,1,-8,-3,8,10,7],[-7,-9,2,-10,-6,4,-9],[3,7,7,-6,-3,-4,4]]], dtype = "int32")#candidate|3087|(3, 16, 7)|const|int32
bop_3088 = relay.left_shift(var_3086.astype('int32'), relay.reshape(const_3087.astype('int32'), relay.shape_of(var_3086))) # shape=(3, 16, 7)
uop_3092 = relay.acosh(bop_3088.astype('float32')) # shape=(3, 16, 7)
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
var_3095 = relay.var("var_3095", dtype = "bool", shape = (1040,))#candidate|3095|(1040,)|var|bool
call_3094 = relay.TupleGetItem(func_2370_call(relay.reshape(var_3095.astype('bool'), [13, 5, 16])), 0)
call_3096 = relay.TupleGetItem(func_2372_call(relay.reshape(var_3095.astype('bool'), [13, 5, 16])), 0)
output = relay.Tuple([uop_3092,call_3094,var_3095,])
output2 = relay.Tuple([uop_3092,call_3096,var_3095,])
func_3112 = relay.Function([var_3086,var_3095,], output)
mod['func_3112'] = func_3112
mod = relay.transform.InferType()(mod)
var_3113 = relay.var("var_3113", dtype = "int32", shape = (3, 16, 7))#candidate|3113|(3, 16, 7)|var|int32
var_3114 = relay.var("var_3114", dtype = "bool", shape = (1040,))#candidate|3114|(1040,)|var|bool
output = func_3112(var_3113,var_3114,)
func_3115 = relay.Function([var_3113,var_3114,], output)
mutated_mod['func_3115'] = func_3115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_3163 = relay.TupleGetItem(func_1558_call(), 2)
call_3164 = relay.TupleGetItem(func_1560_call(), 2)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_3167 = relay.TupleGetItem(func_1695_call(), 0)
call_3168 = relay.TupleGetItem(func_1697_call(), 0)
func_1857_call = mod.get_global_var('func_1857')
func_1861_call = mutated_mod.get_global_var('func_1861')
const_3179 = relay.const([2,-4,-8,-10,-4,6,-9,-2,-10,-1,3,-5,-7,3,-2,-8,2,5,6,10,2,-5,3,-6,-8,2,-7,2,1,2,8,8,-2,9,-10,2,-5,7,-4,-10,9,2,1,10,3,-7,-3,-10,-10,7,-10,-4,-5,10,3,2,4,-8,9,-8,1,3,10,1,4,2,6,-8,6,-10,10,10,5,-10,5,9,5,10,-9,7,-10,7,4,8,-3,-8,-10,8,6,4,-8,-9,-6,10,1,-9,6,-8,-1,-10,-5,-9,9,-4,5,-8,8,-8,6,10,-5,10,-4,2,7,2,-2,-10,-8,8,10,-10,3,5,-8,-9,-1,-4,1,10,8,1,3,-1,-6,6,-4,6,-6,7,5,5,-8,1,-5,-7,-3,2,-2,6,-3,7,1,-5,6,9,9,-7,2,-4,9,1,2,7,-10,3,5,1,3,1,7,1,3,-4,-8,-6,-2,8,-2,-7,7,-4,-1,-6,-10,-4,-8,-4,4], dtype = "uint64")#candidate|3179|(189,)|const|uint64
call_3178 = relay.TupleGetItem(func_1857_call(relay.reshape(const_3179.astype('uint64'), [7, 9, 3]), relay.reshape(const_3179.astype('uint64'), [7, 9, 3]), ), 0)
call_3180 = relay.TupleGetItem(func_1861_call(relay.reshape(const_3179.astype('uint64'), [7, 9, 3]), relay.reshape(const_3179.astype('uint64'), [7, 9, 3]), ), 0)
uop_3191 = relay.log2(call_3178.astype('float64')) # shape=(7, 9, 3)
uop_3193 = relay.log2(call_3180.astype('float64')) # shape=(7, 9, 3)
uop_3219 = relay.sinh(call_3178.astype('float32')) # shape=(7, 9, 3)
uop_3221 = relay.sinh(call_3180.astype('float32')) # shape=(7, 9, 3)
output = relay.Tuple([call_3163,call_3167,const_3179,uop_3191,uop_3219,])
output2 = relay.Tuple([call_3164,call_3168,const_3179,uop_3193,uop_3221,])
func_3226 = relay.Function([], output)
mod['func_3226'] = func_3226
mod = relay.transform.InferType()(mod)
mutated_mod['func_3226'] = func_3226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mutated_mod.get_global_var('func_3226')
call_3227 = func_3226_call()
output = call_3227
func_3228 = relay.Function([], output)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3234 = relay.var("var_3234", dtype = "float64", shape = (1, 13, 6))#candidate|3234|(1, 13, 6)|var|float64
const_3235 = relay.const([[[-8.574463,4.228324,-1.318060,5.574821,-6.951148,-9.500563],[1.217845,-6.868312,-0.610523,6.673618,-7.980116,5.447365],[-0.964062,-6.966110,-1.691725,-5.492124,7.254858,4.171676],[-8.592156,2.155200,9.828087,6.146842,0.275335,-0.770347],[-0.928722,-8.599960,-0.059555,9.778475,-7.837859,-2.144971],[-7.222405,3.171684,-5.333943,4.636976,-9.959550,3.275242],[-6.295410,-3.578985,-9.783849,9.119221,8.960978,9.673134],[2.310833,-8.764676,-8.655701,9.083950,1.305269,5.134266],[8.120721,-4.901135,1.261691,-3.765600,-0.395678,-5.649812],[9.764381,3.647037,7.252089,-5.189630,-9.074460,-1.277028],[0.648942,3.072005,-5.164097,-7.032021,6.249136,3.398501],[-6.659349,-3.085681,5.698552,0.391666,8.208011,4.517560],[-9.975315,9.667354,-3.292689,2.854057,3.374783,-6.045124]],[[0.922188,-5.901178,3.682590,-0.961946,7.310486,-3.945351],[8.307370,1.651557,-7.767945,4.785149,-1.853701,5.031219],[-0.072007,0.829618,8.915739,1.818605,-2.716225,5.532816],[-4.293639,-8.907674,6.621332,-0.028762,-3.032167,8.231981],[-9.617348,3.800904,1.535500,3.321183,-3.627320,-0.350310],[-9.603199,-8.385697,9.434799,-5.302260,9.892897,5.165056],[8.387577,6.198630,2.852358,-3.055189,7.292163,-8.569377],[5.983230,-5.281752,-2.167449,2.183665,4.799838,-3.098106],[-2.061334,-2.777048,0.443101,-2.430390,6.093227,-2.658641],[-4.681193,-1.325479,9.616047,-9.291010,-0.305240,-6.930193],[1.199867,5.273976,6.695030,4.629260,-0.152987,-4.333916],[1.192587,-8.706780,-9.750113,2.631655,6.208160,9.878303],[1.017255,7.795624,-8.454874,-1.862501,-8.918196,-2.950756]],[[0.069116,2.005345,0.769432,9.753527,-9.922857,7.845448],[5.724640,4.972862,-0.900027,9.272184,-6.794946,9.537137],[-2.537143,5.767113,3.886730,-4.362863,9.470414,-2.671163],[1.453698,-4.329874,8.457022,7.805155,-4.613380,-8.116044],[7.686013,-4.043311,-6.662389,-2.582388,-2.810972,4.769685],[-5.051120,-0.954222,4.917556,-8.394887,2.369043,-5.762657],[3.687914,8.378823,-3.875634,-1.896524,4.741353,-9.554458],[2.076310,-0.072629,-9.564104,3.174055,0.050633,-7.017479],[4.851348,-6.110302,4.036579,0.975006,-8.648287,2.123577],[-2.201945,-6.565514,-6.914434,-1.596877,3.770526,9.381897],[-2.759934,-9.402391,4.922904,9.628222,-5.066424,6.105259],[-5.832027,-3.149823,5.949955,-3.495271,2.588203,7.540344],[2.980523,6.846686,-2.153034,-3.842666,-0.878447,-1.632198]],[[9.561100,-1.828039,9.505261,-0.688781,-3.450846,-4.016800],[-9.685442,-7.840903,1.417850,5.269906,2.867129,-5.283936],[-3.934882,-0.248337,1.807764,-3.116661,-5.408525,-5.016282],[-6.123352,-8.298903,7.563795,-0.371515,3.015955,-0.430629],[-3.719191,0.600659,-0.722292,3.055885,-2.192049,5.082330],[-4.207244,-8.908746,-5.983755,3.498709,7.625807,-8.781404],[-8.901740,-2.243258,3.555501,2.166830,0.326958,0.498831],[-8.523682,-7.149181,-3.019412,-1.657453,8.546043,-1.634096],[-1.385011,-7.752090,1.081049,-7.370772,7.219911,7.435720],[5.323783,-2.254045,4.413900,8.393186,-2.125278,-8.596283],[3.989598,5.849890,3.005287,9.715476,3.420871,-6.228749],[-1.031327,3.227879,0.292123,-4.565135,8.786872,8.132684],[-4.074840,-4.017091,-4.363324,1.798744,1.919242,-7.174368]],[[-0.556942,-8.221623,4.086681,-3.403593,-9.451076,0.734387],[-8.350066,-1.671737,-6.088626,-9.646045,-9.190200,5.507363],[9.650643,0.510478,-5.995128,-4.838919,9.644367,-2.632598],[1.857620,-5.773308,-6.014501,3.076516,4.354050,-4.973301],[-7.537874,-4.254323,1.998223,5.625519,-7.146088,-2.292301],[1.224336,-8.525574,7.688261,7.968372,4.175875,-9.981058],[-2.764685,6.254347,-4.061664,3.036844,-6.088323,2.463474],[-1.530140,0.674306,0.641155,8.789440,-4.156191,4.358707],[-3.263065,-7.532910,-0.783805,-2.726959,-4.937931,-6.955248],[1.028529,8.442951,3.471569,-5.253616,-4.057774,3.208077],[2.716272,-2.994848,-4.038886,8.003642,-6.594049,-0.804627],[1.704653,8.379261,-3.246019,-9.601284,-3.147194,-0.715703],[-9.855537,4.819938,-8.638941,2.055919,6.097354,5.866517]],[[2.420729,-0.084061,-1.239636,4.223288,6.356516,2.472759],[-0.343594,-7.122378,-6.853419,0.980465,2.585363,0.891759],[0.415510,7.453463,-3.840588,-9.675677,7.305111,6.384242],[6.868330,0.522264,-4.168042,7.603121,-2.705529,4.259598],[-7.347039,-1.496154,2.095307,1.263910,-4.901045,0.988794],[9.925863,-8.387120,-6.055870,-8.104253,-9.722094,1.027103],[-2.313973,-1.694390,-9.092115,2.931012,-2.421997,-5.815391],[6.713993,-7.077072,-8.318013,-4.796704,5.204902,-9.059825],[0.591172,1.239514,2.056102,-9.526736,7.602332,-2.074862],[-8.125677,-6.904094,4.841933,-2.143230,-5.433252,-8.579803],[-1.775041,-6.012178,-5.273763,0.312811,2.841741,7.709700],[3.212147,1.471390,-2.076593,-8.158534,6.405242,8.399511],[8.979795,-3.950975,-3.949084,-2.604310,8.930714,-1.132307]],[[-6.815825,6.135157,3.573453,-1.563643,-7.124958,9.846645],[6.239593,4.692678,7.378024,-1.647610,-3.865236,-5.831256],[4.944237,0.633408,-1.638907,-5.775970,-6.989833,-5.409937],[3.332417,-9.170505,-4.990047,-3.419074,-1.807094,2.661192],[7.260738,-5.902771,-4.239297,-5.957543,-0.694774,-4.004857],[-6.010148,6.726291,6.632943,-2.788222,-2.683118,-1.052511],[-0.247293,-2.858250,4.491369,-3.217506,7.108032,-0.786469],[-7.575730,-9.497919,2.679638,2.531518,9.750582,-9.188135],[-4.133223,8.038103,4.480666,-4.822301,4.447230,-0.815163],[-0.438413,9.063622,-5.286390,7.326524,-2.469561,7.717277],[-5.240807,8.014738,3.578486,-2.753913,-1.121041,-5.672326],[-6.516256,-7.610887,2.129663,-1.212980,8.442502,-2.421505],[4.033925,-3.022345,1.360449,6.980042,-1.612605,8.127447]],[[-0.502460,-7.146014,-3.973183,2.759104,8.586152,-4.900600],[-9.631473,-9.070548,-4.206411,2.482556,-2.225674,2.487900],[5.834226,6.237069,-1.476327,0.511256,7.225701,1.888683],[-0.432280,-3.547249,-6.722676,8.832974,6.242762,5.011675],[-7.006043,8.833944,-5.171383,-9.939432,-8.488179,-3.080883],[-2.813480,5.697806,6.269258,6.986721,7.994635,7.066891],[-0.296438,0.928843,-3.389025,5.149630,3.667847,0.475914],[-4.712149,-8.979472,9.873712,2.337805,-7.244286,6.977007],[7.079341,-9.605223,-2.876219,7.614304,-5.366914,-3.947000],[4.268824,1.201184,7.534374,-4.616392,-2.427925,-2.213167],[5.392545,2.607795,-9.767342,8.692300,-4.659736,3.425699],[7.850444,0.984066,5.978820,-0.096574,-5.475704,3.022768],[-1.895094,4.492874,-8.024125,7.974056,1.149638,-2.834185]],[[1.209326,8.615131,0.107290,3.367560,8.755863,-3.323835],[-1.798268,7.037105,-4.618468,-0.030894,1.113150,3.379012],[5.297477,0.356571,7.304996,5.776339,-3.564475,-3.043519],[1.924726,-9.820801,9.088072,2.860981,-7.012644,-2.760467],[9.529150,3.992175,-9.012696,5.203924,0.595120,-7.505956],[-0.826638,-6.067187,-2.488479,-4.973290,-8.104974,6.468905],[6.265139,4.122344,7.050574,-9.898546,8.097424,6.992919],[-6.504972,9.410473,-0.062243,-4.851705,9.263138,0.426325],[-2.066207,3.826264,-3.543304,-9.773251,2.433556,0.526080],[9.151363,-6.141313,-6.676244,-1.640336,-1.078211,-9.489408],[1.988522,7.669959,7.570940,-9.940585,-4.122647,-3.507875],[-2.561952,-1.874958,1.920738,7.880359,7.745590,8.340042],[2.690684,-4.916311,5.758277,-8.553729,1.595221,-4.986333]],[[-3.661218,-3.157542,-8.313852,-7.642717,1.369321,9.479812],[-7.007949,3.512853,-3.421299,8.981739,-3.763561,8.349144],[1.477996,-6.574941,0.001365,7.818718,-3.747132,-2.177990],[0.659208,6.828040,7.847065,1.021541,2.842997,2.063960],[1.433906,-6.581061,-1.750052,5.612049,5.840583,-4.647987],[-4.872139,0.664278,-3.304108,-2.606830,-9.946398,-8.206408],[-2.501472,9.017328,2.285872,4.930002,-9.510670,-0.653451],[0.875495,-2.761761,-6.203938,2.161046,-0.611721,6.564427],[-3.052982,-0.108807,4.168038,-2.360788,-8.475663,-6.187177],[-1.431822,-3.079518,5.908134,5.473351,9.011593,9.386236],[-6.110111,-6.922028,1.331186,5.114414,0.606875,-6.386654],[1.179897,-9.286352,1.793522,8.450513,-2.747667,-0.877431],[-7.483115,-0.092881,7.223441,7.072315,-5.241071,-7.716875]]], dtype = "float64")#candidate|3235|(10, 13, 6)|const|float64
bop_3236 = relay.power(var_3234.astype('float64'), const_3235.astype('float64')) # shape=(10, 13, 6)
func_2548_call = mod.get_global_var('func_2548')
func_2550_call = mutated_mod.get_global_var('func_2550')
var_3243 = relay.var("var_3243", dtype = "float32", shape = (720,))#candidate|3243|(720,)|var|float32
call_3242 = relay.TupleGetItem(func_2548_call(relay.reshape(var_3243.astype('float32'), [60, 12])), 2)
call_3244 = relay.TupleGetItem(func_2550_call(relay.reshape(var_3243.astype('float32'), [60, 12])), 2)
output = relay.Tuple([bop_3236,call_3242,var_3243,])
output2 = relay.Tuple([bop_3236,call_3244,var_3243,])
func_3257 = relay.Function([var_3234,var_3243,], output)
mod['func_3257'] = func_3257
mod = relay.transform.InferType()(mod)
mutated_mod['func_3257'] = func_3257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mutated_mod.get_global_var('func_3257')
var_3259 = relay.var("var_3259", dtype = "float64", shape = (1, 13, 6))#candidate|3259|(1, 13, 6)|var|float64
var_3260 = relay.var("var_3260", dtype = "float32", shape = (720,))#candidate|3260|(720,)|var|float32
call_3258 = func_3257_call(var_3259,var_3260,)
output = call_3258
func_3261 = relay.Function([var_3259,var_3260,], output)
mutated_mod['func_3261'] = func_3261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_3270 = relay.TupleGetItem(func_1458_call(), 2)
call_3271 = relay.TupleGetItem(func_1460_call(), 2)
uop_3281 = relay.rsqrt(call_3270.astype('float32')) # shape=(396,)
uop_3283 = relay.rsqrt(call_3271.astype('float32')) # shape=(396,)
func_575_call = mod.get_global_var('func_575')
func_577_call = mutated_mod.get_global_var('func_577')
const_3289 = relay.const([2.549543,5.706803,3.826239,-1.229237,5.905299,-1.347986,0.198640,-3.064076,-8.585271,-1.170059,-8.199619,2.375129,-1.810797,-0.734662,-3.135910,3.743235,2.951078,3.958968,-9.999394,8.971260,-4.816263,-5.408441,-9.278426,1.017974,-5.795406,-6.342925,-6.777510,5.519247,-5.193410,2.280778,6.108968,-6.711593,9.622551,0.948592,-1.757176,5.525720,-7.775624,-0.601977,5.095448,7.168264,4.076348,-4.622667,1.918496,-7.624651,7.023800,0.542428,-4.142695,-4.943867,5.093325,1.348552,-0.816493,5.103497,2.335358,0.323496,2.848083,-5.478577,-3.077104,2.647136,-1.164184,-7.600761,8.559340,4.599397,7.404834,6.108578,6.178188,-4.948334,-5.512646,5.491090,9.016372,-7.539829,2.113405,-0.596746,6.034351,-5.809460,8.781714,5.101823,-6.319089,7.305859,-4.955283,-2.314856,2.632978,-9.967516,-7.586216,3.075919,-9.447828,0.285608,2.371133,-7.638536,8.358421,-2.269442,1.116772,7.659336,-2.092006,7.366917,9.118199,6.399914,5.568350,-5.127015,0.964715,6.715653,5.520222,0.710195,-0.347650,3.249556,-6.460637,5.647418,-9.229519,8.777230,1.294003,6.192246,4.840688,5.438381,-4.893909,-6.417223,-9.913625,-8.186246,-6.745451,-2.933628,8.092771,-5.127857,5.719026,1.294140,-0.395899,0.736810,1.749029,1.426456,2.214380,7.840196,-1.767705,0.305722,-8.234157,7.748491,3.737670,1.493117,2.387726,3.436183,3.535128,-1.354535,0.443132,9.531198,9.451690,1.120424,-4.027010,-3.415417,0.143537,4.497009,0.391081,-3.877493,-2.263445,2.331277,-3.523994,-2.713528,6.194727,2.169210,-6.728908,-3.152682,2.446672,-0.605481,-6.189251,6.105238,-7.024656,0.974860,1.493626,8.168997,-2.861767,2.810888,8.681086,-8.770032,3.529060,8.338500,5.411521,9.604539,-5.065654,-3.213535,-2.196031,-7.141921,-6.346134,6.603234,0.116488,1.229463,2.653103,-9.118566,-8.440969,-0.020389,2.182748,-9.529087,7.266907,8.416977,2.205462,-4.100627,7.619950,2.942809,1.529314,7.321385,2.858419,-6.112762,-9.189323,9.089749,0.754914,-6.730391,3.580558,8.817853,-7.181192,-4.760096,-9.397981,2.520650,5.920449,6.639707,0.977414,-9.976241,5.647471,-6.290302,0.594178,6.234560,2.003655,8.975731,-3.294664,4.440444,-8.136978,-2.486110,-1.003717,-7.100771,-0.624915,-2.055549,0.771009,-6.416290,1.651098,-7.682095,-9.040820,-6.172061,9.484029,3.344593,-8.238717,-4.135781,-8.073569,-6.414515,-0.547234,5.903871,-7.694164,0.429016,-5.106757,8.428905,-5.255708,-0.105684,7.682570,-2.223891,5.250798,-5.320441,-9.164561,-1.691635,5.502414,2.925584,4.399584,1.350301,9.984976,9.407778,-1.493236,9.412510,-5.032398,-7.842209,-9.373705,-7.583173,-5.014396,-4.322642,2.713129,9.231000,0.377190,5.911068,0.134417,-8.052952,8.707744,-1.430080,-8.191391,-0.554839,-0.811540,-3.881692,3.702875,-8.852613,2.166805,-7.019191,4.070661,-6.686360,-5.791746,9.403458,-6.996624,-5.425900,-8.841403,0.970935,5.516650,0.318372,-6.759649,-8.901637,9.521699,1.822019,2.181297,6.639965,-2.113342,2.083468,5.389527,-4.332061,8.276011,4.403336,-5.889058,-0.259843,-6.776813,3.293792,-1.073756,-8.157252,-5.993663,-9.335024,1.019080,-1.241449,4.002687,5.726730,-9.811987,-8.218234,-9.138607,9.635563,6.598278,-6.538815,-8.180801,-7.082259,-5.555920,-5.322486,3.656756,-6.514961,-1.589459,-6.153758,8.538860,4.199616,8.035014,3.639621,2.468379,-9.261165,-1.339903,7.042386,-3.174551,2.056512,-7.414397,0.134146,8.166517,3.481705,-3.836802,1.899789,7.279992,-1.477731,1.213622,-8.929592,-7.174830,2.428039,-1.150791,2.244826,-4.724375,7.542265,-3.307249,-8.277791,-1.437078,-2.888947,0.958386,-4.810676,-0.736266,-2.866353,-8.052914,-8.809521,2.196094,-4.794520,-8.658719,1.240935,-1.452139,-7.982091,7.810735,-4.194416,-4.002577,3.989795,0.280341,-4.938542,-0.253713,1.898081,7.319597,0.583982,7.148703,-5.568935,-9.692527,-6.381861,-6.125582,1.474224,-9.110836,-2.435485,-6.174943,-4.919452,3.667151,4.356210,9.633674,1.823388,3.748049,-0.056223,-1.892850,-4.807973,-4.914121,3.588807,0.350629,-9.828159,9.905589,-6.102833,-6.865353,4.583715,7.672060,5.967118,4.708556,-4.033976,-3.083111,7.074480,3.203792,4.287876,-3.973186,7.763052,2.171016,6.541660,-6.387529,1.346050,0.223960,-5.460215,6.493841,4.255813,-9.981449,0.233684,-3.766451,1.503394,5.216798,0.750503,-1.677758,6.845659,8.660480,-7.765831,0.850399,-1.956172,-2.821704,2.422567,0.870792,-9.792588,-2.111517,-4.260389,-5.435402,4.472094,-5.182230,1.203966,9.635701,-2.818354,-2.650848,-5.189637,-2.050221,-5.049799,0.245042,8.994915,-3.732119,1.213057,5.930454,-3.881531,4.673805,8.063921,-1.191313,-6.627859,-4.931279,-6.743961,1.250289,-5.869894,-5.471723,-6.984509,-2.926863,-6.164926,8.133426,-2.524624,9.221174,-1.958500,-2.555513,-0.914940,2.903704,-2.051071,8.285160,-6.508253,6.740388,6.593368,5.232950,4.200067,0.278677,-5.817215,3.626600,5.142670,8.194383,-4.432763,-7.867627,6.560503,9.146138,7.221264,-9.488730,-4.050433,-9.915350,5.906588,6.456310,7.119891,-3.187128,-2.888128,-0.418709,-5.413598,3.525424,3.352936,7.293620,9.175616,-7.887961,-3.622786,-2.495120,-1.730264,-4.664897,-1.388423,5.210767,-0.361001,-0.571581,2.907687,-9.789429,-8.661159,-1.717971,5.064489,-2.640318,1.741174,3.707177,-5.479214,-5.215073,-6.597965,-6.605191,-5.950239,8.492472,-6.764342,0.905766,-7.872291,9.908705,-5.305450,9.241302,-0.585157,-0.956270,-0.314357,1.635215,-5.403797,-2.082329,-7.834459,1.069218,-6.670224,8.094676,-0.244513,-0.083782,-9.713223,-4.178882,-1.319212,4.712270,8.133099,-6.286231,9.209827,-5.463721,5.398442,1.500379,-9.066345,-2.525445,2.557597,4.950700,0.650427,-9.192796,3.490213,-5.627890,-0.611699,-5.371356,1.078190,-2.416562,-6.874592,-7.196222,6.560240,5.736800,5.890236,-8.550049,6.492728,-4.328930,8.264174,5.467349,7.336526,-7.069664,0.377375,-2.639127,8.847083,4.241226,1.369281,0.754902,1.689887,-2.390578,1.721447,7.076585,-0.868498,3.036646,0.044691,3.886703,-9.396512,-7.575335,-5.605193,-4.179989,6.164114,-7.969063,-8.518036,8.013989,-9.488263,-6.773493,-1.809174,0.728795,5.589136,9.242787,6.103283,-4.669706,-6.715910,9.157282,8.826861,7.128094,8.602595,5.374129,5.636856,-0.537699,9.267955,4.188764,-9.458835,-1.308122,2.252072,-9.178749,-6.485074,-0.196808,-3.062516,-0.223559,-9.280579,-3.711573,8.940360,1.228280,9.389022,-5.205781,-1.641122,-7.640463,-2.135215,-0.602443,-8.181631,-4.081074,2.785298,-8.169176,-1.025343,6.624154,-6.986360,9.352047,-0.309539,-2.333367,-4.846896,-9.522177,2.732326,3.006696,9.734737,7.123493,9.497901,1.177015,1.732488,-4.981286,-6.215541,-1.942040,1.361868,-8.962843,-9.429966,5.415339,7.178484,7.643570,6.188347,2.392425,-8.213321,-9.386442,-5.147323,5.194196,4.968261,-3.261853,9.814785,-6.780101,-0.799510,-3.728225,-8.332337,0.201365,1.652989,-8.229486,4.875729,-7.505052,-3.100772,2.866810,-8.618599,-9.815122,-3.412651,4.236151,5.916754,8.081253,-4.961561,-7.873391,2.347054,-8.266939,-5.013365,3.407386,-5.660337,-8.343392,6.169209,-0.772673,-5.989271,9.864370,2.400440,-7.598882,1.516265,-6.319886,-1.459878,-5.449353,-4.866425,-7.024610,1.380350,-2.061186,3.550829,-7.374722,1.574137], dtype = "float32")#candidate|3289|(720,)|const|float32
call_3288 = func_575_call(relay.reshape(const_3289.astype('float32'), [8, 6, 15]))
call_3290 = func_575_call(relay.reshape(const_3289.astype('float32'), [8, 6, 15]))
uop_3296 = relay.atanh(uop_3281.astype('float64')) # shape=(396,)
uop_3298 = relay.atanh(uop_3283.astype('float64')) # shape=(396,)
output = relay.Tuple([call_3288,const_3289,uop_3296,])
output2 = relay.Tuple([call_3290,const_3289,uop_3298,])
func_3303 = relay.Function([], output)
mod['func_3303'] = func_3303
mod = relay.transform.InferType()(mod)
mutated_mod['func_3303'] = func_3303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3303_call = mutated_mod.get_global_var('func_3303')
call_3304 = func_3303_call()
output = call_3304
func_3305 = relay.Function([], output)
mutated_mod['func_3305'] = func_3305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1946_call = mod.get_global_var('func_1946')
func_1948_call = mutated_mod.get_global_var('func_1948')
call_3443 = func_1946_call()
call_3444 = func_1946_call()
output = call_3443
output2 = call_3444
func_3461 = relay.Function([], output)
mod['func_3461'] = func_3461
mod = relay.transform.InferType()(mod)
output = func_3461()
func_3462 = relay.Function([], output)
mutated_mod['func_3462'] = func_3462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2720_call = mod.get_global_var('func_2720')
func_2722_call = mutated_mod.get_global_var('func_2722')
call_3466 = relay.TupleGetItem(func_2720_call(), 0)
call_3467 = relay.TupleGetItem(func_2722_call(), 0)
output = relay.Tuple([call_3466,])
output2 = relay.Tuple([call_3467,])
func_3471 = relay.Function([], output)
mod['func_3471'] = func_3471
mod = relay.transform.InferType()(mod)
mutated_mod['func_3471'] = func_3471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3471_call = mutated_mod.get_global_var('func_3471')
call_3472 = func_3471_call()
output = call_3472
func_3473 = relay.Function([], output)
mutated_mod['func_3473'] = func_3473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mod.get_global_var('func_3226')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_3486 = relay.TupleGetItem(func_3226_call(), 2)
call_3487 = relay.TupleGetItem(func_3228_call(), 2)
output = relay.Tuple([call_3486,])
output2 = relay.Tuple([call_3487,])
func_3502 = relay.Function([], output)
mod['func_3502'] = func_3502
mod = relay.transform.InferType()(mod)
output = func_3502()
func_3503 = relay.Function([], output)
mutated_mod['func_3503'] = func_3503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mod.get_global_var('func_2031')
func_2032_call = mutated_mod.get_global_var('func_2032')
call_3504 = relay.TupleGetItem(func_2031_call(), 0)
call_3505 = relay.TupleGetItem(func_2032_call(), 0)
func_2548_call = mod.get_global_var('func_2548')
func_2550_call = mutated_mod.get_global_var('func_2550')
var_3510 = relay.var("var_3510", dtype = "float32", shape = (60, 12))#candidate|3510|(60, 12)|var|float32
call_3509 = relay.TupleGetItem(func_2548_call(relay.reshape(var_3510.astype('float32'), [60, 12])), 0)
call_3511 = relay.TupleGetItem(func_2550_call(relay.reshape(var_3510.astype('float32'), [60, 12])), 0)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_3520 = relay.TupleGetItem(func_1458_call(), 2)
call_3521 = relay.TupleGetItem(func_1460_call(), 2)
output = relay.Tuple([call_3504,call_3509,var_3510,call_3520,])
output2 = relay.Tuple([call_3505,call_3511,var_3510,call_3521,])
func_3522 = relay.Function([var_3510,], output)
mod['func_3522'] = func_3522
mod = relay.transform.InferType()(mod)
var_3523 = relay.var("var_3523", dtype = "float32", shape = (60, 12))#candidate|3523|(60, 12)|var|float32
output = func_3522(var_3523)
func_3524 = relay.Function([var_3523], output)
mutated_mod['func_3524'] = func_3524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_3538 = relay.TupleGetItem(func_1558_call(), 1)
call_3539 = relay.TupleGetItem(func_1560_call(), 1)
output = relay.Tuple([call_3538,])
output2 = relay.Tuple([call_3539,])
func_3552 = relay.Function([], output)
mod['func_3552'] = func_3552
mod = relay.transform.InferType()(mod)
mutated_mod['func_3552'] = func_3552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3552_call = mutated_mod.get_global_var('func_3552')
call_3553 = func_3552_call()
output = call_3553
func_3554 = relay.Function([], output)
mutated_mod['func_3554'] = func_3554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3575 = relay.var("var_3575", dtype = "float32", shape = (12, 8, 7))#candidate|3575|(12, 8, 7)|var|float32
uop_3576 = relay.sigmoid(var_3575.astype('float32')) # shape=(12, 8, 7)
output = relay.Tuple([uop_3576,])
output2 = relay.Tuple([uop_3576,])
func_3584 = relay.Function([var_3575,], output)
mod['func_3584'] = func_3584
mod = relay.transform.InferType()(mod)
mutated_mod['func_3584'] = func_3584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3585 = relay.var("var_3585", dtype = "float32", shape = (12, 8, 7))#candidate|3585|(12, 8, 7)|var|float32
func_3584_call = mutated_mod.get_global_var('func_3584')
call_3586 = func_3584_call(var_3585)
output = call_3586
func_3587 = relay.Function([var_3585], output)
mutated_mod['func_3587'] = func_3587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_3629 = relay.TupleGetItem(func_1639_call(), 0)
call_3630 = relay.TupleGetItem(func_1641_call(), 0)
output = call_3629
output2 = call_3630
func_3634 = relay.Function([], output)
mod['func_3634'] = func_3634
mod = relay.transform.InferType()(mod)
mutated_mod['func_3634'] = func_3634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3634_call = mutated_mod.get_global_var('func_3634')
call_3635 = func_3634_call()
output = call_3635
func_3636 = relay.Function([], output)
mutated_mod['func_3636'] = func_3636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2997_call = mod.get_global_var('func_2997')
func_2998_call = mutated_mod.get_global_var('func_2998')
call_3637 = relay.TupleGetItem(func_2997_call(), 1)
call_3638 = relay.TupleGetItem(func_2998_call(), 1)
uop_3649 = relay.atanh(call_3637.astype('float64')) # shape=(6, 6, 1)
uop_3651 = relay.atanh(call_3638.astype('float64')) # shape=(6, 6, 1)
func_2966_call = mod.get_global_var('func_2966')
func_2969_call = mutated_mod.get_global_var('func_2969')
var_3669 = relay.var("var_3669", dtype = "float32", shape = (720,))#candidate|3669|(720,)|var|float32
call_3668 = relay.TupleGetItem(func_2966_call(relay.reshape(var_3669.astype('float32'), [720,])), 6)
call_3670 = relay.TupleGetItem(func_2969_call(relay.reshape(var_3669.astype('float32'), [720,])), 6)
uop_3681 = relay.sqrt(uop_3649.astype('float32')) # shape=(6, 6, 1)
uop_3683 = relay.sqrt(uop_3651.astype('float32')) # shape=(6, 6, 1)
bop_3684 = relay.logical_or(uop_3649.astype('bool'), var_3669.astype('bool')) # shape=(6, 6, 720)
bop_3687 = relay.logical_or(uop_3651.astype('bool'), var_3669.astype('bool')) # shape=(6, 6, 720)
uop_3691 = relay.rsqrt(uop_3681.astype('float32')) # shape=(6, 6, 1)
uop_3693 = relay.rsqrt(uop_3683.astype('float32')) # shape=(6, 6, 1)
bop_3696 = relay.bitwise_or(uop_3681.astype('int8'), bop_3684.astype('int8')) # shape=(6, 6, 720)
bop_3699 = relay.bitwise_or(uop_3683.astype('int8'), bop_3687.astype('int8')) # shape=(6, 6, 720)
func_1407_call = mod.get_global_var('func_1407')
func_1409_call = mutated_mod.get_global_var('func_1409')
call_3715 = relay.TupleGetItem(func_1407_call(), 1)
call_3716 = relay.TupleGetItem(func_1409_call(), 1)
output = relay.Tuple([call_3668,uop_3691,bop_3696,call_3715,])
output2 = relay.Tuple([call_3670,uop_3693,bop_3699,call_3716,])
func_3733 = relay.Function([var_3669,], output)
mod['func_3733'] = func_3733
mod = relay.transform.InferType()(mod)
var_3734 = relay.var("var_3734", dtype = "float32", shape = (720,))#candidate|3734|(720,)|var|float32
output = func_3733(var_3734)
func_3735 = relay.Function([var_3734], output)
mutated_mod['func_3735'] = func_3735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2720_call = mod.get_global_var('func_2720')
func_2722_call = mutated_mod.get_global_var('func_2722')
call_3752 = relay.TupleGetItem(func_2720_call(), 1)
call_3753 = relay.TupleGetItem(func_2722_call(), 1)
output = relay.Tuple([call_3752,])
output2 = relay.Tuple([call_3753,])
func_3758 = relay.Function([], output)
mod['func_3758'] = func_3758
mod = relay.transform.InferType()(mod)
output = func_3758()
func_3759 = relay.Function([], output)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3780 = relay.const([[[-5,-3,-1,1,-8,-4,10,3],[-6,1,-5,5,6,-4,-2,-8],[-1,6,-7,-1,9,6,-3,-3],[10,-3,7,-4,-5,-3,3,6],[4,5,-10,8,2,-1,3,-5],[8,-7,9,9,-2,-1,-6,6]],[[-10,3,5,-1,7,1,-6,2],[6,10,-3,-9,1,-9,-10,7],[5,-2,-5,-9,-5,-2,-9,-4],[6,-2,2,3,5,2,-6,-5],[-1,3,-10,-8,-5,5,-5,-10],[-6,9,6,-3,3,-4,4,-3]],[[-8,1,-1,4,-9,9,-9,-2],[-1,-5,2,-8,1,7,-3,2],[-7,1,4,-3,4,5,-8,2],[-8,8,3,9,8,-1,6,-4],[6,10,-1,-1,4,-2,-2,4],[9,4,-8,8,-10,-6,-2,-1]],[[8,-10,-6,-5,8,-3,-4,-4],[10,7,-2,-1,3,1,10,6],[7,6,-9,-4,-10,7,5,-7],[9,3,8,-6,-5,-8,10,2],[2,-1,-1,-5,-3,5,4,-4],[-5,-2,3,5,6,-3,-7,-6]],[[-3,9,-1,4,-9,-3,-2,-3],[4,-9,-5,4,-6,-8,2,-6],[-10,-10,1,6,-5,-10,7,-4],[-1,9,7,-9,-10,8,10,10],[10,4,8,-1,10,9,-7,8],[6,-7,-1,-6,3,7,-9,-5]],[[9,-10,9,9,3,7,-3,-9],[2,-3,-2,6,-6,-1,9,4],[7,-4,-5,8,-3,9,9,6],[-6,6,8,1,6,9,-8,-5],[8,1,-4,-3,-3,-4,2,8],[9,-4,-8,2,-9,-9,-5,3]],[[-6,9,3,-9,-6,-3,-3,6],[2,10,9,4,-3,6,-7,-1],[3,-3,2,7,4,-6,-8,8],[6,-2,10,-2,8,8,7,6],[-9,-8,-10,-9,-2,1,1,2],[9,-2,-9,-9,4,-10,-9,1]],[[-7,7,4,4,-2,8,6,1],[-3,4,1,6,-3,6,-5,7],[6,9,-3,5,-8,1,2,-1],[6,6,-9,3,-1,5,6,7],[-8,-1,1,-6,-1,-5,10,-8],[1,6,-8,-3,7,-2,10,4]],[[-8,-8,-3,10,-3,8,8,10],[2,1,-4,-7,-10,2,10,7],[1,9,-4,-9,-1,-10,3,-10],[7,-4,-6,2,4,8,-1,4],[-2,7,9,3,-3,2,-3,2],[4,1,-9,-7,-6,-6,10,9]],[[10,-8,-2,-10,-5,10,5,-8],[-7,8,-1,-6,-8,3,2,-1],[-8,1,1,-4,4,-4,5,7],[-2,-6,9,-1,-6,-8,6,1],[8,3,-3,-6,10,-5,4,5],[-8,3,6,-8,-8,-3,4,8]],[[5,-3,-8,-7,-1,-1,6,-4],[-10,-4,9,-3,6,9,9,6],[-9,-4,10,-5,-8,7,-6,-10],[6,-5,6,9,-1,4,8,-5],[10,5,-3,-8,-7,-4,-6,9],[6,4,-1,4,5,-3,-9,-1]],[[-8,-9,-5,9,-2,6,7,7],[-1,-5,-7,-6,10,-5,-10,8],[-3,8,-5,-3,-1,-4,-4,4],[-5,-10,10,5,7,-1,-6,-8],[7,10,-4,9,-10,6,6,-1],[-10,3,7,10,-8,5,-9,7]],[[-9,-7,8,10,7,-5,-7,5],[-5,7,-8,8,-7,2,-3,3],[-5,-5,-4,-4,5,7,-4,-9],[-3,-3,-5,-7,-3,10,7,8],[-6,7,-1,3,8,8,-2,-3],[5,-8,-8,-3,-3,6,10,3]],[[8,6,-9,-5,-10,-1,2,-9],[-3,-7,1,1,-7,-3,-3,-3],[-6,-4,7,-4,-4,1,-10,-3],[7,-3,2,-10,2,-3,2,10],[4,-5,-3,10,-5,-3,1,-7],[6,5,-5,-4,-2,4,5,-4]]], dtype = "int8")#candidate|3780|(14, 6, 8)|const|int8
const_3781 = relay.const([[[-10,10,-3,-5,-8,5,-6,-2],[-10,10,3,-9,2,-6,-8,1],[-9,9,5,-6,-2,10,5,-4],[10,-1,4,6,3,9,8,-1],[-10,-10,-2,-1,7,-2,-1,7],[2,4,9,-2,-2,4,-2,7]],[[-5,8,-3,-2,10,5,2,-3],[-2,-10,5,-5,-2,6,-6,-5],[-2,-8,4,7,6,5,6,10],[-3,10,2,-6,4,8,7,-9],[-8,5,-9,-4,-4,10,-7,7],[3,-9,-1,-1,6,-5,3,-3]],[[-2,-3,-3,-5,7,7,10,-3],[3,9,-6,-9,10,-9,-9,-5],[1,2,-6,10,-6,5,-3,8],[10,-10,-8,1,4,-2,-10,-3],[-7,-6,-4,4,5,4,6,4],[1,-2,-4,8,1,-10,-7,4]],[[8,4,-8,1,-8,1,-9,1],[10,9,-4,-1,-7,8,4,9],[-5,5,3,-7,5,6,5,-5],[9,-7,1,2,1,-3,5,6],[-4,3,10,-8,-8,-10,2,-7],[9,7,-4,-9,8,-7,-3,3]],[[7,-7,-6,2,1,-8,-7,-5],[-9,-8,1,5,1,-4,-8,-4],[-5,-1,-7,-6,7,3,-10,-10],[-3,1,8,-3,9,-3,-6,-3],[-9,-1,-9,9,4,-10,2,-1],[-10,9,10,7,1,8,9,10]],[[6,-6,-2,-3,-7,-9,2,-6],[-4,-10,-8,4,7,1,-3,-1],[4,-8,-2,-1,3,-2,1,7],[4,8,4,-5,3,-6,7,-7],[-7,-5,3,2,7,-1,3,-2],[7,10,3,4,-1,2,10,-9]],[[4,5,-2,-3,2,-5,-6,-1],[6,-8,-9,5,-3,-8,-8,-9],[10,10,-3,-9,1,-10,-1,-1],[4,-8,-2,-3,-1,7,7,-2],[1,9,6,-1,-1,3,-5,1],[-4,4,-3,10,-7,3,-4,-1]],[[8,-1,7,1,-6,-2,-1,-10],[-3,2,1,-9,-10,4,-7,2],[-6,-10,-6,3,-9,3,-9,6],[9,-7,1,-1,-8,6,-2,3],[-3,3,5,-3,4,-6,-9,4],[-2,8,-6,-4,-6,4,-1,7]],[[1,5,-7,-2,-2,-3,-1,-9],[-7,6,-10,2,3,5,2,-9],[-2,-8,-3,-2,-9,8,-2,-2],[-7,-6,1,2,-3,-7,9,-7],[10,-3,-8,-10,10,8,6,-4],[-10,-10,8,2,-9,6,7,-10]],[[-1,-10,8,5,-9,-1,-4,-7],[-5,5,9,7,-8,-5,-8,-2],[9,-7,3,4,-4,-6,-2,-3],[10,-2,-5,6,-4,8,7,1],[1,3,-10,5,-4,4,-4,4],[-7,2,7,-5,8,-3,1,-8]],[[-3,-8,8,9,-6,9,-4,-3],[-9,-2,2,9,1,2,-7,-6],[-1,-5,10,4,-9,-6,-6,-3],[-6,3,-2,-6,6,7,-8,4],[-7,-2,-3,3,-9,-6,-9,-2],[-5,3,-9,2,-6,-9,-10,-6]],[[1,4,-2,5,-5,8,1,-9],[7,4,10,3,5,-10,4,1],[-4,9,-1,7,7,-10,-5,7],[-2,10,-8,-9,3,-5,-5,-2],[3,-5,6,-10,7,-3,10,6],[10,-3,-7,1,-2,-8,-5,6]],[[-2,10,-4,2,10,-4,5,2],[6,-6,-10,4,3,2,4,8],[10,-5,10,-4,5,1,-9,-9],[-2,7,-2,-7,5,-5,-7,5],[10,-2,7,1,5,4,-8,-9],[8,6,9,6,-3,2,-3,7]],[[-7,6,-6,-8,2,7,4,2],[-3,3,4,-5,10,6,6,-1],[-4,-9,-5,-3,10,8,-5,-8],[-1,-10,10,-1,-7,-6,-2,-6],[-5,9,3,-8,10,-8,10,-3],[9,-5,1,1,-3,-10,5,1]]], dtype = "int8")#candidate|3781|(14, 6, 8)|const|int8
bop_3782 = relay.not_equal(const_3780.astype('bool'), relay.reshape(const_3781.astype('bool'), relay.shape_of(const_3780))) # shape=(14, 6, 8)
output = bop_3782
output2 = bop_3782
func_3787 = relay.Function([], output)
mod['func_3787'] = func_3787
mod = relay.transform.InferType()(mod)
output = func_3787()
func_3788 = relay.Function([], output)
mutated_mod['func_3788'] = func_3788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_788_call = mod.get_global_var('func_788')
func_789_call = mutated_mod.get_global_var('func_789')
call_3815 = func_788_call()
call_3816 = func_788_call()
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_3832 = relay.TupleGetItem(func_1695_call(), 0)
call_3833 = relay.TupleGetItem(func_1697_call(), 0)
uop_3835 = relay.log2(call_3832.astype('float32')) # shape=(13, 5, 16)
uop_3837 = relay.log2(call_3833.astype('float32')) # shape=(13, 5, 16)
output = relay.Tuple([call_3815,uop_3835,])
output2 = relay.Tuple([call_3816,uop_3837,])
func_3841 = relay.Function([], output)
mod['func_3841'] = func_3841
mod = relay.transform.InferType()(mod)
output = func_3841()
func_3842 = relay.Function([], output)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2997_call = mod.get_global_var('func_2997')
func_2998_call = mutated_mod.get_global_var('func_2998')
call_3853 = relay.TupleGetItem(func_2997_call(), 1)
call_3854 = relay.TupleGetItem(func_2998_call(), 1)
output = relay.Tuple([call_3853,])
output2 = relay.Tuple([call_3854,])
func_3855 = relay.Function([], output)
mod['func_3855'] = func_3855
mod = relay.transform.InferType()(mod)
output = func_3855()
func_3856 = relay.Function([], output)
mutated_mod['func_3856'] = func_3856
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3881 = relay.var("var_3881", dtype = "float32", shape = (16, 2, 10))#candidate|3881|(16, 2, 10)|var|float32
var_3882 = relay.var("var_3882", dtype = "float32", shape = (16, 2, 10))#candidate|3882|(16, 2, 10)|var|float32
bop_3883 = relay.divide(var_3881.astype('float32'), relay.reshape(var_3882.astype('float32'), relay.shape_of(var_3881))) # shape=(16, 2, 10)
output = bop_3883
output2 = bop_3883
func_3888 = relay.Function([var_3881,var_3882,], output)
mod['func_3888'] = func_3888
mod = relay.transform.InferType()(mod)
var_3889 = relay.var("var_3889", dtype = "float32", shape = (16, 2, 10))#candidate|3889|(16, 2, 10)|var|float32
var_3890 = relay.var("var_3890", dtype = "float32", shape = (16, 2, 10))#candidate|3890|(16, 2, 10)|var|float32
output = func_3888(var_3889,var_3890,)
func_3891 = relay.Function([var_3889,var_3890,], output)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_3981 = relay.TupleGetItem(func_1695_call(), 0)
call_3982 = relay.TupleGetItem(func_1697_call(), 0)
func_972_call = mod.get_global_var('func_972')
func_976_call = mutated_mod.get_global_var('func_976')
var_3984 = relay.var("var_3984", dtype = "uint64", shape = ())#candidate|3984|()|var|uint64
const_3985 = relay.const([-1,-6,8,7,-1,7,2,-3,-2,-2,6,3,1,6,1,9,6,-2,-3,-2,-10,4,2,-4,4,7,-6,-9,10,-4,-1,-5,-10,3,8,10], dtype = "uint64")#candidate|3985|(36,)|const|uint64
var_3986 = relay.var("var_3986", dtype = "int64", shape = (396,))#candidate|3986|(396,)|var|int64
call_3983 = relay.TupleGetItem(func_972_call(relay.reshape(var_3984.astype('uint64'), []), relay.reshape(const_3985.astype('uint64'), [6, 6, 1]), relay.reshape(var_3986.astype('int64'), [396,]), ), 0)
call_3987 = relay.TupleGetItem(func_976_call(relay.reshape(var_3984.astype('uint64'), []), relay.reshape(const_3985.astype('uint64'), [6, 6, 1]), relay.reshape(var_3986.astype('int64'), [396,]), ), 0)
output = relay.Tuple([call_3981,call_3983,var_3984,const_3985,var_3986,])
output2 = relay.Tuple([call_3982,call_3987,var_3984,const_3985,var_3986,])
func_3988 = relay.Function([var_3984,var_3986,], output)
mod['func_3988'] = func_3988
mod = relay.transform.InferType()(mod)
var_3989 = relay.var("var_3989", dtype = "uint64", shape = ())#candidate|3989|()|var|uint64
var_3990 = relay.var("var_3990", dtype = "int64", shape = (396,))#candidate|3990|(396,)|var|int64
output = func_3988(var_3989,var_3990,)
func_3991 = relay.Function([var_3989,var_3990,], output)
mutated_mod['func_3991'] = func_3991
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4032 = relay.var("var_4032", dtype = "float32", shape = (1, 6, 10))#candidate|4032|(1, 6, 10)|var|float32
uop_4033 = relay.rsqrt(var_4032.astype('float32')) # shape=(1, 6, 10)
uop_4048 = relay.cosh(uop_4033.astype('float64')) # shape=(1, 6, 10)
bop_4068 = relay.right_shift(uop_4048.astype('uint32'), relay.reshape(uop_4033.astype('uint32'), relay.shape_of(uop_4048))) # shape=(1, 6, 10)
func_2271_call = mod.get_global_var('func_2271')
func_2273_call = mutated_mod.get_global_var('func_2273')
call_4075 = func_2271_call()
call_4076 = func_2271_call()
uop_4077 = relay.sigmoid(uop_4048.astype('float64')) # shape=(1, 6, 10)
output = relay.Tuple([bop_4068,call_4075,uop_4077,])
output2 = relay.Tuple([bop_4068,call_4076,uop_4077,])
func_4079 = relay.Function([var_4032,], output)
mod['func_4079'] = func_4079
mod = relay.transform.InferType()(mod)
var_4080 = relay.var("var_4080", dtype = "float32", shape = (1, 6, 10))#candidate|4080|(1, 6, 10)|var|float32
output = func_4079(var_4080)
func_4081 = relay.Function([var_4080], output)
mutated_mod['func_4081'] = func_4081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_4143 = func_2842_call()
call_4144 = func_2842_call()
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_4155 = relay.TupleGetItem(func_1695_call(), 0)
call_4156 = relay.TupleGetItem(func_1697_call(), 0)
output = relay.Tuple([call_4143,call_4155,])
output2 = relay.Tuple([call_4144,call_4156,])
func_4189 = relay.Function([], output)
mod['func_4189'] = func_4189
mod = relay.transform.InferType()(mod)
mutated_mod['func_4189'] = func_4189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4189_call = mutated_mod.get_global_var('func_4189')
call_4190 = func_4189_call()
output = call_4190
func_4191 = relay.Function([], output)
mutated_mod['func_4191'] = func_4191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3758_call = mod.get_global_var('func_3758')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_4205 = relay.TupleGetItem(func_3758_call(), 0)
call_4206 = relay.TupleGetItem(func_3759_call(), 0)
output = relay.Tuple([call_4205,])
output2 = relay.Tuple([call_4206,])
func_4217 = relay.Function([], output)
mod['func_4217'] = func_4217
mod = relay.transform.InferType()(mod)
mutated_mod['func_4217'] = func_4217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4217_call = mutated_mod.get_global_var('func_4217')
call_4218 = func_4217_call()
output = call_4218
func_4219 = relay.Function([], output)
mutated_mod['func_4219'] = func_4219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2720_call = mod.get_global_var('func_2720')
func_2722_call = mutated_mod.get_global_var('func_2722')
call_4228 = relay.TupleGetItem(func_2720_call(), 2)
call_4229 = relay.TupleGetItem(func_2722_call(), 2)
output = call_4228
output2 = call_4229
func_4234 = relay.Function([], output)
mod['func_4234'] = func_4234
mod = relay.transform.InferType()(mod)
mutated_mod['func_4234'] = func_4234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4234_call = mutated_mod.get_global_var('func_4234')
call_4235 = func_4234_call()
output = call_4235
func_4236 = relay.Function([], output)
mutated_mod['func_4236'] = func_4236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_4321 = relay.TupleGetItem(func_1156_call(), 0)
call_4322 = relay.TupleGetItem(func_1158_call(), 0)
func_2139_call = mod.get_global_var('func_2139')
func_2143_call = mutated_mod.get_global_var('func_2143')
var_4326 = relay.var("var_4326", dtype = "uint64", shape = (1, 189))#candidate|4326|(1, 189)|var|uint64
call_4325 = relay.TupleGetItem(func_2139_call(relay.reshape(var_4326.astype('uint64'), [189,]), relay.reshape(var_4326.astype('uint64'), [189,]), ), 2)
call_4327 = relay.TupleGetItem(func_2143_call(relay.reshape(var_4326.astype('uint64'), [189,]), relay.reshape(var_4326.astype('uint64'), [189,]), ), 2)
bop_4333 = relay.greater(var_4326.astype('bool'), relay.reshape(call_4325.astype('bool'), relay.shape_of(var_4326))) # shape=(1, 189)
bop_4336 = relay.greater(var_4326.astype('bool'), relay.reshape(call_4327.astype('bool'), relay.shape_of(var_4326))) # shape=(1, 189)
output = relay.Tuple([call_4321,bop_4333,])
output2 = relay.Tuple([call_4322,bop_4336,])
func_4337 = relay.Function([var_4326,], output)
mod['func_4337'] = func_4337
mod = relay.transform.InferType()(mod)
mutated_mod['func_4337'] = func_4337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4338 = relay.var("var_4338", dtype = "uint64", shape = (1, 189))#candidate|4338|(1, 189)|var|uint64
func_4337_call = mutated_mod.get_global_var('func_4337')
call_4339 = func_4337_call(var_4338)
output = call_4339
func_4340 = relay.Function([var_4338], output)
mutated_mod['func_4340'] = func_4340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_4379 = relay.TupleGetItem(func_3841_call(), 0)
call_4380 = relay.TupleGetItem(func_3842_call(), 0)
func_3988_call = mod.get_global_var('func_3988')
func_3991_call = mutated_mod.get_global_var('func_3991')
const_4384 = relay.const(8, dtype = "uint64")#candidate|4384|()|const|uint64
const_4385 = relay.const([7,6,5,-6,2,8,4,5,-2,5,4,7,9,5,5,-7,3,-6,5,-3,5,-8,9,-8,8,2,-1,-3,5,8,-1,4,-10,-4,4,10,9,10,-1,-9,-4,-2,-2,-5,-4,-8,-10,9,-3,-3,-10,-8,-2,7,9,-6,-8,7,-5,10,-5,-4,-3,5,8,4,-2,7,3,1,9,-6,-6,-9,-7,-10,-7,7,9,-5,1,-5,4,-1,3,10,7,-10,-10,4,10,-10,-8,7,1,4,-3,-7,8,-5,-9,-6,-2,-1,-7,-10,9,-4,-6,-4,-4,1,9,6,9,10,-8,-4,3,3,-2,-5,-10,8,1,-7,2,4,-9,9,-4,3,7,2,-5,-10,-5,-8,5,5,9,10,-9,5,7,-5,4,2,-7,1,-1,-1,-7,5,4,-7,1,6,-2,-9,4,-9,-2,-10,-7,-5,6,-7,4,7,2,-2,-1,-3,9,1,6,2,3,8,-6,10,-8,5,1,-1,5,-3,2,-1,-8,4,4,-1,-9,9,-2,7,8,-2,-3,-1,6,9,10,1,-2,-9,1,5,8,5,-5,-10,2,3,6,-8,-7,-2,-6,-2,-8,-7,2,-8,6,-2,4,5,5,3,-1,6,7,3,-1,-2,-8,7,-10,2,-8,8,-8,10,-8,-7,-6,-7,10,-6,4,9,6,-2,3,-4,-8,-3,-3,10,-7,-2,-9,-6,8,-2,-10,2,7,4,-8,2,-1,2,9,-9,10,-7,-2,-10,5,-1,-10,-2,-9,-10,-5,2,-7,-1,-6,-1,2,5,-3,4,-4,-2,10,-5,2,-7,-8,-2,3,1,6,6,-10,-1,8,10,2,8,7,2,-1,-6,-8,-3,-6,2,6,9,3,-10,7,2,-3,-1,8,-2,2,7,8,5,-4,-5,7,8,-6,-10,8,2,6,4,7,-2,-3,1,3,-7,-2,-9,6,10,6,5,-6,5,-10,-6,2,6,-1,9,4,10,8,-7,-7,-8,-9,-6,2,6,8,-9,-4,-8,-5,-8,2,-2,-9,9,-6,-10,-4,9,-8,5,9,-8], dtype = "int64")#candidate|4385|(396,)|const|int64
call_4383 = relay.TupleGetItem(func_3988_call(relay.reshape(const_4384.astype('uint64'), []), relay.reshape(const_4385.astype('int64'), [396,]), ), 3)
call_4386 = relay.TupleGetItem(func_3991_call(relay.reshape(const_4384.astype('uint64'), []), relay.reshape(const_4385.astype('int64'), [396,]), ), 3)
func_3758_call = mod.get_global_var('func_3758')
func_3759_call = mutated_mod.get_global_var('func_3759')
call_4394 = relay.TupleGetItem(func_3758_call(), 0)
call_4395 = relay.TupleGetItem(func_3759_call(), 0)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_4402 = func_818_call()
call_4403 = func_818_call()
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_4405 = relay.TupleGetItem(func_2370_call(relay.reshape(call_4402.astype('bool'), [13, 5, 16])), 0)
call_4406 = relay.TupleGetItem(func_2372_call(relay.reshape(call_4402.astype('bool'), [13, 5, 16])), 0)
func_2966_call = mod.get_global_var('func_2966')
func_2969_call = mutated_mod.get_global_var('func_2969')
var_4410 = relay.var("var_4410", dtype = "float32", shape = (60, 12))#candidate|4410|(60, 12)|var|float32
call_4409 = relay.TupleGetItem(func_2966_call(relay.reshape(var_4410.astype('float32'), [720,])), 3)
call_4411 = relay.TupleGetItem(func_2969_call(relay.reshape(var_4410.astype('float32'), [720,])), 3)
uop_4421 = relay.sigmoid(call_4383.astype('float64')) # shape=(36,)
uop_4423 = relay.sigmoid(call_4386.astype('float64')) # shape=(36,)
output = relay.Tuple([call_4379,const_4384,const_4385,call_4394,call_4402,call_4405,call_4409,var_4410,uop_4421,])
output2 = relay.Tuple([call_4380,const_4384,const_4385,call_4395,call_4403,call_4406,call_4411,var_4410,uop_4423,])
func_4428 = relay.Function([var_4410,], output)
mod['func_4428'] = func_4428
mod = relay.transform.InferType()(mod)
var_4429 = relay.var("var_4429", dtype = "float32", shape = (60, 12))#candidate|4429|(60, 12)|var|float32
output = func_4428(var_4429)
func_4430 = relay.Function([var_4429], output)
mutated_mod['func_4430'] = func_4430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4446 = relay.var("var_4446", dtype = "int32", shape = (16, 8, 4))#candidate|4446|(16, 8, 4)|var|int32
const_4447 = relay.const([[[4,7,-9,2],[9,10,8,9],[3,-5,9,-5],[-8,-1,-7,4],[6,-1,-10,-2],[3,-10,9,-1],[7,1,1,-10],[-5,7,7,5]],[[3,-10,-9,4],[2,4,-3,8],[-2,-7,-7,2],[-10,-5,-2,-10],[-6,-8,1,-8],[-7,-8,7,10],[5,2,4,3],[7,-1,-10,-2]],[[1,5,1,7],[-6,-8,-1,6],[-8,9,4,-8],[-3,10,7,-2],[-3,2,-10,1],[6,-3,-2,6],[-7,3,-6,-4],[7,-2,7,5]],[[-1,-1,-8,9],[6,2,8,5],[2,9,-9,6],[-7,2,-4,-4],[-4,6,-9,-7],[-6,2,-6,1],[7,5,-3,1],[1,5,-10,2]],[[6,-7,4,10],[2,4,-1,5],[5,1,3,1],[5,1,7,-1],[-3,7,-4,-5],[-1,6,6,-7],[3,10,-3,-4],[-8,-6,-10,7]],[[-7,9,5,8],[5,-7,5,-1],[-5,-4,3,-7],[-3,-6,-1,-6],[-1,-10,1,2],[9,-6,-3,-3],[-9,7,7,2],[6,-4,-3,5]],[[-7,10,-10,5],[-10,-6,-9,1],[7,9,1,-5],[9,4,-2,-6],[4,9,6,5],[-7,1,9,-6],[-2,-2,4,2],[9,-5,-4,1]],[[9,-4,-6,-3],[10,-10,7,-7],[1,-6,1,10],[3,-2,-8,-7],[-5,-2,-9,-3],[-8,-8,-9,8],[8,-4,-1,8],[10,4,-3,5]],[[-1,-8,-1,-9],[-5,7,-6,5],[8,-3,-6,4],[-1,5,9,-3],[-6,-3,3,7],[-3,-4,-9,2],[-10,8,-6,-3],[-1,2,-8,-2]],[[-5,3,-1,7],[-3,2,4,9],[1,-10,-10,-5],[-1,2,-9,6],[-3,3,9,7],[-3,-2,-7,10],[8,6,-3,10],[-5,5,-9,7]],[[2,-8,-9,1],[-6,-10,-7,2],[10,-5,8,-9],[10,-6,-9,-2],[2,-9,5,-5],[-6,5,-7,9],[4,2,-9,-2],[9,7,10,6]],[[-9,6,-7,-4],[-8,-6,-5,-2],[-9,10,7,7],[1,-1,-3,-4],[-4,-6,-3,-5],[9,-6,6,-3],[2,3,5,-3],[-5,-7,3,-1]],[[-4,-7,-7,-8],[4,1,9,7],[7,-1,9,9],[10,2,-1,-8],[2,-2,10,5],[1,7,2,-3],[1,3,10,6],[2,-1,3,-6]],[[7,-3,-7,4],[-6,1,-3,9],[10,8,4,8],[-1,6,10,-10],[3,5,-6,9],[-10,-2,-5,-6],[10,3,-7,-9],[1,6,-1,-8]],[[2,4,4,1],[-4,-4,-3,1],[6,9,-4,4],[8,-7,-8,3],[8,-9,-1,-6],[-3,-1,3,-2],[-8,6,1,-9],[2,8,-1,-10]],[[-8,-3,9,-3],[10,-9,-8,3],[1,-9,-9,-1],[-4,-9,-10,4],[-7,-9,4,1],[10,6,2,-5],[9,5,-2,-7],[5,-9,-8,-5]]], dtype = "int32")#candidate|4447|(16, 8, 4)|const|int32
bop_4448 = relay.minimum(var_4446.astype('int32'), relay.reshape(const_4447.astype('int32'), relay.shape_of(var_4446))) # shape=(16, 8, 4)
uop_4451 = relay.asin(bop_4448.astype('float64')) # shape=(16, 8, 4)
output = relay.Tuple([uop_4451,])
output2 = relay.Tuple([uop_4451,])
func_4453 = relay.Function([var_4446,], output)
mod['func_4453'] = func_4453
mod = relay.transform.InferType()(mod)
mutated_mod['func_4453'] = func_4453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4454 = relay.var("var_4454", dtype = "int32", shape = (16, 8, 4))#candidate|4454|(16, 8, 4)|var|int32
func_4453_call = mutated_mod.get_global_var('func_4453')
call_4455 = func_4453_call(var_4454)
output = call_4455
func_4456 = relay.Function([var_4454], output)
mutated_mod['func_4456'] = func_4456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3471_call = mod.get_global_var('func_3471')
func_3473_call = mutated_mod.get_global_var('func_3473')
call_4498 = relay.TupleGetItem(func_3471_call(), 0)
call_4499 = relay.TupleGetItem(func_3473_call(), 0)
output = relay.Tuple([call_4498,])
output2 = relay.Tuple([call_4499,])
func_4501 = relay.Function([], output)
mod['func_4501'] = func_4501
mod = relay.transform.InferType()(mod)
output = func_4501()
func_4502 = relay.Function([], output)
mutated_mod['func_4502'] = func_4502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3634_call = mod.get_global_var('func_3634')
func_3636_call = mutated_mod.get_global_var('func_3636')
call_4519 = func_3634_call()
call_4520 = func_3634_call()
func_2548_call = mod.get_global_var('func_2548')
func_2550_call = mutated_mod.get_global_var('func_2550')
const_4554 = relay.const([-1.216392,5.845088,-7.196261,-1.850998,-2.231393,6.554047,-5.621767,8.184873,-3.875360,-4.051872,-0.393417,4.651479,2.740021,-5.981032,-0.574446,9.790837,8.957867,-0.317340,0.185309,6.979283,-2.378455,-6.394390,-9.583522,-6.010086,-8.450292,6.554985,3.099732,-0.744440,0.061435,-1.532760,-8.904607,-7.771754,-8.837482,7.633128,1.433896,8.072998,-8.541948,5.012359,9.777417,9.041883,-9.021382,3.389171,-7.425767,-2.111681,-6.913109,1.349726,6.418814,-3.525375,-5.480262,0.447009,-5.155870,-3.951999,-9.856868,7.219573,8.553348,1.925819,2.793212,-2.201517,6.636588,7.547115,9.915367,-5.880537,8.466583,-7.513343,8.526866,6.616621,-4.803893,-7.521757,1.101449,3.919432,-5.946121,4.576639,2.590338,3.597362,-0.176903,-2.085554,-0.178396,-4.138408,5.561839,3.169349,4.752869,-6.648889,-7.093276,-1.058167,-0.680148,8.491680,9.016063,-3.445655,-7.053127,9.476869,-4.099450,-7.878776,-7.398243,-0.196650,0.285683,-3.594589,9.146688,-1.436940,3.006997,1.741619,-2.369481,0.174992,3.083438,-4.254383,1.607412,7.524152,2.289035,-2.344759,-7.468108,7.511200,3.889771,-4.310793,-2.963922,-2.672063,-5.643299,9.707495,-3.160033,-8.427670,-5.573729,4.566522,-9.707258,-9.172697,-0.214795,7.863551,6.678648,-3.510191,0.042545,0.708572,-0.677948,8.953254,-3.216662,0.343864,6.658966,-5.184808,9.108785,-2.340169,-7.383886,2.575133,2.330111,-1.816367,-6.766799,8.109901,0.681145,4.256675,5.171190,-5.435365,-0.710994,-3.988867,5.313398,4.394283,0.914254,-6.158055,-3.846483,-5.302035,3.510723,5.625267,-7.241591,5.711221,4.302166,4.235969,9.377238,-8.137559,1.168191,-1.722338,-6.718016,3.722927,8.404904,7.579743,-1.520922,8.452318,-1.795346,3.062620,-2.960568,8.447707,3.119758,-4.862811,-7.761344,-8.082740,4.021303,9.469411,6.509011,7.373122,-4.664845,-1.306827,6.947611,-9.336951,-7.953167,-4.448594,-6.103101,8.070091,-1.782019,4.227869,-8.253834,-2.354174,-6.668274,7.234937,1.021195,-8.647293,-7.547292,-8.326939,-3.366518,5.520460,-2.043807,1.605086,4.962639,-4.328008,-3.974828,2.103626,-2.171666,1.229702,5.610912,-1.912856,8.205681,-1.836783,5.801898,0.186368,-0.455325,0.822367,-1.778291,8.991545,4.959721,5.955934,2.485172,-0.605528,3.105727,-3.751488,2.491582,2.633045,4.961058,-2.383802,-5.172383,3.816371,-8.852488,1.764448,4.613061,2.254728,-9.827879,4.189610,5.262816,8.281447,4.901372,8.400882,-8.957400,2.315044,-7.088977,6.900393,-6.238845,9.875966,7.326304,1.407640,-9.425905,9.573341,-3.829114,-2.248488,-9.131329,-3.523371,-8.578138,-5.773537,-2.940991,-5.718819,0.476260,1.239651,-3.889475,9.998124,0.021761,3.600811,6.293324,-3.878303,7.865439,5.738884,2.864700,3.874464,9.433268,-4.853094,2.601863,-3.768420,-2.005818,-4.734269,3.673706,-5.281357,6.600443,-4.483817,-3.158565,-4.565143,8.204242,-6.467088,6.485338,-3.770664,7.803586,-2.472180,-6.979086,-3.926352,-4.007008,7.540018,-7.625066,-7.395130,2.091034,-6.215746,1.102657,3.910747,-3.564139,4.877452,8.410449,-2.875754,5.936935,-6.591083,9.200849,-7.210874,7.329519,2.417189,-9.461183,0.939325,-6.980151,9.193986,-7.565957,0.272921,-2.832665,-7.046050,-7.338585,4.265717,6.194773,4.113742,-8.806290,-7.054677,-0.562831,1.132064,0.476884,-0.370867,-0.876632,-1.108281,8.011723,0.698326,-7.687336,2.076343,-2.379142,-1.735644,-6.897703,-8.373224,-1.774220,3.557554,7.947012,6.069539,1.102255,-9.640269,2.407944,8.748645,-0.117696,6.815214,-7.966975,-1.888353,5.260190,9.749404,-5.344206,-0.617853,-3.474306,9.856796,-7.672447,5.484848,6.937596,9.023226,-0.018765,3.216498,6.052018,1.775495,0.597007,-2.034168,9.432834,2.434271,1.378062,-9.238439,2.617821,7.244139,-2.084855,3.809695,5.158418,-6.902539,8.731133,-3.420020,-2.268155,8.815349,9.292142,-1.081599,7.327533,0.401611,7.181716,-4.139215,2.936707,-0.879373,-6.322076,1.173557,-1.926662,4.236553,1.308816,-2.872919,-6.264303,-5.673397,1.566210,-7.201702,-4.312613,-8.224750,9.795805,-8.664038,-5.297032,-9.772410,-2.917372,-8.072902,4.033369,6.466759,-0.443084,3.886253,3.676397,-7.141383,-1.188812,1.642276,-9.280614,5.016722,-6.692710,7.491140,-4.223008,-5.562732,8.998360,-2.341756,-0.448675,-9.703382,2.038106,1.235293,7.961672,-9.001699,-0.898740,-3.230286,5.779905,-2.783801,9.500984,-9.802199,5.948394,-1.586624,-1.110711,-3.496353,-9.322774,1.683912,-4.068762,-8.484687,-9.899019,5.782151,-8.145164,-1.262334,8.389509,-5.926011,-3.732048,7.844991,8.228892,-0.327364,-6.238332,-4.789220,1.601192,-4.510418,9.056156,5.295499,1.576489,-3.718881,-2.902752,9.595686,-1.961527,-3.118825,4.875877,-0.643674,-2.227297,-7.199080,9.912243,3.589019,-9.756036,-3.614097,8.535612,1.272520,2.526930,-8.150603,-2.506683,3.981566,3.602465,7.386471,9.482323,9.347621,2.370612,-9.899719,7.864021,4.884431,-1.861080,2.943192,-6.302188,-9.172618,-4.116144,6.232016,9.389488,6.652930,9.035990,2.889462,0.627822,-1.443259,-2.023124,3.971819,-4.068651,7.578688,4.305617,-4.053133,4.150884,1.683843,-5.713726,6.161391,0.878348,-7.422584,6.822787,-1.272778,6.250723,8.250245,7.020513,3.316348,-1.260242,-0.904229,5.732934,8.096097,-9.314849,-6.296330,2.017119,-1.455498,5.406639,1.150545,-7.267605,9.949465,-6.909833,9.435269,5.890633,-9.729671,6.661123,7.594892,1.059570,6.315877,7.924983,-9.035320,1.168115,-3.118705,-2.766783,-4.204636,9.194396,-4.660398,-9.351130,5.494800,-0.107980,7.665515,7.577362,-1.564736,1.917068,-7.640279,0.561413,-2.066971,7.708126,6.444247,-1.664999,-2.017618,3.697317,-9.417551,-8.396264,-2.443728,6.098172,-0.598024,-5.838919,6.889697,-1.113594,1.518691,9.842426,9.447722,-9.974793,-3.721962,-2.534648,-9.931682,1.357732,4.117098,-9.445769,-9.417743,-6.434841,-2.484937,7.836562,-8.197057,1.519765,7.572893,8.958027,9.096694,-6.900603,8.808414,-4.966643,-9.934862,-6.080184,5.659258,2.248867,-7.333333,-7.336939,2.526366,-9.034230,-2.907478,0.569381,-4.584188,-1.095912,-8.068946,4.611398,6.987994,3.555694,8.132691,9.529758,-9.049390,-5.425003,-0.349630,-9.582093,-6.503769,-1.771008,-7.960769,7.191271,-5.677216,6.151330,-0.844892,-2.348824,-5.998421,0.452199,7.860486,8.164004,-0.655939,-8.961632,-0.320061,-0.784428,-4.454804,2.074380,-5.954674,7.194948,-6.335323,2.993121,-1.884613,-2.827024,7.913969,-9.948904,8.188317,-6.136096,-4.764092,-7.005481,1.940076,7.637342,1.350408,3.587313,8.905973,6.641880,7.511529,-9.098060,-9.324126,-3.401311,2.304518,8.637222,-2.243448,-2.775090,-8.871428,-7.063308,2.574470,8.387448,-4.974745,-7.035470,-7.290843,-4.539178,-9.254423,4.950560,7.972856,-9.294821,-4.429612,7.191292,4.250034,9.340348,6.835596,-6.157135,-3.108131,3.497746,-7.618015,-1.221683,8.111690,-3.936277,-4.008117,4.611929,0.613982,-3.123516,2.412787,6.675858,7.490341,-5.242224,-3.893218,8.099921,6.903609,1.040885,-2.558789,-9.569616,-8.110107,2.383003,-3.758128,9.083417,-4.772990,9.212801,1.003495,-2.605415,-0.481118,8.463136,1.305844,7.266897,-6.355376,-1.644760,-0.542248,-4.983676,3.007060,7.974568,-2.913842,-5.062655,-3.929794,-9.741365,-8.793049,-0.530924,-5.045821,5.692004,-8.685504], dtype = "float32")#candidate|4554|(720,)|const|float32
call_4553 = relay.TupleGetItem(func_2548_call(relay.reshape(const_4554.astype('float32'), [60, 12])), 2)
call_4555 = relay.TupleGetItem(func_2550_call(relay.reshape(const_4554.astype('float32'), [60, 12])), 2)
output = relay.Tuple([call_4519,call_4553,const_4554,])
output2 = relay.Tuple([call_4520,call_4555,const_4554,])
func_4556 = relay.Function([], output)
mod['func_4556'] = func_4556
mod = relay.transform.InferType()(mod)
mutated_mod['func_4556'] = func_4556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4556_call = mutated_mod.get_global_var('func_4556')
call_4557 = func_4556_call()
output = call_4557
func_4558 = relay.Function([], output)
mutated_mod['func_4558'] = func_4558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_4571 = relay.TupleGetItem(func_1639_call(), 1)
call_4572 = relay.TupleGetItem(func_1641_call(), 1)
output = call_4571
output2 = call_4572
func_4593 = relay.Function([], output)
mod['func_4593'] = func_4593
mod = relay.transform.InferType()(mod)
output = func_4593()
func_4594 = relay.Function([], output)
mutated_mod['func_4594'] = func_4594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4643 = relay.var("var_4643", dtype = "float32", shape = (1, 1, 11))#candidate|4643|(1, 1, 11)|var|float32
uop_4644 = relay.sin(var_4643.astype('float32')) # shape=(1, 1, 11)
func_1857_call = mod.get_global_var('func_1857')
func_1861_call = mutated_mod.get_global_var('func_1861')
const_4653 = relay.const([6,3,-9,2,6,8,-4,-2,1,5,-8,-3,4,-4,-2,1,-9,2,7,-7,-7,8,6,-6,-8,7,3,-10,-6,7,9,9,-4,5,7,4,-7,-5,-4,9,1,7,6,2,-4,-1,9,-1,1,6,-10,-3,-5,-9,1,-1,4,8,-7,-3,1,6,-3,5,-4,5,-3,2,-1,7,1,-4,-9,-6,-5,9,-4,-10,-1,5,7,-3,2,-10,-6,-3,-8,3,-1,4,-1,-6,8,-4,-2,-8,8,-1,5,-1,10,-10,-5,4,6,-4,8,2,5,-7,-2,7,-4,-2,10,4,9,6,8,10,7,1,-5,3,8,8,-5,-1,3,-2,7,3,-9,-2,1,3,7,3,-8,3,-8,-5,5,-4,9,1,1,4,5,6,-7,3,-2,5,5,-5,8,-8,8,-1,-7,3,-6,-7,-4,-6,10,6,-8,-4,-8,5,-3,-8,4,-7,2,10,-8,3,-10,2,10,3,-8,10,8,-3,10], dtype = "uint64")#candidate|4653|(189,)|const|uint64
call_4652 = relay.TupleGetItem(func_1857_call(relay.reshape(const_4653.astype('uint64'), [7, 9, 3]), relay.reshape(const_4653.astype('uint64'), [7, 9, 3]), ), 2)
call_4654 = relay.TupleGetItem(func_1861_call(relay.reshape(const_4653.astype('uint64'), [7, 9, 3]), relay.reshape(const_4653.astype('uint64'), [7, 9, 3]), ), 2)
bop_4665 = relay.floor_divide(uop_4644.astype('float64'), relay.reshape(var_4643.astype('float64'), relay.shape_of(uop_4644))) # shape=(1, 1, 11)
func_3112_call = mod.get_global_var('func_3112')
func_3115_call = mutated_mod.get_global_var('func_3115')
var_4684 = relay.var("var_4684", dtype = "int32", shape = (1, 336))#candidate|4684|(1, 336)|var|int32
var_4685 = relay.var("var_4685", dtype = "bool", shape = (8, 130))#candidate|4685|(8, 130)|var|bool
call_4683 = relay.TupleGetItem(func_3112_call(relay.reshape(var_4684.astype('int32'), [3, 16, 7]), relay.reshape(var_4685.astype('bool'), [1040,]), ), 0)
call_4686 = relay.TupleGetItem(func_3115_call(relay.reshape(var_4684.astype('int32'), [3, 16, 7]), relay.reshape(var_4685.astype('bool'), [1040,]), ), 0)
output = relay.Tuple([call_4652,const_4653,bop_4665,call_4683,var_4684,var_4685,])
output2 = relay.Tuple([call_4654,const_4653,bop_4665,call_4686,var_4684,var_4685,])
func_4701 = relay.Function([var_4643,var_4684,var_4685,], output)
mod['func_4701'] = func_4701
mod = relay.transform.InferType()(mod)
mutated_mod['func_4701'] = func_4701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4701_call = mutated_mod.get_global_var('func_4701')
var_4703 = relay.var("var_4703", dtype = "float32", shape = (1, 1, 11))#candidate|4703|(1, 1, 11)|var|float32
var_4704 = relay.var("var_4704", dtype = "int32", shape = (1, 336))#candidate|4704|(1, 336)|var|int32
var_4705 = relay.var("var_4705", dtype = "bool", shape = (8, 130))#candidate|4705|(8, 130)|var|bool
call_4702 = func_4701_call(var_4703,var_4704,var_4705,)
output = call_4702
func_4706 = relay.Function([var_4703,var_4704,var_4705,], output)
mutated_mod['func_4706'] = func_4706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4556_call = mod.get_global_var('func_4556')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_4742 = relay.TupleGetItem(func_4556_call(), 2)
call_4743 = relay.TupleGetItem(func_4558_call(), 2)
output = call_4742
output2 = call_4743
func_4744 = relay.Function([], output)
mod['func_4744'] = func_4744
mod = relay.transform.InferType()(mod)
output = func_4744()
func_4745 = relay.Function([], output)
mutated_mod['func_4745'] = func_4745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4234_call = mod.get_global_var('func_4234')
func_4236_call = mutated_mod.get_global_var('func_4236')
call_4820 = func_4234_call()
call_4821 = func_4234_call()
output = call_4820
output2 = call_4821
func_4829 = relay.Function([], output)
mod['func_4829'] = func_4829
mod = relay.transform.InferType()(mod)
mutated_mod['func_4829'] = func_4829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4829_call = mutated_mod.get_global_var('func_4829')
call_4830 = func_4829_call()
output = call_4830
func_4831 = relay.Function([], output)
mutated_mod['func_4831'] = func_4831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2273_call = mutated_mod.get_global_var('func_2273')
call_4933 = func_2271_call()
call_4934 = func_2271_call()
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_4942 = relay.TupleGetItem(func_1558_call(), 0)
call_4943 = relay.TupleGetItem(func_1560_call(), 0)
func_3552_call = mod.get_global_var('func_3552')
func_3554_call = mutated_mod.get_global_var('func_3554')
call_4947 = relay.TupleGetItem(func_3552_call(), 0)
call_4948 = relay.TupleGetItem(func_3554_call(), 0)
output = relay.Tuple([call_4933,call_4942,call_4947,])
output2 = relay.Tuple([call_4934,call_4943,call_4948,])
func_4970 = relay.Function([], output)
mod['func_4970'] = func_4970
mod = relay.transform.InferType()(mod)
mutated_mod['func_4970'] = func_4970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4970_call = mutated_mod.get_global_var('func_4970')
call_4971 = func_4970_call()
output = call_4971
func_4972 = relay.Function([], output)
mutated_mod['func_4972'] = func_4972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4217_call = mod.get_global_var('func_4217')
func_4219_call = mutated_mod.get_global_var('func_4219')
call_4973 = relay.TupleGetItem(func_4217_call(), 0)
call_4974 = relay.TupleGetItem(func_4219_call(), 0)
output = call_4973
output2 = call_4974
func_4985 = relay.Function([], output)
mod['func_4985'] = func_4985
mod = relay.transform.InferType()(mod)
mutated_mod['func_4985'] = func_4985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4985_call = mutated_mod.get_global_var('func_4985')
call_4986 = func_4985_call()
output = call_4986
func_4987 = relay.Function([], output)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4556_call = mod.get_global_var('func_4556')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_4991 = relay.TupleGetItem(func_4556_call(), 1)
call_4992 = relay.TupleGetItem(func_4558_call(), 1)
output = call_4991
output2 = call_4992
func_5023 = relay.Function([], output)
mod['func_5023'] = func_5023
mod = relay.transform.InferType()(mod)
output = func_5023()
func_5024 = relay.Function([], output)
mutated_mod['func_5024'] = func_5024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_5067 = relay.TupleGetItem(func_735_call(), 0)
call_5068 = relay.TupleGetItem(func_736_call(), 0)
func_972_call = mod.get_global_var('func_972')
func_976_call = mutated_mod.get_global_var('func_976')
var_5078 = relay.var("var_5078", dtype = "uint64", shape = ())#candidate|5078|()|var|uint64
const_5079 = relay.const([[2,2,-3,4],[-6,-4,5,-9],[-5,8,-6,3],[6,2,7,-2],[1,-5,-9,-6],[1,-8,-7,-1],[-9,-2,-9,-6],[6,-1,-3,-2],[-9,1,-7,-4]], dtype = "uint64")#candidate|5079|(9, 4)|const|uint64
var_5080 = relay.var("var_5080", dtype = "int64", shape = (396,))#candidate|5080|(396,)|var|int64
call_5077 = relay.TupleGetItem(func_972_call(relay.reshape(var_5078.astype('uint64'), []), relay.reshape(const_5079.astype('uint64'), [6, 6, 1]), relay.reshape(var_5080.astype('int64'), [396,]), ), 3)
call_5081 = relay.TupleGetItem(func_976_call(relay.reshape(var_5078.astype('uint64'), []), relay.reshape(const_5079.astype('uint64'), [6, 6, 1]), relay.reshape(var_5080.astype('int64'), [396,]), ), 3)
output = relay.Tuple([call_5067,call_5077,var_5078,const_5079,var_5080,])
output2 = relay.Tuple([call_5068,call_5081,var_5078,const_5079,var_5080,])
func_5083 = relay.Function([var_5078,var_5080,], output)
mod['func_5083'] = func_5083
mod = relay.transform.InferType()(mod)
mutated_mod['func_5083'] = func_5083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5083_call = mutated_mod.get_global_var('func_5083')
var_5085 = relay.var("var_5085", dtype = "uint64", shape = ())#candidate|5085|()|var|uint64
var_5086 = relay.var("var_5086", dtype = "int64", shape = (396,))#candidate|5086|(396,)|var|int64
call_5084 = func_5083_call(var_5085,var_5086,)
output = call_5084
func_5087 = relay.Function([var_5085,var_5086,], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5126 = relay.var("var_5126", dtype = "int16", shape = (13, 13, 6))#candidate|5126|(13, 13, 6)|var|int16
const_5127 = relay.const([[[-3,-5,10,2,6,-9],[-4,4,10,-7,-2,-3],[-10,-8,1,-3,4,9],[-1,-6,-9,-7,-3,-4],[10,-7,6,5,-2,10],[-2,-8,-2,-10,10,-1],[-10,-1,-3,3,-8,6],[-2,-9,5,-8,4,-3],[2,9,-9,10,-3,10],[6,1,-6,8,-7,2],[6,-9,5,5,5,-1],[4,-4,2,3,9,-4],[1,1,-8,-2,-3,3]],[[4,5,-1,6,8,4],[-3,-2,3,7,9,-3],[-3,1,9,3,-3,-3],[-5,-4,8,-6,5,3],[-5,3,2,-1,3,10],[10,-3,4,-9,-4,3],[-1,3,9,3,10,-8],[-1,7,4,6,-5,-7],[7,-7,9,5,2,-5],[5,5,-5,10,-3,-2],[8,-1,6,-1,5,4],[-9,5,6,-2,-1,8],[9,4,7,-1,3,-6]],[[-1,4,5,2,-8,7],[9,6,-4,6,6,-7],[7,8,9,2,10,-8],[5,-3,8,-6,-7,9],[-1,-7,6,-10,2,-6],[1,-3,-4,-8,-2,2],[10,9,2,-9,4,2],[7,-6,7,10,-7,-8],[5,-10,8,-8,-9,6],[-6,6,8,-1,-7,6],[8,3,10,-6,9,1],[-5,-6,6,6,6,4],[-10,-2,4,3,3,-7]],[[7,-7,1,-6,7,-1],[-5,-8,10,6,9,-9],[6,-6,7,-4,-1,1],[-1,8,-10,-2,7,7],[-2,-9,10,7,-1,-5],[-8,-3,1,1,-2,9],[-10,-8,-1,-6,5,-5],[5,-9,6,-5,4,-5],[1,-7,5,-4,9,1],[6,-6,-5,5,4,8],[-1,-4,10,-10,-3,5],[-4,-4,2,4,5,8],[2,1,9,-4,4,-5]],[[-5,-7,-3,8,-1,2],[-10,-1,8,-6,-5,4],[8,-6,6,-9,6,9],[8,9,-2,5,7,8],[7,6,10,-8,8,3],[5,2,9,3,3,-9],[2,8,3,-5,-7,-4],[10,5,6,-1,9,-2],[-9,6,-6,-6,2,-6],[-9,7,5,-2,3,-5],[5,-10,3,3,-7,-3],[-7,-9,-6,-5,-9,10],[-4,-9,10,-8,9,-9]],[[9,6,4,-9,10,-9],[-3,1,9,-6,-4,9],[-8,-8,4,1,1,1],[7,-6,6,-5,-2,-4],[8,3,4,5,-9,-9],[10,8,5,7,-9,-1],[8,7,2,10,-9,3],[5,5,1,-10,-2,-2],[-10,-9,10,6,-7,10],[4,1,-5,9,2,-7],[-6,4,7,-4,-5,-8],[4,4,6,-1,8,-4],[-8,-4,-6,5,-9,-7]],[[7,5,-6,-8,6,-2],[-8,3,-6,-6,1,-7],[2,-9,3,9,-7,1],[-5,4,10,4,-10,1],[-7,10,-10,4,-9,5],[9,1,6,1,-2,5],[-2,10,-7,6,10,1],[-3,4,-8,-5,10,-6],[9,-10,-2,-2,3,6],[5,-5,10,-6,2,6],[-8,-10,-8,-5,-2,7],[-1,10,-3,5,2,4],[7,-6,10,1,-4,6]],[[-5,-8,-7,3,-6,-1],[3,8,7,7,1,-5],[5,1,-6,1,8,-8],[-6,5,8,-10,4,-6],[1,-7,5,5,7,-1],[-3,-4,-4,7,7,-10],[10,6,10,-4,-3,5],[-4,-10,-6,-4,5,-1],[-4,7,-4,8,10,5],[6,-3,2,-1,-8,-7],[-3,-7,-1,-7,1,-8],[-4,-7,10,4,-1,7],[3,-10,-8,-9,-8,-9]],[[-5,5,4,-8,-10,1],[-7,8,-10,-1,-2,5],[-8,10,1,8,-8,1],[-8,10,-4,-10,6,10],[2,10,-4,3,-1,9],[-2,7,2,4,9,-8],[7,-5,-7,-8,6,-4],[-2,4,9,5,-10,3],[-2,-2,3,5,9,10],[7,-6,5,-3,4,-10],[1,-4,2,5,-6,-7],[6,-8,6,-10,7,3],[-5,-9,-6,-1,8,9]],[[3,-6,-10,10,6,2],[8,-2,9,9,6,2],[10,-8,-9,8,1,-2],[6,-9,-10,4,-3,6],[-6,6,4,-3,-9,3],[-9,9,5,-5,3,-3],[4,-2,-8,1,-3,5],[4,2,-2,-3,-7,5],[6,-3,3,-2,7,-6],[-2,8,-7,-5,-4,6],[5,9,6,4,-3,10],[6,4,6,8,-10,-7],[1,8,10,-1,7,-7]],[[-5,4,-9,-3,6,8],[-9,2,-5,6,3,-3],[-8,-8,-6,8,7,7],[-6,-10,-10,-6,5,10],[-7,7,-10,2,5,-5],[-8,-10,4,-8,-10,5],[-9,2,-9,5,9,-7],[-2,-7,3,-6,4,4],[5,-10,-2,-6,-6,-4],[-3,2,-1,-10,-9,10],[10,3,-3,-4,10,-5],[9,-3,2,-9,-8,-6],[1,4,5,-4,-1,1]],[[-3,-2,8,-5,-1,-1],[8,5,-2,-5,-8,-7],[-2,-10,-7,6,-7,-2],[8,-2,-6,9,5,-9],[6,2,-2,9,-9,6],[-1,5,-3,-2,4,9],[9,5,-5,-10,8,-6],[-2,-4,-3,6,-5,3],[10,10,-1,6,-10,-1],[7,5,-5,6,6,-8],[-10,-5,7,-4,5,-3],[-4,4,1,-8,-9,4],[6,1,7,10,-4,-6]],[[-5,10,-4,-6,-1,2],[-8,-10,5,-2,1,-2],[-5,-10,9,1,-6,-6],[1,9,-2,6,3,-6],[-10,-9,4,-3,-4,-7],[9,-9,-7,5,6,-2],[5,10,-5,-6,7,-8],[-5,-7,6,-3,9,9],[-6,-6,8,-3,-7,1],[-9,7,-2,-4,-9,-7],[-4,9,-2,-1,-5,-3],[6,-6,-6,7,5,1],[2,-6,6,-6,-6,6]]], dtype = "int16")#candidate|5127|(13, 13, 6)|const|int16
bop_5128 = relay.logical_xor(var_5126.astype('int16'), relay.reshape(const_5127.astype('int16'), relay.shape_of(var_5126))) # shape=(13, 13, 6)
uop_5138 = relay.asin(bop_5128.astype('float32')) # shape=(13, 13, 6)
output = relay.Tuple([uop_5138,])
output2 = relay.Tuple([uop_5138,])
func_5144 = relay.Function([var_5126,], output)
mod['func_5144'] = func_5144
mod = relay.transform.InferType()(mod)
var_5145 = relay.var("var_5145", dtype = "int16", shape = (13, 13, 6))#candidate|5145|(13, 13, 6)|var|int16
output = func_5144(var_5145)
func_5146 = relay.Function([var_5145], output)
mutated_mod['func_5146'] = func_5146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mod.get_global_var('func_2031')
func_2032_call = mutated_mod.get_global_var('func_2032')
call_5235 = relay.TupleGetItem(func_2031_call(), 0)
call_5236 = relay.TupleGetItem(func_2032_call(), 0)
output = call_5235
output2 = call_5236
func_5266 = relay.Function([], output)
mod['func_5266'] = func_5266
mod = relay.transform.InferType()(mod)
mutated_mod['func_5266'] = func_5266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5266_call = mutated_mod.get_global_var('func_5266')
call_5267 = func_5266_call()
output = call_5267
func_5268 = relay.Function([], output)
mutated_mod['func_5268'] = func_5268
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5279 = relay.const([[[-2.047052,6.633526,-7.226786,0.051869,6.492760,3.812309,9.222200,8.784419,-8.042740,-1.702392,5.215144],[-8.230223,9.189397,8.400974,-0.964729,-6.092461,1.648009,-2.074582,-5.326762,-4.128525,-2.667101,-5.840690],[-1.755457,3.780790,-1.489454,6.663128,-4.755536,8.775974,6.490364,-8.840619,0.267251,-6.158504,7.790091],[-6.152344,-4.754451,1.776140,-0.966673,-0.221505,2.726841,3.050215,6.451675,4.405920,-1.655715,5.876410],[8.200325,-5.397129,5.149271,2.405271,1.379812,-1.885593,-3.285115,-3.632574,7.099095,8.201161,-5.043866],[-8.975238,5.545619,3.620189,9.952576,3.619465,-9.812137,2.687749,-8.262961,-6.304694,2.326538,4.923810],[-2.989543,-7.879212,9.101934,-9.876885,8.256415,9.089045,-7.010041,-1.462039,-6.582497,-9.423638,4.136928],[-5.748947,-6.111234,5.534845,9.366082,9.939912,-6.725650,-7.052531,-7.366973,0.327176,7.024071,-1.893315],[5.129689,8.330622,4.379573,0.909596,-8.302200,-5.052237,-4.490441,-2.808709,5.058230,-3.689579,2.669086],[7.049144,8.438047,1.759846,2.975361,1.871477,2.056014,-5.766596,-6.654430,4.282578,7.204803,-2.862965],[-7.324651,-7.486291,-9.070125,4.942518,9.092454,2.152104,-6.859427,8.254335,1.671108,-9.656083,-6.775953]],[[2.254193,-9.578470,0.541046,-4.647235,-2.938796,-0.512401,-1.130521,3.850020,-7.992047,-5.110195,9.845495],[9.247447,4.814650,1.248275,2.869733,-9.157177,9.801747,9.539760,7.036780,-7.084644,-5.687721,-9.872005],[2.447098,6.085630,-1.944066,-4.152949,-1.294646,-7.830469,-4.107910,5.580091,1.093508,-2.833923,9.373581],[7.144978,7.033214,-1.643547,-9.651620,6.725558,-3.636997,-7.939858,-3.437696,-4.093466,-9.764913,-6.574649],[5.627613,-2.390686,-0.647576,6.026544,-3.039365,-6.542835,-6.213744,-0.577206,0.759041,-9.099493,-1.106621],[-8.904909,5.731991,5.125202,8.146102,-5.882062,9.974962,-1.131349,3.764947,0.937284,-0.027134,-3.029916],[-2.568555,-3.500074,-7.064101,3.843243,4.683258,2.140762,1.756213,-4.698172,0.610822,6.851356,5.868572],[-2.893234,6.409095,-3.113211,4.716124,-4.334284,1.433121,6.574708,5.670028,-0.109613,-0.905774,-2.944229],[-3.970048,-9.560433,9.853873,8.407209,2.514247,-2.674938,8.267441,4.701596,2.830129,0.130221,-7.578692],[-8.412180,0.963994,-6.749544,-8.476047,1.016460,8.338272,-8.065479,5.347578,3.531729,2.049332,6.464836],[-3.512283,0.487905,-1.583428,3.928500,2.576932,3.634213,-5.539915,-0.332319,-3.667674,-6.350169,-6.727142]],[[-9.803067,-1.619307,-4.560833,6.733710,-1.874896,-7.937118,7.704269,-8.174662,6.320671,-0.096440,6.016238],[-7.325325,-2.150127,1.262452,-8.455395,0.173055,-7.748194,-1.008009,-8.622679,-8.096556,-9.069755,-7.458906],[-9.791999,-6.416118,0.459037,-7.614464,7.566200,-1.302629,2.740673,-3.905864,6.508111,-3.695218,4.824404],[5.660948,7.712434,4.383018,-1.172684,9.528984,-4.234538,2.408273,5.706329,-0.856636,-8.581383,-2.370891],[8.078790,-0.009766,-6.467308,-1.223739,1.999109,5.255630,9.480185,-2.306921,1.380795,-4.838610,0.206073],[6.808567,6.693405,-1.724998,-1.884436,1.894617,0.227798,0.892875,6.765034,-5.065027,7.664322,6.508018],[-0.737302,-3.081574,6.196935,8.219672,-3.918541,7.119700,5.391446,-9.059938,-3.209255,8.992042,0.927524],[-3.953178,-3.229730,6.598448,-3.832064,-2.282357,0.032841,-7.859319,-7.214385,4.251648,-6.888570,-2.555242],[-7.168608,-8.374491,6.241247,3.835334,-4.228388,2.894894,-9.272390,-2.067883,2.467109,4.773253,0.717125],[8.097235,6.174917,4.171383,-2.022426,8.974174,-7.237976,5.055794,8.433882,-0.774577,-7.818339,-1.209751],[-2.920528,-7.780981,-9.623326,-3.877293,5.193481,1.509178,6.830889,1.617624,-1.753786,-7.486754,-5.004001]],[[-9.965329,-9.962469,7.937091,-8.883439,6.801651,-2.068217,-7.431308,4.486802,-3.134050,8.552935,-2.369775],[-4.083405,-0.383530,-2.314789,1.383519,-7.129695,5.099488,-4.565356,-1.692299,-5.081943,-1.997223,6.840041],[7.304838,3.673930,0.590037,3.320726,9.654227,4.250396,5.062513,7.540185,-5.266576,-4.282303,-4.991951],[-9.831963,-7.527505,2.076525,0.344714,7.434455,1.855770,8.974152,4.675005,-5.791562,-1.126665,-9.528818],[-3.523489,8.601228,-4.030073,-1.139023,-3.468117,8.764393,0.142965,9.834861,4.028854,-6.560314,-5.040763],[4.333270,-0.847479,-5.910748,-8.549557,-6.724652,-6.195881,7.236945,-8.049372,-7.764847,2.191793,2.414098],[-3.272637,3.572760,5.609002,-6.439700,6.850573,-0.971880,-5.069946,2.543429,9.926715,9.128174,9.520061],[-8.472058,-4.404697,-9.529857,-9.163539,-7.125566,1.830648,-2.261308,2.632111,-1.034093,5.947523,0.842008],[1.160757,-0.643258,-4.374015,8.486201,-1.701677,8.992203,-1.209205,-2.863715,7.140378,2.931284,7.511750],[-6.473132,-6.108373,3.358436,1.462565,7.236801,1.303393,9.340693,2.688772,8.444001,1.335106,-0.686446],[4.790897,-9.639235,-7.417783,4.018002,-4.426198,-3.185003,-5.888745,-2.840513,-7.384412,-3.146745,7.826465]],[[-9.617583,-9.180398,-3.406958,-1.152326,9.130248,-0.791673,6.082841,5.453868,-2.464386,-5.151383,6.611721],[-4.400666,-9.602306,8.498866,3.662219,-0.569344,-0.025742,0.587655,-0.829759,4.156518,5.239017,-5.193778],[-6.848033,9.816185,4.665732,-3.722125,-4.432067,-9.736312,1.010818,-7.860091,-3.517060,-3.881879,7.788078],[5.188287,-2.038785,-3.059458,-9.661823,-8.158572,-9.926991,7.651763,3.894210,-2.190793,4.644905,-4.692229],[8.950692,1.439114,5.170693,-9.047466,9.599868,8.934394,-6.989859,-9.838308,-7.630960,-2.347438,-8.102380],[-6.881260,4.955155,-2.081751,3.122285,5.568207,5.088247,-5.074683,9.915908,3.043633,-4.704339,-5.013581],[-1.237621,-1.123564,7.919910,-4.027095,-4.303593,6.391889,6.865155,-4.819038,-2.500738,0.978170,-1.474993],[-6.572653,-6.273245,2.754663,-4.362112,-9.222810,-0.956506,5.276355,9.737166,0.952886,-1.229971,2.165323],[-3.635906,-1.909159,1.664590,-9.847521,6.050162,2.976954,4.446646,3.786289,-5.475645,-5.154413,-4.311447],[-4.112674,8.062066,0.411461,-1.392305,-4.384526,1.398816,9.962984,-9.804347,-6.950512,1.092803,-2.706180],[-6.330704,-7.451396,7.100804,5.281993,4.405236,1.346608,-6.735573,-3.253237,5.281344,8.022703,-7.814851]],[[7.314744,3.663456,-1.994138,-0.715087,8.739168,-1.681829,7.462557,-9.588169,0.437143,1.025478,0.189717],[-3.923355,-8.699249,-1.405465,-4.712524,9.205330,6.977112,5.005202,0.044562,-5.728043,4.442245,-9.431261],[-2.232923,8.497164,-8.807479,-1.346478,-6.078939,-0.507191,-5.583967,9.440771,1.362114,9.368897,4.588881],[-7.159706,-7.301189,4.218032,-9.817435,-1.492215,-5.590320,-7.985148,-9.115057,-1.938781,4.289156,-5.138447],[9.196193,-3.107982,-6.439574,-5.671301,9.150400,-6.358609,6.581875,4.195307,3.813590,8.514589,2.664322],[5.211108,-6.999284,7.978298,-8.355693,-0.257816,4.160974,-0.859773,-7.191080,8.516857,3.588445,8.916107],[3.957445,-8.366882,-7.408326,-1.356870,-6.051647,-9.136233,-9.848886,-0.912332,7.679619,-1.020430,-7.328522],[-0.510922,6.358676,-6.593914,9.084779,-6.671778,-3.266104,6.589628,-2.044247,-2.062656,3.661916,8.263968],[-7.970871,-7.886348,-2.825447,-7.977519,9.622861,2.658455,-5.584319,-7.083730,4.446236,-8.310307,3.148819],[3.940895,-4.565366,-0.043314,-5.438743,8.953577,-1.104161,-9.706496,-7.136443,0.259075,2.176065,2.287083],[-4.646109,9.725475,-9.320497,7.459815,0.843663,3.180832,-0.702087,-3.758507,1.499029,-1.818486,3.198266]],[[3.018791,1.856886,-1.769252,9.820090,9.169072,4.555821,-8.201190,-2.731832,5.391159,-0.884508,5.858199],[3.297005,1.205535,6.857283,-9.882994,-4.848645,0.940930,-5.319258,-0.512179,9.355927,7.962952,-6.866831],[-8.677311,7.215613,-6.094821,-5.272314,-7.671852,3.302063,-9.225363,4.126083,-3.546080,-1.368818,-5.320570],[3.711202,4.777945,-7.106318,2.717716,-7.029519,0.328148,8.479860,2.283341,-7.551691,6.815018,3.730384],[-0.284050,-0.636274,-9.358856,-9.755062,3.815444,8.341037,-5.483109,7.827730,-2.839548,4.467791,2.089882],[6.610675,-8.450815,5.419944,-9.673800,-1.542959,2.282016,3.785139,8.405706,-0.273972,3.123701,2.759013],[9.025417,5.671690,-0.180173,-7.457521,7.067474,-3.352119,0.131161,-4.713412,-3.310405,-7.735082,5.716647],[3.286859,-1.408460,-2.816088,5.595291,5.955447,-6.732800,-0.814366,-6.422005,1.096357,7.067858,9.687704],[8.194074,-4.729526,-3.950304,5.596038,-1.103627,7.315577,2.167387,-3.903600,7.845089,4.248160,-4.905806],[7.463829,-1.174749,-6.177311,-4.396539,-7.597621,4.627623,-1.697868,-1.709929,-9.589341,-2.811594,0.061962],[9.630928,9.241481,9.040268,-9.066628,-1.562600,-7.615229,-2.617199,-6.986448,4.968412,-3.447330,1.729825]],[[-0.730128,1.107026,-5.974102,-0.185128,6.696162,7.683439,2.895807,3.288650,-6.239549,1.329224,0.096738],[-1.603934,-5.053925,-1.951600,-4.443396,0.533476,7.024599,7.575376,7.089480,0.914589,0.618574,9.357654],[-9.414907,0.640286,-4.393875,6.269158,-3.687191,-1.621034,9.160067,-7.329895,-1.389201,5.728552,-3.405743],[-8.710937,-0.997494,-3.385112,-1.924528,-8.217543,-6.473850,-9.219628,-3.272704,-0.527114,6.047896,-6.196411],[-0.502973,-8.922536,-0.579039,-7.495687,0.293349,-0.906324,6.430859,3.502942,-9.526251,-7.684562,6.775664],[-5.247083,-0.152374,7.885673,5.235930,4.234256,-1.836263,-3.362172,4.865075,5.405892,5.243758,-1.352446],[-0.110574,3.491366,-2.378442,4.175792,-3.345844,2.354729,4.587077,-4.761014,-1.281659,-8.272864,2.573283],[-7.253412,8.505403,7.075830,6.118413,6.026184,-6.141511,8.972460,-2.383816,-7.756786,-4.784470,-0.180935],[-7.849792,-6.896825,-6.277600,3.796020,5.771880,-2.586484,6.188229,-4.376406,9.335054,-9.548431,-4.906863],[-8.936282,3.346070,5.743649,0.254268,2.384776,-7.245776,-1.251516,-0.283308,-7.174748,3.629740,-9.969956],[1.953833,-1.758490,4.072854,-4.739876,-9.617424,-8.913769,8.953700,1.882944,1.923976,5.402566,-6.426461]],[[-1.533906,9.894852,-5.894474,9.341355,-9.156041,4.162864,-9.592799,1.080238,-2.867479,0.376051,6.571264],[-4.512873,7.118653,3.348978,4.631998,9.145979,-2.419695,7.955549,6.894024,-9.384551,0.259336,-6.581462],[-4.247171,-0.713304,3.261085,3.016375,-1.830968,3.787137,-9.963538,-7.853539,-7.815560,2.619602,3.496141],[-4.570384,-0.442756,-2.456230,-6.586813,2.403499,-1.615093,-1.540762,2.257939,6.206037,3.115401,-8.749029],[6.271937,-8.646992,-0.455087,9.264991,-7.113419,-0.382085,-4.477285,-9.192368,-6.766510,5.574301,7.195231],[-5.795996,3.178041,-8.645948,0.014147,-4.957394,-2.719473,-6.198407,4.195746,-5.218465,3.683855,-2.535015],[3.882620,2.356254,-7.954562,-7.880380,-1.699587,-6.055735,-7.019595,-3.688263,9.527954,8.645451,3.428205],[-9.632837,8.727005,-5.518456,-0.679202,-9.897395,7.215039,1.184428,-2.166824,9.414151,-1.810973,-1.655794],[6.408452,-6.546993,-8.538123,-1.555815,-8.506021,-4.252910,5.749422,-8.683679,0.410873,0.488603,-8.204978],[-5.560186,-7.821878,1.293309,6.921452,-8.403736,7.713635,-9.859478,-0.087868,8.013608,0.100369,-4.668439],[1.025929,-8.102747,5.934920,0.265212,-6.527688,-8.551303,-0.915730,-3.978096,3.213533,-8.689172,5.921923]],[[-3.766511,3.947324,-0.442927,7.798655,5.068591,-6.682154,4.340009,4.616288,3.155690,-8.896050,-7.806683],[-1.512733,6.465398,5.034738,-6.020238,-7.956056,-9.951730,-4.163528,-8.834091,2.261995,-8.836274,-3.130465],[0.086554,3.035308,4.145201,-4.336024,-3.754098,-0.365828,4.440857,1.204911,0.319825,-4.606824,9.358439],[-5.577721,6.714005,6.840904,9.765449,7.233894,5.249330,-2.665515,1.097624,-4.390023,3.896679,9.926018],[7.662735,-8.460460,-5.073909,-7.967116,2.519032,2.343968,5.834956,7.525420,-8.553882,3.877184,5.833895],[5.492399,1.006637,-4.370029,-2.230261,5.133399,-4.099410,-9.675377,-4.701091,-0.788897,-3.942259,-5.165364],[-2.874746,-2.523207,0.031784,-2.139957,6.042163,9.470641,1.965747,8.134310,8.898896,9.394257,-1.456077],[-4.160720,1.540798,1.944833,-3.968265,9.392750,2.754588,-2.671457,9.012905,5.046395,-7.810338,8.635344],[-3.321075,0.975833,5.799336,8.751214,1.657107,8.323299,-3.492886,-3.572786,-5.069698,6.599818,2.240477],[-6.461519,-7.668590,-9.486474,-6.039863,-8.008588,-2.835748,-6.015293,5.793958,-0.275477,2.241856,7.062170],[-0.158163,3.311497,5.431231,-3.247198,-5.258198,7.649419,-2.864008,1.315122,-1.436397,5.450670,8.255983]],[[-3.357700,9.009690,6.514281,-4.344461,-4.481605,-4.765272,-2.798689,-1.597795,3.473047,3.499869,6.956819],[-5.621444,3.062646,-1.477736,8.014718,-2.547059,-5.329303,-6.900166,0.989893,-4.171805,2.519548,5.999689],[-4.688174,-9.252513,-2.433781,0.695488,2.919388,-8.039013,-2.078716,2.386117,-4.180166,8.573615,8.772412],[6.361520,6.447947,-7.809586,-8.453268,-8.205750,6.024753,-2.252226,-7.850893,9.598758,4.307032,-7.250660],[0.585240,-7.839763,-5.349257,-5.176877,7.238563,-9.322247,-2.583990,-9.710017,-6.274833,8.752004,0.447340],[1.303643,7.445759,-4.478770,-4.950122,-8.367714,-7.188674,6.926943,3.623748,0.337498,9.135417,6.727157],[-0.434031,4.901231,-5.416117,9.773250,-9.379114,7.467179,4.343963,0.990261,2.389921,6.783111,-2.846259],[-5.429883,4.197634,-1.879147,3.504290,-8.655062,8.765782,-5.977709,-4.309993,-8.666262,-8.299480,8.072808],[2.578887,8.021085,-8.785492,-7.724503,0.788811,-3.604679,-2.310100,-7.318093,-9.132867,-6.832831,-4.608145],[3.171135,-9.305014,2.919143,-7.344011,-9.740674,7.889343,-8.468912,6.545333,-8.768674,7.411182,1.489951],[-6.726408,2.999330,-4.415871,-5.138043,-6.952884,2.637787,1.805016,1.677592,9.590852,6.948788,8.076316]],[[4.719837,7.705884,5.840460,-6.252148,-8.685166,-9.495583,-5.700811,2.510671,1.710498,-8.847796,-5.585407],[-4.362046,6.841129,-2.683226,-1.128280,-1.992592,-2.086664,-3.005127,-3.558126,-4.605411,1.963176,-1.613780],[4.981315,-3.035769,5.600627,6.482406,6.111941,5.178861,-7.493123,3.902553,8.572282,-4.489202,7.258414],[-2.343747,8.081158,2.396655,1.994557,-4.376733,0.797565,-0.388653,-7.591813,5.257234,7.707547,-5.368497],[-0.948699,-8.189041,-7.296620,9.339085,7.888155,2.151883,-0.872363,0.067889,2.299395,-8.263964,5.649937],[4.006201,-7.892513,6.509126,-4.951178,5.014740,4.483683,-3.301667,-4.518697,-0.472117,5.148522,0.582804],[-3.831528,-1.915550,-8.681035,-7.619114,5.078698,4.611258,-1.765811,8.401231,9.197162,5.181211,-8.056230],[-9.552807,1.977869,2.515076,-2.084843,-3.107668,8.647735,-5.375436,4.362441,1.874879,5.543302,9.155787],[0.235694,-6.332210,2.083836,-8.653269,9.594870,0.438235,2.752036,-1.401372,1.328734,-6.531360,9.902320],[-5.748936,5.183549,5.348278,5.389848,4.773981,7.072525,9.813187,9.458173,-6.250480,-3.380152,-4.756892],[-0.302709,6.423880,1.497378,5.866457,8.858311,-2.069257,4.809577,0.945111,-3.682851,-8.163887,-4.349233]],[[-9.260835,4.981936,-2.234097,-3.331094,6.408941,8.142339,-7.736218,-2.011085,5.310398,-8.918468,-5.771976],[6.309335,-5.240386,-9.071332,2.037475,-6.757023,4.451763,0.882509,5.381287,-9.259977,-9.046734,9.049264],[-2.961737,-8.539503,2.173218,4.192472,3.752063,1.924662,-9.328043,-7.123255,-8.609648,-8.995471,-4.563247],[-8.195611,7.604783,-0.514749,-3.521164,3.535352,4.429011,2.354641,-1.800761,-6.408358,3.390010,3.259169],[-1.802011,-7.679979,-2.045551,-4.800943,-0.297588,-5.510702,0.091562,8.305633,-1.836492,-8.480988,4.257709],[9.577047,2.925557,7.143080,9.185692,-6.421492,-4.918512,8.837914,2.689849,5.897742,-8.305239,-8.965119],[-0.196576,6.400246,-0.735022,-8.145699,1.471543,6.472648,5.846774,-8.860307,6.126548,-6.930841,8.074200],[-0.788130,3.966004,-9.292717,1.938711,7.259603,-9.471627,-3.712715,1.158001,-3.556083,-2.205582,3.380288],[-7.527607,4.628792,-0.883470,1.267610,1.993847,7.332306,4.668106,-0.070810,-4.795682,-6.578990,-1.313953],[2.192377,1.245623,9.760201,0.801197,-9.741251,-2.335375,6.793015,6.944215,-1.493193,-0.695230,-3.030369],[0.309119,-5.056924,-7.341030,-2.337178,0.353404,-6.850794,-0.400117,9.044476,-5.044558,3.864543,5.960199]],[[-2.855862,-4.873303,4.386839,-9.364854,-0.289752,-0.170455,4.049912,-3.584877,9.746671,4.007055,-9.664082],[1.349078,0.275350,3.542023,-6.889952,4.117012,-9.315923,4.423906,-4.273405,0.051856,8.203226,4.351823],[-7.640210,9.505843,6.625293,-1.955232,-3.168318,6.015965,1.432160,-1.057630,1.267636,-9.989741,3.493245],[9.616706,4.364613,9.620285,-9.774065,8.015207,-3.315162,1.303042,8.338784,0.209070,4.934048,9.788554],[-2.514652,9.238861,1.543255,2.859056,3.074515,-9.013270,4.145525,-2.537314,-6.636453,-8.802306,-3.796152],[5.187062,5.248791,2.190694,0.103925,-6.310494,-7.102154,-1.281724,7.576772,1.852506,-6.649266,-2.483894],[3.979045,-3.568507,-4.118345,-7.547726,-3.896359,9.647837,-8.961612,-4.237248,7.665375,9.166985,-2.881368],[-0.196509,5.322283,5.871671,5.104529,6.904547,-4.625962,7.057158,1.895335,9.432542,9.744753,7.224642],[2.986226,5.280794,-1.999930,-6.821821,-8.059699,8.325559,-2.227301,-7.476522,-5.328176,-8.786728,7.913482],[9.780766,7.722379,-4.288924,2.412085,2.315862,1.124915,-1.962538,4.343270,7.712185,8.665279,-3.901909],[3.314161,9.282954,-5.007290,-6.883880,9.186602,-2.411250,-9.327865,3.850929,7.885627,-7.696666,-4.277573]],[[-0.574721,2.973911,3.314940,-8.772915,5.567636,-4.520046,9.677751,-2.094471,-4.379069,-9.886295,3.815385],[8.997273,-4.319080,0.437891,-9.978198,4.905132,1.017116,-2.609232,5.173958,-9.634588,-3.360113,-2.982234],[-2.654826,3.356224,-4.535710,6.183083,-0.058833,7.356893,7.191958,7.846497,-3.581742,3.205487,7.171518],[-9.926490,-7.466365,4.647764,-0.429087,8.381769,3.415015,1.383200,-7.174950,9.089826,-4.613813,1.925523],[2.530253,5.144928,-6.349459,6.867874,-0.847795,-5.882589,9.727943,4.837589,9.119714,-6.859189,4.260546],[6.448518,-8.828278,-4.059321,9.195521,6.643211,-9.446397,-8.085055,1.531762,-4.775221,3.315968,-3.891202],[0.765096,-6.730662,-3.748965,3.062167,6.456487,9.798794,1.011589,-5.447873,-0.810567,1.363918,-7.858747],[9.206657,0.314355,3.505896,-6.177956,4.922715,5.820043,0.003486,-7.544499,4.471894,1.174225,-5.920837],[-6.585652,3.687244,-2.989692,9.148828,-2.243922,-1.451724,-3.939923,-5.777637,4.844504,-7.216153,-0.884740],[5.143277,-4.009970,-2.992400,8.144779,-0.410525,1.236824,-6.163421,-2.254807,-5.745588,-8.391373,6.273078],[-9.012833,-2.926183,9.626684,-5.098061,-7.953077,5.940619,-1.516426,-3.548653,-2.282014,8.365209,-0.872070]],[[2.014675,7.323409,5.188359,-5.392464,-8.348548,-7.199416,-6.123897,-3.291559,5.071054,-3.302153,5.618198],[-1.491717,6.271324,4.603457,-9.649935,-5.810896,-0.769236,8.458017,-4.194581,-3.637303,-7.211126,4.446765],[3.192365,7.436495,-5.852861,8.574091,-1.135170,8.163782,-1.114052,-4.312211,-9.168154,-6.177155,-9.848662],[-8.084091,6.367863,-0.309821,2.596150,-9.902440,5.515002,-3.472847,-9.430078,9.591315,2.391065,-0.752473],[5.921056,3.555185,8.570021,4.564028,2.262975,-1.901236,-8.115198,0.207382,-1.261988,-1.116563,7.092623],[6.178988,-4.753538,2.171128,7.008030,6.655224,-2.837070,-3.186967,-4.911046,-2.641423,5.804687,-9.717995],[7.488443,-6.862022,-0.397503,0.656112,3.894179,3.358551,8.085917,1.098524,-2.043415,-3.696079,5.361048],[-7.655973,-4.029014,-1.126918,-0.769526,0.712536,-5.233856,6.492522,4.817746,-9.798967,-4.488165,-3.982722],[-1.442774,-0.266323,7.892706,-4.619129,-5.880319,-7.029915,0.874799,-8.518508,-3.526235,1.447498,2.514605],[3.162458,2.085736,3.367933,6.430986,5.695697,-8.359604,-0.408931,-3.011032,-6.406514,0.561236,6.308385],[6.723359,-4.800992,-2.060290,-7.443259,7.546006,-2.491872,-9.450324,-4.841263,3.446723,9.181979,3.170727]]], dtype = "float64")#candidate|5279|(16, 11, 11)|const|float64
uop_5280 = relay.tan(const_5279.astype('float64')) # shape=(16, 11, 11)
func_3226_call = mod.get_global_var('func_3226')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_5283 = relay.TupleGetItem(func_3226_call(), 0)
call_5284 = relay.TupleGetItem(func_3228_call(), 0)
output = relay.Tuple([uop_5280,call_5283,])
output2 = relay.Tuple([uop_5280,call_5284,])
func_5298 = relay.Function([], output)
mod['func_5298'] = func_5298
mod = relay.transform.InferType()(mod)
output = func_5298()
func_5299 = relay.Function([], output)
mutated_mod['func_5299'] = func_5299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2720_call = mod.get_global_var('func_2720')
func_2722_call = mutated_mod.get_global_var('func_2722')
call_5345 = relay.TupleGetItem(func_2720_call(), 3)
call_5346 = relay.TupleGetItem(func_2722_call(), 3)
func_3502_call = mod.get_global_var('func_3502')
func_3503_call = mutated_mod.get_global_var('func_3503')
call_5349 = relay.TupleGetItem(func_3502_call(), 0)
call_5350 = relay.TupleGetItem(func_3503_call(), 0)
func_3634_call = mod.get_global_var('func_3634')
func_3636_call = mutated_mod.get_global_var('func_3636')
call_5351 = func_3634_call()
call_5352 = func_3634_call()
uop_5355 = relay.acosh(call_5349.astype('float32')) # shape=(189,)
uop_5357 = relay.acosh(call_5350.astype('float32')) # shape=(189,)
bop_5359 = relay.subtract(uop_5355.astype('float64'), relay.reshape(call_5349.astype('float64'), relay.shape_of(uop_5355))) # shape=(189,)
bop_5362 = relay.subtract(uop_5357.astype('float64'), relay.reshape(call_5350.astype('float64'), relay.shape_of(uop_5357))) # shape=(189,)
output = relay.Tuple([call_5345,call_5351,bop_5359,])
output2 = relay.Tuple([call_5346,call_5352,bop_5362,])
func_5363 = relay.Function([], output)
mod['func_5363'] = func_5363
mod = relay.transform.InferType()(mod)
output = func_5363()
func_5364 = relay.Function([], output)
mutated_mod['func_5364'] = func_5364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mod.get_global_var('func_3226')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_5368 = relay.TupleGetItem(func_3226_call(), 3)
call_5369 = relay.TupleGetItem(func_3228_call(), 3)
func_1361_call = mod.get_global_var('func_1361')
func_1364_call = mutated_mod.get_global_var('func_1364')
var_5389 = relay.var("var_5389", dtype = "bool", shape = (1040,))#candidate|5389|(1040,)|var|bool
call_5388 = relay.TupleGetItem(func_1361_call(relay.reshape(var_5389.astype('bool'), [13, 5, 16])), 3)
call_5390 = relay.TupleGetItem(func_1364_call(relay.reshape(var_5389.astype('bool'), [13, 5, 16])), 3)
var_5396 = relay.var("var_5396", dtype = "float64", shape = (7, 9, 3))#candidate|5396|(7, 9, 3)|var|float64
bop_5397 = relay.bitwise_and(call_5368.astype('uint64'), relay.reshape(var_5396.astype('uint64'), relay.shape_of(call_5368))) # shape=(7, 9, 3)
bop_5400 = relay.bitwise_and(call_5369.astype('uint64'), relay.reshape(var_5396.astype('uint64'), relay.shape_of(call_5369))) # shape=(7, 9, 3)
output = relay.Tuple([call_5388,var_5389,bop_5397,])
output2 = relay.Tuple([call_5390,var_5389,bop_5400,])
func_5404 = relay.Function([var_5389,var_5396,], output)
mod['func_5404'] = func_5404
mod = relay.transform.InferType()(mod)
var_5405 = relay.var("var_5405", dtype = "bool", shape = (1040,))#candidate|5405|(1040,)|var|bool
var_5406 = relay.var("var_5406", dtype = "float64", shape = (7, 9, 3))#candidate|5406|(7, 9, 3)|var|float64
output = func_5404(var_5405,var_5406,)
func_5407 = relay.Function([var_5405,var_5406,], output)
mutated_mod['func_5407'] = func_5407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1407_call = mod.get_global_var('func_1407')
func_1409_call = mutated_mod.get_global_var('func_1409')
call_5432 = relay.TupleGetItem(func_1407_call(), 1)
call_5433 = relay.TupleGetItem(func_1409_call(), 1)
output = relay.Tuple([call_5432,])
output2 = relay.Tuple([call_5433,])
func_5434 = relay.Function([], output)
mod['func_5434'] = func_5434
mod = relay.transform.InferType()(mod)
output = func_5434()
func_5435 = relay.Function([], output)
mutated_mod['func_5435'] = func_5435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5484 = relay.var("var_5484", dtype = "float64", shape = (5, 16, 10))#candidate|5484|(5, 16, 10)|var|float64
uop_5485 = relay.sigmoid(var_5484.astype('float64')) # shape=(5, 16, 10)
func_811_call = mod.get_global_var('func_811')
func_814_call = mutated_mod.get_global_var('func_814')
var_5495 = relay.var("var_5495", dtype = "float32", shape = (144, 1))#candidate|5495|(144, 1)|var|float32
const_5496 = relay.const([[-9],[6],[-10],[3],[4],[6],[6],[-3],[10],[5],[-10],[-9],[-4],[5],[2],[6],[-10],[5],[5],[-7],[-5],[9],[7],[-10],[-10],[4],[-7],[6],[4],[1],[7],[-9],[4],[-8],[-1],[-6],[-10],[-10],[8],[3],[-5],[8],[10],[1],[-3],[3],[-2],[8],[8],[4],[3],[-8],[6],[-1],[5],[10],[2],[2],[-2],[-7],[-5],[-7],[-3],[-4],[-1],[10],[6],[-8],[-7],[-7],[-4],[4],[7],[-8],[-7],[3],[5],[1],[-3],[9],[-1],[7],[-1],[4],[-3],[-10],[-9],[2],[10],[-2],[5],[3],[5],[10],[-8],[3],[9],[1],[-6],[-8],[5],[7],[4],[-8],[9],[3],[7],[-6],[9],[4]], dtype = "uint32")#candidate|5496|(110, 1)|const|uint32
call_5494 = relay.TupleGetItem(func_811_call(relay.reshape(var_5495.astype('float32'), [1, 16, 9]), relay.reshape(const_5496.astype('uint32'), [22, 5]), ), 0)
call_5497 = relay.TupleGetItem(func_814_call(relay.reshape(var_5495.astype('float32'), [1, 16, 9]), relay.reshape(const_5496.astype('uint32'), [22, 5]), ), 0)
func_2588_call = mod.get_global_var('func_2588')
func_2590_call = mutated_mod.get_global_var('func_2590')
const_5502 = relay.const([6.081055,2.858924,-2.910566,9.016111,-4.317015,-3.672682,-8.556649,1.435328,9.715477,-7.713735,2.204219,9.868230,-4.317988,-6.894622,3.507539,-2.193849,5.319572,7.527312,-1.565710,2.416854,7.460071,1.489645,-1.916437,9.212303,-0.877671,-9.469287,7.422014,-9.334933,6.979559,8.593351,-0.399934,8.659611,7.083630,9.948853,9.664407,-5.291062,7.795341,-1.557440,-7.035157,6.571755,-6.173481,-3.157846,8.891075,8.213242,7.486286,5.331009,0.027412,-9.049533,-8.790129,-7.321383,-1.715780,-0.020680,7.958150,-6.858067,-0.607148,-0.017901,5.774230,-8.481435,5.210556,3.262001,-7.575965,5.679918,5.421718,4.967399,2.920787,7.674584,-4.799825,2.425628,6.761839,-3.896897,-5.884644,-6.381777,4.581655,-8.722827,-7.426923,-0.007887,5.526524,-4.937870,2.184692,-0.642264,-0.857845,-9.666813,4.453900,-2.102327,7.864463,3.081113,3.632886,3.856383,-9.509262,-6.588102,1.153480,-0.157855,-1.458652,2.683321,-3.591666,-6.483764,-0.806619,3.931105,1.598756,-6.732010,-7.486969,-8.828392,0.220352,5.998813,8.759844,-1.248767,-2.327292,4.356823,-6.101045,-5.871919,-1.881134,1.029680,3.390252,4.719661,-6.140789,-1.100568,1.536367,-1.542702,-7.449398,-6.382567,7.794076,8.625541,9.381109,-5.276822,8.445241,-5.162403,-9.274508,-2.289923,7.840829,-5.813622,5.688125,-7.328832,9.381838,2.704467,-2.418895,7.308761,4.203819,3.570223,-1.411824,-0.901409,-0.317541,5.092434,-9.166423,8.792224,9.572061,6.903749,-9.154910,3.929047,-5.569561,3.062698,4.860594,4.825365,8.049373,7.003357,-4.927484,-9.602098,4.616642,5.771475,3.862422,6.944430,-6.478862,-6.670349,-0.014935,-1.251925,-9.319339,-9.823289,4.957418,-1.750937,-7.778118,-1.317193,2.413689,-8.211269,-5.166330,-7.438608,-4.693642,4.822227,-6.017581,0.987796,0.315635,-2.958783,6.050348,6.839266,-4.972923,-2.556226,-1.479969,4.360962,7.009123,-3.166434,-6.358301,2.460035,-1.579898,3.421103,-4.300064,2.580394,3.360219,-9.359267,-9.718125,2.662026,3.748845,-1.301754,-5.199539,-7.546193,2.008960,6.879670,3.929250,-6.746450,2.973822,7.221237,-3.041050,-3.356566,-8.488598,-5.964509,-8.965472,8.070340,0.095434,1.551977,2.302481,3.012686,-5.623062,-7.244122,-5.003134,4.730281,7.051855,9.368380,-8.060738,1.192559,-8.417536,4.362882,1.605830,4.234157,-6.920810,-5.427064,-9.398702,-4.182520,-9.973597,-0.182884,0.488423,1.411537,-4.131869,-5.698511,-5.990522,4.643244,-9.324274,7.353040,1.369865,-8.696269,-9.365025,-3.042988,3.430964,5.076354,6.330948,-9.110930,-5.434228,3.600914,-9.865760,5.099983,3.947953,-9.059187,2.257254,7.599143,-0.598324,9.390267,-5.907162,3.476271,-4.760064,-7.552510,-1.543108,5.381953,-4.146317,-2.611521,-7.969417,1.466322,-4.047138,2.434361,9.897698,2.628777,9.186200,-2.437404,-8.203548,6.180807,2.097646,-2.892335,-1.937481,-9.041614,2.701829,6.956114,-6.181549,3.425722,-2.472572,-6.243019,-8.824790,4.567532,-1.087837,3.786797,9.995553,-1.344477,-8.040057,6.524300,-1.271218,1.392260,-4.366673,2.068621,9.629725,5.170309,-4.829149,-8.750505,4.504497,-0.867934,3.828687,-2.016624,-5.044798,7.339892,-3.346364,0.788533,-6.600285,-7.290923,6.740724,6.195428,-1.006782,8.207844,1.694970,4.419275,4.076547,-7.836602,-0.995595,-3.035677,6.382378,5.783574,-6.391018,-7.840443,-0.378775,5.991284,7.143227,-0.321547,1.897684,-1.874055,3.927132,-1.547441,7.792441,-9.005270,5.565009,-7.437000,-1.582493,-0.131558,-6.379458,-0.853981,3.638924,-0.700019,-0.463247,6.718292,-5.242179,-6.376507,7.062947,9.396439,-0.995323,-9.032298,-9.879985,-4.133857,3.627104,5.067103,-3.861962,-7.426131,2.350123,-6.980862,7.552477,6.695336,2.148657,-5.035783,-1.000696,6.519122,3.605162,3.699090,-0.539275,-2.303047,-7.822430,3.223233,1.443707,6.129629,-8.696828,9.822160,5.026437,-7.307432,-8.493561,6.035918,-5.759637,0.450589,2.873231,7.123911,1.539111,7.127689,2.025439,-6.813369,-7.180584,3.975572,5.146363,-1.055138,0.471598,3.137088,9.052646,6.686307,2.935538,4.073879,8.371156,-8.659236,2.301242,-7.137628,-5.426322,8.864592,-4.671781,3.257128,2.769655,-2.499674,-0.238743,4.040210,0.151020,6.043262,9.267421,4.630944,6.092594,8.089221,0.946315,2.919061,-9.829957,-3.279716,2.285517,-6.304762,7.966576,-4.187124,-9.034746,-0.480464,-5.662853,-1.873383,-4.786616,-8.534974,4.801478,-9.796926,7.102810,-5.502492,3.632605,9.796134,8.445451,2.639657,-4.107504,-3.552981,1.104768,-7.811591,3.717469,-6.538570,-1.525624,1.995846,-4.760710,-1.415995,-7.712180,-2.953524,1.561624,-6.310016,5.856427,-4.282632,1.767290,5.523816,7.946284,-2.075505,-0.003878,-1.802175,3.662641,6.676275,-8.042838,-2.809296,-8.113044,-8.560492,-0.002791,-5.174383,-9.179021,7.280931,-1.829493,4.514388,7.367973,-5.390154,-8.262294,-6.634130,-3.437546,6.035961,-3.035432,1.250598,-4.609762,-5.350153,9.869897,9.710537,4.988430,6.716792,1.078247,8.922754,7.110159,-9.884889,1.587189,1.110374,-0.142477,-2.392674,-2.328697,-0.777895,7.891875,8.657196,7.547412,-3.143728], dtype = "float64")#candidate|5502|(504,)|const|float64
call_5501 = relay.TupleGetItem(func_2588_call(relay.reshape(const_5502.astype('float64'), [12, 14, 3])), 0)
call_5503 = relay.TupleGetItem(func_2590_call(relay.reshape(const_5502.astype('float64'), [12, 14, 3])), 0)
output = relay.Tuple([uop_5485,call_5494,var_5495,const_5496,call_5501,const_5502,])
output2 = relay.Tuple([uop_5485,call_5497,var_5495,const_5496,call_5503,const_5502,])
func_5504 = relay.Function([var_5484,var_5495,], output)
mod['func_5504'] = func_5504
mod = relay.transform.InferType()(mod)
var_5505 = relay.var("var_5505", dtype = "float64", shape = (5, 16, 10))#candidate|5505|(5, 16, 10)|var|float64
var_5506 = relay.var("var_5506", dtype = "float32", shape = (144, 1))#candidate|5506|(144, 1)|var|float32
output = func_5504(var_5505,var_5506,)
func_5507 = relay.Function([var_5505,var_5506,], output)
mutated_mod['func_5507'] = func_5507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2273_call = mutated_mod.get_global_var('func_2273')
call_5520 = func_2271_call()
call_5521 = func_2271_call()
func_5266_call = mod.get_global_var('func_5266')
func_5268_call = mutated_mod.get_global_var('func_5268')
call_5578 = func_5266_call()
call_5579 = func_5266_call()
func_4970_call = mod.get_global_var('func_4970')
func_4972_call = mutated_mod.get_global_var('func_4972')
call_5580 = relay.TupleGetItem(func_4970_call(), 1)
call_5581 = relay.TupleGetItem(func_4972_call(), 1)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_5585 = relay.TupleGetItem(func_1558_call(), 2)
call_5586 = relay.TupleGetItem(func_1560_call(), 2)
output = relay.Tuple([call_5520,call_5578,call_5580,call_5585,])
output2 = relay.Tuple([call_5521,call_5579,call_5581,call_5586,])
func_5593 = relay.Function([], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
output = func_5593()
func_5594 = relay.Function([], output)
mutated_mod['func_5594'] = func_5594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3461_call = mod.get_global_var('func_3461')
func_3462_call = mutated_mod.get_global_var('func_3462')
call_5647 = func_3461_call()
call_5648 = func_3461_call()
output = call_5647
output2 = call_5648
func_5655 = relay.Function([], output)
mod['func_5655'] = func_5655
mod = relay.transform.InferType()(mod)
output = func_5655()
func_5656 = relay.Function([], output)
mutated_mod['func_5656'] = func_5656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4744_call = mod.get_global_var('func_4744')
func_4745_call = mutated_mod.get_global_var('func_4745')
call_5682 = func_4744_call()
call_5683 = func_4744_call()
func_3888_call = mod.get_global_var('func_3888')
func_3891_call = mutated_mod.get_global_var('func_3891')
const_5692 = relay.const([4.060223,-9.642097,-5.910794,7.967048,-4.540453,7.405232,-4.962978,-8.471252,4.563962,-6.389194,-9.136779,5.870626,7.520774,1.500343,-0.991738,-6.473450,8.544111,6.481430,-5.394142,-9.954242,-1.094363,6.030166,0.414630,-6.727939,-1.226605,3.548320,-1.610350,-5.021308,8.335488,-3.301506,-0.625221,-1.397765,6.643394,5.104816,-6.738012,4.327971,3.466187,4.368308,-3.932437,7.063796,2.204170,7.516611,0.837383,1.748806,8.385898,-7.967885,-8.736684,7.826932,-3.051710,3.616456,9.770119,-1.086445,-4.208106,1.461995,5.070307,6.475898,-5.702042,-2.108274,-7.364588,-9.392505,6.474129,9.035817,4.469819,-7.211998,2.151005,1.529297,-3.722412,6.061277,1.056707,7.908840,-1.254094,5.775618,-9.354551,-4.655541,8.229970,-1.018737,-0.508239,6.159437,8.412004,8.511683,0.442332,1.329974,-7.120404,-2.654293,1.894541,3.489413,9.258579,-2.857219,-2.383027,-4.244319,-5.199478,8.636931,4.352028,-7.561696,-9.837170,8.115445,-6.846527,5.278403,-8.335908,8.088118,8.824972,8.724202,6.676305,-0.957227,-9.794737,-2.454750,-8.615017,8.539235,-9.238681,-9.688862,-0.009253,-6.524434,-2.198507,9.324829,-6.513941,-0.470522,8.338712,-7.941820,-9.887448,5.455168,2.677887,7.476821,0.455675,3.330551,-2.399799,-4.572550,-7.049377,-0.520328,-7.296370,7.720049,-7.470832,-3.530358,7.409391,-7.202283,-4.193127,-8.212504,0.263309,3.779928,7.833588,-7.858027,-8.306192,-9.716141,-1.821324,8.016394,-0.116650,5.039182,-2.034421,8.338277,-3.391399,6.275937,5.670647,-3.038443,2.164043,4.653673,9.536812,9.857242,-5.410654,-6.362986,-9.695622,9.530889,-0.619503,4.807610,-4.899772,-8.716894,-9.777900,0.230745,3.257618,2.679892,2.227175,3.638594,-7.293075,-0.743853,-2.856344,4.144541,-5.609981,-1.047208,9.035383,-5.760625,-9.214633,-3.289900,-9.762583,-7.638872,-6.794231,1.965638,-8.047666,-7.082587,9.229687,1.608010,1.779153,-2.914039,6.841620,-1.817679,-6.164226,-5.370753,4.672604,9.047894,7.844653,6.136494,2.440383,5.872434,-8.238600,7.257286,1.594655,3.500460,9.920175,-9.383734,-7.340283,-0.354154,7.769527,3.500604,9.238436,5.830688,-3.553169,-8.381754,5.422913,2.859353,0.453488,1.948963,2.653553,0.836401,-9.089915,9.638800,-6.442858,4.435911,5.409550,-1.337117,2.325643,6.579947,3.650433,-7.128365,4.485524,-9.651915,-0.761897,1.405179,-9.402075,-5.781624,3.415686,-6.590582,3.377103,2.787502,-6.083943,-3.101400,6.049811,-8.294075,3.006687,1.508687,-9.685514,-6.737290,7.974983,7.664778,-5.754893,-9.080529,8.812203,-9.136535,-8.931091,9.300567,6.635177,9.601274,1.924165,7.110919,-8.992461,-5.974571,-3.595612,7.070516,-8.953063,-8.707163,-7.142083,-9.263640,8.964391,5.386027,2.933855,-8.909931,-4.743497,0.596711,5.753272,-6.656430,-6.092574,9.457131,9.557340,-4.941591,6.330848,2.876666,-9.799896,1.763333,-6.828401,2.335851,-5.731167,-8.253429,8.796018,-6.480024,4.246357,-9.886816,5.838922,-0.954373,-9.702550,9.532921,8.516747,-5.236453,-6.660625,9.406058,-4.371204,-1.131848,0.496643,8.234329,9.288889,7.916255,-3.551508,-4.914918,9.832316,7.664025,1.623883,4.332130,9.577234,-2.524111,-6.406814,-4.546244,9.475150,9.498830,7.611056,4.273992], dtype = "float32")#candidate|5692|(320,)|const|float32
call_5691 = func_3888_call(relay.reshape(const_5692.astype('float32'), [16, 2, 10]), relay.reshape(const_5692.astype('float32'), [16, 2, 10]), )
call_5693 = func_3888_call(relay.reshape(const_5692.astype('float32'), [16, 2, 10]), relay.reshape(const_5692.astype('float32'), [16, 2, 10]), )
output = relay.Tuple([call_5682,call_5691,const_5692,])
output2 = relay.Tuple([call_5683,call_5693,const_5692,])
func_5722 = relay.Function([], output)
mod['func_5722'] = func_5722
mod = relay.transform.InferType()(mod)
mutated_mod['func_5722'] = func_5722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5722_call = mutated_mod.get_global_var('func_5722')
call_5723 = func_5722_call()
output = call_5723
func_5724 = relay.Function([], output)
mutated_mod['func_5724'] = func_5724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_5725 = func_2842_call()
call_5726 = func_2842_call()
func_915_call = mod.get_global_var('func_915')
func_918_call = mutated_mod.get_global_var('func_918')
const_5731 = relay.const([-3,-1,-2,4,2,5,8,7,10,-5,-2,7,10,-8,5,6,6,7,-4,8,-6,10,-7,-9,3,-5,5,-3,-1,1,-2,-8,-6,-10,5,-8,9,6,5,4,-9,2,-8,10,-8,9,-8,10,-9,4,-8,-4,-8,-4,6,-10,-6,-9,-9,-6,-10,9,-2,-1,1,5,-8,6,-9,-1,-8,-8,-5,-1,-5,-3,3,-2,1,6,-1,-1,9,-6,-8,1,-8,-2,-7,-9,-1,-7,4,-7,-5,9,3,-2,7,-1,5,-1,-3,7,-6,-4,9,-9,-3,10,-1,-3,-10,7,4,-2,-1,1,-4,6,5,6,3,8,2,-5,8,-9,2,-6,3,-5,-1,-10,7,6,8,-5,-7,-9,3,-4,-10,9,-9,8,5,8,-2,-4,4,10,-3,-3,7,9,-5,-1,6,-9,-9,8,-10,1,-5,-10,4,-1,4,7,-9,3,1,-1,6,-3,6,-8,-8,-10,-3,-1,10,-5,-9,6,-1,2,-5,-1,2,5,-7,-6,-3,9,-9,-4,-6,1,-3,1,-8,-8,-5,-5,4,5,-2,-10,9,2,2,5,4,3,-7,-3,-9,-9,9,1,3,-7,-9,1,-6,4,-6,8,-6,-9,-5,-9,3,-1,9,6,-10,-6,-9,4,9,-5,-8,-7,4,-9,-10,5,6,6,8,9,4,-4,4,10,8,8,-10,2,5,-5,10,10,6,3,-7,-3,-8,6,6,5,3,10,2,-1,3,-4,6,1,10,-9,8,10,6,10,-3,-8,10,-2,-9,-1,-9,-9,9,-8,-6,7,-6,10,4,5,-4,-4,10,9,8,-6,-5,3,-5,-4,-7,-6,2,8,5,1,-8,-4,-10,-10,2,-5,-10,-10,9,-9,9,-1,9,-4,5,-4,10,-1,-2,9,8,-1,-2,5,-7,8,-8,-6,10,-3,-9,8,-8,10,-2,4,-2,-10,7,4,2,1,-2,-10,1,7,-10,-7,-4,8,5,7,8,2,7,-1,-9,-10,1,1,-1,10,-3,-2,8,-4,4,2,1,7,-9,6,1,9,3,-4], dtype = "int64")#candidate|5731|(396,)|const|int64
call_5730 = func_915_call(relay.reshape(const_5731.astype('int64'), [6, 6, 11]), relay.reshape(const_5731.astype('int64'), [6, 6, 11]), )
call_5732 = func_915_call(relay.reshape(const_5731.astype('int64'), [6, 6, 11]), relay.reshape(const_5731.astype('int64'), [6, 6, 11]), )
func_2588_call = mod.get_global_var('func_2588')
func_2590_call = mutated_mod.get_global_var('func_2590')
var_5736 = relay.var("var_5736", dtype = "float64", shape = (504, 1))#candidate|5736|(504, 1)|var|float64
call_5735 = relay.TupleGetItem(func_2588_call(relay.reshape(var_5736.astype('float64'), [12, 14, 3])), 0)
call_5737 = relay.TupleGetItem(func_2590_call(relay.reshape(var_5736.astype('float64'), [12, 14, 3])), 0)
bop_5743 = relay.maximum(var_5736.astype('int32'), relay.reshape(call_5735.astype('int32'), relay.shape_of(var_5736))) # shape=(504, 1)
bop_5746 = relay.maximum(var_5736.astype('int32'), relay.reshape(call_5737.astype('int32'), relay.shape_of(var_5736))) # shape=(504, 1)
func_3855_call = mod.get_global_var('func_3855')
func_3856_call = mutated_mod.get_global_var('func_3856')
call_5747 = relay.TupleGetItem(func_3855_call(), 0)
call_5748 = relay.TupleGetItem(func_3856_call(), 0)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_5757 = relay.TupleGetItem(func_735_call(), 0)
call_5758 = relay.TupleGetItem(func_736_call(), 0)
var_5764 = relay.var("var_5764", dtype = "int32", shape = (504, 13))#candidate|5764|(504, 13)|var|int32
bop_5765 = relay.equal(bop_5743.astype('bool'), var_5764.astype('bool')) # shape=(504, 13)
bop_5768 = relay.equal(bop_5746.astype('bool'), var_5764.astype('bool')) # shape=(504, 13)
func_3031_call = mod.get_global_var('func_3031')
func_3035_call = mutated_mod.get_global_var('func_3035')
const_5780 = relay.const([5,9,5,-5,7,1,-5,-4,-8,-3,-9,-2,-5,10,2,-1,-5,-9,2,-5,1,2,10,-4,-7,1,9,10,6,5], dtype = "int16")#candidate|5780|(30,)|const|int16
const_5781 = relay.const([[6,5],[8,-3],[1,9],[-1,-2],[10,-10],[-1,5],[9,-9],[-4,4],[-4,-9],[10,-1],[1,8],[4,10],[-3,2],[-3,-7],[1,-9],[-3,-8],[-1,-1],[6,-1],[-4,1],[-2,-4],[1,-8],[-3,5],[10,-2],[6,-2],[-4,9],[5,-10],[-10,6],[2,-6],[6,-7],[8,6],[7,-3],[-5,-1],[5,2],[9,-10],[-3,-10],[6,7],[-1,-4],[6,7],[5,6],[4,-2],[7,-1],[-6,-5],[7,3],[5,-7],[4,-5],[1,-6],[3,-8],[-1,-6],[-4,5],[7,-10],[-9,-8],[-5,-1],[8,3],[-2,-8],[1,4],[6,-10],[-6,-4],[-9,7],[-9,2],[-2,7]], dtype = "int16")#candidate|5781|(60, 2)|const|int16
const_5782 = relay.const([-1,-7,9,-5,-9,2,3,6,-5,4,-3,-9,-9,10,-2,3,7,2,-9,-1,-8,-8,3,10,9,9,7,6,8,-9,8,-4,4,-3,3,-1,-6,-1,3,8,5,3,-5,5,5,-6,10,8,-7,6,4,10,8,-9,-5,4,-4,10,-6,-7,-3,-1,-4,-6,1,-3,-1,3,6,-4,-8,-1,-5,-6,-9,1,-5,-2,3,-1,10,-9,5,-4,-3,4,-7,8,7,5,6,-6,8,9,6,8,-4,-8,-9,1,-1,5,-9,9,8,10,8,4,-3,-9,-5,-6,-2,-7,7,2,3,5,2,-8,8,4,-7,3,-5,1,-1,-8,-1,3,5,5,5,-1,-4,9,10,-9,4,-9,8,9,-4,2,4,-3,-1,8,-10,4,2,5,9,-1,10,3,7,-7,1,-8,3,3,-2,1,-1,-6,-2,-7,9,-5,-7,6,2,-6,-1,5,8,9,10,1], dtype = "int16")#candidate|5782|(180,)|const|int16
call_5779 = relay.TupleGetItem(func_3031_call(relay.reshape(const_5780.astype('int16'), [15, 1, 2]), relay.reshape(const_5781.astype('int16'), [15, 4, 2]), relay.reshape(const_5782.astype('int16'), [15, 6, 2]), ), 2)
call_5783 = relay.TupleGetItem(func_3035_call(relay.reshape(const_5780.astype('int16'), [15, 1, 2]), relay.reshape(const_5781.astype('int16'), [15, 4, 2]), relay.reshape(const_5782.astype('int16'), [15, 6, 2]), ), 2)
var_5792 = relay.var("var_5792", dtype = "int8", shape = (12, 14, 3))#candidate|5792|(12, 14, 3)|var|int8
bop_5793 = relay.floor_divide(call_5735.astype('float32'), relay.reshape(var_5792.astype('float32'), relay.shape_of(call_5735))) # shape=(12, 14, 3)
bop_5796 = relay.floor_divide(call_5737.astype('float32'), relay.reshape(var_5792.astype('float32'), relay.shape_of(call_5737))) # shape=(12, 14, 3)
bop_5813 = relay.less(var_5736.astype('bool'), relay.reshape(bop_5743.astype('bool'), relay.shape_of(var_5736))) # shape=(504, 1)
bop_5816 = relay.less(var_5736.astype('bool'), relay.reshape(bop_5746.astype('bool'), relay.shape_of(var_5736))) # shape=(504, 1)
output = relay.Tuple([call_5725,call_5730,const_5731,call_5747,call_5757,bop_5765,call_5779,const_5780,const_5781,const_5782,bop_5793,bop_5813,])
output2 = relay.Tuple([call_5726,call_5732,const_5731,call_5748,call_5758,bop_5768,call_5783,const_5780,const_5781,const_5782,bop_5796,bop_5816,])
func_5821 = relay.Function([var_5736,var_5764,var_5792,], output)
mod['func_5821'] = func_5821
mod = relay.transform.InferType()(mod)
var_5822 = relay.var("var_5822", dtype = "float64", shape = (504, 1))#candidate|5822|(504, 1)|var|float64
var_5823 = relay.var("var_5823", dtype = "int32", shape = (504, 13))#candidate|5823|(504, 13)|var|int32
var_5824 = relay.var("var_5824", dtype = "int8", shape = (12, 14, 3))#candidate|5824|(12, 14, 3)|var|int8
output = func_5821(var_5822,var_5823,var_5824,)
func_5825 = relay.Function([var_5822,var_5823,var_5824,], output)
mutated_mod['func_5825'] = func_5825
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5911 = relay.const([[[-1.259238],[-9.187751],[8.733715],[-6.631834],[1.468231],[-5.795423],[-5.606172],[-9.436311],[-3.852549],[-0.694081],[-5.795725],[0.796290]],[[-6.367284],[9.854754],[5.981199],[8.210699],[3.266610],[5.650070],[0.702406],[-3.433986],[6.897898],[-8.533106],[-5.292114],[6.309382]],[[1.754201],[8.641017],[9.780760],[3.907501],[7.819212],[4.032088],[-4.949962],[-1.920768],[-8.370088],[-1.063055],[-2.469301],[-6.469202]],[[9.131408],[7.851063],[6.160949],[-3.960156],[-3.283034],[-2.271468],[-4.582579],[1.263944],[8.471564],[-7.166015],[7.707529],[2.520647]],[[9.807789],[-2.790086],[2.841282],[3.289875],[1.380700],[-7.674553],[8.654507],[-4.552015],[-2.518014],[5.288584],[-8.402562],[-9.579590]],[[-6.888790],[7.592323],[-4.059678],[4.390694],[-6.630930],[8.695184],[2.174464],[2.747360],[5.401499],[1.816296],[-1.933849],[5.930940]],[[6.948245],[-9.664385],[3.779285],[1.316734],[9.984860],[-1.236732],[2.009063],[3.987430],[3.874139],[6.279851],[1.147264],[5.770009]],[[-8.030496],[-7.851135],[-4.929352],[-0.219285],[-9.055484],[-7.864581],[5.405644],[0.743735],[-4.495549],[-1.409888],[-9.516793],[-0.044854]],[[-8.356631],[-3.948159],[-5.233121],[3.590417],[-2.640754],[9.898689],[4.834903],[-0.186140],[-1.046604],[4.605477],[-9.234274],[6.619729]],[[-3.847759],[7.308130],[1.360733],[-4.738785],[4.288692],[-0.264729],[0.590017],[8.026091],[9.084112],[-7.159304],[-5.281928],[-8.566198]],[[3.952345],[-3.976760],[3.002274],[6.970121],[-1.143196],[-3.353114],[-5.849624],[1.838926],[5.964277],[2.639759],[4.507525],[-1.140221]]], dtype = "float32")#candidate|5911|(11, 12, 1)|const|float32
uop_5912 = relay.log10(const_5911.astype('float32')) # shape=(11, 12, 1)
bop_5920 = relay.minimum(uop_5912.astype('int8'), relay.reshape(const_5911.astype('int8'), relay.shape_of(uop_5912))) # shape=(11, 12, 1)
output = relay.Tuple([bop_5920,])
output2 = relay.Tuple([bop_5920,])
func_5923 = relay.Function([], output)
mod['func_5923'] = func_5923
mod = relay.transform.InferType()(mod)
mutated_mod['func_5923'] = func_5923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5923_call = mutated_mod.get_global_var('func_5923')
call_5924 = func_5923_call()
output = call_5924
func_5925 = relay.Function([], output)
mutated_mod['func_5925'] = func_5925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5434_call = mod.get_global_var('func_5434')
func_5435_call = mutated_mod.get_global_var('func_5435')
call_5928 = relay.TupleGetItem(func_5434_call(), 0)
call_5929 = relay.TupleGetItem(func_5435_call(), 0)
func_2206_call = mod.get_global_var('func_2206')
func_2208_call = mutated_mod.get_global_var('func_2208')
var_5937 = relay.var("var_5937", dtype = "bool", shape = (208,))#candidate|5937|(208,)|var|bool
call_5936 = func_2206_call(relay.reshape(var_5937.astype('bool'), [8, 2, 13]))
call_5938 = func_2206_call(relay.reshape(var_5937.astype('bool'), [8, 2, 13]))
output = relay.Tuple([call_5928,call_5936,var_5937,])
output2 = relay.Tuple([call_5929,call_5938,var_5937,])
func_5939 = relay.Function([var_5937,], output)
mod['func_5939'] = func_5939
mod = relay.transform.InferType()(mod)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5940 = relay.var("var_5940", dtype = "bool", shape = (208,))#candidate|5940|(208,)|var|bool
func_5939_call = mutated_mod.get_global_var('func_5939')
call_5941 = func_5939_call(var_5940)
output = call_5941
func_5942 = relay.Function([var_5940], output)
mutated_mod['func_5942'] = func_5942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4829_call = mod.get_global_var('func_4829')
func_4831_call = mutated_mod.get_global_var('func_4831')
call_6026 = func_4829_call()
call_6027 = func_4829_call()
func_972_call = mod.get_global_var('func_972')
func_976_call = mutated_mod.get_global_var('func_976')
var_6040 = relay.var("var_6040", dtype = "uint64", shape = ())#candidate|6040|()|var|uint64
const_6041 = relay.const([[-4,4,-2,8,5,2],[-2,5,-4,10,1,-2],[-4,3,-6,8,5,-7],[6,6,3,-1,-7,-6],[3,2,-10,4,5,7],[-6,3,-6,-2,-6,-4],[-8,-5,-1,4,8,7],[2,10,-1,-1,2,10],[-4,10,3,-2,-9,4],[9,4,-7,5,-4,-7],[2,2,3,1,6,-1],[5,10,2,4,3,9],[8,-9,9,-7,-7,-4],[-3,-2,-6,8,6,-3],[-3,10,-4,-7,-2,-7],[4,1,-5,2,10,8],[6,-7,-3,1,-9,1],[-9,-8,-5,-2,-10,-10],[8,4,-5,5,-8,6],[-5,7,-9,7,-7,10],[1,10,-7,-8,-2,6],[-5,-1,-5,4,5,4],[-10,-3,-8,-10,9,2],[-10,-2,5,10,-10,2],[-9,3,-8,9,8,6],[6,-4,-5,10,9,8],[1,1,-10,-7,9,-2],[-9,-6,4,2,9,-7],[-4,-2,1,6,-9,-3],[2,-5,-10,-10,9,-7],[-10,-4,-6,-7,-8,-5],[8,-2,8,3,7,-3],[-6,-7,10,9,2,-3],[4,1,9,-2,-7,4],[-2,-7,9,-6,-4,-2],[-7,-8,-2,-9,1,8],[-6,-6,7,-10,1,7],[-9,4,8,-10,5,-5],[-7,5,4,7,-6,-5],[-5,1,2,3,-1,-5],[-3,5,2,-6,2,-8],[-7,-6,-10,-7,6,10],[-7,9,1,8,-10,-3],[3,-1,3,1,4,6],[-8,8,2,-2,-2,9],[-9,-7,-2,-1,-10,-9],[-2,4,8,2,2,10],[8,4,-4,-3,-2,2],[-3,-10,-5,-5,-9,-5],[-8,5,-6,3,-8,6],[-10,7,-3,7,-3,-8],[-5,-9,3,-3,10,-10],[-6,4,8,10,-1,9],[7,10,2,-2,5,1],[-5,9,-6,-4,2,8],[8,-7,6,-2,1,-5],[-2,-9,-8,6,-7,-9],[-6,5,10,5,3,8],[-9,2,-4,2,-6,4],[-1,7,5,-1,8,-8],[-3,-8,-6,-6,9,-6],[7,-1,-9,8,7,-10],[-9,5,8,8,6,-8],[6,-9,1,10,-1,4],[-7,-2,6,-9,2,4],[5,1,-10,6,-2,1]], dtype = "int64")#candidate|6041|(66, 6)|const|int64
call_6039 = relay.TupleGetItem(func_972_call(relay.reshape(var_6040.astype('uint64'), []), relay.reshape(call_6026.astype('uint64'), [6, 6, 1]), relay.reshape(const_6041.astype('int64'), [396,]), ), 2)
call_6042 = relay.TupleGetItem(func_976_call(relay.reshape(var_6040.astype('uint64'), []), relay.reshape(call_6026.astype('uint64'), [6, 6, 1]), relay.reshape(const_6041.astype('int64'), [396,]), ), 2)
func_1263_call = mod.get_global_var('func_1263')
func_1267_call = mutated_mod.get_global_var('func_1267')
call_6044 = relay.TupleGetItem(func_1263_call(relay.reshape(var_6040.astype('uint64'), []), relay.reshape(call_6039.astype('uint64'), [36,]), ), 4)
call_6045 = relay.TupleGetItem(func_1267_call(relay.reshape(var_6040.astype('uint64'), []), relay.reshape(call_6039.astype('uint64'), [36,]), ), 4)
func_1063_call = mod.get_global_var('func_1063')
func_1066_call = mutated_mod.get_global_var('func_1066')
call_6047 = relay.TupleGetItem(func_1063_call(relay.reshape(call_6044.astype('float64'), [13, 5, 16])), 1)
call_6048 = relay.TupleGetItem(func_1066_call(relay.reshape(call_6044.astype('float64'), [13, 5, 16])), 1)
uop_6053 = relay.atan(call_6039.astype('float64')) # shape=(6, 6, 1)
uop_6055 = relay.atan(call_6042.astype('float64')) # shape=(6, 6, 1)
func_5083_call = mod.get_global_var('func_5083')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_6056 = relay.TupleGetItem(func_5083_call(relay.reshape(var_6040.astype('uint64'), []), relay.reshape(const_6041.astype('int64'), [396,]), ), 2)
call_6057 = relay.TupleGetItem(func_5087_call(relay.reshape(var_6040.astype('uint64'), []), relay.reshape(const_6041.astype('int64'), [396,]), ), 2)
uop_6060 = relay.log10(uop_6053.astype('float64')) # shape=(6, 6, 1)
uop_6062 = relay.log10(uop_6055.astype('float64')) # shape=(6, 6, 1)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_6072 = relay.TupleGetItem(func_1695_call(), 0)
call_6073 = relay.TupleGetItem(func_1697_call(), 0)
func_4970_call = mod.get_global_var('func_4970')
func_4972_call = mutated_mod.get_global_var('func_4972')
call_6077 = relay.TupleGetItem(func_4970_call(), 2)
call_6078 = relay.TupleGetItem(func_4972_call(), 2)
output = relay.Tuple([call_6026,var_6040,const_6041,call_6044,call_6047,call_6056,uop_6060,call_6072,call_6077,])
output2 = relay.Tuple([call_6027,var_6040,const_6041,call_6045,call_6048,call_6057,uop_6062,call_6073,call_6078,])
func_6081 = relay.Function([var_6040,], output)
mod['func_6081'] = func_6081
mod = relay.transform.InferType()(mod)
mutated_mod['func_6081'] = func_6081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6082 = relay.var("var_6082", dtype = "uint64", shape = ())#candidate|6082|()|var|uint64
func_6081_call = mutated_mod.get_global_var('func_6081')
call_6083 = func_6081_call(var_6082)
output = call_6083
func_6084 = relay.Function([var_6082], output)
mutated_mod['func_6084'] = func_6084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5594_call = mutated_mod.get_global_var('func_5594')
call_6131 = relay.TupleGetItem(func_5593_call(), 3)
call_6132 = relay.TupleGetItem(func_5594_call(), 3)
func_3841_call = mod.get_global_var('func_3841')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_6149 = relay.TupleGetItem(func_3841_call(), 0)
call_6150 = relay.TupleGetItem(func_3842_call(), 0)
output = relay.Tuple([call_6131,call_6149,])
output2 = relay.Tuple([call_6132,call_6150,])
func_6157 = relay.Function([], output)
mod['func_6157'] = func_6157
mod = relay.transform.InferType()(mod)
mutated_mod['func_6157'] = func_6157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6157_call = mutated_mod.get_global_var('func_6157')
call_6158 = func_6157_call()
output = call_6158
func_6159 = relay.Function([], output)
mutated_mod['func_6159'] = func_6159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4593_call = mod.get_global_var('func_4593')
func_4594_call = mutated_mod.get_global_var('func_4594')
call_6175 = func_4593_call()
call_6176 = func_4593_call()
uop_6186 = relay.cos(call_6175.astype('float32')) # shape=(6, 6, 11)
uop_6188 = relay.cos(call_6176.astype('float32')) # shape=(6, 6, 11)
func_2139_call = mod.get_global_var('func_2139')
func_2143_call = mutated_mod.get_global_var('func_2143')
const_6207 = relay.const([[4,4,-3,-7,1,1,6,-9,-4,5,9,10,-3,-7,6,-10,7,2,-5,4,6,3,9,-10,-1,5,-2,-5,1,-10,3,9,-4,-1,10,6,1,8,1,5,1,-3,6,-10,2,-5,-9,-5,5,-1,1,1,-7,4,-6,-2,-10,4,5,-2,-3,1,1],[-5,4,-1,1,7,-10,-8,1,-5,-6,-6,2,-5,-6,7,2,6,-7,-1,7,-8,8,-3,-7,9,-7,4,4,4,-8,9,-2,6,-10,-8,4,7,-4,-2,-9,6,-7,-5,2,10,8,-7,-4,2,1,-4,7,-8,2,-4,2,-6,10,9,1,-9,-1,-1],[-1,-1,-4,9,6,4,9,8,-8,10,8,-10,-9,7,-7,-4,-3,3,10,9,-9,-4,3,-10,10,8,1,4,7,1,2,-4,-2,4,-7,2,8,-4,9,9,-8,-7,7,1,5,-9,9,3,10,-5,-10,3,-4,6,-3,-3,6,-9,1,6,-4,-4,10]], dtype = "uint64")#candidate|6207|(3, 63)|const|uint64
call_6206 = relay.TupleGetItem(func_2139_call(relay.reshape(const_6207.astype('uint64'), [189,]), relay.reshape(const_6207.astype('uint64'), [189,]), ), 1)
call_6208 = relay.TupleGetItem(func_2143_call(relay.reshape(const_6207.astype('uint64'), [189,]), relay.reshape(const_6207.astype('uint64'), [189,]), ), 1)
uop_6217 = relay.exp(uop_6186.astype('float32')) # shape=(6, 6, 11)
uop_6219 = relay.exp(uop_6188.astype('float32')) # shape=(6, 6, 11)
func_3031_call = mod.get_global_var('func_3031')
func_3035_call = mutated_mod.get_global_var('func_3035')
var_6229 = relay.var("var_6229", dtype = "int16", shape = (30,))#candidate|6229|(30,)|var|int16
var_6230 = relay.var("var_6230", dtype = "int16", shape = (120,))#candidate|6230|(120,)|var|int16
var_6231 = relay.var("var_6231", dtype = "int16", shape = (180,))#candidate|6231|(180,)|var|int16
call_6228 = relay.TupleGetItem(func_3031_call(relay.reshape(var_6229.astype('int16'), [15, 1, 2]), relay.reshape(var_6230.astype('int16'), [15, 4, 2]), relay.reshape(var_6231.astype('int16'), [15, 6, 2]), ), 1)
call_6232 = relay.TupleGetItem(func_3035_call(relay.reshape(var_6229.astype('int16'), [15, 1, 2]), relay.reshape(var_6230.astype('int16'), [15, 4, 2]), relay.reshape(var_6231.astype('int16'), [15, 6, 2]), ), 1)
func_2842_call = mod.get_global_var('func_2842')
func_2844_call = mutated_mod.get_global_var('func_2844')
call_6239 = func_2842_call()
call_6240 = func_2842_call()
uop_6242 = relay.log(uop_6186.astype('float32')) # shape=(6, 6, 11)
uop_6244 = relay.log(uop_6188.astype('float32')) # shape=(6, 6, 11)
func_3257_call = mod.get_global_var('func_3257')
func_3261_call = mutated_mod.get_global_var('func_3261')
var_6246 = relay.var("var_6246", dtype = "float64", shape = (78,))#candidate|6246|(78,)|var|float64
var_6247 = relay.var("var_6247", dtype = "float32", shape = (720,))#candidate|6247|(720,)|var|float32
call_6245 = relay.TupleGetItem(func_3257_call(relay.reshape(var_6246.astype('float64'), [1, 13, 6]), relay.reshape(var_6247.astype('float32'), [720,]), ), 0)
call_6248 = relay.TupleGetItem(func_3261_call(relay.reshape(var_6246.astype('float64'), [1, 13, 6]), relay.reshape(var_6247.astype('float32'), [720,]), ), 0)
output = relay.Tuple([call_6206,const_6207,uop_6217,call_6228,var_6229,var_6230,var_6231,call_6239,uop_6242,call_6245,var_6246,var_6247,])
output2 = relay.Tuple([call_6208,const_6207,uop_6219,call_6232,var_6229,var_6230,var_6231,call_6240,uop_6244,call_6248,var_6246,var_6247,])
func_6253 = relay.Function([var_6229,var_6230,var_6231,var_6246,var_6247,], output)
mod['func_6253'] = func_6253
mod = relay.transform.InferType()(mod)
mutated_mod['func_6253'] = func_6253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6253_call = mutated_mod.get_global_var('func_6253')
var_6255 = relay.var("var_6255", dtype = "int16", shape = (30,))#candidate|6255|(30,)|var|int16
var_6256 = relay.var("var_6256", dtype = "int16", shape = (120,))#candidate|6256|(120,)|var|int16
var_6257 = relay.var("var_6257", dtype = "int16", shape = (180,))#candidate|6257|(180,)|var|int16
var_6258 = relay.var("var_6258", dtype = "float64", shape = (78,))#candidate|6258|(78,)|var|float64
var_6259 = relay.var("var_6259", dtype = "float32", shape = (720,))#candidate|6259|(720,)|var|float32
call_6254 = func_6253_call(var_6255,var_6256,var_6257,var_6258,var_6259,)
output = call_6254
func_6260 = relay.Function([var_6255,var_6256,var_6257,var_6258,var_6259,], output)
mutated_mod['func_6260'] = func_6260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4556_call = mod.get_global_var('func_4556')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_6311 = relay.TupleGetItem(func_4556_call(), 1)
call_6312 = relay.TupleGetItem(func_4558_call(), 1)
uop_6321 = relay.asin(call_6311.astype('float32')) # shape=(8, 6, 15)
uop_6323 = relay.asin(call_6312.astype('float32')) # shape=(8, 6, 15)
func_3888_call = mod.get_global_var('func_3888')
func_3891_call = mutated_mod.get_global_var('func_3891')
const_6326 = relay.const([[3.624503,-2.223654,0.524294,-8.161636,9.574860,-7.509014,-2.159247,8.955693],[-9.645727,-7.148552,-5.340489,-2.933931,-3.280565,2.571014,2.965688,3.048487],[8.812237,0.151364,1.463830,-9.803375,-4.164232,5.796822,4.203060,0.973577],[5.615389,-4.897301,1.506720,5.978423,-8.457614,-2.079709,-5.357407,-9.759374],[2.596607,-4.078833,-3.427021,-7.251561,9.941951,8.909460,-3.446280,-6.883854],[-4.246772,0.061707,3.437282,0.634704,-4.702665,3.086173,-6.280470,-8.346182],[3.909906,-8.290821,6.922564,-6.816492,-1.861347,8.210700,-0.913090,-2.518544],[-4.426900,-1.343813,6.735096,0.768974,0.419281,-8.690838,-2.232921,-6.101188],[3.625758,7.574008,1.590719,0.642758,8.635286,-8.138282,-5.408473,-6.681178],[0.978448,-4.998325,4.432906,-7.986175,1.269730,-4.052808,8.899383,6.987733],[4.807723,0.687191,9.773185,-8.128585,7.862433,-4.647760,-8.282051,-7.134997],[-6.884275,-0.163600,-0.050914,-5.534076,9.229622,1.521054,0.206208,9.316898],[-2.772111,3.734344,9.509082,-8.179671,2.154874,-0.344545,-4.001638,7.359181],[6.455962,-6.428133,-3.902352,6.905094,6.791918,-4.740618,-7.437338,7.765512],[-1.593365,-4.648021,-2.766062,-0.459920,0.662619,9.815080,4.360309,-7.931395],[-1.877795,-0.077327,-4.539436,-4.896984,-6.305604,-2.567140,-9.549765,2.113810],[0.217196,-9.367288,4.896410,2.991994,6.512027,-0.869291,8.146562,-5.301946],[2.635334,-7.265750,-2.015804,0.526198,9.324950,2.857918,9.193752,-0.072424],[-1.086238,-0.324947,6.320246,5.893179,8.470749,0.829529,-7.732774,-1.175143],[-7.236680,0.197681,-2.813527,8.403380,4.157623,8.529459,-1.689160,2.639480],[2.531584,-4.441391,3.365060,6.786340,4.411034,8.164912,-4.387030,5.199788],[-5.610210,-7.277378,6.681584,-3.750775,-3.268671,7.279136,1.585504,-8.281491],[-9.766591,6.739676,-4.720638,-8.599011,7.621738,8.733192,-0.022209,-7.025237],[-4.715236,6.821244,-5.104876,-3.381749,0.337511,2.799682,-6.816263,3.485041],[-8.646704,-9.697780,-8.145917,-5.831671,-6.140978,3.662757,-2.047358,0.310410],[-9.553018,-0.242724,-7.341889,-3.079558,-4.025599,-7.704954,5.171330,-7.887932],[-5.176639,-1.466047,5.107758,-9.226077,-8.629831,-1.754595,7.172909,9.513977],[-4.564323,-9.344175,-7.527335,2.516411,4.473794,1.123508,4.904622,-5.471216],[-6.978802,-3.148786,-5.705016,8.122901,4.980674,9.010403,9.156330,-4.751647],[5.833849,-8.012088,0.665087,-1.032605,4.829078,9.960084,4.992870,-0.680800],[-0.670384,-2.489710,9.998836,-7.691336,3.466515,5.804125,-7.603212,5.408551],[3.454231,-3.191338,1.316198,7.291961,-3.069466,2.698260,-0.486586,-3.632867],[4.866604,7.352479,-5.665145,8.207159,-2.370822,7.027452,-2.193464,-8.074039],[-8.109844,0.428034,5.549174,2.382778,7.602959,-5.432106,-0.433456,0.486125],[6.647017,7.606715,-8.237918,2.604770,9.669900,1.812876,4.010838,0.640622],[-7.976870,7.893300,3.616011,-8.884626,-1.264937,2.485455,1.146795,-7.911133],[6.521854,-5.774193,-6.593370,-6.030476,-6.489094,7.575563,8.353439,-1.252694],[7.145598,-9.537671,-2.869784,-7.031020,7.873196,8.941867,-5.711112,7.310717],[2.184521,9.170139,3.929147,-2.210623,6.956149,-3.842107,-0.291418,5.622626],[-8.008853,6.363363,-6.300652,7.534324,9.046695,-4.357660,-0.453071,5.349647]], dtype = "float32")#candidate|6326|(40, 8)|const|float32
call_6325 = func_3888_call(relay.reshape(const_6326.astype('float32'), [16, 2, 10]), relay.reshape(const_6326.astype('float32'), [16, 2, 10]), )
call_6327 = func_3888_call(relay.reshape(const_6326.astype('float32'), [16, 2, 10]), relay.reshape(const_6326.astype('float32'), [16, 2, 10]), )
func_5434_call = mod.get_global_var('func_5434')
func_5435_call = mutated_mod.get_global_var('func_5435')
call_6334 = relay.TupleGetItem(func_5434_call(), 0)
call_6335 = relay.TupleGetItem(func_5435_call(), 0)
output = relay.Tuple([uop_6321,call_6325,const_6326,call_6334,])
output2 = relay.Tuple([uop_6323,call_6327,const_6326,call_6335,])
func_6342 = relay.Function([], output)
mod['func_6342'] = func_6342
mod = relay.transform.InferType()(mod)
output = func_6342()
func_6343 = relay.Function([], output)
mutated_mod['func_6343'] = func_6343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2271_call = mod.get_global_var('func_2271')
func_2273_call = mutated_mod.get_global_var('func_2273')
call_6372 = func_2271_call()
call_6373 = func_2271_call()
output = call_6372
output2 = call_6373
func_6374 = relay.Function([], output)
mod['func_6374'] = func_6374
mod = relay.transform.InferType()(mod)
output = func_6374()
func_6375 = relay.Function([], output)
mutated_mod['func_6375'] = func_6375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4829_call = mod.get_global_var('func_4829')
func_4831_call = mutated_mod.get_global_var('func_4831')
call_6389 = func_4829_call()
call_6390 = func_4829_call()
func_2997_call = mod.get_global_var('func_2997')
func_2998_call = mutated_mod.get_global_var('func_2998')
call_6393 = relay.TupleGetItem(func_2997_call(), 4)
call_6394 = relay.TupleGetItem(func_2998_call(), 4)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
call_6396 = relay.TupleGetItem(func_1458_call(), 2)
call_6397 = relay.TupleGetItem(func_1460_call(), 2)
output = relay.Tuple([call_6389,call_6393,call_6396,])
output2 = relay.Tuple([call_6390,call_6394,call_6397,])
func_6409 = relay.Function([], output)
mod['func_6409'] = func_6409
mod = relay.transform.InferType()(mod)
output = func_6409()
func_6410 = relay.Function([], output)
mutated_mod['func_6410'] = func_6410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6342_call = mod.get_global_var('func_6342')
func_6343_call = mutated_mod.get_global_var('func_6343')
call_6460 = relay.TupleGetItem(func_6342_call(), 2)
call_6461 = relay.TupleGetItem(func_6343_call(), 2)
uop_6469 = relay.sigmoid(call_6460.astype('float32')) # shape=(40, 8)
uop_6471 = relay.sigmoid(call_6461.astype('float32')) # shape=(40, 8)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_6476 = relay.TupleGetItem(func_1558_call(), 2)
call_6477 = relay.TupleGetItem(func_1560_call(), 2)
func_1063_call = mod.get_global_var('func_1063')
func_1066_call = mutated_mod.get_global_var('func_1066')
call_6483 = relay.TupleGetItem(func_1063_call(relay.reshape(call_6476.astype('float64'), [13, 5, 16])), 1)
call_6484 = relay.TupleGetItem(func_1066_call(relay.reshape(call_6476.astype('float64'), [13, 5, 16])), 1)
const_6504 = relay.const([[6.538893,1.713636,7.028550,6.169939,5.608118,5.923615,-5.069679,-0.009947],[-9.616004,-8.035062,0.429032,-7.958103,-8.630017,-0.637560,-8.799598,1.048295],[-8.999794,-4.296072,4.045746,-6.183972,-9.027313,-0.399215,6.967475,0.873817],[6.846658,-7.715388,-5.665236,3.379994,5.042803,-1.728476,-3.672047,7.789073],[-6.163270,-0.207461,6.472280,4.986417,0.662500,-5.970156,-0.645629,-9.412616],[1.756806,-8.223028,3.586006,-4.666897,8.636861,-5.641407,-0.181972,4.870384],[4.543474,7.712403,-5.871861,6.734917,-5.149881,3.160443,0.988754,-6.289449],[-6.481046,-8.116834,9.154295,-7.017984,0.102464,-5.972996,-8.112171,9.504705],[0.492764,-5.927092,3.741137,1.473377,-6.857832,-8.301216,-0.839179,-5.371366],[2.239791,-8.078146,-8.001528,7.620340,-2.164875,7.687606,2.245477,-3.507336],[1.453019,0.538411,-0.235404,-8.214696,4.376445,-2.196200,-3.953599,-8.165641],[6.523416,-2.161795,-0.022774,-9.594739,3.525346,5.973804,-1.270980,6.794351],[5.542466,-3.721336,-0.997546,-0.131641,8.902569,3.690902,6.065883,2.414555],[1.135133,-5.953499,0.531832,-1.942185,2.715085,-7.014673,7.179975,8.875490],[-7.714345,2.922071,0.078993,-0.186259,-7.069550,-5.429097,6.460756,5.403836],[4.630318,-4.094846,-0.255612,3.420813,2.414310,3.928208,8.325614,0.688734],[-8.565394,-7.476212,-6.185373,-9.414428,6.237273,-7.959829,-8.172918,1.126836],[-0.592688,-9.182837,-7.256739,-5.663484,2.962623,-6.580143,-2.334895,-2.626447],[-2.734660,-2.271228,9.204491,-7.807341,7.277963,-3.155983,-2.330923,0.240724],[9.194358,3.781727,8.821365,1.507303,9.565105,-6.265206,4.483132,-7.963077],[5.358174,-8.619515,6.385293,0.881374,-8.734746,-8.684240,6.157877,3.205699],[1.374012,-5.016872,-7.293131,-2.353776,-3.688652,3.099598,1.762781,4.114073],[1.856834,-8.921489,-9.248263,4.459752,1.887941,4.498795,-2.330150,7.206197],[1.408974,-8.442256,-3.909454,5.420337,0.130179,-4.770762,-9.829636,-1.249918],[-7.174543,-0.494137,-0.138115,0.439632,3.629756,1.384006,7.632851,-7.446606],[-5.129672,-1.637971,9.980736,6.814367,-9.815053,9.733180,-1.614624,-5.846672],[-4.329921,1.427885,1.605197,-3.059426,-5.190323,-3.062720,1.593536,-7.364110],[4.424496,-7.724970,6.236591,-6.546048,8.800643,-0.125676,2.896663,-6.234183],[-3.432475,-2.738480,-8.611647,-7.565741,-9.178496,-3.708771,4.677272,-8.557324],[3.518470,6.468085,-6.687563,4.663140,-4.366426,4.134113,-2.230851,2.975512],[-3.783970,-8.683238,1.678817,6.063674,6.586152,7.122197,-1.269941,-8.621617],[-8.429001,-6.527362,3.711851,-8.013219,-4.191871,2.218467,-1.810850,4.397720],[-8.349904,2.686564,-4.059461,-1.614568,8.592740,6.196310,5.398718,9.600365],[2.017676,-1.190367,0.988858,-4.368965,3.425612,9.225526,9.270381,-7.049815],[-8.527776,2.353513,-6.632239,6.986945,9.028045,5.802281,-2.905942,-4.694594],[0.419133,-4.058616,4.312538,-9.910820,-0.140429,-2.775562,-5.771552,4.466352],[4.941814,3.822591,-9.539827,4.436656,2.525973,-7.873121,0.849429,-9.587465],[-5.078964,-5.191148,5.759066,-8.603197,-0.839212,4.896355,1.171353,8.840912],[6.335767,-7.293904,0.640820,6.033319,-3.319203,-2.401036,-6.077543,-9.324791],[4.538366,2.690213,3.462491,-7.228766,-0.610718,-1.323849,9.627509,-1.782441]], dtype = "float32")#candidate|6504|(40, 8)|const|float32
bop_6505 = relay.floor_divide(uop_6469.astype('float32'), relay.reshape(const_6504.astype('float32'), relay.shape_of(uop_6469))) # shape=(40, 8)
bop_6508 = relay.floor_divide(uop_6471.astype('float32'), relay.reshape(const_6504.astype('float32'), relay.shape_of(uop_6471))) # shape=(40, 8)
func_1156_call = mod.get_global_var('func_1156')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_6511 = relay.TupleGetItem(func_1156_call(), 0)
call_6512 = relay.TupleGetItem(func_1158_call(), 0)
func_4970_call = mod.get_global_var('func_4970')
func_4972_call = mutated_mod.get_global_var('func_4972')
call_6517 = relay.TupleGetItem(func_4970_call(), 2)
call_6518 = relay.TupleGetItem(func_4972_call(), 2)
output = relay.Tuple([call_6476,call_6483,bop_6505,call_6511,call_6517,])
output2 = relay.Tuple([call_6477,call_6484,bop_6508,call_6512,call_6518,])
func_6522 = relay.Function([], output)
mod['func_6522'] = func_6522
mod = relay.transform.InferType()(mod)
mutated_mod['func_6522'] = func_6522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6522_call = mutated_mod.get_global_var('func_6522')
call_6523 = func_6522_call()
output = call_6523
func_6524 = relay.Function([], output)
mutated_mod['func_6524'] = func_6524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6612 = relay.var("var_6612", dtype = "int16", shape = ())#candidate|6612|()|var|int16
var_6613 = relay.var("var_6613", dtype = "int16", shape = (1, 15, 10))#candidate|6613|(1, 15, 10)|var|int16
bop_6614 = relay.greater(var_6612.astype('bool'), var_6613.astype('bool')) # shape=(1, 15, 10)
func_4829_call = mod.get_global_var('func_4829')
func_4831_call = mutated_mod.get_global_var('func_4831')
call_6624 = func_4829_call()
call_6625 = func_4829_call()
func_4428_call = mod.get_global_var('func_4428')
func_4430_call = mutated_mod.get_global_var('func_4430')
var_6633 = relay.var("var_6633", dtype = "float32", shape = (720, 1))#candidate|6633|(720, 1)|var|float32
call_6632 = relay.TupleGetItem(func_4428_call(relay.reshape(var_6633.astype('float32'), [60, 12])), 1)
call_6634 = relay.TupleGetItem(func_4430_call(relay.reshape(var_6633.astype('float32'), [60, 12])), 1)
output = relay.Tuple([bop_6614,call_6624,call_6632,var_6633,])
output2 = relay.Tuple([bop_6614,call_6625,call_6634,var_6633,])
func_6649 = relay.Function([var_6612,var_6613,var_6633,], output)
mod['func_6649'] = func_6649
mod = relay.transform.InferType()(mod)
var_6650 = relay.var("var_6650", dtype = "int16", shape = ())#candidate|6650|()|var|int16
var_6651 = relay.var("var_6651", dtype = "int16", shape = (1, 15, 10))#candidate|6651|(1, 15, 10)|var|int16
var_6652 = relay.var("var_6652", dtype = "float32", shape = (720, 1))#candidate|6652|(720, 1)|var|float32
output = func_6649(var_6650,var_6651,var_6652,)
func_6653 = relay.Function([var_6650,var_6651,var_6652,], output)
mutated_mod['func_6653'] = func_6653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3552_call = mod.get_global_var('func_3552')
func_3554_call = mutated_mod.get_global_var('func_3554')
call_6659 = relay.TupleGetItem(func_3552_call(), 0)
call_6660 = relay.TupleGetItem(func_3554_call(), 0)
output = relay.Tuple([call_6659,])
output2 = relay.Tuple([call_6660,])
func_6669 = relay.Function([], output)
mod['func_6669'] = func_6669
mod = relay.transform.InferType()(mod)
output = func_6669()
func_6670 = relay.Function([], output)
mutated_mod['func_6670'] = func_6670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6744 = relay.var("var_6744", dtype = "float32", shape = (5, 10, 2))#candidate|6744|(5, 10, 2)|var|float32
uop_6745 = relay.cosh(var_6744.astype('float32')) # shape=(5, 10, 2)
output = relay.Tuple([uop_6745,])
output2 = relay.Tuple([uop_6745,])
func_6750 = relay.Function([var_6744,], output)
mod['func_6750'] = func_6750
mod = relay.transform.InferType()(mod)
mutated_mod['func_6750'] = func_6750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6751 = relay.var("var_6751", dtype = "float32", shape = (5, 10, 2))#candidate|6751|(5, 10, 2)|var|float32
func_6750_call = mutated_mod.get_global_var('func_6750')
call_6752 = func_6750_call(var_6751)
output = call_6752
func_6753 = relay.Function([var_6751], output)
mutated_mod['func_6753'] = func_6753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3855_call = mod.get_global_var('func_3855')
func_3856_call = mutated_mod.get_global_var('func_3856')
call_6763 = relay.TupleGetItem(func_3855_call(), 0)
call_6764 = relay.TupleGetItem(func_3856_call(), 0)
output = relay.Tuple([call_6763,])
output2 = relay.Tuple([call_6764,])
func_6808 = relay.Function([], output)
mod['func_6808'] = func_6808
mod = relay.transform.InferType()(mod)
mutated_mod['func_6808'] = func_6808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6808_call = mutated_mod.get_global_var('func_6808')
call_6809 = func_6808_call()
output = call_6809
func_6810 = relay.Function([], output)
mutated_mod['func_6810'] = func_6810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mod.get_global_var('func_3226')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_6819 = relay.TupleGetItem(func_3226_call(), 3)
call_6820 = relay.TupleGetItem(func_3228_call(), 3)
func_4337_call = mod.get_global_var('func_4337')
func_4340_call = mutated_mod.get_global_var('func_4340')
call_6821 = relay.TupleGetItem(func_4337_call(relay.reshape(call_6819.astype('uint64'), [1, 189])), 0)
call_6822 = relay.TupleGetItem(func_4340_call(relay.reshape(call_6819.astype('uint64'), [1, 189])), 0)
uop_6824 = relay.asinh(call_6819.astype('float32')) # shape=(7, 9, 3)
uop_6826 = relay.asinh(call_6820.astype('float32')) # shape=(7, 9, 3)
func_4453_call = mod.get_global_var('func_4453')
func_4456_call = mutated_mod.get_global_var('func_4456')
const_6834 = relay.const([9,7,-5,9,10,5,-5,6,-6,-8,3,1,-7,-6,-6,6,-10,-1,3,-4,-4,-8,-10,8,-3,6,-6,-1,-5,4,8,7,5,7,-9,-3,-2,9,9,7,-4,9,-9,3,-9,-5,6,-7,1,-1,6,3,-8,1,10,9,-10,-5,1,3,4,-7,4,-5,9,-7,-1,7,5,-5,6,10,-4,-7,3,-5,9,-1,-5,8,-2,10,-7,3,5,-8,3,10,-3,2,-8,4,8,-10,2,6,-5,7,5,4,7,-4,-10,-10,1,10,9,-7,-1,-8,9,9,4,5,-8,-1,1,-7,-10,-3,-7,10,-6,2,8,-10,-6,10,-7,-1,-4,-9,-10,7,3,2,-4,7,1,-7,1,-5,-10,-9,8,1,-6,8,-1,9,6,6,-6,-9,-2,6,-8,2,-6,5,3,-7,-8,-7,3,-3,-7,-8,-1,10,5,-9,-8,1,2,-9,9,5,2,-6,-8,-3,-7,-8,2,-4,-5,-2,-3,-9,6,-1,-4,4,-8,1,1,-5,-9,-9,-2,-7,-7,1,1,-5,6,2,4,-5,10,10,-4,-4,-7,-5,5,5,-1,1,4,9,-4,1,-8,-10,-4,2,7,-2,-8,-3,-9,6,-5,-3,3,-3,4,-4,-10,-3,-7,4,-2,8,3,2,2,-3,-4,-9,8,-5,6,5,6,-10,-4,10,-1,3,-2,6,-4,4,-5,7,5,-8,-3,-6,-2,3,9,9,2,3,-8,1,-10,-1,5,10,10,-10,-2,2,-3,7,10,3,9,-7,7,-10,2,1,1,-7,3,4,6,-7,-2,-10,-2,4,8,-8,-1,1,-2,-1,8,-4,7,-4,3,-1,-10,5,3,3,3,6,10,5,4,4,6,-2,-5,6,-10,1,8,-1,-7,2,-6,4,-10,9,-7,-5,-1,3,-3,-2,-8,4,10,8,-10,7,-1,-3,2,-4,-4,-9,3,-1,-5,-1,9,-10,1,-8,10,-8,-6,1,-4,6,-1,-3,9,1,8,-6,7,5,5,2,9,-4,2,5,-10,2,-6,-8,-8,8,2,2,-9,9,8,-9,1,2,-1,-9,-7,-6,7,-9,-2,-2,10,-6,-1,-5,6,6,7,1,6,-1,-3,8,-1,-5,-4,9,-1,3,10,10,9,-5,5,-6,-6,-6,6,-8,-2,1,-10,-10,-7,-10,8,-5,6,-5,6,4,10,10,5,-4,1,-5,-8,-1,-5,-4,-10,1,-8,9,-10,7,-2,-8,7,5,9,-10,-4,-4,1,-3,-6,1,1,-10,-10,10,6,-8,-2,-10,3,-10,10,-6,-9,-5,1,10,3,-2,-9,-4,2,7,-5,7,-8,2,10,-10,-7,5,-9,10], dtype = "int32")#candidate|6834|(512,)|const|int32
call_6833 = relay.TupleGetItem(func_4453_call(relay.reshape(const_6834.astype('int32'), [16, 8, 4])), 0)
call_6835 = relay.TupleGetItem(func_4456_call(relay.reshape(const_6834.astype('int32'), [16, 8, 4])), 0)
uop_6837 = relay.exp(uop_6824.astype('float32')) # shape=(7, 9, 3)
uop_6839 = relay.exp(uop_6826.astype('float32')) # shape=(7, 9, 3)
uop_6841 = relay.log10(uop_6837.astype('float32')) # shape=(7, 9, 3)
uop_6843 = relay.log10(uop_6839.astype('float32')) # shape=(7, 9, 3)
var_6861 = relay.var("var_6861", dtype = "float32", shape = (7, 9, 3))#candidate|6861|(7, 9, 3)|var|float32
bop_6862 = relay.not_equal(uop_6837.astype('bool'), relay.reshape(var_6861.astype('bool'), relay.shape_of(uop_6837))) # shape=(7, 9, 3)
bop_6865 = relay.not_equal(uop_6839.astype('bool'), relay.reshape(var_6861.astype('bool'), relay.shape_of(uop_6839))) # shape=(7, 9, 3)
func_3855_call = mod.get_global_var('func_3855')
func_3856_call = mutated_mod.get_global_var('func_3856')
call_6866 = relay.TupleGetItem(func_3855_call(), 0)
call_6867 = relay.TupleGetItem(func_3856_call(), 0)
func_4234_call = mod.get_global_var('func_4234')
func_4236_call = mutated_mod.get_global_var('func_4236')
call_6869 = func_4234_call()
call_6870 = func_4234_call()
uop_6872 = relay.sin(bop_6862.astype('float32')) # shape=(7, 9, 3)
uop_6874 = relay.sin(bop_6865.astype('float32')) # shape=(7, 9, 3)
func_5144_call = mod.get_global_var('func_5144')
func_5146_call = mutated_mod.get_global_var('func_5146')
const_6889 = relay.const([-2,-9,-9,10,2,-2,5,4,-2,8,-4,6,-9,4,-3,-1,-7,7,-7,-2,6,8,1,-1,-2,-3,-1,4,4,-4,-2,-9,3,4,5,-1,-3,4,-2,-7,3,3,-10,8,4,8,-4,4,5,9,6,-4,-2,-5,3,-9,3,-2,10,5,-9,7,-2,-5,10,10,6,7,2,2,-3,2,4,8,-4,-7,8,8,-6,-8,7,-2,-1,10,-2,-7,-7,10,-2,5,-1,-9,-8,-8,10,-9,-3,-9,-4,6,-5,-1,-5,-4,-9,-3,3,1,10,4,-5,-6,-7,-1,-8,-5,3,3,-6,4,-8,-8,-10,-10,8,10,-10,2,-3,-6,-1,2,-8,-3,-4,2,6,2,-10,-6,-10,-2,5,6,8,-7,-7,-4,-7,-1,-5,-2,-6,-7,-9,-5,-1,9,-2,4,-9,8,1,10,10,-9,-6,-6,-7,9,9,-7,2,8,1,3,-4,-5,-2,3,8,-6,4,9,6,9,3,-6,10,-10,-6,10,-3,-5,1,6,1,-6,-6,6,4,-7,-1,-3,-9,-3,-5,6,-9,-2,10,-10,1,-6,2,1,9,-6,-5,3,-3,10,1,-5,-7,-1,-4,-8,6,4,-5,-5,-6,-5,1,4,8,1,8,-2,-2,1,-1,-4,2,6,-4,-2,-3,9,6,-9,7,-6,7,-1,-8,-8,3,7,-10,3,-7,2,1,-5,9,3,-5,3,6,2,8,4,-9,-9,5,3,-6,-1,8,-5,-9,3,9,7,-1,9,6,3,6,4,-1,-3,-2,5,2,9,10,7,-9,5,3,9,7,5,-3,7,8,2,-6,-3,7,-4,-5,8,-5,-6,-7,8,-7,9,5,-6,8,4,5,4,1,-10,-9,2,9,2,3,10,-4,1,-5,-2,-5,6,-8,-1,-8,-5,9,-1,-5,6,5,-9,-7,8,-9,6,1,-3,4,-7,-7,1,2,-8,-7,7,2,-10,-8,2,3,3,-2,10,-10,-10,1,-5,-5,10,-7,3,2,-10,-6,-10,-2,10,9,2,8,8,-5,-2,6,-2,8,-4,-3,-3,-7,-5,-5,-1,-6,4,6,3,5,-4,5,5,3,6,-2,-4,-1,5,3,-8,10,-3,4,-10,1,-1,9,-2,5,-10,-6,-5,-3,-2,-10,-7,4,9,-10,-8,-2,-1,-5,3,2,7,8,-4,-4,-1,-5,-5,2,9,-2,3,6,-4,7,-10,-3,-7,-1,-3,-5,9,5,-1,1,-7,6,6,-5,2,-10,-3,1,3,10,9,2,-7,4,-4,-7,8,2,-7,8,1,4,-10,-3,-7,3,-6,3,-2,1,-4,8,6,-7,6,-2,3,10,-1,10,-4,5,8,5,-7,-7,-9,-2,-4,5,6,9,-5,5,-2,5,8,9,-6,-7,3,3,-6,4,-5,1,10,3,9,-1,-2,8,-4,5,3,6,-5,-5,-5,-10,2,4,-1,5,-4,2,3,-6,-9,1,-3,6,-6,-9,-4,1,-2,7,-3,-3,1,3,-7,2,-1,8,10,2,-6,6,9,5,-4,5,5,6,-3,-9,-9,-6,6,4,9,9,-6,5,-2,-9,3,6,3,-3,1,7,-4,10,-9,5,2,-3,-9,-8,-1,1,-2,-3,9,1,1,-1,5,5,8,1,-4,-2,5,7,-6,3,7,5,3,7,-6,-8,-10,4,-3,-1,1,3,1,3,8,7,1,1,-10,9,7,-6,2,-8,-4,3,10,3,-6,1,2,9,-2,9,-9,7,-8,4,2,5,8,-3,-6,10,-3,-5,-10,8,5,1,10,9,-10,7,2,10,-2,8,7,9,10,-5,-6,-10,2,4,-1,9,-7,-5,-8,1,-6,-9,9,-5,2,7,2,-1,-3,8,10,-7,-6,8,-7,-6,-7,6,-3,-5,10,4,-1,8,-2,10,-6,10,9,-5,-6,9,-8,-9,7,-7,-6,-1,-8,1,-7,-5,-9,-6,5,-5,6,4,9,6,-7,-5,6,10,-4,7,3,8,-8,-10,-8,4,9,8,3,-5,7,-3,-5,10,-5,3,-8,10,7,-9,-5,1,-2,3,4,-4,-10,-5,-10,-4,-1,-3,-10,-7,4,-4,-8,6,-5,-5,-9,-10,-6,3,2,-10,-6,4,-9,5,-6,4,-5,5,-9,8,9,-6,5,-10,-7,-1,-7,-1,7,-10,6,-8,6,10,4,-5,4,-6,9,7,8,10,-5,10,6,5,-5,2,6,7,8,1,-3,4,-4,-9,8,-6,8,-5,7,8,-2,-3,2,8,-4,-5,-7,9,9,2,5,10,-5,10,4,-3,-8,-7,-8,4,6,-7,8,4,3,-5,-5,4,2,3,-1,4,-3,-4,10,3,7,10,-7,5,4,8,6,1,-5,-4,1,10,3,-4,-3,-8,8,-8,-4,-5,-4,8,-5,6,3,10,1,9,5,-4,2,-1,-2,5,3,-4,1,4,3,7,3,-10,-9,-6,-4,-3,4,7,2,-2,10,-9,-8,-8,-7,6,4,4,-7,-8,-1,-7,4,1,-6,10,-8,6,5,6,-8,-2,10,-6,4,-10,-4,2,-3,-3,-5,-2,1,9,-1,-8,7,3,-3,8,2,4,7,3,10,-8,6,-8,-9,5,-1,-10,10,-10,4,-2,-8,-4,4,-4,3,1,-3,10,-5,-1,-7,-7,-6,-2,4,9,-2], dtype = "int16")#candidate|6889|(1014,)|const|int16
call_6888 = relay.TupleGetItem(func_5144_call(relay.reshape(const_6889.astype('int16'), [13, 13, 6])), 0)
call_6890 = relay.TupleGetItem(func_5146_call(relay.reshape(const_6889.astype('int16'), [13, 13, 6])), 0)
output = relay.Tuple([call_6821,call_6833,const_6834,uop_6841,call_6866,call_6869,uop_6872,call_6888,const_6889,])
output2 = relay.Tuple([call_6822,call_6835,const_6834,uop_6843,call_6867,call_6870,uop_6874,call_6890,const_6889,])
func_6891 = relay.Function([var_6861,], output)
mod['func_6891'] = func_6891
mod = relay.transform.InferType()(mod)
var_6892 = relay.var("var_6892", dtype = "float32", shape = (7, 9, 3))#candidate|6892|(7, 9, 3)|var|float32
output = func_6891(var_6892)
func_6893 = relay.Function([var_6892], output)
mutated_mod['func_6893'] = func_6893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_6897 = relay.TupleGetItem(func_3841_call(), 0)
call_6898 = relay.TupleGetItem(func_3842_call(), 0)
func_4217_call = mod.get_global_var('func_4217')
func_4219_call = mutated_mod.get_global_var('func_4219')
call_6914 = relay.TupleGetItem(func_4217_call(), 0)
call_6915 = relay.TupleGetItem(func_4219_call(), 0)
output = relay.Tuple([call_6897,call_6914,])
output2 = relay.Tuple([call_6898,call_6915,])
func_6923 = relay.Function([], output)
mod['func_6923'] = func_6923
mod = relay.transform.InferType()(mod)
mutated_mod['func_6923'] = func_6923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6923_call = mutated_mod.get_global_var('func_6923')
call_6924 = func_6923_call()
output = call_6924
func_6925 = relay.Function([], output)
mutated_mod['func_6925'] = func_6925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_6940 = relay.TupleGetItem(func_1695_call(), 0)
call_6941 = relay.TupleGetItem(func_1697_call(), 0)
func_5266_call = mod.get_global_var('func_5266')
func_5268_call = mutated_mod.get_global_var('func_5268')
call_6942 = func_5266_call()
call_6943 = func_5266_call()
output = relay.Tuple([call_6940,call_6942,])
output2 = relay.Tuple([call_6941,call_6943,])
func_6955 = relay.Function([], output)
mod['func_6955'] = func_6955
mod = relay.transform.InferType()(mod)
mutated_mod['func_6955'] = func_6955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6955_call = mutated_mod.get_global_var('func_6955')
call_6956 = func_6955_call()
output = call_6956
func_6957 = relay.Function([], output)
mutated_mod['func_6957'] = func_6957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4189_call = mod.get_global_var('func_4189')
func_4191_call = mutated_mod.get_global_var('func_4191')
call_6984 = relay.TupleGetItem(func_4189_call(), 0)
call_6985 = relay.TupleGetItem(func_4191_call(), 0)
func_1918_call = mod.get_global_var('func_1918')
func_1921_call = mutated_mod.get_global_var('func_1921')
var_6987 = relay.var("var_6987", dtype = "uint64", shape = (1210,))#candidate|6987|(1210,)|var|uint64
call_6986 = relay.TupleGetItem(func_1918_call(relay.reshape(var_6987.astype('uint64'), [11, 11, 10]), relay.reshape(var_6987.astype('uint64'), [11, 11, 10]), ), 0)
call_6988 = relay.TupleGetItem(func_1921_call(relay.reshape(var_6987.astype('uint64'), [11, 11, 10]), relay.reshape(var_6987.astype('uint64'), [11, 11, 10]), ), 0)
output = relay.Tuple([call_6984,call_6986,var_6987,])
output2 = relay.Tuple([call_6985,call_6988,var_6987,])
func_6994 = relay.Function([var_6987,], output)
mod['func_6994'] = func_6994
mod = relay.transform.InferType()(mod)
mutated_mod['func_6994'] = func_6994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6995 = relay.var("var_6995", dtype = "uint64", shape = (1210,))#candidate|6995|(1210,)|var|uint64
func_6994_call = mutated_mod.get_global_var('func_6994')
call_6996 = func_6994_call(var_6995)
output = call_6996
func_6997 = relay.Function([var_6995], output)
mutated_mod['func_6997'] = func_6997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_788_call = mod.get_global_var('func_788')
func_789_call = mutated_mod.get_global_var('func_789')
call_7018 = func_788_call()
call_7019 = func_788_call()
func_788_call = mod.get_global_var('func_788')
func_789_call = mutated_mod.get_global_var('func_789')
call_7026 = func_788_call()
call_7027 = func_788_call()
output = relay.Tuple([call_7018,call_7026,])
output2 = relay.Tuple([call_7019,call_7027,])
func_7037 = relay.Function([], output)
mod['func_7037'] = func_7037
mod = relay.transform.InferType()(mod)
output = func_7037()
func_7038 = relay.Function([], output)
mutated_mod['func_7038'] = func_7038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4556_call = mod.get_global_var('func_4556')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_7051 = relay.TupleGetItem(func_4556_call(), 1)
call_7052 = relay.TupleGetItem(func_4558_call(), 1)
func_6649_call = mod.get_global_var('func_6649')
func_6653_call = mutated_mod.get_global_var('func_6653')
const_7057 = relay.const(9, dtype = "int16")#candidate|7057|()|const|int16
const_7058 = relay.const([-2,-2,-5,3,10,-7,-1,-7,10,1,9,4,6,-3,3,10,7,4,-4,-7,7,7,5,-2,1,5,-7,-9,7,2,2,-7,-5,2,-10,-6,-5,6,-8,-6,-4,-9,10,-5,-2,6,8,2,4,5,-6,-2,-3,-8,-9,-7,5,-3,6,1,5,-1,-1,-10,-8,1,-3,3,-1,4,7,-2,-1,-7,-5,2,-6,-4,-5,-5,7,-7,1,6,-2,4,6,-4,-1,2,9,-5,-9,5,-5,-9,6,-5,-7,-1,-3,-10,10,-8,3,8,-5,9,6,-2,-4,-3,8,-9,1,3,6,-5,-7,1,2,-4,-4,3,-8,-1,7,-5,2,-9,6,6,-9,-10,5,-8,1,-4,-6,-7,3,1,3,-4,-1,-9,8,1,-8,2], dtype = "int16")#candidate|7058|(150,)|const|int16
call_7056 = relay.TupleGetItem(func_6649_call(relay.reshape(const_7057.astype('int16'), []), relay.reshape(const_7058.astype('int16'), [1, 15, 10]), relay.reshape(call_7051.astype('float32'), [720, 1]), ), 1)
call_7059 = relay.TupleGetItem(func_6653_call(relay.reshape(const_7057.astype('int16'), []), relay.reshape(const_7058.astype('int16'), [1, 15, 10]), relay.reshape(call_7051.astype('float32'), [720, 1]), ), 1)
output = relay.Tuple([call_7051,call_7056,const_7057,const_7058,])
output2 = relay.Tuple([call_7052,call_7059,const_7057,const_7058,])
func_7062 = relay.Function([], output)
mod['func_7062'] = func_7062
mod = relay.transform.InferType()(mod)
output = func_7062()
func_7063 = relay.Function([], output)
mutated_mod['func_7063'] = func_7063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2720_call = mod.get_global_var('func_2720')
func_2722_call = mutated_mod.get_global_var('func_2722')
call_7101 = relay.TupleGetItem(func_2720_call(), 0)
call_7102 = relay.TupleGetItem(func_2722_call(), 0)
output = call_7101
output2 = call_7102
func_7116 = relay.Function([], output)
mod['func_7116'] = func_7116
mod = relay.transform.InferType()(mod)
mutated_mod['func_7116'] = func_7116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7116_call = mutated_mod.get_global_var('func_7116')
call_7117 = func_7116_call()
output = call_7117
func_7118 = relay.Function([], output)
mutated_mod['func_7118'] = func_7118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6157_call = mod.get_global_var('func_6157')
func_6159_call = mutated_mod.get_global_var('func_6159')
call_7155 = relay.TupleGetItem(func_6157_call(), 1)
call_7156 = relay.TupleGetItem(func_6159_call(), 1)
func_2720_call = mod.get_global_var('func_2720')
func_2722_call = mutated_mod.get_global_var('func_2722')
call_7175 = relay.TupleGetItem(func_2720_call(), 2)
call_7176 = relay.TupleGetItem(func_2722_call(), 2)
func_1695_call = mod.get_global_var('func_1695')
func_1697_call = mutated_mod.get_global_var('func_1697')
call_7180 = relay.TupleGetItem(func_1695_call(), 0)
call_7181 = relay.TupleGetItem(func_1697_call(), 0)
func_1918_call = mod.get_global_var('func_1918')
func_1921_call = mutated_mod.get_global_var('func_1921')
var_7191 = relay.var("var_7191", dtype = "uint64", shape = (1210,))#candidate|7191|(1210,)|var|uint64
call_7190 = relay.TupleGetItem(func_1918_call(relay.reshape(var_7191.astype('uint64'), [11, 11, 10]), relay.reshape(var_7191.astype('uint64'), [11, 11, 10]), ), 3)
call_7192 = relay.TupleGetItem(func_1921_call(relay.reshape(var_7191.astype('uint64'), [11, 11, 10]), relay.reshape(var_7191.astype('uint64'), [11, 11, 10]), ), 3)
func_811_call = mod.get_global_var('func_811')
func_814_call = mutated_mod.get_global_var('func_814')
var_7197 = relay.var("var_7197", dtype = "float32", shape = (144,))#candidate|7197|(144,)|var|float32
const_7198 = relay.const([9,-2,-6,6,-3,-6,4,-3,-8,-6,-3,-2,-1,-5,9,-10,-3,3,-1,5,-6,6,-5,-7,-10,-1,-5,-7,5,-9,4,-5,2,-6,7,-6,-4,-4,-3,-2,-2,-5,8,-3,-4,7,2,4,-10,-8,4,1,-8,7,-6,4,3,-6,9,-4,-2,10,-5,-9,-7,-3,10,-8,-8,10,3,-1,3,-7,-7,-7,4,-4,-4,-5,9,-1,-1,-9,-2,-5,7,3,-3,4,1,-2,1,-5,8,-5,7,8,-2,1,10,-1,1,-6,-4,8,-2,-2,4,-7], dtype = "uint32")#candidate|7198|(110,)|const|uint32
call_7196 = relay.TupleGetItem(func_811_call(relay.reshape(var_7197.astype('float32'), [1, 16, 9]), relay.reshape(const_7198.astype('uint32'), [22, 5]), ), 1)
call_7199 = relay.TupleGetItem(func_814_call(relay.reshape(var_7197.astype('float32'), [1, 16, 9]), relay.reshape(const_7198.astype('uint32'), [22, 5]), ), 1)
output = relay.Tuple([call_7155,call_7175,call_7180,call_7190,var_7191,call_7196,var_7197,const_7198,])
output2 = relay.Tuple([call_7156,call_7176,call_7181,call_7192,var_7191,call_7199,var_7197,const_7198,])
func_7211 = relay.Function([var_7191,var_7197,], output)
mod['func_7211'] = func_7211
mod = relay.transform.InferType()(mod)
var_7212 = relay.var("var_7212", dtype = "uint64", shape = (1210,))#candidate|7212|(1210,)|var|uint64
var_7213 = relay.var("var_7213", dtype = "float32", shape = (144,))#candidate|7213|(144,)|var|float32
output = func_7211(var_7212,var_7213,)
func_7214 = relay.Function([var_7212,var_7213,], output)
mutated_mod['func_7214'] = func_7214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5655_call = mod.get_global_var('func_5655')
func_5656_call = mutated_mod.get_global_var('func_5656')
call_7259 = func_5655_call()
call_7260 = func_5655_call()
func_6522_call = mod.get_global_var('func_6522')
func_6524_call = mutated_mod.get_global_var('func_6524')
call_7273 = relay.TupleGetItem(func_6522_call(), 4)
call_7274 = relay.TupleGetItem(func_6524_call(), 4)
func_2271_call = mod.get_global_var('func_2271')
func_2273_call = mutated_mod.get_global_var('func_2273')
call_7280 = func_2271_call()
call_7281 = func_2271_call()
func_972_call = mod.get_global_var('func_972')
func_976_call = mutated_mod.get_global_var('func_976')
const_7287 = relay.const(3, dtype = "uint64")#candidate|7287|()|const|uint64
var_7288 = relay.var("var_7288", dtype = "uint64", shape = (36,))#candidate|7288|(36,)|var|uint64
const_7289 = relay.const([-7,-3,-8,1,-5,3,-7,7,-8,-10,1,9,-4,1,-4,-8,-3,-5,9,1,6,-2,-4,-10,8,-5,-6,7,7,-7,-10,1,7,-4,-3,-2,8,-1,3,-7,3,-9,6,-10,2,3,4,5,9,10,6,-10,6,-9,3,9,9,5,-2,8,2,-7,-5,-10,4,8,-1,-6,-2,-5,10,10,-10,5,-2,9,6,2,8,10,1,-4,8,9,-5,-6,-6,6,-3,-1,6,1,-6,3,-7,8,1,-2,3,1,-4,5,-3,-10,-4,1,1,-9,-5,10,7,1,1,-1,5,-2,-8,10,10,8,-1,1,1,10,6,9,10,-5,3,5,7,6,-6,5,-8,-9,1,2,2,7,2,3,-6,-2,2,7,-9,-5,1,3,4,-8,-2,9,10,3,-4,3,5,-10,-5,8,-10,-10,-4,10,-5,-5,9,-2,-9,-3,3,2,-3,7,-9,-3,2,2,6,-4,-2,-7,-10,-4,-6,-2,4,7,4,5,-2,4,2,8,10,7,2,5,-3,-10,7,-7,6,6,9,3,2,5,-3,-9,6,3,10,-9,8,-3,3,-3,4,-9,5,-6,9,-8,-4,-3,5,-10,5,-9,1,7,-3,-3,4,-2,3,-5,-9,3,1,6,4,-2,-5,4,-4,2,-5,-4,8,-9,4,-1,8,6,2,5,8,-6,8,-3,-1,10,1,-7,10,9,-8,6,-6,5,-6,3,10,9,9,2,6,-8,-6,5,8,1,-4,-4,-1,8,3,-1,3,3,-9,-2,9,-1,4,2,-8,10,9,-2,-4,6,-4,-10,-7,8,2,-1,9,-7,-6,7,-9,7,2,6,2,3,1,4,8,1,2,-2,-4,6,-5,3,9,-2,1,-4,2,-2,3,-8,-10,3,-3,-4,4,-6,-10,-5,-10,7,4,6,-1,8,6,6,-9,7,6,10,9,10,-8,8,1,1,1,1,8,7,-9,10,-6,1,-8,3,-8,9,-8,-4,-6,-4,4,10,-7,6,4,4,-4,-1,6,10,-8,10,7,5], dtype = "int64")#candidate|7289|(396,)|const|int64
call_7286 = relay.TupleGetItem(func_972_call(relay.reshape(const_7287.astype('uint64'), []), relay.reshape(var_7288.astype('uint64'), [6, 6, 1]), relay.reshape(const_7289.astype('int64'), [396,]), ), 2)
call_7290 = relay.TupleGetItem(func_976_call(relay.reshape(const_7287.astype('uint64'), []), relay.reshape(var_7288.astype('uint64'), [6, 6, 1]), relay.reshape(const_7289.astype('int64'), [396,]), ), 2)
func_2370_call = mod.get_global_var('func_2370')
func_2372_call = mutated_mod.get_global_var('func_2372')
call_7297 = relay.TupleGetItem(func_2370_call(relay.reshape(call_7280.astype('bool'), [13, 5, 16])), 1)
call_7298 = relay.TupleGetItem(func_2372_call(relay.reshape(call_7280.astype('bool'), [13, 5, 16])), 1)
func_5939_call = mod.get_global_var('func_5939')
func_5942_call = mutated_mod.get_global_var('func_5942')
var_7319 = relay.var("var_7319", dtype = "bool", shape = (2, 104))#candidate|7319|(2, 104)|var|bool
call_7318 = relay.TupleGetItem(func_5939_call(relay.reshape(var_7319.astype('bool'), [208,])), 2)
call_7320 = relay.TupleGetItem(func_5942_call(relay.reshape(var_7319.astype('bool'), [208,])), 2)
uop_7327 = relay.sigmoid(call_7297.astype('float64')) # shape=(13, 5, 16)
uop_7329 = relay.sigmoid(call_7298.astype('float64')) # shape=(13, 5, 16)
output = relay.Tuple([call_7259,call_7273,call_7280,call_7286,const_7287,var_7288,const_7289,call_7318,var_7319,uop_7327,])
output2 = relay.Tuple([call_7260,call_7274,call_7281,call_7290,const_7287,var_7288,const_7289,call_7320,var_7319,uop_7329,])
func_7333 = relay.Function([var_7288,var_7319,], output)
mod['func_7333'] = func_7333
mod = relay.transform.InferType()(mod)
mutated_mod['func_7333'] = func_7333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7333_call = mutated_mod.get_global_var('func_7333')
var_7335 = relay.var("var_7335", dtype = "uint64", shape = (36,))#candidate|7335|(36,)|var|uint64
var_7336 = relay.var("var_7336", dtype = "bool", shape = (2, 104))#candidate|7336|(2, 104)|var|bool
call_7334 = func_7333_call(var_7335,var_7336,)
output = call_7334
func_7337 = relay.Function([var_7335,var_7336,], output)
mutated_mod['func_7337'] = func_7337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3841_call = mod.get_global_var('func_3841')
func_3842_call = mutated_mod.get_global_var('func_3842')
call_7362 = relay.TupleGetItem(func_3841_call(), 1)
call_7363 = relay.TupleGetItem(func_3842_call(), 1)
output = call_7362
output2 = call_7363
func_7365 = relay.Function([], output)
mod['func_7365'] = func_7365
mod = relay.transform.InferType()(mod)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7365_call = mutated_mod.get_global_var('func_7365')
call_7366 = func_7365_call()
output = call_7366
func_7367 = relay.Function([], output)
mutated_mod['func_7367'] = func_7367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3855_call = mod.get_global_var('func_3855')
func_3856_call = mutated_mod.get_global_var('func_3856')
call_7473 = relay.TupleGetItem(func_3855_call(), 0)
call_7474 = relay.TupleGetItem(func_3856_call(), 0)
output = relay.Tuple([call_7473,])
output2 = relay.Tuple([call_7474,])
func_7476 = relay.Function([], output)
mod['func_7476'] = func_7476
mod = relay.transform.InferType()(mod)
output = func_7476()
func_7477 = relay.Function([], output)
mutated_mod['func_7477'] = func_7477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3787_call = mod.get_global_var('func_3787')
func_3788_call = mutated_mod.get_global_var('func_3788')
call_7519 = func_3787_call()
call_7520 = func_3787_call()
output = call_7519
output2 = call_7520
func_7523 = relay.Function([], output)
mod['func_7523'] = func_7523
mod = relay.transform.InferType()(mod)
output = func_7523()
func_7524 = relay.Function([], output)
mutated_mod['func_7524'] = func_7524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_788_call = mod.get_global_var('func_788')
func_789_call = mutated_mod.get_global_var('func_789')
call_7587 = func_788_call()
call_7588 = func_788_call()
output = call_7587
output2 = call_7588
func_7594 = relay.Function([], output)
mod['func_7594'] = func_7594
mod = relay.transform.InferType()(mod)
mutated_mod['func_7594'] = func_7594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7594_call = mutated_mod.get_global_var('func_7594')
call_7595 = func_7594_call()
output = call_7595
func_7596 = relay.Function([], output)
mutated_mod['func_7596'] = func_7596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6374_call = mod.get_global_var('func_6374')
func_6375_call = mutated_mod.get_global_var('func_6375')
call_7624 = func_6374_call()
call_7625 = func_6374_call()
output = call_7624
output2 = call_7625
func_7627 = relay.Function([], output)
mod['func_7627'] = func_7627
mod = relay.transform.InferType()(mod)
mutated_mod['func_7627'] = func_7627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7627_call = mutated_mod.get_global_var('func_7627')
call_7628 = func_7627_call()
output = call_7628
func_7629 = relay.Function([], output)
mutated_mod['func_7629'] = func_7629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7677 = relay.var("var_7677", dtype = "uint32", shape = (12, 6, 7))#candidate|7677|(12, 6, 7)|var|uint32
const_7678 = relay.const([[[8,-2,-4,-2,-7,-7,-3],[6,-4,4,5,2,3,-8],[-3,10,-6,2,-3,-4,-7],[7,7,3,-8,3,-4,-9],[-9,2,5,-7,6,10,-4],[-10,-7,-10,-10,-8,-1,2]],[[-7,2,9,-10,-8,5,4],[5,-2,-8,2,5,-4,10],[3,-1,-6,6,9,-10,-1],[-2,2,5,-2,5,5,-6],[3,4,-2,8,-8,-3,-10],[-7,-10,10,-6,-6,-9,4]],[[2,-3,-6,3,-2,5,-7],[8,-1,-10,3,3,-4,10],[1,-9,4,8,-9,-7,3],[-2,10,8,4,-4,-8,8],[5,5,-2,7,-6,-5,7],[7,-3,2,8,9,-8,9]],[[-8,-7,-5,-7,7,-2,-10],[-2,-8,-10,-8,6,-2,10],[-6,7,-5,8,-7,6,10],[10,4,10,-1,-3,-3,-6],[4,7,6,7,-8,-1,2],[2,-5,4,2,-1,6,-3]],[[5,-6,-9,2,-6,-7,3],[-1,5,-7,-6,4,-8,-3],[9,3,-9,-4,3,2,-4],[-6,-6,2,-2,6,3,-8],[-2,-3,-8,6,7,-6,7],[-2,8,8,8,-7,-10,-10]],[[2,-3,-10,-7,5,8,7],[-6,5,-3,-7,8,2,10],[10,-6,10,7,6,-10,1],[-6,-3,1,10,10,-7,-7],[-6,5,-6,6,-10,8,1],[10,-6,-2,-9,-9,-9,8]],[[-7,-6,-1,9,-2,3,-10],[-10,1,-4,-4,-7,9,4],[5,5,7,7,2,5,-10],[6,1,2,-3,8,5,2],[1,4,-10,-10,-2,-4,10],[8,8,-2,9,-9,-2,-2]],[[2,3,-2,9,-7,8,3],[-4,9,-5,-6,-6,-10,-7],[-1,9,7,-7,10,10,5],[5,-7,-3,10,7,-4,3],[7,-8,1,4,-9,6,8],[-7,3,1,2,8,1,-8]],[[-8,10,-10,-8,6,-10,4],[6,-1,5,6,4,7,8],[9,2,8,5,-2,3,-6],[7,-9,3,8,4,1,10],[1,-7,-7,-10,-3,-6,-9],[-5,2,-8,-6,10,9,8]],[[1,-10,-9,3,-6,-4,7],[5,9,-2,3,1,-10,-5],[-5,1,-4,-8,-7,-10,1],[3,-2,-5,-10,3,8,-5],[4,-9,5,-7,-10,2,4],[-10,6,5,4,10,-1,-9]],[[6,7,-6,-3,6,-1,-4],[4,5,-5,7,-10,1,5],[4,1,10,3,6,-6,-3],[9,-10,-5,6,9,-1,-4],[-2,6,-5,-7,7,-10,4],[-7,4,6,8,-10,-3,-8]],[[9,-9,-3,6,-2,-10,3],[-3,-5,-5,6,-3,-5,9],[-4,-4,-8,-6,8,8,5],[10,-7,4,-3,3,2,-6],[-10,5,-3,-9,-2,4,6],[-9,-10,-8,1,-3,3,-8]]], dtype = "uint32")#candidate|7678|(12, 6, 7)|const|uint32
bop_7679 = relay.less(var_7677.astype('bool'), relay.reshape(const_7678.astype('bool'), relay.shape_of(var_7677))) # shape=(12, 6, 7)
output = relay.Tuple([bop_7679,])
output2 = relay.Tuple([bop_7679,])
func_7685 = relay.Function([var_7677,], output)
mod['func_7685'] = func_7685
mod = relay.transform.InferType()(mod)
mutated_mod['func_7685'] = func_7685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7686 = relay.var("var_7686", dtype = "uint32", shape = (12, 6, 7))#candidate|7686|(12, 6, 7)|var|uint32
func_7685_call = mutated_mod.get_global_var('func_7685')
call_7687 = func_7685_call(var_7686)
output = call_7687
func_7688 = relay.Function([var_7686], output)
mutated_mod['func_7688'] = func_7688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_818_call = mod.get_global_var('func_818')
func_820_call = mutated_mod.get_global_var('func_820')
call_7727 = func_818_call()
call_7728 = func_818_call()
func_6253_call = mod.get_global_var('func_6253')
func_6260_call = mutated_mod.get_global_var('func_6260')
const_7740 = relay.const([-1,8,7,7,-4,-8,-4,9,-10,-10,-5,1,-1,3,-8,-3,9,9,1,-7,-10,1,6,5,-6,-2,-9,4,1,2], dtype = "int16")#candidate|7740|(30,)|const|int16
var_7741 = relay.var("var_7741", dtype = "int16", shape = (120,))#candidate|7741|(120,)|var|int16
var_7742 = relay.var("var_7742", dtype = "int16", shape = (180, 1))#candidate|7742|(180, 1)|var|int16
var_7743 = relay.var("var_7743", dtype = "float64", shape = (78, 1))#candidate|7743|(78, 1)|var|float64
var_7744 = relay.var("var_7744", dtype = "float32", shape = (720,))#candidate|7744|(720,)|var|float32
call_7739 = relay.TupleGetItem(func_6253_call(relay.reshape(const_7740.astype('int16'), [30,]), relay.reshape(var_7741.astype('int16'), [120,]), relay.reshape(var_7742.astype('int16'), [180,]), relay.reshape(var_7743.astype('float64'), [78,]), relay.reshape(var_7744.astype('float32'), [720,]), ), 10)
call_7745 = relay.TupleGetItem(func_6260_call(relay.reshape(const_7740.astype('int16'), [30,]), relay.reshape(var_7741.astype('int16'), [120,]), relay.reshape(var_7742.astype('int16'), [180,]), relay.reshape(var_7743.astype('float64'), [78,]), relay.reshape(var_7744.astype('float32'), [720,]), ), 10)
output = relay.Tuple([call_7727,call_7739,const_7740,var_7741,var_7742,var_7743,var_7744,])
output2 = relay.Tuple([call_7728,call_7745,const_7740,var_7741,var_7742,var_7743,var_7744,])
func_7750 = relay.Function([var_7741,var_7742,var_7743,var_7744,], output)
mod['func_7750'] = func_7750
mod = relay.transform.InferType()(mod)
mutated_mod['func_7750'] = func_7750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7750_call = mutated_mod.get_global_var('func_7750')
var_7752 = relay.var("var_7752", dtype = "int16", shape = (120,))#candidate|7752|(120,)|var|int16
var_7753 = relay.var("var_7753", dtype = "int16", shape = (180, 1))#candidate|7753|(180, 1)|var|int16
var_7754 = relay.var("var_7754", dtype = "float64", shape = (78, 1))#candidate|7754|(78, 1)|var|float64
var_7755 = relay.var("var_7755", dtype = "float32", shape = (720,))#candidate|7755|(720,)|var|float32
call_7751 = func_7750_call(var_7752,var_7753,var_7754,var_7755,)
output = call_7751
func_7756 = relay.Function([var_7752,var_7753,var_7754,var_7755,], output)
mutated_mod['func_7756'] = func_7756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6157_call = mod.get_global_var('func_6157')
func_6159_call = mutated_mod.get_global_var('func_6159')
call_7842 = relay.TupleGetItem(func_6157_call(), 0)
call_7843 = relay.TupleGetItem(func_6159_call(), 0)
uop_7868 = relay.sin(call_7842.astype('float32')) # shape=(13, 5, 16)
uop_7870 = relay.sin(call_7843.astype('float32')) # shape=(13, 5, 16)
func_6669_call = mod.get_global_var('func_6669')
func_6670_call = mutated_mod.get_global_var('func_6670')
call_7873 = relay.TupleGetItem(func_6669_call(), 0)
call_7874 = relay.TupleGetItem(func_6670_call(), 0)
uop_7877 = relay.erf(call_7873.astype('float64')) # shape=(8, 6, 15)
uop_7879 = relay.erf(call_7874.astype('float64')) # shape=(8, 6, 15)
uop_7895 = relay.log2(call_7873.astype('float32')) # shape=(8, 6, 15)
uop_7897 = relay.log2(call_7874.astype('float32')) # shape=(8, 6, 15)
func_3226_call = mod.get_global_var('func_3226')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_7899 = relay.TupleGetItem(func_3226_call(), 1)
call_7900 = relay.TupleGetItem(func_3228_call(), 1)
var_7901 = relay.var("var_7901", dtype = "float32", shape = (8, 6, 15))#candidate|7901|(8, 6, 15)|var|float32
bop_7902 = relay.logical_xor(call_7873.astype('uint16'), relay.reshape(var_7901.astype('uint16'), relay.shape_of(call_7873))) # shape=(8, 6, 15)
bop_7905 = relay.logical_xor(call_7874.astype('uint16'), relay.reshape(var_7901.astype('uint16'), relay.shape_of(call_7874))) # shape=(8, 6, 15)
const_7906 = relay.const([[[-5,9,-4,-7,10,-8,-5,1,2,4,-2,2,-7,7,-10],[4,-9,1,1,2,9,-10,4,4,7,-7,-2,-7,3,7],[-10,-9,5,2,9,-9,5,-3,-5,4,-4,10,-1,-7,4],[10,-6,-3,-10,-8,1,9,9,7,-8,5,-4,-10,-4,1],[-2,2,-1,-8,1,2,-5,10,-3,-9,1,-5,-1,-2,-3],[-2,4,-2,8,8,7,-1,-8,-8,9,-2,-3,7,-1,10]],[[-2,8,6,-10,1,4,-7,2,-8,-6,10,-9,-4,-9,-5],[-8,1,2,-5,2,2,4,2,5,-6,1,9,-1,8,10],[10,10,-4,-9,-7,-7,-8,8,-6,-4,-4,-10,-4,-7,-4],[-6,5,-6,-8,-1,5,-4,8,-4,7,-9,-2,-7,4,9],[-1,2,10,-6,-2,-5,-3,-1,3,5,3,4,-5,-2,-4],[-6,-9,-10,6,-9,-1,7,-3,4,4,-7,-5,2,1,8]],[[-8,-10,-3,-6,-4,-9,-9,-10,-7,-10,6,-7,10,1,-5],[7,-1,10,7,5,3,6,-2,-4,-3,-9,-2,9,6,-5],[9,4,-9,6,-2,-7,6,-7,-2,-9,-7,-3,5,-3,2],[-3,8,-2,4,4,2,-1,7,-9,10,3,6,-6,-7,-3],[-5,-1,4,3,-5,5,8,-6,-5,5,2,-3,-5,-1,-8],[-3,-1,-9,2,-2,-8,-2,3,1,-2,-3,4,5,7,-4]],[[-2,-1,3,-7,-1,-10,6,-7,-2,8,7,-8,-9,2,3],[-4,-1,8,-4,-9,-6,6,-2,2,3,6,1,-1,-1,8],[-7,8,7,3,3,-10,10,-2,1,4,3,-2,-8,-7,-5],[2,1,-1,-8,-2,6,-1,-8,-9,-6,-2,5,-5,8,9],[-1,7,-10,10,3,-8,-4,7,1,-10,9,8,-8,4,-7],[9,-3,-9,7,3,-1,-10,2,-6,3,2,10,3,-4,-3]],[[-9,8,3,7,7,9,-10,3,-6,5,-5,-1,-8,2,-3],[-3,-1,6,-10,-1,2,-7,1,-6,-6,-8,7,-3,-6,-7],[2,-9,10,-7,8,-9,10,-5,-3,7,2,-10,7,-6,-10],[9,-2,7,6,4,3,-6,-9,-3,-2,2,10,-4,7,7],[4,9,6,10,9,-8,7,-5,-5,-1,-1,-4,6,7,10],[9,1,2,4,-1,-5,-5,-3,1,1,8,6,4,-9,-5]],[[4,-5,-4,4,8,-2,4,-5,2,-6,1,-6,5,-1,10],[5,2,10,-6,5,-10,5,8,1,-10,-2,3,8,-7,-4],[4,2,-9,1,7,-7,3,-10,-6,1,-2,-8,1,2,-4],[-5,-6,-4,9,10,1,2,-1,-7,5,-4,-2,-9,8,-9],[10,5,-10,10,-6,5,8,-3,10,-8,9,10,-4,-4,-2],[7,6,-9,10,-8,-10,6,-10,6,1,5,-6,1,5,4]],[[-8,-1,-2,-5,-10,1,-7,7,-5,9,7,-6,-10,2,-4],[-5,7,1,8,6,-10,-7,3,4,7,4,7,6,10,-5],[6,9,9,7,-7,-5,-9,3,8,-1,-9,10,6,-5,6],[1,3,-7,3,10,-6,-8,-9,6,6,-4,-2,-3,10,5],[10,-10,-9,5,-3,-3,-2,-4,9,10,-7,10,-9,-10,-3],[-7,-2,-7,-7,4,-9,-1,-7,4,4,1,8,-3,-4,-6]],[[-7,-9,-3,1,-9,2,-1,9,-5,-3,-6,-10,-4,1,-3],[5,1,8,-8,-6,3,7,8,-3,-8,1,9,-8,4,2],[-8,9,9,-5,-8,8,-6,7,-2,6,7,5,9,-8,3],[-4,7,10,3,-6,6,-4,8,6,-2,-9,-10,-4,8,-5],[3,1,3,5,9,-8,-5,7,4,3,-8,4,7,-8,-1],[5,10,-4,-9,10,-2,3,9,-1,5,-10,6,-10,3,5]]], dtype = "uint16")#candidate|7906|(8, 6, 15)|const|uint16
bop_7907 = relay.equal(bop_7902.astype('bool'), relay.reshape(const_7906.astype('bool'), relay.shape_of(bop_7902))) # shape=(8, 6, 15)
bop_7910 = relay.equal(bop_7905.astype('bool'), relay.reshape(const_7906.astype('bool'), relay.shape_of(bop_7905))) # shape=(8, 6, 15)
func_4189_call = mod.get_global_var('func_4189')
func_4191_call = mutated_mod.get_global_var('func_4191')
call_7914 = relay.TupleGetItem(func_4189_call(), 0)
call_7915 = relay.TupleGetItem(func_4191_call(), 0)
func_811_call = mod.get_global_var('func_811')
func_814_call = mutated_mod.get_global_var('func_814')
const_7922 = relay.const([-6.980414,4.980148,7.516625,4.483745,3.843923,-4.290316,-4.651926,-4.160671,3.026836,0.477087,-2.694448,-8.509947,-5.977107,-2.710303,5.839195,2.704279,-8.190100,-2.882020,0.959678,-8.670967,3.899533,-6.998969,-1.134693,5.227374,8.629281,-5.265705,-3.101286,0.747564,-3.425078,0.077911,3.033765,5.007829,6.024052,8.549435,-4.892727,3.589511,-5.998631,8.654986,-9.598960,-8.580615,-4.279626,-3.665969,1.641542,5.313842,3.968894,-4.682018,-4.777444,4.457740,1.958903,-5.283407,-0.025830,7.182504,2.365146,5.853459,-7.061851,-3.183827,8.501657,2.963002,-4.508697,-4.297108,9.045385,-0.964916,3.265890,4.303411,-0.733513,-0.269391,7.997298,6.487653,-5.879976,9.484434,-1.134109,2.871266,-0.967178,-4.940126,-7.446507,-4.890509,8.264833,9.885634,-4.548741,8.084970,-0.195872,3.633540,-3.078267,9.354939,-7.689583,3.580446,-2.708197,-4.731585,3.488481,0.115784,4.439624,-9.622730,-5.549657,3.692224,-7.102554,0.867354,-3.100307,7.324855,8.325875,-3.504178,8.209479,-4.639411,-3.193617,-6.345278,7.817777,2.144861,8.542026,-3.908822,4.041840,9.599261,-4.372555,4.915854,4.371058,9.679240,6.724904,-0.319087,9.560178,-9.487179,9.640603,-3.531601,-2.754248,-7.837682,0.418956,4.505420,-9.121995,-6.599097,8.572004,-6.595383,-1.651047,0.966534,0.203079,-6.997262,-2.258427,-7.118403,5.934194,-5.551629,9.556632,-6.066682,2.581187,5.081832,-5.439830,8.639189,1.180702,-1.444416], dtype = "float32")#candidate|7922|(144,)|const|float32
const_7923 = relay.const([-4,-4,1,1,7,6,-2,-7,-7,-7,4,-9,-6,-8,5,-5,-6,-10,-7,4,8,4,-6,4,2,4,-3,-10,-9,8,-10,7,-3,4,9,6,7,5,2,7,-3,9,3,7,-10,5,9,7,-8,4,6,-5,9,-6,-1,5,5,2,-5,-9,-3,4,-8,-3,-9,-6,-4,-10,10,6,-1,9,-4,4,-9,2,-7,3,-7,-4,3,5,-8,4,3,1,-8,-9,-3,-2,8,-6,2,2,8,-10,-3,-10,-10,-1,2,-6,-4,5,-2,10,4,-6,-5,-8], dtype = "uint32")#candidate|7923|(110,)|const|uint32
call_7921 = relay.TupleGetItem(func_811_call(relay.reshape(const_7922.astype('float32'), [1, 16, 9]), relay.reshape(const_7923.astype('uint32'), [22, 5]), ), 4)
call_7924 = relay.TupleGetItem(func_814_call(relay.reshape(const_7922.astype('float32'), [1, 16, 9]), relay.reshape(const_7923.astype('uint32'), [22, 5]), ), 4)
output = relay.Tuple([uop_7868,uop_7877,uop_7895,call_7899,bop_7907,call_7914,call_7921,const_7922,const_7923,])
output2 = relay.Tuple([uop_7870,uop_7879,uop_7897,call_7900,bop_7910,call_7915,call_7924,const_7922,const_7923,])
func_7931 = relay.Function([var_7901,], output)
mod['func_7931'] = func_7931
mod = relay.transform.InferType()(mod)
mutated_mod['func_7931'] = func_7931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7932 = relay.var("var_7932", dtype = "float32", shape = (8, 6, 15))#candidate|7932|(8, 6, 15)|var|float32
func_7931_call = mutated_mod.get_global_var('func_7931')
call_7933 = func_7931_call(var_7932)
output = call_7933
func_7934 = relay.Function([var_7932], output)
mutated_mod['func_7934'] = func_7934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6342_call = mod.get_global_var('func_6342')
func_6343_call = mutated_mod.get_global_var('func_6343')
call_7986 = relay.TupleGetItem(func_6342_call(), 2)
call_7987 = relay.TupleGetItem(func_6343_call(), 2)
func_3461_call = mod.get_global_var('func_3461')
func_3462_call = mutated_mod.get_global_var('func_3462')
call_8009 = func_3461_call()
call_8010 = func_3461_call()
func_6342_call = mod.get_global_var('func_6342')
func_6343_call = mutated_mod.get_global_var('func_6343')
call_8021 = relay.TupleGetItem(func_6342_call(), 2)
call_8022 = relay.TupleGetItem(func_6343_call(), 2)
output = relay.Tuple([call_7986,call_8009,call_8021,])
output2 = relay.Tuple([call_7987,call_8010,call_8022,])
func_8023 = relay.Function([], output)
mod['func_8023'] = func_8023
mod = relay.transform.InferType()(mod)
output = func_8023()
func_8024 = relay.Function([], output)
mutated_mod['func_8024'] = func_8024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5266_call = mod.get_global_var('func_5266')
func_5268_call = mutated_mod.get_global_var('func_5268')
call_8028 = func_5266_call()
call_8029 = func_5266_call()
func_3257_call = mod.get_global_var('func_3257')
func_3261_call = mutated_mod.get_global_var('func_3261')
const_8042 = relay.const([-8.246518,-8.965725,6.134176,3.230075,3.400504,7.315256,-6.626646,-5.466533,-8.643764,7.458472,0.064436,-2.933130,-1.657134,5.819589,5.821290,-7.154104,5.446031,7.649955,-8.440404,-0.654590,4.535331,6.813162,-9.435740,6.548475,-5.811497,8.892161,6.340794,-1.346828,7.938563,-6.087985,3.160504,3.734341,8.069392,4.468320,7.952817,8.464551,5.149728,-1.282836,-1.171163,4.772096,-2.154221,-9.397395,-4.394451,4.787405,-3.265832,-2.212560,-3.171690,8.609991,1.640088,1.743199,-9.644078,8.449484,9.041256,-6.692375,4.633723,-7.406641,-6.093236,8.355452,1.400546,-8.852369,-3.512055,4.158608,-3.129918,-2.746593,-0.181161,-2.923654,4.390232,-0.472528,5.914303,-7.265406,-0.982489,-7.138117,-1.920980,3.522318,-6.356027,8.661292,4.572525,9.569811], dtype = "float64")#candidate|8042|(78,)|const|float64
const_8043 = relay.const([4.809547,9.943429,0.180653,0.350069,-4.762004,3.312907,8.021471,9.222375,6.204729,4.794403,-8.521546,2.245015,-2.101482,-2.796706,-8.659356,0.489430,4.687327,-0.994944,-7.822247,-6.383238,-2.159558,-3.572901,4.616992,0.717382,-3.816317,8.332691,6.378726,-5.477082,4.139761,-5.427894,-5.541729,-9.956892,-2.388901,-7.663574,-3.830163,5.946951,-7.248760,-6.275722,9.379537,5.406133,6.971358,-1.753757,9.400318,-3.392568,4.905842,-2.936118,-2.698089,-3.672164,-7.783038,4.196420,6.131182,0.613715,-3.366664,2.093605,6.497039,-1.435525,1.586252,7.167318,3.829871,-8.035107,-0.757552,8.499696,3.587534,1.260256,-1.546466,-5.157112,9.559241,-5.342537,-2.909273,4.678543,-6.441647,-6.991587,8.574580,-7.613724,5.527264,5.765495,0.118782,-0.072071,-8.356080,-7.107659,-2.834654,-0.964725,-7.231258,-5.547418,3.490691,-0.803665,0.578264,3.495018,3.101555,0.470565,-0.553396,-2.362732,9.671988,-4.230955,1.424876,6.524421,-2.037506,8.322542,-6.853767,5.641745,-6.244837,2.935061,-5.841031,-5.959175,-4.381312,-8.196743,-0.044454,-3.545034,4.536422,-7.964050,-6.646177,-8.070987,5.958387,1.043878,2.015350,3.738208,6.497640,3.970003,-9.543264,3.589206,-6.476372,2.000055,-0.848152,-1.196107,0.437924,-8.493373,-4.240105,-4.511240,5.331061,4.472801,-0.299633,-0.492806,3.600215,7.727456,9.701387,-0.556722,-0.959741,-5.071429,-7.886534,-5.933445,6.368901,4.719125,6.798702,-0.989836,1.886285,-2.427278,-0.262624,8.266833,-3.793383,6.487035,5.626913,8.578417,-5.914059,3.092510,0.553868,-3.801067,-4.017394,-4.728403,7.801406,-7.878565,6.652723,-9.859834,7.671712,9.812020,-9.405521,7.032077,5.615608,6.690620,8.056917,-0.952543,-7.495280,2.414340,-7.051121,-8.777676,-5.981637,-8.161284,9.650771,-7.396705,4.071131,1.792376,-5.475561,6.897596,8.891549,5.014972,7.276766,7.040390,-5.144612,7.937163,5.814965,-1.972204,-0.308664,3.300011,5.223816,8.758408,7.949108,-5.650434,3.936348,9.872927,-3.838698,8.918146,-3.257300,4.308863,-2.030704,1.894415,8.919359,8.912214,2.231519,2.776293,-3.451759,9.340145,7.745693,-0.565455,1.696165,-3.952491,-2.245251,-9.966209,-9.224489,-0.575714,-2.867588,-0.300045,4.325055,0.067613,-8.058475,-0.364399,6.864791,1.354574,9.044022,-4.877019,3.492814,4.591816,-1.871457,0.895505,0.883842,9.116079,8.277073,0.021117,-7.229766,8.491242,-2.490255,3.231932,7.174419,-5.989576,-9.218353,-0.313218,2.751708,-7.575485,5.594717,5.032323,9.789854,-3.091770,-5.591351,0.655572,-6.702799,-5.303260,-2.952086,4.524791,-1.869307,8.396270,-1.913967,-9.086591,9.627789,3.840325,-5.781579,0.498799,-8.353217,2.963872,-7.853102,0.473021,9.732811,2.145572,7.358848,-0.055891,-3.460377,0.825658,5.106450,6.395769,-0.702758,9.659783,7.356327,-7.990700,-5.172451,-9.661772,-6.831029,1.660722,2.517089,-0.793479,9.064056,-7.033527,-9.432091,-7.709362,-7.669975,-8.719978,1.953626,7.081041,-3.871406,-6.371432,9.729200,3.956360,-2.489732,-9.990849,1.953891,-4.600429,8.709382,2.200476,-9.221296,6.564822,6.549955,0.301579,9.671505,8.283647,-9.028212,-1.831864,-1.029525,-7.762656,-0.750845,5.935021,9.808307,8.487987,-7.765481,-1.068526,-6.682116,2.736692,4.302497,-0.548480,-8.837438,-0.413545,5.124180,-3.004647,0.990893,-6.279016,6.996335,6.215685,-2.397749,2.248548,5.254086,1.546691,0.037461,2.113525,-9.271357,6.200427,4.244176,9.733763,-8.299108,2.437457,-9.506851,-7.689890,3.105016,-6.483661,-9.158630,-5.983264,9.465231,1.735368,8.754157,5.311616,0.268462,-1.972714,4.115835,8.196006,6.527863,4.962878,7.673690,-0.443388,7.110934,-2.086965,-5.495270,-3.879714,-7.845742,8.880747,-4.979261,0.254675,0.660076,9.463495,-4.951704,7.202561,7.398306,4.870976,-3.537446,4.243031,5.215037,0.330101,-4.745938,0.088762,7.061305,-9.101892,-7.987606,1.197597,4.535762,-3.336525,-9.447558,-1.497779,-7.495192,-0.969179,6.146058,-0.001214,6.419761,-0.193616,3.674830,-8.475685,-7.843250,1.397191,7.362482,0.146289,3.178197,-6.709696,8.875544,1.953318,-6.677836,-9.475739,6.592290,-9.445773,-3.685504,-0.718742,0.493823,-0.824650,-5.830586,-1.189480,8.761409,-6.059314,9.557436,-9.444949,7.843639,-7.095187,9.892268,4.474840,2.613939,2.367760,0.103205,-4.373209,-1.791499,-1.850910,-2.771729,-2.826518,-5.590517,-8.405836,0.384454,-6.469053,-4.144684,8.977047,3.454354,-4.142213,-9.482751,-3.551722,0.815864,-9.217931,-9.846567,-4.612894,2.584615,-9.385860,-0.148880,7.489744,7.945291,-7.186560,-1.934250,3.972762,2.490427,2.723421,6.861573,5.055770,-0.366041,-0.365253,-1.208214,8.258271,-4.442295,-3.208639,-8.603293,-5.640818,2.400841,1.380666,-6.176367,-2.103506,-0.071612,-7.544259,8.709732,-3.546637,6.806607,-0.921969,-7.441230,-5.356231,2.489720,2.214499,-9.750941,4.268248,-2.186125,-7.699063,9.000680,-1.130563,-4.849180,0.597751,-0.805535,6.675201,9.060900,-5.578371,5.992327,-3.752312,9.368799,-4.343232,2.942765,0.624704,-7.561757,7.241744,-6.944607,2.318569,-8.103149,2.931834,-1.548839,-7.015191,-6.240554,2.984220,1.463613,2.467931,5.130372,4.035843,6.510811,3.031548,-6.387234,-0.209872,-7.859051,3.242107,-4.120458,-0.879944,5.397132,-7.291378,5.188163,3.092201,3.930984,6.511962,-8.404322,-0.395211,5.860869,9.193150,-6.857944,3.065814,0.449310,0.944131,0.405280,-2.325623,-2.990892,-8.725799,5.104760,0.926498,-9.511476,2.621573,1.781614,3.104208,4.673614,-8.853091,-7.239773,5.534447,-6.124181,3.026912,-7.677348,-0.920294,7.635397,-3.330577,-1.207356,7.880984,-5.698938,1.454683,-2.972036,-7.330732,5.710373,5.414599,-1.186552,6.366898,3.569537,-9.400134,-0.787445,2.416729,-1.643831,-6.293807,5.739327,7.010845,8.895578,9.806389,0.803081,1.652903,-9.398404,-2.176098,4.448767,2.385733,0.736079,-1.732661,-5.161474,3.707433,7.814985,2.039406,7.915029,-9.551692,0.470066,1.497472,-5.993115,8.242689,0.870726,1.093685,2.887764,-0.451377,9.543222,-3.976271,-2.859165,-8.199078,-9.565577,-9.418204,-6.186089,-9.467435,-3.585495,8.929463,-1.350295,9.460568,-3.112099,4.521244,2.086837,-1.521671,-2.444048,-1.778114,-8.385894,9.498857,-8.212355,7.330454,-8.700974,-5.499226,8.768981,0.805890,-9.962087,1.325282,-0.740333,-9.104087,-3.191414,-5.036806,1.639777,9.448958,8.607875,-0.715296,-7.608616,-4.458783,6.718867,5.289853,-5.051457,4.151718,4.511429,-8.751967,1.612179,2.940088,7.675422,-5.320219,-3.262398,5.220781,-0.695998,9.183806,9.682641,-7.562800,-4.989239,2.959755,-5.280971,4.977773,2.177987,9.302134,-7.627684,0.958614,-2.466322,6.390998,8.637726,-1.736908,-9.788399,3.666116,-9.827036,6.475796,9.768887,7.784221,5.139126,-5.966964,-5.336087,2.787332,-3.345244,0.772907,-2.535448,-8.443552,7.497874,-3.335792,-0.234757,4.597815,5.473397,-2.311977,3.068676,-0.015904,-7.393001,2.696228,3.423726,-4.798837,9.567586,-3.589083,-5.425891,-6.113213,-9.172730,4.861642,-7.730121,6.572189,1.965655,-8.414576,2.669908,2.031663,9.676890,9.048555,9.500747,6.009280,9.866888,3.754128,-5.600692,1.102865,-7.075436,2.794320,0.847720,-3.585181,-7.731740,5.785493,6.065451,-0.878776,0.501046,8.635704,8.567428,-3.693665], dtype = "float32")#candidate|8043|(720,)|const|float32
call_8041 = relay.TupleGetItem(func_3257_call(relay.reshape(const_8042.astype('float64'), [1, 13, 6]), relay.reshape(const_8043.astype('float32'), [720,]), ), 0)
call_8044 = relay.TupleGetItem(func_3261_call(relay.reshape(const_8042.astype('float64'), [1, 13, 6]), relay.reshape(const_8043.astype('float32'), [720,]), ), 0)
output = relay.Tuple([call_8028,call_8041,const_8042,const_8043,])
output2 = relay.Tuple([call_8029,call_8044,const_8042,const_8043,])
func_8056 = relay.Function([], output)
mod['func_8056'] = func_8056
mod = relay.transform.InferType()(mod)
output = func_8056()
func_8057 = relay.Function([], output)
mutated_mod['func_8057'] = func_8057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1946_call = mod.get_global_var('func_1946')
func_1948_call = mutated_mod.get_global_var('func_1948')
call_8137 = func_1946_call()
call_8138 = func_1946_call()
func_4744_call = mod.get_global_var('func_4744')
func_4745_call = mutated_mod.get_global_var('func_4745')
call_8145 = func_4744_call()
call_8146 = func_4744_call()
func_7333_call = mod.get_global_var('func_7333')
func_7337_call = mutated_mod.get_global_var('func_7337')
const_8149 = relay.const([3,1,-9,-3,-7,-4,-5,-1,4,2,-4,-6,7,-3,9,6,-4,-3,3,-4,8,3,2,-4,3,-4,-10,-6,-6,-3,-5,-9,6,-1,-8,9], dtype = "uint64")#candidate|8149|(36,)|const|uint64
var_8150 = relay.var("var_8150", dtype = "bool", shape = (1, 208))#candidate|8150|(1, 208)|var|bool
call_8148 = relay.TupleGetItem(func_7333_call(relay.reshape(const_8149.astype('uint64'), [36,]), relay.reshape(var_8150.astype('bool'), [2, 104]), ), 3)
call_8151 = relay.TupleGetItem(func_7337_call(relay.reshape(const_8149.astype('uint64'), [36,]), relay.reshape(var_8150.astype('bool'), [2, 104]), ), 3)
bop_8184 = relay.less(var_8150.astype('bool'), call_8148.astype('bool')) # shape=(6, 6, 208)
bop_8187 = relay.less(var_8150.astype('bool'), call_8151.astype('bool')) # shape=(6, 6, 208)
func_5298_call = mod.get_global_var('func_5298')
func_5299_call = mutated_mod.get_global_var('func_5299')
call_8198 = relay.TupleGetItem(func_5298_call(), 0)
call_8199 = relay.TupleGetItem(func_5299_call(), 0)
uop_8201 = relay.log10(call_8198.astype('float64')) # shape=(16, 11, 11)
uop_8203 = relay.log10(call_8199.astype('float64')) # shape=(16, 11, 11)
uop_8206 = relay.exp(call_8148.astype('float32')) # shape=(6, 6, 1)
uop_8208 = relay.exp(call_8151.astype('float32')) # shape=(6, 6, 1)
output = relay.Tuple([call_8137,call_8145,const_8149,bop_8184,uop_8201,uop_8206,])
output2 = relay.Tuple([call_8138,call_8146,const_8149,bop_8187,uop_8203,uop_8208,])
F = relay.Function([var_8150,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8150,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

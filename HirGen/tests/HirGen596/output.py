import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_688 = relay.var("var_688", dtype = "float32", shape = (8, 6, 10))#candidate|688|(8, 6, 10)|var|float32
uop_689 = relay.rsqrt(var_688.astype('float32')) # shape=(8, 6, 10)
output = uop_689
output2 = uop_689
func_696 = relay.Function([var_688,], output)
mod['func_696'] = func_696
mod = relay.transform.InferType()(mod)
var_697 = relay.var("var_697", dtype = "float32", shape = (8, 6, 10))#candidate|697|(8, 6, 10)|var|float32
output = func_696(var_697)
func_698 = relay.Function([var_697], output)
mutated_mod['func_698'] = func_698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_844 = relay.var("var_844", dtype = "float32", shape = (7, 7, 16))#candidate|844|(7, 7, 16)|var|float32
var_845 = relay.var("var_845", dtype = "float32", shape = (7, 7, 16))#candidate|845|(7, 7, 16)|var|float32
bop_846 = relay.mod(var_844.astype('float32'), relay.reshape(var_845.astype('float32'), relay.shape_of(var_844))) # shape=(7, 7, 16)
output = bop_846
output2 = bop_846
func_861 = relay.Function([var_844,var_845,], output)
mod['func_861'] = func_861
mod = relay.transform.InferType()(mod)
var_862 = relay.var("var_862", dtype = "float32", shape = (7, 7, 16))#candidate|862|(7, 7, 16)|var|float32
var_863 = relay.var("var_863", dtype = "float32", shape = (7, 7, 16))#candidate|863|(7, 7, 16)|var|float32
output = func_861(var_862,var_863,)
func_864 = relay.Function([var_862,var_863,], output)
mutated_mod['func_864'] = func_864
mutated_mod = relay.transform.InferType()(mutated_mod)
var_977 = relay.var("var_977", dtype = "int32", shape = ())#candidate|977|()|var|int32
var_978 = relay.var("var_978", dtype = "int32", shape = (12, 12, 14))#candidate|978|(12, 12, 14)|var|int32
bop_979 = relay.multiply(var_977.astype('int32'), var_978.astype('int32')) # shape=(12, 12, 14)
output = relay.Tuple([bop_979,])
output2 = relay.Tuple([bop_979,])
func_984 = relay.Function([var_977,var_978,], output)
mod['func_984'] = func_984
mod = relay.transform.InferType()(mod)
mutated_mod['func_984'] = func_984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_984_call = mutated_mod.get_global_var('func_984')
var_986 = relay.var("var_986", dtype = "int32", shape = ())#candidate|986|()|var|int32
var_987 = relay.var("var_987", dtype = "int32", shape = (12, 12, 14))#candidate|987|(12, 12, 14)|var|int32
call_985 = func_984_call(var_986,var_987,)
output = call_985
func_988 = relay.Function([var_986,var_987,], output)
mutated_mod['func_988'] = func_988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1161 = relay.var("var_1161", dtype = "float64", shape = (6, 15, 6))#candidate|1161|(6, 15, 6)|var|float64
var_1162 = relay.var("var_1162", dtype = "float64", shape = (6, 15, 6))#candidate|1162|(6, 15, 6)|var|float64
bop_1163 = relay.less_equal(var_1161.astype('bool'), relay.reshape(var_1162.astype('bool'), relay.shape_of(var_1161))) # shape=(6, 15, 6)
output = relay.Tuple([bop_1163,])
output2 = relay.Tuple([bop_1163,])
func_1168 = relay.Function([var_1161,var_1162,], output)
mod['func_1168'] = func_1168
mod = relay.transform.InferType()(mod)
mutated_mod['func_1168'] = func_1168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1168_call = mutated_mod.get_global_var('func_1168')
var_1170 = relay.var("var_1170", dtype = "float64", shape = (6, 15, 6))#candidate|1170|(6, 15, 6)|var|float64
var_1171 = relay.var("var_1171", dtype = "float64", shape = (6, 15, 6))#candidate|1171|(6, 15, 6)|var|float64
call_1169 = func_1168_call(var_1170,var_1171,)
output = call_1169
func_1172 = relay.Function([var_1170,var_1171,], output)
mutated_mod['func_1172'] = func_1172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1663 = relay.var("var_1663", dtype = "float64", shape = (4, 12, 15))#candidate|1663|(4, 12, 15)|var|float64
uop_1664 = relay.log2(var_1663.astype('float64')) # shape=(4, 12, 15)
var_1709 = relay.var("var_1709", dtype = "float64", shape = (4, 12, 15))#candidate|1709|(4, 12, 15)|var|float64
bop_1710 = relay.not_equal(uop_1664.astype('bool'), relay.reshape(var_1709.astype('bool'), relay.shape_of(uop_1664))) # shape=(4, 12, 15)
output = bop_1710
output2 = bop_1710
func_1715 = relay.Function([var_1663,var_1709,], output)
mod['func_1715'] = func_1715
mod = relay.transform.InferType()(mod)
mutated_mod['func_1715'] = func_1715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1715_call = mutated_mod.get_global_var('func_1715')
var_1717 = relay.var("var_1717", dtype = "float64", shape = (4, 12, 15))#candidate|1717|(4, 12, 15)|var|float64
var_1718 = relay.var("var_1718", dtype = "float64", shape = (4, 12, 15))#candidate|1718|(4, 12, 15)|var|float64
call_1716 = func_1715_call(var_1717,var_1718,)
output = call_1716
func_1719 = relay.Function([var_1717,var_1718,], output)
mutated_mod['func_1719'] = func_1719
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2073 = relay.var("var_2073", dtype = "float32", shape = (4, 14, 4))#candidate|2073|(4, 14, 4)|var|float32
uop_2074 = relay.cosh(var_2073.astype('float32')) # shape=(4, 14, 4)
func_1715_call = mod.get_global_var('func_1715')
func_1719_call = mutated_mod.get_global_var('func_1719')
var_2077 = relay.var("var_2077", dtype = "float64", shape = (1, 720))#candidate|2077|(1, 720)|var|float64
call_2076 = func_1715_call(relay.reshape(var_2077.astype('float64'), [4, 12, 15]), relay.reshape(var_2077.astype('float64'), [4, 12, 15]), )
call_2078 = func_1715_call(relay.reshape(var_2077.astype('float64'), [4, 12, 15]), relay.reshape(var_2077.astype('float64'), [4, 12, 15]), )
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
var_2085 = relay.var("var_2085", dtype = "float64", shape = (540,))#candidate|2085|(540,)|var|float64
call_2084 = relay.TupleGetItem(func_1168_call(relay.reshape(var_2085.astype('float64'), [6, 15, 6]), relay.reshape(var_2085.astype('float64'), [6, 15, 6]), ), 0)
call_2086 = relay.TupleGetItem(func_1172_call(relay.reshape(var_2085.astype('float64'), [6, 15, 6]), relay.reshape(var_2085.astype('float64'), [6, 15, 6]), ), 0)
bop_2095 = relay.mod(uop_2074.astype('float32'), relay.reshape(var_2073.astype('float32'), relay.shape_of(uop_2074))) # shape=(4, 14, 4)
func_861_call = mod.get_global_var('func_861')
func_864_call = mutated_mod.get_global_var('func_864')
var_2101 = relay.var("var_2101", dtype = "float32", shape = (4, 196))#candidate|2101|(4, 196)|var|float32
call_2100 = func_861_call(relay.reshape(var_2101.astype('float32'), [7, 7, 16]), relay.reshape(var_2101.astype('float32'), [7, 7, 16]), )
call_2102 = func_861_call(relay.reshape(var_2101.astype('float32'), [7, 7, 16]), relay.reshape(var_2101.astype('float32'), [7, 7, 16]), )
func_696_call = mod.get_global_var('func_696')
func_698_call = mutated_mod.get_global_var('func_698')
var_2117 = relay.var("var_2117", dtype = "float32", shape = (40, 12))#candidate|2117|(40, 12)|var|float32
call_2116 = func_696_call(relay.reshape(var_2117.astype('float32'), [8, 6, 10]))
call_2118 = func_696_call(relay.reshape(var_2117.astype('float32'), [8, 6, 10]))
uop_2124 = relay.atanh(uop_2074.astype('float32')) # shape=(4, 14, 4)
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
call_2127 = relay.TupleGetItem(func_1168_call(relay.reshape(call_2084.astype('float64'), [6, 15, 6]), relay.reshape(call_2084.astype('float64'), [6, 15, 6]), ), 0)
call_2128 = relay.TupleGetItem(func_1172_call(relay.reshape(call_2084.astype('float64'), [6, 15, 6]), relay.reshape(call_2084.astype('float64'), [6, 15, 6]), ), 0)
func_861_call = mod.get_global_var('func_861')
func_864_call = mutated_mod.get_global_var('func_864')
call_2140 = func_861_call(relay.reshape(call_2100.astype('float32'), [7, 7, 16]), relay.reshape(call_2100.astype('float32'), [7, 7, 16]), )
call_2141 = func_861_call(relay.reshape(call_2100.astype('float32'), [7, 7, 16]), relay.reshape(call_2100.astype('float32'), [7, 7, 16]), )
bop_2144 = relay.power(uop_2124.astype('float64'), relay.reshape(uop_2074.astype('float64'), relay.shape_of(uop_2124))) # shape=(4, 14, 4)
output = relay.Tuple([call_2076,var_2077,call_2084,var_2085,bop_2095,call_2100,var_2101,call_2116,var_2117,call_2127,call_2140,bop_2144,])
output2 = relay.Tuple([call_2078,var_2077,call_2086,var_2085,bop_2095,call_2102,var_2101,call_2118,var_2117,call_2128,call_2141,bop_2144,])
func_2148 = relay.Function([var_2073,var_2077,var_2085,var_2101,var_2117,], output)
mod['func_2148'] = func_2148
mod = relay.transform.InferType()(mod)
var_2149 = relay.var("var_2149", dtype = "float32", shape = (4, 14, 4))#candidate|2149|(4, 14, 4)|var|float32
var_2150 = relay.var("var_2150", dtype = "float64", shape = (1, 720))#candidate|2150|(1, 720)|var|float64
var_2151 = relay.var("var_2151", dtype = "float64", shape = (540,))#candidate|2151|(540,)|var|float64
var_2152 = relay.var("var_2152", dtype = "float32", shape = (4, 196))#candidate|2152|(4, 196)|var|float32
var_2153 = relay.var("var_2153", dtype = "float32", shape = (40, 12))#candidate|2153|(40, 12)|var|float32
output = func_2148(var_2149,var_2150,var_2151,var_2152,var_2153,)
func_2154 = relay.Function([var_2149,var_2150,var_2151,var_2152,var_2153,], output)
mutated_mod['func_2154'] = func_2154
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2176 = relay.var("var_2176", dtype = "float32", shape = (16, 2, 6))#candidate|2176|(16, 2, 6)|var|float32
uop_2177 = relay.erf(var_2176.astype('float32')) # shape=(16, 2, 6)
uop_2183 = relay.exp(uop_2177.astype('float32')) # shape=(16, 2, 6)
output = uop_2183
output2 = uop_2183
func_2185 = relay.Function([var_2176,], output)
mod['func_2185'] = func_2185
mod = relay.transform.InferType()(mod)
mutated_mod['func_2185'] = func_2185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2186 = relay.var("var_2186", dtype = "float32", shape = (16, 2, 6))#candidate|2186|(16, 2, 6)|var|float32
func_2185_call = mutated_mod.get_global_var('func_2185')
call_2187 = func_2185_call(var_2186)
output = call_2187
func_2188 = relay.Function([var_2186], output)
mutated_mod['func_2188'] = func_2188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2411 = relay.var("var_2411", dtype = "float32", shape = (7, 5, 4))#candidate|2411|(7, 5, 4)|var|float32
uop_2412 = relay.erf(var_2411.astype('float32')) # shape=(7, 5, 4)
output = relay.Tuple([uop_2412,])
output2 = relay.Tuple([uop_2412,])
func_2422 = relay.Function([var_2411,], output)
mod['func_2422'] = func_2422
mod = relay.transform.InferType()(mod)
mutated_mod['func_2422'] = func_2422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2423 = relay.var("var_2423", dtype = "float32", shape = (7, 5, 4))#candidate|2423|(7, 5, 4)|var|float32
func_2422_call = mutated_mod.get_global_var('func_2422')
call_2424 = func_2422_call(var_2423)
output = call_2424
func_2425 = relay.Function([var_2423], output)
mutated_mod['func_2425'] = func_2425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2516 = relay.var("var_2516", dtype = "int64", shape = (12, 16, 15))#candidate|2516|(12, 16, 15)|var|int64
var_2517 = relay.var("var_2517", dtype = "int64", shape = (12, 16, 15))#candidate|2517|(12, 16, 15)|var|int64
bop_2518 = relay.logical_xor(var_2516.astype('int64'), relay.reshape(var_2517.astype('int64'), relay.shape_of(var_2516))) # shape=(12, 16, 15)
output = relay.Tuple([bop_2518,])
output2 = relay.Tuple([bop_2518,])
func_2527 = relay.Function([var_2516,var_2517,], output)
mod['func_2527'] = func_2527
mod = relay.transform.InferType()(mod)
var_2528 = relay.var("var_2528", dtype = "int64", shape = (12, 16, 15))#candidate|2528|(12, 16, 15)|var|int64
var_2529 = relay.var("var_2529", dtype = "int64", shape = (12, 16, 15))#candidate|2529|(12, 16, 15)|var|int64
output = func_2527(var_2528,var_2529,)
func_2530 = relay.Function([var_2528,var_2529,], output)
mutated_mod['func_2530'] = func_2530
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2722 = relay.var("var_2722", dtype = "float64", shape = (6, 13, 6))#candidate|2722|(6, 13, 6)|var|float64
uop_2723 = relay.acosh(var_2722.astype('float64')) # shape=(6, 13, 6)
output = relay.Tuple([uop_2723,])
output2 = relay.Tuple([uop_2723,])
func_2728 = relay.Function([var_2722,], output)
mod['func_2728'] = func_2728
mod = relay.transform.InferType()(mod)
var_2729 = relay.var("var_2729", dtype = "float64", shape = (6, 13, 6))#candidate|2729|(6, 13, 6)|var|float64
output = func_2728(var_2729)
func_2730 = relay.Function([var_2729], output)
mutated_mod['func_2730'] = func_2730
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2963 = relay.var("var_2963", dtype = "uint8", shape = (1, 6, 9))#candidate|2963|(1, 6, 9)|var|uint8
const_2964 = relay.const([[[-9,4,6,-3,-5,9,-2,4,-1],[-1,6,7,5,3,8,-5,8,-4],[7,7,8,6,4,3,2,10,-4],[-1,8,2,7,3,-9,10,-2,8],[2,10,-3,-3,-5,-4,-9,9,-9],[1,10,-3,-1,-5,-1,-5,-6,-1]],[[7,5,-7,2,-5,3,-6,2,-10],[-5,8,-6,-10,2,-5,4,-6,-6],[9,1,3,-8,10,-4,-2,1,-6],[1,-9,1,-7,-8,5,10,-3,6],[6,-6,-3,-7,1,7,7,5,-4],[-10,3,-5,-1,2,5,4,1,8]],[[-2,9,2,-3,5,-3,-6,9,10],[-8,7,6,8,-5,-10,1,7,7],[7,8,-8,10,-5,-3,-10,-5,1],[-1,3,-7,9,9,9,3,6,5],[-4,7,-3,6,3,2,-7,4,9],[3,9,-1,-7,-4,10,6,4,5]],[[8,-1,-5,7,-6,-1,2,2,-5],[-10,1,-7,3,5,9,-7,5,9],[2,1,-7,-2,8,2,1,8,-8],[-3,8,-2,-9,-7,-8,-4,2,-8],[-2,2,6,-3,-8,9,6,8,-9],[5,9,2,-8,-10,6,1,-8,-5]],[[-7,-1,1,-2,1,3,10,8,9],[9,-8,8,-6,-1,-2,-3,7,3],[-6,-7,4,-5,-9,6,-4,-5,-5],[-8,2,9,8,-2,-6,4,-1,-8],[-10,-1,-7,7,3,6,7,-1,3],[-4,2,7,2,-9,-10,-7,-10,-9]],[[5,-8,10,-6,-8,-7,-9,-4,-8],[10,-2,-2,-7,-5,7,-6,2,1],[-10,10,-8,-10,7,-1,-5,-4,1],[9,4,7,-8,6,-10,3,-5,-7],[9,3,9,10,4,-1,7,-5,4],[4,8,3,6,6,-10,-6,10,4]],[[3,5,5,4,-8,2,-2,7,6],[-6,7,-4,6,-5,-1,-6,-10,-2],[9,-6,5,-2,-6,-7,-8,-5,-6],[3,10,8,6,8,9,10,5,6],[5,5,6,4,-6,2,-7,-3,2],[2,9,3,-7,-5,-8,-2,-10,2]],[[10,1,-6,-5,-7,-2,4,-6,-4],[-1,9,-5,9,-8,4,-7,10,10],[9,9,-6,7,-6,2,-10,-3,1],[6,3,2,-7,-4,5,1,9,-1],[2,6,-1,-8,-3,1,-8,7,2],[1,-6,-6,-8,6,8,4,-7,10]],[[9,8,10,10,-6,-9,6,-8,4],[-3,3,-2,9,5,-6,-4,2,1],[-9,9,-7,4,8,-6,-7,9,-8],[-3,6,-5,-10,1,10,5,10,7],[-4,-1,-4,-7,5,1,6,4,-9],[-6,7,4,-9,1,4,-9,10,1]],[[6,-4,-5,-6,-6,-4,-9,-7,-8],[-8,-1,8,-6,4,-6,9,-4,-5],[-8,9,-1,-1,5,-9,-9,10,3],[-3,-5,-6,-5,-5,9,-9,10,3],[3,4,-1,1,-7,8,-10,-10,10],[-6,-2,-6,-2,8,-3,5,-4,-3]],[[9,3,-6,-5,-3,-1,-10,8,9],[-3,-8,-3,3,-10,7,3,7,2],[-8,10,-4,4,10,-8,-7,10,-3],[8,-10,-4,-2,-3,-3,-4,3,-2],[-7,-3,-8,5,-3,1,-9,3,-9],[-6,-3,4,3,-9,-4,-5,7,9]]], dtype = "uint8")#candidate|2964|(11, 6, 9)|const|uint8
bop_2965 = relay.logical_xor(var_2963.astype('uint8'), const_2964.astype('uint8')) # shape=(11, 6, 9)
uop_2975 = relay.cosh(var_2963.astype('float32')) # shape=(1, 6, 9)
func_984_call = mod.get_global_var('func_984')
func_988_call = mutated_mod.get_global_var('func_988')
var_2978 = relay.var("var_2978", dtype = "int32", shape = ())#candidate|2978|()|var|int32
const_2979 = relay.const([-1,-1,2,5,4,8,-8,3,5,4,-6,-8,2,-2,10,9,4,10,-9,-6,10,8,10,7,-1,-5,-9,-5,7,-6,-9,-10,6,-9,-4,9,-10,-1,10,-10,-9,7,-7,1,-8,-3,-1,-1,5,-9,4,-3,6,-9,-6,-7,-1,2,-5,-2,-7,1,9,4,-2,3,2,-4,-3,-5,9,1,4,-8,6,5,6,-3,10,9,2,-9,9,3,6,9,7,7,-5,2,6,9,5,-9,1,6,9,10,-1,-9,10,-6,10,-10,-10,-8,-2,-2,-3,2,10,-9,-7,8,1,-9,-5,-10,8,-2,4,9,-9,5,-2,7,-8,3,-5,-5,8,9,-7,-10,3,-7,4,-5,7,-6,-10,2,-7,-3,-6,1,10,-9,3,6,-1,-2,-9,7,-10,8,6,-8,-7,-7,7,6,10,-6,5,8,7,1,1,-5,-1,-1,-2,-9,-7,-3,4,4,7,6,6,-7,6,-10,-6,-9,7,-3,8,10,-8,-2,2,-6,-7,-10,8,5,-7,-2,9,1,1,5,-6,5,-5,6,-4,-8,-7,-6,-8,-1,-6,-10,-4,1,5,-3,10,-4,-4,4,-5,8,3,-8,-5,-9,-2,7,10,-1,3,-5,-3,-10,3,4,-8,-1,8,-5,-10,5,-1,-10,-10,5,7,8,3,7,-4,6,-5,5,8,-4,4,10,2,8,1,7,5,5,5,-4,5,3,6,-1,9,3,-7,-9,-3,2,10,9,7,5,-8,-5,10,-2,5,3,1,7,8,-6,3,-4,-9,2,9,-10,-10,-9,-2,-9,4,-2,9,-2,7,8,8,-5,-5,3,-6,-2,-9,-7,3,9,-1,2,-2,6,2,9,8,-9,3,-8,6,-7,2,-7,3,10,-8,-1,9,-8,-3,-3,3,5,-3,-4,4,5,7,-9,-9,-2,3,7,-3,5,4,-1,7,10,1,-10,-9,-1,10,-7,-2,7,-6,-9,1,-9,9,1,-5,7,-9,3,3,-4,-3,-3,-4,2,7,9,3,-5,7,8,9,8,-4,5,4,-2,2,3,8,-4,-5,2,-10,-10,-3,8,6,9,6,9,3,8,9,-9,-5,9,-5,-5,10,-3,4,4,-7,1,-4,3,4,-1,1,9,5,5,10,9,7,-2,1,-2,6,-2,-6,8,-6,-4,-2,-4,-4,9,9,4,7,-7,-2,7,-4,8,3,1,-8,-8,-1,-7,9,9,-3,-4,-8,9,1,8,4,-5,-6,8,-1,-2,7,7,5,-6,6,-9,2,-6,5,-6,2,7,8,-9,2,-3,-3,6,4,-6,-3,-7,-4,-6,7,-7,-5,-6,-2,4,-8,-4,7,9,-4,-4,-4,2,5,5,3,-2,8,1,-3,-3,-2,-2,-9,-10,9,-1,-4,9,4,1,7,6,-9,5,-4,3,-7,4,-7,10,8,-9,8,-10,-1,8,4,3,-2,9,7,1,8,-10,10,1,3,8,5,4,1,-5,-7,-2,9,5,3,9,-1,-6,-9,7,-6,-5,-5,8,2,-4,-4,-8,-8,-8,-10,2,-6,-10,-5,10,4,-2,-6,-6,6,7,-6,4,9,5,-8,1,-3,-10,-8,8,6,10,10,10,5,7,-4,5,2,-5,5,6,-8,8,9,-9,-8,8,-4,6,-8,1,2,7,6,-8,-9,10,-3,3,-6,8,1,4,4,7,10,4,-5,-10,5,1,2,-3,-2,8,9,4,4,9,7,-10,7,-3,-4,-3,-8,-5,8,9,6,-1,-5,-7,4,-5,-4,-10,-8,1,-5,-1,1,-5,-5,2,-2,-6,-8,4,-9,-3,-5,-1,-5,2,-1,2,2,2,2,9,-8,10,10,-8,-4,-1,5,9,8,-9,-8,-10,10,8,-9,7,3,-3,-1,3,3,4,10,7,7,-7,-9,-5,-1,3,3,-7,-7,-1,-9,-4,8,10,1,6,-7,5,9,7,7,2,-9,-6,7,-5,-10,1,-6,6,10,9,4,-3,6,-5,-9,-10,-5,-7,6,1,10,5,-4,-5,-2,2,-8,9,7,4,-10,-6,-5,-9,4,6,-1,10,-2,10,7,10,-8,-9,2,1,-10,-8,2,5,-9,-10,1,-6,2,9,-9,-7,7,-2,-9,-2,1,-5,9,-7,-10,1,-6,6,-4,-9,3,9,-2,-8,3,-2,-2,-5,5,-1,10,8,-8,6,-9,-4,1,-2,-6,5,-8,4,-4,-3,5,-5,4,3,-10,-6,3,3,5,8,4,3,-2,4,-9,4,8,1,3,-6,2,-3,-1,-3,-10,10,-6,-7,-1,2,-7,4,-6,-1,-8,3,8,6,-2,8,10,9,-2,-4,-7,-2,3,-4,-10,7,2,7,7,1,-2,3,-10,8,9,6,-8,-2,6,-7,1,-4,5,-4,7,-2,-6,-1,-7,10,-2,-4,9,-1,-2,-1,4,7,-9,10,6,-6,-6,1,-7,3,-9,10,-3,-3,9,9,1,3,-6,-9,4,5,2,7,-8,9,-7,7,9,-6,-6,-2,-10,-1,7,-9,3,4,1,-7,2,-10,6,-9,-9,-3,-10,6,-9,8,-4,8,-8,-5,6,10,7,-6,-9,-7,-2,5,-7,-3,7,4,-6,-1,7,-5,-9,2,7,10,-5,-4,9,-8,-10,5,-2,-1,3,3,9,4,5,3,-6,-7,1,-9,-1,-9,9,10,-2,8,-2,-7,2,-6,-9,-10,3,-7,9,3,2,2,-5,-1,-1,4,3,-4,-3,2,3,-9,9,9,10,7,5,3,10,-8,-4,-8,-4,-4,7,10,-7,-4,-3,-4,4,-4,1,-10,-1,5,9,-6,8,-1,-5,-2,-10,-1,-9,5,-8,-4,-8,1,-1,7,-10,4,-1,10,5,-10,-10,7,8,3,-5,-5,1,2,-2,3,-2,-9,-3,-2,-5,-3,-3,-2,-6,-5,4,-2,5,1,5,-1,-3,3,-3,2,5,-1,-8,9,10,5,-3,-2,-2,-8,-7,5,1,-5,3,10,-5,-8,6,6,-3,-3,-7,9,-8,-8,7,-6,-3,3,-8,-6,6,7,3,-1,6,5,8,5,-10,-4,6,5,9,-5,-3,-2,-7,4,-4,-8,-8,4,-6,4,1,5,8,-9,10,-5,-7,3,-6,5,1,-10,8,-6,2,2,-8,3,9,-2,-7,1,4,7,-2,-1,8,3,-3,10,-9,-1,1,2,5,6,-2,6,-2,7,-7,-8,-10,-9,-8,-10,-3,-5,-4,-2,-2,3,-7,10,-1,-5,7,-1,2,2,1,10,-3,-6,-1,-8,-1,5,-7,9,-1,-6,6,5,-9,2,9,2,5,8,8,-7,4,-9,6,-1,-10,7,-4,6,9,3,-9,9,3,-10,-5,2,-10,2,-8,-4,10,6,6,-9,-1,-5,5,4,3,-1,-2,8,5,-7,5,-1,5,-10,3,-5,2,-7,-6,-7,7,-7,-4,-1,7,1,-3,6,4,-8,5,-1,5,-6,-9,2,-2,6,-4,-6,-7,4,9,-8,5,-10,-9,-7,-9,7,-5,-3,-8,6,6,-4,7,4,7,1,-6,-2,9,3,-2,5,9,-8,-9,-8,6,-9,-1,1,5,-8,10,-9,-1,9,3,3,-4,-9,-5,9,1,4,-2,-8,4,7,-9,-5,9,2,-7,-3,5,-7,9,2,3,1,-1,-2,8,9,8,-6,7,10,-4,-9,5,1,-2,-3,1,2,-3,-4,-6,8,8,-4,3,-1,4,-8,-5,-2,-2,-2,9,2,8,2,-1,-1,-6,6,-6,-6,6,-1,3,-8,6,-7,-3,6,-6,-7,-1,-8,3,8,-10,2,-8,-8,6,-5,5,-7,2,-2,-6,-9,-9,-5,2,4,8,7,8,-9,1,-9,8,7,-1,-8,9,-5,-6,-3,-4,10,2,9,5,6,-2,4,-3,9,3,-3,7,-1,8,1,10,5,-9,1,4,9,4,-7,-8,1,4,-4,-9,5,-8,1,-8,-9,3,-10,-9,5,4,-8,-6,4,2,4,4,9,4,9,6,-8,9,-8,-8,-4,4,-7,-3,-4,-10,6,-6,5,5,-3,-5,4,8,4,6,10,-10,-2,-9,-7,5,-2,-8,-2,-2,-6,7,-1,-1,-2,-3,-6,-9,-9,5,7,9,10,8,-2,8,-9,7,9,-7,2,-3,-4,-7,1,8,1,-9,7,-4,10,-7,6,-9,10,7,-5,-4,-3,3,-2,-3,-2,-5,-2,8,-10,10,-8,2,6,-4,10,-1,7,-6,-7,-4,-1,-8,8,6,-2,6,9,10,9,-6,9,1,-3,9,-6,-1,-1,-4,8,7,-8,9,-4,1,-2,4,6,1,2,3,2,7,-6,10,-10,-3,-3,6,-3,3,-5,9,2,-5,10,6,-4,3,5,2,-4,6,7,-5,8,-6,-4,-8,-4,3,-1,-6,-2,-2,4,-4,9,6,-9,-6,8,4,6,-8,-7,4,10,2,1,-10,-2,-5,-4,8,-3,-4,8,-3,-2,-7,-2,6,3,5,-5,-10,9,7,8,9,-10,4,-9,-2,-8,9,-2,-3,6,-6,2,8,-1,7,10,3,-6,-8,4,7,1,-3,2,5,-3,-9,-8,10,-9,1,2,-9,-8,7,-9,3,2,-4,-1,4,-1,-1,-9,-10,-8,10,-4,-8,8,-4,2,8,5,-10,-10,-10,-7,-1,2,5,-4,-7,3,-1,-5,-7,-4,10,-6,8,5,8,9,-8,-3,-10,-9,-7,6,-5,-5,-7,7,10,8,-1,6,-4,-1,9,-9,-4,7,5,9,4,2,5,-9,-5,5,-1,-7,7,9,-5,4,-1,9,4,-3,4,-4,-7,5,1,9,-10,-6,6,4,6,-1,9,-10,-9,-5,-10,-3,-1,8,6,-3,4,5,5,-1,7,7,-5,-1,1,9,-5,8,-9,-10,-2,3,-2,-5,-8,-9,2,3,4,2,-1,7,-1,4,1,-7,8,-8,10,1,-2,5,8,-1,-3,8,-4,-2,1,-9,1,-5,7,1,-7,-7,3,-4,1,3,-10,10,9,-1,7,3,7,6,9,1,-2,-8,-10,5,-2,7,-1,-6,-8,-1,8,-2,-9,-8,8,8,-8,4,-1,-3,-9,-2,9,1,8,2,-3,2,-3,-2,-10,2,9,9,-6,10,3,6,-4,9,8,-10,4,-4,-4,1,-1,3,-8,7,-5,9,-2,9,-5,-8,8,5,1,2,-10,-1,-5,-10,-9,6,5,-9,4,1,-6,2,10,-7,-1,-8,1,3,-6,-8,-9,6,-2,8,-2,-5,1,-4,9,2,2,2,-9,-1,7,7,-4,9,-7,3,-8,-10,10,-10,5,8,3,-3,6,-7,-3,-6,-9,-4,3,-8], dtype = "int32")#candidate|2979|(2016,)|const|int32
call_2977 = relay.TupleGetItem(func_984_call(relay.reshape(var_2978.astype('int32'), []), relay.reshape(const_2979.astype('int32'), [12, 12, 14]), ), 0)
call_2980 = relay.TupleGetItem(func_988_call(relay.reshape(var_2978.astype('int32'), []), relay.reshape(const_2979.astype('int32'), [12, 12, 14]), ), 0)
func_696_call = mod.get_global_var('func_696')
func_698_call = mutated_mod.get_global_var('func_698')
const_2986 = relay.const([-9.798224,-6.903856,-4.970107,5.609055,-7.681101,4.365887,4.322101,-1.900114,-9.550825,0.399040,4.416324,-9.625110,-7.930054,6.247769,4.256608,-8.844001,-9.840775,-9.269245,-8.392236,-4.592954,6.436375,-9.115996,-6.177670,-0.275236,-3.785488,6.208849,2.427817,-3.496892,2.791044,6.363000,5.103961,-7.436831,3.029351,-6.954186,-6.810517,-3.291554,8.210741,-3.312879,5.708647,-3.249133,-3.000627,1.692217,-2.241502,6.704948,5.924957,-9.517744,-2.364467,-7.402002,8.046564,5.748416,7.548304,3.170248,9.972428,-2.621692,-0.757490,-7.144261,-7.466386,-3.396382,6.509103,-4.820403,8.610016,9.901348,4.449455,3.122377,-9.928975,-2.255311,-5.298262,-7.229880,3.532258,-5.506689,-3.000755,0.104499,-2.469243,4.457728,7.449890,-9.516780,-7.866859,3.016768,1.150573,-9.510057,2.313628,7.774921,-6.353654,6.490203,-6.936850,8.107828,-0.807314,4.384100,-8.004315,-5.225706,-5.830040,-5.075025,-4.015699,-1.020049,-2.366116,-8.155465,8.309064,7.093737,8.981476,5.645009,-3.051321,-4.336896,6.171040,8.290204,-4.726707,-2.204732,-4.417917,8.500951,-8.016917,-6.755025,-6.674063,-3.134774,-2.562914,1.865549,4.882571,6.514436,2.848082,-0.044222,3.672414,8.483884,-9.240660,-4.989304,-7.131968,3.980425,6.372194,-8.777533,-8.878192,7.871400,-2.163025,2.642451,-1.220382,-5.206630,-3.486918,-7.453097,-2.548971,-1.433531,1.007002,-4.862546,-1.745078,-6.256076,4.659837,-9.600638,-5.668650,4.221739,-0.997931,-7.434913,0.539115,9.558454,3.461958,-8.552313,3.177921,-2.442696,9.019735,-6.981233,8.571762,-1.909176,4.008737,-6.648384,-4.905787,8.248983,-8.006186,3.873039,-5.860875,-1.043340,2.818812,7.170377,5.309557,0.734138,-8.402185,-6.272784,5.584574,2.773746,2.850517,-5.829159,5.568378,7.036140,1.187515,6.339565,6.148759,7.134037,-3.699072,0.909207,9.782935,5.063495,-7.343889,3.430498,-4.267444,9.211891,-7.966224,3.737203,3.856878,-2.890913,-2.142512,-7.153845,4.483852,-2.001563,-5.407299,3.418832,-0.578795,-8.309033,-1.229647,-2.909320,-8.030979,8.470762,9.418586,-5.518339,3.198956,3.766981,-7.187133,7.305560,-3.442179,-6.752341,7.372255,-4.323933,-9.246089,-9.067415,-1.745693,5.886092,-2.032537,3.881356,8.288619,-5.253441,-7.968390,-9.278796,9.084840,-0.962072,2.160611,1.363222,-9.088587,6.794993,-6.552305,-5.617117,-1.056140,8.828116,-7.865161,0.984140,-6.308067,-9.873944,8.470984,9.966125,-2.486255,-2.157997,-3.423153,-4.844919,1.669823,9.717891,9.258993,-0.188617,1.372475,0.993537,9.398772,-9.916866,-0.696598,-8.125827,2.952582,1.891783,-8.400102,-8.825719,6.954614,1.072928,-4.642920,-1.135996,-6.594280,0.158374,-1.360574,5.806069,8.709056,4.607930,-6.598967,-6.789319,5.062558,3.976559,4.588434,8.611660,-4.036616,-5.184580,3.944780,5.117829,2.994159,-3.665321,3.094805,1.006709,6.853791,-0.139687,3.470641,6.365336,-4.259782,-7.029749,-8.815432,-8.618138,-0.491576,3.133634,6.479098,-6.802698,-8.987561,-5.822628,-2.031892,-0.359286,-3.174341,-4.941992,3.450710,4.071133,-3.083391,-7.173217,1.148544,-0.606066,9.208591,5.692118,-7.481450,9.819694,-7.543459,-4.026007,-4.009285,-6.834822,2.560560,-7.848496,2.741310,5.456936,0.371763,-0.725958,-3.867974,-8.484975,0.239772,1.873502,9.841074,-9.010684,-9.906986,0.346880,4.029983,-5.664177,-0.622139,-0.587511,-5.650832,3.753863,6.877623,-9.665084,-6.271526,5.241975,-6.515874,3.453531,2.147018,-0.134277,-9.070624,-1.926090,2.272548,6.880149,7.183976,4.290516,7.182820,9.282715,3.727768,-9.411498,7.099648,4.203863,-4.721702,5.212345,-9.821646,-6.521001,7.779092,-7.827996,6.291976,-2.712031,7.914483,-4.412255,1.043842,8.796085,6.465455,-9.366737,0.218360,-0.279274,3.893577,-8.907929,8.167018,-8.568288,8.638888,-5.971637,-4.132617,-0.298764,-1.723797,-7.730617,-0.367585,-8.640534,-8.740623,-0.333878,-6.585199,8.845614,4.839199,4.773148,-9.458393,1.474358,9.755079,-9.811937,1.340768,9.171948,8.517486,4.711469,-4.371469,1.258795,-6.640454,-4.003794,5.726174,-3.242739,3.498171,2.170976,-7.658701,-7.755977,-7.159481,7.684867,7.965182,-7.652335,0.252155,-1.466703,4.891978,-1.598087,-9.514689,7.362159,-1.672563,-1.304489,2.379881,-8.781715,-0.303631,1.249544,6.380694,-4.369287,-5.010919,-3.306991,-3.226271,7.928218,-9.408551,-1.801402,-3.465778,-4.250931,6.224044,7.996631,0.519016,-1.710258,-4.924175,-2.771147,6.890603,-0.030222,2.693838,9.719891,9.308401,-3.303009,-7.040389,-0.660990,-6.437073,9.769479,4.459639,-9.362276,-3.923567,2.709369,7.439638,1.644958,-1.043671,-0.120730,-1.362932,-8.936744,-6.499517,0.109842,6.358536,0.206304,5.057762,2.259468,5.000931,3.877135,2.832670,-2.738757,-6.115142,4.713178,2.871510,1.527525,2.277230,-3.188978,-4.323336,-0.036359,6.468564,9.587521,-3.393738,-0.911890], dtype = "float32")#candidate|2986|(480,)|const|float32
call_2985 = func_696_call(relay.reshape(const_2986.astype('float32'), [8, 6, 10]))
call_2987 = func_696_call(relay.reshape(const_2986.astype('float32'), [8, 6, 10]))
output = relay.Tuple([bop_2965,uop_2975,call_2977,var_2978,const_2979,call_2985,const_2986,])
output2 = relay.Tuple([bop_2965,uop_2975,call_2980,var_2978,const_2979,call_2987,const_2986,])
func_3006 = relay.Function([var_2963,var_2978,], output)
mod['func_3006'] = func_3006
mod = relay.transform.InferType()(mod)
mutated_mod['func_3006'] = func_3006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mutated_mod.get_global_var('func_3006')
var_3008 = relay.var("var_3008", dtype = "uint8", shape = (1, 6, 9))#candidate|3008|(1, 6, 9)|var|uint8
var_3009 = relay.var("var_3009", dtype = "int32", shape = ())#candidate|3009|()|var|int32
call_3007 = func_3006_call(var_3008,var_3009,)
output = call_3007
func_3010 = relay.Function([var_3008,var_3009,], output)
mutated_mod['func_3010'] = func_3010
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3175 = relay.var("var_3175", dtype = "float32", shape = (6, 16, 9))#candidate|3175|(6, 16, 9)|var|float32
uop_3176 = relay.log2(var_3175.astype('float32')) # shape=(6, 16, 9)
func_984_call = mod.get_global_var('func_984')
func_988_call = mutated_mod.get_global_var('func_988')
var_3179 = relay.var("var_3179", dtype = "int32", shape = ())#candidate|3179|()|var|int32
const_3180 = relay.const([10,2,-1,2,-5,1,5,-3,-5,-1,-5,-9,2,6,-2,3,-6,-1,5,6,-10,3,-2,-6,-5,-4,-5,-1,-6,3,3,-10,-10,8,6,-3,-3,-4,3,2,6,-10,2,10,-10,3,-8,4,6,3,-6,-10,5,5,-3,-7,4,2,1,-1,-6,6,-1,-3,-4,1,-5,10,5,7,4,-9,-1,4,4,5,-4,-7,3,4,-8,-7,5,10,-5,-8,-3,7,9,-6,-9,-4,-3,-7,-2,-6,-7,-1,4,-2,2,-8,-8,-7,-6,-1,-7,7,-7,8,7,-10,-1,-7,-4,-2,1,-9,4,-8,-2,-5,-6,-9,-9,2,3,8,-3,-6,4,-5,-9,5,-2,-4,-4,1,1,2,-9,4,8,-5,-9,-10,-1,9,1,3,-1,-8,-6,-4,1,7,-2,-9,6,-1,-6,-7,8,-7,4,-2,7,-9,-9,1,10,-7,8,-3,1,-9,-7,-4,-4,1,2,-2,-1,3,-5,9,10,-10,-3,5,8,-3,-2,-7,-7,-6,-2,-8,-1,-7,5,6,4,-8,-10,3,8,-3,2,-9,-10,7,-5,-9,8,-7,-1,-10,10,2,-10,-9,8,7,4,8,-10,10,-4,4,-4,-6,-3,-10,4,-2,-6,1,5,-3,-5,-4,9,-2,4,6,-6,-5,-9,-1,-6,7,6,-5,7,9,-2,-1,-1,-4,1,-3,2,-6,-2,6,-10,7,1,6,-1,-4,-9,3,-7,5,9,-3,-7,-6,5,-6,-4,-2,6,-7,-2,1,3,1,3,6,-7,4,9,2,1,1,-10,2,-1,-4,-9,4,9,4,3,-5,-10,-4,-9,4,-2,-7,10,-10,-10,3,1,3,-5,3,6,10,-7,4,-9,-7,-5,-5,4,7,-2,-3,-8,-7,3,2,-10,-3,5,4,-8,-6,5,-10,-9,-3,7,-7,2,9,4,5,4,-10,7,-4,6,10,1,10,-6,2,1,-10,1,-10,-3,-8,3,7,-3,7,-10,1,-6,3,6,-5,5,1,9,3,-6,-8,-9,1,5,-1,2,6,5,-9,-5,9,4,-7,3,2,3,10,-6,-5,-8,7,10,-9,-3,7,5,-9,10,-9,-10,-4,-4,6,-5,2,-9,3,-4,-6,3,6,-1,-6,-3,-4,7,-5,-2,2,1,-1,2,-10,8,-3,9,-6,6,-1,-6,-3,5,-3,-8,2,-8,-10,9,-9,5,-6,3,7,6,10,5,5,1,6,-5,-9,-1,5,8,-7,-8,-7,6,2,-4,-2,-8,-10,6,-8,-4,4,-3,-5,3,-4,-4,-3,7,-10,2,9,-10,-6,-4,-9,-9,-2,-2,-5,-9,-7,2,-3,7,-7,7,6,-6,6,-9,6,10,2,9,8,-8,2,6,6,-9,2,-2,3,-3,8,6,9,4,-7,-3,-10,1,-1,-7,8,-2,2,-9,2,4,3,3,-3,7,9,-6,-1,1,1,8,4,10,-6,10,2,-9,3,10,9,7,-7,7,9,-9,7,-2,1,-6,-4,6,-10,2,5,1,-9,-1,1,-4,5,-5,-1,5,10,9,-10,1,-10,-3,-6,10,-3,4,9,8,-1,8,9,-6,-5,-4,-1,-6,7,7,-6,-3,-8,-4,-4,2,-5,-9,-4,-5,9,-5,-2,1,-2,7,5,-6,-6,9,3,7,-4,2,1,-8,-5,-3,5,10,-2,3,4,2,8,-10,-5,-8,-5,-6,8,-9,6,-1,7,6,8,-9,-9,-4,4,-9,-3,5,-9,-4,-4,1,-8,3,-4,7,10,-6,-8,-9,6,-1,-7,7,-9,5,8,7,8,1,9,-6,7,10,-4,-10,-7,9,9,-1,9,-4,-10,10,9,2,3,-10,3,6,1,8,-4,3,5,2,8,8,6,-7,-3,-4,-8,5,-6,-1,-4,4,-7,3,-9,-5,-2,-4,-5,3,10,4,-4,1,1,-5,-2,7,4,-3,-5,-9,-3,5,-3,-8,6,3,3,9,8,3,1,-9,-9,9,1,1,8,-2,4,6,-1,1,-4,2,-2,-2,-2,-1,5,5,5,-2,3,6,5,7,-10,4,7,-6,8,6,-2,10,-5,5,-2,5,-2,-1,2,5,-8,-5,-2,6,8,-9,-8,-8,-6,5,10,1,10,9,2,3,10,5,-7,-3,4,7,-2,5,10,6,-9,-1,9,-10,-1,-10,-8,-4,-7,-4,-8,-3,8,8,9,7,1,8,8,-2,10,4,9,5,-5,-9,1,-5,1,8,-7,9,-5,-9,-4,3,-5,1,5,3,4,2,5,6,-1,7,9,8,-2,6,2,-7,-8,-2,-4,-2,-9,6,4,-10,-4,6,3,-9,3,-1,7,-1,-6,-10,9,1,-8,2,6,-10,-8,-6,-10,-8,-2,-9,6,-4,6,5,5,5,-10,9,10,-8,6,1,-1,-1,9,10,2,10,-9,3,-10,1,-5,7,10,6,-9,9,8,-1,-10,2,8,-7,-8,4,1,9,-6,3,-2,-9,6,1,10,8,-6,1,6,-2,10,-4,1,-9,10,10,-9,-2,-9,-6,8,8,-8,-7,-6,-9,-7,9,4,5,-8,-5,6,-3,-2,-3,-4,-4,9,-7,4,-3,-8,-1,10,8,2,6,-3,-4,-7,5,7,6,-3,-1,10,8,-8,-2,-4,6,-6,-6,3,-3,-7,4,10,-10,-2,9,-6,-1,7,-3,-4,9,-3,-6,-4,-7,-9,-7,-10,3,-1,-5,1,-3,7,-1,5,10,6,-4,-7,3,9,-7,6,-10,-2,4,-1,2,-3,1,-5,-5,7,1,-8,1,2,-8,-6,7,-3,1,-8,-2,-8,-8,-3,3,-2,-5,-7,-2,4,9,-6,10,-7,-3,-8,5,-7,-10,-8,2,9,2,6,7,2,4,2,9,-6,6,7,-1,-6,7,-6,-6,8,1,2,4,5,3,-3,-9,-5,5,8,-8,-9,-8,8,1,2,10,1,-7,1,4,-2,-4,-9,9,-5,2,6,2,-4,9,-7,1,2,-4,9,6,-2,6,-9,7,-4,9,-8,3,4,-9,9,-8,-9,-4,2,-8,2,4,-1,-5,-9,-6,-7,-1,10,-3,4,-10,8,9,-5,2,5,9,6,-4,2,4,-8,2,8,7,-1,-3,2,-6,-3,4,-4,-3,-9,-9,-6,10,-9,3,10,-7,8,7,-4,-7,-1,2,-6,-10,-3,-5,2,-4,-8,6,7,-6,-3,-7,7,-3,-6,6,1,6,6,4,7,-7,-5,2,8,8,-2,-10,10,-7,-8,8,-2,-3,6,-4,-7,7,-6,5,8,7,10,-8,9,-7,-10,-6,9,-9,-9,7,6,8,-4,9,-8,-1,4,-1,7,-1,2,9,9,6,3,-3,-1,4,-8,9,-9,-6,-2,-5,-4,-5,-4,-8,4,-10,-1,-9,-6,2,-4,-9,3,-6,-2,-3,-7,-5,-5,-3,-10,6,-6,6,8,7,10,6,1,10,3,2,-4,-3,1,-5,-9,-2,8,8,-7,7,-10,1,-5,7,-4,7,7,4,6,-6,-2,1,-8,5,5,-3,7,8,-4,-9,5,6,-6,9,2,8,-6,4,-7,9,3,8,-7,9,1,-10,3,-8,8,10,5,-4,6,-4,8,-6,-7,-8,-1,6,4,8,-5,6,-6,-3,-6,-1,-8,-7,8,5,10,-10,10,-2,-3,4,9,-3,-8,-5,5,7,8,-10,-9,-2,10,-9,9,7,-2,-1,-10,-5,1,3,7,-1,-5,-3,-8,5,-8,-10,-4,10,7,6,-6,-6,-2,-4,10,-3,-6,1,-3,2,9,-8,-9,10,10,5,-6,2,9,-8,-1,4,-7,-1,-1,2,5,4,10,3,-9,-7,-9,-6,5,9,-5,3,-10,-4,9,3,-8,1,-1,10,-3,9,-6,-2,9,8,8,5,8,-9,5,-3,8,-3,-6,-3,9,-1,-6,-7,6,-8,9,-2,-1,5,4,-1,2,5,6,-7,1,10,-2,-4,-4,-3,-4,-1,-10,2,-4,8,6,4,-1,-5,-10,10,3,10,-6,2,2,6,-2,5,1,4,5,9,2,8,2,3,6,5,-10,2,4,3,-8,4,10,-9,9,-2,-4,2,-2,1,10,-8,5,-10,9,5,-10,7,8,-6,5,-7,-10,-3,3,8,2,-2,9,-5,7,-6,-8,8,10,-2,-4,4,-7,-4,-2,4,2,10,1,-10,3,5,10,9,1,-6,2,7,-6,-2,5,2,-3,9,-8,-2,4,4,5,7,-5,-9,3,-8,6,9,5,1,6,4,6,8,-5,7,6,-6,-6,-9,10,10,-7,-9,2,2,9,-3,2,-6,-4,9,-6,-4,-9,-1,-2,6,10,4,7,-2,-4,1,8,6,-2,-3,-9,9,2,6,-3,-3,-8,-6,7,-1,-3,-6,2,5,7,10,-5,-2,3,10,10,8,4,-3,10,-9,-8,5,9,4,8,-1,-5,9,-3,-3,-4,-9,2,9,-7,8,5,5,-3,-1,-3,5,7,5,5,-1,8,9,-3,4,5,5,-7,-6,-7,3,-1,-7,4,-8,-9,-8,-8,-7,-3,1,4,2,6,4,-6,5,-5,6,4,8,1,-2,-3,2,-1,8,8,-9,-9,-10,-9,-2,7,4,2,-7,-8,-5,-8,-8,9,6,-5,4,5,-9,-10,9,-9,-9,2,7,6,10,-9,5,-4,7,-4,-3,6,-5,5,4,-8,-6,-10,10,-4,-10,-1,-1,3,-6,9,-10,-3,3,-3,-1,-9,-1,1,5,-4,-8,-9,1,7,3,-9,4,1,10,-4,3,2,-4,-5,-8,-5,7,-7,10,-6,-1,7,4,3,-10,-7,-2,-6,1,5,-4,10,-6,10,3,10,-8,9,5,-8,-1,-9,-3,9,-10,-5,-7,-6,2,-1,-1,-6,8,-10,9,7,4,-3,10,-1,6,-5,-9,-8,-8,-3,-1,-7,-8,1,7,-9,5,6,-4,8,-2,-5,-5,-3,5,1,9,-7,4,-6,8,-10,7,-8,4,3,8,-9,4,-7,2,-6,-3,7,1,-6,9,1,3,-1,5,3,3,-8,5,-7,-1,-7,-6,-4,8,-5,8,-4,-5,-6,-8,-6,2,-9,9,-6,-1,-9,-7,-3,2,3,5,-1,-4,-3,-7,-5,-4,7,-2,-8,-6,-9,7,-8,-1,-1,10,-9,8,-7,2,5,8,-1,-7,-5,-5,5,-8,3,6,8,-5,-10,-8,9,9,-7,-7,1,-9,-8,3,-6,-10,2,2,-2,4,9,9,1,-1,-6,9,6,-6,-2,-10,9,9,6,9,8,9,5,-5,-7,9,9,-3,-7,7,-7,10,-7,-7,-2,-10,-10,-8,-9,5,3,1,1,-5,2], dtype = "int32")#candidate|3180|(2016,)|const|int32
call_3178 = relay.TupleGetItem(func_984_call(relay.reshape(var_3179.astype('int32'), []), relay.reshape(const_3180.astype('int32'), [12, 12, 14]), ), 0)
call_3181 = relay.TupleGetItem(func_988_call(relay.reshape(var_3179.astype('int32'), []), relay.reshape(const_3180.astype('int32'), [12, 12, 14]), ), 0)
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
var_3202 = relay.var("var_3202", dtype = "float64", shape = (540,))#candidate|3202|(540,)|var|float64
call_3201 = relay.TupleGetItem(func_1168_call(relay.reshape(var_3202.astype('float64'), [6, 15, 6]), relay.reshape(var_3202.astype('float64'), [6, 15, 6]), ), 0)
call_3203 = relay.TupleGetItem(func_1172_call(relay.reshape(var_3202.astype('float64'), [6, 15, 6]), relay.reshape(var_3202.astype('float64'), [6, 15, 6]), ), 0)
uop_3212 = relay.sinh(uop_3176.astype('float32')) # shape=(6, 16, 9)
func_3006_call = mod.get_global_var('func_3006')
func_3010_call = mutated_mod.get_global_var('func_3010')
const_3225 = relay.const([[5,7,-10,-1,-3,-4,4,-3,9,3,4,8,10,-6,5,6,-7,-5],[-5,1,-5,-10,-6,6,-8,-9,-3,-8,6,3,-9,5,-10,-4,-5,5],[-7,1,-8,1,5,8,-8,-1,10,10,-3,-7,3,9,4,10,-7,-7]], dtype = "uint8")#candidate|3225|(3, 18)|const|uint8
call_3224 = relay.TupleGetItem(func_3006_call(relay.reshape(const_3225.astype('uint8'), [1, 6, 9]), relay.reshape(var_3179.astype('int32'), []), ), 3)
call_3226 = relay.TupleGetItem(func_3010_call(relay.reshape(const_3225.astype('uint8'), [1, 6, 9]), relay.reshape(var_3179.astype('int32'), []), ), 3)
func_1168_call = mod.get_global_var('func_1168')
func_1172_call = mutated_mod.get_global_var('func_1172')
call_3230 = relay.TupleGetItem(func_1168_call(relay.reshape(call_3201.astype('float64'), [6, 15, 6]), relay.reshape(var_3202.astype('float64'), [6, 15, 6]), ), 0)
call_3231 = relay.TupleGetItem(func_1172_call(relay.reshape(call_3201.astype('float64'), [6, 15, 6]), relay.reshape(var_3202.astype('float64'), [6, 15, 6]), ), 0)
uop_3235 = relay.cos(uop_3176.astype('float32')) # shape=(6, 16, 9)
output = relay.Tuple([call_3178,var_3179,const_3180,call_3201,var_3202,uop_3212,call_3224,const_3225,call_3230,uop_3235,])
output2 = relay.Tuple([call_3181,var_3179,const_3180,call_3203,var_3202,uop_3212,call_3226,const_3225,call_3231,uop_3235,])
func_3243 = relay.Function([var_3175,var_3179,var_3202,], output)
mod['func_3243'] = func_3243
mod = relay.transform.InferType()(mod)
var_3244 = relay.var("var_3244", dtype = "float32", shape = (6, 16, 9))#candidate|3244|(6, 16, 9)|var|float32
var_3245 = relay.var("var_3245", dtype = "int32", shape = ())#candidate|3245|()|var|int32
var_3246 = relay.var("var_3246", dtype = "float64", shape = (540,))#candidate|3246|(540,)|var|float64
output = func_3243(var_3244,var_3245,var_3246,)
func_3247 = relay.Function([var_3244,var_3245,var_3246,], output)
mutated_mod['func_3247'] = func_3247
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3275 = relay.const([[[-5.268007,8.299373,4.772849,6.895032,-2.670610,-3.182095],[7.039133,-2.583839,5.080457,-8.200332,4.899301,2.431523],[-6.868543,-3.586190,-9.121584,9.524732,-9.499642,3.272421],[2.809908,-7.501480,0.363186,-2.999917,-5.692913,0.669854],[9.186126,-4.442364,-2.954054,-6.035651,2.808093,6.652688],[-2.315806,1.709076,-3.660733,-8.495882,9.706743,9.961826],[-4.295795,-8.241165,-8.385927,-7.579016,0.105545,-4.961529],[6.905781,-9.919045,-2.909720,-5.233424,-4.321403,5.245283],[-1.021365,2.730508,4.351548,6.093294,-7.258549,-0.799755],[3.477553,-5.306221,0.646363,-9.229347,-5.161693,-2.559968],[-1.483419,1.511731,-7.621529,6.748347,7.275723,-2.812521],[6.898113,-6.713797,4.919247,6.239816,6.660177,-2.506646]],[[-4.698649,7.694288,9.816119,6.486633,5.712104,2.876241],[-0.742197,-6.453470,5.230851,-9.040718,-8.986234,-4.005364],[7.133083,-3.076189,-2.532503,6.555410,6.845340,0.320887],[-7.308450,7.759093,9.073161,6.390569,9.121625,3.242090],[0.399071,-8.584418,-3.007667,9.236612,-7.336303,4.000128],[-7.413021,9.100158,6.151726,2.375037,-2.768624,7.199223],[8.894870,6.418518,1.126212,4.238076,-6.814203,-8.813829],[-7.076765,-3.875458,-6.908939,4.698917,-5.452422,-8.159958],[0.570037,-5.369257,-1.385387,-9.891675,-4.470838,7.907239],[-3.996724,-8.679933,-8.241530,-5.845141,8.797412,7.417862],[-5.204534,-6.169822,8.025234,-1.379996,-0.382811,-9.116932],[0.855840,-9.133667,-3.080907,2.778563,-2.628296,9.041333]]], dtype = "float64")#candidate|3275|(2, 12, 6)|const|float64
var_3276 = relay.var("var_3276", dtype = "float64", shape = (2, 12, 6))#candidate|3276|(2, 12, 6)|var|float64
bop_3277 = relay.floor_divide(const_3275.astype('float64'), relay.reshape(var_3276.astype('float64'), relay.shape_of(const_3275))) # shape=(2, 12, 6)
func_2527_call = mod.get_global_var('func_2527')
func_2530_call = mutated_mod.get_global_var('func_2530')
var_3282 = relay.var("var_3282", dtype = "int64", shape = (2880,))#candidate|3282|(2880,)|var|int64
call_3281 = relay.TupleGetItem(func_2527_call(relay.reshape(var_3282.astype('int64'), [12, 16, 15]), relay.reshape(var_3282.astype('int64'), [12, 16, 15]), ), 0)
call_3283 = relay.TupleGetItem(func_2530_call(relay.reshape(var_3282.astype('int64'), [12, 16, 15]), relay.reshape(var_3282.astype('int64'), [12, 16, 15]), ), 0)
func_2527_call = mod.get_global_var('func_2527')
func_2530_call = mutated_mod.get_global_var('func_2530')
call_3286 = relay.TupleGetItem(func_2527_call(relay.reshape(call_3281.astype('int64'), [12, 16, 15]), relay.reshape(var_3282.astype('int64'), [12, 16, 15]), ), 0)
call_3287 = relay.TupleGetItem(func_2530_call(relay.reshape(call_3281.astype('int64'), [12, 16, 15]), relay.reshape(var_3282.astype('int64'), [12, 16, 15]), ), 0)
uop_3290 = relay.rsqrt(var_3276.astype('float32')) # shape=(2, 12, 6)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
var_3305 = relay.var("var_3305", dtype = "float64", shape = (468,))#candidate|3305|(468,)|var|float64
call_3304 = relay.TupleGetItem(func_2728_call(relay.reshape(var_3305.astype('float64'), [6, 13, 6])), 0)
call_3306 = relay.TupleGetItem(func_2730_call(relay.reshape(var_3305.astype('float64'), [6, 13, 6])), 0)
uop_3310 = relay.sigmoid(call_3281.astype('float32')) # shape=(12, 16, 15)
uop_3312 = relay.sigmoid(call_3283.astype('float32')) # shape=(12, 16, 15)
output = relay.Tuple([bop_3277,var_3282,call_3286,uop_3290,call_3304,var_3305,uop_3310,])
output2 = relay.Tuple([bop_3277,var_3282,call_3287,uop_3290,call_3306,var_3305,uop_3312,])
func_3348 = relay.Function([var_3276,var_3282,var_3305,], output)
mod['func_3348'] = func_3348
mod = relay.transform.InferType()(mod)
var_3349 = relay.var("var_3349", dtype = "float64", shape = (2, 12, 6))#candidate|3349|(2, 12, 6)|var|float64
var_3350 = relay.var("var_3350", dtype = "int64", shape = (2880,))#candidate|3350|(2880,)|var|int64
var_3351 = relay.var("var_3351", dtype = "float64", shape = (468,))#candidate|3351|(468,)|var|float64
output = func_3348(var_3349,var_3350,var_3351,)
func_3352 = relay.Function([var_3349,var_3350,var_3351,], output)
mutated_mod['func_3352'] = func_3352
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3479 = relay.const([[[-3.202017,-8.501403,6.743476,1.301072,-1.222192,-8.905503],[1.479907,-0.817909,-0.110438,0.446068,-3.641947,3.618214],[-9.326266,3.346187,3.368569,7.520126,7.038729,6.586142],[-5.500949,8.606274,-5.976781,-0.775279,5.717668,-7.236186],[-2.890813,-3.655710,-4.218214,-8.568640,-6.623945,6.169629],[-4.913289,2.202845,8.600039,4.121282,8.792221,-9.728236],[-6.788398,2.442196,8.515855,2.238442,-9.927593,-6.306657],[3.219479,9.184429,-9.384283,8.761783,5.374518,-6.266467],[1.605752,-6.860438,7.797830,-9.985112,1.645293,6.151219],[-8.974217,-5.911901,-8.592048,1.956427,-1.366659,0.418659],[9.410439,6.597946,-8.039347,6.075925,1.437216,-0.570297]],[[-4.112082,9.164943,2.742337,-6.623737,0.622167,-3.381255],[9.561468,-9.199447,-4.590844,2.552981,-1.139369,5.671554],[-5.645695,7.675390,-0.361241,-3.153946,-7.689765,8.790324],[-6.332037,3.235503,-6.816476,9.369120,3.642838,5.883293],[-0.477442,-3.142855,-2.750163,2.421897,-7.229635,-8.562535],[-8.058556,-8.615371,-1.331912,-5.868035,5.072174,2.913629],[7.786742,-8.011345,-5.882933,8.186843,-5.673629,1.107577],[7.038658,5.891992,3.633120,-2.194619,7.610045,0.195764],[-7.714325,-1.735602,0.848614,-6.214547,0.482142,-8.553366],[-1.503040,-2.968576,6.326756,0.472146,-4.065199,-1.343870],[6.162926,3.914406,4.976374,-7.253884,5.914815,-1.949528]],[[-5.503998,3.605383,9.253815,3.016755,0.258898,-6.563316],[-8.608499,3.586283,-4.629037,-6.021709,4.096188,-3.023276],[-6.931591,-1.124525,-6.362434,5.736978,8.149565,-6.264691],[-5.618928,0.612357,5.707646,-0.343027,0.656398,-8.159630],[9.118613,4.765667,-1.119470,-3.234360,6.677920,-9.216101],[1.026560,-0.704706,9.017543,4.678598,2.472410,6.732036],[-2.597816,-6.214104,-5.506067,3.364890,2.450347,-9.384734],[5.384259,1.477787,7.280115,-4.437619,3.905558,-3.278534],[0.595255,-3.056847,-0.672508,8.760948,1.842168,-4.320230],[-5.170570,4.175854,2.503036,0.606810,-0.876457,4.116837],[2.053567,-0.843552,-1.516463,4.697305,-5.559606,-5.867736]],[[6.294226,2.791731,5.505220,-4.634521,-1.106168,-9.408195],[5.600533,-2.146260,-9.698812,-8.048226,1.930518,-8.729864],[6.691811,5.663794,3.989556,-7.995385,1.948045,6.057831],[1.878328,-3.777789,3.747055,7.698518,-9.942998,4.572640],[4.552003,-0.724945,-9.810387,6.186090,-9.385525,-1.617108],[-1.352061,5.246397,-2.408922,5.548241,-2.506729,8.921574],[-3.816790,0.013152,-3.617630,1.471401,-0.462948,-6.977973],[-6.763222,-8.049158,-5.524652,-9.883995,5.187176,-7.694241],[-5.925908,8.108642,8.532292,-0.600739,-4.833558,6.171413],[-9.471434,-4.396044,-2.155689,-7.009153,-1.786489,-4.340824],[6.237557,-8.854104,-3.213291,-3.658923,-9.433056,7.477667]],[[7.388729,6.725119,8.755537,-5.500579,8.812887,-7.227877],[-6.945326,-2.116006,8.744493,2.368347,0.195863,8.570773],[4.012488,-5.365263,-6.941550,2.722715,4.957695,9.386824],[2.425029,0.939997,-1.390260,1.480151,-4.266869,-4.616960],[-3.044786,-1.741643,6.117676,1.611970,3.596697,-1.677495],[8.509136,9.706160,-3.099373,-5.494100,4.950593,-1.896496],[5.243425,-6.840362,9.830263,-6.735411,-9.637579,1.301532],[-5.428007,-4.847697,-2.995456,9.464234,3.768789,-7.306368],[2.609773,1.517833,-0.610832,0.064788,6.657650,7.098558],[-0.827064,-3.907257,-6.613350,-5.451632,-0.247820,7.240098],[0.053204,7.686212,6.647553,-2.840126,-5.314603,5.195473]],[[3.481991,-1.374481,-1.285646,1.472636,5.371772,-2.771901],[2.399619,5.520461,7.747478,-9.525408,5.010141,3.287932],[6.697385,-1.946883,-6.599183,9.693300,-3.168231,-4.892739],[7.613011,5.441453,-2.587089,0.410580,-9.778306,5.187667],[1.618965,-6.796774,8.890433,0.258602,7.223085,-0.344806],[-6.396113,1.868327,-4.716377,3.331226,7.469498,-0.778401],[-1.026301,3.841949,-7.232085,1.271757,-1.631376,8.846904],[3.574750,-7.963130,-7.834267,-6.237333,-3.932780,4.419909],[-7.459432,7.587743,6.648702,2.041090,3.921186,-6.813522],[8.398798,4.087519,9.688806,-0.917533,9.788879,3.712808],[2.341329,-4.663178,6.871628,-1.970834,5.729833,2.181811]],[[-6.850421,-9.856712,4.258206,4.920942,-3.586790,-7.184987],[5.522602,8.073323,9.834642,-5.450768,-2.307966,5.762579],[-1.231833,9.994304,7.255058,-7.714450,4.644071,8.904330],[6.464927,-3.677727,2.510686,9.452369,1.411365,3.096386],[8.156588,0.300702,1.341929,4.559424,8.856547,5.722594],[0.032934,-0.036068,-3.995689,7.153313,-3.203689,-5.240974],[-3.284936,6.685852,-7.149176,5.976627,-3.166024,2.526311],[4.346514,-6.136576,-7.880071,8.082330,5.213428,-6.973387],[8.503520,-3.624464,0.584302,1.832721,-4.815456,6.106746],[2.058614,3.870919,-6.962249,9.771613,9.406961,-2.932506],[8.815466,-9.217533,9.480085,0.480020,-0.476579,-8.824722]],[[-4.921917,-4.799315,-1.906853,2.208701,-1.491649,-7.845878],[3.847064,-2.996369,9.916386,-3.118873,-7.462096,3.872683],[-4.537934,-9.098707,-8.024649,-2.369778,-0.535079,-4.442201],[2.983940,-5.599771,-5.419438,-2.593472,2.447973,-2.316666],[0.250782,4.632066,8.914862,5.768781,3.739920,0.635824],[-9.141174,-8.441344,-3.592387,-2.873560,-9.418160,1.524597],[4.260427,1.003996,-8.025842,9.364431,-8.219140,7.338853],[6.842544,1.254928,-7.092032,4.012616,6.689588,5.561571],[-1.861315,0.072099,-8.571755,2.831103,-6.625931,-6.789910],[-6.723310,-8.454514,4.190158,8.624645,-6.629313,6.180921],[5.858647,3.017970,2.874389,-3.216193,-6.414114,-3.398348]],[[-6.481029,-8.584442,-4.294036,6.072510,-7.972679,-9.625796],[2.074473,3.025472,-1.214581,-3.545072,9.775632,-9.489210],[-9.602771,-7.288801,-4.061171,3.807098,-4.077180,6.462709],[1.985056,5.107033,-3.972661,4.829459,3.697718,0.216729],[1.735859,3.318990,-4.809911,9.224653,-3.459469,8.337865],[1.080070,7.169648,8.282775,-8.817271,0.486115,-6.826190],[9.643759,6.270245,-0.228152,6.836140,-3.383150,-2.127023],[-5.497600,1.874719,3.717171,-1.193701,-9.628790,-5.652471],[-8.323950,-7.230799,4.629211,-9.432620,-9.794096,4.085480],[-6.186613,-9.777688,-5.058265,9.615344,8.747668,8.883585],[-5.882311,1.284823,-7.641805,-6.497915,-9.020660,-8.031053]],[[8.560185,9.805696,9.611545,7.131176,2.679514,-8.532108],[-7.397494,-9.430294,3.558128,3.956665,9.528505,-8.948074],[-1.839522,1.901828,6.277642,-2.605730,-3.693941,-4.094659],[6.604399,1.289368,8.172967,-9.575105,-3.515271,2.949138],[-9.851351,9.376223,0.735846,6.560318,-3.286792,2.454511],[0.375804,-4.250866,0.810218,4.098043,-4.493755,2.133414],[-6.670660,-4.993367,-2.525133,-6.074511,-0.904399,3.110735],[0.576901,2.163898,0.213296,7.285958,5.226964,-6.324416],[-6.486642,9.084583,-4.231868,3.178266,-3.590749,6.020508],[3.967104,7.001604,4.444879,-8.610087,-3.237059,-6.989552],[-9.474621,-1.744550,-2.997431,-8.709514,-2.466028,3.458723]],[[-0.505439,2.151013,-8.485485,1.276405,8.092193,1.697463],[4.623765,0.994094,-9.202848,9.040275,-2.640788,-6.385677],[-6.417259,8.733601,-6.448810,-4.592953,5.473594,3.504499],[-6.207782,-0.876102,4.001533,2.606907,3.562175,-1.333783],[-4.837155,-5.238346,6.726086,9.142103,1.920779,-1.927605],[-9.579104,-8.505532,0.904792,4.458947,-6.225996,4.529771],[-9.737162,7.762456,6.699171,6.570588,2.027650,-8.463193],[-0.540917,7.667305,5.119896,2.364801,-9.911081,2.602299],[8.504003,9.259763,-5.545859,8.354213,3.054180,-6.638155],[3.503983,5.968874,1.160412,9.719005,0.967015,9.539399],[3.534747,-9.264389,-1.348208,5.739333,5.012313,-3.157469]]], dtype = "float32")#candidate|3479|(11, 11, 6)|const|float32
uop_3480 = relay.log10(const_3479.astype('float32')) # shape=(11, 11, 6)
bop_3498 = relay.greater(uop_3480.astype('bool'), relay.reshape(const_3479.astype('bool'), relay.shape_of(uop_3480))) # shape=(11, 11, 6)
output = bop_3498
output2 = bop_3498
func_3503 = relay.Function([], output)
mod['func_3503'] = func_3503
mod = relay.transform.InferType()(mod)
mutated_mod['func_3503'] = func_3503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mutated_mod.get_global_var('func_3503')
call_3504 = func_3503_call()
output = call_3504
func_3505 = relay.Function([], output)
mutated_mod['func_3505'] = func_3505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_3523 = func_3503_call()
call_3524 = func_3503_call()
output = relay.Tuple([call_3523,])
output2 = relay.Tuple([call_3524,])
func_3532 = relay.Function([], output)
mod['func_3532'] = func_3532
mod = relay.transform.InferType()(mod)
output = func_3532()
func_3533 = relay.Function([], output)
mutated_mod['func_3533'] = func_3533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_3581 = relay.TupleGetItem(func_3532_call(), 0)
call_3582 = relay.TupleGetItem(func_3533_call(), 0)
output = relay.Tuple([call_3581,])
output2 = relay.Tuple([call_3582,])
func_3583 = relay.Function([], output)
mod['func_3583'] = func_3583
mod = relay.transform.InferType()(mod)
output = func_3583()
func_3584 = relay.Function([], output)
mutated_mod['func_3584'] = func_3584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_3633 = relay.TupleGetItem(func_3583_call(), 0)
call_3634 = relay.TupleGetItem(func_3584_call(), 0)
const_3641 = relay.const([[[False,True,True,False,False,False],[False,True,False,True,False,True],[True,True,False,True,False,False],[True,False,False,True,True,True],[False,True,False,True,False,True],[True,True,True,True,True,True],[True,True,False,True,True,True],[False,False,False,True,True,True],[True,True,True,True,False,False],[True,False,False,True,True,False],[False,True,True,True,False,False]],[[False,True,False,True,False,True],[False,True,True,False,False,False],[True,True,True,True,True,True],[True,False,False,True,True,True],[False,True,False,True,True,False],[False,True,True,False,False,False],[True,False,True,False,True,True],[False,False,False,False,True,True],[True,True,True,True,False,False],[True,False,False,True,False,True],[False,False,False,True,False,True]],[[True,True,True,False,True,False],[True,True,True,False,True,False],[True,True,True,True,False,False],[True,True,False,True,True,False],[False,True,False,True,False,False],[False,False,True,True,False,False],[False,False,False,True,False,True],[True,True,False,True,False,True],[True,False,False,True,True,True],[False,False,False,False,True,True],[True,True,True,False,False,True]],[[True,False,True,True,True,True],[False,True,True,True,False,True],[False,True,True,False,False,True],[False,False,True,False,True,False],[True,False,True,False,False,True],[False,True,False,True,False,True],[True,True,False,False,False,False],[True,False,True,True,False,False],[False,False,False,True,True,True],[True,False,True,False,True,False],[True,True,True,True,False,False]],[[True,True,True,True,True,True],[False,True,True,True,False,True],[True,False,False,False,True,True],[True,False,True,True,False,False],[True,True,True,False,True,False],[False,False,True,True,True,True],[False,True,False,True,True,False],[True,False,False,True,False,True],[False,False,True,True,True,True],[False,False,False,True,False,True],[True,True,True,True,False,True]],[[False,True,False,False,False,True],[False,True,False,False,False,False],[True,False,False,False,False,True],[True,False,True,True,True,False],[True,True,True,False,False,True],[True,False,False,False,False,True],[True,False,False,True,False,True],[False,True,True,False,True,True],[False,False,True,True,True,True],[True,False,False,False,True,False],[False,False,False,False,False,False]],[[True,False,False,False,True,False],[True,True,True,False,False,False],[False,False,False,True,True,True],[False,True,False,False,True,True],[False,True,True,False,False,False],[False,True,False,False,True,True],[False,False,True,True,True,True],[True,True,True,True,False,False],[True,True,True,True,True,True],[False,False,False,True,False,False],[True,True,False,True,True,True]],[[True,False,False,False,True,True],[True,True,False,False,False,False],[False,True,True,False,False,True],[True,False,True,True,False,True],[False,True,False,False,True,False],[True,False,False,True,False,True],[False,True,False,False,True,True],[True,True,False,False,True,True],[True,False,True,False,False,True],[False,False,True,False,False,False],[False,True,False,False,True,False]],[[False,True,True,False,False,False],[True,True,True,False,True,True],[True,True,True,False,True,True],[False,True,True,True,False,True],[True,False,True,True,True,False],[True,True,True,False,True,True],[False,True,False,True,True,False],[False,False,True,False,False,False],[True,False,False,True,True,False],[False,False,False,True,True,True],[True,False,False,True,False,False]],[[False,False,True,True,False,False],[True,False,False,False,False,False],[False,False,True,False,True,False],[False,True,True,True,True,False],[False,False,True,True,True,True],[True,False,False,False,True,False],[False,False,False,False,False,True],[False,False,True,True,True,False],[False,True,True,True,False,False],[True,True,True,False,False,False],[False,True,False,False,True,True]],[[False,True,True,False,True,True],[True,True,False,False,True,True],[False,True,False,False,False,True],[False,True,False,True,False,False],[False,False,True,False,False,False],[False,False,True,True,False,False],[True,False,True,True,False,False],[False,True,True,False,True,True],[True,True,True,True,True,True],[True,True,True,False,True,True],[False,True,True,True,True,True]]], dtype = "bool")#candidate|3641|(11, 11, 6)|const|bool
bop_3642 = relay.logical_and(call_3633.astype('bool'), relay.reshape(const_3641.astype('bool'), relay.shape_of(call_3633))) # shape=(11, 11, 6)
bop_3645 = relay.logical_and(call_3634.astype('bool'), relay.reshape(const_3641.astype('bool'), relay.shape_of(call_3634))) # shape=(11, 11, 6)
var_3650 = relay.var("var_3650", dtype = "bool", shape = (11, 11, 6))#candidate|3650|(11, 11, 6)|var|bool
bop_3651 = relay.floor_mod(const_3641.astype('float32'), relay.reshape(var_3650.astype('float32'), relay.shape_of(const_3641))) # shape=(11, 11, 6)
output = relay.Tuple([bop_3642,bop_3651,])
output2 = relay.Tuple([bop_3645,bop_3651,])
func_3654 = relay.Function([var_3650,], output)
mod['func_3654'] = func_3654
mod = relay.transform.InferType()(mod)
var_3655 = relay.var("var_3655", dtype = "bool", shape = (11, 11, 6))#candidate|3655|(11, 11, 6)|var|bool
output = func_3654(var_3655)
func_3656 = relay.Function([var_3655], output)
mutated_mod['func_3656'] = func_3656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3685 = relay.var("var_3685", dtype = "float32", shape = (9, 3, 8))#candidate|3685|(9, 3, 8)|var|float32
uop_3686 = relay.atanh(var_3685.astype('float32')) # shape=(9, 3, 8)
var_3689 = relay.var("var_3689", dtype = "float32", shape = (9, 3, 8))#candidate|3689|(9, 3, 8)|var|float32
bop_3690 = relay.greater_equal(uop_3686.astype('bool'), relay.reshape(var_3689.astype('bool'), relay.shape_of(uop_3686))) # shape=(9, 3, 8)
bop_3695 = relay.logical_xor(bop_3690.astype('int32'), relay.reshape(var_3685.astype('int32'), relay.shape_of(bop_3690))) # shape=(9, 3, 8)
output = relay.Tuple([bop_3695,])
output2 = relay.Tuple([bop_3695,])
func_3700 = relay.Function([var_3685,var_3689,], output)
mod['func_3700'] = func_3700
mod = relay.transform.InferType()(mod)
var_3701 = relay.var("var_3701", dtype = "float32", shape = (9, 3, 8))#candidate|3701|(9, 3, 8)|var|float32
var_3702 = relay.var("var_3702", dtype = "float32", shape = (9, 3, 8))#candidate|3702|(9, 3, 8)|var|float32
output = func_3700(var_3701,var_3702,)
func_3703 = relay.Function([var_3701,var_3702,], output)
mutated_mod['func_3703'] = func_3703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3734 = relay.var("var_3734", dtype = "float32", shape = (4, 7, 14))#candidate|3734|(4, 7, 14)|var|float32
uop_3735 = relay.rsqrt(var_3734.astype('float32')) # shape=(4, 7, 14)
func_2527_call = mod.get_global_var('func_2527')
func_2530_call = mutated_mod.get_global_var('func_2530')
var_3745 = relay.var("var_3745", dtype = "int64", shape = (2880,))#candidate|3745|(2880,)|var|int64
call_3744 = relay.TupleGetItem(func_2527_call(relay.reshape(var_3745.astype('int64'), [12, 16, 15]), relay.reshape(var_3745.astype('int64'), [12, 16, 15]), ), 0)
call_3746 = relay.TupleGetItem(func_2530_call(relay.reshape(var_3745.astype('int64'), [12, 16, 15]), relay.reshape(var_3745.astype('int64'), [12, 16, 15]), ), 0)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
const_3757 = relay.const([6.007635,0.717764,3.470779,-9.643111,-7.614652,4.583459,-3.203920,-0.498244,-9.662626,9.086285,-8.306286,4.636853,-8.871384,-1.230803,-3.435572,0.851750,8.182121,8.558828,4.417797,-0.017476,5.696484,-5.474009,4.626641,2.119600,-5.410752,0.923148,3.618817,4.400035,7.282854,0.085194,-7.203920,5.004891,0.785218,-8.433220,-1.282260,8.219799,2.509062,0.477571,-5.699587,-0.768946,6.008963,4.002979,-0.099275,-8.593851,7.933267,1.958798,3.206875,4.351660,-3.706271,4.506938,-2.532473,-6.045867,4.771712,8.264870,-2.347163,-0.925616,2.719412,-1.264584,2.546936,3.858593,3.029711,-0.047933,8.930305,3.864737,-3.804503,-1.525826,2.849834,-0.801751,-8.520022,5.810107,8.254994,5.804794,3.537438,-4.098158,-6.310349,5.184857,-6.365541,-3.894757,3.724589,2.376991,9.180839,5.013521,0.434164,0.025363,4.720042,-4.246006,-5.154808,3.170595,-8.632890,-0.460722,-0.279174,-7.173666,-8.857727,-7.629128,-6.824531,6.400326,-4.590713,7.823054,-5.089422,7.559980,5.459735,-7.515698,2.763997,5.511359,7.621269,9.029925,-7.626155,-8.514225,-1.549535,-3.072877,0.600251,-9.427550,-8.386115,9.465078,-0.366110,-1.714016,-1.306372,-9.656025,4.207885,4.360476,2.800223,-1.551603,-2.724273,-5.368630,2.720456,-4.007033,-2.956565,-2.204204,-2.334974,2.274018,8.200781,-6.133100,-9.559108,6.882613,-5.458922,-3.594939,9.770477,7.072509,-3.711913,2.946425,8.902020,-6.143082,-2.200525,-3.357637,-1.317800,-2.639573,-4.258493,6.847216,0.787443,-4.869456,-9.354826,9.291290,9.186660,2.236987,8.918385,1.317913,-1.738272,-7.305739,9.749115,2.520975,1.684240,7.073424,-5.239315,-9.631056,2.940331,-5.186858,-8.289724,-5.646459,-2.078981,8.570803,-5.678359,-1.364674,-1.420392,8.357632,-0.718758,5.239782,-2.342655,5.256679,5.000003,-9.473779,-3.968161,-7.459456,4.133449,-2.366282,9.883499,3.444828,-2.246921,-8.843608,-1.891701,-1.354587,0.616039,-7.737394,-5.900252,-9.196380,-1.523614,0.574858,0.412714,7.052968,-5.918067,1.294893,3.620679,2.927340,-6.541390,-8.257691,5.649140,6.352445,-3.467481,4.240880,9.933731,-9.032513,-2.797210,-6.261069,-4.047135,-5.256131,8.355408,-8.709534,-1.477568,5.460444,1.831189,-4.994056,-5.892004,4.714612,3.961381,-9.759761,9.966580,-9.551725,-3.905515,1.998782,-2.339416,7.319782,7.983868,-7.277227,0.762456,9.374347,9.624881,5.215411,0.452937,-1.181804,7.379726,-0.418612,-7.414666,6.420402,1.707234,3.939500,-4.427358,-4.638957,-9.181870,-7.366933,-9.266494,-3.800629,8.112276,1.767728,5.728838,0.252477,-3.599298,5.930013,0.169592,9.238813,9.929135,-1.124054,5.941250,-0.996484,-7.712266,5.727652,-9.232872,-2.609651,-5.485439,-4.660780,-1.684262,-2.645444,1.052721,5.210247,-5.646812,-2.934409,9.768081,-7.009747,6.542564,-9.226123,3.557537,-5.251052,3.975989,7.721027,-6.234765,7.723962,2.135523,-9.281177,0.650474,7.561087,-1.692740,-8.342900,1.519676,9.033985,8.157373,-2.884551,2.338670,-8.146916,5.212249,-6.511586,5.307444,-3.780333,-2.094089,-7.504994,-8.678659,4.175960,8.527132,-0.389882,-1.241386,9.548478,8.719751,-4.606169,-3.380778,-4.664282,-1.835510,6.607884,-0.669352,5.511027,-3.713667,0.508186,4.641858,-8.541479,-0.037813,4.632854,-4.632095,-0.850211,-2.820497,-7.386676,5.198562,0.915372,-3.029715,3.357604,-0.534678,7.415159,-2.339261,-2.074057,3.900882,-7.616154,0.699927,0.868763,-8.974945,-6.043483,-9.974626,2.262313,9.488544,-0.975820,-2.515358,-3.510303,-8.480566,4.566626,-7.157721,-9.048722,-2.769197,0.609024,3.380211,7.935396,-3.256029,-7.388115,6.281724,-4.991980,-9.851697,-6.190885,7.835071,-2.954803,-6.698246,-8.636378,9.127100,-4.373294,-2.591317,4.397130,-4.862482,4.361156,-5.330118,-4.654208,-7.780415,-4.634150,9.942790,7.173752,-9.297148,-0.069419,5.907035,4.109831,6.391160,9.654051,-1.998158,8.767445,1.677883,1.921778,6.228542,8.799033,3.962287,-6.410934,-0.926220,9.069976,3.043320,9.679169,-9.095672,2.755103,6.856842,3.888360,-7.692144,-0.761360,-5.422913,5.489850,3.703166,3.632467,2.634443,8.293467,1.692756,-1.819471,-9.666332,8.550314,-1.753737,8.406821,5.180643,8.784601,4.291689,-1.576929,-4.395021,8.225543,-7.837137,-8.830342,6.161349,-1.767796,-9.190158,0.535002,-8.285089,9.607595,-7.358381,-8.592436,-7.558334,2.308908,-7.390945,2.257130,6.179942,-2.487110,7.170269,7.809490,0.133494,9.902311,-8.861021,-9.918953,3.387943,-6.095377,-2.584568,-0.428239,-0.117912,5.330128,3.071915,3.231639,8.449742,-3.630741,-4.641823,5.804123,6.615610,9.294434,-7.451664,1.019886,-2.716867,3.387800,-9.346595,6.940969,4.608728,0.355479,7.607298,7.397003,8.923300,7.021098,-7.724775,6.976821], dtype = "float64")#candidate|3757|(468,)|const|float64
call_3756 = relay.TupleGetItem(func_2728_call(relay.reshape(const_3757.astype('float64'), [6, 13, 6])), 0)
call_3758 = relay.TupleGetItem(func_2730_call(relay.reshape(const_3757.astype('float64'), [6, 13, 6])), 0)
func_984_call = mod.get_global_var('func_984')
func_988_call = mutated_mod.get_global_var('func_988')
const_3760 = relay.const(-4, dtype = "int32")#candidate|3760|()|const|int32
var_3761 = relay.var("var_3761", dtype = "int32", shape = (2016,))#candidate|3761|(2016,)|var|int32
call_3759 = relay.TupleGetItem(func_984_call(relay.reshape(const_3760.astype('int32'), []), relay.reshape(var_3761.astype('int32'), [12, 12, 14]), ), 0)
call_3762 = relay.TupleGetItem(func_988_call(relay.reshape(const_3760.astype('int32'), []), relay.reshape(var_3761.astype('int32'), [12, 12, 14]), ), 0)
func_3006_call = mod.get_global_var('func_3006')
func_3010_call = mutated_mod.get_global_var('func_3010')
const_3773 = relay.const([-1,4,-9,-7,-2,10,9,2,4,3,2,5,8,-9,6,-8,6,-2,10,10,4,-10,4,6,-5,-1,1,-2,7,-2,3,1,4,4,5,-6,6,4,7,1,9,1,-9,10,4,10,-4,9,-8,-1,-9,-4,2,-6], dtype = "uint8")#candidate|3773|(54,)|const|uint8
call_3772 = relay.TupleGetItem(func_3006_call(relay.reshape(const_3773.astype('uint8'), [1, 6, 9]), relay.reshape(const_3760.astype('int32'), []), ), 2)
call_3774 = relay.TupleGetItem(func_3010_call(relay.reshape(const_3773.astype('uint8'), [1, 6, 9]), relay.reshape(const_3760.astype('int32'), []), ), 2)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_3786 = func_3503_call()
call_3787 = func_3503_call()
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_3803 = relay.TupleGetItem(func_3532_call(), 0)
call_3804 = relay.TupleGetItem(func_3533_call(), 0)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_3805 = relay.TupleGetItem(func_3583_call(), 0)
call_3806 = relay.TupleGetItem(func_3584_call(), 0)
var_3813 = relay.var("var_3813", dtype = "float32", shape = (4, 7, 14))#candidate|3813|(4, 7, 14)|var|float32
bop_3814 = relay.less_equal(uop_3735.astype('bool'), relay.reshape(var_3813.astype('bool'), relay.shape_of(uop_3735))) # shape=(4, 7, 14)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
call_3819 = relay.TupleGetItem(func_2728_call(relay.reshape(call_3756.astype('float64'), [6, 13, 6])), 0)
call_3820 = relay.TupleGetItem(func_2730_call(relay.reshape(call_3756.astype('float64'), [6, 13, 6])), 0)
output = relay.Tuple([call_3744,var_3745,call_3756,const_3757,call_3759,const_3760,var_3761,call_3772,const_3773,call_3786,call_3803,call_3805,bop_3814,call_3819,])
output2 = relay.Tuple([call_3746,var_3745,call_3758,const_3757,call_3762,const_3760,var_3761,call_3774,const_3773,call_3787,call_3804,call_3806,bop_3814,call_3820,])
func_3822 = relay.Function([var_3734,var_3745,var_3761,var_3813,], output)
mod['func_3822'] = func_3822
mod = relay.transform.InferType()(mod)
var_3823 = relay.var("var_3823", dtype = "float32", shape = (4, 7, 14))#candidate|3823|(4, 7, 14)|var|float32
var_3824 = relay.var("var_3824", dtype = "int64", shape = (2880,))#candidate|3824|(2880,)|var|int64
var_3825 = relay.var("var_3825", dtype = "int32", shape = (2016,))#candidate|3825|(2016,)|var|int32
var_3826 = relay.var("var_3826", dtype = "float32", shape = (4, 7, 14))#candidate|3826|(4, 7, 14)|var|float32
output = func_3822(var_3823,var_3824,var_3825,var_3826,)
func_3827 = relay.Function([var_3823,var_3824,var_3825,var_3826,], output)
mutated_mod['func_3827'] = func_3827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_3829 = relay.TupleGetItem(func_3532_call(), 0)
call_3830 = relay.TupleGetItem(func_3533_call(), 0)
func_1715_call = mod.get_global_var('func_1715')
func_1719_call = mutated_mod.get_global_var('func_1719')
var_3846 = relay.var("var_3846", dtype = "float64", shape = (720,))#candidate|3846|(720,)|var|float64
call_3845 = func_1715_call(relay.reshape(var_3846.astype('float64'), [4, 12, 15]), relay.reshape(var_3846.astype('float64'), [4, 12, 15]), )
call_3847 = func_1715_call(relay.reshape(var_3846.astype('float64'), [4, 12, 15]), relay.reshape(var_3846.astype('float64'), [4, 12, 15]), )
output = relay.Tuple([call_3829,call_3845,var_3846,])
output2 = relay.Tuple([call_3830,call_3847,var_3846,])
func_3862 = relay.Function([var_3846,], output)
mod['func_3862'] = func_3862
mod = relay.transform.InferType()(mod)
mutated_mod['func_3862'] = func_3862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3863 = relay.var("var_3863", dtype = "float64", shape = (720,))#candidate|3863|(720,)|var|float64
func_3862_call = mutated_mod.get_global_var('func_3862')
call_3864 = func_3862_call(var_3863)
output = call_3864
func_3865 = relay.Function([var_3863], output)
mutated_mod['func_3865'] = func_3865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_3911 = relay.TupleGetItem(func_3532_call(), 0)
call_3912 = relay.TupleGetItem(func_3533_call(), 0)
var_3918 = relay.var("var_3918", dtype = "bool", shape = (11, 11, 6))#candidate|3918|(11, 11, 6)|var|bool
bop_3919 = relay.logical_xor(call_3911.astype('uint8'), relay.reshape(var_3918.astype('uint8'), relay.shape_of(call_3911))) # shape=(11, 11, 6)
bop_3922 = relay.logical_xor(call_3912.astype('uint8'), relay.reshape(var_3918.astype('uint8'), relay.shape_of(call_3912))) # shape=(11, 11, 6)
func_2422_call = mod.get_global_var('func_2422')
func_2425_call = mutated_mod.get_global_var('func_2425')
var_3926 = relay.var("var_3926", dtype = "float32", shape = (140,))#candidate|3926|(140,)|var|float32
call_3925 = relay.TupleGetItem(func_2422_call(relay.reshape(var_3926.astype('float32'), [7, 5, 4])), 0)
call_3927 = relay.TupleGetItem(func_2425_call(relay.reshape(var_3926.astype('float32'), [7, 5, 4])), 0)
func_2185_call = mod.get_global_var('func_2185')
func_2188_call = mutated_mod.get_global_var('func_2188')
var_3935 = relay.var("var_3935", dtype = "float32", shape = (192,))#candidate|3935|(192,)|var|float32
call_3934 = func_2185_call(relay.reshape(var_3935.astype('float32'), [16, 2, 6]))
call_3936 = func_2185_call(relay.reshape(var_3935.astype('float32'), [16, 2, 6]))
output = relay.Tuple([bop_3919,call_3925,var_3926,call_3934,var_3935,])
output2 = relay.Tuple([bop_3922,call_3927,var_3926,call_3936,var_3935,])
func_3945 = relay.Function([var_3918,var_3926,var_3935,], output)
mod['func_3945'] = func_3945
mod = relay.transform.InferType()(mod)
var_3946 = relay.var("var_3946", dtype = "bool", shape = (11, 11, 6))#candidate|3946|(11, 11, 6)|var|bool
var_3947 = relay.var("var_3947", dtype = "float32", shape = (140,))#candidate|3947|(140,)|var|float32
var_3948 = relay.var("var_3948", dtype = "float32", shape = (192,))#candidate|3948|(192,)|var|float32
output = func_3945(var_3946,var_3947,var_3948,)
func_3949 = relay.Function([var_3946,var_3947,var_3948,], output)
mutated_mod['func_3949'] = func_3949
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3986 = relay.var("var_3986", dtype = "float64", shape = (14, 2, 7))#candidate|3986|(14, 2, 7)|var|float64
uop_3987 = relay.cosh(var_3986.astype('float64')) # shape=(14, 2, 7)
output = relay.Tuple([uop_3987,])
output2 = relay.Tuple([uop_3987,])
func_3990 = relay.Function([var_3986,], output)
mod['func_3990'] = func_3990
mod = relay.transform.InferType()(mod)
mutated_mod['func_3990'] = func_3990
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3991 = relay.var("var_3991", dtype = "float64", shape = (14, 2, 7))#candidate|3991|(14, 2, 7)|var|float64
func_3990_call = mutated_mod.get_global_var('func_3990')
call_3992 = func_3990_call(var_3991)
output = call_3992
func_3993 = relay.Function([var_3991], output)
mutated_mod['func_3993'] = func_3993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_4016 = func_3503_call()
call_4017 = func_3503_call()
func_2185_call = mod.get_global_var('func_2185')
func_2188_call = mutated_mod.get_global_var('func_2188')
const_4030 = relay.const([1.187387,0.841477,-5.680088,1.562235,-7.657010,4.469454,0.932392,-6.575243,-4.341544,6.561552,-1.725222,5.188943,-0.130848,-3.521557,5.784475,3.895362,8.697730,6.410848,-1.108200,-0.516797,-4.043538,5.211331,-5.344068,-9.089883,3.990956,4.876148,-6.522964,-3.610739,3.670946,-1.194700,2.721992,6.989298,-5.192463,-0.564711,-6.142180,0.035541,5.012488,-3.982530,-6.816142,-2.515749,-1.952421,-0.429564,-2.005867,1.156852,5.630690,0.146741,6.755002,-5.587837,0.639382,9.536358,7.709966,-2.837456,8.129597,-9.116814,3.449768,-0.855034,5.281333,-9.552909,3.176741,2.248166,-0.515172,1.213809,-5.114055,9.423459,3.465088,7.257708,-2.733845,1.201911,-4.228896,2.233870,-2.828132,7.547116,-0.177559,1.958188,7.431117,4.156336,1.624324,0.783111,-9.871716,1.284018,5.629512,-2.504761,1.660495,-5.795162,-5.772586,1.565770,1.429188,-1.989484,9.989538,8.575251,-2.378223,-5.819846,0.476352,7.939176,-7.445851,1.115048,6.400213,5.728969,8.743643,-3.333889,-3.606172,-7.369197,-5.492047,4.809540,0.192212,-6.980690,1.459101,8.712090,7.816321,-1.023150,-4.616996,1.458048,-1.252698,-7.516428,-9.521421,6.615994,-3.821377,-6.333098,-2.083025,-6.000351,-7.324236,3.211020,5.893411,8.858507,-8.157502,3.853867,3.869188,-9.405632,1.864146,-3.684973,-7.397621,-2.022003,6.102982,0.960760,5.195166,5.906568,1.281871,6.353363,-1.902188,6.784132,1.063359,9.680865,3.191541,-5.406577,-9.762886,7.116786,-6.860948,4.239695,-6.513919,4.881065,5.089010,-9.656215,6.146359,7.130412,-2.029216,-2.882661,8.075395,-9.942395,-2.821967,-6.260847,6.385542,3.686422,2.986690,-4.989696,7.338258,0.790433,-4.281410,0.621520,-1.858968,9.175564,3.643489,-7.524856,6.042401,-4.488307,9.390529,-2.166372,-0.362550,-4.559172,9.753435,9.217844,-0.915491,0.087958,-5.729717,-2.160126,6.545027,9.922071,-5.274269,-7.935589,6.632414,7.598704,5.800949,9.695441], dtype = "float32")#candidate|4030|(192,)|const|float32
call_4029 = func_2185_call(relay.reshape(const_4030.astype('float32'), [16, 2, 6]))
call_4031 = func_2185_call(relay.reshape(const_4030.astype('float32'), [16, 2, 6]))
func_2185_call = mod.get_global_var('func_2185')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_4032 = func_2185_call(relay.reshape(call_4029.astype('float32'), [16, 2, 6]))
call_4033 = func_2185_call(relay.reshape(call_4029.astype('float32'), [16, 2, 6]))
var_4034 = relay.var("var_4034", dtype = "float32", shape = (16, 2, 6))#candidate|4034|(16, 2, 6)|var|float32
bop_4035 = relay.multiply(call_4032.astype('uint16'), relay.reshape(var_4034.astype('uint16'), relay.shape_of(call_4032))) # shape=(16, 2, 6)
bop_4038 = relay.multiply(call_4033.astype('uint16'), relay.reshape(var_4034.astype('uint16'), relay.shape_of(call_4033))) # shape=(16, 2, 6)
output = relay.Tuple([call_4016,call_4029,const_4030,bop_4035,])
output2 = relay.Tuple([call_4017,call_4031,const_4030,bop_4038,])
func_4052 = relay.Function([var_4034,], output)
mod['func_4052'] = func_4052
mod = relay.transform.InferType()(mod)
var_4053 = relay.var("var_4053", dtype = "float32", shape = (16, 2, 6))#candidate|4053|(16, 2, 6)|var|float32
output = func_4052(var_4053)
func_4054 = relay.Function([var_4053], output)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_4095 = relay.TupleGetItem(func_3532_call(), 0)
call_4096 = relay.TupleGetItem(func_3533_call(), 0)
uop_4100 = relay.sinh(call_4095.astype('float64')) # shape=(11, 11, 6)
uop_4102 = relay.sinh(call_4096.astype('float64')) # shape=(11, 11, 6)
bop_4110 = relay.maximum(uop_4100.astype('int32'), relay.reshape(call_4095.astype('int32'), relay.shape_of(uop_4100))) # shape=(11, 11, 6)
bop_4113 = relay.maximum(uop_4102.astype('int32'), relay.reshape(call_4096.astype('int32'), relay.shape_of(uop_4102))) # shape=(11, 11, 6)
func_3822_call = mod.get_global_var('func_3822')
func_3827_call = mutated_mod.get_global_var('func_3827')
var_4115 = relay.var("var_4115", dtype = "float32", shape = (392,))#candidate|4115|(392,)|var|float32
const_4116 = relay.const([10,1,-7,-3,-7,-5,-10,7,10,4,-8,-5,-4,2,-8,10,-8,5,6,-4,-4,-8,-4,8,-1,-8,-3,-1,-5,-4,10,8,-7,-5,10,-7,-10,3,-2,-8,1,1,2,2,-4,8,-2,-4,-9,1,-10,-6,-5,-4,7,-1,9,6,-3,9,-7,-3,-5,-8,-10,4,9,-10,-8,-3,-6,7,6,9,4,-9,4,7,-3,-4,6,-2,-9,-1,-7,-3,-9,-10,-4,6,-4,-8,-9,8,2,4,9,4,6,-6,-10,-8,9,-5,5,-2,8,-1,-5,-10,10,-6,8,8,5,-9,-3,5,-4,-9,-4,2,-9,1,-2,10,3,-5,-5,-8,-9,5,-3,5,5,-8,5,2,-1,-7,-2,-6,-4,-7,-4,-9,-4,-4,-9,4,-5,2,2,-3,7,-5,10,3,10,4,6,6,2,-7,-9,4,5,3,9,10,7,-4,-9,-10,10,-5,-9,-6,-1,1,-6,-5,2,8,-3,7,6,-4,10,-5,9,-7,-1,9,-6,3,7,2,-5,1,1,-5,-1,5,2,-4,-10,-9,-5,-6,-1,4,-6,-7,9,6,-6,-8,-9,-8,2,1,-4,4,1,10,-8,1,-9,4,4,7,-10,-7,-7,-9,-9,-1,-3,10,-7,-7,5,1,-6,-3,5,-10,-6,-4,-6,-1,5,7,9,3,10,-2,-8,10,-8,-4,-2,5,-3,-10,-4,-3,-3,7,10,1,-10,6,6,3,6,4,-2,-5,-10,6,-3,2,-1,-1,9,-2,5,-8,-1,-4,8,4,-8,7,-3,-3,3,-6,6,-7,9,3,-5,-4,4,5,5,2,-8,5,-3,10,6,2,1,-7,7,6,-3,-10,8,6,5,-9,8,-6,2,7,-2,-8,-8,-5,4,-1,-2,5,6,-3,1,6,4,8,-10,2,8,4,6,3,1,-9,4,-2,7,-3,-5,-8,3,-5,-3,-4,10,6,-9,7,4,-2,-2,-1,8,-7,-3,4,-1,2,9,-6,3,-4,-5,-2,-7,-7,7,-9,-10,-9,-1,2,3,7,-9,10,7,6,-5,10,3,4,-3,-6,-9,-9,-2,-2,6,-9,-4,-9,-3,2,-3,3,-10,-5,-7,-8,-8,7,-10,6,-10,-1,2,-7,4,6,-2,1,-5,4,9,-10,-1,-8,-8,8,-7,-4,10,-7,-3,-4,-3,8,3,-2,6,-1,1,-9,-2,-6,-6,10,-4,-4,10,-1,-3,3,-10,10,8,-2,-9,-7,8,3,-6,3,10,6,-3,4,-5,-4,3,1,-3,2,6,6,5,-9,10,10,7,-3,2,-8,6,3,4,-1,-1,-1,-2,-10,-6,-7,-10,8,4,10,9,-4,10,4,-3,2,-10,10,2,9,8,-4,-3,-8,6,-3,-5,-1,6,8,-10,5,5,-2,-5,5,-6,-2,3,-6,-7,5,-9,9,-2,7,7,-4,7,-9,8,6,3,3,-9,7,1,9,10,5,5,6,4,-4,7,-3,-7,6,-6,-6,-9,4,6,-10,-1,8,7,-10,3,3,-9,-4,-5,8,1,-8,-8,-2,6,-1,-7,5,-1,6,-10,6,3,-8,2,10,2,8,2,4,-2,-7,2,-2,8,8,4,1,-6,8,7,-5,-7,6,-3,-7,3,-5,-5,-9,4,3,3,-7,-5,9,2,8,7,9,6,8,-2,-6,9,-2,-3,10,8,-5,2,-4,7,4,-8,5,-10,5,5,9,-7,6,-5,-7,4,8,7,-10,6,10,8,-9,-10,10,-6,-9,1,4,-2,1,-7,3,4,8,-9,3,-4,6,7,-9,-7,5,-4,4,-1,1,7,-2,9,-9,10,6,6,-8,-9,5,5,-4,8,4,-6,-9,-1,1,3,-8,6,7,-5,-5,3,-10,8,5,3,-9,-4,-1,-1,5,-4,9,5,10,-2,-4,-4,3,-10,10,-10,4,9,-1,8,8,-8,-2,4,5,-8,1,5,4,4,1,-4,10,-2,4,6,4,9,-9,9,-9,4,8,7,5,7,7,-10,-5,-9,-2,10,-1,3,4,-5,-10,-4,-6,-4,4,6,-3,8,9,-6,2,-1,7,-4,-8,5,-8,10,-9,5,-6,-5,-7,8,2,-9,1,9,3,-10,-4,9,-3,-6,-3,-8,-1,-9,-9,4,-10,8,-2,3,2,-4,-8,10,4,-8,8,4,-10,-10,10,10,9,-3,-5,-4,-2,5,5,-3,-3,4,8,1,-2,7,-6,-4,-5,4,5,-8,10,7,9,2,3,-3,7,1,6,-1,-6,-5,-2,-2,-9,-4,-6,-4,-2,-8,4,8,-7,1,6,8,-9,-5,-4,-7,-9,-3,3,9,4,2,1,1,10,3,-6,-10,-6,7,1,-6,-7,3,-6,5,2,-10,-1,8,3,-7,-4,5,9,-1,-7,1,6,6,-8,2,10,10,-2,-3,2,5,5,10,-3,-8,-10,8,3,-7,-5,-1,-10,-8,-1,-7,-1,3,-4,3,3,-2,8,-8,4,-4,-4,-5,7,-7,4,-3,6,-2,6,2,5,-2,-3,-6,4,5,-6,-2,-4,1,-3,-5,-8,-3,-2,-4,8,10,6,6,7,-8,4,3,-9,7,9,-2,1,-3,-10,-10,5,-8,5,1,-7,-4,-10,-10,3,2,-1,1,2,5,-1,10,4,-8,-4,-2,9,4,4,10,-3,-1,9,-6,-6,-4,-5,-4,2,9,-1,1,-8,-9,10,10,-4,-6,3,-5,-3,5,-3,9,10,-1,1,-1,6,-1,-9,-10,4,-7,9,5,1,2,-10,9,-10,-1,4,-10,-1,-9,-4,5,-4,-6,-4,-5,-2,9,7,-3,8,-8,7,-5,8,1,10,1,-6,-8,-9,-5,9,4,2,5,-1,-2,-10,7,10,2,-1,5,4,-8,-6,6,7,-3,5,-8,-2,5,9,2,7,1,-8,7,-10,7,-10,-3,-10,7,-6,-4,-9,-10,10,-10,-7,6,7,-9,10,5,6,-8,-6,-6,2,-3,-8,9,-7,4,10,-9,-3,4,-4,-5,8,-9,-10,7,4,3,4,-9,-1,-7,4,7,-4,-3,1,1,3,4,-4,5,2,1,10,-1,4,1,3,5,9,8,-8,-9,-8,6,5,-1,1,-5,1,-1,1,10,10,-3,-3,-10,9,-2,2,8,-9,-4,-10,-3,-4,-5,6,1,1,6,-5,5,-6,3,-4,5,2,6,-10,-3,3,9,3,7,4,-10,-10,4,-1,-5,-10,10,2,3,5,4,6,-9,-1,-3,-10,5,7,7,6,4,-2,5,-10,-6,6,5,3,-1,10,1,-6,-1,6,2,10,6,-10,-6,1,7,1,-7,6,1,1,-8,-8,3,-7,-6,1,-8,4,1,-5,-3,2,3,8,-6,5,8,-2,-9,-6,-7,6,-9,-1,-6,-1,-5,8,3,-9,7,-4,1,-7,-7,3,1,-1,-10,1,9,4,6,-9,8,-1,-5,-9,1,5,1,5,-9,-2,-9,6,6,-9,2,3,-7,6,-9,8,-2,-1,-1,5,-3,9,-10,9,5,-8,7,8,8,-7,8,9,8,-3,6,-1,2,10,-6,-8,6,-9,-1,-8,10,6,-1,-10,-4,-10,-10,9,10,6,8,-9,1,-9,5,-1,-3,5,-1,4,9,-6,-2,2,6,-10,-1,-1,4,-5,9,6,-1,7,9,9,-3,6,2,9,-6,-6,-7,9,9,2,8,-2,-8,-2,10,4,8,1,10,2,1,2,5,9,3,-1,-9,1,2,6,-7,-7,2,7,-8,-9,6,-6,3,4,9,7,10,9,3,6,-6,7,9,-2,-2,9,-2,-7,-2,-1,8,-3,7,-10,7,-10,-7,5,-10,6,-9,10,-9,6,-1,4,-6,6,1,4,10,-1,3,-2,2,-7,-10,-2,-7,2,-7,5,-5,7,-5,-2,-8,-1,-10,6,-2,4,-1,2,-7,5,-1,7,3,10,6,-4,-8,5,-9,-1,-3,4,-3,1,-9,6,-1,5,-9,-2,8,1,-3,5,7,-3,-3,4,3,10,6,-3,-8,-8,5,4,-8,-1,-3,-2,-4,-3,-4,-5,-4,9,10,6,-2,7,-6,3,7,-4,-10,-3,3,-3,2,-4,-4,8,-6,-4,-1,-6,-3,3,-2,-2,-5,-1,10,-7,-4,1,-3,4,3,10,8,-3,4,2,-2,2,-9,8,-5,-4,-6,-8,3,-10,9,-2,-7,-7,10,-9,-6,-2,4,-6,4,9,-6,9,-7,8,1,3,7,-1,1,-1,-2,2,2,-4,-8,4,-10,-5,-4,-4,-5,2,-9,10,4,-7,-2,-2,-6,1,-1,-10,-10,7,8,-8,8,-6,5,-7,5,7,2,4,-8,-2,1,-10,-6,4,10,-8,4,-7,8,-9,-7,-4,6,7,-4,4,4,8,-3,-6,6,3,-8,10,6,10,-6,2,-2,-7,-1,-4,5,5,-8,-10,4,6,-4,7,6,3,2,3,6,2,10,-2,-10,10,-7,2,-4,3,-7,-5,-10,6,-4,5,10,7,5,-5,-6,3,-5,-5,5,6,10,4,10,1,-8,3,-6,-8,-2,6,-9,-1,3,-5,4,8,-3,-4,-4,-6,-3,-10,1,-10,2,9,2,-6,-6,3,2,-5,-6,5,-6,-2,-10,-8,2,-2,-3,-6,2,9,-4,-7,-4,9,-1,-9,7,-8,6,8,5,4,2,2,-3,2,-3,-2,-1,-6,7,-1,-9,-1,-8,-2,-8,10,8,4,3,9,-4,3,-3,-8,-8,-7,10,1,7,-1,-10,7,-5,9,8,5,10,7,-1,-6,-6,6,-10,-5,10,4,-7,10,-3,-1,9,-4,4,-4,8,3,-4,-9,-6,3,-10,-10,9,10,-10,-6,-7,-8,2,5,4,4,-9,-2,9,2,4,8,-1,9,9,10,6,8,-2,7,-3,3,6,-6,1,-2,-10,-10,9,2,-5,-6,4,10,-7,1,-10,3,-10,-8,-6,7,3,5,-7,9,-3,6,9,3,-2,9,1,-7,8,1,8,-10,-5,2,-3,-5,-8,-4,-6,-6,-3,2,4,4,-7,-7,-3,7,-1,-2,-3,-3,-10,9,-5,-4,-7,-4,-8,-4,5,3,8,8,10,-6,-8,2,-7,4,6,-2,-6,6,5,10,-3,10,2,3,-9,-3,-9,5,-9,-9,6,-8,10,-6,-3,-6,9,8,-3,3,1,9,4,7,10,6,9,-8,-9,-3,3,9,-5,-5,-9,10,-6,-1,2,4,5,-10,6,-5,-4,-9,10,-9,6,-5,2,-4,-4,-9,-4,10,2,6,-8,5,9,-9,2,6,-1,3,-6,-4,-4,9,-7,-7,-9,-9,2,-8,-5,-2,4,5,8,-1,-6,5,9,8,-2,-4,-8,7,6,4,2,-8,-3,2,-10,-4,-7,8,4,1,-3,-5,8,4,7,5,4,-6,8,-8,10,-7,-2,4,-1,2,-9,-6,8,1,7,-7,-1,8,8,8,-10,6,9,10,4,-5,-8,2,-2,5,8,2,2,9,-8,9,-3,1,-6,2,-4,7,-2,10,-1,-5,5,-10,-7,-9,7,2,5,-2,8,-5,2,4,8,-8,-1,9,10,4,-8,2,-1,7,-2,6,-2,-2,-2,8,2,-10,9,-10,-9,-6,-5,4,5,-1,8,-6,-8,-5,-7,-2,-9,4,10,-6,-8,5,1,9,-1,-2,8,1,6,-10,-1,4,3,-9,-1,1,9,3,9,7,-4,1,9,-10,2,-8,2,-4,-9,9,9,-9,8,-2,4,7,10,-2,3,-4,3,7,-5,10,3,-3,-9,-3,-4,4,-4,-8,10,-3,-3,6,-10,-9,4,-10,9,1,8,5,-7,-4,1,-5,-3,5,-5,1,-6,2,-2,-8,8,10,-1,9,-5,1,6,-8,6,4,6,9,-6,1,3,-10,9,8,5,10,-10,-8,10,-5,1,8,-7,-7,-7,-2,10,-5,1,6,1,-8,10,-9,-1,-5,-6,-8,-9,7,-7,-10,10,-3,7,9,-7,10,10,-8,-6,3,-5,4,-10,-1,9,-4,-7,3,6,3,-8,3,-2,1,3,9,-9,-3,3,7,-5,4,6,7,9,9,3,-7,4,-5,4,-6,-7,5,3,6,3,-2,-5,-2,7,10,-7,6,-5,-8,-5,5,3,3,-1,6,9,2,-4,-6,8,-2,-5,6,-1,10,-1,9,-4,-2,3,7,-3,-6,5,-10,8,-8,4,2,10,-3,-8,7,-9,6,-6,-6,4,-7,-3,-2,1,-5,-5,2,10,8,-2,-9,5,-4,10,9,-3,-3,-3,1,-6,-1,-5,8,-10,5,-3,-4,-10,9,-10,4,-7,4,-1,-6,-1,-7,1,4,-2,-5,3,-3,-8,3,-1,5,-3,7,-2,-8,-1,-1,-10,6,-6,-5,2,4,-10,-10,-5,8,4,1,-10,10,3,8,10,5,6,-7,-8,8,1,1,-5,-3,6,-4,2,-2,5,8,3,-3,3,-7,2,-3,5,10,-4,-8,6,1,-6,-3,-10,-8,6,1,-1,4,-6,-8,-2,-3,-9,7,3,-5,10,1,1,-2,-9,10,-5,-5,3,4,-10,-2,-1,6,6,4,9,5,-3,1,-3,-1,-7,-9,-10,8,3,-10,-8,8,-10,-1,6,-1,4,-10,-4,5,-9,-4,1,-10,-1,-9,-9,-4,-9,-9,10,3,-3,2,8,-9,-6,-8,4,-9,10,-5,-5,9,-1,-9,10,6,5,-9,7,-9,-10,8,-7,-10,-7,8,-1,5,7,4,6,-9,7,-5,5,-7,-3,8,6,-8,10,-6,-5,2,7,-9,5,3,7,8,3,6,4,5,3,-4,3,5,-3,2,-4,-2,-3,3,-4,-2,10,-1,6,-4,-3,-2,-8,-4,6,10,9,1,6,1,-6,-7,3,-9,-7,-7,-1,7,-8,10,-9,3,2,-1,7,10,-7,10,-6,10,-1,-4,-8,2,1,1,2,-7,10,-7,-10,-2,6,8,8,5,-4,4,7,-9,7,8,4,8,-3,-2,-1,-1,-6,-9,4,-6,1,10,5,6,-9,-5,-10,-8,-5,-8,-7,-5,8,7,-8,-2,-2,-6,-4,-1,9,-8,9,1,-8,-2,8,8,-1,-9,10,7,4,1,8,-10,9,5,6,4,5,-9,-5,-10,-3,-3,-10,5,6,3,1,10,-3,-10,8,-3,1,-9,-10,-3,10,8,-8,6,-10,-5,-4,2,9,6,-7,-2,2,5,2,7,-5,10,7,-5,-6,-1,-7,-8,7,4,3,-2,-9,9,6,1,-10,-3,8,-7,10,5,-10,-4,6,-9,-3,-6,-10,4,-2,5,6,10,-8,10,-4,5,-9,1,6,6,2,4,10,6,-2,3,-1,-4,9,-6,1,7,10,-5,9,-6,7,3,-7,-7,-1,7,-3,-10,-6,-7,8,7,3,4,5,-3,1,8,-4,-7,7,-9,-6,5,5,-1,8,-1,-9,-1,5,5,-9,-6,-1,-9,6,1,7,5,9,-3,3,-8,-8,-5,2,-1,-6,-3,9,-5,8,-8,-3,-6,-1,9,-4,-6,-5,-7,4,7,6,-5,2,1,-6,-4,6,-1,-9,-10,-7,-5,-9,1,-2,-3,8,7,-6,7,-9,-10,1,9,2,-4,8,-1,-4,10,1,-6], dtype = "int64")#candidate|4116|(2880,)|const|int64
const_4117 = relay.const([-7,2,-8,-7,6,-10,1,-6,10,4,1,-4,-4,6,3,5,-4,-4,-10,3,-10,-2,-4,5,4,-5,-7,-8,5,-5,9,10,9,-8,-6,8,3,-8,8,-10,3,9,-6,3,1,2,7,5,-6,6,1,10,4,2,-1,6,8,6,-2,-7,-4,-3,3,-7,-9,10,9,-8,10,-8,-10,7,-10,4,-9,-3,2,-3,3,3,-7,6,5,-10,1,7,2,1,-8,-2,-8,1,-2,-4,-6,-9,-1,8,6,-2,6,10,7,10,6,2,6,3,-8,4,-3,-9,-5,-10,-5,-2,6,-10,1,8,-1,-1,-6,6,-1,-9,1,-7,-5,1,-1,-2,3,10,4,-5,-8,4,1,9,-8,6,-4,-10,-2,-10,4,-2,6,4,1,4,6,-5,-8,8,-1,-7,-9,-6,10,8,8,2,3,5,-3,-5,-7,-7,5,2,2,-4,8,4,6,1,-1,9,7,7,-4,-1,5,7,3,-7,-9,-6,1,-7,9,2,-1,3,6,9,4,-1,8,-8,-7,8,4,-7,3,1,-1,3,5,-7,-7,10,-8,8,-3,7,-1,-8,-8,-9,8,-4,-4,-9,2,-9,6,-10,-4,-10,-7,7,-1,-1,1,-1,-2,7,3,-5,6,6,5,4,-4,-4,-1,-7,5,5,-1,-6,3,-9,1,-1,-9,-1,-3,-2,1,-8,-9,7,6,-2,8,10,-3,-8,-2,-3,8,-5,-1,9,-7,4,-5,-1,-5,-8,3,6,8,10,5,-2,9,5,6,-10,5,6,5,1,-10,-2,-8,9,-2,-5,-2,1,4,-1,-4,-1,5,8,-5,-1,-9,-10,-1,2,-5,4,4,3,3,-6,5,5,5,1,4,8,6,8,-4,3,-7,-1,2,7,-7,4,10,-3,5,-8,-7,10,-2,-1,1,8,-10,-9,4,-8,10,-3,3,7,2,-7,-2,10,-7,10,4,-6,-10,7,-10,3,8,2,3,-1,7,-2,5,2,-5,-10,2,-5,10,6,-8,-1,6,10,-5,4,7,2,2,-3,-6,-7,-8,1,-4,-9,-8,1,-6,-3,1,4,5,-9,-9,3,-7,4,-3,-3,-1,-1,3,-3,4,3,-5,-3,-2,-9,-7,6,5,9,-2,8,5,2,-3,10,-3,3,9,-2,10,-3,6,-3,7,2,4,-5,-9,-10,4,-10,-2,-8,-8,-1,-2,9,2,-10,4,10,-1,-1,-6,3,-1,-8,5,-4,-4,3,-9,-5,-4,2,8,8,-9,-10,-7,4,3,3,-7,2,1,-9,-10,1,-3,2,5,1,-6,-6,3,3,3,5,-10,-1,-2,1,-9,6,5,3,5,-3,-4,-5,10,-4,-1,-1,4,4,-6,-10,5,-7,5,8,4,10,-2,-7,-3,3,8,7,-8,1,-3,-1,8,-9,-5,-2,10,-9,9,5,6,5,2,7,-2,7,1,6,-3,-10,-3,9,6,-6,-5,6,6,7,-7,1,-5,7,-6,5,7,10,-10,1,-9,3,-7,7,-2,5,-1,1,5,-1,-8,-10,2,4,9,7,4,1,-1,-7,5,4,-8,-1,10,4,6,4,-4,-9,-4,10,-6,-1,1,2,10,1,9,-1,-2,9,-8,6,-1,-4,1,5,7,6,4,6,-2,-1,7,-1,6,-8,3,4,-9,1,2,-1,1,-7,-5,-10,7,9,-3,4,-10,-4,8,-7,6,-1,3,5,7,-3,-4,1,-6,9,1,-9,-8,4,-10,-5,10,-5,5,-8,-4,7,4,3,-8,-9,6,10,2,-1,8,9,9,-2,5,-9,3,-7,5,8,2,2,7,3,-7,-4,-10,2,8,-6,-6,-10,-4,-5,-8,-2,-10,10,8,9,-10,2,-7,-1,-10,5,-5,-2,-5,8,8,6,4,-5,1,-8,6,-3,6,-5,-5,10,-7,-9,-9,-6,4,-5,9,-1,-4,3,2,-3,2,-3,-10,4,-7,-2,9,5,1,2,-2,10,5,-9,9,-5,2,7,5,1,-6,10,4,-7,-7,-5,-5,8,10,8,9,-2,1,5,3,-8,1,-2,-5,-10,-1,3,3,7,9,7,-9,9,10,-8,9,2,5,-5,-7,5,1,6,-1,9,10,-10,-5,-3,-4,-10,6,-5,7,3,6,-4,10,-2,4,-3,-7,5,3,-9,-8,9,10,-7,3,-3,-10,7,6,10,-5,6,7,6,-9,6,3,-3,1,-1,2,5,-10,1,-4,-8,6,-2,5,-5,-2,-4,-8,7,-9,-4,-2,-2,-1,-8,5,-5,10,-6,-5,3,-1,4,6,-9,-10,5,-1,-4,-9,9,-8,5,-4,-5,9,8,-7,-9,4,7,10,5,8,-6,-2,8,-1,-10,-3,4,4,-2,-4,5,1,-1,-3,-4,8,5,7,3,-8,3,-9,3,-10,-4,8,-2,1,-3,10,5,-9,9,8,2,-5,7,-1,-7,7,-5,1,5,-9,-8,8,-10,-8,1,-2,-1,-7,1,1,10,9,3,1,4,8,2,7,-1,10,8,6,-9,8,-2,7,-6,-7,8,9,-9,-4,-3,2,6,7,-4,-3,-5,-2,-1,8,5,8,-3,-5,-4,-3,2,2,-9,-1,-1,5,-7,-4,6,-8,9,-4,3,-5,10,3,-5,-7,-5,7,-5,3,-9,-2,10,6,6,-2,-1,5,8,3,-4,-10,-1,6,-9,-7,5,-5,-1,-6,1,5,6,-5,-7,-10,9,1,-6,5,5,6,-1,-7,-2,-9,-1,-6,4,3,-8,-4,4,-8,-4,8,2,1,6,6,-1,2,-9,2,10,5,-2,-8,6,-7,-6,2,-2,3,-3,8,4,-7,-8,6,-8,-9,-2,7,10,10,10,6,-7,1,-8,3,9,-4,-2,-7,3,-1,3,-3,-1,-1,-9,4,-5,-5,4,-2,-1,-1,9,3,4,-7,1,9,6,-4,6,10,-5,-2,-6,-3,5,10,-2,7,9,2,-5,2,3,-6,-6,-2,-5,3,3,8,1,-3,3,10,6,-1,-5,4,-1,-10,-9,1,9,5,1,9,1,5,-3,-7,-7,10,3,1,-6,-2,-3,9,6,-3,9,-9,5,-6,6,-7,-2,-4,-3,-1,-4,-4,-6,9,8,1,6,-8,3,-1,-7,-4,9,6,-3,-1,-1,-5,7,-1,6,2,3,4,4,-4,6,-4,6,-7,8,-7,2,-6,-6,7,10,-5,-9,-8,6,8,10,9,1,-4,-3,-7,-2,7,1,-1,3,-3,-7,-7,-3,-7,6,-10,1,7,-4,2,-9,-4,-4,3,-1,10,-7,2,-4,4,4,-7,7,-10,2,7,-10,-4,-7,2,5,-7,10,4,-8,-4,-2,7,8,-10,-7,2,1,-4,4,6,9,-2,1,-3,-4,-1,-9,-6,4,-5,-5,10,6,-4,-9,10,2,-7,7,3,-8,-8,1,-1,-9,7,5,2,3,-2,8,2,-5,4,10,3,-10,-2,4,7,2,-1,-5,-10,1,-3,-5,9,-8,2,-10,6,6,10,-5,-5,-3,6,1,6,-10,-1,6,7,-4,-1,-3,-4,-7,3,1,9,-6,2,2,9,7,-9,3,8,-4,-2,8,-10,-8,8,-10,-5,-3,4,-5,9,5,6,5,-5,-4,8,3,-8,-8,2,3,-4,4,-2,-1,10,9,3,-9,3,-7,5,8,3,-10,-5,4,-7,-5,9,8,-3,-7,-2,-7,10,-7,-6,-10,2,3,1,5,8,-7,-8,-6,5,-7,10,2,-10,8,-4,2,-6,-1,4,7,8,9,-10,-6,10,1,-9,-1,2,6,8,3,-5,-3,2,1,5,-7,6,-9,9,6,5,-1,-7,-4,-5,10,-3,8,-4,-5,-10,-3,8,-3,-4,-6,-8,-7,-2,-9,7,-8,2,-6,-7,-5,-5,-5,4,9,9,-6,-2,4,-3,-2,2,-3,-8,-3,1,-3,-8,-9,-8,-10,-6,6,1,-6,2,-9,8,3,10,-10,-5,9,-1,6,9,-8,4,6,3,2,-10,2,-10,3,-10,-2,5,-8,2,-8,10,9,-10,-9,-5,-10,1,-2,-6,4,-9,1,-10,2,3,-4,-6,6,7,10,-8,6,2,-2,-4,-6,-3,-9,-8,-4,3,-5,-10,-6,10,-9,-4,-10,7,-7,-8,-6,-2,3,-7,2,-6,10,1,5,2,10,10,-4,-1,8,4,10,10,-7,-2,-1,-9,6,-9,-9,-4,-6,-8,1,-1,-9,-4,2,-4,-3,9,7,-6,-8,-2,3,6,10,2,-3,4,-10,1,-4,-3,1,2,-10,1,-1,-4,10,-6,6,-6,2,1,6,-6,-6,9,2,7,8,-9,10,-5,-5,-3,-2,-10,-8,-8,2,7,4,-7,-5,-6,2,-4,-1,5,4,5,-8,8,-5,-2,-2,-6,3,3,-8,5,-6,-4,-9,-1,10,7,-2,-4,3,3,-5,4,-4,7,5,4,10,10,-9,-2,-8,7,-6,-6,-8,-6,10,10,6,8,7,7,-1,9,-8,9,10,8,8,4,-5,-9,-2,-8,4,2,-9,-3,5,-10,-10,1,-6,5,2,-10,-4,9,7,4,5,-7,4,5,-9,-2,-4,1,9,4,9,-8,4,-7,-7,4,-9,-8,-8,-2,-8,8,-7,-1,-8,10,10,10,-5,7,-8,-8,10,1,1,-7,-10,-2,-7,-5,-2,2,-3,8,-9,-2,3,-5,-7,5,10,8,8,-6,5,-9,6,-8,4,-9,-10,10,-10,-10,-1,-5,-6,10,-3,8,2,4,9,-9,10,3,-8,5,8,-6,-8,-2,6,-8,-2,6,2,-2,-3,-3,6,1,1,-3,-1,1,-2,4,5,-4,8,9,-1,2,-1,-5,3,2,-3,-4,-5,-4,8,-2,9,9,7,7,8,-2,-4,-5,-6,-10,3,-3,-1,-3,4,1,3,-1,10,10,7,9,10,8,-3,5,6,-4,3,-5,5,10,-10,10,-9,9,2,-7,4,-8,-6,2,-9,9,6,-10,-4,8,-3,3,9,-10,-10,3,4,10,4,-4,-10,8,-10,6,-1,9,3,8,6,10,6,-1,-7,-4,4,-8,2,-2,-4,-8,3,1,-1,-7,-6,4,-4,-6,-7,4,8,-8,7,7,-10,-6,-4,10,-5,-4,-6,7,-5,-1,-1,6,6,-4,-5,4,-7,10,-9,-9,-7,-7,3,-3,5,3,-8,9,-6,-8,-5,-8,-5,4,-9,8,7,-3,9,1,1,-4,-6,4,8,-2,-2,-5,-9,1,-3,-7,8,3,5,3,-1,-4,2,6,8,2,8,-9,8,6,2,-4,-3,-8,-2,-2,-10,7,-4,3,-2,-4,-2,-1,6,2,1,8,2,2,-9], dtype = "int32")#candidate|4117|(2016,)|const|int32
call_4114 = relay.TupleGetItem(func_3822_call(relay.reshape(var_4115.astype('float32'), [4, 7, 14]), relay.reshape(const_4116.astype('int64'), [2880,]), relay.reshape(const_4117.astype('int32'), [2016,]), relay.reshape(var_4115.astype('float32'), [4, 7, 14]), ), 6)
call_4118 = relay.TupleGetItem(func_3827_call(relay.reshape(var_4115.astype('float32'), [4, 7, 14]), relay.reshape(const_4116.astype('int64'), [2880,]), relay.reshape(const_4117.astype('int32'), [2016,]), relay.reshape(var_4115.astype('float32'), [4, 7, 14]), ), 6)
func_3822_call = mod.get_global_var('func_3822')
func_3827_call = mutated_mod.get_global_var('func_3827')
call_4129 = relay.TupleGetItem(func_3822_call(relay.reshape(var_4115.astype('float32'), [4, 7, 14]), relay.reshape(const_4116.astype('int64'), [2880,]), relay.reshape(const_4117.astype('int32'), [2016,]), relay.reshape(var_4115.astype('float32'), [4, 7, 14]), ), 8)
call_4130 = relay.TupleGetItem(func_3827_call(relay.reshape(var_4115.astype('float32'), [4, 7, 14]), relay.reshape(const_4116.astype('int64'), [2880,]), relay.reshape(const_4117.astype('int32'), [2016,]), relay.reshape(var_4115.astype('float32'), [4, 7, 14]), ), 8)
output = relay.Tuple([bop_4110,call_4114,var_4115,const_4116,const_4117,call_4129,])
output2 = relay.Tuple([bop_4113,call_4118,var_4115,const_4116,const_4117,call_4130,])
func_4133 = relay.Function([var_4115,], output)
mod['func_4133'] = func_4133
mod = relay.transform.InferType()(mod)
mutated_mod['func_4133'] = func_4133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4134 = relay.var("var_4134", dtype = "float32", shape = (392,))#candidate|4134|(392,)|var|float32
func_4133_call = mutated_mod.get_global_var('func_4133')
call_4135 = func_4133_call(var_4134)
output = call_4135
func_4136 = relay.Function([var_4134], output)
mutated_mod['func_4136'] = func_4136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_4173 = func_3503_call()
call_4174 = func_3503_call()
uop_4205 = relay.sqrt(call_4173.astype('float32')) # shape=(11, 11, 6)
uop_4207 = relay.sqrt(call_4174.astype('float32')) # shape=(11, 11, 6)
output = uop_4205
output2 = uop_4207
func_4221 = relay.Function([], output)
mod['func_4221'] = func_4221
mod = relay.transform.InferType()(mod)
mutated_mod['func_4221'] = func_4221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4221_call = mutated_mod.get_global_var('func_4221')
call_4222 = func_4221_call()
output = call_4222
func_4223 = relay.Function([], output)
mutated_mod['func_4223'] = func_4223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_4240 = func_3503_call()
call_4241 = func_3503_call()
func_861_call = mod.get_global_var('func_861')
func_864_call = mutated_mod.get_global_var('func_864')
var_4249 = relay.var("var_4249", dtype = "float32", shape = (784,))#candidate|4249|(784,)|var|float32
call_4248 = func_861_call(relay.reshape(var_4249.astype('float32'), [7, 7, 16]), relay.reshape(var_4249.astype('float32'), [7, 7, 16]), )
call_4250 = func_861_call(relay.reshape(var_4249.astype('float32'), [7, 7, 16]), relay.reshape(var_4249.astype('float32'), [7, 7, 16]), )
output = relay.Tuple([call_4240,call_4248,var_4249,])
output2 = relay.Tuple([call_4241,call_4250,var_4249,])
func_4254 = relay.Function([var_4249,], output)
mod['func_4254'] = func_4254
mod = relay.transform.InferType()(mod)
mutated_mod['func_4254'] = func_4254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4255 = relay.var("var_4255", dtype = "float32", shape = (784,))#candidate|4255|(784,)|var|float32
func_4254_call = mutated_mod.get_global_var('func_4254')
call_4256 = func_4254_call(var_4255)
output = call_4256
func_4257 = relay.Function([var_4255], output)
mutated_mod['func_4257'] = func_4257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_4259 = func_3503_call()
call_4260 = func_3503_call()
output = call_4259
output2 = call_4260
func_4263 = relay.Function([], output)
mod['func_4263'] = func_4263
mod = relay.transform.InferType()(mod)
output = func_4263()
func_4264 = relay.Function([], output)
mutated_mod['func_4264'] = func_4264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_4275 = relay.TupleGetItem(func_3532_call(), 0)
call_4276 = relay.TupleGetItem(func_3533_call(), 0)
output = relay.Tuple([call_4275,])
output2 = relay.Tuple([call_4276,])
func_4279 = relay.Function([], output)
mod['func_4279'] = func_4279
mod = relay.transform.InferType()(mod)
mutated_mod['func_4279'] = func_4279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4279_call = mutated_mod.get_global_var('func_4279')
call_4280 = func_4279_call()
output = call_4280
func_4281 = relay.Function([], output)
mutated_mod['func_4281'] = func_4281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_4329 = relay.TupleGetItem(func_3583_call(), 0)
call_4330 = relay.TupleGetItem(func_3584_call(), 0)
uop_4331 = relay.sigmoid(call_4329.astype('float32')) # shape=(11, 11, 6)
uop_4333 = relay.sigmoid(call_4330.astype('float32')) # shape=(11, 11, 6)
output = uop_4331
output2 = uop_4333
func_4336 = relay.Function([], output)
mod['func_4336'] = func_4336
mod = relay.transform.InferType()(mod)
output = func_4336()
func_4337 = relay.Function([], output)
mutated_mod['func_4337'] = func_4337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4263_call = mod.get_global_var('func_4263')
func_4264_call = mutated_mod.get_global_var('func_4264')
call_4347 = func_4263_call()
call_4348 = func_4263_call()
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_4351 = func_3503_call()
call_4352 = func_3503_call()
bop_4361 = relay.mod(call_4351.astype('float64'), relay.reshape(call_4347.astype('float64'), relay.shape_of(call_4351))) # shape=(11, 11, 6)
bop_4364 = relay.mod(call_4352.astype('float64'), relay.reshape(call_4348.astype('float64'), relay.shape_of(call_4352))) # shape=(11, 11, 6)
uop_4365 = relay.erf(call_4351.astype('float64')) # shape=(11, 11, 6)
uop_4367 = relay.erf(call_4352.astype('float64')) # shape=(11, 11, 6)
output = relay.Tuple([bop_4361,uop_4365,])
output2 = relay.Tuple([bop_4364,uop_4367,])
func_4380 = relay.Function([], output)
mod['func_4380'] = func_4380
mod = relay.transform.InferType()(mod)
mutated_mod['func_4380'] = func_4380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mutated_mod.get_global_var('func_4380')
call_4381 = func_4380_call()
output = call_4381
func_4382 = relay.Function([], output)
mutated_mod['func_4382'] = func_4382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4221_call = mod.get_global_var('func_4221')
func_4223_call = mutated_mod.get_global_var('func_4223')
call_4385 = func_4221_call()
call_4386 = func_4221_call()
func_3006_call = mod.get_global_var('func_3006')
func_3010_call = mutated_mod.get_global_var('func_3010')
const_4400 = relay.const([-6,2,2,2,6,5,4,4,-4,1,-8,10,-6,-3,4,6,-10,1,-8,6,-6,-4,8,6,4,8,10,1,8,4,-5,3,7,-9,-8,-9,-7,7,-10,7,-10,5,2,-5,2,-6,8,-4,3,1,10,4,-4,3], dtype = "uint8")#candidate|4400|(54,)|const|uint8
const_4401 = relay.const(9, dtype = "int32")#candidate|4401|()|const|int32
call_4399 = relay.TupleGetItem(func_3006_call(relay.reshape(const_4400.astype('uint8'), [1, 6, 9]), relay.reshape(const_4401.astype('int32'), []), ), 3)
call_4402 = relay.TupleGetItem(func_3010_call(relay.reshape(const_4400.astype('uint8'), [1, 6, 9]), relay.reshape(const_4401.astype('int32'), []), ), 3)
output = relay.Tuple([call_4385,call_4399,const_4400,const_4401,])
output2 = relay.Tuple([call_4386,call_4402,const_4400,const_4401,])
func_4404 = relay.Function([], output)
mod['func_4404'] = func_4404
mod = relay.transform.InferType()(mod)
output = func_4404()
func_4405 = relay.Function([], output)
mutated_mod['func_4405'] = func_4405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4221_call = mod.get_global_var('func_4221')
func_4223_call = mutated_mod.get_global_var('func_4223')
call_4496 = func_4221_call()
call_4497 = func_4221_call()
func_2185_call = mod.get_global_var('func_2185')
func_2188_call = mutated_mod.get_global_var('func_2188')
var_4511 = relay.var("var_4511", dtype = "float32", shape = (192,))#candidate|4511|(192,)|var|float32
call_4510 = func_2185_call(relay.reshape(var_4511.astype('float32'), [16, 2, 6]))
call_4512 = func_2185_call(relay.reshape(var_4511.astype('float32'), [16, 2, 6]))
func_2148_call = mod.get_global_var('func_2148')
func_2154_call = mutated_mod.get_global_var('func_2154')
const_4526 = relay.const([-2.196597,0.345243,-4.846558,-3.301033,-3.317522,-0.081439,6.304907,3.723210,9.088012,5.837120,7.720225,-1.653622,-7.899850,-4.349661,5.403994,-5.282814,-9.336709,-1.585589,-1.132478,-1.881691,6.533267,3.926829,9.408484,4.806560,7.078153,3.834622,3.937172,6.275082,-4.747151,0.724163,3.639194,-1.295858,3.169447,-6.225497,9.661882,9.308329,-3.324169,0.903811,4.321996,-9.577564,0.458895,-2.360919,-9.574098,-9.121161,3.547975,-2.764117,8.824941,7.189004,4.668704,-5.338777,-8.619050,0.452180,4.170979,-3.550489,-9.400769,1.129207,-4.812561,-7.797702,5.421760,9.898790,-0.728913,8.128666,-5.033808,-2.500673,-0.219993,-8.952293,-4.036833,1.253449,-8.391048,3.918395,1.137673,-7.301808,-1.361330,-9.124510,-2.376776,-4.463302,9.084541,-0.157575,-5.122508,-8.930020,-6.668044,7.169685,-4.600280,-2.599405,-9.547018,4.286337,-6.818085,4.548738,-4.734604,-2.986809,-6.772760,7.794772,-8.363004,9.029332,8.844743,4.631921,7.361790,-3.522191,-2.543296,-5.650271,-1.175634,-8.343793,-8.819414,5.634881,9.144082,1.433563,5.817056,7.427384,-0.009256,-2.537255,-0.350018,6.817509,3.271993,-8.419504,-5.308523,-7.630236,-1.015605,1.289730,2.390704,-0.323454,-4.101228,-3.975784,-3.603548,6.597824,-1.148716,-1.639366,-4.856562,-5.123638,-5.768719,4.006609,-6.774563,4.577716,-0.884560,9.338766,-2.046031,-5.190711,9.434530,-2.608336,-4.138256,-3.897868,7.164477,-8.802925,9.763362,2.505198,9.052751,-9.494535,1.294734,-0.907673,5.207003,7.736321,7.394013,-8.346553,-9.740537,1.989113,9.225556,5.058630,-0.216245,-7.330068,7.183807,9.950059,-6.882050,-7.428541,-5.863172,1.282411,-4.833851,1.553418,-1.866597,-1.704131,-4.367405,9.682832,1.707848,-4.626368,-2.785696,8.514061,1.388872,-5.520657,1.322006,1.963304,-5.479760,2.674994,1.620559,-8.915569,-8.856008,-5.067998,-4.873744,-5.890137,-8.094121,-2.928346,4.046668,-8.657053,-7.395835,-1.084577,5.954139,7.097526,-1.886378,-7.293595,2.959921,2.588035,1.218868,-8.631743,-8.526900,-7.119668,-5.713386,3.845742,-7.004932,-9.726916,2.397777,-7.477835,-9.592995,-1.313917,-6.387207,-6.257520,3.315304,-7.846029,1.518939,4.027080,2.461711,-3.517623,-5.363994,-3.013439,-3.877439,6.777024,2.837771,-3.135241], dtype = "float32")#candidate|4526|(224,)|const|float32
var_4527 = relay.var("var_4527", dtype = "float64", shape = (720,))#candidate|4527|(720,)|var|float64
var_4528 = relay.var("var_4528", dtype = "float64", shape = (9, 60))#candidate|4528|(9, 60)|var|float64
var_4529 = relay.var("var_4529", dtype = "float32", shape = (784,))#candidate|4529|(784,)|var|float32
var_4530 = relay.var("var_4530", dtype = "float32", shape = (480,))#candidate|4530|(480,)|var|float32
call_4525 = relay.TupleGetItem(func_2148_call(relay.reshape(const_4526.astype('float32'), [4, 14, 4]), relay.reshape(var_4527.astype('float64'), [1, 720]), relay.reshape(var_4528.astype('float64'), [540,]), relay.reshape(var_4529.astype('float32'), [4, 196]), relay.reshape(var_4530.astype('float32'), [40, 12]), ), 9)
call_4531 = relay.TupleGetItem(func_2154_call(relay.reshape(const_4526.astype('float32'), [4, 14, 4]), relay.reshape(var_4527.astype('float64'), [1, 720]), relay.reshape(var_4528.astype('float64'), [540,]), relay.reshape(var_4529.astype('float32'), [4, 196]), relay.reshape(var_4530.astype('float32'), [40, 12]), ), 9)
const_4542 = relay.const([[[-2.554243,-6.927495,-7.752607,-1.273014,2.652460,-7.010354],[-2.136125,-8.745258,2.612002,-9.942021,8.941789,-5.144089],[-5.592538,-1.848611,-5.716581,-5.434185,6.598496,2.033609],[-2.315214,-3.287007,3.169289,-8.160237,-4.908273,-7.809567],[3.938416,1.846064,-1.725888,-0.286725,8.701676,-4.247229],[8.576351,-7.844289,6.406095,-0.038115,3.033864,0.130864],[4.217253,3.336197,-5.929976,5.086938,-9.697057,-3.321884],[-2.173261,5.514243,-5.224849,-4.685131,-0.376102,-9.496926],[-7.772472,5.611068,1.359447,-5.664922,3.499413,-8.887391],[2.658174,3.909301,-2.028493,-2.320599,-4.297595,-2.375505],[3.223754,-7.546489,-5.710121,7.712604,9.473504,-1.950173]],[[-1.934619,-7.863806,-0.105125,4.053061,-2.467995,-4.021050],[1.661792,-6.804818,-5.450258,-3.655340,6.837562,-9.867601],[6.561922,-0.812025,-5.869151,7.658116,-3.439275,-1.296065],[-4.695435,-4.271488,-0.055905,-0.944116,-2.938292,-9.694533],[2.178924,-5.054649,3.397124,-4.711427,5.344365,-2.986264],[-1.162880,-8.033309,8.517168,0.200151,-6.609495,-4.389076],[-3.608487,-2.202780,8.209580,-7.568242,8.941079,8.652820],[0.007310,8.865238,7.909961,-4.308237,5.551759,-4.021510],[-1.940017,7.792698,8.821694,3.091785,-3.298076,-5.231826],[-1.335953,-3.481223,-3.861092,2.534219,-7.572821,-2.298135],[-9.339706,3.881463,8.000223,-6.654844,1.274342,-8.608622]],[[5.496201,9.643032,-6.685632,-7.781843,-2.590366,-0.105351],[-9.043322,-3.250247,2.547752,-9.184920,7.933217,2.645823],[1.607971,-5.116560,1.485803,-8.669454,3.133615,-1.486267],[7.633924,-9.317207,-0.360800,-7.219870,-8.945662,5.574851],[8.233899,5.766362,0.308358,6.048094,-4.761247,0.473590],[8.586002,5.415600,1.931494,-6.946581,-7.114376,-6.022464],[0.491652,4.756250,5.774253,9.480468,5.089479,-1.703586],[-0.860974,1.644428,8.907671,-1.147870,-0.999471,3.305350],[-8.286224,8.984945,3.984973,6.145647,-7.221478,-3.867917],[2.047173,0.617866,5.948682,8.383293,5.138272,-0.179471],[7.479828,3.902488,-8.616488,-6.704878,-0.396883,8.066840]],[[9.962122,5.259777,-6.541116,-0.998587,9.695865,-7.412205],[5.922009,-2.705092,-1.151765,2.982064,-4.615262,-0.090393],[-7.009989,8.821946,-2.184009,-9.841234,2.420334,7.533164],[6.561651,6.176350,4.091535,8.033913,3.263534,-4.566312],[9.447485,3.212328,-1.741569,-9.205194,-3.322907,-3.757982],[5.213541,7.114530,-6.691691,-8.397263,-8.585712,-2.428931],[4.294757,-5.212285,-1.256816,-5.360120,-0.724230,7.146900],[1.962649,7.310686,1.333717,-4.927201,-4.389245,2.364697],[5.903030,7.017236,9.561546,4.164372,0.954655,2.244830],[-6.596652,2.825602,1.119941,-9.561208,5.103758,8.485990],[9.731358,7.681158,3.226528,-9.705792,-0.322959,-5.240219]],[[0.650570,-5.805433,7.155273,-0.281662,3.766214,-5.466329],[-8.072333,-1.573910,3.422331,-9.739127,6.848756,-8.092264],[-4.333736,3.916140,-1.776778,-0.203914,-7.163019,6.111358],[-0.834691,2.880600,9.760514,8.826822,-4.449783,6.104723],[4.917140,-0.574898,7.187361,1.282955,2.690352,-9.417165],[-2.192705,-4.196653,6.191463,-7.688066,9.768895,-0.768695],[9.065071,1.971975,0.385122,4.014789,-3.605737,3.438244],[9.243065,-3.848510,-6.983323,-8.950989,9.768146,6.336751],[-4.757297,3.815803,1.411634,7.960371,8.970911,9.480475],[5.563174,1.213855,-2.277488,-9.615768,2.349902,1.398935],[4.161859,-1.471738,-0.573021,-6.766432,5.040713,-6.421375]],[[1.299197,3.890055,-6.682979,9.165100,-0.361800,-6.215660],[0.241611,-3.997701,8.195491,-2.294036,6.722115,8.382062],[-7.676235,0.002267,2.141796,1.143541,7.278413,4.118847],[2.830150,8.803147,0.602910,-3.635471,-7.086903,5.481310],[-4.541517,3.106004,-6.693936,1.606860,-8.596833,-0.554550],[4.776326,-3.214447,6.760362,-6.807268,-3.767105,-7.460094],[8.166769,-3.789144,4.459064,6.972954,-9.353327,2.953830],[-1.216892,7.834784,7.686314,-5.571047,8.671057,6.640598],[8.338652,7.845659,-6.908769,7.302646,7.055165,7.900614],[-0.326392,-6.182898,6.985437,7.224222,2.703869,-3.787038],[9.418555,5.243914,2.969190,1.106054,-1.803445,-4.152702]],[[-6.247502,6.007025,-7.775913,-0.593639,7.561246,7.422148],[-1.474549,-0.083714,7.029341,5.198093,-1.930373,-9.101457],[1.023849,-9.636660,-4.284508,-4.876559,-0.555627,-3.152004],[3.174983,3.874561,-0.175685,7.173193,-4.484458,-5.666778],[4.873331,-5.099792,-5.730503,0.521975,-4.651520,5.292800],[5.264370,8.886316,6.606804,-9.601493,-1.032885,-1.523077],[-0.003066,7.676272,6.431974,-7.778329,9.688883,-1.851215],[7.327719,-4.142907,7.406609,3.070476,0.111920,6.531298],[-9.843299,7.964134,8.280824,9.298084,-8.941859,-7.757465],[-3.615067,-9.570904,6.745546,6.899701,-1.432506,-0.964841],[-9.006615,-4.669470,-0.769876,-0.685837,9.043783,8.403272]],[[3.103310,-2.332921,-7.310725,-3.588426,-1.241631,-3.873592],[6.514015,-4.020483,9.047724,-8.852791,-6.558327,-4.342933],[-2.215224,-3.460358,-1.971615,-5.486836,-5.898506,5.925757],[-0.836850,-8.535419,-4.259019,-4.184678,-0.096874,-2.073134],[-6.256236,2.600669,7.531432,7.927332,0.249788,-2.932778],[-2.402360,1.027069,2.689518,3.652802,-6.247892,-6.306004],[-0.130846,3.493514,-3.458285,9.473404,-4.266744,8.054701],[-1.787765,6.391087,-0.491680,6.596089,-2.079635,-1.325793],[-1.655220,2.893459,8.116010,6.164342,7.859349,-3.453793],[-3.415481,-1.882334,2.292001,7.729849,-8.193650,3.287858],[-9.262057,7.056961,1.320939,-2.053737,4.398865,2.505682]],[[-2.342889,2.010558,2.728799,1.158040,7.281019,-1.999481],[2.818800,-7.264050,-6.349205,8.989387,-9.682366,9.358282],[-4.485606,1.125201,-8.006358,-3.021741,-7.005306,-8.280060],[2.130554,2.351038,5.308831,9.080014,3.854272,-9.009662],[0.331142,-2.335782,0.310404,-9.067735,-5.578629,2.264251],[-1.552037,3.167192,2.662742,-2.357449,3.294190,9.115204],[2.490618,0.236325,-3.640316,-3.682971,0.723834,-5.804461],[-2.191513,-5.961465,-0.905843,1.761982,2.393756,3.645389],[-4.505393,-2.716671,-7.312218,-4.154515,-7.151554,-3.017425],[-7.736714,3.188567,-2.747980,-4.842214,-1.011858,6.373649],[-5.629042,7.361876,3.336079,9.425609,-4.328766,7.434281]],[[8.871255,-2.779474,5.129563,8.326724,1.399450,-0.877901],[-5.487413,-9.607015,0.825249,0.099306,4.489933,-1.686534],[-2.546861,-1.372133,3.405994,1.495971,-2.236434,-7.322412],[-9.579311,2.736141,-1.615489,7.761556,-2.989344,1.194644],[3.524401,9.240050,4.242792,3.995408,2.896012,-7.814530],[6.195335,-7.258591,4.541381,-1.745125,-0.875083,7.797337],[5.425841,2.348634,6.118889,6.312259,5.704287,9.839089],[-2.006964,-6.333929,-8.537237,-3.413870,-6.299526,1.522765],[-5.894673,-6.666538,0.350510,2.642519,-8.735079,-1.068280],[-1.301235,0.273661,9.483628,-7.731140,9.623043,6.022206],[-1.107918,-8.201476,-1.743707,-7.597567,4.796474,0.673412]],[[6.071569,3.704725,3.713098,1.240944,8.407268,-3.983682],[5.763229,4.323489,3.607816,-5.658739,-7.126741,6.246802],[6.984496,6.432111,-3.493951,8.590453,-0.137456,6.445384],[4.545922,1.370289,0.403366,3.030743,-9.848513,-0.320562],[4.662747,5.937347,6.229443,0.866706,3.391657,3.062014],[7.446472,6.986493,9.325559,-8.312435,6.762663,7.956495],[2.313041,1.230083,3.847104,4.303970,-6.824635,8.373616],[4.568670,-9.396632,3.592517,-0.720121,1.837872,-3.378771],[8.125568,2.584426,-2.658569,4.608825,7.534575,-2.719306],[-9.934330,5.122672,-5.369881,-7.928749,2.274278,-1.266126],[-7.091661,-8.932321,-1.553517,-9.613157,1.690335,-3.073138]]], dtype = "float32")#candidate|4542|(11, 11, 6)|const|float32
bop_4543 = relay.less_equal(call_4496.astype('bool'), relay.reshape(const_4542.astype('bool'), relay.shape_of(call_4496))) # shape=(11, 11, 6)
bop_4546 = relay.less_equal(call_4497.astype('bool'), relay.reshape(const_4542.astype('bool'), relay.shape_of(call_4497))) # shape=(11, 11, 6)
output = relay.Tuple([call_4510,var_4511,call_4525,const_4526,var_4527,var_4528,var_4529,var_4530,bop_4543,])
output2 = relay.Tuple([call_4512,var_4511,call_4531,const_4526,var_4527,var_4528,var_4529,var_4530,bop_4546,])
func_4556 = relay.Function([var_4511,var_4527,var_4528,var_4529,var_4530,], output)
mod['func_4556'] = func_4556
mod = relay.transform.InferType()(mod)
mutated_mod['func_4556'] = func_4556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4556_call = mutated_mod.get_global_var('func_4556')
var_4558 = relay.var("var_4558", dtype = "float32", shape = (192,))#candidate|4558|(192,)|var|float32
var_4559 = relay.var("var_4559", dtype = "float64", shape = (720,))#candidate|4559|(720,)|var|float64
var_4560 = relay.var("var_4560", dtype = "float64", shape = (9, 60))#candidate|4560|(9, 60)|var|float64
var_4561 = relay.var("var_4561", dtype = "float32", shape = (784,))#candidate|4561|(784,)|var|float32
var_4562 = relay.var("var_4562", dtype = "float32", shape = (480,))#candidate|4562|(480,)|var|float32
call_4557 = func_4556_call(var_4558,var_4559,var_4560,var_4561,var_4562,)
output = call_4557
func_4563 = relay.Function([var_4558,var_4559,var_4560,var_4561,var_4562,], output)
mutated_mod['func_4563'] = func_4563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4221_call = mod.get_global_var('func_4221')
func_4223_call = mutated_mod.get_global_var('func_4223')
call_4582 = func_4221_call()
call_4583 = func_4221_call()
func_3006_call = mod.get_global_var('func_3006')
func_3010_call = mutated_mod.get_global_var('func_3010')
var_4585 = relay.var("var_4585", dtype = "uint8", shape = (54,))#candidate|4585|(54,)|var|uint8
const_4586 = relay.const(-10, dtype = "int32")#candidate|4586|()|const|int32
call_4584 = relay.TupleGetItem(func_3006_call(relay.reshape(var_4585.astype('uint8'), [1, 6, 9]), relay.reshape(const_4586.astype('int32'), []), ), 1)
call_4587 = relay.TupleGetItem(func_3010_call(relay.reshape(var_4585.astype('uint8'), [1, 6, 9]), relay.reshape(const_4586.astype('int32'), []), ), 1)
func_2185_call = mod.get_global_var('func_2185')
func_2188_call = mutated_mod.get_global_var('func_2188')
var_4597 = relay.var("var_4597", dtype = "float32", shape = (1, 192))#candidate|4597|(1, 192)|var|float32
call_4596 = func_2185_call(relay.reshape(var_4597.astype('float32'), [16, 2, 6]))
call_4598 = func_2185_call(relay.reshape(var_4597.astype('float32'), [16, 2, 6]))
func_2185_call = mod.get_global_var('func_2185')
func_2188_call = mutated_mod.get_global_var('func_2188')
call_4605 = func_2185_call(relay.reshape(call_4596.astype('float32'), [16, 2, 6]))
call_4606 = func_2185_call(relay.reshape(call_4596.astype('float32'), [16, 2, 6]))
bop_4610 = relay.not_equal(const_4586.astype('bool'), call_4582.astype('bool')) # shape=(11, 11, 6)
bop_4613 = relay.not_equal(const_4586.astype('bool'), call_4583.astype('bool')) # shape=(11, 11, 6)
func_3243_call = mod.get_global_var('func_3243')
func_3247_call = mutated_mod.get_global_var('func_3247')
var_4619 = relay.var("var_4619", dtype = "float32", shape = (108, 8))#candidate|4619|(108, 8)|var|float32
var_4620 = relay.var("var_4620", dtype = "float64", shape = (540,))#candidate|4620|(540,)|var|float64
call_4618 = relay.TupleGetItem(func_3243_call(relay.reshape(var_4619.astype('float32'), [6, 16, 9]), relay.reshape(const_4586.astype('int32'), []), relay.reshape(var_4620.astype('float64'), [540,]), ), 2)
call_4621 = relay.TupleGetItem(func_3247_call(relay.reshape(var_4619.astype('float32'), [6, 16, 9]), relay.reshape(const_4586.astype('int32'), []), relay.reshape(var_4620.astype('float64'), [540,]), ), 2)
output = relay.Tuple([call_4584,var_4585,call_4596,var_4597,call_4605,bop_4610,call_4618,var_4619,var_4620,])
output2 = relay.Tuple([call_4587,var_4585,call_4598,var_4597,call_4606,bop_4613,call_4621,var_4619,var_4620,])
func_4627 = relay.Function([var_4585,var_4597,var_4619,var_4620,], output)
mod['func_4627'] = func_4627
mod = relay.transform.InferType()(mod)
var_4628 = relay.var("var_4628", dtype = "uint8", shape = (54,))#candidate|4628|(54,)|var|uint8
var_4629 = relay.var("var_4629", dtype = "float32", shape = (1, 192))#candidate|4629|(1, 192)|var|float32
var_4630 = relay.var("var_4630", dtype = "float32", shape = (108, 8))#candidate|4630|(108, 8)|var|float32
var_4631 = relay.var("var_4631", dtype = "float64", shape = (540,))#candidate|4631|(540,)|var|float64
output = func_4627(var_4628,var_4629,var_4630,var_4631,)
func_4632 = relay.Function([var_4628,var_4629,var_4630,var_4631,], output)
mutated_mod['func_4632'] = func_4632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4263_call = mod.get_global_var('func_4263')
func_4264_call = mutated_mod.get_global_var('func_4264')
call_4637 = func_4263_call()
call_4638 = func_4263_call()
func_4254_call = mod.get_global_var('func_4254')
func_4257_call = mutated_mod.get_global_var('func_4257')
var_4642 = relay.var("var_4642", dtype = "float32", shape = (784,))#candidate|4642|(784,)|var|float32
call_4641 = relay.TupleGetItem(func_4254_call(relay.reshape(var_4642.astype('float32'), [784,])), 1)
call_4643 = relay.TupleGetItem(func_4257_call(relay.reshape(var_4642.astype('float32'), [784,])), 1)
output = relay.Tuple([call_4637,call_4641,var_4642,])
output2 = relay.Tuple([call_4638,call_4643,var_4642,])
func_4654 = relay.Function([var_4642,], output)
mod['func_4654'] = func_4654
mod = relay.transform.InferType()(mod)
var_4655 = relay.var("var_4655", dtype = "float32", shape = (784,))#candidate|4655|(784,)|var|float32
output = func_4654(var_4655)
func_4656 = relay.Function([var_4655], output)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_4676 = func_4336_call()
call_4677 = func_4336_call()
func_3990_call = mod.get_global_var('func_3990')
func_3993_call = mutated_mod.get_global_var('func_3993')
const_4680 = relay.const([[3.309149,6.967452,-3.083680,-3.867215,4.491358,9.854726,-6.728639,-8.245463,2.584572,8.533704,0.754169,-1.745235,9.142375,2.986198,-9.292389,-7.982106,-4.366930,-8.353947,2.148614,7.674771,0.943496,-1.905050,6.327309,-5.359047,-6.599983,-3.480759,2.467432,0.761570,-7.915869,8.031443,-5.611075,-3.657918,8.267642,0.574771,8.008024,-4.764265,3.654144,-0.003278,2.214831,8.892918,-2.452963,1.562632,8.923333,-6.773148,2.893536,-9.478614,5.206360,2.836602,1.430522,-5.574306,6.890876,-7.668020,7.120484,-4.852867,2.867354,-8.962693,7.859532,-9.443410,-1.417604,-8.682352,-8.357752,4.257057,3.056638,-6.667063,4.002913,5.928847,9.131957,4.528905,-8.841791,5.920845,-9.755252,6.134591,-0.195689,-3.743945,-8.262708,-6.052396,9.602711,3.787486,-7.026111,-2.156430,-5.169993,9.666776,7.368820,-3.803368,-6.483700,9.858890,-5.932318,-3.170973,-4.290830,6.754086,9.571319,5.107919,-0.470829,7.861514,2.464135,-7.553631,1.244515,8.416916,7.424385,-4.414979,-1.374294,-8.123257,-8.668752,9.089706,9.790574,3.354685,-1.415576,2.149230,6.434510,-7.689575,-6.731635,-8.006986,-9.332847,-2.484346,-9.948716,0.003898,1.478838,7.224365,-0.634022,-6.013811,1.875000,-0.535618,5.082611,-7.050418,-0.117334,1.165271,-5.995799,-0.373170,7.292180,-3.925441,3.074998,-3.211020,9.217386,-6.157807,-2.053028,0.550911,-7.538176,-2.473207,9.826971,8.508270,3.425667,5.780914,-8.039675,-7.115715,-1.818118,2.549815,-9.005145,-1.538908,3.616005,3.056530,-7.993982,-9.736290,-2.201504,-8.838414,3.603543,9.976851,-8.071166,-5.014067,-0.533623,-1.862593,3.983174,-7.467611,-4.205339,3.557215,6.004140,1.994471,0.282572,-0.905410,-0.411584,-1.208432,-2.451281,-1.031130,-1.194360,-3.938706,8.978963,6.503463,-2.175468,-2.728424,0.559212,0.973710,-8.476571,-1.515654,-0.089212,3.557155,3.423909,-6.400802,3.853986,-9.276087,-3.795582,-2.193449,6.186116,-9.334980,7.466446,-4.884122,8.452598,0.532188]], dtype = "float64")#candidate|4680|(1, 196)|const|float64
call_4679 = relay.TupleGetItem(func_3990_call(relay.reshape(const_4680.astype('float64'), [14, 2, 7])), 0)
call_4681 = relay.TupleGetItem(func_3993_call(relay.reshape(const_4680.astype('float64'), [14, 2, 7])), 0)
output = relay.Tuple([call_4676,call_4679,const_4680,])
output2 = relay.Tuple([call_4677,call_4681,const_4680,])
func_4683 = relay.Function([], output)
mod['func_4683'] = func_4683
mod = relay.transform.InferType()(mod)
output = func_4683()
func_4684 = relay.Function([], output)
mutated_mod['func_4684'] = func_4684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_4720 = func_4336_call()
call_4721 = func_4336_call()
output = relay.Tuple([call_4720,])
output2 = relay.Tuple([call_4721,])
func_4736 = relay.Function([], output)
mod['func_4736'] = func_4736
mod = relay.transform.InferType()(mod)
output = func_4736()
func_4737 = relay.Function([], output)
mutated_mod['func_4737'] = func_4737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4221_call = mod.get_global_var('func_4221')
func_4223_call = mutated_mod.get_global_var('func_4223')
call_4747 = func_4221_call()
call_4748 = func_4221_call()
output = call_4747
output2 = call_4748
func_4756 = relay.Function([], output)
mod['func_4756'] = func_4756
mod = relay.transform.InferType()(mod)
output = func_4756()
func_4757 = relay.Function([], output)
mutated_mod['func_4757'] = func_4757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4263_call = mod.get_global_var('func_4263')
func_4264_call = mutated_mod.get_global_var('func_4264')
call_4758 = func_4263_call()
call_4759 = func_4263_call()
const_4762 = relay.const([[[False,True,True,True,False,False],[False,True,False,True,False,False],[True,True,True,False,True,False],[True,True,False,False,True,False],[False,False,True,True,True,False],[True,False,True,True,True,False],[True,False,True,True,True,True],[False,False,False,True,True,True],[True,False,True,True,False,False],[False,True,False,True,False,False],[True,False,False,False,True,True]],[[False,False,True,True,False,False],[False,False,True,True,True,False],[False,False,False,True,False,True],[False,False,False,False,True,False],[False,False,False,False,False,True],[False,True,False,True,False,False],[False,True,False,True,False,True],[True,False,True,True,False,True],[False,False,True,False,False,False],[True,True,False,True,True,True],[True,True,False,True,True,False]],[[True,True,True,True,False,True],[False,True,False,True,False,False],[True,True,False,False,True,False],[True,False,True,True,False,True],[False,True,False,False,False,True],[True,True,False,False,False,False],[False,False,True,False,True,False],[False,False,True,False,True,False],[False,False,True,False,True,True],[True,False,False,True,False,False],[True,True,True,True,False,True]],[[False,False,True,True,False,False],[True,False,True,False,False,False],[True,False,False,False,False,True],[True,True,True,True,True,False],[True,False,True,False,True,True],[True,True,True,False,True,True],[False,False,True,True,True,True],[True,False,False,True,False,False],[True,True,False,False,False,True],[False,True,True,False,True,False],[True,False,False,True,False,True]],[[False,False,True,False,False,False],[True,True,False,True,True,False],[False,False,True,False,False,True],[True,True,False,False,True,True],[False,False,True,False,True,True],[True,False,False,True,False,False],[True,True,True,False,True,False],[False,True,False,False,True,True],[True,False,False,False,False,True],[True,False,True,True,True,True],[False,False,True,False,True,True]],[[False,True,False,False,True,True],[False,True,False,True,True,True],[False,True,True,False,True,True],[True,False,False,False,True,True],[True,False,True,False,False,True],[True,True,False,False,True,True],[True,True,False,False,False,False],[True,False,True,True,False,False],[False,True,False,False,False,False],[True,True,False,True,False,False],[False,True,True,False,True,False]],[[True,True,False,True,True,False],[True,False,True,False,True,True],[False,False,True,True,False,True],[True,False,False,True,True,False],[True,True,False,True,True,True],[True,False,False,True,True,True],[False,True,False,True,True,True],[False,False,True,True,True,False],[False,False,False,True,True,True],[True,False,False,True,True,True],[True,True,True,True,False,False]],[[True,False,True,True,True,True],[False,False,True,False,True,False],[False,False,False,False,True,True],[True,False,True,True,False,True],[False,True,False,True,False,False],[True,True,True,True,False,False],[False,True,False,True,True,False],[True,True,False,True,True,True],[False,False,True,True,True,True],[False,True,False,False,False,True],[True,True,False,False,False,True]],[[False,False,False,True,True,True],[True,False,False,True,True,True],[False,True,True,True,True,False],[True,True,True,True,False,True],[False,True,False,True,True,True],[False,True,True,False,False,True],[True,True,True,True,False,True],[False,False,False,True,False,True],[True,True,True,False,False,True],[True,True,False,True,False,True],[False,False,False,False,False,True]],[[True,True,False,False,False,True],[True,False,True,False,True,True],[True,False,False,False,False,True],[True,True,False,True,False,False],[False,True,False,True,True,False],[False,False,True,False,False,True],[True,False,True,True,False,False],[False,True,False,True,False,False],[False,True,True,False,True,True],[False,True,False,False,False,True],[False,False,True,True,True,False]],[[False,False,False,True,True,False],[True,False,True,True,True,True],[True,True,True,False,True,False],[True,True,True,False,True,False],[True,True,False,True,False,True],[True,False,False,True,True,True],[True,False,True,False,True,False],[False,False,True,True,False,False],[True,True,True,False,True,False],[False,True,True,True,False,True],[False,True,True,False,False,False]]], dtype = "bool")#candidate|4762|(11, 11, 6)|const|bool
bop_4763 = relay.bitwise_and(call_4758.astype('int64'), relay.reshape(const_4762.astype('int64'), relay.shape_of(call_4758))) # shape=(11, 11, 6)
bop_4766 = relay.bitwise_and(call_4759.astype('int64'), relay.reshape(const_4762.astype('int64'), relay.shape_of(call_4759))) # shape=(11, 11, 6)
output = bop_4763
output2 = bop_4766
func_4776 = relay.Function([], output)
mod['func_4776'] = func_4776
mod = relay.transform.InferType()(mod)
output = func_4776()
func_4777 = relay.Function([], output)
mutated_mod['func_4777'] = func_4777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4683_call = mod.get_global_var('func_4683')
func_4684_call = mutated_mod.get_global_var('func_4684')
call_4780 = relay.TupleGetItem(func_4683_call(), 0)
call_4781 = relay.TupleGetItem(func_4684_call(), 0)
output = relay.Tuple([call_4780,])
output2 = relay.Tuple([call_4781,])
func_4786 = relay.Function([], output)
mod['func_4786'] = func_4786
mod = relay.transform.InferType()(mod)
mutated_mod['func_4786'] = func_4786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4786_call = mutated_mod.get_global_var('func_4786')
call_4787 = func_4786_call()
output = call_4787
func_4788 = relay.Function([], output)
mutated_mod['func_4788'] = func_4788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_4809 = relay.TupleGetItem(func_4380_call(), 1)
call_4810 = relay.TupleGetItem(func_4382_call(), 1)
uop_4851 = relay.asinh(call_4809.astype('float64')) # shape=(11, 11, 6)
uop_4853 = relay.asinh(call_4810.astype('float64')) # shape=(11, 11, 6)
output = relay.Tuple([uop_4851,])
output2 = relay.Tuple([uop_4853,])
func_4854 = relay.Function([], output)
mod['func_4854'] = func_4854
mod = relay.transform.InferType()(mod)
mutated_mod['func_4854'] = func_4854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mutated_mod.get_global_var('func_4854')
call_4855 = func_4854_call()
output = call_4855
func_4856 = relay.Function([], output)
mutated_mod['func_4856'] = func_4856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_4894 = func_4336_call()
call_4895 = func_4336_call()
output = call_4894
output2 = call_4895
func_4896 = relay.Function([], output)
mod['func_4896'] = func_4896
mod = relay.transform.InferType()(mod)
output = func_4896()
func_4897 = relay.Function([], output)
mutated_mod['func_4897'] = func_4897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mod.get_global_var('func_4854')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_4931 = relay.TupleGetItem(func_4854_call(), 0)
call_4932 = relay.TupleGetItem(func_4856_call(), 0)
output = call_4931
output2 = call_4932
func_4935 = relay.Function([], output)
mod['func_4935'] = func_4935
mod = relay.transform.InferType()(mod)
mutated_mod['func_4935'] = func_4935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4935_call = mutated_mod.get_global_var('func_4935')
call_4936 = func_4935_call()
output = call_4936
func_4937 = relay.Function([], output)
mutated_mod['func_4937'] = func_4937
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4943 = relay.const(-2.935542, dtype = "float64")#candidate|4943|()|const|float64
const_4944 = relay.const([[[8.570839,4.425047,-8.945555,8.987519,3.431846]],[[6.637399,0.441516,7.584438,2.587246,3.538558]],[[-4.875901,1.447685,1.981808,-3.971137,-7.832857]],[[-5.788923,6.678877,-9.522899,8.606548,4.219790]],[[-9.024695,6.322523,1.307126,-7.546670,0.040593]],[[-1.075266,7.342927,4.120110,3.364897,-3.277570]]], dtype = "float64")#candidate|4944|(6, 1, 5)|const|float64
bop_4945 = relay.power(const_4943.astype('float64'), const_4944.astype('float64')) # shape=(6, 1, 5)
output = bop_4945
output2 = bop_4945
func_4949 = relay.Function([], output)
mod['func_4949'] = func_4949
mod = relay.transform.InferType()(mod)
output = func_4949()
func_4950 = relay.Function([], output)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_4978 = relay.TupleGetItem(func_4380_call(), 0)
call_4979 = relay.TupleGetItem(func_4382_call(), 0)
output = relay.Tuple([call_4978,])
output2 = relay.Tuple([call_4979,])
func_4993 = relay.Function([], output)
mod['func_4993'] = func_4993
mod = relay.transform.InferType()(mod)
mutated_mod['func_4993'] = func_4993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mutated_mod.get_global_var('func_4993')
call_4994 = func_4993_call()
output = call_4994
func_4995 = relay.Function([], output)
mutated_mod['func_4995'] = func_4995
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5029 = relay.var("var_5029", dtype = "int32", shape = (8, 8, 4))#candidate|5029|(8, 8, 4)|var|int32
const_5030 = relay.const([[[-4,-2,1,-9],[-4,2,-2,8],[7,-3,7,7],[-8,9,-6,5],[-10,-2,-6,-9],[5,-2,-2,-5],[6,6,-8,1],[8,5,3,-3]],[[-6,3,-5,4],[-4,1,7,-6],[7,-8,5,-2],[-9,6,-6,6],[5,6,4,3],[6,-7,-1,-8],[7,5,7,-4],[4,-10,-10,-4]],[[8,6,-10,1],[5,9,-2,-6],[4,10,9,-8],[5,-5,4,3],[-1,-5,10,-7],[5,10,-4,6],[-8,-9,-2,9],[-5,-4,6,-3]],[[6,10,-6,-10],[-4,10,-7,-5],[-5,-1,3,6],[-4,1,10,9],[-3,-4,5,-10],[4,-6,-8,-3],[7,-2,4,2],[-10,2,-8,8]],[[9,10,3,2],[2,8,10,5],[-7,-10,6,-1],[-7,-6,5,4],[-3,-7,-6,6],[6,8,-5,-3],[-9,-3,7,1],[8,-8,-1,-6]],[[-7,-5,-1,-1],[-2,3,1,2],[-1,2,3,-3],[-3,6,3,10],[-5,5,3,1],[6,-7,-9,6],[5,9,3,1],[-5,10,10,-10]],[[-5,1,4,5],[7,6,2,8],[-1,-9,1,8],[8,-3,-8,-3],[1,-10,5,4],[9,8,1,-1],[4,-7,-10,2],[5,-6,10,5]],[[-3,-6,-4,2],[10,7,7,6],[-7,-8,-7,7],[-8,6,-4,9],[8,8,8,5],[2,-1,-9,-2],[-9,-5,3,-8],[-7,-8,5,-2]]], dtype = "int32")#candidate|5030|(8, 8, 4)|const|int32
bop_5031 = relay.bitwise_and(var_5029.astype('int32'), relay.reshape(const_5030.astype('int32'), relay.shape_of(var_5029))) # shape=(8, 8, 4)
func_3822_call = mod.get_global_var('func_3822')
func_3827_call = mutated_mod.get_global_var('func_3827')
const_5042 = relay.const([-4.601627,-5.618115,3.149528,-2.605578,-5.102674,1.565961,4.873234,8.994143,-0.244931,-2.972971,-3.742753,-2.832587,-1.838745,0.208606,6.806552,-7.825904,3.405291,8.824493,5.468342,9.945991,-0.919560,2.465471,0.839133,1.952414,-4.023060,9.758654,-0.594933,-4.139433,9.442323,-6.116485,-9.117426,-8.040114,8.923972,-6.101478,-0.124716,6.332913,-5.087589,-6.700411,9.407708,-5.026885,8.637021,5.958480,9.544405,-2.531963,3.086824,3.737304,-2.460465,0.356321,-2.502254,-1.972513,-9.013653,4.271374,6.578082,-6.355292,3.932868,-3.510815,1.912011,6.404495,2.592306,8.808086,-5.908928,-9.187461,-3.563274,4.339029,8.816392,3.834872,9.981136,-3.741805,6.750486,9.098508,7.030705,3.876159,4.987223,-2.066384,0.725758,4.230891,-4.379581,-0.416305,-7.047977,0.311432,9.134751,5.422777,1.559287,9.339579,-7.524999,-3.633313,-1.970849,-4.747093,-8.112214,-1.323774,-4.559748,9.511890,9.776220,-5.908715,8.300703,4.968460,-4.419895,9.528615,8.618903,-1.443199,-6.003266,5.607265,4.176520,-9.358678,-8.721064,8.170895,3.906514,-9.952836,-3.825121,-5.304967,-9.948319,-6.709610,-0.826642,5.869441,4.055691,9.101154,-9.131707,-2.659186,2.445381,3.190021,-6.881672,-5.394863,7.044554,-0.807161,1.989673,-8.656742,0.399498,0.098026,-2.144215,0.958729,-3.907038,5.231538,8.475707,-1.660002,8.427483,1.255988,-3.742553,5.231078,-5.744986,4.523604,-3.717523,1.496136,5.620505,7.069744,7.269559,0.461097,6.076798,-6.640008,-3.130732,0.591978,-9.946105,2.677367,5.790735,8.549320,8.049005,3.456977,-3.951153,1.614755,9.531261,3.083886,9.198025,7.500202,-3.550644,3.044808,-5.638889,-7.223566,0.465314,-6.546408,-8.986924,-3.440679,-5.522346,0.779087,4.666200,-5.608822,5.834145,9.830164,-3.745599,4.129522,2.821326,-7.832212,-5.131719,-2.468782,-6.620592,-6.837946,-4.883182,-0.282740,-3.852446,6.062646,-3.381209,8.298567,-7.472602,-3.126771,6.921044,5.567040,2.283057,-5.169599,-8.596962,3.208025,6.594411,6.321566,5.735622,3.299785,7.179189,2.348755,-0.850305,2.804265,7.777102,-7.546038,0.783841,9.707215,4.030714,-7.781073,7.753445,-5.907486,4.918265,-3.835410,-7.480341,2.166454,2.972318,6.526511,0.223085,-7.936346,3.292975,5.097177,-6.789287,8.029115,-9.981849,9.213096,9.656576,2.511218,4.554217,0.423874,8.889857,9.509789,5.722090,-8.129245,0.948536,-2.005920,7.434307,1.074899,-0.620645,5.338761,9.808121,-8.140203,7.844901,9.428171,-4.662112,-8.949404,0.449891,-4.312239,-3.138386,4.944381,1.162626,-9.420908,8.614535,-4.903803,-6.161101,8.449845,-9.785859,1.153255,4.481269,-5.372934,7.455416,0.105819,-4.353699,-0.701047,-6.706655,-5.723869,8.453121,8.224698,-6.009875,-6.231368,1.819622,-4.320557,-2.022352,9.498249,3.560137,6.350808,-4.896474,2.441370,-8.021912,-4.319441,-4.357933,-3.056346,2.939701,-2.103963,2.822268,0.804344,-0.672344,-0.719025,6.944042,-6.520247,7.844698,1.433191,-5.630611,-2.935902,-9.429325,-5.405146,5.232459,-9.378574,-8.827248,-6.250578,-3.774979,-2.406886,-9.329738,1.693618,6.639334,-0.874544,5.897354,-0.572461,-1.563335,-4.556165,3.310744,7.430090,7.626073,-3.938535,1.288287,2.253559,-6.179720,-3.113141,-1.298231,-8.213449,-9.891701,-0.350789,-2.010521,6.755974,6.808812,-6.053562,-2.767398,6.500046,2.189571,6.076275,-4.823682,-8.119094,7.415802,5.101508,-6.484462,6.182515,-6.632784,-1.259723,-9.122637,-8.771588,7.461254,1.981373,-9.100130,0.175760,-5.236651,-5.105030,0.300299,6.823482,-7.784947,-5.455763,-2.666647,0.057091,7.072325,2.153028,8.602586,1.910363,-5.009181,8.568976,5.793962,4.948762,2.351561,3.417182,-0.927397,7.508842,7.689951,-9.131977,2.346289,7.096561,9.379219,4.912016,-7.386940,-4.714711,5.974694,6.272991,-8.389847,-7.325754,2.640987,3.878576,-8.920712,-4.190179,-7.610513,1.032424,-2.317195,8.338862,3.941675,-2.674570,3.550463,9.635266,-4.933979,-5.312561], dtype = "float32")#candidate|5042|(392,)|const|float32
const_5043 = relay.const([-10,-3,-3,-6,6,-7,-4,-5,-10,-9,-10,-8,-1,6,-5,-5,4,-10,8,1,2,2,-9,-2,-1,-5,-1,4,10,-9,3,-10,2,3,-7,-6,2,-6,5,2,-8,-9,-2,1,4,-6,6,3,-7,-9,-1,-3,3,6,7,5,4,4,-6,-9,7,-9,-1,-2,-9,3,6,-4,7,-6,-5,8,5,-7,-7,3,-2,-8,5,3,8,5,-4,-2,7,5,-1,3,-5,8,7,-9,-6,-3,-4,6,-6,8,9,3,8,-10,-1,6,3,9,9,-10,2,7,-2,1,-5,-10,-9,-2,10,-5,-7,6,-6,2,2,10,5,-3,-10,7,-1,10,9,-6,-6,-10,5,4,3,-7,-6,-1,4,-10,-8,10,3,9,1,-2,10,9,10,-7,9,-7,2,-6,2,3,-4,-9,-2,-10,6,2,-6,3,6,6,-7,10,1,-8,-5,-10,3,-3,-8,1,-7,-3,-6,6,8,9,6,-5,-7,-9,3,1,-1,-2,-9,6,-6,8,5,7,-9,9,6,-4,6,-7,-5,4,3,6,6,8,8,5,-2,-9,9,-6,-1,-1,-2,-7,-7,4,4,3,-9,-4,-9,-10,-3,1,6,-10,6,7,10,-6,4,10,-7,10,8,-4,-6,7,5,3,5,-10,5,-10,1,3,-5,3,-7,-9,8,-1,10,-4,-8,-6,-10,-4,6,-9,10,-4,8,1,2,-10,3,-5,-3,-8,7,6,10,2,5,-5,-5,4,-10,-1,-4,5,4,10,10,-10,2,4,-7,-10,-8,-9,-5,8,-7,8,-10,9,-2,3,9,-8,-3,-4,9,-5,8,1,9,1,-8,7,3,-4,-7,6,2,8,8,-6,-6,3,-4,-1,4,9,2,-10,2,-9,-10,-6,1,-10,7,-8,-6,9,7,-5,2,3,-7,-7,6,9,-3,2,10,4,7,-8,-3,5,7,-1,3,10,-8,1,5,3,5,-3,-7,-2,-9,9,9,1,5,4,-9,-8,-3,2,8,-7,1,10,7,6,4,7,1,-9,4,-6,8,-10,4,-3,9,7,-2,-10,1,-4,-3,-10,2,3,-3,-9,-5,-5,2,1,-8,1,-7,10,9,3,-6,8,-2,-6,-4,-7,-5,-5,-10,10,5,9,-4,-10,-4,7,-5,10,10,6,2,-10,-6,7,3,6,-9,-8,6,8,-2,-10,1,-6,-7,-4,8,9,3,1,-1,2,2,3,-9,-7,-5,7,8,-9,-8,5,1,9,8,-7,-7,-9,10,-8,-10,-1,-2,10,-4,5,2,-7,2,6,-5,8,-2,2,6,3,3,-8,-2,4,-7,-7,7,-1,-1,-8,10,10,-1,-5,10,-3,-4,7,9,-2,-8,-7,-5,3,-5,-4,-7,8,5,-4,-3,-8,-8,-3,-8,-5,-5,1,-3,8,7,5,-4,-9,6,4,10,4,-8,-7,1,-3,4,-8,10,5,6,1,-2,-9,-6,8,6,4,-1,8,-2,-10,-7,-3,2,6,7,10,-10,10,1,-3,-3,10,-9,8,1,10,-4,-5,-1,6,10,9,-4,-7,-6,1,9,-3,-10,-2,9,-9,4,-1,6,-3,5,6,1,-4,6,-6,7,-5,-2,-7,10,-4,-9,9,4,10,4,-7,-1,-1,8,-4,-1,-1,-8,4,4,2,2,-9,-1,-6,-6,9,-7,6,10,-10,9,-3,-2,4,-4,-1,6,-5,-10,-4,-5,6,5,-7,10,-7,-9,-5,-7,8,3,-2,-9,8,9,6,4,5,-3,-6,10,-1,4,-1,-5,4,6,9,-2,-7,-8,4,6,-3,4,2,-1,-4,-1,5,3,3,5,7,8,8,-8,8,-4,2,10,-3,-9,5,-3,5,10,-7,10,4,-7,-4,5,-6,-4,-8,-4,-7,-9,4,-5,-9,-9,-1,8,6,8,-10,-5,1,-7,-6,-9,6,5,9,9,4,4,-6,3,-8,6,-1,4,-10,10,-4,9,6,-7,6,2,-3,-7,9,-5,-8,-4,-9,2,1,-7,10,4,2,10,-9,-7,-1,3,4,-6,8,3,2,9,9,8,-2,3,6,-1,8,-7,-2,-6,10,-1,3,8,-1,-9,-4,8,-1,-1,6,2,-8,10,1,8,-9,-10,3,10,-4,2,9,-6,-1,-9,-7,-1,-10,-8,-9,2,3,2,9,-10,2,3,-2,-4,-5,1,2,10,-3,2,-5,9,6,4,5,2,-5,-1,-3,-1,-5,-2,-2,-8,-3,6,7,-5,-9,2,-4,1,9,-6,4,3,-10,8,-9,9,-9,9,-10,-10,-5,3,7,9,-6,10,-4,1,10,-8,-8,-3,1,4,6,10,-8,-1,7,-1,-6,-6,4,6,9,-4,-8,3,-7,-1,-2,-4,-4,-7,4,-7,-1,-1,-10,-10,9,-7,9,6,-8,-10,-8,3,9,6,-8,-2,-7,5,-9,8,6,-7,-5,2,-2,4,-5,5,-6,7,-5,4,-3,-9,3,2,-1,4,-6,9,-9,9,9,9,-4,-1,5,-10,4,1,-5,9,-6,1,-1,9,3,-3,-1,-10,-7,3,-8,-10,-2,-2,-8,4,5,-5,8,-4,1,5,-10,-6,-10,10,-3,2,5,-4,-6,6,-4,8,2,-2,1,-4,6,9,10,4,2,-1,-2,10,1,-9,-5,-6,-9,2,10,3,8,2,3,-3,3,-4,9,3,7,7,-9,1,-5,-9,10,1,-6,-6,-10,-6,3,8,-3,3,2,-4,-5,8,9,-3,1,-5,-8,8,9,10,1,3,-8,-3,-6,-9,3,1,9,1,9,-9,-6,-6,8,-7,6,4,-8,-4,6,-5,3,1,9,3,7,-6,6,9,10,6,8,9,7,-2,7,3,3,-3,5,2,-8,8,2,10,5,-9,-6,-1,-2,-7,10,10,-4,-8,8,5,-10,-2,10,6,7,-10,-6,7,6,8,4,9,-2,8,-7,-8,6,1,1,5,5,-3,8,10,6,10,-7,-1,-6,-2,2,1,-1,7,-2,-4,-10,7,-8,10,4,-7,8,3,-7,-8,7,8,-2,2,9,-2,-2,7,-5,-6,-8,3,1,10,10,-6,7,-5,-10,6,10,8,-4,-3,-3,-9,2,-5,-7,10,4,4,-9,-4,-5,-10,-6,-8,5,-1,-2,9,4,8,2,-9,-3,8,4,-3,-10,-4,5,-9,5,1,10,-1,6,6,-5,-4,1,-2,-4,2,10,-2,-9,-5,1,-10,-8,5,-10,1,9,-6,7,-5,-3,-7,-2,7,-2,-8,10,3,-10,-1,-3,-8,6,-5,1,6,-5,-8,3,-2,10,7,-7,10,-1,10,5,-8,-1,6,1,10,4,-6,-5,-2,-8,9,-1,5,-1,-8,2,-9,-9,8,6,7,-6,-7,-1,8,-7,-5,5,2,4,4,6,-10,8,-6,-6,4,-5,-2,9,-6,-4,-9,-10,5,-1,-9,-2,-1,-8,5,-9,5,2,-10,9,1,6,2,-9,9,8,6,-8,-2,-3,2,8,5,7,2,1,9,3,3,-10,3,-2,-10,7,9,-9,-1,-8,-6,4,-1,1,-4,1,6,4,1,-8,8,-3,5,-10,10,7,-5,3,-7,3,-1,-1,-6,-6,-10,-10,-2,-7,-8,7,7,3,2,5,2,-1,2,10,6,9,-2,4,3,-1,10,-8,-10,6,-6,-3,1,-1,-7,-5,7,-9,-4,-3,8,-9,-1,-5,5,-7,4,-1,-6,-10,-3,6,-8,1,9,10,-7,6,-3,1,2,-10,7,-3,-4,-4,7,-1,4,-8,5,2,6,-9,1,-8,-7,-1,-10,5,-9,-4,-8,3,8,-9,-3,4,1,8,-5,-6,5,-7,4,-2,3,-1,-3,-5,10,-2,6,-10,-3,-10,-7,1,6,10,9,4,9,3,2,1,-3,-2,-2,6,3,2,-2,5,-10,-1,6,-3,1,-5,5,4,2,4,10,-7,-6,6,-3,-8,-3,-4,-4,-6,-2,-9,-8,4,1,-1,-10,6,9,-7,-1,5,-4,7,-7,-5,3,-7,-9,10,-1,-10,1,-10,-8,-3,2,4,-9,3,3,5,2,-8,3,10,1,8,6,4,-2,2,7,9,-9,1,8,8,8,-2,4,-6,2,8,-9,-3,-1,7,2,-3,-8,-1,-10,8,-4,8,2,10,-7,3,1,9,2,-10,-3,5,9,10,6,-7,10,-6,-9,-8,7,2,-9,1,-10,6,-4,-7,-7,-2,6,-1,5,1,-6,-10,-2,2,-7,3,-4,3,9,10,-8,9,2,-10,-9,-10,-8,1,-7,3,6,3,6,7,-7,-1,1,-7,-4,-1,8,10,-4,-7,-4,6,6,-7,5,-8,-2,7,3,-8,3,-9,-1,-6,-10,5,-3,3,10,4,7,-10,-2,-2,-3,9,-10,-6,7,-5,6,2,-2,-1,-8,-10,8,4,10,-3,8,8,2,8,-5,8,-2,-3,7,7,-10,8,8,7,10,1,-4,8,3,5,9,-1,2,-5,9,-4,-8,8,6,4,-5,-6,5,5,7,8,-3,-7,5,6,4,5,-4,-8,8,6,10,-4,-5,-1,-1,10,-9,9,-9,-10,-4,-4,9,9,-7,-1,-9,10,-4,-8,-1,8,-7,6,3,8,-2,-6,-6,8,-1,10,6,6,2,-4,6,5,-1,9,6,1,-10,10,-5,-1,9,-8,1,6,2,8,-4,-1,-3,-8,8,10,-10,5,-9,4,10,-5,-10,6,-1,-9,-7,-1,-9,-3,2,-6,-2,-8,9,-2,-5,-2,8,-6,2,7,6,-2,-8,-3,-6,1,-1,-2,-2,-1,-1,-2,1,-9,5,-4,3,7,1,-10,-10,9,-1,-4,-3,-1,-8,-3,-5,1,6,9,1,1,-6,3,1,7,-2,6,-6,10,-2,-2,-5,6,-8,3,1,-3,2,-4,7,4,2,5,-8,3,-7,-8,-8,6,-9,5,-2,10,-2,6,6,9,1,-10,-8,-1,-8,7,-3,-1,-1,-4,-5,-6,9,-6,-3,6,8,3,9,-1,4,4,-3,10,3,9,-10,-5,-7,7,6,6,-1,2,-4,8,10,-5,-9,9,1,-8,-2,-4,-3,-1,-4,7,-5,-5,9,-6,5,4,-8,-6,10,2,6,-3,6,-2,-10,-8,-5,5,-6,4,2,-7,-2,9,-6,6,-8,-3,-2,7,-3,8,-7,1,-3,5,5,-6,-5,-9,-8,3,1,-2,-10,-8,1,-8,-8,-2,-5,6,8,-7,9,-4,-8,-2,-2,5,-3,-2,8,5,-2,-6,-3,-7,4,-6,9,-9,6,7,8,-9,-4,5,2,7,-6,-10,-5,4,2,-4,3,-9,7,-6,-9,-5,-5,-4,-2,-10,4,-1,-7,-8,-8,-2,-6,-7,-7,7,9,9,-2,-10,4,5,8,-4,-1,-7,-7,-8,-10,-5,2,-4,-1,3,-6,10,-3,-7,-8,-7,5,10,5,-2,-4,3,-6,7,2,3,-2,-7,5,-5,4,6,8,-1,3,-9,10,-5,10,8,-1,-1,3,6,-1,4,5,-7,3,7,1,5,9,-10,9,3,8,-2,2,-8,1,2,-2,-10,-5,1,4,-9,-5,5,4,3,-4,2,5,10,-4,1,-1,10,-1,-4,-6,-9,2,6,-4,8,6,-3,-4,6,-7,-3,-9,4,4,4,-1,-3,-8,8,10,1,8,4,9,9,8,-4,-4,6,6,-10,-6,7,3,-8,-3,-6,5,2,-1,-9,2,-5,-4,4,4,7,6,4,1,-2,-2,-7,10,10,10,-10,5,-9,-8,-8,-7,-2,1,6,-9,8,7,-8,-5,-10,-8,-9,6,1,-3,6,-6,-6,-6,2,-1,7,-6,-6,-3,-7,-7,-3,6,-6,-5,-2,-3,-1,-1,6,-3,-1,-10,-1,-3,4,-5,-2,-3,2,3,10,-2,-6,-5,-6,-5,-1,-4,-8,9,7,-6,-4,7,6,10,7,10,9,-4,-6,-4,6,9,6,-3,-1,2,-8,5,-1,4,9,9,-1,-2,4,6,-3,1,3,4,4,3,-7,8,3,5,-7,-9,9,-5,-7,-2,-6,-4,8,-4,4,-4,4,-8,-5,-9,7,-9,9,-9,7,-1,-8,-3,-10,9,-2,6,7,5,7,4,-1,-2,9,9,3,-10,-4,7,9,10,3,9,10,-3,7,-4,-10,-1,6,-8,9,-1,-10,8,8,-1,4,10,6,-4,9,-3,4,2,3,10,8,6,-4,7,2,1,-2,1,-2,-2,3,-2,9,-7,-3,-6,-2,1,7,-6,-10,5,7,9,-1,2,6,2,-9,-10,10,5,6,-6,6,2,-10,-5,2,-6,-6,-8,-4,8,1,-8,-1,3,-9,-2,2,10,-8,-8,-10,3,5,-6,4,-2,3,-6,-3,6,7,-8,2,2,2,2,6,-5,9,-8,7,-7,-10,-7,-9,6,10,8,9,-2,2,10,-9,9,-8,10,8,8,-8,2,9,-7,9,1,-7,-8,6,9,3,-7,6,10,5,-4,4,-4,2,-2,-9,9,-5,-7,5,10,5,-10,-5,6,8,-4,-6,5,-10,-10,-1,4,-6,-1,-8,-8,8,-5,10,-4,-3,-3,7,-6,-7,5,-5,-6,-2,1,-7,5,9,-2,-1,-7,5,3,8,-8,-8,-4,3,-6,-8,5,6,-5,-1,-1,-3,9,10,9,-3,-4,-9,-6,2,-7,8,8,-3,-6,7,-7,10,8,7,-8,4,3,-4,-6,-2,-7,-5,4,-7,10,-10,6,-4,9,-4,2,-1,-1,-4,3,8,-6,-6,-10,-1,-9,-9,2,-1,-5,-10,-3,9,-7,-3,-1,-10,-3,-5,9,5,-8,5,8,-1,-1,9,1,1,3,8,-4,-10,5,2,-3,4,-3,-1,4,-5,10,-10,4,-9,-5,10,5,8,9,-6,9,4,-8,3,7,-7,-2,2,-10,2,7,-5,-5,-4,5,7,-9,-5,7,9,8,5,-4,-7,-7,8,-2,-8,-9,1,4,7,-10,2,-2,3,8,-9,4,-7,-4,9,-1,5,1,2,-6,1,-3,3,-8,5,-4,-8,-10,-3,1,4,-9,10,5,-7,2,6,3,-1,6,4,-10,-2,9,-7,-7,2,10,-6,-5,7,-1,3,4,2,9,2,2,2,-1,-4,1,-4,8,-7,5,10,-7,-9,-8,1,-10,-9,-10,6,9,10,5,-1,8,-6,2,-10,-9,-9,1,-4,-6,-5,-3,8,2,2,-5,-2,10,7,-4,-10,5,1,3,9,10,6,9,-5,-5,10,-1,5,8,3,9,6,5,2,-3,-7,-8,-4,10,-8,8,7,10,-1,3,2,-7,6,4,-10,-10,7,2,5,-5,-7,10,-4,-5,1,-1,2,1,-2,7,-3,-8,2,-4,-10,-9,3,10,-4,-6,-2,9,-7,-1,7,-2,4,-1,-10,5,-5,8,8,9,10,6,-4,-8,-5,-1,-9,-3,3,-3,-8,-4,5,-2,7,-4,9,-2,6,4,-1,6,-8,-4,2,5,-6,-4,10,-5,-9,7,-10,9,-9,9,-7,-9,-5,-9,8,4,2,4,-4,-10,-7,-1,6,-5,4,-4,-3,8,-3,3,-1,-7,7,-7,-10,5,4,6,-7,-4,9,2,8,-9,6,-2,1,2,-1,-10,-3,-2,-1,6,1], dtype = "int64")#candidate|5043|(2880,)|const|int64
const_5044 = relay.const([-5,-1,-10,4,2,-5,-7,10,5,3,-7,5,-1,-5,1,4,4,9,-6,4,-10,3,-5,7,5,7,5,9,5,10,-8,1,2,10,6,-7,10,-6,-3,6,-5,9,9,5,1,-9,2,3,-4,1,4,6,8,-2,7,10,-4,-1,6,-4,-5,-6,-5,-8,-3,-6,-9,-4,6,-9,-5,-6,-9,-10,5,1,-9,7,-9,4,6,-8,4,-1,7,3,2,-1,-6,-5,6,-1,7,2,2,8,6,2,-10,-10,4,9,1,-6,-2,10,-1,7,-10,1,-5,-2,7,-10,-7,-3,2,-9,-3,-3,-8,-5,3,-4,-10,-7,-6,-5,10,-9,6,10,-4,-2,-5,-2,-8,-1,-10,6,-4,5,1,-4,-5,-10,4,8,10,-5,-7,-10,-5,-7,-8,4,-7,3,-9,9,-9,-7,-10,1,7,6,4,-8,-7,-3,-10,-6,-8,-5,5,2,-4,6,-4,-3,-4,4,5,10,-8,6,2,7,10,-6,7,-8,7,-4,-3,-1,-5,9,-8,9,-2,4,-8,3,-4,-4,8,-1,-10,-7,1,1,4,4,-9,-8,10,6,-4,8,7,-8,-8,2,-5,10,-9,-9,-1,5,-8,2,4,7,-6,-5,-9,-9,-3,2,10,-3,2,-3,5,-4,10,2,-5,-5,4,-3,-4,-9,-5,-4,-4,5,-9,9,-6,-6,3,4,8,9,9,6,-6,10,-7,-6,1,7,10,3,-2,-4,-10,-3,6,-10,-3,8,-3,-3,-3,1,2,4,-7,8,10,2,-10,6,-6,1,-3,3,7,6,4,-6,9,-8,8,4,8,8,3,-4,-10,-10,-5,-1,-8,-4,8,9,-1,4,5,-9,-5,8,3,-9,-6,8,-4,6,7,6,-2,-3,-4,-6,4,-1,-4,-9,1,-10,8,10,8,-6,10,10,-7,-6,-9,-9,10,2,-8,-1,-8,8,10,10,6,4,-7,9,-9,-4,-9,-3,-2,-1,7,-9,-4,3,-5,-3,-10,-8,-1,-9,-1,-3,8,9,3,8,3,-5,4,-10,-2,9,-10,-6,-3,-5,10,5,4,-7,6,-4,-5,-6,8,8,-9,-9,6,-1,-2,5,2,9,-6,2,-4,-10,9,7,-2,-5,-4,1,2,10,8,-8,-5,-8,-3,-2,-9,5,-8,5,-9,-2,-7,-4,-5,-4,10,-3,9,8,4,-1,4,-2,10,2,-8,-2,-5,7,-1,-3,3,7,-1,-5,7,-9,4,1,7,-3,8,-3,10,-5,10,-1,7,-4,5,3,-7,-2,2,-7,9,-7,5,-9,7,-7,3,-10,8,-9,5,-4,2,5,9,6,-2,-4,10,-4,-7,-6,9,-1,1,-1,-9,1,10,9,10,9,8,-8,7,7,-3,4,-8,10,-4,8,-5,-9,4,6,3,7,9,2,-7,9,2,3,-8,-3,-1,6,-7,1,-2,7,-2,-9,-10,-6,9,-1,9,-5,5,9,-7,4,-9,7,-3,7,1,-8,-6,-9,10,-6,-4,-7,-8,-6,3,-1,6,4,-4,-5,-8,7,-7,-8,8,9,-6,-10,-5,1,8,-10,10,4,-6,1,1,-9,6,-9,-3,4,-5,8,-3,-7,1,-3,-3,6,-5,-5,-7,-7,2,-7,6,-8,8,-2,3,9,-9,6,1,-1,-1,5,9,-2,9,7,1,-8,-1,7,10,-9,-2,10,7,2,-6,-7,-2,-9,8,-8,-3,-5,5,-10,2,5,-4,-9,-6,10,-9,-10,-8,4,5,3,8,-4,-2,9,4,7,-9,-1,-7,-1,-10,7,-10,-3,3,-4,-6,4,-3,-1,9,6,-4,4,-2,8,-6,1,8,-10,2,3,-10,-5,2,-1,5,8,6,3,-9,-9,9,-10,6,9,-3,3,1,-8,5,3,-7,-3,3,3,8,6,4,4,3,5,8,-1,7,2,-9,5,-6,-10,-4,-2,5,-10,1,6,-1,-1,-10,-8,2,-10,-2,6,5,8,7,2,5,10,7,-3,-6,7,-9,-2,4,-1,-10,4,-2,-3,-2,2,8,-7,-7,-5,-7,6,7,8,-3,8,7,-7,8,-10,6,8,-6,-2,5,4,2,-7,-2,-2,5,6,-6,1,-4,4,4,5,7,1,-9,-6,-6,1,10,-3,-7,-5,4,7,-8,8,-5,4,-2,-5,-1,-1,-6,7,10,-10,-10,10,-2,2,9,4,2,-5,-4,-7,-3,-5,5,-4,-3,1,-9,9,-7,-3,-8,-10,6,9,8,-6,8,-10,5,-7,-8,4,-9,-1,4,5,-5,-4,-10,3,-3,-9,-2,4,-10,-8,9,-6,-4,5,4,-10,4,-10,-1,2,-5,2,9,7,-7,8,8,2,-2,10,6,-5,-7,5,-7,1,10,-9,9,8,2,10,9,-2,9,-9,3,7,6,-8,-3,-6,2,1,3,5,-3,-5,-7,7,8,-2,7,-3,-3,9,1,8,3,7,7,3,-9,6,5,3,-9,-6,-6,3,-3,-7,10,-10,-5,10,10,-3,2,-4,-5,2,-4,10,1,-1,-8,1,-6,-8,9,-2,-3,-6,6,-4,7,-5,-8,10,10,6,-2,3,-7,8,1,4,6,-9,-10,-5,10,-7,-5,-8,10,3,10,-1,-9,4,10,-5,10,1,8,-8,-6,-7,-3,7,8,7,-8,-4,1,8,-7,-10,-9,-8,6,7,2,4,8,1,1,-5,-8,5,-8,1,-10,-2,-3,-5,-8,-1,-6,-6,-6,2,4,-4,6,-4,-4,10,7,2,4,-8,-2,3,-6,4,-5,-7,4,3,-3,-6,5,1,-10,3,10,8,-2,10,1,2,-10,5,2,-8,9,2,-10,8,-5,7,2,-9,-8,4,5,-3,7,-1,-10,-4,2,2,10,-3,-9,-4,8,7,4,-3,-9,4,-8,3,-3,-4,-6,7,6,-2,-2,10,-2,6,-10,5,-9,3,5,3,6,10,-6,7,9,-9,-10,1,-5,7,9,-3,2,-4,-4,4,-8,10,-3,6,-10,3,5,9,-2,-5,10,-9,-6,1,4,9,-10,-4,8,3,6,-6,-9,-2,5,3,-5,-10,-7,-10,4,3,-8,5,8,6,5,6,10,6,-5,-9,-3,-9,9,3,9,-7,2,7,-1,5,-6,9,-1,9,6,-4,8,3,-5,3,4,-2,-4,-8,1,-1,6,-3,7,-1,-2,3,-2,-9,5,-2,-2,7,5,-8,-1,-5,1,6,-10,10,-3,3,-1,2,-4,7,9,1,1,10,10,-1,-3,-8,5,6,3,5,4,2,-2,-4,-4,6,-4,-9,2,-5,8,-10,1,3,7,-8,5,-9,-10,9,9,1,-2,10,-2,-10,8,5,8,-3,-6,-8,-2,8,-1,8,-2,5,-1,9,8,6,-1,-5,-7,-6,1,3,-10,-5,-8,2,6,-6,-10,10,4,4,-7,4,9,-6,-3,-2,-10,3,4,9,-1,-6,-8,9,-4,-9,5,-4,5,-3,-9,-1,-5,-6,-2,-8,-8,5,1,-9,-10,6,4,-8,-10,-7,-9,7,-3,-5,-7,-9,7,2,10,3,-2,3,-8,4,3,6,-8,-8,-5,-9,3,-7,1,-8,-3,-9,1,10,5,9,5,-2,8,5,10,-4,-1,-5,10,-1,6,7,-4,-9,3,6,3,1,7,-5,-2,-2,-1,5,-10,-6,8,6,-2,-10,-4,3,6,9,1,-10,2,-6,-7,-4,-7,5,-4,9,5,3,10,7,9,9,1,-1,-9,7,7,-5,2,2,-1,5,4,5,3,8,-9,2,-6,2,1,3,1,-2,8,-10,-7,-4,3,3,-5,-8,1,4,-2,-3,6,-10,-6,1,-6,-2,7,6,-9,-6,3,9,-3,-9,1,-7,-10,5,7,9,-8,10,10,5,-4,-4,-4,-9,7,-1,2,5,-5,9,6,-7,10,10,-3,9,-8,2,-5,-1,1,-9,10,-6,-4,-6,2,3,-1,9,-7,-1,1,-7,6,-7,9,-1,-9,5,9,-4,-5,2,9,1,-2,-1,8,9,7,5,3,-7,3,6,3,5,-6,-7,-10,2,-3,-3,4,-8,-8,-7,9,3,-5,-5,10,8,7,-10,-4,-7,7,7,-3,-10,-8,-4,-2,10,-8,8,5,4,1,-8,-6,1,6,5,-5,-2,6,1,-5,-7,-7,8,3,3,6,9,8,-7,8,-6,1,-5,6,-4,8,-1,-8,-7,3,-5,3,2,3,-6,3,3,9,-8,-3,-5,6,6,-7,7,2,8,7,5,-9,-1,2,-6,-2,-8,-9,-8,9,2,-4,7,-2,-1,6,1,6,10,5,-1,-2,-4,9,7,5,-5,10,-6,6,-5,3,10,7,-9,5,1,-6,8,6,-5,-7,-9,2,-1,-3,3,-10,7,-2,-4,-4,-4,-2,8,-8,-1,5,1,-5,10,-7,-6,-5,-6,9,5,7,-6,2,8,-8,4,-9,3,-5,4,5,1,-2,10,-9,5,-4,4,6,3,-9,1,2,-1,-6,-9,4,-2,6,-8,-7,-10,3,-5,4,-6,5,-10,-1,3,8,8,-3,10,4,-4,-8,-4,-6,3,8,-4,5,1,-7,-3,6,8,-4,9,-4,-3,-7,7,-5,-5,8,-6,-3,8,9,4,-3,-7,1,-8,-10,9,-5,5,5,-1,-9,-5,-3,-4,-4,-10,-1,5,6,6,2,5,2,-7,10,-9,6,3,6,-2,8,-9,-10,2,6,3,-5,-7,-8,1,4,-1,3,10,3,-2,-5,-1,-5,-2,-3,9,5,3,10,-3,6,-7,-10,-10,10,-4,-3,3,-10,-9,1,-8,-3,10,-9,-10,-7,-3,5,-9,-5,1,10,8,-10,-10,4,-5,-3,4,8,-6,-2,-3,10,1,5,-5,-7,-4,9,-8,-3,2,10,9,-10,4,-2,9,8,-9,-4,-7,-7,-8,4,9,-10,5,-7,-7,-7,-10,-7,3,1,-8,6,5,-6,-10,-10,-10,-10,-10,1,-7,-8,9,8,-3,-4,1,8,-5,-1,-7,-4,1,3,-2,-9,-3,5,-6,-4,1,10,7,-10,-4,-7,-3,-9,-4,8,-9,6,5,3,-6,10,4,9,-10,4,-9,-7,4,9,-10,-6,5,10,3,3,10,-7,5,-6,5,9,4,6,-1,6,1,10,-3,-8,-4,8,-4,8,10,-4,-7,7,-8,9,-10,-3,-6,9,-1,-8,7,9,-10,1,-3,3,10,3,-6,9,7,9,5,5,-6,-1,8,6,-8,-5,4,3,1,3,-6,3,6,-1,1,-9,8,2,1,-1,7,-10,-6,-8,-8,-4,5,10,-3,-4,-6,3,-4,-7,5,4,3,-6,8,8,4,10,3,-5,-10], dtype = "int32")#candidate|5044|(2016,)|const|int32
call_5041 = relay.TupleGetItem(func_3822_call(relay.reshape(const_5042.astype('float32'), [4, 7, 14]), relay.reshape(const_5043.astype('int64'), [2880,]), relay.reshape(const_5044.astype('int32'), [2016,]), relay.reshape(const_5042.astype('float32'), [4, 7, 14]), ), 7)
call_5045 = relay.TupleGetItem(func_3827_call(relay.reshape(const_5042.astype('float32'), [4, 7, 14]), relay.reshape(const_5043.astype('int64'), [2880,]), relay.reshape(const_5044.astype('int32'), [2016,]), relay.reshape(const_5042.astype('float32'), [4, 7, 14]), ), 7)
func_984_call = mod.get_global_var('func_984')
func_988_call = mutated_mod.get_global_var('func_988')
var_5053 = relay.var("var_5053", dtype = "int32", shape = ())#candidate|5053|()|var|int32
call_5052 = relay.TupleGetItem(func_984_call(relay.reshape(var_5053.astype('int32'), []), relay.reshape(const_5044.astype('int32'), [12, 12, 14]), ), 0)
call_5054 = relay.TupleGetItem(func_988_call(relay.reshape(var_5053.astype('int32'), []), relay.reshape(const_5044.astype('int32'), [12, 12, 14]), ), 0)
output = relay.Tuple([bop_5031,call_5041,const_5042,const_5043,const_5044,call_5052,var_5053,])
output2 = relay.Tuple([bop_5031,call_5045,const_5042,const_5043,const_5044,call_5054,var_5053,])
func_5056 = relay.Function([var_5029,var_5053,], output)
mod['func_5056'] = func_5056
mod = relay.transform.InferType()(mod)
var_5057 = relay.var("var_5057", dtype = "int32", shape = (8, 8, 4))#candidate|5057|(8, 8, 4)|var|int32
var_5058 = relay.var("var_5058", dtype = "int32", shape = ())#candidate|5058|()|var|int32
output = func_5056(var_5057,var_5058,)
func_5059 = relay.Function([var_5057,var_5058,], output)
mutated_mod['func_5059'] = func_5059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4896_call = mod.get_global_var('func_4896')
func_4897_call = mutated_mod.get_global_var('func_4897')
call_5095 = func_4896_call()
call_5096 = func_4896_call()
output = call_5095
output2 = call_5096
func_5115 = relay.Function([], output)
mod['func_5115'] = func_5115
mod = relay.transform.InferType()(mod)
output = func_5115()
func_5116 = relay.Function([], output)
mutated_mod['func_5116'] = func_5116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_5130 = func_4336_call()
call_5131 = func_4336_call()
func_4786_call = mod.get_global_var('func_4786')
func_4788_call = mutated_mod.get_global_var('func_4788')
call_5148 = relay.TupleGetItem(func_4786_call(), 0)
call_5149 = relay.TupleGetItem(func_4788_call(), 0)
func_2148_call = mod.get_global_var('func_2148')
func_2154_call = mutated_mod.get_global_var('func_2154')
const_5151 = relay.const([4.146868,3.190182,5.944246,1.225098,-1.925111,7.301015,9.872621,-4.613724,-6.287329,2.881276,-6.203591,2.675279,9.983973,5.707540,5.710048,3.270214,-1.572554,-3.294608,-4.489338,-1.096776,-4.610808,-1.449780,-4.240767,9.354499,-8.835104,-0.007704,5.209348,5.408292,-8.303440,4.181962,-3.389421,2.677771,1.535056,-1.958336,5.640755,-0.317267,-4.760715,3.450711,6.649057,-7.431912,-0.304965,-8.471715,-6.710150,-3.510604,1.962684,-7.391351,-7.780348,-9.964529,-6.677179,1.846199,5.049462,8.683885,-9.499429,-2.627115,-4.426155,8.171414,-6.718269,-5.441578,6.119426,4.191085,-0.073138,-3.528898,3.682273,-6.728630,-3.246550,2.193733,2.847076,8.030907,-5.317829,-4.672678,-7.866191,9.044488,1.885667,-3.565145,-5.904295,8.931105,4.554873,2.194449,-8.196409,-1.749853,9.545112,-1.239404,1.578763,-0.619599,-7.482624,-1.412996,-3.803146,9.360286,6.854111,-9.742921,4.087168,-8.228024,-2.265323,-9.321723,0.338610,9.446061,-4.505547,6.714937,3.803272,8.791721,-9.498607,2.463176,5.970183,7.074433,-2.203708,-7.103643,4.802507,-1.506106,-9.503151,4.329782,-5.878103,-3.561862,-4.276149,-3.633865,2.016664,4.879692,3.566164,-7.573163,0.222579,8.164570,-5.430871,-3.833845,-5.313420,0.157987,3.939634,-1.340650,9.801662,-5.830234,-9.639594,4.068000,7.266791,-1.324126,1.602474,2.568236,-5.886664,-2.469806,1.424166,-4.120176,-8.964969,-7.643572,-0.543116,2.630905,-9.591628,-9.232459,-6.042275,-8.880503,-3.090418,-1.700403,-1.328488,3.026135,-3.803404,5.989175,-7.569706,2.237390,0.343467,-1.323381,-3.924687,9.272604,8.667649,5.401267,7.938452,7.889848,-4.366128,-1.478933,-0.549751,0.088227,4.040580,-5.535910,9.028656,-2.846448,3.646418,-1.531689,-4.270652,-5.495654,6.760670,2.083532,-2.672951,5.570880,-9.245956,6.843023,4.294455,5.028366,2.308139,-9.324845,1.870588,6.093143,5.040989,-0.328597,7.259076,3.031630,5.259574,2.042085,-8.734616,-1.685363,-7.807798,3.879873,8.948493,9.592610,-4.337528,3.990972,-5.800546,-5.724680,-5.278307,-5.943364,-4.891702,7.449977,-7.978187,3.330853,9.653096,-0.867944,3.269921,1.511566,-9.586398,7.674301,-5.769982,3.475576,2.385601,-3.625062,-3.869392,7.083293,-8.459122,-7.939675,5.164462,3.168867], dtype = "float32")#candidate|5151|(224,)|const|float32
var_5152 = relay.var("var_5152", dtype = "float64", shape = (720,))#candidate|5152|(720,)|var|float64
const_5153 = relay.const([[-9.034546,-4.890915,-0.643121,-4.919124,1.939412,2.914935,5.666203,5.131377,3.963197,7.541202,2.089391,-4.623101,6.941708,3.242835,6.733666,6.470424,-6.023340,5.272542,4.494044,5.638965,8.588435,5.302738,9.874305,-2.789301,3.293391,0.579566,5.174239,4.426670,-8.603817,-5.288929,7.500424,2.752067,3.741446,3.739151,-3.542462,-2.984495,3.950313,-3.491071,-1.915254,1.584937,-2.858119,9.795738,-8.871511,-1.021226,7.434695,3.183972,-4.564770,5.891018,6.360901,-1.917508,9.570998,3.867486,-3.963696,0.532147,5.280836,4.122696,-9.386861,1.950573,9.672994,7.204372,5.305269,-9.735625,4.982783,4.223973,-0.717476,3.169162,-4.070429,-0.606333,-3.442035,-0.446673,2.745558,-4.528554,-0.016796,-7.193142,1.095805,-6.332451,-7.485567,1.268439,-6.046069,2.600958,-3.957674,0.550982,7.377503,-6.609036,0.058784,0.453233,-6.401166,-7.146925,-5.598964,-9.436378,-9.598497,-1.461739,5.851053,9.721285,-3.900488,-5.279248,7.053415,-5.727619,-6.286745,-5.423664,5.041272,-5.583416,8.674097,-1.808337,0.121765,-4.819119,7.591587,5.227932,-1.703491,3.994409,6.448812,3.748026,5.899681,5.672996,-9.025016,9.115866,-6.481515,2.169916,2.407633,2.372498,9.243767,-2.816138,-7.244437,5.570047,-2.151320,4.700984,9.471032,-0.292059,-4.676521,-9.089644,-6.121677,-3.160160,5.527221,-7.544687,4.299625,0.448911,8.115851,-5.864561,5.375831,-8.511417,-5.406472,1.113876,3.802236,-2.490644,-4.052387,-3.988726,-1.912437,8.695045,1.585142,-2.729725,6.057010,1.466242,-6.696896,-5.014732,5.039500,4.793656,-3.344243,5.883824,9.765190,-6.079511,-5.063533,-8.641794,5.815610,-4.014413,1.403990,-5.853982,2.854620,-6.508475,3.886605,7.887738,0.270623,-3.439539,-1.382946,3.187318,4.585440,6.066054,6.449535,-4.038649,1.687869,8.307264,-8.899803,9.654864,8.579420,2.524590,-9.661617,2.056168,5.788895,7.521589,-7.409581,5.512877,-8.420794,6.018229,-3.697889,2.121563,3.131728,8.557871,-4.002156,2.598854,-2.137335,-0.001598,5.351655,-7.354301,8.794588,-1.435475,1.965635,8.697785,-8.090553,4.108409,-2.297424,-8.402880,5.665693,1.495402,-2.424915,4.569806,8.133549,3.642215,6.228081,-8.571623,-1.443817,-5.270847,-6.823409,3.427247,6.864130,-8.522049,5.702646,9.933628,-8.800026,-5.197355,8.226985,9.300562,0.845802,6.763274,-1.418604,7.247978,3.447279,-4.683115,0.476935,-0.480954,-3.345639,8.676977,-3.241825,-8.471895,8.821913,0.267226,-4.013895,-5.513984,-1.361735,7.147045,0.092928,4.691170,-9.449023,-1.979235,3.353915,-1.402533,7.996973,-4.425761,-6.996776,-5.316957,4.795194,-3.532340,-3.150677,-8.510700,2.726450,-0.886277,-1.065629,0.141758,2.573625,2.422681,-2.741550,4.353811,6.594414,7.573265,-7.464457,9.612350,-2.983780,-0.120230,-5.916415,6.066523,-3.047317,-4.125818,6.792319,4.699574,-9.091078,0.538060,9.676357,-1.522655,-6.648204,-7.639898,-7.104447,3.723995,-8.869812,2.931555,-3.722756,-8.555431,-5.525209,0.724518,-7.004854,0.283402,7.726910,4.110940,6.328879,9.968091,-0.969170,-5.107653,-2.672282,8.534965,3.032213,0.556942,4.845054,-4.302592,5.534403,2.762706,8.978523,-4.223403,4.117675,2.472303,2.974713,1.431482,-0.159026,-0.248102,1.153207,0.825406,9.126063,-2.829922,-0.535994,-6.083146,-3.690952,4.044954,-6.441601,9.129850,-4.224352,-8.688182,9.894058,1.937926,-7.964911,-2.596932,9.777625,-1.088863,9.335307,1.399659,-7.880176,9.734100,5.625904,-6.181495,-5.856961,7.569199,-0.833065,-0.015849,6.155208,1.290593,-3.800801,3.423354,-2.870142,-5.707825,-2.952229,6.854510,7.966624,-1.250694,-5.655402,1.004879,-9.036340,0.108863,-0.249436,-4.031290,0.961868,4.891087,-6.673977,9.396508,2.910151,-1.255855,5.281742,-2.628571,-0.657295,8.329397,9.155820,3.240231,8.437884,-9.822196,-0.580020,-7.456058,-0.154719,0.579093,-3.273438,5.728894,-3.735442,-1.987447,-1.173717,1.298246,8.422435,9.582653,1.220959,-6.668578,6.170644,-9.241108,0.157829,5.531777,4.916988,-7.692401,5.501418,4.177934,9.376588,1.992554,-6.863997,-2.832594,6.287123,-9.923174,-3.460103,2.154791,8.667302,-5.813449,-6.860497,-3.829400,-6.048078,-5.364640,4.391014,-6.786106,2.323540,-8.647348,-6.027348,0.457420,-5.774340,-4.298317,-8.255436,-2.196673,0.505521,-8.875056,-1.571572,8.572393,-6.981132,-3.023042,1.927712,-4.201249,-8.791338,-0.166294,-1.457632,-4.108034,2.838047,7.728931,-1.974157,2.812082,-8.341023,-9.572081,9.347812,-6.130932,0.788222,7.474474,5.175571,4.586111,-0.022605,-3.062833,8.078433,7.325949,7.691020,-9.845072,-8.877075,5.602045,6.040542,6.543968,-8.960979,-8.021406,-5.300093,-0.871955,-6.599222,3.599315,-8.591249,2.383127,-0.998067,-6.514495,7.139868,5.407836,8.472479,3.183462,-5.146594,3.914618,-0.307254,-1.878525,1.879213,-1.300226,-5.385181,-5.096203,8.519878,-3.552849,-8.565587,0.245431,4.021690,2.742523,8.131719,-7.783638,6.159178,-2.377682,4.162962,-8.730792,-1.654076,-1.586994,-3.107885,7.782137,-9.256372,3.834014,-4.748892,7.031744,9.151504,-0.942119,8.149528,9.781807,-0.118142,-1.707566,-4.345517,-5.142607,7.775500,-4.811363,2.709805,3.764856,0.121127,-9.145249,5.641250,-2.996162,-1.651496,6.123621,5.011239,-6.602939,5.331879,6.797326,1.483848,-8.037970,7.037964,-0.875912,-2.977176,-9.058354,-1.752665,1.400096,-5.739727,6.493023,7.300737,-3.556073,7.537728,-1.528856,5.340642,-5.855105,-8.934576,6.035326]], dtype = "float64")#candidate|5153|(1, 540)|const|float64
const_5154 = relay.const([8.101681,-0.199394,-2.019069,6.954545,4.237042,0.395371,-7.873356,4.742421,3.883992,-8.231238,3.528260,7.430513,6.411376,3.915956,5.890417,-6.348645,9.191413,-8.652814,-3.559640,-0.424675,-2.045172,-5.609581,-6.178942,-2.686287,-8.458653,-9.287772,-4.165308,5.366979,6.273667,-7.604641,-9.749359,5.594669,2.613361,9.339835,-8.555669,1.881059,-7.936735,4.862982,2.134858,-4.463119,-4.262201,-4.701424,-0.142070,-9.505694,-0.153416,-9.133026,6.778136,-0.604785,-0.322488,-8.460875,-1.578125,1.118056,-0.203348,3.803360,8.446220,7.381258,-0.374695,-1.393005,0.266493,-9.520400,5.447178,-2.791521,8.964728,-6.461955,5.341635,-1.875529,-0.952504,-6.477256,-5.817381,0.540173,9.744047,9.564803,-7.285863,-3.610147,-2.644364,4.938923,-8.609703,-7.906138,7.593767,7.620348,2.467907,-1.286370,9.655517,-1.321322,-0.388373,4.381738,-4.758363,8.494728,-6.824008,-7.327817,7.374137,2.141645,-0.049117,0.609521,-6.943015,-7.303414,-6.683433,8.742741,6.939148,7.260940,8.320975,2.097979,0.828472,-5.568693,-2.287707,-2.930402,9.011866,3.469400,9.531303,9.896502,9.815660,3.631118,-1.310583,-3.669963,4.824422,5.366322,-0.679560,-4.042193,6.631758,-2.481793,-9.877604,7.344625,-4.548230,0.815844,5.190062,8.236255,-7.771034,-8.966830,6.378046,-3.135316,-5.485763,-0.243227,-7.481326,-6.173690,1.436227,0.572555,6.164628,4.318037,-2.675891,2.662077,5.329988,-9.312461,-6.635188,-1.906787,6.345616,-1.487462,-6.620128,7.411424,3.301543,0.038417,-4.891057,-3.568472,4.184440,0.354796,-1.952101,-6.742618,0.651152,1.841220,6.059510,5.463179,-8.264617,4.782275,-2.648353,5.642620,-1.482089,7.379068,-9.445454,8.740745,4.015836,9.027879,5.854534,-2.698490,-0.853908,-0.900560,6.122122,7.928536,2.197433,6.124127,5.810768,-8.780988,3.503424,-8.683377,9.092682,8.797911,-1.319471,7.456811,-0.468813,-5.186607,2.197219,3.457141,-4.352223,1.983522,8.901699,-5.051711,1.473281,-9.642228,-8.508055,-7.838575,-2.166916,-3.849669,-5.926969,0.271371,9.188714,-2.724103,-8.145736,-8.343117,-1.737472,2.918108,-2.572787,-5.236630,-2.614938,-0.168054,6.553669,-6.131650,-3.102333,-5.260945,-6.584054,-7.351023,4.361673,7.144337,-6.549487,-3.581952,7.066255,-5.691194,4.079987,9.967732,5.486659,-9.060943,3.575576,8.483747,-7.445923,-8.375540,8.984613,-3.502430,2.203732,-1.719584,7.714568,-2.730784,-7.514599,-9.391321,9.487752,1.840124,2.753672,7.922241,7.062373,7.630009,-5.332347,-9.130237,-3.692947,-2.875611,-8.440894,3.468072,-0.754090,-4.601593,-7.988901,-6.877871,0.153876,-1.694975,-1.757571,6.629168,-2.852378,7.308228,-8.111055,-5.691883,-8.109548,2.006789,-9.021526,6.730429,-3.921784,5.796094,-7.978658,2.270441,-1.244523,9.057205,7.816867,-2.440326,1.718864,8.173963,4.689391,-3.430732,-2.285796,8.210105,-2.177855,3.508640,-8.728189,2.803588,7.527245,-9.295547,-4.282237,-9.758064,-9.411953,-6.637806,-5.172420,-6.585216,3.954574,9.441810,-4.733111,-2.779633,8.830573,4.417813,3.660072,5.503089,5.645069,-0.482863,0.695811,-7.983279,0.500434,1.714944,-8.307587,3.770942,-2.611821,9.054404,9.246365,9.089929,-4.586204,5.946090,2.838905,-1.854958,-2.139936,-8.497000,6.578091,-7.187810,2.968889,-5.375229,0.376797,-5.105654,-0.619359,-8.733708,8.659403,2.659522,-1.459973,4.726487,7.900214,4.997458,-7.482363,6.967218,-2.752942,-4.877734,8.813434,4.147392,8.443573,-4.854566,0.518060,5.389765,-0.277718,-9.854456,6.642878,-5.516851,7.687648,2.562982,6.381349,5.391895,-6.480321,-8.096214,-9.147850,-0.469481,3.193814,-2.485638,2.560559,7.873850,-3.129561,-3.532372,-1.038845,-8.220056,-3.132769,6.362873,-5.899564,5.626861,1.181287,-8.693051,2.771524,6.106719,3.988784,-1.483692,4.732774,-8.602395,4.780704,-0.526855,6.200593,-9.170497,-5.015141,1.482895,-3.333625,1.870838,-2.250560,-1.336952,-6.150643,-8.890282,9.779819,-3.699922,1.231529,-2.679480,6.116537,-9.437460,9.079480,2.988774,-3.713973,-8.764388,8.396009,-5.321609,9.551327,-9.297079,-3.179981,2.609599,2.456323,8.393322,-2.781176,4.828204,-9.840258,-5.377392,-0.881437,6.589820,-2.357722,-3.432739,0.160568,-7.794163,5.912292,-4.425814,4.340261,7.506857,4.935821,1.905227,-1.741704,5.276503,-2.960402,-7.772202,6.289029,-3.653273,3.007050,-2.784493,1.580414,8.262147,0.021822,9.498671,9.368165,3.977588,4.572687,-8.320089,3.293990,-7.994779,6.576097,4.253799,-2.024916,-3.322186,-3.607063,-2.696077,1.210778,-0.337448,8.626914,-8.866054,-7.996347,8.422752,-8.814814,1.744371,0.268540,-8.812373,-3.814773,-0.774533,0.389395,-4.488161,3.296001,0.516751,-1.228727,2.372767,7.048557,-6.722824,3.872397,2.515696,1.214600,0.638925,-4.434644,5.407386,5.099621,6.378627,-0.430588,-7.201266,-2.152188,0.985894,3.413378,-2.143663,-0.838261,-5.300943,-2.476759,4.913800,-0.300891,4.077268,-0.002281,9.412679,-3.689629,-8.906461,-9.834062,-2.779979,4.445307,3.224812,-6.635024,7.893070,-8.249402,-2.382114,-5.620518,-0.497196,-1.579128,0.270456,-4.265236,5.159277,-8.624972,-2.139934,-4.573555,7.004731,-7.700524,0.232868,5.872136,8.921898,-6.079620,-4.341295,2.922784,-8.231266,-2.015784,5.864531,-9.031539,7.281169,-6.528253,-8.451744,-0.872448,-3.791869,-0.143739,9.782515,5.930897,-5.999302,-1.116920,-7.315733,9.040817,-7.469592,-0.846132,5.074018,-1.411156,9.344025,-2.564779,7.619914,-2.436360,7.015055,4.697017,-1.083251,9.845474,5.423781,1.671053,0.378791,-6.358775,3.591903,3.867840,1.359629,7.552069,8.136418,-0.471268,4.735279,-7.644148,-7.445179,1.653237,-6.124863,0.944439,4.980508,2.776094,3.137918,-4.668306,6.965775,4.249083,9.887185,4.441344,-6.624048,7.541267,-4.948373,-7.259263,-4.389647,7.398789,-6.694396,-6.931193,-4.161946,0.018608,6.736130,-3.766520,2.233472,1.412588,-5.161723,9.963149,7.951108,-6.191795,3.516085,-3.994815,4.735721,-6.798485,-2.492278,6.240417,0.648729,-7.167615,-9.124995,9.810452,7.165023,-3.527457,4.481424,-6.038700,-0.947053,3.456818,-6.175983,1.035302,2.356394,3.791864,-3.859240,-9.837302,2.627973,-8.615248,9.087101,-5.034001,3.695547,5.770888,-5.635861,8.256700,-7.971637,-7.304335,-1.645381,-5.011053,-4.977149,7.757554,-7.079881,-4.710649,-8.582618,3.545648,-8.584315,-1.955993,-5.511514,-5.046369,-5.099742,-7.038567,-8.019151,8.338117,-4.539473,4.648390,9.961520,-2.222611,-0.085036,-7.918450,1.021655,3.325830,8.819686,1.131455,5.581957,-4.429850,6.011283,-5.019872,-3.287665,-0.345832,-0.738954,5.372337,-0.178712,4.656024,-5.150832,-7.976723,-4.742259,5.536346,1.540229,6.321716,-5.101134,-3.511612,-4.727067,-4.526394,-1.782208,-2.609479,-5.376320,9.031064,7.848090,2.166265,-1.276689,8.015954,2.783396,-8.790275,-4.281143,0.796242,3.260517,-0.904502,3.056204,-6.822196,-6.324025,-0.746106,-3.928139,5.302626,-1.117447,3.687948,-9.267351,5.660541,0.116922,9.349883,-0.880916,5.653901,-5.010184,6.188363,-1.275435,-7.875355,-8.810871,0.093904,-2.482060,-8.439334,0.488111,7.950700,3.433711,-8.019993,-5.154093,-5.586539,-7.262885,-0.723744,1.535925,-3.724809,-9.545622,-4.361010,7.070783,4.899242,4.036787,8.628772,-8.937631,-5.566694,9.162482,-1.556907,-3.966387,-0.603737,-0.284365,-6.313847,4.362917,7.290301,6.743720,-6.540557,6.672349,-1.078488,-2.436903,-6.846280,-5.795299,-5.549114,1.144737,5.776117,5.612317,-8.663533,-0.808516,1.885431,-9.653127,6.321227,5.752038,-8.213613,-2.994926,3.906664,-4.787091,1.442359,-7.676380,0.504111,-7.707425,-9.590769,-3.691873,-5.918105,8.347765,-2.620363,-1.025361,2.216015,-7.464123,4.175178,-6.811020,1.707878,-1.143685,5.752203,-3.581549,-6.408808,0.925527,-2.094681,3.097759,-9.194744,-9.105263,-8.424283,2.481831,-8.094706,-5.146140,-8.038364,-4.664949,1.314712,-2.974473,-1.509626,8.423294,6.840719,6.317325,2.881447,-1.730037], dtype = "float32")#candidate|5154|(784,)|const|float32
const_5155 = relay.const([[7.456166,1.418317,-5.258747,-4.934035],[7.867034,7.170349,-7.032541,-1.205025],[-3.862556,-4.825708,0.095881,-9.719185],[2.697028,9.319668,-5.137848,7.202570],[-5.090750,2.491638,-2.792375,-4.456000],[6.524023,6.772131,7.859154,-4.673997],[-0.219881,5.008156,-2.005616,6.639196],[7.119963,2.388414,-7.376428,7.717268],[-4.332923,1.442652,-0.740710,-7.398296],[8.315308,6.720952,-8.954213,-2.979363],[-6.122432,-0.524670,-6.453380,-1.940816],[-0.079576,1.024365,4.513813,-8.297807],[0.647241,-6.438441,6.909216,2.383120],[3.778426,3.827442,-5.842569,-7.974020],[3.031736,7.001485,-7.933325,7.382269],[-7.158686,-2.639708,0.904609,9.011644],[-5.457220,-6.115244,-2.744272,0.106582],[-9.116738,6.486594,-7.780525,2.126976],[4.145324,6.085736,-6.406653,-7.239671],[3.515130,-6.454597,7.408566,2.475893],[-7.500908,4.199368,-1.932320,-3.988609],[8.574693,7.099903,3.388995,9.615861],[-6.779892,-6.856353,5.006721,1.344291],[2.497466,0.462548,1.341524,9.356228],[-2.836349,-4.128375,3.161483,8.377035],[6.814936,-3.672973,0.520777,7.427102],[9.134885,0.779779,-0.326758,2.260101],[-0.394060,5.338705,-4.791975,6.850599],[1.871229,6.293842,-9.850483,-8.637185],[4.106667,-5.207524,-8.889274,-8.548846],[-2.161532,1.104126,-8.827102,-4.221879],[5.799756,-3.808646,-8.901627,9.086077],[-6.632400,-6.569500,1.731441,-7.439998],[-7.588091,-4.545100,-4.274020,-5.059256],[-1.713546,5.308599,-8.311747,1.881434],[2.033338,1.019944,-6.882867,-2.351563],[3.481818,4.373594,2.592743,-0.201815],[4.681521,-0.736646,2.067226,-1.697233],[-1.192457,8.292122,9.061751,7.828871],[-0.466118,6.628505,3.916491,5.268222],[-1.916732,0.402723,-7.168973,1.971213],[-7.466458,7.559639,-5.334463,4.023631],[-4.529334,-6.810256,-6.529377,-8.001639],[-3.904911,5.401782,6.190546,9.500136],[2.465334,4.856890,-1.062059,4.837540],[1.743619,-5.016651,-9.456191,-4.826165],[-5.927876,3.098317,-5.112208,-4.466688],[1.033003,-3.134694,-9.004534,-1.150886],[1.358315,-9.601124,0.594256,-3.038173],[-6.918660,-0.064651,8.799874,9.282708],[5.107150,-1.751550,4.501241,9.557499],[-5.187971,6.346429,5.049617,-4.265723],[-2.085723,-2.710593,1.541878,-1.519771],[6.050117,-2.831088,7.296269,3.661437],[-3.656030,6.227531,-2.087998,-2.561978],[-0.288909,2.252537,-6.074971,-7.148355],[-7.063450,-7.543810,-4.737808,-1.049193],[2.776729,-6.337422,-1.540243,-5.210885],[1.353066,-7.507997,-0.303454,-3.253158],[6.807431,-3.118454,7.844023,-4.694917],[7.182231,1.288568,0.873542,9.879307],[8.180466,6.509062,1.301675,-7.121801],[8.462192,-0.909145,-0.355708,5.011524],[6.499803,8.646418,-4.544622,-0.036299],[-0.952047,4.992164,8.204842,-0.790436],[-1.832047,0.379123,8.753590,-7.367389],[-9.850455,-1.868246,7.615358,-9.666608],[7.035201,-8.217878,9.911812,3.984568],[-4.033549,8.690648,-3.472869,-2.701056],[-1.677464,-9.628662,-3.937036,-1.842103],[-2.117528,2.021289,-2.856415,-2.981823],[0.242288,-7.965959,2.693698,-3.857374],[-5.826145,-0.205431,8.053185,-1.734743],[-7.781194,-4.758682,9.811251,0.968344],[4.228132,-4.866819,8.625879,-2.267981],[8.873380,8.917232,-5.778055,-3.572144],[-3.338619,3.412090,-8.480947,9.283687],[8.963759,7.439131,-7.157027,-9.094819],[7.249862,-5.261422,0.981020,5.080359],[5.276330,9.659949,-4.060870,-4.599199],[-6.924062,-3.495394,8.841093,5.726927],[0.075539,-8.388536,-0.433076,-3.263928],[7.370020,-6.222591,4.070181,0.536160],[-8.232539,-7.388318,-8.451673,2.736559],[9.472492,4.004868,7.837586,0.156618],[7.938871,2.092173,-9.746898,2.935991],[-6.748304,-1.335781,7.193156,-2.140221],[-8.163850,-7.986065,4.898558,-5.954200],[-6.852016,-9.223786,-9.825312,-1.257558],[5.573669,5.794653,3.745564,7.224064],[-5.475181,4.606796,4.574077,-7.978792],[9.810604,-4.040747,-8.053184,6.220163],[8.892764,9.415938,8.917635,6.537456],[6.853175,-3.898527,-0.074381,-2.829973],[3.780616,-6.509573,0.781600,-7.985508],[-3.530510,3.129812,8.597495,2.316302],[-6.781376,8.609350,-7.458385,-6.523678],[8.529630,8.648148,-6.568672,1.809447],[0.929144,-2.240731,-5.248020,8.876425],[-5.200811,8.762880,2.707502,-7.379652],[8.585339,0.822417,-9.845902,7.453523],[-4.770996,5.102673,-0.064354,-4.939758],[5.979043,-9.236706,-7.485888,-8.501336],[8.787596,-3.822566,-9.022209,-8.499981],[-8.488866,4.337286,-3.885539,4.351190],[9.388329,7.113284,0.273110,-1.330675],[7.119705,-7.794861,-4.644488,-1.611200],[-5.463915,2.041784,7.400406,1.529393],[7.406496,-9.682795,9.267089,2.681890],[4.186672,5.642090,-1.849384,5.040891],[-1.759883,4.476187,-7.567605,-4.492672],[9.059999,8.846102,-4.547664,-3.091717],[0.545064,0.895057,-2.385079,-5.355666],[7.052993,-5.947051,6.572242,8.285291],[3.224031,-2.929446,-6.036257,6.063076],[-7.671443,-7.986770,8.467196,6.470179],[-3.325600,3.813765,5.117749,-5.481199],[3.355391,-8.100162,-5.115915,2.792670],[0.037503,1.194775,-5.811411,0.334494],[1.925645,3.364834,-7.660876,4.841604]], dtype = "float32")#candidate|5155|(120, 4)|const|float32
call_5150 = relay.TupleGetItem(func_2148_call(relay.reshape(const_5151.astype('float32'), [4, 14, 4]), relay.reshape(var_5152.astype('float64'), [1, 720]), relay.reshape(const_5153.astype('float64'), [540,]), relay.reshape(const_5154.astype('float32'), [4, 196]), relay.reshape(const_5155.astype('float32'), [40, 12]), ), 4)
call_5156 = relay.TupleGetItem(func_2154_call(relay.reshape(const_5151.astype('float32'), [4, 14, 4]), relay.reshape(var_5152.astype('float64'), [1, 720]), relay.reshape(const_5153.astype('float64'), [540,]), relay.reshape(const_5154.astype('float32'), [4, 196]), relay.reshape(const_5155.astype('float32'), [40, 12]), ), 4)
output = relay.Tuple([call_5130,call_5148,call_5150,const_5151,var_5152,const_5153,const_5154,const_5155,])
output2 = relay.Tuple([call_5131,call_5149,call_5156,const_5151,var_5152,const_5153,const_5154,const_5155,])
func_5171 = relay.Function([var_5152,], output)
mod['func_5171'] = func_5171
mod = relay.transform.InferType()(mod)
var_5172 = relay.var("var_5172", dtype = "float64", shape = (720,))#candidate|5172|(720,)|var|float64
output = func_5171(var_5172)
func_5173 = relay.Function([var_5172], output)
mutated_mod['func_5173'] = func_5173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5226 = relay.var("var_5226", dtype = "float64", shape = (14, 14, 11))#candidate|5226|(14, 14, 11)|var|float64
uop_5227 = relay.exp(var_5226.astype('float64')) # shape=(14, 14, 11)
func_5056_call = mod.get_global_var('func_5056')
func_5059_call = mutated_mod.get_global_var('func_5059')
var_5231 = relay.var("var_5231", dtype = "int32", shape = (256,))#candidate|5231|(256,)|var|int32
const_5232 = relay.const(-5, dtype = "int32")#candidate|5232|()|const|int32
call_5230 = relay.TupleGetItem(func_5056_call(relay.reshape(var_5231.astype('int32'), [8, 8, 4]), relay.reshape(const_5232.astype('int32'), []), ), 5)
call_5233 = relay.TupleGetItem(func_5059_call(relay.reshape(var_5231.astype('int32'), [8, 8, 4]), relay.reshape(const_5232.astype('int32'), []), ), 5)
output = relay.Tuple([uop_5227,call_5230,var_5231,const_5232,])
output2 = relay.Tuple([uop_5227,call_5233,var_5231,const_5232,])
func_5240 = relay.Function([var_5226,var_5231,], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
var_5241 = relay.var("var_5241", dtype = "float64", shape = (14, 14, 11))#candidate|5241|(14, 14, 11)|var|float64
var_5242 = relay.var("var_5242", dtype = "int32", shape = (256,))#candidate|5242|(256,)|var|int32
output = func_5240(var_5241,var_5242,)
func_5243 = relay.Function([var_5241,var_5242,], output)
mutated_mod['func_5243'] = func_5243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_5295 = func_4336_call()
call_5296 = func_4336_call()
func_3654_call = mod.get_global_var('func_3654')
func_3656_call = mutated_mod.get_global_var('func_3656')
call_5300 = relay.TupleGetItem(func_3654_call(relay.reshape(call_5295.astype('bool'), [11, 11, 6])), 0)
call_5301 = relay.TupleGetItem(func_3656_call(relay.reshape(call_5295.astype('bool'), [11, 11, 6])), 0)
output = relay.Tuple([call_5295,call_5300,])
output2 = relay.Tuple([call_5296,call_5301,])
func_5306 = relay.Function([], output)
mod['func_5306'] = func_5306
mod = relay.transform.InferType()(mod)
output = func_5306()
func_5307 = relay.Function([], output)
mutated_mod['func_5307'] = func_5307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4404_call = mod.get_global_var('func_4404')
func_4405_call = mutated_mod.get_global_var('func_4405')
call_5384 = relay.TupleGetItem(func_4404_call(), 2)
call_5385 = relay.TupleGetItem(func_4405_call(), 2)
output = call_5384
output2 = call_5385
func_5420 = relay.Function([], output)
mod['func_5420'] = func_5420
mod = relay.transform.InferType()(mod)
output = func_5420()
func_5421 = relay.Function([], output)
mutated_mod['func_5421'] = func_5421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4756_call = mod.get_global_var('func_4756')
func_4757_call = mutated_mod.get_global_var('func_4757')
call_5447 = func_4756_call()
call_5448 = func_4756_call()
output = call_5447
output2 = call_5448
func_5449 = relay.Function([], output)
mod['func_5449'] = func_5449
mod = relay.transform.InferType()(mod)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mutated_mod.get_global_var('func_5449')
call_5450 = func_5449_call()
output = call_5450
func_5451 = relay.Function([], output)
mutated_mod['func_5451'] = func_5451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mod.get_global_var('func_4854')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_5505 = relay.TupleGetItem(func_4854_call(), 0)
call_5506 = relay.TupleGetItem(func_4856_call(), 0)
const_5517 = relay.const([[[-0.497258,2.623265,-1.280658,5.123449,-3.907729,2.514838],[4.644969,7.644016,-5.409829,5.797442,1.343915,-0.794113],[3.886098,-7.427350,-2.484418,-7.576970,-0.601879,5.040744],[-8.268152,-1.785262,1.207176,-1.007084,7.528610,3.387323],[4.355857,1.983781,-6.077598,-7.805016,-7.710024,8.671096],[-0.185095,5.233172,-2.818522,1.059831,5.929760,2.212192],[5.513017,9.958440,1.713318,8.921791,-4.507555,-5.923624],[-9.017636,-1.915103,3.560175,4.512013,3.510792,3.544638],[-6.645329,3.543157,-3.018660,-0.644168,-4.055736,-5.939735],[-9.287808,-2.022133,-5.176980,1.996291,0.900391,5.666829],[-5.498253,-8.283007,8.062418,1.717429,-6.866663,-8.296009]],[[6.235121,7.470361,-6.509356,-7.455241,5.915617,7.566286],[6.445021,-1.040232,4.352010,8.952728,-2.150220,6.298430],[9.893130,6.134274,5.252504,-8.221462,9.721215,-3.982661],[5.701472,-8.348263,-0.323540,-3.128178,6.140443,-2.237399],[-4.358326,-6.932902,-6.516136,4.785923,-0.460118,4.929611],[-3.953827,-2.517809,2.931086,4.712963,8.820832,0.761306],[-2.685762,9.888159,-3.981569,-6.027292,-3.249720,-6.418937],[-9.897190,-7.410494,-7.166713,1.143672,-6.352666,-0.712183],[-8.640172,-7.821610,-1.228934,2.060403,-2.271023,-1.330189],[9.167048,4.460251,7.730500,-6.290115,9.337911,-4.370119],[-8.319086,-6.747045,5.052423,0.801027,1.650120,-2.244278]],[[9.294883,-6.421676,-1.988978,9.290248,4.399078,0.366122],[-1.840491,-1.793451,1.212090,8.924708,-2.519427,-1.173604],[3.960431,-2.154534,6.665307,-8.707176,-0.548100,-5.237614],[3.765920,-9.620382,0.828285,9.972039,0.420262,8.672577],[-7.973745,4.139163,8.835698,-5.209054,0.414108,4.794870],[0.893433,1.023964,-3.809500,7.457156,2.550440,-8.742554],[8.092786,-5.600991,9.044159,1.527860,0.568703,8.709918],[-6.428403,7.592184,-6.817753,8.095662,-9.827965,7.948182],[-7.720706,-1.324692,0.990349,-9.448343,-6.027972,8.966636],[0.097146,8.169509,5.960295,2.418331,-3.980225,4.582836],[8.148641,1.497213,-1.764816,-8.906235,5.782335,-3.150773]],[[9.733115,1.174716,-8.647090,6.625269,-7.651619,-1.626369],[3.815393,8.815233,-8.772801,-6.564279,0.812409,0.826108],[1.604970,9.539837,-0.953717,7.715247,-5.907828,6.171622],[6.265789,-3.112084,1.231825,-4.816249,-6.197242,-5.799924],[-4.686006,-1.618216,-5.015593,5.994962,3.805296,-7.721365],[1.453083,4.537976,0.427981,-9.286109,-6.493326,-7.697053],[3.574188,-5.330556,-8.237437,-7.969014,-9.880429,9.475657],[-5.055113,-4.248257,6.125303,2.575619,-3.158574,-1.620930],[6.164268,-3.374689,-2.726549,8.498260,0.744568,9.302259],[-3.294202,6.828248,3.875330,-2.571126,2.225965,8.026678],[5.260975,4.480092,-5.385526,8.075553,-2.601982,7.170046]],[[-1.284791,-4.772099,-5.870616,-9.638812,3.791020,5.551172],[-9.957502,-3.205206,-1.736211,-1.368297,-1.304839,0.781911],[5.687671,-5.839874,6.675698,-9.929676,-1.624246,7.152232],[4.700304,-3.120112,0.464216,8.364310,2.890007,-5.691392],[2.416745,8.768789,-5.810339,-1.127582,-6.476359,-3.751544],[-1.410083,8.141571,3.937853,-0.772708,-6.736693,-1.291271],[-6.934571,6.430888,7.753895,-6.181659,-2.865397,9.849054],[-7.212552,6.621985,-2.437814,-4.485213,-3.659113,-9.460030],[9.158138,-4.984778,2.475701,3.844704,-1.560960,8.753916],[-7.069545,0.459420,9.375877,-6.857228,-1.285846,-7.146598],[8.947161,-4.672468,6.999082,6.372354,1.899369,-8.980453]],[[-2.524850,-1.644755,6.494994,6.033190,8.393704,-6.944931],[3.583208,0.679791,-2.948597,-6.627976,-4.349379,-8.762846],[8.259526,-8.146583,9.040897,6.035745,0.208767,9.542569],[0.350178,-9.713779,8.243060,-0.055040,8.603914,-6.971727],[4.957101,6.227673,0.785857,0.248510,-0.466377,8.334836],[4.505203,4.236574,8.234415,1.787704,6.111460,8.190237],[-2.161336,4.952171,3.745208,-1.290123,3.863845,8.655744],[3.760082,1.762383,-9.937612,2.188708,-9.723763,-9.993155],[9.044566,-9.625567,-8.541032,3.937072,6.041607,-7.627241],[9.419665,-9.664491,9.507795,5.293306,-2.400309,-5.237581],[-8.960456,-7.057244,-5.849760,-7.579087,-5.777097,2.577622]],[[-4.569408,-0.750333,1.564634,4.727497,2.763618,7.252856],[5.088492,4.818156,-3.068894,-1.768811,5.957009,4.833715],[-4.080853,-9.207290,-1.598031,5.393729,-7.240914,5.091575],[-2.902329,-2.465231,-0.686588,-3.466852,6.411596,9.885804],[0.034233,-1.825218,8.978495,8.436753,2.895690,-1.147877],[0.259059,-9.872394,5.100606,7.870289,-2.228418,4.770636],[-2.045812,-2.783216,1.928409,7.094727,-7.707883,-9.874661],[7.468350,2.684863,9.129086,-7.263415,0.330780,-9.258545],[-8.219901,-3.581723,-8.135082,9.155938,-1.763182,-8.252956],[-7.889834,-2.873981,1.920237,-9.800334,-2.726317,9.184984],[6.165602,-5.749631,-8.768854,-8.870780,4.013621,-6.337222]],[[-4.156260,-7.583626,6.213942,9.590910,-1.012600,-7.446499],[-6.284795,-7.810671,-1.672536,-3.367034,5.303309,-4.949119],[6.234104,7.010617,-5.417770,-9.764211,0.353704,7.464877],[6.162404,-6.464573,-5.461753,6.421858,4.964397,-9.874939],[1.838317,-3.709033,3.615110,1.570982,6.894264,5.008989],[-4.549416,-5.331781,-2.554253,-4.939686,-2.576119,1.956561],[-1.615020,1.800165,-3.231974,9.254276,-5.198435,6.076663],[3.794951,9.471400,4.217659,-9.020714,-1.389347,1.878242],[-0.978473,1.104516,9.845887,9.566236,3.577231,6.341428],[-2.657968,-3.852026,-2.446064,2.900722,-3.629578,-2.052554],[3.675082,1.975778,-0.678563,7.721865,-0.720816,0.162043]],[[9.083532,6.996033,-3.931581,8.120750,-0.591122,8.609614],[1.391776,-2.932146,4.719734,9.658842,9.599338,4.181692],[3.706416,-3.566236,8.742813,4.294281,-0.576434,6.850625],[-1.210544,-0.072228,-5.788506,3.471616,-0.336417,5.932548],[9.397451,-9.763502,4.809535,-5.675680,-9.959561,1.843741],[-3.183721,2.851804,0.721643,4.807289,8.604118,-7.295429],[-7.126021,6.489928,7.585426,-5.703970,6.312416,7.344396],[-4.744903,2.678109,-9.469939,-4.384743,-4.269532,-4.046525],[7.643790,0.855010,3.340985,-8.419078,1.921706,-8.554136],[5.374311,4.305876,9.314795,7.864487,-6.365145,8.259735],[5.374718,-3.900675,1.771682,-7.715037,-7.243540,0.467210]],[[9.218088,6.583313,5.366071,-0.874912,8.932058,2.580814],[-7.791556,-7.897413,8.835036,-6.568006,-1.987666,-6.386540],[2.756886,-9.190531,-6.173024,4.255973,9.849371,7.258095],[-5.617024,1.398638,8.684262,-4.233078,-6.834265,1.982151],[-6.353512,-2.335403,-3.126743,-3.723445,3.112713,7.259998],[-3.153480,-8.901879,-5.614099,-3.991613,0.879846,-6.238354],[-1.277567,-4.285525,6.999150,9.009240,3.879814,-2.142571],[-7.638030,4.236681,1.317157,-3.714038,7.689256,-5.478349],[-8.949818,-3.381453,-3.063393,-1.464408,-1.832415,4.689070],[-9.892310,4.575675,8.376700,7.911483,0.279015,2.406325],[-9.484660,-2.781878,-3.617315,0.096048,-7.097988,-6.417138]],[[-7.597251,0.079511,-6.324809,-5.656548,6.570623,-0.004013],[-2.820257,3.609968,6.171001,-0.279901,-5.532858,1.379744],[6.216427,4.460894,9.522826,4.954263,-6.917017,-1.040342],[1.176723,-1.349959,-5.985568,7.992512,-2.385267,-4.376605],[-8.777202,4.915476,-0.957457,8.511367,4.961936,7.969441],[5.877507,-8.982508,9.806392,-1.565005,-2.304952,-2.253606],[1.922203,5.033096,-6.639510,3.532808,-5.316095,6.050639],[-4.345065,4.672828,4.284546,-7.192466,1.653961,-3.959396],[3.473042,1.051055,0.171788,-1.888766,-4.909600,0.753253],[-0.505463,1.436210,2.773797,8.551558,8.107534,-4.406154],[6.903705,0.736309,4.092652,2.808320,-4.474105,-2.837769]]], dtype = "float64")#candidate|5517|(11, 11, 6)|const|float64
bop_5518 = relay.greater_equal(call_5505.astype('bool'), relay.reshape(const_5517.astype('bool'), relay.shape_of(call_5505))) # shape=(11, 11, 6)
bop_5521 = relay.greater_equal(call_5506.astype('bool'), relay.reshape(const_5517.astype('bool'), relay.shape_of(call_5506))) # shape=(11, 11, 6)
func_2422_call = mod.get_global_var('func_2422')
func_2425_call = mutated_mod.get_global_var('func_2425')
var_5538 = relay.var("var_5538", dtype = "float32", shape = (1, 140))#candidate|5538|(1, 140)|var|float32
call_5537 = relay.TupleGetItem(func_2422_call(relay.reshape(var_5538.astype('float32'), [7, 5, 4])), 0)
call_5539 = relay.TupleGetItem(func_2425_call(relay.reshape(var_5538.astype('float32'), [7, 5, 4])), 0)
output = relay.Tuple([bop_5518,call_5537,var_5538,])
output2 = relay.Tuple([bop_5521,call_5539,var_5538,])
func_5541 = relay.Function([var_5538,], output)
mod['func_5541'] = func_5541
mod = relay.transform.InferType()(mod)
var_5542 = relay.var("var_5542", dtype = "float32", shape = (1, 140))#candidate|5542|(1, 140)|var|float32
output = func_5541(var_5542)
func_5543 = relay.Function([var_5542], output)
mutated_mod['func_5543'] = func_5543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_5550 = relay.TupleGetItem(func_4993_call(), 0)
call_5551 = relay.TupleGetItem(func_4995_call(), 0)
func_4786_call = mod.get_global_var('func_4786')
func_4788_call = mutated_mod.get_global_var('func_4788')
call_5558 = relay.TupleGetItem(func_4786_call(), 0)
call_5559 = relay.TupleGetItem(func_4788_call(), 0)
func_3654_call = mod.get_global_var('func_3654')
func_3656_call = mutated_mod.get_global_var('func_3656')
call_5562 = relay.TupleGetItem(func_3654_call(relay.reshape(call_5558.astype('bool'), [11, 11, 6])), 0)
call_5563 = relay.TupleGetItem(func_3656_call(relay.reshape(call_5558.astype('bool'), [11, 11, 6])), 0)
func_5171_call = mod.get_global_var('func_5171')
func_5173_call = mutated_mod.get_global_var('func_5173')
const_5566 = relay.const([6.132286,-9.857657,-0.776745,-3.182807,-7.909700,7.558927,-6.240427,-8.642738,0.711565,-6.529432,-9.749279,3.537157,-6.112414,-3.342171,4.771144,-2.786950,8.207003,3.056858,-2.775356,4.882578,-4.705238,9.851473,1.467753,-2.624146,-2.215696,2.211142,-2.169731,0.590171,1.809721,-8.663557,5.816780,2.446658,5.791143,4.100285,-8.913436,-8.421478,5.188389,7.377933,1.855456,0.975022,7.556950,4.371569,5.513398,-9.938976,-1.596347,-8.502813,6.920886,-2.937380,-0.625018,-5.838067,-7.711967,4.466352,7.977280,6.221983,5.982174,-5.801903,5.408270,-9.715203,-3.392789,-1.688229,0.375188,4.257901,-7.855542,4.345088,0.732946,-5.788894,0.349613,9.414660,-1.827223,1.688285,6.146500,-8.479886,0.554195,8.804228,6.524943,2.752360,-5.278878,-6.440207,-5.894072,-8.855934,9.743490,-2.412206,-6.821113,4.159581,-8.424430,-6.319518,4.909976,-7.266701,5.165366,-3.372432,1.811178,8.481042,-6.345090,3.072398,-7.605385,-4.515265,-8.076079,-5.768186,-0.865739,2.301771,-7.431491,-9.265066,8.583354,2.214070,7.662138,6.430130,0.094803,-1.229645,-1.920807,-4.292989,5.494362,4.068445,1.130313,3.760769,6.930351,-2.250394,-3.495841,7.029366,-5.511837,9.864893,1.209395,-7.770302,2.028456,-8.254990,-9.051725,-6.668502,-9.766471,9.110612,4.325187,6.196924,-2.976929,0.658539,6.003554,-2.244093,4.190306,3.546845,-2.633323,9.101697,-8.099504,-9.173076,-6.184203,3.591596,-0.926280,5.746292,9.035893,-8.347597,-2.458974,-8.200014,6.163584,3.254949,-9.568306,6.178027,6.997091,6.134962,-2.561528,-8.214009,-9.533839,3.831014,2.935989,1.933582,-9.229133,-7.785051,8.290834,-2.254821,7.324020,8.851893,-7.209957,-2.512677,5.557358,6.509202,3.556078,-3.322958,6.671539,-4.166931,-3.885690,3.040187,-0.726282,-9.686348,6.550165,-4.449659,-7.551420,-2.756099,-6.810840,-5.659217,-0.186794,1.699876,-7.352261,-8.070874,-0.497253,-7.284007,-2.761436,1.682163,6.597629,-9.296822,-6.725784,3.888162,-9.745953,8.697026,-9.887084,-4.015417,2.455888,4.780939,1.442648,-0.946016,-5.240701,8.224708,-6.947606,9.723936,-0.015907,-2.327554,-4.130797,1.095334,-7.295798,9.179335,6.762892,9.182165,-4.020730,-8.402267,-2.812855,5.776498,0.980583,1.444895,5.227914,5.180350,-8.962735,-5.772490,9.311404,4.998561,-8.837935,-1.299700,-3.955496,-1.014146,-2.722804,4.471671,9.393627,-4.758548,0.416174,9.642441,-7.581971,-6.072012,-6.014276,-6.234248,-1.443905,8.861027,-7.326698,-8.543906,-2.825979,7.642872,2.607158,0.292128,5.561665,6.712160,-5.185555,4.090786,7.185857,1.493991,-6.337330,2.759946,-5.135939,8.010596,0.208582,3.551724,6.099413,-1.645654,1.283826,8.464522,3.767522,0.326182,9.620439,6.048674,-7.641491,0.763579,-0.920474,-6.680140,1.201406,2.543592,4.137934,-8.976417,-9.385045,-0.591214,7.460364,-5.779605,-6.486469,-9.806524,5.424306,6.806779,-6.971697,-7.585478,9.298639,8.620822,1.227287,1.583815,-3.967243,8.275076,4.481206,-1.278741,0.755325,9.999135,7.245022,-6.457022,4.191116,-3.235224,-7.552902,-0.191597,7.339845,-0.757264,0.137601,-1.378334,-9.129125,-3.234648,8.203240,-7.882798,2.850711,-6.201542,8.275035,1.066796,-5.782600,-7.927361,2.401998,6.275090,9.711856,6.265971,3.838555,-6.892399,7.177432,9.037020,0.616262,6.662612,-7.883957,5.983325,-8.940422,-8.421490,1.074350,6.393860,-4.317089,4.083766,3.454214,-6.068323,-6.068647,-0.467111,1.092868,-8.841227,4.734656,9.684633,-3.930935,9.782438,-1.561315,0.955435,-3.530643,-0.340759,1.628458,-1.467509,-7.815131,-3.654712,1.091890,-4.182435,-7.007087,-0.429396,-9.041883,9.927145,-8.090052,-9.497375,4.980345,-0.709002,-6.325337,-4.610780,2.579419,-6.169954,2.682376,-3.073118,8.837788,7.250532,-2.805122,0.035837,3.655321,4.133243,3.270452,-1.263805,8.632097,4.242611,4.447958,-6.495988,-6.707068,-3.642903,9.551226,5.578037,7.461860,-3.623176,-0.461622,0.529939,7.189711,8.824618,-3.536027,0.575345,9.415081,1.862922,-4.404773,7.404548,5.232274,-3.179605,-1.811670,3.513621,-0.665553,4.486875,-3.305390,-4.519921,1.192195,-7.957063,-1.420585,-0.007544,-7.714383,-0.592685,1.093249,-8.258352,-3.318198,4.618360,-8.671540,-5.642580,-4.242734,7.710778,-2.978363,-2.464970,6.499424,0.305383,-1.683332,7.212109,-2.608276,2.062883,9.052088,-4.165892,-3.529441,1.414705,-9.219256,3.856691,7.052383,3.196960,1.395430,-6.567634,8.747529,-5.455837,8.875701,-5.699196,6.345386,1.789183,6.622577,-0.500178,4.229357,-3.330795,-1.417009,-4.504901,-4.026409,2.754099,-7.540481,0.049317,-9.522706,8.474756,9.382246,5.248209,-0.197552,-2.435653,-4.603463,3.848967,-9.521116,4.863585,-0.977672,-5.398961,-7.173292,-8.155075,5.520950,-3.123635,2.777299,1.650041,8.278975,9.300564,9.602438,-0.915064,6.531916,5.464785,3.508933,-8.778243,2.597477,8.675723,-3.568149,-6.221262,1.988431,5.134798,-7.701588,9.962005,8.543344,1.079390,-7.616400,-0.066809,-3.565057,2.990553,6.388696,3.197258,7.376993,-0.406047,-5.104972,8.556415,0.975752,-9.030851,-0.402146,7.522166,-1.313223,-8.469914,-6.983245,-5.394044,2.030830,3.897034,7.654937,9.439607,1.080787,6.632986,-7.856187,0.692868,5.433866,9.558599,6.034930,-7.317374,-7.384772,6.674716,3.492990,0.137214,8.869215,0.859449,1.065913,9.161371,-6.861924,-6.295345,-7.981977,-4.451294,8.642460,7.339348,3.394481,-4.164632,-4.325453,-6.768485,-2.993391,-5.893828,-9.036986,-9.564808,-4.073362,-2.381772,-5.353121,8.387770,-3.533333,5.765043,-9.495350,1.362307,-1.365665,4.607994,6.305476,-7.810668,4.023738,6.320516,4.102629,5.255838,-1.303756,-8.462008,-9.675475,0.752771,-8.585919,-4.011438,9.551844,-4.022978,3.704986,-2.146101,1.297164,-1.180555,-5.459510,1.711616,-3.488176,3.359947,-9.512280,5.373452,-5.028084,-6.268095,5.472425,9.879334,-9.136226,-4.335153,1.654408,-9.663186,-4.506930,4.848286,-0.985187,-3.116700,8.865689,9.138018,5.995390,-4.014454,6.852301,-0.522728,4.955630,3.725088,9.022363,4.302184,2.463363,-3.247837,9.353640,-9.544959,-9.876269,-8.810256,-7.032441,9.807578,-3.902696,8.947609,-9.978869,2.695368,4.862578,0.959197,-1.509977,8.391993,-3.923746,9.152500,1.594095,-0.174679,-0.891792,6.984487,-2.919613,2.206435,-5.983998,9.469115,-8.866604,-6.421369,8.681347,5.682335,2.262411,5.416099,-5.917585,3.314506,-3.357851,4.665606,-7.440679,-1.391606,1.451690,4.862299,-7.961674,2.067723,3.497981,6.159808,3.917086,5.980770,1.994895,4.637580,6.512453,-0.713431,-1.720387,8.416264,-5.883352,5.195390,1.727562,-1.256745,7.363776,-6.136442,7.785779,-3.724771,-8.438218,7.465653,-1.702796,4.870821,0.678530,-3.769030,6.294603,-1.714514,6.639556,-3.631102,7.648606,-7.337451,-3.894073,0.255390,-8.314213,-0.137169,3.777586,8.944380,-4.056209,-3.517545,-8.917956,3.873251,-2.047633,0.562909,-6.005620,-0.437318,-2.720787,-2.209306,8.380281,5.889553,2.761496,4.525265,1.389152,4.501074,8.431478,-7.529361,-7.285660,-7.516576,0.460328,-4.068791,6.043700,0.871482,8.541847,-7.590449,-0.943788,0.346132,7.363559,-4.405893,8.778313,9.436405,4.476021,-8.083317,0.487712,-9.697087,-9.600126,-9.320450,2.002063,-3.174664,-6.592324,-5.654059,-6.728327,-5.072296], dtype = "float64")#candidate|5566|(720,)|const|float64
call_5565 = relay.TupleGetItem(func_5171_call(relay.reshape(const_5566.astype('float64'), [720,])), 0)
call_5567 = relay.TupleGetItem(func_5173_call(relay.reshape(const_5566.astype('float64'), [720,])), 0)
func_4279_call = mod.get_global_var('func_4279')
func_4281_call = mutated_mod.get_global_var('func_4281')
call_5568 = relay.TupleGetItem(func_4279_call(), 0)
call_5569 = relay.TupleGetItem(func_4281_call(), 0)
func_4949_call = mod.get_global_var('func_4949')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_5580 = func_4949_call()
call_5581 = func_4949_call()
var_5582 = relay.var("var_5582", dtype = "float64", shape = (6, 1, 5))#candidate|5582|(6, 1, 5)|var|float64
bop_5583 = relay.less(call_5580.astype('bool'), relay.reshape(var_5582.astype('bool'), relay.shape_of(call_5580))) # shape=(6, 1, 5)
bop_5586 = relay.less(call_5581.astype('bool'), relay.reshape(var_5582.astype('bool'), relay.shape_of(call_5581))) # shape=(6, 1, 5)
bop_5592 = relay.subtract(var_5582.astype('float32'), relay.reshape(bop_5583.astype('float32'), relay.shape_of(var_5582))) # shape=(6, 1, 5)
bop_5595 = relay.subtract(var_5582.astype('float32'), relay.reshape(bop_5586.astype('float32'), relay.shape_of(var_5582))) # shape=(6, 1, 5)
output = relay.Tuple([call_5550,call_5558,call_5562,call_5565,const_5566,call_5568,bop_5592,])
output2 = relay.Tuple([call_5551,call_5559,call_5563,call_5567,const_5566,call_5569,bop_5595,])
func_5605 = relay.Function([var_5582,], output)
mod['func_5605'] = func_5605
mod = relay.transform.InferType()(mod)
var_5606 = relay.var("var_5606", dtype = "float64", shape = (6, 1, 5))#candidate|5606|(6, 1, 5)|var|float64
output = func_5605(var_5606)
func_5607 = relay.Function([var_5606], output)
mutated_mod['func_5607'] = func_5607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5115_call = mod.get_global_var('func_5115')
func_5116_call = mutated_mod.get_global_var('func_5116')
call_5630 = func_5115_call()
call_5631 = func_5115_call()
output = relay.Tuple([call_5630,])
output2 = relay.Tuple([call_5631,])
func_5632 = relay.Function([], output)
mod['func_5632'] = func_5632
mod = relay.transform.InferType()(mod)
mutated_mod['func_5632'] = func_5632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5632_call = mutated_mod.get_global_var('func_5632')
call_5633 = func_5632_call()
output = call_5633
func_5634 = relay.Function([], output)
mutated_mod['func_5634'] = func_5634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_5638 = relay.TupleGetItem(func_4380_call(), 0)
call_5639 = relay.TupleGetItem(func_4382_call(), 0)
func_4279_call = mod.get_global_var('func_4279')
func_4281_call = mutated_mod.get_global_var('func_4281')
call_5653 = relay.TupleGetItem(func_4279_call(), 0)
call_5654 = relay.TupleGetItem(func_4281_call(), 0)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_5667 = relay.TupleGetItem(func_4993_call(), 0)
call_5668 = relay.TupleGetItem(func_4995_call(), 0)
func_4786_call = mod.get_global_var('func_4786')
func_4788_call = mutated_mod.get_global_var('func_4788')
call_5671 = relay.TupleGetItem(func_4786_call(), 0)
call_5672 = relay.TupleGetItem(func_4788_call(), 0)
output = relay.Tuple([call_5638,call_5653,call_5667,call_5671,])
output2 = relay.Tuple([call_5639,call_5654,call_5668,call_5672,])
func_5673 = relay.Function([], output)
mod['func_5673'] = func_5673
mod = relay.transform.InferType()(mod)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5673_call = mutated_mod.get_global_var('func_5673')
call_5674 = func_5673_call()
output = call_5674
func_5675 = relay.Function([], output)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5420_call = mod.get_global_var('func_5420')
func_5421_call = mutated_mod.get_global_var('func_5421')
call_5694 = func_5420_call()
call_5695 = func_5420_call()
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
var_5700 = relay.var("var_5700", dtype = "float32", shape = (35, 4))#candidate|5700|(35, 4)|var|float32
call_5699 = relay.TupleGetItem(func_5541_call(relay.reshape(var_5700.astype('float32'), [1, 140])), 2)
call_5701 = relay.TupleGetItem(func_5543_call(relay.reshape(var_5700.astype('float32'), [1, 140])), 2)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_5711 = func_4336_call()
call_5712 = func_4336_call()
var_5716 = relay.var("var_5716", dtype = "float32", shape = (35, 4))#candidate|5716|(35, 4)|var|float32
bop_5717 = relay.divide(var_5700.astype('float32'), relay.reshape(var_5716.astype('float32'), relay.shape_of(var_5700))) # shape=(35, 4)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
var_5721 = relay.var("var_5721", dtype = "float64", shape = (468,))#candidate|5721|(468,)|var|float64
call_5720 = relay.TupleGetItem(func_2728_call(relay.reshape(var_5721.astype('float64'), [6, 13, 6])), 0)
call_5722 = relay.TupleGetItem(func_2730_call(relay.reshape(var_5721.astype('float64'), [6, 13, 6])), 0)
output = relay.Tuple([call_5694,call_5699,call_5711,bop_5717,call_5720,var_5721,])
output2 = relay.Tuple([call_5695,call_5701,call_5712,bop_5717,call_5722,var_5721,])
func_5730 = relay.Function([var_5700,var_5716,var_5721,], output)
mod['func_5730'] = func_5730
mod = relay.transform.InferType()(mod)
var_5731 = relay.var("var_5731", dtype = "float32", shape = (35, 4))#candidate|5731|(35, 4)|var|float32
var_5732 = relay.var("var_5732", dtype = "float32", shape = (35, 4))#candidate|5732|(35, 4)|var|float32
var_5733 = relay.var("var_5733", dtype = "float64", shape = (468,))#candidate|5733|(468,)|var|float64
output = func_5730(var_5731,var_5732,var_5733,)
func_5734 = relay.Function([var_5731,var_5732,var_5733,], output)
mutated_mod['func_5734'] = func_5734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5306_call = mod.get_global_var('func_5306')
func_5307_call = mutated_mod.get_global_var('func_5307')
call_5831 = relay.TupleGetItem(func_5306_call(), 1)
call_5832 = relay.TupleGetItem(func_5307_call(), 1)
output = relay.Tuple([call_5831,])
output2 = relay.Tuple([call_5832,])
func_5836 = relay.Function([], output)
mod['func_5836'] = func_5836
mod = relay.transform.InferType()(mod)
mutated_mod['func_5836'] = func_5836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5836_call = mutated_mod.get_global_var('func_5836')
call_5837 = func_5836_call()
output = call_5837
func_5838 = relay.Function([], output)
mutated_mod['func_5838'] = func_5838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4683_call = mod.get_global_var('func_4683')
func_4684_call = mutated_mod.get_global_var('func_4684')
call_5859 = relay.TupleGetItem(func_4683_call(), 0)
call_5860 = relay.TupleGetItem(func_4684_call(), 0)
func_4556_call = mod.get_global_var('func_4556')
func_4563_call = mutated_mod.get_global_var('func_4563')
const_5871 = relay.const([-1.260514,-7.605930,-2.387544,-2.324199,-6.473008,-0.776412,5.435998,-5.260542,-1.867440,-1.189375,-9.923421,-7.697930,-7.124643,6.726321,-1.578660,8.675754,-5.063353,-6.735259,-0.827176,-5.963563,8.330813,-1.492968,-4.220449,-3.851966,-8.104051,5.113262,-8.312741,6.074120,9.444327,9.450537,-6.942209,-9.519857,-7.400677,1.644947,-1.088994,4.887213,4.890461,-8.160406,2.978367,-3.891089,3.050999,-0.621415,5.966738,-3.824108,-2.943377,4.377895,-2.676056,4.956072,-3.735328,2.407674,5.775660,-1.169667,-3.408195,-4.457814,6.714388,-5.356096,-2.162638,8.176572,-8.532806,-3.990624,4.280762,2.332903,-4.798044,-8.300227,5.359597,3.831292,7.162271,1.582641,-1.841952,7.151620,0.590491,8.546747,-2.893811,7.358539,-8.895441,1.723176,8.975112,-2.837539,1.864464,-9.215881,-6.461238,6.114461,5.501247,-6.894933,4.043746,-2.586757,2.551706,-8.942168,-0.920148,-0.525080,-5.322959,-0.455462,-9.789335,7.040596,8.807203,-4.137422,3.246497,3.040160,1.203489,-0.040380,7.137684,0.580562,-6.934005,-6.688981,1.806695,-7.996908,-7.244962,-8.280404,7.938495,2.865328,0.127228,-5.694215,8.774424,-8.101744,2.794005,9.877395,5.016684,9.974045,7.885886,-9.611853,-5.730591,-9.505609,2.819735,2.339855,-2.365779,3.300779,5.162413,-2.117168,-8.692934,6.303616,7.870646,-1.263027,6.013564,2.894309,-3.214908,9.923812,-4.753531,3.743328,-6.621141,-9.461999,1.204024,7.951382,6.417202,-3.629744,-2.834541,-5.265468,-5.774307,-3.502864,-1.305099,-6.126780,9.665514,-5.109883,4.833342,2.599925,-1.982527,-3.595711,2.761461,-1.577515,2.049364,-8.735084,-6.719977,-9.645565,-8.689459,-1.156256,-8.338717,7.022951,3.935207,2.430724,6.681163,-6.816602,-7.626290,-6.600337,-5.916693,-8.689468,1.970773,9.584896,1.236279,-7.170640,-2.087246,3.985652,-0.129905,-0.916177,-9.561508,-6.061117,-8.749216,2.828654,-2.418578,0.225341,6.276215,-9.449611,-1.518875,-5.665180], dtype = "float32")#candidate|5871|(192,)|const|float32
const_5872 = relay.const([-2.281913,-2.522271,6.681085,-3.245608,-1.841608,-9.170953,0.917488,0.488460,9.298729,9.716396,2.534504,6.238594,8.571461,5.961846,-6.801227,9.507199,1.131225,4.930666,-4.441184,-1.353264,6.924290,-3.422242,7.788101,-8.513563,-9.117921,0.432825,5.352183,8.100845,-9.673656,-6.124049,-7.591753,9.375681,2.592882,-8.266119,-8.133029,1.955557,8.839817,2.629797,4.959890,8.203859,2.645287,6.006210,5.451701,6.478143,-5.724012,2.532620,3.807737,-2.499667,9.971417,5.228704,-3.730853,0.969552,-5.761189,-3.249194,-5.322312,6.231340,-9.119365,8.624073,1.358983,0.775985,-1.415677,-1.939675,-9.524341,-9.197274,-6.381475,5.823993,-0.840681,-1.582276,7.227824,3.609629,3.481984,7.071683,2.475329,1.904068,-0.685234,-7.722777,5.379525,-7.981569,-4.401609,-0.829306,-4.869215,3.701584,-0.212238,8.485247,-0.412659,-3.831340,2.512740,5.066252,-1.100000,-4.005122,2.988181,6.438217,3.310228,-5.063243,-9.043411,-7.101765,4.577060,-5.649550,-3.092864,6.477060,-0.190696,-7.598507,-0.770738,-3.666636,-6.513444,3.714512,-2.879094,7.514942,-3.633522,4.323024,-0.473677,-2.838476,7.795219,6.294151,-3.441594,-5.052684,-7.362041,2.435327,-5.085821,4.795321,-3.199498,-4.881260,8.678377,-8.709000,-1.105754,4.836298,-4.998511,-2.003367,-2.015801,7.975997,-6.861005,8.783259,-8.040039,2.183045,-1.339055,5.341963,0.660530,0.199975,1.407455,4.950048,0.300203,-4.874405,-2.472598,4.922839,8.840399,5.269639,-8.730117,-7.762878,3.783662,2.575347,3.646005,-5.583332,8.133188,6.550961,-8.537045,-5.655668,9.681842,3.435918,3.513605,-7.409715,7.664379,-1.154046,-6.873217,-7.116127,2.348865,-0.307987,-1.943154,2.491073,-7.546896,4.912407,9.012229,8.816075,-6.170951,-9.111311,8.779376,-6.935355,1.011579,4.328872,-5.977607,5.817829,8.829300,-5.256753,8.517714,5.730517,-5.768712,-4.629653,-9.240885,7.419535,-9.038248,-0.462050,-6.880630,-8.625520,-8.526480,-8.981396,1.442466,-2.026611,2.253619,-4.696433,-7.371700,-8.358236,-7.873103,0.124146,-6.667815,-7.564420,-0.049784,3.046018,2.290303,-2.415554,2.219596,-3.280526,2.905463,8.242198,0.169397,1.578746,-4.122823,1.741872,-1.285896,7.177528,4.237971,4.147210,0.542475,-2.572441,-0.278994,-2.199671,3.924161,-1.833120,6.095762,2.045985,7.751361,-7.978428,4.890627,4.849532,-1.278123,-0.598808,-6.289040,-3.980646,-7.917309,-7.541741,6.925653,-7.404912,-4.363343,4.764155,6.926727,-9.572896,7.623063,-2.740682,-2.480886,-5.744023,-7.076840,-0.717301,-5.202318,-6.888981,-1.161327,2.652652,9.699266,-3.882826,-6.471465,5.901554,4.374308,6.448708,1.005449,7.268192,9.216684,-5.057828,-6.914366,-4.498225,6.163802,-4.246951,6.600292,-1.183821,1.442838,-9.358157,-1.050912,5.590955,-2.190801,5.228492,-6.326093,4.496823,-1.350242,-0.672577,7.892195,-2.842753,7.495161,-7.687947,-0.481107,-9.600690,5.216614,-2.036047,-8.848428,9.645716,-6.743733,-1.637205,0.811093,-2.000118,-7.862553,3.940768,3.755302,-6.678763,-2.693923,8.184812,3.597991,-3.013935,8.422233,1.723168,7.142093,-5.131745,0.970304,-7.371387,-6.972767,-8.361688,0.780756,-4.273593,3.683752,-1.227580,1.866894,2.129318,8.278641,-1.508120,-2.758037,-0.963894,-3.267658,7.490440,-1.159249,5.835278,-9.095992,1.660602,7.989776,-9.963050,-2.411067,-9.724778,-2.644365,1.327416,6.848445,-3.949289,0.199451,6.187618,1.007669,3.879525,8.351557,2.830006,-5.325661,6.783105,-3.990580,0.562862,-1.940405,2.759549,8.546747,-5.853205,-9.023658,-0.201003,-9.544334,8.605952,-5.506015,8.270634,3.667856,2.885352,3.500882,5.688065,-9.567180,-9.915456,-9.208897,1.452772,-0.472466,2.459120,0.260811,-6.800304,0.612824,7.023688,-0.581147,4.118159,2.809960,-7.068196,-8.746984,0.943343,-1.618519,7.557130,4.337996,-6.435027,3.662952,-4.111215,0.380576,-2.681975,-4.286366,-1.346005,-0.395814,8.544435,-3.599422,-5.330773,6.827862,2.316494,0.538164,3.071537,6.777002,8.920409,4.954612,6.702913,-1.507591,3.521591,-9.706036,-0.391401,-2.562690,-2.324916,3.335183,4.702714,-0.797535,-6.698532,4.501538,-4.062767,1.130736,8.489240,2.615376,4.484326,-7.480491,1.239571,-3.947670,9.531198,4.099594,5.907054,-6.473614,4.121369,2.966949,5.123706,8.149910,5.633604,7.965410,2.085327,-7.114525,-3.433434,-1.835848,7.497458,4.539753,1.697734,-2.601076,7.268422,1.801005,-4.995733,-4.931043,8.518411,2.622557,-3.079222,-6.735443,-0.254436,-8.549431,1.461762,-8.787351,8.431420,-8.694939,-7.602785,8.855584,4.861786,-2.211809,2.878603,1.059646,8.422404,-7.022591,9.070620,0.302095,6.211659,8.271781,-1.648939,4.003979,6.541201,-0.603630,-1.509875,-9.314504,-2.736164,5.602246,3.922022,5.729533,-2.922208,9.226501,-5.512562,8.863124,-5.889125,-9.709595,-5.866178,6.817985,1.406919,9.015464,5.349649,-9.518087,-2.981766,-3.383495,-5.334057,-4.431820,9.579583,9.814992,4.277674,0.038774,0.094403,-4.003001,9.412890,7.085566,-7.570533,-6.786912,-2.244530,9.023311,8.812053,8.614411,9.480120,-2.809299,2.428642,-8.445246,-0.251880,-7.423896,-8.907471,4.101832,-0.975571,-8.322532,8.782240,4.299094,2.010393,-5.063449,-3.113450,6.580053,-7.672361,-9.443300,6.254023,-8.582145,-0.514549,9.205069,8.693157,-6.334715,4.494407,-8.550792,0.275201,8.377711,9.545712,1.419447,0.289694,8.796347,-9.843106,7.684676,8.420747,5.138974,-4.272597,-1.924893,7.675005,-2.123754,5.704554,3.427947,-5.549318,-4.590848,1.356342,4.378630,-3.485070,-6.867170,-9.486523,-3.768598,8.359065,0.293429,-0.570355,9.866598,-0.753955,-0.400440,0.723172,-6.057440,-5.325646,0.319316,4.384879,-8.904252,8.021783,-6.736345,-6.921200,6.103248,6.591661,-0.398213,-3.408597,7.686240,5.577178,9.063035,-7.010983,-1.129355,-8.109768,-2.921033,-3.094382,1.958657,0.180788,4.011051,-4.729274,8.557707,6.132237,4.479193,2.040767,-2.973270,-2.024041,4.113725,9.831881,-1.790356,5.128939,3.573306,9.993167,-1.757023,6.563084,6.918682,-2.351417,7.291831,-7.679232,-0.558685,6.797682,-1.033553,-0.186451,-7.834612,9.971644,6.642844,1.827998,-1.765816,5.273890,2.375318,-0.594314,-6.607329,1.971353,-3.000758,-9.770106,-7.579321,1.247225,6.306894,-9.640107,5.198260,-6.691104,4.768572,-6.606947,2.864010,-9.159066,-1.713464,0.934162,0.101296,-2.507435,-4.226411,-2.891246,-4.576812,8.522803,9.854982,-2.231308,6.427468,4.553300,-9.571225,-9.973715,5.791745,4.626561,6.643256,-7.232913,2.297755,-7.642359,7.708918,-7.902273,-3.490403,-3.535763,-3.873992,-8.103771,2.334809,-4.922050,3.849447,9.318934,4.268935,-1.187282,1.271275,4.158320,1.361350,-5.936175,1.903604,9.605349,-7.018494,5.443456,-8.016454,-2.320365,-9.762720,1.684142,2.637434,-0.664821,2.211656,0.470725,-3.786709,-7.591564,-1.067124,-7.580939,9.040692,6.288633,7.923784,-7.816860,3.054170,-3.579915,4.933658,9.182861,-3.578575,3.538058,1.553889,2.614504,-4.823181,8.685908,-1.068751,-6.695991,3.927060,-8.690996,-9.238093,-2.920214,7.979327,0.650135,0.072316,-5.904940,5.372426,1.443192,-0.387222,-5.042693,-9.264756,-2.440887,5.484656,2.441788,-6.199908,-8.275250,-3.004946,-5.334114,3.606262,5.654299,6.724293,-9.627715,2.740964,6.993523,-1.251300,-9.669767], dtype = "float64")#candidate|5872|(720,)|const|float64
const_5873 = relay.const([3.355187,-3.638557,1.306151,0.302093,4.637396,6.999129,3.441890,0.062414,-9.566352,0.266772,-5.551047,-9.051623,-9.448858,4.729408,4.833412,9.635892,8.639068,-4.840159,-2.439609,6.438412,-9.550120,-0.331710,3.959985,-9.080430,7.507097,7.150250,-6.558088,4.783608,5.800907,-5.820237,-5.713907,0.876698,8.656810,-0.815796,8.778131,-2.892108,-1.373738,-3.865881,-4.828717,-0.442786,-8.039877,8.845410,1.278194,-9.152976,-0.810154,1.142501,-2.238876,-7.358155,-1.840741,7.000979,-4.728209,4.094948,-4.934286,-9.732554,-0.720623,-0.503304,4.285485,0.912800,-9.811316,7.239750,1.376660,4.794837,3.637996,9.155091,-7.296441,-0.174600,-1.356025,-3.737465,9.938117,-9.400546,4.094447,-7.880639,-2.609055,7.357762,7.291155,4.375443,3.558986,-0.180697,2.444041,-4.711286,-0.006004,-2.679161,4.985597,4.364838,-4.294637,-4.889129,2.110684,-4.011308,7.576509,-0.629737,-5.620475,7.663058,3.674326,-3.088781,6.744062,-5.403522,0.871184,9.561260,4.525623,7.063963,-2.617101,2.134170,5.955552,2.709771,6.278782,8.856834,-6.981366,9.235977,8.285069,-3.127533,9.275697,-4.860355,1.879434,0.886720,4.250119,-1.104136,-7.071830,2.603785,4.307297,-3.259919,-6.081013,-5.276585,-5.470523,-4.994591,-1.859060,0.736808,-1.536067,-2.602361,5.235065,-4.869219,7.585081,-8.923755,3.179732,3.853288,-9.839894,9.164884,3.003630,2.877547,-8.218039,3.181025,-0.071360,-8.553866,5.338458,2.126164,-6.910710,6.034655,-7.384082,8.444087,4.767318,8.096364,4.959909,-2.409582,-4.305022,-7.353586,-7.814213,2.951470,-1.751879,5.057484,2.126622,-5.648636,-3.093699,2.514939,3.134500,-1.393714,5.611070,4.531320,5.864320,7.336784,2.879134,-4.252949,-3.317672,2.748774,0.313250,-6.605763,5.555391,-5.299405,-1.837810,-0.076767,-0.562264,-5.070364,-6.079481,-6.931710,5.005994,-4.259116,-6.540946,-1.463654,-1.390121,1.630234,-9.655285,-0.579945,6.009924,-1.962901,-4.990459,7.114687,4.914568,-8.952378,8.179531,4.933333,6.721890,-1.479903,-5.294153,-4.213517,-0.955765,-9.180995,6.580354,-8.977434,9.731339,-9.879552,0.804730,6.825990,6.519292,8.146717,-3.515134,8.330673,-3.630653,7.215587,6.296758,8.142020,-9.512589,-5.335776,7.057961,-0.063846,4.710957,-3.830755,-1.364546,-1.317041,-2.851490,9.456613,-1.667948,-3.262832,-6.038649,-1.045712,7.887088,7.544780,6.852619,3.547281,-0.537764,-8.657929,-6.714552,-9.449033,-9.829769,-3.276327,-7.556435,0.298832,-1.766750,1.286395,-6.985660,-9.054374,-3.501475,1.580139,-0.765699,-2.595384,-0.918497,-4.520956,6.540893,7.087793,0.029055,-8.527541,6.423044,9.449157,6.416925,-1.649065,-4.065906,4.581976,-2.570275,-9.660327,3.158056,6.116622,8.752175,-4.447671,1.995469,-8.602237,9.167877,-5.432510,3.009827,6.881370,0.400946,-6.575258,-9.168336,-1.822931,-1.436627,7.973381,9.931384,6.880292,0.323870,1.437940,7.611788,9.758089,0.169863,-0.768871,4.478593,5.178294,7.218922,-3.725849,-5.783797,0.909488,-1.480904,-3.579441,3.889213,-1.758643,-8.402320,5.225191,-7.687721,-1.260304,1.783555,-0.031029,-9.767856,9.933333,2.358829,-4.423574,-2.691677,-4.630232,-3.881397,-8.152059,-9.228580,-5.248043,-9.529598,-6.906453,9.553168,-0.990702,4.841817,1.847616,6.496013,-9.648782,0.975484,-3.310183,-2.421134,-4.131068,1.720247,-6.305649,1.354358,-8.796562,5.758478,-0.050794,-7.706024,2.731868,0.293377,3.641380,9.939626,7.252099,-4.980428,-9.379575,-1.027502,-1.865757,5.529848,8.203860,7.580433,-1.285351,6.459598,1.609357,-1.152846,3.776591,-4.619436,-3.357067,-0.184672,-5.949721,1.526986,5.095326,0.395496,0.270651,1.480478,3.475189,4.452478,0.893915,1.423500,-6.284372,6.099486,9.990459,-8.367274,3.922270,-6.412237,-1.599812,-9.882470,7.559880,4.373401,-6.625363,-3.906978,9.265533,1.276582,-4.227646,-5.177961,-2.879160,-6.210301,6.116372,3.220954,-4.187185,-1.030788,2.810544,-6.493961,-5.448763,-5.280145,-6.806682,-0.830899,-3.109858,-1.490554,-5.128175,8.473396,-3.188222,3.457766,-5.072204,-2.605258,-0.265878,6.557503,5.128691,-6.221571,6.548083,-1.956723,1.081870,-8.593233,0.553560,-9.494527,8.103917,-7.709551,-7.752479,9.890458,3.073191,6.324276,-2.374024,7.185605,-9.340592,4.574638,-9.073442,-2.970429,-2.845459,2.272114,8.132270,-1.580211,4.126302,6.103797,-7.673549,2.800906,-7.721740,9.098493,8.898308,1.137139,-1.588916,-2.829571,-6.324803,5.457752,4.710827,-5.236384,-9.183077,4.529975,-5.899708,0.205948,1.454861,-5.421640,0.858426,-8.340356,-5.564228,7.727804,-0.610425,-3.261381,-3.413509,7.954029,-9.136782,-9.013364,-4.630298,4.269797,-1.884028,8.186262,7.447815,-8.315291,0.630496,0.583045,-9.154026,9.255654,-4.925527,3.317112,8.528492,-5.797846,8.780239,-0.125162,-5.172428,-4.070687,4.354591,-1.062179,9.896643,4.530756,1.441273,-3.683692,2.652134,-2.386904,1.724846,-8.827491,9.178367,9.426973,-8.732742,-1.384464,9.899469,5.683828,5.282064,2.285898,-4.920487,2.562806,8.295845,3.222716,4.617422,7.145106,-4.471448,2.612211,-8.630596,-7.432512,5.800357,-4.823866,0.816170,0.179741,2.804327,2.109226,2.649402,-2.567862,-6.956745,-7.057214,0.427312,9.811865,7.747776,9.864264,0.637896,-3.194204,6.302106,0.853371,3.314623,8.875100,6.109228,-3.026324,3.571561,6.176725,6.340171,-2.305072,1.414847,-5.618500,-2.613284,3.772699,7.623156,-9.523642,-6.372928,5.989374,-5.364802,-1.230448,5.101630], dtype = "float64")#candidate|5873|(540,)|const|float64
const_5874 = relay.const([-3.929180,-2.616784,-2.106613,-5.820278,-2.870299,-0.683833,-5.321513,-6.709350,-9.470297,-7.661009,-2.145367,-8.766287,-1.224982,3.528646,9.256296,7.975967,3.157618,-1.065781,5.749803,-1.814591,8.878670,7.249407,-8.539507,1.354399,-2.310837,-9.320275,-6.322920,-2.750705,-6.978898,-1.974502,-0.445402,-6.567150,2.461806,7.358967,6.406340,7.559778,3.637146,9.092481,-8.070944,-0.834493,-1.245062,1.663962,-5.147409,-7.268366,7.951081,-9.354672,-0.145423,-4.247471,3.312966,-4.513969,5.075883,0.224234,8.727167,7.492343,4.789858,-5.338576,-0.717082,2.003984,4.537745,-4.741029,-5.266507,8.164969,8.675415,4.981505,5.617984,9.739278,0.900152,0.395901,4.651463,-7.451726,2.324983,5.391417,-8.268938,-2.079315,-7.547716,-5.468783,6.853633,4.529745,1.436389,5.186822,-3.335009,-6.254134,0.216834,-4.625393,-4.131075,-9.824806,-3.598798,3.261921,-1.678261,-9.897169,-6.979688,2.420326,-5.915606,-0.178885,4.103191,1.272304,4.978489,5.884615,5.978355,3.056990,-3.774869,3.750169,6.371896,2.131931,-7.354467,-4.862014,0.625634,-0.836316,-5.330509,0.841459,-6.634963,-7.264525,-1.510089,0.101180,7.644724,8.530437,-8.304404,-0.550610,-2.136416,8.005719,-5.229634,0.825810,4.123274,2.993049,7.753819,-0.691601,6.830209,7.249598,-5.821836,-1.187768,8.631665,-1.005877,-6.042496,-0.805583,-6.733602,-1.555148,0.256181,-2.659004,7.861252,2.300349,0.058774,4.513651,-3.195788,-0.429379,7.262326,-4.960922,4.750923,-1.411105,-2.319024,-2.830249,-2.441723,6.696313,-2.838277,-0.323199,6.950460,-9.193508,4.057921,-0.244322,-8.686512,0.277738,9.317975,2.328229,-9.938890,-6.604733,-7.764836,8.620879,6.723627,-7.700504,2.032472,-6.930922,-2.898217,9.151146,-1.629035,7.711307,-2.019770,-2.192122,4.031013,-4.170440,1.947580,-2.602440,7.889828,-9.992221,-5.424097,7.394656,2.095454,-4.335455,-4.536124,-6.043926,8.983278,-2.192091,-3.137392,4.304284,-2.020079,3.217584,3.522827,7.386521,7.779720,1.565374,-2.541348,1.742932,-0.277598,-4.802317,2.264163,8.643007,-6.913910,0.646379,-3.445841,-4.594036,-5.732742,-8.084952,7.059129,6.362161,9.333903,-0.450763,7.067649,-8.999820,-4.383651,-7.893472,3.114348,-1.119480,3.199719,-6.730920,5.658341,-2.419016,-1.357045,1.948145,-6.452579,-2.940542,8.019529,-8.806181,1.538302,7.084905,3.905477,1.696451,8.182975,-3.769275,6.341082,3.150141,-7.041128,0.077097,-6.705350,-6.397653,9.413992,3.228193,-9.285894,4.790294,-3.232291,2.857638,-6.404497,-5.758726,-3.897276,9.661881,0.165411,-1.283740,-8.551031,-9.414409,-7.422671,-7.419264,5.893847,0.839639,1.052766,7.415867,5.721906,2.687525,-1.961017,4.765151,-4.175138,-1.998087,3.564097,8.318474,-3.671416,6.135231,5.647433,-3.424007,5.895398,-1.237359,-4.323107,-1.631128,-0.356823,-7.903867,0.252214,3.769834,-6.596136,8.064960,1.010606,5.623567,-0.629395,-8.596964,-1.595002,-0.709053,-4.073132,-2.281348,7.681374,-6.118172,-9.386379,-3.983507,3.720364,-1.157025,8.317747,9.750367,-8.596173,8.361216,2.422648,-6.990401,-1.837361,3.720268,1.931498,-0.562376,-4.680292,-0.221726,5.349717,-4.440910,8.902333,-2.403658,-2.268517,3.900676,-7.313252,5.194641,-3.135890,-8.226424,3.910377,-0.453743,8.679546,1.109717,5.631539,3.099048,-4.190164,5.621007,-8.995615,-0.160332,-7.013728,9.606134,-9.524104,-0.349530,5.180820,-7.461624,5.236309,8.374422,7.148252,-8.718524,1.430864,3.901616,-5.059855,8.441825,-3.913582,9.524552,8.638296,2.261078,-6.353355,-6.678331,-5.958626,-5.259017,8.940073,5.645032,-2.358310,-9.115993,7.769262,6.129747,-9.374801,-2.020712,-3.690953,8.320696,-9.387416,-5.397683,9.455641,-1.423220,1.022934,6.576648,0.846201,7.161503,-2.525531,6.144267,0.845278,2.665463,1.110194,-9.002772,-9.095243,7.916544,-7.738114,6.082725,-2.921490,-2.571435,-6.776413,2.434979,-7.723123,1.002067,-2.871470,-3.643921,6.325314,5.667523,7.300068,-5.579056,-1.210455,-4.196520,9.049416,-8.374614,-3.307531,2.912616,-8.586990,-6.268742,3.392931,8.065294,-1.514979,1.807997,-0.349037,-5.395074,-2.253929,3.219666,-9.622734,-6.401230,3.364136,4.644457,8.217834,-6.753331,7.724153,-9.394953,-3.628046,-6.371695,7.093902,-8.658747,6.958920,8.181771,6.909331,-6.053879,-6.277585,-7.662916,9.570851,8.814179,-5.008262,-0.444051,-7.529723,5.186760,-0.358900,4.648456,9.622145,4.395147,-5.337598,7.787998,7.783653,0.320752,-3.371074,9.299008,-4.300359,-2.728959,-6.106831,-1.241473,1.363702,5.168071,-0.128083,4.670888,-7.803794,-7.133461,7.658130,6.580726,4.044418,-1.336887,-3.471696,6.848205,3.281641,8.787250,-1.820345,-8.975037,3.708706,0.793362,9.681879,-9.182744,-7.736617,-4.201619,-7.230550,-0.188517,1.424191,8.147479,8.715538,-8.681117,-4.557164,-4.145534,6.845403,-9.774057,1.648654,-1.856743,-5.567833,-6.424620,7.128301,-1.500281,-6.461123,6.325243,5.092711,1.940419,3.628180,2.076362,-6.694006,-7.480499,5.153828,-8.712928,1.556505,0.879519,3.814980,-5.087227,-1.879423,-8.706172,0.345475,-2.291406,-6.901294,2.182415,8.329497,8.778783,0.817189,-3.403514,-4.059003,3.716519,3.465975,9.300061,-6.166333,-2.530715,-7.923814,-2.266918,-9.051493,3.880570,-0.688086,4.971151,8.660500,1.724131,-2.137480,0.424840,4.978808,-2.166322,6.635978,9.894085,2.065070,5.181615,0.776402,-0.416602,-2.228518,-5.746868,-9.708963,5.974807,6.671847,-3.524733,-1.655437,-5.320127,-7.856444,-4.959145,8.576165,-4.786942,8.704927,-9.079999,7.123191,3.349078,-2.096727,-6.612646,6.225741,6.624021,7.909036,-1.555707,2.272682,6.100406,-9.620091,-8.591631,3.946690,-6.829024,-5.672208,3.372909,8.650098,8.733164,3.439985,0.440770,8.354986,7.728629,-0.463042,-2.083602,-5.060242,-9.175556,-4.251525,-4.798107,6.721422,-5.284060,-9.080351,1.768668,-9.253753,0.218796,-1.117668,-4.050288,2.232952,-1.803802,-9.804285,-7.830805,-5.399020,2.766005,4.301132,4.838878,-2.387103,-7.987995,0.692020,4.690050,-3.758981,4.595541,8.569839,6.957695,7.902870,-0.681262,-4.710654,7.789816,5.149855,6.465000,-7.817418,0.751662,2.238438,0.132465,8.012880,-3.458678,-7.570283,7.664325,-3.983785,-0.725864,-5.005325,2.919498,0.464950,-3.042547,4.489117,8.497561,-9.994020,-9.066450,-8.068953,-1.450492,-4.919511,-8.688830,9.363262,-4.171734,-0.206423,3.402302,-2.637586,2.511777,5.544068,-3.101564,-7.376712,6.493918,6.003885,-2.660464,8.756519,1.943154,6.268799,-7.576320,4.644103,-1.975464,-2.042004,9.638974,-9.422826,-7.838652,-9.115949,-9.155731,7.886128,1.301549,-3.334595,-5.385594,-3.444593,8.234829,9.900941,-3.047238,2.919818,-9.227805,4.810695,-1.005655,6.107074,3.862353,0.182455,-1.455118,4.305525,9.877146,5.607071,-4.914056,-8.863120,6.198479,8.503415,-7.045328,5.150060,-0.728819,-0.143128,-9.690436,-4.968235,8.332521,-6.077747,-8.274437,6.228184,5.643969,9.230450,7.002973,0.119598,-4.391819,-6.318825,6.074690,3.994301,-3.507537,-4.548495,4.453623,5.374818,5.775651,-5.675567,6.831908,1.792747,-6.453509,-9.409485,-3.822804,1.900859,9.539424,-1.614554,9.709901,-3.159807,1.832187,-7.460906,2.409658,-3.514593,7.467815,-8.580401,-1.818455,1.323276,7.521129,-3.633953,-2.191725,-1.859102,-2.873745,-4.586627,-4.220693,6.307769,-9.313758,6.516314,2.117590,-5.629791,-0.902909,-7.924502,-9.140987,-1.528096,0.416126,-4.746653,-8.732286,6.580124,7.497454,-8.674151,3.361328,0.055601,0.228845,0.744159,-5.778984,-3.258489,7.140640,-5.922941,-6.709596,5.856520,3.103417,7.472633,-3.693385,-3.369887,7.552225,3.264507,8.951065,-0.551693,0.334743,6.736584,2.970508,7.814333,-3.177557,-6.324478,-7.725216,9.797581,6.222564,7.796131,3.328470,0.298391,-8.440172,6.685164,-1.951911,-8.525059,-8.843370,4.965410,9.389475,-7.612357,-4.993914,5.967826,-7.344428,1.671181,5.224325,5.718049,-9.470311,5.407387,9.749185], dtype = "float32")#candidate|5874|(784,)|const|float32
var_5875 = relay.var("var_5875", dtype = "float32", shape = (480,))#candidate|5875|(480,)|var|float32
call_5870 = relay.TupleGetItem(func_4556_call(relay.reshape(const_5871.astype('float32'), [192,]), relay.reshape(const_5872.astype('float64'), [720,]), relay.reshape(const_5873.astype('float64'), [9, 60]), relay.reshape(const_5874.astype('float32'), [784,]), relay.reshape(var_5875.astype('float32'), [480,]), ), 4)
call_5876 = relay.TupleGetItem(func_4563_call(relay.reshape(const_5871.astype('float32'), [192,]), relay.reshape(const_5872.astype('float64'), [720,]), relay.reshape(const_5873.astype('float64'), [9, 60]), relay.reshape(const_5874.astype('float32'), [784,]), relay.reshape(var_5875.astype('float32'), [480,]), ), 4)
output = relay.Tuple([call_5859,call_5870,const_5871,const_5872,const_5873,const_5874,var_5875,])
output2 = relay.Tuple([call_5860,call_5876,const_5871,const_5872,const_5873,const_5874,var_5875,])
func_5898 = relay.Function([var_5875,], output)
mod['func_5898'] = func_5898
mod = relay.transform.InferType()(mod)
mutated_mod['func_5898'] = func_5898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5899 = relay.var("var_5899", dtype = "float32", shape = (480,))#candidate|5899|(480,)|var|float32
func_5898_call = mutated_mod.get_global_var('func_5898')
call_5900 = func_5898_call(var_5899)
output = call_5900
func_5901 = relay.Function([var_5899], output)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4683_call = mod.get_global_var('func_4683')
func_4684_call = mutated_mod.get_global_var('func_4684')
call_5914 = relay.TupleGetItem(func_4683_call(), 1)
call_5915 = relay.TupleGetItem(func_4684_call(), 1)
uop_5921 = relay.log(call_5914.astype('float32')) # shape=(14, 2, 7)
uop_5923 = relay.log(call_5915.astype('float32')) # shape=(14, 2, 7)
func_3348_call = mod.get_global_var('func_3348')
func_3352_call = mutated_mod.get_global_var('func_3352')
var_5948 = relay.var("var_5948", dtype = "float64", shape = (72, 2))#candidate|5948|(72, 2)|var|float64
var_5949 = relay.var("var_5949", dtype = "int64", shape = (2880,))#candidate|5949|(2880,)|var|int64
var_5950 = relay.var("var_5950", dtype = "float64", shape = (468,))#candidate|5950|(468,)|var|float64
call_5947 = relay.TupleGetItem(func_3348_call(relay.reshape(var_5948.astype('float64'), [2, 12, 6]), relay.reshape(var_5949.astype('int64'), [2880,]), relay.reshape(var_5950.astype('float64'), [468,]), ), 1)
call_5951 = relay.TupleGetItem(func_3352_call(relay.reshape(var_5948.astype('float64'), [2, 12, 6]), relay.reshape(var_5949.astype('int64'), [2880,]), relay.reshape(var_5950.astype('float64'), [468,]), ), 1)
bop_5959 = relay.bitwise_and(uop_5921.astype('uint64'), relay.reshape(call_5914.astype('uint64'), relay.shape_of(uop_5921))) # shape=(14, 2, 7)
bop_5962 = relay.bitwise_and(uop_5923.astype('uint64'), relay.reshape(call_5915.astype('uint64'), relay.shape_of(uop_5923))) # shape=(14, 2, 7)
func_3348_call = mod.get_global_var('func_3348')
func_3352_call = mutated_mod.get_global_var('func_3352')
call_5975 = relay.TupleGetItem(func_3348_call(relay.reshape(var_5948.astype('float64'), [2, 12, 6]), relay.reshape(var_5949.astype('int64'), [2880,]), relay.reshape(var_5950.astype('float64'), [468,]), ), 0)
call_5976 = relay.TupleGetItem(func_3352_call(relay.reshape(var_5948.astype('float64'), [2, 12, 6]), relay.reshape(var_5949.astype('int64'), [2880,]), relay.reshape(var_5950.astype('float64'), [468,]), ), 0)
output = relay.Tuple([call_5947,var_5948,var_5949,var_5950,bop_5959,call_5975,])
output2 = relay.Tuple([call_5951,var_5948,var_5949,var_5950,bop_5962,call_5976,])
func_5986 = relay.Function([var_5948,var_5949,var_5950,], output)
mod['func_5986'] = func_5986
mod = relay.transform.InferType()(mod)
mutated_mod['func_5986'] = func_5986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mutated_mod.get_global_var('func_5986')
var_5988 = relay.var("var_5988", dtype = "float64", shape = (72, 2))#candidate|5988|(72, 2)|var|float64
var_5989 = relay.var("var_5989", dtype = "int64", shape = (2880,))#candidate|5989|(2880,)|var|int64
var_5990 = relay.var("var_5990", dtype = "float64", shape = (468,))#candidate|5990|(468,)|var|float64
call_5987 = func_5986_call(var_5988,var_5989,var_5990,)
output = call_5987
func_5991 = relay.Function([var_5988,var_5989,var_5990,], output)
mutated_mod['func_5991'] = func_5991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mod.get_global_var('func_4736')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_6019 = relay.TupleGetItem(func_4736_call(), 0)
call_6020 = relay.TupleGetItem(func_4737_call(), 0)
output = call_6019
output2 = call_6020
func_6038 = relay.Function([], output)
mod['func_6038'] = func_6038
mod = relay.transform.InferType()(mod)
mutated_mod['func_6038'] = func_6038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mutated_mod.get_global_var('func_6038')
call_6039 = func_6038_call()
output = call_6039
func_6040 = relay.Function([], output)
mutated_mod['func_6040'] = func_6040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_6102 = relay.TupleGetItem(func_3583_call(), 0)
call_6103 = relay.TupleGetItem(func_3584_call(), 0)
output = call_6102
output2 = call_6103
func_6113 = relay.Function([], output)
mod['func_6113'] = func_6113
mod = relay.transform.InferType()(mod)
mutated_mod['func_6113'] = func_6113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6113_call = mutated_mod.get_global_var('func_6113')
call_6114 = func_6113_call()
output = call_6114
func_6115 = relay.Function([], output)
mutated_mod['func_6115'] = func_6115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6155 = relay.var("var_6155", dtype = "uint8", shape = (11, 14, 13))#candidate|6155|(11, 14, 13)|var|uint8
var_6156 = relay.var("var_6156", dtype = "uint8", shape = (11, 14, 13))#candidate|6156|(11, 14, 13)|var|uint8
bop_6157 = relay.minimum(var_6155.astype('uint8'), relay.reshape(var_6156.astype('uint8'), relay.shape_of(var_6155))) # shape=(11, 14, 13)
func_3006_call = mod.get_global_var('func_3006')
func_3010_call = mutated_mod.get_global_var('func_3010')
const_6167 = relay.const([[-7,4],[-1,-9],[6,7],[-8,9],[1,10],[6,5],[6,3],[-9,9],[-2,-1],[-5,4],[-10,-1],[-6,-10],[10,5],[1,-4],[-6,-6],[-7,-1],[10,-2],[4,-6],[8,5],[-10,3],[8,5],[-7,-6],[-7,-8],[-9,-5],[-10,-4],[4,-9],[9,-8]], dtype = "uint8")#candidate|6167|(27, 2)|const|uint8
var_6168 = relay.var("var_6168", dtype = "int32", shape = ())#candidate|6168|()|var|int32
call_6166 = relay.TupleGetItem(func_3006_call(relay.reshape(const_6167.astype('uint8'), [1, 6, 9]), relay.reshape(var_6168.astype('int32'), []), ), 2)
call_6169 = relay.TupleGetItem(func_3010_call(relay.reshape(const_6167.astype('uint8'), [1, 6, 9]), relay.reshape(var_6168.astype('int32'), []), ), 2)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_6173 = relay.TupleGetItem(func_4993_call(), 0)
call_6174 = relay.TupleGetItem(func_4995_call(), 0)
func_5240_call = mod.get_global_var('func_5240')
func_5243_call = mutated_mod.get_global_var('func_5243')
const_6186 = relay.const([-7.876950,-6.173179,0.038163,-6.850822,-8.950639,4.908227,1.760683,9.767675,6.707492,-8.608295,6.781744,-5.102465,5.343929,1.636220,9.617426,6.119350,5.312313,1.735496,-6.402681,-5.364793,9.246345,6.483980,5.435068,0.140083,1.045491,-2.853838,-6.277627,9.425392,-3.360240,7.027146,-1.547365,8.728041,-2.439585,-2.679399,-8.957428,3.387754,7.852128,-1.678070,-2.722997,2.003972,-5.656075,-8.993994,-4.749979,-6.067296,8.167361,-4.972496,-4.398104,3.590143,-6.055963,7.540130,-0.708436,-3.961496,-0.370846,-2.462210,-0.523850,-9.864177,0.505037,1.931506,-5.226351,2.999339,3.681681,4.141021,6.906474,1.809464,5.051023,3.784813,4.278880,4.276578,-9.099301,-1.322637,9.322461,8.348726,-1.334227,-5.663070,6.654742,-8.403569,7.542802,-3.544953,-3.564608,-0.930576,0.425648,1.050697,2.281306,-6.696634,6.528032,-8.913068,6.827263,8.975931,-4.159141,-7.034758,1.264157,8.443943,4.718517,-0.129113,0.840046,5.852734,-4.731028,9.810424,3.814707,7.190536,7.762777,1.297830,-8.339351,-3.907393,-6.515199,-5.879691,7.012850,-2.065886,2.654561,-3.132527,1.574902,4.159173,-8.634416,0.182895,-0.544733,-4.679009,-4.004632,-4.140800,4.500089,2.313879,-3.627180,8.055025,7.270107,-1.283931,-8.677093,7.213366,-9.118671,1.417943,-8.445898,-8.238578,-2.482084,-7.832064,-9.195035,0.419335,1.842974,9.914380,-7.261291,9.129842,-9.602826,-3.357078,-9.907053,-8.790903,5.886083,3.036374,-1.490943,-1.268702,7.338895,3.734885,-7.422163,2.557509,8.380533,6.613370,8.919315,-6.770819,-2.063933,8.355890,-7.356270,2.625184,1.675289,3.255069,-0.891252,-0.418452,-7.805051,7.797073,-5.149902,-3.668788,5.231225,0.868112,-2.104990,-6.022939,9.625765,9.507850,8.890110,9.827321,-0.534645,-2.361395,-9.681779,-7.088936,-6.454579,2.285673,-5.448097,-6.516078,2.950390,-0.683645,1.794241,-1.498767,-6.273097,3.846122,-1.248952,0.345991,4.051073,3.987288,-1.890126,9.036505,6.951633,-6.322975,-1.583112,8.508843,-4.291315,-9.660928,-4.409282,-4.986387,-3.279181,-5.988957,-8.905302,0.213126,3.297303,-7.432669,-1.093274,-6.463878,-5.433273,8.988087,-7.809766,7.853248,6.305682,-5.440478,-2.734294,-6.393181,-1.518321,-6.682069,-3.465297,7.995457,-3.938829,-0.852243,7.398494,6.082143,5.645809,-9.927467,8.481130,-5.967799,8.795350,9.928928,-4.659538,3.958328,-3.773596,0.129429,3.443453,1.304068,-5.572234,5.934976,-6.802892,-8.389045,7.786672,0.177713,-4.082036,2.285273,5.673871,2.367817,1.840807,-4.634357,-7.214006,-8.090040,-4.078830,-5.704537,7.637608,-8.230937,-4.185425,5.207265,-9.886463,-1.639331,7.661138,-8.385881,-3.300979,-7.741869,-9.800037,-1.317079,-6.566305,6.556357,-0.481175,-5.451776,1.934555,3.331561,0.442301,5.695567,-4.024402,-4.839055,-9.093113,-7.140001,-4.448414,-5.045896,6.325879,-3.938900,4.167157,8.093213,5.589334,-0.358311,-3.129083,-1.990229,-1.666278,9.421517,9.592925,-3.507789,2.651884,2.313314,0.928124,-4.079931,-7.989727,9.766206,-0.397303,3.908669,-9.977732,-0.906106,9.487243,-5.206071,9.249522,-8.208990,7.207441,-9.416933,3.521132,-7.500862,4.621679,-4.897339,4.126761,0.760536,-9.301073,3.512227,-4.237081,2.381456,-8.392405,-2.884721,-7.353958,6.379632,2.198957,-3.822579,2.784098,-8.356639,7.357650,-5.235725,-8.075761,9.311836,-4.990467,7.015477,-4.098377,-6.873285,-8.205169,-2.653090,-6.857233,-8.089028,2.299888,-0.726462,0.617141,0.880973,9.011409,-9.697819,-0.341498,-3.607523,-3.695473,9.141309,1.858730,-3.380244,-0.089809,-4.623532,-5.394184,7.743664,9.803733,-5.202398,-6.858376,1.080486,0.751142,0.932266,8.474003,-0.080762,1.383861,8.069322,1.965690,-9.444220,-1.384888,-1.906823,6.601766,6.093310,-3.074872,7.192042,8.794917,-8.470152,-9.771017,-2.017193,-4.008936,-6.791459,4.075699,-7.024539,6.678446,-9.401953,6.987375,-3.802429,-8.194635,7.662130,1.052999,1.879387,2.794341,2.353702,6.749128,-1.994964,-3.501897,0.369038,-6.549776,-3.011851,-3.766888,7.223677,-8.964339,-8.045144,0.228579,7.235800,3.481258,-0.661251,-9.862630,-0.238655,7.383442,6.732977,1.958697,4.126681,-0.962502,9.830697,8.253767,-1.250842,-0.138499,-2.388797,-3.034286,-7.964616,2.870757,4.797221,-9.825302,2.716135,-5.492799,2.960172,-0.296854,1.178487,5.726152,4.408006,0.814719,-8.824228,7.624175,-1.510599,-1.888805,9.253544,3.285691,5.072491,-4.552786,9.978470,-1.048364,6.119195,-9.209933,8.735396,6.869066,-9.380620,6.198327,4.555804,2.020861,-0.896480,-7.349982,5.955903,-5.488073,-3.031576,-0.775019,1.544028,-4.814309,4.655573,0.694504,-4.932610,8.114220,-3.465255,6.349184,1.885693,2.761416,-8.323053,9.035616,2.649501,0.994877,5.541659,4.373779,-8.914486,5.924099,-6.169199,-3.665343,6.152516,8.869440,-4.726307,6.580256,-2.576196,-3.282190,8.949711,-7.274490,4.739282,-0.625830,2.298240,-8.645111,5.220971,8.866556,-1.255765,0.906611,-9.514194,6.025017,8.878190,-7.490898,9.416842,3.850889,3.391119,4.540051,8.217483,7.300347,-1.244026,-7.985325,9.082004,0.237820,1.852659,8.896252,-2.344573,1.949488,-8.479421,8.471682,-9.313461,-8.811274,-7.231331,-8.773317,1.543279,2.964199,8.753003,1.758875,6.189375,3.555713,7.204045,-9.005857,0.773340,-2.131074,-7.419076,-1.255323,-4.867966,-4.547980,-6.682251,-5.296625,-1.807966,7.907403,5.212723,-8.476045,-3.141188,4.636702,-6.077822,6.193942,3.213994,0.203406,1.646141,-9.865614,-8.489115,-4.568231,-9.864944,-4.386636,-7.426202,-9.552034,1.657892,4.309926,-9.055691,5.317270,-2.101640,2.982568,-7.936770,4.847436,-4.643436,7.124193,-7.771805,7.414174,-8.362655,0.543808,-8.496211,-9.509019,-9.089878,6.223460,7.617029,-0.860806,6.568387,8.380959,-3.207510,2.673600,7.258401,-8.112555,-6.048585,-7.503189,6.734270,-4.860399,4.486502,8.593133,-1.391505,5.239178,-2.191594,6.989578,5.915159,1.966896,-1.458435,-5.676036,-4.282939,4.683485,-0.276886,2.901505,-7.033605,8.608497,0.772582,0.265664,4.335304,5.056466,-1.097466,1.730428,9.630730,-1.819619,5.700325,2.136826,6.805087,9.846382,-7.373486,9.136889,-7.294653,8.544250,-5.211094,5.005445,6.930466,1.815313,5.012428,4.288992,7.027827,-8.402082,-5.816729,-2.965395,4.599364,8.984259,6.041253,-9.305475,-9.109368,5.145615,-8.983743,-1.273343,9.936238,-9.894768,2.365805,9.510510,4.376678,1.971529,-4.921573,1.146717,8.501687,9.169757,2.365458,-4.343431,5.639635,-4.411269,-7.830920,5.196532,-9.564886,2.091969,7.994798,5.063306,-3.403809,-6.168888,-3.976134,-5.859399,6.178963,-1.383026,1.392284,-6.336874,-3.679182,0.167398,1.752294,-7.521082,-0.369161,8.395093,0.306289,-4.665260,-0.852303,-8.527408,-4.955292,-1.820188,-3.583628,-1.827216,-1.232139,2.018812,-5.250102,8.340877,0.957970,8.948214,4.042196,-9.215763,6.688698,6.063746,2.890579,3.201804,-5.321165,3.197498,-0.752097,4.980791,-1.205876,-0.202372,6.176904,2.485475,9.764839,-5.340172,7.178572,7.618469,9.237369,-8.903634,-7.664386,-1.677106,-5.343835,-1.412127,8.418716,6.824894,-8.741273,-6.826981,3.388209,-3.061082,3.709885,-1.843329,5.948668,4.861062,-2.173441,-9.440511,0.479366,4.078545,-5.803331,3.633671,9.120102,-2.211627,-1.570368,2.193659,-3.697169,-4.262289,-0.100402,-0.335348,2.523980,-5.329617,-2.794913,-4.179655,7.327548,3.959070,7.150601,-8.695771,9.924884,-5.443932,8.975352,9.390962,-1.579433,4.589365,-7.798949,-4.861085,-1.993685,9.780658,4.068552,-5.837029,-1.603345,0.786256,-6.396127,-8.537567,-5.184567,2.584245,8.900784,4.108245,3.447862,-6.284781,-3.242697,8.135260,-2.555443,4.859216,-2.371788,-5.474783,4.997897,2.182661,8.866151,6.837678,-7.187352,-6.255071,-6.643438,6.834456,-2.923227,0.080084,4.963369,5.316438,-9.913484,5.214691,5.420716,7.069635,3.926487,-3.030223,-6.480356,-0.460138,7.698417,-1.106293,-8.905448,0.304562,-2.705087,-9.550553,7.132191,3.207483,-0.007069,-6.458094,-7.008070,6.255883,-1.004877,3.891071,3.323468,-1.455881,-3.351661,-1.049092,-6.203193,5.899861,8.138504,-9.450352,-1.838548,-3.004766,7.393500,-7.418252,-1.223542,3.304621,7.198991,3.752250,8.277651,6.097262,0.411937,-6.571802,6.622897,-8.909389,2.662712,2.772182,-3.968447,3.909796,6.580619,5.321894,2.156572,-3.857589,4.754617,8.407880,1.411957,-2.101916,8.092470,2.028794,2.213564,5.392650,-9.502552,-3.885342,-1.520591,-4.348673,6.481465,6.975500,2.615400,1.664790,6.099209,4.872636,-2.704243,8.995761,-8.609747,-7.558274,-2.575611,7.472567,0.839068,8.451341,5.186430,8.220414,-5.323390,3.868502,-9.733690,-8.637247,9.829584,4.939120,-3.231613,0.892646,3.709467,-2.362915,8.996197,-3.342783,1.199589,-3.028638,-7.084517,6.708561,-9.308200,-9.830201,2.024425,8.857033,-0.247546,-1.741135,8.508936,6.017064,-9.260295,3.862097,1.290279,-5.441344,4.756074,9.006713,-5.810270,-7.994412,5.272373,7.951013,-1.326368,-8.693606,0.389024,3.434976,-0.959168,9.522250,-3.383326,7.023368,4.207712,-6.724743,-5.732841,-8.047008,-6.462368,-0.419702,7.728788,-0.993689,-0.417110,-1.124493,-5.127986,-2.210312,-1.307329,8.064050,-5.404448,9.902998,-2.421397,7.239311,2.025479,4.310748,-9.806175,-2.579846,9.057460,4.362276,8.385356,-8.782815,3.900779,-3.369321,-3.867102,-7.244725,-8.443128,-6.580351,4.731825,-2.522432,8.194080,-8.681081,6.023717,8.921776,-4.799567,-5.189308,-0.463540,2.329756,6.844842,-4.002333,1.195485,9.104707,-3.151009,-8.840906,1.909734,-5.587551,-1.238501,-0.077890,7.512895,-2.013694,2.512518,2.866015,5.748117,0.788182,4.567217,1.601370,4.765710,-8.012222,-1.922393,1.119848,5.552840,9.005213,3.022846,7.639840,3.444260,-3.595636,-1.650352,6.737057,-7.698480,8.993515,-6.219183,-1.569469,4.362403,9.007112,4.398034,8.775811,-9.877683,-5.921571,-6.783548,7.344011,0.369419,-1.139138,7.117888,-7.273464,6.442358,6.324916,-3.956694,1.814771,6.684376,5.221073,2.441582,3.100375,8.810568,8.255524,-8.960399,-1.755166,-6.943793,6.687303,-9.382695,9.475246,9.394516,0.207129,-9.648523,3.337475,3.615594,-1.276283,7.077580,-8.491123,8.863706,8.441729,-0.429552,-3.024897,-7.332977,2.837910,7.309074,-3.411811,4.389842,-0.780086,-1.600031,6.785158,-3.771473,7.650654,-8.009577,7.217907,5.814397,0.278200,-3.393287,0.186368,2.023967,8.853978,4.091746,-6.991005,5.328489,6.144698,-9.211785,3.655612,-6.155571,3.438064,-4.289323,3.731537,7.614392,-6.904108,-5.097642,-5.767547,-7.979497,-1.907044,-8.720078,-0.140843,2.625442,4.414453,9.997078,-1.538162,1.764996,-6.180159,-4.036151,-5.651127,-8.326416,0.729439,-1.860625,-6.445348,1.863346,-5.217722,5.633923,9.438659,-0.215421,6.414641,5.292802,-8.514807,6.407907,8.020246,-6.979816,6.930763,-1.777548,0.412317,-4.541865,6.071427,-3.579213,9.765969,-9.727723,-8.842850,-6.887516,-7.331140,2.000688,-0.833451,5.525750,7.958087,1.291760,-5.424411,0.815453,-7.181284,-8.997038,-0.981162,-6.625937,-9.794080,-2.149792,4.015092,-8.384916,1.793682,-7.339541,-9.685196,7.003769,8.859513,-9.010180,-2.285924,3.142569,-5.989755,-2.919446,-6.822469,-6.710008,5.624859,1.360746,9.364960,2.194177,-4.147544,2.742984,6.812899,-6.304096,4.445468,1.166038,-5.784868,5.178273,-9.069877,9.125963,-9.410008,7.117637,3.900963,-4.078442,8.971016,2.221263,-9.427500,-2.926468,9.135345,-9.390066,-2.734648,-4.233307,1.574828,8.526390,8.950827,-2.736077,-1.625352,5.508358,2.628637,2.962008,5.639113,-3.191909,0.303906,-1.991995,0.706601,2.544541,-0.141225,-7.989638,4.645453,8.864408,6.142874,-2.094279,7.036523,8.789606,-3.740536,9.093940,9.134091,2.965892,5.698578,9.762092,-1.610834,-3.119422,-9.494660,-5.346522,-8.999839,-7.752733,-9.404963,3.937944,-8.791655,-4.806537,7.455949,2.027971,3.659490,2.266245,-3.382609,3.620951,-7.127990,6.470107,-3.099928,-8.999259,5.995422,-9.822542,-6.036260,2.798860,-4.039502,7.955826,-8.062349,-4.170577,3.110060,-4.334699,-3.223364,-5.678105,3.654352,6.249629,-4.376772,-3.651668,-9.815586,3.088829,-5.592946,-1.119096,-0.970732,7.146854,-0.005524,-8.280087,8.149398,3.122868,-9.879675,-5.250092,9.407075,5.037681,-3.101824,9.195075,9.983677,1.458638,2.588619,-0.309864,8.900943,-1.302139,-9.749293,5.402298,7.044542,0.887471,-1.162732,6.622157,-7.712713,0.508850,-7.325071,7.000882,2.779365,-1.960785,-3.523276,-9.871807,-9.211400,0.984131,2.016863,-7.637686,9.720847,-9.103974,-9.504062,6.757256,4.958785,3.835817,4.250115,8.341252,0.579388,-5.905156,-4.305812,2.907239,1.040975,1.228445,6.441687,-5.259340,-1.301808,-3.382240,-9.899709,2.751183,1.096560,-6.555371,6.743272,9.515890,8.349228,6.501227,5.463581,-3.808954,6.362967,3.191636,4.481887,-1.864987,4.276072,-4.473480,-1.619516,1.493776,-1.521501,3.301108,6.135971,-1.588499,-2.046556,-0.617845,-1.252661,-3.128423,1.894474,-9.440686,5.225943,-3.356482,-1.570029,2.585792,-8.128621,-6.821483,-5.209435,-1.987947,-2.426810,-6.013909,-3.556587,-2.154889,0.805476,5.040362,9.990296,1.864483,-9.763927,5.644774,2.656336,8.508075,1.168523,-9.064629,4.474698,4.597225,-2.537031,-9.191231,-5.142518,0.675921,-5.403829,-0.750440,1.323426,-4.218302,5.900319,-7.430369,-5.712965,-1.279018,6.304854,9.274234,-7.233748,-4.069490,-3.825022,7.962664,-7.775579,-4.799930,2.638178,-5.622301,6.558267,-5.504577,-2.041968,9.960651,4.743026,-7.025503,-7.296771,0.554585,-6.765016,0.203058,2.531993,5.724077,-5.698536,-4.934170,7.638863,-5.256095,6.848302,7.211519,1.628370,3.385296,6.584295,8.080262,3.461370,-9.005246,-7.088942,2.168721,-4.265901,7.655667,-6.814375,1.358359,-2.975859,-0.032355,-2.052367,3.147343,-4.653086,-3.974174,-5.330473,-5.372253,2.805652,9.942158,-0.901250,6.251365,-2.772297,5.654432,-8.705929,-3.303965,-0.950957,-5.643151,-5.365123,-2.353817,-9.790938,-8.507369,-9.019711,7.457831,3.132136,-6.819987,3.364048,9.331271,-4.563185,-1.293490,6.556195,-5.114884,-4.189456,-9.208598,-5.539826,4.818219,-1.766204,-5.785484,-1.096965,-9.733169,-4.509406,-9.880819,-0.749497,1.402095,-4.723780,0.952692,-5.118298,-8.990926,-8.590233,-2.951511,6.757318,-1.224705,4.767975,6.185956,-9.706729,-0.411752,-2.105686,-5.746572,-0.472717,8.140703,0.112098,-0.377328,-5.934874,-3.469696,5.157213,-4.069242,3.602523,-4.229287,0.333759,-2.436420,9.824554,-9.377863,7.406804,-3.346140,1.222840,4.848390,-8.396080,-4.701967,-5.614851,-4.374000,7.677846,-6.656587,5.907034,-9.202911,-3.130405,-6.662259,4.503565,2.629968,7.360113,-8.492469,-7.057770,7.411342,6.527126,9.953567,2.949735,4.496437,-3.043255,4.089627,6.153581,-0.329686,-3.187819,6.979566,-6.191957,0.986570,2.268825,-9.392999,4.034092,-7.544351,9.481361,-3.643795,0.644370,-8.967020,8.596579,3.704305,0.350839,0.690829,-7.800795,7.151190,7.654347,-4.729266,-5.093788,-4.594554,6.725679,-2.066335,7.982438,8.692813,-8.426247,-9.234365,3.983973,-3.239908,-8.339718,-4.691720,4.224563,3.423970,-9.405365,7.634928,-7.618800,-1.046136,-5.731885,-5.408120,2.678112,4.332508,3.797893,-7.162632,1.718899,7.150352,-1.118197,0.879028,3.747511,-8.273537,-3.775708,-8.911097,-5.673647,-0.517298,9.691892,-1.124012,-6.726120,0.051905,9.101046,-0.299641,-0.547415,-5.627979,-5.482432,-2.644251,-8.939378,0.840982,-1.124795,8.548095,6.986066,-5.830744,1.124837,1.753175,-3.133382,9.821968,-6.337634,-4.662107,-4.226144,0.680464,-5.782986,-2.684181,4.969262,-7.731685,-7.157448,-7.484206,4.559933,-0.077648,5.156144,1.255101,-2.152820,0.286513,-5.807241,-2.146546,4.361249,8.609504,4.714030,-4.940235,-4.487609,0.556838,3.801569,-1.783911,-5.831612,1.455887,-7.422134,5.102433,6.838175,-2.805513,-6.873795,-1.656545,-2.923980,-5.360929,-9.436249,-8.430259,3.157346,1.806243,4.802984,6.621234,-3.997777,1.182914,3.003317,-1.175284,-0.417777,8.853854,7.330672,-8.618177,6.945020,2.941440,4.252674,-8.218571,6.482833,1.629020,5.489608,-1.885495,6.903514,3.582713,-2.892443,-8.893293,-0.393091,-1.483033,8.640104,5.258655,9.689733,-2.178642,2.467996,6.861451,-2.324957,7.875887,2.762241,-1.466819,-9.520671,-6.045050,2.184641,1.171232,-8.016570,1.209637,-9.331997,-2.541959,4.545920,-4.112739,-3.162057,-6.757669,1.506711,-0.339497,6.014501,8.258591,-8.731069,4.589549,-0.884927,8.127465,-7.068685,5.326303,-5.066860,-2.238111,-5.373145,-7.224270,-6.095071,-7.692722,-4.736335,-3.279119,0.522035,4.700873,8.169106,4.045753,9.054765,-5.751352,0.680514,-5.048428,-1.909305,8.991066,-4.373774,5.891488,-8.000713,-2.882274,-2.351553,1.427464,-9.450588,-1.178805,3.053138,-8.132861,-7.897513,-5.775086,-2.704595,7.171152,5.959058,3.124953,-6.866010,-7.290506,-4.389209,-6.911256,0.459315,-0.394263,-8.206927,-6.904876,-8.009287,8.457023,6.988336,-7.196118,-7.742328,-0.034034,4.405611,6.054477,-8.077674,-3.753844,-0.643267,-9.985266,-0.346826,-0.749598,2.043763,-1.295332,5.537138,-5.849800,3.376563,-4.354859,8.114386,1.010025,-8.667806,-0.608374,-3.900658,-3.127924,4.872706,2.804434,8.039195,0.903251,-1.503058,3.047771,7.284272,-2.579716,-1.665153,-8.952110,-2.868725,-1.235041,8.657658,3.441538,-4.771132,-7.597965,-9.209885,2.702352,7.459516,-6.190439,4.705380,3.377204,-6.051481,4.535357,-3.567016,-9.131331,-0.002381,-9.843268,6.554041,4.705313,9.264188,-2.778519,3.187126,8.052943,-1.333055,-5.883174,9.596656,-0.139387,-1.961001,2.755548,5.402219,7.881835,-3.004556,6.438591,1.865405,1.987326,3.647043,6.527506,-2.626886,9.290357,-2.635319,-5.895804,-8.878285,7.595304,-5.919745,0.708862,-7.577473,7.755562,-6.341071,4.004884,-3.967511,-1.692840,-6.828132,-2.014133,3.159646,8.514403,-2.862878,6.611467,-3.247016,1.929611,7.892270,-6.262745,6.289608,9.159869,0.140719,2.207173,9.503063,7.066333,5.478657,-5.437394,6.085720,8.276000,6.518183,-4.024289,8.517472,3.910089,1.314811,1.955929,7.692830,-7.947194,5.776098,-1.771980,-9.369478,-0.417080,-4.653026,-8.332305,-0.931550,6.518714,-0.453022,8.363199,9.694121,8.153314,-7.440054,0.610557,4.789303,-1.435313,8.930531,2.712925,-1.742115,-6.494522,7.234112,9.389904,-8.474381,0.718896,-8.743530,-4.149281,1.167663,-5.689642,-1.554400,-3.469338,-0.922461,-2.191555,1.548720,1.904744,4.303510,-6.680389,-3.907090,-2.042015,-6.511094,4.031854,-4.138578,-9.215139,6.629802,-0.541718,-1.861825,0.256279,9.652888,3.577312,-8.850211,1.533969,-4.212314,-6.847358,3.217230,2.368942,-3.830905,-6.783337,-7.989691,2.827388,-0.825202,-1.356254,-2.171759,8.600656,7.926567,-2.415572,7.468198,-6.803325,-0.988747,-7.600926,1.327744,3.306318,-5.555895,6.266394,5.047074,0.047797,-8.870564,-1.963986,0.413661,-8.061483,-1.885533,-0.714787,-9.399052,4.908716,6.628659,-0.479835,9.204305,0.189422,-8.506561,8.244597,4.766559,0.650088,-5.478321,-3.612373,9.133523,-6.291497,0.122605,3.257578,7.010421,-8.848410,-4.763709,-0.310394,6.273831,9.551818,-6.565955,7.502612,3.601276,4.251842,-0.011432,-8.279331,-9.048076,-9.809967,2.694498,-6.578137,-4.772808,-2.347745,0.921848,5.394634,-5.180984,-8.014383,9.465754,-9.122438,-7.373273,-2.195005,7.956583,-9.900014,4.032230,2.917519,-3.564995,-0.857007,6.870514,6.449158,3.814937,4.899195,-9.886514,-4.679851,8.464784,-7.431478,-0.331479,-2.122243,7.845712,7.523768,6.003128,-8.588040,-3.230633,0.236965,9.874227,6.666651,8.466972,-8.730502,-9.369861,4.542430,8.298670,-6.255823,-8.772125,9.656527,7.210697,-9.163222,9.335151,2.506211,2.849217,6.723151,5.150950,1.126062,7.440162,-7.869996,-7.602278,5.385446,-3.564031,6.293215,6.564666,-5.270053,-2.321115,8.841135,4.373646,8.087156,2.147666,8.611849,3.633403,1.653847,-6.500790,6.007672,5.229289,-8.255022,-3.001092,-5.683597,-2.191626,-5.496399,-0.011084,2.278035,-5.926249,-8.186011,3.034982,6.343630,9.771030,-4.404342,-8.724966,-9.164755,-1.427078,1.332066,4.597222,-0.519102,7.492034,-9.686070,5.504803,5.741001,-5.446334,0.375433,-5.084645,7.675893,-1.998516,2.204835,7.138252,-0.041920,7.239362,-7.096434,-9.998886,-6.466644,0.710464,6.212505,-5.156367,7.078296,-9.897796,2.808262,4.780664,-2.682272,-8.331337,-8.939498,-0.067064,2.736755,2.384899,-0.779881,5.337743,7.522749,8.351171,3.939643,6.228110,-0.990578,9.420547,-9.789640,-8.133965,-0.350639,8.635973,-8.321773,-3.061198,0.993739,7.548341,0.503837,-6.362416,-1.501842,2.008681,-1.263775,-8.938833,-1.419504,-9.363753,-6.435841,-7.156965,7.789718,5.152007,8.484603,0.785060,3.275357,-4.288414,3.453361,9.435971,-2.285283,5.166472,-4.901942,2.420590,-8.843980,3.894433,6.514807,3.167250,3.900882,-2.036902,-5.124474,4.429674,8.703804,-6.205771,4.860421,-2.856139,-3.295236,-6.126842,5.943797,-6.869304,3.571466,-6.451537,6.013686,1.095581,-3.611060,5.405579,9.265778,7.566671,-1.642534,-6.203832,3.509144,2.681584,-9.436180,-4.882610,6.892872,3.431081,7.404718,1.018010,-8.142096,5.995380,2.869485,4.915137,-0.066712,3.979808,0.885452,-4.963464,-7.271383,-7.989073,6.674616,-3.730873,8.509195,8.946335,7.433056,5.456415,3.686940,-2.296842,0.695925,0.250338,-1.184114,-4.526656,-9.704905,6.827144,-3.817857,-1.258024,-4.429856,3.078145,-4.565524,-2.667714,9.296723,8.618801,8.686277,3.666987,-8.321155,-3.907816,6.175892,-8.664868,4.139694,-6.092787,0.761120,8.755039,6.248535,-6.415755,7.404033,6.461425,-6.116227,4.181605,9.391026,1.505362,2.657922,-5.024712,-3.685055,4.419705,-5.257015,-3.148381,-7.617842,-6.036144,-7.959657,5.004904,6.234918,-0.160851,-3.812286,5.229410,1.148105,4.195892,-2.630590,1.742610,-4.703730], dtype = "float64")#candidate|6186|(2156,)|const|float64
var_6187 = relay.var("var_6187", dtype = "int32", shape = (256,))#candidate|6187|(256,)|var|int32
call_6185 = relay.TupleGetItem(func_5240_call(relay.reshape(const_6186.astype('float64'), [14, 14, 11]), relay.reshape(var_6187.astype('int32'), [256,]), ), 2)
call_6188 = relay.TupleGetItem(func_5243_call(relay.reshape(const_6186.astype('float64'), [14, 14, 11]), relay.reshape(var_6187.astype('int32'), [256,]), ), 2)
func_4279_call = mod.get_global_var('func_4279')
func_4281_call = mutated_mod.get_global_var('func_4281')
call_6193 = relay.TupleGetItem(func_4279_call(), 0)
call_6194 = relay.TupleGetItem(func_4281_call(), 0)
output = relay.Tuple([bop_6157,call_6166,const_6167,var_6168,call_6173,call_6185,const_6186,var_6187,call_6193,])
output2 = relay.Tuple([bop_6157,call_6169,const_6167,var_6168,call_6174,call_6188,const_6186,var_6187,call_6194,])
func_6197 = relay.Function([var_6155,var_6156,var_6168,var_6187,], output)
mod['func_6197'] = func_6197
mod = relay.transform.InferType()(mod)
mutated_mod['func_6197'] = func_6197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6197_call = mutated_mod.get_global_var('func_6197')
var_6199 = relay.var("var_6199", dtype = "uint8", shape = (11, 14, 13))#candidate|6199|(11, 14, 13)|var|uint8
var_6200 = relay.var("var_6200", dtype = "uint8", shape = (11, 14, 13))#candidate|6200|(11, 14, 13)|var|uint8
var_6201 = relay.var("var_6201", dtype = "int32", shape = ())#candidate|6201|()|var|int32
var_6202 = relay.var("var_6202", dtype = "int32", shape = (256,))#candidate|6202|(256,)|var|int32
call_6198 = func_6197_call(var_6199,var_6200,var_6201,var_6202,)
output = call_6198
func_6203 = relay.Function([var_6199,var_6200,var_6201,var_6202,], output)
mutated_mod['func_6203'] = func_6203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4221_call = mod.get_global_var('func_4221')
func_4223_call = mutated_mod.get_global_var('func_4223')
call_6221 = func_4221_call()
call_6222 = func_4221_call()
output = call_6221
output2 = call_6222
func_6226 = relay.Function([], output)
mod['func_6226'] = func_6226
mod = relay.transform.InferType()(mod)
mutated_mod['func_6226'] = func_6226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6226_call = mutated_mod.get_global_var('func_6226')
call_6227 = func_6226_call()
output = call_6227
func_6228 = relay.Function([], output)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mod.get_global_var('func_3583')
func_3584_call = mutated_mod.get_global_var('func_3584')
call_6256 = relay.TupleGetItem(func_3583_call(), 0)
call_6257 = relay.TupleGetItem(func_3584_call(), 0)
output = call_6256
output2 = call_6257
func_6274 = relay.Function([], output)
mod['func_6274'] = func_6274
mod = relay.transform.InferType()(mod)
mutated_mod['func_6274'] = func_6274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6274_call = mutated_mod.get_global_var('func_6274')
call_6275 = func_6274_call()
output = call_6275
func_6276 = relay.Function([], output)
mutated_mod['func_6276'] = func_6276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6040_call = mutated_mod.get_global_var('func_6040')
call_6328 = func_6038_call()
call_6329 = func_6038_call()
func_4786_call = mod.get_global_var('func_4786')
func_4788_call = mutated_mod.get_global_var('func_4788')
call_6343 = relay.TupleGetItem(func_4786_call(), 0)
call_6344 = relay.TupleGetItem(func_4788_call(), 0)
func_5605_call = mod.get_global_var('func_5605')
func_5607_call = mutated_mod.get_global_var('func_5607')
const_6351 = relay.const([9.376870,5.131133,-2.487801,7.822427,-0.338178,8.502367,4.686362,7.641559,0.346295,-6.104309,-3.773598,7.261292,8.384217,2.864356,4.330471,-0.776806,8.724689,-1.770266,6.400664,8.298379,-6.702539,-4.588413,2.875790,-6.314788,-4.681500,-6.215963,9.327982,-2.880387,-5.519211,8.490794], dtype = "float64")#candidate|6351|(30,)|const|float64
call_6350 = relay.TupleGetItem(func_5605_call(relay.reshape(const_6351.astype('float64'), [6, 1, 5])), 2)
call_6352 = relay.TupleGetItem(func_5607_call(relay.reshape(const_6351.astype('float64'), [6, 1, 5])), 2)
func_2728_call = mod.get_global_var('func_2728')
func_2730_call = mutated_mod.get_global_var('func_2730')
const_6375 = relay.const([[-3.991475,9.982545,-7.894066,1.920654,5.941568,-5.343789,2.228030,5.676450,-5.265894,-7.947750,-4.856263,5.452987,-2.679353,2.266311,-3.494381,-2.799185,1.168833,-1.693612,-8.149571,-7.502144,5.659499,-2.659765,-3.386652,8.126741,1.026229,-6.654789,-2.106968,-7.076087,-1.845191,5.573061,-9.273651,0.722440,8.653459,1.165268,-6.213737,7.113787,-9.100345,-0.482051,-0.432488,-6.709101,9.216439,4.522584,-7.337581,-8.457806,7.576816,0.242831,-4.144052,-9.803224,8.842392,6.368783,7.622099,0.223916,-7.414537,-5.228140,4.422805,-3.774133,-3.785836,3.509008,2.757317,9.529405,7.850285,-7.252912,-0.267418,-1.046551,8.377530,9.254888,-6.064082,-7.741501,-2.666541,2.372796,2.783598,-9.302062,3.923957,-6.601001,-8.265896,-2.432991,0.774649,3.499836],[8.629961,6.260667,4.243433,8.185043,8.560899,7.116559,3.699224,3.715826,-3.349276,-1.537386,3.812512,2.732168,-0.564933,-6.092274,-9.839647,4.654791,6.450577,-9.000963,3.793475,-0.533288,-5.943734,-6.951506,1.031131,-3.593987,-9.246819,6.174025,-8.538768,1.010364,-1.578115,-4.352174,2.075329,-6.367146,-5.262974,0.273545,6.783797,-8.940324,0.648415,8.823659,-0.283320,9.524765,-9.694357,4.128796,9.435643,6.903314,-0.664900,-8.300290,-3.333671,-0.496826,-7.889098,-5.110720,0.255972,8.510179,-8.743325,8.702350,-1.530504,3.110732,-1.824006,0.986382,3.797715,5.366269,-6.802505,1.362393,7.192857,7.426937,4.624875,8.600512,-0.272049,-4.671203,0.585026,-4.379081,-6.163326,-8.542481,-3.258037,-5.687265,-2.937265,4.217456,7.700455,3.637872],[-5.567482,-8.973066,9.664996,-5.785596,-1.955111,-9.324935,1.277089,-0.519923,-1.062709,-9.408239,-0.212636,-7.535457,-4.393152,-0.599529,-3.602557,-5.226082,-3.555495,-7.437898,-4.305148,-4.068000,6.421460,-3.834872,7.646714,-1.405015,3.568673,-4.447015,2.008682,3.427654,-5.459436,-7.422802,4.433524,8.381726,0.371170,6.076645,-6.442777,7.630780,-1.330253,-9.039079,-6.304050,2.394275,2.659400,8.956811,-9.491433,2.558092,-5.651345,8.388241,-6.604821,-7.934638,2.358752,-8.178735,4.348688,8.471857,2.307054,1.685031,0.902731,-0.288721,-1.312725,5.499453,-9.589137,4.977597,-8.499964,-5.541124,1.716045,8.470803,6.021718,-6.429922,7.276940,-6.515438,-3.114894,-0.840434,1.869688,-9.487031,-7.491601,-0.079845,-6.656558,-6.664930,6.822367,-0.186506],[7.090868,2.033628,3.131374,3.268030,0.240246,8.361501,8.872002,0.996020,-1.388871,-2.797458,-6.832589,4.281497,-5.849410,1.624640,6.528587,-5.435924,6.557890,1.330844,3.480192,9.322902,-4.970547,-0.955692,-4.558739,-4.147563,-2.536745,-9.237702,-9.484508,9.029365,6.056956,-7.102641,-7.481728,7.982542,-3.904876,-1.520822,2.656895,-1.585642,4.049734,7.760051,1.722766,-6.544311,-2.384409,-4.629773,5.077959,1.448476,-3.434783,9.278245,-7.533107,6.150888,9.598863,-4.934800,4.011236,-2.465133,-6.791997,3.359450,-0.545322,2.766253,-2.177584,6.477448,3.394775,-2.964650,-1.915466,5.671733,-5.993424,3.929569,-7.652526,-1.334806,-8.017227,-5.015982,-2.118127,-6.410383,-8.208727,3.429067,1.773101,-6.943914,0.834978,9.688256,-0.605264,-4.938536],[7.902153,-6.666120,3.711333,9.589492,2.883489,-8.327616,0.654571,-4.208265,-2.440496,-1.857311,-8.390401,1.057207,7.716423,5.020828,8.835217,-6.435291,9.985069,-8.131233,8.081768,4.405815,-5.244649,-5.121673,-9.578100,7.701977,-0.258899,6.827404,-1.218341,-2.008966,6.611067,7.089810,3.833168,4.571679,-2.375123,-3.068054,0.197045,-6.090940,0.474410,-4.119809,-8.359074,0.236527,0.539157,8.866857,8.540079,-2.468633,-0.240639,1.161323,0.798147,-1.058188,-6.125103,-1.784285,-0.958121,8.183483,5.969610,-3.459043,6.843405,3.758413,-3.626766,-1.182990,-0.296825,-9.100025,-0.516391,4.736974,-4.964073,7.406080,-6.716683,-5.406004,6.960564,-7.714715,8.649306,-9.822393,-3.108328,-3.487888,-7.959410,-8.692726,9.473524,3.952970,-5.223877,5.462914],[4.277661,-5.184894,-3.073432,-7.945398,-1.413747,4.601401,0.045376,6.261207,9.861057,-8.509953,-1.393411,-3.948577,5.585310,-6.486525,-9.028769,-4.929286,-2.331485,4.202874,-2.476946,-0.181389,3.147101,-1.552037,0.263975,-9.317486,7.393561,7.866655,-4.994915,9.614836,9.578098,5.091254,-9.284752,0.924186,-9.703203,4.057808,2.157805,-4.489060,0.647780,7.005276,-4.710810,4.330140,1.414959,4.248146,7.455508,4.579033,-2.241929,-6.121907,6.157525,-1.310627,9.461450,-3.374411,6.961448,7.221869,6.448623,-0.115810,-0.148954,-7.689966,-9.067002,4.914333,-0.679404,-8.848246,-9.498188,2.278263,7.761437,9.674774,-6.625503,6.355932,-1.908489,-8.265964,4.450867,5.069498,8.283715,0.957886,-4.121939,6.760655,-2.285540,0.137484,-3.081419,-5.713620]], dtype = "float64")#candidate|6375|(6, 78)|const|float64
call_6374 = relay.TupleGetItem(func_2728_call(relay.reshape(const_6375.astype('float64'), [6, 13, 6])), 0)
call_6376 = relay.TupleGetItem(func_2730_call(relay.reshape(const_6375.astype('float64'), [6, 13, 6])), 0)
output = relay.Tuple([call_6328,call_6343,call_6350,const_6351,call_6374,const_6375,])
output2 = relay.Tuple([call_6329,call_6344,call_6352,const_6351,call_6376,const_6375,])
func_6379 = relay.Function([], output)
mod['func_6379'] = func_6379
mod = relay.transform.InferType()(mod)
output = func_6379()
func_6380 = relay.Function([], output)
mutated_mod['func_6380'] = func_6380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mod.get_global_var('func_5449')
func_5451_call = mutated_mod.get_global_var('func_5451')
call_6394 = func_5449_call()
call_6395 = func_5449_call()
var_6403 = relay.var("var_6403", dtype = "float32", shape = (11, 11, 6))#candidate|6403|(11, 11, 6)|var|float32
bop_6404 = relay.less(call_6394.astype('bool'), relay.reshape(var_6403.astype('bool'), relay.shape_of(call_6394))) # shape=(11, 11, 6)
bop_6407 = relay.less(call_6395.astype('bool'), relay.reshape(var_6403.astype('bool'), relay.shape_of(call_6395))) # shape=(11, 11, 6)
func_3990_call = mod.get_global_var('func_3990')
func_3993_call = mutated_mod.get_global_var('func_3993')
const_6409 = relay.const([-5.342101,1.264583,3.685721,3.806602,-9.214728,1.723352,0.395455,-8.492252,6.356381,9.384350,5.020723,-0.932175,1.003355,-2.184851,-4.838066,-5.337272,-8.939908,2.906996,-3.648275,4.119124,-5.659251,-9.772523,5.448720,-7.404798,-2.961289,-4.754614,-1.125354,5.880820,-2.170777,-1.194137,-2.452211,2.076437,-0.870824,0.554817,3.566152,-0.575253,8.621999,2.387019,1.266386,0.089630,6.598928,2.842308,-9.962922,-5.529658,7.741996,-4.542314,5.332948,-6.944379,-9.038367,-9.476646,-2.263045,4.379225,9.882423,-3.206698,3.204103,3.592912,0.660538,-3.221945,9.285441,9.577870,0.062636,0.562752,1.821559,5.377070,6.664278,-7.541545,-9.015134,5.308617,-0.418912,-0.426324,3.534922,8.800738,-8.379464,-7.071936,-3.885410,-1.126950,2.574271,-9.636447,-3.125951,-8.797693,1.721922,7.870566,9.216539,-3.995827,8.318015,7.943167,-6.436447,5.922990,-3.271887,-0.425046,4.908607,-5.853629,-1.904954,-2.141996,-7.203243,-8.277169,3.467771,7.582247,-9.543784,-5.550862,-1.399633,-0.995943,-5.507426,-6.793904,-6.883734,1.783236,0.504376,-3.526292,-1.443904,-6.862818,-5.504306,6.010380,2.957083,-9.028403,-9.058829,4.796450,-0.911796,8.989786,2.292304,7.201966,-0.376886,-7.390912,-2.367102,-2.762962,4.275576,-9.816614,4.465392,0.758664,-2.958772,3.662530,-9.816407,-9.904806,-7.659037,-6.472374,0.317815,4.796830,-4.403498,9.097333,1.905117,-7.955439,3.985189,-8.923659,-8.651504,5.979855,5.664854,0.629025,9.779352,-7.310611,8.079936,3.785765,-8.545448,-5.320851,-9.806451,8.666598,0.326995,-0.871589,-9.920362,-7.403981,-3.460503,-4.304711,-7.345887,-8.934499,2.626362,2.917162,7.661647,1.308192,-3.932480,-0.525444,3.269187,-9.797844,0.719891,2.071001,0.700064,-8.549005,6.283847,8.006847,-4.100289,6.802855,-2.938918,-9.771656,-5.274892,3.776631,-6.687237,8.917314,6.575254,-8.557511,9.716184,3.869968,1.786624,-6.744024,-4.415365,-0.048287,9.980219,-4.824340,0.292027,9.481381], dtype = "float64")#candidate|6409|(196,)|const|float64
call_6408 = relay.TupleGetItem(func_3990_call(relay.reshape(const_6409.astype('float64'), [14, 2, 7])), 0)
call_6410 = relay.TupleGetItem(func_3993_call(relay.reshape(const_6409.astype('float64'), [14, 2, 7])), 0)
uop_6421 = relay.cos(var_6403.astype('float64')) # shape=(11, 11, 6)
output = relay.Tuple([bop_6404,call_6408,const_6409,uop_6421,])
output2 = relay.Tuple([bop_6407,call_6410,const_6409,uop_6421,])
func_6431 = relay.Function([var_6403,], output)
mod['func_6431'] = func_6431
mod = relay.transform.InferType()(mod)
mutated_mod['func_6431'] = func_6431
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6432 = relay.var("var_6432", dtype = "float32", shape = (11, 11, 6))#candidate|6432|(11, 11, 6)|var|float32
func_6431_call = mutated_mod.get_global_var('func_6431')
call_6433 = func_6431_call(var_6432)
output = call_6433
func_6434 = relay.Function([var_6432], output)
mutated_mod['func_6434'] = func_6434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5306_call = mod.get_global_var('func_5306')
func_5307_call = mutated_mod.get_global_var('func_5307')
call_6481 = relay.TupleGetItem(func_5306_call(), 1)
call_6482 = relay.TupleGetItem(func_5307_call(), 1)
output = relay.Tuple([call_6481,])
output2 = relay.Tuple([call_6482,])
func_6490 = relay.Function([], output)
mod['func_6490'] = func_6490
mod = relay.transform.InferType()(mod)
mutated_mod['func_6490'] = func_6490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6490_call = mutated_mod.get_global_var('func_6490')
call_6491 = func_6490_call()
output = call_6491
func_6492 = relay.Function([], output)
mutated_mod['func_6492'] = func_6492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5836_call = mod.get_global_var('func_5836')
func_5838_call = mutated_mod.get_global_var('func_5838')
call_6516 = relay.TupleGetItem(func_5836_call(), 0)
call_6517 = relay.TupleGetItem(func_5838_call(), 0)
uop_6538 = relay.exp(call_6516.astype('float64')) # shape=(11, 11, 6)
uop_6540 = relay.exp(call_6517.astype('float64')) # shape=(11, 11, 6)
output = relay.Tuple([uop_6538,])
output2 = relay.Tuple([uop_6540,])
func_6547 = relay.Function([], output)
mod['func_6547'] = func_6547
mod = relay.transform.InferType()(mod)
output = func_6547()
func_6548 = relay.Function([], output)
mutated_mod['func_6548'] = func_6548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6113_call = mod.get_global_var('func_6113')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_6564 = func_6113_call()
call_6565 = func_6113_call()
output = relay.Tuple([call_6564,])
output2 = relay.Tuple([call_6565,])
func_6575 = relay.Function([], output)
mod['func_6575'] = func_6575
mod = relay.transform.InferType()(mod)
output = func_6575()
func_6576 = relay.Function([], output)
mutated_mod['func_6576'] = func_6576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_6648 = relay.TupleGetItem(func_3532_call(), 0)
call_6649 = relay.TupleGetItem(func_3533_call(), 0)
output = relay.Tuple([call_6648,])
output2 = relay.Tuple([call_6649,])
func_6656 = relay.Function([], output)
mod['func_6656'] = func_6656
mod = relay.transform.InferType()(mod)
output = func_6656()
func_6657 = relay.Function([], output)
mutated_mod['func_6657'] = func_6657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6547_call = mod.get_global_var('func_6547')
func_6548_call = mutated_mod.get_global_var('func_6548')
call_6658 = relay.TupleGetItem(func_6547_call(), 0)
call_6659 = relay.TupleGetItem(func_6548_call(), 0)
output = call_6658
output2 = call_6659
func_6682 = relay.Function([], output)
mod['func_6682'] = func_6682
mod = relay.transform.InferType()(mod)
mutated_mod['func_6682'] = func_6682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6682_call = mutated_mod.get_global_var('func_6682')
call_6683 = func_6682_call()
output = call_6683
func_6684 = relay.Function([], output)
mutated_mod['func_6684'] = func_6684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6682_call = mod.get_global_var('func_6682')
func_6684_call = mutated_mod.get_global_var('func_6684')
call_6688 = func_6682_call()
call_6689 = func_6682_call()
func_4854_call = mod.get_global_var('func_4854')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_6697 = relay.TupleGetItem(func_4854_call(), 0)
call_6698 = relay.TupleGetItem(func_4856_call(), 0)
func_5171_call = mod.get_global_var('func_5171')
func_5173_call = mutated_mod.get_global_var('func_5173')
var_6710 = relay.var("var_6710", dtype = "float64", shape = (720,))#candidate|6710|(720,)|var|float64
call_6709 = relay.TupleGetItem(func_5171_call(relay.reshape(var_6710.astype('float64'), [720,])), 2)
call_6711 = relay.TupleGetItem(func_5173_call(relay.reshape(var_6710.astype('float64'), [720,])), 2)
func_3348_call = mod.get_global_var('func_3348')
func_3352_call = mutated_mod.get_global_var('func_3352')
var_6729 = relay.var("var_6729", dtype = "float64", shape = (144,))#candidate|6729|(144,)|var|float64
var_6730 = relay.var("var_6730", dtype = "int64", shape = (2880,))#candidate|6730|(2880,)|var|int64
const_6731 = relay.const([-9.808935,3.464230,4.617198,-5.451089,-0.617048,-7.109419,7.439237,-0.501505,-1.020050,-2.928988,-0.252919,4.910626,7.668805,4.278225,-3.506359,-1.736853,-6.804599,8.749746,5.252594,-4.177861,-0.256233,-2.631638,2.235889,-6.177767,7.873185,-4.166381,-9.903414,-2.840644,-2.905014,-0.012696,-9.944724,-9.833939,-7.931019,-9.830484,5.672510,5.995641,1.101405,-4.931874,-8.271131,6.290155,0.746975,9.615361,9.053715,1.624070,2.188799,-3.413177,-1.478757,-0.753178,-9.476480,-6.397320,4.212578,5.501813,-2.280121,-9.319307,-0.052970,-6.816449,9.137708,9.031114,3.895855,3.976779,-2.806135,-6.028550,-8.053298,-8.110309,9.529831,-4.759976,-0.792371,5.669091,0.080721,-9.882098,0.248327,-5.311938,-0.581959,4.752324,-4.451483,0.539084,-6.420591,-7.249612,-9.496598,2.363966,8.406258,5.264423,2.942317,-4.545645,-9.662267,2.889730,8.089013,-6.006678,4.864688,3.322656,-3.367896,9.693172,-0.468344,4.771451,-6.653823,-7.548876,2.789488,0.158812,5.998372,9.221859,-0.894010,8.258008,-4.085914,-7.574614,-7.742558,-1.514432,-3.797159,1.934443,4.728049,0.156829,-6.053467,4.461348,6.146127,-3.516831,1.842630,-0.440748,-7.876533,4.513978,-5.876921,2.132797,-7.815026,8.417472,9.172523,4.161939,-6.537402,-5.966824,5.118635,-6.943965,-4.710857,5.507690,-4.164792,-9.608637,9.220342,-5.137905,7.347674,-6.827748,2.109043,-4.998513,3.187005,9.954308,-0.144233,-9.729563,4.133887,6.390595,6.996329,8.484071,-5.860132,9.031234,-4.103646,8.730234,3.296131,7.006435,-0.292695,9.596687,1.794249,6.074745,-7.456773,9.267745,-3.781511,1.844163,3.495195,9.307585,-7.805618,-3.143883,-1.619512,-2.873906,3.707693,-7.593013,4.587502,4.858554,-4.121453,2.370571,-6.205426,4.444746,8.786932,0.687397,2.562412,-1.631638,6.070284,-7.126165,8.011689,2.491068,-0.615799,-4.257289,1.298144,7.947360,-8.956457,-1.837973,6.124813,0.493749,-4.973605,-7.318376,8.441327,-5.342931,2.187427,2.970308,1.436226,2.545495,-4.771959,-9.309908,-5.559292,-4.937754,-0.645944,6.731809,-3.687403,-2.734172,2.427717,-9.195832,5.304681,6.220688,-1.641260,8.776915,1.315473,7.370170,-9.030315,9.926713,1.382896,9.083661,-3.354981,-2.506874,4.777062,-5.326721,6.561618,-3.373840,5.571503,2.574297,-9.293553,6.830081,3.336983,0.014418,-1.916085,-8.654265,-2.358746,6.739927,9.022350,1.380283,-9.316381,2.089577,1.186449,0.880861,-5.427684,-3.733395,5.604084,-5.522179,-4.451926,0.417028,1.928545,8.571429,8.281801,-5.064742,-2.856989,-8.029674,6.534825,-1.326870,7.332733,9.902939,-2.215229,-4.545608,-5.567623,-0.182312,-7.609634,6.870486,-7.969611,-2.974357,-0.755152,-4.983130,-1.120329,5.384587,-9.235767,-1.532110,7.823651,9.434106,0.528095,-0.302604,3.711092,1.252004,-6.627841,9.257788,3.327832,-8.873587,-9.343235,-2.007027,7.277513,2.889982,8.708262,2.936470,5.555019,-2.654756,-1.665349,-9.817651,7.276938,-8.837518,5.479999,-5.916642,6.618091,-0.008270,6.988501,-0.071231,-5.435867,7.233638,-8.546364,2.140526,6.514823,-6.257193,-3.245469,3.061150,-3.958448,3.705934,1.295624,-5.930129,-2.539418,6.653910,5.848075,2.360821,7.119477,3.458663,4.587723,8.094364,-0.193639,8.415810,0.547275,9.988705,-8.049211,4.744344,-7.179550,-6.807184,-7.809220,2.022525,9.444657,0.122522,3.207074,-1.478620,3.713780,4.402388,-0.535648,-9.575772,-7.064461,9.066872,-2.107529,-6.904567,7.083811,-3.425938,-4.617149,6.601049,-1.988011,-1.982310,-5.456575,-4.151300,0.526995,4.547518,-7.227519,4.885826,1.327400,4.475845,6.190837,8.958075,-8.054841,-9.194853,5.128010,8.845219,-4.958137,9.532679,-0.698586,8.143798,3.662349,0.450930,-5.410065,-9.968148,-6.135190,-3.239325,-0.903432,-8.814342,9.672273,3.217083,-9.305840,-4.244702,8.061866,4.626728,9.870691,7.617137,-4.668392,6.018621,8.979162,-4.712085,6.684540,2.267685,-8.236789,2.340623,-4.821750,-0.548407,7.623092,5.555820,-5.376752,-8.343669,5.215014,6.518238,3.227992,8.682866,-9.610690,-8.059413,-0.555597,9.211480,2.331770,-9.681996,-5.146035,-8.601369,0.163719,-7.652086,0.297964,4.489610,-5.604296,-9.569233,5.545673,-8.342093,9.078729,-3.090186,-7.507087,2.359979,-1.916336,5.239085,-0.046475,-8.802331,5.755109,-5.285720,1.491906,-2.632651,-0.729273,6.389516,-8.196666,6.286416,-8.090756,1.637349,-0.914742,-3.549662,-8.445464,5.794487,-9.279858,-3.105064,-7.166970,-2.174730,-9.513529,7.813924,9.354619,5.187137,-2.970437,8.639808,-7.959930,9.678176,7.338428,6.758630,0.835298,3.446523,-5.994062,5.331999,-0.930292,-6.659590,-0.115985,2.574424,2.556987,2.054474,2.450473,-7.372226,7.637463,-2.093305,-8.324024,-9.431208,-1.646526,3.223653], dtype = "float64")#candidate|6731|(468,)|const|float64
call_6728 = relay.TupleGetItem(func_3348_call(relay.reshape(var_6729.astype('float64'), [2, 12, 6]), relay.reshape(var_6730.astype('int64'), [2880,]), relay.reshape(const_6731.astype('float64'), [468,]), ), 4)
call_6732 = relay.TupleGetItem(func_3352_call(relay.reshape(var_6729.astype('float64'), [2, 12, 6]), relay.reshape(var_6730.astype('int64'), [2880,]), relay.reshape(const_6731.astype('float64'), [468,]), ), 4)
func_4052_call = mod.get_global_var('func_4052')
func_4054_call = mutated_mod.get_global_var('func_4054')
var_6756 = relay.var("var_6756", dtype = "float32", shape = (192,))#candidate|6756|(192,)|var|float32
call_6755 = relay.TupleGetItem(func_4052_call(relay.reshape(var_6756.astype('float32'), [16, 2, 6])), 1)
call_6757 = relay.TupleGetItem(func_4054_call(relay.reshape(var_6756.astype('float32'), [16, 2, 6])), 1)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_6762 = func_4336_call()
call_6763 = func_4336_call()
uop_6774 = relay.sin(call_6709.astype('float64')) # shape=(4, 14, 4)
uop_6776 = relay.sin(call_6711.astype('float64')) # shape=(4, 14, 4)
output = relay.Tuple([call_6688,call_6697,var_6710,call_6728,var_6729,var_6730,const_6731,call_6755,var_6756,call_6762,uop_6774,])
output2 = relay.Tuple([call_6689,call_6698,var_6710,call_6732,var_6729,var_6730,const_6731,call_6757,var_6756,call_6763,uop_6776,])
func_6777 = relay.Function([var_6710,var_6729,var_6730,var_6756,], output)
mod['func_6777'] = func_6777
mod = relay.transform.InferType()(mod)
mutated_mod['func_6777'] = func_6777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6777_call = mutated_mod.get_global_var('func_6777')
var_6779 = relay.var("var_6779", dtype = "float64", shape = (720,))#candidate|6779|(720,)|var|float64
var_6780 = relay.var("var_6780", dtype = "float64", shape = (144,))#candidate|6780|(144,)|var|float64
var_6781 = relay.var("var_6781", dtype = "int64", shape = (2880,))#candidate|6781|(2880,)|var|int64
var_6782 = relay.var("var_6782", dtype = "float32", shape = (192,))#candidate|6782|(192,)|var|float32
call_6778 = func_6777_call(var_6779,var_6780,var_6781,var_6782,)
output = call_6778
func_6783 = relay.Function([var_6779,var_6780,var_6781,var_6782,], output)
mutated_mod['func_6783'] = func_6783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4949_call = mod.get_global_var('func_4949')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_6789 = func_4949_call()
call_6790 = func_4949_call()
output = relay.Tuple([call_6789,])
output2 = relay.Tuple([call_6790,])
func_6799 = relay.Function([], output)
mod['func_6799'] = func_6799
mod = relay.transform.InferType()(mod)
output = func_6799()
func_6800 = relay.Function([], output)
mutated_mod['func_6800'] = func_6800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6829 = relay.var("var_6829", dtype = "int8", shape = (10, 14, 15))#candidate|6829|(10, 14, 15)|var|int8
var_6830 = relay.var("var_6830", dtype = "int8", shape = (10, 14, 15))#candidate|6830|(10, 14, 15)|var|int8
bop_6831 = relay.greater(var_6829.astype('bool'), relay.reshape(var_6830.astype('bool'), relay.shape_of(var_6829))) # shape=(10, 14, 15)
func_5673_call = mod.get_global_var('func_5673')
func_5675_call = mutated_mod.get_global_var('func_5675')
call_6840 = relay.TupleGetItem(func_5673_call(), 3)
call_6841 = relay.TupleGetItem(func_5675_call(), 3)
uop_6842 = relay.asin(bop_6831.astype('float32')) # shape=(10, 14, 15)
uop_6844 = relay.acos(uop_6842.astype('float64')) # shape=(10, 14, 15)
output = relay.Tuple([call_6840,uop_6844,])
output2 = relay.Tuple([call_6841,uop_6844,])
func_6848 = relay.Function([var_6829,var_6830,], output)
mod['func_6848'] = func_6848
mod = relay.transform.InferType()(mod)
mutated_mod['func_6848'] = func_6848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6848_call = mutated_mod.get_global_var('func_6848')
var_6850 = relay.var("var_6850", dtype = "int8", shape = (10, 14, 15))#candidate|6850|(10, 14, 15)|var|int8
var_6851 = relay.var("var_6851", dtype = "int8", shape = (10, 14, 15))#candidate|6851|(10, 14, 15)|var|int8
call_6849 = func_6848_call(var_6850,var_6851,)
output = call_6849
func_6852 = relay.Function([var_6850,var_6851,], output)
mutated_mod['func_6852'] = func_6852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4279_call = mod.get_global_var('func_4279')
func_4281_call = mutated_mod.get_global_var('func_4281')
call_6856 = relay.TupleGetItem(func_4279_call(), 0)
call_6857 = relay.TupleGetItem(func_4281_call(), 0)
func_6799_call = mod.get_global_var('func_6799')
func_6800_call = mutated_mod.get_global_var('func_6800')
call_6878 = relay.TupleGetItem(func_6799_call(), 0)
call_6879 = relay.TupleGetItem(func_6800_call(), 0)
output = relay.Tuple([call_6856,call_6878,])
output2 = relay.Tuple([call_6857,call_6879,])
func_6885 = relay.Function([], output)
mod['func_6885'] = func_6885
mod = relay.transform.InferType()(mod)
output = func_6885()
func_6886 = relay.Function([], output)
mutated_mod['func_6886'] = func_6886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6885_call = mod.get_global_var('func_6885')
func_6886_call = mutated_mod.get_global_var('func_6886')
call_6920 = relay.TupleGetItem(func_6885_call(), 1)
call_6921 = relay.TupleGetItem(func_6886_call(), 1)
var_6929 = relay.var("var_6929", dtype = "float64", shape = (6, 2, 5))#candidate|6929|(6, 2, 5)|var|float64
bop_6930 = relay.equal(call_6920.astype('bool'), var_6929.astype('bool')) # shape=(6, 2, 5)
bop_6933 = relay.equal(call_6921.astype('bool'), var_6929.astype('bool')) # shape=(6, 2, 5)
func_4254_call = mod.get_global_var('func_4254')
func_4257_call = mutated_mod.get_global_var('func_4257')
const_6936 = relay.const([[5.667022,-8.776360,-9.011499,-0.568919,8.707288,7.561512,9.643887,6.456561,-3.227313,-5.958546,-3.058398,8.385177,8.414288,-7.462795,9.903362,7.985493,-8.451475,-7.028804,-2.378499,-9.297583,8.424533,8.131309,-7.990074,-4.643015,-6.436349,-5.740659,0.753029,-1.941083,-2.584227,-1.415586,-5.321388,8.578375,3.016321,2.774454,-9.493935,1.242692,2.713745,-0.804088,7.256612,-7.024345,-3.756854,-4.430443,-7.782350,-5.087161,9.157740,-9.752600,-2.787485,-5.404683,-3.446403,3.877926,-7.497478,-6.888252,-1.434151,7.059301,-1.394843,7.882735,-4.437298,-1.483292,-2.143445,-6.820641,4.751267,7.972957,-3.374626,-1.963451,3.608264,7.727860,-3.345044,6.892402,8.070256,4.057950,-7.572745,-1.842550,-3.221710,7.994001,1.917872,1.376877,-2.315601,5.556307,-3.825168,6.608343,1.386237,3.783861,1.065042,-7.455998,-5.033222,-9.189886,-9.208305,3.942540,6.685541,9.585574,-6.613119,8.322980,8.163528,3.350953,-0.679087,5.068359,-5.881686,-4.747379],[3.566067,-0.772583,-6.537461,-3.515095,9.745754,1.400615,-3.553580,2.519172,3.681149,-3.722212,4.303983,0.195596,-5.658963,-1.004177,3.256617,-4.347445,4.865581,-0.286134,8.936009,7.548145,9.660614,5.905679,4.988378,-3.556769,-7.611620,-5.759307,5.045760,0.533828,-1.615038,-3.089563,-7.238636,4.364950,0.127538,2.957626,-9.032659,9.067804,-5.934405,-6.645542,2.577116,-4.699240,6.940079,-4.893213,-4.935237,-3.686276,5.846180,4.853868,-2.766454,0.106250,-2.596190,-2.885819,1.535320,-7.847664,8.286643,-0.513168,-5.748963,-3.625163,6.810619,-7.163649,-0.994171,-2.361683,1.645875,-4.078219,-1.015849,1.977306,-4.104221,-8.156077,6.665161,1.704118,9.615947,0.097454,8.614534,2.234043,-6.528192,-7.668826,-3.210164,-9.084230,-7.202844,4.552483,2.937012,-8.928086,3.767427,6.176190,3.209203,4.932645,-1.698525,-7.586938,-0.810952,-0.905008,7.004310,5.333231,-7.929629,1.056078,-8.559641,0.175407,9.150835,-3.944632,-5.660018,5.599745],[-8.545864,-8.347239,-8.418307,-2.981433,-7.624258,1.023344,-6.451968,-8.036325,9.903830,8.328565,-9.143650,9.787905,-9.302947,-1.602678,9.803729,8.003753,-6.861042,1.697024,-0.191434,8.081300,-1.731750,3.757258,-3.068839,5.998965,5.763155,7.650941,-2.556398,-1.315580,-0.906283,4.504669,-3.735748,-2.071606,4.529994,2.624049,5.823469,-8.205539,-0.533737,-7.712850,1.254186,-9.048081,3.375460,4.527587,-4.613453,-0.547586,-8.562506,-5.797034,-2.549505,-9.658415,-1.794374,-5.886008,-3.603668,-2.919743,-5.211974,7.755438,-1.190540,-1.964873,-1.292909,5.687607,6.458518,5.226689,-3.019337,2.535264,-5.752608,-8.718757,7.552503,4.000963,2.296816,-6.504909,-7.818952,-9.506511,8.573727,-6.972444,-3.749613,-5.757811,-8.684104,3.808159,-6.623825,6.700007,-7.077675,9.821277,-0.393187,-4.110836,-5.329687,1.971041,-6.849166,-8.695735,0.250316,2.340492,-9.139457,9.761765,-7.938541,4.587952,3.839448,9.530515,-4.963694,-7.331678,1.957882,0.630621],[3.247616,7.796352,-8.429162,-3.490984,-7.817826,9.925814,4.791271,6.051150,1.099082,-5.238803,-6.378012,8.371931,3.412588,6.614041,-1.987717,-7.864256,-6.477659,4.455853,8.829960,-0.914985,-1.807080,8.740201,-7.772464,2.049613,1.200940,1.927186,3.675842,4.804262,-1.061788,-5.862701,0.683345,-4.072216,-2.345453,-9.233031,9.471950,7.846791,-0.586159,-8.807674,-0.845972,-5.951453,8.365209,3.237922,-6.569181,1.078087,3.480473,1.963206,1.581899,-9.111030,-5.294342,1.334059,4.230330,7.372998,8.306544,5.476600,2.684810,-8.140854,5.849135,0.237427,-9.658024,-6.347867,-7.270121,-8.927602,0.840330,1.772874,1.285484,-3.064337,-5.345397,-1.967141,5.176249,3.723972,0.365447,1.648043,9.934986,9.825360,-1.912452,0.569758,4.224892,-2.233963,1.730647,-9.054718,-7.872025,0.434400,-0.160175,5.855038,8.972981,-6.035493,-8.162907,7.726328,2.087048,2.300814,-8.792115,-5.668176,-7.553004,7.813858,1.357942,-4.632969,-0.280618,-0.357631],[3.922828,-4.961757,-7.164215,9.132556,-4.317051,-2.984875,9.205782,1.942799,-2.468534,-9.512171,-9.482116,-9.071387,8.100909,-7.424099,4.693049,7.534053,-3.172073,0.116622,-9.025336,2.401672,-7.557183,-5.533910,8.774083,1.522385,-8.352423,-4.555327,5.521969,-0.533065,2.657503,-2.098848,9.665971,2.017588,3.546406,-9.298992,1.250110,9.779344,0.876713,-1.411413,9.851329,-1.911166,1.241838,3.119220,-6.125674,4.119121,-9.712568,-8.112355,9.353310,5.594490,-2.212625,0.143884,5.335105,5.135506,-9.179430,4.530473,-3.006203,2.825907,-0.300275,-7.307282,-7.034631,-5.212452,-6.688501,-5.535766,-4.796645,-4.924156,6.976844,-9.921648,-0.161204,6.678836,1.286788,8.251247,1.662967,3.541533,5.097783,-0.858334,-9.661831,-7.732925,0.171084,-9.891614,-1.824076,-7.005336,-4.634099,-7.634222,0.026445,-9.275775,-2.010458,-9.823421,-0.961953,2.218254,7.970133,-5.828274,-3.411481,-9.268803,3.098327,2.397245,-7.734899,-6.541377,-7.321199,7.050181],[-7.810751,1.323197,7.932328,-9.939795,2.916045,9.244083,2.075432,-4.397860,-9.613281,9.578448,-9.255613,4.002279,1.187024,2.320222,-0.101273,9.959588,-5.149351,2.412821,-9.973798,-2.889612,1.611103,-8.201413,7.911071,-5.449595,-0.051046,0.426648,-6.266285,8.088329,-5.628753,-5.652753,7.319376,-3.240191,-9.089842,-6.027169,4.632085,-1.443051,-4.809101,-9.663408,-0.301331,-2.524148,-5.177591,3.721990,-4.173235,-7.967700,4.127893,-7.266777,-6.033448,4.044436,-1.516787,0.883366,-8.416884,3.040732,0.897515,-2.080818,-7.087479,-4.618421,-4.426186,-7.480316,-1.418152,-7.538913,3.457974,-5.738255,3.953855,-8.045018,8.295625,1.090350,3.433339,9.208908,-6.304334,-8.884155,-9.836969,-1.941049,-9.966827,5.968302,7.009893,0.728275,-2.085078,6.847933,6.510471,-6.469761,8.672285,-8.777429,-2.717133,0.285504,6.252159,1.953373,-0.539517,-3.662484,-6.300587,8.270101,7.914171,-5.904555,0.729459,6.458754,3.475062,5.989972,-4.723910,-9.886051],[5.386100,0.959896,9.547685,-7.340387,-8.183912,3.903804,5.983472,5.243674,3.814878,-3.615806,3.952208,0.961375,5.359923,1.112723,-8.026331,-3.841109,-3.855867,-6.153572,1.939625,7.774444,9.131151,-5.899018,-5.379559,-8.033949,-5.145055,-0.070879,-7.414881,-2.963405,-5.612043,3.859994,8.217323,3.648516,-5.683601,-6.785034,-3.460312,3.278466,-7.017929,-5.086258,3.911005,-6.333316,-0.670975,8.073320,-3.646739,-3.541239,-0.368792,4.261300,-8.953521,1.712138,-6.221419,-5.405534,7.110279,-1.459084,8.879665,-4.003959,8.524256,-7.275070,1.552335,7.606354,-6.002028,4.124388,2.408681,-0.081791,8.759893,-1.919025,5.546408,-3.128162,9.471580,-0.359752,-7.960667,6.237557,1.481494,7.620035,-5.339389,-7.971811,-7.752646,7.737270,-8.089926,2.586320,5.049500,3.616192,-6.846018,2.608040,0.730858,5.561552,5.849317,6.778874,-2.474954,3.654802,5.420721,6.315660,1.651733,-8.646933,0.967283,0.635413,7.870615,1.123184,7.758479,6.990640],[6.916716,-8.713865,-2.815951,7.480162,-3.378938,5.342135,4.526556,0.632520,5.367844,-4.738842,-0.397198,6.439913,7.992598,5.469181,5.179148,4.249115,4.008454,9.059003,4.070270,5.611905,-8.152718,-8.827191,9.914417,-0.652137,3.250917,5.156152,4.542245,3.632252,-3.515964,2.400793,-4.379623,-4.406014,-0.959047,1.288210,-1.339616,5.885363,6.500439,-5.587271,5.325828,6.964139,-0.197040,-4.173781,2.654990,-5.172528,3.034764,2.992401,-8.129614,7.321790,-8.266133,-5.003280,2.655630,3.443600,1.808802,-8.978277,-4.339620,6.131870,-5.228328,-2.454720,-6.934545,5.568045,-5.253885,1.956663,-5.783014,3.756280,8.998987,-2.629414,9.378587,2.368851,5.102994,-0.451778,6.086262,-6.326658,7.835468,9.025753,5.581802,8.381012,2.534199,-6.965874,-0.819361,-3.547368,-0.623042,-9.159318,-2.383268,-2.929091,6.001634,-2.723444,9.787918,7.849867,3.086756,-4.656166,5.635094,2.983079,-8.600341,1.629621,7.676472,-2.255083,-5.057479,-2.027133]], dtype = "float32")#candidate|6936|(8, 98)|const|float32
call_6935 = relay.TupleGetItem(func_4254_call(relay.reshape(const_6936.astype('float32'), [784,])), 0)
call_6937 = relay.TupleGetItem(func_4257_call(relay.reshape(const_6936.astype('float32'), [784,])), 0)
output = relay.Tuple([bop_6930,call_6935,const_6936,])
output2 = relay.Tuple([bop_6933,call_6937,const_6936,])
func_6940 = relay.Function([var_6929,], output)
mod['func_6940'] = func_6940
mod = relay.transform.InferType()(mod)
var_6941 = relay.var("var_6941", dtype = "float64", shape = (6, 2, 5))#candidate|6941|(6, 2, 5)|var|float64
output = func_6940(var_6941)
func_6942 = relay.Function([var_6941], output)
mutated_mod['func_6942'] = func_6942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6274_call = mod.get_global_var('func_6274')
func_6276_call = mutated_mod.get_global_var('func_6276')
call_6973 = func_6274_call()
call_6974 = func_6274_call()
func_4854_call = mod.get_global_var('func_4854')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_6987 = relay.TupleGetItem(func_4854_call(), 0)
call_6988 = relay.TupleGetItem(func_4856_call(), 0)
output = relay.Tuple([call_6973,call_6987,])
output2 = relay.Tuple([call_6974,call_6988,])
func_6990 = relay.Function([], output)
mod['func_6990'] = func_6990
mod = relay.transform.InferType()(mod)
mutated_mod['func_6990'] = func_6990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6990_call = mutated_mod.get_global_var('func_6990')
call_6991 = func_6990_call()
output = call_6991
func_6992 = relay.Function([], output)
mutated_mod['func_6992'] = func_6992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4896_call = mod.get_global_var('func_4896')
func_4897_call = mutated_mod.get_global_var('func_4897')
call_7015 = func_4896_call()
call_7016 = func_4896_call()
output = relay.Tuple([call_7015,])
output2 = relay.Tuple([call_7016,])
func_7032 = relay.Function([], output)
mod['func_7032'] = func_7032
mod = relay.transform.InferType()(mod)
mutated_mod['func_7032'] = func_7032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7032_call = mutated_mod.get_global_var('func_7032')
call_7033 = func_7032_call()
output = call_7033
func_7034 = relay.Function([], output)
mutated_mod['func_7034'] = func_7034
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7134 = relay.const([[[5.444774,-3.277989,7.868332,1.939508,-3.716660,9.762002,4.536043,0.636866,-6.619584,2.626403,4.196446,3.124989],[-1.596888,-5.030047,0.258173,1.430402,-1.065486,-2.170485,9.990805,-4.050931,-2.160703,-4.645620,1.409134,9.723044],[-0.430964,6.995735,-3.816677,-4.803238,8.558026,2.759295,-2.437198,1.689084,-6.310017,-9.674525,1.317999,0.338122],[-2.980854,-2.914367,2.523514,8.289211,-7.654302,2.134008,-6.976824,9.899865,-5.370343,-7.201093,7.029882,2.898124],[7.898837,4.825464,-2.957567,9.453227,-2.341112,-9.529308,5.001985,-2.419939,-6.797234,-5.503733,2.632511,-9.808233],[-1.531027,-5.408112,-8.753971,0.539675,-7.241652,4.325660,9.663899,4.197479,-4.339325,7.771621,-5.546111,0.756278],[6.938651,8.501133,7.998196,7.597255,-8.877262,3.976599,1.034208,2.240113,-2.381083,1.570712,6.997684,0.705306],[-9.993964,7.378163,-4.202197,-2.043813,-9.552018,-9.149965,6.621480,9.585800,-3.866399,6.183790,6.673481,7.918219],[9.099207,7.174866,8.115952,-9.672891,6.527404,-3.843825,-3.261645,3.176591,-7.878184,-3.943266,0.628799,-1.997464],[-8.154619,-4.775127,-8.275915,5.018454,-2.279514,-2.841340,-6.236065,9.657387,-7.830301,9.819847,-1.536246,8.134729],[7.705568,8.669835,5.209245,-3.538681,0.457409,4.726247,-0.078708,9.083708,4.673685,-3.200187,-5.315904,0.374681],[-1.903116,5.928997,2.390717,7.536067,-7.603984,-1.700712,-5.342546,7.843550,1.671030,7.625314,-8.735854,-1.210213],[-5.984710,1.636574,-7.329472,6.150538,3.776250,-6.537370,9.035929,6.149438,-1.840450,7.100829,-6.954296,-1.418464],[9.987860,4.875658,-3.256067,5.984115,3.624741,8.630892,7.673581,-1.096608,7.305471,-8.674173,-9.649606,-8.181901],[2.814391,-2.636399,-1.594571,5.313068,-0.871164,1.808241,-9.705326,-5.208061,6.886469,0.091422,-7.443841,-9.583797]],[[-2.523682,5.560854,-4.613342,2.146568,9.481413,-8.143346,-6.815231,-5.141429,-9.344878,7.223358,-5.034266,-3.759212],[2.404816,0.906582,2.360234,8.971141,-7.586730,5.783917,-1.334722,-2.392840,-0.659533,-4.236726,-0.885048,0.775424],[-9.433175,7.473239,-1.702079,7.304488,1.283306,-6.521115,-1.679331,7.317408,-4.113198,1.769099,7.717433,-6.786055],[-6.878278,9.674061,7.814488,-7.085019,9.205467,5.107386,9.340173,-9.771038,2.235550,-2.946137,-8.830096,-1.254322],[-3.192051,-0.177053,0.128807,3.581856,4.627139,-2.738355,1.313842,-4.836135,-7.829142,3.172414,-3.142617,-4.597602],[-4.636602,7.837697,-8.993782,2.773707,-8.102722,7.316341,-7.644325,3.997611,6.528801,7.240559,-9.172617,3.759010],[0.225976,0.901553,-2.087175,4.534464,-2.539051,-5.454008,-6.375255,9.907422,3.729293,-2.974159,9.677086,7.671786],[7.586074,1.355835,-4.599588,-8.583342,1.638899,-5.270703,6.579314,-5.503404,-6.939598,7.912794,-7.145315,3.112979],[2.761070,-2.033453,-7.611172,6.994177,-3.436064,5.173428,6.690200,-7.352235,0.193274,0.291547,-6.875663,-5.762240],[-3.271431,5.417232,-9.022220,-0.367411,-3.754881,-0.999083,-3.383283,-8.195800,1.048719,1.007727,5.001151,7.770521],[-0.795381,5.418896,1.793958,-1.691084,8.198092,-5.464130,-5.819240,2.634132,0.822774,4.717730,6.558033,-9.052219],[-0.333874,-7.486005,7.726052,-8.648917,-6.953217,-7.710623,-1.956344,9.459011,-0.610741,7.225772,-8.025485,5.561548],[7.996464,0.946387,-9.168249,1.680255,6.847605,-9.046420,8.500682,3.071670,9.228078,0.884667,-3.455429,8.617933],[1.946255,1.434562,-5.482550,0.662855,-4.854215,-2.940313,3.579825,5.587352,2.515957,2.770807,-7.763357,-5.599556],[8.320725,4.550921,-2.691844,-2.032974,-5.373234,0.130200,2.104870,-5.146528,8.729829,-1.613112,-2.498095,-2.109712]]], dtype = "float64")#candidate|7134|(2, 15, 12)|const|float64
uop_7135 = relay.cosh(const_7134.astype('float64')) # shape=(2, 15, 12)
func_2527_call = mod.get_global_var('func_2527')
func_2530_call = mutated_mod.get_global_var('func_2530')
const_7140 = relay.const([[-5,-2,5,5,2,5,-6,7,3,-7,-9,7,7,2,1,8,4,-1,2,9,1,10,-4,-9,-2,-3,7,10,7,-7,-7,-6,-7,-2,-2,2,6,9,10,6,-6,-10,-1,7,4,8,-7,4,1,2,8,7,4,3,-5,6,8,-4,-8,-8,-5,6,1,7,-8,5,2,2,-9,-2,2,8,5,8,5,8,2,-3,5,-5,8,1,-4,-6,5,-7,-5,6,9,3,-10,3,4,5,7,-2,-1,-4,3,-10,-7,5,4,-4,-7,-6,-8,9,6,-1,5,7,-6,3,-1,8,-9,-2,8,5,-2,4,-1,-2,-8,-1,6,-9,9,2,2,-9,-6,-4,-8,-10,10,-10,7,-10,-5,-6,-1,3,-6,1,4,-10,5,-5,-1,-1,6,-3,-3,8,6,-9,2,8,-7,-7,-2,-1,9,8,-10,-2,-2,1,-8,3,4,2,4,-3,10,9,-7,9,-8,-7,-7,5,3,-5,5,-4,10,3,5,-2,-6,-9,3,10,-6,-10,-5,2,-8,-9,-5,-2,-9,8,2,3,2,2,1,-9,-8,-1,3,-1,2,-6,2,-3,-4,9,2,-6,5,2,-2,4,-1,5,8,-6,7,-7,-9,-4,-1,9,-4,-8,4,4,4,-8,-10,-8,10,-9,6,-7,-6,8,-1,-1,-1,-3,-2,1,-2,-10,1,-3,3,-7,7,6,3,1,10,-9,4,5,9,-1,-4,-5,10,-5,9,-4,4,-10,-1,-2,-4,1,5,3,4,4,4,3,7,-6,10,3,-7,4,3,-10,-9,6,-9,-7,-2,10,-2,7,-3,-6,-3,6,9,10,5,10,1,9,4,4,9,-1,9,10,2,-4,4,-5,-1,6,4,-4,-1,-6,1,2,-6,-2,-2,-8,10,-1,5,7,10,-5,-7,-9,10,-5,7,-2,2,-1,-6,-3,4,-1,2,6],[9,-6,8,7,5,10,1,7,4,2,-7,-8,-8,10,5,2,7,2,-7,5,1,4,-7,-9,-8,-3,-5,8,2,-5,-5,-2,-9,10,-1,8,10,8,-2,10,-8,-7,-6,10,2,-4,4,-1,-10,9,-6,5,-8,3,10,9,8,10,-8,1,-6,1,5,-5,3,-6,10,4,4,5,3,-1,8,5,4,10,-5,1,10,-2,-9,-1,2,6,-5,10,-5,-8,-4,10,1,7,-10,-3,-6,5,-5,-6,-2,-3,-3,4,5,2,-5,7,-6,-9,5,-7,8,8,-10,10,-7,10,5,-10,8,-10,-8,-8,-1,9,10,7,-1,3,9,3,6,6,9,-4,7,9,-10,8,-5,-7,6,-7,9,6,5,2,5,7,-3,3,4,7,-3,5,-3,-5,6,-4,3,-1,-1,10,-2,-4,-7,-6,10,-6,8,1,4,2,1,3,8,-2,8,9,-8,-6,1,-7,5,6,-5,-7,-4,-8,-5,-8,-6,5,2,-5,-6,-7,-5,8,8,-5,2,3,-3,2,2,4,-8,-4,-1,-3,2,-4,4,8,7,-6,-9,6,2,1,-5,3,-2,-6,-8,1,-8,-10,8,-4,-3,-7,-1,-4,10,8,10,1,-10,4,5,-1,-2,-5,7,9,-10,-2,-9,6,2,5,7,4,2,-9,-5,1,-9,10,-6,8,5,-10,8,4,-2,-2,6,8,5,-8,-6,-10,5,-3,-10,8,-2,-2,6,2,6,7,-9,-1,-2,7,-5,-7,6,3,2,1,-2,6,-10,4,-2,7,7,10,-4,1,3,-2,-9,-4,8,7,-8,-8,3,6,4,-9,-1,2,5,7,-3,-6,5,3,5,5,-3,4,4,1,3,-1,-10,-2,-8,2,9,4,-6,-7,-7,6,5,7,-10,-9,10,-9,-3,-5,9,4,5,-2,-7,4,1,-5,2,6],[-10,-6,5,1,6,10,-5,-3,-4,-3,-4,-4,-9,-1,-1,-2,4,-3,5,8,2,-9,4,-9,-7,-1,1,5,-6,-10,7,-10,-2,-1,-7,-10,-7,-9,-1,1,-3,8,-10,4,1,-3,-8,9,-5,8,-9,2,9,9,2,-7,-2,8,10,-8,-6,9,-5,5,-9,2,1,-4,-7,-10,4,-3,4,10,3,-5,8,-2,-2,-3,-10,-1,-2,1,7,-10,1,-7,3,9,5,5,-7,8,-6,2,-7,8,5,1,-1,5,2,-8,-1,-5,10,2,8,7,-3,1,10,-1,9,1,1,-3,-9,-2,-6,7,-6,3,10,-2,-9,-3,10,-5,4,-10,-1,-1,-4,1,9,-7,-8,1,-10,-9,5,7,-5,-6,-6,3,-1,-8,-7,-6,8,3,4,3,8,5,5,-1,-4,-9,-5,-8,9,1,6,4,1,-3,3,10,-10,-7,7,-5,-6,1,-7,6,-8,1,4,-1,5,9,8,1,4,-4,5,4,-4,-3,-8,6,-7,10,-4,-6,3,-7,5,-2,8,-10,5,-6,-10,1,-9,-2,6,10,4,-9,1,1,-5,-5,-9,6,10,7,1,6,3,-8,3,-8,-6,-6,-2,3,2,-8,2,6,-6,-9,-1,8,-6,-4,8,6,7,-1,10,6,-9,-2,-10,2,-3,2,-8,7,-1,-1,-1,3,10,10,-5,10,1,-6,2,7,-10,9,-3,2,-7,3,1,-7,7,10,4,-7,-4,7,2,1,-5,8,7,2,-4,-2,-8,-5,-8,8,-5,-8,9,-4,9,10,6,-2,9,-6,8,7,7,-10,7,7,-2,-10,2,9,-1,-5,-1,9,2,5,3,3,-4,-5,10,4,8,-2,-7,-2,-2,-5,-6,2,-10,-6,-9,-3,4,5,-1,-8,2,-9,-3,-9,-10,7,-9,-3,-8,-3,10,1,5,1,-4,5],[1,4,7,-8,-8,-2,-7,-9,4,1,8,-9,7,-7,1,6,-9,5,-6,2,9,2,-9,-3,10,8,-8,-1,8,-6,3,10,-4,8,9,1,-4,-6,-3,7,-2,3,3,-7,-3,10,6,-8,7,8,5,-4,4,1,8,3,4,-2,-2,-8,1,-3,-9,7,6,-2,7,-10,-7,-8,-1,-6,7,-2,8,-3,9,8,-6,4,10,-3,-3,6,3,4,7,9,-10,4,-10,-9,-5,-4,1,3,5,6,8,-7,-8,-5,1,-10,4,10,-2,-10,5,-10,-6,-8,10,9,6,10,-7,10,10,10,7,-7,-1,6,5,-2,8,1,4,7,-8,-5,-4,6,8,-10,-7,3,-6,-4,6,3,8,3,8,3,9,-2,4,8,5,8,-7,-10,2,5,1,-4,-3,-8,-1,6,10,4,7,7,-10,-4,8,9,9,9,-3,9,-4,-5,-10,4,9,4,-9,-8,6,7,7,5,1,7,7,-8,-3,-5,-3,10,8,-6,5,-8,-5,6,-3,9,4,-8,10,-3,10,-7,-6,3,-1,3,-2,-8,5,10,-4,4,2,1,9,-8,-2,9,10,-4,-10,8,5,10,1,-10,6,-4,-5,4,-9,-2,-5,-8,3,-9,-8,-5,-4,-5,-5,-3,10,-3,2,-10,10,-1,2,-4,-3,6,-10,4,-7,3,5,-5,3,1,-5,-6,2,-4,9,7,-10,3,7,-8,-6,8,-4,8,1,3,-2,-5,-8,-7,6,1,9,8,1,2,-6,1,-3,9,10,-2,-3,-7,5,-2,-9,6,6,6,9,-5,8,7,8,-7,-8,-1,5,3,-3,10,-5,10,2,9,5,8,-3,-9,1,-9,5,1,9,2,9,4,10,-5,1,8,9,3,3,3,8,-4,-2,-6,8,-5,-2,1,2,-6,4,-2,2,-7,9,-10,9,-3],[10,6,-7,-7,7,-3,-7,-3,-5,-4,-4,1,-10,-2,4,2,5,3,6,-3,9,-3,4,-9,-4,-5,3,-10,6,2,9,7,-1,-6,-2,1,4,2,-1,-7,2,-1,-10,10,5,10,-7,8,9,6,-2,5,-10,-3,5,-5,-6,6,9,3,-9,8,2,-5,-9,-4,-7,-6,-7,-9,1,-3,-2,2,-4,-5,-2,10,-10,-6,-3,1,-3,-8,-8,-3,3,-5,-7,-6,5,-6,8,-10,-1,9,-1,6,9,-2,-3,5,5,10,-10,2,10,2,-4,-6,1,8,6,-5,8,-2,-4,-6,9,-8,-4,4,-8,4,9,8,-5,-3,10,6,5,8,6,-8,-4,6,9,-4,8,-3,-9,-8,-5,7,-9,5,2,-3,9,-5,-10,-1,-3,-7,4,-8,1,9,-9,3,-9,1,-2,-2,-8,4,-8,-8,-3,-3,-7,1,-9,3,-5,5,5,-7,-10,7,-6,5,-9,6,-10,-10,10,-2,-2,-6,-1,4,6,-2,10,4,4,1,-4,7,6,10,1,-6,9,3,-4,8,8,-4,-3,4,10,1,2,10,5,5,-4,-10,-4,4,8,6,6,-4,-10,6,-4,6,5,4,-5,-8,10,1,1,-2,9,-4,-9,4,7,-3,-7,6,4,3,-9,-6,9,2,5,8,3,-9,-2,-4,-4,-1,6,2,7,7,6,-4,-1,4,2,9,6,10,2,-9,10,7,9,-4,-5,-2,-4,-8,7,-10,8,6,9,3,9,10,-4,-3,-8,-9,8,8,2,-7,-9,-9,10,10,1,-5,-5,-10,-3,4,-10,8,6,9,9,-8,7,-3,5,6,-7,8,7,-5,-1,-4,1,10,-6,-7,7,5,-3,10,-4,-5,9,-6,-3,7,-7,-6,2,8,-5,5,10,-7,-8,2,5,-4,-3,3,9,-10,10,7,-4,-10,-1,4],[-2,-4,-7,-4,-6,-1,7,4,3,-4,-4,4,7,-8,6,-10,2,-1,-2,5,3,8,-9,6,10,4,-3,1,-10,-10,2,7,4,7,4,8,8,-7,-10,-9,-5,4,1,9,8,-10,-7,-6,-8,1,-5,-7,-4,-9,7,7,-1,1,-8,-3,-8,-1,-3,-10,-10,-3,7,-7,4,7,4,-7,-5,-6,7,-1,4,3,-9,-8,-1,5,1,-1,9,-10,10,-9,4,-7,-5,-9,2,-6,-5,1,3,6,-9,-1,-4,3,-6,8,8,-4,-8,1,5,1,2,-7,-10,-1,1,9,-2,-9,7,-10,-5,-7,7,2,-5,-3,-5,-4,-5,-3,-8,2,-7,8,-10,-8,-3,9,2,4,-2,-4,7,-1,-4,1,-7,2,3,7,-8,-8,9,-3,-9,-8,-3,-10,-2,-5,5,6,6,-7,8,2,-10,-9,10,-10,8,-7,-10,-3,8,-7,-3,-7,5,-10,8,10,-4,7,-2,10,4,-3,6,7,4,-9,8,-6,9,-5,9,5,6,-7,8,8,-5,-4,-7,-7,4,-5,-1,7,-8,7,10,1,3,-4,-5,10,-5,3,5,10,5,4,-8,-5,5,-6,-3,3,-4,4,-1,-9,9,8,-3,5,-4,5,-2,-10,2,4,-2,-1,5,-4,-2,-5,-7,8,1,-10,-2,9,-7,3,-5,-5,5,3,-5,-10,-2,-9,8,-10,1,-6,-7,9,7,3,8,-1,6,-4,-1,-10,-9,-5,-6,-8,7,2,-2,-7,-10,1,10,2,3,9,-10,10,-7,8,2,-2,1,-6,-2,2,-3,1,-2,-9,9,-3,-6,8,-10,7,-2,4,3,-8,2,9,10,9,3,1,8,2,-8,7,9,-1,-5,6,-2,-2,-2,-10,-9,8,-8,5,-2,-10,-9,8,1,1,-4,-3,-1,3,-4,-8,3,-6,-7,-9,-9,-9,5,6],[-7,-3,4,-9,9,-8,4,-7,-4,-2,-5,9,-1,4,-6,-4,-7,-3,-5,8,4,-8,-4,7,-9,8,-9,7,7,-8,2,-7,-10,-4,3,-10,5,-7,-4,-8,5,-6,5,4,5,-7,3,9,-4,-10,-2,6,-8,-10,-9,-5,4,-9,-5,3,7,8,-3,5,10,4,6,3,5,8,2,6,-5,9,10,-9,-3,6,5,-1,9,-1,9,8,-9,-8,10,-9,1,-4,-9,7,-1,7,-6,-3,8,-9,9,-9,-4,9,2,-10,5,3,6,-7,-3,-2,-5,-4,-10,7,10,6,-4,-1,-5,7,-2,8,-10,-6,-9,4,3,6,2,-3,-1,8,5,2,-10,-2,9,2,-4,4,7,9,5,3,1,10,4,7,-9,1,-8,-4,2,-8,-4,-10,-8,1,4,-3,-2,7,4,7,-5,-3,-1,1,2,-10,2,7,6,-5,2,5,4,-9,-6,-2,-5,3,1,-9,-3,-9,-8,-7,4,5,2,9,-2,4,7,8,-10,-9,-6,6,-9,6,-9,2,-7,-9,-8,6,-1,9,-8,-1,1,1,-10,9,-2,-7,-10,-6,9,-7,-6,-9,5,4,-7,2,-6,-5,10,8,-1,-4,-7,9,6,10,-10,10,7,7,-10,1,-3,-4,2,-4,-8,-5,9,-8,-1,8,9,9,3,-1,-6,-8,-1,-2,6,-8,-6,-9,1,1,-8,-5,6,-3,9,-1,6,-4,4,2,3,6,6,-4,3,-9,2,-7,10,-7,-6,6,10,1,-5,3,4,7,5,7,5,-8,-1,-9,-9,-2,5,-6,-7,8,-1,-9,-2,-7,6,-4,1,1,-1,5,-7,4,4,-8,9,4,-10,-9,9,-1,9,7,-9,3,1,9,-6,1,-3,2,6,5,9,10,9,5,7,9,-2,-8,-2,-10,-2,-2,-1,-8,-2,-3,-9,9,4,-8],[-5,9,-1,2,-5,-6,3,-1,-2,-1,6,-5,9,-10,7,-4,-7,4,9,5,-6,1,9,-4,-3,-7,-1,1,-10,2,3,2,8,-9,-9,3,7,7,-5,9,7,6,-2,-5,2,-10,3,4,-9,10,-7,-5,4,10,-4,7,9,-7,-2,3,-10,-8,6,-4,-5,3,7,8,-10,3,9,5,-5,1,5,-3,9,-7,5,10,-8,-4,2,6,-10,8,-9,9,3,3,-4,-2,10,-7,-1,-7,-1,3,2,-7,-10,-6,-8,-3,5,-9,-2,3,10,-7,9,9,-4,5,-4,10,7,-5,3,6,-3,8,-5,9,10,-6,9,-9,10,1,-8,9,9,10,9,-9,-10,2,-7,-1,-9,6,-2,1,2,-5,-4,-6,6,4,-2,2,9,7,6,-3,-5,-3,7,-7,7,-7,-6,-4,9,-10,1,2,5,-8,-9,4,-1,9,2,-4,9,7,-6,-8,9,5,7,1,-1,4,9,4,-6,9,8,-4,7,-2,4,-8,-5,4,2,-7,6,3,-9,7,-9,-1,10,-5,9,-9,-5,-8,2,4,9,9,3,1,8,-7,-2,3,6,-10,5,-7,-8,3,-7,4,-10,-1,4,5,8,8,-2,4,8,10,3,4,-2,-9,-3,7,5,-6,-10,10,5,-9,-8,-3,-5,2,2,-9,-2,-5,3,-10,-10,7,9,7,5,1,9,2,8,-3,-9,-5,1,9,10,2,6,-9,7,1,3,7,-7,-7,-2,-3,1,3,-8,5,2,9,9,4,-5,9,-8,-10,-5,10,-7,10,1,-1,-8,8,-6,-9,-4,-2,-10,6,9,-3,-3,2,7,10,-7,-8,9,-2,-10,1,-4,2,-6,-3,6,-9,-10,1,-5,5,1,-7,-7,7,-2,3,3,-1,6,6,-2,1,8,-9,-2,-6,-6,-3,-4,2,1,3,3,-5]], dtype = "int64")#candidate|7140|(8, 360)|const|int64
call_7139 = relay.TupleGetItem(func_2527_call(relay.reshape(const_7140.astype('int64'), [12, 16, 15]), relay.reshape(const_7140.astype('int64'), [12, 16, 15]), ), 0)
call_7141 = relay.TupleGetItem(func_2530_call(relay.reshape(const_7140.astype('int64'), [12, 16, 15]), relay.reshape(const_7140.astype('int64'), [12, 16, 15]), ), 0)
func_4654_call = mod.get_global_var('func_4654')
func_4656_call = mutated_mod.get_global_var('func_4656')
var_7146 = relay.var("var_7146", dtype = "float32", shape = (784,))#candidate|7146|(784,)|var|float32
call_7145 = relay.TupleGetItem(func_4654_call(relay.reshape(var_7146.astype('float32'), [784,])), 2)
call_7147 = relay.TupleGetItem(func_4656_call(relay.reshape(var_7146.astype('float32'), [784,])), 2)
output = relay.Tuple([uop_7135,call_7139,const_7140,call_7145,var_7146,])
output2 = relay.Tuple([uop_7135,call_7141,const_7140,call_7147,var_7146,])
func_7148 = relay.Function([var_7146,], output)
mod['func_7148'] = func_7148
mod = relay.transform.InferType()(mod)
mutated_mod['func_7148'] = func_7148
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7149 = relay.var("var_7149", dtype = "float32", shape = (784,))#candidate|7149|(784,)|var|float32
func_7148_call = mutated_mod.get_global_var('func_7148')
call_7150 = func_7148_call(var_7149)
output = call_7150
func_7151 = relay.Function([var_7149], output)
mutated_mod['func_7151'] = func_7151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_7155 = relay.TupleGetItem(func_6656_call(), 0)
call_7156 = relay.TupleGetItem(func_6657_call(), 0)
output = call_7155
output2 = call_7156
func_7167 = relay.Function([], output)
mod['func_7167'] = func_7167
mod = relay.transform.InferType()(mod)
output = func_7167()
func_7168 = relay.Function([], output)
mutated_mod['func_7168'] = func_7168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mod.get_global_var('func_4736')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_7174 = relay.TupleGetItem(func_4736_call(), 0)
call_7175 = relay.TupleGetItem(func_4737_call(), 0)
func_7032_call = mod.get_global_var('func_7032')
func_7034_call = mutated_mod.get_global_var('func_7034')
call_7185 = relay.TupleGetItem(func_7032_call(), 0)
call_7186 = relay.TupleGetItem(func_7034_call(), 0)
func_6799_call = mod.get_global_var('func_6799')
func_6800_call = mutated_mod.get_global_var('func_6800')
call_7249 = relay.TupleGetItem(func_6799_call(), 0)
call_7250 = relay.TupleGetItem(func_6800_call(), 0)
bop_7252 = relay.minimum(call_7185.astype('int16'), relay.reshape(call_7174.astype('int16'), relay.shape_of(call_7185))) # shape=(11, 11, 6)
bop_7255 = relay.minimum(call_7186.astype('int16'), relay.reshape(call_7175.astype('int16'), relay.shape_of(call_7186))) # shape=(11, 11, 6)
func_4786_call = mod.get_global_var('func_4786')
func_4788_call = mutated_mod.get_global_var('func_4788')
call_7256 = relay.TupleGetItem(func_4786_call(), 0)
call_7257 = relay.TupleGetItem(func_4788_call(), 0)
func_3990_call = mod.get_global_var('func_3990')
func_3993_call = mutated_mod.get_global_var('func_3993')
var_7260 = relay.var("var_7260", dtype = "float64", shape = (196,))#candidate|7260|(196,)|var|float64
call_7259 = relay.TupleGetItem(func_3990_call(relay.reshape(var_7260.astype('float64'), [14, 2, 7])), 0)
call_7261 = relay.TupleGetItem(func_3993_call(relay.reshape(var_7260.astype('float64'), [14, 2, 7])), 0)
output = relay.Tuple([call_7249,bop_7252,call_7256,call_7259,var_7260,])
output2 = relay.Tuple([call_7250,bop_7255,call_7257,call_7261,var_7260,])
func_7277 = relay.Function([var_7260,], output)
mod['func_7277'] = func_7277
mod = relay.transform.InferType()(mod)
mutated_mod['func_7277'] = func_7277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7278 = relay.var("var_7278", dtype = "float64", shape = (196,))#candidate|7278|(196,)|var|float64
func_7277_call = mutated_mod.get_global_var('func_7277')
call_7279 = func_7277_call(var_7278)
output = call_7279
func_7280 = relay.Function([var_7278], output)
mutated_mod['func_7280'] = func_7280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5836_call = mod.get_global_var('func_5836')
func_5838_call = mutated_mod.get_global_var('func_5838')
call_7354 = relay.TupleGetItem(func_5836_call(), 0)
call_7355 = relay.TupleGetItem(func_5838_call(), 0)
func_984_call = mod.get_global_var('func_984')
func_988_call = mutated_mod.get_global_var('func_988')
const_7361 = relay.const(8, dtype = "int32")#candidate|7361|()|const|int32
var_7362 = relay.var("var_7362", dtype = "int32", shape = (2016,))#candidate|7362|(2016,)|var|int32
call_7360 = relay.TupleGetItem(func_984_call(relay.reshape(const_7361.astype('int32'), []), relay.reshape(var_7362.astype('int32'), [12, 12, 14]), ), 0)
call_7363 = relay.TupleGetItem(func_988_call(relay.reshape(const_7361.astype('int32'), []), relay.reshape(var_7362.astype('int32'), [12, 12, 14]), ), 0)
output = relay.Tuple([call_7354,call_7360,const_7361,var_7362,])
output2 = relay.Tuple([call_7355,call_7363,const_7361,var_7362,])
func_7365 = relay.Function([var_7362,], output)
mod['func_7365'] = func_7365
mod = relay.transform.InferType()(mod)
var_7366 = relay.var("var_7366", dtype = "int32", shape = (2016,))#candidate|7366|(2016,)|var|int32
output = func_7365(var_7366)
func_7367 = relay.Function([var_7366], output)
mutated_mod['func_7367'] = func_7367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7382 = relay.var("var_7382", dtype = "float32", shape = (14, 8, 2))#candidate|7382|(14, 8, 2)|var|float32
uop_7383 = relay.cos(var_7382.astype('float32')) # shape=(14, 8, 2)
output = relay.Tuple([uop_7383,])
output2 = relay.Tuple([uop_7383,])
func_7391 = relay.Function([var_7382,], output)
mod['func_7391'] = func_7391
mod = relay.transform.InferType()(mod)
mutated_mod['func_7391'] = func_7391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7392 = relay.var("var_7392", dtype = "float32", shape = (14, 8, 2))#candidate|7392|(14, 8, 2)|var|float32
func_7391_call = mutated_mod.get_global_var('func_7391')
call_7393 = func_7391_call(var_7392)
output = call_7393
func_7394 = relay.Function([var_7392], output)
mutated_mod['func_7394'] = func_7394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6547_call = mod.get_global_var('func_6547')
func_6548_call = mutated_mod.get_global_var('func_6548')
call_7451 = relay.TupleGetItem(func_6547_call(), 0)
call_7452 = relay.TupleGetItem(func_6548_call(), 0)
func_984_call = mod.get_global_var('func_984')
func_988_call = mutated_mod.get_global_var('func_988')
var_7461 = relay.var("var_7461", dtype = "int32", shape = ())#candidate|7461|()|var|int32
var_7462 = relay.var("var_7462", dtype = "int32", shape = (2016,))#candidate|7462|(2016,)|var|int32
call_7460 = relay.TupleGetItem(func_984_call(relay.reshape(var_7461.astype('int32'), []), relay.reshape(var_7462.astype('int32'), [12, 12, 14]), ), 0)
call_7463 = relay.TupleGetItem(func_988_call(relay.reshape(var_7461.astype('int32'), []), relay.reshape(var_7462.astype('int32'), [12, 12, 14]), ), 0)
output = relay.Tuple([call_7451,call_7460,var_7461,var_7462,])
output2 = relay.Tuple([call_7452,call_7463,var_7461,var_7462,])
func_7476 = relay.Function([var_7461,var_7462,], output)
mod['func_7476'] = func_7476
mod = relay.transform.InferType()(mod)
mutated_mod['func_7476'] = func_7476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7476_call = mutated_mod.get_global_var('func_7476')
var_7478 = relay.var("var_7478", dtype = "int32", shape = ())#candidate|7478|()|var|int32
var_7479 = relay.var("var_7479", dtype = "int32", shape = (2016,))#candidate|7479|(2016,)|var|int32
call_7477 = func_7476_call(var_7478,var_7479,)
output = call_7477
func_7480 = relay.Function([var_7478,var_7479,], output)
mutated_mod['func_7480'] = func_7480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4756_call = mod.get_global_var('func_4756')
func_4757_call = mutated_mod.get_global_var('func_4757')
call_7492 = func_4756_call()
call_7493 = func_4756_call()
func_6799_call = mod.get_global_var('func_6799')
func_6800_call = mutated_mod.get_global_var('func_6800')
call_7498 = relay.TupleGetItem(func_6799_call(), 0)
call_7499 = relay.TupleGetItem(func_6800_call(), 0)
output = relay.Tuple([call_7492,call_7498,])
output2 = relay.Tuple([call_7493,call_7499,])
func_7501 = relay.Function([], output)
mod['func_7501'] = func_7501
mod = relay.transform.InferType()(mod)
output = func_7501()
func_7502 = relay.Function([], output)
mutated_mod['func_7502'] = func_7502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6040_call = mutated_mod.get_global_var('func_6040')
call_7506 = func_6038_call()
call_7507 = func_6038_call()
func_4263_call = mod.get_global_var('func_4263')
func_4264_call = mutated_mod.get_global_var('func_4264')
call_7521 = func_4263_call()
call_7522 = func_4263_call()
func_3990_call = mod.get_global_var('func_3990')
func_3993_call = mutated_mod.get_global_var('func_3993')
var_7524 = relay.var("var_7524", dtype = "float64", shape = (196,))#candidate|7524|(196,)|var|float64
call_7523 = relay.TupleGetItem(func_3990_call(relay.reshape(var_7524.astype('float64'), [14, 2, 7])), 0)
call_7525 = relay.TupleGetItem(func_3993_call(relay.reshape(var_7524.astype('float64'), [14, 2, 7])), 0)
output = relay.Tuple([call_7506,call_7521,call_7523,var_7524,])
output2 = relay.Tuple([call_7507,call_7522,call_7525,var_7524,])
func_7535 = relay.Function([var_7524,], output)
mod['func_7535'] = func_7535
mod = relay.transform.InferType()(mod)
var_7536 = relay.var("var_7536", dtype = "float64", shape = (196,))#candidate|7536|(196,)|var|float64
output = func_7535(var_7536)
func_7537 = relay.Function([var_7536], output)
mutated_mod['func_7537'] = func_7537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6490_call = mod.get_global_var('func_6490')
func_6492_call = mutated_mod.get_global_var('func_6492')
call_7539 = relay.TupleGetItem(func_6490_call(), 0)
call_7540 = relay.TupleGetItem(func_6492_call(), 0)
func_7277_call = mod.get_global_var('func_7277')
func_7280_call = mutated_mod.get_global_var('func_7280')
const_7548 = relay.const([3.567464,-5.055387,-2.298816,-7.455846,4.322884,-1.590127,0.670674,1.053116,-9.765806,2.569230,-0.929676,-6.268413,-0.989712,9.663135,3.567496,-7.388606,6.632559,4.868964,-6.383559,-0.778525,-2.163472,3.489056,8.985004,-4.186371,-6.798736,-6.229203,-2.129955,-1.333993,3.217960,-5.005210,8.101399,6.854064,9.978565,-1.815055,-5.489188,9.572465,1.402654,9.941097,3.541336,6.756052,6.591563,-3.792504,-2.542999,-5.072982,-2.672199,-6.128121,8.753525,-8.197513,0.064897,-7.884621,-6.304650,-5.418810,-3.389937,-3.390027,4.465062,7.809920,8.327795,-9.425045,-3.484822,9.736054,5.448700,-3.228624,6.041851,6.189209,-7.162154,-7.774096,8.844021,-8.865625,-2.436615,9.134725,-5.961623,-2.936823,-8.613142,-6.081600,3.060194,-5.304717,5.020808,9.024105,0.123163,9.299751,-0.534095,-2.575351,-2.297510,0.824177,4.230430,5.837695,7.533217,7.118876,-0.534583,-9.518462,2.108855,2.852816,-0.102392,9.154219,9.588577,6.809246,0.125736,-4.558055,-6.598343,-3.161356,-5.978157,-3.331444,-3.837108,-0.826171,8.395495,-3.920291,1.955524,6.457757,4.096631,7.961258,-6.319387,-9.369840,0.113401,9.435802,9.792174,1.407031,3.175215,2.078018,-2.802516,7.462204,6.522017,-2.753860,1.665805,-0.676004,7.126976,1.967808,-5.874299,6.048910,-1.417223,2.204298,-1.320114,-9.250325,-9.155991,7.138031,5.845574,-7.553200,8.824483,2.910867,3.717010,5.330678,6.013645,-0.393174,-3.724866,5.382032,-0.922500,-9.212205,-4.591275,8.107162,7.439530,8.985748,0.857153,2.159280,-3.395610,2.690392,-0.701092,-1.092731,7.118129,6.613644,-6.477650,4.514011,1.388752,-3.010210,-3.654157,1.127494,-2.200940,-9.164746,-2.873006,-3.612804,-6.404116,-1.050765,-1.568083,-8.864145,5.146368,-0.084974,0.796668,1.242733,5.592905,-6.962514,3.615632,4.448394,-8.948910,3.004958,1.654584,0.323640,3.214855,-5.424625,7.379797,6.381270,-2.328940,-6.470407,7.575841,2.662383,8.736085,-0.341564,6.781290,3.006003], dtype = "float64")#candidate|7548|(196,)|const|float64
call_7547 = relay.TupleGetItem(func_7277_call(relay.reshape(const_7548.astype('float64'), [196,])), 1)
call_7549 = relay.TupleGetItem(func_7280_call(relay.reshape(const_7548.astype('float64'), [196,])), 1)
output = relay.Tuple([call_7539,call_7547,const_7548,])
output2 = relay.Tuple([call_7540,call_7549,const_7548,])
func_7555 = relay.Function([], output)
mod['func_7555'] = func_7555
mod = relay.transform.InferType()(mod)
output = func_7555()
func_7556 = relay.Function([], output)
mutated_mod['func_7556'] = func_7556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7659 = relay.var("var_7659", dtype = "float32", shape = (14, 2, 8))#candidate|7659|(14, 2, 8)|var|float32
uop_7660 = relay.asinh(var_7659.astype('float32')) # shape=(14, 2, 8)
func_3862_call = mod.get_global_var('func_3862')
func_3865_call = mutated_mod.get_global_var('func_3865')
const_7671 = relay.const([[1.328034,5.979680],[-1.526925,-9.789221],[9.687974,-8.599901],[7.643030,-9.188273],[6.510012,-7.125694],[3.952874,-6.388580],[8.300024,-7.111023],[7.317199,6.142253],[3.355521,-8.168087],[-1.483242,-5.451592],[1.519980,8.408023],[4.477531,5.592584],[-1.495719,9.530575],[-1.367549,-2.636985],[3.440609,7.721636],[-9.526937,7.435881],[-1.578152,7.956108],[4.156108,-7.162882],[-1.678112,1.855038],[5.270245,7.168352],[-0.047983,7.395805],[-5.782843,2.818085],[6.859340,-9.124510],[6.611732,4.535678],[4.293346,-1.694652],[-9.702232,-0.340462],[-5.518194,-3.004497],[-3.810891,6.010018],[6.450484,9.804040],[-4.114154,0.719004],[-7.145948,7.726021],[-7.691800,6.637344],[1.000111,-1.696308],[-3.522639,-6.409102],[-0.462455,-5.511825],[-8.462334,6.567834],[-3.111246,4.523081],[3.468359,-5.058888],[9.086461,4.422412],[-8.469150,3.826113],[-0.745766,0.235416],[-2.666932,7.099231],[0.520163,9.291973],[5.584421,7.582032],[-7.392012,-5.451831],[3.549898,2.756718],[-6.705235,-9.566612],[3.341923,-9.075565],[8.499540,-3.178345],[-1.770869,-0.622109],[3.857017,5.920833],[9.465197,-8.112872],[-1.661127,0.930158],[-6.268660,-7.429561],[-3.797842,0.630448],[-9.138522,9.084739],[-6.958205,-1.600666],[-7.861679,-6.131114],[-0.731207,-9.245223],[-6.608772,5.020896],[-8.011884,-3.048763],[7.304167,5.386348],[-0.276118,9.666641],[2.205233,-5.341603],[-3.255630,-7.919853],[-8.856588,-2.559327],[-1.819220,-5.711064],[-4.781180,0.259652],[-6.557536,8.364229],[-4.628426,7.140358],[0.498248,-6.107775],[-5.983823,-1.670531],[1.063594,1.749346],[7.715510,-6.883659],[-2.374688,-9.195185],[5.296239,1.157472],[-2.646023,5.147568],[-6.507724,8.328523],[-1.922722,-3.367355],[-1.853508,4.390880],[5.201616,8.849413],[4.017493,-6.723385],[-1.727258,-7.464005],[2.851384,-1.778578],[-4.468064,-6.357807],[-0.515884,-3.667672],[4.555155,8.336859],[-3.109196,6.717615],[7.688085,-9.528406],[7.080110,1.943177],[-2.396687,5.499653],[0.698409,0.591444],[8.338751,-7.935001],[1.868203,-9.315014],[3.696318,-4.003756],[2.621758,6.371733],[9.680752,3.351964],[7.490585,-9.303354],[-8.470823,2.270825],[6.648736,6.191774],[-9.050413,2.461374],[-3.902646,4.803460],[1.966713,8.631303],[8.515689,-2.790532],[1.512424,6.509746],[-8.577452,-8.840018],[6.845995,-5.220058],[-1.615933,-7.190425],[-7.639826,-7.570723],[9.382364,-3.802108],[7.099626,7.339382],[7.863925,8.657098],[7.367839,8.221194],[8.502954,-6.084879],[5.026457,9.868604],[-0.693814,-7.115110],[7.926120,-2.951003],[-1.565502,-9.670986],[-7.767024,6.434947],[5.845491,-2.103160],[7.817431,-9.803972],[8.811009,-0.664683],[7.686498,-5.206046],[0.197402,-3.916958],[3.303720,9.659006],[-4.535944,-2.390007],[-4.369682,-6.763204],[-1.201067,-5.619527],[-1.898462,-5.531164],[-7.146005,-4.438402],[1.967930,0.886892],[3.284760,4.135059],[-6.422719,3.536164],[-4.796309,-7.334982],[2.039039,-5.912250],[6.305222,8.896861],[6.357047,-8.891068],[-2.923659,-5.583022],[4.786740,-4.678446],[2.276452,-1.499586],[2.542673,-0.802851],[8.946265,-6.301090],[1.843203,-1.805034],[6.585710,-5.610957],[-9.326292,-1.367610],[9.770186,-9.052765],[0.561112,-4.654198],[-8.253809,-5.020275],[-3.610416,-3.414918],[2.951065,-0.283179],[1.152088,-9.118035],[-0.474084,-2.670311],[2.560294,-2.271412],[3.334240,5.186278],[4.556085,7.291870],[-4.495434,8.980234],[5.386109,-0.840883],[-9.025678,7.115239],[-1.110523,4.487191],[2.243539,5.777107],[-5.964196,4.668085],[-1.217302,-5.939054],[-8.066987,5.164266],[-2.316857,6.367908],[-0.583466,-5.173890],[-9.063843,4.832341],[0.909225,-4.047439],[-5.907057,8.394869],[7.300919,-6.680266],[-4.132090,0.072978],[-9.179002,4.154115],[-3.133583,-2.334277],[2.312544,3.524216],[5.582727,-3.125250],[3.496008,1.730036],[-8.622096,2.439307],[2.721682,1.946311],[-5.755254,6.433337],[3.096119,6.817252],[9.330701,3.547608],[7.549146,8.034464],[8.647500,4.812416],[-8.538107,-9.326713],[-3.408482,-2.547055],[1.436473,5.127430],[-4.630574,-2.849946],[1.759278,2.333015],[-8.843329,3.409257],[-3.266196,-4.121024],[-5.092228,-2.838904],[-7.771090,9.528986],[-9.035130,-7.148494],[5.069003,-6.029631],[-7.349476,-3.073801],[-1.390866,8.335341],[-9.378582,-9.348698],[9.057305,-9.324800],[6.252100,-8.106993],[3.998295,-1.181077],[7.789214,9.324679],[-0.587455,-8.359308],[-7.522835,-9.431870],[8.556571,0.057313],[7.439017,-1.212590],[-5.506868,-8.512379],[0.833150,6.963287],[4.894190,8.871640],[8.035743,2.674092],[-9.725137,-1.832429],[-0.528416,4.438463],[-1.883471,5.524345],[5.199304,-4.630613],[-5.965022,9.202523],[4.632048,-8.537738],[-0.390790,4.869511],[-8.428044,9.221820],[5.469477,-1.171120],[-9.625571,1.754148],[-7.498640,-1.105376],[-4.387947,-3.626332],[-9.361617,-5.914980],[-5.554634,-4.926716],[-0.049901,-6.972184],[-1.746104,3.469801],[-4.312139,-0.928405],[-5.792306,4.151084],[-2.019494,-9.193536],[6.334864,-0.795589],[-4.103100,4.984209],[5.809595,4.148890],[-8.812295,3.209496],[6.742354,-4.640288],[-2.843244,-6.618365],[-4.234249,3.643868],[-5.030010,0.557616],[-6.868788,4.174369],[-1.635947,-9.548559],[-7.271961,-9.156488],[8.988495,9.185930],[-2.420310,-1.709016],[-1.796921,0.072611],[1.415637,-3.897544],[-8.877471,3.073904],[3.062038,3.562489],[0.013281,6.764836],[1.983897,-9.473697],[2.083938,8.618663],[5.647579,-8.437608],[0.808575,-8.370952],[7.154423,-3.051078],[-0.737591,-7.235706],[-3.551943,-5.204064],[9.052980,3.628972],[4.673636,-0.824128],[9.534185,-3.643448],[8.961461,0.865050],[1.136048,5.400000],[-7.793763,-3.931283],[2.356975,-3.788861],[5.954815,-2.692051],[-2.294904,4.782732],[2.039368,7.726185],[-0.105870,-7.775081],[-1.263066,-5.414651],[4.541589,-0.046859],[4.708196,9.607850],[-1.848612,-6.775890],[-2.424961,-7.377668],[-3.181553,-9.788398],[6.672380,-7.704185],[7.415769,-5.083943],[-6.522830,5.418882],[-1.827944,1.041391],[5.569738,1.677969],[-5.840968,8.682848],[-6.823702,-6.798195],[6.933622,-8.569034],[-2.161064,-9.849730],[8.848838,0.681862],[7.575147,-4.724346],[9.233082,4.390694],[-1.483277,-4.057086],[-3.166214,2.884513],[2.306134,3.448363],[-9.798853,-9.166655],[4.090681,-4.134471],[5.266828,-2.061466],[0.643845,-6.423958],[9.212266,8.704863],[-2.298252,-4.811704],[1.244890,9.643998],[1.371703,5.149208],[4.302145,-0.430258],[3.995127,5.214626],[3.288178,6.269378],[-4.945009,1.360581],[-7.289471,1.130011],[-2.262257,7.768055],[0.037460,-0.678128],[-2.707184,-9.283094],[8.668835,-2.272743],[-5.002055,8.336605],[4.296706,-6.554871],[3.395415,3.476279],[-7.154775,-3.461834],[5.779631,-4.919613],[0.994652,4.452248],[-2.754445,2.057770],[2.163405,-5.231035],[8.590932,9.687343],[0.016186,6.424729],[6.575790,-0.255463],[3.027049,-6.432985],[-6.661514,-4.431721],[6.796516,8.373509],[5.820205,-3.681622],[-6.493768,-2.255978],[-4.092690,2.701204],[8.747610,-1.503193],[3.698550,-3.460003],[-2.424516,6.984105],[9.437755,-8.867303],[-8.215342,7.983822],[-7.122270,-7.744465],[-0.967037,-9.088403],[-2.661801,-4.083141],[-1.646632,-5.932229],[2.653552,5.139024],[2.180601,9.026585],[-7.438127,6.651632],[0.024592,-2.249077],[-2.834010,3.843536],[-1.695408,-7.463497],[5.566961,-7.435832],[9.999156,5.900729],[-0.629915,-6.600212],[-0.888973,-3.507993],[1.591100,7.074849],[-4.622675,-8.560351],[-4.685435,-3.276205],[-7.354156,0.410120],[6.866683,4.395298],[-1.409747,-6.715367],[1.938344,-8.513196],[-8.544118,-1.492301],[-1.447342,-9.566595],[-3.912386,-2.231701],[-0.470010,0.674820],[5.303499,-3.004441],[-5.466373,6.746710],[5.892093,9.967968],[3.000591,-2.101944],[9.820550,7.164254],[-3.568049,-1.236220],[4.627851,9.285553],[9.396592,-5.264187],[2.707752,-4.774843],[-8.284003,-7.872956],[8.314957,3.665375],[4.052360,-0.475571]], dtype = "float64")#candidate|7671|(360, 2)|const|float64
call_7670 = relay.TupleGetItem(func_3862_call(relay.reshape(const_7671.astype('float64'), [720,])), 0)
call_7672 = relay.TupleGetItem(func_3865_call(relay.reshape(const_7671.astype('float64'), [720,])), 0)
output = relay.Tuple([uop_7660,call_7670,const_7671,])
output2 = relay.Tuple([uop_7660,call_7672,const_7671,])
func_7673 = relay.Function([var_7659,], output)
mod['func_7673'] = func_7673
mod = relay.transform.InferType()(mod)
var_7674 = relay.var("var_7674", dtype = "float32", shape = (14, 2, 8))#candidate|7674|(14, 2, 8)|var|float32
output = func_7673(var_7674)
func_7675 = relay.Function([var_7674], output)
mutated_mod['func_7675'] = func_7675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4404_call = mod.get_global_var('func_4404')
func_4405_call = mutated_mod.get_global_var('func_4405')
call_7767 = relay.TupleGetItem(func_4404_call(), 0)
call_7768 = relay.TupleGetItem(func_4405_call(), 0)
func_4627_call = mod.get_global_var('func_4627')
func_4632_call = mutated_mod.get_global_var('func_4632')
var_7789 = relay.var("var_7789", dtype = "uint8", shape = (27, 2))#candidate|7789|(27, 2)|var|uint8
var_7790 = relay.var("var_7790", dtype = "float32", shape = (192,))#candidate|7790|(192,)|var|float32
var_7791 = relay.var("var_7791", dtype = "float32", shape = (216, 4))#candidate|7791|(216, 4)|var|float32
var_7792 = relay.var("var_7792", dtype = "float64", shape = (9, 60))#candidate|7792|(9, 60)|var|float64
call_7788 = relay.TupleGetItem(func_4627_call(relay.reshape(var_7789.astype('uint8'), [54,]), relay.reshape(var_7790.astype('float32'), [1, 192]), relay.reshape(var_7791.astype('float32'), [108, 8]), relay.reshape(var_7792.astype('float64'), [540,]), ), 6)
call_7793 = relay.TupleGetItem(func_4632_call(relay.reshape(var_7789.astype('uint8'), [54,]), relay.reshape(var_7790.astype('float32'), [1, 192]), relay.reshape(var_7791.astype('float32'), [108, 8]), relay.reshape(var_7792.astype('float64'), [540,]), ), 6)
func_7148_call = mod.get_global_var('func_7148')
func_7151_call = mutated_mod.get_global_var('func_7151')
const_7806 = relay.const([-6.531510,4.627549,-7.007749,-0.782644,5.054081,-4.731466,-8.946995,6.181032,8.278018,-5.949845,9.438420,2.055429,-5.590897,8.315707,1.856404,8.045543,1.582853,6.767651,-8.243602,-3.526285,-5.231106,-0.047859,-3.218122,9.250923,5.021556,3.379385,4.977435,5.242493,-3.771215,6.122060,-1.866152,7.072594,9.186390,2.919462,-8.698600,7.559983,-6.141819,-3.639103,-0.375939,2.649102,4.377353,-3.800503,2.512949,-1.690046,8.304302,-8.891054,-1.428984,0.638664,-7.830994,4.042023,-2.826880,4.066646,1.866260,-6.464601,5.507093,7.607169,-6.546561,6.154395,-5.536420,6.603629,-5.338059,7.355188,-1.007967,-7.622296,2.620713,0.750742,9.715620,-3.545828,-5.569190,-1.308896,-5.963158,-4.317803,1.518720,3.140562,9.966661,4.554675,-1.613705,7.727639,6.815763,3.744730,3.231332,6.960296,2.170049,1.446078,-5.501357,6.735224,-9.963098,9.738327,-6.449640,7.907555,1.611648,0.162101,8.176738,-9.691052,-6.450863,0.836237,4.135635,-6.043914,-9.561547,-5.245718,3.308795,-2.502899,-2.844574,-1.498332,-5.098595,-2.145933,-0.623342,1.753479,-2.400278,1.383657,1.290778,1.989015,7.218274,8.331800,4.111984,-8.397312,0.885688,-0.496759,-4.491037,-4.358442,-5.366413,-6.717209,-2.414383,-5.097053,-9.745943,-3.268678,-1.027955,-7.075785,3.169604,-8.392572,1.086223,-9.357052,7.778206,-6.802319,6.366328,-9.098052,-5.509831,-5.030091,-8.934063,2.297650,-5.690077,-3.639825,9.821313,-9.001426,-8.673916,-1.683331,7.379198,-6.834096,7.649749,-4.465781,-0.598154,8.199459,-9.174681,3.650792,-9.346056,1.584567,-5.125182,-0.451080,-3.781441,7.001814,0.310403,-0.201466,-1.407512,8.523892,-3.201313,-0.730116,-1.809043,5.091174,6.119326,4.176391,6.153834,7.843298,-3.775675,-1.882971,-9.145109,0.735936,3.524657,6.149290,-7.323169,9.602612,-2.114012,5.371853,5.849045,3.124978,-9.814884,7.840032,4.862874,5.334000,-5.496867,-2.014916,8.778688,-3.326892,-1.532667,-7.333791,-0.112707,9.941966,0.347403,0.840165,8.249082,-1.914924,1.937358,1.837102,-2.348342,-2.062478,-2.146517,1.705162,-2.328954,-9.222802,7.237168,7.640417,5.020389,2.095142,-0.758794,7.444548,5.140876,0.776895,7.997609,-7.415443,0.638891,-3.682493,7.755198,-1.942174,5.651560,-8.264276,8.602081,-5.820003,-1.623928,-7.883860,-3.558484,-4.116168,0.680235,-3.961187,8.827930,-1.017210,0.917142,-8.203605,-6.455235,-7.127097,-0.961334,1.430558,6.208934,-0.323078,1.701874,-9.463657,-5.593399,0.563061,-4.772028,0.437665,-8.418205,-2.687627,-1.958224,0.749300,1.311782,0.591528,-6.626972,-4.380838,-4.902325,-2.585988,4.574427,-5.066268,9.206680,0.252668,6.845885,2.243341,-9.191333,-7.394734,6.009566,3.506917,3.645044,-7.918238,5.584431,4.542074,0.628125,6.812118,-9.556320,-8.260267,-3.945467,9.421761,-6.790299,1.409703,1.195503,-7.277247,8.889679,5.089872,-6.658911,4.198860,-0.216172,8.846354,-4.245289,-0.079966,-4.702132,-5.243862,-9.085944,6.587391,3.525283,0.280049,-8.137450,8.556328,-1.505943,-5.337239,-8.398358,-1.427382,7.024157,-2.225296,0.493507,-7.847390,9.998067,-4.031870,5.185056,8.928888,-8.069507,2.884593,-2.469324,2.956459,8.823855,6.845243,2.279810,7.579727,2.440183,-9.283962,-6.088038,3.115472,5.830445,-0.120843,9.460876,9.655694,-8.546917,-9.661377,8.901683,1.151292,2.909208,-7.038981,2.498309,4.081932,9.975534,2.142140,6.188392,-9.221810,-5.677600,9.033308,-8.376416,8.700458,9.633196,4.614338,8.108073,6.754912,0.692101,4.744888,7.641306,8.264848,-7.921031,5.114446,0.343075,8.922935,-2.946963,6.807789,4.229983,0.864814,-9.644700,-0.964915,-1.602415,1.396882,1.237154,-1.141952,9.504889,-5.973536,-5.391173,1.522942,1.837176,1.492739,6.232711,-4.533578,1.762144,2.456080,-1.217724,-6.663944,-9.706130,-9.055303,-3.808584,-0.750572,-7.395765,-1.056778,-7.995239,2.101253,-1.316967,7.583621,6.427283,-7.133724,-5.661734,9.284827,2.124929,8.598009,9.509507,-5.179937,-1.123046,2.445207,3.092342,7.034659,-8.323096,5.073000,0.322769,-9.121410,-7.340836,3.138792,8.142041,2.016408,-9.403430,-8.138811,-0.755524,-7.264548,7.327117,5.607170,4.842629,5.935153,1.413347,-9.207541,4.972313,-8.752395,3.828938,-8.692928,-0.610220,-4.041757,-7.771354,-0.486866,5.689685,8.157821,-1.576053,9.953996,3.374866,0.747268,7.542257,3.626003,6.533329,-1.393151,-1.523709,2.635258,-7.083347,3.696792,-6.023980,4.935126,-6.762260,-2.459300,8.531629,-1.113323,-6.861735,-3.653171,3.828997,3.448598,5.809507,-7.939938,-5.033162,-2.664761,9.808998,-6.666784,4.224361,0.399469,-3.618097,-7.139166,1.682958,3.837253,0.255222,4.200518,3.442168,3.280957,-1.772992,-5.528388,7.459591,2.348897,8.424932,-2.158775,6.375473,-1.615153,3.372168,1.084210,-6.792777,3.170244,-4.571900,-4.961369,3.910150,-3.170225,8.635002,-9.508777,1.498817,7.200287,7.925637,7.914328,1.248909,1.209305,4.941542,1.035480,2.987156,2.876145,0.684717,3.883975,8.916811,-6.855364,8.064156,3.457600,-0.489316,6.674384,-2.056876,-1.944503,-4.476251,-0.181958,2.624478,2.341084,-5.661492,-9.784297,5.160676,-2.262260,-0.114947,4.928735,-2.787091,-9.899241,-6.071087,-8.556315,7.744104,-2.482146,-4.815783,0.651654,4.881212,-9.430219,2.172342,2.817537,0.226732,6.547293,5.130611,6.084111,0.491578,-8.357205,3.910643,-3.635192,-7.921058,-0.466173,0.278037,-5.550335,7.753558,9.677324,6.517087,1.347890,-3.118126,-6.687533,3.461357,0.866635,-4.977989,-3.029464,2.364023,-6.250205,-3.820386,-3.896052,-9.410205,-3.124266,-5.436806,-7.412247,-7.298798,-0.420723,-7.735751,-0.568787,-0.898144,-6.339234,-7.094098,-1.894488,8.345702,7.138891,0.184471,7.188721,-8.151065,5.876435,4.101034,-6.976338,9.646793,7.853969,-0.559404,-3.094922,0.750934,8.868965,9.946057,5.711496,-6.893938,-6.361924,6.275537,0.965924,8.074687,-7.553276,-3.225289,5.157085,3.595114,6.353525,-1.679627,-8.322157,-7.900450,3.403979,1.642264,-1.870091,3.842410,5.649429,-4.844344,-0.117621,-7.166008,7.380199,-1.258651,-3.859267,7.573485,5.744384,8.424366,3.250327,6.986730,-5.129545,-0.554387,-6.137065,4.227308,-5.992288,-8.674996,-0.924803,1.676530,8.331011,-3.806894,9.222406,6.674595,0.022211,-8.211882,-1.784056,-1.011559,-1.769736,5.813979,-5.111640,-4.377796,-9.557658,-1.549669,0.082261,-7.755959,9.666407,9.036131,-0.545127,0.584021,6.074601,0.271578,9.392964,-4.859168,-9.235748,-6.464904,6.139911,4.260051,4.726233,-8.695477,0.204197,5.124653,3.642095,8.811389,1.732510,2.591620,-4.692926,-3.611936,-1.802601,0.649101,-1.493446,-8.419704,-7.914345,4.603704,3.561191,4.259005,5.363089,8.728814,7.094682,-4.745845,8.746607,8.543451,-8.010690,1.468284,1.055436,6.847038,-5.306041,3.399743,5.968370,-2.893788,-4.260663,8.131248,-9.529852,-8.280062,4.220215,-4.020257,-2.710323,-9.235356,4.865976,-0.357958,-4.454558,-1.822700,4.683274,-3.018331,-5.808898,8.021888,-7.801408,-0.463810,3.183090,-9.333056,-9.021136,8.933501,-7.621534,4.306558,5.046544,-4.276972,-9.424401,-5.343420,-8.394398,-1.450783,6.567149,4.706473,1.646550,-8.663975,-8.118403,2.095575,6.088244,-9.600371,0.010978,1.718283,5.318585,-1.189633,-0.920812,3.919996,0.903829,3.555419,7.171168,-2.298391,7.391959,0.773394,6.960921,-1.131798,2.054504,2.518872,-5.325413,7.459656,-2.031863,4.620569,-0.550335,-9.793001,7.285682,-8.742347,-8.719451,5.095347,1.303131,-8.995349,7.513328,2.067499,1.030754,4.077783,9.734138,4.355652,8.221195,-8.165084,8.917173,1.078407,-9.300856,3.969436,5.604532,-6.787014,3.824969,3.177976,3.982009,3.975695,0.002941,6.344640,8.240897,1.071577,4.866791,-0.661680,-4.598541,0.337455,1.438049,1.306081,6.577976,0.097295,-7.993602,-7.725033,3.086198,-9.671859,-5.669340,6.145183,-8.599297,-6.410689,-9.925620,-6.499608,9.844842,9.398142,-2.280429], dtype = "float32")#candidate|7806|(784,)|const|float32
call_7805 = relay.TupleGetItem(func_7148_call(relay.reshape(const_7806.astype('float32'), [784,])), 3)
call_7807 = relay.TupleGetItem(func_7151_call(relay.reshape(const_7806.astype('float32'), [784,])), 3)
output = relay.Tuple([call_7767,call_7788,var_7789,var_7790,var_7791,var_7792,call_7805,const_7806,])
output2 = relay.Tuple([call_7768,call_7793,var_7789,var_7790,var_7791,var_7792,call_7807,const_7806,])
func_7808 = relay.Function([var_7789,var_7790,var_7791,var_7792,], output)
mod['func_7808'] = func_7808
mod = relay.transform.InferType()(mod)
mutated_mod['func_7808'] = func_7808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7808_call = mutated_mod.get_global_var('func_7808')
var_7810 = relay.var("var_7810", dtype = "uint8", shape = (27, 2))#candidate|7810|(27, 2)|var|uint8
var_7811 = relay.var("var_7811", dtype = "float32", shape = (192,))#candidate|7811|(192,)|var|float32
var_7812 = relay.var("var_7812", dtype = "float32", shape = (216, 4))#candidate|7812|(216, 4)|var|float32
var_7813 = relay.var("var_7813", dtype = "float64", shape = (9, 60))#candidate|7813|(9, 60)|var|float64
call_7809 = func_7808_call(var_7810,var_7811,var_7812,var_7813,)
output = call_7809
func_7814 = relay.Function([var_7810,var_7811,var_7812,var_7813,], output)
mutated_mod['func_7814'] = func_7814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7840 = relay.var("var_7840", dtype = "float64", shape = (16, 4, 1))#candidate|7840|(16, 4, 1)|var|float64
var_7841 = relay.var("var_7841", dtype = "float64", shape = (16, 4, 13))#candidate|7841|(16, 4, 13)|var|float64
bop_7842 = relay.floor_divide(var_7840.astype('float64'), var_7841.astype('float64')) # shape=(16, 4, 13)
output = bop_7842
output2 = bop_7842
func_7845 = relay.Function([var_7840,var_7841,], output)
mod['func_7845'] = func_7845
mod = relay.transform.InferType()(mod)
var_7846 = relay.var("var_7846", dtype = "float64", shape = (16, 4, 1))#candidate|7846|(16, 4, 1)|var|float64
var_7847 = relay.var("var_7847", dtype = "float64", shape = (16, 4, 13))#candidate|7847|(16, 4, 13)|var|float64
output = func_7845(var_7846,var_7847,)
func_7848 = relay.Function([var_7846,var_7847,], output)
mutated_mod['func_7848'] = func_7848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7501_call = mod.get_global_var('func_7501')
func_7502_call = mutated_mod.get_global_var('func_7502')
call_7875 = relay.TupleGetItem(func_7501_call(), 1)
call_7876 = relay.TupleGetItem(func_7502_call(), 1)
output = call_7875
output2 = call_7876
func_7880 = relay.Function([], output)
mod['func_7880'] = func_7880
mod = relay.transform.InferType()(mod)
mutated_mod['func_7880'] = func_7880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7880_call = mutated_mod.get_global_var('func_7880')
call_7881 = func_7880_call()
output = call_7881
func_7882 = relay.Function([], output)
mutated_mod['func_7882'] = func_7882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_7898 = relay.TupleGetItem(func_4993_call(), 0)
call_7899 = relay.TupleGetItem(func_4995_call(), 0)
output = call_7898
output2 = call_7899
func_7901 = relay.Function([], output)
mod['func_7901'] = func_7901
mod = relay.transform.InferType()(mod)
output = func_7901()
func_7902 = relay.Function([], output)
mutated_mod['func_7902'] = func_7902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5632_call = mod.get_global_var('func_5632')
func_5634_call = mutated_mod.get_global_var('func_5634')
call_7998 = relay.TupleGetItem(func_5632_call(), 0)
call_7999 = relay.TupleGetItem(func_5634_call(), 0)
func_7845_call = mod.get_global_var('func_7845')
func_7848_call = mutated_mod.get_global_var('func_7848')
var_8030 = relay.var("var_8030", dtype = "float64", shape = (64,))#candidate|8030|(64,)|var|float64
var_8031 = relay.var("var_8031", dtype = "float64", shape = (832,))#candidate|8031|(832,)|var|float64
call_8029 = func_7845_call(relay.reshape(var_8030.astype('float64'), [16, 4, 1]), relay.reshape(var_8031.astype('float64'), [16, 4, 13]), )
call_8032 = func_7845_call(relay.reshape(var_8030.astype('float64'), [16, 4, 1]), relay.reshape(var_8031.astype('float64'), [16, 4, 13]), )
output = relay.Tuple([call_7998,call_8029,var_8030,var_8031,])
output2 = relay.Tuple([call_7999,call_8032,var_8030,var_8031,])
func_8033 = relay.Function([var_8030,var_8031,], output)
mod['func_8033'] = func_8033
mod = relay.transform.InferType()(mod)
mutated_mod['func_8033'] = func_8033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8033_call = mutated_mod.get_global_var('func_8033')
var_8035 = relay.var("var_8035", dtype = "float64", shape = (64,))#candidate|8035|(64,)|var|float64
var_8036 = relay.var("var_8036", dtype = "float64", shape = (832,))#candidate|8036|(832,)|var|float64
call_8034 = func_8033_call(var_8035,var_8036,)
output = call_8034
func_8037 = relay.Function([var_8035,var_8036,], output)
mutated_mod['func_8037'] = func_8037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_8063 = func_4336_call()
call_8064 = func_4336_call()
func_6799_call = mod.get_global_var('func_6799')
func_6800_call = mutated_mod.get_global_var('func_6800')
call_8065 = relay.TupleGetItem(func_6799_call(), 0)
call_8066 = relay.TupleGetItem(func_6800_call(), 0)
output = relay.Tuple([call_8063,call_8065,])
output2 = relay.Tuple([call_8064,call_8066,])
func_8068 = relay.Function([], output)
mod['func_8068'] = func_8068
mod = relay.transform.InferType()(mod)
mutated_mod['func_8068'] = func_8068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8068_call = mutated_mod.get_global_var('func_8068')
call_8069 = func_8068_call()
output = call_8069
func_8070 = relay.Function([], output)
mutated_mod['func_8070'] = func_8070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6682_call = mod.get_global_var('func_6682')
func_6684_call = mutated_mod.get_global_var('func_6684')
call_8083 = func_6682_call()
call_8084 = func_6682_call()
output = call_8083
output2 = call_8084
func_8085 = relay.Function([], output)
mod['func_8085'] = func_8085
mod = relay.transform.InferType()(mod)
mutated_mod['func_8085'] = func_8085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8085_call = mutated_mod.get_global_var('func_8085')
call_8086 = func_8085_call()
output = call_8086
func_8087 = relay.Function([], output)
mutated_mod['func_8087'] = func_8087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5836_call = mod.get_global_var('func_5836')
func_5838_call = mutated_mod.get_global_var('func_5838')
call_8091 = relay.TupleGetItem(func_5836_call(), 0)
call_8092 = relay.TupleGetItem(func_5838_call(), 0)
func_5836_call = mod.get_global_var('func_5836')
func_5838_call = mutated_mod.get_global_var('func_5838')
call_8098 = relay.TupleGetItem(func_5836_call(), 0)
call_8099 = relay.TupleGetItem(func_5838_call(), 0)
output = relay.Tuple([call_8091,call_8098,])
output2 = relay.Tuple([call_8092,call_8099,])
func_8102 = relay.Function([], output)
mod['func_8102'] = func_8102
mod = relay.transform.InferType()(mod)
output = func_8102()
func_8103 = relay.Function([], output)
mutated_mod['func_8103'] = func_8103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6547_call = mod.get_global_var('func_6547')
func_6548_call = mutated_mod.get_global_var('func_6548')
call_8119 = relay.TupleGetItem(func_6547_call(), 0)
call_8120 = relay.TupleGetItem(func_6548_call(), 0)
output = relay.Tuple([call_8119,])
output2 = relay.Tuple([call_8120,])
func_8129 = relay.Function([], output)
mod['func_8129'] = func_8129
mod = relay.transform.InferType()(mod)
output = func_8129()
func_8130 = relay.Function([], output)
mutated_mod['func_8130'] = func_8130
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8177 = relay.var("var_8177", dtype = "uint64", shape = (11, 5, 15))#candidate|8177|(11, 5, 15)|var|uint64
var_8178 = relay.var("var_8178", dtype = "uint64", shape = (11, 5, 15))#candidate|8178|(11, 5, 15)|var|uint64
bop_8179 = relay.less(var_8177.astype('bool'), relay.reshape(var_8178.astype('bool'), relay.shape_of(var_8177))) # shape=(11, 5, 15)
func_2148_call = mod.get_global_var('func_2148')
func_2154_call = mutated_mod.get_global_var('func_2154')
const_8187 = relay.const([[-8.256386,-4.899367,8.562581,9.482708,-5.944101,4.678363,-9.938203,5.795307,-7.028026,8.776623,-7.427237,-0.465872,-9.695719,3.496236,-1.556387,9.480402,-5.500783,-2.342967,2.672175,6.752157,-9.522152,-3.321906,-7.156676,-5.319511,-6.331635,2.704887,8.358636,-2.320183,-7.266748,-5.516974,-9.131409,4.936948,6.255246,6.125700,6.816694,0.371514,8.691692,-8.721960,1.374704,-9.771843,-6.504868,9.824939,7.547541,2.214842,5.854597,-8.292740,2.352681,0.174486,8.741992,-8.384536,5.363692,-8.960164,8.142138,-6.720443,-7.467446,-9.329510,-7.153180,-4.546386,-3.217394,3.405948,8.180516,8.134821,7.656817,3.230259,4.950463,9.211586,2.767496,2.977394,-4.026872,-5.890220,-8.720826,8.947584,-6.075876,-3.186120,2.584682,-9.074806,8.569173,-1.498185,-4.770785,-5.188253,5.188195,-5.026243,8.762773,2.047596,0.444197,-5.343290,-7.057275,9.366076,7.166777,3.955749,4.001620,3.974513,-5.618990,-5.365501,-6.680216,-2.910568,-3.351745,-7.755243,5.324409,-4.195306,4.722552,-5.259902,-9.783166,-3.383724,-2.396103,6.406634,-3.175290,-7.040267,-9.029757,0.808161,3.274339,-8.007568,5.873098,-0.504196,-9.479735,2.736414,9.209056,0.056205,6.386391,-0.364294,-4.321348,-0.705494,-3.418213,0.315554,9.762698,6.685384,-4.439660,-2.777839,3.814940,-6.886408,2.584190,0.539471,-5.701190,6.099726,6.835849,2.519259,0.379421,-7.613051,-1.335633,-6.020086,-1.106461,9.396419,3.114082,-6.752784,-0.713070,-0.962784,7.672292,-0.549108,-1.955505,7.566610,2.909226,8.619569,-3.334569,9.079124,8.917966,-2.823856,0.159959,5.200900,-4.371381,9.059637,-4.783152,-6.362316,-5.750604,3.718380,-3.130261,-9.709687,4.408184,-1.614886,6.390407,3.291600,0.113494,-7.739391,0.268599,3.595523,-6.079761,-5.555825,-4.185241,-3.634332,9.001414,-3.594537,-7.413114,-2.390201,-6.668276,-4.109239,-7.370169,1.919174,5.259934,-6.623101,2.768594,-5.443577,2.778710,-9.098335,-5.411707,-6.125571,1.163054,2.263720,9.950905,3.787350,1.535648,1.720357,5.094346,3.080141,-5.745559,3.826103,-5.379452,1.947910,-8.706162,0.417104,-3.394676,5.891937,-7.191367,-0.652510,-3.635212,-8.263369,0.945755,9.683677,-3.019611,3.078762,-6.335610,-4.103007,0.629713,-0.348881,7.569314,-1.669713]], dtype = "float32")#candidate|8187|(1, 224)|const|float32
const_8188 = relay.const([-6.581849,4.296442,-3.670650,-5.998792,8.955283,-0.938256,0.726014,9.466274,5.933530,-2.071564,9.199776,-0.440936,-6.678269,7.388458,-3.164542,-2.382979,-1.976216,2.151815,8.571745,-0.884145,2.285106,-6.407649,-8.524822,7.382810,5.602346,-2.424934,-3.122435,5.224728,3.940246,4.733197,-5.565204,6.689792,6.219440,8.799658,-5.390317,-1.266933,-9.465232,-0.717181,-9.390962,-4.367771,9.303520,-2.231200,-7.666186,7.603258,-2.784374,0.949664,-2.321004,1.580982,-9.409097,-0.975797,-0.031517,-0.498459,8.122602,-9.170477,-7.292400,1.117013,3.829011,-9.034901,8.887489,-5.221107,-4.024823,-7.812382,-5.478480,-8.331483,-6.611002,6.275964,4.590197,-7.443040,3.650247,-3.581062,7.205326,3.362250,-9.414879,-2.916256,5.931488,6.874451,4.565623,-5.093083,-5.191422,-8.925912,2.834061,0.974640,9.488613,1.928467,-7.135668,8.169791,9.110882,7.765619,-5.219280,-2.156255,-5.865032,4.016565,3.129570,1.568624,-3.095659,8.926819,7.719851,0.408325,-8.554673,2.922380,-2.128598,-0.307889,-9.377062,1.025089,-8.922394,-9.795559,-8.077982,-3.372749,-0.815312,1.230141,4.856640,-8.963289,0.821628,4.624217,5.890275,9.831136,7.515154,0.512999,6.773343,-3.207209,-1.129683,-2.972281,-6.453055,2.987808,-8.201948,-1.528651,9.748249,-7.900125,-7.688796,-8.357372,6.390866,2.271036,4.844947,-2.810046,-4.007537,-1.806825,1.649539,2.123371,4.413114,-8.563174,6.219848,4.115101,-1.732584,6.276851,-9.883156,-1.608401,9.364833,-2.085831,-2.030276,4.830346,-3.315392,-1.355977,-3.863214,3.106024,-3.382551,3.987829,-0.388379,-1.313923,5.525051,1.597660,8.264110,8.118040,-7.786401,3.880724,-3.400135,4.859053,5.419496,-0.134942,0.576377,6.154124,-9.988257,7.249615,-0.962415,7.390936,2.348792,7.653956,-9.207771,-2.246107,-3.683981,4.447571,-4.148976,8.423540,-4.600929,-3.129222,-7.754408,4.426250,-6.155605,3.653150,-8.208616,-1.935501,-3.400143,-3.484164,-4.268672,7.855449,6.626194,3.936495,9.480163,9.906172,1.133884,2.791763,6.418470,-2.076483,6.777503,-7.404577,-4.467744,0.628825,-1.829978,8.763357,-2.558005,-5.187475,4.620316,-1.342822,-8.033592,4.397503,3.901592,0.330132,1.976461,-3.392027,-4.161318,1.520557,-4.130958,6.166776,-0.765999,1.335765,6.897872,-8.332365,-3.406628,5.440826,-1.751373,-4.454607,9.792290,8.036273,5.123688,2.336242,-1.657628,-8.209028,6.137480,-9.732200,-1.535011,0.339081,1.761983,-6.517328,-1.342293,-3.872545,-0.693609,-6.264655,3.123381,3.739682,9.475142,-5.156675,9.405289,-7.848257,-4.135761,-0.898237,0.306540,-9.439836,-8.583294,-7.995265,-0.117384,9.004143,5.487003,-0.101899,2.006381,5.301276,-2.355325,1.821005,-7.943232,-0.276791,-4.742526,3.238441,-9.215974,-3.282999,-1.143315,7.783027,8.557951,-1.234434,-2.216965,5.300169,-1.328325,6.565871,-6.098065,-6.339513,-4.945809,1.416458,6.114035,-4.675356,-8.460147,-9.937966,7.613373,3.296362,8.905112,0.898635,-8.994893,8.117779,7.232462,8.209329,5.730066,-1.228740,8.241161,-9.024075,-9.035037,-8.178408,5.455184,-4.341957,9.700938,-7.334383,8.703579,-7.525890,-4.304791,-9.702978,-3.274741,-1.113329,5.073419,-1.813241,-7.760380,1.009472,3.033761,-3.749623,3.119996,-7.833124,-7.008987,2.748261,-3.696931,-6.961765,9.896487,1.658893,-7.281249,-3.917281,-3.506519,-3.403802,6.152775,-4.791635,-2.808171,-9.150669,7.919799,-3.475446,6.684466,3.979837,9.004799,-6.815408,-8.683880,0.797828,5.268001,-3.788000,-2.361307,0.752556,-4.601262,-5.784761,-4.970770,-7.289942,1.484442,4.003380,-8.602849,9.777132,-4.092801,1.124032,2.467982,-1.106677,-3.726908,-9.078508,8.325547,-2.501296,2.606217,-6.700137,8.977717,3.639762,9.855110,9.633335,6.966942,-9.744646,1.064403,-8.022189,-7.552419,1.022295,7.759354,5.494105,5.588741,0.664558,-5.559558,-7.118856,-3.685226,0.390293,9.943822,-3.429598,1.603049,-0.172533,-1.355923,9.719216,8.594612,6.965141,-0.516220,-9.065146,-3.220541,3.039727,7.107484,1.650715,4.713906,-3.119358,3.738836,-1.907486,0.776297,0.724055,9.169653,-7.118747,-6.385706,-4.854533,-1.882022,-2.414316,-5.417627,4.178371,-5.635367,6.299796,3.348126,-4.280658,-4.347445,7.487738,7.815991,6.818495,3.920183,-8.911338,4.136448,7.252820,5.515389,2.073462,2.830145,4.554771,5.050510,9.484458,-5.998044,7.854351,-7.430923,-4.559164,-7.721504,6.784889,5.462763,0.439825,-9.161992,-9.802452,-3.720324,7.886757,5.269938,2.929723,0.033777,0.178249,-9.093334,4.564222,-9.977589,6.024109,5.618813,-8.362526,-7.120829,-3.840485,-1.844211,-1.683345,-4.665295,-7.697257,-5.616671,-2.242582,7.206102,-4.482532,-4.538890,-2.501298,6.237703,5.709357,-3.791744,-5.057358,2.973938,1.422767,3.788289,9.031616,5.458012,6.623861,2.904643,-0.302529,-8.858696,5.760113,-2.607519,6.191382,1.746495,-0.636981,-9.483246,-7.851087,1.643464,-8.040268,0.442573,-7.354025,9.162244,-5.504253,8.652863,2.643702,1.983830,7.484587,1.849958,-2.714962,4.833281,-3.085928,4.421022,-5.804412,4.268421,5.159713,-7.275299,5.751858,-8.399634,-1.711566,-5.310608,1.058812,-2.632893,6.968598,4.931360,-0.823677,5.575142,-0.621183,4.568521,8.274164,4.550391,7.393973,4.716529,-6.813311,4.680927,0.379338,-1.007438,1.989824,0.354173,-7.596659,-5.736886,-3.463515,-6.480135,-8.194518,7.169970,-0.392423,1.637038,-7.254736,-4.926991,-8.485347,1.748359,-6.209866,-5.671850,8.906622,-4.854655,-9.393422,-6.500729,-2.195013,6.104956,2.581193,7.800942,-6.487847,3.225272,7.422270,4.681919,8.685814,5.587127,-3.394461,-3.541418,-4.452716,-5.069579,7.445225,9.593886,9.904236,5.444984,1.003395,-8.220730,4.182024,-2.175085,2.458946,-7.303073,-1.689638,-0.220396,9.053542,-5.373844,-4.531695,-3.740494,-4.244538,5.804348,-4.387207,-9.504965,3.055777,9.546958,-1.837342,9.853353,3.005089,8.742337,-2.160398,3.029643,-9.831181,2.783760,-7.407921,-1.650917,5.919175,-6.862130,-4.421181,0.258070,8.255225,-2.355466,-7.281956,1.729236,3.758147,5.353835,0.351425,1.965775,6.938547,-6.825642,-7.839979,-1.092483,-9.153287,-6.820005,1.651655,9.933999,-9.776710,-1.990202,2.172388,5.275613,-9.243763,-4.499426,1.292089,1.241087,-1.999440,-3.515956,4.495294,-1.596500,4.777021,-9.925808,-0.958861,7.240299,-1.178546,7.231440,2.418781,-5.815150,-8.791938,0.502811,1.425841,-8.782109,-3.588399,-1.975571,8.650663,-4.625562,3.537351,2.299008,-9.225043,4.917151,-5.551721,-1.749257,0.308587,-5.442866,-7.082353,5.774415,-0.837504,3.586897,-6.918826,-3.609190,5.765333,-2.501415,-8.326166,-2.332101,-8.961493,8.942997,5.665864,-2.337241,-8.556264,-3.094074,2.913494,-6.119131,5.300701,-4.801582,-8.891300,1.157239,1.980766,-0.496588,2.229316,-8.367900,-2.158454,-3.309614,-6.888925,-5.310849,4.786073,5.020761,-9.374275,7.512070,8.706773,8.881457,-3.875322,6.656457,-4.327841,5.356259,9.896187,8.757048,1.046758,1.798811,5.018947,1.956678,-2.124283,8.753982,-0.877557,-0.318251,-4.948126,5.365998,-5.257562,2.271549,4.845942,-8.423868,-5.876380,-9.822569,3.631717,0.661451,-7.069464,-3.012304,1.801231,9.635675,-8.865439,-8.806823,-3.531080,8.015258,-6.732012,7.923961,-4.837583,-2.574475,-0.738016,-8.514558,-7.635984,-1.382108,-4.201800], dtype = "float64")#candidate|8188|(720,)|const|float64
const_8189 = relay.const([[-0.736446],[9.728092],[-4.322070],[1.395410],[1.225241],[-8.832245],[-0.625388],[8.128999],[-8.210525],[0.303596],[7.452739],[5.691369],[-7.007841],[-8.444603],[1.541094],[1.311674],[5.584266],[-4.992876],[8.388329],[-6.241775],[2.239274],[-3.665641],[-1.873876],[-5.309030],[-5.919728],[2.760939],[5.647023],[7.585758],[-3.078159],[-1.738417],[-2.090732],[0.480488],[-3.242513],[-7.773085],[-0.058644],[8.149118],[5.059416],[1.236597],[7.226948],[-3.450010],[8.045019],[3.883300],[-1.970010],[-4.856038],[-5.855529],[8.434492],[-0.162916],[-0.825627],[-6.018181],[3.182102],[-4.801932],[-2.364069],[-7.192981],[0.466352],[9.255885],[3.077140],[5.310584],[3.591742],[-1.620614],[-2.396454],[-4.939637],[8.564895],[2.030094],[-5.878328],[-2.338970],[-0.002563],[-0.592381],[9.843020],[-1.754489],[-7.060039],[-2.119578],[3.464626],[-8.289681],[-5.485683],[-5.403805],[-0.228770],[-4.901000],[-2.768802],[3.766967],[1.033632],[-7.134325],[-7.517427],[5.738398],[7.863294],[-6.197031],[2.205437],[-7.316055],[8.056300],[-8.448719],[7.221832],[-8.726095],[4.275635],[5.350201],[-8.441588],[-0.175564],[1.591613],[0.991537],[2.598001],[6.714244],[7.029382],[-3.283355],[-6.224081],[6.987161],[-9.879260],[9.132146],[-9.059908],[9.087951],[-8.698283],[3.372297],[8.387674],[7.637812],[-7.827192],[4.917790],[9.428575],[9.864584],[-0.901479],[3.703388],[-6.296507],[-7.275890],[-5.793406],[-7.195240],[-6.194391],[3.699750],[-3.620037],[6.468169],[-7.162099],[-3.795202],[-4.961129],[0.208680],[-6.829584],[-3.545046],[-7.056598],[-0.729028],[-7.556215],[5.487849],[-3.668543],[1.419787],[8.995818],[-8.754357],[-1.298567],[-2.017697],[-1.300142],[7.942370],[-2.908511],[-6.577638],[8.322566],[5.980019],[-7.704063],[-0.508668],[9.921437],[-0.499663],[6.848608],[-8.551683],[-0.631971],[4.079815],[-0.686801],[2.827995],[-3.181559],[2.313330],[1.260552],[-6.772267],[-5.431123],[7.977707],[6.790842],[5.330720],[2.113186],[-3.287823],[-3.001872],[-6.698331],[0.252950],[0.086361],[5.552451],[-8.006198],[5.174802],[-7.313226],[4.423043],[-6.140531],[-5.976905],[7.964773],[9.751969],[-9.658961],[-6.900571],[-8.090398],[4.674551],[8.808523],[-9.231029],[3.105479],[2.398921],[9.869316],[0.559490],[-0.004303],[-5.114963],[0.704867],[-9.264291],[-2.771731],[9.399586],[-5.287662],[-6.618627],[-0.371886],[5.029283],[-2.704599],[-2.615109],[2.652939],[-9.550538],[7.657036],[-6.877743],[-1.321858],[-4.817443],[-8.116330],[-9.843191],[-9.155855],[1.710536],[2.654865],[1.181263],[-3.039617],[1.747555],[-7.027562],[-2.193069],[-3.188705],[0.206585],[-8.706161],[7.631122],[-8.105690],[-4.518332],[-0.546200],[-8.446885],[5.308433],[2.920857],[9.942194],[-4.904965],[-9.928838],[-3.829478],[-5.213348],[-2.209651],[7.669060],[-1.415710],[-4.254626],[5.374264],[1.569096],[8.997548],[-5.290391],[-3.699905],[9.599295],[8.596009],[8.305237],[-4.178162],[3.126427],[-1.827870],[3.072675],[-5.905720],[-9.083862],[9.179400],[-3.638793],[-6.582207],[-1.222117],[9.648146],[5.875375],[-3.422516],[-7.946783],[3.022197],[-2.824253],[4.095049],[-6.610219],[3.147070],[-3.052946],[4.290777],[-3.732400],[6.184788],[6.171877],[-1.640703],[5.635011],[-4.565901],[2.293793],[-2.880027],[-3.177684],[4.931618],[5.679265],[6.112192],[4.742115],[-5.481756],[-4.722634],[-5.931054],[-9.782446],[-7.261844],[0.411458],[7.534333],[-7.840244],[6.700689],[1.418380],[2.383964],[7.073431],[-4.577556],[5.028276],[9.969921],[-4.177130],[5.940066],[5.430725],[3.325455],[2.301758],[6.795343],[-0.029323],[-9.574161],[-8.869153],[-6.853593],[8.182541],[-5.672344],[9.356218],[2.873416],[-2.988743],[8.680366],[-4.612796],[8.463150],[-4.436686],[3.637548],[-9.260807],[0.923851],[-1.359286],[-7.776850],[4.756875],[-1.591476],[-3.295625],[-8.894813],[2.609126],[9.874891],[-1.629224],[-9.935905],[8.308128],[-6.139288],[-3.023794],[6.967635],[-6.246341],[4.462493],[-2.296686],[7.449474],[-3.222713],[-8.696651],[-2.133653],[-9.369801],[8.031199],[8.031553],[-6.594863],[-2.776870],[-9.876705],[-6.278475],[3.735371],[6.543483],[-8.499177],[-9.113834],[-9.870725],[-8.507774],[7.024444],[-7.075380],[9.570800],[5.361915],[-1.245708],[-4.603346],[-9.946418],[-0.671488],[0.377082],[6.394094],[-1.979070],[-9.162043],[6.575218],[-1.417231],[9.510482],[-5.270490],[2.393841],[-0.118021],[-4.032583],[5.269406],[7.823990],[7.881663],[4.380932],[-2.995859],[-4.981079],[2.847238],[-0.794541],[0.438109],[-2.494034],[-7.444102],[0.196525],[-8.211393],[2.984226],[4.041038],[-1.201347],[-2.320177],[5.991714],[2.010090],[0.560087],[2.570415],[9.954819],[-0.293627],[2.975302],[5.724284],[5.126597],[0.675600],[-8.476217],[-4.340194],[-7.853818],[4.864747],[-3.717396],[-5.767578],[-9.578705],[-9.247267],[0.712369],[0.597494],[-2.575778],[4.976775],[-1.056436],[8.973867],[-0.642390],[-0.177648],[-7.599622],[-1.813210],[-8.159442],[6.789758],[3.237083],[-7.250782],[1.756650],[9.924113],[3.591348],[6.745026],[-7.531892],[8.687237],[6.901540],[9.306321],[3.894256],[0.119964],[-9.114343],[-1.673995],[4.723079],[8.185992],[-2.694113],[-5.672714],[7.659589],[-4.981905],[6.776271],[-0.928187],[-2.251406],[-5.008694],[4.105833],[6.690211],[8.933736],[-4.733841],[-6.172539],[-0.779686],[2.808164],[-1.717680],[-4.491260],[0.728706],[-2.862294],[-5.423766],[-0.381265],[-1.182034],[-5.751656],[-7.703167],[-4.200720],[-5.435957],[-0.531286],[5.729232],[3.050560],[5.915114],[9.705477],[-7.622001],[-9.917137],[0.630607],[-5.133711],[-0.365533],[8.754585],[2.443628],[1.789303],[7.372673],[-4.636965],[3.413453],[-4.791941],[2.295378],[0.088852],[-8.437340],[3.527438],[-7.708857],[8.228986],[-8.873694],[7.674604],[-6.200896],[5.177488],[-3.371396],[7.957750],[-5.642036],[3.095113],[3.028590],[-8.175369],[0.013012],[5.666155],[8.947663],[5.188667],[-6.652828],[1.760357],[-1.359926],[-1.461515],[1.607136],[-4.252527],[-0.365332],[3.041077],[9.782418],[2.791264],[9.659928],[-9.853160],[6.571379],[-3.103057],[-9.959944],[-5.789565],[-9.243255],[3.886133],[-8.106470],[3.123133],[-2.310344],[4.130639],[-2.665831],[5.048777],[8.182101],[-0.290292],[6.191235],[9.932605],[-3.179923],[9.246922],[0.188669],[8.938828],[7.466802],[-7.803370],[-1.244718],[-3.092521],[-6.081140],[-7.899947],[-3.409138],[-0.534817],[-7.795303],[-2.640464],[6.386953],[-3.185528],[-3.307638]], dtype = "float64")#candidate|8189|(540, 1)|const|float64
var_8190 = relay.var("var_8190", dtype = "float32", shape = (784,))#candidate|8190|(784,)|var|float32
const_8191 = relay.const([-4.719834,-5.192719,-4.189429,-1.797589,2.695723,-2.732868,-9.401291,-3.426170,-9.284220,-1.325075,8.004653,-8.470009,6.152023,7.159750,9.870168,-3.783263,0.713760,-5.520091,2.901654,-8.573678,8.298085,0.107216,4.166795,8.146082,4.510562,-1.065746,-2.880261,6.290530,-7.419014,-8.110418,7.245834,1.637177,3.845376,-0.688751,-8.408558,1.854166,6.005080,7.138968,-1.681486,1.079436,-6.111332,-3.951206,-9.663763,-6.524780,5.285850,-5.133362,-5.081619,3.630078,9.411378,-4.385025,-3.789193,-2.572460,-7.582241,-4.524532,-7.560293,0.178281,5.711719,6.978645,1.110868,-3.139936,-2.168463,8.591646,-1.213359,5.905735,-2.739785,3.085268,6.696821,-4.179672,8.384067,5.521002,-2.714477,-2.903174,-5.030259,-3.103968,-6.337568,-9.620841,0.167180,1.455221,-9.565141,-2.482766,-7.551539,1.179115,6.573989,-7.380146,-9.112927,-7.154156,-4.324486,-6.354212,-6.265051,-4.725086,6.711427,6.728616,-2.601367,-4.166067,8.747648,6.903023,-7.240782,-9.776391,-9.648333,-8.357131,-4.126896,-9.829477,-8.774268,5.125557,7.044839,1.680993,9.124249,3.529486,7.796282,-2.652348,-5.505687,-0.678995,0.979885,-5.435400,2.065076,-8.142647,3.540731,-0.955573,-2.671083,-9.648088,7.042583,-1.176354,3.769475,-8.817484,-7.707714,4.946022,-1.655414,7.045174,-3.458185,-0.634203,5.767497,8.394504,5.533201,-1.113683,-3.682763,0.437954,-6.461929,-7.281340,9.236544,-6.794737,8.890806,4.872822,6.551660,5.316550,-7.820212,-5.899805,4.354186,9.138975,3.941215,-8.089129,-8.870852,-8.812768,2.233122,-7.386812,4.524323,-3.574104,0.343686,7.187362,3.365665,-5.917086,-3.434426,0.673737,1.792321,-6.214519,-7.055089,-6.284188,-5.927016,6.553079,1.923028,-0.493253,-2.105866,8.261479,-0.170503,-7.013051,-5.805191,-7.585215,5.493597,-3.353436,-0.382686,-3.566093,9.270266,7.852352,3.320116,1.205578,0.082891,7.977370,6.898526,4.835054,3.427857,2.569590,-4.885939,-6.995944,8.428693,-3.307642,6.561132,-4.400093,3.699096,-1.014278,-4.361844,7.665131,-9.328384,5.511207,-8.377850,7.840471,-5.636692,8.474215,-1.115277,3.174885,-7.845283,2.167299,-7.977341,-7.267922,-0.811924,-1.801998,-0.541702,-9.385984,-4.708297,-3.933503,-4.139201,9.921750,-8.423890,2.414692,-4.803661,-7.655629,1.930082,4.407391,0.748600,6.081460,-8.032938,-0.472018,-4.839338,9.692605,-0.527691,1.997266,-3.949351,-1.777713,2.893634,3.911842,-7.282876,-3.602899,-9.072105,2.346918,8.464946,8.649001,-5.522413,-1.320315,-1.715846,3.771733,-2.712275,0.628318,8.621086,5.620736,2.694863,3.164086,2.941392,6.284272,0.393675,3.677210,-4.189960,-2.651036,4.305621,1.209216,3.184266,-3.114947,6.451393,-7.999556,2.078029,8.088436,-5.784117,-8.072797,-2.452402,4.299529,-3.089180,-9.313231,4.750651,8.700030,5.124459,-9.966769,-5.483046,-8.767345,-8.531367,-0.612132,1.368833,5.510225,-3.049980,6.809289,6.855306,-5.921046,2.954635,-8.337558,-8.901846,9.542050,-3.195414,-0.115124,2.767151,-0.001801,8.528989,1.157688,-9.860464,-9.785616,1.271950,3.766518,6.295839,-7.266552,-5.115484,6.026952,6.296502,8.034513,5.122004,-9.701035,-1.123350,-1.050788,8.245391,-3.849274,-4.286788,2.661020,-3.250666,1.455053,-3.979597,8.313250,-0.101248,4.450157,9.757732,-6.703354,-1.485510,7.453857,9.900058,-1.552085,-0.923539,6.936330,-6.661319,-4.317575,1.652065,-0.490311,6.973789,9.961700,-7.182397,4.781034,3.196809,-0.304332,-4.922126,-8.455694,-9.434474,1.531253,-1.949031,1.128490,4.352217,0.677054,1.797872,-0.811716,2.786289,0.003248,7.916794,-1.442881,-9.318973,-3.694667,-7.569188,-9.836340,-3.281494,0.100235,-6.298339,5.424017,-3.185270,3.348009,-8.568144,4.291404,0.484384,9.752124,3.615043,5.171812,6.543851,5.896460,-0.668682,-4.834664,5.598881,1.006059,-9.993545,3.930065,-5.188210,2.957397,-5.792108,-0.382299,1.161722,-7.332310,2.457003,-5.835993,-1.641900,3.968058,1.638150,4.342900,8.272369,6.338354,0.606512,9.594972,9.890245,-2.677567,1.625279,4.254447,-3.424007,7.474903,8.338991,-1.845071,9.213480,-9.091817,4.670789,1.482540,6.673224,3.098744,1.246189,-1.557229,3.758924,9.807529,9.576524,6.543634,-4.295365,-2.782296,-8.352285,4.631403,-4.944258,-5.405848,5.823064,-1.336439,-4.392696,1.624704,-0.378663,-3.615908,-1.146177,-0.996011,-6.865085,-0.941595,8.863235,-1.553853,2.541441,4.750580,-2.673641,-5.677048,-6.894087,-6.875545,-8.902567,-8.132482,9.612836,-0.124628,-1.781573,0.188130,-2.905964,-8.523260,-7.981933,4.332011,-6.217864,8.880250,-2.474736,5.197110,9.760368,-2.090815,5.656535,-4.424630,9.795989,9.531984,-3.246901,7.685407,-1.793338,-0.450010,-2.326396,-8.807593,-6.496702,9.445382,2.091511,5.318561,-6.735275,-7.334575,8.653751,-3.959326,3.097982,-3.054738,5.393327,-0.076474,4.059471,-4.895106,-4.922858,2.042061], dtype = "float32")#candidate|8191|(480,)|const|float32
call_8186 = relay.TupleGetItem(func_2148_call(relay.reshape(const_8187.astype('float32'), [4, 14, 4]), relay.reshape(const_8188.astype('float64'), [1, 720]), relay.reshape(const_8189.astype('float64'), [540,]), relay.reshape(var_8190.astype('float32'), [4, 196]), relay.reshape(const_8191.astype('float32'), [40, 12]), ), 6)
call_8192 = relay.TupleGetItem(func_2154_call(relay.reshape(const_8187.astype('float32'), [4, 14, 4]), relay.reshape(const_8188.astype('float64'), [1, 720]), relay.reshape(const_8189.astype('float64'), [540,]), relay.reshape(var_8190.astype('float32'), [4, 196]), relay.reshape(const_8191.astype('float32'), [40, 12]), ), 6)
output = relay.Tuple([bop_8179,call_8186,const_8187,const_8188,const_8189,var_8190,const_8191,])
output2 = relay.Tuple([bop_8179,call_8192,const_8187,const_8188,const_8189,var_8190,const_8191,])
func_8222 = relay.Function([var_8177,var_8178,var_8190,], output)
mod['func_8222'] = func_8222
mod = relay.transform.InferType()(mod)
mutated_mod['func_8222'] = func_8222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8222_call = mutated_mod.get_global_var('func_8222')
var_8224 = relay.var("var_8224", dtype = "uint64", shape = (11, 5, 15))#candidate|8224|(11, 5, 15)|var|uint64
var_8225 = relay.var("var_8225", dtype = "uint64", shape = (11, 5, 15))#candidate|8225|(11, 5, 15)|var|uint64
var_8226 = relay.var("var_8226", dtype = "float32", shape = (784,))#candidate|8226|(784,)|var|float32
call_8223 = func_8222_call(var_8224,var_8225,var_8226,)
output = call_8223
func_8227 = relay.Function([var_8224,var_8225,var_8226,], output)
mutated_mod['func_8227'] = func_8227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8252 = relay.var("var_8252", dtype = "uint16", shape = (10, 14, 16))#candidate|8252|(10, 14, 16)|var|uint16
var_8253 = relay.var("var_8253", dtype = "uint16", shape = (10, 14, 16))#candidate|8253|(10, 14, 16)|var|uint16
bop_8254 = relay.bitwise_and(var_8252.astype('uint16'), relay.reshape(var_8253.astype('uint16'), relay.shape_of(var_8252))) # shape=(10, 14, 16)
output = relay.Tuple([bop_8254,])
output2 = relay.Tuple([bop_8254,])
func_8275 = relay.Function([var_8252,var_8253,], output)
mod['func_8275'] = func_8275
mod = relay.transform.InferType()(mod)
mutated_mod['func_8275'] = func_8275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8275_call = mutated_mod.get_global_var('func_8275')
var_8277 = relay.var("var_8277", dtype = "uint16", shape = (10, 14, 16))#candidate|8277|(10, 14, 16)|var|uint16
var_8278 = relay.var("var_8278", dtype = "uint16", shape = (10, 14, 16))#candidate|8278|(10, 14, 16)|var|uint16
call_8276 = func_8275_call(var_8277,var_8278,)
output = call_8276
func_8279 = relay.Function([var_8277,var_8278,], output)
mutated_mod['func_8279'] = func_8279
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8281 = relay.var("var_8281", dtype = "int32", shape = (5, 3, 7))#candidate|8281|(5, 3, 7)|var|int32
const_8282 = relay.const([[[-8,-5,-9,9,-9,10,4],[-3,-7,8,1,7,-3,9],[6,1,10,-6,6,-1,-8]],[[9,7,9,-1,9,5,7],[6,9,1,-5,10,10,-9],[-9,1,10,-9,3,6,-3]],[[9,-8,-6,-6,10,6,3],[4,-6,-8,2,-5,7,-1],[2,-3,-4,8,9,-4,5]],[[9,-5,-9,-7,-8,-7,7],[2,8,-4,9,-3,7,-10],[2,-3,3,-3,1,-3,8]],[[1,-3,-5,-1,3,8,-4],[9,10,-9,-2,2,-7,3],[1,8,-7,7,4,-3,-7]]], dtype = "int32")#candidate|8282|(5, 3, 7)|const|int32
bop_8283 = relay.less(var_8281.astype('bool'), relay.reshape(const_8282.astype('bool'), relay.shape_of(var_8281))) # shape=(5, 3, 7)
bop_8293 = relay.divide(bop_8283.astype('float32'), relay.reshape(var_8281.astype('float32'), relay.shape_of(bop_8283))) # shape=(5, 3, 7)
func_7391_call = mod.get_global_var('func_7391')
func_7394_call = mutated_mod.get_global_var('func_7394')
var_8297 = relay.var("var_8297", dtype = "float32", shape = (112, 2))#candidate|8297|(112, 2)|var|float32
call_8296 = relay.TupleGetItem(func_7391_call(relay.reshape(var_8297.astype('float32'), [14, 8, 2])), 0)
call_8298 = relay.TupleGetItem(func_7394_call(relay.reshape(var_8297.astype('float32'), [14, 8, 2])), 0)
func_4736_call = mod.get_global_var('func_4736')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_8316 = relay.TupleGetItem(func_4736_call(), 0)
call_8317 = relay.TupleGetItem(func_4737_call(), 0)
func_3990_call = mod.get_global_var('func_3990')
func_3993_call = mutated_mod.get_global_var('func_3993')
const_8337 = relay.const([6.320269,-3.845183,9.859578,1.803757,8.294852,-4.402603,6.039023,-3.323607,-3.285093,4.811419,-0.485708,-8.457657,-0.362510,-7.700642,-0.897433,4.164215,6.096550,7.706966,7.615631,-5.911837,-3.175664,-5.701157,-1.038093,-3.730150,-9.243079,0.967675,-0.866669,-3.852135,-1.642667,-9.012288,-7.871278,-7.108503,0.441757,-6.043327,-1.363417,-0.063421,-0.837319,-0.067363,0.542703,2.863568,-6.070882,-1.227481,-6.523597,0.037442,5.816513,5.100267,-0.077064,4.936264,-2.733576,-6.390245,-1.758923,7.707270,1.692073,2.764932,-7.907140,-5.602661,6.833368,9.775047,1.824149,-5.938569,7.767043,-5.574300,-9.701146,4.940903,-5.677690,7.846353,-3.940776,4.694820,4.638177,-4.595950,5.430556,-2.867531,8.765434,7.719573,2.369756,7.745942,9.307078,-1.436948,4.439580,-1.695330,7.236810,-4.233778,0.475725,9.896135,-4.106113,-3.853883,-1.536781,7.503134,7.988460,-6.083972,-2.844504,5.948161,3.227572,1.331654,1.387005,-4.465796,-3.503554,5.722533,-7.143740,-4.493981,-1.646906,7.502268,2.331665,1.697727,9.458579,0.612452,6.404857,7.806113,-7.901406,-8.536186,9.898220,-7.280831,8.103524,4.680404,-8.086810,7.374980,-7.449757,5.520517,4.019189,-5.346870,-9.209040,-6.017288,-7.157647,0.931337,5.189486,6.609827,-4.162011,-9.715320,2.532276,-6.332982,7.007494,-6.323039,-0.011898,1.347111,-7.435369,-7.352465,-6.108622,7.953595,-0.703688,1.853113,-8.355386,-5.404386,2.540263,-0.113722,-8.210672,-3.655490,-7.292612,-8.057095,9.853626,-3.706397,5.221961,-9.605193,-2.939076,2.822866,-8.993279,-5.395462,3.922653,-7.032547,1.785974,7.358693,6.872687,6.861376,-6.864535,-0.190901,8.598502,-8.463937,2.116045,-8.362724,-2.020387,-4.054163,2.364975,5.362368,-1.148548,9.789816,-3.664872,6.510106,-4.287872,-4.717493,-8.459698,-8.260491,0.789547,1.791449,-3.550124,-7.490091,3.400609,1.834946,0.099949,1.623555,-8.091795,5.560267,0.396616,-1.651030,3.688983,-3.422470,6.644919,-4.228952], dtype = "float64")#candidate|8337|(196,)|const|float64
call_8336 = relay.TupleGetItem(func_3990_call(relay.reshape(const_8337.astype('float64'), [14, 2, 7])), 0)
call_8338 = relay.TupleGetItem(func_3993_call(relay.reshape(const_8337.astype('float64'), [14, 2, 7])), 0)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_8340 = func_4336_call()
call_8341 = func_4336_call()
uop_8344 = relay.log10(var_8281.astype('float32')) # shape=(5, 3, 7)
output = relay.Tuple([bop_8293,call_8296,var_8297,call_8316,call_8336,const_8337,call_8340,uop_8344,])
output2 = relay.Tuple([bop_8293,call_8298,var_8297,call_8317,call_8338,const_8337,call_8341,uop_8344,])
func_8353 = relay.Function([var_8281,var_8297,], output)
mod['func_8353'] = func_8353
mod = relay.transform.InferType()(mod)
mutated_mod['func_8353'] = func_8353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8353_call = mutated_mod.get_global_var('func_8353')
var_8355 = relay.var("var_8355", dtype = "int32", shape = (5, 3, 7))#candidate|8355|(5, 3, 7)|var|int32
var_8356 = relay.var("var_8356", dtype = "float32", shape = (112, 2))#candidate|8356|(112, 2)|var|float32
call_8354 = func_8353_call(var_8355,var_8356,)
output = call_8354
func_8357 = relay.Function([var_8355,var_8356,], output)
mutated_mod['func_8357'] = func_8357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_8378 = relay.TupleGetItem(func_4380_call(), 0)
call_8379 = relay.TupleGetItem(func_4382_call(), 0)
func_5306_call = mod.get_global_var('func_5306')
func_5307_call = mutated_mod.get_global_var('func_5307')
call_8408 = relay.TupleGetItem(func_5306_call(), 1)
call_8409 = relay.TupleGetItem(func_5307_call(), 1)
func_4776_call = mod.get_global_var('func_4776')
func_4777_call = mutated_mod.get_global_var('func_4777')
call_8415 = func_4776_call()
call_8416 = func_4776_call()
output = relay.Tuple([call_8378,call_8408,call_8415,])
output2 = relay.Tuple([call_8379,call_8409,call_8416,])
func_8417 = relay.Function([], output)
mod['func_8417'] = func_8417
mod = relay.transform.InferType()(mod)
output = func_8417()
func_8418 = relay.Function([], output)
mutated_mod['func_8418'] = func_8418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_8436 = func_3503_call()
call_8437 = func_3503_call()
func_5115_call = mod.get_global_var('func_5115')
func_5116_call = mutated_mod.get_global_var('func_5116')
call_8450 = func_5115_call()
call_8451 = func_5115_call()
output = relay.Tuple([call_8436,call_8450,])
output2 = relay.Tuple([call_8437,call_8451,])
func_8470 = relay.Function([], output)
mod['func_8470'] = func_8470
mod = relay.transform.InferType()(mod)
output = func_8470()
func_8471 = relay.Function([], output)
mutated_mod['func_8471'] = func_8471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mod.get_global_var('func_4854')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_8479 = relay.TupleGetItem(func_4854_call(), 0)
call_8480 = relay.TupleGetItem(func_4856_call(), 0)
output = call_8479
output2 = call_8480
func_8496 = relay.Function([], output)
mod['func_8496'] = func_8496
mod = relay.transform.InferType()(mod)
mutated_mod['func_8496'] = func_8496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8496_call = mutated_mod.get_global_var('func_8496')
call_8497 = func_8496_call()
output = call_8497
func_8498 = relay.Function([], output)
mutated_mod['func_8498'] = func_8498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4404_call = mod.get_global_var('func_4404')
func_4405_call = mutated_mod.get_global_var('func_4405')
call_8501 = relay.TupleGetItem(func_4404_call(), 3)
call_8502 = relay.TupleGetItem(func_4405_call(), 3)
func_2148_call = mod.get_global_var('func_2148')
func_2154_call = mutated_mod.get_global_var('func_2154')
const_8504 = relay.const([-0.678480,-3.280162,-2.967051,5.910605,-0.740957,-3.778230,5.508311,-6.438155,1.447468,-5.366802,8.055910,1.721610,7.117568,9.432952,7.816821,4.944168,-3.556466,-2.291058,9.221375,-2.851605,-5.352949,-9.246845,-4.326749,3.899911,-8.707139,9.532705,2.542628,-0.653891,-5.132460,8.197044,-2.954253,3.182761,4.868681,4.054348,1.908859,-2.391896,-5.420027,-7.561552,-3.276280,4.468533,1.297902,-9.772135,9.899886,-6.764353,-3.880084,2.164886,-7.204568,1.722069,-7.345482,-9.035550,-7.449889,5.344530,5.666771,0.116443,-8.640368,-4.662336,9.466464,-1.430797,2.094004,3.450020,-8.950020,-2.607850,5.066911,-3.685619,5.873591,-4.201479,-3.843379,-9.530310,4.439483,8.756566,-4.018891,8.769506,-5.279678,-4.758308,-7.124595,8.425347,3.808743,2.006131,4.452311,-0.514436,6.294006,-5.818061,1.556658,3.971087,-4.607675,-9.250550,4.076016,-6.984520,7.096123,3.881587,-7.037093,-6.052978,9.748505,8.600018,-4.668152,1.161119,-4.175282,0.787906,-4.836324,-0.353679,4.034769,-4.642726,-7.498305,-2.303744,6.809251,-9.987607,-0.144806,3.623198,-2.069856,-3.270751,6.548270,-3.524167,1.486694,1.746512,6.583776,-7.761899,-9.383488,1.444824,5.108207,-7.516849,1.916274,3.920018,0.432942,8.491189,2.662411,-6.212463,8.259013,-2.063021,-0.642028,8.998795,9.212816,-0.385578,-0.613313,-3.048310,4.559200,-9.840021,9.455089,-8.457401,5.839893,4.455054,5.561372,7.509857,-0.710692,1.038180,4.096611,-7.309423,-6.591670,-7.204993,-3.519913,4.986335,9.131064,0.284152,2.999889,1.100889,5.802021,1.746046,3.106562,-1.691348,-9.447166,-2.859427,-5.749335,-7.736330,-6.752633,1.083404,8.247252,-7.601414,-0.179192,-3.021493,-4.269697,-7.044811,-4.292639,-8.394470,-1.257398,7.591591,1.077438,-9.516431,7.642945,-3.556175,4.207712,-8.208064,-1.030229,6.065341,-7.363245,-0.924081,-3.450426,5.694981,-5.157068,-6.401220,-9.834532,2.539856,3.059502,3.311846,-7.526423,-7.787519,5.788138,0.577721,-6.963267,-6.940638,-2.116160,9.371178,-3.494270,8.948621,-0.394480,3.203984,7.563889,-3.724167,3.829802,8.981550,-1.797185,1.163843,0.605867,3.789999,-9.997066,-3.039472,0.858550,4.992764,-2.965206,-9.452222,-6.729441,5.570019,8.858867,-1.085951,9.944737,-3.354751], dtype = "float32")#candidate|8504|(224,)|const|float32
var_8505 = relay.var("var_8505", dtype = "float64", shape = (720,))#candidate|8505|(720,)|var|float64
var_8506 = relay.var("var_8506", dtype = "float64", shape = (540,))#candidate|8506|(540,)|var|float64
const_8507 = relay.const([7.727913,-5.663095,9.615795,-9.301472,-7.421527,-2.336970,-4.046595,-9.251887,-2.390259,8.836554,4.089312,-2.412511,0.776886,-8.091845,-6.711633,5.880927,-9.428659,8.821757,8.063463,6.550217,-5.321134,0.479579,-7.382588,-9.268443,-5.292660,1.905518,5.402008,-6.993881,1.350191,5.314905,-6.365882,7.264463,-3.189358,0.456280,5.466765,8.841222,-7.362090,-5.534535,2.914787,3.199200,-9.295685,1.364918,8.588890,-0.410147,-0.208494,-8.910327,0.481607,4.534096,-4.385013,0.697706,2.587155,3.983688,4.303599,-8.538111,8.989021,-0.431646,0.514660,4.998943,6.067895,7.616646,7.983837,7.291068,-2.491567,-6.960674,8.502280,-4.089316,-1.840160,-3.400226,3.856533,-7.456575,-3.211370,-0.768064,-0.816106,-4.842290,4.277446,2.948697,3.121384,3.483361,4.117507,7.417054,7.185597,6.895985,5.418725,1.470556,1.168357,6.471512,8.465239,3.584563,8.315741,2.287481,5.085962,6.718842,4.251193,-7.824515,-4.016126,6.304491,7.917670,-8.035278,-4.916220,7.444900,3.801732,-0.515335,-4.143476,7.638472,9.195875,1.974846,9.136043,-2.095684,3.144666,-4.956347,-1.433023,-6.895856,-6.634784,-0.056689,-5.701855,-2.341221,5.876679,-8.963310,-1.401893,3.494317,8.435051,8.380542,-7.829134,7.600378,-4.730965,5.952188,-4.379202,6.970772,-8.804688,7.773086,3.469459,0.513318,-9.645594,9.352656,4.636969,4.280364,3.755102,5.716968,-5.418371,8.703368,-0.140023,0.986248,-9.835017,-9.480983,-0.993252,-7.221845,5.577786,-7.352386,3.481882,7.683427,7.176988,8.397087,8.910231,-4.095403,-5.088298,-2.675966,-5.546600,5.411189,-2.476009,-4.882974,8.657559,0.105373,-3.471750,8.315888,1.374480,-0.627153,1.721234,5.070010,-2.118728,-5.447248,6.802771,-9.058558,-5.892717,6.331895,1.908875,1.342523,-3.758678,4.371545,5.655973,-8.405384,0.987986,6.859442,6.547966,2.785818,-8.709752,-2.555705,2.843893,8.904280,-4.003086,-0.923749,-7.469591,-3.227138,-5.473344,0.573187,-2.178964,-1.626869,-0.236828,-3.586982,-9.670010,-3.268537,1.762628,8.193487,8.846469,-7.983360,9.569734,6.135986,3.720238,-6.683016,5.424411,4.656100,2.018449,-4.876849,6.937559,8.511913,-7.970223,-3.509454,-1.326920,-1.076130,-6.269554,7.664491,-7.126316,-0.322569,8.815668,1.810920,-7.111845,-0.097085,7.957582,-5.909250,-1.780644,-1.055915,8.559873,-2.478866,-3.319436,2.181948,-2.784287,-1.584640,8.461052,-3.927059,2.522578,2.903058,-3.293342,-6.111698,-6.554602,-3.858945,-3.840634,-1.475317,6.999730,-9.596641,8.742260,-6.353448,-5.735569,-9.847144,0.784608,-2.584537,1.232564,3.661047,-4.937532,7.498934,-8.007874,1.316738,-6.484205,-1.052951,-2.609635,-0.961630,-2.813237,4.516744,2.461419,-5.790025,-6.523601,-6.625607,-9.766367,6.510859,1.648086,-7.334352,-7.271907,-2.194071,0.274987,-1.860634,9.135041,3.757579,-4.888769,7.837196,7.234344,-7.118908,-7.291754,0.613752,-7.908957,6.647378,2.793858,6.308325,3.476725,-3.371363,-3.557038,1.070036,9.815696,1.790301,5.861317,-2.357788,-8.959634,0.766998,7.976580,-3.840017,5.646335,1.850731,1.868154,7.670988,-0.034058,5.329467,-7.686786,9.878391,8.289465,3.784590,9.335312,9.145120,8.883488,-1.781659,6.097628,-7.492044,6.281834,7.909875,0.963376,6.753633,5.555789,-1.810434,2.684850,1.782939,3.886508,-9.127822,-8.732068,-1.582677,-5.053957,-0.703936,7.424438,-0.064522,-6.454656,1.174812,-0.166484,-6.093967,7.926814,-4.020709,-2.824329,-7.941320,-6.879405,-4.116472,-8.210413,-8.017294,5.825647,8.822721,-4.078856,3.726805,3.806448,-4.128649,-5.138934,6.918117,8.657646,-2.816587,-5.646140,4.115197,0.449261,5.990575,6.988267,-9.239706,9.407775,0.787313,-2.893547,-0.031010,-6.137376,4.560760,3.390959,-4.685358,-3.677122,-0.031948,0.496628,-6.902050,6.210111,9.885267,4.398636,-4.441331,7.839321,-4.648060,-1.393684,4.116847,8.869608,3.129640,-9.818205,-7.018932,8.480703,9.374241,-7.656564,9.349697,4.133590,-6.992169,3.093684,6.059168,1.572481,-9.540106,5.322790,-0.910883,-5.857116,9.906855,1.743590,-7.927127,8.817705,-9.326716,2.868796,2.401608,-1.479958,6.327917,-6.700416,-4.839649,6.683347,-0.010323,-3.623014,4.853891,-9.460369,1.166524,-4.501505,-7.987627,7.461271,-6.215107,6.803133,-8.362303,9.194307,2.017526,-0.341849,8.261280,-4.654527,-3.495239,-4.071539,8.177424,0.779554,6.998128,-1.481444,9.634730,-0.996408,-7.765264,4.125242,9.611756,6.533601,0.637650,-2.589399,2.221821,-5.010733,3.621491,9.857748,5.349809,-1.350264,2.270845,7.744913,-5.035233,-9.656924,2.619885,7.488687,-9.809348,0.905428,5.782768,9.802122,-5.578204,-7.845446,-7.990792,-1.343755,-3.076095,-4.847209,-9.456602,-0.180385,8.094321,6.080643,3.930435,3.141902,2.166331,3.562721,-4.010312,7.272542,-8.959924,3.287403,-9.224214,-9.504122,-3.860928,-3.129350,-3.268326,7.363621,5.706759,-9.992701,-6.239299,-5.230529,-7.214719,-3.025449,-0.505416,2.020420,0.817953,-4.324123,1.620704,7.129281,2.197693,-3.611423,-9.252199,-6.198387,-9.853927,-8.680593,-6.895545,4.606935,-4.055208,-1.147994,7.717983,1.631144,-6.521359,-4.242662,6.489760,9.687499,5.781267,-1.573827,2.587373,0.878533,-0.407216,-8.561278,1.357700,2.361706,4.064152,-6.332096,-8.238388,-0.844259,6.155464,-4.769532,-8.259636,-4.941647,5.653279,2.641877,2.683968,-0.216655,4.488899,-0.987560,-5.819826,-7.105217,6.132444,3.916207,2.189025,-9.582823,-4.063580,5.515258,-0.616522,7.531755,-1.393924,7.398779,6.030963,0.911077,-3.965453,9.047246,-2.638929,7.139276,8.184164,0.075349,-3.273729,5.413465,-5.224787,1.977549,-9.083604,-5.291441,9.969085,-7.469779,2.521165,6.875193,-0.328443,9.996097,1.686248,-5.369361,1.048966,6.750311,-7.019756,-5.367288,5.480662,5.825630,-4.023701,-3.415804,6.787882,1.584542,4.947544,4.156147,7.911690,-6.788435,4.807597,2.295989,-0.247471,-6.974956,-8.081532,3.809046,-0.594959,5.676861,-7.154709,-9.827441,0.749904,-9.660385,9.325151,-4.533990,-0.170984,4.020169,7.981565,-3.348838,5.058407,-3.337148,-0.933208,8.181576,3.433853,3.910979,-2.688396,0.366223,6.205502,-2.848140,5.900919,-3.869809,9.669689,3.657100,-4.350719,-3.998225,-8.126202,8.903977,-2.615298,4.643605,-9.013037,9.664656,7.724009,-3.831916,2.276152,8.828678,6.819275,-0.343669,6.423202,0.441958,-5.245284,1.061552,7.989510,7.253301,3.908979,4.733096,3.885801,-7.205205,7.433613,-4.959245,-9.587923,-5.173703,7.285069,-2.985578,-9.851574,-4.282412,-2.263038,-8.505130,9.251130,4.782607,-0.111127,-6.991594,-9.072687,-0.385298,4.265149,-2.072577,-6.618684,9.974698,0.633651,-9.399053,7.698154,-2.155629,-0.578971,4.267244,-0.449684,-4.748398,7.138847,7.344595,-2.805862,-8.519251,-4.756206,9.461434,9.430810,-9.633849,-8.278519,-9.871140,9.762377,4.522072,4.908488,3.507720,-8.679267,8.482416,-5.629901,5.141619,-3.631432,-5.593875,-8.532527,-4.549311,-6.384290,-3.107017,0.843619,4.414744,-5.243977,4.771493,8.128567,9.012975,-5.314591,-0.633362,2.801483,7.936249,9.097519,-7.092195,8.018095,4.296805,6.846830,8.999879,-1.808329,-0.141807,9.396205,3.572807,-1.622393,-7.406026,3.977487,-2.160901,-0.276479,-1.510867,9.998134,8.737134,0.194330,2.941214,2.734680,-6.130754,9.262101,-6.566008,-3.926019,1.235856,-1.082378,8.521480,-5.382399,7.001545,-3.699220,-6.934116,-6.780352,-4.197813,-7.183366,3.719853,-5.672353,-1.412456,-7.561362,8.957859,-2.879106,7.215129,-3.896598,-2.946004,-2.343223,-1.988871,9.351538,9.960536,-7.479025,-4.438035,5.740178,-8.723704,3.297991,1.746302,8.467260,-7.396495,3.656876,8.633997,-3.113371,1.958784,1.815090,1.584120,-6.654858,-1.623762,2.433490,-6.665065,-1.632802,-7.364153,4.963227,8.794641,-0.851877,-8.045108,-7.943321,-0.997929,9.093711,3.266178,3.924601,3.445723,7.981219,-0.505489,-2.869628,9.663280,-2.469613,-5.055672,8.266044,-4.159196,4.504673], dtype = "float32")#candidate|8507|(784,)|const|float32
var_8508 = relay.var("var_8508", dtype = "float32", shape = (480,))#candidate|8508|(480,)|var|float32
call_8503 = relay.TupleGetItem(func_2148_call(relay.reshape(const_8504.astype('float32'), [4, 14, 4]), relay.reshape(var_8505.astype('float64'), [1, 720]), relay.reshape(var_8506.astype('float64'), [540,]), relay.reshape(const_8507.astype('float32'), [4, 196]), relay.reshape(var_8508.astype('float32'), [40, 12]), ), 11)
call_8509 = relay.TupleGetItem(func_2154_call(relay.reshape(const_8504.astype('float32'), [4, 14, 4]), relay.reshape(var_8505.astype('float64'), [1, 720]), relay.reshape(var_8506.astype('float64'), [540,]), relay.reshape(const_8507.astype('float32'), [4, 196]), relay.reshape(var_8508.astype('float32'), [40, 12]), ), 11)
func_8085_call = mod.get_global_var('func_8085')
func_8087_call = mutated_mod.get_global_var('func_8087')
call_8510 = func_8085_call()
call_8511 = func_8085_call()
func_696_call = mod.get_global_var('func_696')
func_698_call = mutated_mod.get_global_var('func_698')
call_8517 = func_696_call(relay.reshape(var_8508.astype('float32'), [8, 6, 10]))
call_8518 = func_696_call(relay.reshape(var_8508.astype('float32'), [8, 6, 10]))
output = relay.Tuple([call_8501,call_8503,const_8504,var_8505,var_8506,const_8507,var_8508,call_8510,call_8517,])
output2 = relay.Tuple([call_8502,call_8509,const_8504,var_8505,var_8506,const_8507,var_8508,call_8511,call_8518,])
func_8521 = relay.Function([var_8505,var_8506,var_8508,], output)
mod['func_8521'] = func_8521
mod = relay.transform.InferType()(mod)
var_8522 = relay.var("var_8522", dtype = "float64", shape = (720,))#candidate|8522|(720,)|var|float64
var_8523 = relay.var("var_8523", dtype = "float64", shape = (540,))#candidate|8523|(540,)|var|float64
var_8524 = relay.var("var_8524", dtype = "float32", shape = (480,))#candidate|8524|(480,)|var|float32
output = func_8521(var_8522,var_8523,var_8524,)
func_8525 = relay.Function([var_8522,var_8523,var_8524,], output)
mutated_mod['func_8525'] = func_8525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4949_call = mod.get_global_var('func_4949')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_8530 = func_4949_call()
call_8531 = func_4949_call()
output = relay.Tuple([call_8530,])
output2 = relay.Tuple([call_8531,])
func_8550 = relay.Function([], output)
mod['func_8550'] = func_8550
mod = relay.transform.InferType()(mod)
output = func_8550()
func_8551 = relay.Function([], output)
mutated_mod['func_8551'] = func_8551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4896_call = mod.get_global_var('func_4896')
func_4897_call = mutated_mod.get_global_var('func_4897')
call_8597 = func_4896_call()
call_8598 = func_4896_call()
output = relay.Tuple([call_8597,])
output2 = relay.Tuple([call_8598,])
func_8643 = relay.Function([], output)
mod['func_8643'] = func_8643
mod = relay.transform.InferType()(mod)
mutated_mod['func_8643'] = func_8643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8643_call = mutated_mod.get_global_var('func_8643')
call_8644 = func_8643_call()
output = call_8644
func_8645 = relay.Function([], output)
mutated_mod['func_8645'] = func_8645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8417_call = mod.get_global_var('func_8417')
func_8418_call = mutated_mod.get_global_var('func_8418')
call_8652 = relay.TupleGetItem(func_8417_call(), 2)
call_8653 = relay.TupleGetItem(func_8418_call(), 2)
output = relay.Tuple([call_8652,])
output2 = relay.Tuple([call_8653,])
func_8669 = relay.Function([], output)
mod['func_8669'] = func_8669
mod = relay.transform.InferType()(mod)
mutated_mod['func_8669'] = func_8669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8669_call = mutated_mod.get_global_var('func_8669')
call_8670 = func_8669_call()
output = call_8670
func_8671 = relay.Function([], output)
mutated_mod['func_8671'] = func_8671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8765 = relay.var("var_8765", dtype = "float32", shape = (6, 16, 12))#candidate|8765|(6, 16, 12)|var|float32
var_8766 = relay.var("var_8766", dtype = "float32", shape = (6, 16, 12))#candidate|8766|(6, 16, 12)|var|float32
bop_8767 = relay.subtract(var_8765.astype('float32'), relay.reshape(var_8766.astype('float32'), relay.shape_of(var_8765))) # shape=(6, 16, 12)
func_7032_call = mod.get_global_var('func_7032')
func_7034_call = mutated_mod.get_global_var('func_7034')
call_8771 = relay.TupleGetItem(func_7032_call(), 0)
call_8772 = relay.TupleGetItem(func_7034_call(), 0)
func_984_call = mod.get_global_var('func_984')
func_988_call = mutated_mod.get_global_var('func_988')
const_8780 = relay.const(1, dtype = "int32")#candidate|8780|()|const|int32
var_8781 = relay.var("var_8781", dtype = "int32", shape = (2016,))#candidate|8781|(2016,)|var|int32
call_8779 = relay.TupleGetItem(func_984_call(relay.reshape(const_8780.astype('int32'), []), relay.reshape(var_8781.astype('int32'), [12, 12, 14]), ), 0)
call_8782 = relay.TupleGetItem(func_988_call(relay.reshape(const_8780.astype('int32'), []), relay.reshape(var_8781.astype('int32'), [12, 12, 14]), ), 0)
bop_8786 = relay.greater(bop_8767.astype('bool'), const_8780.astype('bool')) # shape=(6, 16, 12)
output = relay.Tuple([call_8771,call_8779,var_8781,bop_8786,])
output2 = relay.Tuple([call_8772,call_8782,var_8781,bop_8786,])
func_8792 = relay.Function([var_8765,var_8766,var_8781,], output)
mod['func_8792'] = func_8792
mod = relay.transform.InferType()(mod)
var_8793 = relay.var("var_8793", dtype = "float32", shape = (6, 16, 12))#candidate|8793|(6, 16, 12)|var|float32
var_8794 = relay.var("var_8794", dtype = "float32", shape = (6, 16, 12))#candidate|8794|(6, 16, 12)|var|float32
var_8795 = relay.var("var_8795", dtype = "int32", shape = (2016,))#candidate|8795|(2016,)|var|int32
output = func_8792(var_8793,var_8794,var_8795,)
func_8796 = relay.Function([var_8793,var_8794,var_8795,], output)
mutated_mod['func_8796'] = func_8796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6885_call = mod.get_global_var('func_6885')
func_6886_call = mutated_mod.get_global_var('func_6886')
call_8851 = relay.TupleGetItem(func_6885_call(), 1)
call_8852 = relay.TupleGetItem(func_6886_call(), 1)
uop_8855 = relay.sin(call_8851.astype('float64')) # shape=(6, 1, 5)
uop_8857 = relay.sin(call_8852.astype('float64')) # shape=(6, 1, 5)
var_8865 = relay.var("var_8865", dtype = "float64", shape = (6, 10, 5))#candidate|8865|(6, 10, 5)|var|float64
bop_8866 = relay.not_equal(call_8851.astype('bool'), var_8865.astype('bool')) # shape=(6, 10, 5)
bop_8869 = relay.not_equal(call_8852.astype('bool'), var_8865.astype('bool')) # shape=(6, 10, 5)
func_3654_call = mod.get_global_var('func_3654')
func_3656_call = mutated_mod.get_global_var('func_3656')
const_8882 = relay.const([[False,True,False,True,True,True],[False,False,False,True,True,True],[True,False,True,False,False,False],[True,False,True,False,False,False],[True,True,False,False,True,False],[True,True,True,False,True,False],[True,True,True,True,False,False],[False,False,False,True,False,True],[False,True,True,True,False,True],[True,True,False,False,True,True],[False,True,False,True,True,True],[False,False,False,True,True,True],[True,True,True,True,False,True],[False,False,False,True,False,False],[False,True,False,False,True,True],[True,True,False,False,True,True],[True,True,True,False,False,False],[True,True,True,False,False,False],[True,True,False,True,False,False],[False,True,False,False,True,True],[True,True,True,False,True,False],[True,False,True,True,False,True],[True,True,False,True,True,False],[True,False,True,True,False,False],[False,False,True,False,False,False],[True,True,True,False,True,False],[False,True,True,True,False,True],[False,True,True,False,False,False],[True,True,True,False,True,True],[False,True,True,True,True,True],[False,False,False,True,True,False],[False,True,True,True,True,True],[False,True,False,True,False,True],[False,True,False,True,True,True],[False,False,False,True,True,True],[False,True,False,False,True,True],[False,True,False,True,False,True],[False,False,True,True,False,True],[False,False,False,False,True,True],[False,True,True,False,False,True],[False,False,False,False,False,True],[True,True,False,True,False,False],[True,True,True,False,False,True],[True,False,True,True,False,False],[False,False,True,False,True,True],[True,True,True,True,True,True],[True,False,False,True,True,True],[False,False,False,True,False,False],[False,True,False,True,False,False],[True,True,True,False,True,False],[True,False,True,False,True,False],[True,False,False,False,False,True],[True,False,False,True,True,False],[True,True,False,True,False,False],[True,True,True,False,True,False],[False,False,False,True,False,False],[True,True,False,True,True,False],[True,False,False,True,True,True],[True,False,False,True,True,False],[False,True,True,True,True,False],[False,False,False,False,True,False],[False,True,False,True,False,True],[True,True,False,False,False,True],[True,False,False,False,True,True],[False,True,False,False,True,False],[False,True,False,True,True,True],[True,False,False,True,True,True],[True,False,False,True,False,True],[False,False,True,False,False,False],[False,False,False,False,False,True],[False,True,False,False,False,True],[False,True,True,False,True,False],[True,False,True,False,True,True],[True,True,True,False,False,True],[False,False,False,False,False,False],[True,True,True,True,True,True],[True,True,True,False,False,False],[True,True,False,False,True,True],[True,False,False,True,False,False],[False,True,False,False,True,True],[True,True,False,False,False,True],[False,True,True,True,False,True],[True,True,False,True,True,False],[False,False,False,False,True,True],[True,False,False,True,False,True],[False,True,False,False,False,True],[False,False,False,True,True,False],[False,False,True,False,True,False],[False,True,True,True,True,False],[False,False,False,False,False,True],[True,False,False,False,True,False],[True,True,False,True,False,True],[False,False,True,True,False,False],[False,True,True,True,False,True],[True,False,True,False,False,True],[True,True,False,True,True,True],[False,False,False,False,False,False],[False,False,False,True,True,False],[False,True,True,True,False,True],[False,False,True,False,False,True],[True,True,True,True,False,False],[False,False,True,False,True,True],[False,True,True,False,False,False],[True,False,False,False,False,False],[False,False,False,True,False,False],[True,False,True,False,True,False],[False,False,False,True,False,True],[False,True,False,True,True,True],[False,False,True,False,True,True],[False,True,False,True,False,False],[True,True,False,True,True,False],[True,False,False,True,True,False],[True,False,True,True,True,True],[False,True,True,False,True,False],[True,False,True,True,True,False],[False,False,True,False,True,True],[False,False,True,False,False,False],[True,True,False,False,False,False],[True,True,True,True,True,True],[True,False,True,True,False,False],[True,False,False,False,False,False]], dtype = "bool")#candidate|8882|(121, 6)|const|bool
call_8881 = relay.TupleGetItem(func_3654_call(relay.reshape(const_8882.astype('bool'), [11, 11, 6])), 0)
call_8883 = relay.TupleGetItem(func_3656_call(relay.reshape(const_8882.astype('bool'), [11, 11, 6])), 0)
uop_8906 = relay.log2(bop_8866.astype('float64')) # shape=(6, 10, 5)
uop_8908 = relay.log2(bop_8869.astype('float64')) # shape=(6, 10, 5)
uop_8912 = relay.atanh(uop_8906.astype('float32')) # shape=(6, 10, 5)
uop_8914 = relay.atanh(uop_8908.astype('float32')) # shape=(6, 10, 5)
output = relay.Tuple([uop_8855,call_8881,const_8882,uop_8912,])
output2 = relay.Tuple([uop_8857,call_8883,const_8882,uop_8914,])
func_8915 = relay.Function([var_8865,], output)
mod['func_8915'] = func_8915
mod = relay.transform.InferType()(mod)
mutated_mod['func_8915'] = func_8915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8916 = relay.var("var_8916", dtype = "float64", shape = (6, 10, 5))#candidate|8916|(6, 10, 5)|var|float64
func_8915_call = mutated_mod.get_global_var('func_8915')
call_8917 = func_8915_call(var_8916)
output = call_8917
func_8918 = relay.Function([var_8916], output)
mutated_mod['func_8918'] = func_8918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7901_call = mod.get_global_var('func_7901')
func_7902_call = mutated_mod.get_global_var('func_7902')
call_8964 = func_7901_call()
call_8965 = func_7901_call()
output = relay.Tuple([call_8964,])
output2 = relay.Tuple([call_8965,])
func_8968 = relay.Function([], output)
mod['func_8968'] = func_8968
mod = relay.transform.InferType()(mod)
output = func_8968()
func_8969 = relay.Function([], output)
mutated_mod['func_8969'] = func_8969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mod.get_global_var('func_5449')
func_5451_call = mutated_mod.get_global_var('func_5451')
call_8999 = func_5449_call()
call_9000 = func_5449_call()
func_7535_call = mod.get_global_var('func_7535')
func_7537_call = mutated_mod.get_global_var('func_7537')
var_9018 = relay.var("var_9018", dtype = "float64", shape = (7, 28))#candidate|9018|(7, 28)|var|float64
call_9017 = relay.TupleGetItem(func_7535_call(relay.reshape(var_9018.astype('float64'), [196,])), 3)
call_9019 = relay.TupleGetItem(func_7537_call(relay.reshape(var_9018.astype('float64'), [196,])), 3)
uop_9038 = relay.acos(var_9018.astype('float32')) # shape=(7, 28)
bop_9050 = relay.greater_equal(uop_9038.astype('bool'), relay.reshape(call_9017.astype('bool'), relay.shape_of(uop_9038))) # shape=(7, 28)
bop_9053 = relay.greater_equal(uop_9038.astype('bool'), relay.reshape(call_9019.astype('bool'), relay.shape_of(uop_9038))) # shape=(7, 28)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
var_9056 = relay.var("var_9056", dtype = "float32", shape = (140,))#candidate|9056|(140,)|var|float32
call_9055 = relay.TupleGetItem(func_5541_call(relay.reshape(var_9056.astype('float32'), [1, 140])), 0)
call_9057 = relay.TupleGetItem(func_5543_call(relay.reshape(var_9056.astype('float32'), [1, 140])), 0)
output = relay.Tuple([call_8999,bop_9050,call_9055,var_9056,])
output2 = relay.Tuple([call_9000,bop_9053,call_9057,var_9056,])
func_9065 = relay.Function([var_9018,var_9056,], output)
mod['func_9065'] = func_9065
mod = relay.transform.InferType()(mod)
var_9066 = relay.var("var_9066", dtype = "float64", shape = (7, 28))#candidate|9066|(7, 28)|var|float64
var_9067 = relay.var("var_9067", dtype = "float32", shape = (140,))#candidate|9067|(140,)|var|float32
output = func_9065(var_9066,var_9067,)
func_9068 = relay.Function([var_9066,var_9067,], output)
mutated_mod['func_9068'] = func_9068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8643_call = mod.get_global_var('func_8643')
func_8645_call = mutated_mod.get_global_var('func_8645')
call_9091 = relay.TupleGetItem(func_8643_call(), 0)
call_9092 = relay.TupleGetItem(func_8645_call(), 0)
output = relay.Tuple([call_9091,])
output2 = relay.Tuple([call_9092,])
func_9102 = relay.Function([], output)
mod['func_9102'] = func_9102
mod = relay.transform.InferType()(mod)
output = func_9102()
func_9103 = relay.Function([], output)
mutated_mod['func_9103'] = func_9103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mod.get_global_var('func_4736')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_9126 = relay.TupleGetItem(func_4736_call(), 0)
call_9127 = relay.TupleGetItem(func_4737_call(), 0)
func_8417_call = mod.get_global_var('func_8417')
func_8418_call = mutated_mod.get_global_var('func_8418')
call_9129 = relay.TupleGetItem(func_8417_call(), 0)
call_9130 = relay.TupleGetItem(func_8418_call(), 0)
func_3348_call = mod.get_global_var('func_3348')
func_3352_call = mutated_mod.get_global_var('func_3352')
var_9134 = relay.var("var_9134", dtype = "float64", shape = (144,))#candidate|9134|(144,)|var|float64
var_9135 = relay.var("var_9135", dtype = "int64", shape = (2880,))#candidate|9135|(2880,)|var|int64
var_9136 = relay.var("var_9136", dtype = "float64", shape = (3, 156))#candidate|9136|(3, 156)|var|float64
call_9133 = relay.TupleGetItem(func_3348_call(relay.reshape(var_9134.astype('float64'), [2, 12, 6]), relay.reshape(var_9135.astype('int64'), [2880,]), relay.reshape(var_9136.astype('float64'), [468,]), ), 5)
call_9137 = relay.TupleGetItem(func_3352_call(relay.reshape(var_9134.astype('float64'), [2, 12, 6]), relay.reshape(var_9135.astype('int64'), [2880,]), relay.reshape(var_9136.astype('float64'), [468,]), ), 5)
output = relay.Tuple([call_9126,call_9129,call_9133,var_9134,var_9135,var_9136,])
output2 = relay.Tuple([call_9127,call_9130,call_9137,var_9134,var_9135,var_9136,])
func_9139 = relay.Function([var_9134,var_9135,var_9136,], output)
mod['func_9139'] = func_9139
mod = relay.transform.InferType()(mod)
var_9140 = relay.var("var_9140", dtype = "float64", shape = (144,))#candidate|9140|(144,)|var|float64
var_9141 = relay.var("var_9141", dtype = "int64", shape = (2880,))#candidate|9141|(2880,)|var|int64
var_9142 = relay.var("var_9142", dtype = "float64", shape = (3, 156))#candidate|9142|(3, 156)|var|float64
output = func_9139(var_9140,var_9141,var_9142,)
func_9143 = relay.Function([var_9140,var_9141,var_9142,], output)
mutated_mod['func_9143'] = func_9143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9147 = relay.var("var_9147", dtype = "float64", shape = (8, 9, 8))#candidate|9147|(8, 9, 8)|var|float64
uop_9148 = relay.erf(var_9147.astype('float64')) # shape=(8, 9, 8)
output = uop_9148
output2 = uop_9148
func_9160 = relay.Function([var_9147,], output)
mod['func_9160'] = func_9160
mod = relay.transform.InferType()(mod)
mutated_mod['func_9160'] = func_9160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9161 = relay.var("var_9161", dtype = "float64", shape = (8, 9, 8))#candidate|9161|(8, 9, 8)|var|float64
func_9160_call = mutated_mod.get_global_var('func_9160')
call_9162 = func_9160_call(var_9161)
output = call_9162
func_9163 = relay.Function([var_9161], output)
mutated_mod['func_9163'] = func_9163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8550_call = mod.get_global_var('func_8550')
func_8551_call = mutated_mod.get_global_var('func_8551')
call_9181 = relay.TupleGetItem(func_8550_call(), 0)
call_9182 = relay.TupleGetItem(func_8551_call(), 0)
func_2527_call = mod.get_global_var('func_2527')
func_2530_call = mutated_mod.get_global_var('func_2530')
const_9194 = relay.const([[-10,-7,-1,-8,-9,6,-5,-6,-2,-9,10,-6,5,-5,-3,6,5,4,8,-5,-4,-10,-3,9,-9,10,6,-10,-9,-8,9,6,7,-10,-4,4,7,-5,2,10,6,-1,-3,-3,-6,-7,-5,3,-2,1,-9,2,-10,-8,2,-6,-5,-1,9,-3,5,2,-10,5,9,6,10,-3,4,3,-7,-4,-7,1,9,3,-3,-7,1,4,8,5,9,-8,-7,-1,-1,7,2,-6,-3,6,-3,10,4,1,6,-10,3,-10,-1,7,7,-10,3,9,-4,-5,-7,8,-8,5,-2,-1,-5,5,3,9,-7,9,6,9,3,4,8,-3,-8,2,-5,7,5,5,-6,-8,-3,3,4,-9,6,7,3,10,-8,3,5,-3,-4,8,5,2,-2,-9,-7,-3,10,-4,-10,6,7,3,-1,-4,-7,4,-10,-9,-1,1,7,-2,-4,1,3,3,-9,3,1,7,-2,9,7,-6,-8,-8,-1,-3,-9,10,-4,-3,7,4,-5,-5,4,-1,-4,1,6,-9,2,-3,-6,4,-3,-4,-4,8,1,-6,-9,-6,-6,7,6,8,-5,10,1,3,4,-4,-10,-8,10,-8,5,-4,-2,-10,6,-8,-8,-4,6,-2,-9,-9,-1,-1,-2,-9,-2,-5,-3,-5,-4,2,3,8,-5,10,-9,2,5,-2,-10,-4,-6,-9,8,10,8,2,5,-3,-4,-4,-1,4,8,4,5,-2,-1,-1,-6,-8,10,8,-4,8,5,1,-8,3,-9,6,7,6,-1,-4,6,3,-4,1,-3,5,3,-5,9,7,-5,3,-10,-7,-3,-8,-4,5,2,-7,-7,3,8,-8,-6,-6,-7,10,-5,-8,7,-5,9,-1,8,-5,10,-4,8,7,7,4,10,3,10,-4,-9,9,1,-8,8,3,-5,-6,8,-6,7,-1,1,-10,7,-9,-5,4,-10,2,-8,-6,1,-6,7,4,-10,-9,-10,6,-5,4,5,5,-4,3,-3,5,-3,2,2,2,-4,-7,-1,2,7,-5,7,8,-6,-3,10,-2,-2,-10,4,-8,-2,3,-7,-1,-4,-7,-6,-4,3,-3,7,5,4,6,7,6,-1,3,5,-2,-10,-2,3,-1,5,-1,-1,-4,2,-3,-3,8,-8,-2,7,-6,3,5,3,-2,10,-3,-10,6,-6,-10,-7,-5,-1,10,10,-7,3,1,-8,6,-8,2,5,-1,6,2,-2,-10,3,-3,7,8,-1,-8,3,10,-5,1,-10,-3,-4,2,9,10,-4,-4,2,1,-2,6,-2,-9,9,-9,4,5,-4,-5,9,-4,8,-3,2,8,2,-1,10,-3,2,6,-1,-4,-8,-9,-6,-1,3,-5,-10,8,6,-8,7,-3,-3,-5,-2,3,-9,8,-5,10,-6,2,-9,-10,8,-1,-1,-6,-3,-1,1,4,8,5,-2,-3,1,4,4,5,4,-8,8,9,4,-8,-6,7,6,-7,-9,9,-6,10,-7,-3,-8,-5,-5,-2,6,6,-2,-8,-6,-9,7,-3,-10,-2,-7,-9,-8,-3,-1,-3,-5,-3,-3,9,5,-2,-5,5,9,4,2,1,10,-2,1,1,8,6,4,1,-5,-4,-10,-6,6,-5,5,-10,-3,9,-10,3,4,-9,7,8,3,-2,10,-3,10,-7,-7,-2,-1,-6,1,9,1,4,10,-9,5,-7,1,-3,10,-6,7,7,10,9,5,9,-7,-5,6,-9,7,-9,-8,7,-2,-4,4,-7,9,8,-5,1,1,-9,1,-9,4,5,10,-9,-7,-3,6,-7,-7,8,-3,4,-4,10,-8,4,-9,-3,10,-1,-5,-10,-6,6,2,-3,-3,-9,-7,2,8,-9,-4,-5,-6,-3,-3,-6,2,2,5,10,-2,5,-8,7,5,-2,-2,-5,-5,1,-1,-9,-8,8,-6,-1,7,-8,-7,8,2,-2,9,3,4,-6,-3,-10,5,6,6,10,7,6,-4,7,8,-8,-7,-5,-7,7,-5,10,-7,-3,-6,-8,-4,7,3,-4,3,10,-5,10,3,1,-8,-1,-9,-10,9,8,-4,-1,-10,8,7,3,10,-3,5,-4,-4,8,9,-10,7,4,-4,-6,10,-8,-1,-8,-6,-5,-4,2,4,-3,9,3,-3,5,2,2,7,-10,2,-9,-10,9,-3,-3,-2,-10,-2,-7,10,2,7,-5,-7,3,6,8,-8,1,10,10,10,7,3,-9,-9,-6,-7,1,7,-3,-9,8,-10,1,-2,-5,3,6,-5,-10,6,-1,8,-8,7,7,-2,3,5,-3,-7,1,8,7,-4,10,-2,4,-2,-4,-4,2,7,10,-9,10,9,5,1,-5,-8,7,-5,-1,-5,-3,-7,5,-10,9,7,-5,-3,8,-4,-10,-5,4,10,-6,-4,4,-5,7,-5,7,8,-10,4,-6,8,-3,-3,-4,4,-9,-8,10,-3,9,5,-2,7,3,-8,2,-5,1,-1,2,-5,-4,4,-8,-10,7,-2,10,10,3,-2,-6,-9,4,3,5,-7,-5,-10,-9,10,10,4,-1,3,4,10,-10,-8,7,10,-1,1,-9,-7,-5,-4,-8,3,5,-5,1,9,-4,-6,8,5,5,5,8,2,-8,-8,-7,8,-9,10,-10,-9,-4,7,3,1,-9,1,8,-1,-10,-5,-2,-10,7,8,9,-2,-6,-4,3,8,2,9,3,-10,-1,-3,-9,-3,-2,-4,2,-3,6,-9,5,-1,7,10,-2,-4,-5,-5,7,-3,-10,-10,-4,3,10,-9,7,3,9,-3,-2,-1,3,3,5,1,-2,10,-3,8,-2,8,6,-3,-5,-6,-3,-5,-5,6,-4,-7,-7,-6,7,6,10,9,7,1,-8,8,5,6,4,2,-1,6,-6,-10,4,-2,-2,-2,-3,-1,-1,-10,4,8,2,-6,1,-4,-4,-9,2,5,-4,-3,10,-8,2,-7,8,4,9,4,4,8,4,-6,-1,-10,-8,4,6,-8,3,-7,-5,2,3,-4,6,2,-1,6,-1,-9,-9,8,-4,-4,-4,-10,1,2,10,10,-8,-5,1,1,8,-3,-2,4,9,-4,8,1,8,5,1,-1,8,-10,-7,-2,-10,4,8,-9,-6,10,-7,-7,-8,2,-8,10,10,6,10,4,5,-3,8,1,-5,1,-6,8,1,-3,2,4,1,1,7,3,-5,-4,8,-10,8,6,10,-6,-3,-9,-2,9,10,-7,3,-9,-8,-5,10,-3,9,-2,5,-9,9,-3,10,6,-2,-8,-5,-5,-4,1,-8,-2,-4,-5,6,-7,-3,-8,4,4,7,1,1,-6,8,8,-4,4,-9,-6,4,-2,4,9,-3,4,-7,3,10,-2,9,-6,-2,-10,9,6,9,-8,7,5,-2,-2,-3,-6,8,-1,10,9,-8,-5,-7,10,-10,-3,8,6,4,-9,-7,-9,-5,-2,-2,8,-2,-6,-5,-6,-5,-9,6,2,-7,6,6,-7,-10,5,-9,-1,-6,-9,3,4,-6,-2,-2,10,-3,-1,6,9,8,7,7,-8,6,3,-5,-9,10,3,6,-1,-2,10,-4,-5,3,10,3,-2,-7,8,2,5,9,-5,-1,-3,-1,-2,-2,-7,-2,-6,5,4,4,6,-9,7,-8,2,1,4,-8,6,5,6,10,-2,1,7,-8,-9,-3,-7,-3,10,-4,-5,-1,6,-4,-7,4,7,5,-1,6,-2,-8,-10,7,4,-6,-8,10,5,6,-8,1,-8,-1,3,-8,-8,3,-9,2,4,2,5,5,6,1,-4,1,-3,8,2,1,4,2,6,5,-9,1,-9,-3,-10,10,9,5,-4,9,10,-7,-6,6,-2,2,-9,5,-3,-6,-3,8,-8,7,5,1,8,8,9,-5,-8,-2,2,-9,-6,-10,1,-4,-1,2,-8,1,-1,9,-4,10,-3,-1,2,2,4,8,9,4,-2,6,-9,6,-6,9,9,-4,-4,9,-6,3,-4,7,2,3,-8,-5,-4,9,6,-1,-9,-1,-1,-10,-1,9,3,-9,7,-10,1,-4,-6,6,-2,1,2,-8,-2,10,-9,-1,4,9,3,8,5,-10,6,-7,3,-2,9,7,-8,9,7,2,-1,3,-10,-10,3,-8,-6,-7,-2,-5,1,-6,-1,8,2,-9,1,-7,-3,6,6,6,6,2,-4,-2,-9,6,1,7,-2,-8,-10,-3,-1,2,-2,3,2,7,2,-3,-8,-2,2,2,-8,8,5,-5,-10,-8,-3,-2,6,-5,9,-9,6,5,1,-4,10,-8,-3,5,-10,-8,4,10,-9,6,2,6,7,7,-1,-8,3,7,-1,-3,-5,-3,-9,7,-5,-8,10,-6,5,6,4,-6,4,-5,8,-5,9,2,-1,7,-5,5,-9,4,-2,-10,6,5,1,-6,-10,-4,7,6,-8,-3,10,-6,-9,-2,1,-9,-10,-1,-6,4,6,-4,3,-2,-5,-3,5,3,-2,-4,9,-1,10,3,-7,-2,2,-7,-8,-7,-5,7,2,3,4,-6,-5,-3,-9,10,1,10,-10,2,9,10,-10,4,-4,3,-8,-3,5,7,2,1,-1,-9,-9,8,10,2,4,1,6,-8,-4,7,-8,-3,-4,-6,-7,-8,5,4,6,5,-3,8,2,-4,-10,8,-7,-10,7,-8,8,1,-3,-9,3,9,-2,-7,-6,3,-6,-3,3,-4,7,5,7,1,2,-9,5,5,6,4,-7,-7,7,5,-3,-10,-10,-10,-2,-9,2,-1,5,-4,2,-4,-4,-9,10,3,-3,-4,10,2,-6,6,8,-4,-7,-5,-6,-5,7,-3,10,-10,9,-7,-9,-10,-9,-10,-6,-9,3,-2,-4,-9,-5,-10,6,-9,4,-5,5,8,2,1,2,-2,6,6,-5,1,-7,6,-10,10,10,-7,-1,-7,4,-10,7,-3,-10,-3,2,-4,4,4,-2,8,-10,-7,1,-1,-1,1,-6,3,1,-8,1,-4,1,-10,2,7,2,-10,-7,8,-5,7,3,-5,9,9,-5,-6,-1,-1,2,-5,-9,9,-8,-3,-8,-4,4,5,-5,1,9,8,4,5,7,-4,6,2,2,7,-8,1,2,-3,-2,7,-4,3,6,5,7,8,3,-7,7,-7,9,-7,3,8,-8,9,1,1,-10,-1,-6,-2,10,5,5,2,-9,-5,-1,-10,-9,1,10,9,8,9,-8,-2,2,6,1,-3,7,5,-2,-4,-1,-5,5,-1,6,7,-2,-4,8,4,-6,-2,-7,-8,9,2,-7,2,-2,6,-4,-2,4,1,-4,3,-1,4,1,9,-5,1,9,-5,8,-9,-6,9,6,2,-6,-3,-10,-7,8,1,8,-7,-9,7,6,10,-6,-4,10,2,10,4,-2,-3,6,6,-7,-10,5,-4,1,5,-4,10,4,1,-9,8,-6,2,4,-8,10,7,-5,-10,-6,6,5,-5,7,-5,-9,-8,3,-8,9,-7,-4,-6,-9,5,-1,-5,-6,5,6,-2,4,-9,1,3,-3,-8,-7,6,-1,1,-4,8,9,-5,-5,10,-8,-6,8,8,-2,-10,1,6,7,-3,8,-2,5,1,-4,-9,2,1,7,-3,6,-1,-9,10,-6,8,-4,-8,8,7,2,4,3,6,-7,-10,-2,1,-8,9,3,6,8,6,-7,9,1,5,-1,6,10,2,-7,-3,-3,10,10,5,2,-5,4,-10,7,9,-4,7,-10,-6,-1,3,9,-2,-1,-8,-8,-4,5,7,9,2,-2,-7,-8,-1,-2,-3,-10,-2,3,4,3,4,-1,-1,-1,-4,-2,5,-6,8,-3,-8,7,-3,-10,-4,6,10,-10,-8,4,4,-6,5,-5,9,6,-2,7,-5,-4,-9,-6,-8,10,7,-9,-1,2,-7,2,7,-3,-1,4,-7,-3,-7,-7,-5,-2,-2,-5,-7,2,-4,-2,-2,-1,5,-7,4,-1,8,7,-7,-8,-1,6,8,2,2,-4,-8,7,10,8,-5,6,-8,-9,-3,4,7,-10,7,10,5,-6,-9,-6,9,5,-4,-1,6,-5,-4,3,-8,10,-6,-7,-4,-5,7,4,-7,4,-1,-4,-3,-6,-10,2,-3,-7,1,-1,8,10,9,-5,-4,-10,4,-2,2,7,6,-4,-10,-9,5,-7,-5,-8,2,3,-2,9,-6,4,8,4,9,-6,-6,-1,4,-4,3,-5,7,1,2,7,2,10,3,7,-1,-2,-5,-8,10,-9,-3,-10,-2,-10,-10,4,10,-3,7,6,10,-5,-2,-5,4,-5,-6,-7,-5,-5,-6,6,-5,9,-6,2,-7,-2,-9,-1,-9,-1,-1,-5,7,-1,3,9,8,-1,-4,-2,-9,8,-9,4,5,-5,6,-5,2,-8,-7,2,-6,2,8,-9,-8,9,-7,-7,10,3,2,1,-5,-8,7,-8,4,2,-3,9,9,-9,10,-1,6,6,-1,1,-7,10,8,6,-7,-2,-7,-2,-10,5,4,2,-9,9,5,-9,6,6,-9,-4,1,9,-8,6,-9,-9,6,-5,10,-8,4,9,9,4,10,-4,-5,-8,-3,2,-3,7,2,8,-5,-9,4,-9,-5,-10,-2,-3,7,-1,-6,-4,-5,10,-4,1,5,-8,-10,-1,-9,-8,-5,-9,4,5,-4,9,-2,7,7,5,10,10,-2,2,2,-4,5,-9,3,7,5,-7,4,2,3,-5,3,-2,-6,6,-8,-5,6,-10,-10,-4,-2,9,-6,1,-8,-2,-2,6,3,-8,-4,2,8,9,-10,2,-4,9,-4,9,9,-3,-10,-10,2,-1,-2,-6,-6,10,-6,7,-3,-3,-9,9,6,8,2,6,-8,8,-2,2,-9,-2,-5,6,7,5,2,5,-7,-3,-3,-2,-7,-2,-7,7,-9,1,-9,-3,8,4,3,9,6,-10,-4,1,7,10,-10,-1,5,-4,-1,-1,-7,1,8,-4,6,3,-8,-1,8,10,8,8,5,10,-10,-7,7,1,-1,-10,-8,-5,5,-3,9,10,7,5,-1,8,-5,10,-4,-7,-3,10,-10,-10,-4,8,8,-3,6,-9,-10,-8,-1,-6,9,-9,-2,6,7,7,-8,-5,4,3,3,-9,-6,-7,-7,-5,-8,-1,-5,-2,-2,4,-7,8,6,-1,1,9,9,8,8,-2,-10,-9,-1,-9,-2,-5,-3,-10,4,5,3,5,-1,8,8,8,-5,3,9,-1,7,10,8,-7,1,-10,-8,-4,1,10,2,-5,6,2,-10,-6,8,-6,-4,-1,-7,-9,9,5,5,-9,-5,5,4,7,-10,-2,-7,-7,1,7,-2,-2,10,-10,3,4,-4,9,8,-2,9,9,10,8,-5,-9,1,-5,-9,10,4,9,-4,-4,4,-1,7,10,5,1,5,4,-3,9,-5,5,-4,5,-5,-10,-4,2,10,-9,2,-4,1,-4,-8,6,3,-5,8,-3,-1,-1,-6,6,-7,-1,-4,5,-5,-10,2,-8,-9,-2,-5,9,-9,-8,-5,1,9,2,-8,-9,-6,8,6,4,1,4,2,9,-8,-6,-1,-7,-10,-4,-6,3,-3,-1,-7,8,-1,-3,8,6,-8,8,-3,10,2,2,-6,-9,6,-1,4,-2,-2,2,6,5,-2,5,-6,9,-6,7,7,-4,7,-5,-5,-8,9,-4,-7,1,1,-5,1,-6,-6,-1,-10,-4,-2,-8,6,-1,-7]], dtype = "int64")#candidate|9194|(1, 2880)|const|int64
call_9193 = relay.TupleGetItem(func_2527_call(relay.reshape(const_9194.astype('int64'), [12, 16, 15]), relay.reshape(const_9194.astype('int64'), [12, 16, 15]), ), 0)
call_9195 = relay.TupleGetItem(func_2530_call(relay.reshape(const_9194.astype('int64'), [12, 16, 15]), relay.reshape(const_9194.astype('int64'), [12, 16, 15]), ), 0)
output = relay.Tuple([call_9181,call_9193,const_9194,])
output2 = relay.Tuple([call_9182,call_9195,const_9194,])
func_9196 = relay.Function([], output)
mod['func_9196'] = func_9196
mod = relay.transform.InferType()(mod)
mutated_mod['func_9196'] = func_9196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9196_call = mutated_mod.get_global_var('func_9196')
call_9197 = func_9196_call()
output = call_9197
func_9198 = relay.Function([], output)
mutated_mod['func_9198'] = func_9198
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9217 = relay.var("var_9217", dtype = "float32", shape = (8, 15, 6))#candidate|9217|(8, 15, 6)|var|float32
uop_9218 = relay.acosh(var_9217.astype('float32')) # shape=(8, 15, 6)
func_4786_call = mod.get_global_var('func_4786')
func_4788_call = mutated_mod.get_global_var('func_4788')
call_9229 = relay.TupleGetItem(func_4786_call(), 0)
call_9230 = relay.TupleGetItem(func_4788_call(), 0)
uop_9236 = relay.cos(uop_9218.astype('float64')) # shape=(8, 15, 6)
func_8033_call = mod.get_global_var('func_8033')
func_8037_call = mutated_mod.get_global_var('func_8037')
const_9304 = relay.const([4.472238,1.391913,7.529070,6.055788,-6.001489,-3.792327,7.289721,4.301089,0.991770,6.706941,1.804822,-9.161259,4.042204,-1.146372,3.265702,9.474484,-3.386103,-0.023562,-6.345141,-1.738281,8.391757,-6.301142,2.545252,7.005828,3.285980,-7.210426,7.665417,0.084858,-5.493701,0.136776,-7.005570,3.191185,-0.014601,-2.580964,5.839764,4.626347,-7.958739,0.019708,5.426505,-2.292126,-8.150450,2.886471,-8.870228,-3.828202,8.230088,-9.392765,3.742261,-1.334763,4.210728,-0.809344,-9.392035,7.542219,-6.050471,-9.258526,3.410596,-9.889544,3.343576,1.053643,-3.899849,1.320680,3.132229,-0.606228,1.028294,-4.856522], dtype = "float64")#candidate|9304|(64,)|const|float64
const_9305 = relay.const([-9.805441,-2.869892,3.317735,2.623052,-5.700332,-2.833074,7.374528,2.295007,-5.149344,4.679109,-5.088779,-0.571924,9.198172,-8.733802,1.643645,-3.971569,-6.681948,-2.935411,9.733461,-5.356055,5.672158,2.123493,-3.579108,2.034833,2.960406,-8.317310,-1.464295,9.116682,-1.640555,-8.219479,5.984025,2.535516,-8.653345,-8.440794,3.191314,7.897428,1.799372,-6.887315,6.189338,-3.284641,-8.109490,-0.010437,4.271957,-8.701843,6.450248,-7.199080,2.761872,-0.140054,0.735911,2.308869,0.538619,-5.004332,-8.856310,-6.108498,-1.980068,-7.967922,2.953004,6.487130,6.903454,-7.246883,-4.406836,4.259454,5.862732,7.306563,-2.278727,0.378470,9.171395,2.284857,-6.970824,7.536940,-5.497903,-5.891742,-6.277412,5.822874,3.785654,-2.937135,-2.443923,-2.309893,1.775431,-8.441017,-4.442687,6.077599,5.728203,2.744295,-1.239912,-1.514103,4.877359,6.822551,-2.907205,3.989430,-2.469147,-9.489102,3.747668,-4.436065,-0.653242,1.117068,9.973221,7.990360,4.720730,-1.025004,6.937191,-6.442772,0.063926,8.968629,-0.374496,-5.992903,-3.659066,4.045447,5.266161,7.538750,9.355614,-8.095740,1.563984,0.259646,3.747462,5.015123,5.705117,0.876233,8.188491,-4.934497,1.278817,-7.699505,3.546930,9.562881,-6.866008,9.694256,3.418841,-3.593876,4.859661,8.002252,1.792461,9.093474,9.211464,-4.044188,9.329447,-2.006982,5.873549,2.011539,4.456742,3.531750,1.660977,8.591122,-1.478255,6.857158,7.307508,-7.345612,1.420345,3.957792,-9.092653,8.652411,8.438172,-9.812178,3.747609,4.264667,2.504033,-8.630583,8.600840,7.113806,0.953040,3.957012,-2.695406,4.312955,-6.099984,-2.256073,-0.415415,-2.092159,9.054620,-9.987135,-1.807318,4.155900,-8.939273,-2.291868,6.484207,-6.831509,5.881410,-5.662514,0.327681,3.986976,-7.311689,2.284353,-7.456955,-7.923091,-0.479476,-5.178509,6.269055,-5.660047,6.310327,7.438908,0.420722,5.313206,-9.044467,-8.407026,3.856006,3.079736,4.999828,2.120695,-2.308655,9.455541,-2.315931,-6.754825,-6.270463,-2.189916,7.478168,-7.162651,0.321068,5.773468,0.405316,8.420130,-4.619830,5.962814,3.895976,0.467191,-8.449580,6.835729,-0.025792,-7.850078,-6.496471,-0.916379,6.719606,-5.293909,-9.273566,-0.550028,3.482707,-3.105923,-1.716045,6.560141,-4.104508,6.948047,-6.062630,-3.391156,-5.781435,8.819471,6.426622,7.903831,-8.644457,9.914598,3.491198,5.042018,1.148278,-4.610004,7.716790,-2.915765,-4.514158,-4.131737,-7.761584,3.208525,-4.804861,0.945236,-6.903529,-6.023435,3.963120,4.176972,9.562410,5.526160,1.814692,-5.133294,-4.356281,-6.539521,-7.362162,1.637436,4.185188,-3.672748,8.713606,8.695538,-3.651018,-0.694760,8.863823,-8.581480,-5.305709,-6.034663,-1.007878,-9.382871,8.462841,5.791253,-4.604752,-0.751071,-5.969241,7.544894,-7.510853,8.623665,-7.705327,-8.249091,-0.654179,-2.895758,8.835126,-4.481626,6.039457,-0.377804,8.256656,-7.247076,-9.956583,-1.617310,5.385590,-5.099197,-1.667765,-0.089314,5.778024,3.465491,-7.832926,3.561696,-2.695536,5.823434,-5.058978,-8.649194,4.421632,0.094379,8.054303,-1.863392,7.668287,-2.175880,9.816229,-4.666484,-1.246261,-8.816246,5.077223,-8.152209,7.514975,8.350181,7.460144,4.828418,1.612664,-0.578146,-1.590618,4.808258,7.607794,-8.921735,2.669463,8.797241,-3.635883,-5.109443,2.275854,8.470588,-7.629673,9.997176,-6.631829,-0.027947,0.038209,-5.716336,-5.015038,-1.111067,3.211452,-4.240415,8.258254,-2.661419,7.564953,-2.410262,4.800955,4.315929,-5.152957,7.177342,7.106801,-0.278123,-5.475779,9.942290,6.063754,-8.773259,-8.610792,8.040105,7.652102,7.162134,-0.049133,1.002724,1.068880,7.064924,2.986290,-6.880166,-2.283699,-8.875557,3.932248,0.124294,9.591279,0.355462,-4.350115,2.197739,8.719161,-4.553148,-0.015507,2.840523,-8.660380,-0.070190,-1.306302,3.248708,9.605720,8.414707,3.731427,8.723625,7.046758,-9.426623,9.722012,4.476535,-2.555030,-6.854252,9.500227,-0.012584,-2.145915,-6.378364,5.473182,-1.360775,5.185654,1.448113,-1.138050,9.720054,2.259834,-8.259600,7.227295,0.866808,5.906615,7.835473,-4.896076,8.180726,-4.281219,9.176263,4.409438,-9.088953,5.856551,0.546131,0.296231,7.719795,-2.870692,5.123282,3.630917,8.475548,9.735455,-4.816954,-4.835308,-4.749881,4.524102,-1.243347,3.262062,4.374887,-2.267223,2.693707,2.286993,-3.221652,-9.124390,4.060376,6.866793,-6.407357,9.331864,-1.749945,-3.867643,-3.303489,-5.084216,-7.292456,-1.035833,-2.051221,-5.876219,-6.505709,0.672626,9.915280,-0.196141,7.999055,0.831789,-9.778518,-1.037774,-2.793344,-0.872943,-1.492459,3.208763,-5.262099,-2.427376,-5.127738,-0.164832,-8.744079,-7.318316,6.936149,1.641872,-3.916700,6.501926,3.073166,7.907064,-7.893523,1.051022,-4.790902,-1.068367,-5.447679,1.666895,3.771487,4.761952,8.593205,-2.227621,-4.544842,-3.919197,-6.539654,-5.527855,0.348983,-9.530696,1.233356,7.210267,-5.840770,-7.285306,-9.347304,-4.660511,-7.711496,-6.801256,3.780010,-5.767849,-9.810494,-9.504304,-5.682402,-9.949888,-8.851637,-9.051785,-0.328948,7.362956,0.047783,2.754845,4.891517,2.081809,7.327108,-7.313172,-4.836973,0.904868,1.259821,-1.349326,-3.871034,3.011661,7.822074,-4.366528,9.270830,-0.732808,9.977839,0.489069,7.783315,-1.527785,-5.460673,7.058258,-2.942447,9.538137,-8.525446,4.236166,-4.124313,3.345960,-2.175012,-1.214948,0.731122,-3.632859,-3.064909,-2.570212,6.356758,9.206225,1.852759,-2.756442,5.946761,6.639718,1.227896,-9.827448,9.716955,5.149470,7.960173,-5.221526,0.254013,8.160157,-3.272408,6.729319,1.421725,6.668238,-9.036333,-2.830474,6.383877,1.056731,-3.573928,-2.873613,-3.695647,-5.133048,2.185060,-8.197174,6.504251,8.194438,0.722548,2.357081,8.902370,6.587528,0.463028,3.787887,0.630835,6.159785,-6.343278,-7.355415,-0.163080,-9.851033,2.168040,-2.263389,-6.338291,-2.984231,-2.410816,-9.958538,-3.743130,0.140046,3.633218,-3.499634,-8.783623,7.203958,5.089700,0.374805,-2.326708,-1.924690,-5.451796,-6.470257,-0.033062,9.704303,7.678971,-9.403509,1.511649,8.972202,-5.425262,-9.362354,7.224887,1.487026,8.666959,-8.039210,-6.667510,6.147786,2.041471,5.811233,-2.614341,6.211074,4.571775,3.600808,0.375106,8.112323,-7.501832,-8.568380,9.169455,-3.181749,-2.084139,-1.926299,7.357100,-4.241895,-1.479365,-6.943062,-6.801668,-4.852072,6.773317,-4.405783,-7.164828,-5.469680,7.169512,-4.008115,-0.668379,1.802141,-4.187757,7.512601,1.076701,-7.753045,-4.232576,-8.987730,-7.482160,-8.521596,-3.284363,7.330848,-3.805816,1.531909,-7.467956,5.820741,3.196184,-6.938746,-2.882655,1.727852,4.658919,5.578002,8.991356,-4.567904,-5.065324,3.174184,7.802810,4.746587,4.540064,-1.129955,3.336867,-9.700354,-3.715410,-3.762031,2.858841,9.716169,1.000763,-0.577189,-8.940988,7.794010,8.108703,-1.445764,3.115019,-0.229886,-8.007489,-3.622533,-9.974704,-9.472855,2.009155,-7.489026,5.059296,9.580254,-4.950536,4.374455,-1.174225,-4.575464,4.587726,8.646542,-7.899658,5.388448,-8.596867,-2.556160,4.082797,9.036396,3.995498,7.932643,5.444336,-4.565734,-0.364335,4.759601,-4.470041,-9.365655,-5.700316,-1.858610,6.596117,8.011422,0.342402,9.036648,7.171772,-0.329464,-0.999278,6.226266,-5.399901,8.020253,3.851174,-4.740446,-4.707726,8.238139,-7.681105,-4.332336,-2.142107,9.335047,7.944784,-7.504434,4.784386,-3.650861,-9.252890,-8.938351,3.490557,1.442434,-2.183611,-5.904193,-5.867644,8.358169,6.337738,-6.885520,3.909633,7.847903,-6.650827,7.019673,-3.139515,6.690029,8.696557,-9.363049,-9.108537,4.106503,2.280396,5.681213,-0.110472,-3.751469,-6.890907,5.615159,-9.007480,0.228329,-8.009729,-8.818394,-3.384461,5.848675,5.600845,-3.181859,2.976085,-0.190807,5.858058,-4.176732,-8.536349,6.257543,1.152521,0.666499,1.232988,3.136361,0.882814,1.459803,5.554612,-9.938127,-6.043601,-8.387542,-3.380235,-1.219145,4.213863,8.507289,9.553072,-2.600653,4.031281,-7.499290,-2.470641,-9.844718,2.917187,1.901058,-4.681730,-6.131994,-2.877335,-0.801649,9.790648,-4.409315,3.162603,1.645566,-3.883403,-6.079960,2.523737,6.935766,-9.121234,4.109780,4.661756,-6.408079,-2.262016,-2.860821,-1.304920,-9.233380,7.332690,-3.969796,-7.137033,7.849849,9.511749,4.125709,-2.604874,2.356614,-3.168209,-8.985411,0.573772,-0.171851,8.541015,1.532080,0.629437], dtype = "float64")#candidate|9305|(832,)|const|float64
call_9303 = relay.TupleGetItem(func_8033_call(relay.reshape(const_9304.astype('float64'), [64,]), relay.reshape(const_9305.astype('float64'), [832,]), ), 0)
call_9306 = relay.TupleGetItem(func_8037_call(relay.reshape(const_9304.astype('float64'), [64,]), relay.reshape(const_9305.astype('float64'), [832,]), ), 0)
output = relay.Tuple([call_9229,uop_9236,call_9303,const_9304,const_9305,])
output2 = relay.Tuple([call_9230,uop_9236,call_9306,const_9304,const_9305,])
func_9308 = relay.Function([var_9217,], output)
mod['func_9308'] = func_9308
mod = relay.transform.InferType()(mod)
var_9309 = relay.var("var_9309", dtype = "float32", shape = (8, 15, 6))#candidate|9309|(8, 15, 6)|var|float32
output = func_9308(var_9309)
func_9310 = relay.Function([var_9309], output)
mutated_mod['func_9310'] = func_9310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9314 = relay.var("var_9314", dtype = "float64", shape = (3, 8, 8))#candidate|9314|(3, 8, 8)|var|float64
uop_9315 = relay.atanh(var_9314.astype('float64')) # shape=(3, 8, 8)
func_4786_call = mod.get_global_var('func_4786')
func_4788_call = mutated_mod.get_global_var('func_4788')
call_9317 = relay.TupleGetItem(func_4786_call(), 0)
call_9318 = relay.TupleGetItem(func_4788_call(), 0)
func_4380_call = mod.get_global_var('func_4380')
func_4382_call = mutated_mod.get_global_var('func_4382')
call_9326 = relay.TupleGetItem(func_4380_call(), 0)
call_9327 = relay.TupleGetItem(func_4382_call(), 0)
func_4756_call = mod.get_global_var('func_4756')
func_4757_call = mutated_mod.get_global_var('func_4757')
call_9346 = func_4756_call()
call_9347 = func_4756_call()
output = relay.Tuple([uop_9315,call_9317,call_9326,call_9346,])
output2 = relay.Tuple([uop_9315,call_9318,call_9327,call_9347,])
func_9356 = relay.Function([var_9314,], output)
mod['func_9356'] = func_9356
mod = relay.transform.InferType()(mod)
var_9357 = relay.var("var_9357", dtype = "float64", shape = (3, 8, 8))#candidate|9357|(3, 8, 8)|var|float64
output = func_9356(var_9357)
func_9358 = relay.Function([var_9357], output)
mutated_mod['func_9358'] = func_9358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7901_call = mod.get_global_var('func_7901')
func_7902_call = mutated_mod.get_global_var('func_7902')
call_9520 = func_7901_call()
call_9521 = func_7901_call()
output = relay.Tuple([call_9520,])
output2 = relay.Tuple([call_9521,])
func_9537 = relay.Function([], output)
mod['func_9537'] = func_9537
mod = relay.transform.InferType()(mod)
mutated_mod['func_9537'] = func_9537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9537_call = mutated_mod.get_global_var('func_9537')
call_9538 = func_9537_call()
output = call_9538
func_9539 = relay.Function([], output)
mutated_mod['func_9539'] = func_9539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6990_call = mod.get_global_var('func_6990')
func_6992_call = mutated_mod.get_global_var('func_6992')
call_9589 = relay.TupleGetItem(func_6990_call(), 0)
call_9590 = relay.TupleGetItem(func_6992_call(), 0)
output = relay.Tuple([call_9589,])
output2 = relay.Tuple([call_9590,])
func_9594 = relay.Function([], output)
mod['func_9594'] = func_9594
mod = relay.transform.InferType()(mod)
mutated_mod['func_9594'] = func_9594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9594_call = mutated_mod.get_global_var('func_9594')
call_9595 = func_9594_call()
output = call_9595
func_9596 = relay.Function([], output)
mutated_mod['func_9596'] = func_9596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8068_call = mod.get_global_var('func_8068')
func_8070_call = mutated_mod.get_global_var('func_8070')
call_9739 = relay.TupleGetItem(func_8068_call(), 1)
call_9740 = relay.TupleGetItem(func_8070_call(), 1)
func_8033_call = mod.get_global_var('func_8033')
func_8037_call = mutated_mod.get_global_var('func_8037')
var_9755 = relay.var("var_9755", dtype = "float64", shape = (64,))#candidate|9755|(64,)|var|float64
const_9756 = relay.const([7.238145,-2.039052,-0.275880,3.681464,-0.516059,-9.018442,1.053589,2.122926,-3.451558,-2.555630,0.266898,-2.140808,-4.796411,-9.242993,-0.373997,0.887481,-4.551302,8.034689,-7.225989,-0.215047,-4.709564,-5.313338,2.072643,3.600158,-5.461580,7.010527,5.973673,-5.304042,6.830162,-0.821908,-9.855053,6.811090,9.046009,9.970821,-3.294162,-0.543077,-9.771396,-3.145605,-2.829393,5.845539,-2.920479,-4.084534,-0.582545,3.987752,3.917010,6.855985,0.504094,-0.739088,9.226087,3.682370,1.344330,3.367409,-9.248956,4.957489,1.864995,0.740865,-7.903082,-5.496641,-5.321844,-8.694395,6.448104,9.403995,7.921646,8.024607,6.512856,-1.994231,7.615244,2.992314,9.038367,-1.364812,9.344261,-1.163678,-2.799532,5.141282,1.037777,-7.829953,8.528827,8.990943,-3.272190,-1.727103,4.630434,-8.122575,-8.087582,-9.106571,9.795705,-6.775071,8.719389,-9.138936,4.333188,-5.795706,6.492261,4.119309,8.058188,5.934248,-9.987111,7.194721,-8.162862,-1.567529,7.374990,4.134850,8.845241,-9.689647,-9.201455,-6.213018,-4.719068,-7.501105,-2.991403,-1.921872,3.090418,3.392865,1.642733,1.963022,-7.852185,-5.571108,3.649626,-6.988554,-7.147445,5.702869,8.459252,-4.259405,-9.527937,-7.930653,6.038285,-4.120511,-2.711701,-0.431255,9.038096,-5.683920,4.913049,1.505312,-1.477218,7.998278,-2.541287,8.054510,9.200236,1.786666,5.151573,-9.548275,4.156565,7.982952,-3.476915,9.853802,5.274992,8.218449,1.208694,7.372456,1.929224,-2.084034,8.895429,4.958236,6.686877,3.342948,-2.450705,6.106505,-2.970418,-9.616149,-8.476297,-2.851777,2.805844,-2.629882,1.374904,-0.357007,7.693430,-2.235295,-5.889507,5.129763,3.748968,-0.869315,-4.501967,8.610572,-6.169552,4.540565,9.302903,7.150949,5.347603,8.797698,2.033093,8.721218,-1.831871,-0.331596,-1.074539,0.744074,-6.855150,1.666390,7.139973,5.468545,-2.983210,2.256562,9.378254,-7.500772,-9.677339,8.101990,6.682064,-7.518603,-6.551856,3.076753,-3.276984,-8.509517,-6.295767,7.315827,-5.877704,-3.421215,0.687425,6.629624,-9.346589,-0.151001,6.641675,-6.749713,-8.382782,9.800108,7.201492,1.285673,9.784412,-2.405260,-5.350334,1.063626,5.904472,4.501336,6.560859,9.521552,0.669750,9.434138,5.475586,1.546303,-3.454985,-1.720181,7.239295,-0.056017,-9.050558,3.948636,-1.740489,8.002950,-4.930003,5.552403,4.867843,8.223411,-0.359075,-1.528496,-8.296589,0.072797,-7.751046,2.821714,-5.236089,-4.464118,-8.149648,7.602674,-1.813304,-9.655508,7.688059,5.138722,-7.292671,9.690687,1.054847,-6.082405,-8.469990,-3.198291,-1.382484,-5.780673,3.606355,8.900121,-9.139162,5.394928,5.069763,1.211547,0.050999,-5.295518,4.459068,-3.142672,9.640876,0.859054,-0.745075,-8.081628,6.505650,0.530065,7.366360,-1.074005,4.556680,-4.939216,-0.527947,-5.460617,-5.536501,7.282921,-1.639473,-3.908120,0.433356,4.956727,-1.490071,-3.092918,4.593204,-7.294682,-6.532748,-7.271243,-5.365456,-4.121937,9.997115,-2.073124,1.144485,1.892108,3.543033,3.310591,8.984986,5.000702,-5.944095,2.435560,2.647742,-7.268087,5.825638,-8.325980,-2.725916,-1.422823,8.008177,5.084077,-8.107009,-8.598344,4.432091,-4.757195,8.839334,-7.634533,8.202442,8.333038,2.846577,-8.547187,-2.539365,0.779829,-3.852588,-3.978981,-8.792978,-4.985609,3.834587,9.603791,9.977111,7.329318,8.690718,-4.059454,-2.086347,8.661433,-1.744072,-0.789506,-1.489613,2.962804,3.657549,-5.474918,9.209535,-1.609159,-5.862366,9.490221,-6.898904,-3.109556,-6.661589,-6.731937,-7.505922,1.691911,-0.011205,3.970718,2.482475,7.114492,4.718502,-1.360939,-9.899927,7.242695,-0.307537,-4.715637,4.594470,-8.550547,-9.102666,-9.109622,9.371656,4.750262,7.347875,-0.269714,6.581669,4.857886,-0.739058,9.887702,8.527562,1.995289,-2.704050,-2.032665,-9.725955,6.210684,1.351753,8.295195,2.923732,-9.322702,4.006861,3.826497,-0.676095,0.253133,9.719291,-0.095523,3.850177,-5.101490,6.260581,-7.194041,-1.085097,-9.384537,9.370465,-9.436240,-3.054931,-0.203631,5.393905,-1.307662,-4.508210,-1.271065,6.076658,-5.567378,-9.481860,-7.482399,0.587213,6.052436,-6.697814,-5.168018,2.996342,9.226269,5.934453,-2.719995,4.205431,2.923607,-9.972324,3.009476,-3.849167,9.510183,8.343224,-6.696116,-9.835966,-3.663737,-5.232083,-2.139474,1.121264,2.245893,8.679514,8.239004,4.608417,5.063168,6.503055,0.991183,-8.653660,-3.128981,-2.694312,8.917336,0.358193,1.453811,-2.945639,8.605225,5.196986,-8.501794,-8.964175,-4.598264,-7.061687,-4.976912,-5.850677,5.853044,-6.657662,-6.097028,2.826461,1.472745,7.293585,-8.635094,-3.325799,2.336886,-8.515069,2.314918,-4.366080,-0.180035,3.051727,-8.884533,-1.843578,-7.047549,9.792191,5.142630,-3.569102,1.588036,-5.690285,4.217648,-3.351663,-1.680565,5.997358,7.550764,1.351506,-1.982125,-8.199322,0.721564,2.247589,1.621427,-8.397189,1.156284,0.085491,3.465293,-5.586065,9.738101,9.981362,7.191181,3.811861,-8.479797,6.751241,0.908791,6.258014,-5.540599,-5.886955,-0.758478,6.398181,-8.763467,-4.513680,-8.785877,-7.461444,8.402697,7.226395,-2.180092,-5.742115,-1.709485,-7.407037,4.006165,-8.319698,-9.345201,-6.338287,6.346840,-4.241336,-4.074826,1.095099,3.551571,-0.352112,-3.589632,6.670950,-4.433317,7.356145,0.903118,-0.239614,-0.325258,2.164937,-0.205704,0.529271,6.850875,4.250172,-8.738689,-2.871071,-1.542339,6.345644,-1.598101,-9.044672,-1.919233,5.195144,7.063463,-1.867581,-3.575689,-5.703607,0.399969,8.456148,1.720377,7.646705,8.683688,5.130990,-9.855588,-9.656751,2.482141,-6.210213,9.926753,-3.822165,6.187576,-9.487823,-5.730430,-2.379176,-3.136456,-3.047267,-8.486858,1.769688,0.602999,-5.904823,5.218791,-8.288394,1.381826,-1.442890,5.358030,2.049295,-5.979950,-4.704591,-7.754465,-3.283357,-9.865760,-3.565016,-9.805401,4.344859,-2.692086,-8.134097,-9.173973,-2.092624,9.526111,-0.373189,4.507777,6.748965,6.988100,-1.026726,3.282858,-4.338003,6.977206,-5.206188,1.261021,4.379661,7.252145,3.039875,7.081376,8.043391,0.007350,5.032017,8.908667,-2.927533,-4.949149,-6.729583,7.397533,-7.878291,3.650082,0.733075,-3.892154,-5.080394,-7.254039,5.226392,-8.706223,-0.513717,8.267799,-2.398116,-9.537940,0.109608,-8.953712,-9.791518,8.020532,-5.613812,-7.677137,4.752784,6.365025,-6.946571,5.680306,5.889427,7.441745,0.236813,3.209327,5.261288,-1.213408,-2.483138,5.943108,3.039688,3.655742,7.891453,4.707715,-3.174356,5.792330,-7.312281,2.952847,-4.024184,5.697986,9.241686,4.379956,-9.089726,3.496450,-7.685704,-9.528198,3.025577,-4.406645,4.441467,7.563483,-4.772094,-3.205048,-3.974167,-6.453946,-3.541131,-5.646271,-5.227021,3.679246,-4.222488,4.484849,9.534131,-9.921531,-4.721674,6.934794,-1.264422,2.870432,4.439625,6.511438,8.163373,-7.229622,0.426741,0.699105,4.835415,-1.578537,-9.582321,-0.166761,9.798754,-4.699371,8.648778,9.324972,4.901480,-1.148280,2.265292,-8.076584,0.266404,-5.158408,5.089393,-2.133275,-4.201165,-9.850063,1.740251,-0.935892,7.616419,-1.425079,9.146277,-2.279201,-0.936858,0.841971,-0.683309,4.129948,0.698098,-6.125360,6.008465,2.187402,-5.655491,-9.192763,-6.461915,-3.313980,-9.918765,3.551651,7.781138,-4.487834,-6.131222,4.822876,6.243374,9.240521,-3.723223,3.754768,-8.911469,-2.732049,5.341452,-5.902671,3.499603,4.171004,1.327635,7.116064,2.942204,6.777622,-0.380102,-3.620016,3.242452,-8.689154,-6.119175,5.173235,-1.391603,5.227067,9.998891,8.888633,-9.291420,-5.486638,8.630702,-3.829785,4.927057,5.405395,-8.238303,8.552322,0.890960,-0.339862,8.766842,-8.464812,1.479459,0.257657,-8.295963,9.207861,-8.061286,-5.783221,-0.050137,-6.425205,-7.783800,9.046701,9.345505,-7.497255,-5.260651,-3.830960,8.747925,1.105967,-8.772097,5.574182,7.461356,-6.278328,-9.903146,-2.568353,7.394304,-1.567694,-3.668550,7.331852,-1.509429,-2.151042,-3.444853,-1.923738,4.815462,-5.965647,4.862932,-0.818131,-0.229719,-7.213948,-3.558633,0.254469,2.381736,6.066587,5.134021,9.571945,2.884813,-7.295500,1.545588,9.237386,-2.156091,-6.307662,0.433712,0.290104,0.005856,-6.135572,-2.547463,-3.809408,3.429413,6.485725,-6.700387,-3.560561,-1.465300,9.313732,8.765014,-0.801981,-1.683083,6.449986,-2.505259,5.002635,-4.965507,8.372896,-3.571438,-2.044213,1.948767,-6.696516,1.026958,9.253720], dtype = "float64")#candidate|9756|(832,)|const|float64
call_9754 = relay.TupleGetItem(func_8033_call(relay.reshape(var_9755.astype('float64'), [64,]), relay.reshape(const_9756.astype('float64'), [832,]), ), 0)
call_9757 = relay.TupleGetItem(func_8037_call(relay.reshape(var_9755.astype('float64'), [64,]), relay.reshape(const_9756.astype('float64'), [832,]), ), 0)
func_2527_call = mod.get_global_var('func_2527')
func_2530_call = mutated_mod.get_global_var('func_2530')
const_9763 = relay.const([8,-2,-4,-8,7,8,1,8,-9,-7,3,-7,6,-10,-1,-2,4,4,8,8,-9,-1,-6,-6,-1,1,-6,9,-4,-8,7,6,5,7,1,1,4,2,-10,-6,3,5,8,9,2,-8,1,-10,3,10,-5,-4,4,8,6,4,-1,-7,4,2,-5,-5,-4,3,-4,-3,-5,-7,-5,-4,1,8,-9,-3,-3,1,7,6,-10,-3,3,3,-3,8,9,8,-2,-4,-3,5,5,-8,1,6,-5,8,-4,-10,3,-4,-2,4,1,6,-8,4,9,6,7,3,-2,4,4,-1,-1,-1,9,6,5,6,3,7,-3,3,-6,4,9,-1,1,2,-1,5,-10,10,1,1,7,7,10,9,-6,3,2,-8,8,-5,3,-8,10,-8,-5,6,-6,1,-3,-1,5,4,-8,10,-10,-4,4,-6,2,-7,3,-1,6,-7,4,8,2,9,-2,-9,-4,7,-6,2,7,5,3,-10,-9,10,5,-5,1,10,-2,8,-1,-4,6,-5,5,4,5,9,-1,7,8,-4,3,2,10,-1,-5,-7,1,5,-1,6,-4,-2,-3,-10,1,9,7,-1,-1,9,-7,6,-8,6,1,7,-6,-8,-2,-1,4,8,1,-10,4,-8,-6,3,-5,-3,-2,2,3,-8,-10,-7,10,8,9,-6,9,-5,6,9,8,10,6,7,-1,4,5,8,9,9,-7,-10,-6,-1,5,-6,4,1,7,9,5,1,-5,5,8,9,-10,-2,-5,1,-5,-3,2,-8,3,8,3,6,-10,-1,9,-2,8,-3,6,-3,10,1,9,2,-9,8,2,1,8,-8,1,-4,-5,1,3,-4,7,7,-7,8,3,-9,1,-5,-9,6,5,10,-8,-3,5,6,-3,10,3,-7,3,1,5,4,1,5,-1,7,-5,10,10,-2,10,4,-9,10,-6,-7,-9,6,-1,7,5,1,6,8,9,10,1,3,-6,9,3,2,8,-1,8,-1,4,1,-5,-8,8,-2,-6,6,-7,6,4,4,-6,1,3,-7,3,-8,6,3,-8,4,1,7,-8,1,-1,-1,8,-10,-3,-9,-6,9,5,-9,-8,-8,-4,10,-6,-3,-4,3,-8,4,-2,10,-9,2,-10,8,4,10,9,-8,-10,1,5,9,-6,5,-7,-6,3,-2,-8,4,6,-8,5,-9,6,1,1,5,5,7,-4,-8,-2,-3,-3,-2,2,-4,-7,1,3,7,4,-5,-1,-10,-5,5,1,8,6,2,2,-2,-1,6,-5,-9,-4,-7,-7,3,5,9,-7,-7,9,-2,5,3,7,9,-2,-2,-5,5,-3,-5,-8,2,5,2,-1,8,8,-4,-1,-8,3,1,-6,3,-7,-10,5,4,-3,6,1,-2,3,4,8,9,10,1,-6,-9,-3,8,1,9,-8,-2,7,6,1,-6,-1,-2,2,-1,10,-1,-9,10,-1,-7,-4,-8,4,-2,5,6,2,-1,1,-5,1,3,-5,9,-4,6,7,8,1,6,8,6,-8,-4,-6,-2,-3,7,10,7,-4,1,-9,3,-10,10,1,-6,10,9,-9,4,-8,1,9,-1,10,-4,-2,3,-8,-10,6,7,9,1,-9,-9,6,-2,-9,7,6,10,-2,1,-3,-6,-10,6,-1,5,-4,4,8,4,-10,7,-4,-3,2,-6,-7,-6,5,4,9,-5,-8,2,4,1,6,-9,7,-7,-6,-3,-5,-9,1,8,5,-2,4,-8,7,-4,9,5,5,-4,5,5,-8,-2,-2,-8,6,1,-1,10,-8,3,6,-3,2,-6,-7,-8,-7,-4,3,-5,10,-10,-5,-3,5,-10,5,-3,-3,1,10,-4,2,-6,-10,5,-9,2,-5,6,-10,10,10,-10,2,4,3,-1,-8,9,9,7,-6,3,2,1,6,7,7,-10,1,3,3,-8,-2,-6,-10,1,2,9,-3,-7,-4,-6,4,-1,9,-8,9,-3,6,4,-4,3,-10,3,-5,-4,-7,-1,6,5,-8,-10,-2,8,4,-3,8,6,8,-3,10,-3,8,5,8,1,-4,2,4,1,3,-8,-9,1,4,2,5,-10,-1,-9,6,4,-1,-3,8,2,-9,2,-5,-5,1,2,3,9,6,5,-7,9,7,2,-9,5,-7,3,-4,-10,6,-10,-1,-4,-8,8,-10,-5,10,-2,-6,-4,-8,4,7,-8,5,3,9,-4,8,4,8,9,-7,-4,10,5,-6,1,-4,-6,6,-6,9,-2,1,-7,5,6,6,6,-9,-5,1,-10,-2,-3,-8,-3,-8,-3,1,9,-5,2,6,-7,-1,2,6,-7,10,7,9,-4,5,8,-7,-5,-2,4,-7,3,-5,9,6,-2,-8,-6,-8,-5,-8,-2,10,7,-4,-9,4,-8,6,-10,5,-3,-2,-7,-7,-5,5,-10,-5,-8,8,8,1,10,-5,-4,-4,-1,-3,-9,3,7,-1,5,-4,3,-2,3,-10,3,-5,4,-3,6,-5,8,8,8,-10,7,7,5,2,-5,3,8,6,-7,-8,4,-9,3,-6,9,3,-2,-6,2,-5,2,6,5,-3,10,5,-5,4,4,-9,6,8,4,4,-6,6,6,10,-3,-4,-4,-5,-3,-9,9,-9,1,4,3,-5,7,-7,-3,-4,9,9,7,2,-5,7,10,10,5,-9,1,5,5,-3,-6,5,7,9,-10,-5,4,8,10,-7,3,3,-2,-4,-8,-7,5,4,-8,7,-5,-2,6,3,1,3,8,9,-2,-6,1,-9,-5,-10,5,10,2,9,5,6,-3,-9,-2,-8,-3,-9,8,-3,-10,-6,2,4,-10,-2,4,9,4,10,-8,4,-5,-6,-10,5,-1,4,-9,-9,-9,1,8,5,-10,10,3,9,-7,-10,5,-5,-8,-2,-5,-5,-10,2,-8,2,9,-8,-7,10,-6,-9,8,7,-4,5,8,6,6,-7,-4,-6,2,5,3,-3,6,9,-7,9,5,-3,-4,2,8,6,-10,-4,8,-2,-7,-1,-9,6,-7,9,9,-7,-10,4,-10,-7,5,-3,-5,4,-1,2,5,8,-4,-4,-9,-5,9,5,2,-10,-7,7,-9,1,-6,-2,2,-3,-6,-9,-9,4,-6,7,-4,2,-9,1,-2,8,9,10,-1,-10,-3,4,5,-8,-8,8,10,-3,-1,-7,-9,4,8,-1,-1,7,-10,-4,10,6,6,10,-6,-7,9,3,-2,8,-2,-6,-2,5,-4,6,2,4,8,6,-8,2,-8,9,-1,-7,-8,6,-7,-1,-1,-7,-1,-10,6,4,10,3,-8,-7,9,-1,-10,6,-7,8,-4,-10,-7,-5,-6,-9,4,6,4,2,-9,10,-10,-7,-5,-7,-2,-5,7,4,-10,2,2,-5,-1,-10,10,10,-8,8,-1,-4,2,-4,1,4,8,5,-4,-8,9,-5,-10,10,-1,-3,3,-5,-9,6,6,3,-6,6,3,6,2,3,-8,3,-1,-2,-6,-9,-8,6,5,-8,10,-2,7,-6,-1,4,2,-7,-4,7,-7,-6,3,7,-3,-10,10,-5,2,-8,8,10,-1,-5,7,-6,2,7,6,-5,10,2,-9,-9,-8,-4,10,8,-3,6,-7,-4,6,4,9,1,-5,9,9,5,-4,-4,2,-8,5,5,-8,-8,-2,6,-2,-1,9,-2,-10,4,7,10,9,4,-2,5,10,4,-6,5,7,-8,6,7,-9,9,10,-5,7,-5,10,9,-3,-4,-3,-8,5,-9,6,-8,-6,10,8,4,-7,-4,-9,9,-6,-3,-3,1,7,-10,5,-9,-7,-6,-4,-10,-1,10,-1,-2,-3,8,-5,6,9,6,-6,-5,-6,7,5,-3,-6,-6,1,4,2,1,-10,-1,5,-3,4,3,10,10,-9,-2,5,2,8,1,7,-9,-9,6,-8,4,-8,4,8,5,-8,-2,7,-10,-7,4,4,-1,-4,6,7,-7,-8,-2,4,4,4,-6,8,-5,8,-1,7,-7,10,-4,-5,1,-10,10,2,-8,9,-9,-10,4,-8,-2,10,5,-3,8,-9,-3,-3,7,-6,6,-6,2,3,-6,4,5,7,3,-10,10,-9,-2,-6,10,1,9,2,3,-1,6,7,7,-1,4,9,-3,-6,1,-4,-8,-8,2,8,5,6,-5,3,9,-2,7,6,2,-7,-8,5,-5,10,-4,7,-10,-1,8,-8,-9,-9,-4,10,-10,8,-7,-1,7,-4,-4,10,-5,-10,6,1,8,4,6,-5,-1,4,7,2,1,-5,-6,8,8,6,5,9,-7,5,-5,2,5,-3,5,6,-3,8,6,3,-7,-7,-4,6,-9,7,-1,-1,-6,9,-2,-7,6,6,-5,-7,6,5,-2,3,1,-9,-8,-1,7,-8,-6,5,2,5,10,8,-8,6,-3,5,-9,-10,-7,5,-2,-4,-10,2,10,-9,-1,-6,1,1,3,2,2,-2,3,-2,10,5,5,-4,-5,5,2,-7,5,7,-5,1,10,-8,-1,-10,-6,-3,-4,-4,-9,-7,10,4,-3,5,-9,-7,10,-2,6,1,10,-1,-10,5,5,10,7,3,4,-10,-4,4,2,4,9,-8,-9,5,-5,1,-6,7,7,-5,-10,6,2,8,5,2,7,-4,8,-6,-2,2,7,1,-1,-5,-1,-5,-10,-7,-4,10,8,8,5,-10,8,-5,3,-9,2,3,6,6,-10,-2,1,-6,5,-6,5,-5,8,-9,6,5,-3,-1,6,-6,10,1,-9,-2,-10,-3,6,9,8,7,8,-3,-10,-2,2,3,6,-5,2,7,8,8,-10,8,-4,3,6,-3,-10,5,2,4,-3,-5,8,8,4,2,2,1,6,10,-1,10,-9,-5,-4,-1,10,1,-7,-6,4,2,-9,-6,10,8,-8,-5,5,7,9,-6,3,-6,8,-9,1,10,8,-6,-1,-10,-7,7,-4,-1,2,9,7,-4,-1,-9,6,-4,-5,-3,-9,7,-9,-7,-9,-4,-6,-8,2,7,-7,-6,6,-9,2,-1,-8,-6,3,10,2,6,-8,-2,-6,-2,7,-10,-9,6,-5,-4,-7,10,6,5,3,-7,-4,1,-7,-7,-2,7,-5,5,-2,-3,-1,-1,10,-6,-5,-3,-9,-3,7,3,4,-1,5,-1,6,7,6,6,-2,-8,-3,-10,-5,-3,10,2,-5,6,-10,6,10,5,9,-1,-4,-2,10,-3,4,7,-1,-9,-3,-6,-10,1,4,-6,-9,-8,6,4,-1,-10,5,8,-8,4,-1,-4,-1,-1,-3,1,-3,-9,-8,-4,-9,3,-6,2,7,-5,6,-9,6,-3,-8,3,3,2,-4,-8,3,-9,-2,2,8,-8,-9,-3,-9,-6,-1,10,-2,5,1,10,-7,-4,1,8,5,4,-3,1,-5,10,-9,-10,-3,8,10,-9,-7,4,8,9,-10,-7,2,-6,6,-3,-4,-5,-9,2,-1,4,1,9,-2,3,3,-6,10,2,-5,3,9,8,-3,5,1,-3,1,-2,-10,4,8,8,1,-8,-4,-6,10,-1,6,8,-7,-2,3,-1,10,8,-7,-8,6,-3,-6,5,6,-9,-2,-2,10,-9,-7,-7,8,-6,2,3,1,-10,6,-3,9,-7,-10,2,-2,-4,1,-5,-7,-4,-7,6,-3,-5,2,-3,3,-2,8,5,-2,8,-10,-2,6,-5,1,10,-10,2,6,-10,5,2,-5,3,5,3,-6,4,9,4,-3,-5,-3,2,2,6,6,-1,6,10,-7,9,-8,-3,2,-8,-6,-7,-9,6,-3,-1,2,-9,7,-2,-4,6,-5,8,10,2,10,3,-8,-3,1,9,-5,2,10,8,6,-6,5,-10,-10,9,4,9,10,3,5,5,-10,6,4,6,8,-2,-5,-7,5,-7,9,10,-10,-3,3,-7,-8,7,-6,1,-4,-6,3,6,-1,-8,-8,2,-9,3,4,9,4,1,8,2,2,2,1,-5,10,-3,-2,-8,-9,-5,2,2,-1,-6,6,2,7,-5,-10,1,6,10,-8,-8,-9,7,-8,-9,-5,-7,-4,8,3,-10,-6,4,-4,7,-1,6,-10,3,-5,7,7,8,5,3,-1,-10,3,-6,-8,-8,10,1,8,-7,6,2,2,-5,7,-4,2,-3,9,9,-6,6,-10,5,-1,-2,8,10,-5,4,6,8,3,-10,-5,-2,7,-7,7,6,4,-4,-1,10,-3,8,4,5,1,4,6,7,3,10,-5,7,4,2,8,-3,-6,-10,9,2,3,-6,-9,10,-6,-10,-7,-10,8,8,4,9,-4,-2,6,-5,-9,6,3,-10,8,-1,6,-8,3,-2,-9,7,-10,8,-5,3,-3,2,4,-6,9,-7,-9,1,3,9,4,5,6,-10,-6,3,-1,-5,6,-9,-9,1,-3,9,6,8,-3,2,8,-8,-4,-4,-7,-1,-10,-5,-9,4,1,-8,1,-4,8,-2,9,-9,-3,9,-1,1,1,8,-4,-3,-8,-9,4,-3,-3,-9,5,5,-10,-7,5,2,-6,7,7,-5,1,-3,-9,-7,1,5,3,-5,-6,-4,2,8,-10,-6,-7,1,-6,2,3,10,-3,-2,-8,-9,-1,7,3,-9,-4,-10,-7,8,-7,3,-8,-6,9,-9,-6,3,-5,1,8,1,-9,3,-1,-1,1,-10,6,-2,-3,6,-1,-9,9,-2,-1,1,3,-8,-6,5,-3,-4,1,8,7,5,2,4,-5,-10,-1,-8,6,-9,5,10,8,-10,2,-5,1,8,-6,-5,-1,9,8,4,-3,8,8,-7,4,5,5,-6,10,10,-6,-6,9,-9,-3,3,-10,6,-9,-4,2,8,9,-4,7,6,-8,-10,-10,-6,-4,10,1,1,9,-2,5,8,3,-5,-7,-4,5,-2,5,-7,6,-4,-3,7,-10,-5,-1,9,7,4,6,9,-4,-6,8,9,-3,2,-7,10,-2,-2,-9,6,-6,-10,-10,6,9,-2,-9,10,3,-8,5,-10,4,-9,-7,-9,-7,7,-7,1,7,10,4,8,5,10,5,-4,-3,1,8,-5,8,-2,7,8,9,-9,-1,-10,4,-4,-1,-7,-1,-6,-8,-4,1,3,1,1,1,-1,-9,-9,-3,2,-1,-10,-7,1,-5,4,-3,5,8,4,-8,-4,-7,9,-3,-6,10,-7,10,4,5,3,-7,-9,-4,6,7,-8,10,6,10,10,-8,9,-8,-3,-5,8,5,-8,-10,1,-4,-6,6,-10,4,8,-10,1,-10,-1,-3,6,6,-6,-8,-8,4,7,-5,-8,-10,2,3,-9,10,-7,-7,-10,7,-3,-1,-5,4,8,-2,10,-3,3,-6,9,10,-10,9,2,-7,10,6,4,-9,1,1,3,-4,9,9,-7,-6,-8,8,-2,6,3,-5,-6,-1,8,-6,5,-9,9,4,9,-4,6,10,7,8,-2,8,9,-2,-1,-8,-8,3,-7,3,7,-6,9,1,-3,-7,3,-2,-7,1,-5,-6,-8,-10,4,-2,1,5,5,6,-6,5,-8,-4,-3,3,-4,1,-8,8,4,-4,-9,5,-7,-3,3,2,5,6,-1,-8,-10,8,9,9,-7,6,-3,9,1,-1,-10,-6,9,4,3,-6,10,8,-9,3,-9,1,10,-2,-3,-7,-7], dtype = "int64")#candidate|9763|(2880,)|const|int64
call_9762 = relay.TupleGetItem(func_2527_call(relay.reshape(const_9763.astype('int64'), [12, 16, 15]), relay.reshape(const_9763.astype('int64'), [12, 16, 15]), ), 0)
call_9764 = relay.TupleGetItem(func_2530_call(relay.reshape(const_9763.astype('int64'), [12, 16, 15]), relay.reshape(const_9763.astype('int64'), [12, 16, 15]), ), 0)
func_2148_call = mod.get_global_var('func_2148')
func_2154_call = mutated_mod.get_global_var('func_2154')
var_9778 = relay.var("var_9778", dtype = "float32", shape = (4, 56))#candidate|9778|(4, 56)|var|float32
var_9779 = relay.var("var_9779", dtype = "float64", shape = (720,))#candidate|9779|(720,)|var|float64
const_9780 = relay.const([-3.436159,-6.704163,7.756411,-6.540236,-5.457410,0.753648,4.061697,-8.898425,0.037540,-8.847358,1.512830,-9.909018,5.220964,-5.916879,7.422117,-6.798713,2.868231,-2.644113,-6.760269,5.013098,-9.500805,-8.612282,-0.910029,0.621015,0.643855,-5.133746,-5.214388,0.159120,-5.400444,2.542995,8.085711,4.944975,-6.805176,8.247199,-8.262816,9.044107,-4.544840,-7.493517,-7.892968,-9.512633,7.060353,-7.311250,8.336081,2.765305,9.514577,9.432133,-1.229696,3.987292,-7.976650,-8.156535,4.074982,4.393622,4.943207,3.948307,7.360353,-9.667792,-1.550747,5.544345,-9.258395,2.357770,8.093712,-5.379779,2.930261,-1.111961,-0.409614,-0.787635,-0.252612,9.309240,-0.362455,9.547185,-2.809853,-8.035640,2.674350,-5.192074,4.411930,7.529941,-7.574356,-9.984842,-0.870989,6.751379,9.381391,-9.540001,-6.664614,-5.336064,-8.848589,-3.474586,5.045405,4.419262,-4.048528,-0.133716,9.562028,-2.459849,7.433903,4.496772,8.427253,-3.569034,4.608158,-7.762817,3.767120,-8.695980,4.417594,-1.602557,6.412941,7.646759,-8.727044,3.567374,5.066692,6.552634,3.354403,-9.458583,-2.762733,8.883958,-2.768573,8.062392,-8.162682,2.319598,-2.393569,-4.894797,-5.958411,-3.596529,5.966306,-2.012697,7.392865,1.805602,3.312486,-6.244107,6.567925,1.758574,7.502296,3.829080,-9.500886,0.607363,-1.580324,-9.336455,1.457412,3.684682,9.771022,-2.533223,-6.780625,1.852455,3.654116,7.668379,9.324268,-9.085763,8.713085,6.590383,4.612966,-0.844947,-9.550836,-1.580394,4.589854,7.338664,8.661356,-2.206688,1.509384,4.104284,9.045257,7.317374,3.471755,0.815477,6.971140,-3.653255,-0.563597,4.308413,-5.417583,-5.675857,7.907714,-0.467827,4.931108,-8.265201,-3.911533,-0.536521,-2.637983,-2.849887,6.027826,-0.277745,-4.143410,2.837738,-8.761440,-3.614929,-2.013978,-3.819718,-8.819959,6.546784,7.526937,-4.041968,9.548527,2.672792,0.104421,-1.485975,-9.959862,1.047403,1.817854,2.110868,9.059903,-0.857146,-2.799345,-2.726650,9.471542,1.628625,8.903829,-8.579425,-2.416328,5.706735,-9.898243,-5.094237,-9.060241,9.112307,6.780979,0.583651,-0.831768,-3.630129,1.873334,4.307254,-3.714026,0.911135,1.430733,0.882688,-9.663490,4.608417,-0.466816,9.666011,2.836048,-1.409344,9.996166,-0.265463,-2.675053,-7.839848,3.914357,-2.521310,-1.399067,7.408387,-9.802944,0.602801,9.466893,7.304097,4.165011,6.737763,2.044449,2.943833,3.928642,5.385214,-4.560389,2.353257,9.324528,-2.113062,-1.811455,8.841548,-5.103214,5.985524,2.668155,3.402627,2.446991,-0.836166,-5.715837,5.596511,3.214406,5.617278,-5.765886,0.068928,1.063830,-7.546704,7.224323,-0.257497,-6.296391,-3.363772,-5.755358,-4.127900,-1.360865,-2.895072,-4.162889,-6.899134,-4.201397,-8.379824,5.787471,0.183215,8.291609,-2.564401,9.328960,-0.359575,-5.513484,-7.111985,-6.979569,-4.336044,3.533028,2.070066,-7.678289,1.416207,-7.871650,0.567747,3.597411,-1.738266,-0.329436,0.099927,1.017112,-9.716314,-3.156092,-4.571922,4.609315,6.261818,2.894462,9.425837,7.968813,1.682677,-1.971762,1.925844,9.422252,-6.702506,-7.802363,3.065292,2.369753,2.462950,-5.994904,-8.509173,-9.139989,-1.486135,-6.110884,4.316539,-9.196443,3.074525,9.066070,-1.628489,-2.278497,3.404597,0.186017,-9.944205,-2.176748,-6.002404,1.668198,-6.253293,0.235113,-5.009883,-8.945615,4.993867,-6.978770,6.011496,8.694182,-4.078136,-7.470906,-0.286410,-0.150709,-9.612214,-0.761086,-2.325096,6.327651,2.978231,9.675449,7.188381,7.668819,9.327983,1.425590,0.534756,-1.805683,1.748424,8.402891,-5.361022,-8.105365,-8.675445,-0.804758,6.835723,-9.030981,-4.030266,-1.597673,5.091128,-2.402841,4.222944,-1.857998,-9.437711,-7.239522,0.221486,6.099402,4.380131,4.021476,-1.103947,-7.022878,1.998807,-4.943540,5.824672,2.123566,-4.565138,8.881039,-6.686729,-3.102089,-8.268507,-8.568143,7.685359,-2.636229,5.275818,-9.035369,9.937193,3.703364,3.438626,-9.763702,-1.690382,-7.967704,0.169055,-8.000162,3.134336,-8.601709,1.675345,8.543111,-3.065898,-8.903119,8.034540,6.557659,7.596266,-1.102827,-4.851087,1.277724,-5.673869,9.713505,3.689238,4.880324,-1.264769,9.014786,-3.530133,-3.745646,-0.516225,2.567786,-8.448830,-1.835499,8.552553,-5.741329,3.982150,4.678091,3.485188,1.540886,-1.779209,8.908871,-9.020515,1.048267,-5.682774,5.435268,-0.264908,-9.399956,6.023216,-4.566990,1.899445,-1.913201,5.561286,0.518712,-3.665931,2.236455,2.544153,5.602520,5.470723,3.072839,8.349765,-7.119200,7.927307,-6.736430,0.112171,5.278692,7.532304,0.571529,3.625207,-1.190788,3.490274,8.218144,-5.079661,-1.616048,5.819990,4.320628,-4.847751,-0.483192,1.852748,-1.630730,8.313600,1.820948,5.048446,4.659473,4.425598,-4.904881,-1.459541,-5.559645,6.288259,-6.180353,-1.991086,3.406192,-8.632136,-8.524234,-5.066496,-7.792029,-8.441553,-3.211620,1.062537,4.841581,8.596375,9.407692,0.338598,5.308233,5.867731,2.333876,9.324004,-4.282307,-3.262757,1.515699,-8.244942,-9.105090,-3.562070,-2.252051,5.314657,-0.174932,-9.142083,-8.506520,3.634203,-6.515818,2.501714,-6.545171,-1.282990,-9.995986,8.975605,8.459412,-5.411602,0.587446,-4.682239,-6.250241,6.301275,6.456080,-7.116232,5.859686,1.453773,-4.903559,4.298917,6.470530,-5.610695,-3.909632,-3.279010,7.920653,6.589283,7.681169,-2.344091,7.462755,-6.144585,8.205775,-7.636913,6.664276,-8.690549,3.327061,-4.590441], dtype = "float64")#candidate|9780|(540,)|const|float64
const_9781 = relay.const([7.565396,6.584271,5.950772,7.004120,9.208827,-5.626477,9.082854,2.782946,-0.674917,8.316674,9.966523,2.051732,2.454670,3.616146,-7.617620,-8.704595,-0.609218,-9.134659,-7.809515,-2.867861,-2.327357,0.468414,-9.037278,-1.544569,-7.047175,-2.771814,-3.087714,-2.139957,3.836794,-1.848234,-5.031379,3.302255,4.054089,-8.170180,6.349002,4.335315,-4.947739,5.184441,1.426205,4.003788,9.281752,5.174641,4.417312,3.170871,4.158928,2.201835,-9.959447,7.433358,-1.248805,-6.074392,-7.095527,0.015339,-2.520131,7.898392,6.214463,3.213763,-3.574339,-8.167056,4.109925,1.682426,6.470145,-3.360474,7.558611,9.024849,7.972235,-8.504899,6.714797,-9.132015,-3.843720,0.973258,-1.380748,5.851550,5.763355,9.234207,1.421177,-0.993192,9.212478,3.648443,-5.293611,-2.096709,-8.087997,0.432738,4.139050,1.789243,-5.324156,1.509578,9.171555,1.164302,-4.861501,5.658088,6.104336,-1.408195,-7.704999,-0.883624,7.921762,5.262872,6.360207,0.577744,-7.694431,-7.205465,-6.304772,-8.862614,-0.962742,-1.301663,-5.075826,1.566641,6.071551,-9.331505,3.631801,-9.818545,6.927680,-6.255538,1.845989,8.180758,-2.038087,-2.211722,9.772501,-0.769755,-2.448364,-6.836181,6.939637,2.745814,-5.227095,-8.208734,-6.323349,-1.625380,-5.653731,-3.980468,-1.225100,-0.897835,3.579864,2.701761,1.659765,8.105218,9.736963,-9.782898,9.268204,5.819289,4.749481,6.660626,8.629094,4.009711,-4.954510,1.874703,-9.615322,8.009911,-9.107163,-0.302949,-6.272698,2.661266,-5.918691,-8.966000,3.150883,9.411790,-9.588748,-0.395864,-7.250277,1.229838,7.264471,5.034518,-6.470926,-8.981156,-0.874207,-9.471517,-0.103298,-7.453162,2.325447,-0.408524,-3.209471,4.041459,-6.846019,-1.018855,-2.905449,5.984460,-0.149680,2.694272,6.879212,7.924240,-8.609600,-6.852565,-1.203876,0.050346,-3.821896,-0.806480,7.488462,7.939057,-0.281417,-6.831035,6.375738,-9.629138,4.903021,8.223390,7.496340,-9.194947,-2.306599,-3.883089,7.163639,4.408559,1.699530,-0.478501,5.358800,-1.300401,-8.850621,-3.912117,-9.031783,7.489713,-6.385562,-5.986799,-2.644829,-9.258146,-5.888509,2.896156,-7.048888,9.894340,-6.862278,8.108838,0.809659,5.790889,-5.841678,5.053153,3.764433,-9.005502,2.707086,1.398944,9.239890,7.199427,3.044732,3.494864,7.867931,6.460085,5.522321,6.557483,5.312232,-1.983114,0.498663,-3.403352,-9.353077,-3.642174,-4.054723,5.236628,9.108290,7.083059,3.929554,1.118712,6.213936,2.200394,3.036358,6.285941,1.449737,-0.324036,9.932049,0.623061,-1.097144,-5.781490,-0.039680,-7.481418,-5.445106,-0.527255,6.541471,-0.154145,-6.454628,5.532747,-4.522560,-7.659105,-6.881123,-9.983383,-2.152906,4.787806,-9.893631,3.168107,-3.834476,-4.538055,4.471207,-9.537334,-6.141951,1.267502,-7.888487,-3.758946,9.827700,4.049920,-7.165963,6.701733,2.177983,4.336343,-4.674772,-4.177253,-4.406223,1.274830,7.149492,-6.294058,-2.660182,1.368117,-9.462725,-5.783449,-2.520855,6.913018,0.104463,1.771185,-4.418352,-4.294711,0.807136,6.661149,-2.760452,4.654426,-6.518276,9.814377,4.148686,-9.841251,1.202877,1.980200,-8.767418,-1.009944,-3.353034,-9.973381,-9.703501,2.798500,-1.778562,2.976220,-1.947202,-4.919783,8.963052,0.906983,-3.509886,-7.015669,-1.009457,-6.762155,1.990142,6.175403,-9.542651,-8.671494,-7.417055,9.175030,-6.262567,2.218780,7.820930,1.092019,-2.010018,-5.492947,-4.139339,-9.866565,-5.529356,2.085014,0.078418,5.546567,2.640113,-4.264307,-1.784093,-2.902301,-9.936708,4.666624,7.614205,-7.425147,3.363576,6.447059,-5.335369,7.471402,-5.240887,-1.453829,4.371022,4.448500,9.200010,-7.982782,7.308882,-5.774014,5.995563,-0.779908,-0.958257,-1.646931,7.171795,-2.260671,6.797647,-7.650121,-5.767611,3.839993,2.259717,-0.634667,-4.958112,-1.024526,4.365804,4.879847,-2.022829,-2.794816,3.889877,-3.581955,-7.386231,-7.159049,-8.737043,6.910509,2.810241,-8.882528,5.058600,8.015967,-9.161913,-5.301433,-4.415578,-0.506025,3.362641,5.234418,1.226220,6.760589,-7.957768,5.262204,-0.728705,-6.870953,9.946760,-6.512345,7.208100,-2.259472,7.066862,-2.736688,-3.540324,-4.623178,7.513267,-7.430416,-6.423027,-6.204634,6.030188,8.416123,-9.871359,0.143929,0.416496,-0.348729,2.931585,-3.863524,3.287430,-2.216557,2.812390,8.667321,9.707245,5.401597,8.627626,-4.067676,6.883368,3.455569,8.078281,3.071042,-4.234079,-0.642964,-1.699220,7.788159,4.896446,7.965543,-5.875972,7.296687,5.615114,1.064293,-8.317529,2.058861,-3.250593,1.675839,-8.479422,-9.183744,-4.911037,-1.009346,5.613843,7.619446,-8.411920,6.183207,4.626063,-8.618593,3.600585,-0.773049,7.884544,7.303672,-4.672145,-6.477783,7.615665,6.120535,8.677641,-3.970687,9.663181,7.707817,-9.948509,9.763117,5.940194,-3.835420,1.907694,-7.600970,5.052347,-3.185862,-7.827061,-3.274451,9.990515,1.656468,4.352280,3.519664,7.058146,-8.030488,0.588504,-9.611463,3.207442,0.753003,2.716971,-2.017990,1.509158,-9.094877,6.330120,8.729065,-9.477384,3.273690,-0.033793,5.518286,3.376182,-2.989212,3.983451,0.325110,0.259025,5.410976,-1.687551,7.209410,0.883756,9.977738,-3.965307,3.068031,5.558455,9.625897,-3.077961,-8.579479,-1.757958,-5.497071,5.131518,3.196447,5.741418,0.828177,-3.889874,1.041683,-4.616008,-7.667271,-7.436890,1.429947,-9.196818,1.716318,4.361603,-2.293703,-3.097835,7.169286,-1.114179,9.737570,-0.458186,5.710049,4.212454,-4.214759,7.636664,3.414059,-7.870072,7.768223,3.099161,5.235513,-0.754855,-5.562278,3.638557,-6.286854,-8.931311,8.608260,-1.736950,4.167546,2.381543,5.368597,-3.222485,-3.596701,-0.827221,6.597477,8.759893,-7.854635,-3.421599,-7.089214,4.008568,8.074987,-8.236170,-5.733542,3.283834,6.985560,5.907626,3.177351,7.284512,-1.589381,-8.780938,1.285832,6.299441,2.495054,-3.763474,4.244770,2.030153,-7.048288,7.721496,-9.663768,-9.835598,2.741207,8.370060,-1.894114,4.120873,-6.264602,-3.114019,2.850529,5.152153,-0.005772,-1.802516,3.276526,-1.369970,-9.852805,-3.111770,8.273568,-3.562490,-0.109445,7.199608,-1.401766,-6.689125,-4.150421,-0.602176,-3.407443,9.632363,0.969388,-0.042870,5.933029,-5.935218,-6.855183,-6.259257,-9.394713,-7.271426,-6.992538,4.192679,-8.896096,6.545799,-0.420846,-9.496682,-1.452938,1.822968,-2.739131,-1.852348,8.878414,6.782793,-9.273970,6.716574,-8.629458,4.346969,1.426614,1.404765,-8.981997,8.947809,-2.216154,8.300235,5.273080,-6.033609,-9.201035,3.044741,-1.171903,3.584118,-5.933087,6.958372,1.090700,-3.066277,8.483822,-2.786294,-7.765392,-0.026764,-4.968867,8.984129,1.052950,0.694155,3.771429,6.828832,1.495972,-4.604728,4.252478,-6.292697,-1.854644,3.509098,-9.229921,-0.979289,5.245494,6.949931,-4.397509,1.515816,-9.414998,-6.201667,9.750136,6.399446,-0.468555,0.224922,0.950388,-2.252713,-4.656054,4.307481,-7.409634,6.282201,1.695568,8.423257,-1.725110,5.759977,6.735592,-3.313320,7.214507,4.037978,2.096349,6.371150,-1.010212,-4.626268,9.509775,0.336071,2.480705,-2.747735,6.809247,7.909704,-4.896862,-4.855259,-1.386224,7.077967,1.326796,4.594187,9.242407,8.852687,7.054487,-3.944978,-6.478231,-7.582360,-3.829153,-6.123937,-0.905858,7.256198,-4.651679,-6.061754,-1.240277,-6.208386,-2.999945,-5.686757,-3.514364,1.314432,-5.813919,-1.164133,7.708499,-0.265547,3.192188,7.307403,-3.556530,3.618600,-8.117214,6.846970,8.987725,-3.969553,-4.667212,4.755289,6.030741,-7.726013,-9.398411,-5.086388,7.112825,5.549641,3.881892,-4.231889,-3.707701,-1.735026,3.641187,0.887148,9.116356,-0.319281,8.377384,-5.454594,-4.835725,-0.123817,4.655828,-9.812749,9.688277,-8.654132,-5.147817,5.365817,-9.797102,2.495428,3.508441,-4.058924,3.282963,-3.924185,-5.889137,5.598419,4.909589,9.049081,-8.970970,6.042014,4.067482,-5.853831,-6.276278,-0.044655,5.491485,-5.112209,4.545315], dtype = "float32")#candidate|9781|(784,)|const|float32
const_9782 = relay.const([6.285235,-2.604771,-6.378298,-8.216170,-9.423433,6.060462,-3.985250,1.709845,-7.499623,-7.553642,-3.220870,1.145876,4.314590,1.815074,7.682625,-4.081780,-1.129630,9.154540,1.686729,-9.091121,-7.641128,4.467813,5.739585,6.971713,8.593225,-4.420938,1.065127,-5.368977,-3.277974,7.180449,9.640958,-3.416138,-2.070735,-5.188947,1.737926,3.077176,8.482422,3.299126,-9.003821,-2.889020,-5.591301,4.067812,-7.308609,-4.344371,-3.302393,-4.647268,-9.536635,6.079500,-4.369591,-0.874755,7.043120,6.394293,-2.157537,7.700719,8.327992,-0.606337,-0.376143,7.939592,-8.644521,-9.028662,2.569139,-3.374800,0.954699,-4.462970,8.674394,-4.660779,4.419849,5.636095,-3.103279,-9.315054,6.145980,4.486630,-7.285992,-5.410473,3.024270,7.019457,-2.452318,-9.301796,-9.145322,6.724697,9.049826,-7.825929,-5.741300,-2.313195,-2.830115,-2.761223,-6.186990,8.150842,2.478906,9.791197,-5.152198,5.466189,-6.275611,0.236950,1.862140,-0.406480,-5.641335,2.725149,5.479857,4.259402,-9.556419,5.603987,8.801926,8.353408,-3.975858,2.722532,-7.565391,4.231302,-9.474679,3.571788,-0.706599,-5.950216,-4.060143,2.607077,-5.301383,4.570626,-0.089411,5.690219,3.670765,-6.626700,7.115170,9.274635,5.437972,-5.652581,2.348622,9.306825,1.204048,-6.358593,7.338617,5.378913,-5.653612,-9.235335,8.726065,-5.688811,-7.209019,0.315969,3.485220,9.303058,7.583286,-6.782932,0.043517,-9.604517,-6.001265,-0.236266,-0.087440,0.887241,-6.670065,-1.056912,5.798276,0.758376,5.843500,9.679874,1.008584,1.866697,-3.076492,6.399154,3.589138,-1.633849,-9.740405,1.490856,0.087378,3.684294,-2.324420,7.825830,-3.362512,-9.422304,0.734826,-8.626991,-8.801934,-1.597772,-7.648739,0.115185,5.001765,9.783910,-7.696426,9.541583,2.643012,-7.992653,-7.883404,7.184473,-7.352897,-4.994930,6.249792,-3.035762,1.316875,-1.717491,-0.989253,7.094232,9.359519,6.803635,-2.945369,9.843848,4.407723,0.495785,-4.908383,-7.290871,-4.127068,-9.308750,-8.642648,-7.418786,8.782200,7.943989,-2.813306,-5.001087,8.319380,8.300487,-2.160310,5.923772,-6.909232,2.366152,3.977986,9.813860,-6.335569,9.843121,-6.934581,-3.340247,-3.385103,7.815242,0.722009,-5.975583,7.683236,-0.344185,6.103827,5.317126,-0.029141,-7.902709,0.393887,-1.754601,4.650558,-5.695160,7.781725,-5.888846,-7.840916,-6.446097,7.660489,-6.323061,-7.641820,-4.827925,-7.320970,-6.089493,-1.725807,-4.478600,-6.644570,3.737129,-3.647280,-9.758673,5.099384,5.941944,-7.034317,2.822736,-0.930360,8.819135,-3.305342,-4.134814,0.727437,9.753780,3.148989,6.329649,-9.586177,-6.086744,-3.582809,-0.825911,1.412252,4.354665,1.925629,6.435073,-0.269869,9.978719,-9.231981,8.328914,-5.994197,2.331682,-2.509581,5.372142,9.371988,9.250045,-0.445205,0.315831,8.642956,-2.150423,7.776758,5.203076,-6.084972,-5.551439,-5.449499,-6.157344,6.874564,6.125741,2.493201,-6.205202,-5.521699,-8.077146,-0.047295,-6.132461,1.181164,-5.099780,-2.662624,-8.720711,-6.648190,7.181511,5.987517,4.185132,1.592065,-6.893383,-3.922063,4.044948,3.621986,4.283051,-5.743714,5.749185,-4.490354,-7.033841,2.257099,0.954438,-4.329449,2.170919,7.229967,-3.014221,7.024678,2.862402,4.812633,-3.350883,-9.074720,-1.555928,7.185333,-5.545940,-9.229416,-6.845808,-7.523236,6.786853,-4.943468,-2.912238,-5.052893,-9.119022,1.958344,4.948567,-7.140009,4.737863,0.406979,9.411117,-5.869922,6.252275,4.590415,-8.167856,7.643041,-3.336883,-9.556826,5.923565,3.813602,-4.264045,9.188469,4.596292,9.618609,0.006059,0.686968,7.223430,-0.824692,-7.474003,-4.915930,8.510667,-6.977222,9.536607,-6.224507,2.302300,-4.224339,6.958319,9.785282,-0.346070,2.303832,-7.866530,-6.106553,-7.406390,-3.338613,-7.012029,-8.275715,-1.140664,6.347100,3.413797,3.753285,1.116015,2.310133,5.500323,-4.671567,8.762615,7.599095,-1.063774,-8.111245,8.626000,2.890764,0.914280,2.672799,-9.900389,-0.245559,5.833219,3.108943,5.393792,3.060062,6.167206,-2.624541,7.597918,-5.933677,-3.472994,2.629352,2.287021,1.128390,-2.268954,5.181131,-3.353285,-7.549795,0.550379,-6.865507,-9.603542,9.845024,1.830530,6.032073,-2.238118,-2.296886,-2.947795,-1.539188,-1.413875,-6.580398,-2.101516,-4.436421,2.524588,-5.257361,-8.854557,-6.271449,-0.695144,-6.703911,5.267447,0.266240,-3.614387,-5.184303,1.134133,-5.245019,1.312405,-9.322388,-8.649352,-6.335106,0.856015,-2.742376,8.993612,3.309377,8.849189,-7.278587,3.277090,-1.696296,9.590575,-7.000271,3.681216,9.267510,6.913290,-5.486257,-9.150599,-4.619809,-4.494506,9.942487,1.465213,8.475480,-1.998243,1.389160,8.113309,7.380479,8.614050,3.929164,0.428834,8.377505,-2.723980,-6.518978,-9.603400,7.584286,-2.611134,-4.781950,4.671779,-6.507886,9.056606,7.974683,9.540814,-3.473513,-5.814503], dtype = "float32")#candidate|9782|(480,)|const|float32
call_9777 = relay.TupleGetItem(func_2148_call(relay.reshape(var_9778.astype('float32'), [4, 14, 4]), relay.reshape(var_9779.astype('float64'), [1, 720]), relay.reshape(const_9780.astype('float64'), [540,]), relay.reshape(const_9781.astype('float32'), [4, 196]), relay.reshape(const_9782.astype('float32'), [40, 12]), ), 2)
call_9783 = relay.TupleGetItem(func_2154_call(relay.reshape(var_9778.astype('float32'), [4, 14, 4]), relay.reshape(var_9779.astype('float64'), [1, 720]), relay.reshape(const_9780.astype('float64'), [540,]), relay.reshape(const_9781.astype('float32'), [4, 196]), relay.reshape(const_9782.astype('float32'), [40, 12]), ), 2)
func_9308_call = mod.get_global_var('func_9308')
func_9310_call = mutated_mod.get_global_var('func_9310')
call_9785 = relay.TupleGetItem(func_9308_call(relay.reshape(var_9779.astype('float32'), [8, 15, 6])), 3)
call_9786 = relay.TupleGetItem(func_9310_call(relay.reshape(var_9779.astype('float32'), [8, 15, 6])), 3)
output = relay.Tuple([call_9739,call_9754,var_9755,const_9756,call_9762,const_9763,call_9777,var_9778,var_9779,const_9780,const_9781,const_9782,call_9785,])
output2 = relay.Tuple([call_9740,call_9757,var_9755,const_9756,call_9764,const_9763,call_9783,var_9778,var_9779,const_9780,const_9781,const_9782,call_9786,])
func_9796 = relay.Function([var_9755,var_9778,var_9779,], output)
mod['func_9796'] = func_9796
mod = relay.transform.InferType()(mod)
var_9797 = relay.var("var_9797", dtype = "float64", shape = (64,))#candidate|9797|(64,)|var|float64
var_9798 = relay.var("var_9798", dtype = "float32", shape = (4, 56))#candidate|9798|(4, 56)|var|float32
var_9799 = relay.var("var_9799", dtype = "float64", shape = (720,))#candidate|9799|(720,)|var|float64
output = func_9796(var_9797,var_9798,var_9799,)
func_9800 = relay.Function([var_9797,var_9798,var_9799,], output)
mutated_mod['func_9800'] = func_9800
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9870 = relay.const([[[1.967827,5.941709,-9.293014,4.095429,-5.808396,8.531358,-1.524181,5.098368],[-8.437430,8.189831,9.182719,-8.683326,-9.702852,-2.316566,-9.961146,-3.374199]],[[-0.659006,-8.614686,5.815921,3.073765,5.533494,-1.988404,-1.152481,-9.509846],[4.418065,3.867033,2.474024,3.066794,-6.466061,-6.544321,5.919230,-3.122265]],[[7.451533,-1.234696,-5.040810,-5.001268,8.898665,5.733966,-4.316570,-4.012208],[6.300144,-3.701613,4.155491,7.712536,-7.811420,5.211860,-8.499602,8.670504]],[[-8.821952,-9.534969,1.284656,0.006818,-4.120041,-8.887130,-8.921127,-7.348724],[-4.783249,-4.101401,-8.356771,8.621137,4.737003,0.544463,-5.917268,4.203964]],[[-5.660488,2.938130,-1.646432,-9.247167,-1.654654,-2.169212,-0.664854,-3.199781],[3.269632,-9.239713,-1.255283,-2.568123,-8.634771,-8.871800,-7.682693,-4.750527]],[[0.265963,-5.023516,-1.573126,-6.093057,-7.507716,2.022890,6.727031,8.003708],[-8.256283,0.358174,-9.470558,-5.714841,5.266170,6.433664,9.707421,-6.937186]],[[-1.598239,-8.880735,-8.054836,2.988906,4.624642,1.590396,-1.376808,-0.265893],[-7.721890,-1.326204,5.222321,-4.005849,9.487385,4.998021,9.832762,3.403106]],[[-1.493551,-3.097897,9.387089,8.997759,-9.551260,5.488457,-5.154992,9.021754],[9.758105,8.889287,-4.086537,2.462054,4.757863,-5.957433,7.588404,-0.290957]],[[-2.675433,-0.162305,-3.315995,-2.698495,-5.101237,-8.645297,5.691105,0.112560],[0.447197,-4.155704,-9.386400,0.875223,-3.546491,-5.121702,7.687120,0.862356]],[[6.403232,0.857071,-2.610027,-4.076773,-2.699891,2.950120,-5.961236,-5.101378],[9.703901,-6.070045,9.792405,5.145748,9.752402,5.892039,0.780472,-5.421923]],[[-1.677244,-4.360159,-6.413091,4.227587,7.763315,-8.703620,9.456037,3.833076],[1.910849,4.104111,4.811788,-9.338090,-7.408740,-8.233401,0.636029,6.324240]],[[-4.599158,-7.066728,-3.943033,8.782742,-7.311813,-9.693353,8.683269,-3.027257],[3.377481,1.308762,-1.147034,2.230871,5.861127,-5.557327,8.415804,-7.270273]],[[-6.666280,-3.097277,-8.221223,-7.584583,5.198498,-2.548683,8.430011,-7.549070],[-9.598182,6.286685,9.198791,-6.513751,-6.426041,7.681540,-3.045325,-4.012674]]], dtype = "float64")#candidate|9870|(13, 2, 8)|const|float64
var_9871 = relay.var("var_9871", dtype = "float64", shape = (13, 2, 8))#candidate|9871|(13, 2, 8)|var|float64
bop_9872 = relay.floor_divide(const_9870.astype('float64'), relay.reshape(var_9871.astype('float64'), relay.shape_of(const_9870))) # shape=(13, 2, 8)
output = relay.Tuple([bop_9872,])
output2 = relay.Tuple([bop_9872,])
func_9880 = relay.Function([var_9871,], output)
mod['func_9880'] = func_9880
mod = relay.transform.InferType()(mod)
var_9881 = relay.var("var_9881", dtype = "float64", shape = (13, 2, 8))#candidate|9881|(13, 2, 8)|var|float64
output = func_9880(var_9881)
func_9882 = relay.Function([var_9881], output)
mutated_mod['func_9882'] = func_9882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_9897 = relay.TupleGetItem(func_4993_call(), 0)
call_9898 = relay.TupleGetItem(func_4995_call(), 0)
output = call_9897
output2 = call_9898
func_9899 = relay.Function([], output)
mod['func_9899'] = func_9899
mod = relay.transform.InferType()(mod)
output = func_9899()
func_9900 = relay.Function([], output)
mutated_mod['func_9900'] = func_9900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6040_call = mutated_mod.get_global_var('func_6040')
call_9987 = func_6038_call()
call_9988 = func_6038_call()
output = call_9987
output2 = call_9988
func_10022 = relay.Function([], output)
mod['func_10022'] = func_10022
mod = relay.transform.InferType()(mod)
output = func_10022()
func_10023 = relay.Function([], output)
mutated_mod['func_10023'] = func_10023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4993_call = mod.get_global_var('func_4993')
func_4995_call = mutated_mod.get_global_var('func_4995')
call_10026 = relay.TupleGetItem(func_4993_call(), 0)
call_10027 = relay.TupleGetItem(func_4995_call(), 0)
func_4854_call = mod.get_global_var('func_4854')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_10033 = relay.TupleGetItem(func_4854_call(), 0)
call_10034 = relay.TupleGetItem(func_4856_call(), 0)
output = relay.Tuple([call_10026,call_10033,])
output2 = relay.Tuple([call_10027,call_10034,])
func_10037 = relay.Function([], output)
mod['func_10037'] = func_10037
mod = relay.transform.InferType()(mod)
mutated_mod['func_10037'] = func_10037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10037_call = mutated_mod.get_global_var('func_10037')
call_10038 = func_10037_call()
output = call_10038
func_10039 = relay.Function([], output)
mutated_mod['func_10039'] = func_10039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_10064 = relay.TupleGetItem(func_3532_call(), 0)
call_10065 = relay.TupleGetItem(func_3533_call(), 0)
output = call_10064
output2 = call_10065
func_10071 = relay.Function([], output)
mod['func_10071'] = func_10071
mod = relay.transform.InferType()(mod)
mutated_mod['func_10071'] = func_10071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10071_call = mutated_mod.get_global_var('func_10071')
call_10072 = func_10071_call()
output = call_10072
func_10073 = relay.Function([], output)
mutated_mod['func_10073'] = func_10073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4683_call = mod.get_global_var('func_4683')
func_4684_call = mutated_mod.get_global_var('func_4684')
call_10176 = relay.TupleGetItem(func_4683_call(), 1)
call_10177 = relay.TupleGetItem(func_4684_call(), 1)
output = call_10176
output2 = call_10177
func_10191 = relay.Function([], output)
mod['func_10191'] = func_10191
mod = relay.transform.InferType()(mod)
output = func_10191()
func_10192 = relay.Function([], output)
mutated_mod['func_10192'] = func_10192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9594_call = mod.get_global_var('func_9594')
func_9596_call = mutated_mod.get_global_var('func_9596')
call_10214 = relay.TupleGetItem(func_9594_call(), 0)
call_10215 = relay.TupleGetItem(func_9596_call(), 0)
func_8915_call = mod.get_global_var('func_8915')
func_8918_call = mutated_mod.get_global_var('func_8918')
const_10221 = relay.const([-0.688007,7.782873,6.069676,4.266754,1.768830,-8.716750,6.271934,3.310296,-6.552620,9.529317,-0.649521,1.311389,-6.369566,8.544301,-9.443266,-9.978869,4.562438,-4.650866,-0.035339,-6.074199,-7.448911,8.167397,-6.767563,-4.929119,2.713683,-4.420210,-1.667516,2.181741,-6.901148,-9.480388,4.856356,-1.704610,-1.788669,-0.331828,-8.460455,-4.494687,4.412712,-1.219574,-5.383273,-8.683592,1.976203,4.862322,-0.100053,-2.749476,4.464319,1.998535,3.607781,4.655065,-8.363616,-5.609456,-6.685646,6.497627,5.547078,0.546384,0.711902,6.967559,-5.010139,-6.086776,9.701282,-5.196215,4.894327,-5.243669,1.766731,-6.463047,0.107132,-8.057819,1.135624,8.023193,1.972905,-7.238474,-1.389625,1.032607,-9.165583,9.678427,-2.213764,4.187160,3.142434,-0.929897,0.085067,-7.034491,-5.279831,8.847428,-7.262249,-3.220659,8.930328,-5.915318,-6.225308,3.229176,3.280862,-3.979692,-6.513211,1.836956,8.469201,-0.447624,-8.455478,1.651613,9.293764,-5.338124,2.767637,1.278826,9.463736,-3.026974,-9.582678,3.600098,-0.105316,9.425682,9.436009,-4.793804,7.323741,5.298224,1.544496,-0.144900,7.173333,0.700607,9.218789,-2.358272,-4.995275,-7.094470,-1.927626,1.245264,0.590969,0.785965,1.799213,-9.031648,-7.364846,5.764154,-1.280693,-3.867391,-9.819714,2.346379,-9.471707,3.885670,-0.114447,6.086478,1.382289,-1.693845,-1.139132,7.143859,1.380612,-7.766286,3.335888,-9.046082,1.077327,-6.064429,-5.746547,4.162483,7.743292,8.537433,-4.091158,-9.208526,7.579618,-2.114724,-2.624436,-8.907068,6.000773,4.485089,-7.945731,9.061980,-4.485342,1.766749,1.243041,0.830903,7.935637,-2.922758,-6.521034,1.855464,1.340742,3.185212,2.887185,-4.860477,-1.938862,-1.992998,3.215517,-5.428033,3.192520,-0.885475,-8.712842,0.202787,-4.027605,1.396636,-0.583707,0.016901,-4.021453,2.737935,-1.819299,3.064052,2.463807,4.475463,7.854027,-0.836040,1.400542,7.101774,-4.769215,-3.962311,-6.477640,8.484527,-3.951052,4.529503,6.926384,1.520850,-0.431745,-3.244890,-5.049430,-2.296334,1.414740,-8.672109,1.628982,-1.216412,-5.823528,-6.853510,-2.772909,2.404722,-4.645127,-3.163785,8.715176,7.211864,-2.534508,3.770004,2.220436,-6.999612,-7.390675,-0.341844,-5.067287,3.009763,7.563610,6.807228,-1.089021,-8.906162,6.907733,-2.787889,-9.227043,-4.742430,-6.828988,7.718787,4.750289,-1.112121,-7.235198,1.991586,-1.419697,7.179492,5.308851,3.085363,6.432641,-7.576522,-9.901334,9.346694,2.615479,6.170735,1.230267,0.837267,-0.031148,-2.107115,-5.675412,6.653346,3.847785,-0.857199,-7.288404,-5.163733,-4.369925,-8.729372,9.019940,1.151053,-6.517778,-4.137460,-1.606979,-4.131048,-2.740142,9.919946,3.543461,6.297746,-8.005495,5.220309,5.745775,-2.567205,-3.058317,4.721637,2.455997,-8.436116,3.119376,1.100744,8.212720,2.158660,5.320639,-4.951444,9.472166,3.729697,-4.145354,-9.948019,-9.601264,6.191419,-2.829610,-0.842997,9.019733,1.409203,-4.502144,-4.154934,-9.745399,2.098137,8.977365,-3.731757], dtype = "float64")#candidate|10221|(300,)|const|float64
call_10220 = relay.TupleGetItem(func_8915_call(relay.reshape(const_10221.astype('float64'), [6, 10, 5])), 0)
call_10222 = relay.TupleGetItem(func_8918_call(relay.reshape(const_10221.astype('float64'), [6, 10, 5])), 0)
uop_10223 = relay.exp(call_10220.astype('float32')) # shape=(6, 1, 5)
uop_10225 = relay.exp(call_10222.astype('float32')) # shape=(6, 1, 5)
output = relay.Tuple([call_10214,const_10221,uop_10223,])
output2 = relay.Tuple([call_10215,const_10221,uop_10225,])
func_10226 = relay.Function([], output)
mod['func_10226'] = func_10226
mod = relay.transform.InferType()(mod)
mutated_mod['func_10226'] = func_10226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10226_call = mutated_mod.get_global_var('func_10226')
call_10227 = func_10226_call()
output = call_10227
func_10228 = relay.Function([], output)
mutated_mod['func_10228'] = func_10228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6990_call = mod.get_global_var('func_6990')
func_6992_call = mutated_mod.get_global_var('func_6992')
call_10242 = relay.TupleGetItem(func_6990_call(), 0)
call_10243 = relay.TupleGetItem(func_6992_call(), 0)
uop_10247 = relay.asin(call_10242.astype('float64')) # shape=(11, 11, 6)
uop_10249 = relay.asin(call_10243.astype('float64')) # shape=(11, 11, 6)
func_4556_call = mod.get_global_var('func_4556')
func_4563_call = mutated_mod.get_global_var('func_4563')
const_10255 = relay.const([[-1.393292],[1.376073],[-7.920168],[0.536515],[3.983410],[-4.563207],[2.889857],[-9.017358],[4.815821],[0.403638],[-5.012506],[-7.997315],[-0.694879],[7.817489],[-5.181412],[-4.796101],[-4.356196],[4.503902],[-4.842153],[-9.620139],[6.054629],[-6.627360],[-5.450948],[0.523054],[1.965617],[2.918557],[-8.390588],[-3.314719],[9.514997],[6.033850],[-6.968701],[-3.513941],[3.446766],[8.442004],[7.667340],[-3.151433],[-7.089349],[3.037528],[2.738840],[-0.380916],[0.730527],[-8.497833],[9.396991],[-4.378420],[-9.636075],[3.439530],[-5.177383],[-3.928686],[3.624739],[5.236894],[5.058712],[5.364065],[8.722934],[-1.553318],[-7.718127],[9.897446],[-7.524956],[1.574256],[-4.657282],[4.549213],[7.754449],[3.102797],[-2.185848],[-1.458312],[1.761588],[-5.200916],[9.450387],[-5.763562],[-4.089617],[7.015617],[-1.349456],[1.356165],[6.741642],[-5.360093],[-0.017467],[-0.090857],[-9.707481],[7.162988],[7.597407],[-2.943504],[-2.374832],[6.166970],[5.806847],[-1.810643],[5.764916],[-0.741751],[-4.701766],[-6.543994],[-7.439415],[5.109320],[-2.902479],[-9.281210],[-4.268221],[-0.314145],[2.991538],[-7.658698],[7.041044],[9.755365],[-6.995076],[9.739143],[-6.131711],[3.723544],[6.762397],[-0.342355],[-7.066636],[-1.987136],[1.722572],[-5.083237],[6.226513],[-7.741475],[4.888860],[-7.186769],[-2.301176],[9.136274],[0.579727],[-0.265160],[-2.915186],[-5.471437],[-3.845141],[2.865545],[-4.588823],[6.398998],[9.608213],[9.560454],[-4.029935],[4.761846],[1.439916],[7.444241],[-8.769673],[-5.170313],[9.026930],[0.194774],[-9.998159],[3.543805],[-3.251823],[5.605143],[-1.059728],[-3.189295],[-6.732248],[-3.370045],[0.682679],[1.495445],[9.202297],[4.487358],[5.575377],[6.037777],[-3.141154],[1.972107],[-5.755829],[3.430002],[7.528481],[-8.843662],[-4.407313],[3.369204],[-6.811105],[8.929876],[-2.620998],[-9.349130],[7.916152],[5.265165],[6.290924],[0.925570],[5.357017],[-8.306784],[9.225449],[-2.533584],[2.945733],[3.107376],[5.795739],[-8.369491],[-4.404011],[-7.863211],[-7.425943],[7.754837],[-8.619353],[7.739134],[7.764057],[1.223220],[0.616209],[7.080513],[-0.363943],[0.842424],[-9.076085],[7.564266],[-0.443983],[0.366455],[3.410948],[6.517842],[7.403656],[-0.121618],[7.101430],[5.867755]], dtype = "float32")#candidate|10255|(192, 1)|const|float32
var_10256 = relay.var("var_10256", dtype = "float64", shape = (720,))#candidate|10256|(720,)|var|float64
const_10257 = relay.const([-0.070917,8.140505,9.164103,-2.749731,-5.053539,-8.919964,5.768722,-9.856927,-3.452188,-7.036171,-7.907205,2.805624,4.391861,-1.118015,7.269163,-6.835256,-5.560114,-7.311789,-2.011498,3.976442,-0.895146,-7.072588,2.810316,-7.557918,0.476292,9.531086,8.253190,7.669502,2.181279,8.159780,9.850702,-4.479877,9.007617,6.402646,-4.840608,-6.330122,-0.676247,-8.322877,2.140523,-8.550464,-6.715664,-3.939512,-7.731788,-0.650542,1.504075,-4.162139,9.328923,3.023315,0.241043,-5.005477,7.243481,-7.222836,9.429409,-2.706129,-9.648842,-5.533160,-1.052082,-5.925662,-2.409031,7.298084,-9.963371,-2.237239,-8.773003,-0.245519,-7.126714,7.009700,9.440965,5.119416,9.798334,-1.764415,-2.643939,-1.726420,5.402393,0.293005,7.856915,-4.744558,-2.432143,7.126453,-5.199460,-4.464420,-8.077655,-6.378644,-7.493972,-4.940831,7.000931,8.915257,0.111137,6.852775,-3.809581,-4.304328,4.168811,4.523464,6.581743,-7.148140,-3.981451,-7.465387,4.256305,-6.195196,2.766528,5.524939,7.697121,-8.661567,-8.718196,-3.022346,9.649545,-9.059675,8.939272,-6.425849,-0.781893,-6.569033,-5.317404,5.059176,5.975238,3.829033,-8.163795,-2.526243,6.152552,7.576978,-7.024701,-0.576359,-4.243881,-8.782694,-9.892012,2.558277,7.384395,7.664711,-1.377292,5.253579,-3.038408,-6.553175,7.519371,4.488398,-9.718293,-1.815420,-3.468752,-5.840249,2.093911,-7.680759,3.839147,-1.853765,2.201310,-1.707038,-9.536920,4.355414,-3.626791,-6.724456,-4.149094,-4.623935,-0.304737,4.249139,2.852376,1.053080,-3.041842,-9.670533,8.930137,8.478451,-5.298649,0.166895,4.881658,-5.375125,-4.727129,-4.844500,-4.348329,5.600536,2.556428,4.079186,-3.075013,-0.374206,-7.998250,6.770576,8.931292,-2.549800,-7.789171,4.173677,-2.990445,-1.935767,-1.678213,-5.177668,3.634911,8.594173,-3.294406,-5.668063,6.512671,-7.476398,7.482508,-2.130177,-3.561951,5.184841,-7.929823,-7.942159,-5.999567,3.186750,1.025927,3.126697,-7.441658,-3.242709,1.307488,7.908472,4.441621,-6.131301,3.369798,8.399628,3.532440,2.194377,4.775025,-3.900866,-4.623489,-7.414278,4.570651,-8.975960,-5.529262,6.976210,9.311007,7.431936,-4.245068,-2.219085,-7.711676,0.192226,-2.210769,6.765458,-3.859312,6.665721,4.329029,3.524719,9.769440,-6.023067,-0.969141,6.163955,5.203718,-9.411466,-6.021996,7.713556,-5.669317,-0.506443,5.466045,4.734735,2.608649,-2.401918,-1.148525,-0.574098,-8.938978,-2.164598,-1.610887,-9.023047,-2.831703,4.807856,6.317617,4.207817,1.372065,-7.051328,0.837664,-1.971829,-6.750148,7.847302,-5.572826,-3.939287,8.902271,7.552614,-1.184497,2.917960,-0.223163,0.830037,4.412552,-2.430993,-1.022419,-2.429790,-2.348226,6.201444,9.832855,8.762052,-9.768500,-5.947260,-9.986943,7.085971,-0.502863,1.500963,3.330344,-6.828318,8.017355,8.307902,-7.686888,7.909727,-6.924252,5.265039,-0.281109,-2.956110,4.642347,-1.224678,-6.656685,-1.159426,-3.711574,-4.329262,7.809252,-9.714341,3.725478,-3.234113,9.508043,-6.986347,-5.468056,-2.290248,-6.423803,5.265327,1.184369,-2.465389,4.248870,-9.824301,-1.923614,7.679736,-2.978193,4.491715,3.166627,7.725420,3.901572,2.542667,4.161669,-4.578469,-3.740616,6.864866,1.037974,0.556200,6.772577,-9.465764,-1.467850,3.903376,-1.602262,-8.662329,-8.701563,-2.801999,5.496178,-6.049005,5.878536,7.630472,-2.417596,-2.255118,-6.994380,4.929774,5.899154,6.493292,4.179775,-3.622958,0.382204,-6.997256,-5.795189,-8.502804,-1.318235,5.171144,0.643876,6.546536,3.201771,-7.901071,8.918266,1.900927,2.404555,8.791273,2.332556,-4.790972,-3.566610,1.140388,-5.807566,4.612673,-9.934455,-5.845796,4.486361,7.264115,7.866907,-8.829191,5.223007,-7.996567,-4.903229,-9.246121,0.319319,5.183327,3.631553,3.909654,-4.316067,-3.309234,0.739947,-5.759584,-3.695304,2.059473,6.047059,-3.191276,-7.709661,-8.469119,-5.918188,-0.553553,5.694605,-5.125528,-8.705117,-4.143825,-1.266533,1.450258,-5.845925,-7.542132,-4.694893,-0.145946,8.039047,-7.668926,4.737201,-1.113090,1.299301,-4.331062,-8.832643,6.449831,-2.701258,5.578808,-6.760649,-1.789186,6.001592,5.987265,-2.671216,6.863263,2.477283,5.802586,-5.866323,-3.015196,3.541159,8.506833,2.570178,-6.445412,-4.563180,-5.115121,3.660969,2.320811,9.765249,-9.300599,0.205875,2.746354,9.294002,4.529401,8.610928,-6.154142,-8.459413,-7.881640,-7.122002,9.237349,8.528491,-0.784323,-0.028785,1.612322,-2.396676,-6.936486,7.425320,-7.080133,-0.279118,6.162741,-3.472757,-6.891937,0.695428,-7.330871,-2.223845,-0.025180,-8.944416,-7.753127,6.959078,-5.784865,3.411674,6.725167,8.781101,6.512134,7.295645,1.168880,-5.364235,6.303606,-7.626215,-1.544929,0.532315,-9.152083,1.031557,3.890804,-7.138011,-4.634871,-0.886227,9.809956,-0.977732,9.704220,5.572489,6.186887,3.646709,7.979200,-9.349697,-6.660812,-8.085110,1.939396,2.932526,-5.184336,0.322498,3.186052,-7.951145,4.454975,5.434388,0.743027,2.542272,9.831916,2.282037,-7.680876,-9.815794,2.137565,-7.371597,-9.806539,1.411673,6.893658,1.296503,-7.827910,8.773591,-3.712139,3.004041,7.659655,-3.636287,9.981518,3.798771,-3.947803,-2.033787,5.820920,-3.905614,-4.501963,-1.313335,-1.602101,-4.437350,-8.252279,-1.021428,-7.994773,-4.573373,-0.715548,-7.182754,-1.862705,-8.019098,3.956269,-3.842796,4.347565,-2.804105,4.040026,6.269369,5.751361,-9.453131,-9.398563,-3.304044,-9.179497,-0.875092,-8.853460], dtype = "float64")#candidate|10257|(540,)|const|float64
var_10258 = relay.var("var_10258", dtype = "float32", shape = (784,))#candidate|10258|(784,)|var|float32
const_10259 = relay.const([9.056043,-8.784831,-1.088964,-5.664197,-0.896281,7.533648,0.014856,3.107205,8.169457,-8.527818,7.125257,-6.816568,9.593212,-1.164822,3.621869,9.354733,-0.767695,-2.927179,4.742318,-2.051891,-8.499477,-8.808172,3.206581,-6.469757,-9.213924,2.879643,4.280490,6.524945,4.718537,2.859672,-1.034231,7.438666,-7.274571,4.653918,-0.842389,0.621724,-8.788826,6.410541,-2.191833,-9.692751,-1.658721,-6.104894,5.907999,5.464116,0.706580,8.116269,0.071277,-0.836744,3.219944,8.715982,5.246985,-4.429079,-6.130480,-4.219698,1.130193,7.008890,-0.708181,0.384346,-8.443044,-8.313663,1.449063,4.828876,-9.922134,6.434503,8.078844,3.251544,8.265542,-1.165424,5.206053,-0.484858,8.290064,6.865162,9.339258,-0.873142,8.787233,1.817058,-6.813200,6.057303,-8.201270,-6.892145,5.109842,0.586651,-2.436250,-1.237069,-0.867720,-4.304277,9.211346,4.119371,7.777945,-9.059644,-6.777604,1.837549,-6.555618,2.105089,8.031035,-7.191443,3.167716,-3.005046,-1.388100,-7.952237,1.970074,-9.823046,-6.690778,-3.930527,8.018812,-6.896703,-2.869635,1.041618,-9.380890,-9.000512,-8.421353,-2.852825,-9.951227,4.791134,0.695641,9.407308,6.497694,1.757765,1.102411,9.842367,-5.183976,-6.917004,2.020599,4.168367,-4.233776,-9.464061,9.576245,-5.113164,8.291259,-3.762623,4.289110,5.607376,7.632987,-6.713262,-8.996368,-6.662757,2.414332,-7.847004,-3.879571,-0.513488,7.117482,0.715898,5.987847,-1.220203,-0.204805,-2.796005,-6.982651,-3.432483,-7.355949,-2.851072,-0.201404,-4.478850,2.365218,-8.817443,-7.780932,-6.092786,1.141455,-5.574348,9.763464,7.764837,9.022493,-2.092770,-0.623375,-7.119448,7.464506,2.637273,3.960222,-0.544544,-8.882323,-4.289959,1.557949,-5.748964,-9.740230,-0.804739,6.547875,5.095243,0.007042,-0.612559,-4.749974,-4.931172,8.202623,2.991254,0.307870,4.039040,2.183806,0.634455,-0.887182,8.449597,-6.680618,7.178752,-6.280612,6.808730,-2.087570,1.393704,-6.006858,-8.618946,6.371519,-0.531587,4.113348,2.067361,7.284148,-8.755388,-4.559028,-3.650989,1.354769,5.839354,9.166610,7.853797,-3.783696,-3.028429,-5.601481,8.452647,2.842554,5.636346,6.255813,0.253403,8.054462,5.353140,7.355889,-6.858792,4.782281,-5.154452,-5.046759,-7.140876,-2.349630,6.907580,6.444205,8.927202,-6.148299,-5.445974,6.544311,-2.826482,2.773165,-3.041521,-5.894324,8.701236,-7.612592,-2.597429,4.555879,-6.561238,9.476676,-3.381701,-3.269902,1.931365,-9.331043,-1.279506,4.621044,-0.321383,-5.044979,-1.583545,-0.640674,-2.579483,0.800569,8.592510,7.042860,4.479691,-0.277076,-5.740353,2.968984,4.962016,5.872625,8.620618,9.926047,8.736474,-6.115907,-4.226947,9.255406,-8.538937,1.627882,1.515637,1.998211,4.224313,-2.359812,-1.516230,-9.518415,-8.348251,9.096306,-5.439099,4.880056,2.844640,2.976320,-8.060811,-3.748814,-2.380958,8.571738,5.501769,-1.093847,-8.898386,-2.340265,-4.977464,-1.936703,-3.048437,-0.730523,-6.374527,-3.871973,7.909312,4.685818,-6.947017,-1.940987,0.265108,-0.617605,-0.799827,-0.288021,4.651262,9.080056,2.547070,-9.340605,-7.897581,-2.092210,3.086046,-8.991968,6.395149,-1.056940,6.960934,-1.718438,-4.402020,7.712961,7.922052,8.319946,-0.884966,-8.293340,5.746650,0.205366,3.693495,-7.085375,-9.932801,6.048042,6.797497,1.147835,7.844587,6.819533,-0.904196,-2.940282,-9.773064,3.211281,3.706903,-7.583655,-8.489445,-8.929803,-2.654509,-9.853221,5.249161,-2.141637,-2.355411,3.264371,4.102642,6.418874,-5.427300,2.661515,-9.842214,0.736180,-2.215752,-5.470426,-0.204289,-4.038866,6.088066,4.219180,-2.983027,1.250263,-9.236000,-0.462631,-4.698695,4.150806,-6.929090,4.149774,3.127077,-4.928939,3.412444,0.646625,8.487463,-9.031655,-9.695265,5.753271,0.202137,0.882307,3.713885,8.458863,-5.587258,-6.086220,9.825581,9.706559,6.233463,-1.796019,-5.073550,-4.617564,1.289474,-4.899960,-6.886618,-0.345171,9.326580,1.446857,-0.430516,-5.143826,-5.309935,2.557401,-5.684370,-0.246494,-6.779798,-8.239603,-9.073916,-4.422127,5.842092,-8.074971,-0.428748,2.933413,-7.048851,-8.429117,8.987662,8.432906,-1.301334,2.811183,9.619621,-5.470067,-7.677683,-1.118918,7.032034,-8.090723,-5.763230,-5.264057,-1.002147,-2.511832,9.793830,9.855108,9.577529,-7.043376,8.354421,-1.275942,2.603776,-1.172525,-5.891491,7.074742,8.437187,-4.707075,-3.760772,-1.368275,4.799816,3.490433,4.732266,9.333431,-8.956846,-8.191471,-3.121203,-7.492602,2.320623,8.187983,-9.780775,3.367523,2.347805,2.607217,4.223594,-5.236271,-3.953998,7.144440,-2.517512,-5.022586,-3.443508,-1.962223,0.782499,-4.617248,7.319201,-9.856640,-0.642380,3.826358,-2.743463,9.010033,-0.867197,-0.688360,-5.693459,-6.354922,-2.215955,1.909024,-1.582881,5.623548,-5.255531,-6.059430,-9.534552,3.081913,1.654783,-6.334651,9.995038], dtype = "float32")#candidate|10259|(480,)|const|float32
call_10254 = relay.TupleGetItem(func_4556_call(relay.reshape(const_10255.astype('float32'), [192,]), relay.reshape(var_10256.astype('float64'), [720,]), relay.reshape(const_10257.astype('float64'), [9, 60]), relay.reshape(var_10258.astype('float32'), [784,]), relay.reshape(const_10259.astype('float32'), [480,]), ), 4)
call_10260 = relay.TupleGetItem(func_4563_call(relay.reshape(const_10255.astype('float32'), [192,]), relay.reshape(var_10256.astype('float64'), [720,]), relay.reshape(const_10257.astype('float64'), [9, 60]), relay.reshape(var_10258.astype('float32'), [784,]), relay.reshape(const_10259.astype('float32'), [480,]), ), 4)
func_4221_call = mod.get_global_var('func_4221')
func_4223_call = mutated_mod.get_global_var('func_4223')
call_10261 = func_4221_call()
call_10262 = func_4221_call()
func_3348_call = mod.get_global_var('func_3348')
func_3352_call = mutated_mod.get_global_var('func_3352')
const_10264 = relay.const([[-4.949752,5.567758,0.486431,7.293980,4.476702,1.393445,-4.897690,0.212927,-7.352819,5.730731,-4.606414,0.058988,2.410255,-9.211888,-8.156416,5.949288,-5.946528,-2.534244,-9.056025,-2.249951,-1.267698,7.480746,0.476766,-5.213071,0.363071,-4.005760,-1.935973,-9.576286,6.771214,6.495130,-2.066959,-1.861751,2.824220,-4.345290,-5.058074,8.906468],[-3.572417,-0.472091,-5.528323,0.199721,-8.249120,9.584467,-1.922785,-6.848809,3.960147,9.530620,0.979080,-4.321156,-6.388598,-1.913503,1.771717,2.913824,8.699632,9.826218,-8.233315,6.188467,6.804687,0.278367,5.225451,9.765382,4.355349,-2.443134,-3.938614,-7.530993,-8.721757,0.575409,-1.033540,5.522424,-1.124740,9.042831,-0.431895,-8.136961],[-9.813145,6.070418,1.207324,-6.833561,3.151044,6.456025,1.943720,0.660007,5.899276,0.975273,3.514324,5.105359,-4.150610,1.903916,4.016655,-4.596480,0.743519,4.089026,-4.305380,-9.999671,6.901308,3.582316,4.678813,-1.301945,0.901898,-7.373555,-0.347075,9.065233,1.511624,5.210890,-6.586745,-4.328475,4.648686,-3.383973,7.111614,-6.302272],[8.978161,9.024556,-9.124972,8.051702,5.256963,-1.713169,4.065094,-1.719290,-8.299142,0.205536,4.534332,1.205075,-9.019932,-1.357298,-7.470555,-2.580566,-4.359728,-0.791142,6.904474,3.918776,5.640536,-6.772277,5.985904,6.614148,3.677082,-0.420526,-2.528646,9.857072,9.352329,-4.376502,-1.650517,3.785904,-2.792046,6.348688,4.400260,8.303883]], dtype = "float64")#candidate|10264|(4, 36)|const|float64
const_10265 = relay.const([-4,2,2,2,-10,-4,10,-9,1,5,10,10,-6,-10,-6,1,-1,3,2,7,4,8,-7,2,-3,-1,4,8,4,5,2,3,-8,9,2,1,-7,1,-9,4,-9,-6,-6,5,4,-1,-5,-2,-1,-10,-8,10,-9,1,-5,10,10,8,-2,-8,-4,-5,-5,9,-9,-10,1,4,4,-8,10,4,-7,8,5,8,-4,8,9,5,8,4,-9,1,-4,10,-10,6,7,5,-7,-3,7,2,1,-5,-5,10,7,-5,2,-5,-2,-8,-4,-4,7,3,9,9,3,8,-2,3,-10,2,-8,4,9,-10,8,-3,-1,10,-2,-7,4,-6,-6,8,7,-9,9,4,9,1,10,-4,-2,1,3,2,5,-4,5,8,3,7,-3,10,-9,-9,8,-9,8,-6,-8,-8,4,-6,5,-3,9,10,4,-4,-4,-1,-8,3,-10,7,-7,3,-1,4,-10,4,-8,-3,-8,-3,-4,3,5,-8,-6,3,3,9,-4,10,10,5,-10,-10,9,-9,8,-5,-1,-7,1,2,-7,-8,6,7,3,3,4,2,-9,-6,-6,-9,7,3,8,-4,6,6,-3,7,-6,-1,-6,-6,5,-1,5,7,-5,-2,6,8,1,6,-8,9,-5,-6,3,-5,4,-1,-5,-2,9,-3,-3,8,4,7,-7,8,7,3,6,10,6,-10,2,-1,-6,-7,-7,3,9,3,-8,-9,5,-9,-10,2,2,8,1,-4,-6,-8,-8,-4,2,-4,-8,-7,5,-5,-5,-2,6,1,-1,-8,6,10,6,-2,1,9,8,-6,10,-9,-8,-3,1,4,9,-9,-8,10,4,2,-7,-7,-7,-10,-4,-3,10,-9,-10,-2,-6,3,-1,8,2,-3,1,5,-4,-6,-4,3,4,6,6,2,-1,4,5,-9,1,9,-3,9,-1,-6,-3,10,2,3,4,-7,-8,10,4,4,3,-7,-8,-2,1,-4,8,4,-10,7,2,-10,9,-6,9,-10,3,-9,-6,-2,10,3,-1,-9,6,4,1,8,6,-3,-4,-7,2,2,8,5,9,7,7,-1,-3,-10,-1,-4,-2,1,-2,7,-8,-2,-2,-4,8,-2,-9,-7,10,-9,-8,9,4,8,-10,-9,-3,-5,-9,5,-2,2,10,6,-1,-2,-7,-8,10,-6,2,-1,8,1,4,-7,-3,-8,2,-6,8,-9,8,8,5,8,-1,4,4,-9,1,5,-6,-8,6,9,-1,-10,8,-7,-2,-10,-6,2,-10,-10,-10,-5,-7,-5,7,8,-4,7,4,5,-10,9,-9,-6,6,8,-1,2,-7,5,-1,-4,-1,5,6,1,4,2,5,-2,5,6,-4,8,-3,5,-5,-9,9,-10,-5,-1,-5,2,-2,-10,6,-5,-4,2,-3,1,6,-2,5,10,-7,9,-3,-9,-7,1,4,-6,6,-6,-2,9,-9,3,-5,4,-3,3,3,-2,-10,6,9,-2,9,-6,-5,9,5,7,-4,-1,1,-4,5,-9,-6,-1,-8,-10,9,5,10,-7,5,-7,5,5,-4,-2,-2,-6,-5,-5,-7,9,-4,1,8,1,4,-10,5,-6,-4,-8,9,-9,8,-9,-1,-3,3,-9,4,4,-7,6,10,1,-10,2,-4,8,-5,8,-5,2,-5,-9,-10,-6,7,-9,5,1,-10,7,-4,-5,-1,-6,4,-6,-9,-7,-6,-6,-6,-10,-6,6,-5,-9,9,-9,-8,9,-3,2,-8,10,3,-8,10,10,2,1,1,10,5,10,-4,-7,4,10,-10,7,-6,-4,7,-4,2,-8,-7,-4,-8,8,-3,-1,-6,-10,-1,4,4,-8,4,1,7,-8,8,7,-6,7,1,8,-9,6,5,-9,-7,-1,-9,6,2,10,-8,3,3,-7,10,-4,4,-10,9,2,-8,-7,-5,-5,-9,-6,-6,-2,1,-5,-5,-1,-8,-1,-4,-5,6,-1,6,-8,1,-3,3,7,-5,6,-9,10,-7,6,-2,4,-2,-8,1,5,-8,-10,-6,-6,7,-10,6,-6,8,6,3,-9,7,5,-3,-9,-9,-5,-5,-5,-10,3,-4,1,-10,-6,-9,8,-2,3,3,10,2,-8,-6,-3,9,-2,-4,-7,-2,-9,-5,6,-10,-7,-2,7,-4,-10,10,-7,-9,2,-4,10,-1,8,6,5,4,10,-3,-9,-4,7,4,2,5,-7,-4,-6,3,-1,9,-4,-10,-10,-1,-9,-9,8,-10,-7,6,-3,-2,-3,4,-4,2,7,-4,6,-7,-2,-1,2,-3,-8,4,9,-2,-10,8,9,-4,3,-5,-7,4,-1,-10,-10,-1,-1,-2,8,5,-10,2,5,8,-5,-7,-7,2,9,10,-4,-6,3,-7,1,9,-7,3,-8,-1,5,-5,-10,2,-8,9,-3,-9,2,-9,10,-6,-10,8,-9,-1,7,-7,-3,-8,-9,-7,1,-1,3,-8,8,7,-3,4,-4,-6,-10,-9,10,-8,-4,3,2,-8,4,6,-2,-9,-10,8,-9,6,-7,-6,2,-8,-10,10,7,-7,-6,2,-7,-4,8,-2,4,10,-3,-8,2,-9,-9,6,-9,-6,7,-4,10,3,7,7,-3,5,-5,9,3,4,1,7,-5,6,2,8,7,2,-7,9,9,-4,-9,4,2,-5,7,4,6,4,1,1,-1,4,-3,-8,9,7,-6,1,8,-1,-7,-5,-5,2,-10,4,6,-1,-2,-3,2,8,-2,6,-2,-5,3,5,-10,6,10,3,-9,-8,3,10,3,5,-7,-7,9,-10,-3,-2,2,3,9,7,-10,9,-6,1,8,-7,7,4,4,-8,-8,10,-8,9,8,-7,1,-2,-6,-6,-8,-9,-7,-1,-4,-7,-9,2,9,7,7,6,10,7,-2,10,6,-7,2,-3,6,1,-9,5,4,7,-3,-9,2,1,-9,-4,-2,-9,8,1,5,1,2,-6,-7,-8,-8,5,5,2,9,-2,-8,5,4,-1,-7,5,-10,6,5,-2,-2,-1,-5,2,10,4,4,3,5,-9,10,-2,6,-10,3,-2,-10,-6,7,-8,-2,4,-4,-6,-2,-9,-10,5,-10,-6,8,10,2,-1,-3,-5,-3,-3,-5,6,-5,-4,-8,2,3,-1,-8,6,-6,-9,10,-4,-3,2,5,7,-4,4,9,2,-3,-2,-5,-1,9,-9,-1,2,9,2,-1,-3,-2,-1,-4,3,-5,8,-5,-10,-6,1,-2,-3,-6,-7,6,6,-9,-8,-9,8,-6,-3,-5,5,-3,-3,9,6,-1,-4,2,-6,6,-2,7,-8,-8,5,-3,-9,7,1,-5,3,1,6,9,4,8,-10,-10,7,9,-3,2,-9,3,-5,9,8,-9,-5,6,4,7,-8,-10,7,9,-2,-4,-10,-4,-5,4,5,8,2,9,-10,9,3,5,1,-2,4,7,-2,8,-4,-1,-8,10,6,5,6,-6,-5,3,-6,8,-10,4,6,9,6,10,10,-3,9,-2,4,-8,-10,5,-3,-6,10,4,1,7,-3,3,-8,2,6,4,2,1,2,-8,2,7,1,9,5,1,-4,-5,-1,-2,1,-9,10,6,7,-9,5,1,9,10,-4,4,-5,2,4,-5,2,9,-3,5,9,8,-10,-2,7,-3,-4,2,-3,-7,8,5,5,3,-1,9,10,3,-6,-9,8,-7,8,-2,-2,10,-1,2,-1,6,-1,9,4,-3,1,-5,-3,-3,-10,2,6,-1,-8,-2,8,-10,-3,-4,5,7,-9,-4,3,-5,-4,4,-10,-4,-8,9,4,-6,-8,-4,-6,-8,-1,1,-2,6,3,4,5,-6,-6,-8,6,-7,-2,9,2,-7,10,9,-4,7,-3,5,-1,-10,5,7,-1,8,-7,-3,2,2,-8,5,-5,9,5,7,-4,5,6,3,-8,1,5,4,4,1,-6,3,-1,1,-6,-2,-5,10,-10,-9,3,4,5,-5,-4,10,3,1,-6,9,-1,10,9,9,4,-8,7,-5,1,-1,6,-5,5,-4,8,-10,-6,7,4,-7,-4,-5,8,-3,-8,4,-6,-7,-4,-1,-6,-3,3,10,-8,6,-3,-10,9,-9,-10,4,-1,8,-2,2,-1,-2,7,-2,8,-4,8,-1,-1,-5,5,-6,10,6,4,4,2,-10,8,3,-1,-7,5,6,-10,7,-4,-6,9,-8,7,-8,8,10,-9,9,2,-9,-4,4,-9,1,-4,-8,6,-5,10,4,9,-1,8,10,-8,8,-5,-7,-3,-8,5,9,-3,-6,8,-8,-5,9,1,-7,8,2,-10,-10,9,-10,-3,6,7,-7,-6,-4,-6,-6,2,-9,-1,-6,1,-3,-3,5,-4,-3,6,6,7,-3,-4,-1,4,-7,-2,-5,-10,-3,1,-8,-10,-8,1,8,-5,-2,-10,5,4,9,8,8,10,8,1,10,9,8,3,9,-7,-9,7,-2,-10,6,5,-4,7,-8,-2,-10,6,10,-3,9,3,8,-4,10,1,9,-1,-3,-7,-5,-1,9,-4,-9,9,9,-8,1,-9,-3,6,-8,-5,3,6,-10,-4,6,-9,7,5,-1,4,4,-2,4,8,-2,5,-6,7,9,6,-1,2,-4,-3,1,-6,1,-1,3,10,-2,-5,7,-8,-3,-2,1,2,3,10,-5,9,4,2,9,7,7,2,3,-8,6,3,-4,-3,-4,-2,-1,4,3,7,8,-5,-5,6,-9,-8,-6,2,-10,6,-2,-1,-1,10,-1,-6,-10,-3,-8,-7,-5,1,8,1,10,1,6,-5,-9,1,-2,10,-5,-1,1,-9,-2,8,-4,7,-6,4,-10,-1,3,-8,8,-9,10,8,-5,-8,7,-9,2,-5,-2,-10,-7,1,4,5,7,7,-3,9,-1,-6,-10,1,9,-2,-4,-5,-5,1,8,-1,9,2,-2,9,-7,-6,-10,-3,-3,-3,-9,-10,-7,-4,-4,-9,3,-4,-4,10,9,-8,-1,9,-6,-2,1,9,-2,10,-8,-10,2,-7,8,6,1,6,7,-7,10,-9,-3,6,3,-1,6,-3,-7,5,-8,-3,-6,-1,8,7,-1,-6,9,2,-1,5,6,8,-8,9,3,-5,2,-2,-7,-6,-9,5,-8,10,-9,9,-2,-9,7,8,-7,-8,10,9,3,8,-10,10,1,7,4,5,2,-6,-1,10,-9,9,10,-9,-5,-7,-3,5,8,3,-10,7,4,3,-10,-5,1,10,-4,-8,-9,6,-3,-5,-4,2,9,-6,-5,-10,1,-5,9,-6,8,4,1,1,-10,7,-5,6,10,-8,-10,-9,-4,-3,-4,8,5,1,-9,-1,9,2,7,-9,-1,-2,-5,-2,-7,-4,6,-3,3,8,-6,-2,5,8,-4,-8,6,-6,1,2,4,9,7,10,7,1,-5,8,-6,1,-7,-5,-9,4,2,5,9,6,7,-5,6,-10,8,2,-8,8,-3,8,5,-9,-7,2,10,3,4,4,3,-10,5,9,-6,-9,-9,9,1,10,2,-4,-10,2,5,5,-3,1,8,1,6,-2,-7,10,9,-5,-3,-5,-6,-10,-6,-2,-1,-5,4,2,-6,-6,5,2,-7,-7,6,5,3,-4,10,6,-1,-10,-8,5,-9,8,1,10,-7,-8,10,-4,1,-2,5,4,-10,1,9,4,10,-3,-4,-9,-9,1,-2,-2,6,-8,3,-9,8,-3,-7,-4,10,8,-10,2,-3,9,-1,-10,7,10,-10,3,10,-5,-2,5,-8,-4,9,-6,-1,10,9,9,-8,6,-1,-5,2,9,1,-5,-7,5,-5,10,9,-7,2,2,6,-9,6,7,6,-3,-10,-5,-5,6,-3,-5,-6,9,-10,-7,1,-5,-2,7,8,4,-8,6,-7,-5,-9,-3,5,-5,4,-1,-10,2,-9,-9,-8,-5,-9,-10,-3,9,5,9,5,-5,5,-4,4,-8,-6,10,-9,-2,7,-7,7,2,-9,4,-4,10,6,-8,-1,-5,-3,-3,-1,-1,7,9,-3,9,-4,3,-3,1,9,2,-4,-1,4,-9,10,-3,5,2,7,-9,4,2,7,9,-1,-9,7,-3,-3,6,-10,10,-3,5,-4,2,6,-7,7,8,6,4,7,-4,10,4,1,9,-6,5,-9,-2,-10,8,5,-5,3,-6,-9,-1,-2,-2,8,-6,-6,-8,7,7,-9,7,3,4,-5,8,-1,-4,-5,6,10,10,3,10,-10,-1,4,-2,10,-2,-6,-9,-9,-10,3,-8,7,6,9,-2,-3,-7,-1,-3,-5,-7,5,-10,3,1,-7,7,-10,-6,1,6,-2,-2,-2,-5,-1,-9,-10,-3,10,-7,2,5,-8,-10,10,4,1,-7,10,9,8,-8,-9,-1,6,8,-5,1,-3,-2,-7,6,-2,-10,-9,-4,10,-5,-4,8,6,9,8,-5,-8,-5,-5,4,8,-2,6,-3,-9,-5,-5,-4,-8,4,-2,10,-8,-7,-8,2,7,-4,-1,9,-5,6,7,3,-4,5,8,6,-10,10,-3,5,-8,5,6,-9,10,1,5,7,10,5,-7,3,3,-7,-8,8,-3,-5,-9,-10,-10,-8,-4,6,7,10,-2,3,-8,2,5,2,-5,7,-1,-4,-9,-8,7,4,5,8,-9,-1,-1,5,-4,-6,-3,-10,-1,5,-7,2,7,10,2,-7,10,9,2,-9,-10,3,7,8,-10,-7,-8,-4,5,-8,3,9,5,7,2,4,-1,5,-4,8,-8,4,-4,-2,2,7,5,-3,3,-8,5,7,2,-6,5,-2,-8,8,7,-2,-7,-6,-4,3,-8,2,-6,3,-1,4,-2,-8,5,4,-3,10,-5,4,-7,7,-9,-1,10,-3,-3,-8,7,7,9,3,10,-1,2,-4,-2,4,-2,8,-9,6,10,-8,7,1,9,-7,9,-1,5,2,8,1,-5,5,-10,7,-2,-10,-10,-6,-5,7,-5,9,-6,9,10,-6,-9,-6,-10,10,8,3,-1,9,4,-1,4,10,2,-4,7,7,8,4,8,10,-4,-6,-3,-10,-10,-7,5,-4,7,1,-5,2,2,3,-2,4,7,-10,4,9,-4,-8,-6,-8,-10,8,5,-1,6,5,-7,5,-10,4,6,7,10,1,-6,8,5,-1,6,7,8,-1,10,8,-10,3,-6,5,4,1,-4,7,-4,10,-2,1,9,-4,-7,-1,7,-2,4,8,-5,9,-7,-9,-7,-1,7,1,-6,-7,9,2,1,6,3,-3,-4,-8,-1,2,-9,8,-8,4,-4,-9,-8,-7,-6,6,1,-10,2,-6,8,-10,2,2,5,-4,-6,1,5,-7,-5,2,10,10,1,-6,1,-5,4,-3,-3,9,9,5,2,-6,-5,-4,2,9,-8,-2,1,-2,-7,3,1,1,-5,-5,-10,-5,-1,10,-1,-9,-1,7,-10,-6,-5,7,4,7,4,-6,5,9,-8,-1,7,-7,-1,-10,-3,-8,-7,6,2,-1,-7,5,8,-10,-3,7,-1,8,-1,2,7,4,-4,-5,4,-7,5,-3,-5,1,-3,6,5,3,2,-9,5,3,4,8,-6,-6,-6,-3,-9,-9,-3,6,10,-3,7,1,7,-1,-4,6,-7,-10,-9,-4,-7,3,-7,-9,10,-9,-6,-7,8,2,1,3,-10,1,-8,-10,-9,7,3,4,10,8,-6,10,7,8,-10], dtype = "int64")#candidate|10265|(2880,)|const|int64
const_10266 = relay.const([-6.876568,2.806986,1.473727,3.489231,-5.185651,-5.558987,-5.915874,-6.221810,5.169626,-3.695774,-3.001778,-4.965631,4.980359,-4.525939,-0.645179,-4.119722,-2.649175,6.751157,-4.765177,2.499067,5.551456,6.094688,4.762287,9.016347,-1.084490,-6.875155,2.887575,8.208350,-4.878485,7.284651,0.700702,5.946281,-8.670286,-9.251597,9.284988,0.212467,3.548037,-9.813258,2.625393,-9.656654,-6.182305,-6.904549,1.576904,-6.279296,8.788724,-0.561214,9.237118,-6.563485,-2.210188,-7.339685,-4.556762,-6.122176,-6.683837,5.898525,-2.242315,9.509128,-7.026708,-3.254854,3.676146,2.342087,0.162805,-9.582459,4.062514,-3.901146,4.283686,9.259716,-5.695771,5.548474,1.190523,-8.296210,-3.135456,-7.157282,-7.295452,-9.789936,0.859017,-1.762041,6.199365,3.573215,-6.528874,1.945650,-5.989372,2.240024,-0.971853,9.987829,4.546483,-5.864211,-8.184721,9.560854,2.886674,-5.939119,8.502666,4.582885,9.095214,-9.017888,-8.851494,7.108545,-0.910581,-5.591980,-7.065168,-2.582536,2.613173,9.511757,9.746536,-7.578740,3.085873,1.404816,-0.036130,2.895629,8.089763,5.405590,7.199190,-3.485169,3.396629,1.940829,8.315389,-2.728596,-1.956191,-6.293067,-7.826061,-8.649647,6.534401,-2.647781,2.348544,-0.469363,4.971257,-7.435760,-4.044293,0.377877,9.283049,2.012829,-2.080740,-4.365784,-0.192730,1.053114,9.225990,-1.906328,1.904781,-9.707847,-7.532372,-7.743077,-1.432891,5.797845,5.349616,6.117904,2.906431,0.178093,-7.289184,-5.770669,-9.494986,9.051666,2.896344,9.167944,-5.898656,7.740316,-9.222099,5.781424,1.441852,6.789556,9.448059,9.579134,-9.285197,-3.136788,-6.527577,3.977095,-6.831967,1.005668,-9.529196,8.611402,-7.709455,8.018777,-3.917442,-6.138918,9.066683,-6.963827,-0.953203,9.628181,9.124154,3.108945,-7.901355,-7.569048,4.221997,7.247673,-2.228606,-9.620970,6.222978,9.849578,-4.808822,8.504941,-1.940069,-5.939036,-4.509724,3.974968,-3.704209,2.014227,8.839987,7.555290,8.322561,-1.893033,9.168466,5.133127,-5.246907,-0.409265,-4.345018,9.064016,-4.781808,0.080772,2.612586,-2.574988,3.339347,6.541916,9.061602,3.918912,0.807674,1.043268,-2.605057,2.013976,8.880004,-3.213532,-9.910112,-0.027626,8.308369,7.425453,-6.721188,-1.241196,0.054611,-1.921595,0.212956,-8.065098,9.940984,3.962460,-8.515983,9.966278,0.624632,3.189764,4.749776,-4.011047,5.126495,9.783903,2.088926,6.474221,3.074025,9.454756,0.529312,3.895487,2.804080,-1.163720,-1.879905,-1.628384,4.355774,0.518558,2.606341,-9.368364,8.710763,0.104270,1.066177,7.234734,-3.808902,4.588260,-9.543137,1.170144,-1.661236,1.834289,4.242865,-1.487558,9.471286,8.245303,7.328546,4.884571,7.066083,0.147253,9.692901,-1.690343,8.752042,5.230431,-7.345428,-7.027607,6.274423,6.672266,3.962032,9.690307,9.576995,7.740333,-3.954379,2.628487,8.828614,7.069349,-6.251400,5.942906,0.770050,8.527971,5.613301,-4.711964,-3.848790,6.512474,3.913675,-0.932838,5.613032,9.045382,1.719152,6.146391,0.750120,6.653081,-5.976005,-2.087599,-5.467944,-1.618565,0.951951,-6.358726,-0.233602,0.983502,-4.969053,7.052949,7.289873,-0.819328,9.746451,-5.907906,-0.021269,-9.233777,-5.599700,-2.051537,6.700129,-0.893883,-2.126620,-2.664096,-1.209443,-2.079657,8.688908,-3.641196,0.268988,3.418851,-4.125134,5.193056,-1.502117,-4.555138,-2.310526,6.555182,5.339856,-4.981121,-5.689400,-9.976289,-6.909765,0.612625,-3.584828,6.456756,-0.512673,2.573346,-8.281886,9.005711,-8.930154,4.738208,5.081422,-5.836555,-2.589531,-0.136340,8.331059,0.556939,1.133102,-7.134861,-2.741714,2.814301,-5.316635,4.956236,-8.223591,5.005060,-0.644880,9.130627,1.999075,-6.375883,0.185941,-2.323245,-3.718592,-3.061334,4.283677,6.229051,-0.505113,-2.936857,7.024482,2.975289,7.965592,7.129305,1.254337,1.556017,-8.005413,-8.866318,-5.314206,1.646166,-4.324871,-5.750162,-4.129593,7.965756,6.718125,5.539974,-1.020344,-1.414542,-3.602992,7.145912,-4.585261,-7.167859,3.314896,-7.306706,-0.448157,-3.017746,-9.978521,-8.504219,-5.311033,1.142532,3.474173,4.693326,-4.033286,3.179685,1.539893,-9.528828,7.658998,-3.436345,-9.237215,-9.543385,-7.988225,3.892869,-8.827406,9.637926,-6.126825,-6.473946,-9.134370,6.897240,6.043225,0.265192,4.910373,-6.141736,-0.767429,9.362064,-9.148041,3.490223,-1.469277,0.732514,-5.784622,-1.881766,9.894763,4.914215,-7.017074,-0.898661,5.250108,-8.748176,-8.491269,-6.902005,4.455022,9.716356,8.287418,0.220251,6.411905,-2.041157,8.561190,-4.055742,5.639661,-9.273600,-6.388077,1.704271,-2.387932,9.180168,1.554667,-9.926069,0.177336,-0.635168,-0.280533,9.000602,-4.403097,-2.034398,-2.459898,-0.528087], dtype = "float64")#candidate|10266|(468,)|const|float64
call_10263 = relay.TupleGetItem(func_3348_call(relay.reshape(const_10264.astype('float64'), [2, 12, 6]), relay.reshape(const_10265.astype('int64'), [2880,]), relay.reshape(const_10266.astype('float64'), [468,]), ), 4)
call_10267 = relay.TupleGetItem(func_3352_call(relay.reshape(const_10264.astype('float64'), [2, 12, 6]), relay.reshape(const_10265.astype('int64'), [2880,]), relay.reshape(const_10266.astype('float64'), [468,]), ), 4)
uop_10268 = relay.cosh(uop_10247.astype('float64')) # shape=(11, 11, 6)
uop_10270 = relay.cosh(uop_10249.astype('float64')) # shape=(11, 11, 6)
func_10071_call = mod.get_global_var('func_10071')
func_10073_call = mutated_mod.get_global_var('func_10073')
call_10272 = func_10071_call()
call_10273 = func_10071_call()
func_7148_call = mod.get_global_var('func_7148')
func_7151_call = mutated_mod.get_global_var('func_7151')
call_10279 = relay.TupleGetItem(func_7148_call(relay.reshape(var_10258.astype('float32'), [784,])), 3)
call_10280 = relay.TupleGetItem(func_7151_call(relay.reshape(var_10258.astype('float32'), [784,])), 3)
output = relay.Tuple([call_10254,const_10255,var_10256,const_10257,var_10258,const_10259,call_10261,call_10263,const_10264,const_10265,const_10266,uop_10268,call_10272,call_10279,])
output2 = relay.Tuple([call_10260,const_10255,var_10256,const_10257,var_10258,const_10259,call_10262,call_10267,const_10264,const_10265,const_10266,uop_10270,call_10273,call_10280,])
func_10289 = relay.Function([var_10256,var_10258,], output)
mod['func_10289'] = func_10289
mod = relay.transform.InferType()(mod)
mutated_mod['func_10289'] = func_10289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10289_call = mutated_mod.get_global_var('func_10289')
var_10291 = relay.var("var_10291", dtype = "float64", shape = (720,))#candidate|10291|(720,)|var|float64
var_10292 = relay.var("var_10292", dtype = "float32", shape = (784,))#candidate|10292|(784,)|var|float32
call_10290 = func_10289_call(var_10291,var_10292,)
output = call_10290
func_10293 = relay.Function([var_10291,var_10292,], output)
mutated_mod['func_10293'] = func_10293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8085_call = mod.get_global_var('func_8085')
func_8087_call = mutated_mod.get_global_var('func_8087')
call_10295 = func_8085_call()
call_10296 = func_8085_call()
output = relay.Tuple([call_10295,])
output2 = relay.Tuple([call_10296,])
func_10299 = relay.Function([], output)
mod['func_10299'] = func_10299
mod = relay.transform.InferType()(mod)
mutated_mod['func_10299'] = func_10299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10299_call = mutated_mod.get_global_var('func_10299')
call_10300 = func_10299_call()
output = call_10300
func_10301 = relay.Function([], output)
mutated_mod['func_10301'] = func_10301
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10377 = relay.const([[[3,4,8,2,2,2,-8,1,10,-1,-9,1,-5,-9,4],[-2,9,-4,8,6,-7,-7,1,-10,5,9,6,10,-6,-4],[-4,-7,4,9,-7,-5,3,1,10,-6,-5,-1,-5,-2,-1],[-1,-5,-9,10,-5,4,1,-2,1,6,-6,-2,-3,9,8],[-4,-6,-7,-7,2,-4,-2,2,-9,-5,-10,-7,-10,-9,-6],[9,-4,-8,-10,8,9,-6,8,4,-3,-2,1,-7,-10,10],[-1,-7,-5,-8,9,7,-9,-8,5,2,-2,10,4,4,4],[-1,4,4,2,-8,-7,1,-10,-10,-1,-2,9,-6,-1,-6],[-4,-2,6,2,7,10,-5,-1,-8,-1,-5,3,6,6,8],[2,10,2,1,3,4,-3,2,7,5,10,10,4,3,-3],[2,4,-3,-6,-10,2,10,-4,-9,4,-6,4,10,-4,-7]],[[-3,-6,1,-1,4,5,5,1,-10,10,-6,10,4,7,-10],[-9,-5,8,-4,2,2,4,-5,-9,-9,10,-7,3,-10,-1],[7,3,-5,-8,4,7,-9,7,9,-10,-7,2,-3,-5,-7],[3,-8,-8,1,-2,-7,-3,1,10,-6,-6,3,6,3,8],[10,6,2,-1,-1,6,-3,2,-8,3,3,6,-7,1,-4],[10,2,3,9,5,-8,-7,1,-4,10,-3,-7,8,-1,-4],[7,10,9,1,7,9,8,-6,-3,-10,-10,-7,-9,-10,5],[-5,7,2,-9,5,1,-3,10,-10,2,8,-10,-6,4,-1],[-10,-9,-6,-5,6,-2,6,5,-5,-8,4,6,5,-7,9],[-5,-8,8,-7,-6,-6,9,-4,-7,9,3,-3,7,10,-6],[4,10,10,-4,2,10,-10,8,-3,-2,-10,6,-3,-3,9]],[[-4,1,-4,1,-7,-10,10,8,-6,5,-3,-3,10,2,-1],[-3,5,-8,-4,-7,-1,-10,10,9,6,4,-8,-6,4,-2],[-10,-9,-8,4,-5,2,1,-5,7,5,-7,-3,-7,-5,-1],[-6,-1,-8,2,-2,-4,-3,6,3,3,9,8,-6,4,-8],[10,8,8,2,-5,-9,9,-3,1,10,-6,5,-4,-1,-4],[-3,-2,8,4,-2,-6,-9,4,-10,8,10,-1,-7,5,3],[-6,4,9,8,3,4,2,4,5,-2,8,-4,6,-5,-1],[10,7,5,-7,-1,2,2,9,1,-4,7,-4,2,-6,1],[-5,5,7,8,-3,-6,4,-1,8,9,7,-3,-10,-3,9],[-2,-6,-8,6,-7,-5,-4,-3,-6,-8,-2,-2,6,-9,6],[2,4,-6,-9,8,-1,-10,-6,1,5,-4,4,1,7,6]],[[8,1,4,-4,-10,-10,7,-10,-5,2,2,-7,3,-6,-8],[4,-10,7,4,8,6,-7,-2,-4,9,6,-4,-10,3,-7],[-8,-6,-6,2,-6,4,-2,5,-9,10,-4,3,-1,5,7],[-4,3,-3,3,-6,8,3,2,-2,8,1,8,2,-7,5],[8,-8,7,7,7,-3,5,6,5,-8,-10,6,3,1,-4],[-5,-4,-3,-4,-5,6,-9,7,8,-3,-6,7,3,8,1],[10,4,9,-9,8,6,-3,4,-10,1,-1,6,-8,8,-3],[-10,5,9,1,-6,1,4,-9,-3,3,4,-10,1,-9,4],[10,-7,7,-6,3,1,6,-7,6,-3,3,-4,-8,-10,6],[1,7,-10,5,7,7,-1,3,-7,-9,9,-10,6,10,6],[-2,-3,-6,-5,8,-8,-10,-10,-8,-4,-9,-10,8,8,-2]],[[3,3,2,8,2,-9,-2,1,2,9,8,-8,9,-2,3],[1,-7,3,-4,7,6,-6,3,-10,-9,-10,7,3,6,-2],[9,-7,8,6,-3,-7,8,-9,3,7,-8,-6,9,-10,-5],[3,6,10,4,-5,10,-7,-9,3,-8,1,9,1,-7,2],[3,-5,9,-4,-3,9,-3,4,-5,-4,-7,-8,-4,-6,-10],[-4,8,-6,7,10,-9,3,-7,5,-4,-2,-4,9,9,-1],[-6,6,4,-10,1,1,9,3,-1,-6,7,-7,-8,1,4],[8,8,-3,-5,-3,1,8,10,-3,-10,-7,9,-10,-2,6],[-6,5,10,6,9,4,5,-9,3,-7,3,10,10,10,-4],[8,-3,-3,9,10,3,9,6,-5,1,2,8,7,5,-9],[-4,-10,-8,-9,4,-6,-3,-7,2,-8,3,-9,5,8,3]],[[-8,4,1,-10,-10,10,-3,8,2,1,-5,1,7,9,-3],[-5,-9,-10,3,-3,-6,9,-5,-9,-1,6,-5,9,2,-7],[2,7,-3,6,-9,-10,-1,4,10,-3,-2,-6,-8,6,6],[-5,5,2,1,5,6,-4,-6,2,-10,6,6,8,8,-1],[7,-3,-2,-10,2,2,1,-4,4,3,-1,-5,-3,-8,-7],[5,7,-6,-4,1,-4,-3,-8,-1,1,6,1,8,2,-4],[8,-3,-1,3,5,-1,-8,-3,-9,9,-6,-1,-4,-2,-8],[-7,10,-1,-9,4,10,-5,8,-3,2,-7,4,-7,1,-7],[10,5,-6,-8,-3,-10,-8,9,3,-4,-5,5,-1,10,-6],[2,4,3,-4,-2,-5,-9,-7,10,-2,9,5,9,-8,9],[9,-9,9,-1,-5,9,9,-3,-6,-8,-7,-8,-1,-2,7]]], dtype = "int64")#candidate|10377|(6, 11, 15)|const|int64
const_10378 = relay.const([[[5,-1,-9,-8,-8,-2,-2,2,-6,9,-4,2,8,-9,5],[10,-3,6,-5,-4,1,-4,4,3,10,-5,-10,-2,-4,-5],[-2,-8,-7,-8,1,7,-7,4,-7,-3,-2,-1,3,9,6],[-8,-10,-5,1,9,-5,-3,-9,6,-6,3,7,-10,-9,10],[4,4,-4,-1,2,6,-10,2,6,5,8,1,4,-6,2],[-8,5,2,-1,-2,-7,-10,5,-6,9,4,1,-3,-9,-8],[6,-1,8,-8,-8,-3,9,2,7,-9,-1,-6,-10,-7,-7],[-4,-3,-3,8,-3,4,-1,-3,-8,-1,9,-10,4,3,3],[-8,-4,-9,3,10,4,-4,-8,-10,-7,5,-4,-10,-7,2],[4,6,-3,7,-4,4,3,-5,-4,9,-7,-9,1,9,-2],[-9,-3,4,-10,3,-10,-4,-6,-5,-5,4,-1,4,2,-10]],[[-6,-1,-4,4,6,9,-4,-8,-3,3,-9,1,9,10,1],[-6,-10,6,9,-9,-9,2,3,-6,-5,6,3,2,5,3],[-3,-2,5,-7,10,-1,6,2,3,6,4,-10,1,1,7],[3,5,4,-3,-4,9,-2,9,4,2,10,4,-5,5,3],[3,1,-1,-8,6,-9,-7,9,5,-10,5,-2,-3,6,-2],[7,6,3,-4,6,-3,6,6,-8,9,7,-9,5,-6,7],[1,-5,-3,-6,9,7,-7,-4,8,-5,9,3,2,9,8],[-10,-1,7,3,-10,-7,6,2,10,-1,7,10,-7,9,-2],[1,7,7,5,1,-6,-4,6,-2,6,-3,5,-4,-6,8],[9,10,-1,-1,-8,-4,1,-7,-6,3,-4,4,10,2,2],[-5,-7,-10,-3,7,-3,6,-8,3,1,5,-2,5,-10,1]],[[-4,4,3,-4,-3,8,9,-2,-4,-3,2,-10,-9,-8,1],[1,-6,-1,-7,5,-5,7,-4,4,-5,3,-5,2,10,-2],[-1,-10,-8,-6,-7,4,-2,5,4,-6,-6,-8,3,-6,-2],[-6,3,-2,9,3,-8,8,-2,8,4,-6,-2,-3,4,10],[10,-1,-3,4,-10,8,8,8,10,-7,-9,-5,7,7,-9],[-1,6,4,4,3,-6,2,8,-3,7,1,3,10,-3,-5],[-8,1,-8,-3,-2,-8,9,2,3,8,-5,7,-4,-10,-6],[9,-1,7,-5,2,9,8,2,-9,-5,-5,5,-10,1,-6],[-7,2,-5,-7,-1,10,1,-10,-7,-7,6,-5,-6,-8,7],[7,-10,1,-9,-8,9,10,9,4,1,-10,-5,-7,-2,-9],[2,-4,-4,8,7,-4,7,6,-6,-1,2,-7,8,10,-1]],[[-10,5,-5,-1,2,10,-4,-10,2,3,-6,-7,-3,-4,-5],[-10,-10,-9,3,8,9,1,-7,-4,-8,6,-1,4,-8,-5],[-5,-7,1,10,9,-9,-5,2,1,5,-4,-3,4,8,-8],[-4,-1,10,9,6,-7,4,7,-8,-3,-10,-1,-1,2,6],[6,5,-1,9,-6,-5,2,-6,5,-9,-6,5,-4,4,-6],[8,-8,-9,-9,-8,5,-7,-3,8,-7,-6,8,2,-8,9],[-7,-5,-9,4,5,2,-5,9,-2,-6,5,-5,3,-6,4],[-4,2,5,-6,-1,1,2,-2,4,7,-4,1,-7,7,-5],[1,-1,1,-8,5,1,-1,-3,-4,-7,-8,5,-2,-4,-8],[-1,10,-3,8,-1,1,2,-5,-4,-4,1,-6,1,-1,-9],[6,7,6,1,5,8,4,-7,6,1,4,4,-8,-8,-10]],[[7,10,3,8,-9,-6,9,8,-10,-7,6,2,-1,-3,-1],[-9,10,-4,5,-7,-7,5,2,1,-8,4,10,-2,-8,2],[-1,-8,10,5,6,-4,-4,8,-10,1,-7,-2,1,-10,2],[-6,2,-3,8,10,10,8,2,-10,-6,2,6,-10,9,-5],[1,3,5,-8,4,8,3,-5,-3,9,8,3,-7,-2,-5],[7,-8,9,-6,8,-4,-3,-4,2,-5,-5,2,10,2,-6],[-7,-1,5,10,-7,-1,-7,-10,5,6,-4,-7,-10,-6,7],[9,4,10,-10,-3,1,9,-10,-6,-2,-5,7,3,-6,-10],[-10,10,-9,-5,3,7,2,1,-9,-5,3,-7,1,-8,8],[2,6,-2,-4,-5,7,-10,-2,-10,-10,-1,-6,-1,-6,-6],[6,-2,9,9,-3,10,-6,8,1,-8,3,-4,-6,6,6]],[[8,-9,6,6,-3,10,8,4,-4,4,-8,1,-7,-10,1],[-4,-10,9,3,3,-4,-1,-9,-10,2,4,2,3,-2,-4],[-9,-10,-3,6,4,-4,-2,-1,-10,3,7,-1,5,-10,-6],[-2,3,3,2,-2,9,-3,8,2,-6,-9,6,-2,3,10],[6,-4,5,-5,-7,1,2,8,1,10,-7,-8,9,4,2],[1,7,7,3,6,10,7,-5,-5,-5,4,6,-4,4,6],[3,5,1,1,5,-5,9,8,8,-2,10,6,-10,8,-8],[1,2,-1,-8,-8,-2,-10,6,4,-3,7,-4,9,3,9],[4,5,6,8,8,10,10,10,-8,-9,3,-4,1,1,1],[-7,10,10,8,1,-5,-8,1,-10,-6,-9,7,6,-7,3],[-4,4,2,9,3,8,1,4,5,10,-4,-8,4,-8,10]]], dtype = "int64")#candidate|10378|(6, 11, 15)|const|int64
bop_10379 = relay.right_shift(const_10377.astype('int64'), relay.reshape(const_10378.astype('int64'), relay.shape_of(const_10377))) # shape=(6, 11, 15)
func_6113_call = mod.get_global_var('func_6113')
func_6115_call = mutated_mod.get_global_var('func_6115')
call_10393 = func_6113_call()
call_10394 = func_6113_call()
func_8915_call = mod.get_global_var('func_8915')
func_8918_call = mutated_mod.get_global_var('func_8918')
const_10406 = relay.const([-1.665634,-8.677004,4.100967,2.536849,8.009486,-6.447896,0.078577,5.870774,7.330883,4.773667,-8.682981,-4.563509,9.105280,-1.968552,4.754474,-8.358037,-0.271585,-0.054842,-3.990493,-6.803589,2.007601,1.117334,5.962611,9.862647,-4.819527,1.636982,6.392304,-4.981889,-9.572845,-8.795292,0.357228,4.186695,5.654970,0.828849,5.234340,0.803818,-5.957336,6.861600,-7.090929,9.511075,3.600692,1.475127,-1.651634,9.533437,-5.437035,-6.568436,-8.524602,7.715458,3.475962,-0.404233,-1.928954,8.150828,-6.947630,-5.660829,-4.037482,8.555718,1.988757,-8.733444,1.558510,-7.891931,6.918773,9.075344,-6.148883,-2.280339,9.011103,4.949762,-6.025552,1.128656,4.220268,9.212869,3.792589,-4.480536,6.412432,-1.000645,-2.278115,4.358982,0.528871,-1.743168,1.980027,2.874693,0.251522,0.651220,-5.297448,-1.469667,-3.186098,1.367359,-6.724080,-9.059007,-0.228282,-7.132698,3.955185,9.891129,-1.912726,3.304959,-4.061449,5.310649,4.246538,7.727269,9.780891,0.351572,-2.510264,8.317126,-4.483210,-0.799678,-3.964753,-0.243011,-9.139955,-3.460725,4.087688,3.540062,-2.935246,1.750369,3.181646,2.278178,-9.596779,-5.419284,1.768421,5.291781,-4.721782,3.537927,6.086381,-4.513595,1.228974,-8.570890,-1.479021,-7.060677,-2.554953,-1.189382,-4.950784,-7.988123,7.990696,3.200580,-5.667784,-8.520219,3.973329,9.976286,7.926155,-1.776361,-1.242394,3.380299,-5.682320,-5.319419,1.948724,-0.492343,-8.718271,-5.819945,-3.452589,2.447528,6.780341,1.303088,5.279530,1.462750,-9.636131,1.469843,-7.169373,-4.460789,-7.455267,-9.426683,5.193166,5.666501,0.791215,4.882003,-1.323300,6.523529,3.940381,-9.117061,9.935149,3.759299,6.885149,6.164827,-0.462953,7.609355,-7.995191,-0.577420,-9.211456,1.873773,-2.994586,1.891249,2.516167,-6.940918,7.789607,9.162549,-4.804521,0.273330,1.425510,8.126495,-0.247266,-0.229852,-9.182132,-1.465546,1.444293,1.787611,3.227048,-5.248396,0.270753,1.192949,4.587976,7.102202,0.188179,5.126350,8.351533,-6.568237,1.989606,-7.036888,-6.048446,7.035413,7.341728,6.919389,4.795275,2.605214,-1.921729,-4.887822,-7.129216,6.248914,-9.321560,-9.203740,8.982834,6.773206,-3.659922,2.018729,-0.650744,-2.136411,6.914852,-2.164370,9.411846,5.402925,-5.203136,9.764102,4.015213,7.893521,9.839492,-8.826831,-7.629839,-4.369505,0.183019,7.164865,-4.471132,5.300981,8.779074,-8.738425,-3.184469,-4.677885,9.346279,1.933825,-2.990621,-9.800764,-8.861534,1.556277,-5.242715,5.795428,1.293620,-9.312896,-7.786966,9.314513,2.291820,-7.831032,2.039734,0.716006,-1.768261,1.596441,6.856362,9.354438,-6.266980,-8.519877,-7.794790,2.106116,3.855457,2.985348,9.237375,4.680737,-1.013236,-8.713550,8.631643,0.854331,-3.740728,-2.651075,-6.628596,-5.337368,-0.971454,-2.636459,-8.268976,-4.588637,0.620957,-9.409335,-0.197874,2.354206,7.821981,-5.296368,6.121341,1.575379,0.301106,2.760967,5.542141,-1.227536,3.046745,-3.456215,-2.564308,1.842334,-0.748747,7.520392], dtype = "float64")#candidate|10406|(300,)|const|float64
call_10405 = relay.TupleGetItem(func_8915_call(relay.reshape(const_10406.astype('float64'), [6, 10, 5])), 2)
call_10407 = relay.TupleGetItem(func_8918_call(relay.reshape(const_10406.astype('float64'), [6, 10, 5])), 2)
bop_10413 = relay.add(const_10377.astype('uint32'), relay.reshape(const_10378.astype('uint32'), relay.shape_of(const_10377))) # shape=(6, 11, 15)
func_4756_call = mod.get_global_var('func_4756')
func_4757_call = mutated_mod.get_global_var('func_4757')
call_10418 = func_4756_call()
call_10419 = func_4756_call()
bop_10434 = relay.floor_divide(const_10378.astype('float64'), relay.reshape(bop_10413.astype('float64'), relay.shape_of(const_10378))) # shape=(6, 11, 15)
output = relay.Tuple([bop_10379,call_10393,call_10405,const_10406,call_10418,bop_10434,])
output2 = relay.Tuple([bop_10379,call_10394,call_10407,const_10406,call_10419,bop_10434,])
func_10437 = relay.Function([], output)
mod['func_10437'] = func_10437
mod = relay.transform.InferType()(mod)
mutated_mod['func_10437'] = func_10437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10437_call = mutated_mod.get_global_var('func_10437')
call_10438 = func_10437_call()
output = call_10438
func_10439 = relay.Function([], output)
mutated_mod['func_10439'] = func_10439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6040_call = mutated_mod.get_global_var('func_6040')
call_10445 = func_6038_call()
call_10446 = func_6038_call()
func_8033_call = mod.get_global_var('func_8033')
func_8037_call = mutated_mod.get_global_var('func_8037')
const_10463 = relay.const([6.872328,-8.822631,9.550514,0.582198,-1.782990,2.955191,3.591244,-5.511839,-1.767185,6.051457,8.240653,-9.139580,1.578426,-5.226002,4.026958,-9.588324,5.780979,-8.753312,6.097681,-7.433437,8.670579,9.898698,-3.470569,4.466523,3.563007,-9.434711,-3.036745,-9.907329,-9.871218,4.382676,-2.525879,-2.814275,-3.924689,-6.626240,-5.873923,2.676364,-8.320859,4.969102,6.132840,1.456465,1.784321,8.833634,-3.045525,4.435293,-1.468836,-7.387794,-7.465834,-6.244928,-8.332966,1.878470,1.844666,-4.192862,1.436452,2.122741,-1.382960,-5.558761,-6.719768,-6.593684,6.212008,3.501634,-9.619982,-0.124305,-8.672206,7.054193], dtype = "float64")#candidate|10463|(64,)|const|float64
const_10464 = relay.const([-9.453380,-4.664462,8.298581,-6.792367,-7.036321,3.787268,-1.034578,9.422233,-9.212342,-0.733263,8.633429,7.728110,5.318416,-8.168942,3.323260,-1.293982,5.179778,-5.187284,-3.762360,-7.914577,9.868952,0.274344,5.529178,7.646028,6.795728,-9.155507,-4.904106,-3.237770,0.358270,-0.852795,-4.334979,-1.785539,9.871845,0.218909,8.068678,-7.467041,1.802115,-1.196546,-3.830326,-6.190142,8.234096,-0.897320,2.113672,-2.883578,2.500287,7.858224,4.387115,9.055200,-4.772626,-7.195628,5.927432,-0.665151,-0.083280,3.147688,-5.372469,-1.879379,6.931816,9.558621,5.957591,1.818254,-3.640463,-4.949776,-2.329654,-0.764108,-7.497418,-3.517712,7.437352,4.953494,4.288162,4.712580,-9.472593,-5.704683,-6.948993,-0.280082,1.443193,1.373259,1.950286,3.915706,9.663646,-2.187355,-6.602889,1.994254,-7.429538,8.056564,-2.453547,0.410287,-9.510840,-9.051971,-2.135364,-1.823446,-1.406523,7.709035,1.458235,9.240357,9.935202,5.375502,-5.387231,4.403161,3.624509,-7.433522,3.776768,-0.954760,5.470904,8.539367,-9.100420,3.916009,1.606532,-9.062469,0.969926,8.559171,6.527280,-4.415994,-0.752721,-4.463527,-7.125712,0.112337,7.626483,5.000085,-9.154106,-7.171045,-6.466306,5.791410,-4.334863,6.104289,8.041424,-1.856165,3.987808,-1.868485,0.210498,2.565707,6.191207,2.661959,-3.057630,-5.609150,1.816485,0.899332,-3.814476,6.068341,-6.186550,6.325663,-9.323725,4.992190,-5.481144,0.507224,-8.952760,-3.126923,0.899428,-9.159251,-6.425201,-3.317143,7.789250,-1.944087,-5.511944,0.348545,-3.651733,-8.181949,-0.915281,-5.460265,0.314070,-5.805013,-8.746469,5.576327,2.511256,6.476725,-9.400833,6.053248,-9.200574,-3.117483,-2.967554,9.528014,-7.146247,4.768645,1.884839,2.917372,1.225713,2.032634,-4.152746,1.605110,-1.624672,-1.155020,-8.506746,6.495762,3.145345,6.144059,1.769765,-6.909724,-1.828347,-4.429875,4.867247,-7.784648,-7.919425,-0.450386,-7.334087,-2.048568,-0.705700,-3.340136,-4.666637,7.596549,2.167273,1.046702,-2.004926,-6.622929,8.217442,-3.775458,-3.572780,5.164960,-9.904016,-7.087164,7.362239,-6.310888,0.725352,-1.684327,-7.896177,0.200215,-3.271048,-8.660485,-1.663509,5.394420,6.022632,-2.895877,-1.065209,-0.425411,2.127682,-2.834041,5.483463,-7.708934,9.783743,8.154468,1.195988,8.182592,3.759698,-0.851377,-8.586188,-8.758603,1.199027,3.824250,-2.704677,9.239591,-1.233057,2.878836,-8.358007,-2.738807,-2.647902,7.692227,-8.800959,-9.548992,-4.328434,8.717514,-9.271698,-8.814567,-4.499359,-9.249333,-1.815512,-8.735822,3.998906,-4.551361,-9.280098,8.273135,-1.061867,-9.475987,9.719289,9.385251,7.097323,-0.163212,-8.691856,4.150013,-2.220895,3.310308,7.268737,-6.023813,3.672889,-1.178043,9.618463,0.874572,-0.641434,5.060529,-4.532360,9.193895,4.495488,4.122450,5.315029,0.166990,-6.003576,-8.280031,-6.092044,-6.780110,7.088973,6.698277,-5.251064,4.105844,-0.642694,-9.479978,4.962552,-4.047489,6.352787,-1.716840,5.979885,3.738156,-2.981343,0.498844,-5.496954,0.250838,1.127014,-5.292361,1.023430,-4.761573,-0.105308,-9.179995,0.191976,8.469031,-2.174814,2.895525,1.748521,-2.399732,-5.605680,-4.201654,0.457984,-3.383401,3.852865,1.792685,-7.978183,-2.959196,-3.062349,-5.667425,-4.500470,0.290953,0.672219,-8.484084,2.879745,0.518042,-8.814544,-1.035400,2.045492,-4.630206,0.757755,4.466551,-7.443609,8.580215,-5.383597,-1.417771,7.786074,6.231433,-7.013602,6.148708,-8.093811,4.092047,-4.164065,6.839555,-3.089439,-9.508543,8.174194,-5.215667,-6.287193,-2.106830,0.738809,9.298190,-0.836190,-0.907399,-1.881874,-0.462708,-2.971782,7.262938,9.670995,-9.818925,0.726496,-9.765549,-3.310240,-9.109980,-7.373922,6.919533,3.110094,-5.985989,6.622644,-3.774567,-0.425616,2.020979,-1.140879,9.801663,4.701984,6.900455,8.301974,6.652412,-7.576739,-7.069651,-9.733960,4.239022,-5.175742,-5.976108,-3.690558,2.828206,1.722625,9.818133,4.028954,-9.253245,-9.600154,3.569906,1.961281,7.617373,-3.259860,-5.402684,6.338919,-5.590338,6.179414,0.128739,2.315846,-8.978509,9.494402,-0.817953,-8.526998,7.529973,6.483703,-1.736224,1.294530,-2.979717,5.507105,6.532673,-9.328875,-9.436052,-6.451679,7.720986,-5.399050,-9.940374,5.268611,6.809671,3.232796,-8.182873,8.468465,4.114675,-5.221511,4.967600,-5.199238,-8.572903,-2.243034,-7.691711,8.080983,2.993162,6.984039,5.339820,-6.090460,0.645131,-1.550318,-5.784914,-2.077681,-7.743800,-1.238888,8.804480,-4.766088,4.999889,-8.343862,5.174303,-8.381927,-7.361912,7.278627,-1.680432,-3.200330,5.882328,-3.873790,-4.756617,-6.698110,2.237406,-1.717449,2.230438,1.245764,-7.184972,3.024884,1.272855,-4.906805,0.569667,9.808325,0.475771,5.362028,-2.219995,9.433542,0.236303,-0.119556,-5.896727,4.465574,4.253421,-0.235353,-2.304055,-7.252512,4.087557,6.924767,-8.867362,1.546772,-6.070637,-2.084213,-6.848041,-8.928457,4.165057,-9.244931,3.054889,-3.298346,-6.019368,-9.148827,-3.280606,-5.390362,7.255976,-1.231031,0.973308,-9.626165,2.380822,-9.981267,-8.987885,5.141447,7.915049,2.641687,0.840266,-7.557518,-2.872185,-0.512226,3.672564,1.395897,0.106778,-3.486569,6.213645,-2.712289,1.470419,-7.664576,7.720173,-6.233076,8.708353,-3.561892,1.547516,9.085054,1.495222,-5.119194,-0.308345,-5.896951,0.497488,-6.984737,2.121150,0.027837,-8.364068,-2.120842,0.801023,-3.386035,-5.718241,4.513797,1.427473,1.319944,4.119169,7.659941,6.871809,1.606810,-7.304093,6.666936,-8.442940,2.612440,-3.800554,2.025352,-8.105665,9.979421,-1.621174,-0.551054,4.103226,-8.320420,5.528565,-5.157583,1.131833,2.714495,-6.144738,6.262992,-7.384511,0.359989,-3.766315,-4.881484,-2.300636,7.949823,4.800864,5.256741,-5.754279,6.992577,0.757461,-0.859880,7.513435,8.244769,6.597895,-7.864886,5.562082,-4.848450,-6.498230,-7.177873,-6.125815,0.646603,0.770583,-1.475933,6.786643,1.098338,-5.586597,8.835079,8.465009,0.383941,-2.460110,-5.726897,6.011593,6.330246,-9.377130,-1.302337,-0.130244,-9.698266,-1.912446,4.083722,-5.720121,0.453074,-9.128339,-2.056630,6.676808,-2.919116,3.017333,4.722532,-6.414360,9.823001,-8.146895,7.026958,2.132865,-7.759002,0.098427,7.570903,-3.062492,-2.765948,-6.477621,-0.410062,-2.195940,4.606750,-1.078121,-7.998210,6.097147,8.683992,6.370107,-3.920625,-7.488419,1.069540,-0.952282,2.101788,2.764538,-5.636553,-2.906486,5.608791,3.369266,-1.669698,6.691368,-1.932079,-1.473405,-0.642419,6.879797,3.767385,2.227543,3.960346,2.742807,-4.642228,-0.772781,-9.744843,8.853985,4.353633,-1.393932,-2.102017,-5.700197,9.468777,-9.773505,-7.150850,-5.999339,6.269540,-9.321770,-6.008643,5.741936,-1.299722,5.313278,-4.529151,-3.920157,7.262308,-1.161570,-4.755979,0.405441,2.787481,1.838145,2.864006,6.119167,6.460535,8.009238,-6.765712,-2.767610,-9.352811,6.204955,8.580001,-3.802789,7.858857,-7.505592,0.969086,3.591287,-0.051004,-2.416380,-3.377188,-3.134768,-4.154311,9.630894,5.861935,6.471901,2.254942,-3.310702,1.465141,-0.419656,4.405190,-7.467114,-1.762990,-6.956455,6.638446,-1.612498,-2.230675,1.000498,-5.775620,4.303403,4.206438,2.067895,-6.211092,8.211000,-7.217409,-8.364666,-3.785352,-3.128529,-8.444052,4.857046,5.118338,0.608739,8.894642,-1.159153,-9.048981,7.964588,1.648526,-9.096979,-1.016477,7.538839,5.213585,1.577458,-9.003369,-6.625293,-9.497073,-1.491994,8.395243,1.624069,1.359604,-7.664946,-9.510265,0.273791,-7.201978,4.211383,5.237385,4.868785,-4.871246,-9.943097,-5.150929,1.594612,0.645074,8.210242,1.500516,8.930682,-1.555331,-0.650773,7.556139,-9.262205,-8.008190,-7.705890,-4.014344,-4.337535,-3.109499,-9.102502,-0.572486,8.048174,8.973549,-0.795411,-3.413803,7.376964,-9.538061,6.327949,8.016782,5.787202,7.480547,8.560559,-9.651171,-3.808361,0.535764,1.597298,-7.643423,5.727875,7.289703,-3.768292,1.478964,1.490834,-6.566174,8.698515,-3.525910,9.208883,-8.875743,-6.123296,-9.493156,-2.528964,4.138498,9.851172,-2.695859,1.557185,0.157972,4.025063,-3.106040,-5.632692,9.994711,-7.082749,-8.945437,6.231627,0.470097,0.915539,-2.783983,6.518004,-5.558704,9.741119,4.576617,-2.854021,1.711636,5.704669,-8.454093,-2.170119,2.693714,-3.829395,-7.415012,-0.551256,0.421181,9.502251,1.850920,6.877036,-1.568795,9.898056,5.491376,-9.150013], dtype = "float64")#candidate|10464|(832,)|const|float64
call_10462 = relay.TupleGetItem(func_8033_call(relay.reshape(const_10463.astype('float64'), [64,]), relay.reshape(const_10464.astype('float64'), [832,]), ), 0)
call_10465 = relay.TupleGetItem(func_8037_call(relay.reshape(const_10463.astype('float64'), [64,]), relay.reshape(const_10464.astype('float64'), [832,]), ), 0)
func_7673_call = mod.get_global_var('func_7673')
func_7675_call = mutated_mod.get_global_var('func_7675')
var_10469 = relay.var("var_10469", dtype = "float32", shape = (224,))#candidate|10469|(224,)|var|float32
call_10468 = relay.TupleGetItem(func_7673_call(relay.reshape(var_10469.astype('float32'), [14, 2, 8])), 0)
call_10470 = relay.TupleGetItem(func_7675_call(relay.reshape(var_10469.astype('float32'), [14, 2, 8])), 0)
output = relay.Tuple([call_10445,call_10462,const_10463,const_10464,call_10468,var_10469,])
output2 = relay.Tuple([call_10446,call_10465,const_10463,const_10464,call_10470,var_10469,])
func_10482 = relay.Function([var_10469,], output)
mod['func_10482'] = func_10482
mod = relay.transform.InferType()(mod)
var_10483 = relay.var("var_10483", dtype = "float32", shape = (224,))#candidate|10483|(224,)|var|float32
output = func_10482(var_10483)
func_10484 = relay.Function([var_10483], output)
mutated_mod['func_10484'] = func_10484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10486 = relay.var("var_10486", dtype = "float32", shape = (11, 2, 4))#candidate|10486|(11, 2, 4)|var|float32
const_10487 = relay.const([[[-4.868366,-9.327497,9.940538,2.707085],[-4.341976,8.089772,-6.482314,7.789906]],[[-1.552324,-5.633839,6.059156,3.589535],[-7.344910,-8.748452,4.760721,-4.222792]],[[-4.616101,-7.742762,-3.721981,-2.771048],[-8.074129,4.065249,-9.289419,-1.083260]],[[-8.833799,9.441952,-9.061548,4.327335],[-6.430580,9.070564,-1.740051,-6.516263]],[[-7.051354,-7.579140,-5.770198,-4.765989],[-8.319139,8.741130,-5.143837,-3.634832]],[[-3.923097,0.580661,-7.739000,-2.305703],[-5.240512,9.816010,5.479555,7.733928]],[[-9.631576,2.810318,1.218047,-9.793204],[5.425622,-8.678417,6.223702,5.870268]],[[-9.137620,-0.022180,8.987459,7.939171],[-8.027671,-3.798104,-2.582856,-8.586348]],[[0.615413,-7.098054,1.154133,8.580988],[-7.288626,-2.768942,-8.791702,-1.701236]],[[-2.962645,5.894383,8.543723,-1.861004],[1.032535,1.784726,-3.945324,3.677083]],[[3.954459,-2.958998,-1.094775,-7.966328],[1.391665,-9.209080,-8.194003,-1.172158]]], dtype = "float32")#candidate|10487|(11, 2, 4)|const|float32
bop_10488 = relay.mod(var_10486.astype('float32'), relay.reshape(const_10487.astype('float32'), relay.shape_of(var_10486))) # shape=(11, 2, 4)
output = bop_10488
output2 = bop_10488
func_10491 = relay.Function([var_10486,], output)
mod['func_10491'] = func_10491
mod = relay.transform.InferType()(mod)
mutated_mod['func_10491'] = func_10491
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10492 = relay.var("var_10492", dtype = "float32", shape = (11, 2, 4))#candidate|10492|(11, 2, 4)|var|float32
func_10491_call = mutated_mod.get_global_var('func_10491')
call_10493 = func_10491_call(var_10492)
output = call_10493
func_10494 = relay.Function([var_10492], output)
mutated_mod['func_10494'] = func_10494
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10526 = relay.const([[[-1.816379,-8.020841,1.002272,-6.105672,-5.744576,4.313119,-2.395558,-8.234700,-9.218905],[-0.684184,6.997582,-3.673017,0.954898,8.540775,-8.922811,-8.949183,9.646433,2.137314],[6.326871,8.732721,7.348674,9.063413,5.455516,-1.393372,9.354242,-5.948007,4.110057],[-7.361134,6.670563,1.842679,-7.577361,-4.349121,-4.363009,6.315351,-0.697524,-8.999455],[4.553592,0.403123,4.803090,-0.416195,4.458839,9.615302,3.130848,1.095446,8.530858]],[[-3.201512,-0.148872,-3.248169,-4.565488,-5.443317,-9.141771,3.017946,0.582810,-7.986183],[-4.046834,2.650137,-4.019204,-9.728623,-5.999204,-8.066280,-2.519351,-2.692424,8.360973],[8.360655,-5.081690,-9.944165,-4.337145,-8.577557,9.102782,0.810911,1.753176,6.993751],[4.681967,3.213350,8.796601,-4.837795,-2.837939,9.804528,3.567653,-7.568933,-4.300746],[-3.180719,-5.703564,-6.171617,-4.620681,4.664987,3.299835,0.009741,-2.799218,-2.382947]],[[-1.263520,7.936809,9.676356,-1.014963,8.269066,-4.938347,-2.531216,5.075985,5.390574],[-0.375270,5.027116,7.853252,-5.563865,4.764151,1.247480,-7.560920,-0.252789,6.223947],[-8.427276,-2.640684,-9.810363,-1.709405,-2.486035,7.471913,1.191795,5.116650,1.935311],[0.881614,7.261948,-0.634759,3.305017,-8.721705,-9.671284,0.665022,2.454116,-3.348176],[9.926979,-4.110361,-9.634289,5.964266,8.607623,-8.487114,-4.047615,-6.348387,7.568247]],[[-6.658100,-8.715746,-8.495041,-2.869007,3.019804,-1.412580,6.982014,-5.506175,5.321740],[2.014359,4.815334,3.543832,9.551761,6.097168,4.226129,-3.659583,9.252760,-1.150987],[6.735389,-6.166872,-8.983975,8.622636,-9.560547,-3.291751,-1.467249,-8.901382,-4.135712],[-6.335835,4.867640,-1.739281,-5.228532,9.273104,7.425565,3.053573,-0.850375,2.981151],[-5.441324,9.752856,5.172717,-4.678233,1.199131,2.402338,-1.495370,-9.094036,6.870597]],[[-1.757022,6.062089,-2.241364,2.570110,-1.848926,2.671197,3.268521,-6.816241,-9.967989],[-7.996047,4.751734,5.008151,2.054226,-5.228048,-5.152568,-4.692463,9.383554,-6.949949],[-2.192163,-8.356763,1.264735,8.993807,3.834170,5.236457,3.024206,4.041695,-9.266511],[5.331249,-1.281193,9.484895,1.111101,-3.167413,8.763002,-0.106259,-1.882629,-4.392809],[-5.783792,-9.264324,5.416921,3.764404,5.646197,-4.740950,-9.586762,-6.628912,7.272052]]], dtype = "float32")#candidate|10526|(5, 5, 9)|const|float32
uop_10527 = relay.atan(const_10526.astype('float32')) # shape=(5, 5, 9)
uop_10535 = relay.sigmoid(const_10526.astype('float32')) # shape=(5, 5, 9)
bop_10555 = relay.maximum(const_10526.astype('int64'), relay.reshape(uop_10535.astype('int64'), relay.shape_of(const_10526))) # shape=(5, 5, 9)
bop_10559 = relay.floor_mod(uop_10527.astype('float64'), relay.reshape(bop_10555.astype('float64'), relay.shape_of(uop_10527))) # shape=(5, 5, 9)
func_8521_call = mod.get_global_var('func_8521')
func_8525_call = mutated_mod.get_global_var('func_8525')
const_10571 = relay.const([-8.633871,7.515155,-1.505399,9.640229,4.837409,1.920162,-3.282571,2.495868,5.707505,-2.372231,5.329284,0.186366,-7.996545,-3.628912,-7.545610,-1.286326,-7.747441,1.776824,1.841271,7.418482,-5.423459,-4.444013,-0.564639,1.326821,4.028329,0.150391,-9.943398,-9.326836,5.937303,-6.358347,8.818313,-5.106755,-9.370961,-1.851861,0.356740,5.033601,-4.801756,-9.931192,2.056304,2.786947,8.234032,8.388498,1.625330,8.901959,3.885023,-1.044231,-9.903214,-9.056813,6.689727,-2.341506,-4.502974,-0.630742,4.627977,-1.442932,-2.720925,7.274456,-8.523734,9.779177,7.770817,-2.646933,-0.684555,5.415117,6.636781,-2.436911,-9.625592,9.801609,-9.676986,9.520105,-5.020728,-5.433733,9.911028,6.246941,-1.345825,-9.107078,0.813194,-3.494052,4.361127,-6.187060,-5.651137,9.406360,5.892957,7.088209,8.034896,-2.027130,-5.949694,-2.480323,-9.778607,0.957033,5.950790,-3.814054,-3.809463,-1.751663,-0.523281,4.844287,2.538578,5.111723,9.261576,-5.391036,-7.102209,8.217739,3.837144,-6.328773,5.627012,8.962313,0.649352,1.858098,-6.568886,-8.956363,-7.693738,6.839829,-1.770315,-6.059253,-5.181031,-4.323227,7.473511,8.144130,-5.376596,3.651216,-4.723156,-7.827029,-4.601057,5.043428,7.899369,-8.098038,4.060800,-9.867357,-3.209625,-1.194097,9.539454,5.196371,-6.240256,-5.620820,2.645467,-3.020459,-4.604623,0.189457,-2.018171,1.021120,-5.267761,8.502066,-6.387997,-2.011960,-2.088779,3.129845,6.119421,0.238666,7.503557,-3.049374,7.321233,-6.253074,5.874889,-6.103552,3.276085,-5.321728,6.775396,4.751331,2.169379,3.828005,-4.754681,5.674085,9.303051,2.799412,-0.065219,2.142975,-5.267452,8.157485,-0.553879,9.017787,-0.396762,3.140719,7.763289,0.006413,-8.825274,8.317632,9.925745,6.370272,2.646520,0.829694,-0.562188,5.008138,6.734941,7.955750,-3.549022,3.091521,-3.503566,9.970303,9.559610,-6.954546,5.427183,6.093904,-7.517734,1.497156,6.811437,-7.983981,-3.920251,1.878697,-8.993654,7.253492,2.949974,7.066993,3.281714,-2.246407,1.229003,6.925023,-5.008660,8.561998,7.438464,-0.079196,-5.025561,-0.535018,-5.248038,-4.658097,-1.903044,1.051850,-6.747720,6.771974,2.758858,-0.409378,-0.744283,2.019315,-1.049295,-1.653780,-2.615827,3.280753,3.946235,7.815741,4.125014,-5.668721,0.846125,2.217324,0.240250,3.653720,-1.746093,5.190160,0.082538,3.073333,-1.619099,1.091763,-7.420927,5.121521,7.355859,9.583145,-2.239754,-8.356423,-8.878865,9.352353,6.700511,-3.040501,-4.077853,-9.467835,7.691355,-6.052615,3.312366,-6.839049,-2.871000,0.618225,-4.205858,-4.924376,4.819915,-2.503433,-6.281979,8.295995,-9.829639,-2.065630,9.335986,3.198984,-8.559575,-0.419733,1.298719,-4.512416,-0.749981,6.556351,-6.003144,0.712696,0.771122,8.266594,4.463043,1.745732,1.739760,8.521413,-4.740485,4.513126,-8.228776,4.508691,-6.540092,4.751607,4.101246,6.631383,-6.964892,5.024505,-9.186848,4.902727,3.481181,0.213634,-3.294086,-2.103858,7.671232,-2.728165,4.172204,-4.305410,9.022056,7.485068,-6.556015,-1.747915,5.823392,-8.128167,8.463325,-3.762811,-1.326753,2.695635,-5.916985,-4.150112,9.403320,1.208892,-7.388038,-3.723046,3.688771,-6.517770,-2.619736,-6.725581,4.489002,2.243350,-1.556941,7.579702,4.169469,-8.048437,-0.482973,-3.175878,3.116927,7.764181,1.044136,4.791448,9.255130,-5.655534,-1.920368,5.345313,-6.957212,-8.729072,-1.301055,0.029296,-3.872204,5.740004,-9.111228,-0.191195,8.277858,0.291054,7.043312,3.426563,5.538651,-7.205509,-5.303664,1.448398,-4.236703,-5.838057,3.841166,1.299854,0.419242,6.272297,-5.627115,1.015072,5.620782,-9.875430,2.992290,7.948445,0.052347,-9.519081,4.628327,-9.958521,-5.392840,3.876002,0.100642,3.455557,4.225734,-2.855198,4.294898,-6.646090,0.077955,3.953463,-2.238216,7.437303,4.331677,-8.585558,8.197054,-4.592194,3.674346,2.197988,-5.454164,6.391314,4.466974,3.510410,0.008327,3.488500,-8.354773,7.332604,4.276948,4.515256,-0.751793,-0.541677,-9.257048,3.583143,-5.355548,-0.009069,-0.987010,-2.154601,-2.712018,-7.184102,9.558305,-0.299853,-3.422387,5.560735,-5.463550,-8.555920,-1.396081,-1.291886,-2.202068,-8.460095,-2.930195,5.918091,-0.623987,1.601059,-2.293244,-6.636359,0.798031,1.969913,-5.876710,-7.541659,7.064915,4.592495,7.239545,7.817095,-3.497315,-9.410684,-6.979709,8.695856,1.597692,0.290777,-8.540812,-0.110395,-4.982280,0.508775,-8.062890,8.812873,3.789976,8.104844,-8.376891,-3.036087,-9.997358,-4.323923,-0.629851,8.011636,-6.982565,0.998742,-1.469177,-5.413808,-5.767255,3.489721,4.877272,-8.410004,0.229698,5.638969,-4.730345,-5.821209,-3.018370,-9.643540,-0.622009,7.197139,-3.772371,1.539949,-7.393181,-9.469760,-2.290243,5.655699,-8.749372,-9.483400,2.045450,-6.219610,3.427487,-5.674997,7.625135,-8.869093,-7.880575,-6.937029,0.501964,2.949590,0.520321,-2.675140,4.699316,-8.714938,2.073400,6.086886,-7.862591,4.094917,9.644183,-7.489395,-6.021343,-1.827704,-4.148409,3.576393,6.717879,6.314957,-2.608145,-8.039433,1.980719,-9.743046,2.786064,6.603995,4.355232,7.202543,-4.832625,6.185613,-0.383808,1.702878,-5.351823,-5.444780,5.214795,-1.408597,4.334715,8.052436,5.250438,-6.598460,9.710756,4.025783,-9.461666,8.214527,-5.410181,4.899438,2.039753,8.888583,9.321809,3.868698,9.350921,8.486999,-1.081704,3.162593,-4.621353,-3.079837,7.247410,-2.486314,-7.340619,-4.974154,-8.451867,2.972362,-5.924633,8.527103,6.823369,-1.657234,-5.976463,3.460270,-4.076534,2.301056,-0.035928,-0.743083,0.248995,6.170243,1.195537,-6.277530,0.732545,1.927199,-6.616614,-6.696361,1.185916,-4.601130,-1.274010,-2.627054,-2.381938,9.501439,1.079573,-4.064234,-3.129569,-8.169868,0.432805,3.170788,-5.886140,-7.000064,2.836494,-8.567441,8.436991,-5.967202,6.209874,-1.391837,-0.512800,-5.750028,3.719636,-3.387066,5.685785,2.707208,6.016215,0.507782,7.020658,-2.372931,-7.960030,0.675165,8.345478,0.992019,-2.515734,-6.116597,4.970444,-9.334060,0.726663,-0.310551,7.254650,2.667795,-4.276597,5.708561,-5.666483,-1.021991,-8.986730,-3.965857,-8.621668,-6.259978,7.803281,0.375221,-3.069076,-0.425702,2.555594,-6.736291,-2.273685,1.970373,-0.552327,2.985772,1.740688,-3.554506,2.231163,4.882856,-9.675293,9.147911,3.147851,1.215866,-1.117264,8.909413,-9.105126,2.931656,-0.367965,-6.965971,4.417836,7.389413,5.534215,-6.339118,5.034296,-7.545514,-2.228470,1.756964,1.594026,9.708234,-0.004965,7.694800,-5.630588,-0.199583,9.894772,6.552795,-8.388217,8.100578,-5.537124,-2.136769,-3.139813,-8.435311,-9.664735,-3.030511,-8.835565,-1.289804,-3.334078,8.677743,-4.899987,6.103587,-6.490996,-4.901523,-0.244254,3.263976,3.011580,-8.991671,-4.080144,-9.814371,-0.727979,-0.364717,-9.796242,-6.042913,-7.556358,7.575568,1.140544,0.338449,-2.756932,-9.422180,8.382764,7.148116,9.827443,-6.884636,-6.893115,6.399618,4.479606,8.630404,-6.208790,5.919111,-9.093400,9.590036,2.384053,3.308181,-7.268137,-4.558646,4.352821,-5.221653,6.304930,8.482196,-6.728551,8.371733,-5.973783,3.535610,-1.585466,-7.674115,-1.670070,-7.041108,-1.032777,8.346592,1.327718,-8.229004,2.186362,1.849208,-5.557162,8.282719,4.209037,-5.763508], dtype = "float64")#candidate|10571|(720,)|const|float64
const_10572 = relay.const([[-1.946050,-8.806476,3.540702,7.644721,8.224719,-7.658201,8.964464,6.221100,3.332182,8.559504,-4.289296,1.228991,1.158352,-7.331781,-2.683009,-1.710066,8.432707,9.501461,8.595218,4.182042,6.273689,-9.780162,-5.138887,4.078133,1.083900,-6.939253,-1.917625,5.510894,-6.278724,1.873962,-8.928146,-8.878448,2.497769,-8.176591,-5.036055,4.365920,-8.724783,-1.329427,6.899821,-3.300106,9.812729,-5.956032,-8.226506,7.125807,-9.699170,7.706058,-9.297964,-0.961416,4.594160,-7.013267,2.260071,9.198214,3.020536,-1.229929,1.857737,-8.892336,8.237928,-7.937629,-1.458767,-5.743171,2.246535,5.127845,3.809539,0.103528,7.092082,-0.759623,2.886203,-7.000143,-0.778020,-5.471269,9.947321,-7.215171,8.820760,-7.662368,-9.613119,-5.573301,-4.380418,5.550747,-9.934416,-9.752748,-0.619732,-8.694699,-8.428113,-7.376819,9.630569,-6.060036,2.601483,3.682075,-2.829750,-9.528365,-4.739583,-0.874878,7.471344,8.231323,-7.227543,5.576909,-3.509749,-6.356927,-1.943624,4.561289,1.712395,-5.872146,-3.928363,-0.686258,4.773767,6.300817,2.024721,-4.318893,1.625902,-4.449481,2.389147,-2.278977,7.876155,-8.375751,-0.122247,6.387735,6.392093,-1.524850,9.479522,-2.338663,-8.800226,1.021807,5.520091,-8.827218,8.800971,-3.281703,-9.304451,-4.530569,-8.051000,4.475863,2.674590,-2.734674,-9.773427,-1.090611,4.770992,-2.344191,9.094719,-4.692173,0.615242,4.968377,4.594718,9.904540,7.934778,-8.892218,-7.364266,-2.370888,-5.641616,-9.570209,8.963877,2.571298,-5.773040,-3.837576,4.510171,-2.007834,8.725388,5.645660,-6.723345,-6.253512,-6.127003,3.503407,-8.282299,-4.706590,-2.442089,3.636146,-3.319798,8.141206,-5.001315,-5.428931,-8.723169,-4.371821,-2.777235,-5.329299,-0.604425,-0.055188,0.532309,0.267460,2.391075,2.783168,2.472439,-2.822234,6.805990,-5.471949,2.263551,0.681641,1.764453,-4.822292,3.686184,-7.677031,7.943057,-4.792473,-8.756131,9.113061,-6.275736,-2.851244,1.718724,3.879833,-3.571841,1.619258,-1.788984,0.989315,-1.171525,4.769648,-7.783349,-9.742982,1.609890,8.007035,-0.885077,0.946784,2.717563,-8.801643,-6.359523,4.296746,2.942519,6.643304,8.608842,-5.313808,-2.852691,7.325912,8.904349,-5.448293,-1.671459,5.830708,-3.295494,2.435155,-8.623067,4.350661,6.432525,8.393447,3.052809,-8.480529,5.177819,-1.587805,3.402465,-1.649207,0.941023,2.738138,-8.532510,5.145371,7.133740,-1.360434,-2.389545,9.615679,-6.659883,1.394579,5.962944,-8.676625,-4.568237,-0.033939,-3.209670,-9.385662,9.536335,-6.074955,-2.358020,9.289159,-1.992809,2.631033,5.744406,3.235779,3.433421,4.022944,-6.583571,1.414794,-2.894757,-5.045838,7.774726,4.523255,-3.318269,-9.987883,3.640987,4.815736,-2.673794,-8.462352,1.827633,6.796427,-9.580530,9.277930,0.184425,3.628711,-6.889671,-4.215226,9.533842,-3.212489,6.153528,-0.307809,-8.386256,2.856470,9.689312,-3.472910,8.365740,5.923292,-0.207943,-6.495879,-1.489110,-4.652849,-4.678840,-0.413699,-1.364035,4.166414,6.947317,-0.289777,0.996537,-9.246946,2.048811,3.823566,6.778279,6.759037,8.571208,6.990422,4.337387,-3.319768,-1.912217,1.809297,-5.958740,8.836660,1.254667,6.742297,2.122212,0.035431,5.767044,7.555665,4.217357,-0.051317,-7.618847,-9.843955,8.242322,1.990119,0.288467,-6.710037,-9.694797,-1.831681,0.585273,-3.971027,0.521514,-4.296312,3.541621,3.292219,-0.101550,2.823177,3.099957,-9.880737,4.337575,5.473827,1.000197,-0.132698,5.210142,8.131954,-8.833890,5.514063,6.696681,-4.016929,1.344251,8.895057,-0.394700,-6.267234,2.796285,-1.033683,8.615892,8.129472,-8.190459,-5.653332,-6.278737,-0.987930,2.929891,9.081468,7.741049,0.747236,9.484174,-5.429783,-0.461063,-6.743222,-8.477230,-3.924750,-4.091060,-3.930283,7.882108,-9.563901,-8.085218,-8.717621,-5.128256,-6.151877,-2.352306,-8.003686,-3.808017,3.458372,4.510867,-4.675593,-5.972241,7.053229,2.150360,0.839951,-1.511848,-9.488798,3.929059,5.811881,-2.175015,2.918775,8.646900,6.599860,2.060735,-1.944033,-1.691915,-3.066713,8.743209,6.058086,9.676591,7.003783,-9.640385,-8.470595,9.610318,2.836483,4.306241,-6.017239,-5.856998,-8.706611,-8.417095,-9.638479,-8.034553,9.176893,4.506515,-5.017500,-9.845667,-4.471233,7.819037,-0.468754,-0.259024,9.617392,-9.884469,7.068758,2.460264,-2.815968,-0.527110,-3.703125,0.635466,5.978157,-8.124067,6.416495,6.212200,3.087986,-5.593619,0.636975,2.118382,-8.678698,-4.973844,-2.110717,-5.010665,3.497699,9.353005,7.603095,-1.091416,3.241258,-0.276974,0.342472,2.983066,-8.853061,-9.670227,-9.220381,-8.914603,5.918581,-9.214636,-7.396977,0.136595,-6.027044,5.788545,5.519368,-8.679857,-3.360289,-9.916368,-6.966511,-1.345809,1.358739,2.594417,-9.416011,7.810547,-4.890590,5.702962,-6.891666,4.596481,-6.400938,-0.058274,-2.262989,-9.888526,5.805674,-2.497862,-9.056488,-9.134920,5.479471,-4.192095,-4.300129,5.063089,3.470365,5.578546,9.751944,-3.130233,-7.944336,-9.510906,5.269933,6.927813,6.125465,2.802923,1.680430,9.479295,7.949304,-6.012417,1.531849,-5.405328,2.702354,-5.961053,-4.978934,-1.373092,2.451100,1.608645,1.425732,0.726705,-6.214524,1.071845,9.009275,-2.848851,-7.293010,-8.379432,3.274074,-1.059429,-2.450128,0.971491,-9.903794,6.040862,-6.435003,-8.624874,-1.127378,-2.008078,-1.926493,-3.311757,9.235269,-3.759265,0.354716,1.483034,-5.236640,0.483940,2.041436,5.421147,-6.096013]], dtype = "float64")#candidate|10572|(1, 540)|const|float64
const_10573 = relay.const([8.626510,-8.666440,5.937204,8.154015,-4.313784,9.251744,-0.037942,3.834375,7.892348,3.942175,-7.015773,6.976324,-4.922107,5.931302,8.921739,-5.520143,-2.531781,-7.115047,1.428526,2.112060,-4.798003,3.942569,7.265116,7.734796,-6.228794,-5.781194,3.304464,-2.413483,8.825625,2.836034,2.385230,0.815076,-3.270546,-2.407541,3.159155,5.476176,-4.842995,-3.949197,7.141941,-1.599327,8.980151,4.974581,-5.404762,-6.233764,3.058745,-6.132646,9.726645,-6.630341,-6.127127,-0.696579,-1.265991,5.033044,-3.733283,-6.553130,4.399339,6.497937,9.840056,7.379971,-2.960230,-6.430093,-3.271399,1.686306,-8.919437,9.339299,-3.061965,7.912001,-8.030791,8.793740,-4.120513,-6.953326,-8.937364,-8.982749,-8.621916,1.241410,-8.918961,-2.326551,2.280398,-9.366401,6.191584,-1.527363,2.933717,-8.880776,-7.656468,-7.504655,-4.484479,7.093183,-9.086443,-6.555067,9.576568,-4.260257,0.057603,-9.521871,-2.768546,3.326190,0.532252,1.940678,2.271758,-8.562500,5.249034,-7.433187,5.689744,-4.016276,-5.417351,5.498079,-5.304300,4.661791,-2.967038,-5.151948,-3.594391,8.130419,6.330115,3.220015,-4.407964,9.523705,-5.706968,3.415353,8.467981,-6.808109,4.552070,4.033652,5.546005,9.991279,9.749719,-4.890802,0.121533,1.316947,-2.185913,0.337683,-9.976261,-7.708802,7.379141,-1.902156,6.237547,-4.695064,-7.099845,-2.086635,-0.715477,-1.563884,-5.349553,0.298099,-8.041948,-7.892366,3.452184,5.527989,-8.552142,1.901852,-0.751125,-3.486376,-2.543439,-6.353813,6.640384,-9.356448,-2.934121,1.390578,4.649885,4.365641,1.054817,-0.746490,4.641321,-3.898352,5.725534,0.691843,7.066760,2.016796,-6.123252,3.256124,-5.449035,3.702502,-2.923649,5.905905,-8.394838,8.699800,0.106582,-3.226794,4.259028,-3.515267,-8.863007,-5.956757,-7.400432,1.397801,7.808459,-0.651439,-3.805873,3.059572,-9.816406,-8.372746,1.454795,-5.410339,1.309118,5.040801,8.500697,9.547919,-9.063316,9.701984,6.272023,0.386531,7.625465,5.337167,-2.292948,-1.904028,9.619611,7.011674,-7.475982,9.987084,-1.237843,7.815349,0.133065,-2.795759,-6.032211,-1.358075,-3.103020,4.940619,5.235851,-7.458694,0.122864,-0.572524,2.674254,6.809804,2.083597,-1.673561,3.401930,5.129788,-6.765944,-8.572690,4.522961,9.628618,0.802971,-3.307588,0.121724,-3.580890,6.991180,9.430843,-1.675870,5.500222,-0.858620,8.192393,0.608219,-3.193604,-7.179170,-9.665090,1.563628,-3.271643,-7.890387,5.853344,3.609922,-7.037635,-0.064478,0.898922,-8.565153,-3.096478,-7.069215,5.383248,-2.774598,-8.046659,-5.734497,-5.280331,-4.512187,-9.713795,8.519096,-7.218295,3.693066,-9.525945,-2.504981,-9.929067,-5.328426,6.240993,5.878278,-7.778088,-8.031398,-4.343481,6.824849,-9.701510,6.326520,2.699920,-8.224012,5.903846,-3.256688,0.912708,-4.515459,-0.093572,-1.159235,4.684881,-6.481460,5.589601,-6.903708,4.475310,4.919666,0.007303,2.886283,6.704107,-9.512523,1.081812,-4.540667,-6.463131,8.045574,0.416942,-6.111322,0.076910,-7.798687,-2.741635,-1.658674,7.716654,0.242519,1.043649,4.931139,6.424931,8.243316,-1.182167,4.254194,-1.555876,0.827968,0.010254,7.410577,-0.622734,8.261061,-4.674491,2.944486,9.465352,4.101036,5.838638,-4.555291,-0.401888,9.520530,9.915910,0.729270,9.725785,-9.759156,4.261305,2.543462,4.842001,-0.217796,0.517251,1.535453,-5.004212,1.790306,9.965109,-1.755605,5.828295,8.222359,0.909885,3.534434,6.298713,3.933704,8.919808,9.121713,0.167782,-1.636725,4.701915,-3.113851,-1.476864,5.405834,2.093858,-1.287582,1.911022,6.486810,-6.057596,-7.956387,-0.013905,-1.005585,-1.620435,0.572551,8.132296,-0.651779,5.222935,7.689066,-1.161149,-8.425841,-8.833404,9.388066,-7.976885,-7.372326,0.910322,-0.079758,-8.927828,5.885682,-8.279046,5.792279,-7.411230,-9.817790,-7.965834,-1.518076,-7.830525,-4.702026,8.868833,1.779600,-5.558975,-4.130236,-2.201323,-6.575879,-2.995888,5.462387,-8.074092,-5.872219,4.253838,-1.732126,-2.626174,-5.243451,2.977628,-6.596552,-6.995946,-3.619096,5.861812,-6.932138,-0.021097,9.770362,-3.332185,2.503751,5.147749,-7.079510,3.268904,-7.484105,4.288261,-6.039793,7.087352,5.179033,-0.714597,-9.559218,-9.144735,2.816033,3.368221,8.934577,-1.210917,-2.407581,2.665092,-7.892907,-9.882890,-1.959111,7.836293,-9.376098,4.829386,5.479325,-2.393034,-0.951037,-2.540976,0.320947,-0.363992,-2.356365,7.245946,-4.423757,9.965133,0.282867,9.257030,3.528022,3.294464,7.685049,1.105994,-5.689210,-6.150782,-8.334153,9.266964,7.391880,8.984343,-6.359617,-6.539826,2.309574,7.984727,8.312169,-9.484118,9.947489,1.702573,6.365549,0.863361,-2.452619,-6.192744,3.216967,-9.511930,5.971781,-9.857301,-0.734270,-3.665919,-7.288071,5.414853,-2.121142,-2.576800,5.336121,-4.370447,-1.611116,-4.966010,9.909037,2.929582], dtype = "float32")#candidate|10573|(480,)|const|float32
call_10570 = relay.TupleGetItem(func_8521_call(relay.reshape(const_10571.astype('float64'), [720,]), relay.reshape(const_10572.astype('float64'), [540,]), relay.reshape(const_10573.astype('float32'), [480,]), ), 7)
call_10574 = relay.TupleGetItem(func_8525_call(relay.reshape(const_10571.astype('float64'), [720,]), relay.reshape(const_10572.astype('float64'), [540,]), relay.reshape(const_10573.astype('float32'), [480,]), ), 7)
bop_10576 = relay.right_shift(bop_10559.astype('int32'), relay.reshape(uop_10535.astype('int32'), relay.shape_of(bop_10559))) # shape=(5, 5, 9)
output = relay.Tuple([call_10570,const_10571,const_10572,const_10573,bop_10576,])
output2 = relay.Tuple([call_10574,const_10571,const_10572,const_10573,bop_10576,])
func_10587 = relay.Function([], output)
mod['func_10587'] = func_10587
mod = relay.transform.InferType()(mod)
mutated_mod['func_10587'] = func_10587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10587_call = mutated_mod.get_global_var('func_10587')
call_10588 = func_10587_call()
output = call_10588
func_10589 = relay.Function([], output)
mutated_mod['func_10589'] = func_10589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10022_call = mod.get_global_var('func_10022')
func_10023_call = mutated_mod.get_global_var('func_10023')
call_10633 = func_10022_call()
call_10634 = func_10022_call()
func_10022_call = mod.get_global_var('func_10022')
func_10023_call = mutated_mod.get_global_var('func_10023')
call_10643 = func_10022_call()
call_10644 = func_10022_call()
func_6274_call = mod.get_global_var('func_6274')
func_6276_call = mutated_mod.get_global_var('func_6276')
call_10645 = func_6274_call()
call_10646 = func_6274_call()
output = relay.Tuple([call_10633,call_10643,call_10645,])
output2 = relay.Tuple([call_10634,call_10644,call_10646,])
func_10672 = relay.Function([], output)
mod['func_10672'] = func_10672
mod = relay.transform.InferType()(mod)
mutated_mod['func_10672'] = func_10672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10672_call = mutated_mod.get_global_var('func_10672')
call_10673 = func_10672_call()
output = call_10673
func_10674 = relay.Function([], output)
mutated_mod['func_10674'] = func_10674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10191_call = mod.get_global_var('func_10191')
func_10192_call = mutated_mod.get_global_var('func_10192')
call_10710 = func_10191_call()
call_10711 = func_10191_call()
func_8643_call = mod.get_global_var('func_8643')
func_8645_call = mutated_mod.get_global_var('func_8645')
call_10712 = relay.TupleGetItem(func_8643_call(), 0)
call_10713 = relay.TupleGetItem(func_8645_call(), 0)
output = relay.Tuple([call_10710,call_10712,])
output2 = relay.Tuple([call_10711,call_10713,])
func_10739 = relay.Function([], output)
mod['func_10739'] = func_10739
mod = relay.transform.InferType()(mod)
mutated_mod['func_10739'] = func_10739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10739_call = mutated_mod.get_global_var('func_10739')
call_10740 = func_10739_call()
output = call_10740
func_10741 = relay.Function([], output)
mutated_mod['func_10741'] = func_10741
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10748 = relay.const([[[10,6,-1,4,-6,-3,-4,-5],[3,-6,-5,-3,8,3,-2,-2],[6,-2,3,-9,9,-6,-6,-2],[6,-8,-2,1,5,-6,8,-1],[3,3,3,7,-5,7,-1,-10],[6,-10,-1,10,5,-2,3,-9],[-1,4,-6,6,-3,3,-9,-3],[-3,3,3,9,-9,-3,6,-9],[-6,-1,-4,-6,-9,3,5,4],[8,-3,3,1,5,-4,-7,10],[-6,10,9,8,-6,-7,-6,9],[2,-7,4,-7,-3,9,-4,5],[-1,1,-10,7,10,5,9,-2],[-7,-4,-6,-9,-1,-10,9,-4]],[[-10,-10,6,6,-3,3,-6,3],[-5,-6,7,3,6,-3,-9,-7],[4,9,7,7,8,-4,-9,10],[3,9,1,-7,3,4,-1,-3],[2,-6,-9,1,-6,-2,3,1],[5,-5,9,-3,-6,-6,-2,1],[-1,1,1,-7,-8,-2,-10,6],[-10,-4,-4,3,6,6,-8,-9],[5,7,5,-5,-3,-5,-9,-10],[1,9,-1,-7,4,6,-4,9],[9,7,1,7,6,-9,-3,5],[-1,1,-7,-10,6,2,-2,-9],[-8,3,6,-5,1,9,-3,8],[-9,7,-9,-8,4,3,1,-5]],[[8,-2,9,9,1,4,4,-7],[2,10,2,6,-6,-10,-3,-7],[4,-5,7,4,6,4,-1,5],[-5,-5,-3,-3,-2,-7,9,-3],[-3,5,-6,10,9,2,-2,-3],[3,6,-3,-4,-1,9,5,4],[-2,-8,9,10,1,-6,-2,4],[1,9,8,-8,-4,-10,10,-9],[-2,-3,-6,-9,-7,-9,-7,4],[2,1,-7,-2,5,2,-5,-8],[-7,-10,-3,9,5,1,-3,-10],[-6,-7,-10,-8,1,10,10,-5],[-10,1,7,5,7,3,-9,-5],[2,10,8,-8,-7,-7,10,-5]],[[10,-4,-3,6,-5,2,-2,10],[10,7,-9,9,5,2,-7,-6],[10,-3,-10,-7,-9,-8,-9,-4],[-8,6,-6,-3,2,-6,4,-5],[3,9,8,6,-6,-6,-3,-3],[1,-10,6,-8,1,-7,-8,-9],[-2,-2,-6,-8,5,9,-4,2],[-4,2,8,-8,6,5,-8,4],[-5,-2,9,5,-4,5,-9,-5],[9,-2,-7,-9,-4,6,-9,3],[1,4,7,-3,8,-3,4,7],[-5,-4,9,-7,6,-6,6,-6],[7,6,-1,-7,6,5,7,-5],[3,5,1,-5,-7,-1,-10,-9]],[[-8,3,3,-10,1,9,7,10],[-3,2,-9,2,-5,7,9,2],[-1,9,-6,-1,4,5,-5,-1],[-10,-2,-9,-4,-7,-2,9,6],[-1,-3,3,4,-5,-9,1,-9],[-5,1,7,-10,6,-3,-8,-4],[5,5,-1,-5,5,-7,6,-1],[-6,6,-8,8,-8,1,-1,4],[2,5,-8,10,-6,4,-10,2],[-7,-1,-5,-3,1,1,-8,-1],[-4,-6,7,-8,2,5,-4,9],[-5,10,-9,-7,6,-4,4,-7],[-10,-1,-8,9,8,1,1,5],[8,10,-8,-8,6,3,7,-8]],[[-4,5,-7,-1,10,-9,1,1],[-1,9,-9,-8,-2,6,-10,8],[3,-5,2,5,7,3,10,-1],[6,-2,10,-9,-8,10,9,-1],[3,-5,1,7,6,8,-5,-8],[-1,-5,10,-3,-10,8,3,4],[-5,-3,8,4,1,1,5,6],[-10,8,6,10,-4,-5,-8,-5],[7,9,9,3,-7,5,-4,7],[3,-3,5,-4,2,8,-10,2],[4,-5,5,2,-2,2,-7,9],[-4,-8,8,10,1,1,-4,9],[6,-8,3,3,-6,-1,-5,2],[5,-10,1,-6,-9,-4,-1,10]],[[8,-10,-7,-4,9,-3,-8,-8],[4,7,-10,-8,9,4,4,9],[10,-10,-2,10,-2,8,10,4],[-5,-1,-3,6,10,3,-1,-5],[4,10,4,9,-2,7,-4,8],[-1,2,6,7,7,-10,-4,1],[-2,4,-2,-1,10,8,8,-3],[3,-4,-3,-6,3,-9,5,-7],[-3,-3,5,-9,4,1,1,5],[-9,-6,-10,-3,10,-1,3,2],[-10,9,2,10,-3,-10,-5,10],[-3,-6,-9,-7,-2,6,6,-9],[4,2,6,-4,7,5,8,-5],[4,-8,-2,-3,-3,10,-8,10]],[[1,-10,5,7,-7,-3,-10,9],[-4,6,-2,-2,2,8,5,6],[9,-2,-9,8,1,-4,-2,4],[10,1,3,-6,-7,6,2,5],[-7,8,6,-3,-9,-10,10,8],[6,-9,-5,5,-1,4,-3,9],[-6,8,-4,10,10,6,-4,7],[6,-2,-2,10,9,1,5,-6],[6,4,6,5,4,3,8,1],[-7,2,1,5,8,-4,5,-3],[-5,-4,2,5,3,-5,2,-2],[10,-10,-7,-1,-2,-9,6,-1],[10,-1,5,8,6,6,1,8],[-3,2,-3,5,9,-6,6,5]],[[-3,8,-2,5,-4,-9,10,-8],[-4,-10,-3,-6,-1,-9,-8,-4],[-1,-8,-3,-5,3,-3,1,-3],[-10,-6,2,-7,-2,9,-1,2],[7,8,-2,-6,9,7,1,-5],[-5,-5,-2,-9,9,6,-4,3],[-8,-1,6,-5,-7,4,-4,-10],[-9,7,7,6,7,7,10,-1],[5,-9,1,5,-6,-7,-10,-1],[-2,-10,4,7,10,1,8,-8],[-5,-3,1,-6,8,7,-10,7],[-7,-3,3,-2,-3,-2,-6,3],[7,2,3,5,3,9,2,-7],[3,10,9,-10,5,-5,-2,6]],[[4,7,6,-1,6,2,6,-7],[-7,-6,8,-9,7,6,2,-1],[8,4,-2,2,-4,5,4,-10],[8,-9,1,-7,-2,2,-5,-10],[2,10,8,-3,-6,6,-10,-3],[2,3,10,6,7,7,10,6],[1,8,-7,6,9,7,8,-10],[-2,4,4,-5,7,-2,1,-2],[5,-4,3,10,-1,3,-7,-10],[5,4,-5,2,-2,10,4,6],[2,-4,9,8,10,-9,-6,9],[-2,-5,-1,8,1,7,-10,5],[-4,-8,10,2,9,9,10,-1],[9,9,10,5,5,-7,8,6]],[[8,4,-10,-1,10,8,-6,-2],[2,-8,9,6,-9,9,-4,9],[9,-3,10,9,4,1,6,-6],[5,3,-9,-9,3,-6,-3,2],[-8,2,-8,9,-10,-1,-4,-5],[3,4,-8,-2,9,9,-1,-3],[-5,-7,5,7,6,2,-7,8],[6,5,5,4,-3,5,5,5],[4,-4,-9,6,9,5,4,7],[7,3,-9,-5,1,8,-9,-5],[4,2,2,-9,6,8,-9,-10],[-9,6,2,-10,-1,-9,1,1],[-5,1,1,-10,-3,-6,5,9],[-1,-2,6,5,4,8,-8,-3]],[[4,-2,-3,1,-1,10,-5,10],[2,10,-7,7,-9,-7,4,1],[3,2,-4,-3,1,2,10,5],[-5,-4,-10,-4,-6,5,10,-9],[-9,-10,-5,9,8,-6,-3,-4],[6,1,-9,-4,-3,-4,-4,7],[-5,8,3,7,-9,10,4,8],[-2,-5,-3,5,-9,-2,-3,8],[-7,-9,4,-2,1,-2,-7,-4],[-1,-9,9,4,-4,-2,-5,-6],[-9,-5,-3,3,-2,-10,7,-10],[-4,-5,-5,-2,3,-8,8,-3],[1,7,6,9,-5,6,2,10],[-5,10,2,-10,7,3,4,-10]]], dtype = "int64")#candidate|10748|(12, 14, 8)|const|int64
var_10749 = relay.var("var_10749", dtype = "int64", shape = (12, 14, 8))#candidate|10749|(12, 14, 8)|var|int64
bop_10750 = relay.minimum(const_10748.astype('int64'), relay.reshape(var_10749.astype('int64'), relay.shape_of(const_10748))) # shape=(12, 14, 8)
func_4133_call = mod.get_global_var('func_4133')
func_4136_call = mutated_mod.get_global_var('func_4136')
var_10755 = relay.var("var_10755", dtype = "float32", shape = (392,))#candidate|10755|(392,)|var|float32
call_10754 = relay.TupleGetItem(func_4133_call(relay.reshape(var_10755.astype('float32'), [392,])), 5)
call_10756 = relay.TupleGetItem(func_4136_call(relay.reshape(var_10755.astype('float32'), [392,])), 5)
func_8643_call = mod.get_global_var('func_8643')
func_8645_call = mutated_mod.get_global_var('func_8645')
call_10761 = relay.TupleGetItem(func_8643_call(), 0)
call_10762 = relay.TupleGetItem(func_8645_call(), 0)
bop_10764 = relay.right_shift(bop_10750.astype('uint32'), relay.reshape(const_10748.astype('uint32'), relay.shape_of(bop_10750))) # shape=(12, 14, 8)
output = relay.Tuple([call_10754,var_10755,call_10761,bop_10764,])
output2 = relay.Tuple([call_10756,var_10755,call_10762,bop_10764,])
F = relay.Function([var_10749,var_10755,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10749,var_10755,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

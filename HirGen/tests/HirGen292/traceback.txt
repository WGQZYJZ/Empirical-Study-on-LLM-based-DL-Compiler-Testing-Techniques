==========mod==========
#[version = "0.0.5"]
def @func_7535() -> (Tensor[(6, 4, 3), float32], Tensor[(?, 28), float32], Tensor[(15, 6, 5), int16], Tensor[(1, 450), int16]) {
  %0 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 450), int16] */, dtype="int16") /* ty=Tensor[(1, 450), int16] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 450), int16] */, dtype="int16") /* ty=Tensor[(1, 450), int16] */;
  %3 = reshape(%1, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %4 = reshape(%2, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %5 = @func_54(%3, %4) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
  %6 = %0.0;
  %7 = @func_5342() /* ty=Tensor[(?, 28), float32] */;
  %8 = %5.0;
  (%6, %7, %8, meta[relay.Constant][0] /* ty=Tensor[(1, 450), int16] */)
}

def @func_7294(%var_7283: Tensor[(1600), float32]) -> (Tensor[(450), int16], Tensor[(16, 10, 10), float32], Tensor[(1600), float32], Tensor[(15, 6, 5), int16]) {
  %9 = @func_5409() /* ty=(Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) */;
  %10 = cast(%var_7283, dtype="float32") /* ty=Tensor[(1600), float32] */;
  %11 = reshape(%10, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), float32] */;
  %12 = @func_2886(%11) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) */;
  %13 = %9.0;
  %14 = %12.0;
  %15 = @func_5381() /* ty=Tensor[(15, 6, 5), int16] */;
  (%13, %14, %var_7283, %15)
}

def @func_2604(%var_2587: float32, %var_2590: Tensor[(28), float32]) -> (Tensor[(10, 12, 8), float32], Tensor[(4, 1, 4), float32], Tensor[(48), float32], Tensor[(450), int16], float32, Tensor[(1, 4, 7), float32], Tensor[(28), float32]) {
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(10, 12, 8), float32] */;
  %17 = cast(meta[relay.Constant][2] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %18 = cast(meta[relay.Constant][3] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %19 = cast(%var_2587, dtype="float32") /* ty=float32 */;
  %20 = reshape(%17, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), float32] */;
  %21 = reshape(%18, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %22 = reshape(%19, newshape=[]) /* ty=float32 */;
  %23 = @func_507(%20, %21, %22) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(4, 1, 4), float32], Tensor[(12, 4, 16), float32], Tensor[(12, 4, 450), uint8], Tensor[(12, 4, 450), float32]) */;
  %24 = cast(%var_2590, dtype="float32") /* ty=Tensor[(28), float32] */;
  %25 = reshape(%24, newshape=[1, 4, 7]) /* ty=Tensor[(1, 4, 7), float32] */;
  %26 = @func_986(%25) /* ty=(Tensor[(1, 4, 7), float32],) */;
  %27 = acosh(%16) /* ty=Tensor[(10, 12, 8), float32] */;
  %28 = %23.3;
  %29 = %26.0;
  (%27, %28, meta[relay.Constant][2] /* ty=Tensor[(48), float32] */, meta[relay.Constant][3] /* ty=Tensor[(450), int16] */, %var_2587, %29, %var_2590)
}

def @func_5293() -> Tensor[(6, 4, 3), float32] {
  %30 = @func_4983() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %30.0
}

def @func_972(%var_962: Tensor[(7, 14, 10), uint64], %var_963: Tensor[(7, 14, 10), uint64]) -> Tensor[(7, 14, 10), int8] {
  %31 = cast(%var_963, dtype="bool") /* ty=Tensor[(7, 14, 10), bool] */;
  %32 = shape_of(%var_962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%var_962, dtype="bool") /* ty=Tensor[(7, 14, 10), bool] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %35 = not_equal(%33, %34) /* ty=Tensor[(7, 14, 10), bool] */;
  %36 = cast(%var_963, dtype="int8") /* ty=Tensor[(7, 14, 10), int8] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="int8") /* ty=Tensor[(7, 14, 10), int8] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%38, %39) /* ty=Tensor[(7, 14, 10), int8] */
}

def @func_6014(%var_5993: Tensor[(198), int16]) -> (Tensor[(15, 6, 5), int16], Tensor[(2, 9, 11), bool], Tensor[(198), int32]) {
  %40 = cast(%var_5993, dtype="int16") /* ty=Tensor[(198), int16] */;
  %41 = cast(%var_5993, dtype="int16") /* ty=Tensor[(198), int16] */;
  %42 = reshape(%40, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), int16] */;
  %43 = reshape(%41, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), int16] */;
  %44 = cast(meta[relay.Constant][4] /* ty=Tensor[(198), int16] */, dtype="int32") /* ty=Tensor[(198), int32] */;
  %45 = shape_of(%var_5993, dtype="int32") /* ty=Tensor[(1), int32] */;
  %46 = cast(%var_5993, dtype="int32") /* ty=Tensor[(198), int32] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?), int32] */;
  %48 = @func_5801() /* ty=Tensor[(15, 6, 5), int16] */;
  %49 = @func_2361(%42, %43) /* ty=Tensor[(2, 9, 11), bool] */;
  %50 = logical_xor(%46, %47) /* ty=Tensor[(198), int32] */;
  (%48, %49, %50)
}

def @func_5939(%var_5871: Tensor[(728), int8], %var_5887: Tensor[(11, 28), bool], %var_5904: Tensor[(9, 54), float64], %var_5905: Tensor[(640), float32], %var_5934: Tensor[(84), float64]) -> (Tensor[(6, 4, 3), float32], Tensor[(?, 28), float32], Tensor[(16), float32], Tensor[(14, 4, 13), int8], Tensor[(728), int8], Tensor[(6, 4, 3), float32], Tensor[(11, 28), float32], Tensor[(10, 16, 4), float64], Tensor[(9, 54), float64], Tensor[(640), float32], Tensor[(11, 28), float64], Tensor[(1, 14, 6), float64], Tensor[(84), float64]) {
  %51 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %52 = cast(%var_5871, dtype="int8") /* ty=Tensor[(728), int8] */;
  %53 = cast(%var_5871, dtype="int8") /* ty=Tensor[(728), int8] */;
  %54 = reshape(%52, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), int8] */;
  %55 = reshape(%53, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), int8] */;
  %56 = @func_4983() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %57 = cast(meta[relay.Constant][5] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %58 = reshape(%57, newshape=[16]) /* ty=Tensor[(16), float32] */;
  %59 = @func_5060(%58) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(16), float32]) */;
  %60 = %59.2;
  %61 = cast(%var_5887, dtype="float32") /* ty=Tensor[(11, 28), float32] */;
  %62 = cast(%60, dtype="float32") /* ty=float32 */;
  %63 = cast(%var_5904, dtype="float64") /* ty=Tensor[(9, 54), float64] */;
  %64 = cast(%var_5905, dtype="float32") /* ty=Tensor[(640), float32] */;
  %65 = cast(%var_5904, dtype="float32") /* ty=Tensor[(9, 54), float32] */;
  %66 = reshape(%63, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float64] */;
  %67 = reshape(%64, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %68 = reshape(%65, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float32] */;
  %69 = @func_1862(%66, %67, %68) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(9, 9, 6), float64], Tensor[(9, 9, 6), uint16]) */;
  %70 = cast(%var_5887, dtype="float32") /* ty=Tensor[(11, 28), float32] */;
  %71 = sigmoid(%70) /* ty=Tensor[(11, 28), float32] */;
  %72 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %73 = %72.1;
  %74 = cast(%73, dtype="float64") /* ty=Tensor[(?, 28), float64] */;
  %75 = cast(%var_5887, dtype="float64") /* ty=Tensor[(11, 28), float64] */;
  %76 = multiply(%74, %75) /* ty=Tensor[(11, 28), float64] */;
  %77 = cast(%76, dtype="float64") /* ty=Tensor[(11, 28), float64] */;
  %78 = shape_of(%71, dtype="int32") /* ty=Tensor[(2), int32] */;
  %79 = cast(%71, dtype="float64") /* ty=Tensor[(11, 28), float64] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %81 = cast(%var_5934, dtype="float64") /* ty=Tensor[(84), float64] */;
  %82 = reshape(%81, newshape=[1, 14, 6]) /* ty=Tensor[(1, 14, 6), float64] */;
  %83 = @func_5008(%82) /* ty=(Tensor[(1, 14, 6), float64],) */;
  %84 = %51.0;
  %85 = @func_5342() /* ty=Tensor[(?, 28), float32] */;
  %86 = @func_899(%54, %55) /* ty=Tensor[(14, 4, 13), int8] */;
  %87 = %56.0;
  %88 = floor_mod(%61, %62) /* ty=Tensor[(11, 28), float32] */;
  %89 = %69.0;
  %90 = floor_divide(%79, %80) /* ty=Tensor[(11, 28), float64] */;
  %91 = %83.0;
  (%84, %85, meta[relay.Constant][5] /* ty=Tensor[(16), float32] */, %86, %var_5871, %87, %88, %89, %var_5904, %var_5905, %90, %91, %var_5934)
}

def @func_7237() -> Tensor[(?, 28), bool] {
  %92 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %92.1
}

def @func_5594() -> Tensor[(?, 28), bool] {
  %93 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
  %93.0
}

def @func_5503(%var_5495: Tensor[(9, 8), float64], %var_5496: Tensor[(9, 8), float64]) -> (Tensor[(9, 8), float64],) {
  %94 = cast(%var_5496, dtype="float64") /* ty=Tensor[(9, 8), float64] */;
  %95 = shape_of(%var_5495, dtype="int32") /* ty=Tensor[(2), int32] */;
  %96 = cast(%var_5495, dtype="float64") /* ty=Tensor[(9, 8), float64] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %98 = floor_mod(%96, %97) /* ty=Tensor[(9, 8), float64] */;
  (%98,)
}

def @func_7086(%var_7067: float32, %var_7069: Tensor[(135), float32]) -> (Tensor[(9, 5, 3), float32], float32, Tensor[(27), float32], Tensor[(135), float32], Tensor[(15, 6, 5), float32]) {
  %99 = cast(%var_7067, dtype="float32") /* ty=float32 */;
  %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %101 = cast(%var_7069, dtype="float32") /* ty=Tensor[(135), float32] */;
  %102 = reshape(%99, newshape=[]) /* ty=float32 */;
  %103 = reshape(%100, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %104 = reshape(%101, newshape=[9, 5, 3]) /* ty=Tensor[(9, 5, 3), float32] */;
  %105 = @func_5783() /* ty=Tensor[(15, 6, 5), int16] */;
  %106 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 6, 5), int16] */, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %107 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%105, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %110 = @func_5096(%102, %103, %104) /* ty=Tensor[(9, 5, 3), float32] */;
  %111 = floor_divide(%108, %109) /* ty=Tensor[(15, 6, 5), float32] */;
  (%110, %var_7067, meta[relay.Constant][6] /* ty=Tensor[(27), float32] */, %var_7069, %111)
}

def @func_4298(%var_4262: Tensor[(16, 5, 16), float32], %var_4268: Tensor[(2, 32), float32]) -> (Tensor[(16, 5, 16), float32], Tensor[(2, 32), float32], Tensor[(4, 4, 4), float64]) {
  %112 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 16), float32] */;
  %113 = shape_of(%var_4262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%var_4262, dtype="float32") /* ty=Tensor[(16, 5, 16), float32] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %116 = cast(%var_4268, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
  %117 = reshape(%116, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %118 = @func_2038(%117) /* ty=(Tensor[(4, 4, 4), float32],) */;
  %119 = %118.0;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
  %121 = floor_divide(%114, %115) /* ty=Tensor[(16, 5, 16), float32] */;
  %122 = cos(%120) /* ty=Tensor[(4, 4, 4), float64] */;
  (%121, %var_4268, %122)
}

def @func_1095(%var_1076: Tensor[(14, 16, 12), int32], %var_1077: Tensor[(14, 16, 12), int32]) -> (Tensor[(14, 16, 12), bool],) {
  %123 = cast(%var_1077, dtype="bool") /* ty=Tensor[(14, 16, 12), bool] */;
  %124 = shape_of(%var_1076, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%var_1076, dtype="bool") /* ty=Tensor[(14, 16, 12), bool] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %127 = less_equal(%125, %126) /* ty=Tensor[(14, 16, 12), bool] */;
  (%127,)
}

def @func_2038(%var_2027: Tensor[(4, 4, 4), float32]) -> (Tensor[(4, 4, 4), float32],) {
  %128 = cast(%var_2027, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
  %129 = asin(%128) /* ty=Tensor[(4, 4, 4), float32] */;
  (%129,)
}

def @func_5801() -> Tensor[(15, 6, 5), int16] {
  @func_5783() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_2702(%var_2693: Tensor[(9, 4, 1), float64]) -> (Tensor[(9, 4, 1), float64],) {
  %130 = cast(%var_2693, dtype="float64") /* ty=Tensor[(9, 4, 1), float64] */;
  %131 = atanh(%130) /* ty=Tensor[(9, 4, 1), float64] */;
  (%131,)
}

def @func_5381() -> Tensor[(15, 6, 5), int16] {
  %132 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
  %132.1
}

def @func_538(%var_513: Tensor[(13, 15, 3), float64], %var_523: Tensor[(450), int16]) -> (Tensor[(13, 15, 3), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) {
  %133 = cast(%var_513, dtype="float64") /* ty=Tensor[(13, 15, 3), float64] */;
  %134 = cast(%var_523, dtype="int16") /* ty=Tensor[(450), int16] */;
  %135 = cast(%var_523, dtype="int16") /* ty=Tensor[(450), int16] */;
  %136 = reshape(%134, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %137 = reshape(%135, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %138 = @func_54(%136, %137) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
  %139 = rsqrt(%133) /* ty=Tensor[(13, 15, 3), float64] */;
  %140 = %138.1;
  (%139, %140, %var_523)
}

def @func_5176() -> (Tensor[(10, 9, 16), float32],) {
  %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %142 = acosh(%141) /* ty=Tensor[(10, 9, 16), float32] */;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %144 = sinh(%143) /* ty=Tensor[(10, 9, 16), float32] */;
  (%144,)
}

def @func_2361(%var_2356: Tensor[(2, 9, 11), int16], %var_2357: Tensor[(2, 9, 11), int16]) -> Tensor[(2, 9, 11), bool] {
  %145 = cast(%var_2357, dtype="bool") /* ty=Tensor[(2, 9, 11), bool] */;
  %146 = shape_of(%var_2356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%var_2356, dtype="bool") /* ty=Tensor[(2, 9, 11), bool] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%147, %148) /* ty=Tensor[(2, 9, 11), bool] */
}

def @func_6226() -> Tensor[(15, 6, 5), int16] {
  @func_5381() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_2525(%var_2496: uint64, %var_2497: Tensor[(1, 14, 16), uint64]) -> (Tensor[(1, 14, 16), uint64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) {
  %149 = cast(%var_2496, dtype="uint64") /* ty=uint64 */;
  %150 = cast(%var_2497, dtype="uint64") /* ty=Tensor[(1, 14, 16), uint64] */;
  %151 = cast(meta[relay.Constant][10] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %153 = reshape(%151, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %154 = reshape(%152, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %155 = @func_54(%153, %154) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
  %156 = logical_xor(%149, %150) /* ty=Tensor[(1, 14, 16), uint64] */;
  %157 = %155.1;
  (%156, %157, meta[relay.Constant][10] /* ty=Tensor[(450), int16] */)
}

def @func_2886(%var_2880: Tensor[(16, 10, 10), float32]) -> (Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) {
  %158 = cast(%var_2880, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
  %159 = cast(%var_2880, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
  %160 = log(%158) /* ty=Tensor[(16, 10, 10), float32] */;
  %161 = log2(%159) /* ty=Tensor[(16, 10, 10), float32] */;
  (%160, %161)
}

def @func_7376() -> (Tensor[(?, 28), bool],) {
  %162 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
  %163 = %162.0;
  %164 = @func_6182() /* ty=(Tensor[(6, 4, 3), float32], float32) */;
  %165 = %164.1;
  %166 = cast(%163, dtype="bool") /* ty=Tensor[(?, 28), bool] */;
  %167 = cast(%165, dtype="bool") /* ty=bool */;
  %168 = greater(%166, %167) /* ty=Tensor[(?, 28), bool] */;
  (%168,)
}

def @func_3651(%var_3626: int8) -> (Tensor[(13, 6, 1), int8], Tensor[(13, 6, 1), bool]) {
  %169 = cast(%var_3626, dtype="int8") /* ty=int8 */;
  %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 6, 1), int8] */, dtype="int8") /* ty=Tensor[(13, 6, 1), int8] */;
  %171 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 6, 1), int8] */, dtype="bool") /* ty=Tensor[(13, 6, 1), bool] */;
  %172 = cast(%var_3626, dtype="bool") /* ty=bool */;
  %173 = bitwise_and(%169, %170) /* ty=Tensor[(13, 6, 1), int8] */;
  %174 = equal(%171, %172) /* ty=Tensor[(13, 6, 1), bool] */;
  (%173, %174)
}

def @func_5409() -> (Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) {
  %175 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
  %176 = cast(meta[relay.Constant][12] /* ty=Tensor[(780), bool] */, dtype="bool") /* ty=Tensor[(780), bool] */;
  %177 = cast(meta[relay.Constant][12] /* ty=Tensor[(780), bool] */, dtype="bool") /* ty=Tensor[(780), bool] */;
  %178 = reshape(%176, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), bool] */;
  %179 = reshape(%177, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), bool] */;
  %180 = @func_874(%178, %179) /* ty=(Tensor[(13, 6, 10), bool],) */;
  %181 = cast(8.12692f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %182 = cast(meta[relay.Constant][13] /* ty=Tensor[(28, 1), float32] */, dtype="float32") /* ty=Tensor[(28, 1), float32] */;
  %183 = reshape(%181, newshape=[]) /* ty=float32 */;
  %184 = reshape(%182, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %185 = @func_2604(%183, %184) /* ty=(Tensor[(10, 12, 8), float32], Tensor[(4, 1, 4), float32], Tensor[(48), float32], Tensor[(450), int16], float32, Tensor[(1, 4, 7), float32], Tensor[(28), float32]) */;
  %186 = %175.2;
  %187 = %180.0;
  %188 = %185.3;
  (%186, %187, meta[relay.Constant][12] /* ty=Tensor[(780), bool] */, %188, 8.12692f /* ty=float32 */, meta[relay.Constant][13] /* ty=Tensor[(28, 1), float32] */)
}

def @func_5759() -> Tensor[(15, 6, 5), int16] {
  %189 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
  %189.1
}

def @func_54(%var_37: Tensor[(15, 6, 5), int16], %var_44: Tensor[(15, 6, 5), int16]) -> (Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) {
  %190 = cast(meta[relay.Constant][14] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %191 = cast(%var_37, dtype="int16") /* ty=Tensor[(15, 6, 5), int16] */;
  %192 = cast(%var_44, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %193 = shape_of(%var_37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_37, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %196 = left_shift(%190, %191) /* ty=Tensor[(15, 6, 5), int16] */;
  %197 = mod(%194, %195) /* ty=Tensor[(15, 6, 5), float32] */;
  (%196, %197)
}

def @func_6573(%var_6554: Tensor[(13, 6, 10), bool]) -> (Tensor[(13, 6, 10), float32], Tensor[(13, 6, 10), bool], Tensor[(450), int16]) {
  %198 = @func_5409() /* ty=(Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) */;
  %199 = %198.1;
  %200 = cast(%199, dtype="float32") /* ty=Tensor[(13, 6, 10), float32] */;
  %201 = log2(%200) /* ty=Tensor[(13, 6, 10), float32] */;
  %202 = cast(%201, dtype="float32") /* ty=Tensor[(13, 6, 10), float32] */;
  %203 = cast(%var_6554, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %204 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%199, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %207 = @func_6038() /* ty=(Tensor[(450), int16],) */;
  %208 = sin(%202) /* ty=Tensor[(13, 6, 10), float32] */;
  %209 = less(%205, %206) /* ty=Tensor[(13, 6, 10), bool] */;
  %210 = %207.0;
  (%208, %209, %210)
}

def @func_4699() -> (Tensor[(?, 28), bool],) {
  %211 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %212 = %211.1;
  (%212,)
}

def @func_986(%var_980: Tensor[(1, 4, 7), float32]) -> (Tensor[(1, 4, 7), float32],) {
  %213 = cast(%var_980, dtype="float32") /* ty=Tensor[(1, 4, 7), float32] */;
  %214 = sinh(%213) /* ty=Tensor[(1, 4, 7), float32] */;
  (%214,)
}

def @func_3052(%var_3026: Tensor[(1, 1, 15), float32], %var_3030: Tensor[(11, 1, 15), float32]) -> (Tensor[(11, 1, 15), float32],) {
  %215 = cast(%var_3026, dtype="float32") /* ty=Tensor[(1, 1, 15), float32] */;
  %216 = exp(%215) /* ty=Tensor[(1, 1, 15), float32] */;
  %217 = cast(%216, dtype="int32") /* ty=Tensor[(1, 1, 15), int32] */;
  %218 = cast(%var_3030, dtype="int32") /* ty=Tensor[(11, 1, 15), int32] */;
  %219 = add(%217, %218) /* ty=Tensor[(11, 1, 15), int32] */;
  %220 = cast(%219, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %221 = cast(%216, dtype="float32") /* ty=Tensor[(1, 1, 15), float32] */;
  %222 = maximum(%220, %221) /* ty=Tensor[(11, 1, 15), float32] */;
  %223 = cast(%222, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %224 = acos(%223) /* ty=Tensor[(11, 1, 15), float32] */;
  (%224,)
}

def @func_7261(%var_7254: Tensor[(11, 28), bool]) -> (Tensor[(11, 28), bool],) {
  %225 = @func_5594() /* ty=Tensor[(?, 28), bool] */;
  %226 = cast(%225, dtype="bool") /* ty=Tensor[(?, 28), bool] */;
  %227 = cast(%var_7254, dtype="bool") /* ty=Tensor[(11, 28), bool] */;
  %228 = less_equal(%226, %227) /* ty=Tensor[(11, 28), bool] */;
  (%228,)
}

def @func_4527() -> (Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) {
  %229 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 4, 3), float32] */;
  %230 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 28), float32] */, dtype="float32") /* ty=Tensor[(1, 28), float32] */;
  %231 = reshape(%230, newshape=[1, 4, 7]) /* ty=Tensor[(1, 4, 7), float32] */;
  %232 = @func_986(%231) /* ty=(Tensor[(1, 4, 7), float32],) */;
  %233 = %232.0;
  %234 = cast(%233, dtype="bool") /* ty=Tensor[(1, 4, 7), bool] */;
  %235 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(1, 28), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %236 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 28), float32] */, dtype="bool") /* ty=Tensor[(1, 28), bool] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %238 = cos(%229) /* ty=Tensor[(6, 4, 3), float32] */;
  %239 = less(%236, %237) /* ty=Tensor[(?, 28), bool] */;
  (%238, %239)
}

def @func_4882() -> (Tensor[(6, 4, 3), float32],) {
  %240 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %241 = %240.0;
  (%241,)
}

def @func_6886() -> (Tensor[(10, 9, 16), float32],) {
  %242 = @func_5176() /* ty=(Tensor[(10, 9, 16), float32],) */;
  %243 = %242.0;
  (%243,)
}

def @func_7046(%var_7002: Tensor[(486), float64]) -> (Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(486), bool]) {
  %244 = cast(%var_7002, dtype="float64") /* ty=Tensor[(486), float64] */;
  %245 = cast(meta[relay.Constant][17] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %246 = cast(%var_7002, dtype="float32") /* ty=Tensor[(486), float32] */;
  %247 = reshape(%244, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float64] */;
  %248 = reshape(%245, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %249 = reshape(%246, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float32] */;
  %250 = @func_1862(%247, %248, %249) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(9, 9, 6), float64], Tensor[(9, 9, 6), uint16]) */;
  %251 = @func_5409() /* ty=(Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) */;
  %252 = %251.4;
  %253 = cast(%var_7002, dtype="bool") /* ty=Tensor[(486), bool] */;
  %254 = cast(%252, dtype="bool") /* ty=bool */;
  %255 = %250.0;
  %256 = less_equal(%253, %254) /* ty=Tensor[(486), bool] */;
  (%255, meta[relay.Constant][17] /* ty=Tensor[(640), float32] */, %256)
}

def @func_5636() -> (Tensor[(15, 6, 5), int16], Tensor[(13, 6, 1), int64]) {
  %257 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
  %258 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %259 = reshape(%258, newshape=[]) /* ty=int8 */;
  %260 = @func_3651(%259) /* ty=(Tensor[(13, 6, 1), int8], Tensor[(13, 6, 1), bool]) */;
  %261 = %260.1;
  %262 = cast(%261, dtype="int16") /* ty=Tensor[(13, 6, 1), int16] */;
  %263 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="int16") /* ty=int16 */;
  %264 = logical_xor(%262, %263) /* ty=Tensor[(13, 6, 1), int16] */;
  %265 = cast(%264, dtype="int64") /* ty=Tensor[(13, 6, 1), int64] */;
  %266 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="int64") /* ty=int64 */;
  %267 = %257.1;
  %268 = add(%265, %266) /* ty=Tensor[(13, 6, 1), int64] */;
  (%267, %268)
}

def @func_7463(%var_7454: Tensor[(450), int16]) -> (Tensor[(9, 8, 11), float64], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16]) {
  %269 = @func_6378() /* ty=(Tensor[(?, 28), bool], Tensor[(9, 8, 11), bool], float32) */;
  %270 = %269.1;
  %271 = cast(%270, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  %272 = cast(meta[relay.Constant][19] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %273 = cast(%var_7454, dtype="int16") /* ty=Tensor[(450), int16] */;
  %274 = reshape(%272, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), float64] */;
  %275 = reshape(%273, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %276 = @func_538(%274, %275) /* ty=(Tensor[(13, 15, 3), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) */;
  %277 = atan(%271) /* ty=Tensor[(9, 8, 11), float64] */;
  %278 = %276.2;
  (%277, %278, meta[relay.Constant][19] /* ty=Tensor[(585), float64] */, %var_7454)
}

def @func_3451(%var_3442: Tensor[(48), float32]) -> (Tensor[(5, 7, 11), bool], float32, Tensor[(108), float32], Tensor[(48), float32]) {
  %279 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 7, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 11), float32] */;
  %280 = sin(%279) /* ty=Tensor[(5, 7, 11), float32] */;
  %281 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 7, 11), float32] */, dtype="bool") /* ty=Tensor[(5, 7, 11), bool] */;
  %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%280, dtype="bool") /* ty=Tensor[(5, 7, 11), bool] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %285 = cast(meta[relay.Constant][21] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %286 = cast(%var_3442, dtype="float32") /* ty=Tensor[(48), float32] */;
  %287 = reshape(%285, newshape=[6, 3, 6]) /* ty=Tensor[(6, 3, 6), float32] */;
  %288 = reshape(%286, newshape=[12, 4]) /* ty=Tensor[(12, 4), float32] */;
  %289 = @func_1982(%287, %288) /* ty=(Tensor[(6, 3, 6), float32], Tensor[(4, 1, 4), float32], Tensor[(12, 4), float32], Tensor[(450), int16], float32) */;
  %290 = less(%283, %284) /* ty=Tensor[(5, 7, 11), bool] */;
  %291 = %289.4;
  (%290, %291, meta[relay.Constant][21] /* ty=Tensor[(108), float32] */, %var_3442)
}

def @func_1982(%var_1966: Tensor[(6, 3, 6), float32], %var_1972: Tensor[(12, 4), float32]) -> (Tensor[(6, 3, 6), float32], Tensor[(4, 1, 4), float32], Tensor[(12, 4), float32], Tensor[(450), int16], float32) {
  %292 = cast(%var_1966, dtype="float32") /* ty=Tensor[(6, 3, 6), float32] */;
  %293 = cast(%var_1972, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %294 = cast(meta[relay.Constant][22] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %295 = cast(-7.47773f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %296 = reshape(%293, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), float32] */;
  %297 = reshape(%294, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %298 = reshape(%295, newshape=[]) /* ty=float32 */;
  %299 = @func_507(%296, %297, %298) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(4, 1, 4), float32], Tensor[(12, 4, 16), float32], Tensor[(12, 4, 450), uint8], Tensor[(12, 4, 450), float32]) */;
  %300 = cos(%292) /* ty=Tensor[(6, 3, 6), float32] */;
  %301 = %299.3;
  (%300, %301, %var_1972, meta[relay.Constant][22] /* ty=Tensor[(450), int16] */, -7.47773f /* ty=float32 */)
}

def @func_6746(%var_6741: Tensor[(4, 14, 8), int8]) -> (Tensor[(4, 14, 8), bool],) {
  %302 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 14, 8), int8] */, dtype="bool") /* ty=Tensor[(4, 14, 8), bool] */;
  %303 = shape_of(%var_6741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_6741, dtype="bool") /* ty=Tensor[(4, 14, 8), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %306 = less_equal(%304, %305) /* ty=Tensor[(4, 14, 8), bool] */;
  (%306,)
}

def @func_5060(%var_5054: Tensor[(16), float32]) -> (Tensor[(6, 4, 3), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(16), float32]) {
  %307 = @func_4983() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %308 = cast(-0.61056f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %309 = cast(%var_5054, dtype="float32") /* ty=Tensor[(16), float32] */;
  %310 = reshape(%308, newshape=[]) /* ty=float32 */;
  %311 = reshape(%309, newshape=[4, 1, 4]) /* ty=Tensor[(4, 1, 4), float32] */;
  %312 = %307.0;
  %313 = @func_361(%310, %311) /* ty=Tensor[(4, 1, 4), float32] */;
  (%312, %313, -0.61056f /* ty=float32 */, %var_5054)
}

def @func_6038() -> (Tensor[(450), int16],) {
  %314 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
  %315 = %314.2;
  (%315,)
}

def @func_6338(%var_6324: Tensor[(3, 14, 13), int16], %var_6325: Tensor[(3, 14, 13), int16], %var_6336: Tensor[(780), bool]) -> (Tensor[(3, 14, 13), bool], Tensor[(13, 6, 10), bool], Tensor[(780), bool]) {
  %316 = cast(%var_6325, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %317 = shape_of(%var_6324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(%var_6324, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %320 = cast(%var_6336, dtype="bool") /* ty=Tensor[(780), bool] */;
  %321 = cast(%var_6336, dtype="bool") /* ty=Tensor[(780), bool] */;
  %322 = reshape(%320, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), bool] */;
  %323 = reshape(%321, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), bool] */;
  %324 = @func_874(%322, %323) /* ty=(Tensor[(13, 6, 10), bool],) */;
  %325 = less(%318, %319) /* ty=Tensor[(3, 14, 13), bool] */;
  %326 = %324.0;
  (%325, %326, %var_6336)
}

def @func_3359(%var_3322: float32) -> (Tensor[(9, 8, 11), bool], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) {
  %327 = cast(%var_3322, dtype="float32") /* ty=float32 */;
  %328 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %329 = mod(%327, %328) /* ty=Tensor[(9, 8, 11), float32] */;
  %330 = cast(%329, dtype="bool") /* ty=Tensor[(9, 8, 11), bool] */;
  %331 = cast(%var_3322, dtype="bool") /* ty=bool */;
  %332 = cast(meta[relay.Constant][25] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %333 = cast(meta[relay.Constant][25] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %334 = reshape(%332, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %335 = reshape(%333, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %336 = @func_1095(%334, %335) /* ty=(Tensor[(14, 16, 12), bool],) */;
  %337 = greater_equal(%330, %331) /* ty=Tensor[(9, 8, 11), bool] */;
  %338 = %336.0;
  (%337, %338, meta[relay.Constant][25] /* ty=Tensor[(2688), int32] */)
}

def @func_6714(%var_6657: Tensor[(48, 2), int64], %var_6703: uint64, %var_6704: Tensor[(224), uint64]) -> (Tensor[(6, 5, 11), float32], Tensor[(640), float32], Tensor[(48, 2), int64], Tensor[(640), float32], Tensor[(9, 8), float64], Tensor[(1, 14, 16), uint64], uint64, Tensor[(224), uint64]) {
  %339 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(6, 5, 11), float32] */;
  %340 = cast(%var_6657, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
  %341 = cast(%var_6657, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
  %342 = cast(meta[relay.Constant][27] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %343 = reshape(%340, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), int64] */;
  %344 = reshape(%341, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), int64] */;
  %345 = reshape(%342, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %346 = @func_3756(%343, %344, %345) /* ty=(Tensor[(8, 2, 6), int64], Tensor[(8, 2, 6), float32], Tensor[(10, 16, 4), float64], Tensor[(640), float32]) */;
  %347 = @func_6086() /* ty=(Tensor[(9, 8), float64], Tensor[(6, 4, 3), float32], Tensor[(6, 4, 3), float32]) */;
  %348 = cast(%var_6703, dtype="uint64") /* ty=uint64 */;
  %349 = cast(%var_6704, dtype="uint64") /* ty=Tensor[(224), uint64] */;
  %350 = reshape(%348, newshape=[]) /* ty=uint64 */;
  %351 = reshape(%349, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), uint64] */;
  %352 = @func_2525(%350, %351) /* ty=(Tensor[(1, 14, 16), uint64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) */;
  %353 = acosh(%339) /* ty=Tensor[(6, 5, 11), float32] */;
  %354 = %346.3;
  %355 = %347.0;
  %356 = %352.0;
  (%353, %354, %var_6657, meta[relay.Constant][27] /* ty=Tensor[(640), float32] */, %355, %356, %var_6703, %var_6704)
}

def @func_5096(%var_5080: float32, %var_5081: Tensor[(9, 1, 3), float32], %var_5086: Tensor[(9, 5, 3), float32]) -> Tensor[(9, 5, 3), float32] {
  %357 = cast(%var_5080, dtype="float32") /* ty=float32 */;
  %358 = cast(%var_5081, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
  %359 = divide(%357, %358) /* ty=Tensor[(9, 1, 3), float32] */;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
  %361 = cast(%var_5086, dtype="float32") /* ty=Tensor[(9, 5, 3), float32] */;
  mod(%360, %361) /* ty=Tensor[(9, 5, 3), float32] */
}

def @func_5342() -> Tensor[(?, 28), float32] {
  %362 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
  %363 = %362.0;
  %364 = cast(%363, dtype="float32") /* ty=Tensor[(?, 28), float32] */;
  asinh(%364) /* ty=Tensor[(?, 28), float32] */
}

def @func_6515(%var_6507: Tensor[(450), int16]) -> (Tensor[(450), int32],) {
  %365 = @func_6038() /* ty=(Tensor[(450), int16],) */;
  %366 = %365.0;
  %367 = cast(%var_6507, dtype="int32") /* ty=Tensor[(450), int32] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(1), int32] */;
  %369 = cast(%366, dtype="int32") /* ty=Tensor[(450), int32] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?), int32] */;
  %371 = bitwise_and(%369, %370) /* ty=Tensor[(450), int32] */;
  (%371,)
}

def @func_5008(%var_4992: Tensor[(1, 14, 6), float64]) -> (Tensor[(1, 14, 6), float64],) {
  %372 = cast(%var_4992, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %373 = tan(%372) /* ty=Tensor[(1, 14, 6), float64] */;
  (%373,)
}

def @func_507(%var_428: Tensor[(12, 4, 1), float32], %var_438: Tensor[(450), int16], %var_456: float32) -> (Tensor[(15, 6, 5), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(4, 1, 4), float32], Tensor[(12, 4, 16), float32], Tensor[(12, 4, 450), uint8], Tensor[(12, 4, 450), float32]) {
  %374 = cast(%var_438, dtype="int16") /* ty=Tensor[(450), int16] */;
  %375 = cast(%var_438, dtype="int16") /* ty=Tensor[(450), int16] */;
  %376 = reshape(%374, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %377 = reshape(%375, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %378 = @func_54(%376, %377) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
  %379 = cast(%var_456, dtype="float32") /* ty=float32 */;
  %380 = cast(meta[relay.Constant][28] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %381 = reshape(%379, newshape=[]) /* ty=float32 */;
  %382 = reshape(%380, newshape=[4, 1, 4]) /* ty=Tensor[(4, 1, 4), float32] */;
  %383 = cast(%var_456, dtype="float32") /* ty=float32 */;
  %384 = cast(meta[relay.Constant][28] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %385 = reshape(%383, newshape=[]) /* ty=float32 */;
  %386 = reshape(%384, newshape=[4, 1, 4]) /* ty=Tensor[(4, 1, 4), float32] */;
  %387 = cast(%var_428, dtype="float32") /* ty=Tensor[(12, 4, 1), float32] */;
  %388 = acos(%387) /* ty=Tensor[(12, 4, 1), float32] */;
  %389 = cast(%var_428, dtype="uint8") /* ty=Tensor[(12, 4, 1), uint8] */;
  %390 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%388, dtype="uint8") /* ty=Tensor[(12, 4, 1), uint8] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %393 = subtract(%391, %392) /* ty=Tensor[(12, 4, ?), uint8] */;
  %394 = cast(%393, dtype="float32") /* ty=Tensor[(12, 4, ?), float32] */;
  %395 = cast(meta[relay.Constant][28] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %396 = cast(%388, dtype="bool") /* ty=Tensor[(12, 4, 1), bool] */;
  %397 = cast(%var_438, dtype="bool") /* ty=Tensor[(450), bool] */;
  %398 = logical_and(%396, %397) /* ty=Tensor[(12, 4, 450), bool] */;
  %399 = cast(%398, dtype="float64") /* ty=Tensor[(12, 4, 450), float64] */;
  %400 = sin(%399) /* ty=Tensor[(12, 4, 450), float64] */;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(12, 4, 450), float64] */;
  %402 = atanh(%401) /* ty=Tensor[(12, 4, 450), float64] */;
  %403 = cast(%398, dtype="uint8") /* ty=Tensor[(12, 4, 450), uint8] */;
  %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%402, dtype="uint8") /* ty=Tensor[(12, 4, 450), uint8] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %407 = cast(%398, dtype="float32") /* ty=Tensor[(12, 4, 450), float32] */;
  %408 = %378.1;
  %409 = @func_361(%381, %382) /* ty=Tensor[(4, 1, 4), float32] */;
  %410 = @func_361(%385, %386) /* ty=Tensor[(4, 1, 4), float32] */;
  %411 = power(%394, %395) /* ty=Tensor[(12, 4, 16), float32] */;
  %412 = add(%405, %406) /* ty=Tensor[(12, 4, 450), uint8] */;
  %413 = acosh(%407) /* ty=Tensor[(12, 4, 450), float32] */;
  (%408, %409, %var_456, %410, %411, %412, %413)
}

def @func_7549() -> Tensor[(15, 6, 5), int16] {
  @func_5381() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_4606() -> (Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) {
  %414 = @func_4562() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %415 = cast(meta[relay.Constant][29] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %416 = cast(meta[relay.Constant][29] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %417 = reshape(%415, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %418 = reshape(%416, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %419 = @func_54(%417, %418) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
  %420 = %414.0;
  %421 = %419.0;
  (%420, %421, meta[relay.Constant][29] /* ty=Tensor[(450), int16] */)
}

def @func_6876() -> Tensor[(6, 4, 3), float32] {
  %422 = @func_4983() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %422.0
}

def @func_899(%var_891: Tensor[(14, 4, 13), int8], %var_892: Tensor[(14, 4, 13), int8]) -> Tensor[(14, 4, 13), int8] {
  %423 = cast(%var_892, dtype="int8") /* ty=Tensor[(14, 4, 13), int8] */;
  %424 = shape_of(%var_891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(%var_891, dtype="int8") /* ty=Tensor[(14, 4, 13), int8] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%425, %426) /* ty=Tensor[(14, 4, 13), int8] */
}

def @func_6799() -> Tensor[(15, 6, 5), float32] {
  %427 = @func_5381() /* ty=Tensor[(15, 6, 5), int16] */;
  %428 = cast(%427, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  log2(%428) /* ty=Tensor[(15, 6, 5), float32] */
}

def @func_5714(%var_5674: Tensor[(126), float64], %var_5686: Tensor[(450), int16]) -> (Tensor[(6, 4, 3), float32], Tensor[(6, 3, 7), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16], Tensor[(126), float32], Tensor[(1, 54), float64], Tensor[(6, 4, 3), float32]) {
  %429 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %430 = cast(%var_5674, dtype="float64") /* ty=Tensor[(126), float64] */;
  %431 = reshape(%430, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %432 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 54), int8] */, dtype="int8") /* ty=Tensor[(1, 54), int8] */;
  %433 = cast(%var_5686, dtype="int16") /* ty=Tensor[(450), int16] */;
  %434 = reshape(%432, newshape=[6, 1, 9]) /* ty=Tensor[(6, 1, 9), int8] */;
  %435 = reshape(%433, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
  %436 = @func_2054(%434, %435) /* ty=(Tensor[(6, ?, 9), int8], Tensor[(15, 6, 5), float32], Tensor[(450, 1), int16]) */;
  %437 = cast(%var_5674, dtype="float32") /* ty=Tensor[(126), float32] */;
  %438 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 54), int8] */, dtype="float64") /* ty=Tensor[(1, 54), float64] */;
  %439 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %440 = %429.0;
  %441 = @func_1492(%431) /* ty=Tensor[(6, 3, 7), float64] */;
  %442 = %436.1;
  %443 = asin(%437) /* ty=Tensor[(126), float32] */;
  %444 = atan(%438) /* ty=Tensor[(1, 54), float64] */;
  %445 = %439.0;
  (%440, %441, %442, %var_5686, %443, %444, %445)
}

def @func_5783() -> Tensor[(15, 6, 5), int16] {
  @func_5759() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_874(%var_863: Tensor[(13, 6, 10), bool], %var_869: Tensor[(13, 6, 10), bool]) -> (Tensor[(13, 6, 10), bool],) {
  %446 = cast(%var_863, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %447 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(13, 6, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 6, 10), bool] */, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %450 = logical_and(%448, %449) /* ty=Tensor[(13, 6, 10), bool] */;
  %451 = cast(%var_869, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%450, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = greater_equal(%453, %454) /* ty=Tensor[(13, 6, 10), bool] */;
  (%455,)
}

def @func_6378() -> (Tensor[(?, 28), bool], Tensor[(9, 8, 11), bool], float32) {
  %456 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
  %457 = cast(3.26993f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %458 = reshape(%457, newshape=[]) /* ty=float32 */;
  %459 = @func_3359(%458) /* ty=(Tensor[(9, 8, 11), bool], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) */;
  %460 = %456.0;
  %461 = %459.0;
  (%460, %461, 3.26993f /* ty=float32 */)
}

def @func_4562() -> (Tensor[(6, 4, 3), float32],) {
  %462 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %463 = %462.0;
  (%463,)
}

def @func_7847(%var_7802: Tensor[(12, 7, 12), float32], %var_7821: Tensor[(1600), float32], %var_7845: Tensor[(450), int16]) -> (Tensor[(16, 10, 10), float32], Tensor[(1600), float32], Tensor[(9, 8, 11), bool], Tensor[(12, 7, 12), uint64], Tensor[(6, 4, 3), float32], Tensor[(126), float64], Tensor[(450), int16]) {
  %464 = cast(%var_7821, dtype="float32") /* ty=Tensor[(1600), float32] */;
  %465 = reshape(%464, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), float32] */;
  %466 = @func_2886(%465) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) */;
  %467 = @func_6378() /* ty=(Tensor[(?, 28), bool], Tensor[(9, 8, 11), bool], float32) */;
  %468 = cast(%var_7802, dtype="float32") /* ty=Tensor[(12, 7, 12), float32] */;
  %469 = log10(%468) /* ty=Tensor[(12, 7, 12), float32] */;
  %470 = cast(%var_7802, dtype="uint32") /* ty=Tensor[(12, 7, 12), uint32] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%469, dtype="uint32") /* ty=Tensor[(12, 7, 12), uint32] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %474 = multiply(%472, %473) /* ty=Tensor[(12, 7, 12), uint32] */;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
  %476 = sigmoid(%475) /* ty=Tensor[(12, 7, 12), float64] */;
  %477 = cast(%469, dtype="uint64") /* ty=Tensor[(12, 7, 12), uint64] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%476, dtype="uint64") /* ty=Tensor[(12, 7, 12), uint64] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %481 = cast(meta[relay.Constant][32] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %482 = cast(%var_7845, dtype="int16") /* ty=Tensor[(450), int16] */;
  %483 = reshape(%481, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %484 = reshape(%482, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %485 = @func_5714(%483, %484) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(6, 3, 7), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16], Tensor[(126), float32], Tensor[(1, 54), float64], Tensor[(6, 4, 3), float32]) */;
  %486 = %466.1;
  %487 = %467.1;
  %488 = right_shift(%479, %480) /* ty=Tensor[(12, 7, 12), uint64] */;
  %489 = %485.6;
  (%486, %var_7821, %487, %488, %489, meta[relay.Constant][32] /* ty=Tensor[(126), float64] */, %var_7845)
}

def @func_2054(%var_2047: Tensor[(6, 1, 9), int8], %var_2052: Tensor[(450, 1), int16]) -> (Tensor[(6, ?, 9), int8], Tensor[(15, 6, 5), float32], Tensor[(450, 1), int16]) {
  %490 = cast(%var_2047, dtype="int8") /* ty=Tensor[(6, 1, 9), int8] */;
  %491 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(6, 1, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 1, 9), int8] */, dtype="int8") /* ty=Tensor[(6, 1, 9), int8] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %494 = cast(%var_2052, dtype="int16") /* ty=Tensor[(450, 1), int16] */;
  %495 = cast(%var_2052, dtype="int16") /* ty=Tensor[(450, 1), int16] */;
  %496 = reshape(%494, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %497 = reshape(%495, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %498 = @func_54(%496, %497) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
  %499 = subtract(%492, %493) /* ty=Tensor[(6, ?, 9), int8] */;
  %500 = %498.1;
  (%499, %500, %var_2052)
}

def @func_1492(%var_1489: Tensor[(6, 3, 7), float64]) -> Tensor[(6, 3, 7), float64] {
  %501 = cast(%var_1489, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
  rsqrt(%501) /* ty=Tensor[(6, 3, 7), float64] */
}

def @func_4472(%var_4456: Tensor[(3, 9, 2), int16], %var_4461: Tensor[(585), float64], %var_4462: Tensor[(450), int16]) -> (Tensor[(3, 9, 2), int16], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16], Tensor[(980), uint64], Tensor[(252), uint8], Tensor[(2688), int32]) {
  %502 = cast(%var_4456, dtype="int16") /* ty=Tensor[(3, 9, 2), int16] */;
  %503 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(3, 9, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 9, 2), int16] */, dtype="int16") /* ty=Tensor[(3, 9, 2), int16] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %506 = cast(%var_4461, dtype="float64") /* ty=Tensor[(585), float64] */;
  %507 = cast(%var_4462, dtype="int16") /* ty=Tensor[(450), int16] */;
  %508 = reshape(%506, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), float64] */;
  %509 = reshape(%507, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %510 = @func_538(%508, %509) /* ty=(Tensor[(13, 15, 3), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) */;
  %511 = cast(meta[relay.Constant][35] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %512 = cast(meta[relay.Constant][36] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %513 = reshape(%511, newshape=[3, 14, 6]) /* ty=Tensor[(3, 14, 6), uint8] */;
  %514 = reshape(%512, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %515 = @func_3298(%513, %514) /* ty=(Tensor[(3, 14, 6), float64], Tensor[(7, 14, 10), int8], Tensor[(980), uint64], Tensor[(4, 4, 4), float32], Tensor[(1, 64), float32], Tensor[(3, 14, 6), uint64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) */;
  %516 = bitwise_xor(%504, %505) /* ty=Tensor[(3, 9, 2), int16] */;
  %517 = %510.2;
  %518 = %515.2;
  (%516, %517, %var_4461, %var_4462, %518, meta[relay.Constant][35] /* ty=Tensor[(252), uint8] */, meta[relay.Constant][36] /* ty=Tensor[(2688), int32] */)
}

def @func_6086() -> (Tensor[(9, 8), float64], Tensor[(6, 4, 3), float32], Tensor[(6, 4, 3), float32]) {
  %519 = @func_4562() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %520 = %519.0;
  %521 = cast(%520, dtype="float64") /* ty=Tensor[(6, 4, 3), float64] */;
  %522 = cast(%520, dtype="float64") /* ty=Tensor[(6, 4, 3), float64] */;
  %523 = reshape(%521, newshape=[9, 8]) /* ty=Tensor[(9, 8), float64] */;
  %524 = reshape(%522, newshape=[9, 8]) /* ty=Tensor[(9, 8), float64] */;
  %525 = @func_5503(%523, %524) /* ty=(Tensor[(9, 8), float64],) */;
  %526 = cast(%520, dtype="float32") /* ty=Tensor[(6, 4, 3), float32] */;
  %527 = %525.0;
  %528 = @func_5293() /* ty=Tensor[(6, 4, 3), float32] */;
  %529 = asinh(%526) /* ty=Tensor[(6, 4, 3), float32] */;
  (%527, %528, %529)
}

def @func_6465(%var_6440: float64, %var_6441: Tensor[(10, 9, 8), float64]) -> (Tensor[(10, 9, 8), float64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32], Tensor[(10, 9, 8), float32]) {
  %530 = cast(%var_6440, dtype="float64") /* ty=float64 */;
  %531 = cast(%var_6441, dtype="float64") /* ty=Tensor[(10, 9, 8), float64] */;
  %532 = cast(meta[relay.Constant][37] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %533 = cast(meta[relay.Constant][37] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %534 = reshape(%532, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %535 = reshape(%533, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %536 = @func_1095(%534, %535) /* ty=(Tensor[(14, 16, 12), bool],) */;
  %537 = cast(%var_6441, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
  %538 = power(%530, %531) /* ty=Tensor[(10, 9, 8), float64] */;
  %539 = %536.0;
  %540 = tan(%537) /* ty=Tensor[(10, 9, 8), float32] */;
  (%538, %539, meta[relay.Constant][37] /* ty=Tensor[(2688), int32] */, %540)
}

def @func_3298(%var_3240: Tensor[(3, 14, 6), uint8], %var_3296: Tensor[(2688), int32]) -> (Tensor[(3, 14, 6), float64], Tensor[(7, 14, 10), int8], Tensor[(980), uint64], Tensor[(4, 4, 4), float32], Tensor[(1, 64), float32], Tensor[(3, 14, 6), uint64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) {
  %541 = cast(%var_3240, dtype="float32") /* ty=Tensor[(3, 14, 6), float32] */;
  %542 = acos(%541) /* ty=Tensor[(3, 14, 6), float32] */;
  %543 = cast(%542, dtype="float64") /* ty=Tensor[(3, 14, 6), float64] */;
  %544 = cast(meta[relay.Constant][38] /* ty=Tensor[(980), uint64] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %545 = cast(meta[relay.Constant][38] /* ty=Tensor[(980), uint64] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %546 = reshape(%544, newshape=[7, 14, 10]) /* ty=Tensor[(7, 14, 10), uint64] */;
  %547 = reshape(%545, newshape=[7, 14, 10]) /* ty=Tensor[(7, 14, 10), uint64] */;
  %548 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 64), float32] */, dtype="float32") /* ty=Tensor[(1, 64), float32] */;
  %549 = reshape(%548, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %550 = @func_2038(%549) /* ty=(Tensor[(4, 4, 4), float32],) */;
  %551 = cast(%542, dtype="float64") /* ty=Tensor[(3, 14, 6), float64] */;
  %552 = acosh(%551) /* ty=Tensor[(3, 14, 6), float64] */;
  %553 = cast(%var_3240, dtype="uint8") /* ty=Tensor[(3, 14, 6), uint8] */;
  %554 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(3, 14, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 14, 6), uint8] */, dtype="uint8") /* ty=Tensor[(3, 14, 6), uint8] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %557 = subtract(%555, %556) /* ty=Tensor[(3, 14, 6), uint8] */;
  %558 = cast(%557, dtype="uint64") /* ty=Tensor[(3, 14, 6), uint64] */;
  %559 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%552, dtype="uint64") /* ty=Tensor[(3, 14, 6), uint64] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %562 = cast(%var_3296, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %563 = cast(%var_3296, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %564 = reshape(%562, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %565 = reshape(%563, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %566 = @func_1095(%564, %565) /* ty=(Tensor[(14, 16, 12), bool],) */;
  %567 = sigmoid(%543) /* ty=Tensor[(3, 14, 6), float64] */;
  %568 = @func_972(%546, %547) /* ty=Tensor[(7, 14, 10), int8] */;
  %569 = %550.0;
  %570 = maximum(%560, %561) /* ty=Tensor[(3, 14, 6), uint64] */;
  %571 = %566.0;
  (%567, %568, meta[relay.Constant][38] /* ty=Tensor[(980), uint64] */, %569, meta[relay.Constant][39] /* ty=Tensor[(1, 64), float32] */, %570, %571, %var_3296)
}

def @func_6182() -> (Tensor[(6, 4, 3), float32], float32) {
  %572 = @func_5409() /* ty=(Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) */;
  %573 = @func_5293() /* ty=Tensor[(6, 4, 3), float32] */;
  %574 = %572.4;
  (%573, %574)
}

def @func_7763() -> (Tensor[(6, 4, 3), float32],) {
  %575 = @func_6086() /* ty=(Tensor[(9, 8), float64], Tensor[(6, 4, 3), float32], Tensor[(6, 4, 3), float32]) */;
  %576 = %575.2;
  (%576,)
}

def @func_6289() -> (Tensor[(?, 28), bool], Tensor[(15, 6, 5), int16], Tensor[(9, 8), float64], Tensor[(72), float64], Tensor[(?, 28), bool]) {
  %577 = cast(meta[relay.Constant][41] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %578 = cast(meta[relay.Constant][41] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %579 = reshape(%577, newshape=[9, 8]) /* ty=Tensor[(9, 8), float64] */;
  %580 = reshape(%578, newshape=[9, 8]) /* ty=Tensor[(9, 8), float64] */;
  %581 = @func_5503(%579, %580) /* ty=(Tensor[(9, 8), float64],) */;
  %582 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
  %583 = @func_5594() /* ty=Tensor[(?, 28), bool] */;
  %584 = @func_5759() /* ty=Tensor[(15, 6, 5), int16] */;
  %585 = %581.0;
  %586 = %582.0;
  (%583, %584, %585, meta[relay.Constant][41] /* ty=Tensor[(72), float64] */, %586)
}

def @func_7178(%var_7170: int8, %var_7171: Tensor[(585, 1), float64], %var_7172: Tensor[(450), int16]) -> (Tensor[(10, 9, 16), float32], int8, int8, Tensor[(585, 1), float64], Tensor[(450), int16]) {
  %587 = @func_5176() /* ty=(Tensor[(10, 9, 16), float32],) */;
  %588 = %587.0;
  %589 = cast(%588, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %590 = cast(%var_7170, dtype="int8") /* ty=int8 */;
  %591 = cast(%var_7171, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %592 = cast(%var_7172, dtype="int16") /* ty=Tensor[(450), int16] */;
  %593 = reshape(%590, newshape=[]) /* ty=int8 */;
  %594 = reshape(%591, newshape=[195, 3]) /* ty=Tensor[(195, 3), float64] */;
  %595 = reshape(%592, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %596 = @func_5471(%593, %594, %595) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(13, 6, 1), bool], int8, Tensor[(450), int16], Tensor[(54), int16], Tensor[(195, 3), float64], Tensor[(450), int16]) */;
  %597 = log10(%589) /* ty=Tensor[(10, 9, 16), float32] */;
  %598 = %596.2;
  (%597, %598, %var_7170, %var_7171, %var_7172)
}

def @func_1862(%var_1806: Tensor[(9, 9, 6), float64], %var_1837: Tensor[(640), float32], %var_1846: Tensor[(9, 9, 6), float32]) -> (Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(9, 9, 6), float64], Tensor[(9, 9, 6), uint16]) {
  %599 = cast(%var_1837, dtype="float32") /* ty=Tensor[(640), float32] */;
  %600 = reshape(%599, newshape=[10, 16, 4]) /* ty=Tensor[(10, 16, 4), float32] */;
  %601 = @func_846(%600) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(10, 16, 4), float32]) */;
  %602 = cast(%var_1806, dtype="float64") /* ty=Tensor[(9, 9, 6), float64] */;
  %603 = sinh(%602) /* ty=Tensor[(9, 9, 6), float64] */;
  %604 = cast(%var_1806, dtype="float64") /* ty=Tensor[(9, 9, 6), float64] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="float64") /* ty=Tensor[(9, 9, 6), float64] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %608 = cast(%603, dtype="float32") /* ty=Tensor[(9, 9, 6), float32] */;
  %609 = acos(%608) /* ty=Tensor[(9, 9, 6), float32] */;
  %610 = cast(%var_1846, dtype="uint16") /* ty=Tensor[(9, 9, 6), uint16] */;
  %611 = shape_of(%609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%609, dtype="uint16") /* ty=Tensor[(9, 9, 6), uint16] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %614 = %601.0;
  %615 = add(%606, %607) /* ty=Tensor[(9, 9, 6), float64] */;
  %616 = bitwise_xor(%612, %613) /* ty=Tensor[(9, 9, 6), uint16] */;
  (%614, %var_1837, %615, %616)
}

def @func_5272(%var_5213: Tensor[(10, 13, 7), float64], %var_5222: Tensor[(33, 6), int16], %var_5227: Tensor[(10, 13, 7), float64], %var_5259: Tensor[(728), int8]) -> (Tensor[(2, 9, 11), bool], Tensor[(33, 6), int16], Tensor[(10, 13, 7), bool], Tensor[(4, 4, 4), float64], Tensor[(16, 80), float32], Tensor[(64), float32], Tensor[(14, 4, 13), int8], Tensor[(728), int8]) {
  %617 = cast(%var_5222, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
  %618 = cast(%var_5222, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
  %619 = reshape(%617, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), int16] */;
  %620 = reshape(%618, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), int16] */;
  %621 = cast(%var_5213, dtype="float64") /* ty=Tensor[(10, 13, 7), float64] */;
  %622 = log2(%621) /* ty=Tensor[(10, 13, 7), float64] */;
  %623 = cast(%var_5227, dtype="bool") /* ty=Tensor[(10, 13, 7), bool] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%622, dtype="bool") /* ty=Tensor[(10, 13, 7), bool] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %627 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 80), float32] */, dtype="float32") /* ty=Tensor[(16, 80), float32] */;
  %628 = cast(meta[relay.Constant][43] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %629 = reshape(%627, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float32] */;
  %630 = reshape(%628, newshape=[2, 32]) /* ty=Tensor[(2, 32), float32] */;
  %631 = @func_4298(%629, %630) /* ty=(Tensor[(16, 5, 16), float32], Tensor[(2, 32), float32], Tensor[(4, 4, 4), float64]) */;
  %632 = cast(%var_5259, dtype="int8") /* ty=Tensor[(728), int8] */;
  %633 = cast(%var_5259, dtype="int8") /* ty=Tensor[(728), int8] */;
  %634 = reshape(%632, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), int8] */;
  %635 = reshape(%633, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), int8] */;
  %636 = @func_2361(%619, %620) /* ty=Tensor[(2, 9, 11), bool] */;
  %637 = less(%625, %626) /* ty=Tensor[(10, 13, 7), bool] */;
  %638 = %631.2;
  %639 = @func_899(%634, %635) /* ty=Tensor[(14, 4, 13), int8] */;
  (%636, %var_5222, %637, %638, meta[relay.Constant][42] /* ty=Tensor[(16, 80), float32] */, meta[relay.Constant][43] /* ty=Tensor[(64), float32] */, %639, %var_5259)
}

def @func_6977(%var_6950: Tensor[(9, 13, 10), float64], %var_6956: Tensor[(780), bool], %var_6969: Tensor[(1600), float32]) -> (Tensor[(9, 13, 10), float64], Tensor[(780), bool], Tensor[(546), int16], Tensor[(780), bool], Tensor[(2, 9, 11), bool], Tensor[(33, 6), int16], Tensor[(16, 10, 10), float32], Tensor[(1600), float32]) {
  %640 = cast(%var_6950, dtype="float64") /* ty=Tensor[(9, 13, 10), float64] */;
  %641 = cast(meta[relay.Constant][44] /* ty=Tensor[(546), int16] */, dtype="int16") /* ty=Tensor[(546), int16] */;
  %642 = cast(meta[relay.Constant][44] /* ty=Tensor[(546), int16] */, dtype="int16") /* ty=Tensor[(546), int16] */;
  %643 = cast(%var_6956, dtype="bool") /* ty=Tensor[(780), bool] */;
  %644 = reshape(%641, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), int16] */;
  %645 = reshape(%642, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), int16] */;
  %646 = reshape(%643, newshape=[780]) /* ty=Tensor[(780), bool] */;
  %647 = @func_6338(%644, %645, %646) /* ty=(Tensor[(3, 14, 13), bool], Tensor[(13, 6, 10), bool], Tensor[(780), bool]) */;
  %648 = cast(meta[relay.Constant][45] /* ty=Tensor[(33, 6), int16] */, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
  %649 = reshape(%648, newshape=[198]) /* ty=Tensor[(198), int16] */;
  %650 = @func_6014(%649) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(2, 9, 11), bool], Tensor[(198), int32]) */;
  %651 = cast(%var_6969, dtype="float32") /* ty=Tensor[(1600), float32] */;
  %652 = reshape(%651, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), float32] */;
  %653 = @func_2886(%652) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) */;
  %654 = acosh(%640) /* ty=Tensor[(9, 13, 10), float64] */;
  %655 = %647.2;
  %656 = %650.1;
  %657 = %653.1;
  (%654, %655, meta[relay.Constant][44] /* ty=Tensor[(546), int16] */, %var_6956, %656, meta[relay.Constant][45] /* ty=Tensor[(33, 6), int16] */, %657, %var_6969)
}

def @func_846(%var_819: Tensor[(10, 16, 4), float32]) -> (Tensor[(10, 16, 4), float64], Tensor[(10, 16, 4), float32]) {
  %658 = cast(%var_819, dtype="float32") /* ty=Tensor[(10, 16, 4), float32] */;
  %659 = cos(%658) /* ty=Tensor[(10, 16, 4), float32] */;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(10, 16, 4), float64] */;
  %661 = shape_of(%var_819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%var_819, dtype="float64") /* ty=Tensor[(10, 16, 4), float64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %664 = cast(%var_819, dtype="float32") /* ty=Tensor[(10, 16, 4), float32] */;
  %665 = floor_mod(%662, %663) /* ty=Tensor[(10, 16, 4), float64] */;
  %666 = rsqrt(%664) /* ty=Tensor[(10, 16, 4), float32] */;
  (%665, %666)
}

def @func_3756(%var_3743: Tensor[(8, 2, 6), int64], %var_3744: Tensor[(8, 2, 6), int64], %var_3754: Tensor[(640), float32]) -> (Tensor[(8, 2, 6), int64], Tensor[(8, 2, 6), float32], Tensor[(10, 16, 4), float64], Tensor[(640), float32]) {
  %667 = cast(%var_3744, dtype="int64") /* ty=Tensor[(8, 2, 6), int64] */;
  %668 = shape_of(%var_3743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%var_3743, dtype="int64") /* ty=Tensor[(8, 2, 6), int64] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %671 = cast(%var_3743, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  %672 = cast(%var_3754, dtype="float32") /* ty=Tensor[(640), float32] */;
  %673 = reshape(%672, newshape=[10, 16, 4]) /* ty=Tensor[(10, 16, 4), float32] */;
  %674 = @func_846(%673) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(10, 16, 4), float32]) */;
  %675 = maximum(%669, %670) /* ty=Tensor[(8, 2, 6), int64] */;
  %676 = rsqrt(%671) /* ty=Tensor[(8, 2, 6), float32] */;
  %677 = %674.0;
  (%675, %676, %677, %var_3754)
}

def @func_4983() -> (Tensor[(6, 4, 3), float32],) {
  %678 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %679 = %678.0;
  (%679,)
}

def @func_5471(%var_5451: int8, %var_5468: Tensor[(195, 3), float64], %var_5469: Tensor[(450), int16]) -> (Tensor[(6, 4, 3), float32], Tensor[(13, 6, 1), bool], int8, Tensor[(450), int16], Tensor[(54), int16], Tensor[(195, 3), float64], Tensor[(450), int16]) {
  %680 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %681 = cast(%var_5451, dtype="int8") /* ty=int8 */;
  %682 = reshape(%681, newshape=[]) /* ty=int8 */;
  %683 = @func_3651(%682) /* ty=(Tensor[(13, 6, 1), int8], Tensor[(13, 6, 1), bool]) */;
  %684 = cast(meta[relay.Constant][46] /* ty=Tensor[(54), int16] */, dtype="int16") /* ty=Tensor[(54), int16] */;
  %685 = cast(%var_5468, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
  %686 = cast(%var_5469, dtype="int16") /* ty=Tensor[(450), int16] */;
  %687 = reshape(%684, newshape=[3, 9, 2]) /* ty=Tensor[(3, 9, 2), int16] */;
  %688 = reshape(%685, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %689 = reshape(%686, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %690 = @func_4472(%687, %688, %689) /* ty=(Tensor[(3, 9, 2), int16], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16], Tensor[(980), uint64], Tensor[(252), uint8], Tensor[(2688), int32]) */;
  %691 = %680.0;
  %692 = %683.1;
  %693 = %690.3;
  (%691, %692, %var_5451, %693, meta[relay.Constant][46] /* ty=Tensor[(54), int16] */, %var_5468, %var_5469)
}

def @func_361(%var_356: float32, %var_357: Tensor[(4, 1, 4), float32]) -> Tensor[(4, 1, 4), float32] {
  %694 = cast(%var_356, dtype="float32") /* ty=float32 */;
  %695 = cast(%var_357, dtype="float32") /* ty=Tensor[(4, 1, 4), float32] */;
  floor_divide(%694, %695) /* ty=Tensor[(4, 1, 4), float32] */
}

def @func_7319() -> Tensor[(7, 3, 5), int16] {
  %696 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 3, 5), int16] */, dtype="int16") /* ty=Tensor[(7, 3, 5), int16] */;
  %697 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(7, 3, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 3, 5), int16] */, dtype="int16") /* ty=Tensor[(7, 3, 5), int16] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%698, %699) /* ty=Tensor[(7, 3, 5), int16] */
}

def @main(%var_7866: Tensor[(12, 28), bool]) -> (Tensor[(12, 28), uint32],) {
  %700 = @func_5594() /* ty=Tensor[(?, 28), bool] */;
  %701 = cast(%700, dtype="uint32") /* ty=Tensor[(?, 28), uint32] */;
  %702 = cast(%var_7866, dtype="uint32") /* ty=Tensor[(12, 28), uint32] */;
  %703 = multiply(%701, %702) /* ty=Tensor[(12, 28), uint32] */;
  (%703,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7237() -> Tensor[(?, 28), bool] {
  %0 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %0.1
}

def @func_3056(%var_3054: Tensor[(1, 1, 15), float32], %var_3055: Tensor[(11, 1, 15), float32]) -> (Tensor[(11, 1, 15), float32],) {
  @func_3052(%var_3054, %var_3055) /* ty=(Tensor[(11, 1, 15), float32],) */
}

def @func_6718(%var_6715: Tensor[(48, 2), int64], %var_6716: uint64, %var_6717: Tensor[(224), uint64]) -> (Tensor[(6, 5, 11), float32], Tensor[(640), float32], Tensor[(48, 2), int64], Tensor[(640), float32], Tensor[(9, 8), float64], Tensor[(1, 14, 16), uint64], uint64, Tensor[(224), uint64]) {
  %19 = fn (%var_6657: Tensor[(48, 2), int64], %var_6703: uint64, %var_6704: Tensor[(224), uint64]) -> (Tensor[(6, 5, 11), float32], Tensor[(640), float32], Tensor[(48, 2), int64], Tensor[(640), float32], Tensor[(9, 8), float64], Tensor[(1, 14, 16), uint64], uint64, Tensor[(224), uint64]) {
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(6, 5, 11), float32] */;
    %2 = cast(%var_6657, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
    %3 = cast(%var_6657, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
    %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
    %5 = reshape(%2, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), int64] */;
    %6 = reshape(%3, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), int64] */;
    %7 = reshape(%4, newshape=[640]) /* ty=Tensor[(640), float32] */;
    %8 = @func_3756(%5, %6, %7) /* ty=(Tensor[(8, 2, 6), int64], Tensor[(8, 2, 6), float32], Tensor[(10, 16, 4), float64], Tensor[(640), float32]) */;
    %9 = @func_6086() /* ty=(Tensor[(9, 8), float64], Tensor[(6, 4, 3), float32], Tensor[(6, 4, 3), float32]) */;
    %10 = cast(%var_6703, dtype="uint64") /* ty=uint64 */;
    %11 = cast(%var_6704, dtype="uint64") /* ty=Tensor[(224), uint64] */;
    %12 = reshape(%10, newshape=[]) /* ty=uint64 */;
    %13 = reshape(%11, newshape=[1, 14, 16]) /* ty=Tensor[(1, 14, 16), uint64] */;
    %14 = @func_2525(%12, %13) /* ty=(Tensor[(1, 14, 16), uint64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) */;
    %15 = acosh(%1) /* ty=Tensor[(6, 5, 11), float32] */;
    %16 = %8.3;
    %17 = %9.0;
    %18 = %14.0;
    (%15, %16, %var_6657, meta[relay.Constant][1] /* ty=Tensor[(640), float32] */, %17, %18, %var_6703, %var_6704)
  };
  %19(%var_6715, %var_6716, %var_6717) /* ty=(Tensor[(6, 5, 11), float32], Tensor[(640), float32], Tensor[(48, 2), int64], Tensor[(640), float32], Tensor[(9, 8), float64], Tensor[(1, 14, 16), uint64], uint64, Tensor[(224), uint64]) */
}

def @func_878(%var_876: Tensor[(13, 6, 10), bool], %var_877: Tensor[(13, 6, 10), bool]) -> (Tensor[(13, 6, 10), bool],) {
  @func_874(%var_876, %var_877) /* ty=(Tensor[(13, 6, 10), bool],) */
}

def @func_5714(%var_5674: Tensor[(126), float64], %var_5686: Tensor[(450), int16]) -> (Tensor[(6, 4, 3), float32], Tensor[(6, 3, 7), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16], Tensor[(126), float32], Tensor[(1, 54), float64], Tensor[(6, 4, 3), float32]) {
  %20 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %21 = cast(%var_5674, dtype="float64") /* ty=Tensor[(126), float64] */;
  %22 = reshape(%21, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float64] */;
  %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 54), int8] */, dtype="int8") /* ty=Tensor[(1, 54), int8] */;
  %24 = cast(%var_5686, dtype="int16") /* ty=Tensor[(450), int16] */;
  %25 = reshape(%23, newshape=[6, 1, 9]) /* ty=Tensor[(6, 1, 9), int8] */;
  %26 = reshape(%24, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
  %27 = @func_2054(%25, %26) /* ty=(Tensor[(6, ?, 9), int8], Tensor[(15, 6, 5), float32], Tensor[(450, 1), int16]) */;
  %28 = cast(%var_5674, dtype="float32") /* ty=Tensor[(126), float32] */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 54), int8] */, dtype="float64") /* ty=Tensor[(1, 54), float64] */;
  %30 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %31 = %20.0;
  %32 = @func_1492(%22) /* ty=Tensor[(6, 3, 7), float64] */;
  %33 = %27.1;
  %34 = asin(%28) /* ty=Tensor[(126), float32] */;
  %35 = atan(%29) /* ty=Tensor[(1, 54), float64] */;
  %36 = %30.0;
  (%31, %32, %33, %var_5686, %34, %35, %36)
}

def @func_6379() -> (Tensor[(?, 28), bool], Tensor[(9, 8, 11), bool], float32) {
  %43 = fn () -> (Tensor[(?, 28), bool], Tensor[(9, 8, 11), bool], float32) {
    %37 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
    %38 = cast(3.26993f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %39 = reshape(%38, newshape=[]) /* ty=float32 */;
    %40 = @func_3359(%39) /* ty=(Tensor[(9, 8, 11), bool], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) */;
    %41 = %37.0;
    %42 = %40.0;
    (%41, %42, 3.26993f /* ty=float32 */)
  };
  %43() /* ty=(Tensor[(?, 28), bool], Tensor[(9, 8, 11), bool], float32) */
}

def @func_1862(%var_1806: Tensor[(9, 9, 6), float64], %var_1837: Tensor[(640), float32], %var_1846: Tensor[(9, 9, 6), float32]) -> (Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(9, 9, 6), float64], Tensor[(9, 9, 6), uint16]) {
  %44 = cast(%var_1837, dtype="float32") /* ty=Tensor[(640), float32] */;
  %45 = reshape(%44, newshape=[10, 16, 4]) /* ty=Tensor[(10, 16, 4), float32] */;
  %46 = @func_846(%45) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(10, 16, 4), float32]) */;
  %47 = cast(%var_1806, dtype="float64") /* ty=Tensor[(9, 9, 6), float64] */;
  %48 = sinh(%47) /* ty=Tensor[(9, 9, 6), float64] */;
  %49 = cast(%var_1806, dtype="float64") /* ty=Tensor[(9, 9, 6), float64] */;
  %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%48, dtype="float64") /* ty=Tensor[(9, 9, 6), float64] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %53 = cast(%48, dtype="float32") /* ty=Tensor[(9, 9, 6), float32] */;
  %54 = acos(%53) /* ty=Tensor[(9, 9, 6), float32] */;
  %55 = cast(%var_1846, dtype="uint16") /* ty=Tensor[(9, 9, 6), uint16] */;
  %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%54, dtype="uint16") /* ty=Tensor[(9, 9, 6), uint16] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %59 = %46.0;
  %60 = add(%51, %52) /* ty=Tensor[(9, 9, 6), float64] */;
  %61 = bitwise_xor(%57, %58) /* ty=Tensor[(9, 9, 6), uint16] */;
  (%59, %var_1837, %60, %61)
}

def @func_6887() -> (Tensor[(10, 9, 16), float32],) {
  %64 = fn () -> (Tensor[(10, 9, 16), float32],) {
    %62 = @func_5176() /* ty=(Tensor[(10, 9, 16), float32],) */;
    %63 = %62.0;
    (%63,)
  };
  %64() /* ty=(Tensor[(10, 9, 16), float32],) */
}

def @func_7550() -> Tensor[(15, 6, 5), int16] {
  %65 = fn () -> Tensor[(15, 6, 5), int16] {
    @func_5381() /* ty=Tensor[(15, 6, 5), int16] */
  };
  %65() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_5759() -> Tensor[(15, 6, 5), int16] {
  %66 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
  %66.1
}

def @func_6040() -> (Tensor[(450), int16],) {
  @func_6038() /* ty=(Tensor[(450), int16],) */
}

def @func_6981(%var_6978: Tensor[(9, 13, 10), float64], %var_6979: Tensor[(780), bool], %var_6980: Tensor[(1600), float32]) -> (Tensor[(9, 13, 10), float64], Tensor[(780), bool], Tensor[(546), int16], Tensor[(780), bool], Tensor[(2, 9, 11), bool], Tensor[(33, 6), int16], Tensor[(16, 10, 10), float32], Tensor[(1600), float32]) {
  %85 = fn (%var_6950: Tensor[(9, 13, 10), float64], %var_6956: Tensor[(780), bool], %var_6969: Tensor[(1600), float32]) -> (Tensor[(9, 13, 10), float64], Tensor[(780), bool], Tensor[(546), int16], Tensor[(780), bool], Tensor[(2, 9, 11), bool], Tensor[(33, 6), int16], Tensor[(16, 10, 10), float32], Tensor[(1600), float32]) {
    %67 = cast(%var_6950, dtype="float64") /* ty=Tensor[(9, 13, 10), float64] */;
    %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(546), int16] */, dtype="int16") /* ty=Tensor[(546), int16] */;
    %69 = cast(meta[relay.Constant][3] /* ty=Tensor[(546), int16] */, dtype="int16") /* ty=Tensor[(546), int16] */;
    %70 = cast(%var_6956, dtype="bool") /* ty=Tensor[(780), bool] */;
    %71 = reshape(%68, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), int16] */;
    %72 = reshape(%69, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), int16] */;
    %73 = reshape(%70, newshape=[780]) /* ty=Tensor[(780), bool] */;
    %74 = @func_6338(%71, %72, %73) /* ty=(Tensor[(3, 14, 13), bool], Tensor[(13, 6, 10), bool], Tensor[(780), bool]) */;
    %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(33, 6), int16] */, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
    %76 = reshape(%75, newshape=[198]) /* ty=Tensor[(198), int16] */;
    %77 = @func_6014(%76) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(2, 9, 11), bool], Tensor[(198), int32]) */;
    %78 = cast(%var_6969, dtype="float32") /* ty=Tensor[(1600), float32] */;
    %79 = reshape(%78, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), float32] */;
    %80 = @func_2886(%79) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) */;
    %81 = acosh(%67) /* ty=Tensor[(9, 13, 10), float64] */;
    %82 = %74.2;
    %83 = %77.1;
    %84 = %80.1;
    (%81, %82, meta[relay.Constant][3] /* ty=Tensor[(546), int16] */, %var_6956, %83, meta[relay.Constant][4] /* ty=Tensor[(33, 6), int16] */, %84, %var_6969)
  };
  %85(%var_6978, %var_6979, %var_6980) /* ty=(Tensor[(9, 13, 10), float64], Tensor[(780), bool], Tensor[(546), int16], Tensor[(780), bool], Tensor[(2, 9, 11), bool], Tensor[(33, 6), int16], Tensor[(16, 10, 10), float32], Tensor[(1600), float32]) */
}

def @func_5945(%var_5940: Tensor[(728), int8], %var_5941: Tensor[(11, 28), bool], %var_5942: Tensor[(9, 54), float64], %var_5943: Tensor[(640), float32], %var_5944: Tensor[(84), float64]) -> (Tensor[(6, 4, 3), float32], Tensor[(?, 28), float32], Tensor[(16), float32], Tensor[(14, 4, 13), int8], Tensor[(728), int8], Tensor[(6, 4, 3), float32], Tensor[(11, 28), float32], Tensor[(10, 16, 4), float64], Tensor[(9, 54), float64], Tensor[(640), float32], Tensor[(11, 28), float64], Tensor[(1, 14, 6), float64], Tensor[(84), float64]) {
  %127 = fn (%var_5871: Tensor[(728), int8], %var_5887: Tensor[(11, 28), bool], %var_5904: Tensor[(9, 54), float64], %var_5905: Tensor[(640), float32], %var_5934: Tensor[(84), float64]) -> (Tensor[(6, 4, 3), float32], Tensor[(?, 28), float32], Tensor[(16), float32], Tensor[(14, 4, 13), int8], Tensor[(728), int8], Tensor[(6, 4, 3), float32], Tensor[(11, 28), float32], Tensor[(10, 16, 4), float64], Tensor[(9, 54), float64], Tensor[(640), float32], Tensor[(11, 28), float64], Tensor[(1, 14, 6), float64], Tensor[(84), float64]) {
    %86 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
    %87 = cast(%var_5871, dtype="int8") /* ty=Tensor[(728), int8] */;
    %88 = cast(%var_5871, dtype="int8") /* ty=Tensor[(728), int8] */;
    %89 = reshape(%87, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), int8] */;
    %90 = reshape(%88, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), int8] */;
    %91 = @func_4983() /* ty=(Tensor[(6, 4, 3), float32],) */;
    %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %93 = reshape(%92, newshape=[16]) /* ty=Tensor[(16), float32] */;
    %94 = @func_5060(%93) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(16), float32]) */;
    %95 = %94.2;
    %96 = cast(%var_5887, dtype="float32") /* ty=Tensor[(11, 28), float32] */;
    %97 = cast(%95, dtype="float32") /* ty=float32 */;
    %98 = cast(%var_5904, dtype="float64") /* ty=Tensor[(9, 54), float64] */;
    %99 = cast(%var_5905, dtype="float32") /* ty=Tensor[(640), float32] */;
    %100 = cast(%var_5904, dtype="float32") /* ty=Tensor[(9, 54), float32] */;
    %101 = reshape(%98, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float64] */;
    %102 = reshape(%99, newshape=[640]) /* ty=Tensor[(640), float32] */;
    %103 = reshape(%100, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float32] */;
    %104 = @func_1862(%101, %102, %103) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(9, 9, 6), float64], Tensor[(9, 9, 6), uint16]) */;
    %105 = cast(%var_5887, dtype="float32") /* ty=Tensor[(11, 28), float32] */;
    %106 = sigmoid(%105) /* ty=Tensor[(11, 28), float32] */;
    %107 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
    %108 = %107.1;
    %109 = cast(%108, dtype="float64") /* ty=Tensor[(?, 28), float64] */;
    %110 = cast(%var_5887, dtype="float64") /* ty=Tensor[(11, 28), float64] */;
    %111 = multiply(%109, %110) /* ty=Tensor[(11, 28), float64] */;
    %112 = cast(%111, dtype="float64") /* ty=Tensor[(11, 28), float64] */;
    %113 = shape_of(%106, dtype="int32") /* ty=Tensor[(2), int32] */;
    %114 = cast(%106, dtype="float64") /* ty=Tensor[(11, 28), float64] */;
    %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %116 = cast(%var_5934, dtype="float64") /* ty=Tensor[(84), float64] */;
    %117 = reshape(%116, newshape=[1, 14, 6]) /* ty=Tensor[(1, 14, 6), float64] */;
    %118 = @func_5008(%117) /* ty=(Tensor[(1, 14, 6), float64],) */;
    %119 = %86.0;
    %120 = @func_5342() /* ty=Tensor[(?, 28), float32] */;
    %121 = @func_899(%89, %90) /* ty=Tensor[(14, 4, 13), int8] */;
    %122 = %91.0;
    %123 = floor_mod(%96, %97) /* ty=Tensor[(11, 28), float32] */;
    %124 = %104.0;
    %125 = floor_divide(%114, %115) /* ty=Tensor[(11, 28), float64] */;
    %126 = %118.0;
    (%119, %120, meta[relay.Constant][5] /* ty=Tensor[(16), float32] */, %121, %var_5871, %122, %123, %124, %var_5904, %var_5905, %125, %126, %var_5934)
  };
  %127(%var_5940, %var_5941, %var_5942, %var_5943, %var_5944) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), float32], Tensor[(16), float32], Tensor[(14, 4, 13), int8], Tensor[(728), int8], Tensor[(6, 4, 3), float32], Tensor[(11, 28), float32], Tensor[(10, 16, 4), float64], Tensor[(9, 54), float64], Tensor[(640), float32], Tensor[(11, 28), float64], Tensor[(1, 14, 6), float64], Tensor[(84), float64]) */
}

def @func_3756(%var_3743: Tensor[(8, 2, 6), int64], %var_3744: Tensor[(8, 2, 6), int64], %var_3754: Tensor[(640), float32]) -> (Tensor[(8, 2, 6), int64], Tensor[(8, 2, 6), float32], Tensor[(10, 16, 4), float64], Tensor[(640), float32]) {
  %128 = cast(%var_3744, dtype="int64") /* ty=Tensor[(8, 2, 6), int64] */;
  %129 = shape_of(%var_3743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %130 = cast(%var_3743, dtype="int64") /* ty=Tensor[(8, 2, 6), int64] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %132 = cast(%var_3743, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  %133 = cast(%var_3754, dtype="float32") /* ty=Tensor[(640), float32] */;
  %134 = reshape(%133, newshape=[10, 16, 4]) /* ty=Tensor[(10, 16, 4), float32] */;
  %135 = @func_846(%134) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(10, 16, 4), float32]) */;
  %136 = maximum(%130, %131) /* ty=Tensor[(8, 2, 6), int64] */;
  %137 = rsqrt(%132) /* ty=Tensor[(8, 2, 6), float32] */;
  %138 = %135.0;
  (%136, %137, %138, %var_3754)
}

def @func_7182(%var_7179: int8, %var_7180: Tensor[(585, 1), float64], %var_7181: Tensor[(450), int16]) -> (Tensor[(10, 9, 16), float32], int8, int8, Tensor[(585, 1), float64], Tensor[(450), int16]) {
  %151 = fn (%var_7170: int8, %var_7171: Tensor[(585, 1), float64], %var_7172: Tensor[(450), int16]) -> (Tensor[(10, 9, 16), float32], int8, int8, Tensor[(585, 1), float64], Tensor[(450), int16]) {
    %139 = @func_5176() /* ty=(Tensor[(10, 9, 16), float32],) */;
    %140 = %139.0;
    %141 = cast(%140, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
    %142 = cast(%var_7170, dtype="int8") /* ty=int8 */;
    %143 = cast(%var_7171, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
    %144 = cast(%var_7172, dtype="int16") /* ty=Tensor[(450), int16] */;
    %145 = reshape(%142, newshape=[]) /* ty=int8 */;
    %146 = reshape(%143, newshape=[195, 3]) /* ty=Tensor[(195, 3), float64] */;
    %147 = reshape(%144, newshape=[450]) /* ty=Tensor[(450), int16] */;
    %148 = @func_5471(%145, %146, %147) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(13, 6, 1), bool], int8, Tensor[(450), int16], Tensor[(54), int16], Tensor[(195, 3), float64], Tensor[(450), int16]) */;
    %149 = log10(%141) /* ty=Tensor[(10, 9, 16), float32] */;
    %150 = %148.2;
    (%149, %150, %var_7170, %var_7171, %var_7172)
  };
  %151(%var_7179, %var_7180, %var_7181) /* ty=(Tensor[(10, 9, 16), float32], int8, int8, Tensor[(585, 1), float64], Tensor[(450), int16]) */
}

def @func_7377() -> (Tensor[(?, 28), bool],) {
  %159 = fn () -> (Tensor[(?, 28), bool],) {
    %152 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
    %153 = %152.0;
    %154 = @func_6182() /* ty=(Tensor[(6, 4, 3), float32], float32) */;
    %155 = %154.1;
    %156 = cast(%153, dtype="bool") /* ty=Tensor[(?, 28), bool] */;
    %157 = cast(%155, dtype="bool") /* ty=bool */;
    %158 = greater(%156, %157) /* ty=Tensor[(?, 28), bool] */;
    (%158,)
  };
  %159() /* ty=(Tensor[(?, 28), bool],) */
}

def @func_6576(%var_6574: Tensor[(13, 6, 10), bool]) -> (Tensor[(13, 6, 10), float32], Tensor[(13, 6, 10), bool], Tensor[(450), int16]) {
  @func_6573(%var_6574) /* ty=(Tensor[(13, 6, 10), float32], Tensor[(13, 6, 10), bool], Tensor[(450), int16]) */
}

def @func_7847(%var_7802: Tensor[(12, 7, 12), float32], %var_7821: Tensor[(1600), float32], %var_7845: Tensor[(450), int16]) -> (Tensor[(16, 10, 10), float32], Tensor[(1600), float32], Tensor[(9, 8, 11), bool], Tensor[(12, 7, 12), uint64], Tensor[(6, 4, 3), float32], Tensor[(126), float64], Tensor[(450), int16]) {
  %160 = cast(%var_7821, dtype="float32") /* ty=Tensor[(1600), float32] */;
  %161 = reshape(%160, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), float32] */;
  %162 = @func_2886(%161) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) */;
  %163 = @func_6378() /* ty=(Tensor[(?, 28), bool], Tensor[(9, 8, 11), bool], float32) */;
  %164 = cast(%var_7802, dtype="float32") /* ty=Tensor[(12, 7, 12), float32] */;
  %165 = log10(%164) /* ty=Tensor[(12, 7, 12), float32] */;
  %166 = cast(%var_7802, dtype="uint32") /* ty=Tensor[(12, 7, 12), uint32] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%165, dtype="uint32") /* ty=Tensor[(12, 7, 12), uint32] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %170 = multiply(%168, %169) /* ty=Tensor[(12, 7, 12), uint32] */;
  %171 = cast(%170, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
  %172 = sigmoid(%171) /* ty=Tensor[(12, 7, 12), float64] */;
  %173 = cast(%165, dtype="uint64") /* ty=Tensor[(12, 7, 12), uint64] */;
  %174 = shape_of(%172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%172, dtype="uint64") /* ty=Tensor[(12, 7, 12), uint64] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %177 = cast(meta[relay.Constant][6] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %178 = cast(%var_7845, dtype="int16") /* ty=Tensor[(450), int16] */;
  %179 = reshape(%177, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %180 = reshape(%178, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %181 = @func_5714(%179, %180) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(6, 3, 7), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16], Tensor[(126), float32], Tensor[(1, 54), float64], Tensor[(6, 4, 3), float32]) */;
  %182 = %162.1;
  %183 = %163.1;
  %184 = right_shift(%175, %176) /* ty=Tensor[(12, 7, 12), uint64] */;
  %185 = %181.6;
  (%182, %var_7821, %183, %184, %185, meta[relay.Constant][6] /* ty=Tensor[(126), float64] */, %var_7845)
}

def @func_4699() -> (Tensor[(?, 28), bool],) {
  %186 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %187 = %186.1;
  (%187,)
}

def @func_4985() -> (Tensor[(6, 4, 3), float32],) {
  @func_4983() /* ty=(Tensor[(6, 4, 3), float32],) */
}

def @func_4884() -> (Tensor[(6, 4, 3), float32],) {
  @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */
}

def @func_6088() -> (Tensor[(9, 8), float64], Tensor[(6, 4, 3), float32], Tensor[(6, 4, 3), float32]) {
  @func_6086() /* ty=(Tensor[(9, 8), float64], Tensor[(6, 4, 3), float32], Tensor[(6, 4, 3), float32]) */
}

def @func_7320() -> Tensor[(7, 3, 5), int16] {
  %192 = fn () -> Tensor[(7, 3, 5), int16] {
    %188 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 3, 5), int16] */, dtype="int16") /* ty=Tensor[(7, 3, 5), int16] */;
    %189 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(7, 3, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %190 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 3, 5), int16] */, dtype="int16") /* ty=Tensor[(7, 3, 5), int16] */;
    %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    left_shift(%190, %191) /* ty=Tensor[(7, 3, 5), int16] */
  };
  %192() /* ty=Tensor[(7, 3, 5), int16] */
}

def @func_7466(%var_7464: Tensor[(450), int16]) -> (Tensor[(9, 8, 11), float64], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16]) {
  @func_7463(%var_7464) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16]) */
}

def @func_874(%var_863: Tensor[(13, 6, 10), bool], %var_869: Tensor[(13, 6, 10), bool]) -> (Tensor[(13, 6, 10), bool],) {
  %193 = cast(%var_863, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %194 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(13, 6, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(meta[relay.Constant][9] /* ty=Tensor[(13, 6, 10), bool] */, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %197 = logical_and(%195, %196) /* ty=Tensor[(13, 6, 10), bool] */;
  %198 = cast(%var_869, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %199 = shape_of(%197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%197, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %202 = greater_equal(%200, %201) /* ty=Tensor[(13, 6, 10), bool] */;
  (%202,)
}

def @func_5802() -> Tensor[(15, 6, 5), int16] {
  %203 = fn () -> Tensor[(15, 6, 5), int16] {
    @func_5783() /* ty=Tensor[(15, 6, 5), int16] */
  };
  %203() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_7764() -> (Tensor[(6, 4, 3), float32],) {
  %206 = fn () -> (Tensor[(6, 4, 3), float32],) {
    %204 = @func_6086() /* ty=(Tensor[(9, 8), float64], Tensor[(6, 4, 3), float32], Tensor[(6, 4, 3), float32]) */;
    %205 = %204.2;
    (%205,)
  };
  %206() /* ty=(Tensor[(6, 4, 3), float32],) */
}

def @func_4476(%var_4473: Tensor[(3, 9, 2), int16], %var_4474: Tensor[(585), float64], %var_4475: Tensor[(450), int16]) -> (Tensor[(3, 9, 2), int16], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16], Tensor[(980), uint64], Tensor[(252), uint8], Tensor[(2688), int32]) {
  %224 = fn (%var_4456: Tensor[(3, 9, 2), int16], %var_4461: Tensor[(585), float64], %var_4462: Tensor[(450), int16]) -> (Tensor[(3, 9, 2), int16], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16], Tensor[(980), uint64], Tensor[(252), uint8], Tensor[(2688), int32]) {
    %207 = cast(%var_4456, dtype="int16") /* ty=Tensor[(3, 9, 2), int16] */;
    %208 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(3, 9, 2), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %209 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 9, 2), int16] */, dtype="int16") /* ty=Tensor[(3, 9, 2), int16] */;
    %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %211 = cast(%var_4461, dtype="float64") /* ty=Tensor[(585), float64] */;
    %212 = cast(%var_4462, dtype="int16") /* ty=Tensor[(450), int16] */;
    %213 = reshape(%211, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), float64] */;
    %214 = reshape(%212, newshape=[450]) /* ty=Tensor[(450), int16] */;
    %215 = @func_538(%213, %214) /* ty=(Tensor[(13, 15, 3), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) */;
    %216 = cast(meta[relay.Constant][11] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
    %217 = cast(meta[relay.Constant][12] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
    %218 = reshape(%216, newshape=[3, 14, 6]) /* ty=Tensor[(3, 14, 6), uint8] */;
    %219 = reshape(%217, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
    %220 = @func_3298(%218, %219) /* ty=(Tensor[(3, 14, 6), float64], Tensor[(7, 14, 10), int8], Tensor[(980), uint64], Tensor[(4, 4, 4), float32], Tensor[(1, 64), float32], Tensor[(3, 14, 6), uint64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) */;
    %221 = bitwise_xor(%209, %210) /* ty=Tensor[(3, 9, 2), int16] */;
    %222 = %215.2;
    %223 = %220.2;
    (%221, %222, %var_4461, %var_4462, %223, meta[relay.Constant][11] /* ty=Tensor[(252), uint8] */, meta[relay.Constant][12] /* ty=Tensor[(2688), int32] */)
  };
  %224(%var_4473, %var_4474, %var_4475) /* ty=(Tensor[(3, 9, 2), int16], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16], Tensor[(980), uint64], Tensor[(252), uint8], Tensor[(2688), int32]) */
}

def @func_5718(%var_5716: Tensor[(126), float64], %var_5717: Tensor[(450), int16]) -> (Tensor[(6, 4, 3), float32], Tensor[(6, 3, 7), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16], Tensor[(126), float32], Tensor[(1, 54), float64], Tensor[(6, 4, 3), float32]) {
  @func_5714(%var_5716, %var_5717) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(6, 3, 7), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16], Tensor[(126), float32], Tensor[(1, 54), float64], Tensor[(6, 4, 3), float32]) */
}

def @func_364(%var_362: float32, %var_363: Tensor[(4, 1, 4), float32]) -> Tensor[(4, 1, 4), float32] {
  %227 = fn (%var_356: float32, %var_357: Tensor[(4, 1, 4), float32]) -> Tensor[(4, 1, 4), float32] {
    %225 = cast(%var_356, dtype="float32") /* ty=float32 */;
    %226 = cast(%var_357, dtype="float32") /* ty=Tensor[(4, 1, 4), float32] */;
    floor_divide(%225, %226) /* ty=Tensor[(4, 1, 4), float32] */
  };
  %227(%var_362, %var_363) /* ty=Tensor[(4, 1, 4), float32] */
}

def @func_6746(%var_6741: Tensor[(4, 14, 8), int8]) -> (Tensor[(4, 14, 8), bool],) {
  %228 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 14, 8), int8] */, dtype="bool") /* ty=Tensor[(4, 14, 8), bool] */;
  %229 = shape_of(%var_6741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_6741, dtype="bool") /* ty=Tensor[(4, 14, 8), bool] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %232 = less_equal(%230, %231) /* ty=Tensor[(4, 14, 8), bool] */;
  (%232,)
}

def @func_6800() -> Tensor[(15, 6, 5), float32] {
  %235 = fn () -> Tensor[(15, 6, 5), float32] {
    %233 = @func_5381() /* ty=Tensor[(15, 6, 5), int16] */;
    %234 = cast(%233, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
    log2(%234) /* ty=Tensor[(15, 6, 5), float32] */
  };
  %235() /* ty=Tensor[(15, 6, 5), float32] */
}

def @func_3362(%var_3360: float32) -> (Tensor[(9, 8, 11), bool], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) {
  @func_3359(%var_3360) /* ty=(Tensor[(9, 8, 11), bool], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) */
}

def @func_5342() -> Tensor[(?, 28), float32] {
  %236 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="float32") /* ty=Tensor[(?, 28), float32] */;
  asinh(%238) /* ty=Tensor[(?, 28), float32] */
}

def @func_7535() -> (Tensor[(6, 4, 3), float32], Tensor[(?, 28), float32], Tensor[(15, 6, 5), int16], Tensor[(1, 450), int16]) {
  %239 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %240 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 450), int16] */, dtype="int16") /* ty=Tensor[(1, 450), int16] */;
  %241 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 450), int16] */, dtype="int16") /* ty=Tensor[(1, 450), int16] */;
  %242 = reshape(%240, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %243 = reshape(%241, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %244 = @func_54(%242, %243) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
  %245 = %239.0;
  %246 = @func_5342() /* ty=Tensor[(?, 28), float32] */;
  %247 = %244.0;
  (%245, %246, %247, meta[relay.Constant][14] /* ty=Tensor[(1, 450), int16] */)
}

def @func_3052(%var_3026: Tensor[(1, 1, 15), float32], %var_3030: Tensor[(11, 1, 15), float32]) -> (Tensor[(11, 1, 15), float32],) {
  %248 = cast(%var_3026, dtype="float32") /* ty=Tensor[(1, 1, 15), float32] */;
  %249 = exp(%248) /* ty=Tensor[(1, 1, 15), float32] */;
  %250 = cast(%249, dtype="int32") /* ty=Tensor[(1, 1, 15), int32] */;
  %251 = cast(%var_3030, dtype="int32") /* ty=Tensor[(11, 1, 15), int32] */;
  %252 = add(%250, %251) /* ty=Tensor[(11, 1, 15), int32] */;
  %253 = cast(%252, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %254 = cast(%249, dtype="float32") /* ty=Tensor[(1, 1, 15), float32] */;
  %255 = maximum(%253, %254) /* ty=Tensor[(11, 1, 15), float32] */;
  %256 = cast(%255, dtype="float32") /* ty=Tensor[(11, 1, 15), float32] */;
  %257 = acos(%256) /* ty=Tensor[(11, 1, 15), float32] */;
  (%257,)
}

def @func_3453(%var_3452: Tensor[(48), float32]) -> (Tensor[(5, 7, 11), bool], float32, Tensor[(108), float32], Tensor[(48), float32]) {
  %271 = fn (%var_3442: Tensor[(48), float32]) -> (Tensor[(5, 7, 11), bool], float32, Tensor[(108), float32], Tensor[(48), float32]) {
    %258 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 7, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 11), float32] */;
    %259 = sin(%258) /* ty=Tensor[(5, 7, 11), float32] */;
    %260 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 7, 11), float32] */, dtype="bool") /* ty=Tensor[(5, 7, 11), bool] */;
    %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
    %262 = cast(%259, dtype="bool") /* ty=Tensor[(5, 7, 11), bool] */;
    %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %264 = cast(meta[relay.Constant][16] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %265 = cast(%var_3442, dtype="float32") /* ty=Tensor[(48), float32] */;
    %266 = reshape(%264, newshape=[6, 3, 6]) /* ty=Tensor[(6, 3, 6), float32] */;
    %267 = reshape(%265, newshape=[12, 4]) /* ty=Tensor[(12, 4), float32] */;
    %268 = @func_1982(%266, %267) /* ty=(Tensor[(6, 3, 6), float32], Tensor[(4, 1, 4), float32], Tensor[(12, 4), float32], Tensor[(450), int16], float32) */;
    %269 = less(%262, %263) /* ty=Tensor[(5, 7, 11), bool] */;
    %270 = %268.4;
    (%269, %270, meta[relay.Constant][16] /* ty=Tensor[(108), float32] */, %var_3442)
  };
  %271(%var_3452) /* ty=(Tensor[(5, 7, 11), bool], float32, Tensor[(108), float32], Tensor[(48), float32]) */
}

def @func_5344() -> Tensor[(?, 28), float32] {
  @func_5342() /* ty=Tensor[(?, 28), float32] */
}

def @func_1867(%var_1864: Tensor[(9, 9, 6), float64], %var_1865: Tensor[(640), float32], %var_1866: Tensor[(9, 9, 6), float32]) -> (Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(9, 9, 6), float64], Tensor[(9, 9, 6), uint16]) {
  @func_1862(%var_1864, %var_1865, %var_1866) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(9, 9, 6), float64], Tensor[(9, 9, 6), uint16]) */
}

def @func_5294() -> Tensor[(6, 4, 3), float32] {
  %273 = fn () -> Tensor[(6, 4, 3), float32] {
    %272 = @func_4983() /* ty=(Tensor[(6, 4, 3), float32],) */;
    %272.0
  };
  %273() /* ty=Tensor[(6, 4, 3), float32] */
}

def @func_848(%var_847: Tensor[(10, 16, 4), float32]) -> (Tensor[(10, 16, 4), float64], Tensor[(10, 16, 4), float32]) {
  %283 = fn (%var_819: Tensor[(10, 16, 4), float32]) -> (Tensor[(10, 16, 4), float64], Tensor[(10, 16, 4), float32]) {
    %274 = cast(%var_819, dtype="float32") /* ty=Tensor[(10, 16, 4), float32] */;
    %275 = cos(%274) /* ty=Tensor[(10, 16, 4), float32] */;
    %276 = cast(%275, dtype="float64") /* ty=Tensor[(10, 16, 4), float64] */;
    %277 = shape_of(%var_819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %278 = cast(%var_819, dtype="float64") /* ty=Tensor[(10, 16, 4), float64] */;
    %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %280 = cast(%var_819, dtype="float32") /* ty=Tensor[(10, 16, 4), float32] */;
    %281 = floor_mod(%278, %279) /* ty=Tensor[(10, 16, 4), float64] */;
    %282 = rsqrt(%280) /* ty=Tensor[(10, 16, 4), float32] */;
    (%281, %282)
  };
  %283(%var_847) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(10, 16, 4), float32]) */
}

def @func_5761() -> Tensor[(15, 6, 5), int16] {
  @func_5759() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_1494(%var_1493: Tensor[(6, 3, 7), float64]) -> Tensor[(6, 3, 7), float64] {
  %285 = fn (%var_1489: Tensor[(6, 3, 7), float64]) -> Tensor[(6, 3, 7), float64] {
    %284 = cast(%var_1489, dtype="float64") /* ty=Tensor[(6, 3, 7), float64] */;
    rsqrt(%284) /* ty=Tensor[(6, 3, 7), float64] */
  };
  %285(%var_1493) /* ty=Tensor[(6, 3, 7), float64] */
}

def @func_6515(%var_6507: Tensor[(450), int16]) -> (Tensor[(450), int32],) {
  %286 = @func_6038() /* ty=(Tensor[(450), int16],) */;
  %287 = %286.0;
  %288 = cast(%var_6507, dtype="int32") /* ty=Tensor[(450), int32] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(1), int32] */;
  %290 = cast(%287, dtype="int32") /* ty=Tensor[(450), int32] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?), int32] */;
  %292 = bitwise_and(%290, %291) /* ty=Tensor[(450), int32] */;
  (%292,)
}

def @func_6086() -> (Tensor[(9, 8), float64], Tensor[(6, 4, 3), float32], Tensor[(6, 4, 3), float32]) {
  %293 = @func_4562() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %294 = %293.0;
  %295 = cast(%294, dtype="float64") /* ty=Tensor[(6, 4, 3), float64] */;
  %296 = cast(%294, dtype="float64") /* ty=Tensor[(6, 4, 3), float64] */;
  %297 = reshape(%295, newshape=[9, 8]) /* ty=Tensor[(9, 8), float64] */;
  %298 = reshape(%296, newshape=[9, 8]) /* ty=Tensor[(9, 8), float64] */;
  %299 = @func_5503(%297, %298) /* ty=(Tensor[(9, 8), float64],) */;
  %300 = cast(%294, dtype="float32") /* ty=Tensor[(6, 4, 3), float32] */;
  %301 = %299.0;
  %302 = @func_5293() /* ty=Tensor[(6, 4, 3), float32] */;
  %303 = asinh(%300) /* ty=Tensor[(6, 4, 3), float32] */;
  (%301, %302, %303)
}

def @func_2525(%var_2496: uint64, %var_2497: Tensor[(1, 14, 16), uint64]) -> (Tensor[(1, 14, 16), uint64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) {
  %304 = cast(%var_2496, dtype="uint64") /* ty=uint64 */;
  %305 = cast(%var_2497, dtype="uint64") /* ty=Tensor[(1, 14, 16), uint64] */;
  %306 = cast(meta[relay.Constant][17] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %307 = cast(meta[relay.Constant][17] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %308 = reshape(%306, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %309 = reshape(%307, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %310 = @func_54(%308, %309) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
  %311 = logical_xor(%304, %305) /* ty=Tensor[(1, 14, 16), uint64] */;
  %312 = %310.1;
  (%311, %312, meta[relay.Constant][17] /* ty=Tensor[(450), int16] */)
}

def @func_5382() -> Tensor[(15, 6, 5), int16] {
  %314 = fn () -> Tensor[(15, 6, 5), int16] {
    %313 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
    %313.1
  };
  %314() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_5008(%var_4992: Tensor[(1, 14, 6), float64]) -> (Tensor[(1, 14, 6), float64],) {
  %315 = cast(%var_4992, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %316 = tan(%315) /* ty=Tensor[(1, 14, 6), float64] */;
  (%316,)
}

def @func_5784() -> Tensor[(15, 6, 5), int16] {
  %317 = fn () -> Tensor[(15, 6, 5), int16] {
    @func_5759() /* ty=Tensor[(15, 6, 5), int16] */
  };
  %317() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_4983() -> (Tensor[(6, 4, 3), float32],) {
  %318 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %319 = %318.0;
  (%319,)
}

def @func_3301(%var_3299: Tensor[(3, 14, 6), uint8], %var_3300: Tensor[(2688), int32]) -> (Tensor[(3, 14, 6), float64], Tensor[(7, 14, 10), int8], Tensor[(980), uint64], Tensor[(4, 4, 4), float32], Tensor[(1, 64), float32], Tensor[(3, 14, 6), uint64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) {
  %351 = fn (%var_3240: Tensor[(3, 14, 6), uint8], %var_3296: Tensor[(2688), int32]) -> (Tensor[(3, 14, 6), float64], Tensor[(7, 14, 10), int8], Tensor[(980), uint64], Tensor[(4, 4, 4), float32], Tensor[(1, 64), float32], Tensor[(3, 14, 6), uint64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) {
    %320 = cast(%var_3240, dtype="float32") /* ty=Tensor[(3, 14, 6), float32] */;
    %321 = acos(%320) /* ty=Tensor[(3, 14, 6), float32] */;
    %322 = cast(%321, dtype="float64") /* ty=Tensor[(3, 14, 6), float64] */;
    %323 = cast(meta[relay.Constant][18] /* ty=Tensor[(980), uint64] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
    %324 = cast(meta[relay.Constant][18] /* ty=Tensor[(980), uint64] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
    %325 = reshape(%323, newshape=[7, 14, 10]) /* ty=Tensor[(7, 14, 10), uint64] */;
    %326 = reshape(%324, newshape=[7, 14, 10]) /* ty=Tensor[(7, 14, 10), uint64] */;
    %327 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 64), float32] */, dtype="float32") /* ty=Tensor[(1, 64), float32] */;
    %328 = reshape(%327, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %329 = @func_2038(%328) /* ty=(Tensor[(4, 4, 4), float32],) */;
    %330 = cast(%321, dtype="float64") /* ty=Tensor[(3, 14, 6), float64] */;
    %331 = acosh(%330) /* ty=Tensor[(3, 14, 6), float64] */;
    %332 = cast(%var_3240, dtype="uint8") /* ty=Tensor[(3, 14, 6), uint8] */;
    %333 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(3, 14, 6), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %334 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 14, 6), uint8] */, dtype="uint8") /* ty=Tensor[(3, 14, 6), uint8] */;
    %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %336 = subtract(%334, %335) /* ty=Tensor[(3, 14, 6), uint8] */;
    %337 = cast(%336, dtype="uint64") /* ty=Tensor[(3, 14, 6), uint64] */;
    %338 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
    %339 = cast(%331, dtype="uint64") /* ty=Tensor[(3, 14, 6), uint64] */;
    %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %341 = cast(%var_3296, dtype="int32") /* ty=Tensor[(2688), int32] */;
    %342 = cast(%var_3296, dtype="int32") /* ty=Tensor[(2688), int32] */;
    %343 = reshape(%341, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
    %344 = reshape(%342, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
    %345 = @func_1095(%343, %344) /* ty=(Tensor[(14, 16, 12), bool],) */;
    %346 = sigmoid(%322) /* ty=Tensor[(3, 14, 6), float64] */;
    %347 = @func_972(%325, %326) /* ty=Tensor[(7, 14, 10), int8] */;
    %348 = %329.0;
    %349 = maximum(%339, %340) /* ty=Tensor[(3, 14, 6), uint64] */;
    %350 = %345.0;
    (%346, %347, meta[relay.Constant][18] /* ty=Tensor[(980), uint64] */, %348, meta[relay.Constant][19] /* ty=Tensor[(1, 64), float32] */, %349, %350, %var_3296)
  };
  %351(%var_3299, %var_3300) /* ty=(Tensor[(3, 14, 6), float64], Tensor[(7, 14, 10), int8], Tensor[(980), uint64], Tensor[(4, 4, 4), float32], Tensor[(1, 64), float32], Tensor[(3, 14, 6), uint64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) */
}

def @func_3761(%var_3758: Tensor[(8, 2, 6), int64], %var_3759: Tensor[(8, 2, 6), int64], %var_3760: Tensor[(640), float32]) -> (Tensor[(8, 2, 6), int64], Tensor[(8, 2, 6), float32], Tensor[(10, 16, 4), float64], Tensor[(640), float32]) {
  @func_3756(%var_3758, %var_3759, %var_3760) /* ty=(Tensor[(8, 2, 6), int64], Tensor[(8, 2, 6), float32], Tensor[(10, 16, 4), float64], Tensor[(640), float32]) */
}

def @func_6184() -> (Tensor[(6, 4, 3), float32], float32) {
  @func_6182() /* ty=(Tensor[(6, 4, 3), float32], float32) */
}

def @func_5638() -> (Tensor[(15, 6, 5), int16], Tensor[(13, 6, 1), int64]) {
  @func_5636() /* ty=(Tensor[(15, 6, 5), int16], Tensor[(13, 6, 1), int64]) */
}

def @func_1982(%var_1966: Tensor[(6, 3, 6), float32], %var_1972: Tensor[(12, 4), float32]) -> (Tensor[(6, 3, 6), float32], Tensor[(4, 1, 4), float32], Tensor[(12, 4), float32], Tensor[(450), int16], float32) {
  %352 = cast(%var_1966, dtype="float32") /* ty=Tensor[(6, 3, 6), float32] */;
  %353 = cast(%var_1972, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %354 = cast(meta[relay.Constant][21] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %355 = cast(-7.47773f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %356 = reshape(%353, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), float32] */;
  %357 = reshape(%354, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %358 = reshape(%355, newshape=[]) /* ty=float32 */;
  %359 = @func_507(%356, %357, %358) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(4, 1, 4), float32], Tensor[(12, 4, 16), float32], Tensor[(12, 4, 450), uint8], Tensor[(12, 4, 450), float32]) */;
  %360 = cos(%352) /* ty=Tensor[(6, 3, 6), float32] */;
  %361 = %359.3;
  (%360, %361, %var_1972, meta[relay.Constant][21] /* ty=Tensor[(450), int16] */, -7.47773f /* ty=float32 */)
}

def @func_7239() -> Tensor[(?, 28), bool] {
  @func_7237() /* ty=Tensor[(?, 28), bool] */
}

def @func_6182() -> (Tensor[(6, 4, 3), float32], float32) {
  %362 = @func_5409() /* ty=(Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) */;
  %363 = @func_5293() /* ty=Tensor[(6, 4, 3), float32] */;
  %364 = %362.4;
  (%363, %364)
}

def @func_6465(%var_6440: float64, %var_6441: Tensor[(10, 9, 8), float64]) -> (Tensor[(10, 9, 8), float64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32], Tensor[(10, 9, 8), float32]) {
  %365 = cast(%var_6440, dtype="float64") /* ty=float64 */;
  %366 = cast(%var_6441, dtype="float64") /* ty=Tensor[(10, 9, 8), float64] */;
  %367 = cast(meta[relay.Constant][22] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %368 = cast(meta[relay.Constant][22] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %369 = reshape(%367, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %370 = reshape(%368, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %371 = @func_1095(%369, %370) /* ty=(Tensor[(14, 16, 12), bool],) */;
  %372 = cast(%var_6441, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
  %373 = power(%365, %366) /* ty=Tensor[(10, 9, 8), float64] */;
  %374 = %371.0;
  %375 = tan(%372) /* ty=Tensor[(10, 9, 8), float32] */;
  (%373, %374, meta[relay.Constant][22] /* ty=Tensor[(2688), int32] */, %375)
}

def @func_4882() -> (Tensor[(6, 4, 3), float32],) {
  %376 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
  %377 = %376.0;
  (%377,)
}

def @func_7537() -> (Tensor[(6, 4, 3), float32], Tensor[(?, 28), float32], Tensor[(15, 6, 5), int16], Tensor[(1, 450), int16]) {
  @func_7535() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), float32], Tensor[(15, 6, 5), int16], Tensor[(1, 450), int16]) */
}

def @func_3653(%var_3652: int8) -> (Tensor[(13, 6, 1), int8], Tensor[(13, 6, 1), bool]) {
  %384 = fn (%var_3626: int8) -> (Tensor[(13, 6, 1), int8], Tensor[(13, 6, 1), bool]) {
    %378 = cast(%var_3626, dtype="int8") /* ty=int8 */;
    %379 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 6, 1), int8] */, dtype="int8") /* ty=Tensor[(13, 6, 1), int8] */;
    %380 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 6, 1), int8] */, dtype="bool") /* ty=Tensor[(13, 6, 1), bool] */;
    %381 = cast(%var_3626, dtype="bool") /* ty=bool */;
    %382 = bitwise_and(%378, %379) /* ty=Tensor[(13, 6, 1), int8] */;
    %383 = equal(%380, %381) /* ty=Tensor[(13, 6, 1), bool] */;
    (%382, %383)
  };
  %384(%var_3652) /* ty=(Tensor[(13, 6, 1), int8], Tensor[(13, 6, 1), bool]) */
}

def @func_6518(%var_6516: Tensor[(450), int16]) -> (Tensor[(450), int32],) {
  @func_6515(%var_6516) /* ty=(Tensor[(450), int32],) */
}

def @func_2057(%var_2055: Tensor[(6, 1, 9), int8], %var_2056: Tensor[(450, 1), int16]) -> (Tensor[(6, ?, 9), int8], Tensor[(15, 6, 5), float32], Tensor[(450, 1), int16]) {
  %396 = fn (%var_2047: Tensor[(6, 1, 9), int8], %var_2052: Tensor[(450, 1), int16]) -> (Tensor[(6, ?, 9), int8], Tensor[(15, 6, 5), float32], Tensor[(450, 1), int16]) {
    %385 = cast(%var_2047, dtype="int8") /* ty=Tensor[(6, 1, 9), int8] */;
    %386 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(6, 1, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %387 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 1, 9), int8] */, dtype="int8") /* ty=Tensor[(6, 1, 9), int8] */;
    %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %389 = cast(%var_2052, dtype="int16") /* ty=Tensor[(450, 1), int16] */;
    %390 = cast(%var_2052, dtype="int16") /* ty=Tensor[(450, 1), int16] */;
    %391 = reshape(%389, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
    %392 = reshape(%390, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
    %393 = @func_54(%391, %392) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
    %394 = subtract(%387, %388) /* ty=Tensor[(6, ?, 9), int8] */;
    %395 = %393.1;
    (%394, %395, %var_2052)
  };
  %396(%var_2055, %var_2056) /* ty=(Tensor[(6, ?, 9), int8], Tensor[(15, 6, 5), float32], Tensor[(450, 1), int16]) */
}

def @func_511(%var_508: Tensor[(12, 4, 1), float32], %var_509: Tensor[(450), int16], %var_510: float32) -> (Tensor[(15, 6, 5), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(4, 1, 4), float32], Tensor[(12, 4, 16), float32], Tensor[(12, 4, 450), uint8], Tensor[(12, 4, 450), float32]) {
  %437 = fn (%var_428: Tensor[(12, 4, 1), float32], %var_438: Tensor[(450), int16], %var_456: float32) -> (Tensor[(15, 6, 5), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(4, 1, 4), float32], Tensor[(12, 4, 16), float32], Tensor[(12, 4, 450), uint8], Tensor[(12, 4, 450), float32]) {
    %397 = cast(%var_438, dtype="int16") /* ty=Tensor[(450), int16] */;
    %398 = cast(%var_438, dtype="int16") /* ty=Tensor[(450), int16] */;
    %399 = reshape(%397, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
    %400 = reshape(%398, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
    %401 = @func_54(%399, %400) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
    %402 = cast(%var_456, dtype="float32") /* ty=float32 */;
    %403 = cast(meta[relay.Constant][25] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %404 = reshape(%402, newshape=[]) /* ty=float32 */;
    %405 = reshape(%403, newshape=[4, 1, 4]) /* ty=Tensor[(4, 1, 4), float32] */;
    %406 = cast(%var_456, dtype="float32") /* ty=float32 */;
    %407 = cast(meta[relay.Constant][25] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %408 = reshape(%406, newshape=[]) /* ty=float32 */;
    %409 = reshape(%407, newshape=[4, 1, 4]) /* ty=Tensor[(4, 1, 4), float32] */;
    %410 = cast(%var_428, dtype="float32") /* ty=Tensor[(12, 4, 1), float32] */;
    %411 = acos(%410) /* ty=Tensor[(12, 4, 1), float32] */;
    %412 = cast(%var_428, dtype="uint8") /* ty=Tensor[(12, 4, 1), uint8] */;
    %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
    %414 = cast(%411, dtype="uint8") /* ty=Tensor[(12, 4, 1), uint8] */;
    %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %416 = subtract(%414, %415) /* ty=Tensor[(12, 4, ?), uint8] */;
    %417 = cast(%416, dtype="float32") /* ty=Tensor[(12, 4, ?), float32] */;
    %418 = cast(meta[relay.Constant][25] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %419 = cast(%411, dtype="bool") /* ty=Tensor[(12, 4, 1), bool] */;
    %420 = cast(%var_438, dtype="bool") /* ty=Tensor[(450), bool] */;
    %421 = logical_and(%419, %420) /* ty=Tensor[(12, 4, 450), bool] */;
    %422 = cast(%421, dtype="float64") /* ty=Tensor[(12, 4, 450), float64] */;
    %423 = sin(%422) /* ty=Tensor[(12, 4, 450), float64] */;
    %424 = cast(%423, dtype="float64") /* ty=Tensor[(12, 4, 450), float64] */;
    %425 = atanh(%424) /* ty=Tensor[(12, 4, 450), float64] */;
    %426 = cast(%421, dtype="uint8") /* ty=Tensor[(12, 4, 450), uint8] */;
    %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %428 = cast(%425, dtype="uint8") /* ty=Tensor[(12, 4, 450), uint8] */;
    %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %430 = cast(%421, dtype="float32") /* ty=Tensor[(12, 4, 450), float32] */;
    %431 = %401.1;
    %432 = @func_361(%404, %405) /* ty=Tensor[(4, 1, 4), float32] */;
    %433 = @func_361(%408, %409) /* ty=Tensor[(4, 1, 4), float32] */;
    %434 = power(%417, %418) /* ty=Tensor[(12, 4, 16), float32] */;
    %435 = add(%428, %429) /* ty=Tensor[(12, 4, 450), uint8] */;
    %436 = acosh(%430) /* ty=Tensor[(12, 4, 450), float32] */;
    (%431, %432, %var_456, %433, %434, %435, %436)
  };
  %437(%var_508, %var_509, %var_510) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(4, 1, 4), float32], Tensor[(12, 4, 16), float32], Tensor[(12, 4, 450), uint8], Tensor[(12, 4, 450), float32]) */
}

def @func_6573(%var_6554: Tensor[(13, 6, 10), bool]) -> (Tensor[(13, 6, 10), float32], Tensor[(13, 6, 10), bool], Tensor[(450), int16]) {
  %438 = @func_5409() /* ty=(Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) */;
  %439 = %438.1;
  %440 = cast(%439, dtype="float32") /* ty=Tensor[(13, 6, 10), float32] */;
  %441 = log2(%440) /* ty=Tensor[(13, 6, 10), float32] */;
  %442 = cast(%441, dtype="float32") /* ty=Tensor[(13, 6, 10), float32] */;
  %443 = cast(%var_6554, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %444 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%439, dtype="bool") /* ty=Tensor[(13, 6, 10), bool] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %447 = @func_6038() /* ty=(Tensor[(450), int16],) */;
  %448 = sin(%442) /* ty=Tensor[(13, 6, 10), float32] */;
  %449 = less(%445, %446) /* ty=Tensor[(13, 6, 10), bool] */;
  %450 = %447.0;
  (%448, %449, %450)
}

def @func_7463(%var_7454: Tensor[(450), int16]) -> (Tensor[(9, 8, 11), float64], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16]) {
  %451 = @func_6378() /* ty=(Tensor[(?, 28), bool], Tensor[(9, 8, 11), bool], float32) */;
  %452 = %451.1;
  %453 = cast(%452, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  %454 = cast(meta[relay.Constant][26] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %455 = cast(%var_7454, dtype="int16") /* ty=Tensor[(450), int16] */;
  %456 = reshape(%454, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), float64] */;
  %457 = reshape(%455, newshape=[450]) /* ty=Tensor[(450), int16] */;
  %458 = @func_538(%456, %457) /* ty=(Tensor[(13, 15, 3), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) */;
  %459 = atan(%453) /* ty=Tensor[(9, 8, 11), float64] */;
  %460 = %458.2;
  (%459, %460, meta[relay.Constant][26] /* ty=Tensor[(585), float64] */, %var_7454)
}

def @func_4301(%var_4299: Tensor[(16, 5, 16), float32], %var_4300: Tensor[(2, 32), float32]) -> (Tensor[(16, 5, 16), float32], Tensor[(2, 32), float32], Tensor[(4, 4, 4), float64]) {
  %472 = fn (%var_4262: Tensor[(16, 5, 16), float32], %var_4268: Tensor[(2, 32), float32]) -> (Tensor[(16, 5, 16), float32], Tensor[(2, 32), float32], Tensor[(4, 4, 4), float64]) {
    %461 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 5, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 16), float32] */;
    %462 = shape_of(%var_4262, dtype="int32") /* ty=Tensor[(3), int32] */;
    %463 = cast(%var_4262, dtype="float32") /* ty=Tensor[(16, 5, 16), float32] */;
    %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %465 = cast(%var_4268, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
    %466 = reshape(%465, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %467 = @func_2038(%466) /* ty=(Tensor[(4, 4, 4), float32],) */;
    %468 = %467.0;
    %469 = cast(%468, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
    %470 = floor_divide(%463, %464) /* ty=Tensor[(16, 5, 16), float32] */;
    %471 = cos(%469) /* ty=Tensor[(4, 4, 4), float64] */;
    (%470, %var_4268, %471)
  };
  %472(%var_4299, %var_4300) /* ty=(Tensor[(16, 5, 16), float32], Tensor[(2, 32), float32], Tensor[(4, 4, 4), float64]) */
}

def @func_902(%var_900: Tensor[(14, 4, 13), int8], %var_901: Tensor[(14, 4, 13), int8]) -> Tensor[(14, 4, 13), int8] {
  %477 = fn (%var_891: Tensor[(14, 4, 13), int8], %var_892: Tensor[(14, 4, 13), int8]) -> Tensor[(14, 4, 13), int8] {
    %473 = cast(%var_892, dtype="int8") /* ty=Tensor[(14, 4, 13), int8] */;
    %474 = shape_of(%var_891, dtype="int32") /* ty=Tensor[(3), int32] */;
    %475 = cast(%var_891, dtype="int8") /* ty=Tensor[(14, 4, 13), int8] */;
    %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    logical_xor(%475, %476) /* ty=Tensor[(14, 4, 13), int8] */
  };
  %477(%var_900, %var_901) /* ty=Tensor[(14, 4, 13), int8] */
}

def @func_5176() -> (Tensor[(10, 9, 16), float32],) {
  %478 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %479 = acosh(%478) /* ty=Tensor[(10, 9, 16), float32] */;
  %480 = cast(%479, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %481 = sinh(%480) /* ty=Tensor[(10, 9, 16), float32] */;
  (%481,)
}

def @func_6878() -> Tensor[(6, 4, 3), float32] {
  @func_6876() /* ty=Tensor[(6, 4, 3), float32] */
}

def @func_7852(%var_7849: Tensor[(12, 7, 12), float32], %var_7850: Tensor[(1600), float32], %var_7851: Tensor[(450), int16]) -> (Tensor[(16, 10, 10), float32], Tensor[(1600), float32], Tensor[(9, 8, 11), bool], Tensor[(12, 7, 12), uint64], Tensor[(6, 4, 3), float32], Tensor[(126), float64], Tensor[(450), int16]) {
  @func_7847(%var_7849, %var_7850, %var_7851) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(1600), float32], Tensor[(9, 8, 11), bool], Tensor[(12, 7, 12), uint64], Tensor[(6, 4, 3), float32], Tensor[(126), float64], Tensor[(450), int16]) */
}

def @func_4606() -> (Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) {
  %482 = @func_4562() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %483 = cast(meta[relay.Constant][29] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %484 = cast(meta[relay.Constant][29] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %485 = reshape(%483, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %486 = reshape(%484, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
  %487 = @func_54(%485, %486) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
  %488 = %482.0;
  %489 = %487.0;
  (%488, %489, meta[relay.Constant][29] /* ty=Tensor[(450), int16] */)
}

def @func_6227() -> Tensor[(15, 6, 5), int16] {
  %490 = fn () -> Tensor[(15, 6, 5), int16] {
    @func_5381() /* ty=Tensor[(15, 6, 5), int16] */
  };
  %490() /* ty=Tensor[(15, 6, 5), int16] */
}

def @func_5062(%var_5061: Tensor[(16), float32]) -> (Tensor[(6, 4, 3), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(16), float32]) {
  %498 = fn (%var_5054: Tensor[(16), float32]) -> (Tensor[(6, 4, 3), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(16), float32]) {
    %491 = @func_4983() /* ty=(Tensor[(6, 4, 3), float32],) */;
    %492 = cast(-0.61056f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %493 = cast(%var_5054, dtype="float32") /* ty=Tensor[(16), float32] */;
    %494 = reshape(%492, newshape=[]) /* ty=float32 */;
    %495 = reshape(%493, newshape=[4, 1, 4]) /* ty=Tensor[(4, 1, 4), float32] */;
    %496 = %491.0;
    %497 = @func_361(%494, %495) /* ty=Tensor[(4, 1, 4), float32] */;
    (%496, %497, -0.61056f /* ty=float32 */, %var_5054)
  };
  %498(%var_5061) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(16), float32]) */
}

def @func_975(%var_973: Tensor[(7, 14, 10), uint64], %var_974: Tensor[(7, 14, 10), uint64]) -> Tensor[(7, 14, 10), int8] {
  %508 = fn (%var_962: Tensor[(7, 14, 10), uint64], %var_963: Tensor[(7, 14, 10), uint64]) -> Tensor[(7, 14, 10), int8] {
    %499 = cast(%var_963, dtype="bool") /* ty=Tensor[(7, 14, 10), bool] */;
    %500 = shape_of(%var_962, dtype="int32") /* ty=Tensor[(3), int32] */;
    %501 = cast(%var_962, dtype="bool") /* ty=Tensor[(7, 14, 10), bool] */;
    %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %503 = not_equal(%501, %502) /* ty=Tensor[(7, 14, 10), bool] */;
    %504 = cast(%var_963, dtype="int8") /* ty=Tensor[(7, 14, 10), int8] */;
    %505 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
    %506 = cast(%503, dtype="int8") /* ty=Tensor[(7, 14, 10), int8] */;
    %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_or(%506, %507) /* ty=Tensor[(7, 14, 10), int8] */
  };
  %508(%var_973, %var_974) /* ty=Tensor[(7, 14, 10), int8] */
}

def @func_2888(%var_2887: Tensor[(16, 10, 10), float32]) -> (Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) {
  %513 = fn (%var_2880: Tensor[(16, 10, 10), float32]) -> (Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) {
    %509 = cast(%var_2880, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
    %510 = cast(%var_2880, dtype="float32") /* ty=Tensor[(16, 10, 10), float32] */;
    %511 = log(%509) /* ty=Tensor[(16, 10, 10), float32] */;
    %512 = log2(%510) /* ty=Tensor[(16, 10, 10), float32] */;
    (%511, %512)
  };
  %513(%var_2887) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) */
}

def @func_6876() -> Tensor[(6, 4, 3), float32] {
  %514 = @func_4983() /* ty=(Tensor[(6, 4, 3), float32],) */;
  %514.0
}

def @func_5506(%var_5504: Tensor[(9, 8), float64], %var_5505: Tensor[(9, 8), float64]) -> (Tensor[(9, 8), float64],) {
  %520 = fn (%var_5495: Tensor[(9, 8), float64], %var_5496: Tensor[(9, 8), float64]) -> (Tensor[(9, 8), float64],) {
    %515 = cast(%var_5496, dtype="float64") /* ty=Tensor[(9, 8), float64] */;
    %516 = shape_of(%var_5495, dtype="int32") /* ty=Tensor[(2), int32] */;
    %517 = cast(%var_5495, dtype="float64") /* ty=Tensor[(9, 8), float64] */;
    %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %519 = floor_mod(%517, %518) /* ty=Tensor[(9, 8), float64] */;
    (%519,)
  };
  %520(%var_5504, %var_5505) /* ty=(Tensor[(9, 8), float64],) */
}

def @func_2704(%var_2703: Tensor[(9, 4, 1), float64]) -> (Tensor[(9, 4, 1), float64],) {
  %523 = fn (%var_2693: Tensor[(9, 4, 1), float64]) -> (Tensor[(9, 4, 1), float64],) {
    %521 = cast(%var_2693, dtype="float64") /* ty=Tensor[(9, 4, 1), float64] */;
    %522 = atanh(%521) /* ty=Tensor[(9, 4, 1), float64] */;
    (%522,)
  };
  %523(%var_2703) /* ty=(Tensor[(9, 4, 1), float64],) */
}

def @func_2607(%var_2605: float32, %var_2606: Tensor[(28), float32]) -> (Tensor[(10, 12, 8), float32], Tensor[(4, 1, 4), float32], Tensor[(48), float32], Tensor[(450), int16], float32, Tensor[(1, 4, 7), float32], Tensor[(28), float32]) {
  %538 = fn (%var_2587: float32, %var_2590: Tensor[(28), float32]) -> (Tensor[(10, 12, 8), float32], Tensor[(4, 1, 4), float32], Tensor[(48), float32], Tensor[(450), int16], float32, Tensor[(1, 4, 7), float32], Tensor[(28), float32]) {
    %524 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(10, 12, 8), float32] */;
    %525 = cast(meta[relay.Constant][31] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %526 = cast(meta[relay.Constant][32] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
    %527 = cast(%var_2587, dtype="float32") /* ty=float32 */;
    %528 = reshape(%525, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), float32] */;
    %529 = reshape(%526, newshape=[450]) /* ty=Tensor[(450), int16] */;
    %530 = reshape(%527, newshape=[]) /* ty=float32 */;
    %531 = @func_507(%528, %529, %530) /* ty=(Tensor[(15, 6, 5), float32], Tensor[(4, 1, 4), float32], float32, Tensor[(4, 1, 4), float32], Tensor[(12, 4, 16), float32], Tensor[(12, 4, 450), uint8], Tensor[(12, 4, 450), float32]) */;
    %532 = cast(%var_2590, dtype="float32") /* ty=Tensor[(28), float32] */;
    %533 = reshape(%532, newshape=[1, 4, 7]) /* ty=Tensor[(1, 4, 7), float32] */;
    %534 = @func_986(%533) /* ty=(Tensor[(1, 4, 7), float32],) */;
    %535 = acosh(%524) /* ty=Tensor[(10, 12, 8), float32] */;
    %536 = %531.3;
    %537 = %534.0;
    (%535, %536, meta[relay.Constant][31] /* ty=Tensor[(48), float32] */, meta[relay.Constant][32] /* ty=Tensor[(450), int16] */, %var_2587, %537, %var_2590)
  };
  %538(%var_2605, %var_2606) /* ty=(Tensor[(10, 12, 8), float32], Tensor[(4, 1, 4), float32], Tensor[(48), float32], Tensor[(450), int16], float32, Tensor[(1, 4, 7), float32], Tensor[(28), float32]) */
}

def @func_5475(%var_5472: int8, %var_5473: Tensor[(195, 3), float64], %var_5474: Tensor[(450), int16]) -> (Tensor[(6, 4, 3), float32], Tensor[(13, 6, 1), bool], int8, Tensor[(450), int16], Tensor[(54), int16], Tensor[(195, 3), float64], Tensor[(450), int16]) {
  %553 = fn (%var_5451: int8, %var_5468: Tensor[(195, 3), float64], %var_5469: Tensor[(450), int16]) -> (Tensor[(6, 4, 3), float32], Tensor[(13, 6, 1), bool], int8, Tensor[(450), int16], Tensor[(54), int16], Tensor[(195, 3), float64], Tensor[(450), int16]) {
    %539 = @func_4882() /* ty=(Tensor[(6, 4, 3), float32],) */;
    %540 = cast(%var_5451, dtype="int8") /* ty=int8 */;
    %541 = reshape(%540, newshape=[]) /* ty=int8 */;
    %542 = @func_3651(%541) /* ty=(Tensor[(13, 6, 1), int8], Tensor[(13, 6, 1), bool]) */;
    %543 = cast(meta[relay.Constant][33] /* ty=Tensor[(54), int16] */, dtype="int16") /* ty=Tensor[(54), int16] */;
    %544 = cast(%var_5468, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
    %545 = cast(%var_5469, dtype="int16") /* ty=Tensor[(450), int16] */;
    %546 = reshape(%543, newshape=[3, 9, 2]) /* ty=Tensor[(3, 9, 2), int16] */;
    %547 = reshape(%544, newshape=[585]) /* ty=Tensor[(585), float64] */;
    %548 = reshape(%545, newshape=[450]) /* ty=Tensor[(450), int16] */;
    %549 = @func_4472(%546, %547, %548) /* ty=(Tensor[(3, 9, 2), int16], Tensor[(450), int16], Tensor[(585), float64], Tensor[(450), int16], Tensor[(980), uint64], Tensor[(252), uint8], Tensor[(2688), int32]) */;
    %550 = %539.0;
    %551 = %542.1;
    %552 = %549.3;
    (%550, %551, %var_5451, %552, meta[relay.Constant][33] /* ty=Tensor[(54), int16] */, %var_5468, %var_5469)
  };
  %553(%var_5472, %var_5473, %var_5474) /* ty=(Tensor[(6, 4, 3), float32], Tensor[(13, 6, 1), bool], int8, Tensor[(450), int16], Tensor[(54), int16], Tensor[(195, 3), float64], Tensor[(450), int16]) */
}

def @func_5636() -> (Tensor[(15, 6, 5), int16], Tensor[(13, 6, 1), int64]) {
  %554 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
  %555 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %556 = reshape(%555, newshape=[]) /* ty=int8 */;
  %557 = @func_3651(%556) /* ty=(Tensor[(13, 6, 1), int8], Tensor[(13, 6, 1), bool]) */;
  %558 = %557.1;
  %559 = cast(%558, dtype="int16") /* ty=Tensor[(13, 6, 1), int16] */;
  %560 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="int16") /* ty=int16 */;
  %561 = logical_xor(%559, %560) /* ty=Tensor[(13, 6, 1), int16] */;
  %562 = cast(%561, dtype="int64") /* ty=Tensor[(13, 6, 1), int64] */;
  %563 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="int64") /* ty=int64 */;
  %564 = %554.1;
  %565 = add(%562, %563) /* ty=Tensor[(13, 6, 1), int64] */;
  (%564, %565)
}

def @func_1099(%var_1097: Tensor[(14, 16, 12), int32], %var_1098: Tensor[(14, 16, 12), int32]) -> (Tensor[(14, 16, 12), bool],) {
  @func_1095(%var_1097, %var_1098) /* ty=(Tensor[(14, 16, 12), bool],) */
}

def @func_2040(%var_2039: Tensor[(4, 4, 4), float32]) -> (Tensor[(4, 4, 4), float32],) {
  %568 = fn (%var_2027: Tensor[(4, 4, 4), float32]) -> (Tensor[(4, 4, 4), float32],) {
    %566 = cast(%var_2027, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
    %567 = asin(%566) /* ty=Tensor[(4, 4, 4), float32] */;
    (%567,)
  };
  %568(%var_2039) /* ty=(Tensor[(4, 4, 4), float32],) */
}

def @func_5011(%var_5009: Tensor[(1, 14, 6), float64]) -> (Tensor[(1, 14, 6), float64],) {
  @func_5008(%var_5009) /* ty=(Tensor[(1, 14, 6), float64],) */
}

def @func_2529(%var_2527: uint64, %var_2528: Tensor[(1, 14, 16), uint64]) -> (Tensor[(1, 14, 16), uint64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) {
  @func_2525(%var_2527, %var_2528) /* ty=(Tensor[(1, 14, 16), uint64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) */
}

def @func_6016(%var_6015: Tensor[(198), int16]) -> (Tensor[(15, 6, 5), int16], Tensor[(2, 9, 11), bool], Tensor[(198), int32]) {
  %580 = fn (%var_5993: Tensor[(198), int16]) -> (Tensor[(15, 6, 5), int16], Tensor[(2, 9, 11), bool], Tensor[(198), int32]) {
    %569 = cast(%var_5993, dtype="int16") /* ty=Tensor[(198), int16] */;
    %570 = cast(%var_5993, dtype="int16") /* ty=Tensor[(198), int16] */;
    %571 = reshape(%569, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), int16] */;
    %572 = reshape(%570, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), int16] */;
    %573 = cast(meta[relay.Constant][35] /* ty=Tensor[(198), int16] */, dtype="int32") /* ty=Tensor[(198), int32] */;
    %574 = shape_of(%var_5993, dtype="int32") /* ty=Tensor[(1), int32] */;
    %575 = cast(%var_5993, dtype="int32") /* ty=Tensor[(198), int32] */;
    %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?), int32] */;
    %577 = @func_5801() /* ty=Tensor[(15, 6, 5), int16] */;
    %578 = @func_2361(%571, %572) /* ty=Tensor[(2, 9, 11), bool] */;
    %579 = logical_xor(%575, %576) /* ty=Tensor[(198), int32] */;
    (%577, %578, %579)
  };
  %580(%var_6015) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(2, 9, 11), bool], Tensor[(198), int32]) */
}

def @func_5595() -> Tensor[(?, 28), bool] {
  %582 = fn () -> Tensor[(?, 28), bool] {
    %581 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
    %581.0
  };
  %582() /* ty=Tensor[(?, 28), bool] */
}

def @func_6343(%var_6340: Tensor[(3, 14, 13), int16], %var_6341: Tensor[(3, 14, 13), int16], %var_6342: Tensor[(780), bool]) -> (Tensor[(3, 14, 13), bool], Tensor[(13, 6, 10), bool], Tensor[(780), bool]) {
  @func_6338(%var_6340, %var_6341, %var_6342) /* ty=(Tensor[(3, 14, 13), bool], Tensor[(13, 6, 10), bool], Tensor[(780), bool]) */
}

def @func_3359(%var_3322: float32) -> (Tensor[(9, 8, 11), bool], Tensor[(14, 16, 12), bool], Tensor[(2688), int32]) {
  %583 = cast(%var_3322, dtype="float32") /* ty=float32 */;
  %584 = cast(meta[relay.Constant][36] /* ty=Tensor[(9, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %585 = mod(%583, %584) /* ty=Tensor[(9, 8, 11), float32] */;
  %586 = cast(%585, dtype="bool") /* ty=Tensor[(9, 8, 11), bool] */;
  %587 = cast(%var_3322, dtype="bool") /* ty=bool */;
  %588 = cast(meta[relay.Constant][37] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %589 = cast(meta[relay.Constant][37] /* ty=Tensor[(2688), int32] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %590 = reshape(%588, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %591 = reshape(%589, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), int32] */;
  %592 = @func_1095(%590, %591) /* ty=(Tensor[(14, 16, 12), bool],) */;
  %593 = greater_equal(%586, %587) /* ty=Tensor[(9, 8, 11), bool] */;
  %594 = %592.0;
  (%593, %594, meta[relay.Constant][37] /* ty=Tensor[(2688), int32] */)
}

def @func_7296(%var_7295: Tensor[(1600), float32]) -> (Tensor[(450), int16], Tensor[(16, 10, 10), float32], Tensor[(1600), float32], Tensor[(15, 6, 5), int16]) {
  %602 = fn (%var_7283: Tensor[(1600), float32]) -> (Tensor[(450), int16], Tensor[(16, 10, 10), float32], Tensor[(1600), float32], Tensor[(15, 6, 5), int16]) {
    %595 = @func_5409() /* ty=(Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) */;
    %596 = cast(%var_7283, dtype="float32") /* ty=Tensor[(1600), float32] */;
    %597 = reshape(%596, newshape=[16, 10, 10]) /* ty=Tensor[(16, 10, 10), float32] */;
    %598 = @func_2886(%597) /* ty=(Tensor[(16, 10, 10), float32], Tensor[(16, 10, 10), float32]) */;
    %599 = %595.0;
    %600 = %598.0;
    %601 = @func_5381() /* ty=Tensor[(15, 6, 5), int16] */;
    (%599, %600, %var_7283, %601)
  };
  %602(%var_7295) /* ty=(Tensor[(450), int16], Tensor[(16, 10, 10), float32], Tensor[(1600), float32], Tensor[(15, 6, 5), int16]) */
}

def @func_4528() -> (Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) {
  %614 = fn () -> (Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) {
    %603 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 4, 3), float32] */;
    %604 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 28), float32] */, dtype="float32") /* ty=Tensor[(1, 28), float32] */;
    %605 = reshape(%604, newshape=[1, 4, 7]) /* ty=Tensor[(1, 4, 7), float32] */;
    %606 = @func_986(%605) /* ty=(Tensor[(1, 4, 7), float32],) */;
    %607 = %606.0;
    %608 = cast(%607, dtype="bool") /* ty=Tensor[(1, 4, 7), bool] */;
    %609 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(1, 28), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %610 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 28), float32] */, dtype="bool") /* ty=Tensor[(1, 28), bool] */;
    %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %612 = cos(%603) /* ty=Tensor[(6, 4, 3), float32] */;
    %613 = less(%610, %611) /* ty=Tensor[(?, 28), bool] */;
    (%612, %613)
  };
  %614() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */
}

def @func_6038() -> (Tensor[(450), int16],) {
  %615 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
  %616 = %615.2;
  (%616,)
}

def @func_57(%var_55: Tensor[(15, 6, 5), int16], %var_56: Tensor[(15, 6, 5), int16]) -> (Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) {
  %625 = fn (%var_37: Tensor[(15, 6, 5), int16], %var_44: Tensor[(15, 6, 5), int16]) -> (Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) {
    %617 = cast(meta[relay.Constant][40] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %618 = cast(%var_37, dtype="int16") /* ty=Tensor[(15, 6, 5), int16] */;
    %619 = cast(%var_44, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
    %620 = shape_of(%var_37, dtype="int32") /* ty=Tensor[(3), int32] */;
    %621 = cast(%var_37, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
    %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %623 = left_shift(%617, %618) /* ty=Tensor[(15, 6, 5), int16] */;
    %624 = mod(%621, %622) /* ty=Tensor[(15, 6, 5), float32] */;
    (%623, %624)
  };
  %625(%var_55, %var_56) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */
}

def @func_6469(%var_6467: float64, %var_6468: Tensor[(10, 9, 8), float64]) -> (Tensor[(10, 9, 8), float64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32], Tensor[(10, 9, 8), float32]) {
  @func_6465(%var_6467, %var_6468) /* ty=(Tensor[(10, 9, 8), float64], Tensor[(14, 16, 12), bool], Tensor[(2688), int32], Tensor[(10, 9, 8), float32]) */
}

def @func_7048(%var_7047: Tensor[(486), float64]) -> (Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(486), bool]) {
  %639 = fn (%var_7002: Tensor[(486), float64]) -> (Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(486), bool]) {
    %626 = cast(%var_7002, dtype="float64") /* ty=Tensor[(486), float64] */;
    %627 = cast(meta[relay.Constant][41] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
    %628 = cast(%var_7002, dtype="float32") /* ty=Tensor[(486), float32] */;
    %629 = reshape(%626, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float64] */;
    %630 = reshape(%627, newshape=[640]) /* ty=Tensor[(640), float32] */;
    %631 = reshape(%628, newshape=[9, 9, 6]) /* ty=Tensor[(9, 9, 6), float32] */;
    %632 = @func_1862(%629, %630, %631) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(9, 9, 6), float64], Tensor[(9, 9, 6), uint16]) */;
    %633 = @func_5409() /* ty=(Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) */;
    %634 = %633.4;
    %635 = cast(%var_7002, dtype="bool") /* ty=Tensor[(486), bool] */;
    %636 = cast(%634, dtype="bool") /* ty=bool */;
    %637 = %632.0;
    %638 = less_equal(%635, %636) /* ty=Tensor[(486), bool] */;
    (%637, meta[relay.Constant][41] /* ty=Tensor[(640), float32] */, %638)
  };
  %639(%var_7047) /* ty=(Tensor[(10, 16, 4), float64], Tensor[(640), float32], Tensor[(486), bool]) */
}

def @func_7263(%var_7262: Tensor[(11, 28), bool]) -> (Tensor[(11, 28), bool],) {
  %644 = fn (%var_7254: Tensor[(11, 28), bool]) -> (Tensor[(11, 28), bool],) {
    %640 = @func_5594() /* ty=Tensor[(?, 28), bool] */;
    %641 = cast(%640, dtype="bool") /* ty=Tensor[(?, 28), bool] */;
    %642 = cast(%var_7254, dtype="bool") /* ty=Tensor[(11, 28), bool] */;
    %643 = less_equal(%641, %642) /* ty=Tensor[(11, 28), bool] */;
    (%643,)
  };
  %644(%var_7262) /* ty=(Tensor[(11, 28), bool],) */
}

def @func_4563() -> (Tensor[(6, 4, 3), float32],) {
  %647 = fn () -> (Tensor[(6, 4, 3), float32],) {
    %645 = @func_4527() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(?, 28), bool]) */;
    %646 = %645.0;
    (%646,)
  };
  %647() /* ty=(Tensor[(6, 4, 3), float32],) */
}

def @func_6290() -> (Tensor[(?, 28), bool], Tensor[(15, 6, 5), int16], Tensor[(9, 8), float64], Tensor[(72), float64], Tensor[(?, 28), bool]) {
  %658 = fn () -> (Tensor[(?, 28), bool], Tensor[(15, 6, 5), int16], Tensor[(9, 8), float64], Tensor[(72), float64], Tensor[(?, 28), bool]) {
    %648 = cast(meta[relay.Constant][42] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %649 = cast(meta[relay.Constant][42] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %650 = reshape(%648, newshape=[9, 8]) /* ty=Tensor[(9, 8), float64] */;
    %651 = reshape(%649, newshape=[9, 8]) /* ty=Tensor[(9, 8), float64] */;
    %652 = @func_5503(%650, %651) /* ty=(Tensor[(9, 8), float64],) */;
    %653 = @func_4699() /* ty=(Tensor[(?, 28), bool],) */;
    %654 = @func_5594() /* ty=Tensor[(?, 28), bool] */;
    %655 = @func_5759() /* ty=Tensor[(15, 6, 5), int16] */;
    %656 = %652.0;
    %657 = %653.0;
    (%654, %655, %656, meta[relay.Constant][42] /* ty=Tensor[(72), float64] */, %657)
  };
  %658() /* ty=(Tensor[(?, 28), bool], Tensor[(15, 6, 5), int16], Tensor[(9, 8), float64], Tensor[(72), float64], Tensor[(?, 28), bool]) */
}

def @func_1986(%var_1984: Tensor[(6, 3, 6), float32], %var_1985: Tensor[(12, 4), float32]) -> (Tensor[(6, 3, 6), float32], Tensor[(4, 1, 4), float32], Tensor[(12, 4), float32], Tensor[(450), int16], float32) {
  @func_1982(%var_1984, %var_1985) /* ty=(Tensor[(6, 3, 6), float32], Tensor[(4, 1, 4), float32], Tensor[(12, 4), float32], Tensor[(450), int16], float32) */
}

def @func_4608() -> (Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) {
  @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */
}

def @func_4701() -> (Tensor[(?, 28), bool],) {
  @func_4699() /* ty=(Tensor[(?, 28), bool],) */
}

def @func_7090(%var_7088: float32, %var_7089: Tensor[(135), float32]) -> (Tensor[(9, 5, 3), float32], float32, Tensor[(27), float32], Tensor[(135), float32], Tensor[(15, 6, 5), float32]) {
  @func_7086(%var_7088, %var_7089) /* ty=(Tensor[(9, 5, 3), float32], float32, Tensor[(27), float32], Tensor[(135), float32], Tensor[(15, 6, 5), float32]) */
}

def @main(%var_7866: Tensor[(12, 28), bool]) -> (Tensor[(12, 28), uint32],) {
  %659 = @func_5594() /* ty=Tensor[(?, 28), bool] */;
  %660 = cast(%659, dtype="uint32") /* ty=Tensor[(?, 28), uint32] */;
  %661 = cast(%var_7866, dtype="uint32") /* ty=Tensor[(12, 28), uint32] */;
  %662 = multiply(%660, %661) /* ty=Tensor[(12, 28), uint32] */;
  (%662,)
}

def @func_5410() -> (Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) {
  %677 = fn () -> (Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) {
    %663 = @func_4606() /* ty=(Tensor[(6, 4, 3), float32], Tensor[(15, 6, 5), int16], Tensor[(450), int16]) */;
    %664 = cast(meta[relay.Constant][43] /* ty=Tensor[(780), bool] */, dtype="bool") /* ty=Tensor[(780), bool] */;
    %665 = cast(meta[relay.Constant][43] /* ty=Tensor[(780), bool] */, dtype="bool") /* ty=Tensor[(780), bool] */;
    %666 = reshape(%664, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), bool] */;
    %667 = reshape(%665, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), bool] */;
    %668 = @func_874(%666, %667) /* ty=(Tensor[(13, 6, 10), bool],) */;
    %669 = cast(8.12692f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %670 = cast(meta[relay.Constant][44] /* ty=Tensor[(28, 1), float32] */, dtype="float32") /* ty=Tensor[(28, 1), float32] */;
    %671 = reshape(%669, newshape=[]) /* ty=float32 */;
    %672 = reshape(%670, newshape=[28]) /* ty=Tensor[(28), float32] */;
    %673 = @func_2604(%671, %672) /* ty=(Tensor[(10, 12, 8), float32], Tensor[(4, 1, 4), float32], Tensor[(48), float32], Tensor[(450), int16], float32, Tensor[(1, 4, 7), float32], Tensor[(28), float32]) */;
    %674 = %663.2;
    %675 = %668.0;
    %676 = %673.3;
    (%674, %675, meta[relay.Constant][43] /* ty=Tensor[(780), bool] */, %676, 8.12692f /* ty=float32 */, meta[relay.Constant][44] /* ty=Tensor[(28, 1), float32] */)
  };
  %677() /* ty=(Tensor[(450), int16], Tensor[(13, 6, 10), bool], Tensor[(780), bool], Tensor[(450), int16], float32, Tensor[(28, 1), float32]) */
}

def @func_5178() -> (Tensor[(10, 9, 16), float32],) {
  @func_5176() /* ty=(Tensor[(10, 9, 16), float32],) */
}

def @func_5277(%var_5273: Tensor[(10, 13, 7), float64], %var_5274: Tensor[(33, 6), int16], %var_5275: Tensor[(10, 13, 7), float64], %var_5276: Tensor[(728), int8]) -> (Tensor[(2, 9, 11), bool], Tensor[(33, 6), int16], Tensor[(10, 13, 7), bool], Tensor[(4, 4, 4), float64], Tensor[(16, 80), float32], Tensor[(64), float32], Tensor[(14, 4, 13), int8], Tensor[(728), int8]) {
  %701 = fn (%var_5213: Tensor[(10, 13, 7), float64], %var_5222: Tensor[(33, 6), int16], %var_5227: Tensor[(10, 13, 7), float64], %var_5259: Tensor[(728), int8]) -> (Tensor[(2, 9, 11), bool], Tensor[(33, 6), int16], Tensor[(10, 13, 7), bool], Tensor[(4, 4, 4), float64], Tensor[(16, 80), float32], Tensor[(64), float32], Tensor[(14, 4, 13), int8], Tensor[(728), int8]) {
    %678 = cast(%var_5222, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
    %679 = cast(%var_5222, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
    %680 = reshape(%678, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), int16] */;
    %681 = reshape(%679, newshape=[2, 9, 11]) /* ty=Tensor[(2, 9, 11), int16] */;
    %682 = cast(%var_5213, dtype="float64") /* ty=Tensor[(10, 13, 7), float64] */;
    %683 = log2(%682) /* ty=Tensor[(10, 13, 7), float64] */;
    %684 = cast(%var_5227, dtype="bool") /* ty=Tensor[(10, 13, 7), bool] */;
    %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
    %686 = cast(%683, dtype="bool") /* ty=Tensor[(10, 13, 7), bool] */;
    %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %688 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 80), float32] */, dtype="float32") /* ty=Tensor[(16, 80), float32] */;
    %689 = cast(meta[relay.Constant][46] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
    %690 = reshape(%688, newshape=[16, 5, 16]) /* ty=Tensor[(16, 5, 16), float32] */;
    %691 = reshape(%689, newshape=[2, 32]) /* ty=Tensor[(2, 32), float32] */;
    %692 = @func_4298(%690, %691) /* ty=(Tensor[(16, 5, 16), float32], Tensor[(2, 32), float32], Tensor[(4, 4, 4), float64]) */;
    %693 = cast(%var_5259, dtype="int8") /* ty=Tensor[(728), int8] */;
    %694 = cast(%var_5259, dtype="int8") /* ty=Tensor[(728), int8] */;
    %695 = reshape(%693, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), int8] */;
    %696 = reshape(%694, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), int8] */;
    %697 = @func_2361(%680, %681) /* ty=Tensor[(2, 9, 11), bool] */;
    %698 = less(%686, %687) /* ty=Tensor[(10, 13, 7), bool] */;
    %699 = %692.2;
    %700 = @func_899(%695, %696) /* ty=Tensor[(14, 4, 13), int8] */;
    (%697, %var_5222, %698, %699, meta[relay.Constant][45] /* ty=Tensor[(16, 80), float32] */, meta[relay.Constant][46] /* ty=Tensor[(64), float32] */, %700, %var_5259)
  };
  %701(%var_5273, %var_5274, %var_5275, %var_5276) /* ty=(Tensor[(2, 9, 11), bool], Tensor[(33, 6), int16], Tensor[(10, 13, 7), bool], Tensor[(4, 4, 4), float64], Tensor[(16, 80), float32], Tensor[(64), float32], Tensor[(14, 4, 13), int8], Tensor[(728), int8]) */
}

def @func_1095(%var_1076: Tensor[(14, 16, 12), int32], %var_1077: Tensor[(14, 16, 12), int32]) -> (Tensor[(14, 16, 12), bool],) {
  %702 = cast(%var_1077, dtype="bool") /* ty=Tensor[(14, 16, 12), bool] */;
  %703 = shape_of(%var_1076, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%var_1076, dtype="bool") /* ty=Tensor[(14, 16, 12), bool] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %706 = less_equal(%704, %705) /* ty=Tensor[(14, 16, 12), bool] */;
  (%706,)
}

def @func_6338(%var_6324: Tensor[(3, 14, 13), int16], %var_6325: Tensor[(3, 14, 13), int16], %var_6336: Tensor[(780), bool]) -> (Tensor[(3, 14, 13), bool], Tensor[(13, 6, 10), bool], Tensor[(780), bool]) {
  %707 = cast(%var_6325, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %708 = shape_of(%var_6324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%var_6324, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %711 = cast(%var_6336, dtype="bool") /* ty=Tensor[(780), bool] */;
  %712 = cast(%var_6336, dtype="bool") /* ty=Tensor[(780), bool] */;
  %713 = reshape(%711, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), bool] */;
  %714 = reshape(%712, newshape=[13, 6, 10]) /* ty=Tensor[(13, 6, 10), bool] */;
  %715 = @func_874(%713, %714) /* ty=(Tensor[(13, 6, 10), bool],) */;
  %716 = less(%709, %710) /* ty=Tensor[(3, 14, 13), bool] */;
  %717 = %715.0;
  (%716, %717, %var_6336)
}

def @func_2364(%var_2362: Tensor[(2, 9, 11), int16], %var_2363: Tensor[(2, 9, 11), int16]) -> Tensor[(2, 9, 11), bool] {
  %722 = fn (%var_2356: Tensor[(2, 9, 11), int16], %var_2357: Tensor[(2, 9, 11), int16]) -> Tensor[(2, 9, 11), bool] {
    %718 = cast(%var_2357, dtype="bool") /* ty=Tensor[(2, 9, 11), bool] */;
    %719 = shape_of(%var_2356, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%var_2356, dtype="bool") /* ty=Tensor[(2, 9, 11), bool] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%720, %721) /* ty=Tensor[(2, 9, 11), bool] */
  };
  %722(%var_2362, %var_2363) /* ty=Tensor[(2, 9, 11), bool] */
}

def @func_6749(%var_6747: Tensor[(4, 14, 8), int8]) -> (Tensor[(4, 14, 8), bool],) {
  @func_6746(%var_6747) /* ty=(Tensor[(4, 14, 8), bool],) */
}

def @func_988(%var_987: Tensor[(1, 4, 7), float32]) -> (Tensor[(1, 4, 7), float32],) {
  %725 = fn (%var_980: Tensor[(1, 4, 7), float32]) -> (Tensor[(1, 4, 7), float32],) {
    %723 = cast(%var_980, dtype="float32") /* ty=Tensor[(1, 4, 7), float32] */;
    %724 = sinh(%723) /* ty=Tensor[(1, 4, 7), float32] */;
    (%724,)
  };
  %725(%var_987) /* ty=(Tensor[(1, 4, 7), float32],) */
}

def @func_5100(%var_5097: float32, %var_5098: Tensor[(9, 1, 3), float32], %var_5099: Tensor[(9, 5, 3), float32]) -> Tensor[(9, 5, 3), float32] {
  %731 = fn (%var_5080: float32, %var_5081: Tensor[(9, 1, 3), float32], %var_5086: Tensor[(9, 5, 3), float32]) -> Tensor[(9, 5, 3), float32] {
    %726 = cast(%var_5080, dtype="float32") /* ty=float32 */;
    %727 = cast(%var_5081, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
    %728 = divide(%726, %727) /* ty=Tensor[(9, 1, 3), float32] */;
    %729 = cast(%728, dtype="float32") /* ty=Tensor[(9, 1, 3), float32] */;
    %730 = cast(%var_5086, dtype="float32") /* ty=Tensor[(9, 5, 3), float32] */;
    mod(%729, %730) /* ty=Tensor[(9, 5, 3), float32] */
  };
  %731(%var_5097, %var_5098, %var_5099) /* ty=Tensor[(9, 5, 3), float32] */
}

def @func_541(%var_539: Tensor[(13, 15, 3), float64], %var_540: Tensor[(450), int16]) -> (Tensor[(13, 15, 3), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) {
  %740 = fn (%var_513: Tensor[(13, 15, 3), float64], %var_523: Tensor[(450), int16]) -> (Tensor[(13, 15, 3), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) {
    %732 = cast(%var_513, dtype="float64") /* ty=Tensor[(13, 15, 3), float64] */;
    %733 = cast(%var_523, dtype="int16") /* ty=Tensor[(450), int16] */;
    %734 = cast(%var_523, dtype="int16") /* ty=Tensor[(450), int16] */;
    %735 = reshape(%733, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
    %736 = reshape(%734, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), int16] */;
    %737 = @func_54(%735, %736) /* ty=(Tensor[(15, 6, 5), int16], Tensor[(15, 6, 5), float32]) */;
    %738 = rsqrt(%732) /* ty=Tensor[(13, 15, 3), float64] */;
    %739 = %737.1;
    (%738, %739, %var_523)
  };
  %740(%var_539, %var_540) /* ty=(Tensor[(13, 15, 3), float64], Tensor[(15, 6, 5), float32], Tensor[(450), int16]) */
}

def @func_7086(%var_7067: float32, %var_7069: Tensor[(135), float32]) -> (Tensor[(9, 5, 3), float32], float32, Tensor[(27), float32], Tensor[(135), float32], Tensor[(15, 6, 5), float32]) {
  %741 = cast(%var_7067, dtype="float32") /* ty=float32 */;
  %742 = cast(meta[relay.Constant][47] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %743 = cast(%var_7069, dtype="float32") /* ty=Tensor[(135), float32] */;
  %744 = reshape(%741, newshape=[]) /* ty=float32 */;
  %745 = reshape(%742, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float32] */;
  %746 = reshape(%743, newshape=[9, 5, 3]) /* ty=Tensor[(9, 5, 3), float32] */;
  %747 = @func_5783() /* ty=Tensor[(15, 6, 5), int16] */;
  %748 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 6, 5), int16] */, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %749 = shape_of(%747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%747, dtype="float32") /* ty=Tensor[(15, 6, 5), float32] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %752 = @func_5096(%744, %745, %746) /* ty=Tensor[(9, 5, 3), float32] */;
  %753 = floor_divide(%750, %751) /* ty=Tensor[(15, 6, 5), float32] */;
  (%752, %var_7067, meta[relay.Constant][47] /* ty=Tensor[(27), float32] */, %var_7069, %753)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_1494() -> Tensor[(6, 15, 14), float64] {
  %0 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %0.0
}

def @func_5245(%var_5228: Tensor[(12, 6), float64]) -> (Tensor[(12, 6), float64], Tensor[(6, 15, 14), float32]) {
  %1 = cast(%var_5228, dtype="float64") /* ty=Tensor[(12, 6), float64] */;
  %2 = tan(%1) /* ty=Tensor[(12, 6), float64] */;
  %3 = @func_4424() /* ty=Tensor[(6, 15, 14), float32] */;
  (%2, %3)
}

def @func_330(%var_304: Tensor[(9, 2, 11), int16], %var_305: Tensor[(9, 2, 11), int16]) -> (Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) {
  %4 = cast(%var_305, dtype="int16") /* ty=Tensor[(9, 2, 11), int16] */;
  %5 = shape_of(%var_304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_304, dtype="int16") /* ty=Tensor[(9, 2, 11), int16] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %8 = cast(%var_305, dtype="bool") /* ty=Tensor[(9, 2, 11), bool] */;
  %9 = shape_of(%var_304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%var_304, dtype="bool") /* ty=Tensor[(9, 2, 11), bool] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %12 = bitwise_xor(%6, %7) /* ty=Tensor[(9, 2, 11), int16] */;
  %13 = less_equal(%10, %11) /* ty=Tensor[(9, 2, 11), bool] */;
  (%12, %13)
}

def @func_1007(%var_1004: Tensor[(14, 14, 15), float64]) -> Tensor[(14, 14, 15), float64] {
  %14 = cast(%var_1004, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  sigmoid(%14) /* ty=Tensor[(14, 14, 15), float64] */
}

def @func_8297(%var_8282: Tensor[(198), int16]) -> (Tensor[(96), float64], Tensor[(14, 14, 15), float64], Tensor[(198), int16], Tensor[(6, 15, 14), float64]) {
  %15 = @func_4683() /* ty=(Tensor[(96), float64],) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(96), float64] */;
  %18 = cast(%var_8282, dtype="int16") /* ty=Tensor[(198), int16] */;
  %19 = reshape(%17, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %20 = reshape(%18, newshape=[198]) /* ty=Tensor[(198), int16] */;
  %21 = @func_5954(%19, %20) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(198), bool], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %22 = %21.1;
  %23 = @func_7536() /* ty=Tensor[(6, 15, 14), float64] */;
  (%16, %22, %var_8282, %23)
}

def @func_5569(%var_5562: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), bool], Tensor[(3, 10, 9), float64], Tensor[(2940), uint64]) {
  %24 = @func_2082() /* ty=(Tensor[(6, 15, 14), bool],) */;
  %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %26 = reshape(%25, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %27 = @func_2418(%26) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(3, 10, 9), float64], Tensor[(832), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %28 = cast(%var_5562, dtype="uint64") /* ty=Tensor[(2940), uint64] */;
  %29 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(2940), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(2940), float64] */, dtype="uint64") /* ty=Tensor[(2940), uint64] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %32 = %24.0;
  %33 = %27.1;
  %34 = right_shift(%30, %31) /* ty=Tensor[(2940), uint64] */;
  (%32, %33, %34)
}

def @func_6621() -> (Tensor[(6, 15, 14), float64], uint32, uint32) {
  %35 = cast(meta[relay.Constant][1] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %36 = reshape(%35, newshape=[]) /* ty=uint32 */;
  %37 = @func_4068(%36) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(30, 98), uint32], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float64]) */;
  %38 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
  %39 = %37.2;
  (%38, %39, meta[relay.Constant][1] /* ty=uint32 */)
}

def @func_5888() -> (Tensor[(6, 15, 14), float64],) {
  %40 = @func_5765() /* ty=Tensor[(6, 15, 14), float64] */;
  (%40,)
}

def @func_3234() -> Tensor[(6, 15, 14), float64] {
  %41 = @func_2595() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %41.0
}

def @func_3094(%var_3064: float32) -> (Tensor[(14, 12, 7), float32], Tensor[(6, 15, 14), float32], Tensor[(832), float64], Tensor[(832), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %42 = cast(%var_3064, dtype="float32") /* ty=float32 */;
  %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 12, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 7), float32] */;
  %44 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %46 = reshape(%45, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %47 = @func_1589(%46) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(96), float64], Tensor[(832), float64]) */;
  %48 = @func_2484() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %49 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %50 = floor_mod(%42, %43) /* ty=Tensor[(14, 12, 7), float32] */;
  %51 = %44.0;
  %52 = %47.2;
  %53 = %48.0;
  %54 = %49.0;
  (%50, %51, %52, meta[relay.Constant][3] /* ty=Tensor[(832), float64] */, %53, %54)
}

def @func_8152() -> Tensor[(6, 15, 14), float64] {
  %55 = @func_2030() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %55.0
}

def @func_4480() -> (Tensor[(6, 15, 14), float64],) {
  %56 = @func_3457() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64]) */;
  %57 = %56.0;
  (%57,)
}

def @func_2572() -> (Tensor[(6, 15, 14), float64],) {
  %58 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %59 = %58.0;
  (%59,)
}

def @func_5217() -> Tensor[(6, 15, 14), float64] {
  %60 = @func_2595() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %60.0
}

def @func_3022(%var_2970: Tensor[(6, 15, 14), float32], %var_2992: Tensor[(270), float64]) -> (Tensor[(6, 15, 14), bool], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1, 2, 9), float64], int8, Tensor[(1, 18), int8]) {
  %61 = @func_2082() /* ty=(Tensor[(6, 15, 14), bool],) */;
  %62 = %61.0;
  %63 = cast(%62, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %64 = exp(%63) /* ty=Tensor[(6, 15, 14), float32] */;
  %65 = cast(%var_2970, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%64, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %69 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %70 = cast(%var_2992, dtype="float64") /* ty=Tensor[(270), float64] */;
  %71 = reshape(%70, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %72 = @func_300(%71) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %73 = cast(%64, dtype="uint8") /* ty=Tensor[(6, 15, 14), uint8] */;
  %74 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(%62, dtype="uint8") /* ty=Tensor[(6, 15, 14), uint8] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %77 = right_shift(%75, %76) /* ty=Tensor[(6, 15, 14), uint8] */;
  %78 = cast(%77, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %79 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%64, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %82 = @func_2954() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */;
  %83 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %84 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 18), int8] */, dtype="int8") /* ty=Tensor[(1, 18), int8] */;
  %85 = reshape(%83, newshape=[]) /* ty=int8 */;
  %86 = reshape(%84, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int8] */;
  %87 = @func_1193(%85, %86) /* ty=(Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) */;
  %88 = greater_equal(%67, %68) /* ty=Tensor[(6, 15, 14), bool] */;
  %89 = %69.0;
  %90 = %72.1;
  %91 = power(%80, %81) /* ty=Tensor[(6, 15, 14), float32] */;
  %92 = %82.2;
  %93 = %87.1;
  (%88, %89, %90, %var_2992, %91, %92, %93, meta[relay.Constant][4] /* ty=int8 */, meta[relay.Constant][5] /* ty=Tensor[(1, 18), int8] */)
}

def @func_5046(%var_5025: float32) -> (Tensor[(14, 12, 7), uint32], Tensor[(14, 12, 7), float64], Tensor[(6, 15, 14), bool]) {
  %94 = cast(%var_5025, dtype="float32") /* ty=float32 */;
  %95 = reshape(%94, newshape=[]) /* ty=float32 */;
  %96 = @func_3094(%95) /* ty=(Tensor[(14, 12, 7), float32], Tensor[(6, 15, 14), float32], Tensor[(832), float64], Tensor[(832), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %97 = %96.0;
  %98 = cast(%97, dtype="uint32") /* ty=Tensor[(14, 12, 7), uint32] */;
  %99 = cast(%var_5025, dtype="uint32") /* ty=uint32 */;
  %100 = cast(%97, dtype="float64") /* ty=Tensor[(14, 12, 7), float64] */;
  %101 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %102 = %101.0;
  %103 = cast(%102, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %104 = cast(%var_5025, dtype="bool") /* ty=bool */;
  %105 = logical_xor(%98, %99) /* ty=Tensor[(14, 12, 7), uint32] */;
  %106 = asin(%100) /* ty=Tensor[(14, 12, 7), float64] */;
  %107 = equal(%103, %104) /* ty=Tensor[(6, 15, 14), bool] */;
  (%105, %106, %107)
}

def @func_5475() -> (Tensor[(6, 15, 14), float32],) {
  %108 = @func_2954() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */;
  %109 = %108.2;
  (%109,)
}

def @func_8195() -> Tensor[(6, 15, 14), float64] {
  @func_3296() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_7028() -> (Tensor[(6, 15, 14), float64],) {
  %110 = @func_3198() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %111 = %110.0;
  (%111,)
}

def @func_1479() -> (Tensor[(6, 15, 14), float64],) {
  %112 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  (%112,)
}

def @func_1644(%var_1601: Tensor[(16, 3, 15), int16], %var_1602: Tensor[(16, 3, 15), int16], %var_1607: uint32, %var_1608: Tensor[(70), uint32], %var_1609: Tensor[(2940), float64]) -> (Tensor[(16, 3, 15), bool], Tensor[(2940), float64], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(16, 3, 15), float64], Tensor[(6, 15, 14), float64]) {
  %113 = cast(%var_1602, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
  %114 = shape_of(%var_1601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%var_1601, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %117 = cast(%var_1607, dtype="uint32") /* ty=uint32 */;
  %118 = cast(%var_1608, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %119 = cast(%var_1609, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %120 = reshape(%117, newshape=[]) /* ty=uint32 */;
  %121 = reshape(%118, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), uint32] */;
  %122 = reshape(%119, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %123 = @func_1048(%120, %121, %122) /* ty=(Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %124 = cast(%var_1602, dtype="float64") /* ty=Tensor[(16, 3, 15), float64] */;
  %125 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %126 = greater_equal(%115, %116) /* ty=Tensor[(16, 3, 15), bool] */;
  %127 = %123.2;
  %128 = sinh(%124) /* ty=Tensor[(16, 3, 15), float64] */;
  %129 = %125.0;
  (%126, %127, %var_1607, %var_1608, %var_1609, %128, %129)
}

def @func_3953(%var_3941: Tensor[(2940), float64]) -> (Tensor[(16, 16, 2), int16], Tensor[(832), float64], Tensor[(2940), float64]) {
  %130 = cast(meta[relay.Constant][6] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %131 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 16, 2), uint64] */, dtype="uint64") /* ty=Tensor[(16, 16, 2), uint64] */;
  %132 = logical_xor(%130, %131) /* ty=Tensor[(16, 16, 2), uint64] */;
  %133 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 16, 2), uint64] */, dtype="int16") /* ty=Tensor[(16, 16, 2), int16] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%132, dtype="int16") /* ty=Tensor[(16, 16, 2), int16] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %137 = cast(%var_3941, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %138 = reshape(%137, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %139 = @func_2418(%138) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(3, 10, 9), float64], Tensor[(832), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %140 = subtract(%135, %136) /* ty=Tensor[(16, 16, 2), int16] */;
  %141 = %139.2;
  (%140, %141, %var_3941)
}

def @func_1712() -> Tensor[(6, 15, 14), float64] {
  @func_1494() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_7536() -> Tensor[(6, 15, 14), float64] {
  %142 = @func_4189() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */;
  %142.0
}

def @func_7247() -> (Tensor[(6, 15, 14), float64], Tensor[(14, 12, 7), float64], float32) {
  %143 = cast(3.41283f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %144 = reshape(%143, newshape=[]) /* ty=float32 */;
  %145 = @func_5046(%144) /* ty=(Tensor[(14, 12, 7), uint32], Tensor[(14, 12, 7), float64], Tensor[(6, 15, 14), bool]) */;
  %146 = @func_5217() /* ty=Tensor[(6, 15, 14), float64] */;
  %147 = %145.1;
  (%146, %147, 3.41283f /* ty=float32 */)
}

def @func_7412() -> Tensor[(4, 208), float64] {
  %148 = @func_4563() /* ty=(Tensor[(4, 208), float64],) */;
  %148.0
}

def @func_7755() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %149 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %150 = @func_7124() /* ty=Tensor[(6, 15, 14), float64] */;
  %151 = %149.0;
  (%150, %151)
}

def @func_3921() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %152 = @func_3530() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %153 = @func_3198() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %154 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  %155 = @func_3296() /* ty=Tensor[(6, 15, 14), float64] */;
  %156 = %152.0;
  %157 = %153.0;
  %158 = @func_3234() /* ty=Tensor[(6, 15, 14), float64] */;
  (%154, %155, %156, %157, %158)
}

def @func_3296() -> Tensor[(6, 15, 14), float64] {
  @func_3234() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_460(%var_383: Tensor[(16, 6), float64], %var_388: Tensor[(1, 270), float64], %var_409: Tensor[(33, 6), int16]) -> (Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) {
  %159 = cast(%var_383, dtype="float64") /* ty=Tensor[(16, 6), float64] */;
  %160 = cast(%var_388, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
  %161 = reshape(%160, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %162 = @func_300(%161) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %163 = cast(meta[relay.Constant][8] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %164 = reshape(%163, newshape=[]) /* ty=uint32 */;
  %165 = @func_76(%164) /* ty=(Tensor[(1, 13, 7), bool],) */;
  %166 = cast(%var_388, dtype="float32") /* ty=Tensor[(1, 270), float32] */;
  %167 = cast(meta[relay.Constant][8] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
  %168 = cast(%var_409, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
  %169 = cast(%var_409, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
  %170 = reshape(%168, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %171 = reshape(%169, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %172 = @func_330(%170, %171) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
  %173 = sin(%159) /* ty=Tensor[(16, 6), float64] */;
  %174 = %162.0;
  %175 = %165.0;
  %176 = subtract(%166, %167) /* ty=Tensor[(1, 270), float32] */;
  %177 = %172.0;
  (%173, %174, %175, %176, %177, %var_409)
}

def @func_1468(%var_1424: Tensor[(6, 15, 14), float64], %var_1449: Tensor[(832), float64]) -> (Tensor[(9, 2, 11), bool], Tensor[(198), int16], Tensor[(6, 15, 14), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64], Tensor[(1, 2, 9), float64], Tensor[(832), float64], Tensor[(9, 2, 11), float32]) {
  %178 = cast(meta[relay.Constant][9] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %180 = reshape(%178, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %181 = reshape(%179, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %182 = @func_330(%180, %181) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
  %183 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %184 = cast(%var_1424, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%183, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %188 = cast(meta[relay.Constant][12] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %189 = reshape(%188, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float64] */;
  %190 = cast(%var_1449, dtype="float64") /* ty=Tensor[(832), float64] */;
  %191 = cast(%var_1449, dtype="float64") /* ty=Tensor[(832), float64] */;
  %192 = reshape(%190, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %193 = reshape(%191, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %194 = @func_1354(%192, %193) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
  %195 = cast(meta[relay.Constant][10] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %196 = cast(meta[relay.Constant][11] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %197 = cast(meta[relay.Constant][9] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %198 = reshape(%195, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
  %199 = reshape(%196, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %200 = reshape(%197, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
  %201 = @func_460(%198, %199, %200) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
  %202 = %201.4;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(9, 2, 11), float32] */;
  %204 = %182.1;
  %205 = logical_and(%186, %187) /* ty=Tensor[(6, 15, 14), bool] */;
  %206 = @func_1007(%189) /* ty=Tensor[(14, 14, 15), float64] */;
  %207 = %194.0;
  %208 = log2(%203) /* ty=Tensor[(9, 2, 11), float32] */;
  (%204, meta[relay.Constant][9] /* ty=Tensor[(198), int16] */, %205, meta[relay.Constant][10] /* ty=Tensor[(96), float64] */, meta[relay.Constant][11] /* ty=Tensor[(270), float64] */, %206, meta[relay.Constant][12] /* ty=Tensor[(2940), float64] */, %207, %var_1449, %208)
}

def @func_1405() -> Tensor[(6, 15, 14), float64] {
  %209 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %210 = asin(%209) /* ty=Tensor[(6, 15, 14), float64] */;
  %211 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%213, %214) /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_6810() -> Tensor[(6, 15, 14), float64] {
  %215 = @func_4775() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %215.1
}

def @func_3495(%var_3483: Tensor[(4, 3, 11), bool], %var_3484: Tensor[(4, 3, 11), bool]) -> (Tensor[(4, 3, 11), bool],) {
  %216 = cast(%var_3484, dtype="bool") /* ty=Tensor[(4, 3, 11), bool] */;
  %217 = shape_of(%var_3483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%var_3483, dtype="bool") /* ty=Tensor[(4, 3, 11), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %220 = logical_or(%218, %219) /* ty=Tensor[(4, 3, 11), bool] */;
  (%220,)
}

def @func_6226(%var_6206: Tensor[(1, 96), float64], %var_6207: Tensor[(33, 6), int16], %var_6218: Tensor[(1120), int32]) -> (Tensor[(132), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 96), float64], Tensor[(33, 6), int16], Tensor[(6, 15, 14), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float64]) {
  %221 = @func_4734() /* ty=(Tensor[(4, 3, 11), bool], Tensor[(132), bool], Tensor[(11, 13, 14), float64]) */;
  %222 = cast(%var_6206, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
  %223 = cast(%var_6207, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
  %224 = reshape(%222, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %225 = reshape(%223, newshape=[198]) /* ty=Tensor[(198), int16] */;
  %226 = @func_5954(%224, %225) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(198), bool], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %227 = cast(%var_6218, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %228 = reshape(%227, newshape=[1120]) /* ty=Tensor[(1120), int32] */;
  %229 = @func_5845(%228) /* ty=(Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) */;
  %230 = %221.1;
  %231 = %226.5;
  %232 = %229.2;
  %233 = @func_3296() /* ty=Tensor[(6, 15, 14), float64] */;
  (%230, %231, %var_6206, %var_6207, %232, %var_6218, %233)
}

def @func_4041(%var_4023: Tensor[(270), float64]) -> (Tensor[(6, 15, 14), float32], Tensor[(728), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(270), float64]) {
  %234 = @func_3635() /* ty=Tensor[(6, 15, 14), float32] */;
  %235 = cast(%234, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %236 = cast(%234, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %237 = reshape(%236, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %238 = @func_2463(%237) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
  %239 = @func_2713() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float64]) */;
  %240 = %239.2;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %242 = cast(%var_4023, dtype="float64") /* ty=Tensor[(270), float64] */;
  %243 = reshape(%241, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %244 = reshape(%242, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %245 = @func_3022(%243, %244) /* ty=(Tensor[(6, 15, 14), bool], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1, 2, 9), float64], int8, Tensor[(1, 18), int8]) */;
  %246 = cos(%235) /* ty=Tensor[(6, 15, 14), float32] */;
  %247 = %238.2;
  %248 = %245.4;
  (%246, %247, %240, %248, %var_4023)
}

def @func_4424() -> Tensor[(6, 15, 14), float32] {
  %249 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %249.0
}

def @func_8103() -> (Tensor[(6, 15, 14), float32],) {
  %250 = @func_6810() /* ty=Tensor[(6, 15, 14), float64] */;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %252 = log10(%251) /* ty=Tensor[(6, 15, 14), float32] */;
  (%252,)
}

def @func_5084(%var_5064: Tensor[(18), int8]) -> (Tensor[(96), float64], Tensor[(1, 2, 9), bool], int8, Tensor[(18), int8], Tensor[(6, 15, 14), float64]) {
  %253 = @func_4683() /* ty=(Tensor[(96), float64],) */;
  %254 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %255 = cast(%var_5064, dtype="int8") /* ty=Tensor[(18), int8] */;
  %256 = reshape(%254, newshape=[]) /* ty=int8 */;
  %257 = reshape(%255, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int8] */;
  %258 = @func_1193(%256, %257) /* ty=(Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) */;
  %259 = @func_2572() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %260 = %253.0;
  %261 = %258.0;
  %262 = %259.0;
  (%260, %261, meta[relay.Constant][14] /* ty=int8 */, %var_5064, %262)
}

def @func_4635(%var_4626: Tensor[(2, 8, 16), float64], %var_4627: Tensor[(2, 8, 16), float64]) -> Tensor[(2, 8, 16), float64] {
  %263 = cast(%var_4627, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
  %264 = shape_of(%var_4626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%var_4626, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%265, %266) /* ty=Tensor[(2, 8, 16), float64] */
}

def @func_3358() -> (Tensor[(6, 15, 14), float32],) {
  %267 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %268 = %267.0;
  (%268,)
}

def @func_4899() -> Tensor[(6, 15, 14), float64] {
  @func_2657() /* ty=Tensor[(6, 15, 14), float64] */
}

def @main(%var_8369: Tensor[(11, 1, 15), float32], %var_8370: Tensor[(11, 6, 15), float32]) -> (Tensor[(11, 6, 15), bool],) {
  %269 = cast(%var_8369, dtype="bool") /* ty=Tensor[(11, 1, 15), bool] */;
  %270 = cast(%var_8370, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
  %271 = equal(%269, %270) /* ty=Tensor[(11, 6, 15), bool] */;
  (%271,)
}

def @func_4189() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) {
  %272 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
  %273 = @func_2572() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %274 = %273.0;
  %275 = cast(%274, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %276 = rsqrt(%275) /* ty=Tensor[(6, 15, 14), float64] */;
  %277 = cast(%276, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %278 = %272.0;
  %279 = sin(%277) /* ty=Tensor[(6, 15, 14), float32] */;
  (%278, %279)
}

def @func_5845(%var_5822: Tensor[(1120), int32]) -> (Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) {
  %280 = cast(%var_5822, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %281 = cast(%var_5822, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %282 = reshape(%280, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), int32] */;
  %283 = reshape(%281, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), int32] */;
  %284 = @func_4352(%282, %283) /* ty=(Tensor[(16, 10, 7), int32], Tensor[(16, 10, 7), float32], Tensor[(16, 10, 7), bool]) */;
  %285 = @func_5475() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %286 = %285.0;
  %287 = cast(%286, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %288 = %284.1;
  %289 = atan(%287) /* ty=Tensor[(6, 15, 14), float32] */;
  (%288, %var_5822, %289)
}

def @func_4683() -> (Tensor[(96), float64],) {
  %290 = @func_2882() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) */;
  %291 = %290.1;
  (%291,)
}

def @func_7789() -> Tensor[(6, 15, 14), float64] {
  %292 = @func_3921() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %292.3
}

def @func_1589(%var_1584: Tensor[(832), float64]) -> (Tensor[(6, 15, 14), float32], Tensor[(96), float64], Tensor[(832), float64]) {
  %293 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
  %294 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 15, 14), float64] */, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%293, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %298 = cast(%293, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %299 = cast(%var_1584, dtype="float64") /* ty=Tensor[(832), float64] */;
  %300 = reshape(%298, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
  %301 = reshape(%299, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %302 = @func_1468(%300, %301) /* ty=(Tensor[(9, 2, 11), bool], Tensor[(198), int16], Tensor[(6, 15, 14), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64], Tensor[(1, 2, 9), float64], Tensor[(832), float64], Tensor[(9, 2, 11), float32]) */;
  %303 = divide(%296, %297) /* ty=Tensor[(6, 15, 14), float32] */;
  %304 = %302.3;
  (%303, %304, %var_1584)
}

def @func_6158(%var_6154: Tensor[(1, 270), float64]) -> (Tensor[(96), float64], Tensor[(4, 208), float32], Tensor[(270), float64], Tensor[(1, 270), float64], Tensor[(198), float64]) {
  %305 = @func_2882() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) */;
  %306 = %305.2;
  %307 = cast(%306, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
  %308 = cast(%306, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
  %309 = reshape(%307, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %310 = reshape(%308, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %311 = @func_1354(%309, %310) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
  %312 = cast(%306, dtype="float32") /* ty=Tensor[(4, 208), float32] */;
  %313 = cast(%var_6154, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
  %314 = cast(meta[relay.Constant][16] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %315 = reshape(%313, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %316 = reshape(%314, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %317 = @func_3605(%315, %316) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(198), bool], Tensor[(198), bool]) */;
  %318 = %311.7;
  %319 = asinh(%312) /* ty=Tensor[(4, 208), float32] */;
  %320 = %317.4;
  (%318, %319, %320, %var_6154, meta[relay.Constant][16] /* ty=Tensor[(198), float64] */)
}

def @func_8218(%var_8207: Tensor[(300), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(5, 15, 4), float64], Tensor[(300), float64]) {
  %321 = cast(%var_8207, dtype="float64") /* ty=Tensor[(300), float64] */;
  %322 = reshape(%321, newshape=[5, 15, 4]) /* ty=Tensor[(5, 15, 4), float64] */;
  %323 = @func_4113(%322) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(6, 15, 14), float64]) */;
  %324 = @func_6810() /* ty=Tensor[(6, 15, 14), float64] */;
  %325 = %323.0;
  (%324, %325, %var_8207)
}

def @func_4068(%var_4059: uint32) -> (Tensor[(6, 15, 14), float64], Tensor[(30, 98), uint32], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float64]) {
  %326 = @func_3198() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %327 = cast(%var_4059, dtype="uint32") /* ty=uint32 */;
  %328 = cast(meta[relay.Constant][17] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %329 = cast(meta[relay.Constant][17] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %330 = reshape(%327, newshape=[]) /* ty=uint32 */;
  %331 = reshape(%328, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %332 = reshape(%329, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %333 = @func_2275(%330, %331, %332) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) */;
  %334 = @func_3198() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %335 = %326.0;
  %336 = %333.4;
  %337 = %334.0;
  (%335, %336, %var_4059, meta[relay.Constant][17] /* ty=Tensor[(2940), float64] */, %337)
}

def @func_4734() -> (Tensor[(4, 3, 11), bool], Tensor[(132), bool], Tensor[(11, 13, 14), float64]) {
  %338 = cast(meta[relay.Constant][18] /* ty=Tensor[(132), bool] */, dtype="bool") /* ty=Tensor[(132), bool] */;
  %339 = cast(meta[relay.Constant][18] /* ty=Tensor[(132), bool] */, dtype="bool") /* ty=Tensor[(132), bool] */;
  %340 = reshape(%338, newshape=[4, 3, 11]) /* ty=Tensor[(4, 3, 11), bool] */;
  %341 = reshape(%339, newshape=[4, 3, 11]) /* ty=Tensor[(4, 3, 11), bool] */;
  %342 = @func_3495(%340, %341) /* ty=(Tensor[(4, 3, 11), bool],) */;
  %343 = cast(meta[relay.Constant][19] /* ty=Tensor[(11, 13, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 14), float64] */;
  %344 = sigmoid(%343) /* ty=Tensor[(11, 13, 14), float64] */;
  %345 = cast(%344, dtype="float64") /* ty=Tensor[(11, 13, 14), float64] */;
  %346 = %342.0;
  %347 = asinh(%345) /* ty=Tensor[(11, 13, 14), float64] */;
  (%346, meta[relay.Constant][18] /* ty=Tensor[(132), bool] */, %347)
}

def @func_2030() -> (Tensor[(6, 15, 14), float64],) {
  %348 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  (%348,)
}

def @func_6565() -> Tensor[(6, 15, 14), float32] {
  @func_6331() /* ty=Tensor[(6, 15, 14), float32] */
}

def @func_5510(%var_5503: float32) -> Tensor[(1, 11), float32] {
  %349 = cast(%var_5503, dtype="float32") /* ty=float32 */;
  %350 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 11), float32] */;
  floor_divide(%349, %350) /* ty=Tensor[(1, 11), float32] */
}

def @func_76(%var_67: uint32) -> (Tensor[(1, 13, 7), bool],) {
  %351 = cast(%var_67, dtype="bool") /* ty=bool */;
  %352 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 13, 7), uint32] */, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %353 = not_equal(%351, %352) /* ty=Tensor[(1, 13, 7), bool] */;
  (%353,)
}

def @func_5397(%var_5285: float32, %var_5291: Tensor[(270), float64]) -> (Tensor[(11, 8, 10), float32], Tensor[(6, 15, 14), float32], Tensor[(270), float64], Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64], Tensor[(4, 13, 14), float64]) {
  %354 = cast(%var_5285, dtype="float32") /* ty=float32 */;
  %355 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  %356 = cast(%var_5291, dtype="float64") /* ty=Tensor[(270), float64] */;
  %357 = reshape(%356, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %358 = @func_4041(%357) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(728), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(270), float64]) */;
  %359 = @func_3457() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64]) */;
  %360 = %358.0;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %362 = reshape(%361, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %363 = @func_2463(%362) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
  %364 = %363.1;
  %365 = cast(%364, dtype="float64") /* ty=Tensor[(4, 13, 14), float64] */;
  %366 = reshape(%365, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float64] */;
  %367 = mod(%354, %355) /* ty=Tensor[(11, 8, 10), float32] */;
  %368 = %359.0;
  %369 = @func_2128(%366) /* ty=Tensor[(4, 13, 14), float64] */;
  (%367, %360, %var_5291, %368, %364, %369)
}

def @func_3635() -> Tensor[(6, 15, 14), float32] {
  %370 = @func_3358() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %370.0
}

def @func_6442(%var_6390: Tensor[(198), int16], %var_6412: Tensor[(10, 30), float64]) -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), bool], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(198), int16], Tensor[(6, 15, 14), float64], Tensor[(10, 30), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64]) {
  %371 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %372 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %373 = @func_2082() /* ty=(Tensor[(6, 15, 14), bool],) */;
  %374 = cast(meta[relay.Constant][23] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %375 = cast(meta[relay.Constant][24] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %376 = cast(%var_6390, dtype="int16") /* ty=Tensor[(198), int16] */;
  %377 = reshape(%374, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
  %378 = reshape(%375, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %379 = reshape(%376, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
  %380 = @func_460(%377, %378, %379) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
  %381 = cast(%var_6412, dtype="float64") /* ty=Tensor[(10, 30), float64] */;
  %382 = reshape(%381, newshape=[5, 15, 4]) /* ty=Tensor[(5, 15, 4), float64] */;
  %383 = @func_4113(%382) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(6, 15, 14), float64]) */;
  %384 = %371.0;
  %385 = cast(%384, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %386 = reshape(%385, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %387 = @func_2463(%386) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
  %388 = %372.0;
  %389 = %373.0;
  %390 = %380.2;
  %391 = %383.1;
  %392 = @func_4424() /* ty=Tensor[(6, 15, 14), float32] */;
  %393 = @func_3234() /* ty=Tensor[(6, 15, 14), float64] */;
  %394 = %387.1;
  (%384, %388, %389, %390, meta[relay.Constant][23] /* ty=Tensor[(96), float64] */, meta[relay.Constant][24] /* ty=Tensor[(270), float64] */, %var_6390, %391, %var_6412, %392, %393, %394)
}

def @func_7484(%var_7479: Tensor[(6, 15, 14), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), uint16]) {
  %395 = @func_7124() /* ty=Tensor[(6, 15, 14), float64] */;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %397 = cast(%var_7479, dtype="uint16") /* ty=Tensor[(6, 15, 14), uint16] */;
  %398 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%395, dtype="uint16") /* ty=Tensor[(6, 15, 14), uint16] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %401 = log2(%396) /* ty=Tensor[(6, 15, 14), float64] */;
  %402 = logical_xor(%399, %400) /* ty=Tensor[(6, 15, 14), uint16] */;
  (%401, %402)
}

def @func_1048(%var_1031: uint32, %var_1032: Tensor[(1, 10, 7), uint32], %var_1041: Tensor[(2940), float64]) -> (Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) {
  %403 = cast(%var_1031, dtype="uint32") /* ty=uint32 */;
  %404 = cast(%var_1032, dtype="uint32") /* ty=Tensor[(1, 10, 7), uint32] */;
  %405 = cast(%var_1041, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %406 = reshape(%405, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float64] */;
  %407 = maximum(%403, %404) /* ty=Tensor[(1, 10, 7), uint32] */;
  %408 = @func_1007(%406) /* ty=Tensor[(14, 14, 15), float64] */;
  (%407, %408, %var_1041)
}

def @func_2275(%var_2247: uint32, %var_2249: Tensor[(30, 98), float64], %var_2263: Tensor[(30, 98), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) {
  %409 = cast(%var_2247, dtype="uint32") /* ty=uint32 */;
  %410 = cast(meta[relay.Constant][25] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %411 = cast(%var_2249, dtype="float64") /* ty=Tensor[(30, 98), float64] */;
  %412 = reshape(%409, newshape=[]) /* ty=uint32 */;
  %413 = reshape(%410, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), uint32] */;
  %414 = reshape(%411, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %415 = @func_1048(%412, %413, %414) /* ty=(Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %416 = cast(%var_2263, dtype="uint32") /* ty=Tensor[(30, 98), uint32] */;
  %417 = shape_of(%var_2249, dtype="int32") /* ty=Tensor[(2), int32] */;
  %418 = cast(%var_2249, dtype="uint32") /* ty=Tensor[(30, 98), uint32] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %420 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
  %421 = %415.1;
  %422 = subtract(%418, %419) /* ty=Tensor[(30, 98), uint32] */;
  (%420, %421, %var_2247, meta[relay.Constant][25] /* ty=Tensor[(70), uint32] */, %422)
}

def @func_1193(%var_1183: int8, %var_1184: Tensor[(1, 2, 9), int8]) -> (Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) {
  %423 = cast(%var_1183, dtype="bool") /* ty=bool */;
  %424 = cast(%var_1184, dtype="bool") /* ty=Tensor[(1, 2, 9), bool] */;
  %425 = cast(%var_1184, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
  %426 = greater(%423, %424) /* ty=Tensor[(1, 2, 9), bool] */;
  %427 = cos(%425) /* ty=Tensor[(1, 2, 9), float64] */;
  (%426, %427)
}

def @func_3178() -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) {
  %428 = @func_2954() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */;
  %429 = %428.2;
  %430 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  (%429, %430)
}

def @func_8258() -> (Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64]) {
  %431 = @func_6810() /* ty=Tensor[(6, 15, 14), float64] */;
  %432 = cast(%431, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %433 = reshape(%432, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %434 = @func_2463(%433) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
  %435 = %434.1;
  (%431, %435)
}

def @func_6784(%var_6720: Tensor[(270), float64], %var_6723: Tensor[(1120), int32]) -> (Tensor[(96), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) {
  %436 = @func_3457() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64]) */;
  %437 = cast(%var_6720, dtype="float64") /* ty=Tensor[(270), float64] */;
  %438 = reshape(%437, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %439 = @func_300(%438) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %440 = cast(%var_6723, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %441 = reshape(%440, newshape=[1120]) /* ty=Tensor[(1120), int32] */;
  %442 = @func_5845(%441) /* ty=(Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) */;
  %443 = %436.1;
  %444 = %439.1;
  %445 = %442.0;
  %446 = @func_3635() /* ty=Tensor[(6, 15, 14), float32] */;
  (%443, %444, %var_6720, %445, %var_6723, %446)
}

def @func_6271() -> (Tensor[(6, 15, 14), float64],) {
  %447 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %448 = %447.0;
  (%448,)
}

def @func_2954() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) {
  %449 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %450 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %451 = @func_2202() /* ty=Tensor[(6, 15, 14), float64] */;
  %452 = %449.0;
  %453 = %450.0;
  (%451, %452, %453)
}

def @func_2230() -> (Tensor[(6, 15, 14), float64],) {
  %454 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  (%454,)
}

def @func_2128(%var_2123: Tensor[(4, 13, 14), float64]) -> Tensor[(4, 13, 14), float64] {
  %455 = cast(%var_2123, dtype="float64") /* ty=Tensor[(4, 13, 14), float64] */;
  log10(%455) /* ty=Tensor[(4, 13, 14), float64] */
}

def @func_3530() -> (Tensor[(6, 15, 14), float64],) {
  %456 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
  %457 = %456.0;
  (%457,)
}

def @func_3605(%var_3579: Tensor[(270), float64], %var_3589: Tensor[(198), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(198), bool], Tensor[(198), bool]) {
  %458 = cast(meta[relay.Constant][26] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %459 = cast(meta[relay.Constant][26] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %460 = reshape(%458, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %461 = reshape(%459, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %462 = @func_330(%460, %461) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
  %463 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %464 = cast(%var_3579, dtype="float64") /* ty=Tensor[(270), float64] */;
  %465 = reshape(%464, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %466 = @func_300(%465) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %467 = cast(meta[relay.Constant][26] /* ty=Tensor[(198), int16] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %468 = sin(%467) /* ty=Tensor[(198), float64] */;
  %469 = cast(%var_3589, dtype="bool") /* ty=Tensor[(198), bool] */;
  %470 = shape_of(%468, dtype="int32") /* ty=Tensor[(1), int32] */;
  %471 = cast(%468, dtype="bool") /* ty=Tensor[(198), bool] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?), bool] */;
  %473 = cast(%468, dtype="float32") /* ty=Tensor[(198), float32] */;
  %474 = log10(%473) /* ty=Tensor[(198), float32] */;
  %475 = cast(%468, dtype="bool") /* ty=Tensor[(198), bool] */;
  %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(1), int32] */;
  %477 = cast(%474, dtype="bool") /* ty=Tensor[(198), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?), bool] */;
  %479 = @func_3234() /* ty=Tensor[(6, 15, 14), float64] */;
  %480 = %462.1;
  %481 = %463.0;
  %482 = %466.1;
  %483 = equal(%471, %472) /* ty=Tensor[(198), bool] */;
  %484 = greater(%477, %478) /* ty=Tensor[(198), bool] */;
  (%479, %480, %481, %482, %var_3579, %483, %484)
}

def @func_1805(%var_1798: Tensor[(6, 15, 14), float64]) -> Tensor[(6, 15, 14), float64] {
  %485 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %486 = %485.0;
  %487 = cast(%var_1798, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %488 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%486, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%489, %490) /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_2463(%var_2450: Tensor[(6, 15, 14), float32]) -> (Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) {
  %491 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %492 = cast(%491, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %493 = acosh(%492) /* ty=Tensor[(6, 15, 14), float32] */;
  %494 = cast(%var_2450, dtype="uint32") /* ty=Tensor[(6, 15, 14), uint32] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="uint32") /* ty=Tensor[(6, 15, 14), uint32] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %498 = cast(meta[relay.Constant][27] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %499 = reshape(%498, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float64] */;
  %500 = maximum(%496, %497) /* ty=Tensor[(6, 15, 14), uint32] */;
  %501 = @func_2128(%499) /* ty=Tensor[(4, 13, 14), float64] */;
  (%500, %501, meta[relay.Constant][27] /* ty=Tensor[(728), float64] */)
}

def @func_4204() -> (Tensor[(6, 15, 14), float32],) {
  %502 = @func_3635() /* ty=Tensor[(6, 15, 14), float32] */;
  (%502,)
}

def @func_2365(%var_2304: Tensor[(2940), float64], %var_2330: Tensor[(2, 840), int8]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(270), float64], Tensor[(2940), float64], uint32, Tensor[(4, 13, 14), float64], Tensor[(728), float64], Tensor[(16, 15, 7), bool], Tensor[(2, 840), int8], Tensor[(1, 13, 7), uint64]) {
  %503 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %504 = cast(meta[relay.Constant][28] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %505 = cast(%var_2304, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %506 = reshape(%504, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %507 = reshape(%505, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %508 = @func_1685(%506, %507) /* ty=(Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %509 = cast(meta[relay.Constant][30] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %510 = reshape(%509, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float64] */;
  %511 = cast(%var_2330, dtype="int8") /* ty=Tensor[(2, 840), int8] */;
  %512 = cast(%var_2330, dtype="int8") /* ty=Tensor[(2, 840), int8] */;
  %513 = reshape(%511, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int8] */;
  %514 = reshape(%512, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int8] */;
  %515 = @func_1155(%513, %514) /* ty=(Tensor[(16, 15, 7), bool], Tensor[(198), int16], Tensor[(9, 2, 11), float32]) */;
  %516 = cast(meta[relay.Constant][28] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %517 = reshape(%516, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %518 = @func_300(%517) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %519 = %518.1;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(1, 13, 7), float32] */;
  %521 = log(%520) /* ty=Tensor[(1, 13, 7), float32] */;
  %522 = cast(%521, dtype="float64") /* ty=Tensor[(1, 13, 7), float64] */;
  %523 = atan(%522) /* ty=Tensor[(1, 13, 7), float64] */;
  %524 = cast(meta[relay.Constant][29] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %525 = cast(%var_2304, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %526 = %508.3;
  %527 = cast(%526, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
  %528 = reshape(%524, newshape=[]) /* ty=uint32 */;
  %529 = reshape(%525, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %530 = reshape(%527, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %531 = @func_2275(%528, %529, %530) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) */;
  %532 = %531.2;
  %533 = cast(%523, dtype="uint64") /* ty=Tensor[(1, 13, 7), uint64] */;
  %534 = cast(%532, dtype="uint64") /* ty=uint64 */;
  %535 = %503.0;
  %536 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
  %537 = @func_2128(%510) /* ty=Tensor[(4, 13, 14), float64] */;
  %538 = %515.0;
  %539 = maximum(%533, %534) /* ty=Tensor[(1, 13, 7), uint64] */;
  (%535, %536, %526, meta[relay.Constant][28] /* ty=Tensor[(270), float64] */, %var_2304, meta[relay.Constant][29] /* ty=uint32 */, %537, meta[relay.Constant][30] /* ty=Tensor[(728), float64] */, %538, %var_2330, %539)
}

def @func_2836(%var_2737: Tensor[(360, 2), int16], %var_2740: Tensor[(2940), float64], %var_2792: Tensor[(270), float64], %var_2829: Tensor[(1680), int8]) -> (Tensor[(2940), float64], Tensor[(360, 2), int16], Tensor[(70), uint32], Tensor[(2940), int16], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), uint64], Tensor[(6, 15, 14), float32], Tensor[(270), float64], Tensor[(1680), int8]) {
  %540 = cast(%var_2737, dtype="int16") /* ty=Tensor[(360, 2), int16] */;
  %541 = cast(%var_2737, dtype="int16") /* ty=Tensor[(360, 2), int16] */;
  %542 = cast(meta[relay.Constant][31] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %543 = cast(meta[relay.Constant][32] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %544 = cast(%var_2740, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %545 = reshape(%540, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), int16] */;
  %546 = reshape(%541, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), int16] */;
  %547 = reshape(%542, newshape=[]) /* ty=uint32 */;
  %548 = reshape(%543, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %549 = reshape(%544, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %550 = @func_1644(%545, %546, %547, %548, %549) /* ty=(Tensor[(16, 3, 15), bool], Tensor[(2940), float64], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(16, 3, 15), float64], Tensor[(6, 15, 14), float64]) */;
  %551 = cast(%var_2740, dtype="int16") /* ty=Tensor[(2940), int16] */;
  %552 = cast(meta[relay.Constant][31] /* ty=uint32 */, dtype="int16") /* ty=int16 */;
  %553 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %554 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %555 = cast(%var_2792, dtype="float64") /* ty=Tensor[(270), float64] */;
  %556 = reshape(%555, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %557 = @func_300(%556) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %558 = %557.1;
  %559 = cast(%558, dtype="uint64") /* ty=Tensor[(1, 13, 7), uint64] */;
  %560 = cast(meta[relay.Constant][31] /* ty=uint32 */, dtype="uint64") /* ty=uint64 */;
  %561 = @func_2657() /* ty=Tensor[(6, 15, 14), float64] */;
  %562 = cast(%561, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %563 = sinh(%562) /* ty=Tensor[(6, 15, 14), float64] */;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %565 = %550.4;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %567 = cast(%var_2829, dtype="int8") /* ty=Tensor[(1680), int8] */;
  %568 = reshape(%566, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %569 = reshape(%567, newshape=[2, 840]) /* ty=Tensor[(2, 840), int8] */;
  %570 = @func_2365(%568, %569) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(270), float64], Tensor[(2940), float64], uint32, Tensor[(4, 13, 14), float64], Tensor[(728), float64], Tensor[(16, 15, 7), bool], Tensor[(2, 840), int8], Tensor[(1, 13, 7), uint64]) */;
  %571 = subtract(%551, %552) /* ty=Tensor[(2940), int16] */;
  %572 = @func_2657() /* ty=Tensor[(6, 15, 14), float64] */;
  %573 = %553.0;
  %574 = %554.0;
  %575 = minimum(%559, %560) /* ty=Tensor[(1, 13, 7), uint64] */;
  %576 = sigmoid(%564) /* ty=Tensor[(6, 15, 14), float32] */;
  %577 = %570.3;
  (%565, %var_2737, meta[relay.Constant][32] /* ty=Tensor[(70), uint32] */, %571, %572, %573, %var_2792, %574, %575, %576, %577, %var_2829)
}

def @func_7124() -> Tensor[(6, 15, 14), float64] {
  %578 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %578.0
}

def @func_6847(%var_6827: Tensor[(2, 7, 2), float32]) -> Tensor[(2, 7, 2), float32] {
  %579 = cast(%var_6827, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
  %580 = log(%579) /* ty=Tensor[(2, 7, 2), float32] */;
  %581 = cast(%580, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
  %582 = asinh(%581) /* ty=Tensor[(2, 7, 2), float32] */;
  %583 = cast(%582, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
  sin(%583) /* ty=Tensor[(2, 7, 2), float32] */
}

def @func_2595() -> (Tensor[(6, 15, 14), float64],) {
  %584 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %585 = %584.0;
  (%585,)
}

def @func_6331() -> Tensor[(6, 15, 14), float32] {
  %586 = @func_4204() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %586.0
}

def @func_2391() -> (Tensor[(6, 15, 14), float64],) {
  %587 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %588 = %587.0;
  (%588,)
}

def @func_300(%var_280: Tensor[(3, 10, 9), float64]) -> (Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) {
  %589 = cast(-4.14094f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %590 = cast(%var_280, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %591 = cast(-4.14094f64 /* ty=float64 */, dtype="uint32") /* ty=uint32 */;
  %592 = reshape(%591, newshape=[]) /* ty=uint32 */;
  %593 = @func_76(%592) /* ty=(Tensor[(1, 13, 7), bool],) */;
  %594 = %593.0;
  %595 = cast(%594, dtype="float64") /* ty=Tensor[(1, 13, 7), float64] */;
  %596 = floor_mod(%589, %590) /* ty=Tensor[(3, 10, 9), float64] */;
  %597 = atanh(%595) /* ty=Tensor[(1, 13, 7), float64] */;
  (%596, %597)
}

def @func_3224() -> (Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), int16], Tensor[(1, 96), float64], Tensor[(270), float64], Tensor[(198), int16]) {
  %598 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 96), float64] */, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
  %599 = cast(meta[relay.Constant][34] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %600 = cast(meta[relay.Constant][35] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %601 = reshape(%598, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
  %602 = reshape(%599, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %603 = reshape(%600, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
  %604 = @func_460(%601, %602, %603) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
  %605 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %606 = %604.4;
  (%605, %606, meta[relay.Constant][33] /* ty=Tensor[(1, 96), float64] */, meta[relay.Constant][34] /* ty=Tensor[(270), float64] */, meta[relay.Constant][35] /* ty=Tensor[(198), int16] */)
}

def @func_2082() -> (Tensor[(6, 15, 14), bool],) {
  %607 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %608 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 15, 14), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%607, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %612 = greater(%610, %611) /* ty=Tensor[(6, 15, 14), bool] */;
  (%612,)
}

def @func_5640() -> Tensor[(6, 15, 14), float32] {
  %613 = @func_3178() /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) */;
  %613.0
}

def @func_1685(%var_1661: Tensor[(270), float64], %var_1682: Tensor[(2940), float64]) -> (Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) {
  %614 = cast(%var_1661, dtype="float64") /* ty=Tensor[(270), float64] */;
  %615 = reshape(%614, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %616 = @func_300(%615) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %617 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
  %618 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 15, 14), float64] */, dtype="uint32") /* ty=Tensor[(6, 15, 14), uint32] */;
  %619 = shape_of(%617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%617, dtype="uint32") /* ty=Tensor[(6, 15, 14), uint32] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %622 = cast(%var_1682, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %623 = reshape(%622, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float64] */;
  %624 = %616.1;
  %625 = bitwise_or(%620, %621) /* ty=Tensor[(6, 15, 14), uint32] */;
  %626 = @func_1007(%623) /* ty=Tensor[(14, 14, 15), float64] */;
  (%624, %var_1661, %625, %626, %var_1682)
}

def @func_3267(%var_3263: uint32) -> (Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), bool], uint32) {
  %627 = cast(%var_3263, dtype="uint32") /* ty=uint32 */;
  %628 = reshape(%627, newshape=[]) /* ty=uint32 */;
  %629 = @func_76(%628) /* ty=(Tensor[(1, 13, 7), bool],) */;
  %630 = @func_2657() /* ty=Tensor[(6, 15, 14), float64] */;
  %631 = %629.0;
  (%630, %631, %var_3263)
}

def @func_4334() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(270), float64]) {
  %632 = @func_1967() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %633 = cast(meta[relay.Constant][38] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %634 = reshape(%633, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %635 = @func_4041(%634) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(728), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(270), float64]) */;
  %636 = %632.0;
  %637 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  %638 = %635.4;
  (%636, %637, %638, meta[relay.Constant][38] /* ty=Tensor[(270), float64] */)
}

def @func_4848() -> (Tensor[(6, 15, 14), float64],) {
  %639 = @func_2484() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %640 = %639.0;
  (%640,)
}

def @func_2713() -> (Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float64]) {
  %641 = cast(meta[relay.Constant][39] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %642 = cast(meta[relay.Constant][39] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %643 = reshape(%641, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %644 = reshape(%642, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %645 = @func_330(%643, %644) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
  %646 = %645.0;
  %647 = cast(meta[relay.Constant][39] /* ty=Tensor[(198), int16] */, dtype="bool") /* ty=Tensor[(198), bool] */;
  %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%646, dtype="bool") /* ty=Tensor[(9, 2, 11), bool] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %651 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
  %652 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  %653 = logical_or(%649, %650) /* ty=Tensor[(9, 2, 11), bool] */;
  %654 = %651.0;
  (%652, %653, %654)
}

def @func_6509(%var_6504: Tensor[(4, 384), bool]) -> (Tensor[(6, 15, 14), float64], Tensor[(720), int16], Tensor[(4, 384), bool], Tensor[(210, 14), float64], Tensor[(6, 15, 14), float64]) {
  %655 = @func_2713() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float64]) */;
  %656 = cast(%var_6504, dtype="bool") /* ty=Tensor[(4, 384), bool] */;
  %657 = cast(%var_6504, dtype="bool") /* ty=Tensor[(4, 384), bool] */;
  %658 = cast(meta[relay.Constant][40] /* ty=Tensor[(210, 14), float64] */, dtype="float64") /* ty=Tensor[(210, 14), float64] */;
  %659 = cast(%var_6504, dtype="float64") /* ty=Tensor[(4, 384), float64] */;
  %660 = reshape(%656, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), bool] */;
  %661 = reshape(%657, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), bool] */;
  %662 = reshape(%658, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %663 = reshape(%659, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), float64] */;
  %664 = @func_3404(%660, %661, %662, %663) /* ty=(Tensor[(12, 8, 16), bool], Tensor[(6, 15, 14), float64], Tensor[(720), int16], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(12, 8, 16), uint16]) */;
  %665 = @func_6271() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %666 = %655.2;
  %667 = %664.2;
  %668 = %665.0;
  (%666, %667, %var_6504, meta[relay.Constant][40] /* ty=Tensor[(210, 14), float64] */, %668)
}

def @func_3811() -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) {
  %669 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %670 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
  %671 = @func_3635() /* ty=Tensor[(6, 15, 14), float32] */;
  %672 = %669.0;
  %673 = %670.2;
  (%671, %672, %673)
}

def @func_7390() -> (Tensor[(6, 15, 14), float64], Tensor[(4, 208), float64], Tensor[(6, 15, 14), float64]) {
  %674 = @func_4563() /* ty=(Tensor[(4, 208), float64],) */;
  %675 = @func_4520() /* ty=Tensor[(6, 15, 14), float64] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %677 = reshape(%676, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
  %678 = %674.0;
  %679 = @func_1805(%677) /* ty=Tensor[(6, 15, 14), float64] */;
  (%675, %678, %679)
}

def @func_3198() -> (Tensor[(6, 15, 14), float64],) {
  %680 = @func_3178() /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) */;
  %681 = %680.1;
  (%681,)
}

def @func_2558() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) {
  %682 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
  %683 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 15, 14), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %687 = @func_2202() /* ty=Tensor[(6, 15, 14), float64] */;
  %688 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  %689 = less_equal(%685, %686) /* ty=Tensor[(6, 15, 14), bool] */;
  (%687, %688, %689)
}

def @func_2484() -> (Tensor[(6, 15, 14), float64],) {
  %690 = @func_2202() /* ty=Tensor[(6, 15, 14), float64] */;
  (%690,)
}

def @func_4619() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(4, 13, 14), float64]) {
  %691 = @func_3457() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64]) */;
  %692 = @func_2657() /* ty=Tensor[(6, 15, 14), float64] */;
  %693 = cast(%692, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %694 = reshape(%693, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
  %695 = @func_1805(%694) /* ty=Tensor[(6, 15, 14), float64] */;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %697 = cast(%692, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %698 = reshape(%697, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %699 = @func_2463(%698) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
  %700 = %691.0;
  %701 = asinh(%696) /* ty=Tensor[(6, 15, 14), float32] */;
  %702 = %699.1;
  (%692, %700, %701, %702)
}

def @func_4563() -> (Tensor[(4, 208), float64],) {
  %703 = @func_2882() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) */;
  %704 = %703.2;
  (%704,)
}

def @func_5954(%var_5925: Tensor[(96), float64], %var_5927: Tensor[(198), int16]) -> (Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(198), bool], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %705 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
  %706 = @func_4817() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float32]) */;
  %707 = @func_4848() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %708 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %709 = cast(%var_5925, dtype="float64") /* ty=Tensor[(96), float64] */;
  %710 = cast(meta[relay.Constant][42] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %711 = cast(%var_5927, dtype="int16") /* ty=Tensor[(198), int16] */;
  %712 = reshape(%709, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
  %713 = reshape(%710, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %714 = reshape(%711, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
  %715 = @func_460(%712, %713, %714) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
  %716 = %715.4;
  %717 = cast(%716, dtype="bool") /* ty=Tensor[(9, 2, 11), bool] */;
  %718 = shape_of(%var_5927, dtype="int32") /* ty=Tensor[(1), int32] */;
  %719 = cast(%var_5927, dtype="bool") /* ty=Tensor[(198), bool] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?), bool] */;
  %721 = @func_3530() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %722 = %705.0;
  %723 = %706.1;
  %724 = %707.0;
  %725 = %708.0;
  %726 = greater_equal(%719, %720) /* ty=Tensor[(198), bool] */;
  %727 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %728 = %721.0;
  (%722, %723, %724, %var_5925, meta[relay.Constant][42] /* ty=Tensor[(270), float64] */, %725, %726, %727, %728)
}

def @func_4352(%var_4336: Tensor[(16, 10, 7), int32], %var_4337: Tensor[(16, 10, 7), int32]) -> (Tensor[(16, 10, 7), int32], Tensor[(16, 10, 7), float32], Tensor[(16, 10, 7), bool]) {
  %729 = cast(%var_4337, dtype="int32") /* ty=Tensor[(16, 10, 7), int32] */;
  %730 = shape_of(%var_4336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%var_4336, dtype="int32") /* ty=Tensor[(16, 10, 7), int32] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %733 = cast(%var_4336, dtype="float32") /* ty=Tensor[(16, 10, 7), float32] */;
  %734 = cast(%var_4337, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %735 = shape_of(%var_4336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%var_4336, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %738 = bitwise_or(%731, %732) /* ty=Tensor[(16, 10, 7), int32] */;
  %739 = rsqrt(%733) /* ty=Tensor[(16, 10, 7), float32] */;
  %740 = logical_or(%736, %737) /* ty=Tensor[(16, 10, 7), bool] */;
  (%738, %739, %740)
}

def @func_4520() -> Tensor[(6, 15, 14), float64] {
  %741 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %742 = %741.0;
  %743 = cast(%742, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  atanh(%743) /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_7939(%var_7877: Tensor[(10, 4, 13), int16]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(10, 4, 13), float64], Tensor[(6, 15, 14), float64]) {
  %744 = @func_4480() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %745 = @func_4775() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %746 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 4, 13), int16] */, dtype="int16") /* ty=Tensor[(10, 4, 13), int16] */;
  %747 = shape_of(%var_7877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%var_7877, dtype="int16") /* ty=Tensor[(10, 4, 13), int16] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %750 = left_shift(%748, %749) /* ty=Tensor[(10, 4, 13), int16] */;
  %751 = cast(%750, dtype="float64") /* ty=Tensor[(10, 4, 13), float64] */;
  %752 = acosh(%751) /* ty=Tensor[(10, 4, 13), float64] */;
  %753 = cast(%752, dtype="float64") /* ty=Tensor[(10, 4, 13), float64] */;
  %754 = @func_2572() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %755 = %744.0;
  %756 = %745.1;
  %757 = log(%753) /* ty=Tensor[(10, 4, 13), float64] */;
  %758 = %754.0;
  (%755, %756, %757, %758)
}

def @func_7828(%var_7814: Tensor[(3, 6), int8]) -> (Tensor[(6, 15, 14), float32], Tensor[(18), int8], Tensor[(3, 6), int8], Tensor[(6, 15, 14), float64]) {
  %759 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %760 = cast(%var_7814, dtype="int8") /* ty=Tensor[(3, 6), int8] */;
  %761 = reshape(%760, newshape=[18]) /* ty=Tensor[(18), int8] */;
  %762 = @func_5084(%761) /* ty=(Tensor[(96), float64], Tensor[(1, 2, 9), bool], int8, Tensor[(18), int8], Tensor[(6, 15, 14), float64]) */;
  %763 = @func_4775() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %764 = %759.0;
  %765 = %762.3;
  %766 = %763.0;
  (%764, %765, %var_7814, %766)
}

def @func_3457() -> (Tensor[(6, 15, 14), float64], Tensor[(96), float64]) {
  %767 = @func_2882() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) */;
  %768 = %767.1;
  %769 = cast(%768, dtype="float64") /* ty=Tensor[(96), float64] */;
  %770 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %771 = erf(%769) /* ty=Tensor[(96), float64] */;
  (%770, %771)
}

def @func_3203() -> (Tensor[(6, 15, 14), float32],) {
  %772 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %773 = %772.0;
  (%773,)
}

def @func_7614() -> (Tensor[(6, 15, 14), float64],) {
  %774 = @func_4848() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %775 = %774.0;
  (%775,)
}

def @func_6059() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(2, 8, 16), float64], Tensor[(256), float64]) {
  %776 = @func_4619() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(4, 13, 14), float64]) */;
  %777 = @func_4334() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(270), float64]) */;
  %778 = cast(meta[relay.Constant][44] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %779 = cast(meta[relay.Constant][44] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %780 = reshape(%778, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), float64] */;
  %781 = reshape(%779, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), float64] */;
  %782 = %776.0;
  %783 = %777.0;
  %784 = @func_4635(%780, %781) /* ty=Tensor[(2, 8, 16), float64] */;
  (%782, %783, %784, meta[relay.Constant][44] /* ty=Tensor[(256), float64] */)
}

def @func_7079() -> (Tensor[(6, 15, 14), float64],) {
  %785 = @func_3296() /* ty=Tensor[(6, 15, 14), float64] */;
  (%785,)
}

def @func_1354(%var_1304: Tensor[(13, 4, 16), float64], %var_1326: Tensor[(13, 4, 16), float64]) -> (Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) {
  %786 = cast(meta[relay.Constant][45] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %787 = cast(meta[relay.Constant][46] /* ty=Tensor[(18), int8] */, dtype="int8") /* ty=Tensor[(18), int8] */;
  %788 = reshape(%786, newshape=[]) /* ty=int8 */;
  %789 = reshape(%787, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int8] */;
  %790 = @func_1193(%788, %789) /* ty=(Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) */;
  %791 = cast(%var_1304, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
  %792 = log2(%791) /* ty=Tensor[(13, 4, 16), float64] */;
  %793 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 4, 16), float64] */, dtype="int8") /* ty=Tensor[(13, 4, 16), int8] */;
  %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%792, dtype="int8") /* ty=Tensor[(13, 4, 16), int8] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %797 = right_shift(%795, %796) /* ty=Tensor[(13, 4, 16), int8] */;
  %798 = cast(%797, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %799 = shape_of(%792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%792, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %802 = cast(meta[relay.Constant][48] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %803 = reshape(%802, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %804 = @func_300(%803) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %805 = cast(meta[relay.Constant][49] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %806 = cast(meta[relay.Constant][48] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %807 = cast(meta[relay.Constant][50] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %808 = reshape(%805, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
  %809 = reshape(%806, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %810 = reshape(%807, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
  %811 = @func_460(%808, %809, %810) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
  %812 = cast(%var_1326, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %813 = shape_of(%var_1304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%var_1304, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %816 = greater_equal(%814, %815) /* ty=Tensor[(13, 4, 16), bool] */;
  %817 = cast(%816, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
  %818 = %790.1;
  %819 = greater(%800, %801) /* ty=Tensor[(13, 4, 16), bool] */;
  %820 = %804.0;
  %821 = %811.2;
  %822 = asinh(%817) /* ty=Tensor[(13, 4, 16), float64] */;
  (%818, meta[relay.Constant][45] /* ty=int8 */, meta[relay.Constant][46] /* ty=Tensor[(18), int8] */, %819, %820, meta[relay.Constant][48] /* ty=Tensor[(270), float64] */, %821, meta[relay.Constant][49] /* ty=Tensor[(96), float64] */, meta[relay.Constant][50] /* ty=Tensor[(198), int16] */, %822)
}

def @func_2418(%var_2412: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(3, 10, 9), float64], Tensor[(832), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) {
  %823 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %824 = cast(meta[relay.Constant][51] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %825 = cast(meta[relay.Constant][51] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %826 = reshape(%824, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %827 = reshape(%825, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %828 = @func_1354(%826, %827) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
  %829 = %828.4;
  %830 = cast(%829, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %831 = cast(%var_2412, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %832 = reshape(%830, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %833 = reshape(%831, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %834 = @func_1685(%832, %833) /* ty=(Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %835 = %823.0;
  %836 = %834.3;
  (%835, %829, meta[relay.Constant][51] /* ty=Tensor[(832), float64] */, %836, %var_2412)
}

def @func_1155(%var_1139: Tensor[(16, 15, 7), int8], %var_1140: Tensor[(16, 15, 7), int8]) -> (Tensor[(16, 15, 7), bool], Tensor[(198), int16], Tensor[(9, 2, 11), float32]) {
  %837 = cast(%var_1140, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
  %838 = shape_of(%var_1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%var_1139, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %841 = cast(meta[relay.Constant][52] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %842 = cast(meta[relay.Constant][52] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %843 = reshape(%841, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %844 = reshape(%842, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %845 = @func_330(%843, %844) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
  %846 = %845.1;
  %847 = cast(%846, dtype="float32") /* ty=Tensor[(9, 2, 11), float32] */;
  %848 = greater(%839, %840) /* ty=Tensor[(16, 15, 7), bool] */;
  %849 = cosh(%847) /* ty=Tensor[(9, 2, 11), float32] */;
  (%848, meta[relay.Constant][52] /* ty=Tensor[(198), int16] */, %849)
}

def @func_2202() -> Tensor[(6, 15, 14), float64] {
  %850 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %850.0
}

def @func_7339() -> (Tensor[(6, 15, 14), float64],) {
  %851 = @func_7079() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %852 = %851.0;
  (%852,)
}

def @func_8075(%var_8066: Tensor[(3, 90), float64], %var_8067: Tensor[(1120, 1), int32]) -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1120, 1), int32], Tensor[(3, 90), float64]) {
  %853 = @func_4204() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %854 = cast(%var_8066, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
  %855 = cast(%var_8067, dtype="int32") /* ty=Tensor[(1120, 1), int32] */;
  %856 = reshape(%854, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %857 = reshape(%855, newshape=[1120]) /* ty=Tensor[(1120), int32] */;
  %858 = @func_6784(%856, %857) /* ty=(Tensor[(96), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) */;
  %859 = cast(meta[relay.Constant][53] /* ty=Tensor[(3, 90), float64] */, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
  %860 = shape_of(%var_8066, dtype="int32") /* ty=Tensor[(2), int32] */;
  %861 = cast(%var_8066, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %863 = %853.0;
  %864 = %858.5;
  %865 = multiply(%861, %862) /* ty=Tensor[(3, 90), float64] */;
  (%863, %864, %var_8067, %865)
}

def @func_2882() -> (Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) {
  %866 = @func_2595() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %867 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 208), float64] */, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
  %868 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 208), float64] */, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
  %869 = reshape(%867, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %870 = reshape(%868, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %871 = @func_1354(%869, %870) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
  %872 = %866.0;
  %873 = %871.7;
  (%872, %873, meta[relay.Constant][54] /* ty=Tensor[(4, 208), float64] */)
}

def @func_7184(%var_7161: uint32) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32) {
  %874 = @func_7079() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %875 = cast(%var_7161, dtype="uint32") /* ty=uint32 */;
  %876 = reshape(%875, newshape=[]) /* ty=uint32 */;
  %877 = @func_4068(%876) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(30, 98), uint32], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float64]) */;
  %878 = %874.0;
  %879 = %877.4;
  (%878, %879, %var_7161)
}

def @func_6472() -> Tensor[(14, 14, 15), float64] {
  %880 = @func_4817() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float32]) */;
  %880.1
}

def @func_2614() -> (Tensor[(6, 15, 14), float32],) {
  %881 = @func_1967() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %882 = %881.0;
  %883 = cast(%882, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %884 = erf(%883) /* ty=Tensor[(6, 15, 14), float32] */;
  (%884,)
}

def @func_6175() -> (Tensor[(6, 15, 14), float64], Tensor[(728), float64], Tensor[(6, 15, 14), float64]) {
  %885 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %886 = cast(%885, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %887 = reshape(%886, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %888 = @func_2463(%887) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
  %889 = %888.2;
  %890 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  (%885, %889, %890)
}

def @func_1767(%var_1737: Tensor[(832), float64]) -> (Tensor[(6, 15, 14), float64], int8, Tensor[(832), float64], Tensor[(832), float64]) {
  %891 = cast(%var_1737, dtype="float64") /* ty=Tensor[(832), float64] */;
  %892 = cast(%var_1737, dtype="float64") /* ty=Tensor[(832), float64] */;
  %893 = reshape(%891, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %894 = reshape(%892, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %895 = @func_1354(%893, %894) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
  %896 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %897 = cast(%896, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %898 = cast(%var_1737, dtype="float64") /* ty=Tensor[(832), float64] */;
  %899 = reshape(%897, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
  %900 = reshape(%898, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %901 = @func_1468(%899, %900) /* ty=(Tensor[(9, 2, 11), bool], Tensor[(198), int16], Tensor[(6, 15, 14), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64], Tensor[(1, 2, 9), float64], Tensor[(832), float64], Tensor[(9, 2, 11), float32]) */;
  %902 = %901.8;
  %903 = cast(meta[relay.Constant][55] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %904 = shape_of(%902, dtype="int32") /* ty=Tensor[(1), int32] */;
  %905 = cast(%902, dtype="float64") /* ty=Tensor[(832), float64] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?), float64] */;
  %907 = %895.1;
  %908 = floor_mod(%905, %906) /* ty=Tensor[(832), float64] */;
  (%896, %907, %var_1737, %908)
}

def @func_4775() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %909 = @func_3224() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), int16], Tensor[(1, 96), float64], Tensor[(270), float64], Tensor[(198), int16]) */;
  %910 = %909.0;
  %911 = cast(%910, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %912 = reshape(%911, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
  %913 = @func_1805(%912) /* ty=Tensor[(6, 15, 14), float64] */;
  (%910, %913)
}

def @func_7841(%var_7836: int16, %var_7837: Tensor[(5, 16, 2), int16]) -> Tensor[(5, 16, 2), int16] {
  %914 = cast(%var_7836, dtype="int16") /* ty=int16 */;
  %915 = cast(%var_7837, dtype="int16") /* ty=Tensor[(5, 16, 2), int16] */;
  left_shift(%914, %915) /* ty=Tensor[(5, 16, 2), int16] */
}

def @func_1967() -> (Tensor[(6, 15, 14), float64],) {
  %916 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  (%916,)
}

def @func_4817() -> (Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float32]) {
  %917 = cast(meta[relay.Constant][56] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %918 = cast(meta[relay.Constant][57] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %919 = cast(meta[relay.Constant][57] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %920 = reshape(%917, newshape=[]) /* ty=uint32 */;
  %921 = reshape(%918, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %922 = reshape(%919, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %923 = @func_2275(%920, %921, %922) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) */;
  %924 = @func_3178() /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) */;
  %925 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %926 = %923.1;
  %927 = %924.0;
  (%925, %926, meta[relay.Constant][56] /* ty=uint32 */, meta[relay.Constant][57] /* ty=Tensor[(2940), float64] */, %927)
}

def @func_6671(%var_6640: Tensor[(56), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(8, 7, 1), float64], Tensor[(56), float64], Tensor[(6, 15, 14), float64]) {
  %928 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %929 = %928.0;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %931 = cast(%var_6640, dtype="float64") /* ty=Tensor[(56), float64] */;
  %932 = reshape(%931, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %933 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %934 = acos(%930) /* ty=Tensor[(6, 15, 14), float64] */;
  %935 = @func_3628(%932) /* ty=Tensor[(8, 7, 1), float64] */;
  %936 = %933.0;
  (%934, %935, %var_6640, %936)
}

def @func_5765() -> Tensor[(6, 15, 14), float64] {
  %937 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %937.0
}

def @func_3404(%var_3364: Tensor[(12, 8, 16), bool], %var_3365: Tensor[(12, 8, 16), bool], %var_3375: Tensor[(2940), float64], %var_3396: Tensor[(12, 8, 16), float64]) -> (Tensor[(12, 8, 16), bool], Tensor[(6, 15, 14), float64], Tensor[(720), int16], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(12, 8, 16), uint16]) {
  %938 = cast(%var_3365, dtype="bool") /* ty=Tensor[(12, 8, 16), bool] */;
  %939 = shape_of(%var_3364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%var_3364, dtype="bool") /* ty=Tensor[(12, 8, 16), bool] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %942 = cast(meta[relay.Constant][58] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %943 = cast(meta[relay.Constant][58] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %944 = cast(meta[relay.Constant][59] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %945 = cast(meta[relay.Constant][60] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %946 = cast(%var_3375, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %947 = reshape(%942, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), int16] */;
  %948 = reshape(%943, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), int16] */;
  %949 = reshape(%944, newshape=[]) /* ty=uint32 */;
  %950 = reshape(%945, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %951 = reshape(%946, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %952 = @func_1644(%947, %948, %949, %950, %951) /* ty=(Tensor[(16, 3, 15), bool], Tensor[(2940), float64], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(16, 3, 15), float64], Tensor[(6, 15, 14), float64]) */;
  %953 = cast(%var_3365, dtype="float64") /* ty=Tensor[(12, 8, 16), float64] */;
  %954 = sin(%953) /* ty=Tensor[(12, 8, 16), float64] */;
  %955 = cast(%var_3396, dtype="uint16") /* ty=Tensor[(12, 8, 16), uint16] */;
  %956 = shape_of(%954, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%954, dtype="uint16") /* ty=Tensor[(12, 8, 16), uint16] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %959 = logical_and(%940, %941) /* ty=Tensor[(12, 8, 16), bool] */;
  %960 = %952.6;
  %961 = bitwise_and(%957, %958) /* ty=Tensor[(12, 8, 16), uint16] */;
  (%959, %960, meta[relay.Constant][58] /* ty=Tensor[(720), int16] */, meta[relay.Constant][59] /* ty=uint32 */, meta[relay.Constant][60] /* ty=Tensor[(70), uint32] */, %var_3375, %961)
}

def @func_7587(%var_7580: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32, Tensor[(2940), float64], Tensor[(70), uint32], Tensor[(2940), float64]) {
  %962 = cast(meta[relay.Constant][61] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %963 = reshape(%962, newshape=[]) /* ty=uint32 */;
  %964 = @func_7184(%963) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32) */;
  %965 = cast(meta[relay.Constant][61] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %966 = cast(meta[relay.Constant][62] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %967 = cast(%var_7580, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %968 = reshape(%965, newshape=[]) /* ty=uint32 */;
  %969 = reshape(%966, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), uint32] */;
  %970 = reshape(%967, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %971 = @func_1048(%968, %969, %970) /* ty=(Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %972 = @func_3234() /* ty=Tensor[(6, 15, 14), float64] */;
  %973 = %964.1;
  %974 = %971.2;
  (%972, %973, meta[relay.Constant][61] /* ty=uint32 */, %974, meta[relay.Constant][62] /* ty=Tensor[(70), uint32] */, %var_7580)
}

def @func_7667(%var_7626: Tensor[(12, 12, 8), float32], %var_7632: Tensor[(12, 12, 8), float32]) -> (Tensor[(12, 12, 8), bool], Tensor[(12, 12, 8), bool]) {
  %975 = cast(%var_7632, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
  %976 = shape_of(%var_7626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%var_7626, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %979 = cast(%var_7626, dtype="float32") /* ty=Tensor[(12, 12, 8), float32] */;
  %980 = asin(%979) /* ty=Tensor[(12, 12, 8), float32] */;
  %981 = cast(%980, dtype="float64") /* ty=Tensor[(12, 12, 8), float64] */;
  %982 = sinh(%981) /* ty=Tensor[(12, 12, 8), float64] */;
  %983 = cast(%var_7626, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
  %984 = shape_of(%982, dtype="int32") /* ty=Tensor[(3), int32] */;
  %985 = cast(%982, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %987 = less(%977, %978) /* ty=Tensor[(12, 12, 8), bool] */;
  %988 = greater(%985, %986) /* ty=Tensor[(12, 12, 8), bool] */;
  (%987, %988)
}

def @func_4113(%var_4072: Tensor[(5, 15, 4), float64]) -> (Tensor[(5, 15, 4), float64], Tensor[(6, 15, 14), float64]) {
  %989 = cast(%var_4072, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %990 = atan(%989) /* ty=Tensor[(5, 15, 4), float64] */;
  %991 = @func_3296() /* ty=Tensor[(6, 15, 14), float64] */;
  (%990, %991)
}

def @func_3628(%var_3620: Tensor[(8, 7, 1), float64]) -> Tensor[(8, 7, 1), float64] {
  %992 = cast(%var_3620, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
  erf(%992) /* ty=Tensor[(8, 7, 1), float64] */
}

def @func_2657() -> Tensor[(6, 15, 14), float64] {
  %993 = @func_2484() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %993.0
}

def @func_8046(%var_8022: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), bool], Tensor[(2940), float64]) {
  %994 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %995 = cast(%var_8022, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %996 = reshape(%995, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %997 = @func_5569(%996) /* ty=(Tensor[(6, 15, 14), bool], Tensor[(3, 10, 9), float64], Tensor[(2940), uint64]) */;
  %998 = @func_7789() /* ty=Tensor[(6, 15, 14), float64] */;
  %999 = %994.0;
  %1000 = %997.0;
  (%998, %999, %1000, %var_8022)
}

def @func_7526() -> Tensor[(6, 15, 14), float64] {
  @func_1712() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_8335() -> Tensor[(13, 8, 12), float64] {
  %1001 = cast(meta[relay.Constant][63] /* ty=Tensor[(13, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 12), float64] */;
  exp(%1001) /* ty=Tensor[(13, 8, 12), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6566() -> Tensor[(6, 15, 14), float32] {
  %0 = fn () -> Tensor[(6, 15, 14), float32] {
    @func_6331() /* ty=Tensor[(6, 15, 14), float32] */
  };
  %0() /* ty=Tensor[(6, 15, 14), float32] */
}

def @func_5765() -> Tensor[(6, 15, 14), float64] {
  %1 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %1.0
}

def @func_7248() -> (Tensor[(6, 15, 14), float64], Tensor[(14, 12, 7), float64], float32) {
  %7 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(14, 12, 7), float64], float32) {
    %2 = cast(3.41283f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %3 = reshape(%2, newshape=[]) /* ty=float32 */;
    %4 = @func_5046(%3) /* ty=(Tensor[(14, 12, 7), uint32], Tensor[(14, 12, 7), float64], Tensor[(6, 15, 14), bool]) */;
    %5 = @func_5217() /* ty=Tensor[(6, 15, 14), float64] */;
    %6 = %4.1;
    (%5, %6, 3.41283f /* ty=float32 */)
  };
  %7() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 12, 7), float64], float32) */
}

def @func_5954(%var_5925: Tensor[(96), float64], %var_5927: Tensor[(198), int16]) -> (Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(198), bool], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %8 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
  %9 = @func_4817() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float32]) */;
  %10 = @func_4848() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %11 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %12 = cast(%var_5925, dtype="float64") /* ty=Tensor[(96), float64] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %14 = cast(%var_5927, dtype="int16") /* ty=Tensor[(198), int16] */;
  %15 = reshape(%12, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
  %16 = reshape(%13, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %17 = reshape(%14, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
  %18 = @func_460(%15, %16, %17) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
  %19 = %18.4;
  %20 = cast(%19, dtype="bool") /* ty=Tensor[(9, 2, 11), bool] */;
  %21 = shape_of(%var_5927, dtype="int32") /* ty=Tensor[(1), int32] */;
  %22 = cast(%var_5927, dtype="bool") /* ty=Tensor[(198), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?), bool] */;
  %24 = @func_3530() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %25 = %8.0;
  %26 = %9.1;
  %27 = %10.0;
  %28 = %11.0;
  %29 = greater_equal(%22, %23) /* ty=Tensor[(198), bool] */;
  %30 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %31 = %24.0;
  (%25, %26, %27, %var_5925, meta[relay.Constant][0] /* ty=Tensor[(270), float64] */, %28, %29, %30, %31)
}

def @func_1807(%var_1806: Tensor[(6, 15, 14), float64]) -> Tensor[(6, 15, 14), float64] {
  %38 = fn (%var_1798: Tensor[(6, 15, 14), float64]) -> Tensor[(6, 15, 14), float64] {
    %32 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %33 = %32.0;
    %34 = cast(%var_1798, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %35 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
    %36 = cast(%33, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%36, %37) /* ty=Tensor[(6, 15, 14), float64] */
  };
  %38(%var_1806) /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_2275(%var_2247: uint32, %var_2249: Tensor[(30, 98), float64], %var_2263: Tensor[(30, 98), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) {
  %39 = cast(%var_2247, dtype="uint32") /* ty=uint32 */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %41 = cast(%var_2249, dtype="float64") /* ty=Tensor[(30, 98), float64] */;
  %42 = reshape(%39, newshape=[]) /* ty=uint32 */;
  %43 = reshape(%40, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), uint32] */;
  %44 = reshape(%41, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %45 = @func_1048(%42, %43, %44) /* ty=(Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %46 = cast(%var_2263, dtype="uint32") /* ty=Tensor[(30, 98), uint32] */;
  %47 = shape_of(%var_2249, dtype="int32") /* ty=Tensor[(2), int32] */;
  %48 = cast(%var_2249, dtype="uint32") /* ty=Tensor[(30, 98), uint32] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %50 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
  %51 = %45.1;
  %52 = subtract(%48, %49) /* ty=Tensor[(30, 98), uint32] */;
  (%50, %51, %var_2247, meta[relay.Constant][1] /* ty=Tensor[(70), uint32] */, %52)
}

def @func_7028() -> (Tensor[(6, 15, 14), float64],) {
  %53 = @func_3198() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %54 = %53.0;
  (%54,)
}

def @func_7341() -> (Tensor[(6, 15, 14), float64],) {
  @func_7339() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_8048(%var_8047: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), bool], Tensor[(2940), float64]) {
  %62 = fn (%var_8022: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), bool], Tensor[(2940), float64]) {
    %55 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
    %56 = cast(%var_8022, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %57 = reshape(%56, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
    %58 = @func_5569(%57) /* ty=(Tensor[(6, 15, 14), bool], Tensor[(3, 10, 9), float64], Tensor[(2940), uint64]) */;
    %59 = @func_7789() /* ty=Tensor[(6, 15, 14), float64] */;
    %60 = %55.0;
    %61 = %58.0;
    (%59, %60, %61, %var_8022)
  };
  %62(%var_8047) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), bool], Tensor[(2940), float64]) */
}

def @func_2616() -> (Tensor[(6, 15, 14), float32],) {
  @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */
}

def @func_3026(%var_3024: Tensor[(6, 15, 14), float32], %var_3025: Tensor[(270), float64]) -> (Tensor[(6, 15, 14), bool], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1, 2, 9), float64], int8, Tensor[(1, 18), int8]) {
  @func_3022(%var_3024, %var_3025) /* ty=(Tensor[(6, 15, 14), bool], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1, 2, 9), float64], int8, Tensor[(1, 18), int8]) */
}

def @func_4044(%var_4042: Tensor[(270), float64]) -> (Tensor[(6, 15, 14), float32], Tensor[(728), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(270), float64]) {
  @func_4041(%var_4042) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(728), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(270), float64]) */
}

def @func_1480() -> (Tensor[(6, 15, 14), float64],) {
  %64 = fn () -> (Tensor[(6, 15, 14), float64],) {
    %63 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
    (%63,)
  };
  %64() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_1591(%var_1590: Tensor[(832), float64]) -> (Tensor[(6, 15, 14), float32], Tensor[(96), float64], Tensor[(832), float64]) {
  %77 = fn (%var_1584: Tensor[(832), float64]) -> (Tensor[(6, 15, 14), float32], Tensor[(96), float64], Tensor[(832), float64]) {
    %65 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
    %66 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 15, 14), float64] */, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
    %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
    %68 = cast(%65, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %70 = cast(%65, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %71 = cast(%var_1584, dtype="float64") /* ty=Tensor[(832), float64] */;
    %72 = reshape(%70, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
    %73 = reshape(%71, newshape=[832]) /* ty=Tensor[(832), float64] */;
    %74 = @func_1468(%72, %73) /* ty=(Tensor[(9, 2, 11), bool], Tensor[(198), int16], Tensor[(6, 15, 14), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64], Tensor[(1, 2, 9), float64], Tensor[(832), float64], Tensor[(9, 2, 11), float32]) */;
    %75 = divide(%68, %69) /* ty=Tensor[(6, 15, 14), float32] */;
    %76 = %74.3;
    (%75, %76, %var_1584)
  };
  %77(%var_1590) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(96), float64], Tensor[(832), float64]) */
}

def @func_3921() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %78 = @func_3530() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %79 = @func_3198() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %80 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  %81 = @func_3296() /* ty=Tensor[(6, 15, 14), float64] */;
  %82 = %78.0;
  %83 = %79.0;
  %84 = @func_3234() /* ty=Tensor[(6, 15, 14), float64] */;
  (%80, %81, %82, %83, %84)
}

def @func_6446(%var_6444: Tensor[(198), int16], %var_6445: Tensor[(10, 30), float64]) -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), bool], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(198), int16], Tensor[(6, 15, 14), float64], Tensor[(10, 30), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64]) {
  @func_6442(%var_6444, %var_6445) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), bool], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(198), int16], Tensor[(6, 15, 14), float64], Tensor[(10, 30), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64]) */
}

def @func_3495(%var_3483: Tensor[(4, 3, 11), bool], %var_3484: Tensor[(4, 3, 11), bool]) -> (Tensor[(4, 3, 11), bool],) {
  %85 = cast(%var_3484, dtype="bool") /* ty=Tensor[(4, 3, 11), bool] */;
  %86 = shape_of(%var_3483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%var_3483, dtype="bool") /* ty=Tensor[(4, 3, 11), bool] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %89 = logical_or(%87, %88) /* ty=Tensor[(4, 3, 11), bool] */;
  (%89,)
}

def @func_8297(%var_8282: Tensor[(198), int16]) -> (Tensor[(96), float64], Tensor[(14, 14, 15), float64], Tensor[(198), int16], Tensor[(6, 15, 14), float64]) {
  %90 = @func_4683() /* ty=(Tensor[(96), float64],) */;
  %91 = %90.0;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(96), float64] */;
  %93 = cast(%var_8282, dtype="int16") /* ty=Tensor[(198), int16] */;
  %94 = reshape(%92, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %95 = reshape(%93, newshape=[198]) /* ty=Tensor[(198), int16] */;
  %96 = @func_5954(%94, %95) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(198), bool], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %97 = %96.1;
  %98 = @func_7536() /* ty=Tensor[(6, 15, 14), float64] */;
  (%91, %97, %var_8282, %98)
}

def @func_6226(%var_6206: Tensor[(1, 96), float64], %var_6207: Tensor[(33, 6), int16], %var_6218: Tensor[(1120), int32]) -> (Tensor[(132), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 96), float64], Tensor[(33, 6), int16], Tensor[(6, 15, 14), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float64]) {
  %99 = @func_4734() /* ty=(Tensor[(4, 3, 11), bool], Tensor[(132), bool], Tensor[(11, 13, 14), float64]) */;
  %100 = cast(%var_6206, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
  %101 = cast(%var_6207, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
  %102 = reshape(%100, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %103 = reshape(%101, newshape=[198]) /* ty=Tensor[(198), int16] */;
  %104 = @func_5954(%102, %103) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(198), bool], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %105 = cast(%var_6218, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %106 = reshape(%105, newshape=[1120]) /* ty=Tensor[(1120), int32] */;
  %107 = @func_5845(%106) /* ty=(Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) */;
  %108 = %99.1;
  %109 = %104.5;
  %110 = %107.2;
  %111 = @func_3296() /* ty=Tensor[(6, 15, 14), float64] */;
  (%108, %109, %var_6206, %var_6207, %110, %var_6218, %111)
}

def @func_7615() -> (Tensor[(6, 15, 14), float64],) {
  %114 = fn () -> (Tensor[(6, 15, 14), float64],) {
    %112 = @func_4848() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %113 = %112.0;
    (%113,)
  };
  %114() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_4735() -> (Tensor[(4, 3, 11), bool], Tensor[(132), bool], Tensor[(11, 13, 14), float64]) {
  %125 = fn () -> (Tensor[(4, 3, 11), bool], Tensor[(132), bool], Tensor[(11, 13, 14), float64]) {
    %115 = cast(meta[relay.Constant][3] /* ty=Tensor[(132), bool] */, dtype="bool") /* ty=Tensor[(132), bool] */;
    %116 = cast(meta[relay.Constant][3] /* ty=Tensor[(132), bool] */, dtype="bool") /* ty=Tensor[(132), bool] */;
    %117 = reshape(%115, newshape=[4, 3, 11]) /* ty=Tensor[(4, 3, 11), bool] */;
    %118 = reshape(%116, newshape=[4, 3, 11]) /* ty=Tensor[(4, 3, 11), bool] */;
    %119 = @func_3495(%117, %118) /* ty=(Tensor[(4, 3, 11), bool],) */;
    %120 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 13, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 14), float64] */;
    %121 = sigmoid(%120) /* ty=Tensor[(11, 13, 14), float64] */;
    %122 = cast(%121, dtype="float64") /* ty=Tensor[(11, 13, 14), float64] */;
    %123 = %119.0;
    %124 = asinh(%122) /* ty=Tensor[(11, 13, 14), float64] */;
    (%123, meta[relay.Constant][3] /* ty=Tensor[(132), bool] */, %124)
  };
  %125() /* ty=(Tensor[(4, 3, 11), bool], Tensor[(132), bool], Tensor[(11, 13, 14), float64]) */
}

def @func_1714() -> Tensor[(6, 15, 14), float64] {
  @func_1712() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_5958(%var_5956: Tensor[(96), float64], %var_5957: Tensor[(198), int16]) -> (Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(198), bool], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  @func_5954(%var_5956, %var_5957) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(198), bool], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_2393() -> (Tensor[(6, 15, 14), float64],) {
  @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_1053(%var_1050: uint32, %var_1051: Tensor[(1, 10, 7), uint32], %var_1052: Tensor[(2940), float64]) -> (Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) {
  @func_1048(%var_1050, %var_1051, %var_1052) /* ty=(Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */
}

def @func_4426() -> Tensor[(6, 15, 14), float32] {
  @func_4424() /* ty=Tensor[(6, 15, 14), float32] */
}

def @func_4190() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) {
  %134 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) {
    %126 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
    %127 = @func_2572() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %128 = %127.0;
    %129 = cast(%128, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %130 = rsqrt(%129) /* ty=Tensor[(6, 15, 14), float64] */;
    %131 = cast(%130, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
    %132 = %126.0;
    %133 = sin(%131) /* ty=Tensor[(6, 15, 14), float32] */;
    (%132, %133)
  };
  %134() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */
}

def @func_7757() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  @func_7755() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_3923() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  @func_3921() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_4116(%var_4114: Tensor[(5, 15, 4), float64]) -> (Tensor[(5, 15, 4), float64], Tensor[(6, 15, 14), float64]) {
  @func_4113(%var_4114) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_5248(%var_5246: Tensor[(12, 6), float64]) -> (Tensor[(12, 6), float64], Tensor[(6, 15, 14), float32]) {
  @func_5245(%var_5246) /* ty=(Tensor[(12, 6), float64], Tensor[(6, 15, 14), float32]) */
}

def @func_5086(%var_5085: Tensor[(18), int8]) -> (Tensor[(96), float64], Tensor[(1, 2, 9), bool], int8, Tensor[(18), int8], Tensor[(6, 15, 14), float64]) {
  %145 = fn (%var_5064: Tensor[(18), int8]) -> (Tensor[(96), float64], Tensor[(1, 2, 9), bool], int8, Tensor[(18), int8], Tensor[(6, 15, 14), float64]) {
    %135 = @func_4683() /* ty=(Tensor[(96), float64],) */;
    %136 = cast(meta[relay.Constant][5] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %137 = cast(%var_5064, dtype="int8") /* ty=Tensor[(18), int8] */;
    %138 = reshape(%136, newshape=[]) /* ty=int8 */;
    %139 = reshape(%137, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int8] */;
    %140 = @func_1193(%138, %139) /* ty=(Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) */;
    %141 = @func_2572() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %142 = %135.0;
    %143 = %140.0;
    %144 = %141.0;
    (%142, %143, meta[relay.Constant][5] /* ty=int8 */, %var_5064, %144)
  };
  %145(%var_5085) /* ty=(Tensor[(96), float64], Tensor[(1, 2, 9), bool], int8, Tensor[(18), int8], Tensor[(6, 15, 14), float64]) */
}

def @func_2202() -> Tensor[(6, 15, 14), float64] {
  %146 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %146.0
}

def @func_2230() -> (Tensor[(6, 15, 14), float64],) {
  %147 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  (%147,)
}

def @func_2368(%var_2366: Tensor[(2940), float64], %var_2367: Tensor[(2, 840), int8]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(270), float64], Tensor[(2940), float64], uint32, Tensor[(4, 13, 14), float64], Tensor[(728), float64], Tensor[(16, 15, 7), bool], Tensor[(2, 840), int8], Tensor[(1, 13, 7), uint64]) {
  %185 = fn (%var_2304: Tensor[(2940), float64], %var_2330: Tensor[(2, 840), int8]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(270), float64], Tensor[(2940), float64], uint32, Tensor[(4, 13, 14), float64], Tensor[(728), float64], Tensor[(16, 15, 7), bool], Tensor[(2, 840), int8], Tensor[(1, 13, 7), uint64]) {
    %148 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %149 = cast(meta[relay.Constant][6] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %150 = cast(%var_2304, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %151 = reshape(%149, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %152 = reshape(%150, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
    %153 = @func_1685(%151, %152) /* ty=(Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
    %154 = cast(meta[relay.Constant][8] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
    %155 = reshape(%154, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float64] */;
    %156 = cast(%var_2330, dtype="int8") /* ty=Tensor[(2, 840), int8] */;
    %157 = cast(%var_2330, dtype="int8") /* ty=Tensor[(2, 840), int8] */;
    %158 = reshape(%156, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int8] */;
    %159 = reshape(%157, newshape=[16, 15, 7]) /* ty=Tensor[(16, 15, 7), int8] */;
    %160 = @func_1155(%158, %159) /* ty=(Tensor[(16, 15, 7), bool], Tensor[(198), int16], Tensor[(9, 2, 11), float32]) */;
    %161 = cast(meta[relay.Constant][6] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %162 = reshape(%161, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
    %163 = @func_300(%162) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
    %164 = %163.1;
    %165 = cast(%164, dtype="float32") /* ty=Tensor[(1, 13, 7), float32] */;
    %166 = log(%165) /* ty=Tensor[(1, 13, 7), float32] */;
    %167 = cast(%166, dtype="float64") /* ty=Tensor[(1, 13, 7), float64] */;
    %168 = atan(%167) /* ty=Tensor[(1, 13, 7), float64] */;
    %169 = cast(meta[relay.Constant][7] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %170 = cast(%var_2304, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %171 = %153.3;
    %172 = cast(%171, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
    %173 = reshape(%169, newshape=[]) /* ty=uint32 */;
    %174 = reshape(%170, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
    %175 = reshape(%172, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
    %176 = @func_2275(%173, %174, %175) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) */;
    %177 = %176.2;
    %178 = cast(%168, dtype="uint64") /* ty=Tensor[(1, 13, 7), uint64] */;
    %179 = cast(%177, dtype="uint64") /* ty=uint64 */;
    %180 = %148.0;
    %181 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
    %182 = @func_2128(%155) /* ty=Tensor[(4, 13, 14), float64] */;
    %183 = %160.0;
    %184 = maximum(%178, %179) /* ty=Tensor[(1, 13, 7), uint64] */;
    (%180, %181, %171, meta[relay.Constant][6] /* ty=Tensor[(270), float64] */, %var_2304, meta[relay.Constant][7] /* ty=uint32 */, %182, meta[relay.Constant][8] /* ty=Tensor[(728), float64] */, %183, %var_2330, %184)
  };
  %185(%var_2366, %var_2367) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(270), float64], Tensor[(2940), float64], uint32, Tensor[(4, 13, 14), float64], Tensor[(728), float64], Tensor[(16, 15, 7), bool], Tensor[(2, 840), int8], Tensor[(1, 13, 7), uint64]) */
}

def @func_5888() -> (Tensor[(6, 15, 14), float64],) {
  %186 = @func_5765() /* ty=Tensor[(6, 15, 14), float64] */;
  (%186,)
}

def @func_1009(%var_1008: Tensor[(14, 14, 15), float64]) -> Tensor[(14, 14, 15), float64] {
  %188 = fn (%var_1004: Tensor[(14, 14, 15), float64]) -> Tensor[(14, 14, 15), float64] {
    %187 = cast(%var_1004, dtype="float64") /* ty=Tensor[(14, 14, 15), float64] */;
    sigmoid(%187) /* ty=Tensor[(14, 14, 15), float64] */
  };
  %188(%var_1008) /* ty=Tensor[(14, 14, 15), float64] */
}

def @func_5400(%var_5398: float32, %var_5399: Tensor[(270), float64]) -> (Tensor[(11, 8, 10), float32], Tensor[(6, 15, 14), float32], Tensor[(270), float64], Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64], Tensor[(4, 13, 14), float64]) {
  %205 = fn (%var_5285: float32, %var_5291: Tensor[(270), float64]) -> (Tensor[(11, 8, 10), float32], Tensor[(6, 15, 14), float32], Tensor[(270), float64], Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64], Tensor[(4, 13, 14), float64]) {
    %189 = cast(%var_5285, dtype="float32") /* ty=float32 */;
    %190 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
    %191 = cast(%var_5291, dtype="float64") /* ty=Tensor[(270), float64] */;
    %192 = reshape(%191, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %193 = @func_4041(%192) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(728), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(270), float64]) */;
    %194 = @func_3457() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64]) */;
    %195 = %193.0;
    %196 = cast(%195, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
    %197 = reshape(%196, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
    %198 = @func_2463(%197) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
    %199 = %198.1;
    %200 = cast(%199, dtype="float64") /* ty=Tensor[(4, 13, 14), float64] */;
    %201 = reshape(%200, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float64] */;
    %202 = mod(%189, %190) /* ty=Tensor[(11, 8, 10), float32] */;
    %203 = %194.0;
    %204 = @func_2128(%201) /* ty=Tensor[(4, 13, 14), float64] */;
    (%202, %195, %var_5291, %203, %199, %204)
  };
  %205(%var_5398, %var_5399) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 15, 14), float32], Tensor[(270), float64], Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64], Tensor[(4, 13, 14), float64]) */
}

def @func_6331() -> Tensor[(6, 15, 14), float32] {
  %206 = @func_4204() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %206.0
}

def @func_6673(%var_6672: Tensor[(56), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(8, 7, 1), float64], Tensor[(56), float64], Tensor[(6, 15, 14), float64]) {
  %216 = fn (%var_6640: Tensor[(56), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(8, 7, 1), float64], Tensor[(56), float64], Tensor[(6, 15, 14), float64]) {
    %207 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
    %208 = %207.0;
    %209 = cast(%208, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %210 = cast(%var_6640, dtype="float64") /* ty=Tensor[(56), float64] */;
    %211 = reshape(%210, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
    %212 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %213 = acos(%209) /* ty=Tensor[(6, 15, 14), float64] */;
    %214 = @func_3628(%211) /* ty=Tensor[(8, 7, 1), float64] */;
    %215 = %212.0;
    (%213, %214, %var_6640, %215)
  };
  %216(%var_6672) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(8, 7, 1), float64], Tensor[(56), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_2614() -> (Tensor[(6, 15, 14), float32],) {
  %217 = @func_1967() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %218 = %217.0;
  %219 = cast(%218, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %220 = erf(%219) /* ty=Tensor[(6, 15, 14), float32] */;
  (%220,)
}

def @func_3955(%var_3954: Tensor[(2940), float64]) -> (Tensor[(16, 16, 2), int16], Tensor[(832), float64], Tensor[(2940), float64]) {
  %233 = fn (%var_3941: Tensor[(2940), float64]) -> (Tensor[(16, 16, 2), int16], Tensor[(832), float64], Tensor[(2940), float64]) {
    %221 = cast(meta[relay.Constant][10] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %222 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 16, 2), uint64] */, dtype="uint64") /* ty=Tensor[(16, 16, 2), uint64] */;
    %223 = logical_xor(%221, %222) /* ty=Tensor[(16, 16, 2), uint64] */;
    %224 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 16, 2), uint64] */, dtype="int16") /* ty=Tensor[(16, 16, 2), int16] */;
    %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
    %226 = cast(%223, dtype="int16") /* ty=Tensor[(16, 16, 2), int16] */;
    %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %228 = cast(%var_3941, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %229 = reshape(%228, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
    %230 = @func_2418(%229) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(3, 10, 9), float64], Tensor[(832), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
    %231 = subtract(%226, %227) /* ty=Tensor[(16, 16, 2), int16] */;
    %232 = %230.2;
    (%231, %232, %var_3941)
  };
  %233(%var_3954) /* ty=(Tensor[(16, 16, 2), int16], Tensor[(832), float64], Tensor[(2940), float64]) */
}

def @func_4848() -> (Tensor[(6, 15, 14), float64],) {
  %234 = @func_2484() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %235 = %234.0;
  (%235,)
}

def @func_6787(%var_6785: Tensor[(270), float64], %var_6786: Tensor[(1120), int32]) -> (Tensor[(96), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) {
  %247 = fn (%var_6720: Tensor[(270), float64], %var_6723: Tensor[(1120), int32]) -> (Tensor[(96), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) {
    %236 = @func_3457() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64]) */;
    %237 = cast(%var_6720, dtype="float64") /* ty=Tensor[(270), float64] */;
    %238 = reshape(%237, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
    %239 = @func_300(%238) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
    %240 = cast(%var_6723, dtype="int32") /* ty=Tensor[(1120), int32] */;
    %241 = reshape(%240, newshape=[1120]) /* ty=Tensor[(1120), int32] */;
    %242 = @func_5845(%241) /* ty=(Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) */;
    %243 = %236.1;
    %244 = %239.1;
    %245 = %242.0;
    %246 = @func_3635() /* ty=Tensor[(6, 15, 14), float32] */;
    (%243, %244, %var_6720, %245, %var_6723, %246)
  };
  %247(%var_6785, %var_6786) /* ty=(Tensor[(96), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) */
}

def @func_7538() -> Tensor[(6, 15, 14), float64] {
  @func_7536() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_7590(%var_7588: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32, Tensor[(2940), float64], Tensor[(70), uint32], Tensor[(2940), float64]) {
  @func_7587(%var_7588) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32, Tensor[(2940), float64], Tensor[(70), uint32], Tensor[(2940), float64]) */
}

def @func_7841(%var_7836: int16, %var_7837: Tensor[(5, 16, 2), int16]) -> Tensor[(5, 16, 2), int16] {
  %248 = cast(%var_7836, dtype="int16") /* ty=int16 */;
  %249 = cast(%var_7837, dtype="int16") /* ty=Tensor[(5, 16, 2), int16] */;
  left_shift(%248, %249) /* ty=Tensor[(5, 16, 2), int16] */
}

def @func_4635(%var_4626: Tensor[(2, 8, 16), float64], %var_4627: Tensor[(2, 8, 16), float64]) -> Tensor[(2, 8, 16), float64] {
  %250 = cast(%var_4627, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
  %251 = shape_of(%var_4626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%var_4626, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%252, %253) /* ty=Tensor[(2, 8, 16), float64] */
}

def @func_6622() -> (Tensor[(6, 15, 14), float64], uint32, uint32) {
  %259 = fn () -> (Tensor[(6, 15, 14), float64], uint32, uint32) {
    %254 = cast(meta[relay.Constant][12] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %255 = reshape(%254, newshape=[]) /* ty=uint32 */;
    %256 = @func_4068(%255) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(30, 98), uint32], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float64]) */;
    %257 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
    %258 = %256.2;
    (%257, %258, meta[relay.Constant][12] /* ty=uint32 */)
  };
  %259() /* ty=(Tensor[(6, 15, 14), float64], uint32, uint32) */
}

def @func_6812() -> Tensor[(6, 15, 14), float64] {
  @func_6810() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_3297() -> Tensor[(6, 15, 14), float64] {
  %260 = fn () -> Tensor[(6, 15, 14), float64] {
    @func_3234() /* ty=Tensor[(6, 15, 14), float64] */
  };
  %260() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_6442(%var_6390: Tensor[(198), int16], %var_6412: Tensor[(10, 30), float64]) -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), bool], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(198), int16], Tensor[(6, 15, 14), float64], Tensor[(10, 30), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64]) {
  %261 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %262 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %263 = @func_2082() /* ty=(Tensor[(6, 15, 14), bool],) */;
  %264 = cast(meta[relay.Constant][13] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %265 = cast(meta[relay.Constant][14] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %266 = cast(%var_6390, dtype="int16") /* ty=Tensor[(198), int16] */;
  %267 = reshape(%264, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
  %268 = reshape(%265, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %269 = reshape(%266, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
  %270 = @func_460(%267, %268, %269) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
  %271 = cast(%var_6412, dtype="float64") /* ty=Tensor[(10, 30), float64] */;
  %272 = reshape(%271, newshape=[5, 15, 4]) /* ty=Tensor[(5, 15, 4), float64] */;
  %273 = @func_4113(%272) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(6, 15, 14), float64]) */;
  %274 = %261.0;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %276 = reshape(%275, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %277 = @func_2463(%276) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
  %278 = %262.0;
  %279 = %263.0;
  %280 = %270.2;
  %281 = %273.1;
  %282 = @func_4424() /* ty=Tensor[(6, 15, 14), float32] */;
  %283 = @func_3234() /* ty=Tensor[(6, 15, 14), float64] */;
  %284 = %277.1;
  (%274, %278, %279, %280, meta[relay.Constant][13] /* ty=Tensor[(96), float64] */, meta[relay.Constant][14] /* ty=Tensor[(270), float64] */, %var_6390, %281, %var_6412, %282, %283, %284)
}

def @func_4639(%var_4637: Tensor[(2, 8, 16), float64], %var_4638: Tensor[(2, 8, 16), float64]) -> Tensor[(2, 8, 16), float64] {
  @func_4635(%var_4637, %var_4638) /* ty=Tensor[(2, 8, 16), float64] */
}

def @func_5767() -> Tensor[(6, 15, 14), float64] {
  @func_5765() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_465(%var_462: Tensor[(16, 6), float64], %var_463: Tensor[(1, 270), float64], %var_464: Tensor[(33, 6), int16]) -> (Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) {
  @func_460(%var_462, %var_463, %var_464) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */
}

def @func_4819() -> (Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float32]) {
  @func_4817() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float32]) */
}

def @func_1688(%var_1686: Tensor[(270), float64], %var_1687: Tensor[(2940), float64]) -> (Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) {
  %298 = fn (%var_1661: Tensor[(270), float64], %var_1682: Tensor[(2940), float64]) -> (Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) {
    %285 = cast(%var_1661, dtype="float64") /* ty=Tensor[(270), float64] */;
    %286 = reshape(%285, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
    %287 = @func_300(%286) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
    %288 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
    %289 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 15, 14), float64] */, dtype="uint32") /* ty=Tensor[(6, 15, 14), uint32] */;
    %290 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
    %291 = cast(%288, dtype="uint32") /* ty=Tensor[(6, 15, 14), uint32] */;
    %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %293 = cast(%var_1682, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %294 = reshape(%293, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float64] */;
    %295 = %287.1;
    %296 = bitwise_or(%291, %292) /* ty=Tensor[(6, 15, 14), uint32] */;
    %297 = @func_1007(%294) /* ty=Tensor[(14, 14, 15), float64] */;
    (%295, %var_1661, %296, %297, %var_1682)
  };
  %298(%var_1686, %var_1687) /* ty=(Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */
}

def @func_6160(%var_6159: Tensor[(1, 270), float64]) -> (Tensor[(96), float64], Tensor[(4, 208), float32], Tensor[(270), float64], Tensor[(1, 270), float64], Tensor[(198), float64]) {
  %315 = fn (%var_6154: Tensor[(1, 270), float64]) -> (Tensor[(96), float64], Tensor[(4, 208), float32], Tensor[(270), float64], Tensor[(1, 270), float64], Tensor[(198), float64]) {
    %299 = @func_2882() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) */;
    %300 = %299.2;
    %301 = cast(%300, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
    %302 = cast(%300, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
    %303 = reshape(%301, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
    %304 = reshape(%302, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
    %305 = @func_1354(%303, %304) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
    %306 = cast(%300, dtype="float32") /* ty=Tensor[(4, 208), float32] */;
    %307 = cast(%var_6154, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
    %308 = cast(meta[relay.Constant][16] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
    %309 = reshape(%307, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %310 = reshape(%308, newshape=[198]) /* ty=Tensor[(198), float64] */;
    %311 = @func_3605(%309, %310) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(198), bool], Tensor[(198), bool]) */;
    %312 = %305.7;
    %313 = asinh(%306) /* ty=Tensor[(4, 208), float32] */;
    %314 = %311.4;
    (%312, %313, %314, %var_6154, meta[relay.Constant][16] /* ty=Tensor[(198), float64] */)
  };
  %315(%var_6159) /* ty=(Tensor[(96), float64], Tensor[(4, 208), float32], Tensor[(270), float64], Tensor[(1, 270), float64], Tensor[(198), float64]) */
}

def @func_7412() -> Tensor[(4, 208), float64] {
  %316 = @func_4563() /* ty=(Tensor[(4, 208), float64],) */;
  %316.0
}

def @func_7831(%var_7829: Tensor[(3, 6), int8]) -> (Tensor[(6, 15, 14), float32], Tensor[(18), int8], Tensor[(3, 6), int8], Tensor[(6, 15, 14), float64]) {
  @func_7828(%var_7829) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(18), int8], Tensor[(3, 6), int8], Tensor[(6, 15, 14), float64]) */
}

def @func_2596() -> (Tensor[(6, 15, 14), float64],) {
  %319 = fn () -> (Tensor[(6, 15, 14), float64],) {
    %317 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %318 = %317.0;
    (%318,)
  };
  %319() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_7030() -> (Tensor[(6, 15, 14), float64],) {
  @func_7028() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_7587(%var_7580: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32, Tensor[(2940), float64], Tensor[(70), uint32], Tensor[(2940), float64]) {
  %320 = cast(meta[relay.Constant][17] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %321 = reshape(%320, newshape=[]) /* ty=uint32 */;
  %322 = @func_7184(%321) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32) */;
  %323 = cast(meta[relay.Constant][17] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %324 = cast(meta[relay.Constant][18] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %325 = cast(%var_7580, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %326 = reshape(%323, newshape=[]) /* ty=uint32 */;
  %327 = reshape(%324, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), uint32] */;
  %328 = reshape(%325, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %329 = @func_1048(%326, %327, %328) /* ty=(Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %330 = @func_3234() /* ty=Tensor[(6, 15, 14), float64] */;
  %331 = %322.1;
  %332 = %329.2;
  (%330, %331, meta[relay.Constant][17] /* ty=uint32 */, %332, meta[relay.Constant][18] /* ty=Tensor[(70), uint32] */, %var_7580)
}

def @func_3096(%var_3095: float32) -> (Tensor[(14, 12, 7), float32], Tensor[(6, 15, 14), float32], Tensor[(832), float64], Tensor[(832), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %346 = fn (%var_3064: float32) -> (Tensor[(14, 12, 7), float32], Tensor[(6, 15, 14), float32], Tensor[(832), float64], Tensor[(832), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
    %333 = cast(%var_3064, dtype="float32") /* ty=float32 */;
    %334 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 12, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 7), float32] */;
    %335 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
    %336 = cast(meta[relay.Constant][20] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
    %337 = reshape(%336, newshape=[832]) /* ty=Tensor[(832), float64] */;
    %338 = @func_1589(%337) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(96), float64], Tensor[(832), float64]) */;
    %339 = @func_2484() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %340 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %341 = floor_mod(%333, %334) /* ty=Tensor[(14, 12, 7), float32] */;
    %342 = %335.0;
    %343 = %338.2;
    %344 = %339.0;
    %345 = %340.0;
    (%341, %342, %343, meta[relay.Constant][20] /* ty=Tensor[(832), float64] */, %344, %345)
  };
  %346(%var_3095) /* ty=(Tensor[(14, 12, 7), float32], Tensor[(6, 15, 14), float32], Tensor[(832), float64], Tensor[(832), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_7527() -> Tensor[(6, 15, 14), float64] {
  %347 = fn () -> Tensor[(6, 15, 14), float64] {
    @func_1712() /* ty=Tensor[(6, 15, 14), float64] */
  };
  %347() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_3203() -> (Tensor[(6, 15, 14), float32],) {
  %348 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %349 = %348.0;
  (%349,)
}

def @func_6849(%var_6848: Tensor[(2, 7, 2), float32]) -> Tensor[(2, 7, 2), float32] {
  %355 = fn (%var_6827: Tensor[(2, 7, 2), float32]) -> Tensor[(2, 7, 2), float32] {
    %350 = cast(%var_6827, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
    %351 = log(%350) /* ty=Tensor[(2, 7, 2), float32] */;
    %352 = cast(%351, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
    %353 = asinh(%352) /* ty=Tensor[(2, 7, 2), float32] */;
    %354 = cast(%353, dtype="float32") /* ty=Tensor[(2, 7, 2), float32] */;
    sin(%354) /* ty=Tensor[(2, 7, 2), float32] */
  };
  %355(%var_6848) /* ty=Tensor[(2, 7, 2), float32] */
}

def @func_4204() -> (Tensor[(6, 15, 14), float32],) {
  %356 = @func_3635() /* ty=Tensor[(6, 15, 14), float32] */;
  (%356,)
}

def @func_4206() -> (Tensor[(6, 15, 14), float32],) {
  @func_4204() /* ty=(Tensor[(6, 15, 14), float32],) */
}

def @func_2420(%var_2419: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(3, 10, 9), float64], Tensor[(832), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) {
  %371 = fn (%var_2412: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(3, 10, 9), float64], Tensor[(832), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) {
    %357 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %358 = cast(meta[relay.Constant][21] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
    %359 = cast(meta[relay.Constant][21] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
    %360 = reshape(%358, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
    %361 = reshape(%359, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
    %362 = @func_1354(%360, %361) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
    %363 = %362.4;
    %364 = cast(%363, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
    %365 = cast(%var_2412, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %366 = reshape(%364, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %367 = reshape(%365, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
    %368 = @func_1685(%366, %367) /* ty=(Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
    %369 = %357.0;
    %370 = %368.3;
    (%369, %363, meta[relay.Constant][21] /* ty=Tensor[(832), float64] */, %370, %var_2412)
  };
  %371(%var_2419) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(3, 10, 9), float64], Tensor[(832), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */
}

def @func_2573() -> (Tensor[(6, 15, 14), float64],) {
  %374 = fn () -> (Tensor[(6, 15, 14), float64],) {
    %372 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %373 = %372.0;
    (%373,)
  };
  %374() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_2131(%var_2129: Tensor[(4, 13, 14), float64]) -> Tensor[(4, 13, 14), float64] {
  @func_2128(%var_2129) /* ty=Tensor[(4, 13, 14), float64] */
}

def @func_2657() -> Tensor[(6, 15, 14), float64] {
  %375 = @func_2484() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %375.0
}

def @func_4775() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %376 = @func_3224() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), int16], Tensor[(1, 96), float64], Tensor[(270), float64], Tensor[(198), int16]) */;
  %377 = %376.0;
  %378 = cast(%377, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %379 = reshape(%378, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
  %380 = @func_1805(%379) /* ty=Tensor[(6, 15, 14), float64] */;
  (%377, %380)
}

def @func_3628(%var_3620: Tensor[(8, 7, 1), float64]) -> Tensor[(8, 7, 1), float64] {
  %381 = cast(%var_3620, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
  erf(%381) /* ty=Tensor[(8, 7, 1), float64] */
}

def @func_4522() -> Tensor[(6, 15, 14), float64] {
  @func_4520() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_2280(%var_2277: uint32, %var_2278: Tensor[(30, 98), float64], %var_2279: Tensor[(30, 98), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) {
  @func_2275(%var_2277, %var_2278, %var_2279) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) */
}

def @func_4352(%var_4336: Tensor[(16, 10, 7), int32], %var_4337: Tensor[(16, 10, 7), int32]) -> (Tensor[(16, 10, 7), int32], Tensor[(16, 10, 7), float32], Tensor[(16, 10, 7), bool]) {
  %382 = cast(%var_4337, dtype="int32") /* ty=Tensor[(16, 10, 7), int32] */;
  %383 = shape_of(%var_4336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%var_4336, dtype="int32") /* ty=Tensor[(16, 10, 7), int32] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %386 = cast(%var_4336, dtype="float32") /* ty=Tensor[(16, 10, 7), float32] */;
  %387 = cast(%var_4337, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %388 = shape_of(%var_4336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_4336, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %391 = bitwise_or(%384, %385) /* ty=Tensor[(16, 10, 7), int32] */;
  %392 = rsqrt(%386) /* ty=Tensor[(16, 10, 7), float32] */;
  %393 = logical_or(%389, %390) /* ty=Tensor[(16, 10, 7), bool] */;
  (%391, %392, %393)
}

def @func_4070(%var_4069: uint32) -> (Tensor[(6, 15, 14), float64], Tensor[(30, 98), uint32], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float64]) {
  %406 = fn (%var_4059: uint32) -> (Tensor[(6, 15, 14), float64], Tensor[(30, 98), uint32], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float64]) {
    %394 = @func_3198() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %395 = cast(%var_4059, dtype="uint32") /* ty=uint32 */;
    %396 = cast(meta[relay.Constant][22] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %397 = cast(meta[relay.Constant][22] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %398 = reshape(%395, newshape=[]) /* ty=uint32 */;
    %399 = reshape(%396, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
    %400 = reshape(%397, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
    %401 = @func_2275(%398, %399, %400) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) */;
    %402 = @func_3198() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %403 = %394.0;
    %404 = %401.4;
    %405 = %402.0;
    (%403, %404, %var_4059, meta[relay.Constant][22] /* ty=Tensor[(2940), float64] */, %405)
  };
  %406(%var_4069) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(30, 98), uint32], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_7080() -> (Tensor[(6, 15, 14), float64],) {
  %408 = fn () -> (Tensor[(6, 15, 14), float64],) {
    %407 = @func_3296() /* ty=Tensor[(6, 15, 14), float64] */;
    (%407,)
  };
  %408() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_1472(%var_1470: Tensor[(6, 15, 14), float64], %var_1471: Tensor[(832), float64]) -> (Tensor[(9, 2, 11), bool], Tensor[(198), int16], Tensor[(6, 15, 14), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64], Tensor[(1, 2, 9), float64], Tensor[(832), float64], Tensor[(9, 2, 11), float32]) {
  @func_1468(%var_1470, %var_1471) /* ty=(Tensor[(9, 2, 11), bool], Tensor[(198), int16], Tensor[(6, 15, 14), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64], Tensor[(1, 2, 9), float64], Tensor[(832), float64], Tensor[(9, 2, 11), float32]) */
}

def @func_2559() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) {
  %417 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) {
    %409 = @func_1494() /* ty=Tensor[(6, 15, 14), float64] */;
    %410 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 15, 14), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
    %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
    %412 = cast(%409, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
    %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %414 = @func_2202() /* ty=Tensor[(6, 15, 14), float64] */;
    %415 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
    %416 = less_equal(%412, %413) /* ty=Tensor[(6, 15, 14), bool] */;
    (%414, %415, %416)
  };
  %417() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */
}

def @func_7941(%var_7940: Tensor[(10, 4, 13), int16]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(10, 4, 13), float64], Tensor[(6, 15, 14), float64]) {
  %433 = fn (%var_7877: Tensor[(10, 4, 13), int16]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(10, 4, 13), float64], Tensor[(6, 15, 14), float64]) {
    %418 = @func_4480() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %419 = @func_4775() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
    %420 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 4, 13), int16] */, dtype="int16") /* ty=Tensor[(10, 4, 13), int16] */;
    %421 = shape_of(%var_7877, dtype="int32") /* ty=Tensor[(3), int32] */;
    %422 = cast(%var_7877, dtype="int16") /* ty=Tensor[(10, 4, 13), int16] */;
    %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %424 = left_shift(%422, %423) /* ty=Tensor[(10, 4, 13), int16] */;
    %425 = cast(%424, dtype="float64") /* ty=Tensor[(10, 4, 13), float64] */;
    %426 = acosh(%425) /* ty=Tensor[(10, 4, 13), float64] */;
    %427 = cast(%426, dtype="float64") /* ty=Tensor[(10, 4, 13), float64] */;
    %428 = @func_2572() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %429 = %418.0;
    %430 = %419.1;
    %431 = log(%427) /* ty=Tensor[(10, 4, 13), float64] */;
    %432 = %428.0;
    (%429, %430, %431, %432)
  };
  %433(%var_7940) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(10, 4, 13), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_7391() -> (Tensor[(6, 15, 14), float64], Tensor[(4, 208), float64], Tensor[(6, 15, 14), float64]) {
  %440 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(4, 208), float64], Tensor[(6, 15, 14), float64]) {
    %434 = @func_4563() /* ty=(Tensor[(4, 208), float64],) */;
    %435 = @func_4520() /* ty=Tensor[(6, 15, 14), float64] */;
    %436 = cast(%435, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %437 = reshape(%436, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
    %438 = %434.0;
    %439 = @func_1805(%437) /* ty=Tensor[(6, 15, 14), float64] */;
    (%435, %438, %439)
  };
  %440() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(4, 208), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_3409(%var_3405: Tensor[(12, 8, 16), bool], %var_3406: Tensor[(12, 8, 16), bool], %var_3407: Tensor[(2940), float64], %var_3408: Tensor[(12, 8, 16), float64]) -> (Tensor[(12, 8, 16), bool], Tensor[(6, 15, 14), float64], Tensor[(720), int16], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(12, 8, 16), uint16]) {
  %465 = fn (%var_3364: Tensor[(12, 8, 16), bool], %var_3365: Tensor[(12, 8, 16), bool], %var_3375: Tensor[(2940), float64], %var_3396: Tensor[(12, 8, 16), float64]) -> (Tensor[(12, 8, 16), bool], Tensor[(6, 15, 14), float64], Tensor[(720), int16], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(12, 8, 16), uint16]) {
    %441 = cast(%var_3365, dtype="bool") /* ty=Tensor[(12, 8, 16), bool] */;
    %442 = shape_of(%var_3364, dtype="int32") /* ty=Tensor[(3), int32] */;
    %443 = cast(%var_3364, dtype="bool") /* ty=Tensor[(12, 8, 16), bool] */;
    %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %445 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
    %446 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
    %447 = cast(meta[relay.Constant][26] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %448 = cast(meta[relay.Constant][27] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
    %449 = cast(%var_3375, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %450 = reshape(%445, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), int16] */;
    %451 = reshape(%446, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), int16] */;
    %452 = reshape(%447, newshape=[]) /* ty=uint32 */;
    %453 = reshape(%448, newshape=[70]) /* ty=Tensor[(70), uint32] */;
    %454 = reshape(%449, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
    %455 = @func_1644(%450, %451, %452, %453, %454) /* ty=(Tensor[(16, 3, 15), bool], Tensor[(2940), float64], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(16, 3, 15), float64], Tensor[(6, 15, 14), float64]) */;
    %456 = cast(%var_3365, dtype="float64") /* ty=Tensor[(12, 8, 16), float64] */;
    %457 = sin(%456) /* ty=Tensor[(12, 8, 16), float64] */;
    %458 = cast(%var_3396, dtype="uint16") /* ty=Tensor[(12, 8, 16), uint16] */;
    %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
    %460 = cast(%457, dtype="uint16") /* ty=Tensor[(12, 8, 16), uint16] */;
    %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %462 = logical_and(%443, %444) /* ty=Tensor[(12, 8, 16), bool] */;
    %463 = %455.6;
    %464 = bitwise_and(%460, %461) /* ty=Tensor[(12, 8, 16), uint16] */;
    (%462, %463, meta[relay.Constant][25] /* ty=Tensor[(720), int16] */, meta[relay.Constant][26] /* ty=uint32 */, meta[relay.Constant][27] /* ty=Tensor[(70), uint32] */, %var_3375, %464)
  };
  %465(%var_3405, %var_3406, %var_3407, %var_3408) /* ty=(Tensor[(12, 8, 16), bool], Tensor[(6, 15, 14), float64], Tensor[(720), int16], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(12, 8, 16), uint16]) */
}

def @func_7184(%var_7161: uint32) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32) {
  %466 = @func_7079() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %467 = cast(%var_7161, dtype="uint32") /* ty=uint32 */;
  %468 = reshape(%467, newshape=[]) /* ty=uint32 */;
  %469 = @func_4068(%468) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(30, 98), uint32], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float64]) */;
  %470 = %466.0;
  %471 = %469.4;
  (%470, %471, %var_7161)
}

def @func_7486(%var_7485: Tensor[(6, 15, 14), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), uint16]) {
  %480 = fn (%var_7479: Tensor[(6, 15, 14), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), uint16]) {
    %472 = @func_7124() /* ty=Tensor[(6, 15, 14), float64] */;
    %473 = cast(%472, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %474 = cast(%var_7479, dtype="uint16") /* ty=Tensor[(6, 15, 14), uint16] */;
    %475 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%472, dtype="uint16") /* ty=Tensor[(6, 15, 14), uint16] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %478 = log2(%473) /* ty=Tensor[(6, 15, 14), float64] */;
    %479 = logical_xor(%476, %477) /* ty=Tensor[(6, 15, 14), uint16] */;
    (%478, %479)
  };
  %480(%var_7485) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), uint16]) */
}

def @func_6060() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(2, 8, 16), float64], Tensor[(256), float64]) {
  %490 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(2, 8, 16), float64], Tensor[(256), float64]) {
    %481 = @func_4619() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(4, 13, 14), float64]) */;
    %482 = @func_4334() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(270), float64]) */;
    %483 = cast(meta[relay.Constant][28] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %484 = cast(meta[relay.Constant][28] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %485 = reshape(%483, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), float64] */;
    %486 = reshape(%484, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), float64] */;
    %487 = %481.0;
    %488 = %482.0;
    %489 = @func_4635(%485, %486) /* ty=Tensor[(2, 8, 16), float64] */;
    (%487, %488, %489, meta[relay.Constant][28] /* ty=Tensor[(256), float64] */)
  };
  %490() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(2, 8, 16), float64], Tensor[(256), float64]) */
}

def @func_4817() -> (Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float32]) {
  %491 = cast(meta[relay.Constant][29] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %492 = cast(meta[relay.Constant][30] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %493 = cast(meta[relay.Constant][30] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %494 = reshape(%491, newshape=[]) /* ty=uint32 */;
  %495 = reshape(%492, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %496 = reshape(%493, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %497 = @func_2275(%494, %495, %496) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(70), uint32], Tensor[(30, 98), uint32]) */;
  %498 = @func_3178() /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) */;
  %499 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %500 = %497.1;
  %501 = %498.0;
  (%499, %500, meta[relay.Constant][29] /* ty=uint32 */, meta[relay.Constant][30] /* ty=Tensor[(2940), float64] */, %501)
}

def @func_2082() -> (Tensor[(6, 15, 14), bool],) {
  %502 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %503 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 15, 14), float64] */, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = greater(%505, %506) /* ty=Tensor[(6, 15, 14), bool] */;
  (%507,)
}

def @func_3358() -> (Tensor[(6, 15, 14), float32],) {
  %508 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %509 = %508.0;
  (%509,)
}

def @func_4777() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  @func_4775() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_2031() -> (Tensor[(6, 15, 14), float64],) {
  %511 = fn () -> (Tensor[(6, 15, 14), float64],) {
    %510 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
    (%510,)
  };
  %511() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_2128(%var_2123: Tensor[(4, 13, 14), float64]) -> Tensor[(4, 13, 14), float64] {
  %512 = cast(%var_2123, dtype="float64") /* ty=Tensor[(4, 13, 14), float64] */;
  log10(%512) /* ty=Tensor[(4, 13, 14), float64] */
}

def @func_2882() -> (Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) {
  %513 = @func_2595() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %514 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 208), float64] */, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
  %515 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 208), float64] */, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
  %516 = reshape(%514, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %517 = reshape(%515, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %518 = @func_1354(%516, %517) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
  %519 = %513.0;
  %520 = %518.7;
  (%519, %520, meta[relay.Constant][32] /* ty=Tensor[(4, 208), float64] */)
}

def @func_4900() -> Tensor[(6, 15, 14), float64] {
  %521 = fn () -> Tensor[(6, 15, 14), float64] {
    @func_2657() /* ty=Tensor[(6, 15, 14), float64] */
  };
  %521() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_5048(%var_5047: float32) -> (Tensor[(14, 12, 7), uint32], Tensor[(14, 12, 7), float64], Tensor[(6, 15, 14), bool]) {
  %536 = fn (%var_5025: float32) -> (Tensor[(14, 12, 7), uint32], Tensor[(14, 12, 7), float64], Tensor[(6, 15, 14), bool]) {
    %522 = cast(%var_5025, dtype="float32") /* ty=float32 */;
    %523 = reshape(%522, newshape=[]) /* ty=float32 */;
    %524 = @func_3094(%523) /* ty=(Tensor[(14, 12, 7), float32], Tensor[(6, 15, 14), float32], Tensor[(832), float64], Tensor[(832), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
    %525 = %524.0;
    %526 = cast(%525, dtype="uint32") /* ty=Tensor[(14, 12, 7), uint32] */;
    %527 = cast(%var_5025, dtype="uint32") /* ty=uint32 */;
    %528 = cast(%525, dtype="float64") /* ty=Tensor[(14, 12, 7), float64] */;
    %529 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
    %530 = %529.0;
    %531 = cast(%530, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
    %532 = cast(%var_5025, dtype="bool") /* ty=bool */;
    %533 = logical_xor(%526, %527) /* ty=Tensor[(14, 12, 7), uint32] */;
    %534 = asin(%528) /* ty=Tensor[(14, 12, 7), float64] */;
    %535 = equal(%531, %532) /* ty=Tensor[(6, 15, 14), bool] */;
    (%533, %534, %535)
  };
  %536(%var_5047) /* ty=(Tensor[(14, 12, 7), uint32], Tensor[(14, 12, 7), float64], Tensor[(6, 15, 14), bool]) */
}

def @func_5640() -> Tensor[(6, 15, 14), float32] {
  %537 = @func_3178() /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) */;
  %537.0
}

def @func_1468(%var_1424: Tensor[(6, 15, 14), float64], %var_1449: Tensor[(832), float64]) -> (Tensor[(9, 2, 11), bool], Tensor[(198), int16], Tensor[(6, 15, 14), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64], Tensor[(1, 2, 9), float64], Tensor[(832), float64], Tensor[(9, 2, 11), float32]) {
  %538 = cast(meta[relay.Constant][33] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %539 = cast(meta[relay.Constant][33] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %540 = reshape(%538, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %541 = reshape(%539, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %542 = @func_330(%540, %541) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
  %543 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %544 = cast(%var_1424, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%543, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %548 = cast(meta[relay.Constant][36] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %549 = reshape(%548, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float64] */;
  %550 = cast(%var_1449, dtype="float64") /* ty=Tensor[(832), float64] */;
  %551 = cast(%var_1449, dtype="float64") /* ty=Tensor[(832), float64] */;
  %552 = reshape(%550, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %553 = reshape(%551, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %554 = @func_1354(%552, %553) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
  %555 = cast(meta[relay.Constant][34] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %556 = cast(meta[relay.Constant][35] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %557 = cast(meta[relay.Constant][33] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
  %558 = reshape(%555, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
  %559 = reshape(%556, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
  %560 = reshape(%557, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
  %561 = @func_460(%558, %559, %560) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
  %562 = %561.4;
  %563 = cast(%562, dtype="float32") /* ty=Tensor[(9, 2, 11), float32] */;
  %564 = %542.1;
  %565 = logical_and(%546, %547) /* ty=Tensor[(6, 15, 14), bool] */;
  %566 = @func_1007(%549) /* ty=Tensor[(14, 14, 15), float64] */;
  %567 = %554.0;
  %568 = log2(%563) /* ty=Tensor[(9, 2, 11), float32] */;
  (%564, meta[relay.Constant][33] /* ty=Tensor[(198), int16] */, %565, meta[relay.Constant][34] /* ty=Tensor[(96), float64] */, meta[relay.Constant][35] /* ty=Tensor[(270), float64] */, %566, meta[relay.Constant][36] /* ty=Tensor[(2940), float64] */, %567, %var_1449, %568)
}

def @func_3360() -> (Tensor[(6, 15, 14), float32],) {
  @func_3358() /* ty=(Tensor[(6, 15, 14), float32],) */
}

def @func_3636() -> Tensor[(6, 15, 14), float32] {
  %570 = fn () -> Tensor[(6, 15, 14), float32] {
    %569 = @func_3358() /* ty=(Tensor[(6, 15, 14), float32],) */;
    %569.0
  };
  %570() /* ty=Tensor[(6, 15, 14), float32] */
}

def @func_8258() -> (Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64]) {
  %571 = @func_6810() /* ty=Tensor[(6, 15, 14), float64] */;
  %572 = cast(%571, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %573 = reshape(%572, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %574 = @func_2463(%573) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
  %575 = %574.1;
  (%571, %575)
}

def @func_2714() -> (Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float64]) {
  %590 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float64]) {
    %576 = cast(meta[relay.Constant][37] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
    %577 = cast(meta[relay.Constant][37] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
    %578 = reshape(%576, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
    %579 = reshape(%577, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
    %580 = @func_330(%578, %579) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
    %581 = %580.0;
    %582 = cast(meta[relay.Constant][37] /* ty=Tensor[(198), int16] */, dtype="bool") /* ty=Tensor[(198), bool] */;
    %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
    %584 = cast(%581, dtype="bool") /* ty=Tensor[(9, 2, 11), bool] */;
    %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %586 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
    %587 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
    %588 = logical_or(%584, %585) /* ty=Tensor[(9, 2, 11), bool] */;
    %589 = %586.0;
    (%587, %588, %589)
  };
  %590() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float64]) */
}

def @func_4113(%var_4072: Tensor[(5, 15, 4), float64]) -> (Tensor[(5, 15, 4), float64], Tensor[(6, 15, 14), float64]) {
  %591 = cast(%var_4072, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %592 = atan(%591) /* ty=Tensor[(5, 15, 4), float64] */;
  %593 = @func_3296() /* ty=Tensor[(6, 15, 14), float64] */;
  (%592, %593)
}

def @func_5475() -> (Tensor[(6, 15, 14), float32],) {
  %594 = @func_2954() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */;
  %595 = %594.2;
  (%595,)
}

def @func_3458() -> (Tensor[(6, 15, 14), float64], Tensor[(96), float64]) {
  %601 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(96), float64]) {
    %596 = @func_2882() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) */;
    %597 = %596.1;
    %598 = cast(%597, dtype="float64") /* ty=Tensor[(96), float64] */;
    %599 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
    %600 = erf(%598) /* ty=Tensor[(96), float64] */;
    (%599, %600)
  };
  %601() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64]) */
}

def @func_8220(%var_8219: Tensor[(300), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(5, 15, 4), float64], Tensor[(300), float64]) {
  %607 = fn (%var_8207: Tensor[(300), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(5, 15, 4), float64], Tensor[(300), float64]) {
    %602 = cast(%var_8207, dtype="float64") /* ty=Tensor[(300), float64] */;
    %603 = reshape(%602, newshape=[5, 15, 4]) /* ty=Tensor[(5, 15, 4), float64] */;
    %604 = @func_4113(%603) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(6, 15, 14), float64]) */;
    %605 = @func_6810() /* ty=Tensor[(6, 15, 14), float64] */;
    %606 = %604.0;
    (%605, %606, %var_8207)
  };
  %607(%var_8219) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(5, 15, 4), float64], Tensor[(300), float64]) */
}

def @func_3205() -> (Tensor[(6, 15, 14), float32],) {
  @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */
}

def @func_3200() -> (Tensor[(6, 15, 14), float64],) {
  @func_3198() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_2836(%var_2737: Tensor[(360, 2), int16], %var_2740: Tensor[(2940), float64], %var_2792: Tensor[(270), float64], %var_2829: Tensor[(1680), int8]) -> (Tensor[(2940), float64], Tensor[(360, 2), int16], Tensor[(70), uint32], Tensor[(2940), int16], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), uint64], Tensor[(6, 15, 14), float32], Tensor[(270), float64], Tensor[(1680), int8]) {
  %608 = cast(%var_2737, dtype="int16") /* ty=Tensor[(360, 2), int16] */;
  %609 = cast(%var_2737, dtype="int16") /* ty=Tensor[(360, 2), int16] */;
  %610 = cast(meta[relay.Constant][38] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %611 = cast(meta[relay.Constant][39] /* ty=Tensor[(70), uint32] */, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %612 = cast(%var_2740, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %613 = reshape(%608, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), int16] */;
  %614 = reshape(%609, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), int16] */;
  %615 = reshape(%610, newshape=[]) /* ty=uint32 */;
  %616 = reshape(%611, newshape=[70]) /* ty=Tensor[(70), uint32] */;
  %617 = reshape(%612, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %618 = @func_1644(%613, %614, %615, %616, %617) /* ty=(Tensor[(16, 3, 15), bool], Tensor[(2940), float64], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(16, 3, 15), float64], Tensor[(6, 15, 14), float64]) */;
  %619 = cast(%var_2740, dtype="int16") /* ty=Tensor[(2940), int16] */;
  %620 = cast(meta[relay.Constant][38] /* ty=uint32 */, dtype="int16") /* ty=int16 */;
  %621 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %622 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %623 = cast(%var_2792, dtype="float64") /* ty=Tensor[(270), float64] */;
  %624 = reshape(%623, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %625 = @func_300(%624) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %626 = %625.1;
  %627 = cast(%626, dtype="uint64") /* ty=Tensor[(1, 13, 7), uint64] */;
  %628 = cast(meta[relay.Constant][38] /* ty=uint32 */, dtype="uint64") /* ty=uint64 */;
  %629 = @func_2657() /* ty=Tensor[(6, 15, 14), float64] */;
  %630 = cast(%629, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %631 = sinh(%630) /* ty=Tensor[(6, 15, 14), float64] */;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %633 = %618.4;
  %634 = cast(%633, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %635 = cast(%var_2829, dtype="int8") /* ty=Tensor[(1680), int8] */;
  %636 = reshape(%634, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %637 = reshape(%635, newshape=[2, 840]) /* ty=Tensor[(2, 840), int8] */;
  %638 = @func_2365(%636, %637) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], Tensor[(270), float64], Tensor[(2940), float64], uint32, Tensor[(4, 13, 14), float64], Tensor[(728), float64], Tensor[(16, 15, 7), bool], Tensor[(2, 840), int8], Tensor[(1, 13, 7), uint64]) */;
  %639 = subtract(%619, %620) /* ty=Tensor[(2940), int16] */;
  %640 = @func_2657() /* ty=Tensor[(6, 15, 14), float64] */;
  %641 = %621.0;
  %642 = %622.0;
  %643 = minimum(%627, %628) /* ty=Tensor[(1, 13, 7), uint64] */;
  %644 = sigmoid(%632) /* ty=Tensor[(6, 15, 14), float32] */;
  %645 = %638.3;
  (%633, %var_2737, meta[relay.Constant][39] /* ty=Tensor[(70), uint32] */, %639, %640, %641, %var_2792, %642, %643, %644, %645, %var_2829)
}

def @func_5218() -> Tensor[(6, 15, 14), float64] {
  %647 = fn () -> Tensor[(6, 15, 14), float64] {
    %646 = @func_2595() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %646.0
  };
  %647() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_5569(%var_5562: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), bool], Tensor[(3, 10, 9), float64], Tensor[(2940), uint64]) {
  %648 = @func_2082() /* ty=(Tensor[(6, 15, 14), bool],) */;
  %649 = cast(meta[relay.Constant][40] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %650 = reshape(%649, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %651 = @func_2418(%650) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(3, 10, 9), float64], Tensor[(832), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %652 = cast(%var_5562, dtype="uint64") /* ty=Tensor[(2940), uint64] */;
  %653 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(2940), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %654 = cast(meta[relay.Constant][40] /* ty=Tensor[(2940), float64] */, dtype="uint64") /* ty=Tensor[(2940), uint64] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %656 = %648.0;
  %657 = %651.1;
  %658 = right_shift(%654, %655) /* ty=Tensor[(2940), uint64] */;
  (%656, %657, %658)
}

def @func_5572(%var_5570: Tensor[(2940), float64]) -> (Tensor[(6, 15, 14), bool], Tensor[(3, 10, 9), float64], Tensor[(2940), uint64]) {
  @func_5569(%var_5570) /* ty=(Tensor[(6, 15, 14), bool], Tensor[(3, 10, 9), float64], Tensor[(2940), uint64]) */
}

def @main(%var_8369: Tensor[(11, 1, 15), float32], %var_8370: Tensor[(11, 6, 15), float32]) -> (Tensor[(11, 6, 15), bool],) {
  %659 = cast(%var_8369, dtype="bool") /* ty=Tensor[(11, 1, 15), bool] */;
  %660 = cast(%var_8370, dtype="bool") /* ty=Tensor[(11, 6, 15), bool] */;
  %661 = equal(%659, %660) /* ty=Tensor[(11, 6, 15), bool] */;
  (%661,)
}

def @func_2954() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) {
  %662 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %663 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %664 = @func_2202() /* ty=Tensor[(6, 15, 14), float64] */;
  %665 = %662.0;
  %666 = %663.0;
  (%664, %665, %666)
}

def @func_7790() -> Tensor[(6, 15, 14), float64] {
  %668 = fn () -> Tensor[(6, 15, 14), float64] {
    %667 = @func_3921() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
    %667.3
  };
  %668() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_3178() -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) {
  %669 = @func_2954() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */;
  %670 = %669.2;
  %671 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
  (%670, %671)
}

def @func_3235() -> Tensor[(6, 15, 14), float64] {
  %673 = fn () -> Tensor[(6, 15, 14), float64] {
    %672 = @func_2595() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %672.0
  };
  %673() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_7755() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) {
  %674 = @func_2391() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %675 = @func_7124() /* ty=Tensor[(6, 15, 14), float64] */;
  %676 = %674.0;
  (%675, %676)
}

def @func_7828(%var_7814: Tensor[(3, 6), int8]) -> (Tensor[(6, 15, 14), float32], Tensor[(18), int8], Tensor[(3, 6), int8], Tensor[(6, 15, 14), float64]) {
  %677 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %678 = cast(%var_7814, dtype="int8") /* ty=Tensor[(3, 6), int8] */;
  %679 = reshape(%678, newshape=[18]) /* ty=Tensor[(18), int8] */;
  %680 = @func_5084(%679) /* ty=(Tensor[(96), float64], Tensor[(1, 2, 9), bool], int8, Tensor[(18), int8], Tensor[(6, 15, 14), float64]) */;
  %681 = @func_4775() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %682 = %677.0;
  %683 = %680.3;
  %684 = %681.0;
  (%682, %683, %var_7814, %684)
}

def @func_5845(%var_5822: Tensor[(1120), int32]) -> (Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) {
  %685 = cast(%var_5822, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %686 = cast(%var_5822, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %687 = reshape(%685, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), int32] */;
  %688 = reshape(%686, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), int32] */;
  %689 = @func_4352(%687, %688) /* ty=(Tensor[(16, 10, 7), int32], Tensor[(16, 10, 7), float32], Tensor[(16, 10, 7), bool]) */;
  %690 = @func_5475() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %691 = %690.0;
  %692 = cast(%691, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %693 = %689.1;
  %694 = atan(%692) /* ty=Tensor[(6, 15, 14), float32] */;
  (%693, %var_5822, %694)
}

def @func_4565() -> (Tensor[(4, 208), float64],) {
  @func_4563() /* ty=(Tensor[(4, 208), float64],) */
}

def @func_2465(%var_2464: Tensor[(6, 15, 14), float32]) -> (Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) {
  %706 = fn (%var_2450: Tensor[(6, 15, 14), float32]) -> (Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) {
    %695 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
    %696 = cast(%695, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
    %697 = acosh(%696) /* ty=Tensor[(6, 15, 14), float32] */;
    %698 = cast(%var_2450, dtype="uint32") /* ty=Tensor[(6, 15, 14), uint32] */;
    %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
    %700 = cast(%697, dtype="uint32") /* ty=Tensor[(6, 15, 14), uint32] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %702 = cast(meta[relay.Constant][41] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
    %703 = reshape(%702, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float64] */;
    %704 = maximum(%700, %701) /* ty=Tensor[(6, 15, 14), uint32] */;
    %705 = @func_2128(%703) /* ty=Tensor[(4, 13, 14), float64] */;
    (%704, %705, meta[relay.Constant][41] /* ty=Tensor[(728), float64] */)
  };
  %706(%var_2464) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */
}

def @func_5890() -> (Tensor[(6, 15, 14), float64],) {
  @func_5888() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_1357(%var_1355: Tensor[(13, 4, 16), float64], %var_1356: Tensor[(13, 4, 16), float64]) -> (Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) {
  %744 = fn (%var_1304: Tensor[(13, 4, 16), float64], %var_1326: Tensor[(13, 4, 16), float64]) -> (Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) {
    %707 = cast(meta[relay.Constant][42] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %708 = cast(meta[relay.Constant][43] /* ty=Tensor[(18), int8] */, dtype="int8") /* ty=Tensor[(18), int8] */;
    %709 = reshape(%707, newshape=[]) /* ty=int8 */;
    %710 = reshape(%708, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int8] */;
    %711 = @func_1193(%709, %710) /* ty=(Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) */;
    %712 = cast(%var_1304, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
    %713 = log2(%712) /* ty=Tensor[(13, 4, 16), float64] */;
    %714 = cast(meta[relay.Constant][44] /* ty=Tensor[(13, 4, 16), float64] */, dtype="int8") /* ty=Tensor[(13, 4, 16), int8] */;
    %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(3), int32] */;
    %716 = cast(%713, dtype="int8") /* ty=Tensor[(13, 4, 16), int8] */;
    %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %718 = right_shift(%716, %717) /* ty=Tensor[(13, 4, 16), int8] */;
    %719 = cast(%718, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
    %720 = shape_of(%713, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(%713, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %723 = cast(meta[relay.Constant][45] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %724 = reshape(%723, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
    %725 = @func_300(%724) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
    %726 = cast(meta[relay.Constant][46] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %727 = cast(meta[relay.Constant][45] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %728 = cast(meta[relay.Constant][47] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
    %729 = reshape(%726, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
    %730 = reshape(%727, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
    %731 = reshape(%728, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
    %732 = @func_460(%729, %730, %731) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
    %733 = cast(%var_1326, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
    %734 = shape_of(%var_1304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(%var_1304, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %737 = greater_equal(%735, %736) /* ty=Tensor[(13, 4, 16), bool] */;
    %738 = cast(%737, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
    %739 = %711.1;
    %740 = greater(%721, %722) /* ty=Tensor[(13, 4, 16), bool] */;
    %741 = %725.0;
    %742 = %732.2;
    %743 = asinh(%738) /* ty=Tensor[(13, 4, 16), float64] */;
    (%739, meta[relay.Constant][42] /* ty=int8 */, meta[relay.Constant][43] /* ty=Tensor[(18), int8] */, %740, %741, meta[relay.Constant][45] /* ty=Tensor[(270), float64] */, %742, meta[relay.Constant][46] /* ty=Tensor[(96), float64] */, meta[relay.Constant][47] /* ty=Tensor[(198), int16] */, %743)
  };
  %744(%var_1355, %var_1356) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */
}

def @func_7187(%var_7185: uint32) -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32) {
  @func_7184(%var_7185) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], uint32) */
}

def @func_78(%var_77: uint32) -> (Tensor[(1, 13, 7), bool],) {
  %748 = fn (%var_67: uint32) -> (Tensor[(1, 13, 7), bool],) {
    %745 = cast(%var_67, dtype="bool") /* ty=bool */;
    %746 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 13, 7), uint32] */, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
    %747 = not_equal(%745, %746) /* ty=Tensor[(1, 13, 7), bool] */;
    (%747,)
  };
  %748(%var_77) /* ty=(Tensor[(1, 13, 7), bool],) */
}

def @func_3022(%var_2970: Tensor[(6, 15, 14), float32], %var_2992: Tensor[(270), float64]) -> (Tensor[(6, 15, 14), bool], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1, 2, 9), float64], int8, Tensor[(1, 18), int8]) {
  %749 = @func_2082() /* ty=(Tensor[(6, 15, 14), bool],) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %752 = exp(%751) /* ty=Tensor[(6, 15, 14), float32] */;
  %753 = cast(%var_2970, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %754 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%752, dtype="bool") /* ty=Tensor[(6, 15, 14), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %757 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %758 = cast(%var_2992, dtype="float64") /* ty=Tensor[(270), float64] */;
  %759 = reshape(%758, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %760 = @func_300(%759) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %761 = cast(%752, dtype="uint8") /* ty=Tensor[(6, 15, 14), uint8] */;
  %762 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%750, dtype="uint8") /* ty=Tensor[(6, 15, 14), uint8] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %765 = right_shift(%763, %764) /* ty=Tensor[(6, 15, 14), uint8] */;
  %766 = cast(%765, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %767 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%752, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %770 = @func_2954() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */;
  %771 = cast(meta[relay.Constant][49] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %772 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 18), int8] */, dtype="int8") /* ty=Tensor[(1, 18), int8] */;
  %773 = reshape(%771, newshape=[]) /* ty=int8 */;
  %774 = reshape(%772, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int8] */;
  %775 = @func_1193(%773, %774) /* ty=(Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) */;
  %776 = greater_equal(%755, %756) /* ty=Tensor[(6, 15, 14), bool] */;
  %777 = %757.0;
  %778 = %760.1;
  %779 = power(%768, %769) /* ty=Tensor[(6, 15, 14), float32] */;
  %780 = %770.2;
  %781 = %775.1;
  (%776, %777, %778, %var_2992, %779, %780, %781, meta[relay.Constant][49] /* ty=int8 */, meta[relay.Constant][50] /* ty=Tensor[(1, 18), int8] */)
}

def @func_7845(%var_7843: int16, %var_7844: Tensor[(5, 16, 2), int16]) -> Tensor[(5, 16, 2), int16] {
  @func_7841(%var_7843, %var_7844) /* ty=Tensor[(5, 16, 2), int16] */
}

def @func_1644(%var_1601: Tensor[(16, 3, 15), int16], %var_1602: Tensor[(16, 3, 15), int16], %var_1607: uint32, %var_1608: Tensor[(70), uint32], %var_1609: Tensor[(2940), float64]) -> (Tensor[(16, 3, 15), bool], Tensor[(2940), float64], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(16, 3, 15), float64], Tensor[(6, 15, 14), float64]) {
  %782 = cast(%var_1602, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
  %783 = shape_of(%var_1601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%var_1601, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %786 = cast(%var_1607, dtype="uint32") /* ty=uint32 */;
  %787 = cast(%var_1608, dtype="uint32") /* ty=Tensor[(70), uint32] */;
  %788 = cast(%var_1609, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %789 = reshape(%786, newshape=[]) /* ty=uint32 */;
  %790 = reshape(%787, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), uint32] */;
  %791 = reshape(%788, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %792 = @func_1048(%789, %790, %791) /* ty=(Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) */;
  %793 = cast(%var_1602, dtype="float64") /* ty=Tensor[(16, 3, 15), float64] */;
  %794 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %795 = greater_equal(%784, %785) /* ty=Tensor[(16, 3, 15), bool] */;
  %796 = %792.2;
  %797 = sinh(%793) /* ty=Tensor[(16, 3, 15), float64] */;
  %798 = %794.0;
  (%795, %796, %var_1607, %var_1608, %var_1609, %797, %798)
}

def @func_3530() -> (Tensor[(6, 15, 14), float64],) {
  %799 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
  %800 = %799.0;
  (%800,)
}

def @func_4850() -> (Tensor[(6, 15, 14), float64],) {
  @func_4848() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_3532() -> (Tensor[(6, 15, 14), float64],) {
  @func_3530() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_302(%var_301: Tensor[(3, 10, 9), float64]) -> (Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) {
  %810 = fn (%var_280: Tensor[(3, 10, 9), float64]) -> (Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) {
    %801 = cast(-4.14094f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %802 = cast(%var_280, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
    %803 = cast(-4.14094f64 /* ty=float64 */, dtype="uint32") /* ty=uint32 */;
    %804 = reshape(%803, newshape=[]) /* ty=uint32 */;
    %805 = @func_76(%804) /* ty=(Tensor[(1, 13, 7), bool],) */;
    %806 = %805.0;
    %807 = cast(%806, dtype="float64") /* ty=Tensor[(1, 13, 7), float64] */;
    %808 = floor_mod(%801, %802) /* ty=Tensor[(3, 10, 9), float64] */;
    %809 = atanh(%807) /* ty=Tensor[(1, 13, 7), float64] */;
    (%808, %809)
  };
  %810(%var_301) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */
}

def @func_1406() -> Tensor[(6, 15, 14), float64] {
  %817 = fn () -> Tensor[(6, 15, 14), float64] {
    %811 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %812 = asin(%811) /* ty=Tensor[(6, 15, 14), float64] */;
    %813 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
    %815 = cast(%812, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%815, %816) /* ty=Tensor[(6, 15, 14), float64] */
  };
  %817() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_1048(%var_1031: uint32, %var_1032: Tensor[(1, 10, 7), uint32], %var_1041: Tensor[(2940), float64]) -> (Tensor[(1, 10, 7), uint32], Tensor[(14, 14, 15), float64], Tensor[(2940), float64]) {
  %818 = cast(%var_1031, dtype="uint32") /* ty=uint32 */;
  %819 = cast(%var_1032, dtype="uint32") /* ty=Tensor[(1, 10, 7), uint32] */;
  %820 = cast(%var_1041, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %821 = reshape(%820, newshape=[14, 14, 15]) /* ty=Tensor[(14, 14, 15), float64] */;
  %822 = maximum(%818, %819) /* ty=Tensor[(1, 10, 7), uint32] */;
  %823 = @func_1007(%821) /* ty=Tensor[(14, 14, 15), float64] */;
  (%822, %823, %var_1041)
}

def @func_2485() -> (Tensor[(6, 15, 14), float64],) {
  %825 = fn () -> (Tensor[(6, 15, 14), float64],) {
    %824 = @func_2202() /* ty=Tensor[(6, 15, 14), float64] */;
    (%824,)
  };
  %825() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_4684() -> (Tensor[(96), float64],) {
  %828 = fn () -> (Tensor[(96), float64],) {
    %826 = @func_2882() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) */;
    %827 = %826.1;
    (%827,)
  };
  %828() /* ty=(Tensor[(96), float64],) */
}

def @func_3499(%var_3497: Tensor[(4, 3, 11), bool], %var_3498: Tensor[(4, 3, 11), bool]) -> (Tensor[(4, 3, 11), bool],) {
  @func_3495(%var_3497, %var_3498) /* ty=(Tensor[(4, 3, 11), bool],) */
}

def @func_5510(%var_5503: float32) -> Tensor[(1, 11), float32] {
  %829 = cast(%var_5503, dtype="float32") /* ty=float32 */;
  %830 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 11), float32] */, dtype="float32") /* ty=Tensor[(1, 11), float32] */;
  floor_divide(%829, %830) /* ty=Tensor[(1, 11), float32] */
}

def @func_6272() -> (Tensor[(6, 15, 14), float64],) {
  %833 = fn () -> (Tensor[(6, 15, 14), float64],) {
    %831 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %832 = %831.0;
    (%832,)
  };
  %833() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_7339() -> (Tensor[(6, 15, 14), float64],) {
  %834 = @func_7079() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %835 = %834.0;
  (%835,)
}

def @func_6511(%var_6510: Tensor[(4, 384), bool]) -> (Tensor[(6, 15, 14), float64], Tensor[(720), int16], Tensor[(4, 384), bool], Tensor[(210, 14), float64], Tensor[(6, 15, 14), float64]) {
  %850 = fn (%var_6504: Tensor[(4, 384), bool]) -> (Tensor[(6, 15, 14), float64], Tensor[(720), int16], Tensor[(4, 384), bool], Tensor[(210, 14), float64], Tensor[(6, 15, 14), float64]) {
    %836 = @func_2713() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float64]) */;
    %837 = cast(%var_6504, dtype="bool") /* ty=Tensor[(4, 384), bool] */;
    %838 = cast(%var_6504, dtype="bool") /* ty=Tensor[(4, 384), bool] */;
    %839 = cast(meta[relay.Constant][53] /* ty=Tensor[(210, 14), float64] */, dtype="float64") /* ty=Tensor[(210, 14), float64] */;
    %840 = cast(%var_6504, dtype="float64") /* ty=Tensor[(4, 384), float64] */;
    %841 = reshape(%837, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), bool] */;
    %842 = reshape(%838, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), bool] */;
    %843 = reshape(%839, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
    %844 = reshape(%840, newshape=[12, 8, 16]) /* ty=Tensor[(12, 8, 16), float64] */;
    %845 = @func_3404(%841, %842, %843, %844) /* ty=(Tensor[(12, 8, 16), bool], Tensor[(6, 15, 14), float64], Tensor[(720), int16], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(12, 8, 16), uint16]) */;
    %846 = @func_6271() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %847 = %836.2;
    %848 = %845.2;
    %849 = %846.0;
    (%847, %848, %var_6504, meta[relay.Constant][53] /* ty=Tensor[(210, 14), float64] */, %849)
  };
  %850(%var_6510) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(720), int16], Tensor[(4, 384), bool], Tensor[(210, 14), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_5477() -> (Tensor[(6, 15, 14), float32],) {
  @func_5475() /* ty=(Tensor[(6, 15, 14), float32],) */
}

def @func_5848(%var_5846: Tensor[(1120), int32]) -> (Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) {
  @func_5845(%var_5846) /* ty=(Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) */
}

def @func_7125() -> Tensor[(6, 15, 14), float64] {
  %852 = fn () -> Tensor[(6, 15, 14), float64] {
    %851 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %851.0
  };
  %852() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_8105() -> (Tensor[(6, 15, 14), float32],) {
  @func_8103() /* ty=(Tensor[(6, 15, 14), float32],) */
}

def @func_8103() -> (Tensor[(6, 15, 14), float32],) {
  %853 = @func_6810() /* ty=Tensor[(6, 15, 14), float64] */;
  %854 = cast(%853, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %855 = log10(%854) /* ty=Tensor[(6, 15, 14), float32] */;
  (%855,)
}

def @func_8260() -> (Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64]) {
  @func_8258() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(4, 13, 14), float64]) */
}

def @func_2391() -> (Tensor[(6, 15, 14), float64],) {
  %856 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %857 = %856.0;
  (%857,)
}

def @func_6810() -> Tensor[(6, 15, 14), float64] {
  %858 = @func_4775() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64]) */;
  %858.1
}

def @func_4482() -> (Tensor[(6, 15, 14), float64],) {
  @func_4480() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_8075(%var_8066: Tensor[(3, 90), float64], %var_8067: Tensor[(1120, 1), int32]) -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1120, 1), int32], Tensor[(3, 90), float64]) {
  %859 = @func_4204() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %860 = cast(%var_8066, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
  %861 = cast(%var_8067, dtype="int32") /* ty=Tensor[(1120, 1), int32] */;
  %862 = reshape(%860, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %863 = reshape(%861, newshape=[1120]) /* ty=Tensor[(1120), int32] */;
  %864 = @func_6784(%862, %863) /* ty=(Tensor[(96), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(16, 10, 7), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float32]) */;
  %865 = cast(meta[relay.Constant][54] /* ty=Tensor[(3, 90), float64] */, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
  %866 = shape_of(%var_8066, dtype="int32") /* ty=Tensor[(2), int32] */;
  %867 = cast(%var_8066, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %869 = %859.0;
  %870 = %864.5;
  %871 = multiply(%867, %868) /* ty=Tensor[(3, 90), float64] */;
  (%869, %870, %var_8067, %871)
}

def @func_2659() -> Tensor[(6, 15, 14), float64] {
  @func_2657() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_6231(%var_6228: Tensor[(1, 96), float64], %var_6229: Tensor[(33, 6), int16], %var_6230: Tensor[(1120), int32]) -> (Tensor[(132), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 96), float64], Tensor[(33, 6), int16], Tensor[(6, 15, 14), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float64]) {
  @func_6226(%var_6228, %var_6229, %var_6230) /* ty=(Tensor[(132), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 96), float64], Tensor[(33, 6), int16], Tensor[(6, 15, 14), float32], Tensor[(1120), int32], Tensor[(6, 15, 14), float64]) */
}

def @func_5245(%var_5228: Tensor[(12, 6), float64]) -> (Tensor[(12, 6), float64], Tensor[(6, 15, 14), float32]) {
  %872 = cast(%var_5228, dtype="float64") /* ty=Tensor[(12, 6), float64] */;
  %873 = tan(%872) /* ty=Tensor[(12, 6), float64] */;
  %874 = @func_4424() /* ty=Tensor[(6, 15, 14), float32] */;
  (%873, %874)
}

def @func_5513(%var_5511: float32) -> Tensor[(1, 11), float32] {
  @func_5510(%var_5511) /* ty=Tensor[(1, 11), float32] */
}

def @func_3812() -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) {
  %880 = fn () -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) {
    %875 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %876 = @func_2558() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */;
    %877 = @func_3635() /* ty=Tensor[(6, 15, 14), float32] */;
    %878 = %875.0;
    %879 = %876.2;
    (%877, %878, %879)
  };
  %880() /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), bool]) */
}

def @func_333(%var_331: Tensor[(9, 2, 11), int16], %var_332: Tensor[(9, 2, 11), int16]) -> (Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) {
  %891 = fn (%var_304: Tensor[(9, 2, 11), int16], %var_305: Tensor[(9, 2, 11), int16]) -> (Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) {
    %881 = cast(%var_305, dtype="int16") /* ty=Tensor[(9, 2, 11), int16] */;
    %882 = shape_of(%var_304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %883 = cast(%var_304, dtype="int16") /* ty=Tensor[(9, 2, 11), int16] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %885 = cast(%var_305, dtype="bool") /* ty=Tensor[(9, 2, 11), bool] */;
    %886 = shape_of(%var_304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %887 = cast(%var_304, dtype="bool") /* ty=Tensor[(9, 2, 11), bool] */;
    %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %889 = bitwise_xor(%883, %884) /* ty=Tensor[(9, 2, 11), int16] */;
    %890 = less_equal(%887, %888) /* ty=Tensor[(9, 2, 11), bool] */;
    (%889, %890)
  };
  %891(%var_331, %var_332) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */
}

def @func_3225() -> (Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), int16], Tensor[(1, 96), float64], Tensor[(270), float64], Tensor[(198), int16]) {
  %901 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), int16], Tensor[(1, 96), float64], Tensor[(270), float64], Tensor[(198), int16]) {
    %892 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 96), float64] */, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
    %893 = cast(meta[relay.Constant][56] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %894 = cast(meta[relay.Constant][57] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
    %895 = reshape(%892, newshape=[16, 6]) /* ty=Tensor[(16, 6), float64] */;
    %896 = reshape(%893, newshape=[1, 270]) /* ty=Tensor[(1, 270), float64] */;
    %897 = reshape(%894, newshape=[33, 6]) /* ty=Tensor[(33, 6), int16] */;
    %898 = @func_460(%895, %896, %897) /* ty=(Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) */;
    %899 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
    %900 = %898.4;
    (%899, %900, meta[relay.Constant][55] /* ty=Tensor[(1, 96), float64] */, meta[relay.Constant][56] /* ty=Tensor[(270), float64] */, meta[relay.Constant][57] /* ty=Tensor[(198), int16] */)
  };
  %901() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), int16], Tensor[(1, 96), float64], Tensor[(270), float64], Tensor[(198), int16]) */
}

def @func_6333() -> Tensor[(6, 15, 14), float32] {
  @func_6331() /* ty=Tensor[(6, 15, 14), float32] */
}

def @func_1968() -> (Tensor[(6, 15, 14), float64],) {
  %903 = fn () -> (Tensor[(6, 15, 14), float64],) {
    %902 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
    (%902,)
  };
  %903() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_3198() -> (Tensor[(6, 15, 14), float64],) {
  %904 = @func_3178() /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) */;
  %905 = %904.1;
  (%905,)
}

def @func_2956() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) {
  @func_2954() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */
}

def @func_2842(%var_2838: Tensor[(360, 2), int16], %var_2839: Tensor[(2940), float64], %var_2840: Tensor[(270), float64], %var_2841: Tensor[(1680), int8]) -> (Tensor[(2940), float64], Tensor[(360, 2), int16], Tensor[(70), uint32], Tensor[(2940), int16], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), uint64], Tensor[(6, 15, 14), float32], Tensor[(270), float64], Tensor[(1680), int8]) {
  @func_2836(%var_2838, %var_2839, %var_2840, %var_2841) /* ty=(Tensor[(2940), float64], Tensor[(360, 2), int16], Tensor[(70), uint32], Tensor[(2940), int16], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), uint64], Tensor[(6, 15, 14), float32], Tensor[(270), float64], Tensor[(1680), int8]) */
}

def @func_2884() -> (Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) {
  @func_2882() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) */
}

def @func_4356(%var_4354: Tensor[(16, 10, 7), int32], %var_4355: Tensor[(16, 10, 7), int32]) -> (Tensor[(16, 10, 7), int32], Tensor[(16, 10, 7), float32], Tensor[(16, 10, 7), bool]) {
  @func_4352(%var_4354, %var_4355) /* ty=(Tensor[(16, 10, 7), int32], Tensor[(16, 10, 7), float32], Tensor[(16, 10, 7), bool]) */
}

def @func_4620() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(4, 13, 14), float64]) {
  %918 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(4, 13, 14), float64]) {
    %906 = @func_3457() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64]) */;
    %907 = @func_2657() /* ty=Tensor[(6, 15, 14), float64] */;
    %908 = cast(%907, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
    %909 = reshape(%908, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
    %910 = @func_1805(%909) /* ty=Tensor[(6, 15, 14), float64] */;
    %911 = cast(%910, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
    %912 = cast(%907, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
    %913 = reshape(%912, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
    %914 = @func_2463(%913) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
    %915 = %906.0;
    %916 = asinh(%911) /* ty=Tensor[(6, 15, 14), float32] */;
    %917 = %914.1;
    (%907, %915, %916, %917)
  };
  %918() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(4, 13, 14), float64]) */
}

def @func_1158(%var_1156: Tensor[(16, 15, 7), int8], %var_1157: Tensor[(16, 15, 7), int8]) -> (Tensor[(16, 15, 7), bool], Tensor[(198), int16], Tensor[(9, 2, 11), float32]) {
  %932 = fn (%var_1139: Tensor[(16, 15, 7), int8], %var_1140: Tensor[(16, 15, 7), int8]) -> (Tensor[(16, 15, 7), bool], Tensor[(198), int16], Tensor[(9, 2, 11), float32]) {
    %919 = cast(%var_1140, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
    %920 = shape_of(%var_1139, dtype="int32") /* ty=Tensor[(3), int32] */;
    %921 = cast(%var_1139, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
    %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %923 = cast(meta[relay.Constant][58] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
    %924 = cast(meta[relay.Constant][58] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
    %925 = reshape(%923, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
    %926 = reshape(%924, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
    %927 = @func_330(%925, %926) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
    %928 = %927.1;
    %929 = cast(%928, dtype="float32") /* ty=Tensor[(9, 2, 11), float32] */;
    %930 = greater(%921, %922) /* ty=Tensor[(16, 15, 7), bool] */;
    %931 = cosh(%929) /* ty=Tensor[(9, 2, 11), float32] */;
    (%930, meta[relay.Constant][58] /* ty=Tensor[(198), int16] */, %931)
  };
  %932(%var_1156, %var_1157) /* ty=(Tensor[(16, 15, 7), bool], Tensor[(198), int16], Tensor[(9, 2, 11), float32]) */
}

def @func_1196(%var_1194: int8, %var_1195: Tensor[(1, 2, 9), int8]) -> (Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) {
  %938 = fn (%var_1183: int8, %var_1184: Tensor[(1, 2, 9), int8]) -> (Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) {
    %933 = cast(%var_1183, dtype="bool") /* ty=bool */;
    %934 = cast(%var_1184, dtype="bool") /* ty=Tensor[(1, 2, 9), bool] */;
    %935 = cast(%var_1184, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
    %936 = greater(%933, %934) /* ty=Tensor[(1, 2, 9), bool] */;
    %937 = cos(%935) /* ty=Tensor[(1, 2, 9), float64] */;
    (%936, %937)
  };
  %938(%var_1194, %var_1195) /* ty=(Tensor[(1, 2, 9), bool], Tensor[(1, 2, 9), float64]) */
}

def @func_8079(%var_8077: Tensor[(3, 90), float64], %var_8078: Tensor[(1120, 1), int32]) -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1120, 1), int32], Tensor[(3, 90), float64]) {
  @func_8075(%var_8077, %var_8078) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1120, 1), int32], Tensor[(3, 90), float64]) */
}

def @func_1767(%var_1737: Tensor[(832), float64]) -> (Tensor[(6, 15, 14), float64], int8, Tensor[(832), float64], Tensor[(832), float64]) {
  %939 = cast(%var_1737, dtype="float64") /* ty=Tensor[(832), float64] */;
  %940 = cast(%var_1737, dtype="float64") /* ty=Tensor[(832), float64] */;
  %941 = reshape(%939, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %942 = reshape(%940, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), float64] */;
  %943 = @func_1354(%941, %942) /* ty=(Tensor[(1, 2, 9), float64], int8, Tensor[(18), int8], Tensor[(13, 4, 16), bool], Tensor[(3, 10, 9), float64], Tensor[(270), float64], Tensor[(1, 13, 7), bool], Tensor[(96), float64], Tensor[(198), int16], Tensor[(13, 4, 16), float64]) */;
  %944 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
  %945 = cast(%944, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  %946 = cast(%var_1737, dtype="float64") /* ty=Tensor[(832), float64] */;
  %947 = reshape(%945, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float64] */;
  %948 = reshape(%946, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %949 = @func_1468(%947, %948) /* ty=(Tensor[(9, 2, 11), bool], Tensor[(198), int16], Tensor[(6, 15, 14), bool], Tensor[(96), float64], Tensor[(270), float64], Tensor[(14, 14, 15), float64], Tensor[(2940), float64], Tensor[(1, 2, 9), float64], Tensor[(832), float64], Tensor[(9, 2, 11), float32]) */;
  %950 = %949.8;
  %951 = cast(meta[relay.Constant][59] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %952 = shape_of(%950, dtype="int32") /* ty=Tensor[(1), int32] */;
  %953 = cast(%950, dtype="float64") /* ty=Tensor[(832), float64] */;
  %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?), float64] */;
  %955 = %943.1;
  %956 = floor_mod(%953, %954) /* ty=Tensor[(832), float64] */;
  (%944, %955, %var_1737, %956)
}

def @func_1495() -> Tensor[(6, 15, 14), float64] {
  %958 = fn () -> Tensor[(6, 15, 14), float64] {
    %957 = @func_1479() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %957.0
  };
  %958() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_3608(%var_3606: Tensor[(270), float64], %var_3607: Tensor[(198), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(198), bool], Tensor[(198), bool]) {
  %986 = fn (%var_3579: Tensor[(270), float64], %var_3589: Tensor[(198), float64]) -> (Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(198), bool], Tensor[(198), bool]) {
    %959 = cast(meta[relay.Constant][60] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
    %960 = cast(meta[relay.Constant][60] /* ty=Tensor[(198), int16] */, dtype="int16") /* ty=Tensor[(198), int16] */;
    %961 = reshape(%959, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
    %962 = reshape(%960, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
    %963 = @func_330(%961, %962) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
    %964 = @func_3203() /* ty=(Tensor[(6, 15, 14), float32],) */;
    %965 = cast(%var_3579, dtype="float64") /* ty=Tensor[(270), float64] */;
    %966 = reshape(%965, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
    %967 = @func_300(%966) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
    %968 = cast(meta[relay.Constant][60] /* ty=Tensor[(198), int16] */, dtype="float64") /* ty=Tensor[(198), float64] */;
    %969 = sin(%968) /* ty=Tensor[(198), float64] */;
    %970 = cast(%var_3589, dtype="bool") /* ty=Tensor[(198), bool] */;
    %971 = shape_of(%969, dtype="int32") /* ty=Tensor[(1), int32] */;
    %972 = cast(%969, dtype="bool") /* ty=Tensor[(198), bool] */;
    %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?), bool] */;
    %974 = cast(%969, dtype="float32") /* ty=Tensor[(198), float32] */;
    %975 = log10(%974) /* ty=Tensor[(198), float32] */;
    %976 = cast(%969, dtype="bool") /* ty=Tensor[(198), bool] */;
    %977 = shape_of(%975, dtype="int32") /* ty=Tensor[(1), int32] */;
    %978 = cast(%975, dtype="bool") /* ty=Tensor[(198), bool] */;
    %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?), bool] */;
    %980 = @func_3234() /* ty=Tensor[(6, 15, 14), float64] */;
    %981 = %963.1;
    %982 = %964.0;
    %983 = %967.1;
    %984 = equal(%972, %973) /* ty=Tensor[(198), bool] */;
    %985 = greater(%978, %979) /* ty=Tensor[(198), bool] */;
    (%980, %981, %982, %983, %var_3579, %984, %985)
  };
  %986(%var_3606, %var_3607) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float32], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(198), bool], Tensor[(198), bool]) */
}

def @func_6473() -> Tensor[(14, 14, 15), float64] {
  %988 = fn () -> Tensor[(14, 14, 15), float64] {
    %987 = @func_4817() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(14, 14, 15), float64], uint32, Tensor[(2940), float64], Tensor[(6, 15, 14), float32]) */;
    %987.1
  };
  %988() /* ty=Tensor[(14, 14, 15), float64] */
}

def @func_8153() -> Tensor[(6, 15, 14), float64] {
  %990 = fn () -> Tensor[(6, 15, 14), float64] {
    %989 = @func_2030() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %989.0
  };
  %990() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_7414() -> Tensor[(4, 208), float64] {
  @func_7412() /* ty=Tensor[(4, 208), float64] */
}

def @func_1770(%var_1768: Tensor[(832), float64]) -> (Tensor[(6, 15, 14), float64], int8, Tensor[(832), float64], Tensor[(832), float64]) {
  @func_1767(%var_1768) /* ty=(Tensor[(6, 15, 14), float64], int8, Tensor[(832), float64], Tensor[(832), float64]) */
}

def @func_460(%var_383: Tensor[(16, 6), float64], %var_388: Tensor[(1, 270), float64], %var_409: Tensor[(33, 6), int16]) -> (Tensor[(16, 6), float64], Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), bool], Tensor[(1, 270), float32], Tensor[(9, 2, 11), int16], Tensor[(33, 6), int16]) {
  %991 = cast(%var_383, dtype="float64") /* ty=Tensor[(16, 6), float64] */;
  %992 = cast(%var_388, dtype="float64") /* ty=Tensor[(1, 270), float64] */;
  %993 = reshape(%992, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %994 = @func_300(%993) /* ty=(Tensor[(3, 10, 9), float64], Tensor[(1, 13, 7), float64]) */;
  %995 = cast(meta[relay.Constant][61] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %996 = reshape(%995, newshape=[]) /* ty=uint32 */;
  %997 = @func_76(%996) /* ty=(Tensor[(1, 13, 7), bool],) */;
  %998 = cast(%var_388, dtype="float32") /* ty=Tensor[(1, 270), float32] */;
  %999 = cast(meta[relay.Constant][61] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
  %1000 = cast(%var_409, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
  %1001 = cast(%var_409, dtype="int16") /* ty=Tensor[(33, 6), int16] */;
  %1002 = reshape(%1000, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %1003 = reshape(%1001, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), int16] */;
  %1004 = @func_330(%1002, %1003) /* ty=(Tensor[(9, 2, 11), int16], Tensor[(9, 2, 11), bool]) */;
  %1005 = sin(%991) /* ty=Tensor[(16, 6), float64] */;
  %1006 = %994.0;
  %1007 = %997.0;
  %1008 = subtract(%998, %999) /* ty=Tensor[(1, 270), float32] */;
  %1009 = %1004.0;
  (%1005, %1006, %1007, %1008, %1009, %var_409)
}

def @func_4041(%var_4023: Tensor[(270), float64]) -> (Tensor[(6, 15, 14), float32], Tensor[(728), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(270), float64]) {
  %1010 = @func_3635() /* ty=Tensor[(6, 15, 14), float32] */;
  %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %1012 = cast(%1010, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %1013 = reshape(%1012, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %1014 = @func_2463(%1013) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
  %1015 = @func_2713() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(9, 2, 11), bool], Tensor[(6, 15, 14), float64]) */;
  %1016 = %1015.2;
  %1017 = cast(%1016, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
  %1018 = cast(%var_4023, dtype="float64") /* ty=Tensor[(270), float64] */;
  %1019 = reshape(%1017, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
  %1020 = reshape(%1018, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %1021 = @func_3022(%1019, %1020) /* ty=(Tensor[(6, 15, 14), bool], Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), float64], Tensor[(270), float64], Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float32], Tensor[(1, 2, 9), float64], int8, Tensor[(1, 18), int8]) */;
  %1022 = cos(%1011) /* ty=Tensor[(6, 15, 14), float32] */;
  %1023 = %1014.2;
  %1024 = %1021.4;
  (%1022, %1023, %1016, %1024, %var_4023)
}

def @func_4563() -> (Tensor[(4, 208), float64],) {
  %1025 = @func_2882() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64], Tensor[(4, 208), float64]) */;
  %1026 = %1025.2;
  (%1026,)
}

def @func_4480() -> (Tensor[(6, 15, 14), float64],) {
  %1027 = @func_3457() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(96), float64]) */;
  %1028 = %1027.0;
  (%1028,)
}

def @func_3180() -> (Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) {
  @func_3178() /* ty=(Tensor[(6, 15, 14), float32], Tensor[(6, 15, 14), float64]) */
}

def @func_7536() -> Tensor[(6, 15, 14), float64] {
  %1029 = @func_4189() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32]) */;
  %1029.0
}

def @func_2084() -> (Tensor[(6, 15, 14), bool],) {
  @func_2082() /* ty=(Tensor[(6, 15, 14), bool],) */
}

def @func_7670(%var_7668: Tensor[(12, 12, 8), float32], %var_7669: Tensor[(12, 12, 8), float32]) -> (Tensor[(12, 12, 8), bool], Tensor[(12, 12, 8), bool]) {
  %1044 = fn (%var_7626: Tensor[(12, 12, 8), float32], %var_7632: Tensor[(12, 12, 8), float32]) -> (Tensor[(12, 12, 8), bool], Tensor[(12, 12, 8), bool]) {
    %1030 = cast(%var_7632, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
    %1031 = shape_of(%var_7626, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1032 = cast(%var_7626, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
    %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1034 = cast(%var_7626, dtype="float32") /* ty=Tensor[(12, 12, 8), float32] */;
    %1035 = asin(%1034) /* ty=Tensor[(12, 12, 8), float32] */;
    %1036 = cast(%1035, dtype="float64") /* ty=Tensor[(12, 12, 8), float64] */;
    %1037 = sinh(%1036) /* ty=Tensor[(12, 12, 8), float64] */;
    %1038 = cast(%var_7626, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
    %1039 = shape_of(%1037, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1040 = cast(%1037, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
    %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1042 = less(%1032, %1033) /* ty=Tensor[(12, 12, 8), bool] */;
    %1043 = greater(%1040, %1041) /* ty=Tensor[(12, 12, 8), bool] */;
    (%1042, %1043)
  };
  %1044(%var_7668, %var_7669) /* ty=(Tensor[(12, 12, 8), bool], Tensor[(12, 12, 8), bool]) */
}

def @func_8300(%var_8298: Tensor[(198), int16]) -> (Tensor[(96), float64], Tensor[(14, 14, 15), float64], Tensor[(198), int16], Tensor[(6, 15, 14), float64]) {
  @func_8297(%var_8298) /* ty=(Tensor[(96), float64], Tensor[(14, 14, 15), float64], Tensor[(198), int16], Tensor[(6, 15, 14), float64]) */
}

def @func_8196() -> Tensor[(6, 15, 14), float64] {
  %1045 = fn () -> Tensor[(6, 15, 14), float64] {
    @func_3296() /* ty=Tensor[(6, 15, 14), float64] */
  };
  %1045() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_3631(%var_3629: Tensor[(8, 7, 1), float64]) -> Tensor[(8, 7, 1), float64] {
  @func_3628(%var_3629) /* ty=Tensor[(8, 7, 1), float64] */
}

def @func_4520() -> Tensor[(6, 15, 14), float64] {
  %1046 = @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */;
  %1047 = %1046.0;
  %1048 = cast(%1047, dtype="float64") /* ty=Tensor[(6, 15, 14), float64] */;
  atanh(%1048) /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_8336() -> Tensor[(13, 8, 12), float64] {
  %1050 = fn () -> Tensor[(13, 8, 12), float64] {
    %1049 = cast(meta[relay.Constant][62] /* ty=Tensor[(13, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 12), float64] */;
    exp(%1049) /* ty=Tensor[(13, 8, 12), float64] */
  };
  %1050() /* ty=Tensor[(13, 8, 12), float64] */
}

def @func_1712() -> Tensor[(6, 15, 14), float64] {
  @func_1494() /* ty=Tensor[(6, 15, 14), float64] */
}

def @func_2232() -> (Tensor[(6, 15, 14), float64],) {
  @func_2230() /* ty=(Tensor[(6, 15, 14), float64],) */
}

def @func_4424() -> Tensor[(6, 15, 14), float32] {
  %1051 = @func_2614() /* ty=(Tensor[(6, 15, 14), float32],) */;
  %1051.0
}

def @func_4335() -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(270), float64]) {
  %1059 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(270), float64]) {
    %1052 = @func_1967() /* ty=(Tensor[(6, 15, 14), float64],) */;
    %1053 = cast(meta[relay.Constant][63] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %1054 = reshape(%1053, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %1055 = @func_4041(%1054) /* ty=(Tensor[(6, 15, 14), float32], Tensor[(728), float64], Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float32], Tensor[(270), float64]) */;
    %1056 = %1052.0;
    %1057 = @func_1712() /* ty=Tensor[(6, 15, 14), float64] */;
    %1058 = %1055.4;
    (%1056, %1057, %1058, meta[relay.Constant][63] /* ty=Tensor[(270), float64] */)
  };
  %1059() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(6, 15, 14), float64], Tensor[(270), float64], Tensor[(270), float64]) */
}

def @func_3269(%var_3268: uint32) -> (Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), bool], uint32) {
  %1065 = fn (%var_3263: uint32) -> (Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), bool], uint32) {
    %1060 = cast(%var_3263, dtype="uint32") /* ty=uint32 */;
    %1061 = reshape(%1060, newshape=[]) /* ty=uint32 */;
    %1062 = @func_76(%1061) /* ty=(Tensor[(1, 13, 7), bool],) */;
    %1063 = @func_2657() /* ty=Tensor[(6, 15, 14), float64] */;
    %1064 = %1062.0;
    (%1063, %1064, %var_3263)
  };
  %1065(%var_3268) /* ty=(Tensor[(6, 15, 14), float64], Tensor[(1, 13, 7), bool], uint32) */
}

def @func_6176() -> (Tensor[(6, 15, 14), float64], Tensor[(728), float64], Tensor[(6, 15, 14), float64]) {
  %1072 = fn () -> (Tensor[(6, 15, 14), float64], Tensor[(728), float64], Tensor[(6, 15, 14), float64]) {
    %1066 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
    %1067 = cast(%1066, dtype="float32") /* ty=Tensor[(6, 15, 14), float32] */;
    %1068 = reshape(%1067, newshape=[6, 15, 14]) /* ty=Tensor[(6, 15, 14), float32] */;
    %1069 = @func_2463(%1068) /* ty=(Tensor[(6, 15, 14), uint32], Tensor[(4, 13, 14), float64], Tensor[(728), float64]) */;
    %1070 = %1069.2;
    %1071 = @func_1405() /* ty=Tensor[(6, 15, 14), float64] */;
    (%1066, %1070, %1071)
  };
  %1072() /* ty=(Tensor[(6, 15, 14), float64], Tensor[(728), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_1651(%var_1646: Tensor[(16, 3, 15), int16], %var_1647: Tensor[(16, 3, 15), int16], %var_1648: uint32, %var_1649: Tensor[(70), uint32], %var_1650: Tensor[(2940), float64]) -> (Tensor[(16, 3, 15), bool], Tensor[(2940), float64], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(16, 3, 15), float64], Tensor[(6, 15, 14), float64]) {
  @func_1644(%var_1646, %var_1647, %var_1648, %var_1649, %var_1650) /* ty=(Tensor[(16, 3, 15), bool], Tensor[(2940), float64], uint32, Tensor[(70), uint32], Tensor[(2940), float64], Tensor[(16, 3, 15), float64], Tensor[(6, 15, 14), float64]) */
}

def @func_5642() -> Tensor[(6, 15, 14), float32] {
  @func_5640() /* ty=Tensor[(6, 15, 14), float32] */
}

def @func_2204() -> Tensor[(6, 15, 14), float64] {
  @func_2202() /* ty=Tensor[(6, 15, 14), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen160/build/output.py:2883: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen160/build/output.py", line 2888, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(990) tvmgen_default_fused_cast_cast_equal_kernel0(signed char* __restrict__ T_equal, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[((((((int)threadIdx.x) / 90) * 15) + (((int)threadIdx.x) % 15)))]) == ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


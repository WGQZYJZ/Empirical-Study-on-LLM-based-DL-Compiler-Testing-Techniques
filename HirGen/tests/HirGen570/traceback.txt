==========mod==========
#[version = "0.0.5"]
def @func_11608() -> Tensor[(540), float64] {
  @func_4622() /* ty=Tensor[(540), float64] */
}

def @func_10742(%var_10729: Tensor[(36), int16]) -> (Tensor[(540), float64], Tensor[(4, 3, 3), int16], Tensor[(36), int16]) {
  %0 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1 = cast(%var_10729, dtype="int16") /* ty=Tensor[(36), int16] */;
  %2 = cast(%var_10729, dtype="int16") /* ty=Tensor[(36), int16] */;
  %3 = reshape(%1, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), int16] */;
  %4 = reshape(%2, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), int16] */;
  %5 = @func_6901(%3, %4) /* ty=(Tensor[(4, 3, 3), int16],) */;
  %6 = %0.0;
  %7 = %5.0;
  (%6, %7, %var_10729)
}

def @func_4608() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32]) {
  %8 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %9 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %10 = %8.0;
  %11 = %9.0;
  (%10, %11)
}

def @func_12210() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %12 = @func_6255() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) */;
  %13 = @func_3503() /* ty=Tensor[(540), float64] */;
  %14 = %12.1;
  (%13, %14)
}

def @func_7529() -> (Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(2, 15, 15), float64]) {
  %15 = @func_6878() /* ty=(Tensor[(540), float64],) */;
  %16 = @func_2438() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) */;
  %17 = %16.2;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %19 = cast(%17, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %20 = reshape(%18, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %21 = reshape(%19, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %22 = @func_921(%20, %21) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %23 = %15.0;
  %24 = %22.0;
  (%23, %17, %24)
}

def @func_2438() -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) {
  %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 45), float64] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 45), float64] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %27 = reshape(%25, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %28 = reshape(%26, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %29 = @func_921(%27, %28) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %30 = @func_2177() /* ty=Tensor[(540), float64] */;
  %31 = %29.0;
  (%30, %31, meta[relay.Constant][0] /* ty=Tensor[(10, 45), float64] */)
}

def @func_9456() -> (Tensor[(15, 2, 2), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 2), float64] */;
  %33 = @func_5869() /* ty=(Tensor[(540), float64],) */;
  %34 = asin(%32) /* ty=Tensor[(15, 2, 2), float64] */;
  %35 = %33.0;
  %36 = @func_8054() /* ty=Tensor[(540), float64] */;
  (%34, %35, %36)
}

def @func_1862(%var_1848: Tensor[(520), int32]) -> (Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) {
  %37 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %38 = cast(%var_1848, dtype="int32") /* ty=Tensor[(520), int32] */;
  %39 = reshape(%38, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %40 = @func_1363(%39) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %42 = cast(%var_1848, dtype="int32") /* ty=Tensor[(520), int32] */;
  %43 = reshape(%41, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %44 = reshape(%42, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %45 = @func_1781(%43, %44) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float32], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) */;
  %46 = %37.0;
  %47 = %40.2;
  %48 = %45.0;
  (%46, %47, %var_1848, %48, meta[relay.Constant][2] /* ty=Tensor[(450), float64] */)
}

def @func_1704(%var_1616: Tensor[(7, 9, 11), float32], %var_1637: Tensor[(520), int32], %var_1691: Tensor[(7, 9, 11), uint16]) -> (Tensor[(7, 9, 11), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(12, 9, 14), float64], Tensor[(1512), float32], Tensor[(7, 9, 11), float64]) {
  %49 = cast(%var_1616, dtype="float32") /* ty=Tensor[(7, 9, 11), float32] */;
  %50 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %51 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %52 = reshape(%50, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %53 = reshape(%51, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %56 = reshape(%54, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %57 = reshape(%55, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %58 = cast(%var_1637, dtype="int32") /* ty=Tensor[(520), int32] */;
  %59 = reshape(%58, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %60 = @func_1363(%59) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %61 = cast(meta[relay.Constant][4] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %63 = reshape(%61, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %64 = reshape(%62, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %65 = @func_260(%63, %64) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) */;
  %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(1512), uint16] */, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %67 = cast(%var_1616, dtype="float32") /* ty=Tensor[(7, 9, 11), float32] */;
  %68 = atan(%67) /* ty=Tensor[(7, 9, 11), float32] */;
  %69 = cast(%68, dtype="float64") /* ty=Tensor[(7, 9, 11), float64] */;
  %70 = log10(%69) /* ty=Tensor[(7, 9, 11), float64] */;
  %71 = cast(%var_1616, dtype="uint16") /* ty=Tensor[(7, 9, 11), uint16] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%70, dtype="uint16") /* ty=Tensor[(7, 9, 11), uint16] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %75 = bitwise_xor(%73, %74) /* ty=Tensor[(7, 9, 11), uint16] */;
  %76 = cast(%var_1691, dtype="float64") /* ty=Tensor[(7, 9, 11), float64] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%75, dtype="float64") /* ty=Tensor[(7, 9, 11), float64] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %80 = sigmoid(%49) /* ty=Tensor[(7, 9, 11), float32] */;
  %81 = @func_1117(%52, %53) /* ty=Tensor[(4, 15, 9), bool] */;
  %82 = @func_1117(%56, %57) /* ty=Tensor[(4, 15, 9), bool] */;
  %83 = %60.2;
  %84 = %65.0;
  %85 = sqrt(%66) /* ty=Tensor[(1512), float32] */;
  %86 = mod(%78, %79) /* ty=Tensor[(7, 9, 11), float64] */;
  (%80, %81, meta[relay.Constant][3] /* ty=Tensor[(540), float64] */, %82, %83, %var_1637, %84, %85, %86)
}

def @func_4224() -> Tensor[(540), float64] {
  %87 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %87.2
}

def @func_3253() -> Tensor[(2, 15, 15), bool] {
  %88 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %90 = log2(%89) /* ty=Tensor[(2, 15, 15), float64] */;
  %91 = cast(%90, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %92 = shape_of(%88, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%88, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%93, %94) /* ty=Tensor[(2, 15, 15), bool] */
}

def @func_8054() -> Tensor[(540), float64] {
  %95 = @func_5532() /* ty=(Tensor[(540), float64],) */;
  %95.0
}

def @func_5772() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %96 = @func_5093() /* ty=(Tensor[(540), float64],) */;
  %97 = @func_4119() /* ty=(Tensor[(540), float64],) */;
  %98 = %96.0;
  %99 = %97.0;
  (%98, %99)
}

def @func_11841(%var_11793: Tensor[(4, 1, 13), float64], %var_11794: Tensor[(4, 1, 13), float64]) -> (Tensor[(450), float64], Tensor[(156), uint32], Tensor[(6, 4, 5), uint64], Tensor[(4, ?, 13), float64], Tensor[(4, ?, 13), bool]) {
  %100 = cast(meta[relay.Constant][5] /* ty=Tensor[(156), uint32] */, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %101 = reshape(%100, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %102 = @func_2740(%101) /* ty=(Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
  %103 = @func_10243() /* ty=(Tensor[(6, 4, 5), uint64],) */;
  %104 = cast(%var_11793, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %105 = shape_of(%var_11794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%var_11794, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %108 = cast(%var_11794, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %109 = shape_of(%var_11793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%var_11793, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %112 = mod(%110, %111) /* ty=Tensor[(4, ?, 13), float64] */;
  %113 = cast(%112, dtype="float32") /* ty=Tensor[(4, ?, 13), float32] */;
  %114 = shape_of(%var_11793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%var_11793, dtype="float32") /* ty=Tensor[(4, 1, 13), float32] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %117 = minimum(%115, %116) /* ty=Tensor[(4, ?, 13), float32] */;
  %118 = cast(%var_11794, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="bool") /* ty=Tensor[(4, ?, 13), bool] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %122 = logical_and(%120, %121) /* ty=Tensor[(4, ?, 13), bool] */;
  %123 = cast(%122, dtype="bool") /* ty=Tensor[(4, ?, 13), bool] */;
  %124 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%117, dtype="bool") /* ty=Tensor[(4, ?, 13), bool] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %127 = %102.0;
  %128 = %103.0;
  %129 = divide(%106, %107) /* ty=Tensor[(4, ?, 13), float64] */;
  %130 = greater_equal(%125, %126) /* ty=Tensor[(4, ?, 13), bool] */;
  (%127, meta[relay.Constant][5] /* ty=Tensor[(156), uint32] */, %128, %129, %130)
}

def @func_2382() -> (Tensor[(540), float64],) {
  %131 = @func_1991() /* ty=Tensor[(540), float64] */;
  (%131,)
}

def @func_7823(%var_7789: Tensor[(520), int32], %var_7803: Tensor[(1512), float64]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(520), int32], Tensor[(1512), float32], Tensor[(2, 15, 15), float64], Tensor[(2, 15, 15), float64]) {
  %132 = cast(%var_7789, dtype="int32") /* ty=Tensor[(520), int32] */;
  %133 = cast(%var_7789, dtype="int32") /* ty=Tensor[(520), int32] */;
  %134 = reshape(%132, newshape=[5, 104]) /* ty=Tensor[(5, 104), int32] */;
  %135 = reshape(%133, newshape=[5, 104]) /* ty=Tensor[(5, 104), int32] */;
  %136 = @func_6997(%134, %135) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(5, 104), bool]) */;
  %137 = @func_5022() /* ty=(Tensor[(1512), float64],) */;
  %138 = %137.0;
  %139 = cast(%var_7803, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(1), int32] */;
  %141 = cast(%138, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?), float32] */;
  %143 = @func_2707() /* ty=Tensor[(2, 15, 15), float64] */;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %145 = cast(%143, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %146 = reshape(%144, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %147 = reshape(%145, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %148 = @func_921(%146, %147) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %149 = @func_5386() /* ty=Tensor[(540), float64] */;
  %150 = %136.0;
  %151 = floor_divide(%141, %142) /* ty=Tensor[(1512), float32] */;
  %152 = %148.0;
  (%149, %150, %var_7789, %151, %143, %152)
}

def @func_12707() -> Tensor[(540), float64] {
  @func_7274() /* ty=Tensor[(540), float64] */
}

def @func_11635(%var_11614: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(450), float64], Tensor[(520), int32]) {
  %153 = @func_11022() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(10, 45), float32]) */;
  %154 = cast(%var_11614, dtype="int32") /* ty=Tensor[(520), int32] */;
  %155 = reshape(%154, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %156 = @func_1363(%155) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %157 = %153.0;
  %158 = %156.1;
  (%157, %158, %var_11614)
}

def @func_1960() -> Tensor[(12, 11, 15), float32] {
  %159 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
  %160 = erf(%159) /* ty=Tensor[(12, 11, 15), float32] */;
  %161 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 11, 15), float32] */, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %162 = shape_of(%160, dtype="int32") /* ty=Tensor[(3), int32] */;
  %163 = cast(%160, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %165 = subtract(%163, %164) /* ty=Tensor[(12, 11, 15), int16] */;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
  rsqrt(%166) /* ty=Tensor[(12, 11, 15), float32] */
}

def @func_2651() -> (Tensor[(540), float64],) {
  %167 = @func_1991() /* ty=Tensor[(540), float64] */;
  (%167,)
}

def @func_2597(%var_2590: Tensor[(18, 84), uint16]) -> (Tensor[(540), float64], Tensor[(1512), uint16], Tensor[(18, 84), uint16]) {
  %168 = cast(%var_2590, dtype="uint16") /* ty=Tensor[(18, 84), uint16] */;
  %169 = reshape(%168, newshape=[1512]) /* ty=Tensor[(1512), uint16] */;
  %170 = @func_2571(%169) /* ty=(Tensor[(540), float64], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) */;
  %171 = @func_2467() /* ty=Tensor[(540), float64] */;
  %172 = %170.2;
  (%171, %172, %var_2590)
}

def @func_7938() -> (Tensor[(540), float64],) {
  %173 = @func_5427() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
  %174 = %173.2;
  (%174,)
}

def @func_10035(%var_9992: Tensor[(9, 15, 13), int16]) -> (Tensor[(9, 15, 13), float32],) {
  %175 = cast(%var_9992, dtype="bool") /* ty=Tensor[(9, 15, 13), bool] */;
  %176 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(9, 15, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(meta[relay.Constant][7] /* ty=Tensor[(9, 15, 13), int16] */, dtype="bool") /* ty=Tensor[(9, 15, 13), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %179 = greater_equal(%177, %178) /* ty=Tensor[(9, 15, 13), bool] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(9, 15, 13), float32] */;
  %181 = atanh(%180) /* ty=Tensor[(9, 15, 13), float32] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(9, 15, 13), float32] */;
  %183 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%179, dtype="float32") /* ty=Tensor[(9, 15, 13), float32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %186 = floor_divide(%184, %185) /* ty=Tensor[(9, 15, 13), float32] */;
  (%186,)
}

def @func_6870() -> (Tensor[(450), float64],) {
  %187 = @func_6325() /* ty=(Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(450), float64]) */;
  %188 = %187.3;
  (%188,)
}

def @func_5386() -> Tensor[(540), float64] {
  @func_1991() /* ty=Tensor[(540), float64] */
}

def @func_3099() -> (Tensor[(540), float64],) {
  %189 = @func_2651() /* ty=(Tensor[(540), float64],) */;
  %190 = %189.0;
  (%190,)
}

def @func_921(%var_910: Tensor[(2, 15, 15), float64], %var_911: Tensor[(2, 15, 15), float64]) -> (Tensor[(2, 15, 15), float64],) {
  %191 = cast(%var_911, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %192 = shape_of(%var_910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%var_910, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %195 = floor_divide(%193, %194) /* ty=Tensor[(2, 15, 15), float64] */;
  (%195,)
}

def @func_6705() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32]) {
  %196 = @func_4259() /* ty=(Tensor[(540), float64],) */;
  %197 = @func_5427() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
  %198 = %196.0;
  %199 = %197.0;
  (%198, %199)
}

def @func_11081(%var_11044: Tensor[(1, 3, 9), float32], %var_11060: Tensor[(39, 4), uint32], %var_11070: Tensor[(2, 960), float32]) -> (Tensor[(2184), uint32], Tensor[(39, 4), uint32], Tensor[(16, 10, 12), float32], Tensor[(2, 960), float32], Tensor[(7, 3, 9), uint64]) {
  %200 = cast(%var_11060, dtype="uint32") /* ty=Tensor[(39, 4), uint32] */;
  %201 = reshape(%200, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %202 = @func_2740(%201) /* ty=(Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
  %203 = cast(%var_11070, dtype="float32") /* ty=Tensor[(2, 960), float32] */;
  %204 = reshape(%203, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), float32] */;
  %205 = @func_9030(%204) /* ty=(Tensor[(16, 10, 12), float32],) */;
  %206 = cast(%var_11044, dtype="float32") /* ty=Tensor[(1, 3, 9), float32] */;
  %207 = log2(%206) /* ty=Tensor[(1, 3, 9), float32] */;
  %208 = cast(%207, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
  %209 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 3, 9), float32] */, dtype="bool") /* ty=Tensor[(7, 3, 9), bool] */;
  %210 = equal(%208, %209) /* ty=Tensor[(7, 3, 9), bool] */;
  %211 = cast(%207, dtype="uint64") /* ty=Tensor[(1, 3, 9), uint64] */;
  %212 = cast(%210, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
  %213 = %202.3;
  %214 = %205.0;
  %215 = logical_xor(%211, %212) /* ty=Tensor[(7, 3, 9), uint64] */;
  (%213, %var_11060, %214, %var_11070, %215)
}

def @func_4997() -> (Tensor[(540), float64], Tensor[(39, 4), uint32], Tensor[(150, 3), uint8], Tensor[(540), float64]) {
  %216 = cast(meta[relay.Constant][10] /* ty=Tensor[(150, 3), float64] */, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
  %217 = cast(meta[relay.Constant][9] /* ty=Tensor[(39, 4), uint32] */, dtype="uint32") /* ty=Tensor[(39, 4), uint32] */;
  %218 = reshape(%216, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %219 = reshape(%217, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %220 = @func_2854(%218, %219) /* ty=(Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) */;
  %221 = %220.0;
  %222 = cast(%221, dtype="uint8") /* ty=Tensor[(2, 15, 15), uint8] */;
  %223 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(150, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %224 = cast(meta[relay.Constant][10] /* ty=Tensor[(150, 3), float64] */, dtype="uint8") /* ty=Tensor[(150, 3), uint8] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %226 = @func_4275() /* ty=(Tensor[(540), float64],) */;
  %227 = @func_3706() /* ty=Tensor[(540), float64] */;
  %228 = subtract(%224, %225) /* ty=Tensor[(150, 3), uint8] */;
  %229 = %226.0;
  (%227, meta[relay.Constant][9] /* ty=Tensor[(39, 4), uint32] */, %228, %229)
}

def @func_8569() -> Tensor[(1512), float64] {
  %230 = @func_5022() /* ty=(Tensor[(1512), float64],) */;
  %230.0
}

def @func_2768() -> Tensor[(540), float64] {
  @func_2177() /* ty=Tensor[(540), float64] */
}

def @func_8605() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %231 = @func_4016() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %232 = @func_7642() /* ty=Tensor[(540), float64] */;
  %233 = %231.0;
  (%232, %233)
}

def @func_13124(%var_13117: Tensor[(12, 11, 10), int32]) -> (Tensor[(12, 11, 10), int32],) {
  %234 = cast(%var_13117, dtype="int32") /* ty=Tensor[(12, 11, 10), int32] */;
  %235 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(12, 11, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 11, 10), int32] */, dtype="int32") /* ty=Tensor[(12, 11, 10), int32] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %238 = minimum(%236, %237) /* ty=Tensor[(12, 11, 10), int32] */;
  (%238,)
}

def @func_3706() -> Tensor[(540), float64] {
  @func_2467() /* ty=Tensor[(540), float64] */
}

def @func_9673() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %239 = @func_5532() /* ty=(Tensor[(540), float64],) */;
  %240 = %239.0;
  %241 = @func_5735() /* ty=Tensor[(540), float64] */;
  (%240, %241)
}

def @func_8171() -> (Tensor[(6, 4, 5), float32],) {
  %242 = @func_6213() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
  %243 = %242.0;
  (%243,)
}

def @func_1835(%var_1832: Tensor[(169, 9), float32]) -> (Tensor[(4, 15, 9), bool], Tensor[(13, 13, 9), float32], Tensor[(169, 9), float32]) {
  %244 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %245 = cast(%var_1832, dtype="float32") /* ty=Tensor[(169, 9), float32] */;
  %246 = reshape(%245, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %247 = @func_78(%246) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %248 = %244.1;
  %249 = %247.0;
  (%248, %249, %var_1832)
}

def @func_8080() -> Tensor[(540), float64] {
  %250 = @func_6599() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %250.1
}

def @func_10243() -> (Tensor[(6, 4, 5), uint64],) {
  %251 = @func_6213() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
  %252 = %251.0;
  %253 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 5), float32] */, dtype="uint64") /* ty=Tensor[(6, 4, 5), uint64] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="uint64") /* ty=Tensor[(6, 4, 5), uint64] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %257 = subtract(%255, %256) /* ty=Tensor[(6, 4, 5), uint64] */;
  (%257,)
}

def @func_6806() -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %258 = @func_5093() /* ty=(Tensor[(540), float64],) */;
  %259 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  %260 = %258.0;
  %261 = @func_5386() /* ty=Tensor[(540), float64] */;
  (%259, %260, %261)
}

def @func_4275() -> (Tensor[(540), float64],) {
  %262 = @func_4224() /* ty=Tensor[(540), float64] */;
  (%262,)
}

def @func_3654(%var_3573: Tensor[(450, 1), float64]) -> (Tensor[(540), float64], Tensor[(156), uint32], Tensor[(156), uint32], Tensor[(2, 15, 15), bool], Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(450, 1), float64], Tensor[(2, 15, 15), float64], Tensor[(12, 11, 15), float32], Tensor[(9, 220), float32], Tensor[(2, 15, 15), float64]) {
  %263 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %264 = cast(%var_3573, dtype="float64") /* ty=Tensor[(450, 1), float64] */;
  %265 = cast(meta[relay.Constant][13] /* ty=Tensor[(156), uint32] */, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %266 = reshape(%264, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %267 = reshape(%265, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %268 = @func_2854(%266, %267) /* ty=(Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) */;
  %269 = @func_3253() /* ty=Tensor[(2, 15, 15), bool] */;
  %270 = cast(%269, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %271 = cast(%var_3573, dtype="float64") /* ty=Tensor[(450, 1), float64] */;
  %272 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
  %273 = %263.1;
  %274 = %268.1;
  %275 = @func_3253() /* ty=Tensor[(2, 15, 15), bool] */;
  %276 = log10(%270) /* ty=Tensor[(2, 15, 15), float64] */;
  %277 = @func_2879() /* ty=Tensor[(540), float64] */;
  %278 = atan(%271) /* ty=Tensor[(450, 1), float64] */;
  %279 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  %280 = @func_1960() /* ty=Tensor[(12, 11, 15), float32] */;
  %281 = %272.1;
  %282 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  (%273, %274, meta[relay.Constant][13] /* ty=Tensor[(156), uint32] */, %275, %276, %277, %278, %279, %280, %281, %282)
}

def @func_3318() -> (Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) {
  %283 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 220), float32] */, dtype="float32") /* ty=Tensor[(9, 220), float32] */;
  %284 = cast(meta[relay.Constant][15] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %285 = reshape(%283, newshape=[12, 11, 15]) /* ty=Tensor[(12, 11, 15), float32] */;
  %286 = reshape(%284, newshape=[49, 10]) /* ty=Tensor[(49, 10), bool] */;
  %287 = @func_2278(%285, %286) /* ty=(Tensor[(12, 11, 15), uint16], Tensor[(10, 7, 7), float64], Tensor[(49, 10), bool], Tensor[(1512), uint16], Tensor[(10, 7, 7), bool], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) */;
  %288 = %287.3;
  %289 = cast(%288, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %290 = @func_3065() /* ty=Tensor[(540), float64] */;
  %291 = sinh(%289) /* ty=Tensor[(1512), float64] */;
  (%290, meta[relay.Constant][14] /* ty=Tensor[(9, 220), float32] */, meta[relay.Constant][15] /* ty=Tensor[(490), bool] */, %291)
}

def @func_5735() -> Tensor[(540), float64] {
  %292 = @func_4275() /* ty=(Tensor[(540), float64],) */;
  %292.0
}

def @func_3790() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) {
  %293 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %294 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %295 = cast(meta[relay.Constant][16] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %296 = cast(meta[relay.Constant][16] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %297 = reshape(%295, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %298 = reshape(%296, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %299 = @func_921(%297, %298) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %300 = %293.2;
  %301 = @func_2768() /* ty=Tensor[(540), float64] */;
  %302 = %294.1;
  %303 = %299.0;
  (%300, %301, %302, %303, meta[relay.Constant][16] /* ty=Tensor[(450), float64] */)
}

def @func_2640() -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) {
  %304 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %305 = cast(meta[relay.Constant][17] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %306 = cast(meta[relay.Constant][17] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %307 = reshape(%305, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %308 = reshape(%306, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %309 = @func_921(%307, %308) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %310 = %304.2;
  %311 = %309.0;
  (%310, %311, meta[relay.Constant][17] /* ty=Tensor[(450), float64] */)
}

def @func_7156() -> (Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) {
  %312 = @func_6213() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
  %313 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  %314 = %312.0;
  (%313, %314)
}

def @func_2278(%var_2197: Tensor[(12, 11, 15), float32], %var_2246: Tensor[(49, 10), bool]) -> (Tensor[(12, 11, 15), uint16], Tensor[(10, 7, 7), float64], Tensor[(49, 10), bool], Tensor[(1512), uint16], Tensor[(10, 7, 7), bool], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) {
  %315 = @func_1960() /* ty=Tensor[(12, 11, 15), float32] */;
  %316 = cast(%var_2197, dtype="uint16") /* ty=Tensor[(12, 11, 15), uint16] */;
  %317 = shape_of(%315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(%315, dtype="uint16") /* ty=Tensor[(12, 11, 15), uint16] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %320 = bitwise_xor(%318, %319) /* ty=Tensor[(12, 11, 15), uint16] */;
  %321 = cast(%315, dtype="uint16") /* ty=Tensor[(12, 11, 15), uint16] */;
  %322 = shape_of(%320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%320, dtype="uint16") /* ty=Tensor[(12, 11, 15), uint16] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %325 = cast(%var_2246, dtype="bool") /* ty=Tensor[(49, 10), bool] */;
  %326 = cast(meta[relay.Constant][18] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %327 = cast(%var_2246, dtype="bool") /* ty=Tensor[(49, 10), bool] */;
  %328 = reshape(%325, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %329 = reshape(%326, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %330 = reshape(%327, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %331 = @func_2017(%328, %329, %330) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %332 = %331.4;
  %333 = cast(%332, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %334 = cast(meta[relay.Constant][18] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %335 = cast(%332, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %336 = reshape(%333, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %337 = reshape(%334, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %338 = reshape(%335, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %339 = @func_2017(%336, %337, %338) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %340 = cast(meta[relay.Constant][19] /* ty=Tensor[(520), int32] */, dtype="int32") /* ty=Tensor[(520), int32] */;
  %341 = reshape(%340, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %342 = @func_1363(%341) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %343 = add(%323, %324) /* ty=Tensor[(12, 11, 15), uint16] */;
  %344 = %339.0;
  %345 = %342.0;
  (%343, %332, %var_2246, meta[relay.Constant][18] /* ty=Tensor[(1512), uint16] */, %344, %345, meta[relay.Constant][19] /* ty=Tensor[(520), int32] */)
}

def @func_4596() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(540), float64]) {
  %346 = @func_2698() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */;
  %347 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %348 = %346.2;
  %349 = %347.0;
  %350 = @func_4166() /* ty=Tensor[(540), float64] */;
  (%348, %349, %350)
}

def @func_5065() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %351 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %352 = @func_2651() /* ty=(Tensor[(540), float64],) */;
  %353 = %351.2;
  %354 = %352.0;
  %355 = @func_4166() /* ty=Tensor[(540), float64] */;
  (%353, %354, %355)
}

def @func_11686(%var_11679: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) {
  %356 = @func_8559() /* ty=(Tensor[(540), float64],) */;
  %357 = cast(%var_11679, dtype="int32") /* ty=Tensor[(520), int32] */;
  %358 = reshape(%357, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %359 = @func_1363(%358) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %360 = %356.0;
  %361 = %359.0;
  (%360, %361, %var_11679)
}

def @func_8150(%var_8141: Tensor[(156), uint32], %var_8142: Tensor[(2184), uint32]) -> (Tensor[(540), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  %362 = @func_4119() /* ty=(Tensor[(540), float64],) */;
  %363 = cast(%var_8141, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %364 = cast(%var_8142, dtype="uint32") /* ty=Tensor[(2184), uint32] */;
  %365 = reshape(%363, newshape=[13, 1, 12]) /* ty=Tensor[(13, 1, 12), uint32] */;
  %366 = reshape(%364, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), uint32] */;
  %367 = @func_227(%365, %366) /* ty=(Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) */;
  %368 = %362.0;
  %369 = %367.2;
  (%368, %369, %var_8141, %var_8142)
}

def @func_7655() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32]) {
  %370 = @func_3099() /* ty=(Tensor[(540), float64],) */;
  %371 = @func_4596() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
  %372 = %370.0;
  %373 = %371.1;
  (%372, %373)
}

def @func_3745(%var_3734: Tensor[(1, 540), float64]) -> (Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(1, 540), float64], Tensor[(490), bool]) {
  %374 = cast(%var_3734, dtype="float64") /* ty=Tensor[(1, 540), float64] */;
  %375 = cast(%var_3734, dtype="float64") /* ty=Tensor[(1, 540), float64] */;
  %376 = reshape(%374, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %377 = reshape(%375, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %378 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
  %379 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  %380 = @func_1117(%376, %377) /* ty=Tensor[(4, 15, 9), bool] */;
  %381 = %378.2;
  (%379, %380, %var_3734, %381)
}

def @func_1781(%var_1727: Tensor[(450), float64], %var_1753: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float32], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) {
  %382 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %383 = %382.2;
  %384 = cast(%383, dtype="float64") /* ty=Tensor[(540), float64] */;
  %385 = cast(%383, dtype="float64") /* ty=Tensor[(540), float64] */;
  %386 = reshape(%384, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %387 = reshape(%385, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %388 = cast(%var_1727, dtype="float64") /* ty=Tensor[(450), float64] */;
  %389 = cast(%var_1727, dtype="float64") /* ty=Tensor[(450), float64] */;
  %390 = reshape(%388, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %391 = reshape(%389, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %392 = @func_921(%390, %391) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %393 = cast(%383, dtype="float64") /* ty=Tensor[(540), float64] */;
  %394 = @func_1117(%386, %387) /* ty=Tensor[(4, 15, 9), bool] */;
  %395 = cast(%394, dtype="float64") /* ty=Tensor[(4, 15, 9), float64] */;
  %396 = reshape(%393, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %397 = reshape(%395, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %398 = cast(%var_1727, dtype="float32") /* ty=Tensor[(450), float32] */;
  %399 = cast(%var_1753, dtype="int32") /* ty=Tensor[(520), int32] */;
  %400 = reshape(%399, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %401 = @func_1363(%400) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %402 = %392.0;
  %403 = @func_1117(%396, %397) /* ty=Tensor[(4, 15, 9), bool] */;
  %404 = acosh(%398) /* ty=Tensor[(450), float32] */;
  %405 = %401.0;
  (%383, %394, %402, %403, %404, %405, %var_1753)
}

def @func_3420(%var_3400: Tensor[(156), uint32]) -> (Tensor[(540), float64], Tensor[(156), uint32], Tensor[(1, 450), float64], Tensor[(156), uint32]) {
  %406 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 450), float64] */, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
  %407 = cast(%var_3400, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %408 = reshape(%406, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %409 = reshape(%407, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %410 = @func_2854(%408, %409) /* ty=(Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) */;
  %411 = @func_2768() /* ty=Tensor[(540), float64] */;
  %412 = %410.1;
  (%411, %412, meta[relay.Constant][20] /* ty=Tensor[(1, 450), float64] */, %var_3400)
}

def @func_11721(%var_11714: Tensor[(450), float64]) -> (Tensor[(540), float64], Tensor[(450), float64], Tensor[(450), float64]) {
  %413 = @func_6599() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %414 = cast(%var_11714, dtype="float64") /* ty=Tensor[(450), float64] */;
  %415 = reshape(%414, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %416 = @func_10569(%415) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float64], Tensor[(520), int32]) */;
  %417 = %413.1;
  %418 = %416.2;
  (%417, %418, %var_11714)
}

def @func_7681(%var_7668: Tensor[(1512), float64]) -> (Tensor[(1512), bool],) {
  %419 = @func_5929() /* ty=Tensor[(1512), float64] */;
  %420 = cast(%var_7668, dtype="uint64") /* ty=Tensor[(1512), uint64] */;
  %421 = shape_of(%419, dtype="int32") /* ty=Tensor[(1), int32] */;
  %422 = cast(%419, dtype="uint64") /* ty=Tensor[(1512), uint64] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %424 = right_shift(%422, %423) /* ty=Tensor[(1512), uint64] */;
  %425 = cast(%424, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %426 = shape_of(%var_7668, dtype="int32") /* ty=Tensor[(1), int32] */;
  %427 = cast(%var_7668, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?), bool] */;
  %429 = greater_equal(%427, %428) /* ty=Tensor[(1512), bool] */;
  (%429,)
}

def @func_10478(%var_10427: Tensor[(693), float32], %var_10441: Tensor[(4, 15, 9), bool]) -> (Tensor[(6, 4, 5), float32], Tensor[(693), float32], Tensor[(520), int32], Tensor[(4, 15, 9), uint16]) {
  %430 = @func_7156() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) */;
  %431 = cast(%var_10427, dtype="float32") /* ty=Tensor[(693), float32] */;
  %432 = cast(meta[relay.Constant][21] /* ty=Tensor[(520), int32] */, dtype="int32") /* ty=Tensor[(520), int32] */;
  %433 = cast(%var_10427, dtype="uint16") /* ty=Tensor[(693), uint16] */;
  %434 = reshape(%431, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), float32] */;
  %435 = reshape(%432, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %436 = reshape(%433, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint16] */;
  %437 = @func_1704(%434, %435, %436) /* ty=(Tensor[(7, 9, 11), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(12, 9, 14), float64], Tensor[(1512), float32], Tensor[(7, 9, 11), float64]) */;
  %438 = %437.3;
  %439 = cast(%var_10441, dtype="uint16") /* ty=Tensor[(4, 15, 9), uint16] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%438, dtype="uint16") /* ty=Tensor[(4, 15, 9), uint16] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %443 = %430.1;
  %444 = maximum(%441, %442) /* ty=Tensor[(4, 15, 9), uint16] */;
  (%443, %var_10427, meta[relay.Constant][21] /* ty=Tensor[(520), int32] */, %444)
}

def @func_2661() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %445 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %446 = @func_2177() /* ty=Tensor[(540), float64] */;
  %447 = %445.0;
  (%446, %447)
}

def @func_5093() -> (Tensor[(540), float64],) {
  %448 = @func_3503() /* ty=Tensor[(540), float64] */;
  (%448,)
}

def @func_6325() -> (Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(450), float64]) {
  %449 = cast(meta[relay.Constant][22] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %450 = reshape(%449, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %451 = @func_78(%450) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %452 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %453 = @func_5511() /* ty=Tensor[(540), float64] */;
  %454 = %451.0;
  %455 = %452.2;
  (%453, %454, meta[relay.Constant][22] /* ty=Tensor[(1521), float32] */, %455)
}

def @func_12683(%var_12610: Tensor[(450), float64]) -> (Tensor[(6, 4, 5), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) {
  %456 = @func_6705() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %457 = cast(%var_12610, dtype="float64") /* ty=Tensor[(450), float64] */;
  %458 = cast(%var_12610, dtype="float64") /* ty=Tensor[(450), float64] */;
  %459 = reshape(%457, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %460 = reshape(%458, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %461 = @func_921(%459, %460) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %462 = %456.1;
  %463 = %461.0;
  %464 = @func_3065() /* ty=Tensor[(540), float64] */;
  (%462, %463, %var_12610, %464)
}

def @func_1991() -> Tensor[(540), float64] {
  %465 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %465.2
}

def @func_260(%var_240: Tensor[(12, 9, 14), uint16], %var_241: Tensor[(12, 9, 14), uint16]) -> (Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) {
  %466 = cast(%var_241, dtype="bool") /* ty=Tensor[(12, 9, 14), bool] */;
  %467 = shape_of(%var_240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%var_240, dtype="bool") /* ty=Tensor[(12, 9, 14), bool] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %470 = not_equal(%468, %469) /* ty=Tensor[(12, 9, 14), bool] */;
  %471 = cast(%470, dtype="float64") /* ty=Tensor[(12, 9, 14), float64] */;
  %472 = cast(%470, dtype="int8") /* ty=Tensor[(12, 9, 14), int8] */;
  %473 = shape_of(%var_241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_241, dtype="int8") /* ty=Tensor[(12, 9, 14), int8] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %476 = atan(%471) /* ty=Tensor[(12, 9, 14), float64] */;
  %477 = left_shift(%474, %475) /* ty=Tensor[(12, 9, 14), int8] */;
  (%476, %477)
}

def @func_10149() -> (Tensor[(540), float64],) {
  %478 = @func_7274() /* ty=Tensor[(540), float64] */;
  (%478,)
}

def @func_7900() -> (Tensor[(540), float64],) {
  %479 = @func_6705() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %480 = %479.0;
  (%480,)
}

def @func_12469() -> (Tensor[(1512), float64], Tensor[(2, 128), float64]) {
  %481 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 128), float64] */, dtype="float64") /* ty=Tensor[(2, 128), float64] */;
  %482 = reshape(%481, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), float64] */;
  %483 = @func_10073(%482) /* ty=Tensor[(2, 8, 16), float64] */;
  %484 = cast(%483, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
  %485 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(2, 128), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %486 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 128), float64] */, dtype="float64") /* ty=Tensor[(2, 128), float64] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %488 = @func_8569() /* ty=Tensor[(1512), float64] */;
  %489 = floor_mod(%486, %487) /* ty=Tensor[(2, 128), float64] */;
  (%488, %489)
}

def @func_13142() -> (Tensor[(8, 7, 8), float32],) {
  %490 = @func_10291() /* ty=Tensor[(8, 7, 8), float32] */;
  (%490,)
}

def @func_8686(%var_8677: Tensor[(15, 1, 12), float32]) -> Tensor[(15, 1, 12), float32] {
  %491 = cast(%var_8677, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
  exp(%491) /* ty=Tensor[(15, 1, 12), float32] */
}

def @func_5929() -> Tensor[(1512), float64] {
  %492 = @func_5022() /* ty=(Tensor[(1512), float64],) */;
  %492.0
}

def @func_9015(%var_8990: Tensor[(2, 11, 14), float64], %var_9008: Tensor[(156), uint32], %var_9009: Tensor[(2184), uint32]) -> (Tensor[(2, 11, 14), bool], Tensor[(540), float64], Tensor[(13, 14, 12), uint32], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  %493 = cast(%var_8990, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %494 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(2, 11, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 11, 14), float64] */, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %497 = cast(%var_9008, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %498 = cast(%var_9009, dtype="uint32") /* ty=Tensor[(2184), uint32] */;
  %499 = reshape(%497, newshape=[13, 1, 12]) /* ty=Tensor[(13, 1, 12), uint32] */;
  %500 = reshape(%498, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), uint32] */;
  %501 = @func_227(%499, %500) /* ty=(Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) */;
  %502 = equal(%495, %496) /* ty=Tensor[(2, 11, 14), bool] */;
  %503 = @func_3706() /* ty=Tensor[(540), float64] */;
  %504 = %501.0;
  (%502, %503, %504, %var_9008, %var_9009)
}

def @func_2962() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %505 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %506 = %505.0;
  %507 = @func_2177() /* ty=Tensor[(540), float64] */;
  (%506, %507)
}

def @func_3005(%var_3000: Tensor[(7, 70), bool], %var_3001: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(7, 70), bool], Tensor[(1512), uint16]) {
  %508 = cast(%var_3000, dtype="bool") /* ty=Tensor[(7, 70), bool] */;
  %509 = cast(%var_3001, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %510 = cast(%var_3000, dtype="bool") /* ty=Tensor[(7, 70), bool] */;
  %511 = reshape(%508, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %512 = reshape(%509, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %513 = reshape(%510, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %514 = @func_2017(%511, %512, %513) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %515 = @func_2177() /* ty=Tensor[(540), float64] */;
  %516 = %514.2;
  (%515, %516, %var_3000, %var_3001)
}

def @func_2571(%var_2559: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) {
  %517 = cast(%var_2559, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %518 = cast(%var_2559, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %519 = reshape(%517, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %520 = reshape(%518, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %521 = @func_260(%519, %520) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) */;
  %522 = @func_2467() /* ty=Tensor[(540), float64] */;
  %523 = %521.0;
  (%522, %523, %var_2559)
}

def @func_7177() -> (Tensor[(540), float64], Tensor[(13, 13, 9), float32]) {
  %524 = @func_5869() /* ty=(Tensor[(540), float64],) */;
  %525 = @func_6325() /* ty=(Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(450), float64]) */;
  %526 = %524.0;
  %527 = %525.1;
  (%526, %527)
}

def @func_3232(%var_3213: Tensor[(450), float64]) -> (Tensor[(540), float32], Tensor[(507, 3), float32], Tensor[(13, 13, 9), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) {
  %528 = @func_2768() /* ty=Tensor[(540), float64] */;
  %529 = cast(meta[relay.Constant][25] /* ty=Tensor[(540), float64] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(1), int32] */;
  %531 = cast(%528, dtype="float32") /* ty=Tensor[(540), float32] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?), float32] */;
  %533 = cast(meta[relay.Constant][26] /* ty=Tensor[(507, 3), float32] */, dtype="float32") /* ty=Tensor[(507, 3), float32] */;
  %534 = reshape(%533, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %535 = @func_78(%534) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %536 = %535.0;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(13, 13, 9), float32] */;
  %538 = cast(%var_3213, dtype="float64") /* ty=Tensor[(450), float64] */;
  %539 = cast(%var_3213, dtype="float64") /* ty=Tensor[(450), float64] */;
  %540 = reshape(%538, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %541 = reshape(%539, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %542 = @func_921(%540, %541) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %543 = @func_2698() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */;
  %544 = power(%531, %532) /* ty=Tensor[(540), float32] */;
  %545 = tan(%537) /* ty=Tensor[(13, 13, 9), float32] */;
  %546 = %542.0;
  %547 = %543.0;
  (%544, meta[relay.Constant][26] /* ty=Tensor[(507, 3), float32] */, %545, %546, %var_3213, %547)
}

def @func_9593(%var_9584: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), uint16]) {
  %548 = @func_8605() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %549 = @func_7127() /* ty=(Tensor[(540), float64],) */;
  %550 = cast(%var_9584, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %551 = reshape(%550, newshape=[18, 84]) /* ty=Tensor[(18, 84), uint16] */;
  %552 = @func_2597(%551) /* ty=(Tensor[(540), float64], Tensor[(1512), uint16], Tensor[(18, 84), uint16]) */;
  %553 = %548.0;
  %554 = %549.0;
  %555 = %552.0;
  (%553, %554, %555, %var_9584)
}

def @func_4166() -> Tensor[(540), float64] {
  @func_2467() /* ty=Tensor[(540), float64] */
}

def @func_12234() -> Tensor[(540), float64] {
  %556 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %556.0
}

def @func_6076() -> (Tensor[(2, 15, 15), float64], Tensor[(1512), float64]) {
  %557 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %558 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
  %559 = %557.1;
  %560 = %558.3;
  (%559, %560)
}

def @func_8585(%var_8578: Tensor[(13, 8, 9), float32]) -> Tensor[(13, 8, 9), bool] {
  %561 = cast(%var_8578, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
  %562 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(13, 8, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 8, 9), float32] */, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%563, %564) /* ty=Tensor[(13, 8, 9), bool] */
}

def @func_11022() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(10, 45), float32]) {
  %565 = @func_9342() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %566 = @func_3369() /* ty=(Tensor[(540), float64],) */;
  %567 = @func_4062() /* ty=Tensor[(10, 45), float64] */;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %569 = log(%568) /* ty=Tensor[(10, 45), float64] */;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %571 = asin(%570) /* ty=Tensor[(10, 45), float64] */;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %573 = acos(%572) /* ty=Tensor[(10, 45), float64] */;
  %574 = cast(%571, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(2), int32] */;
  %576 = cast(%573, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %578 = cast(%571, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %579 = @func_3065() /* ty=Tensor[(540), float64] */;
  %580 = %565.1;
  %581 = %566.0;
  %582 = power(%576, %577) /* ty=Tensor[(10, 45), float64] */;
  %583 = sinh(%578) /* ty=Tensor[(10, 45), float32] */;
  (%579, %580, %581, %582, %583)
}

def @func_4062() -> Tensor[(10, 45), float64] {
  %584 = @func_2438() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) */;
  %584.2
}

def @func_6255() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) {
  %585 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %586 = cast(meta[relay.Constant][28] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %587 = @func_5929() /* ty=Tensor[(1512), float64] */;
  %588 = cast(%587, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %589 = cast(meta[relay.Constant][28] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %590 = reshape(%586, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %591 = reshape(%588, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %592 = reshape(%589, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %593 = @func_2017(%590, %591, %592) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %594 = @func_2177() /* ty=Tensor[(540), float64] */;
  %595 = %585.0;
  %596 = %593.3;
  (%594, %595, %587, %596, meta[relay.Constant][28] /* ty=Tensor[(490), bool] */)
}

def @func_6997(%var_6987: Tensor[(5, 104), int32], %var_6992: Tensor[(5, 104), int32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(5, 104), bool]) {
  %597 = cast(%var_6987, dtype="int32") /* ty=Tensor[(5, 104), int32] */;
  %598 = reshape(%597, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %599 = @func_1862(%598) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) */;
  %600 = cast(%var_6992, dtype="bool") /* ty=Tensor[(5, 104), bool] */;
  %601 = shape_of(%var_6987, dtype="int32") /* ty=Tensor[(2), int32] */;
  %602 = cast(%var_6987, dtype="bool") /* ty=Tensor[(5, 104), bool] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %604 = @func_3706() /* ty=Tensor[(540), float64] */;
  %605 = %599.3;
  %606 = greater(%602, %603) /* ty=Tensor[(5, 104), bool] */;
  (%604, %605, %606)
}

def @func_10694(%var_10686: Tensor[(1521, 1), float32]) -> (Tensor[(2, 15, 15), float64], Tensor[(156), uint32], Tensor[(3, 52), uint32], Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521, 540), bool]) {
  %607 = @func_2707() /* ty=Tensor[(2, 15, 15), float64] */;
  %608 = cast(%607, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %609 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 52), uint32] */, dtype="uint32") /* ty=Tensor[(3, 52), uint32] */;
  %610 = reshape(%608, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %611 = reshape(%609, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %612 = @func_2854(%610, %611) /* ty=(Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) */;
  %613 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %614 = cast(%var_10686, dtype="float32") /* ty=Tensor[(1521, 1), float32] */;
  %615 = reshape(%614, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %616 = @func_78(%615) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %617 = @func_5735() /* ty=Tensor[(540), float64] */;
  %618 = cast(%var_10686, dtype="bool") /* ty=Tensor[(1521, 1), bool] */;
  %619 = cast(%617, dtype="bool") /* ty=Tensor[(540), bool] */;
  %620 = %612.2;
  %621 = %613.2;
  %622 = %616.0;
  %623 = logical_or(%618, %619) /* ty=Tensor[(1521, 540), bool] */;
  (%607, %620, meta[relay.Constant][29] /* ty=Tensor[(3, 52), uint32] */, %621, %622, %623)
}

def @func_2854(%var_2836: Tensor[(2, 15, 15), float64], %var_2850: Tensor[(156), uint32]) -> (Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) {
  %624 = @func_2707() /* ty=Tensor[(2, 15, 15), float64] */;
  %625 = cast(%var_2836, dtype="int64") /* ty=Tensor[(2, 15, 15), int64] */;
  %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%624, dtype="int64") /* ty=Tensor[(2, 15, 15), int64] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %629 = cast(%var_2850, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %630 = reshape(%629, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %631 = @func_2740(%630) /* ty=(Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
  %632 = minimum(%627, %628) /* ty=Tensor[(2, 15, 15), int64] */;
  %633 = %631.2;
  (%632, %633, %var_2850)
}

def @func_5427() -> (Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) {
  %634 = @func_4608() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %635 = %634.1;
  %636 = @func_2467() /* ty=Tensor[(540), float64] */;
  %637 = @func_2768() /* ty=Tensor[(540), float64] */;
  (%635, %636, %637)
}

def @func_2068(%var_2043: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(520), int32], Tensor[(4, 13, 10), float32]) {
  %638 = cast(%var_2043, dtype="int32") /* ty=Tensor[(520), int32] */;
  %639 = reshape(%638, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %640 = @func_1862(%639) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) */;
  %641 = cast(%var_2043, dtype="int32") /* ty=Tensor[(520), int32] */;
  %642 = reshape(%641, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %643 = @func_1363(%642) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %644 = @func_1991() /* ty=Tensor[(540), float64] */;
  %645 = %640.3;
  %646 = %643.2;
  (%644, %645, %var_2043, %646)
}

def @func_9030(%var_9027: Tensor[(16, 10, 12), float32]) -> (Tensor[(16, 10, 12), float32],) {
  %647 = cast(%var_9027, dtype="float32") /* ty=Tensor[(16, 10, 12), float32] */;
  %648 = cosh(%647) /* ty=Tensor[(16, 10, 12), float32] */;
  (%648,)
}

def @func_9634() -> (Tensor[(540), float64],) {
  %649 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %650 = %649.0;
  (%650,)
}

def @func_12492() -> (Tensor[(540), float64],) {
  %651 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %652 = %651.0;
  (%652,)
}

def @func_10325() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %653 = @func_7529() /* ty=(Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(2, 15, 15), float64]) */;
  %654 = %653.0;
  %655 = @func_2177() /* ty=Tensor[(540), float64] */;
  (%654, %655)
}

def @func_10609() -> (Tensor[(540), float64],) {
  %656 = @func_2905() /* ty=Tensor[(540), float64] */;
  (%656,)
}

def @func_4758(%var_4752: Tensor[(6, 252), uint16]) -> (Tensor[(2, 15, 15), float64], Tensor[(12, 9, 14), int8], Tensor[(490), bool], Tensor[(6, 252), uint16]) {
  %657 = @func_3253() /* ty=Tensor[(2, 15, 15), bool] */;
  %658 = cast(%657, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %659 = cast(meta[relay.Constant][30] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %660 = cast(%var_4752, dtype="uint16") /* ty=Tensor[(6, 252), uint16] */;
  %661 = cast(meta[relay.Constant][30] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %662 = reshape(%659, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %663 = reshape(%660, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %664 = reshape(%661, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %665 = @func_2017(%662, %663, %664) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %666 = cosh(%658) /* ty=Tensor[(2, 15, 15), float64] */;
  %667 = %665.1;
  (%666, %667, meta[relay.Constant][30] /* ty=Tensor[(490), bool] */, %var_4752)
}

def @func_9500(%var_9469: Tensor[(1521), float32]) -> (Tensor[(6, 4, 5), float32], Tensor[(1521), float32], Tensor[(1521), float32], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64]) {
  %668 = @func_7655() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %669 = cast(%var_9469, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %670 = reshape(%669, newshape=[1521]) /* ty=Tensor[(1521), float32] */;
  %671 = @func_6517(%670) /* ty=(Tensor[(540), float64], Tensor[(1521), uint8], Tensor[(1521), int8], Tensor[(1521), float32]) */;
  %672 = @func_8559() /* ty=(Tensor[(540), float64],) */;
  %673 = @func_6870() /* ty=(Tensor[(450), float64],) */;
  %674 = @func_7900() /* ty=(Tensor[(540), float64],) */;
  %675 = %668.1;
  %676 = %671.3;
  %677 = %672.0;
  %678 = %673.0;
  %679 = %674.0;
  (%675, %676, %var_9469, %677, %678, %679)
}

def @func_10365() -> (Tensor[(540), float64], Tensor[(156), uint32], Tensor[(308), float64], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  %680 = @func_6213() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
  %681 = cast(meta[relay.Constant][31] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %682 = cast(meta[relay.Constant][32] /* ty=Tensor[(156), uint32] */, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %683 = cast(meta[relay.Constant][33] /* ty=Tensor[(2184), uint32] */, dtype="uint32") /* ty=Tensor[(2184), uint32] */;
  %684 = reshape(%681, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), float64] */;
  %685 = reshape(%682, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %686 = reshape(%683, newshape=[2184]) /* ty=Tensor[(2184), uint32] */;
  %687 = @func_9015(%684, %685, %686) /* ty=(Tensor[(2, 11, 14), bool], Tensor[(540), float64], Tensor[(13, 14, 12), uint32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
  %688 = %680.1;
  %689 = %687.3;
  (%688, %689, meta[relay.Constant][31] /* ty=Tensor[(308), float64] */, meta[relay.Constant][32] /* ty=Tensor[(156), uint32] */, meta[relay.Constant][33] /* ty=Tensor[(2184), uint32] */)
}

def @func_4365(%var_4348: Tensor[(169, 9), float32]) -> (Tensor[(540), float64], Tensor[(1521), float32], Tensor[(169, 9), float64]) {
  %690 = cast(meta[relay.Constant][34] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %691 = reshape(%690, newshape=[169, 9]) /* ty=Tensor[(169, 9), float32] */;
  %692 = @func_1835(%691) /* ty=(Tensor[(4, 15, 9), bool], Tensor[(13, 13, 9), float32], Tensor[(169, 9), float32]) */;
  %693 = %692.2;
  %694 = cast(%var_4348, dtype="float64") /* ty=Tensor[(169, 9), float64] */;
  %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(2), int32] */;
  %696 = cast(%693, dtype="float64") /* ty=Tensor[(169, 9), float64] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %698 = @func_1991() /* ty=Tensor[(540), float64] */;
  %699 = floor_divide(%696, %697) /* ty=Tensor[(169, 9), float64] */;
  (%698, meta[relay.Constant][34] /* ty=Tensor[(1521), float32] */, %699)
}

def @func_13186() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(1521), float32]) {
  %700 = cast(meta[relay.Constant][35] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %701 = reshape(%700, newshape=[1521]) /* ty=Tensor[(1521), float32] */;
  %702 = @func_6517(%701) /* ty=(Tensor[(540), float64], Tensor[(1521), uint8], Tensor[(1521), int8], Tensor[(1521), float32]) */;
  %703 = @func_12931() /* ty=Tensor[(540), float64] */;
  %704 = %702.0;
  (%703, %704, meta[relay.Constant][35] /* ty=Tensor[(1521), float32] */)
}

def @func_11322() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %705 = @func_9634() /* ty=(Tensor[(540), float64],) */;
  %706 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %707 = %705.0;
  %708 = %706.0;
  (%707, %708)
}

def @func_7743() -> Tensor[(540), float64] {
  @func_2879() /* ty=Tensor[(540), float64] */
}

def @func_5803() -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64]) {
  %709 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  %710 = @func_1991() /* ty=Tensor[(540), float64] */;
  (%709, %710)
}

def @func_11439() -> Tensor[(540), float64] {
  %711 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %711.1
}

def @func_2905() -> Tensor[(540), float64] {
  %712 = @func_2651() /* ty=(Tensor[(540), float64],) */;
  %712.0
}

def @func_8028(%var_7961: Tensor[(11, 10, 9), uint64]) -> (Tensor[(11, 10, 9), bool], Tensor[(540), float64], Tensor[(11, 10, 9), int8], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %713 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 10, 9), uint64] */, dtype="bool") /* ty=Tensor[(11, 10, 9), bool] */;
  %714 = shape_of(%var_7961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%var_7961, dtype="bool") /* ty=Tensor[(11, 10, 9), bool] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %717 = @func_4119() /* ty=(Tensor[(540), float64],) */;
  %718 = cast(%var_7961, dtype="int8") /* ty=Tensor[(11, 10, 9), int8] */;
  %719 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(11, 10, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 10, 9), uint64] */, dtype="int8") /* ty=Tensor[(11, 10, 9), int8] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %722 = less(%715, %716) /* ty=Tensor[(11, 10, 9), bool] */;
  %723 = %717.0;
  %724 = add(%720, %721) /* ty=Tensor[(11, 10, 9), int8] */;
  %725 = @func_2768() /* ty=Tensor[(540), float64] */;
  %726 = @func_3706() /* ty=Tensor[(540), float64] */;
  %727 = @func_3065() /* ty=Tensor[(540), float64] */;
  (%722, %723, %724, %725, %726, %727)
}

def @func_12392() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64], Tensor[(?, 450), float64]) {
  %728 = @func_7127() /* ty=(Tensor[(540), float64],) */;
  %729 = @func_9634() /* ty=(Tensor[(540), float64],) */;
  %730 = cast(meta[relay.Constant][37] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %731 = reshape(%730, newshape=[1, 450]) /* ty=Tensor[(1, 450), float64] */;
  %732 = @func_12082(%731) /* ty=(Tensor[(540), float64], Tensor[(?, 450), bool], Tensor[(2, 15, 15), float64]) */;
  %733 = %732.1;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(?, 450), float64] */;
  %735 = %728.0;
  %736 = @func_7743() /* ty=Tensor[(540), float64] */;
  %737 = @func_12167() /* ty=Tensor[(540), float64] */;
  %738 = %729.0;
  %739 = log2(%734) /* ty=Tensor[(?, 450), float64] */;
  (%735, %736, %737, meta[relay.Constant][37] /* ty=Tensor[(450), float64] */, %738, %739)
}

def @func_12430(%var_12417: Tensor[(1, 9, 5), float64]) -> (Tensor[(1, 9, 5), float64],) {
  %740 = cast(%var_12417, dtype="float64") /* ty=Tensor[(1, 9, 5), float64] */;
  %741 = cosh(%740) /* ty=Tensor[(1, 9, 5), float64] */;
  (%741,)
}

def @func_5271() -> (Tensor[(3, 6, 4), float64],) {
  %742 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 4), float64] */;
  %743 = acos(%742) /* ty=Tensor[(3, 6, 4), float64] */;
  (%743,)
}

def @func_11260() -> Tensor[(540), float64] {
  @func_2905() /* ty=Tensor[(540), float64] */
}

def @func_5511() -> Tensor[(540), float64] {
  %744 = @func_3801() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %744.0
}

def @func_9232() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(490), bool]) {
  %745 = @func_5772() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %746 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %747 = @func_6255() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) */;
  %748 = %745.0;
  %749 = @func_2467() /* ty=Tensor[(540), float64] */;
  %750 = %746.2;
  %751 = %747.4;
  (%748, %749, %750, %751)
}

def @func_6557() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %752 = @func_2467() /* ty=Tensor[(540), float64] */;
  %753 = @func_5386() /* ty=Tensor[(540), float64] */;
  (%752, %753)
}

def @func_3049() -> Tensor[(2, 15, 15), float64] {
  @func_2707() /* ty=Tensor[(2, 15, 15), float64] */
}

def @func_4259() -> (Tensor[(540), float64],) {
  %754 = @func_4166() /* ty=Tensor[(540), float64] */;
  (%754,)
}

def @func_2467() -> Tensor[(540), float64] {
  @func_2177() /* ty=Tensor[(540), float64] */
}

def @func_7642() -> Tensor[(540), float64] {
  %755 = @func_6705() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %755.0
}

def @func_10856() -> Tensor[(540), float64] {
  %756 = @func_6255() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) */;
  %756.1
}

def @func_12278() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %757 = @func_5354() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %758 = %757.2;
  %759 = @func_4622() /* ty=Tensor[(540), float64] */;
  (%758, %759)
}

def @func_12537() -> Tensor[(540), float64] {
  %760 = @func_4259() /* ty=(Tensor[(540), float64],) */;
  %760.0
}

def @func_4622() -> Tensor[(540), float64] {
  %761 = @func_2698() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */;
  %761.2
}

def @func_2879() -> Tensor[(540), float64] {
  %762 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %762.0
}

def @func_2707() -> Tensor[(2, 15, 15), float64] {
  %763 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %763.1
}

def @func_9620() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %764 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %765 = @func_8080() /* ty=Tensor[(540), float64] */;
  %766 = %764.0;
  (%765, %766)
}

def @func_5022() -> (Tensor[(1512), float64],) {
  %767 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
  %768 = %767.3;
  (%768,)
}

def @func_12931() -> Tensor[(540), float64] {
  %769 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %769.1
}

def @func_8980() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64]) {
  %770 = @func_7938() /* ty=(Tensor[(540), float64],) */;
  %771 = @func_5065() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %772 = @func_7156() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) */;
  %773 = %770.0;
  %774 = %771.0;
  %775 = %772.0;
  (%773, %774, %775)
}

def @func_10291() -> Tensor[(8, 7, 8), float32] {
  %776 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
  %777 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(8, 7, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%778, %779) /* ty=Tensor[(8, 7, 8), float32] */
}

def @func_6979() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %780 = @func_3369() /* ty=(Tensor[(540), float64],) */;
  %781 = @func_2768() /* ty=Tensor[(540), float64] */;
  %782 = %780.0;
  (%781, %782)
}

def @func_5617() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %783 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %784 = @func_3801() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %785 = %783.1;
  %786 = %784.0;
  (%785, %786)
}

def @func_12296() -> (Tensor[(540), float64],) {
  %787 = @func_11787() /* ty=(Tensor[(540), float64],) */;
  %788 = %787.0;
  (%788,)
}

def @func_12082(%var_12047: Tensor[(1, 450), float64]) -> (Tensor[(540), float64], Tensor[(?, 450), bool], Tensor[(2, 15, 15), float64]) {
  %789 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %790 = cast(%var_12047, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
  %791 = reshape(%790, newshape=[450, 1]) /* ty=Tensor[(450, 1), float64] */;
  %792 = @func_3654(%791) /* ty=(Tensor[(540), float64], Tensor[(156), uint32], Tensor[(156), uint32], Tensor[(2, 15, 15), bool], Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(450, 1), float64], Tensor[(2, 15, 15), float64], Tensor[(12, 11, 15), float32], Tensor[(9, 220), float32], Tensor[(2, 15, 15), float64]) */;
  %793 = %792.3;
  %794 = cast(%793, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %795 = shape_of(%var_12047, dtype="int32") /* ty=Tensor[(2), int32] */;
  %796 = cast(%var_12047, dtype="bool") /* ty=Tensor[(1, 450), bool] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %798 = @func_5803() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */;
  %799 = %789.1;
  %800 = logical_or(%796, %797) /* ty=Tensor[(?, 450), bool] */;
  %801 = %798.0;
  (%799, %800, %801)
}

def @func_10276(%var_10267: uint8) -> Tensor[(11, 2, 16), bool] {
  %802 = cast(%var_10267, dtype="bool") /* ty=bool */;
  %803 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 2, 16), uint8] */, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  equal(%802, %803) /* ty=Tensor[(11, 2, 16), bool] */
}

def @func_10569(%var_10561: Tensor[(450), float64]) -> (Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float64], Tensor[(520), int32]) {
  %804 = @func_9232() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(490), bool]) */;
  %805 = cast(%var_10561, dtype="float64") /* ty=Tensor[(450), float64] */;
  %806 = cast(meta[relay.Constant][42] /* ty=Tensor[(520), int32] */, dtype="int32") /* ty=Tensor[(520), int32] */;
  %807 = reshape(%805, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %808 = reshape(%806, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %809 = @func_1781(%807, %808) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float32], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) */;
  %810 = %804.1;
  %811 = %809.3;
  (%810, %811, %var_10561, meta[relay.Constant][42] /* ty=Tensor[(520), int32] */)
}

def @func_11572(%var_11551: Tensor[(2304), float32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2304), bool], Tensor[(540), float64]) {
  %812 = @func_3790() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %813 = @func_11322() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %814 = @func_11022() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(10, 45), float32]) */;
  %815 = cast(%var_11551, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %816 = reshape(%815, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
  %817 = @func_2786(%816) /* ty=(Tensor[(12, 16, 12), float32],) */;
  %818 = %817.0;
  %819 = cast(%818, dtype="bool") /* ty=Tensor[(12, 16, 12), bool] */;
  %820 = shape_of(%var_11551, dtype="int32") /* ty=Tensor[(1), int32] */;
  %821 = cast(%var_11551, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?), bool] */;
  %823 = @func_7951() /* ty=(Tensor[(540), float64],) */;
  %824 = %812.0;
  %825 = %813.1;
  %826 = @func_4166() /* ty=Tensor[(540), float64] */;
  %827 = %814.1;
  %828 = not_equal(%821, %822) /* ty=Tensor[(2304), bool] */;
  %829 = %823.0;
  (%824, %825, %826, %827, %828, %829)
}

def @func_13036() -> (Tensor[(540), float64],) {
  %830 = @func_4275() /* ty=(Tensor[(540), float64],) */;
  %831 = %830.0;
  (%831,)
}

def @func_8185() -> (Tensor[(540), float64], Tensor[(169, 9), float32], Tensor[(1521), float32]) {
  %832 = @func_7177() /* ty=(Tensor[(540), float64], Tensor[(13, 13, 9), float32]) */;
  %833 = cast(meta[relay.Constant][43] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %834 = reshape(%833, newshape=[169, 9]) /* ty=Tensor[(169, 9), float32] */;
  %835 = @func_1835(%834) /* ty=(Tensor[(4, 15, 9), bool], Tensor[(13, 13, 9), float32], Tensor[(169, 9), float32]) */;
  %836 = %832.0;
  %837 = %835.2;
  (%836, %837, meta[relay.Constant][43] /* ty=Tensor[(1521), float32] */)
}

def @func_4844() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %838 = @func_3801() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %839 = %838.0;
  %840 = @func_3706() /* ty=Tensor[(540), float64] */;
  (%839, %840)
}

def @func_7951() -> (Tensor[(540), float64],) {
  %841 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %842 = %841.1;
  (%842,)
}

def @func_6455(%var_6420: Tensor[(520), int32]) -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(4, 13, 10), float32], Tensor[(520), int32]) {
  %843 = @func_2438() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) */;
  %844 = @func_4608() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %845 = cast(%var_6420, dtype="int32") /* ty=Tensor[(520), int32] */;
  %846 = reshape(%845, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %847 = @func_1363(%846) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %848 = %843.1;
  %849 = %844.0;
  %850 = %847.2;
  (%848, %849, %850, %var_6420)
}

def @func_9326() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %851 = @func_4224() /* ty=Tensor[(540), float64] */;
  %852 = @func_7642() /* ty=Tensor[(540), float64] */;
  (%851, %852)
}

def @func_11943() -> Tensor[(540), float64] {
  %853 = @func_10609() /* ty=(Tensor[(540), float64],) */;
  %853.0
}

def @func_6901(%var_6895: Tensor[(4, 3, 3), int16], %var_6896: Tensor[(4, 3, 3), int16]) -> (Tensor[(4, 3, 3), int16],) {
  %854 = cast(%var_6896, dtype="int16") /* ty=Tensor[(4, 3, 3), int16] */;
  %855 = shape_of(%var_6895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%var_6895, dtype="int16") /* ty=Tensor[(4, 3, 3), int16] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %858 = minimum(%856, %857) /* ty=Tensor[(4, 3, 3), int16] */;
  (%858,)
}

def @main(%var_13203: Tensor[(4, 9, 12), float64], %var_13224: Tensor[(4, 9, 12), float64]) -> (Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool]) {
  %859 = cast(%var_13203, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
  %860 = cast(%var_13224, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %861 = shape_of(%var_13203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%var_13203, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %864 = sinh(%859) /* ty=Tensor[(4, 9, 12), float64] */;
  %865 = less_equal(%862, %863) /* ty=Tensor[(4, 9, 12), bool] */;
  (%864, %865)
}

def @func_8559() -> (Tensor[(540), float64],) {
  %866 = @func_5354() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %867 = %866.2;
  (%867,)
}

def @func_2177() -> Tensor[(540), float64] {
  @func_1991() /* ty=Tensor[(540), float64] */
}

def @func_10791(%var_10782: Tensor[(6, 8, 1), float32]) -> Tensor[(6, 8, 1), float32] {
  %868 = cast(%var_10782, dtype="float32") /* ty=Tensor[(6, 8, 1), float32] */;
  exp(%868) /* ty=Tensor[(6, 8, 1), float32] */
}

def @func_3503() -> Tensor[(540), float64] {
  @func_1991() /* ty=Tensor[(540), float64] */
}

def @func_11251() -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64]) {
  %869 = @func_5065() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %870 = @func_2707() /* ty=Tensor[(2, 15, 15), float64] */;
  %871 = %869.2;
  (%870, %871)
}

def @func_6213() -> (Tensor[(6, 4, 5), float32], Tensor[(540), float64]) {
  %872 = @func_4608() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %873 = %872.1;
  %874 = @func_2768() /* ty=Tensor[(540), float64] */;
  (%873, %874)
}

def @func_1575() -> (Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) {
  %875 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(6, 4, 5), float32] */;
  %876 = cast(meta[relay.Constant][45] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %877 = cast(meta[relay.Constant][45] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %878 = reshape(%876, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %879 = reshape(%877, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %880 = atanh(%875) /* ty=Tensor[(6, 4, 5), float32] */;
  %881 = @func_1117(%878, %879) /* ty=Tensor[(4, 15, 9), bool] */;
  (%880, %881, meta[relay.Constant][45] /* ty=Tensor[(540), float64] */)
}

def @func_7494(%var_7477: Tensor[(450), float64], %var_7480: Tensor[(490), bool], %var_7481: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(12, 16, 12), float32], Tensor[(2304), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool], Tensor[(1512), uint16], Tensor[(156, 540), uint16]) {
  %882 = cast(meta[relay.Constant][46] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %883 = reshape(%882, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
  %884 = @func_2786(%883) /* ty=(Tensor[(12, 16, 12), float32],) */;
  %885 = cast(%var_7477, dtype="float64") /* ty=Tensor[(450), float64] */;
  %886 = cast(%var_7477, dtype="float64") /* ty=Tensor[(450), float64] */;
  %887 = reshape(%885, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %888 = reshape(%886, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %889 = @func_921(%887, %888) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %890 = cast(%var_7480, dtype="bool") /* ty=Tensor[(490), bool] */;
  %891 = cast(%var_7481, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %892 = cast(%var_7480, dtype="bool") /* ty=Tensor[(490), bool] */;
  %893 = reshape(%890, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %894 = reshape(%891, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %895 = reshape(%892, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %896 = @func_2017(%893, %894, %895) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %897 = cast(meta[relay.Constant][47] /* ty=Tensor[(156, 1), uint32] */, dtype="uint32") /* ty=Tensor[(156, 1), uint32] */;
  %898 = reshape(%897, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %899 = @func_3420(%898) /* ty=(Tensor[(540), float64], Tensor[(156), uint32], Tensor[(1, 450), float64], Tensor[(156), uint32]) */;
  %900 = %899.0;
  %901 = cast(%900, dtype="uint16") /* ty=Tensor[(540), uint16] */;
  %902 = cast(meta[relay.Constant][47] /* ty=Tensor[(156, 1), uint32] */, dtype="uint16") /* ty=Tensor[(156, 1), uint16] */;
  %903 = @func_2905() /* ty=Tensor[(540), float64] */;
  %904 = %884.0;
  %905 = %889.0;
  %906 = %896.0;
  %907 = bitwise_xor(%901, %902) /* ty=Tensor[(156, 540), uint16] */;
  (%903, %904, meta[relay.Constant][46] /* ty=Tensor[(2304), float32] */, %905, %var_7477, %906, %var_7480, %var_7481, %907)
}

def @func_6517(%var_6476: Tensor[(1521), float32]) -> (Tensor[(540), float64], Tensor[(1521), uint8], Tensor[(1521), int8], Tensor[(1521), float32]) {
  %908 = cast(%var_6476, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %909 = reshape(%908, newshape=[169, 9]) /* ty=Tensor[(169, 9), float32] */;
  %910 = @func_4365(%909) /* ty=(Tensor[(540), float64], Tensor[(1521), float32], Tensor[(169, 9), float64]) */;
  %911 = %910.1;
  %912 = cast(%var_6476, dtype="uint8") /* ty=Tensor[(1521), uint8] */;
  %913 = shape_of(%911, dtype="int32") /* ty=Tensor[(1), int32] */;
  %914 = cast(%911, dtype="uint8") /* ty=Tensor[(1521), uint8] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %916 = cast(%var_6476, dtype="int8") /* ty=Tensor[(1521), int8] */;
  %917 = shape_of(%911, dtype="int32") /* ty=Tensor[(1), int32] */;
  %918 = cast(%911, dtype="int8") /* ty=Tensor[(1521), int8] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?), int8] */;
  %920 = cast(meta[relay.Constant][48] /* ty=Tensor[(1521), float32] */, dtype="int8") /* ty=Tensor[(1521), int8] */;
  %921 = shape_of(%var_6476, dtype="int32") /* ty=Tensor[(1), int32] */;
  %922 = cast(%var_6476, dtype="int8") /* ty=Tensor[(1521), int8] */;
  %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?), int8] */;
  %924 = add(%922, %923) /* ty=Tensor[(1521), int8] */;
  %925 = cast(%924, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %926 = @func_2768() /* ty=Tensor[(540), float64] */;
  %927 = right_shift(%914, %915) /* ty=Tensor[(1521), uint8] */;
  %928 = bitwise_and(%918, %919) /* ty=Tensor[(1521), int8] */;
  %929 = tan(%925) /* ty=Tensor[(1521), float32] */;
  (%926, %927, %928, %929)
}

def @func_10199() -> (Tensor[(540), float64],) {
  %930 = @func_4224() /* ty=Tensor[(540), float64] */;
  (%930,)
}

def @func_12123() -> Tensor[(540), float64] {
  %931 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %931.0
}

def @func_3369() -> (Tensor[(540), float64],) {
  %932 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %933 = %932.0;
  (%933,)
}

def @func_9342() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %934 = @func_6806() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %935 = %934.2;
  %936 = @func_1991() /* ty=Tensor[(540), float64] */;
  (%935, %936)
}

def @func_5595(%var_5559: float64, %var_5560: Tensor[(7, 12, 1), float64]) -> (Tensor[(7, 12, 1), float64], Tensor[(3, 6, 4), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) {
  %937 = cast(%var_5559, dtype="float64") /* ty=float64 */;
  %938 = cast(%var_5560, dtype="float64") /* ty=Tensor[(7, 12, 1), float64] */;
  %939 = @func_5271() /* ty=(Tensor[(3, 6, 4), float64],) */;
  %940 = %939.0;
  %941 = cast(%940, dtype="float64") /* ty=Tensor[(3, 6, 4), float64] */;
  %942 = @func_2651() /* ty=(Tensor[(540), float64],) */;
  %943 = cast(meta[relay.Constant][49] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %944 = reshape(%943, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %945 = @func_3232(%944) /* ty=(Tensor[(540), float32], Tensor[(507, 3), float32], Tensor[(13, 13, 9), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) */;
  %946 = divide(%937, %938) /* ty=Tensor[(7, 12, 1), float64] */;
  %947 = exp(%941) /* ty=Tensor[(3, 6, 4), float64] */;
  %948 = %942.0;
  %949 = %945.3;
  (%946, %947, %948, %949, meta[relay.Constant][49] /* ty=Tensor[(450), float64] */)
}

def @func_10539() -> (Tensor[(540), float64], Tensor[(1512), float64], Tensor[(540), float64]) {
  %950 = @func_7422() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %951 = @func_6878() /* ty=(Tensor[(540), float64],) */;
  %952 = %950.0;
  %953 = @func_5929() /* ty=Tensor[(1512), float64] */;
  %954 = %951.0;
  (%952, %953, %954)
}

def @func_2740(%var_2735: Tensor[(156), uint32]) -> (Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  %955 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %956 = cast(%var_2735, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %957 = cast(meta[relay.Constant][50] /* ty=Tensor[(2184), uint32] */, dtype="uint32") /* ty=Tensor[(2184), uint32] */;
  %958 = reshape(%956, newshape=[13, 1, 12]) /* ty=Tensor[(13, 1, 12), uint32] */;
  %959 = reshape(%957, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), uint32] */;
  %960 = @func_227(%958, %959) /* ty=(Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) */;
  %961 = %955.2;
  %962 = %960.2;
  (%961, %962, %var_2735, meta[relay.Constant][50] /* ty=Tensor[(2184), uint32] */)
}

def @func_2017(%var_1995: Tensor[(10, 7, 7), bool], %var_2003: Tensor[(756, 2), uint16], %var_2009: Tensor[(10, 7, 7), bool]) -> (Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) {
  %963 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 7, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %964 = shape_of(%var_1995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%var_1995, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %967 = cast(%var_2003, dtype="uint16") /* ty=Tensor[(756, 2), uint16] */;
  %968 = cast(%var_2003, dtype="uint16") /* ty=Tensor[(756, 2), uint16] */;
  %969 = reshape(%967, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %970 = reshape(%968, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %971 = @func_260(%969, %970) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) */;
  %972 = cast(%var_2009, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %973 = shape_of(%var_1995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %974 = cast(%var_1995, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %976 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 7, 7), bool] */, dtype="float64") /* ty=Tensor[(10, 7, 7), float64] */;
  %977 = logical_and(%965, %966) /* ty=Tensor[(10, 7, 7), bool] */;
  %978 = %971.1;
  %979 = equal(%974, %975) /* ty=Tensor[(10, 7, 7), bool] */;
  %980 = asinh(%976) /* ty=Tensor[(10, 7, 7), float64] */;
  (%977, %978, %var_2003, %979, %980)
}

def @func_8312() -> (Tensor[(540), float64],) {
  %981 = @func_2905() /* ty=Tensor[(540), float64] */;
  (%981,)
}

def @func_1363(%var_1342: Tensor[(4, 13, 10), int32]) -> (Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) {
  %982 = cast(meta[relay.Constant][52] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %983 = cast(meta[relay.Constant][52] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %984 = reshape(%982, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %985 = reshape(%983, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %986 = @func_921(%984, %985) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %987 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 13, 10), int32] */, dtype="int32") /* ty=Tensor[(4, 13, 10), int32] */;
  %988 = shape_of(%var_1342, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%var_1342, dtype="int32") /* ty=Tensor[(4, 13, 10), int32] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %991 = add(%989, %990) /* ty=Tensor[(4, 13, 10), int32] */;
  %992 = cast(%991, dtype="float32") /* ty=Tensor[(4, 13, 10), float32] */;
  %993 = %986.0;
  %994 = atan(%992) /* ty=Tensor[(4, 13, 10), float32] */;
  (%993, meta[relay.Constant][52] /* ty=Tensor[(450), float64] */, %994)
}

def @func_12821() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %995 = @func_8980() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64]) */;
  %996 = @func_3099() /* ty=(Tensor[(540), float64],) */;
  %997 = @func_5427() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
  %998 = @func_11787() /* ty=(Tensor[(540), float64],) */;
  %999 = %995.1;
  %1000 = %996.0;
  %1001 = %997.1;
  %1002 = %998.0;
  (%999, %1000, %1001, %1002)
}

def @func_12692() -> (Tensor[(540), float64],) {
  %1003 = @func_9634() /* ty=(Tensor[(540), float64],) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_8377(%var_8356: Tensor[(490), bool]) -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(756, 2), uint16], Tensor[(490), bool], Tensor[(1512), uint16], Tensor[(1512), float64], Tensor[(10, 45), float32]) {
  %1005 = @func_5869() /* ty=(Tensor[(540), float64],) */;
  %1006 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 45), float64] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %1007 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 45), float64] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %1008 = reshape(%1006, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %1009 = reshape(%1007, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %1010 = @func_921(%1008, %1009) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %1011 = cast(%var_8356, dtype="bool") /* ty=Tensor[(490), bool] */;
  %1012 = cast(meta[relay.Constant][55] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %1013 = cast(%var_8356, dtype="bool") /* ty=Tensor[(490), bool] */;
  %1014 = reshape(%1011, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %1015 = reshape(%1012, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %1016 = reshape(%1013, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %1017 = @func_2017(%1014, %1015, %1016) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %1018 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 45), float64] */, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %1019 = %1005.0;
  %1020 = %1010.0;
  %1021 = %1017.2;
  %1022 = @func_5929() /* ty=Tensor[(1512), float64] */;
  %1023 = cos(%1018) /* ty=Tensor[(10, 45), float32] */;
  (%1019, %1020, %1021, %var_8356, meta[relay.Constant][55] /* ty=Tensor[(1512), uint16] */, %1022, %1023)
}

def @func_12739() -> Tensor[(540), float64] {
  %1024 = @func_7529() /* ty=(Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(2, 15, 15), float64]) */;
  %1024.0
}

def @func_3801() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %1025 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %1026 = @func_2905() /* ty=Tensor[(540), float64] */;
  %1027 = %1025.0;
  (%1026, %1027)
}

def @func_11787() -> (Tensor[(540), float64],) {
  %1028 = @func_5735() /* ty=Tensor[(540), float64] */;
  (%1028,)
}

def @func_2786(%var_2780: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32],) {
  %1029 = cast(%var_2780, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %1030 = sin(%1029) /* ty=Tensor[(12, 16, 12), float32] */;
  (%1030,)
}

def @func_5354() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %1031 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %1032 = %1031.0;
  %1033 = @func_2879() /* ty=Tensor[(540), float64] */;
  %1034 = @func_4166() /* ty=Tensor[(540), float64] */;
  (%1032, %1033, %1034)
}

def @func_3065() -> Tensor[(540), float64] {
  %1035 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1035.0
}

def @func_6599() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %1036 = @func_5093() /* ty=(Tensor[(540), float64],) */;
  %1037 = %1036.0;
  %1038 = @func_2177() /* ty=Tensor[(540), float64] */;
  (%1037, %1038)
}

def @func_6126(%var_6101: Tensor[(4, 1, 1), float32], %var_6102: Tensor[(4, 14, 2), float32], %var_6117: Tensor[(2304), float32]) -> (Tensor[(4, 14, 2), int8], Tensor[(12, 16, 12), float32], Tensor[(2304), float32]) {
  %1039 = cast(%var_6101, dtype="float32") /* ty=Tensor[(4, 1, 1), float32] */;
  %1040 = cast(%var_6102, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
  %1041 = divide(%1039, %1040) /* ty=Tensor[(4, 14, 2), float32] */;
  %1042 = cast(%1041, dtype="int8") /* ty=Tensor[(4, 14, 2), int8] */;
  %1043 = shape_of(%var_6102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%var_6102, dtype="int8") /* ty=Tensor[(4, 14, 2), int8] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1046 = cast(%var_6117, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1047 = reshape(%1046, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
  %1048 = @func_2786(%1047) /* ty=(Tensor[(12, 16, 12), float32],) */;
  %1049 = bitwise_xor(%1044, %1045) /* ty=Tensor[(4, 14, 2), int8] */;
  %1050 = %1048.0;
  (%1049, %1050, %var_6117)
}

def @func_227(%var_195: Tensor[(13, 1, 12), uint32], %var_196: Tensor[(13, 14, 12), uint32]) -> (Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) {
  %1051 = cast(%var_195, dtype="uint32") /* ty=Tensor[(13, 1, 12), uint32] */;
  %1052 = cast(%var_196, dtype="uint32") /* ty=Tensor[(13, 14, 12), uint32] */;
  %1053 = cast(meta[relay.Constant][56] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %1054 = reshape(%1053, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %1055 = @func_78(%1054) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %1056 = cast(%var_195, dtype="bool") /* ty=Tensor[(13, 1, 12), bool] */;
  %1057 = cast(%var_196, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
  %1058 = cast(meta[relay.Constant][56] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %1059 = reshape(%1058, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %1060 = @func_78(%1059) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %1061 = bitwise_and(%1051, %1052) /* ty=Tensor[(13, 14, 12), uint32] */;
  %1062 = %1055.0;
  %1063 = logical_or(%1056, %1057) /* ty=Tensor[(13, 14, 12), bool] */;
  %1064 = %1060.0;
  (%1061, %1062, meta[relay.Constant][56] /* ty=Tensor[(1521), float32] */, %1063, %1064)
}

def @func_9390() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %1065 = @func_5772() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1066 = @func_6557() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1067 = @func_8559() /* ty=(Tensor[(540), float64],) */;
  %1068 = %1065.1;
  %1069 = %1066.1;
  %1070 = %1067.0;
  (%1068, %1069, %1070)
}

def @func_11599() -> (Tensor[(540), float64],) {
  %1071 = @func_2879() /* ty=Tensor[(540), float64] */;
  (%1071,)
}

def @func_4119() -> (Tensor[(540), float64],) {
  %1072 = @func_2879() /* ty=Tensor[(540), float64] */;
  (%1072,)
}

def @func_5532() -> (Tensor[(540), float64],) {
  %1073 = @func_4259() /* ty=(Tensor[(540), float64],) */;
  %1074 = %1073.0;
  (%1074,)
}

def @func_1117(%var_1094: Tensor[(4, 15, 9), float64], %var_1095: Tensor[(4, 15, 9), float64]) -> Tensor[(4, 15, 9), bool] {
  %1075 = cast(%var_1095, dtype="bool") /* ty=Tensor[(4, 15, 9), bool] */;
  %1076 = shape_of(%var_1094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1077 = cast(%var_1094, dtype="bool") /* ty=Tensor[(4, 15, 9), bool] */;
  %1078 = dyn.reshape(%1075, %1076, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1077, %1078) /* ty=Tensor[(4, 15, 9), bool] */
}

def @func_12167() -> Tensor[(540), float64] {
  %1079 = @func_8605() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1079.1
}

def @func_6856(%var_6841: Tensor[(6, 4, 13), float64]) -> (Tensor[(6, 4, 13), float64], Tensor[(540), float64]) {
  %1080 = cast(%var_6841, dtype="float64") /* ty=Tensor[(6, 4, 13), float64] */;
  %1081 = @func_5617() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1082 = asinh(%1080) /* ty=Tensor[(6, 4, 13), float64] */;
  %1083 = %1081.1;
  (%1082, %1083)
}

def @func_6878() -> (Tensor[(540), float64],) {
  %1084 = @func_6806() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %1085 = %1084.1;
  (%1085,)
}

def @func_78(%var_55: Tensor[(13, 13, 9), float32]) -> (Tensor[(13, 13, 9), float32],) {
  %1086 = cast(%var_55, dtype="float32") /* ty=Tensor[(13, 13, 9), float32] */;
  %1087 = exp(%1086) /* ty=Tensor[(13, 13, 9), float32] */;
  (%1087,)
}

def @func_4016() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %1088 = @func_3065() /* ty=Tensor[(540), float64] */;
  %1089 = @func_2177() /* ty=Tensor[(540), float64] */;
  (%1088, %1089)
}

def @func_2698() -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) {
  %1090 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %1091 = @func_2438() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) */;
  %1092 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %1093 = %1090.0;
  %1094 = %1091.1;
  %1095 = %1092.0;
  (%1093, %1094, %1095)
}

def @func_7127() -> (Tensor[(540), float64],) {
  %1096 = @func_2768() /* ty=Tensor[(540), float64] */;
  (%1096,)
}

def @func_7422() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %1097 = @func_5772() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1098 = @func_5617() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1099 = %1097.1;
  %1100 = %1098.1;
  (%1099, %1100)
}

def @func_5869() -> (Tensor[(540), float64],) {
  %1101 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1102 = %1101.1;
  (%1102,)
}

def @func_9712() -> (Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) {
  %1103 = @func_6599() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1104 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
  %1105 = cast(meta[relay.Constant][57] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %1106 = reshape(%1105, newshape=[1512]) /* ty=Tensor[(1512), uint16] */;
  %1107 = @func_2571(%1106) /* ty=(Tensor[(540), float64], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) */;
  %1108 = %1103.0;
  %1109 = %1104.1;
  %1110 = %1107.1;
  (%1108, %1109, %1110, meta[relay.Constant][57] /* ty=Tensor[(1512), uint16] */)
}

def @func_12182() -> (Tensor[(3, 2, 12), float32],) {
  %1111 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 12), float32] */;
  %1112 = tan(%1111) /* ty=Tensor[(3, 2, 12), float32] */;
  (%1112,)
}

def @func_7274() -> Tensor[(540), float64] {
  %1113 = @func_6557() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1113.0
}

def @func_12580() -> Tensor[(540), float64] {
  %1114 = @func_9390() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %1114.2
}

def @func_12898(%var_12856: Tensor[(10, 14, 4), int32]) -> (Tensor[(10, 14, 4), bool], Tensor[(10, 14, 4), bool], Tensor[(520), int32], Tensor[(520), int32]) {
  %1115 = cast(%var_12856, dtype="int32") /* ty=Tensor[(10, 14, 4), int32] */;
  %1116 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(10, 14, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1117 = cast(meta[relay.Constant][59] /* ty=Tensor[(10, 14, 4), int32] */, dtype="int32") /* ty=Tensor[(10, 14, 4), int32] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1119 = bitwise_xor(%1117, %1118) /* ty=Tensor[(10, 14, 4), int32] */;
  %1120 = cast(meta[relay.Constant][60] /* ty=Tensor[(10, 14, 4), int32] */, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %1121 = shape_of(%1119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1122 = cast(%1119, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %1123 = dyn.reshape(%1120, %1121, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1124 = cast(%var_12856, dtype="float32") /* ty=Tensor[(10, 14, 4), float32] */;
  %1125 = atanh(%1124) /* ty=Tensor[(10, 14, 4), float32] */;
  %1126 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 14, 4), float32] */, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %1127 = shape_of(%1125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(%1125, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1130 = cast(meta[relay.Constant][62] /* ty=Tensor[(520), int32] */, dtype="int32") /* ty=Tensor[(520), int32] */;
  %1131 = reshape(%1130, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %1132 = @func_1862(%1131) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) */;
  %1133 = greater(%1122, %1123) /* ty=Tensor[(10, 14, 4), bool] */;
  %1134 = less(%1128, %1129) /* ty=Tensor[(10, 14, 4), bool] */;
  %1135 = %1132.2;
  (%1133, %1134, %1135, meta[relay.Constant][62] /* ty=Tensor[(520), int32] */)
}

def @func_9797(%var_9736: Tensor[(6, 490), bool], %var_9765: Tensor[(308), float64], %var_9766: Tensor[(156), uint32], %var_9767: Tensor[(2, 1092), uint32], %var_9779: Tensor[(1521), float32]) -> (Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(1512), uint16], Tensor[(6, 490), float32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(308), float64], Tensor[(156), uint32], Tensor[(2, 1092), uint32], Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(1521), float32]) {
  %1136 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 490), bool] */, dtype="bool") /* ty=Tensor[(1, 490), bool] */;
  %1137 = cast(meta[relay.Constant][64] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %1138 = reshape(%1136, newshape=[7, 70]) /* ty=Tensor[(7, 70), bool] */;
  %1139 = reshape(%1137, newshape=[1512]) /* ty=Tensor[(1512), uint16] */;
  %1140 = @func_3005(%1138, %1139) /* ty=(Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(7, 70), bool], Tensor[(1512), uint16]) */;
  %1141 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 490), bool] */, dtype="float32") /* ty=Tensor[(1, 490), float32] */;
  %1142 = cast(%var_9736, dtype="float32") /* ty=Tensor[(6, 490), float32] */;
  %1143 = @func_9390() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %1144 = @func_5772() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1145 = cast(%var_9765, dtype="float64") /* ty=Tensor[(308), float64] */;
  %1146 = cast(%var_9766, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %1147 = cast(%var_9767, dtype="uint32") /* ty=Tensor[(2, 1092), uint32] */;
  %1148 = reshape(%1145, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), float64] */;
  %1149 = reshape(%1146, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %1150 = reshape(%1147, newshape=[2184]) /* ty=Tensor[(2184), uint32] */;
  %1151 = @func_9015(%1148, %1149, %1150) /* ty=(Tensor[(2, 11, 14), bool], Tensor[(540), float64], Tensor[(13, 14, 12), uint32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
  %1152 = @func_7951() /* ty=(Tensor[(540), float64],) */;
  %1153 = cast(%var_9779, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %1154 = reshape(%1153, newshape=[1521]) /* ty=Tensor[(1521), float32] */;
  %1155 = @func_9500(%1154) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(1521), float32], Tensor[(1521), float32], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64]) */;
  %1156 = @func_5735() /* ty=Tensor[(540), float64] */;
  %1157 = %1140.1;
  %1158 = mod(%1141, %1142) /* ty=Tensor[(6, 490), float32] */;
  %1159 = %1143.1;
  %1160 = %1144.0;
  %1161 = %1151.1;
  %1162 = %1152.0;
  %1163 = %1155.0;
  (%1156, %1157, meta[relay.Constant][64] /* ty=Tensor[(1512), uint16] */, %1158, %1159, %1160, %1161, %var_9765, %var_9766, %var_9767, %1162, %1163, %var_9779)
}

def @func_11353() -> (Tensor[(2, 15, 15), float32], Tensor[(540), float64]) {
  %1164 = @func_7156() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) */;
  %1165 = %1164.0;
  %1166 = cast(%1165, dtype="float32") /* ty=Tensor[(2, 15, 15), float32] */;
  %1167 = tan(%1166) /* ty=Tensor[(2, 15, 15), float32] */;
  %1168 = @func_2768() /* ty=Tensor[(540), float64] */;
  (%1167, %1168)
}

def @func_8794() -> (Tensor[(540), float64],) {
  %1169 = @func_3503() /* ty=Tensor[(540), float64] */;
  (%1169,)
}

def @func_10839() -> (Tensor[(540), float64], Tensor[(450), float64], Tensor[(450), float64]) {
  %1170 = @func_3801() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1171 = cast(meta[relay.Constant][65] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1172 = reshape(%1171, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %1173 = @func_10569(%1172) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float64], Tensor[(520), int32]) */;
  %1174 = %1170.1;
  %1175 = %1173.2;
  (%1174, %1175, meta[relay.Constant][65] /* ty=Tensor[(450), float64] */)
}

def @func_10073(%var_10061: Tensor[(2, 8, 16), float64]) -> Tensor[(2, 8, 16), float64] {
  %1176 = cast(%var_10061, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
  erf(%1176) /* ty=Tensor[(2, 8, 16), float64] */
}

def @func_7372(%var_7358: Tensor[(1521), float32]) -> (Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32]) {
  %1177 = @func_5617() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1178 = cast(%var_7358, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %1179 = reshape(%1178, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %1180 = @func_78(%1179) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %1181 = %1177.1;
  %1182 = %1180.0;
  (%1181, %1182, %var_7358)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @main(%var_13203: Tensor[(4, 9, 12), float64], %var_13224: Tensor[(4, 9, 12), float64]) -> (Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool]) {
  %0 = cast(%var_13203, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
  %1 = cast(%var_13224, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %2 = shape_of(%var_13203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%var_13203, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %5 = sinh(%0) /* ty=Tensor[(4, 9, 12), float64] */;
  %6 = less_equal(%3, %4) /* ty=Tensor[(4, 9, 12), bool] */;
  (%5, %6)
}

def @func_5024() -> (Tensor[(1512), float64],) {
  @func_5022() /* ty=(Tensor[(1512), float64],) */
}

def @func_9636() -> (Tensor[(540), float64],) {
  @func_9634() /* ty=(Tensor[(540), float64],) */
}

def @func_12686(%var_12684: Tensor[(450), float64]) -> (Tensor[(6, 4, 5), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) {
  @func_12683(%var_12684) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) */
}

def @func_12898(%var_12856: Tensor[(10, 14, 4), int32]) -> (Tensor[(10, 14, 4), bool], Tensor[(10, 14, 4), bool], Tensor[(520), int32], Tensor[(520), int32]) {
  %7 = cast(%var_12856, dtype="int32") /* ty=Tensor[(10, 14, 4), int32] */;
  %8 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(10, 14, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 14, 4), int32] */, dtype="int32") /* ty=Tensor[(10, 14, 4), int32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %11 = bitwise_xor(%9, %10) /* ty=Tensor[(10, 14, 4), int32] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 14, 4), int32] */, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%11, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %16 = cast(%var_12856, dtype="float32") /* ty=Tensor[(10, 14, 4), float32] */;
  %17 = atanh(%16) /* ty=Tensor[(10, 14, 4), float32] */;
  %18 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 14, 4), float32] */, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%17, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %22 = cast(meta[relay.Constant][3] /* ty=Tensor[(520), int32] */, dtype="int32") /* ty=Tensor[(520), int32] */;
  %23 = reshape(%22, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %24 = @func_1862(%23) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) */;
  %25 = greater(%14, %15) /* ty=Tensor[(10, 14, 4), bool] */;
  %26 = less(%20, %21) /* ty=Tensor[(10, 14, 4), bool] */;
  %27 = %24.2;
  (%25, %26, %27, meta[relay.Constant][3] /* ty=Tensor[(520), int32] */)
}

def @func_9596(%var_9594: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), uint16]) {
  @func_9593(%var_9594) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), uint16]) */
}

def @func_11724(%var_11722: Tensor[(450), float64]) -> (Tensor[(540), float64], Tensor[(450), float64], Tensor[(450), float64]) {
  @func_11721(%var_11722) /* ty=(Tensor[(540), float64], Tensor[(450), float64], Tensor[(450), float64]) */
}

def @func_5804() -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64]) {
  %30 = fn () -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64]) {
    %28 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
    %29 = @func_1991() /* ty=Tensor[(540), float64] */;
    (%28, %29)
  };
  %30() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */
}

def @func_5355() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %35 = fn () -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
    %31 = @func_2382() /* ty=(Tensor[(540), float64],) */;
    %32 = %31.0;
    %33 = @func_2879() /* ty=Tensor[(540), float64] */;
    %34 = @func_4166() /* ty=Tensor[(540), float64] */;
    (%32, %33, %34)
  };
  %35() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_8187() -> (Tensor[(540), float64], Tensor[(169, 9), float32], Tensor[(1521), float32]) {
  @func_8185() /* ty=(Tensor[(540), float64], Tensor[(169, 9), float32], Tensor[(1521), float32]) */
}

def @func_3065() -> Tensor[(540), float64] {
  %36 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %36.0
}

def @func_10073(%var_10061: Tensor[(2, 8, 16), float64]) -> Tensor[(2, 8, 16), float64] {
  %37 = cast(%var_10061, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
  erf(%37) /* ty=Tensor[(2, 8, 16), float64] */
}

def @func_12280() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_12278() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_11261() -> Tensor[(540), float64] {
  %38 = fn () -> Tensor[(540), float64] {
    @func_2905() /* ty=Tensor[(540), float64] */
  };
  %38() /* ty=Tensor[(540), float64] */
}

def @func_12822() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %47 = fn () -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
    %39 = @func_8980() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64]) */;
    %40 = @func_3099() /* ty=(Tensor[(540), float64],) */;
    %41 = @func_5427() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
    %42 = @func_11787() /* ty=(Tensor[(540), float64],) */;
    %43 = %39.1;
    %44 = %40.0;
    %45 = %41.1;
    %46 = %42.0;
    (%43, %44, %45, %46)
  };
  %47() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_6257() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) {
  @func_6255() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) */
}

def @func_2382() -> (Tensor[(540), float64],) {
  %48 = @func_1991() /* ty=Tensor[(540), float64] */;
  (%48,)
}

def @func_6215() -> (Tensor[(6, 4, 5), float32], Tensor[(540), float64]) {
  @func_6213() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */
}

def @func_8377(%var_8356: Tensor[(490), bool]) -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(756, 2), uint16], Tensor[(490), bool], Tensor[(1512), uint16], Tensor[(1512), float64], Tensor[(10, 45), float32]) {
  %49 = @func_5869() /* ty=(Tensor[(540), float64],) */;
  %50 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 45), float64] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 45), float64] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %52 = reshape(%50, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %53 = reshape(%51, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %54 = @func_921(%52, %53) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %55 = cast(%var_8356, dtype="bool") /* ty=Tensor[(490), bool] */;
  %56 = cast(meta[relay.Constant][5] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %57 = cast(%var_8356, dtype="bool") /* ty=Tensor[(490), bool] */;
  %58 = reshape(%55, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %59 = reshape(%56, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %60 = reshape(%57, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %61 = @func_2017(%58, %59, %60) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 45), float64] */, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %63 = %49.0;
  %64 = %54.0;
  %65 = %61.2;
  %66 = @func_5929() /* ty=Tensor[(1512), float64] */;
  %67 = cos(%62) /* ty=Tensor[(10, 45), float32] */;
  (%63, %64, %65, %var_8356, meta[relay.Constant][5] /* ty=Tensor[(1512), uint16] */, %66, %67)
}

def @func_4168() -> Tensor[(540), float64] {
  @func_4166() /* ty=Tensor[(540), float64] */
}

def @func_13188() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(1521), float32]) {
  @func_13186() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(1521), float32]) */
}

def @func_3707() -> Tensor[(540), float64] {
  %68 = fn () -> Tensor[(540), float64] {
    @func_2467() /* ty=Tensor[(540), float64] */
  };
  %68() /* ty=Tensor[(540), float64] */
}

def @func_1576() -> (Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) {
  %76 = fn () -> (Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) {
    %69 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(6, 4, 5), float32] */;
    %70 = cast(meta[relay.Constant][7] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %71 = cast(meta[relay.Constant][7] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %72 = reshape(%70, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
    %73 = reshape(%71, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
    %74 = atanh(%69) /* ty=Tensor[(6, 4, 5), float32] */;
    %75 = @func_1117(%72, %73) /* ty=Tensor[(4, 15, 9), bool] */;
    (%74, %75, meta[relay.Constant][7] /* ty=Tensor[(540), float64] */)
  };
  %76() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */
}

def @func_4597() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(540), float64]) {
  %82 = fn () -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(540), float64]) {
    %77 = @func_2698() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */;
    %78 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
    %79 = %77.2;
    %80 = %78.0;
    %81 = @func_4166() /* ty=Tensor[(540), float64] */;
    (%79, %80, %81)
  };
  %82() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */
}

def @func_6458(%var_6456: Tensor[(520), int32]) -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(4, 13, 10), float32], Tensor[(520), int32]) {
  @func_6455(%var_6456) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(4, 13, 10), float32], Tensor[(520), int32]) */
}

def @func_11688(%var_11687: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) {
  %89 = fn (%var_11679: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) {
    %83 = @func_8559() /* ty=(Tensor[(540), float64],) */;
    %84 = cast(%var_11679, dtype="int32") /* ty=Tensor[(520), int32] */;
    %85 = reshape(%84, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
    %86 = @func_1363(%85) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
    %87 = %83.0;
    %88 = %86.0;
    (%87, %88, %var_11679)
  };
  %89(%var_11687) /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) */
}

def @func_11600() -> (Tensor[(540), float64],) {
  %91 = fn () -> (Tensor[(540), float64],) {
    %90 = @func_2879() /* ty=Tensor[(540), float64] */;
    (%90,)
  };
  %91() /* ty=(Tensor[(540), float64],) */
}

def @func_8795() -> (Tensor[(540), float64],) {
  %93 = fn () -> (Tensor[(540), float64],) {
    %92 = @func_3503() /* ty=Tensor[(540), float64] */;
    (%92,)
  };
  %93() /* ty=(Tensor[(540), float64],) */
}

def @func_12082(%var_12047: Tensor[(1, 450), float64]) -> (Tensor[(540), float64], Tensor[(?, 450), bool], Tensor[(2, 15, 15), float64]) {
  %94 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %95 = cast(%var_12047, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
  %96 = reshape(%95, newshape=[450, 1]) /* ty=Tensor[(450, 1), float64] */;
  %97 = @func_3654(%96) /* ty=(Tensor[(540), float64], Tensor[(156), uint32], Tensor[(156), uint32], Tensor[(2, 15, 15), bool], Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(450, 1), float64], Tensor[(2, 15, 15), float64], Tensor[(12, 11, 15), float32], Tensor[(9, 220), float32], Tensor[(2, 15, 15), float64]) */;
  %98 = %97.3;
  %99 = cast(%98, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %100 = shape_of(%var_12047, dtype="int32") /* ty=Tensor[(2), int32] */;
  %101 = cast(%var_12047, dtype="bool") /* ty=Tensor[(1, 450), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %103 = @func_5803() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */;
  %104 = %94.1;
  %105 = logical_or(%101, %102) /* ty=Tensor[(?, 450), bool] */;
  %106 = %103.0;
  (%104, %105, %106)
}

def @func_1781(%var_1727: Tensor[(450), float64], %var_1753: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float32], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) {
  %107 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %108 = %107.2;
  %109 = cast(%108, dtype="float64") /* ty=Tensor[(540), float64] */;
  %110 = cast(%108, dtype="float64") /* ty=Tensor[(540), float64] */;
  %111 = reshape(%109, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %112 = reshape(%110, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %113 = cast(%var_1727, dtype="float64") /* ty=Tensor[(450), float64] */;
  %114 = cast(%var_1727, dtype="float64") /* ty=Tensor[(450), float64] */;
  %115 = reshape(%113, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %116 = reshape(%114, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %117 = @func_921(%115, %116) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %118 = cast(%108, dtype="float64") /* ty=Tensor[(540), float64] */;
  %119 = @func_1117(%111, %112) /* ty=Tensor[(4, 15, 9), bool] */;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(4, 15, 9), float64] */;
  %121 = reshape(%118, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %122 = reshape(%120, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %123 = cast(%var_1727, dtype="float32") /* ty=Tensor[(450), float32] */;
  %124 = cast(%var_1753, dtype="int32") /* ty=Tensor[(520), int32] */;
  %125 = reshape(%124, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %126 = @func_1363(%125) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %127 = %117.0;
  %128 = @func_1117(%121, %122) /* ty=Tensor[(4, 15, 9), bool] */;
  %129 = acosh(%123) /* ty=Tensor[(450), float32] */;
  %130 = %126.0;
  (%108, %119, %127, %128, %129, %130, %var_1753)
}

def @func_3370() -> (Tensor[(540), float64],) {
  %133 = fn () -> (Tensor[(540), float64],) {
    %131 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
    %132 = %131.0;
    (%132,)
  };
  %133() /* ty=(Tensor[(540), float64],) */
}

def @func_7901() -> (Tensor[(540), float64],) {
  %136 = fn () -> (Tensor[(540), float64],) {
    %134 = @func_6705() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
    %135 = %134.0;
    (%135,)
  };
  %136() /* ty=(Tensor[(540), float64],) */
}

def @func_80(%var_79: Tensor[(13, 13, 9), float32]) -> (Tensor[(13, 13, 9), float32],) {
  %139 = fn (%var_55: Tensor[(13, 13, 9), float32]) -> (Tensor[(13, 13, 9), float32],) {
    %137 = cast(%var_55, dtype="float32") /* ty=Tensor[(13, 13, 9), float32] */;
    %138 = exp(%137) /* ty=Tensor[(13, 13, 9), float32] */;
    (%138,)
  };
  %139(%var_79) /* ty=(Tensor[(13, 13, 9), float32],) */
}

def @func_5512() -> Tensor[(540), float64] {
  %141 = fn () -> Tensor[(540), float64] {
    %140 = @func_3801() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %140.0
  };
  %141() /* ty=Tensor[(540), float64] */
}

def @func_6520(%var_6518: Tensor[(1521), float32]) -> (Tensor[(540), float64], Tensor[(1521), uint8], Tensor[(1521), int8], Tensor[(1521), float32]) {
  @func_6517(%var_6518) /* ty=(Tensor[(540), float64], Tensor[(1521), uint8], Tensor[(1521), int8], Tensor[(1521), float32]) */
}

def @func_12235() -> Tensor[(540), float64] {
  %143 = fn () -> Tensor[(540), float64] {
    %142 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %142.0
  };
  %143() /* ty=Tensor[(540), float64] */
}

def @func_3008(%var_3006: Tensor[(7, 70), bool], %var_3007: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(7, 70), bool], Tensor[(1512), uint16]) {
  %153 = fn (%var_3000: Tensor[(7, 70), bool], %var_3001: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(7, 70), bool], Tensor[(1512), uint16]) {
    %144 = cast(%var_3000, dtype="bool") /* ty=Tensor[(7, 70), bool] */;
    %145 = cast(%var_3001, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
    %146 = cast(%var_3000, dtype="bool") /* ty=Tensor[(7, 70), bool] */;
    %147 = reshape(%144, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
    %148 = reshape(%145, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
    %149 = reshape(%146, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
    %150 = @func_2017(%147, %148, %149) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
    %151 = @func_2177() /* ty=Tensor[(540), float64] */;
    %152 = %150.2;
    (%151, %152, %var_3000, %var_3001)
  };
  %153(%var_3006, %var_3007) /* ty=(Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(7, 70), bool], Tensor[(1512), uint16]) */
}

def @func_2641() -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) {
  %162 = fn () -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) {
    %154 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
    %155 = cast(meta[relay.Constant][8] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
    %156 = cast(meta[relay.Constant][8] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
    %157 = reshape(%155, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
    %158 = reshape(%156, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
    %159 = @func_921(%157, %158) /* ty=(Tensor[(2, 15, 15), float64],) */;
    %160 = %154.2;
    %161 = %159.0;
    (%160, %161, meta[relay.Constant][8] /* ty=Tensor[(450), float64] */)
  };
  %162() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */
}

def @func_6880() -> (Tensor[(540), float64],) {
  @func_6878() /* ty=(Tensor[(540), float64],) */
}

def @func_5387() -> Tensor[(540), float64] {
  %163 = fn () -> Tensor[(540), float64] {
    @func_1991() /* ty=Tensor[(540), float64] */
  };
  %163() /* ty=Tensor[(540), float64] */
}

def @func_8559() -> (Tensor[(540), float64],) {
  %164 = @func_5354() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %165 = %164.2;
  (%165,)
}

def @func_4062() -> Tensor[(10, 45), float64] {
  %166 = @func_2438() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) */;
  %166.2
}

def @func_4845() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %170 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %167 = @func_3801() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %168 = %167.0;
    %169 = @func_3706() /* ty=Tensor[(540), float64] */;
    (%168, %169)
  };
  %170() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_6078() -> (Tensor[(2, 15, 15), float64], Tensor[(1512), float64]) {
  @func_6076() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(1512), float64]) */
}

def @func_6455(%var_6420: Tensor[(520), int32]) -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(4, 13, 10), float32], Tensor[(520), int32]) {
  %171 = @func_2438() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) */;
  %172 = @func_4608() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %173 = cast(%var_6420, dtype="int32") /* ty=Tensor[(520), int32] */;
  %174 = reshape(%173, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %175 = @func_1363(%174) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %176 = %171.1;
  %177 = %172.0;
  %178 = %175.2;
  (%176, %177, %178, %var_6420)
}

def @func_11253() -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64]) {
  @func_11251() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */
}

def @func_3050() -> Tensor[(2, 15, 15), float64] {
  %179 = fn () -> Tensor[(2, 15, 15), float64] {
    @func_2707() /* ty=Tensor[(2, 15, 15), float64] */
  };
  %179() /* ty=Tensor[(2, 15, 15), float64] */
}

def @func_4758(%var_4752: Tensor[(6, 252), uint16]) -> (Tensor[(2, 15, 15), float64], Tensor[(12, 9, 14), int8], Tensor[(490), bool], Tensor[(6, 252), uint16]) {
  %180 = @func_3253() /* ty=Tensor[(2, 15, 15), bool] */;
  %181 = cast(%180, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %182 = cast(meta[relay.Constant][9] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %183 = cast(%var_4752, dtype="uint16") /* ty=Tensor[(6, 252), uint16] */;
  %184 = cast(meta[relay.Constant][9] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %185 = reshape(%182, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %186 = reshape(%183, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %187 = reshape(%184, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %188 = @func_2017(%185, %186, %187) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %189 = cosh(%181) /* ty=Tensor[(2, 15, 15), float64] */;
  %190 = %188.1;
  (%189, %190, meta[relay.Constant][9] /* ty=Tensor[(490), bool] */, %var_4752)
}

def @func_11322() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %191 = @func_9634() /* ty=(Tensor[(540), float64],) */;
  %192 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %193 = %191.0;
  %194 = %192.0;
  (%193, %194)
}

def @func_11572(%var_11551: Tensor[(2304), float32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2304), bool], Tensor[(540), float64]) {
  %195 = @func_3790() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %196 = @func_11322() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %197 = @func_11022() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(10, 45), float32]) */;
  %198 = cast(%var_11551, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %199 = reshape(%198, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
  %200 = @func_2786(%199) /* ty=(Tensor[(12, 16, 12), float32],) */;
  %201 = %200.0;
  %202 = cast(%201, dtype="bool") /* ty=Tensor[(12, 16, 12), bool] */;
  %203 = shape_of(%var_11551, dtype="int32") /* ty=Tensor[(1), int32] */;
  %204 = cast(%var_11551, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?), bool] */;
  %206 = @func_7951() /* ty=(Tensor[(540), float64],) */;
  %207 = %195.0;
  %208 = %196.1;
  %209 = @func_4166() /* ty=Tensor[(540), float64] */;
  %210 = %197.1;
  %211 = not_equal(%204, %205) /* ty=Tensor[(2304), bool] */;
  %212 = %206.0;
  (%207, %208, %209, %210, %211, %212)
}

def @func_12494() -> (Tensor[(540), float64],) {
  @func_12492() /* ty=(Tensor[(540), float64],) */
}

def @func_11086(%var_11083: Tensor[(1, 3, 9), float32], %var_11084: Tensor[(39, 4), uint32], %var_11085: Tensor[(2, 960), float32]) -> (Tensor[(2184), uint32], Tensor[(39, 4), uint32], Tensor[(16, 10, 12), float32], Tensor[(2, 960), float32], Tensor[(7, 3, 9), uint64]) {
  @func_11081(%var_11083, %var_11084, %var_11085) /* ty=(Tensor[(2184), uint32], Tensor[(39, 4), uint32], Tensor[(16, 10, 12), float32], Tensor[(2, 960), float32], Tensor[(7, 3, 9), uint64]) */
}

def @func_921(%var_910: Tensor[(2, 15, 15), float64], %var_911: Tensor[(2, 15, 15), float64]) -> (Tensor[(2, 15, 15), float64],) {
  %213 = cast(%var_911, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %214 = shape_of(%var_910, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%var_910, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %217 = floor_divide(%215, %216) /* ty=Tensor[(2, 15, 15), float64] */;
  (%217,)
}

def @func_10243() -> (Tensor[(6, 4, 5), uint64],) {
  %218 = @func_6213() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
  %219 = %218.0;
  %220 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 4, 5), float32] */, dtype="uint64") /* ty=Tensor[(6, 4, 5), uint64] */;
  %221 = shape_of(%219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%219, dtype="uint64") /* ty=Tensor[(6, 4, 5), uint64] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %224 = subtract(%222, %223) /* ty=Tensor[(6, 4, 5), uint64] */;
  (%224,)
}

def @func_2857(%var_2855: Tensor[(2, 15, 15), float64], %var_2856: Tensor[(156), uint32]) -> (Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) {
  %235 = fn (%var_2836: Tensor[(2, 15, 15), float64], %var_2850: Tensor[(156), uint32]) -> (Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) {
    %225 = @func_2707() /* ty=Tensor[(2, 15, 15), float64] */;
    %226 = cast(%var_2836, dtype="int64") /* ty=Tensor[(2, 15, 15), int64] */;
    %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(%225, dtype="int64") /* ty=Tensor[(2, 15, 15), int64] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %230 = cast(%var_2850, dtype="uint32") /* ty=Tensor[(156), uint32] */;
    %231 = reshape(%230, newshape=[156]) /* ty=Tensor[(156), uint32] */;
    %232 = @func_2740(%231) /* ty=(Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
    %233 = minimum(%228, %229) /* ty=Tensor[(2, 15, 15), int64] */;
    %234 = %232.2;
    (%233, %234, %var_2850)
  };
  %235(%var_2855, %var_2856) /* ty=(Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) */
}

def @func_4277() -> (Tensor[(540), float64],) {
  @func_4275() /* ty=(Tensor[(540), float64],) */
}

def @func_13036() -> (Tensor[(540), float64],) {
  %236 = @func_4275() /* ty=(Tensor[(540), float64],) */;
  %237 = %236.0;
  (%237,)
}

def @func_1960() -> Tensor[(12, 11, 15), float32] {
  %238 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 11, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
  %239 = erf(%238) /* ty=Tensor[(12, 11, 15), float32] */;
  %240 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 11, 15), float32] */, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%239, dtype="int16") /* ty=Tensor[(12, 11, 15), int16] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %244 = subtract(%242, %243) /* ty=Tensor[(12, 11, 15), int16] */;
  %245 = cast(%244, dtype="float32") /* ty=Tensor[(12, 11, 15), float32] */;
  rsqrt(%245) /* ty=Tensor[(12, 11, 15), float32] */
}

def @func_7000(%var_6998: Tensor[(5, 104), int32], %var_6999: Tensor[(5, 104), int32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(5, 104), bool]) {
  %256 = fn (%var_6987: Tensor[(5, 104), int32], %var_6992: Tensor[(5, 104), int32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(5, 104), bool]) {
    %246 = cast(%var_6987, dtype="int32") /* ty=Tensor[(5, 104), int32] */;
    %247 = reshape(%246, newshape=[520]) /* ty=Tensor[(520), int32] */;
    %248 = @func_1862(%247) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) */;
    %249 = cast(%var_6992, dtype="bool") /* ty=Tensor[(5, 104), bool] */;
    %250 = shape_of(%var_6987, dtype="int32") /* ty=Tensor[(2), int32] */;
    %251 = cast(%var_6987, dtype="bool") /* ty=Tensor[(5, 104), bool] */;
    %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %253 = @func_3706() /* ty=Tensor[(540), float64] */;
    %254 = %248.3;
    %255 = greater(%251, %252) /* ty=Tensor[(5, 104), bool] */;
    (%253, %254, %255)
  };
  %256(%var_6998, %var_6999) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(5, 104), bool]) */
}

def @func_3235(%var_3233: Tensor[(450), float64]) -> (Tensor[(540), float32], Tensor[(507, 3), float32], Tensor[(13, 13, 9), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) {
  @func_3232(%var_3233) /* ty=(Tensor[(540), float32], Tensor[(507, 3), float32], Tensor[(13, 13, 9), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) */
}

def @func_2907() -> Tensor[(540), float64] {
  @func_2905() /* ty=Tensor[(540), float64] */
}

def @func_7177() -> (Tensor[(540), float64], Tensor[(13, 13, 9), float32]) {
  %257 = @func_5869() /* ty=(Tensor[(540), float64],) */;
  %258 = @func_6325() /* ty=(Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(450), float64]) */;
  %259 = %257.0;
  %260 = %258.1;
  (%259, %260)
}

def @func_11022() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(10, 45), float32]) {
  %261 = @func_9342() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %262 = @func_3369() /* ty=(Tensor[(540), float64],) */;
  %263 = @func_4062() /* ty=Tensor[(10, 45), float64] */;
  %264 = cast(%263, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %265 = log(%264) /* ty=Tensor[(10, 45), float64] */;
  %266 = cast(%265, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %267 = asin(%266) /* ty=Tensor[(10, 45), float64] */;
  %268 = cast(%267, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %269 = acos(%268) /* ty=Tensor[(10, 45), float64] */;
  %270 = cast(%267, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %271 = shape_of(%269, dtype="int32") /* ty=Tensor[(2), int32] */;
  %272 = cast(%269, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %274 = cast(%267, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %275 = @func_3065() /* ty=Tensor[(540), float64] */;
  %276 = %261.1;
  %277 = %262.0;
  %278 = power(%272, %273) /* ty=Tensor[(10, 45), float64] */;
  %279 = sinh(%274) /* ty=Tensor[(10, 45), float32] */;
  (%275, %276, %277, %278, %279)
}

def @func_6901(%var_6895: Tensor[(4, 3, 3), int16], %var_6896: Tensor[(4, 3, 3), int16]) -> (Tensor[(4, 3, 3), int16],) {
  %280 = cast(%var_6896, dtype="int16") /* ty=Tensor[(4, 3, 3), int16] */;
  %281 = shape_of(%var_6895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%var_6895, dtype="int16") /* ty=Tensor[(4, 3, 3), int16] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %284 = minimum(%282, %283) /* ty=Tensor[(4, 3, 3), int16] */;
  (%284,)
}

def @func_10694(%var_10686: Tensor[(1521, 1), float32]) -> (Tensor[(2, 15, 15), float64], Tensor[(156), uint32], Tensor[(3, 52), uint32], Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521, 540), bool]) {
  %285 = @func_2707() /* ty=Tensor[(2, 15, 15), float64] */;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %287 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 52), uint32] */, dtype="uint32") /* ty=Tensor[(3, 52), uint32] */;
  %288 = reshape(%286, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %289 = reshape(%287, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %290 = @func_2854(%288, %289) /* ty=(Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) */;
  %291 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %292 = cast(%var_10686, dtype="float32") /* ty=Tensor[(1521, 1), float32] */;
  %293 = reshape(%292, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %294 = @func_78(%293) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %295 = @func_5735() /* ty=Tensor[(540), float64] */;
  %296 = cast(%var_10686, dtype="bool") /* ty=Tensor[(1521, 1), bool] */;
  %297 = cast(%295, dtype="bool") /* ty=Tensor[(540), bool] */;
  %298 = %290.2;
  %299 = %291.2;
  %300 = %294.0;
  %301 = logical_or(%296, %297) /* ty=Tensor[(1521, 540), bool] */;
  (%285, %298, meta[relay.Constant][12] /* ty=Tensor[(3, 52), uint32] */, %299, %300, %301)
}

def @func_4368(%var_4366: Tensor[(169, 9), float32]) -> (Tensor[(540), float64], Tensor[(1521), float32], Tensor[(169, 9), float64]) {
  @func_4365(%var_4366) /* ty=(Tensor[(540), float64], Tensor[(1521), float32], Tensor[(169, 9), float64]) */
}

def @func_2789(%var_2787: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32],) {
  @func_2786(%var_2787) /* ty=(Tensor[(12, 16, 12), float32],) */
}

def @func_5871() -> (Tensor[(540), float64],) {
  @func_5869() /* ty=(Tensor[(540), float64],) */
}

def @func_1709(%var_1706: Tensor[(7, 9, 11), float32], %var_1707: Tensor[(520), int32], %var_1708: Tensor[(7, 9, 11), uint16]) -> (Tensor[(7, 9, 11), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(12, 9, 14), float64], Tensor[(1512), float32], Tensor[(7, 9, 11), float64]) {
  @func_1704(%var_1706, %var_1707, %var_1708) /* ty=(Tensor[(7, 9, 11), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(12, 9, 14), float64], Tensor[(1512), float32], Tensor[(7, 9, 11), float64]) */
}

def @func_7823(%var_7789: Tensor[(520), int32], %var_7803: Tensor[(1512), float64]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(520), int32], Tensor[(1512), float32], Tensor[(2, 15, 15), float64], Tensor[(2, 15, 15), float64]) {
  %302 = cast(%var_7789, dtype="int32") /* ty=Tensor[(520), int32] */;
  %303 = cast(%var_7789, dtype="int32") /* ty=Tensor[(520), int32] */;
  %304 = reshape(%302, newshape=[5, 104]) /* ty=Tensor[(5, 104), int32] */;
  %305 = reshape(%303, newshape=[5, 104]) /* ty=Tensor[(5, 104), int32] */;
  %306 = @func_6997(%304, %305) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(5, 104), bool]) */;
  %307 = @func_5022() /* ty=(Tensor[(1512), float64],) */;
  %308 = %307.0;
  %309 = cast(%var_7803, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(1), int32] */;
  %311 = cast(%308, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?), float32] */;
  %313 = @func_2707() /* ty=Tensor[(2, 15, 15), float64] */;
  %314 = cast(%313, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %315 = cast(%313, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %316 = reshape(%314, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %317 = reshape(%315, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %318 = @func_921(%316, %317) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %319 = @func_5386() /* ty=Tensor[(540), float64] */;
  %320 = %306.0;
  %321 = floor_divide(%311, %312) /* ty=Tensor[(1512), float32] */;
  %322 = %318.0;
  (%319, %320, %var_7789, %321, %313, %322)
}

def @func_12740() -> Tensor[(540), float64] {
  %324 = fn () -> Tensor[(540), float64] {
    %323 = @func_7529() /* ty=(Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(2, 15, 15), float64]) */;
    %323.0
  };
  %324() /* ty=Tensor[(540), float64] */
}

def @func_12212() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_12210() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_5619() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_5617() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_6807() -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %329 = fn () -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(540), float64]) {
    %325 = @func_5093() /* ty=(Tensor[(540), float64],) */;
    %326 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
    %327 = %325.0;
    %328 = @func_5386() /* ty=Tensor[(540), float64] */;
    (%326, %327, %328)
  };
  %329() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_2467() -> Tensor[(540), float64] {
  @func_2177() /* ty=Tensor[(540), float64] */
}

def @func_10278(%var_10277: uint8) -> Tensor[(11, 2, 16), bool] {
  %332 = fn (%var_10267: uint8) -> Tensor[(11, 2, 16), bool] {
    %330 = cast(%var_10267, dtype="bool") /* ty=bool */;
    %331 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 2, 16), uint8] */, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
    equal(%330, %331) /* ty=Tensor[(11, 2, 16), bool] */
  };
  %332(%var_10277) /* ty=Tensor[(11, 2, 16), bool] */
}

def @func_8054() -> Tensor[(540), float64] {
  %333 = @func_5532() /* ty=(Tensor[(540), float64],) */;
  %333.0
}

def @func_11575(%var_11573: Tensor[(2304), float32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2304), bool], Tensor[(540), float64]) {
  @func_11572(%var_11573) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2304), bool], Tensor[(540), float64]) */
}

def @func_11945() -> Tensor[(540), float64] {
  @func_11943() /* ty=Tensor[(540), float64] */
}

def @func_3067() -> Tensor[(540), float64] {
  @func_3065() /* ty=Tensor[(540), float64] */
}

def @func_12538() -> Tensor[(540), float64] {
  %335 = fn () -> Tensor[(540), float64] {
    %334 = @func_4259() /* ty=(Tensor[(540), float64],) */;
    %334.0
  };
  %335() /* ty=Tensor[(540), float64] */
}

def @func_12692() -> (Tensor[(540), float64],) {
  %336 = @func_9634() /* ty=(Tensor[(540), float64],) */;
  %337 = %336.0;
  (%337,)
}

def @func_10367() -> (Tensor[(540), float64], Tensor[(156), uint32], Tensor[(308), float64], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  @func_10365() /* ty=(Tensor[(540), float64], Tensor[(156), uint32], Tensor[(308), float64], Tensor[(156), uint32], Tensor[(2184), uint32]) */
}

def @func_12470() -> (Tensor[(1512), float64], Tensor[(2, 128), float64]) {
  %347 = fn () -> (Tensor[(1512), float64], Tensor[(2, 128), float64]) {
    %338 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 128), float64] */, dtype="float64") /* ty=Tensor[(2, 128), float64] */;
    %339 = reshape(%338, newshape=[2, 8, 16]) /* ty=Tensor[(2, 8, 16), float64] */;
    %340 = @func_10073(%339) /* ty=Tensor[(2, 8, 16), float64] */;
    %341 = cast(%340, dtype="float64") /* ty=Tensor[(2, 8, 16), float64] */;
    %342 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(2, 128), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %343 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 128), float64] */, dtype="float64") /* ty=Tensor[(2, 128), float64] */;
    %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %345 = @func_8569() /* ty=Tensor[(1512), float64] */;
    %346 = floor_mod(%343, %344) /* ty=Tensor[(2, 128), float64] */;
    (%345, %346)
  };
  %347() /* ty=(Tensor[(1512), float64], Tensor[(2, 128), float64]) */
}

def @func_7644() -> Tensor[(540), float64] {
  @func_7642() /* ty=Tensor[(540), float64] */
}

def @func_8571() -> Tensor[(1512), float64] {
  @func_8569() /* ty=Tensor[(1512), float64] */
}

def @func_4166() -> Tensor[(540), float64] {
  @func_2467() /* ty=Tensor[(540), float64] */
}

def @func_10541() -> (Tensor[(540), float64], Tensor[(1512), float64], Tensor[(540), float64]) {
  @func_10539() /* ty=(Tensor[(540), float64], Tensor[(1512), float64], Tensor[(540), float64]) */
}

def @func_3504() -> Tensor[(540), float64] {
  %348 = fn () -> Tensor[(540), float64] {
    @func_1991() /* ty=Tensor[(540), float64] */
  };
  %348() /* ty=Tensor[(540), float64] */
}

def @func_2438() -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) {
  %349 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 45), float64] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %350 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 45), float64] */, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %351 = reshape(%349, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %352 = reshape(%350, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %353 = @func_921(%351, %352) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %354 = @func_2177() /* ty=Tensor[(540), float64] */;
  %355 = %353.0;
  (%354, %355, meta[relay.Constant][15] /* ty=Tensor[(10, 45), float64] */)
}

def @func_10569(%var_10561: Tensor[(450), float64]) -> (Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float64], Tensor[(520), int32]) {
  %356 = @func_9232() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(490), bool]) */;
  %357 = cast(%var_10561, dtype="float64") /* ty=Tensor[(450), float64] */;
  %358 = cast(meta[relay.Constant][16] /* ty=Tensor[(520), int32] */, dtype="int32") /* ty=Tensor[(520), int32] */;
  %359 = reshape(%357, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %360 = reshape(%358, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %361 = @func_1781(%359, %360) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float32], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) */;
  %362 = %356.1;
  %363 = %361.3;
  (%362, %363, %var_10561, meta[relay.Constant][16] /* ty=Tensor[(520), int32] */)
}

def @func_4623() -> Tensor[(540), float64] {
  %365 = fn () -> Tensor[(540), float64] {
    %364 = @func_2698() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */;
    %364.2
  };
  %365() /* ty=Tensor[(540), float64] */
}

def @func_7939() -> (Tensor[(540), float64],) {
  %368 = fn () -> (Tensor[(540), float64],) {
    %366 = @func_5427() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
    %367 = %366.2;
    (%367,)
  };
  %368() /* ty=(Tensor[(540), float64],) */
}

def @func_2071(%var_2069: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(520), int32], Tensor[(4, 13, 10), float32]) {
  @func_2068(%var_2069) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(520), int32], Tensor[(4, 13, 10), float32]) */
}

def @func_3792() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) {
  @func_3790() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */
}

def @func_2963() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %372 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %369 = @func_2382() /* ty=(Tensor[(540), float64],) */;
    %370 = %369.0;
    %371 = @func_2177() /* ty=Tensor[(540), float64] */;
    (%370, %371)
  };
  %372() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_9020(%var_9017: Tensor[(2, 11, 14), float64], %var_9018: Tensor[(156), uint32], %var_9019: Tensor[(2184), uint32]) -> (Tensor[(2, 11, 14), bool], Tensor[(540), float64], Tensor[(13, 14, 12), uint32], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  @func_9015(%var_9017, %var_9018, %var_9019) /* ty=(Tensor[(2, 11, 14), bool], Tensor[(540), float64], Tensor[(13, 14, 12), uint32], Tensor[(156), uint32], Tensor[(2184), uint32]) */
}

def @func_2068(%var_2043: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(520), int32], Tensor[(4, 13, 10), float32]) {
  %373 = cast(%var_2043, dtype="int32") /* ty=Tensor[(520), int32] */;
  %374 = reshape(%373, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %375 = @func_1862(%374) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) */;
  %376 = cast(%var_2043, dtype="int32") /* ty=Tensor[(520), int32] */;
  %377 = reshape(%376, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %378 = @func_1363(%377) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %379 = @func_1991() /* ty=Tensor[(540), float64] */;
  %380 = %375.3;
  %381 = %378.2;
  (%379, %380, %var_2043, %381)
}

def @func_12432(%var_12431: Tensor[(1, 9, 5), float64]) -> (Tensor[(1, 9, 5), float64],) {
  %384 = fn (%var_12417: Tensor[(1, 9, 5), float64]) -> (Tensor[(1, 9, 5), float64],) {
    %382 = cast(%var_12417, dtype="float64") /* ty=Tensor[(1, 9, 5), float64] */;
    %383 = cosh(%382) /* ty=Tensor[(1, 9, 5), float64] */;
    (%383,)
  };
  %384(%var_12431) /* ty=(Tensor[(1, 9, 5), float64],) */
}

def @func_10857() -> Tensor[(540), float64] {
  %386 = fn () -> Tensor[(540), float64] {
    %385 = @func_6255() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) */;
    %385.1
  };
  %386() /* ty=Tensor[(540), float64] */
}

def @func_9457() -> (Tensor[(15, 2, 2), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %392 = fn () -> (Tensor[(15, 2, 2), float64], Tensor[(540), float64], Tensor[(540), float64]) {
    %387 = cast(meta[relay.Constant][17] /* ty=Tensor[(15, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 2), float64] */;
    %388 = @func_5869() /* ty=(Tensor[(540), float64],) */;
    %389 = asin(%387) /* ty=Tensor[(15, 2, 2), float64] */;
    %390 = %388.0;
    %391 = @func_8054() /* ty=Tensor[(540), float64] */;
    (%389, %390, %391)
  };
  %392() /* ty=(Tensor[(15, 2, 2), float64], Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_231(%var_229: Tensor[(13, 1, 12), uint32], %var_230: Tensor[(13, 14, 12), uint32]) -> (Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) {
  @func_227(%var_229, %var_230) /* ty=(Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) */
}

def @func_3232(%var_3213: Tensor[(450), float64]) -> (Tensor[(540), float32], Tensor[(507, 3), float32], Tensor[(13, 13, 9), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) {
  %393 = @func_2768() /* ty=Tensor[(540), float64] */;
  %394 = cast(meta[relay.Constant][18] /* ty=Tensor[(540), float64] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(1), int32] */;
  %396 = cast(%393, dtype="float32") /* ty=Tensor[(540), float32] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?), float32] */;
  %398 = cast(meta[relay.Constant][19] /* ty=Tensor[(507, 3), float32] */, dtype="float32") /* ty=Tensor[(507, 3), float32] */;
  %399 = reshape(%398, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %400 = @func_78(%399) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %401 = %400.0;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(13, 13, 9), float32] */;
  %403 = cast(%var_3213, dtype="float64") /* ty=Tensor[(450), float64] */;
  %404 = cast(%var_3213, dtype="float64") /* ty=Tensor[(450), float64] */;
  %405 = reshape(%403, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %406 = reshape(%404, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %407 = @func_921(%405, %406) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %408 = @func_2698() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */;
  %409 = power(%396, %397) /* ty=Tensor[(540), float32] */;
  %410 = tan(%402) /* ty=Tensor[(13, 13, 9), float32] */;
  %411 = %407.0;
  %412 = %408.0;
  (%409, meta[relay.Constant][19] /* ty=Tensor[(507, 3), float32] */, %410, %411, %var_3213, %412)
}

def @func_8154(%var_8152: Tensor[(156), uint32], %var_8153: Tensor[(2184), uint32]) -> (Tensor[(540), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  @func_8150(%var_8152, %var_8153) /* ty=(Tensor[(540), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) */
}

def @func_5428() -> (Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) {
  %417 = fn () -> (Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) {
    %413 = @func_4608() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
    %414 = %413.1;
    %415 = @func_2467() /* ty=Tensor[(540), float64] */;
    %416 = @func_2768() /* ty=Tensor[(540), float64] */;
    (%414, %415, %416)
  };
  %417() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_10697(%var_10695: Tensor[(1521, 1), float32]) -> (Tensor[(2, 15, 15), float64], Tensor[(156), uint32], Tensor[(3, 52), uint32], Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521, 540), bool]) {
  @func_10694(%var_10695) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(156), uint32], Tensor[(3, 52), uint32], Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521, 540), bool]) */
}

def @func_9622() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_9620() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_8569() -> Tensor[(1512), float64] {
  %418 = @func_5022() /* ty=(Tensor[(1512), float64],) */;
  %418.0
}

def @func_11024() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(10, 45), float32]) {
  @func_11022() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(10, 45), float32]) */
}

def @func_4064() -> Tensor[(10, 45), float64] {
  @func_4062() /* ty=Tensor[(10, 45), float64] */
}

def @func_2384() -> (Tensor[(540), float64],) {
  @func_2382() /* ty=(Tensor[(540), float64],) */
}

def @func_2571(%var_2559: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) {
  %419 = cast(%var_2559, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %420 = cast(%var_2559, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %421 = reshape(%419, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %422 = reshape(%420, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %423 = @func_260(%421, %422) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) */;
  %424 = @func_2467() /* ty=Tensor[(540), float64] */;
  %425 = %423.0;
  (%424, %425, %var_2559)
}

def @func_6559() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_6557() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_2698() -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) {
  %426 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %427 = @func_2438() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) */;
  %428 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %429 = %426.0;
  %430 = %427.1;
  %431 = %428.0;
  (%429, %430, %431)
}

def @func_13186() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(1521), float32]) {
  %432 = cast(meta[relay.Constant][20] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %433 = reshape(%432, newshape=[1521]) /* ty=Tensor[(1521), float32] */;
  %434 = @func_6517(%433) /* ty=(Tensor[(540), float64], Tensor[(1521), uint8], Tensor[(1521), int8], Tensor[(1521), float32]) */;
  %435 = @func_12931() /* ty=Tensor[(540), float64] */;
  %436 = %434.0;
  (%435, %436, meta[relay.Constant][20] /* ty=Tensor[(1521), float32] */)
}

def @func_4261() -> (Tensor[(540), float64],) {
  @func_4259() /* ty=(Tensor[(540), float64],) */
}

def @func_1366(%var_1364: Tensor[(4, 13, 10), int32]) -> (Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) {
  @func_1363(%var_1364) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */
}

def @func_12708() -> Tensor[(540), float64] {
  %437 = fn () -> Tensor[(540), float64] {
    @func_7274() /* ty=Tensor[(540), float64] */
  };
  %437() /* ty=Tensor[(540), float64] */
}

def @func_8607() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_8605() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_6327() -> (Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(450), float64]) {
  @func_6325() /* ty=(Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(450), float64]) */
}

def @func_11440() -> Tensor[(540), float64] {
  %439 = fn () -> Tensor[(540), float64] {
    %438 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %438.1
  };
  %439() /* ty=Tensor[(540), float64] */
}

def @func_12931() -> Tensor[(540), float64] {
  %440 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %440.1
}

def @func_11638(%var_11636: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(450), float64], Tensor[(520), int32]) {
  @func_11635(%var_11636) /* ty=(Tensor[(540), float64], Tensor[(450), float64], Tensor[(520), int32]) */
}

def @func_12901(%var_12899: Tensor[(10, 14, 4), int32]) -> (Tensor[(10, 14, 4), bool], Tensor[(10, 14, 4), bool], Tensor[(520), int32], Tensor[(520), int32]) {
  @func_12898(%var_12899) /* ty=(Tensor[(10, 14, 4), bool], Tensor[(10, 14, 4), bool], Tensor[(520), int32], Tensor[(520), int32]) */
}

def @func_9502(%var_9501: Tensor[(1521), float32]) -> (Tensor[(6, 4, 5), float32], Tensor[(1521), float32], Tensor[(1521), float32], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64]) {
  %453 = fn (%var_9469: Tensor[(1521), float32]) -> (Tensor[(6, 4, 5), float32], Tensor[(1521), float32], Tensor[(1521), float32], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64]) {
    %441 = @func_7655() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
    %442 = cast(%var_9469, dtype="float32") /* ty=Tensor[(1521), float32] */;
    %443 = reshape(%442, newshape=[1521]) /* ty=Tensor[(1521), float32] */;
    %444 = @func_6517(%443) /* ty=(Tensor[(540), float64], Tensor[(1521), uint8], Tensor[(1521), int8], Tensor[(1521), float32]) */;
    %445 = @func_8559() /* ty=(Tensor[(540), float64],) */;
    %446 = @func_6870() /* ty=(Tensor[(450), float64],) */;
    %447 = @func_7900() /* ty=(Tensor[(540), float64],) */;
    %448 = %441.1;
    %449 = %444.3;
    %450 = %445.0;
    %451 = %446.0;
    %452 = %447.0;
    (%448, %449, %var_9469, %450, %451, %452)
  };
  %453(%var_9501) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(1521), float32], Tensor[(1521), float32], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64]) */
}

def @func_1862(%var_1848: Tensor[(520), int32]) -> (Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) {
  %454 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %455 = cast(%var_1848, dtype="int32") /* ty=Tensor[(520), int32] */;
  %456 = reshape(%455, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %457 = @func_1363(%456) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %458 = cast(meta[relay.Constant][21] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %459 = cast(%var_1848, dtype="int32") /* ty=Tensor[(520), int32] */;
  %460 = reshape(%458, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %461 = reshape(%459, newshape=[520]) /* ty=Tensor[(520), int32] */;
  %462 = @func_1781(%460, %461) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float32], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) */;
  %463 = %454.0;
  %464 = %457.2;
  %465 = %462.0;
  (%463, %464, %var_1848, %465, meta[relay.Constant][21] /* ty=Tensor[(450), float64] */)
}

def @func_7827(%var_7825: Tensor[(520), int32], %var_7826: Tensor[(1512), float64]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(520), int32], Tensor[(1512), float32], Tensor[(2, 15, 15), float64], Tensor[(2, 15, 15), float64]) {
  @func_7823(%var_7825, %var_7826) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(520), int32], Tensor[(1512), float32], Tensor[(2, 15, 15), float64], Tensor[(2, 15, 15), float64]) */
}

def @func_5271() -> (Tensor[(3, 6, 4), float64],) {
  %466 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 4), float64] */;
  %467 = acos(%466) /* ty=Tensor[(3, 6, 4), float64] */;
  (%467,)
}

def @func_10365() -> (Tensor[(540), float64], Tensor[(156), uint32], Tensor[(308), float64], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  %468 = @func_6213() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
  %469 = cast(meta[relay.Constant][23] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %470 = cast(meta[relay.Constant][24] /* ty=Tensor[(156), uint32] */, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %471 = cast(meta[relay.Constant][25] /* ty=Tensor[(2184), uint32] */, dtype="uint32") /* ty=Tensor[(2184), uint32] */;
  %472 = reshape(%469, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), float64] */;
  %473 = reshape(%470, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %474 = reshape(%471, newshape=[2184]) /* ty=Tensor[(2184), uint32] */;
  %475 = @func_9015(%472, %473, %474) /* ty=(Tensor[(2, 11, 14), bool], Tensor[(540), float64], Tensor[(13, 14, 12), uint32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
  %476 = %468.1;
  %477 = %475.3;
  (%476, %477, meta[relay.Constant][23] /* ty=Tensor[(308), float64] */, meta[relay.Constant][24] /* ty=Tensor[(156), uint32] */, meta[relay.Constant][25] /* ty=Tensor[(2184), uint32] */)
}

def @func_13126(%var_13125: Tensor[(12, 11, 10), int32]) -> (Tensor[(12, 11, 10), int32],) {
  %483 = fn (%var_13117: Tensor[(12, 11, 10), int32]) -> (Tensor[(12, 11, 10), int32],) {
    %478 = cast(%var_13117, dtype="int32") /* ty=Tensor[(12, 11, 10), int32] */;
    %479 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(12, 11, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %480 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 11, 10), int32] */, dtype="int32") /* ty=Tensor[(12, 11, 10), int32] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %482 = minimum(%480, %481) /* ty=Tensor[(12, 11, 10), int32] */;
    (%482,)
  };
  %483(%var_13125) /* ty=(Tensor[(12, 11, 10), int32],) */
}

def @func_4998() -> (Tensor[(540), float64], Tensor[(39, 4), uint32], Tensor[(150, 3), uint8], Tensor[(540), float64]) {
  %498 = fn () -> (Tensor[(540), float64], Tensor[(39, 4), uint32], Tensor[(150, 3), uint8], Tensor[(540), float64]) {
    %484 = cast(meta[relay.Constant][28] /* ty=Tensor[(150, 3), float64] */, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
    %485 = cast(meta[relay.Constant][27] /* ty=Tensor[(39, 4), uint32] */, dtype="uint32") /* ty=Tensor[(39, 4), uint32] */;
    %486 = reshape(%484, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
    %487 = reshape(%485, newshape=[156]) /* ty=Tensor[(156), uint32] */;
    %488 = @func_2854(%486, %487) /* ty=(Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) */;
    %489 = %488.0;
    %490 = cast(%489, dtype="uint8") /* ty=Tensor[(2, 15, 15), uint8] */;
    %491 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(150, 3), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %492 = cast(meta[relay.Constant][28] /* ty=Tensor[(150, 3), float64] */, dtype="uint8") /* ty=Tensor[(150, 3), uint8] */;
    %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %494 = @func_4275() /* ty=(Tensor[(540), float64],) */;
    %495 = @func_3706() /* ty=Tensor[(540), float64] */;
    %496 = subtract(%492, %493) /* ty=Tensor[(150, 3), uint8] */;
    %497 = %494.0;
    (%495, meta[relay.Constant][27] /* ty=Tensor[(39, 4), uint32] */, %496, %497)
  };
  %498() /* ty=(Tensor[(540), float64], Tensor[(39, 4), uint32], Tensor[(150, 3), uint8], Tensor[(540), float64]) */
}

def @func_2178() -> Tensor[(540), float64] {
  %499 = fn () -> Tensor[(540), float64] {
    @func_1991() /* ty=Tensor[(540), float64] */
  };
  %499() /* ty=Tensor[(540), float64] */
}

def @func_12278() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %500 = @func_5354() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %501 = %500.2;
  %502 = @func_4622() /* ty=Tensor[(540), float64] */;
  (%501, %502)
}

def @func_2661() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %503 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %504 = @func_2177() /* ty=Tensor[(540), float64] */;
  %505 = %503.0;
  (%504, %505)
}

def @func_10841() -> (Tensor[(540), float64], Tensor[(450), float64], Tensor[(450), float64]) {
  @func_10839() /* ty=(Tensor[(540), float64], Tensor[(450), float64], Tensor[(450), float64]) */
}

def @func_3319() -> (Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) {
  %515 = fn () -> (Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) {
    %506 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 220), float32] */, dtype="float32") /* ty=Tensor[(9, 220), float32] */;
    %507 = cast(meta[relay.Constant][30] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
    %508 = reshape(%506, newshape=[12, 11, 15]) /* ty=Tensor[(12, 11, 15), float32] */;
    %509 = reshape(%507, newshape=[49, 10]) /* ty=Tensor[(49, 10), bool] */;
    %510 = @func_2278(%508, %509) /* ty=(Tensor[(12, 11, 15), uint16], Tensor[(10, 7, 7), float64], Tensor[(49, 10), bool], Tensor[(1512), uint16], Tensor[(10, 7, 7), bool], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) */;
    %511 = %510.3;
    %512 = cast(%511, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %513 = @func_3065() /* ty=Tensor[(540), float64] */;
    %514 = sinh(%512) /* ty=Tensor[(1512), float64] */;
    (%513, meta[relay.Constant][29] /* ty=Tensor[(9, 220), float32] */, meta[relay.Constant][30] /* ty=Tensor[(490), bool] */, %514)
  };
  %515() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */
}

def @func_7642() -> Tensor[(540), float64] {
  %516 = @func_6705() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %516.0
}

def @func_8314() -> (Tensor[(540), float64],) {
  @func_8312() /* ty=(Tensor[(540), float64],) */
}

def @func_10151() -> (Tensor[(540), float64],) {
  @func_10149() /* ty=(Tensor[(540), float64],) */
}

def @func_8173() -> (Tensor[(6, 4, 5), float32],) {
  @func_8171() /* ty=(Tensor[(6, 4, 5), float32],) */
}

def @func_8981() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64]) {
  %523 = fn () -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64]) {
    %517 = @func_7938() /* ty=(Tensor[(540), float64],) */;
    %518 = @func_5065() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
    %519 = @func_7156() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) */;
    %520 = %517.0;
    %521 = %518.0;
    %522 = %519.0;
    (%520, %521, %522)
  };
  %523() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64]) */
}

def @func_12492() -> (Tensor[(540), float64],) {
  %524 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %525 = %524.0;
  (%525,)
}

def @func_6878() -> (Tensor[(540), float64],) {
  %526 = @func_6806() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %527 = %526.1;
  (%527,)
}

def @func_4275() -> (Tensor[(540), float64],) {
  %528 = @func_4224() /* ty=Tensor[(540), float64] */;
  (%528,)
}

def @func_9634() -> (Tensor[(540), float64],) {
  %529 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %530 = %529.0;
  (%530,)
}

def @func_2786(%var_2780: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32],) {
  %531 = cast(%var_2780, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %532 = sin(%531) /* ty=Tensor[(12, 16, 12), float32] */;
  (%532,)
}

def @func_1835(%var_1832: Tensor[(169, 9), float32]) -> (Tensor[(4, 15, 9), bool], Tensor[(13, 13, 9), float32], Tensor[(169, 9), float32]) {
  %533 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %534 = cast(%var_1832, dtype="float32") /* ty=Tensor[(169, 9), float32] */;
  %535 = reshape(%534, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %536 = @func_78(%535) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %537 = %533.1;
  %538 = %536.0;
  (%537, %538, %var_1832)
}

def @func_12394() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64], Tensor[(?, 450), float64]) {
  @func_12392() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64], Tensor[(?, 450), float64]) */
}

def @func_2905() -> Tensor[(540), float64] {
  %539 = @func_2651() /* ty=(Tensor[(540), float64],) */;
  %539.0
}

def @func_3422(%var_3421: Tensor[(156), uint32]) -> (Tensor[(540), float64], Tensor[(156), uint32], Tensor[(1, 450), float64], Tensor[(156), uint32]) {
  %547 = fn (%var_3400: Tensor[(156), uint32]) -> (Tensor[(540), float64], Tensor[(156), uint32], Tensor[(1, 450), float64], Tensor[(156), uint32]) {
    %540 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 450), float64] */, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
    %541 = cast(%var_3400, dtype="uint32") /* ty=Tensor[(156), uint32] */;
    %542 = reshape(%540, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
    %543 = reshape(%541, newshape=[156]) /* ty=Tensor[(156), uint32] */;
    %544 = @func_2854(%542, %543) /* ty=(Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) */;
    %545 = @func_2768() /* ty=Tensor[(540), float64] */;
    %546 = %544.1;
    (%545, %546, meta[relay.Constant][31] /* ty=Tensor[(1, 450), float64] */, %var_3400)
  };
  %547(%var_3421) /* ty=(Tensor[(540), float64], Tensor[(156), uint32], Tensor[(1, 450), float64], Tensor[(156), uint32]) */
}

def @func_7129() -> (Tensor[(540), float64],) {
  @func_7127() /* ty=(Tensor[(540), float64],) */
}

def @func_12168() -> Tensor[(540), float64] {
  %549 = fn () -> Tensor[(540), float64] {
    %548 = @func_8605() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %548.1
  };
  %549() /* ty=Tensor[(540), float64] */
}

def @func_2881() -> Tensor[(540), float64] {
  @func_2879() /* ty=Tensor[(540), float64] */
}

def @func_11081(%var_11044: Tensor[(1, 3, 9), float32], %var_11060: Tensor[(39, 4), uint32], %var_11070: Tensor[(2, 960), float32]) -> (Tensor[(2184), uint32], Tensor[(39, 4), uint32], Tensor[(16, 10, 12), float32], Tensor[(2, 960), float32], Tensor[(7, 3, 9), uint64]) {
  %550 = cast(%var_11060, dtype="uint32") /* ty=Tensor[(39, 4), uint32] */;
  %551 = reshape(%550, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %552 = @func_2740(%551) /* ty=(Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
  %553 = cast(%var_11070, dtype="float32") /* ty=Tensor[(2, 960), float32] */;
  %554 = reshape(%553, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), float32] */;
  %555 = @func_9030(%554) /* ty=(Tensor[(16, 10, 12), float32],) */;
  %556 = cast(%var_11044, dtype="float32") /* ty=Tensor[(1, 3, 9), float32] */;
  %557 = log2(%556) /* ty=Tensor[(1, 3, 9), float32] */;
  %558 = cast(%557, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
  %559 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 3, 9), float32] */, dtype="bool") /* ty=Tensor[(7, 3, 9), bool] */;
  %560 = equal(%558, %559) /* ty=Tensor[(7, 3, 9), bool] */;
  %561 = cast(%557, dtype="uint64") /* ty=Tensor[(1, 3, 9), uint64] */;
  %562 = cast(%560, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
  %563 = %552.3;
  %564 = %555.0;
  %565 = logical_xor(%561, %562) /* ty=Tensor[(7, 3, 9), uint64] */;
  (%563, %var_11060, %564, %var_11070, %565)
}

def @func_7655() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32]) {
  %566 = @func_3099() /* ty=(Tensor[(540), float64],) */;
  %567 = @func_4596() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
  %568 = %566.0;
  %569 = %567.1;
  (%568, %569)
}

def @func_8171() -> (Tensor[(6, 4, 5), float32],) {
  %570 = @func_6213() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
  %571 = %570.0;
  (%571,)
}

def @func_8686(%var_8677: Tensor[(15, 1, 12), float32]) -> Tensor[(15, 1, 12), float32] {
  %572 = cast(%var_8677, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
  exp(%572) /* ty=Tensor[(15, 1, 12), float32] */
}

def @func_2017(%var_1995: Tensor[(10, 7, 7), bool], %var_2003: Tensor[(756, 2), uint16], %var_2009: Tensor[(10, 7, 7), bool]) -> (Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) {
  %573 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 7, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %574 = shape_of(%var_1995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%var_1995, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %577 = cast(%var_2003, dtype="uint16") /* ty=Tensor[(756, 2), uint16] */;
  %578 = cast(%var_2003, dtype="uint16") /* ty=Tensor[(756, 2), uint16] */;
  %579 = reshape(%577, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %580 = reshape(%578, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %581 = @func_260(%579, %580) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) */;
  %582 = cast(%var_2009, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %583 = shape_of(%var_1995, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_1995, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %586 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 7, 7), bool] */, dtype="float64") /* ty=Tensor[(10, 7, 7), float64] */;
  %587 = logical_and(%575, %576) /* ty=Tensor[(10, 7, 7), bool] */;
  %588 = %581.1;
  %589 = equal(%584, %585) /* ty=Tensor[(10, 7, 7), bool] */;
  %590 = asinh(%586) /* ty=Tensor[(10, 7, 7), float64] */;
  (%587, %588, %var_2003, %589, %590)
}

def @func_2708() -> Tensor[(2, 15, 15), float64] {
  %592 = fn () -> Tensor[(2, 15, 15), float64] {
    %591 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
    %591.1
  };
  %592() /* ty=Tensor[(2, 15, 15), float64] */
}

def @func_5066() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %598 = fn () -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
    %593 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
    %594 = @func_2651() /* ty=(Tensor[(540), float64],) */;
    %595 = %593.2;
    %596 = %594.0;
    %597 = @func_4166() /* ty=Tensor[(540), float64] */;
    (%595, %596, %597)
  };
  %598() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_3802() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %602 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %599 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
    %600 = @func_2905() /* ty=Tensor[(540), float64] */;
    %601 = %599.0;
    (%600, %601)
  };
  %602() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_12085(%var_12083: Tensor[(1, 450), float64]) -> (Tensor[(540), float64], Tensor[(?, 450), bool], Tensor[(2, 15, 15), float64]) {
  @func_12082(%var_12083) /* ty=(Tensor[(540), float64], Tensor[(?, 450), bool], Tensor[(2, 15, 15), float64]) */
}

def @func_8150(%var_8141: Tensor[(156), uint32], %var_8142: Tensor[(2184), uint32]) -> (Tensor[(540), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  %603 = @func_4119() /* ty=(Tensor[(540), float64],) */;
  %604 = cast(%var_8141, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %605 = cast(%var_8142, dtype="uint32") /* ty=Tensor[(2184), uint32] */;
  %606 = reshape(%604, newshape=[13, 1, 12]) /* ty=Tensor[(13, 1, 12), uint32] */;
  %607 = reshape(%605, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), uint32] */;
  %608 = @func_227(%606, %607) /* ty=(Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) */;
  %609 = %603.0;
  %610 = %608.2;
  (%609, %610, %var_8141, %var_8142)
}

def @func_10292() -> Tensor[(8, 7, 8), float32] {
  %615 = fn () -> Tensor[(8, 7, 8), float32] {
    %611 = cast(meta[relay.Constant][35] /* ty=Tensor[(8, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
    %612 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(8, 7, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %613 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
    %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%613, %614) /* ty=Tensor[(8, 7, 8), float32] */
  };
  %615() /* ty=Tensor[(8, 7, 8), float32] */
}

def @func_12182() -> (Tensor[(3, 2, 12), float32],) {
  %616 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 12), float32] */;
  %617 = tan(%616) /* ty=Tensor[(3, 2, 12), float32] */;
  (%617,)
}

def @func_11943() -> Tensor[(540), float64] {
  %618 = @func_10609() /* ty=(Tensor[(540), float64],) */;
  %618.0
}

def @func_5869() -> (Tensor[(540), float64],) {
  %619 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %620 = %619.1;
  (%620,)
}

def @func_6600() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %624 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %621 = @func_5093() /* ty=(Tensor[(540), float64],) */;
    %622 = %621.0;
    %623 = @func_2177() /* ty=Tensor[(540), float64] */;
    (%622, %623)
  };
  %624() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_13142() -> (Tensor[(8, 7, 8), float32],) {
  %625 = @func_10291() /* ty=Tensor[(8, 7, 8), float32] */;
  (%625,)
}

def @func_4608() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32]) {
  %626 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %627 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %628 = %626.0;
  %629 = %627.0;
  (%628, %629)
}

def @func_8605() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %630 = @func_4016() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %631 = @func_7642() /* ty=Tensor[(540), float64] */;
  %632 = %630.0;
  (%631, %632)
}

def @func_1704(%var_1616: Tensor[(7, 9, 11), float32], %var_1637: Tensor[(520), int32], %var_1691: Tensor[(7, 9, 11), uint16]) -> (Tensor[(7, 9, 11), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(12, 9, 14), float64], Tensor[(1512), float32], Tensor[(7, 9, 11), float64]) {
  %633 = cast(%var_1616, dtype="float32") /* ty=Tensor[(7, 9, 11), float32] */;
  %634 = cast(meta[relay.Constant][37] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %635 = cast(meta[relay.Constant][37] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %636 = reshape(%634, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %637 = reshape(%635, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %638 = cast(meta[relay.Constant][37] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %639 = cast(meta[relay.Constant][37] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %640 = reshape(%638, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %641 = reshape(%639, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
  %642 = cast(%var_1637, dtype="int32") /* ty=Tensor[(520), int32] */;
  %643 = reshape(%642, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %644 = @func_1363(%643) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %645 = cast(meta[relay.Constant][38] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %646 = cast(meta[relay.Constant][38] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %647 = reshape(%645, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %648 = reshape(%646, newshape=[12, 9, 14]) /* ty=Tensor[(12, 9, 14), uint16] */;
  %649 = @func_260(%647, %648) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) */;
  %650 = cast(meta[relay.Constant][38] /* ty=Tensor[(1512), uint16] */, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %651 = cast(%var_1616, dtype="float32") /* ty=Tensor[(7, 9, 11), float32] */;
  %652 = atan(%651) /* ty=Tensor[(7, 9, 11), float32] */;
  %653 = cast(%652, dtype="float64") /* ty=Tensor[(7, 9, 11), float64] */;
  %654 = log10(%653) /* ty=Tensor[(7, 9, 11), float64] */;
  %655 = cast(%var_1616, dtype="uint16") /* ty=Tensor[(7, 9, 11), uint16] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%654, dtype="uint16") /* ty=Tensor[(7, 9, 11), uint16] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %659 = bitwise_xor(%657, %658) /* ty=Tensor[(7, 9, 11), uint16] */;
  %660 = cast(%var_1691, dtype="float64") /* ty=Tensor[(7, 9, 11), float64] */;
  %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%659, dtype="float64") /* ty=Tensor[(7, 9, 11), float64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %664 = sigmoid(%633) /* ty=Tensor[(7, 9, 11), float32] */;
  %665 = @func_1117(%636, %637) /* ty=Tensor[(4, 15, 9), bool] */;
  %666 = @func_1117(%640, %641) /* ty=Tensor[(4, 15, 9), bool] */;
  %667 = %644.2;
  %668 = %649.0;
  %669 = sqrt(%650) /* ty=Tensor[(1512), float32] */;
  %670 = mod(%662, %663) /* ty=Tensor[(7, 9, 11), float64] */;
  (%664, %665, meta[relay.Constant][37] /* ty=Tensor[(540), float64] */, %666, %667, %var_1637, %668, %669, %670)
}

def @func_8031(%var_8029: Tensor[(11, 10, 9), uint64]) -> (Tensor[(11, 10, 9), bool], Tensor[(540), float64], Tensor[(11, 10, 9), int8], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  @func_8028(%var_8029) /* ty=(Tensor[(11, 10, 9), bool], Tensor[(540), float64], Tensor[(11, 10, 9), int8], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_1992() -> Tensor[(540), float64] {
  %672 = fn () -> Tensor[(540), float64] {
    %671 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
    %671.2
  };
  %672() /* ty=Tensor[(540), float64] */
}

def @func_9343() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %676 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %673 = @func_6806() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
    %674 = %673.2;
    %675 = @func_1991() /* ty=Tensor[(540), float64] */;
    (%674, %675)
  };
  %676() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_6705() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32]) {
  %677 = @func_4259() /* ty=(Tensor[(540), float64],) */;
  %678 = @func_5427() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
  %679 = %677.0;
  %680 = %678.0;
  (%679, %680)
}

def @func_3747(%var_3746: Tensor[(1, 540), float64]) -> (Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(1, 540), float64], Tensor[(490), bool]) {
  %689 = fn (%var_3734: Tensor[(1, 540), float64]) -> (Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(1, 540), float64], Tensor[(490), bool]) {
    %681 = cast(%var_3734, dtype="float64") /* ty=Tensor[(1, 540), float64] */;
    %682 = cast(%var_3734, dtype="float64") /* ty=Tensor[(1, 540), float64] */;
    %683 = reshape(%681, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
    %684 = reshape(%682, newshape=[4, 15, 9]) /* ty=Tensor[(4, 15, 9), float64] */;
    %685 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
    %686 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
    %687 = @func_1117(%683, %684) /* ty=Tensor[(4, 15, 9), bool] */;
    %688 = %685.2;
    (%686, %687, %var_3734, %688)
  };
  %689(%var_3746) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(1, 540), float64], Tensor[(490), bool]) */
}

def @func_4610() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32]) {
  @func_4608() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */
}

def @func_263(%var_261: Tensor[(12, 9, 14), uint16], %var_262: Tensor[(12, 9, 14), uint16]) -> (Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) {
  %702 = fn (%var_240: Tensor[(12, 9, 14), uint16], %var_241: Tensor[(12, 9, 14), uint16]) -> (Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) {
    %690 = cast(%var_241, dtype="bool") /* ty=Tensor[(12, 9, 14), bool] */;
    %691 = shape_of(%var_240, dtype="int32") /* ty=Tensor[(3), int32] */;
    %692 = cast(%var_240, dtype="bool") /* ty=Tensor[(12, 9, 14), bool] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %694 = not_equal(%692, %693) /* ty=Tensor[(12, 9, 14), bool] */;
    %695 = cast(%694, dtype="float64") /* ty=Tensor[(12, 9, 14), float64] */;
    %696 = cast(%694, dtype="int8") /* ty=Tensor[(12, 9, 14), int8] */;
    %697 = shape_of(%var_241, dtype="int32") /* ty=Tensor[(3), int32] */;
    %698 = cast(%var_241, dtype="int8") /* ty=Tensor[(12, 9, 14), int8] */;
    %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %700 = atan(%695) /* ty=Tensor[(12, 9, 14), float64] */;
    %701 = left_shift(%698, %699) /* ty=Tensor[(12, 9, 14), int8] */;
    (%700, %701)
  };
  %702(%var_261, %var_262) /* ty=(Tensor[(12, 9, 14), float64], Tensor[(12, 9, 14), int8]) */
}

def @func_6557() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %703 = @func_2467() /* ty=Tensor[(540), float64] */;
  %704 = @func_5386() /* ty=Tensor[(540), float64] */;
  (%703, %704)
}

def @func_1838(%var_1836: Tensor[(169, 9), float32]) -> (Tensor[(4, 15, 9), bool], Tensor[(13, 13, 9), float32], Tensor[(169, 9), float32]) {
  @func_1835(%var_1836) /* ty=(Tensor[(4, 15, 9), bool], Tensor[(13, 13, 9), float32], Tensor[(169, 9), float32]) */
}

def @func_7498(%var_7495: Tensor[(450), float64], %var_7496: Tensor[(490), bool], %var_7497: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(12, 16, 12), float32], Tensor[(2304), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool], Tensor[(1512), uint16], Tensor[(156, 540), uint16]) {
  %731 = fn (%var_7477: Tensor[(450), float64], %var_7480: Tensor[(490), bool], %var_7481: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(12, 16, 12), float32], Tensor[(2304), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool], Tensor[(1512), uint16], Tensor[(156, 540), uint16]) {
    %705 = cast(meta[relay.Constant][39] /* ty=Tensor[(2304), float32] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %706 = reshape(%705, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
    %707 = @func_2786(%706) /* ty=(Tensor[(12, 16, 12), float32],) */;
    %708 = cast(%var_7477, dtype="float64") /* ty=Tensor[(450), float64] */;
    %709 = cast(%var_7477, dtype="float64") /* ty=Tensor[(450), float64] */;
    %710 = reshape(%708, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
    %711 = reshape(%709, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
    %712 = @func_921(%710, %711) /* ty=(Tensor[(2, 15, 15), float64],) */;
    %713 = cast(%var_7480, dtype="bool") /* ty=Tensor[(490), bool] */;
    %714 = cast(%var_7481, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
    %715 = cast(%var_7480, dtype="bool") /* ty=Tensor[(490), bool] */;
    %716 = reshape(%713, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
    %717 = reshape(%714, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
    %718 = reshape(%715, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
    %719 = @func_2017(%716, %717, %718) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
    %720 = cast(meta[relay.Constant][40] /* ty=Tensor[(156, 1), uint32] */, dtype="uint32") /* ty=Tensor[(156, 1), uint32] */;
    %721 = reshape(%720, newshape=[156]) /* ty=Tensor[(156), uint32] */;
    %722 = @func_3420(%721) /* ty=(Tensor[(540), float64], Tensor[(156), uint32], Tensor[(1, 450), float64], Tensor[(156), uint32]) */;
    %723 = %722.0;
    %724 = cast(%723, dtype="uint16") /* ty=Tensor[(540), uint16] */;
    %725 = cast(meta[relay.Constant][40] /* ty=Tensor[(156, 1), uint32] */, dtype="uint16") /* ty=Tensor[(156, 1), uint16] */;
    %726 = @func_2905() /* ty=Tensor[(540), float64] */;
    %727 = %707.0;
    %728 = %712.0;
    %729 = %719.0;
    %730 = bitwise_xor(%724, %725) /* ty=Tensor[(156, 540), uint16] */;
    (%726, %727, meta[relay.Constant][39] /* ty=Tensor[(2304), float32] */, %728, %var_7477, %729, %var_7480, %var_7481, %730)
  };
  %731(%var_7495, %var_7496, %var_7497) /* ty=(Tensor[(540), float64], Tensor[(12, 16, 12), float32], Tensor[(2304), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool], Tensor[(1512), uint16], Tensor[(156, 540), uint16]) */
}

def @func_5736() -> Tensor[(540), float64] {
  %733 = fn () -> Tensor[(540), float64] {
    %732 = @func_4275() /* ty=(Tensor[(540), float64],) */;
    %732.0
  };
  %733() /* ty=Tensor[(540), float64] */
}

def @func_9391() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %740 = fn () -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
    %734 = @func_5772() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %735 = @func_6557() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %736 = @func_8559() /* ty=(Tensor[(540), float64],) */;
    %737 = %734.1;
    %738 = %735.1;
    %739 = %736.0;
    (%737, %738, %739)
  };
  %740() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_11788() -> (Tensor[(540), float64],) {
  %742 = fn () -> (Tensor[(540), float64],) {
    %741 = @func_5735() /* ty=Tensor[(540), float64] */;
    (%741,)
  };
  %742() /* ty=(Tensor[(540), float64],) */
}

def @func_12124() -> Tensor[(540), float64] {
  %744 = fn () -> Tensor[(540), float64] {
    %743 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %743.0
  };
  %744() /* ty=Tensor[(540), float64] */
}

def @func_6870() -> (Tensor[(450), float64],) {
  %745 = @func_6325() /* ty=(Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(450), float64]) */;
  %746 = %745.3;
  (%746,)
}

def @func_12296() -> (Tensor[(540), float64],) {
  %747 = @func_11787() /* ty=(Tensor[(540), float64],) */;
  %748 = %747.0;
  (%748,)
}

def @func_7372(%var_7358: Tensor[(1521), float32]) -> (Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32]) {
  %749 = @func_5617() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %750 = cast(%var_7358, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %751 = reshape(%750, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %752 = @func_78(%751) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %753 = %749.1;
  %754 = %752.0;
  (%753, %754, %var_7358)
}

def @func_10245() -> (Tensor[(6, 4, 5), uint64],) {
  @func_10243() /* ty=(Tensor[(6, 4, 5), uint64],) */
}

def @func_10744(%var_10743: Tensor[(36), int16]) -> (Tensor[(540), float64], Tensor[(4, 3, 3), int16], Tensor[(36), int16]) {
  %763 = fn (%var_10729: Tensor[(36), int16]) -> (Tensor[(540), float64], Tensor[(4, 3, 3), int16], Tensor[(36), int16]) {
    %755 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %756 = cast(%var_10729, dtype="int16") /* ty=Tensor[(36), int16] */;
    %757 = cast(%var_10729, dtype="int16") /* ty=Tensor[(36), int16] */;
    %758 = reshape(%756, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), int16] */;
    %759 = reshape(%757, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), int16] */;
    %760 = @func_6901(%758, %759) /* ty=(Tensor[(4, 3, 3), int16],) */;
    %761 = %755.0;
    %762 = %760.0;
    (%761, %762, %var_10729)
  };
  %763(%var_10743) /* ty=(Tensor[(540), float64], Tensor[(4, 3, 3), int16], Tensor[(36), int16]) */
}

def @func_1962() -> Tensor[(12, 11, 15), float32] {
  @func_1960() /* ty=Tensor[(12, 11, 15), float32] */
}

def @func_3657(%var_3655: Tensor[(450, 1), float64]) -> (Tensor[(540), float64], Tensor[(156), uint32], Tensor[(156), uint32], Tensor[(2, 15, 15), bool], Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(450, 1), float64], Tensor[(2, 15, 15), float64], Tensor[(12, 11, 15), float32], Tensor[(9, 220), float32], Tensor[(2, 15, 15), float64]) {
  @func_3654(%var_3655) /* ty=(Tensor[(540), float64], Tensor[(156), uint32], Tensor[(156), uint32], Tensor[(2, 15, 15), bool], Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(450, 1), float64], Tensor[(2, 15, 15), float64], Tensor[(12, 11, 15), float32], Tensor[(9, 220), float32], Tensor[(2, 15, 15), float64]) */
}

def @func_2663() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_12683(%var_12610: Tensor[(450), float64]) -> (Tensor[(6, 4, 5), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) {
  %764 = @func_6705() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %765 = cast(%var_12610, dtype="float64") /* ty=Tensor[(450), float64] */;
  %766 = cast(%var_12610, dtype="float64") /* ty=Tensor[(450), float64] */;
  %767 = reshape(%765, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %768 = reshape(%766, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %769 = @func_921(%767, %768) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %770 = %764.1;
  %771 = %769.0;
  %772 = @func_3065() /* ty=Tensor[(540), float64] */;
  (%770, %771, %var_12610, %772)
}

def @func_2282(%var_2280: Tensor[(12, 11, 15), float32], %var_2281: Tensor[(49, 10), bool]) -> (Tensor[(12, 11, 15), uint16], Tensor[(10, 7, 7), float64], Tensor[(49, 10), bool], Tensor[(1512), uint16], Tensor[(10, 7, 7), bool], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) {
  @func_2278(%var_2280, %var_2281) /* ty=(Tensor[(12, 11, 15), uint16], Tensor[(10, 7, 7), float64], Tensor[(49, 10), bool], Tensor[(1512), uint16], Tensor[(10, 7, 7), bool], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) */
}

def @func_6979() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %773 = @func_3369() /* ty=(Tensor[(540), float64],) */;
  %774 = @func_2768() /* ty=Tensor[(540), float64] */;
  %775 = %773.0;
  (%774, %775)
}

def @func_6872() -> (Tensor[(450), float64],) {
  @func_6870() /* ty=(Tensor[(450), float64],) */
}

def @func_6213() -> (Tensor[(6, 4, 5), float32], Tensor[(540), float64]) {
  %776 = @func_4608() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */;
  %777 = %776.1;
  %778 = @func_2768() /* ty=Tensor[(540), float64] */;
  (%777, %778)
}

def @func_8561() -> (Tensor[(540), float64],) {
  @func_8559() /* ty=(Tensor[(540), float64],) */
}

def @func_2652() -> (Tensor[(540), float64],) {
  %780 = fn () -> (Tensor[(540), float64],) {
    %779 = @func_1991() /* ty=Tensor[(540), float64] */;
    (%779,)
  };
  %780() /* ty=(Tensor[(540), float64],) */
}

def @func_11610() -> Tensor[(540), float64] {
  @func_11608() /* ty=Tensor[(540), float64] */
}

def @func_8587(%var_8586: Tensor[(13, 8, 9), float32]) -> Tensor[(13, 8, 9), bool] {
  %785 = fn (%var_8578: Tensor[(13, 8, 9), float32]) -> Tensor[(13, 8, 9), bool] {
    %781 = cast(%var_8578, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
    %782 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(13, 8, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %783 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 8, 9), float32] */, dtype="bool") /* ty=Tensor[(13, 8, 9), bool] */;
    %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%783, %784) /* ty=Tensor[(13, 8, 9), bool] */
  };
  %785(%var_8586) /* ty=Tensor[(13, 8, 9), bool] */
}

def @func_10199() -> (Tensor[(540), float64],) {
  %786 = @func_4224() /* ty=Tensor[(540), float64] */;
  (%786,)
}

def @func_2574(%var_2572: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) {
  @func_2571(%var_2572) /* ty=(Tensor[(540), float64], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) */
}

def @func_6856(%var_6841: Tensor[(6, 4, 13), float64]) -> (Tensor[(6, 4, 13), float64], Tensor[(540), float64]) {
  %787 = cast(%var_6841, dtype="float64") /* ty=Tensor[(6, 4, 13), float64] */;
  %788 = @func_5617() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %789 = asinh(%787) /* ty=Tensor[(6, 4, 13), float64] */;
  %790 = %788.1;
  (%789, %790)
}

def @func_1785(%var_1783: Tensor[(450), float64], %var_1784: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float32], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) {
  @func_1781(%var_1783, %var_1784) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(2, 15, 15), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float32], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) */
}

def @func_10326() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %794 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %791 = @func_7529() /* ty=(Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(2, 15, 15), float64]) */;
    %792 = %791.0;
    %793 = @func_2177() /* ty=Tensor[(540), float64] */;
    (%792, %793)
  };
  %794() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_9030(%var_9027: Tensor[(16, 10, 12), float32]) -> (Tensor[(16, 10, 12), float32],) {
  %795 = cast(%var_9027, dtype="float32") /* ty=Tensor[(16, 10, 12), float32] */;
  %796 = cosh(%795) /* ty=Tensor[(16, 10, 12), float32] */;
  (%796,)
}

def @func_11355() -> (Tensor[(2, 15, 15), float32], Tensor[(540), float64]) {
  @func_11353() /* ty=(Tensor[(2, 15, 15), float32], Tensor[(540), float64]) */
}

def @func_9674() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %800 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %797 = @func_5532() /* ty=(Tensor[(540), float64],) */;
    %798 = %797.0;
    %799 = @func_5735() /* ty=Tensor[(540), float64] */;
    (%798, %799)
  };
  %800() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_5595(%var_5559: float64, %var_5560: Tensor[(7, 12, 1), float64]) -> (Tensor[(7, 12, 1), float64], Tensor[(3, 6, 4), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) {
  %801 = cast(%var_5559, dtype="float64") /* ty=float64 */;
  %802 = cast(%var_5560, dtype="float64") /* ty=Tensor[(7, 12, 1), float64] */;
  %803 = @func_5271() /* ty=(Tensor[(3, 6, 4), float64],) */;
  %804 = %803.0;
  %805 = cast(%804, dtype="float64") /* ty=Tensor[(3, 6, 4), float64] */;
  %806 = @func_2651() /* ty=(Tensor[(540), float64],) */;
  %807 = cast(meta[relay.Constant][42] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %808 = reshape(%807, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %809 = @func_3232(%808) /* ty=(Tensor[(540), float32], Tensor[(507, 3), float32], Tensor[(13, 13, 9), float32], Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(540), float64]) */;
  %810 = divide(%801, %802) /* ty=Tensor[(7, 12, 1), float64] */;
  %811 = exp(%805) /* ty=Tensor[(3, 6, 4), float64] */;
  %812 = %806.0;
  %813 = %809.3;
  (%810, %811, %812, %813, meta[relay.Constant][42] /* ty=Tensor[(450), float64] */)
}

def @func_4365(%var_4348: Tensor[(169, 9), float32]) -> (Tensor[(540), float64], Tensor[(1521), float32], Tensor[(169, 9), float64]) {
  %814 = cast(meta[relay.Constant][43] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %815 = reshape(%814, newshape=[169, 9]) /* ty=Tensor[(169, 9), float32] */;
  %816 = @func_1835(%815) /* ty=(Tensor[(4, 15, 9), bool], Tensor[(13, 13, 9), float32], Tensor[(169, 9), float32]) */;
  %817 = %816.2;
  %818 = cast(%var_4348, dtype="float64") /* ty=Tensor[(169, 9), float64] */;
  %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(2), int32] */;
  %820 = cast(%817, dtype="float64") /* ty=Tensor[(169, 9), float64] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %822 = @func_1991() /* ty=Tensor[(540), float64] */;
  %823 = floor_divide(%820, %821) /* ty=Tensor[(169, 9), float64] */;
  (%822, meta[relay.Constant][43] /* ty=Tensor[(1521), float32] */, %823)
}

def @func_5022() -> (Tensor[(1512), float64],) {
  %824 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
  %825 = %824.3;
  (%825,)
}

def @func_11608() -> Tensor[(540), float64] {
  @func_4622() /* ty=Tensor[(540), float64] */
}

def @func_4259() -> (Tensor[(540), float64],) {
  %826 = @func_4166() /* ty=Tensor[(540), float64] */;
  (%826,)
}

def @func_11721(%var_11714: Tensor[(450), float64]) -> (Tensor[(540), float64], Tensor[(450), float64], Tensor[(450), float64]) {
  %827 = @func_6599() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %828 = cast(%var_11714, dtype="float64") /* ty=Tensor[(450), float64] */;
  %829 = reshape(%828, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %830 = @func_10569(%829) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float64], Tensor[(520), int32]) */;
  %831 = %827.1;
  %832 = %830.2;
  (%831, %832, %var_11714)
}

def @func_11844(%var_11842: Tensor[(4, 1, 13), float64], %var_11843: Tensor[(4, 1, 13), float64]) -> (Tensor[(450), float64], Tensor[(156), uint32], Tensor[(6, 4, 5), uint64], Tensor[(4, ?, 13), float64], Tensor[(4, ?, 13), bool]) {
  %864 = fn (%var_11793: Tensor[(4, 1, 13), float64], %var_11794: Tensor[(4, 1, 13), float64]) -> (Tensor[(450), float64], Tensor[(156), uint32], Tensor[(6, 4, 5), uint64], Tensor[(4, ?, 13), float64], Tensor[(4, ?, 13), bool]) {
    %833 = cast(meta[relay.Constant][44] /* ty=Tensor[(156), uint32] */, dtype="uint32") /* ty=Tensor[(156), uint32] */;
    %834 = reshape(%833, newshape=[156]) /* ty=Tensor[(156), uint32] */;
    %835 = @func_2740(%834) /* ty=(Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
    %836 = @func_10243() /* ty=(Tensor[(6, 4, 5), uint64],) */;
    %837 = cast(%var_11793, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
    %838 = shape_of(%var_11794, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(%var_11794, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %841 = cast(%var_11794, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
    %842 = shape_of(%var_11793, dtype="int32") /* ty=Tensor[(3), int32] */;
    %843 = cast(%var_11793, dtype="float64") /* ty=Tensor[(4, 1, 13), float64] */;
    %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %845 = mod(%843, %844) /* ty=Tensor[(4, ?, 13), float64] */;
    %846 = cast(%845, dtype="float32") /* ty=Tensor[(4, ?, 13), float32] */;
    %847 = shape_of(%var_11793, dtype="int32") /* ty=Tensor[(3), int32] */;
    %848 = cast(%var_11793, dtype="float32") /* ty=Tensor[(4, 1, 13), float32] */;
    %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %850 = minimum(%848, %849) /* ty=Tensor[(4, ?, 13), float32] */;
    %851 = cast(%var_11794, dtype="bool") /* ty=Tensor[(4, 1, 13), bool] */;
    %852 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
    %853 = cast(%850, dtype="bool") /* ty=Tensor[(4, ?, 13), bool] */;
    %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %855 = logical_and(%853, %854) /* ty=Tensor[(4, ?, 13), bool] */;
    %856 = cast(%855, dtype="bool") /* ty=Tensor[(4, ?, 13), bool] */;
    %857 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
    %858 = cast(%850, dtype="bool") /* ty=Tensor[(4, ?, 13), bool] */;
    %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %860 = %835.0;
    %861 = %836.0;
    %862 = divide(%839, %840) /* ty=Tensor[(4, ?, 13), float64] */;
    %863 = greater_equal(%858, %859) /* ty=Tensor[(4, ?, 13), bool] */;
    (%860, meta[relay.Constant][44] /* ty=Tensor[(156), uint32] */, %861, %862, %863)
  };
  %864(%var_11842, %var_11843) /* ty=(Tensor[(450), float64], Tensor[(156), uint32], Tensor[(6, 4, 5), uint64], Tensor[(4, ?, 13), float64], Tensor[(4, ?, 13), bool]) */
}

def @func_12581() -> Tensor[(540), float64] {
  %866 = fn () -> Tensor[(540), float64] {
    %865 = @func_9390() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
    %865.2
  };
  %866() /* ty=Tensor[(540), float64] */
}

def @func_6905(%var_6903: Tensor[(4, 3, 3), int16], %var_6904: Tensor[(4, 3, 3), int16]) -> (Tensor[(4, 3, 3), int16],) {
  @func_6901(%var_6903, %var_6904) /* ty=(Tensor[(4, 3, 3), int16],) */
}

def @func_5773() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %871 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %867 = @func_5093() /* ty=(Tensor[(540), float64],) */;
    %868 = @func_4119() /* ty=(Tensor[(540), float64],) */;
    %869 = %867.0;
    %870 = %868.0;
    (%869, %870)
  };
  %871() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_9620() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %872 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %873 = @func_8080() /* ty=Tensor[(540), float64] */;
  %874 = %872.0;
  (%873, %874)
}

def @func_227(%var_195: Tensor[(13, 1, 12), uint32], %var_196: Tensor[(13, 14, 12), uint32]) -> (Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) {
  %875 = cast(%var_195, dtype="uint32") /* ty=Tensor[(13, 1, 12), uint32] */;
  %876 = cast(%var_196, dtype="uint32") /* ty=Tensor[(13, 14, 12), uint32] */;
  %877 = cast(meta[relay.Constant][45] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %878 = reshape(%877, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %879 = @func_78(%878) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %880 = cast(%var_195, dtype="bool") /* ty=Tensor[(13, 1, 12), bool] */;
  %881 = cast(%var_196, dtype="bool") /* ty=Tensor[(13, 14, 12), bool] */;
  %882 = cast(meta[relay.Constant][45] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %883 = reshape(%882, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %884 = @func_78(%883) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %885 = bitwise_and(%875, %876) /* ty=Tensor[(13, 14, 12), uint32] */;
  %886 = %879.0;
  %887 = logical_or(%880, %881) /* ty=Tensor[(13, 14, 12), bool] */;
  %888 = %884.0;
  (%885, %886, meta[relay.Constant][45] /* ty=Tensor[(1521), float32] */, %887, %888)
}

def @func_10539() -> (Tensor[(540), float64], Tensor[(1512), float64], Tensor[(540), float64]) {
  %889 = @func_7422() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %890 = @func_6878() /* ty=(Tensor[(540), float64],) */;
  %891 = %889.0;
  %892 = @func_5929() /* ty=Tensor[(1512), float64] */;
  %893 = %890.0;
  (%891, %892, %893)
}

def @func_2278(%var_2197: Tensor[(12, 11, 15), float32], %var_2246: Tensor[(49, 10), bool]) -> (Tensor[(12, 11, 15), uint16], Tensor[(10, 7, 7), float64], Tensor[(49, 10), bool], Tensor[(1512), uint16], Tensor[(10, 7, 7), bool], Tensor[(2, 15, 15), float64], Tensor[(520), int32]) {
  %894 = @func_1960() /* ty=Tensor[(12, 11, 15), float32] */;
  %895 = cast(%var_2197, dtype="uint16") /* ty=Tensor[(12, 11, 15), uint16] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%894, dtype="uint16") /* ty=Tensor[(12, 11, 15), uint16] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %899 = bitwise_xor(%897, %898) /* ty=Tensor[(12, 11, 15), uint16] */;
  %900 = cast(%894, dtype="uint16") /* ty=Tensor[(12, 11, 15), uint16] */;
  %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%899, dtype="uint16") /* ty=Tensor[(12, 11, 15), uint16] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %904 = cast(%var_2246, dtype="bool") /* ty=Tensor[(49, 10), bool] */;
  %905 = cast(meta[relay.Constant][46] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %906 = cast(%var_2246, dtype="bool") /* ty=Tensor[(49, 10), bool] */;
  %907 = reshape(%904, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %908 = reshape(%905, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %909 = reshape(%906, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %910 = @func_2017(%907, %908, %909) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %911 = %910.4;
  %912 = cast(%911, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %913 = cast(meta[relay.Constant][46] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %914 = cast(%911, dtype="bool") /* ty=Tensor[(10, 7, 7), bool] */;
  %915 = reshape(%912, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %916 = reshape(%913, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %917 = reshape(%914, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %918 = @func_2017(%915, %916, %917) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %919 = cast(meta[relay.Constant][47] /* ty=Tensor[(520), int32] */, dtype="int32") /* ty=Tensor[(520), int32] */;
  %920 = reshape(%919, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %921 = @func_1363(%920) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %922 = add(%902, %903) /* ty=Tensor[(12, 11, 15), uint16] */;
  %923 = %918.0;
  %924 = %921.0;
  (%922, %911, %var_2246, meta[relay.Constant][46] /* ty=Tensor[(1512), uint16] */, %923, %924, meta[relay.Constant][47] /* ty=Tensor[(520), int32] */)
}

def @func_7179() -> (Tensor[(540), float64], Tensor[(13, 13, 9), float32]) {
  @func_7177() /* ty=(Tensor[(540), float64], Tensor[(13, 13, 9), float32]) */
}

def @func_8185() -> (Tensor[(540), float64], Tensor[(169, 9), float32], Tensor[(1521), float32]) {
  %925 = @func_7177() /* ty=(Tensor[(540), float64], Tensor[(13, 13, 9), float32]) */;
  %926 = cast(meta[relay.Constant][48] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %927 = reshape(%926, newshape=[169, 9]) /* ty=Tensor[(169, 9), float32] */;
  %928 = @func_1835(%927) /* ty=(Tensor[(4, 15, 9), bool], Tensor[(13, 13, 9), float32], Tensor[(169, 9), float32]) */;
  %929 = %925.0;
  %930 = %928.2;
  (%929, %930, meta[relay.Constant][48] /* ty=Tensor[(1521), float32] */)
}

def @func_9015(%var_8990: Tensor[(2, 11, 14), float64], %var_9008: Tensor[(156), uint32], %var_9009: Tensor[(2184), uint32]) -> (Tensor[(2, 11, 14), bool], Tensor[(540), float64], Tensor[(13, 14, 12), uint32], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  %931 = cast(%var_8990, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %932 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(2, 11, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 11, 14), float64] */, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %935 = cast(%var_9008, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %936 = cast(%var_9009, dtype="uint32") /* ty=Tensor[(2184), uint32] */;
  %937 = reshape(%935, newshape=[13, 1, 12]) /* ty=Tensor[(13, 1, 12), uint32] */;
  %938 = reshape(%936, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), uint32] */;
  %939 = @func_227(%937, %938) /* ty=(Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) */;
  %940 = equal(%933, %934) /* ty=Tensor[(2, 11, 14), bool] */;
  %941 = @func_3706() /* ty=Tensor[(540), float64] */;
  %942 = %939.0;
  (%940, %941, %942, %var_9008, %var_9009)
}

def @func_11324() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_11322() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_12210() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %943 = @func_6255() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) */;
  %944 = @func_3503() /* ty=Tensor[(540), float64] */;
  %945 = %943.1;
  (%944, %945)
}

def @func_12392() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64], Tensor[(?, 450), float64]) {
  %946 = @func_7127() /* ty=(Tensor[(540), float64],) */;
  %947 = @func_9634() /* ty=(Tensor[(540), float64],) */;
  %948 = cast(meta[relay.Constant][50] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %949 = reshape(%948, newshape=[1, 450]) /* ty=Tensor[(1, 450), float64] */;
  %950 = @func_12082(%949) /* ty=(Tensor[(540), float64], Tensor[(?, 450), bool], Tensor[(2, 15, 15), float64]) */;
  %951 = %950.1;
  %952 = cast(%951, dtype="float64") /* ty=Tensor[(?, 450), float64] */;
  %953 = %946.0;
  %954 = @func_7743() /* ty=Tensor[(540), float64] */;
  %955 = @func_12167() /* ty=Tensor[(540), float64] */;
  %956 = %947.0;
  %957 = log2(%952) /* ty=Tensor[(?, 450), float64] */;
  (%953, %954, %955, meta[relay.Constant][50] /* ty=Tensor[(450), float64] */, %956, %957)
}

def @func_5093() -> (Tensor[(540), float64],) {
  %958 = @func_3503() /* ty=Tensor[(540), float64] */;
  (%958,)
}

def @func_7157() -> (Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) {
  %962 = fn () -> (Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) {
    %959 = @func_6213() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(540), float64]) */;
    %960 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
    %961 = %959.0;
    (%960, %961)
  };
  %962() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) */
}

def @func_4120() -> (Tensor[(540), float64],) {
  %964 = fn () -> (Tensor[(540), float64],) {
    %963 = @func_2879() /* ty=Tensor[(540), float64] */;
    (%963,)
  };
  %964() /* ty=(Tensor[(540), float64],) */
}

def @func_10076(%var_10074: Tensor[(2, 8, 16), float64]) -> Tensor[(2, 8, 16), float64] {
  @func_10073(%var_10074) /* ty=Tensor[(2, 8, 16), float64] */
}

def @func_6076() -> (Tensor[(2, 15, 15), float64], Tensor[(1512), float64]) {
  %965 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %966 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
  %967 = %965.1;
  %968 = %966.3;
  (%967, %968)
}

def @func_10610() -> (Tensor[(540), float64],) {
  %970 = fn () -> (Tensor[(540), float64],) {
    %969 = @func_2905() /* ty=Tensor[(540), float64] */;
    (%969,)
  };
  %970() /* ty=(Tensor[(540), float64],) */
}

def @func_10481(%var_10479: Tensor[(693), float32], %var_10480: Tensor[(4, 15, 9), bool]) -> (Tensor[(6, 4, 5), float32], Tensor[(693), float32], Tensor[(520), int32], Tensor[(4, 15, 9), uint16]) {
  %986 = fn (%var_10427: Tensor[(693), float32], %var_10441: Tensor[(4, 15, 9), bool]) -> (Tensor[(6, 4, 5), float32], Tensor[(693), float32], Tensor[(520), int32], Tensor[(4, 15, 9), uint16]) {
    %971 = @func_7156() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) */;
    %972 = cast(%var_10427, dtype="float32") /* ty=Tensor[(693), float32] */;
    %973 = cast(meta[relay.Constant][51] /* ty=Tensor[(520), int32] */, dtype="int32") /* ty=Tensor[(520), int32] */;
    %974 = cast(%var_10427, dtype="uint16") /* ty=Tensor[(693), uint16] */;
    %975 = reshape(%972, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), float32] */;
    %976 = reshape(%973, newshape=[520]) /* ty=Tensor[(520), int32] */;
    %977 = reshape(%974, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint16] */;
    %978 = @func_1704(%975, %976, %977) /* ty=(Tensor[(7, 9, 11), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(12, 9, 14), float64], Tensor[(1512), float32], Tensor[(7, 9, 11), float64]) */;
    %979 = %978.3;
    %980 = cast(%var_10441, dtype="uint16") /* ty=Tensor[(4, 15, 9), uint16] */;
    %981 = shape_of(%979, dtype="int32") /* ty=Tensor[(3), int32] */;
    %982 = cast(%979, dtype="uint16") /* ty=Tensor[(4, 15, 9), uint16] */;
    %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %984 = %971.1;
    %985 = maximum(%982, %983) /* ty=Tensor[(4, 15, 9), uint16] */;
    (%984, %var_10427, meta[relay.Constant][51] /* ty=Tensor[(520), int32] */, %985)
  };
  %986(%var_10479, %var_10480) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(693), float32], Tensor[(520), int32], Tensor[(4, 15, 9), uint16]) */
}

def @func_11635(%var_11614: Tensor[(520), int32]) -> (Tensor[(540), float64], Tensor[(450), float64], Tensor[(520), int32]) {
  %987 = @func_11022() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(10, 45), float32]) */;
  %988 = cast(%var_11614, dtype="int32") /* ty=Tensor[(520), int32] */;
  %989 = reshape(%988, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), int32] */;
  %990 = @func_1363(%989) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) */;
  %991 = %987.0;
  %992 = %990.1;
  (%991, %992, %var_11614)
}

def @func_9328() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_9326() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_2022(%var_2019: Tensor[(10, 7, 7), bool], %var_2020: Tensor[(756, 2), uint16], %var_2021: Tensor[(10, 7, 7), bool]) -> (Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) {
  @func_2017(%var_2019, %var_2020, %var_2021) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */
}

def @func_2879() -> Tensor[(540), float64] {
  %993 = @func_2661() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %993.0
}

def @func_9033(%var_9031: Tensor[(16, 10, 12), float32]) -> (Tensor[(16, 10, 12), float32],) {
  @func_9030(%var_9031) /* ty=(Tensor[(16, 10, 12), float32],) */
}

def @func_10149() -> (Tensor[(540), float64],) {
  %994 = @func_7274() /* ty=Tensor[(540), float64] */;
  (%994,)
}

def @func_9797(%var_9736: Tensor[(6, 490), bool], %var_9765: Tensor[(308), float64], %var_9766: Tensor[(156), uint32], %var_9767: Tensor[(2, 1092), uint32], %var_9779: Tensor[(1521), float32]) -> (Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(1512), uint16], Tensor[(6, 490), float32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(308), float64], Tensor[(156), uint32], Tensor[(2, 1092), uint32], Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(1521), float32]) {
  %995 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 490), bool] */, dtype="bool") /* ty=Tensor[(1, 490), bool] */;
  %996 = cast(meta[relay.Constant][53] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %997 = reshape(%995, newshape=[7, 70]) /* ty=Tensor[(7, 70), bool] */;
  %998 = reshape(%996, newshape=[1512]) /* ty=Tensor[(1512), uint16] */;
  %999 = @func_3005(%997, %998) /* ty=(Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(7, 70), bool], Tensor[(1512), uint16]) */;
  %1000 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 490), bool] */, dtype="float32") /* ty=Tensor[(1, 490), float32] */;
  %1001 = cast(%var_9736, dtype="float32") /* ty=Tensor[(6, 490), float32] */;
  %1002 = @func_9390() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %1003 = @func_5772() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1004 = cast(%var_9765, dtype="float64") /* ty=Tensor[(308), float64] */;
  %1005 = cast(%var_9766, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %1006 = cast(%var_9767, dtype="uint32") /* ty=Tensor[(2, 1092), uint32] */;
  %1007 = reshape(%1004, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), float64] */;
  %1008 = reshape(%1005, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %1009 = reshape(%1006, newshape=[2184]) /* ty=Tensor[(2184), uint32] */;
  %1010 = @func_9015(%1007, %1008, %1009) /* ty=(Tensor[(2, 11, 14), bool], Tensor[(540), float64], Tensor[(13, 14, 12), uint32], Tensor[(156), uint32], Tensor[(2184), uint32]) */;
  %1011 = @func_7951() /* ty=(Tensor[(540), float64],) */;
  %1012 = cast(%var_9779, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %1013 = reshape(%1012, newshape=[1521]) /* ty=Tensor[(1521), float32] */;
  %1014 = @func_9500(%1013) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(1521), float32], Tensor[(1521), float32], Tensor[(540), float64], Tensor[(450), float64], Tensor[(540), float64]) */;
  %1015 = @func_5735() /* ty=Tensor[(540), float64] */;
  %1016 = %999.1;
  %1017 = mod(%1000, %1001) /* ty=Tensor[(6, 490), float32] */;
  %1018 = %1002.1;
  %1019 = %1003.0;
  %1020 = %1010.1;
  %1021 = %1011.0;
  %1022 = %1014.0;
  (%1015, %1016, meta[relay.Constant][53] /* ty=Tensor[(1512), uint16] */, %1017, %1018, %1019, %1020, %var_9765, %var_9766, %var_9767, %1021, %1022, %var_9779)
}

def @func_11251() -> (Tensor[(2, 15, 15), float64], Tensor[(540), float64]) {
  %1023 = @func_5065() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) */;
  %1024 = @func_2707() /* ty=Tensor[(2, 15, 15), float64] */;
  %1025 = %1023.2;
  (%1024, %1025)
}

def @func_10572(%var_10570: Tensor[(450), float64]) -> (Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float64], Tensor[(520), int32]) {
  @func_10569(%var_10570) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float64], Tensor[(520), int32]) */
}

def @func_7681(%var_7668: Tensor[(1512), float64]) -> (Tensor[(1512), bool],) {
  %1026 = @func_5929() /* ty=Tensor[(1512), float64] */;
  %1027 = cast(%var_7668, dtype="uint64") /* ty=Tensor[(1512), uint64] */;
  %1028 = shape_of(%1026, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1029 = cast(%1026, dtype="uint64") /* ty=Tensor[(1512), uint64] */;
  %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1031 = right_shift(%1029, %1030) /* ty=Tensor[(1512), uint64] */;
  %1032 = cast(%1031, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %1033 = shape_of(%var_7668, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1034 = cast(%var_7668, dtype="bool") /* ty=Tensor[(1512), bool] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1036 = greater_equal(%1034, %1035) /* ty=Tensor[(1512), bool] */;
  (%1036,)
}

def @func_13144() -> (Tensor[(8, 7, 8), float32],) {
  @func_13142() /* ty=(Tensor[(8, 7, 8), float32],) */
}

def @func_8056() -> Tensor[(540), float64] {
  @func_8054() /* ty=Tensor[(540), float64] */
}

def @func_1121(%var_1119: Tensor[(4, 15, 9), float64], %var_1120: Tensor[(4, 15, 9), float64]) -> Tensor[(4, 15, 9), bool] {
  @func_1117(%var_1119, %var_1120) /* ty=Tensor[(4, 15, 9), bool] */
}

def @func_7375(%var_7373: Tensor[(1521), float32]) -> (Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32]) {
  @func_7372(%var_7373) /* ty=(Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32]) */
}

def @func_8380(%var_8378: Tensor[(490), bool]) -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(756, 2), uint16], Tensor[(490), bool], Tensor[(1512), uint16], Tensor[(1512), float64], Tensor[(10, 45), float32]) {
  @func_8377(%var_8378) /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(756, 2), uint16], Tensor[(490), bool], Tensor[(1512), uint16], Tensor[(1512), float64], Tensor[(10, 45), float32]) */
}

def @func_9804(%var_9799: Tensor[(6, 490), bool], %var_9800: Tensor[(308), float64], %var_9801: Tensor[(156), uint32], %var_9802: Tensor[(2, 1092), uint32], %var_9803: Tensor[(1521), float32]) -> (Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(1512), uint16], Tensor[(6, 490), float32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(308), float64], Tensor[(156), uint32], Tensor[(2, 1092), uint32], Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(1521), float32]) {
  @func_9797(%var_9799, %var_9800, %var_9801, %var_9802, %var_9803) /* ty=(Tensor[(540), float64], Tensor[(756, 2), uint16], Tensor[(1512), uint16], Tensor[(6, 490), float32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(308), float64], Tensor[(156), uint32], Tensor[(2, 1092), uint32], Tensor[(540), float64], Tensor[(6, 4, 5), float32], Tensor[(1521), float32]) */
}

def @func_13038() -> (Tensor[(540), float64],) {
  @func_13036() /* ty=(Tensor[(540), float64],) */
}

def @func_5534() -> (Tensor[(540), float64],) {
  @func_5532() /* ty=(Tensor[(540), float64],) */
}

def @func_7529() -> (Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(2, 15, 15), float64]) {
  %1037 = @func_6878() /* ty=(Tensor[(540), float64],) */;
  %1038 = @func_2438() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) */;
  %1039 = %1038.2;
  %1040 = cast(%1039, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %1041 = cast(%1039, dtype="float64") /* ty=Tensor[(10, 45), float64] */;
  %1042 = reshape(%1040, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %1043 = reshape(%1041, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %1044 = @func_921(%1042, %1043) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %1045 = %1037.0;
  %1046 = %1044.0;
  (%1045, %1039, %1046)
}

def @func_4017() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %1049 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %1047 = @func_3065() /* ty=Tensor[(540), float64] */;
    %1048 = @func_2177() /* ty=Tensor[(540), float64] */;
    (%1047, %1048)
  };
  %1049() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_3790() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) {
  %1050 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
  %1051 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1052 = cast(meta[relay.Constant][54] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1053 = cast(meta[relay.Constant][54] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1054 = reshape(%1052, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %1055 = reshape(%1053, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %1056 = @func_921(%1054, %1055) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %1057 = %1050.2;
  %1058 = @func_2768() /* ty=Tensor[(540), float64] */;
  %1059 = %1051.1;
  %1060 = %1056.0;
  (%1057, %1058, %1059, %1060, meta[relay.Constant][54] /* ty=Tensor[(450), float64] */)
}

def @func_12298() -> (Tensor[(540), float64],) {
  @func_12296() /* ty=(Tensor[(540), float64],) */
}

def @func_5095() -> (Tensor[(540), float64],) {
  @func_5093() /* ty=(Tensor[(540), float64],) */
}

def @func_6255() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) {
  %1061 = @func_2382() /* ty=(Tensor[(540), float64],) */;
  %1062 = cast(meta[relay.Constant][55] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %1063 = @func_5929() /* ty=Tensor[(1512), float64] */;
  %1064 = cast(%1063, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %1065 = cast(meta[relay.Constant][55] /* ty=Tensor[(490), bool] */, dtype="bool") /* ty=Tensor[(490), bool] */;
  %1066 = reshape(%1062, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %1067 = reshape(%1064, newshape=[756, 2]) /* ty=Tensor[(756, 2), uint16] */;
  %1068 = reshape(%1065, newshape=[10, 7, 7]) /* ty=Tensor[(10, 7, 7), bool] */;
  %1069 = @func_2017(%1066, %1067, %1068) /* ty=(Tensor[(10, 7, 7), bool], Tensor[(12, 9, 14), int8], Tensor[(756, 2), uint16], Tensor[(10, 7, 7), bool], Tensor[(10, 7, 7), float64]) */;
  %1070 = @func_2177() /* ty=Tensor[(540), float64] */;
  %1071 = %1061.0;
  %1072 = %1069.3;
  (%1070, %1071, %1063, %1072, meta[relay.Constant][55] /* ty=Tensor[(490), bool] */)
}

def @func_9713() -> (Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) {
  %1081 = fn () -> (Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) {
    %1073 = @func_6599() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %1074 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
    %1075 = cast(meta[relay.Constant][56] /* ty=Tensor[(1512), uint16] */, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
    %1076 = reshape(%1075, newshape=[1512]) /* ty=Tensor[(1512), uint16] */;
    %1077 = @func_2571(%1076) /* ty=(Tensor[(540), float64], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) */;
    %1078 = %1073.0;
    %1079 = %1074.1;
    %1080 = %1077.1;
    (%1078, %1079, %1080, meta[relay.Constant][56] /* ty=Tensor[(1512), uint16] */)
  };
  %1081() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) */
}

def @func_4761(%var_4759: Tensor[(6, 252), uint16]) -> (Tensor[(2, 15, 15), float64], Tensor[(12, 9, 14), int8], Tensor[(490), bool], Tensor[(6, 252), uint16]) {
  @func_4758(%var_4759) /* ty=(Tensor[(2, 15, 15), float64], Tensor[(12, 9, 14), int8], Tensor[(490), bool], Tensor[(6, 252), uint16]) */
}

def @func_5273() -> (Tensor[(3, 6, 4), float64],) {
  @func_5271() /* ty=(Tensor[(3, 6, 4), float64],) */
}

def @func_7684(%var_7682: Tensor[(1512), float64]) -> (Tensor[(1512), bool],) {
  @func_7681(%var_7682) /* ty=(Tensor[(1512), bool],) */
}

def @func_8312() -> (Tensor[(540), float64],) {
  %1082 = @func_2905() /* ty=Tensor[(540), float64] */;
  (%1082,)
}

def @func_12933() -> Tensor[(540), float64] {
  @func_12931() /* ty=Tensor[(540), float64] */
}

def @func_6517(%var_6476: Tensor[(1521), float32]) -> (Tensor[(540), float64], Tensor[(1521), uint8], Tensor[(1521), int8], Tensor[(1521), float32]) {
  %1083 = cast(%var_6476, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %1084 = reshape(%1083, newshape=[169, 9]) /* ty=Tensor[(169, 9), float32] */;
  %1085 = @func_4365(%1084) /* ty=(Tensor[(540), float64], Tensor[(1521), float32], Tensor[(169, 9), float64]) */;
  %1086 = %1085.1;
  %1087 = cast(%var_6476, dtype="uint8") /* ty=Tensor[(1521), uint8] */;
  %1088 = shape_of(%1086, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1089 = cast(%1086, dtype="uint8") /* ty=Tensor[(1521), uint8] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1091 = cast(%var_6476, dtype="int8") /* ty=Tensor[(1521), int8] */;
  %1092 = shape_of(%1086, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1093 = cast(%1086, dtype="int8") /* ty=Tensor[(1521), int8] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?), int8] */;
  %1095 = cast(meta[relay.Constant][57] /* ty=Tensor[(1521), float32] */, dtype="int8") /* ty=Tensor[(1521), int8] */;
  %1096 = shape_of(%var_6476, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1097 = cast(%var_6476, dtype="int8") /* ty=Tensor[(1521), int8] */;
  %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?), int8] */;
  %1099 = add(%1097, %1098) /* ty=Tensor[(1521), int8] */;
  %1100 = cast(%1099, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %1101 = @func_2768() /* ty=Tensor[(540), float64] */;
  %1102 = right_shift(%1089, %1090) /* ty=Tensor[(1521), uint8] */;
  %1103 = bitwise_and(%1093, %1094) /* ty=Tensor[(1521), int8] */;
  %1104 = tan(%1100) /* ty=Tensor[(1521), float32] */;
  (%1101, %1102, %1103, %1104)
}

def @func_2742(%var_2741: Tensor[(156), uint32]) -> (Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) {
  %1113 = fn (%var_2735: Tensor[(156), uint32]) -> (Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) {
    %1105 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
    %1106 = cast(%var_2735, dtype="uint32") /* ty=Tensor[(156), uint32] */;
    %1107 = cast(meta[relay.Constant][58] /* ty=Tensor[(2184), uint32] */, dtype="uint32") /* ty=Tensor[(2184), uint32] */;
    %1108 = reshape(%1106, newshape=[13, 1, 12]) /* ty=Tensor[(13, 1, 12), uint32] */;
    %1109 = reshape(%1107, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), uint32] */;
    %1110 = @func_227(%1108, %1109) /* ty=(Tensor[(13, 14, 12), uint32], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(13, 14, 12), bool], Tensor[(13, 13, 9), float32]) */;
    %1111 = %1105.2;
    %1112 = %1110.2;
    (%1111, %1112, %var_2735, meta[relay.Constant][58] /* ty=Tensor[(2184), uint32] */)
  };
  %1113(%var_2741) /* ty=(Tensor[(450), float64], Tensor[(1521), float32], Tensor[(156), uint32], Tensor[(2184), uint32]) */
}

def @func_10201() -> (Tensor[(540), float64],) {
  @func_10199() /* ty=(Tensor[(540), float64],) */
}

def @func_6859(%var_6857: Tensor[(6, 4, 13), float64]) -> (Tensor[(6, 4, 13), float64], Tensor[(540), float64]) {
  @func_6856(%var_6857) /* ty=(Tensor[(6, 4, 13), float64], Tensor[(540), float64]) */
}

def @func_7952() -> (Tensor[(540), float64],) {
  %1116 = fn () -> (Tensor[(540), float64],) {
    %1114 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %1115 = %1114.1;
    (%1115,)
  };
  %1116() /* ty=(Tensor[(540), float64],) */
}

def @func_9593(%var_9584: Tensor[(1512), uint16]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), uint16]) {
  %1117 = @func_8605() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1118 = @func_7127() /* ty=(Tensor[(540), float64],) */;
  %1119 = cast(%var_9584, dtype="uint16") /* ty=Tensor[(1512), uint16] */;
  %1120 = reshape(%1119, newshape=[18, 84]) /* ty=Tensor[(18, 84), uint16] */;
  %1121 = @func_2597(%1120) /* ty=(Tensor[(540), float64], Tensor[(1512), uint16], Tensor[(18, 84), uint16]) */;
  %1122 = %1117.0;
  %1123 = %1118.0;
  %1124 = %1121.0;
  (%1122, %1123, %1124, %var_9584)
}

def @func_10793(%var_10792: Tensor[(6, 8, 1), float32]) -> Tensor[(6, 8, 1), float32] {
  %1126 = fn (%var_10782: Tensor[(6, 8, 1), float32]) -> Tensor[(6, 8, 1), float32] {
    %1125 = cast(%var_10782, dtype="float32") /* ty=Tensor[(6, 8, 1), float32] */;
    exp(%1125) /* ty=Tensor[(6, 8, 1), float32] */
  };
  %1126(%var_10792) /* ty=Tensor[(6, 8, 1), float32] */
}

def @func_5617() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %1127 = @func_4844() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1128 = @func_3801() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1129 = %1127.1;
  %1130 = %1128.0;
  (%1129, %1130)
}

def @func_2469() -> Tensor[(540), float64] {
  @func_2467() /* ty=Tensor[(540), float64] */
}

def @func_3255() -> Tensor[(2, 15, 15), bool] {
  @func_3253() /* ty=Tensor[(2, 15, 15), bool] */
}

def @func_6126(%var_6101: Tensor[(4, 1, 1), float32], %var_6102: Tensor[(4, 14, 2), float32], %var_6117: Tensor[(2304), float32]) -> (Tensor[(4, 14, 2), int8], Tensor[(12, 16, 12), float32], Tensor[(2304), float32]) {
  %1131 = cast(%var_6101, dtype="float32") /* ty=Tensor[(4, 1, 1), float32] */;
  %1132 = cast(%var_6102, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
  %1133 = divide(%1131, %1132) /* ty=Tensor[(4, 14, 2), float32] */;
  %1134 = cast(%1133, dtype="int8") /* ty=Tensor[(4, 14, 2), int8] */;
  %1135 = shape_of(%var_6102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1136 = cast(%var_6102, dtype="int8") /* ty=Tensor[(4, 14, 2), int8] */;
  %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1138 = cast(%var_6117, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %1139 = reshape(%1138, newshape=[12, 16, 12]) /* ty=Tensor[(12, 16, 12), float32] */;
  %1140 = @func_2786(%1139) /* ty=(Tensor[(12, 16, 12), float32],) */;
  %1141 = bitwise_xor(%1136, %1137) /* ty=Tensor[(4, 14, 2), int8] */;
  %1142 = %1140.0;
  (%1141, %1142, %var_6117)
}

def @func_1865(%var_1863: Tensor[(520), int32]) -> (Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) {
  @func_1862(%var_1863) /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 13, 10), float32], Tensor[(520), int32], Tensor[(540), float64], Tensor[(450), float64]) */
}

def @func_2769() -> Tensor[(540), float64] {
  %1143 = fn () -> Tensor[(540), float64] {
    @func_2177() /* ty=Tensor[(540), float64] */
  };
  %1143() /* ty=Tensor[(540), float64] */
}

def @func_10037(%var_10036: Tensor[(9, 15, 13), int16]) -> (Tensor[(9, 15, 13), float32],) {
  %1156 = fn (%var_9992: Tensor[(9, 15, 13), int16]) -> (Tensor[(9, 15, 13), float32],) {
    %1144 = cast(%var_9992, dtype="bool") /* ty=Tensor[(9, 15, 13), bool] */;
    %1145 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(9, 15, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1146 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 15, 13), int16] */, dtype="bool") /* ty=Tensor[(9, 15, 13), bool] */;
    %1147 = dyn.reshape(%1144, %1145, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1148 = greater_equal(%1146, %1147) /* ty=Tensor[(9, 15, 13), bool] */;
    %1149 = cast(%1148, dtype="float32") /* ty=Tensor[(9, 15, 13), float32] */;
    %1150 = atanh(%1149) /* ty=Tensor[(9, 15, 13), float32] */;
    %1151 = cast(%1150, dtype="float32") /* ty=Tensor[(9, 15, 13), float32] */;
    %1152 = shape_of(%1148, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1153 = cast(%1148, dtype="float32") /* ty=Tensor[(9, 15, 13), float32] */;
    %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1155 = floor_divide(%1153, %1154) /* ty=Tensor[(9, 15, 13), float32] */;
    (%1155,)
  };
  %1156(%var_10036) /* ty=(Tensor[(9, 15, 13), float32],) */
}

def @func_2599(%var_2598: Tensor[(18, 84), uint16]) -> (Tensor[(540), float64], Tensor[(1512), uint16], Tensor[(18, 84), uint16]) {
  %1162 = fn (%var_2590: Tensor[(18, 84), uint16]) -> (Tensor[(540), float64], Tensor[(1512), uint16], Tensor[(18, 84), uint16]) {
    %1157 = cast(%var_2590, dtype="uint16") /* ty=Tensor[(18, 84), uint16] */;
    %1158 = reshape(%1157, newshape=[1512]) /* ty=Tensor[(1512), uint16] */;
    %1159 = @func_2571(%1158) /* ty=(Tensor[(540), float64], Tensor[(12, 9, 14), float64], Tensor[(1512), uint16]) */;
    %1160 = @func_2467() /* ty=Tensor[(540), float64] */;
    %1161 = %1159.2;
    (%1160, %1161, %var_2590)
  };
  %1162(%var_2598) /* ty=(Tensor[(540), float64], Tensor[(1512), uint16], Tensor[(18, 84), uint16]) */
}

def @func_6981() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  @func_6979() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_2700() -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) {
  @func_2698() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(540), float64]) */
}

def @func_7127() -> (Tensor[(540), float64],) {
  %1163 = @func_2768() /* ty=Tensor[(540), float64] */;
  (%1163,)
}

def @func_5532() -> (Tensor[(540), float64],) {
  %1164 = @func_4259() /* ty=(Tensor[(540), float64],) */;
  %1165 = %1164.0;
  (%1165,)
}

def @func_12184() -> (Tensor[(3, 2, 12), float32],) {
  @func_12182() /* ty=(Tensor[(3, 2, 12), float32],) */
}

def @func_7275() -> Tensor[(540), float64] {
  %1167 = fn () -> Tensor[(540), float64] {
    %1166 = @func_6557() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %1166.0
  };
  %1167() /* ty=Tensor[(540), float64] */
}

def @func_925(%var_923: Tensor[(2, 15, 15), float64], %var_924: Tensor[(2, 15, 15), float64]) -> (Tensor[(2, 15, 15), float64],) {
  @func_921(%var_923, %var_924) /* ty=(Tensor[(2, 15, 15), float64],) */
}

def @func_4225() -> Tensor[(540), float64] {
  %1169 = fn () -> Tensor[(540), float64] {
    %1168 = @func_1575() /* ty=(Tensor[(6, 4, 5), float32], Tensor[(4, 15, 9), bool], Tensor[(540), float64]) */;
    %1168.2
  };
  %1169() /* ty=Tensor[(540), float64] */
}

def @func_6131(%var_6128: Tensor[(4, 1, 1), float32], %var_6129: Tensor[(4, 14, 2), float32], %var_6130: Tensor[(2304), float32]) -> (Tensor[(4, 14, 2), int8], Tensor[(12, 16, 12), float32], Tensor[(2304), float32]) {
  @func_6126(%var_6128, %var_6129, %var_6130) /* ty=(Tensor[(4, 14, 2), int8], Tensor[(12, 16, 12), float32], Tensor[(2304), float32]) */
}

def @func_2440() -> (Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) {
  @func_2438() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(10, 45), float64]) */
}

def @func_8082() -> Tensor[(540), float64] {
  @func_8080() /* ty=Tensor[(540), float64] */
}

def @func_7423() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %1174 = fn () -> (Tensor[(540), float64], Tensor[(540), float64]) {
    %1170 = @func_5772() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %1171 = @func_5617() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %1172 = %1170.1;
    %1173 = %1171.1;
    (%1172, %1173)
  };
  %1174() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_8080() -> Tensor[(540), float64] {
  %1175 = @func_6599() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1175.1
}

def @func_3253() -> Tensor[(2, 15, 15), bool] {
  %1176 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  %1177 = cast(%1176, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %1178 = log2(%1177) /* ty=Tensor[(2, 15, 15), float64] */;
  %1179 = cast(%1178, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %1180 = shape_of(%1176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1181 = cast(%1176, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1181, %1182) /* ty=Tensor[(2, 15, 15), bool] */
}

def @func_12694() -> (Tensor[(540), float64],) {
  @func_12692() /* ty=(Tensor[(540), float64],) */
}

def @func_11353() -> (Tensor[(2, 15, 15), float32], Tensor[(540), float64]) {
  %1183 = @func_7156() /* ty=(Tensor[(2, 15, 15), float64], Tensor[(6, 4, 5), float32]) */;
  %1184 = %1183.0;
  %1185 = cast(%1184, dtype="float32") /* ty=Tensor[(2, 15, 15), float32] */;
  %1186 = tan(%1185) /* ty=Tensor[(2, 15, 15), float32] */;
  %1187 = @func_2768() /* ty=Tensor[(540), float64] */;
  (%1186, %1187)
}

def @func_3654(%var_3573: Tensor[(450, 1), float64]) -> (Tensor[(540), float64], Tensor[(156), uint32], Tensor[(156), uint32], Tensor[(2, 15, 15), bool], Tensor[(2, 15, 15), float64], Tensor[(540), float64], Tensor[(450, 1), float64], Tensor[(2, 15, 15), float64], Tensor[(12, 11, 15), float32], Tensor[(9, 220), float32], Tensor[(2, 15, 15), float64]) {
  %1188 = @func_2962() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1189 = cast(%var_3573, dtype="float64") /* ty=Tensor[(450, 1), float64] */;
  %1190 = cast(meta[relay.Constant][60] /* ty=Tensor[(156), uint32] */, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %1191 = reshape(%1189, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %1192 = reshape(%1190, newshape=[156]) /* ty=Tensor[(156), uint32] */;
  %1193 = @func_2854(%1191, %1192) /* ty=(Tensor[(2, 15, 15), int64], Tensor[(156), uint32], Tensor[(156), uint32]) */;
  %1194 = @func_3253() /* ty=Tensor[(2, 15, 15), bool] */;
  %1195 = cast(%1194, dtype="float64") /* ty=Tensor[(2, 15, 15), float64] */;
  %1196 = cast(%var_3573, dtype="float64") /* ty=Tensor[(450, 1), float64] */;
  %1197 = @func_3318() /* ty=(Tensor[(540), float64], Tensor[(9, 220), float32], Tensor[(490), bool], Tensor[(1512), float64]) */;
  %1198 = %1188.1;
  %1199 = %1193.1;
  %1200 = @func_3253() /* ty=Tensor[(2, 15, 15), bool] */;
  %1201 = log10(%1195) /* ty=Tensor[(2, 15, 15), float64] */;
  %1202 = @func_2879() /* ty=Tensor[(540), float64] */;
  %1203 = atan(%1196) /* ty=Tensor[(450, 1), float64] */;
  %1204 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  %1205 = @func_1960() /* ty=Tensor[(12, 11, 15), float32] */;
  %1206 = %1197.1;
  %1207 = @func_3049() /* ty=Tensor[(2, 15, 15), float64] */;
  (%1198, %1199, meta[relay.Constant][60] /* ty=Tensor[(156), uint32] */, %1200, %1201, %1202, %1203, %1204, %1205, %1206, %1207)
}

def @func_1117(%var_1094: Tensor[(4, 15, 9), float64], %var_1095: Tensor[(4, 15, 9), float64]) -> Tensor[(4, 15, 9), bool] {
  %1208 = cast(%var_1095, dtype="bool") /* ty=Tensor[(4, 15, 9), bool] */;
  %1209 = shape_of(%var_1094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1210 = cast(%var_1094, dtype="bool") /* ty=Tensor[(4, 15, 9), bool] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1210, %1211) /* ty=Tensor[(4, 15, 9), bool] */
}

def @func_10839() -> (Tensor[(540), float64], Tensor[(450), float64], Tensor[(450), float64]) {
  %1212 = @func_3801() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
  %1213 = cast(meta[relay.Constant][61] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1214 = reshape(%1213, newshape=[450]) /* ty=Tensor[(450), float64] */;
  %1215 = @func_10569(%1214) /* ty=(Tensor[(540), float64], Tensor[(4, 15, 9), bool], Tensor[(450), float64], Tensor[(520), int32]) */;
  %1216 = %1212.1;
  %1217 = %1215.2;
  (%1216, %1217, meta[relay.Constant][61] /* ty=Tensor[(450), float64] */)
}

def @func_3100() -> (Tensor[(540), float64],) {
  %1220 = fn () -> (Tensor[(540), float64],) {
    %1218 = @func_2651() /* ty=(Tensor[(540), float64],) */;
    %1219 = %1218.0;
    (%1219,)
  };
  %1220() /* ty=(Tensor[(540), float64],) */
}

def @func_7744() -> Tensor[(540), float64] {
  %1221 = fn () -> Tensor[(540), float64] {
    @func_2879() /* ty=Tensor[(540), float64] */
  };
  %1221() /* ty=Tensor[(540), float64] */
}

def @func_9326() -> (Tensor[(540), float64], Tensor[(540), float64]) {
  %1222 = @func_4224() /* ty=Tensor[(540), float64] */;
  %1223 = @func_7642() /* ty=Tensor[(540), float64] */;
  (%1222, %1223)
}

def @func_1363(%var_1342: Tensor[(4, 13, 10), int32]) -> (Tensor[(2, 15, 15), float64], Tensor[(450), float64], Tensor[(4, 13, 10), float32]) {
  %1224 = cast(meta[relay.Constant][62] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1225 = cast(meta[relay.Constant][62] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1226 = reshape(%1224, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %1227 = reshape(%1225, newshape=[2, 15, 15]) /* ty=Tensor[(2, 15, 15), float64] */;
  %1228 = @func_921(%1226, %1227) /* ty=(Tensor[(2, 15, 15), float64],) */;
  %1229 = cast(meta[relay.Constant][63] /* ty=Tensor[(4, 13, 10), int32] */, dtype="int32") /* ty=Tensor[(4, 13, 10), int32] */;
  %1230 = shape_of(%var_1342, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1231 = cast(%var_1342, dtype="int32") /* ty=Tensor[(4, 13, 10), int32] */;
  %1232 = dyn.reshape(%1229, %1230, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1233 = add(%1231, %1232) /* ty=Tensor[(4, 13, 10), int32] */;
  %1234 = cast(%1233, dtype="float32") /* ty=Tensor[(4, 13, 10), float32] */;
  %1235 = %1228.0;
  %1236 = atan(%1234) /* ty=Tensor[(4, 13, 10), float32] */;
  (%1235, meta[relay.Constant][62] /* ty=Tensor[(450), float64] */, %1236)
}

def @func_5599(%var_5597: float64, %var_5598: Tensor[(7, 12, 1), float64]) -> (Tensor[(7, 12, 1), float64], Tensor[(3, 6, 4), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) {
  @func_5595(%var_5597, %var_5598) /* ty=(Tensor[(7, 12, 1), float64], Tensor[(3, 6, 4), float64], Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */
}

def @func_5930() -> Tensor[(1512), float64] {
  %1238 = fn () -> Tensor[(1512), float64] {
    %1237 = @func_5022() /* ty=(Tensor[(1512), float64],) */;
    %1237.0
  };
  %1238() /* ty=Tensor[(1512), float64] */
}

def @func_8028(%var_7961: Tensor[(11, 10, 9), uint64]) -> (Tensor[(11, 10, 9), bool], Tensor[(540), float64], Tensor[(11, 10, 9), int8], Tensor[(540), float64], Tensor[(540), float64], Tensor[(540), float64]) {
  %1239 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 10, 9), uint64] */, dtype="bool") /* ty=Tensor[(11, 10, 9), bool] */;
  %1240 = shape_of(%var_7961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1241 = cast(%var_7961, dtype="bool") /* ty=Tensor[(11, 10, 9), bool] */;
  %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1243 = @func_4119() /* ty=(Tensor[(540), float64],) */;
  %1244 = cast(%var_7961, dtype="int8") /* ty=Tensor[(11, 10, 9), int8] */;
  %1245 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(11, 10, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1246 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 10, 9), uint64] */, dtype="int8") /* ty=Tensor[(11, 10, 9), int8] */;
  %1247 = dyn.reshape(%1244, %1245, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1248 = less(%1241, %1242) /* ty=Tensor[(11, 10, 9), bool] */;
  %1249 = %1243.0;
  %1250 = add(%1246, %1247) /* ty=Tensor[(11, 10, 9), int8] */;
  %1251 = @func_2768() /* ty=Tensor[(540), float64] */;
  %1252 = @func_3706() /* ty=Tensor[(540), float64] */;
  %1253 = @func_3065() /* ty=Tensor[(540), float64] */;
  (%1248, %1249, %1250, %1251, %1252, %1253)
}

def @func_7531() -> (Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(2, 15, 15), float64]) {
  @func_7529() /* ty=(Tensor[(540), float64], Tensor[(10, 45), float64], Tensor[(2, 15, 15), float64]) */
}

def @func_8689(%var_8687: Tensor[(15, 1, 12), float32]) -> Tensor[(15, 1, 12), float32] {
  @func_8686(%var_8687) /* ty=Tensor[(15, 1, 12), float32] */
}

def @func_9233() -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(490), bool]) {
  %1261 = fn () -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(490), bool]) {
    %1254 = @func_5772() /* ty=(Tensor[(540), float64], Tensor[(540), float64]) */;
    %1255 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
    %1256 = @func_6255() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(1512), float64], Tensor[(10, 7, 7), bool], Tensor[(490), bool]) */;
    %1257 = %1254.0;
    %1258 = @func_2467() /* ty=Tensor[(540), float64] */;
    %1259 = %1255.2;
    %1260 = %1256.4;
    (%1257, %1258, %1259, %1260)
  };
  %1261() /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(450), float64], Tensor[(490), bool]) */
}

def @func_6325() -> (Tensor[(540), float64], Tensor[(13, 13, 9), float32], Tensor[(1521), float32], Tensor[(450), float64]) {
  %1262 = cast(meta[relay.Constant][65] /* ty=Tensor[(1521), float32] */, dtype="float32") /* ty=Tensor[(1521), float32] */;
  %1263 = reshape(%1262, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), float32] */;
  %1264 = @func_78(%1263) /* ty=(Tensor[(13, 13, 9), float32],) */;
  %1265 = @func_2640() /* ty=(Tensor[(540), float64], Tensor[(2, 15, 15), float64], Tensor[(450), float64]) */;
  %1266 = @func_5511() /* ty=Tensor[(540), float64] */;
  %1267 = %1264.0;
  %1268 = %1265.2;
  (%1266, %1267, meta[relay.Constant][65] /* ty=Tensor[(1521), float32] */, %1268)
}

def @func_6707() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32]) {
  @func_6705() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */
}

def @func_7657() -> (Tensor[(540), float64], Tensor[(6, 4, 5), float32]) {
  @func_7655() /* ty=(Tensor[(540), float64], Tensor[(6, 4, 5), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen570/build/output.py:4102: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen570/build/output.py", line 4107, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(432) tvmgen_default_fused_sinh_kernel0(double* __restrict__ T_sinh, double* __restrict__ placeholder) {
  T_sinh[(((int)threadIdx.x))] = sinh(placeholder[(((int)threadIdx.x))]);
}

extern "C" __global__ void __launch_bounds__(432) tvmgen_default_fused_cast_cast_reshape_less_equal_kernel0(signed char* __restrict__ T_less_equal, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_less_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) <= ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

